{"buggy_code": ["<?php\n\n/**\n * The FAQ record editor.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2003-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2003-02-23\n */\n\nuse phpMyFAQ\\Attachment\\AttachmentFactory;\nuse phpMyFAQ\\Category;\nuse phpMyFAQ\\Category\\CategoryRelation;\nuse phpMyFAQ\\Changelog;\nuse phpMyFAQ\\Database;\nuse phpMyFAQ\\Date;\nuse phpMyFAQ\\Faq;\nuse phpMyFAQ\\Faq\\FaqPermission;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Helper\\CategoryHelper;\nuse phpMyFAQ\\Helper\\LanguageHelper;\nuse phpMyFAQ\\Helper\\UserHelper;\nuse phpMyFAQ\\Link;\nuse phpMyFAQ\\Logging;\nuse phpMyFAQ\\Question;\nuse phpMyFAQ\\Revision;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\Tags;\nuse phpMyFAQ\\User;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\n$currentUserId = $user->getUserId();\n\nif (\n    ($user->perm->hasPermission($currentUserId, 'edit_faq') ||\n     $user->perm->hasPermission($currentUserId, 'add_faq')) && !Database::checkOnEmptyTable('faqcategories')\n) {\n    $category = new Category($faqConfig, [], false);\n\n    if ($faqConfig->get('main.enableCategoryRestrictions')) {\n        $category = new Category($faqConfig, $currentAdminGroups, true);\n    }\n\n    $category->setUser($currentAdminUser);\n    $category->setGroups($currentAdminGroups);\n    $category->buildCategoryTree();\n\n    $categoryRelation = new CategoryRelation($faqConfig);\n\n    $categoryHelper = new CategoryHelper();\n    $categoryHelper->setCategory($category);\n\n    $faq = new Faq($faqConfig);\n\n    $faqPermission = new FaqPermission($faqConfig);\n\n    $questionObject = new Question($faqConfig);\n\n    $changelog = new Changelog($faqConfig);\n\n    $userHelper = new UserHelper($user);\n\n    $selectedCategory = '';\n    $categories = [];\n    $faqData = [\n        'id' => 0,\n        'lang' => $faqLangCode,\n        'revision_id' => 0,\n        'title' => '',\n        'dateStart' => '',\n        'dateEnd' => '',\n    ];\n\n    $tagging = new Tags($faqConfig);\n    $date = new Date($faqConfig);\n\n    if ('takequestion' === $action) {\n        $questionId = Filter::filterInput(INPUT_GET, 'id', FILTER_VALIDATE_INT);\n        $question = $questionObject->getQuestion($questionId);\n        $selectedCategory = $question['category_id'];\n        $faqData['title'] = $question['question'];\n        $notifyUser = $question['username'];\n        $notifyEmail = $question['email'];\n        $categories = [\n            'category_id' => $selectedCategory,\n            'category_lang' => $faqData['lang'],\n        ];\n    } else {\n        $questionId = 0;\n        $notifyUser = '';\n        $notifyEmail = '';\n    }\n\n    if ('editpreview' === $action) {\n        $faqData['id'] = Filter::filterInput(INPUT_POST, 'id', FILTER_VALIDATE_INT);\n        if (!is_null($faqData['id'])) {\n            $queryString = 'saveentry&id=' . $faqData['id'];\n        } else {\n            $queryString = 'insertentry';\n        }\n\n        $faqData['lang'] = Filter::filterInput(INPUT_POST, 'lang', FILTER_UNSAFE_RAW);\n        $selectedCategory = Filter::filterInputArray(\n            INPUT_POST,\n            [\n                'rubrik' => [\n                    'filter' => FILTER_VALIDATE_INT,\n                    'flags' => FILTER_REQUIRE_ARRAY,\n                ],\n            ]\n        );\n        if (is_array($selectedCategory)) {\n            foreach ($selectedCategory as $cats) {\n                $categories[] = ['category_id' => $cats, 'category_lang' => $faqData['lang']];\n            }\n        }\n        $faqData['active'] = Filter::filterInput(INPUT_POST, 'active', FILTER_UNSAFE_RAW);\n        $faqData['keywords'] = Filter::filterInput(INPUT_POST, 'keywords', FILTER_UNSAFE_RAW);\n        $faqData['title'] = Filter::filterInput(INPUT_POST, 'thema', FILTER_UNSAFE_RAW);\n        $faqData['content'] = Filter::filterInput(INPUT_POST, 'content', FILTER_SANITIZE_SPECIAL_CHARS);\n        $faqData['author'] = Filter::filterInput(INPUT_POST, 'author', FILTER_UNSAFE_RAW);\n        $faqData['email'] = Filter::filterInput(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL);\n        $faqData['comment'] = Filter::filterInput(INPUT_POST, 'comment', FILTER_UNSAFE_RAW);\n        $faqData['solution_id'] = Filter::filterInput(INPUT_POST, 'solution_id', FILTER_VALIDATE_INT);\n        $faqData['revision_id'] = Filter::filterInput(INPUT_POST, 'revision_id', FILTER_VALIDATE_INT, 0);\n        $faqData['sticky'] = Filter::filterInput(INPUT_POST, 'sticky', FILTER_VALIDATE_INT);\n        $faqData['tags'] = Filter::filterInput(INPUT_POST, 'tags', FILTER_UNSAFE_RAW);\n        $faqData['changed'] = Filter::filterInput(INPUT_POST, 'changed', FILTER_UNSAFE_RAW);\n        $faqData['dateStart'] = Filter::filterInput(INPUT_POST, 'dateStart', FILTER_UNSAFE_RAW);\n        $faqData['dateEnd'] = Filter::filterInput(INPUT_POST, 'dateEnd', FILTER_UNSAFE_RAW);\n        $faqData['content'] = html_entity_decode($faqData['content']);\n    } elseif ('editentry' === $action) {\n        $id = Filter::filterInput(INPUT_GET, 'id', FILTER_VALIDATE_INT);\n        $lang = Filter::filterInput(INPUT_GET, 'lang', FILTER_UNSAFE_RAW);\n        $translateTo = Filter::filterInput(INPUT_GET, 'translateTo', FILTER_UNSAFE_RAW);\n        $categoryId = Filter::filterInput(INPUT_GET, 'cat', FILTER_VALIDATE_INT);\n\n        if (!is_null($translateTo)) {\n            $faqData['lang'] = $lang = $translateTo;\n        }\n\n        if ((!isset($selectedCategory) && !isset($faqData['title'])) || !is_null($id)) {\n            $logging = new Logging($faqConfig);\n            $logging->logAdmin($user, 'admin-edit-faq, ' . $id);\n\n            $categories = $categoryRelation->getCategories($id, $lang);\n\n            $faq->getRecord($id, null, true);\n            $faqData = $faq->faqRecord;\n            $faqData['tags'] = implode(', ', $tagging->getAllTagsById($faqData['id']));\n            $queryString = 'saveentry&amp;id=' . $faqData['id'];\n        } else {\n            $queryString = 'insertentry';\n            if (isset($categoryId)) {\n                $categories = ['category_id' => $categoryId, 'category_lang' => $lang];\n            }\n        }\n    } elseif ('copyentry' === $action) {\n        $faqData['id'] = Filter::filterInput(INPUT_GET, 'id', FILTER_VALIDATE_INT);\n        $faqData['lang'] = Filter::filterInput(INPUT_GET, 'lang', FILTER_UNSAFE_RAW);\n        $categories = $categoryRelation->getCategories($faqData['id'], $faqData['lang']);\n\n        $faq->getRecord($faqData['id'], null, true);\n\n        $faqData = $faq->faqRecord;\n        $queryString = 'insertentry';\n    } else {\n        $logging = new Logging($faqConfig);\n        $logging->logAdmin($user, 'admin-add-faq');\n        $queryString = 'insertentry';\n        if (!is_array($categories)) {\n            $categories = [];\n        }\n    }\n\n    // Revisions\n    $selectedRevisionId = Filter::filterInput(INPUT_POST, 'revisionid_selected', FILTER_VALIDATE_INT);\n    if (is_null($selectedRevisionId)) {\n        $selectedRevisionId = $faqData['revision_id'];\n    }\n\n    // User permissions\n    $userPermission = $faqPermission->get(FaqPermission::USER, $faqData['id']);\n    if (count($userPermission) == 0 || $userPermission[0] == -1) {\n        $allUsers = true;\n        $restrictedUsers = false;\n        $userPermission[0] = -1;\n    } else {\n        $allUsers = false;\n        $restrictedUsers = true;\n    }\n\n    // Group permissions\n    $groupPermission = $faqPermission->get(FaqPermission::GROUP, $faqData['id']);\n    if (count($groupPermission) == 0 || $groupPermission[0] == -1) {\n        $allGroups = true;\n        $restrictedGroups = false;\n        $groupPermission[0] = -1;\n    } else {\n        $allGroups = false;\n        $restrictedGroups = true;\n    }\n\n    // Set data for forms\n    $faqData['title'] = (isset($faqData['title']) ? Strings::htmlspecialchars($faqData['title']) : '');\n    $faqData['content'] = (isset($faqData['content']) ? trim(Strings::htmlentities($faqData['content'])) : '');\n    $faqData['tags'] = (isset($faqData['tags']) ? Strings::htmlspecialchars($faqData['tags']) : '');\n    $faqData['keywords'] = (isset($faqData['keywords']) ? Strings::htmlspecialchars($faqData['keywords']) : '');\n    $faqData['author'] = (isset($faqData['author']) ? Strings::htmlspecialchars(\n        $faqData['author']\n    ) : $user->getUserData('display_name'));\n    $faqData['email'] = (isset($faqData['email']) ? Strings::htmlspecialchars($faqData['email']) : $user->getUserData(\n        'email'\n    ));\n    $faqData['isoDate'] = ($faqData['date'] ?? date('Y-m-d H:i'));\n    $faqData['date'] = (isset($faqData['date']) ? $date->format($faqData['date']) : $date->format(date('Y-m-d H:i')));\n    $faqData['changed'] = ($faqData['changed'] ?? '');\n\n    if (isset($faqData['comment']) && $faqData['comment'] == 'y') {\n        $faqData['comment'] = ' checked';\n    } elseif ($faqConfig->get('records.defaultAllowComments')) {\n        $faqData['comment'] = ' checked';\n    } else {\n        $faqData['comment'] = '';\n    }\n\n    // Header\n    if (0 !== $faqData['id'] && 'copyentry' !== $action) {\n        $currentRevision = sprintf('%s 1.%d', $PMF_LANG['ad_entry_revision'], $selectedRevisionId);\n        $faqUrl = sprintf(\n            '%sindex.php?action=faq&cat=%s&id=%d&artlang=%s',\n            $faqConfig->getDefaultUrl(),\n            array_values($categories)[0]['category_id'],\n            $faqData['id'],\n            $faqData['lang']\n        );\n        $link = new Link($faqUrl, $faqConfig);\n        $link->itemTitle = $faqData['title'];\n        ?>\n        <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n            <h1 class=\"h2\">\n                <i aria-hidden=\"true\" class=\"fa fa-edit\"></i>\n                <?= $PMF_LANG['ad_entry_edit_1'] ?>\n                <?= $PMF_LANG['ad_entry_edit_2'] ?>\n            </h1>\n            <div class=\"btn-toolbar mb-2 mb-md-0\">\n                <div class=\"btn-group mr-2\">\n              <span class=\"btn btn-sm btn-info\">\n                <i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i>\n                <?= $currentRevision ?>\n              </span>\n                    <a href=\"<?= $link->toString() ?>\" class=\"btn btn-sm btn-success\">\n                        <i class=\"fa fa-arrow-alt-circle-right\" aria-hidden=\"true\"></i>\n                        <?= $PMF_LANG['ad_view_faq'] ?>\n                    </a>\n                </div>\n            </div>\n        </div>\n\n    <?php } else { ?>\n        <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n            <h1 class=\"h2\">\n                <i aria-hidden=\"true\" class=\"fa fa-edit\"></i>\n                <?= $PMF_LANG['ad_entry_add'] ?>\n            </h1>\n        </div>\n\n    <?php } ?>\n\n        <div class=\"row\">\n            <div class=\"col-lg-9\">\n                <div class=\"card mb-4\">\n                    <div class=\"card-header\">\n                        <ul class=\"nav nav-tabs card-header-tabs\" id=\"nav-tab\" role=\"tablist\">\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#tab-question-answer\" role=\"tab\">\n                                    <i class=\"fa fa-pencil-square-o\"></i> <?= $PMF_LANG['ad_record_faq'] ?>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" data-toggle=\"tab\" href=\"#tab-meta-data\" role=\"tab\">\n                                    <i class=\"fa fa-database\"></i> <?= $PMF_LANG['ad_menu_faq_meta'] ?>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" data-toggle=\"tab\" href=\"#tab-permissions\" role=\"tab\">\n                                    <i class=\"fa fa-unlock-alt\"></i> <?= $PMF_LANG['ad_record_permissions'] ?>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" data-toggle=\"tab\" href=\"#tab-notes-changelog\" role=\"tab\">\n                                    <i class=\"fa fa-sticky-note-o\"></i> <?= $PMF_LANG['ad_admin_notes'] . ' / ' . $PMF_LANG['ad_entry_changelog'] ?>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"tab-content\">\n                            <div class=\"tab-pane active\" id=\"tab-question-answer\">\n                                <!-- Revision -->\n                                <?php\n                                if ($user->perm->hasPermission($currentUserId, 'changebtrevs')) {\n                                    $faqRevision = new Revision($faqConfig);\n                                    $revisions = $faqRevision->get($faqData['id'], $faqData['lang'], $faqData['author']);\n                                    if (count($revisions)) { ?>\n                                        <div class=\"form-group\">\n                                            <form id=\"selectRevision\" name=\"selectRevision\" method=\"post\"\n                                                  action=\"?action=editentry&amp;id=<?= $faqData['id'] ?>&amp;lang=<?= $faqData['lang'] ?>\">\n                                                <select name=\"revisionid_selected\" onchange=\"this.form.submit();\"\n                                                        class=\"form-control\">\n                                                    <option value=\"<?= $faqData['revision_id'] ?>\">\n                                                        <?= $PMF_LANG['ad_changerev'] ?>\n                                                    </option>\n                                                    <?php foreach ($revisions as $revisionId => $revisionData) { ?>\n                                                        <option value=\"<?= $revisionData['revision_id'] ?>\" <?php if ($selectedRevisionId == $revisionData['revision_id']) {\n                                                            echo 'selected';\n                                                                       }\n                                                                        ?>>\n                                                            <?php printf(\n                                                                '%s 1.%d: %s - %s',\n                                                                $PMF_LANG['ad_entry_revision'],\n                                                                $revisionData['revision_id'],\n                                                                Date::createIsoDate($revisionData['updated']),\n                                                                $revisionData['author']\n                                                            );\n                                                            ?>\n                                                        </option>\n                                                        <?php\n                                                    }\n                                                    ?>\n                                                </select>\n                                            </form>\n                                        </div>\n                                    <?php }\n                                    if (\n                                        isset($selectedRevisionId) &&\n                                        isset($faqData['revision_id']) &&\n                                        $selectedRevisionId !== $faqData['revision_id']\n                                    ) {\n                                        $faq->language = $faqData['lang'];\n                                        $faq->getRecord($faqData['id'], $selectedRevisionId, true);\n                                        $faqData = $faq->faqRecord;\n                                        $faqData['tags'] = implode(', ', $tagging->getAllTagsById($faqData['id']));\n                                        $faqData['revision_id'] = $selectedRevisionId;\n                                    }\n                                } ?>\n\n                              <form id=\"faqEditor\" action=\"?action=<?= $queryString ?>\" method=\"post\">\n                                <input type=\"hidden\" name=\"revision_id\" id=\"revision_id\" value=\"<?= $faqData['revision_id'] ?>\">\n                                <input type=\"hidden\" name=\"record_id\" id=\"record_id\" value=\"<?= $faqData['id'] ?>\">\n                                <input type=\"hidden\" name=\"csrf\" id=\"csrf\" value=\"<?= $user->getCsrfTokenFromSession() ?>\">\n                                <input type=\"hidden\" name=\"openQuestionId\" id=\"openQuestionId\" value=\"<?= $questionId ?>\">\n                                <input type=\"hidden\" name=\"notifyUser\" id=\"notifyUser\" value=\"<?= $notifyUser ?>\">\n                                <input type=\"hidden\" name=\"notifyEmail\" id=\"notifyEmail\" value=\"<?= $notifyEmail ?>\">\n\n                                <!-- Question -->\n                                <div class=\"form-group\">\n                                    <input type=\"text\" name=\"question\" id=\"question\"\n                                           class=\"form-control form-control-lg\"\n                                           placeholder=\"<?= $PMF_LANG['ad_entry_theme'] ?>\"\n                                           value=\"<?= Strings::htmlentities($faqData['title']) ?>\">\n                                </div>\n\n                                <!-- Answer -->\n                                <?php if ($faqConfig->get('main.enableWysiwygEditor')) : ?>\n                                    <div class=\"form-group row\">\n                                        <div class=\"col-lg-12\">\n                                            <noscript>Please enable JavaScript to use the WYSIWYG editor!</noscript>\n                                            <textarea id=\"answer\" name=\"answer\" class=\"form-control\" rows=\"7\"\n                                                      placeholder=\"<?= $PMF_LANG['ad_entry_content'] ?>\"\n                                            ><?= $faqData['content'] ?></textarea>\n                                        </div>\n                                    </div>\n                                <?php endif; ?>\n                                <?php if ($faqConfig->get('main.enableMarkdownEditor')) : ?>\n                                    <div class=\"form-group row\">\n                                      <div class=\"col-lg-12\">\n                                        <ul class=\"nav nav-tabs markdown-tabs mb-2\">\n                                          <li class=\"nav-item\">\n                                            <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#text\">Text</a>\n                                          </li>\n                                          <li class=\"nav-item\">\n                                            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#preview\" data-markdown-tab=\"preview\">Preview</a>\n                                          </li>\n                                        </ul>\n                                        <div class=\"tab-content\">\n                                          <div class=\"tab-pane active\" id=\"text\">\n                                            <div class=\"form-group row\">\n                                              <div class=\"col-lg-12\">\n                                                <textarea id=\"answer-markdown\" name=\"answer\" class=\"form-control\"\n                                                          rows=\"7\" placeholder=\"<?= $PMF_LANG['ad_entry_content'] ?>\"\n                                                ><?= $faqData['content'] ?></textarea>\n                                              </div>\n                                            </div>\n                                          </div>\n                                          <div class=\"tab-pane\" id=\"preview\">\n                                            <article class=\"markdown-preview\"></article>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                <?php endif; ?>\n                            </div>\n                            <div class=\"tab-pane\" id=\"tab-meta-data\">\n                                <!-- Categories -->\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"phpmyfaq-categories\">\n                                        <?= $PMF_LANG['ad_entry_category'] ?>\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <select name=\"rubrik[]\" id=\"phpmyfaq-categories\" size=\"5\" multiple\n                                                class=\"form-control\">\n                                            <?= $categoryHelper->renderOptions($categories) ?>\n                                        </select>\n                                    </div>\n                                </div>\n\n                                <!-- Language -->\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"lang\">\n                                        <?= $PMF_LANG['ad_entry_locale'] ?>:\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <?= LanguageHelper::renderSelectLanguage($faqData['lang'], false, [], 'lang') ?>\n                                    </div>\n                                </div>\n\n                                <!-- Attachments -->\n                                <?php if ($user->perm->hasPermission($currentUserId, 'addattachment')) : ?>\n                                    <div class=\"form-group row\">\n                                        <label class=\"col-lg-2 col-form-label\">\n                                            <?= $PMF_LANG['ad_menu_attachments'] ?>:\n                                        </label>\n                                        <div class=\"col-lg-10\">\n                                            <ul class=\"list-unstyled adminAttachments\">\n                                                <?php\n                                                $attList = AttachmentFactory::fetchByRecordId(\n                                                    $faqConfig,\n                                                    $faqData['id']\n                                                );\n                                                foreach ($attList as $att) {\n                                                    printf(\n                                                        '<li><a href=\"../%s\">%s</a> ',\n                                                        $att->buildUrl(),\n                                                        $att->getFilename()\n                                                    );\n                                                    if ($user->perm->hasPermission($currentUserId, 'delattachment')) {\n                                                        printf(\n                                                            '<a class=\"badge badge-danger\" href=\"?action=delatt&amp;record_id=%d&amp;id=%d&amp;lang=%s\"><i aria-hidden=\"true\" class=\"fa fa-trash\"></i></a>',\n                                                            $faqData['id'],\n                                                            $att->getId(),\n                                                            $faqData['lang']\n                                                        );\n                                                    }\n                                                    echo \"</li>\\n\";\n                                                }\n                                                ?>\n                                            </ul>\n                                            <?php\n                                            printf(\n                                                '<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#attachmentModal\">%s</button>',\n                                                $PMF_LANG['ad_att_add']\n                                            );\n                                            ?>\n                                        </div>\n                                    </div>\n                                <?php endif; ?>\n\n                                <!-- Tags -->\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"tags\">\n                                        <?= $PMF_LANG['ad_entry_tags'] ?>:\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <input type=\"text\" name=\"tags\" id=\"tags\" value=\"<?= $faqData['tags'] ?>\"\n                                               autocomplete=\"off\"\n                                               class=\"form-control pmf-tags-autocomplete\"\n                                               data-tag-list=\"<?= $faqData['tags'] ?>\">\n                                        <small id=\"tagsHelp\"\n                                               class=\"form-text text-muted\"><?= $PMF_LANG['msgShowHelp'] ?></small>\n                                    </div>\n                                </div>\n\n                                <!-- Keywords -->\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"keywords\">\n                                        <?= $PMF_LANG['ad_entry_keywords'] ?>:\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <input type=\"text\" name=\"keywords\" id=\"keywords\" maxlength=\"255\"\n                                               class=\"form-control\"\n                                               value=\"<?= $faqData['keywords'] ?>\">\n                                        <small id=\"keywordsHelp\"\n                                               class=\"form-text text-muted\"><?= $PMF_LANG['msgShowHelp'] ?></small>\n                                    </div>\n                                </div>\n\n                                <!-- Author -->\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"author\">\n                                        <?= $PMF_LANG['ad_entry_author'] ?>\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <input type=\"text\" name=\"author\" id=\"author\" value=\"<?= $faqData['author'] ?>\"\n                                               class=\"form-control\">\n                                    </div>\n                                </div>\n\n                                <!-- E-Mail -->\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"email\">\n                                        <?= $PMF_LANG['ad_entry_email'] ?>\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <input type=\"email\" name=\"email\" id=\"email\" value=\"<?= $faqData['email'] ?>\"\n                                               class=\"form-control\">\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"tab-pane\" id=\"tab-permissions\">\n                                <!-- Permissions -->\n                                <?php if ($faqConfig->get('security.permLevel') !== 'basic') : ?>\n                                    <fieldset class=\"form-group\">\n                                        <div class=\"row\">\n                                            <legend class=\"col-lg-2 col-form-label pt-0\">\n                                              <?= $PMF_LANG['ad_entry_grouppermission'] ?>\n                                            </legend>\n                                            <div class=\"col-lg-10\">\n                                              <div class=\"form-check\">\n                                                <input type=\"radio\" id=\"allgroups\" name=\"grouppermission\"\n                                                       value=\"all\" class=\"form-check-input\"\n                                                  <?php echo($allGroups ? 'checked' : ''); ?>>\n                                                <label class=\"form-check-label\" for=\"allgroups\">\n                                                  <?= $PMF_LANG['ad_entry_all_groups'] ?>\n                                                </label>\n                                              </div>\n                                              <div class=\"form-check\">\n                                                <input type=\"radio\" id=\"restrictedgroups\" name=\"grouppermission\"\n                                                       class=\"form-check-input\"\n                                                       value=\"restricted\" <?php echo($restrictedGroups ? 'checked' : ''); ?>>\n                                                <label for=\"selected-groups\" class=\"form-check-label\"\n                                                       for=\"restrictedgroups\">\n                                                  <?= $PMF_LANG['ad_entry_restricted_groups'] ?>\n                                                </label>\n                                                <select id=\"selected-groups\" name=\"restricted_groups[]\" size=\"3\"\n                                                        class=\"form-control\" multiple>\n                                                    <?= $user->perm->getAllGroupsOptions($groupPermission, $user) ?>\n                                                </select>\n                                              </div>\n                                            </div>\n                                        </div>\n                                    </fieldset>\n                                <?php else : ?>\n                                    <input type=\"hidden\" name=\"grouppermission\" value=\"all\">\n                                <?php endif; ?>\n\n                                <fieldset class=\"form-group\">\n                                    <div class=\"row\">\n                                        <legend class=\"col-lg-2 col-form-label pt-0\"><?= $PMF_LANG['ad_entry_userpermission'] ?></legend>\n                                        <div class=\"col-lg-10\">\n                                            <div class=\"form-check\">\n                                                <input type=\"radio\" id=\"allusers\" name=\"userpermission\" value=\"all\"\n                                                       class=\"form-check-input\"\n                                                       <?= $allUsers ? 'checked' : '' ?>>\n                                                <label class=\"form-check-label\" for=\"allusers\">\n                                                    <?= $PMF_LANG['ad_entry_all_users'] ?>\n                                                </label>\n                                            </div>\n                                            <div class=\"form-check\">\n                                                <input type=\"radio\" id=\"restrictedusers\" name=\"userpermission\"\n                                                       class=\"form-check-input\"\n                                                       value=\"restricted\" <?= $restrictedUsers ? 'checked' : '' ?>>\n                                                <label class=\"form-check-label\" for=\"restrictedusers\">\n                                                    <?= $PMF_LANG['ad_entry_restricted_users'] ?>\n                                                </label>\n                                                <select name=\"restricted_users\" class=\"form-control\">\n                                                    <?= $userHelper->getAllUserOptions($userPermission[0], false) ?>\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </fieldset>\n\n                            </div>\n\n                            <div class=\"tab-pane\" id=\"tab-notes-changelog\">\n                                <h6 class=\"card-title sr-only\">\n                                    <?= $PMF_LANG['ad_entry_changelog'] ?>\n                                </h6>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"changelog-date\">\n                                        <?= $PMF_LANG['ad_entry_date'] ?>\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"changelog-date\"\n                                               value=\"<?= $faqData['date'] ?>\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"changed\">\n                                        <?= $PMF_LANG['ad_entry_changed'] ?>\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <textarea name=\"changed\" id=\"changed\" rows=\"3\" class=\"form-control\"\n                                        ><?= $faqData['changed'] ?></textarea>\n                                    </div>\n                                </div>\n\n                                <h6 class=\"card-title\">\n                                    <label for=\"notes\">\n                                        <?php printf($PMF_LANG['ad_admin_notes_hint'], $PMF_LANG['ad_admin_notes']) ?>\n                                    </label>\n                                </h6>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-lg-10 offset-lg-2\">\n                                        <textarea id=\"notes\" name=\"notes\" class=\"form-control\" rows=\"3\"\n                                        ><?= isset($faqData['notes']) ? $faqData['notes'] : '' ?></textarea>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\">\n                                    <div class=\"col-lg-2\">\n                                        <h6 class=\"card-title\">\n                                            <?= $PMF_LANG['ad_entry_changelog_history'] ?>\n                                        </h6>\n                                    </div>\n                                    <div class=\"col-lg-10\">\n                                        <ul>\n                                            <?php foreach ($changelog->getChangeEntries($faqData['id']) as $entry) {\n                                                $entryUser = new User($faqConfig);\n                                                $entryUser->getUserById($entry['user']);\n                                                ?>\n                                                <li class=\"small pt-0\">\n                                                    <?php printf(\n                                                        '<i class=\"fa fa-hand-o-right\"></i> %s  1.%d <i class=\"fa fa-calendar\"></i> %s <i class=\"fa fa-user\"></i> %s',\n                                                        $PMF_LANG['ad_entry_revision'],\n                                                        $entry['revision_id'],\n                                                        $date->format(date('Y-m-d H:i', $entry['date'])),\n                                                        $entryUser->getUserData('display_name')\n                                                    );\n                                                    ?>\n                                                    <br>\n                                                    <?= $entry['changelog'] ?>\n                                                </li>\n                                            <?php } ?>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Sidebar -->\n            <div class=\"col-lg-3\">\n                <div id=\"accordion\" role=\"tablist\">\n                    <div class=\"card mb-4\">\n                        <div class=\"card-header text-center\" role=\"tab\" id=\"pmf-heading-date\">\n                            <?php if ($selectedRevisionId === $faqData['revision_id']) : ?>\n                                <button class=\"btn btn-lg btn-info\" type=\"reset\">\n                                    <?= $PMF_LANG['ad_gen_reset'] ?>\n                                </button>\n                                <button class=\"btn btn-lg btn-primary\" type=\"submit\">\n                                    <?= $PMF_LANG['ad_entry_save'] ?>\n                                </button>\n                            <?php endif ?>\n\n                        </div>\n                        <div class=\"card-body\">\n                            <h5 class=\"mb-0\">\n                                <?= $PMF_LANG['ad_entry_date'] ?>\n                            </h5>\n                            <div class=\"form-group\">\n                                <div class=\"form-check\">\n                                    <input type=\"radio\" id=\"dateActualize\" checked name=\"recordDateHandling\"\n                                           class=\"form-check-input\"\n                                           onchange=\"setRecordDate(this.id);\">\n                                    <label class=\"form-check-label\" for=\"dateActualize\">\n                                        <?= $PMF_LANG['msgUpdateFaqDate'] ?>\n                                    </label>\n                                </div>\n                                <div class=\"form-check\">\n                                    <input type=\"radio\" id=\"dateKeep\" name=\"recordDateHandling\" class=\"form-check-input\"\n                                           onchange=\"setRecordDate(this.id);\">\n                                    <label class=\"form-check-label\" for=\"dateKeep\">\n                                        <?= $PMF_LANG['msgKeepFaqDate'] ?>\n                                    </label>\n                                </div>\n                                <div class=\"form-check\">\n                                    <input type=\"radio\" id=\"dateCustomize\" name=\"recordDateHandling\"\n                                           class=\"form-check-input\"\n                                           onchange=\"setRecordDate(this.id);\">\n                                    <label class=\"form-check-label\" for=\"dateCustomize\">\n                                        <?= $PMF_LANG['msgEditFaqDat'] ?>\n                                    </label>\n                                </div>\n                                <div id=\"recordDateInputContainer\" class=\"form-group invisible\">\n                                    <input type=\"datetime-local\" name=\"date\" id=\"date\" class=\"form-control\"\n                                           placeholder=\"<?= $faqData['date'] ?>\">\n                                </div>\n                            </div>\n                            <h5 class=\"mb-0\">\n                                <?= $PMF_LANG['ad_entry_status'] ?>\n                            </h5>\n                            <div class=\"form-group\">\n                                <!-- active or not -->\n                                <?php if ($user->perm->hasPermission($currentUserId, 'approverec')) :\n                                    if (isset($faqData['active']) && $faqData['active'] == 'yes') {\n                                        $suf = ' checked';\n                                        $sul = null;\n                                    } elseif ($faqConfig->get('records.defaultActivation')) {\n                                        $suf = ' checked';\n                                        $sul = null;\n                                    } else {\n                                        $suf = null;\n                                        $sul = ' checked';\n                                    }\n                                    ?>\n                                    <div class=\"form-check\">\n                                        <input type=\"radio\" id=\"active\" name=\"active\" value=\"yes\"\n                                               class=\"form-check-input\"\n                                            <?php if (isset($suf)) {\n                                                echo $suf;\n                                            } ?>>\n                                        <label class=\"form-check-label\" for=\"active\">\n                                            <?= $PMF_LANG['ad_entry_visibility'] ?>\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check\">\n                                        <input type=\"radio\" id=\"inactive\" name=\"active\" value=\"no\"\n                                               class=\"form-check-input\"\n                                            <?php if (isset($sul)) {\n                                                echo $sul;\n                                            } ?>>\n                                        <label class=\"form-check-label\" for=\"inactive\">\n                                          <?= $PMF_LANG['ad_entry_not_visibility'] ?>\n                                        </label>\n                                    </div>\n                                <?php else : ?>\n                                    <div class=\"form-check\">\n                                        <input type=\"radio\" id=\"inactive\" name=\"active\" value=\"no\"\n                                               class=\"form-check-input\" checked>\n                                        <label class=\"form-check-label\" for=\"inactive\">\n                                            <?= $PMF_LANG['ad_entry_not_visibility'] ?>\n                                        </label>\n                                    </div>\n                                <?php endif; ?>\n                            </div>\n\n                            <?php if ($queryString != 'insertentry' && !$faqConfig->get('records.enableAutoRevisions')) : ?>\n                              <h5 class=\"mb-0\">\n                                  <?= $PMF_LANG['ad_entry_new_revision'] ?>\n                              </h5>\n                              <div class=\"form-group\">\n                                <div class=\"form-check\">\n                                  <input type=\"radio\" name=\"revision\" id=\"revision\" value=\"yes\"\n                                         class=\"form-check-input\">\n                                  <label class=\"form-check-label\"\n                                         for=\"revision\"><?= $PMF_LANG['ad_gen_yes'] ?></label>\n                                </div>\n                                <div class=\"form-check\">\n                                  <input type=\"radio\" name=\"revision\" id=\"no-revision\" value=\"no\"\n                                         checked class=\"form-check-input\">\n                                  <label class=\"form-check-label\"\n                                         for=\"no-revision\"><?= $PMF_LANG['ad_gen_no'] ?></label>\n                                </div>\n                              </div>\n                            <?php endif ?>\n\n                            <div class=\"form-group\">\n                                <!-- sticky or not -->\n                                <div class=\"form-check\">\n                                    <input type=\"checkbox\" id=\"sticky\" name=\"sticky\" class=\"form-check-input\"\n                                        <?php echo(isset($faqData['sticky']) && $faqData['sticky'] ? 'checked' : '') ?>>\n                                    <label class=\"form-check-label\"\n                                           for=\"sticky\"><?= $PMF_LANG['ad_entry_sticky'] ?></label>\n                                </div>\n\n                                <!-- comments allowed or not -->\n                                <div class=\"form-check\">\n                                    <input type=\"checkbox\" name=\"comment\" id=\"comment\" value=\"y\"\n                                           class=\"form-check-input\"\n                                           <?= $faqData['comment'] ?>>\n                                    <label class=\"form-check-label\"\n                                           for=\"comment\"><?= $PMF_LANG['ad_entry_allowComments'] ?></label>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <!-- solution id -->\n                                <label class=\"col-form-label\" for=\"solution_id\">\n                                    <?= $PMF_LANG['ad_entry_solution_id'] ?>:\n                                </label>\n                                <input type=\"number\" name=\"solution_id\" id=\"solution_id\" size=\"5\" class=\"form-control\"\n                                       readonly\n                                       value=\"<?= isset($faqData['solution_id']) ? $faqData['solution_id'] : $faq->getNextSolutionId(\n                                       ) ?>\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </form>\n\n    <!-- Attachment Upload Dialog -->\n    <?php\n    if (0 === $faqData['id']) {\n        $faqData['id'] = $faqConfig->getDb()->nextId(\n            Database::getTablePrefix() . 'faqdata',\n            'id'\n        );\n    }\n    ?>\n  <div class=\"modal fade\" id=\"attachmentModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"attachmentModalLabel\"\n       aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"attachmentModalLabel\">\n              <?= $PMF_LANG['ad_att_addto'] . ' ' . $PMF_LANG['ad_att_addto_2'] ?>\n            (max <?= round($faqConfig->get('records.maxAttachmentSize') / pow(1024, 2), 2) ?> MB)\n          </h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <form action=\"ajax.attachment.php?action=upload\" enctype=\"multipart/form-data\" method=\"post\"\n                id=\"attachmentForm\" novalidate>\n            <fieldset>\n              <input type=\"hidden\" name=\"MAX_FILE_SIZE\"\n                     value=\"<?= $faqConfig->get('records.maxAttachmentSize') ?>\">\n              <input type=\"hidden\" name=\"record_id\" id=\"attachment_record_id\"\n                     value=\"<?= $faqData['id'] ?>\">\n              <input type=\"hidden\" name=\"record_lang\" id=\"attachment_record_lang\"\n                     value=\"<?= $faqData['lang'] ?>\">\n              <input type=\"hidden\" name=\"save\" value=\"true\">\n              <input type=\"hidden\" name=\"csrf\" value=\"<?= $user->getCsrfTokenFromSession() ?>\">\n\n              <div class=\"custom-file\">\n                <input type=\"file\" class=\"custom-file-input\" name=\"filesToUpload[]\" id=\"filesToUpload\" multiple>\n                <label class=\"custom-file-label\" for=\"filesToUpload\">\n                    <?= $PMF_LANG['ad_att_att'] ?>\n                </label>\n                <div class=\"invalid-feedback\">\n                  The file is too big.\n                </div>\n              </div>\n\n              <div class=\"form-group pmf-attachment-upload-files invisible\">\n                  <?= $PMF_LANG['msgAttachmentsFilesize'] ?>:\n                <output id=\"filesize\"></output>\n              </div>\n              <div class=\"progress invisible\">\n                <div class=\"progress-bar progress-bar-striped bg-success progress-bar-animated\"\n                     role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n              </div>\n\n            </fieldset>\n          </form>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"reset\" class=\"btn btn-primary\" data-dismiss=\"modal\" id=\"pmf-attachment-modal-close\">\n              <?= $PMF_LANG['ad_att_close'] ?>\n          </button>\n          <button type=\"button\" class=\"btn btn-primary\" id=\"pmf-attachment-modal-upload\">\n              <?= $PMF_LANG['ad_att_butt'] ?>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n    <script src=\"assets/js/record.js\"></script>\n    <script>\n      function setRecordDate(how) {\n        if ('dateActualize' === how) {\n          $('#date').val('');\n        } else if ('dateKeep' === how) {\n          $('#date').val('<?= $faqData['isoDate'] ?>');\n        } else if ('dateCustomize' === how) {\n          $('#recordDateInputContainer').removeClass('invisible');\n          $('#date').val('');\n        }\n      }\n    </script>\n    <?php\n} elseif ($user->perm->hasPermission($currentUserId, 'edit_faq') !== 1 && !Database::checkOnEmptyTable('faqcategories')) {\n    echo $PMF_LANG['err_NotAuth'];\n} elseif ($user->perm->hasPermission($currentUserId, 'edit_faq') && Database::checkOnEmptyTable('faqcategories')) {\n    echo $PMF_LANG['no_cats'];\n}\n", "<?php\n\n/**\n * Shows the list of records ordered by categories.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @author Minoru TODA <todam@netjapan.co.jp>\n * @copyright 2003-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2003-02-23\n */\n\nuse phpMyFAQ\\Category;\nuse phpMyFAQ\\Category\\CategoryRelation;\nuse phpMyFAQ\\Comments;\nuse phpMyFAQ\\Date;\nuse phpMyFAQ\\Database;\nuse phpMyFAQ\\Faq;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Helper\\CategoryHelper;\nuse phpMyFAQ\\Helper\\FaqHelper;\nuse phpMyFAQ\\Language;\nuse phpMyFAQ\\LinkVerifier;\nuse phpMyFAQ\\Search\\SearchFactory;\nuse phpMyFAQ\\Visits;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n?>\n        <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n          <h1 class=\"h2\">\n            <i aria-hidden=\"true\" class=\"fa fa-list-alt\"></i>\n              <?= $PMF_LANG['ad_entry_aor'] ?>\n          </h1>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n<?php\nif ($user->perm->hasPermission($user->getUserId(), 'edit_faq') || $user->perm->hasPermission($user->getUserId(), 'delete_faq')) {\n    $category = new Category($faqConfig, [], false);\n    $category->setUser($currentAdminUser);\n    $category->setGroups($currentAdminGroups);\n    $category->transform(0);\n    $category->buildCategoryTree();\n\n    $categoryHelper = new CategoryHelper();\n    $categoryHelper->setCategory($category);\n\n    $categoryRelation = new CategoryRelation($faqConfig);\n    $categoryRelation->setGroups($currentAdminGroups);\n\n    $faqHelper = new FaqHelper($faqConfig);\n\n\n    $linkVerifier = new LinkVerifier($faqConfig, $user->getLogin());\n    if ($linkVerifier->isReady()) {\n        ?>\n    <script>\n        function getImageElement(id, lang) {\n            return $('#imgurl_' + lang + '_' + id);\n        }\n\n        function getSpanElement(id, lang) {\n            return $('#spanurl_' + lang + '_' + id);\n        }\n\n        function getDivElement(id, lang) {\n            return $('#divurl_' + lang + '_' + id);\n        }\n\n        function onDemandVerifyURL(id, lang, target) {\n            const widthPx = 780,\n                heightPx = 450,\n                leftPx   = (screen.width  - widthPx) / 2,\n                topPx    = (screen.height - heightPx) / 2,\n                pmfWindow = window.open('index.php?action=ajax&ajax=onDemandURL&id=' + id + '&artlang=' + lang, 'onDemandURLVerification', 'toolbar=no, location=no, status=no, menubar=no, width=' + widthPx + ', height=' + heightPx + ', left=' + leftPx + ', top=' + topPx + ', resizable=yes, scrollbars=yes');\n                pmfWindow.focus();\n\n            verifyEntryURL(id, lang);\n        }\n\n        function verifyEntryURL(id, lang) {\n            const target = getSpanElement(id, lang);\n\n            // !!IMPORTANT!! DISABLE ONLOAD. If you do not do this, you will get infinite loop!\n            getImageElement(id, lang).onload = '';\n\n            //target.src = \"images/url-checking.png\";\n            getDivElement(id, lang).className = \"url-checking\";\n            target.innerHTML = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-checking'] ?>\";\n\n            const url = 'index.php';\n            const pars = 'action=ajax&ajax=verifyURL&id=' + id + '&artlang=' + lang;\n            const myAjax = new jQuery.ajax({url: url,\n                type: 'get',\n                data: pars,\n                complete: verifyEntryURL_success,\n                error: verifyEntryURL_failure});\n\n            function verifyEntryURL_success(XmlRequest)\n            {\n                let allResponses = new [];\n                allResponses['batch1'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-batch1'] ?>\";\n                allResponses['batch2'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-batch2'] ?>\";\n                allResponses['batch3'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-batch3'] ?>\";\n                allResponses['checking'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-checking'] ?>\";\n                allResponses['disabled'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-disabled'] ?>\";\n                allResponses['linkbad'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-linkbad'] ?>\";\n                allResponses['linkok'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-linkok'] ?>\";\n                allResponses['noaccess'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-noaccess'] ?>\";\n                allResponses['noajax'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-noajax'] ?>\";\n                allResponses['nolinks'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-nolinks'] ?>\";\n                allResponses['noscript'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-noscript'] ?>\";\n                getDivElement(id, lang).className = \"url-\" + XmlRequest.responseText;\n                if (typeof(allResponses[XmlRequest.responseText]) === \"undefined\") {\n                    getDivElement(id, lang).className = \"url-noajax \";\n                    target.html(allResponses['noajax']);\n                } else {\n                    target.html(allResponses[XmlRequest.responseText]);\n                }\n            }\n\n            function verifyEntryURL_failure(XmlRequest)\n            {\n                getDivElement(id, lang).className = \"url-noaccess\";\n                target.html(\"<?= $PMF_LANG['ad_linkcheck_feedback_url-noaccess'] ?>\");\n            }\n\n        }\n    </script>\n        <?php\n    }\n\n    $faq = new Faq($faqConfig);\n    $faq->setUser($currentAdminUser);\n    $faq->setGroups($currentAdminGroups);\n    $date = new Date($faqConfig);\n\n    $internalSearch = '';\n    $linkState = Filter::filterInput(INPUT_POST, 'linkstate', FILTER_UNSAFE_RAW);\n    $searchCat = Filter::filterInput(INPUT_POST, 'searchcat', FILTER_VALIDATE_INT);\n    $searchTerm = Filter::filterInput(INPUT_POST, 'searchterm', FILTER_UNSAFE_RAW);\n\n    if (!is_null($linkState)) {\n        $cond[Database::getTablePrefix() . 'faqdata.links_state'] = 'linkbad';\n        $linkState = ' checked ';\n        $internalSearch .= '&linkstate=linkbad';\n    }\n    if (!is_null($searchCat)) {\n        $internalSearch .= '&searchcat=' . $searchCat;\n        $cond[Database::getTablePrefix() . 'faqcategoryrelations.category_id'] = array_merge(\n            [$searchCat],\n            $category->getChildNodes((int) $searchCat)\n        );\n    }\n\n    $selectedCategory = Filter::filterInput(INPUT_GET, 'category', FILTER_VALIDATE_INT, 0);\n    $orderBy = Filter::filterInput(INPUT_GET, 'orderby', FILTER_UNSAFE_RAW, 1);\n    $sortBy = Filter::filterInput(INPUT_GET, 'sortby', FILTER_UNSAFE_RAW);\n    if (1 !== $orderBy) {\n        switch ($orderBy) {\n            case 'id':\n                $orderBy = 1;\n                break;\n            case 'title':\n                $orderBy = 2;\n                break;\n            case 'date':\n                $orderBy = 3;\n                break;\n        }\n    }\n    ?>\n    <form id=\"recordSelection\" name=\"recordSelection\" method=\"post\" accept-charset=\"utf-8\">\n        <div class=\"accordion\" id=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\n    <?php\n    $comment = new Comments($faqConfig);\n    $numCommentsByFaq = $comment->getNumberOfComments();\n    $numCommentsByCat = [];\n    $numRecordsByCat = $categoryRelation->getNumberOfFaqsPerCategory(\n        $faqConfig->get('main.enableCategoryRestrictions')\n    );\n    $numActiveByCat = [];\n\n    $matrix = $categoryRelation->getCategoryFaqsMatrix();\n    foreach ($matrix as $categoryKey => $value) {\n        $numCommentsByCat[$categoryKey] = 0;\n        foreach ($value as $faqKey => $value) {\n            if (isset($numCommentsByFaq[$faqKey])) {\n                $numCommentsByCat[$categoryKey] += $numCommentsByFaq[$faqKey];\n            }\n        }\n    }\n\n    if (is_null($searchTerm)) {\n        if ($faqConfig->get('main.enableCategoryRestrictions')) {\n            $Language = new Language($faqConfig);\n            $language = $Language->setLanguage(\n                $faqConfig->get('main.languageDetection'),\n                $faqConfig->get('main.language')\n            );\n            $faq->getAllRecords($orderBy, ['lang' => $language], $sortBy);\n        } else {\n            $faq->getAllRecords($orderBy, null, $sortBy);\n        }\n\n        foreach ($faq->faqRecords as $record) {\n            if (!isset($numActiveByCat[$record['category_id']])) {\n                $numActiveByCat[$record['category_id']] = 0;\n            }\n            $numActiveByCat[$record['category_id']] += $record['active'] == 'yes' ? 1 : 0;\n        }\n    } else {\n        $fdTable = Database::getTablePrefix() . 'faqdata';\n        $fcrTable = Database::getTablePrefix() . 'faqcategoryrelations';\n        $search = SearchFactory::create($faqConfig, ['database' => Database::getType()]);\n\n        $search\n            ->setTable($fdTable)\n            ->setResultColumns(\n                [\n                    $fdTable . '.id AS id',\n                    $fdTable . '.lang AS lang',\n                    $fdTable . '.solution_id AS solution_id',\n                    $fcrTable . '.category_id AS category_id',\n                    $fdTable . '.sticky AS sticky',\n                    $fdTable . '.active AS active',\n                    $fdTable . '.thema AS thema',\n                    $fdTable . '.content AS content',\n                    $fdTable . '.updated AS updated',\n                ]\n            )\n            ->setJoinedTable($fcrTable)\n            ->setJoinedColumns(\n                [\n                    $fdTable . '.id = ' . $fcrTable . '.record_id',\n                    $fdTable . '.lang = ' . $fcrTable . '.record_lang',\n                ]\n            );\n\n        if (is_numeric($searchTerm)) {\n            $search->setMatchingColumns([$fdTable . '.solution_id']);\n        } else {\n            $search->setMatchingColumns([$fdTable . '.thema', $fdTable . '.content', $fdTable . '.keywords']);\n        }\n\n        $result = $search->search($searchTerm);\n        $laction = 'view';\n        $internalSearch = '&search=' . $searchTerm;\n        $wasSearch = true;\n        $idsFound = [];\n        $faqsFound = [];\n\n        while ($row = $faqConfig->getDb()->fetchObject($result)) {\n            if ($searchCat != 0 && $searchCat != (int)$row->category_id) {\n                continue;\n            }\n\n            if (in_array($row->id, $idsFound)) {\n                continue; // only show one entry if FAQ is in multiple categories\n            }\n\n            $faqsFound[$row->category_id][$row->id] = [\n                'id' => $row->id,\n                'category_id' => $row->category_id,\n                'solution_id' => $row->solution_id,\n                'lang' => $row->lang,\n                'active' => $row->active,\n                'sticky' => $row->sticky,\n                'title' => $row->thema,\n                'content' => $row->content,\n                'updated' => Date::createIsoDate($row->updated),\n            ];\n\n            if (!isset($numActiveByCat[$row->category_id])) {\n                $numActiveByCat[$row->category_id] = 0;\n            }\n\n            $numActiveByCat[$row->category_id] += $row->active ? 1 : 0;\n\n            $idsFound[] = $row->id;\n        }\n\n        // Sort search result ordered by category ID\n        ksort($faqsFound);\n        foreach ($faqsFound as $categoryId => $faqFound) {\n            foreach ($faqFound as $singleFaq) {\n                $faq->faqRecords[] = $singleFaq;\n            }\n        }\n    }\n\n    if (count($faq->faqRecords) > 0) {\n        $old = 0;\n        $faqIds = [];\n\n        $visits = new Visits($faqConfig);\n        $numVisits = [];\n        foreach ($visits->getAllData() as $visit) {\n            $numVisits[$visit['id']] = $visit['lang'];\n        }\n\n        foreach ($faq->faqRecords as $record) {\n            $catInfo = '';\n            $cid = $record['category_id'];\n\n            if (isset($numRecordsByCat[$cid])) {\n                $catInfo .= sprintf(\n                    '<span class=\"badge badge-info\" id=\"category_%d_item_count\">%d %s</span> ',\n                    $cid,\n                    $numRecordsByCat[$cid],\n                    $PMF_LANG['msgEntries']\n                );\n            }\n\n            if (isset($numRecordsByCat[$cid]) && $numRecordsByCat[$cid] > $numActiveByCat[$cid]) {\n                $catInfo .= sprintf(\n                    '<span class=\"badge badge-danger\"><span id=\"js-active-records-%d\">%d</span> %s</span> ',\n                    $cid,\n                    $numRecordsByCat[$cid] - $numActiveByCat[$cid],\n                    $PMF_LANG['ad_record_inactive']\n                );\n            }\n\n            if (isset($numCommentsByCat[$cid]) && ($numCommentsByCat[$cid] > 0)) {\n                $catInfo .= sprintf(\n                    '<span class=\"badge badge-info\">%d %s</span>',\n                    $numCommentsByCat[$cid],\n                    $PMF_LANG['ad_start_comments']\n                );\n            }\n            $catInfo .= '';\n\n            if ($cid != $old) {\n                if ($old == 0) {\n                    printf('<a name=\"cat_%d\"></a>', $cid);\n                } else {\n                    echo '</tbody></table></div></div></div>';\n                }\n                ?>\n          <div class=\"card card-default\">\n            <div class=\"card-header\" role=\"tab\" id=\"category-heading-<?= $cid ?>\">\n              <span class=\"float-right\"><?= $catInfo ?></span>\n              <h5>\n                <a role=\"button\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#category-<?= $cid ?>\"\n                   aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                  <i class=\"icon fa fa-chevron-circle-right \"></i>\n                <?= $category->getPath($cid) ?>\n                </a>\n              </h5>\n            </div>\n            <div id=\"category-<?= $cid ?>\" class=\"card-collapse collapse\" role=\"tabcard\"\n                 aria-labelledby=\"category-heading-<?= $cid ?>\">\n              <div class=\"card-body\">\n                <table class=\"table table-hover table-sm\">\n                  <thead class=\"thead-light\">\n                  <tr>\n                    <th colspan=\"3\" style=\"width: 24px; vertical-align: middle;\">\n                      <div style=\"display: inline-flex; flex-direction: column;\">\n                        <a href=\"?action=view&category=<?= $cid ?>&orderby=id&sortby=asc\">\n                          <i class=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\n                        </a>\n                        ID\n                        <a href=\"?action=view&category=<?= $cid ?>&orderby=id&sortby=desc\">\n                          <i class=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>\n                        </a>\n                      </div>\n                    </th>\n                    <th style=\"vertical-align: middle;\">\n                      <div style=\"display: inline-flex; flex-direction: column;\">\n                        <a href=\"?action=view&category=<?= $cid ?>&orderby=title&sortby=asc\">\n                          <i class=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\n                        </a>\n                        <?= $PMF_LANG['ad_entry_theme'] ?>\n                        <a href=\"?action=view&category=<?= $cid ?>&orderby=title&sortby=desc\">\n                          <i class=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>\n                        </a>\n                      </div>\n                    </th>\n                    <th style=\"width: 100px; vertical-align: middle;\">\n                      <div style=\"display: inline-flex; flex-direction: column;\">\n                        <a href=\"?action=view&category=<?= $cid ?>&orderby=date&sortby=asc\">\n                          <i class=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\n                        </a>\n                        <?= $PMF_LANG['ad_entry_date'] ?>\n                        <a href=\"?action=view&category=<?= $cid ?>&orderby=date&sortby=desc\">\n                          <i class=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>\n                        </a>\n                      </div>\n                    </th>\n                    <th colspan=\"2\">\n                      &nbsp;\n                    </th>\n\n                    <th style=\"width: 120px; vertical-align: middle;\">\n                      <label>\n                        <input type=\"checkbox\" id=\"sticky_category_block_<?= $cid ?>\"\n                               onclick=\"saveStatusForCategory(<?= $cid ?>, 'sticky', '<?= $user->getCsrfTokenFromSession() ?>')\"/>\n                      <?= $PMF_LANG['ad_record_sticky'] ?>\n                      </label>\n                    </th>\n                    <th style=\"width: 120px; vertical-align: middle;\">\n                    <?php if ($user->perm->hasPermission($user->getUserId(), 'approverec')) { ?>\n                          <label>\n                            <input type=\"checkbox\" id=\"active_category_block_<?= $cid ?>\"\n                                   onclick=\"saveStatusForCategory(<?= $cid ?>, 'active', '<?= $user->getCsrfTokenFromSession() ?>')\"\n                                <?php\n                                if (\n                                    isset($numRecordsByCat[$cid]) && isset($numActiveByCat[$cid]) &&\n                                    $numRecordsByCat[$cid] == $numActiveByCat[$cid]\n                                ) {\n                                    echo 'checked';\n                                }\n                                ?>>\n                              <?= $PMF_LANG['ad_record_active'] ?>\n                          </label>\n                    <?php } else { ?>\n                          <span class=\"fa-stack\">\n                              <i class=\"fa fa-check fa-stack-1x\"></i>\n                              <i class=\"fa fa-ban fa-stack-2x text-danger\"></i>\n                            </span>\n                    <?php } ?>\n                    </th>\n                    <th colspan=\"2\">\n                      &nbsp;\n                    </th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                <?php\n            }\n            ?>\n                    <tr id=\"record_<?= $record['id'] . '_' . $record['lang'] ?>\">\n                      <td style=\"width: 24px; text-align: right;\">\n                        <a href=\"?action=editentry&id=<?= $record['id'] ?>&lang=<?= $record['lang'] ?>\">\n                        <?= $record['id'] ?>\n                        </a>\n                      </td>\n                      <td style=\"width: 16px;\">\n                      <?= $record['lang'] ?>\n                      </td>\n                      <td style=\"width: 24px;\">\n                        <a href=\"?action=editentry&id=<?= $record['id'] ?>&lang=<?= $record['lang'] ?>\"\n                           title=\"<?= $PMF_LANG['ad_user_edit'] ?> '<?= str_replace('\"', '\u00b4', $record['title']) ?>'\">\n                        <?= $record['solution_id'] ?>\n                        </a>\n                      </td>\n                      <td>\n                        <a href=\"?action=editentry&id=<?= $record['id'] ?>&lang=<?= $record['lang'] ?>\"\n                           title=\"<?= $PMF_LANG['ad_user_edit'] ?> '<?= str_replace('\"', '\u00b4', $record['title']) ?>'\">\n                        <?= $record['title'] ?>\n                        </a>\n            <?php\n            if (isset($numCommentsByFaq[$record['id']])) {\n                printf(\n                    '<br><a class=\"badge badge-primary\" href=\"?action=comments#record_id_%d\">%d %s</a>',\n                    $record['id'],\n                    $numCommentsByFaq[$record['id']],\n                    $PMF_LANG['ad_start_comments']\n                );\n            }\n            ?></td>\n                      <td>\n                      <?= $date->format($record['updated']) ?>\n                      </td>\n                      <td style=\"width: 96px;\">\n                      <?= $linkVerifier->getEntryStateHTML($record['id'], $record['lang']) ?>\n                      </td>\n                      <td>\n                        <div class=\"dropdown\">\n                          <a class=\"btn btn-primary dropdown-toggle\" href=\"#\" role=\"button\"\n                             id=\"dropdownAddNewTranslation\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                             aria-expanded=\"false\">\n                            <i aria-hidden=\"true\" class=\"fa fa-globe\"\n                               title=\"<?= $PMF_LANG['msgTransToolAddNewTranslation'] ?>\"></i>\n                          </a>\n                          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownAddNewTranslation\">\n                          <?= $faqHelper->createFaqTranslationLinkList($record['id'], $record['lang']) ?>\n                          </div>\n                        </div>\n                      </td>\n                      <td style=\"width: 56px;\">\n                        <label>\n                          <input type=\"checkbox\" lang=\"<?= $record['lang'] ?>\"\n                                 onclick=\"saveStatus(<?= $cid . ', [' . $record['id'] . ']' ?>, 'sticky', '<?= $user->getCsrfTokenFromSession() ?>');\"\n                                 id=\"sticky_record_<?= $cid . '_' . $record['id'] ?>\"\n                          <?= $record['sticky'] ? 'checked' : '    ' ?>>\n                        </label>\n                      </td>\n                      <td>\n                      <?php if ($user->perm->hasPermission($user->getUserId(), 'approverec')) { ?>\n                            <label>\n                              <input type=\"checkbox\" lang=\"<?= $record['lang'] ?>\" class=\"active-records-category-<?= $cid ?>\"\n                                     onclick=\"saveStatus(<?= $cid . ', [' . $record['id'] . ']' ?>, 'active', '<?= $user->getCsrfTokenFromSession() ?>');\"\n                                     id=\"active_record_<?= $cid . '_' . $record['id'] ?>\"\n                                  <?= 'yes' == $record['active'] ? 'checked' : '    ' ?>>\n                            </label>\n                      <?php } else { ?>\n                            <span class=\"fa-stack\">\n                              <i class=\"fa fa-check fa-stack-1x\"></i>\n                              <i class=\"fa fa-ban fa-stack-2x text-danger\"></i>\n                            </span>\n                      <?php } ?>\n                      </td>\n                      <td style=\"width: 16px;\">\n                        <a class=\"btn btn-info\"\n                           href=\"?action=copyentry&id=<?= $record['id'] ?>&lang=<?= $record['lang']; ?>\"\n                           title=\"<?= $PMF_LANG['ad_categ_copy'] ?>\">\n                          <i aria-hidden=\"true\" class=\"fa fa-copy\"></i>\n                        </a>\n                      </td>\n                      <td style=\"width: 16px;\">\n                        <a class=\"btn btn-danger\" href=\"javascript:void(0);\"\n                           onclick=\"deleteRecord(<?= $record['id'] ?>, '<?= $record['lang'] ?>', '<?= $user->getCsrfTokenFromSession() ?>');\"\n                           title=\"<?= $PMF_LANG['ad_user_delete'] ?>\">\n                          <i aria-hidden=\"true\" class=\"fa fa-trash\"></i>\n                        </a>\n                      </td>\n                    </tr>\n            <?php\n            $old = $cid;\n\n            $faqIds[$cid][] = $record['id'];\n            ?>\n            <?php\n        }\n        ?>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n    </form>\n\n    <script src=\"assets/js/record.js\"></script>\n    <script>\n    /**\n     * Saves the sticky record status for the whole category\n     *\n     * @param id\n     * @param type\n     * @param csrf\n     *\n     * @return void\n     */\n    function saveStatusForCategory(id, type, csrf) {\n      let id_map = [];\n        <?php\n        foreach ($faqIds as $categoryId => $recordIds) {\n            if ('' === $categoryId) {\n                $categoryId = 0;\n            }\n            echo '                id_map[' . $categoryId . '] = [' . implode(',', $recordIds) . \"];\\n\";\n        }\n        ?>\n      for (let i = 0; i < id_map[id].length; i++) {\n        const status = $('#' + type + '_category_block_' + id).prop('checked');\n        $('#' + type + '_record_' + id + '_' + id_map[id][i]).prop('checked', status);\n      }\n\n      saveStatus(id, id_map[id], type, csrf);\n    }\n\n    /**\n     * Ajax call for saving the sticky record status\n     *\n     * @param cid  category id\n     * @param ids  ids\n     * @param type status type\n     * @param csrf CSRF Token\n     *\n     * @return void\n     */\n    function saveStatus(cid, ids, type, csrf) {\n      const indicator = $('#pmf-admin-saving-data-indicator'),\n        data = {\n          action: 'ajax',\n          ajax: 'records',\n          ajaxaction: 'save_' + type + '_records',\n          csrf: csrf\n        };\n\n      indicator.html('<i class=\"fa fa-cog fa-spin\"></i> Saving ...');\n\n      for (let i = 0; i < ids.length; i++) {\n        const statusId = '#' + type + '_record_' + cid + '_' + ids[i];\n        const status = $(statusId).attr('checked') ? '' : 'checked';\n        const langId = '#' + type + '_record_' + cid + '_' + ids[i];\n        const lang = $(langId).attr('lang');\n\n        data['items[' + i + '][]'] = [ids[i], lang, status];\n\n        // Updating the current record if it's also contained in another category\n        const sameRecords = $('input').filter(function () {\n          return this.id.match(new RegExp(type + '_record_(\\\\d+)_' + ids[i]));\n        });\n\n        if ('active' === type) {\n          for (let j = 0; j < sameRecords.length; j++) {\n            $('#' + sameRecords[j].id).attr('checked', status);\n            const catId = sameRecords[j].id.match(/active_record_(\\d+)_\\d+/)[1];\n            $('#js-active-records-' + catId).html($('.active-records-category-' + cid + ':not(:checked)').length);\n          }\n        } else {\n          for (let j = 0; j < sameRecords.length; j++) {\n            $('#' + sameRecords[j].id).attr('checked', status);\n            if (sameRecords[j].id.match(/active_record_(\\d+)_\\d+/)) {\n              const catId = sameRecords[j].id.match(/active_record_(\\d+)_\\d+/)[1];\n              $('#js-active-records-' + catId).html($('.active-records-category-' + cid + ':not(:checked)').length);\n            }\n          }\n        }\n      }\n\n      $.get('index.php', data, null);\n      indicator.html('<?= $PMF_LANG['ad_entry_savedsuc'] ?>');\n    }\n\n    /**\n     * Ajax call for deleting records\n     *\n     * @param record_id   Record id\n     * @param record_lang Record language\n     * @param csrf_token  CSRF Token\n     *\n     * @return void\n     */\n    function deleteRecord(record_id, record_lang, csrf_token)\n    {\n        if (confirm('<?= addslashes($PMF_LANG['ad_entry_del_1'] . ' ' . $PMF_LANG['ad_entry_del_3']);\n        ?>')) {\n            $('#pmf-admin-saving-data-indicator').html('<i class=\"fa fa-cog fa-spin fa-fw\"></i><span class=\"sr-only\">Deleting ...</span>');\n            $.ajax({\n                type:    \"POST\",\n                url:     \"index.php?action=ajax&ajax=records&ajaxaction=delete_record\",\n                data:    \"record_id=\" + record_id + \"&record_lang=\" + record_lang + \"&csrf=\" + csrf_token,\n                success: function() {\n                    $(\"#record_\" + record_id + \"_\" + record_lang).fadeOut(\"slow\");\n                    $('#pmf-admin-saving-data-indicator').html('<?= $PMF_LANG['ad_entry_delsuc'];\n                    ?>');\n                }\n            });\n        }\n    }\n    </script>\n        <?php\n    } else {\n        echo $PMF_LANG['err_nothingFound'];\n    }\n} else {\n    echo $PMF_LANG['err_NotAuth'];\n}\n?>\n    </div>\n</div>\n", "<?php\n\n/**\n * The main FAQ class. Yes, it's very huge.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package   phpMyFAQ\n * @author    Thorsten Rinne <thorsten@phpmyfaq.de>\n * @author    Matteo Scaramuccia <matteo@scaramuccia.com>\n * @author    Georgi Korchev <korchev@yahoo.com>\n * @author    Adrianna Musiol <musiol@imageaccess.de>\n * @author    Peter Caesar <p.caesar@osmaco.de>\n * @copyright 2005-2022 phpMyFAQ Team\n * @license   http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link      https://www.phpmyfaq.de\n * @since     2005-12-20\n */\n\nnamespace phpMyFAQ;\n\nuse Exception;\nuse phpMyFAQ\\Attachment\\AttachmentFactory;\nuse phpMyFAQ\\Entity\\FaqEntity;\nuse phpMyFAQ\\Helper\\FaqHelper;\nuse phpMyFAQ\\Instance\\Elasticsearch;\nuse phpMyFAQ\\Language\\Plurals;\n\n/*\n * SQL constants definitions\n */\ndefine('FAQ_SQL_ACTIVE_YES', 'yes');\ndefine('FAQ_SQL_ACTIVE_NO', 'no');\n\n/*\n * Query type definitions\n */\ndefine('FAQ_QUERY_TYPE_DEFAULT', 'faq_default');\ndefine('FAQ_QUERY_TYPE_APPROVAL', 'faq_approval');\ndefine('FAQ_QUERY_TYPE_EXPORT_PDF', 'faq_export_pdf');\ndefine('FAQ_QUERY_TYPE_EXPORT_XHTML', 'faq_export_xhtml');\ndefine('FAQ_QUERY_TYPE_EXPORT_XML', 'faq_export_xml');\n\n/*\n * Sorting type definitions\n */\ndefine('FAQ_SORTING_TYPE_NONE', 0);\ndefine('FAQ_SORTING_TYPE_CATID_FAQID', 1);\ndefine('FAQ_SORTING_TYPE_FAQTITLE_FAQID', 2);\ndefine('FAQ_SORTING_TYPE_DATE_FAQID', 3);\ndefine('FAQ_SORTING_TYPE_FAQID', 4);\n\n/**\n * Class Faq\n *\n * @package phpMyFAQ\n */\nclass Faq\n{\n    /**\n     * The current FAQ record.\n     *\n     * @var array\n     */\n    public array $faqRecord = [];\n\n    /**\n     * All current FAQ records in an array.\n     *\n     * @var array\n     */\n    public array $faqRecords = [];\n\n    /**\n     * @var Configuration\n     */\n    private Configuration $config;\n\n    /**\n     * Language strings.\n     *\n     * @var string\n     */\n    private $translation;\n\n    /**\n     * Plural form support.\n     *\n     * @var Plurals\n     */\n    private Plurals $plurals;\n\n    /**\n     * Users.\n     *\n     * @var int\n     */\n    private int $user = -1;\n\n    /**\n     * Groups.\n     *\n     * @var int[]\n     */\n    private array $groups = [-1];\n\n    /**\n     * Flag for Group support.\n     *\n     * @var bool\n     */\n    private bool $groupSupport = false;\n\n    /**\n     * Constructor.\n     *\n     * @param Configuration $config\n     */\n    public function __construct(Configuration $config)\n    {\n        global $PMF_LANG, $plr;\n\n        $this->config = $config;\n        $this->translation = $PMF_LANG;\n        $this->plurals = $plr;\n\n        if ($this->config->get('security.permLevel') !== 'basic') {\n            $this->groupSupport = true;\n        }\n    }\n\n    /**\n     * @param int $userId\n     * @return Faq\n     */\n    public function setUser(int $userId = -1): Faq\n    {\n        $this->user = $userId;\n        return $this;\n    }\n\n    /**\n     * @param int[] $groups\n     * @return Faq\n     */\n    public function setGroups(array $groups): Faq\n    {\n        $this->groups = $groups;\n        return $this;\n    }\n\n    /**\n     * This function returns all not expired records from one category.\n     *\n     * @param int    $categoryId Entity ID\n     * @param string $orderBy    Order by\n     * @param string $sortBy     Sort by\n     *\n     * @return array<int, array<string, mixed>>\n     * @throws Exception\n     */\n    public function getAllRecordsByCategoryId(int $categoryId, string $orderBy = 'id', string $sortBy = 'ASC'): array\n    {\n        global $sids;\n\n        $faqData = [];\n\n        if ($orderBy == 'visits') {\n            $currentTable = 'fv';\n        } else {\n            $currentTable = 'fd';\n        }\n\n        $now = date('YmdHis');\n        $query = sprintf(\n            \"\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.thema AS thema,\n                fd.content AS record_content,\n                fd.updated AS updated,\n                fcr.category_id AS category_id,\n                fv.visits AS visits,\n                fd.created AS created\n            FROM\n                %sfaqdata AS fd\n            LEFT JOIN\n                %sfaqcategoryrelations AS fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                %sfaqvisits AS fv\n            ON\n                fd.id = fv.id\n            AND\n                fv.lang = fd.lang\n            LEFT JOIN\n                %sfaqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.date_start <= '%s'\n            AND\n                fd.date_end   >= '%s'\n            AND\n                fd.active = 'yes'\n            AND\n                fcr.category_id = %d\n            AND\n                fd.lang = '%s'\n                %s\n            ORDER BY\n                %s.%s %s\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $now,\n            $now,\n            $categoryId,\n            $this->config->getLanguage()->getLanguage(),\n            $this->queryPermission($this->groupSupport),\n            $currentTable,\n            $this->config->getDb()->escape($orderBy),\n            $this->config->getDb()->escape($sortBy)\n        );\n\n        $result = $this->config->getDb()->query($query);\n        $num = $this->config->getDb()->numRows($result);\n\n        if ($num > 0) {\n            $faqHelper = new FaqHelper($this->config);\n            while (($row = $this->config->getDb()->fetchObject($result))) {\n                if (empty($row->visits)) {\n                    $visits = 0;\n                } else {\n                    $visits = $row->visits;\n                }\n\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&cat=%d&id=%d&artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $oLink->text = $oLink->tooltip = $row->thema;\n\n                $faqData[] = [\n                    'record_id' => $row->id,\n                    'record_lang' => $row->lang,\n                    'category_id' => $row->category_id,\n                    'record_title' => $row->thema,\n                    'record_preview' => $faqHelper->renderAnswerPreview($row->record_content, 25),\n                    'record_link' => $oLink->toString(),\n                    'record_updated' => $row->updated,\n                    'visits' => $visits,\n                    'record_created' => $row->created,\n                ];\n            }\n        } else {\n            return $faqData;\n        }\n\n        return $faqData;\n    }\n\n    /**\n     * Returns a part of a query to check permissions.\n     *\n     * @param bool $hasGroupSupport\n     *\n     * @return string\n     */\n    protected function queryPermission(bool $hasGroupSupport = false): string\n    {\n        if ($hasGroupSupport) {\n            if (-1 === $this->user) {\n                return sprintf(\n                    'AND fdg.group_id IN (%s)',\n                    implode(', ', $this->groups)\n                );\n            } else {\n                return sprintf(\n                    'AND ( fdg.group_id IN (%s) OR (fdu.user_id = %d OR fdg.group_id IN (%s)) )',\n                    implode(', ', $this->groups),\n                    $this->user,\n                    implode(', ', $this->groups)\n                );\n            }\n        }\n\n        if (-1 !== $this->user) {\n            return sprintf(\n                'AND ( fdu.user_id = %d OR fdu.user_id = -1 )',\n                $this->user\n            );\n        } else {\n            return 'AND fdu.user_id = -1';\n        }\n    }\n\n    /**\n     * This function returns all not expired records from one category.\n     *\n     * @param int    $categoryId Entity ID\n     * @param string $orderBy    Order by\n     * @param string $sortBy     Sort by\n     *\n     * @return string\n     */\n    public function renderRecordsByCategoryId(int $categoryId, string $orderBy = 'id', string $sortBy = 'ASC'): string\n    {\n        global $sids;\n\n        $numPerPage = $this->config->get('records.numberOfRecordsPerPage');\n        $page = Filter::filterInput(INPUT_GET, 'seite', FILTER_VALIDATE_INT, 1);\n        $output = '';\n        $title = '';\n\n        if ($orderBy == 'visits') {\n            $currentTable = 'fv';\n        } else {\n            $currentTable = 'fd';\n        }\n\n        // If random FAQs are activated, we don't need an order\n        if (true === $this->config->get('records.randomSort')) {\n            $order = '';\n        } else {\n            $order = sprintf(\n                'ORDER BY fd.sticky DESC, %s.%s %s',\n                $currentTable,\n                $this->config->getDb()->escape($orderBy),\n                $this->config->getDb()->escape($sortBy)\n            );\n        }\n\n        $now = date('YmdHis');\n        $query = sprintf(\n            \"\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.sticky AS sticky,\n                fd.thema AS thema,\n                fcr.category_id AS category_id,\n                fv.visits AS visits\n            FROM\n                %sfaqdata AS fd\n            LEFT JOIN\n                %sfaqcategoryrelations AS fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                %sfaqvisits AS fv\n            ON\n                fd.id = fv.id\n            AND\n                fv.lang = fd.lang\n            LEFT JOIN\n                %sfaqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.date_start <= '%s'\n            AND\n                fd.date_end   >= '%s'\n            AND\n                fd.active = 'yes'\n            AND\n                fcr.category_id = %d\n            AND\n                fd.lang = '%s'\n            %s\n            %s\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $now,\n            $now,\n            $categoryId,\n            $this->config->getLanguage()->getLanguage(),\n            $this->queryPermission($this->groupSupport),\n            $order\n        );\n\n        $result = $this->config->getDb()->query($query);\n        $num = $this->config->getDb()->numRows($result);\n        $pages = (int)ceil($num / $numPerPage);\n\n        if ($page == 1) {\n            $first = 0;\n        } else {\n            $first = $page * $numPerPage - $numPerPage;\n        }\n\n        if ($num > 0) {\n            if ($pages > 1) {\n                $output .= sprintf(\n                    '<p><strong>%s %s %s</strong></p>',\n                    $this->translation['msgPage'] . $page,\n                    $this->translation['msgVoteFrom'],\n                    $pages . $this->translation['msgPages']\n                );\n            }\n            $output .= '<ul class=\"phpmyfaq_ul\">';\n\n            $counter = 0;\n            $displayedCounter = 0;\n            $renderedItems = [];\n            while (($row = $this->config->getDb()->fetchObject($result)) && $displayedCounter < $numPerPage) {\n                ++$counter;\n                if ($counter <= $first) {\n                    continue;\n                }\n                ++$displayedCounter;\n\n                if (empty($row->visits)) {\n                    $visits = 0;\n                } else {\n                    $visits = $row->visits;\n                }\n\n                $title = $row->thema;\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $oLink->text = $oLink->tooltip = $title;\n\n                // If random FAQs are activated, we don't need sticky FAQs\n                if (true === $this->config->get('records.randomSort')) {\n                    $row->sticky = 0;\n                }\n\n                $renderedItems[$row->id] = sprintf(\n                    '<li%s>%s<span id=\"viewsPerRecord\"><small>(%s)</small></span></li>',\n                    ($row->sticky == 1) ? ' class=\"sticky-faqs\"' : '',\n                    $oLink->toHtmlAnchor(),\n                    $this->plurals->getMsg('plmsgViews', $visits)\n                );\n            }\n\n            // If random FAQs are activated, shuffle the FAQs :-)\n            if (true === $this->config->get('records.randomSort')) {\n                shuffle($renderedItems);\n            }\n\n            $output .= implode(\"\\n\", $renderedItems);\n            $output .= '</ul>';\n        } else {\n            return false;\n        }\n\n        if ($pages > 1) {\n            // Set rewrite URL, if needed\n            if ($this->config->get('main.enableRewriteRules')) {\n                $link = new Link($this->config->getDefaultUrl(), $this->config);\n                $useRewrite = true;\n                $rewriteUrl = sprintf(\n                    '%scategory/%d/%%d/%s.html',\n                    $this->config->getDefaultUrl(),\n                    $categoryId,\n                    $link->getSEOItemTitle($title)\n                );\n            } else {\n                $useRewrite = false;\n                $rewriteUrl = '';\n            }\n            $baseUrl = sprintf(\n                '%sindex.php?%saction=show&amp;cat=%d&amp;seite=%d',\n                $this->config->getDefaultUrl(),\n                (empty($sids) ? '' : $sids),\n                $categoryId,\n                $page\n            );\n\n            $options = array(\n                'baseUrl' => $baseUrl,\n                'total' => $num,\n                'perPage' => $this->config->get('records.numberOfRecordsPerPage'),\n                'useRewrite' => $useRewrite,\n                'rewriteUrl' => $rewriteUrl,\n                'pageParamName' => 'seite',\n            );\n\n            $pagination = new Pagination($this->config, $options);\n            $output .= $pagination->render();\n        }\n\n        return $output;\n    }\n\n    /**\n     * This function returns all not expired records from the given record ids.\n     *\n     * @param array  $recordIds Array of record ids\n     * @param string $orderBy   Order by\n     * @param string $sortBy    Sort by\n     *\n     * @return string\n     */\n    public function renderRecordsByFaqIds(array $recordIds, string $orderBy = 'fd.id', string $sortBy = 'ASC'): string\n    {\n        global $sids;\n\n        $records = implode(', ', $recordIds);\n        $page = Filter::filterInput(INPUT_GET, 'seite', FILTER_VALIDATE_INT, 1);\n        $taggingId = Filter::filterInput(INPUT_GET, 'tagging_id', FILTER_VALIDATE_INT);\n        $output = '';\n\n        $now = date('YmdHis');\n        $query = sprintf(\n            \"\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.thema AS thema,\n                fcr.category_id AS category_id,\n                fv.visits AS visits\n            FROM\n                %sfaqdata AS fd\n            LEFT JOIN\n                %sfaqcategoryrelations AS fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                %sfaqvisits AS fv\n            ON\n                fd.id = fv.id\n            AND\n                fv.lang = fd.lang\n            LEFT JOIN\n                %sfaqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.date_start <= '%s'\n            AND\n                fd.date_end   >= '%s'\n            AND\n                fd.active = 'yes'\n            AND\n                fd.id IN (%s)\n            AND\n                fd.lang = '%s'\n                %s\n            ORDER BY\n                %s %s\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $now,\n            $now,\n            $records,\n            $this->config->getLanguage()->getLanguage(),\n            $this->queryPermission($this->groupSupport),\n            $this->config->getDb()->escape($orderBy),\n            $this->config->getDb()->escape($sortBy)\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        $num = $this->config->getDb()->numRows($result);\n        $pages = ceil($num / $this->config->get('records.numberOfRecordsPerPage'));\n\n        if ($page == 1) {\n            $first = 0;\n        } else {\n            $first = ($page * $this->config->get('records.numberOfRecordsPerPage')) -\n                $this->config->get('records.numberOfRecordsPerPage');\n        }\n\n        if ($num > 0) {\n            if ($pages > 1) {\n                $output .= sprintf(\n                    '<p><strong>%s %s %s</strong></p>',\n                    $this->translation['msgPage'] . $page,\n                    $this->translation['msgVoteFrom'],\n                    $pages . $this->translation['msgPages']\n                );\n            }\n            $output .= '<ul class=\"phpmyfaq_ul\">';\n            $counter = 0;\n            $displayedCounter = 0;\n\n            $lastFaqId = 0;\n            while (\n                ($row = $this->config->getDb()->fetchObject($result)) &&\n                $displayedCounter < $this->config->get('records.numberOfRecordsPerPage')\n            ) {\n                ++$counter;\n                if ($counter <= $first) {\n                    continue;\n                }\n                ++$displayedCounter;\n\n                if ($lastFaqId == $row->id) {\n                    continue; // Don't show multiple FAQs\n                }\n\n                if (empty($row->visits)) {\n                    $visits = 0;\n                } else {\n                    $visits = $row->visits;\n                }\n\n                $title = $row->thema;\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $row->thema;\n                $oLink->text = $title;\n                $oLink->tooltip = $title;\n                $listItem = sprintf(\n                    '<li>%s<br><small>(%s)</small></li>',\n                    $oLink->toHtmlAnchor(),\n                    $this->plurals->GetMsg('plmsgViews', $visits)\n                );\n\n                $output .= $listItem;\n\n                $lastFaqId = $row->id;\n            }\n            $output .= '</ul><span id=\"totFaqRecords\" style=\"display: none;\">' . $num . '</span>';\n        } else {\n            return false;\n        }\n\n        if ($num > $this->config->get('records.numberOfRecordsPerPage')) {\n            $output .= '<p class=\"text-center\"><strong>';\n            if (!isset($page)) {\n                $page = 1;\n            }\n            $vor = $page - 1;\n            $next = $page + 1;\n            if ($vor != 0) {\n                $url = $sids . '&amp;action=search&amp;tagging_id=' . $taggingId . '&amp;seite=' . $vor;\n                $oLink = new Link($this->config->getDefaultUrl() . '?' . $url, $this->config);\n                $oLink->itemTitle = 'tag';\n                $oLink->text = $this->translation['msgPrevious'];\n                $oLink->tooltip = $this->translation['msgPrevious'];\n                $output .= '[ ' . $oLink->toHtmlAnchor() . ' ]';\n            }\n            $output .= ' ';\n            if ($next <= $pages) {\n                $url = $sids . '&amp;action=search&amp;tagging_id=' . $taggingId . '&amp;seite=' . $next;\n                $oLink = new Link($this->config->getDefaultUrl() . '?' . $url, $this->config);\n                $oLink->itemTitle = 'tag';\n                $oLink->text = $this->translation['msgNext'];\n                $oLink->tooltip = $this->translation['msgNext'];\n                $output .= '[ ' . $oLink->toHtmlAnchor() . ' ]';\n            }\n            $output .= '</strong></p>';\n        }\n\n        return $output;\n    }\n\n    /**\n     * Returns an array with all data from a FAQ record.\n     *\n     * @param int      $faqId FAQ ID\n     * @param int|null $faqRevisionId Revision ID\n     * @param bool     $isAdmin Must be true if it is called by an admin/author context\n     */\n    public function getRecord(int $faqId, int $faqRevisionId = null, bool $isAdmin = false)\n    {\n        global $PMF_LANG;\n\n        $currentLanguage = $this->config->getLanguage()->getLanguage();\n        $defaultLanguage = $this->config->getDefaultLanguage();\n\n        $result = $this->getRecordResult($faqId, $currentLanguage, $faqRevisionId, $isAdmin);\n\n        if (0 === $this->config->getDb()->numRows($result)) {\n            $result = $this->getRecordResult($faqId, $defaultLanguage, $faqRevisionId, $isAdmin);\n        }\n\n        if ($row = $this->config->getDb()->fetchObject($result)) {\n            $question = nl2br($row->thema);\n            $answer = $row->content;\n            $active = ('yes' === $row->active);\n            $expired = (date('YmdHis') > $row->date_end);\n\n            if (!$isAdmin) {\n                if (!$active) {\n                    $answer = $this->translation['err_inactiveArticle'];\n                }\n                if ($expired) {\n                    $answer = $this->translation['err_expiredArticle'];\n                }\n            }\n\n            $this->faqRecord = [\n                'id' => $row->id,\n                'lang' => $row->lang,\n                'solution_id' => $row->solution_id,\n                'revision_id' => $row->revision_id,\n                'active' => $row->active,\n                'sticky' => $row->sticky,\n                'keywords' => $row->keywords,\n                'title' => $question,\n                'content' => $answer,\n                'author' => $row->author,\n                'email' => $row->email,\n                'comment' => $row->comment,\n                'date' => Date::createIsoDate($row->updated),\n                'dateStart' => $row->date_start,\n                'dateEnd' => $row->date_end,\n                'linkState' => $row->links_state,\n                'linkCheckDate' => $row->links_check_date,\n                'notes' => $row->notes,\n                'created' => $row->created,\n            ];\n        } else {\n            $this->faqRecord = [\n                'id' => $faqId,\n                'lang' => $currentLanguage,\n                'solution_id' => 42,\n                'revision_id' => $faqRevisionId,\n                'active' => 'no',\n                'sticky' => 0,\n                'keywords' => '',\n                'title' => '',\n                'content' => $PMF_LANG['msgAccessDenied'],\n                'author' => '',\n                'email' => '',\n                'comment' => '',\n                'date' => Date::createIsoDate(date('YmdHis')),\n                'dateStart' => '',\n                'dateEnd' => '',\n                'linkState' => '',\n                'linkCheckDate' => '',\n                'notes' => '',\n                'created' => date('c'),\n            ];\n        }\n    }\n\n    /**\n     * Executes a query to retrieve a single FAQ.\n     *\n     * @param int    $faqId\n     * @param string $faqLanguage\n     * @param null   $faqRevisionId\n     * @param bool   $isAdmin\n     * @return mixed\n     */\n    public function getRecordResult($faqId, $faqLanguage, $faqRevisionId = null, $isAdmin = false)\n    {\n        $query = sprintf(\n            \"SELECT\n                 id, lang, solution_id, revision_id, active, sticky, keywords,\n                 thema, content, author, email, comment, updated, links_state,\n                 links_check_date, date_start, date_end, created, notes\n            FROM\n                %s%s fd\n            LEFT JOIN\n                %sfaqdata_group fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.id = %d\n            %s\n            AND\n                fd.lang = '%s'\n                %s\",\n            Database::getTablePrefix(),\n            isset($faqRevisionId) ? 'faqdata_revisions' : 'faqdata',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $faqId,\n            isset($faqRevisionId) ? 'AND revision_id = ' . $faqRevisionId : '',\n            $faqLanguage,\n            ($isAdmin) ? 'AND 1=1' : $this->queryPermission($this->groupSupport)\n        );\n\n        return $this->config->getDb()->query($query);\n    }\n\n    /**\n     * Return records from given IDs\n     *\n     * @param  array $faqIds\n     * @return array\n     * @throws Exception\n     */\n    public function getRecordsByIds(array $faqIds): array\n    {\n        $faqRecords = [];\n\n        $query = sprintf(\n            \"SELECT\n                 fd.id AS id,\n                 fd.lang AS lang,\n                 fd.thema AS question,\n                 fd.content AS answer,\n                 fd.updated AS updated,\n                 fd.created AS created,\n                 fcr.category_id AS category_id,\n                 fv.visits AS visits\n            FROM\n                %sfaqdata fd\n            LEFT JOIN\n                %sfaqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                %sfaqdata_group fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqvisits AS fv\n            ON\n                fd.id = fv.id\n            AND\n                fv.lang = fd.lang\n            LEFT JOIN\n                %sfaqdata_user fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.id IN (%s)\n            AND\n                fd.lang = '%s'\n                %s\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            implode(',', $faqIds),\n            $this->config->getLanguage()->getLanguage(),\n            $this->queryPermission($this->groupSupport)\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        $faqHelper = new FaqHelper($this->config);\n        while ($row = $this->config->getDb()->fetchObject($result)) {\n            if (empty($row->visits)) {\n                $visits = 0;\n            } else {\n                $visits = $row->visits;\n            }\n\n            $url = sprintf(\n                '%sindex.php?action=faq&cat=%d&id=%d&artlang=%s',\n                $this->config->getDefaultUrl(),\n                $row->category_id,\n                $row->id,\n                $row->lang\n            );\n            $oLink = new Link($url, $this->config);\n            $oLink->itemTitle = $oLink->text = $oLink->tooltip = $row->question;\n\n            $faqRecords[] = [\n                'record_id' => (int)$row->id,\n                'record_lang' => $row->lang,\n                'category_id' => (int)$row->category_id,\n                'record_title' => $row->question,\n                'record_preview' => $faqHelper->renderAnswerPreview($row->answer, 25),\n                'record_link' => $oLink->toString(),\n                'record_updated' => Date::createIsoDate($row->updated) . ':00',\n                'visits' => (int)$visits,\n                'record_created' => $row->created\n            ];\n        }\n\n        return $faqRecords;\n    }\n\n    /**\n     * Adds a new record.\n     *\n     * @param array $data      Array of FAQ data\n     * @param bool  $newRecord Do not create a new ID if false\n     * @deprecated will be removed in v3.2\n     *\n     * @return int\n     */\n    public function addRecord(array $data, bool $newRecord = true): int\n    {\n        if ($newRecord) {\n            $recordId = $this->config->getDb()->nextId(Database::getTablePrefix() . 'faqdata', 'id');\n        } else {\n            $recordId = $data['id'];\n        }\n\n        // Add new entry\n        $query = sprintf(\n            \"INSERT INTO %sfaqdata VALUES\n            (%d, '%s', %d, %d, '%s', %d, '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', %d, '%s', '%s', '%s', '%s')\",\n            Database::getTablePrefix(),\n            $recordId,\n            $this->config->getDb()->escape($data['lang']),\n            $this->getNextSolutionId(),\n            0,\n            $data['active'],\n            $data['sticky'],\n            $this->config->getDb()->escape($data['keywords']),\n            $this->config->getDb()->escape($data['thema']),\n            $this->config->getDb()->escape($data['content']),\n            $this->config->getDb()->escape($data['author']),\n            $data['email'],\n            $data['comment'],\n            $data['date'],\n            $data['linkState'],\n            $data['linkDateCheck'],\n            $data['dateStart'],\n            $data['dateEnd'],\n            date('Y-m-d H:i:s'),\n            $data['notes']\n        );\n\n        $this->config->getDb()->query($query);\n\n        return $recordId;\n    }\n\n    /**\n     * Creates a new FAQ.\n     *\n     * @param FaqEntity $faq\n     * @return int\n     */\n    public function create(FaqEntity $faq): int\n    {\n        if (is_null($faq->getId())) {\n            $faq->setId($this->config->getDb()->nextId(Database::getTablePrefix() . 'faqdata', 'id'));\n        }\n\n        $query = sprintf(\n            \"INSERT INTO %sfaqdata VALUES\n            (%d, '%s', %d, %d, '%s', %d, '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', %d, '%s', '%s', '%s', '%s')\",\n            Database::getTablePrefix(),\n            $faq->getId(),\n            $this->config->getDb()->escape($faq->getLanguage()),\n            $this->getNextSolutionId(),\n            0,\n            $faq->isActive() ? 'yes' : 'no',\n            $faq->isSticky() ? 1 : 0,\n            $this->config->getDb()->escape($faq->getKeywords()),\n            $this->config->getDb()->escape($faq->getQuestion()),\n            $this->config->getDb()->escape($faq->getAnswer()),\n            $this->config->getDb()->escape($faq->getAuthor()),\n            $faq->getEmail(),\n            $faq->isComment() ? 'y' : 'n',\n            $faq->getUpdatedDate()->format('YmdHis'),\n            $faq->getLinkState(),\n            $faq->getLinksCheckedDate()->format(DATE_ISO8601),\n            '00000000000000',\n            '99991231235959',\n            date('Y-m-d H:i:s'),\n            $faq->getNotes()\n        );\n\n        $this->config->getDb()->query($query);\n\n        return $faq->getId();\n    }\n\n    /**\n     * Gets the latest solution id for a FAQ record.\n     *\n     * @return int\n     */\n    public function getNextSolutionId(): int\n    {\n        $latestId = 0;\n\n        $query = sprintf('SELECT MAX(solution_id) AS solution_id FROM %sfaqdata', Database::getTablePrefix());\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($result && $row = $this->config->getDb()->fetchObject($result)) {\n            $latestId = $row->solution_id;\n        }\n\n        if ($latestId < PMF_SOLUTION_ID_START_VALUE) {\n            $nextSolutionId = PMF_SOLUTION_ID_START_VALUE;\n        } else {\n            $nextSolutionId = $latestId + PMF_SOLUTION_ID_INCREMENT_VALUE;\n        }\n\n        return $nextSolutionId;\n    }\n\n    /**\n     * Updates a record.\n     *\n     * @param array $data Array of FAQ data\n     *\n     * @return bool\n     */\n    public function updateRecord(array $data)\n    {\n        // Update entry\n        $query = sprintf(\n            \"\n            UPDATE\n                %sfaqdata\n            SET\n                revision_id = %d,\n                active = '%s',\n                sticky = %d,\n                keywords = '%s',\n                thema = '%s',\n                content = '%s',\n                author = '%s',\n                email = '%s',\n                comment = '%s',\n                updated = '%s',\n                links_state = '%s',\n                links_check_date = %d,\n                date_start = '%s',\n                date_end = '%s',\n                notes = '%s'\n            WHERE\n                id = %d\n            AND\n                lang = '%s'\",\n            Database::getTablePrefix(),\n            $data['revision_id'],\n            $data['active'],\n            $data['sticky'],\n            $this->config->getDb()->escape($data['keywords']),\n            $this->config->getDb()->escape($data['thema']),\n            $this->config->getDb()->escape($data['content']),\n            $this->config->getDb()->escape($data['author']),\n            $data['email'],\n            $data['comment'],\n            $data['date'],\n            $data['linkState'],\n            $data['linkDateCheck'],\n            $data['dateStart'],\n            $data['dateEnd'],\n            $data['notes'],\n            $data['id'],\n            $data['lang']\n        );\n\n        $this->config->getDb()->query($query);\n\n        return true;\n    }\n\n    /**\n     * Deletes a record and all the dependencies.\n     *\n     * @param int    $recordId   Record id\n     * @param string $recordLang Record language\n     * @return bool\n     * @throws Attachment\\AttachmentException\n     * @throws Attachment\\Filesystem\\File\\FileException\n     */\n    public function deleteRecord(int $recordId, string $recordLang): bool\n    {\n        $solutionId = $this->getSolutionIdFromId($recordId, $recordLang);\n\n        $queries = array(\n            sprintf(\n                \"DELETE FROM %sfaqchanges WHERE beitrag = %d AND lang = '%s'\",\n                Database::getTablePrefix(),\n                $recordId,\n                $this->config->getDb()->escape($recordLang)\n            ),\n            sprintf(\n                \"DELETE FROM %sfaqcategoryrelations WHERE record_id = %d AND record_lang = '%s'\",\n                Database::getTablePrefix(),\n                $recordId,\n                $this->config->getDb()->escape($recordLang)\n            ),\n            sprintf(\n                \"DELETE FROM %sfaqdata WHERE id = %d AND lang = '%s'\",\n                Database::getTablePrefix(),\n                $recordId,\n                $this->config->getDb()->escape($recordLang)\n            ),\n            sprintf(\n                \"DELETE FROM %sfaqdata_revisions WHERE id = %d AND lang = '%s'\",\n                Database::getTablePrefix(),\n                $recordId,\n                $this->config->getDb()->escape($recordLang)\n            ),\n            sprintf(\n                \"DELETE FROM %sfaqvisits WHERE id = %d AND lang = '%s'\",\n                Database::getTablePrefix(),\n                $recordId,\n                $this->config->getDb()->escape($recordLang)\n            ),\n            sprintf(\n                'DELETE FROM %sfaqdata_user WHERE record_id = %d',\n                Database::getTablePrefix(),\n                $recordId\n            ),\n            sprintf(\n                'DELETE FROM %sfaqdata_group WHERE record_id = %d',\n                Database::getTablePrefix(),\n                $recordId\n            ),\n            sprintf(\n                'DELETE FROM %sfaqdata_tags WHERE record_id = %d',\n                Database::getTablePrefix(),\n                $recordId\n            ),\n            sprintf(\n                'DELETE FROM %sfaqdata_tags WHERE %sfaqdata_tags.record_id NOT IN (SELECT %sfaqdata.id FROM %sfaqdata)',\n                Database::getTablePrefix(),\n                Database::getTablePrefix(),\n                Database::getTablePrefix(),\n                Database::getTablePrefix()\n            ),\n            sprintf(\n                'DELETE FROM %sfaqcomments WHERE id = %d',\n                Database::getTablePrefix(),\n                $recordId\n            ),\n            sprintf(\n                'DELETE FROM %sfaqvoting WHERE artikel = %d',\n                Database::getTablePrefix(),\n                $recordId\n            ),\n        );\n\n        foreach ($queries as $query) {\n            $this->config->getDb()->query($query);\n        }\n\n        // Delete possible attachments\n        $attachments = AttachmentFactory::fetchByRecordId($this->config, $recordId);\n        foreach ($attachments as $attachment) {\n            $currentAttachment = AttachmentFactory::create($attachment->getId());\n            $currentAttachment->delete();\n        }\n\n        // Delete possible Elasticsearch documents\n        if ($this->config->get('search.enableElasticsearch')) {\n            $esInstance = new Elasticsearch($this->config);\n            $esInstance->delete($solutionId);\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns the solution ID from a given ID and language\n     *\n     * @param int    $faqId\n     * @param string $faqLang\n     *\n     * @return int\n     */\n    public function getSolutionIdFromId(int $faqId, string $faqLang): int\n    {\n        $query = sprintf(\n            \"\n            SELECT\n                solution_id\n            FROM\n                %sfaqdata\n            WHERE\n                id = %d\n                AND\n                lang = '%s'\",\n            Database::getTablePrefix(),\n            $faqId,\n            $this->config->getDb()->escape($faqLang)\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($row = $this->config->getDb()->fetchObject($result)) {\n            return $row->solution_id;\n        }\n\n        return $this->getNextSolutionId();\n    }\n\n    /**\n     * Checks if a record is already translated.\n     *\n     * @param int    $recordId   Record id\n     * @param string $recordLang Record language\n     * @return bool\n     */\n    public function hasTranslation(int $recordId, string $recordLang): bool\n    {\n        $query = sprintf(\n            \"\n            SELECT\n                id, lang\n            FROM\n                %sfaqdata\n            WHERE\n                id = %d\n            AND\n                lang = '%s'\",\n            Database::getTablePrefix(),\n            $recordId,\n            $this->config->getDb()->escape($recordLang)\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($this->config->getDb()->numRows($result)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Checks, if comments are disabled for the FAQ record.\n     *\n     * @param int    $recordId    Id of FAQ or news entry\n     * @param string $recordLang  Language\n     * @param string $commentType Type of comment: faq or news\n     * @return bool true, if comments are disabled\n     */\n    public function commentDisabled(int $recordId, string $recordLang, string $commentType = 'faq'): bool\n    {\n        if ('news' == $commentType) {\n            $table = 'faqnews';\n        } else {\n            $table = 'faqdata';\n        }\n\n        $query = sprintf(\n            \"\n            SELECT\n                comment\n            FROM\n                %s%s\n            WHERE\n                id = %d\n            AND\n                lang = '%s'\",\n            Database::getTablePrefix(),\n            $table,\n            $recordId,\n            $this->config->getDb()->escape($recordLang)\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($row = $this->config->getDb()->fetchObject($result)) {\n            return !(($row->comment === 'y'));\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * Returns an array with all data from a FAQ record.\n     *\n     * @param int $solutionId Solution ID\n     */\n    public function getRecordBySolutionId(int $solutionId): void\n    {\n        $query = sprintf(\n            'SELECT\n                *\n            FROM\n                %sfaqdata fd\n            LEFT JOIN\n                %sfaqdata_group fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.solution_id = %d\n                %s',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $solutionId,\n            $this->queryPermission($this->groupSupport)\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($row = $this->config->getDb()->fetchObject($result)) {\n            $question = nl2br($row->thema);\n            $content = $row->content;\n            $active = ('yes' == $row->active);\n            $expired = (date('YmdHis') > $row->date_end);\n\n            if (!$active) {\n                $content = $this->translation['err_inactiveArticle'];\n            }\n            if ($expired) {\n                $content = $this->translation['err_expiredArticle'];\n            }\n\n            $this->faqRecord = array(\n                'id' => $row->id,\n                'lang' => $row->lang,\n                'solution_id' => $row->solution_id,\n                'revision_id' => $row->revision_id,\n                'active' => $row->active,\n                'sticky' => $row->sticky,\n                'keywords' => $row->keywords,\n                'title' => $question,\n                'content' => $content,\n                'author' => $row->author,\n                'email' => $row->email,\n                'comment' => $row->comment,\n                'date' => Date::createIsoDate($row->updated),\n                'dateStart' => $row->date_start,\n                'dateEnd' => $row->date_end,\n                'linkState' => $row->links_state,\n                'linkCheckDate' => $row->links_check_date,\n                'notes' => $row->notes\n            );\n        }\n    }\n\n    /**\n     * Gets the record ID from a given solution ID.\n     *\n     * @param int $solutionId Solution ID\n     *\n     * @return array\n     */\n    public function getIdFromSolutionId($solutionId)\n    {\n        $query = sprintf(\n            '\n            SELECT\n                fd.id,\n                fd.lang,\n                fd.thema AS question,\n                fd.content,\n                fcr.category_id AS category_id\n            FROM\n                %sfaqdata fd\n            LEFT JOIN\n                %sfaqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            WHERE\n                fd.solution_id = %d',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $solutionId\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($row = $this->config->getDb()->fetchObject($result)) {\n            return [\n                'id' => $row->id,\n                'lang' => $row->lang,\n                'question' => $row->question,\n                'content' => $row->content,\n                'category_id' => $row->category_id\n            ];\n        }\n\n        return [];\n    }\n\n    /**\n     * Returns an array with all data from all FAQ records.\n     *\n     * @param int    $sortType  Sorting type\n     * @param array  $condition Condition\n     * @param string $sortOrder Sorting order\n     */\n    public function getAllRecords($sortType = FAQ_SORTING_TYPE_CATID_FAQID, array $condition = null, $sortOrder = 'ASC')\n    {\n        $where = '';\n        if (!is_null($condition)) {\n            $num = count($condition);\n            $where = 'WHERE ';\n            foreach ($condition as $field => $data) {\n                --$num;\n                $where .= $field;\n                if (is_array($data)) {\n                    $where .= ' IN (';\n                    $separator = '';\n                    foreach ($data as $value) {\n                        $where .= $separator . \"'\" . $this->config->getDb()->escape($value) . \"'\";\n                        $separator = ', ';\n                    }\n                    $where .= ')';\n                } else {\n                    $where .= \" = '\" . $this->config->getDb()->escape($data) . \"'\";\n                }\n                if ($num > 0) {\n                    $where .= ' AND ';\n                }\n            }\n        }\n\n        switch ($sortType) {\n            case FAQ_SORTING_TYPE_CATID_FAQID:\n                $orderBy = sprintf(\n                    '\n            ORDER BY\n                fcr.category_id,\n                fd.id %s',\n                    $sortOrder\n                );\n                break;\n\n            case FAQ_SORTING_TYPE_FAQID:\n                $orderBy = sprintf(\n                    '\n            ORDER BY\n                fd.id %s',\n                    $sortOrder\n                );\n                break;\n\n            case FAQ_SORTING_TYPE_FAQTITLE_FAQID:\n                $orderBy = sprintf(\n                    '\n            ORDER BY\n                fcr.category_id,\n                fd.thema %s',\n                    $sortOrder\n                );\n                break;\n\n            case FAQ_SORTING_TYPE_DATE_FAQID:\n                $orderBy = sprintf(\n                    '\n            ORDER BY\n                fcr.category_id,\n                fd.updated %s',\n                    $sortOrder\n                );\n                break;\n\n            default:\n                $orderBy = '';\n                break;\n        }\n\n        // prevents multiple display of FAQ in case it is tagged under multiple groups.\n        $groupBy = ' group by fd.id, fcr.category_id,fd.solution_id,fd.revision_id,fd.active,fd.sticky,fd.keywords,' .\n            'fd.thema,fd.content,fd.author,fd.email,fd.comment,fd.updated,fd.links_state,fd.links_check_date,' .\n            'fd.date_start,fd.date_end,fd.sticky,fd.created,fd.notes,fd.lang ';\n        $query = sprintf(\n            '\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fcr.category_id AS category_id,\n                fd.solution_id AS solution_id,\n                fd.revision_id AS revision_id,\n                fd.active AS active,\n                fd.sticky AS sticky,\n                fd.keywords AS keywords,\n                fd.thema AS thema,\n                fd.content AS content,\n                fd.author AS author,\n                fd.email AS email,\n                fd.comment AS comment,\n                fd.updated AS updated,\n                fd.links_state AS links_state,\n                fd.links_check_date AS links_check_date,\n                fd.date_start AS date_start,\n                fd.date_end AS date_end,\n                fd.sticky AS sticky,\n                fd.created AS created,\n                fd.notes AS notes\n            FROM\n                %sfaqdata fd\n            LEFT JOIN\n                %sfaqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                %sfaqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            %s\n            %s\n            %s\n            %s',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $where,\n            $this->queryPermission($this->groupSupport),\n            $groupBy,\n            $orderBy\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        while ($row = $this->config->getDb()->fetchObject($result)) {\n            $content = $row->content;\n            $active = ('yes' == $row->active);\n            $expired = (date('YmdHis') > $row->date_end);\n\n            if (!$active) {\n                $content = $this->translation['err_inactiveArticle'];\n            }\n            if ($expired) {\n                $content = $this->translation['err_expiredArticle'];\n            }\n\n            $this->faqRecords[] = [\n                'id' => $row->id,\n                'category_id' => $row->category_id,\n                'lang' => $row->lang,\n                'solution_id' => $row->solution_id,\n                'revision_id' => $row->revision_id,\n                'active' => $row->active,\n                'sticky' => $row->sticky,\n                'keywords' => $row->keywords,\n                'title' => $row->thema,\n                'content' => $content,\n                'author' => $row->author,\n                'email' => $row->email,\n                'comment' => $row->comment,\n                'updated' => Date::createIsoDate($row->updated, 'Y-m-d H:i:s'),\n                'dateStart' => $row->date_start,\n                'dateEnd' => $row->date_end,\n                'created' => $row->created,\n                'notes' => $row->notes\n            ];\n        }\n    }\n\n    /**\n     * Returns the FAQ record title from the ID and language.\n     *\n     * @param int $id Record id\n     * @return string\n     */\n    public function getRecordTitle(int $id): string\n    {\n        if (isset($this->faqRecord['id']) && ($this->faqRecord['id'] == $id)) {\n            return $this->faqRecord['title'];\n        }\n\n        $question = '';\n\n        $query = sprintf(\n            \"SELECT\n                thema AS question\n            FROM\n                %sfaqdata\n            WHERE\n                id = %d AND lang = '%s'\",\n            Database::getTablePrefix(),\n            $id,\n            $this->config->getLanguage()->getLanguage()\n        );\n        $result = $this->config->getDb()->query($query);\n\n        if ($this->config->getDb()->numRows($result) > 0) {\n            while ($row = $this->config->getDb()->fetchObject($result)) {\n                $question = Strings::htmlspecialchars($row->question);\n            }\n        } else {\n            $question = $this->translation['no_cats'];\n        }\n\n        return $question;\n    }\n\n    /**\n     * Returns the keywords of a FAQ record from the ID and language.\n     *\n     * @param int $id record id\n     * @return string\n     */\n    public function getRecordKeywords(int $id): string\n    {\n        if (isset($this->faqRecord['id']) && ($this->faqRecord['id'] == $id)) {\n            return $this->faqRecord['keywords'];\n        }\n\n        $query = sprintf(\n            \"SELECT\n                keywords\n            FROM\n                %sfaqdata\n            WHERE id = %d AND lang = '%s'\",\n            Database::getTablePrefix(),\n            $id,\n            $this->config->getLanguage()->getLanguage()\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($this->config->getDb()->numRows($result) > 0) {\n            $row = $this->config->getDb()->fetchObject($result);\n\n            return Strings::htmlspecialchars($row->keywords, ENT_QUOTES, 'utf-8');\n        } else {\n            return '';\n        }\n    }\n\n    /**\n     * Returns a answer preview of the FAQ record.\n     *\n     * @param int $recordId  FAQ record ID\n     * @param int $wordCount Number of words, default: 12\n     * @return string\n     */\n    public function getRecordPreview(int $recordId, int $wordCount = 12): string\n    {\n        if (isset($this->faqRecord['id']) && ((int)$this->faqRecord['id'] === (int)$recordId)) {\n            $answerPreview = $this->faqRecord['content'];\n\n            return Utils::makeShorterText($answerPreview, $wordCount);\n        }\n\n        $query = sprintf(\n            \"\n            SELECT\n                content as answer\n            FROM\n                %sfaqdata\n            WHERE \n                id = %d \n            AND \n                lang = '%s'\",\n            Database::getTablePrefix(),\n            $recordId,\n            $this->config->getLanguage()->getLanguage()\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($this->config->getDb()->numRows($result) > 0) {\n            $row = $this->config->getDb()->fetchObject($result);\n            $answerPreview = strip_tags($row->answer);\n        } else {\n            $answerPreview = $this->config->get('main.metaDescription');\n        }\n\n        return Utils::makeShorterText($answerPreview, $wordCount);\n    }\n\n    /**\n     * Returns the number of activated and not expired records, optionally\n     * not limited to the current language.\n     *\n     * @param string|null $language Language\n     * @return int\n     */\n    public function getNumberOfRecords(string $language = null): int\n    {\n        $now = date('YmdHis');\n\n        $query = sprintf(\n            \"\n            SELECT\n                id\n            FROM\n                %sfaqdata\n            WHERE\n                active = 'yes'\n            %s\n            AND\n                date_start <= '%s'\n            AND\n                date_end >= '%s'\",\n            Database::getTablePrefix(),\n            null === $language ? '' : \"AND lang = '\" . $this->config->getDb()->escape($language) . \"'\",\n            $now,\n            $now\n        );\n\n        $num = $this->config->getDb()->numRows($this->config->getDb()->query($query));\n\n        if ($num > 0) {\n            return $num;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * This function generates a list with the most voted or most visited records.\n     *\n     * @param string $type Type definition visits/voted\n     * @return array\n     */\n    public function getTopTen(string $type = 'visits'): array\n    {\n        if ('visits' === $type) {\n            $result = $this->getTopTenData(PMF_NUMBER_RECORDS_TOPTEN, 0, $this->config->getLanguage()->getLanguage());\n        } else {\n            $result = $this->getTopVotedData(PMF_NUMBER_RECORDS_TOPTEN, $this->config->getLanguage()->getLanguage());\n        }\n        $output = [];\n\n        if (count($result) > 0) {\n            foreach ($result as $row) {\n                if ('visits' == $type) {\n                    $output['title'][] = Utils::makeShorterText($row['question'], 8);\n                    $output['preview'][] = $row['question'];\n                    $output['url'][] = Strings::htmlentities($row['url']);\n                    $output['visits'][] = $this->plurals->GetMsg('plmsgViews', $row['visits']);\n                } else {\n                    $output['title'][] = Utils::makeShorterText($row['question'], 8);\n                    $output['preview'][] = $row['question'];\n                    $output['url'][] = Strings::htmlentities($row['url']);\n                    $output['voted'][] = sprintf(\n                        '%s %s 5 - %s',\n                        round($row['avg'], 2),\n                        $this->translation['msgVoteFrom'],\n                        $this->plurals->GetMsg('plmsgVotes', $row['user'])\n                    );\n                }\n            }\n        } else {\n            $output['error'] = $this->translation['err_noTopTen'];\n        }\n\n        return $output;\n    }\n\n    /**\n     * This function generates the Top Ten data with the most viewed records.\n     *\n     * @param int  $count Number of records\n     * @param int  $categoryId Entity ID\n     * @param string|null $language Language\n     * @return array\n     */\n    public function getTopTenData(\n        int $count = PMF_NUMBER_RECORDS_TOPTEN,\n        int $categoryId = 0,\n        string $language = null\n    ): array {\n        global $sids;\n\n        $now = date('YmdHis');\n        $query =\n            'SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.thema AS question,\n                fd.content AS answer,\n                fd.updated AS updated,\n                fcr.category_id AS category_id,\n                fv.visits AS visits,\n                fv.last_visit AS last_visit,\n                fdg.group_id AS group_id,\n                fdu.user_id AS user_id\n            FROM\n                ' . Database::getTablePrefix() . 'faqvisits fv,\n                ' . Database::getTablePrefix() . 'faqdata fd\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                    fd.date_start <= \\'' . $now . '\\'\n                AND fd.date_end   >= \\'' . $now . '\\'\n                AND fd.id = fv.id\n                AND fd.lang = fv.lang\n                AND fd.active = \\'yes\\'';\n\n        if (isset($categoryId) && is_numeric($categoryId) && ($categoryId != 0)) {\n            $query .= '\n            AND\n                fcr.category_id = \\'' . $categoryId . '\\'';\n        }\n        if (isset($language) && Language::isASupportedLanguage($language)) {\n            $query .= '\n            AND\n                fd.lang = \\'' . $this->config->getDb()->escape($language) . '\\'';\n        }\n        $query .= '\n                ' . $this->queryPermission($this->groupSupport) . '\n\n            GROUP BY\n                fd.id,fd.lang,fcr.category_id,fv.visits,fv.last_visit,fdg.group_id,fdu.user_id\n            ORDER BY\n                fv.visits DESC';\n\n        $result = $this->config->getDb()->query($query);\n        $topTen = [];\n        $data = [];\n\n        if ($result) {\n            while ($row = $this->config->getDb()->fetchObject($result)) {\n                if ($this->groupSupport) {\n                    if (!in_array($row->user_id, array(-1, $this->user)) || !in_array($row->group_id, $this->groups)) {\n                        continue;\n                    }\n                } else {\n                    if (!in_array($row->user_id, array(-1, $this->user))) {\n                        continue;\n                    }\n                }\n\n                $data['visits'] = (int)$row->visits;\n                $data['question'] = Filter::filterVar($row->question, FILTER_UNSAFE_RAW);\n                $data['answer'] = $row->answer;\n                $data['date'] = Date::createIsoDate($row->updated, DATE_ISO8601, true);\n                $data['last_visit'] = date('c', $row->last_visit);\n\n                $title = $row->question;\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $row->question;\n                $oLink->tooltip = $title;\n                $data['url'] = $oLink->toString();\n\n                $topTen[$row->id] = $data;\n\n                if (count($topTen) === $count) {\n                    break;\n                }\n            }\n\n            array_multisort($topTen, SORT_DESC);\n        }\n\n        return $topTen;\n    }\n\n    /**\n     * This function generates a data-set with the most voted FAQs.\n     *\n     * @param int    $count    Number of records\n     * @param string|null $language Language\n     * @return array\n     */\n    public function getTopVotedData(int $count = PMF_NUMBER_RECORDS_TOPTEN, string $language = null): array\n    {\n        global $sids;\n\n        $topten = $data = [];\n\n        $now = date('YmdHis');\n        $query =\n            '            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.thema AS thema,\n                fd.updated AS updated,\n                fcr.category_id AS category_id,\n                (fv.vote/fv.usr) AS avg,\n                fv.usr AS user\n            FROM\n                ' . Database::getTablePrefix() . 'faqvoting fv,\n                ' . Database::getTablePrefix() . 'faqdata fd\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                    fd.date_start <= \\'' . $now . '\\'\n                AND fd.date_end   >= \\'' . $now . '\\'\n                AND fd.id = fv.artikel\n                AND fd.active = \\'yes\\'';\n\n        if (isset($categoryId) && is_numeric($categoryId) && ($categoryId != 0)) {\n            $query .= '\n            AND\n                fcr.category_id = \\'' . $categoryId . '\\'';\n        }\n        if (isset($language) && Language::isASupportedLanguage($language)) {\n            $query .= '\n            AND\n                fd.lang = \\'' . $this->config->getDb()->escape($language) . '\\'';\n        }\n        $query .= '\n                ' . $this->queryPermission($this->groupSupport) . '\n            ORDER BY\n                avg DESC';\n\n        $result = $this->config->getDb()->query($query);\n\n        $i = 1;\n        $oldId = 0;\n        while (($row = $this->config->getDb()->fetchObject($result)) && $i <= $count) {\n            if ($oldId != $row->id) {\n                $data['avg'] = $row->avg;\n                $data['question'] = $row->thema;\n                $data['date'] = $row->updated;\n                $data['user'] = $row->user;\n\n                $title = $row->thema;\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $row->thema;\n                $oLink->tooltip = $title;\n                $data['url'] = $oLink->toString();\n\n                $topten[] = $data;\n                ++$i;\n            }\n            $oldId = $row->id;\n        }\n\n        return $topten;\n    }\n\n    /**\n     * This function generates the list with the latest published records.\n     *\n     * @return array\n     * @throws Exception\n     */\n    public function getLatest(): array\n    {\n        $date = new Date($this->config);\n        $result = $this->getLatestData(PMF_NUMBER_RECORDS_LATEST, $this->config->getLanguage()->getLanguage());\n        $output = [];\n\n        if (count($result) > 0) {\n            foreach ($result as $row) {\n                $output['url'][] = Strings::htmlentities($row['url']);\n                $output['title'][] = Utils::makeShorterText($row['question'], 8);\n                $output['preview'][] = $row['question'];\n                $output['date'][] = $date->format($row['date']);\n            }\n        } else {\n            $output['error'] = $this->translation['err_noArticles'];\n        }\n\n        return $output;\n    }\n\n    /**\n     * This function generates an array with a specified number of most recent\n     * published records.\n     *\n     * @param int    $count    Number of records\n     * @param string|null $language Language\n     * @return array\n     */\n    public function getLatestData(int $count = PMF_NUMBER_RECORDS_LATEST, string $language = null): array\n    {\n        global $sids;\n\n        $now = date('YmdHis');\n        $query =\n            '            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fcr.category_id AS category_id,\n                fd.thema AS question,\n                fd.content AS content,\n                fd.updated AS updated,\n                fv.visits AS visits,\n                fdg.group_id AS group_id,\n                fdu.user_id AS user_id\n            FROM\n                ' . Database::getTablePrefix() . 'faqvisits fv,\n                ' . Database::getTablePrefix() . 'faqdata fd\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                    fd.date_start <= \\'' . $now . '\\'\n                AND fd.date_end   >= \\'' . $now . '\\'\n                AND fd.id = fv.id\n                AND fd.lang = fv.lang\n                AND fd.active = \\'yes\\'';\n\n        if (isset($language) && Language::isASupportedLanguage($language)) {\n            $query .= '\n            AND\n                fd.lang = \\'' . $this->config->getDb()->escape($language) . '\\'';\n        }\n        $query .= '\n                ' . $this->queryPermission($this->groupSupport) . '\n            GROUP BY\n                fd.id,fd.lang,fcr.category_id,fv.visits,fdg.group_id,fdu.user_id\n            ORDER BY\n                fd.updated DESC';\n\n        $result = $this->config->getDb()->query($query);\n        $latest = [];\n        $data = [];\n\n        if ($result) {\n            while (($row = $this->config->getDb()->fetchObject($result))) {\n                if ($this->groupSupport) {\n                    if (!in_array($row->user_id, [-1, $this->user]) || !in_array($row->group_id, $this->groups)) {\n                        continue;\n                    }\n                } else {\n                    if (!in_array($row->user_id, [-1, $this->user])) {\n                        continue;\n                    }\n                }\n\n                $data['date'] = Date::createIsoDate($row->updated, DATE_ISO8601, true);\n                $data['question'] = Filter::filterVar($row->question, FILTER_UNSAFE_RAW);\n                $data['answer'] = $row->content;\n                $data['visits'] = (int)$row->visits;\n\n                $title = $row->question;\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $title;\n                $oLink->tooltip = $title;\n                $data['url'] = $oLink->toString();\n\n                $latest[$row->id] = $data;\n\n                if (count($latest) === $count) {\n                    break;\n                }\n            }\n        }\n\n        return $latest;\n    }\n\n    /**\n     * Retrieve faq records according to the constraints provided.\n     *\n     * @param string $queryType\n     * @param int    $nCatid\n     * @param bool   $bDownwards\n     * @param string $lang\n     * @param string $date\n     * @return array\n     */\n    public function get(\n        string $queryType = FAQ_QUERY_TYPE_DEFAULT,\n        int $nCatid = 0,\n        bool $bDownwards = true,\n        string $lang = '',\n        string $date = ''\n    ): array {\n        $faqs = [];\n\n        $result = $this->config->getDb()->query($this->getSQLQuery($queryType, $nCatid, $bDownwards, $lang, $date));\n\n        if ($this->config->getDb()->numRows($result) > 0) {\n            $i = 0;\n            while ($row = $this->config->getDb()->fetchObject($result)) {\n                $faq = [];\n                $faq['id'] = $row->id;\n                $faq['solution_id'] = $row->solution_id;\n                $faq['revision_id'] = $row->revision_id;\n                $faq['lang'] = $row->lang;\n                $faq['category_id'] = $row->category_id;\n                $faq['active'] = $row->active;\n                $faq['sticky'] = $row->sticky;\n                $faq['keywords'] = $row->keywords;\n                $faq['topic'] = $row->thema;\n                $faq['content'] = $row->content;\n                $faq['author_name'] = $row->author;\n                $faq['author_email'] = $row->email;\n                $faq['comment_enable'] = $row->comment;\n                $faq['lastmodified'] = $row->updated;\n                $faq['hits'] = $row->visits;\n                $faq['hits_last'] = $row->last_visit;\n                $faq['notes'] = $row->notes;\n                $faqs[$i] = $faq;\n                ++$i;\n            }\n        }\n\n        return $faqs;\n    }\n\n    /**\n     * Build the SQL query for retrieving faq records according to the constraints provided.\n     *\n     * @param string $queryType\n     * @param int    $categoryId\n     * @param bool   $bDownwards\n     * @param string $lang\n     * @param string $date\n     * @param int    $faqId\n     * @return string\n     */\n    private function getSQLQuery(\n        string $queryType,\n        int $categoryId,\n        bool $bDownwards,\n        string $lang,\n        string $date,\n        int $faqId = 0\n    ): string {\n        $now = date('YmdHis');\n        $query = sprintf(\n            \"\n            SELECT\n                fd.id AS id,\n                fd.solution_id AS solution_id,\n                fd.revision_id AS revision_id,\n                fd.lang AS lang,\n                fcr.category_id AS category_id,\n                fd.active AS active,\n                fd.sticky AS sticky,\n                fd.keywords AS keywords,\n                fd.thema AS thema,\n                fd.content AS content,\n                fd.author AS author,\n                fd.email AS email,\n                fd.comment AS comment,\n                fd.updated AS updated,\n                fd.notes AS notes,\n                fv.visits AS visits,\n                fv.last_visit AS last_visit\n            FROM\n                %sfaqdata fd,\n                %sfaqvisits fv,\n                %sfaqcategoryrelations fcr\n            WHERE\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            AND\n                fd.date_start <= '%s'\n            AND\n                fd.date_end   >= '%s'\n            AND \",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $now,\n            $now\n        );\n        // faqvisits data selection\n        if (!empty($faqId)) {\n            // Select ONLY the faq with the provided $faqid\n            $query .= \"fd.id = '\" . $faqId . \"' AND \";\n        }\n        $query .= 'fd.id = fv.id\n            AND\n                fd.lang = fv.lang';\n        $needAndOp = true;\n        if ((!empty($categoryId)) && $categoryId > 0) {\n            if ($needAndOp) {\n                $query .= ' AND';\n            }\n            $query .= ' (fcr.category_id = ' . $categoryId;\n            if ($bDownwards) {\n                $query .= $this->getCatidWhereSequence($categoryId, 'OR');\n            }\n            $query .= ')';\n            $needAndOp = true;\n        }\n        if ((!empty($date)) && Utils::isLikeOnPMFDate($date)) {\n            if ($needAndOp) {\n                $query .= ' AND';\n            }\n            $query .= \" fd.updated LIKE '\" . $date . \"'\";\n            $needAndOp = true;\n        }\n        if ((!empty($lang)) && Utils::isLanguage($lang)) {\n            if ($needAndOp) {\n                $query .= ' AND';\n            }\n            $query .= \" fd.lang = '\" . $this->config->getDb()->escape($lang) . \"'\";\n            $needAndOp = true;\n        }\n        switch ($queryType) {\n            case FAQ_QUERY_TYPE_APPROVAL:\n                if ($needAndOp) {\n                    $query .= ' AND';\n                }\n                $query .= \" fd.active = '\" . FAQ_SQL_ACTIVE_NO . \"'\";\n                break;\n            case FAQ_QUERY_TYPE_EXPORT_PDF:\n            case FAQ_QUERY_TYPE_EXPORT_XHTML:\n            case FAQ_QUERY_TYPE_EXPORT_XML:\n                if ($needAndOp) {\n                    $query .= ' AND';\n                }\n                $query .= \" fd.active = '\" . FAQ_SQL_ACTIVE_YES . \"'\";\n                break;\n            default:\n                if ($needAndOp) {\n                    $query .= ' AND';\n                }\n                $query .= \" fd.active = '\" . FAQ_SQL_ACTIVE_YES . \"'\";\n                break;\n        }\n        // Sort criteria\n        switch ($queryType) {\n            case FAQ_QUERY_TYPE_EXPORT_PDF:\n            case FAQ_QUERY_TYPE_EXPORT_XHTML:\n            case FAQ_QUERY_TYPE_EXPORT_XML:\n                $query .= \"\\nORDER BY fcr.category_id, fd.id\";\n                break;\n            default:\n                // Normal ordering\n                $query .= \"\\nORDER BY fcr.category_id, fd.id\";\n                break;\n        }\n\n        return $query;\n    }\n\n    /**\n     * Build a logic sequence, for a WHERE statement, of those category IDs\n     * children of the provided category ID, if any.\n     *\n     * @param int    $nCatid\n     * @param string $logicOp\n     * @param $oCat\n     * @return string\n     */\n    private function getCatidWhereSequence(int $nCatid, string $logicOp = 'OR', $oCat = null): string\n    {\n        $sqlWhereFilter = '';\n\n        if (!isset($oCat)) {\n            $oCat = new Category($this->config);\n        }\n        $aChildren = array_values($oCat->getChildren($nCatid));\n\n        foreach ($aChildren as $catid) {\n            $sqlWhereFilter .= ' ' . $logicOp . ' fcr.category_id = ' . $catid;\n            $sqlWhereFilter .= $this->getCatidWhereSequence($catid, 'OR', $oCat);\n        }\n\n        return $sqlWhereFilter;\n    }\n\n    /**\n     * Returns all records of one category.\n     *\n     * @param int $categoryId\n     *\n     * @return string\n     */\n    public function getRecordsWithoutPagingByCategoryId(int $categoryId): string\n    {\n        global $sids;\n\n        $output = '';\n        $now = date('YmdHis');\n        $query = sprintf(\n            \"\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.thema AS thema,\n                fcr.category_id AS category_id,\n                fv.visits AS visits\n            FROM\n                %sfaqdata fd\n            LEFT JOIN\n                %sfaqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                %sfaqvisits fv\n            ON\n                fd.id = fv.id\n            AND\n                fv.lang = fd.lang\n            LEFT JOIN\n                %sfaqdata_group fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.date_start <= '%s'\n            AND\n                fd.date_end   >= '%s'\n            AND\n                fd.active = 'yes'\n            AND\n                fcr.category_id = %d\n            AND\n                fd.lang = '%s'\n                %s\n            GROUP BY\n                fd.id,fd.lang,fd.thema,fcr.category_id,fv.visits\n            ORDER BY\n                %s %s\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $now,\n            $now,\n            $categoryId,\n            $this->config->getLanguage()->getLanguage(),\n            $this->queryPermission($this->groupSupport),\n            $this->config->get('records.orderby'),\n            $this->config->get('records.sortby')\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($result) {\n            $output = '<ul>';\n            while (($row = $this->config->getDb()->fetchObject($result))) {\n                $title = $row->thema;\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $row->thema;\n                $oLink->text = $title;\n                $oLink->tooltip = $title;\n                $listItem = '<li>' . $oLink->toHtmlAnchor() . '</li>';\n\n                $output .= $listItem;\n            }\n            $output .= '</ul>';\n        }\n\n        return $output;\n    }\n\n    /**\n     * Prints the open questions as a HTML table.\n     *\n     * @todo   needs to be moved to a QuestionHelper class\n     * @return string\n     * @throws Exception\n     */\n    public function renderOpenQuestions(): string\n    {\n        global $sids, $category;\n\n        $date = new Date($this->config);\n        $mail = new Mail($this->config);\n\n        $query = sprintf(\n            \"\n            SELECT\n                COUNT(id) AS num\n            FROM\n                %sfaqquestions\n            WHERE\n                lang = '%s'\n            AND\n                is_visible != 'Y'\",\n            Database::getTablePrefix(),\n            $this->config->getLanguage()->getLanguage()\n        );\n\n        $result = $this->config->getDb()->query($query);\n        $row = $this->config->getDb()->fetchObject($result);\n        $numOfInvisibles = $row->num;\n\n        if ($numOfInvisibles > 0) {\n            $extraout = sprintf(\n                '<tr><td colspan=\"3\"><small>%s %s</small></td></tr>',\n                $this->translation['msgQuestionsWaiting'],\n                $numOfInvisibles\n            );\n        } else {\n            $extraout = '';\n        }\n\n        $query = sprintf(\n            \"\n            SELECT\n                *\n            FROM\n                %sfaqquestions\n            WHERE\n                lang = '%s'\n            AND\n                is_visible = 'Y'\n            ORDER BY\n                created ASC\",\n            Database::getTablePrefix(),\n            $this->config->getLanguage()->getLanguage()\n        );\n\n        $result = $this->config->getDb()->query($query);\n        $output = '';\n\n        if ($result && $this->config->getDb()->numRows($result) > 0) {\n            while ($row = $this->config->getDb()->fetchObject($result)) {\n                $output .= '<tr class=\"openquestions\">';\n                $output .= sprintf(\n                    '<td><small>%s</small><br><a href=\"mailto:%s\">%s</a></td>',\n                    $date->format(Date::createIsoDate($row->created)),\n                    $mail->safeEmail($row->email),\n                    $row->username\n                );\n                $output .= sprintf(\n                    '<td><strong>%s:</strong><br>%s</td>',\n                    isset($category->categoryName[$row->category_id]['name']) ?\n                        $category->categoryName[$row->category_id]['name'] :\n                        '',\n                    strip_tags($row->question)\n                );\n                if ($this->config->get('records.enableCloseQuestion') && $row->answer_id) {\n                    $output .= sprintf(\n                        '<td><a id=\"PMF_openQuestionAnswered\" href=\"?%saction=faq&amp;cat=%d&amp;id=%d\">%s</a></td>',\n                        $sids,\n                        $row->category_id,\n                        $row->answer_id,\n                        $this->translation['msg2answerFAQ']\n                    );\n                } else {\n                    $output .= sprintf(\n                        '<td class=\"text-right\">' .\n                        '<a class=\"btn btn-primary\" href=\"?%saction=add&amp;question=%d&amp;cat=%d\">%s</a></td>',\n                        $sids,\n                        $row->id,\n                        $row->category_id,\n                        $this->translation['msg2answer']\n                    );\n                }\n                $output .= '</tr>';\n            }\n        } else {\n            $output = sprintf(\n                '<tr><td colspan=\"3\">%s</td></tr>',\n                $this->translation['msgNoQuestionsAvailable']\n            );\n        }\n\n        return $output . $extraout;\n    }\n\n    /**\n     * Set or unset a faq item flag.\n     *\n     * @param int    $id   Record id\n     * @param string $lang language code which is valid with Language::isASupportedLanguage\n     * @param bool   $flag record is set to sticky or not\n     * @param string $type type of the flag to set, use the column name\n     * @return bool\n     */\n    public function updateRecordFlag(int $id, string $lang, bool $flag, string $type): bool\n    {\n        $retval = false;\n\n        switch ($type) {\n            case 'sticky':\n                $flag = ($flag === 'checked' ? 1 : 0);\n                break;\n\n            case 'active':\n                $flag = ($flag === 'checked' ? \"'yes'\" : \"'no'\");\n                break;\n\n            default:\n                // This is because we would run into unknown db column\n                $flag = null;\n                break;\n        }\n\n        if (null !== $flag) {\n            $update = sprintf(\n                \"\n                UPDATE \n                    %sfaqdata \n                SET \n                    %s = %s \n                WHERE \n                    id = %d \n                AND \n                    lang = '%s'\",\n                Database::getTablePrefix(),\n                $type,\n                $flag,\n                $id,\n                $this->config->getDb()->escape($lang)\n            );\n\n            $retval = (bool)$this->config->getDb()->query($update);\n        }\n\n        return $retval;\n    }\n\n    /**\n     * Prepares and returns the sticky records for the frontend.\n     *\n     * @return array\n     */\n    public function getStickyRecords(): array\n    {\n        $result = $this->getStickyRecordsData();\n        $output = [];\n\n        if (count($result) > 0) {\n            foreach ($result as $row) {\n                $output['title'][] = Utils::makeShorterText($row['question'], 8);\n                $output['preview'][] = $row['question'];\n                $output['url'][] = Strings::htmlentities($row['url']);\n            }\n        } else {\n            $output['error'] = sprintf('<li>%s</li>', $this->translation['err_noTopTen']);\n        }\n\n        return $output;\n    }\n\n    /**\n     * Returns the sticky records with URL and Title.\n     *\n     * @return array\n     */\n    public function getStickyRecordsData(): array\n    {\n        global $sids;\n\n        $now = date('YmdHis');\n        $query = sprintf(\n            \"\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.thema AS thema,\n                fcr.category_id AS category_id,\n                fv.visits AS visits\n            FROM\n                %sfaqvisits fv,\n                %sfaqdata fd\n            LEFT JOIN\n                %sfaqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                %sfaqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.lang = '%s'\n            AND \n                fd.date_start <= '%s'\n            AND \n                fd.date_end   >= '%s'\n            AND \n                fd.active = 'yes'\n            AND \n                fd.sticky = 1\n            AND\n                fd.id = fv.id\n            AND \n                fd.lang = fv.lang\n            %s\n            GROUP BY\n                fd.id, fd.lang, fd.thema, fcr.category_id, fv.visits\n            ORDER BY\n                fv.visits DESC\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $this->config->getLanguage()->getLanguage(),\n            $now,\n            $now,\n            $this->queryPermission($this->groupSupport)\n        );\n\n        $result = $this->config->getDb()->query($query);\n        $sticky = [];\n        $data = [];\n\n        $oldId = 0;\n        while (($row = $this->config->getDb()->fetchObject($result))) {\n            if ($oldId != $row->id) {\n                $data['question'] = $row->thema;\n\n                $title = $row->thema;\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $row->thema;\n                $oLink->tooltip = $title;\n                $data['url'] = $oLink->toString();\n\n                $sticky[] = $data;\n            }\n            $oldId = $row->id;\n        }\n\n        return $sticky;\n    }\n\n    /**\n     * Returns the inactive records with admin URL to edit the FAQ and title.\n     *\n     * @return array\n     */\n    public function getInactiveFaqsData(): array\n    {\n        $query = sprintf(\n            \"\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.thema AS thema\n            FROM\n                %sfaqdata fd\n            WHERE\n                fd.lang = '%s'\n            AND \n                fd.active = 'no'\n            GROUP BY\n                fd.id, fd.lang, fd.thema\n            ORDER BY\n                fd.id DESC\",\n            Database::getTablePrefix(),\n            $this->config->getLanguage()->getLanguage()\n        );\n\n        $result = $this->config->getDb()->query($query);\n        $inactive = [];\n        $data = [];\n\n        $oldId = 0;\n        while (($row = $this->config->getDb()->fetchObject($result))) {\n            if ($oldId != $row->id) {\n                $data['question'] = $row->thema;\n                $data['url'] = sprintf(\n                    '%sadmin/?action=editentry&id=%d&lang=%s',\n                    $this->config->getDefaultUrl(),\n                    $row->id,\n                    $row->lang\n                );\n                $inactive[] = $data;\n            }\n            $oldId = $row->id;\n        }\n\n        return $inactive;\n    }\n}\n", "<?php\n\n/**\n * The main Tags class.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package   phpMyFAQ\n * @author    Thorsten Rinne <thorsten@phpmyfaq.de>\n * @author    Matteo Scaramuccia <matteo@scaramuccia.com>\n * @author    Georgi Korchev <korchev@yahoo.com>\n * @copyright 2006-2022 phpMyFAQ Team\n * @license   http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link      https://www.phpmyfaq.de\n * @since     2006-08-10\n */\n\nnamespace phpMyFAQ;\n\nuse phpMyFAQ\\Entity\\TagEntity as EntityTags;\n\n/**\n * Class Tags\n *\n * @package phpMyFAQ\n */\nclass Tags\n{\n    /**\n     * @var Configuration\n     */\n    private $config;\n\n    /**\n     * @var array<int, string>\n     */\n    private $recordsByTagName = [];\n\n    /**\n     * Constructor.\n     *\n     * @param Configuration $config\n     */\n    public function __construct(Configuration $config)\n    {\n        $this->config = $config;\n    }\n\n    /**\n     * Returns all tags for a FAQ record.\n     *\n     * @param int $recordId Record ID\n     * @return string\n     */\n    public function getAllLinkTagsById(int $recordId): string\n    {\n        $tagListing = '';\n\n        foreach ($this->getAllTagsById($recordId) as $taggingId => $taggingName) {\n            $title = Strings::htmlspecialchars($taggingName, ENT_QUOTES, 'utf-8');\n            $url = sprintf('%sindex.php?action=search&amp;tagging_id=%d', $this->config->getDefaultUrl(), $taggingId);\n            $oLink = new Link($url, $this->config);\n            $oLink->itemTitle = $taggingName;\n            $oLink->text = $taggingName;\n            $oLink->tooltip = $title;\n            $tagListing .= $oLink->toHtmlAnchor() . ', ';\n        }\n\n        return '' == $tagListing ? '-' : Strings::substr($tagListing, 0, -2);\n    }\n\n    /**\n     * Returns all tags for a FAQ record.\n     *\n     * @param int $recordId Record ID\n     * @return array<int, string>\n     */\n    public function getAllTagsById(int $recordId): array\n    {\n        $tags = [];\n\n        $query = sprintf(\n            '\n            SELECT\n                dt.tagging_id AS tagging_id, \n                t.tagging_name AS tagging_name\n            FROM\n                %sfaqdata_tags dt, %sfaqtags t\n            WHERE\n                dt.record_id = %d\n            AND\n                dt.tagging_id = t.tagging_id\n            ORDER BY\n                t.tagging_name',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $recordId\n        );\n\n        $result = $this->config->getDb()->query($query);\n        if ($result) {\n            while ($row = $this->config->getDb()->fetchObject($result)) {\n                $tags[$row->tagging_id] = $row->tagging_name;\n            }\n        }\n\n        return $tags;\n    }\n\n    /**\n     * Saves all tags from a FAQ record.\n     *\n     * @param int $recordId Record ID\n     * @param array<int, string> $tags Array of tags\n     * @return bool\n     */\n    public function saveTags(int $recordId, array $tags): bool\n    {\n        $currentTags = $this->getAllTags();\n\n        // Delete all tag references for the faq record\n        if (count($tags) > 0) {\n            $this->deleteTagsFromRecordId($recordId);\n        }\n\n        // Store tags and references for the faq record\n        foreach ($tags as $tagName) {\n            $tagName = trim($tagName);\n            if (Strings::strlen($tagName) > 0) {\n                if (\n                    !in_array(\n                        Strings::strtolower($tagName),\n                        array_map(['phpMyFAQ\\Strings', 'strtolower'], $currentTags)\n                    )\n                ) {\n                    // Create the new tag\n                    $newTagId = $this->config->getDb()->nextId(Database::getTablePrefix() . 'faqtags', 'tagging_id');\n                    $query = sprintf(\n                        \"INSERT INTO %sfaqtags (tagging_id, tagging_name) VALUES (%d, '%s')\",\n                        Database::getTablePrefix(),\n                        $newTagId,\n                        $tagName\n                    );\n                    $this->config->getDb()->query($query);\n\n                    // Add the tag reference for the faq record\n                    $query = sprintf(\n                        'INSERT INTO %sfaqdata_tags (record_id, tagging_id) VALUES (%d, %d)',\n                        Database::getTablePrefix(),\n                        $recordId,\n                        $newTagId\n                    );\n                    $this->config->getDb()->query($query);\n                } else {\n                    // Add the tag reference for the faq record\n                    $query = sprintf(\n                        'INSERT INTO %sfaqdata_tags (record_id, tagging_id) VALUES (%d, %d)',\n                        Database::getTablePrefix(),\n                        $recordId,\n                        array_search(\n                            Strings::strtolower($tagName),\n                            array_map(['phpMyFAQ\\Strings', 'strtolower'], $currentTags)\n                        )\n                    );\n                    $this->config->getDb()->query($query);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns all tags.\n     *\n     * @param string|null $search Move the returned result set to be the result of a start-with search\n     * @param int $limit Limit the returned result set\n     * @param bool $showInactive Show inactive tags\n     * @return array<int, string>\n     */\n    public function getAllTags(\n        string $search = null,\n        int $limit = PMF_TAGS_CLOUD_RESULT_SET_SIZE,\n        bool $showInactive = false\n    ): array {\n        $allTags = [];\n\n        // Hack: LIKE is case sensitive under PostgreSQL\n        switch (Database::getType()) {\n            case 'pgsql':\n                $like = 'ILIKE';\n                break;\n            default:\n                $like = 'LIKE';\n                break;\n        }\n\n        $query = sprintf(\n            '\n            SELECT\n                MIN(t.tagging_id) AS tagging_id, t.tagging_name AS tagging_name\n            FROM\n                %sfaqtags t\n            LEFT JOIN\n                %sfaqdata_tags dt\n            ON\n                dt.tagging_id = t.tagging_id\n            LEFT JOIN\n                %sfaqdata d\n            ON\n                d.id = dt.record_id\n            WHERE\n                1=1\n                %s\n                %s\n            GROUP BY\n                tagging_name\n            ORDER BY\n                tagging_name ASC',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            ($showInactive ? '' : \"AND d.active = 'yes'\"),\n            (isset($search) && ($search != '') ? 'AND tagging_name ' . $like . \" '\" . $search . \"%'\" : '')\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($result) {\n            $i = 0;\n            while ($row = $this->config->getDb()->fetchObject($result)) {\n                if ($i < $limit) {\n                    $allTags[$row->tagging_id] = $row->tagging_name;\n                } else {\n                    break;\n                }\n                ++$i;\n            }\n        }\n\n        return array_unique($allTags);\n    }\n\n    /**\n     * Deletes all tags from a given record id.\n     *\n     * @param int $recordId Record ID\n     * @return bool\n     */\n    public function deleteTagsFromRecordId(int $recordId): bool\n    {\n        $query = sprintf(\n            'DELETE FROM %sfaqdata_tags WHERE record_id = %d',\n            Database::getTablePrefix(),\n            $recordId\n        );\n\n        $this->config->getDb()->query($query);\n\n        return true;\n    }\n\n    /**\n     * Updates a tag.\n     *\n     * @param EntityTags $entity\n     * @return bool\n     */\n    public function updateTag(EntityTags $entity): bool\n    {\n        $query = sprintf(\n            \"UPDATE %sfaqtags SET tagging_name = '%s' WHERE tagging_id = %d\",\n            Database::getTablePrefix(),\n            $entity->getName(),\n            $entity->getId()\n        );\n\n        return $this->config->getDb()->query($query);\n    }\n\n    /**\n     * Deletes a given tag.\n     *\n     * @param int $tagId\n     * @return bool\n     */\n    public function deleteTag(int $tagId): bool\n    {\n        $query = sprintf(\n            'DELETE FROM %sfaqtags WHERE tagging_id = %d',\n            Database::getTablePrefix(),\n            $tagId\n        );\n\n        $this->config->getDb()->query($query);\n\n        $query = sprintf(\n            'DELETE FROM %sfaqdata_tags WHERE tagging_id = %d',\n            Database::getTablePrefix(),\n            $tagId\n        );\n\n        $this->config->getDb()->query($query);\n\n        return true;\n    }\n\n    /**\n     * Returns the FAQ record IDs where all tags are included.\n     *\n     * @param array<int, int> $arrayOfTags Array of Tags\n     * @return array<int, int>\n     */\n    public function getFaqsByIntersectionTags(array $arrayOfTags): array\n    {\n        $query = sprintf(\n            \"\n            SELECT\n                td.record_id AS record_id\n            FROM\n                %sfaqdata_tags td\n            JOIN\n                %sfaqtags t ON (td.tagging_id = t.tagging_id)\n            JOIN\n                %sfaqdata d ON (td.record_id = d.id)\n            WHERE\n                (t.tagging_name IN ('%s'))\n            AND\n                (d.lang = '%s')\n            GROUP BY\n                td.record_id\n            HAVING\n                COUNT(td.record_id) = %d\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            implode(\"', '\", $arrayOfTags),\n            $this->config->getLanguage()->getLanguage(),\n            count($arrayOfTags)\n        );\n\n        $records = [];\n        $result = $this->config->getDb()->query($query);\n        while ($row = $this->config->getDb()->fetchObject($result)) {\n            $records[] = $row->record_id;\n        }\n\n        return $records;\n    }\n\n    /**\n     * Returns the HTML for the Tags Cloud.\n     *\n     * @return string\n     */\n    public function renderTagCloud(): string\n    {\n        $tags = [];\n\n        // Limit the result set (see: PMF_TAGS_CLOUD_RESULT_SET_SIZE)\n        // for avoiding an 'heavy' load during the evaluation\n        // of the number of records for each tag\n        $tagList = $this->getAllTags('', PMF_TAGS_CLOUD_RESULT_SET_SIZE);\n\n        foreach ($tagList as $tagId => $tagName) {\n            $totFaqByTag = count($this->getFaqsByTagName($tagName));\n            if ($totFaqByTag > 0) {\n                $tags[$tagName]['id'] = $tagId;\n                $tags[$tagName]['name'] = $tagName;\n                $tags[$tagName]['count'] = $totFaqByTag;\n            }\n        }\n\n        $html = '';\n        $i = 0;\n        foreach ($tags as $tag) {\n            ++$i;\n            $title = Strings::htmlspecialchars($tag['name'] . ' (' . $tag['count'] . ')', ENT_QUOTES);\n            $url = sprintf(\n                '%sindex.php?action=search&amp;tagging_id=%d',\n                Strings::htmlentities($this->config->getDefaultUrl()),\n                $tag['id']\n            );\n            $oLink = new Link($url, $this->config);\n            $oLink->itemTitle = $tag['name'];\n            $oLink->text = $tag['name'];\n            $oLink->tooltip = $title;\n            $oLink->class = 'btn btn-primary m-1';\n            $html .= $oLink->toHtmlAnchor();\n            $html .= (count($tags) == $i ? '' : ' ');\n        }\n\n        return $html;\n    }\n\n    /**\n     * Returns all FAQ record IDs where all tags are included.\n     *\n     * @param string $tagName The name of the tag\n     * @return array<int, string>\n     */\n    public function getFaqsByTagName(string $tagName): array\n    {\n        if (count($this->recordsByTagName)) {\n            return $this->recordsByTagName;\n        }\n\n        $query = sprintf(\n            \"\n            SELECT\n                dt.record_id AS record_id\n            FROM\n                %sfaqtags t, %sfaqdata_tags dt\n            LEFT JOIN\n                %sfaqdata d\n            ON\n                d.id = dt.record_id\n            WHERE\n                t.tagging_id = dt.tagging_id\n            AND \n                t.tagging_name = '%s'\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $this->config->getDb()->escape($tagName)\n        );\n\n        $this->recordsByTagName = [];\n        $result = $this->config->getDb()->query($query);\n        while ($row = $this->config->getDb()->fetchObject($result)) {\n            $this->recordsByTagName[] = $row->record_id;\n        }\n\n        return $this->recordsByTagName;\n    }\n\n    /**\n     * Returns all FAQ record IDs where all tags are included.\n     *\n     * @param int $tagId Tagging ID\n     * @return array<int>\n     */\n    public function getFaqsByTagId(int $tagId): array\n    {\n        $query = sprintf(\n            '\n            SELECT\n                d.record_id AS record_id\n            FROM\n                %sfaqdata_tags d, %sfaqtags t\n            WHERE\n                t.tagging_id = d.tagging_id\n            AND\n                t.tagging_id = %d\n            GROUP BY\n                record_id',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $tagId\n        );\n\n        $records = [];\n        $result = $this->config->getDb()->query($query);\n        while ($row = $this->config->getDb()->fetchObject($result)) {\n            $records[] = $row->record_id;\n        }\n\n        return $records;\n    }\n\n    /**\n     * @param int $limit\n     * @return string\n     */\n    public function renderPopularTags(int $limit = 0): string\n    {\n        $html = '';\n        foreach ($this->getPopularTags($limit) as $tagId => $tagFreq) {\n            $tagName = $this->getTagNameById($tagId);\n            $html .= sprintf(\n                '<a class=\"btn btn-primary m-1\" href=\"?action=search&tagging_id=%d\">%s ' .\n                '<span class=\"badge badge-info\">%d</span></a>',\n                $tagId,\n                $tagName,\n                $tagFreq\n            );\n        }\n\n        return $html;\n    }\n\n    /**\n     * @param int $limit Specify the maximum amount of records to return\n     * @return array<int, int>\n     */\n    public function getPopularTags($limit = 0): array\n    {\n        $tags = [];\n\n        $query = sprintf(\n            \"\n            SELECT\n                COUNT(record_id) as freq, tagging_id\n            FROM\n                %sfaqdata_tags\n            JOIN\n                %sfaqdata ON id = record_id\n            WHERE\n              lang = '%s'\n            GROUP BY tagging_id\n            ORDER BY freq DESC\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $this->config->getLanguage()->getLanguage()\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($result) {\n            while ($row = $this->config->getDb()->fetchObject($result)) {\n                $tags[$row->tagging_id] = $row->freq;\n                if (--$limit === 0) {\n                    break;\n                }\n            }\n        }\n\n        return $tags;\n    }\n\n    /**\n     * Returns the tagged item.\n     *\n     * @param int $tagId Tagging ID\n     * @return string\n     */\n    public function getTagNameById(int $tagId): string\n    {\n        $query = sprintf(\n            'SELECT tagging_name FROM %sfaqtags WHERE tagging_id = %d',\n            Database::getTablePrefix(),\n            $tagId\n        );\n\n        $result = $this->config->getDb()->query($query);\n        if ($row = $this->config->getDb()->fetchObject($result)) {\n            return $row->tagging_name;\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns the popular Tags as an array\n     *\n     * @param int $limit\n     * @return array<int, array<string, int|string>>\n     */\n    public function getPopularTagsAsArray(int $limit = 0): array\n    {\n        $data = [];\n        foreach ($this->getPopularTags($limit) as $tagId => $tagFreq) {\n            $tagName = $this->getTagNameById($tagId);\n            $data[] = [\n                'tagId' => (int)$tagId,\n                'tagName' => $tagName,\n                'tagFrequency' => (int)$tagFreq\n            ];\n        }\n\n        return $data;\n    }\n}\n"], "fixing_code": ["<?php\n\n/**\n * The FAQ record editor.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2003-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2003-02-23\n */\n\nuse phpMyFAQ\\Attachment\\AttachmentFactory;\nuse phpMyFAQ\\Category;\nuse phpMyFAQ\\Category\\CategoryRelation;\nuse phpMyFAQ\\Changelog;\nuse phpMyFAQ\\Database;\nuse phpMyFAQ\\Date;\nuse phpMyFAQ\\Faq;\nuse phpMyFAQ\\Faq\\FaqPermission;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Helper\\CategoryHelper;\nuse phpMyFAQ\\Helper\\LanguageHelper;\nuse phpMyFAQ\\Helper\\UserHelper;\nuse phpMyFAQ\\Link;\nuse phpMyFAQ\\Logging;\nuse phpMyFAQ\\Question;\nuse phpMyFAQ\\Revision;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\Tags;\nuse phpMyFAQ\\User;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\n$currentUserId = $user->getUserId();\n\nif (\n    ($user->perm->hasPermission($currentUserId, 'edit_faq') ||\n     $user->perm->hasPermission($currentUserId, 'add_faq')) && !Database::checkOnEmptyTable('faqcategories')\n) {\n    $category = new Category($faqConfig, [], false);\n\n    if ($faqConfig->get('main.enableCategoryRestrictions')) {\n        $category = new Category($faqConfig, $currentAdminGroups, true);\n    }\n\n    $category->setUser($currentAdminUser);\n    $category->setGroups($currentAdminGroups);\n    $category->buildCategoryTree();\n\n    $categoryRelation = new CategoryRelation($faqConfig);\n\n    $categoryHelper = new CategoryHelper();\n    $categoryHelper->setCategory($category);\n\n    $faq = new Faq($faqConfig);\n\n    $faqPermission = new FaqPermission($faqConfig);\n\n    $questionObject = new Question($faqConfig);\n\n    $changelog = new Changelog($faqConfig);\n\n    $userHelper = new UserHelper($user);\n\n    $selectedCategory = '';\n    $categories = [];\n    $faqData = [\n        'id' => 0,\n        'lang' => $faqLangCode,\n        'revision_id' => 0,\n        'title' => '',\n        'dateStart' => '',\n        'dateEnd' => '',\n    ];\n\n    $tagging = new Tags($faqConfig);\n    $date = new Date($faqConfig);\n\n    if ('takequestion' === $action) {\n        $questionId = Filter::filterInput(INPUT_GET, 'id', FILTER_VALIDATE_INT);\n        $question = $questionObject->getQuestion($questionId);\n        $selectedCategory = $question['category_id'];\n        $faqData['title'] = $question['question'];\n        $notifyUser = $question['username'];\n        $notifyEmail = $question['email'];\n        $categories = [\n            'category_id' => $selectedCategory,\n            'category_lang' => $faqData['lang'],\n        ];\n    } else {\n        $questionId = 0;\n        $notifyUser = '';\n        $notifyEmail = '';\n    }\n\n    if ('editpreview' === $action) {\n        $faqData['id'] = Filter::filterInput(INPUT_POST, 'id', FILTER_VALIDATE_INT);\n        if (!is_null($faqData['id'])) {\n            $queryString = 'saveentry&id=' . $faqData['id'];\n        } else {\n            $queryString = 'insertentry';\n        }\n\n        $faqData['lang'] = Filter::filterInput(INPUT_POST, 'lang', FILTER_UNSAFE_RAW);\n        $selectedCategory = Filter::filterInputArray(\n            INPUT_POST,\n            [\n                'rubrik' => [\n                    'filter' => FILTER_VALIDATE_INT,\n                    'flags' => FILTER_REQUIRE_ARRAY,\n                ],\n            ]\n        );\n        if (is_array($selectedCategory)) {\n            foreach ($selectedCategory as $cats) {\n                $categories[] = ['category_id' => $cats, 'category_lang' => $faqData['lang']];\n            }\n        }\n        $faqData['active'] = Filter::filterInput(INPUT_POST, 'active', FILTER_UNSAFE_RAW);\n        $faqData['keywords'] = Filter::filterInput(INPUT_POST, 'keywords', FILTER_UNSAFE_RAW);\n        $faqData['title'] = Filter::filterInput(INPUT_POST, 'thema', FILTER_UNSAFE_RAW);\n        $faqData['content'] = Filter::filterInput(INPUT_POST, 'content', FILTER_SANITIZE_SPECIAL_CHARS);\n        $faqData['author'] = Filter::filterInput(INPUT_POST, 'author', FILTER_UNSAFE_RAW);\n        $faqData['email'] = Filter::filterInput(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL);\n        $faqData['comment'] = Filter::filterInput(INPUT_POST, 'comment', FILTER_UNSAFE_RAW);\n        $faqData['solution_id'] = Filter::filterInput(INPUT_POST, 'solution_id', FILTER_VALIDATE_INT);\n        $faqData['revision_id'] = Filter::filterInput(INPUT_POST, 'revision_id', FILTER_VALIDATE_INT, 0);\n        $faqData['sticky'] = Filter::filterInput(INPUT_POST, 'sticky', FILTER_VALIDATE_INT);\n        $faqData['tags'] = Filter::filterInput(INPUT_POST, 'tags', FILTER_UNSAFE_RAW);\n        $faqData['changed'] = Filter::filterInput(INPUT_POST, 'changed', FILTER_UNSAFE_RAW);\n        $faqData['dateStart'] = Filter::filterInput(INPUT_POST, 'dateStart', FILTER_UNSAFE_RAW);\n        $faqData['dateEnd'] = Filter::filterInput(INPUT_POST, 'dateEnd', FILTER_UNSAFE_RAW);\n        $faqData['content'] = html_entity_decode($faqData['content']);\n    } elseif ('editentry' === $action) {\n        $id = Filter::filterInput(INPUT_GET, 'id', FILTER_VALIDATE_INT);\n        $lang = Filter::filterInput(INPUT_GET, 'lang', FILTER_UNSAFE_RAW);\n        $translateTo = Filter::filterInput(INPUT_GET, 'translateTo', FILTER_UNSAFE_RAW);\n        $categoryId = Filter::filterInput(INPUT_GET, 'cat', FILTER_VALIDATE_INT);\n\n        if (!is_null($translateTo)) {\n            $faqData['lang'] = $lang = $translateTo;\n        }\n\n        if ((!isset($selectedCategory) && !isset($faqData['title'])) || !is_null($id)) {\n            $logging = new Logging($faqConfig);\n            $logging->logAdmin($user, 'admin-edit-faq, ' . $id);\n\n            $categories = $categoryRelation->getCategories($id, $lang);\n\n            $faq->getRecord($id, null, true);\n            $faqData = $faq->faqRecord;\n            $faqData['tags'] = implode(', ', $tagging->getAllTagsById($faqData['id']));\n            $queryString = 'saveentry&amp;id=' . $faqData['id'];\n        } else {\n            $queryString = 'insertentry';\n            if (isset($categoryId)) {\n                $categories = ['category_id' => $categoryId, 'category_lang' => $lang];\n            }\n        }\n    } elseif ('copyentry' === $action) {\n        $faqData['id'] = Filter::filterInput(INPUT_GET, 'id', FILTER_VALIDATE_INT);\n        $faqData['lang'] = Filter::filterInput(INPUT_GET, 'lang', FILTER_UNSAFE_RAW);\n        $categories = $categoryRelation->getCategories($faqData['id'], $faqData['lang']);\n\n        $faq->getRecord($faqData['id'], null, true);\n\n        $faqData = $faq->faqRecord;\n        $queryString = 'insertentry';\n    } else {\n        $logging = new Logging($faqConfig);\n        $logging->logAdmin($user, 'admin-add-faq');\n        $queryString = 'insertentry';\n        if (!is_array($categories)) {\n            $categories = [];\n        }\n    }\n\n    // Revisions\n    $selectedRevisionId = Filter::filterInput(INPUT_POST, 'revisionid_selected', FILTER_VALIDATE_INT);\n    if (is_null($selectedRevisionId)) {\n        $selectedRevisionId = $faqData['revision_id'];\n    }\n\n    // User permissions\n    $userPermission = $faqPermission->get(FaqPermission::USER, $faqData['id']);\n    if (count($userPermission) == 0 || $userPermission[0] == -1) {\n        $allUsers = true;\n        $restrictedUsers = false;\n        $userPermission[0] = -1;\n    } else {\n        $allUsers = false;\n        $restrictedUsers = true;\n    }\n\n    // Group permissions\n    $groupPermission = $faqPermission->get(FaqPermission::GROUP, $faqData['id']);\n    if (count($groupPermission) == 0 || $groupPermission[0] == -1) {\n        $allGroups = true;\n        $restrictedGroups = false;\n        $groupPermission[0] = -1;\n    } else {\n        $allGroups = false;\n        $restrictedGroups = true;\n    }\n\n    // Set data for forms\n    $faqData['title'] = (isset($faqData['title']) ? Strings::htmlspecialchars($faqData['title']) : '');\n    $faqData['content'] = (isset($faqData['content']) ? trim(Strings::htmlentities($faqData['content'])) : '');\n    $faqData['tags'] = (isset($faqData['tags']) ? Strings::htmlspecialchars($faqData['tags']) : '');\n    $faqData['keywords'] = (isset($faqData['keywords']) ? Strings::htmlspecialchars($faqData['keywords']) : '');\n    $faqData['author'] = (isset($faqData['author']) ? Strings::htmlspecialchars(\n        $faqData['author']\n    ) : $user->getUserData('display_name'));\n    $faqData['email'] = (isset($faqData['email']) ? Strings::htmlspecialchars($faqData['email']) : $user->getUserData(\n        'email'\n    ));\n    $faqData['isoDate'] = ($faqData['date'] ?? date('Y-m-d H:i'));\n    $faqData['date'] = (isset($faqData['date']) ? $date->format($faqData['date']) : $date->format(date('Y-m-d H:i')));\n    $faqData['changed'] = ($faqData['changed'] ?? '');\n\n    if (isset($faqData['comment']) && $faqData['comment'] == 'y') {\n        $faqData['comment'] = ' checked';\n    } elseif ($faqConfig->get('records.defaultAllowComments')) {\n        $faqData['comment'] = ' checked';\n    } else {\n        $faqData['comment'] = '';\n    }\n\n    // Header\n    if (0 !== $faqData['id'] && 'copyentry' !== $action) {\n        $currentRevision = sprintf('%s 1.%d', $PMF_LANG['ad_entry_revision'], $selectedRevisionId);\n        $faqUrl = sprintf(\n            '%sindex.php?action=faq&cat=%s&id=%d&artlang=%s',\n            $faqConfig->getDefaultUrl(),\n            array_values($categories)[0]['category_id'],\n            $faqData['id'],\n            $faqData['lang']\n        );\n        $link = new Link($faqUrl, $faqConfig);\n        $link->itemTitle = $faqData['title'];\n        ?>\n        <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n            <h1 class=\"h2\">\n                <i aria-hidden=\"true\" class=\"fa fa-edit\"></i>\n                <?= $PMF_LANG['ad_entry_edit_1'] ?>\n                <?= $PMF_LANG['ad_entry_edit_2'] ?>\n            </h1>\n            <div class=\"btn-toolbar mb-2 mb-md-0\">\n                <div class=\"btn-group mr-2\">\n              <span class=\"btn btn-sm btn-info\">\n                <i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i>\n                <?= $currentRevision ?>\n              </span>\n                    <a href=\"<?= $link->toString() ?>\" class=\"btn btn-sm btn-success\">\n                        <i class=\"fa fa-arrow-alt-circle-right\" aria-hidden=\"true\"></i>\n                        <?= $PMF_LANG['ad_view_faq'] ?>\n                    </a>\n                </div>\n            </div>\n        </div>\n\n    <?php } else { ?>\n        <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n            <h1 class=\"h2\">\n                <i aria-hidden=\"true\" class=\"fa fa-edit\"></i>\n                <?= $PMF_LANG['ad_entry_add'] ?>\n            </h1>\n        </div>\n\n    <?php } ?>\n\n        <div class=\"row\">\n            <div class=\"col-lg-9\">\n                <div class=\"card mb-4\">\n                    <div class=\"card-header\">\n                        <ul class=\"nav nav-tabs card-header-tabs\" id=\"nav-tab\" role=\"tablist\">\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#tab-question-answer\" role=\"tab\">\n                                    <i class=\"fa fa-pencil-square-o\"></i> <?= $PMF_LANG['ad_record_faq'] ?>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" data-toggle=\"tab\" href=\"#tab-meta-data\" role=\"tab\">\n                                    <i class=\"fa fa-database\"></i> <?= $PMF_LANG['ad_menu_faq_meta'] ?>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" data-toggle=\"tab\" href=\"#tab-permissions\" role=\"tab\">\n                                    <i class=\"fa fa-unlock-alt\"></i> <?= $PMF_LANG['ad_record_permissions'] ?>\n                                </a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" data-toggle=\"tab\" href=\"#tab-notes-changelog\" role=\"tab\">\n                                    <i class=\"fa fa-sticky-note-o\"></i> <?= $PMF_LANG['ad_admin_notes'] . ' / ' . $PMF_LANG['ad_entry_changelog'] ?>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"tab-content\">\n                            <div class=\"tab-pane active\" id=\"tab-question-answer\">\n                                <!-- Revision -->\n                                <?php\n                                if ($user->perm->hasPermission($currentUserId, 'changebtrevs')) {\n                                    $faqRevision = new Revision($faqConfig);\n                                    $revisions = $faqRevision->get($faqData['id'], $faqData['lang'], $faqData['author']);\n                                    if (count($revisions)) { ?>\n                                        <div class=\"form-group\">\n                                            <form id=\"selectRevision\" name=\"selectRevision\" method=\"post\"\n                                                  action=\"?action=editentry&amp;id=<?= $faqData['id'] ?>&amp;lang=<?= $faqData['lang'] ?>\">\n                                                <select name=\"revisionid_selected\" onchange=\"this.form.submit();\"\n                                                        class=\"form-control\">\n                                                    <option value=\"<?= $faqData['revision_id'] ?>\">\n                                                        <?= $PMF_LANG['ad_changerev'] ?>\n                                                    </option>\n                                                    <?php foreach ($revisions as $revisionId => $revisionData) { ?>\n                                                        <option value=\"<?= $revisionData['revision_id'] ?>\" <?php if ($selectedRevisionId == $revisionData['revision_id']) {\n                                                            echo 'selected';\n                                                                       }\n                                                                        ?>>\n                                                            <?php printf(\n                                                                '%s 1.%d: %s - %s',\n                                                                $PMF_LANG['ad_entry_revision'],\n                                                                $revisionData['revision_id'],\n                                                                Date::createIsoDate($revisionData['updated']),\n                                                                $revisionData['author']\n                                                            );\n                                                            ?>\n                                                        </option>\n                                                        <?php\n                                                    }\n                                                    ?>\n                                                </select>\n                                            </form>\n                                        </div>\n                                    <?php }\n                                    if (\n                                        isset($selectedRevisionId) &&\n                                        isset($faqData['revision_id']) &&\n                                        $selectedRevisionId !== $faqData['revision_id']\n                                    ) {\n                                        $faq->language = $faqData['lang'];\n                                        $faq->getRecord($faqData['id'], $selectedRevisionId, true);\n                                        $faqData = $faq->faqRecord;\n                                        $faqData['tags'] = implode(', ', $tagging->getAllTagsById($faqData['id']));\n                                        $faqData['revision_id'] = $selectedRevisionId;\n                                    }\n                                } ?>\n\n                              <form id=\"faqEditor\" action=\"?action=<?= $queryString ?>\" method=\"post\">\n                                <input type=\"hidden\" name=\"revision_id\" id=\"revision_id\" value=\"<?= $faqData['revision_id'] ?>\">\n                                <input type=\"hidden\" name=\"record_id\" id=\"record_id\" value=\"<?= $faqData['id'] ?>\">\n                                <input type=\"hidden\" name=\"csrf\" id=\"csrf\" value=\"<?= $user->getCsrfTokenFromSession() ?>\">\n                                <input type=\"hidden\" name=\"openQuestionId\" id=\"openQuestionId\" value=\"<?= $questionId ?>\">\n                                <input type=\"hidden\" name=\"notifyUser\" id=\"notifyUser\" value=\"<?= $notifyUser ?>\">\n                                <input type=\"hidden\" name=\"notifyEmail\" id=\"notifyEmail\" value=\"<?= $notifyEmail ?>\">\n\n                                <!-- Question -->\n                                <div class=\"form-group\">\n                                    <input type=\"text\" name=\"question\" id=\"question\"\n                                           class=\"form-control form-control-lg\"\n                                           placeholder=\"<?= $PMF_LANG['ad_entry_theme'] ?>\"\n                                           value=\"<?= Strings::htmlentities($faqData['title']) ?>\">\n                                </div>\n\n                                <!-- Answer -->\n                                <?php if ($faqConfig->get('main.enableWysiwygEditor')) : ?>\n                                    <div class=\"form-group row\">\n                                        <div class=\"col-lg-12\">\n                                            <noscript>Please enable JavaScript to use the WYSIWYG editor!</noscript>\n                                            <textarea id=\"answer\" name=\"answer\" class=\"form-control\" rows=\"7\"\n                                                      placeholder=\"<?= $PMF_LANG['ad_entry_content'] ?>\"\n                                            ><?= $faqData['content'] ?></textarea>\n                                        </div>\n                                    </div>\n                                <?php endif; ?>\n                                <?php if ($faqConfig->get('main.enableMarkdownEditor')) : ?>\n                                    <div class=\"form-group row\">\n                                      <div class=\"col-lg-12\">\n                                        <ul class=\"nav nav-tabs markdown-tabs mb-2\">\n                                          <li class=\"nav-item\">\n                                            <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#text\">Text</a>\n                                          </li>\n                                          <li class=\"nav-item\">\n                                            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#preview\" data-markdown-tab=\"preview\">Preview</a>\n                                          </li>\n                                        </ul>\n                                        <div class=\"tab-content\">\n                                          <div class=\"tab-pane active\" id=\"text\">\n                                            <div class=\"form-group row\">\n                                              <div class=\"col-lg-12\">\n                                                <textarea id=\"answer-markdown\" name=\"answer\" class=\"form-control\"\n                                                          rows=\"7\" placeholder=\"<?= $PMF_LANG['ad_entry_content'] ?>\"\n                                                ><?= $faqData['content'] ?></textarea>\n                                              </div>\n                                            </div>\n                                          </div>\n                                          <div class=\"tab-pane\" id=\"preview\">\n                                            <article class=\"markdown-preview\"></article>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                <?php endif; ?>\n                            </div>\n                            <div class=\"tab-pane\" id=\"tab-meta-data\">\n                                <!-- Categories -->\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"phpmyfaq-categories\">\n                                        <?= $PMF_LANG['ad_entry_category'] ?>\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <select name=\"rubrik[]\" id=\"phpmyfaq-categories\" size=\"5\" multiple\n                                                class=\"form-control\">\n                                            <?= $categoryHelper->renderOptions($categories) ?>\n                                        </select>\n                                    </div>\n                                </div>\n\n                                <!-- Language -->\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"lang\">\n                                        <?= $PMF_LANG['ad_entry_locale'] ?>:\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <?= LanguageHelper::renderSelectLanguage($faqData['lang'], false, [], 'lang') ?>\n                                    </div>\n                                </div>\n\n                                <!-- Attachments -->\n                                <?php if ($user->perm->hasPermission($currentUserId, 'addattachment')) : ?>\n                                    <div class=\"form-group row\">\n                                        <label class=\"col-lg-2 col-form-label\">\n                                            <?= $PMF_LANG['ad_menu_attachments'] ?>:\n                                        </label>\n                                        <div class=\"col-lg-10\">\n                                            <ul class=\"list-unstyled adminAttachments\">\n                                                <?php\n                                                $attList = AttachmentFactory::fetchByRecordId(\n                                                    $faqConfig,\n                                                    $faqData['id']\n                                                );\n                                                foreach ($attList as $att) {\n                                                    printf(\n                                                        '<li><a href=\"../%s\">%s</a> ',\n                                                        $att->buildUrl(),\n                                                        $att->getFilename()\n                                                    );\n                                                    if ($user->perm->hasPermission($currentUserId, 'delattachment')) {\n                                                        printf(\n                                                            '<a class=\"badge badge-danger\" href=\"?action=delatt&amp;record_id=%d&amp;id=%d&amp;lang=%s\"><i aria-hidden=\"true\" class=\"fa fa-trash\"></i></a>',\n                                                            $faqData['id'],\n                                                            $att->getId(),\n                                                            $faqData['lang']\n                                                        );\n                                                    }\n                                                    echo \"</li>\\n\";\n                                                }\n                                                ?>\n                                            </ul>\n                                            <?php\n                                            printf(\n                                                '<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#attachmentModal\">%s</button>',\n                                                $PMF_LANG['ad_att_add']\n                                            );\n                                            ?>\n                                        </div>\n                                    </div>\n                                <?php endif; ?>\n\n                                <!-- Tags -->\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"tags\">\n                                        <?= $PMF_LANG['ad_entry_tags'] ?>:\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <input type=\"text\" name=\"tags\" id=\"tags\" value=\"<?= $faqData['tags'] ?>\"\n                                               autocomplete=\"off\"\n                                               class=\"form-control pmf-tags-autocomplete\"\n                                               data-tag-list=\"<?= $faqData['tags'] ?>\">\n                                        <small id=\"tagsHelp\"\n                                               class=\"form-text text-muted\"><?= $PMF_LANG['msgShowHelp'] ?></small>\n                                    </div>\n                                </div>\n\n                                <!-- Keywords -->\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"keywords\">\n                                        <?= $PMF_LANG['ad_entry_keywords'] ?>:\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <input type=\"text\" name=\"keywords\" id=\"keywords\" maxlength=\"255\"\n                                               class=\"form-control\"\n                                               value=\"<?= $faqData['keywords'] ?>\">\n                                        <small id=\"keywordsHelp\"\n                                               class=\"form-text text-muted\"><?= $PMF_LANG['msgShowHelp'] ?></small>\n                                    </div>\n                                </div>\n\n                                <!-- Author -->\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"author\">\n                                        <?= $PMF_LANG['ad_entry_author'] ?>\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <input type=\"text\" name=\"author\" id=\"author\" value=\"<?= $faqData['author'] ?>\"\n                                               class=\"form-control\">\n                                    </div>\n                                </div>\n\n                                <!-- E-Mail -->\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"email\">\n                                        <?= $PMF_LANG['ad_entry_email'] ?>\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <input type=\"email\" name=\"email\" id=\"email\" value=\"<?= $faqData['email'] ?>\"\n                                               class=\"form-control\">\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"tab-pane\" id=\"tab-permissions\">\n                                <!-- Permissions -->\n                                <?php if ($faqConfig->get('security.permLevel') !== 'basic') : ?>\n                                    <fieldset class=\"form-group\">\n                                        <div class=\"row\">\n                                            <legend class=\"col-lg-2 col-form-label pt-0\">\n                                              <?= $PMF_LANG['ad_entry_grouppermission'] ?>\n                                            </legend>\n                                            <div class=\"col-lg-10\">\n                                              <div class=\"form-check\">\n                                                <input type=\"radio\" id=\"allgroups\" name=\"grouppermission\"\n                                                       value=\"all\" class=\"form-check-input\"\n                                                  <?php echo($allGroups ? 'checked' : ''); ?>>\n                                                <label class=\"form-check-label\" for=\"allgroups\">\n                                                  <?= $PMF_LANG['ad_entry_all_groups'] ?>\n                                                </label>\n                                              </div>\n                                              <div class=\"form-check\">\n                                                <input type=\"radio\" id=\"restrictedgroups\" name=\"grouppermission\"\n                                                       class=\"form-check-input\"\n                                                       value=\"restricted\" <?php echo($restrictedGroups ? 'checked' : ''); ?>>\n                                                <label for=\"selected-groups\" class=\"form-check-label\"\n                                                       for=\"restrictedgroups\">\n                                                  <?= $PMF_LANG['ad_entry_restricted_groups'] ?>\n                                                </label>\n                                                <select id=\"selected-groups\" name=\"restricted_groups[]\" size=\"3\"\n                                                        class=\"form-control\" multiple>\n                                                    <?= $user->perm->getAllGroupsOptions($groupPermission, $user) ?>\n                                                </select>\n                                              </div>\n                                            </div>\n                                        </div>\n                                    </fieldset>\n                                <?php else : ?>\n                                    <input type=\"hidden\" name=\"grouppermission\" value=\"all\">\n                                <?php endif; ?>\n\n                                <fieldset class=\"form-group\">\n                                    <div class=\"row\">\n                                        <legend class=\"col-lg-2 col-form-label pt-0\"><?= $PMF_LANG['ad_entry_userpermission'] ?></legend>\n                                        <div class=\"col-lg-10\">\n                                            <div class=\"form-check\">\n                                                <input type=\"radio\" id=\"allusers\" name=\"userpermission\" value=\"all\"\n                                                       class=\"form-check-input\"\n                                                       <?= $allUsers ? 'checked' : '' ?>>\n                                                <label class=\"form-check-label\" for=\"allusers\">\n                                                    <?= $PMF_LANG['ad_entry_all_users'] ?>\n                                                </label>\n                                            </div>\n                                            <div class=\"form-check\">\n                                                <input type=\"radio\" id=\"restrictedusers\" name=\"userpermission\"\n                                                       class=\"form-check-input\"\n                                                       value=\"restricted\" <?= $restrictedUsers ? 'checked' : '' ?>>\n                                                <label class=\"form-check-label\" for=\"restrictedusers\">\n                                                    <?= $PMF_LANG['ad_entry_restricted_users'] ?>\n                                                </label>\n                                                <select name=\"restricted_users\" class=\"form-control\">\n                                                    <?= $userHelper->getAllUserOptions($userPermission[0], false) ?>\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </fieldset>\n\n                            </div>\n\n                            <div class=\"tab-pane\" id=\"tab-notes-changelog\">\n                                <h6 class=\"card-title sr-only\">\n                                    <?= $PMF_LANG['ad_entry_changelog'] ?>\n                                </h6>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"changelog-date\">\n                                        <?= $PMF_LANG['ad_entry_date'] ?>\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"changelog-date\"\n                                               value=\"<?= $faqData['date'] ?>\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-lg-2 col-form-label\" for=\"changed\">\n                                        <?= $PMF_LANG['ad_entry_changed'] ?>\n                                    </label>\n                                    <div class=\"col-lg-10\">\n                                        <textarea name=\"changed\" id=\"changed\" rows=\"3\" class=\"form-control\"\n                                        ><?= $faqData['changed'] ?></textarea>\n                                    </div>\n                                </div>\n\n                                <h6 class=\"card-title\">\n                                    <label for=\"notes\">\n                                        <?php printf($PMF_LANG['ad_admin_notes_hint'], $PMF_LANG['ad_admin_notes']) ?>\n                                    </label>\n                                </h6>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-lg-10 offset-lg-2\">\n                                        <textarea id=\"notes\" name=\"notes\" class=\"form-control\" rows=\"3\"\n                                        ><?= isset($faqData['notes']) ? $faqData['notes'] : '' ?></textarea>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\">\n                                    <div class=\"col-lg-2\">\n                                        <h6 class=\"card-title\">\n                                            <?= $PMF_LANG['ad_entry_changelog_history'] ?>\n                                        </h6>\n                                    </div>\n                                    <div class=\"col-lg-10\">\n                                        <ul>\n                                            <?php foreach ($changelog->getChangeEntries($faqData['id']) as $entry) {\n                                                $entryUser = new User($faqConfig);\n                                                $entryUser->getUserById($entry['user']);\n                                                ?>\n                                                <li class=\"small pt-0\">\n                                                    <?php printf(\n                                                        '<i class=\"fa fa-hand-o-right\"></i> %s  1.%d <i class=\"fa fa-calendar\"></i> %s <i class=\"fa fa-user\"></i> %s',\n                                                        $PMF_LANG['ad_entry_revision'],\n                                                        $entry['revision_id'],\n                                                        $date->format(date('Y-m-d H:i', $entry['date'])),\n                                                        $entryUser->getUserData('display_name')\n                                                    );\n                                                    ?>\n                                                    <br>\n                                                    <?= Strings::htmlentities($entry['changelog']) ?>\n                                                </li>\n                                            <?php } ?>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Sidebar -->\n            <div class=\"col-lg-3\">\n                <div id=\"accordion\" role=\"tablist\">\n                    <div class=\"card mb-4\">\n                        <div class=\"card-header text-center\" role=\"tab\" id=\"pmf-heading-date\">\n                            <?php if ($selectedRevisionId === $faqData['revision_id']) : ?>\n                                <button class=\"btn btn-lg btn-info\" type=\"reset\">\n                                    <?= $PMF_LANG['ad_gen_reset'] ?>\n                                </button>\n                                <button class=\"btn btn-lg btn-primary\" type=\"submit\">\n                                    <?= $PMF_LANG['ad_entry_save'] ?>\n                                </button>\n                            <?php endif ?>\n\n                        </div>\n                        <div class=\"card-body\">\n                            <h5 class=\"mb-0\">\n                                <?= $PMF_LANG['ad_entry_date'] ?>\n                            </h5>\n                            <div class=\"form-group\">\n                                <div class=\"form-check\">\n                                    <input type=\"radio\" id=\"dateActualize\" checked name=\"recordDateHandling\"\n                                           class=\"form-check-input\"\n                                           onchange=\"setRecordDate(this.id);\">\n                                    <label class=\"form-check-label\" for=\"dateActualize\">\n                                        <?= $PMF_LANG['msgUpdateFaqDate'] ?>\n                                    </label>\n                                </div>\n                                <div class=\"form-check\">\n                                    <input type=\"radio\" id=\"dateKeep\" name=\"recordDateHandling\" class=\"form-check-input\"\n                                           onchange=\"setRecordDate(this.id);\">\n                                    <label class=\"form-check-label\" for=\"dateKeep\">\n                                        <?= $PMF_LANG['msgKeepFaqDate'] ?>\n                                    </label>\n                                </div>\n                                <div class=\"form-check\">\n                                    <input type=\"radio\" id=\"dateCustomize\" name=\"recordDateHandling\"\n                                           class=\"form-check-input\"\n                                           onchange=\"setRecordDate(this.id);\">\n                                    <label class=\"form-check-label\" for=\"dateCustomize\">\n                                        <?= $PMF_LANG['msgEditFaqDat'] ?>\n                                    </label>\n                                </div>\n                                <div id=\"recordDateInputContainer\" class=\"form-group invisible\">\n                                    <input type=\"datetime-local\" name=\"date\" id=\"date\" class=\"form-control\"\n                                           placeholder=\"<?= $faqData['date'] ?>\">\n                                </div>\n                            </div>\n                            <h5 class=\"mb-0\">\n                                <?= $PMF_LANG['ad_entry_status'] ?>\n                            </h5>\n                            <div class=\"form-group\">\n                                <!-- active or not -->\n                                <?php if ($user->perm->hasPermission($currentUserId, 'approverec')) :\n                                    if (isset($faqData['active']) && $faqData['active'] == 'yes') {\n                                        $suf = ' checked';\n                                        $sul = null;\n                                    } elseif ($faqConfig->get('records.defaultActivation')) {\n                                        $suf = ' checked';\n                                        $sul = null;\n                                    } else {\n                                        $suf = null;\n                                        $sul = ' checked';\n                                    }\n                                    ?>\n                                    <div class=\"form-check\">\n                                        <input type=\"radio\" id=\"active\" name=\"active\" value=\"yes\"\n                                               class=\"form-check-input\"\n                                            <?php if (isset($suf)) {\n                                                echo $suf;\n                                            } ?>>\n                                        <label class=\"form-check-label\" for=\"active\">\n                                            <?= $PMF_LANG['ad_entry_visibility'] ?>\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check\">\n                                        <input type=\"radio\" id=\"inactive\" name=\"active\" value=\"no\"\n                                               class=\"form-check-input\"\n                                            <?php if (isset($sul)) {\n                                                echo $sul;\n                                            } ?>>\n                                        <label class=\"form-check-label\" for=\"inactive\">\n                                          <?= $PMF_LANG['ad_entry_not_visibility'] ?>\n                                        </label>\n                                    </div>\n                                <?php else : ?>\n                                    <div class=\"form-check\">\n                                        <input type=\"radio\" id=\"inactive\" name=\"active\" value=\"no\"\n                                               class=\"form-check-input\" checked>\n                                        <label class=\"form-check-label\" for=\"inactive\">\n                                            <?= $PMF_LANG['ad_entry_not_visibility'] ?>\n                                        </label>\n                                    </div>\n                                <?php endif; ?>\n                            </div>\n\n                            <?php if ($queryString != 'insertentry' && !$faqConfig->get('records.enableAutoRevisions')) : ?>\n                              <h5 class=\"mb-0\">\n                                  <?= $PMF_LANG['ad_entry_new_revision'] ?>\n                              </h5>\n                              <div class=\"form-group\">\n                                <div class=\"form-check\">\n                                  <input type=\"radio\" name=\"revision\" id=\"revision\" value=\"yes\"\n                                         class=\"form-check-input\">\n                                  <label class=\"form-check-label\"\n                                         for=\"revision\"><?= $PMF_LANG['ad_gen_yes'] ?></label>\n                                </div>\n                                <div class=\"form-check\">\n                                  <input type=\"radio\" name=\"revision\" id=\"no-revision\" value=\"no\"\n                                         checked class=\"form-check-input\">\n                                  <label class=\"form-check-label\"\n                                         for=\"no-revision\"><?= $PMF_LANG['ad_gen_no'] ?></label>\n                                </div>\n                              </div>\n                            <?php endif ?>\n\n                            <div class=\"form-group\">\n                                <!-- sticky or not -->\n                                <div class=\"form-check\">\n                                    <input type=\"checkbox\" id=\"sticky\" name=\"sticky\" class=\"form-check-input\"\n                                        <?php echo(isset($faqData['sticky']) && $faqData['sticky'] ? 'checked' : '') ?>>\n                                    <label class=\"form-check-label\"\n                                           for=\"sticky\"><?= $PMF_LANG['ad_entry_sticky'] ?></label>\n                                </div>\n\n                                <!-- comments allowed or not -->\n                                <div class=\"form-check\">\n                                    <input type=\"checkbox\" name=\"comment\" id=\"comment\" value=\"y\"\n                                           class=\"form-check-input\"\n                                           <?= $faqData['comment'] ?>>\n                                    <label class=\"form-check-label\"\n                                           for=\"comment\"><?= $PMF_LANG['ad_entry_allowComments'] ?></label>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <!-- solution id -->\n                                <label class=\"col-form-label\" for=\"solution_id\">\n                                    <?= $PMF_LANG['ad_entry_solution_id'] ?>:\n                                </label>\n                                <input type=\"number\" name=\"solution_id\" id=\"solution_id\" size=\"5\" class=\"form-control\"\n                                       readonly\n                                       value=\"<?= isset($faqData['solution_id']) ? $faqData['solution_id'] : $faq->getNextSolutionId(\n                                       ) ?>\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </form>\n\n    <!-- Attachment Upload Dialog -->\n    <?php\n    if (0 === $faqData['id']) {\n        $faqData['id'] = $faqConfig->getDb()->nextId(\n            Database::getTablePrefix() . 'faqdata',\n            'id'\n        );\n    }\n    ?>\n  <div class=\"modal fade\" id=\"attachmentModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"attachmentModalLabel\"\n       aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"attachmentModalLabel\">\n              <?= $PMF_LANG['ad_att_addto'] . ' ' . $PMF_LANG['ad_att_addto_2'] ?>\n            (max <?= round($faqConfig->get('records.maxAttachmentSize') / pow(1024, 2), 2) ?> MB)\n          </h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <form action=\"ajax.attachment.php?action=upload\" enctype=\"multipart/form-data\" method=\"post\"\n                id=\"attachmentForm\" novalidate>\n            <fieldset>\n              <input type=\"hidden\" name=\"MAX_FILE_SIZE\"\n                     value=\"<?= $faqConfig->get('records.maxAttachmentSize') ?>\">\n              <input type=\"hidden\" name=\"record_id\" id=\"attachment_record_id\"\n                     value=\"<?= $faqData['id'] ?>\">\n              <input type=\"hidden\" name=\"record_lang\" id=\"attachment_record_lang\"\n                     value=\"<?= $faqData['lang'] ?>\">\n              <input type=\"hidden\" name=\"save\" value=\"true\">\n              <input type=\"hidden\" name=\"csrf\" value=\"<?= $user->getCsrfTokenFromSession() ?>\">\n\n              <div class=\"custom-file\">\n                <input type=\"file\" class=\"custom-file-input\" name=\"filesToUpload[]\" id=\"filesToUpload\" multiple>\n                <label class=\"custom-file-label\" for=\"filesToUpload\">\n                    <?= $PMF_LANG['ad_att_att'] ?>\n                </label>\n                <div class=\"invalid-feedback\">\n                  The file is too big.\n                </div>\n              </div>\n\n              <div class=\"form-group pmf-attachment-upload-files invisible\">\n                  <?= $PMF_LANG['msgAttachmentsFilesize'] ?>:\n                <output id=\"filesize\"></output>\n              </div>\n              <div class=\"progress invisible\">\n                <div class=\"progress-bar progress-bar-striped bg-success progress-bar-animated\"\n                     role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n              </div>\n\n            </fieldset>\n          </form>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"reset\" class=\"btn btn-primary\" data-dismiss=\"modal\" id=\"pmf-attachment-modal-close\">\n              <?= $PMF_LANG['ad_att_close'] ?>\n          </button>\n          <button type=\"button\" class=\"btn btn-primary\" id=\"pmf-attachment-modal-upload\">\n              <?= $PMF_LANG['ad_att_butt'] ?>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n    <script src=\"assets/js/record.js\"></script>\n    <script>\n      function setRecordDate(how) {\n        if ('dateActualize' === how) {\n          $('#date').val('');\n        } else if ('dateKeep' === how) {\n          $('#date').val('<?= $faqData['isoDate'] ?>');\n        } else if ('dateCustomize' === how) {\n          $('#recordDateInputContainer').removeClass('invisible');\n          $('#date').val('');\n        }\n      }\n    </script>\n    <?php\n} elseif ($user->perm->hasPermission($currentUserId, 'edit_faq') !== 1 && !Database::checkOnEmptyTable('faqcategories')) {\n    echo $PMF_LANG['err_NotAuth'];\n} elseif ($user->perm->hasPermission($currentUserId, 'edit_faq') && Database::checkOnEmptyTable('faqcategories')) {\n    echo $PMF_LANG['no_cats'];\n}\n", "<?php\n\n/**\n * Shows the list of records ordered by categories.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @author Minoru TODA <todam@netjapan.co.jp>\n * @copyright 2003-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2003-02-23\n */\n\nuse phpMyFAQ\\Category;\nuse phpMyFAQ\\Category\\CategoryRelation;\nuse phpMyFAQ\\Comments;\nuse phpMyFAQ\\Date;\nuse phpMyFAQ\\Database;\nuse phpMyFAQ\\Faq;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Helper\\CategoryHelper;\nuse phpMyFAQ\\Helper\\FaqHelper;\nuse phpMyFAQ\\Language;\nuse phpMyFAQ\\LinkVerifier;\nuse phpMyFAQ\\Search\\SearchFactory;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\Visits;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n?>\n        <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n          <h1 class=\"h2\">\n            <i aria-hidden=\"true\" class=\"fa fa-list-alt\"></i>\n              <?= $PMF_LANG['ad_entry_aor'] ?>\n          </h1>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n<?php\nif ($user->perm->hasPermission($user->getUserId(), 'edit_faq') || $user->perm->hasPermission($user->getUserId(), 'delete_faq')) {\n    $category = new Category($faqConfig, [], false);\n    $category->setUser($currentAdminUser);\n    $category->setGroups($currentAdminGroups);\n    $category->transform(0);\n    $category->buildCategoryTree();\n\n    $categoryHelper = new CategoryHelper();\n    $categoryHelper->setCategory($category);\n\n    $categoryRelation = new CategoryRelation($faqConfig);\n    $categoryRelation->setGroups($currentAdminGroups);\n\n    $faqHelper = new FaqHelper($faqConfig);\n\n\n    $linkVerifier = new LinkVerifier($faqConfig, $user->getLogin());\n    if ($linkVerifier->isReady()) {\n        ?>\n    <script>\n        function getImageElement(id, lang) {\n            return $('#imgurl_' + lang + '_' + id);\n        }\n\n        function getSpanElement(id, lang) {\n            return $('#spanurl_' + lang + '_' + id);\n        }\n\n        function getDivElement(id, lang) {\n            return $('#divurl_' + lang + '_' + id);\n        }\n\n        function onDemandVerifyURL(id, lang, target) {\n            const widthPx = 780,\n                heightPx = 450,\n                leftPx   = (screen.width  - widthPx) / 2,\n                topPx    = (screen.height - heightPx) / 2,\n                pmfWindow = window.open('index.php?action=ajax&ajax=onDemandURL&id=' + id + '&artlang=' + lang, 'onDemandURLVerification', 'toolbar=no, location=no, status=no, menubar=no, width=' + widthPx + ', height=' + heightPx + ', left=' + leftPx + ', top=' + topPx + ', resizable=yes, scrollbars=yes');\n                pmfWindow.focus();\n\n            verifyEntryURL(id, lang);\n        }\n\n        function verifyEntryURL(id, lang) {\n            const target = getSpanElement(id, lang);\n\n            // !!IMPORTANT!! DISABLE ONLOAD. If you do not do this, you will get infinite loop!\n            getImageElement(id, lang).onload = '';\n\n            //target.src = \"images/url-checking.png\";\n            getDivElement(id, lang).className = \"url-checking\";\n            target.innerHTML = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-checking'] ?>\";\n\n            const url = 'index.php';\n            const pars = 'action=ajax&ajax=verifyURL&id=' + id + '&artlang=' + lang;\n            const myAjax = new jQuery.ajax({url: url,\n                type: 'get',\n                data: pars,\n                complete: verifyEntryURL_success,\n                error: verifyEntryURL_failure});\n\n            function verifyEntryURL_success(XmlRequest)\n            {\n                let allResponses = new [];\n                allResponses['batch1'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-batch1'] ?>\";\n                allResponses['batch2'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-batch2'] ?>\";\n                allResponses['batch3'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-batch3'] ?>\";\n                allResponses['checking'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-checking'] ?>\";\n                allResponses['disabled'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-disabled'] ?>\";\n                allResponses['linkbad'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-linkbad'] ?>\";\n                allResponses['linkok'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-linkok'] ?>\";\n                allResponses['noaccess'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-noaccess'] ?>\";\n                allResponses['noajax'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-noajax'] ?>\";\n                allResponses['nolinks'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-nolinks'] ?>\";\n                allResponses['noscript'] = \"<?= $PMF_LANG['ad_linkcheck_feedback_url-noscript'] ?>\";\n                getDivElement(id, lang).className = \"url-\" + XmlRequest.responseText;\n                if (typeof(allResponses[XmlRequest.responseText]) === \"undefined\") {\n                    getDivElement(id, lang).className = \"url-noajax \";\n                    target.html(allResponses['noajax']);\n                } else {\n                    target.html(allResponses[XmlRequest.responseText]);\n                }\n            }\n\n            function verifyEntryURL_failure(XmlRequest)\n            {\n                getDivElement(id, lang).className = \"url-noaccess\";\n                target.html(\"<?= $PMF_LANG['ad_linkcheck_feedback_url-noaccess'] ?>\");\n            }\n\n        }\n    </script>\n        <?php\n    }\n\n    $faq = new Faq($faqConfig);\n    $faq->setUser($currentAdminUser);\n    $faq->setGroups($currentAdminGroups);\n    $date = new Date($faqConfig);\n\n    $internalSearch = '';\n    $linkState = Filter::filterInput(INPUT_POST, 'linkstate', FILTER_UNSAFE_RAW);\n    $searchCat = Filter::filterInput(INPUT_POST, 'searchcat', FILTER_VALIDATE_INT);\n    $searchTerm = Filter::filterInput(INPUT_POST, 'searchterm', FILTER_UNSAFE_RAW);\n\n    if (!is_null($linkState)) {\n        $cond[Database::getTablePrefix() . 'faqdata.links_state'] = 'linkbad';\n        $linkState = ' checked ';\n        $internalSearch .= '&linkstate=linkbad';\n    }\n    if (!is_null($searchCat)) {\n        $internalSearch .= '&searchcat=' . $searchCat;\n        $cond[Database::getTablePrefix() . 'faqcategoryrelations.category_id'] = array_merge(\n            [$searchCat],\n            $category->getChildNodes((int) $searchCat)\n        );\n    }\n\n    $selectedCategory = Filter::filterInput(INPUT_GET, 'category', FILTER_VALIDATE_INT, 0);\n    $orderBy = Filter::filterInput(INPUT_GET, 'orderby', FILTER_UNSAFE_RAW, 1);\n    $sortBy = Filter::filterInput(INPUT_GET, 'sortby', FILTER_UNSAFE_RAW);\n    if (1 !== $orderBy) {\n        switch ($orderBy) {\n            case 'id':\n                $orderBy = 1;\n                break;\n            case 'title':\n                $orderBy = 2;\n                break;\n            case 'date':\n                $orderBy = 3;\n                break;\n        }\n    }\n    ?>\n    <form id=\"recordSelection\" name=\"recordSelection\" method=\"post\" accept-charset=\"utf-8\">\n        <div class=\"accordion\" id=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\n    <?php\n    $comment = new Comments($faqConfig);\n    $numCommentsByFaq = $comment->getNumberOfComments();\n    $numCommentsByCat = [];\n    $numRecordsByCat = $categoryRelation->getNumberOfFaqsPerCategory(\n        $faqConfig->get('main.enableCategoryRestrictions')\n    );\n    $numActiveByCat = [];\n\n    $matrix = $categoryRelation->getCategoryFaqsMatrix();\n    foreach ($matrix as $categoryKey => $value) {\n        $numCommentsByCat[$categoryKey] = 0;\n        foreach ($value as $faqKey => $value) {\n            if (isset($numCommentsByFaq[$faqKey])) {\n                $numCommentsByCat[$categoryKey] += $numCommentsByFaq[$faqKey];\n            }\n        }\n    }\n\n    if (is_null($searchTerm)) {\n        if ($faqConfig->get('main.enableCategoryRestrictions')) {\n            $Language = new Language($faqConfig);\n            $language = $Language->setLanguage(\n                $faqConfig->get('main.languageDetection'),\n                $faqConfig->get('main.language')\n            );\n            $faq->getAllRecords($orderBy, ['lang' => $language], $sortBy);\n        } else {\n            $faq->getAllRecords($orderBy, null, $sortBy);\n        }\n\n        foreach ($faq->faqRecords as $record) {\n            if (!isset($numActiveByCat[$record['category_id']])) {\n                $numActiveByCat[$record['category_id']] = 0;\n            }\n            $numActiveByCat[$record['category_id']] += $record['active'] == 'yes' ? 1 : 0;\n        }\n    } else {\n        $fdTable = Database::getTablePrefix() . 'faqdata';\n        $fcrTable = Database::getTablePrefix() . 'faqcategoryrelations';\n        $search = SearchFactory::create($faqConfig, ['database' => Database::getType()]);\n\n        $search\n            ->setTable($fdTable)\n            ->setResultColumns(\n                [\n                    $fdTable . '.id AS id',\n                    $fdTable . '.lang AS lang',\n                    $fdTable . '.solution_id AS solution_id',\n                    $fcrTable . '.category_id AS category_id',\n                    $fdTable . '.sticky AS sticky',\n                    $fdTable . '.active AS active',\n                    $fdTable . '.thema AS thema',\n                    $fdTable . '.content AS content',\n                    $fdTable . '.updated AS updated',\n                ]\n            )\n            ->setJoinedTable($fcrTable)\n            ->setJoinedColumns(\n                [\n                    $fdTable . '.id = ' . $fcrTable . '.record_id',\n                    $fdTable . '.lang = ' . $fcrTable . '.record_lang',\n                ]\n            );\n\n        if (is_numeric($searchTerm)) {\n            $search->setMatchingColumns([$fdTable . '.solution_id']);\n        } else {\n            $search->setMatchingColumns([$fdTable . '.thema', $fdTable . '.content', $fdTable . '.keywords']);\n        }\n\n        $result = $search->search($searchTerm);\n        $laction = 'view';\n        $internalSearch = '&search=' . $searchTerm;\n        $wasSearch = true;\n        $idsFound = [];\n        $faqsFound = [];\n\n        while ($row = $faqConfig->getDb()->fetchObject($result)) {\n            if ($searchCat != 0 && $searchCat != (int)$row->category_id) {\n                continue;\n            }\n\n            if (in_array($row->id, $idsFound)) {\n                continue; // only show one entry if FAQ is in multiple categories\n            }\n\n            $faqsFound[$row->category_id][$row->id] = [\n                'id' => $row->id,\n                'category_id' => $row->category_id,\n                'solution_id' => $row->solution_id,\n                'lang' => $row->lang,\n                'active' => $row->active,\n                'sticky' => $row->sticky,\n                'title' => $row->thema,\n                'content' => $row->content,\n                'updated' => Date::createIsoDate($row->updated),\n            ];\n\n            if (!isset($numActiveByCat[$row->category_id])) {\n                $numActiveByCat[$row->category_id] = 0;\n            }\n\n            $numActiveByCat[$row->category_id] += $row->active ? 1 : 0;\n\n            $idsFound[] = $row->id;\n        }\n\n        // Sort search result ordered by category ID\n        ksort($faqsFound);\n        foreach ($faqsFound as $categoryId => $faqFound) {\n            foreach ($faqFound as $singleFaq) {\n                $faq->faqRecords[] = $singleFaq;\n            }\n        }\n    }\n\n    if (count($faq->faqRecords) > 0) {\n        $old = 0;\n        $faqIds = [];\n\n        $visits = new Visits($faqConfig);\n        $numVisits = [];\n        foreach ($visits->getAllData() as $visit) {\n            $numVisits[$visit['id']] = $visit['lang'];\n        }\n\n        foreach ($faq->faqRecords as $record) {\n            $catInfo = '';\n            $cid = $record['category_id'];\n\n            if (isset($numRecordsByCat[$cid])) {\n                $catInfo .= sprintf(\n                    '<span class=\"badge badge-info\" id=\"category_%d_item_count\">%d %s</span> ',\n                    $cid,\n                    $numRecordsByCat[$cid],\n                    $PMF_LANG['msgEntries']\n                );\n            }\n\n            if (isset($numRecordsByCat[$cid]) && $numRecordsByCat[$cid] > $numActiveByCat[$cid]) {\n                $catInfo .= sprintf(\n                    '<span class=\"badge badge-danger\"><span id=\"js-active-records-%d\">%d</span> %s</span> ',\n                    $cid,\n                    $numRecordsByCat[$cid] - $numActiveByCat[$cid],\n                    $PMF_LANG['ad_record_inactive']\n                );\n            }\n\n            if (isset($numCommentsByCat[$cid]) && ($numCommentsByCat[$cid] > 0)) {\n                $catInfo .= sprintf(\n                    '<span class=\"badge badge-info\">%d %s</span>',\n                    $numCommentsByCat[$cid],\n                    $PMF_LANG['ad_start_comments']\n                );\n            }\n            $catInfo .= '';\n\n            if ($cid != $old) {\n                if ($old == 0) {\n                    printf('<a name=\"cat_%d\"></a>', $cid);\n                } else {\n                    echo '</tbody></table></div></div></div>';\n                }\n                ?>\n          <div class=\"card card-default\">\n            <div class=\"card-header\" role=\"tab\" id=\"category-heading-<?= $cid ?>\">\n              <span class=\"float-right\"><?= $catInfo ?></span>\n              <h5>\n                <a role=\"button\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#category-<?= $cid ?>\"\n                   aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                  <i class=\"icon fa fa-chevron-circle-right \"></i>\n                <?= $category->getPath($cid) ?>\n                </a>\n              </h5>\n            </div>\n            <div id=\"category-<?= $cid ?>\" class=\"card-collapse collapse\" role=\"tabcard\"\n                 aria-labelledby=\"category-heading-<?= $cid ?>\">\n              <div class=\"card-body\">\n                <table class=\"table table-hover table-sm\">\n                  <thead class=\"thead-light\">\n                  <tr>\n                    <th colspan=\"3\" style=\"width: 24px; vertical-align: middle;\">\n                      <div style=\"display: inline-flex; flex-direction: column;\">\n                        <a href=\"?action=view&category=<?= $cid ?>&orderby=id&sortby=asc\">\n                          <i class=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\n                        </a>\n                        ID\n                        <a href=\"?action=view&category=<?= $cid ?>&orderby=id&sortby=desc\">\n                          <i class=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>\n                        </a>\n                      </div>\n                    </th>\n                    <th style=\"vertical-align: middle;\">\n                      <div style=\"display: inline-flex; flex-direction: column;\">\n                        <a href=\"?action=view&category=<?= $cid ?>&orderby=title&sortby=asc\">\n                          <i class=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\n                        </a>\n                        <?= $PMF_LANG['ad_entry_theme'] ?>\n                        <a href=\"?action=view&category=<?= $cid ?>&orderby=title&sortby=desc\">\n                          <i class=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>\n                        </a>\n                      </div>\n                    </th>\n                    <th style=\"width: 100px; vertical-align: middle;\">\n                      <div style=\"display: inline-flex; flex-direction: column;\">\n                        <a href=\"?action=view&category=<?= $cid ?>&orderby=date&sortby=asc\">\n                          <i class=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\n                        </a>\n                        <?= $PMF_LANG['ad_entry_date'] ?>\n                        <a href=\"?action=view&category=<?= $cid ?>&orderby=date&sortby=desc\">\n                          <i class=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>\n                        </a>\n                      </div>\n                    </th>\n                    <th colspan=\"2\">\n                      &nbsp;\n                    </th>\n\n                    <th style=\"width: 120px; vertical-align: middle;\">\n                      <label>\n                        <input type=\"checkbox\" id=\"sticky_category_block_<?= $cid ?>\"\n                               onclick=\"saveStatusForCategory(<?= $cid ?>, 'sticky', '<?= $user->getCsrfTokenFromSession() ?>')\"/>\n                      <?= $PMF_LANG['ad_record_sticky'] ?>\n                      </label>\n                    </th>\n                    <th style=\"width: 120px; vertical-align: middle;\">\n                    <?php if ($user->perm->hasPermission($user->getUserId(), 'approverec')) { ?>\n                          <label>\n                            <input type=\"checkbox\" id=\"active_category_block_<?= $cid ?>\"\n                                   onclick=\"saveStatusForCategory(<?= $cid ?>, 'active', '<?= $user->getCsrfTokenFromSession() ?>')\"\n                                <?php\n                                if (\n                                    isset($numRecordsByCat[$cid]) && isset($numActiveByCat[$cid]) &&\n                                    $numRecordsByCat[$cid] == $numActiveByCat[$cid]\n                                ) {\n                                    echo 'checked';\n                                }\n                                ?>>\n                              <?= $PMF_LANG['ad_record_active'] ?>\n                          </label>\n                    <?php } else { ?>\n                          <span class=\"fa-stack\">\n                              <i class=\"fa fa-check fa-stack-1x\"></i>\n                              <i class=\"fa fa-ban fa-stack-2x text-danger\"></i>\n                            </span>\n                    <?php } ?>\n                    </th>\n                    <th colspan=\"2\">\n                      &nbsp;\n                    </th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                <?php\n            }\n            ?>\n                    <tr id=\"record_<?= $record['id'] . '_' . $record['lang'] ?>\">\n                      <td style=\"width: 24px; text-align: right;\">\n                        <a href=\"?action=editentry&id=<?= $record['id'] ?>&lang=<?= $record['lang'] ?>\">\n                        <?= $record['id'] ?>\n                        </a>\n                      </td>\n                      <td style=\"width: 16px;\">\n                      <?= $record['lang'] ?>\n                      </td>\n                      <td style=\"width: 24px;\">\n                        <a href=\"?action=editentry&id=<?= $record['id'] ?>&lang=<?= $record['lang'] ?>\"\n                           title=\"<?= $PMF_LANG['ad_user_edit'] ?> '<?= str_replace('\"', '\u00b4', $record['title']) ?>'\">\n                        <?= $record['solution_id'] ?>\n                        </a>\n                      </td>\n                      <td>\n                        <a href=\"?action=editentry&id=<?= $record['id'] ?>&lang=<?= $record['lang'] ?>\"\n                           title=\"<?= $PMF_LANG['ad_user_edit'] ?> '\n                           <?= str_replace('\"', '\u00b4', Strings::htmlentities($record['title'])) ?>'\">\n                        <?= Strings::htmlentities($record['title']) ?>\n                        </a>\n            <?php\n            if (isset($numCommentsByFaq[$record['id']])) {\n                printf(\n                    '<br><a class=\"badge badge-primary\" href=\"?action=comments#record_id_%d\">%d %s</a>',\n                    $record['id'],\n                    $numCommentsByFaq[$record['id']],\n                    $PMF_LANG['ad_start_comments']\n                );\n            }\n            ?></td>\n                      <td>\n                      <?= $date->format($record['updated']) ?>\n                      </td>\n                      <td style=\"width: 96px;\">\n                      <?= $linkVerifier->getEntryStateHTML($record['id'], $record['lang']) ?>\n                      </td>\n                      <td>\n                        <div class=\"dropdown\">\n                          <a class=\"btn btn-primary dropdown-toggle\" href=\"#\" role=\"button\"\n                             id=\"dropdownAddNewTranslation\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                             aria-expanded=\"false\">\n                            <i aria-hidden=\"true\" class=\"fa fa-globe\"\n                               title=\"<?= $PMF_LANG['msgTransToolAddNewTranslation'] ?>\"></i>\n                          </a>\n                          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownAddNewTranslation\">\n                          <?= $faqHelper->createFaqTranslationLinkList($record['id'], $record['lang']) ?>\n                          </div>\n                        </div>\n                      </td>\n                      <td style=\"width: 56px;\">\n                        <label>\n                          <input type=\"checkbox\" lang=\"<?= $record['lang'] ?>\"\n                                 onclick=\"saveStatus(<?= $cid . ', [' . $record['id'] . ']' ?>, 'sticky', '<?= $user->getCsrfTokenFromSession() ?>');\"\n                                 id=\"sticky_record_<?= $cid . '_' . $record['id'] ?>\"\n                          <?= $record['sticky'] ? 'checked' : '    ' ?>>\n                        </label>\n                      </td>\n                      <td>\n                      <?php if ($user->perm->hasPermission($user->getUserId(), 'approverec')) { ?>\n                            <label>\n                              <input type=\"checkbox\" lang=\"<?= $record['lang'] ?>\" class=\"active-records-category-<?= $cid ?>\"\n                                     onclick=\"saveStatus(<?= $cid . ', [' . $record['id'] . ']' ?>, 'active', '<?= $user->getCsrfTokenFromSession() ?>');\"\n                                     id=\"active_record_<?= $cid . '_' . $record['id'] ?>\"\n                                  <?= 'yes' == $record['active'] ? 'checked' : '    ' ?>>\n                            </label>\n                      <?php } else { ?>\n                            <span class=\"fa-stack\">\n                              <i class=\"fa fa-check fa-stack-1x\"></i>\n                              <i class=\"fa fa-ban fa-stack-2x text-danger\"></i>\n                            </span>\n                      <?php } ?>\n                      </td>\n                      <td style=\"width: 16px;\">\n                        <a class=\"btn btn-info\"\n                           href=\"?action=copyentry&id=<?= $record['id'] ?>&lang=<?= $record['lang']; ?>\"\n                           title=\"<?= $PMF_LANG['ad_categ_copy'] ?>\">\n                          <i aria-hidden=\"true\" class=\"fa fa-copy\"></i>\n                        </a>\n                      </td>\n                      <td style=\"width: 16px;\">\n                        <a class=\"btn btn-danger\" href=\"javascript:void(0);\"\n                           onclick=\"deleteRecord(<?= $record['id'] ?>, '<?= $record['lang'] ?>', '<?= $user->getCsrfTokenFromSession() ?>');\"\n                           title=\"<?= $PMF_LANG['ad_user_delete'] ?>\">\n                          <i aria-hidden=\"true\" class=\"fa fa-trash\"></i>\n                        </a>\n                      </td>\n                    </tr>\n            <?php\n            $old = $cid;\n\n            $faqIds[$cid][] = $record['id'];\n            ?>\n            <?php\n        }\n        ?>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n    </form>\n\n    <script src=\"assets/js/record.js\"></script>\n    <script>\n    /**\n     * Saves the sticky record status for the whole category\n     *\n     * @param id\n     * @param type\n     * @param csrf\n     *\n     * @return void\n     */\n    function saveStatusForCategory(id, type, csrf) {\n      let id_map = [];\n        <?php\n        foreach ($faqIds as $categoryId => $recordIds) {\n            if ('' === $categoryId) {\n                $categoryId = 0;\n            }\n            echo '                id_map[' . $categoryId . '] = [' . implode(',', $recordIds) . \"];\\n\";\n        }\n        ?>\n      for (let i = 0; i < id_map[id].length; i++) {\n        const status = $('#' + type + '_category_block_' + id).prop('checked');\n        $('#' + type + '_record_' + id + '_' + id_map[id][i]).prop('checked', status);\n      }\n\n      saveStatus(id, id_map[id], type, csrf);\n    }\n\n    /**\n     * Ajax call for saving the sticky record status\n     *\n     * @param cid  category id\n     * @param ids  ids\n     * @param type status type\n     * @param csrf CSRF Token\n     *\n     * @return void\n     */\n    function saveStatus(cid, ids, type, csrf) {\n      const indicator = $('#pmf-admin-saving-data-indicator'),\n        data = {\n          action: 'ajax',\n          ajax: 'records',\n          ajaxaction: 'save_' + type + '_records',\n          csrf: csrf\n        };\n\n      indicator.html('<i class=\"fa fa-cog fa-spin\"></i> Saving ...');\n\n      for (let i = 0; i < ids.length; i++) {\n        const statusId = '#' + type + '_record_' + cid + '_' + ids[i];\n        const status = $(statusId).attr('checked') ? '' : 'checked';\n        const langId = '#' + type + '_record_' + cid + '_' + ids[i];\n        const lang = $(langId).attr('lang');\n\n        data['items[' + i + '][]'] = [ids[i], lang, status];\n\n        // Updating the current record if it's also contained in another category\n        const sameRecords = $('input').filter(function () {\n          return this.id.match(new RegExp(type + '_record_(\\\\d+)_' + ids[i]));\n        });\n\n        if ('active' === type) {\n          for (let j = 0; j < sameRecords.length; j++) {\n            $('#' + sameRecords[j].id).attr('checked', status);\n            const catId = sameRecords[j].id.match(/active_record_(\\d+)_\\d+/)[1];\n            $('#js-active-records-' + catId).html($('.active-records-category-' + cid + ':not(:checked)').length);\n          }\n        } else {\n          for (let j = 0; j < sameRecords.length; j++) {\n            $('#' + sameRecords[j].id).attr('checked', status);\n            if (sameRecords[j].id.match(/active_record_(\\d+)_\\d+/)) {\n              const catId = sameRecords[j].id.match(/active_record_(\\d+)_\\d+/)[1];\n              $('#js-active-records-' + catId).html($('.active-records-category-' + cid + ':not(:checked)').length);\n            }\n          }\n        }\n      }\n\n      $.get('index.php', data, null);\n      indicator.html('<?= $PMF_LANG['ad_entry_savedsuc'] ?>');\n    }\n\n    /**\n     * Ajax call for deleting records\n     *\n     * @param record_id   Record id\n     * @param record_lang Record language\n     * @param csrf_token  CSRF Token\n     *\n     * @return void\n     */\n    function deleteRecord(record_id, record_lang, csrf_token)\n    {\n        if (confirm('<?= addslashes($PMF_LANG['ad_entry_del_1'] . ' ' . $PMF_LANG['ad_entry_del_3']);\n        ?>')) {\n            $('#pmf-admin-saving-data-indicator').html('<i class=\"fa fa-cog fa-spin fa-fw\"></i><span class=\"sr-only\">Deleting ...</span>');\n            $.ajax({\n                type:    \"POST\",\n                url:     \"index.php?action=ajax&ajax=records&ajaxaction=delete_record\",\n                data:    \"record_id=\" + record_id + \"&record_lang=\" + record_lang + \"&csrf=\" + csrf_token,\n                success: function() {\n                    $(\"#record_\" + record_id + \"_\" + record_lang).fadeOut(\"slow\");\n                    $('#pmf-admin-saving-data-indicator').html('<?= $PMF_LANG['ad_entry_delsuc'];\n                    ?>');\n                }\n            });\n        }\n    }\n    </script>\n        <?php\n    } else {\n        echo $PMF_LANG['err_nothingFound'];\n    }\n} else {\n    echo $PMF_LANG['err_NotAuth'];\n}\n?>\n    </div>\n</div>\n", "<?php\n\n/**\n * The main FAQ class. Yes, it's very huge.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package   phpMyFAQ\n * @author    Thorsten Rinne <thorsten@phpmyfaq.de>\n * @author    Matteo Scaramuccia <matteo@scaramuccia.com>\n * @author    Georgi Korchev <korchev@yahoo.com>\n * @author    Adrianna Musiol <musiol@imageaccess.de>\n * @author    Peter Caesar <p.caesar@osmaco.de>\n * @copyright 2005-2022 phpMyFAQ Team\n * @license   http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link      https://www.phpmyfaq.de\n * @since     2005-12-20\n */\n\nnamespace phpMyFAQ;\n\nuse Exception;\nuse phpMyFAQ\\Attachment\\AttachmentFactory;\nuse phpMyFAQ\\Entity\\FaqEntity;\nuse phpMyFAQ\\Helper\\FaqHelper;\nuse phpMyFAQ\\Instance\\Elasticsearch;\nuse phpMyFAQ\\Language\\Plurals;\n\n/*\n * SQL constants definitions\n */\ndefine('FAQ_SQL_ACTIVE_YES', 'yes');\ndefine('FAQ_SQL_ACTIVE_NO', 'no');\n\n/*\n * Query type definitions\n */\ndefine('FAQ_QUERY_TYPE_DEFAULT', 'faq_default');\ndefine('FAQ_QUERY_TYPE_APPROVAL', 'faq_approval');\ndefine('FAQ_QUERY_TYPE_EXPORT_PDF', 'faq_export_pdf');\ndefine('FAQ_QUERY_TYPE_EXPORT_XHTML', 'faq_export_xhtml');\ndefine('FAQ_QUERY_TYPE_EXPORT_XML', 'faq_export_xml');\n\n/*\n * Sorting type definitions\n */\ndefine('FAQ_SORTING_TYPE_NONE', 0);\ndefine('FAQ_SORTING_TYPE_CATID_FAQID', 1);\ndefine('FAQ_SORTING_TYPE_FAQTITLE_FAQID', 2);\ndefine('FAQ_SORTING_TYPE_DATE_FAQID', 3);\ndefine('FAQ_SORTING_TYPE_FAQID', 4);\n\n/**\n * Class Faq\n *\n * @package phpMyFAQ\n */\nclass Faq\n{\n    /**\n     * The current FAQ record.\n     *\n     * @var array\n     */\n    public array $faqRecord = [];\n\n    /**\n     * All current FAQ records in an array.\n     *\n     * @var array\n     */\n    public array $faqRecords = [];\n\n    /**\n     * @var Configuration\n     */\n    private Configuration $config;\n\n    /**\n     * Language strings.\n     *\n     * @var string\n     */\n    private $translation;\n\n    /**\n     * Plural form support.\n     *\n     * @var Plurals\n     */\n    private Plurals $plurals;\n\n    /**\n     * Users.\n     *\n     * @var int\n     */\n    private int $user = -1;\n\n    /**\n     * Groups.\n     *\n     * @var int[]\n     */\n    private array $groups = [-1];\n\n    /**\n     * Flag for Group support.\n     *\n     * @var bool\n     */\n    private bool $groupSupport = false;\n\n    /**\n     * Constructor.\n     *\n     * @param Configuration $config\n     */\n    public function __construct(Configuration $config)\n    {\n        global $PMF_LANG, $plr;\n\n        $this->config = $config;\n        $this->translation = $PMF_LANG;\n        $this->plurals = $plr;\n\n        if ($this->config->get('security.permLevel') !== 'basic') {\n            $this->groupSupport = true;\n        }\n    }\n\n    /**\n     * @param int $userId\n     * @return Faq\n     */\n    public function setUser(int $userId = -1): Faq\n    {\n        $this->user = $userId;\n        return $this;\n    }\n\n    /**\n     * @param int[] $groups\n     * @return Faq\n     */\n    public function setGroups(array $groups): Faq\n    {\n        $this->groups = $groups;\n        return $this;\n    }\n\n    /**\n     * This function returns all not expired records from one category.\n     *\n     * @param int    $categoryId Entity ID\n     * @param string $orderBy    Order by\n     * @param string $sortBy     Sort by\n     *\n     * @return array<int, array<string, mixed>>\n     * @throws Exception\n     */\n    public function getAllRecordsByCategoryId(int $categoryId, string $orderBy = 'id', string $sortBy = 'ASC'): array\n    {\n        global $sids;\n\n        $faqData = [];\n\n        if ($orderBy == 'visits') {\n            $currentTable = 'fv';\n        } else {\n            $currentTable = 'fd';\n        }\n\n        $now = date('YmdHis');\n        $query = sprintf(\n            \"\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.thema AS thema,\n                fd.content AS record_content,\n                fd.updated AS updated,\n                fcr.category_id AS category_id,\n                fv.visits AS visits,\n                fd.created AS created\n            FROM\n                %sfaqdata AS fd\n            LEFT JOIN\n                %sfaqcategoryrelations AS fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                %sfaqvisits AS fv\n            ON\n                fd.id = fv.id\n            AND\n                fv.lang = fd.lang\n            LEFT JOIN\n                %sfaqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.date_start <= '%s'\n            AND\n                fd.date_end   >= '%s'\n            AND\n                fd.active = 'yes'\n            AND\n                fcr.category_id = %d\n            AND\n                fd.lang = '%s'\n                %s\n            ORDER BY\n                %s.%s %s\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $now,\n            $now,\n            $categoryId,\n            $this->config->getLanguage()->getLanguage(),\n            $this->queryPermission($this->groupSupport),\n            $currentTable,\n            $this->config->getDb()->escape($orderBy),\n            $this->config->getDb()->escape($sortBy)\n        );\n\n        $result = $this->config->getDb()->query($query);\n        $num = $this->config->getDb()->numRows($result);\n\n        if ($num > 0) {\n            $faqHelper = new FaqHelper($this->config);\n            while (($row = $this->config->getDb()->fetchObject($result))) {\n                if (empty($row->visits)) {\n                    $visits = 0;\n                } else {\n                    $visits = $row->visits;\n                }\n\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&cat=%d&id=%d&artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $oLink->text = $oLink->tooltip = $row->thema;\n\n                $faqData[] = [\n                    'record_id' => $row->id,\n                    'record_lang' => $row->lang,\n                    'category_id' => $row->category_id,\n                    'record_title' => $row->thema,\n                    'record_preview' => $faqHelper->renderAnswerPreview($row->record_content, 25),\n                    'record_link' => $oLink->toString(),\n                    'record_updated' => $row->updated,\n                    'visits' => $visits,\n                    'record_created' => $row->created,\n                ];\n            }\n        } else {\n            return $faqData;\n        }\n\n        return $faqData;\n    }\n\n    /**\n     * Returns a part of a query to check permissions.\n     *\n     * @param bool $hasGroupSupport\n     *\n     * @return string\n     */\n    protected function queryPermission(bool $hasGroupSupport = false): string\n    {\n        if ($hasGroupSupport) {\n            if (-1 === $this->user) {\n                return sprintf(\n                    'AND fdg.group_id IN (%s)',\n                    implode(', ', $this->groups)\n                );\n            } else {\n                return sprintf(\n                    'AND ( fdg.group_id IN (%s) OR (fdu.user_id = %d OR fdg.group_id IN (%s)) )',\n                    implode(', ', $this->groups),\n                    $this->user,\n                    implode(', ', $this->groups)\n                );\n            }\n        }\n\n        if (-1 !== $this->user) {\n            return sprintf(\n                'AND ( fdu.user_id = %d OR fdu.user_id = -1 )',\n                $this->user\n            );\n        } else {\n            return 'AND fdu.user_id = -1';\n        }\n    }\n\n    /**\n     * This function returns all not expired records from one category.\n     *\n     * @param int    $categoryId Entity ID\n     * @param string $orderBy    Order by\n     * @param string $sortBy     Sort by\n     *\n     * @return string\n     */\n    public function renderRecordsByCategoryId(int $categoryId, string $orderBy = 'id', string $sortBy = 'ASC'): string\n    {\n        global $sids;\n\n        $numPerPage = $this->config->get('records.numberOfRecordsPerPage');\n        $page = Filter::filterInput(INPUT_GET, 'seite', FILTER_VALIDATE_INT, 1);\n        $output = '';\n        $title = '';\n\n        if ($orderBy == 'visits') {\n            $currentTable = 'fv';\n        } else {\n            $currentTable = 'fd';\n        }\n\n        // If random FAQs are activated, we don't need an order\n        if (true === $this->config->get('records.randomSort')) {\n            $order = '';\n        } else {\n            $order = sprintf(\n                'ORDER BY fd.sticky DESC, %s.%s %s',\n                $currentTable,\n                $this->config->getDb()->escape($orderBy),\n                $this->config->getDb()->escape($sortBy)\n            );\n        }\n\n        $now = date('YmdHis');\n        $query = sprintf(\n            \"\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.sticky AS sticky,\n                fd.thema AS thema,\n                fcr.category_id AS category_id,\n                fv.visits AS visits\n            FROM\n                %sfaqdata AS fd\n            LEFT JOIN\n                %sfaqcategoryrelations AS fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                %sfaqvisits AS fv\n            ON\n                fd.id = fv.id\n            AND\n                fv.lang = fd.lang\n            LEFT JOIN\n                %sfaqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.date_start <= '%s'\n            AND\n                fd.date_end   >= '%s'\n            AND\n                fd.active = 'yes'\n            AND\n                fcr.category_id = %d\n            AND\n                fd.lang = '%s'\n            %s\n            %s\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $now,\n            $now,\n            $categoryId,\n            $this->config->getLanguage()->getLanguage(),\n            $this->queryPermission($this->groupSupport),\n            $order\n        );\n\n        $result = $this->config->getDb()->query($query);\n        $num = $this->config->getDb()->numRows($result);\n        $pages = (int)ceil($num / $numPerPage);\n\n        if ($page == 1) {\n            $first = 0;\n        } else {\n            $first = $page * $numPerPage - $numPerPage;\n        }\n\n        if ($num > 0) {\n            if ($pages > 1) {\n                $output .= sprintf(\n                    '<p><strong>%s %s %s</strong></p>',\n                    $this->translation['msgPage'] . $page,\n                    $this->translation['msgVoteFrom'],\n                    $pages . $this->translation['msgPages']\n                );\n            }\n            $output .= '<ul class=\"phpmyfaq_ul\">';\n\n            $counter = 0;\n            $displayedCounter = 0;\n            $renderedItems = [];\n            while (($row = $this->config->getDb()->fetchObject($result)) && $displayedCounter < $numPerPage) {\n                ++$counter;\n                if ($counter <= $first) {\n                    continue;\n                }\n                ++$displayedCounter;\n\n                if (empty($row->visits)) {\n                    $visits = 0;\n                } else {\n                    $visits = $row->visits;\n                }\n\n                $title = $row->thema;\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $oLink->text = $oLink->tooltip = $title;\n\n                // If random FAQs are activated, we don't need sticky FAQs\n                if (true === $this->config->get('records.randomSort')) {\n                    $row->sticky = 0;\n                }\n\n                $renderedItems[$row->id] = sprintf(\n                    '<li%s>%s<span id=\"viewsPerRecord\"><small>(%s)</small></span></li>',\n                    ($row->sticky == 1) ? ' class=\"sticky-faqs\"' : '',\n                    $oLink->toHtmlAnchor(),\n                    $this->plurals->getMsg('plmsgViews', $visits)\n                );\n            }\n\n            // If random FAQs are activated, shuffle the FAQs :-)\n            if (true === $this->config->get('records.randomSort')) {\n                shuffle($renderedItems);\n            }\n\n            $output .= implode(\"\\n\", $renderedItems);\n            $output .= '</ul>';\n        } else {\n            return false;\n        }\n\n        if ($pages > 1) {\n            // Set rewrite URL, if needed\n            if ($this->config->get('main.enableRewriteRules')) {\n                $link = new Link($this->config->getDefaultUrl(), $this->config);\n                $useRewrite = true;\n                $rewriteUrl = sprintf(\n                    '%scategory/%d/%%d/%s.html',\n                    $this->config->getDefaultUrl(),\n                    $categoryId,\n                    $link->getSEOItemTitle($title)\n                );\n            } else {\n                $useRewrite = false;\n                $rewriteUrl = '';\n            }\n            $baseUrl = sprintf(\n                '%sindex.php?%saction=show&amp;cat=%d&amp;seite=%d',\n                $this->config->getDefaultUrl(),\n                (empty($sids) ? '' : $sids),\n                $categoryId,\n                $page\n            );\n\n            $options = array(\n                'baseUrl' => $baseUrl,\n                'total' => $num,\n                'perPage' => $this->config->get('records.numberOfRecordsPerPage'),\n                'useRewrite' => $useRewrite,\n                'rewriteUrl' => $rewriteUrl,\n                'pageParamName' => 'seite',\n            );\n\n            $pagination = new Pagination($this->config, $options);\n            $output .= $pagination->render();\n        }\n\n        return $output;\n    }\n\n    /**\n     * This function returns all not expired records from the given record ids.\n     *\n     * @param array  $recordIds Array of record ids\n     * @param string $orderBy   Order by\n     * @param string $sortBy    Sort by\n     *\n     * @return string\n     */\n    public function renderRecordsByFaqIds(array $recordIds, string $orderBy = 'fd.id', string $sortBy = 'ASC'): string\n    {\n        global $sids;\n\n        $records = implode(', ', $recordIds);\n        $page = Filter::filterInput(INPUT_GET, 'seite', FILTER_VALIDATE_INT, 1);\n        $taggingId = Filter::filterInput(INPUT_GET, 'tagging_id', FILTER_VALIDATE_INT);\n        $output = '';\n\n        $now = date('YmdHis');\n        $query = sprintf(\n            \"\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.thema AS thema,\n                fcr.category_id AS category_id,\n                fv.visits AS visits\n            FROM\n                %sfaqdata AS fd\n            LEFT JOIN\n                %sfaqcategoryrelations AS fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                %sfaqvisits AS fv\n            ON\n                fd.id = fv.id\n            AND\n                fv.lang = fd.lang\n            LEFT JOIN\n                %sfaqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.date_start <= '%s'\n            AND\n                fd.date_end   >= '%s'\n            AND\n                fd.active = 'yes'\n            AND\n                fd.id IN (%s)\n            AND\n                fd.lang = '%s'\n                %s\n            ORDER BY\n                %s %s\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $now,\n            $now,\n            $records,\n            $this->config->getLanguage()->getLanguage(),\n            $this->queryPermission($this->groupSupport),\n            $this->config->getDb()->escape($orderBy),\n            $this->config->getDb()->escape($sortBy)\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        $num = $this->config->getDb()->numRows($result);\n        $pages = ceil($num / $this->config->get('records.numberOfRecordsPerPage'));\n\n        if ($page == 1) {\n            $first = 0;\n        } else {\n            $first = ($page * $this->config->get('records.numberOfRecordsPerPage')) -\n                $this->config->get('records.numberOfRecordsPerPage');\n        }\n\n        if ($num > 0) {\n            if ($pages > 1) {\n                $output .= sprintf(\n                    '<p><strong>%s %s %s</strong></p>',\n                    $this->translation['msgPage'] . $page,\n                    $this->translation['msgVoteFrom'],\n                    $pages . $this->translation['msgPages']\n                );\n            }\n            $output .= '<ul class=\"phpmyfaq_ul\">';\n            $counter = 0;\n            $displayedCounter = 0;\n\n            $lastFaqId = 0;\n            while (\n                ($row = $this->config->getDb()->fetchObject($result)) &&\n                $displayedCounter < $this->config->get('records.numberOfRecordsPerPage')\n            ) {\n                ++$counter;\n                if ($counter <= $first) {\n                    continue;\n                }\n                ++$displayedCounter;\n\n                if ($lastFaqId == $row->id) {\n                    continue; // Don't show multiple FAQs\n                }\n\n                if (empty($row->visits)) {\n                    $visits = 0;\n                } else {\n                    $visits = $row->visits;\n                }\n\n                $title = $row->thema;\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $row->thema;\n                $oLink->text = $title;\n                $oLink->tooltip = $title;\n                $listItem = sprintf(\n                    '<li>%s<br><small>(%s)</small></li>',\n                    $oLink->toHtmlAnchor(),\n                    $this->plurals->GetMsg('plmsgViews', $visits)\n                );\n\n                $output .= $listItem;\n\n                $lastFaqId = $row->id;\n            }\n            $output .= '</ul><span id=\"totFaqRecords\" style=\"display: none;\">' . $num . '</span>';\n        } else {\n            return false;\n        }\n\n        if ($num > $this->config->get('records.numberOfRecordsPerPage')) {\n            $output .= '<p class=\"text-center\"><strong>';\n            if (!isset($page)) {\n                $page = 1;\n            }\n            $vor = $page - 1;\n            $next = $page + 1;\n            if ($vor != 0) {\n                $url = $sids . '&amp;action=search&amp;tagging_id=' . $taggingId . '&amp;seite=' . $vor;\n                $oLink = new Link($this->config->getDefaultUrl() . '?' . $url, $this->config);\n                $oLink->itemTitle = 'tag';\n                $oLink->text = $this->translation['msgPrevious'];\n                $oLink->tooltip = $this->translation['msgPrevious'];\n                $output .= '[ ' . $oLink->toHtmlAnchor() . ' ]';\n            }\n            $output .= ' ';\n            if ($next <= $pages) {\n                $url = $sids . '&amp;action=search&amp;tagging_id=' . $taggingId . '&amp;seite=' . $next;\n                $oLink = new Link($this->config->getDefaultUrl() . '?' . $url, $this->config);\n                $oLink->itemTitle = 'tag';\n                $oLink->text = $this->translation['msgNext'];\n                $oLink->tooltip = $this->translation['msgNext'];\n                $output .= '[ ' . $oLink->toHtmlAnchor() . ' ]';\n            }\n            $output .= '</strong></p>';\n        }\n\n        return $output;\n    }\n\n    /**\n     * Returns an array with all data from a FAQ record.\n     *\n     * @param int      $faqId FAQ ID\n     * @param int|null $faqRevisionId Revision ID\n     * @param bool     $isAdmin Must be true if it is called by an admin/author context\n     */\n    public function getRecord(int $faqId, int $faqRevisionId = null, bool $isAdmin = false)\n    {\n        global $PMF_LANG;\n\n        $currentLanguage = $this->config->getLanguage()->getLanguage();\n        $defaultLanguage = $this->config->getDefaultLanguage();\n\n        $result = $this->getRecordResult($faqId, $currentLanguage, $faqRevisionId, $isAdmin);\n\n        if (0 === $this->config->getDb()->numRows($result)) {\n            $result = $this->getRecordResult($faqId, $defaultLanguage, $faqRevisionId, $isAdmin);\n        }\n\n        if ($row = $this->config->getDb()->fetchObject($result)) {\n            $question = nl2br($row->thema);\n            $answer = $row->content;\n            $active = ('yes' === $row->active);\n            $expired = (date('YmdHis') > $row->date_end);\n\n            if (!$isAdmin) {\n                if (!$active) {\n                    $answer = $this->translation['err_inactiveArticle'];\n                }\n                if ($expired) {\n                    $answer = $this->translation['err_expiredArticle'];\n                }\n            }\n\n            $this->faqRecord = [\n                'id' => $row->id,\n                'lang' => $row->lang,\n                'solution_id' => $row->solution_id,\n                'revision_id' => $row->revision_id,\n                'active' => $row->active,\n                'sticky' => $row->sticky,\n                'keywords' => $row->keywords,\n                'title' => $question,\n                'content' => $answer,\n                'author' => $row->author,\n                'email' => $row->email,\n                'comment' => $row->comment,\n                'date' => Date::createIsoDate($row->updated),\n                'dateStart' => $row->date_start,\n                'dateEnd' => $row->date_end,\n                'linkState' => $row->links_state,\n                'linkCheckDate' => $row->links_check_date,\n                'notes' => $row->notes,\n                'created' => $row->created,\n            ];\n        } else {\n            $this->faqRecord = [\n                'id' => $faqId,\n                'lang' => $currentLanguage,\n                'solution_id' => 42,\n                'revision_id' => $faqRevisionId,\n                'active' => 'no',\n                'sticky' => 0,\n                'keywords' => '',\n                'title' => '',\n                'content' => $PMF_LANG['msgAccessDenied'],\n                'author' => '',\n                'email' => '',\n                'comment' => '',\n                'date' => Date::createIsoDate(date('YmdHis')),\n                'dateStart' => '',\n                'dateEnd' => '',\n                'linkState' => '',\n                'linkCheckDate' => '',\n                'notes' => '',\n                'created' => date('c'),\n            ];\n        }\n    }\n\n    /**\n     * Executes a query to retrieve a single FAQ.\n     *\n     * @param int    $faqId\n     * @param string $faqLanguage\n     * @param null   $faqRevisionId\n     * @param bool   $isAdmin\n     * @return mixed\n     */\n    public function getRecordResult($faqId, $faqLanguage, $faqRevisionId = null, $isAdmin = false)\n    {\n        $query = sprintf(\n            \"SELECT\n                 id, lang, solution_id, revision_id, active, sticky, keywords,\n                 thema, content, author, email, comment, updated, links_state,\n                 links_check_date, date_start, date_end, created, notes\n            FROM\n                %s%s fd\n            LEFT JOIN\n                %sfaqdata_group fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.id = %d\n            %s\n            AND\n                fd.lang = '%s'\n                %s\",\n            Database::getTablePrefix(),\n            isset($faqRevisionId) ? 'faqdata_revisions' : 'faqdata',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $faqId,\n            isset($faqRevisionId) ? 'AND revision_id = ' . $faqRevisionId : '',\n            $faqLanguage,\n            ($isAdmin) ? 'AND 1=1' : $this->queryPermission($this->groupSupport)\n        );\n\n        return $this->config->getDb()->query($query);\n    }\n\n    /**\n     * Return records from given IDs\n     *\n     * @param  array $faqIds\n     * @return array\n     * @throws Exception\n     */\n    public function getRecordsByIds(array $faqIds): array\n    {\n        $faqRecords = [];\n\n        $query = sprintf(\n            \"SELECT\n                 fd.id AS id,\n                 fd.lang AS lang,\n                 fd.thema AS question,\n                 fd.content AS answer,\n                 fd.updated AS updated,\n                 fd.created AS created,\n                 fcr.category_id AS category_id,\n                 fv.visits AS visits\n            FROM\n                %sfaqdata fd\n            LEFT JOIN\n                %sfaqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                %sfaqdata_group fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqvisits AS fv\n            ON\n                fd.id = fv.id\n            AND\n                fv.lang = fd.lang\n            LEFT JOIN\n                %sfaqdata_user fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.id IN (%s)\n            AND\n                fd.lang = '%s'\n                %s\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            implode(',', $faqIds),\n            $this->config->getLanguage()->getLanguage(),\n            $this->queryPermission($this->groupSupport)\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        $faqHelper = new FaqHelper($this->config);\n        while ($row = $this->config->getDb()->fetchObject($result)) {\n            if (empty($row->visits)) {\n                $visits = 0;\n            } else {\n                $visits = $row->visits;\n            }\n\n            $url = sprintf(\n                '%sindex.php?action=faq&cat=%d&id=%d&artlang=%s',\n                $this->config->getDefaultUrl(),\n                $row->category_id,\n                $row->id,\n                $row->lang\n            );\n            $oLink = new Link($url, $this->config);\n            $oLink->itemTitle = $oLink->text = $oLink->tooltip = $row->question;\n\n            $faqRecords[] = [\n                'record_id' => (int)$row->id,\n                'record_lang' => $row->lang,\n                'category_id' => (int)$row->category_id,\n                'record_title' => $row->question,\n                'record_preview' => $faqHelper->renderAnswerPreview($row->answer, 25),\n                'record_link' => $oLink->toString(),\n                'record_updated' => Date::createIsoDate($row->updated) . ':00',\n                'visits' => (int)$visits,\n                'record_created' => $row->created\n            ];\n        }\n\n        return $faqRecords;\n    }\n\n    /**\n     * Adds a new record.\n     *\n     * @param array $data      Array of FAQ data\n     * @param bool  $newRecord Do not create a new ID if false\n     * @deprecated will be removed in v3.2\n     *\n     * @return int\n     */\n    public function addRecord(array $data, bool $newRecord = true): int\n    {\n        if ($newRecord) {\n            $recordId = $this->config->getDb()->nextId(Database::getTablePrefix() . 'faqdata', 'id');\n        } else {\n            $recordId = $data['id'];\n        }\n\n        // Add new entry\n        $query = sprintf(\n            \"INSERT INTO %sfaqdata VALUES\n            (%d, '%s', %d, %d, '%s', %d, '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', %d, '%s', '%s', '%s', '%s')\",\n            Database::getTablePrefix(),\n            $recordId,\n            $this->config->getDb()->escape($data['lang']),\n            $this->getNextSolutionId(),\n            0,\n            $data['active'],\n            $data['sticky'],\n            $this->config->getDb()->escape($data['keywords']),\n            $this->config->getDb()->escape($data['thema']),\n            $this->config->getDb()->escape($data['content']),\n            $this->config->getDb()->escape($data['author']),\n            $data['email'],\n            $data['comment'],\n            $data['date'],\n            $data['linkState'],\n            $data['linkDateCheck'],\n            $data['dateStart'],\n            $data['dateEnd'],\n            date('Y-m-d H:i:s'),\n            $data['notes']\n        );\n\n        $this->config->getDb()->query($query);\n\n        return $recordId;\n    }\n\n    /**\n     * Creates a new FAQ.\n     *\n     * @param FaqEntity $faq\n     * @return int\n     */\n    public function create(FaqEntity $faq): int\n    {\n        if (is_null($faq->getId())) {\n            $faq->setId($this->config->getDb()->nextId(Database::getTablePrefix() . 'faqdata', 'id'));\n        }\n\n        $query = sprintf(\n            \"INSERT INTO %sfaqdata VALUES\n            (%d, '%s', %d, %d, '%s', %d, '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', %d, '%s', '%s', '%s', '%s')\",\n            Database::getTablePrefix(),\n            $faq->getId(),\n            $this->config->getDb()->escape($faq->getLanguage()),\n            $this->getNextSolutionId(),\n            0,\n            $faq->isActive() ? 'yes' : 'no',\n            $faq->isSticky() ? 1 : 0,\n            $this->config->getDb()->escape($faq->getKeywords()),\n            $this->config->getDb()->escape($faq->getQuestion()),\n            $this->config->getDb()->escape($faq->getAnswer()),\n            $this->config->getDb()->escape($faq->getAuthor()),\n            $faq->getEmail(),\n            $faq->isComment() ? 'y' : 'n',\n            $faq->getUpdatedDate()->format('YmdHis'),\n            $faq->getLinkState(),\n            $faq->getLinksCheckedDate()->format(DATE_ISO8601),\n            '00000000000000',\n            '99991231235959',\n            date('Y-m-d H:i:s'),\n            $faq->getNotes()\n        );\n\n        $this->config->getDb()->query($query);\n\n        return $faq->getId();\n    }\n\n    /**\n     * Gets the latest solution id for a FAQ record.\n     *\n     * @return int\n     */\n    public function getNextSolutionId(): int\n    {\n        $latestId = 0;\n\n        $query = sprintf('SELECT MAX(solution_id) AS solution_id FROM %sfaqdata', Database::getTablePrefix());\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($result && $row = $this->config->getDb()->fetchObject($result)) {\n            $latestId = $row->solution_id;\n        }\n\n        if ($latestId < PMF_SOLUTION_ID_START_VALUE) {\n            $nextSolutionId = PMF_SOLUTION_ID_START_VALUE;\n        } else {\n            $nextSolutionId = $latestId + PMF_SOLUTION_ID_INCREMENT_VALUE;\n        }\n\n        return $nextSolutionId;\n    }\n\n    /**\n     * Updates a record.\n     *\n     * @param array $data Array of FAQ data\n     *\n     * @return bool\n     */\n    public function updateRecord(array $data)\n    {\n        // Update entry\n        $query = sprintf(\n            \"\n            UPDATE\n                %sfaqdata\n            SET\n                revision_id = %d,\n                active = '%s',\n                sticky = %d,\n                keywords = '%s',\n                thema = '%s',\n                content = '%s',\n                author = '%s',\n                email = '%s',\n                comment = '%s',\n                updated = '%s',\n                links_state = '%s',\n                links_check_date = %d,\n                date_start = '%s',\n                date_end = '%s',\n                notes = '%s'\n            WHERE\n                id = %d\n            AND\n                lang = '%s'\",\n            Database::getTablePrefix(),\n            $data['revision_id'],\n            $data['active'],\n            $data['sticky'],\n            $this->config->getDb()->escape($data['keywords']),\n            $this->config->getDb()->escape($data['thema']),\n            $this->config->getDb()->escape($data['content']),\n            $this->config->getDb()->escape($data['author']),\n            $data['email'],\n            $data['comment'],\n            $data['date'],\n            $data['linkState'],\n            $data['linkDateCheck'],\n            $data['dateStart'],\n            $data['dateEnd'],\n            $data['notes'],\n            $data['id'],\n            $data['lang']\n        );\n\n        $this->config->getDb()->query($query);\n\n        return true;\n    }\n\n    /**\n     * Deletes a record and all the dependencies.\n     *\n     * @param int    $recordId   Record id\n     * @param string $recordLang Record language\n     * @return bool\n     * @throws Attachment\\AttachmentException\n     * @throws Attachment\\Filesystem\\File\\FileException\n     */\n    public function deleteRecord(int $recordId, string $recordLang): bool\n    {\n        $solutionId = $this->getSolutionIdFromId($recordId, $recordLang);\n\n        $queries = array(\n            sprintf(\n                \"DELETE FROM %sfaqchanges WHERE beitrag = %d AND lang = '%s'\",\n                Database::getTablePrefix(),\n                $recordId,\n                $this->config->getDb()->escape($recordLang)\n            ),\n            sprintf(\n                \"DELETE FROM %sfaqcategoryrelations WHERE record_id = %d AND record_lang = '%s'\",\n                Database::getTablePrefix(),\n                $recordId,\n                $this->config->getDb()->escape($recordLang)\n            ),\n            sprintf(\n                \"DELETE FROM %sfaqdata WHERE id = %d AND lang = '%s'\",\n                Database::getTablePrefix(),\n                $recordId,\n                $this->config->getDb()->escape($recordLang)\n            ),\n            sprintf(\n                \"DELETE FROM %sfaqdata_revisions WHERE id = %d AND lang = '%s'\",\n                Database::getTablePrefix(),\n                $recordId,\n                $this->config->getDb()->escape($recordLang)\n            ),\n            sprintf(\n                \"DELETE FROM %sfaqvisits WHERE id = %d AND lang = '%s'\",\n                Database::getTablePrefix(),\n                $recordId,\n                $this->config->getDb()->escape($recordLang)\n            ),\n            sprintf(\n                'DELETE FROM %sfaqdata_user WHERE record_id = %d',\n                Database::getTablePrefix(),\n                $recordId\n            ),\n            sprintf(\n                'DELETE FROM %sfaqdata_group WHERE record_id = %d',\n                Database::getTablePrefix(),\n                $recordId\n            ),\n            sprintf(\n                'DELETE FROM %sfaqdata_tags WHERE record_id = %d',\n                Database::getTablePrefix(),\n                $recordId\n            ),\n            sprintf(\n                'DELETE FROM %sfaqdata_tags WHERE %sfaqdata_tags.record_id NOT IN (SELECT %sfaqdata.id FROM %sfaqdata)',\n                Database::getTablePrefix(),\n                Database::getTablePrefix(),\n                Database::getTablePrefix(),\n                Database::getTablePrefix()\n            ),\n            sprintf(\n                'DELETE FROM %sfaqcomments WHERE id = %d',\n                Database::getTablePrefix(),\n                $recordId\n            ),\n            sprintf(\n                'DELETE FROM %sfaqvoting WHERE artikel = %d',\n                Database::getTablePrefix(),\n                $recordId\n            ),\n        );\n\n        foreach ($queries as $query) {\n            $this->config->getDb()->query($query);\n        }\n\n        // Delete possible attachments\n        $attachments = AttachmentFactory::fetchByRecordId($this->config, $recordId);\n        foreach ($attachments as $attachment) {\n            $currentAttachment = AttachmentFactory::create($attachment->getId());\n            $currentAttachment->delete();\n        }\n\n        // Delete possible Elasticsearch documents\n        if ($this->config->get('search.enableElasticsearch')) {\n            $esInstance = new Elasticsearch($this->config);\n            $esInstance->delete($solutionId);\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns the solution ID from a given ID and language\n     *\n     * @param int    $faqId\n     * @param string $faqLang\n     *\n     * @return int\n     */\n    public function getSolutionIdFromId(int $faqId, string $faqLang): int\n    {\n        $query = sprintf(\n            \"\n            SELECT\n                solution_id\n            FROM\n                %sfaqdata\n            WHERE\n                id = %d\n                AND\n                lang = '%s'\",\n            Database::getTablePrefix(),\n            $faqId,\n            $this->config->getDb()->escape($faqLang)\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($row = $this->config->getDb()->fetchObject($result)) {\n            return $row->solution_id;\n        }\n\n        return $this->getNextSolutionId();\n    }\n\n    /**\n     * Checks if a record is already translated.\n     *\n     * @param int    $recordId   Record id\n     * @param string $recordLang Record language\n     * @return bool\n     */\n    public function hasTranslation(int $recordId, string $recordLang): bool\n    {\n        $query = sprintf(\n            \"\n            SELECT\n                id, lang\n            FROM\n                %sfaqdata\n            WHERE\n                id = %d\n            AND\n                lang = '%s'\",\n            Database::getTablePrefix(),\n            $recordId,\n            $this->config->getDb()->escape($recordLang)\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($this->config->getDb()->numRows($result)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Checks, if comments are disabled for the FAQ record.\n     *\n     * @param int    $recordId    Id of FAQ or news entry\n     * @param string $recordLang  Language\n     * @param string $commentType Type of comment: faq or news\n     * @return bool true, if comments are disabled\n     */\n    public function commentDisabled(int $recordId, string $recordLang, string $commentType = 'faq'): bool\n    {\n        if ('news' == $commentType) {\n            $table = 'faqnews';\n        } else {\n            $table = 'faqdata';\n        }\n\n        $query = sprintf(\n            \"\n            SELECT\n                comment\n            FROM\n                %s%s\n            WHERE\n                id = %d\n            AND\n                lang = '%s'\",\n            Database::getTablePrefix(),\n            $table,\n            $recordId,\n            $this->config->getDb()->escape($recordLang)\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($row = $this->config->getDb()->fetchObject($result)) {\n            return !(($row->comment === 'y'));\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * Returns an array with all data from a FAQ record.\n     *\n     * @param int $solutionId Solution ID\n     */\n    public function getRecordBySolutionId(int $solutionId): void\n    {\n        $query = sprintf(\n            'SELECT\n                *\n            FROM\n                %sfaqdata fd\n            LEFT JOIN\n                %sfaqdata_group fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.solution_id = %d\n                %s',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $solutionId,\n            $this->queryPermission($this->groupSupport)\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($row = $this->config->getDb()->fetchObject($result)) {\n            $question = nl2br($row->thema);\n            $content = $row->content;\n            $active = ('yes' == $row->active);\n            $expired = (date('YmdHis') > $row->date_end);\n\n            if (!$active) {\n                $content = $this->translation['err_inactiveArticle'];\n            }\n            if ($expired) {\n                $content = $this->translation['err_expiredArticle'];\n            }\n\n            $this->faqRecord = array(\n                'id' => $row->id,\n                'lang' => $row->lang,\n                'solution_id' => $row->solution_id,\n                'revision_id' => $row->revision_id,\n                'active' => $row->active,\n                'sticky' => $row->sticky,\n                'keywords' => $row->keywords,\n                'title' => $question,\n                'content' => $content,\n                'author' => $row->author,\n                'email' => $row->email,\n                'comment' => $row->comment,\n                'date' => Date::createIsoDate($row->updated),\n                'dateStart' => $row->date_start,\n                'dateEnd' => $row->date_end,\n                'linkState' => $row->links_state,\n                'linkCheckDate' => $row->links_check_date,\n                'notes' => $row->notes\n            );\n        }\n    }\n\n    /**\n     * Gets the record ID from a given solution ID.\n     *\n     * @param int $solutionId Solution ID\n     *\n     * @return array\n     */\n    public function getIdFromSolutionId($solutionId)\n    {\n        $query = sprintf(\n            '\n            SELECT\n                fd.id,\n                fd.lang,\n                fd.thema AS question,\n                fd.content,\n                fcr.category_id AS category_id\n            FROM\n                %sfaqdata fd\n            LEFT JOIN\n                %sfaqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            WHERE\n                fd.solution_id = %d',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $solutionId\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($row = $this->config->getDb()->fetchObject($result)) {\n            return [\n                'id' => $row->id,\n                'lang' => $row->lang,\n                'question' => $row->question,\n                'content' => $row->content,\n                'category_id' => $row->category_id\n            ];\n        }\n\n        return [];\n    }\n\n    /**\n     * Returns an array with all data from all FAQ records.\n     *\n     * @param int    $sortType  Sorting type\n     * @param array  $condition Condition\n     * @param string $sortOrder Sorting order\n     */\n    public function getAllRecords($sortType = FAQ_SORTING_TYPE_CATID_FAQID, array $condition = null, $sortOrder = 'ASC')\n    {\n        $where = '';\n        if (!is_null($condition)) {\n            $num = count($condition);\n            $where = 'WHERE ';\n            foreach ($condition as $field => $data) {\n                --$num;\n                $where .= $field;\n                if (is_array($data)) {\n                    $where .= ' IN (';\n                    $separator = '';\n                    foreach ($data as $value) {\n                        $where .= $separator . \"'\" . $this->config->getDb()->escape($value) . \"'\";\n                        $separator = ', ';\n                    }\n                    $where .= ')';\n                } else {\n                    $where .= \" = '\" . $this->config->getDb()->escape($data) . \"'\";\n                }\n                if ($num > 0) {\n                    $where .= ' AND ';\n                }\n            }\n        }\n\n        switch ($sortType) {\n            case FAQ_SORTING_TYPE_CATID_FAQID:\n                $orderBy = sprintf(\n                    '\n            ORDER BY\n                fcr.category_id,\n                fd.id %s',\n                    $sortOrder\n                );\n                break;\n\n            case FAQ_SORTING_TYPE_FAQID:\n                $orderBy = sprintf(\n                    '\n            ORDER BY\n                fd.id %s',\n                    $sortOrder\n                );\n                break;\n\n            case FAQ_SORTING_TYPE_FAQTITLE_FAQID:\n                $orderBy = sprintf(\n                    '\n            ORDER BY\n                fcr.category_id,\n                fd.thema %s',\n                    $sortOrder\n                );\n                break;\n\n            case FAQ_SORTING_TYPE_DATE_FAQID:\n                $orderBy = sprintf(\n                    '\n            ORDER BY\n                fcr.category_id,\n                fd.updated %s',\n                    $sortOrder\n                );\n                break;\n\n            default:\n                $orderBy = '';\n                break;\n        }\n\n        // prevents multiple display of FAQ in case it is tagged under multiple groups.\n        $groupBy = ' group by fd.id, fcr.category_id,fd.solution_id,fd.revision_id,fd.active,fd.sticky,fd.keywords,' .\n            'fd.thema,fd.content,fd.author,fd.email,fd.comment,fd.updated,fd.links_state,fd.links_check_date,' .\n            'fd.date_start,fd.date_end,fd.sticky,fd.created,fd.notes,fd.lang ';\n        $query = sprintf(\n            '\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fcr.category_id AS category_id,\n                fd.solution_id AS solution_id,\n                fd.revision_id AS revision_id,\n                fd.active AS active,\n                fd.sticky AS sticky,\n                fd.keywords AS keywords,\n                fd.thema AS thema,\n                fd.content AS content,\n                fd.author AS author,\n                fd.email AS email,\n                fd.comment AS comment,\n                fd.updated AS updated,\n                fd.links_state AS links_state,\n                fd.links_check_date AS links_check_date,\n                fd.date_start AS date_start,\n                fd.date_end AS date_end,\n                fd.sticky AS sticky,\n                fd.created AS created,\n                fd.notes AS notes\n            FROM\n                %sfaqdata fd\n            LEFT JOIN\n                %sfaqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                %sfaqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            %s\n            %s\n            %s\n            %s',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $where,\n            $this->queryPermission($this->groupSupport),\n            $groupBy,\n            $orderBy\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        while ($row = $this->config->getDb()->fetchObject($result)) {\n            $content = $row->content;\n            $active = ('yes' == $row->active);\n            $expired = (date('YmdHis') > $row->date_end);\n\n            if (!$active) {\n                $content = $this->translation['err_inactiveArticle'];\n            }\n            if ($expired) {\n                $content = $this->translation['err_expiredArticle'];\n            }\n\n            $this->faqRecords[] = [\n                'id' => $row->id,\n                'category_id' => $row->category_id,\n                'lang' => $row->lang,\n                'solution_id' => $row->solution_id,\n                'revision_id' => $row->revision_id,\n                'active' => $row->active,\n                'sticky' => $row->sticky,\n                'keywords' => $row->keywords,\n                'title' => $row->thema,\n                'content' => $content,\n                'author' => $row->author,\n                'email' => $row->email,\n                'comment' => $row->comment,\n                'updated' => Date::createIsoDate($row->updated, 'Y-m-d H:i:s'),\n                'dateStart' => $row->date_start,\n                'dateEnd' => $row->date_end,\n                'created' => $row->created,\n                'notes' => $row->notes\n            ];\n        }\n    }\n\n    /**\n     * Returns the FAQ record title from the ID and language.\n     *\n     * @param int $id Record id\n     * @return string\n     */\n    public function getRecordTitle(int $id): string\n    {\n        if (isset($this->faqRecord['id']) && ($this->faqRecord['id'] == $id)) {\n            return $this->faqRecord['title'];\n        }\n\n        $question = '';\n\n        $query = sprintf(\n            \"SELECT\n                thema AS question\n            FROM\n                %sfaqdata\n            WHERE\n                id = %d AND lang = '%s'\",\n            Database::getTablePrefix(),\n            $id,\n            $this->config->getLanguage()->getLanguage()\n        );\n        $result = $this->config->getDb()->query($query);\n\n        if ($this->config->getDb()->numRows($result) > 0) {\n            while ($row = $this->config->getDb()->fetchObject($result)) {\n                $question = Strings::htmlspecialchars($row->question);\n            }\n        } else {\n            $question = $this->translation['no_cats'];\n        }\n\n        return $question;\n    }\n\n    /**\n     * Returns the keywords of a FAQ record from the ID and language.\n     *\n     * @param int $id record id\n     * @return string\n     */\n    public function getRecordKeywords(int $id): string\n    {\n        if (isset($this->faqRecord['id']) && ($this->faqRecord['id'] == $id)) {\n            return $this->faqRecord['keywords'];\n        }\n\n        $query = sprintf(\n            \"SELECT\n                keywords\n            FROM\n                %sfaqdata\n            WHERE id = %d AND lang = '%s'\",\n            Database::getTablePrefix(),\n            $id,\n            $this->config->getLanguage()->getLanguage()\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($this->config->getDb()->numRows($result) > 0) {\n            $row = $this->config->getDb()->fetchObject($result);\n\n            return Strings::htmlspecialchars($row->keywords, ENT_QUOTES, 'utf-8');\n        } else {\n            return '';\n        }\n    }\n\n    /**\n     * Returns a answer preview of the FAQ record.\n     *\n     * @param int $recordId  FAQ record ID\n     * @param int $wordCount Number of words, default: 12\n     * @return string\n     */\n    public function getRecordPreview(int $recordId, int $wordCount = 12): string\n    {\n        if (isset($this->faqRecord['id']) && ((int)$this->faqRecord['id'] === (int)$recordId)) {\n            $answerPreview = $this->faqRecord['content'];\n\n            return Utils::makeShorterText($answerPreview, $wordCount);\n        }\n\n        $query = sprintf(\n            \"\n            SELECT\n                content as answer\n            FROM\n                %sfaqdata\n            WHERE \n                id = %d \n            AND \n                lang = '%s'\",\n            Database::getTablePrefix(),\n            $recordId,\n            $this->config->getLanguage()->getLanguage()\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($this->config->getDb()->numRows($result) > 0) {\n            $row = $this->config->getDb()->fetchObject($result);\n            $answerPreview = strip_tags($row->answer);\n        } else {\n            $answerPreview = $this->config->get('main.metaDescription');\n        }\n\n        return Utils::makeShorterText($answerPreview, $wordCount);\n    }\n\n    /**\n     * Returns the number of activated and not expired records, optionally\n     * not limited to the current language.\n     *\n     * @param string|null $language Language\n     * @return int\n     */\n    public function getNumberOfRecords(string $language = null): int\n    {\n        $now = date('YmdHis');\n\n        $query = sprintf(\n            \"\n            SELECT\n                id\n            FROM\n                %sfaqdata\n            WHERE\n                active = 'yes'\n            %s\n            AND\n                date_start <= '%s'\n            AND\n                date_end >= '%s'\",\n            Database::getTablePrefix(),\n            null === $language ? '' : \"AND lang = '\" . $this->config->getDb()->escape($language) . \"'\",\n            $now,\n            $now\n        );\n\n        $num = $this->config->getDb()->numRows($this->config->getDb()->query($query));\n\n        if ($num > 0) {\n            return $num;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * This function generates a list with the most voted or most visited records.\n     *\n     * @param string $type Type definition visits/voted\n     * @return array\n     */\n    public function getTopTen(string $type = 'visits'): array\n    {\n        if ('visits' === $type) {\n            $result = $this->getTopTenData(PMF_NUMBER_RECORDS_TOPTEN, 0, $this->config->getLanguage()->getLanguage());\n        } else {\n            $result = $this->getTopVotedData(PMF_NUMBER_RECORDS_TOPTEN, $this->config->getLanguage()->getLanguage());\n        }\n        $output = [];\n\n        if (count($result) > 0) {\n            foreach ($result as $row) {\n                if ('visits' == $type) {\n                    $output['title'][] = Utils::makeShorterText($row['question'], 8);\n                    $output['preview'][] = $row['question'];\n                    $output['url'][] = Strings::htmlentities($row['url']);\n                    $output['visits'][] = $this->plurals->GetMsg('plmsgViews', $row['visits']);\n                } else {\n                    $output['title'][] = Utils::makeShorterText($row['question'], 8);\n                    $output['preview'][] = $row['question'];\n                    $output['url'][] = Strings::htmlentities($row['url']);\n                    $output['voted'][] = sprintf(\n                        '%s %s 5 - %s',\n                        round($row['avg'], 2),\n                        $this->translation['msgVoteFrom'],\n                        $this->plurals->GetMsg('plmsgVotes', $row['user'])\n                    );\n                }\n            }\n        } else {\n            $output['error'] = $this->translation['err_noTopTen'];\n        }\n\n        return $output;\n    }\n\n    /**\n     * This function generates the Top Ten data with the most viewed records.\n     *\n     * @param int  $count Number of records\n     * @param int  $categoryId Entity ID\n     * @param string|null $language Language\n     * @return array\n     */\n    public function getTopTenData(\n        int $count = PMF_NUMBER_RECORDS_TOPTEN,\n        int $categoryId = 0,\n        string $language = null\n    ): array {\n        global $sids;\n\n        $now = date('YmdHis');\n        $query =\n            'SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.thema AS question,\n                fd.content AS answer,\n                fd.updated AS updated,\n                fcr.category_id AS category_id,\n                fv.visits AS visits,\n                fv.last_visit AS last_visit,\n                fdg.group_id AS group_id,\n                fdu.user_id AS user_id\n            FROM\n                ' . Database::getTablePrefix() . 'faqvisits fv,\n                ' . Database::getTablePrefix() . 'faqdata fd\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                    fd.date_start <= \\'' . $now . '\\'\n                AND fd.date_end   >= \\'' . $now . '\\'\n                AND fd.id = fv.id\n                AND fd.lang = fv.lang\n                AND fd.active = \\'yes\\'';\n\n        if (isset($categoryId) && is_numeric($categoryId) && ($categoryId != 0)) {\n            $query .= '\n            AND\n                fcr.category_id = \\'' . $categoryId . '\\'';\n        }\n        if (isset($language) && Language::isASupportedLanguage($language)) {\n            $query .= '\n            AND\n                fd.lang = \\'' . $this->config->getDb()->escape($language) . '\\'';\n        }\n        $query .= '\n                ' . $this->queryPermission($this->groupSupport) . '\n\n            GROUP BY\n                fd.id,fd.lang,fcr.category_id,fv.visits,fv.last_visit,fdg.group_id,fdu.user_id\n            ORDER BY\n                fv.visits DESC';\n\n        $result = $this->config->getDb()->query($query);\n        $topTen = [];\n        $data = [];\n\n        if ($result) {\n            while ($row = $this->config->getDb()->fetchObject($result)) {\n                if ($this->groupSupport) {\n                    if (!in_array($row->user_id, array(-1, $this->user)) || !in_array($row->group_id, $this->groups)) {\n                        continue;\n                    }\n                } else {\n                    if (!in_array($row->user_id, array(-1, $this->user))) {\n                        continue;\n                    }\n                }\n\n                $data['visits'] = (int)$row->visits;\n                $data['question'] = Filter::filterVar($row->question, FILTER_UNSAFE_RAW);\n                $data['answer'] = $row->answer;\n                $data['date'] = Date::createIsoDate($row->updated, DATE_ISO8601, true);\n                $data['last_visit'] = date('c', $row->last_visit);\n\n                $title = $row->question;\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $row->question;\n                $oLink->tooltip = $title;\n                $data['url'] = $oLink->toString();\n\n                $topTen[$row->id] = $data;\n\n                if (count($topTen) === $count) {\n                    break;\n                }\n            }\n\n            array_multisort($topTen, SORT_DESC);\n        }\n\n        return $topTen;\n    }\n\n    /**\n     * This function generates a data-set with the most voted FAQs.\n     *\n     * @param int    $count    Number of records\n     * @param string|null $language Language\n     * @return array\n     */\n    public function getTopVotedData(int $count = PMF_NUMBER_RECORDS_TOPTEN, string $language = null): array\n    {\n        global $sids;\n\n        $topten = $data = [];\n\n        $now = date('YmdHis');\n        $query =\n            '            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.thema AS thema,\n                fd.updated AS updated,\n                fcr.category_id AS category_id,\n                (fv.vote/fv.usr) AS avg,\n                fv.usr AS user\n            FROM\n                ' . Database::getTablePrefix() . 'faqvoting fv,\n                ' . Database::getTablePrefix() . 'faqdata fd\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                    fd.date_start <= \\'' . $now . '\\'\n                AND fd.date_end   >= \\'' . $now . '\\'\n                AND fd.id = fv.artikel\n                AND fd.active = \\'yes\\'';\n\n        if (isset($categoryId) && is_numeric($categoryId) && ($categoryId != 0)) {\n            $query .= '\n            AND\n                fcr.category_id = \\'' . $categoryId . '\\'';\n        }\n        if (isset($language) && Language::isASupportedLanguage($language)) {\n            $query .= '\n            AND\n                fd.lang = \\'' . $this->config->getDb()->escape($language) . '\\'';\n        }\n        $query .= '\n                ' . $this->queryPermission($this->groupSupport) . '\n            ORDER BY\n                avg DESC';\n\n        $result = $this->config->getDb()->query($query);\n\n        $i = 1;\n        $oldId = 0;\n        while (($row = $this->config->getDb()->fetchObject($result)) && $i <= $count) {\n            if ($oldId != $row->id) {\n                $data['avg'] = $row->avg;\n                $data['question'] = $row->thema;\n                $data['date'] = $row->updated;\n                $data['user'] = $row->user;\n\n                $title = $row->thema;\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $row->thema;\n                $oLink->tooltip = $title;\n                $data['url'] = $oLink->toString();\n\n                $topten[] = $data;\n                ++$i;\n            }\n            $oldId = $row->id;\n        }\n\n        return $topten;\n    }\n\n    /**\n     * This function generates the list with the latest published records.\n     *\n     * @return array\n     * @throws Exception\n     */\n    public function getLatest(): array\n    {\n        $date = new Date($this->config);\n        $result = $this->getLatestData(PMF_NUMBER_RECORDS_LATEST, $this->config->getLanguage()->getLanguage());\n        $output = [];\n\n        if (count($result) > 0) {\n            foreach ($result as $row) {\n                $output['url'][] = Strings::htmlentities($row['url']);\n                $output['title'][] = Strings::htmlentities(Utils::makeShorterText($row['question'], 8));\n                $output['preview'][] = Strings::htmlentities($row['question']);\n                $output['date'][] = $date->format($row['date']);\n            }\n        } else {\n            $output['error'] = $this->translation['err_noArticles'];\n        }\n\n        return $output;\n    }\n\n    /**\n     * This function generates an array with a specified number of most recent\n     * published records.\n     *\n     * @param int    $count    Number of records\n     * @param string|null $language Language\n     * @return array\n     */\n    public function getLatestData(int $count = PMF_NUMBER_RECORDS_LATEST, string $language = null): array\n    {\n        global $sids;\n\n        $now = date('YmdHis');\n        $query =\n            '            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fcr.category_id AS category_id,\n                fd.thema AS question,\n                fd.content AS content,\n                fd.updated AS updated,\n                fv.visits AS visits,\n                fdg.group_id AS group_id,\n                fdu.user_id AS user_id\n            FROM\n                ' . Database::getTablePrefix() . 'faqvisits fv,\n                ' . Database::getTablePrefix() . 'faqdata fd\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                ' . Database::getTablePrefix() . 'faqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                    fd.date_start <= \\'' . $now . '\\'\n                AND fd.date_end   >= \\'' . $now . '\\'\n                AND fd.id = fv.id\n                AND fd.lang = fv.lang\n                AND fd.active = \\'yes\\'';\n\n        if (isset($language) && Language::isASupportedLanguage($language)) {\n            $query .= '\n            AND\n                fd.lang = \\'' . $this->config->getDb()->escape($language) . '\\'';\n        }\n        $query .= '\n                ' . $this->queryPermission($this->groupSupport) . '\n            GROUP BY\n                fd.id,fd.lang,fcr.category_id,fv.visits,fdg.group_id,fdu.user_id\n            ORDER BY\n                fd.updated DESC';\n\n        $result = $this->config->getDb()->query($query);\n        $latest = [];\n        $data = [];\n\n        if ($result) {\n            while (($row = $this->config->getDb()->fetchObject($result))) {\n                if ($this->groupSupport) {\n                    if (!in_array($row->user_id, [-1, $this->user]) || !in_array($row->group_id, $this->groups)) {\n                        continue;\n                    }\n                } else {\n                    if (!in_array($row->user_id, [-1, $this->user])) {\n                        continue;\n                    }\n                }\n\n                $data['date'] = Date::createIsoDate($row->updated, DATE_ISO8601, true);\n                $data['question'] = Filter::filterVar($row->question, FILTER_UNSAFE_RAW);\n                $data['answer'] = $row->content;\n                $data['visits'] = (int)$row->visits;\n\n                $title = $row->question;\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $title;\n                $oLink->tooltip = $title;\n                $data['url'] = $oLink->toString();\n\n                $latest[$row->id] = $data;\n\n                if (count($latest) === $count) {\n                    break;\n                }\n            }\n        }\n\n        return $latest;\n    }\n\n    /**\n     * Retrieve faq records according to the constraints provided.\n     *\n     * @param string $queryType\n     * @param int    $nCatid\n     * @param bool   $bDownwards\n     * @param string $lang\n     * @param string $date\n     * @return array\n     */\n    public function get(\n        string $queryType = FAQ_QUERY_TYPE_DEFAULT,\n        int $nCatid = 0,\n        bool $bDownwards = true,\n        string $lang = '',\n        string $date = ''\n    ): array {\n        $faqs = [];\n\n        $result = $this->config->getDb()->query($this->getSQLQuery($queryType, $nCatid, $bDownwards, $lang, $date));\n\n        if ($this->config->getDb()->numRows($result) > 0) {\n            $i = 0;\n            while ($row = $this->config->getDb()->fetchObject($result)) {\n                $faq = [];\n                $faq['id'] = $row->id;\n                $faq['solution_id'] = $row->solution_id;\n                $faq['revision_id'] = $row->revision_id;\n                $faq['lang'] = $row->lang;\n                $faq['category_id'] = $row->category_id;\n                $faq['active'] = $row->active;\n                $faq['sticky'] = $row->sticky;\n                $faq['keywords'] = $row->keywords;\n                $faq['topic'] = $row->thema;\n                $faq['content'] = $row->content;\n                $faq['author_name'] = $row->author;\n                $faq['author_email'] = $row->email;\n                $faq['comment_enable'] = $row->comment;\n                $faq['lastmodified'] = $row->updated;\n                $faq['hits'] = $row->visits;\n                $faq['hits_last'] = $row->last_visit;\n                $faq['notes'] = $row->notes;\n                $faqs[$i] = $faq;\n                ++$i;\n            }\n        }\n\n        return $faqs;\n    }\n\n    /**\n     * Build the SQL query for retrieving faq records according to the constraints provided.\n     *\n     * @param string $queryType\n     * @param int    $categoryId\n     * @param bool   $bDownwards\n     * @param string $lang\n     * @param string $date\n     * @param int    $faqId\n     * @return string\n     */\n    private function getSQLQuery(\n        string $queryType,\n        int $categoryId,\n        bool $bDownwards,\n        string $lang,\n        string $date,\n        int $faqId = 0\n    ): string {\n        $now = date('YmdHis');\n        $query = sprintf(\n            \"\n            SELECT\n                fd.id AS id,\n                fd.solution_id AS solution_id,\n                fd.revision_id AS revision_id,\n                fd.lang AS lang,\n                fcr.category_id AS category_id,\n                fd.active AS active,\n                fd.sticky AS sticky,\n                fd.keywords AS keywords,\n                fd.thema AS thema,\n                fd.content AS content,\n                fd.author AS author,\n                fd.email AS email,\n                fd.comment AS comment,\n                fd.updated AS updated,\n                fd.notes AS notes,\n                fv.visits AS visits,\n                fv.last_visit AS last_visit\n            FROM\n                %sfaqdata fd,\n                %sfaqvisits fv,\n                %sfaqcategoryrelations fcr\n            WHERE\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            AND\n                fd.date_start <= '%s'\n            AND\n                fd.date_end   >= '%s'\n            AND \",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $now,\n            $now\n        );\n        // faqvisits data selection\n        if (!empty($faqId)) {\n            // Select ONLY the faq with the provided $faqid\n            $query .= \"fd.id = '\" . $faqId . \"' AND \";\n        }\n        $query .= 'fd.id = fv.id\n            AND\n                fd.lang = fv.lang';\n        $needAndOp = true;\n        if ((!empty($categoryId)) && $categoryId > 0) {\n            if ($needAndOp) {\n                $query .= ' AND';\n            }\n            $query .= ' (fcr.category_id = ' . $categoryId;\n            if ($bDownwards) {\n                $query .= $this->getCatidWhereSequence($categoryId, 'OR');\n            }\n            $query .= ')';\n            $needAndOp = true;\n        }\n        if ((!empty($date)) && Utils::isLikeOnPMFDate($date)) {\n            if ($needAndOp) {\n                $query .= ' AND';\n            }\n            $query .= \" fd.updated LIKE '\" . $date . \"'\";\n            $needAndOp = true;\n        }\n        if ((!empty($lang)) && Utils::isLanguage($lang)) {\n            if ($needAndOp) {\n                $query .= ' AND';\n            }\n            $query .= \" fd.lang = '\" . $this->config->getDb()->escape($lang) . \"'\";\n            $needAndOp = true;\n        }\n        switch ($queryType) {\n            case FAQ_QUERY_TYPE_APPROVAL:\n                if ($needAndOp) {\n                    $query .= ' AND';\n                }\n                $query .= \" fd.active = '\" . FAQ_SQL_ACTIVE_NO . \"'\";\n                break;\n            case FAQ_QUERY_TYPE_EXPORT_PDF:\n            case FAQ_QUERY_TYPE_EXPORT_XHTML:\n            case FAQ_QUERY_TYPE_EXPORT_XML:\n                if ($needAndOp) {\n                    $query .= ' AND';\n                }\n                $query .= \" fd.active = '\" . FAQ_SQL_ACTIVE_YES . \"'\";\n                break;\n            default:\n                if ($needAndOp) {\n                    $query .= ' AND';\n                }\n                $query .= \" fd.active = '\" . FAQ_SQL_ACTIVE_YES . \"'\";\n                break;\n        }\n        // Sort criteria\n        switch ($queryType) {\n            case FAQ_QUERY_TYPE_EXPORT_PDF:\n            case FAQ_QUERY_TYPE_EXPORT_XHTML:\n            case FAQ_QUERY_TYPE_EXPORT_XML:\n                $query .= \"\\nORDER BY fcr.category_id, fd.id\";\n                break;\n            default:\n                // Normal ordering\n                $query .= \"\\nORDER BY fcr.category_id, fd.id\";\n                break;\n        }\n\n        return $query;\n    }\n\n    /**\n     * Build a logic sequence, for a WHERE statement, of those category IDs\n     * children of the provided category ID, if any.\n     *\n     * @param int    $nCatid\n     * @param string $logicOp\n     * @param $oCat\n     * @return string\n     */\n    private function getCatidWhereSequence(int $nCatid, string $logicOp = 'OR', $oCat = null): string\n    {\n        $sqlWhereFilter = '';\n\n        if (!isset($oCat)) {\n            $oCat = new Category($this->config);\n        }\n        $aChildren = array_values($oCat->getChildren($nCatid));\n\n        foreach ($aChildren as $catid) {\n            $sqlWhereFilter .= ' ' . $logicOp . ' fcr.category_id = ' . $catid;\n            $sqlWhereFilter .= $this->getCatidWhereSequence($catid, 'OR', $oCat);\n        }\n\n        return $sqlWhereFilter;\n    }\n\n    /**\n     * Returns all records of one category.\n     *\n     * @param int $categoryId\n     *\n     * @return string\n     */\n    public function getRecordsWithoutPagingByCategoryId(int $categoryId): string\n    {\n        global $sids;\n\n        $output = '';\n        $now = date('YmdHis');\n        $query = sprintf(\n            \"\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.thema AS thema,\n                fcr.category_id AS category_id,\n                fv.visits AS visits\n            FROM\n                %sfaqdata fd\n            LEFT JOIN\n                %sfaqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                %sfaqvisits fv\n            ON\n                fd.id = fv.id\n            AND\n                fv.lang = fd.lang\n            LEFT JOIN\n                %sfaqdata_group fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.date_start <= '%s'\n            AND\n                fd.date_end   >= '%s'\n            AND\n                fd.active = 'yes'\n            AND\n                fcr.category_id = %d\n            AND\n                fd.lang = '%s'\n                %s\n            GROUP BY\n                fd.id,fd.lang,fd.thema,fcr.category_id,fv.visits\n            ORDER BY\n                %s %s\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $now,\n            $now,\n            $categoryId,\n            $this->config->getLanguage()->getLanguage(),\n            $this->queryPermission($this->groupSupport),\n            $this->config->get('records.orderby'),\n            $this->config->get('records.sortby')\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($result) {\n            $output = '<ul>';\n            while (($row = $this->config->getDb()->fetchObject($result))) {\n                $title = $row->thema;\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $row->thema;\n                $oLink->text = $title;\n                $oLink->tooltip = $title;\n                $listItem = '<li>' . $oLink->toHtmlAnchor() . '</li>';\n\n                $output .= $listItem;\n            }\n            $output .= '</ul>';\n        }\n\n        return $output;\n    }\n\n    /**\n     * Prints the open questions as a HTML table.\n     *\n     * @todo   needs to be moved to a QuestionHelper class\n     * @return string\n     * @throws Exception\n     */\n    public function renderOpenQuestions(): string\n    {\n        global $sids, $category;\n\n        $date = new Date($this->config);\n        $mail = new Mail($this->config);\n\n        $query = sprintf(\n            \"\n            SELECT\n                COUNT(id) AS num\n            FROM\n                %sfaqquestions\n            WHERE\n                lang = '%s'\n            AND\n                is_visible != 'Y'\",\n            Database::getTablePrefix(),\n            $this->config->getLanguage()->getLanguage()\n        );\n\n        $result = $this->config->getDb()->query($query);\n        $row = $this->config->getDb()->fetchObject($result);\n        $numOfInvisibles = $row->num;\n\n        if ($numOfInvisibles > 0) {\n            $extraout = sprintf(\n                '<tr><td colspan=\"3\"><small>%s %s</small></td></tr>',\n                $this->translation['msgQuestionsWaiting'],\n                $numOfInvisibles\n            );\n        } else {\n            $extraout = '';\n        }\n\n        $query = sprintf(\n            \"\n            SELECT\n                *\n            FROM\n                %sfaqquestions\n            WHERE\n                lang = '%s'\n            AND\n                is_visible = 'Y'\n            ORDER BY\n                created ASC\",\n            Database::getTablePrefix(),\n            $this->config->getLanguage()->getLanguage()\n        );\n\n        $result = $this->config->getDb()->query($query);\n        $output = '';\n\n        if ($result && $this->config->getDb()->numRows($result) > 0) {\n            while ($row = $this->config->getDb()->fetchObject($result)) {\n                $output .= '<tr class=\"openquestions\">';\n                $output .= sprintf(\n                    '<td><small>%s</small><br><a href=\"mailto:%s\">%s</a></td>',\n                    $date->format(Date::createIsoDate($row->created)),\n                    $mail->safeEmail($row->email),\n                    $row->username\n                );\n                $output .= sprintf(\n                    '<td><strong>%s:</strong><br>%s</td>',\n                    isset($category->categoryName[$row->category_id]['name']) ?\n                        $category->categoryName[$row->category_id]['name'] :\n                        '',\n                    strip_tags($row->question)\n                );\n                if ($this->config->get('records.enableCloseQuestion') && $row->answer_id) {\n                    $output .= sprintf(\n                        '<td><a id=\"PMF_openQuestionAnswered\" href=\"?%saction=faq&amp;cat=%d&amp;id=%d\">%s</a></td>',\n                        $sids,\n                        $row->category_id,\n                        $row->answer_id,\n                        $this->translation['msg2answerFAQ']\n                    );\n                } else {\n                    $output .= sprintf(\n                        '<td class=\"text-right\">' .\n                        '<a class=\"btn btn-primary\" href=\"?%saction=add&amp;question=%d&amp;cat=%d\">%s</a></td>',\n                        $sids,\n                        $row->id,\n                        $row->category_id,\n                        $this->translation['msg2answer']\n                    );\n                }\n                $output .= '</tr>';\n            }\n        } else {\n            $output = sprintf(\n                '<tr><td colspan=\"3\">%s</td></tr>',\n                $this->translation['msgNoQuestionsAvailable']\n            );\n        }\n\n        return $output . $extraout;\n    }\n\n    /**\n     * Set or unset a faq item flag.\n     *\n     * @param int    $id   Record id\n     * @param string $lang language code which is valid with Language::isASupportedLanguage\n     * @param bool   $flag record is set to sticky or not\n     * @param string $type type of the flag to set, use the column name\n     * @return bool\n     */\n    public function updateRecordFlag(int $id, string $lang, bool $flag, string $type): bool\n    {\n        $retval = false;\n\n        switch ($type) {\n            case 'sticky':\n                $flag = ($flag === 'checked' ? 1 : 0);\n                break;\n\n            case 'active':\n                $flag = ($flag === 'checked' ? \"'yes'\" : \"'no'\");\n                break;\n\n            default:\n                // This is because we would run into unknown db column\n                $flag = null;\n                break;\n        }\n\n        if (null !== $flag) {\n            $update = sprintf(\n                \"\n                UPDATE \n                    %sfaqdata \n                SET \n                    %s = %s \n                WHERE \n                    id = %d \n                AND \n                    lang = '%s'\",\n                Database::getTablePrefix(),\n                $type,\n                $flag,\n                $id,\n                $this->config->getDb()->escape($lang)\n            );\n\n            $retval = (bool)$this->config->getDb()->query($update);\n        }\n\n        return $retval;\n    }\n\n    /**\n     * Prepares and returns the sticky records for the frontend.\n     *\n     * @return array\n     */\n    public function getStickyRecords(): array\n    {\n        $result = $this->getStickyRecordsData();\n        $output = [];\n\n        if (count($result) > 0) {\n            foreach ($result as $row) {\n                $output['title'][] = Utils::makeShorterText($row['question'], 8);\n                $output['preview'][] = $row['question'];\n                $output['url'][] = Strings::htmlentities($row['url']);\n            }\n        } else {\n            $output['error'] = sprintf('<li>%s</li>', $this->translation['err_noTopTen']);\n        }\n\n        return $output;\n    }\n\n    /**\n     * Returns the sticky records with URL and Title.\n     *\n     * @return array\n     */\n    public function getStickyRecordsData(): array\n    {\n        global $sids;\n\n        $now = date('YmdHis');\n        $query = sprintf(\n            \"\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.thema AS thema,\n                fcr.category_id AS category_id,\n                fv.visits AS visits\n            FROM\n                %sfaqvisits fv,\n                %sfaqdata fd\n            LEFT JOIN\n                %sfaqcategoryrelations fcr\n            ON\n                fd.id = fcr.record_id\n            AND\n                fd.lang = fcr.record_lang\n            LEFT JOIN\n                %sfaqdata_group AS fdg\n            ON\n                fd.id = fdg.record_id\n            LEFT JOIN\n                %sfaqdata_user AS fdu\n            ON\n                fd.id = fdu.record_id\n            WHERE\n                fd.lang = '%s'\n            AND \n                fd.date_start <= '%s'\n            AND \n                fd.date_end   >= '%s'\n            AND \n                fd.active = 'yes'\n            AND \n                fd.sticky = 1\n            AND\n                fd.id = fv.id\n            AND \n                fd.lang = fv.lang\n            %s\n            GROUP BY\n                fd.id, fd.lang, fd.thema, fcr.category_id, fv.visits\n            ORDER BY\n                fv.visits DESC\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $this->config->getLanguage()->getLanguage(),\n            $now,\n            $now,\n            $this->queryPermission($this->groupSupport)\n        );\n\n        $result = $this->config->getDb()->query($query);\n        $sticky = [];\n        $data = [];\n\n        $oldId = 0;\n        while (($row = $this->config->getDb()->fetchObject($result))) {\n            if ($oldId != $row->id) {\n                $data['question'] = $row->thema;\n\n                $title = $row->thema;\n                $url = sprintf(\n                    '%sindex.php?%saction=faq&amp;cat=%d&amp;id=%d&amp;artlang=%s',\n                    $this->config->getDefaultUrl(),\n                    $sids,\n                    $row->category_id,\n                    $row->id,\n                    $row->lang\n                );\n                $oLink = new Link($url, $this->config);\n                $oLink->itemTitle = $row->thema;\n                $oLink->tooltip = $title;\n                $data['url'] = $oLink->toString();\n\n                $sticky[] = $data;\n            }\n            $oldId = $row->id;\n        }\n\n        return $sticky;\n    }\n\n    /**\n     * Returns the inactive records with admin URL to edit the FAQ and title.\n     *\n     * @return array\n     */\n    public function getInactiveFaqsData(): array\n    {\n        $query = sprintf(\n            \"\n            SELECT\n                fd.id AS id,\n                fd.lang AS lang,\n                fd.thema AS thema\n            FROM\n                %sfaqdata fd\n            WHERE\n                fd.lang = '%s'\n            AND \n                fd.active = 'no'\n            GROUP BY\n                fd.id, fd.lang, fd.thema\n            ORDER BY\n                fd.id DESC\",\n            Database::getTablePrefix(),\n            $this->config->getLanguage()->getLanguage()\n        );\n\n        $result = $this->config->getDb()->query($query);\n        $inactive = [];\n        $data = [];\n\n        $oldId = 0;\n        while (($row = $this->config->getDb()->fetchObject($result))) {\n            if ($oldId != $row->id) {\n                $data['question'] = $row->thema;\n                $data['url'] = sprintf(\n                    '%sadmin/?action=editentry&id=%d&lang=%s',\n                    $this->config->getDefaultUrl(),\n                    $row->id,\n                    $row->lang\n                );\n                $inactive[] = $data;\n            }\n            $oldId = $row->id;\n        }\n\n        return $inactive;\n    }\n}\n", "<?php\n\n/**\n * The main Tags class.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package   phpMyFAQ\n * @author    Thorsten Rinne <thorsten@phpmyfaq.de>\n * @author    Matteo Scaramuccia <matteo@scaramuccia.com>\n * @author    Georgi Korchev <korchev@yahoo.com>\n * @copyright 2006-2022 phpMyFAQ Team\n * @license   http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link      https://www.phpmyfaq.de\n * @since     2006-08-10\n */\n\nnamespace phpMyFAQ;\n\nuse phpMyFAQ\\Entity\\TagEntity as EntityTags;\n\n/**\n * Class Tags\n *\n * @package phpMyFAQ\n */\nclass Tags\n{\n    /**\n     * @var Configuration\n     */\n    private $config;\n\n    /**\n     * @var array<int, string>\n     */\n    private $recordsByTagName = [];\n\n    /**\n     * Constructor.\n     *\n     * @param Configuration $config\n     */\n    public function __construct(Configuration $config)\n    {\n        $this->config = $config;\n    }\n\n    /**\n     * Returns all tags for a FAQ record.\n     *\n     * @param int $recordId Record ID\n     * @return string\n     */\n    public function getAllLinkTagsById(int $recordId): string\n    {\n        $tagListing = '';\n\n        foreach ($this->getAllTagsById($recordId) as $taggingId => $taggingName) {\n            $title = Strings::htmlspecialchars($taggingName, ENT_QUOTES, 'utf-8');\n            $url = sprintf('%sindex.php?action=search&amp;tagging_id=%d', $this->config->getDefaultUrl(), $taggingId);\n            $oLink = new Link($url, $this->config);\n            $oLink->itemTitle = $taggingName;\n            $oLink->text = $taggingName;\n            $oLink->tooltip = $title;\n            $tagListing .= $oLink->toHtmlAnchor() . ', ';\n        }\n\n        return '' == $tagListing ? '-' : Strings::substr($tagListing, 0, -2);\n    }\n\n    /**\n     * Returns all tags for a FAQ record.\n     *\n     * @param int $recordId Record ID\n     * @return array<int, string>\n     */\n    public function getAllTagsById(int $recordId): array\n    {\n        $tags = [];\n\n        $query = sprintf(\n            '\n            SELECT\n                dt.tagging_id AS tagging_id, \n                t.tagging_name AS tagging_name\n            FROM\n                %sfaqdata_tags dt, %sfaqtags t\n            WHERE\n                dt.record_id = %d\n            AND\n                dt.tagging_id = t.tagging_id\n            ORDER BY\n                t.tagging_name',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $recordId\n        );\n\n        $result = $this->config->getDb()->query($query);\n        if ($result) {\n            while ($row = $this->config->getDb()->fetchObject($result)) {\n                $tags[$row->tagging_id] = $row->tagging_name;\n            }\n        }\n\n        return $tags;\n    }\n\n    /**\n     * Saves all tags from a FAQ record.\n     *\n     * @param int $recordId Record ID\n     * @param array<int, string> $tags Array of tags\n     * @return bool\n     */\n    public function saveTags(int $recordId, array $tags): bool\n    {\n        $currentTags = $this->getAllTags();\n\n        // Delete all tag references for the faq record\n        if (count($tags) > 0) {\n            $this->deleteTagsFromRecordId($recordId);\n        }\n\n        // Store tags and references for the faq record\n        foreach ($tags as $tagName) {\n            $tagName = trim($tagName);\n            if (Strings::strlen($tagName) > 0) {\n                if (\n                    !in_array(\n                        Strings::strtolower($tagName),\n                        array_map(['phpMyFAQ\\Strings', 'strtolower'], $currentTags)\n                    )\n                ) {\n                    // Create the new tag\n                    $newTagId = $this->config->getDb()->nextId(Database::getTablePrefix() . 'faqtags', 'tagging_id');\n                    $query = sprintf(\n                        \"INSERT INTO %sfaqtags (tagging_id, tagging_name) VALUES (%d, '%s')\",\n                        Database::getTablePrefix(),\n                        $newTagId,\n                        $tagName\n                    );\n                    $this->config->getDb()->query($query);\n\n                    // Add the tag reference for the faq record\n                    $query = sprintf(\n                        'INSERT INTO %sfaqdata_tags (record_id, tagging_id) VALUES (%d, %d)',\n                        Database::getTablePrefix(),\n                        $recordId,\n                        $newTagId\n                    );\n                    $this->config->getDb()->query($query);\n                } else {\n                    // Add the tag reference for the faq record\n                    $query = sprintf(\n                        'INSERT INTO %sfaqdata_tags (record_id, tagging_id) VALUES (%d, %d)',\n                        Database::getTablePrefix(),\n                        $recordId,\n                        array_search(\n                            Strings::strtolower($tagName),\n                            array_map(['phpMyFAQ\\Strings', 'strtolower'], $currentTags)\n                        )\n                    );\n                    $this->config->getDb()->query($query);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns all tags.\n     *\n     * @param string|null $search Move the returned result set to be the result of a start-with search\n     * @param int $limit Limit the returned result set\n     * @param bool $showInactive Show inactive tags\n     * @return array<int, string>\n     */\n    public function getAllTags(\n        string $search = null,\n        int $limit = PMF_TAGS_CLOUD_RESULT_SET_SIZE,\n        bool $showInactive = false\n    ): array {\n        $allTags = [];\n\n        // Hack: LIKE is case sensitive under PostgreSQL\n        switch (Database::getType()) {\n            case 'pgsql':\n                $like = 'ILIKE';\n                break;\n            default:\n                $like = 'LIKE';\n                break;\n        }\n\n        $query = sprintf(\n            '\n            SELECT\n                MIN(t.tagging_id) AS tagging_id, t.tagging_name AS tagging_name\n            FROM\n                %sfaqtags t\n            LEFT JOIN\n                %sfaqdata_tags dt\n            ON\n                dt.tagging_id = t.tagging_id\n            LEFT JOIN\n                %sfaqdata d\n            ON\n                d.id = dt.record_id\n            WHERE\n                1=1\n                %s\n                %s\n            GROUP BY\n                tagging_name\n            ORDER BY\n                tagging_name ASC',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            ($showInactive ? '' : \"AND d.active = 'yes'\"),\n            (isset($search) && ($search != '') ? 'AND tagging_name ' . $like . \" '\" . $search . \"%'\" : '')\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($result) {\n            $i = 0;\n            while ($row = $this->config->getDb()->fetchObject($result)) {\n                if ($i < $limit) {\n                    $allTags[$row->tagging_id] = $row->tagging_name;\n                } else {\n                    break;\n                }\n                ++$i;\n            }\n        }\n\n        return array_unique($allTags);\n    }\n\n    /**\n     * Deletes all tags from a given record id.\n     *\n     * @param int $recordId Record ID\n     * @return bool\n     */\n    public function deleteTagsFromRecordId(int $recordId): bool\n    {\n        $query = sprintf(\n            'DELETE FROM %sfaqdata_tags WHERE record_id = %d',\n            Database::getTablePrefix(),\n            $recordId\n        );\n\n        $this->config->getDb()->query($query);\n\n        return true;\n    }\n\n    /**\n     * Updates a tag.\n     *\n     * @param EntityTags $entity\n     * @return bool\n     */\n    public function updateTag(EntityTags $entity): bool\n    {\n        $query = sprintf(\n            \"UPDATE %sfaqtags SET tagging_name = '%s' WHERE tagging_id = %d\",\n            Database::getTablePrefix(),\n            $entity->getName(),\n            $entity->getId()\n        );\n\n        return $this->config->getDb()->query($query);\n    }\n\n    /**\n     * Deletes a given tag.\n     *\n     * @param int $tagId\n     * @return bool\n     */\n    public function deleteTag(int $tagId): bool\n    {\n        $query = sprintf(\n            'DELETE FROM %sfaqtags WHERE tagging_id = %d',\n            Database::getTablePrefix(),\n            $tagId\n        );\n\n        $this->config->getDb()->query($query);\n\n        $query = sprintf(\n            'DELETE FROM %sfaqdata_tags WHERE tagging_id = %d',\n            Database::getTablePrefix(),\n            $tagId\n        );\n\n        $this->config->getDb()->query($query);\n\n        return true;\n    }\n\n    /**\n     * Returns the FAQ record IDs where all tags are included.\n     *\n     * @param array<int, int> $arrayOfTags Array of Tags\n     * @return array<int, int>\n     */\n    public function getFaqsByIntersectionTags(array $arrayOfTags): array\n    {\n        $query = sprintf(\n            \"\n            SELECT\n                td.record_id AS record_id\n            FROM\n                %sfaqdata_tags td\n            JOIN\n                %sfaqtags t ON (td.tagging_id = t.tagging_id)\n            JOIN\n                %sfaqdata d ON (td.record_id = d.id)\n            WHERE\n                (t.tagging_name IN ('%s'))\n            AND\n                (d.lang = '%s')\n            GROUP BY\n                td.record_id\n            HAVING\n                COUNT(td.record_id) = %d\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            implode(\"', '\", $arrayOfTags),\n            $this->config->getLanguage()->getLanguage(),\n            count($arrayOfTags)\n        );\n\n        $records = [];\n        $result = $this->config->getDb()->query($query);\n        while ($row = $this->config->getDb()->fetchObject($result)) {\n            $records[] = $row->record_id;\n        }\n\n        return $records;\n    }\n\n    /**\n     * Returns the HTML for the Tags Cloud.\n     *\n     * @return string\n     */\n    public function renderTagCloud(): string\n    {\n        $tags = [];\n\n        // Limit the result set (see: PMF_TAGS_CLOUD_RESULT_SET_SIZE)\n        // for avoiding an 'heavy' load during the evaluation\n        // of the number of records for each tag\n        $tagList = $this->getAllTags('', PMF_TAGS_CLOUD_RESULT_SET_SIZE);\n\n        foreach ($tagList as $tagId => $tagName) {\n            $totFaqByTag = count($this->getFaqsByTagName($tagName));\n            if ($totFaqByTag > 0) {\n                $tags[$tagName]['id'] = $tagId;\n                $tags[$tagName]['name'] = Strings::htmlentities($tagName);\n                $tags[$tagName]['count'] = $totFaqByTag;\n            }\n        }\n\n        $html = '';\n        $i = 0;\n        foreach ($tags as $tag) {\n            ++$i;\n            $title = Strings::htmlspecialchars($tag['name'] . ' (' . $tag['count'] . ')', ENT_QUOTES);\n            $url = sprintf(\n                '%sindex.php?action=search&amp;tagging_id=%d',\n                Strings::htmlentities($this->config->getDefaultUrl()),\n                $tag['id']\n            );\n            $oLink = new Link($url, $this->config);\n            $oLink->itemTitle = $tag['name'];\n            $oLink->text = $tag['name'];\n            $oLink->tooltip = $title;\n            $oLink->class = 'btn btn-primary m-1';\n            $html .= $oLink->toHtmlAnchor();\n            $html .= (count($tags) == $i ? '' : ' ');\n        }\n\n        return $html;\n    }\n\n    /**\n     * Returns all FAQ record IDs where all tags are included.\n     *\n     * @param string $tagName The name of the tag\n     * @return array<int, string>\n     */\n    public function getFaqsByTagName(string $tagName): array\n    {\n        if (count($this->recordsByTagName)) {\n            return $this->recordsByTagName;\n        }\n\n        $query = sprintf(\n            \"\n            SELECT\n                dt.record_id AS record_id\n            FROM\n                %sfaqtags t, %sfaqdata_tags dt\n            LEFT JOIN\n                %sfaqdata d\n            ON\n                d.id = dt.record_id\n            WHERE\n                t.tagging_id = dt.tagging_id\n            AND \n                t.tagging_name = '%s'\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $this->config->getDb()->escape($tagName)\n        );\n\n        $this->recordsByTagName = [];\n        $result = $this->config->getDb()->query($query);\n        while ($row = $this->config->getDb()->fetchObject($result)) {\n            $this->recordsByTagName[] = $row->record_id;\n        }\n\n        return $this->recordsByTagName;\n    }\n\n    /**\n     * Returns all FAQ record IDs where all tags are included.\n     *\n     * @param int $tagId Tagging ID\n     * @return array<int>\n     */\n    public function getFaqsByTagId(int $tagId): array\n    {\n        $query = sprintf(\n            '\n            SELECT\n                d.record_id AS record_id\n            FROM\n                %sfaqdata_tags d, %sfaqtags t\n            WHERE\n                t.tagging_id = d.tagging_id\n            AND\n                t.tagging_id = %d\n            GROUP BY\n                record_id',\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $tagId\n        );\n\n        $records = [];\n        $result = $this->config->getDb()->query($query);\n        while ($row = $this->config->getDb()->fetchObject($result)) {\n            $records[] = $row->record_id;\n        }\n\n        return $records;\n    }\n\n    /**\n     * @param int $limit\n     * @return string\n     */\n    public function renderPopularTags(int $limit = 0): string\n    {\n        $html = '';\n        foreach ($this->getPopularTags($limit) as $tagId => $tagFreq) {\n            $tagName = $this->getTagNameById($tagId);\n            $html .= sprintf(\n                '<a class=\"btn btn-primary m-1\" href=\"?action=search&tagging_id=%d\">%s ' .\n                '<span class=\"badge badge-info\">%d</span></a>',\n                $tagId,\n                Strings::htmlentities($tagName),\n                $tagFreq\n            );\n        }\n\n        return $html;\n    }\n\n    /**\n     * @param int $limit Specify the maximum amount of records to return\n     * @return array<int, int>\n     */\n    public function getPopularTags($limit = 0): array\n    {\n        $tags = [];\n\n        $query = sprintf(\n            \"\n            SELECT\n                COUNT(record_id) as freq, tagging_id\n            FROM\n                %sfaqdata_tags\n            JOIN\n                %sfaqdata ON id = record_id\n            WHERE\n              lang = '%s'\n            GROUP BY tagging_id\n            ORDER BY freq DESC\",\n            Database::getTablePrefix(),\n            Database::getTablePrefix(),\n            $this->config->getLanguage()->getLanguage()\n        );\n\n        $result = $this->config->getDb()->query($query);\n\n        if ($result) {\n            while ($row = $this->config->getDb()->fetchObject($result)) {\n                $tags[$row->tagging_id] = $row->freq;\n                if (--$limit === 0) {\n                    break;\n                }\n            }\n        }\n\n        return $tags;\n    }\n\n    /**\n     * Returns the tagged item.\n     *\n     * @param int $tagId Tagging ID\n     * @return string\n     */\n    public function getTagNameById(int $tagId): string\n    {\n        $query = sprintf(\n            'SELECT tagging_name FROM %sfaqtags WHERE tagging_id = %d',\n            Database::getTablePrefix(),\n            $tagId\n        );\n\n        $result = $this->config->getDb()->query($query);\n        if ($row = $this->config->getDb()->fetchObject($result)) {\n            return $row->tagging_name;\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns the popular Tags as an array\n     *\n     * @param int $limit\n     * @return array<int, array<string, int|string>>\n     */\n    public function getPopularTagsAsArray(int $limit = 0): array\n    {\n        $data = [];\n        foreach ($this->getPopularTags($limit) as $tagId => $tagFreq) {\n            $tagName = $this->getTagNameById($tagId);\n            $data[] = [\n                'tagId' => (int)$tagId,\n                'tagName' => $tagName,\n                'tagFrequency' => (int)$tagFreq\n            ];\n        }\n\n        return $data;\n    }\n}\n"], "filenames": ["phpmyfaq/admin/record.edit.php", "phpmyfaq/admin/record.show.php", "phpmyfaq/src/phpMyFAQ/Faq.php", "phpmyfaq/src/phpMyFAQ/Tags.php"], "buggy_code_start_loc": [655, 30, 2013, 371], "buggy_code_end_loc": [656, 461, 2015, 487], "fixing_code_start_loc": [655, 31, 2013, 371], "fixing_code_end_loc": [656, 463, 2015, 487], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository thorsten/phpmyfaq prior to 3.1.10.", "other": {"cve": {"id": "CVE-2023-0306", "sourceIdentifier": "security@huntr.dev", "published": "2023-01-15T22:15:10.400", "lastModified": "2023-01-23T14:25:19.790", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository thorsten/phpmyfaq prior to 3.1.10."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.1, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.3, "impactScore": 6.0}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpmyfaq:phpmyfaq:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.1.10", "matchCriteriaId": "184FE56D-4BA2-499C-9F30-C0B5A2EE2C36"}]}]}], "references": [{"url": "https://github.com/thorsten/phpmyfaq/commit/1815daef61c432bb73b9dca43f03d140c94ef0c5", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/cbba22f0-89ed-4d01-81ea-744979c8cbde", "source": "security@huntr.dev", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/thorsten/phpmyfaq/commit/1815daef61c432bb73b9dca43f03d140c94ef0c5"}}