{"buggy_code": ["<?php\n\n/*\n|--------------------------------------------------------------------------\n| Application & Route Filters\n|--------------------------------------------------------------------------\n|\n| Below you will find the \"before\" and \"after\" events for the application\n| which may be used to do any work before or after a request into your\n| application. Here you may also register your custom route filters.\n|\n*/\n\nApp::before(function($request)\n{\n\t//\n});\n\n\nApp::after(function($request, $response)\n{\n\t//\n});\n\n/*\n|--------------------------------------------------------------------------\n| Authentication Filters\n|--------------------------------------------------------------------------\n|\n| The following filters are used to verify that the user of the current\n| session is logged into this application. The \"basic\" filter easily\n| integrates HTTP Basic authentication for quick, simple checking.\n|\n*/\n\nRoute::filter('auth', function()\n{\n\tif (Auth::guest())\n\t{\n\t\tif (Request::ajax())\n\t\t{\n\t\t\treturn Response::make('Unauthorized', 401);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn Redirect::guest('login');\n\t\t}\n\t}\n});\n\n\nRoute::filter('auth.basic', function()\n{\n\treturn Auth::basic();\n});\n\n/*\n|--------------------------------------------------------------------------\n| Guest Filter\n|--------------------------------------------------------------------------\n|\n| The \"guest\" filter is the counterpart of the authentication filters as\n| it simply checks that the current user is not logged in. A redirect\n| response will be issued if they are, which you may freely change.\n|\n*/\n\nRoute::filter('guest', function()\n{\n\tif (Auth::check()) return Redirect::to('/');\n});\n\n/*\n|--------------------------------------------------------------------------\n| CSRF Protection Filter\n|--------------------------------------------------------------------------\n|\n| The CSRF filter is responsible for protecting your application against\n| cross-site request forgery attacks. If this special token in a user\n| session does not match the one given in this request, we'll bail.\n|\n*/\n\nRoute::filter('csrf', function()\n{\n\tif (Session::token() != Input::get('_token'))\n\t{\n\t\tthrow new Illuminate\\Session\\TokenMismatchException;\n\t}\n});\n"], "fixing_code": ["<?php\n\n/*\n|--------------------------------------------------------------------------\n| Application & Route Filters\n|--------------------------------------------------------------------------\n|\n| Below you will find the \"before\" and \"after\" events for the application\n| which may be used to do any work before or after a request into your\n| application. Here you may also register your custom route filters.\n|\n*/\n\nApp::before(function($request)\n{\n\t//\n});\n\n\nApp::after(function($request, $response)\n{\n\t//\n});\n\n/*\n|--------------------------------------------------------------------------\n| Authentication Filters\n|--------------------------------------------------------------------------\n|\n| The following filters are used to verify that the user of the current\n| session is logged into this application. The \"basic\" filter easily\n| integrates HTTP Basic authentication for quick, simple checking.\n|\n*/\n\nRoute::filter('auth', function()\n{\n\tif (Auth::guest())\n\t{\n\t\tif (Request::ajax())\n\t\t{\n\t\t\treturn Response::make('Unauthorized', 401);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn Redirect::guest('login');\n\t\t}\n\t}\n});\n\n\nRoute::filter('auth.basic', function()\n{\n\treturn Auth::basic();\n});\n\n/*\n|--------------------------------------------------------------------------\n| Guest Filter\n|--------------------------------------------------------------------------\n|\n| The \"guest\" filter is the counterpart of the authentication filters as\n| it simply checks that the current user is not logged in. A redirect\n| response will be issued if they are, which you may freely change.\n|\n*/\n\nRoute::filter('guest', function()\n{\n\tif (Auth::check()) return Redirect::to('/');\n});\n\n/*\n|--------------------------------------------------------------------------\n| CSRF Protection Filter\n|--------------------------------------------------------------------------\n|\n| The CSRF filter is responsible for protecting your application against\n| cross-site request forgery attacks. If this special token in a user\n| session does not match the one given in this request, we'll bail.\n|\n*/\n\nRoute::filter('csrf', function()\n{\n\tif (Session::token() !== Input::get('_token'))\n\t{\n\t\tthrow new Illuminate\\Session\\TokenMismatchException;\n\t}\n});\n"], "filenames": ["app/filters.php"], "buggy_code_start_loc": [86], "buggy_code_end_loc": [87], "fixing_code_start_loc": [86], "fixing_code_end_loc": [87], "type": "CWE-697", "message": "A vulnerability was found in mrobit robitailletheknot. It has been classified as problematic. This affects an unknown part of the file app/filters.php of the component CSRF Token Handler. The manipulation of the argument _token leads to incorrect comparison. It is possible to initiate the attack remotely. The name of the patch is 6b2813696ccb88d0576dfb305122ee880eb36197. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217599.", "other": {"cve": {"id": "CVE-2014-125057", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-07T10:15:09.260", "lastModified": "2023-01-12T20:03:21.313", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in mrobit robitailletheknot. It has been classified as problematic. This affects an unknown part of the file app/filters.php of the component CSRF Token Handler. The manipulation of the argument _token leads to incorrect comparison. It is possible to initiate the attack remotely. The name of the patch is 6b2813696ccb88d0576dfb305122ee880eb36197. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217599."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.1, "baseSeverity": "LOW"}, "exploitabilityScore": 1.6, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:H/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "HIGH", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-697"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-697"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:robitailletheknot_project:robitailletheknot:*:*:*:*:*:*:*:*", "versionEndExcluding": "2014-11-10", "matchCriteriaId": "C4367FC7-5937-4C51-99C6-EF4D5D54ED42"}]}]}], "references": [{"url": "https://github.com/mrobit/robitailletheknot/commit/6b2813696ccb88d0576dfb305122ee880eb36197", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217599", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory", "VDB Entry"]}, {"url": "https://vuldb.com/?id.217599", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory", "VDB Entry"]}]}, "github_commit_url": "https://github.com/mrobit/robitailletheknot/commit/6b2813696ccb88d0576dfb305122ee880eb36197"}}