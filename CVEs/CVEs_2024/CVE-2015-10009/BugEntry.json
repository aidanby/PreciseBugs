{"buggy_code": ["<?php\nrequire_once 'app/controllers/asset_controller.php';\n/**\n *\n * PHP versions 4 and 5\n *\n * LICENSE: This source file is subject to version 3.01 of the PHP license\n * that is available through the world-wide-web at the following URI:\n * http://www.php.net/license/3_01.txt.  If you did not receive a copy of\n * the PHP License and are unable to obtain it through the web, please\n * send a note to license@php.net so we can mail you a copy immediately.\n *\n * @category   Code Caller Asset\n * @author     Tim Glen <tim@nonfiction.ca>\n * @copyright  2005-2007 nonfiction studios inc.\n * @license    http://www.php.net/license/3_01.txt  PHP License 3.01\n * @version    SVN: $Id$\n * @link       http://www.nterchange.com/\n */\nclass CodeCallerController extends AssetController {\n\tfunction __construct() {\n\t\t$this->name = 'code_caller';\n\t\t$this->versioning = true;\n\t\t$this->base_view_dir = BASE_DIR;\n\t\tparent::__construct();\n\t}\n\n\tfunction render($options) {\n\t\t$in_nterchange = defined('IN_NTERCHANGE')?constant('IN_NTERCHANGE'):false;\n\t\t$in_surftoedit = defined('IN_SURFTOEDIT')?constant('IN_SURFTOEDIT'):false;\n\t\tif (!$in_nterchange || $in_surftoedit) {\n\t\t\t$model = &$this->getDefaultModel();\n\t\t\t$content = $model->content;\n\t\t\trequire_once 'vendor/JSON.php';\n\t\t\t$json = new Services_JSON();\n\t\t\tif ($code = $json->decode($content) && !empty($code)) {\n\t\t\t\tif (isset($code->controller) && isset($code->action)) {\n\t\t\t\t\t$this->getContent((array) $code, $model->dynamic);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile (false !== ($pos = strpos($content, '{call'))) {\n\t\t\t\t\t$pos2 = strpos($content, '}', $pos)+1;\n \t\t\t\t\t$str = substr($content, $pos, $pos2-$pos);\n \t\t\t\t\t// clean up the string\n \t\t\t\t\t$str = trim(str_replace(array('{call ', '}'), '', $str));\n \t\t\t\t\t// replace value\n\t\t\t\t\t$value = '';\n\t\t\t\t\t// find matches\n\t\t\t\t\tpreg_match_all('/\\s?([^=]+)=[\\\"\\']?([^\\\"\\'\\s$]+)[\\\"\\']?/', $str, $matches);\n\t\t\t\t\t// push the matches into an array if they exists\n\t\t\t\t\tif (isset($matches[0])) {\n\t\t\t\t\t\t$params = array();\n\t\t\t\t\t\tfor ($i=0;$i<count($matches[0]);$i++) {\n\t\t\t\t\t\t\t$params[$matches[1][$i]] = $matches[2][$i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$value = $this->getContent($params, $model->dynamic);\n\t\t\t\t\t}\n\t\t\t\t\t$content = substr($content, 0, $pos) . $value . substr($content, $pos2 + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$model->content = $content;\n\t\t\t$this->set($model->toArray());\n\t\t\tunset($json);\n\t\t}\n\t\treturn parent::render($options);\n\t}\n\n\tfunction getContent($params, $dynamic) {\n\t\t$content = '';\n\t\t$controller = $params['controller'];\n\t\t$action = $params['action'];\n\t\tunset($params['controller'], $params['action']);\n\t\tinclude_once 'controller/inflector.php';\n\t\t$method = Inflector::camelize($action);\n\t\tif ($ctrl = &NController::factory($controller)) {\n\t\t\tif ($dynamic) {\n\t\t\t\t$content = $this->dynamicPHP($ctrl, $method, NController::getIncludePath($controller), $params);\n\t\t\t} else {\n\t\t\t\t$content = $ctrl->$method($params);\n\t\t\t}\n\t\t\tunset($ctrl);\n\t\t}\n\t\treturn $content;\n\t}\n\n\tfunction dynamicPHP(&$obj, $method, $include_file, $params=array()) {\n\t\t$ret = '';\n\t\tif (is_object($obj) && method_exists($obj, $method)) {\n\t\t\t$ret .= \"<?php\\n\" .\n\t\t\t\t'include_once \\'' . $include_file . '\\';' . \"\\n\" .\n\t\t\t\t'$obj = unserialize(\\'' . str_replace('\\'', '\\\\\\'', serialize($obj)) . '\\');' . \"\\n\" .\n\t\t\t\t'$params = unserialize(\\'' . str_replace('\\'', '\\\\\\'', serialize($params)) . '\\');' . \"\\n\" .\n\t\t\t\t'print $obj->' . $method . '($params);' . \"\\n\" .\n\t\t\t\t\"?>\\n\";\n\t\t}\n\t\treturn $ret;\n\t}\n}\n?>\n"], "fixing_code": ["<?php\nrequire_once 'app/controllers/asset_controller.php';\n/**\n *\n * PHP versions 4 and 5\n *\n * LICENSE: This source file is subject to version 3.01 of the PHP license\n * that is available through the world-wide-web at the following URI:\n * http://www.php.net/license/3_01.txt.  If you did not receive a copy of\n * the PHP License and are unable to obtain it through the web, please\n * send a note to license@php.net so we can mail you a copy immediately.\n *\n * @category   Code Caller Asset\n * @author     Tim Glen <tim@nonfiction.ca>\n * @copyright  2005-2007 nonfiction studios inc.\n * @license    http://www.php.net/license/3_01.txt  PHP License 3.01\n * @version    SVN: $Id$\n * @link       http://www.nterchange.com/\n */\nclass CodeCallerController extends AssetController {\n\tfunction __construct() {\n\t\t$this->name = 'code_caller';\n\t\t$this->versioning = true;\n\t\t$this->base_view_dir = BASE_DIR;\n\t\tparent::__construct();\n\t}\n\n\tfunction render($options) {\n\t\t$in_nterchange = defined('IN_NTERCHANGE')?constant('IN_NTERCHANGE'):false;\n\t\t$in_surftoedit = defined('IN_SURFTOEDIT')?constant('IN_SURFTOEDIT'):false;\n\t\tif (!$in_nterchange || $in_surftoedit) {\n\t\t\t$model = &$this->getDefaultModel();\n\t\t\t$content = $model->content;\n\t\t\trequire_once 'vendor/JSON.php';\n\t\t\t$json = new Services_JSON();\n\t\t\tif ($code = $json->decode($content) && !empty($code)) {\n\t\t\t\tif (isset($code->controller) && isset($code->action)) {\n\t\t\t\t\t$this->getContent((array) $code, $model->dynamic);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile (false !== ($pos = strpos($content, '{call'))) {\n\t\t\t\t\t$pos2 = strpos($content, '}', $pos)+1;\n \t\t\t\t\t$str = substr($content, $pos, $pos2-$pos);\n \t\t\t\t\t// clean up the string\n \t\t\t\t\t$str = trim(str_replace(array('{call ', '}'), '', $str));\n \t\t\t\t\t// replace value\n\t\t\t\t\t$value = '';\n\t\t\t\t\t// find matches\n\t\t\t\t\tpreg_match_all('/\\s?([^=]+)=[\\\"\\']?([^\\\"\\'\\s$]+)[\\\"\\']?/', $str, $matches);\n\t\t\t\t\t// push the matches into an array if they exists\n\t\t\t\t\tif (isset($matches[0])) {\n\t\t\t\t\t\t$params = array();\n\t\t\t\t\t\tfor ($i=0;$i<count($matches[0]);$i++) {\n\t\t\t\t\t\t\t$params[$matches[1][$i]] = $matches[2][$i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$value = $this->getContent($params, $model->dynamic);\n\t\t\t\t\t}\n\t\t\t\t\t$content = substr($content, 0, $pos) . $value . substr($content, $pos2 + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$model->content = $content;\n\t\t\t$this->set($model->toArray());\n\t\t\tunset($json);\n\t\t}\n\t\treturn parent::render($options);\n\t}\n\n\tfunction getContent($params, $dynamic) {\n\t\t$content = '';\n\t\t$controller = $params['controller'];\n\t\t$action = $params['action'];\n\t\tunset($params['controller'], $params['action']);\n\t\tinclude_once 'controller/inflector.php';\n\t\t$method = Inflector::camelize($action);\n\t\tif ($ctrl = &NController::factory($controller)) {\n\t\t\tif ($dynamic) {\n\t\t\t\t$content = $this->dynamicPHP($ctrl, $method, NController::getIncludePath($controller), $params);\n\t\t\t} else {\n\t\t\t\t$content = $ctrl->$method($params);\n\t\t\t}\n\t\t\tunset($ctrl);\n\t\t}\n\t\treturn $content;\n\t}\n\n\tfunction dynamicPHP(&$obj, $method, $include_file, $params=array()) {\n\t\t$ret = '';\n\t\tif (is_object($obj) && method_exists($obj, $method)) {\n\t\t\t$ret .= '<?php include_once \\'' . $include_file . '\\';';\n\t\t\t$ret .= '$obj = '    . $this->wrapSanitizedSerializer($obj)   . ';';\n\t\t\t$ret .= '$params = ' . $this->wrapSanitizedSerializer($param) . ';';\n\t\t\t$ret .= 'print $obj->' . $method . '($params);';\n\t\t\t$ret .= '?>';\n\t\t}\n\t\treturn $ret;\n\t}\n\n\tprivate function wrapSanitizedSerializer($obj) {\n\t\t$encoded_serialized_string = base64_encode(serialize($obj));\n\t\treturn \"unserialize(base64_decode('$encoded_serialized_string'))\";\n\t}\n}\n?>\n"], "filenames": ["app/controllers/code_caller_controller.php"], "buggy_code_start_loc": [89], "buggy_code_end_loc": [97], "fixing_code_start_loc": [89], "fixing_code_end_loc": [102], "type": "CWE-94", "message": "A vulnerability was found in nterchange up to 4.1.0. It has been rated as critical. This issue affects the function getContent of the file app/controllers/code_caller_controller.php. The manipulation of the argument q with the input %5C%27%29;phpinfo%28%29;/* leads to code injection. The exploit has been disclosed to the public and may be used. Upgrading to version 4.1.1 is able to address this issue. The name of the patch is fba7d89176fba8fe289edd58835fe45080797d99. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217187.", "other": {"cve": {"id": "CVE-2015-10009", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-02T16:15:10.417", "lastModified": "2023-01-09T18:37:55.337", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in nterchange up to 4.1.0. It has been rated as critical. This issue affects the function getContent of the file app/controllers/code_caller_controller.php. The manipulation of the argument q with the input %5C%27%29;phpinfo%28%29;/* leads to code injection. The exploit has been disclosed to the public and may be used. Upgrading to version 4.1.1 is able to address this issue. The name of the patch is fba7d89176fba8fe289edd58835fe45080797d99. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217187."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.2}, "baseSeverity": "MEDIUM", "exploitabilityScore": 5.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:nonfiction:nterchange:*:*:*:*:*:*:*:*", "versionEndExcluding": "4.1.1", "matchCriteriaId": "D2DF0104-8E8D-492C-A592-DD3B41935811"}]}]}], "references": [{"url": "https://github.com/nonfiction/nterchange_backend/commit/fba7d89176fba8fe289edd58835fe45080797d99", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/nonfiction/nterchange_backend/releases/tag/4.1.1", "source": "cna@vuldb.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217187", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217187", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/nonfiction/nterchange_backend/commit/fba7d89176fba8fe289edd58835fe45080797d99"}}