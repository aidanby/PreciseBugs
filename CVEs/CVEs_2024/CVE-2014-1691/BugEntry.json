{"buggy_code": ["<?php\n/**\n * Copyright 2009-2013 Horde LLC (http://www.horde.org/)\n *\n * See the enclosed file COPYING for license information (LGPL). If you\n * did not receive this file, see http://www.horde.org/licenses/lgpl21.\n *\n * @category  Horde\n * @copyright 2009-2013 Horde LLC\n * @license   http://www.horde.org/licenses/lgpl21 LGPL 2.1\n * @package   Util\n */\n\n/**\n * An OO-way to access form variables.\n *\n * @author    Robert E. Coyle <robertecoyle@hotmail.com>\n * @author    Chuck Hagenbuch <chuck@horde.org>\n * @author    Michael Slusarz <slusarz@horde.org>\n * @category  Horde\n * @copyright 2009-2013 Horde LLC\n * @license   http://www.horde.org/licenses/lgpl21 LGPL 2.1\n * @package   Util\n */\nclass Horde_Variables implements ArrayAccess, Countable, IteratorAggregate\n{\n    /**\n     * The list of expected variables.\n     *\n     * @var array\n     */\n    protected $_expected = array();\n\n    /**\n     * Has the input been sanitized?\n     *\n     * @var boolean\n     */\n    protected $_sanitized = false;\n\n    /**\n     * Array of form variables.\n     *\n     * @var array\n     */\n    protected $_vars;\n\n    /**\n     * Returns a Horde_Variables object populated with the form input.\n     *\n     * @param string $sanitize  Sanitize the input variables?\n     *\n     * @return Horde_Variables  Variables object.\n     */\n    static public function getDefaultVariables($sanitize = false)\n    {\n        return new self(null, $sanitize);\n    }\n\n    /**\n     * Constructor.\n     *\n     * @param array $vars       The list of form variables (if null, defaults\n     *                          to PHP's $_REQUEST value).\n     * @param string $sanitize  Sanitize the input variables?\n     */\n    public function __construct($vars = array(), $sanitize = false)\n    {\n        if (is_null($vars)) {\n            $request_copy = $_REQUEST;\n            $vars = Horde_Util::dispelMagicQuotes($request_copy);\n        }\n\n        if (isset($vars['_formvars'])) {\n            $this->_expected = @unserialize($vars['_formvars']);\n            unset($vars['_formvars']);\n        }\n\n        $this->_vars = $vars;\n\n        if ($sanitize) {\n            $this->sanitize();\n        }\n    }\n\n    /**\n     * Sanitize the form input.\n     */\n    public function sanitize()\n    {\n        if (!$this->_sanitized) {\n            foreach (array_keys($this->_vars) as $key) {\n                $this->$key = $this->filter($key);\n            }\n            $this->_sanitized = true;\n        }\n    }\n\n    /**\n     * Alias of isset().\n     *\n     * @see __isset()\n     */\n    public function exists($varname)\n    {\n        return isset($this->$varname);\n    }\n\n    /**\n     * isset() implementation.\n     *\n     * @param string $varname  The form variable name.\n     *\n     * @return boolean  Does $varname form variable exist?\n     */\n    public function __isset($varname)\n    {\n        return count($this->_expected)\n            ? $this->_getExists($this->_expected, $varname, $value)\n            : $this->_getExists($this->_vars, $varname, $value);\n    }\n\n    /**\n     * Implements isset() for ArrayAccess interface.\n     *\n     * @see __isset()\n     */\n    public function offsetExists($field)\n    {\n        return $this->__isset($field);\n    }\n\n    /**\n     * Returns the value of a given form variable.\n     *\n     * @param string $varname  The form variable name.\n     * @param string $default  The default form variable value.\n     *\n     * @return mixed  The form variable, or $default if it doesn't exist.\n     */\n    public function get($varname, $default = null)\n    {\n        return $this->_getExists($this->_vars, $varname, $value)\n            ? $value\n            : $default;\n    }\n\n    /**\n     * Returns the value of a given form variable.\n     *\n     * @param string $varname  The form variable name.\n     *\n     * @return mixed  The form variable, or null if it doesn't exist.\n     */\n    public function __get($varname)\n    {\n        $this->_getExists($this->_vars, $varname, $value);\n        return $value;\n    }\n\n    /**\n     * Implements getter for ArrayAccess interface.\n     *\n     * @see __get()\n     */\n    public function offsetGet($field)\n    {\n        return $this->__get($field);\n    }\n\n    /**\n     * Given a variable name, returns the value and sets a variable indicating\n     * whether the value exists in the form data.\n     *\n     * @param string $varname   The form variable name.\n     * @param boolean &$exists  Reference to variable that will indicate\n     *                          whether $varname existed in form data.\n     *\n     * @return mixed  The form variable, or null if it doesn't exist.\n     */\n    public function getExists($varname, &$exists)\n    {\n        $exists = $this->_getExists($this->_vars, $varname, $value);\n        return $value;\n    }\n\n    /**\n     * Sets the value of a given form variable.\n     *\n     * @see __set()\n     */\n    public function set($varname, $value)\n    {\n        $this->$varname = $value;\n    }\n\n    /**\n     * Sets the value of a given form variable.\n     *\n     * @param string $varname  The form variable name.\n     * @param mixed $value     The value to set.\n     */\n    public function __set($varname, $value)\n    {\n        $keys = array();\n\n        if (Horde_Array::getArrayParts($varname, $base, $keys)) {\n            array_unshift($keys, $base);\n            $place = &$this->_vars;\n            $i = count($keys);\n\n            while ($i--) {\n                $key = array_shift($keys);\n                if (!isset($place[$key])) {\n                    $place[$key] = array();\n                }\n                $place = &$place[$key];\n            }\n\n            $place = $value;\n        } else {\n            $this->_vars[$varname] = $value;\n        }\n    }\n\n    /**\n     * Implements setter for ArrayAccess interface.\n     *\n     * @see __set()\n     */\n    public function offsetSet($field, $value)\n    {\n        $this->__set($field, $value);\n    }\n\n    /**\n     * Deletes a given form variable.\n     *\n     * @see __unset()\n     */\n    public function remove($varname)\n    {\n        unset($this->$varname);\n    }\n\n    /**\n     * Deletes a given form variable.\n     *\n     * @param string $varname  The form variable name.\n     */\n    public function __unset($varname)\n    {\n        Horde_Array::getArrayParts($varname, $base, $keys);\n\n        if (is_null($base)) {\n            unset($this->_vars[$varname]);\n        } else {\n            $ptr = &$this->_vars[$base];\n            $end = count($keys) - 1;\n            foreach ($keys as $key => $val) {\n                if (!isset($ptr[$val])) {\n                    break;\n                }\n                if ($end == $key) {\n                    array_splice($ptr, array_search($val, array_keys($ptr)), 1);\n                } else {\n                    $ptr = &$ptr[$val];\n                }\n            }\n        }\n    }\n\n    /**\n     * Implements unset() for ArrayAccess interface.\n     *\n     * @see __unset()\n     */\n    public function offsetUnset($field)\n    {\n        $this->__unset($field);\n    }\n\n    /**\n     * Merges a list of variables into the current form variable list.\n     *\n     * @param array $vars  Form variables.\n     */\n    public function merge($vars)\n    {\n        foreach ($vars as $varname => $value) {\n            $this->$varname = $value;\n        }\n    }\n\n    /**\n     * Set $varname to $value ONLY if it's not already present.\n     *\n     * @param string $varname  The form variable name.\n     * @param mixed $value     The value to set.\n     *\n     * @return boolean  True if the value was altered.\n     */\n    public function add($varname, $value)\n    {\n        if ($this->exists($varname)) {\n            return false;\n        }\n\n        $this->_vars[$varname] = $value;\n        return true;\n    }\n\n    /**\n     * Filters a form value so that it can be used in HTML output.\n     *\n     * @param string $varname  The form variable name.\n     *\n     * @return mixed  The filtered variable, or null if it doesn't exist.\n     */\n    public function filter($varname)\n    {\n        $val = $this->$varname;\n\n        if (is_null($val) || $this->_sanitized) {\n            return $val;\n        }\n\n        return is_array($val)\n            ? filter_var_array($val, FILTER_SANITIZE_STRING)\n            : filter_var($val, FILTER_SANITIZE_STRING);\n    }\n\n    /* Protected methods. */\n\n    /**\n     * Fetch the requested variable ($varname) into $value, and return\n     * whether or not the variable was set in $array.\n     *\n     * @param array $array     The array to search in (usually either\n     *                         $this->_vars or $this->_expected).\n     * @param string $varname  The name of the variable to look for.\n     * @param mixed &$value    $varname's value gets assigned to this variable.\n     *\n     * @return boolean  Whether or not the variable was set (or, if we've\n     *                  checked $this->_expected, should have been set).\n     */\n    protected function _getExists($array, $varname, &$value)\n    {\n        if (Horde_Array::getArrayParts($varname, $base, $keys)) {\n            if (!isset($array[$base])) {\n                $value = null;\n                return false;\n            }\n\n            $searchspace = &$array[$base];\n            $i = count($keys);\n\n            while ($i--) {\n                $key = array_shift($keys);\n                if (!isset($searchspace[$key])) {\n                    $value = null;\n                    return false;\n                }\n                $searchspace = &$searchspace[$key];\n            }\n            $value = $searchspace;\n\n            return true;\n        }\n\n        $value = isset($array[$varname])\n            ? $array[$varname]\n            : null;\n\n        return !is_null($value);\n    }\n\n    /* Countable methods. */\n\n    /**\n     */\n    public function count()\n    {\n        return count($this->_vars);\n    }\n\n    /* IteratorAggregate method. */\n\n    public function getIterator()\n    {\n        return new ArrayIterator($this->_vars);\n    }\n\n}\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<package packagerversion=\"1.9.2\" version=\"2.0\" xmlns=\"http://pear.php.net/dtd/package-2.0\" xmlns:tasks=\"http://pear.php.net/dtd/tasks-1.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd\">\n <name>Horde_Util</name>\n <channel>pear.horde.org</channel>\n <extends>Util</extends>\n <summary>Horde Utility Libraries</summary>\n <description>These classes provide functionality useful for all kind of applications.</description>\n <lead>\n  <name>Chuck Hagenbuch</name>\n  <user>chuck</user>\n  <email>chuck@horde.org</email>\n  <active>yes</active>\n </lead>\n <lead>\n  <name>Jan Schneider</name>\n  <user>jan</user>\n  <email>jan@horde.org</email>\n  <active>yes</active>\n </lead>\n <developer>\n  <name>Michael Slusarz</name>\n  <user>slusarz</user>\n  <email>slusarz@horde.org</email>\n  <active>yes</active>\n </developer>\n <date>2013-05-06</date>\n <time>19:34:35</time>\n <version>\n  <release>2.2.3</release>\n  <api>2.2.0</api>\n </version>\n <stability>\n  <release>stable</release>\n  <api>stable</api>\n </stability>\n <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n <notes>\n* \n </notes>\n <contents>\n  <dir baseinstalldir=\"/\" name=\"/\">\n   <dir name=\"doc\">\n    <dir name=\"Horde\">\n     <dir name=\"Util\">\n      <file name=\"COPYING\" role=\"doc\" />\n      <file name=\"UPGRADING\" role=\"doc\" />\n     </dir> <!-- /doc/Horde/Util -->\n    </dir> <!-- /doc/Horde -->\n   </dir> <!-- /doc -->\n   <dir name=\"lib\">\n    <dir name=\"Horde\">\n     <dir name=\"Array\">\n      <dir name=\"Sort\">\n       <file name=\"Helper.php\" role=\"php\" />\n      </dir> <!-- /lib/Horde/Array/Sort -->\n     </dir> <!-- /lib/Horde/Array -->\n     <file name=\"Array.php\" role=\"php\" />\n     <file name=\"Domhtml.php\" role=\"php\" />\n     <file name=\"String.php\" role=\"php\" />\n     <file name=\"Util.php\" role=\"php\" />\n     <file name=\"Variables.php\" role=\"php\" />\n    </dir> <!-- /lib/Horde -->\n   </dir> <!-- /lib -->\n   <dir name=\"test\">\n    <dir name=\"Horde\">\n     <dir name=\"Util\">\n      <dir name=\"fixtures\">\n       <file name=\"domhtml_test.html\" role=\"test\" />\n      </dir> <!-- /test/Horde/Util/fixtures -->\n      <file name=\"AllTests.php\" role=\"test\" />\n      <file name=\"ArrayTest.php\" role=\"test\" />\n      <file name=\"bootstrap.php\" role=\"test\" />\n      <file name=\"DomhtmlTest.php\" role=\"test\" />\n      <file name=\"phpunit.xml\" role=\"test\" />\n      <file name=\"StringTest.php\" role=\"test\" />\n      <file name=\"UtilTest.php\" role=\"test\" />\n      <file name=\"VariablesTest.php\" role=\"test\" />\n     </dir> <!-- /test/Horde/Util -->\n    </dir> <!-- /test/Horde -->\n   </dir> <!-- /test -->\n  </dir> <!-- / -->\n </contents>\n <dependencies>\n  <required>\n   <php>\n    <min>5.3.0</min>\n   </php>\n   <pearinstaller>\n    <min>1.7.0</min>\n   </pearinstaller>\n   <extension>\n    <name>dom</name>\n   </extension>\n  </required>\n  <optional>\n   <package>\n    <name>Horde_Imap_Client</name>\n    <channel>pear.horde.org</channel>\n    <min>2.0.0</min>\n    <max>3.0.0alpha1</max>\n    <exclude>3.0.0alpha1</exclude>\n   </package>\n   <package>\n    <name>Horde_Test</name>\n    <channel>pear.horde.org</channel>\n    <min>2.1.0</min>\n    <max>3.0.0alpha1</max>\n    <exclude>3.0.0alpha1</exclude>\n   </package>\n   <extension>\n    <name>ctype</name>\n   </extension>\n   <extension>\n    <name>filter</name>\n   </extension>\n   <extension>\n    <name>iconv</name>\n   </extension>\n   <extension>\n    <name>mbstring</name>\n   </extension>\n   <extension>\n    <name>xml</name>\n   </extension>\n  </optional>\n </dependencies>\n <phprelease>\n  <filelist>\n   <install as=\"COPYING\" name=\"doc/Horde/Util/COPYING\" />\n   <install as=\"UPGRADING\" name=\"doc/Horde/Util/UPGRADING\" />\n   <install as=\"Horde/Array.php\" name=\"lib/Horde/Array.php\" />\n   <install as=\"Horde/Domhtml.php\" name=\"lib/Horde/Domhtml.php\" />\n   <install as=\"Horde/String.php\" name=\"lib/Horde/String.php\" />\n   <install as=\"Horde/Util.php\" name=\"lib/Horde/Util.php\" />\n   <install as=\"Horde/Variables.php\" name=\"lib/Horde/Variables.php\" />\n   <install as=\"Horde/Array/Sort/Helper.php\" name=\"lib/Horde/Array/Sort/Helper.php\" />\n   <install as=\"Horde/Util/AllTests.php\" name=\"test/Horde/Util/AllTests.php\" />\n   <install as=\"Horde/Util/ArrayTest.php\" name=\"test/Horde/Util/ArrayTest.php\" />\n   <install as=\"Horde/Util/bootstrap.php\" name=\"test/Horde/Util/bootstrap.php\" />\n   <install as=\"Horde/Util/DomhtmlTest.php\" name=\"test/Horde/Util/DomhtmlTest.php\" />\n   <install as=\"Horde/Util/phpunit.xml\" name=\"test/Horde/Util/phpunit.xml\" />\n   <install as=\"Horde/Util/StringTest.php\" name=\"test/Horde/Util/StringTest.php\" />\n   <install as=\"Horde/Util/UtilTest.php\" name=\"test/Horde/Util/UtilTest.php\" />\n   <install as=\"Horde/Util/VariablesTest.php\" name=\"test/Horde/Util/VariablesTest.php\" />\n   <install as=\"Horde/Util/fixtures/domhtml_test.html\" name=\"test/Horde/Util/fixtures/domhtml_test.html\" />\n   </filelist>\n </phprelease>\n <changelog>\n  <release>\n   <version>\n    <release>0.0.1</release>\n    <api>0.0.1</api>\n   </version>\n   <stability>\n    <release>alpha</release>\n    <api>alpha</api>\n   </stability>\n   <date>2003-10-28</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\nInitial release as a PEAR package\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>0.0.2</release>\n    <api>0.0.2</api>\n   </version>\n   <stability>\n    <release>alpha</release>\n    <api>alpha</api>\n   </stability>\n   <date>2006-05-08</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\nConverted to package.xml 2.0 for pear.horde.org\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>0.1.0</release>\n    <api>0.1.0</api>\n   </version>\n   <stability>\n    <release>beta</release>\n    <api>beta</api>\n   </stability>\n   <date>2008-09-25</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* Added magic PHP5 methods to the Variables class.\n* Added array_merge_recursive_overwrite() to Horde_Array().\n* Fixed a bug in Horde_Array::arraySort where auto-detecting the first key failed.\n* Added sorter functions for array keys.\n* Removed use of array_unique().\n* Cleaned up addParameter() in the Util class.\n* Implemented a much more efficient, yet safer file wiping algorithm.\n* Fixed Util::addParameter when it is passed a base URL that contains an urlencoded ampersand.\n* Added a parameter to Util::nocacheUrl() to not encode url.\n* Added Util::getPathInfo().\n* Signed parameters to go.php with an HMAC based on a new secret key configuration value, to prevent using go.php as an open referrer.\n* Made logout tokens only valid for a configurable length of time.\n* Made it possible to use String.php without having any other files available.\n* Use utf8_decode() in String::length() if possible.\n* Always use preg_match() in String::regexMatch().\n* Workaround for korean messages in a non-standard charset.\n* Fixed String::substr() length calculations.\n* Added multibyte-safe String::wordwrap() method.\n* Added parameter to use wordwrap() for line folding.\n* Use C as the portable locale (Bug #6194).\n* Don&apos;t use utf8_encode/decode on very large strings if other options are available. (Bug #6660)\n* Fixed order of checks in String::convertCharset (Bug #6794).\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.0alpha1</release>\n    <api>1.0.0</api>\n   </version>\n   <stability>\n    <release>alpha</release>\n    <api>alpha</api>\n   </stability>\n   <date>2011-03-08</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* First alpha release for Horde 4.\n* Added Horde_String::rpos().\n* Renamed Horde_Array::array_merge_recursive_overwrite() to Horde_Array::replaceRecursive().\n* Added Horde_String::common().\n* Added Horde_Domhtml::.\n* Removed Horde_Util::assertDriverConfig().\n* Removed Horde_Util::bufferOutput().\n* Removed Horde_Util::uriB64Encode() and Horde_Util::uriB64Decode().\n* Removed Horde_Util::strftime2date() and Horde_Util::date2strftime().\n* Removed Horde_Util::closeWindowJs() and Horde_Util::nocacheUrl().\n* Added Horde_String::convertToUtf8().\n* Added Horde_Util::abbreviate().\n* Removed Horde_Array::combine() and Horde_Util::hmac().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.0beta1</release>\n    <api>1.0.0</api>\n   </version>\n   <stability>\n    <release>beta</release>\n    <api>beta</api>\n   </stability>\n   <date>2011-03-16</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* First beta release for Horde 4.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.0RC1</release>\n    <api>1.0.0</api>\n   </version>\n   <stability>\n    <release>beta</release>\n    <api>beta</api>\n   </stability>\n   <date>2011-03-22</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* First release candidate for Horde 4.\n* [mms] Tweak loading HTML documents (encodings) in Horde_Domhtml.\n* [mms] Added Horde_Domhtml#returnBody().\n* [mms] Added Domhtml unit tests.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.0RC2</release>\n    <api>1.0.0</api>\n   </version>\n   <stability>\n    <release>beta</release>\n    <api>beta</api>\n   </stability>\n   <date>2011-03-29</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* Second release candidate for Horde 4.\n* Fix parsing ISO-8859-15 data with Horde_Domhtml (Bug #9714).\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.0</release>\n    <api>1.0.0</api>\n   </version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api>\n   </stability>\n   <date>2011-04-06</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* First stable release for Horde 4.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.1</release>\n    <api>1.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2011-04-20</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [jan] Fix wrapping of several follow-up lines with existing line breaks.\n* [jan] Fix creating temporary files with open_basedir restrictions.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.2</release>\n    <api>1.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2011-05-03</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] In Horde_Variables, operate on a copy of the $_REQUEST variable.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.3</release>\n    <api>1.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2011-06-01</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Don&apos;t try to use dl() in PHP 5.3+.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.4</release>\n    <api>1.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2011-06-14</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [jan] Unescape escaped quotes when importing CSV data.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.5</release>\n    <api>1.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2011-07-27</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [jan] Fix removing too many backslashes with magic quotes enabled (Bug #10149).\n* [jan] Fix reading CSV data with PHP &lt; 5.3.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.6</release>\n    <api>1.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2011-10-11</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [jan] Speed up Horde_String::substr() (Evert Pot, Request #8627).\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.1.0</release>\n    <api>1.1.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2011-12-06</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Add Horde_String::validUtf8().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.2.0</release>\n    <api>1.2.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-01-17</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Add Horde_Variables#filter().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.3.0</release>\n    <api>1.3.0</api>\n   </version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-03-20</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [jan] Implement ArrayAccess in Horde_Variables.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.3.1</release>\n    <api>1.3.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-05-29</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Fix Horde_String::validUtf8() to workaround PHP/PCRE bug where segfault will occur on input strings &gt; ~5000 characters\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.4.0</release>\n    <api>1.4.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-06-29</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Add Horde_String::trimUtf8Bom().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.4.1</release>\n    <api>1.4.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-06-29</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n*\n   </notes>\n  </release>\n  <release>\n   <date>2012-07-06</date>\n   <time>14:00:48</time>\n   <version>\n    <release>2.0.0alpha1</release>\n    <api>2.0.0alpha1</api>\n   </version>\n   <stability>\n    <release>alpha</release>\n    <api>alpha</api>\n   </stability>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* First alpha release for Horde 5.\n* [mms] Removed e-mail array manipulation methods (Horde_Mail package now provides this feature).\n* [mms] Removed Horde_Util::getCsv() (moved to Horde_Data package).\n* [mms] Add iteration to Horde_Domhtml object.\n* [jan] Remove Horde_Util::getTempDir().\n* [jan] Remove Horde_Array::replaceRecursive().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.0.0beta1</release>\n    <api>2.0.0beta1</api></version>\n   <stability>\n    <release>beta</release>\n    <api>beta</api></stability>\n   <date>2012-07-19</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* First beta release for Horde 5.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.0.0beta2</release>\n    <api>2.0.0beta1</api></version>\n   <stability>\n    <release>beta</release>\n    <api>beta</api></stability>\n   <date>2012-10-12</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Remove Horde_Util::addParameter() and Horde_Util::removeParameter().\n* [mms] Remove Horde_Util::cloneObject().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.0.0</release>\n    <api>2.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-10-30</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* First stable release for Horde 5.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.0.1</release>\n    <api>2.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-11-19</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Use new Horde_Test layout.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.0.2</release>\n    <api>2.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-12-20</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Convert Horde_String#validUtf8() from a preg-regex to a string iterator to eliminate PCRE issues relating to stack sizes (Bug #11899).\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.0.3</release>\n    <api>2.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2013-01-09</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Fix validating certain strings of UTF-8 data (Bug #11930).\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.1.0</release>\n    <api>2.1.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2013-02-11</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Added &apos;charset&apos; and &apos;metacharset&apos; parameters to returnHtml().\n* [mms] Added Horde_Domhtml#getCharset() to get best-guess charset of current encoding within the DOM object.\n* [mms] Fix inserting HEAD into HTML document with Horde_Domhtml#getHead() if it doesn&apos;t already exist in the document.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.2.0</release>\n    <api>2.2.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2013-02-17</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Can&apos;t add charset directly to HTML document or else DOM will alter document when generating HTML.\n* [mms] Added Horde_Domhtml#getBody().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.2.1</release>\n    <api>2.2.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2013-03-05</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Simplify Horde_Variables iterator.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.2.2</release>\n    <api>2.2.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2013-05-06</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Fix Horde_Domhtml#returnBody().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.2.3</release>\n    <api>2.2.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2013-05-06</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* \n   </notes>\n  </release>\n </changelog>\n</package>\n"], "fixing_code": ["<?php\n/**\n * Copyright 2009-2013 Horde LLC (http://www.horde.org/)\n *\n * See the enclosed file COPYING for license information (LGPL). If you\n * did not receive this file, see http://www.horde.org/licenses/lgpl21.\n *\n * @category  Horde\n * @copyright 2009-2013 Horde LLC\n * @license   http://www.horde.org/licenses/lgpl21 LGPL 2.1\n * @package   Util\n */\n\n/**\n * An OO-way to access form variables.\n *\n * @author    Robert E. Coyle <robertecoyle@hotmail.com>\n * @author    Chuck Hagenbuch <chuck@horde.org>\n * @author    Michael Slusarz <slusarz@horde.org>\n * @category  Horde\n * @copyright 2009-2013 Horde LLC\n * @license   http://www.horde.org/licenses/lgpl21 LGPL 2.1\n * @package   Util\n */\nclass Horde_Variables implements ArrayAccess, Countable, IteratorAggregate\n{\n    /**\n     * The list of expected variables.\n     *\n     * @var array\n     */\n    protected $_expected = array();\n\n    /**\n     * Has the input been sanitized?\n     *\n     * @var boolean\n     */\n    protected $_sanitized = false;\n\n    /**\n     * Array of form variables.\n     *\n     * @var array\n     */\n    protected $_vars;\n\n    /**\n     * Returns a Horde_Variables object populated with the form input.\n     *\n     * @param string $sanitize  Sanitize the input variables?\n     *\n     * @return Horde_Variables  Variables object.\n     */\n    static public function getDefaultVariables($sanitize = false)\n    {\n        return new self(null, $sanitize);\n    }\n\n    /**\n     * Constructor.\n     *\n     * @param array $vars       The list of form variables (if null, defaults\n     *                          to PHP's $_REQUEST value). If '_formvars'\n     *                          exists, it must be a JSON encoded array that\n     *                          contains the list of allowed form variables.\n     * @param string $sanitize  Sanitize the input variables?\n     */\n    public function __construct($vars = array(), $sanitize = false)\n    {\n        if (is_null($vars)) {\n            $request_copy = $_REQUEST;\n            $vars = Horde_Util::dispelMagicQuotes($request_copy);\n        }\n\n        if (isset($vars['_formvars'])) {\n            $this->_expected = @json_decode($vars['_formvars'], true);\n            unset($vars['_formvars']);\n        }\n\n        $this->_vars = $vars;\n\n        if ($sanitize) {\n            $this->sanitize();\n        }\n    }\n\n    /**\n     * Sanitize the form input.\n     */\n    public function sanitize()\n    {\n        if (!$this->_sanitized) {\n            foreach (array_keys($this->_vars) as $key) {\n                $this->$key = $this->filter($key);\n            }\n            $this->_sanitized = true;\n        }\n    }\n\n    /**\n     * Alias of isset().\n     *\n     * @see __isset()\n     */\n    public function exists($varname)\n    {\n        return isset($this->$varname);\n    }\n\n    /**\n     * isset() implementation.\n     *\n     * @param string $varname  The form variable name.\n     *\n     * @return boolean  Does $varname form variable exist?\n     */\n    public function __isset($varname)\n    {\n        return count($this->_expected)\n            ? $this->_getExists($this->_expected, $varname, $value)\n            : $this->_getExists($this->_vars, $varname, $value);\n    }\n\n    /**\n     * Implements isset() for ArrayAccess interface.\n     *\n     * @see __isset()\n     */\n    public function offsetExists($field)\n    {\n        return $this->__isset($field);\n    }\n\n    /**\n     * Returns the value of a given form variable.\n     *\n     * @param string $varname  The form variable name.\n     * @param string $default  The default form variable value.\n     *\n     * @return mixed  The form variable, or $default if it doesn't exist.\n     */\n    public function get($varname, $default = null)\n    {\n        return $this->_getExists($this->_vars, $varname, $value)\n            ? $value\n            : $default;\n    }\n\n    /**\n     * Returns the value of a given form variable.\n     *\n     * @param string $varname  The form variable name.\n     *\n     * @return mixed  The form variable, or null if it doesn't exist.\n     */\n    public function __get($varname)\n    {\n        $this->_getExists($this->_vars, $varname, $value);\n        return $value;\n    }\n\n    /**\n     * Implements getter for ArrayAccess interface.\n     *\n     * @see __get()\n     */\n    public function offsetGet($field)\n    {\n        return $this->__get($field);\n    }\n\n    /**\n     * Given a variable name, returns the value and sets a variable indicating\n     * whether the value exists in the form data.\n     *\n     * @param string $varname   The form variable name.\n     * @param boolean &$exists  Reference to variable that will indicate\n     *                          whether $varname existed in form data.\n     *\n     * @return mixed  The form variable, or null if it doesn't exist.\n     */\n    public function getExists($varname, &$exists)\n    {\n        $exists = $this->_getExists($this->_vars, $varname, $value);\n        return $value;\n    }\n\n    /**\n     * Sets the value of a given form variable.\n     *\n     * @see __set()\n     */\n    public function set($varname, $value)\n    {\n        $this->$varname = $value;\n    }\n\n    /**\n     * Sets the value of a given form variable.\n     *\n     * @param string $varname  The form variable name.\n     * @param mixed $value     The value to set.\n     */\n    public function __set($varname, $value)\n    {\n        $keys = array();\n\n        if (Horde_Array::getArrayParts($varname, $base, $keys)) {\n            array_unshift($keys, $base);\n            $place = &$this->_vars;\n            $i = count($keys);\n\n            while ($i--) {\n                $key = array_shift($keys);\n                if (!isset($place[$key])) {\n                    $place[$key] = array();\n                }\n                $place = &$place[$key];\n            }\n\n            $place = $value;\n        } else {\n            $this->_vars[$varname] = $value;\n        }\n    }\n\n    /**\n     * Implements setter for ArrayAccess interface.\n     *\n     * @see __set()\n     */\n    public function offsetSet($field, $value)\n    {\n        $this->__set($field, $value);\n    }\n\n    /**\n     * Deletes a given form variable.\n     *\n     * @see __unset()\n     */\n    public function remove($varname)\n    {\n        unset($this->$varname);\n    }\n\n    /**\n     * Deletes a given form variable.\n     *\n     * @param string $varname  The form variable name.\n     */\n    public function __unset($varname)\n    {\n        Horde_Array::getArrayParts($varname, $base, $keys);\n\n        if (is_null($base)) {\n            unset($this->_vars[$varname]);\n        } else {\n            $ptr = &$this->_vars[$base];\n            $end = count($keys) - 1;\n            foreach ($keys as $key => $val) {\n                if (!isset($ptr[$val])) {\n                    break;\n                }\n                if ($end == $key) {\n                    array_splice($ptr, array_search($val, array_keys($ptr)), 1);\n                } else {\n                    $ptr = &$ptr[$val];\n                }\n            }\n        }\n    }\n\n    /**\n     * Implements unset() for ArrayAccess interface.\n     *\n     * @see __unset()\n     */\n    public function offsetUnset($field)\n    {\n        $this->__unset($field);\n    }\n\n    /**\n     * Merges a list of variables into the current form variable list.\n     *\n     * @param array $vars  Form variables.\n     */\n    public function merge($vars)\n    {\n        foreach ($vars as $varname => $value) {\n            $this->$varname = $value;\n        }\n    }\n\n    /**\n     * Set $varname to $value ONLY if it's not already present.\n     *\n     * @param string $varname  The form variable name.\n     * @param mixed $value     The value to set.\n     *\n     * @return boolean  True if the value was altered.\n     */\n    public function add($varname, $value)\n    {\n        if ($this->exists($varname)) {\n            return false;\n        }\n\n        $this->_vars[$varname] = $value;\n        return true;\n    }\n\n    /**\n     * Filters a form value so that it can be used in HTML output.\n     *\n     * @param string $varname  The form variable name.\n     *\n     * @return mixed  The filtered variable, or null if it doesn't exist.\n     */\n    public function filter($varname)\n    {\n        $val = $this->$varname;\n\n        if (is_null($val) || $this->_sanitized) {\n            return $val;\n        }\n\n        return is_array($val)\n            ? filter_var_array($val, FILTER_SANITIZE_STRING)\n            : filter_var($val, FILTER_SANITIZE_STRING);\n    }\n\n    /* Protected methods. */\n\n    /**\n     * Fetch the requested variable ($varname) into $value, and return\n     * whether or not the variable was set in $array.\n     *\n     * @param array $array     The array to search in (usually either\n     *                         $this->_vars or $this->_expected).\n     * @param string $varname  The name of the variable to look for.\n     * @param mixed &$value    $varname's value gets assigned to this variable.\n     *\n     * @return boolean  Whether or not the variable was set (or, if we've\n     *                  checked $this->_expected, should have been set).\n     */\n    protected function _getExists($array, $varname, &$value)\n    {\n        if (Horde_Array::getArrayParts($varname, $base, $keys)) {\n            if (!isset($array[$base])) {\n                $value = null;\n                return false;\n            }\n\n            $searchspace = &$array[$base];\n            $i = count($keys);\n\n            while ($i--) {\n                $key = array_shift($keys);\n                if (!isset($searchspace[$key])) {\n                    $value = null;\n                    return false;\n                }\n                $searchspace = &$searchspace[$key];\n            }\n            $value = $searchspace;\n\n            return true;\n        }\n\n        $value = isset($array[$varname])\n            ? $array[$varname]\n            : null;\n\n        return !is_null($value);\n    }\n\n    /* Countable methods. */\n\n    /**\n     */\n    public function count()\n    {\n        return count($this->_vars);\n    }\n\n    /* IteratorAggregate method. */\n\n    public function getIterator()\n    {\n        return new ArrayIterator($this->_vars);\n    }\n\n}\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<package packagerversion=\"1.9.2\" version=\"2.0\" xmlns=\"http://pear.php.net/dtd/package-2.0\" xmlns:tasks=\"http://pear.php.net/dtd/tasks-1.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd\">\n <name>Horde_Util</name>\n <channel>pear.horde.org</channel>\n <extends>Util</extends>\n <summary>Horde Utility Libraries</summary>\n <description>These classes provide functionality useful for all kind of applications.</description>\n <lead>\n  <name>Chuck Hagenbuch</name>\n  <user>chuck</user>\n  <email>chuck@horde.org</email>\n  <active>yes</active>\n </lead>\n <lead>\n  <name>Jan Schneider</name>\n  <user>jan</user>\n  <email>jan@horde.org</email>\n  <active>yes</active>\n </lead>\n <developer>\n  <name>Michael Slusarz</name>\n  <user>slusarz</user>\n  <email>slusarz@horde.org</email>\n  <active>yes</active>\n </developer>\n <date>2013-05-06</date>\n <time>19:34:35</time>\n <version>\n  <release>2.3.0</release>\n  <api>2.3.0</api>\n </version>\n <stability>\n  <release>stable</release>\n  <api>stable</api>\n </stability>\n <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n <notes>\n* [mms] SECURITY: &apos;_formvars&apos; form input must now be JSON encoded, not PHP serialized.\n </notes>\n <contents>\n  <dir baseinstalldir=\"/\" name=\"/\">\n   <dir name=\"doc\">\n    <dir name=\"Horde\">\n     <dir name=\"Util\">\n      <file name=\"COPYING\" role=\"doc\" />\n      <file name=\"UPGRADING\" role=\"doc\" />\n     </dir> <!-- /doc/Horde/Util -->\n    </dir> <!-- /doc/Horde -->\n   </dir> <!-- /doc -->\n   <dir name=\"lib\">\n    <dir name=\"Horde\">\n     <dir name=\"Array\">\n      <dir name=\"Sort\">\n       <file name=\"Helper.php\" role=\"php\" />\n      </dir> <!-- /lib/Horde/Array/Sort -->\n     </dir> <!-- /lib/Horde/Array -->\n     <file name=\"Array.php\" role=\"php\" />\n     <file name=\"Domhtml.php\" role=\"php\" />\n     <file name=\"String.php\" role=\"php\" />\n     <file name=\"Util.php\" role=\"php\" />\n     <file name=\"Variables.php\" role=\"php\" />\n    </dir> <!-- /lib/Horde -->\n   </dir> <!-- /lib -->\n   <dir name=\"test\">\n    <dir name=\"Horde\">\n     <dir name=\"Util\">\n      <dir name=\"fixtures\">\n       <file name=\"domhtml_test.html\" role=\"test\" />\n      </dir> <!-- /test/Horde/Util/fixtures -->\n      <file name=\"AllTests.php\" role=\"test\" />\n      <file name=\"ArrayTest.php\" role=\"test\" />\n      <file name=\"bootstrap.php\" role=\"test\" />\n      <file name=\"DomhtmlTest.php\" role=\"test\" />\n      <file name=\"phpunit.xml\" role=\"test\" />\n      <file name=\"StringTest.php\" role=\"test\" />\n      <file name=\"UtilTest.php\" role=\"test\" />\n      <file name=\"VariablesTest.php\" role=\"test\" />\n     </dir> <!-- /test/Horde/Util -->\n    </dir> <!-- /test/Horde -->\n   </dir> <!-- /test -->\n  </dir> <!-- / -->\n </contents>\n <dependencies>\n  <required>\n   <php>\n    <min>5.3.0</min>\n   </php>\n   <pearinstaller>\n    <min>1.7.0</min>\n   </pearinstaller>\n   <extension>\n    <name>dom</name>\n   </extension>\n  </required>\n  <optional>\n   <package>\n    <name>Horde_Imap_Client</name>\n    <channel>pear.horde.org</channel>\n    <min>2.0.0</min>\n    <max>3.0.0alpha1</max>\n    <exclude>3.0.0alpha1</exclude>\n   </package>\n   <package>\n    <name>Horde_Test</name>\n    <channel>pear.horde.org</channel>\n    <min>2.1.0</min>\n    <max>3.0.0alpha1</max>\n    <exclude>3.0.0alpha1</exclude>\n   </package>\n   <extension>\n    <name>ctype</name>\n   </extension>\n   <extension>\n    <name>filter</name>\n   </extension>\n   <extension>\n    <name>iconv</name>\n   </extension>\n   <extension>\n    <name>json</name>\n   </extension>\n   <extension>\n    <name>mbstring</name>\n   </extension>\n   <extension>\n    <name>xml</name>\n   </extension>\n  </optional>\n </dependencies>\n <phprelease>\n  <filelist>\n   <install as=\"COPYING\" name=\"doc/Horde/Util/COPYING\" />\n   <install as=\"UPGRADING\" name=\"doc/Horde/Util/UPGRADING\" />\n   <install as=\"Horde/Array.php\" name=\"lib/Horde/Array.php\" />\n   <install as=\"Horde/Domhtml.php\" name=\"lib/Horde/Domhtml.php\" />\n   <install as=\"Horde/String.php\" name=\"lib/Horde/String.php\" />\n   <install as=\"Horde/Util.php\" name=\"lib/Horde/Util.php\" />\n   <install as=\"Horde/Variables.php\" name=\"lib/Horde/Variables.php\" />\n   <install as=\"Horde/Array/Sort/Helper.php\" name=\"lib/Horde/Array/Sort/Helper.php\" />\n   <install as=\"Horde/Util/AllTests.php\" name=\"test/Horde/Util/AllTests.php\" />\n   <install as=\"Horde/Util/ArrayTest.php\" name=\"test/Horde/Util/ArrayTest.php\" />\n   <install as=\"Horde/Util/bootstrap.php\" name=\"test/Horde/Util/bootstrap.php\" />\n   <install as=\"Horde/Util/DomhtmlTest.php\" name=\"test/Horde/Util/DomhtmlTest.php\" />\n   <install as=\"Horde/Util/phpunit.xml\" name=\"test/Horde/Util/phpunit.xml\" />\n   <install as=\"Horde/Util/StringTest.php\" name=\"test/Horde/Util/StringTest.php\" />\n   <install as=\"Horde/Util/UtilTest.php\" name=\"test/Horde/Util/UtilTest.php\" />\n   <install as=\"Horde/Util/VariablesTest.php\" name=\"test/Horde/Util/VariablesTest.php\" />\n   <install as=\"Horde/Util/fixtures/domhtml_test.html\" name=\"test/Horde/Util/fixtures/domhtml_test.html\" />\n   </filelist>\n </phprelease>\n <changelog>\n  <release>\n   <version>\n    <release>0.0.1</release>\n    <api>0.0.1</api>\n   </version>\n   <stability>\n    <release>alpha</release>\n    <api>alpha</api>\n   </stability>\n   <date>2003-10-28</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\nInitial release as a PEAR package\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>0.0.2</release>\n    <api>0.0.2</api>\n   </version>\n   <stability>\n    <release>alpha</release>\n    <api>alpha</api>\n   </stability>\n   <date>2006-05-08</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\nConverted to package.xml 2.0 for pear.horde.org\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>0.1.0</release>\n    <api>0.1.0</api>\n   </version>\n   <stability>\n    <release>beta</release>\n    <api>beta</api>\n   </stability>\n   <date>2008-09-25</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* Added magic PHP5 methods to the Variables class.\n* Added array_merge_recursive_overwrite() to Horde_Array().\n* Fixed a bug in Horde_Array::arraySort where auto-detecting the first key failed.\n* Added sorter functions for array keys.\n* Removed use of array_unique().\n* Cleaned up addParameter() in the Util class.\n* Implemented a much more efficient, yet safer file wiping algorithm.\n* Fixed Util::addParameter when it is passed a base URL that contains an urlencoded ampersand.\n* Added a parameter to Util::nocacheUrl() to not encode url.\n* Added Util::getPathInfo().\n* Signed parameters to go.php with an HMAC based on a new secret key configuration value, to prevent using go.php as an open referrer.\n* Made logout tokens only valid for a configurable length of time.\n* Made it possible to use String.php without having any other files available.\n* Use utf8_decode() in String::length() if possible.\n* Always use preg_match() in String::regexMatch().\n* Workaround for korean messages in a non-standard charset.\n* Fixed String::substr() length calculations.\n* Added multibyte-safe String::wordwrap() method.\n* Added parameter to use wordwrap() for line folding.\n* Use C as the portable locale (Bug #6194).\n* Don&apos;t use utf8_encode/decode on very large strings if other options are available. (Bug #6660)\n* Fixed order of checks in String::convertCharset (Bug #6794).\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.0alpha1</release>\n    <api>1.0.0</api>\n   </version>\n   <stability>\n    <release>alpha</release>\n    <api>alpha</api>\n   </stability>\n   <date>2011-03-08</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* First alpha release for Horde 4.\n* Added Horde_String::rpos().\n* Renamed Horde_Array::array_merge_recursive_overwrite() to Horde_Array::replaceRecursive().\n* Added Horde_String::common().\n* Added Horde_Domhtml::.\n* Removed Horde_Util::assertDriverConfig().\n* Removed Horde_Util::bufferOutput().\n* Removed Horde_Util::uriB64Encode() and Horde_Util::uriB64Decode().\n* Removed Horde_Util::strftime2date() and Horde_Util::date2strftime().\n* Removed Horde_Util::closeWindowJs() and Horde_Util::nocacheUrl().\n* Added Horde_String::convertToUtf8().\n* Added Horde_Util::abbreviate().\n* Removed Horde_Array::combine() and Horde_Util::hmac().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.0beta1</release>\n    <api>1.0.0</api>\n   </version>\n   <stability>\n    <release>beta</release>\n    <api>beta</api>\n   </stability>\n   <date>2011-03-16</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* First beta release for Horde 4.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.0RC1</release>\n    <api>1.0.0</api>\n   </version>\n   <stability>\n    <release>beta</release>\n    <api>beta</api>\n   </stability>\n   <date>2011-03-22</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* First release candidate for Horde 4.\n* [mms] Tweak loading HTML documents (encodings) in Horde_Domhtml.\n* [mms] Added Horde_Domhtml#returnBody().\n* [mms] Added Domhtml unit tests.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.0RC2</release>\n    <api>1.0.0</api>\n   </version>\n   <stability>\n    <release>beta</release>\n    <api>beta</api>\n   </stability>\n   <date>2011-03-29</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* Second release candidate for Horde 4.\n* Fix parsing ISO-8859-15 data with Horde_Domhtml (Bug #9714).\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.0</release>\n    <api>1.0.0</api>\n   </version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api>\n   </stability>\n   <date>2011-04-06</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* First stable release for Horde 4.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.1</release>\n    <api>1.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2011-04-20</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [jan] Fix wrapping of several follow-up lines with existing line breaks.\n* [jan] Fix creating temporary files with open_basedir restrictions.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.2</release>\n    <api>1.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2011-05-03</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] In Horde_Variables, operate on a copy of the $_REQUEST variable.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.3</release>\n    <api>1.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2011-06-01</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Don&apos;t try to use dl() in PHP 5.3+.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.4</release>\n    <api>1.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2011-06-14</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [jan] Unescape escaped quotes when importing CSV data.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.5</release>\n    <api>1.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2011-07-27</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [jan] Fix removing too many backslashes with magic quotes enabled (Bug #10149).\n* [jan] Fix reading CSV data with PHP &lt; 5.3.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.0.6</release>\n    <api>1.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2011-10-11</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [jan] Speed up Horde_String::substr() (Evert Pot, Request #8627).\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.1.0</release>\n    <api>1.1.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2011-12-06</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Add Horde_String::validUtf8().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.2.0</release>\n    <api>1.2.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-01-17</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Add Horde_Variables#filter().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.3.0</release>\n    <api>1.3.0</api>\n   </version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-03-20</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [jan] Implement ArrayAccess in Horde_Variables.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.3.1</release>\n    <api>1.3.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-05-29</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Fix Horde_String::validUtf8() to workaround PHP/PCRE bug where segfault will occur on input strings &gt; ~5000 characters\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.4.0</release>\n    <api>1.4.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-06-29</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Add Horde_String::trimUtf8Bom().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>1.4.1</release>\n    <api>1.4.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-06-29</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n*\n   </notes>\n  </release>\n  <release>\n   <date>2012-07-06</date>\n   <time>14:00:48</time>\n   <version>\n    <release>2.0.0alpha1</release>\n    <api>2.0.0alpha1</api>\n   </version>\n   <stability>\n    <release>alpha</release>\n    <api>alpha</api>\n   </stability>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* First alpha release for Horde 5.\n* [mms] Removed e-mail array manipulation methods (Horde_Mail package now provides this feature).\n* [mms] Removed Horde_Util::getCsv() (moved to Horde_Data package).\n* [mms] Add iteration to Horde_Domhtml object.\n* [jan] Remove Horde_Util::getTempDir().\n* [jan] Remove Horde_Array::replaceRecursive().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.0.0beta1</release>\n    <api>2.0.0beta1</api></version>\n   <stability>\n    <release>beta</release>\n    <api>beta</api></stability>\n   <date>2012-07-19</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* First beta release for Horde 5.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.0.0beta2</release>\n    <api>2.0.0beta1</api></version>\n   <stability>\n    <release>beta</release>\n    <api>beta</api></stability>\n   <date>2012-10-12</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Remove Horde_Util::addParameter() and Horde_Util::removeParameter().\n* [mms] Remove Horde_Util::cloneObject().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.0.0</release>\n    <api>2.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-10-30</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* First stable release for Horde 5.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.0.1</release>\n    <api>2.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-11-19</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Use new Horde_Test layout.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.0.2</release>\n    <api>2.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2012-12-20</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Convert Horde_String#validUtf8() from a preg-regex to a string iterator to eliminate PCRE issues relating to stack sizes (Bug #11899).\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.0.3</release>\n    <api>2.0.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2013-01-09</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Fix validating certain strings of UTF-8 data (Bug #11930).\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.1.0</release>\n    <api>2.1.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2013-02-11</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Added &apos;charset&apos; and &apos;metacharset&apos; parameters to returnHtml().\n* [mms] Added Horde_Domhtml#getCharset() to get best-guess charset of current encoding within the DOM object.\n* [mms] Fix inserting HEAD into HTML document with Horde_Domhtml#getHead() if it doesn&apos;t already exist in the document.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.2.0</release>\n    <api>2.2.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2013-02-17</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Can&apos;t add charset directly to HTML document or else DOM will alter document when generating HTML.\n* [mms] Added Horde_Domhtml#getBody().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.2.1</release>\n    <api>2.2.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2013-03-05</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Simplify Horde_Variables iterator.\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.2.2</release>\n    <api>2.2.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2013-05-06</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] Fix Horde_Domhtml#returnBody().\n   </notes>\n  </release>\n  <release>\n   <version>\n    <release>2.3.0</release>\n    <api>2.3.0</api></version>\n   <stability>\n    <release>stable</release>\n    <api>stable</api></stability>\n   <date>2013-05-06</date>\n   <license uri=\"http://www.horde.org/licenses/lgpl21\">LGPL-2.1</license>\n   <notes>\n* [mms] SECURITY: &apos;_formvars&apos; form input must now be JSON encoded, not PHP serialized.\n   </notes>\n  </release>\n </changelog>\n</package>\n"], "filenames": ["framework/Util/lib/Horde/Variables.php", "framework/Util/package.xml"], "buggy_code_start_loc": [64, 29], "buggy_code_end_loc": [76, 631], "fixing_code_start_loc": [64, 29], "fixing_code_end_loc": [78, 634], "type": "CWE-94", "message": "The framework/Util/lib/Horde/Variables.php script in the Util library in Horde before 5.1.1 allows remote attackers to conduct object injection attacks and execute arbitrary PHP code via a crafted serialized object in the _formvars form.", "other": {"cve": {"id": "CVE-2014-1691", "sourceIdentifier": "cve@mitre.org", "published": "2014-04-01T15:55:06.363", "lastModified": "2014-04-02T14:50:49.507", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The framework/Util/lib/Horde/Variables.php script in the Util library in Horde before 5.1.1 allows remote attackers to conduct object injection attacks and execute arbitrary PHP code via a crafted serialized object in the _formvars form."}, {"lang": "es", "value": "El script framework/Util/lib/Horde/Variables.php en la librar\u00eda de Util en Horde anterior a 5.1.1 permite a atacantes remotos realizar ataques de inyecci\u00f3n de objetos y ejecutar c\u00f3digo PHP arbitrario a trav\u00e9s de un objeto serializado manipulado en el formulario _formvars."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:horde:horde_application_framework:*:*:*:*:*:*:*:*", "versionEndIncluding": "5.1.0", "matchCriteriaId": "DA40D3C0-313C-4622-AD42-9E1422170FD3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:horde:horde_application_framework:5.0.0:*:*:*:*:*:*:*", "matchCriteriaId": "3FA8B826-EB7D-4EF8-A886-CC83907C59EE"}, {"vulnerable": true, "criteria": "cpe:2.3:a:horde:horde_application_framework:5.0.1:*:*:*:*:*:*:*", "matchCriteriaId": "B7CB9652-6D7C-4EB1-AC6D-C29C20757FA3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:horde:horde_application_framework:5.0.2:*:*:*:*:*:*:*", "matchCriteriaId": "320EFF23-CD09-419F-8AC2-1EE5DE4763E0"}, {"vulnerable": true, "criteria": "cpe:2.3:a:horde:horde_application_framework:5.0.3:*:*:*:*:*:*:*", "matchCriteriaId": "3BB0209B-CA11-473A-9966-D069845806CB"}, {"vulnerable": true, "criteria": "cpe:2.3:a:horde:horde_application_framework:5.0.4:*:*:*:*:*:*:*", "matchCriteriaId": "62DACAFB-3715-4986-BFD8-4939E31E2CE3"}]}]}], "references": [{"url": "http://seclists.org/oss-sec/2014/q1/153", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "http://seclists.org/oss-sec/2014/q1/156", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "http://seclists.org/oss-sec/2014/q1/169", "source": "cve@mitre.org"}, {"url": "http://www.debian.org/security/2014/dsa-2853", "source": "cve@mitre.org"}, {"url": "https://github.com/horde/horde/blob/82c400788537cfc0106b68447789ff53793ac086/bundles/groupware/docs/CHANGES#L215", "source": "cve@mitre.org"}, {"url": "https://github.com/horde/horde/commit/da6afc7e9f4e290f782eca9dbca794f772caccb3", "source": "cve@mitre.org", "tags": ["Exploit", "Patch"]}]}, "github_commit_url": "https://github.com/horde/horde/commit/da6afc7e9f4e290f782eca9dbca794f772caccb3"}}