{"buggy_code": ["<?php\n\n/**\n * AJAX: handling of Ajax user calls.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package   phpMyFAQ\n * @author    Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2009-2022 phpMyFAQ Team\n * @license   http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link      https://www.phpmyfaq.de\n * @since     2009-04-04\n */\n\nuse phpMyFAQ\\Auth;\nuse phpMyFAQ\\Category;\nuse phpMyFAQ\\Core\\Exception;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Helper\\HttpHelper;\nuse phpMyFAQ\\Helper\\MailHelper;\nuse phpMyFAQ\\Permission;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\User;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\n$ajaxAction = Filter::filterInput(INPUT_GET, 'ajaxaction', FILTER_UNSAFE_RAW);\n$userId = Filter::filterInput(INPUT_GET, 'user_id', FILTER_VALIDATE_INT);\n$userSearch = Filter::filterInput(INPUT_GET, 'q', FILTER_UNSAFE_RAW);\n$csrfToken = Filter::filterInput(INPUT_GET, 'csrf', FILTER_UNSAFE_RAW);\n\n// Send headers\n$http = new HttpHelper();\n$http->setContentType('application/json');\n$http->addHeader();\n\nif (\n    $user->perm->hasPermission($user->getUserId(), 'add_user') ||\n    $user->perm->hasPermission($user->getUserId(), 'edit_user') ||\n    $user->perm->hasPermission($user->getUserId(), 'delete_user')\n) {\n    $user = new User($faqConfig);\n\n    switch ($ajaxAction) {\n        case 'get_user_list':\n            $allUsers = [];\n            foreach ($user->searchUsers($userSearch) as $singleUser) {\n                $users = new \\stdClass();\n                $users->user_id = (int)$singleUser['user_id'];\n                $users->name = $singleUser['login'];\n                $allUsers[] = $users;\n            }\n            $http->sendJsonWithHeaders($allUsers);\n            break;\n\n        case 'get_user_data':\n            $user->getUserById($userId, true);\n            $userdata = [];\n            $userdata = $user->userdata->get('*');\n            $userdata['status'] = $user->getStatus();\n            $userdata['login'] = Strings::htmlentities($user->getLogin());\n            $userdata['is_superadmin'] = $user->isSuperAdmin();\n            $http->sendJsonWithHeaders($userdata);\n            break;\n\n        case 'get_all_user_data':\n            $allUsers = $user->getAllUsers(false);\n            $userData = [];\n            foreach ($allUsers as $userId) {\n                $user->getUserById($userId, true);\n                $userObject = new \\stdClass();\n                $userObject->id = $user->getUserId();\n                $userObject->status = $user->getStatus();\n                $userObject->isSuperAdmin = $user->isSuperAdmin();\n                $userObject->isVisible = $user->getUserData('is_visible');\n                $userObject->displayName = $user->getUserData('display_name');\n                $userObject->userName = $user->getLogin();\n                $userObject->email = $user->getUserData('email');\n                $userData[] = $userObject;\n            }\n            $http->setStatus(200);\n            $http->sendJsonWithHeaders($userData);\n            break;\n\n        case 'get_user_rights':\n            $user->getUserById($userId, true);\n            $http->sendJsonWithHeaders($user->perm->getUserRights($userId));\n            break;\n\n        case 'activate_user':\n            if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n                $http->setStatus(400);\n                $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n                exit(1);\n            }\n\n            $user->getUserById($userId, true);\n            $user->activateUser();\n            $http->sendJsonWithHeaders($user->getStatus());\n            break;\n\n        case 'add_user':\n            if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n                $http->setStatus(400);\n                $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n                exit(1);\n            }\n\n            $errorMessage = [];\n            $successMessage = '';\n\n            $postData = json_decode(file_get_contents('php://input'), true);\n\n            $userName = Filter::filterVar($postData['userName'], FILTER_UNSAFE_RAW);\n            $userRealName = Filter::filterVar($postData['realName'], FILTER_UNSAFE_RAW);\n            $userEmail = Filter::filterVar($postData['email'], FILTER_VALIDATE_EMAIL);\n            $userPassword = Filter::filterVar($postData['password'], FILTER_UNSAFE_RAW);\n            $userPasswordConfirm = Filter::filterVar($postData['passwordConfirm'], FILTER_UNSAFE_RAW);\n            $userIsSuperAdmin = Filter::filterVar($postData['isSuperAdmin'], FILTER_VALIDATE_BOOLEAN);\n\n            $newUser = new User($faqConfig);\n\n            if (!$newUser->isValidLogin($userName)) {\n                $errorMessage[] = $PMF_LANG['ad_user_error_loginInvalid'];\n            }\n            if ($newUser->getUserByLogin($userName)) {\n                $errorMessage[] = $PMF_LANG['ad_adus_exerr'];\n            }\n            if ($userRealName === '') {\n                $errorMessage[] = $PMF_LANG['ad_user_error_noRealName'];\n            }\n            if (is_null($userEmail)) {\n                $errorMessage[] = $PMF_LANG['ad_user_error_noEmail'];\n            }\n            if (count($errorMessage) === 0) {\n                if (!$newUser->createUser($userName, $userPassword)) {\n                    $errorMessage[] = $newUser->error();\n                } else {\n                    $newUser->userdata->set(['display_name', 'email', 'is_visible'], [$userRealName, $userEmail, 0]);\n                    $newUser->setStatus('active');\n                    $newUser->setSuperAdmin(!is_null($userIsSuperAdmin));\n                    $mailHelper = new MailHelper($faqConfig);\n                    try {\n                        $mailHelper->sendMailToNewUser($newUser, $userPassword);\n                    } catch (Exception $e) {\n                        // @todo catch exception\n                    }\n                    $successMessage = [ 'data' => $PMF_LANG['ad_adus_suc'] ];\n                }\n\n                $http->setStatus(201);\n                $http->sendJsonWithHeaders($successMessage);\n                exit(1);\n            }\n\n            $http->setStatus(400);\n            $http->sendJsonWithHeaders($errorMessage);\n            break;\n\n        case 'delete_user':\n            if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n                $http->setStatus(400);\n                $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n                exit(1);\n            }\n\n            $user->getUserById($userId, true);\n            if ($user->getStatus() == 'protected' || $userId == 1) {\n                $message = '<p class=\"alert alert-error\">' . $PMF_LANG['ad_user_error_protectedAccount'] . '</p>';\n            } else {\n                if (!$user->deleteUser()) {\n                    $message = $PMF_LANG['ad_user_error_delete'];\n                } else {\n                    $category = new Category($faqConfig, [], false);\n                    $category->moveOwnership((int) $userId, 1);\n\n                    // Remove the user from groups\n                    if ('basic' !== $faqConfig->get('security.permLevel')) {\n                        $permissions = Permission::selectPerm('medium', $faqConfig);\n                        $permissions->removeFromAllGroups($userId);\n                    }\n\n                    $message = '<p class=\"alert alert-success\">' . $PMF_LANG['ad_user_deleted'] . '</p>';\n                }\n            }\n            $http->sendJsonWithHeaders($message);\n            break;\n\n        case 'overwrite_password':\n            $userId = Filter::filterInput(INPUT_POST, 'user_id', FILTER_VALIDATE_INT);\n            $csrfToken = Filter::filterInput(INPUT_POST, 'csrf', FILTER_UNSAFE_RAW);\n            $newPassword = Filter::filterInput(INPUT_POST, 'npass', FILTER_UNSAFE_RAW);\n            $retypedPassword = Filter::filterInput(INPUT_POST, 'bpass', FILTER_UNSAFE_RAW);\n\n            if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n                $http->setStatus(400);\n                $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n                exit(1);\n            }\n\n            $user->getUserById($userId, true);\n            $auth = new Auth($faqConfig);\n            $authSource = $auth->selectAuth($user->getAuthSource('name'));\n            $authSource->selectEncType($user->getAuthData('encType'));\n\n            if ($newPassword === $retypedPassword) {\n                if (!$user->changePassword($newPassword)) {\n                    $http->setStatus(400);\n                    $http->sendJsonWithHeaders(['error' => $PMF_LANG['ad_passwd_fail']]);\n                }\n                $http->sendJsonWithHeaders(['success' => $PMF_LANG['ad_passwdsuc']]);\n            } else {\n                $http->setStatus(400);\n                $http->sendJsonWithHeaders(['error' => $PMF_LANG['ad_passwd_fail']]);\n            }\n\n            break;\n    }\n}\n", "/**\n * JavaScript functions for user frontend\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2010-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2010-05-02\n */\n\n/*global $:false, getUserData: false */\n\n/**\n * Fetches the user rights as JSON object and checks the checkboxes\n *\n * @param userId User ID\n */\nfunction getUserRights(userId) {\n  'use strict';\n\n  resetUserRights();\n  $.getJSON('index.php?action=ajax&ajax=user&ajaxaction=get_user_rights&user_id=' + userId, (data) => {\n    $.each(data, (i, val) => {\n      document.getElementById('user_right_' + val).checked = true;\n    });\n    document.getElementById('rights_user_id').value = userId;\n  });\n}\n\n/**\n * Updates the user data in forms\n *\n * @param userId User ID\n */\nfunction updateUser(userId) {\n  'use strict';\n\n  getUserData(userId);\n  getUserRights(userId);\n}\n\nfunction resetUserRights() {\n  const inputs = document.querySelectorAll('.permission');\n  for(let i = 0; i < inputs.length; i++) {\n    inputs[i].checked = false;\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  'use strict';\n\n  /**\n   * Button Password Overwrite\n   * @type {jQuery|HTMLElement}\n   */\n  const button = $('#checkAll');\n  const buttonOverwritePassword = $('.pmf-user-password-overwrite-action');\n\n  button.data('type', 'check');\n  button.on('click', (event) => {\n    const checkbox = $('.permission');\n    event.preventDefault();\n    if (button.data('type') === 'check') {\n      checkbox.prop('checked', true);\n      button.data('type', 'uncheck');\n    } else {\n      checkbox.prop('checked', false);\n      button.data('type', 'check');\n    }\n  });\n\n  buttonOverwritePassword.on('click', (event) => {\n    event.preventDefault();\n\n    // Fetch data\n    $.ajax({\n      url: 'index.php?action=ajax&ajax=user&ajaxaction=overwrite_password',\n      type: 'POST',\n      data: $('#pmf-modal-user-password-overwrite form').serialize(),\n      dataType: 'json',\n      beforeSend: function () {\n        $('#pmf-admin-saving-data-indicator').html(\n          '<i class=\"fa fa-cog fa-spin fa-fw\"></i><span class=\"sr-only\">Saving ...</span>'\n        );\n      },\n      success: function (message) {\n        $('.pmf-admin-overwrite-password').replaceWith('<p>\u2713 ' + message.success + '</p>');\n        $('#pmf-modal-user-password-overwrite').modal('hide');\n        $('#pmf-admin-saving-data-indicator').fadeOut();\n      },\n    });\n    return false;\n  });\n\n  /**\n   * User search autocomplete\n   */\n  $('.pmf-user-autocomplete').typeahead({\n    autoSelect: true,\n    delay: 300,\n    minLength: 1,\n    source: (request, response) => {\n      $.ajax({\n        url: 'index.php?action=ajax&ajax=user&ajaxaction=get_user_list',\n        type: 'GET',\n        dataType: 'JSON',\n        data: 'q=' + request,\n        success: (data) => {\n          response(\n            data.map((item) => {\n              return {\n                user_id: item.user_id,\n                name: item.name,\n              };\n            })\n          );\n        },\n      });\n    },\n    displayText: (item) => {\n      return typeof item !== 'undefined' && typeof item.name !== 'undefined' ? item.name : item;\n    },\n    afterSelect: (user) => {\n      $('#user_list_select').val(user.user_id);\n      updateUser(user.user_id);\n    },\n  });\n\n  /**\n   * Modal handling add user\n   * @type {Element | HTMLElement}\n   */\n  const modal = document.getElementById('addUserModal');\n  const modalBackdrop = document.getElementsByClassName('modal-backdrop fade show');\n  const addUser = document.getElementById('pmf-add-user-action');\n  const addUserForm = document.getElementById('pmf-add-user-form');\n  const addUserError = document.getElementById('pmf-add-user-error-message');\n  const addUserMessage = document.getElementById('pmf-user-message');\n  const passwordToggle = document.getElementById('add_user_automatic_password');\n  const passwordInputs = document.getElementById('add_user_show_password_inputs');\n\n  if (passwordToggle) {\n    passwordToggle.addEventListener('click', () => {\n      passwordInputs.classList.toggle('d-none');\n    });\n  }\n\n  if (addUser) {\n    addUser.addEventListener('click', (event) => {\n      event.preventDefault();\n      const csrf = document.getElementById('add_user_csrf').value;\n      const userName = document.getElementById('add_user_name').value;\n      const realName = document.getElementById('add_user_realname').value;\n      const email = document.getElementById('add_user_email').value;\n      const password = document.getElementById('add_user_password').value;\n      const passwordConfirm = document.getElementById('add_user_password_confirm').value;\n      const isSuperAdmin = document.querySelector('#add_user_is_superadmin').checked;\n\n      addUserForm.classList.add('was-validated');\n\n      const userData = {\n        userName,\n        realName,\n        email,\n        password,\n        passwordConfirm,\n        isSuperAdmin,\n      };\n\n      postUserData('index.php?action=ajax&ajax=user&ajaxaction=add_user&csrf=' + csrf, userData)\n        .then(async (response) => {\n          if (response.status !== 201) {\n            const errors = await response.json();\n            let errorMessage = '';\n\n            errors.forEach((error) => {\n              errorMessage += `${error}<br>`;\n            });\n\n            addUserError.classList.remove('d-none');\n            addUserError.innerHTML = errorMessage;\n          } else {\n            const result = await response.json();\n\n            addUserMessage.innerHTML = `<p class=\"alert alert-success\">${result.data}</p>`;\n\n            modal.style.display = 'none';\n            modal.classList.remove('show');\n            modalBackdrop[0].parentNode.removeChild(modalBackdrop[0]);\n          }\n        })\n        .catch((error) => {\n          console.log('Final Request failure: ', error);\n        });\n    });\n  }\n\n  /**\n   * Post user data to API\n   * @param url\n   * @param data\n   * @returns {Promise<Response>}\n   */\n  async function postUserData(url = '', data = {}) {\n    return await fetch(url, {\n      method: 'POST',\n      cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify(data),\n    });\n  }\n\n  /**\n   * Export all users\n   * @type {Element | HTMLElement}\n   */\n  const buttonExportAllUsers = document.getElementById('pmf-button-export-users');\n\n  if (buttonExportAllUsers) {\n    buttonExportAllUsers.addEventListener('click', (event) => {\n      event.preventDefault();\n\n      fetch('index.php?action=ajax&ajax=user&ajaxaction=get_all_user_data', {\n        method: 'GET',\n        cache: 'no-cache',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n      })\n        .then(async (response) => {\n          if (response.status === 200) {\n            const userData = await response.json();\n\n            const replacer = (key, value) => (value === null ? '' : value);\n            const header = Object.keys(userData[0]);\n            let csv = userData.map((row) =>\n              header.map((fieldName) => JSON.stringify(row[fieldName], replacer)).join(',')\n            );\n            csv.unshift(header.join(','));\n            csv = csv.join('\\r\\n');\n\n            let hiddenElement = document.createElement('a');\n            hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n            hiddenElement.target = '_blank';\n            hiddenElement.download = 'phpmyfaq-users-' + new Date().toISOString().substring(0, 10) + '.csv';\n            hiddenElement.click();\n          }\n        })\n        .catch((error) => {\n          console.log('Final Request failure: ', error);\n        });\n    });\n  }\n});\n", "<?php\n\n/**\n * Displays the user management frontend.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Lars Tiedemann <php@larstiedemann.de>\n * @author Uwe Pries <uwe.pries@digartis.de>\n * @author Sarah Hermann <sayh@gmx.de>\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2005-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2005-12-15\n */\n\nuse phpMyFAQ\\Category;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Pagination;\nuse phpMyFAQ\\Permission;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\User;\nuse phpMyFAQ\\User\\CurrentUser;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\nif (\n    $user->perm->hasPermission($user->getUserId(), 'edit_user') || $user->perm->hasPermission(\n        $user->getUserId(),\n        'delete_user'\n    ) || $user->perm->hasPermission($user->getUserId(), 'add_user')\n) {\n\n    $userId = Filter::filterInput(INPUT_GET, 'user_id', FILTER_VALIDATE_INT);\n    ?>\n  <script src=\"assets/js/user.js\"></script>\n    <?php\n\n    // set some parameters\n    $selectSize = 10;\n    $defaultUserAction = 'list';\n    $defaultUserStatus = 'active';\n    $userActionList = [\n        'update_rights',\n        'update_data',\n        'delete_confirm',\n        'delete',\n        'addsave',\n        'list',\n        'listallusers'\n    ];\n\n    // what shall we do?\n    // actions defined by url: user_action=\n    $userAction = Filter::filterInput(INPUT_GET, 'user_action', FILTER_UNSAFE_RAW, $defaultUserAction);\n    $currentUser = new CurrentUser($faqConfig);\n\n    // actions defined by submit button\n    if (isset($_POST['user_action_deleteConfirm'])) {\n        $userAction = 'delete_confirm';\n    }\n    if (isset($_POST['cancel'])) {\n        $userAction = $defaultUserAction;\n    }\n\n    // update user rights\n    if ($userAction == 'update_rights' && $user->perm->hasPermission($user->getUserId(), 'edit_user')) {\n        $message = '';\n        $userAction = $defaultUserAction;\n        $userId = Filter::filterInput(INPUT_POST, 'user_id', FILTER_VALIDATE_INT, 0);\n        $csrfOkay = true;\n        $csrfToken = Filter::filterInput(INPUT_POST, 'csrf', FILTER_UNSAFE_RAW);\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $csrfOkay = false;\n        }\n        if (0 === (int)$userId || !$csrfOkay) {\n            $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_user_error_noId']);\n        } else {\n            $user = new User($faqConfig);\n            $perm = $user->perm;\n            // @todo: Add Filter::filterInput[]\n            $userRights = isset($_POST['user_rights']) ? $_POST['user_rights'] : [];\n            if (!$perm->refuseAllUserRights($userId)) {\n                $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_msg_mysqlerr']);\n            }\n            foreach ($userRights as $rightId) {\n                $perm->grantUserRight($userId, $rightId);\n            }\n            $idUser = $user->getUserById($userId, true);\n            $message .= sprintf(\n                '<p class=\"alert alert-success\">%s <strong>%s</strong> %s</p>',\n                $PMF_LANG['ad_msg_savedsuc_1'],\n                Strings::htmlentities($user->getLogin(), ENT_QUOTES),\n                $PMF_LANG['ad_msg_savedsuc_2']\n            );\n            $message .= '<script>updateUser(' . $userId . ')</script>';\n            $user = new CurrentUser($faqConfig);\n        }\n    }\n\n    // update user data\n    if ($userAction == 'update_data' && $user->perm->hasPermission($user->getUserId(), 'edit_user')) {\n        $message = '';\n        $userAction = $defaultUserAction;\n        $userId = Filter::filterInput(INPUT_POST, 'user_id', FILTER_VALIDATE_INT, 0);\n        if ($userId == 0) {\n            $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_user_error_noId']);\n        } else {\n            $userData = [];\n            $userData['display_name'] = Filter::filterInput(INPUT_POST, 'display_name', FILTER_UNSAFE_RAW, '');\n            $userData['email'] = Filter::filterInput(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL, '');\n            $userData['last_modified'] = Filter::filterInput(INPUT_POST, 'last_modified', FILTER_UNSAFE_RAW, '');\n            $userStatus = Filter::filterInput(INPUT_POST, 'user_status', FILTER_UNSAFE_RAW, $defaultUserStatus);\n            $isSuperAdmin = Filter::filterInput(INPUT_POST, 'is_superadmin', FILTER_UNSAFE_RAW);\n            $isSuperAdmin = $isSuperAdmin === 'on';\n\n            $user = new User($faqConfig);\n            $user->getUserById($userId, true);\n\n            $stats = $user->getStatus();\n\n            // set new password an send email if user is switched to active\n            if ($stats == 'blocked' && $userStatus == 'active') {\n                if (!$user->activateUser()) {\n                    $userStatus = 'invalid_status';\n                }\n            }\n\n            // Set super-admin flag\n            $user->setSuperAdmin($isSuperAdmin);\n\n            if (\n                !$user->userdata->set(array_keys($userData), array_values($userData)) ||\n                !$user->setStatus($userStatus)\n            ) {\n                $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_msg_mysqlerr']);\n            } else {\n                $message .= sprintf(\n                    '<p class=\"alert alert-success\">%s <strong>%s</strong> %s</p>',\n                    $PMF_LANG['ad_msg_savedsuc_1'],\n                    Strings::htmlentities($user->getLogin(), ENT_QUOTES),\n                    $PMF_LANG['ad_msg_savedsuc_2']\n                );\n                $message .= '<script>updateUser(' . $userId . ');</script>';\n            }\n        }\n    }\n\n    // delete user confirmation\n    if ($userAction == 'delete_confirm' && $user->perm->hasPermission($user->getUserId(), 'delete_user')) {\n        $message = '';\n        $user = new CurrentUser($faqConfig);\n\n        $userId = Filter::filterInput(INPUT_GET, 'user_delete_id', FILTER_VALIDATE_INT, 0);\n        if ($userId == 0) {\n            $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_user_error_noId']);\n            $userAction = $defaultUserAction;\n        } else {\n            $user->getUserById($userId, true);\n            // account is protected\n            if ($user->getStatus() == 'protected' || $userId == 1) {\n                $message .= sprintf(\n                    '<p class=\"alert alert-danger\">%s</p>',\n                    $PMF_LANG['ad_user_error_protectedAccount']\n                );\n                $userAction = $defaultUserAction;\n            } else {\n                ?>\n\n              <div\n                class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n                <h1 class=\"h2\">\n                  <i aria-hidden=\"true\" class=\"fa fa-user\"></i>\n                    <?= $PMF_LANG['ad_user_deleteUser'] ?> <?= Strings::htmlentities($user->getLogin(), ENT_QUOTES) ?>\n                </h1>\n              </div>\n\n              <p class=\"alert alert-danger\">\n                  <?= $PMF_LANG['ad_user_del_3'] . ' ' . $PMF_LANG['ad_user_del_1'] . ' ' . $PMF_LANG['ad_user_del_2'] ?>\n              </p>\n              <form action=\"?action=user&amp;user_action=delete\" method=\"post\" accept-charset=\"utf-8\">\n                <input type=\"hidden\" name=\"user_id\" value=\"<?= $userId ?>\">\n                <input type=\"hidden\" name=\"csrf\" value=\"<?= $currentUser->getCsrfTokenFromSession() ?>\">\n                <p class=\"text-center\">\n                  <button class=\"btn btn-danger\" type=\"submit\">\n                      <?= $PMF_LANG['ad_gen_yes'] ?>\n                  </button>\n                  <a class=\"btn btn-info\" href=\"?action=user\">\n                      <?= $PMF_LANG['ad_gen_no'] ?>\n                  </a>\n                </p>\n              </form>\n                <?php\n            }\n        }\n    }\n\n    // delete user\n    if ($userAction == 'delete' && $user->perm->hasPermission($user->getUserId(), 'delete_user')) {\n        $message = '';\n        $user = new User($faqConfig);\n        $userId = Filter::filterInput(INPUT_POST, 'user_id', FILTER_VALIDATE_INT, 0);\n        $csrfOkay = true;\n        $csrfToken = Filter::filterInput(INPUT_POST, 'csrf', FILTER_UNSAFE_RAW);\n        $userAction = $defaultUserAction;\n\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $csrfOkay = false;\n        }\n        $userAction = $defaultUserAction;\n        if (0 === (int)$userId || !$csrfOkay) {\n            $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_user_error_noId']);\n        } else {\n            if (!$user->getUserById($userId, true)) {\n                $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_user_error_noId']);\n            }\n            if (!$user->deleteUser()) {\n                $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_user_error_delete']);\n            } else {\n                // Move the categories ownership to admin (id == 1)\n                $oCat = new Category($faqConfig, [], false);\n                $oCat->setUser($currentAdminUser);\n                $oCat->setGroups($currentAdminGroups);\n                $oCat->moveOwnership((int) $userId, 1);\n\n                // Remove the user from groups\n                if ('basic' !== $faqConfig->get('security.permLevel')) {\n                    $oPerm = Permission::selectPerm('medium', $faqConfig);\n                    $oPerm->removeFromAllGroups($userId);\n                }\n\n                $message .= sprintf('<p class=\"alert alert-success\">%s</p>', $PMF_LANG['ad_user_deleted']);\n            }\n            $userError = $user->error();\n            if ($userError != '') {\n                $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $userError);\n            }\n        }\n    }\n\n    if (!isset($message)) {\n        $message = '';\n    }\n\n    // show list of users\n    if ($userAction === 'list') { ?>\n      <div\n        class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <h1 class=\"h2\">\n          <i aria-hidden=\"true\" class=\"fa fa-user\"></i>\n            <?= $PMF_LANG['ad_user'] ?>\n        </h1>\n        <div class=\"btn-toolbar mb-2 mb-md-0\">\n          <div class=\"btn-group mr-2\">\n              <?php if ($currentUser->perm->hasPermission($user->getUserId(), 'add_user')) : ?>\n                <button type=\"button\" class=\"btn btn-sm btn-primary\" data-toggle=\"modal\" data-target=\"#addUserModal\">\n                  <i class=\"fa fa-user-plus\" aria-label=\"true\"></i> <?= $PMF_LANG['ad_user_add'] ?>\n                </button>\n              <?php endif ?>\n              <?php if ($currentUser->perm->hasPermission($user->getUserId(), 'edit_user')) : ?>\n                <a class=\"btn btn-sm btn-secondary\" href=\"?action=user&amp;user_action=listallusers\">\n                  <i class=\"fa fa-users\" aria-label=\"true\"></i> <?= $PMF_LANG['list_all_users'] ?>\n                </a>\n              <?php endif ?>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"pmf-user-message\"><?= $message ?></div>\n\n      <script>\n        /**\n         * Returns the user data as JSON object\n         *\n         * @param user_id User ID\n         */\n        function getUserData(user_id) {\n          $('#user_data_table').empty();\n          $.getJSON('index.php?action=ajax&ajax=user&ajaxaction=get_user_data&user_id=' + user_id, function(data) {\n            $('#update_user_id').val(data.user_id);\n            $('#user_status_select').val(data.status);\n            $('#user_list_autocomplete').val(data.login);\n            $('#user_list_select').val(data.user_id);\n            $('#modal_user_id').val(data.user_id);\n            // Append input fields\n            $('#user_data_table').append(\n              '<div class=\"form-group row\">' +\n              '<label class=\"col-lg-4 col-form-label\"><?= $PMF_LANG['ad_user_realname'] ?></label>' +\n              '<div class=\"col-lg-8\">' +\n              '<input type=\"text\" name=\"display_name\" value=\"' + data.display_name + '\" class=\"form-control\" required>' +\n              '</div>' +\n              '</div>' +\n              '<div class=\"form-group row\">' +\n              '<label class=\"col-lg-4 col-form-label\"><?= $PMF_LANG['ad_entry_email'] ?></label>' +\n              '<div class=\"col-lg-8\">' +\n              '<input type=\"email\" name=\"email\" value=\"' + data.email + '\" class=\"form-control\" required>' +\n              '</div>' +\n              '</div>' +\n              '<div class=\"form-group row\">' +\n              '<div class=\"offset-lg-4 col-lg-8\">' +\n              '<div class=\"form-check\">' +\n              '<input class=\"form-check-input\" type=\"checkbox\" id=\"is_superadmin\" name=\"is_superadmin\">' +\n              '<label class=\"form-check-label\" for=\"is_superadmin\"><?= $PMF_LANG['ad_user_is_superadmin'] ?></label>' +\n              '</div>' +\n              '</div>' +\n              '</div>' +\n              '<div class=\"form-group row\">' +\n              '<div class=\"offset-lg-4 col-lg-8\">' +\n              '<a class=\"btn btn-danger pmf-admin-overwrite-password\" data-toggle=\"modal\" ' +\n              '   href=\"#pmf-modal-user-password-overwrite\"><?= $PMF_LANG['ad_user_overwrite_passwd'] ?></a>' +\n              '</div>' +\n              '</div>' +\n              '<input type=\"hidden\" name=\"last_modified\" value=\"' + data.last_modified + '\">',\n            );\n            if (data.is_superadmin) {\n              $('#is_superadmin').attr('checked', 'checked');\n            }\n          });\n        }\n      </script>\n\n      <div class=\"row\">\n        <div class=\"col-lg-4\">\n          <form name=\"user_select\" id=\"user_select\" action=\"?action=user&amp;user_action=delete_confirm\"\n                method=\"post\" role=\"form\" class=\"form_inline\">\n            <div class=\"card mb-4\">\n              <h5 class=\"card-header py-3\">\n                <i aria-hidden=\"true\" class=\"fa fa-search\"></i> <?= $PMF_LANG['msgSearch'] ?>\n              </h5>\n              <div class=\"card-body\">\n                <div class=\"input-group\">\n                  <input type=\"text\" id=\"user_list_autocomplete\" name=\"user_list_search\"\n                         class=\"form-control pmf-user-autocomplete\" autocomplete=\"off\"\n                         placeholder=\"<?= $PMF_LANG['ad_auth_user'] ?>\">\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div class=\"col-lg-4\">\n          <div class=\"card mb-4\">\n            <h5 class=\"card-header py-3\" id=\"user_data_legend\">\n              <i aria-hidden=\"true\" class=\"fa fa-user\"></i> <?= $PMF_LANG['ad_user_profou'] ?>\n            </h5>\n            <form action=\"?action=user&amp;user_action=update_data\" method=\"post\">\n              <div class=\"card-body\">\n                <input id=\"update_user_id\" type=\"hidden\" name=\"user_id\" value=\"0\">\n                <input type=\"hidden\" name=\"csrf\" value=\"<?= $currentUser->getCsrfTokenFromSession(); ?>\">\n                <div class=\"form-group row\">\n                  <label for=\"user_status_select\" class=\"col-lg-4 col-form-label\">\n                      <?= $PMF_LANG['ad_user_status'] ?>\n                  </label>\n                  <div class=\"col-lg-8\">\n                    <select id=\"user_status_select\" class=\"form-control\" name=\"user_status\">\n                      <option value=\"active\"><?= $PMF_LANG['ad_user_active'] ?></option>\n                      <option value=\"blocked\"><?= $PMF_LANG['ad_user_blocked'] ?></option>\n                      <option value=\"protected\"><?= $PMF_LANG['ad_user_protected'] ?></option>\n                    </select>\n                  </div>\n                </div>\n                <div id=\"user_data_table\"></div>\n              </div>\n              <div class=\"card-footer\">\n                <div class=\"card-button text-right\">\n                  <button class=\"btn btn-success\" type=\"submit\">\n                    <i aria-hidden=\"true\" class=\"fa fa-check\"></i> <?= $PMF_LANG['ad_gen_save'] ?>\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-4\" id=\"userRights\">\n          <form id=\"rightsForm\" action=\"?action=user&amp;user_action=update_rights\" method=\"post\"\n                accept-charset=\"utf-8\">\n            <input type=\"hidden\" name=\"csrf\" value=\"<?= $currentUser->getCsrfTokenFromSession() ?>\">\n            <input type=\"hidden\" name=\"user_id\" id=\"rights_user_id\" value=\"0\">\n\n            <div class=\"card mb-4\">\n              <h5 class=\"card-header py-3\" id=\"user_rights_legend\">\n                <i aria-hidden=\"true\" class=\"fa fa-lock\"></i> <?= $PMF_LANG['ad_user_rights'] ?>\n              </h5>\n              <div class=\"card-body\">\n                <div class=\"text-center mb-3\">\n                  <a class=\"btn btn-primary btn-sm\" href=\"#\" id=\"checkAll\">\n                    <?= $PMF_LANG['ad_user_checkall'] ?>\n                    /\n                    <?= $PMF_LANG['ad_user_uncheckall'] ?>\n                  </a>\n                </div>\n                  <?php foreach ($user->perm->getAllRightsData() as $right) : ?>\n                    <div class=\"form-check\">\n                      <input id=\"user_right_<?= $right['right_id'] ?>\" type=\"checkbox\"\n                             name=\"user_rights[]\" value=\"<?= $right['right_id'] ?>\"\n                             class=\"form-check-input permission\">\n                      <label class=\"form-check-label\" for=\"user_right_<?= $right['right_id'] ?>\">\n                          <?php\n                            if (isset($PMF_LANG['rightsLanguage'][$right['name']])) {\n                                echo $PMF_LANG['rightsLanguage'][$right['name']];\n                            } else {\n                                echo $right['description'];\n                            }\n                            ?>\n                      </label>\n                    </div>\n                  <?php endforeach; ?>\n              </div>\n              <div class=\"card-footer\">\n                <div class=\"card-button text-right\">\n                  <button class=\"btn btn-success\" type=\"submit\">\n                      <?= $PMF_LANG['ad_gen_save'] ?>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n\n      <div class=\"modal fade\" id=\"pmf-modal-user-password-overwrite\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h4><?= $PMF_LANG['ad_menu_passwd'] ?></h4>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <form action=\"#\" method=\"post\" accept-charset=\"utf-8\" autocomplete=\"off\">\n                <input type=\"hidden\" name=\"csrf\" value=\"<?= $currentUser->getCsrfTokenFromSession() ?>\">\n                <input type=\"hidden\" name=\"user_id\" id=\"modal_user_id\" value=\"<?= $userId ?>\">\n\n                <div class=\"form-group row\">\n                  <label class=\"col-lg-4 col-form-label\" for=\"npass\">\n                      <?= $PMF_LANG['ad_passwd_new'] ?>\n                  </label>\n                  <div class=\"col-lg-8\">\n                    <input type=\"password\" autocomplete=\"off\" name=\"npass\" id=\"npass\" class=\"form-control\" required>\n                  </div>\n                </div>\n\n                <div class=\"form-group row\">\n                  <label class=\"col-lg-4 col-form-label\" for=\"bpass\">\n                      <?= $PMF_LANG['ad_passwd_con'] ?>\n                  </label>\n                  <div class=\"col-lg-8\">\n                    <input type=\"password\" autocomplete=\"off\" name=\"bpass\" id=\"bpass\" class=\"form-control\" required>\n                  </div>\n                </div>\n\n              </form>\n            </div>\n            <div class=\"modal-footer\">\n              <button class=\"btn btn-primary pmf-user-password-overwrite-action\">\n                  <?= $PMF_LANG['ad_user_overwrite_passwd'] ?>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n        <?php\n    }\n\n    // show list of all users\n    if ($userAction == 'listallusers' && $user->perm->hasPermission($user->getUserId(), 'edit_user')) {\n        $allUsers = $user->getAllUsers(false);\n        $numUsers = count($allUsers);\n        $page = Filter::filterInput(INPUT_GET, 'page', FILTER_VALIDATE_INT, 0);\n        $perPage = 10;\n        $numPages = ceil($numUsers / $perPage);\n        $lastPage = $page * $perPage;\n        $firstPage = $lastPage - $perPage;\n\n        $baseUrl = sprintf(\n            '%sadmin/?action=user&amp;user_action=listallusers&amp;page=%d',\n            $faqConfig->getDefaultUrl(),\n            $page\n        );\n\n        // Pagination options\n        $options = [\n            'baseUrl' => $baseUrl,\n            'total' => $numUsers,\n            'perPage' => $perPage,\n            'useRewrite' => false,\n            'pageParamName' => 'page',\n        ];\n        $pagination = new Pagination($faqConfig, $options);\n        ?>\n\n      <div\n        class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <h1 class=\"h2\">\n          <i aria-hidden=\"true\" class=\"fa fa-user\"></i>\n            <?= $PMF_LANG['ad_user'] ?>\n        </h1>\n        <div class=\"btn-toolbar mb-2 mb-md-0\">\n          <div class=\"btn-group mr-2\">\n              <?php if ($currentUser->perm->hasPermission($user->getUserId(), 'add_user')) : ?>\n                <button type=\"button\" class=\"btn btn-sm btn-primary\" data-toggle=\"modal\" data-target=\"#addUserModal\">\n                  <i class=\"fa fa-user-plus\" aria-label=\"true\"></i> <?= $PMF_LANG['ad_user_add'] ?>\n                </button>\n              <?php endif ?>\n              <button type=\"button\" class=\"btn btn-sm btn-secondary\" id=\"pmf-button-export-users\">\n                <i class=\"fa fa-download\" aria-label=\"true\"></i> Export users as CSV\n              </button>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"pmf-user-message\"><?= $message ?></div>\n\n      <table class=\"table table-striped\">\n        <thead class=\"thead-dark\">\n        <tr>\n          <th><?= $PMF_LANG['ad_entry_id'] ?></th>\n          <th><?= $PMF_LANG['ad_user_status'] ?></th>\n          <th><?= $PMF_LANG['ad_user_is_superadmin'] ?></th>\n          <th><?= $PMF_LANG['ad_user_is_visible'] ?></th>\n          <th><?= $PMF_LANG['msgNewContentName'] ?></th>\n          <th><?= $PMF_LANG['ad_auth_user'] ?></th>\n          <th><?= $PMF_LANG['msgNewContentMail'] ?></th>\n          <th colspan=\"3\">&nbsp;</th>\n        </tr>\n        </thead>\n          <?php if ($perPage < $numUsers) : ?>\n            <tfoot>\n            <tr>\n              <td colspan=\"8\"><?= $pagination->render() ?></td>\n            </tr>\n            </tfoot>\n          <?php endif;\n            ?>\n        <tbody>\n        <?php\n        $counter = $displayedCounter = 0;\n        foreach ($allUsers as $listedUserId) {\n            $user->getUserById($listedUserId, true);\n\n            if ($displayedCounter >= $perPage) {\n                continue;\n            }\n            ++$counter;\n            if ($counter <= $firstPage) {\n                continue;\n            }\n            ++$displayedCounter;\n\n            ?>\n          <tr class=\"row_user_id_<?= $user->getUserId() ?>\">\n            <td><?= $user->getUserId() ?></td>\n            <td class=\"text-center\"><i class=\"fa <?php\n            switch ($user->getStatus()) {\n                case 'active':\n                    echo 'fa-check-circle-o';\n                    break;\n                case 'blocked':\n                    echo 'fa-ban';\n                    break;\n                case 'protected':\n                    echo 'fa-lock';\n                    break;\n            }\n            ?> icon_user_id_<?= $user->getUserId() ?>\"></i></td>\n            <td class=\"text-center\">\n              <i class=\"fa <?= $user->isSuperAdmin() ? 'fa-user-secret' : 'fa-user-times' ?>\"></i>\n            </td>\n            <td class=\"text-center\">\n              <i class=\"fa <?= $user->getUserData('is_visible') ? 'fa-user' : 'fa-user-o' ?>\"></i>\n            </td>\n            <td><?= Strings::htmlentities($user->getUserData('display_name'), ENT_QUOTES) ?></td>\n            <td><?= Strings::htmlentities($user->getLogin(), ENT_QUOTES) ?></td>\n            <td>\n              <a href=\"mailto:<?= $user->getUserData('email') ?>\">\n                  <?= $user->getUserData('email') ?>\n              </a>\n            </td>\n            <td>\n              <a href=\"?action=user&amp;user_id=<?= $user->getUserData('user_id') ?>\" class=\"btn btn-info\">\n                <i class=\"fa fa-pencil\"></i> <?= $PMF_LANG['ad_user_edit'] ?>\n              </a>\n            </td>\n            <td>\n                <?php if ($user->getStatus() === 'blocked') : ?>\n                  <a onclick=\"activateUser(this); return false;\"\n                     href=\"#\" class=\"btn btn-success btn_user_id_<?= $user->getUserData('user_id') ?>\"\n                     data-csrf-token=\"<?= $currentUser->getCsrfTokenFromSession() ?>\"\n                     data-user-id=\"<?= $user->getUserData('user_id') ?>\">\n                      <?= $PMF_LANG['ad_news_set_active'] ?>\n                  </a>\n                <?php endif;\n                ?>\n            </td>\n            <td>\n                <?php if ($user->getStatus() !== 'protected') : ?>\n                  <a href=\"#\" onclick=\"deleteUser(this); return false;\" class=\"btn btn-danger\"\n                     data-csrf-token=\"<?= $currentUser->getCsrfTokenFromSession() ?>\"\n                     data-user-id=\"<?= $user->getUserData('user_id') ?>\">\n                    <i class=\"fa fa-trash\"></i> <?= $PMF_LANG['ad_user_delete'] ?>\n                  </a>\n                <?php endif;\n                ?>\n            </td>\n          </tr>\n            <?php\n        }\n        ?>\n        </tbody>\n      </table>\n        <?php\n    }\n    ?>\n\n  <!-- Modal to add a new user -->\n  <div class=\"modal fade\" id=\"addUserModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addUserModalLabel\"\n       aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"addUserModalLabel\">\n            <i aria-hidden=\"true\" class=\"fa fa-user-plus\"></i> <?= $PMF_LANG['ad_adus_adduser'] ?>\n          </h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <form action=\"#\" method=\"post\" role=\"form\" id=\"pmf-add-user-form\" class=\"needs-validation\" autocomplete=\"off\"\n                novalidate>\n\n            <input type=\"hidden\" id=\"add_user_csrf\" name=\"add_user_csrf\"\n                   value=\"<?= $currentUser->getCsrfTokenFromSession() ?>\">\n\n            <div class=\"alert alert-danger d-none\" id=\"pmf-add-user-error-message\"></div>\n\n            <div class=\"form-group row\">\n              <label class=\"col-lg-4 col-form-label\" for=\"add_user_name\"><?= $PMF_LANG['ad_adus_name'] ?></label>\n              <div class=\"col-lg-8\">\n                <input type=\"text\" name=\"add_user_name\" id=\"add_user_name\" required tabindex=\"1\" class=\"form-control\">\n              </div>\n            </div>\n\n            <div class=\"form-group row\">\n              <label class=\"col-lg-4 col-form-label\"\n                     for=\"add_user_realname\"><?= $PMF_LANG['ad_user_realname'] ?></label>\n              <div class=\"col-lg-8\">\n                <input type=\"text\" name=\"add_user_realname\" id=\"add_user_realname\" required tabindex=\"2\"\n                       class=\"form-control\">\n              </div>\n            </div>\n\n            <div class=\"form-group row\">\n              <label class=\"col-lg-4 col-form-label\" for=\"add_user_email\"><?= $PMF_LANG['ad_entry_email'] ?></label>\n              <div class=\"col-lg-8\">\n                <input type=\"email\" name=\"user_email\" id=\"add_user_email\" required tabindex=\"3\" class=\"form-control\">\n              </div>\n            </div>\n\n            <div class=\"form-group row\">\n              <div class=\"col-lg-4\"></div>\n              <div class=\"col-lg-8\">\n                <div class=\"form-check\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"add_user_automatic_password\"\n                         name=\"add_user_automatic_password\">\n                  <label class=\"form-check-label\" for=\"add_user_automatic_password\">\n                      <?= $PMF_LANG['ad_add_user_change_password'] ?>\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div id=\"add_user_show_password_inputs\">\n              <div class=\"form-group row\">\n                <label class=\"col-lg-4 col-form-label\"\n                       for=\"add_user_password\"><?= $PMF_LANG['ad_adus_password'] ?></label>\n                <div class=\"col-lg-8\">\n                  <input type=\"password\" name=\"add_user_password\" id=\"add_user_password\" class=\"form-control\"\n                         autocomplete=\"off\" tabindex=\"4\">\n                </div>\n              </div>\n\n              <div class=\"form-group row\">\n                <label class=\"col-lg-4 col-form-label\"\n                       for=\"add_user_password_confirm\"><?= $PMF_LANG['ad_passwd_con'] ?></label>\n                <div class=\"col-lg-8\">\n                  <input type=\"password\" name=\"add_user_password_confirm\" id=\"add_user_password_confirm\"\n                         class=\"form-control\" autocomplete=\"off\" tabindex=\"5\">\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group row\">\n              <div class=\"col-lg-4\"></div>\n              <div class=\"col-lg-8\">\n                <div class=\"form-check\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"add_user_is_superadmin\" name=\"user_is_superadmin\">\n                  <label class=\"form-check-label\" for=\"add_user_is_superadmin\">\n                      <?= $PMF_LANG['ad_user_is_superadmin'] ?>\n                  </label>\n                </div>\n              </div>\n            </div>\n\n          </form>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\n              <?= $PMF_LANG['ad_gen_cancel'] ?>\n          </button>\n          <button type=\"button\" class=\"btn btn-primary\" id=\"pmf-add-user-action\">\n              <?= $PMF_LANG['ad_gen_save'] ?>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    /**\n     * Ajax call to delete user\n     *\n     * @param identifier\n     */\n    function deleteUser(identifier) {\n      if (confirm('<?= $PMF_LANG['ad_user_del_3'] ?>')) {\n        const csrf = $(identifier).data('csrf-token');\n        const userId = $(identifier).data('user-id');\n\n        $.getJSON('index.php?action=ajax&ajax=user&ajaxaction=delete_user&user_id=' + userId + '&csrf=' + csrf,\n          (response) => {\n            $('#pmf-user-message').html(response);\n            $('.row_user_id_' + userId).fadeOut('slow');\n          });\n      }\n    }\n\n    /**\n     * Ajax call to delete user\n     *\n     * @param identifier\n     */\n    function activateUser(identifier) {\n      if (confirm('<?= $PMF_LANG['ad_user_active'] ?>')) {\n        const csrf = $(identifier).data('csrf-token');\n        const userId = $(identifier).data('user-id');\n        $.getJSON('index.php?action=ajax&ajax=user&ajaxaction=activate_user&user_id=' + userId + '&csrf=' + csrf,\n          () => {\n            const icon = $('.icon_user_id_' + userId);\n            icon.toggleClass('fa-lock fa-check');\n            $('.btn_user_id_' + userId).remove();\n          });\n      }\n    }\n\n  </script>\n\n    <?php\n\n    if (isset($userId)) {\n        echo '<script>updateUser(' . $userId . ')</script>';\n    }\n} else {\n    echo $PMF_LANG['err_NotAuth'];\n}\n"], "fixing_code": ["<?php\n\n/**\n * AJAX: handling of Ajax user calls.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package   phpMyFAQ\n * @author    Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2009-2022 phpMyFAQ Team\n * @license   http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link      https://www.phpmyfaq.de\n * @since     2009-04-04\n */\n\nuse phpMyFAQ\\Auth;\nuse phpMyFAQ\\Category;\nuse phpMyFAQ\\Core\\Exception;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Helper\\HttpHelper;\nuse phpMyFAQ\\Helper\\MailHelper;\nuse phpMyFAQ\\Permission;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\User;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\n$ajaxAction = Filter::filterInput(INPUT_GET, 'ajaxaction', FILTER_UNSAFE_RAW);\n$userId = Filter::filterInput(INPUT_GET, 'user_id', FILTER_VALIDATE_INT);\n$userSearch = Filter::filterInput(INPUT_GET, 'q', FILTER_UNSAFE_RAW);\n$csrfToken = Filter::filterInput(INPUT_GET, 'csrf', FILTER_UNSAFE_RAW);\n\n// Send headers\n$http = new HttpHelper();\n$http->setContentType('application/json');\n$http->addHeader();\n\nif (\n    $user->perm->hasPermission($user->getUserId(), 'add_user') ||\n    $user->perm->hasPermission($user->getUserId(), 'edit_user') ||\n    $user->perm->hasPermission($user->getUserId(), 'delete_user')\n) {\n    $user = new User($faqConfig);\n\n    switch ($ajaxAction) {\n        case 'get_user_list':\n            $allUsers = [];\n            foreach ($user->searchUsers($userSearch) as $singleUser) {\n                $users = new \\stdClass();\n                $users->user_id = (int)$singleUser['user_id'];\n                $users->name = $singleUser['login'];\n                $allUsers[] = $users;\n            }\n            $http->sendJsonWithHeaders($allUsers);\n            break;\n\n        case 'get_user_data':\n            $user->getUserById($userId, true);\n            $userdata = [];\n            $userdata = $user->userdata->get('*');\n            $userdata['status'] = $user->getStatus();\n            $userdata['login'] = Strings::htmlentities($user->getLogin());\n            $userdata['is_superadmin'] = $user->isSuperAdmin();\n            $http->sendJsonWithHeaders($userdata);\n            break;\n\n        case 'get_all_user_data':\n            $allUsers = $user->getAllUsers(false);\n            $userData = [];\n            foreach ($allUsers as $userId) {\n                $user->getUserById($userId, true);\n                $userObject = new \\stdClass();\n                $userObject->id = $user->getUserId();\n                $userObject->status = $user->getStatus();\n                $userObject->isSuperAdmin = $user->isSuperAdmin();\n                $userObject->isVisible = $user->getUserData('is_visible');\n                $userObject->displayName = $user->getUserData('display_name');\n                $userObject->userName = $user->getLogin();\n                $userObject->email = $user->getUserData('email');\n                $userData[] = $userObject;\n            }\n            $http->setStatus(200);\n            $http->sendJsonWithHeaders($userData);\n            break;\n\n        case 'get_user_rights':\n            $user->getUserById($userId, true);\n            $http->sendJsonWithHeaders($user->perm->getUserRights($userId));\n            break;\n\n        case 'activate_user':\n            if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n                $http->setStatus(400);\n                $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n                exit(1);\n            }\n\n            $user->getUserById($userId, true);\n            $user->activateUser();\n            $http->sendJsonWithHeaders($user->getStatus());\n            break;\n\n        case 'add_user':\n            if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n                $http->setStatus(400);\n                $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n                exit(1);\n            }\n\n            $errorMessage = [];\n            $successMessage = '';\n\n            $postData = json_decode(file_get_contents('php://input'), true);\n\n            $userName = Filter::filterVar($postData['userName'], FILTER_UNSAFE_RAW);\n            $userRealName = Filter::filterVar($postData['realName'], FILTER_UNSAFE_RAW);\n            $userEmail = Filter::filterVar($postData['email'], FILTER_VALIDATE_EMAIL);\n            $automaticPassword = Filter::filterVar($postData['automaticPassword'], FILTER_VALIDATE_BOOLEAN);\n            $userPassword = Filter::filterVar($postData['password'], FILTER_UNSAFE_RAW);\n            $userPasswordConfirm = Filter::filterVar($postData['passwordConfirm'], FILTER_UNSAFE_RAW);\n            $userIsSuperAdmin = Filter::filterVar($postData['isSuperAdmin'], FILTER_VALIDATE_BOOLEAN);\n\n            $newUser = new User($faqConfig);\n\n            if (!$newUser->isValidLogin($userName)) {\n                $errorMessage[] = $PMF_LANG['ad_user_error_loginInvalid'];\n            }\n            if ($newUser->getUserByLogin($userName)) {\n                $errorMessage[] = $PMF_LANG['ad_adus_exerr'];\n            }\n            if ($userRealName === '') {\n                $errorMessage[] = $PMF_LANG['ad_user_error_noRealName'];\n            }\n            if (is_null($userEmail)) {\n                $errorMessage[] = $PMF_LANG['ad_user_error_noEmail'];\n            }\n            if (!$automaticPassword) {\n                if (strlen($userPassword) <= 7 || strlen($userPasswordConfirm) <= 7) {\n                    $errorMessage[] = $PMF_LANG['ad_passwd_fail'];\n                }\n            }\n\n            if (count($errorMessage) === 0) {\n                if (!$newUser->createUser($userName, $userPassword)) {\n                    $errorMessage[] = $newUser->error();\n                } else {\n                    $newUser->userdata->set(['display_name', 'email', 'is_visible'], [$userRealName, $userEmail, 0]);\n                    $newUser->setStatus('active');\n                    $newUser->setSuperAdmin(!is_null($userIsSuperAdmin));\n                    $mailHelper = new MailHelper($faqConfig);\n                    try {\n                        $mailHelper->sendMailToNewUser($newUser, $userPassword);\n                    } catch (Exception $e) {\n                        // @todo catch exception\n                    }\n                    $successMessage = [ 'data' => $PMF_LANG['ad_adus_suc'] ];\n                }\n\n                $http->setStatus(201);\n                $http->sendJsonWithHeaders($successMessage);\n                exit(1);\n            }\n\n            $http->setStatus(400);\n            $http->sendJsonWithHeaders($errorMessage);\n            break;\n\n        case 'delete_user':\n            if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n                $http->setStatus(400);\n                $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n                exit(1);\n            }\n\n            $user->getUserById($userId, true);\n            if ($user->getStatus() == 'protected' || $userId == 1) {\n                $message = '<p class=\"alert alert-error\">' . $PMF_LANG['ad_user_error_protectedAccount'] . '</p>';\n            } else {\n                if (!$user->deleteUser()) {\n                    $message = $PMF_LANG['ad_user_error_delete'];\n                } else {\n                    $category = new Category($faqConfig, [], false);\n                    $category->moveOwnership((int) $userId, 1);\n\n                    // Remove the user from groups\n                    if ('basic' !== $faqConfig->get('security.permLevel')) {\n                        $permissions = Permission::selectPerm('medium', $faqConfig);\n                        $permissions->removeFromAllGroups($userId);\n                    }\n\n                    $message = '<p class=\"alert alert-success\">' . $PMF_LANG['ad_user_deleted'] . '</p>';\n                }\n            }\n            $http->sendJsonWithHeaders($message);\n            break;\n\n        case 'overwrite_password':\n            $userId = Filter::filterInput(INPUT_POST, 'user_id', FILTER_VALIDATE_INT);\n            $csrfToken = Filter::filterInput(INPUT_POST, 'csrf', FILTER_UNSAFE_RAW);\n            $newPassword = Filter::filterInput(INPUT_POST, 'npass', FILTER_UNSAFE_RAW);\n            $retypedPassword = Filter::filterInput(INPUT_POST, 'bpass', FILTER_UNSAFE_RAW);\n\n            if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n                $http->setStatus(400);\n                $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n                exit(1);\n            }\n\n            if (strlen($newPassword) <= 7 || strlen($retypedPassword) <= 7) {\n                $http->setStatus(400);\n                $http->sendJsonWithHeaders(['error' => $PMF_LANG['ad_passwd_fail']]);\n                exit(1);\n            }\n\n            $user->getUserById($userId, true);\n            $auth = new Auth($faqConfig);\n            $authSource = $auth->selectAuth($user->getAuthSource('name'));\n            $authSource->selectEncType($user->getAuthData('encType'));\n\n            if ($newPassword === $retypedPassword) {\n                if (!$user->changePassword($newPassword)) {\n                    $http->setStatus(400);\n                    $http->sendJsonWithHeaders(['error' => $PMF_LANG['ad_passwd_fail']]);\n                }\n                $http->sendJsonWithHeaders(['success' => $PMF_LANG['ad_passwdsuc']]);\n            } else {\n                $http->setStatus(400);\n                $http->sendJsonWithHeaders(['error' => $PMF_LANG['ad_passwd_fail']]);\n            }\n\n            break;\n    }\n}\n", "/**\n * JavaScript functions for user frontend\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2010-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2010-05-02\n */\n\n/*global $:false, getUserData: false */\n\n/**\n * Fetches the user rights as JSON object and checks the checkboxes\n *\n * @param userId User ID\n */\nfunction getUserRights(userId) {\n  'use strict';\n\n  resetUserRights();\n  $.getJSON('index.php?action=ajax&ajax=user&ajaxaction=get_user_rights&user_id=' + userId, (data) => {\n    $.each(data, (i, val) => {\n      document.getElementById('user_right_' + val).checked = true;\n    });\n    document.getElementById('rights_user_id').value = userId;\n  });\n}\n\n/**\n * Updates the user data in forms\n *\n * @param userId User ID\n */\nfunction updateUser(userId) {\n  'use strict';\n\n  getUserData(userId);\n  getUserRights(userId);\n}\n\nfunction resetUserRights() {\n  const inputs = document.querySelectorAll('.permission');\n  for(let i = 0; i < inputs.length; i++) {\n    inputs[i].checked = false;\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  'use strict';\n\n  /**\n   * Button Password Overwrite\n   * @type {jQuery|HTMLElement}\n   */\n  const button = $('#checkAll');\n  const buttonOverwritePassword = $('.pmf-user-password-overwrite-action');\n\n  button.data('type', 'check');\n  button.on('click', (event) => {\n    const checkbox = $('.permission');\n    event.preventDefault();\n    if (button.data('type') === 'check') {\n      checkbox.prop('checked', true);\n      button.data('type', 'uncheck');\n    } else {\n      checkbox.prop('checked', false);\n      button.data('type', 'check');\n    }\n  });\n\n  buttonOverwritePassword.on('click', (event) => {\n    event.preventDefault();\n\n    // Fetch data\n    $.ajax({\n      url: 'index.php?action=ajax&ajax=user&ajaxaction=overwrite_password',\n      type: 'POST',\n      data: $('#pmf-modal-user-password-overwrite form').serialize(),\n      dataType: 'json',\n      beforeSend: function () {\n        $('#pmf-admin-saving-data-indicator').html(\n          '<i class=\"fa fa-cog fa-spin fa-fw\"></i><span class=\"sr-only\">Saving ...</span>'\n        );\n      },\n      success: function (message) {\n        $('.pmf-admin-overwrite-password').replaceWith('<p>\u2713 ' + message.success + '</p>');\n        $('#pmf-modal-user-password-overwrite').modal('hide');\n        $('#pmf-admin-saving-data-indicator').fadeOut();\n      },\n    });\n    return false;\n  });\n\n  /**\n   * User search autocomplete\n   */\n  $('.pmf-user-autocomplete').typeahead({\n    autoSelect: true,\n    delay: 300,\n    minLength: 1,\n    source: (request, response) => {\n      $.ajax({\n        url: 'index.php?action=ajax&ajax=user&ajaxaction=get_user_list',\n        type: 'GET',\n        dataType: 'JSON',\n        data: 'q=' + request,\n        success: (data) => {\n          response(\n            data.map((item) => {\n              return {\n                user_id: item.user_id,\n                name: item.name,\n              };\n            })\n          );\n        },\n      });\n    },\n    displayText: (item) => {\n      return typeof item !== 'undefined' && typeof item.name !== 'undefined' ? item.name : item;\n    },\n    afterSelect: (user) => {\n      $('#user_list_select').val(user.user_id);\n      updateUser(user.user_id);\n    },\n  });\n\n  /**\n   * Modal handling add user\n   * @type {Element | HTMLElement}\n   */\n  const modal = document.getElementById('addUserModal');\n  const modalBackdrop = document.getElementsByClassName('modal-backdrop fade show');\n  const addUser = document.getElementById('pmf-add-user-action');\n  const addUserForm = document.getElementById('pmf-add-user-form');\n  const addUserError = document.getElementById('pmf-add-user-error-message');\n  const addUserMessage = document.getElementById('pmf-user-message');\n  const passwordToggle = document.getElementById('add_user_automatic_password');\n  const passwordInputs = document.getElementById('add_user_show_password_inputs');\n\n  if (passwordToggle) {\n    passwordToggle.addEventListener('click', () => {\n      passwordInputs.classList.toggle('d-none');\n    });\n  }\n\n  if (addUser) {\n    addUser.addEventListener('click', (event) => {\n      event.preventDefault();\n      const csrf = document.getElementById('add_user_csrf').value;\n      const userName = document.getElementById('add_user_name').value;\n      const realName = document.getElementById('add_user_realname').value;\n      const email = document.getElementById('add_user_email').value;\n      const automaticPassword = document.getElementById('add_user_automatic_password').checked;\n      const password = document.getElementById('add_user_password').value;\n      const passwordConfirm = document.getElementById('add_user_password_confirm').value;\n      const isSuperAdmin = document.querySelector('#add_user_is_superadmin').checked;\n\n      addUserForm.classList.add('was-validated');\n\n      const userData = {\n        userName,\n        realName,\n        email,\n        automaticPassword,\n        password,\n        passwordConfirm,\n        isSuperAdmin,\n      };\n\n      postUserData('index.php?action=ajax&ajax=user&ajaxaction=add_user&csrf=' + csrf, userData)\n        .then(async (response) => {\n          if (response.status !== 201) {\n            const errors = await response.json();\n            let errorMessage = '';\n\n            errors.forEach((error) => {\n              errorMessage += `${error}<br>`;\n            });\n\n            addUserError.classList.remove('d-none');\n            addUserError.innerHTML = errorMessage;\n          } else {\n            const result = await response.json();\n\n            addUserMessage.innerHTML = `<p class=\"alert alert-success\">${result.data}</p>`;\n\n            modal.style.display = 'none';\n            modal.classList.remove('show');\n            modalBackdrop[0].parentNode.removeChild(modalBackdrop[0]);\n          }\n        })\n        .catch((error) => {\n          console.log('Final Request failure: ', error);\n        });\n    });\n  }\n\n  /**\n   * Post user data to API\n   * @param url\n   * @param data\n   * @returns {Promise<Response>}\n   */\n  async function postUserData(url = '', data = {}) {\n    return await fetch(url, {\n      method: 'POST',\n      cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify(data),\n    });\n  }\n\n  /**\n   * Export all users\n   * @type {Element | HTMLElement}\n   */\n  const buttonExportAllUsers = document.getElementById('pmf-button-export-users');\n\n  if (buttonExportAllUsers) {\n    buttonExportAllUsers.addEventListener('click', (event) => {\n      event.preventDefault();\n\n      fetch('index.php?action=ajax&ajax=user&ajaxaction=get_all_user_data', {\n        method: 'GET',\n        cache: 'no-cache',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n      })\n        .then(async (response) => {\n          if (response.status === 200) {\n            const userData = await response.json();\n\n            const replacer = (key, value) => (value === null ? '' : value);\n            const header = Object.keys(userData[0]);\n            let csv = userData.map((row) =>\n              header.map((fieldName) => JSON.stringify(row[fieldName], replacer)).join(',')\n            );\n            csv.unshift(header.join(','));\n            csv = csv.join('\\r\\n');\n\n            let hiddenElement = document.createElement('a');\n            hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n            hiddenElement.target = '_blank';\n            hiddenElement.download = 'phpmyfaq-users-' + new Date().toISOString().substring(0, 10) + '.csv';\n            hiddenElement.click();\n          }\n        })\n        .catch((error) => {\n          console.log('Final Request failure: ', error);\n        });\n    });\n  }\n});\n", "<?php\n\n/**\n * Displays the user management frontend.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Lars Tiedemann <php@larstiedemann.de>\n * @author Uwe Pries <uwe.pries@digartis.de>\n * @author Sarah Hermann <sayh@gmx.de>\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2005-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2005-12-15\n */\n\nuse phpMyFAQ\\Category;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Pagination;\nuse phpMyFAQ\\Permission;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\User;\nuse phpMyFAQ\\User\\CurrentUser;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\nif (\n    $user->perm->hasPermission($user->getUserId(), 'edit_user') || $user->perm->hasPermission(\n        $user->getUserId(),\n        'delete_user'\n    ) || $user->perm->hasPermission($user->getUserId(), 'add_user')\n) {\n\n    $userId = Filter::filterInput(INPUT_GET, 'user_id', FILTER_VALIDATE_INT);\n    ?>\n  <script src=\"assets/js/user.js\"></script>\n    <?php\n\n    // set some parameters\n    $selectSize = 10;\n    $defaultUserAction = 'list';\n    $defaultUserStatus = 'active';\n    $userActionList = [\n        'update_rights',\n        'update_data',\n        'delete_confirm',\n        'delete',\n        'addsave',\n        'list',\n        'listallusers'\n    ];\n\n    // what shall we do?\n    // actions defined by url: user_action=\n    $userAction = Filter::filterInput(INPUT_GET, 'user_action', FILTER_UNSAFE_RAW, $defaultUserAction);\n    $currentUser = new CurrentUser($faqConfig);\n\n    // actions defined by submit button\n    if (isset($_POST['user_action_deleteConfirm'])) {\n        $userAction = 'delete_confirm';\n    }\n    if (isset($_POST['cancel'])) {\n        $userAction = $defaultUserAction;\n    }\n\n    // update user rights\n    if ($userAction == 'update_rights' && $user->perm->hasPermission($user->getUserId(), 'edit_user')) {\n        $message = '';\n        $userAction = $defaultUserAction;\n        $userId = Filter::filterInput(INPUT_POST, 'user_id', FILTER_VALIDATE_INT, 0);\n        $csrfOkay = true;\n        $csrfToken = Filter::filterInput(INPUT_POST, 'csrf', FILTER_UNSAFE_RAW);\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $csrfOkay = false;\n        }\n        if (0 === (int)$userId || !$csrfOkay) {\n            $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_user_error_noId']);\n        } else {\n            $user = new User($faqConfig);\n            $perm = $user->perm;\n            // @todo: Add Filter::filterInput[]\n            $userRights = isset($_POST['user_rights']) ? $_POST['user_rights'] : [];\n            if (!$perm->refuseAllUserRights($userId)) {\n                $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_msg_mysqlerr']);\n            }\n            foreach ($userRights as $rightId) {\n                $perm->grantUserRight($userId, $rightId);\n            }\n            $idUser = $user->getUserById($userId, true);\n            $message .= sprintf(\n                '<p class=\"alert alert-success\">%s <strong>%s</strong> %s</p>',\n                $PMF_LANG['ad_msg_savedsuc_1'],\n                Strings::htmlentities($user->getLogin(), ENT_QUOTES),\n                $PMF_LANG['ad_msg_savedsuc_2']\n            );\n            $message .= '<script>updateUser(' . $userId . ')</script>';\n            $user = new CurrentUser($faqConfig);\n        }\n    }\n\n    // update user data\n    if ($userAction == 'update_data' && $user->perm->hasPermission($user->getUserId(), 'edit_user')) {\n        $message = '';\n        $userAction = $defaultUserAction;\n        $userId = Filter::filterInput(INPUT_POST, 'user_id', FILTER_VALIDATE_INT, 0);\n        if ($userId == 0) {\n            $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_user_error_noId']);\n        } else {\n            $userData = [];\n            $userData['display_name'] = Filter::filterInput(INPUT_POST, 'display_name', FILTER_UNSAFE_RAW, '');\n            $userData['email'] = Filter::filterInput(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL, '');\n            $userData['last_modified'] = Filter::filterInput(INPUT_POST, 'last_modified', FILTER_UNSAFE_RAW, '');\n            $userStatus = Filter::filterInput(INPUT_POST, 'user_status', FILTER_UNSAFE_RAW, $defaultUserStatus);\n            $isSuperAdmin = Filter::filterInput(INPUT_POST, 'is_superadmin', FILTER_UNSAFE_RAW);\n            $isSuperAdmin = $isSuperAdmin === 'on';\n\n            $user = new User($faqConfig);\n            $user->getUserById($userId, true);\n\n            $stats = $user->getStatus();\n\n            // set new password an send email if user is switched to active\n            if ($stats == 'blocked' && $userStatus == 'active') {\n                if (!$user->activateUser()) {\n                    $userStatus = 'invalid_status';\n                }\n            }\n\n            // Set super-admin flag\n            $user->setSuperAdmin($isSuperAdmin);\n\n            if (\n                !$user->userdata->set(array_keys($userData), array_values($userData)) ||\n                !$user->setStatus($userStatus)\n            ) {\n                $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_msg_mysqlerr']);\n            } else {\n                $message .= sprintf(\n                    '<p class=\"alert alert-success\">%s <strong>%s</strong> %s</p>',\n                    $PMF_LANG['ad_msg_savedsuc_1'],\n                    Strings::htmlentities($user->getLogin(), ENT_QUOTES),\n                    $PMF_LANG['ad_msg_savedsuc_2']\n                );\n                $message .= '<script>updateUser(' . $userId . ');</script>';\n            }\n        }\n    }\n\n    // delete user confirmation\n    if ($userAction == 'delete_confirm' && $user->perm->hasPermission($user->getUserId(), 'delete_user')) {\n        $message = '';\n        $user = new CurrentUser($faqConfig);\n\n        $userId = Filter::filterInput(INPUT_GET, 'user_delete_id', FILTER_VALIDATE_INT, 0);\n        if ($userId == 0) {\n            $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_user_error_noId']);\n            $userAction = $defaultUserAction;\n        } else {\n            $user->getUserById($userId, true);\n            // account is protected\n            if ($user->getStatus() == 'protected' || $userId == 1) {\n                $message .= sprintf(\n                    '<p class=\"alert alert-danger\">%s</p>',\n                    $PMF_LANG['ad_user_error_protectedAccount']\n                );\n                $userAction = $defaultUserAction;\n            } else {\n                ?>\n\n              <div\n                class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n                <h1 class=\"h2\">\n                  <i aria-hidden=\"true\" class=\"fa fa-user\"></i>\n                    <?= $PMF_LANG['ad_user_deleteUser'] ?> <?= Strings::htmlentities($user->getLogin(), ENT_QUOTES) ?>\n                </h1>\n              </div>\n\n              <p class=\"alert alert-danger\">\n                  <?= $PMF_LANG['ad_user_del_3'] . ' ' . $PMF_LANG['ad_user_del_1'] . ' ' . $PMF_LANG['ad_user_del_2'] ?>\n              </p>\n              <form action=\"?action=user&amp;user_action=delete\" method=\"post\" accept-charset=\"utf-8\">\n                <input type=\"hidden\" name=\"user_id\" value=\"<?= $userId ?>\">\n                <input type=\"hidden\" name=\"csrf\" value=\"<?= $currentUser->getCsrfTokenFromSession() ?>\">\n                <p class=\"text-center\">\n                  <button class=\"btn btn-danger\" type=\"submit\">\n                      <?= $PMF_LANG['ad_gen_yes'] ?>\n                  </button>\n                  <a class=\"btn btn-info\" href=\"?action=user\">\n                      <?= $PMF_LANG['ad_gen_no'] ?>\n                  </a>\n                </p>\n              </form>\n                <?php\n            }\n        }\n    }\n\n    // delete user\n    if ($userAction == 'delete' && $user->perm->hasPermission($user->getUserId(), 'delete_user')) {\n        $message = '';\n        $user = new User($faqConfig);\n        $userId = Filter::filterInput(INPUT_POST, 'user_id', FILTER_VALIDATE_INT, 0);\n        $csrfOkay = true;\n        $csrfToken = Filter::filterInput(INPUT_POST, 'csrf', FILTER_UNSAFE_RAW);\n        $userAction = $defaultUserAction;\n\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $csrfOkay = false;\n        }\n        $userAction = $defaultUserAction;\n        if (0 === (int)$userId || !$csrfOkay) {\n            $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_user_error_noId']);\n        } else {\n            if (!$user->getUserById($userId, true)) {\n                $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_user_error_noId']);\n            }\n            if (!$user->deleteUser()) {\n                $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $PMF_LANG['ad_user_error_delete']);\n            } else {\n                // Move the categories ownership to admin (id == 1)\n                $oCat = new Category($faqConfig, [], false);\n                $oCat->setUser($currentAdminUser);\n                $oCat->setGroups($currentAdminGroups);\n                $oCat->moveOwnership((int) $userId, 1);\n\n                // Remove the user from groups\n                if ('basic' !== $faqConfig->get('security.permLevel')) {\n                    $oPerm = Permission::selectPerm('medium', $faqConfig);\n                    $oPerm->removeFromAllGroups($userId);\n                }\n\n                $message .= sprintf('<p class=\"alert alert-success\">%s</p>', $PMF_LANG['ad_user_deleted']);\n            }\n            $userError = $user->error();\n            if ($userError != '') {\n                $message .= sprintf('<p class=\"alert alert-danger\">%s</p>', $userError);\n            }\n        }\n    }\n\n    if (!isset($message)) {\n        $message = '';\n    }\n\n    // show list of users\n    if ($userAction === 'list') { ?>\n      <div\n        class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <h1 class=\"h2\">\n          <i aria-hidden=\"true\" class=\"fa fa-user\"></i>\n            <?= $PMF_LANG['ad_user'] ?>\n        </h1>\n        <div class=\"btn-toolbar mb-2 mb-md-0\">\n          <div class=\"btn-group mr-2\">\n              <?php if ($currentUser->perm->hasPermission($user->getUserId(), 'add_user')) : ?>\n                <button type=\"button\" class=\"btn btn-sm btn-primary\" data-toggle=\"modal\" data-target=\"#addUserModal\">\n                  <i class=\"fa fa-user-plus\" aria-label=\"true\"></i> <?= $PMF_LANG['ad_user_add'] ?>\n                </button>\n              <?php endif ?>\n              <?php if ($currentUser->perm->hasPermission($user->getUserId(), 'edit_user')) : ?>\n                <a class=\"btn btn-sm btn-secondary\" href=\"?action=user&amp;user_action=listallusers\">\n                  <i class=\"fa fa-users\" aria-label=\"true\"></i> <?= $PMF_LANG['list_all_users'] ?>\n                </a>\n              <?php endif ?>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"pmf-user-message\"><?= $message ?></div>\n\n      <script>\n        /**\n         * Returns the user data as JSON object\n         *\n         * @param user_id User ID\n         */\n        function getUserData(user_id) {\n          $('#user_data_table').empty();\n          $.getJSON('index.php?action=ajax&ajax=user&ajaxaction=get_user_data&user_id=' + user_id, function(data) {\n            $('#update_user_id').val(data.user_id);\n            $('#user_status_select').val(data.status);\n            $('#user_list_autocomplete').val(data.login);\n            $('#user_list_select').val(data.user_id);\n            $('#modal_user_id').val(data.user_id);\n            // Append input fields\n            $('#user_data_table').append(\n              '<div class=\"form-group row\">' +\n              '<label class=\"col-lg-4 col-form-label\"><?= $PMF_LANG['ad_user_realname'] ?></label>' +\n              '<div class=\"col-lg-8\">' +\n              '<input type=\"text\" name=\"display_name\" value=\"' + data.display_name + '\" class=\"form-control\" required>' +\n              '</div>' +\n              '</div>' +\n              '<div class=\"form-group row\">' +\n              '<label class=\"col-lg-4 col-form-label\"><?= $PMF_LANG['ad_entry_email'] ?></label>' +\n              '<div class=\"col-lg-8\">' +\n              '<input type=\"email\" name=\"email\" value=\"' + data.email + '\" class=\"form-control\" required>' +\n              '</div>' +\n              '</div>' +\n              '<div class=\"form-group row\">' +\n              '<div class=\"offset-lg-4 col-lg-8\">' +\n              '<div class=\"form-check\">' +\n              '<input class=\"form-check-input\" type=\"checkbox\" id=\"is_superadmin\" name=\"is_superadmin\">' +\n              '<label class=\"form-check-label\" for=\"is_superadmin\"><?= $PMF_LANG['ad_user_is_superadmin'] ?></label>' +\n              '</div>' +\n              '</div>' +\n              '</div>' +\n              '<div class=\"form-group row\">' +\n              '<div class=\"offset-lg-4 col-lg-8\">' +\n              '<a class=\"btn btn-danger pmf-admin-overwrite-password\" data-toggle=\"modal\" ' +\n              '   href=\"#pmf-modal-user-password-overwrite\"><?= $PMF_LANG['ad_user_overwrite_passwd'] ?></a>' +\n              '</div>' +\n              '</div>' +\n              '<input type=\"hidden\" name=\"last_modified\" value=\"' + data.last_modified + '\">',\n            );\n            if (data.is_superadmin) {\n              $('#is_superadmin').attr('checked', 'checked');\n            }\n          });\n        }\n      </script>\n\n      <div class=\"row\">\n        <div class=\"col-lg-4\">\n          <form name=\"user_select\" id=\"user_select\" action=\"?action=user&amp;user_action=delete_confirm\"\n                method=\"post\" role=\"form\" class=\"form_inline\">\n            <div class=\"card mb-4\">\n              <h5 class=\"card-header py-3\">\n                <i aria-hidden=\"true\" class=\"fa fa-search\"></i> <?= $PMF_LANG['msgSearch'] ?>\n              </h5>\n              <div class=\"card-body\">\n                <div class=\"input-group\">\n                  <input type=\"text\" id=\"user_list_autocomplete\" name=\"user_list_search\"\n                         class=\"form-control pmf-user-autocomplete\" autocomplete=\"off\"\n                         placeholder=\"<?= $PMF_LANG['ad_auth_user'] ?>\">\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div class=\"col-lg-4\">\n          <div class=\"card mb-4\">\n            <h5 class=\"card-header py-3\" id=\"user_data_legend\">\n              <i aria-hidden=\"true\" class=\"fa fa-user\"></i> <?= $PMF_LANG['ad_user_profou'] ?>\n            </h5>\n            <form action=\"?action=user&amp;user_action=update_data\" method=\"post\">\n              <div class=\"card-body\">\n                <input id=\"update_user_id\" type=\"hidden\" name=\"user_id\" value=\"0\">\n                <input type=\"hidden\" name=\"csrf\" value=\"<?= $currentUser->getCsrfTokenFromSession(); ?>\">\n                <div class=\"form-group row\">\n                  <label for=\"user_status_select\" class=\"col-lg-4 col-form-label\">\n                      <?= $PMF_LANG['ad_user_status'] ?>\n                  </label>\n                  <div class=\"col-lg-8\">\n                    <select id=\"user_status_select\" class=\"form-control\" name=\"user_status\">\n                      <option value=\"active\"><?= $PMF_LANG['ad_user_active'] ?></option>\n                      <option value=\"blocked\"><?= $PMF_LANG['ad_user_blocked'] ?></option>\n                      <option value=\"protected\"><?= $PMF_LANG['ad_user_protected'] ?></option>\n                    </select>\n                  </div>\n                </div>\n                <div id=\"user_data_table\"></div>\n              </div>\n              <div class=\"card-footer\">\n                <div class=\"card-button text-right\">\n                  <button class=\"btn btn-success\" type=\"submit\">\n                    <i aria-hidden=\"true\" class=\"fa fa-check\"></i> <?= $PMF_LANG['ad_gen_save'] ?>\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-4\" id=\"userRights\">\n          <form id=\"rightsForm\" action=\"?action=user&amp;user_action=update_rights\" method=\"post\"\n                accept-charset=\"utf-8\">\n            <input type=\"hidden\" name=\"csrf\" value=\"<?= $currentUser->getCsrfTokenFromSession() ?>\">\n            <input type=\"hidden\" name=\"user_id\" id=\"rights_user_id\" value=\"0\">\n\n            <div class=\"card mb-4\">\n              <h5 class=\"card-header py-3\" id=\"user_rights_legend\">\n                <i aria-hidden=\"true\" class=\"fa fa-lock\"></i> <?= $PMF_LANG['ad_user_rights'] ?>\n              </h5>\n              <div class=\"card-body\">\n                <div class=\"text-center mb-3\">\n                  <a class=\"btn btn-primary btn-sm\" href=\"#\" id=\"checkAll\">\n                    <?= $PMF_LANG['ad_user_checkall'] ?>\n                    /\n                    <?= $PMF_LANG['ad_user_uncheckall'] ?>\n                  </a>\n                </div>\n                  <?php foreach ($user->perm->getAllRightsData() as $right) : ?>\n                    <div class=\"form-check\">\n                      <input id=\"user_right_<?= $right['right_id'] ?>\" type=\"checkbox\"\n                             name=\"user_rights[]\" value=\"<?= $right['right_id'] ?>\"\n                             class=\"form-check-input permission\">\n                      <label class=\"form-check-label\" for=\"user_right_<?= $right['right_id'] ?>\">\n                          <?php\n                            if (isset($PMF_LANG['rightsLanguage'][$right['name']])) {\n                                echo $PMF_LANG['rightsLanguage'][$right['name']];\n                            } else {\n                                echo $right['description'];\n                            }\n                            ?>\n                      </label>\n                    </div>\n                  <?php endforeach; ?>\n              </div>\n              <div class=\"card-footer\">\n                <div class=\"card-button text-right\">\n                  <button class=\"btn btn-success\" type=\"submit\">\n                      <?= $PMF_LANG['ad_gen_save'] ?>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n\n      <div class=\"modal fade\" id=\"pmf-modal-user-password-overwrite\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h4><?= $PMF_LANG['ad_menu_passwd'] ?></h4>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <form action=\"#\" method=\"post\" accept-charset=\"utf-8\" autocomplete=\"off\">\n                <input type=\"hidden\" name=\"csrf\" value=\"<?= $currentUser->getCsrfTokenFromSession() ?>\">\n                <input type=\"hidden\" name=\"user_id\" id=\"modal_user_id\" value=\"<?= $userId ?>\">\n\n                <div class=\"form-group row\">\n                  <label class=\"col-lg-4 col-form-label\" for=\"npass\">\n                      <?= $PMF_LANG['ad_passwd_new'] ?>\n                  </label>\n                  <div class=\"col-lg-8\">\n                    <input type=\"password\" autocomplete=\"off\" name=\"npass\" id=\"npass\" class=\"form-control\" minlength=\"8\"\n                           required>\n                  </div>\n                </div>\n\n                <div class=\"form-group row\">\n                  <label class=\"col-lg-4 col-form-label\" for=\"bpass\">\n                      <?= $PMF_LANG['ad_passwd_con'] ?>\n                  </label>\n                  <div class=\"col-lg-8\">\n                    <input type=\"password\" autocomplete=\"off\" name=\"bpass\" id=\"bpass\" class=\"form-control\" minlength=\"8\"\n                           required>\n                  </div>\n                </div>\n\n              </form>\n            </div>\n            <div class=\"modal-footer\">\n              <button class=\"btn btn-primary pmf-user-password-overwrite-action\">\n                  <?= $PMF_LANG['ad_user_overwrite_passwd'] ?>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n        <?php\n    }\n\n    // show list of all users\n    if ($userAction == 'listallusers' && $user->perm->hasPermission($user->getUserId(), 'edit_user')) {\n        $allUsers = $user->getAllUsers(false);\n        $numUsers = count($allUsers);\n        $page = Filter::filterInput(INPUT_GET, 'page', FILTER_VALIDATE_INT, 0);\n        $perPage = 10;\n        $numPages = ceil($numUsers / $perPage);\n        $lastPage = $page * $perPage;\n        $firstPage = $lastPage - $perPage;\n\n        $baseUrl = sprintf(\n            '%sadmin/?action=user&amp;user_action=listallusers&amp;page=%d',\n            $faqConfig->getDefaultUrl(),\n            $page\n        );\n\n        // Pagination options\n        $options = [\n            'baseUrl' => $baseUrl,\n            'total' => $numUsers,\n            'perPage' => $perPage,\n            'useRewrite' => false,\n            'pageParamName' => 'page',\n        ];\n        $pagination = new Pagination($faqConfig, $options);\n        ?>\n\n      <div\n        class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <h1 class=\"h2\">\n          <i aria-hidden=\"true\" class=\"fa fa-user\"></i>\n            <?= $PMF_LANG['ad_user'] ?>\n        </h1>\n        <div class=\"btn-toolbar mb-2 mb-md-0\">\n          <div class=\"btn-group mr-2\">\n              <?php if ($currentUser->perm->hasPermission($user->getUserId(), 'add_user')) : ?>\n                <button type=\"button\" class=\"btn btn-sm btn-primary\" data-toggle=\"modal\" data-target=\"#addUserModal\">\n                  <i class=\"fa fa-user-plus\" aria-label=\"true\"></i> <?= $PMF_LANG['ad_user_add'] ?>\n                </button>\n              <?php endif ?>\n              <button type=\"button\" class=\"btn btn-sm btn-secondary\" id=\"pmf-button-export-users\">\n                <i class=\"fa fa-download\" aria-label=\"true\"></i> Export users as CSV\n              </button>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"pmf-user-message\"><?= $message ?></div>\n\n      <table class=\"table table-striped\">\n        <thead class=\"thead-dark\">\n        <tr>\n          <th><?= $PMF_LANG['ad_entry_id'] ?></th>\n          <th><?= $PMF_LANG['ad_user_status'] ?></th>\n          <th><?= $PMF_LANG['ad_user_is_superadmin'] ?></th>\n          <th><?= $PMF_LANG['ad_user_is_visible'] ?></th>\n          <th><?= $PMF_LANG['msgNewContentName'] ?></th>\n          <th><?= $PMF_LANG['ad_auth_user'] ?></th>\n          <th><?= $PMF_LANG['msgNewContentMail'] ?></th>\n          <th colspan=\"3\">&nbsp;</th>\n        </tr>\n        </thead>\n          <?php if ($perPage < $numUsers) : ?>\n            <tfoot>\n            <tr>\n              <td colspan=\"8\"><?= $pagination->render() ?></td>\n            </tr>\n            </tfoot>\n          <?php endif;\n            ?>\n        <tbody>\n        <?php\n        $counter = $displayedCounter = 0;\n        foreach ($allUsers as $listedUserId) {\n            $user->getUserById($listedUserId, true);\n\n            if ($displayedCounter >= $perPage) {\n                continue;\n            }\n            ++$counter;\n            if ($counter <= $firstPage) {\n                continue;\n            }\n            ++$displayedCounter;\n\n            ?>\n          <tr class=\"row_user_id_<?= $user->getUserId() ?>\">\n            <td><?= $user->getUserId() ?></td>\n            <td class=\"text-center\"><i class=\"fa <?php\n            switch ($user->getStatus()) {\n                case 'active':\n                    echo 'fa-check-circle-o';\n                    break;\n                case 'blocked':\n                    echo 'fa-ban';\n                    break;\n                case 'protected':\n                    echo 'fa-lock';\n                    break;\n            }\n            ?> icon_user_id_<?= $user->getUserId() ?>\"></i></td>\n            <td class=\"text-center\">\n              <i class=\"fa <?= $user->isSuperAdmin() ? 'fa-user-secret' : 'fa-user-times' ?>\"></i>\n            </td>\n            <td class=\"text-center\">\n              <i class=\"fa <?= $user->getUserData('is_visible') ? 'fa-user' : 'fa-user-o' ?>\"></i>\n            </td>\n            <td><?= Strings::htmlentities($user->getUserData('display_name'), ENT_QUOTES) ?></td>\n            <td><?= Strings::htmlentities($user->getLogin(), ENT_QUOTES) ?></td>\n            <td>\n              <a href=\"mailto:<?= $user->getUserData('email') ?>\">\n                  <?= $user->getUserData('email') ?>\n              </a>\n            </td>\n            <td>\n              <a href=\"?action=user&amp;user_id=<?= $user->getUserData('user_id') ?>\" class=\"btn btn-info\">\n                <i class=\"fa fa-pencil\"></i> <?= $PMF_LANG['ad_user_edit'] ?>\n              </a>\n            </td>\n            <td>\n                <?php if ($user->getStatus() === 'blocked') : ?>\n                  <a onclick=\"activateUser(this); return false;\"\n                     href=\"#\" class=\"btn btn-success btn_user_id_<?= $user->getUserData('user_id') ?>\"\n                     data-csrf-token=\"<?= $currentUser->getCsrfTokenFromSession() ?>\"\n                     data-user-id=\"<?= $user->getUserData('user_id') ?>\">\n                      <?= $PMF_LANG['ad_news_set_active'] ?>\n                  </a>\n                <?php endif;\n                ?>\n            </td>\n            <td>\n                <?php if ($user->getStatus() !== 'protected') : ?>\n                  <a href=\"#\" onclick=\"deleteUser(this); return false;\" class=\"btn btn-danger\"\n                     data-csrf-token=\"<?= $currentUser->getCsrfTokenFromSession() ?>\"\n                     data-user-id=\"<?= $user->getUserData('user_id') ?>\">\n                    <i class=\"fa fa-trash\"></i> <?= $PMF_LANG['ad_user_delete'] ?>\n                  </a>\n                <?php endif;\n                ?>\n            </td>\n          </tr>\n            <?php\n        }\n        ?>\n        </tbody>\n      </table>\n        <?php\n    }\n    ?>\n\n  <!-- Modal to add a new user -->\n  <div class=\"modal fade\" id=\"addUserModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addUserModalLabel\"\n       aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"addUserModalLabel\">\n            <i aria-hidden=\"true\" class=\"fa fa-user-plus\"></i> <?= $PMF_LANG['ad_adus_adduser'] ?>\n          </h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <form action=\"#\" method=\"post\" role=\"form\" id=\"pmf-add-user-form\" class=\"needs-validation\" autocomplete=\"off\"\n                novalidate>\n\n            <input type=\"hidden\" id=\"add_user_csrf\" name=\"add_user_csrf\"\n                   value=\"<?= $currentUser->getCsrfTokenFromSession() ?>\">\n\n            <div class=\"alert alert-danger d-none\" id=\"pmf-add-user-error-message\"></div>\n\n            <div class=\"form-group row\">\n              <label class=\"col-lg-4 col-form-label\" for=\"add_user_name\"><?= $PMF_LANG['ad_adus_name'] ?></label>\n              <div class=\"col-lg-8\">\n                <input type=\"text\" name=\"add_user_name\" id=\"add_user_name\" required tabindex=\"1\" class=\"form-control\">\n              </div>\n            </div>\n\n            <div class=\"form-group row\">\n              <label class=\"col-lg-4 col-form-label\"\n                     for=\"add_user_realname\"><?= $PMF_LANG['ad_user_realname'] ?></label>\n              <div class=\"col-lg-8\">\n                <input type=\"text\" name=\"add_user_realname\" id=\"add_user_realname\" required tabindex=\"2\"\n                       class=\"form-control\">\n              </div>\n            </div>\n\n            <div class=\"form-group row\">\n              <label class=\"col-lg-4 col-form-label\" for=\"add_user_email\"><?= $PMF_LANG['ad_entry_email'] ?></label>\n              <div class=\"col-lg-8\">\n                <input type=\"email\" name=\"user_email\" id=\"add_user_email\" required tabindex=\"3\" class=\"form-control\">\n              </div>\n            </div>\n\n            <div class=\"form-group row\">\n              <div class=\"col-lg-4\"></div>\n              <div class=\"col-lg-8\">\n                <div class=\"form-check\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"add_user_automatic_password\"\n                         name=\"add_user_automatic_password\">\n                  <label class=\"form-check-label\" for=\"add_user_automatic_password\">\n                      <?= $PMF_LANG['ad_add_user_change_password'] ?>\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div id=\"add_user_show_password_inputs\">\n              <div class=\"form-group row\">\n                <label class=\"col-lg-4 col-form-label\"\n                       for=\"add_user_password\"><?= $PMF_LANG['ad_adus_password'] ?></label>\n                <div class=\"col-lg-8\">\n                  <input type=\"password\" name=\"add_user_password\" id=\"add_user_password\" class=\"form-control\"\n                         minlength=\"8\" autocomplete=\"off\" tabindex=\"4\">\n                </div>\n              </div>\n\n              <div class=\"form-group row\">\n                <label class=\"col-lg-4 col-form-label\"\n                       for=\"add_user_password_confirm\"><?= $PMF_LANG['ad_passwd_con'] ?></label>\n                <div class=\"col-lg-8\">\n                  <input type=\"password\" name=\"add_user_password_confirm\" id=\"add_user_password_confirm\"\n                         minlength=\"8\" class=\"form-control\" autocomplete=\"off\" tabindex=\"5\">\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group row\">\n              <div class=\"col-lg-4\"></div>\n              <div class=\"col-lg-8\">\n                <div class=\"form-check\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"add_user_is_superadmin\" name=\"user_is_superadmin\">\n                  <label class=\"form-check-label\" for=\"add_user_is_superadmin\">\n                      <?= $PMF_LANG['ad_user_is_superadmin'] ?>\n                  </label>\n                </div>\n              </div>\n            </div>\n\n          </form>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\n              <?= $PMF_LANG['ad_gen_cancel'] ?>\n          </button>\n          <button type=\"button\" class=\"btn btn-primary\" id=\"pmf-add-user-action\">\n              <?= $PMF_LANG['ad_gen_save'] ?>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    /**\n     * Ajax call to delete user\n     *\n     * @param identifier\n     */\n    function deleteUser(identifier) {\n      if (confirm('<?= $PMF_LANG['ad_user_del_3'] ?>')) {\n        const csrf = $(identifier).data('csrf-token');\n        const userId = $(identifier).data('user-id');\n\n        $.getJSON('index.php?action=ajax&ajax=user&ajaxaction=delete_user&user_id=' + userId + '&csrf=' + csrf,\n          (response) => {\n            $('#pmf-user-message').html(response);\n            $('.row_user_id_' + userId).fadeOut('slow');\n          });\n      }\n    }\n\n    /**\n     * Ajax call to delete user\n     *\n     * @param identifier\n     */\n    function activateUser(identifier) {\n      if (confirm('<?= $PMF_LANG['ad_user_active'] ?>')) {\n        const csrf = $(identifier).data('csrf-token');\n        const userId = $(identifier).data('user-id');\n        $.getJSON('index.php?action=ajax&ajax=user&ajaxaction=activate_user&user_id=' + userId + '&csrf=' + csrf,\n          () => {\n            const icon = $('.icon_user_id_' + userId);\n            icon.toggleClass('fa-lock fa-check');\n            $('.btn_user_id_' + userId).remove();\n          });\n      }\n    }\n\n  </script>\n\n    <?php\n\n    if (isset($userId)) {\n        echo '<script>updateUser(' . $userId . ')</script>';\n    }\n} else {\n    echo $PMF_LANG['err_NotAuth'];\n}\n"], "filenames": ["phpmyfaq/admin/ajax.user.php", "phpmyfaq/admin/assets/js/user.js", "phpmyfaq/admin/user.php"], "buggy_code_start_loc": [122, 159, 447], "buggy_code_end_loc": [206, 169, 697], "fixing_code_start_loc": [123, 160, 447], "fixing_code_end_loc": [220, 172, 699], "type": "CWE-521", "message": "Weak Password Requirements in GitHub repository thorsten/phpmyfaq prior to 3.1.11.", "other": {"cve": {"id": "CVE-2023-0793", "sourceIdentifier": "security@huntr.dev", "published": "2023-02-12T14:15:11.803", "lastModified": "2023-02-24T06:23:13.627", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Weak Password Requirements in GitHub repository thorsten/phpmyfaq prior to 3.1.11."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 4.2}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-521"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-521"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpmyfaq:phpmyfaq:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.1.11", "matchCriteriaId": "0CADCF40-01A2-41DD-B454-4F5946570CA9"}]}]}], "references": [{"url": "https://github.com/thorsten/phpmyfaq/commit/00c04093c671607ee06cdfd670070809460f9547", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/b3881a1f-2f1e-45cb-86f3-735f66e660e9", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/thorsten/phpmyfaq/commit/00c04093c671607ee06cdfd670070809460f9547"}}