{"buggy_code": ["<?php\n/* Copyright (c) 2002-2007  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2012  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2004       Sebastien Di Cintio     <sdicintio@ressource-toi.org>\n * Copyright (C) 2004       Eric Seigne             <eric.seigne@ryxeo.com>\n * Copyright (C) 2005-2017  Regis Houssin           <regis.houssin@capnetworks.com>\n * Copyright (C) 2006       Andre Cianfarani        <acianfa@free.fr>\n * Copyright (C) 2006       Marc Barilley/Ocebo     <marc@ocebo.com>\n * Copyright (C) 2007       Franky Van Liedekerke   <franky.van.liedekerker@telenet.be>\n * Copyright (C) 2007       Patrick Raguin          <patrick.raguin@gmail.com>\n * Copyright (C) 2010       Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2010-2014  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2011       Herve Prot              <herve.prot@symeos.com>\n * Copyright (C) 2012-2016  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2012       Cedric Salvador         <csalvador@gpcsolutions.fr>\n * Copyright (C) 2012-2015  Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2014       Alexandre Spangaro      <aspangaro.dolibarr@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/core/class/html.form.class.php\n *  \\ingroup    core\n *\t\\brief      File of class with all html predefined components\n */\n\n\n/**\n *\tClass to manage generation of HTML components\n *\tOnly common components must be here.\n *\n *  TODO Merge all function load_cache_* and loadCache* (except load_cache_vatrates) into one generic function loadCacheTable\n */\nclass Form\n{\n\tvar $db;\n\tvar $error;\n\tvar $num;\n\n\t// Cache arrays\n\tvar $cache_types_paiements=array();\n\tvar $cache_conditions_paiements=array();\n\tvar $cache_availability=array();\n\tvar $cache_demand_reason=array();\n\tvar $cache_types_fees=array();\n\tvar $cache_vatrates=array();\n\n\n\t/**\n\t * Constructor\n\t *\n\t * @param\t\tDoliDB\t\t$db      Database handler\n\t */\n\tpublic function __construct($db)\n\t{\n\t\t$this->db = $db;\n\t}\n\n\t/**\n\t * Output key field for an editable field\n\t *\n\t * @param   string\t$text\t\t\tText of label or key to translate\n\t * @param   string\t$htmlname\t\tName of select field ('edit' prefix will be added)\n\t * @param   string\t$preselected    Value to show/edit (not used in this function)\n\t * @param\tobject\t$object\t\t\tObject\n\t * @param\tboolean\t$perm\t\t\tPermission to allow button to edit parameter. Set it to 0 to have a not edited field.\n\t * @param\tstring\t$typeofdata\t\tType of data ('string' by default, 'email', 'amount:99', 'numeric:99', 'text' or 'textarea:rows:cols', 'datepicker' ('day' do not work, don't know why), 'ckeditor:dolibarr_zzz:width:height:savemethod:1:rows:cols', 'select;xxx[:class]'...)\n\t * @param\tstring\t$moreparam\t\tMore param to add on a href URL.\n\t * @param   int     $fieldrequired  1 if we want to show field as mandatory using the \"fieldrequired\" CSS.\n\t * @param   int     $notabletag     1=Do not output table tags but output a ':', 2=Do not output table tags and no ':', 3=Do not output table tags but output a ' '\n\t * @return\tstring\t\t\t\t\tHTML edit field\n\t */\n\tfunction editfieldkey($text, $htmlname, $preselected, $object, $perm, $typeofdata='string', $moreparam='', $fieldrequired=0, $notabletag=0)\n\t{\n\t\tglobal $conf,$langs;\n\n\t\t$ret='';\n\n\t\t// TODO change for compatibility\n\t\tif (! empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && ! preg_match('/^select;/',$typeofdata))\n\t\t{\n\t\t\tif (! empty($perm))\n\t\t\t{\n\t\t\t\t$tmp=explode(':',$typeofdata);\n\t\t\t\t$ret.= '<div class=\"editkey_'.$tmp[0].(! empty($tmp[1]) ? ' '.$tmp[1] : '').'\" id=\"'.$htmlname.'\">';\n\t\t\t\tif ($fieldrequired) $ret.='<span class=\"fieldrequired\">';\n\t\t\t\t$ret.= $langs->trans($text);\n\t\t\t\tif ($fieldrequired) $ret.='</span>';\n\t\t\t\t$ret.= '</div>'.\"\\n\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ($fieldrequired) $ret.='<span class=\"fieldrequired\">';\n\t\t\t\t$ret.= $langs->trans($text);\n\t\t\t\tif ($fieldrequired) $ret.='</span>';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (empty($notabletag) && GETPOST('action','aZ09') != 'edit'.$htmlname && $perm) $ret.='<table class=\"nobordernopadding\" width=\"100%\"><tr><td class=\"nowrap\">';\n\t\t\tif ($fieldrequired) $ret.='<span class=\"fieldrequired\">';\n\t\t\t$ret.=$langs->trans($text);\n\t\t\tif ($fieldrequired) $ret.='</span>';\n\t\t\tif (! empty($notabletag)) $ret.=' ';\n\t\t\tif (empty($notabletag) && GETPOST('action','aZ09') != 'edit'.$htmlname && $perm) $ret.='</td>';\n\t\t\tif (empty($notabletag) && GETPOST('action','aZ09') != 'edit'.$htmlname && $perm) $ret.='<td align=\"right\">';\n\t\t\tif ($htmlname && GETPOST('action','aZ09') != 'edit'.$htmlname && $perm) $ret.='<a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=edit'.$htmlname.'&amp;id='.$object->id.$moreparam.'\">'.img_edit($langs->trans('Edit'), ($notabletag ? 0 : 1)).'</a>';\n\t\t\tif (! empty($notabletag) && $notabletag == 1) $ret.=' : ';\n\t\t\tif (! empty($notabletag) && $notabletag == 3) $ret.=' ';\n\t\t\tif (empty($notabletag) && GETPOST('action','aZ09') != 'edit'.$htmlname && $perm) $ret.='</td>';\n\t\t\tif (empty($notabletag) && GETPOST('action','aZ09') != 'edit'.$htmlname && $perm) $ret.='</tr></table>';\n\t\t}\n\n\t\treturn $ret;\n\t}\n\n\t/**\n\t * Output value of a field for an editable field\n\t *\n\t * @param\tstring\t$text\t\t\tText of label (not used in this function)\n\t * @param\tstring\t$htmlname\t\tName of select field\n\t * @param\tstring\t$value\t\t\tValue to show/edit\n\t * @param\tobject\t$object\t\t\tObject\n\t * @param\tboolean\t$perm\t\t\tPermission to allow button to edit parameter\n\t * @param\tstring\t$typeofdata\t\tType of data ('string' by default, 'email', 'amount:99', 'numeric:99', 'text' or 'textarea:rows:cols%', 'datepicker' ('day' do not work, don't know why), 'dayhour' or 'datepickerhour', 'ckeditor:dolibarr_zzz:width:height:savemethod:toolbarstartexpanded:rows:cols', 'select:xxx'...)\n\t * @param\tstring\t$editvalue\t\tWhen in edit mode, use this value as $value instead of value (for example, you can provide here a formated price instead of value). Use '' to use same than $value\n\t * @param\tobject\t$extObject\t\tExternal object\n\t * @param\tmixed\t$custommsg\t\tString or Array of custom messages : eg array('success' => 'MyMessage', 'error' => 'MyMessage')\n\t * @param\tstring\t$moreparam\t\tMore param to add on a href URL\n\t * @param   int     $notabletag     Do no output table tags\n\t * @param\tstring\t$formatfunc\t\tCall a specific function to output field\n\t * @return  string\t\t\t\t\tHTML edit field\n\t */\n\tfunction editfieldval($text, $htmlname, $value, $object, $perm, $typeofdata='string', $editvalue='', $extObject=null, $custommsg=null, $moreparam='', $notabletag=0, $formatfunc='')\n\t{\n\t\tglobal $conf,$langs,$db;\n\n\t\t$ret='';\n\n\t\t// Check parameters\n\t\tif (empty($typeofdata)) return 'ErrorBadParameter';\n\n\t\t// When option to edit inline is activated\n\t\tif (! empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && ! preg_match('/^select;|datehourpicker/',$typeofdata)) // TODO add jquery timepicker\n\t\t{\n\t\t\t$ret.=$this->editInPlace($object, $value, $htmlname, $perm, $typeofdata, $editvalue, $extObject, $custommsg);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (GETPOST('action','aZ09') == 'edit'.$htmlname)\n\t\t\t{\n\t\t\t\t$ret.=\"\\n\";\n\t\t\t\t$ret.='<form method=\"post\" action=\"'.$_SERVER[\"PHP_SELF\"].($moreparam?'?'.$moreparam:'').'\">';\n\t\t\t\t$ret.='<input type=\"hidden\" name=\"action\" value=\"set'.$htmlname.'\">';\n\t\t\t\t$ret.='<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t\t$ret.='<input type=\"hidden\" name=\"id\" value=\"'.$object->id.'\">';\n\t\t\t\tif (empty($notabletag)) $ret.='<table class=\"nobordernopadding\" cellpadding=\"0\" cellspacing=\"0\">';\n\t\t\t\tif (empty($notabletag)) $ret.='<tr><td>';\n\t\t\t\tif (preg_match('/^(string|email)/',$typeofdata))\n\t\t\t\t{\n\t\t\t\t\t$tmp=explode(':',$typeofdata);\n\t\t\t\t\t$ret.='<input type=\"text\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" value=\"'.($editvalue?$editvalue:$value).'\"'.($tmp[1]?' size=\"'.$tmp[1].'\"':'').'>';\n\t\t\t\t}\n\t\t\t\telse if (preg_match('/^(numeric|amount)/',$typeofdata))\n\t\t\t\t{\n\t\t\t\t\t$tmp=explode(':',$typeofdata);\n\t\t\t\t\t$valuetoshow=price2num($editvalue?$editvalue:$value);\n\t\t\t\t\t$ret.='<input type=\"text\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" value=\"'.($valuetoshow!=''?price($valuetoshow):'').'\"'.($tmp[1]?' size=\"'.$tmp[1].'\"':'').'>';\n\t\t\t\t}\n\t\t\t\telse if (preg_match('/^text/',$typeofdata) || preg_match('/^note/',$typeofdata))\n\t\t\t\t{\n\t\t\t\t\t$tmp=explode(':',$typeofdata);\n\t\t\t\t\t$cols=$tmp[2];\n\t\t\t\t\t$morealt='';\n\t\t\t\t\tif (preg_match('/%/',$cols))\n\t\t\t\t\t{\n\t\t\t\t\t\t$morealt=' style=\"width: '.$cols.'\"';\n\t\t\t\t\t\t$cols='';\n\t\t\t\t\t}\n\t\t\t\t\t$ret.='<textarea id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" wrap=\"soft\" rows=\"'.($tmp[1]?$tmp[1]:'20').'\"'.($cols?' cols=\"'.$cols.'\"':'class=\"quatrevingtpercent\"').$morealt.'\">'.($editvalue?$editvalue:$value).'</textarea>';\n\t\t\t\t}\n\t\t\t\telse if ($typeofdata == 'day' || $typeofdata == 'datepicker')\n\t\t\t\t{\n\t\t\t\t\t$ret.=$this->select_date($value,$htmlname,0,0,1,'form'.$htmlname,1,0,1);\n\t\t\t\t}\n\t\t\t\telse if ($typeofdata == 'dayhour' || $typeofdata == 'datehourpicker')\n\t\t\t\t{\n\t\t\t\t\t$ret.=$this->select_date($value,$htmlname,1,1,1,'form'.$htmlname,1,0,1);\n\t\t\t\t}\n\t\t\t\telse if (preg_match('/^select;/',$typeofdata))\n\t\t\t\t{\n\t\t\t\t\t $arraydata=explode(',',preg_replace('/^select;/','',$typeofdata));\n\t\t\t\t\t foreach($arraydata as $val)\n\t\t\t\t\t {\n\t\t\t\t\t\t $tmp=explode(':',$val);\n\t\t\t\t\t\t $arraylist[$tmp[0]]=$tmp[1];\n\t\t\t\t\t }\n\t\t\t\t\t $ret.=$this->selectarray($htmlname,$arraylist,$value);\n\t\t\t\t}\n\t\t\t\telse if (preg_match('/^ckeditor/',$typeofdata))\n\t\t\t\t{\n\t\t\t\t\t$tmp=explode(':',$typeofdata);\t\t// Example: ckeditor:dolibarr_zzz:width:height:savemethod:toolbarstartexpanded:rows:cols\n\t\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\t\t\t\t\t$doleditor=new DolEditor($htmlname, ($editvalue?$editvalue:$value), ($tmp[2]?$tmp[2]:''), ($tmp[3]?$tmp[3]:'100'), ($tmp[1]?$tmp[1]:'dolibarr_notes'), 'In', ($tmp[5]?$tmp[5]:0), true, true, ($tmp[6]?$tmp[6]:'20'), ($tmp[7]?$tmp[7]:'100'));\n\t\t\t\t\t$ret.=$doleditor->Create(1);\n\t\t\t\t}\n\t\t\t\tif (empty($notabletag)) $ret.='</td>';\n\n\t\t\t\tif (empty($notabletag)) $ret.='<td align=\"left\">';\n\t\t\t\t//else $ret.='<div class=\"clearboth\"></div>';\n\t\t\t   \t$ret.='<input type=\"submit\" class=\"button'.(empty($notabletag)?'':' ').'\" name=\"modify\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t   \tif (preg_match('/ckeditor|textarea/',$typeofdata) && empty($notabletag)) $ret.='<br>'.\"\\n\";\n\t\t\t   \t$ret.='<input type=\"submit\" class=\"button'.(empty($notabletag)?'':' ').'\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\t   \tif (empty($notabletag)) $ret.='</td>';\n\n\t\t\t   \tif (empty($notabletag)) $ret.='</tr></table>'.\"\\n\";\n\t\t\t\t$ret.='</form>'.\"\\n\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (preg_match('/^(email)/',$typeofdata))              $ret.=dol_print_email($value,0,0,0,0,1);\n\t\t\t\telseif (preg_match('/^(amount|numeric)/',$typeofdata)) $ret.=($value != '' ? price($value,'',$langs,0,-1,-1,$conf->currency) : '');\n\t\t\t\telseif (preg_match('/^text/',$typeofdata) || preg_match('/^note/',$typeofdata))  $ret.=dol_htmlentitiesbr($value);\n\t\t\t\telseif ($typeofdata == 'day' || $typeofdata == 'datepicker') $ret.=dol_print_date($value,'day');\n\t\t\t\telseif ($typeofdata == 'dayhour' || $typeofdata == 'datehourpicker') $ret.=dol_print_date($value,'dayhour');\n\t\t\t\telse if (preg_match('/^select;/',$typeofdata))\n\t\t\t\t{\n\t\t\t\t\t$arraydata=explode(',',preg_replace('/^select;/','',$typeofdata));\n\t\t\t\t\tforeach($arraydata as $val)\n\t\t\t\t\t{\n\t\t\t\t\t\t$tmp=explode(':',$val);\n\t\t\t\t\t\t$arraylist[$tmp[0]]=$tmp[1];\n\t\t\t\t\t}\n\t\t\t\t\t$ret.=$arraylist[$value];\n\t\t\t\t}\n\t\t\t\telse if (preg_match('/^ckeditor/',$typeofdata))\n\t\t\t\t{\n\t\t\t\t\t$tmpcontent=dol_htmlentitiesbr($value);\n\t\t\t\t\tif (! empty($conf->global->MAIN_DISABLE_NOTES_TAB))\n\t\t\t\t\t{\n\t\t\t\t\t\t$firstline=preg_replace('/<br>.*/','',$tmpcontent);\n\t\t\t\t\t\t$firstline=preg_replace('/[\\n\\r].*/','',$firstline);\n\t\t\t\t\t\t$tmpcontent=$firstline.((strlen($firstline) != strlen($tmpcontent))?'...':'');\n\t\t\t\t\t}\n\t\t\t\t\t$ret.=$tmpcontent;\n\t\t\t\t}\n\t\t\t\telse $ret.=$value;\n\n\t\t\t\tif ($formatfunc && method_exists($object, $formatfunc))\n\t\t\t\t{\n\t\t\t\t\t$ret=$object->$formatfunc($ret);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $ret;\n\t}\n\n\t/**\n\t * Output edit in place form\n\t *\n\t * @param\tobject\t$object\t\t\tObject\n\t * @param\tstring\t$value\t\t\tValue to show/edit\n\t * @param\tstring\t$htmlname\t\tDIV ID (field name)\n\t * @param\tint\t\t$condition\t\tCondition to edit\n\t * @param\tstring\t$inputType\t\tType of input ('string', 'numeric', 'datepicker' ('day' do not work, don't know why), 'textarea:rows:cols', 'ckeditor:dolibarr_zzz:width:height:?:1:rows:cols', 'select:xxx')\n\t * @param\tstring\t$editvalue\t\tWhen in edit mode, use this value as $value instead of value\n\t * @param\tobject\t$extObject\t\tExternal object\n\t * @param\tmixed\t$custommsg\t\tString or Array of custom messages : eg array('success' => 'MyMessage', 'error' => 'MyMessage')\n\t * @return\tstring   \t\t      \tHTML edit in place\n\t */\n\tprivate function editInPlace($object, $value, $htmlname, $condition, $inputType='textarea', $editvalue=null, $extObject=null, $custommsg=null)\n\t{\n\t\tglobal $conf;\n\n\t\t$out='';\n\n\t\t// Check parameters\n\t\tif ($inputType == 'textarea') $value = dol_nl2br($value);\n\t\telse if (preg_match('/^numeric/',$inputType)) $value = price($value);\n\t\telse if ($inputType == 'day' || $inputType == 'datepicker') $value = dol_print_date($value, 'day');\n\n\t\tif ($condition)\n\t\t{\n\t\t\t$element\t\t= false;\n\t\t\t$table_element\t= false;\n\t\t\t$fk_element\t\t= false;\n\t\t\t$loadmethod\t\t= false;\n\t\t\t$savemethod\t\t= false;\n\t\t\t$ext_element\t= false;\n\t\t\t$button_only\t= false;\n\t\t\t$inputOption    = '';\n\n\t\t\tif (is_object($object))\n\t\t\t{\n\t\t\t\t$element = $object->element;\n\t\t\t\t$table_element = $object->table_element;\n\t\t\t\t$fk_element = $object->id;\n\t\t\t}\n\n\t\t\tif (is_object($extObject))\n\t\t\t{\n\t\t\t\t$ext_element = $extObject->element;\n\t\t\t}\n\n\t\t\tif (preg_match('/^(string|email|numeric)/',$inputType))\n\t\t\t{\n\t\t\t\t$tmp=explode(':',$inputType);\n\t\t\t\t$inputType=$tmp[0];\n\t\t\t\tif (! empty($tmp[1])) $inputOption=$tmp[1];\n\t\t\t\tif (! empty($tmp[2])) $savemethod=$tmp[2];\n\t\t\t\t$out.= '<input id=\"width_'.$htmlname.'\" value=\"'.$inputOption.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t}\n\t\t\telse if ((preg_match('/^day$/',$inputType)) || (preg_match('/^datepicker/',$inputType)) || (preg_match('/^datehourpicker/',$inputType)))\n\t\t\t{\n\t\t\t\t$tmp=explode(':',$inputType);\n\t\t\t\t$inputType=$tmp[0];\n\t\t\t\tif (! empty($tmp[1])) $inputOption=$tmp[1];\n\t\t\t\tif (! empty($tmp[2])) $savemethod=$tmp[2];\n\n\t\t\t\t$out.= '<input id=\"timestamp\" type=\"hidden\"/>'.\"\\n\"; // Use for timestamp format\n\t\t\t}\n\t\t\telse if (preg_match('/^(select|autocomplete)/',$inputType))\n\t\t\t{\n\t\t\t\t$tmp=explode(':',$inputType);\n\t\t\t\t$inputType=$tmp[0]; $loadmethod=$tmp[1];\n\t\t\t\tif (! empty($tmp[2])) $savemethod=$tmp[2];\n\t\t\t\tif (! empty($tmp[3])) $button_only=true;\n\t\t\t}\n\t\t\telse if (preg_match('/^textarea/',$inputType))\n\t\t\t{\n\t\t\t\t$tmp=explode(':',$inputType);\n\t\t\t\t$inputType=$tmp[0];\n\t\t\t\t$rows=(empty($tmp[1])?'8':$tmp[1]);\n\t\t\t\t$cols=(empty($tmp[2])?'80':$tmp[2]);\n\t\t\t}\n\t\t\telse if (preg_match('/^ckeditor/',$inputType))\n\t\t\t{\n\t\t\t\t$tmp=explode(':',$inputType);\n\t\t\t\t$inputType=$tmp[0]; $toolbar=$tmp[1];\n\t\t\t\tif (! empty($tmp[2])) $width=$tmp[2];\n\t\t\t\tif (! empty($tmp[3])) $heigth=$tmp[3];\n\t\t\t\tif (! empty($tmp[4])) $savemethod=$tmp[4];\n\n\t\t\t\tif (! empty($conf->fckeditor->enabled))\n\t\t\t\t{\n\t\t\t\t\t$out.= '<input id=\"ckeditor_toolbar\" value=\"'.$toolbar.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$inputType = 'textarea';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$out.= '<input id=\"element_'.$htmlname.'\" value=\"'.$element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t$out.= '<input id=\"table_element_'.$htmlname.'\" value=\"'.$table_element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t$out.= '<input id=\"fk_element_'.$htmlname.'\" value=\"'.$fk_element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t$out.= '<input id=\"loadmethod_'.$htmlname.'\" value=\"'.$loadmethod.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\tif (! empty($savemethod))\t$out.= '<input id=\"savemethod_'.$htmlname.'\" value=\"'.$savemethod.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\tif (! empty($ext_element))\t$out.= '<input id=\"ext_element_'.$htmlname.'\" value=\"'.$ext_element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\tif (! empty($custommsg))\n\t\t\t{\n\t\t\t\tif (is_array($custommsg))\n\t\t\t\t{\n\t\t\t\t\tif (!empty($custommsg['success']))\n\t\t\t\t\t\t$out.= '<input id=\"successmsg_'.$htmlname.'\" value=\"'.$custommsg['success'].'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t\tif (!empty($custommsg['error']))\n\t\t\t\t\t\t$out.= '<input id=\"errormsg_'.$htmlname.'\" value=\"'.$custommsg['error'].'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t$out.= '<input id=\"successmsg_'.$htmlname.'\" value=\"'.$custommsg.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t}\n\t\t\tif ($inputType == 'textarea') {\n\t\t\t\t$out.= '<input id=\"textarea_'.$htmlname.'_rows\" value=\"'.$rows.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t$out.= '<input id=\"textarea_'.$htmlname.'_cols\" value=\"'.$cols.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t}\n\t\t\t$out.= '<span id=\"viewval_'.$htmlname.'\" class=\"viewval_'.$inputType.($button_only ? ' inactive' : ' active').'\">'.$value.'</span>'.\"\\n\";\n\t\t\t$out.= '<span id=\"editval_'.$htmlname.'\" class=\"editval_'.$inputType.($button_only ? ' inactive' : ' active').' hideobject\">'.(! empty($editvalue) ? $editvalue : $value).'</span>'.\"\\n\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$out = $value;\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tShow a text and picto with tooltip on text or picto.\n\t *  Can be called by an instancied $form->textwithtooltip or by a static call Form::textwithtooltip\n\t *\n\t *\t@param\tstring\t\t$text\t\t\t\tText to show\n\t *\t@param\tstring\t\t$htmltext\t\t\tHTML content of tooltip. Must be HTML/UTF8 encoded.\n\t *\t@param\tint\t\t\t$tooltipon\t\t\t1=tooltip on text, 2=tooltip on image, 3=tooltip sur les 2\n\t *\t@param\tint\t\t\t$direction\t\t\t-1=image is before, 0=no image, 1=image is after\n\t *\t@param\tstring\t\t$img\t\t\t\tHtml code for image (use img_xxx() function to get it)\n\t *\t@param\tstring\t\t$extracss\t\t\tAdd a CSS style to td tags\n\t *\t@param\tint\t\t\t$notabs\t\t\t\t0=Include table and tr tags, 1=Do not include table and tr tags, 2=use div, 3=use span\n\t *\t@param\tstring\t\t$incbefore\t\t\tInclude code before the text\n\t *\t@param\tint\t\t\t$noencodehtmltext\tDo not encode into html entity the htmltext\n\t *  @param  string      $tooltiptrigger\t\t''=Tooltip on hover, 'abc'=Tooltip on click (abc is a unique key)\n\t *  @param\tint\t\t\t$forcenowrap\t\tForce no wrap between text and picto (works with notabs=2 only)\n\t *\t@return\tstring\t\t\t\t\t\t\tCode html du tooltip (texte+picto)\n\t *\t@see\tUse function textwithpicto if you can.\n\t *  TODO Move this as static as soon as everybody use textwithpicto or @Form::textwithtooltip\n\t */\n\tfunction textwithtooltip($text, $htmltext, $tooltipon = 1, $direction = 0, $img = '', $extracss = '', $notabs = 2, $incbefore = '', $noencodehtmltext = 0, $tooltiptrigger='', $forcenowrap=0)\n\t{\n\t\tglobal $conf;\n\n\t\tif ($incbefore) $text = $incbefore.$text;\n\t\tif (! $htmltext) return $text;\n\n\t\t$tag='td';\n\t\tif ($notabs == 2) $tag='div';\n\t\tif ($notabs == 3) $tag='span';\n\t\t// Sanitize tooltip\n\t\t$htmltext=str_replace(\"\\\\\",\"\\\\\\\\\",$htmltext);\n\t\t$htmltext=str_replace(\"\\r\",\"\",$htmltext);\n\t\t$htmltext=str_replace(\"\\n\",\"\",$htmltext);\n\n\t\t$extrastyle='';\n\t\tif ($direction < 0) { $extracss=($extracss?$extracss.' ':'').'inline-block'; $extrastyle='padding: 0px; padding-left: 3px !important;'; }\n\t\tif ($direction > 0) { $extracss=($extracss?$extracss.' ':'').'inline-block'; $extrastyle='padding: 0px; padding-right: 3px !important;'; }\n\n\t\t$classfortooltip='classfortooltip';\n\n\t\t$s='';$textfordialog='';\n\n\t\tif ($tooltiptrigger == '')\n\t\t{\n\t\t\t$htmltext=str_replace('\"',\"&quot;\",$htmltext);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$classfortooltip='classfortooltiponclick';\n\t\t\t$textfordialog.='<div style=\"display: none;\" id=\"idfortooltiponclick_'.$tooltiptrigger.'\" class=\"classfortooltiponclicktext\">'.$htmltext.'</div>';\n\t\t}\n\t\tif ($tooltipon == 2 || $tooltipon == 3)\n\t\t{\n\t\t\t$paramfortooltipimg=' class=\"'.$classfortooltip.' inline-block'.($extracss?' '.$extracss:'').'\" style=\"padding: 0px;'.($extrastyle?' '.$extrastyle:'').'\"';\n\t\t\tif ($tooltiptrigger == '') $paramfortooltipimg.=' title=\"'.($noencodehtmltext?$htmltext:dol_escape_htmltag($htmltext,1)).'\"'; // Attribut to put on img tag to store tooltip\n\t\t\telse $paramfortooltipimg.=' dolid=\"'.$tooltiptrigger.'\"';\n\t\t}\n\t\telse $paramfortooltipimg =($extracss?' class=\"'.$extracss.'\"':'').($extrastyle?' style=\"'.$extrastyle.'\"':''); // Attribut to put on td text tag\n\t\tif ($tooltipon == 1 || $tooltipon == 3)\n\t\t{\n\t\t\t$paramfortooltiptd=' class=\"'.($tooltipon == 3 ? 'cursorpointer ' : '').$classfortooltip.' inline-block'.($extracss?' '.$extracss:'').'\" style=\"padding: 0px;'.($extrastyle?' '.$extrastyle:'').'\" ';\n\t\t\tif ($tooltiptrigger == '') $paramfortooltiptd.=' title=\"'.($noencodehtmltext?$htmltext:dol_escape_htmltag($htmltext,1)).'\"'; // Attribut to put on td tag to store tooltip\n\t\t\telse $paramfortooltiptd.=' dolid=\"'.$tooltiptrigger.'\"';\n\t\t}\n\t\telse $paramfortooltiptd =($extracss?' class=\"'.$extracss.'\"':'').($extrastyle?' style=\"'.$extrastyle.'\"':''); // Attribut to put on td text tag\n\t\tif (empty($notabs)) $s.='<table class=\"nobordernopadding\" summary=\"\"><tr style=\"height: auto;\">';\n\t\telseif ($notabs == 2) $s.='<div class=\"inline-block'.($forcenowrap?' nowrap':'').'\">';\n\t\t// Define value if value is before\n\t\tif ($direction < 0) {\n\t\t\t$s.='<'.$tag.$paramfortooltipimg;\n\t\t\tif ($tag == 'td') {\n\t\t\t\t$s .= ' valign=\"top\" width=\"14\"';\n\t\t\t}\n\t\t\t$s.= '>'.$textfordialog.$img.'</'.$tag.'>';\n\t\t}\n\t\t// Use another method to help avoid having a space in value in order to use this value with jquery\n\t\t// Define label\n\t\tif ((string) $text != '') $s.='<'.$tag.$paramfortooltiptd.'>'.$text.'</'.$tag.'>';\n\t\t// Define value if value is after\n\t\tif ($direction > 0) {\n\t\t\t$s.='<'.$tag.$paramfortooltipimg;\n\t\t\tif ($tag == 'td') $s .= ' valign=\"middle\" width=\"14\"';\n\t\t\t$s.= '>'.$textfordialog.$img.'</'.$tag.'>';\n\t\t}\n\t\tif (empty($notabs)) $s.='</tr></table>';\n\t\telseif ($notabs == 2) $s.='</div>';\n\n\t\treturn $s;\n\t}\n\n\t/**\n\t *\tShow a text with a picto and a tooltip on picto\n\t *\n\t *\t@param\tstring\t$text\t\t\t\tText to show\n\t *\t@param  string\t$htmltext\t     \tContent of tooltip\n\t *\t@param\tint\t\t$direction\t\t\t1=Icon is after text, -1=Icon is before text, 0=no icon\n\t * \t@param\tstring\t$type\t\t\t\tType of picto ('info', 'help', 'warning', 'superadmin', 'mypicto@mymodule', ...) or image filepath\n\t *  @param  string\t$extracss           Add a CSS style to td, div or span tag\n\t *  @param  int\t\t$noencodehtmltext   Do not encode into html entity the htmltext\n\t *  @param\tint\t\t$notabs\t\t\t\t0=Include table and tr tags, 1=Do not include table and tr tags, 2=use div, 3=use span\n\t *  @param  string  $tooltiptrigger     ''=Tooltip on hover, 'abc'=Tooltip on click (abc is a unique key)\n\t *  @param\tint\t\t$forcenowrap\t\tForce no wrap between text and picto (works with notabs=2 only)\n\t * \t@return\tstring\t\t\t\t\t\tHTML code of text, picto, tooltip\n\t */\n\tfunction textwithpicto($text, $htmltext, $direction = 1, $type = 'help', $extracss = '', $noencodehtmltext = 0, $notabs = 2, $tooltiptrigger='', $forcenowrap=0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$alt = '';\n\t\tif ($tooltiptrigger) $alt=$langs->transnoentitiesnoconv(\"ClickToShowHelp\");\n\n\t\t//For backwards compatibility\n\t\tif ($type == '0') $type = 'info';\n\t\telseif ($type == '1') $type = 'help';\n\n\t\t// If info or help with no javascript, show only text\n\t\tif (empty($conf->use_javascript_ajax))\n\t\t{\n\t\t\tif ($type == 'info' || $type == 'help')\treturn $text;\n\t\t\telse\n\t\t\t{\n\t\t\t\t$alt = $htmltext;\n\t\t\t\t$htmltext = '';\n\t\t\t}\n\t\t}\n\n\t\t// If info or help with smartphone, show only text (tooltip hover can't works)\n\t\tif (! empty($conf->dol_no_mouse_hover) && empty($tooltiptrigger))\n\t\t{\n\t\t\tif ($type == 'info' || $type == 'help') return $text;\n\t\t}\n\t\t// If info or help with smartphone, show only text (tooltip on lick does not works with dialog on smaprtphone)\n\t\tif (! empty($conf->dol_no_mouse_hover) && ! empty($tooltiptrigger))\n\t\t{\n\t\t\tif ($type == 'info' || $type == 'help') return $text;\n\t\t}\n\n\t\tif ($type == 'info') $img = img_help(0, $alt);\n\t\telseif ($type == 'help') $img = img_help(($tooltiptrigger != '' ? 2 : 1), $alt);\n\t\telseif ($type == 'superadmin') $img = img_picto($alt, 'redstar');\n\t\telseif ($type == 'admin') $img = img_picto($alt, 'star');\n\t\telseif ($type == 'warning') $img = img_warning($alt);\n\t\telse $img = img_picto($alt, $type);\n\n\t\treturn $this->textwithtooltip($text, $htmltext, (($tooltiptrigger && ! $img)?3:2), $direction, $img, $extracss, $notabs, '', $noencodehtmltext, $tooltiptrigger, $forcenowrap);\n\t}\n\n\t/**\n\t * Generate select HTML to choose massaction\n\t *\n\t * @param\tstring\t$selected\t\tValue auto selected when at least one record is selected. Not a preselected value. Use '0' by default.\n\t * @param\tint\t\t$arrayofaction\tarray('code'=>'label', ...). The code is the key stored into the GETPOST('massaction') when submitting action.\n\t * @param   int     $alwaysvisible  1=select button always visible\n\t * @return\tstring\t\t\t\t\tSelect list\n\t */\n\tfunction selectMassAction($selected, $arrayofaction, $alwaysvisible=0)\n\t{\n\t\tglobal $conf,$langs,$hookmanager;\n\n\t\tif (count($arrayofaction) == 0) return;\n\n\t\t$disabled=0;\n\t\t$ret='<div class=\"centpercent center\">';\n\t\t$ret.='<select class=\"flat'.(empty($conf->use_javascript_ajax)?'':' hideobject').' massaction massactionselect\" name=\"massaction\"'.($disabled?' disabled=\"disabled\"':'').'>';\n\n\t\t// Complete list with data from external modules. THe module can use $_SERVER['PHP_SELF'] to know on which page we are, or use the $parameters['currentcontext'] completed by executeHooks.\n\t\t$parameters=array();\n\t\t$reshook=$hookmanager->executeHooks('addMoreMassActions',$parameters);    // Note that $action and $object may have been modified by hook\n\t\tif (empty($reshook))\n\t\t{\n\t\t\t$ret.='<option value=\"0\"'.($disabled?' disabled=\"disabled\"':'').'>-- '.$langs->trans(\"SelectAction\").' --</option>';\n\t\t\tforeach($arrayofaction as $code => $label)\n\t\t\t{\n\t\t\t\t$ret.='<option value=\"'.$code.'\"'.($disabled?' disabled=\"disabled\"':'').'>'.$label.'</option>';\n\t\t\t}\n\t\t}\n\t\t$ret.=$hookmanager->resPrint;\n\n\t\t$ret.='</select>';\n\t\t// Warning: if you set submit button to disabled, post using 'Enter' will no more work if there is no another input submit. So we add a hidden button\n\t\t$ret.='<input type=\"submit\" name=\"confirmmassactioninvisible\" style=\"display: none\" tabindex=\"-1\">';\t// Hidden button BEFORE so it is the one used when we submit with ENTER.\n\t\t$ret.='<input type=\"submit\" disabled name=\"confirmmassaction\" class=\"button'.(empty($conf->use_javascript_ajax)?'':' hideobject').' massaction massactionconfirmed\" value=\"'.dol_escape_htmltag($langs->trans(\"Confirm\")).'\">';\n\t\t$ret.='</div>';\n\n\t\tif (! empty($conf->use_javascript_ajax))\n\t\t{\n\t\t\t$ret.='<!-- JS CODE TO ENABLE mass action select -->\n    \t\t<script type=\"text/javascript\">\n        \t\tfunction initCheckForSelect(mode)\t/* mode is 0 during init of page or click all, 1 when we click on 1 checkbox */\n        \t\t{\n        \t\t\tatleastoneselected=0;\n    \t    \t\tjQuery(\".checkforselect\").each(function( index ) {\n    \t  \t\t\t\t/* console.log( index + \": \" + $( this ).text() ); */\n    \t  \t\t\t\tif ($(this).is(\\':checked\\')) atleastoneselected++;\n    \t  \t\t\t});\n\t\t\t\t\tconsole.log(\"initCheckForSelect mode=\"+mode+\" atleastoneselected=\"+atleastoneselected);\n    \t  \t\t\tif (atleastoneselected || '.$alwaysvisible.')\n    \t  \t\t\t{\n    \t  \t\t\t\tjQuery(\".massaction\").show();\n        \t\t\t    '.($selected ? 'if (atleastoneselected) { jQuery(\".massactionselect\").val(\"'.$selected.'\"); jQuery(\".massactionconfirmed\").prop(\\'disabled\\', false); }' : '').'\n        \t\t\t    '.($selected ? 'if (! atleastoneselected) { jQuery(\".massactionselect\").val(\"0\"); jQuery(\".massactionconfirmed\").prop(\\'disabled\\', true); } ' : '').'\n    \t  \t\t\t}\n    \t  \t\t\telse\n    \t  \t\t\t{\n    \t  \t\t\t\tjQuery(\".massaction\").hide();\n    \t            }\n        \t\t}\n\n        \tjQuery(document).ready(function () {\n        \t\tinitCheckForSelect(0);\n        \t\tjQuery(\".checkforselect\").click(function() {\n        \t\t\tinitCheckForSelect(1);\n    \t  \t\t});\n    \t  \t\tjQuery(\".massactionselect\").change(function() {\n        \t\t\tvar massaction = $( this ).val();\n        \t\t\tvar urlform = $( this ).closest(\"form\").attr(\"action\").replace(\"#show_files\",\"\");\n        \t\t\tif (massaction == \"builddoc\")\n                    {\n                        urlform = urlform + \"#show_files\";\n    \t            }\n        \t\t\t$( this ).closest(\"form\").attr(\"action\", urlform);\n                    console.log(\"we select a mass action \"+massaction+\" - \"+urlform);\n        \t        /* Warning: if you set submit button to disabled, post using Enter will no more work if there is no other button */\n        \t\t\tif ($(this).val() != \\'0\\')\n    \t  \t\t\t{\n    \t  \t\t\t\tjQuery(\".massactionconfirmed\").prop(\\'disabled\\', false);\n    \t  \t\t\t}\n    \t  \t\t\telse\n    \t  \t\t\t{\n    \t  \t\t\t\tjQuery(\".massactionconfirmed\").prop(\\'disabled\\', true);\n    \t  \t\t\t}\n    \t        });\n        \t});\n    \t\t</script>\n        \t';\n\t\t}\n\n\t\treturn $ret;\n\t}\n\n\t/**\n\t *  Return combo list of activated countries, into language of user\n\t *\n\t *  @param\tstring\t$selected       Id or Code or Label of preselected country\n\t *  @param  string\t$htmlname       Name of html select object\n\t *  @param  string\t$htmloption     Options html on select object\n\t *  @param\tinteger\t$maxlength\t\tMax length for labels (0=no limit)\n\t *  @param\tstring\t$morecss\t\tMore css class\n\t *  @param\tstring\t$usecodeaskey\t'code3'=Use code on 3 alpha as key, 'code2\"=Use code on 2 alpha as key\n\t *  @return string           \t\tHTML string with select\n\t */\n\tfunction select_country($selected='',$htmlname='country_id',$htmloption='',$maxlength=0,$morecss='minwidth300',$usecodeaskey='')\n\t{\n\t\tglobal $conf,$langs;\n\n\t\t$langs->load(\"dict\");\n\n\t\t$out='';\n\t\t$countryArray=array();\n\t\t$favorite=array();\n\t\t$label=array();\n\t\t$atleastonefavorite=0;\n\n\t\t$sql = \"SELECT rowid, code as code_iso, code_iso as code_iso3, label, favorite\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_country\";\n\t\t$sql.= \" WHERE active > 0\";\n\t\t//$sql.= \" ORDER BY code ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_country\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$out.= '<select id=\"select'.$htmlname.'\" class=\"flat maxwidth200onsmartphone selectcountry'.($morecss?' '.$morecss:'').'\" name=\"'.$htmlname.'\" '.$htmloption.'>';\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\t$foundselected=false;\n\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$countryArray[$i]['rowid'] \t\t= $obj->rowid;\n\t\t\t\t\t$countryArray[$i]['code_iso'] \t= $obj->code_iso;\n\t\t\t\t\t$countryArray[$i]['code_iso3'] \t= $obj->code_iso3;\n\t\t\t\t\t$countryArray[$i]['label']\t\t= ($obj->code_iso && $langs->transnoentitiesnoconv(\"Country\".$obj->code_iso)!=\"Country\".$obj->code_iso?$langs->transnoentitiesnoconv(\"Country\".$obj->code_iso):($obj->label!='-'?$obj->label:''));\n\t\t\t\t\t$countryArray[$i]['favorite']   = $obj->favorite;\n\t\t\t\t\t$favorite[$i]\t\t\t\t\t= $obj->favorite;\n\t\t\t\t\t$label[$i] = dol_string_unaccent($countryArray[$i]['label']);\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\n\t\t\t\tarray_multisort($favorite, SORT_DESC, $label, SORT_ASC, $countryArray);\n\n\t\t\t\tforeach ($countryArray as $row)\n\t\t\t\t{\n\t\t\t\t\tif ($row['favorite'] && $row['code_iso']) $atleastonefavorite++;\n\t\t\t\t\tif (empty($row['favorite']) && $atleastonefavorite)\n\t\t\t\t\t{\n\t\t\t\t\t\t$atleastonefavorite=0;\n\t\t\t\t\t\t$out.= '<option a value=\"\" disabled class=\"selectoptiondisabledwhite\">----------------------</option>';\n\t\t\t\t\t}\n\t\t\t\t\tif ($selected && $selected != '-1' && ($selected == $row['rowid'] || $selected == $row['code_iso'] || $selected == $row['code_iso3'] || $selected == $row['label']) )\n\t\t\t\t\t{\n\t\t\t\t\t\t$foundselected=true;\n\t\t\t\t\t\t$out.= '<option b value=\"'.($usecodeaskey?($usecodeaskey=='code2'?$row['code_iso']:$row['code_iso3']):$row['rowid']).'\" selected>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= '<option c value=\"'.($usecodeaskey?($usecodeaskey=='code2'?$row['code_iso']:$row['code_iso3']):$row['rowid']).'\">';\n\t\t\t\t\t}\n\t\t\t\t\tif ($row['label']) $out.= dol_trunc($row['label'],$maxlength,'middle');\n\t\t\t\t\telse $out.= '&nbsp;';\n\t\t\t\t\tif ($row['code_iso']) $out.= ' ('.$row['code_iso'] . ')';\n\t\t\t\t\t$out.= '</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out.= '</select>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\t// Make select dynamic\n\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t$out .= ajax_combobox('select'.$htmlname);\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *  Return select list of incoterms\n\t *\n\t *  @param\tstring\t$selected       \t\tId or Code of preselected incoterm\n\t *  @param\tstring\t$location_incoterms     Value of input location\n\t *  @param\tstring\t$page       \t\t\tDefined the form action\n\t *  @param  string\t$htmlname       \t\tName of html select object\n\t *  @param  string\t$htmloption     \t\tOptions html on select object\n\t * \t@param\tint\t\t$forcecombo\t\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t *  @param\tarray\t$events\t\t\t\t\tEvent options to run on change. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @return string           \t\t\t\tHTML string with select and input\n\t */\n\tfunction select_incoterms($selected='', $location_incoterms='', $page='', $htmlname='incoterm_id', $htmloption='', $forcecombo=1, $events=array())\n\t{\n\t\tglobal $conf,$langs;\n\n\t\t$langs->load(\"dict\");\n\n\t\t$out='';\n\t\t$incotermArray=array();\n\n\t\t$sql = \"SELECT rowid, code\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_incoterms\";\n\t\t$sql.= \" WHERE active > 0\";\n\t\t$sql.= \" ORDER BY code ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_incoterm\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\tif ($conf->use_javascript_ajax && ! $forcecombo)\n\t\t\t{\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events);\n\t\t\t}\n\n\t\t\tif (!empty($page))\n\t\t\t{\n\t\t\t\t$out .= '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\t\t$out .= '<input type=\"hidden\" name=\"action\" value=\"set_incoterms\">';\n\t\t\t\t$out .= '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t}\n\n\t\t\t$out.= '<select id=\"'.$htmlname.'\" class=\"flat selectincoterm minwidth100imp noenlargeonsmartphone\" name=\"'.$htmlname.'\" '.$htmloption.'>';\n\t\t\t$out.= '<option value=\"0\">&nbsp;</option>';\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\t$foundselected=false;\n\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$incotermArray[$i]['rowid'] = $obj->rowid;\n\t\t\t\t\t$incotermArray[$i]['code'] = $obj->code;\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\n\t\t\t\tforeach ($incotermArray as $row)\n\t\t\t\t{\n\t\t\t\t\tif ($selected && ($selected == $row['rowid'] || $selected == $row['code']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= '<option value=\"'.$row['rowid'].'\" selected>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= '<option value=\"'.$row['rowid'].'\">';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($row['code']) $out.= $row['code'];\n\n\t\t\t\t\t$out.= '</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out.= '</select>';\n\n\t\t\t$out .= '<input id=\"location_incoterms\" class=\"maxwidth100onsmartphone\" name=\"location_incoterms\" value=\"'.$location_incoterms.'\">';\n\n\t\t\tif (!empty($page))\n\t\t\t{\n\t\t\t\t$out .= '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\"></form>';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tReturn list of types of lines (product or service)\n\t * \tExample: 0=product, 1=service, 9=other (for external module)\n\t *\n\t *\t@param  string\t$selected       Preselected type\n\t *\t@param  string\t$htmlname       Name of field in html form\n\t * \t@param\tint\t\t$showempty\t\tAdd an empty field\n\t * \t@param\tint\t\t$hidetext\t\tDo not show label 'Type' before combo box (used only if there is at least 2 choices to select)\n\t * \t@param\tinteger\t$forceall\t\t1=Force to show products and services in combo list, whatever are activated modules, 0=No force, -1=Force none (and set hidden field to 'service')\n\t *  @return\tvoid\n\t */\n\tfunction select_type_of_lines($selected='',$htmlname='type',$showempty=0,$hidetext=0,$forceall=0)\n\t{\n\t\tglobal $db,$langs,$user,$conf;\n\n\t\t// If product & services are enabled or both disabled.\n\t\tif ($forceall > 0 || (empty($forceall) && ! empty($conf->product->enabled) && ! empty($conf->service->enabled))\n\t\t|| (empty($forceall) && empty($conf->product->enabled) && empty($conf->service->enabled)) )\n\t\t{\n\t\t\tif (empty($hidetext)) print $langs->trans(\"Type\").': ';\n\t\t\tprint '<select class=\"flat\" id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t\tif ($showempty)\n\t\t\t{\n\t\t\t\tprint '<option value=\"-1\"';\n\t\t\t\tif ($selected == -1) print ' selected';\n\t\t\t\tprint '>&nbsp;</option>';\n\t\t\t}\n\n\t\t\tprint '<option value=\"0\"';\n\t\t\tif (0 == $selected) print ' selected';\n\t\t\tprint '>'.$langs->trans(\"Product\");\n\n\t\t\tprint '<option value=\"1\"';\n\t\t\tif (1 == $selected) print ' selected';\n\t\t\tprint '>'.$langs->trans(\"Service\");\n\n\t\t\tprint '</select>';\n\t\t\t//if ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t\t}\n\t\tif (empty($forceall) && empty($conf->product->enabled) && ! empty($conf->service->enabled))\n\t\t{\n\t\t\tprint $langs->trans(\"Service\");\n\t\t\tprint '<input type=\"hidden\" name=\"'.$htmlname.'\" value=\"1\">';\n\t\t}\n\t\tif (empty($forceall) && ! empty($conf->product->enabled) && empty($conf->service->enabled))\n\t\t{\n\t\t\tprint $langs->trans(\"Product\");\n\t\t\tprint '<input type=\"hidden\" name=\"'.$htmlname.'\" value=\"0\">';\n\t\t}\n\t\tif ($forceall < 0)\t// This should happened only for contracts when both predefined product and service are disabled.\n\t\t{\n\t\t\tprint '<input type=\"hidden\" name=\"'.$htmlname.'\" value=\"1\">';\t// By default we set on service for contract. If CONTRACT_SUPPORT_PRODUCTS is set, forceall should be 1 not -1\n\t\t}\n\t}\n\n\t/**\n\t *\tLoad into cache cache_types_fees, array of types of fees\n\t *\n\t *\t@return     int             Nb of lines loaded, <0 if KO\n\t */\n\tfunction load_cache_types_fees()\n\t{\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_types_fees);\n\t\tif ($num > 0) return 0;    // Cache already loaded\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$langs->load(\"trips\");\n\n\t\t$sql = \"SELECT c.code, c.label\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_type_fees as c\";\n\t\t$sql.= \" WHERE active > 0\";\n\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label=($obj->code != $langs->trans($obj->code) ? $langs->trans($obj->code) : $langs->trans($obj->label));\n\t\t\t\t$this->cache_types_fees[$obj->code] = $label;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tasort($this->cache_types_fees);\n\n\t\t\treturn $num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn list of types of notes\n\t *\n\t *\t@param\tstring\t\t$selected\t\tPreselected type\n\t *\t@param  string\t\t$htmlname\t\tName of field in form\n\t * \t@param\tint\t\t\t$showempty\t\tAdd an empty field\n\t * \t@return\tvoid\n\t */\n\tfunction select_type_fees($selected='',$htmlname='type',$showempty=0)\n\t{\n\t\tglobal $user, $langs;\n\n\t\tdol_syslog(__METHOD__.\" selected=\".$selected.\", htmlname=\".$htmlname, LOG_DEBUG);\n\n\t\t$this->load_cache_types_fees();\n\n\t\tprint '<select class=\"flat\" name=\"'.$htmlname.'\">';\n\t\tif ($showempty)\n\t\t{\n\t\t\tprint '<option value=\"-1\"';\n\t\t\tif ($selected == -1) print ' selected';\n\t\t\tprint '>&nbsp;</option>';\n\t\t}\n\n\t\tforeach($this->cache_types_fees as $key => $value)\n\t\t{\n\t\t\tprint '<option value=\"'.$key.'\"';\n\t\t\tif ($key == $selected) print ' selected';\n\t\t\tprint '>';\n\t\t\tprint $value;\n\t\t\tprint '</option>';\n\t\t}\n\n\t\tprint '</select>';\n\t\tif ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t}\n\n\n\t/**\n\t *  Return HTML code to select a company.\n\t *\n\t *  @param\t\tint\t\t\t$selected\t\t\t\tPreselected products\n\t *  @param\t\tstring\t\t$htmlname\t\t\t\tName of HTML select field (must be unique in page)\n\t *  @param\t\tint\t\t\t$filter\t\t\t\t\tFilter on thirdparty\n\t *  @param\t\tint\t\t\t$limit\t\t\t\t\tLimit on number of returned lines\n\t *  @param\t\tarray\t\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t * \t@param\t\tint\t\t\t$forcecombo\t\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t *  @return\t\tstring\t\t\t\t\t\t\t\tReturn select box for thirdparty.\n\t *  @deprecated\t3.8 Use select_company instead. For exemple $form->select_thirdparty(GETPOST('socid'),'socid','',0) => $form->select_company(GETPOST('socid'),'socid','',1,0,0,array(),0)\n\t */\n\tfunction select_thirdparty($selected='', $htmlname='socid', $filter='', $limit=20, $ajaxoptions=array(), $forcecombo=0)\n\t{\n   \t\treturn $this->select_thirdparty_list($selected,$htmlname,$filter,1,0,$forcecombo,array(),'',0, $limit);\n\t}\n\n\t/**\n\t *  Output html form to select a third party\n\t *\n\t *\t@param\tstring\t$selected       \t\tPreselected type\n\t *\t@param  string\t$htmlname       \t\tName of field in form\n\t *  @param  string\t$filter         \t\toptional filters criteras (example: 's.rowid <> x', 's.client IN (1,3)')\n\t *\t@param\tstring\t$showempty\t\t\t\tAdd an empty field (Can be '1' or text key to use on empty line like 'SelectThirdParty')\n\t * \t@param\tint\t\t$showtype\t\t\t\tShow third party type in combolist (customer, prospect or supplier)\n\t * \t@param\tint\t\t$forcecombo\t\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t *  @param\tarray\t$events\t\t\t\t\tAjax event options to run on change. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *\t@param\tint\t\t$limit\t\t\t\t\tMaximum number of elements\n\t *  @param\tstring\t$morecss\t\t\t\tAdd more css styles to the SELECT component\n\t *\t@param  string\t$moreparam      \t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *\t@param\tstring\t$selected_input_value\tValue of preselected input text (for use with ajax)\n\t *  @param\tint\t\t$hidelabel\t\t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n\t *  @param\tarray\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t * \t@return\tstring\t\t\t\t\t\t\tHTML string with select box for thirdparty.\n\t */\n\tfunction select_company($selected='', $htmlname='socid', $filter='', $showempty='', $showtype=0, $forcecombo=0, $events=array(), $limit=0, $morecss='minwidth100', $moreparam='', $selected_input_value='', $hidelabel=1, $ajaxoptions=array())\n\t{\n\t\tglobal $conf,$user,$langs;\n\n\t\t$out='';\n\n\t\tif (! empty($conf->use_javascript_ajax) && ! empty($conf->global->COMPANY_USE_SEARCH_TO_SELECT) && ! $forcecombo)\n\t\t{\n\t\t\t// No immediate load of all database\n\t\t\t$placeholder='';\n\t\t\tif ($selected && empty($selected_input_value))\n\t\t\t{\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\n\t\t\t\t$societetmp = new Societe($this->db);\n\t\t\t\t$societetmp->fetch($selected);\n\t\t\t\t$selected_input_value=$societetmp->name;\n\t\t\t\tunset($societetmp);\n\t\t\t}\n\t\t\t// mode 1\n\t\t\t$urloption='htmlname='.$htmlname.'&outjson=1&filter='.$filter.($showtype?'&showtype='.$showtype:'');\n\t\t\t$out.=  ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/societe/ajax/company.php', $urloption, $conf->global->COMPANY_USE_SEARCH_TO_SELECT, 0, $ajaxoptions);\n\t\t\t$out.='<style type=\"text/css\">.ui-autocomplete { z-index: 250; }</style>';\n\t\t\tif (empty($hidelabel)) print $langs->trans(\"RefOrLabel\").' : ';\n\t\t\telse if ($hidelabel > 1) {\n\t\t\t\t$placeholder=' placeholder=\"'.$langs->trans(\"RefOrLabel\").'\"';\n\t\t\t\tif ($hidelabel == 2) {\n\t\t\t\t\t$out.=  img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out.= '<input type=\"text\" class=\"'.$morecss.'\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.$placeholder.' '.(!empty($conf->global->THIRDPARTY_SEARCH_AUTOFOCUS) ? 'autofocus' : '').' />';\n\t\t\tif ($hidelabel == 3) {\n\t\t\t\t$out.=  img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Immediate load of all database\n\t\t\t$out.=$this->select_thirdparty_list($selected, $htmlname, $filter, $showempty, $showtype, $forcecombo, $events, '', 0, $limit, $morecss, $moreparam);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *  Output html form to select a third party.\n\t *  Note, you must use the select_company to get the component to select a third party. This function must only be called by select_company.\n\t *\n\t *\t@param\tstring\t$selected       Preselected type\n\t *\t@param  string\t$htmlname       Name of field in form\n\t *  @param  string\t$filter         optional filters criteras (example: 's.rowid <> x', 's.client in (1,3)')\n\t *\t@param\tstring\t$showempty\t\tAdd an empty field (Can be '1' or text to use on empty line like 'SelectThirdParty')\n\t * \t@param\tint\t\t$showtype\t\tShow third party type in combolist (customer, prospect or supplier)\n\t * \t@param\tint\t\t$forcecombo\t\tForce to use standard HTML select component without beautification\n\t *  @param\tarray\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @param\tstring\t$filterkey\t\tFilter on key value\n\t *  @param\tint\t\t$outputmode\t\t0=HTML select string, 1=Array\n\t *  @param\tint\t\t$limit\t\t\tLimit number of answers\n\t *  @param\tstring\t$morecss\t\tAdd more css styles to the SELECT component\n\t *\t@param  string\t$moreparam      Add more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t * \t@return\tstring\t\t\t\t\tHTML string with\n\t */\n\tfunction select_thirdparty_list($selected='',$htmlname='socid',$filter='',$showempty='', $showtype=0, $forcecombo=0, $events=array(), $filterkey='', $outputmode=0, $limit=0, $morecss='minwidth100', $moreparam='')\n\t{\n\t\tglobal $conf,$user,$langs;\n\n\t\t$out='';\n\t\t$num=0;\n\t\t$outarray=array();\n\n\t\t// On recherche les societes\n\t\t$sql = \"SELECT s.rowid, s.nom as name, s.name_alias, s.client, s.fournisseur, s.code_client, s.code_fournisseur\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX .\"societe as s\";\n\t\tif (!$user->rights->societe->client->voir && !$user->societe_id) $sql .= \", \".MAIN_DB_PREFIX.\"societe_commerciaux as sc\";\n\t\t$sql.= \" WHERE s.entity IN (\".getEntity('societe').\")\";\n\t\tif (! empty($user->societe_id)) $sql.= \" AND s.rowid = \".$user->societe_id;\n\t\tif ($filter) $sql.= \" AND (\".$filter.\")\";\n\t\tif (!$user->rights->societe->client->voir && !$user->societe_id) $sql.= \" AND s.rowid = sc.fk_soc AND sc.fk_user = \" .$user->id;\n\t\tif (! empty($conf->global->COMPANY_HIDE_INACTIVE_IN_COMBOBOX)) $sql.= \" AND s.status <> 0\";\n\t\t// Add criteria\n\t\tif ($filterkey && $filterkey != '')\n\t\t{\n\t\t\t$sql.=\" AND (\";\n\t\t\t$prefix=empty($conf->global->COMPANY_DONOTSEARCH_ANYWHERE)?'%':'';\t// Can use index if COMPANY_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i=0;\n\t\t\tif (count($scrit) > 1) $sql.=\"(\";\n\t\t\tforeach ($scrit as $crit) {\n\t\t\t\tif ($i > 0) $sql.=\" AND \";\n\t\t\t\t$sql.=\"(s.nom LIKE '\".$this->db->escape($prefix.$crit).\"%')\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) $sql.=\")\";\n\t\t\tif (! empty($conf->barcode->enabled))\n\t\t\t{\n\t\t\t\t$sql .= \" OR s.barcode LIKE '\".$this->db->escape($filterkey).\"%'\";\n\t\t\t}\n\t\t\t$sql.=\")\";\n\t\t}\n\t\t$sql.=$this->db->order(\"nom\",\"ASC\");\n\t\t$sql.=$this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\tdol_syslog(get_class($this).\"::select_thirdparty_list\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t   \tif (! $forcecombo)\n\t\t\t{\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events, $conf->global->COMPANY_USE_SEARCH_TO_SELECT);\n\t\t\t}\n\n\t\t\t// Construct $out and $outarray\n\t\t\t$out.= '<select id=\"'.$htmlname.'\" class=\"flat'.($morecss?' '.$morecss:'').'\"'.($moreparam?' '.$moreparam:'').' name=\"'.$htmlname.'\">'.\"\\n\";\n\n\t\t\t$textifempty='';\n\t\t\t// Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'.\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (! empty($conf->global->COMPANY_USE_SEARCH_TO_SELECT))\n\t\t\t{\n\t\t\t\tif ($showempty && ! is_numeric($showempty)) $textifempty=$langs->trans($showempty);\n\t\t\t\telse $textifempty.=$langs->trans(\"All\");\n\t\t\t}\n\t\t\tif ($showempty) $out.= '<option value=\"-1\">'.$textifempty.'</option>'.\"\\n\";\n\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$label='';\n\t\t\t\t\tif ($conf->global->SOCIETE_ADD_REF_IN_LIST) {\n\t\t\t\t\t\tif (($obj->client) && (!empty($obj->code_client))) {\n\t\t\t\t\t\t\t$label = $obj->code_client. ' - ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (($obj->fournisseur) && (!empty($obj->code_fournisseur))) {\n\t\t\t\t\t\t\t$label .= $obj->code_fournisseur. ' - ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$label.=' '.$obj->name;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$label=$obj->name;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!empty($obj->name_alias)) {\n\t\t\t\t\t\t$label.=' ('.$obj->name_alias.')';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($showtype)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($obj->client || $obj->fournisseur) $label.=' (';\n\t\t\t\t\t\tif ($obj->client == 1 || $obj->client == 3) $label.=$langs->trans(\"Customer\");\n\t\t\t\t\t\tif ($obj->client == 2 || $obj->client == 3) $label.=($obj->client==3?', ':'').$langs->trans(\"Prospect\");\n\t\t\t\t\t\tif ($obj->fournisseur) $label.=($obj->client?', ':'').$langs->trans(\"Supplier\");\n\t\t\t\t\t\tif ($obj->client || $obj->fournisseur) $label.=')';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (empty($outputmode))\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($selected > 0 && $selected == $obj->rowid)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\" selected>'.$label.'</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\">'.$label.'</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tarray_push($outarray, array('key'=>$obj->rowid, 'value'=>$label, 'label'=>$label));\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\t\t\t\t\tif (($i % 10) == 0) $out.=\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out.= '</select>'.\"\\n\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\t$this->result=array('nbofthirdparties'=>$num);\n\n\t\tif ($outputmode) return $outarray;\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *    \tReturn HTML combo list of absolute discounts\n\t *\n\t *    \t@param\tstring\t$selected       Id remise fixe pre-selectionnee\n\t *    \t@param  string\t$htmlname       Nom champ formulaire\n\t *    \t@param  string\t$filter         Criteres optionnels de filtre\n\t * \t\t@param\tint\t\t$socid\t\t\tId of thirdparty\n\t * \t\t@param\tint\t\t$maxvalue\t\tMax value for lines that can be selected\n\t * \t\t@return\tint\t\t\t\t\t\tReturn number of qualifed lines in list\n\t */\n\tfunction select_remises($selected, $htmlname, $filter, $socid, $maxvalue=0)\n\t{\n\t\tglobal $langs,$conf;\n\n\t\t// On recherche les remises\n\t\t$sql = \"SELECT re.rowid, re.amount_ht, re.amount_tva, re.amount_ttc,\";\n\t\t$sql.= \" re.description, re.fk_facture_source\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX .\"societe_remise_except as re\";\n\t\t$sql.= \" WHERE re.fk_soc = \".(int) $socid;\n\t\t$sql.= \" AND re.entity = \" . $conf->entity;\n\t\tif ($filter) $sql.= \" AND \".$filter;\n\t\t$sql.= \" ORDER BY re.description ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_remises\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\tprint '<select class=\"flat maxwidthonsmartphone\" name=\"'.$htmlname.'\">';\n\t\t\t$num = $this->db->num_rows($resql);\n\n\t\t\t$qualifiedlines=$num;\n\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\tprint '<option value=\"0\">&nbsp;</option>';\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$desc=dol_trunc($obj->description,40);\n\t\t\t\t\tif (preg_match('/\\(CREDIT_NOTE\\)/', $desc)) $desc=preg_replace('/\\(CREDIT_NOTE\\)/', $langs->trans(\"CreditNote\"), $desc);\n\t\t\t\t\tif (preg_match('/\\(DEPOSIT\\)/', $desc)) $desc=preg_replace('/\\(DEPOSIT\\)/', $langs->trans(\"Deposit\"), $desc);\n\t\t\t\t\tif (preg_match('/\\(EXCESS RECEIVED\\)/', $desc)) $desc=preg_replace('/\\(EXCESS RECEIVED\\)/', $langs->trans(\"ExcessReceived\"), $desc);\n\n\t\t\t\t\t$selectstring='';\n\t\t\t\t\tif ($selected > 0 && $selected == $obj->rowid) $selectstring=' selected';\n\n\t\t\t\t\t$disabled='';\n\t\t\t\t\tif ($maxvalue > 0 && $obj->amount_ttc > $maxvalue)\n\t\t\t\t\t{\n\t\t\t\t\t\t$qualifiedlines--;\n\t\t\t\t\t\t$disabled=' disabled';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($conf->global->MAIN_SHOW_FACNUMBER_IN_DISCOUNT_LIST) && !empty($obj->fk_facture_source))\n\t\t\t\t\t{\n\t\t\t\t\t\t$tmpfac = new Facture($this->db);\n\t\t\t\t\t\tif ($tmpfac->fetch($obj->fk_facture_source) > 0) $desc=$desc.' - '.$tmpfac->ref;\n\t\t\t\t\t}\n\n\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\"'.$selectstring.$disabled.'>'.$desc.' ('.price($obj->amount_ht).' '.$langs->trans(\"HT\").' - '.price($obj->amount_ttc).' '.$langs->trans(\"TTC\").')</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '</select>';\n\t\t\treturn $qualifiedlines;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn list of all contacts (for a third party or all)\n\t *\n\t *\t@param\tint\t\t$socid      \tId ot third party or 0 for all\n\t *\t@param  string\t$selected   \tId contact pre-selectionne\n\t *\t@param  string\t$htmlname  \t    Name of HTML field ('none' for a not editable field)\n\t *\t@param  int\t\t$showempty      0=no empty value, 1=add an empty value\n\t *\t@param  string\t$exclude        List of contacts id to exclude\n\t *\t@param\tstring\t$limitto\t\tDisable answers that are not id in this array list\n\t *\t@param\tinteger\t$showfunction   Add function into label\n\t *\t@param\tstring\t$moreclass\t\tAdd more class to class style\n\t *\t@param\tinteger\t$showsoc\t    Add company into label\n\t * \t@param\tint\t\t$forcecombo\t\tForce to use combo box\n\t *  @param\tarray\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @param\tbool\t$options_only\tReturn options only (for ajax treatment)\n\t *  @param\tstring\t$moreparam\t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *  @param\tstring\t$htmlid\t\t\tHtml id to use instead of htmlname\n\t *\t@return\tint\t\t\t\t\t\t<0 if KO, Nb of contact in list if OK\n\t *  @deprected\t\t\t\t\t\tYou can use selectcontacts directly (warning order of param was changed)\n\t */\n\tfunction select_contacts($socid,$selected='',$htmlname='contactid',$showempty=0,$exclude='',$limitto='',$showfunction=0, $moreclass='', $showsoc=0, $forcecombo=0, $events=array(), $options_only=false, $moreparam='', $htmlid='')\n\t{\n\t\tprint $this->selectcontacts($socid,$selected,$htmlname,$showempty,$exclude,$limitto,$showfunction, $moreclass, $options_only, $showsoc, $forcecombo, $events, $moreparam, $htmlid);\n\t\treturn $this->num;\n\t}\n\n\t/**\n\t *\tReturn HTML code of the SELECT of list of all contacts (for a third party or all).\n\t *  This also set the number of contacts found into $this->num\n\t *\n\t *\t@param\tint\t\t\t$socid      \tId ot third party or 0 for all\n\t *\t@param  array|int\t$selected   \tArray of ID of pre-selected contact id\n\t *\t@param  string\t\t$htmlname  \t    Name of HTML field ('none' for a not editable field)\n\t *\t@param  int\t\t\t$showempty     \t0=no empty value, 1=add an empty value, 2=add line 'Internal' (used by user edit)\n\t *\t@param  string\t\t$exclude        List of contacts id to exclude\n\t *\t@param\tstring\t\t$limitto\t\tDisable answers that are not id in this array list\n\t *\t@param\tinteger\t\t$showfunction   Add function into label\n\t *\t@param\tstring\t\t$moreclass\t\tAdd more class to class style\n\t *\t@param\tbool\t\t$options_only\tReturn options only (for ajax treatment)\n\t *\t@param\tinteger\t\t$showsoc\t    Add company into label\n\t * \t@param\tint\t\t\t$forcecombo\t\tForce to use combo box\n\t *  @param\tarray\t\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @param\tstring\t\t$moreparam\t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *  @param\tstring\t\t$htmlid\t\t\tHtml id to use instead of htmlname\n\t *\t@return\t int\t\t\t\t\t\t<0 if KO, Nb of contact in list if OK\n\t */\n\tfunction selectcontacts($socid, $selected='', $htmlname='contactid', $showempty=0, $exclude='', $limitto='', $showfunction=0, $moreclass='', $options_only=false, $showsoc=0, $forcecombo=0, $events=array(), $moreparam='', $htmlid='')\n\t{\n\t\tglobal $conf,$langs;\n\n\t\t$langs->load('companies');\n\n\t\tif (empty($htmlid)) $htmlid = $htmlname;\n        $out='';\n\n\t\t// On recherche les societes\n\t\t$sql = \"SELECT sp.rowid, sp.lastname, sp.statut, sp.firstname, sp.poste\";\n\t\tif ($showsoc > 0) $sql.= \" , s.nom as company\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX .\"socpeople as sp\";\n\t\tif ($showsoc > 0) $sql.= \" LEFT OUTER JOIN  \".MAIN_DB_PREFIX .\"societe as s ON s.rowid=sp.fk_soc\";\n\t\t$sql.= \" WHERE sp.entity IN (\".getEntity('societe').\")\";\n\t\tif ($socid > 0) $sql.= \" AND sp.fk_soc=\".$socid;\n\t\tif (! empty($conf->global->CONTACT_HIDE_INACTIVE_IN_COMBOBOX)) $sql.= \" AND sp.statut <> 0\";\n\t\t$sql.= \" ORDER BY sp.lastname ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_contacts\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num=$this->db->num_rows($resql);\n\n\t\t\tif ($conf->use_javascript_ajax && ! $forcecombo && ! $options_only)\n\t\t\t{\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlid, $events, $conf->global->CONTACT_USE_SEARCH_TO_SELECT);\n\t\t\t}\n\n\t\t\tif ($htmlname != 'none' || $options_only) $out.= '<select class=\"flat'.($moreclass?' '.$moreclass:'').'\" id=\"'.$htmlid.'\" name=\"'.$htmlname.'\" '.(!empty($moreparam) ? $moreparam : '').'>';\n\t\t\tif ($showempty == 1) $out.= '<option value=\"0\"'.($selected=='0'?' selected':'').'>&nbsp;</option>';\n\t\t\tif ($showempty == 2) $out.= '<option value=\"0\"'.($selected=='0'?' selected':'').'>'.$langs->trans(\"Internal\").'</option>';\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\n\t\t\t\t$contactstatic=new Contact($this->db);\n\n\t\t\t\tif (!is_array($selected)) $selected = array($selected);\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t\t$contactstatic->id=$obj->rowid;\n\t\t\t\t\t$contactstatic->lastname=$obj->lastname;\n\t\t\t\t\t$contactstatic->firstname=$obj->firstname;\n\t\t\t\t\tif ($obj->statut == 1){\n\t\t\t\t\tif ($htmlname != 'none')\n\t\t\t\t\t{\n\t\t\t\t\t\t$disabled=0;\n\t\t\t\t\t\tif (is_array($exclude) && count($exclude) && in_array($obj->rowid,$exclude)) $disabled=1;\n\t\t\t\t\t\tif (is_array($limitto) && count($limitto) && ! in_array($obj->rowid,$limitto)) $disabled=1;\n\t\t\t\t\t\tif (!empty($selected) && in_array($obj->rowid, $selected))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\t\t\tif ($disabled) $out.= ' disabled';\n\t\t\t\t\t\t\t$out.= ' selected>';\n\t\t\t\t\t\t\t$out.= $contactstatic->getFullName($langs);\n\t\t\t\t\t\t\tif ($showfunction && $obj->poste) $out.= ' ('.$obj->poste.')';\n\t\t\t\t\t\t\tif (($showsoc > 0) && $obj->company) $out.= ' - ('.$obj->company.')';\n\t\t\t\t\t\t\t$out.= '</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\t\t\tif ($disabled) $out.= ' disabled';\n\t\t\t\t\t\t\t$out.= '>';\n\t\t\t\t\t\t\t$out.= $contactstatic->getFullName($langs);\n\t\t\t\t\t\t\tif ($showfunction && $obj->poste) $out.= ' ('.$obj->poste.')';\n\t\t\t\t\t\t\tif (($showsoc > 0) && $obj->company) $out.= ' - ('.$obj->company.')';\n\t\t\t\t\t\t\t$out.= '</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (in_array($obj->rowid, $selected))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.= $contactstatic->getFullName($langs);\n\t\t\t\t\t\t\tif ($showfunction && $obj->poste) $out.= ' ('.$obj->poste.')';\n\t\t\t\t\t\t\tif (($showsoc > 0) && $obj->company) $out.= ' - ('.$obj->company.')';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$out.= '<option value=\"-1\"'.($showempty==2?'':' selected').' disabled>'.$langs->trans($socid?\"NoContactDefinedForThirdParty\":\"NoContactDefined\").'</option>';\n\t\t\t}\n\t\t\tif ($htmlname != 'none' || $options_only)\n\t\t\t{\n\t\t\t\t$out.= '</select>';\n\t\t\t}\n\n\t\t\t$this->num = $num;\n\t\t\treturn $out;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn select list of users\n\t *\n\t *  @param\tstring\t$selected       Id user preselected\n\t *  @param  string\t$htmlname       Field name in form\n\t *  @param  int\t\t$show_empty     0=liste sans valeur nulle, 1=ajoute valeur inconnue\n\t *  @param  array\t$exclude        Array list of users id to exclude\n\t * \t@param\tint\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  array\t$include        Array list of users id to include\n\t * \t@param\tint\t\t$enableonly\t\tArray list of users id to be enabled. All other must be disabled\n\t *  @param\tstring\t$force_entity\t'0' or Ids of environment to force\n\t * \t@return\tvoid\n\t *  @deprecated\t\tUse select_dolusers instead\n\t *  @see select_dolusers()\n\t */\n\tfunction select_users($selected='',$htmlname='userid',$show_empty=0,$exclude=null,$disabled=0,$include='',$enableonly='',$force_entity='0')\n\t{\n\t\tprint $this->select_dolusers($selected,$htmlname,$show_empty,$exclude,$disabled,$include,$enableonly,$force_entity);\n\t}\n\n\t/**\n\t *\tReturn select list of users\n\t *\n\t *  @param\tstring\t$selected       User id or user object of user preselected. If 0 or < -2, we use id of current user. If -1, keep unselected (if empty is allowed)\n\t *  @param  string\t$htmlname       Field name in form\n\t *  @param  int\t\t$show_empty     0=list with no empty value, 1=add also an empty value into list\n\t *  @param  array\t$exclude        Array list of users id to exclude\n\t * \t@param\tint\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  array|string\t$include        Array list of users id to include or 'hierarchy' to have only supervised users or 'hierarchyme' to have supervised + me\n\t * \t@param\tarray\t$enableonly\t\tArray list of users id to be enabled. If defined, it means that others will be disabled\n\t *  @param\tstring\t$force_entity\t'0' or Ids of environment to force\n\t *  @param\tint\t\t$maxlength\t\tMaximum length of string into list (0=no limit)\n\t *  @param\tint\t\t$showstatus\t\t0=show user status only if status is disabled, 1=always show user status into label, -1=never show user status\n\t *  @param\tstring\t$morefilter\t\tAdd more filters into sql request (Example: 'employee = 1')\n\t *  @param\tinteger\t$show_every\t\t0=default list, 1=add also a value \"Everybody\" at beginning of list\n\t *  @param\tstring\t$enableonlytext\tIf option $enableonlytext is set, we use this text to explain into label why record is disabled. Not used if enableonly is empty.\n\t *  @param\tstring\t$morecss\t\tMore css\n\t *  @param  int     $noactive       Show only active users (this will also happened whatever is this option if USER_HIDE_INACTIVE_IN_COMBOBOX is on).\n\t * \t@return\tstring\t\t\t\t\tHTML select string\n\t *  @see select_dolgroups\n\t */\n\tfunction select_dolusers($selected='', $htmlname='userid', $show_empty=0, $exclude=null, $disabled=0, $include='', $enableonly='', $force_entity='0', $maxlength=0, $showstatus=0, $morefilter='', $show_every=0, $enableonlytext='', $morecss='', $noactive=0)\n\t{\n\t\tglobal $conf,$user,$langs;\n\n\t\t// If no preselected user defined, we take current user\n\t\tif ((is_numeric($selected) && ($selected < -2 || empty($selected))) && empty($conf->global->SOCIETE_DISABLE_DEFAULT_SALESREPRESENTATIVE)) $selected=$user->id;\n\n\t\t$excludeUsers=null;\n\t\t$includeUsers=null;\n\n\t\t// Permettre l'exclusion d'utilisateurs\n\t\tif (is_array($exclude))\t$excludeUsers = implode(\",\",$exclude);\n\t\t// Permettre l'inclusion d'utilisateurs\n\t\tif (is_array($include))\t$includeUsers = implode(\",\",$include);\n\t\telse if ($include == 'hierarchy')\n\t\t{\n\t\t\t// Build list includeUsers to have only hierarchy\n\t\t\t$includeUsers = implode(\",\",$user->getAllChildIds(0));\n\t\t}\n\t\telse if ($include == 'hierarchyme')\n\t\t{\n\t\t\t// Build list includeUsers to have only hierarchy and current user\n\t\t\t$includeUsers = implode(\",\",$user->getAllChildIds(1));\n\t\t}\n\n\t\t$out='';\n\n\t\t// Forge request to select users\n\t\t$sql = \"SELECT DISTINCT u.rowid, u.lastname as lastname, u.firstname, u.statut, u.login, u.admin, u.entity\";\n\t\tif (! empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && ! $user->entity)\n\t\t{\n\t\t\t$sql.= \", e.label\";\n\t\t}\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX .\"user as u\";\n\t\tif (! empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && ! $user->entity)\n\t\t{\n\t\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX .\"entity as e ON e.rowid=u.entity\";\n\t\t\tif ($force_entity) $sql.= \" WHERE u.entity IN (0,\".$force_entity.\")\";\n\t\t\telse $sql.= \" WHERE u.entity IS NOT NULL\";\n\t\t}\n\t\telse\n\t   {\n\t\t\tif (! empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE))\n\t\t\t{\n\t\t\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"usergroup_user as ug\";\n\t\t\t\t$sql.= \" ON ug.fk_user = u.rowid\";\n\t\t\t\t$sql.= \" WHERE ug.entity = \".$conf->entity;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$sql.= \" WHERE u.entity IN (0,\".$conf->entity.\")\";\n\t\t\t}\n\t\t}\n\t\tif (! empty($user->societe_id)) $sql.= \" AND u.fk_soc = \".$user->societe_id;\n\t\tif (is_array($exclude) && $excludeUsers) $sql.= \" AND u.rowid NOT IN (\".$excludeUsers.\")\";\n\t\tif ($includeUsers) $sql.= \" AND u.rowid IN (\".$includeUsers.\")\";\n\t\tif (! empty($conf->global->USER_HIDE_INACTIVE_IN_COMBOBOX) || $noactive) $sql.= \" AND u.statut <> 0\";\n\t\tif (! empty($morefilter)) $sql.=\" \".$morefilter;\n\n\t\tif(empty($conf->global->MAIN_FIRSTNAME_NAME_POSITION)){\n\t\t\t$sql.= \" ORDER BY u.firstname ASC\";\n\t\t}else{\n\t\t\t$sql.= \" ORDER BY u.lastname ASC\";\n\t\t}\n\n\t\tdol_syslog(get_class($this).\"::select_dolusers\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t   \t\t// Enhance with select2\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname);\n\n\t\t\t\t// do not use maxwidthonsmartphone by default. Set it by caller so auto size to 100% will work when not defined\n\t\t\t\t$out.= '<select class=\"flat'.($morecss?' minwidth100 '.$morecss:' minwidth200').'\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\"'.($disabled?' disabled':'').'>';\n\t\t\t\tif ($show_empty) $out.= '<option value=\"-1\"'.((empty($selected) || $selected==-1)?' selected':'').'>&nbsp;</option>'.\"\\n\";\n\t\t\t\tif ($show_every) $out.= '<option value=\"-2\"'.(($selected==-2)?' selected':'').'>-- '.$langs->trans(\"Everybody\").' --</option>'.\"\\n\";\n\n\t\t\t\t$userstatic=new User($this->db);\n\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t\t$userstatic->id=$obj->rowid;\n\t\t\t\t\t$userstatic->lastname=$obj->lastname;\n\t\t\t\t\t$userstatic->firstname=$obj->firstname;\n\n\t\t\t\t\t$disableline='';\n\t\t\t\t\tif (is_array($enableonly) && count($enableonly) && ! in_array($obj->rowid,$enableonly)) $disableline=($enableonlytext?$enableonlytext:'1');\n\n\t\t\t\t\tif ((is_object($selected) && $selected->id == $obj->rowid) || (! is_object($selected) && $selected == $obj->rowid))\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\t\tif ($disableline) $out.= ' disabled';\n\t\t\t\t\t\t$out.= ' selected>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\t\tif ($disableline) $out.= ' disabled';\n\t\t\t\t\t\t$out.= '>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$fullNameMode = 0; //Lastname + firstname\n\t\t\t\t\tif(empty($conf->global->MAIN_FIRSTNAME_NAME_POSITION)){\n\t\t\t\t\t\t$fullNameMode = 1; //firstname + lastname\n\t\t\t\t\t}\n\t\t\t\t\t$out.= $userstatic->getFullName($langs, $fullNameMode, -1, $maxlength);\n\n\t\t\t\t\t// Complete name with more info\n\t\t\t\t\t$moreinfo=0;\n\t\t\t\t\tif (! empty($conf->global->MAIN_SHOW_LOGIN))\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= ($moreinfo?' - ':' (').$obj->login;\n\t\t\t\t\t\t$moreinfo++;\n\t\t\t\t\t}\n\t\t\t\t\tif ($showstatus >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($obj->statut == 1 && $showstatus == 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.=($moreinfo?' - ':' (').$langs->trans('Enabled');\n\t\t\t\t\t\t\t$moreinfo++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($obj->statut == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.=($moreinfo?' - ':' (').$langs->trans('Disabled');\n\t\t\t\t\t\t\t$moreinfo++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (! empty($conf->multicompany->enabled) && empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE) && $conf->entity == 1 && $user->admin && ! $user->entity)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! $obj->entity)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.=($moreinfo?' - ':' (').$langs->trans(\"AllEntities\");\n\t\t\t\t\t\t\t$moreinfo++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.=($moreinfo?' - ':' (').($obj->label?$obj->label:$langs->trans(\"EntityNameNotDefined\"));\n\t\t\t\t\t\t\t$moreinfo++;\n\t\t\t\t\t \t}\n\t\t\t\t\t}\n\t\t\t\t\t$out.=($moreinfo?')':'');\n\t\t\t\t\tif ($disableline && $disableline != '1')\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.=' - '.$disableline;\t// This is text from $enableonlytext parameter\n\t\t\t\t\t}\n\t\t\t\t\t$out.= '</option>';\n\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$out.= '<select class=\"flat\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" disabled>';\n\t\t\t\t$out.= '<option value=\"\">'.$langs->trans(\"None\").'</option>';\n\t\t\t}\n\t\t\t$out.= '</select>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tReturn select list of users. Selected users are stored into session.\n\t *  List of users are provided into $_SESSION['assignedtouser'].\n\t *\n\t *  @param  string\t$action         Value for $action\n\t *  @param  string\t$htmlname       Field name in form\n\t *  @param  int\t\t$show_empty     0=list without the empty value, 1=add empty value\n\t *  @param  array\t$exclude        Array list of users id to exclude\n\t * \t@param\tint\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  array\t$include        Array list of users id to include or 'hierarchy' to have only supervised users\n\t * \t@param\tarray\t$enableonly\t\tArray list of users id to be enabled. All other must be disabled\n\t *  @param\tint\t\t$force_entity\t'0' or Ids of environment to force\n\t *  @param\tint\t\t$maxlength\t\tMaximum length of string into list (0=no limit)\n\t *  @param\tint\t\t$showstatus\t\t0=show user status only if status is disabled, 1=always show user status into label, -1=never show user status\n\t *  @param\tstring\t$morefilter\t\tAdd more filters into sql request\n\t *  @param\tint\t\t$showproperties\t\tShow properties of each attendees\n\t *  @param\tarray\t$listofuserid\t\tArray with properties of each user\n\t *  @param\tarray\t$listofcontactid\tArray with properties of each contact\n\t *  @param\tarray\t$listofotherid\t\tArray with properties of each other contact\n\t * \t@return\tstring\t\t\t\t\tHTML select string\n\t *  @see select_dolgroups\n\t */\n\tfunction select_dolusers_forevent($action='', $htmlname='userid', $show_empty=0, $exclude=null, $disabled=0, $include='', $enableonly='', $force_entity='0', $maxlength=0, $showstatus=0, $morefilter='', $showproperties=0, $listofuserid=array(), $listofcontactid=array(), $listofotherid=array())\n\t{\n\t\tglobal $conf, $user, $langs;\n\n\t\t$userstatic=new User($this->db);\n\t\t$out='';\n\n\t\t// Method with no ajax\n\t\t//$out.='<form method=\"POST\" action=\"'.$_SERVER[\"PHP_SELF\"].'\">';\n\t\tif ($action == 'view')\n\t\t{\n\t\t\t$out.='';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$out.='<input type=\"hidden\" class=\"removedassignedhidden\" name=\"removedassigned\" value=\"\">';\n\t\t\t$out.='<script type=\"text/javascript\" language=\"javascript\">jQuery(document).ready(function () {    jQuery(\".removedassigned\").click(function() {        jQuery(\".removedassignedhidden\").val(jQuery(this).val());    });})</script>';\n\t\t\t$out.=$this->select_dolusers('', $htmlname, $show_empty, $exclude, $disabled, $include, $enableonly, $force_entity, $maxlength, $showstatus, $morefilter);\n\t\t\t$out.=' <input type=\"submit\" class=\"button valignmiddle\" name=\"'.$action.'assignedtouser\" value=\"'.dol_escape_htmltag($langs->trans(\"Add\")).'\">';\n\t\t\t$out.='<br>';\n\t\t}\n\t\t$assignedtouser=array();\n\t\tif (!empty($_SESSION['assignedtouser']))\n\t\t{\n\t\t\t$assignedtouser=json_decode($_SESSION['assignedtouser'], true);\n\t\t}\n\t\t$nbassignetouser=count($assignedtouser);\n\n\t\tif ($nbassignetouser && $action != 'view') $out.='<br>';\n\t\tif ($nbassignetouser) $out.='<ul class=\"attendees\">';\n\t\t$i=0; $ownerid=0;\n\t\tforeach($assignedtouser as $key => $value)\n\t\t{\n\t\t\tif ($value['id'] == $ownerid) continue;\n\n\t\t\t$out.='<li>';\n\t\t\t$userstatic->fetch($value['id']);\n\t\t\t$out.= $userstatic->getNomUrl(-1);\n\t\t\tif ($i == 0) { $ownerid = $value['id']; $out.=' ('.$langs->trans(\"Owner\").')'; }\n\t\t\tif ($nbassignetouser > 1 && $action != 'view') $out.=' <input type=\"image\" style=\"border: 0px;\" src=\"'.img_picto($langs->trans(\"Remove\"), 'delete', '', 0, 1).'\" value=\"'.$userstatic->id.'\" class=\"removedassigned\" id=\"removedassigned_'.$userstatic->id.'\" name=\"removedassigned_'.$userstatic->id.'\">';\n\t\t\t// Show my availability\n\t\t\tif ($showproperties)\n\t\t\t{\n\t\t\t\tif ($ownerid == $value['id'] && is_array($listofuserid) && count($listofuserid) && in_array($ownerid, array_keys($listofuserid)))\n\t\t\t\t{\n\t\t\t\t\t$out.='<div class=\"myavailability inline-block\">';\n\t\t\t\t\t$out.='&nbsp;-&nbsp;<span class=\"opacitymedium\">'.$langs->trans(\"Availability\").':</span>  <input id=\"transparency\" class=\"marginleftonly marginrightonly\" '.($action == 'view'?'disabled':'').' type=\"checkbox\" name=\"transparency\"'.($listofuserid[$ownerid]['transparency']?' checked':'').'>'.$langs->trans(\"Busy\");\n\t\t\t\t\t$out.='</div>';\n\t\t\t\t}\n\t\t\t}\n\t\t\t//$out.=' '.($value['mandatory']?$langs->trans(\"Mandatory\"):$langs->trans(\"Optional\"));\n\t\t\t//$out.=' '.($value['transparency']?$langs->trans(\"Busy\"):$langs->trans(\"NotBusy\"));\n\n\t\t\t$out.='</li>';\n\t\t\t$i++;\n\t\t}\n\t\tif ($nbassignetouser) $out.='</ul>';\n\n\t\t//$out.='</form>';\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *  Return list of products for customer in Ajax if Ajax activated or go to select_produits_list\n\t *\n\t *  @param\t\tint\t\t\t$selected\t\t\t\tPreselected products\n\t *  @param\t\tstring\t\t$htmlname\t\t\t\tName of HTML select field (must be unique in page)\n\t *  @param\t\tint\t\t\t$filtertype\t\t\t\tFilter on product type (''=nofilter, 0=product, 1=service)\n\t *  @param\t\tint\t\t\t$limit\t\t\t\t\tLimit on number of returned lines\n\t *  @param\t\tint\t\t\t$price_level\t\t\tLevel of price to show\n\t *  @param\t\tint\t\t\t$status\t\t\t\t\t-1=Return all products, 0=Products not on sell, 1=Products on sell\n\t *  @param\t\tint\t\t\t$finished\t\t\t\t2=all, 1=finished, 0=raw material\n\t *  @param\t\tstring\t\t$selected_input_value\tValue of preselected input text (for use with ajax)\n\t *  @param\t\tint\t\t\t$hidelabel\t\t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n\t *  @param\t\tarray\t\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t *  @param      int\t\t\t$socid\t\t\t\t\tThirdparty Id (to get also price dedicated to this customer)\n\t *  @param\t\tstring\t\t$showempty\t\t\t\t'' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t\t$forcecombo\t\t\t\tForce to use combo box\n\t *  @param      string      $morecss                Add more css on select\n\t *  @param      int         $hidepriceinlabel       1=Hide prices in label\n\t *  @param      string      $warehouseStatus        warehouse status filter, following comma separated filter options can be used\n\t *\t\t\t\t\t\t\t\t\t\t            'warehouseopen' = select products from open warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t            'warehouseclosed' = select products from closed warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t            'warehouseinternal' = select products from warehouses for internal correct/transfer only\n\t *  @param array $selected_combinations Selected combinations. Format: array([attrid] => attrval, [...])\n\t *  @return\t\tvoid\n\t */\n\tfunction select_produits($selected='', $htmlname='productid', $filtertype='', $limit=20, $price_level=0, $status=1, $finished=2, $selected_input_value='', $hidelabel=0, $ajaxoptions=array(), $socid=0, $showempty='1', $forcecombo=0, $morecss='', $hidepriceinlabel=0, $warehouseStatus='', $selected_combinations = array())\n\t{\n\t\tglobal $langs,$conf;\n\n\t\t$price_level = (! empty($price_level) ? $price_level : 0);\n\n\t\tif (! empty($conf->use_javascript_ajax) && ! empty($conf->global->PRODUIT_USE_SEARCH_TO_SELECT))\n\t\t{\n\t\t\t$placeholder='';\n\n\t\t\tif ($selected && empty($selected_input_value))\n\t\t\t{\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t\t\t\t$producttmpselect = new Product($this->db);\n\t\t\t\t$producttmpselect->fetch($selected);\n\t\t\t\t$selected_input_value=$producttmpselect->ref;\n\t\t\t\tunset($producttmpselect);\n\t\t\t}\n\t\t\t// mode=1 means customers products\n\t\t\t$urloption='htmlname='.$htmlname.'&outjson=1&price_level='.$price_level.'&type='.$filtertype.'&mode=1&status='.$status.'&finished='.$finished.'&hidepriceinlabel='.$hidepriceinlabel.'&warehousestatus='.$warehouseStatus;\n\t\t\t//Price by customer\n\t\t\tif (! empty($conf->global->PRODUIT_CUSTOMER_PRICES) && !empty($socid)) {\n\t\t\t\t$urloption.='&socid='.$socid;\n\t\t\t}\n\t\t\tprint ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/product/ajax/products.php', $urloption, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT, 0, $ajaxoptions);\n\n\t\t\tif (!empty($conf->variants->enabled)) {\n\t\t\t\t?>\n\t\t\t\t<script>\n\n\t\t\t\t\tselected = <?php echo json_encode($selected_combinations) ?>;\n\t\t\t\t\tcombvalues = {};\n\n\t\t\t\t\tjQuery(document).ready(function () {\n\n\t\t\t\t\t\tjQuery(\"input[name='prod_entry_mode']\").change(function () {\n\t\t\t\t\t\t\tif (jQuery(this).val() == 'free') {\n\t\t\t\t\t\t\t\tjQuery('div#attributes_box').empty();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tjQuery(\"input#<?php echo $htmlname ?>\").change(function () {\n\n\t\t\t\t\t\t\tif (!jQuery(this).val()) {\n\t\t\t\t\t\t\t\tjQuery('div#attributes_box').empty();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tjQuery.getJSON(\"<?php echo dol_buildpath('/variants/ajax/getCombinations.php', 2) ?>\", {\n\t\t\t\t\t\t\t\tid: jQuery(this).val()\n\t\t\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\t\t\tjQuery('div#attributes_box').empty();\n\n\t\t\t\t\t\t\t\tjQuery.each(data, function (key, val) {\n\n\t\t\t\t\t\t\t\t\tcombvalues[val.id] = val.values;\n\n\t\t\t\t\t\t\t\t\tvar span = jQuery(document.createElement('div')).css({\n\t\t\t\t\t\t\t\t\t\t'display': 'table-row'\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tspan.append(\n\t\t\t\t\t\t\t\t\t\tjQuery(document.createElement('div')).text(val.label).css({\n\t\t\t\t\t\t\t\t\t\t\t'font-weight': 'bold',\n\t\t\t\t\t\t\t\t\t\t\t'display': 'table-cell',\n\t\t\t\t\t\t\t\t\t\t\t'text-align': 'right'\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tvar html = jQuery(document.createElement('select')).attr('name', 'combinations[' + val.id + ']').css({\n\t\t\t\t\t\t\t\t\t\t'margin-left': '15px',\n\t\t\t\t\t\t\t\t\t\t'white-space': 'pre'\n\t\t\t\t\t\t\t\t\t}).append(\n\t\t\t\t\t\t\t\t\t\tjQuery(document.createElement('option')).val('')\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tjQuery.each(combvalues[val.id], function (key, val) {\n\t\t\t\t\t\t\t\t\t\tvar tag = jQuery(document.createElement('option')).val(val.id).html(val.value);\n\n\t\t\t\t\t\t\t\t\t\tif (selected[val.fk_product_attribute] == val.id) {\n\t\t\t\t\t\t\t\t\t\t\ttag.attr('selected', 'selected');\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\thtml.append(tag);\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tspan.append(html);\n\t\t\t\t\t\t\t\t\tjQuery('div#attributes_box').append(span);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t<?php if ($selected): ?>\n\t\t\t\t\t\tjQuery(\"input#<?php echo $htmlname ?>\").change();\n\t\t\t\t\t\t<?php endif ?>\n\t\t\t\t\t});\n\t\t\t\t</script>\n                <?php\n\t\t\t}\n\t\t\tif (empty($hidelabel)) print $langs->trans(\"RefOrLabel\").' : ';\n\t\t\telse if ($hidelabel > 1) {\n\t\t\t\t$placeholder=' placeholder=\"'.$langs->trans(\"RefOrLabel\").'\"';\n\t\t\t\tif ($hidelabel == 2) {\n\t\t\t\t\tprint img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '<input type=\"text\" class=\"minwidth100\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.$placeholder.' '.(!empty($conf->global->PRODUCT_SEARCH_AUTOFOCUS) ? 'autofocus' : '').' />';\n\t\t\tif ($hidelabel == 3) {\n\t\t\t\tprint img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $this->select_produits_list($selected,$htmlname,$filtertype,$limit,$price_level,'',$status,$finished,0,$socid,$showempty,$forcecombo,$morecss,$hidepriceinlabel, $warehouseStatus);\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn list of products for a customer\n\t *\n\t *\t@param      int\t\t$selected           Preselected product\n\t *\t@param      string\t$htmlname           Name of select html\n\t *  @param\t\tstring\t$filtertype         Filter on product type (''=nofilter, 0=product, 1=service)\n\t *\t@param      int\t\t$limit              Limit on number of returned lines\n\t *\t@param      int\t\t$price_level        Level of price to show\n\t * \t@param      string\t$filterkey          Filter on product\n\t *\t@param\t\tint\t\t$status             -1=Return all products, 0=Products not on sell, 1=Products on sell\n\t *  @param      int\t\t$finished           Filter on finished field: 2=No filter\n\t *  @param      int\t\t$outputmode         0=HTML select string, 1=Array\n\t *  @param      int\t\t$socid     \t\t    Thirdparty Id (to get also price dedicated to this customer)\n\t *  @param\t\tstring\t$showempty\t\t    '' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t$forcecombo\t\t    Force to use combo box\n\t *  @param      string  $morecss            Add more css on select\n\t *  @param      int     $hidepriceinlabel   1=Hide prices in label\n\t *  @param      string  $warehouseStatus    warehouse status filter, following comma separated filter options can be used\n\t *\t\t\t\t\t\t\t\t\t\t    'warehouseopen' = select products from open warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t    'warehouseclosed' = select products from closed warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t    'warehouseinternal' = select products from warehouses for internal correct/transfer only\n\t *  @return     array    \t\t\t\t    Array of keys for json\n\t */\n\tfunction select_produits_list($selected='',$htmlname='productid',$filtertype='',$limit=20,$price_level=0,$filterkey='',$status=1,$finished=2,$outputmode=0,$socid=0,$showempty='1',$forcecombo=0,$morecss='',$hidepriceinlabel=0, $warehouseStatus='')\n\t{\n\t\tglobal $langs,$conf,$user,$db;\n\n\t\t$out='';\n\t\t$outarray=array();\n\n\t\t$warehouseStatusArray = array();\n\t\tif (! empty($warehouseStatus))\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/stock/class/entrepot.class.php';\n\t\t\tif (preg_match('/warehouseclosed/', $warehouseStatus))\n\t\t\t{\n\t\t\t\t$warehouseStatusArray[] = Entrepot::STATUS_CLOSED;\n\t\t\t}\n\t\t\tif (preg_match('/warehouseopen/', $warehouseStatus))\n\t\t\t{\n\t\t\t\t$warehouseStatusArray[] = Entrepot::STATUS_OPEN_ALL;\n\t\t\t}\n\t\t\tif (preg_match('/warehouseinternal/', $warehouseStatus))\n\t\t\t{\n\t\t\t\t$warehouseStatusArray[] = Entrepot::STATUS_OPEN_INTERNAL;\n\t\t\t}\n\t\t}\n\n\t\t$selectFields = \" p.rowid, p.label, p.ref, p.description, p.barcode, p.fk_product_type, p.price, p.price_ttc, p.price_base_type, p.tva_tx, p.duration, p.fk_price_expression\";\n\t\t(count($warehouseStatusArray)) ? $selectFieldsGrouped = \", sum(ps.reel) as stock\" : $selectFieldsGrouped = \", p.stock\";\n\n\t\t$sql = \"SELECT \";\n\t\t$sql.= $selectFields . $selectFieldsGrouped;\n\t\t//Price by customer\n\t\tif (! empty($conf->global->PRODUIT_CUSTOMER_PRICES) && !empty($socid))\n\t\t{\n\t\t\t$sql.=', pcp.rowid as idprodcustprice, pcp.price as custprice, pcp.price_ttc as custprice_ttc,';\n\t\t\t$sql.=' pcp.price_base_type as custprice_base_type, pcp.tva_tx as custtva_tx';\n\t\t\t$selectFields.= \", idprodcustprice, custprice, custprice_ttc, custprice_base_type, custtva_tx\";\n\t\t}\n\n\t\t// Multilang : we add translation\n\t\tif (! empty($conf->global->MAIN_MULTILANGS))\n\t\t{\n\t\t\t$sql.= \", pl.label as label_translated\";\n\t\t\t$selectFields.= \", label_translated\";\n\t\t}\n\t\t// Price by quantity\n\t\tif (! empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY))\n\t\t{\n\t\t\t$sql.= \", (SELECT pp.rowid FROM \".MAIN_DB_PREFIX.\"product_price as pp WHERE pp.fk_product = p.rowid\";\n\t\t\tif ($price_level >= 1 && !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES)) $sql.= \" AND price_level=\".$price_level;\n\t\t\t$sql.= \" ORDER BY date_price\";\n\t\t\t$sql.= \" DESC LIMIT 1) as price_rowid\";\n\t\t\t$sql.= \", (SELECT pp.price_by_qty FROM \".MAIN_DB_PREFIX.\"product_price as pp WHERE pp.fk_product = p.rowid\";\t// price_by_qty is 1 if some prices by qty exists in subtable\n\t\t\tif ($price_level >= 1 && !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES)) $sql.= \" AND price_level=\".$price_level;\n\t\t\t$sql.= \" ORDER BY date_price\";\n\t\t\t$sql.= \" DESC LIMIT 1) as price_by_qty\";\n\t\t\t$selectFields.= \", price_rowid, price_by_qty\";\n\t\t}\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"product as p\";\n\t\tif (count($warehouseStatusArray))\n\t\t{\n\t\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"product_stock as ps on ps.fk_product = p.rowid\";\n\t\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"entrepot as e on ps.fk_entrepot = e.rowid\";\n\t\t}\n\n\t\t//Price by customer\n\t\tif (! empty($conf->global->PRODUIT_CUSTOMER_PRICES) && !empty($socid)) {\n\t\t\t$sql.=\" LEFT JOIN  \".MAIN_DB_PREFIX.\"product_customer_price as pcp ON pcp.fk_soc=\".$socid.\" AND pcp.fk_product=p.rowid\";\n\t\t}\n\t\t// Multilang : we add translation\n\t\tif (! empty($conf->global->MAIN_MULTILANGS))\n\t\t{\n\t\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"product_lang as pl ON pl.fk_product = p.rowid AND pl.lang='\". $langs->getDefaultLang() .\"'\";\n\t\t}\n\n\t\tif (!empty($conf->global->PRODUIT_ATTRIBUTES_HIDECHILD)) {\n\t\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"product_attribute_combination pac ON pac.fk_product_child = p.rowid\";\n\t\t}\n\n\t\t$sql.= ' WHERE p.entity IN ('.getEntity('product').')';\n\t\tif (count($warehouseStatusArray))\n\t\t{\n\t\t\t$sql.= ' AND (p.fk_product_type = 1 OR e.statut IN ('.$this->db->escape(implode(',',$warehouseStatusArray)).'))';\n\t\t}\n\n\t\tif (!empty($conf->global->PRODUIT_ATTRIBUTES_HIDECHILD)) {\n\t\t\t$sql .= \" AND pac.rowid IS NULL\";\n\t\t}\n\n\t\tif ($finished == 0)\n\t\t{\n\t\t\t$sql.= \" AND p.finished = \".$finished;\n\t\t}\n\t\telseif ($finished == 1)\n\t\t{\n\t\t\t$sql.= \" AND p.finished = \".$finished;\n\t\t\tif ($status >= 0)  $sql.= \" AND p.tosell = \".$status;\n\t\t}\n\t\telseif ($status >= 0)\n\t\t{\n\t\t\t$sql.= \" AND p.tosell = \".$status;\n\t\t}\n\t\tif (strval($filtertype) != '') $sql.=\" AND p.fk_product_type=\".$filtertype;\n\t\t// Add criteria on ref/label\n\t\tif ($filterkey != '')\n\t\t{\n\t\t\t$sql.=' AND (';\n\t\t\t$prefix=empty($conf->global->PRODUCT_DONOTSEARCH_ANYWHERE)?'%':'';\t// Can use index if PRODUCT_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i=0;\n\t\t\tif (count($scrit) > 1) $sql.=\"(\";\n\t\t\tforeach ($scrit as $crit)\n\t\t\t{\n\t\t\t\tif ($i > 0) $sql.=\" AND \";\n\t\t\t\t$sql.=\"(p.ref LIKE '\".$db->escape($prefix.$crit).\"%' OR p.label LIKE '\".$db->escape($prefix.$crit).\"%'\";\n\t\t\t\tif (! empty($conf->global->MAIN_MULTILANGS)) $sql.=\" OR pl.label LIKE '\".$db->escape($prefix.$crit).\"%'\";\n\t\t\t\t$sql.=\")\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) $sql.=\")\";\n\t\t  \tif (! empty($conf->barcode->enabled)) $sql.= \" OR p.barcode LIKE '\".$db->escape($prefix.$filterkey).\"%'\";\n\t\t\t$sql.=')';\n\t\t}\n\t\tif (count($warehouseStatusArray))\n\t\t{\n\t\t\t$sql.= ' GROUP BY'.$selectFields;\n\t\t}\n\t\t$sql.= $db->order(\"p.ref\");\n\t\t$sql.= $db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\tdol_syslog(get_class($this).\"::select_produits_list search product\", LOG_DEBUG);\n\t\t$result=$this->db->query($sql);\n\t\tif ($result)\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/dynamic_price/class/price_parser.class.php';\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t$events=null;\n\n\t\t\tif (! $forcecombo)\n\t\t\t{\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT);\n\t\t\t}\n\n\t\t\t$out.='<select class=\"flat'.($morecss?' '.$morecss:'').'\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\n\t\t\t$textifempty='';\n\t\t\t// Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'.\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (! empty($conf->global->PRODUIT_USE_SEARCH_TO_SELECT))\n\t\t\t{\n\t\t\t\tif ($showempty && ! is_numeric($showempty)) $textifempty=$langs->trans($showempty);\n\t\t\t\telse $textifempty.=$langs->trans(\"All\");\n\t\t\t}\n\t\t\tif ($showempty) $out.='<option value=\"0\" selected>'.$textifempty.'</option>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($num && $i < $num)\n\t\t\t{\n\t\t\t\t$opt = '';\n\t\t\t\t$optJson = array();\n\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\tif (!empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY) && !empty($objp->price_by_qty) && $objp->price_by_qty == 1)\n\t\t\t\t{ // Price by quantity will return many prices for the same product\n\t\t\t\t\t$sql = \"SELECT rowid, quantity, price, unitprice, remise_percent, remise, price_base_type\";\n\t\t\t\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"product_price_by_qty\";\n\t\t\t\t\t$sql.= \" WHERE fk_product_price=\".$objp->price_rowid;\n\t\t\t\t\t$sql.= \" ORDER BY quantity ASC\";\n\n\t\t\t\t\tdol_syslog(get_class($this).\"::select_produits_list search price by qty\", LOG_DEBUG);\n\t\t\t\t\t$result2 = $this->db->query($sql);\n\t\t\t\t\tif ($result2)\n\t\t\t\t\t{\n\t\t\t\t\t\t$nb_prices = $this->db->num_rows($result2);\n\t\t\t\t\t\t$j = 0;\n\t\t\t\t\t\twhile ($nb_prices && $j < $nb_prices) {\n\t\t\t\t\t\t\t$objp2 = $this->db->fetch_object($result2);\n\n\t\t\t\t\t\t\t$objp->price_by_qty_rowid = $objp2->rowid;\n\t\t\t\t\t\t\t$objp->price_by_qty_price_base_type = $objp2->price_base_type;\n\t\t\t\t\t\t\t$objp->price_by_qty_quantity = $objp2->quantity;\n\t\t\t\t\t\t\t$objp->price_by_qty_unitprice = $objp2->unitprice;\n\t\t\t\t\t\t\t$objp->price_by_qty_remise_percent = $objp2->remise_percent;\n\t\t\t\t\t\t\t// For backward compatibility\n\t\t\t\t\t\t\t$objp->quantity = $objp2->quantity;\n\t\t\t\t\t\t\t$objp->price = $objp2->price;\n\t\t\t\t\t\t\t$objp->unitprice = $objp2->unitprice;\n\t\t\t\t\t\t\t$objp->remise_percent = $objp2->remise_percent;\n\t\t\t\t\t\t\t$objp->remise = $objp2->remise;\n\n\t\t\t\t\t\t\t$this->constructProductListOption($objp, $opt, $optJson, 0, $selected, $hidepriceinlabel);\n\n\t\t\t\t\t\t\t$j++;\n\n\t\t\t\t\t\t\t// Add new entry\n\t\t\t\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t\t\t\t$out.=$opt;\n\t\t\t\t\t\t\tarray_push($outarray, $optJson);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!empty($conf->dynamicprices->enabled) && !empty($objp->fk_price_expression)) {\n\t\t\t\t\t\t$price_product = new Product($this->db);\n\t\t\t\t\t\t$price_product->fetch($objp->rowid, '', '', 1);\n\t\t\t\t\t\t$priceparser = new PriceParser($this->db);\n\t\t\t\t\t\t$price_result = $priceparser->parseProduct($price_product);\n\t\t\t\t\t\tif ($price_result >= 0) {\n\t\t\t\t\t\t\t$objp->price = $price_result;\n\t\t\t\t\t\t\t$objp->unitprice = $price_result;\n\t\t\t\t\t\t\t//Calculate the VAT\n\t\t\t\t\t\t\t$objp->price_ttc = price2num($objp->price) * (1 + ($objp->tva_tx / 100));\n\t\t\t\t\t\t\t$objp->price_ttc = price2num($objp->price_ttc,'MU');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$this->constructProductListOption($objp, $opt, $optJson, $price_level, $selected, $hidepriceinlabel);\n\t\t\t\t\t// Add new entry\n\t\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t\t$out.=$opt;\n\t\t\t\t\tarray_push($outarray, $optJson);\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$out.='</select>';\n\n\t\t\t$this->db->free($result);\n\n\t\t\tif (empty($outputmode)) return $out;\n\t\t\treturn $outarray;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n\n\t/**\n\t * constructProductListOption\n\t *\n\t * @param \tresultset\t$objp\t\t\t    Resultset of fetch\n\t * @param \tstring\t\t$opt\t\t\t    Option (var used for returned value in string option format)\n\t * @param \tstring\t\t$optJson\t\t    Option (var used for returned value in json format)\n\t * @param \tint\t\t\t$price_level\t    Price level\n\t * @param \tstring\t\t$selected\t\t    Preselected value\n\t * @param   int         $hidepriceinlabel   Hide price in label\n\t * @return\tvoid\n\t */\n\tprivate function constructProductListOption(&$objp, &$opt, &$optJson, $price_level, $selected, $hidepriceinlabel=0)\n\t{\n\t\tglobal $langs,$conf,$user,$db;\n\n\t\t$outkey='';\n\t\t$outval='';\n\t\t$outref='';\n\t\t$outlabel='';\n\t\t$outdesc='';\n\t\t$outbarcode='';\n\t\t$outtype='';\n\t\t$outprice_ht='';\n\t\t$outprice_ttc='';\n\t\t$outpricebasetype='';\n\t\t$outtva_tx='';\n\t\t$outqty=1;\n\t\t$outdiscount=0;\n\n\t\t$maxlengtharticle=(empty($conf->global->PRODUCT_MAX_LENGTH_COMBO)?48:$conf->global->PRODUCT_MAX_LENGTH_COMBO);\n\n\t\t$label=$objp->label;\n\t\tif (! empty($objp->label_translated)) $label=$objp->label_translated;\n\t\tif (! empty($filterkey) && $filterkey != '') $label=preg_replace('/('.preg_quote($filterkey).')/i','<strong>$1</strong>',$label,1);\n\n\t\t$outkey=$objp->rowid;\n\t\t$outref=$objp->ref;\n\t\t$outlabel=$objp->label;\n\t\t$outdesc=$objp->description;\n\t\t$outbarcode=$objp->barcode;\n\n\t\t$outtype=$objp->fk_product_type;\n\t\t$outdurationvalue=$outtype == Product::TYPE_SERVICE?substr($objp->duration,0,dol_strlen($objp->duration)-1):'';\n\t\t$outdurationunit=$outtype == Product::TYPE_SERVICE?substr($objp->duration,-1):'';\n\n\t\t$opt = '<option value=\"'.$objp->rowid.'\"';\n\t\t$opt.= ($objp->rowid == $selected)?' selected':'';\n\t\tif (!empty($objp->price_by_qty_rowid) && $objp->price_by_qty_rowid > 0)\n\t\t{\n\t\t\t$opt.= ' pbq=\"'.$objp->price_by_qty_rowid.'\" data-pbq=\"'.$objp->price_by_qty_rowid.'\" data-pbqqty=\"'.$objp->price_by_qty_quantity.'\" data-pbqpercent=\"'.$objp->price_by_qty_remise_percent.'\"';\n\t\t}\n\t\tif (! empty($conf->stock->enabled) && $objp->fk_product_type == 0 && isset($objp->stock))\n\t\t{\n\t\t\tif ($objp->stock > 0) $opt.= ' class=\"product_line_stock_ok\"';\n\t\t\telse if ($objp->stock <= 0) $opt.= ' class=\"product_line_stock_too_low\"';\n\t\t}\n\t\t$opt.= '>';\n\t\t$opt.= $objp->ref;\n\t\tif ($outbarcode) $opt.=' ('.$outbarcode.')';\n\t\t$opt.=' - '.dol_trunc($label,$maxlengtharticle);\n\n\t\t$objRef = $objp->ref;\n\t\tif (! empty($filterkey) && $filterkey != '') $objRef=preg_replace('/('.preg_quote($filterkey).')/i','<strong>$1</strong>',$objRef,1);\n\t\t$outval.=$objRef;\n\t\tif ($outbarcode) $outval.=' ('.$outbarcode.')';\n\t\t$outval.=' - '.dol_trunc($label,$maxlengtharticle);\n\n\t\t$found=0;\n\n\t\t// Multiprice\n\t\tif (empty($hidepriceinlabel) && $price_level >= 1 && $conf->global->PRODUIT_MULTIPRICES)\t\t// If we need a particular price level (from 1 to 6)\n\t\t{\n\t\t\t$sql = \"SELECT price, price_ttc, price_base_type, tva_tx\";\n\t\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"product_price\";\n\t\t\t$sql.= \" WHERE fk_product='\".$objp->rowid.\"'\";\n\t\t\t$sql.= \" AND entity IN (\".getEntity('productprice').\")\";\n\t\t\t$sql.= \" AND price_level=\".$price_level;\n\t\t\t$sql.= \" ORDER BY date_price DESC, rowid DESC\"; // Warning DESC must be both on date_price and rowid.\n\t\t\t$sql.= \" LIMIT 1\";\n\n\t\t\tdol_syslog(get_class($this).'::constructProductListOption search price for level '.$price_level.'', LOG_DEBUG);\n\t\t\t$result2 = $this->db->query($sql);\n\t\t\tif ($result2)\n\t\t\t{\n\t\t\t\t$objp2 = $this->db->fetch_object($result2);\n\t\t\t\tif ($objp2)\n\t\t\t\t{\n\t\t\t\t\t$found=1;\n\t\t\t\t\tif ($objp2->price_base_type == 'HT')\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= ' - '.price($objp2->price,1,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"HT\");\n\t\t\t\t\t\t$outval.= ' - '.price($objp2->price,0,$langs,0,0,-1,$conf->currency).' '.$langs->transnoentities(\"HT\");\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= ' - '.price($objp2->price_ttc,1,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"TTC\");\n\t\t\t\t\t\t$outval.= ' - '.price($objp2->price_ttc,0,$langs,0,0,-1,$conf->currency).' '.$langs->transnoentities(\"TTC\");\n\t\t\t\t\t}\n\t\t\t\t\t$outprice_ht=price($objp2->price);\n\t\t\t\t\t$outprice_ttc=price($objp2->price_ttc);\n\t\t\t\t\t$outpricebasetype=$objp2->price_base_type;\n\t\t\t\t\t$outtva_tx=$objp2->tva_tx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdol_print_error($this->db);\n\t\t\t}\n\t\t}\n\n\t\t// Price by quantity\n\t\tif (empty($hidepriceinlabel) && !empty($objp->quantity) && $objp->quantity >= 1 && ! empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY))\n\t\t{\n\t\t\t$found = 1;\n\t\t\t$outqty=$objp->quantity;\n\t\t\t$outdiscount=$objp->remise_percent;\n\t\t\tif ($objp->quantity == 1)\n\t\t\t{\n\t\t\t\t$opt.= ' - '.price($objp->unitprice,1,$langs,0,0,-1,$conf->currency).\"/\";\n\t\t\t\t$outval.= ' - '.price($objp->unitprice,0,$langs,0,0,-1,$conf->currency).\"/\";\n\t\t\t\t$opt.= $langs->trans(\"Unit\");\t// Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t$outval.=$langs->transnoentities(\"Unit\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$opt.= ' - '.price($objp->price,1,$langs,0,0,-1,$conf->currency).\"/\".$objp->quantity;\n\t\t\t\t$outval.= ' - '.price($objp->price,0,$langs,0,0,-1,$conf->currency).\"/\".$objp->quantity;\n\t\t\t\t$opt.= $langs->trans(\"Units\");\t// Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t$outval.=$langs->transnoentities(\"Units\");\n\t\t\t}\n\n\t\t\t$outprice_ht=price($objp->unitprice);\n\t\t\t$outprice_ttc=price($objp->unitprice * (1 + ($objp->tva_tx / 100)));\n\t\t\t$outpricebasetype=$objp->price_base_type;\n\t\t\t$outtva_tx=$objp->tva_tx;\n\t\t}\n\t\tif (empty($hidepriceinlabel) && !empty($objp->quantity) && $objp->quantity >= 1)\n\t\t{\n\t\t\t$opt.=\" (\".price($objp->unitprice,1,$langs,0,0,-1,$conf->currency).\"/\".$langs->trans(\"Unit\").\")\";\t// Do not use strtolower because it breaks utf8 encoding\n\t\t\t$outval.=\" (\".price($objp->unitprice,0,$langs,0,0,-1,$conf->currency).\"/\".$langs->transnoentities(\"Unit\").\")\";\t// Do not use strtolower because it breaks utf8 encoding\n\t\t}\n\t\tif (empty($hidepriceinlabel) && !empty($objp->remise_percent) && $objp->remise_percent >= 1)\n\t\t{\n\t\t\t$opt.=\" - \".$langs->trans(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t\t$outval.=\" - \".$langs->transnoentities(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t}\n\n\t\t// Price by customer\n\t\tif (empty($hidepriceinlabel) && !empty($conf->global->PRODUIT_CUSTOMER_PRICES))\n\t\t{\n\t\t\tif (!empty($objp->idprodcustprice))\n\t\t\t{\n\t\t\t\t$found = 1;\n\n\t\t\t\tif ($objp->custprice_base_type == 'HT')\n\t\t\t\t{\n\t\t\t\t\t$opt.= ' - '.price($objp->custprice,1,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"HT\");\n\t\t\t\t\t$outval.= ' - '.price($objp->custprice,0,$langs,0,0,-1,$conf->currency).' '.$langs->transnoentities(\"HT\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$opt.= ' - '.price($objp->custprice_ttc,1,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"TTC\");\n\t\t\t\t\t$outval.= ' - '.price($objp->custprice_ttc,0,$langs,0,0,-1,$conf->currency).' '.$langs->transnoentities(\"TTC\");\n\t\t\t\t}\n\n\t\t\t\t$outprice_ht=price($objp->custprice);\n\t\t\t\t$outprice_ttc=price($objp->custprice_ttc);\n\t\t\t\t$outpricebasetype=$objp->custprice_base_type;\n\t\t\t\t$outtva_tx=$objp->custtva_tx;\n\t\t\t}\n\t\t}\n\n\t\t// If level no defined or multiprice not found, we used the default price\n\t\tif (empty($hidepriceinlabel) && ! $found)\n\t\t{\n\t\t\tif ($objp->price_base_type == 'HT')\n\t\t\t{\n\t\t\t\t$opt.= ' - '.price($objp->price,1,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"HT\");\n\t\t\t\t$outval.= ' - '.price($objp->price,0,$langs,0,0,-1,$conf->currency).' '.$langs->transnoentities(\"HT\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$opt.= ' - '.price($objp->price_ttc,1,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"TTC\");\n\t\t\t\t$outval.= ' - '.price($objp->price_ttc,0,$langs,0,0,-1,$conf->currency).' '.$langs->transnoentities(\"TTC\");\n\t\t\t}\n\t\t\t$outprice_ht=price($objp->price);\n\t\t\t$outprice_ttc=price($objp->price_ttc);\n\t\t\t$outpricebasetype=$objp->price_base_type;\n\t\t\t$outtva_tx=$objp->tva_tx;\n\t\t}\n\n\t\tif (! empty($conf->stock->enabled) && isset($objp->stock) && $objp->fk_product_type == 0)\n\t\t{\n\t\t\t$opt.= ' - '.$langs->trans(\"Stock\").':'.$objp->stock;\n\n\t\t\tif ($objp->stock > 0) {\n\t\t\t\t$outval.= ' - <span class=\"product_line_stock_ok\">'.$langs->transnoentities(\"Stock\").':'.$objp->stock.'</span>';\n\t\t\t}elseif ($objp->stock <= 0) {\n\t\t\t\t$outval.= ' - <span class=\"product_line_stock_too_low\">'.$langs->transnoentities(\"Stock\").':'.$objp->stock.'</span>';\n\t\t\t}\n\t\t}\n\n\t\tif ($outdurationvalue && $outdurationunit)\n\t\t{\n\t\t\t$da=array(\"h\"=>$langs->trans(\"Hour\"),\"d\"=>$langs->trans(\"Day\"),\"w\"=>$langs->trans(\"Week\"),\"m\"=>$langs->trans(\"Month\"),\"y\"=>$langs->trans(\"Year\"));\n\t\t\tif (isset($da[$outdurationunit]))\n\t\t\t{\n\t\t\t\t$key = $da[$outdurationunit].($outdurationvalue > 1?'s':'');\n\t\t\t\t$opt.= ' - '.$outdurationvalue.' '.$langs->trans($key);\n\t\t\t\t$outval.=' - '.$outdurationvalue.' '.$langs->transnoentities($key);\n\t\t\t}\n\t\t}\n\n\t\t$opt.= \"</option>\\n\";\n\t\t$optJson = array('key'=>$outkey, 'value'=>$outref, 'label'=>$outval, 'label2'=>$outlabel, 'desc'=>$outdesc, 'type'=>$outtype, 'price_ht'=>$outprice_ht, 'price_ttc'=>$outprice_ttc, 'pricebasetype'=>$outpricebasetype, 'tva_tx'=>$outtva_tx, 'qty'=>$outqty, 'discount'=>$outdiscount, 'duration_value'=>$outdurationvalue, 'duration_unit'=>$outdurationunit);\n\t}\n\n\t/**\n\t *\tReturn list of products for customer (in Ajax if Ajax activated or go to select_produits_fournisseurs_list)\n\t *\n\t *\t@param\tint\t\t$socid\t\t\tId third party\n\t *\t@param  string\t$selected       Preselected product\n\t *\t@param  string\t$htmlname       Name of HTML Select\n\t *  @param\tstring\t$filtertype     Filter on product type (''=nofilter, 0=product, 1=service)\n\t *\t@param  string\t$filtre\t\t\tFor a SQL filter\n\t *\t@param\tarray\t$ajaxoptions\tOptions for ajax_autocompleter\n\t *  @param\tint\t\t$hidelabel\t\tHide label (0=no, 1=yes)\n\t *  @param  int     $alsoproductwithnosupplierprice    1=Add also product without supplier prices\n\t *\t@return\tvoid\n\t */\n\tfunction select_produits_fournisseurs($socid, $selected='', $htmlname='productid', $filtertype='', $filtre='', $ajaxoptions=array(), $hidelabel=0, $alsoproductwithnosupplierprice=0)\n\t{\n\t\tglobal $langs,$conf;\n\t\tglobal $price_level, $status, $finished;\n\n\t\t$selected_input_value='';\n\t\tif (! empty($conf->use_javascript_ajax) && ! empty($conf->global->PRODUIT_USE_SEARCH_TO_SELECT))\n\t\t{\n\t\t\tif ($selected > 0)\n\t\t\t{\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t\t\t\t$producttmpselect = new Product($this->db);\n\t\t\t\t$producttmpselect->fetch($selected);\n\t\t\t\t$selected_input_value=$producttmpselect->ref;\n\t\t\t\tunset($producttmpselect);\n\t\t\t}\n\n\t\t\t// mode=2 means suppliers products\n\t\t\t$urloption=($socid > 0?'socid='.$socid.'&':'').'htmlname='.$htmlname.'&outjson=1&price_level='.$price_level.'&type='.$filtertype.'&mode=2&status='.$status.'&finished='.$finished.'&alsoproductwithnosupplierprice='.$alsoproductwithnosupplierprice;\n\t\t\tprint ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/product/ajax/products.php', $urloption, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT, 0, $ajaxoptions);\n\t\t\tprint ($hidelabel?'':$langs->trans(\"RefOrLabel\").' : ').'<input type=\"text\" size=\"20\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $this->select_produits_fournisseurs_list($socid,$selected,$htmlname,$filtertype,$filtre,'',-1,0,0,$alsoproductwithnosupplierprice);\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn list of suppliers products\n\t *\n\t *\t@param\tint\t\t$socid   \t\tId societe fournisseur (0 pour aucun filtre)\n\t *\t@param  int\t\t$selected       Produit pre-selectionne\n\t *\t@param  string\t$htmlname       Nom de la zone select\n\t *  @param\tstring\t$filtertype     Filter on product type (''=nofilter, 0=product, 1=service)\n\t *\t@param  string\t$filtre         Pour filtre sql\n\t *\t@param  string\t$filterkey      Filtre des produits\n\t *  @param  int\t\t$statut         -1=Return all products, 0=Products not on sell, 1=Products on sell (not used here, a filter on tobuy is already hard coded in request)\n\t *  @param  int\t\t$outputmode     0=HTML select string, 1=Array\n\t *  @param  int     $limit          Limit of line number\n\t *  @param  int     $alsoproductwithnosupplierprice    1=Add also product without supplier prices\n\t *  @return array           \t\tArray of keys for json\n\t */\n\tfunction select_produits_fournisseurs_list($socid,$selected='',$htmlname='productid',$filtertype='',$filtre='',$filterkey='',$statut=-1,$outputmode=0,$limit=100,$alsoproductwithnosupplierprice=0)\n\t{\n\t\tglobal $langs,$conf,$db;\n\n\t\t$out='';\n\t\t$outarray=array();\n\n\t\t$langs->load('stocks');\n\n\t\t$sql = \"SELECT p.rowid, p.label, p.ref, p.price, p.duration, p.fk_product_type,\";\n\t\t$sql.= \" pfp.ref_fourn, pfp.rowid as idprodfournprice, pfp.price as fprice, pfp.quantity, pfp.remise_percent, pfp.remise, pfp.unitprice,\";\n\t\t$sql.= \" pfp.fk_supplier_price_expression, pfp.fk_product, pfp.tva_tx, pfp.fk_soc, s.nom as name,\";\n\t\t$sql.= \" pfp.supplier_reputation\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"product as p\";\n\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"product_fournisseur_price as pfp ON p.rowid = pfp.fk_product\";\n\t\tif ($socid) $sql.= \" AND pfp.fk_soc = \".$socid;\n\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"societe as s ON pfp.fk_soc = s.rowid\";\n\t\t$sql.= \" WHERE p.entity IN (\".getEntity('product').\")\";\n\t\t$sql.= \" AND p.tobuy = 1\";\n\t\tif (strval($filtertype) != '') $sql.=\" AND p.fk_product_type=\".$this->db->escape($filtertype);\n\t\tif (! empty($filtre)) $sql.=\" \".$filtre;\n\t\t// Add criteria on ref/label\n\t\tif ($filterkey != '')\n\t\t{\n\t\t\t$sql.=' AND (';\n\t\t\t$prefix=empty($conf->global->PRODUCT_DONOTSEARCH_ANYWHERE)?'%':'';\t// Can use index if PRODUCT_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i=0;\n\t\t\tif (count($scrit) > 1) $sql.=\"(\";\n\t\t\tforeach ($scrit as $crit)\n\t\t\t{\n\t\t\t\tif ($i > 0) $sql.=\" AND \";\n\t\t\t\t$sql.=\"(pfp.ref_fourn LIKE '\".$this->db->escape($prefix.$crit).\"%' OR p.ref LIKE '\".$this->db->escape($prefix.$crit).\"%' OR p.label LIKE '\".$this->db->escape($prefix.$crit).\"%')\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) $sql.=\")\";\n\t\t\tif (! empty($conf->barcode->enabled)) $sql.= \" OR p.barcode LIKE '\".$this->db->escape($prefix.$filterkey).\"%'\";\n\t\t\t$sql.=')';\n\t\t}\n\t\t$sql.= \" ORDER BY pfp.ref_fourn DESC, pfp.quantity ASC\";\n\t\t$sql.= $db->plimit($limit, 0);\n\n\t\t// Build output string\n\n\t\tdol_syslog(get_class($this).\"::select_produits_fournisseurs_list\", LOG_DEBUG);\n\t\t$result=$this->db->query($sql);\n\t\tif ($result)\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/dynamic_price/class/price_parser.class.php';\n\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t//$out.='<select class=\"flat\" id=\"select'.$htmlname.'\" name=\"'.$htmlname.'\">';\t// remove select to have id same with combo and ajax\n\t\t\t$out.='<select class=\"flat maxwidthonsmartphone\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t\tif (! $selected) $out.='<option value=\"0\" selected>&nbsp;</option>';\n\t\t\telse $out.='<option value=\"0\">&nbsp;</option>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\t$outkey=$objp->idprodfournprice;                                                    // id in table of price\n\t\t\t\tif (! $outkey && $alsoproductwithnosupplierprice) $outkey='idprod_'.$objp->rowid;   // id of product\n\n\t\t\t\t$outref=$objp->ref;\n\t\t\t\t$outval='';\n\t\t\t\t$outqty=1;\n\t\t\t\t$outdiscount=0;\n\t\t\t\t$outtype=$objp->fk_product_type;\n\t\t\t\t$outdurationvalue=$outtype == Product::TYPE_SERVICE?substr($objp->duration,0,dol_strlen($objp->duration)-1):'';\n\t\t\t\t$outdurationunit=$outtype == Product::TYPE_SERVICE?substr($objp->duration,-1):'';\n\n\t\t\t\t$opt = '<option value=\"'.$outkey.'\"';\n\t\t\t\tif ($selected && $selected == $objp->idprodfournprice) $opt.= ' selected';\n\t\t\t\tif (empty($objp->idprodfournprice) && empty($alsoproductwithnosupplierprice)) $opt.=' disabled';\n\t\t\t\t$opt.= '>';\n\n\t\t\t\t$objRef = $objp->ref;\n\t\t\t\tif ($filterkey && $filterkey != '') $objRef=preg_replace('/('.preg_quote($filterkey).')/i','<strong>$1</strong>',$objRef,1);\n\t\t\t\t$objRefFourn = $objp->ref_fourn;\n\t\t\t\tif ($filterkey && $filterkey != '') $objRefFourn=preg_replace('/('.preg_quote($filterkey).')/i','<strong>$1</strong>',$objRefFourn,1);\n\t\t\t\t$label = $objp->label;\n\t\t\t\tif ($filterkey && $filterkey != '') $label=preg_replace('/('.preg_quote($filterkey).')/i','<strong>$1</strong>',$label,1);\n\n\t\t\t\t$opt.=$objp->ref;\n\t\t\t\tif (! empty($objp->idprodfournprice) && ($objp->ref != $objp->ref_fourn))\n\t\t\t\t\t$opt.=' ('.$objp->ref_fourn.')';\n\t\t\t\t$opt.=' - ';\n\t\t\t\t$outval.=$objRef;\n\t\t\t\tif (! empty($objp->idprodfournprice) && ($objp->ref != $objp->ref_fourn))\n\t\t\t\t\t$outval.=' ('.$objRefFourn.')';\n\t\t\t\t$outval.=' - ';\n\t\t\t\t$opt.=dol_trunc($label, 72).' - ';\n\t\t\t\t$outval.=dol_trunc($label, 72).' - ';\n\n\t\t\t\tif (! empty($objp->idprodfournprice))\n\t\t\t\t{\n\t\t\t\t\t$outqty=$objp->quantity;\n\t\t\t\t\t$outdiscount=$objp->remise_percent;\n\t\t\t\t\tif (!empty($conf->dynamicprices->enabled) && !empty($objp->fk_supplier_price_expression)) {\n\t\t\t\t\t\t$prod_supplier = new ProductFournisseur($this->db);\n\t\t\t\t\t\t$prod_supplier->product_fourn_price_id = $objp->idprodfournprice;\n\t\t\t\t\t\t$prod_supplier->id = $objp->fk_product;\n\t\t\t\t\t\t$prod_supplier->fourn_qty = $objp->quantity;\n\t\t\t\t\t\t$prod_supplier->fourn_tva_tx = $objp->tva_tx;\n\t\t\t\t\t\t$prod_supplier->fk_supplier_price_expression = $objp->fk_supplier_price_expression;\n\t\t\t\t\t\t$priceparser = new PriceParser($this->db);\n\t\t\t\t\t\t$price_result = $priceparser->parseProductSupplier($prod_supplier);\n\t\t\t\t\t\tif ($price_result >= 0) {\n\t\t\t\t\t\t\t$objp->fprice = $price_result;\n\t\t\t\t\t\t\tif ($objp->quantity >= 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$objp->unitprice = $objp->fprice / $objp->quantity;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->quantity == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= price($objp->fprice,1,$langs,0,0,-1,$conf->currency).\"/\";\n\t\t\t\t\t\t$outval.= price($objp->fprice,0,$langs,0,0,-1,$conf->currency).\"/\";\n\t\t\t\t\t\t$opt.= $langs->trans(\"Unit\");\t// Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t\t$outval.=$langs->transnoentities(\"Unit\");\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= price($objp->fprice,1,$langs,0,0,-1,$conf->currency).\"/\".$objp->quantity;\n\t\t\t\t\t\t$outval.= price($objp->fprice,0,$langs,0,0,-1,$conf->currency).\"/\".$objp->quantity;\n\t\t\t\t\t\t$opt.= ' '.$langs->trans(\"Units\");\t// Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t\t$outval.= ' '.$langs->transnoentities(\"Units\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($objp->quantity >= 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.=\" (\".price($objp->unitprice,1,$langs,0,0,-1,$conf->currency).\"/\".$langs->trans(\"Unit\").\")\";\t// Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t\t$outval.=\" (\".price($objp->unitprice,0,$langs,0,0,-1,$conf->currency).\"/\".$langs->transnoentities(\"Unit\").\")\";\t// Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->remise_percent >= 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.=\" - \".$langs->trans(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t\t\t\t\t$outval.=\" - \".$langs->transnoentities(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->duration)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt .= \" - \".$objp->duration;\n\t\t\t\t\t\t$outval.=\" - \".$objp->duration;\n\t\t\t\t\t}\n\t\t\t\t\tif (! $socid)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt .= \" - \".dol_trunc($objp->name,8);\n\t\t\t\t\t\t$outval.=\" - \".dol_trunc($objp->name,8);\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->supplier_reputation)\n\t\t\t\t\t{\n\t\t\t\t\t\t//TODO dictionary\n\t\t\t\t\t\t$reputations=array(''=>$langs->trans('Standard'),'FAVORITE'=>$langs->trans('Favorite'),'NOTTHGOOD'=>$langs->trans('NotTheGoodQualitySupplier'), 'DONOTORDER'=>$langs->trans('DoNotOrderThisProductToThisSupplier'));\n\n\t\t\t\t\t\t$opt .= \" - \".$reputations[$objp->supplier_reputation];\n\t\t\t\t\t\t$outval.=\" - \".$reputations[$objp->supplier_reputation];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (empty($alsoproductwithnosupplierprice))     // No supplier price defined for couple product/supplier\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= $langs->trans(\"NoPriceDefinedForThisSupplier\");\n\t\t\t\t\t\t$outval.=$langs->transnoentities(\"NoPriceDefinedForThisSupplier\");\n\t\t\t\t\t}\n\t\t\t\t\telse                                            // No supplier price defined for product, even on other suppliers\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= $langs->trans(\"NoPriceDefinedForThisSupplier\");\n\t\t\t\t\t\t$outval.=$langs->transnoentities(\"NoPriceDefinedForThisSupplier\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$opt .= \"</option>\\n\";\n\n\n\t\t\t\t// Add new entry\n\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t$out.=$opt;\n\t\t\t\tarray_push($outarray, array('key'=>$outkey, 'value'=>$outref, 'label'=>$outval, 'qty'=>$outqty, 'discount'=>$outdiscount, 'type'=>$outtype, 'duration_value'=>$outdurationvalue, 'duration_unit'=>$outdurationunit, 'disabled'=>(empty($objp->idprodfournprice)?true:false)));\n\t\t\t\t// Exemple of var_dump $outarray\n\t\t\t\t// array(1) {[0]=>array(6) {[key\"]=>string(1) \"2\" [\"value\"]=>string(3) \"ppp\"\n\t\t\t\t//           [\"label\"]=>string(76) \"ppp (<strong>f</strong>ff2) - ppp - 20,00 Euros/1unit\u00e9 (20,00 Euros/unit\u00e9)\"\n\t\t\t\t//      \t [\"qty\"]=>string(1) \"1\" [\"discount\"]=>string(1) \"0\" [\"disabled\"]=>bool(false)\n\t\t\t\t//}\n\t\t\t\t//var_dump($outval); var_dump(utf8_check($outval)); var_dump(json_encode($outval));\n\t\t\t\t//$outval=array('label'=>'ppp (<strong>f</strong>ff2) - ppp - 20,00 Euros/ Unit\u00e9 (20,00 Euros/unit\u00e9)');\n\t\t\t\t//var_dump($outval); var_dump(utf8_check($outval)); var_dump(json_encode($outval));\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\t$out.='</select>';\n\n\t\t\t$this->db->free($result);\n\n\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t$out.=ajax_combobox($htmlname);\n\n\t\t\tif (empty($outputmode)) return $out;\n\t\t\treturn $outarray;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn list of suppliers prices for a product\n\t *\n\t *  @param\t    int\t\t$productid       \tId of product\n\t *  @param      string\t$htmlname        \tName of HTML field\n\t *  @param      int\t\t$selected_supplier  Pre-selected supplier if more than 1 result\n\t *  @return\t    void\n\t */\n\tfunction select_product_fourn_price($productid, $htmlname='productfournpriceid', $selected_supplier='')\n\t{\n\t\tglobal $langs,$conf;\n\n\t\t$langs->load('stocks');\n\n\t\t$sql = \"SELECT p.rowid, p.label, p.ref, p.price, p.duration, pfp.fk_soc,\";\n\t\t$sql.= \" pfp.ref_fourn, pfp.rowid as idprodfournprice, pfp.price as fprice, pfp.quantity, pfp.unitprice,\";\n\t\t$sql.= \" pfp.fk_supplier_price_expression, pfp.fk_product, pfp.tva_tx, s.nom as name\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"product as p\";\n\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"product_fournisseur_price as pfp ON p.rowid = pfp.fk_product\";\n\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"societe as s ON pfp.fk_soc = s.rowid\";\n\t\t$sql.= \" WHERE pfp.entity IN (\".getEntity('productprice').\")\";\n\t\t$sql.= \" AND p.tobuy = 1\";\n\t\t$sql.= \" AND s.fournisseur = 1\";\n\t\t$sql.= \" AND p.rowid = \".$productid;\n\t\t$sql.= \" ORDER BY s.nom, pfp.ref_fourn DESC\";\n\n\t\tdol_syslog(get_class($this).\"::select_product_fourn_price\", LOG_DEBUG);\n\t\t$result=$this->db->query($sql);\n\n\t\tif ($result)\n\t\t{\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t$form = '<select class=\"flat\" name=\"'.$htmlname.'\">';\n\n\t\t\tif (! $num)\n\t\t\t{\n\t\t\t\t$form.= '<option value=\"0\">-- '.$langs->trans(\"NoSupplierPriceDefinedForThisProduct\").' --</option>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/dynamic_price/class/price_parser.class.php';\n\t\t\t\t$form.= '<option value=\"0\">&nbsp;</option>';\n\n\t\t\t\t$i = 0;\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\t\t$opt = '<option value=\"'.$objp->idprodfournprice.'\"';\n\t\t\t\t\t//if there is only one supplier, preselect it\n\t\t\t\t\tif($num == 1 || ($selected_supplier > 0 && $objp->fk_soc == $selected_supplier)) {\n\t\t\t\t\t\t$opt .= ' selected';\n\t\t\t\t\t}\n\t\t\t\t\t$opt.= '>'.$objp->name.' - '.$objp->ref_fourn.' - ';\n\n\t\t\t\t\tif (!empty($conf->dynamicprices->enabled) && !empty($objp->fk_supplier_price_expression)) {\n\t\t\t\t\t\t$prod_supplier = new ProductFournisseur($this->db);\n\t\t\t\t\t\t$prod_supplier->product_fourn_price_id = $objp->idprodfournprice;\n\t\t\t\t\t\t$prod_supplier->id = $productid;\n\t\t\t\t\t\t$prod_supplier->fourn_qty = $objp->quantity;\n\t\t\t\t\t\t$prod_supplier->fourn_tva_tx = $objp->tva_tx;\n\t\t\t\t\t\t$prod_supplier->fk_supplier_price_expression = $objp->fk_supplier_price_expression;\n\t\t\t\t\t\t$priceparser = new PriceParser($this->db);\n\t\t\t\t\t\t$price_result = $priceparser->parseProductSupplier($prod_supplier);\n\t\t\t\t\t\tif ($price_result >= 0) {\n\t\t\t\t\t\t\t$objp->fprice = $price_result;\n\t\t\t\t\t\t\tif ($objp->quantity >= 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$objp->unitprice = $objp->fprice / $objp->quantity;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->quantity == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= price($objp->fprice,1,$langs,0,0,-1,$conf->currency).\"/\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$opt.= $objp->quantity.' ';\n\n\t\t\t\t\tif ($objp->quantity == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= $langs->trans(\"Unit\");\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= $langs->trans(\"Units\");\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->quantity > 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.=\" - \";\n\t\t\t\t\t\t$opt.= price($objp->unitprice,1,$langs,0,0,-1,$conf->currency).\"/\".$langs->trans(\"Unit\");\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->duration) $opt .= \" - \".$objp->duration;\n\t\t\t\t\t$opt .= \"</option>\\n\";\n\n\t\t\t\t\t$form.= $opt;\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$form.= '</select>';\n\t\t\t$this->db->free($result);\n\t\t\treturn $form;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *    Return list of delivery address\n\t *\n\t *    @param    string\t$selected          \tId contact pre-selectionn\n\t *    @param    int\t\t$socid\t\t\t\tId of company\n\t *    @param    string\t$htmlname          \tName of HTML field\n\t *    @param    int\t\t$showempty         \tAdd an empty field\n\t *    @return\tinteger|null\n\t */\n\tfunction select_address($selected, $socid, $htmlname='address_id',$showempty=0)\n\t{\n\t\t// On recherche les utilisateurs\n\t\t$sql = \"SELECT a.rowid, a.label\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX .\"societe_address as a\";\n\t\t$sql .= \" WHERE a.fk_soc = \".$socid;\n\t\t$sql .= \" ORDER BY a.label ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_address\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\tprint '<select class=\"flat\" name=\"'.$htmlname.'\">';\n\t\t\tif ($showempty) print '<option value=\"0\">&nbsp;</option>';\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t\tif ($selected && $selected == $obj->rowid)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>'.$obj->label.'</option>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">'.$obj->label.'</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '</select>';\n\t\t\treturn $num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\n\t/**\n\t *      Load into cache list of payment terms\n\t *\n\t *      @return     int             Nb of lines loaded, <0 if KO\n\t */\n\tfunction load_cache_conditions_paiements()\n\t{\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_conditions_paiements);\n\t\tif ($num > 0) return 0;    // Cache already loaded\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$sql = \"SELECT rowid, code, libelle as label\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.'c_payment_term';\n\t\t$sql.= \" WHERE entity = \" . getEntity('c_payment_term');\n\t\t$sql.= \" AND active > 0\";\n\t\t$sql.= \" ORDER BY sortorder\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label=($langs->trans(\"PaymentConditionShort\".$obj->code)!=(\"PaymentConditionShort\".$obj->code)?$langs->trans(\"PaymentConditionShort\".$obj->code):($obj->label!='-'?$obj->label:''));\n\t\t\t\t$this->cache_conditions_paiements[$obj->rowid]['code'] =$obj->code;\n\t\t\t\t$this->cache_conditions_paiements[$obj->rowid]['label']=$label;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t//$this->cache_conditions_paiements=dol_sort_array($this->cache_conditions_paiements, 'label', 'asc', 0, 0, 1);\t\t// We use the field sortorder of table\n\n\t\t\treturn $num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *      Charge dans cache la liste des d\u00e9lais de livraison possibles\n\t *\n\t *      @return     int             Nb of lines loaded, <0 if KO\n\t */\n\tfunction load_cache_availability()\n\t{\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_availability);\n\t\tif ($num > 0) return 0;    // Cache already loaded\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$langs->load('propal');\n\n\t\t$sql = \"SELECT rowid, code, label\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.'c_availability';\n\t\t$sql.= \" WHERE active > 0\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label=($langs->trans(\"AvailabilityType\".$obj->code)!=(\"AvailabilityType\".$obj->code)?$langs->trans(\"AvailabilityType\".$obj->code):($obj->label!='-'?$obj->label:''));\n\t\t\t\t$this->cache_availability[$obj->rowid]['code'] =$obj->code;\n\t\t\t\t$this->cache_availability[$obj->rowid]['label']=$label;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$this->cache_availability = dol_sort_array($this->cache_availability, 'label', 'asc', 0, 0, 1);\n\n\t\t\treturn $num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *      Retourne la liste des types de delais de livraison possibles\n\t *\n\t *      @param\tint\t\t$selected        Id du type de delais pre-selectionne\n\t *      @param  string\t$htmlname        Nom de la zone select\n\t *      @param  string\t$filtertype      To add a filter\n\t *\t\t@param\tint\t\t$addempty\t\tAdd empty entry\n\t *\t\t@return\tvoid\n\t */\n\tfunction selectAvailabilityDelay($selected='',$htmlname='availid',$filtertype='',$addempty=0)\n\t{\n\t\tglobal $langs,$user;\n\n\t\t$this->load_cache_availability();\n\n\t\tdol_syslog(__METHOD__.\" selected=\".$selected.\", htmlname=\".$htmlname, LOG_DEBUG);\n\n\t\tprint '<select class=\"flat\" name=\"'.$htmlname.'\">';\n\t\tif ($addempty) print '<option value=\"0\">&nbsp;</option>';\n\t\tforeach($this->cache_availability as $id => $arrayavailability)\n\t\t{\n\t\t\tif ($selected == $id)\n\t\t\t{\n\t\t\t\tprint '<option value=\"'.$id.'\" selected>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint '<option value=\"'.$id.'\">';\n\t\t\t}\n\t\t\tprint $arrayavailability['label'];\n\t\t\tprint '</option>';\n\t\t}\n\t\tprint '</select>';\n\t\tif ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t}\n\n\t/**\n\t *      Load into cache cache_demand_reason, array of input reasons\n\t *\n\t *      @return     int             Nb of lines loaded, <0 if KO\n\t */\n\tfunction loadCacheInputReason()\n\t{\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_demand_reason);\n\t\tif ($num > 0) return 0;    // Cache already loaded\n\n\t\t$sql = \"SELECT rowid, code, label\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.'c_input_reason';\n\t\t$sql.= \" WHERE active > 0\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\t$tmparray=array();\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label=($langs->trans(\"DemandReasonType\".$obj->code)!=(\"DemandReasonType\".$obj->code)?$langs->trans(\"DemandReasonType\".$obj->code):($obj->label!='-'?$obj->label:''));\n\t\t\t\t$tmparray[$obj->rowid]['id']   =$obj->rowid;\n\t\t\t\t$tmparray[$obj->rowid]['code'] =$obj->code;\n\t\t\t\t$tmparray[$obj->rowid]['label']=$label;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$this->cache_demand_reason=dol_sort_array($tmparray, 'label', 'asc', 0, 0, 1);\n\n\t\t\tunset($tmparray);\n\t\t\treturn $num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn list of input reason (events that triggered an object creation, like after sending an emailing, making an advert, ...)\n\t *  List found into table c_input_reason loaded by loadCacheInputReason\n\t *\n\t *  @param\tint\t\t$selected        Id or code of type origin to select by default\n\t *  @param  string\t$htmlname        Nom de la zone select\n\t *  @param  string\t$exclude         To exclude a code value (Example: SRC_PROP)\n\t *\t@param\tint\t\t$addempty\t\t Add an empty entry\n\t *\t@return\tvoid\n\t */\n\tfunction selectInputReason($selected='',$htmlname='demandreasonid',$exclude='',$addempty=0)\n\t{\n\t\tglobal $langs,$user;\n\n\t\t$this->loadCacheInputReason();\n\n\t\tprint '<select class=\"flat\" name=\"'.$htmlname.'\">';\n\t\tif ($addempty) print '<option value=\"0\"'.(empty($selected)?' selected':'').'>&nbsp;</option>';\n\t\tforeach($this->cache_demand_reason as $id => $arraydemandreason)\n\t\t{\n\t\t\tif ($arraydemandreason['code']==$exclude) continue;\n\n\t\t\tif ($selected && ($selected == $arraydemandreason['id'] || $selected == $arraydemandreason['code']))\n\t\t\t{\n\t\t\t\tprint '<option value=\"'.$arraydemandreason['id'].'\" selected>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint '<option value=\"'.$arraydemandreason['id'].'\">';\n\t\t\t}\n\t\t\tprint $arraydemandreason['label'];\n\t\t\tprint '</option>';\n\t\t}\n\t\tprint '</select>';\n\t\tif ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t}\n\n\t/**\n\t *      Charge dans cache la liste des types de paiements possibles\n\t *\n\t *      @return     int                 Nb of lines loaded, <0 if KO\n\t */\n\tfunction load_cache_types_paiements()\n\t{\n\t\tglobal $langs;\n\n\t\t$num=count($this->cache_types_paiements);\n\t\tif ($num > 0) return $num;    // Cache already loaded\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$this->cache_types_paiements = array();\n\n\t\t$sql = \"SELECT id, code, libelle as label, type, active\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_paiement\";\n\t\t$sql.= \" WHERE entity IN (\".getEntity('c_paiement').\")\";\n\t\t//if ($active >= 0) $sql.= \" AND active = \".$active;\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label=($langs->transnoentitiesnoconv(\"PaymentTypeShort\".$obj->code)!=(\"PaymentTypeShort\".$obj->code)?$langs->transnoentitiesnoconv(\"PaymentTypeShort\".$obj->code):($obj->label!='-'?$obj->label:''));\n\t\t\t\t$this->cache_types_paiements[$obj->id]['id'] =$obj->id;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['code'] =$obj->code;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['label']=$label;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['type'] =$obj->type;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['active'] =$obj->active;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$this->cache_types_paiements = dol_sort_array($this->cache_types_paiements, 'label', 'asc', 0, 0, 1);\n\n\t\t\treturn $num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t/**\n\t *      Return list of payment modes.\n\t *      Constant MAIN_DEFAULT_PAYMENT_TERM_ID can used to set default value but scope is all application, probably not what you want.\n\t *      See instead to force the default value by the caller.\n\t *\n\t *      @param\tint\t\t$selected\t\tId of payment term to preselect by default\n\t *      @param\tstring\t$htmlname\t\tNom de la zone select\n\t *      @param\tint\t\t$filtertype\t\tNot used\n\t *\t\t@param\tint\t\t$addempty\t\tAdd an empty entry\n\t * \t\t@param\tint\t\t$noinfoadmin\t\t0=Add admin info, 1=Disable admin info\n\t * \t\t@param\tstring\t$morecss\t\t\tAdd more CSS on select tag\n\t *\t\t@return\tvoid\n\t */\n\tfunction select_conditions_paiements($selected=0, $htmlname='condid', $filtertype=-1, $addempty=0, $noinfoadmin=0, $morecss='')\n\t{\n\t\tglobal $langs, $user, $conf;\n\n\t\tdol_syslog(__METHOD__.\" selected=\".$selected.\", htmlname=\".$htmlname, LOG_DEBUG);\n\n\t\t$this->load_cache_conditions_paiements();\n\n\t\t// Set default value if not already set by caller\n\t\tif (empty($selected) && ! empty($conf->global->MAIN_DEFAULT_PAYMENT_TERM_ID)) $selected = $conf->global->MAIN_DEFAULT_PAYMENT_TERM_ID;\n\n\t\tprint '<select id=\"'.$htmlname.'\" class=\"flat selectpaymentterms'.($morecss?' '.$morecss:'').'\" name=\"'.$htmlname.'\">';\n\t\tif ($addempty) print '<option value=\"0\">&nbsp;</option>';\n\t\tforeach($this->cache_conditions_paiements as $id => $arrayconditions)\n\t\t{\n\t\t\tif ($selected == $id)\n\t\t\t{\n\t\t\t\tprint '<option value=\"'.$id.'\" selected>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint '<option value=\"'.$id.'\">';\n\t\t\t}\n\t\t\tprint $arrayconditions['label'];\n\t\t\tprint '</option>';\n\t\t}\n\t\tprint '</select>';\n\t\tif ($user->admin && empty($noinfoadmin)) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t}\n\n\n\t/**\n\t *      Return list of payment methods\n\t *\n\t *      @param\tstring\t$selected       Id du mode de paiement pre-selectionne\n\t *      @param  string\t$htmlname       Nom de la zone select\n\t *      @param  string\t$filtertype     To filter on field type in llx_c_paiement ('CRDT' or 'DBIT' or array('code'=>xx,'label'=>zz))\n\t *      @param  int\t\t$format         0=id+libelle, 1=code+code, 2=code+libelle, 3=id+code\n\t *      @param  int\t\t$empty\t\t\t1=peut etre vide, 0 sinon\n\t * \t\t@param\tint\t\t$noadmininfo\t0=Add admin info, 1=Disable admin info\n\t *      @param  int\t\t$maxlength      Max length of label\n\t *      @param  int     $active         Active or not, -1 = all\n\t *      @param  string  $morecss        Add more CSS on select tag\n\t * \t\t@return\tvoid\n\t */\n\tfunction select_types_paiements($selected='', $htmlname='paiementtype', $filtertype='', $format=0, $empty=0, $noadmininfo=0, $maxlength=0, $active=1, $morecss='')\n\t{\n\t\tglobal $langs,$user;\n\n\t\tdol_syslog(__METHOD__.\" \".$selected.\", \".$htmlname.\", \".$filtertype.\", \".$format, LOG_DEBUG);\n\n\t\t$filterarray=array();\n\t\tif ($filtertype == 'CRDT')  \t$filterarray=array(0,2,3);\n\t\telseif ($filtertype == 'DBIT') \t$filterarray=array(1,2,3);\n\t\telseif ($filtertype != '' && $filtertype != '-1') $filterarray=explode(',',$filtertype);\n\n\t\t$this->load_cache_types_paiements();\n\n\t\tprint '<select id=\"select'.$htmlname.'\" class=\"flat selectpaymenttypes'.($morecss?' '.$morecss:'').'\" name=\"'.$htmlname.'\">';\n\t\tif ($empty) print '<option value=\"\">&nbsp;</option>';\n\t\tforeach($this->cache_types_paiements as $id => $arraytypes)\n\t\t{\n\t\t\t// If not good status\n\t\t\tif ($active >= 0 && $arraytypes['active'] != $active) continue;\n\n\t\t\t// On passe si on a demande de filtrer sur des modes de paiments particuliers\n\t\t\tif (count($filterarray) && ! in_array($arraytypes['type'],$filterarray)) continue;\n\n\t\t\t// We discard empty line if showempty is on because an empty line has already been output.\n\t\t\tif ($empty && empty($arraytypes['code'])) continue;\n\n\t\t\tif ($format == 0) print '<option value=\"'.$id.'\"';\n\t\t\tif ($format == 1) print '<option value=\"'.$arraytypes['code'].'\"';\n\t\t\tif ($format == 2) print '<option value=\"'.$arraytypes['code'].'\"';\n\t\t\tif ($format == 3) print '<option value=\"'.$id.'\"';\n\t\t\t// Si selected est text, on compare avec code, sinon avec id\n\t\t\tif (preg_match('/[a-z]/i', $selected) && $selected == $arraytypes['code']) print ' selected';\n\t\t\telseif ($selected == $id) print ' selected';\n\t\t\tprint '>';\n\t\t\tif ($format == 0) $value=($maxlength?dol_trunc($arraytypes['label'],$maxlength):$arraytypes['label']);\n\t\t\tif ($format == 1) $value=$arraytypes['code'];\n\t\t\tif ($format == 2) $value=($maxlength?dol_trunc($arraytypes['label'],$maxlength):$arraytypes['label']);\n\t\t\tif ($format == 3) $value=$arraytypes['code'];\n\t\t\tprint $value?$value:'&nbsp;';\n\t\t\tprint '</option>';\n\t\t}\n\t\tprint '</select>';\n\t\tif ($user->admin && ! $noadmininfo) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t}\n\n\n\t/**\n\t *  Selection HT or TTC\n\t *\n\t *  @param\tstring\t$selected       Id pre-selectionne\n\t *  @param  string\t$htmlname       Nom de la zone select\n\t * \t@return\tstring\t\t\t\t\tCode of HTML select to chose tax or not\n\t */\n\tfunction selectPriceBaseType($selected='',$htmlname='price_base_type')\n\t{\n\t\tglobal $langs;\n\n\t\t$return='';\n\n\t\t$return.= '<select class=\"flat\" name=\"'.$htmlname.'\">';\n\t\t$options = array(\n\t\t\t'HT'=>$langs->trans(\"HT\"),\n\t\t\t'TTC'=>$langs->trans(\"TTC\")\n\t\t);\n\t\tforeach($options as $id => $value)\n\t\t{\n\t\t\tif ($selected == $id)\n\t\t\t{\n\t\t\t\t$return.= '<option value=\"'.$id.'\" selected>'.$value;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$return.= '<option value=\"'.$id.'\">'.$value;\n\t\t\t}\n\t\t\t$return.= '</option>';\n\t\t}\n\t\t$return.= '</select>';\n\n\t\treturn $return;\n\t}\n\n\t/**\n\t *  Return a HTML select list of shipping mode\n\t *\n\t *  @param\tstring\t$selected          Id shipping mode pre-selected\n\t *  @param  string\t$htmlname          Name of select zone\n\t *  @param  string\t$filtre            To filter list\n\t *  @param  int\t\t$useempty          1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *  @param  string\t$moreattrib        To add more attribute on select\n\t * \t@return\tvoid\n\t */\n\tfunction selectShippingMethod($selected='',$htmlname='shipping_method_id',$filtre='',$useempty=0,$moreattrib='')\n\t{\n\t\tglobal $langs, $conf, $user;\n\n\t\t$langs->load(\"admin\");\n\t\t$langs->load(\"deliveries\");\n\n\t\t$sql = \"SELECT rowid, code, libelle as label\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_shipment_mode\";\n\t\t$sql.= \" WHERE active > 0\";\n\t\tif ($filtre) $sql.=\" AND \".$filtre;\n\t\t$sql.= \" ORDER BY libelle ASC\";\n\n\t\tdol_syslog(get_class($this).\"::selectShippingMode\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\tprint '<select id=\"select'.$htmlname.'\" class=\"flat selectshippingmethod\" name=\"'.$htmlname.'\"'.($moreattrib?' '.$moreattrib:'').'>';\n\t\t\t\tif ($useempty == 1 || ($useempty == 2 && $num > 1)) {\n\t\t\t\t\tprint '<option value=\"-1\">&nbsp;</option>';\n\t\t\t\t}\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\t\tif ($selected == $obj->rowid) {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">';\n\t\t\t\t\t}\n\t\t\t\t\tprint ($langs->trans(\"SendingMethod\".strtoupper($obj->code)) != \"SendingMethod\".strtoupper($obj->code)) ? $langs->trans(\"SendingMethod\".strtoupper($obj->code)) : $obj->label;\n\t\t\t\t\tprint '</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\tprint \"</select>\";\n\t\t\t\tif ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t\t\t} else {\n\t\t\t\tprint $langs->trans(\"NoShippingMethodDefined\");\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *    Display form to select shipping mode\n\t *\n\t *    @param\tstring\t$page        Page\n\t *    @param    int\t\t$selected    Id of shipping mode\n\t *    @param    string\t$htmlname    Name of select html field\n\t *    @param    int\t\t$addempty    1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *    @return\tvoid\n\t */\n\tfunction formSelectShippingMethod($page, $selected='', $htmlname='shipping_method_id', $addempty=0)\n\t{\n\t\tglobal $langs, $db;\n\n\t\t$langs->load(\"deliveries\");\n\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setshippingmethod\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$this->selectShippingMethod($selected, $htmlname, '', $addempty);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$code=$langs->getLabelFromKey($db, $selected, 'c_shipment_mode', 'rowid', 'code');\n\t\t\t\tprint $langs->trans(\"SendingMethod\".strtoupper($code));\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates HTML last in cycle situation invoices selector\n\t *\n\t * @param     string  $selected   \t\tPreselected ID\n\t * @param     int     $socid      \t\tCompany ID\n\t *\n\t * @return    string                     HTML select\n\t */\n\tfunction selectSituationInvoices($selected = '', $socid = 0)\n\t{\n\t\tglobal $langs;\n\n\t\t$langs->load('bills');\n\n\t\t$opt = '<option value =\"\" selected></option>';\n\t\t$sql = 'SELECT rowid, facnumber, situation_cycle_ref, situation_counter, situation_final, fk_soc FROM ' . MAIN_DB_PREFIX . 'facture WHERE situation_counter>=1';\n\t\t$sql.= ' ORDER by situation_cycle_ref, situation_counter desc';\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql && $this->db->num_rows($resql) > 0) {\n\t\t\t// Last seen cycle\n\t\t\t$ref = 0;\n\t\t\twhile ($res = $this->db->fetch_array($resql, MYSQL_NUM)) {\n\t\t\t\t//Same company ?\n\t\t\t\tif ($socid == $res[5]) {\n\t\t\t\t\t//Same cycle ?\n\t\t\t\t\tif ($res[2] != $ref) {\n\t\t\t\t\t\t// Just seen this cycle\n\t\t\t\t\t\t$ref = $res[2];\n\t\t\t\t\t\t//not final ?\n\t\t\t\t\t\tif ($res[4] != 1) {\n\t\t\t\t\t\t\t//Not prov?\n\t\t\t\t\t\t\tif (substr($res[1], 1, 4) != 'PROV') {\n\t\t\t\t\t\t\t\tif ($selected == $res[0]) {\n\t\t\t\t\t\t\t\t\t$opt .= '<option value=\"' . $res[0] . '\" selected>' . $res[1] . '</option>';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$opt .= '<option value=\"' . $res[0] . '\">' . $res[1] . '</option>';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\tdol_syslog(\"Error sql=\" . $sql . \", error=\" . $this->error, LOG_ERR);\n\t\t}\n\t\tif ($opt == '<option value =\"\" selected></option>')\n\t\t{\n\t\t\t$opt = '<option value =\"0\" selected>' . $langs->trans('NoSituations') . '</option>';\n\t\t}\n\t\treturn $opt;\n\t}\n\n\t/**\n\t *      Creates HTML units selector (code => label)\n\t *\n\t *      @param\tstring\t$selected       Preselected Unit ID\n\t *      @param  string\t$htmlname       Select name\n\t *      @param\tint\t\t$showempty\t\tAdd a nempty line\n\t * \t\t@return\tstring                  HTML select\n\t */\n\tfunction selectUnits($selected = '', $htmlname = 'units', $showempty=0)\n\t{\n\t\tglobal $langs;\n\n\t\t$langs->load('products');\n\n\t\t$return= '<select class=\"flat\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\n\t\t$sql = 'SELECT rowid, label, code from '.MAIN_DB_PREFIX.'c_units';\n\t\t$sql.= ' WHERE active > 0';\n\n\t\t$resql = $this->db->query($sql);\n\t\tif($resql && $this->db->num_rows($resql) > 0)\n\t\t{\n\t\t\tif ($showempty) $return .= '<option value=\"none\"></option>';\n\n\t\t\twhile($res = $this->db->fetch_object($resql))\n\t\t\t{\n\t\t\t\tif ($selected == $res->rowid)\n\t\t\t\t{\n\t\t\t\t\t$return.='<option value=\"'.$res->rowid.'\" selected>'.($langs->trans('unit'.$res->code)!=$res->label?$langs->trans('unit'.$res->code):$res->label).'</option>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$return.='<option value=\"'.$res->rowid.'\">'.($langs->trans('unit'.$res->code)!=$res->label?$langs->trans('unit'.$res->code):$res->label).'</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$return.='</select>';\n\t\t}\n\t\treturn $return;\n\t}\n\n\t/**\n\t *  Return a HTML select list of bank accounts\n\t *\n\t *  @param\tstring\t$selected           Id account pre-selected\n\t *  @param  string\t$htmlname           Name of select zone\n\t *  @param  int\t\t$statut             Status of searched accounts (0=open, 1=closed, 2=both)\n\t *  @param  string\t$filtre             To filter list\n\t *  @param  int\t\t$useempty           1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *  @param  string\t$moreattrib         To add more attribute on select\n\t *  @param\tint\t\t$showcurrency\t\tShow currency in label\n\t * \t@return\tvoid\n\t */\n\tfunction select_comptes($selected='',$htmlname='accountid',$statut=0,$filtre='',$useempty=0,$moreattrib='',$showcurrency=0)\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$langs->load(\"admin\");\n\n\t\t$sql = \"SELECT rowid, label, bank, clos as status, currency_code\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"bank_account\";\n\t\t$sql.= \" WHERE entity IN (\".getEntity('bank_account').\")\";\n\t\tif ($statut != 2) $sql.= \" AND clos = '\".$statut.\"'\";\n\t\tif ($filtre) $sql.=\" AND \".$filtre;\n\t\t$sql.= \" ORDER BY label\";\n\n\t\tdol_syslog(get_class($this).\"::select_comptes\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result)\n\t\t{\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\tprint '<select id=\"select'.$htmlname.'\" class=\"flat selectbankaccount\" name=\"'.$htmlname.'\"'.($moreattrib?' '.$moreattrib:'').'>';\n\t\t\t\tif ($useempty == 1 || ($useempty == 2 && $num > 1))\n\t\t\t\t{\n\t\t\t\t\tprint '<option value=\"-1\">&nbsp;</option>';\n\t\t\t\t}\n\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\t\tif ($selected == $obj->rowid)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">';\n\t\t\t\t\t}\n\t\t\t\t\tprint trim($obj->label);\n\t\t\t\t\tif ($showcurrency) print ' ('.$obj->currency_code.')';\n\t\t\t\t\tif ($statut == 2 && $obj->status == 1) print ' ('.$langs->trans(\"Closed\").')';\n\t\t\t\t\tprint '</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\tprint \"</select>\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint $langs->trans(\"NoActiveBankAccountDefined\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *    Display form to select bank account\n\t *\n\t *    @param\tstring\t$page        Page\n\t *    @param    int\t\t$selected    Id of bank account\n\t *    @param    string\t$htmlname    Name of select html field\n\t *    @param    int\t\t$addempty    1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *    @return\tvoid\n\t */\n\tfunction formSelectAccount($page, $selected='', $htmlname='fk_account', $addempty=0)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setbankaccount\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$this->select_comptes($selected, $htmlname, 0, '', $addempty);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\n\t\t\t$langs->load('banks');\n\n\t\t\tif ($selected) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT .'/compta/bank/class/account.class.php';\n\t\t\t\t$bankstatic=new Account($this->db);\n\t\t\t\t$bankstatic->fetch($selected);\n\t\t\t\tprint $bankstatic->getNomUrl(1);\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *    Return list of categories having choosed type\n\t *\n\t *    @param\tstring|int\t$type\t\t\t\tType of category ('customer', 'supplier', 'contact', 'product', 'member'). Old mode (0, 1, 2, ...) is deprecated.\n\t *    @param    string\t\t$selected    \t\tId of category preselected or 'auto' (autoselect category if there is only one element)\n\t *    @param    string\t\t$htmlname\t\t\tHTML field name\n\t *    @param    int\t\t\t$maxlength      \tMaximum length for labels\n\t *    @param    int\t\t\t$excludeafterid \tExclude all categories after this leaf in category tree.\n\t *    @param\tint\t\t\t$outputmode\t\t\t0=HTML select string, 1=Array\n\t *    @return\tstring\n\t *    @see select_categories\n\t */\n\tfunction select_all_categories($type, $selected='', $htmlname=\"parent\", $maxlength=64, $excludeafterid=0, $outputmode=0)\n\t{\n\t\tglobal $conf, $langs;\n\t\t$langs->load(\"categories\");\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\n\t\t// For backward compatibility\n\t\tif (is_numeric($type))\n\t\t{\n\t\t\tdol_syslog(__METHOD__ . ': using numeric value for parameter type is deprecated. Use string code instead.', LOG_WARNING);\n\t\t}\n\n\t\tif ($type === Categorie::TYPE_BANK_LINE)\n\t\t{\n\t\t\t// TODO Move this into common category feature\n\t\t\t$categids=array();\n\t\t\t$sql = \"SELECT c.label, c.rowid\";\n\t\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"bank_categ as c\";\n\t\t\t$sql.= \" WHERE entity = \".$conf->entity;\n\t\t\t$sql.= \" ORDER BY c.label\";\n\t\t\t$result = $this->db->query($sql);\n\t\t\tif ($result)\n\t\t\t{\n\t\t\t\t$num = $this->db->num_rows($result);\n\t\t\t\t$i = 0;\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$objp = $this->db->fetch_object($result);\n\t\t\t\t\tif ($objp) $cate_arbo[$objp->rowid]=array('id'=>$objp->rowid, 'fulllabel'=>$objp->label);\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\t$this->db->free($result);\n\t\t\t}\n\t\t\telse dol_print_error($this->db);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$cat = new Categorie($this->db);\n\t\t\t$cate_arbo = $cat->get_full_arbo($type, $excludeafterid);\n\t\t}\n\n\t\t$output = '<select class=\"flat\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\t\t$outarray=array();\n\t\tif (is_array($cate_arbo))\n\t\t{\n\t\t\tif (! count($cate_arbo)) $output.= '<option value=\"-1\" disabled>'.$langs->trans(\"NoCategoriesDefined\").'</option>';\n\t\t\telse\n\t\t\t{\n\t\t\t\t$output.= '<option value=\"-1\">&nbsp;</option>';\n\t\t\t\tforeach($cate_arbo as $key => $value)\n\t\t\t\t{\n\t\t\t\t\tif ($cate_arbo[$key]['id'] == $selected || ($selected == 'auto' && count($cate_arbo) == 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t$add = 'selected ';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$add = '';\n\t\t\t\t\t}\n\t\t\t\t\t$output.= '<option '.$add.'value=\"'.$cate_arbo[$key]['id'].'\">'.dol_trunc($cate_arbo[$key]['fulllabel'],$maxlength,'middle').'</option>';\n\n\t\t\t\t\t$outarray[$cate_arbo[$key]['id']] = $cate_arbo[$key]['fulllabel'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$output.= '</select>';\n\t\t$output.= \"\\n\";\n\n\t\tif ($outputmode) return $outarray;\n\t\treturn $output;\n\t}\n\n\t/**\n\t *     Show a confirmation HTML form or AJAX popup\n\t *\n\t *     @param\tstring\t\t$page        \t   \tUrl of page to call if confirmation is OK\n\t *     @param\tstring\t\t$title       \t   \tTitle\n\t *     @param\tstring\t\t$question    \t   \tQuestion\n\t *     @param \tstring\t\t$action      \t   \tAction\n\t *\t   @param\tarray\t\t$formquestion\t   \tAn array with forms complementary inputs\n\t * \t   @param\tstring\t\t$selectedchoice\t\t\"\" or \"no\" or \"yes\"\n\t * \t   @param\tint\t\t\t$useajax\t\t   \t0=No, 1=Yes, 2=Yes but submit page with &confirm=no if choice is No, 'xxx'=preoutput confirm box with div id=dialog-confirm-xxx\n\t *     @param\tint\t\t\t$height          \tForce height of box\n\t *     @param\tint\t\t\t$width\t\t\t\tForce width of box\n\t *     @return \tvoid\n\t *     @deprecated\n\t *     @see formconfirm()\n\t */\n\tfunction form_confirm($page, $title, $question, $action, $formquestion='', $selectedchoice=\"\", $useajax=0, $height=170, $width=500)\n\t{\n\t\tprint $this->formconfirm($page, $title, $question, $action, $formquestion, $selectedchoice, $useajax, $height, $width);\n\t}\n\n\t/**\n\t *     Show a confirmation HTML form or AJAX popup.\n\t *     Easiest way to use this is with useajax=1.\n\t *     If you use useajax='xxx', you must also add jquery code to trigger opening of box (with correct parameters)\n\t *     just after calling this method. For example:\n\t *       print '<script type=\"text/javascript\">'.\"\\n\";\n\t *       print 'jQuery(document).ready(function() {'.\"\\n\";\n\t *       print 'jQuery(\".xxxlink\").click(function(e) { jQuery(\"#aparamid\").val(jQuery(this).attr(\"rel\")); jQuery(\"#dialog-confirm-xxx\").dialog(\"open\"); return false; });'.\"\\n\";\n\t *       print '});'.\"\\n\";\n\t *       print '</script>'.\"\\n\";\n\t *\n\t *     @param  \tstring\t\t$page        \t   \tUrl of page to call if confirmation is OK. Can contains paramaters (param 'action' and 'confirm' will be reformated)\n\t *     @param\tstring\t\t$title       \t   \tTitle\n\t *     @param\tstring\t\t$question    \t   \tQuestion\n\t *     @param \tstring\t\t$action      \t   \tAction\n\t *\t   @param  \tarray\t\t$formquestion\t   \tAn array with complementary inputs to add into forms: array(array('label'=> ,'type'=> , ))\n\t *\t\t\t\t\t\t\t\t\t\t\t\ttype can be 'hidden', 'text', 'password', 'checkbox', 'radio', 'date', ...\n\t * \t   @param  \tstring\t\t$selectedchoice  \t\"\" or \"no\" or \"yes\"\n\t * \t   @param  \tint\t\t\t$useajax\t\t   \t0=No, 1=Yes, 2=Yes but submit page with &confirm=no if choice is No, 'xxx'=Yes and preoutput confirm box with div id=dialog-confirm-xxx\n\t *     @param  \tint\t\t\t$height          \tForce height of box\n\t *     @param\tint\t\t\t$width\t\t\t\tForce width of box ('999' or '90%'). Ignored and forced to 90% on smartphones.\n\t *     @param\tint\t\t\t$disableformtag\t\t1=Disable form tag. Can be used if we are already inside a <form> section.\n\t *     @return \tstring      \t    \t\t\tHTML ajax code if a confirm ajax popup is required, Pure HTML code if it's an html form\n\t */\n\tfunction formconfirm($page, $title, $question, $action, $formquestion='', $selectedchoice='', $useajax=0, $height=200, $width=500, $disableformtag=0)\n\t{\n\t\tglobal $langs,$conf;\n\t\tglobal $useglobalvars;\n\n\t\t$more='';\n\t\t$formconfirm='';\n\t\t$inputok=array();\n\t\t$inputko=array();\n\n\t\t// Clean parameters\n\t\t$newselectedchoice=empty($selectedchoice)?\"no\":$selectedchoice;\n\t\tif ($conf->browser->layout == 'phone') $width='95%';\n\n\t\tif (is_array($formquestion) && ! empty($formquestion))\n\t\t{\n\t\t\t// First add hidden fields and value\n\t\t\tforeach ($formquestion as $key => $input)\n\t\t\t{\n\t\t\t\tif (is_array($input) && ! empty($input))\n\t\t\t\t{\n\t\t\t\t\tif ($input['type'] == 'hidden')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<input type=\"hidden\" id=\"'.$input['name'].'\" name=\"'.$input['name'].'\" value=\"'.dol_escape_htmltag($input['value']).'\">'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now add questions\n\t\t\t$more.='<table class=\"paddingtopbottomonly\" width=\"100%\">'.\"\\n\";\n\t\t\t$more.='<tr><td colspan=\"3\">'.(! empty($formquestion['text'])?$formquestion['text']:'').'</td></tr>'.\"\\n\";\n\t\t\tforeach ($formquestion as $key => $input)\n\t\t\t{\n\t\t\t\tif (is_array($input) && ! empty($input))\n\t\t\t\t{\n\t\t\t\t\t$size=(! empty($input['size'])?' size=\"'.$input['size'].'\"':'');\n\t\t\t\t\t$moreattr=(! empty($input['moreattr'])?' '.$input['moreattr']:'');\n\t\t\t\t\t$morecss=(! empty($input['morecss'])?' '.$input['morecss']:'');\n\n\t\t\t\t\tif ($input['type'] == 'text')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<tr><td>'.$input['label'].'</td><td colspan=\"2\" align=\"left\"><input type=\"text\" class=\"flat'.$morecss.'\" id=\"'.$input['name'].'\" name=\"'.$input['name'].'\"'.$size.' value=\"'.$input['value'].'\"'.$moreattr.' /></td></tr>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse if ($input['type'] == 'password')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<tr><td>'.$input['label'].'</td><td colspan=\"2\" align=\"left\"><input type=\"password\" class=\"flat'.$morecss.'\" id=\"'.$input['name'].'\" name=\"'.$input['name'].'\"'.$size.' value=\"'.$input['value'].'\"'.$moreattr.' /></td></tr>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse if ($input['type'] == 'select')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<tr><td>';\n\t\t\t\t\t\tif (! empty($input['label'])) $more.=$input['label'].'</td><td valign=\"top\" colspan=\"2\" align=\"left\">';\n\t\t\t\t\t\t$more.=$this->selectarray($input['name'],$input['values'],$input['default'],1,0,0,$moreattr,0,0,0,'',$morecss);\n\t\t\t\t\t\t$more.='</td></tr>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse if ($input['type'] == 'checkbox')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<tr>';\n\t\t\t\t\t\t$more.='<td>'.$input['label'].' </td><td align=\"left\">';\n\t\t\t\t\t\t$more.='<input type=\"checkbox\" class=\"flat'.$morecss.'\" id=\"'.$input['name'].'\" name=\"'.$input['name'].'\"'.$moreattr;\n\t\t\t\t\t\tif (! is_bool($input['value']) && $input['value'] != 'false') $more.=' checked';\n\t\t\t\t\t\tif (is_bool($input['value']) && $input['value']) $more.=' checked';\n\t\t\t\t\t\tif (isset($input['disabled'])) $more.=' disabled';\n\t\t\t\t\t\t$more.=' /></td>';\n\t\t\t\t\t\t$more.='<td align=\"left\">&nbsp;</td>';\n\t\t\t\t\t\t$more.='</tr>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse if ($input['type'] == 'radio')\n\t\t\t\t\t{\n\t\t\t\t\t\t$i=0;\n\t\t\t\t\t\tforeach($input['values'] as $selkey => $selval)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$more.='<tr>';\n\t\t\t\t\t\t\tif ($i==0) $more.='<td class=\"tdtop\">'.$input['label'].'</td>';\n\t\t\t\t\t\t\telse $more.='<td>&nbsp;</td>';\n\t\t\t\t\t\t\t$more.='<td width=\"20\"><input type=\"radio\" class=\"flat'.$morecss.'\" id=\"'.$input['name'].'\" name=\"'.$input['name'].'\" value=\"'.$selkey.'\"'.$moreattr;\n\t\t\t\t\t\t\tif ($input['disabled']) $more.=' disabled';\n\t\t\t\t\t\t\t$more.=' /></td>';\n\t\t\t\t\t\t\t$more.='<td align=\"left\">';\n\t\t\t\t\t\t\t$more.=$selval;\n\t\t\t\t\t\t\t$more.='</td></tr>'.\"\\n\";\n\t\t\t\t\t\t\t$i++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if ($input['type'] == 'date')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<tr><td>'.$input['label'].'</td>';\n\t\t\t\t\t\t$more.='<td colspan=\"2\" align=\"left\">';\n\t\t\t\t\t\t$more.=$this->select_date($input['value'],$input['name'],0,0,0,'',1,0,1);\n\t\t\t\t\t\t$more.='</td></tr>'.\"\\n\";\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'day');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'month');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'year');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'hour');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'min');\n\t\t\t\t\t}\n\t\t\t\t\telse if ($input['type'] == 'other')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<tr><td>';\n\t\t\t\t\t\tif (! empty($input['label'])) $more.=$input['label'].'</td><td colspan=\"2\" align=\"left\">';\n\t\t\t\t\t\t$more.=$input['value'];\n\t\t\t\t\t\t$more.='</td></tr>'.\"\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\telse if ($input['type'] == 'onecolumn')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<tr><td colspan=\"3\" align=\"left\">';\n\t\t\t\t\t\t$more.=$input['value'];\n\t\t\t\t\t\t$more.='</td></tr>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$more.='</table>'.\"\\n\";\n\t\t}\n\n\t\t// JQUI method dialog is broken with jmobile, we use standard HTML.\n\t\t// Note: When using dol_use_jmobile or no js, you must also check code for button use a GET url with action=xxx and check that you also output the confirm code when action=xxx\n\t\t// See page product/card.php for example\n\t\tif (! empty($conf->dol_use_jmobile)) $useajax=0;\n\t\tif (empty($conf->use_javascript_ajax)) $useajax=0;\n\n\t\tif ($useajax)\n\t\t{\n\t\t\t$autoOpen=true;\n\t\t\t$dialogconfirm='dialog-confirm';\n\t\t\t$button='';\n\t\t\tif (! is_numeric($useajax))\n\t\t\t{\n\t\t\t\t$button=$useajax;\n\t\t\t\t$useajax=1;\n\t\t\t\t$autoOpen=false;\n\t\t\t\t$dialogconfirm.='-'.$button;\n\t\t\t}\n\t\t\t$pageyes=$page.(preg_match('/\\?/',$page)?'&':'?').'action='.$action.'&confirm=yes';\n\t\t\t$pageno=($useajax == 2 ? $page.(preg_match('/\\?/',$page)?'&':'?').'confirm=no':'');\n\t\t\t// Add input fields into list of fields to read during submit (inputok and inputko)\n\t\t\tif (is_array($formquestion))\n\t\t\t{\n\t\t\t\tforeach ($formquestion as $key => $input)\n\t\t\t\t{\n\t\t\t\t\t//print \"xx \".$key.\" rr \".is_array($input).\"<br>\\n\";\n\t\t\t\t\tif (is_array($input) && isset($input['name'])) array_push($inputok,$input['name']);\n\t\t\t\t\tif (isset($input['inputko']) && $input['inputko'] == 1) array_push($inputko,$input['name']);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Show JQuery confirm box. Note that global var $useglobalvars is used inside this template\n\t\t\t$formconfirm.= '<div id=\"'.$dialogconfirm.'\" title=\"'.dol_escape_htmltag($title).'\" style=\"display: none;\">';\n\t\t\tif (! empty($more)) {\n\t\t\t\t$formconfirm.= '<div class=\"confirmquestions\">'.$more.'</div>';\n\t\t\t}\n\t\t\t$formconfirm.= ($question ? '<div class=\"confirmmessage\">'.img_help('','').' '.$question . '</div>': '');\n\t\t\t$formconfirm.= '</div>'.\"\\n\";\n\n\t\t\t$formconfirm.= \"\\n<!-- begin ajax form_confirm page=\".$page.\" -->\\n\";\n\t\t\t$formconfirm.= '<script type=\"text/javascript\">'.\"\\n\";\n\t\t\t$formconfirm.= 'jQuery(document).ready(function() {\n            $(function() {\n            \t$( \"#'.$dialogconfirm.'\" ).dialog(\n            \t{\n                    autoOpen: '.($autoOpen ? \"true\" : \"false\").',';\n\t\t\t\t\tif ($newselectedchoice == 'no')\n\t\t\t\t\t{\n\t\t\t\t\t\t$formconfirm.='\n\t\t\t\t\t\topen: function() {\n            \t\t\t\t$(this).parent().find(\"button.ui-button:eq(2)\").focus();\n\t\t\t\t\t\t},';\n\t\t\t\t\t}\n\t\t\t\t\t$formconfirm.='\n                    resizable: false,\n                    height: \"'.$height.'\",\n                    width: \"'.$width.'\",\n                    modal: true,\n                    closeOnEscape: false,\n                    buttons: {\n                        \"'.dol_escape_js($langs->transnoentities(\"Yes\")).'\": function() {\n                        \tvar options=\"\";\n                        \tvar inputok = '.json_encode($inputok).';\n                         \tvar pageyes = \"'.dol_escape_js(! empty($pageyes)?$pageyes:'').'\";\n                         \tif (inputok.length>0) {\n                         \t\t$.each(inputok, function(i, inputname) {\n                         \t\t\tvar more = \"\";\n                         \t\t\tif ($(\"#\" + inputname).attr(\"type\") == \"checkbox\") { more = \":checked\"; }\n                         \t\t    if ($(\"#\" + inputname).attr(\"type\") == \"radio\") { more = \":checked\"; }\n                         \t\t\tvar inputvalue = $(\"#\" + inputname + more).val();\n                         \t\t\tif (typeof inputvalue == \"undefined\") { inputvalue=\"\"; }\n                         \t\t\toptions += \"&\" + inputname + \"=\" + inputvalue;\n                         \t\t});\n                         \t}\n                         \tvar urljump = pageyes + (pageyes.indexOf(\"?\") < 0 ? \"?\" : \"\") + options;\n                         \t//alert(urljump);\n            \t\t\t\tif (pageyes.length > 0) { location.href = urljump; }\n                            $(this).dialog(\"close\");\n                        },\n                        \"'.dol_escape_js($langs->transnoentities(\"No\")).'\": function() {\n                        \tvar options = \"\";\n                         \tvar inputko = '.json_encode($inputko).';\n                         \tvar pageno=\"'.dol_escape_js(! empty($pageno)?$pageno:'').'\";\n                         \tif (inputko.length>0) {\n                         \t\t$.each(inputko, function(i, inputname) {\n                         \t\t\tvar more = \"\";\n                         \t\t\tif ($(\"#\" + inputname).attr(\"type\") == \"checkbox\") { more = \":checked\"; }\n                         \t\t\tvar inputvalue = $(\"#\" + inputname + more).val();\n                         \t\t\tif (typeof inputvalue == \"undefined\") { inputvalue=\"\"; }\n                         \t\t\toptions += \"&\" + inputname + \"=\" + inputvalue;\n                         \t\t});\n                         \t}\n                         \tvar urljump=pageno + (pageno.indexOf(\"?\") < 0 ? \"?\" : \"\") + options;\n                         \t//alert(urljump);\n            \t\t\t\tif (pageno.length > 0) { location.href = urljump; }\n                            $(this).dialog(\"close\");\n                        }\n                    }\n                }\n                );\n\n            \tvar button = \"'.$button.'\";\n            \tif (button.length > 0) {\n                \t$( \"#\" + button ).click(function() {\n                \t\t$(\"#'.$dialogconfirm.'\").dialog(\"open\");\n        \t\t\t});\n                }\n            });\n            });\n            </script>';\n\t\t\t$formconfirm.= \"<!-- end ajax form_confirm -->\\n\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$formconfirm.= \"\\n<!-- begin form_confirm page=\".$page.\" -->\\n\";\n\n\t\t\tif (empty($disableformtag)) $formconfirm.= '<form method=\"POST\" action=\"'.$page.'\" class=\"notoptoleftroright\">'.\"\\n\";\n\n\t\t\t$formconfirm.= '<input type=\"hidden\" name=\"action\" value=\"'.$action.'\">'.\"\\n\";\n\t\t\tif (empty($disableformtag)) $formconfirm.= '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">'.\"\\n\";\n\n\t\t\t$formconfirm.= '<table width=\"100%\" class=\"valid\">'.\"\\n\";\n\n\t\t\t// Line title\n\t\t\t$formconfirm.= '<tr class=\"validtitre\"><td class=\"validtitre\" colspan=\"3\">'.img_picto('','recent').' '.$title.'</td></tr>'.\"\\n\";\n\n\t\t\t// Line form fields\n\t\t\tif ($more)\n\t\t\t{\n\t\t\t\t$formconfirm.='<tr class=\"valid\"><td class=\"valid\" colspan=\"3\">'.\"\\n\";\n\t\t\t\t$formconfirm.=$more;\n\t\t\t\t$formconfirm.='</td></tr>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Line with question\n\t\t\t$formconfirm.= '<tr class=\"valid\">';\n\t\t\t$formconfirm.= '<td class=\"valid\">'.$question.'</td>';\n\t\t\t$formconfirm.= '<td class=\"valid\">';\n\t\t\t$formconfirm.= $this->selectyesno(\"confirm\",$newselectedchoice);\n\t\t\t$formconfirm.= '</td>';\n\t\t\t$formconfirm.= '<td class=\"valid\" align=\"center\"><input class=\"button valignmiddle\" type=\"submit\" value=\"'.$langs->trans(\"Validate\").'\"></td>';\n\t\t\t$formconfirm.= '</tr>'.\"\\n\";\n\n\t\t\t$formconfirm.= '</table>'.\"\\n\";\n\n\t\t\tif (empty($disableformtag)) $formconfirm.= \"</form>\\n\";\n\t\t\t$formconfirm.= '<br>';\n\n\t\t\t$formconfirm.= \"<!-- end form_confirm -->\\n\";\n\t\t}\n\n\t\treturn $formconfirm;\n\t}\n\n\n\t/**\n\t *    Show a form to select a project\n\t *\n\t *    @param\tint\t\t$page        \t\tPage\n\t *    @param\tint\t\t$socid       \t\tId third party (-1=all, 0=only projects not linked to a third party, id=projects not linked or linked to third party id)\n\t *    @param    int\t\t$selected    \t\tId pre-selected project\n\t *    @param    string\t$htmlname    \t\tName of select field\n\t *    @param\tint\t\t$discard_closed\t\tDiscard closed projects (0=Keep,1=hide completely except $selected,2=Disable)\n\t *    @param\tint\t\t$maxlength\t\t\tMax length\n\t *    @param\tint\t\t$forcefocus\t\t\tForce focus on field (works with javascript only)\n\t *    @param    int     $nooutput           No print is done. String is returned.\n\t *    @return\tstring                      Return html content\n\t */\n\tfunction form_project($page, $socid, $selected='', $htmlname='projectid', $discard_closed=0, $maxlength=20, $forcefocus=0, $nooutput=0)\n\t{\n\t\tglobal $langs;\n\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/project.lib.php';\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formprojet.class.php';\n\n\t\t$out='';\n\n\t\t$formproject=new FormProjets($this->db);\n\n\t\t$langs->load(\"project\");\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\t$out.=\"\\n\";\n\t\t\t$out.='<form method=\"post\" action=\"'.$page.'\">';\n\t\t\t$out.='<input type=\"hidden\" name=\"action\" value=\"classin\">';\n\t\t\t$out.='<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$out.=$formproject->select_projects($socid, $selected, $htmlname, $maxlength, 0, 1, $discard_closed, $forcefocus, 0, 0, '', 1);\n\t\t\t$out.='<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t$out.='</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\t$projet = new Project($this->db);\n\t\t\t\t$projet->fetch($selected);\n\t\t\t\t//print '<a href=\"'.DOL_URL_ROOT.'/projet/card.php?id='.$selected.'\">'.$projet->title.'</a>';\n\t\t\t\t$out.=$projet->getNomUrl(0,'',1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$out.=\"&nbsp;\";\n\t\t\t}\n\t\t}\n\n\t\tif (empty($nooutput))\n\t\t{\n\t\t\tprint $out;\n\t\t\treturn '';\n\t\t}\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tShow a form to select payment conditions\n\t *\n\t *  @param\tint\t\t$page        \tPage\n\t *  @param  string\t$selected    \tId condition pre-selectionne\n\t *  @param  string\t$htmlname    \tName of select html field\n\t *\t@param\tint\t\t$addempty\t\tAdd empty entry\n\t *  @return\tvoid\n\t */\n\tfunction form_conditions_reglement($page, $selected='', $htmlname='cond_reglement_id', $addempty=0)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setconditions\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$this->select_conditions_paiements($selected,$htmlname,-1,$addempty);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\t$this->load_cache_conditions_paiements();\n\t\t\t\tprint $this->cache_conditions_paiements[$selected]['label'];\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *  Show a form to select a delivery delay\n\t *\n\t *  @param  int\t\t$page        \tPage\n\t *  @param  string\t$selected    \tId condition pre-selectionne\n\t *  @param  string\t$htmlname    \tName of select html field\n\t *\t@param\tint\t\t$addempty\t\tAjoute entree vide\n\t *  @return\tvoid\n\t */\n\tfunction form_availability($page, $selected='', $htmlname='availability', $addempty=0)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setavailability\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$this->selectAvailabilityDelay($selected,$htmlname,-1,$addempty);\n\t\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\t$this->load_cache_availability();\n\t\t\t\tprint $this->cache_availability[$selected]['label'];\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\tOutput HTML form to select list of input reason (events that triggered an object creation, like after sending an emailing, making an advert, ...)\n\t *  List found into table c_input_reason loaded by loadCacheInputReason\n\t *\n\t *  @param  string\t$page        \tPage\n\t *  @param  string\t$selected    \tId condition pre-selectionne\n\t *  @param  string\t$htmlname    \tName of select html field\n\t *\t@param\tint\t\t$addempty\t\tAdd empty entry\n\t *  @return\tvoid\n\t */\n\tfunction formInputReason($page, $selected='', $htmlname='demandreason', $addempty=0)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setdemandreason\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$this->selectInputReason($selected,$htmlname,-1,$addempty);\n\t\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\t$this->loadCacheInputReason();\n\t\t\t\tforeach ($this->cache_demand_reason as $key => $val)\n\t\t\t\t{\n\t\t\t\t\tif ($val['id'] == $selected)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint $val['label'];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *    Show a form + html select a date\n\t *\n\t *    @param\tstring\t\t$page        \tPage\n\t *    @param\tstring\t\t$selected    \tDate preselected\n\t *    @param    string\t\t$htmlname    \tHtml name of date input fields or 'none'\n\t *    @param    int\t\t\t$displayhour \tDisplay hour selector\n\t *    @param    int\t\t\t$displaymin\t\tDisplay minutes selector\n\t *    @param\tint\t\t\t$nooutput\t\t1=No print output, return string\n\t *    @return\tstring\n\t *    @see\t\tselect_date\n\t */\n\tfunction form_date($page, $selected, $htmlname, $displayhour=0, $displaymin=0, $nooutput=0)\n\t{\n\t\tglobal $langs;\n\n\t\t$ret='';\n\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\t$ret.='<form method=\"post\" action=\"'.$page.'\" name=\"form'.$htmlname.'\">';\n\t\t\t$ret.='<input type=\"hidden\" name=\"action\" value=\"set'.$htmlname.'\">';\n\t\t\t$ret.='<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$ret.='<table class=\"nobordernopadding\" cellpadding=\"0\" cellspacing=\"0\">';\n\t\t\t$ret.='<tr><td>';\n\t\t\t$ret.=$this->select_date($selected,$htmlname,$displayhour,$displaymin,1,'form'.$htmlname,1,0,1);\n\t\t\t$ret.='</td>';\n\t\t\t$ret.='<td align=\"left\"><input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\t$ret.='</tr></table></form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($displayhour) $ret.=dol_print_date($selected,'dayhour');\n\t\t\telse $ret.=dol_print_date($selected,'day');\n\t\t}\n\n\t\tif (empty($nooutput)) print $ret;\n\t\treturn $ret;\n\t}\n\n\n\t/**\n\t *  Show a select form to choose a user\n\t *\n\t *  @param\tstring\t$page        \tPage\n\t *  @param  string\t$selected    \tId of user preselected\n\t *  @param  string\t$htmlname    \tName of input html field. If 'none', we just output the user link.\n\t *  @param  array\t$exclude\t\tList of users id to exclude\n\t *  @param  array\t$include        List of users id to include\n\t *  @return\tvoid\n\t */\n\tfunction form_users($page, $selected='', $htmlname='userid', $exclude='', $include='')\n\t{\n\t\tglobal $langs;\n\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\" name=\"form'.$htmlname.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set'.$htmlname.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\tprint $this->select_dolusers($selected,$htmlname,1,$exclude,0,$include);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT .'/user/class/user.class.php';\n\t\t\t\t$theuser=new User($this->db);\n\t\t\t\t$theuser->fetch($selected);\n\t\t\t\tprint $theuser->getNomUrl(1);\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t *    Show form with payment mode\n\t *\n\t *    @param\tstring\t$page        \tPage\n\t *    @param    int\t\t$selected    \tId mode pre-selectionne\n\t *    @param    string\t$htmlname    \tName of select html field\n\t *    @param  \tstring\t$filtertype\t\tTo filter on field type in llx_c_paiement (array('code'=>xx,'label'=>zz))\n\t *    @param    int     $active         Active or not, -1 = all\n\t *    @return\tvoid\n\t */\n\tfunction form_modes_reglement($page, $selected='', $htmlname='mode_reglement_id', $filtertype='', $active=1)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setmode\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$this->select_types_paiements($selected,$htmlname,$filtertype,0,0,0,0,$active);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\t$this->load_cache_types_paiements();\n\t\t\t\tprint $this->cache_types_paiements[$selected]['label'];\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *    Show form with multicurrency code\n\t *\n\t *    @param\tstring\t$page        \tPage\n\t *    @param    string\t$selected    \tcode pre-selectionne\n\t *    @param    string\t$htmlname    \tName of select html field\n\t *    @return\tvoid\n\t */\n\tfunction form_multicurrency_code($page, $selected='', $htmlname='multicurrency_code')\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setmulticurrencycode\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\tprint $this->selectMultiCurrency($selected, $htmlname, 0);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_include_once('/core/lib/company.lib.php');\n\t\t\tprint !empty($selected) ? currency_name($selected,1) : '&nbsp;';\n\t\t}\n\t}\n\n\t/**\n\t *    Show form with multicurrency rate\n\t *\n\t *    @param\tstring\t$page        \tPage\n\t *    @param    double\t$rate\t    \tCurrent rate\n\t *    @param    string\t$htmlname    \tName of select html field\n\t *    @param    string  $currency       Currency code to explain the rate\n\t *    @return\tvoid\n\t */\n\tfunction form_multicurrency_rate($page, $rate='', $htmlname='multicurrency_tx', $currency='')\n\t{\n\t\tglobal $langs, $mysoc, $conf;\n\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setmulticurrencyrate\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\tprint '<input type=\"text\" name=\"'.$htmlname.'\" value=\"'.(!empty($rate) ? price($rate) : 1).'\" size=\"10\" /> ';\n\t\t\tprint '<select name=\"calculation_mode\">';\n\t\t\tprint '<option value=\"1\">'.$currency.' > '.$conf->currency.'</option>';\n\t\t\tprint '<option value=\"2\">'.$conf->currency.' > '.$currency.'</option>';\n\t\t\tprint '</select> ';\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (! empty($rate))\n\t\t\t{\n\t\t\t\tprint price($rate, 1, $langs, 1, 0);\n\t\t\t\tif ($currency && $rate != 1) print ' &nbsp; ('.price($rate, 1, $langs, 1, 0).' '.$currency.' = 1 '.$conf->currency.')';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint 1;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t *\tShow a select box with available absolute discounts\n\t *\n\t *  @param  string\t$page        \tPage URL where form is shown\n\t *  @param  int\t\t$selected    \tValue pre-selected\n\t *\t@param  string\t$htmlname    \tName of SELECT component. If 'none', not changeable. Example 'remise_id'.\n\t *\t@param\tint\t\t$socid\t\t\tThird party id\n\t * \t@param\tfloat\t$amount\t\t\tTotal amount available\n\t * \t@param\tstring\t$filter\t\t\tSQL filter on discounts\n\t * \t@param\tint\t\t$maxvalue\t\tMax value for lines that can be selected\n\t *  @param  string\t$more           More string to add\n\t *  @param  int     $hidelist       1=Hide list\n\t *  @return\tvoid\n\t */\n\tfunction form_remise_dispo($page, $selected, $htmlname, $socid, $amount, $filter='', $maxvalue=0, $more='', $hidelist=0)\n\t{\n\t\tglobal $conf,$langs;\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setabsolutediscount\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\tprint '<div class=\"inline-block\">';\n\t\t\tif (! empty($conf->global->FACTURE_DEPOSITS_ARE_JUST_PAYMENTS))\n\t\t\t{\n\t\t\t\tif (! $filter || $filter==\"fk_facture_source IS NULL\") print $langs->trans(\"CompanyHasAbsoluteDiscount\",price($amount,0,$langs,0,0,-1,$conf->currency));    // If we want deposit to be substracted to payments only and not to total of final invoice\n\t\t\t\telse print $langs->trans(\"CompanyHasCreditNote\",price($amount,0,$langs,0,0,-1,$conf->currency));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (! $filter || $filter==\"fk_facture_source IS NULL OR (fk_facture_source IS NOT NULL AND (description LIKE '(DEPOSIT)%' OR description LIKE '(EXCESS RECEIVED)%'))\") print $langs->trans(\"CompanyHasAbsoluteDiscount\",price($amount,0,$langs,0,0,-1,$conf->currency));\n\t\t\t\telse print $langs->trans(\"CompanyHasCreditNote\",price($amount,0,$langs,0,0,-1,$conf->currency));\n\t\t\t}\n\t\t\tif (empty($hidelist)) print ': ';\n\t\t\tprint '</div>';\n\t\t\tif (empty($hidelist))\n\t\t\t{\n\t\t\t\tprint '<div class=\"inline-block\" style=\"padding-right: 10px\">';\n\t\t\t\t$newfilter='fk_facture IS NULL AND fk_facture_line IS NULL';\t// Remises disponibles\n\t\t\t\tif ($filter) $newfilter.=' AND ('.$filter.')';\n\t\t\t\t$nbqualifiedlines=$this->select_remises($selected,$htmlname,$newfilter,$socid,$maxvalue);\n\t\t\t\tif ($nbqualifiedlines > 0)\n\t\t\t\t{\n\t\t\t\t\tprint ' &nbsp; <input type=\"submit\" class=\"button\" value=\"'.dol_escape_htmltag($langs->trans(\"UseLine\")).'\"';\n\t\t\t\t\tif ($filter && $filter != \"fk_facture_source IS NULL OR (fk_facture_source IS NOT NULL AND description LIKE '(DEPOSIT)%')\") print ' title=\"'.$langs->trans(\"UseCreditNoteInInvoicePayment\").'\"';\n\t\t\t\t\tprint '>';\n\t\t\t\t}\n\t\t\t\tprint '</div>';\n\t\t\t}\n\t\t\tif ($more)\n\t\t\t{\n\t\t\t\tprint '<div class=\"inline-block\">';\n\t\t\t\tprint $more;\n\t\t\t\tprint '</div>';\n\t\t\t}\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\tprint $selected;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint \"0\";\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t *    Show forms to select a contact\n\t *\n\t *    @param\tstring\t\t$page        \tPage\n\t *    @param\tSociete\t\t$societe\t\tFilter on third party\n\t *    @param    int\t\t\t$selected    \tId contact pre-selectionne\n\t *    @param    string\t\t$htmlname    \tName of HTML select. If 'none', we just show contact link.\n\t *    @return\tvoid\n\t */\n\tfunction form_contacts($page, $societe, $selected='', $htmlname='contactid')\n\t{\n\t\tglobal $langs, $conf;\n\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set_contact\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\tprint '<table class=\"nobordernopadding\" cellpadding=\"0\" cellspacing=\"0\">';\n\t\t\tprint '<tr><td>';\n\t\t\t$num=$this->select_contacts($societe->id, $selected, $htmlname);\n\t\t\tif ($num==0)\n\t\t\t{\n\t\t\t\t$addcontact = (! empty($conf->global->SOCIETE_ADDRESSES_MANAGEMENT) ? $langs->trans(\"AddContact\") : $langs->trans(\"AddContactAddress\"));\n\t\t\t\tprint '<a href=\"'.DOL_URL_ROOT.'/contact/card.php?socid='.$societe->id.'&amp;action=create&amp;backtoreferer=1\">'.$addcontact.'</a>';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '<td align=\"left\"><input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\tprint '</tr></table></form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT .'/contact/class/contact.class.php';\n\t\t\t\t$contact=new Contact($this->db);\n\t\t\t\t$contact->fetch($selected);\n\t\t\t\tprint $contact->getFullName($langs);\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *  Output html select to select thirdparty\n\t *\n\t *  @param\tstring\t$page       \tPage\n\t *  @param  string\t$selected   \tId preselected\n\t *  @param  string\t$htmlname\t\tName of HTML select\n\t *  @param  string\t$filter         optional filters criteras\n\t *\t@param\tint\t\t$showempty\t\tAdd an empty field\n\t * \t@param\tint\t\t$showtype\t\tShow third party type in combolist (customer, prospect or supplier)\n\t * \t@param\tint\t\t$forcecombo\t\tForce to use combo box\n\t *  @param\tarray\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @return\tvoid\n\t */\n\tfunction form_thirdparty($page, $selected='', $htmlname='socid', $filter='',$showempty=0, $showtype=0, $forcecombo=0, $events=array())\n\t{\n\t\tglobal $langs;\n\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set_thirdparty\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\tprint $this->select_company($selected, $htmlname, $filter, $showempty, $showtype, $forcecombo, $events);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT .'/societe/class/societe.class.php';\n\t\t\t\t$soc = new Societe($this->db);\n\t\t\t\t$soc->fetch($selected);\n\t\t\t\tprint $soc->getNomUrl($langs);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *    Retourne la liste des devises, dans la langue de l'utilisateur\n\t *\n\t *    @param\tstring\t$selected    preselected currency code\n\t *    @param    string\t$htmlname    name of HTML select list\n\t *    @return\tvoid\n\t */\n\tfunction select_currency($selected='',$htmlname='currency_id')\n\t{\n\t\tprint $this->selectCurrency($selected,$htmlname);\n\t}\n\n\t/**\n\t *  Retourne la liste des devises, dans la langue de l'utilisateur\n\t *\n\t *  @param\tstring\t$selected    preselected currency code\n\t *  @param  string\t$htmlname    name of HTML select list\n\t * \t@return\tstring\n\t */\n\tfunction selectCurrency($selected='',$htmlname='currency_id')\n\t{\n\t\tglobal $conf,$langs,$user;\n\n\t\t$langs->loadCacheCurrencies('');\n\n\t\t$out='';\n\n\t\tif ($selected=='euro' || $selected=='euros') $selected='EUR';   // Pour compatibilite\n\n\t\t$out.= '<select class=\"flat maxwidth200onsmartphone minwidth300\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\t\tforeach ($langs->cache_currencies as $code_iso => $currency)\n\t\t{\n\t\t\tif ($selected && $selected == $code_iso)\n\t\t\t{\n\t\t\t\t$out.= '<option value=\"'.$code_iso.'\" selected>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$out.= '<option value=\"'.$code_iso.'\">';\n\t\t\t}\n\t\t\t$out.= $currency['label'];\n\t\t\t$out.= ' ('.$langs->getCurrencySymbol($code_iso).')';\n\t\t\t$out.= '</option>';\n\t\t}\n\t\t$out.= '</select>';\n\t\tif ($user->admin) $out.= info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\n\t\t// Make select dynamic\n\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t$out .= ajax_combobox($htmlname);\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tReturn array of currencies in user language\n\t *\n\t *  @param\tstring\t$selected    preselected currency code\n\t *  @param  string\t$htmlname    name of HTML select list\n\t *  @param  integer\t$useempty    1=Add empty line\n\t * \t@return\tstring\n\t */\n\tfunction selectMultiCurrency($selected='', $htmlname='multicurrency_code', $useempty=0)\n\t{\n\t\tglobal $db,$conf,$langs,$user;\n\n\t\t$langs->loadCacheCurrencies('');        // Load ->cache_currencies\n\n\t\t$TCurrency = array();\n\n\t\t$sql = 'SELECT code FROM '.MAIN_DB_PREFIX.'multicurrency';\n\t\t$sql.= \" WHERE entity IN ('\".getEntity('mutlicurrency').\"')\";\n\t\t$resql = $db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\twhile ($obj = $db->fetch_object($resql)) $TCurrency[$obj->code] = $obj->code;\n\t\t}\n\n\t\t$out='';\n\t\t$out.= '<select class=\"flat\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\t\tif ($useempty) $out .= '<option value=\"\"></option>';\n\t\t// If company current currency not in table, we add it into list. Should always be available.\n\t\tif (! in_array($conf->currency, $TCurrency))\n\t\t{\n\t\t\t$TCurrency[$conf->currency] = $conf->currency;\n\t\t}\n\t\tif (count($TCurrency) > 0)\n\t\t{\n\t\t\tforeach ($langs->cache_currencies as $code_iso => $currency)\n\t\t\t{\n\t\t\t\tif (isset($TCurrency[$code_iso]))\n\t\t\t\t{\n\t\t\t\t\tif (!empty($selected) && $selected == $code_iso) $out.= '<option value=\"'.$code_iso.'\" selected=\"selected\">';\n\t\t\t\t\telse $out.= '<option value=\"'.$code_iso.'\">';\n\n\t\t\t\t\t$out.= $currency['label'];\n\t\t\t\t\t$out.= ' ('.$langs->getCurrencySymbol($code_iso).')';\n\t\t\t\t\t$out.= '</option>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\t$out.= '</select>';\n\t\t// Make select dynamic\n\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t$out.= ajax_combobox($htmlname);\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tLoad into the cache vat rates of a country\n\t *\n\t *\t@param\tstring\t$country_code\t\tCountry code with quotes (\"'CA'\", or \"'CA,IN,...'\")\n\t *\t@return\tint\t\t\t\t\t\t\tNb of loaded lines, 0 if already loaded, <0 if KO\n\t */\n\tfunction load_cache_vatrates($country_code)\n\t{\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_vatrates);\n\t\tif ($num > 0) return $num;    // Cache already loaded\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$sql  = \"SELECT DISTINCT t.rowid, t.code, t.taux, t.localtax1, t.localtax1_type, t.localtax2, t.localtax2_type, t.recuperableonly\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t$sql.= \" WHERE t.fk_pays = c.rowid\";\n\t\t$sql.= \" AND t.active > 0\";\n\t\t$sql.= \" AND c.code IN (\".$country_code.\")\";\n\t\t$sql.= \" ORDER BY t.code ASC, t.taux ASC, t.recuperableonly ASC\";\n\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\tfor ($i = 0; $i < $num; $i++)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$this->cache_vatrates[$i]['rowid']\t= $obj->rowid;\n\t\t\t\t\t$this->cache_vatrates[$i]['code']\t= $obj->code;\n\t\t\t\t\t$this->cache_vatrates[$i]['txtva']\t= $obj->taux;\n\t\t\t\t\t$this->cache_vatrates[$i]['nprtva']\t= $obj->recuperableonly;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax1']\t    = $obj->localtax1;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax1_type']\t= $obj->localtax1_type;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax2']\t    = $obj->localtax2;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax2_type']\t= $obj->localtax1_type;\n\n\t\t\t\t\t$this->cache_vatrates[$i]['label']\t= $obj->taux.'%'.($obj->code?' ('.$obj->code.')':'');   // Label must contains only 0-9 , . % or *\n\t\t\t\t\t$this->cache_vatrates[$i]['labelallrates'] = $obj->taux.'/'.($obj->localtax1?$obj->localtax1:'0').'/'.($obj->localtax2?$obj->localtax2:'0').($obj->code?' ('.$obj->code.')':'');\t// Must never be used as key, only label\n\t\t\t\t\t$positiverates='';\n\t\t\t\t\tif ($obj->taux) $positiverates.=($positiverates?'/':'').$obj->taux;\n\t\t\t\t\tif ($obj->localtax1) $positiverates.=($positiverates?'/':'').$obj->localtax1;\n\t\t\t\t\tif ($obj->localtax2) $positiverates.=($positiverates?'/':'').$obj->localtax2;\n\t\t\t\t\tif (empty($positiverates)) $positiverates='0';\n\t\t\t\t\t$this->cache_vatrates[$i]['labelpositiverates'] = $positiverates.($obj->code?' ('.$obj->code.')':'');\t// Must never be used as key, only label\n\t\t\t\t}\n\n\t\t\t\treturn $num;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$this->error = '<font class=\"error\">'.$langs->trans(\"ErrorNoVATRateDefinedForSellerCountry\",$country_code).'</font>';\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$this->error = '<font class=\"error\">'.$this->db->error().'</font>';\n\t\t\treturn -2;\n\t\t}\n\t}\n\n\t/**\n\t *  Output an HTML select vat rate.\n\t *  The name of this function should be selectVat. We keep bad name for compatibility purpose.\n\t *\n\t *  @param\tstring\t      $htmlname           Name of HTML select field\n\t *  @param  float|string  $selectedrate       Force preselected vat rate. Can be '8.5' or '8.5 (NOO)' for example. Use '' for no forcing.\n\t *  @param  Societe\t      $societe_vendeuse   Thirdparty seller\n\t *  @param  Societe\t      $societe_acheteuse  Thirdparty buyer\n\t *  @param  int\t\t      $idprod             Id product. O if unknown of NA.\n\t *  @param  int\t\t      $info_bits          Miscellaneous information on line (1 for NPR)\n\t *  @param  int|string    $type               ''=Unknown, 0=Product, 1=Service (Used if idprod not defined)\n\t *                  \t\t                  Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n\t *                  \t\t\t\t\t      Si le (pays vendeur = pays acheteur) alors la TVA par defaut=TVA du produit vendu. Fin de regle.\n\t *                  \t\t\t\t\t      Si (vendeur et acheteur dans Communaute europeenne) et bien vendu = moyen de transports neuf (auto, bateau, avion), TVA par defaut=0 (La TVA doit etre paye par l'acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n\t *                                            Si vendeur et acheteur dans Communaut\u00e9 europ\u00e9enne et acheteur= particulier alors TVA par d\u00e9faut=TVA du produit vendu. Fin de r\u00e8gle.\n\t *                                            Si vendeur et acheteur dans Communaut\u00e9 europ\u00e9enne et acheteur= entreprise alors TVA par d\u00e9faut=0. Fin de r\u00e8gle.\n\t *                  \t\t\t\t\t      Sinon la TVA proposee par defaut=0. Fin de regle.\n\t *  @param\tbool\t     $options_only\t\t  Return HTML options lines only (for ajax treatment)\n\t *  @param  int          $mode                0=Use vat rate as key in combo list, 1=Add VAT code after vat rate into key, -1=Use id of vat line as key\n\t *  @return\tstring\n\t */\n\tfunction load_tva($htmlname='tauxtva', $selectedrate='', $societe_vendeuse='', $societe_acheteuse='', $idprod=0, $info_bits=0, $type='', $options_only=false, $mode=0)\n\t{\n\t\tglobal $langs,$conf,$mysoc;\n\n\t\t$langs->load('errors');\n\n\t\t$return='';\n\n\t\t// Define defaultnpr, defaultttx and defaultcode\n\t\t$defaultnpr=($info_bits & 0x01);\n\t\t$defaultnpr=(preg_match('/\\*/',$selectedrate) ? 1 : $defaultnpr);\n\t\t$defaulttx=str_replace('*','',$selectedrate);\n\t\t$defaultcode='';\n\t\tif (preg_match('/\\((.*)\\)/', $defaulttx, $reg))\n\t\t{\n\t\t\t$defaultcode=$reg[1];\n\t\t\t$defaulttx=preg_replace('/\\s*\\(.*\\)/','',$defaulttx);\n\t\t}\n\t\t//var_dump($selectedrate.'-'.$defaulttx.'-'.$defaultnpr.'-'.$defaultcode);\n\n\t\t// Check parameters\n\t\tif (is_object($societe_vendeuse) && ! $societe_vendeuse->country_code)\n\t\t{\n\t\t\tif ($societe_vendeuse->id == $mysoc->id)\n\t\t\t{\n\t\t\t\t$return.= '<font class=\"error\">'.$langs->trans(\"ErrorYourCountryIsNotDefined\").'</div>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$return.= '<font class=\"error\">'.$langs->trans(\"ErrorSupplierCountryIsNotDefined\").'</div>';\n\t\t\t}\n\t\t\treturn $return;\n\t\t}\n\n\t\t//var_dump($societe_acheteuse);\n\t\t//print \"name=$name, selectedrate=$selectedrate, seller=\".$societe_vendeuse->country_code.\" buyer=\".$societe_acheteuse->country_code.\" buyer is company=\".$societe_acheteuse->isACompany().\" idprod=$idprod, info_bits=$info_bits type=$type\";\n\t\t//exit;\n\n\t\t// Define list of countries to use to search VAT rates to show\n\t\t// First we defined code_country to use to find list\n\t\tif (is_object($societe_vendeuse))\n\t\t{\n\t\t\t$code_country=\"'\".$societe_vendeuse->country_code.\"'\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$code_country=\"'\".$mysoc->country_code.\"'\";   // Pour compatibilite ascendente\n\t\t}\n\t\tif (! empty($conf->global->SERVICE_ARE_ECOMMERCE_200238EC))    // If option to have vat for end customer for services is on\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\t\t\tif (! isInEEC($societe_vendeuse) && (! is_object($societe_acheteuse) || (isInEEC($societe_acheteuse) && ! $societe_acheteuse->isACompany())))\n\t\t\t{\n\t\t\t\t// We also add the buyer\n\t\t\t\tif (is_numeric($type))\n\t\t\t\t{\n\t\t\t\t\tif ($type == 1) // We know product is a service\n\t\t\t\t\t{\n\t\t\t\t\t\t$code_country.=\",'\".$societe_acheteuse->country_code.\"'\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (! $idprod)  // We don't know type of product\n\t\t\t\t{\n\t\t\t\t\t$code_country.=\",'\".$societe_acheteuse->country_code.\"'\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$prodstatic=new Product($this->db);\n\t\t\t\t\t$prodstatic->fetch($idprod);\n\t\t\t\t\tif ($prodstatic->type == Product::TYPE_SERVICE)   // We know product is a service\n\t\t\t\t\t{\n\t\t\t\t\t\t$code_country.=\",'\".$societe_acheteuse->country_code.\"'\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now we get list\n\t\t$num = $this->load_cache_vatrates($code_country);   // If no vat defined, return -1 with message into this->error\n\n\t\tif ($num > 0)\n\t\t{\n\t\t\t// Definition du taux a pre-selectionner (si defaulttx non force et donc vaut -1 ou '')\n\t\t\tif ($defaulttx < 0 || dol_strlen($defaulttx) == 0)\n\t\t\t{\n\t\t\t\t$tmpthirdparty=new Societe($this->db);\n\t\t\t\t$defaulttx=get_default_tva($societe_vendeuse, (is_object($societe_acheteuse)?$societe_acheteuse:$tmpthirdparty), $idprod);\n\t\t\t\t$defaultnpr=get_default_npr($societe_vendeuse, (is_object($societe_acheteuse)?$societe_acheteuse:$tmpthirdparty), $idprod);\n\t\t\t\tif (empty($defaulttx)) $defaultnpr=0;\n\t\t\t}\n\n\t\t\t// Si taux par defaut n'a pu etre determine, on prend dernier de la liste.\n\t\t\t// Comme ils sont tries par ordre croissant, dernier = plus eleve = taux courant\n\t\t\tif ($defaulttx < 0 || dol_strlen($defaulttx) == 0)\n\t\t\t{\n\t\t\t\tif (empty($conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS)) $defaulttx = $this->cache_vatrates[$num-1]['txtva'];\n\t\t\t\telse $defaulttx=($conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS == 'none' ? '' : $conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS);\n\t\t\t}\n\n\t\t\t// Disabled if seller is not subject to VAT\n\t\t\t$disabled=false; $title='';\n\t\t\tif (is_object($societe_vendeuse) && $societe_vendeuse->id == $mysoc->id && $societe_vendeuse->tva_assuj == \"0\")\n\t\t\t{\n\t\t\t\t$title=' title=\"'.$langs->trans('VATIsNotUsed').'\"';\n\t\t\t\t$disabled=true;\n\t\t\t}\n\n\t\t\tif (! $options_only) $return.= '<select class=\"flat minwidth75imp\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\"'.($disabled?' disabled':'').$title.'>';\n\n\t\t\t$selectedfound=false;\n\t\t\tforeach ($this->cache_vatrates as $rate)\n\t\t\t{\n\t\t\t\t// Keep only 0 if seller is not subject to VAT\n\t\t\t\tif ($disabled && $rate['txtva'] != 0) continue;\n\n\t\t\t\t// Define key to use into select list\n\t\t\t\t$key = $rate['txtva'];\n\t\t\t\t$key.= $rate['nprtva'] ? '*': '';\n\t\t\t\tif ($mode > 0 && $rate['code']) $key.=' ('.$rate['code'].')';\n\t\t\t\tif ($mode < 0) $key = $rate['rowid'];\n\n\t\t\t\t$return.= '<option value=\"'.$key.'\"';\n\t\t\t\tif (! $selectedfound)\n\t\t\t\t{\n\t\t\t\t\tif ($defaultcode) // If defaultcode is defined, we used it in priority to select combo option instead of using rate+npr flag\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($defaultcode == $rate['code'])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$return.= ' selected';\n\t\t\t\t\t\t\t$selectedfound=true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telseif ($rate['txtva'] == $defaulttx && $rate['nprtva'] == $defaultnpr)\n\t\t\t   \t\t{\n\t\t\t   \t\t\t$return.= ' selected';\n\t\t\t   \t\t\t$selectedfound=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$return.= '>';\n\t\t\t\t//if (! empty($conf->global->MAIN_VAT_SHOW_POSITIVE_RATES))\n\t\t\t\tif ($mysoc->country_code == 'IN' || ! empty($conf->global->MAIN_VAT_LABEL_IS_POSITIVE_RATES))\n\t\t\t\t{\n\t\t\t\t\t$return.= $rate['labelpositiverates'];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$return.= vatrate($rate['label']);\n\t\t\t\t}\n\t\t\t\t//$return.=($rate['code']?' '.$rate['code']:'');\n\t\t\t\t$return.= (empty($rate['code']) && $rate['nprtva']) ? ' *': '';         // We show the *  (old behaviour only if new vat code is not used)\n\n\t\t\t\t$return.= '</option>';\n\t\t\t}\n\n\t\t\tif (! $options_only) $return.= '</select>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$return.= $this->error;\n\t\t}\n\n\t\t$this->num = $num;\n\t\treturn $return;\n\t}\n\n\n\t/**\n\t *\tShow a HTML widget to input a date or combo list for day, month, years and optionaly hours and minutes.\n\t *  Fields are preselected with :\n\t *            \t- set_time date (must be a local PHP server timestamp or string date with format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM')\n\t *            \t- local date in user area, if set_time is '' (so if set_time is '', output may differs when done from two different location)\n\t *            \t- Empty (fields empty), if set_time is -1 (in this case, parameter empty must also have value 1)\n\t *\n\t *\t@param\ttimestamp\t$set_time \t\tPre-selected date (must be a local PHP server timestamp), -1 to keep date not preselected, '' to use current date (emptydate must be 0).\n\t *\t@param\tstring\t\t$prefix\t\t\tPrefix for fields name\n\t *\t@param\tint\t\t\t$h\t\t\t\t1=Show also hours (-1 has same effect, but hour and minutes are prefilled with 23:59 if $set_time = -1)\n\t *\t@param\tint\t\t\t$m\t\t\t\t1=Show also minutes\n\t *\t@param\tint\t\t\t$empty\t\t\t0=Fields required, 1=Empty inputs are allowed, 2=Empty inputs are allowed for hours only\n\t *\t@param\tstring\t\t$form_name \t\tNot used\n\t *\t@param\tint\t\t\t$d\t\t\t\t1=Show days, month, years\n\t * \t@param\tint\t\t\t$addnowlink\t\tAdd a link \"Now\"\n\t * \t@param\tint\t\t\t$nooutput\t\tDo not output html string but return it\n\t * \t@param \tint\t\t\t$disabled\t\tDisable input fields\n\t *  @param  int\t\t\t$fullday        When a checkbox with this html name is on, hour and day are set with 00:00 or 23:59\n\t *  @param\tstring\t\t$addplusone\t\tAdd a link \"+1 hour\". Value must be name of another select_date field.\n\t *  @param  datetime    $adddateof      Add a link \"Date of invoice\" using the following date.\n\t * \t@return\tstring|null\t\t\t\t\t\tNothing or string if nooutput is 1\n\t *  @see\tform_date\n\t */\n\tfunction select_date($set_time='', $prefix='re', $h=0, $m=0, $empty=0, $form_name=\"\", $d=1, $addnowlink=0, $nooutput=0, $disabled=0, $fullday='', $addplusone='', $adddateof='')\n\t{\n\t\tglobal $conf,$langs;\n\n\t\t$retstring='';\n\n\t\tif($prefix=='') $prefix='re';\n\t\tif($h == '') $h=0;\n\t\tif($m == '') $m=0;\n\t\t$emptydate=0;\n\t\t$emptyhours=0;\n\t\tif ($empty == 1) { $emptydate=1; $emptyhours=1; }\n\t\tif ($empty == 2) { $emptydate=0; $emptyhours=1; }\n\t\t$orig_set_time=$set_time;\n\n\t\tif ($set_time === '' && $emptydate == 0)\n\t\t{\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t\t$set_time = dol_now('tzuser')-(getServerTimeZoneInt('now')*3600); // set_time must be relative to PHP server timezone\n\t\t}\n\n\t\t// Analysis of the pre-selection date\n\t\tif (preg_match('/^([0-9]+)\\-([0-9]+)\\-([0-9]+)\\s?([0-9]+)?:?([0-9]+)?/',$set_time,$reg))\n\t\t{\n\t\t\t// Date format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM:SS'\n\t\t\t$syear\t= (! empty($reg[1])?$reg[1]:'');\n\t\t\t$smonth\t= (! empty($reg[2])?$reg[2]:'');\n\t\t\t$sday\t= (! empty($reg[3])?$reg[3]:'');\n\t\t\t$shour\t= (! empty($reg[4])?$reg[4]:'');\n\t\t\t$smin\t= (! empty($reg[5])?$reg[5]:'');\n\t\t}\n\t\telseif (strval($set_time) != '' && $set_time != -1)\n\t\t{\n\t\t\t// set_time est un timestamps (0 possible)\n\t\t\t$syear = dol_print_date($set_time, \"%Y\");\n\t\t\t$smonth = dol_print_date($set_time, \"%m\");\n\t\t\t$sday = dol_print_date($set_time, \"%d\");\n\t\t\tif ($orig_set_time != '')\n\t\t\t{\n\t\t\t\t$shour = dol_print_date($set_time, \"%H\");\n\t\t\t\t$smin = dol_print_date($set_time, \"%M\");\n\t\t\t\t$ssec = dol_print_date($set_time, \"%S\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$shour = '';\n\t\t\t\t$smin = '';\n\t\t\t\t$ssec = '';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Date est '' ou vaut -1\n\t\t\t$syear = '';\n\t\t\t$smonth = '';\n\t\t\t$sday = '';\n\t\t\t$shour = !isset($conf->global->MAIN_DEFAULT_DATE_HOUR) ? ($h == -1 ? '23' : '') : $conf->global->MAIN_DEFAULT_DATE_HOUR;\n\t\t\t$smin = !isset($conf->global->MAIN_DEFAULT_DATE_MIN) ? ($h == -1 ? '59' : '') : $conf->global->MAIN_DEFAULT_DATE_MIN;\n\t\t\t$ssec = !isset($conf->global->MAIN_DEFAULT_DATE_SEC) ? ($h == -1 ? '59' : '') : $conf->global->MAIN_DEFAULT_DATE_SEC;\n\t\t}\n\n\t\t// You can set MAIN_POPUP_CALENDAR to 'eldy' or 'jquery'\n\t\t$usecalendar='combo';\n\t\tif (! empty($conf->use_javascript_ajax) && (empty($conf->global->MAIN_POPUP_CALENDAR) || $conf->global->MAIN_POPUP_CALENDAR != \"none\")) {\n\t\t\t$usecalendar = ((empty($conf->global->MAIN_POPUP_CALENDAR) || $conf->global->MAIN_POPUP_CALENDAR == 'eldy')?'jquery':$conf->global->MAIN_POPUP_CALENDAR);\n\t\t}\n\t\t//if (! empty($conf->browser->phone)) $usecalendar='combo';\n\n\t\tif ($d)\n\t\t{\n\t\t\t// Show date with popup\n\t\t\tif ($usecalendar != 'combo')\n\t\t\t{\n\t\t\t\t$formated_date='';\n\t\t\t\t//print \"e\".$set_time.\" t \".$conf->format_date_short;\n\t\t\t\tif (strval($set_time) != '' && $set_time != -1)\n\t\t\t\t{\n\t\t\t\t\t//$formated_date=dol_print_date($set_time,$conf->format_date_short);\n\t\t\t\t\t$formated_date=dol_print_date($set_time,$langs->trans(\"FormatDateShortInput\"));  // FormatDateShortInput for dol_print_date / FormatDateShortJavaInput that is same for javascript\n\t\t\t\t}\n\n\t\t\t\t// Calendrier popup version eldy\n\t\t\t\tif ($usecalendar == \"eldy\")\n\t\t\t\t{\n\t\t\t\t\t// Zone de saisie manuelle de la date\n\t\t\t\t\t$retstring.='<input id=\"'.$prefix.'\" name=\"'.$prefix.'\" type=\"text\" class=\"maxwidth75\" maxlength=\"11\" value=\"'.$formated_date.'\"';\n\t\t\t\t\t$retstring.=($disabled?' disabled':'');\n\t\t\t\t\t$retstring.=' onChange=\"dpChangeDay(\\''.$prefix.'\\',\\''.$langs->trans(\"FormatDateShortJavaInput\").'\\'); \"';  // FormatDateShortInput for dol_print_date / FormatDateShortJavaInput that is same for javascript\n\t\t\t\t\t$retstring.='>';\n\n\t\t\t\t\t// Icone calendrier\n\t\t\t\t\tif (! $disabled)\n\t\t\t\t\t{\n\t\t\t\t\t\t$retstring.='<button id=\"'.$prefix.'Button\" type=\"button\" class=\"dpInvisibleButtons\"';\n\t\t\t\t\t\t$base=DOL_URL_ROOT.'/core/';\n\t\t\t\t\t\t$retstring.=' onClick=\"showDP(\\''.$base.'\\',\\''.$prefix.'\\',\\''.$langs->trans(\"FormatDateShortJavaInput\").'\\',\\''.$langs->defaultlang.'\\');\"';\n\t\t\t\t\t\t$retstring.='>'.img_object($langs->trans(\"SelectDate\"),'calendarday','class=\"datecallink\"').'</button>';\n\t\t\t\t\t}\n\t\t\t\t\telse $retstring.='<button id=\"'.$prefix.'Button\" type=\"button\" class=\"dpInvisibleButtons\">'.img_object($langs->trans(\"Disabled\"),'calendarday','class=\"datecallink\"').'</button>';\n\n\t\t\t\t\t$retstring.='<input type=\"hidden\" id=\"'.$prefix.'day\"   name=\"'.$prefix.'day\"   value=\"'.$sday.'\">'.\"\\n\";\n\t\t\t\t\t$retstring.='<input type=\"hidden\" id=\"'.$prefix.'month\" name=\"'.$prefix.'month\" value=\"'.$smonth.'\">'.\"\\n\";\n\t\t\t\t\t$retstring.='<input type=\"hidden\" id=\"'.$prefix.'year\"  name=\"'.$prefix.'year\"  value=\"'.$syear.'\">'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telseif ($usecalendar == 'jquery')\n\t\t\t\t{\n\t\t\t\t\tif (! $disabled)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Output javascript for datepicker\n\t\t\t\t\t\t$retstring.=\"<script type='text/javascript'>\";\n\t\t\t\t\t\t$retstring.=\"$(function(){ $('#\".$prefix.\"').datepicker({\n\t\t\t\t\t\t\tdateFormat: '\".$langs->trans(\"FormatDateShortJQueryInput\").\"',\n\t\t\t\t\t\t\tautoclose: true,\n\t\t\t\t\t\t\ttodayHighlight: true,\";\n\t\t\t\t\t\t\tif (! empty($conf->dol_use_jmobile))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$retstring.=\"\n\t\t\t\t\t\t\t\tbeforeShow: function (input, datePicker) {\n\t\t\t\t\t\t\t\t\tinput.disabled = true;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonClose: function (dateText, datePicker) {\n\t\t\t\t\t\t\t\t\tthis.disabled = false;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Note: We don't need monthNames, monthNamesShort, dayNames, dayNamesShort, dayNamesMin, they are set globally on datepicker component in lib_head.js.php\n\t\t\t\t\t\t\tif (empty($conf->global->MAIN_POPUP_CALENDAR_ON_FOCUS))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$retstring.=\"\n\t\t\t\t\t\t\t\tshowOn: 'button',\n\t\t\t\t\t\t\t\tbuttonImage: '\".DOL_URL_ROOT.\"/theme/\".$conf->theme.\"/img/object_calendarday.png',\n\t\t\t\t\t\t\t\tbuttonImageOnly: true\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$retstring.=\"\n\t\t\t\t\t\t\t}) });\";\n\t\t\t\t\t\t$retstring.=\"</script>\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Zone de saisie manuelle de la date\n\t\t\t\t\t$retstring.='<input id=\"'.$prefix.'\" name=\"'.$prefix.'\" type=\"text\" class=\"maxwidth75\" maxlength=\"11\" value=\"'.$formated_date.'\"';\n\t\t\t\t\t$retstring.=($disabled?' disabled':'');\n\t\t\t\t\t$retstring.=' onChange=\"dpChangeDay(\\''.$prefix.'\\',\\''.$langs->trans(\"FormatDateShortJavaInput\").'\\'); \"';  // FormatDateShortInput for dol_print_date / FormatDateShortJavaInput that is same for javascript\n\t\t\t\t\t$retstring.='>';\n\n\t\t\t\t\t// Icone calendrier\n\t\t\t\t\tif (! $disabled)\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Not required. Managed by option buttonImage of jquery\n                \t\t$retstring.=img_object($langs->trans(\"SelectDate\"),'calendarday','id=\"'.$prefix.'id\" class=\"datecallink\"');\n                \t\t$retstring.=\"<script type='text/javascript'>\";\n                \t\t$retstring.=\"jQuery(document).ready(function() {\";\n                \t\t$retstring.='\tjQuery(\"#'.$prefix.'id\").click(function() {';\n                \t\t$retstring.=\"    \tjQuery('#\".$prefix.\"').focus();\";\n                \t\t$retstring.='    });';\n                \t\t$retstring.='});';\n                \t\t$retstring.=\"</script>\";*/\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$retstring.='<button id=\"'.$prefix.'Button\" type=\"button\" class=\"dpInvisibleButtons\">'.img_object($langs->trans(\"Disabled\"),'calendarday','class=\"datecallink\"').'</button>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$retstring.='<input type=\"hidden\" id=\"'.$prefix.'day\"   name=\"'.$prefix.'day\"   value=\"'.$sday.'\">'.\"\\n\";\n\t\t\t\t\t$retstring.='<input type=\"hidden\" id=\"'.$prefix.'month\" name=\"'.$prefix.'month\" value=\"'.$smonth.'\">'.\"\\n\";\n\t\t\t\t\t$retstring.='<input type=\"hidden\" id=\"'.$prefix.'year\"  name=\"'.$prefix.'year\"  value=\"'.$syear.'\">'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$retstring.=\"Bad value of MAIN_POPUP_CALENDAR\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Show date with combo selects\n\t\t\telse\n\t\t\t{\n\t\t\t\t//$retstring.='<div class=\"inline-block\">';\n\t\t\t\t// Day\n\t\t\t\t$retstring.='<select'.($disabled?' disabled':'').' class=\"flat valignmiddle maxwidth50imp\" id=\"'.$prefix.'day\" name=\"'.$prefix.'day\">';\n\n\t\t\t\tif ($emptydate || $set_time == -1)\n\t\t\t\t{\n\t\t\t\t\t$retstring.='<option value=\"0\" selected>&nbsp;</option>';\n\t\t\t\t}\n\n\t\t\t\tfor ($day = 1 ; $day <= 31; $day++)\n\t\t\t\t{\n\t\t\t\t\t$retstring.='<option value=\"'.$day.'\"'.($day == $sday ? ' selected':'').'>'.$day.'</option>';\n\t\t\t\t}\n\n\t\t\t\t$retstring.=\"</select>\";\n\n\t\t\t\t$retstring.='<select'.($disabled?' disabled':'').' class=\"flat valignmiddle maxwidth75imp\" id=\"'.$prefix.'month\" name=\"'.$prefix.'month\">';\n\t\t\t\tif ($emptydate || $set_time == -1)\n\t\t\t\t{\n\t\t\t\t\t$retstring.='<option value=\"0\" selected>&nbsp;</option>';\n\t\t\t\t}\n\n\t\t\t\t// Month\n\t\t\t\tfor ($month = 1 ; $month <= 12 ; $month++)\n\t\t\t\t{\n\t\t\t\t\t$retstring.='<option value=\"'.$month.'\"'.($month == $smonth?' selected':'').'>';\n\t\t\t\t\t$retstring.=dol_print_date(mktime(12,0,0,$month,1,2000),\"%b\");\n\t\t\t\t\t$retstring.=\"</option>\";\n\t\t\t\t}\n\t\t\t\t$retstring.=\"</select>\";\n\n\t\t\t\t// Year\n\t\t\t\tif ($emptydate || $set_time == -1)\n\t\t\t\t{\n\t\t\t\t\t$retstring.='<input'.($disabled?' disabled':'').' placeholder=\"'.dol_escape_htmltag($langs->trans(\"Year\")).'\" class=\"flat maxwidth50imp valignmiddle\" type=\"number\" min=\"0\" max=\"3000\" maxlength=\"4\" id=\"'.$prefix.'year\" name=\"'.$prefix.'year\" value=\"'.$syear.'\">';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$retstring.='<select'.($disabled?' disabled':'').' class=\"flat valignmiddle maxwidth75imp\" id=\"'.$prefix.'year\" name=\"'.$prefix.'year\">';\n\n\t\t\t\t\tfor ($year = $syear - 10; $year < $syear + 10 ; $year++)\n\t\t\t\t\t{\n\t\t\t\t\t\t$retstring.='<option value=\"'.$year.'\"'.($year == $syear ? ' selected':'').'>'.$year.'</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$retstring.=\"</select>\\n\";\n\t\t\t\t}\n\t\t\t\t//$retstring.='</div>';\n\t\t\t}\n\t\t}\n\n\t\tif ($d && $h) $retstring.=($h==2?'<br>':' ');\n\n\t\tif ($h)\n\t\t{\n\t\t\t// Show hour\n\t\t\t$retstring.='<select'.($disabled?' disabled':'').' class=\"flat valignmiddle maxwidth50 '.($fullday?$fullday.'hour':'').'\" id=\"'.$prefix.'hour\" name=\"'.$prefix.'hour\">';\n\t\t\tif ($emptyhours) $retstring.='<option value=\"-1\">&nbsp;</option>';\n\t\t\tfor ($hour = 0; $hour < 24; $hour++)\n\t\t\t{\n\t\t\t\tif (strlen($hour) < 2) $hour = \"0\" . $hour;\n\t\t\t\t$retstring.='<option value=\"'.$hour.'\"'.(($hour == $shour)?' selected':'').'>'.$hour.(empty($conf->dol_optimize_smallscreen)?'':'H').'</option>';\n\t\t\t}\n\t\t\t$retstring.='</select>';\n\t\t\tif ($m && empty($conf->dol_optimize_smallscreen)) $retstring.=\":\";\n\t\t}\n\n\t\tif ($m)\n\t\t{\n\t\t\t// Show minutes\n\t\t\t$retstring.='<select'.($disabled?' disabled':'').' class=\"flat valignmiddle maxwidth50 '.($fullday?$fullday.'min':'').'\" id=\"'.$prefix.'min\" name=\"'.$prefix.'min\">';\n\t\t\tif ($emptyhours) $retstring.='<option value=\"-1\">&nbsp;</option>';\n\t\t\tfor ($min = 0; $min < 60 ; $min++)\n\t\t\t{\n\t\t\t\tif (strlen($min) < 2) $min = \"0\" . $min;\n\t\t\t\t$retstring.='<option value=\"'.$min.'\"'.(($min == $smin)?' selected':'').'>'.$min.(empty($conf->dol_optimize_smallscreen)?'':'').'</option>';\n\t\t\t}\n\t\t\t$retstring.='</select>';\n\n\t\t\t$retstring.='<input type=\"hidden\" name=\"'.$prefix.'sec\" value=\"'.$ssec.'\">';\n\t\t}\n\n\t\t// Add a \"Now\" link\n\t\tif ($conf->use_javascript_ajax && $addnowlink)\n\t\t{\n\t\t\t// Script which will be inserted in the onClick of the \"Now\" link\n\t\t\t$reset_scripts = \"\";\n\n\t\t\t// Generate the date part, depending on the use or not of the javascript calendar\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'\\').val(\\''.dol_print_date(dol_now(),'day').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'day\\').val(\\''.dol_print_date(dol_now(),'%d').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'month\\').val(\\''.dol_print_date(dol_now(),'%m').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'year\\').val(\\''.dol_print_date(dol_now(),'%Y').'\\');';\n\t\t\t/*if ($usecalendar == \"eldy\")\n            {\n                $base=DOL_URL_ROOT.'/core/';\n                $reset_scripts .= 'resetDP(\\''.$base.'\\',\\''.$prefix.'\\',\\''.$langs->trans(\"FormatDateShortJavaInput\").'\\',\\''.$langs->defaultlang.'\\');';\n            }\n            else\n            {\n                $reset_scripts .= 'this.form.elements[\\''.$prefix.'day\\'].value=formatDate(new Date(), \\'d\\'); ';\n                $reset_scripts .= 'this.form.elements[\\''.$prefix.'month\\'].value=formatDate(new Date(), \\'M\\'); ';\n                $reset_scripts .= 'this.form.elements[\\''.$prefix.'year\\'].value=formatDate(new Date(), \\'yyyy\\'); ';\n            }*/\n\t\t\t// Update the hour part\n\t\t\tif ($h)\n\t\t\t{\n\t\t\t\tif ($fullday) $reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t//$reset_scripts .= 'this.form.elements[\\''.$prefix.'hour\\'].value=formatDate(new Date(), \\'HH\\'); ';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'hour\\').val(\\''.dol_print_date(dol_now(),'%H').'\\');';\n\t\t\t\tif ($fullday) $reset_scripts .= ' } ';\n\t\t\t}\n\t\t\t// Update the minute part\n\t\t\tif ($m)\n\t\t\t{\n\t\t\t\tif ($fullday) $reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t//$reset_scripts .= 'this.form.elements[\\''.$prefix.'min\\'].value=formatDate(new Date(), \\'mm\\'); ';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'min\\').val(\\''.dol_print_date(dol_now(),'%M').'\\');';\n\t\t\t\tif ($fullday) $reset_scripts .= ' } ';\n\t\t\t}\n\t\t\t// If reset_scripts is not empty, print the link with the reset_scripts in the onClick\n\t\t\tif ($reset_scripts && empty($conf->dol_optimize_smallscreen))\n\t\t\t{\n\t\t\t\t$retstring.=' <button class=\"dpInvisibleButtons datenowlink\" id=\"'.$prefix.'ButtonNow\" type=\"button\" name=\"_useless\" value=\"now\" onClick=\"'.$reset_scripts.'\">';\n\t\t\t\t$retstring.=$langs->trans(\"Now\");\n\t\t\t\t$retstring.='</button> ';\n\t\t\t}\n\t\t}\n\n\t\t// Add a \"Plus one hour\" link\n\t\tif ($conf->use_javascript_ajax && $addplusone)\n\t\t{\n\t\t\t// Script which will be inserted in the onClick of the \"Add plusone\" link\n\t\t\t$reset_scripts = \"\";\n\n\t\t\t// Generate the date part, depending on the use or not of the javascript calendar\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'\\').val(\\''.dol_print_date(dol_now(),'day').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'day\\').val(\\''.dol_print_date(dol_now(),'%d').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'month\\').val(\\''.dol_print_date(dol_now(),'%m').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'year\\').val(\\''.dol_print_date(dol_now(),'%Y').'\\');';\n\t\t\t// Update the hour part\n\t\t\tif ($h)\n\t\t\t{\n\t\t\t\tif ($fullday) $reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'hour\\').val(\\''.dol_print_date(dol_now(),'%H').'\\');';\n\t\t\t\tif ($fullday) $reset_scripts .= ' } ';\n\t\t\t}\n\t\t\t// Update the minute part\n\t\t\tif ($m)\n\t\t\t{\n\t\t\t\tif ($fullday) $reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'min\\').val(\\''.dol_print_date(dol_now(),'%M').'\\');';\n\t\t\t\tif ($fullday) $reset_scripts .= ' } ';\n\t\t\t}\n\t\t\t// If reset_scripts is not empty, print the link with the reset_scripts in the onClick\n\t\t\tif ($reset_scripts && empty($conf->dol_optimize_smallscreen))\n\t\t\t{\n\t\t\t\t$retstring.=' <button class=\"dpInvisibleButtons datenowlink\" id=\"'.$prefix.'ButtonPlusOne\" type=\"button\" name=\"_useless2\" value=\"plusone\" onClick=\"'.$reset_scripts.'\">';\n\t\t\t\t$retstring.=$langs->trans(\"DateStartPlusOne\");\n\t\t\t\t$retstring.='</button> ';\n\t\t\t}\n\t\t}\n\n\t\t// Add a \"Plus one hour\" link\n\t\tif ($conf->use_javascript_ajax && $adddateof)\n\t\t{\n\t\t\t$tmparray=dol_getdate($adddateof);\n\t\t\t$retstring.=' - <button class=\"dpInvisibleButtons datenowlink\" id=\"dateofinvoice\" type=\"button\" name=\"_dateofinvoice\" value=\"now\" onclick=\"jQuery(\\'#re\\').val(\\''.dol_print_date($adddateof,'day').'\\');jQuery(\\'#reday\\').val(\\''.$tmparray['mday'].'\\');jQuery(\\'#remonth\\').val(\\''.$tmparray['mon'].'\\');jQuery(\\'#reyear\\').val(\\''.$tmparray['year'].'\\');\">'.$langs->trans(\"DateInvoice\").'</a>';\n\t\t}\n\n\t\tif (! empty($nooutput)) return $retstring;\n\n\t\tprint $retstring;\n\t\treturn;\n\t}\n\n\t/**\n\t *\tFunction to show a form to select a duration on a page\n\t *\n\t *\t@param\tstring\t$prefix   \t\tPrefix for input fields\n\t *\t@param  int\t$iSecond  \t\t    Default preselected duration (number of seconds or '')\n\t * \t@param\tint\t$disabled           Disable the combo box\n\t * \t@param\tstring\t$typehour\t\tIf 'select' then input hour and input min is a combo,\n\t *\t\t\t\t\t\t            if 'text' input hour is in text and input min is a text,\n\t *\t\t\t\t\t\t            if 'textselect' input hour is in text and input min is a combo\n\t *  @param\tinteger\t$minunderhours\tIf 1, show minutes selection under the hours\n\t * \t@param\tint\t$nooutput\t\t    Do not output html string but return it\n\t *  @return\tstring|null\n\t */\n\tfunction select_duration($prefix, $iSecond='', $disabled=0, $typehour='select', $minunderhours=0, $nooutput=0)\n\t{\n\t\tglobal $langs;\n\n\t\t$retstring='';\n\n\t\t$hourSelected=0; $minSelected=0;\n\n\t\t// Hours\n\t\tif ($iSecond != '')\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\n\t\t\t$hourSelected = convertSecondToTime($iSecond,'allhour');\n\t\t\t$minSelected = convertSecondToTime($iSecond,'min');\n\t\t}\n\n\t\tif ($typehour=='select' )\n\t\t{\n\t\t\t$retstring.='<select class=\"flat\" name=\"'.$prefix.'hour\"'.($disabled?' disabled':'').'>';\n\t\t\tfor ($hour = 0; $hour < 25; $hour++)\t// For a duration, we allow 24 hours\n\t\t\t{\n\t\t\t\t$retstring.='<option value=\"'.$hour.'\"';\n\t\t\t\tif ($hourSelected == $hour)\n\t\t\t\t{\n\t\t\t\t\t$retstring.=\" selected\";\n\t\t\t\t}\n\t\t\t\t$retstring.=\">\".$hour.\"</option>\";\n\t\t\t}\n\t\t\t$retstring.=\"</select>\";\n\t\t}\n\t\telseif ($typehour=='text' || $typehour=='textselect')\n\t\t{\n\t\t\t$retstring.='<input placeholder=\"'.$langs->trans('HourShort').'\" type=\"number\" min=\"0\" size=\"1\" name=\"'.$prefix.'hour\"'.($disabled?' disabled':'').' class=\"flat maxwidth50 inputhour\" value=\"'.(($hourSelected != '')?((int) $hourSelected):'').'\">';\n\t\t}\n\t\telse return 'BadValueForParameterTypeHour';\n\n\t\tif ($typehour!='text') $retstring.=' '.$langs->trans('HourShort');\n\t\telse $retstring.='<span class=\"hideonsmartphone\">:</span>';\n\n\t\t// Minutes\n\t\tif ($minunderhours) $retstring.='<br>';\n\t\telse $retstring.='<span class=\"hideonsmartphone\">&nbsp;</span>';\n\n\t\tif ($typehour=='select' || $typehour=='textselect')\n\t\t{\n\t\t\t$retstring.='<select class=\"flat\" name=\"'.$prefix.'min\"'.($disabled?' disabled':'').'>';\n\t\t\tfor ($min = 0; $min <= 55; $min=$min+5)\n\t\t\t{\n\t\t\t\t$retstring.='<option value=\"'.$min.'\"';\n\t\t\t\tif ($minSelected == $min) $retstring.=' selected';\n\t\t\t\t$retstring.='>'.$min.'</option>';\n\t\t\t}\n\t\t\t$retstring.=\"</select>\";\n\t\t}\n\t\telseif ($typehour=='text' )\n\t\t{\n\t\t\t$retstring.='<input placeholder=\"'.$langs->trans('MinuteShort').'\" type=\"number\" min=\"0\" size=\"1\" name=\"'.$prefix.'min\"'.($disabled?' disabled':'').' class=\"flat maxwidth50 inputminute\" value=\"'.(($minSelected != '')?((int) $minSelected):'').'\">';\n\t\t}\n\n\t\tif ($typehour!='text') $retstring.=' '.$langs->trans('MinuteShort');\n\n\t\t//$retstring.=\"&nbsp;\";\n\n\t\tif (! empty($nooutput)) return $retstring;\n\n\t\tprint $retstring;\n\t\treturn;\n\t}\n\n\n\t/**\n\t * Generic method to select a component from a combo list.\n\t * This is the generic method that will replace all specific existing methods.\n\t *\n\t * @param \tstring\t\t\t$objectdesc\t\t\tObjectclassname:Objectclasspath\n\t * @param\tstring\t\t\t$htmlname\t\t\tName of HTML select component\n\t * @param\tint\t\t\t\t$preselectedvalue\tPreselected value (ID of element)\n\t * @param\tstring\t\t\t$showempty\t\t\t''=empty values not allowed, 'string'=value show if we allow empty values (for example 'All', ...)\n\t * @param\tstring\t\t\t$searchkey\t\t\tSearch criteria\n\t * @param\tstring\t\t\t$placeholder\t\tPlace holder\n\t * @param\tstring\t\t\t$morecss\t\t\tMore CSS\n\t * @param\tstring\t\t\t$moreparams\t\t\tMore params provided to ajax call\n\t * @param\tint\t\t\t\t$forcecombo\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t * @return\tstring\t\t\t\t\t\t\t\tReturn HTML string\n\t * @see selectForFormsList select_thirdparty\n\t */\n\tfunction selectForForms($objectdesc, $htmlname, $preselectedvalue, $showempty='', $searchkey='', $placeholder='', $morecss='', $moreparams='', $forcecombo=0)\n\t{\n\t\tglobal $conf, $user;\n\n\t\t$objecttmp = null;\n\n\t\t$InfoFieldList = explode(\":\", $objectdesc);\n\t\t$classname=$InfoFieldList[0];\n\t\t$classpath=$InfoFieldList[1];\n\t\tif (! empty($classpath))\n\t\t{\n\t\t\tdol_include_once($classpath);\n\t\t\tif ($classname && class_exists($classname))\n\t\t\t{\n\t\t\t\t$objecttmp = new $classname($this->db);\n\t\t\t}\n\t\t}\n\t\tif (! is_object($objecttmp))\n\t\t{\n\t\t\tdol_syslog('Error bad setup of type for field '.$InfoFieldList, LOG_WARNING);\n\t\t\treturn 'Error bad setup of type for field '.join(',', $InfoFieldList);\n\t\t}\n\n\t\t$prefixforautocompletemode=$objecttmp->element;\n\t\tif ($prefixforautocompletemode == 'societe') $prefixforautocompletemode='company';\n\t\t$confkeyforautocompletemode=strtoupper($prefixforautocompletemode).'_USE_SEARCH_TO_SELECT';\t// For example COMPANY_USE_SEARCH_TO_SELECT\n\n\t\tdol_syslog(get_class($this).\"::selectForForms\", LOG_DEBUG);\n\n\t\t$out='';\n\t\tif (! empty($conf->use_javascript_ajax) && ! empty($conf->global->$confkeyforautocompletemode) && ! $forcecombo)\n\t\t{\n\t\t\t$objectdesc=$classname.':'.$classpath;\n\t\t\t$urlforajaxcall = DOL_URL_ROOT.'/core/ajax/selectobject.php';\n\t\t\t//if ($objecttmp->element == 'societe') $urlforajaxcall = DOL_URL_ROOT.'/societe/ajax/company.php';\n\n\t\t\t// No immediate load of all database\n\t\t\t$urloption='htmlname='.$htmlname.'&outjson=1&objectdesc='.$objectdesc.($moreparams?$moreparams:'');\n\t\t\t// Activate the auto complete using ajax call.\n\t\t\t$out.=  ajax_autocompleter($preselectedvalue, $htmlname, $urlforajaxcall, $urloption, $conf->global->$confkeyforautocompletemode, 0, array());\n\t\t\t$out.= '<style type=\"text/css\">.ui-autocomplete { z-index: 250; }</style>';\n\t\t\tif ($placeholder) $placeholder=' placeholder=\"'.$placeholder.'\"';\n\t\t\t$out.= '<input type=\"text\" class=\"'.$morecss.'\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$preselectedvalue.'\"'.$placeholder.' />';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Immediate load of all database\n\t\t\t$out.=$this->selectForFormsList($objecttmp, $htmlname, $preselectedvalue, $showempty, $searchkey, $placeholder, $morecss, $moreparams, $forcecombo);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Output html form to select an object.\n\t * Note, this function is called by selectForForms or by ajax selectobject.php\n\t *\n\t * @param \tObject\t\t\t$objecttmp\t\t\tObject\n\t * @param\tstring\t\t\t$htmlname\t\t\tName of HTML select component\n\t * @param\tint\t\t\t\t$preselectedvalue\tPreselected value (ID of element)\n\t * @param\tstring\t\t\t$showempty\t\t\t''=empty values not allowed, 'string'=value show if we allow empty values (for example 'All', ...)\n\t * @param\tstring\t\t\t$searchkey\t\t\tSearch value\n\t * @param\tstring\t\t\t$placeholder\t\tPlace holder\n\t * @param\tstring\t\t\t$morecss\t\t\tMore CSS\n\t * @param\tstring\t\t\t$moreparams\t\t\tMore params provided to ajax call\n\t * @param\tint\t\t\t\t$forcecombo\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t * @param\tint\t\t\t\t$outputmode\t\t\t0=HTML select string, 1=Array\n\t * @return\tstring\t\t\t\t\t\t\t\tReturn HTML string\n\t * @see selectForForms\n\t */\n\tfunction selectForFormsList($objecttmp, $htmlname, $preselectedvalue, $showempty='', $searchkey='', $placeholder='', $morecss='', $moreparams='', $forcecombo=0, $outputmode=0)\n\t{\n\t\tglobal $conf, $langs, $user;\n\n\t\t$prefixforautocompletemode=$objecttmp->element;\n\t\tif ($prefixforautocompletemode == 'societe') $prefixforautocompletemode='company';\n\t\t$confkeyforautocompletemode=strtoupper($prefixforautocompletemode).'_USE_SEARCH_TO_SELECT';\t// For example COMPANY_USE_SEARCH_TO_SELECT\n\n\t\t$fieldstoshow='t.ref';\n\t\tif (! empty($objecttmp->fields))\t// For object that declare it, it is better to use declared fields ( like societe, contact, ...)\n\t\t{\n\t\t\t$tmpfieldstoshow='';\n\t\t\tforeach($objecttmp->fields as $key => $val)\n\t\t\t{\n\t\t\t\tif ($val['showoncombobox']) $tmpfieldstoshow.=($tmpfieldstoshow?',':'').'t.'.$key;\n\t\t\t}\n\t\t\tif ($tmpfieldstoshow) $fieldstoshow = $tmpfieldstoshow;\n\t\t}\n\n\t\t$out='';\n\t\t$outarray=array();\n\n\t\t$num=0;\n\n\t\t// Search data\n\t\t$sql = \"SELECT t.rowid, \".$fieldstoshow.\" FROM \".MAIN_DB_PREFIX .$objecttmp->table_element.\" as t\";\n\t\tif ($objecttmp->ismultientitymanaged == 2)\n\t\t\tif (!$user->rights->societe->client->voir && !$user->societe_id) $sql .= \", \".MAIN_DB_PREFIX.\"societe_commerciaux as sc\";\n\t\t$sql.= \" WHERE 1=1\";\n\t\tif(! empty($objecttmp->ismultientitymanaged)) $sql.= \" AND t.entity IN (\".getEntity($objecttmp->table_element).\")\";\n\t\tif ($objecttmp->ismultientitymanaged == 1 && ! empty($user->societe_id))\n\t\t{\n\t\t\tif ($objecttmp->element == 'societe') $sql.= \" AND t.rowid = \".$user->societe_id;\n\t\t\t\telse $sql.= \" AND t.fk_soc = \".$user->societe_id;\n\t\t}\n\t\tif ($searchkey != '') $sql.=natural_search(explode(',',$fieldstoshow), $searchkey);\n\t\tif ($objecttmp->ismultientitymanaged == 2)\n\t\t\tif (!$user->rights->societe->client->voir && !$user->societe_id) $sql.= \" AND t.rowid = sc.fk_soc AND sc.fk_user = \" .$user->id;\n\t\t$sql.=$this->db->order($fieldstoshow,\"ASC\");\n\t\t//$sql.=$this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\tif (! $forcecombo)\n\t\t\t{\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, null, $conf->global->$confkeyforautocompletemode);\n\t\t\t}\n\n\t\t\t// Construct $out and $outarray\n\t\t\t$out.= '<select id=\"'.$htmlname.'\" class=\"flat'.($morecss?' '.$morecss:'').'\"'.($moreparams?' '.$moreparams:'').' name=\"'.$htmlname.'\">'.\"\\n\";\n\n\t\t\t// Warning: Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'. Seems it is no more true with selec2 v4\n\t\t\t$textifempty='&nbsp;';\n\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (! empty($conf->global->$confkeyforautocompletemode))\n\t\t\t{\n\t\t\t\tif ($showempty && ! is_numeric($showempty)) $textifempty=$langs->trans($showempty);\n\t\t\t\telse $textifempty.=$langs->trans(\"All\");\n\t\t\t}\n\t\t\tif ($showempty) $out.= '<option value=\"-1\">'.$textifempty.'</option>'.\"\\n\";\n\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$label='';\n\t\t\t\t\t$tmparray=explode(',', $fieldstoshow);\n\t\t\t\t\tforeach($tmparray as $key => $val)\n\t\t\t\t\t{\n\t\t\t\t\t\t$val = preg_replace('/t\\./','',$val);\n\t\t\t\t\t\t$label .= (($label && $obj->$val)?' - ':'').$obj->$val;\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($outputmode))\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($preselectedvalue > 0 && $preselectedvalue == $obj->rowid)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\" selected>'.$label.'</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\">'.$label.'</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tarray_push($outarray, array('key'=>$obj->rowid, 'value'=>$label, 'label'=>$label));\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\t\t\t\t\tif (($i % 10) == 0) $out.=\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$out.= '</select>'.\"\\n\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\t$this->result=array('nbofelement'=>$num);\n\n\t\tif ($outputmode) return $outarray;\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tReturn a HTML select string, built from an array of key+value.\n\t *  Note: Do not apply langs->trans function on returned content, content may be entity encoded twice.\n\t *\n\t *\t@param\tstring\t\t\t$htmlname       Name of html select area. Must start with \"multi\" if this is a multiselect\n\t *\t@param\tarray\t\t\t$array          Array (key => value)\n\t *\t@param\tstring|string[]\t$id             Preselected key or preselected keys for multiselect\n\t *\t@param\tint|string\t\t$show_empty     0 no empty value allowed, 1 or string to add an empty value into list (key is -1 and value is '' or '&nbsp;' if 1, key is -1 and value is text if string), <0 to add an empty value with key that is this value.\n\t *\t@param\tint\t\t\t\t$key_in_label   1 to show key into label with format \"[key] value\"\n\t *\t@param\tint\t\t\t\t$value_as_key   1 to use value as key\n\t *\t@param  string\t\t\t$moreparam      Add more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *\t@param  int\t\t\t\t$translate\t\t1=Translate and encode value\n\t * \t@param\tint\t\t\t\t$maxlen\t\t\tLength maximum for labels\n\t * \t@param\tint\t\t\t\t$disabled\t\tHtml select box is disabled\n\t *  @param\tstring\t\t\t$sort\t\t\t'ASC' or 'DESC' = Sort on label, '' or 'NONE' or 'POS' = Do not sort, we keep original order\n\t *  @param\tstring\t\t\t$morecss\t\tAdd more class to css styles\n\t *  @param\tint\t\t\t\t$addjscombo\t\t    Add js combo\n\t *  @param  string          $moreparamonempty   Add more param on the empty option line. Not used if show_empty not set\n\t *  @param  int             $disablebademail    Check if an email is found into value and if not disable and colorize entry\n\t *  @param  int             $nohtmlescape       No html escaping.\n\t * \t@return\tstring\t\t\t\t\t\t\t    HTML select string.\n\t *  @see multiselectarray\n\t */\n\tstatic function selectarray($htmlname, $array, $id='', $show_empty=0, $key_in_label=0, $value_as_key=0, $moreparam='', $translate=0, $maxlen=0, $disabled=0, $sort='', $morecss='', $addjscombo=0, $moreparamonempty='',$disablebademail=0, $nohtmlescape=0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t// Do we want a multiselect ?\n\t\t//$jsbeautify = 0;\n\t\t//if (preg_match('/^multi/',$htmlname)) $jsbeautify = 1;\n\t\t$jsbeautify = 1;\n\n\t\tif ($value_as_key) $array=array_combine($array, $array);\n\n\t\t$out='';\n\n\t\t// Add code for jquery to use multiselect\n\t\tif ($addjscombo && $jsbeautify)\n\t\t{\n\t\t\t$minLengthToAutocomplete=0;\n\t\t\t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?(constant('REQUIRE_JQUERY_MULTISELECT')?constant('REQUIRE_JQUERY_MULTISELECT'):'select2'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n\n\t\t\t// Enhance with select2\n\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t$out .= ajax_combobox($htmlname);\n\t\t}\n\n\t\t$out.='<select id=\"'.preg_replace('/^\\./','',$htmlname).'\" '.($disabled?'disabled ':'').'class=\"flat '.(preg_replace('/^\\./','',$htmlname)).($morecss?' '.$morecss:'').'\"';\n\t\t$out.=' name=\"'.preg_replace('/^\\./','',$htmlname).'\" '.($moreparam?$moreparam:'');\n\t\t$out.='>';\n\n\t\tif ($show_empty)\n\t\t{\n\t\t\t$textforempty=' ';\n\t\t\tif (! empty($conf->use_javascript_ajax)) $textforempty='&nbsp;';\t// If we use ajaxcombo, we need &nbsp; here to avoid to have an empty element that is too small.\n\t\t\tif (! is_numeric($show_empty)) $textforempty=$show_empty;\n\t\t\t$out.='<option class=\"optiongrey\" '.($moreparamonempty?$moreparamonempty.' ':'').'value=\"'.($show_empty < 0 ? $show_empty : -1).'\"'.($id == $show_empty ?' selected':'').'>'.$textforempty.'</option>'.\"\\n\";\n\t\t}\n\n\t\tif (is_array($array))\n\t\t{\n\t\t\t// Translate\n\t\t\tif ($translate)\n\t\t\t{\n\t\t\t\tforeach($array as $key => $value)\n\t\t\t\t{\n\t\t\t\t\t$array[$key]=$langs->trans($value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Sort\n\t\t\tif ($sort == 'ASC') asort($array);\n\t\t\telseif ($sort == 'DESC') arsort($array);\n\n\t\t\tforeach($array as $key => $value)\n\t\t\t{\n\t\t\t\t$disabled=''; $style='';\n\t\t\t\tif (! empty($disablebademail))\n\t\t\t\t{\n\t\t\t\t\tif (! preg_match('/&lt;.+@.+&gt;/', $value))\n\t\t\t\t\t{\n\t\t\t\t\t\t//$value=preg_replace('/'.preg_quote($a,'/').'/', $b, $value);\n\t\t\t\t\t\t$disabled=' disabled';\n\t\t\t\t\t\t$style=' class=\"warning\"';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($key_in_label)\n\t\t\t\t{\n\t\t\t\t\tif (empty($nohtmlescape)) $selectOptionValue = dol_escape_htmltag($key.' - '.($maxlen?dol_trunc($value,$maxlen):$value));\n\t\t\t\t\telse $selectOptionValue = $key.' - '.($maxlen?dol_trunc($value,$maxlen):$value);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (empty($nohtmlescape)) $selectOptionValue = dol_escape_htmltag($maxlen?dol_trunc($value,$maxlen):$value);\n\t\t\t\t\telse $selectOptionValue = $maxlen?dol_trunc($value,$maxlen):$value;\n\t\t\t\t\tif ($value == '' || $value == '-') $selectOptionValue='&nbsp;';\n\t\t\t\t}\n\n\t\t\t\t$out.='<option value=\"'.$key.'\"';\n\t\t\t\t$out.=$style.$disabled;\n\t\t\t\tif ($id != '' && $id == $key && ! $disabled) $out.=' selected';\t\t// To preselect a value\n\t\t\t\tif ($nohtmlescape) $out.=' data-html=\"'.dol_escape_htmltag($selectOptionValue).'\"';\n\t\t\t\t$out.='>';\n\t\t\t\t//var_dump($selectOptionValue);\n\t\t\t\t$out.=$selectOptionValue;\n\t\t\t\t$out.=\"</option>\\n\";\n\t\t\t}\n\t\t}\n\n\t\t$out.=\"</select>\";\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tReturn a HTML select string, built from an array of key+value but content returned into select come from an Ajax call of an URL.\n\t *  Note: Do not apply langs->trans function on returned content of Ajax service, content may be entity encoded twice.\n\t *\n\t *\t@param\tstring\t$htmlname       \t\tName of html select area\n\t *\t@param\tstring\t$url\t\t\t\t\tUrl. Must return a json_encode of array(key=>array('text'=>'A text', 'url'=>'An url'), ...)\n\t *\t@param\tstring\t$id             \t\tPreselected key\n\t *\t@param  string\t$moreparam      \t\tAdd more parameters onto the select tag\n\t *\t@param  string\t$moreparamtourl \t\tAdd more parameters onto the Ajax called URL\n\t * \t@param\tint\t\t$disabled\t\t\t\tHtml select box is disabled\n\t *  @param\tint\t\t$minimumInputLength\t\tMinimum Input Length\n\t *  @param\tstring\t$morecss\t\t\t\tAdd more class to css styles\n\t *  @param  int     $callurlonselect        If set to 1, some code is added so an url return by the ajax is called when value is selected.\n\t *  @param  string  $placeholder            String to use as placeholder\n\t *  @param  integer $acceptdelayedhtml      1 if caller request to have html js content not returned but saved into global $delayedhtmlcontent (so caller can show it at end of page to avoid flash FOUC effect)\n\t * \t@return\tstring   \t\t\t\t\t\tHTML select string\n\t *  @see ajax_combobox in ajax.lib.php\n\t */\n\tstatic function selectArrayAjax($htmlname, $url, $id='', $moreparam='', $moreparamtourl='', $disabled=0, $minimumInputLength=1, $morecss='', $callurlonselect=0, $placeholder='', $acceptdelayedhtml=0)\n\t{\n\t\tglobal $conf, $langs;\n\t\tglobal $delayedhtmlcontent;\n\n\t\t// TODO Use an internal dolibarr component instead of select2\n\t\tif (empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) && ! defined('REQUIRE_JQUERY_MULTISELECT')) return '';\n\n\t\t$out='<select type=\"text\" class=\"'.$htmlname.($morecss?' '.$morecss:'').'\" '.($moreparam?$moreparam.' ':'').'name=\"'.$htmlname.'\"></select>';\n\n\t\t$tmpplugin='select2';\n\t\t$outdelayed=\"\\n\".'<!-- JS CODE TO ENABLE '.$tmpplugin.' for id '.$htmlname.' -->\n\t    \t<script type=\"text/javascript\">\n\t    \t$(document).ready(function () {\n\n    \t        '.($callurlonselect ? 'var saveRemoteData = [];':'').'\n\n                $(\".'.$htmlname.'\").select2({\n\t\t\t    \tajax: {\n\t\t\t\t    \tdir: \"ltr\",\n\t\t\t\t    \turl: \"'.$url.'\",\n\t\t\t\t    \tdataType: \\'json\\',\n\t\t\t\t    \tdelay: 250,\n\t\t\t\t    \tdata: function (params) {\n\t\t\t\t    \t\treturn {\n\t\t\t\t\t\t    \tq: params.term, \t// search term\n\t\t\t\t    \t\t\tpage: params.page\n\t\t\t\t    \t\t};\n\t\t\t    \t\t},\n\t\t\t    \t\tprocessResults: function (data) {\n\t\t\t    \t\t\t// parse the results into the format expected by Select2.\n\t\t\t    \t\t\t// since we are using custom formatting functions we do not need to alter the remote JSON data\n\t\t\t    \t\t\t//console.log(data);\n\t\t\t\t\t\t\tsaveRemoteData = data;\n\t\t\t\t    \t    /* format json result for select2 */\n\t\t\t\t    \t    result = []\n\t\t\t\t    \t    $.each( data, function( key, value ) {\n\t\t\t\t    \t       result.push({id: key, text: value.text});\n                            });\n\t\t\t    \t\t\t//return {results:[{id:\\'none\\', text:\\'aa\\'}, {id:\\'rrr\\', text:\\'Red\\'},{id:\\'bbb\\', text:\\'Search a into projects\\'}], more:false}\n\t\t\t    \t\t\t//console.log(result);\n\t\t\t    \t\t\treturn {results: result, more: false}\n\t\t\t    \t\t},\n\t\t\t    \t\tcache: true\n\t\t\t    \t},\n\t \t\t\t\tlanguage: select2arrayoflanguage,\n\t\t\t\t\tcontainerCssClass: \\':all:\\',\t\t\t\t\t/* Line to add class of origin SELECT propagated to the new <span class=\"select2-selection...> tag */\n\t\t\t\t    placeholder: \"'.dol_escape_js($placeholder).'\",\n\t\t\t    \tescapeMarkup: function (markup) { return markup; }, \t// let our custom formatter work\n\t\t\t    \tminimumInputLength: '.$minimumInputLength.',\n\t\t\t        formatResult: function(result, container, query, escapeMarkup) {\n                        return escapeMarkup(result.text);\n                    },\n\t\t\t    });\n\n                '.($callurlonselect ? '\n                /* Code to execute a GET when we select a value */\n                $(\".'.$htmlname.'\").change(function() {\n\t\t\t    \tvar selected = $(\".'.$htmlname.'\").val();\n                \tconsole.log(\"We select \"+selected)\n\t\t\t        $(\".'.$htmlname.'\").val(\"\");  /* reset visible combo value */\n    \t\t\t    $.each( saveRemoteData, function( key, value ) {\n    \t\t\t\t        if (key == selected)\n    \t\t\t            {\n    \t\t\t                 console.log(\"selectArrayAjax - Do a redirect to \"+value.url)\n    \t\t\t                 location.assign(value.url);\n    \t\t\t            }\n                    });\n    \t\t\t});' : '' ) . '\n\n    \t   });\n\t       </script>';\n\n\t\tif ($acceptdelayedhtml)\n\t\t{\n\t\t\t$delayedhtmlcontent.=$outdelayed;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$out.=$outdelayed;\n\t\t}\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tShow a multiselect form from an array.\n\t *\n\t *\t@param\tstring\t$htmlname\t\tName of select\n\t *\t@param\tarray\t$array\t\t\tArray with key+value\n\t *\t@param\tarray\t$selected\t\tArray with key+value preselected\n\t *\t@param\tint\t\t$key_in_label   1 pour afficher la key dans la valeur \"[key] value\"\n\t *\t@param\tint\t\t$value_as_key   1 to use value as key\n\t *\t@param  string\t$morecss        Add more css style\n\t *\t@param  int\t\t$translate\t\tTranslate and encode value\n\t *  @param\tint\t\t$width\t\t\tForce width of select box. May be used only when using jquery couch. Example: 250, 95%\n\t *  @param\tstring\t$moreattrib\t\tAdd more options on select component. Example: 'disabled'\n\t *  @param\tstring\t$elemtype\t\tType of element we show ('category', ...)\n\t *\t@return\tstring\t\t\t\t\tHTML multiselect string\n\t *  @see selectarray\n\t */\n\tstatic function multiselectarray($htmlname, $array, $selected=array(), $key_in_label=0, $value_as_key=0, $morecss='', $translate=0, $width=0, $moreattrib='',$elemtype='')\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$out = '';\n\n\t\t// Add code for jquery to use multiselect\n\t\tif (! empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT'))\n\t\t{\n\t\t\t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?constant('REQUIRE_JQUERY_MULTISELECT'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n   \t\t\t$out.=\"\\n\".'<!-- JS CODE TO ENABLE '.$tmpplugin.' for id '.$htmlname.' -->\n    \t\t\t<script type=\"text/javascript\">\n\t    \t\t\tfunction formatResult(record) {'.\"\\n\";\n\t\t\t\t\t\tif ($elemtype == 'category')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.='\t//return \\'<span><img src=\"'.DOL_URL_ROOT.'/theme/eldy/img/object_category.png'.'\"> <a href=\"'.DOL_URL_ROOT.'/categories/viewcat.php?type=0&id=\\'+record.id+\\'\">\\'+record.text+\\'</a></span>\\';\n\t\t\t\t\t\t\t\t  \treturn \\'<span><img src=\"'.DOL_URL_ROOT.'/theme/eldy/img/object_category.png'.'\"> \\'+record.text+\\'</span>\\';';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.='return record.text;';\n\t\t\t\t\t\t}\n\t\t\t$out.= '\t};\n    \t\t\t\tfunction formatSelection(record) {'.\"\\n\";\n\t\t\t\t\t\tif ($elemtype == 'category')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.='\t//return \\'<span><img src=\"'.DOL_URL_ROOT.'/theme/eldy/img/object_category.png'.'\"> <a href=\"'.DOL_URL_ROOT.'/categories/viewcat.php?type=0&id=\\'+record.id+\\'\">\\'+record.text+\\'</a></span>\\';\n\t\t\t\t\t\t\t\t  \treturn \\'<span><img src=\"'.DOL_URL_ROOT.'/theme/eldy/img/object_category.png'.'\"> \\'+record.text+\\'</span>\\';';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.='return record.text;';\n\t\t\t\t\t\t}\n\t\t\t$out.= '\t};\n\t    \t\t\t$(document).ready(function () {\n    \t\t\t\t\t$(\\'#'.$htmlname.'\\').'.$tmpplugin.'({\n    \t\t\t\t\t\tdir: \\'ltr\\',\n\t\t\t\t\t\t\t// Specify format function for dropdown item\n\t\t\t\t\t\t\tformatResult: formatResult,\n    \t\t\t\t\t \ttemplateResult: formatResult,\t\t/* For 4.0 */\n\t\t\t\t\t\t\t// Specify format function for selected item\n\t\t\t\t\t\t\tformatSelection: formatSelection,\n    \t\t\t\t\t \ttemplateResult: formatSelection\t\t/* For 4.0 */\n    \t\t\t\t\t});\n    \t\t\t\t});\n    \t\t\t</script>';\n\t\t}\n\n\t\t// Try also magic suggest\n\n\t\t$out .= '<select id=\"'.$htmlname.'\" class=\"multiselect'.($morecss?' '.$morecss:'').'\" multiple name=\"'.$htmlname.'[]\"'.($moreattrib?' '.$moreattrib:'').($width?' style=\"width: '.(preg_match('/%/',$width)?$width:$width.'px').'\"':'').'>'.\"\\n\";\n\t\tif (is_array($array) && ! empty($array))\n\t\t{\n\t\t\tif ($value_as_key) $array=array_combine($array, $array);\n\n\t\t\tif (! empty($array))\n\t\t\t{\n\t\t\t\tforeach ($array as $key => $value)\n\t\t\t\t{\n\t\t\t\t\t$out.= '<option value=\"'.$key.'\"';\n\t\t\t\t\tif (is_array($selected) && ! empty($selected) && in_array($key, $selected) && !empty($key))\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= ' selected';\n\t\t\t\t\t}\n\t\t\t\t\t$out.= '>';\n\n\t\t\t\t\t$newval = ($translate ? $langs->trans($value) : $value);\n\t\t\t\t\t$newval = ($key_in_label ? $key.' - '.$newval : $newval);\n\t\t\t\t\t$out.= dol_htmlentitiesbr($newval);\n\t\t\t\t\t$out.= '</option>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$out.= '</select>'.\"\\n\";\n\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tShow a multiselect dropbox from an array.\n\t *\n\t *\t@param\tstring\t$htmlname\t\tName of HTML field\n\t *\t@param\tarray\t$array\t\t\tArray with array of fields we could show. This array may be modified according to setup of user.\n\t *  @param  string  $varpage        Id of context for page. Can be set by caller with $varpage=(empty($contextpage)?$_SERVER[\"PHP_SELF\"]:$contextpage);\n\t *\t@return\tstring\t\t\t\t\tHTML multiselect string\n\t *  @see selectarray\n\t */\n\tstatic function multiSelectArrayWithCheckbox($htmlname, &$array, $varpage)\n\t{\n\t\tglobal $conf,$langs,$user;\n\n\t\tif (! empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) return '';\n\n\t\t$tmpvar=\"MAIN_SELECTEDFIELDS_\".$varpage;\n\t\tif (! empty($user->conf->$tmpvar))\n\t\t{\n\t\t\t$tmparray=explode(',', $user->conf->$tmpvar);\n\t\t\tforeach($array as $key => $val)\n\t\t\t{\n\t\t\t\t//var_dump($key);\n\t\t\t\t//var_dump($tmparray);\n\t\t\t\tif (in_array($key, $tmparray)) $array[$key]['checked']=1;\n\t\t\t\telse $array[$key]['checked']=0;\n\t\t\t}\n\t\t}\n\t\t//var_dump($array);\n\n\t\t$lis='';\n\t\t$listcheckedstring='';\n\n\t\tforeach($array as $key => $val)\n\t\t{\n\t\t   /* var_dump($val);\n            var_dump(array_key_exists('enabled', $val));\n            var_dump(!$val['enabled']);*/\n\t\t   if (array_key_exists('enabled', $val) && isset($val['enabled']) && ! $val['enabled'])\n\t\t   {\n\t\t\t   unset($array[$key]);     // We don't want this field\n\t\t\t   continue;\n\t\t   }\n\t\t   if ($val['label'])\n\t\t   {\n\t\t\t   $lis.='<li><input type=\"checkbox\" value=\"'.$key.'\"'.(empty($val['checked'])?'':' checked=\"checked\"').'/>'.dol_escape_htmltag($langs->trans($val['label'])).'</li>';\n\t\t\t   $listcheckedstring.=(empty($val['checked'])?'':$key.',');\n\t\t   }\n\t\t}\n\n\t\t$out ='<!-- Component multiSelectArrayWithCheckbox '.$htmlname.' -->\n\n        <dl class=\"dropdown\">\n            <dt>\n            <a href=\"#\">\n              '.img_picto('','list').'\n            </a>\n            <input type=\"hidden\" class=\"'.$htmlname.'\" name=\"'.$htmlname.'\" value=\"'.$listcheckedstring.'\">\n            </dt>\n            <dd class=\"dropowndd\">\n                <div class=\"multiselectcheckbox'.$htmlname.'\">\n                    <ul class=\"ul'.$htmlname.'\">\n                    '.$lis.'\n                    </ul>\n                </div>\n            </dd>\n        </dl>\n\n        <script type=\"text/javascript\">\n          jQuery(document).ready(function () {\n              $(\\'.multiselectcheckbox'.$htmlname.' input[type=\"checkbox\"]\\').on(\\'click\\', function () {\n                  console.log(\"A new field was added/removed\")\n                  $(\"input:hidden[name=formfilteraction]\").val(\\'listafterchangingselectedfields\\')\n                  var title = $(this).val() + \",\";\n                  if ($(this).is(\\':checked\\')) {\n                      $(\\'.'.$htmlname.'\\').val(title + $(\\'.'.$htmlname.'\\').val());\n                  }\n                  else {\n                      $(\\'.'.$htmlname.'\\').val( $(\\'.'.$htmlname.'\\').val().replace(title, \\'\\') )\n                  }\n                  // Now, we submit page\n                  $(this).parents(\\'form:first\\').submit();\n              });\n           });\n        </script>\n\n        ';\n\t\treturn $out;\n\t}\n\n\t/**\n\t * \tRender list of categories linked to object with id $id and type $type\n\t *\n\t * \t@param\t\tint\t\t$id\t\t\t\tId of object\n\t * \t@param\t\tstring\t$type\t\t\tType of category ('member', 'customer', 'supplier', 'product', 'contact'). Old mode (0, 1, 2, ...) is deprecated.\n\t *  @param\t\tint\t\t$rendermode\t\t0=Default, use multiselect. 1=Emulate multiselect (recommended)\n\t * \t@return\t\tstring\t\t\t\t\tString with categories\n\t */\n\tfunction showCategories($id, $type, $rendermode=0)\n\t{\n\t\tglobal $db;\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\n\t\t$cat = new Categorie($db);\n\t\t$categories = $cat->containing($id, $type);\n\n\t\tif ($rendermode == 1)\n\t\t{\n\t\t\t$toprint = array();\n\t\t\tforeach($categories as $c)\n\t\t\t{\n\t\t\t\t$ways = $c->print_all_ways();       // $ways[0] = \"ccc2 >> ccc2a >> ccc2a1\" with html formated text\n\t\t\t\tforeach($ways as $way)\n\t\t\t\t{\n\t\t\t\t\t$toprint[] = '<li class=\"select2-search-choice-dolibarr noborderoncategories\"'.($c->color?' style=\"background: #'.$c->color.';\"':' style=\"background: #aaa\"').'>'.img_object('','category').' '.$way.'</li>';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '<div class=\"select2-container-multi-dolibarr\" style=\"width: 90%;\"><ul class=\"select2-choices-dolibarr\">'.implode(' ', $toprint).'</ul></div>';\n\t\t}\n\n\t\tif ($rendermode == 0)\n\t\t{\n\t\t\t$cate_arbo = $this->select_all_categories($type, '', 'parent', 64, 0, 1);\n\t\t\tforeach($categories as $c) {\n\t\t\t\t$arrayselected[] = $c->id;\n\t\t\t}\n\n\t\t\treturn $this->multiselectarray('categories', $cate_arbo, $arrayselected, '', 0, '', 0, '100%', 'disabled', 'category');\n\t\t}\n\n\t\treturn 'ErrorBadValueForParameterRenderMode';\t// Should not happened\n\t}\n\n\n\t/**\n\t *  Show linked object block.\n\t *\n\t *  @param\tCommonObject\t$object\t\t      Object we want to show links to\n\t *  @param  string          $morehtmlright    More html to show on right of title\n\t *  @return\tint\t\t\t\t\t\t\t      <0 if KO, >=0 if OK\n\t */\n\tfunction showLinkedObjectBlock($object, $morehtmlright='')\n\t{\n\t\tglobal $conf,$langs,$hookmanager;\n\t\tglobal $bc;\n\n\t\t$object->fetchObjectLinked();\n\n\t\t// Bypass the default method\n\t\t$hookmanager->initHooks(array('commonobject'));\n\t\t$parameters=array();\n\t\t$reshook=$hookmanager->executeHooks('showLinkedObjectBlock',$parameters,$object,$action);    // Note that $action and $object may have been modified by hook\n\n\t\tif (empty($reshook))\n\t\t{\n\t\t\t$nbofdifferenttypes = count($object->linkedObjects);\n\n\t\t\tprint '<!-- showLinkedObjectBlock -->';\n\t\t\tprint load_fiche_titre($langs->trans('RelatedObjects'), $morehtmlright, '', 0, 0, 'showlinkedobjectblock');\n\n\n\t\t\tprint '<div class=\"div-table-responsive-no-min\">';\n\t\t\tprint '<table class=\"noborder allwidth\">';\n\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\tprint '<td>'.$langs->trans(\"Type\").'</td>';\n\t\t\tprint '<td>'.$langs->trans(\"Ref\").'</td>';\n\t\t\tprint '<td align=\"center\"></td>';\n\t\t\tprint '<td align=\"center\">'.$langs->trans(\"Date\").'</td>';\n\t\t\tprint '<td align=\"right\">'.$langs->trans(\"AmountHTShort\").'</td>';\n\t\t\tprint '<td align=\"right\">'.$langs->trans(\"Status\").'</td>';\n\t\t\tprint '<td></td>';\n\t\t\tprint '</tr>';\n\n\t\t\t$nboftypesoutput=0;\n\n\t\t\tforeach($object->linkedObjects as $objecttype => $objects)\n\t\t\t{\n\t\t\t\t$tplpath = $element = $subelement = $objecttype;\n\n\t\t\t\tif ($objecttype != 'supplier_proposal' && preg_match('/^([^_]+)_([^_]+)/i',$objecttype,$regs))\n\t\t\t\t{\n\t\t\t\t\t$element = $regs[1];\n\t\t\t\t\t$subelement = $regs[2];\n\t\t\t\t\t$tplpath = $element.'/'.$subelement;\n\t\t\t\t}\n\t\t\t\t$tplname='linkedobjectblock';\n\n\t\t\t\t// To work with non standard path\n\t\t\t\tif ($objecttype == 'facture')          {\n\t\t\t\t\t$tplpath = 'compta/'.$element;\n\t\t\t\t\tif (empty($conf->facture->enabled)) continue;\t// Do not show if module disabled\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'facturerec')          {\n\t\t\t\t\t$tplpath = 'compta/facture';\n\t\t\t\t\t$tplname = 'linkedobjectblockForRec';\n\t\t\t\t\tif (empty($conf->facture->enabled)) continue;\t// Do not show if module disabled\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'propal')           {\n\t\t\t\t\t$tplpath = 'comm/'.$element;\n\t\t\t\t\tif (empty($conf->propal->enabled)) continue;\t// Do not show if module disabled\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'supplier_proposal')           {\n\t\t\t\t\tif (empty($conf->supplier_proposal->enabled)) continue;\t// Do not show if module disabled\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'shipping' || $objecttype == 'shipment') {\n\t\t\t\t\t$tplpath = 'expedition';\n\t\t\t\t\tif (empty($conf->expedition->enabled)) continue;\t// Do not show if module disabled\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'delivery')         {\n\t\t\t\t\t$tplpath = 'livraison';\n\t\t\t\t\tif (empty($conf->expedition->enabled)) continue;\t// Do not show if module disabled\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'invoice_supplier') {\n\t\t\t\t\t$tplpath = 'fourn/facture';\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'order_supplier')   {\n\t\t\t\t\t$tplpath = 'fourn/commande';\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'expensereport')   {\n\t\t\t\t\t$tplpath = 'expensereport';\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'subscription')   {\n\t\t\t\t\t$tplpath = 'adherents';\n\t\t\t\t}\n\n\t\t\t\tglobal $linkedObjectBlock;\n\t\t\t\t$linkedObjectBlock = $objects;\n\n\n\t\t\t\t// Output template part (modules that overwrite templates must declare this into descriptor)\n\t\t\t\t$dirtpls=array_merge($conf->modules_parts['tpl'],array('/'.$tplpath.'/tpl'));\n\t\t\t\tforeach($dirtpls as $reldir)\n\t\t\t\t{\n\t\t\t\t\tif ($nboftypesoutput == ($nbofdifferenttypes - 1))    // No more type to show after\n\t\t\t\t\t{\n\t\t\t\t\t\tglobal $noMoreLinkedObjectBlockAfter;\n\t\t\t\t\t\t$noMoreLinkedObjectBlockAfter=1;\n\t\t\t\t\t}\n\n\t\t\t\t\t$res=@include dol_buildpath($reldir.'/'.$tplname.'.tpl.php');\n\t\t\t\t\tif ($res)\n\t\t\t\t\t{\n\t\t\t\t\t\t$nboftypesoutput++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (! $nboftypesoutput)\n\t\t\t{\n\t\t\t\tprint '<tr><td class=\"impair opacitymedium\" colspan=\"7\">'.$langs->trans(\"None\").'</td></tr>';\n\t\t\t}\n\n\t\t\tprint '</table>';\n\t\t\tprint '</div>';\n\n\t\t\treturn $nbofdifferenttypes;\n\t\t}\n\t}\n\n\t/**\n\t *  Show block with links to link to other objects.\n\t *\n\t *  @param\tCommonObject\t$object\t\t\t\tObject we want to show links to\n\t *  @param\tarray\t\t\t$restrictlinksto\tRestrict links to some elements, for exemple array('order') or array('supplier_order'). null or array() if no restriction.\n\t *  @param\tarray\t\t\t$excludelinksto\t\tDo not show links of this type, for exemple array('order') or array('supplier_order'). null or array() if no exclusion.\n\t *  @return\tstring\t\t\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tfunction showLinkToObjectBlock($object, $restrictlinksto=array(), $excludelinksto=array())\n\t{\n\t\tglobal $conf, $langs, $hookmanager;\n\t\tglobal $bc;\n\n\t\t$linktoelem='';\n\t\t$linktoelemlist='';\n\n\t\tif (! is_object($object->thirdparty)) $object->fetch_thirdparty();\n\n\t\t$possiblelinks=array();\n\t\tif (is_object($object->thirdparty) && ! empty($object->thirdparty->id) && $object->thirdparty->id > 0)\n\t\t{\n\t\t\t$listofidcompanytoscan=$object->thirdparty->id;\n\t\t\tif (($object->thirdparty->parent > 0) && ! empty($conf->global->THIRDPARTY_INCLUDE_PARENT_IN_LINKTO)) $listofidcompanytoscan.=','.$object->thirdparty->parent;\n\t\t\tif (($object->fk_project > 0) && ! empty($conf->global->THIRDPARTY_INCLUDE_PROJECT_THIRDPARY_IN_LINKTO))\n\t\t\t{\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n\t\t\t\t$tmpproject=new Project($this->db);\n\t\t\t\t$tmpproject->fetch($object->fk_project);\n\t\t\t\tif ($tmpproject->socid > 0 && ($tmpproject->socid != $object->thirdparty->id)) $listofidcompanytoscan.=','.$tmpproject->socid;\n\t\t\t\tunset($tmpproject);\n\t\t\t}\n\n\t\t\t$possiblelinks=array(\n\t\t\t\t'propal'=>array('enabled'=>$conf->propal->enabled, 'perms'=>1, 'label'=>'LinkToProposal', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_client, t.total_ht FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"propal as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('propal').')'),\n\t\t\t\t'order'=>array('enabled'=>$conf->commande->enabled, 'perms'=>1, 'label'=>'LinkToOrder', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_client, t.total_ht FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"commande as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('commande').')'),\n\t\t\t\t'invoice'=>array('enabled'=>$conf->facture->enabled, 'perms'=>1, 'label'=>'LinkToInvoice', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.facnumber as ref, t.ref_client, t.total as total_ht FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"facture as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('facture').')'),\n\t\t\t\t'contrat'=>array('enabled'=>$conf->contrat->enabled , 'perms'=>1, 'label'=>'LinkToContract', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_supplier, '' as total_ht FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"contrat as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('contract').')'),\n\t\t\t\t'fichinter'=>array('enabled'=>$conf->ficheinter->enabled, 'perms'=>1, 'label'=>'LinkToIntervention', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"fichinter as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('intervention').')'),\n\t\t\t\t'supplier_proposal'=>array('enabled'=>$conf->supplier_proposal->enabled , 'perms'=>1, 'label'=>'LinkToSupplierProposal', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, '' as ref_supplier, t.total_ht FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"supplier_proposal as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('supplier_proposal').')'),\n\t\t\t\t'order_supplier'=>array('enabled'=>$conf->supplier_order->enabled , 'perms'=>1, 'label'=>'LinkToSupplierOrder', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_supplier, t.total_ht FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"commande_fournisseur as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('commande_fournisseur').')'),\n\t\t\t\t'invoice_supplier'=>array('enabled'=>$conf->supplier_invoice->enabled , 'perms'=>1, 'label'=>'LinkToSupplierInvoice', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_supplier, t.total_ht FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"facture_fourn as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('facture_fourn').')')\n\t\t\t);\n\t\t}\n\n\t\tglobal $action;\n\n\t\t// Can complete the possiblelink array\n\t\t$hookmanager->initHooks(array('commonobject'));\n\t\t$parameters=array();\n\t\t$reshook=$hookmanager->executeHooks('showLinkToObjectBlock',$parameters,$object,$action);    // Note that $action and $object may have been modified by hook\n\t\tif (empty($reshook))\n\t\t{\n\t\t\tif (is_array($hookmanager->resArray) && count($hookmanager->resArray))\n\t\t\t{\n\t\t\t\t$possiblelinks=array_merge($possiblelinks, $hookmanager->resArray);\n\t\t\t}\n\t\t}\n\t\telse if ($reshook > 0)\n\t\t{\n\t\t\tif (is_array($hookmanager->resArray) && count($hookmanager->resArray))\n\t\t\t{\n\t\t\t\t$possiblelinks=$hookmanager->resArray;\n\t\t\t}\n\t\t}\n\n\t\tforeach($possiblelinks as $key => $possiblelink)\n\t\t{\n\t\t\t$num = 0;\n\n\t\t\tif (empty($possiblelink['enabled'])) continue;\n\n\t\t\tif (! empty($possiblelink['perms']) && (empty($restrictlinksto) || in_array($key, $restrictlinksto)) && (empty($excludelinksto) || ! in_array($key, $excludelinksto)))\n\t\t\t{\n\t\t\t\tprint '<div id=\"'.$key.'list\"'.(empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)?' style=\"display:none\"':'').'>';\n\t\t\t\t$sql = $possiblelink['sql'];\n\n\t\t\t\t$resqllist = $this->db->query($sql);\n\t\t\t\tif ($resqllist)\n\t\t\t\t{\n\t\t\t\t\t$num = $this->db->num_rows($resqllist);\n\t\t\t\t\t$i = 0;\n\n\t\t\t\t\tprint '<br><form action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"POST\" name=\"formlinked'.$key.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"id\" value=\"'.$object->id.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"addlink\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"addlink\" value=\"'.$key.'\">';\n\t\t\t\t\tprint '<table class=\"noborder\">';\n\t\t\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\t\t\tprint '<td class=\"nowrap\"></td>';\n\t\t\t\t\tprint '<td align=\"center\">' . $langs->trans(\"Ref\") . '</td>';\n\t\t\t\t\tprint '<td align=\"left\">' . $langs->trans(\"RefCustomer\") . '</td>';\n\t\t\t\t\tprint '<td align=\"right\">' . $langs->trans(\"AmountHTShort\") . '</td>';\n\t\t\t\t\tprint '<td align=\"left\">' . $langs->trans(\"Company\") . '</td>';\n\t\t\t\t\tprint '</tr>';\n\t\t\t\t\twhile ($i < $num)\n\t\t\t\t\t{\n\t\t\t\t\t\t$objp = $this->db->fetch_object($resqlorderlist);\n\n\t\t\t\t\t\t$var = ! $var;\n\t\t\t\t\t\tprint '<tr ' . $bc [$var] . '>';\n\t\t\t\t\t\tprint '<td aling=\"left\">';\n\t\t\t\t\t\tprint '<input type=\"radio\" name=\"idtolinkto\" value=' . $objp->rowid . '>';\n\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t\tprint '<td align=\"center\">' . $objp->ref . '</td>';\n\t\t\t\t\t\tprint '<td>' . $objp->ref_client . '</td>';\n\t\t\t\t\t\tprint '<td align=\"right\">' . price($objp->total_ht) . '</td>';\n\t\t\t\t\t\tprint '<td>' . $objp->name . '</td>';\n\t\t\t\t\t\tprint '</tr>';\n\t\t\t\t\t\t$i++;\n\t\t\t\t\t}\n\t\t\t\t\tprint '</table>';\n\t\t\t\t\tprint '<div class=\"center\"><input type=\"submit\" class=\"button valignmiddle\" value=\"' . $langs->trans('ToLink') . '\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"' . $langs->trans('Cancel') . '\"></div>';\n\n\t\t\t\t\tprint '</form>';\n\t\t\t\t\t$this->db->free($resqllist);\n\t\t\t\t} else {\n\t\t\t\t\tdol_print_error($this->db);\n\t\t\t\t}\n\t\t\t\tprint '</div>';\n\t\t\t\tif ($num > 0)\n\t\t\t\t{\n\t\t\t\t}\n\n\t\t\t\t//$linktoelem.=($linktoelem?' &nbsp; ':'');\n\t\t\t\tif ($num > 0) $linktoelemlist.='<li><a href=\"#linkto'.$key.'\" class=\"linkto dropdowncloseonclick\" rel=\"'.$key.'\">' . $langs->trans($possiblelink['label']) .' ('.$num.')</a></li>';\n\t\t\t\t//else $linktoelem.=$langs->trans($possiblelink['label']);\n\t\t\t\telse $linktoelemlist.='<li><span class=\"linktodisabled\">' . $langs->trans($possiblelink['label']) . ' (0)</span></li>';\n\t\t\t}\n\t\t}\n\n\t\tif ($linktoelemlist)\n\t\t{\n\t\t\t$linktoelem='\n    \t\t<dl class=\"dropdown\" id=\"linktoobjectname\">\n    \t\t<dt><a href=\"#linktoobjectname\">'.$langs->trans(\"LinkTo\").'...</a></dt>\n    \t\t<dd>\n    \t\t<div class=\"multiselectlinkto\">\n    \t\t<ul class=\"ulselectedfields\">'.$linktoelemlist.'\n    \t\t</ul>\n    \t\t</div>\n    \t\t</dd>\n    \t\t</dl>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$linktoelem='';\n\t\t}\n\n\t\tprint '<!-- Add js to show linkto box -->\n\t\t\t\t<script type=\"text/javascript\" language=\"javascript\">\n\t\t\t\tjQuery(document).ready(function() {\n\t\t\t\t\tjQuery(\".linkto\").click(function() {\n\t\t\t\t\t\tconsole.log(\"We choose to show/hide link for rel=\"+jQuery(this).attr(\\'rel\\'));\n\t\t\t\t\t    jQuery(\"#\"+jQuery(this).attr(\\'rel\\')+\"list\").toggle();\n\t\t\t\t\t\tjQuery(this).toggle();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t</script>\n\t\t';\n\n\t\treturn $linktoelem;\n\t}\n\n\t/**\n\t *\tReturn an html string with a select combo box to choose yes or no\n\t *\n\t *\t@param\tstring\t\t$htmlname\t\tName of html select field\n\t *\t@param\tstring\t\t$value\t\t\tPre-selected value\n\t *\t@param\tint\t\t\t$option\t\t\t0 return yes/no, 1 return 1/0\n\t *\t@param\tbool\t\t$disabled\t\ttrue or false\n\t *  @param\tint      \t$useempty\t\t1=Add empty line\n\t *\t@return\tstring\t\t\t\t\t\tSee option\n\t */\n\tfunction selectyesno($htmlname, $value='', $option=0, $disabled=false, $useempty='')\n\t{\n\t\tglobal $langs;\n\n\t\t$yes=\"yes\"; $no=\"no\";\n\t\tif ($option)\n\t\t{\n\t\t\t$yes=\"1\";\n\t\t\t$no=\"0\";\n\t\t}\n\n\t\t$disabled = ($disabled ? ' disabled' : '');\n\n\t\t$resultyesno = '<select class=\"flat\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\"'.$disabled.'>'.\"\\n\";\n\t\tif ($useempty) $resultyesno .= '<option value=\"-1\"'.(($value < 0)?' selected':'').'>&nbsp;</option>'.\"\\n\";\n\t\tif ((\"$value\" == 'yes') || ($value == 1))\n\t\t{\n\t\t\t$resultyesno .= '<option value=\"'.$yes.'\" selected>'.$langs->trans(\"Yes\").'</option>'.\"\\n\";\n\t\t\t$resultyesno .= '<option value=\"'.$no.'\">'.$langs->trans(\"No\").'</option>'.\"\\n\";\n\t\t}\n\t\telse\n\t   {\n\t   \t\t$selected=(($useempty && $value != '0' && $value != 'no')?'':' selected');\n\t\t\t$resultyesno .= '<option value=\"'.$yes.'\">'.$langs->trans(\"Yes\").'</option>'.\"\\n\";\n\t\t\t$resultyesno .= '<option value=\"'.$no.'\"'.$selected.'>'.$langs->trans(\"No\").'</option>'.\"\\n\";\n\t\t}\n\t\t$resultyesno .= '</select>'.\"\\n\";\n\t\treturn $resultyesno;\n\t}\n\n\n\n\t/**\n\t *  Return list of export templates\n\t *\n\t *  @param\tstring\t$selected          Id modele pre-selectionne\n\t *  @param  string\t$htmlname          Name of HTML select\n\t *  @param  string\t$type              Type of searched templates\n\t *  @param  int\t\t$useempty          Affiche valeur vide dans liste\n\t *  @return\tvoid\n\t */\n\tfunction select_export_model($selected='',$htmlname='exportmodelid',$type='',$useempty=0)\n\t{\n\n\t\t$sql = \"SELECT rowid, label\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"export_model\";\n\t\t$sql.= \" WHERE type = '\".$type.\"'\";\n\t\t$sql.= \" ORDER BY rowid\";\n\t\t$result = $this->db->query($sql);\n\t\tif ($result)\n\t\t{\n\t\t\tprint '<select class=\"flat\" name=\"'.$htmlname.'\">';\n\t\t\tif ($useempty)\n\t\t\t{\n\t\t\t\tprint '<option value=\"-1\">&nbsp;</option>';\n\t\t\t}\n\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\tif ($selected == $obj->rowid)\n\t\t\t\t{\n\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">';\n\t\t\t\t}\n\t\t\t\tprint $obj->label;\n\t\t\t\tprint '</option>';\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tprint \"</select>\";\n\t\t}\n\t\telse {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *    Return a HTML area with the reference of object and a navigation bar for a business object\n\t *    Note: To complete search with a particular filter on select, you can set $object->next_prev_filter set to define SQL criterias.\n\t *\n\t *    @param\tobject\t$object\t\t\tObject to show.\n\t *    @param\tstring\t$paramid   \t\tName of parameter to use to name the id into the URL next/previous link.\n\t *    @param\tstring\t$morehtml  \t\tMore html content to output just before the nav bar.\n\t *    @param\tint\t\t$shownav\t  \tShow Condition (navigation is shown if value is 1).\n\t *    @param\tstring\t$fieldid   \t\tName of field id into database to use for select next and previous (we make the select max and min on this field compared to $object->ref). Use 'none' to disable next/prev.\n\t *    @param\tstring\t$fieldref   \tName of field ref of object (object->ref) to show or 'none' to not show ref.\n\t *    @param\tstring\t$morehtmlref  \tMore html to show after ref.\n\t *    @param\tstring\t$moreparam  \tMore param to add in nav link url. Must start with '&...'.\n\t *\t  @param\tint\t\t$nodbprefix\t\tDo not include DB prefix to forge table name.\n\t *\t  @param\tstring\t$morehtmlleft\tMore html code to show before ref.\n\t *\t  @param\tstring\t$morehtmlstatus\tMore html code to show under navigation arrows (status place).\n\t *\t  @param\tstring\t$morehtmlright\tMore html code to show after ref.\n\t * \t  @return\tstring    \t\t\t\tPortion HTML with ref + navigation buttons\n\t */\n\tfunction showrefnav($object,$paramid,$morehtml='',$shownav=1,$fieldid='rowid',$fieldref='ref',$morehtmlref='',$moreparam='',$nodbprefix=0,$morehtmlleft='',$morehtmlstatus='',$morehtmlright='')\n\t{\n\t\tglobal $langs,$conf,$hookmanager;\n\n\t\t$ret='';\n\t\tif (empty($fieldid))  $fieldid='rowid';\n\t\tif (empty($fieldref)) $fieldref='ref';\n\n\t\t// Add where from hooks\n\t\tif (is_object($hookmanager))\n\t\t{\n\t\t\t$parameters=array();\n\t\t\t$reshook=$hookmanager->executeHooks('printFieldListWhere',$parameters, $object);    // Note that $action and $object may have been modified by hook\n\t\t\t$object->next_prev_filter.=$hookmanager->resPrint;\n\t\t}\n\t\t$previous_ref = $next_ref = '';\n\t\tif ($shownav)\n\t\t{\n\t\t\t//print \"paramid=$paramid,morehtml=$morehtml,shownav=$shownav,$fieldid,$fieldref,$morehtmlref,$moreparam\";\n\t\t\t$object->load_previous_next_ref((isset($object->next_prev_filter)?$object->next_prev_filter:''), $fieldid, $nodbprefix);\n\n\t\t\t$navurl = $_SERVER[\"PHP_SELF\"];\n\t\t\t// Special case for project/task page\n\t\t\tif ($paramid == 'project_ref')\n\t\t\t{\n\t\t\t\t$navurl = preg_replace('/\\/tasks\\/(task|contact|time|note|document)\\.php/','/tasks.php',$navurl);\n\t\t\t\t$paramid='ref';\n\t\t\t}\n\n\t\t\t// accesskey is for Windows or Linux:  ALT + key for chrome, ALT + SHIFT + KEY for firefox\n\t\t\t// accesskey is for Mac:               CTRL + key for all browsers\n\t\t\t$previous_ref = $object->ref_previous?'<a accesskey=\"p\" href=\"'.$navurl.'?'.$paramid.'='.urlencode($object->ref_previous).$moreparam.'\"><i class=\"fa fa-chevron-left\"></i></a>':'<span class=\"inactive\"><i class=\"fa fa-chevron-left opacitymedium\"></i></span>';\n\t\t\t$next_ref     = $object->ref_next?'<a accesskey=\"n\" href=\"'.$navurl.'?'.$paramid.'='.urlencode($object->ref_next).$moreparam.'\"><i class=\"fa fa-chevron-right\"></i></a>':'<span class=\"inactive\"><i class=\"fa fa-chevron-right opacitymedium\"></i></span>';\n\t\t}\n\n\t\t//print \"xx\".$previous_ref.\"x\".$next_ref;\n\t\t$ret.='<!-- Start banner content --><div style=\"vertical-align: middle\">';\n\n\t\t// Right part of banner\n\t\tif ($morehtmlright) $ret.='<div class=\"inline-block floatleft\">'.$morehtmlright.'</div>';\n\n\t\tif ($previous_ref || $next_ref || $morehtml)\n\t\t{\n\t\t\t$ret.='<div class=\"pagination paginationref\"><ul class=\"right\">';\n\t\t}\n\t\tif ($morehtml)\n\t\t{\n\t\t\t$ret.='<li class=\"noborder litext\">'.$morehtml.'</li>';\n\t\t}\n\t\tif ($shownav && ($previous_ref || $next_ref))\n\t\t{\n\t\t\t$ret.='<li class=\"pagination\">'.$previous_ref.'</li>';\n\t\t\t$ret.='<li class=\"pagination\">'.$next_ref.'</li>';\n\t\t}\n\t\tif ($previous_ref || $next_ref || $morehtml)\n\t\t{\n\t\t\t$ret.='</ul></div>';\n\t\t}\n\t\tif ($morehtmlstatus) $ret.='<div class=\"statusref\">'.$morehtmlstatus.'</div>';\n\n\t\t// Left part of banner\n\t\tif ($morehtmlleft)\n\t\t{\n\t\t\tif ($conf->browser->layout == 'phone') $ret.='<div class=\"floatleft\">'.$morehtmlleft.'</div>';    // class=\"center\" to have photo in middle\n\t\t\telse $ret.='<div class=\"inline-block floatleft\">'.$morehtmlleft.'</div>';\n\t\t}\n\n\t\t//if ($conf->browser->layout == 'phone') $ret.='<div class=\"clearboth\"></div>';\n\t\t$ret.='<div class=\"inline-block floatleft valignmiddle refid'.(($shownav && ($previous_ref || $next_ref))?' refidpadding':'').'\">';\n\n\t\t// For thirdparty, contact, user, member, the ref is the id, so we show something else\n\t\tif ($object->element == 'societe')\n\t\t{\n\t\t\t$ret.=dol_htmlentities($object->name);\n\t\t}\n\t\telse if ($object->element == 'member')\n\t\t{\n\t\t\t$fullname=$object->getFullName($langs);\n\t\t\tif ($object->morphy == 'mor') {\n\t\t\t\t$ret.= dol_htmlentities($object->societe) . ((! empty($fullname) && $object->societe != $fullname)?' ('.dol_htmlentities($fullname).')':'');\n\t\t\t} else {\n\t\t\t\t$ret.= dol_htmlentities($fullname) . ((! empty($object->societe) && $object->societe != $fullname)?' ('.dol_htmlentities($object->societe).')':'');\n\t\t\t}\n\t\t}\n\t\telse if (in_array($object->element, array('contact', 'user', 'usergroup')))\n\t\t{\n\t\t\t$ret.=dol_htmlentities($object->getFullName($langs));\n\t\t}\n\t\telse if (in_array($object->element, array('action', 'agenda')))\n\t\t{\n\t\t\t$ret.=$object->ref.'<br>'.$object->label;\n\t\t}\n\t\telse if (in_array($object->element, array('adherent_type')))\n\t\t{\n\t\t\t$ret.=$object->label;\n\t\t}\n\t\telse if ($object->element == 'ecm_directories')\n\t\t{\n\t\t\t$ret.='';\n\t\t}\n\t\telse if ($fieldref != 'none') $ret.=dol_htmlentities($object->$fieldref);\n\n\n\t\tif ($morehtmlref)\n\t\t{\n\t\t\t$ret.=' '.$morehtmlref;\n\t\t}\n\t\t$ret.='</div>';\n\n\t\t$ret.='</div><!-- End banner content -->';\n\n\t\treturn $ret;\n\t}\n\n\n\t/**\n\t *    \tReturn HTML code to output a barcode\n\t *\n\t *     \t@param\tObject\t$object\t\tObject containing data to retrieve file name\n\t * \t\t@param\tint\t\t$width\t\t\tWidth of photo\n\t * \t  \t@return string    \t\t\t\tHTML code to output barcode\n\t */\n\tfunction showbarcode(&$object,$width=100)\n\t{\n\t\tglobal $conf;\n\n\t\t//Check if barcode is filled in the card\n\t\tif (empty($object->barcode)) return '';\n\n\t\t// Complete object if not complete\n\t\tif (empty($object->barcode_type_code) || empty($object->barcode_type_coder))\n\t\t{\n\t\t\t$result = $object->fetch_barcode();\n\t\t\t//Check if fetch_barcode() failed\n\t\t\tif ($result < 1) return '<!-- ErrorFetchBarcode -->';\n\t\t}\n\n\t\t// Barcode image\n\t\t$url=DOL_URL_ROOT.'/viewimage.php?modulepart=barcode&generator='.urlencode($object->barcode_type_coder).'&code='.urlencode($object->barcode).'&encoding='.urlencode($object->barcode_type_code);\n\t\t$out ='<!-- url barcode = '.$url.' -->';\n\t\t$out.='<img src=\"'.$url.'\">';\n\t\treturn $out;\n\t}\n\n\t/**\n\t *    \tReturn HTML code to output a photo\n\t *\n\t *    \t@param\tstring\t\t$modulepart\t\t\tKey to define module concerned ('societe', 'userphoto', 'memberphoto')\n\t *     \t@param  object\t\t$object\t\t\t\tObject containing data to retrieve file name\n\t * \t\t@param\tint\t\t\t$width\t\t\t\tWidth of photo\n\t * \t\t@param\tint\t\t\t$height\t\t\t\tHeight of photo (auto if 0)\n\t * \t\t@param\tint\t\t\t$caneditfield\t\tAdd edit fields\n\t * \t\t@param\tstring\t\t$cssclass\t\t\tCSS name to use on img for photo\n\t * \t\t@param\tstring\t\t$imagesize\t\t    'mini', 'small' or '' (original)\n\t *      @param  int         $addlinktofullsize  Add link to fullsize image\n\t *      @param  int         $cache              1=Accept to use image in cache\n\t * \t  \t@return string    \t\t\t\t\t\tHTML code to output photo\n\t */\n\tstatic function showphoto($modulepart, $object, $width=100, $height=0, $caneditfield=0, $cssclass='photowithmargin', $imagesize='', $addlinktofullsize=1, $cache=0)\n\t{\n\t\tglobal $conf,$langs;\n\n\t\t$entity = (! empty($object->entity) ? $object->entity : $conf->entity);\n\t\t$id = (! empty($object->id) ? $object->id : $object->rowid);\n\n\t\t$ret='';$dir='';$file='';$originalfile='';$altfile='';$email='';\n\t\tif ($modulepart=='societe')\n\t\t{\n\t\t\t$dir=$conf->societe->multidir_output[$entity];\n\t\t\tif (! empty($object->logo))\n\t\t\t{\n\t\t\t\tif ((string) $imagesize == 'mini') $file=get_exdir(0, 0, 0, 0, $object, 'thirdparty').'/logos/'.getImageFileNameForSize($object->logo, '_mini');             // getImageFileNameForSize include the thumbs\n\t\t\t\telse if ((string) $imagesize == 'small') $file=get_exdir(0, 0, 0, 0, $object, 'thirdparty').'/logos/'.getImageFileNameForSize($object->logo, '_small');\n\t\t\t\telse $file=get_exdir(0, 0, 0, 0, $object, 'thirdparty').'/logos/'.$object->logo;\n\t\t\t\t$originalfile=get_exdir(0, 0, 0, 0, $object, 'thirdparty').'/logos/'.$object->logo;\n\t\t\t}\n\t\t\t$email=$object->email;\n\t\t}\n\t\telse if ($modulepart=='contact')\n\t\t{\n\t\t\t$dir=$conf->societe->multidir_output[$entity].'/contact';\n\t\t\tif (! empty($object->photo))\n\t\t\t{\n\t\t\t\tif ((string) $imagesize == 'mini') $file=get_exdir(0, 0, 0, 0, $object, 'contact').'/photos/'.getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\telse if ((string) $imagesize == 'small') $file=get_exdir(0, 0, 0, 0, $object, 'contact').'/photos/'.getImageFileNameForSize($object->photo, '_small');\n\t\t\t\telse $file=get_exdir(0, 0, 0, 0, $object, 'contact').'/photos/'.$object->photo;\n\t\t\t\t$originalfile=get_exdir(0, 0, 0, 0, $object, 'contact').'/photos/'.$object->photo;\n\t\t\t}\n\t\t\t$email=$object->email;\n\t\t}\n\t\telse if ($modulepart=='userphoto')\n\t\t{\n\t\t\t$dir=$conf->user->dir_output;\n\t\t\tif (! empty($object->photo))\n\t\t\t{\n\t\t\t\tif ((string) $imagesize == 'mini') $file=get_exdir($id, 2, 0, 0, $object, 'user').getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\telse if ((string) $imagesize == 'small') $file=get_exdir($id, 2, 0, 0, $object, 'user').getImageFileNameForSize($object->photo, '_small');\n\t\t\t\telse $file=get_exdir($id, 2, 0, 0, $object, 'user').$object->photo;\n\t\t\t\t$originalfile=get_exdir($id, 2, 0, 0, $object, 'user').$object->photo;\n\t\t\t}\n\t\t\tif (! empty($conf->global->MAIN_OLD_IMAGE_LINKS)) $altfile=$object->id.\".jpg\";\t// For backward compatibility\n\t\t\t$email=$object->email;\n\t\t}\n\t\telse if ($modulepart=='memberphoto')\n\t\t{\n\t\t\t$dir=$conf->adherent->dir_output;\n\t\t\tif (! empty($object->photo))\n\t\t\t{\n\t\t\t\tif ((string) $imagesize == 'mini') $file=get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\telse if ((string) $imagesize == 'small') $file=get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.getImageFileNameForSize($object->photo, '_small');\n\t\t\t\telse $file=get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.$object->photo;\n\t\t\t\t$originalfile=get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.$object->photo;\n\t\t\t}\n\t\t\tif (! empty($conf->global->MAIN_OLD_IMAGE_LINKS)) $altfile=$object->id.\".jpg\";\t// For backward compatibility\n\t\t\t$email=$object->email;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Generic case to show photos\n\t\t\t$dir=$conf->$modulepart->dir_output;\n\t\t\tif (! empty($object->photo))\n\t\t\t{\n\t\t\t\tif ((string) $imagesize == 'mini') $file=get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\telse if ((string) $imagesize == 'small') $file=get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.getImageFileNameForSize($object->photo, '_small');\n\t\t\t\telse $file=get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.$object->photo;\n\t\t\t\t$originalfile=get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.$object->photo;\n\t\t\t}\n\t\t\tif (! empty($conf->global->MAIN_OLD_IMAGE_LINKS)) $altfile=$object->id.\".jpg\";\t// For backward compatibility\n\t\t\t$email=$object->email;\n\t\t}\n\n\t\tif ($dir)\n\t\t{\n\t\t\tif ($file && file_exists($dir.\"/\".$file))\n\t\t\t{\n\t\t\t\tif ($addlinktofullsize)\n\t\t\t\t{\n\t\t\t\t\t$urladvanced=getAdvancedPreviewUrl($modulepart, $originalfile, 0, '&entity='.$entity);\n\t\t\t\t\tif ($urladvanced) $ret.='<a href=\"'.$urladvanced.'\">';\n\t\t\t\t\telse $ret.='<a href=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($originalfile).'&cache='.$cache.'\">';\n\t\t\t\t}\n\t\t\t\t$ret.='<img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"Photo\" id=\"photologo'.(preg_replace('/[^a-z]/i','_',$file)).'\" '.($width?' width=\"'.$width.'\"':'').($height?' height=\"'.$height.'\"':'').' src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($file).'&cache='.$cache.'\">';\n\t\t\t\tif ($addlinktofullsize) $ret.='</a>';\n\t\t\t}\n\t\t\telse if ($altfile && file_exists($dir.\"/\".$altfile))\n\t\t\t{\n\t\t\t\tif ($addlinktofullsize)\n\t\t\t\t{\n\t\t\t\t\t$urladvanced=getAdvancedPreviewUrl($modulepart, $originalfile, 0, '&entity='.$entity);\n\t\t\t\t\tif ($urladvanced) $ret.='<a href=\"'.$urladvanced.'\">';\n\t\t\t\t\telse $ret.='<a href=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($originalfile).'&cache='.$cache.'\">';\n\t\t\t\t}\n\t\t\t\t$ret.='<img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"Photo alt\" id=\"photologo'.(preg_replace('/[^a-z]/i','_',$file)).'\" class=\"'.$cssclass.'\" '.($width?' width=\"'.$width.'\"':'').($height?' height=\"'.$height.'\"':'').' src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($altfile).'&cache='.$cache.'\">';\n\t\t\t\tif ($addlinktofullsize) $ret.='</a>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$nophoto='/public/theme/common/nophoto.png';\n\t\t\t\tif (in_array($modulepart,array('userphoto','contact')))\t// For module that are \"physical\" users\n\t\t\t\t{\n\t\t\t\t\t$nophoto='/public/theme/common/user_anonymous.png';\n\t\t\t\t\tif ($object->gender == 'man') $nophoto='/public/theme/common/user_man.png';\n\t\t\t\t\tif ($object->gender == 'woman') $nophoto='/public/theme/common/user_woman.png';\n\t\t\t\t}\n\n\t\t\t\tif (! empty($conf->gravatar->enabled) && $email)\n\t\t\t\t{\n\t\t\t\t\t/**\n\t\t\t\t\t * @see https://gravatar.com/site/implement/images/php/\n\t\t\t\t\t */\n\t\t\t\t\tglobal $dolibarr_main_url_root;\n\t\t\t\t\t$ret.='<!-- Put link to gravatar -->';\n\t\t\t\t\t//$defaultimg=urlencode(dol_buildpath($nophoto,3));\n\t\t\t\t\t$defaultimg='mm';\n\t\t\t\t\t$ret.='<img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"Gravatar avatar\" title=\"'.$email.' Gravatar avatar\" '.($width?' width=\"'.$width.'\"':'').($height?' height=\"'.$height.'\"':'').' src=\"https://www.gravatar.com/avatar/'.dol_hash(strtolower(trim($email)),3).'?s='.$width.'&d='.$defaultimg.'\">';\t// gravatar need md5 hash\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$ret.='<img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"No photo\" '.($width?' width=\"'.$width.'\"':'').($height?' height=\"'.$height.'\"':'').' src=\"'.DOL_URL_ROOT.$nophoto.'\">';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($caneditfield)\n\t\t\t{\n\t\t\t\tif ($object->photo) $ret.=\"<br>\\n\";\n\t\t\t\t$ret.='<table class=\"nobordernopadding centpercent\">';\n\t\t\t\tif ($object->photo) $ret.='<tr><td><input type=\"checkbox\" class=\"flat photodelete\" name=\"deletephoto\" id=\"photodelete\"> '.$langs->trans(\"Delete\").'<br><br></td></tr>';\n\t\t\t\t$ret.='<tr><td class=\"tdoverflow\"><input type=\"file\" class=\"flat maxwidth200onsmartphone\" name=\"photo\" id=\"photoinput\"></td></tr>';\n\t\t\t\t$ret.='</table>';\n\t\t\t}\n\n\t\t}\n\t\telse dol_print_error('','Call of showphoto with wrong parameters modulepart='.$modulepart);\n\n\t\treturn $ret;\n\t}\n\n\t/**\n\t *\tReturn select list of groups\n\t *\n\t *  @param\tstring\t$selected       Id group preselected\n\t *  @param  string\t$htmlname       Field name in form\n\t *  @param  int\t\t$show_empty     0=liste sans valeur nulle, 1=ajoute valeur inconnue\n\t *  @param  string\t$exclude        Array list of groups id to exclude\n\t * \t@param\tint\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  string\t$include        Array list of groups id to include\n\t * \t@param\tint\t\t$enableonly\t\tArray list of groups id to be enabled. All other must be disabled\n\t * \t@param\tstring\t$force_entity\t'0' or Ids of environment to force\n\t *  @return\tstring\n\t *  @see select_dolusers\n\t */\n\tfunction select_dolgroups($selected='', $htmlname='groupid', $show_empty=0, $exclude='', $disabled=0, $include='', $enableonly='', $force_entity='0')\n\t{\n\t\tglobal $conf,$user,$langs;\n\n\t\t// Permettre l'exclusion de groupes\n\t\tif (is_array($exclude))\t$excludeGroups = implode(\"','\",$exclude);\n\t\t// Permettre l'inclusion de groupes\n\t\tif (is_array($include))\t$includeGroups = implode(\"','\",$include);\n\n\t\t$out='';\n\n\t\t// On recherche les groupes\n\t\t$sql = \"SELECT ug.rowid, ug.nom as name\";\n\t\tif (! empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && ! $user->entity)\n\t\t{\n\t\t\t$sql.= \", e.label\";\n\t\t}\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"usergroup as ug \";\n\t\tif (! empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && ! $user->entity)\n\t\t{\n\t\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"entity as e ON e.rowid=ug.entity\";\n\t\t\tif ($force_entity) $sql.= \" WHERE ug.entity IN (0,\".$force_entity.\")\";\n\t\t\telse $sql.= \" WHERE ug.entity IS NOT NULL\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$sql.= \" WHERE ug.entity IN (0,\".$conf->entity.\")\";\n\t\t}\n\t\tif (is_array($exclude) && $excludeGroups) $sql.= \" AND ug.rowid NOT IN ('\".$excludeGroups.\"')\";\n\t\tif (is_array($include) && $includeGroups) $sql.= \" AND ug.rowid IN ('\".$includeGroups.\"')\";\n\t\t$sql.= \" ORDER BY ug.nom ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_dolgroups\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t// Enhance with select2\n\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t   \t$out .= ajax_combobox($htmlname);\n\n\t\t\t$out.= '<select class=\"flat minwidth200\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\"'.($disabled?' disabled':'').'>';\n\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\tif ($show_empty) $out.= '<option value=\"-1\"'.($selected==-1?' selected':'').'>&nbsp;</option>'.\"\\n\";\n\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$disableline=0;\n\t\t\t\t\tif (is_array($enableonly) && count($enableonly) && ! in_array($obj->rowid,$enableonly)) $disableline=1;\n\n\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\tif ($disableline) $out.= ' disabled';\n\t\t\t\t\tif ((is_object($selected) && $selected->id == $obj->rowid) || (! is_object($selected) && $selected == $obj->rowid))\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= ' selected';\n\t\t\t\t\t}\n\t\t\t\t\t$out.= '>';\n\n\t\t\t\t\t$out.= $obj->name;\n\t\t\t\t\tif (! empty($conf->multicompany->enabled) && empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE) && $conf->entity == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= \" (\".$obj->label.\")\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$out.= '</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ($show_empty) $out.= '<option value=\"-1\"'.($selected==-1?' selected':'').'></option>'.\"\\n\";\n\t\t\t\t$out.= '<option value=\"\" disabled>'.$langs->trans(\"NoUserGroupDefined\").'</option>';\n\t\t\t}\n\t\t\t$out.= '</select>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tReturn HTML to show the search and clear seach button\n\t *\n\t *  @return\tstring\n\t */\n\tfunction showFilterButtons()\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$out='<div class=\"nowrap\">';\n\t\t$out.='<input type=\"image\" class=\"liste_titre\" name=\"button_search\" src=\"'.img_picto($langs->trans(\"Search\"),'search.png','','',1).'\" value=\"'.dol_escape_htmltag($langs->trans(\"Search\")).'\" title=\"'.dol_escape_htmltag($langs->trans(\"Search\")).'\">';\n\t\t$out.='<input type=\"image\" class=\"liste_titre\" name=\"button_removefilter\" src=\"'.img_picto($langs->trans(\"Search\"),'searchclear.png','','',1).'\" value=\"'.dol_escape_htmltag($langs->trans(\"RemoveFilter\")).'\" title=\"'.dol_escape_htmltag($langs->trans(\"RemoveFilter\")).'\">';\n\t\t$out.='</div>';\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tReturn HTML to show the search and clear seach button\n\t *\n\t *  @param  string  $cssclass                  CSS class\n\t *  @param  int     $calljsfunction            0=default. 1=call function initCheckForSelect() after changing status of checkboxes\n\t *  @return\tstring\n\t */\n\tfunction showCheckAddButtons($cssclass='checkforaction', $calljsfunction=0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$out='';\n\t\tif (! empty($conf->use_javascript_ajax)) $out.='<div class=\"inline-block checkallactions\"><input type=\"checkbox\" id=\"checkallactions\" name=\"checkallactions\" class=\"checkallactions\"></div>';\n\t\t$out.='<script type=\"text/javascript\">\n            $(document).ready(function() {\n            \t$(\"#checkallactions\").click(function() {\n                    if($(this).is(\\':checked\\')){\n                        console.log(\"We check all\");\n                \t\t$(\".'.$cssclass.'\").prop(\\'checked\\', true);\n                    }\n                    else\n                    {\n                        console.log(\"We uncheck all\");\n                \t\t$(\".'.$cssclass.'\").prop(\\'checked\\', false);\n                    }'.\"\\n\";\n\t\tif ($calljsfunction) $out.='if (typeof initCheckForSelect == \\'function\\') { initCheckForSelect(0); } else { console.log(\"No function initCheckForSelect found. Call won\\'t be done.\"); }';\n\t\t$out.='         });\n                });\n            </script>';\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tReturn HTML to show the search and clear seach button\n\t *\n\t *  @param\tint  \t$addcheckuncheckall        Add the check all/uncheck all checkbox (use javascript) and code to manage this\n\t *  @param  string  $cssclass                  CSS class\n\t *  @param  int     $calljsfunction            0=default. 1=call function initCheckForSelect() after changing status of checkboxes\n\t *  @return\tstring\n\t */\n\tfunction showFilterAndCheckAddButtons($addcheckuncheckall=0, $cssclass='checkforaction', $calljsfunction=0)\n\t{\n\t\t$out.=$this->showFilterButtons();\n\t\tif ($addcheckuncheckall)\n\t\t{\n\t\t\t$out.=$this->showCheckAddButtons($cssclass, $calljsfunction);\n\t\t}\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Return HTML to show the select categories of expense category\n\t *\n\t * @param\tstring\t$selected              preselected category\n\t * @param\tstring\t$htmlname              name of HTML select list\n\t * @param\tinteger\t$useempty              1=Add empty line\n\t * @param\tarray\t$excludeid             id to exclude\n\t * @param\tstring\t$target                htmlname of target select to bind event\n\t * @param\tint\t\t$default_selected      default category to select if fk_c_type_fees change = EX_KME\n\t * @param\tarray\t$params                param to give\n\t * @return\tstring\n\t */\n\tfunction selectExpenseCategories($selected='', $htmlname='fk_c_exp_tax_cat', $useempty=0, $excludeid=array(), $target='', $default_selected=0, $params=array())\n\t{\n\t\tglobal $db, $conf, $langs, $user;\n\n\t\t$sql = 'SELECT rowid, label FROM '.MAIN_DB_PREFIX.'c_exp_tax_cat WHERE active = 1';\n\t\t$sql.= ' AND entity IN (0,'.getEntity('').')';\n\t\tif (!empty($excludeid)) $sql.= ' AND rowid NOT IN ('.implode(',', $excludeid).')';\n\t\t$sql.= ' ORDER BY label';\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$out = '<select name=\"'.$htmlname.'\" class=\"'.$htmlname.' flat minwidth75imp\">';\n\t\t\tif ($useempty) $out.= '<option value=\"0\">&nbsp;</option>';\n\n\t\t\twhile ($obj = $db->fetch_object($resql))\n\t\t\t{\n\t\t\t\t$out.= '<option '.($selected == $obj->rowid ? 'selected=\"selected\"' : '').' value=\"'.$obj->rowid.'\">'.$langs->trans($obj->label).'</option>';\n\t\t\t}\n\t\t\t$out.= '</select>';\n\t\t\tif (! empty($htmlname) && $user->admin) $out .= ' '.info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\n\t\t\tif (!empty($target))\n\t\t\t{\n\t\t\t\t$sql = \"SELECT c.id FROM \".MAIN_DB_PREFIX.\"c_type_fees as c WHERE c.code = 'EX_KME' AND c.active = 1\";\n\t\t\t\t$resql = $db->query($sql);\n\t\t\t\tif ($resql)\n\t\t\t\t{\n\t\t\t\t\tif ($db->num_rows($resql) > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t\t\t$out.= '<script type=\"text/javascript\">\n\t\t\t\t\t\t\t$(function() {\n\t\t\t\t\t\t\t\t$(\"select[name='.$target.']\").on(\"change\", function() {\n\t\t\t\t\t\t\t\t\tvar current_val = $(this).val();\n\t\t\t\t\t\t\t\t\tif (current_val == '.$obj->id.') {';\n\t\t\t\t\t\tif (!empty($default_selected) || !empty($selected)) $out.= '$(\"select[name='.$htmlname.']\").val(\"'.($default_selected > 0 ? $default_selected : $selected).'\");';\n\n\t\t\t\t\t\t$out.= '\n\t\t\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").change();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").change(function() {\n\n\t\t\t\t\t\t\t\t\tif ($(\"select[name='.$target.']\").val() == '.$obj->id.') {\n\t\t\t\t\t\t\t\t\t\t// get price of kilometer to fill the unit price\n\t\t\t\t\t\t\t\t\t\tvar data = '.json_encode($params).';\n\t\t\t\t\t\t\t\t\t\tdata.fk_c_exp_tax_cat = $(this).val();\n\n\t\t\t\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\t\t\t\t\t\tdataType: \"json\",\n\t\t\t\t\t\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\t\t\t\t\t\turl: \"'.(DOL_URL_ROOT.'/expensereport/ajax/ajaxik.php').'\",\n\t\t\t\t\t\t\t\t\t\t}).done(function( data, textStatus, jqXHR ) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t\t\t\t\t\tif (typeof data.up != \"undefined\") {\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"input[name=value_unit]\").val(data.up);\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").attr(\"title\", data.title);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"input[name=value_unit]\").val(\"\");\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").attr(\"title\", \"\");\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t</script>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Return HTML to show the select ranges of expense range\n\t *\n\t * @param\tstring\t$selected    preselected category\n\t * @param\tstring\t$htmlname    name of HTML select list\n\t * @param\tinteger\t$useempty    1=Add empty line\n\t * @return\tstring\n\t */\n\tfunction selectExpenseRanges($selected='', $htmlname='fk_range', $useempty=0)\n\t{\n\t\tglobal $db,$conf,$langs;\n\n\t\t$sql = 'SELECT rowid, range_ik FROM '.MAIN_DB_PREFIX.'c_exp_tax_range';\n\t\t$sql.= ' WHERE entity = '.$conf->entity.' AND active = 1';\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$out = '<select name=\"'.$htmlname.'\" class=\"'.$htmlname.' flat minwidth75imp\">';\n\t\t\tif ($useempty) $out.= '<option value=\"0\"></option>';\n\n\t\t\twhile ($obj = $db->fetch_object($resql))\n\t\t\t{\n\t\t\t\t$out.= '<option '.($selected == $obj->rowid ? 'selected=\"selected\"' : '').' value=\"'.$obj->rowid.'\">'.price($obj->range_ik, 0, $langs, 1, 0).'</option>';\n\t\t\t}\n\t\t\t$out.= '</select>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Return HTML to show a select of expense\n\t *\n\t * @param\tstring\t$selected    preselected category\n\t * @param\tstring\t$htmlname    name of HTML select list\n\t * @param\tinteger\t$useempty    1=Add empty choice\n\t * @param\tinteger\t$allchoice   1=Add all choice\n\t * @param\tinteger\t$useid       0=use 'code' as key, 1=use 'id' as key\n\t * @return\tstring\n\t */\n\tfunction selectExpense($selected='', $htmlname='fk_c_type_fees', $useempty=0, $allchoice=1, $useid=0)\n\t{\n\t\tglobal $db,$langs;\n\n\t\t$sql = 'SELECT id, code, label FROM '.MAIN_DB_PREFIX.'c_type_fees';\n\t\t$sql.= ' WHERE active = 1';\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$out = '<select name=\"'.$htmlname.'\" class=\"'.$htmlname.' flat minwidth75imp\">';\n\t\t\tif ($useempty) $out.= '<option value=\"0\"></option>';\n\t\t\tif ($allchoice) $out.= '<option value=\"-1\">'.$langs->trans('AllExpenseReport').'</option>';\n\n\t\t\t$field = 'code';\n\t\t\tif ($useid) $field = 'id';\n\n\t\t\twhile ($obj = $db->fetch_object($resql))\n\t\t\t{\n\t\t\t\t$key = $langs->trans($obj->code);\n\t\t\t\t$out.= '<option '.($selected == $obj->{$field} ? 'selected=\"selected\"' : '').' value=\"'.$obj->{$field}.'\">'.($key != $obj->code ? $key : $obj->label).'</option>';\n\t\t\t}\n\t\t\t$out.= '</select>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n}\n\n", "<?php\n/* Copyright (C) 2002-2007  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2003       Xavier Dutoit           <doli@sydesy.com>\n * Copyright (C) 2004-2015  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Sebastien Di Cintio     <sdicintio@ressource-toi.org>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2005-2015  Regis Houssin           <regis.houssin@capnetworks.com>\n * Copyright (C) 2011-2014  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2008       Matteli\n * Copyright (C) 2011-2016  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2012       Christophe Battarel     <christophe.battarel@altairis.fr>\n * Copyright (C) 2014-2015  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2015       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/main.inc.php\n *\t\\ingroup\tcore\n *\t\\brief      File that defines environment for Dolibarr GUI pages only (file not required by scripts)\n */\n\n//@ini_set('memory_limit', '128M');\t// This may be useless if memory is hard limited by your PHP\n\n// For optional tuning. Enabled if environment variable MAIN_SHOW_TUNING_INFO is defined.\n$micro_start_time=0;\nif (! empty($_SERVER['MAIN_SHOW_TUNING_INFO']))\n{\n\tlist($usec, $sec) = explode(\" \", microtime());\n\t$micro_start_time=((float) $usec + (float) $sec);\n\t// Add Xdebug code coverage\n\t//define('XDEBUGCOVERAGE',1);\n\tif (defined('XDEBUGCOVERAGE')) {\n\t\txdebug_start_code_coverage();\n\t}\n}\n\n// Removed magic_quotes\nif (function_exists('get_magic_quotes_gpc'))\t// magic_quotes_* deprecated in PHP 5.0 and removed in PHP 5.5\n{\n\tif (get_magic_quotes_gpc())\n\t{\n\t\t// Forcing parameter setting magic_quotes_gpc and cleaning parameters\n\t\t// (Otherwise he would have for each position, condition\n\t\t// Reading stripslashes variable according to state get_magic_quotes_gpc).\n\t\t// Off mode recommended (just do $db->escape for insert / update).\n\t\tfunction stripslashes_deep($value)\n\t\t{\n\t\t\treturn (is_array($value) ? array_map('stripslashes_deep', $value) : stripslashes($value));\n\t\t}\n\t\t$_GET     = array_map('stripslashes_deep', $_GET);\n\t\t$_POST    = array_map('stripslashes_deep', $_POST);\n\t\t$_FILES   = array_map('stripslashes_deep', $_FILES);\n\t\t//$_COOKIE  = array_map('stripslashes_deep', $_COOKIE); // Useless because a cookie should never be outputed on screen nor used into sql\n\t\t@set_magic_quotes_runtime(0);\n\t}\n}\n\n/**\n * Security: SQL Injection and XSS Injection (scripts) protection (Filters on GET, POST, PHP_SELF).\n *\n * @param\t\tstring\t\t$val\t\tValue\n * @param\t\tstring\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF\n * @return\t\tint\t\t\t\t\t\t>0 if there is an injection, 0 if none\n */\nfunction test_sql_and_script_inject($val, $type)\n{\n\t$inj = 0;\n\t// For SQL Injection (only GET are used to be included into bad escaped SQL requests)\n\tif ($type == 1)\n\t{\n\t\t$inj += preg_match('/updatexml\\(/i',\t $val);\n\t\t$inj += preg_match('/delete\\s+from/i',\t $val);\n\t\t$inj += preg_match('/create\\s+table/i',\t $val);\n\t\t$inj += preg_match('/insert\\s+into/i', \t $val);\n\t\t$inj += preg_match('/select\\s+from/i', \t $val);\n\t\t$inj += preg_match('/into\\s+(outfile|dumpfile)/i',  $val);\n\t}\n\tif ($type != 2)\t// Not common, we can check on POST\n\t{\n\t\t$inj += preg_match('/update.+set.+=/i',  $val);\n\t\t$inj += preg_match('/union.+select/i', \t $val);\n\t\t$inj += preg_match('/(\\.\\.%2f)+/i',\t\t $val);\n\t}\n\t// For XSS Injection done by adding javascript with script\n\t// This is all cases a browser consider text is javascript:\n\t// When it found '<script', 'javascript:', '<style', 'onload\\s=' on body tag, '=\"&' on a tag size with old browsers\n\t// All examples on page: http://ha.ckers.org/xss.html#XSScalc\n\t// More on https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n\t$inj += preg_match('/<script/i', $val);\n\t$inj += preg_match('/<iframe/i', $val);\n\t$inj += preg_match('/<audio/i', $val);\n\t$inj += preg_match('/Set\\.constructor/i', $val);\t// ECMA script 6\n\tif (! defined('NOSTYLECHECK')) $inj += preg_match('/<style/i', $val);\n\t$inj += preg_match('/base[\\s]+href/si', $val);\n\t$inj += preg_match('/<.*onmouse/si', $val);       // onmousexxx can be set on img or any html tag like <img title='...' onmouseover=alert(1)>\n\t$inj += preg_match('/onerror\\s*=/i', $val);       // onerror can be set on img or any html tag like <img title='...' onerror = alert(1)>\n\t$inj += preg_match('/onfocus\\s*=/i', $val);       // onfocus can be set on input text html tag like <input type='text' value='...' onfocus = alert(1)>\n\t$inj += preg_match('/onload\\s*=/i', $val);        // onload can be set on svg tag <svg/onload=alert(1)> or other tag like body <body onload=alert(1)>\n\t$inj += preg_match('/onloadstart\\s*=/i', $val);   // onload can be set on audio tag <audio onloadstart=alert(1)>\n\t$inj += preg_match('/onclick\\s*=/i', $val);       // onclick can be set on img text html tag like <img onclick = alert(1)>\n\t$inj += preg_match('/onscroll\\s*=/i', $val);      // onscroll can be on textarea\n\t//$inj += preg_match('/on[A-Z][a-z]+\\*=/', $val);   // To lock event handlers onAbort(), ...\n\t$inj += preg_match('/&#58;|&#0000058|&#x3A/i', $val);\t\t// refused string ':' encoded (no reason to have it encoded) to lock 'javascript:...'\n\t//if ($type == 1)\n\t//{\n\t\t$inj += preg_match('/javascript:/i', $val);\n\t\t$inj += preg_match('/vbscript:/i', $val);\n\t//}\n\t// For XSS Injection done by adding javascript closing html tags like with onmousemove, etc... (closing a src or href tag with not cleaned param)\n\tif ($type == 1) $inj += preg_match('/\"/i', $val);\t\t// We refused \" in GET parameters value\n\tif ($type == 2) $inj += preg_match('/[;\"]/', $val);\t\t// PHP_SELF is a file system path. It can contains spaces.\n\treturn $inj;\n}\n\n/**\n * Return true if security check on parameters are OK, false otherwise.\n *\n * @param\t\tstring\t\t\t$var\t\tVariable name\n * @param\t\tstring\t\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF\n * @return\t\tboolean|null\t\t\t\ttrue if there is no injection. Stop code if injection found.\n */\nfunction analyseVarsForSqlAndScriptsInjection(&$var, $type)\n{\n\tif (is_array($var))\n\t{\n\t\tforeach ($var as $key => $value)\t// Warning, $key may also be used for attacks\n\t\t{\n\t\t\tif (analyseVarsForSqlAndScriptsInjection($key, $type) && analyseVarsForSqlAndScriptsInjection($value, $type))\n\t\t\t{\n\t\t\t\t//$var[$key] = $value;\t// This is useless\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint 'Access refused by SQL/Script injection protection in main.inc.php (type='.htmlentities($type).' key='.htmlentities($key).' value='.htmlentities($value).' page='.htmlentities($_SERVER[\"REQUEST_URI\"]).')';\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn (test_sql_and_script_inject($var, $type) <= 0);\n\t}\n}\n\n\n// Check consistency of NOREQUIREXXX DEFINES\nif ((defined('NOREQUIREDB') || defined('NOREQUIRETRAN')) && ! defined('NOREQUIREMENU'))\n{\n\tprint 'If define NOREQUIREDB or NOREQUIRETRAN are set, you must also set NOREQUIREMENU or not set them';\n\texit;\n}\n\n// Sanity check on URL\nif (! empty($_SERVER[\"PHP_SELF\"]))\n{\n\t$morevaltochecklikepost=array($_SERVER[\"PHP_SELF\"]);\n\tanalyseVarsForSqlAndScriptsInjection($morevaltochecklikepost,2);\n}\n// Sanity check on GET parameters\nif (! defined('NOSCANGETFORINJECTION') && ! empty($_SERVER[\"QUERY_STRING\"]))\n{\n\t$morevaltochecklikeget=array($_SERVER[\"QUERY_STRING\"]);\n\tanalyseVarsForSqlAndScriptsInjection($morevaltochecklikeget,1);\n}\n// Sanity check on POST\nif (! defined('NOSCANPOSTFORINJECTION'))\n{\n\tanalyseVarsForSqlAndScriptsInjection($_POST,0);\n}\n\n// This is to make Dolibarr working with Plesk\nif (! empty($_SERVER['DOCUMENT_ROOT']) && substr($_SERVER['DOCUMENT_ROOT'], -6) !== 'htdocs')\n{\n\tset_include_path($_SERVER['DOCUMENT_ROOT'] . '/htdocs');\n}\n\n// Include the conf.php and functions.lib.php\nrequire_once 'filefunc.inc.php';\n\n// If there is a POST parameter to tell to save automatically some POST parameters into cookies, we do it.\n// This is used for example by form of boxes to save personalization of some options.\n// DOL_AUTOSET_COOKIE=cookiename:val1,val2 and  cookiename_val1=aaa cookiename_val2=bbb will set cookie_name with value json_encode(array('val1'=> , ))\nif (! empty($_POST[\"DOL_AUTOSET_COOKIE\"]))\n{\n\t$tmpautoset=explode(':',$_POST[\"DOL_AUTOSET_COOKIE\"],2);\n\t$tmplist=explode(',',$tmpautoset[1]);\n\t$cookiearrayvalue=array();\n\tforeach ($tmplist as $tmpkey)\n\t{\n\t\t$postkey=$tmpautoset[0].'_'.$tmpkey;\n\t\t//var_dump('tmpkey='.$tmpkey.' postkey='.$postkey.' value='.$_POST[$postkey]);\n\t\tif (! empty($_POST[$postkey])) $cookiearrayvalue[$tmpkey]=$_POST[$postkey];\n\t}\n\t$cookiename=$tmpautoset[0];\n\t$cookievalue=json_encode($cookiearrayvalue);\n\t//var_dump('setcookie cookiename='.$cookiename.' cookievalue='.$cookievalue);\n\tsetcookie($cookiename, empty($cookievalue)?'':$cookievalue, empty($cookievalue)?0:(time()+(86400*354)), '/', null, false, true);\t// keep cookie 1 year and add tag httponly\n\tif (empty($cookievalue)) unset($_COOKIE[$cookiename]);\n}\n\n\n// Init session. Name of session is specific to Dolibarr instance.\n// Note: the function dol_getprefix may have been redefined to return a different key to manage another area to protect.\n$prefix=dol_getprefix('');\n\n$sessionname='DOLSESSID_'.$prefix;\n$sessiontimeout='DOLSESSTIMEOUT_'.$prefix;\nif (! empty($_COOKIE[$sessiontimeout])) ini_set('session.gc_maxlifetime',$_COOKIE[$sessiontimeout]);\nsession_name($sessionname);\nsession_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie (same as setting session.cookie_httponly into php.ini). Must be called before the session_start.\n// This create lock, released when session_write_close() or end of page.\n// We need this lock as long as we read/write $_SESSION ['vars']. We can remove lock when finished.\nif (! defined('NOSESSION'))\n{\n\tsession_start();\n\tif (ini_get('register_globals'))    // Deprecated in 5.3 and removed in 5.4. To solve bug in using $_SESSION\n\t{\n\t\tforeach ($_SESSION as $key=>$value)\n\t\t{\n\t\t\tif (isset($GLOBALS[$key])) unset($GLOBALS[$key]);\n\t\t}\n\t}\n}\n\n// Init the 5 global objects, this include will make the new and set properties for: $conf, $db, $langs, $user, $mysoc\nrequire_once 'master.inc.php';\n\n// Activate end of page function\nregister_shutdown_function('dol_shutdown');\n\n// Detection browser\nif (isset($_SERVER[\"HTTP_USER_AGENT\"]))\n{\n\t$tmp=getBrowserInfo($_SERVER[\"HTTP_USER_AGENT\"]);\n\t$conf->browser->name=$tmp['browsername'];\n\t$conf->browser->os=$tmp['browseros'];\n\t$conf->browser->version=$tmp['browserversion'];\n\t$conf->browser->layout=$tmp['layout'];     // 'classic', 'phone', 'tablet'\n\t$conf->browser->phone=$tmp['phone'];\t   // TODO deprecated, use ->layout\n\t$conf->browser->tablet=$tmp['tablet'];\t   // TODO deprecated, use ->layout\n\t//var_dump($conf->browser);\n\n\tif ($conf->browser->layout == 'phone') $conf->dol_no_mouse_hover=1;\n\tif ($conf->browser->layout == 'phone') $conf->global->MAIN_TESTMENUHIDER=1;\n}\n\n// Force HTTPS if required ($conf->file->main_force_https is 0/1 or https dolibarr root url)\n// $_SERVER[\"HTTPS\"] is 'on' when link is https, otherwise $_SERVER[\"HTTPS\"] is empty or 'off'\nif (! empty($conf->file->main_force_https) && (empty($_SERVER[\"HTTPS\"]) || $_SERVER[\"HTTPS\"] != 'on'))\n{\n\t$newurl='';\n\tif (is_numeric($conf->file->main_force_https))\n\t{\n\t\tif ($conf->file->main_force_https == '1' && ! empty($_SERVER[\"SCRIPT_URI\"]))\t// If SCRIPT_URI supported by server\n\t\t{\n\t\t\tif (preg_match('/^http:/i',$_SERVER[\"SCRIPT_URI\"]) && ! preg_match('/^https:/i',$_SERVER[\"SCRIPT_URI\"]))\t// If link is http\n\t\t\t{\n\t\t\t\t$newurl=preg_replace('/^http:/i','https:',$_SERVER[\"SCRIPT_URI\"]);\n\t\t\t}\n\t\t}\n\t\telse\t// Check HTTPS environment variable (Apache/mod_ssl only)\n\t\t{\n\t\t\t$newurl=preg_replace('/^http:/i','https:',DOL_MAIN_URL_ROOT).$_SERVER[\"REQUEST_URI\"];\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Check HTTPS environment variable (Apache/mod_ssl only)\n\t\t$newurl=$conf->file->main_force_https.$_SERVER[\"REQUEST_URI\"];\n\t}\n\t// Start redirect\n\tif ($newurl)\n\t{\n\t\tdol_syslog(\"main.inc: dolibarr_main_force_https is on, we make a redirect to \".$newurl);\n\t\theader(\"Location: \".$newurl);\n\t\texit;\n\t}\n\telse\n\t{\n\t\tdol_syslog(\"main.inc: dolibarr_main_force_https is on but we failed to forge new https url so no redirect is done\", LOG_WARNING);\n\t}\n}\n\n\n// Loading of additional presentation includes\nif (! defined('NOREQUIREHTML')) require_once DOL_DOCUMENT_ROOT .'/core/class/html.form.class.php';\t    // Need 660ko memory (800ko in 2.2)\nif (! defined('NOREQUIREAJAX') && $conf->use_javascript_ajax) require_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\t// Need 22ko memory\n\n// If install or upgrade process not done or not completely finished, we call the install page.\nif (! empty($conf->global->MAIN_NOT_INSTALLED) || ! empty($conf->global->MAIN_NOT_UPGRADED))\n{\n\tdol_syslog(\"main.inc: A previous install or upgrade was not complete. Redirect to install page.\", LOG_WARNING);\n\theader(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n\texit;\n}\n// If an upgrade process is required, we call the install page.\nif ((! empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ($conf->global->MAIN_VERSION_LAST_UPGRADE != DOL_VERSION))\n|| (empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ! empty($conf->global->MAIN_VERSION_LAST_INSTALL) && ($conf->global->MAIN_VERSION_LAST_INSTALL != DOL_VERSION)))\n{\n\t$versiontocompare=empty($conf->global->MAIN_VERSION_LAST_UPGRADE)?$conf->global->MAIN_VERSION_LAST_INSTALL:$conf->global->MAIN_VERSION_LAST_UPGRADE;\n\trequire_once DOL_DOCUMENT_ROOT .'/core/lib/admin.lib.php';\n\t$dolibarrversionlastupgrade=preg_split('/[.-]/',$versiontocompare);\n\t$dolibarrversionprogram=preg_split('/[.-]/',DOL_VERSION);\n\t$rescomp=versioncompare($dolibarrversionprogram,$dolibarrversionlastupgrade);\n\tif ($rescomp > 0)   // Programs have a version higher than database. We did not add \"&& $rescomp < 3\" because we want upgrade process for build upgrades\n\t{\n\t\tdol_syslog(\"main.inc: database version \".$versiontocompare.\" is lower than programs version \".DOL_VERSION.\". Redirect to install page.\", LOG_WARNING);\n\t\theader(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n\t\texit;\n\t}\n}\n\n// Creation of a token against CSRF vulnerabilities\nif (! defined('NOTOKENRENEWAL'))\n{\n\t// roulement des jetons car cree a chaque appel\n\tif (isset($_SESSION['newtoken'])) $_SESSION['token'] = $_SESSION['newtoken'];\n\n\t// Save in $_SESSION['newtoken'] what will be next token. Into forms, we will add param token = $_SESSION['newtoken']\n\t$token = dol_hash(uniqid(mt_rand(),TRUE)); // Generates a hash of a random number\n\t$_SESSION['newtoken'] = $token;\n}\nif ((! defined('NOCSRFCHECK') && empty($dolibarr_nocsrfcheck) && ! empty($conf->global->MAIN_SECURITY_CSRF_WITH_TOKEN))\n\t|| defined('CSRFCHECK_WITH_TOKEN'))\t// Check validity of token, only if option MAIN_SECURITY_CSRF_WITH_TOKEN enabled or if constant CSRFCHECK_WITH_TOKEN is set\n{\n\tif ($_SERVER['REQUEST_METHOD'] == 'POST' && ! GETPOST('token','alpha')) // Note, offender can still send request by GET\n\t{\n\t\tprint \"Access refused by CSRF protection in main.inc.php. Token not provided.\\n\";\n\t\tprint \"If you access your server behind a proxy using url rewriting, you might check that all HTTP header is propagated (or add the line \\$dolibarr_nocsrfcheck=1 into your conf.php file).\\n\";\n\t\tdie;\n\t}\n\tif ($_SERVER['REQUEST_METHOD'] === 'POST')  // This test must be after loading $_SESSION['token'].\n\t{\n\t\tif (GETPOST('token', 'alpha') != $_SESSION['token'])\n\t\t{\n\t\t\tdol_syslog(\"Invalid token in \".$_SERVER['HTTP_REFERER'].\", action=\".GETPOST('action','aZ09').\", _POST['token']=\".GETPOST('token','alpha').\", _SESSION['token']=\".$_SESSION['token'], LOG_WARNING);\n\t\t\t//print 'Unset POST by CSRF protection in main.inc.php.';\t// Do not output anything because this create problems when using the BACK button on browsers.\n\t\t\tunset($_POST);\n\t\t}\n\t}\n}\n\n// Disable modules (this must be after session_start and after conf has been loaded)\nif (GETPOST('disablemodules','alpha'))  $_SESSION[\"disablemodules\"]=GETPOST('disablemodules','alpha');\nif (! empty($_SESSION[\"disablemodules\"]))\n{\n\t$disabled_modules=explode(',',$_SESSION[\"disablemodules\"]);\n\tforeach($disabled_modules as $module)\n\t{\n\t\tif ($module)\n\t\t{\n\t\t\tif (empty($conf->$module)) $conf->$module=new stdClass();\n\t\t\t$conf->$module->enabled=false;\n\t\t\tif ($module == 'fournisseur')\t\t// Special case\n\t\t\t{\n\t\t\t\t$conf->supplier_order->enabled=0;\n\t\t\t\t$conf->supplier_invoice->enabled=0;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/*\n * Phase authentication / login\n */\n$login='';\nif (! defined('NOLOGIN'))\n{\n\t// $authmode lists the different means of identification to be tested in order of preference.\n\t// Example: 'http', 'dolibarr', 'ldap', 'http,forceuser', '...'\n\n\tif (defined('MAIN_AUTHENTICATION_MODE'))\n\t{\n\t\t$dolibarr_main_authentication = constant('MAIN_AUTHENTICATION_MODE');\n\t}\n\telse\n\t{\n\t\t// Authentication mode\n\t\tif (empty($dolibarr_main_authentication)) $dolibarr_main_authentication='http,dolibarr';\n\t\t// Authentication mode: forceuser\n\t\tif ($dolibarr_main_authentication == 'forceuser' && empty($dolibarr_auto_user)) $dolibarr_auto_user='auto';\n\t}\n\t// Set authmode\n\t$authmode=explode(',',$dolibarr_main_authentication);\n\n\t// No authentication mode\n\tif (! count($authmode))\n\t{\n\t\t$langs->load('main');\n\t\tdol_print_error('',$langs->trans(\"ErrorConfigParameterNotDefined\",'dolibarr_main_authentication'));\n\t\texit;\n\t}\n\n\t// If login request was already post, we retrieve login from the session\n\t// Call module if not realized that his request.\n\t// At the end of this phase, the variable $login is defined.\n\t$resultFetchUser='';\n\t$test=true;\n\tif (! isset($_SESSION[\"dol_login\"]))\n\t{\n\t\t// It is not already authenticated and it requests the login / password\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/security2.lib.php';\n\n\t\t$dol_dst_observed=GETPOST(\"dst_observed\",'int',3);\n\t\t$dol_dst_first=GETPOST(\"dst_first\",'int',3);\n\t\t$dol_dst_second=GETPOST(\"dst_second\",'int',3);\n\t\t$dol_screenwidth=GETPOST(\"screenwidth\",'int',3);\n\t\t$dol_screenheight=GETPOST(\"screenheight\",'int',3);\n\t\t$dol_hide_topmenu=GETPOST('dol_hide_topmenu','int',3);\n\t\t$dol_hide_leftmenu=GETPOST('dol_hide_leftmenu','int',3);\n\t\t$dol_optimize_smallscreen=GETPOST('dol_optimize_smallscreen','int',3);\n\t\t$dol_no_mouse_hover=GETPOST('dol_no_mouse_hover','int',3);\n\t\t$dol_use_jmobile=GETPOST('dol_use_jmobile','int',3);\n\t\t//dol_syslog(\"POST key=\".join(array_keys($_POST),',').' value='.join($_POST,','));\n\n\t\t// If in demo mode, we check we go to home page through the public/demo/index.php page\n\t\tif (! empty($dolibarr_main_demo) && $_SERVER['PHP_SELF'] == DOL_URL_ROOT.'/index.php')  // We ask index page\n\t\t{\n\t\t\tif (empty($_SERVER['HTTP_REFERER']) || ! preg_match('/public/',$_SERVER['HTTP_REFERER']))\n\t\t\t{\n\t\t\t\tdol_syslog(\"Call index page from another url than demo page (call is done from page \".$_SERVER['HTTP_REFERER'].\")\");\n\t\t\t\t$url='';\n\t\t\t\t$url.=($url?'&':'').($dol_hide_topmenu?'dol_hide_topmenu='.$dol_hide_topmenu:'');\n\t\t\t\t$url.=($url?'&':'').($dol_hide_leftmenu?'dol_hide_leftmenu='.$dol_hide_leftmenu:'');\n\t\t\t\t$url.=($url?'&':'').($dol_optimize_smallscreen?'dol_optimize_smallscreen='.$dol_optimize_smallscreen:'');\n\t\t\t\t$url.=($url?'&':'').($dol_no_mouse_hover?'dol_no_mouse_hover='.$dol_no_mouse_hover:'');\n\t\t\t\t$url.=($url?'&':'').($dol_use_jmobile?'dol_use_jmobile='.$dol_use_jmobile:'');\n\t\t\t\t$url=DOL_URL_ROOT.'/public/demo/index.php'.($url?'?'.$url:'');\n\t\t\t\theader(\"Location: \".$url);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\t// Verification security graphic code\n\t\tif (GETPOST(\"username\",\"alpha\",2) && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))\n\t\t{\n\t\t\t$sessionkey = 'dol_antispam_value';\n\t\t\t$ok=(array_key_exists($sessionkey, $_SESSION) === TRUE && (strtolower($_SESSION[$sessionkey]) == strtolower($_POST['code'])));\n\n\t\t\t// Check code\n\t\t\tif (! $ok)\n\t\t\t{\n\t\t\t\tdol_syslog('Bad value for code, connexion refused');\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('errors');\n\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadValueForCode\");\n\t\t\t\t$test=false;\n\n\t\t\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t\t\t$user->trigger_mesg='ErrorBadValueForCode - login='.GETPOST(\"username\",\"alpha\",2);\n\t\t\t\t// Call of triggers\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n\t\t\t\t$interface=new Interfaces($db);\n\t\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t\t// End Call of triggers\n\n\t\t\t\t// Hooks on failed login\n\t\t\t\t$action='';\n\t\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t\t$parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t\t$reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t\t\tif ($reshook < 0) $error++;\n\n\t\t\t\t// Note: exit is done later\n\t\t\t}\n\t\t}\n\n\t\t$usertotest\t\t= (! empty($_COOKIE['login_dolibarr']) ? $_COOKIE['login_dolibarr'] : GETPOST(\"username\",\"alpha\",2));\n\t\t$passwordtotest\t= GETPOST('password','none',2);\n\t\t$entitytotest\t= (GETPOST('entity','int') ? GETPOST('entity','int') : (!empty($conf->entity) ? $conf->entity : 1));\n\n\t\t// Define if we received data to test the login.\n\t\t$goontestloop=false;\n\t\tif (isset($_SERVER[\"REMOTE_USER\"]) && in_array('http',$authmode)) $goontestloop=true;\n\t\tif ($dolibarr_main_authentication == 'forceuser' && ! empty($dolibarr_auto_user)) $goontestloop=true;\n\t\tif (GETPOST(\"username\",\"alpha\",2) || ! empty($_COOKIE['login_dolibarr']) || GETPOST('openid_mode','alpha',1)) $goontestloop=true;\n\n\t\tif (! is_object($langs)) // This can occurs when calling page with NOREQUIRETRAN defined, however we need langs for error messages.\n\t\t{\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/translate.class.php';\n\t\t\t$langs=new Translate(\"\",$conf);\n\t\t\t$langcode=(GETPOST('lang','aZ09',1)?GETPOST('lang','aZ09',1):(empty($conf->global->MAIN_LANG_DEFAULT)?'auto':$conf->global->MAIN_LANG_DEFAULT));\n\t\t\tif (defined('MAIN_LANG_DEFAULT')) $langcode=constant('MAIN_LANG_DEFAULT');\n\t\t\t$langs->setDefaultLang($langcode);\n\t\t}\n\n\t\t// Validation of login/pass/entity\n\t\t// If ok, the variable login will be returned\n\t\t// If error, we will put error message in session under the name dol_loginmesg\n\t\tif ($test && $goontestloop)\n\t\t{\n\t\t\t$login = checkLoginPassEntity($usertotest,$passwordtotest,$entitytotest,$authmode);\n\t\t\tif ($login)\n\t\t\t{\n\t\t\t\t$dol_authmode=$conf->authmode;\t// This properties is defined only when logged, to say what mode was successfully used\n\t\t\t\t$dol_tz=$_POST[\"tz\"];\n\t\t\t\t$dol_tz_string=$_POST[\"tz_string\"];\n\t\t\t\t$dol_tz_string=preg_replace('/\\s*\\(.+\\)$/','',$dol_tz_string);\n\t\t\t\t$dol_tz_string=preg_replace('/,/','/',$dol_tz_string);\n\t\t\t\t$dol_tz_string=preg_replace('/\\s/','_',$dol_tz_string);\n\t\t\t\t$dol_dst=0;\n\t\t\t\tif (isset($_POST[\"dst_first\"]) && isset($_POST[\"dst_second\"]))\n\t\t\t\t{\n\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t\t\t\t$datenow=dol_now();\n\t\t\t\t\t$datefirst=dol_stringtotime($_POST[\"dst_first\"]);\n\t\t\t\t\t$datesecond=dol_stringtotime($_POST[\"dst_second\"]);\n\t\t\t\t\tif ($datenow >= $datefirst && $datenow < $datesecond) $dol_dst=1;\n\t\t\t\t}\n\t\t\t\t//print $datefirst.'-'.$datesecond.'-'.$datenow.'-'.$dol_tz.'-'.$dol_tzstring.'-'.$dol_dst; exit;\n\t\t\t}\n\n\t\t\tif (! $login)\n\t\t\t{\n\t\t\t\tdol_syslog('Bad password, connexion refused',LOG_DEBUG);\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('errors');\n\n\t\t\t\t// Bad password. No authmode has found a good password.\n\t\t\t\t// We set a generic message if not defined inside function checkLoginPassEntity or subfunctions\n\t\t\t\tif (empty($_SESSION[\"dol_loginmesg\"])) $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadLoginPassword\");\n\n\t\t\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t\t\t$user->trigger_mesg=$langs->trans(\"ErrorBadLoginPassword\").' - login='.GETPOST(\"username\",\"alpha\",2);\n\t\t\t\t// Call of triggers\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/interfaces.class.php';\n\t\t\t\t$interface=new Interfaces($db);\n\t\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,GETPOST(\"username\",\"alpha\",2));\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t\t// End Call of triggers\n\n\t\t\t\t// Hooks on failed login\n\t\t\t\t$action='';\n\t\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t\t$parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t\t$reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t\t\tif ($reshook < 0) $error++;\n\n\t\t\t\t// Note: exit is done in next chapter\n\t\t\t}\n\t\t}\n\n\t\t// End test login / passwords\n\t\tif (! $login || (in_array('ldap',$authmode) && empty($passwordtotest)))\t// With LDAP we refused empty password because some LDAP are \"opened\" for anonymous access so connexion is a success.\n\t\t{\n\t\t\t// No data to test login, so we show the login page\n\t\t\tdol_syslog(\"--- Access to \".$_SERVER[\"PHP_SELF\"].\" showing the login form and exit\");\n\t\t\tif (defined('NOREDIRECTBYMAINTOLOGIN')) return 'ERROR_NOT_LOGGED';\n\t\t\telse dol_loginfunction($langs,$conf,(! empty($mysoc)?$mysoc:''));\n\t\t\texit;\n\t\t}\n\n\t\t$resultFetchUser=$user->fetch('', $login, '', 1, ($entitytotest > 0 ? $entitytotest : -1));\n\t\tif ($resultFetchUser <= 0)\n\t\t{\n\t\t\tdol_syslog('User not found, connexion refused');\n\t\t\tsession_destroy();\n\t\t\tsession_name($sessionname);\n\t\t\tsession_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n\t\t\tsession_start();    // Fixing the bug of register_globals here is useless since session is empty\n\n\t\t\tif ($resultFetchUser == 0)\n\t\t\t{\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('errors');\n\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\n\t\t\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t\t\t$user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n\t\t\t}\n\t\t\tif ($resultFetchUser < 0)\n\t\t\t{\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$user->error;\n\n\t\t\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t\t\t$user->trigger_mesg=$user->error;\n\t\t\t}\n\n\t\t\t// Call triggers\n\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n\t\t\t$interface=new Interfaces($db);\n\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n\t\t\tif ($result < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\t\t\t// End call triggers\n\n\t\t\t// Hooks on failed login\n\t\t\t$action='';\n\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t$parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t$reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t\tif ($reshook < 0) $error++;\n\n\t\t\t$paramsurl=array();\n\t\t\tif (GETPOST('textbrowser','int')) $paramsurl[]='textbrowser='.GETPOST('textbrowser','int');\n\t\t\tif (GETPOST('nojs','int'))        $paramsurl[]='nojs='.GETPOST('nojs','int');\n\t\t\tif (GETPOST('lang','aZ09'))       $paramsurl[]='lang='.GETPOST('lang','aZ09');\n\t\t\theader('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl)?'?'.implode('&',$paramsurl):''));\n\t\t\texit;\n\t\t}\n\t}\n\telse\n\t{\n\t\t// We are already into an authenticated session\n\t\t$login=$_SESSION[\"dol_login\"];\n\t\t$entity=$_SESSION[\"dol_entity\"];\n\t\tdol_syslog(\"- This is an already logged session. _SESSION['dol_login']=\".$login.\" _SESSION['dol_entity']=\".$entity, LOG_DEBUG);\n\n\t\t$resultFetchUser=$user->fetch('', $login, '', 1, ($entity > 0 ? $entity : -1));\n\t\tif ($resultFetchUser <= 0)\n\t\t{\n\t\t\t// Account has been removed after login\n\t\t\tdol_syslog(\"Can't load user even if session logged. _SESSION['dol_login']=\".$login, LOG_WARNING);\n\t\t\tsession_destroy();\n\t\t\tsession_name($sessionname);\n\t\t\tsession_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n\t\t\tsession_start();    // Fixing the bug of register_globals here is useless since session is empty\n\n\t\t\tif ($resultFetchUser == 0)\n\t\t\t{\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('errors');\n\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\n\t\t\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t\t\t$user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n\t\t\t}\n\t\t\tif ($resultFetchUser < 0)\n\t\t\t{\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$user->error;\n\n\t\t\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t\t\t$user->trigger_mesg=$user->error;\n\t\t\t}\n\n\t\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t\t// Call triggers\n\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n\t\t\t$interface=new Interfaces($db);\n\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n\t\t\tif ($result < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\t\t\t// End call triggers\n\n\t\t\t// Hooks on failed login\n\t\t\t$action='';\n\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t$parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t$reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t\tif ($reshook < 0) $error++;\n\n\t\t\t$paramsurl=array();\n\t\t\tif (GETPOST('textbrowser','int')) $paramsurl[]='textbrowser='.GETPOST('textbrowser','int');\n\t\t\tif (GETPOST('nojs','int'))        $paramsurl[]='nojs='.GETPOST('nojs','int');\n\t\t\tif (GETPOST('lang','aZ09'))       $paramsurl[]='lang='.GETPOST('lang','aZ09');\n\t\t\theader('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl)?'?'.implode('&',$paramsurl):''));\n\t\t\texit;\n\t\t}\n\t\telse\n\t\t{\n\t\t    // Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n\t\t    $hookmanager->initHooks(array('main'));\n\n\t\t    // Code for search criteria persistence.\n\t\t    if (! empty($_GET['save_lastsearch_values']))    // Keep $_GET here\n\t\t    {\n\t\t\t    $relativepathstring = preg_replace('/\\?.*$/','',$_SERVER[\"HTTP_REFERER\"]);\n\t\t\t    $relativepathstring = preg_replace('/^https?:\\/\\/[^\\/]*/','',$relativepathstring);     // Get full path except host server\n\t\t\t    // Clean $relativepathstring\n   \t\t\t    if (constant('DOL_URL_ROOT')) $relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'),'/').'/', '', $relativepathstring);\n\t\t\t    $relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n\t\t\t    $relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n\t\t\t    //var_dump($relativepathstring);\n\n\t\t\t    // We click on a link that leave a page we have to save search criteria. We save them from tmp to no tmp\n\t\t\t    if (! empty($_SESSION['lastsearch_values_tmp_'.$relativepathstring]))\n\t\t\t    {\n\t\t\t\t    $_SESSION['lastsearch_values_'.$relativepathstring]=$_SESSION['lastsearch_values_tmp_'.$relativepathstring];\n\t\t\t\t    unset($_SESSION['lastsearch_values_tmp_'.$relativepathstring]);\n\t\t\t    }\n\t\t    }\n\n\t\t    $action = '';\n\t\t    $reshook = $hookmanager->executeHooks('updateSession', array(), $user, $action);\n\t\t    if ($reshook < 0) {\n\t\t\t    setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\t\t    }\n\t\t}\n\t}\n\n\t// Is it a new session that has started ?\n\t// If we are here, this means authentication was successfull.\n\tif (! isset($_SESSION[\"dol_login\"]))\n\t{\n\t\t// New session for this login has started.\n\t\t$error=0;\n\n\t\t// Store value into session (values always stored)\n\t\t$_SESSION[\"dol_login\"]=$user->login;\n\t\t$_SESSION[\"dol_authmode\"]=isset($dol_authmode)?$dol_authmode:'';\n\t\t$_SESSION[\"dol_tz\"]=isset($dol_tz)?$dol_tz:'';\n\t\t$_SESSION[\"dol_tz_string\"]=isset($dol_tz_string)?$dol_tz_string:'';\n\t\t$_SESSION[\"dol_dst\"]=isset($dol_dst)?$dol_dst:'';\n\t\t$_SESSION[\"dol_dst_observed\"]=isset($dol_dst_observed)?$dol_dst_observed:'';\n\t\t$_SESSION[\"dol_dst_first\"]=isset($dol_dst_first)?$dol_dst_first:'';\n\t\t$_SESSION[\"dol_dst_second\"]=isset($dol_dst_second)?$dol_dst_second:'';\n\t\t$_SESSION[\"dol_screenwidth\"]=isset($dol_screenwidth)?$dol_screenwidth:'';\n\t\t$_SESSION[\"dol_screenheight\"]=isset($dol_screenheight)?$dol_screenheight:'';\n\t\t$_SESSION[\"dol_company\"]=$conf->global->MAIN_INFO_SOCIETE_NOM;\n\t\t$_SESSION[\"dol_entity\"]=$conf->entity;\n\t\t// Store value into session (values stored only if defined)\n\t\tif (! empty($dol_hide_topmenu))         $_SESSION['dol_hide_topmenu']=$dol_hide_topmenu;\n\t\tif (! empty($dol_hide_leftmenu))        $_SESSION['dol_hide_leftmenu']=$dol_hide_leftmenu;\n\t\tif (! empty($dol_optimize_smallscreen)) $_SESSION['dol_optimize_smallscreen']=$dol_optimize_smallscreen;\n\t\tif (! empty($dol_no_mouse_hover))       $_SESSION['dol_no_mouse_hover']=$dol_no_mouse_hover;\n\t\tif (! empty($dol_use_jmobile))          $_SESSION['dol_use_jmobile']=$dol_use_jmobile;\n\n\t\tdol_syslog(\"This is a new started user session. _SESSION['dol_login']=\".$_SESSION[\"dol_login\"].\" Session id=\".session_id());\n\n\t\t$db->begin();\n\n\t\t$user->update_last_login_date();\n\n\t\t$loginfo = 'TZ='.$_SESSION[\"dol_tz\"].';TZString='.$_SESSION[\"dol_tz_string\"].';Screen='.$_SESSION[\"dol_screenwidth\"].'x'.$_SESSION[\"dol_screenheight\"];\n\n\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t$user->trigger_mesg = $loginfo;\n\t\t// Call triggers\n\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n\t\t$interface=new Interfaces($db);\n\t\t$result=$interface->run_triggers('USER_LOGIN',$user,$user,$langs,$conf);\n\t\tif ($result < 0) {\n\t\t\t$error++;\n\t\t}\n\t\t// End call triggers\n\n\t\t// Hooks on successfull login\n\t\t$action='';\n\t\t$hookmanager->initHooks(array('login'));\n\t\t$parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginfo'=>$loginfo);\n\t\t$reshook=$hookmanager->executeHooks('afterLogin',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\tif ($reshook < 0) $error++;\n\n\t\tif ($error)\n\t\t{\n\t\t\t$db->rollback();\n\t\t\tsession_destroy();\n\t\t\tdol_print_error($db,'Error in some hooks afterLogin (or old trigger USER_LOGIN)');\n\t\t\texit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$db->commit();\n\t\t}\n\n\t\t// Change landing page if defined.\n\t\t$landingpage=(empty($user->conf->MAIN_LANDING_PAGE)?(empty($conf->global->MAIN_LANDING_PAGE)?'':$conf->global->MAIN_LANDING_PAGE):$user->conf->MAIN_LANDING_PAGE);\n\t\tif (! empty($landingpage))    // Example: /index.php\n\t\t{\n\t\t\t$newpath=dol_buildpath($landingpage, 1);\n\t\t\tif ($_SERVER[\"PHP_SELF\"] != $newpath)   // not already on landing page (avoid infinite loop)\n\t\t\t{\n\t\t\t\theader('Location: '.$newpath);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// If user admin, we force the rights-based modules\n\tif ($user->admin)\n\t{\n\t\t$user->rights->user->user->lire=1;\n\t\t$user->rights->user->user->creer=1;\n\t\t$user->rights->user->user->password=1;\n\t\t$user->rights->user->user->supprimer=1;\n\t\t$user->rights->user->self->creer=1;\n\t\t$user->rights->user->self->password=1;\n\t}\n\n\t/*\n     * Overwrite some configs globals (try to avoid this and have code to use instead $user->conf->xxx)\n     */\n\n\t// Set liste_limit\n\tif (isset($user->conf->MAIN_SIZE_LISTE_LIMIT))\t$conf->liste_limit = $user->conf->MAIN_SIZE_LISTE_LIMIT;\t// Can be 0\n\tif (isset($user->conf->PRODUIT_LIMIT_SIZE))\t$conf->product->limit_size = $user->conf->PRODUIT_LIMIT_SIZE;\t// Can be 0\n\n\t// Replace conf->css by personalized value if theme not forced\n\tif (empty($conf->global->MAIN_FORCETHEME) && ! empty($user->conf->MAIN_THEME))\n\t{\n\t\t$conf->theme=$user->conf->MAIN_THEME;\n\t\t$conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n\t}\n}\n\n// Case forcing style from url\nif (GETPOST('theme','alpha'))\n{\n\t$conf->theme=GETPOST('theme','alpha',1);\n\t$conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n\n\n// Set javascript option\nif (! GETPOST('nojs','int'))   // If javascript was not disabled on URL\n{\n\tif (! empty($user->conf->MAIN_DISABLE_JAVASCRIPT))\n\t{\n\t\t$conf->use_javascript_ajax=! $user->conf->MAIN_DISABLE_JAVASCRIPT;\n\t}\n}\nelse $conf->use_javascript_ajax=0;\n// Set MAIN_OPTIMIZEFORTEXTBROWSER\nif (GETPOST('textbrowser','int') || (! empty($conf->browser->name) && $conf->browser->name == 'lynxlinks') || ! empty($user->conf->MAIN_OPTIMIZEFORTEXTBROWSER))   // If we must enable text browser\n{\n\t$conf->global->MAIN_OPTIMIZEFORTEXTBROWSER=1;\n}\nelseif (! empty($user->conf->MAIN_OPTIMIZEFORTEXTBROWSER))\n{\n\t$conf->global->MAIN_OPTIMIZEFORTEXTBROWSER=$user->conf->MAIN_OPTIMIZEFORTEXTBROWSER;\n}\n\n// Set terminal output option according to conf->browser.\nif (GETPOST('dol_hide_leftmenu','int') || ! empty($_SESSION['dol_hide_leftmenu']))               $conf->dol_hide_leftmenu=1;\nif (GETPOST('dol_hide_topmenu','int') || ! empty($_SESSION['dol_hide_topmenu']))                 $conf->dol_hide_topmenu=1;\nif (GETPOST('dol_optimize_smallscreen','int') || ! empty($_SESSION['dol_optimize_smallscreen'])) $conf->dol_optimize_smallscreen=1;\nif (GETPOST('dol_no_mouse_hover','int') || ! empty($_SESSION['dol_no_mouse_hover']))             $conf->dol_no_mouse_hover=1;\nif (GETPOST('dol_use_jmobile','int') || ! empty($_SESSION['dol_use_jmobile']))                   $conf->dol_use_jmobile=1;\nif (! empty($conf->browser->layout) && $conf->browser->layout != 'classic') $conf->dol_no_mouse_hover=1;\nif ((! empty($conf->browser->layout) && $conf->browser->layout == 'phone')\n\t|| (! empty($_SESSION['dol_screenwidth']) && $_SESSION['dol_screenwidth'] < 400)\n\t|| (! empty($_SESSION['dol_screenheight']) && $_SESSION['dol_screenheight'] < 400)\n)\n{\n\t$conf->dol_optimize_smallscreen=1;\n}\n// If we force to use jmobile, then we reenable javascript\nif (! empty($conf->dol_use_jmobile)) $conf->use_javascript_ajax=1;\n// Replace themes bugged with jmobile with eldy\nif (! empty($conf->dol_use_jmobile) && in_array($conf->theme,array('bureau2crea','cameleo','amarok')))\n{\n\t$conf->theme='eldy';\n\t$conf->css  =  \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n//var_dump($conf->browser->phone);\n\nif (! defined('NOREQUIRETRAN'))\n{\n\tif (! GETPOST('lang','aZ09'))\t// If language was not forced on URL\n\t{\n\t\t// If user has chosen its own language\n\t\tif (! empty($user->conf->MAIN_LANG_DEFAULT))\n\t\t{\n\t\t\t// If different than current language\n\t\t\t//print \">>>\".$langs->getDefaultLang().\"-\".$user->conf->MAIN_LANG_DEFAULT;\n\t\t\tif ($langs->getDefaultLang() != $user->conf->MAIN_LANG_DEFAULT)\n\t\t\t{\n\t\t\t\t$langs->setDefaultLang($user->conf->MAIN_LANG_DEFAULT);\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (! defined('NOLOGIN'))\n{\n\t// If the login is not recovered, it is identified with an account that does not exist.\n\t// Hacking attempt?\n\tif (! $user->login) accessforbidden();\n\n\t// Check if user is active\n\tif ($user->statut < 1)\n\t{\n\t\t// If not active, we refuse the user\n\t\t$langs->load(\"other\");\n\t\tdol_syslog(\"Authentification ko as login is disabled\");\n\t\taccessforbidden($langs->trans(\"ErrorLoginDisabled\"));\n\t\texit;\n\t}\n\n\t// Load permissions\n\t$user->getrights();\n}\n\n\ndol_syslog(\"--- Access to \".$_SERVER[\"PHP_SELF\"].' - action='.GETPOST('action','az09').', massaction='.GETPOST('massaction','az09'));\n//Another call for easy debugg\n//dol_syslog(\"Access to \".$_SERVER[\"PHP_SELF\"].' GET='.join(',',array_keys($_GET)).'->'.join(',',$_GET).' POST:'.join(',',array_keys($_POST)).'->'.join(',',$_POST));\n\n// Load main languages files\nif (! defined('NOREQUIRETRAN'))\n{\n\t$langs->load(\"main\");\n\t$langs->load(\"dict\");\n}\n\n// Define some constants used for style of arrays\n$bc=array(0=>'class=\"impair\"',1=>'class=\"pair\"');\n$bcdd=array(0=>'class=\"drag drop oddeven\"',1=>'class=\"drag drop oddeven\"');\n$bcnd=array(0=>'class=\"nodrag nodrop nohover\"',1=>'class=\"nodrag nodrop nohoverpair\"');\t\t// Used for tr to add new lines\n$bctag=array(0=>'class=\"impair tagtr\"',1=>'class=\"pair tagtr\"');\n\n// Define messages variables\n$mesg=''; $warning=''; $error=0;\n// deprecated, see setEventMessages() and dol_htmloutput_events()\n$mesgs=array(); $warnings=array(); $errors=array();\n\n// Constants used to defined number of lines in textarea\nif (empty($conf->browser->firefox))\n{\n\tdefine('ROWS_1',1);\n\tdefine('ROWS_2',2);\n\tdefine('ROWS_3',3);\n\tdefine('ROWS_4',4);\n\tdefine('ROWS_5',5);\n\tdefine('ROWS_6',6);\n\tdefine('ROWS_7',7);\n\tdefine('ROWS_8',8);\n\tdefine('ROWS_9',9);\n}\nelse\n{\n\tdefine('ROWS_1',0);\n\tdefine('ROWS_2',1);\n\tdefine('ROWS_3',2);\n\tdefine('ROWS_4',3);\n\tdefine('ROWS_5',4);\n\tdefine('ROWS_6',5);\n\tdefine('ROWS_7',6);\n\tdefine('ROWS_8',7);\n\tdefine('ROWS_9',8);\n}\n\n$heightforframes=48;\n\n// Init menu manager\nif (! defined('NOREQUIREMENU'))\n{\n\tif (empty($user->societe_id))    // If internal user or not defined\n\t{\n\t\t$conf->standard_menu=(empty($conf->global->MAIN_MENU_STANDARD_FORCED)?(empty($conf->global->MAIN_MENU_STANDARD)?'eldy_menu.php':$conf->global->MAIN_MENU_STANDARD):$conf->global->MAIN_MENU_STANDARD_FORCED);\n\t}\n\telse                        // If external user\n\t{\n\t\t$conf->standard_menu=(empty($conf->global->MAIN_MENUFRONT_STANDARD_FORCED)?(empty($conf->global->MAIN_MENUFRONT_STANDARD)?'eldy_menu.php':$conf->global->MAIN_MENUFRONT_STANDARD):$conf->global->MAIN_MENUFRONT_STANDARD_FORCED);\n\t}\n\n\t// Load the menu manager (only if not already done)\n\t$file_menu=$conf->standard_menu;\n\tif (GETPOST('menu','alpha')) $file_menu=GETPOST('menu','alpha');     // example: menu=eldy_menu.php\n\tif (! class_exists('MenuManager'))\n\t{\n\t\t$menufound=0;\n\t\t$dirmenus=array_merge(array(\"/core/menus/\"),(array) $conf->modules_parts['menus']);\n\t\tforeach($dirmenus as $dirmenu)\n\t\t{\n\t\t\t$menufound=dol_include_once($dirmenu.\"standard/\".$file_menu);\n\t\t\tif (class_exists('MenuManager')) break;\n\t\t}\n\t\tif (! class_exists('MenuManager'))\t// If failed to include, we try with standard eldy_menu.php\n\t\t{\n\t\t\tdol_syslog(\"You define a menu manager '\".$file_menu.\"' that can not be loaded.\", LOG_WARNING);\n\t\t\t$file_menu='eldy_menu.php';\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.\"/core/menus/standard/\".$file_menu;\n\t\t}\n\t}\n\t$menumanager = new MenuManager($db, empty($user->societe_id)?0:1);\n\t$menumanager->loadMenu();\n}\n\n\n\n// Functions\n\nif (! function_exists(\"llxHeader\"))\n{\n\t/**\n\t *\tShow HTML header HTML + BODY + Top menu + left menu + DIV\n\t *\n\t * @param \tstring \t$head\t\t\t\tOptionnal head lines\n\t * @param \tstring \t$title\t\t\t\tHTML title\n\t * @param\tstring\t$help_url\t\t\tUrl links to help page\n\t * \t\t                            \tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n\t *                                  \tFor other external page: http://server/url\n\t * @param\tstring\t$target\t\t\t\tTarget to use on links\n\t * @param \tint    \t$disablejs\t\t\tMore content into html header\n\t * @param \tint    \t$disablehead\t\tMore content into html header\n\t * @param \tarray  \t$arrayofjs\t\t\tArray of complementary js files\n\t * @param \tarray  \t$arrayofcss\t\t\tArray of complementary css files\n\t * @param\tstring\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n\t * @param   string  $morecssonbody      More CSS on body tag.\n\t * @param\tstring\t$replacemainareaby\tReplace call to main_area() by a print of this string\n\t * @return\tvoid\n\t */\n\tfunction llxHeader($head='', $title='', $help_url='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='', $morecssonbody='', $replacemainareaby='')\n\t{\n\t\tglobal $conf;\n\n\t\t// html header\n\t\ttop_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\n\n\t\tprint '<body id=\"mainbody\"'.($morecssonbody?' class=\"'.$morecssonbody.'\"':'').'>' . \"\\n\";\n\n\t\t// top menu and left menu area\n\t\tif (empty($conf->dol_hide_topmenu))\n\t\t{\n\t\t\ttop_menu($head, $title, $target, $disablejs, $disablehead, $arrayofjs, $arrayofcss, $morequerystring, $help_url);\n\t\t}\n\n\t\tif (empty($conf->dol_hide_leftmenu))\n\t\t{\n\t\t\tleft_menu('', $help_url, '', '', 1, $title, 1);\n\t\t}\n\n\t\t// main area\n\t\tif ($replacemainareaby)\n\t\t{\n\t\t\tprint $replacemainareaby;\n\t\t\treturn;\n\t\t}\n\t\tmain_area($title);\n\t}\n}\n\n\n/**\n *  Show HTTP header\n *\n *  @param  string  $contenttype    Content type. For example, 'text/html'\n *  @param\tint\t\t$forcenocache\tForce disabling of cache for the page\n *  @return\tvoid\n */\nfunction top_httphead($contenttype='text/html', $forcenocache=0)\n{\n\tglobal $conf;\n\n\tif ($contenttype == 'text/html' ) header(\"Content-Type: text/html; charset=\".$conf->file->character_set_client);\n\telse header(\"Content-Type: \".$contenttype);\n\t// Security options\n\theader(\"X-Content-Type-Options: nosniff\");  // With the nosniff option, if the server says the content is text/html, the browser will render it as text/html (note that most browsers now force this option to on)\n\theader(\"X-Frame-Options: SAMEORIGIN\");      // Frames allowed only if on same domain (stop some XSS attacks)\n\tif (! empty($conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY))\n\t{\n\t\t// For example, to restrict script, object, frames or img to some domains\n\t\t// script-src https://api.google.com https://anotherhost.com; object-src https://youtube.com; child-src https://youtube.com; img-src: https://static.example.com\n\t\t// For example, to restrict everything to one domain, except object, ...\n\t\t// default-src https://cdn.example.net; object-src 'none'\n\t\theader(\"Content-Security-Policy: \".$conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY);\n\t}\n\tif ($forcenocache)\n\t{\n\t\theader(\"Cache-Control: no-cache, no-store, must-revalidate, max-age=0\");\n\t}\n}\n\n/**\n * Ouput html header of a page.\n * This code is also duplicated into security2.lib.php::dol_loginfunction\n *\n * @param \tstring \t$head\t\t\t Optionnal head lines\n * @param \tstring \t$title\t\t\t HTML title\n * @param \tint    \t$disablejs\t\t Disable js output\n * @param \tint    \t$disablehead\t Disable head output\n * @param \tarray  \t$arrayofjs\t\t Array of complementary js files\n * @param \tarray  \t$arrayofcss\t\t Array of complementary css files\n * @param \tint    \t$disablejmobile\t Disable jmobile (No more used)\n * @param   int     $disablenofollow Disable no follow tag\n * @return\tvoid\n */\nfunction top_htmlhead($head, $title='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $disablejmobile=0, $disablenofollow=0)\n{\n\tglobal $user, $conf, $langs, $db;\n\n\ttop_httphead();\n\n\tif (empty($conf->css)) $conf->css = '/theme/eldy/style.css.php';\t// If not defined, eldy by default\n\n\tif (! empty($conf->global->MAIN_ACTIVATE_HTML4)) {\n\t\t$doctype = '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">';\n\t}else {\n\t\t$doctype = '<!doctype html>';\n\t}\n\tprint $doctype.\"\\n\";\n\tif (! empty($conf->global->MAIN_USE_CACHE_MANIFEST)) print '<html lang=\"'.substr($langs->defaultlang,0,2).'\" manifest=\"'.DOL_URL_ROOT.'/cache.manifest\">'.\"\\n\";\n\telse print '<html lang=\"'.substr($langs->defaultlang,0,2).'\">'.\"\\n\";\n\t//print '<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"fr\">'.\"\\n\";\n\tif (empty($disablehead))\n\t{\n\t\t$ext='layout='.$conf->browser->layout.'&version='.urlencode(DOL_VERSION);\n\n\t\tprint \"<head>\\n\";\n\t\tif (GETPOST('dol_basehref','alpha')) print '<base href=\"'.dol_escape_htmltag(GETPOST('dol_basehref','alpha')).'\">'.\"\\n\";\n\t\t// Displays meta\n\t\tprint '<meta name=\"robots\" content=\"noindex'.($disablenofollow?'':',nofollow').'\">'.\"\\n\";\t// Do not index\n\t\tprint '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">'.\"\\n\";\t\t// Scale for mobile device\n\t\tprint '<meta name=\"author\" content=\"Dolibarr Development Team\">'.\"\\n\";\n\t\t// Favicon\n\t\t$favicon=dol_buildpath('/theme/'.$conf->theme.'/img/favicon.ico',1);\n\t\tif (! empty($conf->global->MAIN_FAVICON_URL)) $favicon=$conf->global->MAIN_FAVICON_URL;\n\t\tif (empty($conf->dol_use_jmobile)) print '<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"'.$favicon.'\"/>'.\"\\n\";\t// Not required into an Android webview\n\t\t//if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"top\" title=\"'.$langs->trans(\"Home\").'\" href=\"'.(DOL_URL_ROOT?DOL_URL_ROOT:'/').'\">'.\"\\n\";\n\t\t//if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"copyright\" title=\"GNU General Public License\" href=\"http://www.gnu.org/copyleft/gpl.html#SEC1\">'.\"\\n\";\n\t\t//if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"author\" title=\"Dolibarr Development Team\" href=\"https://www.dolibarr.org\">'.\"\\n\";\n\n\t\t// Displays title\n\t\t$appli=constant('DOL_APPLICATION_TITLE');\n\t\tif (!empty($conf->global->MAIN_APPLICATION_TITLE)) $appli=$conf->global->MAIN_APPLICATION_TITLE;\n\n\t\tif ($title && ! empty($conf->global->MAIN_HTML_TITLE) && preg_match('/noapp/',$conf->global->MAIN_HTML_TITLE)) print '<title>'.dol_htmlentities($title).'</title>';\n\t\telse if ($title) print '<title>'.dol_htmlentities($appli.' - '.$title).'</title>';\n\t\telse print \"<title>\".dol_htmlentities($appli).\"</title>\";\n\t\tprint \"\\n\";\n\n\t\tif (GETPOST('version','int')) $ext='version='.GETPOST('version','int');\t// usefull to force no cache on css/js\n\t\tif (GETPOST('testmenuhider','int') || ! empty($conf->global->MAIN_TESTMENUHIDER)) $ext.='&testmenuhider='.(GETPOST('testmenuhider','int')?GETPOST('testmenuhider','int'):$conf->global->MAIN_TESTMENUHIDER);\n\n\t\t$themeparam='?lang='.$langs->defaultlang.'&amp;theme='.$conf->theme.(GETPOST('optioncss','aZ09')?'&amp;optioncss='.GETPOST('optioncss','aZ09',1):'').'&amp;userid='.$user->id.'&amp;entity='.$conf->entity;\n\t\t$themeparam.=($ext?'&amp;'.$ext:'');\n\t\tif (! empty($_SESSION['dol_resetcache'])) $themeparam.='&amp;dol_resetcache='.$_SESSION['dol_resetcache'];\n\t\tif (GETPOST('dol_hide_topmenu','int'))           { $themeparam.='&amp;dol_hide_topmenu='.GETPOST('dol_hide_topmenu','int'); }\n\t\tif (GETPOST('dol_hide_leftmenu','int'))          { $themeparam.='&amp;dol_hide_leftmenu='.GETPOST('dol_hide_leftmenu','int'); }\n\t\tif (GETPOST('dol_optimize_smallscreen','int'))   { $themeparam.='&amp;dol_optimize_smallscreen='.GETPOST('dol_optimize_smallscreen','int'); }\n\t\tif (GETPOST('dol_no_mouse_hover','int'))         { $themeparam.='&amp;dol_no_mouse_hover='.GETPOST('dol_no_mouse_hover','int'); }\n\t\tif (GETPOST('dol_use_jmobile','int'))            { $themeparam.='&amp;dol_use_jmobile='.GETPOST('dol_use_jmobile','int'); $conf->dol_use_jmobile=GETPOST('dol_use_jmobile','int'); }\n\n\t\tif (! defined('DISABLE_JQUERY') && ! $disablejs && $conf->use_javascript_ajax)\n\t\t{\n\t\t\tprint '<!-- Includes CSS for JQuery (Ajax library) -->'.\"\\n\";\n\t\t\t$jquerytheme = 'base';\n\t\t\tif (!empty($conf->global->MAIN_USE_JQUERY_THEME)) $jquerytheme = $conf->global->MAIN_USE_JQUERY_THEME;\n\t\t\tif (constant('JS_JQUERY_UI')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.JS_JQUERY_UI.'css/'.$jquerytheme.'/jquery-ui.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";  // JQuery\n\t\t\telse print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/css/'.$jquerytheme.'/jquery-ui.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";    // JQuery\n\t\t\tif (! defined('DISABLE_JQUERY_JNOTIFY')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify-alt.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";          // JNotify\n\t\t\tif (! defined('DISABLE_SELECT2') && (! empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT')))     // jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\"...\n\t\t\t{\n\t\t\t\t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?constant('REQUIRE_JQUERY_MULTISELECT'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/dist/css/'.$tmpplugin.'.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (! defined('DISABLE_FONT_AWSOME'))\n\t\t{\n\t\t\tprint '<!-- Includes CSS for font awesome -->'.\"\\n\";\n\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/theme/common/fontawesome/css/font-awesome.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n\t\t}\n\n\t\tprint '<!-- Includes CSS for Dolibarr theme -->'.\"\\n\";\n\t\t// Output style sheets (optioncss='print' or ''). Note: $conf->css looks like '/theme/eldy/style.css.php'\n\t\t$themepath=dol_buildpath($conf->css,1);\n\t\t$themesubdir='';\n\t\tif (! empty($conf->modules_parts['theme']))\t// This slow down\n\t\t{\n\t\t\tforeach($conf->modules_parts['theme'] as $reldir)\n\t\t\t{\n\t\t\t\tif (file_exists(dol_buildpath($reldir.$conf->css, 0)))\n\t\t\t\t{\n\t\t\t\t\t$themepath=dol_buildpath($reldir.$conf->css, 1);\n\t\t\t\t\t$themesubdir=$reldir;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//print 'themepath='.$themepath.' themeparam='.$themeparam;exit;\n\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.$themepath.$themeparam.'\">'.\"\\n\";\n\t\tif (! empty($conf->global->MAIN_FIX_FLASH_ON_CHROME)) print '<!-- Includes CSS that does not exists as a workaround of flash bug of chrome -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"filethatdoesnotexiststosolvechromeflashbug\">'.\"\\n\";\n\n\t\t// CSS forced by modules (relative url starting with /)\n\t\tif (! empty($conf->modules_parts['css']))\n\t\t{\n\t\t\t$arraycss=(array) $conf->modules_parts['css'];\n\t\t\tforeach($arraycss as $modcss => $filescss)\n\t\t\t{\n\t\t\t\t$filescss=(array) $filescss;\t// To be sure filecss is an array\n\t\t\t\tforeach($filescss as $cssfile)\n\t\t\t\t{\n\t\t\t\t\tif (empty($cssfile)) dol_syslog(\"Warning: module \".$modcss.\" declared a css path file into its descriptor that is empty.\", LOG_WARNING);\n\t\t\t\t\t// cssfile is a relative path\n\t\t\t\t\tprint '<!-- Includes CSS added by module '.$modcss. ' -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"'.dol_buildpath($cssfile,1);\n\t\t\t\t\t// We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters, so browser cache is not used.\n\t\t\t\t\tif (!preg_match('/\\.css$/i',$cssfile)) print $themeparam;\n\t\t\t\t\tprint '\">'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// CSS forced by page in top_htmlhead call (relative url starting with /)\n\t\tif (is_array($arrayofcss))\n\t\t{\n\t\t\tforeach($arrayofcss as $cssfile)\n\t\t\t{\n\t\t\t\tprint '<!-- Includes CSS added by page -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" title=\"default\" href=\"'.dol_buildpath($cssfile,1);\n\t\t\t\t// We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters and browser cache is not used.\n\t\t\t\tif (!preg_match('/\\.css$/i',$cssfile)) print $themeparam;\n\t\t\t\tprint '\">'.\"\\n\";\n\t\t\t}\n\t\t}\n\n\t\t// Output standard javascript links\n\t\tif (! defined('DISABLE_JQUERY') && ! $disablejs && ! empty($conf->use_javascript_ajax))\n\t\t{\n\t\t\t// JQuery. Must be before other includes\n\t\t\tprint '<!-- Includes JS for JQuery -->'.\"\\n\";\n\t\t\tif (defined('JS_JQUERY') && constant('JS_JQUERY')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY.'jquery.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\telse print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\tif (! empty($conf->global->MAIN_FEATURES_LEVEL) && ! defined('JS_JQUERY_MIGRATE_DISABLED'))\n\t\t\t{\n\t\t\t\tif (defined('JS_JQUERY_MIGRATE') && constant('JS_JQUERY_MIGRATE')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_MIGRATE.'jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\telse print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\tif (defined('JS_JQUERY_UI') && constant('JS_JQUERY_UI')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_UI.'jquery-ui.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\telse print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-ui.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\tif (! defined('DISABLE_JQUERY_TABLEDND')) print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tablednd/jquery.tablednd.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t// jQuery jnotify\n\t\t\tif (empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) && ! defined('DISABLE_JQUERY_JNOTIFY'))\n\t\t\t{\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\t// Flot\n\t\t\tif (empty($conf->global->MAIN_DISABLE_JQUERY_FLOT) && ! defined('DISABLE_JQUERY_FLOT'))\n\t\t\t{\n\t\t\t\tif (constant('JS_JQUERY_FLOT'))\n\t\t\t\t{\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.pie.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.stack.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.pie.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.stack.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t// jQuery jeditable\n\t\t\tif (! empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && ! defined('DISABLE_JQUERY_JEDITABLE'))\n\t\t\t{\n\t\t\t\tprint '<!-- JS to manage editInPlace feature -->'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-datepicker.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-autocomplete.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\">'.\"\\n\";\n\t\t\t\tprint 'var urlSaveInPlace = \\''.DOL_URL_ROOT.'/core/ajax/saveinplace.php\\';'.\"\\n\";\n\t\t\t\tprint 'var urlLoadInPlace = \\''.DOL_URL_ROOT.'/core/ajax/loadinplace.php\\';'.\"\\n\";\n\t\t\t\tprint 'var tooltipInPlace = \\''.$langs->transnoentities('ClickToEdit').'\\';'.\"\\n\";\t// Added in title attribute of span\n\t\t\t\tprint 'var placeholderInPlace = \\'&nbsp;\\';'.\"\\n\";\t// If we put another string than $langs->trans(\"ClickToEdit\") here, nothing is shown. If we put empty string, there is error, Why ?\n\t\t\t\tprint 'var cancelInPlace = \\''.$langs->trans('Cancel').'\\';'.\"\\n\";\n\t\t\t\tprint 'var submitInPlace = \\''.$langs->trans('Ok').'\\';'.\"\\n\";\n\t\t\t\tprint 'var indicatorInPlace = \\'<img src=\"'.DOL_URL_ROOT.\"/theme/\".$conf->theme.\"/img/working.gif\".'\">\\';'.\"\\n\";\n\t\t\t\tprint 'var withInPlace = 300;';\t\t// width in pixel for default string edit\n\t\t\t\tprint '</script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/editinplace.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ckeditor.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t}\n            // jQuery Timepicker\n            if (! empty($conf->global->MAIN_USE_JQUERY_TIMEPICKER) || defined('REQUIRE_JQUERY_TIMEPICKER'))\n            {\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/timepicker/jquery-ui-timepicker-addon.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/timepicker.js.php?lang='.$langs->defaultlang.($ext?'&amp;'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            if (! defined('DISABLE_SELECT2') && (! empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT')))     // jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\", ...\n            {\n            \t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?constant('REQUIRE_JQUERY_MULTISELECT'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/dist/js/'.$tmpplugin.'.full.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\t// We include full because we need the support of containerCssClass\n            }\n        }\n\n        if (! $disablejs && ! empty($conf->use_javascript_ajax))\n        {\n            // CKEditor\n            if (! empty($conf->fckeditor->enabled) && (empty($conf->global->FCKEDITOR_EDITORNAME) || $conf->global->FCKEDITOR_EDITORNAME == 'ckeditor') && ! defined('DISABLE_CKEDITOR'))\n            {\n                print '<!-- Includes JS for CKEditor -->'.\"\\n\";\n                $pathckeditor = DOL_URL_ROOT . '/includes/ckeditor/ckeditor/';\n                $jsckeditor='ckeditor.js';\n                if (constant('JS_CKEDITOR'))\t// To use external ckeditor 4 js lib\n                {\n                \t$pathckeditor=constant('JS_CKEDITOR');\n                }\n                print '<script type=\"text/javascript\">';\n                print 'var CKEDITOR_BASEPATH = \\''.$pathckeditor.'\\';'.\"\\n\";\n                print 'var ckeditorConfig = \\''.dol_buildpath($themesubdir.'/theme/'.$conf->theme.'/ckeditor/config.js'.($ext?'?'.$ext:''),1).'\\';'.\"\\n\";\t\t// $themesubdir='' in standard usage\n                print 'var ckeditorFilebrowserBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n                print 'var ckeditorFilebrowserImageBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Type=Image&Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n                print '</script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.$pathckeditor.$jsckeditor.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n\n            // Browser notifications\n            if (! defined('DISABLE_BROWSER_NOTIF'))\n            {\n                $enablebrowsernotif=false;\n                if (! empty($conf->agenda->enabled) && ! empty($conf->global->AGENDA_REMINDER_BROWSER)) $enablebrowsernotif=true;\n                if ($conf->browser->layout == 'phone') $enablebrowsernotif=false;\n                if ($enablebrowsernotif)\n                {\n                    print '<!-- Includes JS of Dolibarr (brwoser layout = '.$conf->browser->layout.')-->'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/lib_notification.js.php'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                }\n            }\n\n            // Global js function\n            print '<!-- Includes JS of Dolibarr -->'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/lib_head.js.php?lang='.$langs->defaultlang.($ext?'&'.$ext:'').'\"></script>'.\"\\n\";\n\n            // JS forced by modules (relative url starting with /)\n            if (! empty($conf->modules_parts['js']))\t\t// $conf->modules_parts['js'] is array('module'=>array('file1','file2'))\n        \t{\n        \t\t$arrayjs=(array) $conf->modules_parts['js'];\n\t            foreach($arrayjs as $modjs => $filesjs)\n\t            {\n        \t\t\t$filesjs=(array) $filesjs;\t// To be sure filejs is an array\n\t\t            foreach($filesjs as $jsfile)\n\t\t            {\n\t    \t    \t\t// jsfile is a relative path\n\t        \t    \tprint '<!-- Include JS added by module '.$modjs. '-->'.\"\\n\".'<script type=\"text/javascript\" src=\"'.dol_buildpath($jsfile,1).'\"></script>'.\"\\n\";\n\t\t            }\n\t            }\n        \t}\n            // JS forced by page in top_htmlhead (relative url starting with /)\n            if (is_array($arrayofjs))\n            {\n                print '<!-- Includes JS added by page -->'.\"\\n\";\n                foreach($arrayofjs as $jsfile)\n                {\n                    if (preg_match('/^http/i',$jsfile))\n                    {\n                        print '<script type=\"text/javascript\" src=\"'.$jsfile.'\"></script>'.\"\\n\";\n                    }\n                    else\n                    {\n                        if (! preg_match('/^\\//',$jsfile)) $jsfile='/'.$jsfile;\t// For backward compatibility\n                        print '<script type=\"text/javascript\" src=\"'.dol_buildpath($jsfile,1).'\"></script>'.\"\\n\";\n                    }\n                }\n            }\n        }\n\n        if (! empty($head)) print $head.\"\\n\";\n        if (! empty($conf->global->MAIN_HTML_HEADER)) print $conf->global->MAIN_HTML_HEADER.\"\\n\";\n\n        print \"</head>\\n\\n\";\n    }\n\n    $conf->headerdone=1;\t// To tell header was output\n}\n\n\n/**\n *  Show an HTML header + a BODY + The top menu bar\n *\n *  @param      string\t$head    \t\t\tLines in the HEAD\n *  @param      string\t$title   \t\t\tTitle of web page\n *  @param      string\t$target  \t\t\tTarget to use in menu links (Example: '' or '_top')\n *\t@param\t\tint\t\t$disablejs\t\t\tDo not output links to js (Ex: qd fonction utilisee par sous formulaire Ajax)\n *\t@param\t\tint\t\t$disablehead\t\tDo not output head section\n *\t@param\t\tarray\t$arrayofjs\t\t\tArray of js files to add in header\n *\t@param\t\tarray\t$arrayofcss\t\t\tArray of css files to add in header\n *  @param\t\tstring\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n *  @param      string\t$helppagename    \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                Syntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t                   For other external page: http://server/url\n *  @return\t\tvoid\n */\nfunction top_menu($head, $title='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='', $helppagename='')\n{\n\tglobal $user, $conf, $langs, $db;\n\tglobal $dolibarr_main_authentication, $dolibarr_main_demo;\n\tglobal $hookmanager,$menumanager;\n\n\t$searchform='';\n\t$bookmarks='';\n\n\t// Instantiate hooks of thirdparty module\n\t$hookmanager->initHooks(array('toprightmenu'));\n\n\t$toprightmenu='';\n\n\t// For backward compatibility with old modules\n\tif (empty($conf->headerdone))\n\t{\n\t\ttop_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\n\t\tprint '<body id=\"mainbody\">';\n\t}\n\n\t/*\n     * Top menu\n     */\n\tif (empty($conf->dol_hide_topmenu) && (! defined('NOREQUIREMENU') || ! constant('NOREQUIREMENU')))\n\t{\n\t\tprint \"\\n\".'<!-- Start top horizontal -->'.\"\\n\";\n\n\t\tprint '<div class=\"side-nav-vert\"><div id=\"id-top\">';\n\n\t\t// Show menu entries\n\t\tprint '<div id=\"tmenu_tooltip'.(empty($conf->global->MAIN_MENU_INVERT)?'':'invert').'\" class=\"tmenu\">'.\"\\n\";\n\t\t$menumanager->atarget=$target;\n\t\t$menumanager->showmenu('top', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks));      // This contains a \\n\n\t\tprint \"</div>\\n\";\n\n\t\t// Define link to login card\n\t\t$appli=constant('DOL_APPLICATION_TITLE');\n\t\tif (! empty($conf->global->MAIN_APPLICATION_TITLE))\n\t\t{\n\t\t\t$appli=$conf->global->MAIN_APPLICATION_TITLE;\n\t\t\tif (preg_match('/\\d\\.\\d/', $appli))\n\t\t\t{\n\t\t\t\tif (! preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) $appli.=\" (\".DOL_VERSION.\")\";\t// If new title contains a version that is different than core\n\t\t\t}\n\t\t\telse $appli.=\" \".DOL_VERSION;\n\t\t}\n\t\telse $appli.=\" \".DOL_VERSION;\n\n\t\tif (! empty($conf->global->MAIN_FEATURES_LEVEL)) $appli.=\"<br>\".$langs->trans(\"LevelOfFeature\").': '.$conf->global->MAIN_FEATURES_LEVEL;\n\n\t\t$logouttext='';\n\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER))\n\t\t{\n\t\t\t//$logouthtmltext=$appli.'<br>';\n\t\t\tif ($_SESSION[\"dol_authmode\"] != 'forceuser' && $_SESSION[\"dol_authmode\"] != 'http')\n\t\t\t{\n\t\t\t\t$logouthtmltext.=$langs->trans(\"Logout\").'<br>';\n\n\t\t\t\t$logouttext .='<a href=\"'.DOL_URL_ROOT.'/user/logout.php\">';\n\t\t\t\t//$logouttext .= img_picto($langs->trans('Logout').\":\".$langs->trans('Logout'), 'logout_top.png', 'class=\"login\"', 0, 0, 1);\n\t\t\t\t$logouttext .='<span class=\"fa fa-sign-out atoplogin\"></span>';\n\t\t\t\t$logouttext .='</a>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$logouthtmltext.=$langs->trans(\"NoLogoutProcessWithAuthMode\",$_SESSION[\"dol_authmode\"]);\n\t\t\t\t$logouttext .= img_picto($langs->trans('Logout').\":\".$langs->trans('Logout'), 'logout_top.png', 'class=\"login\"', 0, 0, 1);\n\t\t\t}\n\t\t}\n\n\t\tprint '<div class=\"login_block\">'.\"\\n\";\n\n\t\t// Add login user link\n\t\t$toprightmenu.='<div class=\"login_block_user\">';\n\n\t\t// Login name with photo and tooltip\n\t\t$mode=-1;\n\t\t$toprightmenu.='<div class=\"inline-block nowrap\"><div class=\"inline-block login_block_elem login_block_elem_name\" style=\"padding: 0px;\">';\n\t\t$toprightmenu.=$user->getNomUrl($mode, '', 1, 0, 11, 0, ($user->firstname ? 'firstname' : -1),'atoplogin');\n\t\t$toprightmenu.='</div></div>';\n\n\t\t$toprightmenu.='</div>'.\"\\n\";\n\n\t\t$toprightmenu.='<div class=\"login_block_other\">';\n\n\t\t// Execute hook printTopRightMenu (hooks should output string like '<div class=\"login\"><a href=\"\">mylink</a></div>')\n\t\t$parameters=array();\n\t\t$result=$hookmanager->executeHooks('printTopRightMenu',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t\tif (is_numeric($result))\n\t\t{\n\t\t\tif (empty($result)) $toprightmenu.=$hookmanager->resPrint;\t\t// add\n\t\t\telse  $toprightmenu=$hookmanager->resPrint;\t\t\t\t\t\t// replace\n\t\t}\n\t\telse $toprightmenu.=$result;\t// For backward compatibility\n\n\t\t// Link to module builder\n\t\tif (! empty($conf->modulebuilder->enabled))\n\t\t{\n\t\t\t$text ='<a href=\"'.DOL_URL_ROOT.'/modulebuilder/index.php?mainmenu=home&leftmenu=admintools\" target=\"_modulebuilder\">';\n\t\t\t//$text.= img_picto(\":\".$langs->trans(\"ModuleBuilder\"), 'printer_top.png', 'class=\"printer\"');\n\t\t\t$text.='<span class=\"fa fa-bug atoplogin\"></span>';\n\t\t\t$text.='</a>';\n\t\t\t$toprightmenu.=@Form::textwithtooltip('',$langs->trans(\"ModuleBuilder\"),2,1,$text,'login_block_elem',2);\n\t\t}\n\n\t\t// Link to print main content area\n\t\tif (empty($conf->global->MAIN_PRINT_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && empty($conf->browser->phone))\n\t\t{\n\t\t\t$qs=dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]);\n\n\t\t\tif (is_array($_POST))\n\t\t\t{\n\t\t\t\tforeach($_POST as $key=>$value) {\n\t\t\t\t\tif ($key!=='action' && $key!=='password' && !is_array($value)) $qs.='&'.$key.'='.urlencode($value);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$qs.=(($qs && $morequerystring)?'&':'').$morequerystring;\n\t\t\t$text ='<a href=\"'.dol_escape_htmltag($_SERVER[\"PHP_SELF\"]).'?'.$qs.($qs?'&':'').'optioncss=print\" target=\"_blank\">';\n\t\t\t//$text.= img_picto(\":\".$langs->trans(\"PrintContentArea\"), 'printer_top.png', 'class=\"printer\"');\n\t\t\t$text.='<span class=\"fa fa-print atoplogin\"></span>';\n\t\t\t$text.='</a>';\n\t\t\t$toprightmenu.=@Form::textwithtooltip('',$langs->trans(\"PrintContentArea\"),2,1,$text,'login_block_elem',2);\n\t\t}\n\n\t\t// Link to Dolibarr wiki pages\n\t\tif (empty($conf->global->MAIN_HELP_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER))\n\t\t{\n\t\t\t$langs->load(\"help\");\n\n\t\t\t$helpbaseurl='';\n\t\t\t$helppage='';\n\t\t\t$mode='';\n\n\t\t\tif (empty($helppagename)) $helppagename='EN:User_documentation|FR:Documentation_utilisateur|ES:Documentaci\u00f3n_usuarios';\n\n\t\t\t// Get helpbaseurl, helppage and mode from helppagename and langs\n\t\t\t$arrayres=getHelpParamFor($helppagename,$langs);\n\t\t\t$helpbaseurl=$arrayres['helpbaseurl'];\n\t\t\t$helppage=$arrayres['helppage'];\n\t\t\t$mode=$arrayres['mode'];\n\n\t\t\t// Link to help pages\n\t\t\tif ($helpbaseurl && $helppage)\n\t\t\t{\n\t\t\t\t$text='';\n\t\t\t\t$title=$appli.'<br>';\n\t\t\t\t$title.=$langs->trans($mode == 'wiki' ? 'GoToWikiHelpPage': 'GoToHelpPage');\n\t\t\t\tif ($mode == 'wiki') $title.=' - '.$langs->trans(\"PageWiki\").' &quot;'.dol_escape_htmltag(strtr($helppage,'_',' ')).'&quot;';\n\t\t\t\t$text.='<a class=\"help\" target=\"_blank\" rel=\"noopener\" href=\"';\n\t\t\t\tif ($mode == 'wiki') $text.=sprintf($helpbaseurl,urlencode(html_entity_decode($helppage)));\n\t\t\t\telse $text.=sprintf($helpbaseurl,$helppage);\n\t\t\t\t$text.='\">';\n\t\t\t\t//$text.=img_picto('', 'helpdoc_top').' ';\n\t\t\t\t$text.='<span class=\"fa fa-question-circle atoplogin\"></span>';\n\t\t\t\t//$toprightmenu.=$langs->trans($mode == 'wiki' ? 'OnlineHelp': 'Help');\n\t\t\t\t//if ($mode == 'wiki') $text.=' ('.dol_trunc(strtr($helppage,'_',' '),8).')';\n\t\t\t\t$text.='</a>';\n\t\t\t\t//$toprightmenu.='</div>'.\"\\n\";\n\t\t\t\t$toprightmenu.=@Form::textwithtooltip('',$title,2,1,$text,'login_block_elem',2);\n\t\t\t}\n\t\t}\n\n\t\t// Logout link\n\t\t$toprightmenu.=@Form::textwithtooltip('',$logouthtmltext,2,1,$logouttext,'login_block_elem',2);\n\n\t\t$toprightmenu.='</div>';\n\n\t\tprint $toprightmenu;\n\n\t\tprint \"</div>\\n\";\n\t\tprint '</div></div>';\n\n\t\t//unset($form);\n\n\t\tprint '<div style=\"clear: both;\"></div>';\n\t\tprint \"<!-- End top horizontal menu -->\\n\\n\";\n\t}\n\n\tif (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) print '<!-- Begin div id-container --><div id=\"id-container\" class=\"id-container'.($morecss?' '.$morecss:'').'\">';\n}\n\n\n/**\n *  Show left menu bar\n *\n *  @param  array\t$menu_array_before \t       \tTable of menu entries to show before entries of menu handler. This param is deprectaed and must be provided to ''.\n *  @param  string\t$helppagename    \t       \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                   \tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t         \t\t       For other external page: http://server/url\n *  @param  string\t$notused             \t\tDeprecated. Used in past to add content into left menu. Hooks can be used now.\n *  @param  array\t$menu_array_after           Table of menu entries to show after entries of menu handler\n *  @param  int\t\t$leftmenuwithoutmainarea    Must be set to 1. 0 by default for backward compatibility with old modules.\n *  @param  string\t$title                      Title of web page\n *  @param  string  $acceptdelayedhtml          1 if caller request to have html delayed content not returned but saved into global $delayedhtmlcontent (so caller can show it at end of page to avoid flash FOUC effect)\n *  @return\tvoid\n */\nfunction left_menu($menu_array_before, $helppagename='', $notused='', $menu_array_after='', $leftmenuwithoutmainarea=0, $title='', $acceptdelayedhtml=0)\n{\n\tglobal $user, $conf, $langs, $db, $form;\n\tglobal $hookmanager, $menumanager;\n\n\t$searchform='';\n\t$bookmarks='';\n\n\tif (! empty($menu_array_before)) dol_syslog(\"Deprecated parameter menu_array_before was used when calling main::left_menu function. Menu entries of module should now be defined into module descriptor and not provided when calling left_menu.\", LOG_WARNING);\n\n\tif (empty($conf->dol_hide_leftmenu) && (! defined('NOREQUIREMENU') || ! constant('NOREQUIREMENU')))\n\t{\n\t\t// Instantiate hooks of thirdparty module\n\t\t$hookmanager->initHooks(array('searchform','leftblock'));\n\n\t\tprint \"\\n\".'<!-- Begin side-nav id-left -->'.\"\\n\".'<div class=\"side-nav\"><div id=\"id-left\">'.\"\\n\";\n\n\t\tif ($conf->browser->layout == 'phone') $conf->global->MAIN_USE_OLD_SEARCH_FORM=1;\t// Select into select2 is awfull on smartphone. TODO Is this still true with select2 v4 ?\n\n\t\tprint \"\\n\";\n\t\tif ($conf->use_javascript_ajax && empty($conf->global->MAIN_USE_OLD_SEARCH_FORM))\n\t\t{\n\t\t\tif (! is_object($form)) $form=new Form($db);\n\t\t\t$selected=-1;\n\t\t\t$searchform.=$form->selectArrayAjax('searchselectcombo', DOL_URL_ROOT.'/core/ajax/selectsearchbox.php', $selected, '', '', 0, 1, 'vmenusearchselectcombo', 1, $langs->trans(\"Search\"), 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (! is_object($form)) $form=new Form($db);\n\t\t\t$selected=-1;\n\t\t\t$usedbyinclude=1;\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/ajax/selectsearchbox.php';\n\n\t\t\tforeach($arrayresult as $key => $val)\n\t\t\t{\n\t\t\t\t//$searchform.=printSearchForm($val['url'], $val['url'], $val['label'], 'maxwidth100', 'sall', $val['shortcut'], 'searchleft', img_picto('',$val['img']));\n\t\t\t\t$searchform.=printSearchForm($val['url'], $val['url'], $val['label'], 'maxwidth125', 'sall', $val['shortcut'], 'searchleft', img_picto('', $val['img'], '', false, 1, 1));\n\t\t\t}\n\t\t}\n\n\t\t// Execute hook printSearchForm\n\t\t$parameters=array('searchform'=>$searchform);\n\t\t$reshook=$hookmanager->executeHooks('printSearchForm',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t\tif (empty($reshook))\n\t\t{\n\t\t\t$searchform.=$hookmanager->resPrint;\n\t\t}\n\t\telse $searchform=$hookmanager->resPrint;\n\n\t\t// Force special value for $searchform\n\t\tif (! empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) || empty($conf->use_javascript_ajax))\n\t\t{\n\t\t\t$urltosearch=DOL_URL_ROOT.'/core/search_page.php?showtitlebefore=1';\n\t\t\t$searchform='<div class=\"blockvmenuimpair blockvmenusearchphone\"><div id=\"divsearchforms1\"><a href=\"'.$urltosearch.'\" alt=\"'.dol_escape_htmltag($langs->trans(\"ShowSearchFields\")).'\">'.$langs->trans(\"Search\").'...</a></div></div>';\n\t\t}\n\t\telseif ($conf->use_javascript_ajax && ! empty($conf->global->MAIN_USE_OLD_SEARCH_FORM))\n\t\t{\n\t\t\t$searchform='<div class=\"blockvmenuimpair blockvmenusearchphone\"><div id=\"divsearchforms1\"><a href=\"#\" alt=\"'.dol_escape_htmltag($langs->trans(\"ShowSearchFields\")).'\">'.$langs->trans(\"Search\").'...</a></div><div id=\"divsearchforms2\" style=\"display: none\">'.$searchform.'</div>';\n\t\t\t$searchform.='<script type=\"text/javascript\">\n            \tjQuery(document).ready(function () {\n            \t\tjQuery(\"#divsearchforms1\").click(function(){\n\t                   jQuery(\"#divsearchforms2\").toggle();\n\t               });\n            \t});\n                </script>' . \"\\n\";\n\t\t\t$searchform.='</div>';\n\t\t}\n\n\t\t// Define $bookmarks\n\t\tif (! empty($conf->bookmark->enabled) && $user->rights->bookmark->lire)\n\t\t{\n\t\t\tinclude_once (DOL_DOCUMENT_ROOT.'/bookmarks/bookmarks.lib.php');\n\t\t\t$langs->load(\"bookmarks\");\n\n\t\t\t$bookmarks=printBookmarksList($db, $langs);\n\t\t}\n\n\t\t// Left column\n\t\tprint '<!-- Begin left menu -->'.\"\\n\";\n\n\t\tprint '<div class=\"vmenu\"'.(empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)?'':' title=\"Left menu\"').'>'.\"\\n\\n\";\n\n\t\t// Show left menu with other forms\n\t\t$menumanager->menu_array = $menu_array_before;\n\t\t$menumanager->menu_array_after = $menu_array_after;\n\t\t$menumanager->showmenu('left', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks)); // output menu_array and menu found in database\n\n\t\t// Dolibarr version + help + bug report link\n\t\tprint \"\\n\";\n\t\tprint \"<!-- Begin Help Block-->\\n\";\n\t\tprint '<div id=\"blockvmenuhelp\" class=\"blockvmenuhelp\">'.\"\\n\";\n\n\t\t// Version\n\t\tif (empty($conf->global->MAIN_HIDE_VERSION))    // Version is already on help picto and on login page.\n\t\t{\n\t\t\t$doliurl='https://www.dolibarr.org';\n\t\t\t//local communities\n\t\t\tif (preg_match('/fr/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.fr';\n\t\t\tif (preg_match('/es/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.es';\n\t\t\tif (preg_match('/de/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.de';\n\t\t\tif (preg_match('/it/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.it';\n\t\t\tif (preg_match('/gr/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.gr';\n\n\t\t\t$appli=constant('DOL_APPLICATION_TITLE');\n\t\t\tif (! empty($conf->global->MAIN_APPLICATION_TITLE))\n\t\t\t{\n\t\t\t\t$appli=$conf->global->MAIN_APPLICATION_TITLE; $doliurl='';\n\t\t\t\tif (preg_match('/\\d\\.\\d/', $appli))\n\t\t\t\t{\n\t\t\t\t\tif (! preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) $appli.=\" (\".DOL_VERSION.\")\";\t// If new title contains a version that is different than core\n\t\t\t\t}\n\t\t\t\telse $appli.=\" \".DOL_VERSION;\n\t\t\t}\n\t\t\telse $appli.=\" \".DOL_VERSION;\n\t\t\tprint '<div id=\"blockvmenuhelpapp\" class=\"blockvmenuhelp\">';\n\t\t\tif ($doliurl) print '<a class=\"help\" target=\"_blank\" rel=\"noopener\" href=\"'.$doliurl.'\">';\n\t\t\telse print '<span class=\"help\">';\n\t\t\tprint $appli;\n\t\t\tif ($doliurl) print '</a>';\n\t\t\telse print '</span>';\n\t\t\tprint '</div>'.\"\\n\";\n\t\t}\n\n\t\t// Link to bugtrack\n\t\tif (! empty($conf->global->MAIN_BUGTRACK_ENABLELINK))\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\n\t\t\t$bugbaseurl = 'https://github.com/Dolibarr/dolibarr/issues/new';\n\t\t\t$bugbaseurl.= '?title=';\n\t\t\t$bugbaseurl.= urlencode(\"Bug: \");\n\t\t\t$bugbaseurl.= '&body=';\n\t\t\t// TODO use .github/ISSUE_TEMPLATE.md to generate?\n\t\t\t$bugbaseurl .= urlencode(\"# Bug\\n\");\n\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"## Environment\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Version**: \" . DOL_VERSION . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **OS**: \" . php_uname('s') . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Web server**: \" . $_SERVER[\"SERVER_SOFTWARE\"] . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **PHP**: \" . php_sapi_name() . ' ' . phpversion() . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Database**: \" . $db::LABEL . ' ' . $db->getVersion() . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **URL**: \" . $_SERVER[\"REQUEST_URI\"] . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"## Report\\n\");\n\t\t\tprint '<div id=\"blockvmenuhelpbugreport\" class=\"blockvmenuhelp\">';\n\t\t\tprint '<a class=\"help\" target=\"_blank\" rel=\"noopener\" href=\"'.$bugbaseurl.'\">'.$langs->trans(\"FindBug\").'</a>';\n\t\t\tprint '</div>';\n\t\t}\n\n\t\tprint \"</div>\\n\";\n\t\tprint \"<!-- End Help Block-->\\n\";\n\t\tprint \"\\n\";\n\n\t\tprint \"</div>\\n\";\n\t\tprint \"<!-- End left menu -->\\n\";\n\t\tprint \"\\n\";\n\n\t\t// Execute hook printLeftBlock\n\t\t$parameters=array();\n\t\t$reshook=$hookmanager->executeHooks('printLeftBlock',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t\tprint $hookmanager->resPrint;\n\n\t\tprint '</div></div> <!-- End side-nav id-left -->';\t// End div id=\"side-nav\" div id=\"id-left\"\n\t}\n\n\tprint \"\\n\";\n\tprint '<!-- Begin right area -->'.\"\\n\";\n\n\tif (empty($leftmenuwithoutmainarea)) main_area($title);\n}\n\n\n/**\n *  Begin main area\n *\n *  @param\tstring\t$title\t\tTitle\n *  @return\tvoid\n */\nfunction main_area($title='')\n{\n\tglobal $conf, $langs;\n\n\tif (empty($conf->dol_hide_leftmenu)) print '<div id=\"id-right\">';\n\n\tprint \"\\n\";\n\n\tprint '<!-- Begin div class=\"fiche\" -->'.\"\\n\".'<div class=\"fiche\">'.\"\\n\";\n\n\tif (! empty($conf->global->MAIN_ONLY_LOGIN_ALLOWED)) print info_admin($langs->trans(\"WarningYouAreInMaintenanceMode\",$conf->global->MAIN_ONLY_LOGIN_ALLOWED));\n}\n\n\n/**\n *  Return helpbaseurl, helppage and mode\n *\n *  @param\tstring\t\t$helppagename\t\tPage name ('EN:xxx,ES:eee,FR:fff...' or 'http://localpage')\n *  @param  Translate\t$langs\t\t\t\tLanguage\n *  @return\tarray\t\tArray of help urls\n */\nfunction getHelpParamFor($helppagename,$langs)\n{\n\t$helpbaseurl='';\n\t$helppage='';\n\t$mode='';\n\n\tif (preg_match('/^http/i',$helppagename))\n\t{\n\t\t// If complete URL\n\t\t$helpbaseurl='%s';\n\t\t$helppage=$helppagename;\n\t\t$mode='local';\n\t}\n\telse\n\t{\n\t\t// If WIKI URL\n\t\tif (preg_match('/^es/i',$langs->defaultlang))\n\t\t{\n\t\t\t$helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/ES:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n\t\t}\n\t\tif (preg_match('/^fr/i',$langs->defaultlang))\n\t\t{\n\t\t\t$helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/FR:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n\t\t}\n\t\tif (empty($helppage))\t// If help page not already found\n\t\t{\n\t\t\t$helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/EN:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n\t\t}\n\t\t$mode='wiki';\n\t}\n\treturn array('helpbaseurl'=>$helpbaseurl,'helppage'=>$helppage,'mode'=>$mode);\n}\n\n\n/**\n *  Show a search area.\n *  Used when the javascript quick search is not used.\n *\n *  @param  string\t$urlaction          Url post\n *  @param  string\t$urlobject          Url of the link under the search box\n *  @param  string\t$title              Title search area\n *  @param  string\t$htmlmorecss        Add more css\n *  @param  string\t$htmlinputname      Field Name input form\n *  @param\tstring\t$accesskey\t\t\tAccesskey\n *  @param  string  $prefhtmlinputname  Complement for id to avoid multiple same id in the page\n *  @param\tstring\t$img\t\t\t\tImage to use\n *  @param\tstring\t$showtitlebefore\tShow title before input text instead of into placeholder. This can be set when output is dedicated for text browsers.\n *  @return\tstring\n */\nfunction printSearchForm($urlaction, $urlobject, $title, $htmlmorecss, $htmlinputname, $accesskey='', $prefhtmlinputname='',$img='', $showtitlebefore=0)\n{\n\tglobal $conf,$langs,$user;\n\n\t$ret='';\n\t$ret.='<form action=\"'.$urlaction.'\" method=\"post\" class=\"searchform\">';\n\t$ret.='<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t$ret.='<input type=\"hidden\" name=\"mode\" value=\"search\">';\n\t$ret.='<input type=\"hidden\" name=\"savelogin\" value=\"'.dol_escape_htmltag($user->login).'\">';\n\tif ($showtitlebefore) $ret.=$title.' ';\n\t$ret.='<input type=\"text\" class=\"flat '.$htmlmorecss.'\"';\n\t$ret.=' style=\"text-indent: 22px; background-image: url(\\''.$img.'\\'); background-repeat: no-repeat; background-position: 3px;\"';\n\t$ret.=($accesskey?' accesskey=\"'.$accesskey.'\"':'');\n\t$ret.=' placeholder=\"'.strip_tags($title).'\"';\n\t$ret.=' name=\"'.$htmlinputname.'\" id=\"'.$prefhtmlinputname.$htmlinputname.'\" />';\n\t$ret.='<input type=\"submit\" class=\"button\" style=\"padding-top: 4px; padding-bottom: 4px; padding-left: 6px; padding-right: 6px\" value=\"'.$langs->trans(\"Go\").'\">';\n\t$ret.=\"</form>\\n\";\n\treturn $ret;\n}\n\n\nif (! function_exists(\"llxFooter\"))\n{\n\t/**\n\t * Show HTML footer\n\t * Close div /DIV class=fiche + /DIV id-right + /DIV id-container + /BODY + /HTML.\n\t * If global var $delayedhtmlcontent was filled, we output it just before closing the body.\n\t *\n\t * @param\tstring\t$comment    \t\t\t\tA text to add as HTML comment into HTML generated page\n\t * @param\tstring\t$zone\t\t\t\t\t\t'private' (for private pages) or 'public' (for public pages)\n\t * @param\tint\t\t$disabledoutputofmessages\tClear all messages stored into session without diplaying them\n\t * @return\tvoid\n\t */\n\tfunction llxFooter($comment='',$zone='private', $disabledoutputofmessages=0)\n\t{\n\t\tglobal $conf, $langs, $user, $object;\n\t\tglobal $delayedhtmlcontent;\n\n\t\t$ext='layout='.$conf->browser->layout.'&version='.urlencode(DOL_VERSION);\n\n\t\t// Global html output events ($mesgs, $errors, $warnings)\n\t\tdol_htmloutput_events($disabledoutputofmessages);\n\n\t\t// Code for search criteria persistence.\n\t\t// Save $user->lastsearch_values if defined (define on list pages when a form field search_xxx exists)\n\t\tif (is_object($user) && ! empty($user->lastsearch_values_tmp) && is_array($user->lastsearch_values_tmp))\n\t\t{\n\t\t\t// Clean data\n\t\t\tforeach($user->lastsearch_values_tmp as $key => $val)\n\t\t\t{\n\t\t\t\tunset($_SESSION['lastsearch_values_tmp_'.$key]);\t\t\t// Clean arry to rebuild it just after\n\t\t\t\tif (count($val) && empty($_POST['button_removefilter']))\t// If there is search criteria to save and we did not click on 'Clear filter' button\n\t\t\t\t{\n\t\t\t\t\tif (empty($val['sortfield'])) unset($val['sortfield']);\n\t\t\t\t\tif (empty($val['sortorder'])) unset($val['sortorder']);\n\t\t\t\t\tdol_syslog('Save lastsearch_values_tmp_'.$key.'='.json_encode($val, 0).\" (systematic recording of last search criteria)\");\n\t\t\t\t\t$_SESSION['lastsearch_values_tmp_'.$key]=json_encode($val);\n\t\t\t\t\tunset($_SESSION['lastsearch_values_'.$key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Core error message\n\t\tif (! empty($conf->global->MAIN_CORE_ERROR))\n\t\t{\n\t\t\t// Ajax version\n\t\t\tif ($conf->use_javascript_ajax)\n\t\t\t{\n\t\t\t\t$title = img_warning().' '.$langs->trans('CoreErrorTitle');\n\t\t\t\tprint ajax_dialog($title, $langs->trans('CoreErrorMessage'));\n\t\t\t}\n\t\t\t// html version\n\t\t\telse\n\t\t\t{\n\t\t\t\t$msg = img_warning().' '.$langs->trans('CoreErrorMessage');\n\t\t\t\tprint '<div class=\"error\">'.$msg.'</div>';\n\t\t\t}\n\n\t\t\t//define(\"MAIN_CORE_ERROR\",0);      // Constant was defined and we can't change value of a constant\n\t\t}\n\n\t\tprint \"\\n\\n\";\n\n\t\tprint '</div> <!-- End div class=\"fiche\" -->'.\"\\n\"; // End div fiche\n\n\t\tif (empty($conf->dol_hide_leftmenu)) print '</div> <!-- End div id-right -->'.\"\\n\"; // End div id-right\n\n\t\tif (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) print '</div> <!-- End div id-container -->'.\"\\n\";\t// End div container\n\n\t\tprint \"\\n\";\n\t\tif ($comment) print '<!-- '.$comment.' -->'.\"\\n\";\n\n\t\tprintCommonFooter($zone);\n\n\t\tif (! empty($delayedhtmlcontent)) print $delayedhtmlcontent;\n\n\t\tif (! empty($conf->use_javascript_ajax))\n\t\t{\n\t\t\tprint \"\\n\".'<!-- Includes JS Footer of Dolibarr -->'.\"\\n\";\n\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/lib_foot.js.php?lang='.$langs->defaultlang.($ext?'&'.$ext:'').'\"></script>'.\"\\n\";\n\t\t}\n\n\t\t// Wrapper to add log when clicking on download or preview\n\t\tif (! empty($conf->blockedlog->enabled) && is_object($object) && $object->id > 0 && $object->statut > 0)\n\t\t{\n\t\t\tif (in_array($object->element, array('facture')))       // Restrict for the moment to element 'facture'\n\t\t\t{\n\t\t\t\tprint \"\\n<!-- JS CODE TO ENABLE log when making a download or a preview of a document -->\\n\";\n\t\t\t\t?>\n    \t\t\t<script type=\"text/javascript\">\n    \t\t\tjQuery(document).ready(function () {\n    \t\t\t\t$('a.documentpreview').click(function() {\n    \t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n    \t\t\t\t\t\t\t, {\n    \t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n    \t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n    \t\t\t\t\t\t\t\t, action:'DOC_PREVIEW'\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t);\n    \t\t\t\t});\n    \t\t\t\t$('a.documentdownload').click(function() {\n    \t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n    \t\t\t\t\t\t\t, {\n    \t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n    \t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n    \t\t\t\t\t\t\t\t, action:'DOC_DOWNLOAD'\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t);\n    \t\t\t\t});\n    \t\t\t});\n    \t\t\t</script>\n\t\t\t\t<?php\n\t\t\t}\n\t   \t}\n\n\t\t// A div for the address popup\n\t\tprint \"\\n<!-- A div to allow dialog popup -->\\n\";\n\t\tprint '<div id=\"dialogforpopup\" style=\"display: none;\"></div>'.\"\\n\";\n\n\t\tprint \"</body>\\n\";\n\t\tprint \"</html>\\n\";\n\t}\n}\n\n", "<?php\n/* Copyright (C) 2001-2007\tRodolphe Quiedeville\t<rodolphe@quiedeville.org>\n * Copyright (C) 2004-2016\tLaurent Destailleur\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2005\t\tEric Seigne\t\t\t\t<eric.seigne@ryxeo.com>\n * Copyright (C) 2005-2015\tRegis Houssin\t\t\t<regis.houssin@capnetworks.com>\n * Copyright (C) 2006\t\tAndre Cianfarani\t\t<acianfa@free.fr>\n * Copyright (C) 2006\t\tAuguria SARL\t\t\t<info@auguria.org>\n * Copyright (C) 2010-2015\tJuanjo Menent\t\t\t<jmenent@2byte.es>\n * Copyright (C) 2013-2016\tMarcos Garc\u00eda\t\t\t<marcosgdf@gmail.com>\n * Copyright (C) 2012-2013\tC\u00e9dric Salvador\t\t\t<csalvador@gpcsolutions.fr>\n * Copyright (C) 2011-2017\tAlexandre Spangaro\t\t<aspangaro@zendsi.com>\n * Copyright (C) 2014\t\tC\u00e9dric Gross\t\t\t<c.gross@kreiz-it.fr>\n * Copyright (C) 2014-2015\tFerran Marcet\t\t\t<fmarcet@2byte.es>\n * Copyright (C) 2015\t\tJean-Fran\u00e7ois Ferry\t\t<jfefe@aternatik.fr>\n * Copyright (C) 2015\t\tRapha\u00ebl Doursenaud\t\t<rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2016\t\tCharlie Benke\t\t\t<charlie@patas-monkey.com>\n * Copyright (C) 2016\t\tMeziane Sof\t\t\t\t<virtualsof@yahoo.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *  \\file       htdocs/product/card.php\n *  \\ingroup    product\n *  \\brief      Page to show product\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formfile.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/canvas.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/product/class/html.formproduct.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/extrafields.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/genericobject.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/product.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/modules/product/modules_product.php';\n\nif (! empty($conf->propal->enabled))     require_once DOL_DOCUMENT_ROOT.'/comm/propal/class/propal.class.php';\nif (! empty($conf->facture->enabled))    require_once DOL_DOCUMENT_ROOT.'/compta/facture/class/facture.class.php';\nif (! empty($conf->commande->enabled))   require_once DOL_DOCUMENT_ROOT.'/commande/class/commande.class.php';\nif (! empty($conf->accounting->enabled)) require_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\nif (! empty($conf->accounting->enabled)) require_once DOL_DOCUMENT_ROOT.'/core/class/html.formaccounting.class.php';\nif (! empty($conf->accounting->enabled)) require_once DOL_DOCUMENT_ROOT.'/accountancy/class/accountingaccount.class.php';\n\n$langs->load(\"products\");\n$langs->load(\"other\");\nif (! empty($conf->stock->enabled)) $langs->load(\"stocks\");\nif (! empty($conf->facture->enabled)) $langs->load(\"bills\");\nif (! empty($conf->productbatch->enabled)) $langs->load(\"productbatch\");\n\n$mesg=''; $error=0; $errors=array();\n\n$refalreadyexists=0;\n\n$id=GETPOST('id', 'int');\n$ref=GETPOST('ref', 'alpha');\n$type=GETPOST('type','int');\n$action=(GETPOST('action','alpha') ? GETPOST('action','alpha') : 'view');\n$cancel=GETPOST('cancel','alpha');\n$confirm=GETPOST('confirm','alpha');\n$socid=GETPOST('socid','int');\n$duration_value = GETPOST('duration_value');\n$duration_unit = GETPOST('duration_unit');\nif (! empty($user->societe_id)) $socid=$user->societe_id;\n\n$object = new Product($db);\n$object->type = $type;\t// so test later to fill $usercancxxx is correct\n$extrafields = new ExtraFields($db);\n\n// fetch optionals attributes and labels\n$extralabels=$extrafields->fetch_name_optionals_label($object->table_element);\n\nif ($id > 0 || ! empty($ref))\n{\n    $result = $object->fetch($id, $ref);\n\n    if (! empty($conf->product->enabled)) $upload_dir = $conf->product->multidir_output[$object->entity].'/'.get_exdir(0, 0, 0, 0, $object, 'product').dol_sanitizeFileName($object->ref);\n    elseif (! empty($conf->service->enabled)) $upload_dir = $conf->service->multidir_output[$object->entity].'/'.get_exdir(0, 0, 0, 0, $object, 'product').dol_sanitizeFileName($object->ref);\n\n    if (! empty($conf->global->PRODUCT_USE_OLD_PATH_FOR_PHOTO))    // For backward compatiblity, we scan also old dirs\n    {\n        if (! empty($conf->product->enabled)) $upload_dirold = $conf->product->multidir_output[$object->entity].'/'.substr(substr(\"000\".$object->id, -2),1,1).'/'.substr(substr(\"000\".$object->id, -2),0,1).'/'.$object->id.\"/photos\";\n        else $upload_dirold = $conf->service->multidir_output[$object->entity].'/'.substr(substr(\"000\".$object->id, -2),1,1).'/'.substr(substr(\"000\".$object->id, -2),0,1).'/'.$object->id.\"/photos\";\n    }\n}\n\n$modulepart='product';\n\n// Get object canvas (By default, this is not defined, so standard usage of dolibarr)\n$canvas = !empty($object->canvas)?$object->canvas:GETPOST(\"canvas\");\n$objcanvas=null;\nif (! empty($canvas))\n{\n    require_once DOL_DOCUMENT_ROOT.'/core/class/canvas.class.php';\n    $objcanvas = new Canvas($db,$action);\n    $objcanvas->getCanvas('product','card',$canvas);\n}\n\n// Security check\n$fieldvalue = (! empty($id) ? $id : (! empty($ref) ? $ref : ''));\n$fieldtype = (! empty($id) ? 'rowid' : 'ref');\n$result=restrictedArea($user,'produit|service',$fieldvalue,'product&product','','',$fieldtype,$objcanvas);\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('productcard','globalcard'));\n\n\n\n/*\n * Actions\n */\n\nif ($cancel) $action = '';\n\n$usercanread = (($object->type == Product::TYPE_PRODUCT && $user->rights->produit->lire) || ($object->type == Product::TYPE_SERVICE && $user->rights->service->lire));\n$usercancreate = (($object->type == Product::TYPE_PRODUCT && $user->rights->produit->creer) || ($object->type == Product::TYPE_SERVICE && $user->rights->service->creer));\n$usercandelete = (($object->type == Product::TYPE_PRODUCT && $user->rights->produit->supprimer) || ($object->type == Product::TYPE_SERVICE && $user->rights->service->supprimer));\n$createbarcode=empty($conf->barcode->enabled)?0:1;\nif (! empty($conf->global->MAIN_USE_ADVANCED_PERMS) && empty($user->rights->barcode->creer_advance)) $createbarcode=0;\n\n$parameters=array('id'=>$id, 'ref'=>$ref, 'objcanvas'=>$objcanvas);\n$reshook=$hookmanager->executeHooks('doActions',$parameters,$object,$action);    // Note that $action and $object may have been modified by some hooks\nif ($reshook < 0) setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\nif (empty($reshook))\n{\n    // Type\n\tif ($action == 'setfk_product_type' && $usercancreate)\n    {\n    \t$result = $object->setValueFrom('fk_product_type', GETPOST('fk_product_type'), '', null, 'text', '', $user, 'PRODUCT_MODIFY');\n    \theader(\"Location: \".$_SERVER['PHP_SELF'].\"?id=\".$object->id);\n    \texit;\n    }\n\n    // Actions to build doc\n    $upload_dir = $conf->produit->dir_output;\n    $permissioncreate = $usercancreate;\n    include DOL_DOCUMENT_ROOT.'/core/actions_builddoc.inc.php';\n\n    include DOL_DOCUMENT_ROOT.'/core/actions_printing.inc.php';\n\n    // Barcode type\n    if ($action ==\t'setfk_barcode_type' && $createbarcode)\n    {\n        $result = $object->setValueFrom('fk_barcode_type', GETPOST('fk_barcode_type'), '', null, 'text', '', $user, 'PRODUCT_MODIFY');\n    \theader(\"Location: \".$_SERVER['PHP_SELF'].\"?id=\".$object->id);\n    \texit;\n    }\n\n    // Barcode value\n    if ($action ==\t'setbarcode' && $createbarcode)\n    {\n    \t$result=$object->check_barcode(GETPOST('barcode'),GETPOST('barcode_type_code'));\n\n\t\tif ($result >= 0)\n\t\t{\n\t    \t$result = $object->setValueFrom('barcode', GETPOST('barcode'));\n\t    \theader(\"Location: \".$_SERVER['PHP_SELF'].\"?id=\".$object->id);\n\t    \texit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$langs->load(\"errors\");\n        \tif ($result == -1) $errors[] = 'ErrorBadBarCodeSyntax';\n        \telse if ($result == -2) $errors[] = 'ErrorBarCodeRequired';\n        \telse if ($result == -3) $errors[] = 'ErrorBarCodeAlreadyUsed';\n        \telse $errors[] = 'FailedToValidateBarCode';\n\n\t\t\t$error++;\n\t\t\tsetEventMessages($errors, null, 'errors');\n\t\t}\n    }\n\n    // Add a product or service\n    if ($action == 'add' && $usercancreate)\n    {\n        $error=0;\n\n        if (! GETPOST('label'))\n        {\n            setEventMessages($langs->trans('ErrorFieldRequired',$langs->transnoentities('Label')), null, 'errors');\n            $action = \"create\";\n            $error++;\n        }\n        if (empty($ref))\n        {\n            setEventMessages($langs->trans('ErrorFieldRequired',$langs->transnoentities('Ref')), null, 'errors');\n            $action = \"create\";\n            $error++;\n        }\n        if (! empty($duration_value) && empty($duration_unit))\n        {\n            setEventMessages($langs->trans('ErrorFieldRequired',$langs->transnoentities('Unit')), null, 'errors');\n            $action = \"create\";\n            $error++;\n        }\n\n        if (! $error)\n        {\n\t        $units = GETPOST('units', 'int');\n\n            $object->ref                   = $ref;\n            $object->label                 = GETPOST('label');\n            $object->price_base_type       = GETPOST('price_base_type');\n\n            if ($object->price_base_type == 'TTC')\n            \t$object->price_ttc = GETPOST('price');\n            else\n            \t$object->price = GETPOST('price');\n            if ($object->price_base_type == 'TTC')\n            \t$object->price_min_ttc = GETPOST('price_min');\n            else\n            \t$object->price_min = GETPOST('price_min');\n\n\t        $tva_tx_txt = GETPOST('tva_tx', 'alpha');           // tva_tx can be '8.5'  or  '8.5*'  or  '8.5 (XXX)' or '8.5* (XXX)'\n\n\t        // We must define tva_tx, npr and local taxes\n\t        $vatratecode = '';\n\t        $tva_tx = preg_replace('/[^0-9\\.].*$/', '', $tva_tx_txt);     // keep remove all after the numbers and dot\n\t        $npr = preg_match('/\\*/', $tva_tx_txt) ? 1 : 0;\n\t        $localtax1 = 0; $localtax2 = 0; $localtax1_type = '0'; $localtax2_type = '0';\n\t        // If value contains the unique code of vat line (new recommanded method), we use it to find npr and local taxes\n\t        if (preg_match('/\\((.*)\\)/', $tva_tx_txt, $reg))\n\t        {\n\t            // We look into database using code (we can't use get_localtax() because it depends on buyer that is not known). Same in update price.\n\t            $vatratecode=$reg[1];\n\t            // Get record from code\n\t            $sql = \"SELECT t.rowid, t.code, t.recuperableonly, t.localtax1, t.localtax2, t.localtax1_type, t.localtax2_type\";\n\t            $sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t            $sql.= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$mysoc->country_code.\"'\";\n\t            $sql.= \" AND t.taux = \".((float) $tva_tx).\" AND t.active = 1\";\n\t            $sql.= \" AND t.code ='\".$vatratecode.\"'\";\n\t            $resql=$db->query($sql);\n\t            if ($resql)\n\t            {\n\t                $obj = $db->fetch_object($resql);\n\t                $npr = $obj->recuperableonly;\n\t                $localtax1 = $obj->localtax1;\n\t                $localtax2 = $obj->localtax2;\n\t                $localtax1_type = $obj->localtax1_type;\n\t                $localtax2_type = $obj->localtax2_type;\n\t            }\n\t        }\n\n\t        $object->default_vat_code = $vatratecode;\n\t        $object->tva_tx = $tva_tx;\n\t        $object->tva_npr = $npr;\n\t        $object->localtax1_tx = $localtax1;\n\t        $object->localtax2_tx = $localtax2;\n\t        $object->localtax1_type = $localtax1_type;\n\t        $object->localtax2_type = $localtax2_type;\n\n            $object->type               \t = $type;\n            $object->status             \t = GETPOST('statut');\n            $object->status_buy            = GETPOST('statut_buy');\n\t\t\t$object->status_batch          \t= GETPOST('status_batch');\n\n            $object->barcode_type          = GETPOST('fk_barcode_type');\n            $object->barcode\t\t           = GETPOST('barcode');\n            // Set barcode_type_xxx from barcode_type id\n            $stdobject=new GenericObject($db);\n    \t    $stdobject->element='product';\n            $stdobject->barcode_type=GETPOST('fk_barcode_type');\n            $result=$stdobject->fetch_barcode();\n            if ($result < 0)\n            {\n            \t$error++;\n            \t$mesg='Failed to get bar code type information ';\n            \tsetEventMessages($mesg.$stdobject->error, $mesg.$stdobject->errors, 'errors');\n            }\n            $object->barcode_type_code      = $stdobject->barcode_type_code;\n            $object->barcode_type_coder     = $stdobject->barcode_type_coder;\n            $object->barcode_type_label     = $stdobject->barcode_type_label;\n\n            $object->description        \t = dol_htmlcleanlastbr(GETPOST('desc','none'));\n            $object->url\t\t\t\t\t = GETPOST('url');\n            $object->note_private          \t = dol_htmlcleanlastbr(GETPOST('note_private','none'));\n            $object->note               \t = $object->note_private;   // deprecated\n            $object->customcode              = GETPOST('customcode');\n            $object->country_id              = GETPOST('country_id');\n            $object->duration_value     \t = $duration_value;\n            $object->duration_unit      \t = $duration_unit;\n            $object->seuil_stock_alerte \t = GETPOST('seuil_stock_alerte')?GETPOST('seuil_stock_alerte'):0;\n            $object->desiredstock            = GETPOST('desiredstock')?GETPOST('desiredstock'):0;\n            $object->canvas             \t = GETPOST('canvas');\n            $object->weight             \t = GETPOST('weight');\n            $object->weight_units       \t = GETPOST('weight_units');\n            $object->length             \t = GETPOST('size');\n            $object->length_units       \t = GETPOST('size_units');\n            $object->width               \t = GETPOST('sizewidth');\n            $object->height             \t = GETPOST('sizeheight');\n\t        $object->surface            \t = GETPOST('surface');\n            $object->surface_units      \t = GETPOST('surface_units');\n            $object->volume             \t = GETPOST('volume');\n            $object->volume_units       \t = GETPOST('volume_units');\n            $object->finished           \t = GETPOST('finished');\n\t        $object->fk_unit                 = GETPOST('units');\n\n\t\t\t$accountancy_code_sell \t\t\t = GETPOST('accountancy_code_sell');\n\t\t\t$accountancy_code_sell_intra\t = GETPOST('accountancy_code_sell_intra');\n\t\t\t$accountancy_code_sell_export\t = GETPOST('accountancy_code_sell_export');\n\t\t\t$accountancy_code_buy \t\t\t = GETPOST('accountancy_code_buy');\n\n\t\t\tif ($accountancy_code_sell <= 0) { $object->accountancy_code_sell = ''; } else { $object->accountancy_code_sell = $accountancy_code_sell; }\n\t\t\tif ($accountancy_code_sell_intra <= 0) { $object->accountancy_code_sell_intra = ''; } else { $object->accountancy_code_sell_intra = $accountancy_code_sell_intra; }\n\t\t\tif ($accountancy_code_sell_export <= 0) { $object->accountancy_code_sell_export = ''; } else { $object->accountancy_code_sell_export = $accountancy_code_sell_export; }\n\t\t\tif ($accountancy_code_buy <= 0) { $object->accountancy_code_buy = ''; } else { $object->accountancy_code_buy = $accountancy_code_buy; }\n\n            // MultiPrix\n            if (! empty($conf->global->PRODUIT_MULTIPRICES))\n            {\n                for($i=2;$i<=$conf->global->PRODUIT_MULTIPRICES_LIMIT;$i++)\n                {\n                    if (isset($_POST[\"price_\".$i]))\n                    {\n                        $object->multiprices[\"$i\"] = price2num($_POST[\"price_\".$i],'MU');\n                        $object->multiprices_base_type[\"$i\"] = $_POST[\"multiprices_base_type_\".$i];\n                    }\n                    else\n                    {\n                        $object->multiprices[\"$i\"] = \"\";\n                    }\n                }\n            }\n\n            // Fill array 'array_options' with data from add form\n        \t$ret = $extrafields->setOptionalsFromPost($extralabels,$object);\n\t\t\tif ($ret < 0) $error++;\n\n\t\t\tif (! $error)\n\t\t\t{\n            \t$id = $object->create($user);\n\t\t\t}\n\n            if ($id > 0)\n            {\n\t\t\t\t// Category association\n\t\t\t\t$categories = GETPOST('categories', 'array');\n\t\t\t\t$object->setCategories($categories);\n\n                header(\"Location: \".$_SERVER['PHP_SELF'].\"?id=\".$id);\n                exit;\n            }\n            else\n\t\t\t{\n            \tif (count($object->errors)) setEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\telse setEventMessages($langs->trans($object->error), null, 'errors');\n                $action = \"create\";\n            }\n        }\n    }\n\n    // Update a product or service\n    if ($action == 'update' && $usercancreate)\n    {\n    \tif (GETPOST('cancel','alpha'))\n        {\n            $action = '';\n        }\n        else\n        {\n            if ($object->id > 0)\n            {\n\t\t\t\t$object->oldcopy= clone $object;\n\n                $object->ref                    = $ref;\n                $object->label                  = GETPOST('label');\n                $object->description            = dol_htmlcleanlastbr(GETPOST('desc','none'));\n            \t$object->url\t\t\t\t\t= GETPOST('url');\n    \t\t\tif (! empty($conf->global->MAIN_DISABLE_NOTES_TAB))\n    \t\t\t{\n                \t$object->note_private           = dol_htmlcleanlastbr(GETPOST('note_private','none'));\n                    $object->note                   = $object->note_private;\n    \t\t\t}\n                $object->customcode             = GETPOST('customcode');\n                $object->country_id             = GETPOST('country_id');\n                $object->status                 = GETPOST('statut');\n                $object->status_buy             = GETPOST('statut_buy');\n                $object->status_batch\t        = GETPOST('status_batch');\n                // removed from update view so GETPOST always empty\n                /*\n                $object->seuil_stock_alerte     = GETPOST('seuil_stock_alerte');\n                $object->desiredstock           = GETPOST('desiredstock');\n                */\n                $object->duration_value         = GETPOST('duration_value');\n                $object->duration_unit          = GETPOST('duration_unit');\n\n                $object->canvas                 = GETPOST('canvas');\n                $object->weight                 = GETPOST('weight');\n                $object->weight_units           = GETPOST('weight_units');\n                $object->length                 = GETPOST('size');\n                $object->length_units           = GETPOST('size_units');\n                $object->width               \t = GETPOST('sizewidth');\n                $object->height             \t = GETPOST('sizeheight');\n\n                $object->surface                = GETPOST('surface');\n                $object->surface_units          = GETPOST('surface_units');\n                $object->volume                 = GETPOST('volume');\n                $object->volume_units           = GETPOST('volume_units');\n                $object->finished               = GETPOST('finished');\n\n\t            $units = GETPOST('units', 'int');\n\n\t            if ($units > 0) {\n\t\t            $object->fk_unit = $units;\n\t            } else {\n\t\t            $object->fk_unit = null;\n\t            }\n\n\t            $object->barcode_type           = GETPOST('fk_barcode_type');\n    \t        $object->barcode\t\t        = GETPOST('barcode');\n    \t        // Set barcode_type_xxx from barcode_type id\n    \t        $stdobject=new GenericObject($db);\n    \t        $stdobject->element='product';\n    \t        $stdobject->barcode_type=GETPOST('fk_barcode_type');\n    \t        $result=$stdobject->fetch_barcode();\n    \t        if ($result < 0)\n    \t        {\n    \t        \t$error++;\n    \t        \t$mesg='Failed to get bar code type information ';\n            \t\tsetEventMessages($mesg.$stdobject->error, $mesg.$stdobject->errors, 'errors');\n    \t        }\n    \t        $object->barcode_type_code      = $stdobject->barcode_type_code;\n    \t        $object->barcode_type_coder     = $stdobject->barcode_type_coder;\n    \t        $object->barcode_type_label     = $stdobject->barcode_type_label;\n\n\t\t\t\t$accountancy_code_sell \t\t\t = GETPOST('accountancy_code_sell');\n\t\t\t\t$accountancy_code_sell_intra\t = GETPOST('accountancy_code_sell_intra');\n\t\t\t\t$accountancy_code_sell_export\t = GETPOST('accountancy_code_sell_export');\n\t\t\t\t$accountancy_code_buy \t\t\t = GETPOST('accountancy_code_buy');\n\n\t\t\t\tif ($accountancy_code_sell <= 0) { $object->accountancy_code_sell = ''; } else { $object->accountancy_code_sell = $accountancy_code_sell; }\n\t\t\t\tif ($accountancy_code_sell_intra <= 0) { $object->accountancy_code_sell_intra = ''; } else { $object->accountancy_code_sell_intra = $accountancy_code_sell_intra; }\n\t\t\t\tif ($accountancy_code_sell_export <= 0) { $object->accountancy_code_sell_export = ''; } else { $object->accountancy_code_sell_export = $accountancy_code_sell_export; }\n\t\t\t\tif ($accountancy_code_buy <= 0) { $object->accountancy_code_buy = ''; } else { $object->accountancy_code_buy = $accountancy_code_buy; }\n\n                // Fill array 'array_options' with data from add form\n        \t\t$ret = $extrafields->setOptionalsFromPost($extralabels,$object);\n\t\t\t\tif ($ret < 0) $error++;\n\n                if (! $error && $object->check())\n                {\n                    if ($object->update($object->id, $user) > 0)\n                    {\n\t\t\t\t\t\t// Category association\n\t\t\t\t\t\t$categories = GETPOST('categories', 'array');\n\t\t\t\t\t\t$object->setCategories($categories);\n\n                        $action = 'view';\n                    }\n                    else\n\t\t\t\t\t{\n\t\t\t\t\t\tif (count($object->errors)) setEventMessages($object->error, $object->errors, 'errors');\n                    \telse setEventMessages($langs->trans($object->error), null, 'errors');\n                        $action = 'edit';\n                    }\n                }\n                else\n\t\t\t\t{\n\t\t\t\t\tif (count($object->errors)) setEventMessages($object->error, $object->errors, 'errors');\n                \telse setEventMessages($langs->trans(\"ErrorProductBadRefOrLabel\"), null, 'errors');\n                    $action = 'edit';\n                }\n            }\n\n        }\n    }\n\n    // Action clone object\n    if ($action == 'confirm_clone' && $confirm != 'yes') { $action=''; }\n    if ($action == 'confirm_clone' && $confirm == 'yes' && $usercancreate)\n    {\n        if (! GETPOST('clone_content') && ! GETPOST('clone_prices') )\n        {\n        \tsetEventMessages($langs->trans(\"NoCloneOptionsSpecified\"), null, 'errors');\n        }\n        else\n        {\n            $db->begin();\n\n            $originalId = $id;\n            if ($object->id > 0)\n            {\n                $object->ref = GETPOST('clone_ref');\n                $object->status = 0;\n                $object->status_buy = 0;\n                $object->id = null;\n                $object->barcode = -1;\n\n                if ($object->check())\n                {\n                    $id = $object->create($user);\n                    if ($id > 0)\n                    {\n                        if (GETPOST('clone_composition'))\n                        {\n                            $result = $object->clone_associations($originalId, $id);\n\n                            if ($result < 1)\n                            {\n                                $db->rollback();\n                                setEventMessages($langs->trans('ErrorProductClone'), null, 'errors');\n                                header(\"Location: \".$_SERVER[\"PHP_SELF\"].\"?id=\".$originalId);\n                                exit;\n                            }\n                        }\n\n                        // $object->clone_fournisseurs($originalId, $id);\n\n                        $db->commit();\n                        $db->close();\n\n                        header(\"Location: \".$_SERVER[\"PHP_SELF\"].\"?id=\".$id);\n                        exit;\n                    }\n                    else\n                    {\n                        $id=$originalId;\n\n                        if ($object->error == 'ErrorProductAlreadyExists')\n                        {\n                            $db->rollback();\n\n                            $refalreadyexists++;\n                            $action = \"\";\n\n                            $mesg=$langs->trans(\"ErrorProductAlreadyExists\",$object->ref);\n                            $mesg.=' <a href=\"'.$_SERVER[\"PHP_SELF\"].'?ref='.$object->ref.'\">'.$langs->trans(\"ShowCardHere\").'</a>.';\n                            setEventMessages($mesg, null, 'errors');\n                            $object->fetch($id);\n                        }\n                        else\n                     {\n                            $db->rollback();\n                            if (count($object->errors))\n                            {\n                            \tsetEventMessages($object->error, $object->errors, 'errors');\n                            \tdol_print_error($db,$object->errors);\n                            }\n                            else\n                            {\n                            \tsetEventMessages($langs->trans($object->error), null, 'errors');\n                            \tdol_print_error($db,$object->error);\n                            }\n                        }\n                    }\n                }\n            }\n            else\n            {\n                $db->rollback();\n                dol_print_error($db,$object->error);\n            }\n        }\n    }\n\n    // Delete a product\n    if ($action == 'confirm_delete' && $confirm != 'yes') { $action=''; }\n    if ($action == 'confirm_delete' && $confirm == 'yes' && $usercandelete)\n\t{\n\t\t$result = $object->delete($user);\n\n        if ($result > 0)\n        {\n            header('Location: '.DOL_URL_ROOT.'/product/list.php?type='.$object->type.'&delprod='.urlencode($object->ref));\n            exit;\n        }\n        else\n        {\n        \tsetEventMessages($langs->trans($object->error), null, 'errors');\n            $reload = 0;\n            $action='';\n        }\n    }\n\n\n    // Add product into object\n    if ($object->id > 0 && $action == 'addin')\n    {\n        $thirpdartyid =0 ;\n        if (GETPOST('propalid') > 0)\n        {\n        \t$propal = new Propal($db);\n\t        $result=$propal->fetch(GETPOST('propalid'));\n\t        if ($result <= 0)\n\t        {\n\t            dol_print_error($db,$propal->error);\n\t            exit;\n\t        }\n\t        $thirpdartyid = $propal->socid;\n        }\n        elseif (GETPOST('commandeid') > 0)\n        {\n            $commande = new Commande($db);\n\t        $result=$commande->fetch(GETPOST('commandeid'));\n\t        if ($result <= 0)\n\t        {\n\t            dol_print_error($db,$commande->error);\n\t            exit;\n\t        }\n\t        $thirpdartyid = $commande->socid;\n        }\n        elseif (GETPOST('factureid') > 0)\n        {\n    \t    $facture = new Facture($db);\n\t        $result=$facture->fetch(GETPOST('factureid'));\n\t        if ($result <= 0)\n\t        {\n\t            dol_print_error($db,$facture->error);\n\t            exit;\n\t        }\n\t        $thirpdartyid = $facture->socid;\n        }\n\n        if ( $thirpdartyid > 0)  {\n            $soc = new Societe($db);\n            $result = $soc->fetch($thirpdartyid);\n            if ($result <= 0) {\n                dol_print_error($db, $soc->error);\n                exit;\n            }\n\n            $desc = $object->description;\n\n            $tva_tx = get_default_tva($mysoc, $soc, $object->id);\n            $tva_npr = get_default_npr($mysoc, $soc, $object->id);\n            if (empty($tva_tx)) $tva_npr=0;\n            $localtax1_tx = get_localtax($tva_tx, 1, $soc, $mysoc, $tva_npr);\n            $localtax2_tx = get_localtax($tva_tx, 2, $soc, $mysoc, $tva_npr);\n\n            $pu_ht = $object->price;\n            $pu_ttc = $object->price_ttc;\n            $price_base_type = $object->price_base_type;\n\n            // If multiprice\n            if ($conf->global->PRODUIT_MULTIPRICES && $soc->price_level) {\n                $pu_ht = $object->multiprices[$soc->price_level];\n                $pu_ttc = $object->multiprices_ttc[$soc->price_level];\n                $price_base_type = $object->multiprices_base_type[$soc->price_level];\n            } elseif (!empty($conf->global->PRODUIT_CUSTOMER_PRICES)) {\n                require_once DOL_DOCUMENT_ROOT . '/product/class/productcustomerprice.class.php';\n\n                $prodcustprice = new Productcustomerprice($db);\n\n                $filter = array('t.fk_product' => $object->id, 't.fk_soc' => $soc->id);\n\n                $result = $prodcustprice->fetch_all('', '', 0, 0, $filter);\n                if ($result) {\n                    if (count($prodcustprice->lines) > 0) {\n                        $pu_ht = price($prodcustprice->lines [0]->price);\n                        $pu_ttc = price($prodcustprice->lines [0]->price_ttc);\n                        $price_base_type = $prodcustprice->lines [0]->price_base_type;\n                        $tva_tx = $prodcustprice->lines [0]->tva_tx;\n                    }\n                }\n            }\n\n\t\t\t$tmpvat = price2num(preg_replace('/\\s*\\(.*\\)/', '', $tva_tx));\n\t\t\t$tmpprodvat = price2num(preg_replace('/\\s*\\(.*\\)/', '', $prod->tva_tx));\n\n            // On reevalue prix selon taux tva car taux tva transaction peut etre different\n            // de ceux du produit par defaut (par exemple si pays different entre vendeur et acheteur).\n            if ($tmpvat != $tmpprodvat) {\n                if ($price_base_type != 'HT') {\n                    $pu_ht = price2num($pu_ttc / (1 + ($tmpvat / 100)), 'MU');\n                } else {\n                    $pu_ttc = price2num($pu_ht * (1 + ($tmpvat / 100)), 'MU');\n                }\n            }\n\n            if (GETPOST('propalid') > 0) {\n                // Define cost price for margin calculation\n                $buyprice=0;\n                if (($result = $propal->defineBuyPrice($pu_ht, GETPOST('remise_percent'), $object->id)) < 0)\n                {\n                    dol_syslog($langs->trans('FailedToGetCostPrice'));\n                    setEventMessage($langs->trans('FailedToGetCostPrice'), 'errors');\n                }\n                else\n                {\n                    $buyprice = $result;\n                }\n\n                $result = $propal->addline(\n                    $desc,\n                    $pu_ht,\n                    GETPOST('qty'),\n                    $tva_tx,\n                    $localtax1_tx, // localtax1\n                    $localtax2_tx, // localtax2\n                    $object->id,\n                    GETPOST('remise_percent'),\n                    $price_base_type,\n                    $pu_ttc,\n                    0,\n                    0,\n                    -1,\n                    0,\n                    0,\n                    0,\n                    $buyprice,\n                    '',\n                    '',\n                    '',\n                    0,\n                    $object->fk_unit\n                );\n                if ($result > 0) {\n                    header(\"Location: \" . DOL_URL_ROOT . \"/comm/propal/card.php?id=\" . $propal->id);\n                    return;\n                }\n\n                setEventMessages($langs->trans(\"ErrorUnknown\") . \": $result\", null, 'errors');\n            } elseif (GETPOST('commandeid') > 0) {\n                // Define cost price for margin calculation\n                $buyprice=0;\n                if (($result = $commande->defineBuyPrice($pu_ht, GETPOST('remise_percent'), $object->id)) < 0)\n                {\n                    dol_syslog($langs->trans('FailedToGetCostPrice'));\n                    setEventMessage($langs->trans('FailedToGetCostPrice'), 'errors');\n                }\n                else\n                {\n                    $buyprice = $result;\n                }\n\n                $result = $commande->addline(\n                    $desc,\n                    $pu_ht,\n                    GETPOST('qty'),\n                    $tva_tx,\n                    $localtax1_tx, // localtax1\n                    $localtax2_tx, // localtax2\n                    $object->id,\n                    GETPOST('remise_percent'),\n                    '',\n                    '',\n                    $price_base_type,\n                    $pu_ttc,\n                    '',\n                    '',\n                    0,\n                    -1,\n                    0,\n                    0,\n                    null,\n                    $buyprice,\n                    '',\n                    0,\n                    $object->fk_unit\n                );\n\n                if ($result > 0) {\n                    header(\"Location: \" . DOL_URL_ROOT . \"/commande/card.php?id=\" . $commande->id);\n                    exit;\n                }\n            } elseif (GETPOST('factureid') > 0) {\n                // Define cost price for margin calculation\n                $buyprice=0;\n                if (($result = $facture->defineBuyPrice($pu_ht, GETPOST('remise_percent'), $object->id)) < 0)\n                {\n                    dol_syslog($langs->trans('FailedToGetCostPrice'));\n                    setEventMessage($langs->trans('FailedToGetCostPrice'), 'errors');\n                }\n                else\n                {\n                    $buyprice = $result;\n                }\n\n                $result = $facture->addline(\n                    $desc,\n                    $pu_ht,\n                    GETPOST('qty'),\n                    $tva_tx,\n                    $localtax1_tx,\n                    $localtax2_tx,\n                    $object->id,\n                    GETPOST('remise_percent'),\n                    '',\n                    '',\n                    '',\n                    '',\n                    '',\n                    $price_base_type,\n                    $pu_ttc,\n                    Facture::TYPE_STANDARD,\n                    -1,\n                    0,\n                    '',\n                    0,\n                    0,\n                    null,\n                    $buyprice,\n                    '',\n                    0,\n                    100,\n                    '',\n                    $object->fk_unit\n                );\n\n                if ($result > 0) {\n                    header(\"Location: \" . DOL_URL_ROOT . \"/compta/facture/card.php?facid=\" . $facture->id);\n                    exit;\n                }\n            }\n        }\n        else {\n            $action=\"\";\n            setEventMessages($langs->trans(\"WarningSelectOneDocument\"), null, 'warnings');\n        }\n    }\n}\n\n\n\n/*\n * View\n */\n\n$title = $langs->trans('ProductServiceCard');\n$helpurl = '';\n$shortlabel = dol_trunc($object->label,16);\nif (GETPOST(\"type\") == '0' || ($object->type == Product::TYPE_PRODUCT))\n{\n\t$title = $langs->trans('Product').\" \". $shortlabel .\" - \".$langs->trans('Card');\n\t$helpurl='EN:Module_Products|FR:Module_Produits|ES:M&oacute;dulo_Productos';\n}\nif (GETPOST(\"type\") == '1' || ($object->type == Product::TYPE_SERVICE))\n{\n\t$title = $langs->trans('Service').\" \". $shortlabel .\" - \".$langs->trans('Card');\n\t$helpurl='EN:Module_Services_En|FR:Module_Services|ES:M&oacute;dulo_Servicios';\n}\n\nllxHeader('', $title, $helpurl);\n\n$form = new Form($db);\n$formfile = new FormFile($db);\n$formproduct = new FormProduct($db);\nif (! empty($conf->accounting->enabled)) $formaccounting = new FormAccounting($db);\n\n// Load object modBarCodeProduct\n$res=0;\nif (! empty($conf->barcode->enabled) && ! empty($conf->global->BARCODE_PRODUCT_ADDON_NUM))\n{\n\t$module=strtolower($conf->global->BARCODE_PRODUCT_ADDON_NUM);\n\t$dirbarcode=array_merge(array('/core/modules/barcode/'),$conf->modules_parts['barcode']);\n\tforeach ($dirbarcode as $dirroot)\n\t{\n\t\t$res=dol_include_once($dirroot.$module.'.php');\n\t\tif ($res) break;\n\t}\n\tif ($res > 0)\n\t{\n\t\t\t$modBarCodeProduct =new $module();\n\t}\n}\n\n\nif (is_object($objcanvas) && $objcanvas->displayCanvasExists($action))\n{\n\t// -----------------------------------------\n\t// When used with CANVAS\n\t// -----------------------------------------\n\tif (empty($object->error) && $id)\n\t{\n\t\t$object = new Product($db);\n\t\t$result=$object->fetch($id);\n\t\tif ($result <= 0) dol_print_error('',$object->error);\n\t}\n\t$objcanvas->assign_values($action, $object->id, $object->ref);\t// Set value for templates\n\t$objcanvas->display_canvas($action);\t\t\t\t\t\t\t// Show template\n}\nelse\n{\n    // -----------------------------------------\n    // When used in standard mode\n    // -----------------------------------------\n\tif ($action == 'create' && $usercancreate)\n    {\n        //WYSIWYG Editor\n        require_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\n\t\t// Load object modCodeProduct\n        $module=(! empty($conf->global->PRODUCT_CODEPRODUCT_ADDON)?$conf->global->PRODUCT_CODEPRODUCT_ADDON:'mod_codeproduct_leopard');\n        if (substr($module, 0, 16) == 'mod_codeproduct_' && substr($module, -3) == 'php')\n        {\n            $module = substr($module, 0, dol_strlen($module)-4);\n        }\n        $result=dol_include_once('/core/modules/product/'.$module.'.php');\n        if ($result > 0)\n        {\n        \t$modCodeProduct = new $module();\n        }\n\n        dol_set_focus('input[name=\"ref\"]');\n\n        print '<form action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"POST\">';\n        print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n        print '<input type=\"hidden\" name=\"action\" value=\"add\">';\n        print '<input type=\"hidden\" name=\"type\" value=\"'.$type.'\">'.\"\\n\";\n\t\tif (! empty($modCodeProduct->code_auto))\n\t\t\tprint '<input type=\"hidden\" name=\"code_auto\" value=\"1\">';\n\t\tif (! empty($modBarCodeProduct->code_auto))\n\t\t\tprint '<input type=\"hidden\" name=\"barcode_auto\" value=\"1\">';\n\n        if ($type==1) $title=$langs->trans(\"NewService\");\n        else $title=$langs->trans(\"NewProduct\");\n        $linkback=\"\";\n        print load_fiche_titre($title,$linkback,'title_products.png');\n\n        dol_fiche_head('');\n\n        print '<table class=\"border centpercent\">';\n\n        print '<tr>';\n        $tmpcode='';\n\t\tif (! empty($modCodeProduct->code_auto)) $tmpcode=$modCodeProduct->getNextValue($object,$type);\n        print '<td class=\"titlefieldcreate fieldrequired\">'.$langs->trans(\"Ref\").'</td><td colspan=\"3\"><input id=\"ref\" name=\"ref\" class=\"maxwidth200\" maxlength=\"128\" value=\"'.dol_escape_htmltag(GETPOST('ref')?GETPOST('ref'):$tmpcode).'\">';\n        if ($refalreadyexists)\n        {\n            print $langs->trans(\"RefAlreadyExists\");\n        }\n        print '</td></tr>';\n\n        // Label\n        print '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Label\").'</td><td colspan=\"3\"><input name=\"label\" class=\"minwidth300 maxwidth400onsmartphone\" maxlength=\"255\" value=\"'.dol_escape_htmltag(GETPOST('label')).'\"></td></tr>';\n\n        // On sell\n        print '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Status\").' ('.$langs->trans(\"Sell\").')</td><td colspan=\"3\">';\n        $statutarray=array('1' => $langs->trans(\"OnSell\"), '0' => $langs->trans(\"NotOnSell\"));\n        print $form->selectarray('statut',$statutarray,GETPOST('statut'));\n        print '</td></tr>';\n\n        // To buy\n        print '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Status\").' ('.$langs->trans(\"Buy\").')</td><td colspan=\"3\">';\n        $statutarray=array('1' => $langs->trans(\"ProductStatusOnBuy\"), '0' => $langs->trans(\"ProductStatusNotOnBuy\"));\n        print $form->selectarray('statut_buy',$statutarray,GETPOST('statut_buy'));\n        print '</td></tr>';\n\n\t    // Batch number management\n\t\tif (! empty($conf->productbatch->enabled))\n\t\t{\n\t\t\tprint '<tr><td>'.$langs->trans(\"ManageLotSerial\").'</td><td colspan=\"3\">';\n\t\t\t$statutarray=array('0' => $langs->trans(\"ProductStatusNotOnBatch\"), '1' => $langs->trans(\"ProductStatusOnBatch\"));\n\t\t\tprint $form->selectarray('status_batch',$statutarray,GETPOST('status_batch'));\n\t\t\tprint '</td></tr>';\n\t\t}\n\n        $showbarcode=empty($conf->barcode->enabled)?0:1;\n        if (! empty($conf->global->MAIN_USE_ADVANCED_PERMS) && empty($user->rights->barcode->lire_advance)) $showbarcode=0;\n\n        if ($showbarcode)\n        {\n \t        print '<tr><td>'.$langs->trans('BarcodeType').'</td><td>';\n \t        if (isset($_POST['fk_barcode_type']))\n\t        {\n\t         \t$fk_barcode_type=GETPOST('fk_barcode_type');\n\t        }\n\t        else\n\t        {\n\t        \tif (empty($fk_barcode_type) && ! empty($conf->global->PRODUIT_DEFAULT_BARCODE_TYPE)) $fk_barcode_type = $conf->global->PRODUIT_DEFAULT_BARCODE_TYPE;\n\t        }\n\t        require_once DOL_DOCUMENT_ROOT.'/core/class/html.formbarcode.class.php';\n            $formbarcode = new FormBarCode($db);\n\t        print $formbarcode->select_barcode_type($fk_barcode_type, 'fk_barcode_type', 1);\n\t        print '</td><td>'.$langs->trans(\"BarcodeValue\").'</td><td>';\n\t        $tmpcode=isset($_POST['barcode'])?GETPOST('barcode'):$object->barcode;\n\t        if (empty($tmpcode) && ! empty($modBarCodeProduct->code_auto)) $tmpcode=$modBarCodeProduct->getNextValue($object,$type);\n\t        print '<input class=\"maxwidth100\" type=\"text\" name=\"barcode\" value=\"'.dol_escape_htmltag($tmpcode).'\">';\n\t        print '</td></tr>';\n        }\n\n        // Description (used in invoice, propal...)\n        print '<tr><td class=\"tdtop\">'.$langs->trans(\"Description\").'</td><td colspan=\"3\">';\n\n        $doleditor = new DolEditor('desc', GETPOST('desc','none'), '', 160, 'dolibarr_details', '', false, true, $conf->global->FCKEDITOR_ENABLE_PRODUCTDESC, ROWS_4, '90%');\n        $doleditor->Create();\n\n        print \"</td></tr>\";\n\n        // Public URL\n        print '<tr><td>'.$langs->trans(\"PublicUrl\").'</td><td colspan=\"3\">';\n\t\tprint '<input type=\"text\" name=\"url\" class=\"quatrevingtpercent\" value=\"'.GETPOST('url').'\">';\n        print '</td></tr>';\n\n        // Stock min level\n        if ($type != 1 && ! empty($conf->stock->enabled))\n        {\n            print '<tr><td>'.$form->textwithpicto($langs->trans(\"StockLimit\"), $langs->trans(\"StockLimitDesc\"), 1).'</td><td>';\n            print '<input name=\"seuil_stock_alerte\" class=\"maxwidth50\" value=\"'.GETPOST('seuil_stock_alerte').'\">';\n            print '</td>';\n            // Stock desired level\n            print '<td>'.$form->textwithpicto($langs->trans(\"DesiredStock\"), $langs->trans(\"DesiredStockDesc\"), 1).'</td><td>';\n            print '<input name=\"desiredstock\" class=\"maxwidth50\" value=\"'.GETPOST('desiredstock').'\">';\n            print '</td></tr>';\n        }\n        else\n        {\n            print '<input name=\"seuil_stock_alerte\" type=\"hidden\" value=\"0\">';\n            print '<input name=\"desiredstock\" type=\"hidden\" value=\"0\">';\n        }\n\n        // Nature\n        if ($type != 1)\n        {\n            print '<tr><td>'.$langs->trans(\"Nature\").'</td><td colspan=\"3\">';\n            $statutarray=array('1' => $langs->trans(\"Finished\"), '0' => $langs->trans(\"RowMaterial\"));\n            print $form->selectarray('finished',$statutarray,GETPOST('finished'),1);\n            print '</td></tr>';\n        }\n\n        // Duration\n        if ($type == 1)\n        {\n            print '<tr><td>' . $langs->trans(\"Duration\") . '</td><td colspan=\"3\"><input name=\"duration_value\" size=\"6\" maxlength=\"5\" value=\"' . $duration_value . '\"> &nbsp;';\n            print '<input name=\"duration_unit\" type=\"radio\" value=\"h\">'.$langs->trans(\"Hour\").'&nbsp;';\n            print '<input name=\"duration_unit\" type=\"radio\" value=\"d\">'.$langs->trans(\"Day\").'&nbsp;';\n            print '<input name=\"duration_unit\" type=\"radio\" value=\"w\">'.$langs->trans(\"Week\").'&nbsp;';\n            print '<input name=\"duration_unit\" type=\"radio\" value=\"m\">'.$langs->trans(\"Month\").'&nbsp;';\n            print '<input name=\"duration_unit\" type=\"radio\" value=\"y\">'.$langs->trans(\"Year\").'&nbsp;';\n            print '</td></tr>';\n        }\n\n        if ($type != 1)\t// Le poids et le volume ne concerne que les produits et pas les services\n        {\n            // Weight\n            print '<tr><td>'.$langs->trans(\"Weight\").'</td><td colspan=\"3\">';\n            print '<input name=\"weight\" size=\"4\" value=\"'.GETPOST('weight').'\">';\n            print $formproduct->select_measuring_units(\"weight_units\",\"weight\");\n            print '</td></tr>';\n            // Length\n            if (empty($conf->global->PRODUCT_DISABLE_SIZE))\n            {\n                print '<tr><td>'.$langs->trans(\"Length\").' x '.$langs->trans(\"Width\").' x '.$langs->trans(\"Height\").'</td><td colspan=\"3\">';\n                print '<input name=\"size\" size=\"4\" value=\"'.GETPOST('size').'\"> x ';\n                print '<input name=\"sizewidth\" size=\"4\" value=\"'.GETPOST('sizewidth').'\"> x ';\n                print '<input name=\"sizeheight\" size=\"4\" value=\"'.GETPOST('sizeheight').'\">';\n                print $formproduct->select_measuring_units(\"size_units\",\"size\");\n                print '</td></tr>';\n            }\n            if (empty($conf->global->PRODUCT_DISABLE_SURFACE))\n            {\n                // Surface\n                print '<tr><td>'.$langs->trans(\"Surface\").'</td><td colspan=\"3\">';\n                print '<input name=\"surface\" size=\"4\" value=\"'.GETPOST('surface').'\">';\n                print $formproduct->select_measuring_units(\"surface_units\",\"surface\");\n                print '</td></tr>';\n            }\n            // Volume\n            print '<tr><td>'.$langs->trans(\"Volume\").'</td><td colspan=\"3\">';\n            print '<input name=\"volume\" size=\"4\" value=\"'.GETPOST('volume').'\">';\n            print $formproduct->select_measuring_units(\"volume_units\",\"volume\");\n            print '</td></tr>';\n        }\n\n        // Units\n\t    if($conf->global->PRODUCT_USE_UNITS)\n\t    {\n\t\t    print '<tr><td>'.$langs->trans('DefaultUnitToShow').'</td>';\n\t\t    print '<td colspan=\"3\">';\n\t\t    print $form->selectUnits('','units');\n\t\t    print '</td></tr>';\n\t    }\n\n        // Custom code\n        if (empty($conf->global->PRODUCT_DISABLE_CUSTOM_INFO) && empty($type))\n        {\n\t        print '<tr><td>'.$langs->trans(\"CustomCode\").'</td><td><input name=\"customcode\" class=\"maxwidth100onsmartphone\" value=\"'.GETPOST('customcode').'\"></td>';\n\t        // Origin country\n\t        print '<td>'.$langs->trans(\"CountryOrigin\").'</td><td>';\n\t        print $form->select_country(GETPOST('country_id','int'),'country_id');\n\t        if ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t        print '</td></tr>';\n        }\n\n        // Other attributes\n        $parameters=array('cols' => 3);\n        $reshook=$hookmanager->executeHooks('formObjectOptions',$parameters,$object,$action);    // Note that $action and $object may have been modified by hook\n        print $hookmanager->resPrint;\n        if (empty($reshook) && ! empty($extrafields->attribute_label))\n        {\n        \tprint $object->showOptionals($extrafields,'edit',$parameters);\n        }\n\n        // Note (private, no output on invoices, propales...)\n        //if (! empty($conf->global->MAIN_DISABLE_NOTES_TAB))       available in create mode\n        //{\n            print '<tr><td class=\"tdtop\">'.$langs->trans(\"NoteNotVisibleOnBill\").'</td><td colspan=\"3\">';\n\n            // We use dolibarr_details as type of DolEditor here, because we must not accept images as description is included into PDF and not accepted by TCPDF.\n            $doleditor = new DolEditor('note_private', GETPOST('note_private','none'), '', 140, 'dolibarr_details', '', false, true, $conf->global->FCKEDITOR_ENABLE_PRODUCTDESC, ROWS_8, '90%');\n    \t    $doleditor->Create();\n\n            print \"</td></tr>\";\n        //}\n\n\t\tif ($conf->categorie->enabled) {\n\t\t\t// Categories\n\t\t\tprint '<tr><td>'.$langs->trans(\"Categories\").'</td><td colspan=\"3\">';\n\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_PRODUCT, '', 'parent', 64, 0, 1);\n\t\t\tprint $form->multiselectarray('categories', $cate_arbo, GETPOST('categories', 'array'), '', 0, '', 0, '100%');\n\t\t\tprint \"</td></tr>\";\n\t\t}\n\n        print '</table>';\n\n        print '<br>';\n\n        if (! empty($conf->global->PRODUIT_MULTIPRICES))\n        {\n            // We do no show price array on create when multiprices enabled.\n            // We must set them on prices tab.\n            print '<table class=\"border\" width=\"100%\">';\n            // VAT\n            print '<tr><td class=\"titlefieldcreate\">' . $langs->trans(\"VATRate\") . '</td><td>';\n            $defaultva = get_default_tva($mysoc, $mysoc);\n            print $form->load_tva(\"tva_tx\", $defaultva, $mysoc, $mysoc, 0, 0, '', false, 1);\n            print '</td></tr>';\n            print '</table>';\n            print '<br>';\n        }\n        else\n\t\t{\n            print '<table class=\"border\" width=\"100%\">';\n\n            // Price\n            print '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"SellingPrice\").'</td>';\n            print '<td><input name=\"price\" class=\"maxwidth50\" value=\"'.$object->price.'\">';\n            print $form->selectPriceBaseType($object->price_base_type, \"price_base_type\");\n            print '</td></tr>';\n\n            // Min price\n            print '<tr><td>'.$langs->trans(\"MinPrice\").'</td>';\n            print '<td><input name=\"price_min\" class=\"maxwidth50\" value=\"'.$object->price_min.'\">';\n            print '</td></tr>';\n\n            // VAT\n            print '<tr><td>'.$langs->trans(\"VATRate\").'</td><td>';\n            $defaultva=get_default_tva($mysoc, $mysoc);\n            print $form->load_tva(\"tva_tx\", $defaultva, $mysoc, $mysoc, 0, 0, '', false, 1);\n            print '</td></tr>';\n\n            print '</table>';\n\n            print '<br>';\n        }\n\n        // Accountancy codes\n        print '<table class=\"border\" width=\"100%\">';\n\n\t\tif (! empty($conf->accounting->enabled))\n\t\t{\n\t\t\t// Accountancy_code_sell\n\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint $formaccounting->select_account(GETPOST('accountancy_code_sell'), 'accountancy_code_sell', 1, null, 1, 1, '');\n\t\t\tprint '</td></tr>';\n\n\t\t\tif ($conf->global->MAIN_FEATURES_LEVEL)\n\t\t\t{\n\t\t\t\t// Accountancy_code_sell_intra\n\t\t\t\tif ($mysoc->isInEEC())\n\t\t\t\t{\n\t\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellIntraCode\").'</td>';\n\t\t\t\t\tprint '<td>';\n\t\t\t\t\tprint $formaccounting->select_account(GETPOST('accountancy_code_sell_intra'), 'accountancy_code_sell_intra', 1, null, 1, 1, '');\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t}\n\n\t\t\t\t// Accountancy_code_sell_export\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellExportCode\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint $formaccounting->select_account(GETPOST('accountancy_code_sell_export'), 'accountancy_code_sell_export', 1, null, 1, 1, '');\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Accountancy_code_buy\n\t\t\tprint '<tr><td>'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint $formaccounting->select_account(GETPOST('accountancy_code_buy'), 'accountancy_code_buy', 1, null, 1, 1, '');\n\t\t\tprint '</td></tr>';\n\t\t}\n\t\telse // For external software\n\t\t{\n\t\t\t// Accountancy_code_sell\n\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\tprint '<td class=\"maxwidthonsmartphone\"><input class=\"minwidth100\" name=\"accountancy_code_sell\" value=\"'.$object->accountancy_code_sell.'\">';\n\t\t\tprint '</td></tr>';\n\n\t\t\tif ($conf->global->MAIN_FEATURES_LEVEL)\n\t\t\t{\n\t\t\t\t// Accountancy_code_sell_intra\n\t\t\t\tif ($mysoc->isInEEC())\n\t\t\t\t{\n\t\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellIntraCode\").'</td>';\n\t\t\t\t\tprint '<td class=\"maxwidthonsmartphone\"><input class=\"minwidth100\" name=\"accountancy_code_sell_intra\" value=\"'.$object->accountancy_code_sell_intra.'\">';\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t}\n\n\t\t\t\t// Accountancy_code_sell_export\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellExportCode\").'</td>';\n\t\t\t\tprint '<td class=\"maxwidthonsmartphone\"><input class=\"minwidth100\" name=\"accountancy_code_sell_export\" value=\"'.$object->accountancy_code_sell_export.'\">';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Accountancy_code_buy\n\t\t\tprint '<tr><td>'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\tprint '<td class=\"maxwidthonsmartphone\"><input class=\"minwidth100\" name=\"accountancy_code_buy\" value=\"'.$object->accountancy_code_buy.'\">';\n\t\t\tprint '</td></tr>';\n\t\t}\n\t\tprint '</table>';\n\n\t\tdol_fiche_end();\n\n\t\tprint '<div class=\"center\">';\n\t\tprint '<input type=\"submit\" class=\"button\" value=\"' . $langs->trans(\"Create\") . '\">';\n\t\tprint ' &nbsp; &nbsp; ';\n\t\tprint '<input type=\"button\" class=\"button\" value=\"' . $langs->trans(\"Cancel\") . '\" onClick=\"javascript:history.go(-1)\">';\n\t\tprint '</div>';\n\n\t\tprint '</form>';\n\t}\n\n    /*\n     * Product card\n     */\n\n    else if ($object->id > 0)\n    {\n        // Fiche en mode edition\n\t\tif ($action == 'edit' && $usercancreate)\n\t\t{\n            //WYSIWYG Editor\n            require_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\n            $type = $langs->trans('Product');\n            if ($object->isService()) $type = $langs->trans('Service');\n            //print load_fiche_titre($langs->trans('Modify').' '.$type.' : '.(is_object($object->oldcopy)?$object->oldcopy->ref:$object->ref), \"\");\n\n            // Main official, simple, and not duplicated code\n            print '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'\" method=\"POST\">'.\"\\n\";\n            print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n            print '<input type=\"hidden\" name=\"action\" value=\"update\">';\n            print '<input type=\"hidden\" name=\"id\" value=\"'.$object->id.'\">';\n            print '<input type=\"hidden\" name=\"canvas\" value=\"'.$object->canvas.'\">';\n\n            $head=product_prepare_head($object);\n            $titre=$langs->trans(\"CardProduct\".$object->type);\n            $picto=($object->type== Product::TYPE_SERVICE?'service':'product');\n            dol_fiche_head($head, 'card', $titre, 0, $picto);\n\n            print '<table class=\"border allwidth\">';\n\n            // Ref\n            print '<tr><td class=\"titlefield fieldrequired\">'.$langs->trans(\"Ref\").'</td><td colspan=\"3\"><input name=\"ref\" class=\"maxwidth200\" maxlength=\"128\" value=\"'.dol_escape_htmltag($object->ref).'\"></td></tr>';\n\n            // Label\n            print '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Label\").'</td><td colspan=\"3\"><input name=\"label\" class=\"minwidth300 maxwidth400onsmartphone\" maxlength=\"255\" value=\"'.dol_escape_htmltag($object->label).'\"></td></tr>';\n\n            // Status To sell\n            print '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Status\").' ('.$langs->trans(\"Sell\").')</td><td colspan=\"3\">';\n            print '<select class=\"flat\" name=\"statut\">';\n            if ($object->status)\n            {\n                print '<option value=\"1\" selected>'.$langs->trans(\"OnSell\").'</option>';\n                print '<option value=\"0\">'.$langs->trans(\"NotOnSell\").'</option>';\n            }\n            else\n            {\n                print '<option value=\"1\">'.$langs->trans(\"OnSell\").'</option>';\n                print '<option value=\"0\" selected>'.$langs->trans(\"NotOnSell\").'</option>';\n            }\n            print '</select>';\n            print '</td></tr>';\n\n            // Status To Buy\n            print '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Status\").' ('.$langs->trans(\"Buy\").')</td><td colspan=\"3\">';\n            print '<select class=\"flat\" name=\"statut_buy\">';\n            if ($object->status_buy)\n            {\n                print '<option value=\"1\" selected>'.$langs->trans(\"ProductStatusOnBuy\").'</option>';\n                print '<option value=\"0\">'.$langs->trans(\"ProductStatusNotOnBuy\").'</option>';\n            }\n            else\n            {\n                print '<option value=\"1\">'.$langs->trans(\"ProductStatusOnBuy\").'</option>';\n                print '<option value=\"0\" selected>'.$langs->trans(\"ProductStatusNotOnBuy\").'</option>';\n            }\n            print '</select>';\n            print '</td></tr>';\n\n\t\t\t// Batch number managment\n\t\t\tif ($conf->productbatch->enabled) \n\t\t\t{\n\t\t\t\tif ($object->isProduct() || ! empty($conf->global->STOCK_SUPPORTS_SERVICES))\n\t\t\t\t{\n\t\t\t\t\tprint '<tr><td>'.$langs->trans(\"ManageLotSerial\").'</td><td colspan=\"3\">';\n\t\t\t\t\t$statutarray=array('0' => $langs->trans(\"ProductStatusNotOnBatch\"), '1' => $langs->trans(\"ProductStatusOnBatch\"));\n\t\t\t\t\tprint $form->selectarray('status_batch',$statutarray,$object->status_batch);\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t}\n\t\t\t}\n\n            // Barcode\n            $showbarcode=empty($conf->barcode->enabled)?0:1;\n            if (! empty($conf->global->MAIN_USE_ADVANCED_PERMS) && empty($user->rights->barcode->lire_advance)) $showbarcode=0;\n\n\t        if ($showbarcode)\n\t        {\n\t\t        print '<tr><td>'.$langs->trans('BarcodeType').'</td><td>';\n\t\t        if (isset($_POST['fk_barcode_type']))\n\t\t        {\n\t\t         \t$fk_barcode_type=GETPOST('fk_barcode_type');\n\t\t        }\n\t\t        else\n\t\t        {\n\t        \t\t$fk_barcode_type=$object->barcode_type;\n\t\t        \tif (empty($fk_barcode_type) && ! empty($conf->global->PRODUIT_DEFAULT_BARCODE_TYPE)) $fk_barcode_type = $conf->global->PRODUIT_DEFAULT_BARCODE_TYPE;\n\t\t        }\n\t\t        require_once DOL_DOCUMENT_ROOT.'/core/class/html.formbarcode.class.php';\n\t            $formbarcode = new FormBarCode($db);\n\t\t        print $formbarcode->select_barcode_type($fk_barcode_type, 'fk_barcode_type', 1);\n\t\t        print '</td><td>'.$langs->trans(\"BarcodeValue\").'</td><td>';\n\t\t        $tmpcode=isset($_POST['barcode'])?GETPOST('barcode'):$object->barcode;\n\t\t        if (empty($tmpcode) && ! empty($modBarCodeProduct->code_auto)) $tmpcode=$modBarCodeProduct->getNextValue($object,$type);\n\t\t        print '<input size=\"40\" class=\"maxwidthonsmartphone\" type=\"text\" name=\"barcode\" value=\"'.dol_escape_htmltag($tmpcode).'\">';\n\t\t        print '</td></tr>';\n\t        }\n\n            // Description (used in invoice, propal...)\n            print '<tr><td class=\"tdtop\">'.$langs->trans(\"Description\").'</td><td colspan=\"3\">';\n\n            // We use dolibarr_details as type of DolEditor here, because we must not accept images as description is included into PDF and not accepted by TCPDF.\n            $doleditor = new DolEditor('desc', $object->description, '', 160, 'dolibarr_details', '', false, true, $conf->global->FCKEDITOR_ENABLE_PRODUCTDESC, ROWS_4, '90%');\n            $doleditor->Create();\n\n            print \"</td></tr>\";\n            print \"\\n\";\n\n            // Public Url\n            print '<tr><td>'.$langs->trans(\"PublicUrl\").'</td><td colspan=\"3\">';\n\t\t\tprint '<input type=\"text\" name=\"url\" class=\"quatrevingtpercent\" value=\"'.$object->url.'\">';\n            print '</td></tr>';\n\n            // Stock\n            /*\n            if ($object->isProduct() && ! empty($conf->stock->enabled))\n            {\n                print \"<tr>\".'<td>'.$langs->trans(\"StockLimit\").'</td><td>';\n                print '<input name=\"seuil_stock_alerte\" size=\"4\" value=\"'.$object->seuil_stock_alerte.'\">';\n                print '</td>';\n\n                print '<td>'.$langs->trans(\"DesiredStock\").'</td><td>';\n                print '<input name=\"desiredstock\" size=\"4\" value=\"'.$object->desiredstock.'\">';\n                print '</td></tr>';\n            }\n            else\n            {\n                print '<input name=\"seuil_stock_alerte\" type=\"hidden\" value=\"'.$object->seuil_stock_alerte.'\">';\n                print '<input name=\"desiredstock\" type=\"hidden\" value=\"'.$object->desiredstock.'\">';\n            }*/\n\n            // Nature\n            if($object->type!= Product::TYPE_SERVICE)\n            {\n                print '<tr><td>'.$langs->trans(\"Nature\").'</td><td colspan=\"3\">';\n                $statutarray=array('-1'=>'&nbsp;', '1' => $langs->trans(\"Finished\"), '0' => $langs->trans(\"RowMaterial\"));\n                print $form->selectarray('finished',$statutarray,$object->finished);\n                print '</td></tr>';\n            }\n\n            if ($object->isService())\n            {\n                // Duration\n                print '<tr><td>'.$langs->trans(\"Duration\").'</td><td colspan=\"3\"><input name=\"duration_value\" size=\"3\" maxlength=\"5\" value=\"'.$object->duration_value.'\">';\n                print '&nbsp; ';\n                print '<input name=\"duration_unit\" type=\"radio\" value=\"h\"'.($object->duration_unit=='h'?' checked':'').'>'.$langs->trans(\"Hour\");\n                print '&nbsp; ';\n                print '<input name=\"duration_unit\" type=\"radio\" value=\"d\"'.($object->duration_unit=='d'?' checked':'').'>'.$langs->trans(\"Day\");\n                print '&nbsp; ';\n                print '<input name=\"duration_unit\" type=\"radio\" value=\"w\"'.($object->duration_unit=='w'?' checked':'').'>'.$langs->trans(\"Week\");\n                print '&nbsp; ';\n                print '<input name=\"duration_unit\" type=\"radio\" value=\"m\"'.($object->duration_unit=='m'?' checked':'').'>'.$langs->trans(\"Month\");\n                print '&nbsp; ';\n                print '<input name=\"duration_unit\" type=\"radio\" value=\"y\"'.($object->duration_unit=='y'?' checked':'').'>'.$langs->trans(\"Year\");\n                print '</td></tr>';\n            }\n            else\n\t\t\t{\n                // Weight\n                print '<tr><td>'.$langs->trans(\"Weight\").'</td><td colspan=\"3\">';\n                print '<input name=\"weight\" size=\"5\" value=\"'.$object->weight.'\"> ';\n                print $formproduct->select_measuring_units(\"weight_units\", \"weight\", $object->weight_units);\n                print '</td></tr>';\n                if (empty($conf->global->PRODUCT_DISABLE_SIZE))\n                {\n        \t\t\t// Length\n        \t\t\tprint '<tr><td>'.$langs->trans(\"Length\").' x '.$langs->trans(\"Width\").' x '.$langs->trans(\"Height\").'</td><td colspan=\"3\">';\n        \t\t\tprint '<input name=\"size\" size=\"5\" value=\"'.$object->length.'\">x';\n        \t\t\tprint '<input name=\"sizewidth\" size=\"5\" value=\"'.$object->width.'\">x';\n        \t\t\tprint '<input name=\"sizeheight\" size=\"5\" value=\"'.$object->height.'\"> ';\n        \t\t\tprint $formproduct->select_measuring_units(\"size_units\", \"size\", $object->length_units);\n        \t\t\tprint '</td></tr>';\n                }\n                if (empty($conf->global->PRODUCT_DISABLE_SURFACE))\n                {\n                    // Surface\n                    print '<tr><td>'.$langs->trans(\"Surface\").'</td><td colspan=\"3\">';\n                    print '<input name=\"surface\" size=\"5\" value=\"'.$object->surface.'\"> ';\n                    print $formproduct->select_measuring_units(\"surface_units\", \"surface\", $object->surface_units);\n                    print '</td></tr>';\n                }\n                if (empty($conf->global->PRODUCT_DISABLE_VOLUME))\n                {\n                    // Volume\n                    print '<tr><td>'.$langs->trans(\"Volume\").'</td><td colspan=\"3\">';\n                    print '<input name=\"volume\" size=\"5\" value=\"'.$object->volume.'\"> ';\n                    print $formproduct->select_measuring_units(\"volume_units\", \"volume\", $object->volume_units);\n                    print '</td></tr>';\n                }\n            }\n        \t// Units\n\t        if($conf->global->PRODUCT_USE_UNITS)\n\t        {\n\t\t        print '<tr><td>'.$langs->trans('DefaultUnitToShow').'</td>';\n\t\t        print '<td colspan=\"3\">';\n\t\t        print $form->selectUnits($object->fk_unit, 'units');\n\t\t        print '</td></tr>';\n\t        }\n\n\t        // Custom code\n    \t    if (! $object->isService() && empty($conf->global->PRODUCT_DISABLE_CUSTOM_INFO))\n        \t{\n\t            print '<tr><td>'.$langs->trans(\"CustomCode\").'</td><td><input name=\"customcode\" class=\"maxwidth100onsmartphone\" value=\"'.$object->customcode.'\"></td>';\n\t            // Origin country\n\t            print '<td>'.$langs->trans(\"CountryOrigin\").'</td><td>';\n\t            print $form->select_country($object->country_id, 'country_id', '', 0, 'minwidth100 maxwidthonsmartphone');\n\t            if ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t            print '</td></tr>';\n        \t}\n\n            // Other attributes\n            $parameters=array('colspan' => ' colspan=\"3\"', 'cols'=>3);\n            $reshook=$hookmanager->executeHooks('formObjectOptions',$parameters,$object,$action);    // Note that $action and $object may have been modified by hook\n            print $hookmanager->resPrint;\n            if (empty($reshook) && ! empty($extrafields->attribute_label))\n            {\n            \tprint $object->showOptionals($extrafields,'edit');\n            }\n\n\t\t\t// Tags-Categories\n            if ($conf->categorie->enabled)\n\t\t\t{\n\t\t\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"Categories\").'</td><td colspan=\"3\">';\n\t\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_PRODUCT, '', 'parent', 64, 0, 1);\n\t\t\t\t$c = new Categorie($db);\n\t\t\t\t$cats = $c->containing($object->id,Categorie::TYPE_PRODUCT);\n\t\t\t\t$arrayselected=array();\n\t\t\t\tforeach($cats as $cat) {\n\t\t\t\t\t$arrayselected[] = $cat->id;\n\t\t\t\t}\n\t\t\t\tprint $form->multiselectarray('categories', $cate_arbo, $arrayselected, '', 0, '', 0, '100%');\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\n            // Note private\n\t\t\tif (! empty($conf->global->MAIN_DISABLE_NOTES_TAB))\n\t\t\t{\n                print '<tr><td class=\"tdtop\">'.$langs->trans(\"NoteNotVisibleOnBill\").'</td><td colspan=\"3\">';\n\n                $doleditor = new DolEditor('note_private', $object->note_private, '', 140, 'dolibarr_notes', '', false, true, $conf->global->FCKEDITOR_ENABLE_PRODUCTDESC, ROWS_4, '90%');\n                $doleditor->Create();\n\n                print \"</td></tr>\";\n\t\t\t}\n\n            print '</table>';\n\n            print '<br>';\n\n            print '<table class=\"border\" width=\"100%\">';\n\n\t\t\tif (! empty($conf->accounting->enabled))\n\t\t\t{\n\t\t\t\t// Accountancy_code_sell\n\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint $formaccounting->select_account($object->accountancy_code_sell, 'accountancy_code_sell', 1, '', 1, 1);\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\tif ($conf->global->MAIN_FEATURES_LEVEL)\n\t\t\t\t{\n\t\t\t\t\t// Accountancy_code_sell_intra\n\t\t\t\t\tif ($mysoc->isInEEC())\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellIntraCode\").'</td>';\n\t\t\t\t\t\tprint '<td>';\n\t\t\t\t\t\tprint $formaccounting->select_account($object->accountancy_code_sell_intra, 'accountancy_code_sell_intra', 1, '', 1, 1);\n\t\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Accountancy_code_sell_export\n\t\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellExportCode\").'</td>';\n\t\t\t\t\tprint '<td>';\n\t\t\t\t\tprint $formaccounting->select_account($object->accountancy_code_sell_export, 'accountancy_code_sell_export', 1, '', 1, 1);\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t}\n\n\t\t\t\t// Accountancy_code_buy\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint $formaccounting->select_account($object->accountancy_code_buy, 'accountancy_code_buy', 1, '', 1, 1);\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\t\t\telse // For external software\n\t\t\t{\n\t\t\t\t// Accountancy_code_sell\n\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\t\tprint '<td><input name=\"accountancy_code_sell\" class=\"maxwidth200\" value=\"'.$object->accountancy_code_sell.'\">';\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\tif ($conf->global->MAIN_FEATURES_LEVEL)\n\t\t\t\t{\n\t\t\t\t\t// Accountancy_code_sell_intra\n\t\t\t\t\tif ($mysoc->isInEEC())\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellIntraCode\").'</td>';\n\t\t\t\t\t\tprint '<td><input name=\"accountancy_code_sell_intra\" class=\"maxwidth200\" value=\"'.$object->accountancy_code_sell_intra.'\">';\n\t\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Accountancy_code_sell_export\n\t\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellExportCode\").'</td>';\n\t\t\t\t\tprint '<td><input name=\"accountancy_code_sell_export\" class=\"maxwidth200\" value=\"'.$object->accountancy_code_sell_export.'\">';\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t}\n\n\t\t\t\t// Accountancy_code_buy\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\t\tprint '<td><input name=\"accountancy_code_buy\" class=\"maxwidth200\" value=\"'.$object->accountancy_code_buy.'\">';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\t\t\tprint '</table>';\n\n\t\t\tdol_fiche_end();\n\n\t\t\tprint '<div class=\"center\">';\n\t\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Save\").'\">';\n\t\t\tprint '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';\n\t\t\tprint '<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\tprint '</div>';\n\n\t\t\tprint '</form>';\n\t\t}\n        // Fiche en mode visu\n        else\n\t\t{\n            $showbarcode=empty($conf->barcode->enabled)?0:1;\n            if (! empty($conf->global->MAIN_USE_ADVANCED_PERMS) && empty($user->rights->barcode->lire_advance)) $showbarcode=0;\n\n\t\t    $head=product_prepare_head($object);\n            $titre=$langs->trans(\"CardProduct\".$object->type);\n            $picto=($object->type== Product::TYPE_SERVICE?'service':'product');\n\n            dol_fiche_head($head, 'card', $titre, -1, $picto);\n\n            $linkback = '<a href=\"'.DOL_URL_ROOT.'/product/list.php?restore_lastsearch_values=1&type='.$object->type.'\">'.$langs->trans(\"BackToList\").'</a>';\n            $object->next_prev_filter=\" fk_product_type = \".$object->type;\n\n            $shownav = 1;\n            if ($user->societe_id && ! in_array('product', explode(',',$conf->global->MAIN_MODULES_FOR_EXTERNAL))) $shownav=0;\n\n            dol_banner_tab($object, 'ref', $linkback, $shownav, 'ref');\n\n\n            print '<div class=\"fichecenter\">';\n            print '<div class=\"fichehalfleft\">';\n\n            print '<div class=\"underbanner clearboth\"></div>';\n            print '<table class=\"border tableforfield\" width=\"100%\">';\n\n\t\t\t// Type\n\t\t\tif (! empty($conf->produit->enabled) && ! empty($conf->service->enabled))\n\t\t\t{\n\t\t\t\t// TODO change for compatibility with edit in place\n\t\t\t\t$typeformat='select;0:'.$langs->trans(\"Product\").',1:'.$langs->trans(\"Service\");\n\t\t\t\tprint '<tr><td class=\"titlefield\">'.$form->editfieldkey(\"Type\", 'fk_product_type', $object->type, $object, $usercancreate, $typeformat).'</td><td colspan=\"2\">';\n\t\t\t\tprint $form->editfieldval(\"Type\", 'fk_product_type', $object->type, $object, $usercancreate, $typeformat);\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n            if ($showbarcode)\n            {\n                // Barcode type\n                print '<tr><td class=\"nowrap\">';\n                print '<table width=\"100%\" class=\"nobordernopadding\"><tr><td class=\"nowrap\">';\n                print $langs->trans(\"BarcodeType\");\n                print '</td>';\n                if (($action != 'editbarcodetype') && $usercancreate && $createbarcode) print '<td align=\"right\"><a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editbarcodetype&amp;id='.$object->id.'\">'.img_edit($langs->trans('Edit'),1).'</a></td>';\n                print '</tr></table>';\n                print '</td><td colspan=\"2\">';\n                if ($action == 'editbarcodetype' || $action == 'editbarcode')\n                {\n                    require_once DOL_DOCUMENT_ROOT.'/core/class/html.formbarcode.class.php';\n                    $formbarcode = new FormBarCode($db);\n\t\t\t\t}\n                if ($action == 'editbarcodetype')\n                {\n                    $formbarcode->form_barcode_type($_SERVER['PHP_SELF'].'?id='.$object->id,$object->barcode_type,'fk_barcode_type');\n                }\n                else\n                {\n                    $object->fetch_barcode();\n                    print $object->barcode_type_label?$object->barcode_type_label:($object->barcode?'<div class=\"warning\">'.$langs->trans(\"SetDefaultBarcodeType\").'<div>':'');\n                }\n                print '</td></tr>'.\"\\n\";\n\n                // Barcode value\n                print '<tr><td class=\"nowrap\">';\n                print '<table width=\"100%\" class=\"nobordernopadding\"><tr><td class=\"nowrap\">';\n                print $langs->trans(\"BarcodeValue\");\n                print '</td>';\n                if (($action != 'editbarcode') && $usercancreate && $createbarcode) print '<td align=\"right\"><a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editbarcode&amp;id='.$object->id.'\">'.img_edit($langs->trans('Edit'),1).'</a></td>';\n                print '</tr></table>';\n                print '</td><td colspan=\"2\">';\n                if ($action == 'editbarcode')\n                {\n\t\t\t\t\t$tmpcode=isset($_POST['barcode'])?GETPOST('barcode'):$object->barcode;\n\t\t\t\t\tif (empty($tmpcode) && ! empty($modBarCodeProduct->code_auto)) $tmpcode=$modBarCodeProduct->getNextValue($object,$type);\n\n\t\t\t\t\tprint '<form method=\"post\" action=\"'.$_SERVER[\"PHP_SELF\"].'?id='.$object->id.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setbarcode\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"barcode_type_code\" value=\"'.$object->barcode_type_code.'\">';\n\t\t\t\t\tprint '<input size=\"40\" class=\"maxwidthonsmartphone\" type=\"text\" name=\"barcode\" value=\"'.$tmpcode.'\">';\n\t\t\t\t\tprint '&nbsp;<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t\t\tprint '</form>';\n                }\n                else\n                {\n\t\t\t\t\tprint $object->barcode;\n                }\n                print '</td></tr>'.\"\\n\";\n            }\n\n\t\t\t// Accountancy sell code\n\t\t\tprint '<tr><td class=\"nowrap\">';\n\t\t\tprint $langs->trans(\"ProductAccountancySellCode\");\n\t\t\tprint '</td><td colspan=\"2\">';\n\t\t\tif (! empty($conf->accounting->enabled))\n\t\t\t{\n\t\t\t\t$accountingaccount = new AccountingAccount($db);\n\t\t\t\t$accountingaccount->fetch('',$object->accountancy_code_sell,1);\n\n\t\t\t\tprint $accountingaccount->getNomUrl(0,1,1,'',1);\n\t\t\t} else {\n\t\t\t\tprint $object->accountancy_code_sell;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\tif ($conf->global->MAIN_FEATURES_LEVEL)\n\t\t\t{\n\t\t\t\t// Accountancy sell code intra-community\n\t\t\t\tif ($mysoc->isInEEC())\n\t\t\t\t{\n\t\t\t\t\tprint '<tr><td class=\"nowrap\">';\n\t\t\t\t\tprint $langs->trans(\"ProductAccountancySellIntraCode\");\n\t\t\t\t\tprint '</td><td colspan=\"2\">';\n\t\t\t\t\tif (! empty($conf->accounting->enabled))\n\t\t\t\t\t{\n\t\t\t\t\t\t$accountingaccount2 = new AccountingAccount($db);\n\t\t\t\t\t\t$accountingaccount2->fetch('',$object->accountancy_code_sell_intra,1);\n\n\t\t\t\t\t\tprint $accountingaccount2->getNomUrl(0,1,1,'',1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint $object->accountancy_code_sell_intra;\n\t\t\t\t\t}\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t}\n\n\t\t\t\t// Accountancy sell code export\n\t\t\t\tprint '<tr><td class=\"nowrap\">';\n\t\t\t\tprint $langs->trans(\"ProductAccountancySellExportCode\");\n\t\t\t\tprint '</td><td colspan=\"2\">';\n\t\t\t\tif (! empty($conf->accounting->enabled))\n\t\t\t\t{\n\t\t\t\t\t$accountingaccount3 = new AccountingAccount($db);\n\t\t\t\t\t$accountingaccount3->fetch('',$object->accountancy_code_sell_export,1);\n\n\t\t\t\t\tprint $accountingaccount3->getNomUrl(0,1,1,'',1);\n\t\t\t\t} else {\n\t\t\t\t\tprint $object->accountancy_code_sell_export;\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Accountancy buy code\n\t\t\tprint '<tr><td class=\"nowrap\">';\n\t\t\tprint $langs->trans(\"ProductAccountancyBuyCode\");\n\t\t\tprint '</td><td colspan=\"2\">';\n\t\t\tif (! empty($conf->accounting->enabled))\n\t\t\t{\n\t\t\t\t$accountingaccount4 = new AccountingAccount($db);\n\t\t\t\t$accountingaccount4->fetch('',$object->accountancy_code_buy,1);\n\n\t\t\t\tprint $accountingaccount4->getNomUrl(0,1,1,'',1);\n\t\t\t} else {\n\t\t\t\tprint $object->accountancy_code_buy;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n            // Batch number management (to batch)\n            if (! empty($conf->productbatch->enabled)) \n            {\n\t\t\t\tif ($object->isProduct() || ! empty($conf->global->STOCK_SUPPORTS_SERVICES))\n\t\t\t\t{\n            \t\tprint '<tr><td>'.$langs->trans(\"ManageLotSerial\").'</td><td colspan=\"2\">';\n            \t    if (! empty($conf->use_javascript_ajax) && $usercancreate && ! empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n            \t        print ajax_object_onoff($object, 'status_batch', 'tobatch', 'ProductStatusOnBatch', 'ProductStatusNotOnBatch');\n            \t    } else {\n            \t        print $object->getLibStatut(0,2);\n            \t    }\n            \t    print '</td></tr>';\n\t\t\t\t}\n            }\n\n            // Description\n            print '<tr><td class=\"tdtop\">'.$langs->trans(\"Description\").'</td><td colspan=\"2\">'.(dol_textishtml($object->description)?$object->description:dol_nl2br($object->description,1,true)).'</td></tr>';\n\n            // Public URL\n            print '<tr><td>'.$langs->trans(\"PublicUrl\").'</td><td colspan=\"2\">';\n\t\t\tprint dol_print_url($object->url);\n            print '</td></tr>';\n\n            //Parent product.\n            if (!empty($conf->variants->enabled) && $object->isProduct()) {\n\n                $combination = new ProductCombination($db);\n\n                if ($combination->fetchByFkProductChild($object->id) > 0) {\n                    $prodstatic = new Product($db);\n                    $prodstatic->fetch($combination->fk_product_parent);\n\n                    // Parent product\n                    print '<tr><td>'.$langs->trans(\"ParentProduct\").'</td><td colspan=\"2\">';\n                    print $prodstatic->getNomUrl(1);\n                    print '</td></tr>';\n                }\n            }\n\n            print '</table>';\n            print '</div>';\n            print '<div class=\"fichehalfright\"><div class=\"ficheaddleft\">';\n\n            print '<div class=\"underbanner clearboth\"></div>';\n            print '<table class=\"border tableforfield\" width=\"100%\">';\n\n            // Nature\n            if($object->type!= Product::TYPE_SERVICE)\n            {\n                print '<tr><td class=\"titlefield\">'.$langs->trans(\"Nature\").'</td><td colspan=\"2\">';\n                print $object->getLibFinished();\n                print '</td></tr>';\n            }\n\n            if ($object->isService())\n            {\n                // Duration\n                print '<tr><td class=\"titlefield\">'.$langs->trans(\"Duration\").'</td><td colspan=\"2\">'.$object->duration_value.'&nbsp;';\n                if ($object->duration_value > 1)\n                {\n                    $dur=array(\"h\"=>$langs->trans(\"Hours\"),\"d\"=>$langs->trans(\"Days\"),\"w\"=>$langs->trans(\"Weeks\"),\"m\"=>$langs->trans(\"Months\"),\"y\"=>$langs->trans(\"Years\"));\n                }\n                else if ($object->duration_value > 0)\n                {\n                    $dur=array(\"h\"=>$langs->trans(\"Hour\"),\"d\"=>$langs->trans(\"Day\"),\"w\"=>$langs->trans(\"Week\"),\"m\"=>$langs->trans(\"Month\"),\"y\"=>$langs->trans(\"Year\"));\n                }\n                print (! empty($object->duration_unit) && isset($dur[$object->duration_unit]) ? $langs->trans($dur[$object->duration_unit]) : '').\"&nbsp;\";\n\n                print '</td></tr>';\n            }\n            else\n            {\n                // Weight\n                print '<tr><td class=\"titlefield\">'.$langs->trans(\"Weight\").'</td><td colspan=\"2\">';\n                if ($object->weight != '')\n                {\n                    print $object->weight.\" \".measuring_units_string($object->weight_units,\"weight\");\n                }\n                else\n                {\n                    print '&nbsp;';\n                }\n                print \"</td></tr>\\n\";\n                if (empty($conf->global->PRODUCT_DISABLE_SIZE))\n                {\n                    // Length\n                    print '<tr><td>'.$langs->trans(\"Length\").' x '.$langs->trans(\"Width\").' x '.$langs->trans(\"Height\").'</td><td colspan=\"2\">';\n                    if ($object->length != '' || $object->width != '' || $object->height != '')\n                    {\n                        print $object->length;\n                        if ($object->width) print \" x \".$object->width;\n                        if ($object->height) print \" x \".$object->height;\n                        print ' '.measuring_units_string($object->length_units,\"size\");\n                    }\n                    else\n                    {\n                        print '&nbsp;';\n                    }\n                    print \"</td></tr>\\n\";\n                }\n                if (empty($conf->global->PRODUCT_DISABLE_SURFACE))\n                {\n                    // Surface\n                    print '<tr><td>'.$langs->trans(\"Surface\").'</td><td colspan=\"2\">';\n                    if ($object->surface != '')\n                    {\n                        print $object->surface.\" \".measuring_units_string($object->surface_units,\"surface\");\n                    }\n                    else\n                    {\n                        print '&nbsp;';\n                    }\n                    print \"</td></tr>\\n\";\n                }\n                if (empty($conf->global->PRODUCT_DISABLE_VOLUME))\n                {\n                    // Volume\n                    print '<tr><td>'.$langs->trans(\"Volume\").'</td><td colspan=\"2\">';\n                    if ($object->volume != '')\n                    {\n                        print $object->volume.\" \".measuring_units_string($object->volume_units,\"volume\");\n                    }\n                    else\n                    {\n                        print '&nbsp;';\n                    }\n                    print \"</td></tr>\\n\";\n                }\n            }\n\n\t\t\t// Unit\n\t\t\tif (! empty($conf->global->PRODUCT_USE_UNITS))\n\t\t\t{\n\t\t\t\t$unit = $object->getLabelOfUnit();\n\n\t\t\t\tprint '<tr><td>'.$langs->trans('DefaultUnitToShow').'</td><td>';\n\t\t\t\tif ($unit !== '') {\n\t\t\t\t\tprint $langs->trans($unit);\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n        \t// Custom code\n        \tif (! $object->isService() && empty($conf->global->PRODUCT_DISABLE_CUSTOM_INFO))\n        \t{\n\t            print '<tr><td>'.$langs->trans(\"CustomCode\").'</td><td colspan=\"2\">'.$object->customcode.'</td>';\n\n            \t// Origin country code\n            \tprint '<tr><td>'.$langs->trans(\"CountryOrigin\").'</td><td colspan=\"2\">'.getCountry($object->country_id,0,$db).'</td>';\n        \t}\n\n            // Other attributes\n            $parameters=array('colspan' => ' colspan=\"'.(2+(($showphoto||$showbarcode)?1:0)).'\"');\n            include DOL_DOCUMENT_ROOT . '/core/tpl/extrafields_view.tpl.php';\n\n\t\t\t// Categories\n\t\t\tif($conf->categorie->enabled) {\n\t\t\t\tprint '<tr><td valign=\"middle\">'.$langs->trans(\"Categories\").'</td><td colspan=\"3\">';\n\t\t\t\tprint $form->showCategories($object->id,'product',1);\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\n            // Note private\n\t\t\tif (! empty($conf->global->MAIN_DISABLE_NOTES_TAB))\n\t\t\t{\n    \t\t\tprint '<!-- show Note --> '.\"\\n\";\n                print '<tr><td class=\"tdtop\">'.$langs->trans(\"NotePrivate\").'</td><td colspan=\"'.(2+(($showphoto||$showbarcode)?1:0)).'\">'.(dol_textishtml($object->note_private)?$object->note_private:dol_nl2br($object->note_private,1,true)).'</td></tr>'.\"\\n\";\n                print '<!-- End show Note --> '.\"\\n\";\n\t\t\t}\n\n            print \"</table>\\n\";\n    \t\tprint '</div>';\n\n            print '</div></div>';\n            print '<div style=\"clear:both\"></div>';\n\n            dol_fiche_end();\n        }\n\n    }\n    else if ($action != 'create')\n    {\n        exit;\n    }\n}\n\n// Load object modCodeProduct\n$module=(! empty($conf->global->PRODUCT_CODEPRODUCT_ADDON)?$conf->global->PRODUCT_CODEPRODUCT_ADDON:'mod_codeproduct_leopard');\nif (substr($module, 0, 16) == 'mod_codeproduct_' && substr($module, -3) == 'php')\n{\n    $module = substr($module, 0, dol_strlen($module)-4);\n}\n$result=dol_include_once('/core/modules/product/'.$module.'.php');\nif ($result > 0)\n{\n\t$modCodeProduct = new $module();\n}\n\n$tmpcode='';\nif (! empty($modCodeProduct->code_auto)) $tmpcode=$modCodeProduct->getNextValue($object,$object->type);\n\n// Define confirmation messages\n$formquestionclone=array(\n\t'text' => $langs->trans(\"ConfirmClone\"),\n    array('type' => 'text', 'name' => 'clone_ref','label' => $langs->trans(\"NewRefForClone\"), 'value' => empty($tmpcode) ? $langs->trans(\"CopyOf\").' '.$object->ref : $tmpcode, 'size'=>24),\n    array('type' => 'checkbox', 'name' => 'clone_content','label' => $langs->trans(\"CloneContentProduct\"), 'value' => 1),\n    array('type' => 'checkbox', 'name' => 'clone_prices', 'label' => $langs->trans(\"ClonePricesProduct\").' ('.$langs->trans(\"FeatureNotYetAvailable\").')', 'value' => 0, 'disabled' => true),\n);\nif (! empty($conf->global->PRODUIT_SOUSPRODUITS))\n{\n    $formquestionclone[]=array('type' => 'checkbox', 'name' => 'clone_composition', 'label' => $langs->trans('CloneCompositionProduct'), 'value' => 1);\n}\n\n// Confirm delete product\nif (($action == 'delete' && (empty($conf->use_javascript_ajax) || ! empty($conf->dol_use_jmobile)))\t// Output when action = clone if jmobile or no js\n\t|| (! empty($conf->use_javascript_ajax) && empty($conf->dol_use_jmobile)))\t\t\t\t\t\t\t// Always output when not jmobile nor js\n{\n    print $form->formconfirm(\"card.php?id=\".$object->id,$langs->trans(\"DeleteProduct\"),$langs->trans(\"ConfirmDeleteProduct\"),\"confirm_delete\",'',0,\"action-delete\");\n}\n\n// Clone confirmation\nif (($action == 'clone' && (empty($conf->use_javascript_ajax) || ! empty($conf->dol_use_jmobile)))\t\t// Output when action = clone if jmobile or no js\n\t|| (! empty($conf->use_javascript_ajax) && empty($conf->dol_use_jmobile)))\t\t\t\t\t\t\t// Always output when not jmobile nor js\n{\n    print $form->formconfirm($_SERVER[\"PHP_SELF\"].'?id='.$object->id,$langs->trans('CloneProduct'),$langs->trans('ConfirmCloneProduct',$object->ref),'confirm_clone',$formquestionclone,'yes','action-clone',260,600);\n}\n\n\n/* ************************************************************************** */\n/*                                                                            */\n/* Barre d'action                                                             */\n/*                                                                            */\n/* ************************************************************************** */\nif ($action != 'create' && $action != 'edit')\n{\n    print \"\\n\".'<div class=\"tabsAction\">'.\"\\n\";\n\n    $parameters=array();\n    $reshook=$hookmanager->executeHooks('addMoreActionsButtons',$parameters,$object,$action);    // Note that $action and $object may have been modified by hook\n    if (empty($reshook))\n\t{\n\t\tif ($usercancreate)\n        {\n            if (! isset($object->no_button_edit) || $object->no_button_edit <> 1) print '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=edit&amp;id='.$object->id.'\">'.$langs->trans(\"Modify\").'</a></div>';\n\n            if (! isset($object->no_button_copy) || $object->no_button_copy <> 1)\n            {\n                if (! empty($conf->use_javascript_ajax) && empty($conf->dol_use_jmobile))\n                {\n                    print '<div class=\"inline-block divButAction\"><span id=\"action-clone\" class=\"butAction\">'.$langs->trans('ToClone').'</span></div>'.\"\\n\";\n                }\n                else\n    \t\t\t{\n                    print '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=clone&amp;id='.$object->id.'\">'.$langs->trans(\"ToClone\").'</a></div>';\n                }\n            }\n        }\n        $object_is_used = $object->isObjectUsed($object->id);\n\n        if ($usercandelete)\n        {\n            if (empty($object_is_used) && (! isset($object->no_button_delete) || $object->no_button_delete <> 1))\n            {\n                if (! empty($conf->use_javascript_ajax) && empty($conf->dol_use_jmobile))\n                {\n                    print '<div class=\"inline-block divButAction\"><span id=\"action-delete\" class=\"butActionDelete\">'.$langs->trans('Delete').'</span></div>'.\"\\n\";\n                }\n                else\n    \t\t\t{\n                    print '<div class=\"inline-block divButAction\"><a class=\"butActionDelete\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=delete&amp;id='.$object->id.'\">'.$langs->trans(\"Delete\").'</a></div>';\n                }\n            }\n            else\n    \t\t{\n                print '<div class=\"inline-block divButAction\"><a class=\"butActionRefused\" href=\"#\" title=\"'.$langs->trans(\"ProductIsUsed\").'\">'.$langs->trans(\"Delete\").'</a></div>';\n            }\n        }\n        else\n    \t{\n            print '<div class=\"inline-block divButAction\"><a class=\"butActionRefused\" href=\"#\" title=\"'.$langs->trans(\"NotEnoughPermissions\").'\">'.$langs->trans(\"Delete\").'</a></div>';\n        }\n    }\n\n    print \"\\n</div>\\n\";\n}\n\n/*\n * All the \"Add to\" areas\n */\n\nif (! empty($conf->global->PRODUCT_ADD_FORM_ADD_TO) && $object->id && ($action == '' || $action == 'view') && $object->status)\n{\n    //Variable used to check if any text is going to be printed\n    $html = '';\n\t//print '<div class=\"fichecenter\"><div class=\"fichehalfleft\">';\n\n    // Propals\n    if (! empty($conf->propal->enabled) && $user->rights->propale->creer)\n    {\n        $propal = new Propal($db);\n\n        $langs->load(\"propal\");\n\n        $otherprop = $propal->liste_array(2,1,0);\n\n        if (is_array($otherprop) && count($otherprop))\n        {\n        \t$html .= '<tr><td style=\"width: 200px;\">';\n        \t$html .= $langs->trans(\"AddToDraftProposals\").'</td><td>';\n        \t$html .= $form->selectarray(\"propalid\", $otherprop, 0, 1);\n        \t$html .= '</td></tr>';\n        }\n        else\n       {\n        \t$html .= '<tr><td style=\"width: 200px;\">';\n        \t$html .= $langs->trans(\"AddToDraftProposals\").'</td><td>';\n        \t$html .= $langs->trans(\"NoDraftProposals\");\n        \t$html .= '</td></tr>';\n        }\n    }\n\n    // Commande\n    if (! empty($conf->commande->enabled) && $user->rights->commande->creer)\n    {\n        $commande = new Commande($db);\n\n        $langs->load(\"orders\");\n\n        $othercom = $commande->liste_array(2, 1, null);\n        if (is_array($othercom) && count($othercom))\n        {\n        \t$html .= '<tr><td style=\"width: 200px;\">';\n        \t$html .= $langs->trans(\"AddToDraftOrders\").'</td><td>';\n        \t$html .= $form->selectarray(\"commandeid\", $othercom, 0, 1);\n        \t$html .= '</td></tr>';\n        }\n        else\n\t\t{\n        \t$html .= '<tr><td style=\"width: 200px;\">';\n        \t$html .= $langs->trans(\"AddToDraftOrders\").'</td><td>';\n        \t$html .= $langs->trans(\"NoDraftOrders\");\n        \t$html .= '</td></tr>';\n        }\n    }\n\n    // Factures\n    if (! empty($conf->facture->enabled) && $user->rights->facture->creer)\n    {\n    \t$invoice = new Facture($db);\n\n    \t$langs->load(\"bills\");\n\n    \t$otherinvoice = $invoice->liste_array(2, 1, null);\n    \tif (is_array($otherinvoice) && count($otherinvoice))\n    \t{\n    \t\t$html .= '<tr><td style=\"width: 200px;\">';\n    \t\t$html .= $langs->trans(\"AddToDraftInvoices\").'</td><td>';\n    \t\t$html .= $form->selectarray(\"factureid\", $otherinvoice, 0, 1);\n    \t\t$html .= '</td></tr>';\n    \t}\n    \telse\n    \t{\n    \t\t$html .= '<tr><td style=\"width: 200px;\">';\n    \t\t$html .= $langs->trans(\"AddToDraftInvoices\").'</td><td>';\n    \t\t$html .= $langs->trans(\"NoDraftInvoices\");\n    \t\t$html .= '</td></tr>';\n    \t}\n    }\n\n    //If any text is going to be printed, then we show the table\n    if (!empty($html))\n    {\n\t    print '<form method=\"POST\" action=\"'.$_SERVER[\"PHP_SELF\"].'?id='.$object->id.'\">';\n    \tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    \tprint '<input type=\"hidden\" name=\"action\" value=\"addin\">';\n\n\t    print load_fiche_titre($langs->trans(\"AddToDraft\"),'','');\n\n\t\tdol_fiche_head('');\n\n    \t$html .= '<tr><td class=\"nowrap\">'.$langs->trans(\"Quantity\").' ';\n    \t$html .= '<input type=\"text\" class=\"flat\" name=\"qty\" size=\"1\" value=\"1\"></td>';\n        $html .= '<td class=\"nowrap\">'.$langs->trans(\"ReductionShort\").'(%) ';\n    \t$html .= '<input type=\"text\" class=\"flat\" name=\"remise_percent\" size=\"1\" value=\"0\">';\n    \t$html .= '</td></tr>';\n\n    \tprint '<table width=\"100%\" class=\"border\">';\n        print $html;\n        print '</table>';\n\n        print '<div class=\"center\">';\n        print '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Add\").'\">';\n        print '</div>';\n\n        dol_fiche_end();\n\n        print '</form>';\n    }\n}\n\n\n/*\n * Documents generes\n */\n\nif ($action != 'create' && $action != 'edit' && $action != 'delete')\n{\n    print '<div class=\"fichecenter\"><div class=\"fichehalfleft\">';\n    print '<a name=\"builddoc\"></a>'; // ancre\n\n    // Documents\n    $objectref = dol_sanitizeFileName($object->ref);\n    $relativepath = $comref . '/' . $objectref . '.pdf';\n    $filedir = $conf->produit->dir_output . '/' . $objectref;\n    $urlsource=$_SERVER[\"PHP_SELF\"].\"?id=\".$object->id;\n    $genallowed=$usercanread;\n    $delallowed=$usercancreate;\n\n    $var=true;\n\n    print $formfile->showdocuments($modulepart,$object->ref,$filedir,$urlsource,$genallowed,$delallowed,'',0,0,0,28,0,'',0,'',$object->default_lang, '', $object);\n    $somethingshown=$formfile->numoffiles;\n\n    print '</div><div class=\"fichehalfright\"><div class=\"ficheaddleft\">';\n\n    $MAXEVENT = 10;\n\n    $morehtmlright = '<a href=\"'.DOL_URL_ROOT.'/product/agenda.php?id='.$object->id.'\">';\n    $morehtmlright.= $langs->trans(\"SeeAll\");\n    $morehtmlright.= '</a>';\n\n    // List of actions on element\n    include_once DOL_DOCUMENT_ROOT . '/core/class/html.formactions.class.php';\n    $formactions = new FormActions($db);\n    $somethingshown = $formactions->showactions($object, 'product', 0, 1, '', $MAXEVENT, '', $morehtmlright);\t\t// Show all action for product\n\n    print '</div></div></div>';\n}\n\n\nllxFooter();\n$db->close();\n", "<?php\n/* Copyright (C) 2006      Andre Cianfarani     <acianfa@free.fr>\n * Copyright (C) 2005-2012 Regis Houssin        <regis.houssin@capnetworks.com>\n * Copyright (C) 2007-2011 Laurent Destailleur  <eldy@users.sourceforge.net>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *       \\file       htdocs/societe/ajax/company.php\n *       \\brief      File to return Ajax response on thirdparty list request\n */\n\nif (! defined('NOTOKENRENEWAL')) define('NOTOKENRENEWAL',1); // Disables token renewal\nif (! defined('NOREQUIREMENU'))  define('NOREQUIREMENU','1');\nif (! defined('NOREQUIREHTML'))  define('NOREQUIREHTML','1');\nif (! defined('NOREQUIREAJAX'))  define('NOREQUIREAJAX','1');\nif (! defined('NOREQUIRESOC'))   define('NOREQUIRESOC','1');\nif (! defined('NOCSRFCHECK'))    define('NOCSRFCHECK','1');\n\nrequire '../../main.inc.php';\n\n$htmlname=GETPOST('htmlname','alpha');\n$filter=GETPOST('filter','alpha');\n$outjson=(GETPOST('outjson','int') ? GETPOST('outjson','int') : 0);\n$action=GETPOST('action', 'alpha');\n$id=GETPOST('id', 'int');\n$showtype=GETPOST('showtype','int');\n\n\n/*\n * View\n */\n\n//print '<!-- Ajax page called with url '.dol_escape_htmltag($_SERVER[\"PHP_SELF\"]).'?'.dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]).' -->'.\"\\n\";\n\ndol_syslog(join(',', $_GET));\n//print_r($_GET);\n\nif (! empty($action) && $action == 'fetch' && ! empty($id))\n{\n\trequire_once DOL_DOCUMENT_ROOT . '/societe/class/societe.class.php';\n\n\t$outjson=array();\n\n\t$object = new Societe($db);\n\t$ret=$object->fetch($id);\n\tif ($ret > 0)\n\t{\n\t\t$outname=$object->name;\n\t\t$outlabel = '';\n\t\t$outdesc = '';\n\t\t$outtype = $object->type;\n\n\t\t$outjson = array('ref' => $outref,'name' => $outname,'desc' => $outdesc,'type' => $outtype);\n\t}\n\n\techo json_encode($outjson);\n}\nelse\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/html.form.class.php';\n\n\t$langs->load(\"companies\");\n\n\ttop_httphead();\n\n\tif (empty($htmlname)) return;\n\n\t$match = preg_grep('/('.$htmlname.'[0-9]+)/',array_keys($_GET));\n\tsort($match);\n\t$id = (! empty($match[0]) ? $match[0] : '');\n\n\t// When used from jQuery, the search term is added as GET param \"term\".\n\t$searchkey=(($id && GETPOST($id, 'alpha'))?GETPOST($id, 'alpha'):(($htmlname && GETPOST($htmlname, 'alpha'))?GETPOST($htmlname, 'alpha'):''));\n\n\tif (! $searchkey) return;\n\n\t$form = new Form($db);\n\t$arrayresult=$form->select_thirdparty_list(0, $htmlname, $filter, 1, $showtype, 0, null, $searchkey, $outjson);\n\n\t$db->close();\n\n\tif ($outjson) print json_encode($arrayresult);\n}\n\n"], "fixing_code": ["<?php\n/* Copyright (c) 2002-2007  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2012  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2004       Sebastien Di Cintio     <sdicintio@ressource-toi.org>\n * Copyright (C) 2004       Eric Seigne             <eric.seigne@ryxeo.com>\n * Copyright (C) 2005-2017  Regis Houssin           <regis.houssin@capnetworks.com>\n * Copyright (C) 2006       Andre Cianfarani        <acianfa@free.fr>\n * Copyright (C) 2006       Marc Barilley/Ocebo     <marc@ocebo.com>\n * Copyright (C) 2007       Franky Van Liedekerke   <franky.van.liedekerker@telenet.be>\n * Copyright (C) 2007       Patrick Raguin          <patrick.raguin@gmail.com>\n * Copyright (C) 2010       Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2010-2014  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2011       Herve Prot              <herve.prot@symeos.com>\n * Copyright (C) 2012-2016  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2012       Cedric Salvador         <csalvador@gpcsolutions.fr>\n * Copyright (C) 2012-2015  Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2014       Alexandre Spangaro      <aspangaro.dolibarr@gmail.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/core/class/html.form.class.php\n *  \\ingroup    core\n *\t\\brief      File of class with all html predefined components\n */\n\n\n/**\n *\tClass to manage generation of HTML components\n *\tOnly common components must be here.\n *\n *  TODO Merge all function load_cache_* and loadCache* (except load_cache_vatrates) into one generic function loadCacheTable\n */\nclass Form\n{\n\tvar $db;\n\tvar $error;\n\tvar $num;\n\n\t// Cache arrays\n\tvar $cache_types_paiements=array();\n\tvar $cache_conditions_paiements=array();\n\tvar $cache_availability=array();\n\tvar $cache_demand_reason=array();\n\tvar $cache_types_fees=array();\n\tvar $cache_vatrates=array();\n\n\n\t/**\n\t * Constructor\n\t *\n\t * @param\t\tDoliDB\t\t$db      Database handler\n\t */\n\tpublic function __construct($db)\n\t{\n\t\t$this->db = $db;\n\t}\n\n\t/**\n\t * Output key field for an editable field\n\t *\n\t * @param   string\t$text\t\t\tText of label or key to translate\n\t * @param   string\t$htmlname\t\tName of select field ('edit' prefix will be added)\n\t * @param   string\t$preselected    Value to show/edit (not used in this function)\n\t * @param\tobject\t$object\t\t\tObject\n\t * @param\tboolean\t$perm\t\t\tPermission to allow button to edit parameter. Set it to 0 to have a not edited field.\n\t * @param\tstring\t$typeofdata\t\tType of data ('string' by default, 'email', 'amount:99', 'numeric:99', 'text' or 'textarea:rows:cols', 'datepicker' ('day' do not work, don't know why), 'ckeditor:dolibarr_zzz:width:height:savemethod:1:rows:cols', 'select;xxx[:class]'...)\n\t * @param\tstring\t$moreparam\t\tMore param to add on a href URL.\n\t * @param   int     $fieldrequired  1 if we want to show field as mandatory using the \"fieldrequired\" CSS.\n\t * @param   int     $notabletag     1=Do not output table tags but output a ':', 2=Do not output table tags and no ':', 3=Do not output table tags but output a ' '\n\t * @return\tstring\t\t\t\t\tHTML edit field\n\t */\n\tfunction editfieldkey($text, $htmlname, $preselected, $object, $perm, $typeofdata='string', $moreparam='', $fieldrequired=0, $notabletag=0)\n\t{\n\t\tglobal $conf,$langs;\n\n\t\t$ret='';\n\n\t\t// TODO change for compatibility\n\t\tif (! empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && ! preg_match('/^select;/',$typeofdata))\n\t\t{\n\t\t\tif (! empty($perm))\n\t\t\t{\n\t\t\t\t$tmp=explode(':',$typeofdata);\n\t\t\t\t$ret.= '<div class=\"editkey_'.$tmp[0].(! empty($tmp[1]) ? ' '.$tmp[1] : '').'\" id=\"'.$htmlname.'\">';\n\t\t\t\tif ($fieldrequired) $ret.='<span class=\"fieldrequired\">';\n\t\t\t\t$ret.= $langs->trans($text);\n\t\t\t\tif ($fieldrequired) $ret.='</span>';\n\t\t\t\t$ret.= '</div>'.\"\\n\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ($fieldrequired) $ret.='<span class=\"fieldrequired\">';\n\t\t\t\t$ret.= $langs->trans($text);\n\t\t\t\tif ($fieldrequired) $ret.='</span>';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (empty($notabletag) && GETPOST('action','aZ09') != 'edit'.$htmlname && $perm) $ret.='<table class=\"nobordernopadding\" width=\"100%\"><tr><td class=\"nowrap\">';\n\t\t\tif ($fieldrequired) $ret.='<span class=\"fieldrequired\">';\n\t\t\t$ret.=$langs->trans($text);\n\t\t\tif ($fieldrequired) $ret.='</span>';\n\t\t\tif (! empty($notabletag)) $ret.=' ';\n\t\t\tif (empty($notabletag) && GETPOST('action','aZ09') != 'edit'.$htmlname && $perm) $ret.='</td>';\n\t\t\tif (empty($notabletag) && GETPOST('action','aZ09') != 'edit'.$htmlname && $perm) $ret.='<td align=\"right\">';\n\t\t\tif ($htmlname && GETPOST('action','aZ09') != 'edit'.$htmlname && $perm) $ret.='<a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=edit'.$htmlname.'&amp;id='.$object->id.$moreparam.'\">'.img_edit($langs->trans('Edit'), ($notabletag ? 0 : 1)).'</a>';\n\t\t\tif (! empty($notabletag) && $notabletag == 1) $ret.=' : ';\n\t\t\tif (! empty($notabletag) && $notabletag == 3) $ret.=' ';\n\t\t\tif (empty($notabletag) && GETPOST('action','aZ09') != 'edit'.$htmlname && $perm) $ret.='</td>';\n\t\t\tif (empty($notabletag) && GETPOST('action','aZ09') != 'edit'.$htmlname && $perm) $ret.='</tr></table>';\n\t\t}\n\n\t\treturn $ret;\n\t}\n\n\t/**\n\t * Output value of a field for an editable field\n\t *\n\t * @param\tstring\t$text\t\t\tText of label (not used in this function)\n\t * @param\tstring\t$htmlname\t\tName of select field\n\t * @param\tstring\t$value\t\t\tValue to show/edit\n\t * @param\tobject\t$object\t\t\tObject\n\t * @param\tboolean\t$perm\t\t\tPermission to allow button to edit parameter\n\t * @param\tstring\t$typeofdata\t\tType of data ('string' by default, 'email', 'amount:99', 'numeric:99', 'text' or 'textarea:rows:cols%', 'datepicker' ('day' do not work, don't know why), 'dayhour' or 'datepickerhour', 'ckeditor:dolibarr_zzz:width:height:savemethod:toolbarstartexpanded:rows:cols', 'select:xxx'...)\n\t * @param\tstring\t$editvalue\t\tWhen in edit mode, use this value as $value instead of value (for example, you can provide here a formated price instead of value). Use '' to use same than $value\n\t * @param\tobject\t$extObject\t\tExternal object\n\t * @param\tmixed\t$custommsg\t\tString or Array of custom messages : eg array('success' => 'MyMessage', 'error' => 'MyMessage')\n\t * @param\tstring\t$moreparam\t\tMore param to add on a href URL\n\t * @param   int     $notabletag     Do no output table tags\n\t * @param\tstring\t$formatfunc\t\tCall a specific function to output field\n\t * @return  string\t\t\t\t\tHTML edit field\n\t */\n\tfunction editfieldval($text, $htmlname, $value, $object, $perm, $typeofdata='string', $editvalue='', $extObject=null, $custommsg=null, $moreparam='', $notabletag=0, $formatfunc='')\n\t{\n\t\tglobal $conf,$langs,$db;\n\n\t\t$ret='';\n\n\t\t// Check parameters\n\t\tif (empty($typeofdata)) return 'ErrorBadParameter';\n\n\t\t// When option to edit inline is activated\n\t\tif (! empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && ! preg_match('/^select;|datehourpicker/',$typeofdata)) // TODO add jquery timepicker\n\t\t{\n\t\t\t$ret.=$this->editInPlace($object, $value, $htmlname, $perm, $typeofdata, $editvalue, $extObject, $custommsg);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (GETPOST('action','aZ09') == 'edit'.$htmlname)\n\t\t\t{\n\t\t\t\t$ret.=\"\\n\";\n\t\t\t\t$ret.='<form method=\"post\" action=\"'.$_SERVER[\"PHP_SELF\"].($moreparam?'?'.$moreparam:'').'\">';\n\t\t\t\t$ret.='<input type=\"hidden\" name=\"action\" value=\"set'.$htmlname.'\">';\n\t\t\t\t$ret.='<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t\t$ret.='<input type=\"hidden\" name=\"id\" value=\"'.$object->id.'\">';\n\t\t\t\tif (empty($notabletag)) $ret.='<table class=\"nobordernopadding\" cellpadding=\"0\" cellspacing=\"0\">';\n\t\t\t\tif (empty($notabletag)) $ret.='<tr><td>';\n\t\t\t\tif (preg_match('/^(string|email)/',$typeofdata))\n\t\t\t\t{\n\t\t\t\t\t$tmp=explode(':',$typeofdata);\n\t\t\t\t\t$ret.='<input type=\"text\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" value=\"'.($editvalue?$editvalue:$value).'\"'.($tmp[1]?' size=\"'.$tmp[1].'\"':'').'>';\n\t\t\t\t}\n\t\t\t\telse if (preg_match('/^(numeric|amount)/',$typeofdata))\n\t\t\t\t{\n\t\t\t\t\t$tmp=explode(':',$typeofdata);\n\t\t\t\t\t$valuetoshow=price2num($editvalue?$editvalue:$value);\n\t\t\t\t\t$ret.='<input type=\"text\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" value=\"'.($valuetoshow!=''?price($valuetoshow):'').'\"'.($tmp[1]?' size=\"'.$tmp[1].'\"':'').'>';\n\t\t\t\t}\n\t\t\t\telse if (preg_match('/^text/',$typeofdata) || preg_match('/^note/',$typeofdata))\n\t\t\t\t{\n\t\t\t\t\t$tmp=explode(':',$typeofdata);\n\t\t\t\t\t$cols=$tmp[2];\n\t\t\t\t\t$morealt='';\n\t\t\t\t\tif (preg_match('/%/',$cols))\n\t\t\t\t\t{\n\t\t\t\t\t\t$morealt=' style=\"width: '.$cols.'\"';\n\t\t\t\t\t\t$cols='';\n\t\t\t\t\t}\n\t\t\t\t\t$ret.='<textarea id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" wrap=\"soft\" rows=\"'.($tmp[1]?$tmp[1]:'20').'\"'.($cols?' cols=\"'.$cols.'\"':'class=\"quatrevingtpercent\"').$morealt.'\">'.($editvalue?$editvalue:$value).'</textarea>';\n\t\t\t\t}\n\t\t\t\telse if ($typeofdata == 'day' || $typeofdata == 'datepicker')\n\t\t\t\t{\n\t\t\t\t\t$ret.=$this->select_date($value,$htmlname,0,0,1,'form'.$htmlname,1,0,1);\n\t\t\t\t}\n\t\t\t\telse if ($typeofdata == 'dayhour' || $typeofdata == 'datehourpicker')\n\t\t\t\t{\n\t\t\t\t\t$ret.=$this->select_date($value,$htmlname,1,1,1,'form'.$htmlname,1,0,1);\n\t\t\t\t}\n\t\t\t\telse if (preg_match('/^select;/',$typeofdata))\n\t\t\t\t{\n\t\t\t\t\t $arraydata=explode(',',preg_replace('/^select;/','',$typeofdata));\n\t\t\t\t\t foreach($arraydata as $val)\n\t\t\t\t\t {\n\t\t\t\t\t\t $tmp=explode(':',$val);\n\t\t\t\t\t\t $arraylist[$tmp[0]]=$tmp[1];\n\t\t\t\t\t }\n\t\t\t\t\t $ret.=$this->selectarray($htmlname,$arraylist,$value);\n\t\t\t\t}\n\t\t\t\telse if (preg_match('/^ckeditor/',$typeofdata))\n\t\t\t\t{\n\t\t\t\t\t$tmp=explode(':',$typeofdata);\t\t// Example: ckeditor:dolibarr_zzz:width:height:savemethod:toolbarstartexpanded:rows:cols\n\t\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\t\t\t\t\t$doleditor=new DolEditor($htmlname, ($editvalue?$editvalue:$value), ($tmp[2]?$tmp[2]:''), ($tmp[3]?$tmp[3]:'100'), ($tmp[1]?$tmp[1]:'dolibarr_notes'), 'In', ($tmp[5]?$tmp[5]:0), true, true, ($tmp[6]?$tmp[6]:'20'), ($tmp[7]?$tmp[7]:'100'));\n\t\t\t\t\t$ret.=$doleditor->Create(1);\n\t\t\t\t}\n\t\t\t\tif (empty($notabletag)) $ret.='</td>';\n\n\t\t\t\tif (empty($notabletag)) $ret.='<td align=\"left\">';\n\t\t\t\t//else $ret.='<div class=\"clearboth\"></div>';\n\t\t\t   \t$ret.='<input type=\"submit\" class=\"button'.(empty($notabletag)?'':' ').'\" name=\"modify\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t   \tif (preg_match('/ckeditor|textarea/',$typeofdata) && empty($notabletag)) $ret.='<br>'.\"\\n\";\n\t\t\t   \t$ret.='<input type=\"submit\" class=\"button'.(empty($notabletag)?'':' ').'\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\t   \tif (empty($notabletag)) $ret.='</td>';\n\n\t\t\t   \tif (empty($notabletag)) $ret.='</tr></table>'.\"\\n\";\n\t\t\t\t$ret.='</form>'.\"\\n\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (preg_match('/^(email)/',$typeofdata))              $ret.=dol_print_email($value,0,0,0,0,1);\n\t\t\t\telseif (preg_match('/^(amount|numeric)/',$typeofdata)) $ret.=($value != '' ? price($value,'',$langs,0,-1,-1,$conf->currency) : '');\n\t\t\t\telseif (preg_match('/^text/',$typeofdata) || preg_match('/^note/',$typeofdata))  $ret.=dol_htmlentitiesbr($value);\n\t\t\t\telseif ($typeofdata == 'day' || $typeofdata == 'datepicker') $ret.=dol_print_date($value,'day');\n\t\t\t\telseif ($typeofdata == 'dayhour' || $typeofdata == 'datehourpicker') $ret.=dol_print_date($value,'dayhour');\n\t\t\t\telse if (preg_match('/^select;/',$typeofdata))\n\t\t\t\t{\n\t\t\t\t\t$arraydata=explode(',',preg_replace('/^select;/','',$typeofdata));\n\t\t\t\t\tforeach($arraydata as $val)\n\t\t\t\t\t{\n\t\t\t\t\t\t$tmp=explode(':',$val);\n\t\t\t\t\t\t$arraylist[$tmp[0]]=$tmp[1];\n\t\t\t\t\t}\n\t\t\t\t\t$ret.=$arraylist[$value];\n\t\t\t\t}\n\t\t\t\telse if (preg_match('/^ckeditor/',$typeofdata))\n\t\t\t\t{\n\t\t\t\t\t$tmpcontent=dol_htmlentitiesbr($value);\n\t\t\t\t\tif (! empty($conf->global->MAIN_DISABLE_NOTES_TAB))\n\t\t\t\t\t{\n\t\t\t\t\t\t$firstline=preg_replace('/<br>.*/','',$tmpcontent);\n\t\t\t\t\t\t$firstline=preg_replace('/[\\n\\r].*/','',$firstline);\n\t\t\t\t\t\t$tmpcontent=$firstline.((strlen($firstline) != strlen($tmpcontent))?'...':'');\n\t\t\t\t\t}\n\t\t\t\t\t$ret.=$tmpcontent;\n\t\t\t\t}\n\t\t\t\telse $ret.=$value;\n\n\t\t\t\tif ($formatfunc && method_exists($object, $formatfunc))\n\t\t\t\t{\n\t\t\t\t\t$ret=$object->$formatfunc($ret);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $ret;\n\t}\n\n\t/**\n\t * Output edit in place form\n\t *\n\t * @param\tobject\t$object\t\t\tObject\n\t * @param\tstring\t$value\t\t\tValue to show/edit\n\t * @param\tstring\t$htmlname\t\tDIV ID (field name)\n\t * @param\tint\t\t$condition\t\tCondition to edit\n\t * @param\tstring\t$inputType\t\tType of input ('string', 'numeric', 'datepicker' ('day' do not work, don't know why), 'textarea:rows:cols', 'ckeditor:dolibarr_zzz:width:height:?:1:rows:cols', 'select:xxx')\n\t * @param\tstring\t$editvalue\t\tWhen in edit mode, use this value as $value instead of value\n\t * @param\tobject\t$extObject\t\tExternal object\n\t * @param\tmixed\t$custommsg\t\tString or Array of custom messages : eg array('success' => 'MyMessage', 'error' => 'MyMessage')\n\t * @return\tstring   \t\t      \tHTML edit in place\n\t */\n\tprivate function editInPlace($object, $value, $htmlname, $condition, $inputType='textarea', $editvalue=null, $extObject=null, $custommsg=null)\n\t{\n\t\tglobal $conf;\n\n\t\t$out='';\n\n\t\t// Check parameters\n\t\tif ($inputType == 'textarea') $value = dol_nl2br($value);\n\t\telse if (preg_match('/^numeric/',$inputType)) $value = price($value);\n\t\telse if ($inputType == 'day' || $inputType == 'datepicker') $value = dol_print_date($value, 'day');\n\n\t\tif ($condition)\n\t\t{\n\t\t\t$element\t\t= false;\n\t\t\t$table_element\t= false;\n\t\t\t$fk_element\t\t= false;\n\t\t\t$loadmethod\t\t= false;\n\t\t\t$savemethod\t\t= false;\n\t\t\t$ext_element\t= false;\n\t\t\t$button_only\t= false;\n\t\t\t$inputOption    = '';\n\n\t\t\tif (is_object($object))\n\t\t\t{\n\t\t\t\t$element = $object->element;\n\t\t\t\t$table_element = $object->table_element;\n\t\t\t\t$fk_element = $object->id;\n\t\t\t}\n\n\t\t\tif (is_object($extObject))\n\t\t\t{\n\t\t\t\t$ext_element = $extObject->element;\n\t\t\t}\n\n\t\t\tif (preg_match('/^(string|email|numeric)/',$inputType))\n\t\t\t{\n\t\t\t\t$tmp=explode(':',$inputType);\n\t\t\t\t$inputType=$tmp[0];\n\t\t\t\tif (! empty($tmp[1])) $inputOption=$tmp[1];\n\t\t\t\tif (! empty($tmp[2])) $savemethod=$tmp[2];\n\t\t\t\t$out.= '<input id=\"width_'.$htmlname.'\" value=\"'.$inputOption.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t}\n\t\t\telse if ((preg_match('/^day$/',$inputType)) || (preg_match('/^datepicker/',$inputType)) || (preg_match('/^datehourpicker/',$inputType)))\n\t\t\t{\n\t\t\t\t$tmp=explode(':',$inputType);\n\t\t\t\t$inputType=$tmp[0];\n\t\t\t\tif (! empty($tmp[1])) $inputOption=$tmp[1];\n\t\t\t\tif (! empty($tmp[2])) $savemethod=$tmp[2];\n\n\t\t\t\t$out.= '<input id=\"timestamp\" type=\"hidden\"/>'.\"\\n\"; // Use for timestamp format\n\t\t\t}\n\t\t\telse if (preg_match('/^(select|autocomplete)/',$inputType))\n\t\t\t{\n\t\t\t\t$tmp=explode(':',$inputType);\n\t\t\t\t$inputType=$tmp[0]; $loadmethod=$tmp[1];\n\t\t\t\tif (! empty($tmp[2])) $savemethod=$tmp[2];\n\t\t\t\tif (! empty($tmp[3])) $button_only=true;\n\t\t\t}\n\t\t\telse if (preg_match('/^textarea/',$inputType))\n\t\t\t{\n\t\t\t\t$tmp=explode(':',$inputType);\n\t\t\t\t$inputType=$tmp[0];\n\t\t\t\t$rows=(empty($tmp[1])?'8':$tmp[1]);\n\t\t\t\t$cols=(empty($tmp[2])?'80':$tmp[2]);\n\t\t\t}\n\t\t\telse if (preg_match('/^ckeditor/',$inputType))\n\t\t\t{\n\t\t\t\t$tmp=explode(':',$inputType);\n\t\t\t\t$inputType=$tmp[0]; $toolbar=$tmp[1];\n\t\t\t\tif (! empty($tmp[2])) $width=$tmp[2];\n\t\t\t\tif (! empty($tmp[3])) $heigth=$tmp[3];\n\t\t\t\tif (! empty($tmp[4])) $savemethod=$tmp[4];\n\n\t\t\t\tif (! empty($conf->fckeditor->enabled))\n\t\t\t\t{\n\t\t\t\t\t$out.= '<input id=\"ckeditor_toolbar\" value=\"'.$toolbar.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$inputType = 'textarea';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$out.= '<input id=\"element_'.$htmlname.'\" value=\"'.$element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t$out.= '<input id=\"table_element_'.$htmlname.'\" value=\"'.$table_element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t$out.= '<input id=\"fk_element_'.$htmlname.'\" value=\"'.$fk_element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t$out.= '<input id=\"loadmethod_'.$htmlname.'\" value=\"'.$loadmethod.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\tif (! empty($savemethod))\t$out.= '<input id=\"savemethod_'.$htmlname.'\" value=\"'.$savemethod.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\tif (! empty($ext_element))\t$out.= '<input id=\"ext_element_'.$htmlname.'\" value=\"'.$ext_element.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\tif (! empty($custommsg))\n\t\t\t{\n\t\t\t\tif (is_array($custommsg))\n\t\t\t\t{\n\t\t\t\t\tif (!empty($custommsg['success']))\n\t\t\t\t\t\t$out.= '<input id=\"successmsg_'.$htmlname.'\" value=\"'.$custommsg['success'].'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t\tif (!empty($custommsg['error']))\n\t\t\t\t\t\t$out.= '<input id=\"errormsg_'.$htmlname.'\" value=\"'.$custommsg['error'].'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t$out.= '<input id=\"successmsg_'.$htmlname.'\" value=\"'.$custommsg.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t}\n\t\t\tif ($inputType == 'textarea') {\n\t\t\t\t$out.= '<input id=\"textarea_'.$htmlname.'_rows\" value=\"'.$rows.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t\t$out.= '<input id=\"textarea_'.$htmlname.'_cols\" value=\"'.$cols.'\" type=\"hidden\"/>'.\"\\n\";\n\t\t\t}\n\t\t\t$out.= '<span id=\"viewval_'.$htmlname.'\" class=\"viewval_'.$inputType.($button_only ? ' inactive' : ' active').'\">'.$value.'</span>'.\"\\n\";\n\t\t\t$out.= '<span id=\"editval_'.$htmlname.'\" class=\"editval_'.$inputType.($button_only ? ' inactive' : ' active').' hideobject\">'.(! empty($editvalue) ? $editvalue : $value).'</span>'.\"\\n\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$out = $value;\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tShow a text and picto with tooltip on text or picto.\n\t *  Can be called by an instancied $form->textwithtooltip or by a static call Form::textwithtooltip\n\t *\n\t *\t@param\tstring\t\t$text\t\t\t\tText to show\n\t *\t@param\tstring\t\t$htmltext\t\t\tHTML content of tooltip. Must be HTML/UTF8 encoded.\n\t *\t@param\tint\t\t\t$tooltipon\t\t\t1=tooltip on text, 2=tooltip on image, 3=tooltip sur les 2\n\t *\t@param\tint\t\t\t$direction\t\t\t-1=image is before, 0=no image, 1=image is after\n\t *\t@param\tstring\t\t$img\t\t\t\tHtml code for image (use img_xxx() function to get it)\n\t *\t@param\tstring\t\t$extracss\t\t\tAdd a CSS style to td tags\n\t *\t@param\tint\t\t\t$notabs\t\t\t\t0=Include table and tr tags, 1=Do not include table and tr tags, 2=use div, 3=use span\n\t *\t@param\tstring\t\t$incbefore\t\t\tInclude code before the text\n\t *\t@param\tint\t\t\t$noencodehtmltext\tDo not encode into html entity the htmltext\n\t *  @param  string      $tooltiptrigger\t\t''=Tooltip on hover, 'abc'=Tooltip on click (abc is a unique key)\n\t *  @param\tint\t\t\t$forcenowrap\t\tForce no wrap between text and picto (works with notabs=2 only)\n\t *\t@return\tstring\t\t\t\t\t\t\tCode html du tooltip (texte+picto)\n\t *\t@see\tUse function textwithpicto if you can.\n\t *  TODO Move this as static as soon as everybody use textwithpicto or @Form::textwithtooltip\n\t */\n\tfunction textwithtooltip($text, $htmltext, $tooltipon = 1, $direction = 0, $img = '', $extracss = '', $notabs = 2, $incbefore = '', $noencodehtmltext = 0, $tooltiptrigger='', $forcenowrap=0)\n\t{\n\t\tglobal $conf;\n\n\t\tif ($incbefore) $text = $incbefore.$text;\n\t\tif (! $htmltext) return $text;\n\n\t\t$tag='td';\n\t\tif ($notabs == 2) $tag='div';\n\t\tif ($notabs == 3) $tag='span';\n\t\t// Sanitize tooltip\n\t\t$htmltext=str_replace(\"\\\\\",\"\\\\\\\\\",$htmltext);\n\t\t$htmltext=str_replace(\"\\r\",\"\",$htmltext);\n\t\t$htmltext=str_replace(\"\\n\",\"\",$htmltext);\n\n\t\t$extrastyle='';\n\t\tif ($direction < 0) { $extracss=($extracss?$extracss.' ':'').'inline-block'; $extrastyle='padding: 0px; padding-left: 3px !important;'; }\n\t\tif ($direction > 0) { $extracss=($extracss?$extracss.' ':'').'inline-block'; $extrastyle='padding: 0px; padding-right: 3px !important;'; }\n\n\t\t$classfortooltip='classfortooltip';\n\n\t\t$s='';$textfordialog='';\n\n\t\tif ($tooltiptrigger == '')\n\t\t{\n\t\t\t$htmltext=str_replace('\"',\"&quot;\",$htmltext);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$classfortooltip='classfortooltiponclick';\n\t\t\t$textfordialog.='<div style=\"display: none;\" id=\"idfortooltiponclick_'.$tooltiptrigger.'\" class=\"classfortooltiponclicktext\">'.$htmltext.'</div>';\n\t\t}\n\t\tif ($tooltipon == 2 || $tooltipon == 3)\n\t\t{\n\t\t\t$paramfortooltipimg=' class=\"'.$classfortooltip.' inline-block'.($extracss?' '.$extracss:'').'\" style=\"padding: 0px;'.($extrastyle?' '.$extrastyle:'').'\"';\n\t\t\tif ($tooltiptrigger == '') $paramfortooltipimg.=' title=\"'.($noencodehtmltext?$htmltext:dol_escape_htmltag($htmltext,1)).'\"'; // Attribut to put on img tag to store tooltip\n\t\t\telse $paramfortooltipimg.=' dolid=\"'.$tooltiptrigger.'\"';\n\t\t}\n\t\telse $paramfortooltipimg =($extracss?' class=\"'.$extracss.'\"':'').($extrastyle?' style=\"'.$extrastyle.'\"':''); // Attribut to put on td text tag\n\t\tif ($tooltipon == 1 || $tooltipon == 3)\n\t\t{\n\t\t\t$paramfortooltiptd=' class=\"'.($tooltipon == 3 ? 'cursorpointer ' : '').$classfortooltip.' inline-block'.($extracss?' '.$extracss:'').'\" style=\"padding: 0px;'.($extrastyle?' '.$extrastyle:'').'\" ';\n\t\t\tif ($tooltiptrigger == '') $paramfortooltiptd.=' title=\"'.($noencodehtmltext?$htmltext:dol_escape_htmltag($htmltext,1)).'\"'; // Attribut to put on td tag to store tooltip\n\t\t\telse $paramfortooltiptd.=' dolid=\"'.$tooltiptrigger.'\"';\n\t\t}\n\t\telse $paramfortooltiptd =($extracss?' class=\"'.$extracss.'\"':'').($extrastyle?' style=\"'.$extrastyle.'\"':''); // Attribut to put on td text tag\n\t\tif (empty($notabs)) $s.='<table class=\"nobordernopadding\" summary=\"\"><tr style=\"height: auto;\">';\n\t\telseif ($notabs == 2) $s.='<div class=\"inline-block'.($forcenowrap?' nowrap':'').'\">';\n\t\t// Define value if value is before\n\t\tif ($direction < 0) {\n\t\t\t$s.='<'.$tag.$paramfortooltipimg;\n\t\t\tif ($tag == 'td') {\n\t\t\t\t$s .= ' valign=\"top\" width=\"14\"';\n\t\t\t}\n\t\t\t$s.= '>'.$textfordialog.$img.'</'.$tag.'>';\n\t\t}\n\t\t// Use another method to help avoid having a space in value in order to use this value with jquery\n\t\t// Define label\n\t\tif ((string) $text != '') $s.='<'.$tag.$paramfortooltiptd.'>'.$text.'</'.$tag.'>';\n\t\t// Define value if value is after\n\t\tif ($direction > 0) {\n\t\t\t$s.='<'.$tag.$paramfortooltipimg;\n\t\t\tif ($tag == 'td') $s .= ' valign=\"middle\" width=\"14\"';\n\t\t\t$s.= '>'.$textfordialog.$img.'</'.$tag.'>';\n\t\t}\n\t\tif (empty($notabs)) $s.='</tr></table>';\n\t\telseif ($notabs == 2) $s.='</div>';\n\n\t\treturn $s;\n\t}\n\n\t/**\n\t *\tShow a text with a picto and a tooltip on picto\n\t *\n\t *\t@param\tstring\t$text\t\t\t\tText to show\n\t *\t@param  string\t$htmltext\t     \tContent of tooltip\n\t *\t@param\tint\t\t$direction\t\t\t1=Icon is after text, -1=Icon is before text, 0=no icon\n\t * \t@param\tstring\t$type\t\t\t\tType of picto ('info', 'help', 'warning', 'superadmin', 'mypicto@mymodule', ...) or image filepath\n\t *  @param  string\t$extracss           Add a CSS style to td, div or span tag\n\t *  @param  int\t\t$noencodehtmltext   Do not encode into html entity the htmltext\n\t *  @param\tint\t\t$notabs\t\t\t\t0=Include table and tr tags, 1=Do not include table and tr tags, 2=use div, 3=use span\n\t *  @param  string  $tooltiptrigger     ''=Tooltip on hover, 'abc'=Tooltip on click (abc is a unique key)\n\t *  @param\tint\t\t$forcenowrap\t\tForce no wrap between text and picto (works with notabs=2 only)\n\t * \t@return\tstring\t\t\t\t\t\tHTML code of text, picto, tooltip\n\t */\n\tfunction textwithpicto($text, $htmltext, $direction = 1, $type = 'help', $extracss = '', $noencodehtmltext = 0, $notabs = 2, $tooltiptrigger='', $forcenowrap=0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$alt = '';\n\t\tif ($tooltiptrigger) $alt=$langs->transnoentitiesnoconv(\"ClickToShowHelp\");\n\n\t\t//For backwards compatibility\n\t\tif ($type == '0') $type = 'info';\n\t\telseif ($type == '1') $type = 'help';\n\n\t\t// If info or help with no javascript, show only text\n\t\tif (empty($conf->use_javascript_ajax))\n\t\t{\n\t\t\tif ($type == 'info' || $type == 'help')\treturn $text;\n\t\t\telse\n\t\t\t{\n\t\t\t\t$alt = $htmltext;\n\t\t\t\t$htmltext = '';\n\t\t\t}\n\t\t}\n\n\t\t// If info or help with smartphone, show only text (tooltip hover can't works)\n\t\tif (! empty($conf->dol_no_mouse_hover) && empty($tooltiptrigger))\n\t\t{\n\t\t\tif ($type == 'info' || $type == 'help') return $text;\n\t\t}\n\t\t// If info or help with smartphone, show only text (tooltip on lick does not works with dialog on smaprtphone)\n\t\tif (! empty($conf->dol_no_mouse_hover) && ! empty($tooltiptrigger))\n\t\t{\n\t\t\tif ($type == 'info' || $type == 'help') return $text;\n\t\t}\n\n\t\tif ($type == 'info') $img = img_help(0, $alt);\n\t\telseif ($type == 'help') $img = img_help(($tooltiptrigger != '' ? 2 : 1), $alt);\n\t\telseif ($type == 'superadmin') $img = img_picto($alt, 'redstar');\n\t\telseif ($type == 'admin') $img = img_picto($alt, 'star');\n\t\telseif ($type == 'warning') $img = img_warning($alt);\n\t\telse $img = img_picto($alt, $type);\n\n\t\treturn $this->textwithtooltip($text, $htmltext, (($tooltiptrigger && ! $img)?3:2), $direction, $img, $extracss, $notabs, '', $noencodehtmltext, $tooltiptrigger, $forcenowrap);\n\t}\n\n\t/**\n\t * Generate select HTML to choose massaction\n\t *\n\t * @param\tstring\t$selected\t\tValue auto selected when at least one record is selected. Not a preselected value. Use '0' by default.\n\t * @param\tint\t\t$arrayofaction\tarray('code'=>'label', ...). The code is the key stored into the GETPOST('massaction') when submitting action.\n\t * @param   int     $alwaysvisible  1=select button always visible\n\t * @return\tstring\t\t\t\t\tSelect list\n\t */\n\tfunction selectMassAction($selected, $arrayofaction, $alwaysvisible=0)\n\t{\n\t\tglobal $conf,$langs,$hookmanager;\n\n\t\tif (count($arrayofaction) == 0) return;\n\n\t\t$disabled=0;\n\t\t$ret='<div class=\"centpercent center\">';\n\t\t$ret.='<select class=\"flat'.(empty($conf->use_javascript_ajax)?'':' hideobject').' massaction massactionselect\" name=\"massaction\"'.($disabled?' disabled=\"disabled\"':'').'>';\n\n\t\t// Complete list with data from external modules. THe module can use $_SERVER['PHP_SELF'] to know on which page we are, or use the $parameters['currentcontext'] completed by executeHooks.\n\t\t$parameters=array();\n\t\t$reshook=$hookmanager->executeHooks('addMoreMassActions',$parameters);    // Note that $action and $object may have been modified by hook\n\t\tif (empty($reshook))\n\t\t{\n\t\t\t$ret.='<option value=\"0\"'.($disabled?' disabled=\"disabled\"':'').'>-- '.$langs->trans(\"SelectAction\").' --</option>';\n\t\t\tforeach($arrayofaction as $code => $label)\n\t\t\t{\n\t\t\t\t$ret.='<option value=\"'.$code.'\"'.($disabled?' disabled=\"disabled\"':'').'>'.$label.'</option>';\n\t\t\t}\n\t\t}\n\t\t$ret.=$hookmanager->resPrint;\n\n\t\t$ret.='</select>';\n\t\t// Warning: if you set submit button to disabled, post using 'Enter' will no more work if there is no another input submit. So we add a hidden button\n\t\t$ret.='<input type=\"submit\" name=\"confirmmassactioninvisible\" style=\"display: none\" tabindex=\"-1\">';\t// Hidden button BEFORE so it is the one used when we submit with ENTER.\n\t\t$ret.='<input type=\"submit\" disabled name=\"confirmmassaction\" class=\"button'.(empty($conf->use_javascript_ajax)?'':' hideobject').' massaction massactionconfirmed\" value=\"'.dol_escape_htmltag($langs->trans(\"Confirm\")).'\">';\n\t\t$ret.='</div>';\n\n\t\tif (! empty($conf->use_javascript_ajax))\n\t\t{\n\t\t\t$ret.='<!-- JS CODE TO ENABLE mass action select -->\n    \t\t<script type=\"text/javascript\">\n        \t\tfunction initCheckForSelect(mode)\t/* mode is 0 during init of page or click all, 1 when we click on 1 checkbox */\n        \t\t{\n        \t\t\tatleastoneselected=0;\n    \t    \t\tjQuery(\".checkforselect\").each(function( index ) {\n    \t  \t\t\t\t/* console.log( index + \": \" + $( this ).text() ); */\n    \t  \t\t\t\tif ($(this).is(\\':checked\\')) atleastoneselected++;\n    \t  \t\t\t});\n\t\t\t\t\tconsole.log(\"initCheckForSelect mode=\"+mode+\" atleastoneselected=\"+atleastoneselected);\n    \t  \t\t\tif (atleastoneselected || '.$alwaysvisible.')\n    \t  \t\t\t{\n    \t  \t\t\t\tjQuery(\".massaction\").show();\n        \t\t\t    '.($selected ? 'if (atleastoneselected) { jQuery(\".massactionselect\").val(\"'.$selected.'\"); jQuery(\".massactionconfirmed\").prop(\\'disabled\\', false); }' : '').'\n        \t\t\t    '.($selected ? 'if (! atleastoneselected) { jQuery(\".massactionselect\").val(\"0\"); jQuery(\".massactionconfirmed\").prop(\\'disabled\\', true); } ' : '').'\n    \t  \t\t\t}\n    \t  \t\t\telse\n    \t  \t\t\t{\n    \t  \t\t\t\tjQuery(\".massaction\").hide();\n    \t            }\n        \t\t}\n\n        \tjQuery(document).ready(function () {\n        \t\tinitCheckForSelect(0);\n        \t\tjQuery(\".checkforselect\").click(function() {\n        \t\t\tinitCheckForSelect(1);\n    \t  \t\t});\n    \t  \t\tjQuery(\".massactionselect\").change(function() {\n        \t\t\tvar massaction = $( this ).val();\n        \t\t\tvar urlform = $( this ).closest(\"form\").attr(\"action\").replace(\"#show_files\",\"\");\n        \t\t\tif (massaction == \"builddoc\")\n                    {\n                        urlform = urlform + \"#show_files\";\n    \t            }\n        \t\t\t$( this ).closest(\"form\").attr(\"action\", urlform);\n                    console.log(\"we select a mass action \"+massaction+\" - \"+urlform);\n        \t        /* Warning: if you set submit button to disabled, post using Enter will no more work if there is no other button */\n        \t\t\tif ($(this).val() != \\'0\\')\n    \t  \t\t\t{\n    \t  \t\t\t\tjQuery(\".massactionconfirmed\").prop(\\'disabled\\', false);\n    \t  \t\t\t}\n    \t  \t\t\telse\n    \t  \t\t\t{\n    \t  \t\t\t\tjQuery(\".massactionconfirmed\").prop(\\'disabled\\', true);\n    \t  \t\t\t}\n    \t        });\n        \t});\n    \t\t</script>\n        \t';\n\t\t}\n\n\t\treturn $ret;\n\t}\n\n\t/**\n\t *  Return combo list of activated countries, into language of user\n\t *\n\t *  @param\tstring\t$selected       Id or Code or Label of preselected country\n\t *  @param  string\t$htmlname       Name of html select object\n\t *  @param  string\t$htmloption     Options html on select object\n\t *  @param\tinteger\t$maxlength\t\tMax length for labels (0=no limit)\n\t *  @param\tstring\t$morecss\t\tMore css class\n\t *  @param\tstring\t$usecodeaskey\t'code3'=Use code on 3 alpha as key, 'code2\"=Use code on 2 alpha as key\n\t *  @return string           \t\tHTML string with select\n\t */\n\tfunction select_country($selected='',$htmlname='country_id',$htmloption='',$maxlength=0,$morecss='minwidth300',$usecodeaskey='')\n\t{\n\t\tglobal $conf,$langs;\n\n\t\t$langs->load(\"dict\");\n\n\t\t$out='';\n\t\t$countryArray=array();\n\t\t$favorite=array();\n\t\t$label=array();\n\t\t$atleastonefavorite=0;\n\n\t\t$sql = \"SELECT rowid, code as code_iso, code_iso as code_iso3, label, favorite\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_country\";\n\t\t$sql.= \" WHERE active > 0\";\n\t\t//$sql.= \" ORDER BY code ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_country\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$out.= '<select id=\"select'.$htmlname.'\" class=\"flat maxwidth200onsmartphone selectcountry'.($morecss?' '.$morecss:'').'\" name=\"'.$htmlname.'\" '.$htmloption.'>';\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\t$foundselected=false;\n\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$countryArray[$i]['rowid'] \t\t= $obj->rowid;\n\t\t\t\t\t$countryArray[$i]['code_iso'] \t= $obj->code_iso;\n\t\t\t\t\t$countryArray[$i]['code_iso3'] \t= $obj->code_iso3;\n\t\t\t\t\t$countryArray[$i]['label']\t\t= ($obj->code_iso && $langs->transnoentitiesnoconv(\"Country\".$obj->code_iso)!=\"Country\".$obj->code_iso?$langs->transnoentitiesnoconv(\"Country\".$obj->code_iso):($obj->label!='-'?$obj->label:''));\n\t\t\t\t\t$countryArray[$i]['favorite']   = $obj->favorite;\n\t\t\t\t\t$favorite[$i]\t\t\t\t\t= $obj->favorite;\n\t\t\t\t\t$label[$i] = dol_string_unaccent($countryArray[$i]['label']);\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\n\t\t\t\tarray_multisort($favorite, SORT_DESC, $label, SORT_ASC, $countryArray);\n\n\t\t\t\tforeach ($countryArray as $row)\n\t\t\t\t{\n\t\t\t\t\tif ($row['favorite'] && $row['code_iso']) $atleastonefavorite++;\n\t\t\t\t\tif (empty($row['favorite']) && $atleastonefavorite)\n\t\t\t\t\t{\n\t\t\t\t\t\t$atleastonefavorite=0;\n\t\t\t\t\t\t$out.= '<option a value=\"\" disabled class=\"selectoptiondisabledwhite\">----------------------</option>';\n\t\t\t\t\t}\n\t\t\t\t\tif ($selected && $selected != '-1' && ($selected == $row['rowid'] || $selected == $row['code_iso'] || $selected == $row['code_iso3'] || $selected == $row['label']) )\n\t\t\t\t\t{\n\t\t\t\t\t\t$foundselected=true;\n\t\t\t\t\t\t$out.= '<option b value=\"'.($usecodeaskey?($usecodeaskey=='code2'?$row['code_iso']:$row['code_iso3']):$row['rowid']).'\" selected>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= '<option c value=\"'.($usecodeaskey?($usecodeaskey=='code2'?$row['code_iso']:$row['code_iso3']):$row['rowid']).'\">';\n\t\t\t\t\t}\n\t\t\t\t\tif ($row['label']) $out.= dol_trunc($row['label'],$maxlength,'middle');\n\t\t\t\t\telse $out.= '&nbsp;';\n\t\t\t\t\tif ($row['code_iso']) $out.= ' ('.$row['code_iso'] . ')';\n\t\t\t\t\t$out.= '</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out.= '</select>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\t// Make select dynamic\n\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t$out .= ajax_combobox('select'.$htmlname);\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *  Return select list of incoterms\n\t *\n\t *  @param\tstring\t$selected       \t\tId or Code of preselected incoterm\n\t *  @param\tstring\t$location_incoterms     Value of input location\n\t *  @param\tstring\t$page       \t\t\tDefined the form action\n\t *  @param  string\t$htmlname       \t\tName of html select object\n\t *  @param  string\t$htmloption     \t\tOptions html on select object\n\t * \t@param\tint\t\t$forcecombo\t\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t *  @param\tarray\t$events\t\t\t\t\tEvent options to run on change. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @return string           \t\t\t\tHTML string with select and input\n\t */\n\tfunction select_incoterms($selected='', $location_incoterms='', $page='', $htmlname='incoterm_id', $htmloption='', $forcecombo=1, $events=array())\n\t{\n\t\tglobal $conf,$langs;\n\n\t\t$langs->load(\"dict\");\n\n\t\t$out='';\n\t\t$incotermArray=array();\n\n\t\t$sql = \"SELECT rowid, code\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_incoterms\";\n\t\t$sql.= \" WHERE active > 0\";\n\t\t$sql.= \" ORDER BY code ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_incoterm\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\tif ($conf->use_javascript_ajax && ! $forcecombo)\n\t\t\t{\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events);\n\t\t\t}\n\n\t\t\tif (!empty($page))\n\t\t\t{\n\t\t\t\t$out .= '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\t\t$out .= '<input type=\"hidden\" name=\"action\" value=\"set_incoterms\">';\n\t\t\t\t$out .= '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t}\n\n\t\t\t$out.= '<select id=\"'.$htmlname.'\" class=\"flat selectincoterm minwidth100imp noenlargeonsmartphone\" name=\"'.$htmlname.'\" '.$htmloption.'>';\n\t\t\t$out.= '<option value=\"0\">&nbsp;</option>';\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\t$foundselected=false;\n\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$incotermArray[$i]['rowid'] = $obj->rowid;\n\t\t\t\t\t$incotermArray[$i]['code'] = $obj->code;\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\n\t\t\t\tforeach ($incotermArray as $row)\n\t\t\t\t{\n\t\t\t\t\tif ($selected && ($selected == $row['rowid'] || $selected == $row['code']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= '<option value=\"'.$row['rowid'].'\" selected>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= '<option value=\"'.$row['rowid'].'\">';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($row['code']) $out.= $row['code'];\n\n\t\t\t\t\t$out.= '</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out.= '</select>';\n\n\t\t\t$out .= '<input id=\"location_incoterms\" class=\"maxwidth100onsmartphone\" name=\"location_incoterms\" value=\"'.$location_incoterms.'\">';\n\n\t\t\tif (!empty($page))\n\t\t\t{\n\t\t\t\t$out .= '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\"></form>';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tReturn list of types of lines (product or service)\n\t * \tExample: 0=product, 1=service, 9=other (for external module)\n\t *\n\t *\t@param  string\t$selected       Preselected type\n\t *\t@param  string\t$htmlname       Name of field in html form\n\t * \t@param\tint\t\t$showempty\t\tAdd an empty field\n\t * \t@param\tint\t\t$hidetext\t\tDo not show label 'Type' before combo box (used only if there is at least 2 choices to select)\n\t * \t@param\tinteger\t$forceall\t\t1=Force to show products and services in combo list, whatever are activated modules, 0=No force, -1=Force none (and set hidden field to 'service')\n\t *  @return\tvoid\n\t */\n\tfunction select_type_of_lines($selected='',$htmlname='type',$showempty=0,$hidetext=0,$forceall=0)\n\t{\n\t\tglobal $db,$langs,$user,$conf;\n\n\t\t// If product & services are enabled or both disabled.\n\t\tif ($forceall > 0 || (empty($forceall) && ! empty($conf->product->enabled) && ! empty($conf->service->enabled))\n\t\t|| (empty($forceall) && empty($conf->product->enabled) && empty($conf->service->enabled)) )\n\t\t{\n\t\t\tif (empty($hidetext)) print $langs->trans(\"Type\").': ';\n\t\t\tprint '<select class=\"flat\" id=\"select_'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t\tif ($showempty)\n\t\t\t{\n\t\t\t\tprint '<option value=\"-1\"';\n\t\t\t\tif ($selected == -1) print ' selected';\n\t\t\t\tprint '>&nbsp;</option>';\n\t\t\t}\n\n\t\t\tprint '<option value=\"0\"';\n\t\t\tif (0 == $selected) print ' selected';\n\t\t\tprint '>'.$langs->trans(\"Product\");\n\n\t\t\tprint '<option value=\"1\"';\n\t\t\tif (1 == $selected) print ' selected';\n\t\t\tprint '>'.$langs->trans(\"Service\");\n\n\t\t\tprint '</select>';\n\t\t\t//if ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t\t}\n\t\tif (empty($forceall) && empty($conf->product->enabled) && ! empty($conf->service->enabled))\n\t\t{\n\t\t\tprint $langs->trans(\"Service\");\n\t\t\tprint '<input type=\"hidden\" name=\"'.$htmlname.'\" value=\"1\">';\n\t\t}\n\t\tif (empty($forceall) && ! empty($conf->product->enabled) && empty($conf->service->enabled))\n\t\t{\n\t\t\tprint $langs->trans(\"Product\");\n\t\t\tprint '<input type=\"hidden\" name=\"'.$htmlname.'\" value=\"0\">';\n\t\t}\n\t\tif ($forceall < 0)\t// This should happened only for contracts when both predefined product and service are disabled.\n\t\t{\n\t\t\tprint '<input type=\"hidden\" name=\"'.$htmlname.'\" value=\"1\">';\t// By default we set on service for contract. If CONTRACT_SUPPORT_PRODUCTS is set, forceall should be 1 not -1\n\t\t}\n\t}\n\n\t/**\n\t *\tLoad into cache cache_types_fees, array of types of fees\n\t *\n\t *\t@return     int             Nb of lines loaded, <0 if KO\n\t */\n\tfunction load_cache_types_fees()\n\t{\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_types_fees);\n\t\tif ($num > 0) return 0;    // Cache already loaded\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$langs->load(\"trips\");\n\n\t\t$sql = \"SELECT c.code, c.label\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_type_fees as c\";\n\t\t$sql.= \" WHERE active > 0\";\n\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label=($obj->code != $langs->trans($obj->code) ? $langs->trans($obj->code) : $langs->trans($obj->label));\n\t\t\t\t$this->cache_types_fees[$obj->code] = $label;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tasort($this->cache_types_fees);\n\n\t\t\treturn $num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn list of types of notes\n\t *\n\t *\t@param\tstring\t\t$selected\t\tPreselected type\n\t *\t@param  string\t\t$htmlname\t\tName of field in form\n\t * \t@param\tint\t\t\t$showempty\t\tAdd an empty field\n\t * \t@return\tvoid\n\t */\n\tfunction select_type_fees($selected='',$htmlname='type',$showempty=0)\n\t{\n\t\tglobal $user, $langs;\n\n\t\tdol_syslog(__METHOD__.\" selected=\".$selected.\", htmlname=\".$htmlname, LOG_DEBUG);\n\n\t\t$this->load_cache_types_fees();\n\n\t\tprint '<select class=\"flat\" name=\"'.$htmlname.'\">';\n\t\tif ($showempty)\n\t\t{\n\t\t\tprint '<option value=\"-1\"';\n\t\t\tif ($selected == -1) print ' selected';\n\t\t\tprint '>&nbsp;</option>';\n\t\t}\n\n\t\tforeach($this->cache_types_fees as $key => $value)\n\t\t{\n\t\t\tprint '<option value=\"'.$key.'\"';\n\t\t\tif ($key == $selected) print ' selected';\n\t\t\tprint '>';\n\t\t\tprint $value;\n\t\t\tprint '</option>';\n\t\t}\n\n\t\tprint '</select>';\n\t\tif ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t}\n\n\n\t/**\n\t *  Return HTML code to select a company.\n\t *\n\t *  @param\t\tint\t\t\t$selected\t\t\t\tPreselected products\n\t *  @param\t\tstring\t\t$htmlname\t\t\t\tName of HTML select field (must be unique in page)\n\t *  @param\t\tint\t\t\t$filter\t\t\t\t\tFilter on thirdparty\n\t *  @param\t\tint\t\t\t$limit\t\t\t\t\tLimit on number of returned lines\n\t *  @param\t\tarray\t\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t * \t@param\t\tint\t\t\t$forcecombo\t\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t *  @return\t\tstring\t\t\t\t\t\t\t\tReturn select box for thirdparty.\n\t *  @deprecated\t3.8 Use select_company instead. For exemple $form->select_thirdparty(GETPOST('socid'),'socid','',0) => $form->select_company(GETPOST('socid'),'socid','',1,0,0,array(),0)\n\t */\n\tfunction select_thirdparty($selected='', $htmlname='socid', $filter='', $limit=20, $ajaxoptions=array(), $forcecombo=0)\n\t{\n   \t\treturn $this->select_thirdparty_list($selected,$htmlname,$filter,1,0,$forcecombo,array(),'',0, $limit);\n\t}\n\n\t/**\n\t *  Output html form to select a third party\n\t *\n\t *\t@param\tstring\t$selected       \t\tPreselected type\n\t *\t@param  string\t$htmlname       \t\tName of field in form\n\t *  @param  string\t$filter         \t\toptional filters criteras (example: 's.rowid <> x', 's.client IN (1,3)')\n\t *\t@param\tstring\t$showempty\t\t\t\tAdd an empty field (Can be '1' or text key to use on empty line like 'SelectThirdParty')\n\t * \t@param\tint\t\t$showtype\t\t\t\tShow third party type in combolist (customer, prospect or supplier)\n\t * \t@param\tint\t\t$forcecombo\t\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t *  @param\tarray\t$events\t\t\t\t\tAjax event options to run on change. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *\t@param\tint\t\t$limit\t\t\t\t\tMaximum number of elements\n\t *  @param\tstring\t$morecss\t\t\t\tAdd more css styles to the SELECT component\n\t *\t@param  string\t$moreparam      \t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *\t@param\tstring\t$selected_input_value\tValue of preselected input text (for use with ajax)\n\t *  @param\tint\t\t$hidelabel\t\t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n\t *  @param\tarray\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t * \t@return\tstring\t\t\t\t\t\t\tHTML string with select box for thirdparty.\n\t */\n\tfunction select_company($selected='', $htmlname='socid', $filter='', $showempty='', $showtype=0, $forcecombo=0, $events=array(), $limit=0, $morecss='minwidth100', $moreparam='', $selected_input_value='', $hidelabel=1, $ajaxoptions=array())\n\t{\n\t\tglobal $conf,$user,$langs;\n\n\t\t$out='';\n\n\t\tif (! empty($conf->use_javascript_ajax) && ! empty($conf->global->COMPANY_USE_SEARCH_TO_SELECT) && ! $forcecombo)\n\t\t{\n\t\t\t// No immediate load of all database\n\t\t\t$placeholder='';\n\t\t\tif ($selected && empty($selected_input_value))\n\t\t\t{\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\n\t\t\t\t$societetmp = new Societe($this->db);\n\t\t\t\t$societetmp->fetch($selected);\n\t\t\t\t$selected_input_value=$societetmp->name;\n\t\t\t\tunset($societetmp);\n\t\t\t}\n\t\t\t// mode 1\n\t\t\t$urloption='htmlname='.$htmlname.'&outjson=1&filter='.$filter.($showtype?'&showtype='.$showtype:'');\n\t\t\t$out.=  ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/societe/ajax/company.php', $urloption, $conf->global->COMPANY_USE_SEARCH_TO_SELECT, 0, $ajaxoptions);\n\t\t\t$out.='<style type=\"text/css\">.ui-autocomplete { z-index: 250; }</style>';\n\t\t\tif (empty($hidelabel)) print $langs->trans(\"RefOrLabel\").' : ';\n\t\t\telse if ($hidelabel > 1) {\n\t\t\t\t$placeholder=' placeholder=\"'.$langs->trans(\"RefOrLabel\").'\"';\n\t\t\t\tif ($hidelabel == 2) {\n\t\t\t\t\t$out.=  img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out.= '<input type=\"text\" class=\"'.$morecss.'\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.$placeholder.' '.(!empty($conf->global->THIRDPARTY_SEARCH_AUTOFOCUS) ? 'autofocus' : '').' />';\n\t\t\tif ($hidelabel == 3) {\n\t\t\t\t$out.=  img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Immediate load of all database\n\t\t\t$out.=$this->select_thirdparty_list($selected, $htmlname, $filter, $showempty, $showtype, $forcecombo, $events, '', 0, $limit, $morecss, $moreparam);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *  Output html form to select a third party.\n\t *  Note, you must use the select_company to get the component to select a third party. This function must only be called by select_company.\n\t *\n\t *\t@param\tstring\t$selected       Preselected type\n\t *\t@param  string\t$htmlname       Name of field in form\n\t *  @param  string\t$filter         Optional filters criteras (example: 's.rowid <> x', 's.client in (1,3)')\n\t *\t@param\tstring\t$showempty\t\tAdd an empty field (Can be '1' or text to use on empty line like 'SelectThirdParty')\n\t * \t@param\tint\t\t$showtype\t\tShow third party type in combolist (customer, prospect or supplier)\n\t * \t@param\tint\t\t$forcecombo\t\tForce to use standard HTML select component without beautification\n\t *  @param\tarray\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @param\tstring\t$filterkey\t\tFilter on key value\n\t *  @param\tint\t\t$outputmode\t\t0=HTML select string, 1=Array\n\t *  @param\tint\t\t$limit\t\t\tLimit number of answers\n\t *  @param\tstring\t$morecss\t\tAdd more css styles to the SELECT component\n\t *\t@param  string\t$moreparam      Add more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t * \t@return\tstring\t\t\t\t\tHTML string with\n\t */\n\tfunction select_thirdparty_list($selected='',$htmlname='socid',$filter='',$showempty='', $showtype=0, $forcecombo=0, $events=array(), $filterkey='', $outputmode=0, $limit=0, $morecss='minwidth100', $moreparam='')\n\t{\n\t\tglobal $conf,$user,$langs;\n\n\t\t$out='';\n\t\t$num=0;\n\t\t$outarray=array();\n\n\t\t// Clean $filter that may contains sql conditions so sql code\n\t\tif (function_exists('test_sql_and_script_inject')) $filter = test_sql_and_script_inject($filter, 3);\n\n\t\t// On recherche les societes\n\t\t$sql = \"SELECT s.rowid, s.nom as name, s.name_alias, s.client, s.fournisseur, s.code_client, s.code_fournisseur\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX .\"societe as s\";\n\t\tif (!$user->rights->societe->client->voir && !$user->societe_id) $sql .= \", \".MAIN_DB_PREFIX.\"societe_commerciaux as sc\";\n\t\t$sql.= \" WHERE s.entity IN (\".getEntity('societe').\")\";\n\t\tif (! empty($user->societe_id)) $sql.= \" AND s.rowid = \".$user->societe_id;\n\t\tif ($filter) $sql.= \" AND (\".$filter.\")\";\n\t\tif (!$user->rights->societe->client->voir && !$user->societe_id) $sql.= \" AND s.rowid = sc.fk_soc AND sc.fk_user = \" .$user->id;\n\t\tif (! empty($conf->global->COMPANY_HIDE_INACTIVE_IN_COMBOBOX)) $sql.= \" AND s.status <> 0\";\n\t\t// Add criteria\n\t\tif ($filterkey && $filterkey != '')\n\t\t{\n\t\t\t$sql.=\" AND (\";\n\t\t\t$prefix=empty($conf->global->COMPANY_DONOTSEARCH_ANYWHERE)?'%':'';\t// Can use index if COMPANY_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i=0;\n\t\t\tif (count($scrit) > 1) $sql.=\"(\";\n\t\t\tforeach ($scrit as $crit) {\n\t\t\t\tif ($i > 0) $sql.=\" AND \";\n\t\t\t\t$sql.=\"(s.nom LIKE '\".$this->db->escape($prefix.$crit).\"%')\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) $sql.=\")\";\n\t\t\tif (! empty($conf->barcode->enabled))\n\t\t\t{\n\t\t\t\t$sql .= \" OR s.barcode LIKE '\".$this->db->escape($filterkey).\"%'\";\n\t\t\t}\n\t\t\t$sql.=\")\";\n\t\t}\n\t\t$sql.=$this->db->order(\"nom\",\"ASC\");\n\t\t$sql.=$this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\tdol_syslog(get_class($this).\"::select_thirdparty_list\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t   \tif (! $forcecombo)\n\t\t\t{\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events, $conf->global->COMPANY_USE_SEARCH_TO_SELECT);\n\t\t\t}\n\n\t\t\t// Construct $out and $outarray\n\t\t\t$out.= '<select id=\"'.$htmlname.'\" class=\"flat'.($morecss?' '.$morecss:'').'\"'.($moreparam?' '.$moreparam:'').' name=\"'.$htmlname.'\">'.\"\\n\";\n\n\t\t\t$textifempty='';\n\t\t\t// Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'.\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (! empty($conf->global->COMPANY_USE_SEARCH_TO_SELECT))\n\t\t\t{\n\t\t\t\tif ($showempty && ! is_numeric($showempty)) $textifempty=$langs->trans($showempty);\n\t\t\t\telse $textifempty.=$langs->trans(\"All\");\n\t\t\t}\n\t\t\tif ($showempty) $out.= '<option value=\"-1\">'.$textifempty.'</option>'.\"\\n\";\n\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$label='';\n\t\t\t\t\tif ($conf->global->SOCIETE_ADD_REF_IN_LIST) {\n\t\t\t\t\t\tif (($obj->client) && (!empty($obj->code_client))) {\n\t\t\t\t\t\t\t$label = $obj->code_client. ' - ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (($obj->fournisseur) && (!empty($obj->code_fournisseur))) {\n\t\t\t\t\t\t\t$label .= $obj->code_fournisseur. ' - ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$label.=' '.$obj->name;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$label=$obj->name;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!empty($obj->name_alias)) {\n\t\t\t\t\t\t$label.=' ('.$obj->name_alias.')';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($showtype)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($obj->client || $obj->fournisseur) $label.=' (';\n\t\t\t\t\t\tif ($obj->client == 1 || $obj->client == 3) $label.=$langs->trans(\"Customer\");\n\t\t\t\t\t\tif ($obj->client == 2 || $obj->client == 3) $label.=($obj->client==3?', ':'').$langs->trans(\"Prospect\");\n\t\t\t\t\t\tif ($obj->fournisseur) $label.=($obj->client?', ':'').$langs->trans(\"Supplier\");\n\t\t\t\t\t\tif ($obj->client || $obj->fournisseur) $label.=')';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (empty($outputmode))\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($selected > 0 && $selected == $obj->rowid)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\" selected>'.$label.'</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\">'.$label.'</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tarray_push($outarray, array('key'=>$obj->rowid, 'value'=>$label, 'label'=>$label));\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\t\t\t\t\tif (($i % 10) == 0) $out.=\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out.= '</select>'.\"\\n\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\t$this->result=array('nbofthirdparties'=>$num);\n\n\t\tif ($outputmode) return $outarray;\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *    \tReturn HTML combo list of absolute discounts\n\t *\n\t *    \t@param\tstring\t$selected       Id remise fixe pre-selectionnee\n\t *    \t@param  string\t$htmlname       Nom champ formulaire\n\t *    \t@param  string\t$filter         Criteres optionnels de filtre\n\t * \t\t@param\tint\t\t$socid\t\t\tId of thirdparty\n\t * \t\t@param\tint\t\t$maxvalue\t\tMax value for lines that can be selected\n\t * \t\t@return\tint\t\t\t\t\t\tReturn number of qualifed lines in list\n\t */\n\tfunction select_remises($selected, $htmlname, $filter, $socid, $maxvalue=0)\n\t{\n\t\tglobal $langs,$conf;\n\n\t\t// On recherche les remises\n\t\t$sql = \"SELECT re.rowid, re.amount_ht, re.amount_tva, re.amount_ttc,\";\n\t\t$sql.= \" re.description, re.fk_facture_source\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX .\"societe_remise_except as re\";\n\t\t$sql.= \" WHERE re.fk_soc = \".(int) $socid;\n\t\t$sql.= \" AND re.entity = \" . $conf->entity;\n\t\tif ($filter) $sql.= \" AND \".$filter;\n\t\t$sql.= \" ORDER BY re.description ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_remises\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\tprint '<select class=\"flat maxwidthonsmartphone\" name=\"'.$htmlname.'\">';\n\t\t\t$num = $this->db->num_rows($resql);\n\n\t\t\t$qualifiedlines=$num;\n\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\tprint '<option value=\"0\">&nbsp;</option>';\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$desc=dol_trunc($obj->description,40);\n\t\t\t\t\tif (preg_match('/\\(CREDIT_NOTE\\)/', $desc)) $desc=preg_replace('/\\(CREDIT_NOTE\\)/', $langs->trans(\"CreditNote\"), $desc);\n\t\t\t\t\tif (preg_match('/\\(DEPOSIT\\)/', $desc)) $desc=preg_replace('/\\(DEPOSIT\\)/', $langs->trans(\"Deposit\"), $desc);\n\t\t\t\t\tif (preg_match('/\\(EXCESS RECEIVED\\)/', $desc)) $desc=preg_replace('/\\(EXCESS RECEIVED\\)/', $langs->trans(\"ExcessReceived\"), $desc);\n\n\t\t\t\t\t$selectstring='';\n\t\t\t\t\tif ($selected > 0 && $selected == $obj->rowid) $selectstring=' selected';\n\n\t\t\t\t\t$disabled='';\n\t\t\t\t\tif ($maxvalue > 0 && $obj->amount_ttc > $maxvalue)\n\t\t\t\t\t{\n\t\t\t\t\t\t$qualifiedlines--;\n\t\t\t\t\t\t$disabled=' disabled';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!empty($conf->global->MAIN_SHOW_FACNUMBER_IN_DISCOUNT_LIST) && !empty($obj->fk_facture_source))\n\t\t\t\t\t{\n\t\t\t\t\t\t$tmpfac = new Facture($this->db);\n\t\t\t\t\t\tif ($tmpfac->fetch($obj->fk_facture_source) > 0) $desc=$desc.' - '.$tmpfac->ref;\n\t\t\t\t\t}\n\n\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\"'.$selectstring.$disabled.'>'.$desc.' ('.price($obj->amount_ht).' '.$langs->trans(\"HT\").' - '.price($obj->amount_ttc).' '.$langs->trans(\"TTC\").')</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '</select>';\n\t\t\treturn $qualifiedlines;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn list of all contacts (for a third party or all)\n\t *\n\t *\t@param\tint\t\t$socid      \tId ot third party or 0 for all\n\t *\t@param  string\t$selected   \tId contact pre-selectionne\n\t *\t@param  string\t$htmlname  \t    Name of HTML field ('none' for a not editable field)\n\t *\t@param  int\t\t$showempty      0=no empty value, 1=add an empty value\n\t *\t@param  string\t$exclude        List of contacts id to exclude\n\t *\t@param\tstring\t$limitto\t\tDisable answers that are not id in this array list\n\t *\t@param\tinteger\t$showfunction   Add function into label\n\t *\t@param\tstring\t$moreclass\t\tAdd more class to class style\n\t *\t@param\tinteger\t$showsoc\t    Add company into label\n\t * \t@param\tint\t\t$forcecombo\t\tForce to use combo box\n\t *  @param\tarray\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @param\tbool\t$options_only\tReturn options only (for ajax treatment)\n\t *  @param\tstring\t$moreparam\t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *  @param\tstring\t$htmlid\t\t\tHtml id to use instead of htmlname\n\t *\t@return\tint\t\t\t\t\t\t<0 if KO, Nb of contact in list if OK\n\t *  @deprected\t\t\t\t\t\tYou can use selectcontacts directly (warning order of param was changed)\n\t */\n\tfunction select_contacts($socid,$selected='',$htmlname='contactid',$showempty=0,$exclude='',$limitto='',$showfunction=0, $moreclass='', $showsoc=0, $forcecombo=0, $events=array(), $options_only=false, $moreparam='', $htmlid='')\n\t{\n\t\tprint $this->selectcontacts($socid,$selected,$htmlname,$showempty,$exclude,$limitto,$showfunction, $moreclass, $options_only, $showsoc, $forcecombo, $events, $moreparam, $htmlid);\n\t\treturn $this->num;\n\t}\n\n\t/**\n\t *\tReturn HTML code of the SELECT of list of all contacts (for a third party or all).\n\t *  This also set the number of contacts found into $this->num\n\t *\n\t *\t@param\tint\t\t\t$socid      \tId ot third party or 0 for all\n\t *\t@param  array|int\t$selected   \tArray of ID of pre-selected contact id\n\t *\t@param  string\t\t$htmlname  \t    Name of HTML field ('none' for a not editable field)\n\t *\t@param  int\t\t\t$showempty     \t0=no empty value, 1=add an empty value, 2=add line 'Internal' (used by user edit)\n\t *\t@param  string\t\t$exclude        List of contacts id to exclude\n\t *\t@param\tstring\t\t$limitto\t\tDisable answers that are not id in this array list\n\t *\t@param\tinteger\t\t$showfunction   Add function into label\n\t *\t@param\tstring\t\t$moreclass\t\tAdd more class to class style\n\t *\t@param\tbool\t\t$options_only\tReturn options only (for ajax treatment)\n\t *\t@param\tinteger\t\t$showsoc\t    Add company into label\n\t * \t@param\tint\t\t\t$forcecombo\t\tForce to use combo box\n\t *  @param\tarray\t\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @param\tstring\t\t$moreparam\t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *  @param\tstring\t\t$htmlid\t\t\tHtml id to use instead of htmlname\n\t *\t@return\t int\t\t\t\t\t\t<0 if KO, Nb of contact in list if OK\n\t */\n\tfunction selectcontacts($socid, $selected='', $htmlname='contactid', $showempty=0, $exclude='', $limitto='', $showfunction=0, $moreclass='', $options_only=false, $showsoc=0, $forcecombo=0, $events=array(), $moreparam='', $htmlid='')\n\t{\n\t\tglobal $conf,$langs;\n\n\t\t$langs->load('companies');\n\n\t\tif (empty($htmlid)) $htmlid = $htmlname;\n        $out='';\n\n\t\t// On recherche les societes\n\t\t$sql = \"SELECT sp.rowid, sp.lastname, sp.statut, sp.firstname, sp.poste\";\n\t\tif ($showsoc > 0) $sql.= \" , s.nom as company\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX .\"socpeople as sp\";\n\t\tif ($showsoc > 0) $sql.= \" LEFT OUTER JOIN  \".MAIN_DB_PREFIX .\"societe as s ON s.rowid=sp.fk_soc\";\n\t\t$sql.= \" WHERE sp.entity IN (\".getEntity('societe').\")\";\n\t\tif ($socid > 0) $sql.= \" AND sp.fk_soc=\".$socid;\n\t\tif (! empty($conf->global->CONTACT_HIDE_INACTIVE_IN_COMBOBOX)) $sql.= \" AND sp.statut <> 0\";\n\t\t$sql.= \" ORDER BY sp.lastname ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_contacts\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num=$this->db->num_rows($resql);\n\n\t\t\tif ($conf->use_javascript_ajax && ! $forcecombo && ! $options_only)\n\t\t\t{\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlid, $events, $conf->global->CONTACT_USE_SEARCH_TO_SELECT);\n\t\t\t}\n\n\t\t\tif ($htmlname != 'none' || $options_only) $out.= '<select class=\"flat'.($moreclass?' '.$moreclass:'').'\" id=\"'.$htmlid.'\" name=\"'.$htmlname.'\" '.(!empty($moreparam) ? $moreparam : '').'>';\n\t\t\tif ($showempty == 1) $out.= '<option value=\"0\"'.($selected=='0'?' selected':'').'>&nbsp;</option>';\n\t\t\tif ($showempty == 2) $out.= '<option value=\"0\"'.($selected=='0'?' selected':'').'>'.$langs->trans(\"Internal\").'</option>';\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/contact/class/contact.class.php';\n\t\t\t\t$contactstatic=new Contact($this->db);\n\n\t\t\t\tif (!is_array($selected)) $selected = array($selected);\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t\t$contactstatic->id=$obj->rowid;\n\t\t\t\t\t$contactstatic->lastname=$obj->lastname;\n\t\t\t\t\t$contactstatic->firstname=$obj->firstname;\n\t\t\t\t\tif ($obj->statut == 1){\n\t\t\t\t\tif ($htmlname != 'none')\n\t\t\t\t\t{\n\t\t\t\t\t\t$disabled=0;\n\t\t\t\t\t\tif (is_array($exclude) && count($exclude) && in_array($obj->rowid,$exclude)) $disabled=1;\n\t\t\t\t\t\tif (is_array($limitto) && count($limitto) && ! in_array($obj->rowid,$limitto)) $disabled=1;\n\t\t\t\t\t\tif (!empty($selected) && in_array($obj->rowid, $selected))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\t\t\tif ($disabled) $out.= ' disabled';\n\t\t\t\t\t\t\t$out.= ' selected>';\n\t\t\t\t\t\t\t$out.= $contactstatic->getFullName($langs);\n\t\t\t\t\t\t\tif ($showfunction && $obj->poste) $out.= ' ('.$obj->poste.')';\n\t\t\t\t\t\t\tif (($showsoc > 0) && $obj->company) $out.= ' - ('.$obj->company.')';\n\t\t\t\t\t\t\t$out.= '</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\t\t\tif ($disabled) $out.= ' disabled';\n\t\t\t\t\t\t\t$out.= '>';\n\t\t\t\t\t\t\t$out.= $contactstatic->getFullName($langs);\n\t\t\t\t\t\t\tif ($showfunction && $obj->poste) $out.= ' ('.$obj->poste.')';\n\t\t\t\t\t\t\tif (($showsoc > 0) && $obj->company) $out.= ' - ('.$obj->company.')';\n\t\t\t\t\t\t\t$out.= '</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (in_array($obj->rowid, $selected))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.= $contactstatic->getFullName($langs);\n\t\t\t\t\t\t\tif ($showfunction && $obj->poste) $out.= ' ('.$obj->poste.')';\n\t\t\t\t\t\t\tif (($showsoc > 0) && $obj->company) $out.= ' - ('.$obj->company.')';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$out.= '<option value=\"-1\"'.($showempty==2?'':' selected').' disabled>'.$langs->trans($socid?\"NoContactDefinedForThirdParty\":\"NoContactDefined\").'</option>';\n\t\t\t}\n\t\t\tif ($htmlname != 'none' || $options_only)\n\t\t\t{\n\t\t\t\t$out.= '</select>';\n\t\t\t}\n\n\t\t\t$this->num = $num;\n\t\t\treturn $out;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn select list of users\n\t *\n\t *  @param\tstring\t$selected       Id user preselected\n\t *  @param  string\t$htmlname       Field name in form\n\t *  @param  int\t\t$show_empty     0=liste sans valeur nulle, 1=ajoute valeur inconnue\n\t *  @param  array\t$exclude        Array list of users id to exclude\n\t * \t@param\tint\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  array\t$include        Array list of users id to include\n\t * \t@param\tint\t\t$enableonly\t\tArray list of users id to be enabled. All other must be disabled\n\t *  @param\tstring\t$force_entity\t'0' or Ids of environment to force\n\t * \t@return\tvoid\n\t *  @deprecated\t\tUse select_dolusers instead\n\t *  @see select_dolusers()\n\t */\n\tfunction select_users($selected='',$htmlname='userid',$show_empty=0,$exclude=null,$disabled=0,$include='',$enableonly='',$force_entity='0')\n\t{\n\t\tprint $this->select_dolusers($selected,$htmlname,$show_empty,$exclude,$disabled,$include,$enableonly,$force_entity);\n\t}\n\n\t/**\n\t *\tReturn select list of users\n\t *\n\t *  @param\tstring\t$selected       User id or user object of user preselected. If 0 or < -2, we use id of current user. If -1, keep unselected (if empty is allowed)\n\t *  @param  string\t$htmlname       Field name in form\n\t *  @param  int\t\t$show_empty     0=list with no empty value, 1=add also an empty value into list\n\t *  @param  array\t$exclude        Array list of users id to exclude\n\t * \t@param\tint\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  array|string\t$include        Array list of users id to include or 'hierarchy' to have only supervised users or 'hierarchyme' to have supervised + me\n\t * \t@param\tarray\t$enableonly\t\tArray list of users id to be enabled. If defined, it means that others will be disabled\n\t *  @param\tstring\t$force_entity\t'0' or Ids of environment to force\n\t *  @param\tint\t\t$maxlength\t\tMaximum length of string into list (0=no limit)\n\t *  @param\tint\t\t$showstatus\t\t0=show user status only if status is disabled, 1=always show user status into label, -1=never show user status\n\t *  @param\tstring\t$morefilter\t\tAdd more filters into sql request (Example: 'employee = 1')\n\t *  @param\tinteger\t$show_every\t\t0=default list, 1=add also a value \"Everybody\" at beginning of list\n\t *  @param\tstring\t$enableonlytext\tIf option $enableonlytext is set, we use this text to explain into label why record is disabled. Not used if enableonly is empty.\n\t *  @param\tstring\t$morecss\t\tMore css\n\t *  @param  int     $noactive       Show only active users (this will also happened whatever is this option if USER_HIDE_INACTIVE_IN_COMBOBOX is on).\n\t * \t@return\tstring\t\t\t\t\tHTML select string\n\t *  @see select_dolgroups\n\t */\n\tfunction select_dolusers($selected='', $htmlname='userid', $show_empty=0, $exclude=null, $disabled=0, $include='', $enableonly='', $force_entity='0', $maxlength=0, $showstatus=0, $morefilter='', $show_every=0, $enableonlytext='', $morecss='', $noactive=0)\n\t{\n\t\tglobal $conf,$user,$langs;\n\n\t\t// If no preselected user defined, we take current user\n\t\tif ((is_numeric($selected) && ($selected < -2 || empty($selected))) && empty($conf->global->SOCIETE_DISABLE_DEFAULT_SALESREPRESENTATIVE)) $selected=$user->id;\n\n\t\t$excludeUsers=null;\n\t\t$includeUsers=null;\n\n\t\t// Permettre l'exclusion d'utilisateurs\n\t\tif (is_array($exclude))\t$excludeUsers = implode(\",\",$exclude);\n\t\t// Permettre l'inclusion d'utilisateurs\n\t\tif (is_array($include))\t$includeUsers = implode(\",\",$include);\n\t\telse if ($include == 'hierarchy')\n\t\t{\n\t\t\t// Build list includeUsers to have only hierarchy\n\t\t\t$includeUsers = implode(\",\",$user->getAllChildIds(0));\n\t\t}\n\t\telse if ($include == 'hierarchyme')\n\t\t{\n\t\t\t// Build list includeUsers to have only hierarchy and current user\n\t\t\t$includeUsers = implode(\",\",$user->getAllChildIds(1));\n\t\t}\n\n\t\t$out='';\n\n\t\t// Forge request to select users\n\t\t$sql = \"SELECT DISTINCT u.rowid, u.lastname as lastname, u.firstname, u.statut, u.login, u.admin, u.entity\";\n\t\tif (! empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && ! $user->entity)\n\t\t{\n\t\t\t$sql.= \", e.label\";\n\t\t}\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX .\"user as u\";\n\t\tif (! empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && ! $user->entity)\n\t\t{\n\t\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX .\"entity as e ON e.rowid=u.entity\";\n\t\t\tif ($force_entity) $sql.= \" WHERE u.entity IN (0,\".$force_entity.\")\";\n\t\t\telse $sql.= \" WHERE u.entity IS NOT NULL\";\n\t\t}\n\t\telse\n\t   {\n\t\t\tif (! empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE))\n\t\t\t{\n\t\t\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"usergroup_user as ug\";\n\t\t\t\t$sql.= \" ON ug.fk_user = u.rowid\";\n\t\t\t\t$sql.= \" WHERE ug.entity = \".$conf->entity;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$sql.= \" WHERE u.entity IN (0,\".$conf->entity.\")\";\n\t\t\t}\n\t\t}\n\t\tif (! empty($user->societe_id)) $sql.= \" AND u.fk_soc = \".$user->societe_id;\n\t\tif (is_array($exclude) && $excludeUsers) $sql.= \" AND u.rowid NOT IN (\".$excludeUsers.\")\";\n\t\tif ($includeUsers) $sql.= \" AND u.rowid IN (\".$includeUsers.\")\";\n\t\tif (! empty($conf->global->USER_HIDE_INACTIVE_IN_COMBOBOX) || $noactive) $sql.= \" AND u.statut <> 0\";\n\t\tif (! empty($morefilter)) $sql.=\" \".$morefilter;\n\n\t\tif(empty($conf->global->MAIN_FIRSTNAME_NAME_POSITION)){\n\t\t\t$sql.= \" ORDER BY u.firstname ASC\";\n\t\t}else{\n\t\t\t$sql.= \" ORDER BY u.lastname ASC\";\n\t\t}\n\n\t\tdol_syslog(get_class($this).\"::select_dolusers\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t   \t\t// Enhance with select2\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname);\n\n\t\t\t\t// do not use maxwidthonsmartphone by default. Set it by caller so auto size to 100% will work when not defined\n\t\t\t\t$out.= '<select class=\"flat'.($morecss?' minwidth100 '.$morecss:' minwidth200').'\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\"'.($disabled?' disabled':'').'>';\n\t\t\t\tif ($show_empty) $out.= '<option value=\"-1\"'.((empty($selected) || $selected==-1)?' selected':'').'>&nbsp;</option>'.\"\\n\";\n\t\t\t\tif ($show_every) $out.= '<option value=\"-2\"'.(($selected==-2)?' selected':'').'>-- '.$langs->trans(\"Everybody\").' --</option>'.\"\\n\";\n\n\t\t\t\t$userstatic=new User($this->db);\n\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t\t$userstatic->id=$obj->rowid;\n\t\t\t\t\t$userstatic->lastname=$obj->lastname;\n\t\t\t\t\t$userstatic->firstname=$obj->firstname;\n\n\t\t\t\t\t$disableline='';\n\t\t\t\t\tif (is_array($enableonly) && count($enableonly) && ! in_array($obj->rowid,$enableonly)) $disableline=($enableonlytext?$enableonlytext:'1');\n\n\t\t\t\t\tif ((is_object($selected) && $selected->id == $obj->rowid) || (! is_object($selected) && $selected == $obj->rowid))\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\t\tif ($disableline) $out.= ' disabled';\n\t\t\t\t\t\t$out.= ' selected>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\t\tif ($disableline) $out.= ' disabled';\n\t\t\t\t\t\t$out.= '>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$fullNameMode = 0; //Lastname + firstname\n\t\t\t\t\tif(empty($conf->global->MAIN_FIRSTNAME_NAME_POSITION)){\n\t\t\t\t\t\t$fullNameMode = 1; //firstname + lastname\n\t\t\t\t\t}\n\t\t\t\t\t$out.= $userstatic->getFullName($langs, $fullNameMode, -1, $maxlength);\n\n\t\t\t\t\t// Complete name with more info\n\t\t\t\t\t$moreinfo=0;\n\t\t\t\t\tif (! empty($conf->global->MAIN_SHOW_LOGIN))\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= ($moreinfo?' - ':' (').$obj->login;\n\t\t\t\t\t\t$moreinfo++;\n\t\t\t\t\t}\n\t\t\t\t\tif ($showstatus >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($obj->statut == 1 && $showstatus == 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.=($moreinfo?' - ':' (').$langs->trans('Enabled');\n\t\t\t\t\t\t\t$moreinfo++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($obj->statut == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.=($moreinfo?' - ':' (').$langs->trans('Disabled');\n\t\t\t\t\t\t\t$moreinfo++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (! empty($conf->multicompany->enabled) && empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE) && $conf->entity == 1 && $user->admin && ! $user->entity)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! $obj->entity)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.=($moreinfo?' - ':' (').$langs->trans(\"AllEntities\");\n\t\t\t\t\t\t\t$moreinfo++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.=($moreinfo?' - ':' (').($obj->label?$obj->label:$langs->trans(\"EntityNameNotDefined\"));\n\t\t\t\t\t\t\t$moreinfo++;\n\t\t\t\t\t \t}\n\t\t\t\t\t}\n\t\t\t\t\t$out.=($moreinfo?')':'');\n\t\t\t\t\tif ($disableline && $disableline != '1')\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.=' - '.$disableline;\t// This is text from $enableonlytext parameter\n\t\t\t\t\t}\n\t\t\t\t\t$out.= '</option>';\n\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$out.= '<select class=\"flat\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\" disabled>';\n\t\t\t\t$out.= '<option value=\"\">'.$langs->trans(\"None\").'</option>';\n\t\t\t}\n\t\t\t$out.= '</select>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tReturn select list of users. Selected users are stored into session.\n\t *  List of users are provided into $_SESSION['assignedtouser'].\n\t *\n\t *  @param  string\t$action         Value for $action\n\t *  @param  string\t$htmlname       Field name in form\n\t *  @param  int\t\t$show_empty     0=list without the empty value, 1=add empty value\n\t *  @param  array\t$exclude        Array list of users id to exclude\n\t * \t@param\tint\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  array\t$include        Array list of users id to include or 'hierarchy' to have only supervised users\n\t * \t@param\tarray\t$enableonly\t\tArray list of users id to be enabled. All other must be disabled\n\t *  @param\tint\t\t$force_entity\t'0' or Ids of environment to force\n\t *  @param\tint\t\t$maxlength\t\tMaximum length of string into list (0=no limit)\n\t *  @param\tint\t\t$showstatus\t\t0=show user status only if status is disabled, 1=always show user status into label, -1=never show user status\n\t *  @param\tstring\t$morefilter\t\tAdd more filters into sql request\n\t *  @param\tint\t\t$showproperties\t\tShow properties of each attendees\n\t *  @param\tarray\t$listofuserid\t\tArray with properties of each user\n\t *  @param\tarray\t$listofcontactid\tArray with properties of each contact\n\t *  @param\tarray\t$listofotherid\t\tArray with properties of each other contact\n\t * \t@return\tstring\t\t\t\t\tHTML select string\n\t *  @see select_dolgroups\n\t */\n\tfunction select_dolusers_forevent($action='', $htmlname='userid', $show_empty=0, $exclude=null, $disabled=0, $include='', $enableonly='', $force_entity='0', $maxlength=0, $showstatus=0, $morefilter='', $showproperties=0, $listofuserid=array(), $listofcontactid=array(), $listofotherid=array())\n\t{\n\t\tglobal $conf, $user, $langs;\n\n\t\t$userstatic=new User($this->db);\n\t\t$out='';\n\n\t\t// Method with no ajax\n\t\t//$out.='<form method=\"POST\" action=\"'.$_SERVER[\"PHP_SELF\"].'\">';\n\t\tif ($action == 'view')\n\t\t{\n\t\t\t$out.='';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$out.='<input type=\"hidden\" class=\"removedassignedhidden\" name=\"removedassigned\" value=\"\">';\n\t\t\t$out.='<script type=\"text/javascript\" language=\"javascript\">jQuery(document).ready(function () {    jQuery(\".removedassigned\").click(function() {        jQuery(\".removedassignedhidden\").val(jQuery(this).val());    });})</script>';\n\t\t\t$out.=$this->select_dolusers('', $htmlname, $show_empty, $exclude, $disabled, $include, $enableonly, $force_entity, $maxlength, $showstatus, $morefilter);\n\t\t\t$out.=' <input type=\"submit\" class=\"button valignmiddle\" name=\"'.$action.'assignedtouser\" value=\"'.dol_escape_htmltag($langs->trans(\"Add\")).'\">';\n\t\t\t$out.='<br>';\n\t\t}\n\t\t$assignedtouser=array();\n\t\tif (!empty($_SESSION['assignedtouser']))\n\t\t{\n\t\t\t$assignedtouser=json_decode($_SESSION['assignedtouser'], true);\n\t\t}\n\t\t$nbassignetouser=count($assignedtouser);\n\n\t\tif ($nbassignetouser && $action != 'view') $out.='<br>';\n\t\tif ($nbassignetouser) $out.='<ul class=\"attendees\">';\n\t\t$i=0; $ownerid=0;\n\t\tforeach($assignedtouser as $key => $value)\n\t\t{\n\t\t\tif ($value['id'] == $ownerid) continue;\n\n\t\t\t$out.='<li>';\n\t\t\t$userstatic->fetch($value['id']);\n\t\t\t$out.= $userstatic->getNomUrl(-1);\n\t\t\tif ($i == 0) { $ownerid = $value['id']; $out.=' ('.$langs->trans(\"Owner\").')'; }\n\t\t\tif ($nbassignetouser > 1 && $action != 'view') $out.=' <input type=\"image\" style=\"border: 0px;\" src=\"'.img_picto($langs->trans(\"Remove\"), 'delete', '', 0, 1).'\" value=\"'.$userstatic->id.'\" class=\"removedassigned\" id=\"removedassigned_'.$userstatic->id.'\" name=\"removedassigned_'.$userstatic->id.'\">';\n\t\t\t// Show my availability\n\t\t\tif ($showproperties)\n\t\t\t{\n\t\t\t\tif ($ownerid == $value['id'] && is_array($listofuserid) && count($listofuserid) && in_array($ownerid, array_keys($listofuserid)))\n\t\t\t\t{\n\t\t\t\t\t$out.='<div class=\"myavailability inline-block\">';\n\t\t\t\t\t$out.='&nbsp;-&nbsp;<span class=\"opacitymedium\">'.$langs->trans(\"Availability\").':</span>  <input id=\"transparency\" class=\"marginleftonly marginrightonly\" '.($action == 'view'?'disabled':'').' type=\"checkbox\" name=\"transparency\"'.($listofuserid[$ownerid]['transparency']?' checked':'').'>'.$langs->trans(\"Busy\");\n\t\t\t\t\t$out.='</div>';\n\t\t\t\t}\n\t\t\t}\n\t\t\t//$out.=' '.($value['mandatory']?$langs->trans(\"Mandatory\"):$langs->trans(\"Optional\"));\n\t\t\t//$out.=' '.($value['transparency']?$langs->trans(\"Busy\"):$langs->trans(\"NotBusy\"));\n\n\t\t\t$out.='</li>';\n\t\t\t$i++;\n\t\t}\n\t\tif ($nbassignetouser) $out.='</ul>';\n\n\t\t//$out.='</form>';\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *  Return list of products for customer in Ajax if Ajax activated or go to select_produits_list\n\t *\n\t *  @param\t\tint\t\t\t$selected\t\t\t\tPreselected products\n\t *  @param\t\tstring\t\t$htmlname\t\t\t\tName of HTML select field (must be unique in page)\n\t *  @param\t\tint\t\t\t$filtertype\t\t\t\tFilter on product type (''=nofilter, 0=product, 1=service)\n\t *  @param\t\tint\t\t\t$limit\t\t\t\t\tLimit on number of returned lines\n\t *  @param\t\tint\t\t\t$price_level\t\t\tLevel of price to show\n\t *  @param\t\tint\t\t\t$status\t\t\t\t\t-1=Return all products, 0=Products not on sell, 1=Products on sell\n\t *  @param\t\tint\t\t\t$finished\t\t\t\t2=all, 1=finished, 0=raw material\n\t *  @param\t\tstring\t\t$selected_input_value\tValue of preselected input text (for use with ajax)\n\t *  @param\t\tint\t\t\t$hidelabel\t\t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n\t *  @param\t\tarray\t\t$ajaxoptions\t\t\tOptions for ajax_autocompleter\n\t *  @param      int\t\t\t$socid\t\t\t\t\tThirdparty Id (to get also price dedicated to this customer)\n\t *  @param\t\tstring\t\t$showempty\t\t\t\t'' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t\t$forcecombo\t\t\t\tForce to use combo box\n\t *  @param      string      $morecss                Add more css on select\n\t *  @param      int         $hidepriceinlabel       1=Hide prices in label\n\t *  @param      string      $warehouseStatus        warehouse status filter, following comma separated filter options can be used\n\t *\t\t\t\t\t\t\t\t\t\t            'warehouseopen' = select products from open warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t            'warehouseclosed' = select products from closed warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t            'warehouseinternal' = select products from warehouses for internal correct/transfer only\n\t *  @param array $selected_combinations Selected combinations. Format: array([attrid] => attrval, [...])\n\t *  @return\t\tvoid\n\t */\n\tfunction select_produits($selected='', $htmlname='productid', $filtertype='', $limit=20, $price_level=0, $status=1, $finished=2, $selected_input_value='', $hidelabel=0, $ajaxoptions=array(), $socid=0, $showempty='1', $forcecombo=0, $morecss='', $hidepriceinlabel=0, $warehouseStatus='', $selected_combinations = array())\n\t{\n\t\tglobal $langs,$conf;\n\n\t\t$price_level = (! empty($price_level) ? $price_level : 0);\n\n\t\tif (! empty($conf->use_javascript_ajax) && ! empty($conf->global->PRODUIT_USE_SEARCH_TO_SELECT))\n\t\t{\n\t\t\t$placeholder='';\n\n\t\t\tif ($selected && empty($selected_input_value))\n\t\t\t{\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t\t\t\t$producttmpselect = new Product($this->db);\n\t\t\t\t$producttmpselect->fetch($selected);\n\t\t\t\t$selected_input_value=$producttmpselect->ref;\n\t\t\t\tunset($producttmpselect);\n\t\t\t}\n\t\t\t// mode=1 means customers products\n\t\t\t$urloption='htmlname='.$htmlname.'&outjson=1&price_level='.$price_level.'&type='.$filtertype.'&mode=1&status='.$status.'&finished='.$finished.'&hidepriceinlabel='.$hidepriceinlabel.'&warehousestatus='.$warehouseStatus;\n\t\t\t//Price by customer\n\t\t\tif (! empty($conf->global->PRODUIT_CUSTOMER_PRICES) && !empty($socid)) {\n\t\t\t\t$urloption.='&socid='.$socid;\n\t\t\t}\n\t\t\tprint ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/product/ajax/products.php', $urloption, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT, 0, $ajaxoptions);\n\n\t\t\tif (!empty($conf->variants->enabled)) {\n\t\t\t\t?>\n\t\t\t\t<script>\n\n\t\t\t\t\tselected = <?php echo json_encode($selected_combinations) ?>;\n\t\t\t\t\tcombvalues = {};\n\n\t\t\t\t\tjQuery(document).ready(function () {\n\n\t\t\t\t\t\tjQuery(\"input[name='prod_entry_mode']\").change(function () {\n\t\t\t\t\t\t\tif (jQuery(this).val() == 'free') {\n\t\t\t\t\t\t\t\tjQuery('div#attributes_box').empty();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tjQuery(\"input#<?php echo $htmlname ?>\").change(function () {\n\n\t\t\t\t\t\t\tif (!jQuery(this).val()) {\n\t\t\t\t\t\t\t\tjQuery('div#attributes_box').empty();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tjQuery.getJSON(\"<?php echo dol_buildpath('/variants/ajax/getCombinations.php', 2) ?>\", {\n\t\t\t\t\t\t\t\tid: jQuery(this).val()\n\t\t\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\t\t\tjQuery('div#attributes_box').empty();\n\n\t\t\t\t\t\t\t\tjQuery.each(data, function (key, val) {\n\n\t\t\t\t\t\t\t\t\tcombvalues[val.id] = val.values;\n\n\t\t\t\t\t\t\t\t\tvar span = jQuery(document.createElement('div')).css({\n\t\t\t\t\t\t\t\t\t\t'display': 'table-row'\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tspan.append(\n\t\t\t\t\t\t\t\t\t\tjQuery(document.createElement('div')).text(val.label).css({\n\t\t\t\t\t\t\t\t\t\t\t'font-weight': 'bold',\n\t\t\t\t\t\t\t\t\t\t\t'display': 'table-cell',\n\t\t\t\t\t\t\t\t\t\t\t'text-align': 'right'\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tvar html = jQuery(document.createElement('select')).attr('name', 'combinations[' + val.id + ']').css({\n\t\t\t\t\t\t\t\t\t\t'margin-left': '15px',\n\t\t\t\t\t\t\t\t\t\t'white-space': 'pre'\n\t\t\t\t\t\t\t\t\t}).append(\n\t\t\t\t\t\t\t\t\t\tjQuery(document.createElement('option')).val('')\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tjQuery.each(combvalues[val.id], function (key, val) {\n\t\t\t\t\t\t\t\t\t\tvar tag = jQuery(document.createElement('option')).val(val.id).html(val.value);\n\n\t\t\t\t\t\t\t\t\t\tif (selected[val.fk_product_attribute] == val.id) {\n\t\t\t\t\t\t\t\t\t\t\ttag.attr('selected', 'selected');\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\thtml.append(tag);\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tspan.append(html);\n\t\t\t\t\t\t\t\t\tjQuery('div#attributes_box').append(span);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t<?php if ($selected): ?>\n\t\t\t\t\t\tjQuery(\"input#<?php echo $htmlname ?>\").change();\n\t\t\t\t\t\t<?php endif ?>\n\t\t\t\t\t});\n\t\t\t\t</script>\n                <?php\n\t\t\t}\n\t\t\tif (empty($hidelabel)) print $langs->trans(\"RefOrLabel\").' : ';\n\t\t\telse if ($hidelabel > 1) {\n\t\t\t\t$placeholder=' placeholder=\"'.$langs->trans(\"RefOrLabel\").'\"';\n\t\t\t\tif ($hidelabel == 2) {\n\t\t\t\t\tprint img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '<input type=\"text\" class=\"minwidth100\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\"'.$placeholder.' '.(!empty($conf->global->PRODUCT_SEARCH_AUTOFOCUS) ? 'autofocus' : '').' />';\n\t\t\tif ($hidelabel == 3) {\n\t\t\t\tprint img_picto($langs->trans(\"Search\"), 'search');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $this->select_produits_list($selected,$htmlname,$filtertype,$limit,$price_level,'',$status,$finished,0,$socid,$showempty,$forcecombo,$morecss,$hidepriceinlabel, $warehouseStatus);\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn list of products for a customer\n\t *\n\t *\t@param      int\t\t$selected           Preselected product\n\t *\t@param      string\t$htmlname           Name of select html\n\t *  @param\t\tstring\t$filtertype         Filter on product type (''=nofilter, 0=product, 1=service)\n\t *\t@param      int\t\t$limit              Limit on number of returned lines\n\t *\t@param      int\t\t$price_level        Level of price to show\n\t * \t@param      string\t$filterkey          Filter on product\n\t *\t@param\t\tint\t\t$status             -1=Return all products, 0=Products not on sell, 1=Products on sell\n\t *  @param      int\t\t$finished           Filter on finished field: 2=No filter\n\t *  @param      int\t\t$outputmode         0=HTML select string, 1=Array\n\t *  @param      int\t\t$socid     \t\t    Thirdparty Id (to get also price dedicated to this customer)\n\t *  @param\t\tstring\t$showempty\t\t    '' to not show empty line. Translation key to show an empty line. '1' show empty line with no text.\n\t * \t@param\t\tint\t\t$forcecombo\t\t    Force to use combo box\n\t *  @param      string  $morecss            Add more css on select\n\t *  @param      int     $hidepriceinlabel   1=Hide prices in label\n\t *  @param      string  $warehouseStatus    warehouse status filter, following comma separated filter options can be used\n\t *\t\t\t\t\t\t\t\t\t\t    'warehouseopen' = select products from open warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t    'warehouseclosed' = select products from closed warehouses,\n\t *\t\t\t\t\t\t\t\t\t\t    'warehouseinternal' = select products from warehouses for internal correct/transfer only\n\t *  @return     array    \t\t\t\t    Array of keys for json\n\t */\n\tfunction select_produits_list($selected='',$htmlname='productid',$filtertype='',$limit=20,$price_level=0,$filterkey='',$status=1,$finished=2,$outputmode=0,$socid=0,$showempty='1',$forcecombo=0,$morecss='',$hidepriceinlabel=0, $warehouseStatus='')\n\t{\n\t\tglobal $langs,$conf,$user,$db;\n\n\t\t$out='';\n\t\t$outarray=array();\n\n\t\t$warehouseStatusArray = array();\n\t\tif (! empty($warehouseStatus))\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/stock/class/entrepot.class.php';\n\t\t\tif (preg_match('/warehouseclosed/', $warehouseStatus))\n\t\t\t{\n\t\t\t\t$warehouseStatusArray[] = Entrepot::STATUS_CLOSED;\n\t\t\t}\n\t\t\tif (preg_match('/warehouseopen/', $warehouseStatus))\n\t\t\t{\n\t\t\t\t$warehouseStatusArray[] = Entrepot::STATUS_OPEN_ALL;\n\t\t\t}\n\t\t\tif (preg_match('/warehouseinternal/', $warehouseStatus))\n\t\t\t{\n\t\t\t\t$warehouseStatusArray[] = Entrepot::STATUS_OPEN_INTERNAL;\n\t\t\t}\n\t\t}\n\n\t\t$selectFields = \" p.rowid, p.label, p.ref, p.description, p.barcode, p.fk_product_type, p.price, p.price_ttc, p.price_base_type, p.tva_tx, p.duration, p.fk_price_expression\";\n\t\t(count($warehouseStatusArray)) ? $selectFieldsGrouped = \", sum(ps.reel) as stock\" : $selectFieldsGrouped = \", p.stock\";\n\n\t\t$sql = \"SELECT \";\n\t\t$sql.= $selectFields . $selectFieldsGrouped;\n\t\t//Price by customer\n\t\tif (! empty($conf->global->PRODUIT_CUSTOMER_PRICES) && !empty($socid))\n\t\t{\n\t\t\t$sql.=', pcp.rowid as idprodcustprice, pcp.price as custprice, pcp.price_ttc as custprice_ttc,';\n\t\t\t$sql.=' pcp.price_base_type as custprice_base_type, pcp.tva_tx as custtva_tx';\n\t\t\t$selectFields.= \", idprodcustprice, custprice, custprice_ttc, custprice_base_type, custtva_tx\";\n\t\t}\n\n\t\t// Multilang : we add translation\n\t\tif (! empty($conf->global->MAIN_MULTILANGS))\n\t\t{\n\t\t\t$sql.= \", pl.label as label_translated\";\n\t\t\t$selectFields.= \", label_translated\";\n\t\t}\n\t\t// Price by quantity\n\t\tif (! empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY))\n\t\t{\n\t\t\t$sql.= \", (SELECT pp.rowid FROM \".MAIN_DB_PREFIX.\"product_price as pp WHERE pp.fk_product = p.rowid\";\n\t\t\tif ($price_level >= 1 && !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES)) $sql.= \" AND price_level=\".$price_level;\n\t\t\t$sql.= \" ORDER BY date_price\";\n\t\t\t$sql.= \" DESC LIMIT 1) as price_rowid\";\n\t\t\t$sql.= \", (SELECT pp.price_by_qty FROM \".MAIN_DB_PREFIX.\"product_price as pp WHERE pp.fk_product = p.rowid\";\t// price_by_qty is 1 if some prices by qty exists in subtable\n\t\t\tif ($price_level >= 1 && !empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY_MULTIPRICES)) $sql.= \" AND price_level=\".$price_level;\n\t\t\t$sql.= \" ORDER BY date_price\";\n\t\t\t$sql.= \" DESC LIMIT 1) as price_by_qty\";\n\t\t\t$selectFields.= \", price_rowid, price_by_qty\";\n\t\t}\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"product as p\";\n\t\tif (count($warehouseStatusArray))\n\t\t{\n\t\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"product_stock as ps on ps.fk_product = p.rowid\";\n\t\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"entrepot as e on ps.fk_entrepot = e.rowid\";\n\t\t}\n\n\t\t//Price by customer\n\t\tif (! empty($conf->global->PRODUIT_CUSTOMER_PRICES) && !empty($socid)) {\n\t\t\t$sql.=\" LEFT JOIN  \".MAIN_DB_PREFIX.\"product_customer_price as pcp ON pcp.fk_soc=\".$socid.\" AND pcp.fk_product=p.rowid\";\n\t\t}\n\t\t// Multilang : we add translation\n\t\tif (! empty($conf->global->MAIN_MULTILANGS))\n\t\t{\n\t\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"product_lang as pl ON pl.fk_product = p.rowid AND pl.lang='\". $langs->getDefaultLang() .\"'\";\n\t\t}\n\n\t\tif (!empty($conf->global->PRODUIT_ATTRIBUTES_HIDECHILD)) {\n\t\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"product_attribute_combination pac ON pac.fk_product_child = p.rowid\";\n\t\t}\n\n\t\t$sql.= ' WHERE p.entity IN ('.getEntity('product').')';\n\t\tif (count($warehouseStatusArray))\n\t\t{\n\t\t\t$sql.= ' AND (p.fk_product_type = 1 OR e.statut IN ('.$this->db->escape(implode(',',$warehouseStatusArray)).'))';\n\t\t}\n\n\t\tif (!empty($conf->global->PRODUIT_ATTRIBUTES_HIDECHILD)) {\n\t\t\t$sql .= \" AND pac.rowid IS NULL\";\n\t\t}\n\n\t\tif ($finished == 0)\n\t\t{\n\t\t\t$sql.= \" AND p.finished = \".$finished;\n\t\t}\n\t\telseif ($finished == 1)\n\t\t{\n\t\t\t$sql.= \" AND p.finished = \".$finished;\n\t\t\tif ($status >= 0)  $sql.= \" AND p.tosell = \".$status;\n\t\t}\n\t\telseif ($status >= 0)\n\t\t{\n\t\t\t$sql.= \" AND p.tosell = \".$status;\n\t\t}\n\t\tif (strval($filtertype) != '') $sql.=\" AND p.fk_product_type=\".$filtertype;\n\t\t// Add criteria on ref/label\n\t\tif ($filterkey != '')\n\t\t{\n\t\t\t$sql.=' AND (';\n\t\t\t$prefix=empty($conf->global->PRODUCT_DONOTSEARCH_ANYWHERE)?'%':'';\t// Can use index if PRODUCT_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i=0;\n\t\t\tif (count($scrit) > 1) $sql.=\"(\";\n\t\t\tforeach ($scrit as $crit)\n\t\t\t{\n\t\t\t\tif ($i > 0) $sql.=\" AND \";\n\t\t\t\t$sql.=\"(p.ref LIKE '\".$db->escape($prefix.$crit).\"%' OR p.label LIKE '\".$db->escape($prefix.$crit).\"%'\";\n\t\t\t\tif (! empty($conf->global->MAIN_MULTILANGS)) $sql.=\" OR pl.label LIKE '\".$db->escape($prefix.$crit).\"%'\";\n\t\t\t\t$sql.=\")\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) $sql.=\")\";\n\t\t  \tif (! empty($conf->barcode->enabled)) $sql.= \" OR p.barcode LIKE '\".$db->escape($prefix.$filterkey).\"%'\";\n\t\t\t$sql.=')';\n\t\t}\n\t\tif (count($warehouseStatusArray))\n\t\t{\n\t\t\t$sql.= ' GROUP BY'.$selectFields;\n\t\t}\n\t\t$sql.= $db->order(\"p.ref\");\n\t\t$sql.= $db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\tdol_syslog(get_class($this).\"::select_produits_list search product\", LOG_DEBUG);\n\t\t$result=$this->db->query($sql);\n\t\tif ($result)\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/dynamic_price/class/price_parser.class.php';\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t$events=null;\n\n\t\t\tif (! $forcecombo)\n\t\t\t{\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, $events, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT);\n\t\t\t}\n\n\t\t\t$out.='<select class=\"flat'.($morecss?' '.$morecss:'').'\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\n\t\t\t$textifempty='';\n\t\t\t// Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'.\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (! empty($conf->global->PRODUIT_USE_SEARCH_TO_SELECT))\n\t\t\t{\n\t\t\t\tif ($showempty && ! is_numeric($showempty)) $textifempty=$langs->trans($showempty);\n\t\t\t\telse $textifempty.=$langs->trans(\"All\");\n\t\t\t}\n\t\t\tif ($showempty) $out.='<option value=\"0\" selected>'.$textifempty.'</option>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($num && $i < $num)\n\t\t\t{\n\t\t\t\t$opt = '';\n\t\t\t\t$optJson = array();\n\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\tif (!empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY) && !empty($objp->price_by_qty) && $objp->price_by_qty == 1)\n\t\t\t\t{ // Price by quantity will return many prices for the same product\n\t\t\t\t\t$sql = \"SELECT rowid, quantity, price, unitprice, remise_percent, remise, price_base_type\";\n\t\t\t\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"product_price_by_qty\";\n\t\t\t\t\t$sql.= \" WHERE fk_product_price=\".$objp->price_rowid;\n\t\t\t\t\t$sql.= \" ORDER BY quantity ASC\";\n\n\t\t\t\t\tdol_syslog(get_class($this).\"::select_produits_list search price by qty\", LOG_DEBUG);\n\t\t\t\t\t$result2 = $this->db->query($sql);\n\t\t\t\t\tif ($result2)\n\t\t\t\t\t{\n\t\t\t\t\t\t$nb_prices = $this->db->num_rows($result2);\n\t\t\t\t\t\t$j = 0;\n\t\t\t\t\t\twhile ($nb_prices && $j < $nb_prices) {\n\t\t\t\t\t\t\t$objp2 = $this->db->fetch_object($result2);\n\n\t\t\t\t\t\t\t$objp->price_by_qty_rowid = $objp2->rowid;\n\t\t\t\t\t\t\t$objp->price_by_qty_price_base_type = $objp2->price_base_type;\n\t\t\t\t\t\t\t$objp->price_by_qty_quantity = $objp2->quantity;\n\t\t\t\t\t\t\t$objp->price_by_qty_unitprice = $objp2->unitprice;\n\t\t\t\t\t\t\t$objp->price_by_qty_remise_percent = $objp2->remise_percent;\n\t\t\t\t\t\t\t// For backward compatibility\n\t\t\t\t\t\t\t$objp->quantity = $objp2->quantity;\n\t\t\t\t\t\t\t$objp->price = $objp2->price;\n\t\t\t\t\t\t\t$objp->unitprice = $objp2->unitprice;\n\t\t\t\t\t\t\t$objp->remise_percent = $objp2->remise_percent;\n\t\t\t\t\t\t\t$objp->remise = $objp2->remise;\n\n\t\t\t\t\t\t\t$this->constructProductListOption($objp, $opt, $optJson, 0, $selected, $hidepriceinlabel);\n\n\t\t\t\t\t\t\t$j++;\n\n\t\t\t\t\t\t\t// Add new entry\n\t\t\t\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t\t\t\t$out.=$opt;\n\t\t\t\t\t\t\tarray_push($outarray, $optJson);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!empty($conf->dynamicprices->enabled) && !empty($objp->fk_price_expression)) {\n\t\t\t\t\t\t$price_product = new Product($this->db);\n\t\t\t\t\t\t$price_product->fetch($objp->rowid, '', '', 1);\n\t\t\t\t\t\t$priceparser = new PriceParser($this->db);\n\t\t\t\t\t\t$price_result = $priceparser->parseProduct($price_product);\n\t\t\t\t\t\tif ($price_result >= 0) {\n\t\t\t\t\t\t\t$objp->price = $price_result;\n\t\t\t\t\t\t\t$objp->unitprice = $price_result;\n\t\t\t\t\t\t\t//Calculate the VAT\n\t\t\t\t\t\t\t$objp->price_ttc = price2num($objp->price) * (1 + ($objp->tva_tx / 100));\n\t\t\t\t\t\t\t$objp->price_ttc = price2num($objp->price_ttc,'MU');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$this->constructProductListOption($objp, $opt, $optJson, $price_level, $selected, $hidepriceinlabel);\n\t\t\t\t\t// Add new entry\n\t\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t\t$out.=$opt;\n\t\t\t\t\tarray_push($outarray, $optJson);\n\t\t\t\t}\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$out.='</select>';\n\n\t\t\t$this->db->free($result);\n\n\t\t\tif (empty($outputmode)) return $out;\n\t\t\treturn $outarray;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n\n\t/**\n\t * constructProductListOption\n\t *\n\t * @param \tresultset\t$objp\t\t\t    Resultset of fetch\n\t * @param \tstring\t\t$opt\t\t\t    Option (var used for returned value in string option format)\n\t * @param \tstring\t\t$optJson\t\t    Option (var used for returned value in json format)\n\t * @param \tint\t\t\t$price_level\t    Price level\n\t * @param \tstring\t\t$selected\t\t    Preselected value\n\t * @param   int         $hidepriceinlabel   Hide price in label\n\t * @return\tvoid\n\t */\n\tprivate function constructProductListOption(&$objp, &$opt, &$optJson, $price_level, $selected, $hidepriceinlabel=0)\n\t{\n\t\tglobal $langs,$conf,$user,$db;\n\n\t\t$outkey='';\n\t\t$outval='';\n\t\t$outref='';\n\t\t$outlabel='';\n\t\t$outdesc='';\n\t\t$outbarcode='';\n\t\t$outtype='';\n\t\t$outprice_ht='';\n\t\t$outprice_ttc='';\n\t\t$outpricebasetype='';\n\t\t$outtva_tx='';\n\t\t$outqty=1;\n\t\t$outdiscount=0;\n\n\t\t$maxlengtharticle=(empty($conf->global->PRODUCT_MAX_LENGTH_COMBO)?48:$conf->global->PRODUCT_MAX_LENGTH_COMBO);\n\n\t\t$label=$objp->label;\n\t\tif (! empty($objp->label_translated)) $label=$objp->label_translated;\n\t\tif (! empty($filterkey) && $filterkey != '') $label=preg_replace('/('.preg_quote($filterkey).')/i','<strong>$1</strong>',$label,1);\n\n\t\t$outkey=$objp->rowid;\n\t\t$outref=$objp->ref;\n\t\t$outlabel=$objp->label;\n\t\t$outdesc=$objp->description;\n\t\t$outbarcode=$objp->barcode;\n\n\t\t$outtype=$objp->fk_product_type;\n\t\t$outdurationvalue=$outtype == Product::TYPE_SERVICE?substr($objp->duration,0,dol_strlen($objp->duration)-1):'';\n\t\t$outdurationunit=$outtype == Product::TYPE_SERVICE?substr($objp->duration,-1):'';\n\n\t\t$opt = '<option value=\"'.$objp->rowid.'\"';\n\t\t$opt.= ($objp->rowid == $selected)?' selected':'';\n\t\tif (!empty($objp->price_by_qty_rowid) && $objp->price_by_qty_rowid > 0)\n\t\t{\n\t\t\t$opt.= ' pbq=\"'.$objp->price_by_qty_rowid.'\" data-pbq=\"'.$objp->price_by_qty_rowid.'\" data-pbqqty=\"'.$objp->price_by_qty_quantity.'\" data-pbqpercent=\"'.$objp->price_by_qty_remise_percent.'\"';\n\t\t}\n\t\tif (! empty($conf->stock->enabled) && $objp->fk_product_type == 0 && isset($objp->stock))\n\t\t{\n\t\t\tif ($objp->stock > 0) $opt.= ' class=\"product_line_stock_ok\"';\n\t\t\telse if ($objp->stock <= 0) $opt.= ' class=\"product_line_stock_too_low\"';\n\t\t}\n\t\t$opt.= '>';\n\t\t$opt.= $objp->ref;\n\t\tif ($outbarcode) $opt.=' ('.$outbarcode.')';\n\t\t$opt.=' - '.dol_trunc($label,$maxlengtharticle);\n\n\t\t$objRef = $objp->ref;\n\t\tif (! empty($filterkey) && $filterkey != '') $objRef=preg_replace('/('.preg_quote($filterkey).')/i','<strong>$1</strong>',$objRef,1);\n\t\t$outval.=$objRef;\n\t\tif ($outbarcode) $outval.=' ('.$outbarcode.')';\n\t\t$outval.=' - '.dol_trunc($label,$maxlengtharticle);\n\n\t\t$found=0;\n\n\t\t// Multiprice\n\t\tif (empty($hidepriceinlabel) && $price_level >= 1 && $conf->global->PRODUIT_MULTIPRICES)\t\t// If we need a particular price level (from 1 to 6)\n\t\t{\n\t\t\t$sql = \"SELECT price, price_ttc, price_base_type, tva_tx\";\n\t\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"product_price\";\n\t\t\t$sql.= \" WHERE fk_product='\".$objp->rowid.\"'\";\n\t\t\t$sql.= \" AND entity IN (\".getEntity('productprice').\")\";\n\t\t\t$sql.= \" AND price_level=\".$price_level;\n\t\t\t$sql.= \" ORDER BY date_price DESC, rowid DESC\"; // Warning DESC must be both on date_price and rowid.\n\t\t\t$sql.= \" LIMIT 1\";\n\n\t\t\tdol_syslog(get_class($this).'::constructProductListOption search price for level '.$price_level.'', LOG_DEBUG);\n\t\t\t$result2 = $this->db->query($sql);\n\t\t\tif ($result2)\n\t\t\t{\n\t\t\t\t$objp2 = $this->db->fetch_object($result2);\n\t\t\t\tif ($objp2)\n\t\t\t\t{\n\t\t\t\t\t$found=1;\n\t\t\t\t\tif ($objp2->price_base_type == 'HT')\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= ' - '.price($objp2->price,1,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"HT\");\n\t\t\t\t\t\t$outval.= ' - '.price($objp2->price,0,$langs,0,0,-1,$conf->currency).' '.$langs->transnoentities(\"HT\");\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= ' - '.price($objp2->price_ttc,1,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"TTC\");\n\t\t\t\t\t\t$outval.= ' - '.price($objp2->price_ttc,0,$langs,0,0,-1,$conf->currency).' '.$langs->transnoentities(\"TTC\");\n\t\t\t\t\t}\n\t\t\t\t\t$outprice_ht=price($objp2->price);\n\t\t\t\t\t$outprice_ttc=price($objp2->price_ttc);\n\t\t\t\t\t$outpricebasetype=$objp2->price_base_type;\n\t\t\t\t\t$outtva_tx=$objp2->tva_tx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdol_print_error($this->db);\n\t\t\t}\n\t\t}\n\n\t\t// Price by quantity\n\t\tif (empty($hidepriceinlabel) && !empty($objp->quantity) && $objp->quantity >= 1 && ! empty($conf->global->PRODUIT_CUSTOMER_PRICES_BY_QTY))\n\t\t{\n\t\t\t$found = 1;\n\t\t\t$outqty=$objp->quantity;\n\t\t\t$outdiscount=$objp->remise_percent;\n\t\t\tif ($objp->quantity == 1)\n\t\t\t{\n\t\t\t\t$opt.= ' - '.price($objp->unitprice,1,$langs,0,0,-1,$conf->currency).\"/\";\n\t\t\t\t$outval.= ' - '.price($objp->unitprice,0,$langs,0,0,-1,$conf->currency).\"/\";\n\t\t\t\t$opt.= $langs->trans(\"Unit\");\t// Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t$outval.=$langs->transnoentities(\"Unit\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$opt.= ' - '.price($objp->price,1,$langs,0,0,-1,$conf->currency).\"/\".$objp->quantity;\n\t\t\t\t$outval.= ' - '.price($objp->price,0,$langs,0,0,-1,$conf->currency).\"/\".$objp->quantity;\n\t\t\t\t$opt.= $langs->trans(\"Units\");\t// Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t$outval.=$langs->transnoentities(\"Units\");\n\t\t\t}\n\n\t\t\t$outprice_ht=price($objp->unitprice);\n\t\t\t$outprice_ttc=price($objp->unitprice * (1 + ($objp->tva_tx / 100)));\n\t\t\t$outpricebasetype=$objp->price_base_type;\n\t\t\t$outtva_tx=$objp->tva_tx;\n\t\t}\n\t\tif (empty($hidepriceinlabel) && !empty($objp->quantity) && $objp->quantity >= 1)\n\t\t{\n\t\t\t$opt.=\" (\".price($objp->unitprice,1,$langs,0,0,-1,$conf->currency).\"/\".$langs->trans(\"Unit\").\")\";\t// Do not use strtolower because it breaks utf8 encoding\n\t\t\t$outval.=\" (\".price($objp->unitprice,0,$langs,0,0,-1,$conf->currency).\"/\".$langs->transnoentities(\"Unit\").\")\";\t// Do not use strtolower because it breaks utf8 encoding\n\t\t}\n\t\tif (empty($hidepriceinlabel) && !empty($objp->remise_percent) && $objp->remise_percent >= 1)\n\t\t{\n\t\t\t$opt.=\" - \".$langs->trans(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t\t$outval.=\" - \".$langs->transnoentities(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t}\n\n\t\t// Price by customer\n\t\tif (empty($hidepriceinlabel) && !empty($conf->global->PRODUIT_CUSTOMER_PRICES))\n\t\t{\n\t\t\tif (!empty($objp->idprodcustprice))\n\t\t\t{\n\t\t\t\t$found = 1;\n\n\t\t\t\tif ($objp->custprice_base_type == 'HT')\n\t\t\t\t{\n\t\t\t\t\t$opt.= ' - '.price($objp->custprice,1,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"HT\");\n\t\t\t\t\t$outval.= ' - '.price($objp->custprice,0,$langs,0,0,-1,$conf->currency).' '.$langs->transnoentities(\"HT\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$opt.= ' - '.price($objp->custprice_ttc,1,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"TTC\");\n\t\t\t\t\t$outval.= ' - '.price($objp->custprice_ttc,0,$langs,0,0,-1,$conf->currency).' '.$langs->transnoentities(\"TTC\");\n\t\t\t\t}\n\n\t\t\t\t$outprice_ht=price($objp->custprice);\n\t\t\t\t$outprice_ttc=price($objp->custprice_ttc);\n\t\t\t\t$outpricebasetype=$objp->custprice_base_type;\n\t\t\t\t$outtva_tx=$objp->custtva_tx;\n\t\t\t}\n\t\t}\n\n\t\t// If level no defined or multiprice not found, we used the default price\n\t\tif (empty($hidepriceinlabel) && ! $found)\n\t\t{\n\t\t\tif ($objp->price_base_type == 'HT')\n\t\t\t{\n\t\t\t\t$opt.= ' - '.price($objp->price,1,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"HT\");\n\t\t\t\t$outval.= ' - '.price($objp->price,0,$langs,0,0,-1,$conf->currency).' '.$langs->transnoentities(\"HT\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$opt.= ' - '.price($objp->price_ttc,1,$langs,0,0,-1,$conf->currency).' '.$langs->trans(\"TTC\");\n\t\t\t\t$outval.= ' - '.price($objp->price_ttc,0,$langs,0,0,-1,$conf->currency).' '.$langs->transnoentities(\"TTC\");\n\t\t\t}\n\t\t\t$outprice_ht=price($objp->price);\n\t\t\t$outprice_ttc=price($objp->price_ttc);\n\t\t\t$outpricebasetype=$objp->price_base_type;\n\t\t\t$outtva_tx=$objp->tva_tx;\n\t\t}\n\n\t\tif (! empty($conf->stock->enabled) && isset($objp->stock) && $objp->fk_product_type == 0)\n\t\t{\n\t\t\t$opt.= ' - '.$langs->trans(\"Stock\").':'.$objp->stock;\n\n\t\t\tif ($objp->stock > 0) {\n\t\t\t\t$outval.= ' - <span class=\"product_line_stock_ok\">'.$langs->transnoentities(\"Stock\").':'.$objp->stock.'</span>';\n\t\t\t}elseif ($objp->stock <= 0) {\n\t\t\t\t$outval.= ' - <span class=\"product_line_stock_too_low\">'.$langs->transnoentities(\"Stock\").':'.$objp->stock.'</span>';\n\t\t\t}\n\t\t}\n\n\t\tif ($outdurationvalue && $outdurationunit)\n\t\t{\n\t\t\t$da=array(\"h\"=>$langs->trans(\"Hour\"),\"d\"=>$langs->trans(\"Day\"),\"w\"=>$langs->trans(\"Week\"),\"m\"=>$langs->trans(\"Month\"),\"y\"=>$langs->trans(\"Year\"));\n\t\t\tif (isset($da[$outdurationunit]))\n\t\t\t{\n\t\t\t\t$key = $da[$outdurationunit].($outdurationvalue > 1?'s':'');\n\t\t\t\t$opt.= ' - '.$outdurationvalue.' '.$langs->trans($key);\n\t\t\t\t$outval.=' - '.$outdurationvalue.' '.$langs->transnoentities($key);\n\t\t\t}\n\t\t}\n\n\t\t$opt.= \"</option>\\n\";\n\t\t$optJson = array('key'=>$outkey, 'value'=>$outref, 'label'=>$outval, 'label2'=>$outlabel, 'desc'=>$outdesc, 'type'=>$outtype, 'price_ht'=>$outprice_ht, 'price_ttc'=>$outprice_ttc, 'pricebasetype'=>$outpricebasetype, 'tva_tx'=>$outtva_tx, 'qty'=>$outqty, 'discount'=>$outdiscount, 'duration_value'=>$outdurationvalue, 'duration_unit'=>$outdurationunit);\n\t}\n\n\t/**\n\t *\tReturn list of products for customer (in Ajax if Ajax activated or go to select_produits_fournisseurs_list)\n\t *\n\t *\t@param\tint\t\t$socid\t\t\tId third party\n\t *\t@param  string\t$selected       Preselected product\n\t *\t@param  string\t$htmlname       Name of HTML Select\n\t *  @param\tstring\t$filtertype     Filter on product type (''=nofilter, 0=product, 1=service)\n\t *\t@param  string\t$filtre\t\t\tFor a SQL filter\n\t *\t@param\tarray\t$ajaxoptions\tOptions for ajax_autocompleter\n\t *  @param\tint\t\t$hidelabel\t\tHide label (0=no, 1=yes)\n\t *  @param  int     $alsoproductwithnosupplierprice    1=Add also product without supplier prices\n\t *\t@return\tvoid\n\t */\n\tfunction select_produits_fournisseurs($socid, $selected='', $htmlname='productid', $filtertype='', $filtre='', $ajaxoptions=array(), $hidelabel=0, $alsoproductwithnosupplierprice=0)\n\t{\n\t\tglobal $langs,$conf;\n\t\tglobal $price_level, $status, $finished;\n\n\t\t$selected_input_value='';\n\t\tif (! empty($conf->use_javascript_ajax) && ! empty($conf->global->PRODUIT_USE_SEARCH_TO_SELECT))\n\t\t{\n\t\t\tif ($selected > 0)\n\t\t\t{\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t\t\t\t$producttmpselect = new Product($this->db);\n\t\t\t\t$producttmpselect->fetch($selected);\n\t\t\t\t$selected_input_value=$producttmpselect->ref;\n\t\t\t\tunset($producttmpselect);\n\t\t\t}\n\n\t\t\t// mode=2 means suppliers products\n\t\t\t$urloption=($socid > 0?'socid='.$socid.'&':'').'htmlname='.$htmlname.'&outjson=1&price_level='.$price_level.'&type='.$filtertype.'&mode=2&status='.$status.'&finished='.$finished.'&alsoproductwithnosupplierprice='.$alsoproductwithnosupplierprice;\n\t\t\tprint ajax_autocompleter($selected, $htmlname, DOL_URL_ROOT.'/product/ajax/products.php', $urloption, $conf->global->PRODUIT_USE_SEARCH_TO_SELECT, 0, $ajaxoptions);\n\t\t\tprint ($hidelabel?'':$langs->trans(\"RefOrLabel\").' : ').'<input type=\"text\" size=\"20\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$selected_input_value.'\">';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint $this->select_produits_fournisseurs_list($socid,$selected,$htmlname,$filtertype,$filtre,'',-1,0,0,$alsoproductwithnosupplierprice);\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn list of suppliers products\n\t *\n\t *\t@param\tint\t\t$socid   \t\tId societe fournisseur (0 pour aucun filtre)\n\t *\t@param  int\t\t$selected       Produit pre-selectionne\n\t *\t@param  string\t$htmlname       Nom de la zone select\n\t *  @param\tstring\t$filtertype     Filter on product type (''=nofilter, 0=product, 1=service)\n\t *\t@param  string\t$filtre         Pour filtre sql\n\t *\t@param  string\t$filterkey      Filtre des produits\n\t *  @param  int\t\t$statut         -1=Return all products, 0=Products not on sell, 1=Products on sell (not used here, a filter on tobuy is already hard coded in request)\n\t *  @param  int\t\t$outputmode     0=HTML select string, 1=Array\n\t *  @param  int     $limit          Limit of line number\n\t *  @param  int     $alsoproductwithnosupplierprice    1=Add also product without supplier prices\n\t *  @return array           \t\tArray of keys for json\n\t */\n\tfunction select_produits_fournisseurs_list($socid,$selected='',$htmlname='productid',$filtertype='',$filtre='',$filterkey='',$statut=-1,$outputmode=0,$limit=100,$alsoproductwithnosupplierprice=0)\n\t{\n\t\tglobal $langs,$conf,$db;\n\n\t\t$out='';\n\t\t$outarray=array();\n\n\t\t$langs->load('stocks');\n\n\t\t$sql = \"SELECT p.rowid, p.label, p.ref, p.price, p.duration, p.fk_product_type,\";\n\t\t$sql.= \" pfp.ref_fourn, pfp.rowid as idprodfournprice, pfp.price as fprice, pfp.quantity, pfp.remise_percent, pfp.remise, pfp.unitprice,\";\n\t\t$sql.= \" pfp.fk_supplier_price_expression, pfp.fk_product, pfp.tva_tx, pfp.fk_soc, s.nom as name,\";\n\t\t$sql.= \" pfp.supplier_reputation\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"product as p\";\n\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"product_fournisseur_price as pfp ON p.rowid = pfp.fk_product\";\n\t\tif ($socid) $sql.= \" AND pfp.fk_soc = \".$socid;\n\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"societe as s ON pfp.fk_soc = s.rowid\";\n\t\t$sql.= \" WHERE p.entity IN (\".getEntity('product').\")\";\n\t\t$sql.= \" AND p.tobuy = 1\";\n\t\tif (strval($filtertype) != '') $sql.=\" AND p.fk_product_type=\".$this->db->escape($filtertype);\n\t\tif (! empty($filtre)) $sql.=\" \".$filtre;\n\t\t// Add criteria on ref/label\n\t\tif ($filterkey != '')\n\t\t{\n\t\t\t$sql.=' AND (';\n\t\t\t$prefix=empty($conf->global->PRODUCT_DONOTSEARCH_ANYWHERE)?'%':'';\t// Can use index if PRODUCT_DONOTSEARCH_ANYWHERE is on\n\t\t\t// For natural search\n\t\t\t$scrit = explode(' ', $filterkey);\n\t\t\t$i=0;\n\t\t\tif (count($scrit) > 1) $sql.=\"(\";\n\t\t\tforeach ($scrit as $crit)\n\t\t\t{\n\t\t\t\tif ($i > 0) $sql.=\" AND \";\n\t\t\t\t$sql.=\"(pfp.ref_fourn LIKE '\".$this->db->escape($prefix.$crit).\"%' OR p.ref LIKE '\".$this->db->escape($prefix.$crit).\"%' OR p.label LIKE '\".$this->db->escape($prefix.$crit).\"%')\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tif (count($scrit) > 1) $sql.=\")\";\n\t\t\tif (! empty($conf->barcode->enabled)) $sql.= \" OR p.barcode LIKE '\".$this->db->escape($prefix.$filterkey).\"%'\";\n\t\t\t$sql.=')';\n\t\t}\n\t\t$sql.= \" ORDER BY pfp.ref_fourn DESC, pfp.quantity ASC\";\n\t\t$sql.= $db->plimit($limit, 0);\n\n\t\t// Build output string\n\n\t\tdol_syslog(get_class($this).\"::select_produits_fournisseurs_list\", LOG_DEBUG);\n\t\t$result=$this->db->query($sql);\n\t\tif ($result)\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/dynamic_price/class/price_parser.class.php';\n\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t//$out.='<select class=\"flat\" id=\"select'.$htmlname.'\" name=\"'.$htmlname.'\">';\t// remove select to have id same with combo and ajax\n\t\t\t$out.='<select class=\"flat maxwidthonsmartphone\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\t\t\tif (! $selected) $out.='<option value=\"0\" selected>&nbsp;</option>';\n\t\t\telse $out.='<option value=\"0\">&nbsp;</option>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\t$outkey=$objp->idprodfournprice;                                                    // id in table of price\n\t\t\t\tif (! $outkey && $alsoproductwithnosupplierprice) $outkey='idprod_'.$objp->rowid;   // id of product\n\n\t\t\t\t$outref=$objp->ref;\n\t\t\t\t$outval='';\n\t\t\t\t$outqty=1;\n\t\t\t\t$outdiscount=0;\n\t\t\t\t$outtype=$objp->fk_product_type;\n\t\t\t\t$outdurationvalue=$outtype == Product::TYPE_SERVICE?substr($objp->duration,0,dol_strlen($objp->duration)-1):'';\n\t\t\t\t$outdurationunit=$outtype == Product::TYPE_SERVICE?substr($objp->duration,-1):'';\n\n\t\t\t\t$opt = '<option value=\"'.$outkey.'\"';\n\t\t\t\tif ($selected && $selected == $objp->idprodfournprice) $opt.= ' selected';\n\t\t\t\tif (empty($objp->idprodfournprice) && empty($alsoproductwithnosupplierprice)) $opt.=' disabled';\n\t\t\t\t$opt.= '>';\n\n\t\t\t\t$objRef = $objp->ref;\n\t\t\t\tif ($filterkey && $filterkey != '') $objRef=preg_replace('/('.preg_quote($filterkey).')/i','<strong>$1</strong>',$objRef,1);\n\t\t\t\t$objRefFourn = $objp->ref_fourn;\n\t\t\t\tif ($filterkey && $filterkey != '') $objRefFourn=preg_replace('/('.preg_quote($filterkey).')/i','<strong>$1</strong>',$objRefFourn,1);\n\t\t\t\t$label = $objp->label;\n\t\t\t\tif ($filterkey && $filterkey != '') $label=preg_replace('/('.preg_quote($filterkey).')/i','<strong>$1</strong>',$label,1);\n\n\t\t\t\t$opt.=$objp->ref;\n\t\t\t\tif (! empty($objp->idprodfournprice) && ($objp->ref != $objp->ref_fourn))\n\t\t\t\t\t$opt.=' ('.$objp->ref_fourn.')';\n\t\t\t\t$opt.=' - ';\n\t\t\t\t$outval.=$objRef;\n\t\t\t\tif (! empty($objp->idprodfournprice) && ($objp->ref != $objp->ref_fourn))\n\t\t\t\t\t$outval.=' ('.$objRefFourn.')';\n\t\t\t\t$outval.=' - ';\n\t\t\t\t$opt.=dol_trunc($label, 72).' - ';\n\t\t\t\t$outval.=dol_trunc($label, 72).' - ';\n\n\t\t\t\tif (! empty($objp->idprodfournprice))\n\t\t\t\t{\n\t\t\t\t\t$outqty=$objp->quantity;\n\t\t\t\t\t$outdiscount=$objp->remise_percent;\n\t\t\t\t\tif (!empty($conf->dynamicprices->enabled) && !empty($objp->fk_supplier_price_expression)) {\n\t\t\t\t\t\t$prod_supplier = new ProductFournisseur($this->db);\n\t\t\t\t\t\t$prod_supplier->product_fourn_price_id = $objp->idprodfournprice;\n\t\t\t\t\t\t$prod_supplier->id = $objp->fk_product;\n\t\t\t\t\t\t$prod_supplier->fourn_qty = $objp->quantity;\n\t\t\t\t\t\t$prod_supplier->fourn_tva_tx = $objp->tva_tx;\n\t\t\t\t\t\t$prod_supplier->fk_supplier_price_expression = $objp->fk_supplier_price_expression;\n\t\t\t\t\t\t$priceparser = new PriceParser($this->db);\n\t\t\t\t\t\t$price_result = $priceparser->parseProductSupplier($prod_supplier);\n\t\t\t\t\t\tif ($price_result >= 0) {\n\t\t\t\t\t\t\t$objp->fprice = $price_result;\n\t\t\t\t\t\t\tif ($objp->quantity >= 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$objp->unitprice = $objp->fprice / $objp->quantity;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->quantity == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= price($objp->fprice,1,$langs,0,0,-1,$conf->currency).\"/\";\n\t\t\t\t\t\t$outval.= price($objp->fprice,0,$langs,0,0,-1,$conf->currency).\"/\";\n\t\t\t\t\t\t$opt.= $langs->trans(\"Unit\");\t// Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t\t$outval.=$langs->transnoentities(\"Unit\");\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= price($objp->fprice,1,$langs,0,0,-1,$conf->currency).\"/\".$objp->quantity;\n\t\t\t\t\t\t$outval.= price($objp->fprice,0,$langs,0,0,-1,$conf->currency).\"/\".$objp->quantity;\n\t\t\t\t\t\t$opt.= ' '.$langs->trans(\"Units\");\t// Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t\t$outval.= ' '.$langs->transnoentities(\"Units\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($objp->quantity >= 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.=\" (\".price($objp->unitprice,1,$langs,0,0,-1,$conf->currency).\"/\".$langs->trans(\"Unit\").\")\";\t// Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t\t$outval.=\" (\".price($objp->unitprice,0,$langs,0,0,-1,$conf->currency).\"/\".$langs->transnoentities(\"Unit\").\")\";\t// Do not use strtolower because it breaks utf8 encoding\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->remise_percent >= 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.=\" - \".$langs->trans(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t\t\t\t\t$outval.=\" - \".$langs->transnoentities(\"Discount\").\" : \".vatrate($objp->remise_percent).' %';\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->duration)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt .= \" - \".$objp->duration;\n\t\t\t\t\t\t$outval.=\" - \".$objp->duration;\n\t\t\t\t\t}\n\t\t\t\t\tif (! $socid)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt .= \" - \".dol_trunc($objp->name,8);\n\t\t\t\t\t\t$outval.=\" - \".dol_trunc($objp->name,8);\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->supplier_reputation)\n\t\t\t\t\t{\n\t\t\t\t\t\t//TODO dictionary\n\t\t\t\t\t\t$reputations=array(''=>$langs->trans('Standard'),'FAVORITE'=>$langs->trans('Favorite'),'NOTTHGOOD'=>$langs->trans('NotTheGoodQualitySupplier'), 'DONOTORDER'=>$langs->trans('DoNotOrderThisProductToThisSupplier'));\n\n\t\t\t\t\t\t$opt .= \" - \".$reputations[$objp->supplier_reputation];\n\t\t\t\t\t\t$outval.=\" - \".$reputations[$objp->supplier_reputation];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (empty($alsoproductwithnosupplierprice))     // No supplier price defined for couple product/supplier\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= $langs->trans(\"NoPriceDefinedForThisSupplier\");\n\t\t\t\t\t\t$outval.=$langs->transnoentities(\"NoPriceDefinedForThisSupplier\");\n\t\t\t\t\t}\n\t\t\t\t\telse                                            // No supplier price defined for product, even on other suppliers\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= $langs->trans(\"NoPriceDefinedForThisSupplier\");\n\t\t\t\t\t\t$outval.=$langs->transnoentities(\"NoPriceDefinedForThisSupplier\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$opt .= \"</option>\\n\";\n\n\n\t\t\t\t// Add new entry\n\t\t\t\t// \"key\" value of json key array is used by jQuery automatically as selected value\n\t\t\t\t// \"label\" value of json key array is used by jQuery automatically as text for combo box\n\t\t\t\t$out.=$opt;\n\t\t\t\tarray_push($outarray, array('key'=>$outkey, 'value'=>$outref, 'label'=>$outval, 'qty'=>$outqty, 'discount'=>$outdiscount, 'type'=>$outtype, 'duration_value'=>$outdurationvalue, 'duration_unit'=>$outdurationunit, 'disabled'=>(empty($objp->idprodfournprice)?true:false)));\n\t\t\t\t// Exemple of var_dump $outarray\n\t\t\t\t// array(1) {[0]=>array(6) {[key\"]=>string(1) \"2\" [\"value\"]=>string(3) \"ppp\"\n\t\t\t\t//           [\"label\"]=>string(76) \"ppp (<strong>f</strong>ff2) - ppp - 20,00 Euros/1unit\u00e9 (20,00 Euros/unit\u00e9)\"\n\t\t\t\t//      \t [\"qty\"]=>string(1) \"1\" [\"discount\"]=>string(1) \"0\" [\"disabled\"]=>bool(false)\n\t\t\t\t//}\n\t\t\t\t//var_dump($outval); var_dump(utf8_check($outval)); var_dump(json_encode($outval));\n\t\t\t\t//$outval=array('label'=>'ppp (<strong>f</strong>ff2) - ppp - 20,00 Euros/ Unit\u00e9 (20,00 Euros/unit\u00e9)');\n\t\t\t\t//var_dump($outval); var_dump(utf8_check($outval)); var_dump(json_encode($outval));\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\t$out.='</select>';\n\n\t\t\t$this->db->free($result);\n\n\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t$out.=ajax_combobox($htmlname);\n\n\t\t\tif (empty($outputmode)) return $out;\n\t\t\treturn $outarray;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn list of suppliers prices for a product\n\t *\n\t *  @param\t    int\t\t$productid       \tId of product\n\t *  @param      string\t$htmlname        \tName of HTML field\n\t *  @param      int\t\t$selected_supplier  Pre-selected supplier if more than 1 result\n\t *  @return\t    void\n\t */\n\tfunction select_product_fourn_price($productid, $htmlname='productfournpriceid', $selected_supplier='')\n\t{\n\t\tglobal $langs,$conf;\n\n\t\t$langs->load('stocks');\n\n\t\t$sql = \"SELECT p.rowid, p.label, p.ref, p.price, p.duration, pfp.fk_soc,\";\n\t\t$sql.= \" pfp.ref_fourn, pfp.rowid as idprodfournprice, pfp.price as fprice, pfp.quantity, pfp.unitprice,\";\n\t\t$sql.= \" pfp.fk_supplier_price_expression, pfp.fk_product, pfp.tva_tx, s.nom as name\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"product as p\";\n\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"product_fournisseur_price as pfp ON p.rowid = pfp.fk_product\";\n\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"societe as s ON pfp.fk_soc = s.rowid\";\n\t\t$sql.= \" WHERE pfp.entity IN (\".getEntity('productprice').\")\";\n\t\t$sql.= \" AND p.tobuy = 1\";\n\t\t$sql.= \" AND s.fournisseur = 1\";\n\t\t$sql.= \" AND p.rowid = \".$productid;\n\t\t$sql.= \" ORDER BY s.nom, pfp.ref_fourn DESC\";\n\n\t\tdol_syslog(get_class($this).\"::select_product_fourn_price\", LOG_DEBUG);\n\t\t$result=$this->db->query($sql);\n\n\t\tif ($result)\n\t\t{\n\t\t\t$num = $this->db->num_rows($result);\n\n\t\t\t$form = '<select class=\"flat\" name=\"'.$htmlname.'\">';\n\n\t\t\tif (! $num)\n\t\t\t{\n\t\t\t\t$form.= '<option value=\"0\">-- '.$langs->trans(\"NoSupplierPriceDefinedForThisProduct\").' --</option>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/dynamic_price/class/price_parser.class.php';\n\t\t\t\t$form.= '<option value=\"0\">&nbsp;</option>';\n\n\t\t\t\t$i = 0;\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$objp = $this->db->fetch_object($result);\n\n\t\t\t\t\t$opt = '<option value=\"'.$objp->idprodfournprice.'\"';\n\t\t\t\t\t//if there is only one supplier, preselect it\n\t\t\t\t\tif($num == 1 || ($selected_supplier > 0 && $objp->fk_soc == $selected_supplier)) {\n\t\t\t\t\t\t$opt .= ' selected';\n\t\t\t\t\t}\n\t\t\t\t\t$opt.= '>'.$objp->name.' - '.$objp->ref_fourn.' - ';\n\n\t\t\t\t\tif (!empty($conf->dynamicprices->enabled) && !empty($objp->fk_supplier_price_expression)) {\n\t\t\t\t\t\t$prod_supplier = new ProductFournisseur($this->db);\n\t\t\t\t\t\t$prod_supplier->product_fourn_price_id = $objp->idprodfournprice;\n\t\t\t\t\t\t$prod_supplier->id = $productid;\n\t\t\t\t\t\t$prod_supplier->fourn_qty = $objp->quantity;\n\t\t\t\t\t\t$prod_supplier->fourn_tva_tx = $objp->tva_tx;\n\t\t\t\t\t\t$prod_supplier->fk_supplier_price_expression = $objp->fk_supplier_price_expression;\n\t\t\t\t\t\t$priceparser = new PriceParser($this->db);\n\t\t\t\t\t\t$price_result = $priceparser->parseProductSupplier($prod_supplier);\n\t\t\t\t\t\tif ($price_result >= 0) {\n\t\t\t\t\t\t\t$objp->fprice = $price_result;\n\t\t\t\t\t\t\tif ($objp->quantity >= 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$objp->unitprice = $objp->fprice / $objp->quantity;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->quantity == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= price($objp->fprice,1,$langs,0,0,-1,$conf->currency).\"/\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$opt.= $objp->quantity.' ';\n\n\t\t\t\t\tif ($objp->quantity == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= $langs->trans(\"Unit\");\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.= $langs->trans(\"Units\");\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->quantity > 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$opt.=\" - \";\n\t\t\t\t\t\t$opt.= price($objp->unitprice,1,$langs,0,0,-1,$conf->currency).\"/\".$langs->trans(\"Unit\");\n\t\t\t\t\t}\n\t\t\t\t\tif ($objp->duration) $opt .= \" - \".$objp->duration;\n\t\t\t\t\t$opt .= \"</option>\\n\";\n\n\t\t\t\t\t$form.= $opt;\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$form.= '</select>';\n\t\t\t$this->db->free($result);\n\t\t\treturn $form;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *    Return list of delivery address\n\t *\n\t *    @param    string\t$selected          \tId contact pre-selectionn\n\t *    @param    int\t\t$socid\t\t\t\tId of company\n\t *    @param    string\t$htmlname          \tName of HTML field\n\t *    @param    int\t\t$showempty         \tAdd an empty field\n\t *    @return\tinteger|null\n\t */\n\tfunction select_address($selected, $socid, $htmlname='address_id',$showempty=0)\n\t{\n\t\t// On recherche les utilisateurs\n\t\t$sql = \"SELECT a.rowid, a.label\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX .\"societe_address as a\";\n\t\t$sql .= \" WHERE a.fk_soc = \".$socid;\n\t\t$sql .= \" ORDER BY a.label ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_address\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\tprint '<select class=\"flat\" name=\"'.$htmlname.'\">';\n\t\t\tif ($showempty) print '<option value=\"0\">&nbsp;</option>';\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t\tif ($selected && $selected == $obj->rowid)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>'.$obj->label.'</option>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">'.$obj->label.'</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprint '</select>';\n\t\t\treturn $num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\n\t/**\n\t *      Load into cache list of payment terms\n\t *\n\t *      @return     int             Nb of lines loaded, <0 if KO\n\t */\n\tfunction load_cache_conditions_paiements()\n\t{\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_conditions_paiements);\n\t\tif ($num > 0) return 0;    // Cache already loaded\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$sql = \"SELECT rowid, code, libelle as label\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.'c_payment_term';\n\t\t$sql.= \" WHERE entity = \" . getEntity('c_payment_term');\n\t\t$sql.= \" AND active > 0\";\n\t\t$sql.= \" ORDER BY sortorder\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label=($langs->trans(\"PaymentConditionShort\".$obj->code)!=(\"PaymentConditionShort\".$obj->code)?$langs->trans(\"PaymentConditionShort\".$obj->code):($obj->label!='-'?$obj->label:''));\n\t\t\t\t$this->cache_conditions_paiements[$obj->rowid]['code'] =$obj->code;\n\t\t\t\t$this->cache_conditions_paiements[$obj->rowid]['label']=$label;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t//$this->cache_conditions_paiements=dol_sort_array($this->cache_conditions_paiements, 'label', 'asc', 0, 0, 1);\t\t// We use the field sortorder of table\n\n\t\t\treturn $num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *      Charge dans cache la liste des d\u00e9lais de livraison possibles\n\t *\n\t *      @return     int             Nb of lines loaded, <0 if KO\n\t */\n\tfunction load_cache_availability()\n\t{\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_availability);\n\t\tif ($num > 0) return 0;    // Cache already loaded\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$langs->load('propal');\n\n\t\t$sql = \"SELECT rowid, code, label\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.'c_availability';\n\t\t$sql.= \" WHERE active > 0\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label=($langs->trans(\"AvailabilityType\".$obj->code)!=(\"AvailabilityType\".$obj->code)?$langs->trans(\"AvailabilityType\".$obj->code):($obj->label!='-'?$obj->label:''));\n\t\t\t\t$this->cache_availability[$obj->rowid]['code'] =$obj->code;\n\t\t\t\t$this->cache_availability[$obj->rowid]['label']=$label;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$this->cache_availability = dol_sort_array($this->cache_availability, 'label', 'asc', 0, 0, 1);\n\n\t\t\treturn $num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *      Retourne la liste des types de delais de livraison possibles\n\t *\n\t *      @param\tint\t\t$selected        Id du type de delais pre-selectionne\n\t *      @param  string\t$htmlname        Nom de la zone select\n\t *      @param  string\t$filtertype      To add a filter\n\t *\t\t@param\tint\t\t$addempty\t\tAdd empty entry\n\t *\t\t@return\tvoid\n\t */\n\tfunction selectAvailabilityDelay($selected='',$htmlname='availid',$filtertype='',$addempty=0)\n\t{\n\t\tglobal $langs,$user;\n\n\t\t$this->load_cache_availability();\n\n\t\tdol_syslog(__METHOD__.\" selected=\".$selected.\", htmlname=\".$htmlname, LOG_DEBUG);\n\n\t\tprint '<select class=\"flat\" name=\"'.$htmlname.'\">';\n\t\tif ($addempty) print '<option value=\"0\">&nbsp;</option>';\n\t\tforeach($this->cache_availability as $id => $arrayavailability)\n\t\t{\n\t\t\tif ($selected == $id)\n\t\t\t{\n\t\t\t\tprint '<option value=\"'.$id.'\" selected>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint '<option value=\"'.$id.'\">';\n\t\t\t}\n\t\t\tprint $arrayavailability['label'];\n\t\t\tprint '</option>';\n\t\t}\n\t\tprint '</select>';\n\t\tif ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t}\n\n\t/**\n\t *      Load into cache cache_demand_reason, array of input reasons\n\t *\n\t *      @return     int             Nb of lines loaded, <0 if KO\n\t */\n\tfunction loadCacheInputReason()\n\t{\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_demand_reason);\n\t\tif ($num > 0) return 0;    // Cache already loaded\n\n\t\t$sql = \"SELECT rowid, code, label\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.'c_input_reason';\n\t\t$sql.= \" WHERE active > 0\";\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\t$tmparray=array();\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label=($langs->trans(\"DemandReasonType\".$obj->code)!=(\"DemandReasonType\".$obj->code)?$langs->trans(\"DemandReasonType\".$obj->code):($obj->label!='-'?$obj->label:''));\n\t\t\t\t$tmparray[$obj->rowid]['id']   =$obj->rowid;\n\t\t\t\t$tmparray[$obj->rowid]['code'] =$obj->code;\n\t\t\t\t$tmparray[$obj->rowid]['label']=$label;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$this->cache_demand_reason=dol_sort_array($tmparray, 'label', 'asc', 0, 0, 1);\n\n\t\t\tunset($tmparray);\n\t\t\treturn $num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t *\tReturn list of input reason (events that triggered an object creation, like after sending an emailing, making an advert, ...)\n\t *  List found into table c_input_reason loaded by loadCacheInputReason\n\t *\n\t *  @param\tint\t\t$selected        Id or code of type origin to select by default\n\t *  @param  string\t$htmlname        Nom de la zone select\n\t *  @param  string\t$exclude         To exclude a code value (Example: SRC_PROP)\n\t *\t@param\tint\t\t$addempty\t\t Add an empty entry\n\t *\t@return\tvoid\n\t */\n\tfunction selectInputReason($selected='',$htmlname='demandreasonid',$exclude='',$addempty=0)\n\t{\n\t\tglobal $langs,$user;\n\n\t\t$this->loadCacheInputReason();\n\n\t\tprint '<select class=\"flat\" name=\"'.$htmlname.'\">';\n\t\tif ($addempty) print '<option value=\"0\"'.(empty($selected)?' selected':'').'>&nbsp;</option>';\n\t\tforeach($this->cache_demand_reason as $id => $arraydemandreason)\n\t\t{\n\t\t\tif ($arraydemandreason['code']==$exclude) continue;\n\n\t\t\tif ($selected && ($selected == $arraydemandreason['id'] || $selected == $arraydemandreason['code']))\n\t\t\t{\n\t\t\t\tprint '<option value=\"'.$arraydemandreason['id'].'\" selected>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint '<option value=\"'.$arraydemandreason['id'].'\">';\n\t\t\t}\n\t\t\tprint $arraydemandreason['label'];\n\t\t\tprint '</option>';\n\t\t}\n\t\tprint '</select>';\n\t\tif ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t}\n\n\t/**\n\t *      Charge dans cache la liste des types de paiements possibles\n\t *\n\t *      @return     int                 Nb of lines loaded, <0 if KO\n\t */\n\tfunction load_cache_types_paiements()\n\t{\n\t\tglobal $langs;\n\n\t\t$num=count($this->cache_types_paiements);\n\t\tif ($num > 0) return $num;    // Cache already loaded\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$this->cache_types_paiements = array();\n\n\t\t$sql = \"SELECT id, code, libelle as label, type, active\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_paiement\";\n\t\t$sql.= \" WHERE entity IN (\".getEntity('c_paiement').\")\";\n\t\t//if ($active >= 0) $sql.= \" AND active = \".$active;\n\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $this->db->fetch_object($resql);\n\n\t\t\t\t// Si traduction existe, on l'utilise, sinon on prend le libelle par defaut\n\t\t\t\t$label=($langs->transnoentitiesnoconv(\"PaymentTypeShort\".$obj->code)!=(\"PaymentTypeShort\".$obj->code)?$langs->transnoentitiesnoconv(\"PaymentTypeShort\".$obj->code):($obj->label!='-'?$obj->label:''));\n\t\t\t\t$this->cache_types_paiements[$obj->id]['id'] =$obj->id;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['code'] =$obj->code;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['label']=$label;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['type'] =$obj->type;\n\t\t\t\t$this->cache_types_paiements[$obj->id]['active'] =$obj->active;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\t$this->cache_types_paiements = dol_sort_array($this->cache_types_paiements, 'label', 'asc', 0, 0, 1);\n\n\t\t\treturn $num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t/**\n\t *      Return list of payment modes.\n\t *      Constant MAIN_DEFAULT_PAYMENT_TERM_ID can used to set default value but scope is all application, probably not what you want.\n\t *      See instead to force the default value by the caller.\n\t *\n\t *      @param\tint\t\t$selected\t\tId of payment term to preselect by default\n\t *      @param\tstring\t$htmlname\t\tNom de la zone select\n\t *      @param\tint\t\t$filtertype\t\tNot used\n\t *\t\t@param\tint\t\t$addempty\t\tAdd an empty entry\n\t * \t\t@param\tint\t\t$noinfoadmin\t\t0=Add admin info, 1=Disable admin info\n\t * \t\t@param\tstring\t$morecss\t\t\tAdd more CSS on select tag\n\t *\t\t@return\tvoid\n\t */\n\tfunction select_conditions_paiements($selected=0, $htmlname='condid', $filtertype=-1, $addempty=0, $noinfoadmin=0, $morecss='')\n\t{\n\t\tglobal $langs, $user, $conf;\n\n\t\tdol_syslog(__METHOD__.\" selected=\".$selected.\", htmlname=\".$htmlname, LOG_DEBUG);\n\n\t\t$this->load_cache_conditions_paiements();\n\n\t\t// Set default value if not already set by caller\n\t\tif (empty($selected) && ! empty($conf->global->MAIN_DEFAULT_PAYMENT_TERM_ID)) $selected = $conf->global->MAIN_DEFAULT_PAYMENT_TERM_ID;\n\n\t\tprint '<select id=\"'.$htmlname.'\" class=\"flat selectpaymentterms'.($morecss?' '.$morecss:'').'\" name=\"'.$htmlname.'\">';\n\t\tif ($addempty) print '<option value=\"0\">&nbsp;</option>';\n\t\tforeach($this->cache_conditions_paiements as $id => $arrayconditions)\n\t\t{\n\t\t\tif ($selected == $id)\n\t\t\t{\n\t\t\t\tprint '<option value=\"'.$id.'\" selected>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint '<option value=\"'.$id.'\">';\n\t\t\t}\n\t\t\tprint $arrayconditions['label'];\n\t\t\tprint '</option>';\n\t\t}\n\t\tprint '</select>';\n\t\tif ($user->admin && empty($noinfoadmin)) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t}\n\n\n\t/**\n\t *      Return list of payment methods\n\t *\n\t *      @param\tstring\t$selected       Id du mode de paiement pre-selectionne\n\t *      @param  string\t$htmlname       Nom de la zone select\n\t *      @param  string\t$filtertype     To filter on field type in llx_c_paiement ('CRDT' or 'DBIT' or array('code'=>xx,'label'=>zz))\n\t *      @param  int\t\t$format         0=id+libelle, 1=code+code, 2=code+libelle, 3=id+code\n\t *      @param  int\t\t$empty\t\t\t1=peut etre vide, 0 sinon\n\t * \t\t@param\tint\t\t$noadmininfo\t0=Add admin info, 1=Disable admin info\n\t *      @param  int\t\t$maxlength      Max length of label\n\t *      @param  int     $active         Active or not, -1 = all\n\t *      @param  string  $morecss        Add more CSS on select tag\n\t * \t\t@return\tvoid\n\t */\n\tfunction select_types_paiements($selected='', $htmlname='paiementtype', $filtertype='', $format=0, $empty=0, $noadmininfo=0, $maxlength=0, $active=1, $morecss='')\n\t{\n\t\tglobal $langs,$user;\n\n\t\tdol_syslog(__METHOD__.\" \".$selected.\", \".$htmlname.\", \".$filtertype.\", \".$format, LOG_DEBUG);\n\n\t\t$filterarray=array();\n\t\tif ($filtertype == 'CRDT')  \t$filterarray=array(0,2,3);\n\t\telseif ($filtertype == 'DBIT') \t$filterarray=array(1,2,3);\n\t\telseif ($filtertype != '' && $filtertype != '-1') $filterarray=explode(',',$filtertype);\n\n\t\t$this->load_cache_types_paiements();\n\n\t\tprint '<select id=\"select'.$htmlname.'\" class=\"flat selectpaymenttypes'.($morecss?' '.$morecss:'').'\" name=\"'.$htmlname.'\">';\n\t\tif ($empty) print '<option value=\"\">&nbsp;</option>';\n\t\tforeach($this->cache_types_paiements as $id => $arraytypes)\n\t\t{\n\t\t\t// If not good status\n\t\t\tif ($active >= 0 && $arraytypes['active'] != $active) continue;\n\n\t\t\t// On passe si on a demande de filtrer sur des modes de paiments particuliers\n\t\t\tif (count($filterarray) && ! in_array($arraytypes['type'],$filterarray)) continue;\n\n\t\t\t// We discard empty line if showempty is on because an empty line has already been output.\n\t\t\tif ($empty && empty($arraytypes['code'])) continue;\n\n\t\t\tif ($format == 0) print '<option value=\"'.$id.'\"';\n\t\t\tif ($format == 1) print '<option value=\"'.$arraytypes['code'].'\"';\n\t\t\tif ($format == 2) print '<option value=\"'.$arraytypes['code'].'\"';\n\t\t\tif ($format == 3) print '<option value=\"'.$id.'\"';\n\t\t\t// Si selected est text, on compare avec code, sinon avec id\n\t\t\tif (preg_match('/[a-z]/i', $selected) && $selected == $arraytypes['code']) print ' selected';\n\t\t\telseif ($selected == $id) print ' selected';\n\t\t\tprint '>';\n\t\t\tif ($format == 0) $value=($maxlength?dol_trunc($arraytypes['label'],$maxlength):$arraytypes['label']);\n\t\t\tif ($format == 1) $value=$arraytypes['code'];\n\t\t\tif ($format == 2) $value=($maxlength?dol_trunc($arraytypes['label'],$maxlength):$arraytypes['label']);\n\t\t\tif ($format == 3) $value=$arraytypes['code'];\n\t\t\tprint $value?$value:'&nbsp;';\n\t\t\tprint '</option>';\n\t\t}\n\t\tprint '</select>';\n\t\tif ($user->admin && ! $noadmininfo) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t}\n\n\n\t/**\n\t *  Selection HT or TTC\n\t *\n\t *  @param\tstring\t$selected       Id pre-selectionne\n\t *  @param  string\t$htmlname       Nom de la zone select\n\t * \t@return\tstring\t\t\t\t\tCode of HTML select to chose tax or not\n\t */\n\tfunction selectPriceBaseType($selected='',$htmlname='price_base_type')\n\t{\n\t\tglobal $langs;\n\n\t\t$return='';\n\n\t\t$return.= '<select class=\"flat\" name=\"'.$htmlname.'\">';\n\t\t$options = array(\n\t\t\t'HT'=>$langs->trans(\"HT\"),\n\t\t\t'TTC'=>$langs->trans(\"TTC\")\n\t\t);\n\t\tforeach($options as $id => $value)\n\t\t{\n\t\t\tif ($selected == $id)\n\t\t\t{\n\t\t\t\t$return.= '<option value=\"'.$id.'\" selected>'.$value;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$return.= '<option value=\"'.$id.'\">'.$value;\n\t\t\t}\n\t\t\t$return.= '</option>';\n\t\t}\n\t\t$return.= '</select>';\n\n\t\treturn $return;\n\t}\n\n\t/**\n\t *  Return a HTML select list of shipping mode\n\t *\n\t *  @param\tstring\t$selected          Id shipping mode pre-selected\n\t *  @param  string\t$htmlname          Name of select zone\n\t *  @param  string\t$filtre            To filter list\n\t *  @param  int\t\t$useempty          1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *  @param  string\t$moreattrib        To add more attribute on select\n\t * \t@return\tvoid\n\t */\n\tfunction selectShippingMethod($selected='',$htmlname='shipping_method_id',$filtre='',$useempty=0,$moreattrib='')\n\t{\n\t\tglobal $langs, $conf, $user;\n\n\t\t$langs->load(\"admin\");\n\t\t$langs->load(\"deliveries\");\n\n\t\t$sql = \"SELECT rowid, code, libelle as label\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_shipment_mode\";\n\t\t$sql.= \" WHERE active > 0\";\n\t\tif ($filtre) $sql.=\" AND \".$filtre;\n\t\t$sql.= \" ORDER BY libelle ASC\";\n\n\t\tdol_syslog(get_class($this).\"::selectShippingMode\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result) {\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\t$i = 0;\n\t\t\tif ($num) {\n\t\t\t\tprint '<select id=\"select'.$htmlname.'\" class=\"flat selectshippingmethod\" name=\"'.$htmlname.'\"'.($moreattrib?' '.$moreattrib:'').'>';\n\t\t\t\tif ($useempty == 1 || ($useempty == 2 && $num > 1)) {\n\t\t\t\t\tprint '<option value=\"-1\">&nbsp;</option>';\n\t\t\t\t}\n\t\t\t\twhile ($i < $num) {\n\t\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\t\tif ($selected == $obj->rowid) {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">';\n\t\t\t\t\t}\n\t\t\t\t\tprint ($langs->trans(\"SendingMethod\".strtoupper($obj->code)) != \"SendingMethod\".strtoupper($obj->code)) ? $langs->trans(\"SendingMethod\".strtoupper($obj->code)) : $obj->label;\n\t\t\t\t\tprint '</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\tprint \"</select>\";\n\t\t\t\tif ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t\t\t} else {\n\t\t\t\tprint $langs->trans(\"NoShippingMethodDefined\");\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *    Display form to select shipping mode\n\t *\n\t *    @param\tstring\t$page        Page\n\t *    @param    int\t\t$selected    Id of shipping mode\n\t *    @param    string\t$htmlname    Name of select html field\n\t *    @param    int\t\t$addempty    1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *    @return\tvoid\n\t */\n\tfunction formSelectShippingMethod($page, $selected='', $htmlname='shipping_method_id', $addempty=0)\n\t{\n\t\tglobal $langs, $db;\n\n\t\t$langs->load(\"deliveries\");\n\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setshippingmethod\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$this->selectShippingMethod($selected, $htmlname, '', $addempty);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\t\t\tif ($selected) {\n\t\t\t\t$code=$langs->getLabelFromKey($db, $selected, 'c_shipment_mode', 'rowid', 'code');\n\t\t\t\tprint $langs->trans(\"SendingMethod\".strtoupper($code));\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates HTML last in cycle situation invoices selector\n\t *\n\t * @param     string  $selected   \t\tPreselected ID\n\t * @param     int     $socid      \t\tCompany ID\n\t *\n\t * @return    string                     HTML select\n\t */\n\tfunction selectSituationInvoices($selected = '', $socid = 0)\n\t{\n\t\tglobal $langs;\n\n\t\t$langs->load('bills');\n\n\t\t$opt = '<option value =\"\" selected></option>';\n\t\t$sql = 'SELECT rowid, facnumber, situation_cycle_ref, situation_counter, situation_final, fk_soc FROM ' . MAIN_DB_PREFIX . 'facture WHERE situation_counter>=1';\n\t\t$sql.= ' ORDER by situation_cycle_ref, situation_counter desc';\n\t\t$resql = $this->db->query($sql);\n\t\tif ($resql && $this->db->num_rows($resql) > 0) {\n\t\t\t// Last seen cycle\n\t\t\t$ref = 0;\n\t\t\twhile ($res = $this->db->fetch_array($resql, MYSQL_NUM)) {\n\t\t\t\t//Same company ?\n\t\t\t\tif ($socid == $res[5]) {\n\t\t\t\t\t//Same cycle ?\n\t\t\t\t\tif ($res[2] != $ref) {\n\t\t\t\t\t\t// Just seen this cycle\n\t\t\t\t\t\t$ref = $res[2];\n\t\t\t\t\t\t//not final ?\n\t\t\t\t\t\tif ($res[4] != 1) {\n\t\t\t\t\t\t\t//Not prov?\n\t\t\t\t\t\t\tif (substr($res[1], 1, 4) != 'PROV') {\n\t\t\t\t\t\t\t\tif ($selected == $res[0]) {\n\t\t\t\t\t\t\t\t\t$opt .= '<option value=\"' . $res[0] . '\" selected>' . $res[1] . '</option>';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$opt .= '<option value=\"' . $res[0] . '\">' . $res[1] . '</option>';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\tdol_syslog(\"Error sql=\" . $sql . \", error=\" . $this->error, LOG_ERR);\n\t\t}\n\t\tif ($opt == '<option value =\"\" selected></option>')\n\t\t{\n\t\t\t$opt = '<option value =\"0\" selected>' . $langs->trans('NoSituations') . '</option>';\n\t\t}\n\t\treturn $opt;\n\t}\n\n\t/**\n\t *      Creates HTML units selector (code => label)\n\t *\n\t *      @param\tstring\t$selected       Preselected Unit ID\n\t *      @param  string\t$htmlname       Select name\n\t *      @param\tint\t\t$showempty\t\tAdd a nempty line\n\t * \t\t@return\tstring                  HTML select\n\t */\n\tfunction selectUnits($selected = '', $htmlname = 'units', $showempty=0)\n\t{\n\t\tglobal $langs;\n\n\t\t$langs->load('products');\n\n\t\t$return= '<select class=\"flat\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\">';\n\n\t\t$sql = 'SELECT rowid, label, code from '.MAIN_DB_PREFIX.'c_units';\n\t\t$sql.= ' WHERE active > 0';\n\n\t\t$resql = $this->db->query($sql);\n\t\tif($resql && $this->db->num_rows($resql) > 0)\n\t\t{\n\t\t\tif ($showempty) $return .= '<option value=\"none\"></option>';\n\n\t\t\twhile($res = $this->db->fetch_object($resql))\n\t\t\t{\n\t\t\t\tif ($selected == $res->rowid)\n\t\t\t\t{\n\t\t\t\t\t$return.='<option value=\"'.$res->rowid.'\" selected>'.($langs->trans('unit'.$res->code)!=$res->label?$langs->trans('unit'.$res->code):$res->label).'</option>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$return.='<option value=\"'.$res->rowid.'\">'.($langs->trans('unit'.$res->code)!=$res->label?$langs->trans('unit'.$res->code):$res->label).'</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$return.='</select>';\n\t\t}\n\t\treturn $return;\n\t}\n\n\t/**\n\t *  Return a HTML select list of bank accounts\n\t *\n\t *  @param\tstring\t$selected           Id account pre-selected\n\t *  @param  string\t$htmlname           Name of select zone\n\t *  @param  int\t\t$statut             Status of searched accounts (0=open, 1=closed, 2=both)\n\t *  @param  string\t$filtre             To filter list\n\t *  @param  int\t\t$useempty           1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *  @param  string\t$moreattrib         To add more attribute on select\n\t *  @param\tint\t\t$showcurrency\t\tShow currency in label\n\t * \t@return\tvoid\n\t */\n\tfunction select_comptes($selected='',$htmlname='accountid',$statut=0,$filtre='',$useempty=0,$moreattrib='',$showcurrency=0)\n\t{\n\t\tglobal $langs, $conf;\n\n\t\t$langs->load(\"admin\");\n\n\t\t$sql = \"SELECT rowid, label, bank, clos as status, currency_code\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"bank_account\";\n\t\t$sql.= \" WHERE entity IN (\".getEntity('bank_account').\")\";\n\t\tif ($statut != 2) $sql.= \" AND clos = '\".$statut.\"'\";\n\t\tif ($filtre) $sql.=\" AND \".$filtre;\n\t\t$sql.= \" ORDER BY label\";\n\n\t\tdol_syslog(get_class($this).\"::select_comptes\", LOG_DEBUG);\n\t\t$result = $this->db->query($sql);\n\t\tif ($result)\n\t\t{\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\tprint '<select id=\"select'.$htmlname.'\" class=\"flat selectbankaccount\" name=\"'.$htmlname.'\"'.($moreattrib?' '.$moreattrib:'').'>';\n\t\t\t\tif ($useempty == 1 || ($useempty == 2 && $num > 1))\n\t\t\t\t{\n\t\t\t\t\tprint '<option value=\"-1\">&nbsp;</option>';\n\t\t\t\t}\n\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\t\tif ($selected == $obj->rowid)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">';\n\t\t\t\t\t}\n\t\t\t\t\tprint trim($obj->label);\n\t\t\t\t\tif ($showcurrency) print ' ('.$obj->currency_code.')';\n\t\t\t\t\tif ($statut == 2 && $obj->status == 1) print ' ('.$langs->trans(\"Closed\").')';\n\t\t\t\t\tprint '</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\tprint \"</select>\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint $langs->trans(\"NoActiveBankAccountDefined\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *    Display form to select bank account\n\t *\n\t *    @param\tstring\t$page        Page\n\t *    @param    int\t\t$selected    Id of bank account\n\t *    @param    string\t$htmlname    Name of select html field\n\t *    @param    int\t\t$addempty    1=Add an empty value in list, 2=Add an empty value in list only if there is more than 2 entries.\n\t *    @return\tvoid\n\t */\n\tfunction formSelectAccount($page, $selected='', $htmlname='fk_account', $addempty=0)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\") {\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setbankaccount\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$this->select_comptes($selected, $htmlname, 0, '', $addempty);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t} else {\n\n\t\t\t$langs->load('banks');\n\n\t\t\tif ($selected) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT .'/compta/bank/class/account.class.php';\n\t\t\t\t$bankstatic=new Account($this->db);\n\t\t\t\t$bankstatic->fetch($selected);\n\t\t\t\tprint $bankstatic->getNomUrl(1);\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *    Return list of categories having choosed type\n\t *\n\t *    @param\tstring|int\t$type\t\t\t\tType of category ('customer', 'supplier', 'contact', 'product', 'member'). Old mode (0, 1, 2, ...) is deprecated.\n\t *    @param    string\t\t$selected    \t\tId of category preselected or 'auto' (autoselect category if there is only one element)\n\t *    @param    string\t\t$htmlname\t\t\tHTML field name\n\t *    @param    int\t\t\t$maxlength      \tMaximum length for labels\n\t *    @param    int\t\t\t$excludeafterid \tExclude all categories after this leaf in category tree.\n\t *    @param\tint\t\t\t$outputmode\t\t\t0=HTML select string, 1=Array\n\t *    @return\tstring\n\t *    @see select_categories\n\t */\n\tfunction select_all_categories($type, $selected='', $htmlname=\"parent\", $maxlength=64, $excludeafterid=0, $outputmode=0)\n\t{\n\t\tglobal $conf, $langs;\n\t\t$langs->load(\"categories\");\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\n\t\t// For backward compatibility\n\t\tif (is_numeric($type))\n\t\t{\n\t\t\tdol_syslog(__METHOD__ . ': using numeric value for parameter type is deprecated. Use string code instead.', LOG_WARNING);\n\t\t}\n\n\t\tif ($type === Categorie::TYPE_BANK_LINE)\n\t\t{\n\t\t\t// TODO Move this into common category feature\n\t\t\t$categids=array();\n\t\t\t$sql = \"SELECT c.label, c.rowid\";\n\t\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"bank_categ as c\";\n\t\t\t$sql.= \" WHERE entity = \".$conf->entity;\n\t\t\t$sql.= \" ORDER BY c.label\";\n\t\t\t$result = $this->db->query($sql);\n\t\t\tif ($result)\n\t\t\t{\n\t\t\t\t$num = $this->db->num_rows($result);\n\t\t\t\t$i = 0;\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$objp = $this->db->fetch_object($result);\n\t\t\t\t\tif ($objp) $cate_arbo[$objp->rowid]=array('id'=>$objp->rowid, 'fulllabel'=>$objp->label);\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t\t$this->db->free($result);\n\t\t\t}\n\t\t\telse dol_print_error($this->db);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$cat = new Categorie($this->db);\n\t\t\t$cate_arbo = $cat->get_full_arbo($type, $excludeafterid);\n\t\t}\n\n\t\t$output = '<select class=\"flat\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\t\t$outarray=array();\n\t\tif (is_array($cate_arbo))\n\t\t{\n\t\t\tif (! count($cate_arbo)) $output.= '<option value=\"-1\" disabled>'.$langs->trans(\"NoCategoriesDefined\").'</option>';\n\t\t\telse\n\t\t\t{\n\t\t\t\t$output.= '<option value=\"-1\">&nbsp;</option>';\n\t\t\t\tforeach($cate_arbo as $key => $value)\n\t\t\t\t{\n\t\t\t\t\tif ($cate_arbo[$key]['id'] == $selected || ($selected == 'auto' && count($cate_arbo) == 1))\n\t\t\t\t\t{\n\t\t\t\t\t\t$add = 'selected ';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$add = '';\n\t\t\t\t\t}\n\t\t\t\t\t$output.= '<option '.$add.'value=\"'.$cate_arbo[$key]['id'].'\">'.dol_trunc($cate_arbo[$key]['fulllabel'],$maxlength,'middle').'</option>';\n\n\t\t\t\t\t$outarray[$cate_arbo[$key]['id']] = $cate_arbo[$key]['fulllabel'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$output.= '</select>';\n\t\t$output.= \"\\n\";\n\n\t\tif ($outputmode) return $outarray;\n\t\treturn $output;\n\t}\n\n\t/**\n\t *     Show a confirmation HTML form or AJAX popup\n\t *\n\t *     @param\tstring\t\t$page        \t   \tUrl of page to call if confirmation is OK\n\t *     @param\tstring\t\t$title       \t   \tTitle\n\t *     @param\tstring\t\t$question    \t   \tQuestion\n\t *     @param \tstring\t\t$action      \t   \tAction\n\t *\t   @param\tarray\t\t$formquestion\t   \tAn array with forms complementary inputs\n\t * \t   @param\tstring\t\t$selectedchoice\t\t\"\" or \"no\" or \"yes\"\n\t * \t   @param\tint\t\t\t$useajax\t\t   \t0=No, 1=Yes, 2=Yes but submit page with &confirm=no if choice is No, 'xxx'=preoutput confirm box with div id=dialog-confirm-xxx\n\t *     @param\tint\t\t\t$height          \tForce height of box\n\t *     @param\tint\t\t\t$width\t\t\t\tForce width of box\n\t *     @return \tvoid\n\t *     @deprecated\n\t *     @see formconfirm()\n\t */\n\tfunction form_confirm($page, $title, $question, $action, $formquestion='', $selectedchoice=\"\", $useajax=0, $height=170, $width=500)\n\t{\n\t\tprint $this->formconfirm($page, $title, $question, $action, $formquestion, $selectedchoice, $useajax, $height, $width);\n\t}\n\n\t/**\n\t *     Show a confirmation HTML form or AJAX popup.\n\t *     Easiest way to use this is with useajax=1.\n\t *     If you use useajax='xxx', you must also add jquery code to trigger opening of box (with correct parameters)\n\t *     just after calling this method. For example:\n\t *       print '<script type=\"text/javascript\">'.\"\\n\";\n\t *       print 'jQuery(document).ready(function() {'.\"\\n\";\n\t *       print 'jQuery(\".xxxlink\").click(function(e) { jQuery(\"#aparamid\").val(jQuery(this).attr(\"rel\")); jQuery(\"#dialog-confirm-xxx\").dialog(\"open\"); return false; });'.\"\\n\";\n\t *       print '});'.\"\\n\";\n\t *       print '</script>'.\"\\n\";\n\t *\n\t *     @param  \tstring\t\t$page        \t   \tUrl of page to call if confirmation is OK. Can contains paramaters (param 'action' and 'confirm' will be reformated)\n\t *     @param\tstring\t\t$title       \t   \tTitle\n\t *     @param\tstring\t\t$question    \t   \tQuestion\n\t *     @param \tstring\t\t$action      \t   \tAction\n\t *\t   @param  \tarray\t\t$formquestion\t   \tAn array with complementary inputs to add into forms: array(array('label'=> ,'type'=> , ))\n\t *\t\t\t\t\t\t\t\t\t\t\t\ttype can be 'hidden', 'text', 'password', 'checkbox', 'radio', 'date', ...\n\t * \t   @param  \tstring\t\t$selectedchoice  \t\"\" or \"no\" or \"yes\"\n\t * \t   @param  \tint\t\t\t$useajax\t\t   \t0=No, 1=Yes, 2=Yes but submit page with &confirm=no if choice is No, 'xxx'=Yes and preoutput confirm box with div id=dialog-confirm-xxx\n\t *     @param  \tint\t\t\t$height          \tForce height of box\n\t *     @param\tint\t\t\t$width\t\t\t\tForce width of box ('999' or '90%'). Ignored and forced to 90% on smartphones.\n\t *     @param\tint\t\t\t$disableformtag\t\t1=Disable form tag. Can be used if we are already inside a <form> section.\n\t *     @return \tstring      \t    \t\t\tHTML ajax code if a confirm ajax popup is required, Pure HTML code if it's an html form\n\t */\n\tfunction formconfirm($page, $title, $question, $action, $formquestion='', $selectedchoice='', $useajax=0, $height=200, $width=500, $disableformtag=0)\n\t{\n\t\tglobal $langs,$conf;\n\t\tglobal $useglobalvars;\n\n\t\t$more='';\n\t\t$formconfirm='';\n\t\t$inputok=array();\n\t\t$inputko=array();\n\n\t\t// Clean parameters\n\t\t$newselectedchoice=empty($selectedchoice)?\"no\":$selectedchoice;\n\t\tif ($conf->browser->layout == 'phone') $width='95%';\n\n\t\tif (is_array($formquestion) && ! empty($formquestion))\n\t\t{\n\t\t\t// First add hidden fields and value\n\t\t\tforeach ($formquestion as $key => $input)\n\t\t\t{\n\t\t\t\tif (is_array($input) && ! empty($input))\n\t\t\t\t{\n\t\t\t\t\tif ($input['type'] == 'hidden')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<input type=\"hidden\" id=\"'.$input['name'].'\" name=\"'.$input['name'].'\" value=\"'.dol_escape_htmltag($input['value']).'\">'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Now add questions\n\t\t\t$more.='<table class=\"paddingtopbottomonly\" width=\"100%\">'.\"\\n\";\n\t\t\t$more.='<tr><td colspan=\"3\">'.(! empty($formquestion['text'])?$formquestion['text']:'').'</td></tr>'.\"\\n\";\n\t\t\tforeach ($formquestion as $key => $input)\n\t\t\t{\n\t\t\t\tif (is_array($input) && ! empty($input))\n\t\t\t\t{\n\t\t\t\t\t$size=(! empty($input['size'])?' size=\"'.$input['size'].'\"':'');\n\t\t\t\t\t$moreattr=(! empty($input['moreattr'])?' '.$input['moreattr']:'');\n\t\t\t\t\t$morecss=(! empty($input['morecss'])?' '.$input['morecss']:'');\n\n\t\t\t\t\tif ($input['type'] == 'text')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<tr><td>'.$input['label'].'</td><td colspan=\"2\" align=\"left\"><input type=\"text\" class=\"flat'.$morecss.'\" id=\"'.$input['name'].'\" name=\"'.$input['name'].'\"'.$size.' value=\"'.$input['value'].'\"'.$moreattr.' /></td></tr>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse if ($input['type'] == 'password')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<tr><td>'.$input['label'].'</td><td colspan=\"2\" align=\"left\"><input type=\"password\" class=\"flat'.$morecss.'\" id=\"'.$input['name'].'\" name=\"'.$input['name'].'\"'.$size.' value=\"'.$input['value'].'\"'.$moreattr.' /></td></tr>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse if ($input['type'] == 'select')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<tr><td>';\n\t\t\t\t\t\tif (! empty($input['label'])) $more.=$input['label'].'</td><td valign=\"top\" colspan=\"2\" align=\"left\">';\n\t\t\t\t\t\t$more.=$this->selectarray($input['name'],$input['values'],$input['default'],1,0,0,$moreattr,0,0,0,'',$morecss);\n\t\t\t\t\t\t$more.='</td></tr>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse if ($input['type'] == 'checkbox')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<tr>';\n\t\t\t\t\t\t$more.='<td>'.$input['label'].' </td><td align=\"left\">';\n\t\t\t\t\t\t$more.='<input type=\"checkbox\" class=\"flat'.$morecss.'\" id=\"'.$input['name'].'\" name=\"'.$input['name'].'\"'.$moreattr;\n\t\t\t\t\t\tif (! is_bool($input['value']) && $input['value'] != 'false') $more.=' checked';\n\t\t\t\t\t\tif (is_bool($input['value']) && $input['value']) $more.=' checked';\n\t\t\t\t\t\tif (isset($input['disabled'])) $more.=' disabled';\n\t\t\t\t\t\t$more.=' /></td>';\n\t\t\t\t\t\t$more.='<td align=\"left\">&nbsp;</td>';\n\t\t\t\t\t\t$more.='</tr>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t\telse if ($input['type'] == 'radio')\n\t\t\t\t\t{\n\t\t\t\t\t\t$i=0;\n\t\t\t\t\t\tforeach($input['values'] as $selkey => $selval)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$more.='<tr>';\n\t\t\t\t\t\t\tif ($i==0) $more.='<td class=\"tdtop\">'.$input['label'].'</td>';\n\t\t\t\t\t\t\telse $more.='<td>&nbsp;</td>';\n\t\t\t\t\t\t\t$more.='<td width=\"20\"><input type=\"radio\" class=\"flat'.$morecss.'\" id=\"'.$input['name'].'\" name=\"'.$input['name'].'\" value=\"'.$selkey.'\"'.$moreattr;\n\t\t\t\t\t\t\tif ($input['disabled']) $more.=' disabled';\n\t\t\t\t\t\t\t$more.=' /></td>';\n\t\t\t\t\t\t\t$more.='<td align=\"left\">';\n\t\t\t\t\t\t\t$more.=$selval;\n\t\t\t\t\t\t\t$more.='</td></tr>'.\"\\n\";\n\t\t\t\t\t\t\t$i++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if ($input['type'] == 'date')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<tr><td>'.$input['label'].'</td>';\n\t\t\t\t\t\t$more.='<td colspan=\"2\" align=\"left\">';\n\t\t\t\t\t\t$more.=$this->select_date($input['value'],$input['name'],0,0,0,'',1,0,1);\n\t\t\t\t\t\t$more.='</td></tr>'.\"\\n\";\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'day');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'month');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'year');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'hour');\n\t\t\t\t\t\t$formquestion[] = array('name'=>$input['name'].'min');\n\t\t\t\t\t}\n\t\t\t\t\telse if ($input['type'] == 'other')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<tr><td>';\n\t\t\t\t\t\tif (! empty($input['label'])) $more.=$input['label'].'</td><td colspan=\"2\" align=\"left\">';\n\t\t\t\t\t\t$more.=$input['value'];\n\t\t\t\t\t\t$more.='</td></tr>'.\"\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\telse if ($input['type'] == 'onecolumn')\n\t\t\t\t\t{\n\t\t\t\t\t\t$more.='<tr><td colspan=\"3\" align=\"left\">';\n\t\t\t\t\t\t$more.=$input['value'];\n\t\t\t\t\t\t$more.='</td></tr>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$more.='</table>'.\"\\n\";\n\t\t}\n\n\t\t// JQUI method dialog is broken with jmobile, we use standard HTML.\n\t\t// Note: When using dol_use_jmobile or no js, you must also check code for button use a GET url with action=xxx and check that you also output the confirm code when action=xxx\n\t\t// See page product/card.php for example\n\t\tif (! empty($conf->dol_use_jmobile)) $useajax=0;\n\t\tif (empty($conf->use_javascript_ajax)) $useajax=0;\n\n\t\tif ($useajax)\n\t\t{\n\t\t\t$autoOpen=true;\n\t\t\t$dialogconfirm='dialog-confirm';\n\t\t\t$button='';\n\t\t\tif (! is_numeric($useajax))\n\t\t\t{\n\t\t\t\t$button=$useajax;\n\t\t\t\t$useajax=1;\n\t\t\t\t$autoOpen=false;\n\t\t\t\t$dialogconfirm.='-'.$button;\n\t\t\t}\n\t\t\t$pageyes=$page.(preg_match('/\\?/',$page)?'&':'?').'action='.$action.'&confirm=yes';\n\t\t\t$pageno=($useajax == 2 ? $page.(preg_match('/\\?/',$page)?'&':'?').'confirm=no':'');\n\t\t\t// Add input fields into list of fields to read during submit (inputok and inputko)\n\t\t\tif (is_array($formquestion))\n\t\t\t{\n\t\t\t\tforeach ($formquestion as $key => $input)\n\t\t\t\t{\n\t\t\t\t\t//print \"xx \".$key.\" rr \".is_array($input).\"<br>\\n\";\n\t\t\t\t\tif (is_array($input) && isset($input['name'])) array_push($inputok,$input['name']);\n\t\t\t\t\tif (isset($input['inputko']) && $input['inputko'] == 1) array_push($inputko,$input['name']);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Show JQuery confirm box. Note that global var $useglobalvars is used inside this template\n\t\t\t$formconfirm.= '<div id=\"'.$dialogconfirm.'\" title=\"'.dol_escape_htmltag($title).'\" style=\"display: none;\">';\n\t\t\tif (! empty($more)) {\n\t\t\t\t$formconfirm.= '<div class=\"confirmquestions\">'.$more.'</div>';\n\t\t\t}\n\t\t\t$formconfirm.= ($question ? '<div class=\"confirmmessage\">'.img_help('','').' '.$question . '</div>': '');\n\t\t\t$formconfirm.= '</div>'.\"\\n\";\n\n\t\t\t$formconfirm.= \"\\n<!-- begin ajax form_confirm page=\".$page.\" -->\\n\";\n\t\t\t$formconfirm.= '<script type=\"text/javascript\">'.\"\\n\";\n\t\t\t$formconfirm.= 'jQuery(document).ready(function() {\n            $(function() {\n            \t$( \"#'.$dialogconfirm.'\" ).dialog(\n            \t{\n                    autoOpen: '.($autoOpen ? \"true\" : \"false\").',';\n\t\t\t\t\tif ($newselectedchoice == 'no')\n\t\t\t\t\t{\n\t\t\t\t\t\t$formconfirm.='\n\t\t\t\t\t\topen: function() {\n            \t\t\t\t$(this).parent().find(\"button.ui-button:eq(2)\").focus();\n\t\t\t\t\t\t},';\n\t\t\t\t\t}\n\t\t\t\t\t$formconfirm.='\n                    resizable: false,\n                    height: \"'.$height.'\",\n                    width: \"'.$width.'\",\n                    modal: true,\n                    closeOnEscape: false,\n                    buttons: {\n                        \"'.dol_escape_js($langs->transnoentities(\"Yes\")).'\": function() {\n                        \tvar options=\"\";\n                        \tvar inputok = '.json_encode($inputok).';\n                         \tvar pageyes = \"'.dol_escape_js(! empty($pageyes)?$pageyes:'').'\";\n                         \tif (inputok.length>0) {\n                         \t\t$.each(inputok, function(i, inputname) {\n                         \t\t\tvar more = \"\";\n                         \t\t\tif ($(\"#\" + inputname).attr(\"type\") == \"checkbox\") { more = \":checked\"; }\n                         \t\t    if ($(\"#\" + inputname).attr(\"type\") == \"radio\") { more = \":checked\"; }\n                         \t\t\tvar inputvalue = $(\"#\" + inputname + more).val();\n                         \t\t\tif (typeof inputvalue == \"undefined\") { inputvalue=\"\"; }\n                         \t\t\toptions += \"&\" + inputname + \"=\" + inputvalue;\n                         \t\t});\n                         \t}\n                         \tvar urljump = pageyes + (pageyes.indexOf(\"?\") < 0 ? \"?\" : \"\") + options;\n                         \t//alert(urljump);\n            \t\t\t\tif (pageyes.length > 0) { location.href = urljump; }\n                            $(this).dialog(\"close\");\n                        },\n                        \"'.dol_escape_js($langs->transnoentities(\"No\")).'\": function() {\n                        \tvar options = \"\";\n                         \tvar inputko = '.json_encode($inputko).';\n                         \tvar pageno=\"'.dol_escape_js(! empty($pageno)?$pageno:'').'\";\n                         \tif (inputko.length>0) {\n                         \t\t$.each(inputko, function(i, inputname) {\n                         \t\t\tvar more = \"\";\n                         \t\t\tif ($(\"#\" + inputname).attr(\"type\") == \"checkbox\") { more = \":checked\"; }\n                         \t\t\tvar inputvalue = $(\"#\" + inputname + more).val();\n                         \t\t\tif (typeof inputvalue == \"undefined\") { inputvalue=\"\"; }\n                         \t\t\toptions += \"&\" + inputname + \"=\" + inputvalue;\n                         \t\t});\n                         \t}\n                         \tvar urljump=pageno + (pageno.indexOf(\"?\") < 0 ? \"?\" : \"\") + options;\n                         \t//alert(urljump);\n            \t\t\t\tif (pageno.length > 0) { location.href = urljump; }\n                            $(this).dialog(\"close\");\n                        }\n                    }\n                }\n                );\n\n            \tvar button = \"'.$button.'\";\n            \tif (button.length > 0) {\n                \t$( \"#\" + button ).click(function() {\n                \t\t$(\"#'.$dialogconfirm.'\").dialog(\"open\");\n        \t\t\t});\n                }\n            });\n            });\n            </script>';\n\t\t\t$formconfirm.= \"<!-- end ajax form_confirm -->\\n\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$formconfirm.= \"\\n<!-- begin form_confirm page=\".$page.\" -->\\n\";\n\n\t\t\tif (empty($disableformtag)) $formconfirm.= '<form method=\"POST\" action=\"'.$page.'\" class=\"notoptoleftroright\">'.\"\\n\";\n\n\t\t\t$formconfirm.= '<input type=\"hidden\" name=\"action\" value=\"'.$action.'\">'.\"\\n\";\n\t\t\tif (empty($disableformtag)) $formconfirm.= '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">'.\"\\n\";\n\n\t\t\t$formconfirm.= '<table width=\"100%\" class=\"valid\">'.\"\\n\";\n\n\t\t\t// Line title\n\t\t\t$formconfirm.= '<tr class=\"validtitre\"><td class=\"validtitre\" colspan=\"3\">'.img_picto('','recent').' '.$title.'</td></tr>'.\"\\n\";\n\n\t\t\t// Line form fields\n\t\t\tif ($more)\n\t\t\t{\n\t\t\t\t$formconfirm.='<tr class=\"valid\"><td class=\"valid\" colspan=\"3\">'.\"\\n\";\n\t\t\t\t$formconfirm.=$more;\n\t\t\t\t$formconfirm.='</td></tr>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Line with question\n\t\t\t$formconfirm.= '<tr class=\"valid\">';\n\t\t\t$formconfirm.= '<td class=\"valid\">'.$question.'</td>';\n\t\t\t$formconfirm.= '<td class=\"valid\">';\n\t\t\t$formconfirm.= $this->selectyesno(\"confirm\",$newselectedchoice);\n\t\t\t$formconfirm.= '</td>';\n\t\t\t$formconfirm.= '<td class=\"valid\" align=\"center\"><input class=\"button valignmiddle\" type=\"submit\" value=\"'.$langs->trans(\"Validate\").'\"></td>';\n\t\t\t$formconfirm.= '</tr>'.\"\\n\";\n\n\t\t\t$formconfirm.= '</table>'.\"\\n\";\n\n\t\t\tif (empty($disableformtag)) $formconfirm.= \"</form>\\n\";\n\t\t\t$formconfirm.= '<br>';\n\n\t\t\t$formconfirm.= \"<!-- end form_confirm -->\\n\";\n\t\t}\n\n\t\treturn $formconfirm;\n\t}\n\n\n\t/**\n\t *    Show a form to select a project\n\t *\n\t *    @param\tint\t\t$page        \t\tPage\n\t *    @param\tint\t\t$socid       \t\tId third party (-1=all, 0=only projects not linked to a third party, id=projects not linked or linked to third party id)\n\t *    @param    int\t\t$selected    \t\tId pre-selected project\n\t *    @param    string\t$htmlname    \t\tName of select field\n\t *    @param\tint\t\t$discard_closed\t\tDiscard closed projects (0=Keep,1=hide completely except $selected,2=Disable)\n\t *    @param\tint\t\t$maxlength\t\t\tMax length\n\t *    @param\tint\t\t$forcefocus\t\t\tForce focus on field (works with javascript only)\n\t *    @param    int     $nooutput           No print is done. String is returned.\n\t *    @return\tstring                      Return html content\n\t */\n\tfunction form_project($page, $socid, $selected='', $htmlname='projectid', $discard_closed=0, $maxlength=20, $forcefocus=0, $nooutput=0)\n\t{\n\t\tglobal $langs;\n\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/project.lib.php';\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formprojet.class.php';\n\n\t\t$out='';\n\n\t\t$formproject=new FormProjets($this->db);\n\n\t\t$langs->load(\"project\");\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\t$out.=\"\\n\";\n\t\t\t$out.='<form method=\"post\" action=\"'.$page.'\">';\n\t\t\t$out.='<input type=\"hidden\" name=\"action\" value=\"classin\">';\n\t\t\t$out.='<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$out.=$formproject->select_projects($socid, $selected, $htmlname, $maxlength, 0, 1, $discard_closed, $forcefocus, 0, 0, '', 1);\n\t\t\t$out.='<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t$out.='</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\t$projet = new Project($this->db);\n\t\t\t\t$projet->fetch($selected);\n\t\t\t\t//print '<a href=\"'.DOL_URL_ROOT.'/projet/card.php?id='.$selected.'\">'.$projet->title.'</a>';\n\t\t\t\t$out.=$projet->getNomUrl(0,'',1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$out.=\"&nbsp;\";\n\t\t\t}\n\t\t}\n\n\t\tif (empty($nooutput))\n\t\t{\n\t\t\tprint $out;\n\t\t\treturn '';\n\t\t}\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tShow a form to select payment conditions\n\t *\n\t *  @param\tint\t\t$page        \tPage\n\t *  @param  string\t$selected    \tId condition pre-selectionne\n\t *  @param  string\t$htmlname    \tName of select html field\n\t *\t@param\tint\t\t$addempty\t\tAdd empty entry\n\t *  @return\tvoid\n\t */\n\tfunction form_conditions_reglement($page, $selected='', $htmlname='cond_reglement_id', $addempty=0)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setconditions\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$this->select_conditions_paiements($selected,$htmlname,-1,$addempty);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\t$this->load_cache_conditions_paiements();\n\t\t\t\tprint $this->cache_conditions_paiements[$selected]['label'];\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *  Show a form to select a delivery delay\n\t *\n\t *  @param  int\t\t$page        \tPage\n\t *  @param  string\t$selected    \tId condition pre-selectionne\n\t *  @param  string\t$htmlname    \tName of select html field\n\t *\t@param\tint\t\t$addempty\t\tAjoute entree vide\n\t *  @return\tvoid\n\t */\n\tfunction form_availability($page, $selected='', $htmlname='availability', $addempty=0)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setavailability\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$this->selectAvailabilityDelay($selected,$htmlname,-1,$addempty);\n\t\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\t$this->load_cache_availability();\n\t\t\t\tprint $this->cache_availability[$selected]['label'];\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\tOutput HTML form to select list of input reason (events that triggered an object creation, like after sending an emailing, making an advert, ...)\n\t *  List found into table c_input_reason loaded by loadCacheInputReason\n\t *\n\t *  @param  string\t$page        \tPage\n\t *  @param  string\t$selected    \tId condition pre-selectionne\n\t *  @param  string\t$htmlname    \tName of select html field\n\t *\t@param\tint\t\t$addempty\t\tAdd empty entry\n\t *  @return\tvoid\n\t */\n\tfunction formInputReason($page, $selected='', $htmlname='demandreason', $addempty=0)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setdemandreason\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$this->selectInputReason($selected,$htmlname,-1,$addempty);\n\t\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\t$this->loadCacheInputReason();\n\t\t\t\tforeach ($this->cache_demand_reason as $key => $val)\n\t\t\t\t{\n\t\t\t\t\tif ($val['id'] == $selected)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint $val['label'];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *    Show a form + html select a date\n\t *\n\t *    @param\tstring\t\t$page        \tPage\n\t *    @param\tstring\t\t$selected    \tDate preselected\n\t *    @param    string\t\t$htmlname    \tHtml name of date input fields or 'none'\n\t *    @param    int\t\t\t$displayhour \tDisplay hour selector\n\t *    @param    int\t\t\t$displaymin\t\tDisplay minutes selector\n\t *    @param\tint\t\t\t$nooutput\t\t1=No print output, return string\n\t *    @return\tstring\n\t *    @see\t\tselect_date\n\t */\n\tfunction form_date($page, $selected, $htmlname, $displayhour=0, $displaymin=0, $nooutput=0)\n\t{\n\t\tglobal $langs;\n\n\t\t$ret='';\n\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\t$ret.='<form method=\"post\" action=\"'.$page.'\" name=\"form'.$htmlname.'\">';\n\t\t\t$ret.='<input type=\"hidden\" name=\"action\" value=\"set'.$htmlname.'\">';\n\t\t\t$ret.='<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$ret.='<table class=\"nobordernopadding\" cellpadding=\"0\" cellspacing=\"0\">';\n\t\t\t$ret.='<tr><td>';\n\t\t\t$ret.=$this->select_date($selected,$htmlname,$displayhour,$displaymin,1,'form'.$htmlname,1,0,1);\n\t\t\t$ret.='</td>';\n\t\t\t$ret.='<td align=\"left\"><input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\t$ret.='</tr></table></form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($displayhour) $ret.=dol_print_date($selected,'dayhour');\n\t\t\telse $ret.=dol_print_date($selected,'day');\n\t\t}\n\n\t\tif (empty($nooutput)) print $ret;\n\t\treturn $ret;\n\t}\n\n\n\t/**\n\t *  Show a select form to choose a user\n\t *\n\t *  @param\tstring\t$page        \tPage\n\t *  @param  string\t$selected    \tId of user preselected\n\t *  @param  string\t$htmlname    \tName of input html field. If 'none', we just output the user link.\n\t *  @param  array\t$exclude\t\tList of users id to exclude\n\t *  @param  array\t$include        List of users id to include\n\t *  @return\tvoid\n\t */\n\tfunction form_users($page, $selected='', $htmlname='userid', $exclude='', $include='')\n\t{\n\t\tglobal $langs;\n\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\" name=\"form'.$htmlname.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set'.$htmlname.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\tprint $this->select_dolusers($selected,$htmlname,1,$exclude,0,$include);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT .'/user/class/user.class.php';\n\t\t\t\t$theuser=new User($this->db);\n\t\t\t\t$theuser->fetch($selected);\n\t\t\t\tprint $theuser->getNomUrl(1);\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t *    Show form with payment mode\n\t *\n\t *    @param\tstring\t$page        \tPage\n\t *    @param    int\t\t$selected    \tId mode pre-selectionne\n\t *    @param    string\t$htmlname    \tName of select html field\n\t *    @param  \tstring\t$filtertype\t\tTo filter on field type in llx_c_paiement (array('code'=>xx,'label'=>zz))\n\t *    @param    int     $active         Active or not, -1 = all\n\t *    @return\tvoid\n\t */\n\tfunction form_modes_reglement($page, $selected='', $htmlname='mode_reglement_id', $filtertype='', $active=1)\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setmode\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t$this->select_types_paiements($selected,$htmlname,$filtertype,0,0,0,0,$active);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\t$this->load_cache_types_paiements();\n\t\t\t\tprint $this->cache_types_paiements[$selected]['label'];\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *    Show form with multicurrency code\n\t *\n\t *    @param\tstring\t$page        \tPage\n\t *    @param    string\t$selected    \tcode pre-selectionne\n\t *    @param    string\t$htmlname    \tName of select html field\n\t *    @return\tvoid\n\t */\n\tfunction form_multicurrency_code($page, $selected='', $htmlname='multicurrency_code')\n\t{\n\t\tglobal $langs;\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setmulticurrencycode\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\tprint $this->selectMultiCurrency($selected, $htmlname, 0);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_include_once('/core/lib/company.lib.php');\n\t\t\tprint !empty($selected) ? currency_name($selected,1) : '&nbsp;';\n\t\t}\n\t}\n\n\t/**\n\t *    Show form with multicurrency rate\n\t *\n\t *    @param\tstring\t$page        \tPage\n\t *    @param    double\t$rate\t    \tCurrent rate\n\t *    @param    string\t$htmlname    \tName of select html field\n\t *    @param    string  $currency       Currency code to explain the rate\n\t *    @return\tvoid\n\t */\n\tfunction form_multicurrency_rate($page, $rate='', $htmlname='multicurrency_tx', $currency='')\n\t{\n\t\tglobal $langs, $mysoc, $conf;\n\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"POST\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setmulticurrencyrate\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\tprint '<input type=\"text\" name=\"'.$htmlname.'\" value=\"'.(!empty($rate) ? price($rate) : 1).'\" size=\"10\" /> ';\n\t\t\tprint '<select name=\"calculation_mode\">';\n\t\t\tprint '<option value=\"1\">'.$currency.' > '.$conf->currency.'</option>';\n\t\t\tprint '<option value=\"2\">'.$conf->currency.' > '.$currency.'</option>';\n\t\t\tprint '</select> ';\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (! empty($rate))\n\t\t\t{\n\t\t\t\tprint price($rate, 1, $langs, 1, 0);\n\t\t\t\tif ($currency && $rate != 1) print ' &nbsp; ('.price($rate, 1, $langs, 1, 0).' '.$currency.' = 1 '.$conf->currency.')';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint 1;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t *\tShow a select box with available absolute discounts\n\t *\n\t *  @param  string\t$page        \tPage URL where form is shown\n\t *  @param  int\t\t$selected    \tValue pre-selected\n\t *\t@param  string\t$htmlname    \tName of SELECT component. If 'none', not changeable. Example 'remise_id'.\n\t *\t@param\tint\t\t$socid\t\t\tThird party id\n\t * \t@param\tfloat\t$amount\t\t\tTotal amount available\n\t * \t@param\tstring\t$filter\t\t\tSQL filter on discounts\n\t * \t@param\tint\t\t$maxvalue\t\tMax value for lines that can be selected\n\t *  @param  string\t$more           More string to add\n\t *  @param  int     $hidelist       1=Hide list\n\t *  @return\tvoid\n\t */\n\tfunction form_remise_dispo($page, $selected, $htmlname, $socid, $amount, $filter='', $maxvalue=0, $more='', $hidelist=0)\n\t{\n\t\tglobal $conf,$langs;\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setabsolutediscount\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\tprint '<div class=\"inline-block\">';\n\t\t\tif (! empty($conf->global->FACTURE_DEPOSITS_ARE_JUST_PAYMENTS))\n\t\t\t{\n\t\t\t\tif (! $filter || $filter==\"fk_facture_source IS NULL\") print $langs->trans(\"CompanyHasAbsoluteDiscount\",price($amount,0,$langs,0,0,-1,$conf->currency));    // If we want deposit to be substracted to payments only and not to total of final invoice\n\t\t\t\telse print $langs->trans(\"CompanyHasCreditNote\",price($amount,0,$langs,0,0,-1,$conf->currency));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (! $filter || $filter==\"fk_facture_source IS NULL OR (fk_facture_source IS NOT NULL AND (description LIKE '(DEPOSIT)%' OR description LIKE '(EXCESS RECEIVED)%'))\") print $langs->trans(\"CompanyHasAbsoluteDiscount\",price($amount,0,$langs,0,0,-1,$conf->currency));\n\t\t\t\telse print $langs->trans(\"CompanyHasCreditNote\",price($amount,0,$langs,0,0,-1,$conf->currency));\n\t\t\t}\n\t\t\tif (empty($hidelist)) print ': ';\n\t\t\tprint '</div>';\n\t\t\tif (empty($hidelist))\n\t\t\t{\n\t\t\t\tprint '<div class=\"inline-block\" style=\"padding-right: 10px\">';\n\t\t\t\t$newfilter='fk_facture IS NULL AND fk_facture_line IS NULL';\t// Remises disponibles\n\t\t\t\tif ($filter) $newfilter.=' AND ('.$filter.')';\n\t\t\t\t$nbqualifiedlines=$this->select_remises($selected,$htmlname,$newfilter,$socid,$maxvalue);\n\t\t\t\tif ($nbqualifiedlines > 0)\n\t\t\t\t{\n\t\t\t\t\tprint ' &nbsp; <input type=\"submit\" class=\"button\" value=\"'.dol_escape_htmltag($langs->trans(\"UseLine\")).'\"';\n\t\t\t\t\tif ($filter && $filter != \"fk_facture_source IS NULL OR (fk_facture_source IS NOT NULL AND description LIKE '(DEPOSIT)%')\") print ' title=\"'.$langs->trans(\"UseCreditNoteInInvoicePayment\").'\"';\n\t\t\t\t\tprint '>';\n\t\t\t\t}\n\t\t\t\tprint '</div>';\n\t\t\t}\n\t\t\tif ($more)\n\t\t\t{\n\t\t\t\tprint '<div class=\"inline-block\">';\n\t\t\t\tprint $more;\n\t\t\t\tprint '</div>';\n\t\t\t}\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\tprint $selected;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint \"0\";\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t *    Show forms to select a contact\n\t *\n\t *    @param\tstring\t\t$page        \tPage\n\t *    @param\tSociete\t\t$societe\t\tFilter on third party\n\t *    @param    int\t\t\t$selected    \tId contact pre-selectionne\n\t *    @param    string\t\t$htmlname    \tName of HTML select. If 'none', we just show contact link.\n\t *    @return\tvoid\n\t */\n\tfunction form_contacts($page, $societe, $selected='', $htmlname='contactid')\n\t{\n\t\tglobal $langs, $conf;\n\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set_contact\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\tprint '<table class=\"nobordernopadding\" cellpadding=\"0\" cellspacing=\"0\">';\n\t\t\tprint '<tr><td>';\n\t\t\t$num=$this->select_contacts($societe->id, $selected, $htmlname);\n\t\t\tif ($num==0)\n\t\t\t{\n\t\t\t\t$addcontact = (! empty($conf->global->SOCIETE_ADDRESSES_MANAGEMENT) ? $langs->trans(\"AddContact\") : $langs->trans(\"AddContactAddress\"));\n\t\t\t\tprint '<a href=\"'.DOL_URL_ROOT.'/contact/card.php?socid='.$societe->id.'&amp;action=create&amp;backtoreferer=1\">'.$addcontact.'</a>';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t\tprint '<td align=\"left\"><input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\"></td>';\n\t\t\tprint '</tr></table></form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT .'/contact/class/contact.class.php';\n\t\t\t\t$contact=new Contact($this->db);\n\t\t\t\t$contact->fetch($selected);\n\t\t\t\tprint $contact->getFullName($langs);\n\t\t\t} else {\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *  Output html select to select thirdparty\n\t *\n\t *  @param\tstring\t$page       \tPage\n\t *  @param  string\t$selected   \tId preselected\n\t *  @param  string\t$htmlname\t\tName of HTML select\n\t *  @param  string\t$filter         optional filters criteras\n\t *\t@param\tint\t\t$showempty\t\tAdd an empty field\n\t * \t@param\tint\t\t$showtype\t\tShow third party type in combolist (customer, prospect or supplier)\n\t * \t@param\tint\t\t$forcecombo\t\tForce to use combo box\n\t *  @param\tarray\t$events\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n\t *  @return\tvoid\n\t */\n\tfunction form_thirdparty($page, $selected='', $htmlname='socid', $filter='',$showempty=0, $showtype=0, $forcecombo=0, $events=array())\n\t{\n\t\tglobal $langs;\n\n\t\tif ($htmlname != \"none\")\n\t\t{\n\t\t\tprint '<form method=\"post\" action=\"'.$page.'\">';\n\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"set_thirdparty\">';\n\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\tprint $this->select_company($selected, $htmlname, $filter, $showempty, $showtype, $forcecombo, $events);\n\t\t\tprint '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\tprint '</form>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($selected)\n\t\t\t{\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT .'/societe/class/societe.class.php';\n\t\t\t\t$soc = new Societe($this->db);\n\t\t\t\t$soc->fetch($selected);\n\t\t\t\tprint $soc->getNomUrl($langs);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint \"&nbsp;\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *    Retourne la liste des devises, dans la langue de l'utilisateur\n\t *\n\t *    @param\tstring\t$selected    preselected currency code\n\t *    @param    string\t$htmlname    name of HTML select list\n\t *    @return\tvoid\n\t */\n\tfunction select_currency($selected='',$htmlname='currency_id')\n\t{\n\t\tprint $this->selectCurrency($selected,$htmlname);\n\t}\n\n\t/**\n\t *  Retourne la liste des devises, dans la langue de l'utilisateur\n\t *\n\t *  @param\tstring\t$selected    preselected currency code\n\t *  @param  string\t$htmlname    name of HTML select list\n\t * \t@return\tstring\n\t */\n\tfunction selectCurrency($selected='',$htmlname='currency_id')\n\t{\n\t\tglobal $conf,$langs,$user;\n\n\t\t$langs->loadCacheCurrencies('');\n\n\t\t$out='';\n\n\t\tif ($selected=='euro' || $selected=='euros') $selected='EUR';   // Pour compatibilite\n\n\t\t$out.= '<select class=\"flat maxwidth200onsmartphone minwidth300\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\t\tforeach ($langs->cache_currencies as $code_iso => $currency)\n\t\t{\n\t\t\tif ($selected && $selected == $code_iso)\n\t\t\t{\n\t\t\t\t$out.= '<option value=\"'.$code_iso.'\" selected>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$out.= '<option value=\"'.$code_iso.'\">';\n\t\t\t}\n\t\t\t$out.= $currency['label'];\n\t\t\t$out.= ' ('.$langs->getCurrencySymbol($code_iso).')';\n\t\t\t$out.= '</option>';\n\t\t}\n\t\t$out.= '</select>';\n\t\tif ($user->admin) $out.= info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\n\t\t// Make select dynamic\n\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t$out .= ajax_combobox($htmlname);\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tReturn array of currencies in user language\n\t *\n\t *  @param\tstring\t$selected    preselected currency code\n\t *  @param  string\t$htmlname    name of HTML select list\n\t *  @param  integer\t$useempty    1=Add empty line\n\t * \t@return\tstring\n\t */\n\tfunction selectMultiCurrency($selected='', $htmlname='multicurrency_code', $useempty=0)\n\t{\n\t\tglobal $db,$conf,$langs,$user;\n\n\t\t$langs->loadCacheCurrencies('');        // Load ->cache_currencies\n\n\t\t$TCurrency = array();\n\n\t\t$sql = 'SELECT code FROM '.MAIN_DB_PREFIX.'multicurrency';\n\t\t$sql.= \" WHERE entity IN ('\".getEntity('mutlicurrency').\"')\";\n\t\t$resql = $db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\twhile ($obj = $db->fetch_object($resql)) $TCurrency[$obj->code] = $obj->code;\n\t\t}\n\n\t\t$out='';\n\t\t$out.= '<select class=\"flat\" name=\"'.$htmlname.'\" id=\"'.$htmlname.'\">';\n\t\tif ($useempty) $out .= '<option value=\"\"></option>';\n\t\t// If company current currency not in table, we add it into list. Should always be available.\n\t\tif (! in_array($conf->currency, $TCurrency))\n\t\t{\n\t\t\t$TCurrency[$conf->currency] = $conf->currency;\n\t\t}\n\t\tif (count($TCurrency) > 0)\n\t\t{\n\t\t\tforeach ($langs->cache_currencies as $code_iso => $currency)\n\t\t\t{\n\t\t\t\tif (isset($TCurrency[$code_iso]))\n\t\t\t\t{\n\t\t\t\t\tif (!empty($selected) && $selected == $code_iso) $out.= '<option value=\"'.$code_iso.'\" selected=\"selected\">';\n\t\t\t\t\telse $out.= '<option value=\"'.$code_iso.'\">';\n\n\t\t\t\t\t$out.= $currency['label'];\n\t\t\t\t\t$out.= ' ('.$langs->getCurrencySymbol($code_iso).')';\n\t\t\t\t\t$out.= '</option>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\t$out.= '</select>';\n\t\t// Make select dynamic\n\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t$out.= ajax_combobox($htmlname);\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tLoad into the cache vat rates of a country\n\t *\n\t *\t@param\tstring\t$country_code\t\tCountry code with quotes (\"'CA'\", or \"'CA,IN,...'\")\n\t *\t@return\tint\t\t\t\t\t\t\tNb of loaded lines, 0 if already loaded, <0 if KO\n\t */\n\tfunction load_cache_vatrates($country_code)\n\t{\n\t\tglobal $langs;\n\n\t\t$num = count($this->cache_vatrates);\n\t\tif ($num > 0) return $num;    // Cache already loaded\n\n\t\tdol_syslog(__METHOD__, LOG_DEBUG);\n\n\t\t$sql  = \"SELECT DISTINCT t.rowid, t.code, t.taux, t.localtax1, t.localtax1_type, t.localtax2, t.localtax2_type, t.recuperableonly\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t$sql.= \" WHERE t.fk_pays = c.rowid\";\n\t\t$sql.= \" AND t.active > 0\";\n\t\t$sql.= \" AND c.code IN (\".$country_code.\")\";\n\t\t$sql.= \" ORDER BY t.code ASC, t.taux ASC, t.recuperableonly ASC\";\n\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\tfor ($i = 0; $i < $num; $i++)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$this->cache_vatrates[$i]['rowid']\t= $obj->rowid;\n\t\t\t\t\t$this->cache_vatrates[$i]['code']\t= $obj->code;\n\t\t\t\t\t$this->cache_vatrates[$i]['txtva']\t= $obj->taux;\n\t\t\t\t\t$this->cache_vatrates[$i]['nprtva']\t= $obj->recuperableonly;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax1']\t    = $obj->localtax1;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax1_type']\t= $obj->localtax1_type;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax2']\t    = $obj->localtax2;\n\t\t\t\t\t$this->cache_vatrates[$i]['localtax2_type']\t= $obj->localtax1_type;\n\n\t\t\t\t\t$this->cache_vatrates[$i]['label']\t= $obj->taux.'%'.($obj->code?' ('.$obj->code.')':'');   // Label must contains only 0-9 , . % or *\n\t\t\t\t\t$this->cache_vatrates[$i]['labelallrates'] = $obj->taux.'/'.($obj->localtax1?$obj->localtax1:'0').'/'.($obj->localtax2?$obj->localtax2:'0').($obj->code?' ('.$obj->code.')':'');\t// Must never be used as key, only label\n\t\t\t\t\t$positiverates='';\n\t\t\t\t\tif ($obj->taux) $positiverates.=($positiverates?'/':'').$obj->taux;\n\t\t\t\t\tif ($obj->localtax1) $positiverates.=($positiverates?'/':'').$obj->localtax1;\n\t\t\t\t\tif ($obj->localtax2) $positiverates.=($positiverates?'/':'').$obj->localtax2;\n\t\t\t\t\tif (empty($positiverates)) $positiverates='0';\n\t\t\t\t\t$this->cache_vatrates[$i]['labelpositiverates'] = $positiverates.($obj->code?' ('.$obj->code.')':'');\t// Must never be used as key, only label\n\t\t\t\t}\n\n\t\t\t\treturn $num;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$this->error = '<font class=\"error\">'.$langs->trans(\"ErrorNoVATRateDefinedForSellerCountry\",$country_code).'</font>';\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$this->error = '<font class=\"error\">'.$this->db->error().'</font>';\n\t\t\treturn -2;\n\t\t}\n\t}\n\n\t/**\n\t *  Output an HTML select vat rate.\n\t *  The name of this function should be selectVat. We keep bad name for compatibility purpose.\n\t *\n\t *  @param\tstring\t      $htmlname           Name of HTML select field\n\t *  @param  float|string  $selectedrate       Force preselected vat rate. Can be '8.5' or '8.5 (NOO)' for example. Use '' for no forcing.\n\t *  @param  Societe\t      $societe_vendeuse   Thirdparty seller\n\t *  @param  Societe\t      $societe_acheteuse  Thirdparty buyer\n\t *  @param  int\t\t      $idprod             Id product. O if unknown of NA.\n\t *  @param  int\t\t      $info_bits          Miscellaneous information on line (1 for NPR)\n\t *  @param  int|string    $type               ''=Unknown, 0=Product, 1=Service (Used if idprod not defined)\n\t *                  \t\t                  Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n\t *                  \t\t\t\t\t      Si le (pays vendeur = pays acheteur) alors la TVA par defaut=TVA du produit vendu. Fin de regle.\n\t *                  \t\t\t\t\t      Si (vendeur et acheteur dans Communaute europeenne) et bien vendu = moyen de transports neuf (auto, bateau, avion), TVA par defaut=0 (La TVA doit etre paye par l'acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n\t *                                            Si vendeur et acheteur dans Communaut\u00e9 europ\u00e9enne et acheteur= particulier alors TVA par d\u00e9faut=TVA du produit vendu. Fin de r\u00e8gle.\n\t *                                            Si vendeur et acheteur dans Communaut\u00e9 europ\u00e9enne et acheteur= entreprise alors TVA par d\u00e9faut=0. Fin de r\u00e8gle.\n\t *                  \t\t\t\t\t      Sinon la TVA proposee par defaut=0. Fin de regle.\n\t *  @param\tbool\t     $options_only\t\t  Return HTML options lines only (for ajax treatment)\n\t *  @param  int          $mode                0=Use vat rate as key in combo list, 1=Add VAT code after vat rate into key, -1=Use id of vat line as key\n\t *  @return\tstring\n\t */\n\tfunction load_tva($htmlname='tauxtva', $selectedrate='', $societe_vendeuse='', $societe_acheteuse='', $idprod=0, $info_bits=0, $type='', $options_only=false, $mode=0)\n\t{\n\t\tglobal $langs,$conf,$mysoc;\n\n\t\t$langs->load('errors');\n\n\t\t$return='';\n\n\t\t// Define defaultnpr, defaultttx and defaultcode\n\t\t$defaultnpr=($info_bits & 0x01);\n\t\t$defaultnpr=(preg_match('/\\*/',$selectedrate) ? 1 : $defaultnpr);\n\t\t$defaulttx=str_replace('*','',$selectedrate);\n\t\t$defaultcode='';\n\t\tif (preg_match('/\\((.*)\\)/', $defaulttx, $reg))\n\t\t{\n\t\t\t$defaultcode=$reg[1];\n\t\t\t$defaulttx=preg_replace('/\\s*\\(.*\\)/','',$defaulttx);\n\t\t}\n\t\t//var_dump($selectedrate.'-'.$defaulttx.'-'.$defaultnpr.'-'.$defaultcode);\n\n\t\t// Check parameters\n\t\tif (is_object($societe_vendeuse) && ! $societe_vendeuse->country_code)\n\t\t{\n\t\t\tif ($societe_vendeuse->id == $mysoc->id)\n\t\t\t{\n\t\t\t\t$return.= '<font class=\"error\">'.$langs->trans(\"ErrorYourCountryIsNotDefined\").'</div>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$return.= '<font class=\"error\">'.$langs->trans(\"ErrorSupplierCountryIsNotDefined\").'</div>';\n\t\t\t}\n\t\t\treturn $return;\n\t\t}\n\n\t\t//var_dump($societe_acheteuse);\n\t\t//print \"name=$name, selectedrate=$selectedrate, seller=\".$societe_vendeuse->country_code.\" buyer=\".$societe_acheteuse->country_code.\" buyer is company=\".$societe_acheteuse->isACompany().\" idprod=$idprod, info_bits=$info_bits type=$type\";\n\t\t//exit;\n\n\t\t// Define list of countries to use to search VAT rates to show\n\t\t// First we defined code_country to use to find list\n\t\tif (is_object($societe_vendeuse))\n\t\t{\n\t\t\t$code_country=\"'\".$societe_vendeuse->country_code.\"'\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$code_country=\"'\".$mysoc->country_code.\"'\";   // Pour compatibilite ascendente\n\t\t}\n\t\tif (! empty($conf->global->SERVICE_ARE_ECOMMERCE_200238EC))    // If option to have vat for end customer for services is on\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\t\t\tif (! isInEEC($societe_vendeuse) && (! is_object($societe_acheteuse) || (isInEEC($societe_acheteuse) && ! $societe_acheteuse->isACompany())))\n\t\t\t{\n\t\t\t\t// We also add the buyer\n\t\t\t\tif (is_numeric($type))\n\t\t\t\t{\n\t\t\t\t\tif ($type == 1) // We know product is a service\n\t\t\t\t\t{\n\t\t\t\t\t\t$code_country.=\",'\".$societe_acheteuse->country_code.\"'\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (! $idprod)  // We don't know type of product\n\t\t\t\t{\n\t\t\t\t\t$code_country.=\",'\".$societe_acheteuse->country_code.\"'\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$prodstatic=new Product($this->db);\n\t\t\t\t\t$prodstatic->fetch($idprod);\n\t\t\t\t\tif ($prodstatic->type == Product::TYPE_SERVICE)   // We know product is a service\n\t\t\t\t\t{\n\t\t\t\t\t\t$code_country.=\",'\".$societe_acheteuse->country_code.\"'\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now we get list\n\t\t$num = $this->load_cache_vatrates($code_country);   // If no vat defined, return -1 with message into this->error\n\n\t\tif ($num > 0)\n\t\t{\n\t\t\t// Definition du taux a pre-selectionner (si defaulttx non force et donc vaut -1 ou '')\n\t\t\tif ($defaulttx < 0 || dol_strlen($defaulttx) == 0)\n\t\t\t{\n\t\t\t\t$tmpthirdparty=new Societe($this->db);\n\t\t\t\t$defaulttx=get_default_tva($societe_vendeuse, (is_object($societe_acheteuse)?$societe_acheteuse:$tmpthirdparty), $idprod);\n\t\t\t\t$defaultnpr=get_default_npr($societe_vendeuse, (is_object($societe_acheteuse)?$societe_acheteuse:$tmpthirdparty), $idprod);\n\t\t\t\tif (empty($defaulttx)) $defaultnpr=0;\n\t\t\t}\n\n\t\t\t// Si taux par defaut n'a pu etre determine, on prend dernier de la liste.\n\t\t\t// Comme ils sont tries par ordre croissant, dernier = plus eleve = taux courant\n\t\t\tif ($defaulttx < 0 || dol_strlen($defaulttx) == 0)\n\t\t\t{\n\t\t\t\tif (empty($conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS)) $defaulttx = $this->cache_vatrates[$num-1]['txtva'];\n\t\t\t\telse $defaulttx=($conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS == 'none' ? '' : $conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS);\n\t\t\t}\n\n\t\t\t// Disabled if seller is not subject to VAT\n\t\t\t$disabled=false; $title='';\n\t\t\tif (is_object($societe_vendeuse) && $societe_vendeuse->id == $mysoc->id && $societe_vendeuse->tva_assuj == \"0\")\n\t\t\t{\n\t\t\t\t$title=' title=\"'.$langs->trans('VATIsNotUsed').'\"';\n\t\t\t\t$disabled=true;\n\t\t\t}\n\n\t\t\tif (! $options_only) $return.= '<select class=\"flat minwidth75imp\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\"'.($disabled?' disabled':'').$title.'>';\n\n\t\t\t$selectedfound=false;\n\t\t\tforeach ($this->cache_vatrates as $rate)\n\t\t\t{\n\t\t\t\t// Keep only 0 if seller is not subject to VAT\n\t\t\t\tif ($disabled && $rate['txtva'] != 0) continue;\n\n\t\t\t\t// Define key to use into select list\n\t\t\t\t$key = $rate['txtva'];\n\t\t\t\t$key.= $rate['nprtva'] ? '*': '';\n\t\t\t\tif ($mode > 0 && $rate['code']) $key.=' ('.$rate['code'].')';\n\t\t\t\tif ($mode < 0) $key = $rate['rowid'];\n\n\t\t\t\t$return.= '<option value=\"'.$key.'\"';\n\t\t\t\tif (! $selectedfound)\n\t\t\t\t{\n\t\t\t\t\tif ($defaultcode) // If defaultcode is defined, we used it in priority to select combo option instead of using rate+npr flag\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($defaultcode == $rate['code'])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$return.= ' selected';\n\t\t\t\t\t\t\t$selectedfound=true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telseif ($rate['txtva'] == $defaulttx && $rate['nprtva'] == $defaultnpr)\n\t\t\t   \t\t{\n\t\t\t   \t\t\t$return.= ' selected';\n\t\t\t   \t\t\t$selectedfound=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$return.= '>';\n\t\t\t\t//if (! empty($conf->global->MAIN_VAT_SHOW_POSITIVE_RATES))\n\t\t\t\tif ($mysoc->country_code == 'IN' || ! empty($conf->global->MAIN_VAT_LABEL_IS_POSITIVE_RATES))\n\t\t\t\t{\n\t\t\t\t\t$return.= $rate['labelpositiverates'];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$return.= vatrate($rate['label']);\n\t\t\t\t}\n\t\t\t\t//$return.=($rate['code']?' '.$rate['code']:'');\n\t\t\t\t$return.= (empty($rate['code']) && $rate['nprtva']) ? ' *': '';         // We show the *  (old behaviour only if new vat code is not used)\n\n\t\t\t\t$return.= '</option>';\n\t\t\t}\n\n\t\t\tif (! $options_only) $return.= '</select>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$return.= $this->error;\n\t\t}\n\n\t\t$this->num = $num;\n\t\treturn $return;\n\t}\n\n\n\t/**\n\t *\tShow a HTML widget to input a date or combo list for day, month, years and optionaly hours and minutes.\n\t *  Fields are preselected with :\n\t *            \t- set_time date (must be a local PHP server timestamp or string date with format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM')\n\t *            \t- local date in user area, if set_time is '' (so if set_time is '', output may differs when done from two different location)\n\t *            \t- Empty (fields empty), if set_time is -1 (in this case, parameter empty must also have value 1)\n\t *\n\t *\t@param\ttimestamp\t$set_time \t\tPre-selected date (must be a local PHP server timestamp), -1 to keep date not preselected, '' to use current date (emptydate must be 0).\n\t *\t@param\tstring\t\t$prefix\t\t\tPrefix for fields name\n\t *\t@param\tint\t\t\t$h\t\t\t\t1=Show also hours (-1 has same effect, but hour and minutes are prefilled with 23:59 if $set_time = -1)\n\t *\t@param\tint\t\t\t$m\t\t\t\t1=Show also minutes\n\t *\t@param\tint\t\t\t$empty\t\t\t0=Fields required, 1=Empty inputs are allowed, 2=Empty inputs are allowed for hours only\n\t *\t@param\tstring\t\t$form_name \t\tNot used\n\t *\t@param\tint\t\t\t$d\t\t\t\t1=Show days, month, years\n\t * \t@param\tint\t\t\t$addnowlink\t\tAdd a link \"Now\"\n\t * \t@param\tint\t\t\t$nooutput\t\tDo not output html string but return it\n\t * \t@param \tint\t\t\t$disabled\t\tDisable input fields\n\t *  @param  int\t\t\t$fullday        When a checkbox with this html name is on, hour and day are set with 00:00 or 23:59\n\t *  @param\tstring\t\t$addplusone\t\tAdd a link \"+1 hour\". Value must be name of another select_date field.\n\t *  @param  datetime    $adddateof      Add a link \"Date of invoice\" using the following date.\n\t * \t@return\tstring|null\t\t\t\t\t\tNothing or string if nooutput is 1\n\t *  @see\tform_date\n\t */\n\tfunction select_date($set_time='', $prefix='re', $h=0, $m=0, $empty=0, $form_name=\"\", $d=1, $addnowlink=0, $nooutput=0, $disabled=0, $fullday='', $addplusone='', $adddateof='')\n\t{\n\t\tglobal $conf,$langs;\n\n\t\t$retstring='';\n\n\t\tif($prefix=='') $prefix='re';\n\t\tif($h == '') $h=0;\n\t\tif($m == '') $m=0;\n\t\t$emptydate=0;\n\t\t$emptyhours=0;\n\t\tif ($empty == 1) { $emptydate=1; $emptyhours=1; }\n\t\tif ($empty == 2) { $emptydate=0; $emptyhours=1; }\n\t\t$orig_set_time=$set_time;\n\n\t\tif ($set_time === '' && $emptydate == 0)\n\t\t{\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t\t$set_time = dol_now('tzuser')-(getServerTimeZoneInt('now')*3600); // set_time must be relative to PHP server timezone\n\t\t}\n\n\t\t// Analysis of the pre-selection date\n\t\tif (preg_match('/^([0-9]+)\\-([0-9]+)\\-([0-9]+)\\s?([0-9]+)?:?([0-9]+)?/',$set_time,$reg))\n\t\t{\n\t\t\t// Date format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM:SS'\n\t\t\t$syear\t= (! empty($reg[1])?$reg[1]:'');\n\t\t\t$smonth\t= (! empty($reg[2])?$reg[2]:'');\n\t\t\t$sday\t= (! empty($reg[3])?$reg[3]:'');\n\t\t\t$shour\t= (! empty($reg[4])?$reg[4]:'');\n\t\t\t$smin\t= (! empty($reg[5])?$reg[5]:'');\n\t\t}\n\t\telseif (strval($set_time) != '' && $set_time != -1)\n\t\t{\n\t\t\t// set_time est un timestamps (0 possible)\n\t\t\t$syear = dol_print_date($set_time, \"%Y\");\n\t\t\t$smonth = dol_print_date($set_time, \"%m\");\n\t\t\t$sday = dol_print_date($set_time, \"%d\");\n\t\t\tif ($orig_set_time != '')\n\t\t\t{\n\t\t\t\t$shour = dol_print_date($set_time, \"%H\");\n\t\t\t\t$smin = dol_print_date($set_time, \"%M\");\n\t\t\t\t$ssec = dol_print_date($set_time, \"%S\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$shour = '';\n\t\t\t\t$smin = '';\n\t\t\t\t$ssec = '';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Date est '' ou vaut -1\n\t\t\t$syear = '';\n\t\t\t$smonth = '';\n\t\t\t$sday = '';\n\t\t\t$shour = !isset($conf->global->MAIN_DEFAULT_DATE_HOUR) ? ($h == -1 ? '23' : '') : $conf->global->MAIN_DEFAULT_DATE_HOUR;\n\t\t\t$smin = !isset($conf->global->MAIN_DEFAULT_DATE_MIN) ? ($h == -1 ? '59' : '') : $conf->global->MAIN_DEFAULT_DATE_MIN;\n\t\t\t$ssec = !isset($conf->global->MAIN_DEFAULT_DATE_SEC) ? ($h == -1 ? '59' : '') : $conf->global->MAIN_DEFAULT_DATE_SEC;\n\t\t}\n\n\t\t// You can set MAIN_POPUP_CALENDAR to 'eldy' or 'jquery'\n\t\t$usecalendar='combo';\n\t\tif (! empty($conf->use_javascript_ajax) && (empty($conf->global->MAIN_POPUP_CALENDAR) || $conf->global->MAIN_POPUP_CALENDAR != \"none\")) {\n\t\t\t$usecalendar = ((empty($conf->global->MAIN_POPUP_CALENDAR) || $conf->global->MAIN_POPUP_CALENDAR == 'eldy')?'jquery':$conf->global->MAIN_POPUP_CALENDAR);\n\t\t}\n\t\t//if (! empty($conf->browser->phone)) $usecalendar='combo';\n\n\t\tif ($d)\n\t\t{\n\t\t\t// Show date with popup\n\t\t\tif ($usecalendar != 'combo')\n\t\t\t{\n\t\t\t\t$formated_date='';\n\t\t\t\t//print \"e\".$set_time.\" t \".$conf->format_date_short;\n\t\t\t\tif (strval($set_time) != '' && $set_time != -1)\n\t\t\t\t{\n\t\t\t\t\t//$formated_date=dol_print_date($set_time,$conf->format_date_short);\n\t\t\t\t\t$formated_date=dol_print_date($set_time,$langs->trans(\"FormatDateShortInput\"));  // FormatDateShortInput for dol_print_date / FormatDateShortJavaInput that is same for javascript\n\t\t\t\t}\n\n\t\t\t\t// Calendrier popup version eldy\n\t\t\t\tif ($usecalendar == \"eldy\")\n\t\t\t\t{\n\t\t\t\t\t// Zone de saisie manuelle de la date\n\t\t\t\t\t$retstring.='<input id=\"'.$prefix.'\" name=\"'.$prefix.'\" type=\"text\" class=\"maxwidth75\" maxlength=\"11\" value=\"'.$formated_date.'\"';\n\t\t\t\t\t$retstring.=($disabled?' disabled':'');\n\t\t\t\t\t$retstring.=' onChange=\"dpChangeDay(\\''.$prefix.'\\',\\''.$langs->trans(\"FormatDateShortJavaInput\").'\\'); \"';  // FormatDateShortInput for dol_print_date / FormatDateShortJavaInput that is same for javascript\n\t\t\t\t\t$retstring.='>';\n\n\t\t\t\t\t// Icone calendrier\n\t\t\t\t\tif (! $disabled)\n\t\t\t\t\t{\n\t\t\t\t\t\t$retstring.='<button id=\"'.$prefix.'Button\" type=\"button\" class=\"dpInvisibleButtons\"';\n\t\t\t\t\t\t$base=DOL_URL_ROOT.'/core/';\n\t\t\t\t\t\t$retstring.=' onClick=\"showDP(\\''.$base.'\\',\\''.$prefix.'\\',\\''.$langs->trans(\"FormatDateShortJavaInput\").'\\',\\''.$langs->defaultlang.'\\');\"';\n\t\t\t\t\t\t$retstring.='>'.img_object($langs->trans(\"SelectDate\"),'calendarday','class=\"datecallink\"').'</button>';\n\t\t\t\t\t}\n\t\t\t\t\telse $retstring.='<button id=\"'.$prefix.'Button\" type=\"button\" class=\"dpInvisibleButtons\">'.img_object($langs->trans(\"Disabled\"),'calendarday','class=\"datecallink\"').'</button>';\n\n\t\t\t\t\t$retstring.='<input type=\"hidden\" id=\"'.$prefix.'day\"   name=\"'.$prefix.'day\"   value=\"'.$sday.'\">'.\"\\n\";\n\t\t\t\t\t$retstring.='<input type=\"hidden\" id=\"'.$prefix.'month\" name=\"'.$prefix.'month\" value=\"'.$smonth.'\">'.\"\\n\";\n\t\t\t\t\t$retstring.='<input type=\"hidden\" id=\"'.$prefix.'year\"  name=\"'.$prefix.'year\"  value=\"'.$syear.'\">'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telseif ($usecalendar == 'jquery')\n\t\t\t\t{\n\t\t\t\t\tif (! $disabled)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Output javascript for datepicker\n\t\t\t\t\t\t$retstring.=\"<script type='text/javascript'>\";\n\t\t\t\t\t\t$retstring.=\"$(function(){ $('#\".$prefix.\"').datepicker({\n\t\t\t\t\t\t\tdateFormat: '\".$langs->trans(\"FormatDateShortJQueryInput\").\"',\n\t\t\t\t\t\t\tautoclose: true,\n\t\t\t\t\t\t\ttodayHighlight: true,\";\n\t\t\t\t\t\t\tif (! empty($conf->dol_use_jmobile))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$retstring.=\"\n\t\t\t\t\t\t\t\tbeforeShow: function (input, datePicker) {\n\t\t\t\t\t\t\t\t\tinput.disabled = true;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonClose: function (dateText, datePicker) {\n\t\t\t\t\t\t\t\t\tthis.disabled = false;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Note: We don't need monthNames, monthNamesShort, dayNames, dayNamesShort, dayNamesMin, they are set globally on datepicker component in lib_head.js.php\n\t\t\t\t\t\t\tif (empty($conf->global->MAIN_POPUP_CALENDAR_ON_FOCUS))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$retstring.=\"\n\t\t\t\t\t\t\t\tshowOn: 'button',\n\t\t\t\t\t\t\t\tbuttonImage: '\".DOL_URL_ROOT.\"/theme/\".$conf->theme.\"/img/object_calendarday.png',\n\t\t\t\t\t\t\t\tbuttonImageOnly: true\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$retstring.=\"\n\t\t\t\t\t\t\t}) });\";\n\t\t\t\t\t\t$retstring.=\"</script>\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Zone de saisie manuelle de la date\n\t\t\t\t\t$retstring.='<input id=\"'.$prefix.'\" name=\"'.$prefix.'\" type=\"text\" class=\"maxwidth75\" maxlength=\"11\" value=\"'.$formated_date.'\"';\n\t\t\t\t\t$retstring.=($disabled?' disabled':'');\n\t\t\t\t\t$retstring.=' onChange=\"dpChangeDay(\\''.$prefix.'\\',\\''.$langs->trans(\"FormatDateShortJavaInput\").'\\'); \"';  // FormatDateShortInput for dol_print_date / FormatDateShortJavaInput that is same for javascript\n\t\t\t\t\t$retstring.='>';\n\n\t\t\t\t\t// Icone calendrier\n\t\t\t\t\tif (! $disabled)\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Not required. Managed by option buttonImage of jquery\n                \t\t$retstring.=img_object($langs->trans(\"SelectDate\"),'calendarday','id=\"'.$prefix.'id\" class=\"datecallink\"');\n                \t\t$retstring.=\"<script type='text/javascript'>\";\n                \t\t$retstring.=\"jQuery(document).ready(function() {\";\n                \t\t$retstring.='\tjQuery(\"#'.$prefix.'id\").click(function() {';\n                \t\t$retstring.=\"    \tjQuery('#\".$prefix.\"').focus();\";\n                \t\t$retstring.='    });';\n                \t\t$retstring.='});';\n                \t\t$retstring.=\"</script>\";*/\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$retstring.='<button id=\"'.$prefix.'Button\" type=\"button\" class=\"dpInvisibleButtons\">'.img_object($langs->trans(\"Disabled\"),'calendarday','class=\"datecallink\"').'</button>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$retstring.='<input type=\"hidden\" id=\"'.$prefix.'day\"   name=\"'.$prefix.'day\"   value=\"'.$sday.'\">'.\"\\n\";\n\t\t\t\t\t$retstring.='<input type=\"hidden\" id=\"'.$prefix.'month\" name=\"'.$prefix.'month\" value=\"'.$smonth.'\">'.\"\\n\";\n\t\t\t\t\t$retstring.='<input type=\"hidden\" id=\"'.$prefix.'year\"  name=\"'.$prefix.'year\"  value=\"'.$syear.'\">'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$retstring.=\"Bad value of MAIN_POPUP_CALENDAR\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Show date with combo selects\n\t\t\telse\n\t\t\t{\n\t\t\t\t//$retstring.='<div class=\"inline-block\">';\n\t\t\t\t// Day\n\t\t\t\t$retstring.='<select'.($disabled?' disabled':'').' class=\"flat valignmiddle maxwidth50imp\" id=\"'.$prefix.'day\" name=\"'.$prefix.'day\">';\n\n\t\t\t\tif ($emptydate || $set_time == -1)\n\t\t\t\t{\n\t\t\t\t\t$retstring.='<option value=\"0\" selected>&nbsp;</option>';\n\t\t\t\t}\n\n\t\t\t\tfor ($day = 1 ; $day <= 31; $day++)\n\t\t\t\t{\n\t\t\t\t\t$retstring.='<option value=\"'.$day.'\"'.($day == $sday ? ' selected':'').'>'.$day.'</option>';\n\t\t\t\t}\n\n\t\t\t\t$retstring.=\"</select>\";\n\n\t\t\t\t$retstring.='<select'.($disabled?' disabled':'').' class=\"flat valignmiddle maxwidth75imp\" id=\"'.$prefix.'month\" name=\"'.$prefix.'month\">';\n\t\t\t\tif ($emptydate || $set_time == -1)\n\t\t\t\t{\n\t\t\t\t\t$retstring.='<option value=\"0\" selected>&nbsp;</option>';\n\t\t\t\t}\n\n\t\t\t\t// Month\n\t\t\t\tfor ($month = 1 ; $month <= 12 ; $month++)\n\t\t\t\t{\n\t\t\t\t\t$retstring.='<option value=\"'.$month.'\"'.($month == $smonth?' selected':'').'>';\n\t\t\t\t\t$retstring.=dol_print_date(mktime(12,0,0,$month,1,2000),\"%b\");\n\t\t\t\t\t$retstring.=\"</option>\";\n\t\t\t\t}\n\t\t\t\t$retstring.=\"</select>\";\n\n\t\t\t\t// Year\n\t\t\t\tif ($emptydate || $set_time == -1)\n\t\t\t\t{\n\t\t\t\t\t$retstring.='<input'.($disabled?' disabled':'').' placeholder=\"'.dol_escape_htmltag($langs->trans(\"Year\")).'\" class=\"flat maxwidth50imp valignmiddle\" type=\"number\" min=\"0\" max=\"3000\" maxlength=\"4\" id=\"'.$prefix.'year\" name=\"'.$prefix.'year\" value=\"'.$syear.'\">';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$retstring.='<select'.($disabled?' disabled':'').' class=\"flat valignmiddle maxwidth75imp\" id=\"'.$prefix.'year\" name=\"'.$prefix.'year\">';\n\n\t\t\t\t\tfor ($year = $syear - 10; $year < $syear + 10 ; $year++)\n\t\t\t\t\t{\n\t\t\t\t\t\t$retstring.='<option value=\"'.$year.'\"'.($year == $syear ? ' selected':'').'>'.$year.'</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$retstring.=\"</select>\\n\";\n\t\t\t\t}\n\t\t\t\t//$retstring.='</div>';\n\t\t\t}\n\t\t}\n\n\t\tif ($d && $h) $retstring.=($h==2?'<br>':' ');\n\n\t\tif ($h)\n\t\t{\n\t\t\t// Show hour\n\t\t\t$retstring.='<select'.($disabled?' disabled':'').' class=\"flat valignmiddle maxwidth50 '.($fullday?$fullday.'hour':'').'\" id=\"'.$prefix.'hour\" name=\"'.$prefix.'hour\">';\n\t\t\tif ($emptyhours) $retstring.='<option value=\"-1\">&nbsp;</option>';\n\t\t\tfor ($hour = 0; $hour < 24; $hour++)\n\t\t\t{\n\t\t\t\tif (strlen($hour) < 2) $hour = \"0\" . $hour;\n\t\t\t\t$retstring.='<option value=\"'.$hour.'\"'.(($hour == $shour)?' selected':'').'>'.$hour.(empty($conf->dol_optimize_smallscreen)?'':'H').'</option>';\n\t\t\t}\n\t\t\t$retstring.='</select>';\n\t\t\tif ($m && empty($conf->dol_optimize_smallscreen)) $retstring.=\":\";\n\t\t}\n\n\t\tif ($m)\n\t\t{\n\t\t\t// Show minutes\n\t\t\t$retstring.='<select'.($disabled?' disabled':'').' class=\"flat valignmiddle maxwidth50 '.($fullday?$fullday.'min':'').'\" id=\"'.$prefix.'min\" name=\"'.$prefix.'min\">';\n\t\t\tif ($emptyhours) $retstring.='<option value=\"-1\">&nbsp;</option>';\n\t\t\tfor ($min = 0; $min < 60 ; $min++)\n\t\t\t{\n\t\t\t\tif (strlen($min) < 2) $min = \"0\" . $min;\n\t\t\t\t$retstring.='<option value=\"'.$min.'\"'.(($min == $smin)?' selected':'').'>'.$min.(empty($conf->dol_optimize_smallscreen)?'':'').'</option>';\n\t\t\t}\n\t\t\t$retstring.='</select>';\n\n\t\t\t$retstring.='<input type=\"hidden\" name=\"'.$prefix.'sec\" value=\"'.$ssec.'\">';\n\t\t}\n\n\t\t// Add a \"Now\" link\n\t\tif ($conf->use_javascript_ajax && $addnowlink)\n\t\t{\n\t\t\t// Script which will be inserted in the onClick of the \"Now\" link\n\t\t\t$reset_scripts = \"\";\n\n\t\t\t// Generate the date part, depending on the use or not of the javascript calendar\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'\\').val(\\''.dol_print_date(dol_now(),'day').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'day\\').val(\\''.dol_print_date(dol_now(),'%d').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'month\\').val(\\''.dol_print_date(dol_now(),'%m').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'year\\').val(\\''.dol_print_date(dol_now(),'%Y').'\\');';\n\t\t\t/*if ($usecalendar == \"eldy\")\n            {\n                $base=DOL_URL_ROOT.'/core/';\n                $reset_scripts .= 'resetDP(\\''.$base.'\\',\\''.$prefix.'\\',\\''.$langs->trans(\"FormatDateShortJavaInput\").'\\',\\''.$langs->defaultlang.'\\');';\n            }\n            else\n            {\n                $reset_scripts .= 'this.form.elements[\\''.$prefix.'day\\'].value=formatDate(new Date(), \\'d\\'); ';\n                $reset_scripts .= 'this.form.elements[\\''.$prefix.'month\\'].value=formatDate(new Date(), \\'M\\'); ';\n                $reset_scripts .= 'this.form.elements[\\''.$prefix.'year\\'].value=formatDate(new Date(), \\'yyyy\\'); ';\n            }*/\n\t\t\t// Update the hour part\n\t\t\tif ($h)\n\t\t\t{\n\t\t\t\tif ($fullday) $reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t//$reset_scripts .= 'this.form.elements[\\''.$prefix.'hour\\'].value=formatDate(new Date(), \\'HH\\'); ';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'hour\\').val(\\''.dol_print_date(dol_now(),'%H').'\\');';\n\t\t\t\tif ($fullday) $reset_scripts .= ' } ';\n\t\t\t}\n\t\t\t// Update the minute part\n\t\t\tif ($m)\n\t\t\t{\n\t\t\t\tif ($fullday) $reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t//$reset_scripts .= 'this.form.elements[\\''.$prefix.'min\\'].value=formatDate(new Date(), \\'mm\\'); ';\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'min\\').val(\\''.dol_print_date(dol_now(),'%M').'\\');';\n\t\t\t\tif ($fullday) $reset_scripts .= ' } ';\n\t\t\t}\n\t\t\t// If reset_scripts is not empty, print the link with the reset_scripts in the onClick\n\t\t\tif ($reset_scripts && empty($conf->dol_optimize_smallscreen))\n\t\t\t{\n\t\t\t\t$retstring.=' <button class=\"dpInvisibleButtons datenowlink\" id=\"'.$prefix.'ButtonNow\" type=\"button\" name=\"_useless\" value=\"now\" onClick=\"'.$reset_scripts.'\">';\n\t\t\t\t$retstring.=$langs->trans(\"Now\");\n\t\t\t\t$retstring.='</button> ';\n\t\t\t}\n\t\t}\n\n\t\t// Add a \"Plus one hour\" link\n\t\tif ($conf->use_javascript_ajax && $addplusone)\n\t\t{\n\t\t\t// Script which will be inserted in the onClick of the \"Add plusone\" link\n\t\t\t$reset_scripts = \"\";\n\n\t\t\t// Generate the date part, depending on the use or not of the javascript calendar\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'\\').val(\\''.dol_print_date(dol_now(),'day').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'day\\').val(\\''.dol_print_date(dol_now(),'%d').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'month\\').val(\\''.dol_print_date(dol_now(),'%m').'\\');';\n\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'year\\').val(\\''.dol_print_date(dol_now(),'%Y').'\\');';\n\t\t\t// Update the hour part\n\t\t\tif ($h)\n\t\t\t{\n\t\t\t\tif ($fullday) $reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'hour\\').val(\\''.dol_print_date(dol_now(),'%H').'\\');';\n\t\t\t\tif ($fullday) $reset_scripts .= ' } ';\n\t\t\t}\n\t\t\t// Update the minute part\n\t\t\tif ($m)\n\t\t\t{\n\t\t\t\tif ($fullday) $reset_scripts .= \" if (jQuery('#fullday:checked').val() == null) {\";\n\t\t\t\t$reset_scripts .= 'jQuery(\\'#'.$prefix.'min\\').val(\\''.dol_print_date(dol_now(),'%M').'\\');';\n\t\t\t\tif ($fullday) $reset_scripts .= ' } ';\n\t\t\t}\n\t\t\t// If reset_scripts is not empty, print the link with the reset_scripts in the onClick\n\t\t\tif ($reset_scripts && empty($conf->dol_optimize_smallscreen))\n\t\t\t{\n\t\t\t\t$retstring.=' <button class=\"dpInvisibleButtons datenowlink\" id=\"'.$prefix.'ButtonPlusOne\" type=\"button\" name=\"_useless2\" value=\"plusone\" onClick=\"'.$reset_scripts.'\">';\n\t\t\t\t$retstring.=$langs->trans(\"DateStartPlusOne\");\n\t\t\t\t$retstring.='</button> ';\n\t\t\t}\n\t\t}\n\n\t\t// Add a \"Plus one hour\" link\n\t\tif ($conf->use_javascript_ajax && $adddateof)\n\t\t{\n\t\t\t$tmparray=dol_getdate($adddateof);\n\t\t\t$retstring.=' - <button class=\"dpInvisibleButtons datenowlink\" id=\"dateofinvoice\" type=\"button\" name=\"_dateofinvoice\" value=\"now\" onclick=\"jQuery(\\'#re\\').val(\\''.dol_print_date($adddateof,'day').'\\');jQuery(\\'#reday\\').val(\\''.$tmparray['mday'].'\\');jQuery(\\'#remonth\\').val(\\''.$tmparray['mon'].'\\');jQuery(\\'#reyear\\').val(\\''.$tmparray['year'].'\\');\">'.$langs->trans(\"DateInvoice\").'</a>';\n\t\t}\n\n\t\tif (! empty($nooutput)) return $retstring;\n\n\t\tprint $retstring;\n\t\treturn;\n\t}\n\n\t/**\n\t *\tFunction to show a form to select a duration on a page\n\t *\n\t *\t@param\tstring\t$prefix   \t\tPrefix for input fields\n\t *\t@param  int\t$iSecond  \t\t    Default preselected duration (number of seconds or '')\n\t * \t@param\tint\t$disabled           Disable the combo box\n\t * \t@param\tstring\t$typehour\t\tIf 'select' then input hour and input min is a combo,\n\t *\t\t\t\t\t\t            if 'text' input hour is in text and input min is a text,\n\t *\t\t\t\t\t\t            if 'textselect' input hour is in text and input min is a combo\n\t *  @param\tinteger\t$minunderhours\tIf 1, show minutes selection under the hours\n\t * \t@param\tint\t$nooutput\t\t    Do not output html string but return it\n\t *  @return\tstring|null\n\t */\n\tfunction select_duration($prefix, $iSecond='', $disabled=0, $typehour='select', $minunderhours=0, $nooutput=0)\n\t{\n\t\tglobal $langs;\n\n\t\t$retstring='';\n\n\t\t$hourSelected=0; $minSelected=0;\n\n\t\t// Hours\n\t\tif ($iSecond != '')\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\n\t\t\t$hourSelected = convertSecondToTime($iSecond,'allhour');\n\t\t\t$minSelected = convertSecondToTime($iSecond,'min');\n\t\t}\n\n\t\tif ($typehour=='select' )\n\t\t{\n\t\t\t$retstring.='<select class=\"flat\" name=\"'.$prefix.'hour\"'.($disabled?' disabled':'').'>';\n\t\t\tfor ($hour = 0; $hour < 25; $hour++)\t// For a duration, we allow 24 hours\n\t\t\t{\n\t\t\t\t$retstring.='<option value=\"'.$hour.'\"';\n\t\t\t\tif ($hourSelected == $hour)\n\t\t\t\t{\n\t\t\t\t\t$retstring.=\" selected\";\n\t\t\t\t}\n\t\t\t\t$retstring.=\">\".$hour.\"</option>\";\n\t\t\t}\n\t\t\t$retstring.=\"</select>\";\n\t\t}\n\t\telseif ($typehour=='text' || $typehour=='textselect')\n\t\t{\n\t\t\t$retstring.='<input placeholder=\"'.$langs->trans('HourShort').'\" type=\"number\" min=\"0\" size=\"1\" name=\"'.$prefix.'hour\"'.($disabled?' disabled':'').' class=\"flat maxwidth50 inputhour\" value=\"'.(($hourSelected != '')?((int) $hourSelected):'').'\">';\n\t\t}\n\t\telse return 'BadValueForParameterTypeHour';\n\n\t\tif ($typehour!='text') $retstring.=' '.$langs->trans('HourShort');\n\t\telse $retstring.='<span class=\"hideonsmartphone\">:</span>';\n\n\t\t// Minutes\n\t\tif ($minunderhours) $retstring.='<br>';\n\t\telse $retstring.='<span class=\"hideonsmartphone\">&nbsp;</span>';\n\n\t\tif ($typehour=='select' || $typehour=='textselect')\n\t\t{\n\t\t\t$retstring.='<select class=\"flat\" name=\"'.$prefix.'min\"'.($disabled?' disabled':'').'>';\n\t\t\tfor ($min = 0; $min <= 55; $min=$min+5)\n\t\t\t{\n\t\t\t\t$retstring.='<option value=\"'.$min.'\"';\n\t\t\t\tif ($minSelected == $min) $retstring.=' selected';\n\t\t\t\t$retstring.='>'.$min.'</option>';\n\t\t\t}\n\t\t\t$retstring.=\"</select>\";\n\t\t}\n\t\telseif ($typehour=='text' )\n\t\t{\n\t\t\t$retstring.='<input placeholder=\"'.$langs->trans('MinuteShort').'\" type=\"number\" min=\"0\" size=\"1\" name=\"'.$prefix.'min\"'.($disabled?' disabled':'').' class=\"flat maxwidth50 inputminute\" value=\"'.(($minSelected != '')?((int) $minSelected):'').'\">';\n\t\t}\n\n\t\tif ($typehour!='text') $retstring.=' '.$langs->trans('MinuteShort');\n\n\t\t//$retstring.=\"&nbsp;\";\n\n\t\tif (! empty($nooutput)) return $retstring;\n\n\t\tprint $retstring;\n\t\treturn;\n\t}\n\n\n\t/**\n\t * Generic method to select a component from a combo list.\n\t * This is the generic method that will replace all specific existing methods.\n\t *\n\t * @param \tstring\t\t\t$objectdesc\t\t\tObjectclassname:Objectclasspath\n\t * @param\tstring\t\t\t$htmlname\t\t\tName of HTML select component\n\t * @param\tint\t\t\t\t$preselectedvalue\tPreselected value (ID of element)\n\t * @param\tstring\t\t\t$showempty\t\t\t''=empty values not allowed, 'string'=value show if we allow empty values (for example 'All', ...)\n\t * @param\tstring\t\t\t$searchkey\t\t\tSearch criteria\n\t * @param\tstring\t\t\t$placeholder\t\tPlace holder\n\t * @param\tstring\t\t\t$morecss\t\t\tMore CSS\n\t * @param\tstring\t\t\t$moreparams\t\t\tMore params provided to ajax call\n\t * @param\tint\t\t\t\t$forcecombo\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t * @return\tstring\t\t\t\t\t\t\t\tReturn HTML string\n\t * @see selectForFormsList select_thirdparty\n\t */\n\tfunction selectForForms($objectdesc, $htmlname, $preselectedvalue, $showempty='', $searchkey='', $placeholder='', $morecss='', $moreparams='', $forcecombo=0)\n\t{\n\t\tglobal $conf, $user;\n\n\t\t$objecttmp = null;\n\n\t\t$InfoFieldList = explode(\":\", $objectdesc);\n\t\t$classname=$InfoFieldList[0];\n\t\t$classpath=$InfoFieldList[1];\n\t\tif (! empty($classpath))\n\t\t{\n\t\t\tdol_include_once($classpath);\n\t\t\tif ($classname && class_exists($classname))\n\t\t\t{\n\t\t\t\t$objecttmp = new $classname($this->db);\n\t\t\t}\n\t\t}\n\t\tif (! is_object($objecttmp))\n\t\t{\n\t\t\tdol_syslog('Error bad setup of type for field '.$InfoFieldList, LOG_WARNING);\n\t\t\treturn 'Error bad setup of type for field '.join(',', $InfoFieldList);\n\t\t}\n\n\t\t$prefixforautocompletemode=$objecttmp->element;\n\t\tif ($prefixforautocompletemode == 'societe') $prefixforautocompletemode='company';\n\t\t$confkeyforautocompletemode=strtoupper($prefixforautocompletemode).'_USE_SEARCH_TO_SELECT';\t// For example COMPANY_USE_SEARCH_TO_SELECT\n\n\t\tdol_syslog(get_class($this).\"::selectForForms\", LOG_DEBUG);\n\n\t\t$out='';\n\t\tif (! empty($conf->use_javascript_ajax) && ! empty($conf->global->$confkeyforautocompletemode) && ! $forcecombo)\n\t\t{\n\t\t\t$objectdesc=$classname.':'.$classpath;\n\t\t\t$urlforajaxcall = DOL_URL_ROOT.'/core/ajax/selectobject.php';\n\t\t\t//if ($objecttmp->element == 'societe') $urlforajaxcall = DOL_URL_ROOT.'/societe/ajax/company.php';\n\n\t\t\t// No immediate load of all database\n\t\t\t$urloption='htmlname='.$htmlname.'&outjson=1&objectdesc='.$objectdesc.($moreparams?$moreparams:'');\n\t\t\t// Activate the auto complete using ajax call.\n\t\t\t$out.=  ajax_autocompleter($preselectedvalue, $htmlname, $urlforajaxcall, $urloption, $conf->global->$confkeyforautocompletemode, 0, array());\n\t\t\t$out.= '<style type=\"text/css\">.ui-autocomplete { z-index: 250; }</style>';\n\t\t\tif ($placeholder) $placeholder=' placeholder=\"'.$placeholder.'\"';\n\t\t\t$out.= '<input type=\"text\" class=\"'.$morecss.'\" name=\"search_'.$htmlname.'\" id=\"search_'.$htmlname.'\" value=\"'.$preselectedvalue.'\"'.$placeholder.' />';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Immediate load of all database\n\t\t\t$out.=$this->selectForFormsList($objecttmp, $htmlname, $preselectedvalue, $showempty, $searchkey, $placeholder, $morecss, $moreparams, $forcecombo);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Output html form to select an object.\n\t * Note, this function is called by selectForForms or by ajax selectobject.php\n\t *\n\t * @param \tObject\t\t\t$objecttmp\t\t\tObject\n\t * @param\tstring\t\t\t$htmlname\t\t\tName of HTML select component\n\t * @param\tint\t\t\t\t$preselectedvalue\tPreselected value (ID of element)\n\t * @param\tstring\t\t\t$showempty\t\t\t''=empty values not allowed, 'string'=value show if we allow empty values (for example 'All', ...)\n\t * @param\tstring\t\t\t$searchkey\t\t\tSearch value\n\t * @param\tstring\t\t\t$placeholder\t\tPlace holder\n\t * @param\tstring\t\t\t$morecss\t\t\tMore CSS\n\t * @param\tstring\t\t\t$moreparams\t\t\tMore params provided to ajax call\n\t * @param\tint\t\t\t\t$forcecombo\t\t\tForce to load all values and output a standard combobox (with no beautification)\n\t * @param\tint\t\t\t\t$outputmode\t\t\t0=HTML select string, 1=Array\n\t * @return\tstring\t\t\t\t\t\t\t\tReturn HTML string\n\t * @see selectForForms\n\t */\n\tfunction selectForFormsList($objecttmp, $htmlname, $preselectedvalue, $showempty='', $searchkey='', $placeholder='', $morecss='', $moreparams='', $forcecombo=0, $outputmode=0)\n\t{\n\t\tglobal $conf, $langs, $user;\n\n\t\t$prefixforautocompletemode=$objecttmp->element;\n\t\tif ($prefixforautocompletemode == 'societe') $prefixforautocompletemode='company';\n\t\t$confkeyforautocompletemode=strtoupper($prefixforautocompletemode).'_USE_SEARCH_TO_SELECT';\t// For example COMPANY_USE_SEARCH_TO_SELECT\n\n\t\t$fieldstoshow='t.ref';\n\t\tif (! empty($objecttmp->fields))\t// For object that declare it, it is better to use declared fields ( like societe, contact, ...)\n\t\t{\n\t\t\t$tmpfieldstoshow='';\n\t\t\tforeach($objecttmp->fields as $key => $val)\n\t\t\t{\n\t\t\t\tif ($val['showoncombobox']) $tmpfieldstoshow.=($tmpfieldstoshow?',':'').'t.'.$key;\n\t\t\t}\n\t\t\tif ($tmpfieldstoshow) $fieldstoshow = $tmpfieldstoshow;\n\t\t}\n\n\t\t$out='';\n\t\t$outarray=array();\n\n\t\t$num=0;\n\n\t\t// Search data\n\t\t$sql = \"SELECT t.rowid, \".$fieldstoshow.\" FROM \".MAIN_DB_PREFIX .$objecttmp->table_element.\" as t\";\n\t\tif ($objecttmp->ismultientitymanaged == 2)\n\t\t\tif (!$user->rights->societe->client->voir && !$user->societe_id) $sql .= \", \".MAIN_DB_PREFIX.\"societe_commerciaux as sc\";\n\t\t$sql.= \" WHERE 1=1\";\n\t\tif(! empty($objecttmp->ismultientitymanaged)) $sql.= \" AND t.entity IN (\".getEntity($objecttmp->table_element).\")\";\n\t\tif ($objecttmp->ismultientitymanaged == 1 && ! empty($user->societe_id))\n\t\t{\n\t\t\tif ($objecttmp->element == 'societe') $sql.= \" AND t.rowid = \".$user->societe_id;\n\t\t\t\telse $sql.= \" AND t.fk_soc = \".$user->societe_id;\n\t\t}\n\t\tif ($searchkey != '') $sql.=natural_search(explode(',',$fieldstoshow), $searchkey);\n\t\tif ($objecttmp->ismultientitymanaged == 2)\n\t\t\tif (!$user->rights->societe->client->voir && !$user->societe_id) $sql.= \" AND t.rowid = sc.fk_soc AND sc.fk_user = \" .$user->id;\n\t\t$sql.=$this->db->order($fieldstoshow,\"ASC\");\n\t\t//$sql.=$this->db->plimit($limit, 0);\n\n\t\t// Build output string\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\tif (! $forcecombo)\n\t\t\t{\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t\t$out .= ajax_combobox($htmlname, null, $conf->global->$confkeyforautocompletemode);\n\t\t\t}\n\n\t\t\t// Construct $out and $outarray\n\t\t\t$out.= '<select id=\"'.$htmlname.'\" class=\"flat'.($morecss?' '.$morecss:'').'\"'.($moreparams?' '.$moreparams:'').' name=\"'.$htmlname.'\">'.\"\\n\";\n\n\t\t\t// Warning: Do not use textifempty = ' ' or '&nbsp;' here, or search on key will search on ' key'. Seems it is no more true with selec2 v4\n\t\t\t$textifempty='&nbsp;';\n\n\t\t\t//if (! empty($conf->use_javascript_ajax) || $forcecombo) $textifempty='';\n\t\t\tif (! empty($conf->global->$confkeyforautocompletemode))\n\t\t\t{\n\t\t\t\tif ($showempty && ! is_numeric($showempty)) $textifempty=$langs->trans($showempty);\n\t\t\t\telse $textifempty.=$langs->trans(\"All\");\n\t\t\t}\n\t\t\tif ($showempty) $out.= '<option value=\"-1\">'.$textifempty.'</option>'.\"\\n\";\n\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$label='';\n\t\t\t\t\t$tmparray=explode(',', $fieldstoshow);\n\t\t\t\t\tforeach($tmparray as $key => $val)\n\t\t\t\t\t{\n\t\t\t\t\t\t$val = preg_replace('/t\\./','',$val);\n\t\t\t\t\t\t$label .= (($label && $obj->$val)?' - ':'').$obj->$val;\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($outputmode))\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($preselectedvalue > 0 && $preselectedvalue == $obj->rowid)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\" selected>'.$label.'</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\">'.$label.'</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tarray_push($outarray, array('key'=>$obj->rowid, 'value'=>$label, 'label'=>$label));\n\t\t\t\t\t}\n\n\t\t\t\t\t$i++;\n\t\t\t\t\tif (($i % 10) == 0) $out.=\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$out.= '</select>'.\"\\n\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\t$this->result=array('nbofelement'=>$num);\n\n\t\tif ($outputmode) return $outarray;\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tReturn a HTML select string, built from an array of key+value.\n\t *  Note: Do not apply langs->trans function on returned content, content may be entity encoded twice.\n\t *\n\t *\t@param\tstring\t\t\t$htmlname       Name of html select area. Must start with \"multi\" if this is a multiselect\n\t *\t@param\tarray\t\t\t$array          Array (key => value)\n\t *\t@param\tstring|string[]\t$id             Preselected key or preselected keys for multiselect\n\t *\t@param\tint|string\t\t$show_empty     0 no empty value allowed, 1 or string to add an empty value into list (key is -1 and value is '' or '&nbsp;' if 1, key is -1 and value is text if string), <0 to add an empty value with key that is this value.\n\t *\t@param\tint\t\t\t\t$key_in_label   1 to show key into label with format \"[key] value\"\n\t *\t@param\tint\t\t\t\t$value_as_key   1 to use value as key\n\t *\t@param  string\t\t\t$moreparam      Add more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n\t *\t@param  int\t\t\t\t$translate\t\t1=Translate and encode value\n\t * \t@param\tint\t\t\t\t$maxlen\t\t\tLength maximum for labels\n\t * \t@param\tint\t\t\t\t$disabled\t\tHtml select box is disabled\n\t *  @param\tstring\t\t\t$sort\t\t\t'ASC' or 'DESC' = Sort on label, '' or 'NONE' or 'POS' = Do not sort, we keep original order\n\t *  @param\tstring\t\t\t$morecss\t\tAdd more class to css styles\n\t *  @param\tint\t\t\t\t$addjscombo\t\t    Add js combo\n\t *  @param  string          $moreparamonempty   Add more param on the empty option line. Not used if show_empty not set\n\t *  @param  int             $disablebademail    Check if an email is found into value and if not disable and colorize entry\n\t *  @param  int             $nohtmlescape       No html escaping.\n\t * \t@return\tstring\t\t\t\t\t\t\t    HTML select string.\n\t *  @see multiselectarray\n\t */\n\tstatic function selectarray($htmlname, $array, $id='', $show_empty=0, $key_in_label=0, $value_as_key=0, $moreparam='', $translate=0, $maxlen=0, $disabled=0, $sort='', $morecss='', $addjscombo=0, $moreparamonempty='',$disablebademail=0, $nohtmlescape=0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t// Do we want a multiselect ?\n\t\t//$jsbeautify = 0;\n\t\t//if (preg_match('/^multi/',$htmlname)) $jsbeautify = 1;\n\t\t$jsbeautify = 1;\n\n\t\tif ($value_as_key) $array=array_combine($array, $array);\n\n\t\t$out='';\n\n\t\t// Add code for jquery to use multiselect\n\t\tif ($addjscombo && $jsbeautify)\n\t\t{\n\t\t\t$minLengthToAutocomplete=0;\n\t\t\t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?(constant('REQUIRE_JQUERY_MULTISELECT')?constant('REQUIRE_JQUERY_MULTISELECT'):'select2'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n\n\t\t\t// Enhance with select2\n\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t\t$out .= ajax_combobox($htmlname);\n\t\t}\n\n\t\t$out.='<select id=\"'.preg_replace('/^\\./','',$htmlname).'\" '.($disabled?'disabled ':'').'class=\"flat '.(preg_replace('/^\\./','',$htmlname)).($morecss?' '.$morecss:'').'\"';\n\t\t$out.=' name=\"'.preg_replace('/^\\./','',$htmlname).'\" '.($moreparam?$moreparam:'');\n\t\t$out.='>';\n\n\t\tif ($show_empty)\n\t\t{\n\t\t\t$textforempty=' ';\n\t\t\tif (! empty($conf->use_javascript_ajax)) $textforempty='&nbsp;';\t// If we use ajaxcombo, we need &nbsp; here to avoid to have an empty element that is too small.\n\t\t\tif (! is_numeric($show_empty)) $textforempty=$show_empty;\n\t\t\t$out.='<option class=\"optiongrey\" '.($moreparamonempty?$moreparamonempty.' ':'').'value=\"'.($show_empty < 0 ? $show_empty : -1).'\"'.($id == $show_empty ?' selected':'').'>'.$textforempty.'</option>'.\"\\n\";\n\t\t}\n\n\t\tif (is_array($array))\n\t\t{\n\t\t\t// Translate\n\t\t\tif ($translate)\n\t\t\t{\n\t\t\t\tforeach($array as $key => $value)\n\t\t\t\t{\n\t\t\t\t\t$array[$key]=$langs->trans($value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Sort\n\t\t\tif ($sort == 'ASC') asort($array);\n\t\t\telseif ($sort == 'DESC') arsort($array);\n\n\t\t\tforeach($array as $key => $value)\n\t\t\t{\n\t\t\t\t$disabled=''; $style='';\n\t\t\t\tif (! empty($disablebademail))\n\t\t\t\t{\n\t\t\t\t\tif (! preg_match('/&lt;.+@.+&gt;/', $value))\n\t\t\t\t\t{\n\t\t\t\t\t\t//$value=preg_replace('/'.preg_quote($a,'/').'/', $b, $value);\n\t\t\t\t\t\t$disabled=' disabled';\n\t\t\t\t\t\t$style=' class=\"warning\"';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($key_in_label)\n\t\t\t\t{\n\t\t\t\t\tif (empty($nohtmlescape)) $selectOptionValue = dol_escape_htmltag($key.' - '.($maxlen?dol_trunc($value,$maxlen):$value));\n\t\t\t\t\telse $selectOptionValue = $key.' - '.($maxlen?dol_trunc($value,$maxlen):$value);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (empty($nohtmlescape)) $selectOptionValue = dol_escape_htmltag($maxlen?dol_trunc($value,$maxlen):$value);\n\t\t\t\t\telse $selectOptionValue = $maxlen?dol_trunc($value,$maxlen):$value;\n\t\t\t\t\tif ($value == '' || $value == '-') $selectOptionValue='&nbsp;';\n\t\t\t\t}\n\n\t\t\t\t$out.='<option value=\"'.$key.'\"';\n\t\t\t\t$out.=$style.$disabled;\n\t\t\t\tif ($id != '' && $id == $key && ! $disabled) $out.=' selected';\t\t// To preselect a value\n\t\t\t\tif ($nohtmlescape) $out.=' data-html=\"'.dol_escape_htmltag($selectOptionValue).'\"';\n\t\t\t\t$out.='>';\n\t\t\t\t//var_dump($selectOptionValue);\n\t\t\t\t$out.=$selectOptionValue;\n\t\t\t\t$out.=\"</option>\\n\";\n\t\t\t}\n\t\t}\n\n\t\t$out.=\"</select>\";\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tReturn a HTML select string, built from an array of key+value but content returned into select come from an Ajax call of an URL.\n\t *  Note: Do not apply langs->trans function on returned content of Ajax service, content may be entity encoded twice.\n\t *\n\t *\t@param\tstring\t$htmlname       \t\tName of html select area\n\t *\t@param\tstring\t$url\t\t\t\t\tUrl. Must return a json_encode of array(key=>array('text'=>'A text', 'url'=>'An url'), ...)\n\t *\t@param\tstring\t$id             \t\tPreselected key\n\t *\t@param  string\t$moreparam      \t\tAdd more parameters onto the select tag\n\t *\t@param  string\t$moreparamtourl \t\tAdd more parameters onto the Ajax called URL\n\t * \t@param\tint\t\t$disabled\t\t\t\tHtml select box is disabled\n\t *  @param\tint\t\t$minimumInputLength\t\tMinimum Input Length\n\t *  @param\tstring\t$morecss\t\t\t\tAdd more class to css styles\n\t *  @param  int     $callurlonselect        If set to 1, some code is added so an url return by the ajax is called when value is selected.\n\t *  @param  string  $placeholder            String to use as placeholder\n\t *  @param  integer $acceptdelayedhtml      1 if caller request to have html js content not returned but saved into global $delayedhtmlcontent (so caller can show it at end of page to avoid flash FOUC effect)\n\t * \t@return\tstring   \t\t\t\t\t\tHTML select string\n\t *  @see ajax_combobox in ajax.lib.php\n\t */\n\tstatic function selectArrayAjax($htmlname, $url, $id='', $moreparam='', $moreparamtourl='', $disabled=0, $minimumInputLength=1, $morecss='', $callurlonselect=0, $placeholder='', $acceptdelayedhtml=0)\n\t{\n\t\tglobal $conf, $langs;\n\t\tglobal $delayedhtmlcontent;\n\n\t\t// TODO Use an internal dolibarr component instead of select2\n\t\tif (empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) && ! defined('REQUIRE_JQUERY_MULTISELECT')) return '';\n\n\t\t$out='<select type=\"text\" class=\"'.$htmlname.($morecss?' '.$morecss:'').'\" '.($moreparam?$moreparam.' ':'').'name=\"'.$htmlname.'\"></select>';\n\n\t\t$tmpplugin='select2';\n\t\t$outdelayed=\"\\n\".'<!-- JS CODE TO ENABLE '.$tmpplugin.' for id '.$htmlname.' -->\n\t    \t<script type=\"text/javascript\">\n\t    \t$(document).ready(function () {\n\n    \t        '.($callurlonselect ? 'var saveRemoteData = [];':'').'\n\n                $(\".'.$htmlname.'\").select2({\n\t\t\t    \tajax: {\n\t\t\t\t    \tdir: \"ltr\",\n\t\t\t\t    \turl: \"'.$url.'\",\n\t\t\t\t    \tdataType: \\'json\\',\n\t\t\t\t    \tdelay: 250,\n\t\t\t\t    \tdata: function (params) {\n\t\t\t\t    \t\treturn {\n\t\t\t\t\t\t    \tq: params.term, \t// search term\n\t\t\t\t    \t\t\tpage: params.page\n\t\t\t\t    \t\t};\n\t\t\t    \t\t},\n\t\t\t    \t\tprocessResults: function (data) {\n\t\t\t    \t\t\t// parse the results into the format expected by Select2.\n\t\t\t    \t\t\t// since we are using custom formatting functions we do not need to alter the remote JSON data\n\t\t\t    \t\t\t//console.log(data);\n\t\t\t\t\t\t\tsaveRemoteData = data;\n\t\t\t\t    \t    /* format json result for select2 */\n\t\t\t\t    \t    result = []\n\t\t\t\t    \t    $.each( data, function( key, value ) {\n\t\t\t\t    \t       result.push({id: key, text: value.text});\n                            });\n\t\t\t    \t\t\t//return {results:[{id:\\'none\\', text:\\'aa\\'}, {id:\\'rrr\\', text:\\'Red\\'},{id:\\'bbb\\', text:\\'Search a into projects\\'}], more:false}\n\t\t\t    \t\t\t//console.log(result);\n\t\t\t    \t\t\treturn {results: result, more: false}\n\t\t\t    \t\t},\n\t\t\t    \t\tcache: true\n\t\t\t    \t},\n\t \t\t\t\tlanguage: select2arrayoflanguage,\n\t\t\t\t\tcontainerCssClass: \\':all:\\',\t\t\t\t\t/* Line to add class of origin SELECT propagated to the new <span class=\"select2-selection...> tag */\n\t\t\t\t    placeholder: \"'.dol_escape_js($placeholder).'\",\n\t\t\t    \tescapeMarkup: function (markup) { return markup; }, \t// let our custom formatter work\n\t\t\t    \tminimumInputLength: '.$minimumInputLength.',\n\t\t\t        formatResult: function(result, container, query, escapeMarkup) {\n                        return escapeMarkup(result.text);\n                    },\n\t\t\t    });\n\n                '.($callurlonselect ? '\n                /* Code to execute a GET when we select a value */\n                $(\".'.$htmlname.'\").change(function() {\n\t\t\t    \tvar selected = $(\".'.$htmlname.'\").val();\n                \tconsole.log(\"We select \"+selected)\n\t\t\t        $(\".'.$htmlname.'\").val(\"\");  /* reset visible combo value */\n    \t\t\t    $.each( saveRemoteData, function( key, value ) {\n    \t\t\t\t        if (key == selected)\n    \t\t\t            {\n    \t\t\t                 console.log(\"selectArrayAjax - Do a redirect to \"+value.url)\n    \t\t\t                 location.assign(value.url);\n    \t\t\t            }\n                    });\n    \t\t\t});' : '' ) . '\n\n    \t   });\n\t       </script>';\n\n\t\tif ($acceptdelayedhtml)\n\t\t{\n\t\t\t$delayedhtmlcontent.=$outdelayed;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$out.=$outdelayed;\n\t\t}\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tShow a multiselect form from an array.\n\t *\n\t *\t@param\tstring\t$htmlname\t\tName of select\n\t *\t@param\tarray\t$array\t\t\tArray with key+value\n\t *\t@param\tarray\t$selected\t\tArray with key+value preselected\n\t *\t@param\tint\t\t$key_in_label   1 pour afficher la key dans la valeur \"[key] value\"\n\t *\t@param\tint\t\t$value_as_key   1 to use value as key\n\t *\t@param  string\t$morecss        Add more css style\n\t *\t@param  int\t\t$translate\t\tTranslate and encode value\n\t *  @param\tint\t\t$width\t\t\tForce width of select box. May be used only when using jquery couch. Example: 250, 95%\n\t *  @param\tstring\t$moreattrib\t\tAdd more options on select component. Example: 'disabled'\n\t *  @param\tstring\t$elemtype\t\tType of element we show ('category', ...)\n\t *\t@return\tstring\t\t\t\t\tHTML multiselect string\n\t *  @see selectarray\n\t */\n\tstatic function multiselectarray($htmlname, $array, $selected=array(), $key_in_label=0, $value_as_key=0, $morecss='', $translate=0, $width=0, $moreattrib='',$elemtype='')\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$out = '';\n\n\t\t// Add code for jquery to use multiselect\n\t\tif (! empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT'))\n\t\t{\n\t\t\t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?constant('REQUIRE_JQUERY_MULTISELECT'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n   \t\t\t$out.=\"\\n\".'<!-- JS CODE TO ENABLE '.$tmpplugin.' for id '.$htmlname.' -->\n    \t\t\t<script type=\"text/javascript\">\n\t    \t\t\tfunction formatResult(record) {'.\"\\n\";\n\t\t\t\t\t\tif ($elemtype == 'category')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.='\t//return \\'<span><img src=\"'.DOL_URL_ROOT.'/theme/eldy/img/object_category.png'.'\"> <a href=\"'.DOL_URL_ROOT.'/categories/viewcat.php?type=0&id=\\'+record.id+\\'\">\\'+record.text+\\'</a></span>\\';\n\t\t\t\t\t\t\t\t  \treturn \\'<span><img src=\"'.DOL_URL_ROOT.'/theme/eldy/img/object_category.png'.'\"> \\'+record.text+\\'</span>\\';';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.='return record.text;';\n\t\t\t\t\t\t}\n\t\t\t$out.= '\t};\n    \t\t\t\tfunction formatSelection(record) {'.\"\\n\";\n\t\t\t\t\t\tif ($elemtype == 'category')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.='\t//return \\'<span><img src=\"'.DOL_URL_ROOT.'/theme/eldy/img/object_category.png'.'\"> <a href=\"'.DOL_URL_ROOT.'/categories/viewcat.php?type=0&id=\\'+record.id+\\'\">\\'+record.text+\\'</a></span>\\';\n\t\t\t\t\t\t\t\t  \treturn \\'<span><img src=\"'.DOL_URL_ROOT.'/theme/eldy/img/object_category.png'.'\"> \\'+record.text+\\'</span>\\';';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$out.='return record.text;';\n\t\t\t\t\t\t}\n\t\t\t$out.= '\t};\n\t    \t\t\t$(document).ready(function () {\n    \t\t\t\t\t$(\\'#'.$htmlname.'\\').'.$tmpplugin.'({\n    \t\t\t\t\t\tdir: \\'ltr\\',\n\t\t\t\t\t\t\t// Specify format function for dropdown item\n\t\t\t\t\t\t\tformatResult: formatResult,\n    \t\t\t\t\t \ttemplateResult: formatResult,\t\t/* For 4.0 */\n\t\t\t\t\t\t\t// Specify format function for selected item\n\t\t\t\t\t\t\tformatSelection: formatSelection,\n    \t\t\t\t\t \ttemplateResult: formatSelection\t\t/* For 4.0 */\n    \t\t\t\t\t});\n    \t\t\t\t});\n    \t\t\t</script>';\n\t\t}\n\n\t\t// Try also magic suggest\n\n\t\t$out .= '<select id=\"'.$htmlname.'\" class=\"multiselect'.($morecss?' '.$morecss:'').'\" multiple name=\"'.$htmlname.'[]\"'.($moreattrib?' '.$moreattrib:'').($width?' style=\"width: '.(preg_match('/%/',$width)?$width:$width.'px').'\"':'').'>'.\"\\n\";\n\t\tif (is_array($array) && ! empty($array))\n\t\t{\n\t\t\tif ($value_as_key) $array=array_combine($array, $array);\n\n\t\t\tif (! empty($array))\n\t\t\t{\n\t\t\t\tforeach ($array as $key => $value)\n\t\t\t\t{\n\t\t\t\t\t$out.= '<option value=\"'.$key.'\"';\n\t\t\t\t\tif (is_array($selected) && ! empty($selected) && in_array($key, $selected) && !empty($key))\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= ' selected';\n\t\t\t\t\t}\n\t\t\t\t\t$out.= '>';\n\n\t\t\t\t\t$newval = ($translate ? $langs->trans($value) : $value);\n\t\t\t\t\t$newval = ($key_in_label ? $key.' - '.$newval : $newval);\n\t\t\t\t\t$out.= dol_htmlentitiesbr($newval);\n\t\t\t\t\t$out.= '</option>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$out.= '</select>'.\"\\n\";\n\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tShow a multiselect dropbox from an array.\n\t *\n\t *\t@param\tstring\t$htmlname\t\tName of HTML field\n\t *\t@param\tarray\t$array\t\t\tArray with array of fields we could show. This array may be modified according to setup of user.\n\t *  @param  string  $varpage        Id of context for page. Can be set by caller with $varpage=(empty($contextpage)?$_SERVER[\"PHP_SELF\"]:$contextpage);\n\t *\t@return\tstring\t\t\t\t\tHTML multiselect string\n\t *  @see selectarray\n\t */\n\tstatic function multiSelectArrayWithCheckbox($htmlname, &$array, $varpage)\n\t{\n\t\tglobal $conf,$langs,$user;\n\n\t\tif (! empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) return '';\n\n\t\t$tmpvar=\"MAIN_SELECTEDFIELDS_\".$varpage;\n\t\tif (! empty($user->conf->$tmpvar))\n\t\t{\n\t\t\t$tmparray=explode(',', $user->conf->$tmpvar);\n\t\t\tforeach($array as $key => $val)\n\t\t\t{\n\t\t\t\t//var_dump($key);\n\t\t\t\t//var_dump($tmparray);\n\t\t\t\tif (in_array($key, $tmparray)) $array[$key]['checked']=1;\n\t\t\t\telse $array[$key]['checked']=0;\n\t\t\t}\n\t\t}\n\t\t//var_dump($array);\n\n\t\t$lis='';\n\t\t$listcheckedstring='';\n\n\t\tforeach($array as $key => $val)\n\t\t{\n\t\t   /* var_dump($val);\n            var_dump(array_key_exists('enabled', $val));\n            var_dump(!$val['enabled']);*/\n\t\t   if (array_key_exists('enabled', $val) && isset($val['enabled']) && ! $val['enabled'])\n\t\t   {\n\t\t\t   unset($array[$key]);     // We don't want this field\n\t\t\t   continue;\n\t\t   }\n\t\t   if ($val['label'])\n\t\t   {\n\t\t\t   $lis.='<li><input type=\"checkbox\" value=\"'.$key.'\"'.(empty($val['checked'])?'':' checked=\"checked\"').'/>'.dol_escape_htmltag($langs->trans($val['label'])).'</li>';\n\t\t\t   $listcheckedstring.=(empty($val['checked'])?'':$key.',');\n\t\t   }\n\t\t}\n\n\t\t$out ='<!-- Component multiSelectArrayWithCheckbox '.$htmlname.' -->\n\n        <dl class=\"dropdown\">\n            <dt>\n            <a href=\"#\">\n              '.img_picto('','list').'\n            </a>\n            <input type=\"hidden\" class=\"'.$htmlname.'\" name=\"'.$htmlname.'\" value=\"'.$listcheckedstring.'\">\n            </dt>\n            <dd class=\"dropowndd\">\n                <div class=\"multiselectcheckbox'.$htmlname.'\">\n                    <ul class=\"ul'.$htmlname.'\">\n                    '.$lis.'\n                    </ul>\n                </div>\n            </dd>\n        </dl>\n\n        <script type=\"text/javascript\">\n          jQuery(document).ready(function () {\n              $(\\'.multiselectcheckbox'.$htmlname.' input[type=\"checkbox\"]\\').on(\\'click\\', function () {\n                  console.log(\"A new field was added/removed\")\n                  $(\"input:hidden[name=formfilteraction]\").val(\\'listafterchangingselectedfields\\')\n                  var title = $(this).val() + \",\";\n                  if ($(this).is(\\':checked\\')) {\n                      $(\\'.'.$htmlname.'\\').val(title + $(\\'.'.$htmlname.'\\').val());\n                  }\n                  else {\n                      $(\\'.'.$htmlname.'\\').val( $(\\'.'.$htmlname.'\\').val().replace(title, \\'\\') )\n                  }\n                  // Now, we submit page\n                  $(this).parents(\\'form:first\\').submit();\n              });\n           });\n        </script>\n\n        ';\n\t\treturn $out;\n\t}\n\n\t/**\n\t * \tRender list of categories linked to object with id $id and type $type\n\t *\n\t * \t@param\t\tint\t\t$id\t\t\t\tId of object\n\t * \t@param\t\tstring\t$type\t\t\tType of category ('member', 'customer', 'supplier', 'product', 'contact'). Old mode (0, 1, 2, ...) is deprecated.\n\t *  @param\t\tint\t\t$rendermode\t\t0=Default, use multiselect. 1=Emulate multiselect (recommended)\n\t * \t@return\t\tstring\t\t\t\t\tString with categories\n\t */\n\tfunction showCategories($id, $type, $rendermode=0)\n\t{\n\t\tglobal $db;\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\n\n\t\t$cat = new Categorie($db);\n\t\t$categories = $cat->containing($id, $type);\n\n\t\tif ($rendermode == 1)\n\t\t{\n\t\t\t$toprint = array();\n\t\t\tforeach($categories as $c)\n\t\t\t{\n\t\t\t\t$ways = $c->print_all_ways();       // $ways[0] = \"ccc2 >> ccc2a >> ccc2a1\" with html formated text\n\t\t\t\tforeach($ways as $way)\n\t\t\t\t{\n\t\t\t\t\t$toprint[] = '<li class=\"select2-search-choice-dolibarr noborderoncategories\"'.($c->color?' style=\"background: #'.$c->color.';\"':' style=\"background: #aaa\"').'>'.img_object('','category').' '.$way.'</li>';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '<div class=\"select2-container-multi-dolibarr\" style=\"width: 90%;\"><ul class=\"select2-choices-dolibarr\">'.implode(' ', $toprint).'</ul></div>';\n\t\t}\n\n\t\tif ($rendermode == 0)\n\t\t{\n\t\t\t$cate_arbo = $this->select_all_categories($type, '', 'parent', 64, 0, 1);\n\t\t\tforeach($categories as $c) {\n\t\t\t\t$arrayselected[] = $c->id;\n\t\t\t}\n\n\t\t\treturn $this->multiselectarray('categories', $cate_arbo, $arrayselected, '', 0, '', 0, '100%', 'disabled', 'category');\n\t\t}\n\n\t\treturn 'ErrorBadValueForParameterRenderMode';\t// Should not happened\n\t}\n\n\n\t/**\n\t *  Show linked object block.\n\t *\n\t *  @param\tCommonObject\t$object\t\t      Object we want to show links to\n\t *  @param  string          $morehtmlright    More html to show on right of title\n\t *  @return\tint\t\t\t\t\t\t\t      <0 if KO, >=0 if OK\n\t */\n\tfunction showLinkedObjectBlock($object, $morehtmlright='')\n\t{\n\t\tglobal $conf,$langs,$hookmanager;\n\t\tglobal $bc;\n\n\t\t$object->fetchObjectLinked();\n\n\t\t// Bypass the default method\n\t\t$hookmanager->initHooks(array('commonobject'));\n\t\t$parameters=array();\n\t\t$reshook=$hookmanager->executeHooks('showLinkedObjectBlock',$parameters,$object,$action);    // Note that $action and $object may have been modified by hook\n\n\t\tif (empty($reshook))\n\t\t{\n\t\t\t$nbofdifferenttypes = count($object->linkedObjects);\n\n\t\t\tprint '<!-- showLinkedObjectBlock -->';\n\t\t\tprint load_fiche_titre($langs->trans('RelatedObjects'), $morehtmlright, '', 0, 0, 'showlinkedobjectblock');\n\n\n\t\t\tprint '<div class=\"div-table-responsive-no-min\">';\n\t\t\tprint '<table class=\"noborder allwidth\">';\n\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\tprint '<td>'.$langs->trans(\"Type\").'</td>';\n\t\t\tprint '<td>'.$langs->trans(\"Ref\").'</td>';\n\t\t\tprint '<td align=\"center\"></td>';\n\t\t\tprint '<td align=\"center\">'.$langs->trans(\"Date\").'</td>';\n\t\t\tprint '<td align=\"right\">'.$langs->trans(\"AmountHTShort\").'</td>';\n\t\t\tprint '<td align=\"right\">'.$langs->trans(\"Status\").'</td>';\n\t\t\tprint '<td></td>';\n\t\t\tprint '</tr>';\n\n\t\t\t$nboftypesoutput=0;\n\n\t\t\tforeach($object->linkedObjects as $objecttype => $objects)\n\t\t\t{\n\t\t\t\t$tplpath = $element = $subelement = $objecttype;\n\n\t\t\t\tif ($objecttype != 'supplier_proposal' && preg_match('/^([^_]+)_([^_]+)/i',$objecttype,$regs))\n\t\t\t\t{\n\t\t\t\t\t$element = $regs[1];\n\t\t\t\t\t$subelement = $regs[2];\n\t\t\t\t\t$tplpath = $element.'/'.$subelement;\n\t\t\t\t}\n\t\t\t\t$tplname='linkedobjectblock';\n\n\t\t\t\t// To work with non standard path\n\t\t\t\tif ($objecttype == 'facture')          {\n\t\t\t\t\t$tplpath = 'compta/'.$element;\n\t\t\t\t\tif (empty($conf->facture->enabled)) continue;\t// Do not show if module disabled\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'facturerec')          {\n\t\t\t\t\t$tplpath = 'compta/facture';\n\t\t\t\t\t$tplname = 'linkedobjectblockForRec';\n\t\t\t\t\tif (empty($conf->facture->enabled)) continue;\t// Do not show if module disabled\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'propal')           {\n\t\t\t\t\t$tplpath = 'comm/'.$element;\n\t\t\t\t\tif (empty($conf->propal->enabled)) continue;\t// Do not show if module disabled\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'supplier_proposal')           {\n\t\t\t\t\tif (empty($conf->supplier_proposal->enabled)) continue;\t// Do not show if module disabled\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'shipping' || $objecttype == 'shipment') {\n\t\t\t\t\t$tplpath = 'expedition';\n\t\t\t\t\tif (empty($conf->expedition->enabled)) continue;\t// Do not show if module disabled\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'delivery')         {\n\t\t\t\t\t$tplpath = 'livraison';\n\t\t\t\t\tif (empty($conf->expedition->enabled)) continue;\t// Do not show if module disabled\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'invoice_supplier') {\n\t\t\t\t\t$tplpath = 'fourn/facture';\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'order_supplier')   {\n\t\t\t\t\t$tplpath = 'fourn/commande';\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'expensereport')   {\n\t\t\t\t\t$tplpath = 'expensereport';\n\t\t\t\t}\n\t\t\t\telse if ($objecttype == 'subscription')   {\n\t\t\t\t\t$tplpath = 'adherents';\n\t\t\t\t}\n\n\t\t\t\tglobal $linkedObjectBlock;\n\t\t\t\t$linkedObjectBlock = $objects;\n\n\n\t\t\t\t// Output template part (modules that overwrite templates must declare this into descriptor)\n\t\t\t\t$dirtpls=array_merge($conf->modules_parts['tpl'],array('/'.$tplpath.'/tpl'));\n\t\t\t\tforeach($dirtpls as $reldir)\n\t\t\t\t{\n\t\t\t\t\tif ($nboftypesoutput == ($nbofdifferenttypes - 1))    // No more type to show after\n\t\t\t\t\t{\n\t\t\t\t\t\tglobal $noMoreLinkedObjectBlockAfter;\n\t\t\t\t\t\t$noMoreLinkedObjectBlockAfter=1;\n\t\t\t\t\t}\n\n\t\t\t\t\t$res=@include dol_buildpath($reldir.'/'.$tplname.'.tpl.php');\n\t\t\t\t\tif ($res)\n\t\t\t\t\t{\n\t\t\t\t\t\t$nboftypesoutput++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (! $nboftypesoutput)\n\t\t\t{\n\t\t\t\tprint '<tr><td class=\"impair opacitymedium\" colspan=\"7\">'.$langs->trans(\"None\").'</td></tr>';\n\t\t\t}\n\n\t\t\tprint '</table>';\n\t\t\tprint '</div>';\n\n\t\t\treturn $nbofdifferenttypes;\n\t\t}\n\t}\n\n\t/**\n\t *  Show block with links to link to other objects.\n\t *\n\t *  @param\tCommonObject\t$object\t\t\t\tObject we want to show links to\n\t *  @param\tarray\t\t\t$restrictlinksto\tRestrict links to some elements, for exemple array('order') or array('supplier_order'). null or array() if no restriction.\n\t *  @param\tarray\t\t\t$excludelinksto\t\tDo not show links of this type, for exemple array('order') or array('supplier_order'). null or array() if no exclusion.\n\t *  @return\tstring\t\t\t\t\t\t\t\t<0 if KO, >0 if OK\n\t */\n\tfunction showLinkToObjectBlock($object, $restrictlinksto=array(), $excludelinksto=array())\n\t{\n\t\tglobal $conf, $langs, $hookmanager;\n\t\tglobal $bc;\n\n\t\t$linktoelem='';\n\t\t$linktoelemlist='';\n\n\t\tif (! is_object($object->thirdparty)) $object->fetch_thirdparty();\n\n\t\t$possiblelinks=array();\n\t\tif (is_object($object->thirdparty) && ! empty($object->thirdparty->id) && $object->thirdparty->id > 0)\n\t\t{\n\t\t\t$listofidcompanytoscan=$object->thirdparty->id;\n\t\t\tif (($object->thirdparty->parent > 0) && ! empty($conf->global->THIRDPARTY_INCLUDE_PARENT_IN_LINKTO)) $listofidcompanytoscan.=','.$object->thirdparty->parent;\n\t\t\tif (($object->fk_project > 0) && ! empty($conf->global->THIRDPARTY_INCLUDE_PROJECT_THIRDPARY_IN_LINKTO))\n\t\t\t{\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n\t\t\t\t$tmpproject=new Project($this->db);\n\t\t\t\t$tmpproject->fetch($object->fk_project);\n\t\t\t\tif ($tmpproject->socid > 0 && ($tmpproject->socid != $object->thirdparty->id)) $listofidcompanytoscan.=','.$tmpproject->socid;\n\t\t\t\tunset($tmpproject);\n\t\t\t}\n\n\t\t\t$possiblelinks=array(\n\t\t\t\t'propal'=>array('enabled'=>$conf->propal->enabled, 'perms'=>1, 'label'=>'LinkToProposal', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_client, t.total_ht FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"propal as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('propal').')'),\n\t\t\t\t'order'=>array('enabled'=>$conf->commande->enabled, 'perms'=>1, 'label'=>'LinkToOrder', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_client, t.total_ht FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"commande as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('commande').')'),\n\t\t\t\t'invoice'=>array('enabled'=>$conf->facture->enabled, 'perms'=>1, 'label'=>'LinkToInvoice', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.facnumber as ref, t.ref_client, t.total as total_ht FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"facture as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('facture').')'),\n\t\t\t\t'contrat'=>array('enabled'=>$conf->contrat->enabled , 'perms'=>1, 'label'=>'LinkToContract', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_supplier, '' as total_ht FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"contrat as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('contract').')'),\n\t\t\t\t'fichinter'=>array('enabled'=>$conf->ficheinter->enabled, 'perms'=>1, 'label'=>'LinkToIntervention', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"fichinter as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('intervention').')'),\n\t\t\t\t'supplier_proposal'=>array('enabled'=>$conf->supplier_proposal->enabled , 'perms'=>1, 'label'=>'LinkToSupplierProposal', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, '' as ref_supplier, t.total_ht FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"supplier_proposal as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('supplier_proposal').')'),\n\t\t\t\t'order_supplier'=>array('enabled'=>$conf->supplier_order->enabled , 'perms'=>1, 'label'=>'LinkToSupplierOrder', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_supplier, t.total_ht FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"commande_fournisseur as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('commande_fournisseur').')'),\n\t\t\t\t'invoice_supplier'=>array('enabled'=>$conf->supplier_invoice->enabled , 'perms'=>1, 'label'=>'LinkToSupplierInvoice', 'sql'=>\"SELECT s.rowid as socid, s.nom as name, s.client, t.rowid, t.ref, t.ref_supplier, t.total_ht FROM \".MAIN_DB_PREFIX.\"societe as s, \".MAIN_DB_PREFIX.\"facture_fourn as t WHERE t.fk_soc = s.rowid AND t.fk_soc IN (\".$listofidcompanytoscan.') AND t.entity IN ('.getEntity('facture_fourn').')')\n\t\t\t);\n\t\t}\n\n\t\tglobal $action;\n\n\t\t// Can complete the possiblelink array\n\t\t$hookmanager->initHooks(array('commonobject'));\n\t\t$parameters=array();\n\t\t$reshook=$hookmanager->executeHooks('showLinkToObjectBlock',$parameters,$object,$action);    // Note that $action and $object may have been modified by hook\n\t\tif (empty($reshook))\n\t\t{\n\t\t\tif (is_array($hookmanager->resArray) && count($hookmanager->resArray))\n\t\t\t{\n\t\t\t\t$possiblelinks=array_merge($possiblelinks, $hookmanager->resArray);\n\t\t\t}\n\t\t}\n\t\telse if ($reshook > 0)\n\t\t{\n\t\t\tif (is_array($hookmanager->resArray) && count($hookmanager->resArray))\n\t\t\t{\n\t\t\t\t$possiblelinks=$hookmanager->resArray;\n\t\t\t}\n\t\t}\n\n\t\tforeach($possiblelinks as $key => $possiblelink)\n\t\t{\n\t\t\t$num = 0;\n\n\t\t\tif (empty($possiblelink['enabled'])) continue;\n\n\t\t\tif (! empty($possiblelink['perms']) && (empty($restrictlinksto) || in_array($key, $restrictlinksto)) && (empty($excludelinksto) || ! in_array($key, $excludelinksto)))\n\t\t\t{\n\t\t\t\tprint '<div id=\"'.$key.'list\"'.(empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)?' style=\"display:none\"':'').'>';\n\t\t\t\t$sql = $possiblelink['sql'];\n\n\t\t\t\t$resqllist = $this->db->query($sql);\n\t\t\t\tif ($resqllist)\n\t\t\t\t{\n\t\t\t\t\t$num = $this->db->num_rows($resqllist);\n\t\t\t\t\t$i = 0;\n\n\t\t\t\t\tprint '<br><form action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"POST\" name=\"formlinked'.$key.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"id\" value=\"'.$object->id.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"addlink\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"addlink\" value=\"'.$key.'\">';\n\t\t\t\t\tprint '<table class=\"noborder\">';\n\t\t\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\t\t\tprint '<td class=\"nowrap\"></td>';\n\t\t\t\t\tprint '<td align=\"center\">' . $langs->trans(\"Ref\") . '</td>';\n\t\t\t\t\tprint '<td align=\"left\">' . $langs->trans(\"RefCustomer\") . '</td>';\n\t\t\t\t\tprint '<td align=\"right\">' . $langs->trans(\"AmountHTShort\") . '</td>';\n\t\t\t\t\tprint '<td align=\"left\">' . $langs->trans(\"Company\") . '</td>';\n\t\t\t\t\tprint '</tr>';\n\t\t\t\t\twhile ($i < $num)\n\t\t\t\t\t{\n\t\t\t\t\t\t$objp = $this->db->fetch_object($resqlorderlist);\n\n\t\t\t\t\t\t$var = ! $var;\n\t\t\t\t\t\tprint '<tr ' . $bc [$var] . '>';\n\t\t\t\t\t\tprint '<td aling=\"left\">';\n\t\t\t\t\t\tprint '<input type=\"radio\" name=\"idtolinkto\" value=' . $objp->rowid . '>';\n\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t\tprint '<td align=\"center\">' . $objp->ref . '</td>';\n\t\t\t\t\t\tprint '<td>' . $objp->ref_client . '</td>';\n\t\t\t\t\t\tprint '<td align=\"right\">' . price($objp->total_ht) . '</td>';\n\t\t\t\t\t\tprint '<td>' . $objp->name . '</td>';\n\t\t\t\t\t\tprint '</tr>';\n\t\t\t\t\t\t$i++;\n\t\t\t\t\t}\n\t\t\t\t\tprint '</table>';\n\t\t\t\t\tprint '<div class=\"center\"><input type=\"submit\" class=\"button valignmiddle\" value=\"' . $langs->trans('ToLink') . '\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"' . $langs->trans('Cancel') . '\"></div>';\n\n\t\t\t\t\tprint '</form>';\n\t\t\t\t\t$this->db->free($resqllist);\n\t\t\t\t} else {\n\t\t\t\t\tdol_print_error($this->db);\n\t\t\t\t}\n\t\t\t\tprint '</div>';\n\t\t\t\tif ($num > 0)\n\t\t\t\t{\n\t\t\t\t}\n\n\t\t\t\t//$linktoelem.=($linktoelem?' &nbsp; ':'');\n\t\t\t\tif ($num > 0) $linktoelemlist.='<li><a href=\"#linkto'.$key.'\" class=\"linkto dropdowncloseonclick\" rel=\"'.$key.'\">' . $langs->trans($possiblelink['label']) .' ('.$num.')</a></li>';\n\t\t\t\t//else $linktoelem.=$langs->trans($possiblelink['label']);\n\t\t\t\telse $linktoelemlist.='<li><span class=\"linktodisabled\">' . $langs->trans($possiblelink['label']) . ' (0)</span></li>';\n\t\t\t}\n\t\t}\n\n\t\tif ($linktoelemlist)\n\t\t{\n\t\t\t$linktoelem='\n    \t\t<dl class=\"dropdown\" id=\"linktoobjectname\">\n    \t\t<dt><a href=\"#linktoobjectname\">'.$langs->trans(\"LinkTo\").'...</a></dt>\n    \t\t<dd>\n    \t\t<div class=\"multiselectlinkto\">\n    \t\t<ul class=\"ulselectedfields\">'.$linktoelemlist.'\n    \t\t</ul>\n    \t\t</div>\n    \t\t</dd>\n    \t\t</dl>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$linktoelem='';\n\t\t}\n\n\t\tprint '<!-- Add js to show linkto box -->\n\t\t\t\t<script type=\"text/javascript\" language=\"javascript\">\n\t\t\t\tjQuery(document).ready(function() {\n\t\t\t\t\tjQuery(\".linkto\").click(function() {\n\t\t\t\t\t\tconsole.log(\"We choose to show/hide link for rel=\"+jQuery(this).attr(\\'rel\\'));\n\t\t\t\t\t    jQuery(\"#\"+jQuery(this).attr(\\'rel\\')+\"list\").toggle();\n\t\t\t\t\t\tjQuery(this).toggle();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t</script>\n\t\t';\n\n\t\treturn $linktoelem;\n\t}\n\n\t/**\n\t *\tReturn an html string with a select combo box to choose yes or no\n\t *\n\t *\t@param\tstring\t\t$htmlname\t\tName of html select field\n\t *\t@param\tstring\t\t$value\t\t\tPre-selected value\n\t *\t@param\tint\t\t\t$option\t\t\t0 return yes/no, 1 return 1/0\n\t *\t@param\tbool\t\t$disabled\t\ttrue or false\n\t *  @param\tint      \t$useempty\t\t1=Add empty line\n\t *\t@return\tstring\t\t\t\t\t\tSee option\n\t */\n\tfunction selectyesno($htmlname, $value='', $option=0, $disabled=false, $useempty='')\n\t{\n\t\tglobal $langs;\n\n\t\t$yes=\"yes\"; $no=\"no\";\n\t\tif ($option)\n\t\t{\n\t\t\t$yes=\"1\";\n\t\t\t$no=\"0\";\n\t\t}\n\n\t\t$disabled = ($disabled ? ' disabled' : '');\n\n\t\t$resultyesno = '<select class=\"flat\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\"'.$disabled.'>'.\"\\n\";\n\t\tif ($useempty) $resultyesno .= '<option value=\"-1\"'.(($value < 0)?' selected':'').'>&nbsp;</option>'.\"\\n\";\n\t\tif ((\"$value\" == 'yes') || ($value == 1))\n\t\t{\n\t\t\t$resultyesno .= '<option value=\"'.$yes.'\" selected>'.$langs->trans(\"Yes\").'</option>'.\"\\n\";\n\t\t\t$resultyesno .= '<option value=\"'.$no.'\">'.$langs->trans(\"No\").'</option>'.\"\\n\";\n\t\t}\n\t\telse\n\t   {\n\t   \t\t$selected=(($useempty && $value != '0' && $value != 'no')?'':' selected');\n\t\t\t$resultyesno .= '<option value=\"'.$yes.'\">'.$langs->trans(\"Yes\").'</option>'.\"\\n\";\n\t\t\t$resultyesno .= '<option value=\"'.$no.'\"'.$selected.'>'.$langs->trans(\"No\").'</option>'.\"\\n\";\n\t\t}\n\t\t$resultyesno .= '</select>'.\"\\n\";\n\t\treturn $resultyesno;\n\t}\n\n\n\n\t/**\n\t *  Return list of export templates\n\t *\n\t *  @param\tstring\t$selected          Id modele pre-selectionne\n\t *  @param  string\t$htmlname          Name of HTML select\n\t *  @param  string\t$type              Type of searched templates\n\t *  @param  int\t\t$useempty          Affiche valeur vide dans liste\n\t *  @return\tvoid\n\t */\n\tfunction select_export_model($selected='',$htmlname='exportmodelid',$type='',$useempty=0)\n\t{\n\n\t\t$sql = \"SELECT rowid, label\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"export_model\";\n\t\t$sql.= \" WHERE type = '\".$type.\"'\";\n\t\t$sql.= \" ORDER BY rowid\";\n\t\t$result = $this->db->query($sql);\n\t\tif ($result)\n\t\t{\n\t\t\tprint '<select class=\"flat\" name=\"'.$htmlname.'\">';\n\t\t\tif ($useempty)\n\t\t\t{\n\t\t\t\tprint '<option value=\"-1\">&nbsp;</option>';\n\t\t\t}\n\n\t\t\t$num = $this->db->num_rows($result);\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $this->db->fetch_object($result);\n\t\t\t\tif ($selected == $obj->rowid)\n\t\t\t\t{\n\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\" selected>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprint '<option value=\"'.$obj->rowid.'\">';\n\t\t\t\t}\n\t\t\t\tprint $obj->label;\n\t\t\t\tprint '</option>';\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\tprint \"</select>\";\n\t\t}\n\t\telse {\n\t\t\tdol_print_error($this->db);\n\t\t}\n\t}\n\n\t/**\n\t *    Return a HTML area with the reference of object and a navigation bar for a business object\n\t *    Note: To complete search with a particular filter on select, you can set $object->next_prev_filter set to define SQL criterias.\n\t *\n\t *    @param\tobject\t$object\t\t\tObject to show.\n\t *    @param\tstring\t$paramid   \t\tName of parameter to use to name the id into the URL next/previous link.\n\t *    @param\tstring\t$morehtml  \t\tMore html content to output just before the nav bar.\n\t *    @param\tint\t\t$shownav\t  \tShow Condition (navigation is shown if value is 1).\n\t *    @param\tstring\t$fieldid   \t\tName of field id into database to use for select next and previous (we make the select max and min on this field compared to $object->ref). Use 'none' to disable next/prev.\n\t *    @param\tstring\t$fieldref   \tName of field ref of object (object->ref) to show or 'none' to not show ref.\n\t *    @param\tstring\t$morehtmlref  \tMore html to show after ref.\n\t *    @param\tstring\t$moreparam  \tMore param to add in nav link url. Must start with '&...'.\n\t *\t  @param\tint\t\t$nodbprefix\t\tDo not include DB prefix to forge table name.\n\t *\t  @param\tstring\t$morehtmlleft\tMore html code to show before ref.\n\t *\t  @param\tstring\t$morehtmlstatus\tMore html code to show under navigation arrows (status place).\n\t *\t  @param\tstring\t$morehtmlright\tMore html code to show after ref.\n\t * \t  @return\tstring    \t\t\t\tPortion HTML with ref + navigation buttons\n\t */\n\tfunction showrefnav($object,$paramid,$morehtml='',$shownav=1,$fieldid='rowid',$fieldref='ref',$morehtmlref='',$moreparam='',$nodbprefix=0,$morehtmlleft='',$morehtmlstatus='',$morehtmlright='')\n\t{\n\t\tglobal $langs,$conf,$hookmanager;\n\n\t\t$ret='';\n\t\tif (empty($fieldid))  $fieldid='rowid';\n\t\tif (empty($fieldref)) $fieldref='ref';\n\n\t\t// Add where from hooks\n\t\tif (is_object($hookmanager))\n\t\t{\n\t\t\t$parameters=array();\n\t\t\t$reshook=$hookmanager->executeHooks('printFieldListWhere',$parameters, $object);    // Note that $action and $object may have been modified by hook\n\t\t\t$object->next_prev_filter.=$hookmanager->resPrint;\n\t\t}\n\t\t$previous_ref = $next_ref = '';\n\t\tif ($shownav)\n\t\t{\n\t\t\t//print \"paramid=$paramid,morehtml=$morehtml,shownav=$shownav,$fieldid,$fieldref,$morehtmlref,$moreparam\";\n\t\t\t$object->load_previous_next_ref((isset($object->next_prev_filter)?$object->next_prev_filter:''), $fieldid, $nodbprefix);\n\n\t\t\t$navurl = $_SERVER[\"PHP_SELF\"];\n\t\t\t// Special case for project/task page\n\t\t\tif ($paramid == 'project_ref')\n\t\t\t{\n\t\t\t\t$navurl = preg_replace('/\\/tasks\\/(task|contact|time|note|document)\\.php/','/tasks.php',$navurl);\n\t\t\t\t$paramid='ref';\n\t\t\t}\n\n\t\t\t// accesskey is for Windows or Linux:  ALT + key for chrome, ALT + SHIFT + KEY for firefox\n\t\t\t// accesskey is for Mac:               CTRL + key for all browsers\n\t\t\t$previous_ref = $object->ref_previous?'<a accesskey=\"p\" href=\"'.$navurl.'?'.$paramid.'='.urlencode($object->ref_previous).$moreparam.'\"><i class=\"fa fa-chevron-left\"></i></a>':'<span class=\"inactive\"><i class=\"fa fa-chevron-left opacitymedium\"></i></span>';\n\t\t\t$next_ref     = $object->ref_next?'<a accesskey=\"n\" href=\"'.$navurl.'?'.$paramid.'='.urlencode($object->ref_next).$moreparam.'\"><i class=\"fa fa-chevron-right\"></i></a>':'<span class=\"inactive\"><i class=\"fa fa-chevron-right opacitymedium\"></i></span>';\n\t\t}\n\n\t\t//print \"xx\".$previous_ref.\"x\".$next_ref;\n\t\t$ret.='<!-- Start banner content --><div style=\"vertical-align: middle\">';\n\n\t\t// Right part of banner\n\t\tif ($morehtmlright) $ret.='<div class=\"inline-block floatleft\">'.$morehtmlright.'</div>';\n\n\t\tif ($previous_ref || $next_ref || $morehtml)\n\t\t{\n\t\t\t$ret.='<div class=\"pagination paginationref\"><ul class=\"right\">';\n\t\t}\n\t\tif ($morehtml)\n\t\t{\n\t\t\t$ret.='<li class=\"noborder litext\">'.$morehtml.'</li>';\n\t\t}\n\t\tif ($shownav && ($previous_ref || $next_ref))\n\t\t{\n\t\t\t$ret.='<li class=\"pagination\">'.$previous_ref.'</li>';\n\t\t\t$ret.='<li class=\"pagination\">'.$next_ref.'</li>';\n\t\t}\n\t\tif ($previous_ref || $next_ref || $morehtml)\n\t\t{\n\t\t\t$ret.='</ul></div>';\n\t\t}\n\t\tif ($morehtmlstatus) $ret.='<div class=\"statusref\">'.$morehtmlstatus.'</div>';\n\n\t\t// Left part of banner\n\t\tif ($morehtmlleft)\n\t\t{\n\t\t\tif ($conf->browser->layout == 'phone') $ret.='<div class=\"floatleft\">'.$morehtmlleft.'</div>';    // class=\"center\" to have photo in middle\n\t\t\telse $ret.='<div class=\"inline-block floatleft\">'.$morehtmlleft.'</div>';\n\t\t}\n\n\t\t//if ($conf->browser->layout == 'phone') $ret.='<div class=\"clearboth\"></div>';\n\t\t$ret.='<div class=\"inline-block floatleft valignmiddle refid'.(($shownav && ($previous_ref || $next_ref))?' refidpadding':'').'\">';\n\n\t\t// For thirdparty, contact, user, member, the ref is the id, so we show something else\n\t\tif ($object->element == 'societe')\n\t\t{\n\t\t\t$ret.=dol_htmlentities($object->name);\n\t\t}\n\t\telse if ($object->element == 'member')\n\t\t{\n\t\t\t$fullname=$object->getFullName($langs);\n\t\t\tif ($object->morphy == 'mor') {\n\t\t\t\t$ret.= dol_htmlentities($object->societe) . ((! empty($fullname) && $object->societe != $fullname)?' ('.dol_htmlentities($fullname).')':'');\n\t\t\t} else {\n\t\t\t\t$ret.= dol_htmlentities($fullname) . ((! empty($object->societe) && $object->societe != $fullname)?' ('.dol_htmlentities($object->societe).')':'');\n\t\t\t}\n\t\t}\n\t\telse if (in_array($object->element, array('contact', 'user', 'usergroup')))\n\t\t{\n\t\t\t$ret.=dol_htmlentities($object->getFullName($langs));\n\t\t}\n\t\telse if (in_array($object->element, array('action', 'agenda')))\n\t\t{\n\t\t\t$ret.=$object->ref.'<br>'.$object->label;\n\t\t}\n\t\telse if (in_array($object->element, array('adherent_type')))\n\t\t{\n\t\t\t$ret.=$object->label;\n\t\t}\n\t\telse if ($object->element == 'ecm_directories')\n\t\t{\n\t\t\t$ret.='';\n\t\t}\n\t\telse if ($fieldref != 'none') $ret.=dol_htmlentities($object->$fieldref);\n\n\n\t\tif ($morehtmlref)\n\t\t{\n\t\t\t$ret.=' '.$morehtmlref;\n\t\t}\n\t\t$ret.='</div>';\n\n\t\t$ret.='</div><!-- End banner content -->';\n\n\t\treturn $ret;\n\t}\n\n\n\t/**\n\t *    \tReturn HTML code to output a barcode\n\t *\n\t *     \t@param\tObject\t$object\t\tObject containing data to retrieve file name\n\t * \t\t@param\tint\t\t$width\t\t\tWidth of photo\n\t * \t  \t@return string    \t\t\t\tHTML code to output barcode\n\t */\n\tfunction showbarcode(&$object,$width=100)\n\t{\n\t\tglobal $conf;\n\n\t\t//Check if barcode is filled in the card\n\t\tif (empty($object->barcode)) return '';\n\n\t\t// Complete object if not complete\n\t\tif (empty($object->barcode_type_code) || empty($object->barcode_type_coder))\n\t\t{\n\t\t\t$result = $object->fetch_barcode();\n\t\t\t//Check if fetch_barcode() failed\n\t\t\tif ($result < 1) return '<!-- ErrorFetchBarcode -->';\n\t\t}\n\n\t\t// Barcode image\n\t\t$url=DOL_URL_ROOT.'/viewimage.php?modulepart=barcode&generator='.urlencode($object->barcode_type_coder).'&code='.urlencode($object->barcode).'&encoding='.urlencode($object->barcode_type_code);\n\t\t$out ='<!-- url barcode = '.$url.' -->';\n\t\t$out.='<img src=\"'.$url.'\">';\n\t\treturn $out;\n\t}\n\n\t/**\n\t *    \tReturn HTML code to output a photo\n\t *\n\t *    \t@param\tstring\t\t$modulepart\t\t\tKey to define module concerned ('societe', 'userphoto', 'memberphoto')\n\t *     \t@param  object\t\t$object\t\t\t\tObject containing data to retrieve file name\n\t * \t\t@param\tint\t\t\t$width\t\t\t\tWidth of photo\n\t * \t\t@param\tint\t\t\t$height\t\t\t\tHeight of photo (auto if 0)\n\t * \t\t@param\tint\t\t\t$caneditfield\t\tAdd edit fields\n\t * \t\t@param\tstring\t\t$cssclass\t\t\tCSS name to use on img for photo\n\t * \t\t@param\tstring\t\t$imagesize\t\t    'mini', 'small' or '' (original)\n\t *      @param  int         $addlinktofullsize  Add link to fullsize image\n\t *      @param  int         $cache              1=Accept to use image in cache\n\t * \t  \t@return string    \t\t\t\t\t\tHTML code to output photo\n\t */\n\tstatic function showphoto($modulepart, $object, $width=100, $height=0, $caneditfield=0, $cssclass='photowithmargin', $imagesize='', $addlinktofullsize=1, $cache=0)\n\t{\n\t\tglobal $conf,$langs;\n\n\t\t$entity = (! empty($object->entity) ? $object->entity : $conf->entity);\n\t\t$id = (! empty($object->id) ? $object->id : $object->rowid);\n\n\t\t$ret='';$dir='';$file='';$originalfile='';$altfile='';$email='';\n\t\tif ($modulepart=='societe')\n\t\t{\n\t\t\t$dir=$conf->societe->multidir_output[$entity];\n\t\t\tif (! empty($object->logo))\n\t\t\t{\n\t\t\t\tif ((string) $imagesize == 'mini') $file=get_exdir(0, 0, 0, 0, $object, 'thirdparty').'/logos/'.getImageFileNameForSize($object->logo, '_mini');             // getImageFileNameForSize include the thumbs\n\t\t\t\telse if ((string) $imagesize == 'small') $file=get_exdir(0, 0, 0, 0, $object, 'thirdparty').'/logos/'.getImageFileNameForSize($object->logo, '_small');\n\t\t\t\telse $file=get_exdir(0, 0, 0, 0, $object, 'thirdparty').'/logos/'.$object->logo;\n\t\t\t\t$originalfile=get_exdir(0, 0, 0, 0, $object, 'thirdparty').'/logos/'.$object->logo;\n\t\t\t}\n\t\t\t$email=$object->email;\n\t\t}\n\t\telse if ($modulepart=='contact')\n\t\t{\n\t\t\t$dir=$conf->societe->multidir_output[$entity].'/contact';\n\t\t\tif (! empty($object->photo))\n\t\t\t{\n\t\t\t\tif ((string) $imagesize == 'mini') $file=get_exdir(0, 0, 0, 0, $object, 'contact').'/photos/'.getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\telse if ((string) $imagesize == 'small') $file=get_exdir(0, 0, 0, 0, $object, 'contact').'/photos/'.getImageFileNameForSize($object->photo, '_small');\n\t\t\t\telse $file=get_exdir(0, 0, 0, 0, $object, 'contact').'/photos/'.$object->photo;\n\t\t\t\t$originalfile=get_exdir(0, 0, 0, 0, $object, 'contact').'/photos/'.$object->photo;\n\t\t\t}\n\t\t\t$email=$object->email;\n\t\t}\n\t\telse if ($modulepart=='userphoto')\n\t\t{\n\t\t\t$dir=$conf->user->dir_output;\n\t\t\tif (! empty($object->photo))\n\t\t\t{\n\t\t\t\tif ((string) $imagesize == 'mini') $file=get_exdir($id, 2, 0, 0, $object, 'user').getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\telse if ((string) $imagesize == 'small') $file=get_exdir($id, 2, 0, 0, $object, 'user').getImageFileNameForSize($object->photo, '_small');\n\t\t\t\telse $file=get_exdir($id, 2, 0, 0, $object, 'user').$object->photo;\n\t\t\t\t$originalfile=get_exdir($id, 2, 0, 0, $object, 'user').$object->photo;\n\t\t\t}\n\t\t\tif (! empty($conf->global->MAIN_OLD_IMAGE_LINKS)) $altfile=$object->id.\".jpg\";\t// For backward compatibility\n\t\t\t$email=$object->email;\n\t\t}\n\t\telse if ($modulepart=='memberphoto')\n\t\t{\n\t\t\t$dir=$conf->adherent->dir_output;\n\t\t\tif (! empty($object->photo))\n\t\t\t{\n\t\t\t\tif ((string) $imagesize == 'mini') $file=get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\telse if ((string) $imagesize == 'small') $file=get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.getImageFileNameForSize($object->photo, '_small');\n\t\t\t\telse $file=get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.$object->photo;\n\t\t\t\t$originalfile=get_exdir(0, 0, 0, 0, $object, 'member').'photos/'.$object->photo;\n\t\t\t}\n\t\t\tif (! empty($conf->global->MAIN_OLD_IMAGE_LINKS)) $altfile=$object->id.\".jpg\";\t// For backward compatibility\n\t\t\t$email=$object->email;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Generic case to show photos\n\t\t\t$dir=$conf->$modulepart->dir_output;\n\t\t\tif (! empty($object->photo))\n\t\t\t{\n\t\t\t\tif ((string) $imagesize == 'mini') $file=get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.getImageFileNameForSize($object->photo, '_mini');\n\t\t\t\telse if ((string) $imagesize == 'small') $file=get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.getImageFileNameForSize($object->photo, '_small');\n\t\t\t\telse $file=get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.$object->photo;\n\t\t\t\t$originalfile=get_exdir($id, 2, 0, 0, $object, $modulepart).'photos/'.$object->photo;\n\t\t\t}\n\t\t\tif (! empty($conf->global->MAIN_OLD_IMAGE_LINKS)) $altfile=$object->id.\".jpg\";\t// For backward compatibility\n\t\t\t$email=$object->email;\n\t\t}\n\n\t\tif ($dir)\n\t\t{\n\t\t\tif ($file && file_exists($dir.\"/\".$file))\n\t\t\t{\n\t\t\t\tif ($addlinktofullsize)\n\t\t\t\t{\n\t\t\t\t\t$urladvanced=getAdvancedPreviewUrl($modulepart, $originalfile, 0, '&entity='.$entity);\n\t\t\t\t\tif ($urladvanced) $ret.='<a href=\"'.$urladvanced.'\">';\n\t\t\t\t\telse $ret.='<a href=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($originalfile).'&cache='.$cache.'\">';\n\t\t\t\t}\n\t\t\t\t$ret.='<img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"Photo\" id=\"photologo'.(preg_replace('/[^a-z]/i','_',$file)).'\" '.($width?' width=\"'.$width.'\"':'').($height?' height=\"'.$height.'\"':'').' src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($file).'&cache='.$cache.'\">';\n\t\t\t\tif ($addlinktofullsize) $ret.='</a>';\n\t\t\t}\n\t\t\telse if ($altfile && file_exists($dir.\"/\".$altfile))\n\t\t\t{\n\t\t\t\tif ($addlinktofullsize)\n\t\t\t\t{\n\t\t\t\t\t$urladvanced=getAdvancedPreviewUrl($modulepart, $originalfile, 0, '&entity='.$entity);\n\t\t\t\t\tif ($urladvanced) $ret.='<a href=\"'.$urladvanced.'\">';\n\t\t\t\t\telse $ret.='<a href=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($originalfile).'&cache='.$cache.'\">';\n\t\t\t\t}\n\t\t\t\t$ret.='<img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"Photo alt\" id=\"photologo'.(preg_replace('/[^a-z]/i','_',$file)).'\" class=\"'.$cssclass.'\" '.($width?' width=\"'.$width.'\"':'').($height?' height=\"'.$height.'\"':'').' src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart='.$modulepart.'&entity='.$entity.'&file='.urlencode($altfile).'&cache='.$cache.'\">';\n\t\t\t\tif ($addlinktofullsize) $ret.='</a>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$nophoto='/public/theme/common/nophoto.png';\n\t\t\t\tif (in_array($modulepart,array('userphoto','contact')))\t// For module that are \"physical\" users\n\t\t\t\t{\n\t\t\t\t\t$nophoto='/public/theme/common/user_anonymous.png';\n\t\t\t\t\tif ($object->gender == 'man') $nophoto='/public/theme/common/user_man.png';\n\t\t\t\t\tif ($object->gender == 'woman') $nophoto='/public/theme/common/user_woman.png';\n\t\t\t\t}\n\n\t\t\t\tif (! empty($conf->gravatar->enabled) && $email)\n\t\t\t\t{\n\t\t\t\t\t/**\n\t\t\t\t\t * @see https://gravatar.com/site/implement/images/php/\n\t\t\t\t\t */\n\t\t\t\t\tglobal $dolibarr_main_url_root;\n\t\t\t\t\t$ret.='<!-- Put link to gravatar -->';\n\t\t\t\t\t//$defaultimg=urlencode(dol_buildpath($nophoto,3));\n\t\t\t\t\t$defaultimg='mm';\n\t\t\t\t\t$ret.='<img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"Gravatar avatar\" title=\"'.$email.' Gravatar avatar\" '.($width?' width=\"'.$width.'\"':'').($height?' height=\"'.$height.'\"':'').' src=\"https://www.gravatar.com/avatar/'.dol_hash(strtolower(trim($email)),3).'?s='.$width.'&d='.$defaultimg.'\">';\t// gravatar need md5 hash\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$ret.='<img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"No photo\" '.($width?' width=\"'.$width.'\"':'').($height?' height=\"'.$height.'\"':'').' src=\"'.DOL_URL_ROOT.$nophoto.'\">';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($caneditfield)\n\t\t\t{\n\t\t\t\tif ($object->photo) $ret.=\"<br>\\n\";\n\t\t\t\t$ret.='<table class=\"nobordernopadding centpercent\">';\n\t\t\t\tif ($object->photo) $ret.='<tr><td><input type=\"checkbox\" class=\"flat photodelete\" name=\"deletephoto\" id=\"photodelete\"> '.$langs->trans(\"Delete\").'<br><br></td></tr>';\n\t\t\t\t$ret.='<tr><td class=\"tdoverflow\"><input type=\"file\" class=\"flat maxwidth200onsmartphone\" name=\"photo\" id=\"photoinput\"></td></tr>';\n\t\t\t\t$ret.='</table>';\n\t\t\t}\n\n\t\t}\n\t\telse dol_print_error('','Call of showphoto with wrong parameters modulepart='.$modulepart);\n\n\t\treturn $ret;\n\t}\n\n\t/**\n\t *\tReturn select list of groups\n\t *\n\t *  @param\tstring\t$selected       Id group preselected\n\t *  @param  string\t$htmlname       Field name in form\n\t *  @param  int\t\t$show_empty     0=liste sans valeur nulle, 1=ajoute valeur inconnue\n\t *  @param  string\t$exclude        Array list of groups id to exclude\n\t * \t@param\tint\t\t$disabled\t\tIf select list must be disabled\n\t *  @param  string\t$include        Array list of groups id to include\n\t * \t@param\tint\t\t$enableonly\t\tArray list of groups id to be enabled. All other must be disabled\n\t * \t@param\tstring\t$force_entity\t'0' or Ids of environment to force\n\t *  @return\tstring\n\t *  @see select_dolusers\n\t */\n\tfunction select_dolgroups($selected='', $htmlname='groupid', $show_empty=0, $exclude='', $disabled=0, $include='', $enableonly='', $force_entity='0')\n\t{\n\t\tglobal $conf,$user,$langs;\n\n\t\t// Permettre l'exclusion de groupes\n\t\tif (is_array($exclude))\t$excludeGroups = implode(\"','\",$exclude);\n\t\t// Permettre l'inclusion de groupes\n\t\tif (is_array($include))\t$includeGroups = implode(\"','\",$include);\n\n\t\t$out='';\n\n\t\t// On recherche les groupes\n\t\t$sql = \"SELECT ug.rowid, ug.nom as name\";\n\t\tif (! empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && ! $user->entity)\n\t\t{\n\t\t\t$sql.= \", e.label\";\n\t\t}\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"usergroup as ug \";\n\t\tif (! empty($conf->multicompany->enabled) && $conf->entity == 1 && $user->admin && ! $user->entity)\n\t\t{\n\t\t\t$sql.= \" LEFT JOIN \".MAIN_DB_PREFIX.\"entity as e ON e.rowid=ug.entity\";\n\t\t\tif ($force_entity) $sql.= \" WHERE ug.entity IN (0,\".$force_entity.\")\";\n\t\t\telse $sql.= \" WHERE ug.entity IS NOT NULL\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$sql.= \" WHERE ug.entity IN (0,\".$conf->entity.\")\";\n\t\t}\n\t\tif (is_array($exclude) && $excludeGroups) $sql.= \" AND ug.rowid NOT IN ('\".$excludeGroups.\"')\";\n\t\tif (is_array($include) && $includeGroups) $sql.= \" AND ug.rowid IN ('\".$includeGroups.\"')\";\n\t\t$sql.= \" ORDER BY ug.nom ASC\";\n\n\t\tdol_syslog(get_class($this).\"::select_dolgroups\", LOG_DEBUG);\n\t\t$resql=$this->db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t// Enhance with select2\n\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/lib/ajax.lib.php';\n\t\t   \t$out .= ajax_combobox($htmlname);\n\n\t\t\t$out.= '<select class=\"flat minwidth200\" id=\"'.$htmlname.'\" name=\"'.$htmlname.'\"'.($disabled?' disabled':'').'>';\n\n\t\t\t$num = $this->db->num_rows($resql);\n\t\t\t$i = 0;\n\t\t\tif ($num)\n\t\t\t{\n\t\t\t\tif ($show_empty) $out.= '<option value=\"-1\"'.($selected==-1?' selected':'').'>&nbsp;</option>'.\"\\n\";\n\n\t\t\t\twhile ($i < $num)\n\t\t\t\t{\n\t\t\t\t\t$obj = $this->db->fetch_object($resql);\n\t\t\t\t\t$disableline=0;\n\t\t\t\t\tif (is_array($enableonly) && count($enableonly) && ! in_array($obj->rowid,$enableonly)) $disableline=1;\n\n\t\t\t\t\t$out.= '<option value=\"'.$obj->rowid.'\"';\n\t\t\t\t\tif ($disableline) $out.= ' disabled';\n\t\t\t\t\tif ((is_object($selected) && $selected->id == $obj->rowid) || (! is_object($selected) && $selected == $obj->rowid))\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= ' selected';\n\t\t\t\t\t}\n\t\t\t\t\t$out.= '>';\n\n\t\t\t\t\t$out.= $obj->name;\n\t\t\t\t\tif (! empty($conf->multicompany->enabled) && empty($conf->global->MULTICOMPANY_TRANSVERSE_MODE) && $conf->entity == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$out.= \" (\".$obj->label.\")\";\n\t\t\t\t\t}\n\n\t\t\t\t\t$out.= '</option>';\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ($show_empty) $out.= '<option value=\"-1\"'.($selected==-1?' selected':'').'></option>'.\"\\n\";\n\t\t\t\t$out.= '<option value=\"\" disabled>'.$langs->trans(\"NoUserGroupDefined\").'</option>';\n\t\t\t}\n\t\t\t$out.= '</select>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($this->db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\n\t/**\n\t *\tReturn HTML to show the search and clear seach button\n\t *\n\t *  @return\tstring\n\t */\n\tfunction showFilterButtons()\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$out='<div class=\"nowrap\">';\n\t\t$out.='<input type=\"image\" class=\"liste_titre\" name=\"button_search\" src=\"'.img_picto($langs->trans(\"Search\"),'search.png','','',1).'\" value=\"'.dol_escape_htmltag($langs->trans(\"Search\")).'\" title=\"'.dol_escape_htmltag($langs->trans(\"Search\")).'\">';\n\t\t$out.='<input type=\"image\" class=\"liste_titre\" name=\"button_removefilter\" src=\"'.img_picto($langs->trans(\"Search\"),'searchclear.png','','',1).'\" value=\"'.dol_escape_htmltag($langs->trans(\"RemoveFilter\")).'\" title=\"'.dol_escape_htmltag($langs->trans(\"RemoveFilter\")).'\">';\n\t\t$out.='</div>';\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tReturn HTML to show the search and clear seach button\n\t *\n\t *  @param  string  $cssclass                  CSS class\n\t *  @param  int     $calljsfunction            0=default. 1=call function initCheckForSelect() after changing status of checkboxes\n\t *  @return\tstring\n\t */\n\tfunction showCheckAddButtons($cssclass='checkforaction', $calljsfunction=0)\n\t{\n\t\tglobal $conf, $langs;\n\n\t\t$out='';\n\t\tif (! empty($conf->use_javascript_ajax)) $out.='<div class=\"inline-block checkallactions\"><input type=\"checkbox\" id=\"checkallactions\" name=\"checkallactions\" class=\"checkallactions\"></div>';\n\t\t$out.='<script type=\"text/javascript\">\n            $(document).ready(function() {\n            \t$(\"#checkallactions\").click(function() {\n                    if($(this).is(\\':checked\\')){\n                        console.log(\"We check all\");\n                \t\t$(\".'.$cssclass.'\").prop(\\'checked\\', true);\n                    }\n                    else\n                    {\n                        console.log(\"We uncheck all\");\n                \t\t$(\".'.$cssclass.'\").prop(\\'checked\\', false);\n                    }'.\"\\n\";\n\t\tif ($calljsfunction) $out.='if (typeof initCheckForSelect == \\'function\\') { initCheckForSelect(0); } else { console.log(\"No function initCheckForSelect found. Call won\\'t be done.\"); }';\n\t\t$out.='         });\n                });\n            </script>';\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t *\tReturn HTML to show the search and clear seach button\n\t *\n\t *  @param\tint  \t$addcheckuncheckall        Add the check all/uncheck all checkbox (use javascript) and code to manage this\n\t *  @param  string  $cssclass                  CSS class\n\t *  @param  int     $calljsfunction            0=default. 1=call function initCheckForSelect() after changing status of checkboxes\n\t *  @return\tstring\n\t */\n\tfunction showFilterAndCheckAddButtons($addcheckuncheckall=0, $cssclass='checkforaction', $calljsfunction=0)\n\t{\n\t\t$out.=$this->showFilterButtons();\n\t\tif ($addcheckuncheckall)\n\t\t{\n\t\t\t$out.=$this->showCheckAddButtons($cssclass, $calljsfunction);\n\t\t}\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Return HTML to show the select categories of expense category\n\t *\n\t * @param\tstring\t$selected              preselected category\n\t * @param\tstring\t$htmlname              name of HTML select list\n\t * @param\tinteger\t$useempty              1=Add empty line\n\t * @param\tarray\t$excludeid             id to exclude\n\t * @param\tstring\t$target                htmlname of target select to bind event\n\t * @param\tint\t\t$default_selected      default category to select if fk_c_type_fees change = EX_KME\n\t * @param\tarray\t$params                param to give\n\t * @return\tstring\n\t */\n\tfunction selectExpenseCategories($selected='', $htmlname='fk_c_exp_tax_cat', $useempty=0, $excludeid=array(), $target='', $default_selected=0, $params=array())\n\t{\n\t\tglobal $db, $conf, $langs, $user;\n\n\t\t$sql = 'SELECT rowid, label FROM '.MAIN_DB_PREFIX.'c_exp_tax_cat WHERE active = 1';\n\t\t$sql.= ' AND entity IN (0,'.getEntity('').')';\n\t\tif (!empty($excludeid)) $sql.= ' AND rowid NOT IN ('.implode(',', $excludeid).')';\n\t\t$sql.= ' ORDER BY label';\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$out = '<select name=\"'.$htmlname.'\" class=\"'.$htmlname.' flat minwidth75imp\">';\n\t\t\tif ($useempty) $out.= '<option value=\"0\">&nbsp;</option>';\n\n\t\t\twhile ($obj = $db->fetch_object($resql))\n\t\t\t{\n\t\t\t\t$out.= '<option '.($selected == $obj->rowid ? 'selected=\"selected\"' : '').' value=\"'.$obj->rowid.'\">'.$langs->trans($obj->label).'</option>';\n\t\t\t}\n\t\t\t$out.= '</select>';\n\t\t\tif (! empty($htmlname) && $user->admin) $out .= ' '.info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\n\t\t\tif (!empty($target))\n\t\t\t{\n\t\t\t\t$sql = \"SELECT c.id FROM \".MAIN_DB_PREFIX.\"c_type_fees as c WHERE c.code = 'EX_KME' AND c.active = 1\";\n\t\t\t\t$resql = $db->query($sql);\n\t\t\t\tif ($resql)\n\t\t\t\t{\n\t\t\t\t\tif ($db->num_rows($resql) > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t\t\t$out.= '<script type=\"text/javascript\">\n\t\t\t\t\t\t\t$(function() {\n\t\t\t\t\t\t\t\t$(\"select[name='.$target.']\").on(\"change\", function() {\n\t\t\t\t\t\t\t\t\tvar current_val = $(this).val();\n\t\t\t\t\t\t\t\t\tif (current_val == '.$obj->id.') {';\n\t\t\t\t\t\tif (!empty($default_selected) || !empty($selected)) $out.= '$(\"select[name='.$htmlname.']\").val(\"'.($default_selected > 0 ? $default_selected : $selected).'\");';\n\n\t\t\t\t\t\t$out.= '\n\t\t\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").change();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").change(function() {\n\n\t\t\t\t\t\t\t\t\tif ($(\"select[name='.$target.']\").val() == '.$obj->id.') {\n\t\t\t\t\t\t\t\t\t\t// get price of kilometer to fill the unit price\n\t\t\t\t\t\t\t\t\t\tvar data = '.json_encode($params).';\n\t\t\t\t\t\t\t\t\t\tdata.fk_c_exp_tax_cat = $(this).val();\n\n\t\t\t\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\t\t\t\t\t\tdataType: \"json\",\n\t\t\t\t\t\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\t\t\t\t\t\turl: \"'.(DOL_URL_ROOT.'/expensereport/ajax/ajaxik.php').'\",\n\t\t\t\t\t\t\t\t\t\t}).done(function( data, textStatus, jqXHR ) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t\t\t\t\t\tif (typeof data.up != \"undefined\") {\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"input[name=value_unit]\").val(data.up);\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").attr(\"title\", data.title);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"input[name=value_unit]\").val(\"\");\n\t\t\t\t\t\t\t\t\t\t\t\t$(\"select[name='.$htmlname.']\").attr(\"title\", \"\");\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t</script>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Return HTML to show the select ranges of expense range\n\t *\n\t * @param\tstring\t$selected    preselected category\n\t * @param\tstring\t$htmlname    name of HTML select list\n\t * @param\tinteger\t$useempty    1=Add empty line\n\t * @return\tstring\n\t */\n\tfunction selectExpenseRanges($selected='', $htmlname='fk_range', $useempty=0)\n\t{\n\t\tglobal $db,$conf,$langs;\n\n\t\t$sql = 'SELECT rowid, range_ik FROM '.MAIN_DB_PREFIX.'c_exp_tax_range';\n\t\t$sql.= ' WHERE entity = '.$conf->entity.' AND active = 1';\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$out = '<select name=\"'.$htmlname.'\" class=\"'.$htmlname.' flat minwidth75imp\">';\n\t\t\tif ($useempty) $out.= '<option value=\"0\"></option>';\n\n\t\t\twhile ($obj = $db->fetch_object($resql))\n\t\t\t{\n\t\t\t\t$out.= '<option '.($selected == $obj->rowid ? 'selected=\"selected\"' : '').' value=\"'.$obj->rowid.'\">'.price($obj->range_ik, 0, $langs, 1, 0).'</option>';\n\t\t\t}\n\t\t\t$out.= '</select>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Return HTML to show a select of expense\n\t *\n\t * @param\tstring\t$selected    preselected category\n\t * @param\tstring\t$htmlname    name of HTML select list\n\t * @param\tinteger\t$useempty    1=Add empty choice\n\t * @param\tinteger\t$allchoice   1=Add all choice\n\t * @param\tinteger\t$useid       0=use 'code' as key, 1=use 'id' as key\n\t * @return\tstring\n\t */\n\tfunction selectExpense($selected='', $htmlname='fk_c_type_fees', $useempty=0, $allchoice=1, $useid=0)\n\t{\n\t\tglobal $db,$langs;\n\n\t\t$sql = 'SELECT id, code, label FROM '.MAIN_DB_PREFIX.'c_type_fees';\n\t\t$sql.= ' WHERE active = 1';\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$out = '<select name=\"'.$htmlname.'\" class=\"'.$htmlname.' flat minwidth75imp\">';\n\t\t\tif ($useempty) $out.= '<option value=\"0\"></option>';\n\t\t\tif ($allchoice) $out.= '<option value=\"-1\">'.$langs->trans('AllExpenseReport').'</option>';\n\n\t\t\t$field = 'code';\n\t\t\tif ($useid) $field = 'id';\n\n\t\t\twhile ($obj = $db->fetch_object($resql))\n\t\t\t{\n\t\t\t\t$key = $langs->trans($obj->code);\n\t\t\t\t$out.= '<option '.($selected == $obj->{$field} ? 'selected=\"selected\"' : '').' value=\"'.$obj->{$field}.'\">'.($key != $obj->code ? $key : $obj->label).'</option>';\n\t\t\t}\n\t\t\t$out.= '</select>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($db);\n\t\t}\n\n\t\treturn $out;\n\t}\n\n}\n\n", "<?php\n/* Copyright (C) 2002-2007  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2003       Xavier Dutoit           <doli@sydesy.com>\n * Copyright (C) 2004-2015  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Sebastien Di Cintio     <sdicintio@ressource-toi.org>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2005-2015  Regis Houssin           <regis.houssin@capnetworks.com>\n * Copyright (C) 2011-2014  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2008       Matteli\n * Copyright (C) 2011-2016  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2012       Christophe Battarel     <christophe.battarel@altairis.fr>\n * Copyright (C) 2014-2015  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2015       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/main.inc.php\n *\t\\ingroup\tcore\n *\t\\brief      File that defines environment for Dolibarr GUI pages only (file not required by scripts)\n */\n\n//@ini_set('memory_limit', '128M');\t// This may be useless if memory is hard limited by your PHP\n\n// For optional tuning. Enabled if environment variable MAIN_SHOW_TUNING_INFO is defined.\n$micro_start_time=0;\nif (! empty($_SERVER['MAIN_SHOW_TUNING_INFO']))\n{\n\tlist($usec, $sec) = explode(\" \", microtime());\n\t$micro_start_time=((float) $usec + (float) $sec);\n\t// Add Xdebug code coverage\n\t//define('XDEBUGCOVERAGE',1);\n\tif (defined('XDEBUGCOVERAGE')) {\n\t\txdebug_start_code_coverage();\n\t}\n}\n\n// Removed magic_quotes\nif (function_exists('get_magic_quotes_gpc'))\t// magic_quotes_* deprecated in PHP 5.0 and removed in PHP 5.5\n{\n\tif (get_magic_quotes_gpc())\n\t{\n\t\t// Forcing parameter setting magic_quotes_gpc and cleaning parameters\n\t\t// (Otherwise he would have for each position, condition\n\t\t// Reading stripslashes variable according to state get_magic_quotes_gpc).\n\t\t// Off mode recommended (just do $db->escape for insert / update).\n\t\tfunction stripslashes_deep($value)\n\t\t{\n\t\t\treturn (is_array($value) ? array_map('stripslashes_deep', $value) : stripslashes($value));\n\t\t}\n\t\t$_GET     = array_map('stripslashes_deep', $_GET);\n\t\t$_POST    = array_map('stripslashes_deep', $_POST);\n\t\t$_FILES   = array_map('stripslashes_deep', $_FILES);\n\t\t//$_COOKIE  = array_map('stripslashes_deep', $_COOKIE); // Useless because a cookie should never be outputed on screen nor used into sql\n\t\t@set_magic_quotes_runtime(0);\n\t}\n}\n\n/**\n * Security: SQL Injection and XSS Injection (scripts) protection (Filters on GET, POST, PHP_SELF).\n *\n * @param\t\tstring\t\t$val\t\tValue\n * @param\t\tstring\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF, 3=GET without sql reserved keywords (the less tolerant test)\n * @return\t\tint\t\t\t\t\t\t>0 if there is an injection, 0 if none\n */\nfunction test_sql_and_script_inject($val, $type)\n{\n\t$inj = 0;\n\t// For SQL Injection (only GET are used to be included into bad escaped SQL requests)\n\tif ($type == 1 || $type == 3)\n\t{\n\t\t$inj += preg_match('/delete\\s+from/i',\t $val);\n\t\t$inj += preg_match('/create\\s+table/i',\t $val);\n\t\t$inj += preg_match('/insert\\s+into/i', \t $val);\n\t\t$inj += preg_match('/select\\s+from/i', \t $val);\n\t\t$inj += preg_match('/into\\s+(outfile|dumpfile)/i',  $val);\n\t\t$inj += preg_match('/user\\s*\\(/i',  $val);\t\t\t\t\t\t// avoid to use function user() that return current database login\n\t\t$inj += preg_match('/information_schema/i',  $val);\t\t\t\t// avoid to use request that read information_schema database\n\t}\n\tif ($type == 3)\n\t{\n\t\t$inj += preg_match('/select|update|delete|replace|group\\s+by|concat|count|from/i',\t $val);\n\t}\n\tif ($type != 2)\t// Not common key strings, so we can check them both on GET and POST\n\t{\n\t\t$inj += preg_match('/updatexml\\(/i', \t $val);\n\t\t$inj += preg_match('/update.+set.+=/i',  $val);\n\t\t$inj += preg_match('/union.+select/i', \t $val);\n\t\t$inj += preg_match('/(\\.\\.%2f)+/i',\t\t $val);\n\t}\n\t// For XSS Injection done by adding javascript with script\n\t// This is all cases a browser consider text is javascript:\n\t// When it found '<script', 'javascript:', '<style', 'onload\\s=' on body tag, '=\"&' on a tag size with old browsers\n\t// All examples on page: http://ha.ckers.org/xss.html#XSScalc\n\t// More on https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n\t$inj += preg_match('/<script/i', $val);\n\t$inj += preg_match('/<iframe/i', $val);\n\t$inj += preg_match('/<audio/i', $val);\n\t$inj += preg_match('/Set\\.constructor/i', $val);\t// ECMA script 6\n\tif (! defined('NOSTYLECHECK')) $inj += preg_match('/<style/i', $val);\n\t$inj += preg_match('/base[\\s]+href/si', $val);\n\t$inj += preg_match('/<.*onmouse/si', $val);       // onmousexxx can be set on img or any html tag like <img title='...' onmouseover=alert(1)>\n\t$inj += preg_match('/onerror\\s*=/i', $val);       // onerror can be set on img or any html tag like <img title='...' onerror = alert(1)>\n\t$inj += preg_match('/onfocus\\s*=/i', $val);       // onfocus can be set on input text html tag like <input type='text' value='...' onfocus = alert(1)>\n\t$inj += preg_match('/onload\\s*=/i', $val);        // onload can be set on svg tag <svg/onload=alert(1)> or other tag like body <body onload=alert(1)>\n\t$inj += preg_match('/onloadstart\\s*=/i', $val);   // onload can be set on audio tag <audio onloadstart=alert(1)>\n\t$inj += preg_match('/onclick\\s*=/i', $val);       // onclick can be set on img text html tag like <img onclick = alert(1)>\n\t$inj += preg_match('/onscroll\\s*=/i', $val);      // onscroll can be on textarea\n\t//$inj += preg_match('/on[A-Z][a-z]+\\*=/', $val);   // To lock event handlers onAbort(), ...\n\t$inj += preg_match('/&#58;|&#0000058|&#x3A/i', $val);\t\t// refused string ':' encoded (no reason to have it encoded) to lock 'javascript:...'\n\t//if ($type == 1)\n\t//{\n\t\t$inj += preg_match('/javascript:/i', $val);\n\t\t$inj += preg_match('/vbscript:/i', $val);\n\t//}\n\t// For XSS Injection done by adding javascript closing html tags like with onmousemove, etc... (closing a src or href tag with not cleaned param)\n\tif ($type == 1) $inj += preg_match('/\"/i', $val);\t\t// We refused \" in GET parameters value\n\tif ($type == 2) $inj += preg_match('/[;\"]/', $val);\t\t// PHP_SELF is a file system path. It can contains spaces.\n\treturn $inj;\n}\n\n/**\n * Return true if security check on parameters are OK, false otherwise.\n *\n * @param\t\tstring\t\t\t$var\t\tVariable name\n * @param\t\tstring\t\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF\n * @return\t\tboolean|null\t\t\t\ttrue if there is no injection. Stop code if injection found.\n */\nfunction analyseVarsForSqlAndScriptsInjection(&$var, $type)\n{\n\tif (is_array($var))\n\t{\n\t\tforeach ($var as $key => $value)\t// Warning, $key may also be used for attacks\n\t\t{\n\t\t\tif (analyseVarsForSqlAndScriptsInjection($key, $type) && analyseVarsForSqlAndScriptsInjection($value, $type))\n\t\t\t{\n\t\t\t\t//$var[$key] = $value;\t// This is useless\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint 'Access refused by SQL/Script injection protection in main.inc.php (type='.htmlentities($type).' key='.htmlentities($key).' value='.htmlentities($value).' page='.htmlentities($_SERVER[\"REQUEST_URI\"]).')';\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn (test_sql_and_script_inject($var, $type) <= 0);\n\t}\n}\n\n\n// Check consistency of NOREQUIREXXX DEFINES\nif ((defined('NOREQUIREDB') || defined('NOREQUIRETRAN')) && ! defined('NOREQUIREMENU'))\n{\n\tprint 'If define NOREQUIREDB or NOREQUIRETRAN are set, you must also set NOREQUIREMENU or not set them';\n\texit;\n}\n\n// Sanity check on URL\nif (! empty($_SERVER[\"PHP_SELF\"]))\n{\n\t$morevaltochecklikepost=array($_SERVER[\"PHP_SELF\"]);\n\tanalyseVarsForSqlAndScriptsInjection($morevaltochecklikepost,2);\n}\n// Sanity check on GET parameters\nif (! defined('NOSCANGETFORINJECTION') && ! empty($_SERVER[\"QUERY_STRING\"]))\n{\n\t$morevaltochecklikeget=array($_SERVER[\"QUERY_STRING\"]);\n\tanalyseVarsForSqlAndScriptsInjection($morevaltochecklikeget,1);\n}\n// Sanity check on POST\nif (! defined('NOSCANPOSTFORINJECTION'))\n{\n\tanalyseVarsForSqlAndScriptsInjection($_POST,0);\n}\n\n// This is to make Dolibarr working with Plesk\nif (! empty($_SERVER['DOCUMENT_ROOT']) && substr($_SERVER['DOCUMENT_ROOT'], -6) !== 'htdocs')\n{\n\tset_include_path($_SERVER['DOCUMENT_ROOT'] . '/htdocs');\n}\n\n// Include the conf.php and functions.lib.php\nrequire_once 'filefunc.inc.php';\n\n// If there is a POST parameter to tell to save automatically some POST parameters into cookies, we do it.\n// This is used for example by form of boxes to save personalization of some options.\n// DOL_AUTOSET_COOKIE=cookiename:val1,val2 and  cookiename_val1=aaa cookiename_val2=bbb will set cookie_name with value json_encode(array('val1'=> , ))\nif (! empty($_POST[\"DOL_AUTOSET_COOKIE\"]))\n{\n\t$tmpautoset=explode(':',$_POST[\"DOL_AUTOSET_COOKIE\"],2);\n\t$tmplist=explode(',',$tmpautoset[1]);\n\t$cookiearrayvalue=array();\n\tforeach ($tmplist as $tmpkey)\n\t{\n\t\t$postkey=$tmpautoset[0].'_'.$tmpkey;\n\t\t//var_dump('tmpkey='.$tmpkey.' postkey='.$postkey.' value='.$_POST[$postkey]);\n\t\tif (! empty($_POST[$postkey])) $cookiearrayvalue[$tmpkey]=$_POST[$postkey];\n\t}\n\t$cookiename=$tmpautoset[0];\n\t$cookievalue=json_encode($cookiearrayvalue);\n\t//var_dump('setcookie cookiename='.$cookiename.' cookievalue='.$cookievalue);\n\tsetcookie($cookiename, empty($cookievalue)?'':$cookievalue, empty($cookievalue)?0:(time()+(86400*354)), '/', null, false, true);\t// keep cookie 1 year and add tag httponly\n\tif (empty($cookievalue)) unset($_COOKIE[$cookiename]);\n}\n\n\n// Init session. Name of session is specific to Dolibarr instance.\n// Note: the function dol_getprefix may have been redefined to return a different key to manage another area to protect.\n$prefix=dol_getprefix('');\n\n$sessionname='DOLSESSID_'.$prefix;\n$sessiontimeout='DOLSESSTIMEOUT_'.$prefix;\nif (! empty($_COOKIE[$sessiontimeout])) ini_set('session.gc_maxlifetime',$_COOKIE[$sessiontimeout]);\nsession_name($sessionname);\nsession_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie (same as setting session.cookie_httponly into php.ini). Must be called before the session_start.\n// This create lock, released when session_write_close() or end of page.\n// We need this lock as long as we read/write $_SESSION ['vars']. We can remove lock when finished.\nif (! defined('NOSESSION'))\n{\n\tsession_start();\n\tif (ini_get('register_globals'))    // Deprecated in 5.3 and removed in 5.4. To solve bug in using $_SESSION\n\t{\n\t\tforeach ($_SESSION as $key=>$value)\n\t\t{\n\t\t\tif (isset($GLOBALS[$key])) unset($GLOBALS[$key]);\n\t\t}\n\t}\n}\n\n// Init the 5 global objects, this include will make the new and set properties for: $conf, $db, $langs, $user, $mysoc\nrequire_once 'master.inc.php';\n\n// Activate end of page function\nregister_shutdown_function('dol_shutdown');\n\n// Detection browser\nif (isset($_SERVER[\"HTTP_USER_AGENT\"]))\n{\n\t$tmp=getBrowserInfo($_SERVER[\"HTTP_USER_AGENT\"]);\n\t$conf->browser->name=$tmp['browsername'];\n\t$conf->browser->os=$tmp['browseros'];\n\t$conf->browser->version=$tmp['browserversion'];\n\t$conf->browser->layout=$tmp['layout'];     // 'classic', 'phone', 'tablet'\n\t$conf->browser->phone=$tmp['phone'];\t   // TODO deprecated, use ->layout\n\t$conf->browser->tablet=$tmp['tablet'];\t   // TODO deprecated, use ->layout\n\t//var_dump($conf->browser);\n\n\tif ($conf->browser->layout == 'phone') $conf->dol_no_mouse_hover=1;\n\tif ($conf->browser->layout == 'phone') $conf->global->MAIN_TESTMENUHIDER=1;\n}\n\n// Force HTTPS if required ($conf->file->main_force_https is 0/1 or https dolibarr root url)\n// $_SERVER[\"HTTPS\"] is 'on' when link is https, otherwise $_SERVER[\"HTTPS\"] is empty or 'off'\nif (! empty($conf->file->main_force_https) && (empty($_SERVER[\"HTTPS\"]) || $_SERVER[\"HTTPS\"] != 'on'))\n{\n\t$newurl='';\n\tif (is_numeric($conf->file->main_force_https))\n\t{\n\t\tif ($conf->file->main_force_https == '1' && ! empty($_SERVER[\"SCRIPT_URI\"]))\t// If SCRIPT_URI supported by server\n\t\t{\n\t\t\tif (preg_match('/^http:/i',$_SERVER[\"SCRIPT_URI\"]) && ! preg_match('/^https:/i',$_SERVER[\"SCRIPT_URI\"]))\t// If link is http\n\t\t\t{\n\t\t\t\t$newurl=preg_replace('/^http:/i','https:',$_SERVER[\"SCRIPT_URI\"]);\n\t\t\t}\n\t\t}\n\t\telse\t// Check HTTPS environment variable (Apache/mod_ssl only)\n\t\t{\n\t\t\t$newurl=preg_replace('/^http:/i','https:',DOL_MAIN_URL_ROOT).$_SERVER[\"REQUEST_URI\"];\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Check HTTPS environment variable (Apache/mod_ssl only)\n\t\t$newurl=$conf->file->main_force_https.$_SERVER[\"REQUEST_URI\"];\n\t}\n\t// Start redirect\n\tif ($newurl)\n\t{\n\t\tdol_syslog(\"main.inc: dolibarr_main_force_https is on, we make a redirect to \".$newurl);\n\t\theader(\"Location: \".$newurl);\n\t\texit;\n\t}\n\telse\n\t{\n\t\tdol_syslog(\"main.inc: dolibarr_main_force_https is on but we failed to forge new https url so no redirect is done\", LOG_WARNING);\n\t}\n}\n\n\n// Loading of additional presentation includes\nif (! defined('NOREQUIREHTML')) require_once DOL_DOCUMENT_ROOT .'/core/class/html.form.class.php';\t    // Need 660ko memory (800ko in 2.2)\nif (! defined('NOREQUIREAJAX') && $conf->use_javascript_ajax) require_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php';\t// Need 22ko memory\n\n// If install or upgrade process not done or not completely finished, we call the install page.\nif (! empty($conf->global->MAIN_NOT_INSTALLED) || ! empty($conf->global->MAIN_NOT_UPGRADED))\n{\n\tdol_syslog(\"main.inc: A previous install or upgrade was not complete. Redirect to install page.\", LOG_WARNING);\n\theader(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n\texit;\n}\n// If an upgrade process is required, we call the install page.\nif ((! empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ($conf->global->MAIN_VERSION_LAST_UPGRADE != DOL_VERSION))\n|| (empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ! empty($conf->global->MAIN_VERSION_LAST_INSTALL) && ($conf->global->MAIN_VERSION_LAST_INSTALL != DOL_VERSION)))\n{\n\t$versiontocompare=empty($conf->global->MAIN_VERSION_LAST_UPGRADE)?$conf->global->MAIN_VERSION_LAST_INSTALL:$conf->global->MAIN_VERSION_LAST_UPGRADE;\n\trequire_once DOL_DOCUMENT_ROOT .'/core/lib/admin.lib.php';\n\t$dolibarrversionlastupgrade=preg_split('/[.-]/',$versiontocompare);\n\t$dolibarrversionprogram=preg_split('/[.-]/',DOL_VERSION);\n\t$rescomp=versioncompare($dolibarrversionprogram,$dolibarrversionlastupgrade);\n\tif ($rescomp > 0)   // Programs have a version higher than database. We did not add \"&& $rescomp < 3\" because we want upgrade process for build upgrades\n\t{\n\t\tdol_syslog(\"main.inc: database version \".$versiontocompare.\" is lower than programs version \".DOL_VERSION.\". Redirect to install page.\", LOG_WARNING);\n\t\theader(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n\t\texit;\n\t}\n}\n\n// Creation of a token against CSRF vulnerabilities\nif (! defined('NOTOKENRENEWAL'))\n{\n\t// roulement des jetons car cree a chaque appel\n\tif (isset($_SESSION['newtoken'])) $_SESSION['token'] = $_SESSION['newtoken'];\n\n\t// Save in $_SESSION['newtoken'] what will be next token. Into forms, we will add param token = $_SESSION['newtoken']\n\t$token = dol_hash(uniqid(mt_rand(),TRUE)); // Generates a hash of a random number\n\t$_SESSION['newtoken'] = $token;\n}\nif ((! defined('NOCSRFCHECK') && empty($dolibarr_nocsrfcheck) && ! empty($conf->global->MAIN_SECURITY_CSRF_WITH_TOKEN))\n\t|| defined('CSRFCHECK_WITH_TOKEN'))\t// Check validity of token, only if option MAIN_SECURITY_CSRF_WITH_TOKEN enabled or if constant CSRFCHECK_WITH_TOKEN is set\n{\n\tif ($_SERVER['REQUEST_METHOD'] == 'POST' && ! GETPOST('token','alpha')) // Note, offender can still send request by GET\n\t{\n\t\tprint \"Access refused by CSRF protection in main.inc.php. Token not provided.\\n\";\n\t\tprint \"If you access your server behind a proxy using url rewriting, you might check that all HTTP header is propagated (or add the line \\$dolibarr_nocsrfcheck=1 into your conf.php file).\\n\";\n\t\tdie;\n\t}\n\tif ($_SERVER['REQUEST_METHOD'] === 'POST')  // This test must be after loading $_SESSION['token'].\n\t{\n\t\tif (GETPOST('token', 'alpha') != $_SESSION['token'])\n\t\t{\n\t\t\tdol_syslog(\"Invalid token in \".$_SERVER['HTTP_REFERER'].\", action=\".GETPOST('action','aZ09').\", _POST['token']=\".GETPOST('token','alpha').\", _SESSION['token']=\".$_SESSION['token'], LOG_WARNING);\n\t\t\t//print 'Unset POST by CSRF protection in main.inc.php.';\t// Do not output anything because this create problems when using the BACK button on browsers.\n\t\t\tunset($_POST);\n\t\t}\n\t}\n}\n\n// Disable modules (this must be after session_start and after conf has been loaded)\nif (GETPOST('disablemodules','alpha'))  $_SESSION[\"disablemodules\"]=GETPOST('disablemodules','alpha');\nif (! empty($_SESSION[\"disablemodules\"]))\n{\n\t$disabled_modules=explode(',',$_SESSION[\"disablemodules\"]);\n\tforeach($disabled_modules as $module)\n\t{\n\t\tif ($module)\n\t\t{\n\t\t\tif (empty($conf->$module)) $conf->$module=new stdClass();\n\t\t\t$conf->$module->enabled=false;\n\t\t\tif ($module == 'fournisseur')\t\t// Special case\n\t\t\t{\n\t\t\t\t$conf->supplier_order->enabled=0;\n\t\t\t\t$conf->supplier_invoice->enabled=0;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/*\n * Phase authentication / login\n */\n$login='';\nif (! defined('NOLOGIN'))\n{\n\t// $authmode lists the different means of identification to be tested in order of preference.\n\t// Example: 'http', 'dolibarr', 'ldap', 'http,forceuser', '...'\n\n\tif (defined('MAIN_AUTHENTICATION_MODE'))\n\t{\n\t\t$dolibarr_main_authentication = constant('MAIN_AUTHENTICATION_MODE');\n\t}\n\telse\n\t{\n\t\t// Authentication mode\n\t\tif (empty($dolibarr_main_authentication)) $dolibarr_main_authentication='http,dolibarr';\n\t\t// Authentication mode: forceuser\n\t\tif ($dolibarr_main_authentication == 'forceuser' && empty($dolibarr_auto_user)) $dolibarr_auto_user='auto';\n\t}\n\t// Set authmode\n\t$authmode=explode(',',$dolibarr_main_authentication);\n\n\t// No authentication mode\n\tif (! count($authmode))\n\t{\n\t\t$langs->load('main');\n\t\tdol_print_error('',$langs->trans(\"ErrorConfigParameterNotDefined\",'dolibarr_main_authentication'));\n\t\texit;\n\t}\n\n\t// If login request was already post, we retrieve login from the session\n\t// Call module if not realized that his request.\n\t// At the end of this phase, the variable $login is defined.\n\t$resultFetchUser='';\n\t$test=true;\n\tif (! isset($_SESSION[\"dol_login\"]))\n\t{\n\t\t// It is not already authenticated and it requests the login / password\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/security2.lib.php';\n\n\t\t$dol_dst_observed=GETPOST(\"dst_observed\",'int',3);\n\t\t$dol_dst_first=GETPOST(\"dst_first\",'int',3);\n\t\t$dol_dst_second=GETPOST(\"dst_second\",'int',3);\n\t\t$dol_screenwidth=GETPOST(\"screenwidth\",'int',3);\n\t\t$dol_screenheight=GETPOST(\"screenheight\",'int',3);\n\t\t$dol_hide_topmenu=GETPOST('dol_hide_topmenu','int',3);\n\t\t$dol_hide_leftmenu=GETPOST('dol_hide_leftmenu','int',3);\n\t\t$dol_optimize_smallscreen=GETPOST('dol_optimize_smallscreen','int',3);\n\t\t$dol_no_mouse_hover=GETPOST('dol_no_mouse_hover','int',3);\n\t\t$dol_use_jmobile=GETPOST('dol_use_jmobile','int',3);\n\t\t//dol_syslog(\"POST key=\".join(array_keys($_POST),',').' value='.join($_POST,','));\n\n\t\t// If in demo mode, we check we go to home page through the public/demo/index.php page\n\t\tif (! empty($dolibarr_main_demo) && $_SERVER['PHP_SELF'] == DOL_URL_ROOT.'/index.php')  // We ask index page\n\t\t{\n\t\t\tif (empty($_SERVER['HTTP_REFERER']) || ! preg_match('/public/',$_SERVER['HTTP_REFERER']))\n\t\t\t{\n\t\t\t\tdol_syslog(\"Call index page from another url than demo page (call is done from page \".$_SERVER['HTTP_REFERER'].\")\");\n\t\t\t\t$url='';\n\t\t\t\t$url.=($url?'&':'').($dol_hide_topmenu?'dol_hide_topmenu='.$dol_hide_topmenu:'');\n\t\t\t\t$url.=($url?'&':'').($dol_hide_leftmenu?'dol_hide_leftmenu='.$dol_hide_leftmenu:'');\n\t\t\t\t$url.=($url?'&':'').($dol_optimize_smallscreen?'dol_optimize_smallscreen='.$dol_optimize_smallscreen:'');\n\t\t\t\t$url.=($url?'&':'').($dol_no_mouse_hover?'dol_no_mouse_hover='.$dol_no_mouse_hover:'');\n\t\t\t\t$url.=($url?'&':'').($dol_use_jmobile?'dol_use_jmobile='.$dol_use_jmobile:'');\n\t\t\t\t$url=DOL_URL_ROOT.'/public/demo/index.php'.($url?'?'.$url:'');\n\t\t\t\theader(\"Location: \".$url);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\t// Verification security graphic code\n\t\tif (GETPOST(\"username\",\"alpha\",2) && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))\n\t\t{\n\t\t\t$sessionkey = 'dol_antispam_value';\n\t\t\t$ok=(array_key_exists($sessionkey, $_SESSION) === TRUE && (strtolower($_SESSION[$sessionkey]) == strtolower($_POST['code'])));\n\n\t\t\t// Check code\n\t\t\tif (! $ok)\n\t\t\t{\n\t\t\t\tdol_syslog('Bad value for code, connexion refused');\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('errors');\n\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadValueForCode\");\n\t\t\t\t$test=false;\n\n\t\t\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t\t\t$user->trigger_mesg='ErrorBadValueForCode - login='.GETPOST(\"username\",\"alpha\",2);\n\t\t\t\t// Call of triggers\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n\t\t\t\t$interface=new Interfaces($db);\n\t\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t\t// End Call of triggers\n\n\t\t\t\t// Hooks on failed login\n\t\t\t\t$action='';\n\t\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t\t$parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t\t$reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t\t\tif ($reshook < 0) $error++;\n\n\t\t\t\t// Note: exit is done later\n\t\t\t}\n\t\t}\n\n\t\t$usertotest\t\t= (! empty($_COOKIE['login_dolibarr']) ? $_COOKIE['login_dolibarr'] : GETPOST(\"username\",\"alpha\",2));\n\t\t$passwordtotest\t= GETPOST('password','none',2);\n\t\t$entitytotest\t= (GETPOST('entity','int') ? GETPOST('entity','int') : (!empty($conf->entity) ? $conf->entity : 1));\n\n\t\t// Define if we received data to test the login.\n\t\t$goontestloop=false;\n\t\tif (isset($_SERVER[\"REMOTE_USER\"]) && in_array('http',$authmode)) $goontestloop=true;\n\t\tif ($dolibarr_main_authentication == 'forceuser' && ! empty($dolibarr_auto_user)) $goontestloop=true;\n\t\tif (GETPOST(\"username\",\"alpha\",2) || ! empty($_COOKIE['login_dolibarr']) || GETPOST('openid_mode','alpha',1)) $goontestloop=true;\n\n\t\tif (! is_object($langs)) // This can occurs when calling page with NOREQUIRETRAN defined, however we need langs for error messages.\n\t\t{\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/translate.class.php';\n\t\t\t$langs=new Translate(\"\",$conf);\n\t\t\t$langcode=(GETPOST('lang','aZ09',1)?GETPOST('lang','aZ09',1):(empty($conf->global->MAIN_LANG_DEFAULT)?'auto':$conf->global->MAIN_LANG_DEFAULT));\n\t\t\tif (defined('MAIN_LANG_DEFAULT')) $langcode=constant('MAIN_LANG_DEFAULT');\n\t\t\t$langs->setDefaultLang($langcode);\n\t\t}\n\n\t\t// Validation of login/pass/entity\n\t\t// If ok, the variable login will be returned\n\t\t// If error, we will put error message in session under the name dol_loginmesg\n\t\tif ($test && $goontestloop)\n\t\t{\n\t\t\t$login = checkLoginPassEntity($usertotest,$passwordtotest,$entitytotest,$authmode);\n\t\t\tif ($login)\n\t\t\t{\n\t\t\t\t$dol_authmode=$conf->authmode;\t// This properties is defined only when logged, to say what mode was successfully used\n\t\t\t\t$dol_tz=$_POST[\"tz\"];\n\t\t\t\t$dol_tz_string=$_POST[\"tz_string\"];\n\t\t\t\t$dol_tz_string=preg_replace('/\\s*\\(.+\\)$/','',$dol_tz_string);\n\t\t\t\t$dol_tz_string=preg_replace('/,/','/',$dol_tz_string);\n\t\t\t\t$dol_tz_string=preg_replace('/\\s/','_',$dol_tz_string);\n\t\t\t\t$dol_dst=0;\n\t\t\t\tif (isset($_POST[\"dst_first\"]) && isset($_POST[\"dst_second\"]))\n\t\t\t\t{\n\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t\t\t\t$datenow=dol_now();\n\t\t\t\t\t$datefirst=dol_stringtotime($_POST[\"dst_first\"]);\n\t\t\t\t\t$datesecond=dol_stringtotime($_POST[\"dst_second\"]);\n\t\t\t\t\tif ($datenow >= $datefirst && $datenow < $datesecond) $dol_dst=1;\n\t\t\t\t}\n\t\t\t\t//print $datefirst.'-'.$datesecond.'-'.$datenow.'-'.$dol_tz.'-'.$dol_tzstring.'-'.$dol_dst; exit;\n\t\t\t}\n\n\t\t\tif (! $login)\n\t\t\t{\n\t\t\t\tdol_syslog('Bad password, connexion refused',LOG_DEBUG);\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('errors');\n\n\t\t\t\t// Bad password. No authmode has found a good password.\n\t\t\t\t// We set a generic message if not defined inside function checkLoginPassEntity or subfunctions\n\t\t\t\tif (empty($_SESSION[\"dol_loginmesg\"])) $_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadLoginPassword\");\n\n\t\t\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t\t\t$user->trigger_mesg=$langs->trans(\"ErrorBadLoginPassword\").' - login='.GETPOST(\"username\",\"alpha\",2);\n\t\t\t\t// Call of triggers\n\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/interfaces.class.php';\n\t\t\t\t$interface=new Interfaces($db);\n\t\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,GETPOST(\"username\",\"alpha\",2));\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t\t// End Call of triggers\n\n\t\t\t\t// Hooks on failed login\n\t\t\t\t$action='';\n\t\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t\t$parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t\t$reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t\t\tif ($reshook < 0) $error++;\n\n\t\t\t\t// Note: exit is done in next chapter\n\t\t\t}\n\t\t}\n\n\t\t// End test login / passwords\n\t\tif (! $login || (in_array('ldap',$authmode) && empty($passwordtotest)))\t// With LDAP we refused empty password because some LDAP are \"opened\" for anonymous access so connexion is a success.\n\t\t{\n\t\t\t// No data to test login, so we show the login page\n\t\t\tdol_syslog(\"--- Access to \".$_SERVER[\"PHP_SELF\"].\" showing the login form and exit\");\n\t\t\tif (defined('NOREDIRECTBYMAINTOLOGIN')) return 'ERROR_NOT_LOGGED';\n\t\t\telse dol_loginfunction($langs,$conf,(! empty($mysoc)?$mysoc:''));\n\t\t\texit;\n\t\t}\n\n\t\t$resultFetchUser=$user->fetch('', $login, '', 1, ($entitytotest > 0 ? $entitytotest : -1));\n\t\tif ($resultFetchUser <= 0)\n\t\t{\n\t\t\tdol_syslog('User not found, connexion refused');\n\t\t\tsession_destroy();\n\t\t\tsession_name($sessionname);\n\t\t\tsession_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n\t\t\tsession_start();    // Fixing the bug of register_globals here is useless since session is empty\n\n\t\t\tif ($resultFetchUser == 0)\n\t\t\t{\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('errors');\n\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\n\t\t\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t\t\t$user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n\t\t\t}\n\t\t\tif ($resultFetchUser < 0)\n\t\t\t{\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$user->error;\n\n\t\t\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t\t\t$user->trigger_mesg=$user->error;\n\t\t\t}\n\n\t\t\t// Call triggers\n\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n\t\t\t$interface=new Interfaces($db);\n\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n\t\t\tif ($result < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\t\t\t// End call triggers\n\n\t\t\t// Hooks on failed login\n\t\t\t$action='';\n\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t$parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t$reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t\tif ($reshook < 0) $error++;\n\n\t\t\t$paramsurl=array();\n\t\t\tif (GETPOST('textbrowser','int')) $paramsurl[]='textbrowser='.GETPOST('textbrowser','int');\n\t\t\tif (GETPOST('nojs','int'))        $paramsurl[]='nojs='.GETPOST('nojs','int');\n\t\t\tif (GETPOST('lang','aZ09'))       $paramsurl[]='lang='.GETPOST('lang','aZ09');\n\t\t\theader('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl)?'?'.implode('&',$paramsurl):''));\n\t\t\texit;\n\t\t}\n\t}\n\telse\n\t{\n\t\t// We are already into an authenticated session\n\t\t$login=$_SESSION[\"dol_login\"];\n\t\t$entity=$_SESSION[\"dol_entity\"];\n\t\tdol_syslog(\"- This is an already logged session. _SESSION['dol_login']=\".$login.\" _SESSION['dol_entity']=\".$entity, LOG_DEBUG);\n\n\t\t$resultFetchUser=$user->fetch('', $login, '', 1, ($entity > 0 ? $entity : -1));\n\t\tif ($resultFetchUser <= 0)\n\t\t{\n\t\t\t// Account has been removed after login\n\t\t\tdol_syslog(\"Can't load user even if session logged. _SESSION['dol_login']=\".$login, LOG_WARNING);\n\t\t\tsession_destroy();\n\t\t\tsession_name($sessionname);\n\t\t\tsession_set_cookie_params(0, '/', null, false, true);   // Add tag httponly on session cookie\n\t\t\tsession_start();    // Fixing the bug of register_globals here is useless since session is empty\n\n\t\t\tif ($resultFetchUser == 0)\n\t\t\t{\n\t\t\t\t$langs->load('main');\n\t\t\t\t$langs->load('errors');\n\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\",$login);\n\n\t\t\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t\t\t$user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n\t\t\t}\n\t\t\tif ($resultFetchUser < 0)\n\t\t\t{\n\t\t\t\t$_SESSION[\"dol_loginmesg\"]=$user->error;\n\n\t\t\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t\t\t$user->trigger_mesg=$user->error;\n\t\t\t}\n\n\t\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t\t// Call triggers\n\t\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n\t\t\t$interface=new Interfaces($db);\n\t\t\t$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf);\n\t\t\tif ($result < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\t\t\t// End call triggers\n\n\t\t\t// Hooks on failed login\n\t\t\t$action='';\n\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t$parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t$reshook=$hookmanager->executeHooks('afterLoginFailed',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\t\tif ($reshook < 0) $error++;\n\n\t\t\t$paramsurl=array();\n\t\t\tif (GETPOST('textbrowser','int')) $paramsurl[]='textbrowser='.GETPOST('textbrowser','int');\n\t\t\tif (GETPOST('nojs','int'))        $paramsurl[]='nojs='.GETPOST('nojs','int');\n\t\t\tif (GETPOST('lang','aZ09'))       $paramsurl[]='lang='.GETPOST('lang','aZ09');\n\t\t\theader('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl)?'?'.implode('&',$paramsurl):''));\n\t\t\texit;\n\t\t}\n\t\telse\n\t\t{\n\t\t    // Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n\t\t    $hookmanager->initHooks(array('main'));\n\n\t\t    // Code for search criteria persistence.\n\t\t    if (! empty($_GET['save_lastsearch_values']))    // Keep $_GET here\n\t\t    {\n\t\t\t    $relativepathstring = preg_replace('/\\?.*$/','',$_SERVER[\"HTTP_REFERER\"]);\n\t\t\t    $relativepathstring = preg_replace('/^https?:\\/\\/[^\\/]*/','',$relativepathstring);     // Get full path except host server\n\t\t\t    // Clean $relativepathstring\n   \t\t\t    if (constant('DOL_URL_ROOT')) $relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'),'/').'/', '', $relativepathstring);\n\t\t\t    $relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n\t\t\t    $relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n\t\t\t    //var_dump($relativepathstring);\n\n\t\t\t    // We click on a link that leave a page we have to save search criteria. We save them from tmp to no tmp\n\t\t\t    if (! empty($_SESSION['lastsearch_values_tmp_'.$relativepathstring]))\n\t\t\t    {\n\t\t\t\t    $_SESSION['lastsearch_values_'.$relativepathstring]=$_SESSION['lastsearch_values_tmp_'.$relativepathstring];\n\t\t\t\t    unset($_SESSION['lastsearch_values_tmp_'.$relativepathstring]);\n\t\t\t    }\n\t\t    }\n\n\t\t    $action = '';\n\t\t    $reshook = $hookmanager->executeHooks('updateSession', array(), $user, $action);\n\t\t    if ($reshook < 0) {\n\t\t\t    setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\t\t    }\n\t\t}\n\t}\n\n\t// Is it a new session that has started ?\n\t// If we are here, this means authentication was successfull.\n\tif (! isset($_SESSION[\"dol_login\"]))\n\t{\n\t\t// New session for this login has started.\n\t\t$error=0;\n\n\t\t// Store value into session (values always stored)\n\t\t$_SESSION[\"dol_login\"]=$user->login;\n\t\t$_SESSION[\"dol_authmode\"]=isset($dol_authmode)?$dol_authmode:'';\n\t\t$_SESSION[\"dol_tz\"]=isset($dol_tz)?$dol_tz:'';\n\t\t$_SESSION[\"dol_tz_string\"]=isset($dol_tz_string)?$dol_tz_string:'';\n\t\t$_SESSION[\"dol_dst\"]=isset($dol_dst)?$dol_dst:'';\n\t\t$_SESSION[\"dol_dst_observed\"]=isset($dol_dst_observed)?$dol_dst_observed:'';\n\t\t$_SESSION[\"dol_dst_first\"]=isset($dol_dst_first)?$dol_dst_first:'';\n\t\t$_SESSION[\"dol_dst_second\"]=isset($dol_dst_second)?$dol_dst_second:'';\n\t\t$_SESSION[\"dol_screenwidth\"]=isset($dol_screenwidth)?$dol_screenwidth:'';\n\t\t$_SESSION[\"dol_screenheight\"]=isset($dol_screenheight)?$dol_screenheight:'';\n\t\t$_SESSION[\"dol_company\"]=$conf->global->MAIN_INFO_SOCIETE_NOM;\n\t\t$_SESSION[\"dol_entity\"]=$conf->entity;\n\t\t// Store value into session (values stored only if defined)\n\t\tif (! empty($dol_hide_topmenu))         $_SESSION['dol_hide_topmenu']=$dol_hide_topmenu;\n\t\tif (! empty($dol_hide_leftmenu))        $_SESSION['dol_hide_leftmenu']=$dol_hide_leftmenu;\n\t\tif (! empty($dol_optimize_smallscreen)) $_SESSION['dol_optimize_smallscreen']=$dol_optimize_smallscreen;\n\t\tif (! empty($dol_no_mouse_hover))       $_SESSION['dol_no_mouse_hover']=$dol_no_mouse_hover;\n\t\tif (! empty($dol_use_jmobile))          $_SESSION['dol_use_jmobile']=$dol_use_jmobile;\n\n\t\tdol_syslog(\"This is a new started user session. _SESSION['dol_login']=\".$_SESSION[\"dol_login\"].\" Session id=\".session_id());\n\n\t\t$db->begin();\n\n\t\t$user->update_last_login_date();\n\n\t\t$loginfo = 'TZ='.$_SESSION[\"dol_tz\"].';TZString='.$_SESSION[\"dol_tz_string\"].';Screen='.$_SESSION[\"dol_screenwidth\"].'x'.$_SESSION[\"dol_screenheight\"];\n\n\t\t// TODO @deprecated Remove this. Hook must be used, not this trigger.\n\t\t$user->trigger_mesg = $loginfo;\n\t\t// Call triggers\n\t\tinclude_once DOL_DOCUMENT_ROOT . '/core/class/interfaces.class.php';\n\t\t$interface=new Interfaces($db);\n\t\t$result=$interface->run_triggers('USER_LOGIN',$user,$user,$langs,$conf);\n\t\tif ($result < 0) {\n\t\t\t$error++;\n\t\t}\n\t\t// End call triggers\n\n\t\t// Hooks on successfull login\n\t\t$action='';\n\t\t$hookmanager->initHooks(array('login'));\n\t\t$parameters=array('dol_authmode'=>$dol_authmode, 'dol_loginfo'=>$loginfo);\n\t\t$reshook=$hookmanager->executeHooks('afterLogin',$parameters,$user,$action);    // Note that $action and $object may have been modified by some hooks\n\t\tif ($reshook < 0) $error++;\n\n\t\tif ($error)\n\t\t{\n\t\t\t$db->rollback();\n\t\t\tsession_destroy();\n\t\t\tdol_print_error($db,'Error in some hooks afterLogin (or old trigger USER_LOGIN)');\n\t\t\texit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$db->commit();\n\t\t}\n\n\t\t// Change landing page if defined.\n\t\t$landingpage=(empty($user->conf->MAIN_LANDING_PAGE)?(empty($conf->global->MAIN_LANDING_PAGE)?'':$conf->global->MAIN_LANDING_PAGE):$user->conf->MAIN_LANDING_PAGE);\n\t\tif (! empty($landingpage))    // Example: /index.php\n\t\t{\n\t\t\t$newpath=dol_buildpath($landingpage, 1);\n\t\t\tif ($_SERVER[\"PHP_SELF\"] != $newpath)   // not already on landing page (avoid infinite loop)\n\t\t\t{\n\t\t\t\theader('Location: '.$newpath);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// If user admin, we force the rights-based modules\n\tif ($user->admin)\n\t{\n\t\t$user->rights->user->user->lire=1;\n\t\t$user->rights->user->user->creer=1;\n\t\t$user->rights->user->user->password=1;\n\t\t$user->rights->user->user->supprimer=1;\n\t\t$user->rights->user->self->creer=1;\n\t\t$user->rights->user->self->password=1;\n\t}\n\n\t/*\n     * Overwrite some configs globals (try to avoid this and have code to use instead $user->conf->xxx)\n     */\n\n\t// Set liste_limit\n\tif (isset($user->conf->MAIN_SIZE_LISTE_LIMIT))\t$conf->liste_limit = $user->conf->MAIN_SIZE_LISTE_LIMIT;\t// Can be 0\n\tif (isset($user->conf->PRODUIT_LIMIT_SIZE))\t$conf->product->limit_size = $user->conf->PRODUIT_LIMIT_SIZE;\t// Can be 0\n\n\t// Replace conf->css by personalized value if theme not forced\n\tif (empty($conf->global->MAIN_FORCETHEME) && ! empty($user->conf->MAIN_THEME))\n\t{\n\t\t$conf->theme=$user->conf->MAIN_THEME;\n\t\t$conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n\t}\n}\n\n// Case forcing style from url\nif (GETPOST('theme','alpha'))\n{\n\t$conf->theme=GETPOST('theme','alpha',1);\n\t$conf->css  = \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n\n\n// Set javascript option\nif (! GETPOST('nojs','int'))   // If javascript was not disabled on URL\n{\n\tif (! empty($user->conf->MAIN_DISABLE_JAVASCRIPT))\n\t{\n\t\t$conf->use_javascript_ajax=! $user->conf->MAIN_DISABLE_JAVASCRIPT;\n\t}\n}\nelse $conf->use_javascript_ajax=0;\n// Set MAIN_OPTIMIZEFORTEXTBROWSER\nif (GETPOST('textbrowser','int') || (! empty($conf->browser->name) && $conf->browser->name == 'lynxlinks') || ! empty($user->conf->MAIN_OPTIMIZEFORTEXTBROWSER))   // If we must enable text browser\n{\n\t$conf->global->MAIN_OPTIMIZEFORTEXTBROWSER=1;\n}\nelseif (! empty($user->conf->MAIN_OPTIMIZEFORTEXTBROWSER))\n{\n\t$conf->global->MAIN_OPTIMIZEFORTEXTBROWSER=$user->conf->MAIN_OPTIMIZEFORTEXTBROWSER;\n}\n\n// Set terminal output option according to conf->browser.\nif (GETPOST('dol_hide_leftmenu','int') || ! empty($_SESSION['dol_hide_leftmenu']))               $conf->dol_hide_leftmenu=1;\nif (GETPOST('dol_hide_topmenu','int') || ! empty($_SESSION['dol_hide_topmenu']))                 $conf->dol_hide_topmenu=1;\nif (GETPOST('dol_optimize_smallscreen','int') || ! empty($_SESSION['dol_optimize_smallscreen'])) $conf->dol_optimize_smallscreen=1;\nif (GETPOST('dol_no_mouse_hover','int') || ! empty($_SESSION['dol_no_mouse_hover']))             $conf->dol_no_mouse_hover=1;\nif (GETPOST('dol_use_jmobile','int') || ! empty($_SESSION['dol_use_jmobile']))                   $conf->dol_use_jmobile=1;\nif (! empty($conf->browser->layout) && $conf->browser->layout != 'classic') $conf->dol_no_mouse_hover=1;\nif ((! empty($conf->browser->layout) && $conf->browser->layout == 'phone')\n\t|| (! empty($_SESSION['dol_screenwidth']) && $_SESSION['dol_screenwidth'] < 400)\n\t|| (! empty($_SESSION['dol_screenheight']) && $_SESSION['dol_screenheight'] < 400)\n)\n{\n\t$conf->dol_optimize_smallscreen=1;\n}\n// If we force to use jmobile, then we reenable javascript\nif (! empty($conf->dol_use_jmobile)) $conf->use_javascript_ajax=1;\n// Replace themes bugged with jmobile with eldy\nif (! empty($conf->dol_use_jmobile) && in_array($conf->theme,array('bureau2crea','cameleo','amarok')))\n{\n\t$conf->theme='eldy';\n\t$conf->css  =  \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n//var_dump($conf->browser->phone);\n\nif (! defined('NOREQUIRETRAN'))\n{\n\tif (! GETPOST('lang','aZ09'))\t// If language was not forced on URL\n\t{\n\t\t// If user has chosen its own language\n\t\tif (! empty($user->conf->MAIN_LANG_DEFAULT))\n\t\t{\n\t\t\t// If different than current language\n\t\t\t//print \">>>\".$langs->getDefaultLang().\"-\".$user->conf->MAIN_LANG_DEFAULT;\n\t\t\tif ($langs->getDefaultLang() != $user->conf->MAIN_LANG_DEFAULT)\n\t\t\t{\n\t\t\t\t$langs->setDefaultLang($user->conf->MAIN_LANG_DEFAULT);\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (! defined('NOLOGIN'))\n{\n\t// If the login is not recovered, it is identified with an account that does not exist.\n\t// Hacking attempt?\n\tif (! $user->login) accessforbidden();\n\n\t// Check if user is active\n\tif ($user->statut < 1)\n\t{\n\t\t// If not active, we refuse the user\n\t\t$langs->load(\"other\");\n\t\tdol_syslog(\"Authentification ko as login is disabled\");\n\t\taccessforbidden($langs->trans(\"ErrorLoginDisabled\"));\n\t\texit;\n\t}\n\n\t// Load permissions\n\t$user->getrights();\n}\n\n\ndol_syslog(\"--- Access to \".$_SERVER[\"PHP_SELF\"].' - action='.GETPOST('action','az09').', massaction='.GETPOST('massaction','az09'));\n//Another call for easy debugg\n//dol_syslog(\"Access to \".$_SERVER[\"PHP_SELF\"].' GET='.join(',',array_keys($_GET)).'->'.join(',',$_GET).' POST:'.join(',',array_keys($_POST)).'->'.join(',',$_POST));\n\n// Load main languages files\nif (! defined('NOREQUIRETRAN'))\n{\n\t$langs->load(\"main\");\n\t$langs->load(\"dict\");\n}\n\n// Define some constants used for style of arrays\n$bc=array(0=>'class=\"impair\"',1=>'class=\"pair\"');\n$bcdd=array(0=>'class=\"drag drop oddeven\"',1=>'class=\"drag drop oddeven\"');\n$bcnd=array(0=>'class=\"nodrag nodrop nohover\"',1=>'class=\"nodrag nodrop nohoverpair\"');\t\t// Used for tr to add new lines\n$bctag=array(0=>'class=\"impair tagtr\"',1=>'class=\"pair tagtr\"');\n\n// Define messages variables\n$mesg=''; $warning=''; $error=0;\n// deprecated, see setEventMessages() and dol_htmloutput_events()\n$mesgs=array(); $warnings=array(); $errors=array();\n\n// Constants used to defined number of lines in textarea\nif (empty($conf->browser->firefox))\n{\n\tdefine('ROWS_1',1);\n\tdefine('ROWS_2',2);\n\tdefine('ROWS_3',3);\n\tdefine('ROWS_4',4);\n\tdefine('ROWS_5',5);\n\tdefine('ROWS_6',6);\n\tdefine('ROWS_7',7);\n\tdefine('ROWS_8',8);\n\tdefine('ROWS_9',9);\n}\nelse\n{\n\tdefine('ROWS_1',0);\n\tdefine('ROWS_2',1);\n\tdefine('ROWS_3',2);\n\tdefine('ROWS_4',3);\n\tdefine('ROWS_5',4);\n\tdefine('ROWS_6',5);\n\tdefine('ROWS_7',6);\n\tdefine('ROWS_8',7);\n\tdefine('ROWS_9',8);\n}\n\n$heightforframes=48;\n\n// Init menu manager\nif (! defined('NOREQUIREMENU'))\n{\n\tif (empty($user->societe_id))    // If internal user or not defined\n\t{\n\t\t$conf->standard_menu=(empty($conf->global->MAIN_MENU_STANDARD_FORCED)?(empty($conf->global->MAIN_MENU_STANDARD)?'eldy_menu.php':$conf->global->MAIN_MENU_STANDARD):$conf->global->MAIN_MENU_STANDARD_FORCED);\n\t}\n\telse                        // If external user\n\t{\n\t\t$conf->standard_menu=(empty($conf->global->MAIN_MENUFRONT_STANDARD_FORCED)?(empty($conf->global->MAIN_MENUFRONT_STANDARD)?'eldy_menu.php':$conf->global->MAIN_MENUFRONT_STANDARD):$conf->global->MAIN_MENUFRONT_STANDARD_FORCED);\n\t}\n\n\t// Load the menu manager (only if not already done)\n\t$file_menu=$conf->standard_menu;\n\tif (GETPOST('menu','alpha')) $file_menu=GETPOST('menu','alpha');     // example: menu=eldy_menu.php\n\tif (! class_exists('MenuManager'))\n\t{\n\t\t$menufound=0;\n\t\t$dirmenus=array_merge(array(\"/core/menus/\"),(array) $conf->modules_parts['menus']);\n\t\tforeach($dirmenus as $dirmenu)\n\t\t{\n\t\t\t$menufound=dol_include_once($dirmenu.\"standard/\".$file_menu);\n\t\t\tif (class_exists('MenuManager')) break;\n\t\t}\n\t\tif (! class_exists('MenuManager'))\t// If failed to include, we try with standard eldy_menu.php\n\t\t{\n\t\t\tdol_syslog(\"You define a menu manager '\".$file_menu.\"' that can not be loaded.\", LOG_WARNING);\n\t\t\t$file_menu='eldy_menu.php';\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.\"/core/menus/standard/\".$file_menu;\n\t\t}\n\t}\n\t$menumanager = new MenuManager($db, empty($user->societe_id)?0:1);\n\t$menumanager->loadMenu();\n}\n\n\n\n// Functions\n\nif (! function_exists(\"llxHeader\"))\n{\n\t/**\n\t *\tShow HTML header HTML + BODY + Top menu + left menu + DIV\n\t *\n\t * @param \tstring \t$head\t\t\t\tOptionnal head lines\n\t * @param \tstring \t$title\t\t\t\tHTML title\n\t * @param\tstring\t$help_url\t\t\tUrl links to help page\n\t * \t\t                            \tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n\t *                                  \tFor other external page: http://server/url\n\t * @param\tstring\t$target\t\t\t\tTarget to use on links\n\t * @param \tint    \t$disablejs\t\t\tMore content into html header\n\t * @param \tint    \t$disablehead\t\tMore content into html header\n\t * @param \tarray  \t$arrayofjs\t\t\tArray of complementary js files\n\t * @param \tarray  \t$arrayofcss\t\t\tArray of complementary css files\n\t * @param\tstring\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n\t * @param   string  $morecssonbody      More CSS on body tag.\n\t * @param\tstring\t$replacemainareaby\tReplace call to main_area() by a print of this string\n\t * @return\tvoid\n\t */\n\tfunction llxHeader($head='', $title='', $help_url='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='', $morecssonbody='', $replacemainareaby='')\n\t{\n\t\tglobal $conf;\n\n\t\t// html header\n\t\ttop_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\n\n\t\tprint '<body id=\"mainbody\"'.($morecssonbody?' class=\"'.$morecssonbody.'\"':'').'>' . \"\\n\";\n\n\t\t// top menu and left menu area\n\t\tif (empty($conf->dol_hide_topmenu))\n\t\t{\n\t\t\ttop_menu($head, $title, $target, $disablejs, $disablehead, $arrayofjs, $arrayofcss, $morequerystring, $help_url);\n\t\t}\n\n\t\tif (empty($conf->dol_hide_leftmenu))\n\t\t{\n\t\t\tleft_menu('', $help_url, '', '', 1, $title, 1);\n\t\t}\n\n\t\t// main area\n\t\tif ($replacemainareaby)\n\t\t{\n\t\t\tprint $replacemainareaby;\n\t\t\treturn;\n\t\t}\n\t\tmain_area($title);\n\t}\n}\n\n\n/**\n *  Show HTTP header\n *\n *  @param  string  $contenttype    Content type. For example, 'text/html'\n *  @param\tint\t\t$forcenocache\tForce disabling of cache for the page\n *  @return\tvoid\n */\nfunction top_httphead($contenttype='text/html', $forcenocache=0)\n{\n\tglobal $conf;\n\n\tif ($contenttype == 'text/html' ) header(\"Content-Type: text/html; charset=\".$conf->file->character_set_client);\n\telse header(\"Content-Type: \".$contenttype);\n\t// Security options\n\theader(\"X-Content-Type-Options: nosniff\");  // With the nosniff option, if the server says the content is text/html, the browser will render it as text/html (note that most browsers now force this option to on)\n\theader(\"X-Frame-Options: SAMEORIGIN\");      // Frames allowed only if on same domain (stop some XSS attacks)\n\tif (! empty($conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY))\n\t{\n\t\t// For example, to restrict script, object, frames or img to some domains\n\t\t// script-src https://api.google.com https://anotherhost.com; object-src https://youtube.com; child-src https://youtube.com; img-src: https://static.example.com\n\t\t// For example, to restrict everything to one domain, except object, ...\n\t\t// default-src https://cdn.example.net; object-src 'none'\n\t\theader(\"Content-Security-Policy: \".$conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY);\n\t}\n\tif ($forcenocache)\n\t{\n\t\theader(\"Cache-Control: no-cache, no-store, must-revalidate, max-age=0\");\n\t}\n}\n\n/**\n * Ouput html header of a page.\n * This code is also duplicated into security2.lib.php::dol_loginfunction\n *\n * @param \tstring \t$head\t\t\t Optionnal head lines\n * @param \tstring \t$title\t\t\t HTML title\n * @param \tint    \t$disablejs\t\t Disable js output\n * @param \tint    \t$disablehead\t Disable head output\n * @param \tarray  \t$arrayofjs\t\t Array of complementary js files\n * @param \tarray  \t$arrayofcss\t\t Array of complementary css files\n * @param \tint    \t$disablejmobile\t Disable jmobile (No more used)\n * @param   int     $disablenofollow Disable no follow tag\n * @return\tvoid\n */\nfunction top_htmlhead($head, $title='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $disablejmobile=0, $disablenofollow=0)\n{\n\tglobal $user, $conf, $langs, $db;\n\n\ttop_httphead();\n\n\tif (empty($conf->css)) $conf->css = '/theme/eldy/style.css.php';\t// If not defined, eldy by default\n\n\tif (! empty($conf->global->MAIN_ACTIVATE_HTML4)) {\n\t\t$doctype = '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">';\n\t}else {\n\t\t$doctype = '<!doctype html>';\n\t}\n\tprint $doctype.\"\\n\";\n\tif (! empty($conf->global->MAIN_USE_CACHE_MANIFEST)) print '<html lang=\"'.substr($langs->defaultlang,0,2).'\" manifest=\"'.DOL_URL_ROOT.'/cache.manifest\">'.\"\\n\";\n\telse print '<html lang=\"'.substr($langs->defaultlang,0,2).'\">'.\"\\n\";\n\t//print '<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"fr\">'.\"\\n\";\n\tif (empty($disablehead))\n\t{\n\t\t$ext='layout='.$conf->browser->layout.'&version='.urlencode(DOL_VERSION);\n\n\t\tprint \"<head>\\n\";\n\t\tif (GETPOST('dol_basehref','alpha')) print '<base href=\"'.dol_escape_htmltag(GETPOST('dol_basehref','alpha')).'\">'.\"\\n\";\n\t\t// Displays meta\n\t\tprint '<meta name=\"robots\" content=\"noindex'.($disablenofollow?'':',nofollow').'\">'.\"\\n\";\t// Do not index\n\t\tprint '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">'.\"\\n\";\t\t// Scale for mobile device\n\t\tprint '<meta name=\"author\" content=\"Dolibarr Development Team\">'.\"\\n\";\n\t\t// Favicon\n\t\t$favicon=dol_buildpath('/theme/'.$conf->theme.'/img/favicon.ico',1);\n\t\tif (! empty($conf->global->MAIN_FAVICON_URL)) $favicon=$conf->global->MAIN_FAVICON_URL;\n\t\tif (empty($conf->dol_use_jmobile)) print '<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"'.$favicon.'\"/>'.\"\\n\";\t// Not required into an Android webview\n\t\t//if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"top\" title=\"'.$langs->trans(\"Home\").'\" href=\"'.(DOL_URL_ROOT?DOL_URL_ROOT:'/').'\">'.\"\\n\";\n\t\t//if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"copyright\" title=\"GNU General Public License\" href=\"http://www.gnu.org/copyleft/gpl.html#SEC1\">'.\"\\n\";\n\t\t//if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"author\" title=\"Dolibarr Development Team\" href=\"https://www.dolibarr.org\">'.\"\\n\";\n\n\t\t// Displays title\n\t\t$appli=constant('DOL_APPLICATION_TITLE');\n\t\tif (!empty($conf->global->MAIN_APPLICATION_TITLE)) $appli=$conf->global->MAIN_APPLICATION_TITLE;\n\n\t\tif ($title && ! empty($conf->global->MAIN_HTML_TITLE) && preg_match('/noapp/',$conf->global->MAIN_HTML_TITLE)) print '<title>'.dol_htmlentities($title).'</title>';\n\t\telse if ($title) print '<title>'.dol_htmlentities($appli.' - '.$title).'</title>';\n\t\telse print \"<title>\".dol_htmlentities($appli).\"</title>\";\n\t\tprint \"\\n\";\n\n\t\tif (GETPOST('version','int')) $ext='version='.GETPOST('version','int');\t// usefull to force no cache on css/js\n\t\tif (GETPOST('testmenuhider','int') || ! empty($conf->global->MAIN_TESTMENUHIDER)) $ext.='&testmenuhider='.(GETPOST('testmenuhider','int')?GETPOST('testmenuhider','int'):$conf->global->MAIN_TESTMENUHIDER);\n\n\t\t$themeparam='?lang='.$langs->defaultlang.'&amp;theme='.$conf->theme.(GETPOST('optioncss','aZ09')?'&amp;optioncss='.GETPOST('optioncss','aZ09',1):'').'&amp;userid='.$user->id.'&amp;entity='.$conf->entity;\n\t\t$themeparam.=($ext?'&amp;'.$ext:'');\n\t\tif (! empty($_SESSION['dol_resetcache'])) $themeparam.='&amp;dol_resetcache='.$_SESSION['dol_resetcache'];\n\t\tif (GETPOST('dol_hide_topmenu','int'))           { $themeparam.='&amp;dol_hide_topmenu='.GETPOST('dol_hide_topmenu','int'); }\n\t\tif (GETPOST('dol_hide_leftmenu','int'))          { $themeparam.='&amp;dol_hide_leftmenu='.GETPOST('dol_hide_leftmenu','int'); }\n\t\tif (GETPOST('dol_optimize_smallscreen','int'))   { $themeparam.='&amp;dol_optimize_smallscreen='.GETPOST('dol_optimize_smallscreen','int'); }\n\t\tif (GETPOST('dol_no_mouse_hover','int'))         { $themeparam.='&amp;dol_no_mouse_hover='.GETPOST('dol_no_mouse_hover','int'); }\n\t\tif (GETPOST('dol_use_jmobile','int'))            { $themeparam.='&amp;dol_use_jmobile='.GETPOST('dol_use_jmobile','int'); $conf->dol_use_jmobile=GETPOST('dol_use_jmobile','int'); }\n\n\t\tif (! defined('DISABLE_JQUERY') && ! $disablejs && $conf->use_javascript_ajax)\n\t\t{\n\t\t\tprint '<!-- Includes CSS for JQuery (Ajax library) -->'.\"\\n\";\n\t\t\t$jquerytheme = 'base';\n\t\t\tif (!empty($conf->global->MAIN_USE_JQUERY_THEME)) $jquerytheme = $conf->global->MAIN_USE_JQUERY_THEME;\n\t\t\tif (constant('JS_JQUERY_UI')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.JS_JQUERY_UI.'css/'.$jquerytheme.'/jquery-ui.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";  // JQuery\n\t\t\telse print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/css/'.$jquerytheme.'/jquery-ui.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";    // JQuery\n\t\t\tif (! defined('DISABLE_JQUERY_JNOTIFY')) print '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify-alt.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";          // JNotify\n\t\t\tif (! defined('DISABLE_SELECT2') && (! empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT')))     // jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\"...\n\t\t\t{\n\t\t\t\t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?constant('REQUIRE_JQUERY_MULTISELECT'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/dist/css/'.$tmpplugin.'.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (! defined('DISABLE_FONT_AWSOME'))\n\t\t{\n\t\t\tprint '<!-- Includes CSS for font awesome -->'.\"\\n\";\n\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/theme/common/fontawesome/css/font-awesome.min.css'.($ext?'?'.$ext:'').'\">'.\"\\n\";\n\t\t}\n\n\t\tprint '<!-- Includes CSS for Dolibarr theme -->'.\"\\n\";\n\t\t// Output style sheets (optioncss='print' or ''). Note: $conf->css looks like '/theme/eldy/style.css.php'\n\t\t$themepath=dol_buildpath($conf->css,1);\n\t\t$themesubdir='';\n\t\tif (! empty($conf->modules_parts['theme']))\t// This slow down\n\t\t{\n\t\t\tforeach($conf->modules_parts['theme'] as $reldir)\n\t\t\t{\n\t\t\t\tif (file_exists(dol_buildpath($reldir.$conf->css, 0)))\n\t\t\t\t{\n\t\t\t\t\t$themepath=dol_buildpath($reldir.$conf->css, 1);\n\t\t\t\t\t$themesubdir=$reldir;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//print 'themepath='.$themepath.' themeparam='.$themeparam;exit;\n\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.$themepath.$themeparam.'\">'.\"\\n\";\n\t\tif (! empty($conf->global->MAIN_FIX_FLASH_ON_CHROME)) print '<!-- Includes CSS that does not exists as a workaround of flash bug of chrome -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"filethatdoesnotexiststosolvechromeflashbug\">'.\"\\n\";\n\n\t\t// CSS forced by modules (relative url starting with /)\n\t\tif (! empty($conf->modules_parts['css']))\n\t\t{\n\t\t\t$arraycss=(array) $conf->modules_parts['css'];\n\t\t\tforeach($arraycss as $modcss => $filescss)\n\t\t\t{\n\t\t\t\t$filescss=(array) $filescss;\t// To be sure filecss is an array\n\t\t\t\tforeach($filescss as $cssfile)\n\t\t\t\t{\n\t\t\t\t\tif (empty($cssfile)) dol_syslog(\"Warning: module \".$modcss.\" declared a css path file into its descriptor that is empty.\", LOG_WARNING);\n\t\t\t\t\t// cssfile is a relative path\n\t\t\t\t\tprint '<!-- Includes CSS added by module '.$modcss. ' -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"'.dol_buildpath($cssfile,1);\n\t\t\t\t\t// We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters, so browser cache is not used.\n\t\t\t\t\tif (!preg_match('/\\.css$/i',$cssfile)) print $themeparam;\n\t\t\t\t\tprint '\">'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// CSS forced by page in top_htmlhead call (relative url starting with /)\n\t\tif (is_array($arrayofcss))\n\t\t{\n\t\t\tforeach($arrayofcss as $cssfile)\n\t\t\t{\n\t\t\t\tprint '<!-- Includes CSS added by page -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" title=\"default\" href=\"'.dol_buildpath($cssfile,1);\n\t\t\t\t// We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters and browser cache is not used.\n\t\t\t\tif (!preg_match('/\\.css$/i',$cssfile)) print $themeparam;\n\t\t\t\tprint '\">'.\"\\n\";\n\t\t\t}\n\t\t}\n\n\t\t// Output standard javascript links\n\t\tif (! defined('DISABLE_JQUERY') && ! $disablejs && ! empty($conf->use_javascript_ajax))\n\t\t{\n\t\t\t// JQuery. Must be before other includes\n\t\t\tprint '<!-- Includes JS for JQuery -->'.\"\\n\";\n\t\t\tif (defined('JS_JQUERY') && constant('JS_JQUERY')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY.'jquery.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\telse print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\tif (! empty($conf->global->MAIN_FEATURES_LEVEL) && ! defined('JS_JQUERY_MIGRATE_DISABLED'))\n\t\t\t{\n\t\t\t\tif (defined('JS_JQUERY_MIGRATE') && constant('JS_JQUERY_MIGRATE')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_MIGRATE.'jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\telse print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\tif (defined('JS_JQUERY_UI') && constant('JS_JQUERY_UI')) print '<script type=\"text/javascript\" src=\"'.JS_JQUERY_UI.'jquery-ui.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\telse print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-ui.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\tif (! defined('DISABLE_JQUERY_TABLEDND')) print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tablednd/jquery.tablednd.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t// jQuery jnotify\n\t\t\tif (empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) && ! defined('DISABLE_JQUERY_JNOTIFY'))\n\t\t\t{\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\t// Flot\n\t\t\tif (empty($conf->global->MAIN_DISABLE_JQUERY_FLOT) && ! defined('DISABLE_JQUERY_FLOT'))\n\t\t\t{\n\t\t\t\tif (constant('JS_JQUERY_FLOT'))\n\t\t\t\t{\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.pie.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.JS_JQUERY_FLOT.'jquery.flot.stack.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.pie.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/flot/jquery.flot.stack.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t// jQuery jeditable\n\t\t\tif (! empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && ! defined('DISABLE_JQUERY_JEDITABLE'))\n\t\t\t{\n\t\t\t\tprint '<!-- JS to manage editInPlace feature -->'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-datepicker.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-autocomplete.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\">'.\"\\n\";\n\t\t\t\tprint 'var urlSaveInPlace = \\''.DOL_URL_ROOT.'/core/ajax/saveinplace.php\\';'.\"\\n\";\n\t\t\t\tprint 'var urlLoadInPlace = \\''.DOL_URL_ROOT.'/core/ajax/loadinplace.php\\';'.\"\\n\";\n\t\t\t\tprint 'var tooltipInPlace = \\''.$langs->transnoentities('ClickToEdit').'\\';'.\"\\n\";\t// Added in title attribute of span\n\t\t\t\tprint 'var placeholderInPlace = \\'&nbsp;\\';'.\"\\n\";\t// If we put another string than $langs->trans(\"ClickToEdit\") here, nothing is shown. If we put empty string, there is error, Why ?\n\t\t\t\tprint 'var cancelInPlace = \\''.$langs->trans('Cancel').'\\';'.\"\\n\";\n\t\t\t\tprint 'var submitInPlace = \\''.$langs->trans('Ok').'\\';'.\"\\n\";\n\t\t\t\tprint 'var indicatorInPlace = \\'<img src=\"'.DOL_URL_ROOT.\"/theme/\".$conf->theme.\"/img/working.gif\".'\">\\';'.\"\\n\";\n\t\t\t\tprint 'var withInPlace = 300;';\t\t// width in pixel for default string edit\n\t\t\t\tprint '</script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/editinplace.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ckeditor.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t}\n            // jQuery Timepicker\n            if (! empty($conf->global->MAIN_USE_JQUERY_TIMEPICKER) || defined('REQUIRE_JQUERY_TIMEPICKER'))\n            {\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/timepicker/jquery-ui-timepicker-addon.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/timepicker.js.php?lang='.$langs->defaultlang.($ext?'&amp;'.$ext:'').'\"></script>'.\"\\n\";\n            }\n            if (! defined('DISABLE_SELECT2') && (! empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT')))     // jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\", ...\n            {\n            \t$tmpplugin=empty($conf->global->MAIN_USE_JQUERY_MULTISELECT)?constant('REQUIRE_JQUERY_MULTISELECT'):$conf->global->MAIN_USE_JQUERY_MULTISELECT;\n            \tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/dist/js/'.$tmpplugin.'.full.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\t// We include full because we need the support of containerCssClass\n            }\n        }\n\n        if (! $disablejs && ! empty($conf->use_javascript_ajax))\n        {\n            // CKEditor\n            if (! empty($conf->fckeditor->enabled) && (empty($conf->global->FCKEDITOR_EDITORNAME) || $conf->global->FCKEDITOR_EDITORNAME == 'ckeditor') && ! defined('DISABLE_CKEDITOR'))\n            {\n                print '<!-- Includes JS for CKEditor -->'.\"\\n\";\n                $pathckeditor = DOL_URL_ROOT . '/includes/ckeditor/ckeditor/';\n                $jsckeditor='ckeditor.js';\n                if (constant('JS_CKEDITOR'))\t// To use external ckeditor 4 js lib\n                {\n                \t$pathckeditor=constant('JS_CKEDITOR');\n                }\n                print '<script type=\"text/javascript\">';\n                print 'var CKEDITOR_BASEPATH = \\''.$pathckeditor.'\\';'.\"\\n\";\n                print 'var ckeditorConfig = \\''.dol_buildpath($themesubdir.'/theme/'.$conf->theme.'/ckeditor/config.js'.($ext?'?'.$ext:''),1).'\\';'.\"\\n\";\t\t// $themesubdir='' in standard usage\n                print 'var ckeditorFilebrowserBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n                print 'var ckeditorFilebrowserImageBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Type=Image&Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n                print '</script>'.\"\\n\";\n                print '<script type=\"text/javascript\" src=\"'.$pathckeditor.$jsckeditor.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n            }\n\n            // Browser notifications\n            if (! defined('DISABLE_BROWSER_NOTIF'))\n            {\n                $enablebrowsernotif=false;\n                if (! empty($conf->agenda->enabled) && ! empty($conf->global->AGENDA_REMINDER_BROWSER)) $enablebrowsernotif=true;\n                if ($conf->browser->layout == 'phone') $enablebrowsernotif=false;\n                if ($enablebrowsernotif)\n                {\n                    print '<!-- Includes JS of Dolibarr (brwoser layout = '.$conf->browser->layout.')-->'.\"\\n\";\n                    print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/lib_notification.js.php'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n                }\n            }\n\n            // Global js function\n            print '<!-- Includes JS of Dolibarr -->'.\"\\n\";\n            print '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/lib_head.js.php?lang='.$langs->defaultlang.($ext?'&'.$ext:'').'\"></script>'.\"\\n\";\n\n            // JS forced by modules (relative url starting with /)\n            if (! empty($conf->modules_parts['js']))\t\t// $conf->modules_parts['js'] is array('module'=>array('file1','file2'))\n        \t{\n        \t\t$arrayjs=(array) $conf->modules_parts['js'];\n\t            foreach($arrayjs as $modjs => $filesjs)\n\t            {\n        \t\t\t$filesjs=(array) $filesjs;\t// To be sure filejs is an array\n\t\t            foreach($filesjs as $jsfile)\n\t\t            {\n\t    \t    \t\t// jsfile is a relative path\n\t        \t    \tprint '<!-- Include JS added by module '.$modjs. '-->'.\"\\n\".'<script type=\"text/javascript\" src=\"'.dol_buildpath($jsfile,1).'\"></script>'.\"\\n\";\n\t\t            }\n\t            }\n        \t}\n            // JS forced by page in top_htmlhead (relative url starting with /)\n            if (is_array($arrayofjs))\n            {\n                print '<!-- Includes JS added by page -->'.\"\\n\";\n                foreach($arrayofjs as $jsfile)\n                {\n                    if (preg_match('/^http/i',$jsfile))\n                    {\n                        print '<script type=\"text/javascript\" src=\"'.$jsfile.'\"></script>'.\"\\n\";\n                    }\n                    else\n                    {\n                        if (! preg_match('/^\\//',$jsfile)) $jsfile='/'.$jsfile;\t// For backward compatibility\n                        print '<script type=\"text/javascript\" src=\"'.dol_buildpath($jsfile,1).'\"></script>'.\"\\n\";\n                    }\n                }\n            }\n        }\n\n        if (! empty($head)) print $head.\"\\n\";\n        if (! empty($conf->global->MAIN_HTML_HEADER)) print $conf->global->MAIN_HTML_HEADER.\"\\n\";\n\n        print \"</head>\\n\\n\";\n    }\n\n    $conf->headerdone=1;\t// To tell header was output\n}\n\n\n/**\n *  Show an HTML header + a BODY + The top menu bar\n *\n *  @param      string\t$head    \t\t\tLines in the HEAD\n *  @param      string\t$title   \t\t\tTitle of web page\n *  @param      string\t$target  \t\t\tTarget to use in menu links (Example: '' or '_top')\n *\t@param\t\tint\t\t$disablejs\t\t\tDo not output links to js (Ex: qd fonction utilisee par sous formulaire Ajax)\n *\t@param\t\tint\t\t$disablehead\t\tDo not output head section\n *\t@param\t\tarray\t$arrayofjs\t\t\tArray of js files to add in header\n *\t@param\t\tarray\t$arrayofcss\t\t\tArray of css files to add in header\n *  @param\t\tstring\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n *  @param      string\t$helppagename    \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                Syntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t                   For other external page: http://server/url\n *  @return\t\tvoid\n */\nfunction top_menu($head, $title='', $target='', $disablejs=0, $disablehead=0, $arrayofjs='', $arrayofcss='', $morequerystring='', $helppagename='')\n{\n\tglobal $user, $conf, $langs, $db;\n\tglobal $dolibarr_main_authentication, $dolibarr_main_demo;\n\tglobal $hookmanager,$menumanager;\n\n\t$searchform='';\n\t$bookmarks='';\n\n\t// Instantiate hooks of thirdparty module\n\t$hookmanager->initHooks(array('toprightmenu'));\n\n\t$toprightmenu='';\n\n\t// For backward compatibility with old modules\n\tif (empty($conf->headerdone))\n\t{\n\t\ttop_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss);\n\t\tprint '<body id=\"mainbody\">';\n\t}\n\n\t/*\n     * Top menu\n     */\n\tif (empty($conf->dol_hide_topmenu) && (! defined('NOREQUIREMENU') || ! constant('NOREQUIREMENU')))\n\t{\n\t\tprint \"\\n\".'<!-- Start top horizontal -->'.\"\\n\";\n\n\t\tprint '<div class=\"side-nav-vert\"><div id=\"id-top\">';\n\n\t\t// Show menu entries\n\t\tprint '<div id=\"tmenu_tooltip'.(empty($conf->global->MAIN_MENU_INVERT)?'':'invert').'\" class=\"tmenu\">'.\"\\n\";\n\t\t$menumanager->atarget=$target;\n\t\t$menumanager->showmenu('top', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks));      // This contains a \\n\n\t\tprint \"</div>\\n\";\n\n\t\t// Define link to login card\n\t\t$appli=constant('DOL_APPLICATION_TITLE');\n\t\tif (! empty($conf->global->MAIN_APPLICATION_TITLE))\n\t\t{\n\t\t\t$appli=$conf->global->MAIN_APPLICATION_TITLE;\n\t\t\tif (preg_match('/\\d\\.\\d/', $appli))\n\t\t\t{\n\t\t\t\tif (! preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) $appli.=\" (\".DOL_VERSION.\")\";\t// If new title contains a version that is different than core\n\t\t\t}\n\t\t\telse $appli.=\" \".DOL_VERSION;\n\t\t}\n\t\telse $appli.=\" \".DOL_VERSION;\n\n\t\tif (! empty($conf->global->MAIN_FEATURES_LEVEL)) $appli.=\"<br>\".$langs->trans(\"LevelOfFeature\").': '.$conf->global->MAIN_FEATURES_LEVEL;\n\n\t\t$logouttext='';\n\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER))\n\t\t{\n\t\t\t//$logouthtmltext=$appli.'<br>';\n\t\t\tif ($_SESSION[\"dol_authmode\"] != 'forceuser' && $_SESSION[\"dol_authmode\"] != 'http')\n\t\t\t{\n\t\t\t\t$logouthtmltext.=$langs->trans(\"Logout\").'<br>';\n\n\t\t\t\t$logouttext .='<a href=\"'.DOL_URL_ROOT.'/user/logout.php\">';\n\t\t\t\t//$logouttext .= img_picto($langs->trans('Logout').\":\".$langs->trans('Logout'), 'logout_top.png', 'class=\"login\"', 0, 0, 1);\n\t\t\t\t$logouttext .='<span class=\"fa fa-sign-out atoplogin\"></span>';\n\t\t\t\t$logouttext .='</a>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$logouthtmltext.=$langs->trans(\"NoLogoutProcessWithAuthMode\",$_SESSION[\"dol_authmode\"]);\n\t\t\t\t$logouttext .= img_picto($langs->trans('Logout').\":\".$langs->trans('Logout'), 'logout_top.png', 'class=\"login\"', 0, 0, 1);\n\t\t\t}\n\t\t}\n\n\t\tprint '<div class=\"login_block\">'.\"\\n\";\n\n\t\t// Add login user link\n\t\t$toprightmenu.='<div class=\"login_block_user\">';\n\n\t\t// Login name with photo and tooltip\n\t\t$mode=-1;\n\t\t$toprightmenu.='<div class=\"inline-block nowrap\"><div class=\"inline-block login_block_elem login_block_elem_name\" style=\"padding: 0px;\">';\n\t\t$toprightmenu.=$user->getNomUrl($mode, '', 1, 0, 11, 0, ($user->firstname ? 'firstname' : -1),'atoplogin');\n\t\t$toprightmenu.='</div></div>';\n\n\t\t$toprightmenu.='</div>'.\"\\n\";\n\n\t\t$toprightmenu.='<div class=\"login_block_other\">';\n\n\t\t// Execute hook printTopRightMenu (hooks should output string like '<div class=\"login\"><a href=\"\">mylink</a></div>')\n\t\t$parameters=array();\n\t\t$result=$hookmanager->executeHooks('printTopRightMenu',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t\tif (is_numeric($result))\n\t\t{\n\t\t\tif (empty($result)) $toprightmenu.=$hookmanager->resPrint;\t\t// add\n\t\t\telse  $toprightmenu=$hookmanager->resPrint;\t\t\t\t\t\t// replace\n\t\t}\n\t\telse $toprightmenu.=$result;\t// For backward compatibility\n\n\t\t// Link to module builder\n\t\tif (! empty($conf->modulebuilder->enabled))\n\t\t{\n\t\t\t$text ='<a href=\"'.DOL_URL_ROOT.'/modulebuilder/index.php?mainmenu=home&leftmenu=admintools\" target=\"_modulebuilder\">';\n\t\t\t//$text.= img_picto(\":\".$langs->trans(\"ModuleBuilder\"), 'printer_top.png', 'class=\"printer\"');\n\t\t\t$text.='<span class=\"fa fa-bug atoplogin\"></span>';\n\t\t\t$text.='</a>';\n\t\t\t$toprightmenu.=@Form::textwithtooltip('',$langs->trans(\"ModuleBuilder\"),2,1,$text,'login_block_elem',2);\n\t\t}\n\n\t\t// Link to print main content area\n\t\tif (empty($conf->global->MAIN_PRINT_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && empty($conf->browser->phone))\n\t\t{\n\t\t\t$qs=dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]);\n\n\t\t\tif (is_array($_POST))\n\t\t\t{\n\t\t\t\tforeach($_POST as $key=>$value) {\n\t\t\t\t\tif ($key!=='action' && $key!=='password' && !is_array($value)) $qs.='&'.$key.'='.urlencode($value);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$qs.=(($qs && $morequerystring)?'&':'').$morequerystring;\n\t\t\t$text ='<a href=\"'.dol_escape_htmltag($_SERVER[\"PHP_SELF\"]).'?'.$qs.($qs?'&':'').'optioncss=print\" target=\"_blank\">';\n\t\t\t//$text.= img_picto(\":\".$langs->trans(\"PrintContentArea\"), 'printer_top.png', 'class=\"printer\"');\n\t\t\t$text.='<span class=\"fa fa-print atoplogin\"></span>';\n\t\t\t$text.='</a>';\n\t\t\t$toprightmenu.=@Form::textwithtooltip('',$langs->trans(\"PrintContentArea\"),2,1,$text,'login_block_elem',2);\n\t\t}\n\n\t\t// Link to Dolibarr wiki pages\n\t\tif (empty($conf->global->MAIN_HELP_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER))\n\t\t{\n\t\t\t$langs->load(\"help\");\n\n\t\t\t$helpbaseurl='';\n\t\t\t$helppage='';\n\t\t\t$mode='';\n\n\t\t\tif (empty($helppagename)) $helppagename='EN:User_documentation|FR:Documentation_utilisateur|ES:Documentaci\u00f3n_usuarios';\n\n\t\t\t// Get helpbaseurl, helppage and mode from helppagename and langs\n\t\t\t$arrayres=getHelpParamFor($helppagename,$langs);\n\t\t\t$helpbaseurl=$arrayres['helpbaseurl'];\n\t\t\t$helppage=$arrayres['helppage'];\n\t\t\t$mode=$arrayres['mode'];\n\n\t\t\t// Link to help pages\n\t\t\tif ($helpbaseurl && $helppage)\n\t\t\t{\n\t\t\t\t$text='';\n\t\t\t\t$title=$appli.'<br>';\n\t\t\t\t$title.=$langs->trans($mode == 'wiki' ? 'GoToWikiHelpPage': 'GoToHelpPage');\n\t\t\t\tif ($mode == 'wiki') $title.=' - '.$langs->trans(\"PageWiki\").' &quot;'.dol_escape_htmltag(strtr($helppage,'_',' ')).'&quot;';\n\t\t\t\t$text.='<a class=\"help\" target=\"_blank\" rel=\"noopener\" href=\"';\n\t\t\t\tif ($mode == 'wiki') $text.=sprintf($helpbaseurl,urlencode(html_entity_decode($helppage)));\n\t\t\t\telse $text.=sprintf($helpbaseurl,$helppage);\n\t\t\t\t$text.='\">';\n\t\t\t\t//$text.=img_picto('', 'helpdoc_top').' ';\n\t\t\t\t$text.='<span class=\"fa fa-question-circle atoplogin\"></span>';\n\t\t\t\t//$toprightmenu.=$langs->trans($mode == 'wiki' ? 'OnlineHelp': 'Help');\n\t\t\t\t//if ($mode == 'wiki') $text.=' ('.dol_trunc(strtr($helppage,'_',' '),8).')';\n\t\t\t\t$text.='</a>';\n\t\t\t\t//$toprightmenu.='</div>'.\"\\n\";\n\t\t\t\t$toprightmenu.=@Form::textwithtooltip('',$title,2,1,$text,'login_block_elem',2);\n\t\t\t}\n\t\t}\n\n\t\t// Logout link\n\t\t$toprightmenu.=@Form::textwithtooltip('',$logouthtmltext,2,1,$logouttext,'login_block_elem',2);\n\n\t\t$toprightmenu.='</div>';\n\n\t\tprint $toprightmenu;\n\n\t\tprint \"</div>\\n\";\n\t\tprint '</div></div>';\n\n\t\tprint '<div style=\"clear: both;\"></div>';\n\t\tprint \"<!-- End top horizontal menu -->\\n\\n\";\n\t}\n\n\tif (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) print '<!-- Begin div id-container --><div id=\"id-container\" class=\"id-container'.($morecss?' '.$morecss:'').'\">';\n}\n\n\n/**\n *  Show left menu bar\n *\n *  @param  array\t$menu_array_before \t       \tTable of menu entries to show before entries of menu handler. This param is deprectaed and must be provided to ''.\n *  @param  string\t$helppagename    \t       \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                   \tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t         \t\t       For other external page: http://server/url\n *  @param  string\t$notused             \t\tDeprecated. Used in past to add content into left menu. Hooks can be used now.\n *  @param  array\t$menu_array_after           Table of menu entries to show after entries of menu handler\n *  @param  int\t\t$leftmenuwithoutmainarea    Must be set to 1. 0 by default for backward compatibility with old modules.\n *  @param  string\t$title                      Title of web page\n *  @param  string  $acceptdelayedhtml          1 if caller request to have html delayed content not returned but saved into global $delayedhtmlcontent (so caller can show it at end of page to avoid flash FOUC effect)\n *  @return\tvoid\n */\nfunction left_menu($menu_array_before, $helppagename='', $notused='', $menu_array_after='', $leftmenuwithoutmainarea=0, $title='', $acceptdelayedhtml=0)\n{\n\tglobal $user, $conf, $langs, $db, $form;\n\tglobal $hookmanager, $menumanager;\n\n\t$searchform='';\n\t$bookmarks='';\n\n\tif (! empty($menu_array_before)) dol_syslog(\"Deprecated parameter menu_array_before was used when calling main::left_menu function. Menu entries of module should now be defined into module descriptor and not provided when calling left_menu.\", LOG_WARNING);\n\n\tif (empty($conf->dol_hide_leftmenu) && (! defined('NOREQUIREMENU') || ! constant('NOREQUIREMENU')))\n\t{\n\t\t// Instantiate hooks of thirdparty module\n\t\t$hookmanager->initHooks(array('searchform','leftblock'));\n\n\t\tprint \"\\n\".'<!-- Begin side-nav id-left -->'.\"\\n\".'<div class=\"side-nav\"><div id=\"id-left\">'.\"\\n\";\n\n\t\tif ($conf->browser->layout == 'phone') $conf->global->MAIN_USE_OLD_SEARCH_FORM=1;\t// Select into select2 is awfull on smartphone. TODO Is this still true with select2 v4 ?\n\n\t\tprint \"\\n\";\n\t\tif ($conf->use_javascript_ajax && empty($conf->global->MAIN_USE_OLD_SEARCH_FORM))\n\t\t{\n\t\t\tif (! is_object($form)) $form=new Form($db);\n\t\t\t$selected=-1;\n\t\t\t$searchform.=$form->selectArrayAjax('searchselectcombo', DOL_URL_ROOT.'/core/ajax/selectsearchbox.php', $selected, '', '', 0, 1, 'vmenusearchselectcombo', 1, $langs->trans(\"Search\"), 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (! is_object($form)) $form=new Form($db);\n\t\t\t$selected=-1;\n\t\t\t$usedbyinclude=1;\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/ajax/selectsearchbox.php';\n\n\t\t\tforeach($arrayresult as $key => $val)\n\t\t\t{\n\t\t\t\t//$searchform.=printSearchForm($val['url'], $val['url'], $val['label'], 'maxwidth100', 'sall', $val['shortcut'], 'searchleft', img_picto('',$val['img']));\n\t\t\t\t$searchform.=printSearchForm($val['url'], $val['url'], $val['label'], 'maxwidth125', 'sall', $val['shortcut'], 'searchleft', img_picto('', $val['img'], '', false, 1, 1));\n\t\t\t}\n\t\t}\n\n\t\t// Execute hook printSearchForm\n\t\t$parameters=array('searchform'=>$searchform);\n\t\t$reshook=$hookmanager->executeHooks('printSearchForm',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t\tif (empty($reshook))\n\t\t{\n\t\t\t$searchform.=$hookmanager->resPrint;\n\t\t}\n\t\telse $searchform=$hookmanager->resPrint;\n\n\t\t// Force special value for $searchform\n\t\tif (! empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) || empty($conf->use_javascript_ajax))\n\t\t{\n\t\t\t$urltosearch=DOL_URL_ROOT.'/core/search_page.php?showtitlebefore=1';\n\t\t\t$searchform='<div class=\"blockvmenuimpair blockvmenusearchphone\"><div id=\"divsearchforms1\"><a href=\"'.$urltosearch.'\" alt=\"'.dol_escape_htmltag($langs->trans(\"ShowSearchFields\")).'\">'.$langs->trans(\"Search\").'...</a></div></div>';\n\t\t}\n\t\telseif ($conf->use_javascript_ajax && ! empty($conf->global->MAIN_USE_OLD_SEARCH_FORM))\n\t\t{\n\t\t\t$searchform='<div class=\"blockvmenuimpair blockvmenusearchphone\"><div id=\"divsearchforms1\"><a href=\"#\" alt=\"'.dol_escape_htmltag($langs->trans(\"ShowSearchFields\")).'\">'.$langs->trans(\"Search\").'...</a></div><div id=\"divsearchforms2\" style=\"display: none\">'.$searchform.'</div>';\n\t\t\t$searchform.='<script type=\"text/javascript\">\n            \tjQuery(document).ready(function () {\n            \t\tjQuery(\"#divsearchforms1\").click(function(){\n\t                   jQuery(\"#divsearchforms2\").toggle();\n\t               });\n            \t});\n                </script>' . \"\\n\";\n\t\t\t$searchform.='</div>';\n\t\t}\n\n\t\t// Define $bookmarks\n\t\tif (! empty($conf->bookmark->enabled) && $user->rights->bookmark->lire)\n\t\t{\n\t\t\tinclude_once (DOL_DOCUMENT_ROOT.'/bookmarks/bookmarks.lib.php');\n\t\t\t$langs->load(\"bookmarks\");\n\n\t\t\t$bookmarks=printBookmarksList($db, $langs);\n\t\t}\n\n\t\t// Left column\n\t\tprint '<!-- Begin left menu -->'.\"\\n\";\n\n\t\tprint '<div class=\"vmenu\"'.(empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)?'':' title=\"Left menu\"').'>'.\"\\n\\n\";\n\n\t\t// Show left menu with other forms\n\t\t$menumanager->menu_array = $menu_array_before;\n\t\t$menumanager->menu_array_after = $menu_array_after;\n\t\t$menumanager->showmenu('left', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks)); // output menu_array and menu found in database\n\n\t\t// Dolibarr version + help + bug report link\n\t\tprint \"\\n\";\n\t\tprint \"<!-- Begin Help Block-->\\n\";\n\t\tprint '<div id=\"blockvmenuhelp\" class=\"blockvmenuhelp\">'.\"\\n\";\n\n\t\t// Version\n\t\tif (empty($conf->global->MAIN_HIDE_VERSION))    // Version is already on help picto and on login page.\n\t\t{\n\t\t\t$doliurl='https://www.dolibarr.org';\n\t\t\t//local communities\n\t\t\tif (preg_match('/fr/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.fr';\n\t\t\tif (preg_match('/es/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.es';\n\t\t\tif (preg_match('/de/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.de';\n\t\t\tif (preg_match('/it/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.it';\n\t\t\tif (preg_match('/gr/i',$langs->defaultlang)) $doliurl='https://www.dolibarr.gr';\n\n\t\t\t$appli=constant('DOL_APPLICATION_TITLE');\n\t\t\tif (! empty($conf->global->MAIN_APPLICATION_TITLE))\n\t\t\t{\n\t\t\t\t$appli=$conf->global->MAIN_APPLICATION_TITLE; $doliurl='';\n\t\t\t\tif (preg_match('/\\d\\.\\d/', $appli))\n\t\t\t\t{\n\t\t\t\t\tif (! preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) $appli.=\" (\".DOL_VERSION.\")\";\t// If new title contains a version that is different than core\n\t\t\t\t}\n\t\t\t\telse $appli.=\" \".DOL_VERSION;\n\t\t\t}\n\t\t\telse $appli.=\" \".DOL_VERSION;\n\t\t\tprint '<div id=\"blockvmenuhelpapp\" class=\"blockvmenuhelp\">';\n\t\t\tif ($doliurl) print '<a class=\"help\" target=\"_blank\" rel=\"noopener\" href=\"'.$doliurl.'\">';\n\t\t\telse print '<span class=\"help\">';\n\t\t\tprint $appli;\n\t\t\tif ($doliurl) print '</a>';\n\t\t\telse print '</span>';\n\t\t\tprint '</div>'.\"\\n\";\n\t\t}\n\n\t\t// Link to bugtrack\n\t\tif (! empty($conf->global->MAIN_BUGTRACK_ENABLELINK))\n\t\t{\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\n\t\t\t$bugbaseurl = 'https://github.com/Dolibarr/dolibarr/issues/new';\n\t\t\t$bugbaseurl.= '?title=';\n\t\t\t$bugbaseurl.= urlencode(\"Bug: \");\n\t\t\t$bugbaseurl.= '&body=';\n\t\t\t// TODO use .github/ISSUE_TEMPLATE.md to generate?\n\t\t\t$bugbaseurl .= urlencode(\"# Bug\\n\");\n\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"## Environment\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Version**: \" . DOL_VERSION . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **OS**: \" . php_uname('s') . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Web server**: \" . $_SERVER[\"SERVER_SOFTWARE\"] . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **PHP**: \" . php_sapi_name() . ' ' . phpversion() . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **Database**: \" . $db::LABEL . ' ' . $db->getVersion() . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"- **URL**: \" . $_SERVER[\"REQUEST_URI\"] . \"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"\\n\");\n\t\t\t$bugbaseurl.= urlencode(\"## Report\\n\");\n\t\t\tprint '<div id=\"blockvmenuhelpbugreport\" class=\"blockvmenuhelp\">';\n\t\t\tprint '<a class=\"help\" target=\"_blank\" rel=\"noopener\" href=\"'.$bugbaseurl.'\">'.$langs->trans(\"FindBug\").'</a>';\n\t\t\tprint '</div>';\n\t\t}\n\n\t\tprint \"</div>\\n\";\n\t\tprint \"<!-- End Help Block-->\\n\";\n\t\tprint \"\\n\";\n\n\t\tprint \"</div>\\n\";\n\t\tprint \"<!-- End left menu -->\\n\";\n\t\tprint \"\\n\";\n\n\t\t// Execute hook printLeftBlock\n\t\t$parameters=array();\n\t\t$reshook=$hookmanager->executeHooks('printLeftBlock',$parameters);    // Note that $action and $object may have been modified by some hooks\n\t\tprint $hookmanager->resPrint;\n\n\t\tprint '</div></div> <!-- End side-nav id-left -->';\t// End div id=\"side-nav\" div id=\"id-left\"\n\t}\n\n\tprint \"\\n\";\n\tprint '<!-- Begin right area -->'.\"\\n\";\n\n\tif (empty($leftmenuwithoutmainarea)) main_area($title);\n}\n\n\n/**\n *  Begin main area\n *\n *  @param\tstring\t$title\t\tTitle\n *  @return\tvoid\n */\nfunction main_area($title='')\n{\n\tglobal $conf, $langs;\n\n\tif (empty($conf->dol_hide_leftmenu)) print '<div id=\"id-right\">';\n\n\tprint \"\\n\";\n\n\tprint '<!-- Begin div class=\"fiche\" -->'.\"\\n\".'<div class=\"fiche\">'.\"\\n\";\n\n\tif (! empty($conf->global->MAIN_ONLY_LOGIN_ALLOWED)) print info_admin($langs->trans(\"WarningYouAreInMaintenanceMode\",$conf->global->MAIN_ONLY_LOGIN_ALLOWED));\n}\n\n\n/**\n *  Return helpbaseurl, helppage and mode\n *\n *  @param\tstring\t\t$helppagename\t\tPage name ('EN:xxx,ES:eee,FR:fff...' or 'http://localpage')\n *  @param  Translate\t$langs\t\t\t\tLanguage\n *  @return\tarray\t\tArray of help urls\n */\nfunction getHelpParamFor($helppagename,$langs)\n{\n\t$helpbaseurl='';\n\t$helppage='';\n\t$mode='';\n\n\tif (preg_match('/^http/i',$helppagename))\n\t{\n\t\t// If complete URL\n\t\t$helpbaseurl='%s';\n\t\t$helppage=$helppagename;\n\t\t$mode='local';\n\t}\n\telse\n\t{\n\t\t// If WIKI URL\n\t\tif (preg_match('/^es/i',$langs->defaultlang))\n\t\t{\n\t\t\t$helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/ES:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n\t\t}\n\t\tif (preg_match('/^fr/i',$langs->defaultlang))\n\t\t{\n\t\t\t$helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/FR:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n\t\t}\n\t\tif (empty($helppage))\t// If help page not already found\n\t\t{\n\t\t\t$helpbaseurl='http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/EN:([^|]+)/i',$helppagename,$reg)) $helppage=$reg[1];\n\t\t}\n\t\t$mode='wiki';\n\t}\n\treturn array('helpbaseurl'=>$helpbaseurl,'helppage'=>$helppage,'mode'=>$mode);\n}\n\n\n/**\n *  Show a search area.\n *  Used when the javascript quick search is not used.\n *\n *  @param  string\t$urlaction          Url post\n *  @param  string\t$urlobject          Url of the link under the search box\n *  @param  string\t$title              Title search area\n *  @param  string\t$htmlmorecss        Add more css\n *  @param  string\t$htmlinputname      Field Name input form\n *  @param\tstring\t$accesskey\t\t\tAccesskey\n *  @param  string  $prefhtmlinputname  Complement for id to avoid multiple same id in the page\n *  @param\tstring\t$img\t\t\t\tImage to use\n *  @param\tstring\t$showtitlebefore\tShow title before input text instead of into placeholder. This can be set when output is dedicated for text browsers.\n *  @return\tstring\n */\nfunction printSearchForm($urlaction, $urlobject, $title, $htmlmorecss, $htmlinputname, $accesskey='', $prefhtmlinputname='',$img='', $showtitlebefore=0)\n{\n\tglobal $conf,$langs,$user;\n\n\t$ret='';\n\t$ret.='<form action=\"'.$urlaction.'\" method=\"post\" class=\"searchform\">';\n\t$ret.='<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t$ret.='<input type=\"hidden\" name=\"mode\" value=\"search\">';\n\t$ret.='<input type=\"hidden\" name=\"savelogin\" value=\"'.dol_escape_htmltag($user->login).'\">';\n\tif ($showtitlebefore) $ret.=$title.' ';\n\t$ret.='<input type=\"text\" class=\"flat '.$htmlmorecss.'\"';\n\t$ret.=' style=\"text-indent: 22px; background-image: url(\\''.$img.'\\'); background-repeat: no-repeat; background-position: 3px;\"';\n\t$ret.=($accesskey?' accesskey=\"'.$accesskey.'\"':'');\n\t$ret.=' placeholder=\"'.strip_tags($title).'\"';\n\t$ret.=' name=\"'.$htmlinputname.'\" id=\"'.$prefhtmlinputname.$htmlinputname.'\" />';\n\t$ret.='<input type=\"submit\" class=\"button\" style=\"padding-top: 4px; padding-bottom: 4px; padding-left: 6px; padding-right: 6px\" value=\"'.$langs->trans(\"Go\").'\">';\n\t$ret.=\"</form>\\n\";\n\treturn $ret;\n}\n\n\nif (! function_exists(\"llxFooter\"))\n{\n\t/**\n\t * Show HTML footer\n\t * Close div /DIV class=fiche + /DIV id-right + /DIV id-container + /BODY + /HTML.\n\t * If global var $delayedhtmlcontent was filled, we output it just before closing the body.\n\t *\n\t * @param\tstring\t$comment    \t\t\t\tA text to add as HTML comment into HTML generated page\n\t * @param\tstring\t$zone\t\t\t\t\t\t'private' (for private pages) or 'public' (for public pages)\n\t * @param\tint\t\t$disabledoutputofmessages\tClear all messages stored into session without diplaying them\n\t * @return\tvoid\n\t */\n\tfunction llxFooter($comment='',$zone='private', $disabledoutputofmessages=0)\n\t{\n\t\tglobal $conf, $langs, $user, $object;\n\t\tglobal $delayedhtmlcontent;\n\n\t\t$ext='layout='.$conf->browser->layout.'&version='.urlencode(DOL_VERSION);\n\n\t\t// Global html output events ($mesgs, $errors, $warnings)\n\t\tdol_htmloutput_events($disabledoutputofmessages);\n\n\t\t// Code for search criteria persistence.\n\t\t// Save $user->lastsearch_values if defined (define on list pages when a form field search_xxx exists)\n\t\tif (is_object($user) && ! empty($user->lastsearch_values_tmp) && is_array($user->lastsearch_values_tmp))\n\t\t{\n\t\t\t// Clean data\n\t\t\tforeach($user->lastsearch_values_tmp as $key => $val)\n\t\t\t{\n\t\t\t\tunset($_SESSION['lastsearch_values_tmp_'.$key]);\t\t\t// Clean arry to rebuild it just after\n\t\t\t\tif (count($val) && empty($_POST['button_removefilter']))\t// If there is search criteria to save and we did not click on 'Clear filter' button\n\t\t\t\t{\n\t\t\t\t\tif (empty($val['sortfield'])) unset($val['sortfield']);\n\t\t\t\t\tif (empty($val['sortorder'])) unset($val['sortorder']);\n\t\t\t\t\tdol_syslog('Save lastsearch_values_tmp_'.$key.'='.json_encode($val, 0).\" (systematic recording of last search criteria)\");\n\t\t\t\t\t$_SESSION['lastsearch_values_tmp_'.$key]=json_encode($val);\n\t\t\t\t\tunset($_SESSION['lastsearch_values_'.$key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Core error message\n\t\tif (! empty($conf->global->MAIN_CORE_ERROR))\n\t\t{\n\t\t\t// Ajax version\n\t\t\tif ($conf->use_javascript_ajax)\n\t\t\t{\n\t\t\t\t$title = img_warning().' '.$langs->trans('CoreErrorTitle');\n\t\t\t\tprint ajax_dialog($title, $langs->trans('CoreErrorMessage'));\n\t\t\t}\n\t\t\t// html version\n\t\t\telse\n\t\t\t{\n\t\t\t\t$msg = img_warning().' '.$langs->trans('CoreErrorMessage');\n\t\t\t\tprint '<div class=\"error\">'.$msg.'</div>';\n\t\t\t}\n\n\t\t\t//define(\"MAIN_CORE_ERROR\",0);      // Constant was defined and we can't change value of a constant\n\t\t}\n\n\t\tprint \"\\n\\n\";\n\n\t\tprint '</div> <!-- End div class=\"fiche\" -->'.\"\\n\"; // End div fiche\n\n\t\tif (empty($conf->dol_hide_leftmenu)) print '</div> <!-- End div id-right -->'.\"\\n\"; // End div id-right\n\n\t\tif (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) print '</div> <!-- End div id-container -->'.\"\\n\";\t// End div container\n\n\t\tprint \"\\n\";\n\t\tif ($comment) print '<!-- '.$comment.' -->'.\"\\n\";\n\n\t\tprintCommonFooter($zone);\n\n\t\tif (! empty($delayedhtmlcontent)) print $delayedhtmlcontent;\n\n\t\tif (! empty($conf->use_javascript_ajax))\n\t\t{\n\t\t\tprint \"\\n\".'<!-- Includes JS Footer of Dolibarr -->'.\"\\n\";\n\t\t\tprint '<script type=\"text/javascript\" src=\"'.DOL_URL_ROOT.'/core/js/lib_foot.js.php?lang='.$langs->defaultlang.($ext?'&'.$ext:'').'\"></script>'.\"\\n\";\n\t\t}\n\n\t\t// Wrapper to add log when clicking on download or preview\n\t\tif (! empty($conf->blockedlog->enabled) && is_object($object) && $object->id > 0 && $object->statut > 0)\n\t\t{\n\t\t\tif (in_array($object->element, array('facture')))       // Restrict for the moment to element 'facture'\n\t\t\t{\n\t\t\t\tprint \"\\n<!-- JS CODE TO ENABLE log when making a download or a preview of a document -->\\n\";\n\t\t\t\t?>\n    \t\t\t<script type=\"text/javascript\">\n    \t\t\tjQuery(document).ready(function () {\n    \t\t\t\t$('a.documentpreview').click(function() {\n    \t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n    \t\t\t\t\t\t\t, {\n    \t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n    \t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n    \t\t\t\t\t\t\t\t, action:'DOC_PREVIEW'\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t);\n    \t\t\t\t});\n    \t\t\t\t$('a.documentdownload').click(function() {\n    \t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n    \t\t\t\t\t\t\t, {\n    \t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n    \t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n    \t\t\t\t\t\t\t\t, action:'DOC_DOWNLOAD'\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t);\n    \t\t\t\t});\n    \t\t\t});\n    \t\t\t</script>\n\t\t\t\t<?php\n\t\t\t}\n\t   \t}\n\n\t\t// A div for the address popup\n\t\tprint \"\\n<!-- A div to allow dialog popup -->\\n\";\n\t\tprint '<div id=\"dialogforpopup\" style=\"display: none;\"></div>'.\"\\n\";\n\n\t\tprint \"</body>\\n\";\n\t\tprint \"</html>\\n\";\n\t}\n}\n\n", "<?php\n/* Copyright (C) 2001-2007\tRodolphe Quiedeville\t<rodolphe@quiedeville.org>\n * Copyright (C) 2004-2016\tLaurent Destailleur\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2005\t\tEric Seigne\t\t\t\t<eric.seigne@ryxeo.com>\n * Copyright (C) 2005-2015\tRegis Houssin\t\t\t<regis.houssin@capnetworks.com>\n * Copyright (C) 2006\t\tAndre Cianfarani\t\t<acianfa@free.fr>\n * Copyright (C) 2006\t\tAuguria SARL\t\t\t<info@auguria.org>\n * Copyright (C) 2010-2015\tJuanjo Menent\t\t\t<jmenent@2byte.es>\n * Copyright (C) 2013-2016\tMarcos Garc\u00eda\t\t\t<marcosgdf@gmail.com>\n * Copyright (C) 2012-2013\tC\u00e9dric Salvador\t\t\t<csalvador@gpcsolutions.fr>\n * Copyright (C) 2011-2017\tAlexandre Spangaro\t\t<aspangaro@zendsi.com>\n * Copyright (C) 2014\t\tC\u00e9dric Gross\t\t\t<c.gross@kreiz-it.fr>\n * Copyright (C) 2014-2015\tFerran Marcet\t\t\t<fmarcet@2byte.es>\n * Copyright (C) 2015\t\tJean-Fran\u00e7ois Ferry\t\t<jfefe@aternatik.fr>\n * Copyright (C) 2015\t\tRapha\u00ebl Doursenaud\t\t<rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2016\t\tCharlie Benke\t\t\t<charlie@patas-monkey.com>\n * Copyright (C) 2016\t\tMeziane Sof\t\t\t\t<virtualsof@yahoo.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *  \\file       htdocs/product/card.php\n *  \\ingroup    product\n *  \\brief      Page to show product\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formfile.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/canvas.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/product/class/html.formproduct.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/extrafields.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/genericobject.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/product.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/categories/class/categorie.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/modules/product/modules_product.php';\n\nif (! empty($conf->propal->enabled))     require_once DOL_DOCUMENT_ROOT.'/comm/propal/class/propal.class.php';\nif (! empty($conf->facture->enabled))    require_once DOL_DOCUMENT_ROOT.'/compta/facture/class/facture.class.php';\nif (! empty($conf->commande->enabled))   require_once DOL_DOCUMENT_ROOT.'/commande/class/commande.class.php';\nif (! empty($conf->accounting->enabled)) require_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\nif (! empty($conf->accounting->enabled)) require_once DOL_DOCUMENT_ROOT.'/core/class/html.formaccounting.class.php';\nif (! empty($conf->accounting->enabled)) require_once DOL_DOCUMENT_ROOT.'/accountancy/class/accountingaccount.class.php';\n\n$langs->load(\"products\");\n$langs->load(\"other\");\nif (! empty($conf->stock->enabled)) $langs->load(\"stocks\");\nif (! empty($conf->facture->enabled)) $langs->load(\"bills\");\nif (! empty($conf->productbatch->enabled)) $langs->load(\"productbatch\");\n\n$mesg=''; $error=0; $errors=array();\n\n$refalreadyexists=0;\n\n$id=GETPOST('id', 'int');\n$ref=GETPOST('ref', 'alpha');\n$type=GETPOST('type','int');\n$action=(GETPOST('action','alpha') ? GETPOST('action','alpha') : 'view');\n$cancel=GETPOST('cancel','alpha');\n$confirm=GETPOST('confirm','alpha');\n$socid=GETPOST('socid','int');\n$duration_value = GETPOST('duration_value');\n$duration_unit = GETPOST('duration_unit');\nif (! empty($user->societe_id)) $socid=$user->societe_id;\n\n$object = new Product($db);\n$object->type = $type;\t// so test later to fill $usercancxxx is correct\n$extrafields = new ExtraFields($db);\n\n// fetch optionals attributes and labels\n$extralabels=$extrafields->fetch_name_optionals_label($object->table_element);\n\nif ($id > 0 || ! empty($ref))\n{\n    $result = $object->fetch($id, $ref);\n\n    if (! empty($conf->product->enabled)) $upload_dir = $conf->product->multidir_output[$object->entity].'/'.get_exdir(0, 0, 0, 0, $object, 'product').dol_sanitizeFileName($object->ref);\n    elseif (! empty($conf->service->enabled)) $upload_dir = $conf->service->multidir_output[$object->entity].'/'.get_exdir(0, 0, 0, 0, $object, 'product').dol_sanitizeFileName($object->ref);\n\n    if (! empty($conf->global->PRODUCT_USE_OLD_PATH_FOR_PHOTO))    // For backward compatiblity, we scan also old dirs\n    {\n        if (! empty($conf->product->enabled)) $upload_dirold = $conf->product->multidir_output[$object->entity].'/'.substr(substr(\"000\".$object->id, -2),1,1).'/'.substr(substr(\"000\".$object->id, -2),0,1).'/'.$object->id.\"/photos\";\n        else $upload_dirold = $conf->service->multidir_output[$object->entity].'/'.substr(substr(\"000\".$object->id, -2),1,1).'/'.substr(substr(\"000\".$object->id, -2),0,1).'/'.$object->id.\"/photos\";\n    }\n}\n\n$modulepart='product';\n\n// Get object canvas (By default, this is not defined, so standard usage of dolibarr)\n$canvas = !empty($object->canvas)?$object->canvas:GETPOST(\"canvas\");\n$objcanvas=null;\nif (! empty($canvas))\n{\n    require_once DOL_DOCUMENT_ROOT.'/core/class/canvas.class.php';\n    $objcanvas = new Canvas($db,$action);\n    $objcanvas->getCanvas('product','card',$canvas);\n}\n\n// Security check\n$fieldvalue = (! empty($id) ? $id : (! empty($ref) ? $ref : ''));\n$fieldtype = (! empty($id) ? 'rowid' : 'ref');\n$result=restrictedArea($user,'produit|service',$fieldvalue,'product&product','','',$fieldtype,$objcanvas);\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('productcard','globalcard'));\n\n\n\n/*\n * Actions\n */\n\nif ($cancel) $action = '';\n\n$usercanread = (($object->type == Product::TYPE_PRODUCT && $user->rights->produit->lire) || ($object->type == Product::TYPE_SERVICE && $user->rights->service->lire));\n$usercancreate = (($object->type == Product::TYPE_PRODUCT && $user->rights->produit->creer) || ($object->type == Product::TYPE_SERVICE && $user->rights->service->creer));\n$usercandelete = (($object->type == Product::TYPE_PRODUCT && $user->rights->produit->supprimer) || ($object->type == Product::TYPE_SERVICE && $user->rights->service->supprimer));\n$createbarcode=empty($conf->barcode->enabled)?0:1;\nif (! empty($conf->global->MAIN_USE_ADVANCED_PERMS) && empty($user->rights->barcode->creer_advance)) $createbarcode=0;\n\n$parameters=array('id'=>$id, 'ref'=>$ref, 'objcanvas'=>$objcanvas);\n$reshook=$hookmanager->executeHooks('doActions',$parameters,$object,$action);    // Note that $action and $object may have been modified by some hooks\nif ($reshook < 0) setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\nif (empty($reshook))\n{\n    // Type\n\tif ($action == 'setfk_product_type' && $usercancreate)\n    {\n    \t$result = $object->setValueFrom('fk_product_type', GETPOST('fk_product_type'), '', null, 'text', '', $user, 'PRODUCT_MODIFY');\n    \theader(\"Location: \".$_SERVER['PHP_SELF'].\"?id=\".$object->id);\n    \texit;\n    }\n\n    // Actions to build doc\n    $upload_dir = $conf->produit->dir_output;\n    $permissioncreate = $usercancreate;\n    include DOL_DOCUMENT_ROOT.'/core/actions_builddoc.inc.php';\n\n    include DOL_DOCUMENT_ROOT.'/core/actions_printing.inc.php';\n\n    // Barcode type\n    if ($action ==\t'setfk_barcode_type' && $createbarcode)\n    {\n        $result = $object->setValueFrom('fk_barcode_type', GETPOST('fk_barcode_type'), '', null, 'text', '', $user, 'PRODUCT_MODIFY');\n    \theader(\"Location: \".$_SERVER['PHP_SELF'].\"?id=\".$object->id);\n    \texit;\n    }\n\n    // Barcode value\n    if ($action ==\t'setbarcode' && $createbarcode)\n    {\n    \t$result=$object->check_barcode(GETPOST('barcode'),GETPOST('barcode_type_code'));\n\n\t\tif ($result >= 0)\n\t\t{\n\t    \t$result = $object->setValueFrom('barcode', GETPOST('barcode'));\n\t    \theader(\"Location: \".$_SERVER['PHP_SELF'].\"?id=\".$object->id);\n\t    \texit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$langs->load(\"errors\");\n        \tif ($result == -1) $errors[] = 'ErrorBadBarCodeSyntax';\n        \telse if ($result == -2) $errors[] = 'ErrorBarCodeRequired';\n        \telse if ($result == -3) $errors[] = 'ErrorBarCodeAlreadyUsed';\n        \telse $errors[] = 'FailedToValidateBarCode';\n\n\t\t\t$error++;\n\t\t\tsetEventMessages($errors, null, 'errors');\n\t\t}\n    }\n\n    // Add a product or service\n    if ($action == 'add' && $usercancreate)\n    {\n        $error=0;\n\n        if (! GETPOST('label'))\n        {\n            setEventMessages($langs->trans('ErrorFieldRequired',$langs->transnoentities('Label')), null, 'errors');\n            $action = \"create\";\n            $error++;\n        }\n        if (empty($ref))\n        {\n            setEventMessages($langs->trans('ErrorFieldRequired',$langs->transnoentities('Ref')), null, 'errors');\n            $action = \"create\";\n            $error++;\n        }\n        if (! empty($duration_value) && empty($duration_unit))\n        {\n            setEventMessages($langs->trans('ErrorFieldRequired',$langs->transnoentities('Unit')), null, 'errors');\n            $action = \"create\";\n            $error++;\n        }\n\n        if (! $error)\n        {\n\t        $units = GETPOST('units', 'int');\n\n            $object->ref                   = $ref;\n            $object->label                 = GETPOST('label');\n            $object->price_base_type       = GETPOST('price_base_type');\n\n            if ($object->price_base_type == 'TTC')\n            \t$object->price_ttc = GETPOST('price');\n            else\n            \t$object->price = GETPOST('price');\n            if ($object->price_base_type == 'TTC')\n            \t$object->price_min_ttc = GETPOST('price_min');\n            else\n            \t$object->price_min = GETPOST('price_min');\n\n\t        $tva_tx_txt = GETPOST('tva_tx', 'alpha');           // tva_tx can be '8.5'  or  '8.5*'  or  '8.5 (XXX)' or '8.5* (XXX)'\n\n\t        // We must define tva_tx, npr and local taxes\n\t        $vatratecode = '';\n\t        $tva_tx = preg_replace('/[^0-9\\.].*$/', '', $tva_tx_txt);     // keep remove all after the numbers and dot\n\t        $npr = preg_match('/\\*/', $tva_tx_txt) ? 1 : 0;\n\t        $localtax1 = 0; $localtax2 = 0; $localtax1_type = '0'; $localtax2_type = '0';\n\t        // If value contains the unique code of vat line (new recommanded method), we use it to find npr and local taxes\n\t        if (preg_match('/\\((.*)\\)/', $tva_tx_txt, $reg))\n\t        {\n\t            // We look into database using code (we can't use get_localtax() because it depends on buyer that is not known). Same in update price.\n\t            $vatratecode=$reg[1];\n\t            // Get record from code\n\t            $sql = \"SELECT t.rowid, t.code, t.recuperableonly, t.localtax1, t.localtax2, t.localtax1_type, t.localtax2_type\";\n\t            $sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t            $sql.= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$mysoc->country_code.\"'\";\n\t            $sql.= \" AND t.taux = \".((float) $tva_tx).\" AND t.active = 1\";\n\t            $sql.= \" AND t.code ='\".$vatratecode.\"'\";\n\t            $resql=$db->query($sql);\n\t            if ($resql)\n\t            {\n\t                $obj = $db->fetch_object($resql);\n\t                $npr = $obj->recuperableonly;\n\t                $localtax1 = $obj->localtax1;\n\t                $localtax2 = $obj->localtax2;\n\t                $localtax1_type = $obj->localtax1_type;\n\t                $localtax2_type = $obj->localtax2_type;\n\t            }\n\t        }\n\n\t        $object->default_vat_code = $vatratecode;\n\t        $object->tva_tx = $tva_tx;\n\t        $object->tva_npr = $npr;\n\t        $object->localtax1_tx = $localtax1;\n\t        $object->localtax2_tx = $localtax2;\n\t        $object->localtax1_type = $localtax1_type;\n\t        $object->localtax2_type = $localtax2_type;\n\n            $object->type               \t = $type;\n            $object->status             \t = GETPOST('statut');\n            $object->status_buy            = GETPOST('statut_buy');\n\t\t\t$object->status_batch          \t= GETPOST('status_batch');\n\n            $object->barcode_type          = GETPOST('fk_barcode_type');\n            $object->barcode\t\t           = GETPOST('barcode');\n            // Set barcode_type_xxx from barcode_type id\n            $stdobject=new GenericObject($db);\n    \t    $stdobject->element='product';\n            $stdobject->barcode_type=GETPOST('fk_barcode_type');\n            $result=$stdobject->fetch_barcode();\n            if ($result < 0)\n            {\n            \t$error++;\n            \t$mesg='Failed to get bar code type information ';\n            \tsetEventMessages($mesg.$stdobject->error, $mesg.$stdobject->errors, 'errors');\n            }\n            $object->barcode_type_code      = $stdobject->barcode_type_code;\n            $object->barcode_type_coder     = $stdobject->barcode_type_coder;\n            $object->barcode_type_label     = $stdobject->barcode_type_label;\n\n            $object->description        \t = dol_htmlcleanlastbr(GETPOST('desc','none'));\n            $object->url\t\t\t\t\t = GETPOST('url');\n            $object->note_private          \t = dol_htmlcleanlastbr(GETPOST('note_private','none'));\n            $object->note               \t = $object->note_private;   // deprecated\n            $object->customcode              = GETPOST('customcode','alpha');\n            $object->country_id              = GETPOST('country_id','int');\n            $object->duration_value     \t = $duration_value;\n            $object->duration_unit      \t = $duration_unit;\n            $object->seuil_stock_alerte \t = GETPOST('seuil_stock_alerte')?GETPOST('seuil_stock_alerte'):0;\n            $object->desiredstock            = GETPOST('desiredstock')?GETPOST('desiredstock'):0;\n            $object->canvas             \t = GETPOST('canvas');\n            $object->weight             \t = GETPOST('weight');\n            $object->weight_units       \t = GETPOST('weight_units');\n            $object->length             \t = GETPOST('size');\n            $object->length_units       \t = GETPOST('size_units');\n            $object->width               \t = GETPOST('sizewidth');\n            $object->height             \t = GETPOST('sizeheight');\n\t        $object->surface            \t = GETPOST('surface');\n            $object->surface_units      \t = GETPOST('surface_units');\n            $object->volume             \t = GETPOST('volume');\n            $object->volume_units       \t = GETPOST('volume_units');\n            $object->finished           \t = GETPOST('finished','alpha');\n            $object->fk_unit                 = GETPOST('units','alpha');\n\n\t        $accountancy_code_sell \t\t\t = GETPOST('accountancy_code_sell','alpha');\n\t        $accountancy_code_sell_intra\t = GETPOST('accountancy_code_sell_intra','alpha');\n\t        $accountancy_code_sell_export\t = GETPOST('accountancy_code_sell_export','alpha');\n\t        $accountancy_code_buy \t\t\t = GETPOST('accountancy_code_buy','alpha');\n\n\t\t\tif ($accountancy_code_sell <= 0) { $object->accountancy_code_sell = ''; } else { $object->accountancy_code_sell = $accountancy_code_sell; }\n\t\t\tif ($accountancy_code_sell_intra <= 0) { $object->accountancy_code_sell_intra = ''; } else { $object->accountancy_code_sell_intra = $accountancy_code_sell_intra; }\n\t\t\tif ($accountancy_code_sell_export <= 0) { $object->accountancy_code_sell_export = ''; } else { $object->accountancy_code_sell_export = $accountancy_code_sell_export; }\n\t\t\tif ($accountancy_code_buy <= 0) { $object->accountancy_code_buy = ''; } else { $object->accountancy_code_buy = $accountancy_code_buy; }\n\n            // MultiPrix\n            if (! empty($conf->global->PRODUIT_MULTIPRICES))\n            {\n                for($i=2;$i<=$conf->global->PRODUIT_MULTIPRICES_LIMIT;$i++)\n                {\n                    if (isset($_POST[\"price_\".$i]))\n                    {\n                        $object->multiprices[\"$i\"] = price2num($_POST[\"price_\".$i],'MU');\n                        $object->multiprices_base_type[\"$i\"] = $_POST[\"multiprices_base_type_\".$i];\n                    }\n                    else\n                    {\n                        $object->multiprices[\"$i\"] = \"\";\n                    }\n                }\n            }\n\n            // Fill array 'array_options' with data from add form\n        \t$ret = $extrafields->setOptionalsFromPost($extralabels,$object);\n\t\t\tif ($ret < 0) $error++;\n\n\t\t\tif (! $error)\n\t\t\t{\n            \t$id = $object->create($user);\n\t\t\t}\n\n            if ($id > 0)\n            {\n\t\t\t\t// Category association\n\t\t\t\t$categories = GETPOST('categories', 'array');\n\t\t\t\t$object->setCategories($categories);\n\n                header(\"Location: \".$_SERVER['PHP_SELF'].\"?id=\".$id);\n                exit;\n            }\n            else\n\t\t\t{\n            \tif (count($object->errors)) setEventMessages($object->error, $object->errors, 'errors');\n\t\t\t\telse setEventMessages($langs->trans($object->error), null, 'errors');\n                $action = \"create\";\n            }\n        }\n    }\n\n    // Update a product or service\n    if ($action == 'update' && $usercancreate)\n    {\n    \tif (GETPOST('cancel','alpha'))\n        {\n            $action = '';\n        }\n        else\n        {\n            if ($object->id > 0)\n            {\n\t\t\t\t$object->oldcopy= clone $object;\n\n                $object->ref                    = $ref;\n                $object->label                  = GETPOST('label');\n                $object->description            = dol_htmlcleanlastbr(GETPOST('desc','none'));\n            \t$object->url\t\t\t\t\t= GETPOST('url');\n    \t\t\tif (! empty($conf->global->MAIN_DISABLE_NOTES_TAB))\n    \t\t\t{\n                \t$object->note_private           = dol_htmlcleanlastbr(GETPOST('note_private','none'));\n                    $object->note                   = $object->note_private;\n    \t\t\t}\n                $object->customcode             = GETPOST('customcode','alpha');\n                $object->country_id             = GETPOST('country_id','int');\n                $object->status                 = GETPOST('statut','int');\n                $object->status_buy             = GETPOST('statut_buy','int');\n                $object->status_batch\t        = GETPOST('status_batch','aZ09');\n                // removed from update view so GETPOST always empty\n                /*\n                $object->seuil_stock_alerte     = GETPOST('seuil_stock_alerte');\n                $object->desiredstock           = GETPOST('desiredstock');\n                */\n                $object->duration_value         = GETPOST('duration_value');\n                $object->duration_unit          = GETPOST('duration_unit');\n\n                $object->canvas                 = GETPOST('canvas');\n                $object->weight                 = GETPOST('weight');\n                $object->weight_units           = GETPOST('weight_units');\n                $object->length                 = GETPOST('size');\n                $object->length_units           = GETPOST('size_units');\n                $object->width               \t = GETPOST('sizewidth');\n                $object->height             \t = GETPOST('sizeheight');\n\n                $object->surface                = GETPOST('surface');\n                $object->surface_units          = GETPOST('surface_units');\n                $object->volume                 = GETPOST('volume');\n                $object->volume_units           = GETPOST('volume_units');\n                $object->finished               = GETPOST('finished','alpha');\n\n\t            $units = GETPOST('units', 'int');\n\n\t            if ($units > 0) {\n\t\t            $object->fk_unit = $units;\n\t            } else {\n\t\t            $object->fk_unit = null;\n\t            }\n\n\t            $object->barcode_type           = GETPOST('fk_barcode_type');\n    \t        $object->barcode\t\t        = GETPOST('barcode');\n    \t        // Set barcode_type_xxx from barcode_type id\n    \t        $stdobject=new GenericObject($db);\n    \t        $stdobject->element='product';\n    \t        $stdobject->barcode_type=GETPOST('fk_barcode_type');\n    \t        $result=$stdobject->fetch_barcode();\n    \t        if ($result < 0)\n    \t        {\n    \t        \t$error++;\n    \t        \t$mesg='Failed to get bar code type information ';\n            \t\tsetEventMessages($mesg.$stdobject->error, $mesg.$stdobject->errors, 'errors');\n    \t        }\n    \t        $object->barcode_type_code      = $stdobject->barcode_type_code;\n    \t        $object->barcode_type_coder     = $stdobject->barcode_type_coder;\n    \t        $object->barcode_type_label     = $stdobject->barcode_type_label;\n\n    \t        $accountancy_code_sell \t\t\t = GETPOST('accountancy_code_sell','alpha');\n    \t        $accountancy_code_sell_intra\t = GETPOST('accountancy_code_sell_intra','alpha');\n    \t        $accountancy_code_sell_export\t = GETPOST('accountancy_code_sell_export','alpha');\n    \t        $accountancy_code_buy \t\t\t = GETPOST('accountancy_code_buy','alpha');\n\n\t\t\t\tif ($accountancy_code_sell <= 0) { $object->accountancy_code_sell = ''; } else { $object->accountancy_code_sell = $accountancy_code_sell; }\n\t\t\t\tif ($accountancy_code_sell_intra <= 0) { $object->accountancy_code_sell_intra = ''; } else { $object->accountancy_code_sell_intra = $accountancy_code_sell_intra; }\n\t\t\t\tif ($accountancy_code_sell_export <= 0) { $object->accountancy_code_sell_export = ''; } else { $object->accountancy_code_sell_export = $accountancy_code_sell_export; }\n\t\t\t\tif ($accountancy_code_buy <= 0) { $object->accountancy_code_buy = ''; } else { $object->accountancy_code_buy = $accountancy_code_buy; }\n\n                // Fill array 'array_options' with data from add form\n        \t\t$ret = $extrafields->setOptionalsFromPost($extralabels,$object);\n\t\t\t\tif ($ret < 0) $error++;\n\n                if (! $error && $object->check())\n                {\n                    if ($object->update($object->id, $user) > 0)\n                    {\n\t\t\t\t\t\t// Category association\n\t\t\t\t\t\t$categories = GETPOST('categories', 'array');\n\t\t\t\t\t\t$object->setCategories($categories);\n\n                        $action = 'view';\n                    }\n                    else\n\t\t\t\t\t{\n\t\t\t\t\t\tif (count($object->errors)) setEventMessages($object->error, $object->errors, 'errors');\n                    \telse setEventMessages($langs->trans($object->error), null, 'errors');\n                        $action = 'edit';\n                    }\n                }\n                else\n\t\t\t\t{\n\t\t\t\t\tif (count($object->errors)) setEventMessages($object->error, $object->errors, 'errors');\n                \telse setEventMessages($langs->trans(\"ErrorProductBadRefOrLabel\"), null, 'errors');\n                    $action = 'edit';\n                }\n            }\n\n        }\n    }\n\n    // Action clone object\n    if ($action == 'confirm_clone' && $confirm != 'yes') { $action=''; }\n    if ($action == 'confirm_clone' && $confirm == 'yes' && $usercancreate)\n    {\n        if (! GETPOST('clone_content') && ! GETPOST('clone_prices') )\n        {\n        \tsetEventMessages($langs->trans(\"NoCloneOptionsSpecified\"), null, 'errors');\n        }\n        else\n        {\n            $db->begin();\n\n            $originalId = $id;\n            if ($object->id > 0)\n            {\n                $object->ref = GETPOST('clone_ref');\n                $object->status = 0;\n                $object->status_buy = 0;\n                $object->id = null;\n                $object->barcode = -1;\n\n                if ($object->check())\n                {\n                    $id = $object->create($user);\n                    if ($id > 0)\n                    {\n                        if (GETPOST('clone_composition'))\n                        {\n                            $result = $object->clone_associations($originalId, $id);\n\n                            if ($result < 1)\n                            {\n                                $db->rollback();\n                                setEventMessages($langs->trans('ErrorProductClone'), null, 'errors');\n                                header(\"Location: \".$_SERVER[\"PHP_SELF\"].\"?id=\".$originalId);\n                                exit;\n                            }\n                        }\n\n                        // $object->clone_fournisseurs($originalId, $id);\n\n                        $db->commit();\n                        $db->close();\n\n                        header(\"Location: \".$_SERVER[\"PHP_SELF\"].\"?id=\".$id);\n                        exit;\n                    }\n                    else\n                    {\n                        $id=$originalId;\n\n                        if ($object->error == 'ErrorProductAlreadyExists')\n                        {\n                            $db->rollback();\n\n                            $refalreadyexists++;\n                            $action = \"\";\n\n                            $mesg=$langs->trans(\"ErrorProductAlreadyExists\",$object->ref);\n                            $mesg.=' <a href=\"'.$_SERVER[\"PHP_SELF\"].'?ref='.$object->ref.'\">'.$langs->trans(\"ShowCardHere\").'</a>.';\n                            setEventMessages($mesg, null, 'errors');\n                            $object->fetch($id);\n                        }\n                        else\n                     {\n                            $db->rollback();\n                            if (count($object->errors))\n                            {\n                            \tsetEventMessages($object->error, $object->errors, 'errors');\n                            \tdol_print_error($db,$object->errors);\n                            }\n                            else\n                            {\n                            \tsetEventMessages($langs->trans($object->error), null, 'errors');\n                            \tdol_print_error($db,$object->error);\n                            }\n                        }\n                    }\n                }\n            }\n            else\n            {\n                $db->rollback();\n                dol_print_error($db,$object->error);\n            }\n        }\n    }\n\n    // Delete a product\n    if ($action == 'confirm_delete' && $confirm != 'yes') { $action=''; }\n    if ($action == 'confirm_delete' && $confirm == 'yes' && $usercandelete)\n\t{\n\t\t$result = $object->delete($user);\n\n        if ($result > 0)\n        {\n            header('Location: '.DOL_URL_ROOT.'/product/list.php?type='.$object->type.'&delprod='.urlencode($object->ref));\n            exit;\n        }\n        else\n        {\n        \tsetEventMessages($langs->trans($object->error), null, 'errors');\n            $reload = 0;\n            $action='';\n        }\n    }\n\n\n    // Add product into object\n    if ($object->id > 0 && $action == 'addin')\n    {\n        $thirpdartyid =0 ;\n        if (GETPOST('propalid') > 0)\n        {\n        \t$propal = new Propal($db);\n\t        $result=$propal->fetch(GETPOST('propalid'));\n\t        if ($result <= 0)\n\t        {\n\t            dol_print_error($db,$propal->error);\n\t            exit;\n\t        }\n\t        $thirpdartyid = $propal->socid;\n        }\n        elseif (GETPOST('commandeid') > 0)\n        {\n            $commande = new Commande($db);\n\t        $result=$commande->fetch(GETPOST('commandeid'));\n\t        if ($result <= 0)\n\t        {\n\t            dol_print_error($db,$commande->error);\n\t            exit;\n\t        }\n\t        $thirpdartyid = $commande->socid;\n        }\n        elseif (GETPOST('factureid') > 0)\n        {\n    \t    $facture = new Facture($db);\n\t        $result=$facture->fetch(GETPOST('factureid'));\n\t        if ($result <= 0)\n\t        {\n\t            dol_print_error($db,$facture->error);\n\t            exit;\n\t        }\n\t        $thirpdartyid = $facture->socid;\n        }\n\n        if ( $thirpdartyid > 0)  {\n            $soc = new Societe($db);\n            $result = $soc->fetch($thirpdartyid);\n            if ($result <= 0) {\n                dol_print_error($db, $soc->error);\n                exit;\n            }\n\n            $desc = $object->description;\n\n            $tva_tx = get_default_tva($mysoc, $soc, $object->id);\n            $tva_npr = get_default_npr($mysoc, $soc, $object->id);\n            if (empty($tva_tx)) $tva_npr=0;\n            $localtax1_tx = get_localtax($tva_tx, 1, $soc, $mysoc, $tva_npr);\n            $localtax2_tx = get_localtax($tva_tx, 2, $soc, $mysoc, $tva_npr);\n\n            $pu_ht = $object->price;\n            $pu_ttc = $object->price_ttc;\n            $price_base_type = $object->price_base_type;\n\n            // If multiprice\n            if ($conf->global->PRODUIT_MULTIPRICES && $soc->price_level) {\n                $pu_ht = $object->multiprices[$soc->price_level];\n                $pu_ttc = $object->multiprices_ttc[$soc->price_level];\n                $price_base_type = $object->multiprices_base_type[$soc->price_level];\n            } elseif (!empty($conf->global->PRODUIT_CUSTOMER_PRICES)) {\n                require_once DOL_DOCUMENT_ROOT . '/product/class/productcustomerprice.class.php';\n\n                $prodcustprice = new Productcustomerprice($db);\n\n                $filter = array('t.fk_product' => $object->id, 't.fk_soc' => $soc->id);\n\n                $result = $prodcustprice->fetch_all('', '', 0, 0, $filter);\n                if ($result) {\n                    if (count($prodcustprice->lines) > 0) {\n                        $pu_ht = price($prodcustprice->lines [0]->price);\n                        $pu_ttc = price($prodcustprice->lines [0]->price_ttc);\n                        $price_base_type = $prodcustprice->lines [0]->price_base_type;\n                        $tva_tx = $prodcustprice->lines [0]->tva_tx;\n                    }\n                }\n            }\n\n\t\t\t$tmpvat = price2num(preg_replace('/\\s*\\(.*\\)/', '', $tva_tx));\n\t\t\t$tmpprodvat = price2num(preg_replace('/\\s*\\(.*\\)/', '', $prod->tva_tx));\n\n            // On reevalue prix selon taux tva car taux tva transaction peut etre different\n            // de ceux du produit par defaut (par exemple si pays different entre vendeur et acheteur).\n            if ($tmpvat != $tmpprodvat) {\n                if ($price_base_type != 'HT') {\n                    $pu_ht = price2num($pu_ttc / (1 + ($tmpvat / 100)), 'MU');\n                } else {\n                    $pu_ttc = price2num($pu_ht * (1 + ($tmpvat / 100)), 'MU');\n                }\n            }\n\n            if (GETPOST('propalid') > 0) {\n                // Define cost price for margin calculation\n                $buyprice=0;\n                if (($result = $propal->defineBuyPrice($pu_ht, GETPOST('remise_percent'), $object->id)) < 0)\n                {\n                    dol_syslog($langs->trans('FailedToGetCostPrice'));\n                    setEventMessage($langs->trans('FailedToGetCostPrice'), 'errors');\n                }\n                else\n                {\n                    $buyprice = $result;\n                }\n\n                $result = $propal->addline(\n                    $desc,\n                    $pu_ht,\n                    GETPOST('qty'),\n                    $tva_tx,\n                    $localtax1_tx, // localtax1\n                    $localtax2_tx, // localtax2\n                    $object->id,\n                    GETPOST('remise_percent'),\n                    $price_base_type,\n                    $pu_ttc,\n                    0,\n                    0,\n                    -1,\n                    0,\n                    0,\n                    0,\n                    $buyprice,\n                    '',\n                    '',\n                    '',\n                    0,\n                    $object->fk_unit\n                );\n                if ($result > 0) {\n                    header(\"Location: \" . DOL_URL_ROOT . \"/comm/propal/card.php?id=\" . $propal->id);\n                    return;\n                }\n\n                setEventMessages($langs->trans(\"ErrorUnknown\") . \": $result\", null, 'errors');\n            } elseif (GETPOST('commandeid') > 0) {\n                // Define cost price for margin calculation\n                $buyprice=0;\n                if (($result = $commande->defineBuyPrice($pu_ht, GETPOST('remise_percent'), $object->id)) < 0)\n                {\n                    dol_syslog($langs->trans('FailedToGetCostPrice'));\n                    setEventMessage($langs->trans('FailedToGetCostPrice'), 'errors');\n                }\n                else\n                {\n                    $buyprice = $result;\n                }\n\n                $result = $commande->addline(\n                    $desc,\n                    $pu_ht,\n                    GETPOST('qty'),\n                    $tva_tx,\n                    $localtax1_tx, // localtax1\n                    $localtax2_tx, // localtax2\n                    $object->id,\n                    GETPOST('remise_percent'),\n                    '',\n                    '',\n                    $price_base_type,\n                    $pu_ttc,\n                    '',\n                    '',\n                    0,\n                    -1,\n                    0,\n                    0,\n                    null,\n                    $buyprice,\n                    '',\n                    0,\n                    $object->fk_unit\n                );\n\n                if ($result > 0) {\n                    header(\"Location: \" . DOL_URL_ROOT . \"/commande/card.php?id=\" . $commande->id);\n                    exit;\n                }\n            } elseif (GETPOST('factureid') > 0) {\n                // Define cost price for margin calculation\n                $buyprice=0;\n                if (($result = $facture->defineBuyPrice($pu_ht, GETPOST('remise_percent'), $object->id)) < 0)\n                {\n                    dol_syslog($langs->trans('FailedToGetCostPrice'));\n                    setEventMessage($langs->trans('FailedToGetCostPrice'), 'errors');\n                }\n                else\n                {\n                    $buyprice = $result;\n                }\n\n                $result = $facture->addline(\n                    $desc,\n                    $pu_ht,\n                    GETPOST('qty'),\n                    $tva_tx,\n                    $localtax1_tx,\n                    $localtax2_tx,\n                    $object->id,\n                    GETPOST('remise_percent'),\n                    '',\n                    '',\n                    '',\n                    '',\n                    '',\n                    $price_base_type,\n                    $pu_ttc,\n                    Facture::TYPE_STANDARD,\n                    -1,\n                    0,\n                    '',\n                    0,\n                    0,\n                    null,\n                    $buyprice,\n                    '',\n                    0,\n                    100,\n                    '',\n                    $object->fk_unit\n                );\n\n                if ($result > 0) {\n                    header(\"Location: \" . DOL_URL_ROOT . \"/compta/facture/card.php?facid=\" . $facture->id);\n                    exit;\n                }\n            }\n        }\n        else {\n            $action=\"\";\n            setEventMessages($langs->trans(\"WarningSelectOneDocument\"), null, 'warnings');\n        }\n    }\n}\n\n\n\n/*\n * View\n */\n\n$title = $langs->trans('ProductServiceCard');\n$helpurl = '';\n$shortlabel = dol_trunc($object->label,16);\nif (GETPOST(\"type\") == '0' || ($object->type == Product::TYPE_PRODUCT))\n{\n\t$title = $langs->trans('Product').\" \". $shortlabel .\" - \".$langs->trans('Card');\n\t$helpurl='EN:Module_Products|FR:Module_Produits|ES:M&oacute;dulo_Productos';\n}\nif (GETPOST(\"type\") == '1' || ($object->type == Product::TYPE_SERVICE))\n{\n\t$title = $langs->trans('Service').\" \". $shortlabel .\" - \".$langs->trans('Card');\n\t$helpurl='EN:Module_Services_En|FR:Module_Services|ES:M&oacute;dulo_Servicios';\n}\n\nllxHeader('', $title, $helpurl);\n\n$form = new Form($db);\n$formfile = new FormFile($db);\n$formproduct = new FormProduct($db);\nif (! empty($conf->accounting->enabled)) $formaccounting = new FormAccounting($db);\n\n// Load object modBarCodeProduct\n$res=0;\nif (! empty($conf->barcode->enabled) && ! empty($conf->global->BARCODE_PRODUCT_ADDON_NUM))\n{\n\t$module=strtolower($conf->global->BARCODE_PRODUCT_ADDON_NUM);\n\t$dirbarcode=array_merge(array('/core/modules/barcode/'),$conf->modules_parts['barcode']);\n\tforeach ($dirbarcode as $dirroot)\n\t{\n\t\t$res=dol_include_once($dirroot.$module.'.php');\n\t\tif ($res) break;\n\t}\n\tif ($res > 0)\n\t{\n\t\t\t$modBarCodeProduct =new $module();\n\t}\n}\n\n\nif (is_object($objcanvas) && $objcanvas->displayCanvasExists($action))\n{\n\t// -----------------------------------------\n\t// When used with CANVAS\n\t// -----------------------------------------\n\tif (empty($object->error) && $id)\n\t{\n\t\t$object = new Product($db);\n\t\t$result=$object->fetch($id);\n\t\tif ($result <= 0) dol_print_error('',$object->error);\n\t}\n\t$objcanvas->assign_values($action, $object->id, $object->ref);\t// Set value for templates\n\t$objcanvas->display_canvas($action);\t\t\t\t\t\t\t// Show template\n}\nelse\n{\n    // -----------------------------------------\n    // When used in standard mode\n    // -----------------------------------------\n\tif ($action == 'create' && $usercancreate)\n    {\n        //WYSIWYG Editor\n        require_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\n\t\t// Load object modCodeProduct\n        $module=(! empty($conf->global->PRODUCT_CODEPRODUCT_ADDON)?$conf->global->PRODUCT_CODEPRODUCT_ADDON:'mod_codeproduct_leopard');\n        if (substr($module, 0, 16) == 'mod_codeproduct_' && substr($module, -3) == 'php')\n        {\n            $module = substr($module, 0, dol_strlen($module)-4);\n        }\n        $result=dol_include_once('/core/modules/product/'.$module.'.php');\n        if ($result > 0)\n        {\n        \t$modCodeProduct = new $module();\n        }\n\n        dol_set_focus('input[name=\"ref\"]');\n\n        print '<form action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"POST\">';\n        print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n        print '<input type=\"hidden\" name=\"action\" value=\"add\">';\n        print '<input type=\"hidden\" name=\"type\" value=\"'.$type.'\">'.\"\\n\";\n\t\tif (! empty($modCodeProduct->code_auto))\n\t\t\tprint '<input type=\"hidden\" name=\"code_auto\" value=\"1\">';\n\t\tif (! empty($modBarCodeProduct->code_auto))\n\t\t\tprint '<input type=\"hidden\" name=\"barcode_auto\" value=\"1\">';\n\n        if ($type==1) $title=$langs->trans(\"NewService\");\n        else $title=$langs->trans(\"NewProduct\");\n        $linkback=\"\";\n        print load_fiche_titre($title,$linkback,'title_products.png');\n\n        dol_fiche_head('');\n\n        print '<table class=\"border centpercent\">';\n\n        print '<tr>';\n        $tmpcode='';\n\t\tif (! empty($modCodeProduct->code_auto)) $tmpcode=$modCodeProduct->getNextValue($object,$type);\n        print '<td class=\"titlefieldcreate fieldrequired\">'.$langs->trans(\"Ref\").'</td><td colspan=\"3\"><input id=\"ref\" name=\"ref\" class=\"maxwidth200\" maxlength=\"128\" value=\"'.dol_escape_htmltag(GETPOST('ref')?GETPOST('ref'):$tmpcode).'\">';\n        if ($refalreadyexists)\n        {\n            print $langs->trans(\"RefAlreadyExists\");\n        }\n        print '</td></tr>';\n\n        // Label\n        print '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Label\").'</td><td colspan=\"3\"><input name=\"label\" class=\"minwidth300 maxwidth400onsmartphone\" maxlength=\"255\" value=\"'.dol_escape_htmltag(GETPOST('label')).'\"></td></tr>';\n\n        // On sell\n        print '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Status\").' ('.$langs->trans(\"Sell\").')</td><td colspan=\"3\">';\n        $statutarray=array('1' => $langs->trans(\"OnSell\"), '0' => $langs->trans(\"NotOnSell\"));\n        print $form->selectarray('statut',$statutarray,GETPOST('statut'));\n        print '</td></tr>';\n\n        // To buy\n        print '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Status\").' ('.$langs->trans(\"Buy\").')</td><td colspan=\"3\">';\n        $statutarray=array('1' => $langs->trans(\"ProductStatusOnBuy\"), '0' => $langs->trans(\"ProductStatusNotOnBuy\"));\n        print $form->selectarray('statut_buy',$statutarray,GETPOST('statut_buy'));\n        print '</td></tr>';\n\n\t    // Batch number management\n\t\tif (! empty($conf->productbatch->enabled))\n\t\t{\n\t\t\tprint '<tr><td>'.$langs->trans(\"ManageLotSerial\").'</td><td colspan=\"3\">';\n\t\t\t$statutarray=array('0' => $langs->trans(\"ProductStatusNotOnBatch\"), '1' => $langs->trans(\"ProductStatusOnBatch\"));\n\t\t\tprint $form->selectarray('status_batch',$statutarray,GETPOST('status_batch'));\n\t\t\tprint '</td></tr>';\n\t\t}\n\n        $showbarcode=empty($conf->barcode->enabled)?0:1;\n        if (! empty($conf->global->MAIN_USE_ADVANCED_PERMS) && empty($user->rights->barcode->lire_advance)) $showbarcode=0;\n\n        if ($showbarcode)\n        {\n \t        print '<tr><td>'.$langs->trans('BarcodeType').'</td><td>';\n \t        if (isset($_POST['fk_barcode_type']))\n\t        {\n\t         \t$fk_barcode_type=GETPOST('fk_barcode_type');\n\t        }\n\t        else\n\t        {\n\t        \tif (empty($fk_barcode_type) && ! empty($conf->global->PRODUIT_DEFAULT_BARCODE_TYPE)) $fk_barcode_type = $conf->global->PRODUIT_DEFAULT_BARCODE_TYPE;\n\t        }\n\t        require_once DOL_DOCUMENT_ROOT.'/core/class/html.formbarcode.class.php';\n            $formbarcode = new FormBarCode($db);\n\t        print $formbarcode->select_barcode_type($fk_barcode_type, 'fk_barcode_type', 1);\n\t        print '</td><td>'.$langs->trans(\"BarcodeValue\").'</td><td>';\n\t        $tmpcode=isset($_POST['barcode'])?GETPOST('barcode'):$object->barcode;\n\t        if (empty($tmpcode) && ! empty($modBarCodeProduct->code_auto)) $tmpcode=$modBarCodeProduct->getNextValue($object,$type);\n\t        print '<input class=\"maxwidth100\" type=\"text\" name=\"barcode\" value=\"'.dol_escape_htmltag($tmpcode).'\">';\n\t        print '</td></tr>';\n        }\n\n        // Description (used in invoice, propal...)\n        print '<tr><td class=\"tdtop\">'.$langs->trans(\"Description\").'</td><td colspan=\"3\">';\n\n        $doleditor = new DolEditor('desc', GETPOST('desc','none'), '', 160, 'dolibarr_details', '', false, true, $conf->global->FCKEDITOR_ENABLE_PRODUCTDESC, ROWS_4, '90%');\n        $doleditor->Create();\n\n        print \"</td></tr>\";\n\n        // Public URL\n        print '<tr><td>'.$langs->trans(\"PublicUrl\").'</td><td colspan=\"3\">';\n\t\tprint '<input type=\"text\" name=\"url\" class=\"quatrevingtpercent\" value=\"'.GETPOST('url').'\">';\n        print '</td></tr>';\n\n        // Stock min level\n        if ($type != 1 && ! empty($conf->stock->enabled))\n        {\n            print '<tr><td>'.$form->textwithpicto($langs->trans(\"StockLimit\"), $langs->trans(\"StockLimitDesc\"), 1).'</td><td>';\n            print '<input name=\"seuil_stock_alerte\" class=\"maxwidth50\" value=\"'.GETPOST('seuil_stock_alerte').'\">';\n            print '</td>';\n            // Stock desired level\n            print '<td>'.$form->textwithpicto($langs->trans(\"DesiredStock\"), $langs->trans(\"DesiredStockDesc\"), 1).'</td><td>';\n            print '<input name=\"desiredstock\" class=\"maxwidth50\" value=\"'.GETPOST('desiredstock').'\">';\n            print '</td></tr>';\n        }\n        else\n        {\n            print '<input name=\"seuil_stock_alerte\" type=\"hidden\" value=\"0\">';\n            print '<input name=\"desiredstock\" type=\"hidden\" value=\"0\">';\n        }\n\n        // Nature\n        if ($type != 1)\n        {\n            print '<tr><td>'.$langs->trans(\"Nature\").'</td><td colspan=\"3\">';\n            $statutarray=array('1' => $langs->trans(\"Finished\"), '0' => $langs->trans(\"RowMaterial\"));\n            print $form->selectarray('finished',$statutarray,GETPOST('finished'),1);\n            print '</td></tr>';\n        }\n\n        // Duration\n        if ($type == 1)\n        {\n            print '<tr><td>' . $langs->trans(\"Duration\") . '</td><td colspan=\"3\"><input name=\"duration_value\" size=\"6\" maxlength=\"5\" value=\"' . $duration_value . '\"> &nbsp;';\n            print '<input name=\"duration_unit\" type=\"radio\" value=\"h\">'.$langs->trans(\"Hour\").'&nbsp;';\n            print '<input name=\"duration_unit\" type=\"radio\" value=\"d\">'.$langs->trans(\"Day\").'&nbsp;';\n            print '<input name=\"duration_unit\" type=\"radio\" value=\"w\">'.$langs->trans(\"Week\").'&nbsp;';\n            print '<input name=\"duration_unit\" type=\"radio\" value=\"m\">'.$langs->trans(\"Month\").'&nbsp;';\n            print '<input name=\"duration_unit\" type=\"radio\" value=\"y\">'.$langs->trans(\"Year\").'&nbsp;';\n            print '</td></tr>';\n        }\n\n        if ($type != 1)\t// Le poids et le volume ne concerne que les produits et pas les services\n        {\n            // Weight\n            print '<tr><td>'.$langs->trans(\"Weight\").'</td><td colspan=\"3\">';\n            print '<input name=\"weight\" size=\"4\" value=\"'.GETPOST('weight').'\">';\n            print $formproduct->select_measuring_units(\"weight_units\",\"weight\");\n            print '</td></tr>';\n            // Length\n            if (empty($conf->global->PRODUCT_DISABLE_SIZE))\n            {\n                print '<tr><td>'.$langs->trans(\"Length\").' x '.$langs->trans(\"Width\").' x '.$langs->trans(\"Height\").'</td><td colspan=\"3\">';\n                print '<input name=\"size\" size=\"4\" value=\"'.GETPOST('size').'\"> x ';\n                print '<input name=\"sizewidth\" size=\"4\" value=\"'.GETPOST('sizewidth').'\"> x ';\n                print '<input name=\"sizeheight\" size=\"4\" value=\"'.GETPOST('sizeheight').'\">';\n                print $formproduct->select_measuring_units(\"size_units\",\"size\");\n                print '</td></tr>';\n            }\n            if (empty($conf->global->PRODUCT_DISABLE_SURFACE))\n            {\n                // Surface\n                print '<tr><td>'.$langs->trans(\"Surface\").'</td><td colspan=\"3\">';\n                print '<input name=\"surface\" size=\"4\" value=\"'.GETPOST('surface').'\">';\n                print $formproduct->select_measuring_units(\"surface_units\",\"surface\");\n                print '</td></tr>';\n            }\n            // Volume\n            print '<tr><td>'.$langs->trans(\"Volume\").'</td><td colspan=\"3\">';\n            print '<input name=\"volume\" size=\"4\" value=\"'.GETPOST('volume').'\">';\n            print $formproduct->select_measuring_units(\"volume_units\",\"volume\");\n            print '</td></tr>';\n        }\n\n        // Units\n\t    if($conf->global->PRODUCT_USE_UNITS)\n\t    {\n\t\t    print '<tr><td>'.$langs->trans('DefaultUnitToShow').'</td>';\n\t\t    print '<td colspan=\"3\">';\n\t\t    print $form->selectUnits('','units');\n\t\t    print '</td></tr>';\n\t    }\n\n        // Custom code\n        if (empty($conf->global->PRODUCT_DISABLE_CUSTOM_INFO) && empty($type))\n        {\n\t        print '<tr><td>'.$langs->trans(\"CustomCode\").'</td><td><input name=\"customcode\" class=\"maxwidth100onsmartphone\" value=\"'.GETPOST('customcode').'\"></td>';\n\t        // Origin country\n\t        print '<td>'.$langs->trans(\"CountryOrigin\").'</td><td>';\n\t        print $form->select_country(GETPOST('country_id','int'),'country_id');\n\t        if ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t        print '</td></tr>';\n        }\n\n        // Other attributes\n        $parameters=array('cols' => 3);\n        $reshook=$hookmanager->executeHooks('formObjectOptions',$parameters,$object,$action);    // Note that $action and $object may have been modified by hook\n        print $hookmanager->resPrint;\n        if (empty($reshook) && ! empty($extrafields->attribute_label))\n        {\n        \tprint $object->showOptionals($extrafields,'edit',$parameters);\n        }\n\n        // Note (private, no output on invoices, propales...)\n        //if (! empty($conf->global->MAIN_DISABLE_NOTES_TAB))       available in create mode\n        //{\n            print '<tr><td class=\"tdtop\">'.$langs->trans(\"NoteNotVisibleOnBill\").'</td><td colspan=\"3\">';\n\n            // We use dolibarr_details as type of DolEditor here, because we must not accept images as description is included into PDF and not accepted by TCPDF.\n            $doleditor = new DolEditor('note_private', GETPOST('note_private','none'), '', 140, 'dolibarr_details', '', false, true, $conf->global->FCKEDITOR_ENABLE_PRODUCTDESC, ROWS_8, '90%');\n    \t    $doleditor->Create();\n\n            print \"</td></tr>\";\n        //}\n\n\t\tif ($conf->categorie->enabled) {\n\t\t\t// Categories\n\t\t\tprint '<tr><td>'.$langs->trans(\"Categories\").'</td><td colspan=\"3\">';\n\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_PRODUCT, '', 'parent', 64, 0, 1);\n\t\t\tprint $form->multiselectarray('categories', $cate_arbo, GETPOST('categories', 'array'), '', 0, '', 0, '100%');\n\t\t\tprint \"</td></tr>\";\n\t\t}\n\n        print '</table>';\n\n        print '<br>';\n\n        if (! empty($conf->global->PRODUIT_MULTIPRICES))\n        {\n            // We do no show price array on create when multiprices enabled.\n            // We must set them on prices tab.\n            print '<table class=\"border\" width=\"100%\">';\n            // VAT\n            print '<tr><td class=\"titlefieldcreate\">' . $langs->trans(\"VATRate\") . '</td><td>';\n            $defaultva = get_default_tva($mysoc, $mysoc);\n            print $form->load_tva(\"tva_tx\", $defaultva, $mysoc, $mysoc, 0, 0, '', false, 1);\n            print '</td></tr>';\n            print '</table>';\n            print '<br>';\n        }\n        else\n\t\t{\n            print '<table class=\"border\" width=\"100%\">';\n\n            // Price\n            print '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"SellingPrice\").'</td>';\n            print '<td><input name=\"price\" class=\"maxwidth50\" value=\"'.$object->price.'\">';\n            print $form->selectPriceBaseType($object->price_base_type, \"price_base_type\");\n            print '</td></tr>';\n\n            // Min price\n            print '<tr><td>'.$langs->trans(\"MinPrice\").'</td>';\n            print '<td><input name=\"price_min\" class=\"maxwidth50\" value=\"'.$object->price_min.'\">';\n            print '</td></tr>';\n\n            // VAT\n            print '<tr><td>'.$langs->trans(\"VATRate\").'</td><td>';\n            $defaultva=get_default_tva($mysoc, $mysoc);\n            print $form->load_tva(\"tva_tx\", $defaultva, $mysoc, $mysoc, 0, 0, '', false, 1);\n            print '</td></tr>';\n\n            print '</table>';\n\n            print '<br>';\n        }\n\n        // Accountancy codes\n        print '<table class=\"border\" width=\"100%\">';\n\n\t\tif (! empty($conf->accounting->enabled))\n\t\t{\n\t\t\t// Accountancy_code_sell\n\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint $formaccounting->select_account(GETPOST('accountancy_code_sell'), 'accountancy_code_sell', 1, null, 1, 1, '');\n\t\t\tprint '</td></tr>';\n\n\t\t\tif ($conf->global->MAIN_FEATURES_LEVEL)\n\t\t\t{\n\t\t\t\t// Accountancy_code_sell_intra\n\t\t\t\tif ($mysoc->isInEEC())\n\t\t\t\t{\n\t\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellIntraCode\").'</td>';\n\t\t\t\t\tprint '<td>';\n\t\t\t\t\tprint $formaccounting->select_account(GETPOST('accountancy_code_sell_intra'), 'accountancy_code_sell_intra', 1, null, 1, 1, '');\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t}\n\n\t\t\t\t// Accountancy_code_sell_export\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellExportCode\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint $formaccounting->select_account(GETPOST('accountancy_code_sell_export'), 'accountancy_code_sell_export', 1, null, 1, 1, '');\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Accountancy_code_buy\n\t\t\tprint '<tr><td>'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\tprint '<td>';\n\t\t\tprint $formaccounting->select_account(GETPOST('accountancy_code_buy'), 'accountancy_code_buy', 1, null, 1, 1, '');\n\t\t\tprint '</td></tr>';\n\t\t}\n\t\telse // For external software\n\t\t{\n\t\t\t// Accountancy_code_sell\n\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\tprint '<td class=\"maxwidthonsmartphone\"><input class=\"minwidth100\" name=\"accountancy_code_sell\" value=\"'.$object->accountancy_code_sell.'\">';\n\t\t\tprint '</td></tr>';\n\n\t\t\tif ($conf->global->MAIN_FEATURES_LEVEL)\n\t\t\t{\n\t\t\t\t// Accountancy_code_sell_intra\n\t\t\t\tif ($mysoc->isInEEC())\n\t\t\t\t{\n\t\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellIntraCode\").'</td>';\n\t\t\t\t\tprint '<td class=\"maxwidthonsmartphone\"><input class=\"minwidth100\" name=\"accountancy_code_sell_intra\" value=\"'.$object->accountancy_code_sell_intra.'\">';\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t}\n\n\t\t\t\t// Accountancy_code_sell_export\n\t\t\t\tprint '<tr><td class=\"titlefieldcreate\">'.$langs->trans(\"ProductAccountancySellExportCode\").'</td>';\n\t\t\t\tprint '<td class=\"maxwidthonsmartphone\"><input class=\"minwidth100\" name=\"accountancy_code_sell_export\" value=\"'.$object->accountancy_code_sell_export.'\">';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Accountancy_code_buy\n\t\t\tprint '<tr><td>'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\tprint '<td class=\"maxwidthonsmartphone\"><input class=\"minwidth100\" name=\"accountancy_code_buy\" value=\"'.$object->accountancy_code_buy.'\">';\n\t\t\tprint '</td></tr>';\n\t\t}\n\t\tprint '</table>';\n\n\t\tdol_fiche_end();\n\n\t\tprint '<div class=\"center\">';\n\t\tprint '<input type=\"submit\" class=\"button\" value=\"' . $langs->trans(\"Create\") . '\">';\n\t\tprint ' &nbsp; &nbsp; ';\n\t\tprint '<input type=\"button\" class=\"button\" value=\"' . $langs->trans(\"Cancel\") . '\" onClick=\"javascript:history.go(-1)\">';\n\t\tprint '</div>';\n\n\t\tprint '</form>';\n\t}\n\n    /*\n     * Product card\n     */\n\n    else if ($object->id > 0)\n    {\n        // Fiche en mode edition\n\t\tif ($action == 'edit' && $usercancreate)\n\t\t{\n            //WYSIWYG Editor\n            require_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\n\n            $type = $langs->trans('Product');\n            if ($object->isService()) $type = $langs->trans('Service');\n            //print load_fiche_titre($langs->trans('Modify').' '.$type.' : '.(is_object($object->oldcopy)?$object->oldcopy->ref:$object->ref), \"\");\n\n            // Main official, simple, and not duplicated code\n            print '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'\" method=\"POST\">'.\"\\n\";\n            print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n            print '<input type=\"hidden\" name=\"action\" value=\"update\">';\n            print '<input type=\"hidden\" name=\"id\" value=\"'.$object->id.'\">';\n            print '<input type=\"hidden\" name=\"canvas\" value=\"'.$object->canvas.'\">';\n\n            $head=product_prepare_head($object);\n            $titre=$langs->trans(\"CardProduct\".$object->type);\n            $picto=($object->type== Product::TYPE_SERVICE?'service':'product');\n            dol_fiche_head($head, 'card', $titre, 0, $picto);\n\n            print '<table class=\"border allwidth\">';\n\n            // Ref\n            print '<tr><td class=\"titlefield fieldrequired\">'.$langs->trans(\"Ref\").'</td><td colspan=\"3\"><input name=\"ref\" class=\"maxwidth200\" maxlength=\"128\" value=\"'.dol_escape_htmltag($object->ref).'\"></td></tr>';\n\n            // Label\n            print '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Label\").'</td><td colspan=\"3\"><input name=\"label\" class=\"minwidth300 maxwidth400onsmartphone\" maxlength=\"255\" value=\"'.dol_escape_htmltag($object->label).'\"></td></tr>';\n\n            // Status To sell\n            print '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Status\").' ('.$langs->trans(\"Sell\").')</td><td colspan=\"3\">';\n            print '<select class=\"flat\" name=\"statut\">';\n            if ($object->status)\n            {\n                print '<option value=\"1\" selected>'.$langs->trans(\"OnSell\").'</option>';\n                print '<option value=\"0\">'.$langs->trans(\"NotOnSell\").'</option>';\n            }\n            else\n            {\n                print '<option value=\"1\">'.$langs->trans(\"OnSell\").'</option>';\n                print '<option value=\"0\" selected>'.$langs->trans(\"NotOnSell\").'</option>';\n            }\n            print '</select>';\n            print '</td></tr>';\n\n            // Status To Buy\n            print '<tr><td class=\"fieldrequired\">'.$langs->trans(\"Status\").' ('.$langs->trans(\"Buy\").')</td><td colspan=\"3\">';\n            print '<select class=\"flat\" name=\"statut_buy\">';\n            if ($object->status_buy)\n            {\n                print '<option value=\"1\" selected>'.$langs->trans(\"ProductStatusOnBuy\").'</option>';\n                print '<option value=\"0\">'.$langs->trans(\"ProductStatusNotOnBuy\").'</option>';\n            }\n            else\n            {\n                print '<option value=\"1\">'.$langs->trans(\"ProductStatusOnBuy\").'</option>';\n                print '<option value=\"0\" selected>'.$langs->trans(\"ProductStatusNotOnBuy\").'</option>';\n            }\n            print '</select>';\n            print '</td></tr>';\n\n\t\t\t// Batch number managment\n\t\t\tif ($conf->productbatch->enabled)\n\t\t\t{\n\t\t\t\tif ($object->isProduct() || ! empty($conf->global->STOCK_SUPPORTS_SERVICES))\n\t\t\t\t{\n\t\t\t\t\tprint '<tr><td>'.$langs->trans(\"ManageLotSerial\").'</td><td colspan=\"3\">';\n\t\t\t\t\t$statutarray=array('0' => $langs->trans(\"ProductStatusNotOnBatch\"), '1' => $langs->trans(\"ProductStatusOnBatch\"));\n\t\t\t\t\tprint $form->selectarray('status_batch',$statutarray,$object->status_batch);\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t}\n\t\t\t}\n\n            // Barcode\n            $showbarcode=empty($conf->barcode->enabled)?0:1;\n            if (! empty($conf->global->MAIN_USE_ADVANCED_PERMS) && empty($user->rights->barcode->lire_advance)) $showbarcode=0;\n\n\t        if ($showbarcode)\n\t        {\n\t\t        print '<tr><td>'.$langs->trans('BarcodeType').'</td><td>';\n\t\t        if (isset($_POST['fk_barcode_type']))\n\t\t        {\n\t\t         \t$fk_barcode_type=GETPOST('fk_barcode_type');\n\t\t        }\n\t\t        else\n\t\t        {\n\t        \t\t$fk_barcode_type=$object->barcode_type;\n\t\t        \tif (empty($fk_barcode_type) && ! empty($conf->global->PRODUIT_DEFAULT_BARCODE_TYPE)) $fk_barcode_type = $conf->global->PRODUIT_DEFAULT_BARCODE_TYPE;\n\t\t        }\n\t\t        require_once DOL_DOCUMENT_ROOT.'/core/class/html.formbarcode.class.php';\n\t            $formbarcode = new FormBarCode($db);\n\t\t        print $formbarcode->select_barcode_type($fk_barcode_type, 'fk_barcode_type', 1);\n\t\t        print '</td><td>'.$langs->trans(\"BarcodeValue\").'</td><td>';\n\t\t        $tmpcode=isset($_POST['barcode'])?GETPOST('barcode'):$object->barcode;\n\t\t        if (empty($tmpcode) && ! empty($modBarCodeProduct->code_auto)) $tmpcode=$modBarCodeProduct->getNextValue($object,$type);\n\t\t        print '<input size=\"40\" class=\"maxwidthonsmartphone\" type=\"text\" name=\"barcode\" value=\"'.dol_escape_htmltag($tmpcode).'\">';\n\t\t        print '</td></tr>';\n\t        }\n\n            // Description (used in invoice, propal...)\n            print '<tr><td class=\"tdtop\">'.$langs->trans(\"Description\").'</td><td colspan=\"3\">';\n\n            // We use dolibarr_details as type of DolEditor here, because we must not accept images as description is included into PDF and not accepted by TCPDF.\n            $doleditor = new DolEditor('desc', $object->description, '', 160, 'dolibarr_details', '', false, true, $conf->global->FCKEDITOR_ENABLE_PRODUCTDESC, ROWS_4, '90%');\n            $doleditor->Create();\n\n            print \"</td></tr>\";\n            print \"\\n\";\n\n            // Public Url\n            print '<tr><td>'.$langs->trans(\"PublicUrl\").'</td><td colspan=\"3\">';\n\t\t\tprint '<input type=\"text\" name=\"url\" class=\"quatrevingtpercent\" value=\"'.$object->url.'\">';\n            print '</td></tr>';\n\n            // Stock\n            /*\n            if ($object->isProduct() && ! empty($conf->stock->enabled))\n            {\n                print \"<tr>\".'<td>'.$langs->trans(\"StockLimit\").'</td><td>';\n                print '<input name=\"seuil_stock_alerte\" size=\"4\" value=\"'.$object->seuil_stock_alerte.'\">';\n                print '</td>';\n\n                print '<td>'.$langs->trans(\"DesiredStock\").'</td><td>';\n                print '<input name=\"desiredstock\" size=\"4\" value=\"'.$object->desiredstock.'\">';\n                print '</td></tr>';\n            }\n            else\n            {\n                print '<input name=\"seuil_stock_alerte\" type=\"hidden\" value=\"'.$object->seuil_stock_alerte.'\">';\n                print '<input name=\"desiredstock\" type=\"hidden\" value=\"'.$object->desiredstock.'\">';\n            }*/\n\n            // Nature\n            if($object->type!= Product::TYPE_SERVICE)\n            {\n                print '<tr><td>'.$langs->trans(\"Nature\").'</td><td colspan=\"3\">';\n                $statutarray=array('-1'=>'&nbsp;', '1' => $langs->trans(\"Finished\"), '0' => $langs->trans(\"RowMaterial\"));\n                print $form->selectarray('finished',$statutarray,$object->finished);\n                print '</td></tr>';\n            }\n\n            if ($object->isService())\n            {\n                // Duration\n                print '<tr><td>'.$langs->trans(\"Duration\").'</td><td colspan=\"3\"><input name=\"duration_value\" size=\"3\" maxlength=\"5\" value=\"'.$object->duration_value.'\">';\n                print '&nbsp; ';\n                print '<input name=\"duration_unit\" type=\"radio\" value=\"h\"'.($object->duration_unit=='h'?' checked':'').'>'.$langs->trans(\"Hour\");\n                print '&nbsp; ';\n                print '<input name=\"duration_unit\" type=\"radio\" value=\"d\"'.($object->duration_unit=='d'?' checked':'').'>'.$langs->trans(\"Day\");\n                print '&nbsp; ';\n                print '<input name=\"duration_unit\" type=\"radio\" value=\"w\"'.($object->duration_unit=='w'?' checked':'').'>'.$langs->trans(\"Week\");\n                print '&nbsp; ';\n                print '<input name=\"duration_unit\" type=\"radio\" value=\"m\"'.($object->duration_unit=='m'?' checked':'').'>'.$langs->trans(\"Month\");\n                print '&nbsp; ';\n                print '<input name=\"duration_unit\" type=\"radio\" value=\"y\"'.($object->duration_unit=='y'?' checked':'').'>'.$langs->trans(\"Year\");\n                print '</td></tr>';\n            }\n            else\n\t\t\t{\n                // Weight\n                print '<tr><td>'.$langs->trans(\"Weight\").'</td><td colspan=\"3\">';\n                print '<input name=\"weight\" size=\"5\" value=\"'.$object->weight.'\"> ';\n                print $formproduct->select_measuring_units(\"weight_units\", \"weight\", $object->weight_units);\n                print '</td></tr>';\n                if (empty($conf->global->PRODUCT_DISABLE_SIZE))\n                {\n        \t\t\t// Length\n        \t\t\tprint '<tr><td>'.$langs->trans(\"Length\").' x '.$langs->trans(\"Width\").' x '.$langs->trans(\"Height\").'</td><td colspan=\"3\">';\n        \t\t\tprint '<input name=\"size\" size=\"5\" value=\"'.$object->length.'\">x';\n        \t\t\tprint '<input name=\"sizewidth\" size=\"5\" value=\"'.$object->width.'\">x';\n        \t\t\tprint '<input name=\"sizeheight\" size=\"5\" value=\"'.$object->height.'\"> ';\n        \t\t\tprint $formproduct->select_measuring_units(\"size_units\", \"size\", $object->length_units);\n        \t\t\tprint '</td></tr>';\n                }\n                if (empty($conf->global->PRODUCT_DISABLE_SURFACE))\n                {\n                    // Surface\n                    print '<tr><td>'.$langs->trans(\"Surface\").'</td><td colspan=\"3\">';\n                    print '<input name=\"surface\" size=\"5\" value=\"'.$object->surface.'\"> ';\n                    print $formproduct->select_measuring_units(\"surface_units\", \"surface\", $object->surface_units);\n                    print '</td></tr>';\n                }\n                if (empty($conf->global->PRODUCT_DISABLE_VOLUME))\n                {\n                    // Volume\n                    print '<tr><td>'.$langs->trans(\"Volume\").'</td><td colspan=\"3\">';\n                    print '<input name=\"volume\" size=\"5\" value=\"'.$object->volume.'\"> ';\n                    print $formproduct->select_measuring_units(\"volume_units\", \"volume\", $object->volume_units);\n                    print '</td></tr>';\n                }\n            }\n        \t// Units\n\t        if($conf->global->PRODUCT_USE_UNITS)\n\t        {\n\t\t        print '<tr><td>'.$langs->trans('DefaultUnitToShow').'</td>';\n\t\t        print '<td colspan=\"3\">';\n\t\t        print $form->selectUnits($object->fk_unit, 'units');\n\t\t        print '</td></tr>';\n\t        }\n\n\t        // Custom code\n    \t    if (! $object->isService() && empty($conf->global->PRODUCT_DISABLE_CUSTOM_INFO))\n        \t{\n\t            print '<tr><td>'.$langs->trans(\"CustomCode\").'</td><td><input name=\"customcode\" class=\"maxwidth100onsmartphone\" value=\"'.$object->customcode.'\"></td>';\n\t            // Origin country\n\t            print '<td>'.$langs->trans(\"CountryOrigin\").'</td><td>';\n\t            print $form->select_country($object->country_id, 'country_id', '', 0, 'minwidth100 maxwidthonsmartphone');\n\t            if ($user->admin) print info_admin($langs->trans(\"YouCanChangeValuesForThisListFromDictionarySetup\"),1);\n\t            print '</td></tr>';\n        \t}\n\n            // Other attributes\n            $parameters=array('colspan' => ' colspan=\"3\"', 'cols'=>3);\n            $reshook=$hookmanager->executeHooks('formObjectOptions',$parameters,$object,$action);    // Note that $action and $object may have been modified by hook\n            print $hookmanager->resPrint;\n            if (empty($reshook) && ! empty($extrafields->attribute_label))\n            {\n            \tprint $object->showOptionals($extrafields,'edit');\n            }\n\n\t\t\t// Tags-Categories\n            if ($conf->categorie->enabled)\n\t\t\t{\n\t\t\t\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"Categories\").'</td><td colspan=\"3\">';\n\t\t\t\t$cate_arbo = $form->select_all_categories(Categorie::TYPE_PRODUCT, '', 'parent', 64, 0, 1);\n\t\t\t\t$c = new Categorie($db);\n\t\t\t\t$cats = $c->containing($object->id,Categorie::TYPE_PRODUCT);\n\t\t\t\t$arrayselected=array();\n\t\t\t\tforeach($cats as $cat) {\n\t\t\t\t\t$arrayselected[] = $cat->id;\n\t\t\t\t}\n\t\t\t\tprint $form->multiselectarray('categories', $cate_arbo, $arrayselected, '', 0, '', 0, '100%');\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\n            // Note private\n\t\t\tif (! empty($conf->global->MAIN_DISABLE_NOTES_TAB))\n\t\t\t{\n                print '<tr><td class=\"tdtop\">'.$langs->trans(\"NoteNotVisibleOnBill\").'</td><td colspan=\"3\">';\n\n                $doleditor = new DolEditor('note_private', $object->note_private, '', 140, 'dolibarr_notes', '', false, true, $conf->global->FCKEDITOR_ENABLE_PRODUCTDESC, ROWS_4, '90%');\n                $doleditor->Create();\n\n                print \"</td></tr>\";\n\t\t\t}\n\n            print '</table>';\n\n            print '<br>';\n\n            print '<table class=\"border\" width=\"100%\">';\n\n\t\t\tif (! empty($conf->accounting->enabled))\n\t\t\t{\n\t\t\t\t// Accountancy_code_sell\n\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint $formaccounting->select_account($object->accountancy_code_sell, 'accountancy_code_sell', 1, '', 1, 1);\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\tif ($conf->global->MAIN_FEATURES_LEVEL)\n\t\t\t\t{\n\t\t\t\t\t// Accountancy_code_sell_intra\n\t\t\t\t\tif ($mysoc->isInEEC())\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellIntraCode\").'</td>';\n\t\t\t\t\t\tprint '<td>';\n\t\t\t\t\t\tprint $formaccounting->select_account($object->accountancy_code_sell_intra, 'accountancy_code_sell_intra', 1, '', 1, 1);\n\t\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Accountancy_code_sell_export\n\t\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellExportCode\").'</td>';\n\t\t\t\t\tprint '<td>';\n\t\t\t\t\tprint $formaccounting->select_account($object->accountancy_code_sell_export, 'accountancy_code_sell_export', 1, '', 1, 1);\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t}\n\n\t\t\t\t// Accountancy_code_buy\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\t\tprint '<td>';\n\t\t\t\tprint $formaccounting->select_account($object->accountancy_code_buy, 'accountancy_code_buy', 1, '', 1, 1);\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\t\t\telse // For external software\n\t\t\t{\n\t\t\t\t// Accountancy_code_sell\n\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellCode\").'</td>';\n\t\t\t\tprint '<td><input name=\"accountancy_code_sell\" class=\"maxwidth200\" value=\"'.$object->accountancy_code_sell.'\">';\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\tif ($conf->global->MAIN_FEATURES_LEVEL)\n\t\t\t\t{\n\t\t\t\t\t// Accountancy_code_sell_intra\n\t\t\t\t\tif ($mysoc->isInEEC())\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellIntraCode\").'</td>';\n\t\t\t\t\t\tprint '<td><input name=\"accountancy_code_sell_intra\" class=\"maxwidth200\" value=\"'.$object->accountancy_code_sell_intra.'\">';\n\t\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Accountancy_code_sell_export\n\t\t\t\t\tprint '<tr><td class=\"titlefield\">'.$langs->trans(\"ProductAccountancySellExportCode\").'</td>';\n\t\t\t\t\tprint '<td><input name=\"accountancy_code_sell_export\" class=\"maxwidth200\" value=\"'.$object->accountancy_code_sell_export.'\">';\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t}\n\n\t\t\t\t// Accountancy_code_buy\n\t\t\t\tprint '<tr><td>'.$langs->trans(\"ProductAccountancyBuyCode\").'</td>';\n\t\t\t\tprint '<td><input name=\"accountancy_code_buy\" class=\"maxwidth200\" value=\"'.$object->accountancy_code_buy.'\">';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\t\t\tprint '</table>';\n\n\t\t\tdol_fiche_end();\n\n\t\t\tprint '<div class=\"center\">';\n\t\t\tprint '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Save\").'\">';\n\t\t\tprint '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';\n\t\t\tprint '<input type=\"submit\" class=\"button\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\tprint '</div>';\n\n\t\t\tprint '</form>';\n\t\t}\n        // Fiche en mode visu\n        else\n\t\t{\n            $showbarcode=empty($conf->barcode->enabled)?0:1;\n            if (! empty($conf->global->MAIN_USE_ADVANCED_PERMS) && empty($user->rights->barcode->lire_advance)) $showbarcode=0;\n\n\t\t    $head=product_prepare_head($object);\n            $titre=$langs->trans(\"CardProduct\".$object->type);\n            $picto=($object->type== Product::TYPE_SERVICE?'service':'product');\n\n            dol_fiche_head($head, 'card', $titre, -1, $picto);\n\n            $linkback = '<a href=\"'.DOL_URL_ROOT.'/product/list.php?restore_lastsearch_values=1&type='.$object->type.'\">'.$langs->trans(\"BackToList\").'</a>';\n            $object->next_prev_filter=\" fk_product_type = \".$object->type;\n\n            $shownav = 1;\n            if ($user->societe_id && ! in_array('product', explode(',',$conf->global->MAIN_MODULES_FOR_EXTERNAL))) $shownav=0;\n\n            dol_banner_tab($object, 'ref', $linkback, $shownav, 'ref');\n\n\n            print '<div class=\"fichecenter\">';\n            print '<div class=\"fichehalfleft\">';\n\n            print '<div class=\"underbanner clearboth\"></div>';\n            print '<table class=\"border tableforfield\" width=\"100%\">';\n\n\t\t\t// Type\n\t\t\tif (! empty($conf->produit->enabled) && ! empty($conf->service->enabled))\n\t\t\t{\n\t\t\t\t// TODO change for compatibility with edit in place\n\t\t\t\t$typeformat='select;0:'.$langs->trans(\"Product\").',1:'.$langs->trans(\"Service\");\n\t\t\t\tprint '<tr><td class=\"titlefield\">'.$form->editfieldkey(\"Type\", 'fk_product_type', $object->type, $object, $usercancreate, $typeformat).'</td><td colspan=\"2\">';\n\t\t\t\tprint $form->editfieldval(\"Type\", 'fk_product_type', $object->type, $object, $usercancreate, $typeformat);\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n            if ($showbarcode)\n            {\n                // Barcode type\n                print '<tr><td class=\"nowrap\">';\n                print '<table width=\"100%\" class=\"nobordernopadding\"><tr><td class=\"nowrap\">';\n                print $langs->trans(\"BarcodeType\");\n                print '</td>';\n                if (($action != 'editbarcodetype') && $usercancreate && $createbarcode) print '<td align=\"right\"><a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editbarcodetype&amp;id='.$object->id.'\">'.img_edit($langs->trans('Edit'),1).'</a></td>';\n                print '</tr></table>';\n                print '</td><td colspan=\"2\">';\n                if ($action == 'editbarcodetype' || $action == 'editbarcode')\n                {\n                    require_once DOL_DOCUMENT_ROOT.'/core/class/html.formbarcode.class.php';\n                    $formbarcode = new FormBarCode($db);\n\t\t\t\t}\n                if ($action == 'editbarcodetype')\n                {\n                    $formbarcode->form_barcode_type($_SERVER['PHP_SELF'].'?id='.$object->id,$object->barcode_type,'fk_barcode_type');\n                }\n                else\n                {\n                    $object->fetch_barcode();\n                    print $object->barcode_type_label?$object->barcode_type_label:($object->barcode?'<div class=\"warning\">'.$langs->trans(\"SetDefaultBarcodeType\").'<div>':'');\n                }\n                print '</td></tr>'.\"\\n\";\n\n                // Barcode value\n                print '<tr><td class=\"nowrap\">';\n                print '<table width=\"100%\" class=\"nobordernopadding\"><tr><td class=\"nowrap\">';\n                print $langs->trans(\"BarcodeValue\");\n                print '</td>';\n                if (($action != 'editbarcode') && $usercancreate && $createbarcode) print '<td align=\"right\"><a href=\"'.$_SERVER[\"PHP_SELF\"].'?action=editbarcode&amp;id='.$object->id.'\">'.img_edit($langs->trans('Edit'),1).'</a></td>';\n                print '</tr></table>';\n                print '</td><td colspan=\"2\">';\n                if ($action == 'editbarcode')\n                {\n\t\t\t\t\t$tmpcode=isset($_POST['barcode'])?GETPOST('barcode'):$object->barcode;\n\t\t\t\t\tif (empty($tmpcode) && ! empty($modBarCodeProduct->code_auto)) $tmpcode=$modBarCodeProduct->getNextValue($object,$type);\n\n\t\t\t\t\tprint '<form method=\"post\" action=\"'.$_SERVER[\"PHP_SELF\"].'?id='.$object->id.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"action\" value=\"setbarcode\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"barcode_type_code\" value=\"'.$object->barcode_type_code.'\">';\n\t\t\t\t\tprint '<input size=\"40\" class=\"maxwidthonsmartphone\" type=\"text\" name=\"barcode\" value=\"'.$tmpcode.'\">';\n\t\t\t\t\tprint '&nbsp;<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t\t\tprint '</form>';\n                }\n                else\n                {\n\t\t\t\t\tprint $object->barcode;\n                }\n                print '</td></tr>'.\"\\n\";\n            }\n\n\t\t\t// Accountancy sell code\n\t\t\tprint '<tr><td class=\"nowrap\">';\n\t\t\tprint $langs->trans(\"ProductAccountancySellCode\");\n\t\t\tprint '</td><td colspan=\"2\">';\n\t\t\tif (! empty($conf->accounting->enabled))\n\t\t\t{\n\t\t\t\t$accountingaccount = new AccountingAccount($db);\n\t\t\t\t$accountingaccount->fetch('',$object->accountancy_code_sell,1);\n\n\t\t\t\tprint $accountingaccount->getNomUrl(0,1,1,'',1);\n\t\t\t} else {\n\t\t\t\tprint $object->accountancy_code_sell;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n\t\t\tif ($conf->global->MAIN_FEATURES_LEVEL)\n\t\t\t{\n\t\t\t\t// Accountancy sell code intra-community\n\t\t\t\tif ($mysoc->isInEEC())\n\t\t\t\t{\n\t\t\t\t\tprint '<tr><td class=\"nowrap\">';\n\t\t\t\t\tprint $langs->trans(\"ProductAccountancySellIntraCode\");\n\t\t\t\t\tprint '</td><td colspan=\"2\">';\n\t\t\t\t\tif (! empty($conf->accounting->enabled))\n\t\t\t\t\t{\n\t\t\t\t\t\t$accountingaccount2 = new AccountingAccount($db);\n\t\t\t\t\t\t$accountingaccount2->fetch('',$object->accountancy_code_sell_intra,1);\n\n\t\t\t\t\t\tprint $accountingaccount2->getNomUrl(0,1,1,'',1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint $object->accountancy_code_sell_intra;\n\t\t\t\t\t}\n\t\t\t\t\tprint '</td></tr>';\n\t\t\t\t}\n\n\t\t\t\t// Accountancy sell code export\n\t\t\t\tprint '<tr><td class=\"nowrap\">';\n\t\t\t\tprint $langs->trans(\"ProductAccountancySellExportCode\");\n\t\t\t\tprint '</td><td colspan=\"2\">';\n\t\t\t\tif (! empty($conf->accounting->enabled))\n\t\t\t\t{\n\t\t\t\t\t$accountingaccount3 = new AccountingAccount($db);\n\t\t\t\t\t$accountingaccount3->fetch('',$object->accountancy_code_sell_export,1);\n\n\t\t\t\t\tprint $accountingaccount3->getNomUrl(0,1,1,'',1);\n\t\t\t\t} else {\n\t\t\t\t\tprint $object->accountancy_code_sell_export;\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\t// Accountancy buy code\n\t\t\tprint '<tr><td class=\"nowrap\">';\n\t\t\tprint $langs->trans(\"ProductAccountancyBuyCode\");\n\t\t\tprint '</td><td colspan=\"2\">';\n\t\t\tif (! empty($conf->accounting->enabled))\n\t\t\t{\n\t\t\t\t$accountingaccount4 = new AccountingAccount($db);\n\t\t\t\t$accountingaccount4->fetch('',$object->accountancy_code_buy,1);\n\n\t\t\t\tprint $accountingaccount4->getNomUrl(0,1,1,'',1);\n\t\t\t} else {\n\t\t\t\tprint $object->accountancy_code_buy;\n\t\t\t}\n\t\t\tprint '</td></tr>';\n\n            // Batch number management (to batch)\n            if (! empty($conf->productbatch->enabled))\n            {\n\t\t\t\tif ($object->isProduct() || ! empty($conf->global->STOCK_SUPPORTS_SERVICES))\n\t\t\t\t{\n            \t\tprint '<tr><td>'.$langs->trans(\"ManageLotSerial\").'</td><td colspan=\"2\">';\n            \t    if (! empty($conf->use_javascript_ajax) && $usercancreate && ! empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n            \t        print ajax_object_onoff($object, 'status_batch', 'tobatch', 'ProductStatusOnBatch', 'ProductStatusNotOnBatch');\n            \t    } else {\n            \t        print $object->getLibStatut(0,2);\n            \t    }\n            \t    print '</td></tr>';\n\t\t\t\t}\n            }\n\n            // Description\n            print '<tr><td class=\"tdtop\">'.$langs->trans(\"Description\").'</td><td colspan=\"2\">'.(dol_textishtml($object->description)?$object->description:dol_nl2br($object->description,1,true)).'</td></tr>';\n\n            // Public URL\n            print '<tr><td>'.$langs->trans(\"PublicUrl\").'</td><td colspan=\"2\">';\n\t\t\tprint dol_print_url($object->url);\n            print '</td></tr>';\n\n            //Parent product.\n            if (!empty($conf->variants->enabled) && $object->isProduct()) {\n\n                $combination = new ProductCombination($db);\n\n                if ($combination->fetchByFkProductChild($object->id) > 0) {\n                    $prodstatic = new Product($db);\n                    $prodstatic->fetch($combination->fk_product_parent);\n\n                    // Parent product\n                    print '<tr><td>'.$langs->trans(\"ParentProduct\").'</td><td colspan=\"2\">';\n                    print $prodstatic->getNomUrl(1);\n                    print '</td></tr>';\n                }\n            }\n\n            print '</table>';\n            print '</div>';\n            print '<div class=\"fichehalfright\"><div class=\"ficheaddleft\">';\n\n            print '<div class=\"underbanner clearboth\"></div>';\n            print '<table class=\"border tableforfield\" width=\"100%\">';\n\n            // Nature\n            if($object->type!= Product::TYPE_SERVICE)\n            {\n                print '<tr><td class=\"titlefield\">'.$langs->trans(\"Nature\").'</td><td colspan=\"2\">';\n                print $object->getLibFinished();\n                print '</td></tr>';\n            }\n\n            if ($object->isService())\n            {\n                // Duration\n                print '<tr><td class=\"titlefield\">'.$langs->trans(\"Duration\").'</td><td colspan=\"2\">'.$object->duration_value.'&nbsp;';\n                if ($object->duration_value > 1)\n                {\n                    $dur=array(\"h\"=>$langs->trans(\"Hours\"),\"d\"=>$langs->trans(\"Days\"),\"w\"=>$langs->trans(\"Weeks\"),\"m\"=>$langs->trans(\"Months\"),\"y\"=>$langs->trans(\"Years\"));\n                }\n                else if ($object->duration_value > 0)\n                {\n                    $dur=array(\"h\"=>$langs->trans(\"Hour\"),\"d\"=>$langs->trans(\"Day\"),\"w\"=>$langs->trans(\"Week\"),\"m\"=>$langs->trans(\"Month\"),\"y\"=>$langs->trans(\"Year\"));\n                }\n                print (! empty($object->duration_unit) && isset($dur[$object->duration_unit]) ? $langs->trans($dur[$object->duration_unit]) : '').\"&nbsp;\";\n\n                print '</td></tr>';\n            }\n            else\n            {\n                // Weight\n                print '<tr><td class=\"titlefield\">'.$langs->trans(\"Weight\").'</td><td colspan=\"2\">';\n                if ($object->weight != '')\n                {\n                    print $object->weight.\" \".measuring_units_string($object->weight_units,\"weight\");\n                }\n                else\n                {\n                    print '&nbsp;';\n                }\n                print \"</td></tr>\\n\";\n                if (empty($conf->global->PRODUCT_DISABLE_SIZE))\n                {\n                    // Length\n                    print '<tr><td>'.$langs->trans(\"Length\").' x '.$langs->trans(\"Width\").' x '.$langs->trans(\"Height\").'</td><td colspan=\"2\">';\n                    if ($object->length != '' || $object->width != '' || $object->height != '')\n                    {\n                        print $object->length;\n                        if ($object->width) print \" x \".$object->width;\n                        if ($object->height) print \" x \".$object->height;\n                        print ' '.measuring_units_string($object->length_units,\"size\");\n                    }\n                    else\n                    {\n                        print '&nbsp;';\n                    }\n                    print \"</td></tr>\\n\";\n                }\n                if (empty($conf->global->PRODUCT_DISABLE_SURFACE))\n                {\n                    // Surface\n                    print '<tr><td>'.$langs->trans(\"Surface\").'</td><td colspan=\"2\">';\n                    if ($object->surface != '')\n                    {\n                        print $object->surface.\" \".measuring_units_string($object->surface_units,\"surface\");\n                    }\n                    else\n                    {\n                        print '&nbsp;';\n                    }\n                    print \"</td></tr>\\n\";\n                }\n                if (empty($conf->global->PRODUCT_DISABLE_VOLUME))\n                {\n                    // Volume\n                    print '<tr><td>'.$langs->trans(\"Volume\").'</td><td colspan=\"2\">';\n                    if ($object->volume != '')\n                    {\n                        print $object->volume.\" \".measuring_units_string($object->volume_units,\"volume\");\n                    }\n                    else\n                    {\n                        print '&nbsp;';\n                    }\n                    print \"</td></tr>\\n\";\n                }\n            }\n\n\t\t\t// Unit\n\t\t\tif (! empty($conf->global->PRODUCT_USE_UNITS))\n\t\t\t{\n\t\t\t\t$unit = $object->getLabelOfUnit();\n\n\t\t\t\tprint '<tr><td>'.$langs->trans('DefaultUnitToShow').'</td><td>';\n\t\t\t\tif ($unit !== '') {\n\t\t\t\t\tprint $langs->trans($unit);\n\t\t\t\t}\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n        \t// Custom code\n        \tif (! $object->isService() && empty($conf->global->PRODUCT_DISABLE_CUSTOM_INFO))\n        \t{\n\t            print '<tr><td>'.$langs->trans(\"CustomCode\").'</td><td colspan=\"2\">'.$object->customcode.'</td>';\n\n            \t// Origin country code\n            \tprint '<tr><td>'.$langs->trans(\"CountryOrigin\").'</td><td colspan=\"2\">'.getCountry($object->country_id,0,$db).'</td>';\n        \t}\n\n            // Other attributes\n            $parameters=array('colspan' => ' colspan=\"'.(2+(($showphoto||$showbarcode)?1:0)).'\"');\n            include DOL_DOCUMENT_ROOT . '/core/tpl/extrafields_view.tpl.php';\n\n\t\t\t// Categories\n\t\t\tif($conf->categorie->enabled) {\n\t\t\t\tprint '<tr><td valign=\"middle\">'.$langs->trans(\"Categories\").'</td><td colspan=\"3\">';\n\t\t\t\tprint $form->showCategories($object->id,'product',1);\n\t\t\t\tprint \"</td></tr>\";\n\t\t\t}\n\n            // Note private\n\t\t\tif (! empty($conf->global->MAIN_DISABLE_NOTES_TAB))\n\t\t\t{\n    \t\t\tprint '<!-- show Note --> '.\"\\n\";\n                print '<tr><td class=\"tdtop\">'.$langs->trans(\"NotePrivate\").'</td><td colspan=\"'.(2+(($showphoto||$showbarcode)?1:0)).'\">'.(dol_textishtml($object->note_private)?$object->note_private:dol_nl2br($object->note_private,1,true)).'</td></tr>'.\"\\n\";\n                print '<!-- End show Note --> '.\"\\n\";\n\t\t\t}\n\n            print \"</table>\\n\";\n    \t\tprint '</div>';\n\n            print '</div></div>';\n            print '<div style=\"clear:both\"></div>';\n\n            dol_fiche_end();\n        }\n\n    }\n    else if ($action != 'create')\n    {\n        exit;\n    }\n}\n\n// Load object modCodeProduct\n$module=(! empty($conf->global->PRODUCT_CODEPRODUCT_ADDON)?$conf->global->PRODUCT_CODEPRODUCT_ADDON:'mod_codeproduct_leopard');\nif (substr($module, 0, 16) == 'mod_codeproduct_' && substr($module, -3) == 'php')\n{\n    $module = substr($module, 0, dol_strlen($module)-4);\n}\n$result=dol_include_once('/core/modules/product/'.$module.'.php');\nif ($result > 0)\n{\n\t$modCodeProduct = new $module();\n}\n\n$tmpcode='';\nif (! empty($modCodeProduct->code_auto)) $tmpcode=$modCodeProduct->getNextValue($object,$object->type);\n\n// Define confirmation messages\n$formquestionclone=array(\n\t'text' => $langs->trans(\"ConfirmClone\"),\n    array('type' => 'text', 'name' => 'clone_ref','label' => $langs->trans(\"NewRefForClone\"), 'value' => empty($tmpcode) ? $langs->trans(\"CopyOf\").' '.$object->ref : $tmpcode, 'size'=>24),\n    array('type' => 'checkbox', 'name' => 'clone_content','label' => $langs->trans(\"CloneContentProduct\"), 'value' => 1),\n    array('type' => 'checkbox', 'name' => 'clone_prices', 'label' => $langs->trans(\"ClonePricesProduct\").' ('.$langs->trans(\"FeatureNotYetAvailable\").')', 'value' => 0, 'disabled' => true),\n);\nif (! empty($conf->global->PRODUIT_SOUSPRODUITS))\n{\n    $formquestionclone[]=array('type' => 'checkbox', 'name' => 'clone_composition', 'label' => $langs->trans('CloneCompositionProduct'), 'value' => 1);\n}\n\n// Confirm delete product\nif (($action == 'delete' && (empty($conf->use_javascript_ajax) || ! empty($conf->dol_use_jmobile)))\t// Output when action = clone if jmobile or no js\n\t|| (! empty($conf->use_javascript_ajax) && empty($conf->dol_use_jmobile)))\t\t\t\t\t\t\t// Always output when not jmobile nor js\n{\n    print $form->formconfirm(\"card.php?id=\".$object->id,$langs->trans(\"DeleteProduct\"),$langs->trans(\"ConfirmDeleteProduct\"),\"confirm_delete\",'',0,\"action-delete\");\n}\n\n// Clone confirmation\nif (($action == 'clone' && (empty($conf->use_javascript_ajax) || ! empty($conf->dol_use_jmobile)))\t\t// Output when action = clone if jmobile or no js\n\t|| (! empty($conf->use_javascript_ajax) && empty($conf->dol_use_jmobile)))\t\t\t\t\t\t\t// Always output when not jmobile nor js\n{\n    print $form->formconfirm($_SERVER[\"PHP_SELF\"].'?id='.$object->id,$langs->trans('CloneProduct'),$langs->trans('ConfirmCloneProduct',$object->ref),'confirm_clone',$formquestionclone,'yes','action-clone',260,600);\n}\n\n\n/* ************************************************************************** */\n/*                                                                            */\n/* Barre d'action                                                             */\n/*                                                                            */\n/* ************************************************************************** */\nif ($action != 'create' && $action != 'edit')\n{\n    print \"\\n\".'<div class=\"tabsAction\">'.\"\\n\";\n\n    $parameters=array();\n    $reshook=$hookmanager->executeHooks('addMoreActionsButtons',$parameters,$object,$action);    // Note that $action and $object may have been modified by hook\n    if (empty($reshook))\n\t{\n\t\tif ($usercancreate)\n        {\n            if (! isset($object->no_button_edit) || $object->no_button_edit <> 1) print '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=edit&amp;id='.$object->id.'\">'.$langs->trans(\"Modify\").'</a></div>';\n\n            if (! isset($object->no_button_copy) || $object->no_button_copy <> 1)\n            {\n                if (! empty($conf->use_javascript_ajax) && empty($conf->dol_use_jmobile))\n                {\n                    print '<div class=\"inline-block divButAction\"><span id=\"action-clone\" class=\"butAction\">'.$langs->trans('ToClone').'</span></div>'.\"\\n\";\n                }\n                else\n    \t\t\t{\n                    print '<div class=\"inline-block divButAction\"><a class=\"butAction\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=clone&amp;id='.$object->id.'\">'.$langs->trans(\"ToClone\").'</a></div>';\n                }\n            }\n        }\n        $object_is_used = $object->isObjectUsed($object->id);\n\n        if ($usercandelete)\n        {\n            if (empty($object_is_used) && (! isset($object->no_button_delete) || $object->no_button_delete <> 1))\n            {\n                if (! empty($conf->use_javascript_ajax) && empty($conf->dol_use_jmobile))\n                {\n                    print '<div class=\"inline-block divButAction\"><span id=\"action-delete\" class=\"butActionDelete\">'.$langs->trans('Delete').'</span></div>'.\"\\n\";\n                }\n                else\n    \t\t\t{\n                    print '<div class=\"inline-block divButAction\"><a class=\"butActionDelete\" href=\"'.$_SERVER[\"PHP_SELF\"].'?action=delete&amp;id='.$object->id.'\">'.$langs->trans(\"Delete\").'</a></div>';\n                }\n            }\n            else\n    \t\t{\n                print '<div class=\"inline-block divButAction\"><a class=\"butActionRefused\" href=\"#\" title=\"'.$langs->trans(\"ProductIsUsed\").'\">'.$langs->trans(\"Delete\").'</a></div>';\n            }\n        }\n        else\n    \t{\n            print '<div class=\"inline-block divButAction\"><a class=\"butActionRefused\" href=\"#\" title=\"'.$langs->trans(\"NotEnoughPermissions\").'\">'.$langs->trans(\"Delete\").'</a></div>';\n        }\n    }\n\n    print \"\\n</div>\\n\";\n}\n\n/*\n * All the \"Add to\" areas\n */\n\nif (! empty($conf->global->PRODUCT_ADD_FORM_ADD_TO) && $object->id && ($action == '' || $action == 'view') && $object->status)\n{\n    //Variable used to check if any text is going to be printed\n    $html = '';\n\t//print '<div class=\"fichecenter\"><div class=\"fichehalfleft\">';\n\n    // Propals\n    if (! empty($conf->propal->enabled) && $user->rights->propale->creer)\n    {\n        $propal = new Propal($db);\n\n        $langs->load(\"propal\");\n\n        $otherprop = $propal->liste_array(2,1,0);\n\n        if (is_array($otherprop) && count($otherprop))\n        {\n        \t$html .= '<tr><td style=\"width: 200px;\">';\n        \t$html .= $langs->trans(\"AddToDraftProposals\").'</td><td>';\n        \t$html .= $form->selectarray(\"propalid\", $otherprop, 0, 1);\n        \t$html .= '</td></tr>';\n        }\n        else\n       {\n        \t$html .= '<tr><td style=\"width: 200px;\">';\n        \t$html .= $langs->trans(\"AddToDraftProposals\").'</td><td>';\n        \t$html .= $langs->trans(\"NoDraftProposals\");\n        \t$html .= '</td></tr>';\n        }\n    }\n\n    // Commande\n    if (! empty($conf->commande->enabled) && $user->rights->commande->creer)\n    {\n        $commande = new Commande($db);\n\n        $langs->load(\"orders\");\n\n        $othercom = $commande->liste_array(2, 1, null);\n        if (is_array($othercom) && count($othercom))\n        {\n        \t$html .= '<tr><td style=\"width: 200px;\">';\n        \t$html .= $langs->trans(\"AddToDraftOrders\").'</td><td>';\n        \t$html .= $form->selectarray(\"commandeid\", $othercom, 0, 1);\n        \t$html .= '</td></tr>';\n        }\n        else\n\t\t{\n        \t$html .= '<tr><td style=\"width: 200px;\">';\n        \t$html .= $langs->trans(\"AddToDraftOrders\").'</td><td>';\n        \t$html .= $langs->trans(\"NoDraftOrders\");\n        \t$html .= '</td></tr>';\n        }\n    }\n\n    // Factures\n    if (! empty($conf->facture->enabled) && $user->rights->facture->creer)\n    {\n    \t$invoice = new Facture($db);\n\n    \t$langs->load(\"bills\");\n\n    \t$otherinvoice = $invoice->liste_array(2, 1, null);\n    \tif (is_array($otherinvoice) && count($otherinvoice))\n    \t{\n    \t\t$html .= '<tr><td style=\"width: 200px;\">';\n    \t\t$html .= $langs->trans(\"AddToDraftInvoices\").'</td><td>';\n    \t\t$html .= $form->selectarray(\"factureid\", $otherinvoice, 0, 1);\n    \t\t$html .= '</td></tr>';\n    \t}\n    \telse\n    \t{\n    \t\t$html .= '<tr><td style=\"width: 200px;\">';\n    \t\t$html .= $langs->trans(\"AddToDraftInvoices\").'</td><td>';\n    \t\t$html .= $langs->trans(\"NoDraftInvoices\");\n    \t\t$html .= '</td></tr>';\n    \t}\n    }\n\n    //If any text is going to be printed, then we show the table\n    if (!empty($html))\n    {\n\t    print '<form method=\"POST\" action=\"'.$_SERVER[\"PHP_SELF\"].'?id='.$object->id.'\">';\n    \tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    \tprint '<input type=\"hidden\" name=\"action\" value=\"addin\">';\n\n\t    print load_fiche_titre($langs->trans(\"AddToDraft\"),'','');\n\n\t\tdol_fiche_head('');\n\n    \t$html .= '<tr><td class=\"nowrap\">'.$langs->trans(\"Quantity\").' ';\n    \t$html .= '<input type=\"text\" class=\"flat\" name=\"qty\" size=\"1\" value=\"1\"></td>';\n        $html .= '<td class=\"nowrap\">'.$langs->trans(\"ReductionShort\").'(%) ';\n    \t$html .= '<input type=\"text\" class=\"flat\" name=\"remise_percent\" size=\"1\" value=\"0\">';\n    \t$html .= '</td></tr>';\n\n    \tprint '<table width=\"100%\" class=\"border\">';\n        print $html;\n        print '</table>';\n\n        print '<div class=\"center\">';\n        print '<input type=\"submit\" class=\"button\" value=\"'.$langs->trans(\"Add\").'\">';\n        print '</div>';\n\n        dol_fiche_end();\n\n        print '</form>';\n    }\n}\n\n\n/*\n * Documents generes\n */\n\nif ($action != 'create' && $action != 'edit' && $action != 'delete')\n{\n    print '<div class=\"fichecenter\"><div class=\"fichehalfleft\">';\n    print '<a name=\"builddoc\"></a>'; // ancre\n\n    // Documents\n    $objectref = dol_sanitizeFileName($object->ref);\n    $relativepath = $comref . '/' . $objectref . '.pdf';\n    $filedir = $conf->produit->dir_output . '/' . $objectref;\n    $urlsource=$_SERVER[\"PHP_SELF\"].\"?id=\".$object->id;\n    $genallowed=$usercanread;\n    $delallowed=$usercancreate;\n\n    $var=true;\n\n    print $formfile->showdocuments($modulepart,$object->ref,$filedir,$urlsource,$genallowed,$delallowed,'',0,0,0,28,0,'',0,'',$object->default_lang, '', $object);\n    $somethingshown=$formfile->numoffiles;\n\n    print '</div><div class=\"fichehalfright\"><div class=\"ficheaddleft\">';\n\n    $MAXEVENT = 10;\n\n    $morehtmlright = '<a href=\"'.DOL_URL_ROOT.'/product/agenda.php?id='.$object->id.'\">';\n    $morehtmlright.= $langs->trans(\"SeeAll\");\n    $morehtmlright.= '</a>';\n\n    // List of actions on element\n    include_once DOL_DOCUMENT_ROOT . '/core/class/html.formactions.class.php';\n    $formactions = new FormActions($db);\n    $somethingshown = $formactions->showactions($object, 'product', 0, 1, '', $MAXEVENT, '', $morehtmlright);\t\t// Show all action for product\n\n    print '</div></div></div>';\n}\n\n\nllxFooter();\n$db->close();\n", "<?php\n/* Copyright (C) 2006      Andre Cianfarani     <acianfa@free.fr>\n * Copyright (C) 2005-2012 Regis Houssin        <regis.houssin@capnetworks.com>\n * Copyright (C) 2007-2011 Laurent Destailleur  <eldy@users.sourceforge.net>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *       \\file       htdocs/societe/ajax/company.php\n *       \\brief      File to return Ajax response on thirdparty list request\n */\n\nif (! defined('NOTOKENRENEWAL')) define('NOTOKENRENEWAL',1); // Disables token renewal\nif (! defined('NOREQUIREMENU'))  define('NOREQUIREMENU','1');\nif (! defined('NOREQUIREHTML'))  define('NOREQUIREHTML','1');\nif (! defined('NOREQUIREAJAX'))  define('NOREQUIREAJAX','1');\nif (! defined('NOREQUIRESOC'))   define('NOREQUIRESOC','1');\nif (! defined('NOCSRFCHECK'))    define('NOCSRFCHECK','1');\n\nrequire '../../main.inc.php';\n\n$htmlname=GETPOST('htmlname','alpha');\n$filter=GETPOST('filter','alpha');\n$outjson=(GETPOST('outjson','int') ? GETPOST('outjson','int') : 0);\n$action=GETPOST('action', 'alpha');\n$id=GETPOST('id', 'int');\n$showtype=GETPOST('showtype','int');\n\n\n/*\n * View\n */\n\n//print '<!-- Ajax page called with url '.dol_escape_htmltag($_SERVER[\"PHP_SELF\"]).'?'.dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]).' -->'.\"\\n\";\n\ndol_syslog(join(',', $_GET));\n//print_r($_GET);\n\nif (! empty($action) && $action == 'fetch' && ! empty($id))\n{\n\trequire_once DOL_DOCUMENT_ROOT . '/societe/class/societe.class.php';\n\n\t$outjson=array();\n\n\t$object = new Societe($db);\n\t$ret=$object->fetch($id);\n\tif ($ret > 0)\n\t{\n\t\t$outname=$object->name;\n\t\t$outlabel = '';\n\t\t$outdesc = '';\n\t\t$outtype = $object->type;\n\n\t\t$outjson = array('ref' => $outref,'name' => $outname,'desc' => $outdesc,'type' => $outtype);\n\t}\n\n\techo json_encode($outjson);\n}\nelse\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/html.form.class.php';\n\n\t$langs->load(\"companies\");\n\n\ttop_httphead();\n\n\tif (empty($htmlname)) return;\n\n\t$match = preg_grep('/('.$htmlname.'[0-9]+)/',array_keys($_GET));\n\tsort($match);\n\t$id = (! empty($match[0]) ? $match[0] : '');\n\n\t// When used from jQuery, the search term is added as GET param \"term\".\n\t$searchkey=(($id && GETPOST($id, 'alpha'))?GETPOST($id, 'alpha'):(($htmlname && GETPOST($htmlname, 'alpha'))?GETPOST($htmlname, 'alpha'):''));\n\n\tif (! $searchkey) return;\n\n\tif (! is_object($form)) $form = new Form($db);\n\t$arrayresult=$form->select_thirdparty_list(0, $htmlname, $filter, 1, $showtype, 0, null, $searchkey, $outjson);\n\n\t$db->close();\n\n\tif ($outjson) print json_encode($arrayresult);\n}\n\n"], "filenames": ["htdocs/core/class/html.form.class.php", "htdocs/main.inc.php", "htdocs/product/card.php", "htdocs/societe/ajax/company.php"], "buggy_code_start_loc": [1047, 75, 292, 90], "buggy_code_end_loc": [1065, 1563, 1727, 91], "fixing_code_start_loc": [1047, 75, 292, 90], "fixing_code_end_loc": [1069, 1566, 1727, 91], "type": "CWE-89", "message": "SQL injection vulnerability in product/card.php in Dolibarr ERP/CRM version 7.0.3 allows remote attackers to execute arbitrary SQL commands via the country_id parameter.", "other": {"cve": {"id": "CVE-2018-13448", "sourceIdentifier": "cve@mitre.org", "published": "2018-07-08T16:29:00.407", "lastModified": "2018-08-10T13:59:33.543", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "SQL injection vulnerability in product/card.php in Dolibarr ERP/CRM version 7.0.3 allows remote attackers to execute arbitrary SQL commands via the country_id parameter."}, {"lang": "es", "value": "Una vulnerabilidad de inyecci\u00f3n SQL en product/card.php en Dolibarr ERP/CRM 7.0.3 permite que atacantes remotos ejecuten comandos SQL arbitrarios mediante el par\u00e1metro country_id."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dolibarr:dolibarr_erp\\/crm:7.0.3:*:*:*:*:*:*:*", "matchCriteriaId": "062A2152-D154-43D2-806C-E71F97F3F49E"}]}]}], "references": [{"url": "https://github.com/Dolibarr/dolibarr/commit/36402c22eef49d60edd73a2f312f8e28fe0bd1cb", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Dolibarr/dolibarr/commit/36402c22eef49d60edd73a2f312f8e28fe0bd1cb"}}