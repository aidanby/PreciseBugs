{"buggy_code": ["var Promise = require('es6-promise').Promise;\nvar async = require('async');\nvar cp = require('child_process');\nvar notEmpty = function(x) {return x};\n\nmodule.exports = function killport(port) {\n  return (new Promise(function(resolve, reject) {\n    var cmd = 'lsof -i:' + port; \n    cp.exec(cmd, function(err, stdout, stderr){\n      // do not check `err`, if no process found\n      // err will be an instance of Error\n      if (stderr) return reject(stderr);\n      var lines = String(stdout).split('\\n').filter(notEmpty);\n      var pids = lines.map(function(line){\n        var blocks = line.split(/\\s+/);\n        if (blocks[1] && +blocks[1]) {\n          return +blocks[1];\n        }\n        return null;\n      }).filter(notEmpty);\n\n      if (!pids.length) {\n        return resolve('no pids found');\n      }\n\n      var infs = [];\n      return async.each(pids, function(pid, next) {\n        console.log('kill ' + pid);\n        cp.exec('kill ' + pid, function (err, stdout, stderr) {\n          infs.push({\n            pid: pid,\n            err: err,\n            stderr: stderr,\n            stdout: stdout\n          });\n          next();\n        });\n      }, function(err) {\n        resolve(infs);\n      });\n    });\n  }))\n};\n"], "fixing_code": ["var Promise = require('es6-promise').Promise;\nvar async = require('async');\nvar cp = require('child_process');\nvar notEmpty = function(x) {return x};\n\nmodule.exports = function killport(port) {\n  return (new Promise(function(resolve, reject) {\n    if (!/^\\d+$/.test(port)) throw new Error('port must be a number.');\n    var cmd = 'lsof -i:' + port; \n    cp.exec(cmd, function(err, stdout, stderr){\n      // do not check `err`, if no process found\n      // err will be an instance of Error\n      if (stderr) return reject(stderr);\n      var lines = String(stdout).split('\\n').filter(notEmpty);\n      var pids = lines.map(function(line){\n        var blocks = line.split(/\\s+/);\n        if (blocks[1] && +blocks[1]) {\n          return +blocks[1];\n        }\n        return null;\n      }).filter(notEmpty);\n\n      if (!pids.length) {\n        return resolve('no pids found');\n      }\n\n      var infs = [];\n      return async.each(pids, function(pid, next) {\n        console.log('kill ' + pid);\n        cp.exec('kill ' + pid, function (err, stdout, stderr) {\n          infs.push({\n            pid: pid,\n            err: err,\n            stderr: stderr,\n            stdout: stdout\n          });\n          next();\n        });\n      }, function(err) {\n        resolve(infs);\n      });\n    });\n  }))\n};\n"], "filenames": ["index.js"], "buggy_code_start_loc": [7], "buggy_code_end_loc": [7], "fixing_code_start_loc": [8], "fixing_code_end_loc": [9], "type": "CWE-78", "message": "This affects the package killport before 1.0.2. If (attacker-controlled) user input is given, it is possible for an attacker to execute arbitrary commands. This is due to use of the child_process exec function without input sanitization. Running this PoC will cause the command touch success to be executed, leading to the creation of a file called success.", "other": {"cve": {"id": "CVE-2021-23360", "sourceIdentifier": "report@snyk.io", "published": "2021-03-21T16:15:12.720", "lastModified": "2022-06-28T14:11:45.273", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "This affects the package killport before 1.0.2. If (attacker-controlled) user input is given, it is possible for an attacker to execute arbitrary commands. This is due to use of the child_process exec function without input sanitization. Running this PoC will cause the command touch success to be executed, leading to the creation of a file called success."}, {"lang": "es", "value": "Esto afecta al paquete killport versiones anteriores a 1.0.2.&#xa0;Si es proporcionada una entrada de usuario (controlada por el atacante), es posible que un atacante ejecute comandos arbitrarios.&#xa0;Esto es debido al uso de la funci\u00f3n exec child_process sin un saneamiento de entrada.&#xa0;Una Ejecuci\u00f3n de esta PoC causar\u00e1 que sea ejecutado el comando touch success, conllevando a la creaci\u00f3n de un archivo llamado success"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}, {"source": "report@snyk.io", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.6, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-78"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:killport_project:killport:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "1.0.2", "matchCriteriaId": "3644C510-D21D-4A5D-8744-176AE24E94D3"}]}]}], "references": [{"url": "https://github.com/ssnau/killport/blob/5268f23ea8f152e47182b263d8f7ef20c12a9f28/index.js%23L9", "source": "report@snyk.io", "tags": ["Broken Link"]}, {"url": "https://github.com/ssnau/killport/commit/bec8e371f170a12e11cd222ffc7a6e1ae9942638", "source": "report@snyk.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://snyk.io/vuln/SNYK-JS-KILLPORT-1078535", "source": "report@snyk.io", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/ssnau/killport/commit/bec8e371f170a12e11cd222ffc7a6e1ae9942638"}}