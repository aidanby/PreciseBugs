{"buggy_code": ["var XmlEntities = require('html-entities').XmlEntities;\nvar entities = new XmlEntities();\nvar AuthorizationError = require('./errors/authorizationerror');\n\n/**\n* Authorization Response parameters are encoded as HTML form values that are auto-submitted in the User Agent, \n* and thus are transmitted via the HTTP POST method to the Client, with the result parameters being encoded in \n* the response body using the application/x-www-form-urlencoded format. The action attribute of the form MUST be \n* the Client's Redirection URI. The method of the form attribute MUST be POST.\n* Any technique supported by the User Agent MAY be used to cause the submission of the form, and any form content \n* necessary to support this MAY be included, such as submit controls and client-side scripting commands. However, \n* the Client MUST be able to process the message without regard for the mechanism by which the form submission was \n* initiated. (http://openid.net/specs/oauth-v2-form-post-response-mode-1_0-01.html)\n**/\n\nvar input = '<input type=\"hidden\" name=\"{NAME}\" value=\"{VALUE}\"/>';\nvar html = '<html>' +\n  '<head><title>Submit This Form</title></head>' +\n  '<body onload=\"javascript:document.forms[0].submit()\">' +\n    '<form method=\"post\" action=\"{ACTION}\">' +\n      '{INPUTS}' +\n    '</form>' +\n  '</body>' +\n'</html>';\n\nexports = module.exports = function (txn, res, params) {\n  var inputs = [];\n  \n  Object.keys(params).forEach(function (k) {\n    inputs.push(input.replace('{NAME}', k).replace('{VALUE}', entities.encode(params[k])));\n   });\n\n  res.setHeader('Content-Type', 'text/html;charset=UTF-8');\n  res.setHeader('Cache-Control', 'no-cache, no-store');\n  res.setHeader('Pragma', 'no-cache');\n\n  return res.end(html.replace('{ACTION}', entities.encode(txn.redirectURI)).replace('{INPUTS}', inputs.join('')));\n};\n\nexports.validate = function(txn) {\n  if (!txn.redirectURI) { throw new AuthorizationError('Unable to issue redirect for OAuth 2.0 transaction', 'server_error'); }\n};\n", "{\n  \"name\": \"oauth2orize-fprm\",\n  \"version\": \"0.2.0\",\n  \"description\": \"Form Post response mode support for OAuth2orize.\",\n  \"keywords\": [\n    \"oauth2\",\n    \"form_post\"\n  ],\n  \"author\": {\n    \"name\": \"Jared Hanson\",\n    \"email\": \"jaredhanson@gmail.com\",\n    \"url\": \"http://www.jaredhanson.net/\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/jaredhanson/oauth2orize-fprm.git\"\n  },\n  \"bugs\": {\n    \"url\": \"http://github.com/jaredhanson/oauth2orize-fprm/issues\"\n  },\n  \"license\": \"MIT\",\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"http://opensource.org/licenses/MIT\"\n    }\n  ],\n  \"main\": \"./lib\",\n  \"dependencies\": {\n    \"html-entities\": \"1.2.1\"\n  },\n  \"devDependencies\": {\n    \"make-node\": \"0.3.x\",\n    \"mocha\": \"2.x.x\",\n    \"chai\": \"2.x.x\",\n    \"chai-connect-middleware\": \"0.3.x\"\n  },\n  \"engines\": {\n    \"node\": \"*\"\n  },\n  \"scripts\": {\n    \"test\": \"node_modules/.bin/mocha --reporter spec --require test/bootstrap/node test/*.test.js\"\n  }\n}\n", "/* global describe, it, expect */\n\nvar chai = require('chai');\nvar fprm = require('..');\nvar AuthorizationError = require('../lib/errors/authorizationerror');\n\ndescribe('oauth2orize-fprm', function() {\n  \n  it('should export function', function() {\n    expect(fprm).to.be.an('function');\n  });\n  \n  describe('responding to a request', function() {\n    var response, err;\n\n    before(function(done) {\n      chai.connect.use(function(req, res) {\n          var params = {\n            state: req.oauth2.req.state,\n            id_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJzdWIiOiJqb2huIiw\\\niYXVkIjoiZmZzMiIsImp0aSI6ImhwQUI3RDBNbEo0c2YzVFR2cllxUkIiLC\\\nJpc3MiOiJodHRwczpcL1wvbG9jYWxob3N0OjkwMzEiLCJpYXQiOjEzNjM5M\\\nDMxMTMsImV4cCI6MTM2MzkwMzcxMywibm9uY2UiOiIyVDFBZ2FlUlRHVE1B\\\nSnllRE1OOUlKYmdpVUciLCJhY3IiOiJ1cm46b2FzaXM6bmFtZXM6dGM6U0F\\\nNTDoyLjA6YWM6Y2xhc3NlczpQYXNzd29yZCIsImF1dGhfdGltZSI6MTM2Mz\\\nkwMDg5NH0.c9emvFayy-YJnO0kxUNQqeAoYu7sjlyulRSNrru1ySZs2qwqq\\\nwwq-Qk7LFd3iGYeUWrfjZkmyXeKKs_OtZ2tI2QQqJpcfrpAuiNuEHII-_fk\\\nIufbGNT_rfHUcY3tGGKxcvZO9uvgKgX9Vs1v04UaCOUfxRjSVlumE6fWGcq\\\nXVEKhtPadj1elk3r4zkoNt9vjUQt9NGdm1OvaZ2ONprCErBbXf1eJb4NW_h\\\nnrQ5IKXuNsQ1g9ccT5DMtZSwgDFwsHMDWMPFGax5Lw6ogjwJ4AQDrhzNCFc\\\n0uVAwBBb772-86HpAkGWAKOK-wTC6ErRTcESRdNRe0iKb47XRXaoz5acA'\n          };\n        \n          fprm(req.oauth2, res, params);\n        })\n        .req(function(req) {\n          req.oauth2 = {};\n          req.oauth2.redirectURI = 'https://client.example.org/callback';\n          req.oauth2.req = { state: 'DcP7csa3hMlvybERqcieLHrRzKBra' };\n        })\n        .end(function(res) {\n          response = res;\n          done();\n        })\n        .dispatch();\n    });\n    \n    it('should respond with headers', function() {\n      expect(response.getHeader('Content-Type')).to.equal('text/html;charset=UTF-8');\n      expect(response.getHeader('Cache-Control')).to.equal('no-cache, no-store');\n      expect(response.getHeader('Pragma')).to.equal('no-cache');\n    });\n    \n    it('should respond with body', function() {\n      expect(response.body).to.equal('<html>\\\n<head><title>Submit This Form</title></head>\\\n<body onload=\\\"javascript:document.forms[0].submit()\\\">\\\n<form method=\\\"post\\\" action=\\\"https://client.example.org/callback\\\">\\\n<input type=\\\"hidden\\\" name=\\\"state\\\" value=\\\"DcP7csa3hMlvybERqcieLHrRzKBra\\\"/>\\\n<input type=\\\"hidden\\\" name=\\\"id_token\\\" value=\\\"eyJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJzdWIiOiJqb2huIiwiYXVkIjoiZmZzMiIsImp0aSI6ImhwQUI3RDBNbEo0c2YzVFR2cllxUkIiLCJpc3MiOiJodHRwczpcL1wvbG9jYWxob3N0OjkwMzEiLCJpYXQiOjEzNjM5MDMxMTMsImV4cCI6MTM2MzkwMzcxMywibm9uY2UiOiIyVDFBZ2FlUlRHVE1BSnllRE1OOUlKYmdpVUciLCJhY3IiOiJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3NlczpQYXNzd29yZCIsImF1dGhfdGltZSI6MTM2MzkwMDg5NH0.c9emvFayy-YJnO0kxUNQqeAoYu7sjlyulRSNrru1ySZs2qwqqwwq-Qk7LFd3iGYeUWrfjZkmyXeKKs_OtZ2tI2QQqJpcfrpAuiNuEHII-_fkIufbGNT_rfHUcY3tGGKxcvZO9uvgKgX9Vs1v04UaCOUfxRjSVlumE6fWGcqXVEKhtPadj1elk3r4zkoNt9vjUQt9NGdm1OvaZ2ONprCErBbXf1eJb4NW_hnrQ5IKXuNsQ1g9ccT5DMtZSwgDFwsHMDWMPFGax5Lw6ogjwJ4AQDrhzNCFc0uVAwBBb772-86HpAkGWAKOK-wTC6ErRTcESRdNRe0iKb47XRXaoz5acA\\\"/>\\\n</form>\\\n</body>\\\n</html>');\n    });\n  });\n\n  describe('responding to a malformed request', function() {\n    var response, err;\n\n    before(function(done) {\n      chai.connect.use(function(req, res) {\n          var params = {\n            client_id: '\"></a>bxD15c32DJhz9XagFx5gniWLH02IzAKK',\n            scope: '\"></a>openid email user_metadata',\n            response_mode: '\"></a>form_post',\n            state: req.oauth2.req.state,\n            id_token: '\"></a>eyJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJzdWIiOiJqb2huIiw'\n          };\n\n          fprm(req.oauth2, res, params);\n        })\n        .req(function(req) {\n          req.oauth2 = {};\n          req.oauth2.redirectURI = 'https://client.example.org/callback?id=\"><a>';\n          req.oauth2.req = { state: '\"></a>DcP7csa3hMlvybERqcieLHrRzKBra' };\n        })\n        .end(function(res) {\n          response = res;\n          done();\n        })\n        .dispatch();\n    });\n\n    it('should sanitize html characters within input fields', function() {\n      expect(response.body).to.equal('<html><head><title>Submit This Form</title>\\\n</head><body onload=\"javascript:document.forms[0].submit()\">\\\n<form method=\"post\" action=\"https://client.example.org/callback?id=&quot;&gt;&lt;a&gt;\">\\\n<input type=\"hidden\" name=\"client_id\" value=\"&quot;&gt;&lt;/a&gt;bxD15c32DJhz9XagFx5gniWLH02IzAKK\"/>\\\n<input type=\"hidden\" name=\"scope\" value=\"&quot;&gt;&lt;/a&gt;openid email user_metadata\"/>\\\n<input type=\"hidden\" name=\"response_mode\" value=\"&quot;&gt;&lt;/a&gt;form_post\"/>\\\n<input type=\"hidden\" name=\"state\" value=\"&quot;&gt;&lt;/a&gt;DcP7csa3hMlvybERqcieLHrRzKBra\"/>\\\n<input type=\"hidden\" name=\"id_token\" value=\"&quot;&gt;&lt;/a&gt;eyJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJzdWIiOiJqb2huIiw\"/>\\\n</form></body></html>');\n    });\n  });\n\n  describe('validation', function() {\n    it('should not throw if no redirect URI', function() {\n      expect(function() {\n        fprm.validate({ redirectURI: 'https://client.example.org/callback' });\n      }).to.not.throw();\n    });\n    \n    it('should throw if no redirect URI', function() {\n      expect(function() {\n        fprm.validate({});\n      }).to.throw(AuthorizationError, 'Unable to issue redirect for OAuth 2.0 transaction');\n    });\n  });\n  \n});\n"], "fixing_code": ["var XmlEntities = require('html-entities').XmlEntities;\nvar entities = new XmlEntities();\nvar AuthorizationError = require('./errors/authorizationerror');\n\n/**\n* Authorization Response parameters are encoded as HTML form values that are auto-submitted in the User Agent, \n* and thus are transmitted via the HTTP POST method to the Client, with the result parameters being encoded in \n* the response body using the application/x-www-form-urlencoded format. The action attribute of the form MUST be \n* the Client's Redirection URI. The method of the form attribute MUST be POST.\n* Any technique supported by the User Agent MAY be used to cause the submission of the form, and any form content \n* necessary to support this MAY be included, such as submit controls and client-side scripting commands. However, \n* the Client MUST be able to process the message without regard for the mechanism by which the form submission was \n* initiated. (http://openid.net/specs/oauth-v2-form-post-response-mode-1_0-01.html)\n**/\n\nvar input = '<input type=\"hidden\" name=\"{NAME}\" value=\"{VALUE}\"/>';\nvar html = '<html>' +\n  '<head><title>Submit This Form</title></head>' +\n  '<body onload=\"javascript:document.forms[0].submit()\">' +\n    '<form method=\"post\" action=\"{ACTION}\">' +\n      '{INPUTS}' +\n    '</form>' +\n  '</body>' +\n'</html>';\n\nexports = module.exports = function (txn, res, params) {\n  var inputs = [];\n  \n  Object.keys(params).forEach(function (k) {\n    var encoded = params[k];\n    if (typeof params[k] === 'string') {\n      encoded = entities.encode(params[k]);\n    }\n\n    inputs.push(input.replace('{NAME}', k).replace('{VALUE}', encoded));\n   });\n\n  res.setHeader('Content-Type', 'text/html;charset=UTF-8');\n  res.setHeader('Cache-Control', 'no-cache, no-store');\n  res.setHeader('Pragma', 'no-cache');\n\n  return res.end(html.replace('{ACTION}', entities.encode(txn.redirectURI)).replace('{INPUTS}', inputs.join('')));\n};\n\nexports.validate = function(txn) {\n  if (!txn.redirectURI) { throw new AuthorizationError('Unable to issue redirect for OAuth 2.0 transaction', 'server_error'); }\n};\n", "{\n  \"name\": \"oauth2orize-fprm\",\n  \"version\": \"0.2.1\",\n  \"description\": \"Form Post response mode support for OAuth2orize.\",\n  \"keywords\": [\n    \"oauth2\",\n    \"form_post\"\n  ],\n  \"author\": {\n    \"name\": \"Jared Hanson\",\n    \"email\": \"jaredhanson@gmail.com\",\n    \"url\": \"http://www.jaredhanson.net/\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/jaredhanson/oauth2orize-fprm.git\"\n  },\n  \"bugs\": {\n    \"url\": \"http://github.com/jaredhanson/oauth2orize-fprm/issues\"\n  },\n  \"license\": \"MIT\",\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"http://opensource.org/licenses/MIT\"\n    }\n  ],\n  \"main\": \"./lib\",\n  \"dependencies\": {\n    \"html-entities\": \"1.2.1\"\n  },\n  \"devDependencies\": {\n    \"make-node\": \"0.3.x\",\n    \"mocha\": \"2.x.x\",\n    \"chai\": \"2.x.x\",\n    \"chai-connect-middleware\": \"0.3.x\"\n  },\n  \"engines\": {\n    \"node\": \"*\"\n  },\n  \"scripts\": {\n    \"test\": \"node_modules/.bin/mocha --reporter spec --require test/bootstrap/node test/*.test.js\"\n  }\n}\n", "/* global describe, it, expect */\n\nvar chai = require('chai');\nvar fprm = require('..');\nvar AuthorizationError = require('../lib/errors/authorizationerror');\n\ndescribe('oauth2orize-fprm', function() {\n  \n  it('should export function', function() {\n    expect(fprm).to.be.an('function');\n  });\n  \n  describe('responding to a request', function() {\n    var response, err;\n\n    before(function(done) {\n      chai.connect.use(function(req, res) {\n          var params = {\n            state: req.oauth2.req.state,\n            id_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJzdWIiOiJqb2huIiw\\\niYXVkIjoiZmZzMiIsImp0aSI6ImhwQUI3RDBNbEo0c2YzVFR2cllxUkIiLC\\\nJpc3MiOiJodHRwczpcL1wvbG9jYWxob3N0OjkwMzEiLCJpYXQiOjEzNjM5M\\\nDMxMTMsImV4cCI6MTM2MzkwMzcxMywibm9uY2UiOiIyVDFBZ2FlUlRHVE1B\\\nSnllRE1OOUlKYmdpVUciLCJhY3IiOiJ1cm46b2FzaXM6bmFtZXM6dGM6U0F\\\nNTDoyLjA6YWM6Y2xhc3NlczpQYXNzd29yZCIsImF1dGhfdGltZSI6MTM2Mz\\\nkwMDg5NH0.c9emvFayy-YJnO0kxUNQqeAoYu7sjlyulRSNrru1ySZs2qwqq\\\nwwq-Qk7LFd3iGYeUWrfjZkmyXeKKs_OtZ2tI2QQqJpcfrpAuiNuEHII-_fk\\\nIufbGNT_rfHUcY3tGGKxcvZO9uvgKgX9Vs1v04UaCOUfxRjSVlumE6fWGcq\\\nXVEKhtPadj1elk3r4zkoNt9vjUQt9NGdm1OvaZ2ONprCErBbXf1eJb4NW_h\\\nnrQ5IKXuNsQ1g9ccT5DMtZSwgDFwsHMDWMPFGax5Lw6ogjwJ4AQDrhzNCFc\\\n0uVAwBBb772-86HpAkGWAKOK-wTC6ErRTcESRdNRe0iKb47XRXaoz5acA'\n          };\n        \n          fprm(req.oauth2, res, params);\n        })\n        .req(function(req) {\n          req.oauth2 = {};\n          req.oauth2.redirectURI = 'https://client.example.org/callback';\n          req.oauth2.req = { state: 'DcP7csa3hMlvybERqcieLHrRzKBra' };\n        })\n        .end(function(res) {\n          response = res;\n          done();\n        })\n        .dispatch();\n    });\n    \n    it('should respond with headers', function() {\n      expect(response.getHeader('Content-Type')).to.equal('text/html;charset=UTF-8');\n      expect(response.getHeader('Cache-Control')).to.equal('no-cache, no-store');\n      expect(response.getHeader('Pragma')).to.equal('no-cache');\n    });\n    \n    it('should respond with body', function() {\n      expect(response.body).to.equal('<html>\\\n<head><title>Submit This Form</title></head>\\\n<body onload=\\\"javascript:document.forms[0].submit()\\\">\\\n<form method=\\\"post\\\" action=\\\"https://client.example.org/callback\\\">\\\n<input type=\\\"hidden\\\" name=\\\"state\\\" value=\\\"DcP7csa3hMlvybERqcieLHrRzKBra\\\"/>\\\n<input type=\\\"hidden\\\" name=\\\"id_token\\\" value=\\\"eyJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJzdWIiOiJqb2huIiwiYXVkIjoiZmZzMiIsImp0aSI6ImhwQUI3RDBNbEo0c2YzVFR2cllxUkIiLCJpc3MiOiJodHRwczpcL1wvbG9jYWxob3N0OjkwMzEiLCJpYXQiOjEzNjM5MDMxMTMsImV4cCI6MTM2MzkwMzcxMywibm9uY2UiOiIyVDFBZ2FlUlRHVE1BSnllRE1OOUlKYmdpVUciLCJhY3IiOiJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3NlczpQYXNzd29yZCIsImF1dGhfdGltZSI6MTM2MzkwMDg5NH0.c9emvFayy-YJnO0kxUNQqeAoYu7sjlyulRSNrru1ySZs2qwqqwwq-Qk7LFd3iGYeUWrfjZkmyXeKKs_OtZ2tI2QQqJpcfrpAuiNuEHII-_fkIufbGNT_rfHUcY3tGGKxcvZO9uvgKgX9Vs1v04UaCOUfxRjSVlumE6fWGcqXVEKhtPadj1elk3r4zkoNt9vjUQt9NGdm1OvaZ2ONprCErBbXf1eJb4NW_hnrQ5IKXuNsQ1g9ccT5DMtZSwgDFwsHMDWMPFGax5Lw6ogjwJ4AQDrhzNCFc0uVAwBBb772-86HpAkGWAKOK-wTC6ErRTcESRdNRe0iKb47XRXaoz5acA\\\"/>\\\n</form>\\\n</body>\\\n</html>');\n    });\n  });\n\n  describe('responding to a malformed request', function() {\n    var response, err;\n\n    before(function(done) {\n      chai.connect.use(function(req, res) {\n          var params = {\n            client_id: '\"></a>bxD15c32DJhz9XagFx5gniWLH02IzAKK',\n            scope: '\"></a>openid email user_metadata',\n            response_mode: '\"></a>form_post',\n            state: req.oauth2.req.state,\n            id_token: '\"></a>eyJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJzdWIiOiJqb2huIiw',\n            expires_in: 86400\n          };\n\n          fprm(req.oauth2, res, params);\n        })\n        .req(function(req) {\n          req.oauth2 = {};\n          req.oauth2.redirectURI = 'https://client.example.org/callback?id=\"><a>';\n          req.oauth2.req = { state: '\"></a>DcP7csa3hMlvybERqcieLHrRzKBra' };\n        })\n        .end(function(res) {\n          response = res;\n          done();\n        })\n        .dispatch();\n    });\n\n    it('should sanitize html characters within input fields', function() {\n      expect(response.body).to.equal('<html><head><title>Submit This Form</title>\\\n</head><body onload=\"javascript:document.forms[0].submit()\">\\\n<form method=\"post\" action=\"https://client.example.org/callback?id=&quot;&gt;&lt;a&gt;\">\\\n<input type=\"hidden\" name=\"client_id\" value=\"&quot;&gt;&lt;/a&gt;bxD15c32DJhz9XagFx5gniWLH02IzAKK\"/>\\\n<input type=\"hidden\" name=\"scope\" value=\"&quot;&gt;&lt;/a&gt;openid email user_metadata\"/>\\\n<input type=\"hidden\" name=\"response_mode\" value=\"&quot;&gt;&lt;/a&gt;form_post\"/>\\\n<input type=\"hidden\" name=\"state\" value=\"&quot;&gt;&lt;/a&gt;DcP7csa3hMlvybERqcieLHrRzKBra\"/>\\\n<input type=\"hidden\" name=\"id_token\" value=\"&quot;&gt;&lt;/a&gt;eyJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJzdWIiOiJqb2huIiw\"/>\\\n<input type=\"hidden\" name=\"expires_in\" value=\"86400\"/>\\\n</form></body></html>');\n    });\n  });\n\n  describe('validation', function() {\n    it('should not throw if no redirect URI', function() {\n      expect(function() {\n        fprm.validate({ redirectURI: 'https://client.example.org/callback' });\n      }).to.not.throw();\n    });\n    \n    it('should throw if no redirect URI', function() {\n      expect(function() {\n        fprm.validate({});\n      }).to.throw(AuthorizationError, 'Unable to issue redirect for OAuth 2.0 transaction');\n    });\n  });\n  \n});\n"], "filenames": ["lib/index.js", "package.json", "test/package.test.js"], "buggy_code_start_loc": [30, 3, 77], "buggy_code_end_loc": [31, 4, 102], "fixing_code_start_loc": [30, 3, 77], "fixing_code_end_loc": [36, 4, 105], "type": "CWE-79", "message": "index.js in oauth2orize-fprm before 0.2.1 has XSS via a crafted URL.", "other": {"cve": {"id": "CVE-2018-11647", "sourceIdentifier": "cve@mitre.org", "published": "2018-06-17T16:29:00.330", "lastModified": "2018-08-09T13:22:21.527", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "index.js in oauth2orize-fprm before 0.2.1 has XSS via a crafted URL."}, {"lang": "es", "value": "index.js en oauth2orize-fprm en versiones anteriores a la 0.2.1 tiene Cross-Site Scripting (XSS) mediante una URL manipulada."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:oauth2orize-fprm_project:oauth2orize-fprm:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.2.1", "matchCriteriaId": "B1D048FE-82DC-4464-8DEE-1B0975D6A78A"}]}]}], "references": [{"url": "https://github.com/jaredhanson/oauth2orize-fprm/blob/master/SECURITY-NOTICE.md", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/jaredhanson/oauth2orize-fprm/commit/2bf9faee787eb004abbdfb6f4cc2fb06653defd5", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/jaredhanson/oauth2orize-fprm/commit/2bf9faee787eb004abbdfb6f4cc2fb06653defd5"}}