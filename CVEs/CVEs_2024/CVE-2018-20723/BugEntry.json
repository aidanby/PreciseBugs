{"buggy_code": ["Cacti CHANGELOG\n\n-issue#2184: html_host_filter() does not handle host_id consequently\n-issue#2188: SNMP timeout errors are being duplicated\n-issue#2191: i18n_themes is not properly primed in global_arrays.php\n-issue#2202: Can't create more than one graph with add_graphs.php from one template\n-issue#2207: Removing Graph Template does not Remove Data Query Associations\n-issue#2212: Stored XSS in \"Website Hostname\" field\n-feature: Update phpseclib to version 2.0.12\n\n1.2.0 Beta 4\n-issue#2186: Boost generates invalid SQL during on demand update\n-issue#2182: Graph View missing 'html_graph_template_multiselect()' function\n\n1.2.0 Beta 3\n-issue#2002: api_plugin_db_table_create should support non-string defaults\n-issue#2126: api_device.php generates undefined function poller_push_to_remote_db_connect()\n-issue#2127: Unable to save error when duplicating graph\n-issue#2135: api_tree_lock() and api_tree_unlock() forcing redirection incorrectly\n-issue#2143: export.php Illegal string offset 'method'\n-issue#2144: Device Management \"Status\" column does not sort properly\n-issue#2152: When editing a device, should show disable/enable option\n-issue#2153: Utilities page issues the wrong hook for tabs\n-issue#2163: LDAP functions are not consistent\n-issue#2164: Login page does not remember selected realm\n-issue#2171: datepicker and timepick translation not available\n-issue#2178: Header/Footer included more than once\n-issue: Unable to display user profile tabs\n-feature:#2173: Introduce Device and Graph Template Caching to Speed UI\n-feature: Update JavaScript library jstree.js to 3.3.7\n\n1.2.0 Beta 1\n-security#1882: Bypass output validation in select cases\n-issue#186: Cacti does not support jQueryUI 1.12.x\n-issue#187: Remove the use of jQuery Migrate plugin\n-issue#454: Cacti Re-Index does not resolve index changes properly during re-index \n-issue#983: Import Template Preview is misleading\n-issue#1072: CVE-2009-4112 with regard to exploiting Data Input methods\n-issue#1097: When copying template user, enable that user, also template users should be disabled by default\n-issue#1174: Disable drag and drop when tree is not in edit mode\n-issue#1200: Aggregate Graphs can not include some classes of COMMENT\n-issue#1298: Prevent system running if system log is not writable\n-issue#1350: When switching an Automation Tree Rule's leaf type, remove invalid Automation Rule Items\n-issue#1383: CSRF Timeout does not obey session timeout\n-issue#1408: Update SQL / Backtrace to use new clean_up_lines() function\n-issue#1414: DSSTATS reports incorrectly that a data source does not exist\n-issue#1420: Debian test suite reports issues \n-issue#1421: Fix issue when SQL had all bad modes, missing variable warning was generated\n-issue#1426: Fix issue where remote poller was not using unique filenames when attempting to verify files\n-issue#1437: Plugin install hover message sometimes shows line breaks rather than formatted text\n-issue#1473: Recovery Date overwritten by subsequent checks\n-issue#1494: Unable to Deep Link/Bookmark Trees\n-issue#1454: When using oid_regexp_parse, filter indexes to those that match\n-issue#1503: Undefined function clearstatscache in DSSTATS\n-issue#1507: When saving graph settings from the graph page, the graph template id should not be included\n-issue#1510: New Graphs Undefined Variable $graph_template_name\n-issue#1521: Force boost to be enabled when there are Remote Data Collectors\n-issue#1528: Saving a device can result in WARNINGS related to string vs array handling\n-issue#1529: Allow Aggregate Graphs to Sum Bandwidth and Percentile COMMENTS\n-issue#1543: Graph Preview appends header=false too many times\n-issue#1553: Poller does not set rrd_step_counter correctly if no steps taken\n-issue#1559: CLI Output Issues due to over escaping\n-issue#1560: Warning that escapeshellarg() is escaping a null\n-issue#1567: Technical support - add notification if Cacti and Spine version is different\n-issue#1574: User templates are not correctly being applied\n-issue#1589: Installer now checks that the temporary folder is writable\n-issue#1590: User Admin generates SQL error if user is not part of any groups\n-issue#1601: Aggregate Graphs can not include some classes of COMMENT\n-issue#1602: PHP ERROR: Call to undefined function api_data_source_cache_crc_update()\n-issue#1604: Failed to connect to remote collector\n-issue#1606: Boost debug log not functional\n-issue#1607: Boost next run time occurs in the past\n-issue#1608: Possible boost race conditions\n-issue#1609: Remote pollers update 'stats_poller' on main poller\n-issue#1617: Editing a data query results in missing $header variable\n-issue#1621: Realtime Popup can cause automatic logout\n-issue#1626: httpd-error.log have message about Fontconfig\n-issue#1634: Default snmp quick print setting resulting in false poller ASSERTS on some php releases\n-issue#1651: Check temporary folder has write access during import\n-issue#1655: Correct Cacti to handle new MySQL 8.0 reserved word `system`\n-issue#1658: Devices drop down should be filtered by Site\n-issue#1660: Reports based upon Tree don't maintain graph order\n-issue#1665: Must change password not working for local users when main realm is not local\n-issue#1669: Console log header grammar issue\n-issue#1674: Threads and Processes values not migrated to Poller table during upgrade\n-issue#1676: Allow automation discovery to add the same sysname on different hosts\n-issue#1682: Slow Select Statement lib/api_automation.php\n-issue#1689: Technical Support's RRDTool version should show detected RRD version\n-issue#1690: Report a warning if the default collation is not utf8mb4_unicode_ci\n-issue#1700: Mail sent without auth causes errors to appear in logs\n-issue#1710: RRDtool create command causes first update to fail\n-issue#1721: Console Side Bar not correct on first login\n-issue#1723: die() messages should include PHP_EOF for better logging\n-issue#1726: Poor page performance editing a Graphs Graph Items\n-issue#1746: Poller with no hosts does not exit until timeout is reached\n-issue#1761: Graph Management page shows bogus template names\n-issue#1783: Browser Back button still does not working\n-issue#1796: Import: Fixed handling of references to objects not included in file\n-issue#1799: Default User log sort should be date descending\n-issue#1810: Correct SQL errors with authentication set to no authentication\n-issue#1839: Dummy cosmetic bug on down device selection option\n-issue#1841: Data Source Stats table not properly migrated from pre 1.x Cacti plugin\n-issue#1849: SNMPAgent not sending traps\n-issue#1852: Reports Preview/Mails show no graphs\n-issue#1889: Insecure $ENV{ENV} which running setgid\n-issue#1901: Upgrade from 0.8.8h fails on external_links statement\n-issue#1921: Data Query XML field method 'rewrite_index' does not correctly query for value\n-issue#1926: Deselecting items should present warning or disable GO button\n-issue#1948: Device Template should warn about need to re-sync\n-issue#1953: set_default_action() should warn if more than one action provided\n-issue#1973: SpikeKill Menu does not display properly\n-issue#1976: Default admin permissions do not allow everything\n-issue#1982: Certain hooks should occur within api functions rather than UI functions\n-issue#2012: For kernel 3.2+, \"Linux - Memory - Free\" should grep for \"MemAvailable:\", not \"MemFree:\"\n-issue#2085: CLOG Regex Parser does not verify registered function exists\n-issue: Move Graph removal function to Graph API\n-issue: Fix issue with display_custom_error_message() causing problem with system error message handling\n-issue: Graph List View was not fully responsive\n-issue: Typo in Dutch translations when an error occurred while downgrading\n-issue: Verify all Fields not working due to Cacti 1.x upgrade error\n-issue: On the Data Sources page, if there is no filtered Device and a Data Source is edited, device association is lost\n-feature#122: Support a Site Branch Type\n-feature#289: Allow external nologin access for Realtime Graphs\n-feature#553: Aggregated graph does not belong to host\n-feature#614: Duplicate Data Input Methods\n-feature#948: Every time when creating new graph Cacti creates new datasource\n-feature#973: Obtain users email and full name from ldap \n-feature#1060: Design Enhancement for Large scale Cacti Implementations\n-feature#1347: Update automation logging to work better\n-feature#1142: Add Site dropdown to the Graphs and Data Source pages\n-feature#1184: Improve Data Input Methods editability and message handling\n-feature#1282: Email notification for Automation Network discovery process\n-feature#1395: Ensure messages have each new line keep the same prefix in cacti_log()\n-feature#1399: Allow 'requires' to include version against a plugin\n-feature#1400: User settings should have checkbox to enable overriding of global settings\n-feature#1422: Automatically select the next unused data input field when clicking add on data input method\n-feature#1428: Graphs: Add more information to error image\n-feature#1505: Allow Device Edit from Graphs page\n-feature#1527: Update Fontawesome from 4.7 to 5.0.10\n-feature#1580: Support Drag & Drop for Report Items\n-feature#1581: Allow Mass Adding of Graphs to Reports\n-feature#1584: Allow theme selection when installing\n-feature#1588: Check that PHP can run a test file\n-feature#1597: Ensure synchronised files have same attributes as originals\n-feature#1593: Allow External links to auto refresh\n-feature#1610: Script STDERR logging\n-feature#1628: Allow the User to define a initial Network Discovery during Setup\n-feature#1670: Improve Graph Management to show type of source for a graph\n-feature#1671: Duplicate Graph Template does not duplicate Data Query Graph Template Mappings\n-feature#1677: Default Tree nodes sorting to be inherited\n-feature#1692: Separate option for logging Input Validation issues\n-feature#1691: Add a 'Copy graph' option to context menu of graphs\n-feature#1703: Provide i18n for the graph right context menu\n-feature#1708: Automation: Email settings should have network level overrides\n-feature#1709: Dont warn when attempting to make updates in the past\n-feature#1711: Support specifying MySQL SSL file paths in the database API\n-feature#1731: Warn a user if they are going off page and there are unsaved changes\n-feature#1734: Visual enhancements to RRD error message when file not found\n-feature#1763: Automatic refresh for Time Graph View - Enhancement\n-feature#1806: Control low level debug routines via config.php\n-feature#1819: Removing Graphs using CLI\n-feature#1969: Allow linking to graph previews of a host by it's external id\n-feature#2006: Data Source Profile RRAs: Aggregation Level and Default Timespan for a Decade long graph\n-feature: New Install/Upgrade user permission to limit access to being able to upgrade\n-feature: Make Graph and Data Source suggested naming more efficient\n-feature: Make tree editing responive\n-feature: Add support for DDERIVE and DCOUNTER to Cacti\n-feature: Add Timezone support for Remote Data Collectors\n-feature: Add One Minute Sampling to the default Data Source Profiles\n-feature: Allow Top tabs to be Glyphs or Text or both\n-feature: Update JavaScript library c3.js to version 0.6.8\n-feature: Update JavaScript library d3.js to version 5.7.0\n-feature: Update JavaScript library jquery.tablesorter.js to version 2.30.7\n-feature: Update JavaScript library jquery-migrate.js to 3.0.1\n-feature: Update JavaScript library screenfull.js to 3.3.3\n-feature: Update JavaScript library jstree.js to 3.3.6\n-feature: Update JavaScript library Chart.js to 2.7.3\n-feature: Update phpseclib to version 2.0.11\n-feature: Update JavaScript library jquery.js to 3.3.1\n-feature: Make Top Tabs use Ajax Callback\n-feature: Make all user settings dynamic and allow resetting to default.\n-feature: Change password page provides visible confirmation of password rules\n-feature: Allow ASCII filepath paths to not be found on settings save\n-feature: Provide option to debug width errors where output exceeds column width\n-feature: Allow snmpagent to be disabled for very large installs\n-feature: Inform the primary Cacti administrator of problems by Email\n-feature: Add Graphs and Data Sources hyperlinks on Device page\n-feature: Do not allow second data source to be added to an SNMP Get data template\n-feature: Allow drill down from Graphs to Data Queries or Templates\n-feature: Allow Adding Aggregate Graphs to a Report \n-feature: Don't allow removal of Data Sources from Data Template once its in use\n-feature: Tree automation is now defaulted to on for new install\n-feature: Allow Import/Export to be hookable\n-feature: Add a Timeout setting for Remote Agent calls\n-feature: Make it easy to find Data Query based graphs that have lost indexes\n-feature: Big Spanish translation update plus massive QA fixes\n\n1.1.38\n-issue#1501: cmd.php poller not stripping alpha from snmp get values\n-issue#1515: Special characters not rendered properly in settings\n-issue#1530: Inconsistent behaviour handling blank Field Name/Value when editing data query suggested values\n-issue#1537: Numeric validation not ignoring blank elements\n\n1.1.37\n-issue#274: Allow Realtime Graph Popup Mode\n-issue#1405: When Data Query columns are wide, they cause rendering issues\n-issue#1414: DSSTATS reports incorrectly that a data source does not exist\n-issue#1419: Filtering log results in errors in the log\n-issue#1420: PHP NOTICE editing cdef and vdef items\n-issue#1421: CLI upgrade_database.php PHP Warning on execution\n-issue#1426: Remote poller erroring attempting to verify files\n-issue#1432: Delete confirmation does not disappear\n-issue#1443: Partial Save warnings under Settings -> Mail/Reporting/DNS\n-issue#1447: CLI audit_database.php not detecting database name, and failed to create audit tables when run fresh\n-issue#1453: CLI add_graph.php not allowing title to be set\n-issue#1456: Increase minimum php version maintaining support for RHEL6\n-issue#1457: Path-Based Cross-Site Scripting (XSS) issues\n-issue#1458: Error in logs when creating new graphs\n-issue#1459: Automation filter not applied correctly\n-issue#1461: Setting output_format on input type causes no values to be returned\n-issue#1464: Poller stuck in infinitely loop causing excess logging\n-issue#1466: No scrollbars in mobile browsers\n-issue#1468: Increase max length of host.snmp_sysObjectID column\n-issue#1471: Undefined function found in global_languages.php\n-issue#1472: Change Device Options - Style needs updating\n-issue#1474: Check possibility for creation of temporary tables on install\n-issue#1487: Undefined constant in ldap.php\n-issue#1483: Create New Graphs - Paw Styling Issue\n-issue#1493: Can't create tree branches with '#' sign\n-feature#1489: Add ability to use parts of OID as value via regex\n-feature: Updated Chinese Simplified translations\n-feature: Updated Dutch translations\n-feature: JavaScript library Chart.js updated 2.7.2 \n-feature: Allow snmp formatting functions to detect UTF-8 output\n\n1.1.36\n-issue#934: Template names missing in graph management list\n-issue#1211: CDEF and VDEF Item Edit do not use correct procedures\n-issue#1250: Language support does not support localization properly\n-issue#1331: Log Rotation should occur at midnight on system\n-issue#1334: Console->Users->(Edit) Permissions checkmark descriptions missing\n-issue#1336: Debian test suite reports php error\n-issue#1338: Allow automation to be run in debug mode from GUI\n-issue#1339: First graph of second page does not render\n-issue#1340: Unable to open Time Graph View in new tab\n-issue#1348: Toggle context menu of Zoom\n-issue#1351: Errorimage does not render on systems without GD ttf support\n-issue#1353: New installation without config.php silently throws errors\n-issue#1355: Single tree can have the order of the tree changed\n-issue#1357: Data Profile disable fields shown temporarily as editable\n-issue#1359: Settings page generates error for removed plugin tab\n-issue#1362: DSStats Avg/Peak function broken due to change in RRDtool processing\n-issue#1365: Plugin Management enforce folder name\n-issue#1366: Improve error/info message display\n-issue#1380: Potential failure when updating script type\n-issue#1384: When installing/enabling plugins, current user and admin should get permissions\n-issue#1386: form_selectable_cell() ignores width if no style_or_class is passed\n-issue#1389: Poller is including plugins that are not installed\n-issue#1390: Plugin uninstall should prompt user before removal\n-issue#1396: Prevent installation/uninstallation of a plugin if dependency is present\n-issue#1397: Distinguish between plugin tabs and core tabs in settings\n-issue#1371: Allow dynamic setting of from name when emailing\n-issue: Data Query Cache filter layout more consistent\n-issue: Minor plugin permissions format change\n-issue: Implementation of error handling causes errors creating New Graphs\n-issue: Deprecated DDStats setting removed\n-issue: Graph context menu items are now context aware\n-issue: Validate spine path before allowing enabling of spine\n-issue: Errored settings fields now highlighted correctly on error\n-issue: Add the Default Device to the Default Tree at install time\n-issue: Secpass password verification error message unuseful\n-feature: Searching of SNMP Index in View Data Query Cache now works\n-feature: Presets now have default device Template\n-feature: JavaScript library c3.js updated (v0.4.21) / jstree.js (3.3.5)\n-feature: PHPSecLib updated 2.0.10\n-feature: Updated Dutch translations\n\n1.1.35\n-issue#114: *all_max_peak* percentile calculations incorrect\n-issue#430: Pressing Back often fails to work as expected\n-issue#564: Fail to move items in graph template as desired\n-issue#981: Hyperlinks for Data Profile stats\n-issue#993: Realtime not working on remote pollers for certain data query\n-issue#1244: Errors importing templates with deprecated hashes\n-issue#1251: Allow zoom out through mouse mmiddle button\n-issue#1281: Max OIDs setting is for bulkget and not bulkwalk operations\n-issue#1286: Correct CHUNKED_ENCODING error when retrieving graph with some browsers\n-issue#1306: Graphs are not always refreshed properly\n-issue#1309: Provide meaningful authentication errors in graph_json.php and graph_image.php\n-issue#1310: Return button fails on change password page\n-issue#1315: Realtime not working on local data collector\n-issue#1316: CDEF Item Value dialog does not update creating items\n-issue#1319: Front end + remote poller - connection timeout issue\n-issue#1321: Use RRDtool pipelining functions within DSSTATS\n-issue#1323: Enhance form layout for readability\n-issue#1329: Spelling errors in automation_networks.php\n-issue: Validate regular expressions if specified in add_graphs.php\n-issue: Ensure compression levels are consistent when importing package\n\n1.1.34\n-issue#1040: PHP version 7.2 - ERROR PHP WARNING: sizeof()\n-issue#1195: Improved Javascript error message handling\n-issue#1245: Unable to reorder graph name suggested values\n-issue#1256: Error reporting of custom errors not displayed correctly\n-issue#1257: Boost excessively logging updates\n-issue#1258: cacti.sql updated to match expected schema\n-issue#1260: Tab images fail to render due to TrueType support in PHP GD Module\n-issue#1261: Automatic logout timeout does not apply to web basic authenication\n-issue#1263: CLI utility to validate database schema\n-issue#1266: Inconsistent usage graphWrapper CSS causes odd graph zoom behavior\n-issue#1268: Regex filters not working properly\n-issue#1274: Host CPU script checks value existance to avoid error\n-issue#1275: SNMP v3 authPriv fails to work\n-issue#1287: JSON calls return validation error in HTML format\n-issue#1289: Script Server should output parameter array rather than parameters\n-issue#1292: Chrome to aggressively caches Javascript files\n-issue#1293: Correctly identify if command 'snmpbulkwalk' is available\n-issue#1296: CactiErrorHandler does not ignore PHP suppressed errors\n-issue#1300: Automation discovery : New devices added by automation discovery have empty SNMP community field\n-issue#1302: Automatic logout should not be enforced on login page\n-issue#1304: mib_cache.php file contains unsafe transactions for binary logging\n-feature: CLI utilily to generate and verify file hashes for installed Cacti files\n-feature: Logging links back to appropriate areas for troubleshooting\n-feature: Logging lists filenames in reverse order\n\n1.1.33\n-issue#1253: Automatically generated RRDtool DEF names in Cacti 1.1.32 break existing Graph Templates\n\n1.1.32\n-issue#969: Undefined index: color_id / task_item when viewing graphs\n-issue#1166: Fix typo of 'locale' in global_languages.php\n-issue#1222: Graphs with large number of items causes RRDTool to error\n-issue#1230: PHP Fatal error: Call to undefined function get_max_tree_sequence()\n-issue#1238: SNMP functions fail to handle \"Invalid object identifier\" error\n-issue#1239: Browser console error in layout.js\n-issue#1240: Page layout issues caused by library update\n-issue#1246: Make SNMP Error return more info\n-issue: Missing or corrupted theme files can corrupt user settings\n-issue: Theme may not change until next login\n-issue: Tree edit Tree/Device/Graph drag areas incorrect\n-issue: Make callback error handling compatible with jQuery 3.x\n-issue: Ensure the snmp_error is cleared before every call\n-issue: Indicate unknown error when RRDTool returns no error message\n-feature: Update Javascript library: js.storage.js, d3.js, jquery.js, jquery.tablednd.js, jquery.timepicker.js\n\n1.1.31\n-issue#629: Site reload after delete the last letter in the searchbar\n-issue#1022: Discovery network stuck in \"running\" state does not return results\n-issue#1164: Version compare function fails on major/minor only versions\n-issue#1166: Invalid New User default language selection\n-issue#1175: Automatic logout inconsistent redirect\n-issue#1179: Warn during installation if installing moving to older version\n-issue#1183: Automatically detect missing Theme and use alternate\n-issue#1185: Layout with Graphs having large number of data columns\n-issue#1189: Allow ability to sort tree list by name asc/desc\n-issue#1190: Enabling, Disabling, Uninstalling plugin, you should page refresh\n-issue#1191: Tree sequences were not set or checked\n-issue#1197: Add more collection intervals to Data Source Profiles\n-issue#1206: Display issue with internationalization number format\n-issue#1210: CDEF and VDEF Items can not be properly edited\n-issue#1212: Navigation breadcrumbs fail to handle External links correctly\n-issue#1213: PHPMailer trying TLS despite SMTPSecure setting\n-issue#1215: Show version when installation prompts for license\n-issue#1217: Add ability to view/edit Input/Query when editing Data Template\n-issue: Named colors fail to import on install or upgrade\n-issue: Drag and Drop issues on multiple pages could corrupt sequencing\n-feature: Enhance filter to permit more glyphs for table headers\n-feature: Add a page refresh dropdown to the Automation Networks\n-feature: Enhanced SNMP v3 input forms\n-feature: Allow Trees to be rearranged using Drag and Drop\n-feature: Trap GUI callback errors and present error message\n\n1.1.30\n-issue#1155: Non-secure mail setting not functional due to changes in phpmailer\n-issue#1157: Resolve issue with branch permission api\n-issue#1158: Change CLOG to use regex replacement so line details are not mangled\n-issue#1161: Graph View regex's are not preserved during automatic page refresh\n-issue#1162: Error messages are not display when editing a user\n-issue#1166: Default language was not correctly set when editing a user\n-issue: basename function undefined during upgrade to 1.0.x\n-issue: Storage API and translations required for Change password function\n-issue: ALTER IGNORE still throws an error when attempting to drop the primary key\n-issue: Data Source profile form API generates error when system is half upgraded\n-issue: Resolve issue with importing packages\n-feature: Update package versions for Cacti version 1.1.29\n\n1.1.29\n-issue#871: Allow Nth Percentile and Bandwidth Summation to respect 'Base Value' in template\n-issue#965: Duplicate error message and incorrect error code when using LDAP authentication\n-issue#1084: Graph Tree Branch not properly populating when editing report item\n-issue#1104: Datetime formatting in developer debug mode incorrect\n-issue#1106: Template Filters has empty row\n-issue#1109: URL used in redirection when referrer already has parameters in it\n-issue#1110: Add CPU Total to 'SNMP - Get Processor Information'\n-issue#1111: PHP NOTICE when using LDAP authenication\n-issue#1116: Filters not allowing \"None\" or \"All\" when editing report item\n-issue#1119: Reduced amount of data fetched for CPU usage to just the data used\n-issue#1121: Bandwidth summation not using correct locale\n-issue#1122: Fix issue with local login / potential password problems\n-issue#1128: Resolve php warning when raising messages\n-issue#1130: Fix logging level issue where logs of same level as setting where not logged\n-issue#1131: Make upgrade_database.php use same version compare as /install/ system\n-issue#1133: Fix issues with variable name and debug log\n-issue#1141: When viewing graphs from list view, pagination causes list view filter to be cleared\n-issue#1143: ss_host_cpu.php - Division by zero / Invalid Return Value\n-issue#1146: Installation now checks URI path matchs with configuration option URL_PATH\n-issue: Updated Graph pagenation and filter reset\n-issue: Resolve issues with cacti_version_compare() processing\n-issue: Zoom context menu stays open after zoom out actions\n-issue: Paginator object was not always translated\n\n1.1.28\n-issue#958: User Group Tree permissions not calculated fully\n-issue#959: Issue viewing email reports due to email client decoding problems\n-issue#992: RRDfile naming issues that result from random sorting during export\n-issue#1012: Issue where disabled devices will not appear in Tree editor\n-issue#1044: Handle invalid exclusion regex properly when viewing the log\n-issue#1045: Issue with multiple pages and confirmation dialogs\n-issue#1048: Problem importing vdefs from templates\n-issue#1053: Remote Data Collector now works with https and self signed certificates\n-issue#1055: Errors in data source statistics inserts when invalid output is encountered\n-issue#1057: CVE-2017-16641 - Potential vulnerability in RRDtool functions\n-issue#1058: ICMP Ping to and IPv6 address fails to gather data for ping latency\n-issue#1059: Aggregate item filter should use regular expressions to avoid SQL errors due to flawed filter logic\n-issue#1064: When a Device Template is removed, Automation Templates for that Device Template remain\n-issue#1066: CVE-2017-16660 in remote_agent.php logging function\n-issue#1066: CVE-2017-16661 in view log file\n-issue#1071: CVE-2017-16785 in global_session.php Reflection XSS\n-issue#1074: Boost records get stuck in archive\n-issue#1079: Undefined index in lib/snmpagent.php\n-issue#1085: Undefined function html_log_input_error\n-issue#1086: Rerun data queries in automation process has no effect\n-issue#1087: cli/add_device.php --proxy option does not work with non-snmp devices\n-issue#1088: Set timeout for remote data collector context\n-issue: Minor performance increase in boost processing\n-issue: Poller output not empty not processed correctly on Log tab\n-feature: Timeout to the remote agent for realtime graphs\n-feature: Updated Dutch translations\n-feature: Database update adding additional indexes for increased performance\n-feature: Updated PHPMailer to version 5.2.26\n-feature: Updated phpseclib to version 2.0.7\n\n1.1.27\n-issue#1033: Issues inserting into dsstats table due to legacy data\n-issue#1039: Using html_escape still double escapes.  Use strip_tags instead\n-issue#1040: Resolving compatibility issue with PHP7.2\n\n1.1.26\n-issue#841: --input-fields variable not working with add_graphs.php cli\n-issue#986: Resolve minor appearance problem on Modern theme\n-issue#989: Resolve issue with data input method commands loosing spaces on import\n-issue#1000: add_graphs.php not recognizing input fields\n-issue#1003: Reversing resolution to Issue#995 due to adverse impact to polling times\n-issue#1008: Remove developer debug warning about thumbnail validation\n-issue#1009: Resolving minor issue with cmd_realtime.php and a changing hostname\n-issue#1010: CVE-2017-15194 - Path-Based Cross-Site Scripting (XSS)\n-issue#1027: Confirm that the PHP date.timezone setting is properly set during install\n-issue: Fixed database session handling for PHP 7.1\n-issue: Fixed some missing i18n\n-issue: Fixed typo's\n-feature: Updated Dutch translations\n-feature: Schema changes; Examined queries without key usage and added/changed some keys\n-feature: Some small improvements\n\n1.1.25\n-issue#966: Email still using SMTP security even though set to none\n-issue#995: Redirecting exec_background() to dev null breaks some functions\n-issue#998: Allow removal of external data template and prevent their creation\n-issue: Remove spikes uses wrong variance value from WebGUI\n-issue: Changing filters on log page does not reset to first page\n-issue: Allow manual creation of external data sources once again\n-feature: Updated Dutch translations\n\n1.1.24\n-issue#932: Zoom positioning breaks when you scroll the graph page\n-issue#970: Remote Data Collector Cache Synchronization missing plugin sub-directories\n-issue#980: Resolve issue where a new tree branches refreshs before you have a chance to name it\n-issue#982: Data Source Profile size information not showing properly\n-issue: Long sysDescriptions on automation page cause columns to be hidden\n-issue: Resolve visual issues in Classic theme\n-feature: Allow Resynchronization of Poller Resource Cache\n-feature: Update Spanish Translation\n\n1.1.23\n-issue#963: SQL Errors with snmpagent and MariaDB 10.2\n-issue#964: SQL Mode optimization failing in 1.1.22\n\n1.1.22\n-issue#950: Automation - New graph rule looses name on change\n-issue#952: CSV Export not rendering chinese characters correctly (Second attempt)\n-issue#955: Validation error trying to view graph debug syntax\n-issue: MySQL/MariaDB database sql_mode NO_AUTO_VALUE_ON_ZERO corrupts Cacti database\n-issue: When creating a data source, the data source profile does not default to the system default\n-feature: Enhance table filters to support new Cycle plugin\n-feature: Updated Dutch Translations\n\n1.1.21\n-issue#938: Problems upgrading to 1.1.20 with one table alter statement\n-issue#952: CSV Export not rendering chinese characters correctly\n-issue: Minor alignment issue on tables\n\n1.1.20\n-issue#920: Issue with scrollbars after update to 1.1.19 related to #902\n-issue#921: Tree Mode no longer expands to accomodate full tree item names\n-issue#922: When using LDAP domains some setings are not passed correctly to the Cacti LDAP library\n-issue#923: Warninga in cacti.log are displayed incorrectly\n-issue#926: Update Utilities page to provide more information on rebuilding poller cache\n-issue#927: Minor schema change to support XtraDB Cluster\n-issue#929: Overlapping frames on certain themes\n-issue#931: Aggregate graphs missing from list view\n-issue#933: Aggregate graphs page counter off\n-issue#935: Support utf8 printable in data query inserts\n-issue#936: TimeZone query failure undefined function\n-issue: Taking actions on users does not use callbacks\n-issue: Undefined constant in lib/snmp.php on RHEL7\n-issue: Human readable socket errno's not defined\n-issue: Audit of ping methods tcp, udp, and icmp ping. IPv6 will still not work till php 5.5.4\n\n1.1.19\n-issue#810: Scripts in packages don't match distribution\n-issue#919: Unable to upgrade to 1.1.18\n-issue: Update documentation for minimum PHP 5.4\n\n1.1.18\n-issue#902: Correcting some issues with Console and External Links\n-issue#903: Upgrade pace.js to v0.7.8\n-issue#904: Allow user to hide Graphs from disabled Devices\n-issue#906: Create a separate Realm for Realtime Graphs\n-issue#907: XSS issue in spikekill.php\n-issue#910: Boost last run duration generates an error on new install\n-issue#914: Unable to purge Cacti logfile from System Utilities\n-issue#915: Non-numeric data in ss_host_disk.php\n-issue#916: Resolve display of errors when encountering ldap issues\n-issue#918: Minor XSS and create generalized escape function\n-issue: Resolve JavaScript errors on Login page\n-issue: Resolve JavaScript errors on Permission Denied pages\n-issue: Graphs tab would appear in non-classic even if you did not have permissions\n-feature: Updated dutch translations\n\n1.1.17\n-issue#450: List View to Preview shows no results\n-issue#486: Export Device table results to CSV\n-issue#544: Allow Log Rotation to be other than Daily\n-issue#673: Downtime/Recovery time/date is set incorrectly\n-issue#819: Customized timespans for graphs\n-issue#888: Rebuilding Poller Cache when External data sources are present results in false positive warnings in the log\n-issue#891: Database.php unable to connect to MySQL when using port different than 3306\n-issue#893: Warning messages when duplicating CDEF objects\n-issue#897: Due to browser use of special key, deprecate ctrl-shift-x for clearing filter\n-issue#898: Issue with tcp and udp ping due to file description allocation changes\n-issue: Unable use ipv6 ip addresses for snmp ping in the Cacti GUI\n-issue: Update language of the Rebuild Poller Cache menu pick\n-issue: Broken design for input controls with Sunrise theme\n-issue: Timespan switching not switching to Custom in Preview Mode\n-issue: Log rotation would not occur under certain conditions.  Provide more control over log functions\n-issue: Purge log file always purged the cacti.log, not the selected log\n-issue: Unable to view graphs for errored data sources from Cacti log\n\n1.1.16\n-issue#865: Escape Data Query arguments to prevent issues with special characters\n-issue#872: Can't add device items to graphs generated with no device and no template\n-issue#875: When modifying Realm permissions, realms that are listed multiple times don't stay in sync\n-issue#877: Improving resolution to issue#847 and one additional vulnerability\n-issue#878: Ambiguous language in purge log function\n-issue#879: SQL Error when adding a report item to a report\n-issue#880: Device drop down is limited to 20 devices and lacks a scroll bar\n-issue#885: Graph generated with no device and no graph template forgets device definitions\n-issue#886: Unable to export templates other than Device templates\n-issue: Address additional corner cases around get_order_string usage\n-issue: Data Queries sharing a Data Source can result in poller output table not empty errors\n-issue: Fix Sunrise theme to properly theme multiselect widgets\n-issue: Increase height of multiselects so that more options are visible\n-issue: When a graph is locked, anchor tags are still functional\n-issue: Autocomplete does not populate none-value when the selected value is not set\n\n1.1.15\n-issue: PHP Fatal Exception on upgrade from 1.1.11 or earlier\n-feature: Added test to detect install upgrade code problems\n\n1.1.14\n-issue#849: Unable to select host in Graph Item pick\n-issue#850: Reporting not allowing Non-templated Graphs\n-issue#858: Pagination on SNMP Options wrong\n-issue#860: Network Discovery Subnet Range character limit too small\n-issue#861: The search filter does not support Cyrillic\n-issue#862: Automation - When editing Graph Rules, unable to Change Data Query\n-issue#863: Typo error in auth_login.php for LDAP authentication\n-issue#867: Cross-site scripting (XSS) vulnerability in auth_profile.php\n-issue: Link's not showing in Automation Graph and Tree rules on Sunshine theme\n-issue: Make Templates Export responsive\n-issue: Don't wrap menu glyphs and menuitems\n-issue: The function get_order_string() can fail when encountering reserved word columns\n-issue: Data Query Delete is not using callback\n-feature: Resize Graphs on Graph page to be responsive\n-feature: Make import text a hidden field as it is likely seldom used\n\n1.1.13\n-issue#605: Remove Spikes feature not fully functional\n-issue#814: Allow 'Save' feature from New Graphs\n-issue#837: Using the add_device.php CLI script, you can not 'default' the device threads to other than 1\n-issue#838: CVE-2017-10970: XSS Issue in link.php\n-issue#839: The Database column name 'rows' is a reserved word in MariaDB 10.2+\n-issue#845: External links tabs should appear at the end of the tab view\n-issue#846: Web crawl of Cacti site shows errors in the log\n-issue#847: CVE-2017-10970: XSS Issue in lib/html_form.php.\n-issue#853: Go and Clear buttons do not work in all cases on Graph Rules pages\n-issue: Up/Down arrow titles labeled incorrectly on Tree Management page\n-issue: Make the default Export Type a Device Template\n-issue: Fix SNMPagent MIB cache issues\n-issue: Realtime cache cleanup now only removes rrd and png\n-issue: When redirected from reports, you can receive a validation error\n-feature: updated Dutch language\n\n1.1.12\n-issue#822: Aggregate Graph Items are incorrectly editable\n-issue#823: Allow Filters to be hidden\n-issue#834: Add spacing on graphs pages\n-issue: Uninstalled plugins can not install\n-issue: Location of filter functions in host.php prevent full responsive filter implementation\n-feature: Implement first phase of responsive search filters\n\n1.1.11\n-issue#642: RRA not written or WARNING: Poller Output Table not Empty\n-issue#779: PHP running out of memory due to date format issues\n-issue#791: SeLinux causing problems due to recent enhancement of the Cacti log\n-issue#818: Unable to unselect all SpikeKill templates under settings\n-issue#831: Unable to add devices from automation devices that don't have a snmpSysname\n-issue: incorrect version of pace: fix progess bar\n-issue: date_format(): fix date separator character\n-issue: host.php: fix itemCount en rowCount when result = null\n-issue: clog: fix scandir for systems with limited permissions to log directory\n-issue: clog: fix listing of logfiles\n-issue: Stop New Graphs filter interface from taking too much space\n-issue: Pagination of clog is not done via ajax\n-issue: Unable to dry run spikekill's from Graphs page\n-issue: Default sort order does not highlight on Aggregate Template page\n-issue: Correct display issue with Graph Templates when editing Device\n-issue: External Data Sources show as having poller interval on Data Source page\n-issue: Allow Selecting 'External' as the Data Source Profile when creating non-templated Data Source\n-issue: Remove Field Order on Data Input output data as it's not required\n-issue: Data Templates not using Ajax callbacks to switch Data Sources\n-issue: Visual issue when creating non-templated Aggregate Graphs\n-feature: new skin: Sunrise\n-feature: Provide Non Compatible explanation when a plugin is not compatible\n-feature: Updated Dutch translations\n-feature: Allow Graph Templates with multiple flag to be created repeatedly from Graphs New interface\n-feature: Allow plugins to exclude files and directories from their remote poller synchronization process\n-feature: Add Device Description to View Poller Cache UI\n\n1.1.10\n-issue#779: Resolve random Apache segfault due to recursion\n-issue#786: Unable to create second RRA for a Data Source Profile with collection rate less than 5 minutes\n-issue#789: Unable to Clear Filter due to JavaScript name space collision\n-issue#791: cacti 1.1.9 and clog_webapi.php permission issue\n-issue#794: SQL Error when creating graphs manually\n-issue#798: Cosmetic issue when checking checkboxes in Cacti\n-issue#800: Unchecked loop in lib/html_utility.php causing race condition\n-issue#802: Issue updating device hostname with SNMP data queries\n-issue#803: Issues with utf8mb4 introduced via optimization\n-issue: If the device is down and snmp_sysUpTimeInstance is 0, time in state can be wrong\n-feature: Updated Dutch translations\n\n1.1.9\n-issue#788: Fails on PHP Fatal error if LDAP auth enabled\n\n1.1.8\n-issue#529: Issue on Graph New page with checkbox unselected\n-issue#552: Minor selectable row checkbox issue\n-issue#577: Dragging multiple items causes the tree to refresh too early\n-issue#617: Correct poller timeouts when no devices are associated with active data collector\n-issue#706: Classic external link template images missing\n-issue#726: Undefined variable in upgrade script\n-issue#728: Resolve issues with jQueryUI empty dialogs\n-issue#731: Add class to radio button labels to correct display issue\n-issue#736: Sequence numbers not visible when editing templates using modern theme\n-issue#739: Graph Titles missing on aggregate graphs\n-issue#740: Spacer manipulation broken after update to responsive forms\n-issue#741: Errors in dsstats with very large RRDfiles with more than 60 data sources\n-issue#748: Search results are not cleared on Aggregates\n-issue#754: Default Language for user and system are not set on new installation\n-issue#755: RRDtool Graph Watermark is incorrect\n-issue#756: Resolving some translation issues\n-issue#763: Template Export not functional\n-issue#765: Validation error when viewing Utility View\n-issue#771: Editing a report renders no options after creation\n-issue#780: Preview always shows thumbnails in reports interface\n-issue: Hide Aggregate system cdefs when editing graphs and graph templates\n-issue: Updating Utility View zoom was not updating table data\n-feature#723: Convert Data Source dropdown to autocomplete when editing standalone graphs\n-feature#735: Allow color selection in graphs and templates to be autocomplete\n-feature#753: Preliminary support for RRDtool 1.7.\n-feature: Add function to obtain the current execution user\n-feature: Implement Site timezones as autocomplete for performance\n-feature: For themes other than classic, make color id selection autocomplete\n-feature: CLOG timestamp is now formatted as defined in settings\n-feature: CLOG can show loginformation from rotated logfiles\n\n1.1.7\n-issue#470: Enhance Cacti's SNMP function and Data Query XML, add <output_format>hex|string|guess</output_format>\n-issue#653: Devices with empty sysNames are not added to discovered devices\n-issue#655: Data source not displaying device name\n-issue#658: Scheduled Reports (type \"tree\") not working\n-issue#662: Sending test Email should optionally bypass ping\n-issue#667: In Classic theme initial view of Tree view broken\n-issue#669: Invalid SQL Messages when upgrading to Cacti 1.0.5\n-issue#670: Validation error when you do \"Change Graph Template\" in Cacti\n-issue#672: Cacti unable to enable snmp notification receiver mibs\n-issue#680: Sort order in Time Graph View\n-issue#687: Cacti DB access not compatible with PHP 7\n-issue#696: Multiple issues with snmpagent notification UI\n-issue#699: Add custom error handler for ping functions\n-issue#704: Fix GUI issues for Graphs not belonging to a device\n-issue#707: Back button not working\n-issue#708: Issues finding lib/snmp.php in host disk functions\n-issue#712: Change Graph Template dropdown invalid\n-issue#717: Allow ajax callbacks when adding non-templated graph items\n-issue: Reports were not using Cacti's permission system for checking access\n-issue: User Admin page reported wrong permissions at Tree level missing some i18n as well\n-issue: Short data_name can cause data collection issues\n-feature: Updated Dutch language\n-feature: Updating PHPMailer to 5.2.23\n-feature: Support input-output Data Query types\n-feature: Introduce new get_cacti_version() to reduce database calls on pages\n\n1.1.6\n-issue#620: The table poller_data_template_field_mappings can get out of sync when manipulating data templates\n-issue#622: Can not connect to MySQL over a socket\n-issue#628: Cacti upgrade process is complex and error pront for developers\n-issue#635: Error when saving change to data template\n-issue#637: When displaying tree graphs, use the same layout as preview mode\n-issue#646: When a plugin is disabled during page operations, warnings can appear\n-issue#651: Unable to view cacti log (because of allowed memory size exhausted)\n-issue#657: Error in log when host is down, using icmp and using cmd.php on FreeBSD\n-issue: List for creating a Graph type shows already added Graph Templates\n-issue: Fix and undefined variable on data source page when first creating a manual data source\n-issue: Remove tabindex and other non-required manual aria controls from pages\n-issue: Table type and column type in poller_output table wrong\n-issue: FILTER_VALIDATE_MAC not defined on PHP less than 5.5\n-issue: When changing your language Cacti would not do a full page refresh\n-feature#106: Paginated CLOG and log administration\n-feature: Dutch translations\n-feature: Responsive Graphs page\n-feature: Convert forms from table based to div based for responsive design\n-feature: Better support for phones and tablets\n-feature: Simplified installation code to facilitate easier release cycle\n-feature: Updating Tablesorter to v2.28.9, adding widgets and pager\n\n1.1.5\n-issue#580: Data collection warnings when using cmd.php\n-issue#592: Incorrectly formatted HTML\n-issue#606: Replace <path_php_binary> in data input methods\n-issue#607: Allow draw_menu to specify multiple actions for the same URL\n-issue#608: Spaces adjacent to double quotes are eliminated during data input method import\n-issue#609: Honor the column setting in graph tree view mode\n-issue#610: Change Graph Template action not available\n-issue#611: Cacti Installation Wizard - Spine page incorrect on Windows\n-issue#612: Uncaught Error: Call to a member function row() on a string\n-issue#613: Network Automation, now requires a site or your are unable to save rules\n-issue#615: Data Input field length too short for longer scripts\n-issue#619: Export logging option in settings no longer used\n\n1.1.4\n-issue#524: Reporting not working when Tree branch is device\n-issue#560: Add 'Duplicate' and 'Convert to Graph Template' back to Graph Management page for Advanced mode\n-issue#573: Missing Graph Template dropdown items\n-issue#575: Very large hex strings result in scientific notation that RRDtool rejects\n-issue#579: Problems logging in using nginx web server\n-issue#581: session_start() warnings when manually sending reports\n-issue#584: Issues reporting memory recommendation on utilities page\n-issue#586: Overrunning pollers can cause system load spikes\n-issue#587: Data Collector setting under Network Discovery is not being used\n-issue#588: Devices with blank sysDescr are added to the first Device Template in error\n-issue#589: Automation discovery does not allow site association\n-issue#590: Unable to create a plugin based menu\n-issue#591: Row selection in Device Automation Templates not sane with drag-n-drop enabled\n-issue#601: Resolving some translation issues\n-issue#604: Unexpected backtrace on regular expression filters\n-issue#605: Remove Spikes non-numeric data causes warnings\n-issue: Ping email does not use a from email address\n-issue: Automation does not recognize default size or poller\n-issue: Unable to drag-n-drop on automation templates pages when enabled\n-issue: Fixed number of hosts in poller stats for first poller\n-issue: Fixed screenwidth issue in tab PHP-Info of Utilities module\n-issue: Recovery poller could get stuck in some situations\n-issue: Fix JavaScript errors when managing Aggregate Graphs\n-feature: Reorganize defaults to place more on device defaults page\n-feature: Update jQuery tableDnD to version 0.9\n-feature: More tolerant of empty PHP_SELF found with some web servers\n\n1.1.3\n-issue#515: Unable to import color CSV file\n-issue#519: In non-classic themes its not possible to remove Cacti log or reporting tabs\n-issue#520: SQL error in graph automation\n-issue#521: Cacti allows removal of Data Query Graph Template associations when they are in use\n-issue#525: LAST GPRINT type not rendered correctly due to lack of escaping\n-issue#530: Undefined function get_vdef in lib/rrd.php\n-issue#531: Issues with TextAlign and Tick graph items\n-issue#532: Unreliable scroll height causes issues in Chrome\n-issue#533: User settings not cleared after saving profile\n-issue#534: Automation issue with AS clause\n-issue#538: Unable to rename tree folder\n-issue#541: Issues with mobile graph viewing\n-issue#555: DSStats SQL insert errors due to data collection issues\n-issue#563: Division by zero in removespikes.php\n-issue: Fixed rendering issues with HRULE's on graphs\n-issue: Update jsTree to 3.3.4 version\n-feature: Improved responsiveness UI tables, filters, and menus\n\n1.1.2\n-issue#492: Error while adding non data query (cg) graphs\n-issue#494: CLI error while importing template\n-issue#499: SQL error in graph automation resulting in no graphs on tree\n-issue#500: Generic SNMP device package damaged - Unix Ping Host\n-issue#505: Log rotation does not work in some cases\n-issue#506: Undefined index: cactiStatsDeviceFailedPolls\n-issue#507: Nextwork discovery 'export' produces no results\n-issue#509: Minor bug with device ownership selection\n-feature: Add new legend type that includes Current/Average/Minimum/Maximum\n-feature: Update d3.js to latest version 4.7.4\n\n1.1.1\n-issue#457: Continued LDAP issues with initial user creation\n-issue#461: The function escapeshell arg not appropriate on Windows\n-issue#462: LDAP authorization issues: group membership check broken for 'Group Member Type' = 'Username'\n-issue#464: Change default batch spike removal limits for standard deviation and variance\n-issue#465: Less than sign inside items and labels of graph break graph\n-issue#466: Call to member function row() on a non-object in lib/snmpagent.php\n-issue#467: Reduce the number of queries in log function\n-issue#472: Schema changes to improve performance\n-issue#485: When editing a device, the ping status was not always returned\n-issue: Back button issues due to syntax problems in JavaScript\n-issue: Zoom periodically would loose it's crosshairs after zooming\n-issue: Zoom would zoom out into the future even when disabled\n-issue: Fixing lite corruption in graph_templates_item table\n-feature: Make SpikeKill options more consistent\n-feature#459: Add variable date time option to report mail subject\n-feature#460: Add external_id to host variables\n-feature#469: Change re-index method of Data Query from Device edit\n-feature: Support generalized date format approach in the GUI\n-feature: Use localStorage over a Cookie for Zoom setting storage\n-feature: Fully implement 'Remove Orphans' from Package import process\n\n1.1.0\n-issue#337: Generic SNMP OID Graph Template damanged\n-issue#338: Extremely slow new graph/DS creation\n-issue#353: Broadcast & Multicast Packet counters missing\n-issue#376: Structured RRD path permission issues\n-issue#389: Manual template based graph creation not working\n-issue#407: The RRDfile does not exist message is misleading\n-issue#410: Select character data was interpreted as hex by cacti_snmp_walk()\n-issue#422: additional issues with LDAP authentication\n-issue#424: Automation does not discover devices w/o resolvable hostnames\n-issue#427: undefined index TotalVisibleMemorySize on FreeBSD\n-issue#432: SpikeKill menu wonky on Paw Theme\n-issue#434: password_verify not compatible in php5.4-\n-issue#435: urlPath missing from paw theme links\n-issue#436: Restricted user does not see graphs in tree view\n-issue#443: Allow remote_agent.php through a NAT\n-issue#446: No local admin when using multiple LDAP configuration\n-issue#447: Creating another non data query graph from same template reuses first data source\n-issue#449: exec_poll_php does not flush pipes when using script server\n-issue#450: Graph list view - No Graphs Found\n-issue: Improve email test exception errors and change default timeout to 10 seconds\n-issue: When on links page, breadcrumbs would become corrupted\n-issue: When upgrading from any version of Cacti to 1.0.5, SQL's relative to poller_reindex might appear\n-issue: Color page performance poor\n-issue: The Device dropdown on the Graph View page was unreliable\n-issue: Aggregate and non-Device Graphs in list view had not Device or Title description\n-issue: Re-engineer back button design to accomocate ajax and native navigation\n-issue: Make Graph Template filter wider \n-issue: Resolve some visual issues in Classic theme\n-feature: Add page refresh API to make page refreshing in Ajax easier to accomplish\n-feature: Update fontawesome to version 4.7\n-feature: Use fontawesome glyphs for menu items\n-feature: Support multiple column sort in table library\n-feature: Add glyphs to main Cacti console menu\n\n1.0.6\n-issue#386: Allow special characters in graph title\n-issue#414: Install Wizard check path for spine\n-issue#415: SNMP session handling broken\n-issue#418: LDAP create user from template not working\n\n1.0.5\n-issue#296: Poller warning for Non-SNMP device\n-issue#319: Add default 'High Collection Rate' data source profile to new installs to demonstrate concept of multiple rates\n-issue#330: Import templates to non-default Data Profile\n-issue#337: Error when try create new graph - SNMP - Generic OID\n-issue#342: Infinite loop in poller_automation.php with invalid schedule\n-issue#343: Device discovery cannot handle dots in device name\n-issue#344: Unable to upgrade to latest Cacti on FreeBSD\n-issue#353: Legacy broadcast & multicast packet counters missing in interface.xml\n-issue#354: Place on tree dashes / ordering is not correct\n-issue#355: Replace table rows with count when using InnoDB tables\n-issue#357: If recovery mode runs longer than a polling interval, a second is spawned\n-issue#358: Sending test e-mail results in warning\n-issue#360: Issue importing cacti.sql with some charsets\n-issue#364: Moving graph item causes page render issue\n-issue#365: ss_host_disk.php and ss_host_cpu.php should use return\n-issue#367: Upgrade chart.js to version 2.5\n-issue#368: Issue with device automation ip vs. ip_address\n-issue#369: Interface bits/second total Bandwidth wrong CDEF\n-issue#375: Drag and Drop of Devices and Graphs allows dropping onto self\n-issue#380: Ignores a non-standard SNMP port\n-issue#382: When using php5.5+ new users unable to change their password\n-issue#384: graph_view.php backtrace errors\n-issue#385: Unable to place an aggregate grapn on a subtree\n-issue#390: Display graphs from this aggregate icon next to graph not displaying\n-issue#392: cdef.php missing sql where for system cdef's\n-issue#398: checkbox is not honored when creating tree\n-issue#399: External link configuration: Order buttons don't work\n-issue#400: SNMP Engine ID (v3) field too short\n-issue#401: Graphs -> Apply Automation Rules fails\n-issue#404: Success even when test mail fails\n-issue#406: HRULE text format special characters not escaped\n-issue#408: Suppress SNMP units suffix from cacti_snmp_get() output\n-issue: Improve is_ipaddress functions\n-issue: Drag & drop showing when disabled on page automation_templates.php\n-issue: Output messages displayed incorrectly in automation_templates.php and automation_snmp.php\n-issue: Importing template from old Cacti would not show data templates\n-issue: Handle snmp error exceptions better\n-issue: Update Apache .htaccess files to support multiple version\n-issue: When executing a full sync, if the table structured has changed, recreate the remote table\n-issue: Multiple domains not working as expected\n-feature#197: Add external_id to Cacti for linking Cacti to other monitoring systems\n-feature#332: Support copy user groups\n-feature: Log proper IP address if logging in behind a NAT\n-feature: New qquery parsing rules: VALUE/TEST, VALUE/TABLE, VALUE/HEX2IP\n\n1.0.4\n-feature: Javascript: make menu movement smooth and use localStorage\n-feature: Added cacti_snmp_get_raw() for plugin developers\n-issue#288: Function cacti_snmp_get bad handling of wierd value into snmp_value\n-issue#298: Graph generation issue with SNMP - Bits/Sec + Total Bandwith\n-issue#301: Unresolvable DNS hostname causing backtraces\n-issue#302: spikekill memory leak\n-issue#303: Error when creating tree items with \"&\" in the name\n-issue#307: Aggregate graph gives CMDPHP errors\n-issue#308: UI resize issue\n-issue#309: Show \"Save Successful\" notification permanently\n-issue#311: Graph thumbnail settings in profile setting does not work\n-issue#320: Users can not change their own password\n-issue#324: Aggregate template graph template JavaScript error\n-issue#352: Add configurable auto-logout and page-reload options\n-issue#329: Customize the favicon\n-issue#334: primary key on poller output boost table not efficient/not being used correctly\n-issue: Fixed issues with Dark theme\n-issue: Fixed issues with Paw theme\n-issue: Fix timespan calculation\n-issue: Added misplaced join condition when generating RRDtool graphs\n-issue: Fix the selection of timestan based on local_graph_id and rra_id\n-issue: Correct error in discovery not adding devices\n-issue: Action message did not always display\n-issue: fix regex to use Domains like www.t-online.de\n-issue: Properly align Order columns.\n-issue: address renaming issues with tree items.\n-issue: Add device snmp --version is ambiguous\n-issue: SNMP Availability failed to report down devices - This only was occuring for cmd.php collector.\n-issue: i18n remove embedded HTML syntax\n-issue: Wrap menu items to avoid scrolling\n\n1.0.3\n-issue#297: Upgrade 0.8.8h to 1.0.0 fails to create poller_output_boost table\n-issue: Added missing template import hash for 1.0.2\n\n1.0.2\n-issue#279: Correct Boost Status display issue\n-issue#275: Permission View issue and Device Dropdown when in Classic Theme\n-issue#270: Major Mib Cache corruption.  Rebuild your MIB Cache after upgrading\n-issue: Resolve Cacti logo on Graphs page in Classic Theme\n\n1.0.1\n-feature: SpikeKill allows filling range to last known good value\n-issue#261: Add IPv4 and IPv6 Specific Counters to interfaces.xml\n-issue#257: Poller Output Table not Empty WARNING messages in cacti.log\n-issue#256: New Graph - Add Graph Items Fails (Data Sources shows None)\n-issue#255: Errors Creating new Graphs - Undefined Index Errors\n-issue#254: Unable to Properly add Data Source\n-issue#251: Remote Data Collector stuck on upgrade page\n-issue#247: Devices missing from tree device list\n-issue#245: Drag and Drop in Tree Edit Erratic\n-issue#243: SMTP Ping Failure with not SNMP Authentication\n-issue#241: Authentication Method: None not functional\n-issue#240: SQL error when install plugin\n-issue#238: Duplicate color id's cause error during Upgrade\n-issue#231: SNMPv3 - PHP ERROR WARNING: Fatal error: Unknown user name in file\n-issue: Resolving visual issues with row counts.\n-issue: When deleting Graphs prevent the removal of Data Sources that are still in use\n-issue: Improve SNMP agent performance through SQL optimizations\n\n1.0.0\n-feature: Support for remote data collectors\n-feature: Support Internationalization (i18n) for the main Cacti site, and supported plugins\n-feature: Data Source Profiles replace RRA settings allowing a single system to have multiple polling intervals\n-feature: Redesigned Tree page including Drag & Drop functionality\n-feature: New Graph Permissions system designed to make permissions simple to manage\n-feature: Add Themes 'Classic', 'Modern', 'Dark', and 'Paw'\n-feature: Debug Data Sources by comparing them to the Data Template\n-feature: New special Data Source type to detect the poller interval\n-feature: Bulk inserts in PHP poller to address latency issues\n-feature: Optimize data collection through in memory caching giving a 50% reduction in polling times when dealing with large sites\n-feature: Support RRDtool VDEFs\n-feature: Support new Graph Items: AREA:STACK, GPRINT:AVERAGE, GPRINT:LAST, GPRINT:MAX, GPRINT:MIN, LINE:STACK, TEXTALIGN, TICK\n-feature: Support RRDtool features: Right Axis Support, Dynamic Labels, Tab Width, Legend Position, Legend Direction\n-feature; Resizeable table columns\n-feature: Deprecated Single Pane Tree View\n-feature: Role Based Access Control (RBAC)\n-feature: Support User Group Permissions\n-feature: Show number of in use Graphs, Data Sources, and Devices for a given Template\n-feature: Support bulk re-sync of graphs to assigned Graph Template\n-feature: Bulk Device Settings changes\n-feature: CDEFs, Colors, GPrint Presets consolidated to Presets menu\n-feature: Authentication cookies for 'remember me' functionality\n-feature: Automatic logout after session inactivity\n-feature: Replace Boost server in favor of RRDtool Proxy\n-feature: Graph Details include CSV output, zoom, debug, and download links\n-feature: Graph Export moved to a plugin\n-feature: User change password functionality\n-feature: Automation added to core functionality through the merge of the Discovery and AutoM8 plugins\n-feature: Change interface graphs from 32 bit to 64 bit with ease\n-feature: Plugins now have hooks in device templates and automation\n-feature: Allow users to preview template imports to determine if there will be issues from importing\n-feature: Automatic removal of orphaned graph items when importing newer versions of graph templates\n-feature: Support for MySQL 5.7\n-feature: Support for PHP 7.0\n-feature: Merge Aggregate Plugin - Aggregate graph creation\n-feature: Merge AutoM8 Plugin - Automation of graph creation\n-feature: Merge Boost Plugin - Faster polling, result caching, on-demand RRDtool file updates\n-feature: Merge CLog Plugin - View Cacti logs\n-feature: Merge Discovery Plugin - Device discovery\n-feature: Merge Domains Plugin - Support for domain (ADS/LDAP) specific user templates\n-feature: Merge DSStats Plugin - Cache Data Source values for easy retrieval\n-feature: Merge Logrotate Plugin - Rotate Cacti logs\n-feature: Merge Realtime Plugin - Realtime graph viewing\n-feature: Merge Reporting (Nectar) Plugin - Reporting\n-feature: Merge RRDclean Plugin - RRD file cleanup and management\n-feature: Merge Secpass Plugin - User password policy enforcement\n-feature: Merge Settings Plugin - Shared settings for plugins\n-feature: Merge SNMP Agent Plugin - SNMP Agent for Cacti providing system statistics\n-feature: Merge SpikeKill Plugin - Remove unwanted spikes from graphs\n-feature: Merge SSL Plugin - Force https\n-feature: Merge SuperLinks Plugin - Add external links within Cacti\n-feature: Merge UGroup Plugin - User groups with permissions\n-feature: Merge Watermark Plugin - Watermark your Cacti graphs\n-bug: Fixed issue where old graph templates (0.8.6-), could import bogus data causing issues with Data Input Methods\n-bug#0000168: Duplicate data sources should be avoided when creating new graphs\n-bug#0000851: Review an imported template\n-bug#0001155: When viewing graph tree do not show empty nodes\n-bug#0001337: Form to filter for graphs in host view mode\n-bug#0001552: Date ranges not shown on graphs in the view with Daily, Weekly, Monthly & Yearly graphs\n-bug#0001573: RRA templates/grouping\n-bug#0001577: Override session handling and store session in Database\n-bug#0001790: Allow for XML delimiter in fields of a script query\n-bug#0001820: Unable to use a Data Input Method Output Field in more than one Data Source Item\n-bug#0001827: Changing the graph template messes up the graph item fields\n-bug#0001836: Add mysql error message to log\n-bug#0001877: Cookies path is not properly set\n-bug#0001966: Expand Devices in tree view not honored\n-bug#0001970: Data query index order cache should be populated on re-index\n-bug#0001981: Cacti is not full UTF-8\n-bug#0001986: CLI allow add_graphs.php to have multiples --snmp-field and --snmp-value options\n-bug#0001996: Allow using data input field in graph title\n-bug#0002096: Enumerated SNMP values not parsed correctly\n-bug#0002112: CLI add configurable parameters for device_add.php\n-bug#0002133: Restrict User to only manage specific device(s)\n-bug#0002135: Regular expression support for filter\n-bug#0002137: Data query oid_suffix parameter does not function\n-bug#0002159: Database creation file not fully compliant with strict SQL mode\n-bug#0002162: Unable to authenticate user with password containing UTF-8\n-bug#0002196: Incorrect script server instance number in log\n-bug#0002225: Make -Cc SNMP option configurable\n-bug#0002255: Script query_unix_partitions.pl should only query local mounts\n-bug#0002336: Implement php-snmp class library\n-bug#0002340: Data query script execution should be escaped\n-bug#0002350: SNMP Data Query index_order ignored\n-bug#0002351: Ping does not work with non-English locale\n-bug#0002361: Spine does not log unknowns the same way cmd.php\n-bug#0002362: Poller cmd.php makes wrong hex-string to decimal conversion\n-bug#0002370: Cacti prints wrong date formats, does not honor a systems locale\n-bug#0002403: Typo in DELETE statement leading to poor graphing performance\n-bug#0002412: Graph Template duplication causes \\t to be converted to TAB char\n-bug#0002418: Data Source Items named 'ds' break UI ability to add more items\n-bug#0002419: SNMP enum results not parsed correctly by cmd.php poller\n-bug#0002452: CVE-2014-4000 PHP Object Injection Vulnerabilities\n-bug#0002454: OS Command Injection\n-bug#0002468: Changing graph format to anything but PNG causes no output\n-bug#0002476: Add support for SNMP v3 EngineID\n-bug#0002483: Cisco ASA using Re-index method of verify all causes recache event every time\n-bug#0002484: Incorrect SQL request in cli script repair_database.php\n-bug#0002521: Unable to create two devices via CLI with the same IP-Address\n-bug#0002522: Zero padded hex strings are parsed incorrectly\n-bug#0002535: Graph Template Changes not updating RRDtool command\n-bug#0002636: Creating Data Template with \"U\" for min and max saves field data_input_field_id as 0 for first item\n-bug#0002697: CVE-2016-2313 allows remote authenticated users who use web authentication to bypass intended access\n-bug#0002698: When the host is down the wrong data type are used for some columns in the host table\n-bug#0002723: Renaming a disabled device still attempts to connect and get SNMP host information\n-bug#0002724: Multipage graphs the menu can disappear\n-bug#0002725: Changing graph template does not mark correct interfaces disabled on data query generated list\n\n0.8.8h\n-bug:0002656: Authentication using web authentication as a user not in the cacti database allows complete access (regression)\n-bug:0002667: Cacti SQL Injection Vulnerability\n-bug:0002666: When click the [Clear] button after clicking the [Refresh] button in Preview Mode , fails to CSRFcheck\n-bug:0002673: CVE-2016-3659 - Cacti graph_view.php SQL Injection Vulnerability\n-bug:0002676: Outdated MIBs for non-unicast packets\n-bug:0002677: Index is a MySQL 5.6 reserved word\n-bug:0002681: generate_graph_def_name() generates reserved word \"cf\"\n\n0.8.8g\n-bug:0002161: Graph management \"graph()\" function conflicts with graphviz PECL extension graph()\n-bug:0002320: Unable to delete more than 500 graphs at once\n-bug:0002591: graph_view.php - unable to advance to Next Page in Tree View\n-bug:0002608: cacti 0.8.8f - Data Templates - Poller/script issue with backslash\n-bug:0002618: bug/syntax error in html_utility.php\n-bug:0002616: cdef.php -- Extra php closing tag\n-bug:0002617: PHP Warning is thrown when trying to include auth_login.php\n-bug:0002623: log warning display wrong time_interval\n-bug:0002627: Graph tree doesn't work in Internet Explorer\n-bug:0002601: graphs_new.php query not sorted as per definition xml:index_order\n-bug:0002625: Plugins don't display the next page\n-bug:0002631: RRDtool export not XML compliant - results in empty CSV exports\n-bug:0002622: graph_view.php -- Navigation and Content Areas are not visible in Tree Mode\n-bug:0002626: Unable to add two users in a row - Notice: Undefined index: id\n-bug:0002620: Unable to copy user\n-bug:0002618: bug/syntax error in html_utility.php\n-bug:0002646: SQL injection in graph.php\n-bug:0002656: Authentication using web authentication as a user not in the cacti database allows complete access\n-bug:0002647: 0.8.8g rev 7767 Can add cacti devices to graph tree \"Save Failed\"\n-bug:0002652: CVE-2015-8604: SQL injection in graphs_new.php\n-bug:0002655: CVE-2015-8377: SQL injection vulnerability in the host_new_graphs_save function in graphs_new.php\n-bug:0002629: Cacti lacks tab icons in chrome from android\n-bug:0002619: Fix incorrect placement of htmlspecialchars() in tree.php\n-bug:0002642: ping.pl does not take into account host port numbers\n-bug:0002567: RRDtool 1.5.x Support \n-bug:0002269: |query_ifSpeed| in --upper-limit for graph template does not work with empty ifSpee\n\n0.8.8f\n-bug:0002599: 0.8.8e Poller Script Parser is Broken\n-bug:0002600: cli/upgrade_database.php is missing releases\n-bug:0002603: Graph managment graphs.php save button does not work\n-bug:0002599: Poller Script Parser is Broken\n\n0.8.8e\n-bug: Fixed issue with graph zooming failing to work\n-bug: Fixed various SQL Injection vectors\n-bug#0002569: Impossible to have a URL pointing directly to a graph\n-bug#0002574: SQL Injection Vulnerabilities in graph items and graph template items\n-bug#0002577: CVE-2015-4634 - SQL injection in graphs.php\n-bug#0002579: SQL Injection Vulnerabilities in data sources\n-bug#0002580: SQL Injection in cdef.php\n-bug#0002582: SQL Injection in data_templates.php\n-bug#0002583: SQL Injection in graph_templates.php\n-bug#0002584: SQL Injection in host_templates.php\n-bug#0002586: Cannot delete data sources from the GUI\n-bug#0002592: graph_view.php - viewing host in new tab - Undefined index: nodeid\n-bug#0002594: status_fail_date and status_rec_date are set incorrectly after host is marked down\n-bug#0002597: Incorrect value in Hosts column on Host Templates page\n-bug#0002598: Incorrect row number in Devices -> (Edit) page\n\n0.8.8d\n-feature: Remove un-needed fonts and javascript files\n-bug: Fixed XSS VN: JVN#78187936 / TN:JPCERT#98968540\n-bug#0002261: PHP 5.4.0 added new error_reporting variable, causing cacti to show errors\n-bug#0002391: Odd Behaviour on ReIndex of Data Query Data\n-bug#0002393: Broken thumbnail images for graph templates\n-bug#0002402: Subtree must not have the same header as the parent header\n-bug#0002474: CLI add_device.php dows not set availability_method correctly\n-bug#0002449: The Save button does not work: Invalid html on page Console -> Cacti Settings: empty form tag\n-bug#0002428: Fail to delete all data input items when removing more than 1000 data sources\n-bug#0002439: Password with special character don't work with LDAP authentication\n-bug#0002461: invalid bn with ldap and anonymous bind\n-bug#0002465: Graph Export return empty CSV file\n-bug#0002484: Incorrect SQL request in cli script repair_database.php\n-bug#0002485: Broken pagenation on graph viewing\n-bug#0002489: SNMP - Get Mounted Partitions using Re-index method of Index Count Changed causes recache event every time\n-bug#0002490: Can not select page for multiple datasources per device\n-bug#0002494: CSV export always shows last day\n-bug#0002504: Data template search not functional\n-bug#0002542: [FG-VD-15-017] Cacti Cross-Site Scripting Vulnerability Notification\n-bug#0002543: Unable to switch pages within graphs_new.php due to invalid URL generation\n-bug#0002544: Duplicate entry in $nav_url during list view\n-bug#0002571: SQL Injection and Location header injection from cdef id CVE-2015-4342 \n-bug#0002572: SQL injection in graph templates CVE-2015-4454\n\n0.8.8c\n-bug#0002228: GPL incompatible files included in Cacti project in include/treeview\n-bug#0002383: Sanitize the step and id variables CVE-2013-5588, CVE-2013-5589\n-bug#0002385: Cannot export host templates while including dependencies\n-bug#0002386: cli/upgrade_database.php is missing the last two releases\n-bug#0002390: Poller/script issue with slash and backslash\n-bug#0002405: SQL injection in graph_xport.php\n-bug#0002431: CVE-2014-2326 Unspecified HTML Injection Vulnerability\n-bug#0002432: CVE-2014-2327 Cross Site Request Forgery Vulnerability - Special Thanks to Deutsche Telekom CERT\n-bug#0002433: CVE-2014-2328 Unspecified Remote Command Execution Vulnerability\n-bug#0002434: Suppress SNMP UNITS Suffix from cacti_snmp_get() output\n-bug#0002438: Down Host Detection issue when using SNMP Desc or SNMP getNext\n-bug#0002446: Subtract plugin processing time from Poller sleep time\n-bug#0002453: CVE-2014-4002 Cross-Site Scripting Vulnerability - Special Thanks to G. Geshev (munmap)\n-bug#0002455: Incomplete and incorrect input parsing leads to remote code execution and SQL injection attack scenarios\n-bug#0002456: CVE-2014-5025 / CVE-2014-5026 - Cross-Site Scripting Vulnerability - Special Thanks to Adan Alvarez and Paul Gevers\n-bug#0002495: Graph Filter Date Range\n-bug: Fix COMMENT handling, even in case COMMENT is empty, with or without HR and with variable substitution\n-bug: Fix issues when SNMP data holds a \"=\"; \"explode\" must be treated accordingly\n-bug: Fix filter highlighting on data sources for the data template field\n-bug: correct description of SNMP V3 parameters\n-feature: Added native jquery, jqueryui, and jstree\n-feature: Fixed issues with 'Clear' under preview not working\n-feature: Added new Tree navigation\n-feature: Added Columns and Thumbnails to Preview\n-feature: Added Columns to Tree (Preview only)\n-feature: Both Graphs and Columns default to 'Default'\n-feature: Resolved Left hand navigation taking entire page\n-feature: Added new graph zoom to tree view and preview offering a \"quick\" (default) and an \"advanced\" mode\n\n0.8.8b\n-bug: Fixed issue with custom data source information being lost when saved from edit\n-bug: Repopulate the poller cache on new installations\n-bug: Fix issue with poller not escaping the script query path correctly\n-bug: Allow snmpv3 priv proto none\n-bug: Fix issue where host activate may flush the entire poller item cache\n-security: SQL injection and shell escaping issues\n\n0.8.8a\n-bug#0002207: cannot export graph templates\n-bug#0002208: Graphs with CDEFs fail to generate\n-bug#0002209: External auth does not work behind a reverse proxy\n-bug#0002211: creating an index USING BTREE fails ony MySQL < 5.0.60\n-bug#0002213: CLI upgrade script is missing 0.8.7i as a target\n-bug#0002214: SQL error during non-PIA upgrade to 088 when giving a default for a text field in plugin_realms\n-bug#0002216: use of define_syslog_variables() gone in PHP 5.4\n-bug#0002217: url_path should default to /cacti/\n-bug#0002221: Missing plugin directory causes endless loop in plugins.php\n-bug#0002222: tail_logfile hangs when cacti.log not readable, filling apache log with fgets warnings\n\n0.8.8\n-bug#0002056: un-initialized datetime used for host status (was: Zero length string != NULL)\n-bug#0002081: In Graph Management, search display graph title breaks when using pattern symbol \"/\"\n-bug#0002132: need to include pa.sql with the 0.8.7i and future releases\n-bug#0002134: rebuild_poller_cache.php --host-id deletes table poller_item completely\n-bug#0002141: cacti.sql missing BTREE PRIMARY KEY for poller_output\n-bug#0002146: Utilities -> View Log File -> refresh does not work\n-bug#0002150: usort_data_query_index() is broken -> graph order for hosts with data query sort option fails\n-bug#0002151: When building HTML forms with sub_checkbox on_change parameter is not used\n-bug#0002152: Issue with filter on graphs_new.php\n-bug#0002153: Cant search for patterns containing a forward-slash\n-bug#0002156: CDEF strings are not escaped before passed to rrdtool command\n-bug#0002158: Minor changes to grammar of displayed messages\n-bug#0002165: Using data input field in data source name (related to 2079 in 0.8.7i)\n-bug#0002167: New poller hook poller_finishing\n-bug#0002172: structure_rra_paths.php does not handle disabled data sources\n-bug#0002174: poller_item.host_id has wrong type\n-bug#0002178: typo in include/global_form.php: Mimimum -> Minimum\n-bug#0002181: session_unregister (use in functions.php) doesn't exist anymore in PHP 5.4\n-bug#0002182: When there is no suitable (unique) index, graphs are not shown in data query ordering on host leafs\n-bug#0002189: Proper graph hooks\n-bug#0002191: Refresh issues\n-bug#0002194: changing data query XML <index_order> does not propagate to existing data sources\n-bug: Fix input validation on cli/api_device.php\n-bug: Fix issue with data source template associate command line script inserting incorrect rra information\n-bug: Fix minor display issue on data source pages\n-bug: Fix minor issue with counting items in the poller_output table\n-bug: Graph settings and settings check boxes do not allow unchecking to be saved\n-bug: Fix minor issue with plugin library caused by non-session\n-bug: Fix SQL error on data input save for non-templated graphs\n-bug: user_log index added to increase performance\n-feature: Merge Plugin Architecture into Cacti\n-feature: Added index to data_template_data to increase performance\n\n0.8.7i\n-bug#0001963: Bandwidth summation \"total in\" and \"total out\" are always 0\n-bug#0002040: ICMP ping errors for Windows 7 with PHP 5.3\n-bug#0002062: Multiple security vulnerabilities\n-bug#0002063: Multiple value poller output incorrectly interpreted as hexadecimal value\n-bug#0002064: Removing \"~\" (tilde) by sanitize_uri() conflicts with Apache UserDir translation\n-bug#0002066: Graph without host id \"Notice: Undefined variable: host_id\"\n-bug#0002067: Custom time range filter not working\n-bug#0002068: Missing header include in analyze_database.php\n-bug#0002071: MySQL table poller_item is dropped always when \"Data Input Method\" is changed or added.\n-bug#0002079: Using input field of a script in graph title does not work\n-bug#0002080: Database password containing \"@\" does not connect\n-bug#0002083: Adding a new users generates errors in apache logs\n-bug#0002084: Incorrect normalization of hrStorageTable values over 2^31\n-bug#0002086: Incorrect usage of mysql custom tcp port\n-bug#0002087: PHP recache problems due to missing slashes in reindex table\n-bug#0002093: Unit exponent value of 0 not imported with graph template\n-bug#0002094: CDEF: \"another cdef\" references not included in template export\n-bug#0002106: Command line add device does not accept \"None\" for host template\n-bug: Update host template cli script help to fix incorrect options\n-bug: Refresh of Cacti log viewer not working\n-bug: Problems saving User Graph Permissions in IE9\n-bug: Bandwidth summation fails if NAN values are present\n-bug: Special Type Code \"host_id\" available in Data Queries by Not Data Input Methods\n-bug: Do not generate error messages when creating non host based graphs\n-bug: Wrong index used for Data Queries using VALUE/REGEXP\n-bug: Fix issue with title variable replacement failing when no host is associated with graph\n-bug: Cacti generating MySQL 1100 Errors when modifying the tree\n-bug: Resolved \"Fatal error: Cannot use string offset as an array\" in lib/data_query.php\n-feature: Properly support ifHighSpeed replacement variable\n-feature: Increase granularity of availability options to correct spine bug\n-feature: Replace \"event count\" with last changed date for host availability\n\n0.8.7h\n-bug#0001403: Reapply Suggested Names does not work correctly for graphs and data sources not associated with Data Queries\n-bug#0001568: Remove PHP 5.3 deprecated functions\n-bug#0001584: Concurrent changes to graph tree ordering can corrupt sort values\n-bug#0001626: Symbol ($) does not appear in labels/gprint strings to rrdtool during graph generation\n-bug#0001632: Script server treats quoted arguments with spaces incorrectly as multiple separate arguments\n-bug#0001646: MySQL SSL connection support\n-bug#0001660: Modifying data template values does not propagate as expected\n-bug#0001678: Adding graphs to a device fails to add entries to poller_item if using the script server\n-bug#0001768: Perform consistency check on ds maximum vs. ds minimum\n-bug#0001783: Graph Export export date is incorrect\n-bug#0001812: Data template copying ignores some item templating\n-bug#0001814: Command line device add script fails when SNMP default is disabled\n-bug#0001815: One minute polling not working correctly\n-bug#0001816: Cannot export graph data to CSV with IE 8\n-bug#0001819: MySQL \"TYPE=\" command deprecated since MySQL 4.1 removed in MySQL 5.4.4\n-bug#0001826: Zoomed graph views should auto refresh\n-bug#0001828: Reapply Suggested Name prompt as spelling problems\n-bug#0001835: Graph edit page has more than one html form tag\n-bug#0001847: Graph export API function has required argument not defined\n-bug#0001851: Graph creation selector does not work with data query that has no associated graph templates\n-bug#0001855: Improper formatting of data queries can result in SQL errors\n-bug#0001862: Ping script does not process output of update ping utility\n-bug#0001867: RRDtool Cacti fetch function does not work for some locales\n-bug#0001876: PHP function strip_quotes causes HEX values to be truncated\n-bug#0001880: Form validation error message does not highlight text area control\n-bug#0001882: Cacti snmp_walk function fails if max_oids is an empty value\n-bug#0001890: Default tree view mode set to single pane mode not working\n-bug#0001893: Data input method description text does not make sense\n-bug#0001900: Equal sign not correctly parsed in snmp data results\n-bug#0001903: Undefined variable: mode in lib/ldap.php on line 375\n-bug#0001918: Script server does not accept more than one blank space before the function name\n-bug#0001926: Importing templates \"using defaults for this installation\" associates all rra's defined\n-bug#0001928: graph_image.php does not check local_graph_id\n-bug#0001929: Error when exporting templates are not properly reported\n-bug#0001930: No error reporting for wrong RRA\n-bug#0001934: Poller does not process SIGTERM signal correctly\n-bug#0001936: Removing multiple data sources is inefficient\n-bug#0001937: Technical support page uses check table which waits for table lock\n-bug#0001939: Do not query for number or items per host if concurrent polling processes is set to one\n-bug#0001954: Usage of PHP_SELF without basename in html.php (at least partly fixed)\n-bug#0001956: Attempts to update existing tree item fail\n-bug#0001967: Reflected XSS on Cacti 0.8.7g\n-bug#0001989: IE9 breaks Cacti when objects are hidden using 'display:none;' style tag\n-bug#0001993: Undefined index in lib/html.php\n-bug#0001995: REQUEST_URI not properly escaped in graph_view.php for preview mode\n-bug#0002005: Saving Script Server or Script Data Input Method Results in SQL Error\n-bug#0002060: NAN values in hdd utilisation graphs (Poller Output Table not Empty)\n-bug: Fix SQL injection issues in login page\n-bug: RRDtool fetch in Cacti fails to function properly on rrdtool files with NaN values in the output\n-bug: Accept \"Connection refused\" on TCP ping tests\n-bug: Add missing row selection javascript to graph preview\n-bug: Script server throws \"undefined variable\" error when in debug mode\n-bug: Removing graphs does not take advantage of bulk deletes\n-bug: Fixed issue with multiple \"U\" results for a data input method with multiple output parameters\n-bug: SNMP v3 use AuthNoPriv when privacy passphrase is empty\n-bug: Fixed sql errors when using template and search filter on graph management\n-bug: Delete Data Source multi fails to perform bulk deletes on Data Source items\n-bug: Allow Timespan Selector to work with $_REQUEST as well as $_POST\n-bug: While in the mrtg view of Cacti Graphs, or in viewing graph properties zoom fails\n-bug: The filepath api call should trim the filename before checking for the files existance\n-bug: Fix issues with IE9 while editing templates\n-bug: Form action in graph_items.php incorrect\n-bug: Initial drawing of tree causing Next/Previous with malformed URI\n-feature#0001519: Spine enhancement for parallel collection of data at device level\n-feature#0001667: Get values of |host_*| variables in graph elements from data source\n-feature#0001922: Reindex method \"Index Count Changed\" requires that OID_NUM_INDEXES is given for SNMP Data Queries\n-feature#0001923: Implement counting for script (server) data queries just like OID_NUM_INDEXES\n-feature#0001924: Allow for reindex method \"Index Count Changed\" to apply to script (server) queries as well\n-feature#0001952: Ability to use input field of a script in graph title\n-feature: Make reindexing and repopulating the poller cache a lossless process\n-feature: Change default font sizes\n-feature: Add analyze database and push out host cli scripts\n\n0.8.7g\n-bug: RRDtool 1.4.x not recognized during installation\n-bug: Implement windows-aware shell escaping\n-bug: Fixed multiple cross site scripting vulnerabilities reported by Tomas Hoger of the Red Hat Security Response Team\n-bug#0001292: Over 8TByte Partition in Windows cant get correct data from snmp\n-bug#0001486: Unable to login after redirection to access denied page\n-bug#0001516: \"Show the page that user pointed their browser\" does not seem to work\n-bug#0001561: Over zelous HTML excaping on filter strings\n-bug#0001575: LDAP-Authentifications does not work due to ldap_host being set incorrect\n-bug#0001587: Feature from bug#0001271 breaks on large values\n-bug#0001607: Web Basic authentication does not work with fastcgi\n-bug#0001620: Max OID's max value reported incorrectly in Web UI\n-bug#0001747: oid_suffix do not work correctly for input direction on data queries\n-bug#0001756: Alternate font styles do not work correctly\n-bug#0001757: LDAP realm authentication outputs warning for undefined index\n-bug#0001763: Unable to add graph permissions on a user\n-bug#0001765: Tech support does not work correctly with RRDtool 1.4.x\n-bug#0001766: Page refresh setting not being honored\n-bug#0001771: \"index count changed\" not implemented for query_unix_partitions.pl, query_host_partitions.pl, query_cpu_partitions.pl, ss_host_cpu.php and ss_host_disk.php\n-bug#0001773: Character encoding problem after upgrade to 0.8.7f\n-bug#0001775: Tech support page does account for no memory limit set for PHP\n-bug#0001776: Simultaneous databases connections are not supported\n\n0.8.7f\n-security: SQL injection and shell escaping issues reported by Bonsai Information Security (http://www.bonsai-sec.com)\n-security: Cross-site scripting issues reported by VUPEN Security (http://www.vupen.com)\n-security: MOPS-2010-023: Cacti Graph Viewer SQL Injection Vulnerability (http://php-security.org)\n-bug#0001125: XML parse error on template import with degree symbol\n-bug#0001311: Access denied for graph-only users when accessing index.php directly\n-bug#0001366: Exported data templates do not import special characters properly\n-bug#0001416: Graph Export fails with EXPORT FATAL ERROR: Export path /some/path/root/export is within a system path /root. Can not continue.\n-bug#0001452: Missing \"<\" and \">\" in \"Collection Methods=>Data Input Methods=>\"Input String\" after importing template\n-bug#0001461: Data query export/import fails\n-bug#0001492: RRDtool 1.3 series fonts (fontconfig) support\n-bug#0001506: Reindexing fails due to global include issue in lib/snmp.php\n-bug#0001522: Special characters break parsing of template data\n-bug#0001524: Export graphs and Classical Presentation does not honor per graph export rules\n-bug#0001528: ICMP Ping availabilty broken in UI for Windows Servers using IIS\n-bug#0001535: No display of parent ID in tree nodes for CLI tree add script\n-bug#0001543: All graphs are exported dispite graph export rules\n-bug#0001549: Function array_to_sql_or creates poor sql where clauses\n-bug#0001557: Quotes in Text Format graph template field break graph rendering\n-bug#0001587: 64bit HEX Strings do not convert to Decimal on 32bit Systems\n-bug#0001604: HEX Counter values enclosed in quotes not recognized as HEX\n-bug#0001609: Script server timeout too aggressive with 10 second poller interval\n-bug#0001628: Inconsistent message for Change SNMP Options related to available buttons\n-bug#0001695: Suppress deprecated warnings in Cacti code\n-bug#0001725: PHP Fatal Error while trying to add a tree node via cli\n-bug: When creating new graphs without a data source, print error to user instead of throwing php error\n-bug: Browser query string does not contain arguments\n-bug: Function inject_form_variables does not operate if more than 1 variable needs replacing\n-bug: Script imposed memory limits cause issues with some scripts\n-bug: Turn off process leveling if there are not enough poller items to substantiate it\n-bug: Add device should allow no-snmp type devices\n-bug: Firefox Autocomplete causes issues with password validation\n-bug: Access Denied messages do not allow re-direction to login page\n-bug: When clearing filter on new-graphs do not clear host or template\n-bug: When clearing filter, reset page to 1 for all queries\n-bug: Graph List selectors do not persist between pages\n-bug: allow empty [upper|lower]_limit even without autoscaling\n-bug: Availability method Ping or SNMP generates meaningless warnings\n-feature: Add logging to SQL Save error handling\n-feature: Add utility to convert database to InnoDB\n-feature: Return nav as the title for the page\n-feature: Detect and correct for RRDtool segfaults\n-feature: Add rra_id for hosts and graphs to be used during tree export\n-feature: Make the Graphs pages render like the rest of Cacti\n-feature: Convert base Cacti UI to use buttons and not images\n-feature: Make poller sane so that it can be used by other cacti processes\n-feature: Add snmp timeout warnings for lib/snmp.php\n\n0.8.7e\n-bug#0001044: Creating a DS, Output field can't be selected for DT with a DIM when \"Use Per-Data Source Value\" is on\n-bug#0001341: SNMP query: add oid_suffix for weird SNMP queries\n-bug#0001345: Overwriting $snmp_index in query_snmp_host() breaks SNMP Data query if using get method\n-bug#0001346: Strip out noisy 'No Such Instance currently exists at this OID'\n-bug#0001404: timeout in \"function ping_icmp\" (lib/ping.php)\n-bug#0001405: Spaces in DS when .rrd file is created, so it fails\n-bug#0001407: Place graph thumbnail into div to lower page length changes on load graphs\n-bug#0001410: Thumbnail Columns is not honored for host display with snmp index group style\n-bug#0001411: Graph searching issue\n-bug#0001413: strip_quotes fails\n-bug#0001426: multiple form opening due to bug in draw_edit_form()\n-bug#0001436: CSV Export Start Date and End Date are always 1970-01-01 01:00:00\n-bug#0001443: format_snmp_string can return a number with a leading space\n-bug#0001446: Wrong dates override in CSV export\n-bug#0001456: oid_uptime is not parsed correctly\n-bug#0001460: Skiping input parameters in data_query_field_list() may lead to SQL errors\n-bug#0001464: Typo in install/index.php\n-bug#0001467: Customisable oid index parse regexp for weird MIBs\n-bug#0001468: Tree is not expanded correctly\n-bug#0001469: Tree is not being expanded if user followed link outside of cacti\n-bug#0001476: Mark stacked columns in rrdtool_function_xport() output\n-bug#0001477: Spelling error in a variable in html_tree.php\n-bug#0001478: Combo boxes on Graph Management page produce URLs with leading spaces\n-bug: Top Graph Header Breaks When Plugins Used\n-bug: SNMP v3 Password issue caused by Firefox's Password AutoFill\n-bug: Strip Quotes does not properly handle the value 'U'\n-bug: Changes to the graph tree would not show up immediately for current user\n\n0.8.7d\n-bug#0001336: Allow to specify on_change handler for checkbox_group\n-bug#0001338: When Using Web Basic Authentication HTML Bookmarks Do Not Work\n-bug#0001388: Spine uses illegal flag for ping on Mac OS X\n-bug#0001351: Deleting 1000 graphs along with their Data Sources crashes the Server\n-bug#0001361: SNMP query: 'No more variables left in this MIB View' instead of value of input field\n-bug#0001374: ss_host_disk.php etc. error corrected when using SNMP V3 (index off by 1)\n-bug#0001376: graph_items.php variable $id defined in wrong place\n-bug#0001377: Several bugs in new cli script \"structured_rra_paths\"\n-bug#0001378: ping.pl script fails when using tcp:hostname\n-bug#0001382: cdef.php error due to wrong function name\n-bug#0001383: syntax error in lib/rrd.php with PHP 4.4.4\n-bug#0001384: utilities.php does not handle view_snmp_cache when host_id = -1 (Any)\n-bug#0001385: LDAP Error: Group DN could not be found\n-bug#0001391: parsing snmp string with \"=\" ?? --> WARNING: Result from SNMP not valid\n-bug#0001392: Problem on CDEF function ALL|SIMILAR_DATA_SOURCES_(NO)?DUPS\n-bug#0001394: Error of variable in lib/html_tree.php\n-bug#0001398: Cross site scripting checking is overly protective on search filters\n-bug#0001400: LDAP authentication results in PHP warning message\n-bug: Resolved issue with reapply suggested names not working for data sources under certain conditions\n-bug: Correct missing db_conn argument issue\n-bug: Deleting large number of hosts results in SQL errors due to MySQL buffer overrun\n-feature: SNMP cli version information added to tech support page\n\n0.8.7c\n-bug#0000157: Dual pane tree does not have the option of not rendering all trees in one page\n-bug#0000486: RRA template edit allows invalid XFF values\n-bug#0000626: Setting \"Default Graph Tree\" does not work with dual pane view\n-bug#0000828: Truncated IOS description in |query_ifAlias|\n-bug#0000909: ALL_DATA_SOURCES_NODUPS breaks graphing when using \"Consolidation Function\" MAX\n-bug#0000943: scripts/ping.pl has incorrect response when \"icmp hop redirect\" occurs\n-bug#0000948: Exporting graphs to a local path does not work correctly in some cases\n-bug#0000986: Graphs that are done by graph type are not exported when using the tree view\n-bug#0001022: strip_quotes incorrectly parses script output\n-bug#0001090: LDAP authentication fails when using quote character in password\n-bug#0001135: Graph export feature not exporting as per user level selected\n-bug#0001136: Regex ambiguous for mbstring\n-bug#0001138: Lack of error checking causes graphs to not update when rrdtool crashes\n-bug#0001141: Script server appears broken for \"index\" and \"query\" requests (Documentation Fix)\n-bug#0001145: Save Failed error when changing Graph Details\n-bug#0001153: Undefined variable: local_graph_id in graphs.php on line 201\n-bug#0001166: Installer does not properly handle disabled guest_user conversion\n-bug#0001174: Unidentified index warning\n-bug#0001175: Hide hosts in Graph Permissions that you already have access to\n-bug#0001176: Problem validating IPv6 addresses\n-bug#0001188: Graph export issues in tree mode\n-bug#0001191: Faulty IP address validation by ping.php script\n-bug#0001180: Graph Export to CSV failed by using IE 6 SP2\n-bug#0001194: RRDtool URL is incorrect on the about page\n-bug#0001204: Since upgrade to 0.87b the hosts with ip address with 255 are down and have no datas\n-bug#0001206: Graphs are not zoom-able with PHP warnings turned on\n-bug#0001211: Allow use of \"REMOTE_USER\" if \"PHP_AUTH_USER\" is not set for authentication\n-bug#0001213: Template Copy does not hash copied template_items\n-bug#0001215: Impossible to define a none availability with the client cli/add_device.php\n-bug#0001216: CSV Export for zoomed graph, results in Validation error\n-bug#0001217: Default Graph Tree is not reflected in Left Pane of the graph page\n-bug#0001223: Missing Hard return on last GPRINT causes bad formatting\n-bug#0001228: LDAP server port not honored\n-bug#0001230: Poller stops updating rrd files\n-bug#0001236: Set 'stats_recache' to zero when no re-index is present\n-bug#0001238: Guest user has access to change password\n-bug#0001239: Using the TOTAL_ALL_DATA_SOURCES in a graph where all item are using the MAX CF yields an invalid(empty) CDEF\n-bug#0001240: SNMP string cleanup removes too many '=' signs\n-bug#0001244: Missing closing </form> on host.php\n-bug#0001247: Snmp ping won't work for snmp v3\n-bug#0001256: Spine-poller.c : Bug in size string sysUptime\n-bug#0001258: \"Remove Verification\" is an ambiguous definition, leads to data loss\n-bug#0001259: LDAP Authentication using Solaris 10 standard ldap client fails\n-bug#0001262: Do not allow deletion of Graph Export User\n-bug#0001264: CDEFs can't recognize |query_*|\n-bug#0001268: resource/snmp_queries/net-snmp_disk.xml has incorrect name for \"Percent Available\"\n-bug#0001271: Hex string to decimal conversion for proper RRDtool storage\n-bug#0001273: Escape windows paths to accommodate spaces\n-bug#0001281: ICMP Ping fails if an octet == 255\n-bug#0001283: graph_image.php causes PHP Notice errors on view\n-bug#0001286: poller_item cache is not updated when \"Data Input Method\" is changed\n-bug#0001288: A host with ICMP ping selected as method does not properly perform ping\n-bug#0001291: Reapply Suggested Names fails on Script Queries\n-bug#0001293: When Creating Data Query Graphs, Performing Search will Cause List to Disappear\n-bug#0001294: Stack overflow if database is not correctly initialized\n-bug#0001295: Division by zero when rrd_step < poller_interval\n-bug#0001296: add_graphs.php does not add the graph template to the host\n-bug#0001299: When creating graphs the entire poller cache is recreated for a host\n-bug#0001314: Use Data Query variables as HRULE input for graph templates\n-bug#0001318: Graph Export with 1 minute poller re-exports graphs 5 times\n-bug#0001320: Invalid PHP_SELF Path\n-bug#0001326: If a user's password contains a single quote the login fails\n-bug#0001342: VRULE printed as HRULE on graph_templates.php graph template item list\n-bug#0001380: Expand description of ping retries\n-bug: Remove include/html files to mitigate XSS issues\n-bug: IE generates errors on both the host and graph settings pages\n-bug: Host save failed in FireFox 3 for non-SNMP V3 hosts, complaining about \"password mismatch\"\n-bug: Initialization of snmp_auth when using SNMP=NONE\n-bug: Speed up add_graphs.php in most cases (still slow only if --input-fields is used)\n-bug: If the poller_output table is not empty, do not flood the log\n-bug: Remove warnings appear in the httpd log relative to reset attempts on settings array\n-bug: Add API Automation tool quietMode to additional functions\n-bug: When Cacti is launched from within an iframe, cookies are dropped from IE6\n-bug: Database upgrade and cacti.sql differ\n-bug: drop color setting background on FF does not work\n-bug: cli/add_tree.php requires as least a host-id for --list-graphs\n-bug: add_tree.php did not allow nodes with propagating sort options\n-bug: When adding a tree node via the api numeric and natural were reversed\n-bug: When saving a data query based data templates, their data sources would become corrupt\n-bug: If your system contains INNODB tables, the Technical Support page would hang\n-bug: The default user tree link icon would not be properly highlighted when opening graphs\n-bug: Severe performance problems when adding data query based graphs.\n-bug: Default refresh on Cacti Log was too quick\n-bug: Some users do not like the idea of automatic page refreshes\n-bug: Allow more rows to be visible in Cacti pages\n-bug: Ping and SNMP should test both conditions\n-bug: When step is less than poller interval, item will stop polling for long period of time\n-bug: When using Web Basic authentication, user is directed to default page and not REQUEST URI\n-feature#0000284: Custom <path_rra> for each device\n-feature#0000431: Add php-xml to requirements, verify required PHP extensions\n-feature#0000852: Have \"Previous\" and \"Next\" disappear when not in use (only for graph display)\n-feature#0001082: Mirror Graph Rename based on template function to work with Data Sources\n-feature#0001140: CLI-Script to associate a graph template to a host\n-feature#0001162: WEB UI now accepts max_oids on SNMP bulkwalks\n-feature#0001177: CLI Reindexing - poller_reindex_hosts.php: allow filter on \"host description\"\n-feature#0001189: Introducing |data_source_title| variable\n-feature#0001195: Add graph title to graphs page\n-feature#0001201: Reapply Suggested Names for Data Sources and cli/poller_data_sources_reapply_names.php\n-feature#0001205: Add filtering and pagination to cdef management; add \"Duplicate CDEF\"\n-feature#0001220: Disable snmpbulkwalk if max OIDS is less than 2\n-feature#0001233: Move $export_types variable definition from templates_export.php to include/global_form.php\n-feature#0001233: Move $export_types variable definition from templates_export.php to include/global_form.php\n-feature#0001235: CLI script needs to activate a query: add_data_query.php\n-feature#0001250: Dispatching job in poller can lead to unbalanced threads\n-feature#0001249: New pseudo CDEF variables for \"Count All|Similar Data Sources (NO)?DUPS\"\n-feature#0001289: Add \"Graph Properties\" wrench to tree+preview mode\n-feature#0001323: List all graph template associated with a host template\n-feature#0001306: Add Blank Line as possible graph item\n-feature: Paginate Treeview Dual Pane\n-feature: Allow user to specify maximum graphs per page from Treeview Dual Pane\n-feature: Allow Treeview Dual Pane to be filtered for graph titles\n-feature: Allow the user to add or remove graph text from page for searching with the browser\n-feature: Add links to Graph Management and Data Sources to Device Edit Screen\n-feature: Add links to Graph Template and Host Edit to Graph Edit Screen\n-feature: Add links to Data Template and Host Edit to Data Source Edit Screen\n-feature: Support using the cacti database api with more than one connection\n-feature: Add some more debug lines to Data Query debugging (Verbose Query)\n-feature: Fix compatibility issues for RRDtool 1.3\n-feature: Make the tabs section work a little better with existing plugins\n-feature: Add additional options to speed data query graph automation process\n-feature: Add additional indexes to speed data query graph creation\n-feature: Allow the cli reindexing of hosts to be limited to a single query\n-feature: New cli command host_update_template to allow re-templating of hosts using an updated template\n-feature: When reindexing hosts, allow a queryid to be specified\n-feature: Add command line Database upgrade script\n-feature: Add api call to associate graphs with their data sources\n-feature: Move the notes field to bottom of page\n-feature: New availability option \"Ping or SNMP\"\n-feature: Allow for specification of a default reindex method\n-feature: Show more colors on a single color's page\n-feature: Exit is either a database or table does not exist\n-feature: Add developer debug level to reduce SQL messages in DEBUG\n-feature: Add support for group membership for LDAP authenication\n\n0.8.7b\n-bug#0000855: Unnecessary (and faulty) DEF generation for CF:AVERAGE\n-bug#0001083: Small visual fix for Cacti in \"View Cacti Log File\"\n-bug#0001089: Graph xport modification to increase default rows output\n-bug#0001091: Poller incorrectly identifies unique hosts\n-bug#0001093: CLI Scripts bring MySQL down on large installations\n-bug#0001094: Filtering broken on Data Sources page\n-bug#0001103: Fix looping poller recache events\n-bug#0001107: ss_fping.php 100% \"Pkt Loss\" does not work properly\n-bug#0001114: Graphs with no template and/or no host cause filtering errors on Graph Management page\n-bug#0001115: View Poller Cache does not show Data Sources that have no host\n-bug#0001118: Graph Generation fails if e.g. ifDescr contains some blanks\n-bug#0001132: TCP/UDP ping port ignored\n-bug#0001133: Downed Device Detection: None leads to database errors\n-bug#0001134: update_host_status handles ping_availability incorrectly\n-bug#0001143: \"U\" not allowed as min/max RRD value\n-bug#0001158: Deleted user causes error on user log viewer\n-bug#0001161: Re-assign duplicate radio button IDs\n-bug#0001164: Add HTML title attributes for certain pages\n-bug#0001168: ALL_DATA_SOURCES_NODUPS includes DUPs? SIMILAR_DATA_SOURCES_DUPS is available again\n-bug: Cacti does not guarentee RRA consolidation functions exist in RRA's\n-bug: Alert on changing logarithmic scaling removed\n-bug: add_hosts.php did not accept privacy protocol\n-security: Fix several security vulnerabilities\n-feature: show basic RRDtool graph options on Graph Template edit\n-feature: Add additional logging to Graph Xport\n-feature: Add rows dropdown to devices, graphs and data sources\n-feature: Add device_id and event count to devices\n-feature: Add ids to devices, graphs and data sources pages\n-feature: Add database repair utility\n-feature: Default Script Server/Script Queries now accept host specific ping_retries, max_oids\n-feature: Support for new variables |host_ping_retries| and |host_max_oids|\n\n0.8.7a\n-bug#0000895: \"Use Per-Data Source Value (Ignore this Value)\" runs only when when checking \"Allow Empty Input\"\n-bug#0001029: Add --autoscale-min (rrdtool 1.2.x only) and --autoscale-max (using upper AND lower limit)\n-bug#0001035: Allow for --logarithmic scaling without autoscaling\n-bug#0001038: Data sources in RRAs have random order, messing up predefined CDEFs\n-bug#0001043: Graph Templates drop down populates with duplicates\n-bug#0001046: Upgrade from 0.8.6j to 0.8.7 defaults to Authentication Method NONE\n-bug#0001052: Graph template - GRINT creates CF function DEF\n-bug#0001055: Invalid date format - \"half hour\" not the GNU Date format\n-bug#0001057: SQL error when using 'Auth Method' None when no 'guest' user exists\n-bug#0001058: Graph Filter dropdowns do not respect user graph permissions\n-bug#0001059: Potential SQL injection vulnerability\n-bug#0001060: RRDtool 1.2.15 complain for garbage characters when rrdtool_function_xport is used\n-bug#0001061: cmd.php: potential call to invalid \"availability_method\" key on wrong hash\n-bug#0001064: Log file viewer inefficient filtering uses excess memory\n-bug#0001066: doc change for using COUNTERs as integers only\n-bug#0001067: Fixed extra spaces in GPRINT. Better Alignment for Autopadding\n-bug#0001068: doc change for patching cacti when running SELinux\n-bug#0001070: Cron interval detection causes multiple pollers to run\n-bug#0001073: Max OIDS is not saved in device view\n-bug#0001078: Undefined variable: rra in graph.php on line 241\n-bug#0001079: Dates are not stored in host table using correct format\n-bug#0001080: Graph Export Generates SQL Errors\n-bug#0001081: Usernames with spaces and dashes are not able to save\n-feature#0001035: Allow for --units=si on logarithmic scaled graphs (rrdtool-1.2.x only).\n-feature#0001069: add opacity/alpha channel to graph items (rrdtool-1.2.x only).\n-feature#0001065: Move to Top for List and Tree View. Omit boring scrolling\n-feature: add availability pings to host interface\n\n0.8.7\n-bug#0000480: Fix error after altering graphs displayed per page\n-bug#0000740: Add support for setting the PHP session name of Cacti\n-bug#0000829: Add support for an specifying an uptime OID for SNMP queries\n-bug#0000830: Add filtering graphs by Graph Template\n-bug#0000833: Add favicon.ico support\n-bug#0000850: Add Select All for graph list view\n-bug#0000854: Move \"Downed Host Detection\" into the device edit screen\n-bug#0000873: Fix issues with the poller hanging in certain situations\n-bug#0000876: Add ability to search for host with a not UP status\n-bug#0000898: Selecting a CUSTOM timespan and then CLEARing yields \"LAST HALF HOUR\" preset\n-bug#0000899: Add local checking to the Paths tab on the Settings page\n-bug#0000902: Fix issues with cmd.php and PHP 4.4.1 under windows\n-bug#0000903: snmpgetnext function does not exist in PHP less than 5.0\n-bug#0000904: Data Source creation fails without php-snmp\n-bug#0000906: Every tenth host does not show on tree during console edit\n-bug#0000907: Sorting of data sources when interface numbers are used without leading zeros are incorrectly sorted\n-bug#0000908: Graphs created by SNMP data queries are losing their specific names if the template is modified\n-bug#0000910: Cacti complains when trying to set the data source \"maximum value\" to any number with a decimal point\n-bug#0000912: Nth Percentile thumbnail graphs fail with RRDtool 1.2.15, 1.2.18\n-bug#0000913: Allow direct linking to specific graph pages\n-bug#0000919: Fix problem with ping_tcp function\n-bug#0000920: Improved handling of rrdtool --font parameter\n-bug#0000921: Improvement to ping.pl script\n-bug#0000925: Support for host_* variables in the legend\n-bug#0000926: Stop removing useful characters when searching\n-bug#0000927: Classic export does not recognize thumbnail columns properly\n-bug#0000931: New rrdtool fails on empty comment\n-bug#0000934: Column 'status_last_error' in table 'host' too short.\n-bug#0000937: System output in hosts.php poor for Alcatel\n-bug#0000946: Timetick of zero returns down for device\n-bug#0000947: Trailing blank on OID in form causes problems\n-bug#0000953: SNMP Passphrase is displayed in cleartext\n-bug#0000954: Y-grid lables are not informative when using --alt-autoscale\n-bug#0000955: Fixed possible denial of service attack by modifying graph image URL\n-bug#0000956: Additional editing help with tree management\n-bug#0000957: Script server output's beginning/trailing data during \"Include\" causing a synchronization issue\n-bug#0000958: Slope Mode is now selectable\n-bug#0000959: Alarming added when poller output table is not empty\n-bug#0000963: TCP/UDP capitalization\n-bug#0000965: When setting filters under utilities, pressing enter takes you back to the main page\n-bug#0000966: Log file viewing utility has no ability to filter\n-bug#0000969: In some versions of PHP, the graph tree will not view properly\n-bug#0000970: Incorrect debug messages in lib/ping.php for failed UDP ping\n-bug#0000974: No graphs on Fedora core6 using sunone/iplanet 6.1 SP5\n-bug#0000975: Add Nth Percentile aggregate_current - Summing Multiple Data Sources with like names for Nth Percentile\n-bug#0000982: Remove invalid references to the \"output_string\" column in the \"data_input\" table\n-bug#0000983: Bad SQL: snmp_query_graph_rrd.snmp_query_graph_id=\n-bug#0000984: Poller does not correctly flush poller_output table after a memory error\n-bug#0000989: hyphen - host description used with Data Source Path\n-bug#0001001: \"Purge User Log\" keeps invalid entries\n-bug#0001002: Cacti reports incomplete interface status\n-bug#0001007: SNMPv3 password field allows command injection\n-bug: ss_sql.php causes the script server to crash\n-bug: Timeshifter added to base code\n-bug: Allow query_ and host_ substitution in COMMENT and CDEF's.\n-bug: Command line interface scripts to add devices, graphs, tree's and permissions.\n-bug: Correct index error when creating graphs when you have no hosts on your system.\n-bug: More recent versions of net-snmp broke SNMP walk functions.\n-bug: Adjust for problematic responses from some SNMP agents (IBM AIX).\n-bug: Improve logging in cmd.php and poller.php when parameters are not specified correctly.\n-bug: Reduce the total number of SQL queries called\n-bug: Replace inefficient strip function in process_poller_output\n-bug: Some php_snmp implementations return strings as \"Hex-STRING:\".  In these cases properly resolve the string\n-bug: Correctly assign right and left click actions for Opera\n-bug: Fix SQL error when viewing an invalid Data Source via the Log Viewer\n-bug: Fix command line user copy utility\n-feature: Paginate the Graph Creation Page\n-feature: Add SNMPv3 Support to Cacti\n-feature: Add a Notes field to the Device that can contain arbitrary information\n-feature: Add Availability Methods to Cacti including per Host Ping Methods and Timeouts\n-feature: Add Max OID's to te Host Level\n-feature: Allow CSV Export from the various Graphs page\n-feature: Add rra_path as a global.php config variable\n-feature: Add drop down actions to data queries\n-feature: Add drop down actions to data input methods\n-feature: Add drop down actions to user administration\n-feature: Add filtering and pagination to data queries\n-feature: Add filtering and pagination to data input methods\n-feature: Add filtering and pagination to host templates\n-feature: Add filtering and pagination to user administration\n-feature: Add extended LDAP authentication support\n-feature: Add Web Basic authentication\n-feature: Add authentication realm to modifiable user parameters\n-feature: Add multiple polling intervals\n-feature: Moved command line scripts to cli sub directory\n-feature: include/config.php now only includes database configuration\n-feature: include/config_* have been renamed to include/global_*. Note: Script servers need to be updated.\n-feature: Allow VRULE's in Cacti to specify an absolute timestamp in addition to [+/-]HH:MM\n-feature: Add 1 minute RRA\n-feature: Add item select highlighting to main pages\n-feature: Let poller.php be more intelligent about poller intervals less than 60 seconds\n-feature: Add consistency to Filters by adding nowrap to td items\n-feature: Add Graph and Data Source counts to Device page\n-feature: Add Poller Interval to Data Sources page\n-feature: Keep filters aligned with main page content on window resize\n-feature: Add Enable/Disable user\n-feature: Add copy and batch copy of users\n-feature: Reduce ADODB memory consumption during polling\n-feature: Add new RRDtool Function to facilitate CSV export\n-feature: Add the ability to ignore custom RRA settings when importing templates and use this behavior by default\n-feature: Add technical support output to System Utilities\n-compat: Add additional checking due to php-snmp changes in Windows\n-compat: Remove GIF as a supported file type for RRDtool 1.2.x and added SVG file type\n\n0.8.6j\n-bug#0000842: SNMPv3 password field does not check if entered passwords match.\n-bug#0000848: Fix \"PHP Script Server communications lost\" error in the poller under high network load.\n-bug#0000859: User log \"purge\" now keeps the last successful login.\n-bug#0000861: Use downed host detection even when the SNMP community is blank.\n-bug#0000864: Apply natural sort to graph items in the tree.\n-bug#0000867: Apply various cleanups to poller.php and lib/poller.php.\n-bug#0000870: Add sorting to the graph templates list on the \"Change Graph Template\" page.\n-bug#0000877: Fix issue that caused PHP 5.2.0 to break the Windows cmd.php poller.\n-bug#0000882: Add \"collapsible\" branches to the graph tree editor.\n-bug#0000883: Fix exploit in cmd.php with register_argc_argv enabled in PHP.\n-bug#0000884: Add bottom navigation bar to graph viewing.\n-bug#0000885: Fix issue causing spaces to be removed when importing/exporting data input methods.\n-bug#0000886: Allow SNMP ping to utilize the snmpgetnext call instead of snmpget.\n-bug#0000890: Fix issue with dec-vulnerability-poller patch breaking graph_view.php.\n-bug#0000892: Fix hostname sorting on the devices page for IP addresses.\n-bug#0000894: poller.php does not give any output with MySQL disabled in CLI's php.ini.\n-bug: Template export produces invalid XML escaped character encoding.\n-bug: Data queries were not sorted properly during initial display.\n-bug: Apply various graph changes required for Boost plugin.\n-bug: If your system has no hosts or graphs, you would get a warning when creating new graphs.\n-bug: If using the CGI version of PHP, the script server risked not starting properly.\n\n0.8.6i\n-bug#0000188: Add ability to sort columns by selecting column headers.\n-bug#0000199: Exported thumbnail graphics shows limited time range only.\n-bug#0000207: Correct unit size displayed in the default 'Localhost - Memory Usage' graph.\n-bug#0000286: Fix issue with bandwidth summation on exported graphs.\n-bug#0000313/#0000561: Don't print menu/titlebar by using CSS class noprint.\n-bug#0000316: Take the unit value field into account when creating graphs.\n-bug#0000395: Fix graph export FTP functionality in Unix environments.\n-bug#0000430: Add natural sort order option for graph trees.\n-bug#0000433: Remove script server restriction on varying case path names.\n-bug#0000488: Remove reliance on HTTP_USER_AGENT to prevent possible notices.\n-bug#0000527: Fix issue updating the RRA for a graph tree item.\n-bug#0000584: Add barometer decimal fix to scripts/weatherbug.pl.\n-bug#0000624: Generate DEFs for graph items other than AREA, STACK, and LINE.\n-bug#0000643: Always display a human readable sysUpTime in the device edit page.\n-bug#0000665: Invalid index error on empty or 0 return set from rrdfetch with Nth Percentile.\n-bug#0000672: When creating a device, the Host Template was not properly validated.\n-bug#0000678: Allow graph export to a Cacti sub directory.\n-bug#0000681: Increase the size of the arg1, arg2, and arg3 fields in the poller_item table.\n-bug#0000692: Fix problems with FTP and the tree export method.\n-bug#0000693: Fix problems with the \"Expand Host\" option and the tree export method.\n-bug#0000698: Make arguments to 'df' more compatible with FreeBSD 6.0 in the \"Get Unix Partitions\" data query.\n-bug#0000705: Fix problem with the current selected data source item and SIMILAR_DATA_SOURCES_NODUPS (again).\n-bug#0000709: Fix problems with FTP and the tree export method (duplicate).\n-bug#0000720: Fix undefined variable message in script_server.php.\n-bug#0000721: SNMPv2 Query has issues with ifAlias & ifName when none present.\n-bug#0000727: Allow a user with specific graph permissions to be used when exporting graphs.\n-bug#0000730: Allow non-standard MySQL ports to be specified.\n-bug#0000731: Use proper defaults when adding a device to a tree from the Devices page.\n-bug#0000739: Stop ignoring the \"Unit value\" parameter in the graph template.\n-bug#0000741: Fix issue with links getting mismatched after using zoom on a graph.\n-bug#0000746: Make sure clearing Cacti log file from web interface preserves file permissions.\n-bug#0000752: Allow OID's greater than 255 characters except for the index OID because of MySQL index limitations.\n-bug#0000758: LDAP user with non-alphanumeric characters in the password failed to authenticate.\n-bug#0000761: Correct input validation to allow all possible numbers in the RRAs form.\n-bug#0000766: Increase the size of the id field in the graph tree items table.\n-bug#0000769: Use only selected RRA's when exporting graphs.\n-bug#0000775: Add pagination to the SNMP cache viewer to handle large numbers of items.\n-bug#0000779: Scale down the size of text when viewing thumbnail graphs.\n-bug#0000781: Add an \"enabled\" filter status item in the devices list.\n-bug#0000785: Fix issue with Graph Tree View and Data Query Index Sorting showing \"Non Indexed\" even if empty.\n-bug#0000786: Expose the SNMP port field to data sources that use SNMP.\n-bug#0000789: Remove use of \"action\" attribute on graph tree image which is incompatible with newer Opera browsers and HTML4.\n-bug#0000797: Fix issue with filtering on multiple fields on the Data Sources and Graph Management pages.\n-bug#0000809: Add an option to \"purge\" the user_log table.\n-bug#0000814: Prevent Apache from segfaulting if the database permissions are not correct.\n-bug#0000815: Paginated the Cacti log file viewer to handle large numbers of items.\n-bug#0000821: Add missing menuarrow.gif image.\n-bug#0000823: Prevent Cacti from overwriting data during the creation of a new data template.\n-bug: Do not allow the device filter on the graph items editor to clear the selected data source.\n-bug: SQL query incorrectly formatted causing SQL queries to fail in preview mode.\n-bug: Setting a host template filter in devices, followed by moving off and then back on the page generated an error.\n-bug: PHP 5.1 snmpwalks utilize the bulk method by default.  Therefore, prefer them over the bulkwalk binary.\n-bug: Allow read_config_option to force a database refresh when one is wanted.\n-bug: Fix to resolve script server script not returning data as expected.\n-bug: Make load average script compatible with Mac OS X systems.\n-bug: Correct an issue where under certain circumstances, |query_ifSize| was being implemented as the maximum value for an RRD.\n-bug: Correct issue where DHTML caching was not working with expand hosts enabled.\n-bug: Add SNMP retries option to Cacti's SNMP functions.\n-bug: Once Graph Export has been enabled, do not allow Cacti to run even after it has been disabled.\n-bug: Correct alphabetic tree sorting to be more natural.\n-bug: Fix meta refresh tags to use proper URL syntax.\n-bug: Do not allow the graphs setting page to use the refresh interval, which can cause it to refresh while the user is inputting data.\n-bug: Make sure that data query index ordering with the \"index_order\" XML field is always respected.\n-bug: Limit the number of rows retrieved from the poller_output table to minimize the impact low memory system configurations.\n\n0.8.6h\n-bug#0000383: Add more verbose RRDtool debug output from Graph Management.\n-bug#0000522: Take 'oid_index_parse' into consideration when handling 'OID/REGEXP:' data query fields.\n-bug#0000528: Allow template_import.php to return without error when XML file is invalid in PHP 4.4 and above.\n-bug#0000557: Changing filter value resulted in invalid page/row selection.\n-bug#0000572: Added $database_port to config.php.\n-bug#0000570: Grammar edit for text about already up-to-date.\n-bug#0000571: Misleading diagnostic error messages during install have been updated.\n-bug#0000582: Ampersand present in graph template graph name causes XML import to fail.\n-bug#0000585: Graphing fails using AREA/STACK/LINE/HRULE/VRULE without defined color.\n-bug#0000586: Remove static reference to RRA ID #1.\n-bug#0000596: Proper escape of ' in graph titles.\n-bug#0000599: Add filtering to graphs and data templates.\n-bug#0000601: Add ability to add multiple hosts to a tree.\n-bug#0000603: user_log.ip field not ipv6 compatible.\n-bug#0000608: Minor coding error in lib/poller.php with a erroneous pclose statement.\n-bug#0000615: Add sysContact and sysLocation output to device edit page.\n-bug#0000619: Host templates not alphabetized on device creation form.\n-bug#0000625: Cannot modify/create a user with a period in the username.\n-bug#0000631: Invalid information concerning delimiter for index_order in SNMP Query documentation.\n-bug#0000650: Clicking Cancel in Create Graphs for this Host does nothing.\n-bug#0000656: Perl scripts using back ticks is not portable.\n-bug: Stop MySQL connect messages from appearing in user interface.\n-bug: Allow primary keys other than \"ID\" to work in sql_save and in HTML code.\n-bug: Save statistics even when the poller times out.\n-bug: Only call poller_commands.php or poller_export.php if they require calling.\n-bug: Incorporate a timeout to ss_fping.php so that a host that takes to long to finish at least returns data.\n-bug: Correct the display of custom data under data input methods to follow the proper order.\n-bug: Change the default behavior of ping.php to mark a host as up if either SNMP or ping are successful.\n-bug: Don't allow graph_export to delete your web site.\n-bug: Correct issue where SNMP was not returning both hex and text data under certain circumstances.\n-bug: Prevent a never ending table lock in lib/tree.php.\n-bug: Correct issue where either AREA or LINEx without color were causing RRD_NL without any elements in rrdtool_graph.\n-bug: Allow hostname to include the TCP: prefix for TCP based snmp and keep tcp, icmp, udp ping functional\n-bug: Better error reporting for Clear Cacti Log File in Utilities\n-bug: Graphs with items having Legend text defined but no color will fail under RRDtool 1.2.x.\n-feature: Add MySQL 5.x support.\n-feature: Add IPv6 support to lib/ping.php.\n-feature: When utilizing cmd.php, do not run the script_server if it is not required for a process.\n-feature: Incorporate snmpbulkwalk binary path to user interface to speed snmpv2 and snmpv3 walk calls.\n-feature: Incorporate snmpgetnext binary path to user interface to make available for certain plugins.\n-feature; Add support for Nth percentile functions, not just 95th.\n-feature: Add support for new Nth percentile variables: aggregate, aggregate_max, aggregate_sum.\n-feature: Allow additional filtering for graph item adding while creating graphs.\n-feature: Add Command line script to copy users: copy_cacti_user.php.\n-feature: Add Command line script to reindex hosts: poller_reindex_hosts.php.\n-feature: Add Command line script to rebuild the poller cache: rebuild_poller_cache.php.\n\n0.8.6g\n-bug#0000351: Fix zooming capability in Safari.\n-bug#0000491: Allow underscore, dash, and forward slash characters through search string validation.\n-bug#0000498: Fix issue where editing data input methods damaged portions of the database.\n-bug#0000502: Fix Syslog support in unix.\n-bug#0000506/#0000517: Properly handle special XML characters when importing/exporting templates.\n-bug#0000508: Fix issues where filter functionality would not work in preview mode.\n-bug#0000512: Increase script server buffer size for large output.\n-bug#0000520: Fix issue where LDAP authentication causes crash/abort.\n-bug#0000521: Add graph/data source title mouseover support.\n-bug#0000525: Make sure that all files in the Cacti distribution contain an EOF character.\n-bug#0000530: Remove 132 character limitation for OID's during polling.\n-bug#0000531: Make sure that quote characters in suggested value fields are properly escaped.\n-bug#0000535: Fix template export support for PHP 4.4.\n-bug#0000536: Fix printing of zoomed graphs where in IE where a white box would appear over the graph.\n-bug#0000537: Re-implement functional SNMPv3 support (authNoPriv only)\n-bug#0000543: Always allow non-templated graph/data template fields to be blank.\n-bug#0000544: See graph tree export contrib below.\n-bug#0000547: Fix issue with escaping certain control characters, causing the graph tree to break.\n-bug#0000552: Fix typo on the Settings page.\n-bug: Fix multiple output support in the script server.\n-bug: Fix incompatible binary SNMP calling parameter issue with NET-SNMP versions earlier than 5.1.\n-bug: Fix issues encountered when polling invalid data sources.\n-bug: Fix issue where if a host was deleted, re-indexing would continue to attempt to be performed on it.\n-bug: Allow lib/ping.php to be included in user script server scripts.\n-bug: Eliminate the need to run php-win.exe in Windows environment.  Will now work with just php.exe.\n-feature: Add a great new graph export format \"Tree Presentation\", thanks to our friend from Toulouse France (forums user: jaybob).\n-feature: Allow data query |query_*| variables to be used within a CDEF string.\n-feature: Force export functions into a separate poller process.\n-feature: Force re-caching of data queries into a separate poller process.\n-feature: Added filter capability to graph list view mode.\n-feature: Enhanced ss_fping.php and ping.php to inclue ICMP, TCP and UDP ping functionality and to specify a port.\n\n0.8.6f\n-security: Hardened PHP Project Advisory #042005 - Cacti Authentification/Addslashes Bypass Vulnerability\n-security: Hardened PHP Project Advisory #022005 - Cacti Multiple SQL Injection Vulnerabilities\n-security: Hardened PHP Project Advisory #032005 - Cacti Remote Command Execution Vulnerability\n\n0.8.6e\n-bug#0000143: Allow the user to enter 'U' for unknown minimum and maximum data source input values.\n-bug#0000377: Fix logarithmic graph creation issues.\n-bug#0000392: Implement caching to reduce the number of SQL queries needed to render the graph tree.\n-bug#0000402/#0000457: Allow bounds to be set properly for logarithmic graph creation.\n-bug#0000428: Unable to try login again after Access Denied.\n-bug#0000450: Force strict checking for data query parsing to prevent numeric values from being incorrectly handled.\n-bug#0000453: SPAN tag between each character of GraphTitle in Graph Management.\n-bug#0000458: Generate and error message and exit poller.php if the cactid binary path is invalid.\n-bug#0000463: Fix Syslog logging of poller statistics.\n-bug#0000464: Remove dates from Syslog generated messages.\n-bug#0000465: Allow for the mass resize of graphs.\n-bug#0000471: Remove the graph 'Settings' tab if the user is not allowed to save graph settings.\n-bug#0000478: Validate field input values on the Data Templates page. Prevent duplicate data template items from appearing as a result of this bug.\n-bug#0000481: Add several checks to prevent PHP errors when parsing data query XML files.\n-bug: Graph zoom feature had incorrect bounding box when using RRD 1.2.x\n-bug: Speed the generation of the Tree View Dual Pane by caching the Tree to a local session variable.\n-bug: Handle STACK graph items properly in RRDtool 1.2.\n-bug: Prevent data query recaches if the device returns empty input.\n-bug: Fix potential issues with graph gaps when using a large number of poller processes.\n-bug: Fix issues when zooming with new RRDtool 1.2 title fonts with a point size other than 10\n-bug: Fix issues when zooming outside of the select areas causing a broken graph\n-bug: Fix issues experienced when users attempted to create custom graphs and thousands of data sources exist\n-feature: Add ability to filter by host status as well as add ability to filter accross both description and hostname\n-feature: Add additional options to control RRDtool 1.2 fonts.\n-feature: Allow the user to Enable/Disable Data Sources from the user interface and automatically disable hosts when deleting a device.\n-feature: Add Data Source information to the Cacti Log File to assist with troubleshooting.\n-feature: Add html links to both hosts and data sources in the Cacti Log File.\n-security: Fix several remote inclusion bugs that were exploitable when PHP's 'register_global' feature is turned on [IDEF0941], [IDEF1023], [IDEF1024].\n-security: Fix several SQL injection bugs due to improper input validation [IDEF1001].\n\n0.8.6d\n-bug#0000416: Speed up binary net-snmp calls by removing MIB lookup requirement.\n-bug#0000434/#0000403: Allow for periods in script return variable names.\n-bug#0000436: Made snmp.php more like version 0.9 code base.\n-bug#0000419: Fixed session initialization problems with some browsers.\n-bug#0000394: Fixed a web server crash when reordering items in a graph tree.\n-bug#0000390: Remove deep linking in Cacti.\n-bug#0000389: Implement directory security in Cacti.\n-bug#0000443: Add SNMP port/timeout to the Host MIB CPU/disk script queries.\n-bug: Corrected issues encountered when creating multiple graphs from a single graph template.\n-bug: Corrected a problem where no graphs are displayed in the graph tree when authentication is turned off.\n-bug: Allow RRDtool fetch command to retrieve negative numbers.\n-bug: Increased some field lengths for very long OID's.\n-bug: Removed references to non-existing code when attempting to make database connections.\n-bug: Give poller cache more time to process entries during a clear operation, give it more memory.\n-bug: Changed default value in Unix ping script to correct for template bug.\n-bug: Fixed page refresh issue.\n-bug: Fixed include ordering in config.php to accommodate MySQL bugs and logging.\n-bug: Changed SNMP ping OID to be sysUptime because it is more common.\n-bug: Increased PHP timeout to accommodate for long running recache events causing poller issues.\n-bug: LDAP Auth with no DN specified and blank username would allow login.\n-feature: Basic support for RRDtool 1.2 including specifying a default True Type Font.\n-feature: Added support for spike suppression within the cmd.php poller.\n-feature: Support php_snmp version 2 builtin functions.\n\n0.8.6c\n-bug#0000354: User Name field always displays \"admin\" in Mozilla web browser.\n-bug#0000293: JavaScript selection bug on the \"New Graphs\" page.\n-bug#0000352: Problem with the current data source item when using the \"Similar Data Sources\" special data source.\n-bug#0000348: Scale problems with the \"ucd/net - Memory Usage\" graph template.\n-bug#0000358: Problems adding the same graph to more than one graph tree.\n-bug#0000355: Allow scientific and negative numbers to be returned from a script.\n-bug#0000347: Change Order of Graph Templates and Data Queries in Host.\n-bug#0000339: LDAP description misspell 'allow'.\n-bug: Maximum runtime issues with the script server.\n-bug: User could select a data query graph type from \"Graph Templates\", causing duplicate data source items.\n-bug: Auto-recache failed and caused the poller to crash under specific circumstances.\n-bug: Problems saving a user's graph settings from the user admin page.\n-bug: Poller cache not being updated properly for some host types upon change.\n-bug: Hope it's final this time: 95th percentile and bandwidth summation fixes.\n-bug: Added more verbose error handling with template XML importing.\n-bug: Sort host templates when creating a host.\n-bug: Corrected user form edit array problem that didn't show the graph options for an edited user.\n-bug: Access Denied error when user doesn't have console access.\n-bug: Return type bug in cacti_snmp_walk() which could cause extra blank data query rows.\n-feature: Data queries now support indexes that span multiple OIDs (see the manual).\n-feature: Re-apply suggested naming to graphs from the user interface.\n-feature: TreeView-specific feature to speed up rendering the tree for large databases.\n-feature: Added retry logic to the MySQL connect statements.\n-feature: Changed default connect method to a 'pconnect' from a 'connect' to improve performance with large implementations.\n-feature: Add support for Safari on the graph zoom page.\n\n0.8.6b\n-bug#0000318: Only delete the Cacti system user when uninstalling the RPM package rather than during each upgrade.\n-bug: Problems with the 95th percentile and bandwidth summation graph variables.\n-bug: Problem with random gaps in some or all graphs caused by staggered RRDtool update times.\n\n0.8.6a\n-bug#0000287: Non-host based scripts failing to populate the poller cache (0.8.6).\n-bug#0000285: Data query variables on graphs should reflect the data source of each individual graph item (0.8.6).\n-bug#0000289: Check the value of PHP's \"magic_quotes_gpc\" setting to prevent potential security holes (0.8.6).\n-bug#0000295: Problem with the DHTML tree when Cacti is included inside of a parent frame.\n-bug#0000311: Set PHP's \"max_execution_time\" to \"0\" during all upgrades.\n-bug#0000303: Correct the logic that checks if the export path directory exists or not.\n-bug#0000310: Problems viewing data templates with the \"Data Input Method\" set to \"None\".\n-bug#0000304: Problems displaying duplicate data templates on the main \"Data Templates\" screen.\n-bug#0000302: Update the Windows install documentation to mention the \"PHPRC\" environment variable.\n-bug#0000293: Problem with the JavaScript that grays out already created graphs on the \"New Graphs\" page.\n-bug#0000312: Make sure that the \"host_graph\" table is populated in the installer for users coming from a version less than 0.8.4.\n-bug#0000296: Remove references to PHP's ob_flush() function it doesn't exist until verion 4.2.\n-bug#0000314: Respect graph export timing settings.\n-bug: Problem saving a templated graph or data source that contained a checkbox field that had a value different from the default.\n-bug: Typo in graphs.php when placing graph(s) on a tree.\n-bug: Make sure that there is a user logged in before trying to read a per-user graph configuration value.\n-bug: Fix support for multiple cmd.php/cactid polling sessions in a single poller.php session.\n-bug: Revert back to older RRDtool update method as to correct several poller related issues with 0.8.6.\n-bug: Fix PHP-SNMP support in cmd.php.\n-bug: Fix multiple graph/data template corruption issues when converting from graphs or data sources.\n\n0.8.6\n-bug#0000051: HTTP header caching problems (0.8.5).\n-bug#0000121: It is no longer possible to add the same graph twice to a single graph tree branch.\n-bug#0000123: Several UI fixes on the tree item edit page (0.8.5).\n-bug#0000124: Select all check boxes would actually invert the selection.\n-bug#0000128: Graph template item corruption issues (0.8.5a).\n-bug#0000139: Graph tree deletion corruption issue (0.8.5a).\n-bug#0000140: Replaced the 'None' option in several host drop downs with 'Any' and redefined 'None' to mean host = 0 (0.8.5a).\n-bug#0000144: Possible corruption issues when deleting tree items from the root of the tree.\n-bug#0000149: Error using the 'total' type for 95th percentile or bandwidth summation.\n-bug#0000151: Added the ability to duplicate a host template.\n-bug#0000160: A change in Mozilla 1.5+ caused extra vertical space to appear on many table rows throughout the console.\n-bug#0000164: HostMIB scripts do not respect SNMP port and timeout parameters.\n-bug#0000173: Increase the number of characters dedicated to each tier from 2 to 3 which increases the item per tier/branch limit to 999.\n-bug#0000174: Broken thumbnail graphs that contained a 95th percentile HRULE item.\n-bug#0000175: Strip quotes from SNMP output to prevent UI escaping issues.\n-bug#0000176: Added the '-P' argument to 'df' to prevent multi-line output for the query_unix_partitions.pl script.\n-bug#0000179: Updated ADODB to version 4.23 which enabled Cacti work with PHP 5.\n-bug#0000198: Strip greater and less than characters from SNMP output to prevent UI escaping issues.\n-bug#0000214: Rename 'Utilities' to 'System Utilities' and move it under the 'Utilities' menu heading.\n-bug#0000235: Limit the number of pages displayed for graph management, data sources, and devices.\n-bug#0000244: Prevent PHP errors from being displayed during summation/95th percentile calculation when the .rrd file does not exist.\n-bug#0000253: Fixed recursive CDEFs.\n-bug#0000254: CDEF dropdown list in adding another CDEF is not sorted.\n-bug#0000265: Removed \"CANNOT FIND GUEST USER\" error message.\n-bug#0000273: Fixed 'rrdtool fetch' parsing for RRDtool 1.0.9.\n-bug: A hash was not being generated for duplicated graph and data templates which would cause import/export for those templates to fail.\n-bug: A user's graph permissions may fail to delete properly after removing that user.\n-bug: The \"Export Every x Times\" feature did not work correctly.\n-bug: Work correctly with PHP's get_magic_quotes_gpc() turned off.\n-bug: Eliminated potential password injection attack in auth_login.php.\n-bug: Eliminated popen issues in cactid win32 with threads > 1.\n-feature/bug#0000118: Data source screen UI enhancements (0.8.5).\n-feature/bug#0000120: Deleting a tree header should delete all child items (0.8.4).\n-feature/bug#0000125: A forced sort type can be specified for data query indexes which will be used to sort data query results in the UI.\n-feature/bug#0000152: Added filter/search/pagination capabilities to the Devices page.\n-feature/bug#0000155: Allow hosts on the graph tree to be grouped by data query index (ie. switch port, partition, etc) instead of only graph template.\n-feature/bug#0000156: Added the ability to sort a graph tree branch alphabetically or numerically.\n-feature/bug#0000161: Removing a graph now gives the user the option to remove all associated data sources.\n-feature/bug#0000172: Added the ability to control which graph viewing areas should display thumbnail graphs and which ones should display full sized graphs.\n-feature/bug#0000185: Deleting a device gives the user the option of deleting all associated graphs and data sources.\n-feature/bug#0000187: Add host availability and device enabled/disable controls to the main devices page.\n-feature/bug#0000189: Add a system-wide defaults for SNMP community, version, port, timeout and retries configurable under 'Cacti Settings'.\n-feature/bug#0000192: Add the ability to log poller runtime statistics to the log.\n-feature/bug#0000194: Add host availability capability which allows Cacti to track of downed devices as well as a device's uptime history.\n-feature/bug#0000200: Implement three different auto re-index methods which allow Cacti to automatically 'refresh' a data query when an indexes changes.\n-feature/bug#0000213: Add a 'Clear' button to all filter forms which resets the form to its default state.\n-feature/bug#0000240: Add moonman's SIMILAR_DATA_SOURCES_NODUPS CDEF patch.\n-feature/bug#0000250: Allow host/graph tree items to change parents.\n-feature: Data query index types are now automatically selected which eliminates the need to prompt the user for this information at graph creation time.\n-feature: Better message handling on the \"New Graphs\" page.\n-feature: Get rid of the \"Data Input Method\" box from the data query edit screen as this data can be automatically derived.\n-feature: Customizable log levels.\n-feature: Ability to log to syslog (Unix) and event log (Windows) in addition to the log file.\n-feature: UDP/ICMP/SNMP ping support used to determine a host's availability status.\n-feature: A PHP script server which enables PHP script to be interpreted by the poller without spawning a separate PHP process for each item. See the manual for more details.\n-feature: Ability to choose the type of poller (cmd.php, cactid) and number of threads (cactid only) from the UI.\n-feature: Ability to spawn multiple simultaneous cmd.php/cactid processes to speed up the polling process.\n-feature: Allow data templates and data sources that use SNMP to override host fields (hostname, snmp port, etc) in the poller cache.\n-feature: Added Eric Steffen's Bonsai patch which enables users to zoom a graph by dragging a box around the area of interest.\n-feature: Added branix's graph export enhancements patch which adds many more graph export configuration options including remote FTP support.\n-feature: Ability to view/clear the log file from the console.\n-feature: Use a single RRDtool stdin pipe for all update, create, and graph export actions.\n-feature: Advanced timespan selector which provides a large number of presets and a calendar control for custom timespans.\n-feature: Better support for SNMP v2 from UI.  Speed up some UI queries.\n-feature: Enable/Disable Poller from UI.\n-feature: Added ifOperStatus to Graph Creation page to show either Up or Down.\n-feature: Rearchitected poller subsystem to prepare for multiple poller architecture in future releases.\n-feature: Added validation logic in the pollers to prevent system and log anomalies.\n-feature: Removed SNMP v3 options until SNMP v3 is supported.\n\n0.8.5a\n-bug#84: Updated internal CDEF caching to take CFs into account.\n-bug#86: Updated the LDAP code to correctly copy template users.\n-bug#136: Inaccurate total bandwidth readings for RRAs with a step > 1.\n-bug#138: Typo on install/index.php\n-bug#141: Incorrect pre-requisite file check when doing a graph export.\n-bug#142: Added the '-t' option when calling ucd-snmp or net-snmp to support numeric timeticks.\n-bug#145: phpMyAdmin was choking on the import of cacti.sql.\n-bug#146: Minor HTML fix in lib/form.php\n-bug: Fixed potential graph item input corruption when saving a graph template item.\n-bug: Fixed problem saving a data source using a template that had more than one item.\n-bug: Correctly display the console menu when authentication has been turned off.\n-bug: Correctly display the two pane tree when authentication has been turned off.\n-bug: Support regular expression characters in passwords: \\+*?[^]$(){}=!<>|:\n-bug: Fixed certain re-ordering problems when deleting branches from a graph tree.\n-bug: Add support for a 3 digit exponents in RRDtool fetch output on Windows.\n-bug: Correctly escape community strings with a quotation mark under Windows.\n-bug: 95th percentile and bandwidth summation code should result in less errors when things don't go as planned.\n-bug: Fix 'data_input_data_fcache' orphan when deleting a data source.\n-feature: Make the 'None' option on the graph management and data sources host filter dropdowns only display items with no host assigned. Add an 'Any' option to display items assigned to all hosts.\n-cactid: Fix segfault problems on all platforms when performing SNMP queries.\n-cactid: Fix deadlock issues on Windows and Solaris when making popen calls.\n\n0.8.5\n-bug#102: Fix problem with SNMP community strings that contain certain variable shell characters.\n-bug#103: Under \"New Graphs\", make sure to highlight the host template line when the right-hand checkbox is selected.\n-bug#104: Typo in the usage for the query_unix_partitions.pl script.\n-bug#105: On the data query edit page, only display compatible items in the \"Data Input Method\" dropdown.\n-bug#106: Render the main menu based on a user's permissions so graph-only users cannot see a list of menu options when attempting to view 'index.php'.\n-bug#109: Replaced all instances of 'ifDesc' with the correct 'ifDescr' when dealing with the IF MIB.\n-bug#110: Be smarter about redirecting the user to the correct page when the user's login option is set to \"Show the page that user pointed their browser to\".\n-bug#111: Take host permissions into account when rendering the left-hand pane in tree view.\n-bug#112: Every 10th tree item was not being displayed.\n-bug#115: Fixed a bunch of misspellings of the word 'substitute' throughout the code.\n-bug#116: Restructured the edit screens for CDEF items and tree items, making them less confusing to users.\n-bug#119: Added a \"Search:\" label to the filter textboxes on the \"Graph Management\" and \"Data Sources\" pages.\n-bug#127: Added an HTML \"title\" tag to the three graph mode images.\n-bug#129: Added support for correctly parsing timeticks in both cmd.php and cactid.\n-bug#130: Users are sometimes redirected to the incorrect host when selecting the \"Create Graphs for this Host\" link under \"Polling Hosts\".\n-bug#131: Load averages above '10' were not being returned correctly from the loadavg_multi.pl script.\n-bug#133: Non-SNMP data sources were not being removed from the poller cache when a host became 'disabled'.\n-bug#134: Make sure to delete associated 'host' tree items when deleting a host.\n-bug#135: Fix the navigation display so it doesn't display errors when directly linking to a graph.\n-bug#137: Remove the 'td.shadow' CSS class as it isn't being used and contains an incorrect image reference.\n-bug: Allow the user to enter a \"Unit Exponent Value\" of '0'.\n-bug: Remove all references to $_SERVER[\"HTTP_REFERER\"] for web servers that do not include this variable.\n-bug: Extend the \"Maximum JavaScript Rows\" feature to work for host templates as well.\n-bug: Fixed a few parsing problems that were causing problems for users including a '\\' or '/' in their script's input string.\n-bug: The correct representation of memory usage using net-snmp should be 'free memory + cache memory + buffered memory'.\n-bug: Fixed a problem importing CDEF items correctly from an XML file.\n-bug: Deleting a GPRINT preset now correctly displays the name of the item about to be removed.\n-bug: Problems importing XML that contained a host template with more than one associated graph template.\n-bug: Added a potential workaround for the PHP session/popen bug which occurs on Windows systems using PHP in ISAPI mode.\n-feature: Data query variables such as |query_ifAlias| can now be included on the actual graph in the \"Text Format\" or \"Value\" field.\n-feature: Added two new special data sources to CDEFs, which enable users to use the data source's maximum or minimum value in a CDEF.\n-feature: Added a new SNMP query source type, \"VALUE/REGEXP\", which enables users to parse the SNMP value with a regular expression before passing it onto Cacti.\n-feature: Hide the \"Console\" tab from users that only have rights to view graphs.\n-feature: Added a new 95th percentile type, \"max\", which calculates 95th percentile based on the maximum of either inbound or outbound for each sample. This is how most co-location facilities calculate 95th percentile for billing purposes.\n-feature: Update ADODB to version 4.05.\n-feature: Data source graph inputs are automatically added and maintained by Cacti for new graph templates as to reduce user confusion.\n-feature: The \"Graph Management\" and \"Data Sources\" edit pages are much improved when using a template.\n-feature: Renamed \"Polling Hosts\" to \"Devices\" since polling hosts technically implies that you are managing the hosts that poll data, which could be reserved for later use.\n-feature: If you enter a value for a \"host field\" in the data template, Cacti will use that value rather than always defaulting to the host. If you leave it blank, Cacti will use the value from the host.\n-feature: Data input method type codes 'snmp_timeout' and 'snmp_port' are now supported.\n-feature: Users will only see tabs for the graph viewing modes that they have access to.\n-doc: Completely re-written manual in SGML/Docbook so HTML, PDF, and ASCII versions of the manual are now possible. The new manual also includes a better introduction to Cacti for new users and makes use of screen shots to illustrate various portions of the user interface.\n-cactid: Fixed segfault problems using cactid on Solaris platforms.\n\n0.8.4\n-bug#87: Deleting top level branches without children on the tree caused ordering problems.\n-bug#88: Possibly popen/pclose concurrency problem with cactid.\n-bug#89: Missing \"check all\" checkbox on polling hosts page when an empty column was drawn.\n-bug#91: Fix undefined index errors on data source checkbox popups.\n-bug#92: Fix undefined index errors on graph management checkbox popups.\n-bug#96: Problems creating graphs from data queries where there was only row row total in the query result.\n-bug#97: Typo in cmd.php\n-bug#98: Creating a data source or graph with no host or template, would result in an extra empty item.\n-bug#99: Deleting a graph or data template that was still attached to one or more items would cause the graph/data source to appear to still have the deleted template still attached.\n-bug: Removed size limits on Linux memory data template.\n-bug: Undefined variable errors when creating new graphs/data sources without a template.\n-bug: multiple problems that caused the Windows disk space and CPU graphs to stop working.\n-bug: Broken images for bandwidth summation graphs that were less than a day old.\n-bug: Graph order changes on the tree would affect other graph trees.\n-bug: Problem with the \"Host MIB - Hard Drive Space\" data template that broke Windows disk spaces graphs.\n-bug: Fixed the LDAP authentication code, which was partially broken in 0.8.3.\n-bug: Fixed a cmd.php parsing problem when input and output fields are sharing the same name.\n-bug: Added basename() to all PHP_SELF references to make sure all hrefs stay absolute.\n-bug: The RRA field is now honored for the dual pane tree view.\n-bug: The |date_time| graph variable now displays the current day of the month.\n-feature: The \"Total All Items\" CDEF is now able to total NaN's without becoming 'U'.\n-feature: Data query results are now grayed out if they have already been created.\n-feature: The \"cacti Web Root\" and \"Web Server Document Root\" settings are completely auto-detected now.\n-feature: Add SNMP port and SNMP timeout fields to each host.\n-feature: Removed the \"Management IP\" field in polling hosts in favor of \"Hostname\".\n-feature: Re-organized the menus expand/contract for less used items to help save vertical space.\n-feature: Added complete template to XML import and export support.\n-feature: Moved the graph creation features of \"Polling Hosts\" to a new menu item,\"New Graphs\".\n-feature: Added verbose debugging support for data queries.\n-doc: Added a FAQ.\n-cactid: Removed lots of potential buffer overflows.\n-cactid: Several libz/openssl autoconf fixes that improve FreeBSD 5.x support.\n-cactid: Fixed some potential segfaults on FreeBSD when reading information from the targets table.\n-cactid: The snmp_get() function now respects the SNMP version chosen under \"Polling Hosts\", so 64-bit counters should work.\n\n0.8.3a\n-bug#81: Partial/complete poller cache rebuild failure after an upgrade.\n-bug#82: Undefined variable error messages under win32/IIS.\n-bug: Problems with overlapping graph permissions with multiple users.\n\n0.8.3\n-bug#50: When viewing a graph, only display it for the RRAs used on the graph.\n-bug#66: Users can see a list of all hosts in graph preview mode.\n-bug#71: Extra escape characters in the |date_time| variable output.\n-bug#72: Disk space graph for ucd/net was broken for original 0.8 users.\n-bug#75: Problems monitoring more than one CPU with query_host_cpu.php.\n-bug#76: Cactid segfault on Solaris caused by unchecked use of NULL with sprintf.\n-bug#77: Cactid segfault upon a MySQL connect error.\n-bug#79: Check for unique/valid data when the user selects a field to index their new data sources off of.\n-bug: Redirect user to the correct page after a forced password change.\n-bug: Problems entering negative numbers for upper/lower limit fields on graph pages.\n-bug: Never try to use internal SNMP support if SNMP version 2 or 3 is selected.\n-bug: Adding or removing data source items in a data template should update attached data sources as well.\n-bug: Problems updating certain fields when switching or turning off both graph and data templates.\n-bug: Got rid of the \"Use Per-Data Source Value\" checkbox where it isn't usable.\n-bug: Strange sequence/ordering behavior after updating an already created tree item.\n-bug: Error message displayed instead of 'Access Denied' message.\n-feature: Added host and graph template permissions for graph viewing users.\n-feature: Added a new 'dual pane' tree view type that draws the graph trees on a DHTML tree on the left side of the page.\n-feature: Added the ability to add hosts to a tree.\n-feature: Added a 'timespan' field to \"Round Robin Archives\" to determine the timespan (in seconds) of graphs using each RRA.\n-feature: Completely replaced the header images/layout for both the console and graph viewing pages\n-feature: Added a navigation bar in the header so you can keep track of you location in the UI.\n-feature: Added bandwidth summation support. See the manual for more information.\n-feature: Made the installer more verbose about SQL it runs during an upgrade.\n-cactid: Changed threading strategy to spawn threads based on hosts.\n-cactid: Created header files for each source file and moved precasts out of cactid.h.\n-cactid: A bunch of autoconf updates.\n\n0.8.2a\n-bug: Fixed various problems updating the poller cache.\n-bug: Fixed the Weatherbug script to work under Redhat 9.\n-cactid: Updated poller to use detached threads based on each host.\n\n0.8.2\n-bug#47: The 'cacti_server_os' variable is now auto-detected.\n-bug#56: Possible endless loop for non 0.8 users in version upgrade loop.\n-bug#57: Cacti does not take the 'graph_tree_id' column into account when re-ordering trees which can cause unexpected results.\n-bug#59: Regular expression bug that caused 'query_unix_partitions.pl' not to function on FreeBSD.\n-bug#60: Incorrect index OID in the (currently unused) 'host_disk.xml' SNMP query.\n-bug#61: Problems adding additional graph items to an input after the template is in use by graphs.\n-bug#64: Cactid now checks for the RRDtool path in the 'settings' table.\\\n-bug#67: Problems with wrapping and 'diskfree.pl'.\n-bug: Problems deleting GPRINT presets.\n-bug: Undefined variable errors on the graph settings page if built in user authentication was turned off.\n-bug: Kill cached field value when messages are displayed.\n-bug: Graph trees now honor the RRA selected when creating the tree (andyfud.org.nz)\n-bug: Graph and data source titles are now properly updated when making changes to graph or data templates.\n-bug: Unexpected results when trying to delete top level branches from a graph tree.\n-bug: Problems expanding/contracting trees when two or more nested branches had the hidden flag set.\n-feature: Added ability to turn off checks for an entire host.\n-feature: Added SNMP and operating system variable printout to the about page.\n-feature: Added 95th percentile support. See the manual for more information.\n-feature: Added setting for data query maximum field length.\n-cactid: Added downed host detection.\n-cactid: Code cleanup: formatting, compiler warnings, and removal of unused functions.\n-cactid: Daemon support has been removed from cactid for the time being, it must be run out of CRON.\n-cactid: Have autoconf detect net-snmp before trying ucd-snmp to prevent failure on default Redhat installs.\n\n0.8.1\n-bug#40: Fixed OIDs in serveral Netware data templates.\n-bug#41: Data source and graph names are lost when created from a  template.\n-bug#44: Fixed Host MIB logged in users OID in data template.\n-bug#46: Fixed an RRDtool/PHP binary variable mixup on the install page for win32 users.\n-bug#48: Changed the \"Create\" button on the settings page to \"Save\".\n-bug#52: Make sure the data source/graph names are pulled down after clicking \"Create\", so the user can press cancel.\n-bug: Changed references from $_SERVER[\"SCRIPT_NAME\"] to $_SERVER[\"PHP_SELF\"] because of strange behavior on PHP 4.3.2 under Windows.\n-bug: Make sure to filter on the \"cached title\" for on both the data sources and graph management pages.\n-bug: Fixed error when debug mode was on and the user tried to add a new graph or data source.\n-bug: Take tree permissions into account when displaying the \"Default Tree\" dropdown on the graph settings page.\n-bug: Incorrect graph title was displayed on graph tree delete confirmation.\n-bug: Win32: Graphs were being exported even when the graph export path was left blank.\n-bug: Exported graphs were displayed in the incorrect order.\n-bug: Legends were not displayed on exported graphs.\n-bug: HRULE items caused graphs to break.\n-feature: You can now use negative VRULE items, such as '-12:00' to display a line 12 hours ago.\n-bug: Data queries that had a non-integer index would not render graph/data source titles properly.\n-auth: LDAP authentication updates\n\n0.8\n-feature: Added support for graph, data source, and host templates.\n-feature: Added a stricter concept of hosts which enables better organization and easier graph creation.\n-feature: Created data queries which enable the retrieval of indexable data in the form of a query.\n-feature: Revised the entire UI creating more functional and attractive forms.\n-feature: New generic poller interface enables other pollers to handle the data gathering for Cacti.\n-feature: Added support for net-snmp 5.x.\n-docs: Revised the install documentation and re-wrote the manual for this version.\n-feature: The beginnings of a threaded c-based poller (cactid), which is not completely function at this point.\n-feature: And much much more...\n\n0.6.8a\n-bug: Unchecked string being passed to rrdtool caused a potential security problem.\n-bug: The logout funtionality was broken for some users because of a missing fourth argument.\n-bug: Fixed some SNMP parsing problems.\n-bug: Fixed a problem with using quotes for data source input.\n\n0.6.8\n-feature: Added the following new rrdtool graph options: --units-exponent value, --unit, and --logarithmic.\n-feature: Added the ability to show exact numbers in GPRINT, users can now specify a custom GPRINT string on a per-graph item basis.\n-bug: Any data input source with more than one output would be added as a multi-data source .rrd file.\n-bug: Some data source file name issues.\n-bug: Cacti now checks to see if a host exists when adding it to be graphed.\n-feature: There is now an optional \"remove verification\" for most of cacti's dialogs.\n-feature: There is a \"logout\" button when viewing graphs (not for the guest user).\n-docs: Updated the Win32 docs (thanks Larry).\n-bug: Fixed some rare HTML \"multipart/form\" bugs with PHP.\n-feature: Added a \"Default View Mode\" for each user when viewing graphs.\n-bug: Fixed some bugs where you would change a parent graph item to a child or a child graph item to a parent when graph grouping was turned on.\n-bug: Fixed some potential security bugs by eliminating cacti's use of cookies.\n\n0.6.7\n-feature: Added a \"none\" option for a data source when creating a CDEF. This can be used if you check the \"Use the current data source being used on the graph instead of a preset one\" box.\n-feature: Each user has a default graph policy: ALLOW or DENY for their graph permissions.\n-bug: Unique .rrd filename/data source name issues for SNMP \"Make Graph\" have been fixed.\n-feature: Changing the data source for a graph group parent will change the data sources for each of the child items.\n-bug: Logging has been fixed so errors do not show up in the Apache error_log any more.\n-bug: VRULE's work correctly now. Enter a time in the \"value\" field to use them, such as \"00:00\" or \"14:00\".\n-feature: If you select a graph to be added to the graph hierarchy, the \"This Item is a Graph\" checkbox is automatically selected.\n-docs: Install docs have been updated for Unix/Win32, documentation on upgrading cacti has been added. See the 'docs/' directory for more information.\n-bug: SNMP can function on win32/unix without snmpwalk/snmpget binaries. This will only work if you have php-snmp support compiled into both your php binary and web server modules. This is already the case for win32.\n-bug: A bug when more than one data source was created using the same data input source with multiple outputs has been fixed.\n-feature: The default install/upgrade screen has been revised.\n\n0.6.6\n-feature: Multiple data sources per .rrd is supported. To use this feature, simply create a data input source with multiple outputs that 'Update RRA'.\n-feature: Graph item grouping, which enables you to delete/reorder groups of similair graph items.\n-feature: Graph preview and output preview in the console, which allows you to preview what a graph will look like/what rrdtool's output is.\n-feature: Graph-based permissions have added, you can also show/hide certain hierarchies per user.\n-feature: Multiple data source per .rrd file support, read the docs for more information.\n-feature: You can now export graphs to static png's/html's every n times.\n-feature: By default, SNMP data source names come from <IP>_<IFNUM>, instead of just <IFDESC> which is more unique.\n-feature: More options for users such as where to go when the user logs in and whether the user can have their own settings or not.\n\n0.6.5\n-bug: Fixed some of the data source naming issues. You can now use any data source name you want; cacti will take care of making the name \"rrdtool friendly\".\n-feature: Cacti will use PHP's builtin SNMP support if detected, SNMP is overall faster now too. NOTE: PHP's SNMP support may not work with all of your MIB names, you may have to use the OID instead!\n-feature: Basic high speed counter support has been added, use 'hcin'/'hcout' to use it. Also may not work with PHP's builtin SNMP support yet.\n-bug: Using the MAX consolidation function with graph data works better now. You can make graphs that look like the MRTG ones (5 minute maximum). This code still needs a little work though.\n\n0.6.4\n-bug: You can now add the same CDEF to multiple data sources in the same graph.\n-feature: Ability to \"sync\" changes with the .rrd file with rrdtool's TUNE function. Cacti also tries to fill in internal data source path and name information to keep graphs from \"breaking\" when possible.\n-settings: You can now change the PHP Binary path from within cacti.\n-feature: Cacti can now export static images/html files when it gathers data like MRTG did.\n-feature: Multiple graph hierarchies are supported.\n-feature: You can now \"zoom in\" on any portion of the graph hierarchy by clicking on a header item.\n-bug: Some changes were made to make cacti more win32 complaint; a tutorial on how to setup cacti on win32 can be found on the raXnet page.\n-feature: You can now create all graphs for an SNMP host with one click.\n-feature: You can customize the graph title when creating graphs using the 'Make Graph' or 'Make All Graphs' link.\n-feature: Data sources in cacti are no longer limited to 19 characters. If you create a data source name that rrdtool will not like, cacti will automatically modify the name and save it internally for rrdtool-only use.\n\n0.6.3\n-feature: Put limits (HTML 'maxlength') on fields that have a maximum length.\n-feature: Added 'cacti Settings' and 'User Administration' to the cacti menu.\n-feature: Added a 'Step' field for Data Sources to graph data at non-300 second intervals.\n-feature: Added a '--rigid' on/off option, plus the ability to choose between '--alt-autoscale' and '--alt-autoscale-max' when using auto scale.\n-feature: Added a 'Base Value' field to the graphs to adjust how the vertical axis is displayed.\n-feature: Updated the menu/header graphics for a smoother look and easier navigation.\n-feature: cacti now stores its settings in the database instead of config.php, so they can be manipulated under 'cacti Settings'. Database credentials are still located in config.php however.\n-feature: Added a preview of the rrdtool source when creating data sources.\n-feature: Added a \"data source duplicate\" function and moved \"graph duplicate\" to \"Graphs\" on the cacti menu.\n-settings: You can now turn on/off cacti's builtin authentication.\n-settings: You can control what is logged (create, graph, snmp, update).\n-feature: Added a \"Total All Data Sources\" CDEF, which can be used to represent the total of all of the data on a graph.\n-bug: Fixed a few add/edit/delete form-related bugs.\n-docs: Added some more content to the documentation and made it more visible from within cacti.\n\n0.6.2\n-bug: Fixed some bugs when creating CDEF's using multiple data sources.\n-bug: Fixed more SNMP parsing bugs with some versions of net-snmp.\n-feature: added an \"auto-refresh\" feature to the graphs (thanks Nossie).\n-bug: HRULE's and VRULE's acually work now.\n-docs: the beginnings of some real documentation.\n-bug: you can select the color black now.\n\n0.6.1\n-bug: Fixed a parsing bug with snmp, more parsing is done in cacti's code and not via arguments passed to snmpget.\n-auth: Updated the function used to hash passwords (more compatible with older MySQL versions), more strict on document caching.\n-feature: Easier installation: cacti now checks for common problems and gives suggestions. Database updates are also done at this time.\n-bug: Fixed a problem with adding new data input sources.\n-bug: Problem saving the wrong numbers for 'Round Robin Archives'.\n-feature: Ability to preview the output of the cron script from a web browser under 'Cron Printout'.\n-feature: Added 'Logout User' to the menu.\n-bug: Removed some occurances of /var/www/html and replaced them with more dynamic variables.\n\n0.6\n-new tree code\n-some html table issues in graph view mode\n-fixed the settings code for saved graph-view data\n\n0.5\n-initial release\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_aggregate.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/html_form_template.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/reports.php');\ninclude_once('./lib/rrd.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\naggregate_prune_graphs();\n\n$graph_actions = array(\n\t1 => __('Delete'),\n\t4 => __('Place Graphs on Report'),\n\t2 => __('Migrate Aggregate to use a Template'),\n\t3 => __('Create New Aggregate from Aggregates')\n);\n\n$agg_item_actions = array(\n\t10 => __('Associate with Aggregate'),\n\t11 => __('Disassociate with Aggregate')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tgraph_edit();\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\taggregate_graph();\n\t\tbottom_footer();\n\t\tbreak;\n}\n\nfunction add_tree_names_to_actions_array() {\n\tglobal $graph_actions;\n\n\t/* add a list of tree names to the actions dropdown */\n\t$trees = db_fetch_assoc('SELECT id,name FROM graph_tree ORDER BY name');\n\n\tif (cacti_sizeof($trees)) {\n\t\tforeach ($trees as $tree) {\n\t\t\t$graph_actions['tr_' . $tree['id']] = __('Place on a Tree (%s)', $tree['name']);\n\t\t}\n\t}\n}\n\nfunction form_save() {\n\tif (!isset_request_var('save_component_graph')) {\n\t\theader('Location: aggregate_graphs.php?header=false&action=edit&id=' . get_nfilter_request_var('id'));\n\t\treturn null;\n\t}\n\n\t/* remember some often used values */\n\t$local_graph_id        = get_nfilter_request_var('local_graph_id', 0);\n\t$graph_template_id     = get_nfilter_request_var('graph_template_id', 0);\n\t$aggregate_template_id = get_nfilter_request_var('aggregate_template_id', 0);\n\t$graph_title           = form_input_validate(get_nfilter_request_var('title_format'), 'title_format', '', false, 3);\n\tif (is_error_message()) {\n\t\traise_message(2);\n\t\theader('Location: aggregate_graphs.php?header=false&action=edit&id=' . $local_graph_id);\n\t\treturn null;\n\t}\n\n\t/* get the aggregate graph id */\n\t$aggregate_graph_id  = db_fetch_cell_prepared('SELECT id\n\t\tFROM aggregate_graphs\n\t\tWHERE local_graph_id = ?', array($local_graph_id));\n\n\t/* if user disabled template propagation we need to get graph data from form */\n\tif (!isset_request_var('template_propogation')) {\n\t\t$aggregate_template_id = 0;\n\t\t$new_data = aggregate_validate_graph_params($_POST, false);\n\t} else {\n\t\t$new_data = array();\n\t}\n\n\tif (is_error_message()) {\n\t\traise_message(2);\n\t\theader('Location: aggregate_graphs.php?header=false&action=edit&id=' . $local_graph_id);\n\t\treturn null;\n\t}\n\n\t/* save graph data to cacti tables */\n\t$graph_templates_graph_id = aggregate_graph_templates_graph_save(\n\t\t$local_graph_id,\n\t\t$graph_template_id,\n\t\t$graph_title,\n\t\t$aggregate_template_id,\n\t\t$new_data\n\t);\n\n\t/* update title in aggregate graphs table */\n\tdb_execute_prepared('UPDATE aggregate_graphs\n\t\tSET title_format = ?\n\t\tWHERE id = ?',\n\t\tarray($graph_title, $aggregate_graph_id));\n\n\t/* next lets see if any of the aggregate has changed and save as applicable\n\t * if the graph is templates, we can simply ignore.  A simple check will\n\t * determine if aggregation propagation is enabled\n\t */\n\tif (!isset_request_var('template_propogation')) {\n\t\t/* template propagation is disabled */\n\t\t$save                          = array();\n\t\t$save['id']                    = $aggregate_graph_id;\n\t\t$save['aggregate_template_id'] = $aggregate_template_id;\n\t\t$save['template_propogation']  = '';\n\t\t$save['gprint_prefix']         = get_nfilter_request_var('gprint_prefix');\n\t\t$save['total_prefix']          = get_nfilter_request_var('total_prefix');\n\n\t\t$save['total']                 = get_filter_request_var('total');\n\t\t$save['graph_type']            = get_filter_request_var('graph_type');\n\t\t$save['total_type']            = get_filter_request_var('total_type');\n\t\t$save['order_type']            = get_filter_request_var('order_type');\n\n\t\t/* see if anything changed, if so, we will have to push out the aggregate */\n\t\tif (!empty($aggregate_graph_id)) {\n\t\t\t$old = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM aggregate_graphs\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($aggregate_graph_id));\n\n\t\t\t$save_me = 0;\n\n\t\t\t$save_me += ($old['aggregate_template_id'] != $save['aggregate_template_id']);\n\t\t\t$save_me += ($old['template_propogation']  != $save['template_propogation']);\n\t\t\t$save_me += ($old['gprint_prefix']         != $save['gprint_prefix']);\n\t\t\t$save_me += ($old['graph_type']            != $save['graph_type']);\n\t\t\t$save_me += ($old['total']                 != $save['total']);\n\t\t\t$save_me += ($old['total_type']            != $save['total_type']);\n\t\t\t$save_me += ($old['total_prefix']          != $save['total_prefix']);\n\t\t\t$save_me += ($old['order_type']            != $save['order_type']);\n\n\t\t\tif ($save_me) {\n\t\t\t\t$aggregate_graph_id = sql_save($save, 'aggregate_graphs');\n\t\t\t}\n\n\t\t\t/* save the template items now */\n\t\t\t/* get existing item ids and sequences from graph template */\n\t\t\t$graph_templates_items = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT id, sequence\n\t\t\t\t\tFROM graph_templates_item\n\t\t\t\t\tWHERE local_graph_id=0\n\t\t\t\t\tAND graph_template_id = ?\n\t\t\t\t\tORDER BY sequence', array($graph_template_id)),\n\t\t\t\t'id', array('sequence')\n\t\t\t);\n\t\t\t/* get existing aggregate template items */\n\t\t\t$aggregate_graph_items_old = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT *\n\t\t\t\t\tFROM aggregate_graphs_graph_item\n\t\t\t\t\tWHERE aggregate_graph_id = ?\n\t\t\t\t\tORDER BY sequence', array($aggregate_graph_id)),\n\t\t\t\t'graph_templates_item_id', array('aggregate_graph_id', 'graph_templates_item_id', 'sequence', 'color_template', 't_graph_type_id', 'graph_type_id', 't_cdef_id', 'cdef_id', 'item_skip', 'item_total')\n\t\t\t);\n\n\t\t\t/* update graph template item values with posted values */\n\t\t\taggregate_validate_graph_items($_POST, $graph_templates_items);\n\n\t\t\t$items_changed = false;\n\t\t\t$items_to_save = array();\n\t\t\t$sequence = 1;\n\t\t\tforeach($graph_templates_items as $item_id => $data) {\n\t\t\t\t$item_new = array();\n\t\t\t\t$item_new['aggregate_graph_id'] = $aggregate_graph_id;\n\t\t\t\t$item_new['graph_templates_item_id'] = $item_id;\n\n\t\t\t\t$item_new['color_template'] = isset($data['color_template']) ? $data['color_template']:0;\n\t\t\t\t$item_new['item_skip']      = isset($data['item_skip']) ? 'on':'';\n\t\t\t\t$item_new['item_total']     = isset($data['item_total']) ? 'on':'';\n\t\t\t\t$item_new['sequence']       = $sequence;\n\n\t\t\t\t/* compare with old item to see if we need to push out. */\n\t\t\t\tif (!isset($aggregate_graph_items_old[$item_id])) {\n\t\t\t\t\t/* this item does not yet exist */\n\t\t\t\t\t$items_changed = true;\n\t\t\t\t} else {\n\t\t\t\t\t/* compare data from user to data from DB */\n\t\t\t\t\tforeach ($item_new as $field => $new_value) {\n\t\t\t\t\t\tif ($aggregate_graph_items_old[$item_id][$field] != $new_value) {\n\t\t\t\t\t\t\t$items_changed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/* fill in missing fields with db values */\n\t\t\t\t\t$item_new = array_merge($aggregate_graph_items_old[$item_id], $item_new);\n\t\t\t\t}\n\t\t\t\t$items_to_save[] = $item_new;\n\n\t\t\t\t$sequence++;\n\t\t\t}\n\n\t\t\tif ($items_changed) {\n\t\t\t\taggregate_graph_items_save($items_to_save, 'aggregate_graphs_graph_item');\n\t\t\t}\n\n\t\t\tif ($save_me || $items_changed) {\n\t\t\t\tpush_out_aggregates(0, $local_graph_id);\n\t\t\t}\n\t\t}\n\t}\n\n\traise_message(1);\n\n\theader('Location: aggregate_graphs.php?header=false&action=edit&id=' . $local_graph_id);\n}\n\n/* ------------------------\n    The \"actions\" function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $graph_actions, $agg_item_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* we are performing two set's of actions here */\n\t$graph_actions += $agg_item_actions;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tapi_aggregate_remove_multi($selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // migrate to template\n\t\t\t\tapi_aggregate_convert_template($selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '3') { // create aggregate from aggregate\n\t\t\t\t$aggregate_name = get_request_var('aggregate_name');\n\t\t\t\tapi_aggregate_create($aggregate_name, $selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '4') { // add graphs to report\n                $good = true;\n                for ($i=0;($i<cacti_count($selected_items));$i++) {\n                    if (!reports_add_graphs(get_filter_request_var('report_id'), $selected_items[$i], get_request_var('timespan'), get_request_var('align'))) {\n                        raise_message('reports_add_error');\n                        $good = false;\n                        break;\n                    }\n                }\n\n                if ($good) {\n                    raise_message('reports_graphs_added');\n                }\n\t\t\t} elseif (get_request_var('drp_action') == '10') { // associate with aggregate\n\t\t\t\tapi_aggregate_associate($selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '11') { // dis-associate with aggregate\n\t\t\t\tapi_aggregate_disassociate($selected_items);\n\t\t\t} elseif (preg_match('/^tr_([0-9]+)$/', get_request_var('drp_action'), $matches)) { // place on tree\n\t\t\t\tget_filter_request_var('tree_id');\n\t\t\t\tget_filter_request_var('tree_item_id');\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_tree_item_save(0, get_nfilter_request_var('tree_id'), TREE_ITEM_TYPE_GRAPH, get_nfilter_request_var('tree_item_id'), '', $selected_items[$i], 0, 0, 0, 0, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: aggregate_graphs.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$graph_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$graph_list .= '<li>' . html_escape(get_graph_title($matches[1])) . '</li>';\n\t\t\t$graph_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\t/* add a list of tree names to the actions dropdown */\n\tadd_tree_names_to_actions_array();\n\n\tform_start('aggregate_graphs.php');\n\n\thtml_start_box($graph_actions{get_request_var('drp_action')}, '60%', '', '3', 'center', '');\n\n\tif (isset($graph_array) && cacti_sizeof($graph_array)) {\n\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Aggregate Graph(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete Graph(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // migrate to aggregate\n\t\t\t/* determine the common graph template if any */\n\t\t\tforeach ($_POST as $var => $val) {\n\t\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t\t$local_graph_ids[] = $matches[1];\n\t\t\t\t}\n\t\t\t}\n\t\t\t$lgid = implode(',',$local_graph_ids);\n\n\t\t\t/* for whatever reason,  subquery performance in mysql is sub-optimal.  Therefore, let's do this\n\t\t\t * as a few queries instead.\n\t\t\t */\n\t\t\t$task_items = array_rekey(db_fetch_assoc(\"SELECT DISTINCT task_item_id\n\t\t\t\tFROM graph_templates_item\n\t\t\t\tWHERE local_graph_id IN($lgid)\"), 'task_item_id', 'task_item_id');\n\n\t\t\t$task_items = implode(',', $task_items);\n\n\t\t\t$graph_templates = db_fetch_assoc(\"SELECT DISTINCT graph_template_id\n\t\t\t\tFROM graph_templates_item\n\t\t\t\tWHERE task_item_id IN ($task_items) AND graph_template_id>0\");\n\n\t\t\tif (cacti_sizeof($graph_templates) > 1) {\n\t\t\t\tprint \"<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('The selected Aggregate Graphs represent elements from more than one Graph Template.') . \"</p>\n\t\t\t\t\t\t<p>\" . __('In order to migrate the Aggregate Graphs below to a Template based Aggregate, they must only be using one Graph Template.  Please press \\'Return\\' and then select only Aggregate Graph that utilize the same Graph Template.') . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t} else {\n\t\t\t\t$graph_template      = $graph_templates[0]['graph_template_id'];\n\n\t\t\t\t$aggregate_templates = db_fetch_assoc_prepared('SELECT id, name\n\t\t\t\t\tFROM aggregate_graph_templates\n\t\t\t\t\tWHERE graph_template_id = ?\n\t\t\t\t\tORDER BY name',\n\t\t\t\t\tarray($graph_template));\n\n\t\t\t\tif (cacti_sizeof($aggregate_templates)) {\n\t\t\t\t\tprint \"<tr>\n\t\t\t\t\t\t<td class='textArea' colspan='2'>\n\t\t\t\t\t\t\t<p>\" . __('Click \\'Continue\\' and the following Aggregate Graph(s) will be migrated to use the Aggregate Template that you choose below.') . \"</p>\n\t\t\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\\n\";\n\n\t\t\t\t\tprint \"<tr>\n\t\t\t\t\t\t<td class='textArea' width='170'>\" . __('Aggregate Template:') . \"</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select name='aggregate_template_id'>\\n\";\n\n\t\t\t\t\thtml_create_list($aggregate_templates, 'name', 'id', $aggregate_templates[0]['id']);\n\n\t\t\t\t\tprint \"</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\\n\";\n\n\t\t\t\t\t$save_html = \"<tr><td colspan='2' class='right'><input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel'). \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete Graph(s)') . \"'></td></tr>\";\n\t\t\t\t} else {\n\t\t\t\t\tprint \"<tr>\n\t\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t\t<p>\" . __('There are currently no Aggregate Templates defined for the selected Legacy Aggregates.') . \"</p>\n\t\t\t\t\t\t\t<p>\" . __('In order to migrate the Aggregate Graphs below to a Template based Aggregate, first create an Aggregate Template for the Graph Template \\'%s\\'.', db_fetch_cell_prepared('SELECT name FROM graph_templates WHERE id = ?', array($graph_template))) . \"</p>\n\t\t\t\t\t\t\t<p>\" . __('Please press \\'Return\\' to continue.') . \"</p>\n\t\t\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\\n\";\n\n\t\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t\t}\n\t\t\t}\n\t\t} elseif (get_request_var('drp_action') == '3') { // create aggregate from aggregates\n\t\t\tprint \"<tr>\n\t\t\t\t<td colspan='2' class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to combine the following Aggregate Graph(s) into a single Aggregate Graph.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\tprint \"\t<tr><td class='textArea' width='170'>\" . __('Aggregate Name:') . \"</td></tr>\\n\";\n\t\t\tprint \"\t<tr><td class='textArea'><input type='text' class='ui-state-default ui-corner-all' name='aggregate_name' size='40' value='\" . __esc('New Aggregate') . \"'></td></tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete Graph(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '4') {\n\t\t\tglobal $alignment, $graph_timespans;\n\n\t\t\t$reports = db_fetch_assoc_prepared('SELECT id, name\n\t\t\t\tFROM reports\n\t\t\t\tWHERE user_id = ?\n\t\t\t\tORDER BY name',\n\t\t\t\tarray($_SESSION['sess_user_id']));\n\n\t\t\tif (cacti_sizeof($reports)) {\n\t\t\t\tprint \"<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to add the selected Graphs to the Report below.') . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr><td>\" . __('Report Name') . '<br>';\n\t\t\t\tform_dropdown('report_id', $reports, 'name', 'id', '', '', '0');\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\tprint '<tr><td>' . __('Timespan') . '<br>';\n\t\t\t\tform_dropdown('timespan',$graph_timespans, '', '', '', '', read_user_setting('default_timespan'));\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\tprint '<tr><td>' . __('Align') . '<br>';\n\t\t\t\tform_dropdown('align',$alignment, '', '', '', '', REPORTS_ALIGN_CENTER);\n\t\t\t\tprint \"</td></tr>\\n\";\n\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Add Graphs to Report') . \"'>\";\n\t\t\t} else {\n\t\t\t\tprint \"<tr><td class='even'><span class='textError'>\" . __('You currently have no reports defined.') . \"</span></td></tr>\\n\";\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t}\n\t\t} elseif (get_request_var('drp_action') == '10') { // associate with aggregate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to associate the following Graph(s) with the Aggregate Graph.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Associate Graph(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '11') { // dis-associate with aggregate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to disassociate the following Graph(s) from the Aggregate.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Dis-Associate Graph(s)') . \"'>\";\n\t\t} elseif (preg_match(\"/^tr_([0-9]+)$/\", get_request_var('drp_action'), $matches)) { // place on tree\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to place the following Aggregate Graph(s) under the Tree Branch.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t<p>\" . __('Destination Branch:') . \"<br>\"; grow_dropdown_tree($matches[1], '0', 'tree_item_id', '0'); print \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\n\t\t\t<input type='hidden' name='tree_id' value='\" . html_escape($matches[1]) . \"'>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Place Graph(s) on Tree') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: aggregate_graphs.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"\t<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='local_graph_id' value='\" . (isset_request_var('local_graph_id') ? get_nfilter_request_var('local_graph_id'):0) . \"'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($graph_array) ? serialize($graph_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box(false);\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* -----------------------\n    item - Graph Items\n   ----------------------- */\n\nfunction item() {\n\tglobal $consolidation_functions, $graph_item_types, $struct_graph_item;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (isempty_request_var('id')) {\n\t\t$template_item_list = array();\n\n\t\t$header_label = __('Graph Items [new]');\n\t} else {\n\t\t$template_item_list = db_fetch_assoc_prepared('SELECT\n\t\t\tgti.id, gti.text_format, gti.value, gti.hard_return, gti.graph_type_id,\n\t\t\tgti.consolidation_function_id, dtr.data_source_name, gti.alpha,\n\t\t\tcdef.name AS cdef_name, colors.hex\n\t\t\tFROM graph_templates_item AS gti\n\t\t\tLEFT JOIN data_template_rrd AS dtr ON (gti.task_item_id=dtr.id)\n\t\t\tLEFT JOIN data_local AS dl ON (dtr.local_data_id=dl.id)\n\t\t\tLEFT JOIN data_template_data AS dtd ON (dl.id=dtd.local_data_id)\n\t\t\tLEFT JOIN cdef ON (gti.cdef_id=cdef.id)\n\t\t\tLEFT JOIN colors ON (gti.color_id=colors.id)\n\t\t\tWHERE gti.local_graph_id = ?\n\t\t\tORDER BY gti.sequence',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Graph Items [edit: %s]', html_escape(get_graph_title(get_request_var('id'))));\n\t}\n\n\t$graph_template_id = db_fetch_cell_prepared('SELECT graph_template_id\n\t\tFROM graph_local\n\t\tWHERE id = ?', array(get_request_var('id')));\n\n\tif (empty($graph_template_id)) {\n\t\t$add_text = 'aggregate_items.php?action=item_edit&local_graph_id=' . get_request_var('id');\n\t} else {\n\t\t$add_text = '';\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', $add_text);\n\tdraw_graph_items_list($template_item_list, 'aggregate_items.php', 'local_graph_id=' . get_request_var('id') , (empty($graph_template_id) ? false : true));\n\thtml_end_box(false);\n}\n\n/* ------------------------------------\n    graph - Graphs\n   ------------------------------------ */\n\nfunction graph_edit() {\n\tglobal $config, $struct_graph, $struct_aggregate_graph, $image_types, $consolidation_functions, $graph_item_types, $struct_graph_item;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t/* purge any old graphs */\n\taggregate_prune_graphs(get_request_var('id'));\n\n\tif (isset_request_var('reset')) {\n\t\t$_SESSION['aggregate_referer'] = 'aggregate_graphs.php';\n\t} elseif (isset($_SERVER['HTTP_REFERER']) && !substr_count($_SERVER['HTTP_REFERER'], 'aggregate_graphs.php')) {\n\t\t$_SESSION['aggregate_referer'] = sanitize_uri($_SERVER['HTTP_REFERER']);\n\t} elseif (isset($_SERVER['HTTP_REFERER']) && !isset($_SESSION['aggregate_referer'])) {\n\t\t$_SESSION['aggregate_referer'] = sanitize_uri($_SERVER['HTTP_REFERER']);\n\t}\n\t$referer = $_SESSION['aggregate_referer'];\n\n\t$use_graph_template = false;\n\t$aginfo = array();\n\t$graphs = array();\n\tif (!isempty_request_var('id')) {\n\t\t$graphs = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE local_graph_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$aginfo = db_fetch_row_prepared('SELECT *\n\t\t\tFROM aggregate_graphs\n\t\t\tWHERE local_graph_id = ?',\n\t\t\tarray($graphs['local_graph_id']));\n\n\t\tif ($aginfo['title_format'] == '') {\n\t\t\t$aginfo['title_format'] = get_graph_title($graphs['local_graph_id']);\n\t\t}\n\n\t\t$header_label = '[edit: ' . html_escape(get_graph_title(get_request_var('id'))) . ']';\n\t}\n\n\tif (cacti_sizeof($aginfo)) {\n\t\tif ($aginfo['aggregate_template_id'] > 0) {\n\t\t\t$template = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM aggregate_graph_templates\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($aginfo['aggregate_template_id']));\n\t\t} else {\n\t\t\t$template = $aginfo;\n\t\t}\n\n\t\t$aggregate_tabs = array(\n\t\t\t'details' => __('Details'),\n\t\t\t'items'   => __('Items'),\n\t\t\t'preview' => __('Preview')\n\t\t);\n\t} else {\n\t\t$template = array();\n\t\t$aggregate_tabs = array(\n\t\t\t'details' => __('Details'),\n\t\t\t'preview' => __('Preview')\n\t\t);\n\t}\n\n\t/* ================= input validation and session storage ================= */\n\tif (isset_request_var('tab')) {\n\t\tswitch(get_nfilter_request_var('tab')) {\n\t\tcase 'details':\n\t\tcase 'items':\n\t\tcase 'preview':\n\t\t\t$_SESSION['agg_tab'] = get_nfilter_request_var('tab');\n\t\t\tset_request_var('tab', get_nfilter_request_var('tab'));\n\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (isset($_SESSION['agg_tab'])) {\n\t\t\t\tset_request_var('tab', $_SESSION['agg_tab']);\n\t\t\t}else{\n\t\t\t\t$_SESSION['agg_tab'] = 'details';\n\t\t\t\tset_request_var('tab', 'details');\n\t\t\t}\n\t\t}\n\t} elseif (isset($_SESSION['agg_tab'])) {\n\t\tset_request_var('tab', $_SESSION['agg_tab']);\n\t} else {\n\t\tset_request_var('tab', 'details');\n\t}\n\t/* ================= input validation ================= */\n\n\t$current_tab = get_nfilter_request_var('tab');\n\n\t/* draw the categories tabs on the top of the page */\n\tprint \"<div class='tabs'>\\n\";\n\tprint \"<div class='aggtabs'><nav><ul role='tablist'>\\n\";\n\n\t$i = 0;\n\tif (cacti_sizeof($aggregate_tabs)) {\n\t\tforeach (array_keys($aggregate_tabs) as $tab_short_name) {\n\t\t\tif ($tab_short_name == 'details' || (!isempty_request_var('id'))) {\n\t\t\t\tprint \"<li class='subTab'><a class='tab \" . ($tab_short_name == $current_tab ? \"selected'\" : \"'\") .\n\t\t\t\t\t\" href='\" . html_escape($config['url_path'] . 'aggregate_graphs.php?action=edit&id=' . get_request_var('id') . \"&tab=$tab_short_name\") . \"'>\" . $aggregate_tabs[$tab_short_name] . \"</a></li>\\n\";\n\t\t\t}\n\n\t\t\t$i++;\n\t\t}\n\t}\n\tprint \"</ul>\\n\";\n\n\t/* handle debug mode */\n\tif (isset_request_var('debug')) {\n\t\tif (get_filter_request_var('debug') == '0') {\n\t\t\tkill_session_var('graph_debug_mode');\n\t\t} elseif (get_filter_request_var('debug') == '1') {\n\t\t\t$_SESSION['graph_debug_mode'] = true;\n\t\t}\n\t}\n\n\tif (isset($_SESSION['graph_debug_mode'])) {\n\t\t$message = __('Turn Off Graph Debug Mode');\n\t} else {\n\t\t$message = __('Turn On Graph Debug Mode');\n\t}\n\n\tif (!isempty_request_var('id') && $current_tab == 'preview') {\n\t\tprint \"<ul style='float:right;'><li><a class='pic' href='\" . html_escape('aggregate_graphs.php?action=edit&id=' . get_request_var('id') . '&tab=' . get_request_var('tab') .  '&debug=' . (isset($_SESSION['graph_debug_mode']) ? '0' : '1')) . \"'>\" . $message . \"</a></li></ul></nav>\\n</div></div>\\n\";\n\t} elseif (!isempty_request_var('id') && $current_tab == 'details' && (!cacti_sizeof($template))) {\n\t\tprint \"<ul style='float:right;'><li><a id='toggle_items' class='pic' href='#'>\" . __('Show Item Details') . \"</a></li></ul></nav>\\n</div></div>\\n\";\n\t} else {\n\t\tprint \"</nav></div></div>\\n\";\n\t}\n\n\tif (!isempty_request_var('id') && $current_tab == 'preview') {\n\t\thtml_start_box(__('Aggregate Preview [%s]', $header_label), '100%', '', '3', 'center', '');\n\t\t?>\n\t\t<tr class='even'><td class='center'>\n\t\t\t<img src='<?php print html_escape($config['url_path'] . 'graph_image.php?action=edit&disable_cache=1&local_graph_id=' . get_request_var('id') . '&rra_id=' . read_user_setting('default_rra_id') . '&random=' . mt_rand());?>' alt=''>\n\t\t</td></tr>\n\t\t<?php\n\t\tif (isset($_SESSION['graph_debug_mode']) && isset_request_var('id')) {\n\t\t\t$graph_data_array['output_flag'] = RRDTOOL_OUTPUT_STDERR;\n\t\t\t$graph_data_array['print_source'] = 1;\n\t\t\t?>\n\t\t\t<tr><td class='left'>\n\t\t\t\t<div style='overflow:auto;'>\n\t\t\t\t<span class='textInfo'><?php print __('RRDtool Command:');?></span><br>\n\t\t\t\t<pre class='monoSpace'><?php print @rrdtool_function_graph(get_request_var('id'), 1, $graph_data_array);?></pre>\n\t\t\t\t<span class='textInfo'><?php print __('RRDtool Says:');?></span><br>\n\t\t\t\t<?php unset($graph_data_array['print_source']);?>\n\t\t\t\t<pre class='monoSpace'><?php print @rrdtool_function_graph(get_request_var('id'), 1, $graph_data_array);?></pre>\n\t\t\t\t</div>\n\t\t\t</td></tr>\n\t\t\t<?php\n\t\t}\n\t\t?>\n\t\t<?php\n\t\thtml_end_box(false);\n\t}\n\n\tif (!isempty_request_var('id') && $current_tab == 'items') {\n\t\taggregate_items();\n\t\tbottom_footer();\n\t\texit;\n\t}\n\n\tform_start('aggregate_graphs.php', 'template_edit');\n\n\t/* we will show the templated representation only when when there is a template and propagation is enabled */\n\tif (!isempty_request_var('id') && $current_tab == 'details') {\n\t\tif (cacti_sizeof($template)) {\n\t\t\tprint \"<div id='templated'>\";\n\n\t\t\thtml_start_box(__('Aggregate Graph %s', $header_label), '100%', true, '3', 'center', '');\n\n\t\t\t/* add template propagation to the structure */\n\t\t\tdraw_edit_form(\n\t\t\t\tarray(\n\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t'fields' => inject_form_variables($struct_aggregate_graph, (isset($aginfo) ? $aginfo : array()))\n\t\t\t\t)\n\t\t\t);\n\n\t\t\thtml_end_box(true, true);\n\n\t\t\tif (isset($template)) {\n\t\t\t\tdraw_aggregate_graph_items_list(0, $template['graph_template_id'], $aginfo);\n\t\t\t}\n\n\t\t\tform_hidden_box('save_component_template', '1', '');\n\n\t\t\t?>\n\t\t\t<script type='text/javascript'>\n\n\t\t\tvar templated_selectors = [\n\t\t\t\t'#gprint_prefix',\n\t\t\t\t'#graph_type',\n\t\t\t\t'#total',\n\t\t\t\t'#total_type',\n\t\t\t\t'#total_prefix',\n\t\t\t\t'#order_type',\n\t\t\t\t'select[id^=\"agg_color\"]',\n\t\t\t\t'input[id^=\"agg_total\"]',\n\t\t\t\t'input[id^=\"agg_skip\"]',\n\t\t\t\t'#image_format_id',\n\t\t\t\t'#height',\n\t\t\t\t'#width',\n\t\t\t\t'#slope_mode',\n\t\t\t\t'#auto_scale',\n\t\t\t\t'#auto_scale_opts',\n\t\t\t\t'#auto_scale_log',\n\t\t\t\t'#scale_log_units',\n\t\t\t\t'#auto_scale_rigid',\n\t\t\t\t'#auto_padding',\n\t\t\t\t'#export',\n\t\t\t\t'#upper_limit',\n\t\t\t\t'#lower_limit',\n\t\t\t\t'#base_value',\n\t\t\t\t'#unit_value',\n\t\t\t\t'#unit_exponent_value',\n\t\t\t\t'#alt_y_grid',\n\t\t\t\t'#right_axis',\n\t\t\t\t'#right_axis_label',\n\t\t\t\t'#right_axis_format',\n\t\t\t\t'#right_axis_formatter',\n\t\t\t\t'#left_axis_formatter',\n\t\t\t\t'#no_gridfit',\n\t\t\t\t'#unit_length',\n\t\t\t\t'#tab_width',\n\t\t\t\t'#dynamic_labels',\n\t\t\t\t'#force_rules_legend',\n\t\t\t\t'#legend_position',\n\t\t\t\t'#legend_direction',\n\t\t\t\t'#vertical_label'\n\t\t\t];\n\n\t\t\t$(function() {\n\t\t\t\tif ($('#template_propogation').is(':checked')) {\n\t\t\t\t\tfor (var i = 0; i < templated_selectors.length; i++) {\n\t\t\t\t\t\t$(templated_selectors[i] ).prop('disabled', true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$('#row_template_propogation').hide();\n\t\t\t\t\t$('#row_spacer0').hide();\n\t\t\t\t}\n\n\t\t\t\t$('input[id^=\"agg_total\"], input[id^=\"agg_skip\"]').click(function() {\n\t\t\t\t\tid = $(this).attr('id');\n\n\t\t\t\t\tif (id.indexOf('skip') > 0) {\n\t\t\t\t\t\taltId = id.replace('skip', 'total');\n\t\t\t\t\t} else {\n\t\t\t\t\t\taltId = id.replace('total', 'skip');\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($('#'+id).is(':checked')) {\n\t\t\t\t\t\t$('#'+altId).prop('checked', false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#'+altId).prop('checked', true);\n\t\t\t\t\t}\n\n\t\t\t\t\tchangeTotals();\n\t\t\t\t});\n\n\t\t\t\t$('#total').change(function() {\n\t\t\t\t\tchangeTotals();\n\t\t\t\t});\n\n\t\t\t\t$('#total_type').change(function() {\n\t\t\t\t\tchangeTotalsType();\n\t\t\t\t});\n\n\t\t\t\t$('#template_propogation').change(function() {\n\t\t\t\t\tif (!$('#template_propogation').is(':checked')) {\n\t\t\t\t\t\tfor (var i = 0; i < templated_selectors.length; i++) {\n\t\t\t\t\t\t\t$(templated_selectors[i]).prop('disabled', false);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (var i = 0; i < templated_selectors.length; i++) {\n\t\t\t\t\t\t\t$(templated_selectors[i]).prop('disabled', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tfunction changeTotals() {\n\t\t\t\tswitch ($('#total').val()) {\n\t\t\t\t\tcase '<?php print AGGREGATE_TOTAL_NONE;?>':\n\t\t\t\t\t\t$('#row_total_type').hide();\n\t\t\t\t\t\t$('#row_total_prefix').hide();\n\t\t\t\t\t\t$('#row_order_type').show();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '<?php print AGGREGATE_TOTAL_ALL;?>':\n\t\t\t\t\t\t$('#row_total_type').show();\n\t\t\t\t\t\t$('#row_total_prefix').show();\n\t\t\t\t\t\t$('#row_order_type').show();\n\t\t\t\t\t\tchangeTotalsType();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '<?php print AGGREGATE_TOTAL_ONLY;?>':\n\t\t\t\t\t\t$('#row_total_type').show();\n\t\t\t\t\t\t$('#row_total_prefix').show();\n\t\t\t\t\t\t//$('#order_type').prop('disabled', true);\n\t\t\t\t\t\tchangeTotalsType();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction changeTotalsType() {\n\t\t\t\tif ($('#total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_SIMILAR;?>) {\n\t\t\t\t\tif ($('#total_prefix').val() == '') {\n\t\t\t\t\t\t$('#total_prefix').attr('value', '<?php print __('Total');?>');\n\t\t\t\t\t}\n\t\t\t\t} else if ($('#total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_ALL;?>) {\n\t\t\t\t\tif ($('#total_prefix').val() == '') {\n\t\t\t\t\t\t$('#total_prefix').attr('value', '<?php print __('All Items');?>');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t</script>\n\t\t\t<?php\n\t\t\tprint '</div>';\n\t\t}\n\n\t\t/* we will show the classic representation only when we are not templating */\n\t\tprint \"<div id='classic'>\";\n\n\t\t?>\n\t\t<input type='hidden' id='graph_template_graph_id' name='graph_template_graph_id' value='<?php print (isset($graphs) ? $graphs['id'] : '0');?>'>\n\t\t<input type='hidden' id='local_graph_template_graph_id' name='local_graph_template_graph_id' value='<?php print (isset($graphs) ? $graphs['local_graph_template_graph_id'] : '0');?>'>\n\t\t<?php\n\n\t\t/* graph item list goes here */\n\t\tif (empty($graphs['graph_template_id']) && cacti_sizeof($template) == 0) {\n\t\t\titem();\n\t\t}\n\n\t\tif (empty($graphs['graph_template_id'])) {\n\t\t\thtml_start_box(__('Graph Configuration'), '100%', true, '3', 'center', '');\n\n\t\t\t$form_array = array();\n\n\t\t\tforeach ($struct_graph as $field_name => $field_array) {\n\t\t\t\tif ($field_array['method'] != 'spacer') {\n\t\t\t\t\tif ($field_name != 'title') {\n\t\t\t\t\t\t$form_array += array($field_name => $struct_graph[$field_name]);\n\n\t\t\t\t\t\t$form_array[$field_name]['value']   = (isset($graphs) ? $graphs[$field_name] : '');\n\t\t\t\t\t\t$form_array[$field_name]['form_id'] = (isset($graphs) ? $graphs['id'] : '0');\n\n\t\t\t\t\t\tif (!(($use_graph_template == false) || ($graphs_template['t_' . $field_name] == 'on'))) {\n\t\t\t\t\t\t\t$form_array[$field_name]['method']      = 'template_' . $form_array[$field_name]['method'];\n\t\t\t\t\t\t\t$form_array[$field_name]['description'] = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$form_array += array($field_name => $struct_graph[$field_name]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdraw_edit_form(\n\t\t\t\tarray(\n\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t'fields' => $form_array\n\t\t\t\t)\n\t\t\t);\n\n\t\t\thtml_end_box(true, true);\n\t\t}\n\n\t\tform_hidden_box('save_component_graph','1','');\n\t\tform_hidden_box('save_component_input','1','');\n\t\tform_hidden_box('rrdtool_version', get_rrdtool_version(), '');\n\t\tform_save_button($referer, 'return', 'id');\n\n\t\techo '</div>';\n\n\t\t?>\n\t\t<script type='text/javascript'>\n\n\t\t$().ready(function() {\n\t\t\tdynamic();\n\t\t\tif (!$('#templated')) {\n\t\t\t\t$('#local_graph_template_graph_id').next('table').css('display', 'none');\n\t\t\t}\n\t\t});\n\n\t\t$('#toggle_items').click(function() {\n\t\t\tif ($('#toggle_items').is(\":contains('<?php print __('Show');?>')\")) {\n\t\t\t\t$('#local_graph_template_graph_id').next('table').css('display', '');\n\t\t\t\t$('#toggle_items').text('<?php print __('Hide Item Details');?>');\n\t\t\t} else {\n\t\t\t\t$('#local_graph_template_graph_id').next('table').css('display', 'none');\n\t\t\t\t$('#toggle_items').text('<?php print __('Show Item Details');?>');\n\t\t\t}\n\t\t});\n\n\t\tfunction dynamic() {\n\t\t\tif ($('#scale_log_units')) {\n\t\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\t\tif (($('#rrdtool_version').val() != '1.0.0') &&\n\t\t\t\t\t($('#auto_scale_log').is(':checked'))) {\n\t\t\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction changeScaleLog() {\n\t\t\tif ($('#scale_log_units')) {\n\t\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\t\tif (($('#rrdtool_version').val() != '1.0.0') &&\n\t\t\t\t\t($('#auto_scale_log').is(':checked'))) {\n\t\t\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t</script>\n\t\t<?php\n\t}\n}\n\nfunction aggregate_items() {\n\tglobal $agg_item_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'rfilter' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_IS_REGEX,\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'matching' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'on',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'title_cache',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_agraph_item');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL = 'aggregate_graphs.php' +\n\t\t\t'?action=edit&tab=items&id='+$('#id').val() +\n\t\t\t'&rows=' + $('#rows').val() +\n\t\t\t'&rfilter=' + base64_encode($('#rfilter').val()) +\n\t\t\t'&matching=' + $('#matching').is(':checked') +\n\t\t\t'&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'aggregate_graphs.php?action=edit&tab=items&id='+$('#id').val()+'&clear=true&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#rfilter').change(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#form_graphs').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Matching Graphs'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_graphs' action='aggregate_graphs.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='rfilter' size='45' onChange='applyFilter()' value='<?php print get_request_var('rfilter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Graphs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='matching' onChange='applyFilter()' <?php print (get_request_var('matching') == 'on' || get_request_var('matching') == 'true' ? ' checked':'');?>>\n\t\t\t\t\t\t\t<label for='matching'><?php print __('Part of Aggregate');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' onClick='clearFilter()' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t<input type='hidden' name='tab' value='items'>\n\t\t\t<input type='hidden' id='id' value='<?php print get_request_var('id');?>'>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box(false);\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('rfilter') == '') {\n\t\t$sql_where = '';\n\t} elseif (validate_is_regex(get_request_var('rfilter'))) {\n\t\t$sql_where = 'WHERE gtg.title_cache RLIKE \"' . get_request_var('rfilter') . '\"';\n\t} else {\n\t\t$filters = explode(' ', get_request_var('rfilter'));\n\t\t$sql_where = '';\n\t\t$sql_where = aggregate_make_sql_where($sql_where, $filters, 'gtg.title_cache');\n\t}\n\n\tif (get_request_var('matching') != 'false') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND':'WHERE') . ' (agi.local_graph_id IS NOT NULL)';\n\t}\n\n\t$graph_template = db_fetch_cell_prepared('SELECT graph_template_id\n\t\tFROM aggregate_graphs AS ag\n\t\tWHERE ag.local_graph_id = ?',\n\t\tarray(get_request_var('id')));\n\n\t$aggregate_id = db_fetch_cell_prepared('SELECT id\n\t\tFROM aggregate_graphs\n\t\tWHERE local_graph_id = ?',\n\t\tarray(get_request_var('id')));\n\n\tif (!empty($graph_template)) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND':'WHERE') . \" (gtg.graph_template_id=$graph_template)\";\n\t}\n\n\t/* print checkbox form for validation */\n\tform_start('aggregate_graphs.php', 'chk');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(DISTINCT gl.id) AS total\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gtg.local_graph_id=gl.id\n\t\tLEFT JOIN (SELECT DISTINCT local_graph_id FROM aggregate_graphs_items) AS agi\n\t\tON gtg.local_graph_id=agi.local_graph_id\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$graph_list = db_fetch_assoc(\"SELECT\n\t\tgtg.id, gtg.local_graph_id, gtg.height, gtg.width, gtg.title_cache, agi.local_graph_id AS agg_graph_id\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gtg.local_graph_id=gl.id\n\t\tLEFT JOIN (\n\t\t\tSELECT DISTINCT local_graph_id\n\t\t\tFROM aggregate_graphs_items\n\t\t\tWHERE aggregate_graph_id=$aggregate_id) AS agi\n\t\tON gtg.local_graph_id=agi.local_graph_id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('aggregate_graphs.php?action=edit&tab=items&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Graphs'), 'page', 'main');\n\n\tprint $nav;\n\n\t$display_text = array(\n\t\t'title_cache'    => array('display' => __('Graph Title'), 'align' => 'left', 'sort' => 'ASC'),\n\t\t'local_graph_id' => array('display' => __('ID'), 'align' => 'right', 'sort' => 'ASC'),\n\t\t'agg_graph_id'   => array('display' => __('Included in Aggregate'), 'align' => 'left', 'sort' => 'ASC'),\n\t\t'height'         => array('display' => __('Size'), 'align' => 'right', 'sort' => 'ASC'));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false, 'aggregate_graphs.php?action=edit&id=' . get_request_var('id'));\n\n\tif (cacti_sizeof($graph_list) > 0) {\n\t\tforeach ($graph_list as $graph) {\n\t\t\t/* we're escaping strings here, so no need to escape them on form_selectable_cell */\n\t\t\tform_alternate_row('line' . $graph['local_graph_id'], true);\n\n\t\t\tif (validate_is_regex(get_request_var('rfilter'))) {\n\t\t\t\tform_selectable_cell(filter_value($graph['title_cache'], get_request_var('rfilter')), $graph['local_graph_id']);\n\t\t\t} else {\n\t\t\t\tform_selectable_cell(get_request_var('rfilter') != '' ? aggregate_format_text(html_escape($graph['title_cache']), get_request_var('rfilter')) : html_escape($graph['title_cache']), $graph['local_graph_id']);\n\t\t\t}\n\n\t\t\tform_selectable_cell($graph['local_graph_id'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_selectable_cell(($graph['agg_graph_id'] != '' ? \"<span class='associated'>\" . __('Yes') . '</span>':\"<span class='notAssociated'>\" . __('No') . \"</span>\"), $graph['local_graph_id']);\n\t\t\tform_selectable_cell($graph['height'] . 'x' . $graph['width'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_checkbox_cell($graph['title_cache'], $graph['local_graph_id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td><em>' . __('No Graphs Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\t/* put the nav bar on the bottom as well */\n\tprint $nav;\n\n\t/* add a list of tree names to the actions dropdown */\n\tadd_tree_names_to_actions_array();\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tform_hidden_box('local_graph_id', get_request_var('id'), '');\n\n\tdraw_actions_dropdown($agg_item_actions);\n\n\tform_end();\n}\n\nfunction aggregate_make_sql_where($sql_where, $items, $field) {\n\tif ($sql_where != '') {\n\t\t$sql_where .= ' AND (';\n\t} else {\n\t\t$sql_where  = 'WHERE (';\n\t}\n\n\t$indentation = 0;\n\t$termcount   = 0;\n\n\tif (cacti_sizeof($items)) {\n\t\tforeach($items as $i) {\n\t\t\t$i = trim($i);\n\t\t\twhile (substr($i,0,1) == '(') {\n\t\t\t\t$indentation++;\n\t\t\t\t$termcount = 0;\n\t\t\t\t$sql_where .= '(';\n\t\t\t\t$i = substr($i, 1);\n\t\t\t}\n\n\t\t\t$split = strpos($i, ')');\n\t\t\tif ($split !== false) {\n\t\t\t\t$end = trim(substr($i, $split));\n\t\t\t\t$i   = substr($i, 0, $split);\n\t\t\t} else {\n\t\t\t\t$end = '';\n\t\t\t}\n\n\t\t\tif ($i != '') {\n\t\t\t\tif (strtolower($i) == 'and') {\n\t\t\t\t\t$sql_where .= ' AND ';\n\t\t\t\t} elseif (strtolower($i) == 'or') {\n\t\t\t\t\t$sql_where .= ' OR ';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= ($termcount > 0 ? ' OR ':'') . $field . \" LIKE '%\" . trim($i) . \"%'\";\n\t\t\t\t\t$termcount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($end != '') {\n\t\t\t\twhile (substr($end, 0, 1) == ')') {\n\t\t\t\t\t$indentation--;\n\t\t\t\t\t$termcount = 0;\n\t\t\t\t\t$sql_where .= ')';\n\t\t\t\t\t$end = trim(substr($end, 1));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$sql_where .= ')';\n\n\treturn trim($sql_where);\n}\n\nfunction aggregate_format_text($text, $filter) {\n\t$items = explode(' ', $filter);\n\t$tags  = array();\n\tforeach($items as $i) {\n\t\t$i = trim($i);\n\t\t$i = str_replace('(','',$i);\n\t\t$i = str_replace(')','',$i);\n\t\tif (strtolower($i) == 'and' || strtolower($i) == 'or') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (substr_count($text, $i) !== false) {\n\t\t\t$tagno = rand();\n\t\t\t$tags[$tagno] = $i;\n\t\t\t$text = str_replace($i, \"<<$tagno>>\", $text);\n\t\t}\n\t}\n\n\tif (cacti_sizeof($tags)) {\n\t\tforeach($tags as $k => $t) {\n\t\t\t$text = str_replace(\"<<$k>>\", \"<span class='filteredValue'>\" . html_escape($t) . \"</span>\", $text);\n\t\t}\n\t}\n\n\treturn $text;\n}\n\nfunction aggregate_graph() {\n\tglobal $graph_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'title_cache',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_agraph');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'aggregate_graphs.php';\n\t\tstrURL += '?rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&template_id=' + $('#template_id').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'aggregate_graphs.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#filter').change(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#form_graphs').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Aggregate Graphs'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_graphs' action='aggregate_graphs.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print get_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='template_id' name='template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$templates = db_fetch_assoc('SELECT DISTINCT at.id, at.name\n\t\t\t\t\t\t\t\tFROM aggregate_graph_templates AS at\n\t\t\t\t\t\t\t\tINNER JOIN aggregate_graphs AS ag\n\t\t\t\t\t\t\t\tON ag.aggregate_template_id=at.id\n\t\t\t\t\t\t\t\tORDER BY name');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($templates) > 0) {\n\t\t\t\t\t\t\t\tforeach ($templates as $template) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $template['id'] . \"'\"; if (get_request_var('template_id') == $template['id']) { print ' selected'; } print '>' . html_escape($template['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Graphs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = 'WHERE (gtg.graph_template_id=0 AND gl.host_id=0)';\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= \" AND (gtg.title_cache LIKE '%\" . get_request_var('filter') . \"%'\" .\n\t\t\t\" OR ag.title_format LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\n\tif (get_request_var('template_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('template_id') == '0') {\n\t\t$sql_where .= ' AND (ag.aggregate_template_id=0 OR ag.aggregate_template_id IS NULL)';\n\t} elseif (!isempty_request_var('template_id')) {\n\t\t$sql_where .= ' AND ag.aggregate_template_id=' . get_request_var('template_id');\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(DISTINCT gl.id) AS total\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gtg.local_graph_id=gl.id\n\t\tINNER JOIN aggregate_graphs AS ag\n\t\tON gtg.local_graph_id=ag.local_graph_id\n\t\tLEFT JOIN aggregate_graph_templates AS agt\n\t\tON agt.id=ag.aggregate_template_id\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$graph_list = db_fetch_assoc(\"SELECT\n\t\tgtg.id, gtg.local_graph_id, gtg.height, gtg.width, gtg.title_cache, agt.name\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gtg.local_graph_id=gl.id\n\t\tINNER JOIN aggregate_graphs AS ag\n\t\tON gl.id=ag.local_graph_id\n\t\tLEFT JOIN aggregate_graph_templates AS agt\n\t\tON agt.id=ag.aggregate_template_id\n\t\t$sql_where\n\t\tAND ag.id IS NOT NULL\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('aggregate_graphs.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Aggregate Graphs'), 'page', 'main');\n\n\tform_start('aggregate_graphs.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'title_cache'    => array('display' => __('Graph Title'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The title for the Aggregate Graphs')),\n\t\t'local_graph_id' => array('display' => __('ID'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The internal database identifier for this object')),\n\t\t'name'           => array('display' => __('Aggregate Template'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The Aggregate Template that this Aggregate Graphs is based upon')),\n\t\t'height'         => array('display' => __('Size'), 'align' => 'right', 'sort' => 'ASC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false, 'aggregate_graphs.php?filter=' . get_request_var('filter'));\n\n\tif (cacti_sizeof($graph_list)) {\n\t\tforeach ($graph_list as $graph) {\n\t\t\t/* we're escaping strings here, so no need to escape them on form_selectable_cell */\n\t\t\t$template_name = html_escape($graph['name']);\n\t\t\tform_alternate_row('line' . $graph['local_graph_id'], true);\n\t\t\tform_selectable_cell(filter_value(title_trim($graph['title_cache'], read_config_option('max_title_length')), get_request_var('filter'), 'aggregate_graphs.php?action=edit&id=' . $graph['local_graph_id']), $graph['local_graph_id']);\n\t\t\tform_selectable_cell($graph['local_graph_id'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_selectable_cell((empty($graph['name']) ? '<em>' . __('None') . '</em>' : filter_value($template_name, get_request_var('filter'))), $graph['local_graph_id']);\n\t\t\tform_selectable_cell($graph['height'] . 'x' . $graph['width'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_checkbox_cell($graph['title_cache'], $graph['local_graph_id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"' . (cacti_sizeof($display_text)+1) . '\"><em>' . __('No Aggregate Graphs Found') .'</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($graph_list)) {\n\t\t/* put the nav bar on the bottom as well */\n\t\tprint $nav;\n\t}\n\n\t/* add a list of tree names to the actions dropdown */\n\tadd_tree_names_to_actions_array();\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($graph_actions);\n\n\t/* remove old graphs */\n\tpurge_old_graphs();\n\n\tform_end();\n}\n\nfunction purge_old_graphs() {\n\t/* workaround to handle purged graphs */\n\t$old_graphs = array_rekey(db_fetch_assoc('SELECT DISTINCT local_graph_id\n\t\tFROM aggregate_graphs_items AS pagi\n\t\tLEFT JOIN graph_local AS gl ON pagi.local_graph_id=gl.id\n\t\tWHERE gl.id IS NULL AND local_graph_id>0'), 'local_graph_id',  'local_graph_id');\n\n\tif (cacti_sizeof($old_graphs)) {\n\t\tdb_execute('DELETE FROM aggregate_graphs_items\n\t\t\tWHERE local_graph_id IN (' . implode(',', $old_graphs) . ')');\n\t}\n\n\t$old_aggregates = array_rekey(db_fetch_assoc('SELECT DISTINCT local_graph_id\n\t\tFROM aggregate_graphs AS pag\n\t\tLEFT JOIN graph_local AS gl\n\t\tON pag.local_graph_id=gl.id\n\t\tWHERE gl.id IS NULL AND local_graph_id>0'), 'local_graph_id', 'local_graph_id');\n\n\t$old_agg_ids = array_rekey(db_fetch_assoc('SELECT DISTINCT pag.id\n\t\tFROM aggregate_graphs AS pag\n\t\tLEFT JOIN graph_local AS gl\n\t\tON pag.local_graph_id=gl.id\n\t\tWHERE gl.id IS NULL'), 'id', 'id');\n\n\tif (cacti_sizeof($old_aggregates)) {\n\t\tdb_execute('DELETE FROM graph_templates_item\n\t\t\tWHERE local_graph_id IN (' . implode(',', $old_aggregates) . ')');\n\n\t\tdb_execute('DELETE FROM graph_templates_graph\n\t\t\tWHERE local_graph_id IN (' . implode(',', $old_aggregates) . ')');\n\n\t\tdb_execute('DELETE FROM aggregate_graphs\n\t\t\tWHERE local_graph_id IN (' . implode(',', $old_aggregates) . ')');\n\t}\n\n\tif (cacti_sizeof($old_agg_ids)) {\n\t\tdb_execute('DELETE FROM aggregate_graphs_items\n\t\t\tWHERE aggregate_graph_id IN (' . implode(',', $old_agg_ids) . ')');\n\t}\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('./include/auth.php');\ninclude_once('./lib/api_aggregate.php');\n\n$aggregate_actions = array(\n\t1 => __('Delete')\n);\n\n/* set default action */\nset_default_action();\n\nif (get_request_var('action') == 'save') {\n\tif (isset_request_var('id') && get_filter_request_var('id') == 0 && isset_request_var('graph_template_id_prev') && get_filter_request_var('graph_template_id_prev') == 0) {\n\t\tset_request_var('action', 'edit');\n\t}\n}\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\taggregate_form_save();\n\t\tbreak;\n\tcase 'actions':\n\t\taggregate_form_actions();\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\taggregate_template_edit();\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\taggregate_template();\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n/**\n * aggregate_form_save\tthe save function\n */\nfunction aggregate_form_save() {\n\t/* make sure we are saving aggregate template */\n\tif (!isset_request_var('save_component_template')) {\n\t\theader('Location: aggregate_templates.php?header=false&action=edit&id=' . get_nfilter_request_var('id'));\n\t\treturn null;\n\t}\n\n\t$save1 = array();\n\n\t/* updating existing template or creating a new one? */\n\tif (isset_request_var('id') && get_request_var('id') > 0) {\n\t\t$is_new = false;\n\t\t$save1['id'] = get_nfilter_request_var('id');\n\t} else {\n\t\t$is_new = true;\n\t\t$save1['id'] = 0;\n\t}\n\n\t/* set some defaults for possibly disabled values */\n\tif (!isset_request_var('total'))        set_request_var('total', 0);\n\tif (!isset_request_var('total_type'))   set_request_var('total_type', 0);\n\tif (!isset_request_var('order_type'))   set_request_var('order_type', 0);\n\tif (!isset_request_var('total_prefix')) set_request_var('total_prefix', '');\n\n\t/* populate aggregate template save array and validate posted values*/\n\t$save1['name']              = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t$save1['graph_template_id'] = get_filter_request_var('graph_template_id_prev');\n\t$save1['gprint_prefix']     = form_input_validate(get_nfilter_request_var('gprint_prefix'), 'gprint_prefix', '', true, 3);\n\t$save1['graph_type']        = form_input_validate(get_nfilter_request_var('graph_type'), 'graph_type', '', false, 3);\n\t$save1['total']             = form_input_validate(get_nfilter_request_var('total'), 'total', '', false, 3);\n\t$save1['total_type']        = form_input_validate(get_nfilter_request_var('total_type'), 'total_type', '', false, 3);\n\t$save1['total_prefix']      = form_input_validate(get_nfilter_request_var('total_prefix'), 'total_prefix', '', true, 3);\n\t$save1['order_type']        = form_input_validate(get_nfilter_request_var('order_type'), 'order_type', '', false, 3);\n\t$save1['user_id']           = $_SESSION['sess_user_id'];\n\n\t/* form validation failed */\n\tif (is_error_message()) {\n\t\theader('Location: aggregate_templates.php?header=false&action=edit&id=' . get_nfilter_request_var('id'));\n\t\treturn null;\n\t}\n\n\tcacti_log('AGGREGATE GRAPH TEMPLATE Saved ID: ' . $save1['id'] . ' Name: ' . $save1['name'], false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\n\t/* do a quick comparison to see if anything changed */\n\tif ($is_new == false) {\n\t\t$old = db_fetch_row_prepared('SELECT *\n\t\t\tFROM aggregate_graph_templates\n\t\t\tWHERE id = ?',\n\t\t\tarray($save1['id']));\n\n\t\t$save_me = 0;\n\n\t\t$save_me += ($old['name']          != $save1['name']);\n\t\t$save_me += ($old['gprint_prefix'] != $save1['gprint_prefix']);\n\t\t$save_me += ($old['graph_type']    != $save1['graph_type']);\n\t\t$save_me += ($old['total']         != $save1['total']);\n\t\t$save_me += ($old['total_prefix']  != $save1['total_prefix']);\n\t\t$save_me += ($old['order_type']    != $save1['order_type']);\n\t} else {\n\t\t$save_me = 1;\n\t}\n\n\tif ($save_me) {\n\t\t$id = sql_save($save1, 'aggregate_graph_templates', 'id');\n\n\t\t/* update children of the template */\n\t\tdb_execute_prepared(\"UPDATE aggregate_graphs\n\t\t\tSET gprint_prefix = ?, graph_type = ?, total = ?, total_prefix = ?, order_type = ?\n\t\t\tWHERE aggregate_template_id = ?\n\t\t\tAND template_propogation='on'\",\n\t\t\tarray($save1['gprint_prefix'], $save1['graph_type'],\n\t\t\t\t$save1['total'], $save1['total_prefix'],  $save1['order_type'], $id));\n\n\t\tcacti_log('AGGREGATE GRAPH TEMPLATE Saved ID: ' . $id, false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\t} else {\n\t\t$id = $save1['id'];\n\t}\n\n\tif (!$id) {\n\t\traise_message(2);\n\t\theader('Location: aggregate_templates.php?header=false&action=edit&id=' . get_nfilter_request_var('id'));\n\t\treturn null;\n\t}\n\n\t/* save extra graph parameters */\n\t/* validate posted graph params */\n\t$params_new = aggregate_validate_graph_params($_POST, true);\n\t$params_new['aggregate_template_id'] = $id;\n\n\t/* compare new graph param values with existing in DB.\n\t * We need to know if there were changes so we only\n\t * rebuild existing graphs if needed. */\n\t$params_changed = false;\n\n\t$params_old = db_fetch_row_prepared('SELECT *\n\t\tFROM aggregate_graph_templates_graph\n\t\tWHERE aggregate_template_id = ?',\n\t\tarray($id));\n\n\tif (!empty($params_old)) {\n\t\tforeach ($params_old as $field => $value_old) {\n\t\t\tif (isset($params_new[$field]) && $params_new[$field] != $value_old) {\n\t\t\t\t$params_changed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$params_changed = true;\n\t}\n\n\n\t/* save only if all posted form fields passed validation */\n\tif (!is_error_message()) {\n\t\tsql_save($params_new, 'aggregate_graph_templates_graph', 'aggregate_template_id', false);\n\t}\n\n\t/* save the template items now */\n\t/* get existing item ids and sequences from graph template */\n\t$graph_templates_items = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT id, sequence\n\t\t\tFROM graph_templates_item\n\t\t\tWHERE local_graph_id=0\n\t\t\tAND graph_template_id = ?',\n\t\t\tarray($save1['graph_template_id'])),\n\t\t'id', array('sequence')\n\t);\n\n\t/* get existing aggregate template items */\n\t$aggregate_template_items_old = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT *\n\t\t\tFROM aggregate_graph_templates_item\n\t\t\tWHERE aggregate_template_id = ?', array($id)),\n\t\t'graph_templates_item_id', array('sequence', 'color_template', 't_graph_type_id', 'graph_type_id', 't_cdef_id', 'cdef_id', 'item_skip', 'item_total')\n\t);\n\n\t/* update graph template item values with posted values */\n\taggregate_validate_graph_items($_POST, $graph_templates_items);\n\n\t$items_changed = false;\n\t$items_to_save = array();\n\n\tforeach($graph_templates_items as $item_id => $data) {\n\t\t$item_new = array();\n\t\t$item_new['aggregate_template_id']   = $id;\n\t\t$item_new['graph_templates_item_id'] = $item_id;\n\n\t\t$item_new['color_template'] = isset($data['color_template']) ? $data['color_template']:0;\n\t\t$item_new['item_skip']      = isset($data['item_skip']) ? 'on':'';\n\t\t$item_new['item_total']     = isset($data['item_total']) ? 'on':'';\n\t\t$item_new['sequence']       = isset($data['sequence']) ? $data['sequence']:0;\n\n\t\t/* compare with old item to see if we need to push out. */\n\t\tif (!isset($aggregate_template_items_old[$item_id])) {\n\t\t\t/* this item does not yet exist */\n\t\t\t$items_changed = true;\n\t\t} else {\n\t\t\t// fill in missing fields with db values\n\t\t\t$item_new = array_merge($aggregate_template_items_old[$item_id], $item_new);\n\t\t\t/* compare data from user to data from DB */\n\t\t\tforeach ($data as $field => $new_value) {\n\t\t\t\tif ($aggregate_template_items_old[$item_id][$field] != $new_value)\n\t\t\t\t\t$items_changed = true;\n\t\t\t}\n\t\t}\n\t\t$items_to_save[] = $item_new;\n\t}\n\n\tif ($items_changed) {\n\t\taggregate_graph_items_save($items_to_save, 'aggregate_graph_templates_item');\n\t}\n\n\tif ($save_me || $params_changed || $items_changed) {\n\t\tpush_out_aggregates($id);\n\t}\n\n\traise_message(1);\n\n\theader('Location: aggregate_templates.php?header=false&action=edit&id=' . (empty($id) ? get_nfilter_request_var('id') : $id));\n}\n\n\nfunction aggregate_get_graph_items($table, $id) {\n\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n/**\n * aggregate_form_actions\t\tthe action function\n */\nfunction aggregate_form_actions() {\n\tglobal $aggregate_actions, $config;\n\tinclude_once($config['base_path'] . '/api_aggregate.php');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM aggregate_graph_templates WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM aggregate_graph_templates_item WHERE ' . array_to_sql_or($selected_items, 'aggregate_template_id'));\n\t\t\t\tdb_execute('DELETE FROM aggregate_graph_templates_graph WHERE ' . array_to_sql_or($selected_items, 'aggregate_template_id'));\n\t\t\t\tdb_execute(\"UPDATE aggregate_graphs SET aggregate_template_id=0, template_propogation='' WHERE \" . array_to_sql_or($selected_items, 'aggregate_template_id'));\n\t\t\t}\n\t\t} else {\n\t\t}\n\n\t\theader('Location: aggregate_templates.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$aggregate_list = ''; $i = 0;\n\n\t/* loop through each of the color templates selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\t\t\t$aggregate_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM aggregate_graph_templates WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$aggregate_array[] = $matches[1];\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('aggregate_templates.php');\n\n\thtml_start_box($aggregate_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($aggregate_array) && cacti_sizeof($aggregate_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\tprint \"<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to Delete the following Aggregate Graph Template(s).') . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$aggregate_list</ul></div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete Color Template(s)') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: aggregate_templates.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($aggregate_array) ? serialize($aggregate_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/**\n * aggregate_template_edit\tedit the color template\n */\nfunction aggregate_template_edit() {\n\tglobal $image_types, $struct_aggregate_template;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$template = db_fetch_row_prepared('SELECT *\n\t\t\tFROM aggregate_graph_templates\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Aggregate Template [edit: %s]', html_escape($template['name']));\n\t} else {\n\t\t$header_label = __('Aggregate Template [new]');\n\t}\n\n\t/* populate the graph template id if it's set */\n\tif (isset_request_var('graph_template_id') && !isset($template)) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('graph_template_id');\n\t\t/* ==================================================== */\n\t\t$template['graph_template_id'] = get_nfilter_request_var('graph_template_id');\n\t\t$template['id']                = 0;\n\t}\n\n\tform_start('aggregate_templates.php', 'template_edit');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($struct_aggregate_template, (isset($template) ? $template : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tif (isset($template)) {\n\t\tdraw_aggregate_graph_items_list(0, $template['graph_template_id'], $template);\n\n\t\t/* Draw Graph Configuration form, so user can override some parameters from graph template */\n\t\tdraw_aggregate_template_graph_config($template['id'], $template['graph_template_id']);\n\t}\n\n\tform_hidden_box('id', (isset($template['id']) ? $template['id'] : '0'), '0');\n\tform_hidden_box('save_component_template', '1', '');\n\tform_save_button('aggregate_templates.php', 'return', 'id');\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\tif ($('#id').val() == 0) {\n\t\t\t$('[id^=\"agg_total_\"]').prop('checked', true);\n\t\t}\n\n\t\tif ($('#graph_template_id').val() == 0) {\n\t\t\t$('#row_name').hide();\n\t\t\t$('#row_spacer1').hide();\n\t\t\t$('#row_gprint_prefix').hide();\n\t\t\t$('#row_graph_type').hide();\n\t\t\t$('#row_total').hide();\n\t\t\t$('#row_total_type').hide();\n\t\t\t$('#row_total_prefix').hide();\n\t\t\t$('#row_order_type').hide();\n\n\t\t\t$('#graph_template_id').change(function() {\n\t\t\t\t$('#template_edit').submit();\n\t\t\t});\n\n\t\t\t$('#save_component_template').parent().next('table').css('display', 'none');\n\t\t} else {\n\t\t\t$('#graph_template_id').prop('disabled', true);\n\t\t\tif ($('#graph_template_id').selectmenu('instance') !== undefined) {\n\t\t\t\t$('#graph_template_id').selectmenu('disable');\n\t\t\t}\n\t\t}\n\n\t\t$('#total').change(function() {\n\t\t\tchangeTotals();\n\t\t});\n\n\t\t$('#total_type').change(function() {\n\t\t\tchangeTotalsType();\n\t\t});\n\n\t\t$('input[id^=\"agg_total\"], input[id^=\"agg_skip\"]').click(function() {\n\t\t\tid = $(this).attr('id');\n\n\t\t\tif (id.indexOf('skip') > 0) {\n\t\t\t\taltId = id.replace('skip', 'total');\n\t\t\t} else {\n\t\t\t\taltId = id.replace('total', 'skip');\n\t\t\t}\n\n\t\t\tif ($('#'+id).is(':checked')) {\n\t\t\t\t$('#'+altId).prop('checked', false);\n\t\t\t} else {\n\t\t\t\t$('#'+altId).prop('checked', true);\n\t\t\t}\n\t\t});\n\n\t\tchangeTotals();\n\t});\n\n\tfunction changeTotals() {\n\t\tswitch ($('#total').val()) {\n\t\t\tcase '<?php print AGGREGATE_TOTAL_NONE;?>':\n\t\t\t\t$('#row_total_type').hide();\n\t\t\t\t$('#row_total_prefix').hide();\n\t\t\t\t$('#row_order_type').show();\n\t\t\t\tbreak;\n\t\t\tcase '<?php print AGGREGATE_TOTAL_ALL;?>':\n\t\t\t\t$('#row_total_type').show();\n\t\t\t\t$('#row_total_prefix').show();\n\t\t\t\t$('#row_order_type').show();\n\t\t\t\tchangeTotalsType();\n\t\t\t\tbreak;\n\t\t\tcase '<?php print AGGREGATE_TOTAL_ONLY;?>':\n\t\t\t\t$('#row_total_type').show();\n\t\t\t\t$('#row_total_prefix').show();\n\t\t\t\t//$('#order_type').prop('disabled', true);\n\t\t\t\tchangeTotalsType();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction changeTotalsType() {\n\t\tif ($('#total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_SIMILAR;?>) {\n\t\t\tif ($('#total_prefix').val() == '') {\n\t\t\t\t$('#total_prefix').attr('value', 'Total');\n\t\t\t}\n\t\t} else if ($('#total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_ALL;?>) {\n\t\t\tif ($('#total_prefix').val() == '') {\n\t\t\t\t$('#total_prefix').attr('value', 'All Items');\n\t\t\t}\n\t\t}\n\t}\n\t</script>\n\t<?php\n}\n\n/**\n * aggregate_template\n */\nfunction aggregate_template() {\n\tglobal $aggregate_actions, $item_rows, $config;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'pgt.name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_agg_tmp');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\tform_start('aggregate_templates.php', 'template');\n\n\thtml_start_box(__('Aggregate Templates'), '100%', '', '3', 'center', 'aggregate_templates.php?action=edit');\n\n\t$filter_html = '<tr class=\"even\">\n\t\t<td>\n\t\t\t<table class=\"filterTable\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t' . __('Search') . '\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type=\"text\" class=\"ui-state-default ui-corner-all\" id=\"filter\" size=\"25\" value=\"' . html_escape_request_var('filter') . '\">\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t' . __('Templates') . '\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id=\"rows\" onChange=\"applyFilter()\">\n\t\t\t\t\t\t<option value=\"-1\" ';\n\n\tif (get_request_var(\"rows\") == \"-1\") {\n\t\t$filter_html .= 'selected';\n\t}\n\n\t$filter_html .= '>' . __('Default') . '</option>';\n\tif (cacti_sizeof($item_rows)) {\n\t\tforeach ($item_rows as $key => $value) {\n\t\t\t$filter_html .= \"<option value='\" . $key . \"'\";\n\t\t\tif (get_request_var(\"rows\") == $key) {\n\t\t\t\t$filter_html .= \" selected\";\n\t\t\t}\n\t\t\t$filter_html .= \">\" . $value . \"</option>\\n\";\n\t\t}\n\t}\n\n\t$filter_html .= '</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"has_graphs\" ' . (get_request_var('has_graphs') == 'true' ? 'checked':'') . ' onChange=\"applyFilter()\">\n\t\t\t\t\t\t\t<label for=\"has_graphs\">' . __('Has Graphs') . '</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type=\"button\" class=\"ui-button ui-corner-all ui-widget\" value=\"' . __esc('Go') . '\" id=\"refresh\">\n\t\t\t\t\t\t\t<input type=\"button\" class=\"ui-button ui-corner-all ui-widget\" value=\"' . __esc('Clear') . '\" id=\"clear\">\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td>\n\t</tr>';\n\n\tprint $filter_html;\n\n\thtml_end_box();\n\n\tform_end();\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where = '';\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (pgt.name LIKE '%\" . get_request_var('filter') . \"%' OR gt.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . 'graphs.graphs>0';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(pgt.id)\n\t\tFROM aggregate_graph_templates AS pgt\n\t\tLEFT JOIN (\n\t\t\tSELECT aggregate_template_id, COUNT(*) AS graphs\n\t\t\tFROM aggregate_graphs\n\t\t\tGROUP BY aggregate_template_id\n\t\t) AS graphs\n\t\tON pgt.id=graphs.aggregate_template_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=pgt.graph_template_id\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$template_list = db_fetch_assoc(\"SELECT pgt.*, graphs.graphs, gt.name AS graph_template_name\n\t\tFROM aggregate_graph_templates AS pgt\n\t\tLEFT JOIN (\n\t\t\tSELECT aggregate_template_id, COUNT(*) AS graphs\n\t\t\tFROM aggregate_graphs\n\t\t\tGROUP BY aggregate_template_id\n\t\t) AS graphs\n\t\tON pgt.id=graphs.aggregate_template_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=pgt.graph_template_id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('aggregate_templates.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Aggregate Templates'), 'page', 'main');\n\n\tform_start('aggregate_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'pgt.name'            => array('display' => __('Template Title'), 'align' => 'left', 'sort' => 'ASC'),\n\t\t'nosort'              => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('Aggregate Templates that are in use can not be Deleted.  In use is defined as being referenced by an Aggregate.')),\n\t\t'graphs.graphs'       => array('display' => __('Graphs Using'), 'align' => 'right', 'sort' => 'DESC'),\n\t\t'graph_template_name' => array('display' => __('Graph Template'), 'align' => 'left', 'sort' => 'ASC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['graphs'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $template['id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'aggregate_templates.php?action=edit&id=' . $template['id'] . '&page=1'), $template['id']);\n\t\t\tform_selectable_cell($disabled ? 'No':'Yes', $template['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"' . html_escape('aggregate_graphs.php?reset=true&template_id=' . $template['id']) . '\">' . number_format_i18n($template['graphs'], '-1') . '</a>', $template['id'], '', 'text-align:right;');\n\t\t\tform_selectable_cell(filter_value($template['graph_template_name'], get_request_var('filter')), $template['id']);\n\t\t\tform_checkbox_cell($template['graph_template_name'], $template['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='\" . (cacti_sizeof($display_text)+1) . \"'><em>\" . __('No Aggregate Templates Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\t/* put the nav bar on the bottom as well */\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($aggregate_actions);\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'aggregate_templates.php';\n\t\tstrURL += '?rows=' + $('#rows').val();\n\t\tstrURL += '&has_graphs=' + $('#has_graphs').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'aggregate_templates.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#filter').change(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#template').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* include cacti base functions */\ninclude('./include/auth.php');\ninclude_once('./lib/snmp.php');\ninclude_once('./lib/poller.php');\n\n$network_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Disable'),\n\t3 => __('Enable'),\n\t4 => __('Discover Now'),\n\t5 => __('Cancel Discovery')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\ncase 'save':\n\tform_save();\n\n\tbreak;\ncase 'actions':\n\tform_actions();\n\n\tbreak;\ncase 'edit':\n\ttop_header();\n\tnetwork_edit();\n\tbottom_footer();\n\n\tbreak;\ndefault:\n\ttop_header();\n\tnetworks();\n\tbottom_footer();\n\n\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tif (isset_request_var('save_component_network')) {\n\t\t$network_id = api_networks_save($_POST);\n\n\t\theader('Location: automation_networks.php?header=false&action=edit&id=' . (empty($network_id) ? get_nfilter_request_var('id') : $network_id));\n\t}\n}\n\nfunction api_networks_remove($network_id){\n\tdb_execute_prepared('DELETE FROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n\n\tdb_execute_prepared('DELETE FROM automation_devices\n\t\tWHERE network_id = ?',\n\t\tarray($network_id));\n}\n\nfunction api_networks_enable($network_id){\n\tdb_execute_prepared('UPDATE automation_networks\n\t\tSET enabled=\"on\"\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n}\n\nfunction api_networks_disable($network_id){\n\tdb_execute_prepared('UPDATE automation_networks\n\t\tSET enabled=\"\"\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n}\n\nfunction api_networks_cancel($network_id){\n\tdb_execute_prepared('UPDATE IGNORE automation_processes\n\t\tSET command=\"cancel\"\n\t\tWHERE task=\"tmaster\"\n\t\tAND network_id = ?',\n\t\tarray($network_id));\n}\n\nfunction api_networks_discover($network_id, $discover_debug) {\n\tglobal $config;\n\n\t$enabled   = db_fetch_cell_prepared('SELECT enabled\n\t\tFROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n\n\t$running = db_fetch_cell_prepared('SELECT count(*)\n\t\tFROM automation_processes\n\t\tWHERE network_id = ?',\n\t\tarray($network_id));\n\n\t$name = db_fetch_cell_prepared('SELECT name\n\t\tFROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n\n\t$poller_id = db_fetch_cell_prepared('SELECT poller_id\n\t\tFROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n\n\tif ($enabled == 'on') {\n\t\tif (!$running) {\n\t\t\tif ($config['poller_id'] == $poller_id) {\n\t\t\t\t$args_debug = ($discover_debug) ? ' --debug' : '';\n\t\t\t\texec_background(read_config_option('path_php_binary'), '-q ' . read_config_option('path_webroot') . \"/poller_automation.php --network=$network_id --force\" . $args_debug);\n\t\t\t} else {\n\t\t\t\t$args_debug = ($discover_debug) ? '&debug=true' : '';\n\t\t\t\t$hostname = db_fetch_cell_prepared('SELECT hostname\n\t\t\t\t\tFROM poller\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($poller_id));\n\n\t\t\t\t$fgc_contextoption = get_default_contextoption();\n\t\t\t\t$fgc_context       = stream_context_create($fgc_contextoption);\n\t\t\t\t$response          = @file_get_contents(get_url_type() .'://' . $hostname . $config['url_path'] . 'remote_agent.php?action=discover&network=' . $network_id . $args_debug, false, $fgc_context);\n\t\t\t}\n\t\t} else {\n\t\t\t$_SESSION['automation_message'] = \"Can Not Restart Discovery for Discovery in Progress for Network '$name'\";\n\t\t\traise_message('automation_message');\n\t\t}\n\t} else {\n\t\t$_SESSION['automation_message'] = \"Can Not Perform Discovery for Disabled Network '$name'\";\n\t\traise_message('automation_message');\n\t}\n\n\tforce_session_data();\n}\n\nfunction api_networks_save($post) {\n\tif (empty($post['network_id'])) {\n\t\t$save['id']            = form_input_validate($post['id'], 'id', '^[0-9]+$', false, 3);\n\n\t\t/* general information */\n\t\t$save['name']          = form_input_validate($post['name'], 'name', '', false, 3);\n\t\t$save['poller_id']     = form_input_validate($post['poller_id'], 'poller_id', '^[0-9]+$', false, 3);\n\t\t$save['site_id']       = form_input_validate($post['site_id'], 'site_id', '^[0-9]+$', false, 3);\n\t\t$save['subnet_range']  = form_input_validate($post['subnet_range'], 'subnet_range', '', false, 3);\n\t\t$save['dns_servers']   = form_input_validate($post['dns_servers'], 'dns_servers', '', true, 3);\n\n\t\t$save['threads']       = form_input_validate($post['threads'], 'threads', '^[0-9]+$', false, 3);\n\t\t$save['run_limit']     = form_input_validate($post['run_limit'], 'run_limit', '^[0-9]+$', false, 3);\n\n\t\t$save['enabled']              = (isset($post['enabled']) ? 'on':'');\n\n\t\t/* notification settings */\n\t\t$save['notification_enabled'] = (isset($post['notification_enabled']) ? 'on':'');\n\t\t$save['notification_email']   = form_input_validate($post['notification_email'], 'notification_email', '', true, 3);\n\n\t\t$save['notification_fromname']  = form_input_validate($post['notification_fromname'], 'notification_fromname', '', true, 3);\n\t\t$save['notification_fromemail'] = form_input_validate($post['notification_fromemail'], 'notification_fromemail', '', true, 3);\n\n\t\t$save['enable_netbios']       = (isset($post['enable_netbios']) ? 'on':'');\n\t\t$save['add_to_cacti']         = (isset($post['add_to_cacti']) ? 'on':'');\n\t\t$save['same_sysname']         = (isset($post['same_sysname']) ? 'on':'');\n\t\t$save['rerun_data_queries']   = (isset($post['rerun_data_queries']) ? 'on':'');\n\n\t\t/* discovery connectivity settings */\n\t\t$save['snmp_id']       = form_input_validate($post['snmp_id'], 'snmp_id', '^[0-9]+$', false, 3);\n\t\t$save['ping_method']   = form_input_validate($post['ping_method'], 'ping_method', '^[0-9]+$', false, 3);\n\t\t$save['ping_port']     = form_input_validate($post['ping_port'], 'ping_port', '^[0-9]+$', false, 3);\n\t\t$save['ping_timeout']  = form_input_validate($post['ping_timeout'], 'ping_timeout', '^[0-9]+$', false, 3);\n\t\t$save['ping_retries']  = form_input_validate($post['ping_retries'], 'ping_retries', '^[0-9]+$', false, 3);\n\n\t\t/* discovery schedule settings */\n\t\t$save['sched_type']    = form_input_validate($post['sched_type'], 'sched_type', '^[0-9]+$', false, 3);\n\t\t$save['start_at']      = form_input_validate($post['start_at'], 'start_at', '', false, 3);;\n\n\t\t// accomodate a schedule start change\n\t\tif ($post['orig_start_at'] != $post['start_at']) {\n\t\t\t$save['next_start'] = '0000-00-00';\n\t\t}\n\n\t\tif ($post['orig_sched_type'] != $post['sched_type']) {\n\t\t\t$save['next_start'] = '0000-00-00';\n\t\t}\n\n\t\t$save['recur_every']   = form_input_validate($post['recur_every'], 'recur_every', '', true, 3);\n\n\t\t$save['day_of_week']   = form_input_validate(isset($post['day_of_week']) ? implode(',', $post['day_of_week']):'', 'day_of_week', '', true, 3);\n\t\t$save['month']         = form_input_validate(isset($post['month']) ? implode(',', $post['month']):'', 'month', '', true, 3);\n\t\t$save['day_of_month']  = form_input_validate(isset($post['day_of_month']) ? implode(',', $post['day_of_month']):'', 'day_of_month', '', true, 3);\n\t\t$save['monthly_week']  = form_input_validate(isset($post['monthly_week']) ? implode(',', $post['monthly_week']):'', 'monthly_week', '', true, 3);\n\t\t$save['monthly_day']   = form_input_validate(isset($post['monthly_day']) ? implode(',', $post['monthly_day']):'', 'monthly_day', '', true, 3);\n\n\t\t/* check for bad rules */\n\t\tif ($save['sched_type'] == '3') {\n\t\t\tif ($save['day_of_week'] == '') {\n\t\t\t\t$save['enabled'] = '';\n\t\t\t\t$_SESSION['automation_message'] = __('ERROR: You must specify the day of the week.  Disabling Network %s!.', $net);\n\t\t\t\traise_message('automation_message');\n\t\t\t}\n\t\t} elseif ($save['sched_type'] == '4') {\n\t\t\tif ($save['month'] == '' || $save['day_of_month'] == '') {\n\t\t\t\t$save['enabled'] = '';\n\t\t\t\t$_SESSION['automation_message'] = __('ERROR: You must specify both the Months and Days of Month.  Disabling Network %s!', $net);\n\t\t\t\traise_message('automation_message');\n\t\t\t}\n\t\t} elseif ($save['sched_type'] == '5') {\n\t\t\tif ($save['month'] == '' || $save['monthly_day'] == '' || $save['monthly_week'] == '') {\n\t\t\t\t$save['enabled'] = '';\n\t\t\t\t$_SESSION['automation_message'] = __('ERROR: You must specify the Months, Weeks of Months, and Days of Week.  Disabling Network %s!', $net);\n\t\t\t\traise_message('automation_message');\n\t\t\t}\n\t\t}\n\n\t\t/* validate the network definitions and rais error if failed */\n\t\t$continue  = true;\n\t\t$total_ips = 0;\n\t\t$networks  = explode(',', $save['subnet_range']);\n\n\t\t$i = 0;\n\t\tif (cacti_sizeof($networks)) {\n\t\t\tforeach($networks as $net) {\n\t\t\t\t$ips = automation_calculate_total_ips($networks, $i);\n\t\t\t\tif ($ips !== false) {\n\t\t\t\t\t$total_ips += $ips;\n\t\t\t\t} else {\n\t\t\t\t\t$continue = false;\n\t\t\t\t\t$_SESSION['automation_message'] = __(\"ERROR: Network '%s' is Invalid.\", $net);\n\t\t\t\t\traise_message('automation_message');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\n\t\tif ($continue) {\n\t\t\t$save['total_ips'] = $total_ips;\n\n\t\t\t$network_id = 0;\n\t\t\tif (!is_error_message()) {\n\t\t\t\t$network_id = sql_save($save, 'automation_networks');\n\n\t\t\t\tif ($network_id) {\n\t\t\t\t\traise_message(1);\n\t\t\t\t} else {\n\t\t\t\t\traise_message(2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $network_id;\n\t\t}\n\t}\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $config, $network_actions, $fields_networkss_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tforeach($selected_items as $item) {\n\t\t\t\t\tapi_networks_remove($item);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { /* enable */\n\t\t\t\tforeach($selected_items as $item) {\n\t\t\t\t\tapi_networks_enable($item);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* disable */\n\t\t\t\tforeach($selected_items as $item) {\n\t\t\t\t\tapi_networks_disable($item);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { /* run now */\n\t\t\t\t$discover_debug = isset_request_var('discover_debug');\n\n\t\t\t\tforeach($selected_items as $item) {\n\t\t\t\t\tapi_networks_discover($item, $discover_debug);\n\t\t\t\t}\n\n\t\t\t\tsleep(2);\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '5') { /* cancel */\n\t\t\t\tforeach($selected_items as $item) {\n\t\t\t\t\tapi_networks_cancel($item);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_networks.php?header=false');\n\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$networks_list = ''; $i = 0;\n\n\t/* loop through each of the device types selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$networks_info = db_fetch_row_prepared('SELECT name FROM automation_networks WHERE id = ?', array($matches[1]));\n\t\t\t$networks_list .= '<li>' . html_escape($networks_info['name']) . '</li>';\n\t\t\t$networks_array[$i] = $matches[1];\n\t\t}\n\n\t\t$i++;\n\t}\n\n\ttop_header();\n\n\tform_start('automation_networks.php');\n\n\thtml_start_box($network_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Network(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$networks_list</ul></div>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t} elseif (get_nfilter_request_var('drp_action') == '3') { /* enable */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to enable the following Network(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$networks_list</ul></div>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* disable */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to disable the following Network(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$networks_list</ul></div>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t} elseif (get_nfilter_request_var('drp_action') == '4') { /* discover now */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to discover the following Network(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$networks_list</ul></div>\n\t\t\t\t<p><input type='checkbox' id='discover_debug' name='discover_debug' value='1'>\n\t\t\t\t<label id='discover_debug_label' for='discover_debug'>\" . __('Run discover in debug mode') . \"</label></p>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t} elseif (get_nfilter_request_var('drp_action') == '5') { /* cancel discovery now */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to cancel on going Network Discovery(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$networks_list</ul></div>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t}\n\n\tif (!isset($networks_array)) {\n\t\traise_message(40);\n\t\theader('Location: automation_networks.php?header=false');\n\t\texit;\n\t} else {\n\t\t$save_html = \"<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' name='save'>\";\n\t}\n\n\tprint \"<tr>\n\t\t<td colspan='2' class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($networks_array) ? serialize($networks_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\" . ($save_html != '' ? \"\n\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='cancel' value='\" . __esc('Cancel') . \"'>\n\t\t\t$save_html\" : \"<input type='submit' class='ui-button ui-corner-all ui-widget' name='cancel' value='\" . __esc('Return') . \"'>\") . \"\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\nfunction network_edit() {\n\tglobal $config, $ping_methods;;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$sched_types = array(\n\t\t'1' => __('Manual'),\n\t\t'2' => __('Daily'),\n\t\t'3' => __('Weekly'),\n\t\t'4' => __('Monthly'),\n\t\t'5' => __('Monthly on Day'));\n\n\tif (!isempty_request_var('id')) {\n\t\t$network = db_fetch_row_prepared('SELECT * FROM automation_networks WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('Network Discovery Range [edit: %s]', html_escape($network['name']));\n\t} else {\n\t\t$header_label = __('Network Discovery Range [new]');\n\t}\n\n\t/* file: mactrack_device_types.php, action: edit */\n\t$fields = array(\n\t'spacer0' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('General Settings'),\n\t\t'collapsible' => 'true'\n\t\t),\n\t'name' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Name'),\n\t\t'description' => __('Give this Network a meaningful name.'),\n\t\t'value' => '|arg1:name|',\n\t\t'max_length' => '250',\n\t\t'placeholder' => __('New Network Discovery Range')\n\t\t),\n\t'poller_id' => array(\n\t\t'method' => 'drop_sql',\n\t\t'friendly_name' => __('Data Collector'),\n\t\t'description' => __('Choose the Cacti Data Collector/Poller to be used to gather data from this Device.'),\n\t\t'value' => '|arg1:poller_id|',\n\t\t'default' => read_config_option('default_poller'),\n\t\t'sql' => 'SELECT id, name FROM poller ORDER BY name',\n\t\t),\n\t'site_id' => array(\n\t\t'method' => 'drop_sql',\n\t\t'friendly_name' => __('Associated Site'),\n\t\t'description' => __('Choose the Cacti Site that you wish to associate discovered Devices with.'),\n\t\t'value' => '|arg1:site_id|',\n\t\t'default' => read_config_option('default_site'),\n\t\t'sql' => 'SELECT id, name FROM sites ORDER BY name',\n\t\t'none_value' => __('None')\n\t\t),\n\t'subnet_range' => array(\n\t\t'method' => 'textarea',\n\t\t'friendly_name' => __('Subnet Range'),\n\t\t'description' => __('Enter valid Network Ranges separated by commas.  You may use an IP address, a Network range such as 192.168.1.0/24 or 192.168.1.0/255.255.255.0, or using wildcards such as 192.168.*.*'),\n\t\t'value' => '|arg1:subnet_range|',\n\t\t'textarea_rows' => '4',\n\t\t'textarea_cols' => '80',\n\t\t'max_length' => '1024',\n\t\t'placeholder' => '192.168.1.0/24'\n\t\t),\n\t'total_ips' => array(\n\t\t'method' => 'other',\n\t\t'friendly_name' => __('Total IP Addresses'),\n\t\t'description' => __('Total addressable IP Addresses in this Network Range.'),\n\t\t'value' => (isset($network['total_ips']) ? number_format_i18n($network['total_ips']) : 0)\n\t\t),\n\t'dns_servers' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Alternate DNS Servers'),\n\t\t'description' => __('A space delimited list of alternate DNS Servers to use for DNS resolution. If blank, the poller OS will be used to resolve DNS names.'),\n\t\t'value' => '|arg1:dns_servers|',\n\t\t'max_length' => '250',\n\t\t'placeholder' => __('Enter IPs or FQDNs of DNS Servers')\n\t\t),\n\t'sched_type' => array(\n\t\t'method' => 'drop_array',\n\t\t'friendly_name' => __('Schedule Type'),\n\t\t'description' => __('Define the collection frequency.'),\n\t\t'value' => '|arg1:sched_type|',\n\t\t'array' => $sched_types,\n\t\t'default' => 1\n\t\t),\n\t'threads' => array(\n\t\t'method' => 'drop_array',\n\t\t'friendly_name' => __('Discovery Threads'),\n\t\t'description' => __('Define the number of threads to use for discovering this Network Range.'),\n\t\t'value' => '|arg1:threads|',\n\t\t'array' => array(\n\t\t\t'1'  => __('%d Thread', 1),\n\t\t\t'2'  => __('%d Threads', 2),\n\t\t\t'3'  => __('%d Threads', 3),\n\t\t\t'4'  => __('%d Threads', 4),\n\t\t\t'5'  => __('%d Threads', 5),\n\t\t\t'6'  => __('%d Threads', 6),\n\t\t\t'7'  => __('%d Threads', 7),\n\t\t\t'8'  => __('%d Threads', 8),\n\t\t\t'9'  => __('%d Threads', 9),\n\t\t\t'10' => __('%d Threads', 10),\n\t\t\t'20' => __('%d Threads', 20),\n\t\t\t'50' => __('%d Threads', 50)\n\t\t\t),\n\t\t'default' => 1\n\t\t),\n\t'run_limit' => array(\n\t\t'method' => 'drop_array',\n\t\t'friendly_name' => __('Run Limit'),\n\t\t'description' => __('After the selected Run Limit, the discovery process will be terminated.'),\n\t\t'value' => '|arg1:run_limit|',\n\t\t'array' => array(\n\t\t\t'60'    => __('%d Minute', 1),\n\t\t\t'300'   => __('%d Minutes', 5),\n\t\t\t'600'   => __('%d Minutes', 10),\n\t\t\t'1200'  => __('%d Minutes', 20),\n\t\t\t'1800'  => __('%d Minutes', 30),\n\t\t\t'3600'  => __('%d Hour', 1),\n\t\t\t'7200'  => __('%d Hours', 2),\n\t\t\t'14400' => __('%d Hours', 4),\n\t\t\t'28800' => __('%d Hours', 8),\n\t\t\t),\n\t\t'default' => 1200\n\t\t),\n\t'enabled' => array(\n\t\t'method' => 'checkbox',\n\t\t'friendly_name' => __('Enabled'),\n\t\t'description' => __('Enable this Network Range.'),\n\t\t'value' => '|arg1:enabled|'\n\t\t),\n\t'enable_netbios' => array(\n\t\t'method' => 'checkbox',\n\t\t'friendly_name' => __('Enable NetBIOS'),\n\t\t'description' => __('Use NetBIOS to attempt to resolve the hostname of up hosts.'),\n\t\t'value' => '|arg1:enable_netbios|',\n\t\t'default' => ''\n\t\t),\n\t'add_to_cacti' => array(\n\t\t'method' => 'checkbox',\n\t\t'friendly_name' => __('Automatically Add to Cacti'),\n\t\t'description' => __('For any newly discovered Devices that are reachable using SNMP and who match a Device Rule, add them to Cacti.'),\n\t\t'value' => '|arg1:add_to_cacti|'\n\t\t),\n\t'same_sysname' => array(\n\t\t'method' => 'checkbox',\n\t\t'friendly_name' => __('Allow same sysName on different hosts'),\n\t\t'description' => __('When discovering devices, allow duplicate sysnames to be added on different hosts'),\n\t\t'value' => '|arg1:same_sysname|'\n\t\t),\n\t'rerun_data_queries' => array(\n\t\t'method' => 'checkbox',\n\t\t'friendly_name' => __('Rerun Data Queries'),\n\t\t'description' => __('If a device previously added to Cacti is found, rerun its data queries.'),\n\t\t'value' => '|arg1:rerun_data_queries|'\n\t\t),\n\t'spacern' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('Notification Settings'),\n\t\t'collapsible' => 'true'\n\t\t),\n\t'notification_enabled' => array(\n\t\t'method' => 'checkbox',\n\t\t'friendly_name' => __('Notification Enabled'),\n\t\t'description' => __('If checked, when the Automation Network is scanned, a report will be sent to the Notification Email account..'),\n\t\t'value' => '|arg1:notification_enabled|',\n\t\t'default' => ''\n\t\t),\n\t'notification_email' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Notification Email'),\n\t\t'description' => __('The Email account to be used to send the Notification Email to.'),\n\t\t'value' => '|arg1:notification_email|',\n\t\t'max_length' => '250',\n\t\t'default' => ''\n\t\t),\n\t'notification_fromname' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Notification From Name'),\n\t\t'description' => __('The Email account name to be used as the senders name for the Notification Email.  If left blank, Cacti will use the default Automation Notification Name if specified, otherwise, it will use the Cacti system default Email name'),\n\t\t'value' => '|arg1:notification_fromname|',\n\t\t'max_length' => '32',\n\t\t'size' => '30',\n\t\t'default' => ''\n\t\t),\n\t'notification_fromemail' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Notification From Email Address'),\n\t\t'description' => __('The Email Address to be used as the senders Email for the Notification Email.  If left blank, Cacti will use the default Automation Notification Email Address if specified, otherwise, it will use the Cacti system default Email Address'),\n\t\t'value' => '|arg1:notification_fromemail|',\n\t\t'max_length' => '128',\n\t\t'default' => ''\n\t\t),\n\t'spacer2' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('Discovery Timing'),\n\t\t'collapsible' => 'true'\n\t\t),\n\t'start_at' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Starting Date/Time'),\n\t\t'description' => __('What time will this Network discover item start?'),\n\t\t'value' => '|arg1:start_at|',\n\t\t'max_length' => '30',\n\t\t'default' => date('Y-m-d H:i:s'),\n\t\t'size' => 20\n\t\t),\n\t'recur_every' => array(\n\t\t'method' => 'drop_array',\n\t\t'friendly_name' => __('Rerun Every'),\n\t\t'description' => __('Rerun discovery for this Network Range every X.'),\n\t\t'value' => '|arg1:recur_every|',\n\t\t'default' => '1',\n\t\t'array' => array(\n\t\t\t1 => '1',\n\t\t\t2 => '2',\n\t\t\t3 => '3',\n\t\t\t4 => '4',\n\t\t\t5 => '5',\n\t\t\t6 => '6',\n\t\t\t7 => '7'\n\t\t\t),\n\t\t),\n\t'day_of_week' => array(\n\t\t'method' => 'drop_multi',\n\t\t'friendly_name' => __('Days of Week'),\n\t\t'description' => __('What Day(s) of the week will this Network Range be discovered.'),\n\t\t'array' => array(\n\t\t\t1 => __('Sunday'),\n\t\t\t2 => __('Monday'),\n\t\t\t3 => __('Tuesday'),\n\t\t\t4 => __('Wednesday'),\n\t\t\t5 => __('Thursday'),\n\t\t\t6 => __('Friday'),\n\t\t\t7 => __('Saturday')\n\t\t\t),\n\t\t'value' => '|arg1:day_of_week|',\n\t\t'class' => 'day_of_week'\n\t\t),\n\t'month' => array(\n\t\t'method' => 'drop_multi',\n\t\t'friendly_name' => __('Months of Year'),\n\t\t'description' => __('What Months(s) of the Year will this Network Range be discovered.'),\n\t\t'array' => array(\n\t\t\t1 => __('January'),\n\t\t\t2 => __('February'),\n\t\t\t3 => __('March'),\n\t\t\t4 => __('April'),\n\t\t\t5 => __('May'),\n\t\t\t6 => __('June'),\n\t\t\t7 => __('July'),\n\t\t\t8 => __('August'),\n\t\t\t9 => __('September'),\n\t\t\t10 => __('October'),\n\t\t\t11 => __('November'),\n\t\t\t12 => __('December')\n\t\t\t),\n\t\t'value' => '|arg1:month|',\n\t\t'class' => 'month'\n\t\t),\n\t'day_of_month' => array(\n\t\t'method' => 'drop_multi',\n\t\t'friendly_name' => __('Days of Month'),\n\t\t'description' => __('What Day(s) of the Month will this Network Range be discovered.'),\n\t\t'array' => array(1 => '1', 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 => __('Last')),\n\t\t'value' => '|arg1:day_of_month|',\n\t\t'class' => 'days_of_month'\n\t\t),\n\t'monthly_week' => array(\n\t\t'method' => 'drop_multi',\n\t\t'friendly_name' => __('Week(s) of Month'),\n\t\t'description' => __('What Week(s) of the Month will this Network Range be discovered.'),\n\t\t'array' => array(\n\t\t\t1 => __('First'),\n\t\t\t2 => __('Second'),\n\t\t\t3 => __('Third'),\n\t\t\t'32' => __('Last')\n\t\t\t),\n\t\t'value' => '|arg1:monthly_week|',\n\t\t'class' => 'monthly_week'\n\t\t),\n\t'monthly_day' => array(\n\t\t'method' => 'drop_multi',\n\t\t'friendly_name' => __('Day(s) of Week'),\n\t\t'description' => __('What Day(s) of the week will this Network Range be discovered.'),\n\t\t'array' => array(\n\t\t\t1 => __('Sunday'),\n\t\t\t2 => __('Monday'),\n\t\t\t3 => __('Tuesday'),\n\t\t\t4 => __('Wednesday'),\n\t\t\t5 => __('Thursday'),\n\t\t\t6 => __('Friday'),\n\t\t\t7 => __('Saturday')\n\t\t\t),\n\t\t'value' => '|arg1:monthly_day|',\n\t\t'class' => 'monthly_day'\n\t\t),\n\t'spacer1' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('Reachability Settings'),\n\t\t'collapsible' => 'true'\n\t\t),\n\t'snmp_id' => array(\n\t\t'method' => 'drop_sql',\n\t\t'friendly_name' => __('SNMP Options'),\n\t\t'description' => __('Select the SNMP Options to use for discovery of this Network Range.'),\n\t\t'value' => '|arg1:snmp_id|',\n\t\t'none_value' => __('None'),\n\t\t'sql' => 'SELECT id, name FROM automation_snmp ORDER BY name'\n\t\t),\n\t'ping_method' => array(\n\t\t'friendly_name' => __('Ping Method'),\n\t\t'description' => __('The type of ping packet to send.'),\n\t\t'value' => '|arg1:ping_method|',\n\t\t'method' => 'drop_array',\n\t\t'default' => read_config_option('ping_method'),\n\t\t'array' => $ping_methods\n\t\t),\n\t'ping_port' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Ping Port'),\n\t\t'value' => '|arg1:ping_port|',\n\t\t'description' => __('TCP or UDP port to attempt connection.'),\n\t\t'default' => read_config_option('ping_port'),\n\t\t'max_length' => 5,\n\t\t'size' => 5\n\t\t),\n\t'ping_timeout' => array(\n\t\t'friendly_name' => __('Ping Timeout Value'),\n\t\t'description' => __('The timeout value to use for host ICMP and UDP pinging.  This host SNMP timeout value applies for SNMP pings.'),\n\t\t'method' => 'textbox',\n\t\t'value' => '|arg1:ping_timeout|',\n\t\t'default' => read_config_option('ping_timeout'),\n\t\t'max_length' => 5,\n\t\t'size' => 5\n\t\t),\n\t'ping_retries' => array(\n\t\t'friendly_name' => __('Ping Retry Count'),\n\t\t'description' => __('After an initial failure, the number of ping retries Cacti will attempt before failing.'),\n\t\t'method' => 'textbox',\n\t\t'value' => '|arg1:ping_retries|',\n\t\t'default' => read_config_option('ping_retries'),\n\t\t'max_length' => 5,\n\t\t'size' => 5\n\t\t),\n\t'orig_start_at' => array(\n\t\t'method' => 'hidden',\n\t\t'value' => '|arg1:start_at|',\n\t\t),\n\t'orig_sched_type' => array(\n\t\t'method' => 'hidden',\n\t\t'value' => '|arg1:sched_type|',\n\t\t)\n\t);\n\n\tform_start('automation_networks.php', 'form_network');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => 'true'),\n\t\t\t'fields' => inject_form_variables($fields, (isset($network) ? $network : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('save_component_network', '1', '');\n\tform_hidden_box('id', !isempty_request_var('id') ? get_request_var('id'):0, 0);\n\n\tform_save_button('automation_networks.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#day_of_week').multiselect({\n\t\t\tselectedList: 7,\n\t\t\tnoneSelectedText: '<?php print __('Select the days(s) of the week');?>',\n\t\t\theader: false,\n\t\t\theight: 54,\n\t\t\tmultipleRow: true,\n\t\t\tmultipleRowWidth: 90,\n\t\t\tminWidth: 450\n\t\t});\n\n\t\t$('#month').multiselect({\n\t\t\tselectedList: 7,\n\t\t\tnoneSelectedText: '<?php print __('Select the month(s) of the year');?>',\n\t\t\theader: false,\n\t\t\theight: 82,\n\t\t\tmultipleRow: true,\n\t\t\tmultipleRowWidth: 90,\n\t\t\tminWidth: 400\n\t\t});\n\n\t\t$('#day_of_month').multiselect({\n\t\t\tselectedList: 15,\n\t\t\tnoneSelectedText: '<?php print __('Select the day(s) of the month');?>',\n\t\t\theader: false,\n\t\t\theight: 162,\n\t\t\tmultipleRow: true,\n\t\t\tmultipleRowWidth: 55,\n\t\t\tminWidth: 400\n\t\t});\n\n\t\t$('#monthly_week').multiselect({\n\t\t\tselectedList: 4,\n\t\t\tnoneSelectedText: '<?php print __('Select the week(s) of the month');?>',\n\t\t\theader: false,\n\t\t\theight: 28,\n\t\t\tmultipleRow: true,\n\t\t\tmultipleRowWidth: 70,\n\t\t\tminWidth: 300\n\t\t});\n\n\t\t$('#monthly_day').multiselect({\n\t\t\tselectedList: 7,\n\t\t\tnoneSelectedText: '<?php print __('Select the day(s) of the week');?>',\n\t\t\theader: false,\n\t\t\theight: 54,\n\t\t\tmultipleRow: true,\n\t\t\tmultipleRowWidth: 90,\n\t\t\tminWidth: 450\n\t\t});\n\n\t\t$('#start_at').datetimepicker({\n\t\t\tminuteGrid: 10,\n\t\t\tstepMinute: 5,\n\t\t\ttimeFormat: 'HH:mm',\n\t\t\tdateFormat: 'yy-mm-dd',\n\t\t\tminDateTime: new Date(<?php print date(\"Y\") . ', ' . (date(\"m\")-1) . ', ' . date(\"d, H\") . ', ' . date('i', ceil(time()/300)*300) . ', 0, 0';?>)\n\t\t});\n\n\t\t$('#sched_type').change(function() {\n\t\t\tsetSchedule();\n\t\t});\n\n\t\tsetSchedule();\n\n\t\t$('#notification_enabled').click(function() {\n\t\t\tsetNotification();\n\t\t});\n\n\t\tsetNotification();\n\n\t\t$('#ping_method').change(function() {\n\t\t\tsetPing();\n\t\t});\n\n\t\tsetPing();\n\t});\n\n\tfunction setNotification() {\n\t\tif ($('#notification_enabled').is(':checked')) {\n\t\t\t$('#row_notification_email').show();\n\t\t\t$('#row_notification_fromname').show();\n\t\t\t$('#row_notification_fromemail').show();\n\t\t} else {\n\t\t\t$('#row_notification_email').hide();\n\t\t\t$('#row_notification_fromname').hide();\n\t\t\t$('#row_notification_fromemail').hide();\n\t\t}\n\t}\n\n\tfunction setPing() {\n\t\t$('#row_snmp_id').show();\n\t\t$('#row_ping_method').show();\n\n\t\tswitch($('#ping_method').val()) {\n\t\tcase '0':\n\t\t\t$('#row_ping_port').hide();\n\t\t\t$('#row_ping_timeout').hide();\n\t\t\t$('#row_ping_retries').hide();\n\t\t\tbreak;\n\t\tcase '1':\n\t\t\t$('#row_ping_port').hide();\n\t\t\t$('#row_ping_timeout').show();\n\t\t\t$('#row_ping_retries').show();\n\t\t\tbreak;\n\t\tcase '2':\n\t\tcase '3':\n\t\t\t$('#row_ping_port').show();\n\t\t\t$('#row_ping_timeout').show();\n\t\t\t$('#row_ping_retries').show();\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction setSchedule() {\n\t\tswitch($('#sched_type').val()) {\n\t\tcase '1': //Manual\n\t\t\t$('#row_start_at').hide();\n\t\t\t$('#row_spacer2').hide();\n\t\t\t$('#row_recur_every').hide();\n\t\t\t$('#row_day_of_week').hide();\n\t\t\t$('#row_month').hide();\n\t\t\t$('#row_day_of_month').hide();\n\t\t\t$('#row_monthly_week').hide();\n\t\t\t$('#row_monthly_day').hide();\n\t\t\tbreak;\n\t\tcase '2': //Daily\n\t\t\t$('#row_start_at').show();\n\t\t\t$('#row_spacer2').show();\n\t\t\t$('#row_recur_every').show();\n\t\t\t$('#row_day_of_week').hide();\n\t\t\t$('#row_month').hide();\n\t\t\t$('#row_day_of_month').hide();\n\t\t\t$('#row_monthly_week').hide();\n\t\t\t$('#row_monthly_day').hide();\n\t\t\t$('#row_recur_every').find('td:first').each(function() {\n\t\t\t\tvar html = $(this).html();\n\t\t\t\thtml = html.replace('<?php print __('every X Weeks');?>', '<?php print __('every X Days');?>');\n\t\t\t\thtml = html.replace('<?php print __('every X.');?>', '<?php print __('every X Days.');?>');\n\t\t\t\t$(this).html(html);\n\t\t\t});\n\n\t\t\tbreak;\n\t\tcase '3': //Weekly\n\t\t\t$('#row_start_at').show();\n\t\t\t$('#row_spacer2').show();\n\t\t\t$('#row_recur_every').show();\n\t\t\t$('#row_day_of_week').show();\n\t\t\t$('#row_month').hide();\n\t\t\t$('#row_day_of_month').hide();\n\t\t\t$('#row_monthly_week').hide();\n\t\t\t$('#row_monthly_day').hide();\n\t\t\t$('#row_recur_every').find('td:first').each(function() {\n\t\t\t\tvar html = $(this).html();\n\t\t\t\thtml = html.replace('<?php print __('every X Days');?>', '<?php print __('every X Weeks');?>');\n\t\t\t\thtml = html.replace('<?php print __('every X.');?>', '<?php print __('every X Weeks.');?>');\n\t\t\t\t$(this).html(html);\n\t\t\t});\n\n\t\t\tbreak;\n\t\tcase '4': //Monthly\n\t\t\t$('#row_start_at').show();\n\t\t\t$('#row_spacer2').show();\n\t\t\t$('#row_recur_every').hide();\n\t\t\t$('#row_day_of_week').hide();\n\t\t\t$('#row_month').show();\n\t\t\t$('#row_day_of_month').show();\n\t\t\t$('#row_monthly_week').hide();\n\t\t\t$('#row_monthly_day').hide();\n\t\t\tbreak;\n\t\tcase '5': //Monthly on Day\n\t\t\t$('#row_start_at').show();\n\t\t\t$('#row_spacer2').show();\n\t\t\t$('#row_recur_every').hide();\n\t\t\t$('#row_day_of_week').hide();\n\t\t\t$('#row_month').show();\n\t\t\t$('#row_day_of_month').hide();\n\t\t\t$('#row_monthly_week').show();\n\t\t\t$('#row_monthly_day').show();\n\t\t\tbreak;\n\t\t}\n\t}\n\t</script>\n\t<?php\n}\n\nfunction get_networks(&$sql_where, $rows, $apply_limits = true) {\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \" WHERE (automation_networks.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\n\t$sql_order = get_order_string();\n\n\tif ($apply_limits) {\n\t\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\t$query_string = \"SELECT automation_networks.*, poller.name AS data_collector\n\t\tFROM automation_networks\n\t\tLEFT JOIN poller\n\t\tON automation_networks.poller_id=poller.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\";\n\n\treturn db_fetch_assoc($query_string);\n}\n\nfunction networks() {\n\tglobal $network_actions, $networkss, $config, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'refresh' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '20'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_networks');\n\t/* ================= input validation ================= */\n\n\t$refresh['page']    = 'automation_networks.php?header=false';\n\t$refresh['seconds'] = get_request_var('refresh');\n\t$refresh['logout']  = 'false';\n\n\tset_page_refresh($refresh);\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} elseif (get_request_var('rows') == -2) {\n\t\t$rows = 99999999;\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('Network Filters'), '100%', '', '3', 'center', 'automation_networks.php?action=edit');\n\tnetworks_filter();\n\thtml_end_box();\n\n\t$sql_where = '';\n\n\t$networks = get_networks($sql_where, $rows);\n\n\t$total_rows = db_fetch_cell('SELECT COUNT(*) FROM automation_networks ' . $sql_where);\n\n\t$nav = html_nav_bar('automation_networks.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 14, __('Networks'), 'page', 'main');\n\n\tform_start('automation_networks.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$sched_types = array(\n\t\t'1' => __('Manual'),\n\t\t'2' => __('Daily'),\n\t\t'3' => __('Weekly'),\n\t\t'4' => __('Monthly'),\n\t\t'5' => __('Monthly on Day')\n\t);\n\n\t$display_text = array(\n\t\t'name'           => array('display' => __('Network Name'), 'align' => 'left', 'sort' => 'ASC'),\n\t\t'data_collector' => array('display' => __('Data Collector'), 'align' => 'left', 'sort' => 'DESC'),\n\t\t'sched_type'     => array('display' => __('Schedule'), 'align' => 'left', 'sort' => 'DESC'),\n\t\t'total_ips'      => array('display' => __('Total IPs'), 'align' => 'right', 'sort' => 'DESC'),\n\t\t'nosort1'        => array('display' => __('Status'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The Current Status of this Networks Discovery')),\n\t\t'nosort2'        => array('display' => __('Progress'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('Pending/Running/Done')),\n\t\t'nosort3'        => array('display' => __('Up/SNMP Hosts'), 'align' => 'right', 'sort' => 'DESC'),\n\t\t'threads'        => array('display' => __('Threads'), 'align' => 'right', 'sort' => 'DESC'),\n\t\t'last_runtime'   => array('display' => __('Last Runtime'), 'align' => 'right', 'sort' => 'ASC'),\n\t\t'nosort4'        => array('display' => __('Next Start'), 'align' => 'right', 'sort' => 'ASC'),\n\t\t'last_started'   => array('display' => __('Last Started'), 'align' => 'right', 'sort' => 'ASC'));\n\n\t$status = 'Idle';\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($networks)) {\n\t\tforeach ($networks as $network) {\n\t\t\tif ($network['enabled'] == '') {\n\t\t\t\t$mystat   = \"<span class='disabled'>\" . __('Disabled') . \"</span>\";\n\t\t\t\t$progress = \"0/0/0\";\n\t\t\t\t$status   = array();\n\t\t\t\t$updown['up'] = $updown['snmp'] = '0';\n\t\t\t} else {\n\t\t\t\t$running = db_fetch_cell_prepared('SELECT COUNT(*) FROM automation_processes WHERE network_id = ?', array($network['id']));\n\n\t\t\t\tif ($running > 0) {\n\t\t\t\t\t$status = db_fetch_row_prepared('SELECT\n\t\t\t\t\t\tCOUNT(*) AS total,\n\t\t\t\t\t\tSUM(CASE WHEN status=0 THEN 1 ELSE 0 END) AS pending,\n\t\t\t\t\t\tSUM(CASE WHEN status=1 THEN 1 ELSE 0 END) AS running,\n\t\t\t\t\t\tSUM(CASE WHEN status=2 THEN 1 ELSE 0 END) AS done\n\t\t\t\t\t\tFROM automation_ips\n\t\t\t\t\t\tWHERE network_id = ?', array($network['id']));\n\n\t\t\t\t\t$mystat   = \"<span class='running'>\" . __('Running') . \"</span>\";\n\n\t\t\t\t\tif (empty($status['total'])) {\n\t\t\t\t\t\t$progress = \"0/0/0\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$progress = $status['pending'] . '/' . $status['running'] . '/' . $status['done'];\n\t\t\t\t\t}\n\n\t\t\t\t\t$updown = db_fetch_row_prepared(\"SELECT SUM(up_hosts) AS up, SUM(snmp_hosts) AS snmp\n\t\t\t\t\t\tFROM automation_processes\n\t\t\t\t\t\tWHERE network_id = ?\", array($network['id']));\n\n\t\t\t\t\tif (empty($updown['up'])) {\n\t\t\t\t\t\t$updown['up']   = 0;\n\t\t\t\t\t\t$updown['snmp'] = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$updown['up']   = $network['up_hosts'];\n\t\t\t\t\t$updown['snmp'] = $network['snmp_hosts'];\n\n\t\t\t\t\t$mystat   = \"<span class='idle'>\" . __('Idle') . \"</span>\";\n\t\t\t\t\t$progress = \"0/0/0\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $network['id'], true);\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"' . html_escape('automation_networks.php?action=edit&id=' . $network['id']) . '\">' . $network['name'] . '</a>', $network['id']);\n\t\t\tform_selectable_cell($network['data_collector'], $network['id']);\n\t\t\tform_selectable_cell($sched_types[$network['sched_type']], $network['id']);\n\t\t\tform_selectable_cell(number_format_i18n($network['total_ips']), $network['id'], '', 'text-align:right;');\n\t\t\tform_selectable_cell($mystat, $network['id'], '', 'text-align:right;');\n\t\t\tform_selectable_cell($progress, $network['id'], '', 'text-align:right;');\n\t\t\tform_selectable_cell(number_format_i18n($updown['up']) . '/' . number_format_i18n($updown['snmp']), $network['id'], '', 'text-align:right;');\n\t\t\tform_selectable_cell(number_format_i18n($network['threads']), $network['id'], '', 'text-align:right;');\n\t\t\tform_selectable_cell(round($network['last_runtime'],2), $network['id'], '', 'text-align:right;');\n\t\t\tform_selectable_cell($network['enabled'] == '' || $network['sched_type'] == '1' ? __('N/A'):($network['next_start'] == '0000-00-00 00:00:00' ? substr($network['start_at'],0,16):substr($network['next_start'],0,16)), $network['id'], '', 'text-align:right;');\n\t\t\tform_selectable_cell($network['last_started'] == '0000-00-00 00:00:00' ? 'Never':substr($network['last_started'],0,16), $network['id'], '', 'text-align:right;');\n\t\t\tform_checkbox_cell($network['name'], $network['id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='10'><em>\" . __('No Networks Found') . \"</em></td></tr>\";\n\t}\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($networks)) {\n\t\t/* put the nav bar on the bottom as well */\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($network_actions);\n\n\tform_end();\n}\n\nfunction networks_filter() {\n\tglobal $item_rows;\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='networks' action='automation_networks.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Networks');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('rows') == '-1') {?> selected<?php }?>><?php print __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . $value . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Refresh');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='refresh' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$frequency = array(\n\t\t\t\t\t\t\t\t10  => __('%d Seconds', 10),\n\t\t\t\t\t\t\t\t20  => __('%d Seconds', 20),\n\t\t\t\t\t\t\t\t30  => __('%d Seconds', 30),\n\t\t\t\t\t\t\t\t45  => __('%d Seconds', 45),\n\t\t\t\t\t\t\t\t60  => __('%d Minute', 1),\n\t\t\t\t\t\t\t\t120 => __('%d Minutes', 2),\n\t\t\t\t\t\t\t\t300 => __('%d Minutes', 5)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tforeach ($frequency as $r => $row) {\n\t\t\t\t\t\t\t\techo \"<option value='\" . $r . \"'\" . (isset_request_var('refresh') && $r == get_request_var('refresh') ? ' selected' : '') . '>' . $row . '</option>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='go' title='<?php print __esc('Search');?>' value='<?php print __esc('Go');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' title='<?php print __esc('Clear Filtered');?>' value='<?php print __esc('Clear');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type='text/javascript'>\n\t\t\tfunction applyFilter() {\n\t\t\t\tstrURL  = '?rows=' + $('#rows').val();\n\t\t\t\tstrURL += '&filter=' + $('#filter').val();\n\t\t\t\tstrURL += '&refresh=' + $('#refresh').val();\n\t\t\t\tstrURL += '&header=false';\n\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = '?clear=true&header=false';\n\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\t$('#go').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#networks').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\t\t\t});\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/data_query.php');\n\n$automation_tree_rules_actions = array(\n\tAUTOMATION_ACTION_TREE_DUPLICATE => __('Duplicate'),\n\tAUTOMATION_ACTION_TREE_ENABLE    => __('Enable'),\n\tAUTOMATION_ACTION_TREE_DISABLE   => __('Disable'),\n\tAUTOMATION_ACTION_TREE_DELETE    => __('Delete'),\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tautomation_tree_rules_form_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tautomation_tree_rules_form_actions();\n\n\t\tbreak;\n\tcase 'change_leaf':\n\t\tautomation_tree_rules_change_leaf();\n\n\t\theader('Location: automation_tree_rules.php?header=false&action=edit&id=' . get_request_var('id'));\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tautomation_tree_rules_item_movedown();\n\n\t\theader('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id'));\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tautomation_tree_rules_item_moveup();\n\n\t\theader('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id'));\n\t\tbreak;\n\tcase 'item_remove':\n\t\tautomation_tree_rules_item_remove();\n\n\t\theader('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id'));\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\t\tautomation_tree_rules_item_edit();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'remove':\n\t\tautomation_tree_rules_remove();\n\n\t\theader ('Location: automation_tree_rules.php');\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tautomation_tree_rules_edit();\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\tautomation_tree_rules();\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n The Save Function\n -------------------------- */\n\nfunction automation_tree_rules_form_save() {\n\n\tif (isset_request_var('save_component_automation_tree_rule')) {\n\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save['id']                 = get_request_var('id');\n\t\t$save['name']               = form_input_validate(get_nfilter_request_var('name'), 'name', '', true, 3);\n\t\t$save['tree_id']            = form_input_validate(get_nfilter_request_var('tree_id'), 'tree_id', '^[0-9]+$', false, 3);\n\t\t$save['tree_item_id']       = isset_request_var('tree_item_id') ? form_input_validate(get_nfilter_request_var('tree_item_id'), 'tree_item_id', '^[0-9]+$', false, 3) : 0;\n\t\t$save['leaf_type']          = (isset_request_var('leaf_type')) ? form_input_validate(get_nfilter_request_var('leaf_type'), 'leaf_type', '^[0-9]+$', false, 3) : 0;\n\t\t$save['host_grouping_type'] = isset_request_var('host_grouping_type') ? form_input_validate(get_nfilter_request_var('host_grouping_type'), 'host_grouping_type', '^[0-9]+$', false, 3) : 0;\n\t\t$save['enabled']            = (isset_request_var('enabled') ? 'on' : '');\n\t\tif (!is_error_message()) {\n\t\t\t$rule_id = sql_save($save, 'automation_tree_rules');\n\n\t\t\tif ($rule_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_tree_rules.php?header=false&action=edit&id=' . (empty($rule_id) ? get_request_var('id') : $rule_id));\n\n\t} elseif (isset_request_var('save_component_automation_match_item')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('item_id');\n\t\t/* ==================================================== */\n\n\t\t$save = array();\n\t\t$save['id']        = form_input_validate(get_request_var('item_id'), 'item_id', '^[0-9]+$', false, 3);\n\t\t$save['rule_id']   = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['rule_type'] = AUTOMATION_RULE_TYPE_TREE_MATCH;\n\t\t$save['sequence']  = form_input_validate(get_nfilter_request_var('sequence'), 'sequence', '^[0-9]+$', false, 3);\n\t\t$save['operation'] = form_input_validate(get_nfilter_request_var('operation'), 'operation', '^[-0-9]+$', true, 3);\n\t\t$save['field']     = form_input_validate(((isset_request_var('field') && get_nfilter_request_var('field') != '0') ? get_nfilter_request_var('field') : ''), 'field', '', true, 3);\n\t\t$save['operator']  = form_input_validate((isset_request_var('operator') ? get_nfilter_request_var('operator') : ''), 'operator', '^[0-9]+$', true, 3);\n\t\t$save['pattern']   = form_input_validate((isset_request_var('pattern') ? get_nfilter_request_var('pattern') : ''), 'pattern', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$item_id = sql_save($save, 'automation_match_rule_items');\n\n\t\t\tif ($item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: automation_tree_rules.php?header=false&action=item_edit&id=' . get_request_var('id') . '&item_id=' . (empty($item_id) ? get_request_var('item_id') : $item_id) . '&rule_type=' . AUTOMATION_RULE_TYPE_TREE_MATCH);\n\t\t} else {\n\t\t\theader('Location: automation_tree_rules.php?header=false&action=edit&id=' . get_request_var('id') . '&rule_type=' . AUTOMATION_RULE_TYPE_TREE_MATCH);\n\t\t}\n\t} elseif (isset_request_var('save_component_automation_tree_rule_item')) {\n\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('item_id');\n\t\t/* ==================================================== */\n\n\t\tunset($save);\n\t\t$save['id']                = form_input_validate(get_request_var('item_id'), 'item_id', '^[0-9]+$', false, 3);\n\t\t$save['rule_id']           = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['sequence']          = form_input_validate(get_nfilter_request_var('sequence'), 'sequence', '^[0-9]+$', false, 3);\n\t\t$save['field']             = form_input_validate((isset_request_var('field') ? get_nfilter_request_var('field') : ''), 'field', '', true, 3);\n\t\t$save['sort_type']         = form_input_validate(get_nfilter_request_var('sort_type'), 'sort_type', '^[0-9]+$', false, 3);\n\t\t$save['propagate_changes'] = (isset_request_var('propagate_changes') ? 'on' : '');\n\t\t$save['search_pattern']    = isset_request_var('search_pattern') ? form_input_validate(get_nfilter_request_var('search_pattern'), 'search_pattern', '', false, 3) : '';\n\t\t$save['replace_pattern']   = isset_request_var('replace_pattern') ? form_input_validate(get_nfilter_request_var('replace_pattern'), 'replace_pattern', '', true, 3) : '';\n\n\t\tif (!is_error_message()) {\n\t\t\t$automation_graph_rule_item_id = sql_save($save, 'automation_tree_rule_items');\n\n\t\t\tif ($automation_graph_rule_item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: automation_tree_rules.php?header=false&action=item_edit&id=' . get_request_var('id') . '&item_id=' . (empty($automation_graph_rule_item_id) ? get_request_var('item_id') : $automation_graph_rule_item_id) . '&rule_type=' . AUTOMATION_RULE_TYPE_TREE_ACTION);\n\t\t} else {\n\t\t\theader('Location: automation_tree_rules.php?header=false&action=edit&id=' . get_request_var('id') . '&rule_type=' . AUTOMATION_RULE_TYPE_TREE_ACTION);\n\t\t}\n\t} else {\n\t\traise_message(2);\n\t\theader('Location: automation_tree_rules.php?header=false');\n\t}\n}\n\n/* ------------------------\n The 'actions' function\n ------------------------ */\n\nfunction automation_tree_rules_form_actions() {\n\tglobal $automation_tree_rules_actions;\n\tglobal $config;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DELETE) { /* DELETE */\n\t\t\t\tcacti_log('form_actions DELETE: ' . serialize($selected_items), true, 'AUTOM8 TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\tdb_execute('DELETE FROM automation_tree_rules WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM automation_tree_rule_items WHERE ' . array_to_sql_or($selected_items, 'rule_id'));\n\t\t\t\tdb_execute('DELETE FROM automation_match_rule_items WHERE ' . array_to_sql_or($selected_items, 'rule_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DUPLICATE) { /* duplicate */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tcacti_log('form_actions duplicate: ' . $selected_items[$i], true, 'AUTOM8 TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t\tduplicate_automation_tree_rules($selected_items[$i], get_nfilter_request_var('name_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_ENABLE) { /* enable */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tcacti_log('form_actions enable: ' . $selected_items[$i], true, 'AUTOM8 TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t\tdb_execute_prepared(\"UPDATE automation_tree_rules SET enabled='on' WHERE id = ?\", array($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DISABLE) { /* disable */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tcacti_log('form_actions disable: ' . $selected_items[$i], true, 'AUTOM8 TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t\tdb_execute_prepared(\"UPDATE automation_tree_rules SET enabled='' WHERE id = ?\", array($selected_items[$i]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_tree_rules.php?header=false');\n\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$automation_tree_rules_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$automation_tree_rules_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM automation_tree_rules WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$automation_tree_rules_array[] = $matches[1];\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('automation_tree_rules.php', 'automation_tree_rules_action');\n\n\thtml_start_box($automation_tree_rules_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DELETE) { /* DELETE */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Rule(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$automation_tree_rules_list</ul></div>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DUPLICATE) { /* duplicate */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to duplicate the following Rule(s). You can optionally change the title format for the new Rules.') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$automation_tree_rules_list</ul></div>\n\t\t\t\t<p>\" . __('Title Format') . '<br>'; form_text_box('name_format', '<' . __('rule_name') . '> (1)', '', '255', '30', 'text'); print \"</p>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_ENABLE) { /* enable */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to enable the following Rule(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$automation_tree_rules_list</ul></div>\n\t\t\t\t<p>\" . __('Make sure, that those rules have successfully been tested!') . \"</p>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DISABLE) { /* disable */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to disable the following Rule(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$automation_tree_rules_list</ul></div>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t}\n\n\tif (!isset($automation_tree_rules_array)) {\n\t\traise_message(40);\n\t\theader('Location: automation_tree_rules.php?header=false');\n\t\texit;\n\t}else {\n\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Apply requested action') . \"'>\";\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($automation_tree_rules_array) ? serialize($automation_tree_rules_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\nfunction automation_tree_rules_change_leaf() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('leaf_type');\n\t/* ==================================================== */\n\n\tautomation_change_tree_rule_leaf_type(get_request_var('leaf_type'), get_request_var('id'));\n}\n\n/* --------------------------\n Rule Item Functions\n -------------------------- */\n\nfunction automation_tree_rules_item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_MATCH) {\n\t\tmove_item_down('automation_match_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id') . ' AND rule_type=' . get_request_var('rule_type'));\n\t} elseif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION) {\n\t\tmove_item_down('automation_tree_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id'));\n\t}\n}\n\nfunction automation_tree_rules_item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_MATCH) {\n\t\tmove_item_up('automation_match_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id') . ' AND rule_type=' . get_request_var('rule_type'));\n\t} elseif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION) {\n\t\tmove_item_up('automation_tree_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id'));\n\t}\n}\n\nfunction automation_tree_rules_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_MATCH) {\n\t\tdb_execute_prepared('DELETE FROM automation_match_rule_items WHERE id = ?', array(get_request_var('item_id')));\n\t} elseif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION) {\n\t\tdb_execute_prepared('DELETE FROM automation_tree_rule_items WHERE id = ?', array(get_request_var('item_id')));\n\t}\n\n\n}\n\n\nfunction automation_tree_rules_item_edit() {\n\tglobal $config;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\tget_filter_request_var('show_trees');\n\t/* ==================================================== */\n\n\t/* handle show_trees mode */\n\tif (isset_request_var('show_trees')) {\n\t\tif (get_request_var('show_trees') == '0') {\n\t\t\tkill_session_var('automation_tree_rules_show_trees');\n\t\t} elseif (get_request_var('show_trees') == '1') {\n\t\t\t$_SESSION['automation_tree_rules_show_trees'] = true;\n\t\t}\n\t}\n\n\tif (!isempty_request_var('rule_type') && !isempty_request_var('item_id')) {\n\t\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION) {\n\t\t$item = db_fetch_row_prepared('SELECT * FROM automation_tree_rule_items WHERE id = ?', array(get_request_var('item_id')));\n\t\t\tif ($item['field'] != AUTOMATION_TREE_ITEM_TYPE_STRING) {\n\t\t\t\t?>\n<table style='width:100%;text-align:center;'>\n\t<tr>\n\t\t<td class='textInfo' style='text-align:right;vertical-align:top;'><span class='linkMarker'>*</span><a class='linkEditMain' href='<?php print html_escape('automation_tree_rules.php?action=item_edit&id=' . (isset_request_var('id') ? get_request_var('id') : 0) . '&item_id=' . (isset_request_var('item_id') ? get_request_var('item_id') : 0) . '&rule_type=' . (isset_request_var('rule_type') ? get_request_var('rule_type') : 0) .'&show_trees=') . (isset($_SESSION['automation_tree_rules_show_trees']) ? '0' : '1');?>'><?php print (isset($_SESSION['automation_tree_rules_show_trees']) ? __('Don\\'t Show'):__('Show'));?> <?php print __('Created Trees');?></a><br>\n\t\t</td>\n\t</tr>\n</table>\n<br>\n\t\t\t\t<?php\n\t\t\t}\n\t\t}\n\t}\n\n\tglobal_item_edit(get_request_var('id'), get_request_var('item_id'), get_request_var('rule_type'));\n\n\tform_hidden_box('rule_type', get_request_var('rule_type'), get_request_var('rule_type'));\n\tform_hidden_box('id', (isset_request_var('id') ? get_request_var('id') : '0'), '');\n\tform_hidden_box('item_id', (isset_request_var('item_id') ? get_request_var('item_id') : '0'), '');\n\tif(get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_MATCH) {\n\t\tform_hidden_box('save_component_automation_match_item', '1', '');\n\t} else {\n\t\tform_hidden_box('save_component_automation_tree_rule_item', '1', '');\n\t}\n\tform_save_button('automation_tree_rules.php?action=edit&id=' . get_request_var('id') . '&rule_type=' . get_request_var('rule_type'));\n\tprint '<br>';\n\n\t/* display list of matching trees */\n\tif (!isempty_request_var('rule_type') && !isempty_request_var('item_id')) {\n\t\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION) {\n\t\t\tif (isset($_SESSION['automation_tree_rules_show_trees']) && ($item['field'] != AUTOMATION_TREE_ITEM_TYPE_STRING)) {\n\t\t\t\tif ($_SESSION['automation_tree_rules_show_trees']) {\n\t\t\t\t\tdisplay_matching_trees(get_request_var('id'), AUTOMATION_RULE_TYPE_TREE_ACTION, $item, 'automation_tree_rules.php?action=item_edit&id=' . get_request_var('id') . '&item_id=' . get_request_var('item_id') . '&rule_type=' . get_request_var('rule_type'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//Now we need some javascript to make it dynamic\n?>\n<script type='text/javascript'>\n\napplyHeaderChange();\ntoggle_operation();\ntoggle_operator();\n\nfunction applyHeaderChange() {\n\tif ($('#rule_type').val() == '<?php print AUTOMATION_RULE_TYPE_TREE_ACTION;?>') {\n\t\tif ($('#field').val() == '<?php print AUTOMATION_TREE_ITEM_TYPE_STRING;?>') {\n\t\t\t$('#replace_pattern').val('');\n\t\t\t$('#replace_pattern').prop('disabled', true);\n\t\t} else {\n\t\t\t$('#replace_pattern').prop('disabled', false);\n\t\t}\n\t}\n}\n\nfunction toggle_operation() {\n\t// right bracket ')' does not come with a field\n\tif ($('operation').value == '<?php print AUTOMATION_OPER_RIGHT_BRACKET;?>') {\n\t\t//alert('Sequence is '' + document.getElementById('sequence').value + ''');\n\t\t$('#field').val('');\n\t\t$('#field').prop('disabled', true);\n\t\t$('#operator').val(0);\n\t\t$('#operator').prop('disabled', true);\n\t\t$('#pattern').val('');\n\t\t$('#pattern').prop('disabled', true);\n\t} else {\n\t\t$('#field').prop('disabled', false);\n\t\t$('#operator').prop('disabled', false);\n\t\t$('#pattern').prop('disabled', false)\n\t}\n}\n\nfunction toggle_operator() {\n\t// if operator is not 'binary', disable the 'field' for matching strings\n\tif ($('#operator').val() == '<?php print AUTOMATION_OPER_RIGHT_BRACKET;?>') {\n\t\t//alert('Sequence is '' + document.getElementById('sequence').value + ''');\n\t} else {\n\t}\n}\n</script>\n<?php\n}\n\n/* ---------------------\n Rule Functions\n --------------------- */\n\nfunction automation_tree_rules_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif ((read_config_option('deletion_verification') == 'on') && (!isset_request_var('confirm'))) {\n\t\ttop_header();\n\t\tform_confirm(__('Are You Sure?'), __(\"Are you sure you want to DELETE the Rule '%s'?\", db_fetch_cell_prepared('SELECT name FROM automation_tree_rules WHERE id = ?', array(get_request_var('id')))), 'automation_tree_rules.php', 'automation_tree_rules.php?action=remove&id=' . get_request_var('id'));\n\t\tbottom_footer();\n\t\texit;\n\t}\n\n\tif ((read_config_option('deletion_verification') == '') || (isset_request_var('confirm'))) {\n\t\tdb_execute_prepared('DELETE FROM automation_match_rule_items\n\t\t\tWHERE rule_id = ?\n\t\t\tAND rule_type = ?',\n\t\t\tarray(get_request_var('id'), AUTOMATION_RULE_TYPE_TREE_MATCH));\n\n\t\tdb_execute_prepared('DELETE FROM automation_tree_rule_items\n\t\t\tWHERE rule_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tdb_execute_prepared('DELETE FROM automation_tree_rules\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n}\n\nfunction automation_tree_rules_edit() {\n\tglobal $config;\n\tglobal $fields_automation_tree_rules_edit1, $fields_automation_tree_rules_edit2, $fields_automation_tree_rules_edit3;\n\n\tinclude_once($config['base_path'].'/lib/html_tree.php');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('rows');\n\tget_filter_request_var('tree_id');\n\tget_filter_request_var('leaf_type');\n\tget_filter_request_var('host_grouping_type');\n\tget_filter_request_var('tree_item_id');\n\tget_filter_request_var('show_hosts');\n\t/* ==================================================== */\n\n\t/* clean up rule name */\n\tif (isset_request_var('name')) {\n\t\tset_request_var('name', sanitize_search_string(get_request_var('name')));\n\t}\n\n\t/* remember these search fields in session vars so we don't have to keep passing them around */\n\tload_current_session_value('rows', 'sess_default_rows', read_config_option('num_rows_table'));\n\n\t/* handle show_hosts mode */\n\tif (isset_request_var('show_hosts')) {\n\t\tif (get_request_var('show_hosts') == '0') {\n\t\t\tkill_session_var('automation_tree_rules_show_objects');\n\t\t} elseif (get_request_var('show_hosts') == '1') {\n\t\t\t$_SESSION['automation_tree_rules_show_objects'] = true;\n\t\t}\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\t?>\n<table style='width:100%;text-align:center;'>\n\t<tr>\n\t\t<td class='textInfo right' style='vertical-align:top;'><span class='linkMarker'>*</span><a class='linkEditMain' href='<?php print html_escape('automation_tree_rules.php?action=edit&id=' . (isset_request_var('id') ? get_request_var('id') : 0) . '&show_hosts=') . (isset($_SESSION['automation_tree_rules_show_objects']) ? '0' : '1');?>'><?php print (isset($_SESSION['automation_tree_rules_show_objects']) ? __('Don\\'t Show'):__('Show'));?> <?php print __('Eligible Objects');?></a><br>\n\t\t</td>\n\t</tr>\n</table>\n\t\t<?php\n\t}\n\n\t/*\n\t * display the rule -------------------------------------------------------------------------------------\n\t */\n\t$rule = array();\n\tif (!isempty_request_var('id')) {\n\t\t$rule = db_fetch_row_prepared('SELECT * FROM automation_tree_rules WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('Tree Rule Selection [edit: %s]', html_escape($rule['name']));\n\t} else {\n\t\t$header_label = __('Tree Rules Selection [new]');\n\t}\n\t/* if creating a new rule, use all fields that have already been entered on page reload */\n\tif (isset_request_var('name')) {\n\t\t$rule['name'] = get_request_var('name');\n\t}\n\n\tif (isset_request_var('tree_id')) {\n\t\t$rule['tree_id'] = get_request_var('tree_id');\n\t}\n\n\tif (isset_request_var('leaf_type')) {\n\t\t$rule['leaf_type'] = get_request_var('leaf_type');\n\t}\n\n\tif (isset_request_var('host_grouping_type')) {\n\t\t$rule['host_grouping_type'] = get_request_var('host_grouping_type');\n\t}\n\n\tif (isset_request_var('tree_item_id')) {\n\t\t$rule['tree_item_id'] = get_request_var('tree_item_id');\n\t}\n\n\tform_start('automation_tree_rules.php', 'form_automation_tree_rule_edit');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (!isempty_request_var('id')) {\n\t\t/* display whole rule */\n\t\t$form_array = $fields_automation_tree_rules_edit1 + $fields_automation_tree_rules_edit2 + $fields_automation_tree_rules_edit3;\n\t} else {\n\t\t/* display first part of rule only and request user to proceed */\n\t\t$form_array = $fields_automation_tree_rules_edit1;\n\t}\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => true),\n\t\t'fields' => inject_form_variables($form_array, (isset($rule) ? $rule : array()))\n\t));\n\n\tform_hidden_box('id', (isset($rule['id']) ? $rule['id'] : '0'), '');\n\tform_hidden_box('item_id', (isset($rule['item_id']) ? $rule['item_id'] : '0'), '');\n\tform_hidden_box('save_component_automation_tree_rule', '1', '');\n\n\thtml_end_box(true, true);\n\n\t/*\n\t * display the rule items -------------------------------------------------------------------------------\n\t */\n\tif (!empty($rule['id'])) {\n\t\t# display tree rules for host match\n\t\tdisplay_match_rule_items(__('Object Selection Criteria'),\n\t\t\t$rule['id'],\n\t\t\tAUTOMATION_RULE_TYPE_TREE_MATCH,\n\t\t\t'automation_tree_rules.php');\n\n\t\t# fetch tree action rules\n\t\tdisplay_tree_rule_items(__('Tree Creation Criteria'),\n\t\t\t$rule['id'],\n\t\t\t$rule['leaf_type'],\n\t\t\tAUTOMATION_RULE_TYPE_TREE_ACTION,\n\t\t\t'automation_tree_rules.php');\n\t}\n\n\tform_save_button('automation_tree_rules.php', 'return');\n\n\tprint '<br>';\n\n\tif (!empty($rule['id'])) {\n\t\t/* display list of matching hosts */\n\t\tif (isset($_SESSION['automation_tree_rules_show_objects'])) {\n\t\t\tif ($_SESSION['automation_tree_rules_show_objects']) {\n\t\t\t\tif ($rule['leaf_type'] == TREE_ITEM_TYPE_HOST) {\n\t\t\t\t\tdisplay_matching_hosts($rule, AUTOMATION_RULE_TYPE_TREE_MATCH, 'automation_tree_rules.php?action=edit&id=' . get_request_var('id'));\n\t\t\t\t} elseif ($rule['leaf_type'] == TREE_ITEM_TYPE_GRAPH) {\n\t\t\t\t\tdisplay_matching_graphs($rule, AUTOMATION_RULE_TYPE_TREE_MATCH, 'automation_tree_rules.php?action=edit&id=' . get_request_var('id'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tvar automationLeafTypeOriginal = $('#leaf_type').val();\n\n\t<?php\n\tif (!empty($rule['id'])) {\n\t\tprint 'var isNew = false;';\n\t} else {\n\t\tprint 'var isNew = true;';\n\t}\n\t?>\n\n\t$(function() {\n\t\tapplyItemTypeChange();\n\t});\n\n\tfunction applyTreeChange(action,force) {\n\t\tif (force == undefined) {\n\t\t\tforce = false;\n\t\t}\n\n\t\tif (action == undefined) {\n\t\t\taction = 'edit';\n\t\t}\n\n\t\tstrURL  = 'automation_tree_rules.php?header=false&action=' + action;\n\t\tstrURL += '&id=' + $('#id').val();\n\t\tstrURL += '&name=' + $('#name').val();\n\t\tstrURL += '&tree_id=' + $('#tree_id').val();\n\t\tstrURL += '&tree_item_id=' + $('#tree_item_id').val();\n\t\tstrURL += '&leaf_type=' + $('#leaf_type').val();\n\t\tstrURL += '&enabled=' + $('#enabled').val();\n\n\t\tloadPageNoHeader(strURL,undefined,force);\n\t}\n\n\tfunction applyItemTypeChange() {\n\t\tvar automationLeafTypeNew = $('#leaf_type').val();\n\t\tif (automationLeafTypeOriginal != automationLeafTypeNew && !isNew) {\n\t\t\tif (automationLeafTypeNew == 3) {\n\t\t\t\tvar automationLeafTypeButtons = {\n\t\t\t\t\t'Yes': {\n\t\t\t\t\t\ttext: '<?php print __('Yes'); ?>',\n\t\t\t\t\t\tid: 'btnAutomationLeafTypeYes',\n\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\tapplyTreeChange('change_leaf',true);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'No': {\n\t\t\t\t\t\ttext: '<?php print __('No'); ?>',\n\t\t\t\t\t\tid: 'btnAutomationLeafTypeNo',\n\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t$(this).dialog('close');\n\t\t\t\t\t\t\tvar leaf = $('#leaf_type');\n\t\t\t\t\t\t\tif (leaf != null) {\n\t\t\t\t\t\t\t\tleaf.val(automationLeafTypeOriginal);\n\t\t\t\t\t\t\t\tleaf.selectmenu(\"refresh\");\n\t\t\t\t\t\t\t\tleaf.change();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tvar automationLeafTypeTitle = '<?php print __('Change Leaf Type'); ?>';\n\t\t\t\tvar automationLeafTypeContainer = '<div id=\"automationLeafTypeContainer\" style=\"display:none\">' +\n\t\t\t\t\t'<p style=\"display:table-cell;overflow:auto\"> ' +\n\t\t\t\t\t'<b><?php print __('WARNING:'); ?></b>' +\n\t\t\t\t\t'<?php print __('You are changing the leaf type to \"Device\" which does not support Graph-based object matching/creation.');?>' +\n\t\t\t\t\t'<?php print __('By changing the leaf type, all invalid rules will be automatically removed and will not be recoverable.');?> <br/><br/>' +\n\t\t\t\t\t'<?php print __('Are you sure you wish to continue?');?>' +\n\t\t\t\t\t'</p>' +\n\t\t\t\t\t'</div>';\n\n\t\t\t\t$('#automationLeafTypeContainer').remove();\n\t\t\t\t$('body').append(automationLeafTypeContainer);\n\n\t\t\t\tvar automationLeafTypeWidth = $(window).width();\n\t\t\t\tif (automationLeafTypeWidth > 600) {\n\t\t\t\t\tautomationLeafTypeWidth = 600;\n\t\t\t\t} else {\n\t\t\t\t\tautomationLeafTypeWidth -= 50;\n\t\t\t\t}\n\n\t\t\t\t$('#automationLeafTypeContainer').dialog({\n\t\t\t\t\tdraggable: true,\n\t\t\t\t\tresizable: false,\n\t\t\t\t\theight: 'auto',\n\t\t\t\t\tminWidth: automationLeafTypeWidth,\n\t\t\t\t\tmaxWidth: 800,\n\t\t\t\t\tmaxHeight: 600,\n\t\t\t\t\ttitle: automationLeafTypeTitle,\n\t\t\t\t\tbuttons: automationLeafTypeButtons\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tapplyTreeChange('change_leaf',true);\n\t\t\t}\n\t\t} else {\n\t\t\tif ($('#leaf_type').val() == '<?php print TREE_ITEM_TYPE_HOST;?>') {\n\t\t\t\t$('#row_host_grouping_type').show();\n\t\t\t} else if ($('#leaf_type').val() == '<?php print TREE_ITEM_TYPE_GRAPH;?>') {\n\t\t\t\t$('#row_host_grouping_type').hide();\n\t\t\t}\n\t\t\t$('#leaf_type').selectmenu(\"refresh\");\n\t\t}\n\t}\n\t</script>\n\t<?php\n}\n\nfunction automation_tree_rules() {\n\tglobal $automation_tree_rules_actions, $config, $item_rows;\n\tglobal $automation_tree_item_types, $host_group_types;\n\n\tif ((!empty($_SESSION['sess_autom_tr_status'])) && (!isempty_request_var('status'))) {\n\t\tif ($_SESSION['sess_autom_tr_status'] != get_nfilter_request_var('status')) {\n\t\t\tset_request_var('page', 1);\n\t\t}\n\t}\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'status' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_autom_tr');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('Tree Rules'), '100%', '', '3', 'center', 'automation_tree_rules.php?action=edit');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_automation' action='automation_tree_rules.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Status');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='status'>\n\t\t\t\t\t\t\t\t<option value='-1' <?php print (get_request_var('status') == '-1' ? ' selected':'');?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t\t<option value='-2' <?php print (get_request_var('status') == '-2' ? ' selected':'');?>><?php print __('Enabled');?></option>\n\t\t\t\t\t\t\t\t<option value='-3' <?php print (get_request_var('status') == '-3' ? ' selected':'');?>><?php print __('Disabled');?></option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Tree Rules');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='rows'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\" . (get_request_var('rows') == $key ? ' selected':'') . '>' . $value . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>'>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type='text/javascript'>\n\t\t\tfunction applyFilter() {\n\t\t\t\tstrURL = 'automation_tree_rules.php' +\n\t\t\t\t\t'?status='+$('#status').val() +\n\t\t\t\t\t'&filter='+$('#filter').val() +\n\t\t\t\t\t'&rows='+$('#rows').val() +\n\t\t\t\t\t'&header=false';\n\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = 'automation_tree_rules.php?clear=1&header=false';\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\t$('#rows, #status').change(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#refresh').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#form_automation').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\t\t\t});\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'WHERE' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (atr.name LIKE '%%\" . get_request_var('filter') . \"%%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('status') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('status') == '-2') {\n\t\t$sql_where .= ($sql_where != '' ? \" AND atr.enabled='on'\" : \"WHERE atr.enabled='on'\");\n\t} elseif (get_request_var('status') == '-3') {\n\t\t$sql_where .= ($sql_where != '' ? \" AND atr.enabled=''\" : \"WHERE atr.enabled=''\");\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(atr.id)\n\t\tFROM automation_tree_rules AS atr\n\t\tLEFT JOIN graph_tree AS gt\n\t\tON atr.id=gt.id\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$automation_tree_rules = db_fetch_assoc(\"SELECT atr.id, atr.name, atr.tree_id, atr.tree_item_id,\n\t\tatr.leaf_type, atr.host_grouping_type, atr.enabled,\n\t\tgt.name AS tree_name, gti.title AS subtree_name\n\t\tFROM automation_tree_rules AS atr\n\t\tLEFT JOIN graph_tree AS gt\n\t\tON atr.tree_id=gt.id\n\t\tLEFT JOIN graph_tree_items AS gti\n\t\tON atr.tree_item_id = gti.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('automation_tree_rules.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Tree Rules'), 'page', 'main');\n\n\tform_start('automation_tree_rules.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'               => array('display' => __('Rule Name'),      'align' => 'left',  'sort' => 'ASC'),\n\t\t'id'                 => array('display' => __('ID'),             'align' => 'right', 'sort' => 'ASC'),\n\t\t'tree_name'          => array('display' => __('Hook into Tree'), 'align' => 'left',  'sort' => 'ASC'),\n\t\t'subtree_name'       => array('display' => __('At Subtree'),     'align' => 'left',  'sort' => 'ASC'),\n\t\t'leaf_type'          => array('display' => __('This Type'),      'align' => 'left',  'sort' => 'ASC'),\n\t\t'host_grouping_type' => array('display' => __('Using Grouping'), 'align' => 'left',  'sort' => 'ASC'),\n\t\t'enabled'            => array('display' => __('Enabled'),        'align' => 'right', 'sort' => 'ASC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($automation_tree_rules)) {\n\t\tforeach ($automation_tree_rules as \t$automation_tree_rule) {\n\t\t\t$tree_item_type_name = ((empty($automation_tree_rule['leaf_type'])) ? '<em>' . __('None') . '</em>' : $automation_tree_item_types[$automation_tree_rule['leaf_type']]);\n\t\t\t$subtree_name = ((empty($automation_tree_rule['subtree_name'])) ? '<em>' . __('ROOT') . '</em>' : $automation_tree_rule['subtree_name']);\n\t\t\t$tree_host_grouping_type = ((empty($host_group_types[$automation_tree_rule['host_grouping_type']])) ? '' : $host_group_types[$automation_tree_rule['host_grouping_type']]);\n\t\t\tform_alternate_row('line' .  $automation_tree_rule['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($automation_tree_rule['name'], get_request_var('filter'), 'automation_tree_rules.php?action=edit&id=' . $automation_tree_rule['id'] . '&page=1'), $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($automation_tree_rule['id'], $automation_tree_rule['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($automation_tree_rule['tree_name'], $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($subtree_name, $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($tree_item_type_name, $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($tree_host_grouping_type, $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($automation_tree_rule['enabled'] ? __('Enabled'):__('Disabled'), $automation_tree_rule['id'], '', 'text-align:right');\n\t\t\tform_checkbox_cell($automation_tree_rule['name'], $automation_tree_rule['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='9'><em>\" . __('No Tree Rules Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($automation_tree_rules)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($automation_tree_rules_actions);\n\n\tform_end();\n}\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/cdef.php');\n\n$cdef_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item_remove_confirm':\n\t\tcdef_item_remove_confirm();\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tcdef_item_remove();\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tget_filter_request_var('cdef_id');\n\n\t\titem_movedown();\n\n\t\theader('Location: cdef.php?action=edit&id=' . get_request_var('cdef_id'));\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tget_filter_request_var('cdef_id');\n\n\t\titem_moveup();\n\n\t\theader('Location: cdef.php?action=edit&id=' . get_request_var('cdef_id'));\n\t\tbreak;\n\tcase 'item_remove':\n\t\tget_filter_request_var('cdef_id');\n\n\t\titem_remove();\n\n\t\theader('Location: cdef.php?action=edit&id=' . get_request_var('cdef_id'));\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\n\t\titem_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tcdef_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n    case 'ajax_dnd':\n        cdef_item_dnd();\n\n        break;\n\tdefault:\n\t\ttop_header();\n\n\t\tcdef();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    Global Form Functions\n   -------------------------- */\n\nfunction draw_cdef_preview($cdef_id) {\n\t?>\n\t<tr class='even'>\n\t\t<td style='padding:4px'>\n\t\t\t<pre>cdef=<?php print get_cdef($cdef_id, true);?></pre>\n\t\t</td>\n\t</tr>\n\t<?php\n}\n\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\n\t// make sure ids are numeric\n\tif (isset_request_var('id') && ! is_numeric(get_filter_request_var('id'))) {\n\t\tset_request_var('id', 0);\n\t}\n\n\tif (isset_request_var('cdef_id') && ! is_numeric(get_filter_request_var('cdef_id'))) {\n\t\tset_request_var('cdef_id', 0);\n\t}\n\n\tif (isset_request_var('save_component_cdef')) {\n\t\t$save['id']     = form_input_validate(get_nfilter_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['hash']   = get_hash_cdef(get_nfilter_request_var('id'));\n\t\t$save['name']   = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['system'] = 0;\n\n\t\tif (!is_error_message()) {\n\t\t\t$cdef_id = sql_save($save, 'cdef');\n\n\t\t\tif ($cdef_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: cdef.php?header=false&action=edit&id=' . (empty($cdef_id) ? get_nfilter_request_var('id') : $cdef_id));\n\t} elseif (isset_request_var('save_component_item')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('cdef_id');\n\t\tget_filter_request_var('type');\n\t\t/* ==================================================== */\n\n\t\t$sequence = get_sequence(get_nfilter_request_var('id'), 'sequence', 'cdef_items', 'cdef_id=' . get_nfilter_request_var('cdef_id'));\n\n\t\t$save['id']       = form_input_validate(get_nfilter_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['hash']     = get_hash_cdef(get_nfilter_request_var('id'), 'cdef_item');\n\t\t$save['cdef_id']  = form_input_validate(get_nfilter_request_var('cdef_id'), 'cdef_id', '^[0-9]+$', false, 3);\n\t\t$save['sequence'] = $sequence;\n\t\t$save['type']     = form_input_validate(get_nfilter_request_var('type'), 'type', '^[0-9]+$', false, 3);\n\t\t$save['value']    = form_input_validate(get_nfilter_request_var('value'), 'value', '', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$cdef_item_id = sql_save($save, 'cdef_items');\n\n\t\t\tif ($cdef_item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: cdef.php?header=false&action=item_edit&cdef_id=' . get_nfilter_request_var('cdef_id') . '&id=' . (empty($cdef_item_id) ? get_nfilter_request_var('id') : $cdef_item_id));\n\t\t} else {\n\t\t\theader('Location: cdef.php?header=false&action=edit&id=' . get_nfilter_request_var('cdef_id'));\n\t\t}\n\t}\n}\n\nfunction duplicate_cdef($_cdef_id, $cdef_title) {\n\tglobal $fields_cdef_edit;\n\n\t$cdef       = db_fetch_row_prepared('SELECT * FROM cdef WHERE id = ?', array($_cdef_id));\n\t$cdef_items = db_fetch_assoc_prepared('SELECT * FROM cdef_items WHERE cdef_id = ?', array($_cdef_id));\n\n\t/* substitute the title variable */\n\t$cdef['name'] = str_replace('<cdef_title>', $cdef['name'], $cdef_title);\n\n\t/* create new entry: host_template */\n\t$save['id']   = 0;\n\t$save['hash'] = get_hash_cdef(0);\n\n\tforeach ($fields_cdef_edit as $field => $array) {\n\t\tif (!preg_match('/^hidden/', $array['method'])) {\n\t\t\t$save[$field] = $cdef[$field];\n\t\t}\n\t}\n\n\t$cdef_id = sql_save($save, 'cdef');\n\n\t/* create new entry(s): cdef_items */\n\tif (cacti_sizeof($cdef_items) > 0) {\n\t\tforeach ($cdef_items as $cdef_item) {\n\t\t\tunset($save);\n\n\t\t\t$save['id']       = 0;\n\t\t\t$save['hash']     = get_hash_cdef(0, 'cdef_item');\n\t\t\t$save['cdef_id']  = $cdef_id;\n\t\t\t$save['sequence'] = $cdef_item['sequence'];\n\t\t\t$save['type']     = $cdef_item['type'];\n\t\t\t$save['value']    = $cdef_item['value'];\n\n\t\t\tsql_save($save, 'cdef_items');\n\t\t}\n\t}\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $cdef_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM cdef WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM cdef_items WHERE ' . array_to_sql_or($selected_items, 'cdef_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* duplicate */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tduplicate_cdef($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: cdef.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$cdef_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$cdef_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM cdef WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$cdef_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('cdef.php');\n\n\thtml_start_box($cdef_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($cdef_array) && cacti_sizeof($cdef_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following CDEF.', 'Click \\'Continue\\' to delete all following CDEFs.', cacti_sizeof($cdef_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$cdef_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete CDEF', 'Delete CDEFs', cacti_sizeof($cdef_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* duplicate */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to duplicate the following CDEF. You can optionally change the title format for the new CDEF.', 'Click \\'Continue\\' to duplicate the following CDEFs. You can optionally change the title format for the new CDEFs.', cacti_sizeof($cdef_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$cdef_list</ul></div>\n\t\t\t\t\t<p>\" . __('Title Format:') . '<br>';\n\t\t\t\t\tform_text_box('title_format', '<cdef_title> (1)', '', '255', '30', 'text'); print \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Duplicate CDEF', 'Duplicate CDEFs', cacti_sizeof($cdef_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: cdef.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($cdef_array) ? serialize($cdef_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* --------------------------\n    CDEF Item Functions\n   -------------------------- */\n\nfunction cdef_item_remove_confirm() {\n\tglobal $cdef_functions, $cdef_item_types, $custom_cdef_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tform_start('cdef.php');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$cdef       = db_fetch_row_prepared('SELECT * FROM cdef WHERE id = ?', array(get_request_var('id')));\n\t$cdef_item  = db_fetch_row_prepared('SELECT * FROM cdef_items WHERE id = ?', array(get_request_var('cdef_id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following CDEF Item.');?></p>\n\t\t\t<p><?php print __('CDEF Name: \\'%s\\'', $cdef['name']);?><br>\n\t\t\t<em><?php $cdef_item_type = $cdef_item['type']; print $cdef_item_types[$cdef_item_type];?></em>: <strong><?php print get_cdef_item_name($cdef_item['id']);?></strong></p>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\");$(\".deleteMarker\").blur();' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove CDEF Item');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').click(function(data) {\n\t\t\t$.post('cdef.php?action=item_remove', {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tcdef_id: <?php print get_request_var('cdef_id');?>,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}, function(data) {\n\t\t\t\t$('#cdialog').dialog('close');\n\t\t\t\t$('.deleteMarker').blur();\n\t\t\t\tloadPageNoHeader('cdef.php?action=edit&header=false&id=<?php print get_request_var('id');?>');\n\t\t\t});\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction cdef_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM cdef_items WHERE id = ?', array(get_request_var('cdef_id')));\n}\n\nfunction item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tmove_item_down('cdef_items', get_request_var('id'), 'cdef_id=' . get_request_var('cdef_id'));\n}\n\nfunction item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tmove_item_up('cdef_items', get_request_var('id'), 'cdef_id=' . get_request_var('cdef_id'));\n}\n\nfunction item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM cdef_items WHERE id = ?', array(get_request_var('id')));\n}\n\nfunction item_edit() {\n\tglobal $cdef_item_types, $cdef_functions, $cdef_operators, $custom_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$cdef = db_fetch_row_prepared('SELECT *\n\t\t\tFROM cdef_items\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (cacti_sizeof($cdef)) {\n\t\t\t$current_type = $cdef['type'];\n\t\t\t$values[$current_type] = $cdef['value'];\n\t\t}\n\t} else {\n\t\t$cdef = array();\n\t}\n\n\thtml_start_box(__('CDEF Preview'), '100%', '', '3', 'center', '');\n\tdraw_cdef_preview(get_request_var('cdef_id'));\n\thtml_end_box();\n\n\tform_start('cdef.php', 'form_cdef');\n\n\t$cdef_name = db_fetch_cell_prepared('SELECT name\n\t\tFROM cdef\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('cdef_id')));\n\n\thtml_start_box(__('CDEF Items [edit: %s]', html_escape($cdef_name)), '100%', '', '3', 'center', '');\n\n\tif (isset_request_var('type_select')) {\n\t\t$current_type = get_request_var('type_select');\n\t} elseif (isset($cdef['type'])) {\n\t\t$current_type = $cdef['type'];\n\t} else {\n\t\t$current_type = '1';\n\t}\n\n\t$form_cdef = array(\n\t\t'type_select' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('CDEF Item Type'),\n\t\t\t'description'   => __('Choose what type of CDEF item this is.'),\n\t\t\t'value'         => $current_type,\n\t\t\t'array'         => $cdef_item_types\n\t\t),\n\t\t'value' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('CDEF Item Value'),\n\t\t\t'description'   => __('Enter a value for this CDEF item.'),\n\t\t\t'value'         => (isset($cdef['value']) ? $cdef['value']:'')\n\t\t),\n\t\t'id' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => isset_request_var('id') ?  get_request_var('id') : '0',\n\t\t),\n\t\t'type' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => $current_type\n\t\t),\n\t\t'cdef_id' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => get_request_var('cdef_id')\n\t\t),\n\t\t'save_component_item' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => '1'\n\t\t)\n\t);\n\n\tswitch ($current_type) {\n\tcase '1':\n\t\t$form_cdef['value']['array'] = $cdef_functions;\n\n\t\tbreak;\n\tcase '2':\n\t\t$form_cdef['value']['array'] = $cdef_operators;\n\n\t\tbreak;\n\tcase '4':\n\t\t$form_cdef['value']['array'] = $custom_data_source_types;\n\n\t\tbreak;\n\tcase '5':\n\t\t$form_cdef['value']['method'] = 'drop_sql';\n\t\t$form_cdef['value']['sql']    = 'SELECT name, id FROM cdef WHERE `system`=0 ORDER BY name';\n\n\t\tbreak;\n\tcase '6':\n\t\t$form_cdef['value']['method']     = 'textbox';\n\t\t$form_cdef['value']['max_length'] = '255';\n\t\t$form_cdef['value']['size']       = '30';\n\n\t\tbreak;\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($form_cdef, $cdef)\n\t\t)\n\t);\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#type_select').unbind().change(function() {\n\t\t\tstrURL  = 'cdef.php?action=item_edit';\n\t\t\tstrURL += '&id=' + $('#id').val();\n\t\t\tstrURL += '&cdef_id=' + $('#cdef_id').val();\n\t\t\tstrURL += '&type_select=' + $('#type_select').val();\n\t\t\tstrURL += '&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n\n\tform_save_button('cdef.php?action=edit&id=' . get_request_var('cdef_id'));\n}\n\n/* ---------------------\n    CDEF Functions\n   --------------------- */\n\nfunction cdef_item_dnd() {\n\t/* ================= Input validation ================= */\n\tget_filter_request_var('id');\n\t/* ================= Input validation ================= */\n\n\t$continue = true;\n\n\tif (isset_request_var('cdef_item') && is_array(get_nfilter_request_var('cdef_item'))) {\n\t\t$cdef_ids = get_nfilter_request_var('cdef_item');\n\n\t\tif (cacti_sizeof($cdef_ids)) {\n\t\t\t$sequence = 1;\n\t\t\tforeach($cdef_ids as $cdef_id) {\n\t\t\t\t$cdef_id = str_replace('line', '', $cdef_id);\n\t\t\t\tinput_validate_input_number($cdef_id);\n\n\t\t\t\tdb_execute_prepared('UPDATE cdef_items\n\t\t\t\t\tSET sequence = ?\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($sequence, $cdef_id));\n\n\t\t\t\t$sequence++;\n\t\t\t}\n\t\t}\n\t}\n\n\theader('Location: cdef.php?action=edit&header=false&id=' . get_request_var('id'));\n}\n\nfunction cdef_edit() {\n\tglobal $cdef_item_types, $fields_cdef_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$cdef = db_fetch_row_prepared('SELECT * FROM cdef WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('CDEF [edit: %s]', html_escape($cdef['name']));\n\t} else {\n\t\t$header_label = __('CDEF [new]');\n\t}\n\n\tform_start('cdef.php', 'cdef');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_cdef_edit, (isset($cdef) ? $cdef : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('id')) {\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\tdraw_cdef_preview(get_request_var('id'));\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('CDEF Items'), '100%', '', '3', 'center', 'cdef.php?action=item_edit&cdef_id=' . $cdef['id']);\n\n\t\t$display_text = array(\n\t\t\tarray('display' => __('Item'), 'align' => 'left'),\n\t\t\tarray('display' => __('Item Value'), 'align' => 'left')\n\t\t);\n\n\t\thtml_header($display_text, 2);\n\n\t\t$cdef_items = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM cdef_items\n\t\t\tWHERE cdef_id = ?\n\t\t\tORDER BY sequence',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$i = 1;\n\t\t$total_items = cacti_sizeof($cdef_items);\n\t\tif (cacti_sizeof($cdef_items)) {\n\t\t\tforeach ($cdef_items as $cdef_item) {\n\t\t\t\tform_alternate_row('line' . $cdef_item['id'], true, true);?>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a class='linkEditMain' href='<?php print html_escape('cdef.php?action=item_edit&id=' . $cdef_item['id'] . '&cdef_id=' . $cdef['id']);?>'><?php print __('Item #%d', $i);?></a>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<em><?php $cdef_item_type = $cdef_item['type']; print $cdef_item_types[$cdef_item_type];?></em>: <?php print html_escape(get_cdef_item_name($cdef_item['id']));?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif (read_config_option('drag_and_drop') == '') {\n\t\t\t\t\t\t\tif ($i < $total_items && $total_items > 0) {\n\t\t\t\t\t\t\t\techo '<a class=\"pic fa fa-caret-down moveArrow\" href=\"' . html_escape('cdef.php?action=item_movedown&id=' . $cdef_item['id'] . '&cdef_id=' . $cdef_item['cdef_id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\techo '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ($i > 1 && $i <= $total_items) {\n\t\t\t\t\t\t\t\techo '<a class=\"pic fa fa-caret-up moveArrow\" href=\"' . html_escape('cdef.php?action=item_moveup&id=' . $cdef_item['id'] .\t'&cdef_id=' . $cdef_item['cdef_id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\techo '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<a id='<?php print $cdef['id'] . '_' . $cdef_item['id'];?>' class='delete deleteMarker fa fa-times' title='<?php print __esc('Delete');?>' href='#'></a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<?php\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('cdef.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t$('#cdef_edit3').find('.cactiTable').attr('id', 'cdef_item');\n\t\t$('.cdialog').remove();\n\t\t$('body').append(\"<div class='cdialog' id='cdialog'></div>\");\n\n\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n\t\t$('#cdef_item').tableDnD({\n\t\t\tonDrop: function(table, row) {\n\t\t\t\tloadPageNoHeader('cdef.php?action=ajax_dnd&id=<?php isset_request_var('id') ? print get_request_var('id') : print 0;?>&'+$.tableDnD.serialize());\n\t\t\t}\n\t\t});\n\t\t<?php } ?>\n\n\t\t$('.delete').click(function(event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tid = $(this).attr('id').split('_');\n\t\t\trequest = 'cdef.php?action=item_remove_confirm&id='+id[0]+'&cdef_id='+id[1];\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t\t$('#cdialog').dialog({ title: '<?php print __('Delete CDEF Item');?>', minHeight: 80, minWidth: 500 });\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction cdef() {\n\tglobal $cdef_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_cdef');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('CDEFs'), '100%', '', '3', 'center', 'cdef.php?action=edit');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_cdef' action='cdef.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' name='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('CDEFs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='has_graphs' <?php print (get_request_var('has_graphs') == 'true' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='has_graphs'><?php print __('Has Graphs');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type='text/javascript'>\n\n\t\t\tfunction applyFilter() {\n\t\t\t\tstrURL  = 'cdef.php?header=false';\n\t\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\t\tstrURL += '&has_graphs='+$('#has_graphs').is(':checked');\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = 'cdef.php?clear=1&header=false';\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\t$('#refresh').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#has_graphs').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#form_cdef').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (name LIKE '%\" . get_request_var('filter') . \"%' AND `system`=0)\";\n\t} else {\n\t\t$sql_where = 'WHERE `system`=0';\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_having = 'HAVING graphs>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(`rows`)\n\t\tFROM (\n\t\t\tSELECT cd.id AS `rows`,\n\t\t\tSUM(CASE WHEN local_graph_id>0 THEN 1 ELSE 0 END) AS graphs\n\t\t\tFROM cdef AS cd\n\t\t\tLEFT JOIN graph_templates_item AS gti\n\t\t\tON gti.cdef_id=cd.id\n\t\t\t$sql_where\n\t\t\tGROUP BY cd.id\n\t\t\t$sql_having\n\t\t) AS rs\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$cdef_list = db_fetch_assoc(\"SELECT rs.*,\n\t\tSUM(CASE WHEN local_graph_id=0 THEN 1 ELSE 0 END) AS templates,\n\t\tSUM(CASE WHEN local_graph_id>0 THEN 1 ELSE 0 END) AS graphs\n\t\tFROM (\n\t\t\tSELECT cd.*, gti.local_graph_id\n\t\t\tFROM cdef AS cd\n\t\t\tLEFT JOIN graph_templates_item AS gti\n\t\t\tON gti.cdef_id=cd.id\n\t\t\tWHERE `system`=0\n\t\t\tGROUP BY cd.id, gti.graph_template_id, gti.local_graph_id\n\t\t) AS rs\n\t\t$sql_where\n\t\tGROUP BY rs.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('cdef.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('CDEFs'), 'page', 'main');\n\n\tform_start('cdef.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'      => array('display' => __('CDEF Name'),       'align' => 'left',  'sort' => 'ASC', 'tip' => __('The name of this CDEF.')),\n\t\t'nosort'    => array('display' => __('Deletable'),       'align' => 'right', 'tip'  => __('CDEFs that are in use cannot be Deleted.  In use is defined as being referenced by a Graph or a Graph Template.')),\n\t\t'graphs'    => array('display' => __('Graphs Using'),    'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Graphs using this CDEF.')),\n\t\t'templates' => array('display' => __('Templates Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Graphs Templates using this CDEF.')));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($cdef_list)) {\n\t\tforeach ($cdef_list as $cdef) {\n\t\t\tif ($cdef['graphs'] == 0 && $cdef['templates'] == 0) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $cdef['id'], false, $disabled);\n\t\t\tform_selectable_cell(filter_value($cdef['name'], get_request_var('filter'), 'cdef.php?action=edit&id=' . $cdef['id']), $cdef['id']);\n\t\t\tform_selectable_cell($disabled ? __('No') : __('Yes'), $cdef['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell(number_format_i18n($cdef['graphs'], '-1'), $cdef['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell(number_format_i18n($cdef['templates'], '-1'), $cdef['id'], '', 'text-align:right');\n\t\t\tform_checkbox_cell($cdef['name'], $cdef['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='4'><em>\" . __('No CDEFs') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($cdef_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($cdef_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('./include/auth.php');\n\n$aggregate_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\taggregate_color_form_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\taggregate_color_form_actions();\n\n\t\tbreak;\n\tcase 'template_edit':\n\t\ttop_header();\n\t\taggregate_color_template_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\taggregate_color_template();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\n/** draw_color_template_items_list \t- draws a nicely formatted list of color items for display\n *   \t\t\t\t\t\t\t\t  on an edit form\n * @param array $item_list \t\t\t- an array representing the list of color items. this array should\n *   \t\t\t\t\t\t\t\t  come directly from the output of db_fetch_assoc()\n * @param string $filename \t\t\t- the filename to use when referencing any external url\n * @param string $url_data \t\t\t- any extra GET url information to pass on when referencing any\n *   \t\t\t\t\t\t\t\t  external url\n * @param bool $disable_controls \t- whether to hide all edit/delete functionality on this form\n */\nfunction draw_color_template_items_list($item_list, $filename, $url_data, $disable_controls) {\n\tglobal $config;\n\tglobal $struct_color_template_item;\n\n\t$display_text = array(\n\t\tarray('display' => __('Color Item'), 'align' => 'left', 'nohide' => true),\n\t\tarray('display' => __('Color'), 'align' => 'left', 'nohide' => true),\n\t\tarray('display' => __('Hex'), 'align' => 'left', 'nohide' => true),\n\t);\n\n\thtml_header($display_text, 2);\n\n\t$i = 1;\n\t$total_items = cacti_sizeof($item_list);\n\n\tif (cacti_sizeof($item_list)) {\n\t\tforeach ($item_list as $item) {\n\t\t\t/* alternating row color */\n\t\t\tform_alternate_row('line' . $item['color_template_item_id'], true, true);\n\n\t\t\tprint '<td>';\n\n\t\t\tif ($disable_controls == false) {\n\t\t\t\tprint \"<a class='linkEditMain' href='\" . html_escape($filename . '?action=item_edit&color_template_item_id=' . $item['color_template_item_id'] . \"&$url_data\") . \"'>\";\n\t\t\t}\n\n\t\t\tprint __('Item # %d', $i);\n\n\t\t\tif ($disable_controls == false) {\n\t\t\t\tprint '</a>';\n\t\t\t}\n\n\t\t\tprint \"</td>\\n\";\n\n\t\t\tprint \"<td style='\" . ((isset($item['hex'])) ? \"background-color:#\" . $item['hex'] . \";'\" : \"\") . \"></td>\\n\";\n\n\t\t\tprint \"<td>\" . $item['hex'] . \"</td>\\n\";\n\n\t\t\tif ($disable_controls == false) {\n\t\t\t\tprint \"<td class='right nowrap'>\";\n\n\t\t\t\tif (read_config_option('drag_and_drop') == '') {\n\t\t\t\t\tif ($i < $total_items && $total_items > 1) {\n\t\t\t\t\t\techo '<a class=\"pic fa fa-caret-down moveArrow\" href=\"' . html_escape('color_templates_items.php?action=item_movedown&color_template_item_id=' . $item['color_template_item_id'] . '&color_template_id=' . $item['color_template_id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\techo '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($i > 1 && $i <= $total_items) {\n\t\t\t\t\t\techo '<a class=\"pic fa fa-caret-up moveArrow\" href=\"' . html_escape('color_templates_items.php?action=item_moveup&color_template_item_id=' . $item['color_template_item_id'] . '&color_template_id=' . $item['color_template_id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\techo '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprint \"<a class='delete deleteMarker fa fa-times' id='\" .  $item['color_template_id'] . '_' . $item['color_template_item_id'] . \"' title='\" . __esc('Delete') . \"'></a>\";\n\n\t\t\t\tprint \"</td>\\n\";\n\t\t\t}\n\n\t\t\tform_end_row();\n\n\t\t\t$i++;\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='7'><em>\" . __('No Items') . \"</em></td></tr>\";\n\t}\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n/**\n * aggregate_color_form_save\tthe save function\n */\nfunction aggregate_color_form_save() {\n\tif (isset_request_var('save_component_color')) {\n\t\tif (isset_request_var('color_template_id')) {\n\t\t\t$save1['color_template_id'] = get_nfilter_request_var('color_template_id');\n\t\t} else {\n\t\t\t$save1['color_template_id'] = 0;\n\t\t}\n\n\t\t$save1['name'] = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\n\t\tcacti_log('Saved ID: ' . $save1['color_template_id'] . ' Name: ' . $save1['name'], false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\n\t\tif (!is_error_message()) {\n\t\t\t$color_template_id = sql_save($save1, 'color_templates', 'color_template_id');\n\n\t\t\tcacti_log('Saved ID: ' . $color_template_id, false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\n\t\t\tif ($color_template_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\t}\n\n\theader('Location: color_templates.php?header=false&action=template_edit&color_template_id=' . (empty($color_template_id) ? get_nfilter_request_var('color_template_id') : $color_template_id));\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n/**\n * aggregate_color_form_actions\t\tthe action function\n */\nfunction aggregate_color_form_actions() {\n\tglobal $aggregate_actions, $config;\n\tinclude_once($config['base_path'] . '/lib/api_aggregate.php');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM color_templates WHERE ' . array_to_sql_or($selected_items, 'color_template_id'));\n\t\t\t\tdb_execute('DELETE FROM color_template_items WHERE ' . array_to_sql_or($selected_items, 'color_template_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tduplicate_color_template($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: color_templates.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$color_list = ''; $i = 0;\n\n\t/* loop through each of the color templates selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\t\t\t$color_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM color_templates WHERE color_template_id = ?', array($matches[1]))) . '</li>';\n\t\t\t$color_array[] = $matches[1];\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('color_templates.php');\n\n\thtml_start_box($aggregate_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($color_array) && cacti_sizeof($color_array)) {\n\t\tif (get_request_var('drp_action') == '1') { /* delete */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following Color Template', 'Click \\'Continue\\' to delete following Color Templates', cacti_sizeof($color_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$color_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Color Template', 'Delete Color Templates', cacti_sizeof($color_array)) . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to duplicate the following Color Template. You can optionally change the title format for the new color template.', 'Click \\'Continue\\' to duplicate following Color Templates. You can optionally change the title format for the new color templates.', cacti_sizeof($color_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$color_list</ul></div>\n\t\t\t\t\t<p>\" . __('Title Format:') . \"<br>\"; form_text_box('title_format', '<template_title> (1)', '', '255', '30', 'text'); print \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Duplicate Color Template', 'Duplicate Color Templates', cacti_sizeof($color_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: color_templates.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($color_array) ? serialize($color_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/**\n * aggregate_color_item\t\tshow all color template items\n */\nfunction aggregate_color_item() {\n\tglobal $config;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('color_template_id');\n\t/* ==================================================== */\n\n\tif (isempty_request_var('color_template_id')) {\n\t\t$template_item_list = array();\n\n\t\t$header_label = __('Color Template Items [new]');\n\t} else {\n\t\t$template_item_list = db_fetch_assoc_prepared('SELECT\n\t\t\tcti.color_template_id, cti.color_template_item_id, cti.sequence, colors.hex\n\t\t\tFROM color_template_items AS cti\n\t\t\tLEFT JOIN colors\n\t\t\tON cti.color_id=colors.id\n\t\t\tWHERE cti.color_template_id = ?\n\t\t\tORDER BY cti.sequence ASC',\n\t\t\tarray(get_request_var('color_template_id')));\n\n\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM color_templates\n\t\t\tWHERE color_template_id = ?',\n\t\t\tarray(get_request_var('color_template_id')));\n\n\t\t$header_label = __('Color Template Items [edit: %s]', html_escape($name));\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', 'color_templates_items.php?action=item_edit&color_template_id=' . html_escape_request_var('color_template_id'));\n\n\tdraw_color_template_items_list($template_item_list, 'color_templates_items.php', 'color_template_id=' . html_escape_request_var('color_template_id'), false);\n\n\thtml_end_box();\n\n    ?>\n    <script type='text/javascript'>\n\n    $(function() {\n        $('#color_templates_template_edit2_child').attr('id', 'color_item');\n        $('.cdialog').remove();\n        $('body').append(\"<div class='cdialog' id='cdialog'></div>\");\n\n\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n        $('#color_item').tableDnD({\n            onDrop: function(table, row) {\n                loadPageNoHeader('color_templates_items.php?action=ajax_dnd&id=<?php isset_request_var('color_template_id') ? print get_request_var('color_template_id') : print 0;?>&'+$.tableDnD.serialize());\n            }\n        });\n\t\t<?php } ?>\n\n        $('.delete').click(function (event) {\n            event.preventDefault();\n\n            id = $(this).attr('id').split('_');\n            request = 'color_templates_items.php?action=item_remove_confirm&id='+id[0]+'&color_id='+id[1];\n            $.get(request)\n\t\t.done(function(data) {\n\t                $('#cdialog').html(data);\n        \t        applySkin();\n\t\t\t$('#cdialog').dialog({ title: '<?php print __('Delete Color Item');?>', minHeight: 80, minWidth: 500 });\n \t\t})\n\t\t.fail(function(data) {\n\t\t\tgetPresentHTTPError(data);\n\t\t});\n        }).css('cursor', 'pointer');\n    });\n\n    </script>\n    <?php\n\n}\n\n/* ----------------------------\n    template - Color Templates\n   ---------------------------- */\n/**\n * aggregate_color_template_edit\tedit the color template\n */\nfunction aggregate_color_template_edit() {\n\tglobal $config, $image_types, $fields_color_template_template_edit, $struct_aggregate;\n\n\tinclude_once($config['base_path'] . '/lib/api_aggregate.php');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('color_template_id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('color_template_id')) {\n\t\t$template = db_fetch_row_prepared('SELECT * FROM color_templates WHERE color_template_id = ?', array(get_request_var('color_template_id')));\n\t\t$header_label = __('Color Template [edit: %s]', html_escape($template['name']));\n\t} else {\n\t\t$header_label = __('Color Template [new]');\n\t}\n\n\tform_start('color_templates.php', 'color_template_edit');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_color_template_template_edit, (isset($template) ? $template : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('color_template_id', (isset($template['color_template_id']) ? $template['color_template_id'] : '0'), '');\n\tform_hidden_box('save_component_color', '1', '');\n\n\t/* color item list goes here */\n\tif (!isempty_request_var('color_template_id')) {\n\t\taggregate_color_item();\n\t}\n\n\tform_save_button('color_templates.php', 'return', 'color_template_id');\n}\n\n\n/**\n * aggregate_color_template\t\tmaintain color templates\n */\nfunction aggregate_color_template() {\n\tglobal $aggregate_actions, $item_rows, $config;\n\tinclude_once($config['base_path'] . '/lib/api_aggregate.php');\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ct');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\tform_start('color_templates.php', 'form_template');\n\n\thtml_start_box(__('Color Templates'), '100%', '', '3', 'center', 'color_templates.php?action=template_edit');\n\n\t$filter_html = '<tr class=\"even\">\n\t\t<td>\n\t\t\t<table class=\"filterTable\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t' . __('Search') . '\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type=\"text\" class=\"ui-state-default ui-corner-all\" id=\"filter\" size=\"25\" value=\"' . html_escape_request_var('filter') . '\">\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t' . __('Color Templates') . '\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id=\"rows\" onChange=\"applyFilter()\">\n\t\t\t\t\t\t\t<option value=\"-1\" ';\n\tif (get_request_var('rows') == '-1') {\n\t\t$filter_html .= 'selected';\n\t}\n\n\t$filter_html .= '>' . __('Default') . '</option>';\n\n\tif (cacti_sizeof($item_rows)) {\n\t\tforeach ($item_rows as $key => $value) {\n\t\t\t$filter_html .= \"<option value='\" . $key . \"'\";\n\t\t\tif (get_request_var('rows') == $key) {\n\t\t\t\t$filter_html .= ' selected';\n\t\t\t}\n\t\t\t$filter_html .= '>' . $value . \"</option>\\n\";\n\t\t}\n\t}\n\n\t$filter_html .= '\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"has_graphs\" ' . (get_request_var('has_graphs') == 'true' ? 'checked':'') . ' onChange=\"applyFilter()\">\n\t\t\t\t\t\t\t<label for=\"has_graphs\">' . __('Has Graphs') . '</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type=\"button\" class=\"ui-button ui-corner-all ui-widget\" id=\"refresh\" value=\"' . __esc('Go') . '\">\n\t\t\t\t\t\t\t<input type=\"button\" class=\"ui-button ui-corner-all ui-widget\" id=\"clear\" value=\"' . __esc('Clear') . '\">\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>';\n\n\tprint $filter_html;\n\n\thtml_end_box();\n\n\tform_end();\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where = '';\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (ct.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : 'WHERE ') . ' (templates>0 OR graphs>0)';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(ct.color_template_id)\n\t\tFROM color_templates AS ct\n\t\tLEFT JOIN (\n\t\t\tSELECT color_template, COUNT(*) AS templates\n\t\t\tFROM aggregate_graph_templates_item\n\t\t\tGROUP BY color_template\n\t\t) AS templates\n\t\tON ct.color_template_id=templates.color_template\n\t\tLEFT JOIN (\n\t\t\tSELECT color_template, COUNT(*) AS graphs\n\t\t\tFROM aggregate_graphs_graph_item\n\t\t\tGROUP BY color_template\n\t\t) AS graphs\n\t\tON ct.color_template_id=graphs.color_template\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$template_list = db_fetch_assoc(\"SELECT\n\t\tct.color_template_id, ct.name, templates.templates, graphs.graphs\n\t\tFROM color_templates AS ct\n\t\tLEFT JOIN (\n\t\t\tSELECT color_template, COUNT(*) AS templates\n\t\t\tFROM aggregate_graph_templates_item\n\t\t\tGROUP BY color_template\n\t\t) AS templates\n\t\tON ct.color_template_id=templates.color_template\n\t\tLEFT JOIN (\n\t\t\tSELECT color_template, COUNT(*) AS graphs\n\t\t\tFROM aggregate_graphs_graph_item\n\t\t\tGROUP BY color_template\n\t\t) AS graphs\n\t\tON ct.color_template_id=graphs.color_template\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('color_templates.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Color Templates'), 'page', 'main');\n\n\tform_start('color_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'      => array(__('Template Title'), 'ASC'),\n\t\t'nosort'    => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('Color Templates that are in use cannot be Deleted. In use is defined as being referenced by an Aggregate Template.')),\n\t\t'graphs'    => array('display' => __('Graphs'), 'align' => 'right', 'sort' => 'DESC'),\n\t\t'templates' => array('display' => __('Templates'), 'align' => 'right', 'sort' => 'DESC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['templates'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $template['color_template_id'], true);\n\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'color_templates.php?action=template_edit&color_template_id=' . $template['color_template_id'] . '&page=1'), $template['color_template_id']);\n\t\t\tform_selectable_cell($disabled ? __('No') : __('Yes'), $template['color_template_id'], '', 'text-align:right');\n            form_selectable_cell(number_format_i18n($template['graphs']), $template['color_template_id'], '', 'text-align:right;');\n            form_selectable_cell(number_format_i18n($template['templates']), $template['color_template_id'], '', 'text-align:right;');\n\t\t\tform_checkbox_cell($template['name'], $template['color_template_id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='\" . (cacti_sizeof($display_text)+1) . \"'><em>\" . __('No Color Templates Found') .\"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($aggregate_actions);\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'color_templates.php';\n\t\tstrURL += '?rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&has_graphs=' + $('#has_graphs').is(':checked');\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'color_templates.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#filter').change(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#form_template').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n}\n\n", "<?php\n/*\n ex: set tabstop=4 shiftwidth=4 autoindent:\n +-------------------------------------------------------------------------+\n | Copyright (C) 2010-2017 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDTool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('include/auth.php');\n\n$actions = array(\n\t1 => __('Rerun Check'),\n\t2 => __('Delete')\n);\n\n\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tdebug_add();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'view':\n\t\ttop_header();\n\t\tdebug_view();\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\tdebug_wizard();\n\t\tbottom_footer();\n\t\tbreak;\n}\n\nfunction form_actions() {\n\tglobal $actions, $assoc_actions;\n\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ================= input validation ================= */\n\n\n\n\t$selected_items = array();\n\tif (isset_request_var('save_list')) {\n\t\t/* loop through each of the lists selected on the previous page and get more info about them */\n\t\twhile (list($var,$val) = each($_POST)) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$selected_items[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t/* if we are to save this form, instead of display it */\n\t\tif (isset_request_var('save_list')) {\n\t\t\tif (get_request_var('drp_action') == '2') { /* delete */\n\t\t\t\tdebug_delete($selected_items);\n\t\t\t}elseif (get_request_var('drp_action') == '1') { /* Rerun */\n\t\t\t\tdebug_rerun($selected_items);\n\t\t\t}\n\t\t\theader('Location: data_debug.php?header=false');\n\t\t\texit;\n\t\t}\n\t}\n}\n\n\nfunction form_save() {\n\n\tif (isset_request_var('save_component')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('local_data_id');\n\n\t\t/* ==================================================== */\n\t\t$save = array();\n\t\t$save['id']        \t\t= get_nfilter_request_var('id');\n\t\t$save['datasource']      = get_nfilter_request_var('local_data_id');\n\n\t\t$info = array(\n\t\t\t'rrd_folder_writable' => '',\n\t\t\t'rrd_exists' => '',\n\t\t\t'rrd_writable' => '',\n\t\t\t'active' => '',\n\t\t\t'owner' => '',\n\t\t\t'runas_poller' => '',\n\t\t\t'runas_website' => get_running_user(),\n\t\t\t'last_result' => '',\n\t\t\t'valid_data' => '',\n\t\t\t'rra_timestamp' => '',\n\t\t\t'rra_timestamp2' => '',\n\t\t\t'rrd_match' => '');\n\t\t$save['info'] = serialize($info);\n\t\t$save['started'] = time();\n\t\t$save['user'] = intval($_SESSION['sess_user_id']);\n\n\t\tif (!is_error_message()) {\n\t\t\t$id = sql_save($save, 'data_debug');\n\t\t\tif ($id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_debug.php?header=false');\n\t\texit;\n\t}\n}\n\n\nfunction debug_rerun ($selected_items) {\n\n\t$info = array(\n\t\t'rrd_folder_writable' => '',\n\t\t'rrd_exists' => '',\n\t\t'rrd_writable' => '',\n\t\t'active' => '',\n\t\t'owner' => '',\n\t\t'runas_poller' => '',\n\t\t'runas_website' => get_running_user(),\n\t\t'last_result' => '',\n\t\t'valid_data' => '',\n\t\t'rra_timestamp' => '',\n\t\t'rra_timestamp2' => '',\n\t\t'rrd_match' => '');\n\t$info = serialize($info);\n\n\tif (!empty($selected_items)) {\n\t\tforeach($selected_items as $id) {\n\t\t\t$stime = time();\n\t\t\tdb_execute_prepared('UPDATE data_debug SET started = ?, done = 0, info = ?, issue = \"\" WHERE id = ? LIMIT 1', array($stime, $info, $id));\n\t\t}\n\t}\n\n\theader('Location: data_debug.php?header=false');\n\texit;\n}\n\nfunction debug_delete ($selected_items) {\n\tif (!empty($selected_items)) {\n\t\tforeach($selected_items as $id) {\n\t\t\t$stime = time();\n\t\t\tdb_execute_prepared('DELETE FROM data_debug WHERE id = ? LIMIT 1', array($id));\n\t\t}\n\t}\n\n\theader('Location: data_debug.php?header=false');\n\texit;\n}\n\nfunction debug_add() {\n\tglobal $config;\n\n\t$id = 0;\n\t$header_label = __('New Check');\n\n\tform_start('data_debug.php', 'debug');\n\n\thtml_start_box(htmlspecialchars($header_label), '100%', '', '3', 'center', '');\n\n\t$form_array = array(\n\t\t'general_header' => array(\n\t\t\t'friendly_name' => __('Debugging Data Source'),\n\t\t\t'method' => 'spacer',\n\t\t),\n\t\t'local_data_id' => array(\n\t\t\t'friendly_name' => __('Data Source'),\n\t\t\t'method' => 'drop_sql',\n\t\t\t'description' => __('Provide the Maintenance Schedule a meaningful name'),\n\t\t\t'sql' => 'SELECT DISTINCT local_data_id as id, name_cache as name FROM data_template_data WHERE local_data_id > 0 ORDER BY name_cache',\n\t\t\t'value' => ''\n\t\t),\n\t\t'save_component' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => '1'\n\t\t),\n\t\t'save' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => 'edit'\n\t\t),\n\t\t'id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => $id\n\t\t)\n\t);\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array(\n\t\t\t\t'no_form_tag' => true\n\t\t\t\t),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\thtml_end_box();\n\n\tform_save_button('data_debug.php', 'return');\n\n\n}\n\nfunction debug_wizard() {\n\tglobal $actions, $refresh;\n\t$refresh = 60;\n\n\t$checks = db_fetch_assoc('SELECT * FROM data_debug ORDER BY id');\n\n\tform_start('data_debug.php', 'chk');\n\n\thtml_start_box(__('Data Source Debugger'), '100%', '', '2', 'center', 'data_debug.php?action=edit');\n\n\thtml_header_checkbox(array(__('ID'), __('User'), __('Started'), __('Data Source'), __('Status'), __('Writable'), __('Exists'), __('Active'), __('RRD Match'), __('Valid Data'), __('RRD Updated'), __('Issue')));\n\n\tif (cacti_sizeof($checks)) {\n\t\tforeach ($checks as $check) {\n\t\t\t$info = unserialize($check['info']);\n\t\t\t$issues = explode(\"\\n\", $check['issue']);\n\t\t\t$issue_line = '';\n\t\t\tif (cacti_sizeof($issues)) {\n\t\t\t\t$issue_line = $issues[0];\n\t\t\t}\n\t\t\t$issue_title = implode($issues, '<br/>');\n\n\t\t\t$user = db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array($check['user']), 'username');\n\t\t\tform_alternate_row('line' . $check['id']);\n\t\t\t$name = get_data_source_title($check['datasource']);\n\t\t\t$title = $name;\n\t\t\tif (strlen($name) > 50) {\n\t\t\t\t$name = substr($name, 0, 50);\n\t\t\t}\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" title=\"' . $title .'\" href=\"' . htmlspecialchars('data_debug.php?action=view&id=' . $check['id']) . '\">' . $name . '</a>', $check['id']);\n\t\t\tform_selectable_cell($user, $check['id']);\n\t\t\tform_selectable_cell(date('F j, Y, G:i', $check['started']), $check['id']);\n\t\t\tform_selectable_cell($check['datasource'], $check['id']);\n\t\t\tform_selectable_cell(debug_icon(($check['done'] ? (strlen($issue_line) ? 'off' : 'on' ) : '')), $check['id'], '', 'text-align: center;');\n\t\t\tform_selectable_cell(debug_icon($info['rrd_writable']), $check['id'], '', 'text-align: center;');\n\t\t\tform_selectable_cell(debug_icon($info['rrd_exists']), $check['id'], '', 'text-align: center;');\n\t\t\tform_selectable_cell(debug_icon($info['active']), $check['id'], '', 'text-align: center;');\n\t\t\tform_selectable_cell(debug_icon($info['rrd_match']), $check['id'], '', 'text-align: center;');\n\t\t\tform_selectable_cell(debug_icon($info['valid_data']), $check['id'], '', 'text-align: center;');\n\t\t\tform_selectable_cell(debug_icon(($info['rra_timestamp2'] != '' ? 1 : '')), $check['id'], '', 'text-align: center;');\n\t\t\tform_selectable_cell('<a class=\\'linkEditMain\\' href=\\'#\\' title=\"' . html_escape($issue_title) . '\">' . html_escape(strlen(trim($issue_line)) ? $issue_line : '<none>') . '</a>', $check['id']);\n\t\t\tform_checkbox_cell($check['id'], $check['id']);\n\t\t\tform_end_row();\n\t\t}\n\t}else{\n\t\tprint \"<tr><td colspan='5'><em>\" . __('No Checks') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tform_hidden_box('save_list', '1', '');\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\nfunction debug_view() {\n\tglobal $config, $refresh;\n\t$refresh = 60;\n\n\tget_filter_request_var('id');\n\t$id = get_nfilter_request_var('id');\n\n\t$check = db_fetch_row_prepared('SELECT * FROM data_debug WHERE id = ?', array($id));\n\tif (isset($check) && is_array($check)) {\n\t\t$check['info'] = unserialize($check['info']);\n\t}\n\t$dtd = db_fetch_row_prepared('SELECT * from data_template_data WHERE local_data_id = ?', array($check['datasource']));\n\t$real_pth = str_replace('<path_rra>', $config['rra_path'], $dtd['data_source_path']);\n\n\t$poller_data = array();\n\tif (!empty($check['info']['last_result'])) {\n\t\tforeach ($check['info']['last_result'] as $a => $l) {\n\t\t\t$poller_data[] = \"$a: $l\";\n\t\t}\n\t}\n\t$poller_data = implode('<br>', $poller_data);\n\n\t$rra_updated = '';\n\tif (isset($check['info']['rra_timestamp2'])) {\n\t\t$rra_updated = $check['info']['rra_timestamp2'] != '' ? 1 : '';\n\t}\n\n\t$issue = '';\n\tif (isset($check['issue'])) {\n\t\t$issue = $check['issue'];\n\t}\n\n\t$fields = array(\n\t\tarray('name' => 'owner', 'title' => __('RRD Owner'), 'icon' => '-'),\n\t\tarray('name' => 'runas_website', 'title' => __('Website runs as')),\n\t\tarray('name' => 'runas_poller', 'title' => __('Poller runs as')),\n\t\tarray('name' => 'rrd_folder_writable', 'title' => __('Is RRA Folder writeable by poller?'), 'value' => dirname($real_pth)),\n\t\tarray('name' => 'rrd_writable', 'title' => __('Is RRD writeable by poller?'), 'value' => $real_pth),\n\t\tarray('name' => 'rrd_exists', 'title' => __('Does the RRD Exist?')),\n\t\tarray('name' => 'active', 'title' => __('Is the Data Source set as Active?')),\n\t\tarray('name' => 'last_result', 'title' => __('Did the poller receive valid data?'), 'value' => $poller_data),\n\t\tarray('name' => 'rra_updated', 'title' => __('Was the RRD File updated?'), 'value' => '', 'icon' => $rra_updated),\n\t\tarray('name' => 'rra_timestamp', 'title' => __('First Check TimeStamp'), 'icon' => '-'),\n\t\tarray('name' => 'rra_timestamp2', 'title' => __('Second Check TimeStamp'), 'icon' => '-'),\n\t\tarray('name' => 'convert_name', 'title' => __('Were we able to convert the title?'), 'value' => get_data_source_title($check['datasource'])),\n\t\tarray('name' => 'rrd_match', 'title' => __('Does the RRA Profile match the RRD File structure?'), 'value' => ''),\n\t\tarray('name' => 'issue', 'title' => __('Issue'), 'value' => $issue, 'icon' => '-'),\n\t);\n\n\thtml_start_box(__('Data Source Debugger'), '', '', '2', 'center', '');\n\thtml_header(array(__('Check'), __('Value'), __('Results')));\n\n\t$i = 1;\n\tforeach ($fields as $field) {\n\t\t$field_name = $field['name'];\n\n\t\tform_alternate_row('line' . $i);\n\t\tform_selectable_cell($field['title'], $i);\n\n\t\t$value = '<not set>';\n\t\t$icon  = '';\n\n\t\tif (array_key_exists($field_name, $check['info'])) {\n\t\t\t$value = $check['info'][$field_name];\n\t\t\t$icon  = debug_icon($check['info'][$field_name]);\n\t\t}\n\n\t\tif (array_key_exists('value', $field)) {\n\t\t\t$value = $field['value'];\n\t\t}\n\n\t\tif (array_key_exists('icon', $field)) {\n\t\t\t$icon = $field['icon'];\n\t\t}\n\n\t\t$value_title = $value;\n\t\tif (strlen($value) > 100) {\n\t\t\t$value = substr($value, 0, 100);\n\t\t}\n\n\t\tform_selectable_cell($value, $i, '', '', $value_title);\n\t\tform_selectable_cell($icon, $i);\n\n\t\tform_end_row();\n\t\t$i++;\n\t}\n\n\n\thtml_end_box(false);\n\n/*\n\tprint \"<pre>\";\n\tif (isset($check) && is_array($check)) {\n\t\tprint_r($check);\n\t}\n\tprint \"</pre>\";\n*/\n\n}\n\nfunction debug_icon($result) {\n\tif ($result === '' || $result === false) {\n\t\t\treturn '<i class=\"fa fa-spinner fa-pulse fa-fw\"></i>';\n\t}\n\tif ($result === '-') {\n\t\t\treturn '<i class=\"fa fa-info-circle\"></i>';\n\t}\n\tif ($result === 1 || $result === 'on') {\n\t\t\treturn '<i class=\"fa fa-check\" style=\"color:green\"></i>';\n\t}\n\tif ($result === 0 || $result === 'off') {\n\t\t\treturn '<i class=\"fa fa-times\" style=\"color:red\"></i>';\n\t}\n\treturn '<i class=\"fa fa-warn-triagle\" style=\"color:orange\"></i>';\n}\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n$di_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'field_remove_confirm':\n\t\tfield_remove_confirm();\n\n\t\tbreak;\n\tcase 'field_remove':\n\t\tfield_remove();\n\n\t\theader('Location: data_input.php?header=false&action=edit&id=' . get_filter_request_var('data_input_id'));\n\t\tbreak;\n\tcase 'field_edit':\n\t\ttop_header();\n\n\t\tfield_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tdata_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tdata();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction duplicate_data_input($_data_input_id, $input_title) {\n\t$orig_input = db_fetch_row_prepared('SELECT *\n\t\tFROM data_input\n\t\tWHERE id = ?',\n\t\tarray($_data_input_id));\n\n\tif (cacti_sizeof($orig_input)) {\n\t\tunset($save);\n\t\t$save['id']           = 0;\n\t\t$save['hash']         = get_hash_data_input(0);\n\t\t$save['name']         = str_replace('<input_title>', $orig_input['name'], $input_title);\n\t\t$save['input_string'] = $orig_input['input_string'];\n\t\t$save['type_id']      = $orig_input['type_id'];\n\n\t\t$data_input_id = sql_save($save, 'data_input');\n\n\t\tif (!empty($data_input_id)) {\n\t\t\t$data_input_fields = db_fetch_assoc_prepared('SELECT *\n\t\t\t\tFROM data_input_fields\n\t\t\t\tWHERE data_input_id = ?',\n\t\t\t\tarray($_data_input_id));\n\n\t\t\tif (cacti_sizeof($data_input_fields)) {\n\t\t\t\tforeach($data_input_fields as $dif) {\n\t\t\t\t\tunset($save);\n\t\t\t\t\t$save['id']            = 0;\n\t\t\t\t\t$save['hash']          = get_hash_data_input(0, 'data_input_field');\n\t\t\t\t\t$save['data_input_id'] = $data_input_id;\n\t\t\t\t\t$save['name']          = $dif['name'];\n\t\t\t\t\t$save['data_name']     = $dif['data_name'];\n\t\t\t\t\t$save['input_output']  = $dif['input_output'];\n\t\t\t\t\t$save['update_rra']    = $dif['update_rra'];\n\t\t\t\t\t$save['sequence']      = $dif['sequence'];\n\t\t\t\t\t$save['type_code']     = $dif['type_code'];\n\t\t\t\t\t$save['regexp_match']  = $dif['regexp_match'];\n\t\t\t\t\t$save['allow_nulls']   = $dif['allow_nulls'];\n\n\t\t\t\t\t$data_input_field_id = sql_save($save, 'data_input_fields');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction form_save() {\n\tglobal $registered_cacti_names;\n\n\tif (isset_request_var('save_component_data_input')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save['id']           = get_nfilter_request_var('id');\n\t\t$save['hash']         = get_hash_data_input(get_nfilter_request_var('id'));\n\t\t$save['name']         = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['input_string'] = form_input_validate(get_nfilter_request_var('input_string'), 'input_string', '', true, 3);\n\t\t$save['type_id']      = form_input_validate(get_nfilter_request_var('type_id'), 'type_id', '^[0-9]+$', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$data_input_id = sql_save($save, 'data_input');\n\n\t\t\tif ($data_input_id) {\n\t\t\t\tdata_input_save_message($data_input_id);\n\n\t\t\t\t/* get a list of each field so we can note their sequence of occurrence in the database */\n\t\t\t\tif (!isempty_request_var('id')) {\n\t\t\t\t\tdb_execute_prepared('UPDATE data_input_fields SET sequence = 0 WHERE data_input_id = ?', array(get_nfilter_request_var('id')));\n\n\t\t\t\t\tgenerate_data_input_field_sequences(get_nfilter_request_var('input_string'), get_nfilter_request_var('id'));\n\n\t\t\t\t\tupdate_replication_crc(0, 'poller_replicate_data_input_fields_crc');\n\t\t\t\t}\n\n\t\t\t\tpush_out_data_input_method($data_input_id);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_input.php?header=false&action=edit&id=' . (empty($data_input_id) ? get_nfilter_request_var('id') : $data_input_id));\n\t} elseif (isset_request_var('save_component_field')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('data_input_id');\n\t\tget_filter_request_var('sequence');\n\t\tget_filter_request_var('input_output', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^(in|out)$/')));\n\t\t/* ==================================================== */\n\n\t\t$save['id']            = get_request_var('id');\n\t\t$save['hash']          = get_hash_data_input(get_nfilter_request_var('id'), 'data_input_field');\n\t\t$save['data_input_id'] = get_request_var('data_input_id');\n\t\t$save['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['data_name']     = form_input_validate(get_nfilter_request_var('data_name'), 'data_name', '', false, 3);\n\t\t$save['input_output']  = get_nfilter_request_var('input_output');\n\t\t$save['update_rra']    = form_input_validate((isset_request_var('update_rra') ? get_nfilter_request_var('update_rra') : ''), 'update_rra', '', true, 3);\n\t\t$save['sequence']      = get_request_var('sequence');\n\t\t$save['type_code']     = form_input_validate((isset_request_var('type_code') ? get_nfilter_request_var('type_code') : ''), 'type_code', '', true, 3);\n\t\t$save['regexp_match']  = form_input_validate((isset_request_var('regexp_match') ? get_nfilter_request_var('regexp_match') : ''), 'regexp_match', '', true, 3);\n\t\t$save['allow_nulls']   = form_input_validate((isset_request_var('allow_nulls') ? get_nfilter_request_var('allow_nulls') : ''), 'allow_nulls', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$data_input_field_id = sql_save($save, 'data_input_fields');\n\n\t\t\tif ($data_input_field_id) {\n\t\t\t\tdata_input_save_message(get_request_var('data_input_id'), 'field');\n\n\t\t\t\tif ((!empty($data_input_field_id)) && (get_request_var('input_output') == 'in')) {\n\t\t\t\t\tgenerate_data_input_field_sequences(db_fetch_cell_prepared('SELECT input_string FROM data_input WHERE id = ?', array(get_request_var('data_input_id'))), get_request_var('data_input_id'));\n\t\t\t\t}\n\n\t\t\t\tupdate_replication_crc(0, 'poller_replicate_data_input_fields_crc');\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: data_input.php?header=false&action=field_edit&data_input_id=' . get_request_var('data_input_id') . '&id=' . (empty($data_input_field_id) ? get_request_var('id') : $data_input_field_id) . (!isempty_request_var('input_output') ? '&type=' . get_request_var('input_output') : ''));\n\t\t} else {\n\t\t\theader('Location: data_input.php?header=false&action=edit&id=' . get_request_var('data_input_id'));\n\t\t}\n\t}\n}\n\nfunction data_input_save_message($data_input_id, $type = 'input') {\n\t$counts = db_fetch_row_prepared(\"SELECT\n\t\tSUM(CASE WHEN dtd.local_data_id=0 THEN 1 ELSE 0 END) AS templates,\n\t\tSUM(CASE WHEN dtd.local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\tFROM data_input AS di\n\t\tLEFT JOIN data_template_data AS dtd\n\t\tON di.id=dtd.data_input_id\n\t\tWHERE di.id = ?\",\n\t\tarray($data_input_id));\n\n\tif ($counts['templates'] == 0 && $counts['data_sources'] == 0) {\n\t\traise_message(1);\n\t} elseif ($counts['templates'] > 0 && $counts['data_sources'] == 0) {\n\t\tif ($type == 'input') {\n\t\t\traise_message('input_save_wo_ds');\n\t\t} else {\n\t\t\traise_message('input_field_save_wo_ds');\n\t\t}\n\t} else {\n\t\tif ($type == 'input') {\n\t\t\traise_message('input_save_w_ds');\n\t\t} else {\n\t\t\traise_message('input_field_save_w_ds');\n\t\t}\n\t}\n}\n\nfunction form_actions() {\n\tglobal $di_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdata_remove($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tduplicate_data_input($selected_items[$i], get_nfilter_request_var('input_title'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_input.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$di_list = ''; $i = 0;\n\n\t/* loop through each of the data inputs and process them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$di_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM data_input WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$di_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('data_input.php');\n\n\thtml_start_box($di_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($di_array) && cacti_sizeof($di_array)) {\n\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t$graphs = array();\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following Data Input Method', 'Click \\'Continue\\' to delete the following Data Input Method', cacti_sizeof($di_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$di_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to duplicate the following Data Input Method(s). You can optionally change the title format for the new Data Input Method(s).') . \"</p>\n                    <div class='itemlist'><ul>$di_list</ul></div>\n                    <p><strong>\" . __('Input Name:'). \"</strong><br>\"; form_text_box('input_title', '<input_title> (1)', '', '255', '30', 'text'); print \"</p>\n                </td>\n\t\t\t</tr>\\n\";\n\t\t}\n\n\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Data Input Method', 'Delete Data Input Methods', cacti_sizeof($di_array)) . \"'>\";\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: data_input.php?header=none');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($di_array) ? serialize($di_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* --------------------------\n    CDEF Item Functions\n   -------------------------- */\n\nfunction field_remove_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_input_id');\n\t/* ==================================================== */\n\n\tform_start('data_intput.php?action=edit&id' . get_request_var('data_input_id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$field = db_fetch_row_prepared('SELECT *\n\t\tFROM data_input_fields\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Data Input Field.');?></p>\n\t\t\t<p><?php print __('Field Name: %s', $field['data_name']);?><br>\n\t\t\t<p><?php print __('Friendly Name: %s', $field['name']);?><br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove Data Input Field');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').unbind('click').click(function(data) {\n\t\t\t$.post('data_input.php?action=field_remove', {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tdata_input_id: <?php print get_request_var('data_input_id');?>,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}, function(data) {\n\t\t\t\tloadPageNoHeader('data_input.php?action=edit&header=false&id=<?php print get_request_var('data_input_id');?>');\n\t\t\t});\n\t\t});\n\n\t\t$('#cancel').unbind().click(function() {\n\t\t\t$('#cdialog').dialog('close');\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction field_remove() {\n\tglobal $registered_cacti_names;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_input_id');\n\t/* ==================================================== */\n\n\t/* get information about the field we're going to delete so we can re-order the seqs */\n\t$field = db_fetch_row_prepared('SELECT input_output,data_input_id FROM data_input_fields WHERE id = ?', array(get_request_var('id')));\n\n\tdb_execute_prepared('DELETE FROM data_input_fields WHERE id = ?', array(get_request_var('id')));\n\tdb_execute_prepared('DELETE FROM data_input_data WHERE data_input_field_id = ?', array(get_request_var('id')));\n\n\t/* when a field is deleted; we need to re-order the field sequences */\n\tif (($field['input_output'] == 'in') && (preg_match_all('/<([_a-zA-Z0-9]+)>/', db_fetch_cell_prepared('SELECT input_string FROM data_input WHERE id = ?', array($field['data_input_id'])), $matches))) {\n\t\t$j = 0;\n\t\tfor ($i=0; ($i < cacti_count($matches[1])); $i++) {\n\t\t\tif (in_array($matches[1][$i], $registered_cacti_names) == false) {\n\t\t\t\t$j++;\n\t\t\t\tdb_execute_prepared(\"UPDATE data_input_fields SET sequence = ? WHERE data_input_id = ? AND input_output = 'in' AND data_name = ?\", array($j, $field['data_input_id'], $matches[1][$i]));\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate_replication_crc(0, 'poller_replicate_data_input_fields_crc');\n}\n\nfunction field_edit() {\n\tglobal $registered_cacti_names, $fields_data_input_field_edit_1, $fields_data_input_field_edit_2, $fields_data_input_field_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_input_id');\n\tget_filter_request_var('type', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^(in|out)$/')));\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$field = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_input_fields\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\tif (!isempty_request_var('type')) {\n\t\t$current_field_type = get_request_var('type');\n\t} else {\n\t\t$current_field_type = $field['input_output'];\n\t}\n\n\t$data_input = db_fetch_row_prepared('SELECT type_id, name\n\t\tFROM data_input\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('data_input_id')));\n\n\t/* obtain a list of available fields for this given field type (input/output) */\n\tif (($current_field_type == 'in') && (preg_match_all('/<([_a-zA-Z0-9]+)>/', db_fetch_cell_prepared('SELECT input_string FROM data_input WHERE id = ?', array(!isempty_request_var('data_input_id') ? get_request_var('data_input_id') : $field['data_input_id'])), $matches))) {\n\t\tfor ($i=0; ($i < cacti_count($matches[1])); $i++) {\n\t\t\tif (in_array($matches[1][$i], $registered_cacti_names) == false) {\n\t\t\t\t$current_field_name = $matches[1][$i];\n\t\t\t\t$array_field_names[$current_field_name] = $current_field_name;\n\t\t\t\tif (!isset($field)) {\n\t\t\t\t\t$field_id = db_fetch_cell_prepared('SELECT id FROM data_input_fields\n\t\t\t\t\t\tWHERE data_name = ?\n\t\t\t\t\t\tAND data_input_id = ?',\n\t\t\t\t\t\tarray($current_field_name, get_filter_request_var('data_input_id')));\n\t\t\t\t\tif (!$field_id > 0) {\n\t\t\t\t\t\t$field = array();\n\t\t\t\t\t\t$field['name'] = ucwords($current_field_name);\n\t\t\t\t\t\t$field['data_name'] = $current_field_name;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/* if there are no input fields to choose from, complain */\n\tif ((!isset($array_field_names)) && (isset_request_var('type') ? get_request_var('type') == 'in' : false) && ($data_input['type_id'] == '1')) {\n\t\tdisplay_custom_error_message(__('This script appears to have no input values, therefore there is nothing to add.'));\n\t\theader('Location: data_input.php?header=false&action=edit&id=' . get_filter_request_var('data_input_id'));\n\t\texit;\n\t}\n\n\tif ($current_field_type == 'out') {\n\t\t$header_name = __('Output Fields [edit: %s]', html_escape($data_input['name']));\n\t\t$dfield      = __('Output Field');\n\t} elseif ($current_field_type == 'in') {\n\t\t$header_name = __('Input Fields [edit: %s]', html_escape($data_input['name']));\n\t\t$dfield      = __('Input Field');\n\t}\n\n\tif (isset($field)) {\n\t\t$dfield .= ' ' . $field['data_name'];\n\t}\n\tform_start('data_input.php', 'data_input');\n\n\thtml_start_box($header_name, '100%', true, '3', 'center', '');\n\n\t$form_array = array();\n\n\t/* field name */\n\tif ((($data_input['type_id'] == '1') || ($data_input['type_id'] == '5')) && ($current_field_type == 'in')) { /* script */\n\t\t$form_array = inject_form_variables($fields_data_input_field_edit_1, $dfield, $array_field_names, (isset($field) ? $field : array()));\n\t} elseif ($current_field_type == 'out' || ($data_input['type_id'] != 1 && $data_input['type_id'] != 5)) {\n\t\t$form_array = inject_form_variables($fields_data_input_field_edit_2, $dfield, (isset($field) ? $field : array()));\n\t}\n\n\t/* ONLY if the field is an input */\n\tif ($current_field_type == 'in') {\n\t\tunset($fields_data_input_field_edit['update_rra']);\n\t} elseif ($current_field_type == 'out') {\n\t\tunset($fields_data_input_field_edit['regexp_match']);\n\t\tunset($fields_data_input_field_edit['allow_nulls']);\n\t\tunset($fields_data_input_field_edit['type_code']);\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array + inject_form_variables($fields_data_input_field_edit, (isset($field) ? $field : array()), $current_field_type, $_REQUEST)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_save_button('data_input.php?action=edit&id=' . get_request_var('data_input_id'));\n}\n\n/* -----------------------\n    Data Input Functions\n   ----------------------- */\n\nfunction data_remove($id) {\n\t$data_input_fields = db_fetch_assoc_prepared('SELECT id\n\t\tFROM data_input_fields\n\t\tWHERE data_input_id = ?',\n\t\tarray($id));\n\n\tif (is_array($data_input_fields)) {\n\t\tforeach ($data_input_fields as $data_input_field) {\n\t\t\tdb_execute_prepared('DELETE FROM data_input_data WHERE data_input_field_id = ?', array($data_input_field['id']));\n\t\t}\n\t}\n\n\tdb_execute_prepared('DELETE FROM data_input WHERE id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM data_input_fields WHERE data_input_id = ?', array($id));\n\n\tupdate_replication_crc(0, 'poller_replicate_data_input_fields_crc');\n\tupdate_replication_crc(0, 'poller_replicate_data_input_crc');\n}\n\nfunction data_edit() {\n\tglobal $config, $fields_data_input_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$data_id = get_nonsystem_data_input(get_request_var('id'));\n\t\tif ($data_id == 0 || $data_id == NULL) {\n\t\t\theader('Location: data_input.php');\n\t\t\treturn;\n\t\t}\n\n\t\t$data_input = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_input\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Data Input Methods [edit: %s]', html_escape($data_input['name']));\n\t} else {\n\t\t$data_input = array();\n\n\t\t$header_label = __('Data Input Methods [new]');\n\t}\n\n\tif (!isset($config['input_whitelist'])) {\n\t\tunset($fields_data_input_edit['whitelist_verification']);\n\t}\n\n\tform_start('data_input.php', 'data_input');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (cacti_sizeof($data_input)) {\n\t\tswitch ($data_input['type_id']) {\n\t\tcase DATA_INPUT_TYPE_SNMP:\n\t\t\t$fields_data_input_edit['type_id']['array'][DATA_INPUT_TYPE_SNMP] = __('SNMP Get');\n\t\t\tbreak;\n\t\tcase DATA_INPUT_TYPE_SNMP_QUERY:\n\t\t\t$fields_data_input_edit['type_id']['array'][DATA_INPUT_TYPE_SNMP_QUERY] = __('SNMP Query');\n\t\t\tbreak;\n\t\tcase DATA_INPUT_TYPE_SCRIPT_QUERY:\n\t\t\t$fields_data_input_edit['type_id']['array'][DATA_INPUT_TYPE_SCRIPT_QUERY] = __('Script Query');\n\t\t\tbreak;\n\t\tcase DATA_INPUT_TYPE_QUERY_SCRIPT_SERVER:\n\t\t\t$fields_data_input_edit['type_id']['array'][DATA_INPUT_TYPE_QUERY_SCRIPT_SERVER] = __('Script Query - Script Server');\n\t\t\tbreak;\n\t\t}\n\n\t\tif (isset($config['input_whitelist']) && isset($data_input['hash'])) {\n\t\t\t$aud = verify_data_input_whitelist($data_input['hash'], $data_input['input_string']);\n\n\t\t\tif ($aud === true) {\n\t\t\t\t$fields_data_input_edit['whitelist_verification']['value'] = __('White List Verification Succeeded.');\n\t\t\t} elseif ($aud == false) {\n\t\t\t\t$fields_data_input_edit['whitelist_verification']['value'] = __('White List Verification Failed.  Run CLI script input_whitelist.php to correct.');\n\t\t\t} elseif ($aud == '-1') {\n\t\t\t\t$fields_data_input_edit['whitelist_verification']['value'] = __('Input String does not exist in White List.  Run CLI script input_whitelist.php to correct.');\n\t\t\t}\n\t\t}\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_data_input_edit, $data_input)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('id')) {\n\t\thtml_start_box(__('Input Fields'), '100%', '', '3', 'center', 'data_input.php?action=field_edit&type=in&data_input_id=' . get_request_var('id'));\n\n\t\tprint \"<tr class='tableHeader'>\";\n\t\tDrawMatrixHeaderItem(__('Name'), '', 1);\n\t\tDrawMatrixHeaderItem(__('Friendly Name'), '', 1);\n\t\tDrawMatrixHeaderItem(__('Field Order'), '', 2);\n\t\tprint '</tr>';\n\n\t\t$fields = db_fetch_assoc_prepared(\"SELECT id, data_name, name, sequence\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output = 'in'\n\t\t\tORDER BY sequence, data_name\",\n\t\t\tarray(get_request_var('id')));\n\n\t\t$counts = db_fetch_row_prepared(\"SELECT\n\t\t\tSUM(CASE WHEN dtd.local_data_id=0 THEN 1 ELSE 0 END) AS templates,\n\t\t\tSUM(CASE WHEN dtd.local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\t\tFROM data_input AS di\n\t\t\tLEFT JOIN data_template_data AS dtd\n\t\t\tON di.id=dtd.data_input_id\n\t\t\tWHERE di.id = ?\",\n\t\t\tarray(get_request_var('id')));\n\n\t\t$output_disabled  = false;\n\t\t$save_alt_message = false;\n\t\tif (!cacti_sizeof($counts)) {\n\t\t\t$output_disabled  = false;\n\t\t\t$save_alt_message = false;\n\t\t} elseif ($counts['data_sources'] > 0) {\n\t\t\t$output_disabled  = true;\n\t\t\t$save_alt_message = true;\n\t\t} elseif ($counts['templates'] > 0) {\n\t\t\t$output_disabled  = false;\n\t\t\t$save_alt_message = true;\n\t\t}\n\n\t\t$i = 0;\n\t\tif (cacti_sizeof($fields)) {\n\t\t\tforeach ($fields as $field) {\n\t\t\t\tform_alternate_row('', true);\n\t\t\t\t?>\n\t\t\t\t<td>\n\t\t\t\t\t<a class=\"linkEditMain\" href=\"<?php print html_escape('data_input.php?action=field_edit&id=' . $field['id'] . '&data_input_id=' . get_request_var('id'));?>\"><?php print html_escape($field['data_name']);?></a>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print html_escape($field['name']);?>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print $field['sequence']; if ($field['sequence'] == '0') { print ' ' . __('(Not In Use)'); }?>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"right\">\n\t\t\t\t\t<a class='delete deleteMarker fa fa-times' href='<?php print html_escape('data_input.php?action=field_remove_confirm&id=' . $field['id'] . '&data_input_id=' . get_request_var('id'));?>' title='<?php print __esc('Delete');?>'></a>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td colspan=\"4\"><em>' . __('No Input Fields') . '</em></td></tr>';\n\t\t}\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('Output Fields'), '100%', '', '3', 'center', 'data_input.php?action=field_edit&type=out&data_input_id=' . get_request_var('id'));\n\t\tprint \"<tr class='tableHeader'>\";\n\t\tDrawMatrixHeaderItem(__('Name'),'',1);\n\t\tDrawMatrixHeaderItem(__('Friendly Name'),'',1);\n\t\tDrawMatrixHeaderItem(__('Update RRA'),'',2);\n\t\tprint '</tr>';\n\n\t\t$fields = db_fetch_assoc_prepared(\"SELECT id, name, data_name, update_rra, sequence\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output = 'out'\n\t\t\tORDER BY sequence, data_name\",\n\t\t\tarray(get_request_var('id')));\n\n\t\t$i = 0;\n\t\tif (cacti_sizeof($fields)) {\n\t\t\tforeach ($fields as $field) {\n\t\t\t\tform_alternate_row('', true);\n\t\t\t\t?>\n\t\t\t\t<td>\n\t\t\t\t\t<a class='linkEditMain' href='<?php print html_escape('data_input.php?action=field_edit&id=' . $field['id'] . '&data_input_id=' . get_request_var('id'));?>'><?php print html_escape($field['data_name']);?></a>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print html_escape($field['name']);?>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print html_boolean_friendly($field['update_rra']);?>\n\t\t\t\t</td>\n\t\t\t\t<td class='right'>\n\t\t\t\t\t<?php if ($output_disabled) {?>\n\t\t\t\t\t<a class='deleteMarkerDisabled fa fa-times' href='#' title='<?php print __esc('Output Fields can not be removed when Data Sources are present');?>'></a>\n\t\t\t\t\t<?php } else { ?>\n\t\t\t\t\t<a class='delete deleteMarker fa fa-times' href='<?php print html_escape('data_input.php?action=field_remove_confirm&id=' . $field['id'] . '&data_input_id=' . get_request_var('id'));?>' title='<?php print __esc('Delete');?>'></a>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td colspan=\"4\"><em>' . __('No Output Fields') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('data_input.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t$('body').append(\"<div id='cdialog'></div>\");\n\n\t\t$('.delete').unbind().click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\trequest = $(this).attr('href');\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete Data Input Field');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tmodal: false,\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\t});\n\n\t</script>\n\t<?php\n}\n\nfunction data() {\n\tglobal $input_types, $di_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_data_input');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('Data Input Methods'), '100%', '', '3', 'center', 'data_input.php?action=edit');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td class='noprint'>\n\t\t<form id='form_data_input' method='get' action='data_input.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr class='noprint'>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' name='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Input Methods');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t<script type='text/javascript'>\n\n\t\tfunction applyFilter() {\n\t\t\tstrURL  = 'data_input.php?header=false';\n\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\tfunction clearFilter() {\n\t\t\tstrURL = 'data_input.php?clear=1&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#refresh').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#clear').click(function() {\n\t\t\t\tclearFilter();\n\t\t\t});\n\n\t\t\t$('#form_data_input').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\t\t});\n\n\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (di.name like '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$sql_where .= ($sql_where != '' ? ' AND' : 'WHERE') . \" (di.hash NOT IN ('3eb92bb845b9660a7445cf9740726522', 'bf566c869ac6443b0c75d1c32b5a350e', '80e9e4c4191a5da189ae26d0e237f015', '332111d8b54ac8ce939af87a7eac0c06'))\";\n\n\t$sql_where  = api_plugin_hook_function('data_input_sql_where', $sql_where);\n\n\t$total_rows = db_fetch_cell(\"SELECT count(*)\n\t\tFROM data_input AS di\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$data_inputs = db_fetch_assoc(\"SELECT di.*,\n\t\tSUM(CASE WHEN dtd.local_data_id=0 THEN 1 ELSE 0 END) AS templates,\n\t\tSUM(CASE WHEN dtd.local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\tFROM data_input AS di\n\t\tLEFT JOIN data_template_data AS dtd\n\t\tON di.id=dtd.data_input_id\n\t\t$sql_where\n\t\tGROUP BY di.id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('data_input.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 6, __('Input Methods'), 'page', 'main');\n\n\tform_start('data_input.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'         => array('display' => __('Data Input Name'),    'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this Data Input Method.')),\n\t\t'nosort'       => array('display' => __('Deletable'),          'align' => 'right', 'tip' => __('Data Inputs that are in use cannot be Deleted. In use is defined as being referenced either by a Data Source or a Data Template.')),\n\t\t'data_sources' => array('display' => __('Data Sources Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Data Sources that use this Data Input Method.')),\n\t\t'templates'    => array('display' => __('Templates Using'),    'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Data Templates that use this Data Input Method.')),\n\t\t'type_id'      => array('display' => __('Data Input Method'),  'align' => 'left', 'sort' => 'ASC', 'tip' => __('The method used to gather information for this Data Input Method.')));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($data_inputs)) {\n\t\tforeach ($data_inputs as $data_input) {\n\t\t\t/* hide system types */\n\t\t\tif ($data_input['templates'] > 0 || $data_input['data_sources'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\t\t\tform_alternate_row('line' . $data_input['id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value($data_input['name'], get_request_var('filter'), 'data_input.php?action=edit&id=' . $data_input['id']), $data_input['id']);\n\t\t\tform_selectable_cell($disabled ? __('No'): __('Yes'), $data_input['id'],'', 'text-align:right');\n\t\t\tform_selectable_cell(number_format_i18n($data_input['data_sources'], '-1'), $data_input['id'],'', 'text-align:right');\n\t\t\tform_selectable_cell(number_format_i18n($data_input['templates'], '-1'), $data_input['id'],'', 'text-align:right');\n\t\t\tform_selectable_cell($input_types[$data_input['type_id']], $data_input['id']);\n\t\t\tform_checkbox_cell($data_input['name'], $data_input['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"' . (cacti_sizeof($display_text)+1) . '\"><em>' . __('No Data Input Methods Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($data_inputs)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($di_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n$dq_actions = array(\n\t1 => __('Delete')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item_moveup_dssv':\n\t\tdata_query_item_moveup_dssv();\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\t\tbreak;\n\tcase 'item_movedown_dssv':\n\t\tdata_query_item_movedown_dssv();\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\t\tbreak;\n\tcase 'item_remove_dssv':\n\t\tdata_query_item_remove_dssv();\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\t\tbreak;\n\tcase 'item_moveup_gsv':\n\t\tdata_query_item_moveup_gsv();\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\t\tbreak;\n\tcase 'item_movedown_gsv':\n\t\tdata_query_item_movedown_gsv();\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\t\tbreak;\n\tcase 'item_remove_gsv':\n\t\tdata_query_item_remove_gsv();\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\t\tbreak;\n    case 'item_remove_confirm':\n        data_query_item_remove_confirm();\n\n        break;\n\tcase 'item_remove':\n\t\tdata_query_item_remove();\n\n\t\theader('Location: data_queries.php?header=false&action=edit&id=' . get_filter_request_var('snmp_query_id'));\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\n\t\tdata_query_item_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'remove':\n\t\tdata_query_remove();\n\n\t\theader ('Location: data_queries.php');\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tdata_query_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tdata_query();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tif (isset_request_var('save_component_snmp_query')) {\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('data_input_id');\n\n\t\t$save['id']            = get_request_var('id');\n\t\t$save['hash']          = get_hash_data_query(get_nfilter_request_var('id'));\n\t\t$save['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['description']   = form_input_validate(get_nfilter_request_var('description'), 'description', '', true, 3);\n\t\t$save['xml_path']      = form_input_validate(get_nfilter_request_var('xml_path'), 'xml_path', '', false, 3);\n\t\t$save['data_input_id'] = get_request_var('data_input_id');\n\n\t\t// Detect changing input id\n\t\tif (!empty($save['id'])) {\n\t\t\t$previous_input_id = db_fetch_cell_prepared('SELECT data_input_id\n\t\t\t\tFROM snmp_query\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($save['id']));\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$snmp_query_id = sql_save($save, 'snmp_query');\n\n\t\t\tif ($snmp_query_id) {\n\t\t\t\traise_message(1);\n\n\t\t\t\tdata_query_update_input_method($snmp_query_id, $previous_input_id, $save['data_input_id']);\n\n\t\t\t\tupdate_replication_crc(0, 'poller_replicate_snmp_query_crc');\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_queries.php?header=false&action=edit&id=' . (empty($snmp_query_id) ? get_request_var('id') : $snmp_query_id));\n\t} elseif (isset_request_var('save_component_snmp_query_item') && !isset_request_var('svg_x') && !isset_request_var('svds_x')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('snmp_query_id');\n\t\tget_filter_request_var('graph_template_id');\n\t\t/* ==================================================== */\n\n\t\t$save['id'] = get_request_var('id');\n\t\t$save['hash'] = get_hash_data_query(get_nfilter_request_var('id'), 'data_query_graph');\n\t\t$save['snmp_query_id'] = get_request_var('snmp_query_id');\n\t\t$save['name'] = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['graph_template_id'] = get_request_var('graph_template_id');\n\n\t\t$header = '';\n\n\t\tif (!is_error_message()) {\n\t\t\t$snmp_query_graph_id = sql_save($save, 'snmp_query_graph');\n\n\t\t\tif ($snmp_query_graph_id) {\n\t\t\t\traise_message(1);\n\n\t\t\t\t/* if the user changed the graph template, go through and delete everything that\n\t\t\t\twas associated with the old graph template */\n\t\t\t\tif (get_nfilter_request_var('graph_template_id') != get_nfilter_request_var('graph_template_id_prev')) {\n\t\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\t\tFROM snmp_query_graph_rrd_sv\n\t\t\t\t\t\tWHERE snmp_query_graph_id = ?',\n\t\t\t\t\t\tarray($snmp_query_graph_id));\n\n\t\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\t\tFROM snmp_query_graph_sv\n\t\t\t\t\t\tWHERE snmp_query_graph_id = ?',\n\t\t\t\t\t\tarray($snmp_query_graph_id));\n\t\t\t\t}\n\n\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\tFROM snmp_query_graph_rrd\n\t\t\t\t\tWHERE snmp_query_graph_id = ?',\n\t\t\t\t\tarray($snmp_query_graph_id));\n\n\t\t\t\tforeach ($_POST as $var => $val) {\n\t\t\t\t\tif (preg_match('/^dsdt_([0-9]+)_([0-9]+)_check/i', $var)) {\n\t\t\t\t\t\t$data_template_id = preg_replace('/^dsdt_([0-9]+)_([0-9]+).+/', \"\\\\1\", $var);\n\t\t\t\t\t\t$data_template_rrd_id = preg_replace('/^dsdt_([0-9]+)_([0-9]+).+/', \"\\\\2\", $var);\n\t\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\t\tinput_validate_input_number($data_template_id);\n\t\t\t\t\t\tinput_validate_input_number($data_template_rrd_id);\n\t\t\t\t\t\t/* ==================================================== */\n\n\t\t\t\t\t\tdb_execute_prepared('REPLACE INTO snmp_query_graph_rrd\n\t\t\t\t\t\t\t(snmp_query_graph_id, data_template_id, data_template_rrd_id, snmp_field_name)\n\t\t\t\t\t\t\tVALUES (?, ?, ?, ?)',\n\t\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t\t$snmp_query_graph_id,\n\t\t\t\t\t\t\t\t$data_template_id,\n\t\t\t\t\t\t\t\t$data_template_rrd_id,\n\t\t\t\t\t\t\t\tget_nfilter_request_var('dsdt_' .\n\t\t\t\t\t\t\t\t\t$data_template_id . '_' .\n\t\t\t\t\t\t\t\t\t$data_template_rrd_id . '_snmp_field_output')\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isset_request_var('header') && get_nfilter_request_var('header') == 'false') {\n\t\t\t\t\t$header = '&header=false';\n\t\t\t\t} else {\n\t\t\t\t\t$header = '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t\t$header = '';\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit' . $header . '&id=' . (empty($snmp_query_graph_id) ? get_request_var('id') : $snmp_query_graph_id) . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t} elseif (isset_request_var('svg_x')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('snmp_query_id');\n\t\tget_filter_request_var('graph_template_id');\n\t\t/* ==================================================== */\n\n\t\tif (isset_request_var('header') && get_nfilter_request_var('header') == 'false') {\n\t\t\t$header = '&header=false';\n\t\t} else {\n\t\t\t$header = '';\n\t\t}\n\n\t\tif  (isempty_request_var('svg_text')) {\n\t\t\traise_message(39);\n\t\t\theader('Location: data_queries.php?header=false&action=item_edit' . $header . '&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t\t\treturn;\n\t\t} elseif (isempty_request_var('svg_field')) {\n\t\t\traise_message(38);\n\t\t\theader('Location: data_queries.php?header=false&action=item_edit' . $header . '&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t\t\treturn;\n\t\t}\n\n\t\t/* suggested values -- graph templates */\n\t\t$sequence = get_sequence(0, 'sequence', 'snmp_query_graph_sv', 'snmp_query_graph_id=' . get_filter_request_var('id') . \" AND field_name = \" . db_qstr(get_nfilter_request_var('svg_field')));\n\n\t\t$hash   = get_hash_data_query(0, 'data_query_sv_graph');\n\t\t$header = '';\n\n\t\tdb_execute_prepared('INSERT INTO snmp_query_graph_sv\n\t\t\t(hash, snmp_query_graph_id, sequence, field_name, text)\n\t\t\tVALUES (?, ?, ?, ?, ?)',\n\t\t\tarray(\n\t\t\t\t$hash,\n\t\t\t\tget_request_var('id'),\n\t\t\t\t$sequence,\n\t\t\t\tget_nfilter_request_var('svg_field'),\n\t\t\t\tget_nfilter_request_var('svg_text')\n\t\t\t)\n\t\t);\n\n\t\tclear_messages();\n\n\t\tif (isset_request_var('header') && get_nfilter_request_var('header') == 'false') {\n\t\t\t$header = '&header=false';\n\t\t} else {\n\t\t\t$header = '';\n\t\t}\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit' . $header . '&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t} elseif (isset_request_var('svds_x')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('snmp_query_id');\n\t\tget_filter_request_var('graph_template_id');\n\t\t/* ==================================================== */\n\n\t\tif (isset_request_var('header') && get_nfilter_request_var('header') == 'false') {\n\t\t\t$header = '&header=false';\n\t\t} else {\n\t\t\t$header = '';\n\t\t}\n\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^svds_([0-9]+)_x/i', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif  (isempty_request_var('svds_' . $matches[1] . '_text')) {\n\t\t\t\t\traise_message(39);\n\t\t\t\t\theader('Location: data_queries.php?header=false&action=item_edit' . $header . '&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t\t\t\t\treturn;\n\t\t\t\t} elseif (isempty_request_var('svds_' . $matches[1] . '_field')) {\n\t\t\t\t\traise_message(38);\n\t\t\t\t\theader('Location: data_queries.php?header=false&action=item_edit' . $header . '&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$sequence = get_sequence(0, 'sequence', 'snmp_query_graph_rrd_sv', 'snmp_query_graph_id=' . get_request_var('id')  . ' AND data_template_id=' . $matches[1] . \" AND field_name='\" . get_nfilter_request_var('svds_' . $matches[1] . '_field') . \"'\");\n\n\t\t\t\t$hash = get_hash_data_query(0, 'data_query_sv_data_source');\n\n\t\t\t\tdb_execute_prepared('INSERT INTO snmp_query_graph_rrd_sv\n\t\t\t\t\t(hash, snmp_query_graph_id, data_template_id, sequence, field_name, text)\n\t\t\t\t\tVALUES (?, ?, ?, ?, ?, ?)',\n\t\t\t\t\tarray(\n\t\t\t\t\t\t$hash, get_request_var('id'),\n\t\t\t\t\t\t$matches[1],\n\t\t\t\t\t\t$sequence,\n\t\t\t\t\t\tget_nfilter_request_var('svds_' . $matches[1] . '_field'),\n\t\t\t\t\t\tget_nfilter_request_var('svds_' . $matches[1] . '_text')\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tclear_messages();\n\n\t\t\t\tif (isset_request_var('header') && get_nfilter_request_var('header') == 'false') {\n\t\t\t\t\t$header = '&header=false';\n\t\t\t\t} else {\n\t\t\t\t\t$header = '';\n\t\t\t\t}\n\n\t\t\t\theader('Location: data_queries.php?header=false&action=item_edit' . $header . '&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction form_actions() {\n\tglobal $dq_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t data_query_remove($selected_items[$i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_queries.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$dq_list = ''; $i = 0;\n\n\t/* loop through each of the data queries and process them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\t\tFROM snmp_query\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($matches[1]));\n\n\t\t\t$dq_list .= '<li>' . html_escape($name) . '</li>';\n\t\t\t$dq_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('data_queries.php');\n\n\thtml_start_box($dq_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($dq_array) && cacti_sizeof($dq_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t$graphs = array();\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following Data Query.', 'Click \\'Continue\\' to delete following Data Queries.', cacti_sizeof($dq_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$dq_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t}\n\n\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Data Query', 'Delete Data Query', cacti_sizeof($dq_array)) . \"'>\";\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: data_queries.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($dq_array) ? serialize($dq_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* ----------------------------\n    Data Query Graph Functions\n   ---------------------------- */\n\nfunction data_query_item_movedown_gsv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('snmp_query_graph_id');\n\t/* ==================================================== */\n\n\tmove_item_down('snmp_query_graph_sv', get_request_var('id'), 'snmp_query_graph_id=' . get_request_var('snmp_query_graph_id') . \" AND field_name = \" . db_qstr(get_nfilter_request_var('field_name')));\n}\n\nfunction data_query_item_moveup_gsv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('snmp_query_graph_id');\n\t/* ==================================================== */\n\n\tmove_item_up('snmp_query_graph_sv', get_request_var('id'), 'snmp_query_graph_id=' . get_request_var('snmp_query_graph_id') . \" AND field_name = \" . db_qstr(get_nfilter_request_var('field_name')));\n}\n\nfunction data_query_item_remove_gsv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM snmp_query_graph_sv\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n}\n\nfunction data_query_item_movedown_dssv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_template_id');\n\tget_filter_request_var('snmp_query_graph_id');\n\t/* ==================================================== */\n\n\tmove_item_down('snmp_query_graph_rrd_sv', get_request_var('id'), 'data_template_id=' . get_request_var('data_template_id') . ' AND snmp_query_graph_id=' . get_request_var('snmp_query_graph_id') . \" AND field_name = \" . db_qstr(get_nfilter_request_var('field_name')));\n}\n\nfunction data_query_item_moveup_dssv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_template_id');\n\tget_filter_request_var('snmp_query_graph_id');\n\t/* ==================================================== */\n\n\tmove_item_up('snmp_query_graph_rrd_sv', get_request_var('id'), 'data_template_id=' . get_request_var('data_template_id') . ' AND snmp_query_graph_id=' . get_request_var('snmp_query_graph_id') . \" AND field_name = \" . db_qstr(get_nfilter_request_var('field_name')));\n}\n\nfunction data_query_sv_check_sequences($type, $snmp_query_graph_id, $field_name) {\n\tif ($type == 'ds' || $type == 'gr') {\n\t\tif ($type == 'ds') {\n\t\t\t$table = 'snmp_query_graph_rrd_sv';\n\t\t} else {\n\t\t\t$table = 'snmp_query_graph_sv';\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n\n\t$bad_seq = db_fetch_cell_prepared(\"SELECT COUNT(sequence)\n\t\tFROM $table\n\t\tWHERE sequence <= 0\n\t\tAND field_name = ?\n\t\tAND snmp_query_graph_id = ?\",\n\t\tarray($field_name, $snmp_query_graph_id));\n\n\t$dup_seq = db_fetch_cell_prepared(\"SELECT SUM(count)\n\t\tFROM (\n\t\t\tSELECT sequence, COUNT(sequence) AS count\n\t\t\tFROM $table\n\t\t\tWHERE field_name = ?\n\t\t\tAND snmp_query_graph_id = ?\n\t\t\tGROUP BY sequence\n\t\t) AS t\n\t\tWHERE t.count > 1\",\n\t\tarray($field_name, $snmp_query_graph_id));\n\n\t// report any bad or duplicate sequencs to the log for reporting purposes\n\tif ($bad_seq > 0) {\n\t\tcacti_log('WARN: Found ' . $bad_seq . \" Bad Sequences in $table Table\", false, 'WEBUI', POLLER_VERBOSITY_HIGH);\n\t}\n\n\tif ($dup_seq > 0) {\n\t\tcacti_log('WARN: Found ' . $dup_seq . \" Duplicated Sequences in $table Table\", false, 'WEBUI', POLLER_VERBOSITY_HIGH);\n\t}\n\n\tif ($bad_seq > 0 || $dup_seq > 0) {\n\t\t// resequence the list so it has no gaps, and 0 values will appear at the top\n\t\t// since thats where they would have been displayed\n\t\tdb_execute_prepared(\"SET @seq = 0;\n\t\t\tUPDATE $table\n\t\t\tSET sequence = (@seq:=@seq+1)\n\t\t\tWHERE field_name = ?\n\t\t\tAND snmp_query_graph_id = ?\n\t\t\tORDER BY sequence, id;\",\n\t\t\tarray($field_name, $snmp_query_graph_id));\n\t}\n}\n\nfunction data_query_item_remove_dssv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph_rrd_sv\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n}\n\nfunction data_query_item_remove_confirm() {\n\tglobal $vdef_functions, $vdef_item_types, $custom_vdef_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('snmp_query_id');\n\t/* ==================================================== */\n\n\tform_start('data_queries.php?action=edit&id' . get_request_var('snmp_query_id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$graph_template = db_fetch_row_prepared('SELECT *\n\t\tFROM snmp_query_graph\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Data Query Graph Association.');?></p>\n\t\t\t<p><?php print __('Graph Name: %s', $graph_template['name']);?><br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\");' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove VDEF Item');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').click(function(data) {\n\t\t\t$.post('data_queries.php?action=item_remove', {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tsnmp_query_id: <?php print get_request_var('snmp_query_id');?>,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}, function(data) {\n\t\t\t\t$('#cdialog').dialog('close');\n\t\t\t\tloadPageNoHeader('data_queries.php?action=edit&header=false&id=<?php print get_request_var('snmp_query_id');?>');\n\t\t\t});\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction data_query_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph_rrd\n\t\tWHERE snmp_query_graph_id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph_rrd_sv\n\t\tWHERE snmp_query_graph_id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph_sv\n\t\tWHERE snmp_query_graph_id = ?',\n\t\tarray(get_request_var('id')));\n}\n\nfunction data_query_item_edit() {\n\tglobal $fields_data_query_item_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('snmp_query_id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$snmp_query_item = db_fetch_row_prepared('SELECT *\n\t\t\tFROM snmp_query_graph\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\t$snmp_query   = db_fetch_row_prepared('SELECT name, xml_path\n\t\tFROM snmp_query\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('snmp_query_id')));\n\n\t$header_label = __('Associated Graph/Data Templates [edit: %s]', html_escape($snmp_query['name']));\n\n\tform_start('data_queries.php', 'data_queries');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_data_query_item_edit, (isset($snmp_query_item) ? $snmp_query_item : array()), $_REQUEST)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t?>\n\t<script type='text/javascript'>\n\t$('#graph_template_id').change(function() {\n\t\t$('#name').val($(this).children(':selected').text());\n\t});\n\t</script>\n\t<?php\n\n\tif (!empty($snmp_query_item['id'])) {\n\t\thtml_start_box( __('Associated Data Templates'), '100%', '', '3', 'center', '');\n\n\t\t$data_templates = db_fetch_assoc_prepared('SELECT data_template.id, data_template.name\n\t\t\tFROM (data_template, data_template_rrd, graph_templates_item)\n\t\t\tWHERE graph_templates_item.task_item_id = data_template_rrd.id\n\t\t\tAND data_template_rrd.data_template_id = data_template.id\n\t\t\tAND data_template_rrd.local_data_id = 0\n\t\t\tAND graph_templates_item.local_graph_id = 0\n\t\t\tAND graph_templates_item.graph_template_id = ?\n\t\t\tGROUP BY data_template.id\n\t\t\tORDER BY data_template.name', array($snmp_query_item['graph_template_id']));\n\n\t\t$i = 0;\n\t\tif (cacti_sizeof($data_templates)) {\n\t\t\tforeach ($data_templates as $data_template) {\n\t\t\t\tprint \"<tr class='tableHeader'>\n\t\t\t\t\t\t<th class='tableSubHeaderColumn'>\" . __('Data Template - %s', $data_template['name']) . '</th>\n\t\t\t\t\t</tr>';\n\n\t\t\t\t$data_template_rrds = db_fetch_assoc_prepared('SELECT dtr.id, dtr.data_source_name,\n\t\t\t\t\tsqgr.snmp_field_name, sqgr.snmp_query_graph_id\n\t\t\t\t\tFROM data_template_rrd AS dtr\n\t\t\t\t\tLEFT JOIN snmp_query_graph_rrd AS sqgr\n\t\t\t\t\tON sqgr.data_template_rrd_id = dtr.id\n\t\t\t\t\tAND sqgr.snmp_query_graph_id = ?\n\t\t\t\t\tAND sqgr.data_template_id = ?\n\t\t\t\t\tWHERE dtr.data_template_id = ?\n\t\t\t\t\tAND dtr.local_data_id = 0\n\t\t\t\t\tORDER BY dtr.data_source_name',\n\t\t\t\t\tarray(get_request_var('id'), $data_template['id'], $data_template['id']));\n\n\t\t\t\t$i = 0;\n\t\t\t\tif (cacti_sizeof($data_template_rrds)) {\n\t\t\t\t\tforeach ($data_template_rrds as $data_template_rrd) {\n\t\t\t\t\t\tif (empty($data_template_rrd['snmp_query_graph_id'])) {\n\t\t\t\t\t\t\t$old_value = '';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$old_value = 'on';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tform_alternate_row();\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td style='width:200px;'>\n\t\t\t\t\t\t\t\t\t\t<?php print __('Data Source');?>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td style='width:200px;'>\n\t\t\t\t\t\t\t\t\t\t<?php print $data_template_rrd['data_source_name'];?>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t\t$snmp_queries = get_data_query_array(get_request_var('snmp_query_id'));\n\t\t\t\t\t\t\t\t\t\t$xml_outputs  = array();\n\n\t\t\t\t\t\t\t\t\t\tif (isset($snmp_queries['fields']) && cacti_sizeof($snmp_queries['fields'])) {\n\t\t\t\t\t\t\t\t\t\t\tforeach ($snmp_queries['fields'] as $field_name => $field_array) {\n\t\t\t\t\t\t\t\t\t\t\t\tif ($field_array['direction'] == 'output' || $field_array['direction'] == 'input-output') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$xml_outputs[$field_name] = $field_name . ' (' . $field_array['name'] . ')';\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tform_dropdown('dsdt_' . $data_template['id'] . '_' . $data_template_rrd['id'] . '_snmp_field_output',$xml_outputs,'','',$data_template_rrd['snmp_field_name'],'','');?>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t\t\t\t\t<?php form_checkbox('dsdt_' . $data_template['id'] . '_' . $data_template_rrd['id'] . '_check', $old_value, '', '', '', get_request_var('id')); print '<br>';?>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tform_end_row();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('Suggested Values - Graphs'), '100%', '', '3', 'center', '');\n\n\t\t/* suggested values for graphs templates */\n\t\t$suggested_values = db_fetch_assoc_prepared('SELECT text, field_name, snmp_query_graph_id, id\n\t\t\tFROM snmp_query_graph_sv\n\t\t\tWHERE snmp_query_graph_id = ?\n\t\t\tORDER BY field_name, sequence',\n\t\t\tarray(get_request_var('id')));\n\n\t\thtml_header(array(\n\t\t\tarray('display' => __('Name'), 'align' => 'left'),\n\t\t\tarray('display' => __('Order'), 'align' => 'center'),\n\t\t\tarray('display' => __('Equation'), 'align' => 'left')\n\t\t), 2);\n\n\t\t$i = 0;\n\t\t$total_values = cacti_sizeof($suggested_values);\n\t\tif ($total_values) {\n\t\t\tforeach ($suggested_values as $suggested_value) {\n\t\t\t\tdata_query_sv_check_sequences('gr', $suggested_value['snmp_query_graph_id'], $suggested_value['field_name']);\n\n\t\t\t\tform_alternate_row();\n\n\t\t\t\t$show_up   = false;\n\t\t\t\t$show_down = false;\n\n\t\t\t\t// Handle up true\n\t\t\t\tif ($i != 0) {\n\t\t\t\t\t$show_up = true;\n\t\t\t\t}\n\n\t\t\t\t// Handle down true\n\t\t\t\tif ($total_values > 1 && $i < $total_values-1) {\n\t\t\t\t\t$show_down = true;\n\t\t\t\t}\n\n\t\t\t\t?>\n\t\t\t\t<td class='left'>\n\t\t\t\t\t<?php print html_escape($suggested_value['field_name']);?>\n\t\t\t\t</td>\n\t\t\t\t<td class='center'>\n\t\t\t\t\t<?php if ($show_down) {?>\n\t\t\t\t\t<a class='remover fa fa-caret-down moveArrow' title='<?php print __('Move Down');?>' href='<?php print html_escape('data_queries.php?action=item_movedown_gsv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&field_name=' . $suggested_value['field_name']);?>'></a>\n\t\t\t\t\t<?php } else {?>\n\t\t\t\t\t<span class='moveArrowNone'></span>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t\t<?php if ($show_up) {?>\n\t\t\t\t\t<a class='remover fa fa-caret-up moveArrow' title='<?php print __('Move Up');?>' href='<?php print html_escape('data_queries.php?action=item_moveup_gsv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&field_name=' . $suggested_value['field_name']);?>'></a>\n\t\t\t\t\t<?php } else {?>\n\t\t\t\t\t<span class='moveArrowNone'></span>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t</td>\n\t\t\t\t<td class='left'>\n\t\t\t\t\t<?php print html_escape($suggested_value['text']);?>\n\t\t\t\t</td>\n\t\t\t\t<td class='right'>\n\t\t\t\t\t<a class='remover deleteMarker fa fa-times' title='<?php print html_escape(__('Delete'));?>' href='<?php print html_escape('data_queries.php?action=item_remove_gsv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id'));?>'></a>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint \"<tr><td colspan='4'><em>\" . __('No Suggested Values Found') . \"</em></td></tr>\";\n\t\t}\n\n\t\tform_alternate_row();\n\t\t?>\n\t\t<td colspan='4'>\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t<?php print __('Field Name');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='svg_field' size='15'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t<?php print __('Suggested Value');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='svg_text' size='60'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='svg_x' name='svg_x' value='<?php print __esc('Add');?>' title='<?php print __('Add Graph Title Suggested Name');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td>\n\t\t<?php\n\t\tform_end_row();\n\n\t\thtml_end_box();\n\n\t\thtml_start_box( __('Suggested Values - Data Sources'), '100%', '', '3', 'center', '');\n\n\t\t/* suggested values for data templates */\n\t\tif (cacti_sizeof($data_templates)) {\n\t\t\tforeach ($data_templates as $data_template) {\n\t\t\t\t$suggested_values = db_fetch_assoc_prepared('SELECT text, field_name, snmp_query_graph_id, id\n\t\t\t\t\tFROM snmp_query_graph_rrd_sv\n\t\t\t\t\tWHERE snmp_query_graph_id = ?\n\t\t\t\t\tAND data_template_id = ?\n\t\t\t\t\tORDER BY field_name, sequence', array(get_request_var('id'), $data_template['id']));\n\n\t\t\t\thtml_header(array(\n\t\t\t\t\tarray('display' => __('Name'), 'align' => 'left'),\n\t\t\t\t\tarray('display' => __('Order'), 'align' => 'center'),\n\t\t\t\t\tarray('display' => __('Equation'), 'align' => 'left')\n\t\t\t\t), 2);\n\n\t\t\t\t$i = 0;\n\t\t\t\t$total_values = cacti_sizeof($suggested_values);\n\n\t\t\t\tif ($total_values) {\n\t\t\t\t\t$prev_name = '';\n\t\t\t\t\tforeach ($suggested_values as $suggested_value) {\n\t\t\t\t\t\tdata_query_sv_check_sequences('ds', $suggested_value['snmp_query_graph_id'], $suggested_value['field_name']);\n\n\t\t\t\t\t\tform_alternate_row();\n\n\t\t\t\t\t\t$show_up   = false;\n\t\t\t\t\t\t$show_down = false;\n\n\t\t\t\t\t\t// Handle up true\n\t\t\t\t\t\tif ($i != 0) {\n\t\t\t\t\t\t\t$show_up = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Handle down true\n\t\t\t\t\t\tif ($total_values > 1 && $i < $total_values-1) {\n\t\t\t\t\t\t\t$show_down = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<td class='left'>\n\t\t\t\t\t\t\t<?php print html_escape($suggested_value['field_name']);?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='center'>\n\t\t\t\t\t\t\t<?php if ($show_down) {?>\n\t\t\t\t\t\t\t<a class='remover fa fa-caret-down moveArrow' title='<?php print __('Move Down');?>' href='<?php print html_escape('data_queries.php?action=item_movedown_dssv&snmp_query_graph_id=' . get_request_var('id') . '&id='. $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&data_template_id=' . $data_template['id'] . '&field_name=' . $suggested_value['field_name']);?>'></a>\n\t\t\t\t\t\t\t<?php } else {?>\n\t\t\t\t\t\t\t<span class='moveArrowNone'></span>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t<?php if ($show_up) {?>\n\t\t\t\t\t\t\t<a class='remover fa fa-caret-up moveArrow' title='<?php print __('Move Up');?>' href='<?php print html_escape('data_queries.php?action=item_moveup_dssv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&data_template_id=' . $data_template['id'] . '&field_name=' . $suggested_value['field_name']);?>'></a>\n\t\t\t\t\t\t\t<?php } else {?>\n\t\t\t\t\t\t\t<span class='moveArrowNone'></span>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='nowrap left'>\n\t\t\t\t\t\t\t<?php print html_escape($suggested_value['text']);?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t\t<a class='remover deleteMarker fa fa-times' title='<?php print __('Delete');?>' href='<?php print html_escape('data_queries.php?action=item_remove_dssv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&data_template_id=' . $data_template['id']);?>'></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<?php\n\n\t\t\t\t\t\tform_end_row();\n\n\t\t\t\t\t\t$prev_name = $suggested_value['field_name'];\n\t\t\t\t\t\t$i++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint \"<tr><td colspan='4'><em>\" . __('No Suggested Values Found') . \"</em></td></tr>\";\n\t\t\t\t}\n\n\t\t\t\tform_alternate_row();\n\t\t\t\t?>\n\t\t\t\t<td colspan='4'>\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t\t\t<?php print __('Field Name');?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='text' class='svds_field ui-state-default ui-corner-all' id='svds_<?php print $data_template['id'];?>_field' name='svds_<?php print $data_template['id'];?>_field' size='15'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t\t\t<?php print __('Suggested Value');?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='text' class='svds_text ui-state-default ui-corner-all' id='svds_<?php print $data_template['id'];?>_text' name='svds_<?php print $data_template['id'];?>_text' size='60'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='button' class='svds_x ui-button ui-corner-all ui-widget' id='svds_<?php print $data_template['id'];?>_x' name='svds_<?php print $data_template['id'];?>_x' value='<?php print __esc('Add');?>' title='<?php print __('Add Data Source Name Suggested Name');?>'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tif (isset($snmp_query_item['graph_template_id'])) {\n\t\t$item = $snmp_query_item['graph_template_id'];\n\t} else {\n\t\t$item = 0;\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tvar graph_template_id_prev=<?php print $item;?>;\n\n\t$('.remover').click(function(event) {\n\t\tevent.preventDefault();\n\t\thref=$(this).attr('href');\n\t\t$.get(href)\n\t\t\t.done(function(data) {\n\t\t\t\t$('form[action=\"data_queries.php\"]').unbind();\n\t\t\t\t$('#main').html(data);\n\t\t\t\tapplySkin();\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\t});\n\n\t$('input[id=\"svg_x\"]').click(function() {\n\t\t$.post('data_queries.php', {\n\t\t\tgraph_template_id_prev:graph_template_id_prev,\n\t\t\taction:'save',\n\t\t\tname:$('#name').val(),\n\t\t\tgraph_template_id:$('#graph_template_id').val(),\n\t\t\tid:$('#id').val(),\n\t\t\theader:'false',\n\t\t\tsave_component_snmp_query_item:'1',\n\t\t\tsnmp_query_id:$('#snmp_query_id').val(),\n\t\t\tsvg_field:$('#svg_field').val(),\n\t\t\tsvg_text:$('#svg_text').val(),\n\t\t\tsvg_x:'Add',\n\t\t\t__csrf_magic: csrfMagicToken\n\t\t}).done(function(data) {\n\t\t\t$('#main').html(data);\n\t\t\tapplySkin();\n\t\t});\n\t});\n\n\t$('input.svds_x').click(function() {\n\t\tvar $form = $(this).closest('form');\n\t\tvar svds_text_name=$form.find('input.svds_text').attr('name');\n\t\tvar svds_field_name=$form.find('input.svds_field').attr('name');\n\t\tvar svds_x_name=$form.find('input.svds_x').attr('name');\n\n\t\tvar jSON = $.parseJSON('{ ' +\n\t\t\t'\"graph_template_id_prev\":\"'+graph_template_id_prev + '\", ' +\n\t\t\t'\"action\":\"save\", ' +\n\t\t\t'\"name\":\"'+$('#name').val() + '\", ' +\n\t\t\t'\"graph_template_id\":\"'+$('#graph_template_id').val() + '\", ' +\n\t\t\t'\"id\":\"'+$('#id').val() + '\", ' +\n\t\t\t'\"header\":\"false\", ' +\n\t\t\t'\"__csrf_magic\":\"'+csrfMagicToken+'\", ' +\n\t\t\t'\"save_component_snmp_query_item\":\"1\", ' +\n\t\t\t'\"snmp_query_id\":\"'+$('#snmp_query_id').val() + '\", ' +\n\t\t\t'\"'+svds_field_name+'\":\"'+$form.find('input.svds_field').val() + '\", ' +\n\t\t\t'\"'+svds_text_name+'\":\"'+$form.find('input.svds_text').val() + '\", ' +\n\t\t\t'\"'+svds_x_name+'\":\"Add\", ' +\n\t\t\t'\"svds_x\":\"Add\" }');\n\n\t\t$.post('data_queries.php', jSON).done(function(data) {\n\t\t\t$('#main').html(data);\n\t\t\tapplySkin();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\tform_save_button('data_queries.php?action=edit&id=' . get_request_var('snmp_query_id'), 'return');\n}\n\n/* ---------------------\n    Data Query Functions\n   --------------------- */\n\nfunction data_query_remove($id) {\n\t$snmp_query_graph = db_fetch_assoc_prepared('SELECT id\n\t\tFROM snmp_query_graph\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tif (cacti_sizeof($snmp_query_graph)) {\n\t\tforeach ($snmp_query_graph as $item) {\n\t\t\tdb_execute_prepared('DELETE\n\t\t\t\tFROM snmp_query_graph_rrd\n\t\t\t\tWHERE snmp_query_graph_id = ?',\n\t\t\t\tarray($item['id']));\n\t\t}\n\t}\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query\n\t\tWHERE id = ?',\n\t\tarray($id));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM host_template_snmp_query\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM host_snmp_query\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM host_snmp_cache\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tupdate_replication_crc(0, 'poller_replicate_snmp_query_crc');\n}\n\nfunction data_query_edit() {\n\tglobal $fields_data_query_edit, $config;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$snmp_query = db_fetch_row_prepared('SELECT * FROM snmp_query WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('Data Queries [edit: %s]', html_escape($snmp_query['name']));\n\t} else {\n\t\t$header_label = __('Data Queries [new]');\n\t}\n\n\tform_start('data_queries.php', 'data_queries');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_data_query_edit, (isset($snmp_query) ? $snmp_query : array()))\n\t\t)\n\t);\n\n\thtml_end_box(false, true);\n\n\tif (!empty($snmp_query['id'])) {\n\t\t$search       = array('<path_cacti>', '<path_snmpget>', '<path_php_binary>');\n\t\t$replace      = array($config['base_path'], read_config_option('path_snmpget'), read_config_option('path_php_binary'));\n\t\t$xml_filename = str_replace($search, $replace, $snmp_query['xml_path']);\n\n\t\tif ((file_exists($xml_filename)) && (is_file($xml_filename))) {\n\t\t\t$text = \"<span class='deviceUp'>\" . __('Successfully located XML file') . \"</span>\";\n\t\t\t$xml_file_exists = true;\n\t\t} else {\n\t\t\t$text = \"<span class='deviceDown'>\" . __('Could not locate XML file.') . \"</span>\";\n\t\t\t$xml_file_exists = false;\n\t\t}\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\tprint \"<tr class='tableRow debug'><td>$text</td></tr>\";\n\t\thtml_end_box(false);\n\n\t\thtml_start_box( __('Associated Graph Templates'), '100%', '', '3', 'center', 'data_queries.php?action=item_edit&snmp_query_id=' . $snmp_query['id']);\n\n\t\tprint \"<tr class='tableHeader'>\n\t\t\t<th class='tableSubHeaderColumn'>\" . __('Name') . \"</th>\n\t\t\t<th class='tableSubHeaderColumn'>\" . __('Graph Template Name') . \"</th>\n\t\t\t<th class='tableSubHeaderColumn right'>\" . __('Graphs Using') . \"</th>\n\t\t\t<th class='tableSubHeaderColumn right'>\" . __('Mapping ID') . \"</th>\n\t\t\t<th class='tableSubHeaderColumn right' style='width:60px;'>\" . __('Action') . \"</th>\n\t\t</tr>\";\n\n\t\t$snmp_query_graphs = db_fetch_assoc_prepared('SELECT sqg.id,\n\t\t\tgt.name AS graph_template_name, sqg.name, COUNT(gl.id) AS graphs\n\t\t\tFROM snmp_query_graph AS sqg\n\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\tON sqg.graph_template_id = gt.id\n\t\t\tLEFT JOIN graph_local AS gl\n\t\t\tON gl.snmp_query_graph_id = sqg.id\n\t\t\tAND gl.graph_template_id = sqg.graph_template_id\n\t\t\tWHERE sqg.snmp_query_id = ?\n\t\t\tGROUP BY sqg.id\n\t\t\tORDER BY sqg.name',\n\t\t\tarray($snmp_query['id']));\n\n\t\tif (cacti_sizeof($snmp_query_graphs)) {\n\t\t\tforeach ($snmp_query_graphs as $snmp_query_graph) {\n\t\t\t\tform_alternate_row();\n\t\t\t\t?>\n\t\t\t\t\t<td>\n\t\t\t\t\t<?php if ($xml_file_exists) {?>\n\t\t\t\t\t\t<a class='linkEditMain' href=\"<?php print html_escape('data_queries.php?action=item_edit&id=' . $snmp_query_graph['id'] . '&snmp_query_id=' . $snmp_query['id']);?>\"><?php print html_escape($snmp_query_graph['name']);?></a>\n\t\t\t\t\t<?php } else { ?>\n\t\t\t\t\t\t<span class='noLinkEditMain' title='Association Read Only until XML file located'><?php print html_escape($snmp_query_graph['name']);?></span>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print html_escape($snmp_query_graph['graph_template_name']);?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t<?php print number_format_i18n($snmp_query_graph['graphs'], '-1');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t<?php print $snmp_query_graph['id'];?>\n\t\t\t\t\t</td><?php if ($snmp_query_graph['graphs'] == 0) {?>\n\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t\t<a class='delete deleteMarker fa fa-times' title='<?php print __('Delete');?>' href='<?php print html_escape('data_queries.php?action=item_remove_confirm&id=' . $snmp_query_graph['id'] . '&snmp_query_id=' . $snmp_query['id']);?>'></a>\n\t\t\t\t\t</td>\n\t\t\t\t\t<?php } else { ?>\n\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t\t<a class='deleteMarkerDisabled fa fa-times' title='<?php print __('Mapped Graph Templates with Graphs are read only');?>' href='#'></a>\n\t\t\t\t\t</td>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t</tr>\n\t\t\t\t<?php\n\t\t\t}\n\t\t} else {\n\t\t\t\tprint \"<tr class='tableRow'><td><em>\" . __('No Graph Templates Defined.') . \"</em></td></tr>\";\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('data_queries.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t$('body').append(\"<div id='cdialog'></div>\");\n\n\t\t$('.noLinkEditMain').tooltip();\n\n\t\t$('.delete').click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\trequest = $(this).attr('href');\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete Associated Graph');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\t});\n\n\t</script>\n\t<?php\n}\n\nfunction data_query() {\n\tglobal $dq_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_dq');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box( __('Data Queries'), '100%', '', '3', 'center', 'data_queries.php?action=edit');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td class='noprint'>\n\t\t<form id='form_data_queries' method='get' action='data_queries.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr class='noprint'>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' name='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Data Queries');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' name='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t<script type='text/javascript'>\n\t\tfunction applyFilter() {\n\t\t\tstrURL  = 'data_queries.php?header=false';\n\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\tfunction clearFilter() {\n\t\t\tstrURL = 'data_queries.php?clear=1&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#refresh').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#clear').click(function() {\n\t\t\t\tclearFilter();\n\t\t\t});\n\n\t\t\t$('#form_data_queries').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\t\t});\n\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (sq.name like '%\" . get_request_var('filter') . \"%' OR di.name like '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(*)\n\t\tFROM snmp_query AS sq\n\t\tINNER JOIN data_input AS di\n\t\tON (sq.data_input_id=di.id)\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$snmp_queries = db_fetch_assoc(\"SELECT sq.id, sq.name,\n\t\tdi.name AS data_input_method,\n\t\tCOUNT(DISTINCT gl.id) AS graphs,\n\t\tCOUNT(DISTINCT sqg.graph_template_id) AS templates\n\t\tFROM snmp_query AS sq\n\t\tLEFT JOIN snmp_query_graph AS sqg\n\t\tON sq.id=sqg.snmp_query_id\n\t\tLEFT JOIN data_input AS di\n\t\tON (sq.data_input_id=di.id)\n\t\tLEFT JOIN graph_local AS gl\n\t\tON gl.snmp_query_id=sq.id\n\t\t$sql_where\n\t\tGROUP BY sq.id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('data_queries.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Data Queries'), 'page', 'main');\n\n\tform_start('data_queries.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'              => array('display' => __('Data Query Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this Data Query.')),\n\t\t'id'                => array('display' => __('ID'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The internal ID for this Graph Template.  Useful when performing automation or debugging.')),\n\t\t'nosort'            => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('Data Queries that are in use cannot be Deleted. In use is defined as being referenced by either a Graph or a Graph Template.')),\n\t\t'graphs'            => array('display' => __('Graphs Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Graphs using this Data Query.')),\n\t\t'templates'         => array('display' => __('Templates Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Graphs Templates using this Data Query.')),\n\t\t'data_input_method' => array('display' => __('Data Input Method'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The Data Input Method used to collect data for Data Sources associated with this Data Query.')));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($snmp_queries)) {\n\t\tforeach ($snmp_queries as $snmp_query) {\n\t\t\tif ($snmp_query['graphs'] == 0 && $snmp_query['templates'] == 0) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $snmp_query['id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value($snmp_query['name'], get_request_var('filter'), 'data_queries.php?action=edit&id=' . $snmp_query['id']), $snmp_query['id']);\n\t\t\tform_selectable_cell($snmp_query['id'], $snmp_query['id'], '', 'text-align:right;');\n\t\t\tform_selectable_cell($disabled ? __('No') : __('Yes'), $snmp_query['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell(number_format_i18n($snmp_query['graphs'], '-1'), $snmp_query['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell(number_format_i18n($snmp_query['templates'], '-1'), $snmp_query['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell(filter_value($snmp_query['data_input_method'], get_request_var('filter')), $snmp_query['id']);\n\t\t\tform_checkbox_cell($snmp_query['name'], $snmp_query['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='5'><em>\" . __('No Data Queries Found') . \"</em></td></tr>\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($snmp_queries)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($dq_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n$profile_actions = array(\n\t1 => __('Delete'),\n//\t2 => __('Duplicate')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item_remove_confirm':\n\t\tprofile_item_remove_confirm();\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tprofile_item_remove();\n\n\t\tbreak;\n\tcase 'ajax_span':\n\t\tget_filter_request_var('profile_id');\n\t\tget_filter_request_var('span');\n\t\tget_filter_request_var('rows');\n\n\t\t$sampling_interval = db_fetch_cell_prepared('SELECT step\n\t\t\tFROM data_source_profiles\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('profile_id')));\n\n\t\tif (get_request_var('span') == 1) {\n\t\t\tprint get_span(get_request_var('rows') * $sampling_interval);\n\t\t} else {\n\t\t\tprint get_span(get_request_var('rows') * get_request_var('span'));\n\t\t}\n\n\t\tbreak;\n\tcase 'ajax_size':\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('cfs');\n\t\tprint get_size(get_request_var('id'), get_nfilter_request_var('type'), get_request_var('cfs'));\n\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\n\t\titem_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tprofile_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tprofile();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    Global Form Functions\n   -------------------------- */\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\n\t// make sure ids are numeric\n\tif (isset_request_var('id') && ! is_numeric(get_filter_request_var('id'))) {\n\t\tset_request_var('id', 0);\n\t}\n\n\tif (isset_request_var('profile_id') && ! is_numeric(get_filter_request_var('profile_id'))) {\n\t\tset_request_var('profile_id', 0);\n\t}\n\n\tif (isset_request_var('save_component_profile')) {\n\t\t$save['id']             = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['hash']           = get_hash_data_source_profile(get_request_var('id'));\n\n\t\t$save['name']           = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\n\t\tif (isset_request_var('step')) {\n\t\t\t$save['step']           = form_input_validate(get_nfilter_request_var('step'), 'step', '', false, 3);\n\t\t\t$save['heartbeat']      = form_input_validate(get_nfilter_request_var('heartbeat'), 'heartbeat', '', false, 3);\n\t\t\t$save['x_files_factor'] = form_input_validate(get_nfilter_request_var('x_files_factor'), 'x_files_factor', '', false, 3);\n\t\t}\n\n\t\tif (isset_request_var('default')) {\n\t\t\t$save['default'] = (isset_request_var('default') ? 'on':'');\n\t\t\tdb_execute('UPDATE data_source_profiles SET `default`=\"\"');\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$profile_id = sql_save($save, 'data_source_profiles');\n\n\t\t\tif ($profile_id) {\n\t\t\t\tif (isset_request_var('step')) {\n\t\t\t\t\t// Validate consolidation functions\n\t\t\t\t\t$cfs = get_nfilter_request_var('consolidation_function_id');\n\t\t\t\t\tif (cacti_sizeof($cfs) && !empty($cfs)) {\n\t\t\t\t\t\tforeach($cfs as $cf) {\n\t\t\t\t\t\t\tinput_validate_input_number($cf);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdb_execute_prepared('DELETE FROM data_source_profiles_cf\n\t\t\t\t\t\t\tWHERE data_source_profile_id = ?\n\t\t\t\t\t\t\tAND consolidation_function_id NOT IN (' . implode(',', $cfs) . ')', array($profile_id));\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// Validate consolidation functions\n\t\t\t\t\t$cfs = get_nfilter_request_var('consolidation_function_id');\n\t\t\t\t\tif (cacti_sizeof($cfs) && !empty($cfs)) {\n\t\t\t\t\t\tforeach($cfs as $cf) {\n\t\t\t\t\t\t\tdb_execute_prepared('REPLACE INTO data_source_profiles_cf\n\t\t\t\t\t\t\t\t(data_source_profile_id, consolidation_function_id)\n\t\t\t\t\t\t\t\tVALUES (?, ?)', array($profile_id, $cf));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_source_profiles.php?header=false&action=edit&id=' . (empty($profile_id) ? get_request_var('id') : $profile_id));\n\t} elseif (isset_request_var('save_component_rra')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('profile_id');\n\t\t/* ==================================================== */\n\n\t\t$sampling_interval = db_fetch_cell_prepared('SELECT step\n\t\t\tFROM data_source_profiles\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('profile_id')));\n\n\t\t$save['id']                      = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['name']                    = form_input_validate(get_nfilter_request_var('name'), 'name', '', true, 3);\n\t\t$save['data_source_profile_id']  = form_input_validate(get_request_var('profile_id'), 'profile_id', '^[0-9]+$', false, 3);\n\t\t$save['timespan']                = form_input_validate(get_nfilter_request_var('timespan'), 'timespan', '^[0-9]+$', false, 3);\n\n\t\tif (isset_request_var('steps')) {\n\t\t\t$save['steps'] = form_input_validate(get_nfilter_request_var('steps'), 'steps', '^[0-9]+$', false, 3);\n\n\t\t\tif ($save['steps'] != '1') {\n\t\t\t\t$save['steps'] /= $sampling_interval;\n\t\t\t}\n\t\t}\n\n\t\tif (isset_request_var('rows')) {\n\t\t\t$save['rows'] = form_input_validate(get_nfilter_request_var('rows'), 'rows', '^[0-9]+$', false, 3);\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$profile_rra_id = sql_save($save, 'data_source_profiles_rra');\n\n\t\t\tif ($profile_rra_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: data_source_profiles.php?header=false&action=item_edit&profile_id=' . get_request_var('profile_id') . '&id=' . (empty($profile_rra_id) ? get_request_var('id') : $profile_rra_id));\n\t\t} else {\n\t\t\theader('Location: data_source_profiles.php?header=false&action=edit&id=' . get_request_var('profile_id'));\n\t\t}\n\t}\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $profile_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tdb_execute('DELETE FROM data_source_profiles WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM data_source_profiles_rra WHERE ' . array_to_sql_or($selected_items, 'data_source_profile_id'));\n\t\t\t\tdb_execute('DELETE FROM data_source_profiles_cf WHERE ' . array_to_sql_or($selected_items, 'data_source_profile_id'));\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tduplicate_data_source_profile($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_source_profiles.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$profile_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST AS $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$profile_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM data_source_profiles WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$profile_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('data_source_profiles.php');\n\n\thtml_start_box($profile_actions{get_request_var('drp_action')}, '60%', '', '3', 'center', '');\n\n\tif (isset($profile_array) && cacti_sizeof($profile_array)) {\n\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following Data Source Profile', 'Click \\'Continue\\' to delete following Data Source Profiles', cacti_sizeof($profile_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$profile_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Data Source Profile', 'Delete Data Source Profiles', cacti_sizeof($profile_array)) . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to duplicate the following Data Source Profile. You can optionally change the title format for the new Data Source Profile', 'Click \\'Continue\\' to duplicate following Data Source Profiles. You can optionally change the title format for the new Data Source Profiles.', cacti_sizeof($profile_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$profile_list</ul></div>\n\t\t\t\t\t<p>\" . __('Title Format:') . \"<br>\"; form_text_box('title_format', '<profile_title> (1)', '', '255', '30', 'text'); print \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Duplicate Data Source Profile', 'Duplicate Date Source Profiles', cacti_sizeof($profile_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: data_source_profiles.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($profile_array) ? serialize($profile_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* --------------------------\n    CDEF Item Functions\n   -------------------------- */\n\nfunction profile_item_remove_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('profile_id');\n\t/* ==================================================== */\n\n\tform_start('data_source_profiles.php');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$profile = db_fetch_row_prepared('SELECT *\n\t\tFROM data_source_profiles_rra\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Data Source Profile RRA.');?></p>\n\t\t\t<p><?php print __('Profile Name: %s', $profile['name']);?><br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\");' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove Data Source Profile RRA');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').click(function(data) {\n\t\t\t$.post('data_source_profiles.php?action=item_remove', {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}, function(data) {\n\t\t\t\t$('#cdialog').dialog('close');\n\t\t\t\tloadPageNoHeader('data_source_profiles.php?action=edit&header=false&id=<?php print $profile['data_source_profile_id'];?>');\n\t\t\t});\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction profile_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM data_source_profiles_rra WHERE id = ?', array(get_request_var('id')));\n}\n\n\nfunction item_edit() {\n\tglobal $fields_profile_rra_edit, $aggregation_levels;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('profile_id');\n\t/* ==================================================== */\n\n\t$sampling_interval = db_fetch_cell_prepared('SELECT step\n\t\tFROM data_source_profiles\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('profile_id')));\n\n\t$readonly = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM data_template_data AS dtd\n\t\tWHERE data_source_profile_id = ?\n\t\tAND local_data_id > 0',\n\t\tarray(get_request_var('profile_id')));\n\n\tif (!isempty_request_var('id')) {\n\t\t$rra = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_source_profiles_rra\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif ($rra['steps'] == '1') {\n\t\t\t$fields_profile_rra_edit['steps']['array'] = array('1' => __('Each Insert is New Row'));\n\t\t} else {\n\t\t\tforeach($aggregation_levels as $interval => $name) {\n\t\t\t\tif ($interval <= $sampling_interval) {\n\t\t\t\t\tunset($aggregation_levels[$interval]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$fields_profile_rra_edit['steps']['array'] = $aggregation_levels;\n\t\t}\n\n\t\t$fields_profile_rra_edit['steps']['value'] = $rra['steps'] * $sampling_interval;\n\t} else {\n\t\t$oneguy = db_fetch_cell_prepared('SELECT id\n\t\t\tFROM data_source_profiles_rra\n\t\t\tWHERE data_source_profile_id = ?\n\t\t\tAND steps=1',\n\t\t\tarray(get_request_var('profile_id')));\n\n\t\tif (empty($oneguy)) {\n\t\t\t$fields_profile_rra_edit['steps']['array'] = array('1' => __('Each Insert is New Row'));\n\t\t} else {\n\t\t\tforeach($aggregation_levels as $interval => $name) {\n\t\t\t\tif ($interval <= $sampling_interval) {\n\t\t\t\t\tunset($aggregation_levels[$interval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$fields_profile_rra_edit['steps']['array'] = $aggregation_levels;\n\t\t}\n\t}\n\n\tform_start('data_source_profiles.php', 'form_rra');\n\n\t$name = db_fetch_cell_prepared('SELECT name\n\t\tFROM data_source_profiles_rra\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\thtml_start_box( __('RRA [edit: %s %s]', html_escape($name), ($readonly ? __('(Some Elements Read Only)'):'')), '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => true),\n\t\t'fields' => inject_form_variables($fields_profile_rra_edit, (isset($rra) ? $rra : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('profile_id', get_request_var('profile_id'), '');\n\n\tform_save_button('data_source_profiles.php?action=edit&id=' . get_request_var('profile_id'));\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar profile_id=<?php print get_request_var('profile_id') != '' ? get_request_var('profile_id'):0;?>;\n\tvar rows_to = false;\n\tvar readonly = <?php print ($readonly ? 'true':'false');?>;\n\n\t$(function() {\n\t\tget_span();\n\t\tget_size();\n\n\t\t$('#steps').change(function() {\n\t\t\tget_span();\n\t\t\tget_size();\n\t\t});\n\n        $('#rows').keyup(function() {\n            if (rows_to) { clearTimeout(rows_to); }\n            rows_to = setTimeout(function () { get_span(); get_size() }, 250);\n        });\n\n\t\tif (readonly) {\n\t\t\t$('#steps').prop('disabled', true);\n\t\t\tif ($('#steps').selectmenu('instance')) {\n\t\t\t\t$('#steps').selectmenu('disable');\n\t\t\t}\n\n\t\t\t$('#rows').prop('disabled', true);\n\t\t\tif ($('#rows').selectmenu('instance')) {\n\t\t\t\t$('#rows').selectmenu('disable');\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction get_size() {\n\t\t$.get('data_source_profiles.php?action=ajax_size&type=rra&id='+profile_id+'&rows='+$('#rows').val())\n\t\t\t.done(function(data) {\n\t\t\t\t$('#row_size').find('.formColumnRight').empty().html('<em>'+data+'</em>');\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\t}\n\n\tfunction get_span() {\n\t\t$.get('data_source_profiles.php?action=ajax_span&profile_id='+profile_id+'&span='+$('#steps').val()+'&rows='+$('#rows').val())\n\t\t\t.done(function(data) {\n\t\t\t\t$('#row_retention').find('.formColumnRight').empty().html('<em>'+data+'</em>');\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\n\t}\n\t</script>\n\t<?php\n}\n\n/* ---------------------\n    Profile Functions\n   --------------------- */\n\nfunction profile_edit() {\n\tglobal $fields_profile_edit, $timespans;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$profile = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_source_profiles\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$readonly     = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\tFROM data_template_data AS dtd\n\t\t\tWHERE data_source_profile_id = ?\n\t\t\tAND local_data_id > 0',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Data Source Profile [edit: %s]', html_escape($profile['name']) . ($readonly ? ' (Read Only)':''));\n\t} else {\n\t\t$header_label = __('Data Source Profile [new]');\n\t\t$readonly     = false;\n\t}\n\n\tform_start('data_source_profiles.php', 'profile');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => true),\n\t\t'fields' => inject_form_variables($fields_profile_edit, (isset($profile) ? $profile : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('id')) {\n\t\tif (!$readonly) {\n\t\t\thtml_start_box( __('Data Source Profile RRAs (press save to update timespans)'), '100%', '', '3', 'center', 'data_source_profiles.php?action=item_edit&profile_id=' . $profile['id']);\n\t\t} else {\n\t\t\thtml_start_box( __('Data Source Profile RRAs (Read Only)'), '100%', '', '3', 'center', '');\n\t\t}\n\n\t\t$display_text = array(\n\t\t\tarray('display' => __('Name'),           'align' => 'left'),\n\t\t\tarray('display' => __('Data Retention'), 'align' => 'left'),\n\t\t\tarray('display' => __('Graph Timespan'), 'align' => 'left'),\n\t\t\tarray('display' => __('Steps'),          'align' => 'left'),\n\t\t\tarray('display' => __('Rows'),           'align' => 'left'),\n\t\t);\n\n\t\thtml_header($display_text, 2);\n\n\t\t$profile_rras = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM data_source_profiles_rra\n\t\t\tWHERE data_source_profile_id = ?\n\t\t\tORDER BY steps',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$i = 0;\n\t\tif (cacti_sizeof($profile_rras)) {\n\t\t\tforeach ($profile_rras as $rra) {\n\t\t\t\tform_alternate_row('line' . $rra['id']);$i++;?>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print \"<a class='linkEditMain' href='\" . html_escape('data_source_profiles.php?action=item_edit&id=' . $rra['id'] . '&profile_id=' . $rra['data_source_profile_id']) . \"'>\" . html_escape($rra['name']) . '</a>';?>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<em><?php print get_span($profile['step'] * $rra['steps'] * $rra['rows']);?></em>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<em><?php print isset($timespans[$rra['timespan']]) ? $timespans[$rra['timespan']]:get_span($rra['timespan']);?></em>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<em><?php print $rra['steps'];?></em>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<em><?php print $rra['rows'];?></em>\n\t\t\t\t</td>\n\t\t\t\t<td class='right'>\n\t\t\t\t\t<?php print (!$readonly ? \"<a id='\" . $profile['id'] . '_' . $rra['id'] . \"' class='delete deleteMarker fa fa-times' title='\" . __esc('Delete') . \"' href='#'></a>\":\"\");?>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('data_source_profiles.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar profile_id=<?php print get_request_var('id') != '' ? get_request_var('id'):0;?>;\n\n\t$(function() {\n\t\t$('body').append(\"<div id='cdialog'></div>\");\n\n        $('#consolidation_function_id').multiselect({\n            selectedList: 1,\n            noneSelectedText: '<?php print __('Select Consolidation Function(s)');?>',\n            header: false,\n            multipleRow: true,\n            multipleRowWidth: 90,\n            height: 28,\n            minWidth: 400,\n\t\t\tclick: function(event, ui){\n\t\t\t\tget_size();\n\t\t\t}\n        });\n\n\t\tget_size();\n\t\t$('consolidation_function_id').change(function() {\n\t\t\tget_size();\n\t\t});\n\n\t\t<?php if (!$readonly) {?>\n\t\t$('.delete').click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tid = $(this).attr('id').split('_');\n\t\t\trequest = 'data_source_profiles.php?action=item_remove_confirm&id='+id[1]+'&profle_id='+id[0];\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete Data Source Profile Item');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(data) {\n\t\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\t\t<?php } else { ?>\n\t\t$('#step').prop('disabled', true);\n\t\tif ($('#step').selectmenu('instance')) {\n\t\t\t$('#step').selectmenu('disable')\n\t\t}\n\n\t\t$('#x_files_factor').prop('disabled', true);\n\n\t\t$('#heartbeat').prop('disabled', true);\n\t\tif ($('#heartbeat').selectmenu('instance')) {\n\t\t\t$('#heartbeat').selectmenu('disable')\n\t\t}\n\n\t\t$('#consolidation_function_id').prop('disabled', true);\n\t\tif ($('#consolidation_function_id').multiselect('instance')) {\n\t\t\t$('#consolidation_function_id').multiselect('disable');\n\t\t}\n\t\t<?php } ?>\n\t});\n\n\tfunction get_size() {\n\t\tchecked = $('#consolidation_function_id').multiselect('getChecked').length;\n\t\t$.get('data_source_profiles.php?action=ajax_size&type=profile&id='+profile_id+'&cfs='+checked)\n\t\t\t.done(function(data) {\n\t\t\t\t$('#row_size').find('.formColumnRight').empty().html('<em>'+data+'</em>');\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\t}\n\n\t</script>\n\t<?php\n}\n\nfunction get_size($id, $type, $cfs = '') {\n\t// On x86_64 platform, here is the equation\n\t// file_size = $header + (# data sources * 300) + (# cfs * #rows in all RRAs)\n\t$header   = 284;\n\t$dsheader = 300;\n\t$row      = 8;\n\n\tif ($type == 'profile') {\n\t\tif (empty($cfs)) {\n\t\t\t$cfs  = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\tFROM data_source_profiles_cf\n\t\t\t\tWHERE data_source_profile_id = ?',\n\t\t\t\tarray($id));\n\t\t}\n\n\t\t$rows = db_fetch_cell_prepared('SELECT SUM(`rows`)\n\t\t\tFROM data_source_profiles_rra\n\t\t\tWHERE data_source_profile_id = ?',\n\t\t\tarray($id));\n\n\t\treturn __('%s KBytes per Data Sources and %s Bytes for the Header', number_format_i18n(($rows * $row * $cfs + $dsheader) / 1000), $header);\n\t} else {\n\t\t$cfs  = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\tFROM data_source_profiles_cf\n\t\t\tWHERE data_source_profile_id = ?',\n\t\t\tarray($id));\n\n\t\t$rows = get_filter_request_var('rows');\n\n\t\treturn __('%s KBytes per Data Source', number_format_i18n(($rows * $row * $cfs) / 1000));\n\t}\n}\n\nfunction get_span($duration) {\n\t$years  = '';\n\t$months = '';\n\t$weeks  = '';\n\t$days   = '';\n\t$output = '';\n\n\tif ($duration > 31536000) {\n\t\tif (floor($duration/31536000) > 0) {\n\t\t\t$years     = floor($duration/31536000);\n\t\t\t$years\t   = ( $years == 1 ) ? __('1 Year') : __('%d Years', $years);\n\t\t\t$duration %= 31536000;\n\t\t\t$output    = $years;\n\t\t}\n\t}\n\n\tif ($duration > 2592000) {\n\t\tif (floor($duration/2592000)) {\n\t\t\t$months    = floor($duration/2592000);\n\t\t\t$months    = ( $months == 1 ) ? __('%d Month', 1) : __('%d Months', $months);\n\t\t\t$duration %= 2592000;\n\t\t\t$output   .= ($output != '' ? ', ' : '') . $months;\n\t\t}\n\t}\n\n\tif ($duration > 604800) {\n\t\tif (floor($duration/604800) > 0) {\n\t\t\t$weeks     = floor($duration/604800);\n\t\t\t$weeks     = ( $weeks == 1 ) ? __('%d Week', 1) : __('%d Weeks', $weeks);\n\t\t\t$duration %= 604800;\n\t\t\t$output   .= ($output != '' ? ', ' : '') . $weeks;\n\t\t}\n\t}\n\n\tif ($duration > 86400) {\n\t\tif (floor($duration/86400) > 0) {\n\t\t\t$days      = floor($duration/86400);\n\t\t\t$days      = ( $days == 1 ) ? __('%d Day', 1) : __('%d Days', $days);\n\t\t\t$duration %= 86400;\n\t\t\t$output   .= ($output != '' ? ', ' : '') . $days;\n\t\t}\n\t}\n\n\tif (floor($duration/3600) > 0) {\n\t\t$hours   = floor($duration/3600);\n\t\t$hours   = ( $hours == 1 ) ? __('1 Hour') : __('%d Hours', $hours);\n\t\t$output .= ($output != '' ? ', ' : '') . $hours;\n\t}\n\n\treturn $output;\n}\n\nfunction profile() {\n\tglobal $profile_actions, $item_rows, $sampling_intervals, $heartbeats, $config;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'step',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_data' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_dsp');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box( __('Data Source Profiles'), '100%', '', '3', 'center', 'data_source_profiles.php?action=edit');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_dsp' action='data_source_profiles.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' name='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Profiles');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='has_data' <?php print (get_request_var('has_data') == 'true' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='has_data'><?php print __('Has Data Sources');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type='text/javascript'>\n\n\t\t\tfunction applyFilter() {\n\t\t\t\tstrURL  = 'data_source_profiles.php?header=false';\n\t\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\t\tstrURL += '&has_data='+$('#has_data').is(':checked');\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = 'data_source_profiles.php?clear=1&header=false';\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\t$('#refresh').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#has_data').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#form_dsp').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('has_data') == 'true') {\n\t\t$sql_having = 'HAVING data_sources>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(`rows`)\n\t\tFROM (\n\t\t\tSELECT dsp.id AS `rows`,\n\t\t\tSUM(CASE WHEN local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\t\tFROM data_source_profiles AS dsp\n\t\t\tLEFT JOIN data_template_data AS dtd\n\t\t\tON dsp.id=dtd.data_source_profile_id\n\t\t\t$sql_where\n\t\t\tGROUP BY dsp.id\n\t\t\t$sql_having\n\t\t) AS rs\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$profile_list = db_fetch_assoc(\"SELECT rs.*,\n\t\tSUM(CASE WHEN local_data_id=0 THEN 1 ELSE 0 END) AS templates,\n\t\tSUM(CASE WHEN local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\tFROM (\n\t\t\tSELECT dsp.*, dtd.local_data_id\n\t\t\tFROM data_source_profiles AS dsp\n\t\t\tLEFT JOIN data_template_data AS dtd\n\t\t\tON dsp.id=dtd.data_source_profile_id\n\t\t\tGROUP BY dsp.id, dtd.data_template_id, dtd.local_data_id\n\t\t) AS rs\n\t\t$sql_where\n\t\tGROUP BY rs.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('data_source_profiles.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 9, __('Profiles'), 'page', 'main');\n\n\tform_start('data_source_profiles.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array('display' => __('Data Source Profile Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this CDEF.')),\n\t\t'nosort00' => array('display' => __('Default'), 'align' => 'right', 'tip' => __('Is this the default Profile for all new Data Templates?')),\n\t\t'nosort01' => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('Profiles that are in use cannot be Deleted. In use is defined as being referenced by a Data Source or a Data Template.')),\n\t\t'nosort02' => array('display' => __('Read Only'), 'align' => 'right', 'tip' => __('Profiles that are in use by Data Sources become read only for now.')),\n\t\t'step' => array('display' => __('Poller Interval'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The Polling Frequency for the Profile')),\n\t\t'heartbeat' => array('display' => __('Heartbeat'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The Amount of Time, in seconds, without good data before Data is stored as Unknown')),\n\t\t'data_sources' => array('display' => __('Data Sources Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Data Sources using this Profile.')),\n\t\t'templates' => array('display' => __('Templates Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Data Templates using this Profile.')));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($profile_list)) {\n\t\tforeach ($profile_list as $profile) {\n\t\t\tif ($profile['data_sources'] == 0 && $profile['templates'] == 0) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\tif ($profile['data_sources']) {\n\t\t\t\t$readonly = true;\n\t\t\t} else {\n\t\t\t\t$readonly = false;\n\t\t\t}\n\n\t\t\tif ($profile['data_sources'] > 0) {\n\t\t\t\t$ds = '<a class=\"linkEditMain\" href=\"' . $config['url_path'] . 'data_sources.php?reset=true&profile=' . $profile['id'] . '\">' . number_format_i18n($profile['data_sources'], '-1') . '</a>';\n\t\t\t} else {\n\t\t\t\t$ds = number_format_i18n($profile['data_sources'], '-1');\n\t\t\t}\n\n\t\t\tif ($profile['templates'] > 0) {\n\t\t\t\t$dt = '<a class=\"linkEditMain\" href=\"' . $config['url_path'] . 'data_templates.php?reset=true&profile=' . $profile['id'] . '\">' . number_format_i18n($profile['templates'], '-1') . '</a>';\n\t\t\t} else {\n\t\t\t\t$dt = number_format_i18n($profile['templates'], '-1');\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $profile['id'], false, $disabled);\n\t\t\tform_selectable_cell(filter_value($profile['name'], get_request_var('filter'), 'data_source_profiles.php?action=edit&id=' . $profile['id']), $profile['id']);\n\t\t\tform_selectable_cell($profile['default'] == 'on' ? __('Yes'):'', $profile['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($disabled ? __('No') : __('Yes'), $profile['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($readonly ? __('Yes') : __('No'), $profile['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($sampling_intervals[$profile['step']], $profile['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($heartbeats[$profile['heartbeat']], $profile['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($ds, $profile['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($dt, $profile['id'], '', 'text-align:right');\n\t\t\tform_checkbox_cell($profile['name'], $profile['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='4'><em>\" . __('No Data Source Profiles Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($profile_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($profile_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude ('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/html_form_template.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/rrd.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n$ds_actions = array(\n\t1 => __('Delete'),\n\t3 => __('Change Device'),\n\t8 => __('Reapply Suggested Names'),\n\t6 => __('Enable'),\n\t7 => __('Disable')\n);\n\n$ds_actions = api_plugin_hook_function('data_source_action_array', $ds_actions);\n\n/* set default action */\nset_default_action();\n\nvalidate_data_source_vars();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'rrd_add':\n\t\tds_rrd_add();\n\n\t\tbreak;\n\tcase 'rrd_remove':\n\t\tds_rrd_remove();\n\n\t\tbreak;\n\tcase 'data_edit':\n\t\ttop_header();\n\n\t\tdata_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'ds_remove':\n\t\tds_remove();\n\n\t\theader ('Location: data_sources.php');\n\t\tbreak;\n\tcase 'ds_edit':\n\t\tds_edit();\n\n\t\tbreak;\n\tcase 'ajax_hosts':\n\t\t$sql_where = '';\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where = 'site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(true, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\tcase 'ajax_hosts_noany':\n\n\t\t$sql_where = '';\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where = 'site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(false, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tds();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tif ((isset_request_var('save_component_data_source_new')) && (!isempty_request_var('data_template_id'))) {\n\t\t$save['id']               = get_filter_request_var('local_data_id');\n\t\t$save['host_id']          = get_filter_request_var('host_id');\n\t\t$save['data_template_id'] = get_filter_request_var('data_template_id');\n\n\t\t$local_data_id = sql_save($save, 'data_local');\n\n\t\tchange_data_template($local_data_id, get_request_var('data_template_id'));\n\n\t\t/* update the title cache */\n\t\tupdate_data_source_title_cache($local_data_id);\n\n\t\t/* update host data */\n\t\tif (!isempty_request_var('host_id')) {\n\t\t\tpush_out_host(get_request_var('host_id'), $local_data_id);\n\t\t}\n\t}\n\n\tif ((isset_request_var('save_component_data')) && (!is_error_message())) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('data_template_data_id');\n\t\t/* ==================================================== */\n\n\t\t/* ok, first pull out all 'input' values so we know how much to save */\n\t\t$input_fields = db_fetch_assoc_prepared(\"SELECT dtd.data_input_id, dl.host_id, dif.id, dif.input_output,\n\t\t\tdif.data_name, dif.regexp_match, dif.allow_nulls, dif.type_code\n\t\t\tFROM data_template_data AS dtd\n\t\t\tLEFT JOIN data_input_fields AS dif\n\t\t\tON dif.data_input_id = dtd.data_input_id\n\t\t\tLEFT JOIN data_local AS dl\n\t\t\tON dtd.local_data_id = dl.id\n\t\t\tWHERE dtd.id = ?\n\t\t\tAND dif.input_output='in'\",\n\t\t\tarray(get_request_var('data_template_data_id')));\n\n\t\tif (cacti_sizeof($input_fields)) {\n\t\t\tforeach ($input_fields as $input_field) {\n\t\t\t\tif (isset_request_var('value_' . $input_field['id'])) {\n\t\t\t\t\t/* save the data into the 'data_input_data' table */\n\t\t\t\t\t$form_value = get_nfilter_request_var('value_' . $input_field['id']);\n\n\t\t\t\t\t/* we shouldn't enforce rules on fields the user cannot see (ie. templated ones) */\n\t\t\t\t\t$data_template_id = db_fetch_cell_prepared('SELECT local_data_template_data_id\n\t\t\t\t\t\tFROM data_template_data\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray(get_request_var('data_template_data_id'))\n\t\t\t\t\t);\n\n\t\t\t\t\t$is_templated = db_fetch_cell_prepared('SELECT t_value\n\t\t\t\t\t\tFROM data_input_data\n\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\tAND data_template_data_id = ?',\n\t\t\t\t\t\tarray($input_field['id'], $data_template_id)\n\t\t\t\t\t);\n\n\t\t\t\t\tif ($is_templated == '') {\n\t\t\t\t\t\t$allow_nulls = true;\n\t\t\t\t\t} elseif ($input_field['allow_nulls'] == 'on') {\n\t\t\t\t\t\t$allow_nulls = true;\n\t\t\t\t\t} elseif (empty($input_field['allow_nulls'])) {\n\t\t\t\t\t\t$allow_nulls = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* run regexp match on input string */\n\t\t\t\t\t$form_value = form_input_validate($form_value, 'value_' . $input_field['id'], $input_field['regexp_match'], $allow_nulls, 3);\n\n\t\t\t\t\tif (!is_error_message()) {\n\t\t\t\t\t\tdb_execute_prepared(\"REPLACE INTO data_input_data\n\t\t\t\t\t\t\t(data_input_field_id, data_template_data_id, t_value, value)\n\t\t\t\t\t\t\tVALUES\n\t\t\t\t\t\t\t(?, ?, '', ?)\",\n\t\t\t\t\t\t\tarray($input_field['id'], get_request_var('data_template_data_id'), $form_value)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif ((isset_request_var('save_component_data_source')) && (!is_error_message())) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('current_rrd');\n\t\tget_filter_request_var('rrd_step');\n\t\tget_filter_request_var('data_input_id');\n\t\tget_filter_request_var('data_source_profile_id');\n\t\tget_filter_request_var('host_id');\n\t\tget_filter_request_var('_host_id');\n\t\tget_filter_request_var('_data_template_id');\n\t\t/* ==================================================== */\n\n\t\t$save1['id']               = get_filter_request_var('local_data_id');\n\t\t$save1['data_template_id'] = get_filter_request_var('data_template_id');\n\t\t$save1['host_id']          = get_filter_request_var('host_id');\n\n\t\t$save2['id']                          = get_filter_request_var('data_template_data_id');\n\t\t$save2['local_data_template_data_id'] = get_filter_request_var('local_data_template_data_id');\n\t\t$save2['data_template_id']            = get_filter_request_var('data_template_id');\n\t\t$save2['data_input_id']               = form_input_validate(get_request_var('data_input_id'), 'data_input_id', '^[0-9]+$', true, 3);\n\t\t$save2['name']                        = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save2['data_source_path']            = form_input_validate(get_nfilter_request_var('data_source_path'), 'data_source_path', '', true, 3);\n\t\t$save2['active']                      = form_input_validate((isset_request_var('active') ? get_nfilter_request_var('active') : ''), 'active', '', true, 3);\n\t\t$save2['data_source_profile_id']      = form_input_validate(get_request_var('data_source_profile_id'), 'data_source_profile_id', '^[0-9]+$', false, 3);\n\t\t$save2['rrd_step']                    = form_input_validate(get_request_var('rrd_step'), 'rrd_step', '^[0-9]+$', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$local_data_id = sql_save($save1, 'data_local');\n\n\t\t\t$save2['local_data_id'] = $local_data_id;\n\t\t\t$data_template_data_id = sql_save($save2, 'data_template_data');\n\n\t\t\tif ($data_template_data_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t/* if this is a new data source and a template has been selected, skip item creation this time\n\t\t\totherwise it throws off the templatate creation because of the NULL data */\n\t\t\tif (!isempty_request_var('local_data_id') || isempty_request_var('data_template_id')) {\n\t\t\t\t/* if no template was set before the save, there will be only one data source item to save;\n\t\t\t\totherwise there might be >1 */\n\t\t\t\tif (isempty_request_var('_data_template_id')) {\n\t\t\t\t\t$rrds[0]['id'] = get_nfilter_request_var('current_rrd');\n\t\t\t\t} else {\n\t\t\t\t\t$rrds = db_fetch_assoc_prepared('SELECT id\n\t\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\t\tWHERE local_data_id = ?',\n\t\t\t\t\t\tarray(get_filter_request_var('local_data_id')));\n\t\t\t\t}\n\n\t\t\t\tif (cacti_sizeof($rrds)) {\n\t\t\t\t\tforeach ($rrds as $rrd) {\n\t\t\t\t\t\tif (isempty_request_var('_data_template_id')) {\n\t\t\t\t\t\t\t$name_modifier = '';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$name_modifier = '_' . $rrd['id'];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$save3['id'] = $rrd['id'];\n\t\t\t\t\t\t$save3['local_data_id'] = $local_data_id;\n\n\t\t\t\t\t\t$save3['local_data_template_rrd_id'] = db_fetch_cell_prepared('SELECT local_data_template_rrd_id\n\t\t\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\tarray($rrd['id']));\n\n\t\t\t\t\t\t$save3['data_template_id'] = get_filter_request_var('data_template_id');\n\t\t\t\t\t\t$save3['rrd_maximum'] = form_input_validate(get_nfilter_request_var(\"rrd_maximum$name_modifier\"), \"rrd_maximum$name_modifier\", \"^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$|\\|query_ifSpeed\\||\\|query_ifHighSpeed\\|\", false, 3);\n\t\t\t\t\t\t$save3['rrd_minimum'] = form_input_validate(get_nfilter_request_var(\"rrd_minimum$name_modifier\"), \"rrd_minimum$name_modifier\", \"^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$|\\|query_ifSpeed\\||\\|query_ifHighSpeed\\|\", false, 3);\n\t\t\t\t\t\t$save3['rrd_heartbeat'] = form_input_validate(get_nfilter_request_var(\"rrd_heartbeat$name_modifier\"), \"rrd_heartbeat$name_modifier\", '^[0-9]+$', false, 3);\n\t\t\t\t\t\t$save3['data_source_type_id'] = form_input_validate(get_nfilter_request_var(\"data_source_type_id$name_modifier\"), \"data_source_type_id$name_modifier\", '^[0-9]+$', false, 3);\n\t\t\t\t\t\t$save3['data_source_name'] = form_input_validate(get_nfilter_request_var(\"data_source_name$name_modifier\"), \"data_source_name$name_modifier\", '^[a-zA-Z0-9_-]{1,19}$', false, 3);\n\t\t\t\t\t\t$save3['data_input_field_id'] = form_input_validate((isset_request_var(\"data_input_field_id$name_modifier\") ? get_nfilter_request_var(\"data_input_field_id$name_modifier\") : '0'), \"data_input_field_id$name_modifier\", '', true, 3);\n\n\t\t\t\t\t\t$data_template_rrd_id = sql_save($save3, 'data_template_rrd');\n\n\t\t\t\t\t\tif ($data_template_rrd_id) {\n\t\t\t\t\t\t\traise_message(1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\traise_message(2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\tif (get_request_var('data_template_id') != get_request_var('_data_template_id')) {\n\t\t\t\t/* update all necessary template information */\n\t\t\t\tchange_data_template($local_data_id, get_request_var('data_template_id'));\n\t\t\t} elseif (!isempty_request_var('data_template_id')) {\n\t\t\t\tupdate_data_source_data_query_cache($local_data_id);\n\t\t\t}\n\n\t\t\tif (get_request_var('host_id') != get_request_var('_host_id')) {\n\t\t\t\t/* push out all necessary host information */\n\t\t\t\tpush_out_host(get_request_var('host_id'), $local_data_id);\n\n\t\t\t\t/* reset current host for display purposes */\n\t\t\t\t$_SESSION['sess_data_source_current_host_id'] = get_request_var('host_id');\n\t\t\t}\n\n\t\t\t/* if no data source path has been entered, generate one */\n\t\t\tif (isempty_request_var('data_source_path')) {\n\t\t\t\tgenerate_data_source_path($local_data_id);\n\t\t\t}\n\n\t\t\t/* update the title cache */\n\t\t\tupdate_data_source_title_cache($local_data_id);\n\t\t}\n\t}\n\n\t/* update the poller cache last to make sure everything is fresh */\n\tif ((!is_error_message()) && (!empty($local_data_id))) {\n\t\tupdate_poller_cache($local_data_id, true);\n\t}\n\n\tif (isset_request_var('save_component_data_source_new') && isempty_request_var('data_template_id')) {\n\t\theader('Location: data_sources.php?header=false&action=ds_edit&host_id=' . get_request_var('host_id') . '&new=1');\n\t} elseif ((is_error_message()) || (get_filter_request_var('data_template_id') != get_filter_request_var('_data_template_id')) || (get_filter_request_var('data_input_id') != get_filter_request_var('_data_input_id')) || (get_filter_request_var('host_id') != get_filter_request_var('_host_id'))) {\n\t\theader('Location: data_sources.php?header=false&action=ds_edit&id=' . (empty($local_data_id) ? get_filter_request_var('local_data_id') : $local_data_id) . '&host_id=' . get_request_var('host_id') . '&view_rrd=' . (isset_request_var('current_rrd') ? get_nfilter_request_var('current_rrd') : '0'));\n\t} else {\n\t\theader('Location: data_sources.php?header=false');\n\t}\n}\n\n/* ------------------------\n    The \"actions\" function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $ds_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tif (!isset_request_var('delete_type')) {\n\t\t\t\t\tset_request_var('delete_type', 1);\n\t\t\t\t} else {\n\t\t\t\t\tget_filter_request_var('delete_type');\n\t\t\t\t}\n\n\t\t\t\tswitch (get_request_var('delete_type')) {\n\t\t\t\t\tcase '2': /* delete all graph items tied to this data source */\n\t\t\t\t\t\t$data_template_rrds = array_rekey(db_fetch_assoc('SELECT id\n\t\t\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'local_data_id')), 'id', 'id');\n\n\t\t\t\t\t\t$poller_ids = db_fetch_assoc('SELECT DISTINCT poller_id\n\t\t\t\t\t\t\tFROM host AS h\n\t\t\t\t\t\t\tINNER JOIN data_local AS dl\n\t\t\t\t\t\t\tON dl.host_id=h.id\n\t\t\t\t\t\t\tWHERE poller_id > 1\n\t\t\t\t\t\t\tAND id IN (' . implode(', ', $selected_items) . ')');\n\n\t\t\t\t\t\tapi_plugin_hook_function('graph_items_remove', $data_template_rrds);\n\n\t\t\t\t\t\t/* loop through each data source item */\n\t\t\t\t\t\tif (cacti_sizeof($data_template_rrds) > 0) {\n\t\t\t\t\t\t\tdb_execute('DELETE FROM graph_templates_item\n\t\t\t\t\t\t\t\tWHERE task_item_id IN (' . implode(',', $data_template_rrds) . ')\n\t\t\t\t\t\t\t\tAND local_graph_id > 0');\n\n\t\t\t\t\t\t\tif (sizeof($poller_ids)) {\n\t\t\t\t\t\t\t\tforeach($poller_ids as $poller_id) {\n\t\t\t\t\t\t\t\t\tif (($rcnn_id = poller_push_to_remote_db_connect($poller_id, true)) !== false) {\n\t\t\t\t\t\t\t\t\t\tdb_execute('DELETE FROM graph_templates_item\n\t\t\t\t\t\t\t\t\t\t\tWHERE task_item_id IN (' . implode(',', $data_template_rrds) . ')\n\t\t\t\t\t\t\t\t\t\t\tAND local_graph_id > 0', true, $rcnn_id);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '3': /* delete all graphs tied to this data source */\n\t\t\t\t\t\t$graphs = array_rekey(db_fetch_assoc('SELECT\n\t\t\t\t\t\t\tgraph_templates_graph.local_graph_id\n\t\t\t\t\t\t\tFROM (data_template_rrd,graph_templates_item,graph_templates_graph)\n\t\t\t\t\t\t\tWHERE graph_templates_item.task_item_id=data_template_rrd.id\n\t\t\t\t\t\t\tAND graph_templates_item.local_graph_id=graph_templates_graph.local_graph_id\n\t\t\t\t\t\t\tAND ' . array_to_sql_or($selected_items, 'data_template_rrd.local_data_id') . '\n\t\t\t\t\t\t\tAND graph_templates_graph.local_graph_id > 0\n\t\t\t\t\t\t\tGROUP BY graph_templates_graph.local_graph_id'), 'local_graph_id', 'local_graph_id');\n\n\t\t\t\t\t\tif (cacti_sizeof($graphs) > 0) {\n\t\t\t\t\t\t\tapi_graph_remove_multi($graphs);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tapi_data_source_remove_multi($selected_items);\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // change host\n\t\t\t\tget_filter_request_var('host_id');\n\n\t\t\t\tapi_data_source_change_host($selected_items, get_request_var('host_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '6') { // data source enable\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_data_source_enable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '7') { // data source disable\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_data_source_disable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '8') { // reapply suggested data source naming\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_reapply_suggested_data_source_data($selected_items[$i]);\n\t\t\t\t\tupdate_data_source_title_cache($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tapi_plugin_hook_function('data_source_action_execute', get_nfilter_request_var('drp_action'));\n\t\t\t}\n\t\t}\n\n\t\t/* update snmpcache */\n\t\tsnmpagent_data_source_action_bottom(array(get_nfilter_request_var('drp_action'), $selected_items));\n\n\t\tapi_plugin_hook_function('data_source_action_bottom', array(get_nfilter_request_var('drp_action'), $selected_items));\n\n\t\theader('Location: data_sources.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$ds_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$ds_list .= '<li>' . html_escape(get_data_source_title($matches[1])) . '</li>';\n\t\t\t$ds_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('data_sources.php');\n\n\thtml_start_box($ds_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($ds_array) && cacti_sizeof($ds_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t$graphs = array();\n\n\t\t\t/* find out which (if any) graphs are using this data source, so we can tell the user */\n\t\t\tif (isset($ds_array)) {\n\t\t\t\t$graphs = db_fetch_assoc('SELECT\n\t\t\t\t\tgraph_templates_graph.local_graph_id,\n\t\t\t\t\tgraph_templates_graph.title_cache\n\t\t\t\t\tFROM (data_template_rrd,graph_templates_item,graph_templates_graph)\n\t\t\t\t\tWHERE graph_templates_item.task_item_id=data_template_rrd.id\n\t\t\t\t\tAND graph_templates_item.local_graph_id=graph_templates_graph.local_graph_id\n\t\t\t\t\tAND ' . array_to_sql_or($ds_array, 'data_template_rrd.local_data_id') . '\n\t\t\t\t\tAND graph_templates_graph.local_graph_id > 0\n\t\t\t\t\tGROUP BY graph_templates_graph.local_graph_id\n\t\t\t\t\tORDER BY graph_templates_graph.title_cache');\n\t\t\t}\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following Data Source', 'Click \\'Continue\\' to delete following Data Sources', cacti_sizeof($ds_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\";\n\n\t\t\tif (cacti_sizeof($graphs)) {\n\t\t\t\tprint \"<tr><td class='textArea'><p class='textArea'>\" . __n('The following graph is using these data sources:', 'The following graphs are using these data sources:', cacti_sizeof($graphs)) . \"</p>\\n\";\n\n\t\t\t\tprint '<div class=\"itemlist\"><ul>';\n\t\t\t\tforeach ($graphs as $graph) {\n\t\t\t\t\tprint '<li>' . html_escape($graph['title_cache']) . \"</li>\\n\";\n\t\t\t\t}\n\t\t\t\tprint '</ul></div>';\n\t\t\t\tprint '<br>';\n\n\t\t\t\tform_radio_button('delete_type', '3', '1', __n('Leave the <strong>Graph</strong> untouched.', 'Leave all <strong>Graphs</strong> untouched.', cacti_sizeof($graphs)), '1'); print '<br>';\n\t\t\t\tform_radio_button('delete_type', '3', '2', __n('Delete all <strong>Graph Items</strong> that reference this Data Source.', 'Delete all <strong>Graph Items</strong> that reference these Data Sources.', cacti_sizeof($ds_array)), '1'); print '<br>';\n\t\t\t\tform_radio_button('delete_type', '3', '3', __n('Delete all <strong>Graphs</strong> that reference this Data Source.', 'Delete all <strong>Graphs</strong> that reference these Data Sources.', cacti_sizeof($ds_array)), '1'); print '<br>';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\tprint \"</td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Data Source', 'Delete Data Sources', cacti_sizeof($ds_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // change host\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Choose a new Device for this Data Source and click \\'Continue\\'.', 'Choose a new Device for these Data Sources and click \\'Continue\\'', cacti_sizeof($ds_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\n\t\t\t\t\t<p>\" . __('New Device:') . \"<br>\"; form_dropdown('host_id', db_fetch_assoc(\"SELECT id, CONCAT_WS('',description,' (',hostname,')') AS name FROM host ORDER BY description, hostname\"),'name','id','','','0'); print \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Change Device') . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '6') { // data source enable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to enable the following Data Source.', 'Click \\'Continue\\' to enable all following Data Sources.', cacti_sizeof($ds_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Enable Data Source', 'Enable Data Sources', cacti_sizeof($ds_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '7') { // data source disable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to disable the following Data Source.', 'Click \\'Continue\\' to disable all following Data Sources.', cacti_sizeof($ds_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Disable Data Source', 'Disable Data Sources', cacti_sizeof($ds_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '8') { // reapply suggested data source naming\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to re-apply the suggested name to the following Data Source.', 'Click \\'Continue\\' to re-apply the suggested names to all following Data Sources.', cacti_sizeof($ds_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Reapply Suggested Naming to Data Source', 'Reapply Suggested Naming to Data Sources', cacti_sizeof($ds_array)) . \"'>\";\n\t\t} else {\n\t\t\t$save['drp_action'] = get_nfilter_request_var('drp_action');\n\t\t\t$save['ds_list'] = $ds_list;\n\t\t\t$save['ds_array'] = (isset($ds_array)? $ds_array : array());\n\t\t\tapi_plugin_hook_function('data_source_action_prepare', $save);\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: data_sources.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($ds_array) ? serialize($ds_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* ----------------------------\n    data - Custom Data\n   ---------------------------- */\n\nfunction data_edit($incform = true) {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$data = db_fetch_row_prepared('SELECT id, data_input_id, data_template_id, name, local_data_id\n\t\t\tFROM data_template_data\n\t\t\tWHERE local_data_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$template_data = db_fetch_row_prepared('SELECT id, data_input_id\n\t\t\tFROM data_template_data\n\t\t\tWHERE data_template_id = ?\n\t\t\tAND local_data_id = 0',\n\t\t\tarray($data['data_template_id']));\n\n\t\t$host = db_fetch_row_prepared('SELECT host.id, host.hostname\n\t\t\tFROM (data_local, host)\n\t\t\tWHERE data_local.host_id = host.id\n\t\t\tAND data_local.id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\tif ($incform) {\n\t\tform_start('data_sources.php', 'data_source_edit');\n\t}\n\n\t$i = 0;\n\tif (!empty($data['data_input_id'])) {\n\t\t/* get each INPUT field for this data input source */\n\t\t$fields = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output = \"in\"\n\t\t\tORDER BY name',\n\t\t\tarray($data['data_input_id'])\n\t\t);\n\n\t\t$data_input_name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM data_input\n\t\t\tWHERE id = ?',\n\t\t\tarray($data['data_input_id']));\n\n\t\thtml_start_box(__('Custom Data [data input: %s]', html_escape($data_input_name)), '100%', '', '3', 'center', '');\n\n\t\t/* loop through each field found */\n\t\tif (cacti_sizeof($fields) > 0) {\n\t\t\tforeach ($fields as $field) {\n\t\t\t\t$data_input_data = db_fetch_row_prepared('SELECT *\n\t\t\t\t\tFROM data_input_data\n\t\t\t\t\tWHERE data_template_data_id = ?\n\t\t\t\t\tAND data_input_field_id = ?',\n\t\t\t\t\tarray($data['id'], $field['id'])\n\t\t\t\t);\n\n\t\t\t\tif (cacti_sizeof($data_input_data) > 0) {\n\t\t\t\t\t$old_value = $data_input_data['value'];\n\t\t\t\t} else {\n\t\t\t\t\t$old_value = '';\n\t\t\t\t}\n\n\t\t\t\t/* if data template then get t_value FROM template, else always allow user input */\n\t\t\t\tif (empty($data['data_template_id'])) {\n\t\t\t\t\t$can_template = 'on';\n\t\t\t\t} else {\n\t\t\t\t\t$can_template = db_fetch_cell_prepared('SELECT t_value\n\t\t\t\t\t\tFROM data_input_data\n\t\t\t\t\t\tWHERE data_template_data_id = ?\n\t\t\t\t\t\tAND data_input_field_id = ?',\n\t\t\t\t\t\tarray($template_data['id'], $field['id'])\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tform_alternate_row();\n\n\t\t\t\tif ((!empty($host['id'])) && (preg_match('/^' . VALID_HOST_FIELDS . '$/i', $field['type_code']))) {\n\t\t\t\t\tprint \"<td style='width:50%;'><strong>\" . html_escape($field['name']) . '</strong> ' . __('(From Device: %s)', html_escape($host['hostname'])) . \"</td>\\n\";\n\t\t\t\t\tprint \"<td><em>\" . html_escape($old_value) . \"</em></td>\\n\";\n\t\t\t\t} elseif (empty($can_template)) {\n\t\t\t\t\tprint \"<td style='width:50%;'><strong>\" . html_escape($field['name']) . '</strong> ' . __('(From Data Template)') . \"</td>\\n\";\n\t\t\t\t\tprint '<td><em>' . (empty($old_value) ? __('Nothing Entered') : html_escape($old_value)) . \"</em></td>\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tprint \"<td style='width:50%;'><strong>\" . html_escape($field['name']) . \"</strong></td>\\n\";\n\t\t\t\t\tprint '<td>';\n\n\t\t\t\t\tdraw_custom_data_row('value_' . $field['id'], $field['id'], $data['id'], $old_value);\n\n\t\t\t\t\tprint '</td>';\n\t\t\t\t}\n\n\t\t\t\tprint \"</tr>\\n\";\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Input Fields for the Selected Data Input Source') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tif ($incform) {\n\t\tform_hidden_box('local_data_id', (isset($data) ? $data['local_data_id'] : '0'), '');\n\t\tform_hidden_box('data_template_data_id', (isset($data) ? $data['id'] : '0'), '');\n\t}\n\n\tform_hidden_box('save_component_data', '1', '');\n}\n\n/* ------------------------\n    Data Source Functions\n   ------------------------ */\n\nfunction ds_rrd_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM data_template_rrd\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('UPDATE graph_templates_item\n\t\tSET task_item_id = 0\n\t\tWHERE task_item_id = ?',\n\t\tarray(get_request_var('id')));\n\n\theader('Location: data_sources.php?header=false&action=ds_edit&id=' . get_request_var('local_data_id'));\n}\n\nfunction ds_rrd_add() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared(\"INSERT INTO data_template_rrd\n\t\t(local_data_id, rrd_maximum, rrd_minimum, rrd_heartbeat, data_source_type_id, data_source_name)\n\t\tVALUES (?, 100, 0, 600, 1, 'ds')\",\n\t\tarray(get_request_var('id')));\n\n\t$data_template_rrd_id = db_fetch_insert_id();\n\n\theader('Location: data_sources.php?header=false&action=ds_edit&id=' . get_request_var('id') . \"&view_rrd=$data_template_rrd_id\");\n}\n\nfunction ds_edit() {\n\tglobal $struct_data_source, $struct_data_source_item;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_id');\n\t/* ==================================================== */\n\n\tapi_plugin_hook('data_source_edit_top');\n\n\t$use_data_template = true;\n\t$data_template     = array();\n\n\tif (!isempty_request_var('id')) {\n\t\t$data_local = db_fetch_row_prepared('SELECT host_id, data_template_id\n\t\t\tFROM data_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$data = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_template_data\n\t\t\tWHERE local_data_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (isset($data_local['data_template_id']) && $data_local['data_template_id'] >= 0) {\n\t\t\t$data_template = db_fetch_row_prepared('SELECT id, name\n\t\t\t\tFROM data_template\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($data_local['data_template_id']));\n\n\t\t\t$data_template_data = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM data_template_data\n\t\t\t\tWHERE data_template_id = ?\n\t\t\t\tAND local_data_id = 0',\n\t\t\t\tarray($data_local['data_template_id']));\n\t\t} else {\n\t\t\traise_message(11);\n\t\t\theader ('Location: data_sources.php');\n\t\t\texit;\n\t\t}\n\n\t\t$header_label = __('Data Template Selection [edit: %s]', html_escape(get_data_source_title(get_request_var('id'))));\n\n\t\tif (empty($data_local['data_template_id'])) {\n\t\t\t$use_data_template = false;\n\t\t}\n\t} else {\n\t\t$header_label = __('Data Template Selection [new]');\n\n\t\t$use_data_template = false;\n\t}\n\n\t/* handle debug mode */\n\tif (isset_request_var('debug')) {\n\t\tif (get_nfilter_request_var('debug') == '0') {\n\t\t\tkill_session_var('ds_debug_mode');\n\t\t} elseif (get_nfilter_request_var('debug') == '1') {\n\t\t\t$_SESSION['ds_debug_mode'] = true;\n\t\t}\n\t}\n\n\t/* handle debug mode */\n\tif (isset_request_var('info')) {\n\t\tif (get_nfilter_request_var('info') == '0') {\n\t\t\tkill_session_var('ds_info_mode');\n\t\t} elseif (get_nfilter_request_var('info') == '1') {\n\t\t\t$_SESSION['ds_info_mode'] = true;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tif (!isempty_request_var('id')) {\n\t\t?>\n\t\t<table style='width:100%'>\n\t\t\t<tr>\n\t\t\t\t<td class='textInfo left' style='vertical-align:top;'>\n\t\t\t\t\t<?php print html_escape(get_data_source_title(get_request_var('id')));?>\n\t\t\t\t</td>\n\t\t\t\t<td class='textInfo right' style='vertical-align:top;'>\n\t\t\t\t\t<span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('data_sources.php?action=ds_edit&id=' . (isset_request_var('id') ? get_request_var('id') : '0') . '&debug=' . (isset($_SESSION['ds_debug_mode']) ? '0' : '1'));?>'><?php print (isset($_SESSION['ds_debug_mode']) ? __('Turn Off Data Source Debug Mode.') : __('Turn On Data Source Debug Mode.'));?></a><br>\n\t\t\t\t\t<span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('data_sources.php?action=ds_edit&id=' . (isset_request_var('id') ? get_request_var('id') : '0') . '&info=' . (isset($_SESSION['ds_info_mode']) ? '0' : '1'));?>'><?php print (isset($_SESSION['ds_info_mode']) ? __('Turn Off Data Source Info Mode.') : __('Turn On Data Source Info Mode.'));?></a><br>\n\t\t\t\t\t<?php\n\t\t\t\t\t\tif (!empty($data_template['id'])) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('data_templates.php?action=template_edit&id=' . (isset($data_template['id']) ? $data_template['id'] : '0'));?>'><?php print __('Edit Data Template.');?></a><br><?php\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!empty($data_local['host_id'])) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('host.php?action=edit&id=' . $data_local['host_id']);?>'><?php print __('Edit Device.');?></a><br><?php\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<br>\n\t\t<?php\n\t}\n\n\tform_start('data_sources.php', 'data_source');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (cacti_sizeof($data_template)) {\n\t\t$data_sources = db_fetch_cell_prepared('SELECT\n\t\t\tGROUP_CONCAT(DISTINCT data_source_name ORDER BY data_source_name) AS data_source_names\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE data_template_id = ?\n\t\t\tGROUP BY data_template_id\n\t\t\tORDER BY data_source_names',\n\t\t\tarray($data_template['id'])\n\t\t);\n\n\t\t$dts = db_fetch_assoc_prepared('SELECT data_template_id,\n\t\t\tGROUP_CONCAT(DISTINCT data_source_name ORDER BY data_source_name) AS data_source_names\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE local_data_id=0\n\t\t\tGROUP BY data_template_id\n\t\t\tHAVING data_source_names = ?',\n\t\t\tarray($data_sources)\n\t\t);\n\n\t\tif (cacti_sizeof($dts)) {\n\t\t\tforeach($dts as $dtid) {\n\t\t\t\t$dtids[] = $dtid['data_template_id'];\n\t\t\t}\n\t\t}\n\n\t\t$dtsql = 'SELECT id, name FROM data_template WHERE id IN(' . implode(',', $dtids) . ') ORDER BY name';\n\t} else {\n\t\t$dtsql = 'SELECT id, name FROM data_template ORDER BY name';\n\t}\n\n\tif (get_request_var('host_id') > 0) {\n\t\t$hostDescription = db_fetch_cell_prepared('SELECT description\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('host_id'))\n\t\t);\n\t} elseif (isset($data_local['host_id'])) {\n\t\t$hostDescription = db_fetch_cell_prepared('SELECT description\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray($data_local['host_id'])\n\t\t);\n\t} else {\n\t\t$hostDescription = '';\n\t}\n\n\t$form_array = array(\n\t\t'data_template_id' => array(\n\t\t\t'method' => 'drop_sql',\n\t\t\t'friendly_name' => __('Selected Data Template'),\n\t\t\t'description' => __('The name given to this data template.  Please note that you may only change Graph Templates to a 100%$ compatible Graph Template, which means that it includes identical Data Sources.'),\n\t\t\t'value' => (cacti_sizeof($data_template) ? $data_template['id'] : '0'),\n\t\t\t'none_value' => (cacti_sizeof($data_template) ? '' : 'None'),\n\t\t\t'sql' => $dtsql\n\t\t\t),\n\t\t'host_id' => array(\n\t\t\t'method' => 'drop_callback',\n\t\t\t'friendly_name' => __('Device'),\n\t\t\t'description' => __('Choose the Device that this Data Source belongs to.'),\n\t\t\t'none_value' => __('None'),\n\t\t\t'sql' => 'SELECT id, description AS name FROM host ORDER BY name',\n\t\t\t'action' => 'ajax_hosts_noany',\n\t\t\t'id' => (isset($data_local['host_id']) ? $data_local['host_id'] : 0),\n\t\t\t'value' => $hostDescription\n\t\t\t),\n\t\t'_data_template_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($data_template['id']) ? $data_template['id'] : '0')\n\t\t\t),\n\t\t'_host_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($data_local['host_id']) ? $data_local['host_id'] : '0')\n\t\t\t),\n\t\t'_data_input_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($data['data_input_id']) ? $data['data_input_id'] : '0')\n\t\t\t),\n\t\t'data_template_data_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($data['id']) ? $data['id'] : '0')\n\t\t\t),\n\t\t'local_data_template_data_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($data['local_data_template_data_id']) ? $data['local_data_template_data_id'] : '0')\n\t\t\t),\n\t\t'local_data_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($data['local_data_id']) ? $data['local_data_id'] : '0')\n\t\t\t),\n\t\t);\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t/* only display the \"inputs\" area if we are using a data template for this data source */\n\tif (!empty($data['data_template_id'])) {\n\t\t$template_data_rrds = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE local_data_id = ?\n\t\t\tORDER BY data_source_name',\n\t\t\tarray(get_request_var('id')));\n\n\t\thtml_start_box(__('Supplemental Data Template Data'), '100%', true, '3', 'center', '');\n\n\t\tdraw_nontemplated_fields_data_source($data['data_template_id'], $data['local_data_id'], $data, '|field|', __('Data Source Fields'), true, true, 0);\n\t\tdraw_nontemplated_fields_data_source_item($data['data_template_id'], $template_data_rrds, '|field|_|id|', __('Data Source Item Fields'), true, true, true, 0);\n\t\tdraw_nontemplated_fields_custom_data($data['id'], 'value_|id|', __('Custom Data'), true, true, 0);\n\n\t\tform_hidden_box('save_component_data','1','');\n\n\t\thtml_end_box(true, true);\n\t}\n\n\tif (((isset_request_var('id')) || (isset_request_var('new'))) && (empty($data['data_template_id']))) {\n\t\thtml_start_box( __('Data Source'), '100%', true, '3', 'center', '');\n\n\t\t$form_array = array();\n\n\t\tforeach ($struct_data_source as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $struct_data_source[$field_name]);\n\n\t\t\tif (($field_array['method'] != 'header') && ($field_array['method'] != 'spacer' )){\n\t\t\t\tif (!(($use_data_template == false) || (!empty($data_template_data['t_' . $field_name])) || ($field_array['flags'] == 'NOTEMPLATE'))) {\n\t\t\t\t\t$form_array[$field_name]['description'] = '';\n\t\t\t\t}\n\n\t\t\t\t$form_array[$field_name]['value'] = (isset($data[$field_name]) ? $data[$field_name] : '');\n\t\t\t\t$form_array[$field_name]['form_id'] = (empty($data['id']) ? '0' : $data['id']);\n\n\t\t\t\tif (!(($use_data_template == false) || (!empty($data_template_data['t_' . $field_name])) || ($field_array['flags'] == 'NOTEMPLATE'))) {\n\t\t\t\t\t$form_array[$field_name]['method'] = 'template_' . $form_array[$field_name]['method'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => inject_form_variables($form_array, (isset($data) ? $data : array()))\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box(true, true);\n\n\t\t/* fetch ALL rrd's for this data source */\n\t\tif (!isempty_request_var('id')) {\n\t\t\t$template_data_rrds = db_fetch_assoc_prepared('SELECT id, data_source_name\n\t\t\t\tFROM data_template_rrd\n\t\t\t\tWHERE local_data_id = ?\n\t\t\t\tORDER BY data_source_name',\n\t\t\t\tarray(get_request_var('id')));\n\t\t}\n\n\t\t/* select the first \"rrd\" of this data source by default */\n\t\tif (isempty_request_var('view_rrd')) {\n\t\t\tset_request_var('view_rrd', (isset($template_data_rrds[0]['id']) ? $template_data_rrds[0]['id'] : '0'));\n\t\t}\n\n\t\t/* get more information about the rrd we chose */\n\t\tif (!isempty_request_var('view_rrd')) {\n\t\t\t$local_data_template_rrd_id = db_fetch_cell_prepared('SELECT local_data_template_rrd_id\n\t\t\t\tFROM data_template_rrd\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_request_var('view_rrd')));\n\n\t\t\t$rrd = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM data_template_rrd\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_request_var('view_rrd')));\n\n\t\t\t$rrd_template = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM data_template_rrd\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($local_data_template_rrd_id));\n\n\t\t\t$header_label = __('[edit: %s]', html_escape($rrd['data_source_name']));\n\t\t} else {\n\t\t\t$header_label = '';\n\t\t}\n\n\t\t$i = 0;\n\t\tif (isset($template_data_rrds)) {\n\t\t\tif (cacti_sizeof($template_data_rrds) > 1) {\n\t\t\t\t/* draw the data source tabs on the top of the page */\n\t\t\t\tprint \"\t<table class='tabs'><tr>\\n\";\n\n\t\t\t\tforeach ($template_data_rrds as $template_data_rrd) {\n\t\t\t\t\t$i++;\n\t\t\t\t\tprint \"\t<td \" . (($template_data_rrd['id'] == get_request_var('view_rrd')) ? \"class='even'\" : \"class='odd'\") . \" style='width:\" . ((strlen($template_data_rrd['data_source_name']) * 9) + 50) . \";text-align:center;' class='tab'>\n\t\t\t\t\t\t<span class='textHeader'><a href='\" . html_escape('data_sources.php?action=ds_edit&id=' . get_request_var('id') . '&view_rrd=' . $template_data_rrd['id']) . \"'>$i: \" . html_escape($template_data_rrd['data_source_name']) . '</a>' . (($use_data_template == false) ? \" <a class='pic deleteMarker fa fa-times' href='\" . html_escape('data_sources.php?action=rrd_remove&id=' . $template_data_rrd['id'] . '&local_data_id=' . get_request_var('id')) . \"' title='\" . __esc('Delete') . \"'></a>\" : '') . \"</span>\n\t\t\t\t\t\t</td>\\n\";\n\t\t\t\t\tprint \"<td style='width:1px;'></td>\\n\";\n\t\t\t\t}\n\n\t\t\t\tprint \"<td></td></tr></table>\\n\";\n\t\t\t} elseif (cacti_sizeof($template_data_rrds) == 1) {\n\t\t\t\tset_request_var('view_rrd', $template_data_rrds[0]['id']);\n\t\t\t}\n\t\t}\n\n\t\thtml_start_box('', '100%', true, '3', 'center', '');\n\n\t\tprint \"<div class='tableHeader'>\n\t\t\t<div class='tableSubHeaderColumn left'>\n\t\t\t\t\" . __('Data Source Item %s', $header_label) . \"\n\t\t\t</div>\n\t\t\t<div class='tableSubHeaderColumn right'>\n\t\t\t\t\" . ((!isempty_request_var('id') && (empty($data_template['id']))) ? \"<a class='linkOverDark' href='\" . html_escape('data_sources.php?action=rrd_add&id=' . get_request_var('id')) . \"'>\" . __('New') . \"</a>&nbsp;\" : '') . \"\n\t\t\t</div>\n\t\t</div>\\n\";\n\n\t\t/* data input fields list */\n\t\tif ((empty($data['data_input_id'])) || (db_fetch_cell_prepared('SELECT type_id FROM data_input WHERE id = ?', array($data['data_input_id'])) > '1')) {\n\t\t\tunset($struct_data_source_item['data_input_field_id']);\n\t\t} else {\n\t\t\t$struct_data_source_item['data_input_field_id']['sql'] = \"SELECT id,CONCAT(data_name,' - ',name) as name FROM data_input_fields WHERE data_input_id=\" . $data['data_input_id'] . \" and input_output='out' and update_rra='on' order by data_name,name\";\n\t\t}\n\n\t\t$form_array = array();\n\n\t\tforeach ($struct_data_source_item as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $struct_data_source_item[$field_name]);\n\n\t\t\tif (($field_array['method'] != 'header') && ($field_array['method'] != 'spacer' )){\n\t\t\t\tif (!(($use_data_template == false) || ($rrd_template['t_' . $field_name] == 'on'))) {\n\t\t\t\t\t$form_array[$field_name]['description'] = '';\n\t\t\t\t}\n\n\t\t\t\t$form_array[$field_name]['value'] = (isset($rrd) ? $rrd[$field_name] : '');\n\n\t\t\t\tif (!(($use_data_template == false) || ($rrd_template['t_' . $field_name] == 'on'))) {\n\t\t\t\t\t$form_array[$field_name]['method'] = 'template_' . $form_array[$field_name]['method'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => array(\n\t\t\t\t\t'data_template_rrd_id' => array(\n\t\t\t\t\t\t'method' => 'hidden',\n\t\t\t\t\t\t'value' => (isset($rrd) ? $rrd['id'] : '0')\n\t\t\t\t\t),\n\t\t\t\t\t'local_data_template_rrd_id' => array(\n\t\t\t\t\t\t'method' => 'hidden',\n\t\t\t\t\t\t'value' => (isset($rrd) ? $rrd['local_data_template_rrd_id'] : '0')\n\t\t\t\t\t)\n\t\t\t\t) + $form_array\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box(true, true);\n\n\t\t/* data source data goes here */\n\t\tdata_edit(false);\n\n\t\tform_hidden_box('current_rrd', get_request_var('view_rrd'), '0');\n\t}\n\n\t/* display the debug mode box if the user wants it */\n\tif ((isset($_SESSION['ds_debug_mode'])) && (isset_request_var('id'))) {\n\t\t?>\n\t\t<table style='width:100%'>\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<span class='textInfo'><?php print __('Data Source Debug');?></span><br>\n\t\t\t\t\t<pre><?php print @rrdtool_function_create(get_request_var('id'), '-600', true);?></pre>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<?php\n\t}\n\n\t/* display the debug mode box if the user wants it */\n\tif ((isset($_SESSION['ds_info_mode'])) && (isset_request_var('id'))) {\n\t\t?>\n\t\t<table style='width:100%'>\n\t\t\t<tr>\n\t\t\t\t<td><?php\n\t\t\t\t$rrd_info = rrdtool_function_info(get_request_var('id'));\n\n\t\t\t\tif (cacti_sizeof($rrd_info['rra'])) {\n\t\t\t\t\t$diff = rrdtool_cacti_compare(get_request_var('id'), $rrd_info);\n\t\t\t\t\trrdtool_info2html($rrd_info, $diff);\n\t\t\t\t\tif (cacti_sizeof($diff)) {\n\t\t\t\t\t\thtml_start_box(__('RRDtool Tune Info'), '100%', '', '3', 'center', '');\n\t\t\t\t\t\trrdtool_tune($rrd_info['filename'], $diff, true);\n\t\t\t\t\t\thtml_end_box();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t?></td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<?php\n\t}\n\n\tif ((isset_request_var('id')) || (isset_request_var('new'))) {\n\t\tform_hidden_box('save_component_data_source','1','');\n\t} else {\n\t\tform_hidden_box('save_component_data_source_new','1','');\n\t}\n\n\tform_save_button('data_sources.php');\n\n\tapi_plugin_hook('data_source_edit_bottom');\n\n\tbottom_footer();\n}\n\nfunction get_poller_interval($seconds, $data_source_profile_id) {\n\tif ($seconds == 0 || $data_source_profile_id == 0) {\n\t\treturn '<em>' . __('External') . '</em>';\n\t}else if ($seconds < 60) {\n\t\treturn '<em>' . __('%d Seconds', $seconds) . '</em>';\n\t}else if ($seconds == 60) {\n\t\treturn  __('1 Minute');\n\t} else {\n\t\treturn '<em>' . __('%d Minutes', ($seconds / 60)) . '</em>';\n\t}\n}\n\nfunction validate_data_source_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'rfilter' => array(\n\t\t\t'filter' => FILTER_VALIDATE_IS_REGEX,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name_cache',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'host_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'site_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'status' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'profile' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'orphans' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ds');\n\t/* ================= input validation ================= */\n}\n\nfunction ds() {\n\tglobal $ds_actions, $item_rows, $sampling_intervals;\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\tif (get_request_var('host_id') > 0) {\n\t\t$host = db_fetch_row_prepared('SELECT hostname\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('host_id')));\n\t} else {\n\t\t$host = array();\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction applyFilter() {\n\t\tstrURL  = 'data_sources.php' +\n\t\t\t'?host_id=' + $('#host_id').val() +\n\t\t\t'&site_id=' + $('#site_id').val() +\n\t\t\t'&rfilter=' + base64_encode($('#rfilter').val()) +\n\t\t\t'&rows=' + $('#rows').val() +\n\t\t\t'&status=' + $('#status').val() +\n\t\t\t'&profile=' + $('#profile').val() +\n\t\t\t'&orphans=' + $('#orphans').val() +\n\t\t\t'&template_id=' + $('#template_id').val() +\n\t\t\t'&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'data_sources.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter()\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter()\n\t\t});\n\n\t\t$('#form_data_sources').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\tif (read_config_option('grds_creation_method') == 1 ) {\n\t\tif (get_request_var('host_id') == '-1') {\n\t\t\t$new_host_id = 0;\n\t\t} else {\n\t\t\t$new_host_id = get_request_var('host_id');\n\t\t}\n\n\t\t$add_url = html_escape('data_sources.php?action=ds_edit&host_id=' . $new_host_id);\n\t} else {\n\t\t$add_url = '';\n\t}\n\n\tif (get_request_var('site_id') > 0) {\n\t\t$host_where = 'site_id = ' . get_request_var('site_id');\n\t} else {\n\t\t$host_where = '';\n\t}\n\n\thtml_start_box( __('Data Sources [%s]', (empty($host['hostname']) ? __('No Device') : html_escape($host['hostname']))), '100%', '', '3', 'center', $add_url);\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_data_sources' name='form_data_sources' action='data_sources.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<?php print html_site_filter(get_request_var('site_id'));?>\n\t\t\t\t\t<?php print html_host_filter(get_request_var('host_id'), 'applyFilter', $host_where);?>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='template_id' name='template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\n\t\t\t\t\t\t\t$templates = db_fetch_assoc('SELECT DISTINCT data_template.id, data_template.name\n\t\t\t\t\t\t\t\tFROM data_template\n\t\t\t\t\t\t\t\tINNER JOIN data_template_data\n\t\t\t\t\t\t\t\tON data_template.id = data_template_data.data_template_id\n\t\t\t\t\t\t\t\tWHERE data_template_data.local_data_id > 0\n\t\t\t\t\t\t\t\tORDER BY data_template.name');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($templates) > 0) {\n\t\t\t\t\t\t\t\tforeach ($templates as $template) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $template['id'] . \"'\"; if (get_request_var('template_id') == $template['id']) { print ' selected'; } print '>' . title_trim(html_escape($template['name']), 40) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Profile');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='profile' name='profile' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('profile') == '-1' ? ' selected>':'>') . __('All');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$profiles = array_rekey(db_fetch_assoc('SELECT id, name FROM data_source_profiles ORDER BY name'), 'id', 'name');\n\t\t\t\t\t\t\tif (cacti_sizeof($profiles)) {\n\t\t\t\t\t\t\t\tforeach ($profiles as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('profile') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Status');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='status' name='status' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('status') == '-1') {?> selected<?php }?>><?php print __('All');?></option>\n\t\t\t\t\t\t\t<option value='1'<?php if (get_request_var('status') == '1') {?> selected<?php }?>><?php print __('Enabled');?></option>\n\t\t\t\t\t\t\t<option value='2'<?php if (get_request_var('status') == '2') {?> selected<?php }?>><?php print __('Disabled');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Orphaned');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='orphans' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('orphans') == '-1' ? ' selected>':'>') . __('All');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php print (get_request_var('orphans') == '0' ? ' selected>':'>') . __('Has Graphs');?></option>\n\t\t\t\t\t\t\t<option value='1'<?php print (get_request_var('orphans') == '1' ? ' selected>':'>') . __('Orphaned');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='rfilter' size='30' value='<?php print html_escape_request_var('rfilter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Data Sources');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('rfilter') != '') {\n\t\t$sql_where1 = \"WHERE (dtd.name_cache RLIKE '\" . get_request_var('rfilter') . \"'\" .\n\t\t\t\" OR dtd.local_data_id RLIKE '\" . get_request_var('rfilter') . \"'\" .\n\t\t\t\" OR dt.name RLIKE '\" . get_request_var('rfilter') . \"')\";\n\t} else {\n\t\t$sql_where1 = '';\n\t}\n\n\tif (get_request_var('host_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (isempty_request_var('host_id')) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' (dl.host_id=0 OR dl.host_id IS NULL)';\n\t} elseif (!isempty_request_var('host_id')) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dl.host_id=' . get_request_var('host_id');\n\t}\n\n\tif (get_request_var('site_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (isempty_request_var('site_id')) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' (h.site_id=0 OR h.site_id IS NULL)';\n\t} elseif (!isempty_request_var('site_id')) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' h.site_id=' . get_request_var('site_id');\n\t}\n\n\tif (get_request_var('template_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('template_id') == '0') {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dtd.data_template_id=0';\n\t} elseif (!isempty_request_var('template_id')) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dtd.data_template_id=' . get_request_var('template_id');\n\t}\n\n\tif (get_request_var('profile') == '-1') {\n\t\t/* Show all items */\n\t} else {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dtd.data_source_profile_id=' . get_request_var('profile');\n\t}\n\n\tif (get_request_var('status') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('status') == '1') {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dtd.active=\"on\"';\n\t} else {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dtd.active=\"\"';\n\t}\n\n\t$orphan_where = ' AND graph_type_id IN (' .\n\t\tGRAPH_ITEM_TYPE_LINE1     . ', ' .\n\t\tGRAPH_ITEM_TYPE_LINE2     . ', '.\n\t\tGRAPH_ITEM_TYPE_LINE3     . ', ' .\n\t\tGRAPH_ITEM_TYPE_LINESTACK . ', ' .\n\t\tGRAPH_ITEM_TYPE_AREA      . ', ' .\n\t\tGRAPH_ITEM_TYPE_STACK     . ')';\n\n\tif (get_request_var('orphans') == '0') {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dl.id IN (SELECT DISTINCT dl.id FROM data_local AS dl INNER JOIN data_template_rrd AS dtr ON dl.id=dtr.local_data_id LEFT JOIN graph_templates_item AS gti ON gti.task_item_id=dtr.id WHERE gti.id IS NOT NULL' . $orphan_where . ')';\n\t} elseif (get_request_var('orphans') == 1) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dl.id IN (SELECT DISTINCT dl.id FROM data_local AS dl INNER JOIN data_template_rrd AS dtr ON dl.id=dtr.local_data_id LEFT JOIN graph_templates_item AS gti ON gti.task_item_id=dtr.id WHERE gti.id IS NULL)';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM data_local AS dl\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dl.id=dtd.local_data_id\n\t\tINNER JOIN data_template AS dt\n\t\tON dt.id=dl.data_template_id\n\t\tINNER JOIN host AS h\n\t\tON h.id = dl.host_id\n\t\t$sql_where1\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$data_sources = db_fetch_assoc(\"SELECT dtd.local_data_id, dtd.name_cache, dtd.active,\n\t\tdtd.rrd_step, dt.name AS data_template_name, dl.host_id, dtd.data_source_profile_id\n\t\tFROM data_local AS dl\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dl.id=dtd.local_data_id\n\t\tINNER JOIN data_template AS dt\n\t\tON dt.id=dl.data_template_id\n\t\tINNER JOIN host AS h\n\t\tON h.id = dl.host_id\n\t\t$sql_where1\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('data_sources.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Data Sources'), 'page', 'main');\n\n\tform_start('data_sources.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name_cache' => array(\n\t\t\t'display' => __('Data Source Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name of this Data Source. Generally programtically generated from the Data Template definition.')\n\t\t),\n\t\t'local_data_id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database ID for this Data Source. Useful when performing automation or debugging.')\n\t\t),\n\t\t'nosort' => array(\n\t\t\t'display' => __('Poller Interval'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The frequency that data is collected for this Data Source.')\n\t\t),\n\t\t'nosort1' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('If this Data Source is no long in use by Graphs, it can be Deleted.')\n\t\t),\n\t\t'active' => array(\n\t\t\t'display' => __('Active'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('Whether or not data will be collected for this Data Source. Controlled at the Data Template level.')\n\t\t),\n\t\t'data_template_name' => array(\n\t\t\t'display' => __('Template Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Data Template that this Data Source was based upon.')\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($data_sources)) {\n\t\tforeach ($data_sources as $data_source) {\n\t\t\tif (api_data_source_deletable($data_source['local_data_id'])) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\t$data_source['data_template_name'] = html_escape($data_source['data_template_name']);\n\t\t\t$data_name_cache = title_trim(html_escape($data_source['name_cache']), read_config_option('max_title_length'));\n\n\t\t\tif (get_request_var('rfilter') != '') {\n\t\t\t\t$data_name_cache = filter_value($data_name_cache, get_request_var('rfilter'));\n\t\t\t}\n\n\t\t\t/* keep copy of data source for comparison */\n\t\t\t$data_source_orig = $data_source;\n\t\t\t$data_source = api_plugin_hook_function('data_sources_table', $data_source);\n\n\t\t\t/* we're escaping strings here, so no need to escape them on form_selectable_cell */\n\t\t\tif (empty($data_source['data_template_name'])) {\n\t\t\t\t$data_template_name = '<em>' . __('None') . '</em>';\n\t\t\t} elseif ($data_source_orig['data_template_name'] != $data_source['data_template_name']) {\n\t\t\t\t/* was changed by plugin, plugin has to take care for html-escaping */\n\t\t\t\t$data_template_name = $data_source['data_template_name'];\n\t\t\t} elseif (get_request_var('rfilter') != '') {\n\t\t\t\t$data_template_name = filter_value($data_source['data_template_name'], get_request_var('rfilter'));\n\t\t\t} else {\n\t\t\t\t$data_template_name = html_escape($data_source['data_template_name']);\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $data_source['local_data_id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value(title_trim($data_source['name_cache'], read_config_option('max_title_length')), get_request_var('rfilter'), 'data_sources.php?action=ds_edit&id=' . $data_source['local_data_id']), $data_source['local_data_id']);\n\t\t\tform_selectable_cell($data_source['local_data_id'], $data_source['local_data_id'], '', 'text-align:right');\n\t\t\tform_selectable_cell(get_poller_interval($data_source['rrd_step'], $data_source['data_source_profile_id']), $data_source['local_data_id']);\n\t\t\tform_selectable_cell(api_data_source_deletable($data_source['local_data_id']) ? __('Yes') : __('No'), $data_source['local_data_id']);\n\t\t\tform_selectable_cell(($data_source['active'] == 'on' ? __('Yes') : __('No')), $data_source['local_data_id']);\n\t\t\tform_selectable_cell($data_template_name, $data_source['local_data_id']);\n\t\t\tform_checkbox_cell($data_source['name_cache'], $data_source['local_data_id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='7'><em>\" . __('No Data Sources Found') . \"</em></td></tr>\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($data_sources)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($ds_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude ('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n$ds_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate'),\n\t3 => __('Change Profile')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'rrd_add':\n\t\ttemplate_rrd_add();\n\n\t\tbreak;\n\tcase 'rrd_remove':\n\t\ttemplate_rrd_remove();\n\n\t\tbreak;\n\tcase 'template_remove':\n\t\ttemplate_remove();\n\n\t\theader('Location: data_templates.php?header=false');\n\t\tbreak;\n\tcase 'template_edit':\n\t\ttop_header();\n\n\t\ttemplate_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\ttemplate();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tif (isset_request_var('save_component_template')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('data_input_id');\n\t\tget_filter_request_var('data_template_id');\n\t\tget_filter_request_var('data_template_data_id');\n\t\tget_filter_request_var('data_template_rrd_id');\n\t\tget_filter_request_var('data_source_type_id');\n\t\tget_filter_request_var('data_source_profile_id');\n\t\tget_filter_request_var('rrd_heartbeat');\n\t\t/* ==================================================== */\n\n\t\t/* save: data_template */\n\t\t$save1['id']   = get_request_var('data_template_id');\n\t\t$save1['hash'] = get_hash_data_template(get_request_var('data_template_id'));\n\t\t$save1['name'] = form_input_validate(get_nfilter_request_var('template_name'), 'template_name', '', false, 3);\n\n\t\t/* save: data_template_data */\n\t\t$save2['id']            = get_request_var('data_template_data_id');\n\t\t$save2['local_data_template_data_id'] = 0;\n\t\t$save2['local_data_id'] = 0;\n\n\t\t$save2['data_input_id'] = form_input_validate(get_request_var('data_input_id'), 'data_input_id', '^[0-9]+$', true, 3);\n\t\t$save2['t_name']        = form_input_validate((isset_request_var('t_name') ? get_nfilter_request_var('t_name') : ''), 't_name', '', true, 3);\n\t\t$save2['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', (isset_request_var('t_name') ? true : false), 3);\n\t\t$save2['t_active']      = form_input_validate((isset_request_var('t_active') ? get_nfilter_request_var('t_active') : ''), 't_active', '', true, 3);\n\t\t$save2['active']        = form_input_validate((isset_request_var('active') ? get_nfilter_request_var('active') : ''), 'active', '', true, 3);\n\n\t\t$rrd_step               = db_fetch_cell_prepared('SELECT step FROM data_source_profiles WHERE id = ?', array(get_request_var('data_source_profile_id')));\n\t\t$rrd_heartbeat          = db_fetch_cell_prepared('SELECT heartbeat FROM data_source_profiles WHERE id = ?', array(get_request_var('data_source_profile_id')));\n\t\t$save2['rrd_step']      = $rrd_step;\n\n\t\t$save2['t_data_source_profile_id'] = form_input_validate((isset_request_var('t_data_source_profile_id') ? get_nfilter_request_var('t_data_source_profile_id') : ''), 't_data_source_profile_id', '', true, 3);\n\t\t$save2['data_source_profile_id']   = form_input_validate(get_request_var('data_source_profile_id'), 'data_source_profile_id', '^[0-9]+$', (isset_request_var('data_source_profile_id') ? true : false), 3);\n\n\t\t/* save: data_template_rrd */\n\t\t$save3['id']                    = get_request_var('data_template_rrd_id');\n\t\t$save3['hash']                  = get_hash_data_template(get_request_var('data_template_rrd_id'), 'data_template_item');\n\t\t$save3['local_data_template_rrd_id'] = 0;\n\t\t$save3['local_data_id']         = 0;\n\n\t\t$save3['t_rrd_maximum']         = form_input_validate((isset_request_var('t_rrd_maximum') ? get_nfilter_request_var('t_rrd_maximum') : ''), 't_rrd_maximum', '', true, 3);\n\t\t$save3['rrd_maximum']           = form_input_validate(get_nfilter_request_var('rrd_maximum'), 'rrd_maximum', '^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$', (isset_request_var('t_rrd_maximum') ? true : false), 3);\n\t\t$save3['t_rrd_minimum']         = form_input_validate((isset_request_var('t_rrd_minimum') ? get_nfilter_request_var('t_rrd_minimum') : ''), 't_rrd_minimum', '', true, 3);\n\t\t$save3['rrd_minimum']           = form_input_validate(get_nfilter_request_var('rrd_minimum'), 'rrd_minimum', '^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$', (isset_request_var('t_rrd_minimum') ? true : false), 3);\n\n\t\t$save3['rrd_heartbeat']         = $rrd_heartbeat;\n\n\t\t$save3['t_data_source_type_id'] = form_input_validate((isset_request_var('t_data_source_type_id') ? get_nfilter_request_var('t_data_source_type_id') : ''), 't_data_source_type_id', '', true, 3);\n\t\t$save3['data_source_type_id']   = form_input_validate(get_request_var('data_source_type_id'), 'data_source_type_id', '^[0-9]+$', true, 3);\n\t\t$save3['t_data_source_name']    = form_input_validate((isset_request_var('t_data_source_name') ? get_nfilter_request_var('t_data_source_name') : ''), 't_data_source_name', '', true, 3);\n\t\t$save3['data_source_name']      = form_input_validate(get_nfilter_request_var('data_source_name'), 'data_source_name', '^[a-zA-Z0-9_]{1,19}$', (isset_request_var('t_data_source_name') ? true : false), 3);\n\t\t$save3['t_data_input_field_id'] = form_input_validate((isset_request_var('t_data_input_field_id') ? get_nfilter_request_var('t_data_input_field_id') : ''), 't_data_input_field_id', '', true, 3);\n\t\t$save3['data_input_field_id']   = form_input_validate((isset_request_var('data_input_field_id') ? get_nfilter_request_var('data_input_field_id') : '0'), 'data_input_field_id', '', true, 3);\n\n\t\t/* ok, first pull out all 'input' values so we know how much to save */\n\t\t$input_fields = db_fetch_assoc_prepared(\"SELECT id, input_output, regexp_match,\n\t\t\tallow_nulls, type_code, data_name\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output = 'in'\",\n\t\t\tarray(get_request_var('data_input_id')));\n\n\t\t/* pass 1 for validation */\n\t\tif (cacti_sizeof($input_fields)) {\n\t\t\tforeach ($input_fields as $input_field) {\n\t\t\t\t$form_value = 'value_' . $input_field['data_name'];\n\n\t\t\t\tif ((isset_request_var($form_value)) && ($input_field['type_code'] == '')) {\n\t\t\t\t\tif ((isset_request_var('t_' . $form_value)) &&\n\t\t\t\t\t\t(get_nfilter_request_var('t_' . $form_value) == 'on')) {\n\t\t\t\t\t\t$not_required = true;\n\t\t\t\t\t} elseif ($input_field['allow_nulls'] == 'on') {\n\t\t\t\t\t\t$not_required = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$not_required = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tform_input_validate(get_nfilter_request_var($form_value), 'value_' . $input_field['data_name'], $input_field['regexp_match'], $not_required, 3);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$data_template_id = sql_save($save1, 'data_template');\n\n\t\t\tif ($data_template_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$save2['data_template_id'] = $data_template_id;\n\t\t\t$data_template_data_id = sql_save($save2, 'data_template_data');\n\n\t\t\tif ($data_template_data_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\t/* update actual host template information for live hosts */\n\t\tif ((!is_error_message()) && ($save2['id'] > 0)) {\n\t\t\tdb_execute_prepared('UPDATE data_template_data\n\t\t\t\tSET data_input_id = ?\n\t\t\t\tWHERE data_template_id = ?',\n\t\t\t\tarray(get_request_var('data_input_id'), get_request_var('data_template_id')));\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$save3['data_template_id'] = $data_template_id;\n\t\t\t$data_template_rrd_id = sql_save($save3, 'data_template_rrd');\n\n\t\t\tif ($data_template_rrd_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\tif (!isempty_request_var('data_template_id')) {\n\t\t\t\t/* push out all data source settings to child data source using this template */\n\t\t\t\tpush_out_data_source($data_template_data_id);\n\t\t\t\tpush_out_data_source_item($data_template_rrd_id);\n\n\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\tFROM data_input_data\n\t\t\t\t\tWHERE data_template_data_id = ?',\n\t\t\t\t\tarray($data_template_data_id));\n\n\t\t\t\tif (cacti_sizeof($input_fields)) {\n\t\t\t\t\tforeach ($input_fields as $input_field) {\n\t\t\t\t\t\t$form_value = 'value_' . $input_field['data_name'];\n\n\t\t\t\t\t\tif (isset_request_var($form_value)) {\n\t\t\t\t\t\t\t/* save the data into the 'host_template_data' table */\n\t\t\t\t\t\t\tif (isset_request_var('t_value_' . $input_field['data_name'])) {\n\t\t\t\t\t\t\t\t$template_this_item = 'on';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$template_this_item = '';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ((!empty($form_value)) || (!isempty_request_var('t_value_' . $input_field['data_name']))) {\n\t\t\t\t\t\t\t\t/* unusual case where a form value comes back as an array\n\t\t\t\t\t\t\t\t * this should be cleaned up in the database repair script. */\n\t\t\t\t\t\t\t\t$value = get_nfilter_request_var($form_value);\n\t\t\t\t\t\t\t\tif (is_array($value)) {\n\t\t\t\t\t\t\t\t\t$value = trim($value[0]);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$value = trim($value);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tdb_execute_prepared('INSERT INTO data_input_data\n\t\t\t\t\t\t\t\t\t(data_input_field_id, data_template_data_id, t_value, value)\n\t\t\t\t\t\t\t\t\tVALUES (?, ?, ?, ?)',\n\t\t\t\t\t\t\t\t\tarray($input_field['id'], $data_template_data_id, $template_this_item, $value));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* push out all \"custom data\" for this data source template */\n\t\t\t\tpush_out_data_source_custom_data($data_template_id);\n\t\t\t\tpush_out_host(0, 0, $data_template_id);\n\n\t\t\t\t/* push out field mappings for the data collector */\n\t\t\t\t/* its important to delete first due to the possibility that\n\t\t\t\t * the field names were changed */\n\t\t\t\tdb_execute_prepared('DELETE FROM poller_data_template_field_mappings\n\t\t\t\t\tWHERE data_template_id = ?',\n\t\t\t\t\tarray($data_template_id));\n\n\t\t\t\tdb_execute_prepared('REPLACE INTO poller_data_template_field_mappings\n\t\t\t\t\tSELECT dtr.data_template_id,\n\t\t\t\t\tdif.data_name,\n\t\t\t\t\tGROUP_CONCAT(dtr.data_source_name ORDER BY dtr.data_source_name) AS data_source_names,\n\t\t\t\t\tNOW() AS last_updated\n\t\t\t\t\tFROM data_template_rrd AS dtr\n\t\t\t\t\tINNER JOIN data_input_fields AS dif\n\t\t\t\t\tON dtr.data_input_field_id = dif.id\n\t\t\t\t\tWHERE dtr.local_data_id = 0\n\t\t\t\t\tAND dtr.data_template_id = ?\n\t\t\t\t\tGROUP BY dtr.data_template_id, dif.data_name',\n\t\t\t\t\tarray($data_template_id));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_templates.php?header=false&action=template_edit&id=' . (empty($data_template_id) ? get_request_var('data_template_id') : $data_template_id) . (isempty_request_var('current_rrd') ? '' : '&view_rrd=' . (get_nfilter_request_var('current_rrd') ? get_nfilter_request_var('current_rrd') : $data_template_rrd_id)));\n\t}\n}\n\n/* ------------------------\n    The \"actions\" function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $ds_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\tdb_execute('DELETE FROM data_template_data WHERE ' . array_to_sql_or($selected_items, 'data_template_id') . ' AND local_data_id=0');\n\t\t\t\tdb_execute('DELETE FROM data_template_rrd WHERE ' . array_to_sql_or($selected_items, 'data_template_id') . ' AND local_data_id=0');\n\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_rrd WHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_rrd_sv WHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\t\t\t\tdb_execute('DELETE FROM data_template WHERE ' . array_to_sql_or($selected_items, 'id'));\n\n\t\t\t\t/* \"undo\" any graph that is currently using this template */\n\t\t\t\tdb_execute('UPDATE data_template_data set local_data_template_data_id=0,data_template_id=0 WHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\t\t\t\tdb_execute('UPDATE data_template_rrd set local_data_template_rrd_id=0,data_template_id=0 WHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\t\t\t\tdb_execute('UPDATE data_local set data_template_id=0 WHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_duplicate_data_source(0, $selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // change data source profile\n\t\t\t\t$step = db_fetch_cell_prepared('SELECT step\n\t\t\t\t\tFROM data_source_profiles\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray(get_filter_request_var('data_source_profile_id')));\n\n\t\t\t\tif (!empty($step)) {\n\t\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t\tdb_execute_prepared('UPDATE data_template_data\n\t\t\t\t\t\t\tSET data_source_profile_id = ?,\n\t\t\t\t\t\t\trrd_step = ?\n\t\t\t\t\t\t\tWHERE data_template_id = ?',\n\t\t\t\t\t\t\tarray(get_filter_request_var('data_source_profile_id'), $step, $selected_items[$i]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_templates.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$ds_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$ds_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM data_template WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$ds_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('data_templates.php');\n\n\thtml_start_box($ds_actions{get_request_var('drp_action')}, '60%', '', '3', 'center', '');\n\n\tif (isset($ds_array) && cacti_sizeof($ds_array)) {\n\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Data Template(s).  Any data sources attached to these templates will become individual Data Source(s) and all Templating benefits will be removed.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete Data Template(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to duplicate the following Data Template(s). You can optionally change the title format for the new Data Template(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\n\t\t\t\t\t<p>\" . __('Title Format:') . '<br>'; form_text_box('title_format', '<' . __('template_title') . '> (1)', '', '255', '30', 'text'); print \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Duplicate Data Template(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '3') { // change profile\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to change the default Data Source Profile for the following Data Template(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\n\t\t\t\t\t<p>\" . __('New Data Source Profile') . '<br>';\n\n\t\t\t\t\t$available_profiles = db_fetch_assoc('SELECT id, name FROM data_source_profiles ORDER BY name');\n\t\t\t\t\tform_dropdown('data_source_profile_id',$available_profiles, 'name', 'id', '', '', '');\n\n\t\t\tprint \"</p>\n\t\t\t\t<p>\" . __('NOTE: This change only will affect future Data Sources and does not alter existing Data Sources.') . \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Change Data Source Profile') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: data_templates.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($ds_array) ? serialize($ds_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* ----------------------------\n    template - Data Templates\n   ---------------------------- */\n\nfunction template_rrd_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_template_id');\n\t/* ==================================================== */\n\n\t$children = db_fetch_assoc_prepared('SELECT id\n\t\tFROM data_template_rrd\n\t\tWHERE local_data_template_rrd_id = ?\n\t\tOR id = ?',\n\t\tarray(get_request_var('id'), get_request_var('id')));\n\n\tif (cacti_sizeof($children)) {\n\t\tforeach ($children as $item) {\n\t\t\tdb_execute_prepared('DELETE FROM data_template_rrd WHERE id = ?', array($item['id']));\n\t\t\tdb_execute_prepared('DELETE FROM snmp_query_graph_rrd WHERE data_template_rrd_id = ?', array($item['id']));\n\t\t\tdb_execute_prepared('UPDATE graph_templates_item SET task_item_id = 0 WHERE task_item_id = ?', array($item['id']));\n\t\t}\n\t}\n\n\theader('Location: data_templates.php?action=template_edit&id=' . get_request_var('data_template_id'));\n}\n\nfunction template_rrd_add() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('local_data_id');\n\t/* ==================================================== */\n\n\t$hash = get_hash_data_template(0, 'data_template_item');\n\n\t/* check for duplicated data source name */\n\t$i = 0;\n\t$dsname = 'ds';\n\twhile (true) {\n\t\t$exists = db_fetch_cell_prepared('SELECT data_source_name\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE data_source_name = ?\n\t\t\tAND data_template_id = ?',\n\t\t\tarray($dsname, get_request_var('id')));\n\n\t\tif (empty($exists)) {\n\t\t\tbreak;\n\t\t} else {\n\t\t\t$i++;\n\t\t\t$dsname = 'ds (' . $i . ')';\n\n\t\t\tif ($i > 100) break;\n\t\t}\n\t}\n\n\tdb_execute_prepared('INSERT IGNORE INTO data_template_rrd\n\t\t(hash, data_template_id, rrd_maximum, rrd_minimum, rrd_heartbeat, data_source_type_id, data_source_name)\n\t    VALUES (?, ?, 0, 0, 600, 1, ?)', array($hash, get_request_var('id'), $dsname));\n\n\t$data_template_rrd_id = db_fetch_insert_id();\n\n\t/* add this data template item to each data source using this data template */\n\t$children = db_fetch_assoc_prepared('SELECT local_data_id\n\t\tFROM data_template_data\n\t\tWHERE data_template_id = ?\n\t\tAND local_data_id > 0',\n\t\tarray(get_request_var('id')));\n\n\tif (cacti_sizeof($children)) {\n\t\tforeach ($children as $item) {\n\t\t\tdb_execute_prepared('INSERT IGNORE INTO data_template_rrd\n\t\t\t\t(local_data_template_rrd_id, local_data_id, data_template_id, rrd_maximum, rrd_minimum, rrd_heartbeat, data_source_type_id, data_source_name)\n\t\t\t\tVALUES (?, ?, ?, 0, 0, 600, 1, ?)',\n\t\t\t\tarray($data_template_rrd_id, $item['local_data_id'], get_request_var('id'), $dsname));\n\t\t}\n\t}\n\n\theader('Location: data_templates.php?action=template_edit&id=' . get_request_var('id') . \"&view_rrd=$data_template_rrd_id\");\n}\n\nfunction template_edit() {\n\tglobal $struct_data_source, $struct_data_source_item, $data_source_types, $fields_data_template_template_edit, $fields_host_edit, $hash_system_data_inputs;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('view_rrd');\n\t/* ==================================================== */\n\n\t$isSNMPget = false;\n\n\tif (!isempty_request_var('id')) {\n\t\t$template_data = db_fetch_row_prepared('SELECT dtd.*,\n\t\t\tSUM(CASE WHEN dl.data_template_id = ? THEN 1 ELSE 0 END) AS data_sources\n\t\t\tFROM data_template_data AS dtd\n\t\t\tLEFT JOIN data_local AS dl\n\t\t\tON dl.id=dtd.local_data_id\n\t\t\tWHERE dtd.data_template_id = ?\n\t\t\tHAVING dtd.local_data_id=0',\n\t\t\tarray(get_request_var('id'), get_request_var('id')));\n\n\t\t$template = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_template\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (cacti_sizeof($template_data)) {\n\t\t\t$snmp_data = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM data_input\n\t\t\t\tWHERE hash=\"3eb92bb845b9660a7445cf9740726522\"\n\t\t\t\tAND id = ?',\n\t\t\t\tarray($template_data['data_input_id']));\n\n\t\t\tif (cacti_sizeof($snmp_data)) {\n\t\t\t\t$isSNMPget = true;\n\t\t\t}\n\t\t}\n\n\t\t$header_label = __('Data Templates [edit: %s]', html_escape($template['name']));\n\n\t\t?>\n\t\t<table style='width:100%'>\n\t\t\t<tr>\n\t\t\t\t<td class='textInfo left' style='vertical-align:top;'>\n\t\t\t\t\t<?php print html_escape($template['name']);?>\n\t\t\t\t</td>\n\t\t\t\t<td class='textInfo right' style='vertical-align:top;'>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t$data_input_id = 0;\n\t\t\t\t\t\tif (!empty($template_data['data_input_id'])) {\n\t\t\t\t\t\t\t$data_input_id = get_nonsystem_data_input($template_data['data_input_id']);\n\t\t\t\t\t\t\tif (!isset($data_input_id) || $data_input_id == NULL) {\n\t\t\t\t\t\t\t\t$data_input_id = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($data_input_id > 0) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print htmlspecialchars('data_input.php?action=edit&id=' . $data_input_id);?>'><?php print __('Edit Data Input Method.');?></a><br><?php\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<br>\n\t\t<?php\n\t} else {\n\t\t$header_label = __('Data Templates [new]');\n\t}\n\n\tform_start('data_templates.php', 'data_templates');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => 'true'),\n\t\t'fields' => inject_form_variables($fields_data_template_template_edit, (isset($template) ? $template : array()), (isset($template_data) ? $template_data : array()), $_REQUEST)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\thtml_start_box(__('Data Source'), '100%', true, '3', 'center', '');\n\n\t/* make sure 'data source path' doesn't show up for a template... we should NEVER template this field */\n\tunset($struct_data_source['data_source_path']);\n\n\t$form_array = array();\n\n\tforeach ($struct_data_source as $field_name => $field_array) {\n\t\t$form_array += array($field_name => $struct_data_source[$field_name]);\n\n\t\tif ($form_array[$field_name]['method'] != 'spacer') {\n\t\t\t$form_array[$field_name]['value'] = (isset($template_data[$field_name]) ? $template_data[$field_name] : '');\n\t\t}\n\n\t\t$form_array[$field_name]['form_id'] = (isset($template_data) ? $template_data['data_template_id'] : '0');\n\n\t\tif ($field_array['flags'] == 'ALWAYSTEMPLATE') {\n\t\t\t$form_array[$field_name]['description'] .= '<br><em>' . __('This field is always templated.') . '</em>';\n\t\t} else {\n\t\t\t$form_array[$field_name]['sub_checkbox'] = array(\n\t\t\t\t'name' => 't_' . $field_name,\n\t\t\t\t'friendly_name' => __esc('Check this checkbox if you wish to allow the user to override the value on the right during Data Source creation.'),\n\t\t\t\t'value' => (isset($template_data['t_' . $field_name]) ? $template_data['t_' . $field_name] : '')\n\t\t\t);\n\t\t}\n\t}\n\n\t$form_array['data_source_profile_id']['sql'] = 'SELECT id, name FROM data_source_profiles ORDER BY name';\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($form_array, (isset($template_data) ? $template_data : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t/* fetch ALL rrd's for this data source */\n\tif (!isempty_request_var('id')) {\n\t\t$template_data_rrds = db_fetch_assoc_prepared('SELECT id, data_source_name\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE data_template_id = ?\n\t\t\tAND local_data_id = 0\n\t\t\tORDER BY data_source_name',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\t/* select the first \"rrd\" of this data source by default */\n\tif (isempty_request_var('view_rrd')) {\n\t\tset_request_var('view_rrd', (isset($template_data_rrds[0]['id']) ? $template_data_rrds[0]['id'] : '0'));\n\t}\n\n\t/* get more information about the rrd we chose */\n\tif (!isempty_request_var('view_rrd')) {\n\t\t$template_rrd = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('view_rrd')));\n\t}\n\n\t$i = 0;\n\tif (isset($template_data_rrds)) {\n\t\tif (cacti_sizeof($template_data_rrds) > 1) {\n\t\t\t/* draw the data source tabs on the top of the page */\n\t\t\tprint \"<div class='tabs' style='float:left;'><nav><ul role='tablist'>\\n\";\n\n\t\t\tforeach ($template_data_rrds as $template_data_rrd) {\n\t\t\t\tprint \"<li class='subTab'><a \" . (($template_data_rrd['id'] == get_request_var('view_rrd')) ? \"class='pic selected'\" : \"class='pic'\") . \" href='\" . html_escape('data_templates.php?action=template_edit&id=' . get_request_var('id') . '&view_rrd=' . $template_data_rrd['id']) . \"'>\" . ($i+1) . \": \" . html_escape($template_data_rrd['data_source_name']) . \"</a>\" . ($template_data['data_sources'] == 0 ? \"<a class='pic deleteMarker fa fa-times' title='\" . __esc('Delete') . \"' href='\" . html_escape('data_templates.php?action=rrd_remove&id=' . $template_data_rrd['id'] . '&data_template_id=' . get_request_var('id')) . \"'></a>\":\"<a class='deleteMarkerDisabled fa fa-times' href='#' title='\" . __esc('Data Templates in use can not be modified') . \"'></a>\") . \"</li>\\n\";\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tprint \"\n\t\t\t</ul></nav>\\n\n\t\t\t</div>\\n\";\n\t\t} elseif (cacti_sizeof($template_data_rrds) == 1) {\n\t\t\tset_request_var('view_rrd', $template_data_rrds[0]['id']);\n\t\t}\n\t}\n\n\tif (!$isSNMPget) {\n\t\thtml_start_box(__('Data Source Item [%s]', (isset($template_rrd) ? html_escape($template_rrd['data_source_name']) : '')), '100%', true, '0', 'center', (!isempty_request_var('id') ? 'data_templates.php?action=rrd_add&id=' . get_request_var('id'):''), __('New'));\n\t} else {\n\t\thtml_start_box(__('Data Source Item [%s]', (isset($template_rrd) ? html_escape($template_rrd['data_source_name']) : '')), '100%', true, '0', 'center', '', '');\n\t}\n\n\t/* data input fields list */\n\tif (empty($template_data['data_input_id'])) {\n\t\tunset($struct_data_source_item['data_input_field_id']);\n\t} else {\n\t\t$input_type = db_fetch_cell_prepared('SELECT type_id\n\t\t\tFROM data_input\n\t\t\tWHERE id = ?',\n\t\t\tarray($template_data['data_input_id']));\n\n\t\tif ($input_type != 1 && $input_type != 5) {\n\t\t\tunset($struct_data_source_item['data_input_field_id']);\n\t\t} else {\n\t\t\t$struct_data_source_item['data_input_field_id']['sql'] = \"SELECT id, CONCAT(data_name, ' - ', name) AS name FROM data_input_fields WHERE data_input_id=\" . $template_data['data_input_id'] . \" AND input_output='out' AND update_rra='on' ORDER BY data_name, name\";\n\t\t}\n\t}\n\n\t$form_array = array();\n\n\tforeach ($struct_data_source_item as $field_name => $field_array) {\n\t\t$form_array += array($field_name => $struct_data_source_item[$field_name]);\n\n\t\t$form_array[$field_name]['value'] = (isset($template_rrd) ? $template_rrd[$field_name] : '');\n\t\t$form_array[$field_name]['sub_checkbox'] = array(\n\t\t\t'name' => 't_' . $field_name,\n\t\t\t'friendly_name' => __esc('Check this checkbox if you wish to allow the user to override the value on the right during Data Source creation.'),\n\t\t\t'value' => (isset($template_rrd) ? $template_rrd['t_' . $field_name] : '')\n\t\t);\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array + array(\n\t\t\t\t'data_template_rrd_id' => array(\n\t\t\t\t\t'method' => 'hidden',\n\t\t\t\t\t'value' => (isset($template_rrd) ? $template_rrd['id'] : '0')\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t$i = 0;\n\tif (!isempty_request_var('id')) {\n\t\t/* get each INPUT field for this data input source */\n\t\t$fields = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output=\"in\" ORDER BY name',\n\t\t\tarray($template_data['data_input_id']));\n\n\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM data_input\n\t\t\tWHERE id = ?',\n\t\t\tarray($template_data['data_input_id']));\n\n\t\thtml_start_box(__('Custom Data [data input: %s]', html_escape($name)), '100%', true, '3', 'center', '');\n\n\t\t/* loop through each field found */\n\t\tif (cacti_sizeof($fields) > 0) {\n\t\t\t$class = 'odd';\n\n\t\t\tforeach ($fields as $field) {\n\t\t\t\t$data_input_data = db_fetch_row_prepared('SELECT t_value, value\n\t\t\t\t\tFROM data_input_data\n\t\t\t\t\tWHERE data_template_data_id = ?\n\t\t\t\t\tAND data_input_field_id = ?',\n\t\t\t\t\tarray($template_data['id'], $field['id']));\n\n\t\t\t\tif (cacti_sizeof($data_input_data)) {\n\t\t\t\t\t$old_value  = $data_input_data['value'];\n\t\t\t\t\t$old_tvalue = $data_input_data['t_value'];\n\t\t\t\t} else {\n\t\t\t\t\t$old_value  = '';\n\t\t\t\t\t$old_tvalue = '';\n\t\t\t\t}\n\n\t\t\t\tif ($field['data_name'] == 'management_ip') {\n\t\t\t\t\t$help = $fields_host_edit['hostname']['description'];\n\t\t\t\t} elseif (isset($fields_host_edit[$field['data_name']])) {\n\t\t\t\t\t$help = $fields_host_edit[$field['data_name']]['description'];\n\t\t\t\t} else {\n\t\t\t\t\t$help = $field['name'];\n\t\t\t\t}\n\n\t\t\t\tprint \"<div class='formRow $class'>\";\n\n\t\t\t\tif ($class == 'odd') {\n\t\t\t\t\t$class = 'even';\n\t\t\t\t} else {\n\t\t\t\t\t$class = 'odd';\n\t\t\t\t}\n\n\t\t\t\tif (preg_match('/^' . VALID_HOST_FIELDS . '$/i', $field['type_code']) && $old_tvalue  == '') {\n\t\t\t\t\t$title = __esc('Value will be derived from the device if this field is left empty.');\n\t\t\t\t} else {\n\t\t\t\t\t$title = '';\n\t\t\t\t}\n\n\t\t\t\t?>\n\t\t\t\t<div class='formColumnLeft'>\n\t\t\t\t\t<div class='formFieldName'><?php form_checkbox('t_value_' . $field['data_name'], $old_tvalue, '', '', '', get_request_var('id'), '', __esc('Check this checkbox if you wish to allow the user to override the value on the right during Data Source creation.'));?><?php print html_escape($field['name']);?><div class='formTooltip'><?php print display_tooltip($help);?></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class='formColumnRight'>\n\t\t\t\t\t<?php form_text_box('value_' . $field['data_name'], $old_value, '', '', 30, 'text', 0, '', $title);?>\n\t\t\t\t</div>\n\t\t\t\t<?php\n\t\t\t\tprint \"</div>\";\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<div style=\"width:100%;float:left;\"><em>' . __('No Input Fields for the Selected Data Input Source') . '</em></div>';\n\t\t}\n\n\t\thtml_end_box(true, true);\n\t}\n\n\tform_save_button('data_templates.php', 'return');\n}\n\nfunction template() {\n\tglobal $ds_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'profile' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'has_data' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_dt');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('Data Templates'), '100%', '', '3', 'center', 'data_templates.php?action=template_edit');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_data_template' action='data_templates.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' name='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Profile');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='profile' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('profile') == '-1' ? ' selected>':'>') . __('All');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$profiles = array_rekey(db_fetch_assoc('SELECT id, name FROM data_source_profiles ORDER BY name'), 'id', 'name');\n\t\t\t\t\t\t\tif (cacti_sizeof($profiles)) {\n\t\t\t\t\t\t\t\tforeach ($profiles as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('profile') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Data Templates');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='has_data' <?php print (get_request_var('has_data') == 'true' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='has_data'><?php print __('Has Data Sources');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t</td>\n\t\t<script type='text/javascript'>\n\t\tfunction applyFilter() {\n\t\t\tstrURL  = 'data_templates.php?header=false';\n\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\tstrURL += '&profile='+$('#profile').val();\n\t\t\tstrURL += '&has_data='+$('#has_data').is(':checked');\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\tfunction clearFilter() {\n\t\t\tstrURL = 'data_templates.php?clear=1&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#has_data').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#refresh').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#clear').click(function() {\n\t\t\t\tclearFilter();\n\t\t\t});\n\n\t\t\t$('#form_data_template').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\t\t});\n\t\t</script>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\t$rows_where = '';\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \" WHERE (dt.name like '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('profile') != '-1') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' dsp.id=' . get_request_var('profile');\n\t}\n\n\tif (get_request_var('has_data') == 'true') {\n\t\t$sql_having = 'HAVING data_sources>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(`rows`)\n\t\tFROM (SELECT\n\t\t\tCOUNT(dt.id) `rows`,\n\t\t\tSUM(CASE WHEN dtd.local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\t\tFROM data_template AS dt\n\t\t\tINNER JOIN data_template_data AS dtd\n\t\t\tON dt.id=dtd.data_template_id\n\t\t\tLEFT JOIN data_source_profiles AS dsp\n\t\t\tON dtd.data_source_profile_id=dsp.id\n\t\t\tLEFT JOIN data_input AS di\n\t\t\tON dtd.data_input_id=di.id\n\t\t\t$sql_where\n\t\t\tGROUP BY dt.id\n\t\t\t$sql_having\n\t\t) AS rs\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$template_list = db_fetch_assoc(\"SELECT dt.id, dt.name,\n\t\tdi.name AS data_input_method, dtd.active AS active, dsp.name AS profile_name,\n\t\tSUM(CASE WHEN dtd.local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\tFROM data_template AS dt\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dt.id=dtd.data_template_id\n\t\tLEFT JOIN data_source_profiles AS dsp\n\t\tON dtd.data_source_profile_id=dsp.id\n\t\tLEFT JOIN data_input AS di\n\t\tON dtd.data_input_id=di.id\n\t\t$sql_where\n\t\tGROUP BY dt.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('data_templates.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Data Templates'), 'page', 'main');\n\n\tform_start('data_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'              => array('display' => __('Data Template Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this Data Template.')),\n\t\t'id'                => array('display' => __('ID'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The internal database ID for this Data Template.  Useful when performing automation or debugging.')),\n\t\t'nosort'            => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('Data Templates that are in use cannot be Deleted.  In use is defined as being referenced by a Data Source.')),\n\t\t'data_sources'      => array('display' => __('Data Sources Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Data Sources using this Data Template.')),\n\t\t'data_input_method' => array('display' => __('Input Method'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The method that is used to place Data into the Data Source RRDfile.')),\n\t\t'profile_name' => array('display' => __('Profile Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The default Data Source Profile for this Data Template.')),\n\t\t'active'            => array('display' => __('Status'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('Data Sources based on Inactive Data Templates will not be updated when the poller runs.'))\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['data_sources'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $template['id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'data_templates.php?action=template_edit&id=' . $template['id']), $template['id']);\n\t\t\tform_selectable_cell($template['id'], $template['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $template['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"' . html_escape('data_sources.php?reset=true&template_id=' . $template['id']) . '\">' . number_format_i18n($template['data_sources']) . '</a>', $template['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell((empty($template['data_input_method']) ? '<em>' . __('None') .'</em>': html_escape($template['data_input_method'])), $template['id']);\n\t\t\tform_selectable_cell((empty($template['profile_name']) ? __('External'):html_escape($template['profile_name'])), $template['id']);\n\t\t\tform_selectable_cell((($template['active'] == 'on') ? __('Active'):__('Disabled')), $template['id']);\n\t\t\tform_checkbox_cell($template['name'], $template['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='6'><em>\" . __('No Data Templates Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($ds_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n$gprint_actions = array(\n\t1 => __('Delete')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tgprint_presets_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tgprint_presets();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tif (isset_request_var('save_component_gprint_presets')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save['id']          = get_request_var('id');\n\t\t$save['hash']        = get_hash_gprint(get_request_var('id'));\n\t\t$save['name']        = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['gprint_text'] = form_input_validate(get_nfilter_request_var('gprint_text'), 'gprint_text', '', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$gprint_preset_id = sql_save($save, 'graph_templates_gprint');\n\n\t\t\tif ($gprint_preset_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: gprint_presets.php?header=false&action=edit&id=' . (empty($gprint_preset_id) ? get_nfilter_request_var('id') : $gprint_preset_id));\n\t\t\texit;\n\t\t} else {\n\t\t\theader('Location: gprint_presets.php?header=false');\n\n\t\t\texit;\n\t\t}\n\t}\n}\n\n/* -----------------------------------\n    gprint_presets - GPRINT Presets\n   ----------------------------------- */\n\nfunction form_actions() {\n\tglobal $gprint_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM graph_templates_gprint WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: gprint_presets.php?header=false');\n\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$gprint_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$gprint_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM graph_templates_gprint WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$gprint_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('gprint_presets.php');\n\n\thtml_start_box($gprint_actions{get_request_var('drp_action')}, '60%', '', '3', 'center', '');\n\n\tif (isset($gprint_array) && cacti_sizeof($gprint_array)) {\n\t\tif (get_request_var('drp_action') == '1') { /* delete */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the folling GPRINT Preset(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$gprint_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') .\"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete GPRINT Preset(s)') .\"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: gprint_presets.php?header=false');\n        exit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($gprint_array) ? serialize($gprint_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\nfunction gprint_presets_edit() {\n\tglobal $fields_grprint_presets_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$gprint_preset = db_fetch_row_prepared('SELECT * FROM graph_templates_gprint WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('GPRINT Presets [edit: %s]', html_escape($gprint_preset['name']));\n\t} else {\n\t\t$header_label = __('GPRINT Presets [new]');\n\t}\n\n\tform_start('gprint_presets.php', 'gprint_presets');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_grprint_presets_edit, (isset($gprint_preset) ? $gprint_preset : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_save_button('gprint_presets.php');\n}\n\nfunction gprint_presets() {\n\tglobal $gprint_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_gp');\n\t/* ================= input validation and session storage ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('GPRINT Presets'), '100%', '', '3', 'center', 'gprint_presets.php?action=edit');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_gprint' action='gprint_presets.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' name='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('GPRINTs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type=\"checkbox\" id='has_graphs' <?php print (get_request_var('has_graphs') == 'true' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='has_graphs'><?php print __('Has Graphs');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type='text/javascript'>\n\n\t\t\tfunction applyFilter() {\n\t\t\t\tstrURL  = 'gprint_presets.php?header=false';\n\t\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\t\tstrURL += '&has_graphs='+$('#has_graphs').is(':checked');\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = 'gprint_presets.php?clear=1&header=false';\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\t$('#refresh').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#has_graphs').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#form_gprint').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_having = 'HAVING graphs>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(`rows`)\n\t\tFROM (\n\t\t\tSELECT gp.id AS `rows`,\n\t\t\tSUM(CASE WHEN local_graph_id>0 THEN 1 ELSE 0 END) AS graphs\n\t\t\tFROM graph_templates_gprint AS gp\n\t\t\tLEFT JOIN graph_templates_item AS gti\n\t\t\tON gti.gprint_id=gp.id\n\t\t\t$sql_where\n\t\t\tGROUP BY gp.id\n\t\t\t$sql_having\n\t\t) AS rs\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$gprint_list = db_fetch_assoc(\"SELECT rs.*,\n\t\tSUM(CASE WHEN local_graph_id=0 THEN 1 ELSE 0 END) AS templates,\n\t\tSUM(CASE WHEN local_graph_id>0 THEN 1 ELSE 0 END) AS graphs\n\t\tFROM (\n\t\t\tSELECT gp.*, gti.local_graph_id\n\t\t\tFROM graph_templates_gprint AS gp\n\t\t\tLEFT JOIN graph_templates_item AS gti\n\t\t\tON gti.gprint_id=gp.id\n\t\t\tGROUP BY gp.id, gti.graph_template_id, gti.local_graph_id\n\t\t) AS rs\n\t\t$sql_where\n\t\tGROUP BY rs.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('gprint_presets.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 6, __('GPRINTs'), 'page', 'main');\n\n\tform_start('gprint_presets.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'      => array('display' => __('GPRINT Preset Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this GPRINT Preset.')),\n\t\t'gprint_text'      => array('display' => __('Format'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The GPRINT format string.')),\n\t\t'nosort'    => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('GPRINTs that are in use cannot be Deleted.  In use is defined as being referenced by either a Graph or a Graph Template.')),\n\t\t'graphs'    => array('display' => __('Graphs Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Graphs using this GPRINT.')),\n\t\t'templates' => array('display' => __('Templates Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Graphs Templates using this GPRINT.'))\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($gprint_list)) {\n\t\tforeach ($gprint_list as $gp) {\n\t\t\tif ($gp['graphs'] == 0 && $gp['templates'] == 0) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n            form_alternate_row('line' . $gp['id'], false, $disabled);\n\t\t\tform_selectable_cell(filter_value($gp['name'], get_request_var('filter'), 'gprint_presets.php?action=edit&id=' . $gp['id']), $gp['id']);\n            form_selectable_cell($gp['gprint_text'], $gp['id'], '', 'text-align:right');\n            form_selectable_cell($disabled ? __('No'):__('Yes'), $gp['id'], '', 'text-align:right');\n            form_selectable_cell(number_format_i18n($gp['graphs'], '-1'), $gp['id'], '', 'text-align:right');\n            form_selectable_cell(number_format_i18n($gp['templates'], '-1'), $gp['id'], '', 'text-align:right');\n            form_checkbox_cell($gp['name'], $gp['id'], $disabled);\n            form_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='6'><em>\" . __('No GPRINT Presets') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($gprint_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($gprint_actions);\n\n\tform_end();\n}\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n$graph_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate'),\n\t3 => __('Resize'),\n\t4 => __('Sync Graphs')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'template_remove':\n\t\ttemplate_remove();\n\n\t\theader('Location: graph_templates.php?header=false');\n\t\tbreak;\n\tcase 'input_remove':\n\t\tget_filter_request_var('graph_template_id');\n\n\t\tinput_remove();\n\n\t\theader('Location: graph_templates.php?header=false&action=template_edit&id=' . get_request_var('graph_template_id'));\n\t\tbreak;\n\tcase 'input_edit':\n\t\ttop_header();\n\n\t\tinput_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'template_edit':\n\t\ttop_header();\n\n\t\ttemplate_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\ttemplate();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\t// sanitize ids\n\tif (isset_request_var('graph_template_id') && !is_numeric(get_nfilter_request_var('graph_template_id'))) {\n\t\t$graph_template_id = 0;\n\t} else {\n\t\t$graph_template_id = get_filter_request_var('graph_template_id');\n\t}\n\n\tif (isset_request_var('save_component_template')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('graph_template_graph_id');\n\t\t/* ==================================================== */\n\n\t\t$save1['id']       = $graph_template_id;\n\t\t$save1['hash']     = get_hash_graph_template($graph_template_id);\n\t\t$save1['name']     = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save1['multiple'] = isset_request_var('multiple') ? 'on':'';\n\n\t\t$save2['id']                     = get_nfilter_request_var('graph_template_graph_id');\n\t\t$save2['local_graph_template_graph_id'] = 0;\n\t\t$save2['local_graph_id']         = 0;\n\t\t$save2['t_image_format_id']      = (isset_request_var('t_image_format_id') ? get_nfilter_request_var('t_image_format_id') : '');\n\t\t$save2['image_format_id']        = form_input_validate(get_nfilter_request_var('image_format_id'), 'image_format_id', '^[0-9]+$', true, 3);\n\t\t$save2['t_title']                = form_input_validate((isset_request_var('t_title') ? get_nfilter_request_var('t_title') : ''), 't_title', '', true, 3);\n\t\t$save2['title']                  = form_input_validate(get_nfilter_request_var('title'), 'title', '', (isset_request_var('t_title') ? true : false), 3);\n\t\t$save2['t_height']               = form_input_validate((isset_request_var('t_height') ? get_nfilter_request_var('t_height') : ''), 't_height', '', true, 3);\n\t\t$save2['height']                 = form_input_validate(get_nfilter_request_var('height'), 'height', '^[0-9]+$', (isset_request_var('t_height') ? true : false), 3);\n\t\t$save2['t_width']                = form_input_validate((isset_request_var('t_width') ? get_nfilter_request_var('t_width') : ''), 't_width', '', true, 3);\n\t\t$save2['width']                  = form_input_validate(get_nfilter_request_var('width'), 'width', '^[0-9]+$', (isset_request_var('t_width') ? true : false), 3);\n\t\t$save2['t_upper_limit']          = form_input_validate((isset_request_var('t_upper_limit') ? get_nfilter_request_var('t_upper_limit') : ''), 't_upper_limit', '', true, 3);\n\t\t$save2['upper_limit']            = form_input_validate(get_nfilter_request_var('upper_limit'), 'upper_limit', '^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$', ((isset_request_var('t_upper_limit') || (strlen(get_nfilter_request_var('upper_limit')) === 0)) ? true : false), 3);\n\t\t$save2['t_lower_limit']          = form_input_validate((isset_request_var('t_lower_limit') ? get_nfilter_request_var('t_lower_limit') : ''), 't_lower_limit', '', true, 3);\n\t\t$save2['lower_limit']            = form_input_validate(get_nfilter_request_var('lower_limit'), 'lower_limit', '^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$', ((isset_request_var('t_lower_limit') || (strlen(get_nfilter_request_var('lower_limit')) === 0)) ? true : false), 3);\n\t\t$save2['t_vertical_label']       = form_input_validate((isset_request_var('t_vertical_label') ? get_nfilter_request_var('t_vertical_label') : ''), 't_vertical_label', '', true, 3);\n\t\t$save2['vertical_label']         = form_input_validate(get_nfilter_request_var('vertical_label'), 'vertical_label', '', true, 3);\n\t\t$save2['t_slope_mode']           = form_input_validate((isset_request_var('t_slope_mode') ? get_nfilter_request_var('t_slope_mode') : ''), 't_slope_mode', '', true, 3);\n\t\t$save2['slope_mode']             = form_input_validate((isset_request_var('slope_mode') ? get_nfilter_request_var('slope_mode') : ''), 'slope_mode', '', true, 3);\n\t\t$save2['t_auto_scale']           = form_input_validate((isset_request_var('t_auto_scale') ? get_nfilter_request_var('t_auto_scale') : ''), 't_auto_scale', '', true, 3);\n\t\t$save2['auto_scale']             = form_input_validate((isset_request_var('auto_scale') ? get_nfilter_request_var('auto_scale') : ''), 'auto_scale', '', true, 3);\n\t\t$save2['t_auto_scale_opts']      = form_input_validate((isset_request_var('t_auto_scale_opts') ? get_nfilter_request_var('t_auto_scale_opts') : ''), 't_auto_scale_opts', '', true, 3);\n\t\t$save2['auto_scale_opts']        = form_input_validate(get_nfilter_request_var('auto_scale_opts'), 'auto_scale_opts', '', true, 3);\n\t\t$save2['t_auto_scale_log']       = form_input_validate((isset_request_var('t_auto_scale_log') ? get_nfilter_request_var('t_auto_scale_log') : ''), 't_auto_scale_log', '', true, 3);\n\t\t$save2['auto_scale_log']         = form_input_validate((isset_request_var('auto_scale_log') ? get_nfilter_request_var('auto_scale_log') : ''), 'auto_scale_log', '', true, 3);\n\t\t$save2['t_scale_log_units']      = form_input_validate((isset_request_var('t_scale_log_units') ? get_nfilter_request_var('t_scale_log_units') : ''), 't_scale_log_units', '', true, 3);\n\t\t$save2['scale_log_units']        = form_input_validate((isset_request_var('scale_log_units') ? get_nfilter_request_var('scale_log_units') : ''), 'scale_log_units', '', true, 3);\n\t\t$save2['t_auto_scale_rigid']     = form_input_validate((isset_request_var('t_auto_scale_rigid') ? get_nfilter_request_var('t_auto_scale_rigid') : ''), 't_auto_scale_rigid', '', true, 3);\n\t\t$save2['auto_scale_rigid']       = form_input_validate((isset_request_var('auto_scale_rigid') ? get_nfilter_request_var('auto_scale_rigid') : ''), 'auto_scale_rigid', '', true, 3);\n\t\t$save2['t_auto_padding']         = form_input_validate((isset_request_var('t_auto_padding') ? get_nfilter_request_var('t_auto_padding') : ''), 't_auto_padding', '', true, 3);\n\t\t$save2['auto_padding']           = form_input_validate((isset_request_var('auto_padding') ? get_nfilter_request_var('auto_padding') : ''), 'auto_padding', '', true, 3);\n\t\t$save2['t_base_value']           = form_input_validate((isset_request_var('t_base_value') ? get_nfilter_request_var('t_base_value') : ''), 't_base_value', '', true, 3);\n\t\t$save2['base_value']             = form_input_validate(get_nfilter_request_var('base_value'), 'base_value', '^[0-9]+$', (isset_request_var('t_base_value') ? true : false), 3);\n\t\t$save2['t_unit_value']           = form_input_validate((isset_request_var('t_unit_value') ? get_nfilter_request_var('t_unit_value') : ''), 't_unit_value', '', true, 3);\n\t\t$save2['unit_value']             = form_input_validate(get_nfilter_request_var('unit_value'), 'unit_value', '', true, 3);\n\t\t$save2['t_unit_exponent_value']  = form_input_validate((isset_request_var('t_unit_exponent_value') ? get_nfilter_request_var('t_unit_exponent_value') : ''), 't_unit_exponent_value', '', true, 3);\n\t\t$save2['unit_exponent_value']    = form_input_validate(get_nfilter_request_var('unit_exponent_value'), 'unit_exponent_value', '^-?[0-9]+$', true, 3);\n\t\t$save2['t_alt_y_grid']           = form_input_validate((isset_request_var('t_alt_y_grid') ? get_nfilter_request_var('t_alt_y_grid') : ''), 't_alt_y_grid', '', true, 3);\n\t\t$save2['alt_y_grid']             = form_input_validate((isset_request_var('alt_y_grid') ? get_nfilter_request_var('alt_y_grid') : ''), 'alt_y_grid', '', true, 3);\n\t\t$save2['t_right_axis']           = form_input_validate((isset_request_var('t_right_axis') ? get_nfilter_request_var('t_right_axis') : ''), 't_right_axis', '', true, 3);\n\t\t$save2['right_axis']             = form_input_validate((isset_request_var('right_axis') ? get_nfilter_request_var('right_axis') : ''), 'right_axis', '^[.0-9]+:-?[.0-9]+$', true, 3);\n\t\t$save2['t_right_axis_label']     = form_input_validate((isset_request_var('t_right_axis_label') ? get_nfilter_request_var('t_right_axis_label') : ''), 't_right_axis_label', '', true, 3);\n\t\t$save2['right_axis_label']       = form_input_validate((isset_request_var('right_axis_label') ? get_nfilter_request_var('right_axis_label') : ''), 'right_axis_label', '', true, 3);\n\t\t$save2['t_right_axis_format']    = form_input_validate((isset_request_var('t_right_axis_format') ? get_nfilter_request_var('t_right_axis_format') : ''), 't_right_axis_format', '', true, 3);\n\t\t$save2['right_axis_format']      = form_input_validate((isset_request_var('right_axis_format') ? get_nfilter_request_var('right_axis_format') : ''), 'right_axis_format', '^[0-9]+$', true, 3);\n\t\t$save2['t_no_gridfit']           = form_input_validate((isset_request_var('t_no_gridfit') ? get_nfilter_request_var('t_no_gridfit') : ''), 't_no_gridfit', '', true, 3);\n\t\t$save2['no_gridfit']             = form_input_validate((isset_request_var('no_gridfit') ? get_nfilter_request_var('no_gridfit') : ''), 'no_gridfit', '', true, 3);\n\t\t$save2['t_unit_length']          = form_input_validate((isset_request_var('t_unit_length') ? get_nfilter_request_var('t_unit_length') : ''), 't_unit_length', '', true, 3);\n\t\t$save2['unit_length']            = form_input_validate((isset_request_var('unit_length') ? get_nfilter_request_var('unit_length') : ''), 'unit_length', '^[0-9]+$', true, 3);\n\t\t$save2['t_tab_width']            = form_input_validate((isset_request_var('t_tab_width') ? get_nfilter_request_var('t_tab_width') : ''), 't_tab_width', '', true, 3);\n\t\t$save2['tab_width']              = form_input_validate((isset_request_var('tab_width') ? get_nfilter_request_var('tab_width') : ''), 'tab_width', '^[0-9]*$', true, 3);\n\t\t$save2['t_dynamic_labels']       = form_input_validate((isset_request_var('t_dynamic_labels') ? get_nfilter_request_var('t_dynamic_labels') : ''), 't_dynamic_labels', '', true, 3);\n\t\t$save2['dynamic_labels']         = form_input_validate((isset_request_var('dynamic_labels') ? get_nfilter_request_var('dynamic_labels') : ''), 'dynamic_labels', '', true, 3);\n\t\t$save2['t_force_rules_legend']   = form_input_validate((isset_request_var('t_force_rules_legend') ? get_nfilter_request_var('t_force_rules_legend') : ''), 't_force_rules_legend', '', true, 3);\n\t\t$save2['force_rules_legend']     = form_input_validate((isset_request_var('force_rules_legend') ? get_nfilter_request_var('force_rules_legend') : ''), 'force_rules_legend', '', true, 3);\n\t\t$save2['t_legend_position']      = form_input_validate((isset_request_var('t_legend_position') ? get_nfilter_request_var('t_legend_position') : ''), 't_legend_position', '', true, 3);\n\t\t$save2['legend_position']        = form_input_validate((isset_request_var('legend_position') ? get_nfilter_request_var('legend_position') : ''), 'legend_position', '', true, 3);\n\t\t$save2['t_legend_direction']     = form_input_validate((isset_request_var('t_legend_direction') ? get_nfilter_request_var('t_legend_direction') : ''), 't_legend_direction', '', true, 3);\n\t\t$save2['legend_direction']       = form_input_validate((isset_request_var('legend_direction') ? get_nfilter_request_var('legend_direction') : ''), 'legend_direction', '', true, 3);\n\t\t$save2['t_right_axis_formatter'] = form_input_validate((isset_request_var('t_right_axis_formatter') ? get_nfilter_request_var('t_right_axis_formatter') : ''), 't_right_axis_formatter', '', true, 3);\n\t\t$save2['right_axis_formatter']   = form_input_validate((isset_request_var('right_axis_formatter') ? get_nfilter_request_var('right_axis_formatter') : ''), 'right_axis_formatter', '', true, 3);\n\t\t$save2['t_left_axis_formatter']  = form_input_validate((isset_request_var('t_left_axis_formatter') ? get_nfilter_request_var('t_left_axis_formatter') : ''), 't_left_axis_formatter', '', true, 3);\n\t\t$save2['left_axis_formatter']    = form_input_validate((isset_request_var('left_axis_formatter') ? get_nfilter_request_var('left_axis_formatter') : ''), 'left_axis_formatter', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$graph_template_id = sql_save($save1, 'graph_templates');\n\n\t\t\tif ($graph_template_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$save2['graph_template_id'] = $graph_template_id;\n\t\t\t$graph_template_graph_id = sql_save($save2, 'graph_templates_graph');\n\n\t\t\tif ($graph_template_graph_id) {\n\t\t\t\traise_message(1);\n\n\t\t\t\tpush_out_graph($graph_template_graph_id);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($graph_template_id)) {\n\t\t\tresequence_graphs($graph_template_id);\n\t\t}\n\t}\n\n\theader('Location: graph_templates.php?header=false&action=template_edit&id=' . (empty($graph_template_id) ? get_nfilter_request_var('graph_template_id') : $graph_template_id));\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $graph_actions, $config;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tdb_execute('DELETE FROM graph_templates\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'id'));\n\n\t\t\t\t$snmp_graph_ids = array_rekey(\n\t\t\t\t\tdb_fetch_assoc('SELECT id\n\t\t\t\t\t\tFROM snmp_query_graph\n\t\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id')),\n\t\t\t\t\t'id', 'id'\n\t\t\t\t);\n\n\t\t\t\tif (cacti_sizeof($snmp_graph_ids)) {\n\t\t\t\t\tdb_execute('DELETE FROM snmp_query_graph\n\t\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_rrd\n\t\t\t\t\t\tWHERE snmp_query_graph_id IN (' . implode(', ', $snmp_graph_ids) . ')');\n\n\t\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_rrd_sv\n\t\t\t\t\t\tWHERE snmp_query_graph_id IN (' . implode(', ', $snmp_graph_ids) . ')');\n\n\t\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_rrd_sv\n\t\t\t\t\t\tWHERE snmp_query_graph_id IN (' . implode(', ', $snmp_graph_ids) . ')');\n\n\t\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_sv\n\t\t\t\t\t\tWHERE snmp_query_graph_id IN (' . implode(', ', $snmp_graph_ids) . ')');\n\t\t\t\t}\n\n\t\t\t\t$graph_template_input = db_fetch_assoc('SELECT id\n\t\t\t\t\tFROM graph_template_input\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\tif (cacti_sizeof($graph_template_input) > 0) {\n\t\t\t\t\tforeach ($graph_template_input as $item) {\n\t\t\t\t\t\tdb_execute_prepared('DELETE FROM graph_template_input_defs\n\t\t\t\t\t\t\tWHERE graph_template_input_id = ?', array($item['id']));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdb_execute('DELETE FROM graph_template_input\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\tdb_execute('DELETE FROM graph_templates_graph\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id') . ' AND local_graph_id=0');\n\n\t\t\t\tdb_execute('DELETE FROM graph_templates_item\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id') . ' AND local_graph_id=0');\n\n\t\t\t\tdb_execute('DELETE FROM host_template_graph\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\t/* 'undo' any graph that is currently using this template */\n\t\t\t\tdb_execute('UPDATE graph_templates_graph\n\t\t\t\t\tSET local_graph_template_graph_id=0, graph_template_id=0\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\tdb_execute('UPDATE graph_templates_item\n\t\t\t\t\tSET local_graph_template_item_id=0, graph_template_id=0\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\tdb_execute('UPDATE graph_local\n\t\t\t\t\tSET graph_template_id=0\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_duplicate_graph(0, $selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '3') { // resize\n\t\t\t\tget_filter_request_var('graph_width');\n\t\t\t\tget_filter_request_var('graph_height');\n\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdb_execute_prepared('UPDATE graph_templates_graph\n\t\t\t\t\t\tSET width = ?, height = ?\n\t\t\t\t\t\tWHERE graph_template_id = ?',\n\t\t\t\t\t\tarray(get_request_var('graph_width'),\n\t\t\t\t\t\tget_request_var('graph_height'),\n\t\t\t\t\t\t$selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '4') { // retemplate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tretemplate_graphs($selected_items[$i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: graph_templates.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$graph_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$graph_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM graph_templates WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$graph_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('graph_templates.php');\n\n\thtml_start_box($graph_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($graph_array) && cacti_sizeof($graph_array)) {\n\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Graph Template(s).  Any Graph(s) associated with the Template(s) will become individual Graph(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete Graph Template(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to duplicate the following Graph Template(s). You can optionally change the title format for the new Graph Template(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t<p><strong>\" . __('Title Format:'). \"</strong><br>\"; form_text_box('title_format', '<template_title> (1)', '', '255', '30', 'text'); print \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue'). \"' title='\" . __esc('Duplicate Graph Template(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '3') { // resize\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to resize the following Graph Template(s) and Graph(s) to the Height and Width below.  The defaults below are maintained in Settings.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table>\n\t\t\t<tr>\n\t\t\t\t<td>\";\n\n\t\t\tprint __('Graph Height') . '</td><td>';\n\t\t\tform_text_box('graph_height', read_config_option('default_graph_height'), '', '5', '5', 'text');\n\t\t\tprint __('Graph Width') . '</td><td>';\n\t\t\tform_text_box('graph_width', read_config_option('default_graph_width'), '', '5', '5', 'text');\n\n\t\t\tprint \"</td></tr></table><div class='break'></div><table style='width:100%'>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Resize Selected Graph Template(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '4') { // retemplate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to Synchronize your Graphs with the following Graph Template(s). This function is important if you have Graphs that exist with multiple versions of a Graph Template and wish to make them all common in appearance.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue'). \"' title='\" . __esc('Synchronize Graphs to Graph Template(s)') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: graph_templates.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($graph_array) ? serialize($graph_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\nfunction item() {\n\tglobal $consolidation_functions, $graph_item_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (isempty_request_var('id')) {\n\t\t$template_item_list = array();\n\n\t\t$header_label = 'Graph Template Items [new]';\n\t} else {\n\t\t$template_item_list = db_fetch_assoc_prepared(\"SELECT gti.id, gti.text_format, gti.alpha,\n\t\t\tgti.value, gti.hard_return, gti.graph_type_id, gti.consolidation_function_id, gti.textalign,\n\t\t\tCONCAT_WS(' - ', dtd.name, dtr.data_source_name) AS data_source_name,\n\t\t\tcdef.name AS cdef_name, colors.hex\n\t\t\tFROM graph_templates_item AS gti\n\t\t\tLEFT JOIN data_template_rrd AS dtr\n\t\t\tON gti.task_item_id=dtr.id\n\t\t\tLEFT JOIN data_local AS dl\n\t\t\tON dtr.local_data_id=dl.id\n\t\t\tLEFT JOIN data_template_data AS dtd\n\t\t\tON dl.id=dtd.local_data_id\n\t\t\tLEFT JOIN cdef\n\t\t\tON cdef_id=cdef.id\n\t\t\tLEFT JOIN vdef\n\t\t\tON vdef_id=vdef.id\n\t\t\tLEFT JOIN colors\n\t\t\tON color_id=colors.id\n\t\t\tWHERE gti.graph_template_id = ?\n\t\t\tAND gti.local_graph_id=0\n\t\t\tORDER BY gti.sequence\",\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Graph Template Items [edit: %s]', html_escape(db_fetch_cell_prepared('SELECT name FROM graph_templates WHERE id = ?', array(get_request_var('id')))));\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', 'graph_templates_items.php?action=item_edit&graph_template_id=' . get_request_var('id'));\n\tdraw_graph_items_list($template_item_list, 'graph_templates_items.php', 'graph_template_id=' . get_request_var('id'), false);\n\thtml_end_box();\n\n\thtml_start_box(__('Graph Item Inputs'), '100%', '', '3', 'center', 'graph_templates_inputs.php?action=input_edit&graph_template_id=' . get_request_var('id'));\n\n\tprint \"<tr class='tableHeader'>\";\n\t\tDrawMatrixHeaderItem(__('Name'),'',2);\n\tprint '</tr>';\n\n\t$template_item_list = db_fetch_assoc_prepared('SELECT id, name\n\t\tFROM graph_template_input\n\t\tWHERE graph_template_id = ?\n\t\tORDER BY name', array(get_request_var('id')));\n\n\t$i = 0;\n\tif (cacti_sizeof($template_item_list) > 0) {\n\t\tforeach ($template_item_list as $item) {\n\t\t\tform_alternate_row('', true);\n\t\t\t?>\n\t\t\t<td>\n\t\t\t\t<a class='linkEditMain' href='<?php print html_escape('graph_templates_inputs.php?action=input_edit&id=' . $item['id'] . '&graph_template_id=' . get_request_var('id'));?>'><?php print html_escape($item['name']);?></a>\n\t\t\t</td>\n\t\t\t<td class='right'>\n\t\t\t\t<a class='deleteMarker fa fa-times' title='<?php print __esc('Delete');?>' href='<?php print html_escape('graph_templates_inputs.php?action=input_remove&id=' . $item['id'] . '&graph_template_id=' . get_request_var('id'));?>'></a>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='2'><em>\" . __('No Inputs') . \"</em></td></tr>\";\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('.deleteMarker, .moveArrow').click(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tloadPageNoHeader($(this).attr('href'));\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n}\n\n/* ----------------------------\n    template - Graph Templates\n   ---------------------------- */\n\nfunction template_edit() {\n\tglobal $struct_graph, $image_types, $fields_graph_template_template_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t/* graph item list goes here */\n\tif (!isempty_request_var('id')) {\n\t\titem();\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\t$template       = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$template_graph = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE graph_template_id = ?\n\t\t\tAND local_graph_id=0',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Graph Template [edit: %s]', html_escape($template['name']));\n\t} else {\n\t\t$header_label = __('Graph Template [new]');\n\t}\n\n\tform_start('graph_templates.php', 'graph_templates');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_graph_template_template_edit, (isset($template) ? $template : array()), (isset($template_graph) ? $template_graph : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\thtml_start_box(__('Graph Template Options'), '100%', true, '3', 'center', '');\n\n\t$form_array = array();\n\n\tforeach ($struct_graph as $field_name => $field_array) {\n\t\t$form_array += array($field_name => $struct_graph[$field_name]);\n\n\t\tif ($form_array[$field_name]['method'] != 'spacer') {\n\t\t\t$form_array[$field_name]['value'] = (isset($template_graph[$field_name]) ? $template_graph[$field_name] : '');\n\t\t}\n\n\t\t$form_array[$field_name]['form_id'] = (isset($template_graph['id']) ? $template_graph['id'] : '0');\n\n\t\tif ($form_array[$field_name]['method'] != 'spacer') {\n\t\t\t$form_array[$field_name]['sub_checkbox'] = array(\n\t\t\t\t'name' => 't_' . $field_name,\n\t\t\t\t'friendly_name' => __esc('Check this checkbox if you wish to allow the user to override the value on the right during Graph creation.'),\n\t\t\t\t'value' => (isset($template_graph['t_' . $field_name]) ? $template_graph['t_' . $field_name] : '')\n\t\t\t);\n\t\t}\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\n\tform_hidden_box('rrdtool_version', get_rrdtool_version(), '');\n\n\thtml_end_box(true, true);\n\n\tform_save_button('graph_templates.php', 'return');\n\n\t//Now we need some javascript to make it dynamic\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\tdynamic();\n\t});\n\n\tfunction dynamic() {\n\t\t$('#t_scale_log_units').prop('disabled', true);\n\t\t$('#scale_log_units').prop('disabled', true);\n\t\tif ($('#auto_scale_log').is(':checked')) {\n\t\t\t$('#t_scale_log_units').prop('disabled', false);\n\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t}\n\t}\n\n\tfunction changeScaleLog() {\n\t\t$('#t_scale_log_units').prop('disabled', true);\n\t\t$('#scale_log_units').prop('disabled', true);\n\t\tif ($('#auto_scale_log').is(':checked')) {\n\t\t\t$('#t_scale_log_units').prop('disabled', false);\n\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t}\n\t}\n\t</script>\n\t<?php\n}\n\nfunction template() {\n\tglobal $graph_actions, $item_rows, $image_types;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_gt');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('Graph Templates'), '100%', '', '3', 'center', 'graph_templates.php?action=template_edit');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_graph_template' action='graph_templates.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default' id='filter' name='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Graph Templates');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='has_graphs' <?php print (get_request_var('has_graphs') == 'true' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='has_graphs'><?php print __('Has Graphs');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t<script type='text/javascript'>\n\t\tvar disabled = true;\n\n\t\tfunction applyFilter() {\n\t\t\tstrURL  = 'graph_templates.php?header=false';\n\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\tstrURL += '&has_graphs='+$('#has_graphs').is(':checked');\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\tfunction clearFilter() {\n\t\t\tstrURL = 'graph_templates.php?clear=1&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#refresh').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#has_graphs').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#clear').click(function() {\n\t\t\t\tclearFilter();\n\t\t\t});\n\n\t\t\t$('#form_graph_template').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\t\t});\n\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (gt.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_having = 'HAVING graphs>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(`rows`)\n\t\tFROM (SELECT\n\t\t\tCOUNT(gt.id) AS `rows`,\n\t\t\tCOUNT(gl.id) AS graphs\n\t\t\tFROM graph_templates AS gt\n\t\t\tLEFT JOIN graph_local AS gl\n\t\t\tON gt.id=gl.graph_template_id\n\t\t\tINNER JOIN (\n\t\t\t\tSELECT *\n\t\t\t\tFROM graph_templates_graph AS gtg\n\t\t\t\tWHERE gtg.local_graph_id=0\n\t\t\t) AS gtg\n\t\t\tON gtg.graph_template_id=gt.id\n\t\t\t$sql_where\n\t\t\tGROUP BY gt.id\n\t\t\t$sql_having\n\t\t) AS rs\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$template_list = db_fetch_assoc(\"SELECT\n\t\tgt.id, gt.name, gl.snmp_query_id AS dqid,\n\t\tCONCAT(gtg.height,'x',gtg.width) AS size, gtg.vertical_label,\n\t\tgtg.image_format_id, COUNT(gl.id) AS graphs\n\t\tFROM graph_templates AS gt\n\t\tINNER JOIN graph_templates_graph AS gtg\n\t\tON gtg.graph_template_id=gt.id\n\t\tAND gtg.local_graph_id=0\n\t\tLEFT JOIN graph_local AS gl\n\t\tON gt.id=gl.graph_template_id\n\t\t$sql_where\n\t\tGROUP BY gt.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('graph_templates.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 8, __('Graph Templates'), 'page', 'main');\n\n\tform_start('graph_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'            => array('display' => __('Graph Template Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this Graph Template.')),\n\t\t'gt.id'           => array('display' => __('ID'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The internal ID for this Graph Template.  Useful when performing automation or debugging.')),\n\t\t'nosort3'         => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('Graph Templates that are in use cannot be Deleted.  In use is defined as being referenced by a Graph.')),\n\t\t'graphs'          => array('display' => __('Graphs Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Graphs using this Graph Template.')),\n\t\t'size'            => array('display' => __('Size'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The default size of the resulting Graphs.')),\n\t\t'image_format_id' => array('display' => __('Image Format'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The default image format for the resulting Graphs.')),\n\t\t'vertical_label'  => array('display' => __('Vertical Label'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The vertical label for the resulting Graphs.'))\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['graphs'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\t\t\tform_alternate_row('line' . $template['id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'graph_templates.php?action=template_edit&id=' . $template['id']), $template['id']);\n\t\t\tform_selectable_cell($template['id'], $template['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $template['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell(number_format_i18n($template['graphs'], '-1'), $template['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($template['size'], $template['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($image_types[$template['image_format_id']], $template['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($template['vertical_label'], $template['id'], '', 'text-align:right');\n\t\t\tform_checkbox_cell($template['name'], $template['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='4'><em>\" . __('No Graph Templates Found') . \"</em></td></tr>\\n\";\n\t}\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($graph_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n$guest_account = true;\n\ninclude('./include/auth.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/html_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/reports.php');\ninclude_once('./lib/timespan_settings.php');\n\n/* set the default graph action */\nset_default_graph_action();\n\n/* perform spikekill action */\nhtml_spikekill_actions();\n\n/* process tree settings */\nprocess_tree_settings();\n\n/* setup realtime defaults if they are not set */\ninitialize_realtime_step_and_window();\n\nfunction get_matching_nodes() {\n\t$my_matches = array();\n\t$match = array();\n\n\t$filter = '%' . get_nfilter_request_var('str') . '%';\n\n\tif (get_nfilter_request_var('str') != '') {\n\t\t$matching = db_fetch_assoc_prepared(\"SELECT gti.parent, gti.graph_tree_id\n\t\t\tFROM graph_tree_items AS gti\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id=gti.host_id\n\t\t\tLEFT JOIN graph_templates_graph AS gtg\n\t\t\tON gtg.local_graph_id=gti.local_graph_id AND gtg.local_graph_id>0\n\t\t\tWHERE gtg.title_cache LIKE ?\n\t\t\tOR h.description LIKE ?\n\t\t\tOR h.hostname LIKE ?\n\t\t\tOR gti.title LIKE ?\",\n\t\t\tarray($filter, $filter, $filter, $filter));\n\t} else {\n\t\t$matching = db_fetch_assoc(\"SELECT parent, graph_tree_id FROM graph_tree_items\");\n\t}\n\n\tif (cacti_sizeof($matching)) {\n\t\tforeach($matching as $row) {\n\t\t\twhile ($row['parent'] != '0') {\n\t\t\t\t$match[] = 'tbranch-' . $row['parent'];\n\n\t\t\t\t$row = db_fetch_row_prepared('SELECT parent, graph_tree_id\n\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($row['parent']));\n\n\t\t\t\tif (!cacti_sizeof($row)) {\n\t\t\t\t    break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cacti_sizeof($row)) {\n\t\t\t\t$match[]      = 'tree_anchor-' . $row['graph_tree_id'];\n\t\t\t\t$my_matches[] = array_reverse($match);\n\t\t\t\t$match        = array();\n\t\t\t}\n\t\t}\n\n\t\t// Now flatten the list of nodes\n\t\t$final_array = array();\n\t\t$level = 0;\n\t\twhile (true) {\n\t\t\t$found = 0;\n\t\t\tforeach($my_matches as $match) {\n\t\t\t\tif (isset($match[$level])) {\n\t\t\t\t\tif ($level == 0) {\n\t\t\t\t\t\t$final_array[$match[$level]][$match[$level]] = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$final_array[$match[0]][$match[$level]] = 1;\n\t\t\t\t\t}\n\t\t\t\t\t$found++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$level++;\n\n\t\t\tif ($found == 0) {\n\t\t\t    break;\n\t\t\t}\n\t\t}\n\n\t\tif (cacti_sizeof($final_array)) {\n\t\t\t$fa = array();\n\n\t\t\tforeach($final_array as $key => $matches) {\n\t\t\t\tforeach($matches as $branch => $dnc) {\n\t\t\t\t\t$fa[] = $branch;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Content-Type: application/json; charset=utf-8');\n\n\t\tprint json_encode($fa);\n\t}\n}\n\nswitch (get_nfilter_request_var('action')) {\ncase 'ajax_hosts':\n\tget_allowed_ajax_hosts();\n\n\tbreak;\ncase 'ajax_search':\n\tget_matching_nodes();\n\texit;\n\n\tbreak;\ncase 'ajax_reports':\n\t// Add to a report\n\tget_filter_request_var('report_id');\n\tget_filter_request_var('timespan');\n\tget_filter_request_var('align');\n\n\tif (isset_request_var('graph_list')) {\n\t\t$items = explode(',', get_request_var('graph_list'));\n\n\t\tif (cacti_sizeof($items)) {\n\t\t\t$good = true;\n\n\t\t\tforeach($items as $item) {\n\t\t\t\tif (!reports_add_graphs(get_filter_request_var('report_id'), $item, get_request_var('timespan'), get_request_var('align'))) {\n\t\t\t\t\traise_message('reports_add_error');\n\t\t\t\t\t$good = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($good) {\n\t\t\t\traise_message('reports_graphs_added');\n\t\t\t}\n\t\t}\n\t} else {\n\t\traise_message('reports_no_graph');\n\t}\n\n\theader('Location: graph_view.php?action=list&header=false');\n\n\tbreak;\ncase 'update_timespan':\n\t// we really don't need to do anything.  The session variables have already been updated\n\n\tbreak;\ncase 'save':\n\tif (is_view_allowed('graph_settings')) {\n\t\tget_filter_request_var('columns');\n\t\tget_filter_request_var('predefined_timespan');\n\t\tget_filter_request_var('predefined_timeshift');\n\t\tget_filter_request_var('graphs');\n\t\tget_filter_request_var('thumbnails', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '(true|false)')));\n\n\t\tif (isset_request_var('predefined_timespan')) {\n\t\t\tset_graph_config_option('default_timespan', get_request_var('predefined_timespan'));\n\t\t}\n\n\t\tif (isset_request_var('predefined_timeshift')) {\n\t\t\tset_graph_config_option('default_timeshift', get_request_var('predefined_timeshift'));\n\t\t}\n\n\t\tif (isset_request_var('section') && get_nfilter_request_var('section') == 'preview') {\n\t\t\tif (isset_request_var('columns')) {\n\t\t\t\tset_graph_config_option('num_columns', get_request_var('columns'));\n\t\t\t}\n\t\t\tif (isset_request_var('graphs')) {\n\t\t\t\tset_graph_config_option('preview_graphs_per_page', get_request_var('graphs'));\n\t\t\t}\n\t\t\tif (isset_request_var('thumbnails')) {\n\t\t\t\tset_graph_config_option('thumbnail_section_preview', get_nfilter_request_var('thumbnails') == 'true' ? 'on':'');\n\t\t\t}\n\t\t} else {\n\t\t\tif (isset_request_var('columns')) {\n\t\t\t\tset_graph_config_option('num_columns_tree', get_request_var('columns'));\n\t\t\t}\n\t\t\tif (isset_request_var('graphs')) {\n\t\t\t\tset_graph_config_option('treeview_graphs_per_page', get_request_var('graphs'));\n\t\t\t}\n\t\t\tif (isset_request_var('thumbnails')) {\n\t\t\t\tset_graph_config_option('thumbnail_section_tree_2', get_request_var('thumbnails') == 'true' ? 'on':'');\n\t\t\t}\n\t\t}\n\t}\n\n\tbreak;\ncase 'tree':\n\tif (isset_request_var('tree_id')) {\n\t\t$_SESSION['sess_tree_id'] = get_filter_request_var('tree_id');\n\t}\n\n\ttop_graph_header();\n\n\tbottom_footer();\n\n\tbreak;\ncase 'get_node':\n\t$parent  = -1;\n\t$tree_id = 0;\n\n\tif (isset_request_var('tree_id')) {\n\t\tif (get_nfilter_request_var('tree_id') == 0 && strstr(get_nfilter_request_var('id'), 'tbranch-') !== false) {\n\t\t\t$tree_id = db_fetch_cell_prepared('SELECT graph_tree_id\n\t\t\t\tFROM graph_tree_items\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(str_replace('tbranch-', '', get_nfilter_request_var('id'))));\n\t\t}else if (get_nfilter_request_var('tree_id') == 'default' ||\n\t\t\tget_nfilter_request_var('tree_id') == 'undefined' ||\n\t\t\tget_nfilter_request_var('tree_id') == '') {\n\n\t\t\t$tree_id = read_user_setting('default_tree_id');\n\t\t} elseif (get_nfilter_request_var('tree_id') == 0 &&\n\t\t\tsubstr_count(get_nfilter_request_var('id'), 'tree_anchor') > 0) {\n\n\t\t\t$ndata = explode('-', get_nfilter_request_var('id'));\n\t\t\t$tree_id = $ndata[1];\n\t\t\tinput_validate_input_number($tree_id);\n\t\t}\n\t} else {\n\t\t$tree_id = read_user_setting('default_tree_id');\n\t}\n\n\tif (isset_request_var('id') && get_nfilter_request_var('id') != '#') {\n\t\tif (substr_count(get_nfilter_request_var('id'), 'tree_anchor')) {\n\t\t\t$parent = -1;\n\t\t} else {\n\t\t\t$ndata = explode('_', get_nfilter_request_var('id'));\n\n\t\t\tforeach($ndata as $node) {\n\t\t\t\t$pnode = explode('-', $node);\n\n\t\t\t\tif ($pnode[0] == 'tbranch') {\n\t\t\t\t\t$parent = $pnode[1];\n\t\t\t\t\tinput_validate_input_number($parent);\n\n\t\t\t\t\t$tree_id = db_fetch_cell_prepared('SELECT graph_tree_id\n\t\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($parent));\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tapi_tree_get_main($tree_id, $parent);\n\n\tbreak;\ncase 'tree_content':\n\thtml_validate_tree_vars();\n\n\tif (!is_view_allowed('show_tree')) {\n\t\tprint \"<font class='txtErrorTextBox'>\" . __('YOU DO NOT HAVE RIGHTS FOR TREE VIEW') . '</font>';\n\t\texit;\n\t}\n\n\tif (!isempty_request_var('node')) {\n\t\t$_SESSION['sess_graph_node'] = get_request_var('node');\n\n\t\tif (!isempty_request_var('hgd')) {\n\t\t\t$_SESSION['sess_graph_hgd'] = get_request_var('hgd');\n\t\t} else {\n\t\t\t$_SESSION['sess_graph_hgd'] = '';\n\t\t}\n\t} elseif (isset($_SESSION['sess_graph_node'])) {\n\t\tset_request_var('node', $_SESSION['sess_graph_node']);\n\t\tset_request_var('hgd', $_SESSION['sess_graph_hgd']);\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tvar refreshIsLogout = false;\n\tvar refreshPage     = '<?php print str_replace('tree_content', 'tree', sanitize_uri($_SERVER['REQUEST_URI']));?>';\n\tvar refreshMSeconds = <?php print read_user_setting('page_refresh')*1000;?>;\n\tvar graph_start     = <?php print get_current_graph_start();?>;\n\tvar graph_end       = <?php print get_current_graph_end();?>;\n\tvar timeOffset      = <?php print date('Z');?>\n\n\t// Adjust the height of the tree\n\t$(function() {\n\t\tpageAction   = 'tree';\n\t\tnavHeight    = $('.cactiTreeNavigationArea').height();\n\t\twindowHeight = $(window).height();\n\t\tnavOffset    = $('.cactiTreeNavigationArea').offset();\n\t\tif (navHeight + navOffset.top < windowHeight) {\n\t\t\t$('.cactiTreeNavigationArea').height(windowHeight - navOffset.top);\n\t\t}\n\t});\n\t</script>\n\t<?php\n\n\t$access_denied = false;\n\t$tree_parameters = array();\n\t$tree_id = 0;\n\t$node_id = 0;\n\t$hgdata  = 0;\n\n\tif (isset_request_var('node')) {\n\t\t$parts = explode('-', get_request_var('node'));\n\n\t\t// Check for tree anchoe\n\t\tif (strpos(get_request_var('node'), 'tree_anchor') !== false) {\n\t\t\t$tree_id = $parts[1];\n\t\t\t$node_id = 0;\n\t\t} elseif (strpos(get_request_var('node'), 'tbranch') !== false) {\n\t\t\t// Check for branch\n\t\t\t$node_id = $parts[1];\n\t\t\t$tree_id = db_fetch_cell_prepared('SELECT graph_tree_id\n\t\t\t\tFROM graph_tree_items\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($node_id));\n\t\t}\n\t}\n\n\tif (isset_request_var('hgd')) {\n\t\t$hgdata = get_request_var('hgd');\n\t}\n\n\tif ($tree_id > 0) {\n\t\tif (!is_tree_allowed($tree_id)) {\n\t\t\theader('Location: permission_denied.php');\n\t\t\texit;\n\t\t}\n\n\t\tgrow_right_pane_tree($tree_id, $node_id, $hgdata);\n\t}\n\n\tbottom_footer();\n\n\tbreak;\ncase 'preview':\n\ttop_graph_header();\n\n\tif (!is_view_allowed('show_preview')) {\n\t\tprint \"<font class='txtErrorTextBox'>\" . __('YOU DO NOT HAVE RIGHTS FOR PREVIEW VIEW') . \"</font>\";\n\t\tbottom_footer();\n\t\texit;\n\t}\n\n\tif (isset_request_var('external_id')) {\n\t\t$host_id = db_fetch_cell_prepared('SELECT id FROM host WHERE external_id = ?', array(get_nfilter_request_var('external_id')));\n\t\tif (!empty($host_id)) {\n\t\t\tset_request_var('host_id', $host_id);\n\t\t\tset_request_var('reset',true);\n\t\t}\n\t}\n\n\thtml_graph_validate_preview_request_vars();\n\n\t/* include graph view filter selector */\n\thtml_start_box(__('Graph Preview Filters') . (isset_request_var('style') && get_request_var('style') != '' ? ' ' . __('[ Custom Graph List Applied - Filtering from List ]'):''), '100%', '', '3', 'center', '');\n\n\thtml_graph_preview_filter('graph_view.php', 'preview');\n\n\thtml_end_box();\n\n\t/* the user select a bunch of graphs of the 'list' view and wants them displayed here */\n\t$sql_or = '';\n\tif (isset_request_var('style')) {\n\t\tif (get_request_var('style') == 'selective') {\n\t\t\t$graph_list = array();\n\n\t\t\t/* process selected graphs */\n\t\t\tif (!isempty_request_var('graph_list')) {\n\t\t\t\tforeach (explode(',', get_request_var('graph_list')) as $item) {\n\t\t\t\t\tif (is_numeric($item)) {\n\t\t\t\t\t\t$graph_list[$item] = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!isempty_request_var('graph_add')) {\n\t\t\t\tforeach (explode(',', get_request_var('graph_add')) as $item) {\n\t\t\t\t\tif (is_numeric($item)) {\n\t\t\t\t\t\t$graph_list[$item] = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* remove items */\n\t\t\tif (!isempty_request_var('graph_remove')) {\n\t\t\t\tforeach (explode(',', get_request_var('graph_remove')) as $item) {\n\t\t\t\t\tunset($graph_list[$item]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$i = 0;\n\t\t\tforeach ($graph_list as $item => $value) {\n\t\t\t\t$graph_array[$i] = $item;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tif ((isset($graph_array)) && (cacti_sizeof($graph_array) > 0)) {\n\t\t\t\t/* build sql string including each graph the user checked */\n\t\t\t\t$sql_or = array_to_sql_or($graph_array, 'gtg.local_graph_id');\n\t\t\t}\n\t\t}\n\t}\n\n\t$total_graphs = 0;\n\n\t/* create filter for sql */\n\t$sql_where  = '';\n\tif (!isempty_request_var('rfilter')) {\n\t\t$sql_where .= \" gtg.title_cache RLIKE '\" . get_request_var('rfilter') . \"'\";\n\t}\n\n\t$sql_where .= ($sql_or != '' && $sql_where != '' ? ' AND ':'') . $sql_or;\n\n\tif (!isempty_request_var('host_id') && get_request_var('host_id') > 0) {\n\t\t$sql_where .= (empty($sql_where) ? '' : ' AND') . ' gl.host_id=' . get_request_var('host_id');\n\t} elseif (isempty_request_var('host_id')) {\n\t\t$sql_where .= (empty($sql_where) ? '' : ' AND') . ' gl.host_id=0';\n\t}\n\n\tif (!isempty_request_var('graph_template_id') && get_request_var('graph_template_id') != '-1' && get_request_var('graph_template_id') != '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . ' (gl.graph_template_id IN (' . get_request_var('graph_template_id') . '))';\n\t} elseif (get_request_var('graph_template_id') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . ' (gl.graph_template_id IN (' . get_request_var('graph_template_id') . '))';\n\t}\n\n\t$limit      = (get_request_var('graphs')*(get_request_var('page')-1)) . ',' . get_request_var('graphs');\n\t$order      = 'gtg.title_cache';\n\n\t$graphs     = get_allowed_graphs($sql_where, $order, $limit, $total_graphs);\n\n\t$nav = html_nav_bar('graph_view.php', MAX_DISPLAY_PAGES, get_request_var('page'), get_request_var('graphs'), $total_graphs, get_request_var('columns'), __('Graphs'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\tif (get_request_var('thumbnails') == 'true') {\n\t\thtml_graph_thumbnail_area($graphs, '', 'graph_start=' . get_current_graph_start() . '&graph_end=' . get_current_graph_end(), '', get_request_var('columns'));\n\t} else {\n\t\thtml_graph_area($graphs, '', 'graph_start=' . get_current_graph_start() . '&graph_end=' . get_current_graph_end(), '', get_request_var('columns'));\n\t}\n\n\thtml_end_box();\n\n\tif ($total_graphs) {\n\t\tprint $nav;\n\t}\n\n\tif (!isset_request_var('header') || get_nfilter_request_var('header') == 'false') {\n\t\tbottom_footer();\n\t}\n\n\tbreak;\ncase 'list':\n\ttop_graph_header();\n\n\tif (!is_view_allowed('show_list')) {\n\t\tprint \"<font class='txtErrorTextBox'>\" . __('YOU DO NOT HAVE RIGHTS FOR LIST VIEW') . '</font>';\n\t\tbottom_footer();\n\t\texit;\n\t}\n\n\t/* reset the graph list on a new viewing */\n\tif (!isset_request_var('page')) {\n\t\tset_request_var('graph_list', '');\n\t}\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'rfilter' => array(\n\t\t\t'filter' => FILTER_VALIDATE_IS_REGEX,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t),\n\t\t'graph_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_IS_NUMERIC_LIST,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'host_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'graph_add' => array(\n\t\t\t'filter' => FILTER_VALIDATE_IS_NUMERIC_LIST,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'graph_list' => array(\n\t\t\t'filter' => FILTER_VALIDATE_IS_NUMERIC_LIST,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'graph_remove' => array(\n\t\t\t'filter' => FILTER_VALIDATE_IS_NUMERIC_LIST,\n\t\t\t'default' => ''\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_gl');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$graph_list = array();\n\n\t/* save selected graphs into url */\n\tif (!isempty_request_var('graph_list')) {\n\t\tforeach (explode(',', get_request_var('graph_list')) as $item) {\n\t\t\tif (is_numeric($item)) {\n\t\t\t\t$graph_list[$item] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!isempty_request_var('graph_add')) {\n\t\tforeach (explode(',', get_request_var('graph_add')) as $item) {\n\t\t\tif (is_numeric($item)) {\n\t\t\t\t$graph_list[$item] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* remove items */\n\tif (!isempty_request_var('graph_remove')) {\n\t\tforeach (explode(',', get_request_var('graph_remove')) as $item) {\n\t\t\tunset($graph_list[$item]);\n\t\t}\n\t}\n\n\t/* update the revised graph list session variable */\n\tif (cacti_sizeof($graph_list)) {\n\t\tset_request_var('graph_list', implode(',', array_keys($graph_list)));\n\t}\n\tload_current_session_value('graph_list', 'sess_gl_graph_list', '');\n\n\t$reports = db_fetch_assoc_prepared('SELECT *\n\t\tFROM reports\n\t\tWHERE user_id = ?',\n\t\tarray($_SESSION['sess_user_id']));\n\n\tform_start('graph_view.php', 'chk');\n\n\t/* display graph view filter selector */\n\thtml_start_box(__('Graph List View Filters') . (isset_request_var('style') && get_request_var('style') != '' ? ' ' . __('[ Custom Graph List Applied - Filter FROM List ]'):''), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td class='noprint'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr class='noprint'>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='rfilter' size='30' value='<?php print html_escape_request_var('rfilter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<?php html_host_filter(get_request_var('host_id'));?>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>' onClick='clearFilter()'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('View');?>' title='<?php print __esc('View Graphs');?>' onClick='viewGraphs()'>\n\t\t\t\t\t\t\t<?php if (cacti_sizeof($reports)) {?>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='addreport' value='<?php print __esc('Report');?>' title='<?php print __esc('Add to a Report');?>'>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='graph_template_id' multiple style='opacity:0.1;overflow:hide;height:0px;'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('graph_template_id') == '-1') {?> selected<?php }?>><?php print __('All Graphs & Templates');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('graph_template_id') == '0') {?> selected<?php }?>><?php print __('Not Templated');?></option>\n\t\t\t\t\t\t\t<?php\n\n\t\t\t\t\t\t\t// suppress total rows collection\n\t\t\t\t\t\t\t$total_rows = -1;\n\n\t\t\t\t\t\t\t$graph_templates = get_allowed_graph_templates('', 'name', '', $total_rows);\n\t\t\t\t\t\t\tif (cacti_sizeof($graph_templates)) {\n\t\t\t\t\t\t\t\t$selected    = explode(',', get_request_var('graph_template_id'));\n\t\t\t\t\t\t\t\tforeach ($graph_templates as $gt) {\n\t\t\t\t\t\t\t\t\tif ($gt['id'] != 0) {\n\t\t\t\t\t\t\t\t\t\t$found = db_fetch_cell_prepared('SELECT id\n\t\t\t\t\t\t\t\t\t\t\tFROM graph_local\n\t\t\t\t\t\t\t\t\t\t\tWHERE graph_template_id = ? LIMIT 1',\n\t\t\t\t\t\t\t\t\t\t\tarray($gt['id']));\n\n\t\t\t\t\t\t\t\t\t\tif ($found) {\n\t\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $gt['id'] . \"'\";\n\t\t\t\t\t\t\t\t\t\t\tif (cacti_sizeof($selected)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (in_array($gt['id'], $selected)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tprint ' selected';\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tprint '>';\n\t\t\t\t\t\t\t\t\t\t\tprint $gt['name'] . \"</option>\\n\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Graphs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . $value . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' id='style' value='selective'>\n\t\t\t<input type='hidden' id='action' value='list'>\n\t\t\t<input type='hidden' id='graph_add' value=''>\n\t\t\t<input type='hidden' id='graph_remove' value=''>\n\t\t\t<input type='hidden' id='graph_list' value='<?php print get_request_var('graph_list');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\thtml_end_box();\n\n\t/* create filter for sql */\n\t$sql_where  = '';\n\tif (!isempty_request_var('rfilter')) {\n\t\t$sql_where .= \" gtg.title_cache RLIKE '\" . get_request_var('rfilter') . \"'\";\n\t}\n\n\tif (!isempty_request_var('host_id') && get_request_var('host_id') > 0) {\n\t\t$sql_where .= ($sql_where == '' ? '' : ' AND') . ' gl.host_id=' . get_request_var('host_id');\n\t} elseif (isempty_request_var('host_id')) {\n\t\t$sql_where .= ($sql_where == '' ? '' : ' AND') . ' gl.host_id=0';\n\t}\n\n\tif (!isempty_request_var('graph_template_id') && get_request_var('graph_template_id') != '-1' && get_request_var('graph_template_id') != '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . ' (gl.graph_template_id IN (' . get_request_var('graph_template_id') . '))';\n\t} elseif (get_request_var('graph_template_id') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . ' (gl.graph_template_id IN (' . get_request_var('graph_template_id') . '))';\n\t}\n\n\t$total_rows = 0;\n\t$limit      = ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$graphs = get_allowed_graphs($sql_where, 'gtg.title_cache', $limit, $total_rows);\n\n\t$nav = html_nav_bar('graph_view.php?action=list', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Graphs'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_checkbox(array(__('Graph Title'), __('Device'), __('Graph Template'), __('Graph Size')), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($graphs)) {\n\t\tforeach ($graphs as $graph) {\n\t\t\tif ($graph['description'] == '' && $graph['template_name'] == '') {\n\t\t\t\t$aggregate = db_fetch_cell_prepared('SELECT agt.name\n\t\t\t\t\tFROM aggregate_graphs AS ag\n\t\t\t\t\tINNER JOIN aggregate_graph_templates AS agt\n\t\t\t\t\tON ag.aggregate_template_id=agt.id\n\t\t\t\t\tWHERE local_graph_id = ?',\n\t\t\t\t\tarray($graph['local_graph_id']));\n\n\t\t\t\tif (!empty($aggregate)) {\n\t\t\t\t\t$graph['description']   = __('Aggregated Device');\n\t\t\t\t\t$graph['template_name'] = $aggregate;\n\t\t\t\t} else {\n\t\t\t\t\t$graph['description']   = __('Non-Device');\n\t\t\t\t\t$graph['template_name'] = __('Not Applicable');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $graph['local_graph_id'], true);\n\t\t\tform_selectable_cell(filter_value($graph['title_cache'], get_request_var('rfilter'), 'graph.php?local_graph_id=' . $graph['local_graph_id'] . '&rra_id=0'), $graph['local_graph_id']);\n\t\t\tform_selectable_cell($graph['description'], $graph['local_graph_id']);\n\t\t\tform_selectable_cell($graph['template_name'], $graph['local_graph_id']);\n\t\t\tform_selectable_cell($graph['height'] . 'x' . $graph['width'], $graph['local_graph_id']);\n\t\t\tform_checkbox_cell($graph['title_cache'], $graph['local_graph_id']);\n\t\t\tform_end_row();\n\t\t}\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($graphs)) {\n\t\tprint $nav;\n\t}\n\n\tform_end();\n\n\tglobal $graph_timespans, $alignment;\n\n\t$report_text = '';\n\n\tif (cacti_sizeof($reports)) {\n\t\t$report_text = '<div id=\"addGraphs\" style=\"display:none;\">\n\t\t\t<p>' . __('Select the Report to add the selected Graphs to.') . '</p>\n\t\t\t<table class=\"cactiTable\">';\n\n\t\t$report_text .= '<tr><td>' . __('Report Name') . '</td>';\n\t\t$report_text .= '<td><select id=\"report_id\">';\n\t\tforeach($reports as $report) {\n\t\t\t$report_text .= '<option value=\"' . $report['id'] . '\">' . $report['name'] . '</option>';\n\t\t}\n\t\t$report_text .= '</select></td></tr>';\n\n\t\t$report_text .= '<tr><td>' . __('Timespan') . '</td>';\n\t\t$report_text .= '<td><select id=\"timespan\">';\n\t\tforeach($graph_timespans as $key => $value) {\n\t\t\t$report_text .= '<option value=\"' . $key . '\"' . ($key == read_user_setting('default_timespan') ? ' selected':'') . '>' . $value . '</option>';\n\t\t}\n\t\t$report_text .= '</select></td></tr>';\n\n\t\t$report_text .= '<tr><td>' . __('Align') . '</td>';\n\t\t$report_text .= '<td><select id=\"align\">';\n\t\tforeach($alignment as $key => $value) {\n\t\t\t$report_text .= '<option value=\"' . $key . '\"' . ($key == REPORTS_ALIGN_CENTER ? ' selected':'') . '>' . $value . '</option>';\n\t\t}\n\t\t$report_text .= '</select></td></tr>';\n\n\t\t$report_text .= '</table></div>';\n\t}\n\n\t?>\n\t<div class='break'></div>\n\t<div class='cactiTable'>\n\t\t<div style='float:left'><img src='images/arrow.gif' alt=''>&nbsp;</div>\n\t\t<div style='float:right'><input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('View');?>' title='<?php print __esc('View Graphs');?>' onClick='viewGraphs()'></div>\n\t</div>\n\t<?php print $report_text;?>\n\t<script type='text/javascript'>\n\tvar refreshMSeconds=999999999;\n\tvar graph_list_array = new Array(<?php print get_request_var('graph_list');?>);\n\n\tfunction clearFilter() {\n\t\tstrURL = 'graph_view.php?action=list&header=false&clear=1';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction applyFilter() {\n\t\tstrURL = 'graph_view.php?action=list&header=false&page=1';\n\t\tstrURL += '&host_id=' + $('#host_id').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&graph_template_id=' + $('#graph_template_id').val();\n\t\tstrURL += '&rfilter=' + base64_encode($('#rfilter').val());\n\t\tstrURL += url_graph('');\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction initializeChecks() {\n\t\tfor (var i = 0; i < graph_list_array.length; i++) {\n\t\t\t$('#line'+graph_list_array[i]).addClass('selected');\n\t\t\t$('#chk_'+graph_list_array[i]).prop('checked', true);\n\t\t\t$('#chk_'+graph_list_array[i]).parent().addClass('selected');\n\t\t}\n\t}\n\n\tfunction viewGraphs() {\n\t\tgraphList = $('#graph_list').val();\n\t\t$('input[id^=chk_]').each(function(data) {\n\t\t\tgraphID = $(this).attr('id').replace('chk_','');\n\t\t\tif ($(this).is(':checked')) {\n\t\t\t\tgraphList += (graphList.length > 0 ? ',':'') + graphID;\n\t\t\t}\n\t\t});\n\t\t$('#graph_list').val(graphList);\n\n\t\tstrURL = urlPath+'graph_view.php?action=preview';\n\t\t$('#chk').find('select, input').each(function() {\n\t\t\tswitch($(this).attr('id')) {\n\t\t\tcase 'graph_template_id':\n\t\t\t\tstrURL += '&' + $(this).attr('id') + '=' + $(this).val();\n\t\t\t\tbreak;\n\t\t\tcase 'host_id':\n\t\t\tcase 'rfilter':\n\t\t\tcase 'graph_add':\n\t\t\tcase 'graph_remove':\n\t\t\tcase 'graph_list':\n\t\t\tcase 'style':\n\t\t\tcase 'csrf_magic':\n\t\t\t\tstrURL += '&' + $(this).attr('id') + '=' + $(this).val();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tstrURL += '&reset=true&header=false';\n\n\t\tloadPageNoHeader(strURL);\n\n\t\t$('#breadcrumbs').empty().html('<li><a href=\"graph_view.php?action=preview\"><?php print __('Preview Mode');?></a></li>');\n\t\t$('#listview').removeClass('selected');\n\t\t$('#preview').addClass('selected');\n\t}\n\n\tfunction url_graph(strNavURL) {\n\t\tif ($('#action').val() == 'list') {\n\t\t\tvar strURL = '';\n\t\t\tvar strAdd = '';\n\t\t\tvar strDel = '';\n\t\t\t$('input[id^=chk_]').each(function(data) {\n\t\t\t\tgraphID = $(this).attr('id').replace('chk_','');\n\t\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t\tstrAdd += (strAdd.length > 0 ? ',':'') + graphID;\n\t\t\t\t} else if (graphChecked(graphID)) {\n\t\t\t\t\tstrDel += (strDel.length > 0 ? ',':'') + graphID;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tstrURL = '&demon=1&graph_list=<?php print get_request_var('graph_list');?>&graph_add=' + strAdd + '&graph_remove=' + strDel;\n\n\t\t\treturn strNavURL + strURL;\n\t\t} else {\n\t\t\treturn strNavURL;\n\t\t}\n\t}\n\n\tfunction graphChecked(graph_id) {\n\t\tfor(var i = 0; i < graph_list_array.length; i++) {\n\t\t\tif (graph_list_array[i] == graph_id) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction addReport() {\n\t\t$('#addGraphs').dialog({\n\t\t\ttitle: '<?php print __('Add Selected Graphs to Report');?>',\n\t\t\tminHeight: 80,\n\t\t\tminWidth: 400,\n\t\t\tmodal: true,\n\t\t\tresizable: false,\n\t\t\tdraggable: false,\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\ttext: '<?php print __('Cancel');?>',\n\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t$(this).dialog('close');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttext: '<?php print __('Ok');?>',\n\t\t\t\t\tclick: function() {\n\t\t\t\t\t\tgraphList = $('#graph_list').val();\n\t\t\t\t\t\t$('input[id^=chk_]').each(function(data) {\n\t\t\t\t\t\t\tgraphID = $(this).attr('id').replace('chk_','');\n\t\t\t\t\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t\t\t\t\tgraphList += (graphList.length > 0 ? ',':'') + graphID;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$('#graph_list').val(graphList);\n\n\t\t\t\t\t\t$(this).dialog('close');\n\n\t\t\t\t\t\tstrURL = 'graph_view.php?action=ajax_reports';\n\t\t\t\t\t\t\t'&header=false' +\n\t\t\t\t\t\t\t'&report_id='   + $('#report_id').val()  +\n\t\t\t\t\t\t\t'&timespan='    + $('#timespan').val()   +\n\t\t\t\t\t\t\t'&align='       + $('#align').val()      +\n\t\t\t\t\t\t\t'&graph_list='  + $('#graph_list').val();\n\n\t\t\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\topen: function() {\n\t\t\t\t$('.ui-dialog').css('z-index', 99);\n\t\t\t\t$('.ui-widget-overlay').css('z-index', 98);\n\t\t\t},\n\t\t\tclose: function() {\n\t\t\t\t$('[title]').each(function() {\n\t\t\t\t\tif ($(this).tooltip('instance')) {\n\t\t\t\t\t\t$(this).tooltip('close');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t$(function() {\n\t\tpageAction = 'list';\n\n\t\tinitializeChecks();\n\n\t\t$('#addreport').click(function() {\n\t\t\taddReport();\n\t\t});\n\n\t\t<?php html_graph_template_multiselect('list');?>\n\n\t\t$('#chk').unbind().on('submit', function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\tbottom_footer();\n\n\tbreak;\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_aggregate.php');\ninclude_once('./lib/api_automation.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/html_graph.php');\ninclude_once('./lib/html_form_template.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/reports.php');\ninclude_once('./lib/rrd.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n/* set default action */\nset_default_action();\n\nvalidate_graph_request_vars();\n\n$graph_actions = array(\n\t1  => __('Delete'),\n);\n\nif (get_nfilter_request_var('template_id') != '-1' && get_nfilter_request_var('template_id') != '0') {\n\t$graph_actions += array(\n\t\t2  => __('Change Graph Template'),\n\t);\n}\n\n$graph_actions += array(\n\t5  => __('Change Device'),\n\t6  => __('Reapply Suggested Names'),\n\t11 => __('Place Graphs on Report'),\n\t9  => __('Create Aggregate Graph'),\n\t10 => __('Create Aggregate from Template'),\n\t8  => __('Apply Automation Rules')\n);\n\nif (read_config_option('grds_creation_method') == 1) {\n\t$graph_actions += array(\n\t\t3 => __('Duplicate'),\n\t\t4 => __('Convert to Graph Template')\n\t);\n}\n\n$graph_actions = api_plugin_hook_function('graphs_action_array', $graph_actions);\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item':\n\t\ttop_header();\n\t\titem();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'ajax_graph_items':\n\t\tget_ajax_graph_items();\n\n\t\tbreak;\n\tcase 'ajax_hosts':\n\t\t$sql_where = '';\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where = 'site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(true, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\tcase 'ajax_hosts_noany':\n\t\t$sql_where = '';\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where = 'site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(false, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\tcase 'lock':\n\tcase 'unlock':\n\t\t$_SESSION['sess_graph_lock_id'] = get_filter_request_var('id');\n\t\t$_SESSION['sess_graph_locked']  = (get_request_var('action') == 'lock' ? true:false);\n\tcase 'graph_edit':\n\t\ttop_header();\n\t\tgraph_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\tgraph_management();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\n/* --------------------------\n    Global Form Functions\n   -------------------------- */\n\nfunction get_ajax_graph_items() {\n\t$rrd_id  = get_filter_request_var('rrd_id');\n\t$host_id = get_filter_request_var('host_id');\n\n\tif ($host_id > 0) {\n\t\t$sql_where = ' AND data_local.host_id=' . $host_id;\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('term') != '') {\n\t\t$sql_where .= ' HAVING name LIKE \"%' . trim(db_qstr(get_request_var('term')),\"'\") . '%\"';\n\t}\n\n\t$items  = db_fetch_assoc_prepared(\"SELECT *\n\t\tFROM (SELECT data_template_rrd.id AS id,\n\t\t\tCONCAT_WS('',\n\t\t\tCASE\n\t\t\tWHEN host.description IS NULL THEN 'No Device - '\n\t\t\tWHEN host.description IS NOT NULL THEN ''\n\t\t\tEND,\n\t\t\tdata_template_data.name_cache,' (',data_template_rrd.data_source_name,')') AS name\n\t\t\tFROM (data_template_data,data_template_rrd,data_local)\n\t\t\tLEFT JOIN host ON (data_local.host_id=host.id)\n\t\t\tWHERE data_template_rrd.local_data_id=data_local.id\n\t\t\tAND data_template_data.local_data_id=data_local.id\n\t\t\tAND data_template_rrd.id = ?\n\t\t) AS a\n\t\tUNION\n\t\tSELECT *\n\t\tFROM (SELECT data_template_rrd.id AS id,\n\t\t\tCONCAT_WS('',\n\t\t\tCASE\n\t\t\tWHEN host.description IS NULL THEN 'No Device - '\n\t\t\tWHEN host.description IS NOT NULL THEN ''\n\t\t\tEND,\n\t\t\tdata_template_data.name_cache,' (',data_template_rrd.data_source_name,')') AS name\n\t\t\tFROM (data_template_data,data_template_rrd,data_local)\n\t\t\tLEFT JOIN host ON (data_local.host_id=host.id)\n\t\t\tWHERE data_template_rrd.local_data_id=data_local.id\n\t\t\tAND data_template_data.local_data_id=data_local.id\n\t\t\t$sql_where\n\t\t\tORDER BY name\n\t\t) AS b\n\t\tLIMIT \" . read_config_option('autocomplete_rows'),\n\t\tarray($rrd_id));\n\n\tforeach($items as $key => $item) {\n\t\t$items[$key]['label'] = $item['name'];\n\t}\n\n\tprint json_encode($items);\n}\n\nfunction add_tree_names_to_actions_array() {\n\tglobal $graph_actions;\n\n\t/* add a list of tree names to the actions dropdown */\n\t$trees = db_fetch_assoc('SELECT id, name\n\t\tFROM graph_tree\n\t\tORDER BY name');\n\n\tif (cacti_sizeof($trees)) {\n\t\tforeach ($trees as $tree) {\n\t\t\t$graph_actions['tr_' . $tree['id']] = __('Place on a Tree (%s)', $tree['name']);\n\t\t}\n\t}\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction parse_validate_graph_template_id($variable) {\n\t$output_type_id = 0;\n\tif (strpos(get_nfilter_request_var($variable), '_') !== false) {\n\t\t$template_parts = explode('_', get_nfilter_request_var($variable));\n\t\tif (is_numeric($template_parts[0]) && is_numeric($template_parts[1])) {\n\t\t\tset_request_var('graph_template_id', $template_parts[0]);\n\t\t\t$output_type_id = $template_parts[1];\n\t\t} else {\n\t\t\tcacti_log('ERROR: Unable to parse graph_template_id with value ' . get_nfilter_request_var($variable), false, 'WEBUI');\n\t\t\texit;\n\t\t}\n\t} else {\n\t\tget_filter_request_var($variable);\n\t}\n\n\treturn $output_type_id;\n}\n\nfunction form_save() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('local_graph_id');\n\tget_filter_request_var('host_id');\n\tget_filter_request_var('host_id_prev');\n\tget_filter_request_var('graph_template_graph_id');\n\tget_filter_request_var('local_graph_template_graph_id');\n\t/* ==================================================== */\n\n\t$gt_id_unparsed      = get_nfilter_request_var('graph_template_id');\n\t$gt_id_prev_unparsed = get_nfilter_request_var('graph_template_id_prev');\n\tparse_validate_graph_template_id('graph_template_id');\n\n\tif (isset_request_var('save_component_graph_new') && !isempty_request_var('graph_template_id')) {\n\t\t$snmp_query_array  = array();\n\t\t$suggested_values  = array();\n\t\t$graph_template_id = get_request_var('graph_template_id');\n\t\t$host_id           = get_request_var('host_id');\n\n\t\t$return_array = create_complete_graph_from_template($graph_template_id, $host_id, $snmp_query_array, $suggested_values);\n\n\t\tif ($return_array !== false) {\n\t\t\tdebug_log_insert('new_graphs', __('Created graph: %s', get_graph_title($return_array['local_graph_id'])));\n\n\t\t\t/* lastly push host-specific information to our data sources */\n\t\t\tif (cacti_sizeof($return_array['local_data_id'])) { # we expect at least one data source associated\n\t\t\t\tforeach($return_array['local_data_id'] as $item) {\n\t\t\t\t\tpush_out_host($host_id, $item);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdebug_log_insert('new_graphs', __('ERROR: No Data Source associated. Check Template'));\n\t\t\t}\n\t\t}\n\n\t\tif (isset($return_array['local_graph_id'])) {\n\t\t\t$local_graph_id = $return_array['local_graph_id'];\n\t\t\theader('Location: graphs.php?action=graph_edit&header=false&id=' . $local_graph_id);\n\t\t} else {\n\t\t\theader('Location: graphs.php?header=false');\n\t\t}\n\n\t\texit;\n\t}\n\n\tif (isset_request_var('save_component_graph')) {\n\t\tif (get_filter_request_var('host_id') == '-1') {\n\t\t\tset_request_var('host_id', '0');\n\t\t}\n\n\t\t$save1['id']                   = get_nfilter_request_var('local_graph_id');\n\t\t$save1['host_id']              = get_request_var('host_id');\n\t\t$save1['graph_template_id']    = get_nfilter_request_var('graph_template_id');\n\n\t\t$save2['id']                   = get_nfilter_request_var('graph_template_graph_id');\n\t\t$save2['local_graph_template_graph_id'] = get_nfilter_request_var('local_graph_template_graph_id');\n\t\t$save2['graph_template_id']    = get_nfilter_request_var('graph_template_id');\n\t\t$save2['image_format_id']      = form_input_validate(get_nfilter_request_var('image_format_id'), 'image_format_id', '^[0-9]+$', true, 3);\n\t\t$save2['title']                = form_input_validate(get_nfilter_request_var('title'), 'title', '', false, 3);\n\t\t$save2['height']               = form_input_validate(get_nfilter_request_var('height'), 'height', '^[0-9]+$', false, 3);\n\t\t$save2['width']                = form_input_validate(get_nfilter_request_var('width'), 'width', '^[0-9]+$', false, 3);\n\t\t$save2['upper_limit']          = form_input_validate(get_nfilter_request_var('upper_limit'), 'upper_limit', \"^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$\", ((strlen(get_nfilter_request_var('upper_limit')) === 0) ? true : false), 3);\n\t\t$save2['lower_limit']          = form_input_validate(get_nfilter_request_var('lower_limit'), 'lower_limit', \"^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$\", ((strlen(get_nfilter_request_var('lower_limit')) === 0) ? true : false), 3);\n\t\t$save2['vertical_label']       = form_input_validate(get_nfilter_request_var('vertical_label'), 'vertical_label', '', true, 3);\n\t\t$save2['slope_mode']           = form_input_validate((isset_request_var('slope_mode') ? get_nfilter_request_var('slope_mode') : ''), 'slope_mode', '', true, 3);\n\t\t$save2['auto_scale']           = form_input_validate((isset_request_var('auto_scale') ? get_nfilter_request_var('auto_scale') : ''), 'auto_scale', '', true, 3);\n\t\t$save2['auto_scale_opts']      = form_input_validate(get_nfilter_request_var('auto_scale_opts'), 'auto_scale_opts', '', true, 3);\n\t\t$save2['auto_scale_log']       = form_input_validate((isset_request_var('auto_scale_log') ? get_nfilter_request_var('auto_scale_log') : ''), 'auto_scale_log', '', true, 3);\n\t\t$save2['scale_log_units']      = form_input_validate((isset_request_var('scale_log_units') ? get_nfilter_request_var('scale_log_units') : ''), 'scale_log_units', '', true, 3);\n\t\t$save2['auto_scale_rigid']     = form_input_validate((isset_request_var('auto_scale_rigid') ? get_nfilter_request_var('auto_scale_rigid') : ''), 'auto_scale_rigid', '', true, 3);\n\t\t$save2['auto_padding']         = form_input_validate((isset_request_var('auto_padding') ? get_nfilter_request_var('auto_padding') : ''), 'auto_padding', '', true, 3);\n\t\t$save2['base_value']           = form_input_validate(get_nfilter_request_var('base_value'), 'base_value', '^[0-9]+$', false, 3);\n\t\t$save2['unit_value']           = form_input_validate(get_nfilter_request_var('unit_value'), 'unit_value', '', true, 3);\n\t\t$save2['unit_exponent_value']  = form_input_validate(get_nfilter_request_var('unit_exponent_value'), 'unit_exponent_value', '^-?[0-9]+$', true, 3);\n\t\t$save2['alt_y_grid']           = form_input_validate((isset_request_var('alt_y_grid') ? get_nfilter_request_var('alt_y_grid') : ''), 'alt_y_grid', '', true, 3);\n\t\t$save2['right_axis']           = form_input_validate((isset_request_var('right_axis') ? get_nfilter_request_var('right_axis') : ''), 'right_axis', '^[.0-9]+:-?[.0-9]+$', true, 3);\n\t\t$save2['right_axis_label']     = form_input_validate((isset_request_var('right_axis_label') ? get_nfilter_request_var('right_axis_label') : ''), 'right_axis_label', '', true, 3);\n\t\t$save2['right_axis_format']    = form_input_validate((isset_request_var('right_axis_format') ? get_nfilter_request_var('right_axis_format') : ''), 'right_axis_format', '^[0-9]+$', true, 3);\n\t\t$save2['no_gridfit']           = form_input_validate((isset_request_var('no_gridfit') ? get_nfilter_request_var('no_gridfit') : ''), 'no_gridfit', '', true, 3);\n\t\t$save2['unit_length']          = form_input_validate((isset_request_var('unit_length') ? get_nfilter_request_var('unit_length') : ''), 'unit_length', '^[0-9]+$', true, 3);\n\t\t$save2['tab_width']            = form_input_validate((isset_request_var('tab_width') ? get_nfilter_request_var('tab_width') : ''), 'tab_width', '^[0-9]*$', true, 3);\n\t\t$save2['dynamic_labels']       = form_input_validate((isset_request_var('dynamic_labels') ? get_nfilter_request_var('dynamic_labels') : ''), 'dynamic_labels', '', true, 3);\n\t\t$save2['force_rules_legend']   = form_input_validate((isset_request_var('force_rules_legend') ? get_nfilter_request_var('force_rules_legend') : ''), 'force_rules_legend', '', true, 3);\n\t\t$save2['legend_position']      = form_input_validate((isset_request_var('legend_position') ? get_nfilter_request_var('legend_position') : ''), 'legend_position', '', true, 3);\n\t\t$save2['legend_direction']     = form_input_validate((isset_request_var('legend_direction') ? get_nfilter_request_var('legend_direction') : ''), 'legend_direction', '', true, 3);\n\t\t$save2['right_axis_formatter'] = form_input_validate((isset_request_var('right_axis_formatter') ? get_nfilter_request_var('right_axis_formatter') : ''), 'right_axis_formatter', '', true, 3);\n\t\t$save2['left_axis_formatter']  = form_input_validate((isset_request_var('left_axis_formatter') ? get_nfilter_request_var('left_axis_formatter') : ''), 'left_axis_formatter', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$local_graph_id = sql_save($save1, 'graph_local');\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$save2['local_graph_id'] = $local_graph_id;\n\t\t\t$graph_templates_graph_id = sql_save($save2, 'graph_templates_graph');\n\n\t\t\tif ($graph_templates_graph_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\n\t\t\t/* update the title cache */\n\t\t\tupdate_graph_title_cache($local_graph_id);\n\n\t\t\t/* if the host id changes, then update the graph items association too */\n\t\t\tif (get_request_var('host_id') != get_request_var('host_id_prev')) {\n\t\t\t\tif (!api_graph_change_device($local_graph_id, get_request_var('host_id'))) {\n\t\t\t\t\traise_message(34);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$lg_template_id = db_fetch_cell_prepared('SELECT graph_template_id\n\t\t\t\tFROM graph_local\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($local_graph_id)\n\t\t\t);\n\n\t\t\tif ($lg_template_id > 0) {\n\t\t\t\tchange_graph_template($local_graph_id, $gt_id_unparsed);\n\n\t\t\t\t$lg_dq_id = db_fetch_cell_prepared('SELECT snmp_query_id\n\t\t\t\t\tFROM graph_local\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($local_graph_id)\n\t\t\t\t);\n\n\t\t\t\tif ($lg_dq_id > 0) {\n\t\t\t\t\tupdate_graph_data_query_cache($local_graph_id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (isset_request_var('save_component_input')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('local_graph_id');\n\t\t/* ==================================================== */\n\n\t\t/* first; get the current graph template id */\n\t\t$graph_template_id = db_fetch_cell_prepared('SELECT graph_template_id\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_nfilter_request_var('local_graph_id')));\n\n\t\t/* get all inputs that go along with this graph template, if templated */\n\t\tif ($graph_template_id > 0) {\n\t\t\t$input_list = db_fetch_assoc_prepared('SELECT id, column_name\n\t\t\t\tFROM graph_template_input\n\t\t\t\tWHERE graph_template_id = ?',\n\t\t\t\tarray($graph_template_id));\n\n\t\t\tif (cacti_sizeof($input_list)) {\n\t\t\t\tforeach ($input_list as $input) {\n\t\t\t\t\t/* we need to find out which graph items will be affected by saving this particular item */\n\t\t\t\t\t$item_list = db_fetch_assoc_prepared('SELECT gti.id\n\t\t\t\t\t\tFROM graph_template_input_defs AS gtid\n\t\t\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\t\t\tON gtid.graph_template_item_id=gti.local_graph_template_item_id\n\t\t\t\t\t\tWHERE gti.local_graph_id = ?\n\t\t\t\t\t\tAND gtid.graph_template_input_id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('local_graph_id'), $input['id']));\n\n\t\t\t\t\t/* loop through each item affected and update column data */\n\t\t\t\t\tif (cacti_sizeof($item_list)) {\n\t\t\t\t\t\tforeach ($item_list as $item) {\n\t\t\t\t\t\t\t/* if we are changing templates, the POST vars we are searching for here will not exist.\n\t\t\t\t\t\t\t this is because the db and form are out of sync here, but it is ok to just skip over saving\n\t\t\t\t\t\t\t the inputs in this case. */\n\t\t\t\t\t\t\tif (isset_request_var($input['column_name'] . '_' . $input['id'])) {\n\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\t\t\t\t\tSET ' . $input['column_name'] . ' = ?\n\t\t\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\t\t\tarray(get_nfilter_request_var($input['column_name'] . '_' . $input['id']), $item['id']));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif ((isset_request_var('save_component_graph_new')) && (isempty_request_var('graph_template_id'))) {\n\t\theader('Location: graphs.php?action=graph_edit&header=false&host_id=' . get_nfilter_request_var('host_id') . '&new=1');\n\t} elseif ((is_error_message()) || (isempty_request_var('local_graph_id')) || (get_nfilter_request_var('graph_template_id') != get_nfilter_request_var('graph_template_id_prev')) || (get_nfilter_request_var('host_id') != get_nfilter_request_var('host_id_prev'))) {\n\t\theader('Location: graphs.php?action=graph_edit&header=false&id=' . (empty($local_graph_id) ? get_nfilter_request_var('local_graph_id') : $local_graph_id) . (isset_request_var('host_id') ? '&host_id=' . get_nfilter_request_var('host_id') : ''));\n\t} else {\n\t\theader('Location: graphs.php?header=false');\n\t}\n}\n\n/* ------------------------\n    The \"actions\" function\n   ------------------------ */\n\nfunction get_current_graph_template_details($local_graph_id) {\n\t$graph_local = db_fetch_row_prepared('SELECT *\n\t\tFROM graph_local\n\t\tWHERE id = ?',\n\t\tarray($local_graph_id));\n\n\tif (!cacti_sizeof($graph_local) || $graph_local['graph_template_id'] == 0) {\n\t\treturn array('id' => 0, 'name' => __('Not Templated'), 'source' => 0);\n\t} elseif ($graph_local['snmp_query_id'] > 0) {\n\t\t$detail = db_fetch_row_prepared('SELECT sqg.id, sqg.name\n\t\t\tFROM snmp_query_graph AS sqg\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.snmp_query_graph_id=sqg.id\n\t\t\tAND gl.snmp_query_id=sqg.snmp_query_id\n\t\t\tWHERE gl.id = ?',\n\t\t\tarray($local_graph_id));\n\n\t\tif (cacti_sizeof($detail)) {\n\t\t\treturn array('id' => $detail['id'], 'name' => $detail['name'], 'source' => 1);\n\t\t} else {\n\t\t\treturn array('id' => 0, 'name' => __('Not Found'), 'source' => 1);\n\t\t}\n\t} else {\n\t\t$detail = db_fetch_row_prepared('SELECT gt.id, gt.name\n\t\t\tFROM graph_templates AS gt\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.graph_template_id=gt.id\n\t\t\tWHERE gl.id = ?',\n\t\t\tarray($local_graph_id));\n\n\t\tif (cacti_sizeof($detail)) {\n\t\t\treturn array('id' => $detail['id'], 'name' => $detail['name'], 'source' => 2);\n\t\t} else {\n\t\t\treturn array('id' => 0, 'name' => __('Not Found'), 'source' => 2);\n\t\t}\n\t}\n}\n\nfunction get_current_graph_template($local_graph_id) {\n\t$graph_local = db_fetch_row_prepared('SELECT *\n\t\tFROM graph_local\n\t\tWHERE id = ?',\n\t\tarray($local_graph_id));\n\n\t$task_items = db_fetch_cell_prepared('SELECT GROUP_CONCAT(DISTINCT task_item_id) AS items\n\t\tFROM graph_templates_item\n\t\tWHERE local_graph_id = ?',\n\t\tarray($local_graph_id));\n\n\tif ($task_items != '') {\n\t\t$local_data_id = db_fetch_cell(\"SELECT DISTINCT local_data_id\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE id IN($task_items)\");\n\t} else {\n\t\t$local_data_id = 0;\n\t}\n\n\tif ($local_data_id > 0) {\n\t\t$data = db_fetch_row_prepared('SELECT id, data_input_id, data_template_id, name, local_data_id\n\t\t\tFROM data_template_data\n\t\t\tWHERE local_data_id = ?',\n\t\t\tarray($local_data_id));\n\n\t\t/* get each INPUT field for this data input source */\n\t\t$output_type_field_id = db_fetch_cell_prepared('SELECT id\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output=\"in\"\n\t\t\tAND type_code=\"output_type\"\n\t\t\tORDER BY sequence',\n\t\t\tarray($data['data_input_id']));\n\n\t\t$snmp_query_graph_id = db_fetch_cell_prepared('SELECT value\n\t\t\tFROM data_input_data\n\t\t\tWHERE data_template_data_id = ?\n\t\t\tAND data_input_field_id = ?',\n\t\t\tarray($data['id'], $output_type_field_id));\n\n\t\tif (!empty($snmp_query_graph_id)) {\n\t\t\treturn $graph_local['graph_template_id'] . '_' . $snmp_query_graph_id;\n\t\t} else {\n\t\t\treturn $graph_local['graph_template_id'];\n\t\t}\n\t} else {\n\t\treturn $graph_local['graph_template_id'];\n\t}\n}\n\nfunction get_common_graph_templates(&$graph) {\n\t$dqid = 0;\n\n\tif (cacti_sizeof($graph)) {\n\t\t$dqid = db_fetch_cell_prepared('SELECT snmp_query_id\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray($graph['local_graph_id']));\n\t}\n\n\tif ($dqid > 0) {\n\t\t$sqgi = db_fetch_cell_prepared('SELECT GROUP_CONCAT(id) AS id\n\t\t\tFROM snmp_query_graph\n\t\t\tWHERE snmp_query_id = ?\n\t\t\tAND graph_template_id = ?',\n\t\t\tarray($dqid, $graph['graph_template_id']));\n\n\t\tif ($sqgi != '') {\n\t\t\t$query_fields = array_rekey(db_fetch_assoc_prepared('SELECT snmp_query_graph_id,\n\t\t\t\tGROUP_CONCAT(snmp_field_name ORDER BY snmp_field_name) AS columns\n\t\t\t\tFROM snmp_query_graph_rrd\n\t\t\t\tWHERE snmp_query_graph_id IN (' . $sqgi . ')\n\t\t\t\tGROUP BY snmp_query_graph_id'), 'snmp_query_graph_id', 'columns');\n\n\t\t\t$ids = array_to_sql_or(array_values($query_fields), 'columns');\n\n\t\t\t$common_graph_ids = array_rekey(db_fetch_assoc_prepared('SELECT\n\t\t\t\tsnmp_query_graph_id, GROUP_CONCAT(snmp_field_name ORDER BY snmp_field_name) AS columns\n\t\t\t\tFROM snmp_query_graph_rrd\n\t\t\t\tGROUP BY snmp_query_graph_id\n\t\t\t\tHAVING ' . $ids), 'snmp_query_graph_id', 'columns');\n\n\t\t\t$ids = implode(',', array_keys($common_graph_ids));\n\n\t\t\t$gtids = db_fetch_cell_prepared('SELECT GROUP_CONCAT(DISTINCT graph_template_id) AS gtids\n\t\t\t\tFROM snmp_query_graph\n\t\t\t\tWHERE snmp_query_id = ?\n\t\t\t\tAND id IN (' . $ids . ')',\n\t\t\t\tarray($dqid));\n\n\t\t\t$gtsql = \"SELECT CONCAT_WS('', graph_template_id, '_', id, '') AS id, name\n\t\t\t\tFROM snmp_query_graph\n\t\t\t\tWHERE (snmp_query_id = $dqid AND id IN ($ids))\n\t\t\t\tOR graph_template_id IN ($gtids) ORDER BY name\";\n\t\t} else {\n\t\t\t$gtsql = 'SELECT gt.id, gt.name FROM graph_templates AS gt ORDER BY name';\n\t\t}\n\t} else {\n\t\t$gtsql = 'SELECT gt.id, gt.name FROM graph_templates AS gt ORDER BY name';\n\t}\n\n\treturn $gtsql;\n}\n\nfunction form_actions() {\n\tglobal $graph_actions, $struct_aggregate;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tif (!isset_request_var('delete_type')) {\n\t\t\t\t\tset_request_var('delete_type', 1);\n\t\t\t\t}\n\n\t\t\t\tapi_delete_graphs($selected_items, get_filter_request_var('delete_type'));\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // change graph template\n\t\t\t\t$gt_id_unparsed      = get_nfilter_request_var('graph_template_id');\n\t\t\t\t$gt_id_prev_unparsed = get_nfilter_request_var('graph_template_id_prev');\n\t\t\t\tparse_validate_graph_template_id('graph_template_id');\n\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tchange_graph_template($selected_items[$i], $gt_id_unparsed, true);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '3') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_duplicate_graph($selected_items[$i], 0, get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '4') { // graph -> graph template\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tgraph_to_graph_template($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (preg_match('/^tr_([0-9]+)$/', get_request_var('drp_action'), $matches)) { // place on tree\n\t\t\t\tget_filter_request_var('tree_id');\n\t\t\t\tget_filter_request_var('tree_item_id');\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_tree_item_save(0, get_nfilter_request_var('tree_id'), TREE_ITEM_TYPE_GRAPH, get_nfilter_request_var('tree_item_id'), '', $selected_items[$i], 0, 0, 0, 0, false);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '5') { // change host\n\t\t\t\tget_filter_request_var('host_id');\n\t\t\t\t$failures = false;\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tif (!api_graph_change_device($selected_items[$i], get_request_var('host_id'))) {\n\t\t\t\t\t\t$failures = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($failures) {\n\t\t\t\t\t\traise_message(33);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '6') { // reapply suggested naming\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_reapply_suggested_graph_title($selected_items[$i]);\n\t\t\t\t\tupdate_graph_title_cache($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '9' || get_request_var('drp_action') == '10') {\n\t\t\t\t/* get common info - not dependant on template/no template*/\n\t\t\t\t$local_graph_id = 0; // this will be a new graph\n\t\t\t\t$member_graphs  = $selected_items;\n\t\t\t\t$graph_title    = form_input_validate(get_nfilter_request_var('title_format'), 'title_format', '', true, 3);\n\n\t\t\t\t/* future aggregate_graphs entry */\n\t\t\t\t$ag_data = array();\n\t\t\t\t$ag_data['id'] = 0;\n\t\t\t\t$ag_data['title_format'] = $graph_title;\n\t\t\t\t$ag_data['user_id']      = $_SESSION['sess_user_id'];\n\n\t\t\t\tif (get_request_var('drp_action') == '9') {\n\t\t\t\t\tif (!isset_request_var('aggregate_total_type'))   set_request_var('aggregate_total_type', 0);\n\t\t\t\t\tif (!isset_request_var('aggregate_total'))        set_request_var('aggregate_total', 0);\n\t\t\t\t\tif (!isset_request_var('aggregate_total_prefix')) set_request_var('aggregate_total_prefix', '');\n\t\t\t\t\tif (!isset_request_var('aggregate_order_type'))   set_request_var('aggregate_order_type', 0);\n\n\t\t\t\t\t$item_no = form_input_validate(get_nfilter_request_var('item_no'), 'item_no', '^[0-9]+$', true, 3);\n\n\t\t\t\t\t$ag_data['aggregate_template_id'] = 0;\n\t\t\t\t\t$ag_data['template_propogation']  = '';\n\t\t\t\t\t$ag_data['graph_template_id']     = form_input_validate(get_nfilter_request_var('graph_template_id'), 'graph_template_id', '^[0-9]+$', true, 3);\n\t\t\t\t\t$ag_data['gprint_prefix']         = form_input_validate(get_nfilter_request_var('gprint_prefix'), 'gprint_prefix', '', true, 3);\n\t\t\t\t\t$ag_data['graph_type']            = form_input_validate(get_nfilter_request_var('aggregate_graph_type'), 'aggregate_graph_type', '^[0-9]+$', true, 3);\n\t\t\t\t\t$ag_data['total']                 = form_input_validate(get_nfilter_request_var('aggregate_total'), 'aggregate_total', '^[0-9]+$', true, 3);\n\t\t\t\t\t$ag_data['total_type']            = form_input_validate(get_nfilter_request_var('aggregate_total_type'), 'aggregate_total_type', '^[0-9]+$', true, 3);\n\t\t\t\t\t$ag_data['total_prefix']          = form_input_validate(get_nfilter_request_var('aggregate_total_prefix'), 'aggregate_total_prefix', '', true, 3);\n\t\t\t\t\t$ag_data['order_type']            = form_input_validate(get_nfilter_request_var('aggregate_order_type'), 'aggregate_order_type', '^[0-9]+$', true, 3);\n\t\t\t\t} else {\n\t\t\t\t\t$template_data = db_fetch_row_prepared('SELECT *\n\t\t\t\t\t\tFROM aggregate_graph_templates\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('aggregate_template_id')));\n\n\t\t\t\t\t$item_no = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\t\t\tFROM aggregate_graph_templates_item\n\t\t\t\t\t\tWHERE aggregate_template_id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('aggregate_template_id')));\n\n\t\t\t\t\t$ag_data['aggregate_template_id'] = get_nfilter_request_var('aggregate_template_id');\n\t\t\t\t\t$ag_data['template_propogation']  = 'on';\n\t\t\t\t\t$ag_data['graph_template_id']     = $template_data['graph_template_id'];\n\t\t\t\t\t$ag_data['gprint_prefix']         = $template_data['gprint_prefix'];\n\t\t\t\t\t$ag_data['graph_type']            = $template_data['graph_type'];\n\t\t\t\t\t$ag_data['total']                 = $template_data['total'];\n\t\t\t\t\t$ag_data['total_type']            = $template_data['total_type'];\n\t\t\t\t\t$ag_data['total_prefix']          = $template_data['total_prefix'];\n\t\t\t\t\t$ag_data['order_type']            = $template_data['order_type'];\n\t\t\t\t}\n\n\t\t\t\t/* create graph in cacti tables */\n\t\t\t\t$local_graph_id = aggregate_graph_save(\n\t\t\t\t\t$local_graph_id,\n\t\t\t\t\t$ag_data['graph_template_id'],\n\t\t\t\t\t$graph_title,\n\t\t\t\t\t$ag_data['aggregate_template_id']\n\t\t\t\t);\n\n\t\t\t\t$ag_data['local_graph_id'] = $local_graph_id;\n\t\t\t\t$aggregate_graph_id = sql_save($ag_data, 'aggregate_graphs');\n\t\t\t\t$ag_data['aggregate_graph_id'] = $aggregate_graph_id;\n\n\t\t\t\t// \t/* save member graph info */\n\t\t\t\t// \t$i = 1;\n\t\t\t\t// \tforeach($member_graphs as $graph_id) {\n\t\t\t\t// \t\tdb_execute(\"INSERT INTO aggregate_graphs_items\n\t\t\t\t// \t\t\t(aggregate_graph_id, local_graph_id, sequence)\n\t\t\t\t// \t\t\tVALUES\n\t\t\t\t// \t\t\t($aggregate_graph_id, $graph_id, $i)\"\n\t\t\t\t// \t\t);\n\t\t\t\t// \t\t$i++;\n\t\t\t\t// \t}\n\n\t\t\t\t/* save aggregate graph graph items */\n\t\t\t\tif (get_request_var('drp_action') == '9') {\n\t\t\t\t\t/* get existing item ids and sequences from graph template */\n\t\t\t\t\t$graph_templates_items = array_rekey(\n\t\t\t\t\t\tdb_fetch_assoc_prepared('SELECT id, sequence\n\t\t\t\t\t\t\tFROM graph_templates_item\n\t\t\t\t\t\t\tWHERE local_graph_id=0\n\t\t\t\t\t\t\tAND graph_template_id = ?',\n\t\t\t\t\t\t\tarray($ag_data['graph_template_id'])),\n\t\t\t\t\t\t'id', array('sequence')\n\t\t\t\t\t);\n\n\t\t\t\t\t/* update graph template item values with posted values */\n\t\t\t\t\taggregate_validate_graph_items($_POST, $graph_templates_items);\n\n\t\t\t\t\t$aggregate_graph_items = array();\n\t\t\t\t\tforeach ($graph_templates_items as $item_id => $data) {\n\t\t\t\t\t\t$item_new                            = array();\n\t\t\t\t\t\t$item_new['aggregate_graph_id']      = $aggregate_graph_id;\n\t\t\t\t\t\t$item_new['graph_templates_item_id'] = $item_id;\n\n\t\t\t\t\t\t$item_new['color_template']          = isset($data['color_template']) ? $data['color_template'] : 0;\n\t\t\t\t\t\t$item_new['item_skip']               = isset($data['item_skip']) ? 'on' : '';\n\t\t\t\t\t\t$item_new['item_total']              = isset($data['item_total']) ? 'on' : '';\n\t\t\t\t\t\t$item_new['sequence']                = isset($data['sequence']) ? $data['sequence'] : 0;\n\n\t\t\t\t\t\t$aggregate_graph_items[]             = $item_new;\n\t\t\t\t\t}\n\n\t\t\t\t\taggregate_graph_items_save($aggregate_graph_items, 'aggregate_graphs_graph_item');\n\t\t\t\t} else {\n\t\t\t\t\t$aggregate_graph_items = db_fetch_assoc_prepared('SELECT *\n\t\t\t\t\t\tFROM aggregate_graph_templates_item\n\t\t\t\t\t\tWHERE aggregate_template_id = ?',\n\t\t\t\t\t\tarray($ag_data['aggregate_template_id']));\n\t\t\t\t}\n\n\t\t\t\t$attribs = $ag_data;\n\t\t\t\t$attribs['graph_title'] = $ag_data['title_format'];\n\t\t\t\t$attribs['reorder'] = $ag_data['order_type'];\n\t\t\t\t$attribs['item_no'] = $item_no;\n\t\t\t\t$attribs['color_templates'] = array();\n\t\t\t\t$attribs['skipped_items']   = array();\n\t\t\t\t$attribs['total_items']     = array();\n\t\t\t\t$attribs['graph_item_types']= array();\n\t\t\t\t$attribs['cdefs']           = array();\n\t\t\t\tforeach ($aggregate_graph_items as $item) {\n\t\t\t\t\tif (isset($item['color_template']) && $item['color_template'] > 0)\n\t\t\t\t\t\t$attribs['color_templates'][ $item['sequence'] ] = $item['color_template'];\n\n\t\t\t\t\tif (isset($item['item_skip']) && $item['item_skip'] == 'on')\n\t\t\t\t\t\t$attribs['skipped_items'][ $item['sequence'] ] = $item['sequence'];\n\n\t\t\t\t\tif (isset($item['item_total']) && $item['item_total'] == 'on')\n\t\t\t\t\t\t$attribs['total_items'][ $item['sequence'] ] = $item['sequence'];\n\n\t\t\t\t\tif (isset($item['cdef_id']) && isset($item['t_cdef_id']) && $item['t_cdef_id'] == 'on')\n\t\t\t\t\t\t$attribs['cdefs'][ $item['sequence'] ] = $item['cdef_id'];\n\n\t\t\t\t\tif (isset($item['graph_type_id']) && isset($item['t_graph_type_id']) && $item['t_graph_type_id'] == 'on')\n\t\t\t\t\t\t$attribs['graph_item_types'][ $item['sequence'] ] = $item['graph_type_id'];\n\t\t\t\t}\n\n\t\t\t\t/* create actual graph items */\n\t\t\t\taggregate_create_update($local_graph_id, $member_graphs, $attribs);\n\n\t\t\t\theader(\"Location: aggregate_graphs.php?header=false&action=edit&tab=details&id=$local_graph_id\");\n\t\t\t\texit;\n\t\t\t} elseif (get_request_var('drp_action') == '8') { // automation\n\t\t\t\tcacti_log('automation_graph_action_execute called: ' . $action, true, 'AUTM8 TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t/* work on all selected graphs */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tautomation_execute_graph_create_tree($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '11') {\n\t\t\t\t// Add to a report\n\t\t\t\t$good = true;\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tif (!reports_add_graphs(get_filter_request_var('report_id'), $selected_items[$i], get_request_var('timespan'), get_request_var('align'))) {\n\t\t\t\t\t\traise_message('reports_add_error');\n\t\t\t\t\t\t$good = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($good) {\n\t\t\t\t\traise_message('reports_graphs_added');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tapi_plugin_hook_function('graphs_action_execute', get_request_var('drp_action'));\n\t\t\t}\n\n\t\t\t/* update snmpcache */\n\t\t\tsnmpagent_graphs_action_bottom(array(get_request_var('drp_action'), $selected_items));\n\t\t\tapi_plugin_hook_function('graphs_action_bottom', array(get_request_var('drp_action'), $selected_items));\n\t\t}\n\n\t\tif (get_request_var('drp_action') == '2') { // change graph template\n\t\t\theader('Location: graphs.php?header=false&template_id=-1');\n\t\t} else {\n\t\t\theader('Location: graphs.php?header=false');\n\t\t}\n\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$i          = 0;\n\t$graph_list = '';\n\t$graph      = array();\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$graph_list .= '<li>' . html_escape(get_graph_title($matches[1])) . '</li>';\n\t\t\t$graph_array[$i] = $matches[1];\n\n\t\t\tif ($i == 0) {\n\t\t\t\t$graph = db_fetch_row_prepared('SELECT id AS local_graph_id, graph_template_id\n\t\t\t\t\tFROM graph_local\n\t\t\t\t\tWHERE id = ?\n\t\t\t\t\tLIMIT 1',\n\t\t\t\t\tarray($matches[1]));\n\t\t\t}\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\t/* add a list of tree names to the actions dropdown */\n\tadd_tree_names_to_actions_array();\n\n\tform_start('graphs.php');\n\n\thtml_start_box($graph_actions{get_request_var('drp_action')}, '60%', '', '3', 'center', '');\n\n\tif (isset($graph_array) && cacti_sizeof($graph_array)) {\n\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t/* find out which (if any) data sources are being used by this graph, so we can tell the user */\n\t\t\tif (isset($graph_array) && cacti_sizeof($graph_array)) {\n\t\t\t\t$data_sources = array_rekey(\n\t\t\t\t\tdb_fetch_assoc('SELECT DISTINCT dtd.local_data_id, dtd.name_cache\n\t\t\t\t\t\tFROM data_template_data AS dtd\n\t\t\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\t\t\tON dtr.local_data_id=dtd.local_data_id\n\t\t\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\t\t\tON dtr.id=gti.task_item_id\n\t\t\t\t\t\tWHERE ' . array_to_sql_or($graph_array, 'gti.local_graph_id') . '\n\t\t\t\t\t\tAND dtd.local_data_id > 0'),\n\t\t\t\t\t'local_data_id', array('local_data_id', 'name_cache'));\n\n\t\t\t\t/* data sources to delete */\n\t\t\t\t$data_array = array_keys($data_sources);\n\n\t\t\t\tif (cacti_sizeof($data_array)) {\n\t\t\t\t\t$not_deletable = array_rekey(\n\t\t\t\t\t\tdb_fetch_assoc('SELECT DISTINCT dtd.local_data_id\n\t\t\t\t\t\t\tFROM data_template_data AS dtd\n\t\t\t\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\t\t\t\tON dtr.local_data_id=dtd.local_data_id\n\t\t\t\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\t\t\t\tON dtr.id=gti.task_item_id\n\t\t\t\t\t\t\tWHERE gti.local_graph_id NOT IN(' . implode(',', $graph_array) . ')\n\t\t\t\t\t\t\tAND dtr.local_data_id IN(' . implode(',', $data_array) . ')\n\t\t\t\t\t\t\tAND dtd.local_data_id > 0'),\n\t\t\t\t\t\t'local_data_id', 'local_data_id');\n\t\t\t\t} else {\n\t\t\t\t\t$not_deletable = array();\n\t\t\t\t}\n\n\t\t\t\tif (cacti_sizeof($not_deletable)) {\n\t\t\t\t\t$data_sources = array_rekey(\n\t\t\t\t\t\tdb_fetch_assoc('SELECT DISTINCT dtd.local_data_id, dtd.name_cache\n\t\t\t\t\t\t\tFROM data_template_data AS dtd\n\t\t\t\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\t\t\t\tON dtr.local_data_id=dtd.local_data_id\n\t\t\t\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\t\t\t\tON dtr.id=gti.task_item_id\n\t\t\t\t\t\t\tWHERE gti.local_graph_id IN (' . implode(',', $graph_array) . ')\n\t\t\t\t\t\t\tAND dtr.local_data_id NOT IN (' . implode(',', $not_deletable) . ')\n\t\t\t\t\t\t\tAND dtd.local_data_id > 0'),\n\t\t\t\t\t\t'local_data_id', array('local_data_id', 'name_cache'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Graph(s).  Note that if you choose to Delete Data Sources, only those Data Sources not in use elsewhere will also be Deleted.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\";\n\n\t\t\tif (isset($data_sources) && cacti_sizeof($data_sources)) {\n\t\t\t\tprint \"<tr><td class='textArea'><p>\" . __('The following Data Source(s) are in use by these Graph(s).') . \"</p>\\n\";\n\n\t\t\t\tprint '<div class=\"itemlist\"><ul>';\n\t\t\t\tforeach ($data_sources as $data_source) {\n\t\t\t\t\tprint '<li>' . html_escape($data_source['name_cache']) . \"</li>\\n\";\n\t\t\t\t}\n\t\t\t\tprint '</ul></div><br>';\n\n\t\t\t\tprint '<span class=\"nowrap\">';\n\t\t\t\tform_radio_button('delete_type', '2', '2', __('Delete all Data Source(s) referenced by these Graph(s) that are not in use elsewhere.'), '1');\n\t\t\t\tprint '<br>';\n\t\t\t\tform_radio_button('delete_type', '2', '1', __('Leave the Data Source(s) untouched.'), '1');\n\t\t\t\tprint '<br>';\n\t\t\t\tprint '</span>';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\tprint \"</td></tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') .\"' title='\" . __esc('Delete Graph(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // change graph template\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Choose a Graph Template and click \\'Continue\\' to change the Graph Template for the following Graph(s). Please note, that only compatible Graph Templates will be displayed.  Compatible is identified by those having identical Data Sources.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t<p>\" . __('New Graph Template') . \"<br>\";\n\n\t\t\t\t\t$gtsql = get_common_graph_templates($graph);\n\n\t\t\t\t\tform_dropdown('graph_template_id', db_fetch_assoc($gtsql), 'name', 'id', '', '', '0');\n\n\t\t\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Change Graph Template') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '3') { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to duplicate the following Graph(s). You can optionally change the title format for the new Graph(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t<p>\" . __('Title Format') . \"<br>\";\n\t\t\tform_text_box('title_format', __('<graph_title> (1)'), '', '255', '30', 'text');\n\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Duplicate Graph(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '4') { // graph -> graph template\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to convert the following Graph(s) into Graph Template(s).  You can optionally change the title format for the new Graph Template(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t<p>\" . __('Title Format') . \"<br>\";\n\t\t\tform_text_box('title_format', __('<graph_title> Template'), '', '255', '30', 'text');\n\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Convert to Graph Template') . \"'>\";\n\t\t} elseif (preg_match('/^tr_([0-9]+)$/', get_request_var('drp_action'), $matches)) { // place on tree\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to place the following Graph(s) under the Tree Branch selected below.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t<p>\" . __('Destination Branch') . \"<br>\";\n\n\t\t\tgrow_dropdown_tree($matches[1], '0', 'tree_item_id', '0');\n\n\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<input type='hidden' name='tree_id' value='\" . html_escape($matches[1]) . \"'>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Place Graph(s) on Tree') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '5') { // change host\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Choose a new Device for these Graph(s) and click \\'Continue\\'.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t<p>\" . __('New Device'). \"<br>\";\n\n\t\t\tform_dropdown('host_id',db_fetch_assoc(\"SELECT id,CONCAT_WS('',description,' (',hostname,')') as name FROM host ORDER BY description,hostname\"),'name','id','','','0');\n\n\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Change Graph(s) Associated Device') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '6') { // reapply suggested naming to host\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to re-apply suggested naming to the following Graph(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Reapply Suggested Naming to Graph(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '9') {\n\t\t\tinclude_once('./lib/api_aggregate.php');\n\n\t\t\t/* initialize return code and graphs array */\n\t\t\t$return_code    = false;\n\t\t\t$data_sources   = array();\n\t\t\t$graph_template = '';\n\n\t\t\tif (aggregate_get_data_sources($graph_array, $data_sources, $graph_template)) {\n\t\t\t\t# provide a new prefix for GPRINT lines\n\t\t\t\t$gprint_prefix = '|host_hostname|';\n\n\t\t\t\t/* list affected graphs */\n\t\t\t\tprint '<tr>';\n\t\t\t\tprint \"<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to create an Aggregate Graph from the selected Graph(s).'). \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>\" . get_nfilter_request_var('graph_list') . '</ul></div>\n\t\t\t\t</td></tr>';\n\n\t\t\t\t/* list affected data sources */\n\t\t\t\tprint '<tr>';\n\n\t\t\t\tif (cacti_sizeof($data_sources)) {\n\t\t\t\t\tprint \"<td class='textArea'>\" .\n\t\t\t\t\t'<p>' . __('The following data sources are in use by these graphs:') . '</p>\n\t\t\t\t\t<div class=\"itemlist\"><ul>';\n\t\t\t\t\tforeach ($data_sources as $data_source) {\n\t\t\t\t\t\tprint '<li>' . html_escape($data_source['name_cache']) . '</li>';\n\t\t\t\t\t}\n\t\t\t\t\tprint '</ul></div></td>';\n\t\t\t\t}\n\t\t\t\tprint '</tr>';\n\n\t\t\t\tprint '<tr><td>';\n\n\t\t\t\t$ttitle = $graph_array[0];\n\n\t\t\t\t/* aggregate form */\n\t\t\t\t$_aggregate_defaults = array(\n\t\t\t\t\t'title_format'      => auto_title($ttitle),\n\t\t\t\t\t'graph_template_id' => $graph_template,\n\t\t\t\t\t'gprint_prefix'     => $gprint_prefix\n\t\t\t\t);\n\n\t\t\t\tdraw_edit_form(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t\t'fields' => inject_form_variables($struct_aggregate, $_aggregate_defaults)\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t# draw all graph items of first graph, including a html_start_box\n\t\t\t\tdraw_aggregate_graph_items_list(0, $graph_template);\n\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\t# again, a new html_start_box. Using the one from above would yield ugly formatted NO and YES buttons\n\t\t\t\thtml_start_box(__('Please confirm'), '100%', '', '3', 'center', '');\n\n\t\t\t\t?>\n\t\t\t\t<script type='text/javascript'>\n\t\t\t\tfunction changeTotals() {\n\t\t\t\t\tswitch ($('#aggregate_total').val()) {\n\t\t\t\t\t\tcase '<?php print AGGREGATE_TOTAL_NONE;?>':\n\t\t\t\t\t\t\t$('#aggregate_total_type').prop('disabled', true);\n\t\t\t\t\t\t\t$('#aggregate_total_prefix').prop('disabled', true);\n\t\t\t\t\t\t\t$('#aggregate_order_type').prop('disabled', false);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '<?php print AGGREGATE_TOTAL_ALL;?>':\n\t\t\t\t\t\t\t$('#aggregate_total_type').prop('disabled', false);\n\t\t\t\t\t\t\t$('#aggregate_total_prefix').prop('disabled', false);\n\t\t\t\t\t\t\t$('#aggregate_order_type').prop('disabled', false);\n\t\t\t\t\t\t\tchangeTotalsType();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '<?php print AGGREGATE_TOTAL_ONLY;?>':\n\t\t\t\t\t\t\t$('#aggregate_total_type').prop('disabled', false);\n\t\t\t\t\t\t\t$('#aggregate_total_prefix').prop('disabled', false);\n\t\t\t\t\t\t\t$('#aggregate_order_type').prop('disabled', true);\n\t\t\t\t\t\t\tchangeTotalsType();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction changeTotalsType() {\n\t\t\t\t\tif (($('#aggregate_total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_SIMILAR;?>)) {\n\t\t\t\t\t\t$('#aggregate_total_prefix').attr('value', '<?php print __('Total');?>');\n\t\t\t\t\t} else if (($('#aggregate_total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_ALL;?>)) {\n\t\t\t\t\t\t$('#aggregate_total_prefix').attr('value', '<?php print __('All Items');?>');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$(function() {\n\t\t\t\t\t$('#aggregate_total').change(function() {\n\t\t\t\t\t\tchangeTotals();\n\t\t\t\t\t});\n\n\t\t\t\t\t$('#aggregate_total_type').change(function() {\n\t\t\t\t\t\tchangeTotalsType();\n\t\t\t\t\t});\n\n\t\t\t\t\t$('input[id^=\"agg_total\"], input[id^=\"agg_skip\"]').click(function() {\n\t\t\t\t\t\tid = $(this).attr('id');\n\n\t\t\t\t\t\tif (id.indexOf('skip') > 0) {\n\t\t\t\t\t\t\taltId = id.replace('skip', 'total');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taltId = id.replace('total', 'skip');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($('#'+id).is(':checked')) {\n\t\t\t\t\t\t\t$('#'+altId).prop('checked', false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$('#'+altId).prop('checked', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t$('input[id^=\"agg_skip\"]').each(function() {\n\t\t\t\t\t\t$(this).prop('checked', true);\n\t\t\t\t\t});\n\n\t\t\t\t\tchangeTotals();\n\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t\t<?php\n\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Resize Selected Graph(s)') . \"'>\";\n\t\t\t} else {\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t}\n\t\t} elseif (get_request_var('drp_action') == '10') { // aggregate template\n\t\t\tinclude_once('./lib/api_aggregate.php');\n\n\t\t\t/* initialize return code and graphs array */\n\t\t\t$data_sources   = array();\n\t\t\t$graph_template = '';\n\n\t\t\t/* find out which (if any) data sources are being used by this graph, so we can tell the user */\n\t\t\tif (aggregate_get_data_sources($graph_array, $data_sources, $graph_template)) {\n\t\t\t\t$aggregate_templates = db_fetch_assoc_prepared('SELECT id, name\n\t\t\t\t\tFROM aggregate_graph_templates\n\t\t\t\t\tWHERE graph_template_id = ?\n\t\t\t\t\tORDER BY name', array($graph_template));\n\n\t\t\t\tif (cacti_sizeof($aggregate_templates)) {\n\t\t\t\t\t/* list affected graphs */\n\t\t\t\t\tprint \"<tr>\n\t\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t\t<p>\" . __('Select the Aggregate Template to use and press \\'Continue\\' to create your Aggregate Graph.  Otherwise press \\'Cancel\\' to return.') . \"</p>\n\t\t\t\t\t\t\t<div class='itemlist'><ul>\" . $graph_list . \"</ul></div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\\n\";\n\n\t\t\t\t\tprint \"<tr><td><table>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\" . __('Graph Title') . \"</td>\n\t\t\t\t\t\t\t<td><input type='text' class='ui-state-default ui-corner-all' name='title_format' size='40'></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\" . __('Aggregate Template') . \"</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<select name='aggregate_template_id'>\\n\";\n\n\t\t\t\t\thtml_create_list($aggregate_templates, 'name', 'id', $aggregate_templates[0]['id']);\n\n\t\t\t\t\tprint \"</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr></table></td></tr>\\n\";\n\n\t\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Create Aggregate') . \"'>\";\n\t\t\t\t} else {\n\t\t\t\t\tprint \"<tr>\n\t\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t\t<p>\" . __('There are presently no Aggregate Templates defined for this Graph Template.  Please either first create an Aggregate Template for the selected Graphs Graph Template and try again, or simply crease an un-templated Aggregate Graph.') . \"</p>\n\t\t\t\t\t\t\t<p>\" . __('Press \\'Return\\' to return and select different Graphs.') . \"</p>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\\n\";\n\n\t\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t}\n\t\t} elseif (get_request_var('drp_action') == 8) { // automation\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to apply Automation Rules to the following Graphs.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Apply Automation Rules') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '11') {\n\t\t\tglobal $alignment, $graph_timespans;\n\n\t\t\t$reports = db_fetch_assoc_prepared('SELECT id, name\n\t\t\t\tFROM reports\n\t\t\t\tWHERE user_id = ?\n\t\t\t\tORDER BY name',\n\t\t\t\tarray($_SESSION['sess_user_id']));\n\n\t\t\tif (cacti_sizeof($reports)) {\n\t\t\t\tprint \"<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to add the selected Graphs to the Report below.') . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr><td>\" . __('Report Name') . '<br>';\n\t\t\t\tform_dropdown('report_id', $reports, 'name', 'id', '', '', '0');\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\tprint '<tr><td>' . __('Timespan') . '<br>';\n\t\t\t\tform_dropdown('timespan',$graph_timespans, '', '', '', '', read_user_setting('default_timespan'));\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\tprint '<tr><td>' . __('Align') . '<br>';\n\t\t\t\tform_dropdown('align',$alignment, '', '', '', '', REPORTS_ALIGN_CENTER);\n\t\t\t\tprint \"</td></tr>\\n\";\n\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Add Graphs to Report') . \"'>\";\n\t\t\t} else {\n\t\t\t\tprint \"<tr><td class='even'><span class='textError'>\" . __('You currently have no reports defined.') . \"</span></td></tr>\\n\";\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t}\n\t\t} else {\n\t\t\t$save['drp_action'] = get_nfilter_request_var('drp_action');\n\t\t\t$save['graph_list'] = $graph_list;\n\t\t\t$save['graph_array'] = (isset($graph_array) ? $graph_array : array());\n\n\t\t\tapi_plugin_hook_function('graphs_action_prepare', $save);\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: graphs.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($graph_array) ? serialize($graph_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* -----------------------\n    item - Graph Items\n   ----------------------- */\n\nfunction item() {\n\tglobal $consolidation_functions, $graph_item_types, $struct_graph_item;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (isempty_request_var('id')) {\n\t\t$template_item_list = array();\n\n\t\t$header_label = __('Graph Items [new]');\n\t\t$add_text     = '';\n\t\t$anchor_link  = '';\n\t} else {\n\t\t$template_item_list = db_fetch_assoc_prepared('SELECT\n\t\t\tgti.id, gti.text_format, gti.value, gti.hard_return, gti.graph_type_id, gti.alpha, gti.textalign,\n\t\t\tgti.consolidation_function_id, dtr.data_source_name, cd.name AS cdef_name, c.hex\n\t\t\tFROM graph_templates_item AS gti\n\t\t\tLEFT JOIN data_template_rrd AS dtr\n\t\t\tON (gti.task_item_id = dtr.id)\n\t\t\tLEFT JOIN data_local AS dl\n\t\t\tON (dtr.local_data_id = dl.id)\n\t\t\tLEFT JOIN data_template_data AS dtd\n\t\t\tON (dl.id = dtd.local_data_id)\n\t\t\tLEFT JOIN cdef AS cd\n\t\t\tON (cdef_id = cd.id)\n\t\t\tLEFT JOIN colors AS c\n\t\t\tON (color_id = c.id)\n\t\t\tWHERE gti.local_graph_id = ?\n\t\t\tORDER BY gti.sequence', array(get_request_var('id')));\n\n\t\t$template_item_list = api_plugin_hook_function('graphs_item_array', $template_item_list);\n\n\t\t$host_id = db_fetch_cell_prepared('SELECT host_id\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$graph_template_id = db_fetch_cell_prepared('SELECT graph_template_id\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Graph Items [edit: %s]', html_escape(get_graph_title(get_request_var('id'))));\n\t\t$add_text     = 'graphs_items.php?action=item_edit' . (!empty($host_id) ? '&host_id=' . $host_id:'') . '&local_graph_id=' . get_request_var('id');\n\t\t$anchor_link  = 'host_id=' . $host_id . '&local_graph_id=' . get_request_var('id');\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', $add_text);\n\n\tdraw_graph_items_list($template_item_list, 'graphs_items.php', $anchor_link, (empty($graph_template_id) ? false : true));\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('.deleteMarker, .moveArrow').unbind().click(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tloadPageNoHeader($(this).attr('href'));\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n}\n\n/* ------------------------------------\n    graph - Graphs\n   ------------------------------------ */\n\nfunction graph_edit() {\n\tglobal $config, $struct_graph, $image_types, $consolidation_functions, $graph_item_types, $struct_graph_item;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$use_graph_template = true;\n\n\t$locked = 'false';\n\t$graph  = array();\n\n\tif (!isempty_request_var('id')) {\n\t\t$_SESSION['sess_graph_lock_id'] = get_request_var('id');\n\n\t\t$local_graph_template_graph_id = db_fetch_cell_prepared('SELECT local_graph_template_graph_id\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE local_graph_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (get_request_var('id') != $_SESSION['sess_graph_lock_id'] && !empty($local_graph_template_graph_id)) {\n\t\t\t$locked = true;\n\t\t\t$_SESSION['sess_graph_locked'] = $locked;\n\t\t} elseif (empty($local_graph_template_graph_id)) {\n\t\t\t$locked = false;\n\t\t\t$_SESSION['sess_graph_locked'] = $locked;\n\t\t} elseif (isset($_SESSION['sess_graph_locked'])) {\n\t\t\t$locked = $_SESSION['sess_graph_locked'];\n\t\t} else {\n\t\t\t$locked = true;\n\t\t\t$_SESSION['sess_graph_locked'] = $locked;\n\t\t}\n\n\t\t$graph = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE local_graph_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$graph_template = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE id = ?',\n\t\t\tarray($local_graph_template_graph_id));\n\n\t\t$host_id = db_fetch_cell_prepared('SELECT host_id\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t/* case of a deleted graph */\n\t\tif (!cacti_sizeof($graph)) {\n\t\t\traise_message(31);\n\t\t\theader('Location: graphs.php');\n\t\t\texit;\n\t\t}\n\n\t\t$header_label = __('Graph [edit: %s]', html_escape(get_graph_title(get_request_var('id'))));\n\n\t\tif ($graph['graph_template_id'] == '0') {\n\t\t\t$use_graph_template = 'false';\n\t\t}\n\t} else {\n\t\t$header_label = __('Graph [new]');\n\t\t$use_graph_template = false;\n\n\t\tif (isset_request_var('host_id') && get_filter_request_var('host_id') > 0) {\n\t\t\t$host_id = get_request_var('host_id');\n\t\t} else {\n\t\t\t$host_id = 0;\n\t\t}\n\n\t\tif (isempty_request_var('graph_template_id')) {\n\t\t\t$locked = false;\n\t\t}\n\t}\n\n\t/* handle debug mode */\n\tif (isset_request_var('debug')) {\n\t\tif (get_nfilter_request_var('debug') == '0') {\n\t\t\tkill_session_var('graph_debug_mode');\n\t\t} elseif (get_nfilter_request_var('debug') == '1') {\n\t\t\t$_SESSION['graph_debug_mode'] = true;\n\t\t}\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\tif (isset($_SESSION['graph_debug_mode'])) {\n\t\t\t$message = __('Turn Off Graph Debug Mode.');\n\t\t} else {\n\t\t\t$message = __('Turn On Graph Debug Mode.');\n\t\t}\n\n\t\t?>\n\t\t<table style='width:100%;'>\n\t\t\t<tr>\n\t\t\t\t<td class='textInfo left' style='vertical-align:top'>\n\t\t\t\t\t<?php print html_escape(get_graph_title(get_request_var('id')));?>\n\t\t\t\t</td>\n\t\t\t\t<td class='textInfo right' style='vertical-align:top;'>\n\t\t\t\t\t<span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('graphs.php?action=graph_edit&id=' . (isset_request_var('id') ? get_request_var('id') : '0') . '&debug=' . (isset($_SESSION['graph_debug_mode']) ? '0' : '1'));?>'><?php print $message;?></a><br>\n\t\t\t\t\t<?php\n\t\t\t\t\t\tif (!empty($graph['graph_template_id'])) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('graph_templates.php?action=template_edit&id=' . (isset($graph['graph_template_id']) ? $graph['graph_template_id'] : '0'));?>'><?php print __('Edit Graph Template.');?></a><br><?php\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isempty_request_var('host_id') || !empty($host_id)) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('host.php?action=edit&id=' . ($host_id > 0 ? $host_id : get_request_var('host_id')));?>'><?php print __('Edit Device.');?></a><br><?php\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($locked) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a href='#' class='hyperLink' id='unlockid'><?php print __('Unlock Graph.');?></a><?php\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a href='#' class='hyperLink' id='lockid'><?php print __('Lock Graph.');?></a><?php\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<?php\n\t}\n\n\tform_start('graphs.php');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (!empty($graph['local_graph_id'])) {\n\t\t$graph_template_id = get_current_graph_template($graph['local_graph_id']);\n\t\t$gtsql = get_common_graph_templates($graph);\n\t} else {\n\t\t$graph_template_id = 0;\n\t\t$gtsql = 'SELECT gt.id, gt.name\n\t\t\tFROM graph_templates AS gt\n\t\t\tWHERE id NOT IN (SELECT graph_template_id FROM snmp_query_graph)\n\t\t\tORDER BY name';\n\t}\n\n\t$form_array = array(\n\t\t'graph_template_id' => array(\n\t\t\t'method' => 'drop_sql',\n\t\t\t'friendly_name' => __('Selected Graph Template'),\n\t\t\t'description' => __('Choose a Graph Template to apply to this Graph. Please note that you may only change Graph Templates to a 100%% compatible Graph Template, which means that it includes identical Data Sources.'),\n\t\t\t'value' => $graph_template_id,\n\t\t\t'none_value' => (!isset($graph['graph_template_id']) || $graph['graph_template_id'] == 0 ? __('None'):''),\n\t\t\t'sql' => $gtsql\n  \t\t\t),\n\t\t'host_id' => array(\n\t\t\t'method' => 'drop_callback',\n\t\t\t'friendly_name' => __('Device'),\n\t\t\t'description' => __('Choose the Device that this Graph belongs to.'),\n\t\t\t'sql' => 'SELECT id, description as name FROM host ORDER BY name',\n\t\t\t'action' => 'ajax_hosts_noany',\n\t\t\t'none_value' => __('None'),\n\t\t\t'id' => $host_id,\n\t\t\t'value' => db_fetch_cell_prepared('SELECT description FROM host WHERE id = ?', array($host_id)),\n\t\t\t),\n\t\t'graph_template_graph_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($graph['id']) ? $graph['id'] : '0')\n\t\t\t),\n\t\t'local_graph_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($graph['local_graph_id']) ? $graph['local_graph_id'] : '0')\n\t\t\t),\n\t\t'local_graph_template_graph_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($graph['local_graph_template_graph_id']) ? $graph['local_graph_template_graph_id'] : '0')\n\t\t\t),\n\t\t'graph_template_id_prev' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => $graph_template_id\n\t\t\t),\n\t\t'host_id_prev' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($host_id) ? $host_id : '0')\n\t\t\t)\n\t\t);\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t/* only display the \"inputs\" area if we are using a graph template for this graph */\n\tif (!empty($graph['graph_template_id'])) {\n\t\thtml_start_box(__('Supplemental Graph Template Data'), '100%', true, '3', 'center', '');\n\n\t\tdraw_nontemplated_fields_graph($graph['graph_template_id'], $graph, '|field|', __('Graph Fields'), true, true, 0);\n\t\tdraw_nontemplated_fields_graph_item($graph['graph_template_id'], get_request_var('id'), '|field|_|id|', __('Graph Item Fields'), true, $locked);\n\n\t\thtml_end_box(true, true);\n\t}\n\n\t/* graph item list goes here */\n\tif ((!isempty_request_var('id')) && (empty($graph['graph_template_id']))) {\n\t\titem();\n\t}\n\n\t$graph['src'] = html_escape($config['url_path'] . 'graph_json.php?local_graph_id=' . get_request_var('id') . '&rra_id=0&graph_start=' . (time()-86400) . '&graph_end=-300&v=' . mt_rand());\n\n\tif (!isempty_request_var('id')) {\n\t\t?>\n\t\t<div class='cactiTable'>\n\t\t\t<div id='graphLocation' class='center'></div>\n\t\t<?php\n\t\tif ((isset($_SESSION['graph_debug_mode'])) && (isset_request_var('id'))) {\n\t\t\t$graph_data_array['output_flag'] = RRDTOOL_OUTPUT_STDERR;\n\t\t\t$graph_data_array['print_source'] = 1;\n\t\t?>\n\t\t</div>\n\t\t<div class='cactiTable'>\n\t\t\t<div style='float:left'>\n\t\t\t\t<span class='textInfo'><?php print __('RRDtool Command:');?></span><br>\n\t\t\t\t<pre><?php print @rrdtool_function_graph(get_request_var('id'), 1, $graph_data_array);?></pre>\n\t\t\t\t<span class='textInfo'><?php print __('RRDtool Says:');?></span><br>\n\t\t\t\t<?php unset($graph_data_array['print_source']);?>\n\t\t\t\t<pre><?php print @rrdtool_function_graph(get_request_var('id'), 1, $graph_data_array);?></pre>\n\t\t\t</div>\n\t\t<?php\n\t\t}\n\t\t?>\n\t\t</div>\n\t\t<br>\n\t\t<?php\n\t}\n\n\tif (((isset_request_var('id')) || (isset_request_var('new'))) && (empty($graph['graph_template_id']))) {\n\t\thtml_start_box(__('Graph Configuration'), '100%', true, '3', 'center', '');\n\n\t\t$form_array = array();\n\n\t\tforeach ($struct_graph as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $struct_graph[$field_name]);\n\n\t\t\tif (($field_array['method'] != 'header') && ($field_array['method'] != 'spacer' )){\n\t\t\t\t$form_array[$field_name]['value'] = (isset($graph[$field_name]) ? $graph[$field_name] : '');\n\t\t\t\t$form_array[$field_name]['form_id'] = (isset($graph[$field_name]) ? $graph['id'] : '0');\n\n\t\t\t\tif ($use_graph_template == true && isset($graph_template['t_' . $field_name]) && ($graph_template['t_' . $field_name] == 'on')) {\n\t\t\t\t\t$form_array[$field_name]['method'] = 'template_' . $form_array[$field_name]['method'];\n\t\t\t\t\t$form_array[$field_name]['description'] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => $form_array\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box(true, true);\n\t}\n\n\tif ((isset_request_var('id')) || (isset_request_var('new'))) {\n\t\tform_hidden_box('save_component_graph','1','');\n\t\tform_hidden_box('save_component_input','1','');\n\t} else {\n\t\tform_hidden_box('save_component_graph_new','1','');\n\t}\n\n\tform_hidden_box('rrdtool_version', get_rrdtool_version(), '');\n\n\tform_save_button('graphs.php');\n\n\t//Now we need some javascript to make it dynamic\n\t?>\n\t<script type='text/javascript'>\n\n\tvar locked         = <?php print ($locked ? 'true':'false');?>;\n\tvar imageSource    = '<?php print $graph['src'];?>';\n\tvar originalWidth  = null;\n\tvar originalHeight = null;\n\n\tfunction dynamic() {\n\t\tif ($('#scale_log_units').is(':checked')) {\n\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\tif ($('#auto_scale_log').is(':checked')) {\n\t\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction changeScaleLog() {\n\t\tif ($('#scale_log_units').is(':checked')) {\n\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\tif ($('#auto_scale_log').is(':checked')) {\n\t\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t\t}\n\t\t}\n\t}\n\n\t$(function() {\n\t\tdynamic();\n\n\t\t$('#unlockid').click(function(event) {\n\t\t\tevent.preventDefault;\n\n\t\t\t$('body').append(\"<div id='modal' class='ui-widget-overlay ui-front' style='z-index: 100;'><i style='position:absolute;top:50%;left:50%;' class='fa fa-spin fa-circle-notch'/></div>\");\n\n\t\t\t$.get('graphs.php?action=unlock&header=false&id='+$('#local_graph_id').val())\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#modal').remove();\n\t\t\t\t\t$('#main').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t});\n\n\t\t$.getJSON(imageSource)\n\t\t\t.done(function(data) {\n\t\t\t\t$('#graphLocation').html(\"<img class='cactiGraphImage' src='data:image/\"+data.type+\";base64,\"+data.image+\"' graph_start='\"+data.graph_start+\"' graph_end='\"+data.graph_end+\"' graph_left='\"+data.graph_left+\"' graph_top='\"+data.graph_top+\"' graph_width='\"+data.graph_width+\"' graph_height='\"+data.graph_height+\"' width='\"+data.image_width+\"' height='\"+data.image_height+\"' image_width='\"+data.image_width+\"' image_height='\"+data.image_height+\"' value_min='\"+data.value_min+\"' value_max='\"+data.value_max+\"'>\");\n\t\t\t\t$(window).trigger('resize');\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\n\n\t\t$('#lockid').click(function(event) {\n\t\t\tevent.preventDefault;\n\n\t\t\tloadPageNoHeader('graphs.php?action=lock&header=false&id='+$('#local_graph_id').val());\n\t\t});\n\n\t\t$(window).resize(function() {\n\t\t\timageWidth    = $('.cactiGraphImage').width();\n\t\t\timageHeight   = $('.cactiGraphImage').height();\n\t\t\taspectRatio   = imageWidth/imageHeight;\n\n\t\t\tif (imageWidth > 0 && originalWidth == null) {\n\t\t\t\toriginalWidth = imageWidth;\n\t\t\t\toriginalHeight = imageHeight;\n\t\t\t}\n\n\t\t\t$('.cactiGraphImage').hide();\n\n\t\t\tmainSize      = $('#main').width();\n\n\t\t\tif (imageWidth > mainSize || mainSize < originalWidth) {\n\t\t\t\tnewWidth    = mainSize - 40;\n\t\t\t\taspectRatio = imageWidth / imageHeight;\n\t\t\t\timageWidth  = newWidth;\n\t\t\t\timageHeight = newWidth / aspectRatio;\n\t\t\t\t$('.cactiGraphImage').css({ width: imageWidth, height: imageHeight });\n\t\t\t} else if (mainSize > originalWidth) {\n\t\t\t\t$('.cactiGraphImage').css({ width: originalWidth, height: originalHeight });\n\t\t\t}\n\n\t\t\t$('.cactiGraphImage').show();\n\t\t}).trigger('resize');\n\t});\n\n\tif (locked) {\n\t\t$('input, select').not('input[value=\"<?php print __('Cancel');?>\"]').prop('disabled', true);\n\t\t$('.moveArrow, .deleteMarker, .linkOverDark, .linkEditMain').attr('href', '#').removeClass('moveArrow').removeClass('deleteMarker');\n\t\tif ($('#submit').button('instance')) {\n\t\t\t$('#submit').button('disable');\n\t\t} else {\n\t\t\t$('#submit').prop('disabled', true);\n\t\t}\n\t\t$('#host_id_wrap').addClass('ui-selectmenu-disabled ui-state-disabled');\n\t\t$('#host_id_input').addClass('ui-state-disabled');\n\t}\n\t</script>\n\t<?php\n\tif (isset_request_var('id')) {\n\t\tapi_plugin_hook_function('graph_edit_after', get_request_var('id'));\n\t} else {\n\t\tapi_plugin_hook_function('graph_edit_after');\n\t}\n}\n\nfunction validate_graph_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'rfilter' => array(\n\t\t\t'filter' => FILTER_VALIDATE_IS_REGEX,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t),\n\t\t'orphans' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'title_cache',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'host_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'site_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(cg_[0-9]|dq_[0-9]|[\\-0-9])')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_graph');\n\t/* ================= input validation ================= */\n}\n\nfunction graph_management() {\n\tglobal $graph_actions, $item_rows, $config;\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'graphs.php' +\n\t\t\t'?host_id=' + $('#host_id').val() +\n\t\t\t'&site_id=' + $('#site_id').val() +\n\t\t\t'&rows=' + $('#rows').val() +\n\t\t\t'&orphans=' + $('#orphans').is(':checked') +\n\t\t\t'&rfilter=' + base64_encode($('#rfilter').val()) +\n\t\t\t'&template_id=' + $('#template_id').val() +\n\t\t\t'&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'graphs.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#clear').unbind().on('click', function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#filter').unbind().on('change', function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#form_graphs').unbind().on('submit', function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\tif (read_config_option('grds_creation_method') == 1) {\n\t\t$add_url = html_escape('graphs.php?action=graph_edit&host_id=' . get_request_var('host_id'));\n\t} else {\n\t\t$add_url = '';\n\t}\n\n\thtml_start_box(__('Graph Management'), '100%', '', '3', 'center', $add_url);\n\n\tif (get_request_var('site_id') > 0) {\n\t\t$host_where = 'site_id = ' . get_request_var('site_id');\n\t} else {\n\t\t$host_where = '';\n\t}\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t\t<form id='form_graphs' action='graphs.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<?php print html_site_filter(get_request_var('site_id'));?>\n\t\t\t\t\t<?php print html_host_filter(get_request_var('host_id'), 'applyFilter', $host_where);?>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\n\t\t\t\t\t\t\t// suppress total rows retrieval\n\t\t\t\t\t\t\t$total_rows = -1;\n\n\t\t\t\t\t\t\tif (get_request_var('host_id') == 0) {\n\t\t\t\t\t\t\t\t$templates = get_allowed_graph_templates_normalized('gl.host_id=0', 'name', '', $total_rows);\n\t\t\t\t\t\t\t} elseif (get_request_var('host_id') > 0) {\n\t\t\t\t\t\t\t\t$templates = get_allowed_graph_templates_normalized('gl.host_id=' . get_filter_request_var('host_id'), 'name', '', $total_rows);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$templates = get_allowed_graph_templates_normalized('', 'name', '', $total_rows);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (cacti_sizeof($templates) > 0) {\n\t\t\t\t\t\t\t\tforeach ($templates as $template) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $template['id'] . \"'\"; if (get_request_var('template_id') == $template['id']) { print ' selected'; } print '>' . html_escape($template['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='orphans' onChange='applyFilter()' <?php print (get_request_var('orphans') == 'true' || get_request_var('orphans') == 'on' ? 'checked':'');?>>\n   \t                    \t<label for='orphans'><?php print __('Orphaned');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='rfilter' size='30' value='<?php print html_escape_request_var('rfilter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Graphs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where = '';\n\tif (get_request_var('rfilter') != '') {\n\t\t$sql_where = \" WHERE (gtg.title_cache RLIKE '\" . get_request_var('rfilter') . \"'\" .\n\t\t\t\" OR gt.name RLIKE '\" . get_request_var('rfilter') . \"')\";\n\t}\n\n\tif (get_request_var('host_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (isempty_request_var('host_id')) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gl.host_id=0';\n\t} elseif (!isempty_request_var('host_id')) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gl.host_id=' . get_request_var('host_id');\n\t}\n\n\tif (get_request_var('site_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (isempty_request_var('site_id')) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' h.site_id=0';\n\t} elseif (!isempty_request_var('site_id')) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' h.site_id=' . get_request_var('site_id');\n\t}\n\n\tif (get_request_var('template_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('template_id') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gtg.graph_template_id=0';\n\t} elseif (!isempty_request_var('template_id')) {\n\t\t$parts = explode('_', get_request_var('template_id'));\n\t\tif ($parts[0] == 'cg') {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gl.graph_template_id=' . $parts[1];\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gl.snmp_query_graph_id=' . $parts[1];\n\t\t}\n\t}\n\n\tif (get_request_var('orphans') == 'true') {\n\t\t$orphan_where = ' AND graph_type_id IN (' .\n\t\t\tGRAPH_ITEM_TYPE_LINE1     . ', ' .\n\t\t\tGRAPH_ITEM_TYPE_LINE2     . ', '.\n\t\t\tGRAPH_ITEM_TYPE_LINE3     . ', ' .\n\t\t\tGRAPH_ITEM_TYPE_LINESTACK . ', ' .\n\t\t\tGRAPH_ITEM_TYPE_AREA      . ', ' .\n\t\t\tGRAPH_ITEM_TYPE_STACK     . ')';\n\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' ((gl.snmp_index = \"\" AND gl.snmp_query_id > 0) OR (gl.id IN (SELECT gti.local_graph_id FROM graph_templates_item AS gti LEFT JOIN data_template_rrd AS dtr ON gti.task_item_id=dtr.id WHERE gti.task_item_id > 0 AND dtr.local_data_id IS NULL ' . $orphan_where . ')))';\n\t}\n\n\t/* don't allow aggregates to be view here */\n\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' ag.local_graph_id IS NULL';\n\n\t/* allow plugins to modify sql_where */\n\t$sql_where = api_plugin_hook_function('graphs_sql_where', $sql_where);\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(gtg.id)\n\t\tFROM graph_local AS gl\n\t\tINNER JOIN graph_templates_graph AS gtg\n\t\tON gl.id=gtg.local_graph_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gl.graph_template_id=gt.id\n\t\tLEFT JOIN aggregate_graphs AS ag\n\t\tON ag.local_graph_id=gl.id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\tLEFT JOIN sites AS s\n\t\tON h.site_id=s.id\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$graph_list = db_fetch_assoc(\"SELECT gtg.id, gtg.local_graph_id, gtg.height, gtg.width,\n\t\tgtg.title_cache, gt.name, gl.host_id,\n\t\tIF(gl.graph_template_id=0, 0, IF(gl.snmp_query_id=0, 2, 1)) AS source\n\t\tFROM graph_local AS gl\n\t\tINNER JOIN graph_templates_graph AS gtg\n\t\tON gl.id=gtg.local_graph_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gl.graph_template_id=gt.id\n\t\tLEFT JOIN aggregate_graphs AS ag\n\t\tON ag.local_graph_id=gl.id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\tLEFT JOIN sites AS s\n\t\tON h.site_id=s.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('graphs.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Graphs'), 'page', 'main');\n\n\tform_start('graphs.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$sources = array(\n\t\t0 => __('Not Templated'),\n\t\t1 => __('Data Query'),\n\t\t2 => __('Template')\n\t);\n\n\t$display_text = array(\n\t\t'title_cache' => array(\n\t\t\t'display' => __('Graph Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Title of this Graph.  Generally programatically generated from the Graph Template definition or Suggested Naming rules.  The max length of the Title is controlled under Settings->Visual.')\n\t\t),\n\t\t'local_graph_id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database ID for this Graph.  Useful when performing automation or debugging.')\n\t\t),\n\t\t'source' => array(\n\t\t\t'display' => __('Source Type'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The underlying source that this Graph was based upon.')\n\t\t),\n\t\t'name' => array(\n\t\t\t'display' => __('Source Name'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Graph Template or Data Query that this Graph was based upon.')\n\t\t),\n\t\t'height' => array(\n\t\t\t'display' => __('Size'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The size of this Graph when not in Preview mode.')\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($graph_list)) {\n\t\tforeach ($graph_list as $graph) {\n\t\t\t/* we're escaping strings here, so no need to escape them on form_selectable_cell */\n\t\t\t$template_details = get_current_graph_template_details($graph['local_graph_id']);\n\n\t\t\tif ($template_details['id'] > 0) {\n\t\t\t\tif ($template_details['source'] == 1) { // Data Query\n\t\t\t\t\t$url = $config['url_path'] . 'data_queries.php?action=item_edit&id=' . $template_details['id'];\n\t\t\t\t} else { // Graph Template\n\t\t\t\t\t$url = $config['url_path'] . 'graph_templates.php?action=template_edit&id=' . $template_details['id'];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$url = '';\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $graph['local_graph_id'], true);\n\t\t\tform_selectable_cell(filter_value(title_trim($graph['title_cache'], read_config_option('max_title_length')), get_request_var('rfilter'), 'graphs.php?action=graph_edit&id=' . $graph['local_graph_id']), $graph['local_graph_id']);\n\t\t\tform_selectable_cell($graph['local_graph_id'], $graph['local_graph_id'], '', 'text-align:right');\n\t\t\tform_selectable_cell(filter_value($sources[$graph['source']], get_request_var('rfilter')), $graph['local_graph_id'], '', 'right');\n\t\t\tform_selectable_cell(filter_value($template_details['name'], get_request_var('rfilter'), $url), $graph['local_graph_id'], '', 'right');\n\t\t\tform_selectable_cell($graph['height'] . 'x' . $graph['width'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_checkbox_cell($graph['title_cache'], $graph['local_graph_id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='5'><em>\" . __('No Graphs Found') . \"</em></td></tr>\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($graph_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* add a list of tree names to the actions dropdown */\n\tadd_tree_names_to_actions_array();\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($graph_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_device.php');\ninclude_once('./lib/data_query.php');\n\n$host_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate'),\n\t3 => __('Sync Devices')\n);\n\n/* set default action */\nset_default_action();\n\napi_plugin_hook('device_template_top');\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item_add_gt':\n\t\ttemplate_item_add_gt();\n\n\t\theader('Location: host_templates.php?header=false&action=edit&id=' . get_filter_request_var('host_template_id'));\n\t\tbreak;\n    case 'item_remove_gt_confirm':\n        template_item_remove_gt_confirm();\n\n        break;\n\tcase 'item_remove_gt':\n\t\ttemplate_item_remove_gt();\n\n\t\theader('Location: host_templates.php?header=false&action=edit&id=' . get_filter_request_var('host_template_id'));\n\t\tbreak;\n\tcase 'item_add_dq':\n\t\ttemplate_item_add_dq();\n\n\t\theader('Location: host_templates.php?header=false&action=edit&id=' . get_filter_request_var('host_template_id'));\n\t\tbreak;\n    case 'item_remove_dq_confirm':\n        template_item_remove_dq_confirm();\n\n        break;\n\tcase 'item_remove_dq':\n\t\ttemplate_item_remove_dq();\n\n\t\theader('Location: host_templates.php?header=false&action=edit&id=' . get_filter_request_var('host_template_id'));\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\ttemplate_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\ttemplate();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\tget_filter_request_var('snmp_query_id');\n\tget_filter_request_var('graph_template_id');\n\t/* ==================================================== */\n\n\tif (isset_request_var('save_component_template')) {\n\t\t$save['id']   = get_nfilter_request_var('id');\n\t\t$save['hash'] = get_hash_host_template(get_nfilter_request_var('id'));\n\t\t$save['name'] = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$host_template_id = sql_save($save, 'host_template');\n\n\t\t\tif ($host_template_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: host_templates.php?header=false&action=edit&id=' . (empty($host_template_id) ? get_nfilter_request_var('id') : $host_template_id));\n\t}\n}\n\nfunction duplicate_host_template($_host_template_id, $host_template_title) {\n\tglobal $fields_host_template_edit;\n\n\t$host_template              = db_fetch_row_prepared('SELECT * FROM host_template WHERE id = ?', array($_host_template_id));\n\t$host_template_graphs       = db_fetch_assoc_prepared('SELECT * FROM host_template_graph WHERE host_template_id = ?', array($_host_template_id));\n\t$host_template_data_queries = db_fetch_assoc_prepared('SELECT * FROM host_template_snmp_query WHERE host_template_id = ?', array($_host_template_id));\n\n\t/* substitute the title variable */\n\t$host_template['name'] = str_replace('<template_title>', $host_template['name'], $host_template_title);\n\n\t/* create new entry: host_template */\n\t$save['id']   = 0;\n\t$save['hash'] = get_hash_host_template(0);\n\n\tforeach ($fields_host_template_edit as $field => $array) {\n\t\tif (!preg_match('/^hidden/', $array['method'])) {\n\t\t\t$save[$field] = $host_template[$field];\n\t\t}\n\t}\n\n\t$host_template_id = sql_save($save, 'host_template');\n\n\t/* create new entry(s): host_template_graph */\n\tif (cacti_sizeof($host_template_graphs)) {\n\t\tforeach ($host_template_graphs as $host_template_graph) {\n\t\t\tdb_execute_prepared('INSERT INTO host_template_graph\n\t\t\t\t(host_template_id,graph_template_id)\n\t\t\t\tVALUES (?, ?)',\n\t\t\t\tarray($host_template_id, $host_template_graph['graph_template_id']));\n\t\t}\n\t}\n\n\t/* create new entry(s): host_template_snmp_query */\n\tif (cacti_sizeof($host_template_data_queries)) {\n\t\tforeach ($host_template_data_queries as $host_template_data_query) {\n\t\t\tdb_execute_prepared('INSERT INTO host_template_snmp_query\n\t\t\t\t(host_template_id,snmp_query_id)\n\t\t\t\tVALUES (?, ?)',\n\t\t\t\tarray($host_template_id, $host_template_data_query['snmp_query_id']));\n\t\t}\n\t}\n}\n\n/* ------------------------\n    The \"actions\" function\n   ------------------------ */\n\nfunction template_item_add_dq() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('host_template_id');\n\tget_filter_request_var('snmp_query_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('REPLACE INTO host_template_snmp_query\n\t\t(host_template_id, snmp_query_id)\n\t\tVALUES (?, ?)',\n\t\tarray(get_request_var('host_template_id'), get_request_var('snmp_query_id')));\n\n\traise_message(41);\n}\n\nfunction template_item_add_gt() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('host_template_id');\n\tget_filter_request_var('graph_template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('REPLACE INTO host_template_graph\n\t\t(host_template_id, graph_template_id)\n\t\tVALUES (?, ?)',\n\t\tarray(get_request_var('host_template_id'), get_request_var('graph_template_id')));\n\n\traise_message(41);\n}\n\nfunction form_actions() {\n\tglobal $host_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\tdb_execute('DELETE FROM host_template WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM host_template_snmp_query WHERE ' . array_to_sql_or($selected_items, 'host_template_id'));\n\t\t\t\tdb_execute('DELETE FROM host_template_graph WHERE ' . array_to_sql_or($selected_items, 'host_template_id'));\n\n\t\t\t\t/* \"undo\" any device that is currently using this template */\n\t\t\t\tdb_execute('UPDATE host SET host_template_id=0 WHERE ' . array_to_sql_or($selected_items, 'host_template_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tduplicate_host_template($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // sync\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_device_template_sync_template($selected_items[$i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: host_templates.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$host_list = ''; $i = 0;\n\n\t/* loop through each of the host templates selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$host_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM host_template WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$host_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('host_templates.php');\n\n\thtml_start_box($host_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($host_array) && cacti_sizeof($host_array)) {\n\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Device Template(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$host_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete Device Template(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to duplicate the following Device Template(s).  Optionally change the title for the new Device Template(s).') .\"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$host_list</ul></div>\n\t\t\t\t\t<p><strong>\" . __('Title Format:'). \"</strong><br>\\n\";\n\n\t\t\tform_text_box('title_format', '<template_title> (1)', '', '255', '30', 'text');\n\n\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') .\"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Duplicate Device Template(s)') .\"'>\";\n\t\t} elseif (get_request_var('drp_action') == '3') { // sync devices\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to Synchronize Devices associated with the selected Device Template(s).  Note that this action may take some time depending on the number of Devices mapped to the Device Template.') .\"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$host_list</ul></div>\\n\";\n\n\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') .\"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Sync Devices to Device Template(s)') .\"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: host_templates.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($host_array) ? serialize($host_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* ---------------------\n    Template Functions\n   --------------------- */\n\nfunction template_item_remove_gt_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\t/* ==================================================== */\n\n\tform_start('host_templates.php?action=edit&id' . get_request_var('host_template_id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$template = db_fetch_row_prepared('SELECT * FROM graph_templates WHERE id = ?', array(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Graph Template will be disassociated from the Device Template.');?></p>\n\t\t\t<p><?php print __('Graph Template Name: %s', html_escape($template['name']));?>'<br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\")' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove Data Input Field');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$('#continue').click(function(data) {\n\t\t$.post('host_templates.php?action=item_remove_gt', {\n\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\thost_template_id: <?php print get_request_var('host_template_id');?>,\n\t\t\tid: <?php print get_request_var('id');?>\n\t\t}, function(data) {\n\t\t\t$('#cdialog').dialog('close');\n\t\t\t$('div[class^=\"ui-\"]').remove();\n\t\t\t$('#main').html(data);\n\t\t\tapplySkin();\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction template_item_remove_gt() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM host_template_graph\n\t\tWHERE graph_template_id = ?\n\t\tAND host_template_id = ?',\n\t\tarray(get_request_var('id'), get_request_var('host_template_id')));\n\n\traise_message(41);\n}\n\nfunction template_item_remove_dq_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\t/* ==================================================== */\n\n\tform_start('host_templates.php?action=edit&id' . get_request_var('host_template_id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$query = db_fetch_row_prepared('SELECT * FROM snmp_query WHERE id = ?', array(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Data Queries will be disassociated from the Device Template.');?></p>\n\t\t\t<p><?php print __('Data Query Name: %s', html_escape($query['name']));?>'<br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\")' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove Data Input Field');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$('#continue').click(function(data) {\n\t\t$.post('host_templates.php?action=item_remove_dq', {\n\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\thost_template_id: <?php print get_request_var('host_template_id');?>,\n\t\t\tid: <?php print get_request_var('id');?>\n\t\t}, function(data) {\n\t\t\t$('#cdialog').dialog('close');\n\t\t\t$('div[class^=\"ui-\"]').remove();\n\t\t\t$('#main').html(data);\n\t\t\tapplySkin();\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction template_item_remove_dq() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM host_template_snmp_query\n\t\tWHERE snmp_query_id = ?\n\t\tAND host_template_id = ?',\n\t\tarray(get_request_var('id'), get_request_var('host_template_id')));\n\n\traise_message(41);\n}\n\nfunction template_edit() {\n\tglobal $fields_host_template_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$host_template = db_fetch_row_prepared('SELECT *\n\t\t\tFROM host_template\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Device Templates [edit: %s]', html_escape($host_template['name']));\n\t} else {\n\t\t$header_label = __('Device Templates [new]');\n\t\tset_request_var('id', 0);\n\t}\n\n\tform_start('host_templates.php', 'form_network');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => 'true'),\n\t\t\t'fields' => inject_form_variables($fields_host_template_edit, (isset($host_template) ? $host_template : array()))\n\t\t)\n\t);\n\n\t/* we have to hide this button to make a form change in the main form trigger the correct\n\t * submit action */\n\techo \"<div style='display:none;'><input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Default Submit Button') . \"'></div>\";\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('id')) {\n\t\thtml_start_box(__('Associated Graph Templates'), '100%', '', '3', 'center', '');\n\n\t\t$selected_graph_templates = db_fetch_assoc_prepared('SELECT\n\t\t\tgraph_templates.id,\n\t\t\tgraph_templates.name\n\t\t\tFROM (graph_templates,host_template_graph)\n\t\t\tWHERE graph_templates.id = host_template_graph.graph_template_id\n\t\t\tAND host_template_graph.host_template_id = ?\n\t\t\tORDER BY graph_templates.name', array(get_request_var('id')));\n\n\t\t$i = 0;\n\t\tif (cacti_sizeof($selected_graph_templates)) {\n\t\t\tforeach ($selected_graph_templates as $item) {\n\t\t\t\tform_alternate_row(\"gt$i\", true);\n\t\t\t\t?>\n\t\t\t\t\t<td class='left'>\n\t\t\t\t\t\t<strong><?php print $i;?>)</strong> <?php print html_escape($item['name']);?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t<a class='delete deleteMarker fa fa-times' title='<?php print __esc('Delete');?>' href='<?php print html_escape('host_templates.php?action=item_remove_gt_confirm&id=' . $item['id'] . '&host_template_id=' . get_request_var('id'));?>'></a>\n\t\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No associated graph templates.') . '</em></td></tr>';\n\t\t}\n\n\t\t?>\n\t\t<tr class='odd'>\n\t\t\t<td colspan='2'>\n\t\t\t\t<table>\n\t\t\t\t\t<tr style='line-height:10px'>\n\t\t\t\t\t\t<td class='nowrap templateAdd'>\n\t\t\t\t\t\t\t<?php print __('Add Graph Template');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t\t<?php form_dropdown('graph_template_id', db_fetch_assoc_prepared('SELECT gt.id, gt.name\n\t\t\t\t\t\t\t\tFROM graph_templates AS gt\n\t\t\t\t\t\t\t\tLEFT JOIN host_template_graph AS htg\n\t\t\t\t\t\t\t\tON gt.id=htg.graph_template_id\n\t\t\t\t\t\t\t\tAND htg.host_template_id = ?\n\t\t\t\t\t\t\t\tWHERE htg.host_template_id IS NULL\n\t\t\t\t\t\t\t\tAND gt.id NOT IN (SELECT graph_template_id FROM snmp_query_graph)\n\t\t\t\t\t\t\t\tORDER BY gt.name', array(get_request_var('id'))),'name','id','','','');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Add');?>' id='add_gt' title='<?php print __esc('Add Graph Template to Device Template');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\n\t\t<?php\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('Associated Data Queries'), '100%', '', '3', 'center', '');\n\n\t\t$selected_data_queries = db_fetch_assoc_prepared('SELECT snmp_query.id, snmp_query.name\n\t\t\tFROM (snmp_query, host_template_snmp_query)\n\t\t\tWHERE snmp_query.id = host_template_snmp_query.snmp_query_id\n\t\t\tAND host_template_snmp_query.host_template_id = ?\n\t\t\tORDER BY snmp_query.name', array(get_request_var('id')));\n\n\t\t$i = 0;\n\t\tif (cacti_sizeof($selected_data_queries)) {\n\t\t\tforeach ($selected_data_queries as $item) {\n\t\t\t\tform_alternate_row(\"dq$i\", true);\n\t\t\t\t?>\n\t\t\t\t\t<td class='left'>\n\t\t\t\t\t\t<strong><?php print $i;?>)</strong> <?php print html_escape($item['name']);?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t<a class='delete deleteMarker fa fa-times' title='<?php print __esc('Delete');?>' href='<?php print html_escape('host_templates.php?action=item_remove_dq_confirm&id=' . $item['id'] . '&host_template_id=' . get_request_var('id'));?>'></a>\n\t\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No associated data queries.') . '</em></td></tr>';\n\t\t}\n\n\t\t?>\n\t\t<tr class='odd'>\n\t\t\t<td colspan='2'>\n\t\t\t\t<table>\n\t\t\t\t\t<tr style='line-height:10px;'>\n\t\t\t\t\t\t<td class='nowrap queryAdd'>\n\t\t\t\t\t\t\t<?php print __('Add Data Query');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t\t<?php form_dropdown('snmp_query_id', db_fetch_assoc_prepared('SELECT snmp_query.id, snmp_query.name\n\t\t\t\t\t\t\t\tFROM snmp_query LEFT JOIN host_template_snmp_query\n\t\t\t\t\t\t\t\tON (snmp_query.id = host_template_snmp_query.snmp_query_id AND host_template_snmp_query.host_template_id = ?)\n\t\t\t\t\t\t\t\tWHERE host_template_snmp_query.host_template_id is null\n\t\t\t\t\t\t\t\tORDER BY snmp_query.name', array(get_request_var('id'))),'name','id','','','');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Add');?>' id='add_dq' title='<?php print __esc('Add Data Query to Device Template');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tapi_plugin_hook('device_template_edit');\n\t}\n\n\tform_save_button('host_templates.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t$('#cdialog').remove();\n\t\t$('body').append(\"<div id='cdialog'></div>\");\n\n\t\t$('.delete').click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\trequest = $(this).attr('href');\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete Data Input Field');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\n\t\t$('#add_dq').click(function() {\n\t\t\t$.post('host_templates.php?action=item_add_dq', {\n\t\t\t\thost_template_id: $('#id').val(),\n\t\t\t\tsnmp_query_id: $('#snmp_query_id').val(),\n\t\t\t\treindex_method: $('#reindex_method').val(),\n\t\t\t\t__csrf_magic: csrfMagicToken\n\t\t\t}).done(function(data) {\n\t\t\t\t$('div[class^=\"ui-\"]').remove();\n\t\t\t\t$('#main').html(data);\n\t\t\t\tapplySkin();\n\t\t\t});\n\t\t});\n\n\t\t$('#add_gt').click(function() {\n\t\t\t$.post('host_templates.php?action=item_add_gt', {\n\t\t\t\thost_template_id: $('#id').val(),\n\t\t\t\tgraph_template_id: $('#graph_template_id').val(),\n\t\t\t\t__csrf_magic: csrfMagicToken\n\t\t\t}).done(function(data) {\n\t\t\t\t$('div[class^=\"ui-\"]').remove();\n\t\t\t\t$('#main').html(data);\n\t\t\t\tapplySkin();\n\t\t\t});\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t});\n\t</script>\n\t<?php\n}\n\nfunction template() {\n\tglobal $host_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_hosts' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ht');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('Device Templates'), '100%', '', '3', 'center', 'host_templates.php?action=edit');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_host_template' action='host_templates.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Device Templates');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='has_hosts' <?php print (get_request_var('has_hosts') == 'true' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='has_hosts'><?php print __('Has Devices');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t</td>\n\t\t<script type='text/javascript'>\n\t\tfunction applyFilter() {\n\t\t\tstrURL  = 'host_templates.php?header=false';\n\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\tstrURL += '&has_hosts='+$('#has_hosts').is(':checked');\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\tfunction clearFilter() {\n\t\t\tstrURL = 'host_templates.php?clear=1&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#refresh, #has_hosts').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#clear').click(function() {\n\t\t\t\tclearFilter();\n\t\t\t});\n\n\t\t\t$('#form_host_template').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\t\t});\n\t\t</script>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (host_template.name LIKE '%%\" . get_request_var('filter') . \"%%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('has_hosts') == 'true') {\n\t\t$sql_having = 'HAVING hosts>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(`rows`)\n\t\tFROM (\n\t\t\tSELECT\n\t\t\tCOUNT(host_template.id) AS `rows`, COUNT(DISTINCT host.id) AS hosts\n\t\t\tFROM host_template\n\t\t\tLEFT JOIN host ON host.host_template_id=host_template.id\n\t\t\t$sql_where\n\t\t\tGROUP BY host_template.id\n\t\t\t$sql_having\n\t\t) AS rs\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$template_list = db_fetch_assoc(\"SELECT\n\t\thost_template.id,host_template.name, COUNT(DISTINCT host.id) AS hosts\n\t\tFROM host_template\n\t\tLEFT JOIN host ON host.host_template_id=host_template.id\n\t\t$sql_where\n\t\tGROUP BY host_template.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('host_templates.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Device Templates'), 'page', 'main');\n\n\tform_start('host_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array('display' => __('Device Template Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this Device Template.')),\n\t\t'host_template.id' => array('display' => __('ID'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The internal database ID for this Device Template.  Useful when performing automation or debugging.')),\n\t\t\"nosort\" => array('display' => __('Deletable'), 'align' => 'right', 'sort' => '', 'tip' => __('Device Templates in use cannot be Deleted.  In use is defined as being referenced by a Device.')),\n\t\t'hosts' => array('display' => __('Devices Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Devices using this Device Template.'))\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['hosts'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $template['id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'host_templates.php?action=edit&id=' . $template['id']), $template['id']);\n\t\t\tform_selectable_cell($template['id'], $template['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $template['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"' . html_escape('host.php?reset=true&host_template_id=' . $template['id']) . '\">' . number_format_i18n($template['hosts'], '-1') . '</a>', $template['id'], '', 'text-align:right');\n\t\t\tform_checkbox_cell($template['name'], $template['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='4'><em>\" . __('No Device Templates Found') . \"</em></td></tr>\\n\";\n\t}\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($host_actions);\n\n\tform_end();\n}\n\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nfunction reports_item_dnd() {\n\t/* ================= Input validation ================= */\n\tget_filter_request_var('id');\n\t/* ================= Input validation ================= */\n\n\t$continue = true;\n\n\tif (isset_request_var('report_item') && is_array(get_nfilter_request_var('report_item'))) {\n        $report_items = get_nfilter_request_var('report_item');\n\n        if (cacti_sizeof($report_items)) {\n            $sequence = 1;\n            foreach($report_items as $item) {\n                $item_id = str_replace('line', '', $item);\n                input_validate_input_number($item_id);\n\n                db_execute_prepared('UPDATE reports_items\n                    SET sequence = ?\n                    WHERE id = ?\n\t\t\t\t\tAND report_id = ?',\n                    array($sequence, $item_id, get_request_var('id')));\n\n                $sequence++;\n            }\n        }\n    }\n}\n\nfunction reports_form_save() {\n\tglobal $config, $messages;\n\n\tif (isset_request_var('save_component_report')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('font_size');\n\t\tget_filter_request_var('graph_width');\n\t\tget_filter_request_var('graph_height');\n\t\tget_filter_request_var('graph_columns');\n\t\t/* ==================================================== */\n\t\t$now = time();\n\n\t\tif (isempty_request_var('id')) {\n\t\t\t$save['user_id'] = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\t$save['user_id'] = db_fetch_cell_prepared('SELECT user_id FROM reports WHERE id = ?', array(get_nfilter_request_var('id')));\n\t\t}\n\n\t\t$save['id']            = get_nfilter_request_var('id');\n\t\t$save['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['email']         = form_input_validate(get_nfilter_request_var('email'), 'email', '', false, 3);\n\t\t$save['enabled']       = (isset_request_var('enabled') ? 'on' : '');\n\n\t\t$save['cformat']       = (isset_request_var('cformat') ? 'on' : '');\n\t\t$save['format_file']   = get_nfilter_request_var('format_file');\n\t\t$save['font_size']     = form_input_validate(get_nfilter_request_var('font_size'), 'font_size', '^[0-9]+$', false, 3);\n\t\t$save['alignment']     = form_input_validate(get_nfilter_request_var('alignment'), 'alignment', '^[0-9]+$', false, 3);\n\t\t$save['graph_linked']  = (isset_request_var('graph_linked') ? 'on' : '');\n\n\t\t$save['graph_columns'] = form_input_validate(get_nfilter_request_var('graph_columns'), 'graph_columns', '^[0-9]+$', false, 3);\n\t\t$save['graph_width']   = form_input_validate(get_nfilter_request_var('graph_width'), 'graph_width', '^[0-9]+$', false, 3);\n\t\t$save['graph_height']  = form_input_validate(get_nfilter_request_var('graph_height'), 'graph_height', '^[0-9]+$', false, 3);\n\t\t$save['thumbnails']    = form_input_validate((isset_request_var('thumbnails') ? get_nfilter_request_var('thumbnails'):''), 'thumbnails', '', true, 3);\n\n\t\t$save['intrvl']        = form_input_validate(get_nfilter_request_var('intrvl'), 'intrvl', '^[-+]?[0-9]+$', false, 3);\n\t\t$save['count']         = form_input_validate(get_nfilter_request_var('count'), 'count', '^[0-9]+$', false, 3);\n\t\t$save['offset']        = '0';\n\n\t\t/* adjust mailtime according to rules */\n\t\t$timestamp = strtotime(get_nfilter_request_var('mailtime'));\n\t\tif ($timestamp === false) {\n\t\t\t$timestamp  = $now;\n\t\t} elseif (($timestamp + read_config_option('poller_interval')) < $now) {\n\t\t\t$timestamp += 86400;\n\n\t\t\t/* if the time is far into the past, make it the correct time, but tomorrow */\n\t\t\tif (($timestamp + read_config_option('poller_interval')) < $now) {\n\t\t\t\t$timestamp = strtotime('12:00am') + 86400 + date('H', $timestamp) * 3600 + date('i', $timestamp) * 60 + date('s', $timestamp);\n\t\t\t}\n\n\t\t\t$_SESSION['reports_message'] = __('Date/Time moved to the same time Tomorrow');\n\n\t\t\traise_message('reports_message');\n\t\t}\n\n\t\t$save['mailtime']     = form_input_validate($timestamp, 'mailtime', '^[0-9]+$', false, 3);\n\n\t\tif (get_nfilter_request_var('subject') != '') {\n\t\t\t$save['subject'] = get_nfilter_request_var('subject');\n\t\t} else {\n\t\t\t$save['subject'] = $save['name'];\n\t\t}\n\n\t\t$save['from_name']        = get_nfilter_request_var('from_name');\n\t\t$save['from_email']       = get_nfilter_request_var('from_email');\n\t\t$save['bcc']              = get_nfilter_request_var('bcc');\n\n\t\t$atype = get_nfilter_request_var('attachment_type');\n\t\tif (($atype != REPORTS_TYPE_INLINE_PNG) &&\n\t\t\t($atype != REPORTS_TYPE_INLINE_JPG) &&\n\t\t\t($atype != REPORTS_TYPE_INLINE_GIF) &&\n\t\t\t($atype != REPORTS_TYPE_ATTACH_PNG) &&\n\t\t\t($atype != REPORTS_TYPE_ATTACH_JPG) &&\n\t\t\t($atype != REPORTS_TYPE_ATTACH_GIF) &&\n\t\t\t($atype != REPORTS_TYPE_INLINE_PNG_LN) &&\n\t\t\t($atype != REPORTS_TYPE_INLINE_JPG_LN) &&\n\t\t\t($atype != REPORTS_TYPE_INLINE_GIF_LN)) {\n\t\t\t$atype = REPORTS_TYPE_INLINE_PNG;\n\t\t}\n\n\t\t$save['attachment_type']  = form_input_validate($atype, 'attachment_type', '^[0-9]+$', false, 3);\n\t\t$save['lastsent']         = 0;\n\n\t\tif (!is_error_message()) {\n\t\t\t$id = sql_save($save, 'reports');\n\n\t\t\tif ($id) {\n\t\t\t\traise_message('reports_save');\n\t\t\t} else {\n\t\t\t\traise_message('reports_save_failed');\n\t\t\t}\n\t\t}\n\n\t\theader('Location: ' . get_reports_page() . '?action=edit&header=false&id=' . (empty($id) ? get_nfilter_request_var('id') : $id));\n\t\texit;\n\t} elseif (isset_request_var('save_component_report_item')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('report_id');\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save = array();\n\n\t\t$save['id']                = get_nfilter_request_var('id');\n\t\t$save['report_id']         = form_input_validate(get_nfilter_request_var('report_id'), 'report_id', '^[0-9]+$', false, 3);\n\t\t$save['sequence']          = form_input_validate(get_nfilter_request_var('sequence'), 'sequence', '^[0-9]+$', false, 3);\n\t\t$save['item_type']         = form_input_validate(get_nfilter_request_var('item_type'), 'item_type', '^[-0-9]+$', false, 3);\n\t\t$save['tree_id']           = (isset_request_var('tree_id') ? form_input_validate(get_nfilter_request_var('tree_id'), 'tree_id', '^[-0-9]+$', true, 3) : 0);\n\t\t$save['branch_id']         = (isset_request_var('branch_id') ? form_input_validate(get_nfilter_request_var('branch_id'), 'branch_id', '^[-0-9]+$', true, 3) : 0);\n\t\t$save['tree_cascade']      = (isset_request_var('tree_cascade') ? 'on':'');\n\t\t$save['graph_name_regexp'] = get_nfilter_request_var('graph_name_regexp');\n\t\t$save['host_template_id']  = (isset_request_var('host_template_id') ? form_input_validate(get_nfilter_request_var('host_template_id'), 'host_template_id', '^[-0-9]+$', true, 3) : 0);\n\t\t$save['host_id']           = (isset_request_var('host_id') ? form_input_validate(get_nfilter_request_var('host_id'), 'host_id', '^[-0-9]+$', true, 3) : 0);\n\t\t$save['graph_template_id'] = (isset_request_var('graph_template_id') ? form_input_validate(get_nfilter_request_var('graph_template_id'), 'graph_template_id', '^[-0-9]+$', true, 3) : 0);\n\t\t$save['local_graph_id']    = (isset_request_var('local_graph_id') ? form_input_validate(get_nfilter_request_var('local_graph_id'), 'local_graph_id', '^[0-9]+$', true, 3) : 0);\n\t\t$save['timespan']          = (isset_request_var('timespan') ? form_input_validate(get_nfilter_request_var('timespan'), 'timespan', '^[0-9]+$', true, 3) : 0);\n\t\t$save['item_text']         = (isset_request_var('item_text') ? form_input_validate(get_nfilter_request_var('item_text'), 'item_text', '', true, 3) : '');\n\t\t$save['align']             = (isset_request_var('align') ? form_input_validate(get_nfilter_request_var('align'), 'align', '^[0-9]+$', true, 3) : REPORTS_ALIGN_LEFT);\n\t\t$save['font_size']         = (isset_request_var('font_size') ? form_input_validate(get_nfilter_request_var('font_size'), 'font_size', '^[0-9]+$', true, 3) : REPORTS_FONT_SIZE);\n\n\t\tif (!is_error_message()) {\n\t\t\t$item_id = sql_save($save, 'reports_items');\n\n\t\t\tif ($item_id) {\n\t\t\t\traise_message('reports_item_save');\n\t\t\t} else {\n\t\t\t\traise_message('reports_item_save_failed');\n\t\t\t}\n\t\t}\n\n\t\theader('Location: ' . get_reports_page() . '?action=item_edit&header=false&id=' . get_nfilter_request_var('report_id') . '&item_id=' . (empty($item_id) ? get_nfilter_request_var('id') : $item_id));\n\t} else {\n\t\theader('Location: ' . get_reports_page() . '?header=false');\n\t}\n\texit;\n}\n\n\n/* ------------------------\n The 'actions' function\n ------------------------ */\nfunction reports_form_actions() {\n\tglobal $config, $reports_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == REPORTS_DELETE) { // delete\n\t\t\t\tdb_execute('DELETE FROM reports WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM reports_items WHERE ' . str_replace('id', 'report_id', array_to_sql_or($selected_items, 'id')));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_OWN) { // take ownership\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\treports_log(__FUNCTION__ . ', takeown: ' . $selected_items[$i] . ' user: ' . $_SESSION['sess_user_id'], false, 'REPORTS TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t\tdb_execute_prepared('UPDATE reports\n\t\t\t\t\t\tSET user_id = ?\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($_SESSION['sess_user_id'], $selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_DUPLICATE) { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\treports_log(__FUNCTION__ . ', duplicate: ' . $selected_items[$i] . ' name: ' . get_nfilter_request_var('name_format'), false, 'REPORTS TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t\tduplicate_reports($selected_items[$i], get_nfilter_request_var('name_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_ENABLE) { // enable\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\treports_log(__FUNCTION__ . ', enable: ' . $selected_items[$i], false, 'REPORTS TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t\tdb_execute_prepared('UPDATE reports\n\t\t\t\t\t\tSET enabled=\"on\"\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_DISABLE) { // disable\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\treports_log(__FUNCTION__ . ', disable: ' . $selected_items[$i], false, 'REPORTS TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t\tdb_execute_prepared('UPDATE reports\n\t\t\t\t\t\tSET enabled=\"\"\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_SEND_NOW) { // send now\n\t\t\t\t$message = '';\n\n\t\t\t\tkill_session_var('reports_message');\n\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\treports_send($selected_items[$i]);\n\n\t\t\t\t\tif (isset($_SESSION['reports_info']) && $_SESSION['reports_info'] != '') {\n\t\t\t\t\t\t$message .= ($message != '' ? '<br>':'') . $_SESSION['reports_info'];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($_SESSION['reports_error']) && $_SESSION['reports_error'] != '') {\n\t\t\t\t\t\t$message .= ($message != '' ? '<br>':'') . \"<span style='color:red;'>\" . $_SESSION['reports_error'] . '</span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tkill_session_var('reports_info');\n\t\t\t\t\tkill_session_var('reports_error');\n\t\t\t\t}\n\n\t\t\t\tif ($message != '') {\n\t\t\t\t\t$_SESSION['reports_message'] = $message;\n\t\t\t\t\traise_message('reports_message');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tforce_session_data();\n\n\t\theader('Location: ' . get_reports_page() . '?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$reports_list = ''; $i = 0;\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$reports_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM reports WHERE id = ?', array($matches[1]))) . '</li>';\n\n\t\t\t$reports_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\tgeneral_header();\n\n\tform_start(get_reports_page(), 'report');\n\n\thtml_start_box($reports_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (!isset($reports_array)) {\n\t\traise_message(40);\n\t\theader('Location: ' . get_reports_page() . '?header=false');\n\t\texit;\n\t} else {\n\t\t$save_html = \"<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' name='save'>\";\n\n\t\tif (get_nfilter_request_var('drp_action') == REPORTS_DELETE) { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Report(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$reports_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t} elseif (is_reports_admin() && get_nfilter_request_var('drp_action') == REPORTS_OWN) { // take ownership\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to take ownership of the following Report(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$reports_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_DUPLICATE) { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to duplicate the following Report(s).  You may optionally change the title for the new Reports') . \".</p>\n\t\t\t\t\t<div class='itemlist'><ul>$reports_list</ul></div>\n\t\t\t\t\t<p>\" . __('Name Format:') . \"<br>\\n\";\n\n\t\t\tform_text_box('name_format', '<name> (1)', '', '255', '30', 'text');\n\n\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_ENABLE) { // enable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to enable the following Report(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$reports_list</ul></div>\n\t\t\t\t\t<p>\" . __('Please be certain that those Report(s) have successfully been tested first!') . \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_DISABLE) { // disable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to disable the following Reports.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$reports_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_SEND_NOW) { // send now\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to send the following Report(s) now.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$reports_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t}\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($reports_array) ? serialize($reports_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' onClick='cactiReturnTo()' value='\" . ($save_html == '' ? 'Return':'Cancel') . \"' name='cancel'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* --------------------------\n Report Item Functions\n -------------------------- */\nfunction reports_send($id) {\n\tglobal $config;\n\n\t/* ================= input validation ================= */\n\tinput_validate_input_number($id);\n\t/* ==================================================== */\n\n\t$report = db_fetch_row_prepared('SELECT *\n\t\tFROM reports\n\t\tWHERE id = ?',\n\t\tarray($id));\n\n\tif (!cacti_sizeof($report)) {\n\t\t/* set error condition */\n\t} elseif ($report['user_id'] == $_SESSION['sess_user_id']) {\n\t\treports_log(__FUNCTION__ . ', send now, report_id: ' . $id, false, 'REPORTS TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t/* use report name as default EMail title */\n\t\tif ($report['subject'] == '') {\n\t\t\t$report['subject'] = $report['name'];\n\t\t}\n\n\t\tif ($report['email'] == '') {\n\t\t\t$_SESSION['reports_error'] = __('Unable to send Report \\'%s\\'.  Please set destination e-mail addresses',  $report['name']);\n\t\t\tif (!isset_request_var('selected_items')) {\n\t\t\t\traise_message('reports_error');\n\t\t\t}\n\t\t} elseif ($report['subject'] == '') {\n\t\t\t$_SESSION['reports_error'] = __('Unable to send Report \\'%s\\'.  Please set an e-mail subject',  $report['name']);\n\t\t\tif (!isset_request_var('selected_items')) {\n\t\t\t\traise_message('reports_error');\n\t\t\t}\n\t\t} elseif ($report['from_name'] == '') {\n\t\t\t$_SESSION['reports_error'] = __('Unable to send Report \\'%s\\'.  Please set an e-mail From Name',  $report['name']);\n\t\t\tif (!isset_request_var('selected_items')) {\n\t\t\t\traise_message('reports_error');\n\t\t\t}\n\t\t} elseif ($report['from_email'] == '') {\n\t\t\t$_SESSION['reports_error'] = __('Unable to send Report \\'%s\\'.  Please set an e-mail from address',  $report['name']);\n\t\t\tif (!isset_request_var('selected_items')) {\n\t\t\t\traise_message('reports_error');\n\t\t\t}\n\t\t} else {\n\t\t\tgenerate_report($report, true);\n\t\t}\n\t}\n}\n\nfunction reports_item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tmove_item_down('reports_items', get_request_var('item_id'), 'report_id=' . get_request_var('id'));\n}\n\nfunction reports_item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\tmove_item_up('reports_items', get_request_var('item_id'), 'report_id=' . get_request_var('id'));\n}\n\nfunction reports_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('item_id');\n\t/* ==================================================== */\n\tdb_execute_prepared('DELETE FROM reports_items WHERE id = ?', array(get_request_var('item_id')));\n}\n\nfunction reports_item_edit() {\n\tglobal $config, $item_types, $graph_timespans, $alignment;\n\n\t$trees           = array();\n\t$branches        = array();\n\t$hosts           = array();\n\t$graph_templates = array();\n\t$graphs          = array();\n\n\t$report_item = array();\n\tif (isset_request_var('item_id')) {\n\t\t$report_item = db_fetch_row_prepared('SELECT *\n\t\t\tFROM reports_items WHERE id = ?',\n\t\t\tarray(get_filter_request_var('item_id')));\n\t}\n\n\tif (cacti_sizeof($report_item) || $report_item['item_type'] == REPORTS_ITEM_GRAPH) {\n\t\t$trees           = array();\n\t\t$branches        = array();\n\n\t\t/* get the hosts sql first */\n\t\t$hosts = null;\n\t\t$total_rows = -1;\n\t\tif (isset_request_var('host_template_id')) {\n\t\t\tif (get_filter_request_var('host_template_id') > 0) {\n\t\t\t\t$hosts = array_rekey(\n\t\t\t\t\tget_allowed_devices('h.host_template_id =' . get_request_var('host_template_id'), 'description', '', $total_rows),\n\t\t\t\t\t'id', 'description'\n\t\t\t\t);\n\t\t\t}\n\t\t} elseif ($report_item['host_template_id'] > 0) {\n\t\t\t$hosts = array_rekey(\n\t\t\t\tget_allowed_devices('h.host_template_id =' . $report_item['host_template_id'], 'description', '', $total_rows),\n\t\t\t\t'id', 'description'\n\t\t\t);\n\t\t}\n\n\t\tif ($hosts == null) {\n\t\t\t$hosts = array_rekey(\n\t\t\t\tget_allowed_devices('', 'description', '', $total_rows),\n\t\t\t\t'id','description'\n\t\t\t);\n\t\t}\n\n\t\t// suppress total rows collection\n\t\t$total_rows = -1;\n\n\t\t$graph_templates = array();\n\t\tif (isset_request_var('host_id') && get_filter_request_var('host_id') > 0) {\n\t\t\t$graph_templates = array_rekey(\n\t\t\t\tget_allowed_graph_templates('h.id = ' . get_request_var('host_id')),\n\t\t\t\t'id', 'name', $total_rows\n\t\t\t);\n\t\t} elseif ($report_item['host_id'] > 0) {\n\t\t\t$graph_templates = array_rekey(\n\t\t\t\tget_allowed_graph_templates('h.id = ' . $report_item['host_id']),\n\t\t\t\t'id', 'name', $total_rows\n\t\t\t);\n\t\t}\n\n\t\t$sql_where = '';\n\t\t$graphs    = array();\n\t\tif (isset_request_var('host_template_id')) {\n\t\t\tif (get_filter_request_var('host_template_id') > 0) {\n\t\t\t\t$sql_where = 'h.host_template_id=' . get_request_var('host_template_id');\n\t\t\t}\n\t\t} elseif ($report_item['host_template_id'] > 0) {\n\t\t\t$sql_where = 'h.host_template_id=' . $report_item['host_template_id'];\n\t\t}\n\n\t\tif (isset_request_var('host_id')) {\n\t\t\tif (get_filter_request_var('host_id') > 0) {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'gl.host_id=' . get_request_var('host_id');\n\t\t\t}\n\t\t} elseif ($report_item['host_id'] > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'gl.host_id=' . $report_item['host_id'];\n\t\t}\n\n\t\tif (isset_request_var('graph_template_id')) {\n\t\t\tif (get_filter_request_var('graph_template_id') > 0) {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'gl.graph_template_id=' . get_request_var('graph_template_id');\n\t\t\t}\n\t\t} elseif ($report_item['graph_template_id'] > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'gl.graph_template_id=' . $report_item['graph_template_id'];\n\t\t}\n\n\t\tif ($sql_where != '') {\n\t\t\t$graphs = array_rekey(\n\t\t\t\tget_allowed_graphs($sql_where),\n\t\t\t\t'local_graph_id', 'title_cache'\n\t\t\t);\n\t\t\t$agg   = array_rekey(\n\t\t\t\tget_allowed_aggregate_graphs($sql_where),\n\t\t\t\t'local_graph_id', 'title_cache'\n\t\t\t);\n\t\t} else {\n\t\t\t$sql_where = 'gl.graph_template_id=0';\n\t\t\t$graphs = array_rekey(\n\t\t\t\tget_allowed_graphs($sql_where),\n\t\t\t\t'local_graph_id', 'title_cache'\n\t\t\t);\n\t\t\t$agg   = array_rekey(\n\t\t\t\tget_allowed_aggregate_graphs($sql_where),\n\t\t\t\t'local_graph_id', 'title_cache'\n\t\t\t);\n\t\t}\n\n\t\t$graphs = array_merge($graphs, $agg);\n\t}\n\n\n\tif (!isset($report_item) || $report_item['item_type'] == REPORTS_ITEM_TREE) {\n\t\t$trees = array_rekey(\n\t\t\tget_allowed_trees(),\n\t\t\t'id', 'name'\n\t\t);\n\n\t\t$sql_where = '';\n\t\tif (isset_request_var('tree_id')) {\n\t\t\tif (get_filter_request_var('tree_id') > 0) {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'gt.id=' . get_request_var('tree_id');\n\t\t\t}\n\t\t} elseif ($report_item['tree_id'] > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'gt.id=' . $report_item['tree_id'];\n\t\t}\n\n\t\t$branches = array_rekey(\n\t\t\tget_allowed_branches($sql_where),\n\t\t\t'id', 'name'\n\t\t);\n\t}\n\n\t$fields_reports_item_edit = array(\n\t\t'item_type' => array(\n\t\t\t'friendly_name' => __('Type'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => REPORTS_ITEM_GRAPH,\n\t\t\t'description' => __('Item Type to be added.'),\n\t\t\t'value' => '|arg1:item_type|',\n\t\t\t'on_change' => 'toggle_item_type()',\n\t\t\t'array' => $item_types\n\t\t),\n\t\t'tree_id' => array(\n\t\t\t'friendly_name' => __('Graph Tree'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => REPORTS_TREE_NONE,\n\t\t\t'none_value' => __('None'),\n\t\t\t'description' => __('Select a Tree to use.'),\n\t\t\t'value' => '|arg1:tree_id|',\n\t\t\t'on_change' => 'applyChange()',\n\t\t\t'array' => $trees\n\t\t),\n\t\t'branch_id' => array(\n\t\t\t'friendly_name' => __('Graph Tree Branch'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => REPORTS_TREE_NONE,\n\t\t\t'none_value' => __('All'),\n\t\t\t'description' => __('Select a Tree Branch to use.'),\n\t\t\t'value' => '|arg1:branch_id|',\n\t\t\t'on_change' => 'applyChange()',\n\t\t\t'array' => $branches\n\t\t),\n\t\t'tree_cascade' => array(\n\t\t\t'friendly_name' => __('Cascade to Branches'),\n\t\t\t'method' => 'checkbox',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Should all children branch Graphs be rendered?'),\n\t\t\t'value' => '|arg1:tree_cascade|'\n\t\t),\n\t\t'graph_name_regexp' => array(\n\t\t\t'friendly_name' => __('Graph Name Regular Expression'),\n\t\t\t'method' => 'textbox',\n\t\t\t'default' => '',\n\t\t\t'description' => __('A Perl compatible regular expression (REGEXP) used to select graphs to include from the tree.'),\n\t\t\t'max_length' => 255,\n\t\t\t'size' => 80,\n\t\t\t'value' => '|arg1:graph_name_regexp|'\n\t\t),\n\t\t'host_template_id' => array(\n\t\t\t'friendly_name' => __('Device Template'),\n\t\t\t'method' => 'drop_sql',\n\t\t\t'default' => REPORTS_HOST_NONE,\n\t\t\t'none_value' => __('None'),\n\t\t\t'description' => __('Select a Device Template to use.'),\n\t\t\t'value' => '|arg1:host_template_id|',\n\t\t\t'on_change' => 'applyChange()',\n\t\t\t'sql' => \"SELECT DISTINCT ht.id, ht.name FROM host_template AS ht INNER JOIN host AS h ON h.host_template_id=ht.id ORDER BY name\"\n\t\t),\n\t\t'host_id' => array(\n\t\t\t'friendly_name' => __('Device'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => REPORTS_HOST_NONE,\n\t\t\t'description' => __('Select a Device to specify a Graph'),\n\t\t\t'value' => '|arg1:host_id|',\n\t\t\t'none_value' => __('None'),\n\t\t\t'on_change' => 'applyChange()',\n\t\t\t'array' => $hosts\n\t\t),\n\t\t'graph_template_id' => array(\n\t\t\t'friendly_name' => __('Graph Template'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => '0',\n\t\t\t'description' => __('Select a Graph Template for the host'),\n\t\t\t'none_value' => __('None'),\n\t\t\t'on_change' => 'applyChange()',\n\t\t\t'value' => '|arg1:graph_template_id|',\n\t\t\t'array' => $graph_templates\n\t\t),\n\t\t'local_graph_id' => array(\n\t\t\t'friendly_name' => __('Graph Name'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => '0',\n\t\t\t'description' => __('The Graph to use for this report item.'),\n\t\t\t'none_value' => __('None'),\n\t\t\t'on_change' => 'graphImage(this.value)',\n\t\t\t'value' => '|arg1:local_graph_id|',\n\t\t\t'array' => $graphs\n\t\t),\n\t\t'timespan' => array(\n\t\t\t'friendly_name' => __('Graph Timespan'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => GT_LAST_DAY,\n\t\t\t'description' => __('The Graph End time will be set to the scheduled report send time.  So, if you wish the end time on the various Graphs to be midnight, ensure you send the report at midnight.  The Graph Start time will be the End Time minus the Graph Timespan.'),\n\t\t\t'array' => $graph_timespans,\n\t\t\t'value' => '|arg1:timespan|'\n\t\t),\n\t\t'align' => array(\n\t\t\t'friendly_name' => __('Alignment'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => REPORTS_ALIGN_LEFT,\n\t\t\t'description' => __('Alignment of the Item'),\n\t\t\t'value' => '|arg1:align|',\n\t\t\t'array' => $alignment\n\t\t),\n\t\t'item_text' => array(\n\t\t\t'friendly_name' => __('Fixed Text'),\n\t\t\t'method' => 'textbox',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Enter descriptive Text'),\n\t\t\t'max_length' => 255,\n\t\t\t'value' => '|arg1:item_text|'\n\t\t),\n\t\t'font_size' => array(\n\t\t\t'friendly_name' => __('Font Size'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => REPORTS_FONT_SIZE,\n\t\t\t'array' => array(7 => 7, 8 => 8, 10 => 10, 12 => 12, 14 => 14, 16 => 16, 18 => 18, 20 => 20, 24 => 24, 28 => 28, 32 => 32),\n\t\t\t'description' => __('Font Size of the Item'),\n\t\t\t'value' => '|arg1:font_size|'\n\t\t),\n\t\t'sequence' => array(\n\t\t\t'method' => 'view',\n\t\t\t'friendly_name' => __('Sequence'),\n\t\t\t'description' => __('Sequence of Item.'),\n\t\t\t'value' => '|arg1:sequence|'\n\t\t),\n\t);\n\n\t# fetch the current report record\n\t$report = db_fetch_row_prepared('SELECT * FROM reports WHERE id = ?', array(get_filter_request_var('id')));\n\n\t# if an existing item was requested, fetch data for it\n\tif (isset_request_var('item_id') && (get_filter_request_var('item_id') > 0)) {\n\t\t$reports_item = db_fetch_row_prepared('SELECT * FROM reports_items WHERE id = ?', array(get_request_var('item_id')));\n\n\t\t$header_label = __('Report Item [edit Report: %s]', $report['name']);\n\t} else {\n\t\t$header_label = __('Report Item [new Report: %s]', $report['name']);\n\t\t$reports_item = array();\n\t\t$reports_item['report_id'] = get_request_var('id');\n\t\t$reports_item['sequence']  = get_sequence('', 'sequence', 'reports_items', 'report_id=' . get_request_var('id'));\n\t\t$reports_item['host_id']   = REPORTS_HOST_NONE;\n\t}\n\n\t// if a different item_type was selected, use it\n\tif (isset_request_var('item_type')) {\n\t\tif (get_filter_request_var('item_type') > 0) {\n\t\t\t$reports_item['item_type'] = get_request_var('item_type');\n\t\t}\n\t}\n\n\t$reports_item = set_reports_item_var($reports_item, 'host_id');\n\t$reports_item = set_reports_item_var($reports_item, 'branch_id');\n\t$reports_item = set_reports_item_var($reports_item, 'tree_id');\n\t$reports_item = set_reports_item_var($reports_item, 'host_template_id');\n\t$reports_item = set_reports_item_var($reports_item, 'graph_template_id');\n\n\tif ($reports_item['tree_id'] == 0) {\n\t\t$reports_item['branch_id'] = 0;\n\t}\n\n\tload_current_session_value('host_template_id', 'sess_reports_edit_host_template_id', 0);\n\tload_current_session_value('host_id', 'sess_reports_edit_host_id', 0);\n\tload_current_session_value('tree_id', 'sess_reports_edit_tree_id', 0);\n\n\t/* set the default item alignment */\n\t$fields_reports_item_edit['align']['default'] = $report['alignment'];\n\n\t/* set the default item alignment */\n\t$fields_reports_item_edit['font_size']['default'] = $report['font_size'];\n\n\tform_start(get_current_page(), 'chk');\n\n\t# ready for displaying the fields\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_reports_item_edit, (isset($reports_item) ? $reports_item : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('id', (isset($reports_item['id']) ? $reports_item['id'] : '0'), '');\n\tform_hidden_box('report_id', (isset($reports_item['report_id']) ? $reports_item['report_id'] : '0'), '');\n\tform_hidden_box('save_component_report_item', '1', '');\n\n\techo \"<table id='graphdiv' style='text-align:center;width:100%;display:none;'><tr><td class='center' id='graph'></td></tr></table>\";\n\n\tform_save_button(get_reports_page() . '?action=edit&tab=items&id=' . get_request_var('id'), 'return');\n\n\tif (isset($item['item_type']) && $item['item_type'] == REPORTS_ITEM_GRAPH) {\n\t\t$timespan = array();\n\t\t# get config option for first-day-of-the-week\n\t\t$first_weekdayid = read_user_setting('first_weekdayid');\n\t\t# get start/end time-since-epoch for actual time (now()) and given current-session-timespan\n\t\tget_timespan($timespan, time(), $item['timespan'], $first_weekdayid);\n\t}\n\n\t/* don't cache previews */\n\t$_SESSION['custom'] = 'true';\n\n\t?>\n\t<script type='text/javascript'>\n\n\tuseCss=<?php print ($report['cformat'] == 'on' ? 'true':'false');?>;\n\n\tfunction toggle_item_type() {\n\t\t//console.log($('#item_type').val());\n\t\t// right bracket ')' does not come with a field\n\t\tif ($('#item_type').val() == '<?php print REPORTS_ITEM_GRAPH;?>') {\n\t\t\t$('#row_align').show();\n\t\t\t$('#row_tree_id').hide();\n\t\t\t$('#row_branch_id').hide();\n\t\t\t$('#row_tree_cascade').hide();\n\t\t\t$('#row_graph_name_regexp').hide();\n\t\t\t$('#row_host_template_id').show();\n\t\t\t$('#row_host_id').show();\n\t\t\t$('#row_graph_template_id').show();\n\t\t\t$('#row_local_graph_id').show();\n\t\t\t$('#row_timespan').show();\n\t\t\t$('#item_text').val('');\n\t\t\t$('#row_item_text').hide();\n\t\t\t$('#row_font_size').hide();\n\t\t} else if ($('#item_type').val() == '<?php print REPORTS_ITEM_TEXT;?>') {\n\t\t\t$('#row_align').show();\n\t\t\t$('#row_tree_id').hide();\n\t\t\t$('#row_branch_id').hide();\n\t\t\t$('#row_tree_cascade').hide();\n\t\t\t$('#row_graph_name_regexp').hide();\n\t\t\t$('#row_host_template_id').hide();\n\t\t\t$('#row_host_id').hide();\n\t\t\t$('#row_graph_template_id').hide();\n\t\t\t$('#row_local_graph_id').hide();\n\t\t\t$('#row_timespan').hide();\n\t\t\t$('#row_item_text').show();\n\t\t\tif (useCss) {\n\t\t\t\t$('#row_font_size').hide();\n\t\t\t} else {\n\t\t\t\t$('#row_font_size').show();\n\t\t\t}\n\t\t} else if ($('#item_type').val() == '<?php print REPORTS_ITEM_TREE;?>') {\n\t\t\t$('#row_align').show();\n\t\t\t$('#row_tree_id').show();\n\t\t\t$('#row_branch_id').show();\n\t\t\t$('#row_tree_cascade').show();\n\t\t\t$('#row_graph_name_regexp').show();\n\t\t\t$('#row_host_template_id').hide();\n\t\t\t$('#row_host_id').hide();\n\t\t\t$('#row_graph_template_id').hide();\n\t\t\t$('#row_local_graph_id').hide();\n\t\t\t$('#row_timespan').show();\n\t\t\t$('#row_item_text').hide();\n\t\t\tif (useCss) {\n\t\t\t\t$('#row_font_size').hide();\n\t\t\t} else {\n\t\t\t\t$('#row_font_size').show();\n\t\t\t}\n\t\t} else {\n\t\t\t$('#row_tree_id').hide();\n\t\t\t$('#row_branch_id').hide();\n\t\t\t$('#row_tree_cascade').hide();\n\t\t\t$('#row_graph_name_regexp').hide();\n\t\t\t$('#row_host_template_id').hide();\n\t\t\t$('#row_host_id').hide();\n\t\t\t$('#row_graph_template_id').hide();\n\t\t\t$('#row_local_graph_id').hide();\n\t\t\t$('#row_timespan').hide();\n\t\t\t$('#row_item_text').hide();\n\t\t\t$('#row_font_size').hide();\n\t\t\t$('#row_align').hide();\n\t\t}\n\t}\n\n\tfunction applyChange() {\n\t\tstrURL  = '?action=item_edit&header=false'\n\t\tstrURL += '&id=' + $('#report_id').val();\n\t\tstrURL += '&item_id=' + $('#id').val();\n\t\tstrURL += '&item_type=' + $('#item_type').val();\n\t\tstrURL += '&tree_id=' + $('#tree_id').val();\n\t\tstrURL += '&branch_id=' + $('#branch_id').val();\n\t\tstrURL += '&host_template_id=' + $('#host_template_id').val();\n\t\tstrURL += '&host_id=' + $('#host_id').val();\n\t\tstrURL += '&graph_template_id=' + $('#graph_template_id').val();\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction graphImage(graphId) {\n\t\tif (graphId > 0) {\n\t\t\t$('#graphdiv').show();\n\t\t\t$('#graph').html(\"<img class='center' src='<?php print $config['url_path'];?>graph_image.php\"+\n\t\t\t\t\t\"?local_graph_id=\"+graphId+\n\t\t\t\t\t\"&image_format=png\"+\n\t\t\t\t\t\"<?php print (($report['graph_width'] > 0) ? '&graph_width=' . $report['graph_width']:'');?>\"+\n\t\t\t\t\t\"<?php print (($report['graph_height'] > 0) ? '&graph_height=' . $report['graph_height']:'');?>\"+\n\t\t\t\t\t\"<?php print (($report['thumbnails'] == 'on') ? '&graph_nolegend=true':'');?>\"+\n\t\t\t\t\t\"<?php print ((isset($timespan['begin_now'])) ? '&graph_start=' . $timespan['begin_now']:'');?>\"+\n\t\t\t\t\t\"<?php print ((isset($timespan['end_now'])) ? '&graph_end=' . $timespan['end_now']:'');?>\"+\n\t\t\t\t\t\"&rra_id=0'>\");\n\t\t} else {\n\t\t\t$('#graphdiv').hide();\n\t\t\t$('#graph').html('');\n\t\t}\n\t}\n\n\t$(function() {\n\t\t$('#item_type').change(function() {\n\t\t\ttoggle_item_type();\n\t\t\tapplyChange();\n\t\t});\n\n\t\ttoggle_item_type();\n\n\t\tif ($('#item_type').val() == 1) {\n\t\t\tgraphImage($('#local_graph_id').val());\n\t\t}\n\t});\n\t</script>\n\t<?php\n}\n\n\n/* ---------------------\n Report Functions\n --------------------- */\n\nfunction reports_edit() {\n\tglobal $config, $attach_types, $alignment, $reports_interval;\n\n\t/* get the format files */\n\t$formats = reports_get_format_files();\n\n\t$fields_reports_edit = array(\n\t\t'genhead' => array(\n\t\t\t'friendly_name' => __('General Settings'),\n\t\t\t'method' => 'spacer',\n\t\t\t'collapsible' => 'true'\n\t\t\t),\n\t\t'name' => array(\n\t\t\t'friendly_name' => __('Report Name'),\n\t\t\t'method' => 'textbox',\n\t\t\t'default' => __('New Report'),\n\t\t\t'description' => __('Give this Report a descriptive Name'),\n\t\t\t'max_length' => 99,\n\t\t\t'value' => '|arg1:name|'\n\t\t\t),\n\t\t'enabled' => array(\n\t\t\t'friendly_name' => __('Enable Report'),\n\t\t\t'method' => 'checkbox',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Check this box to enable this Report.'),\n\t\t\t'value' => '|arg1:enabled|',\n\t\t\t'form_id' => false\n\t\t\t),\n\t\t'formathead' => array(\n\t\t\t'friendly_name' => __('Output Formatting'),\n\t\t\t'method' => 'spacer',\n\t\t\t'collapsible' => 'true'\n\t\t\t),\n\t\t'cformat' => array(\n\t\t\t'friendly_name' => __('Use Custom Format HTML'),\n\t\t\t'method' => 'checkbox',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Check this box if you want to use custom html and CSS for the report.'),\n\t\t\t'value' => '|arg1:cformat|',\n\t\t\t'form_id' => false\n\t\t\t),\n\t\t'format_file' => array(\n\t\t\t'friendly_name' => __('Format File to Use'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => 'default.format',\n\t\t\t'description' => __('Choose the custom html wrapper and CSS file to use.  This file contains both html and CSS to wrap around your report.  If it contains more than simply CSS, you need to place a special <REPORT> tag inside of the file.  This format tag will be replaced by the report content.  These files are located in the \\'formats\\' directory.'),\n\t\t\t'value' => '|arg1:format_file|',\n\t\t\t'array' => $formats\n\t\t\t),\n\t\t'font_size' => array(\n\t\t\t'friendly_name' => __('Default Text Font Size'),\n\t\t\t'description' => __('Defines the default font size for all text in the report including the Report Title.'),\n\t\t\t'default' => 16,\n\t\t\t'method' => 'drop_array',\n\t\t\t'array' => array(7 => 7, 8 => 8, 10 => 10, 12 => 12, 14 => 14, 16 => 16, 18 => 18, 20 => 20, 24 => 24, 28 => 28, 32 => 32),\n\t\t\t'value' => '|arg1:font_size|'\n\t\t\t),\n\t\t'alignment' => array(\n\t\t\t'friendly_name' => __('Default Object Alignment'),\n\t\t\t'description' => __('Defines the default Alignment for Text and Graphs.'),\n\t\t\t'default' => 0,\n\t\t\t'method' => 'drop_array',\n\t\t\t'array' => $alignment,\n\t\t\t'value' => '|arg1:alignment|'\n\t\t\t),\n\t\t'graph_linked' => array(\n\t\t\t'friendly_name' => __('Graph Linked'),\n\t\t\t'method' => 'checkbox',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Should the Graphs be linked back to the Cacti site?'),\n\t\t\t'value' => '|arg1:graph_linked|'\n\t\t\t),\n\t\t'graphhead' => array(\n\t\t\t'friendly_name' => __('Graph Settings'),\n\t\t\t'method' => 'spacer',\n\t\t\t'collapsible' => 'true'\n\t\t\t),\n\t\t'graph_columns' => array(\n\t\t\t'friendly_name' => __('Graph Columns'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => '1',\n\t\t\t'array' => array(1 => 1, 2, 3, 4, 5),\n\t\t\t'description' => __('The number of Graph columns.'),\n\t\t\t'value' => '|arg1:graph_columns|'\n\t\t\t),\n\t\t'graph_width' => array(\n\t\t\t'friendly_name' => __('Graph Width'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => '300',\n\t\t\t'array' => array(100 => 100, 150 => 150, 200 => 200, 250 => 250, 300 => 300, 350 => 350, 400 => 400, 500 => 500, 600 => 600, 700 => 700, 800 => 800, 900 => 900, 1000 => 1000),\n\t\t\t'description' => __('The Graph width in pixels.'),\n\t\t\t'value' => '|arg1:graph_width|'\n\t\t\t),\n\t\t'graph_height' => array(\n\t\t\t'friendly_name' => __('Graph Height'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => '125',\n\t\t\t'array' => array(75 => 75, 100 => 100, 125 => 125, 150 => 150, 175 => 175, 200 => 200, 250 => 250, 300 => 300),\n\t\t\t'description' => __('The Graph height in pixels.'),\n\t\t\t'value' => '|arg1:graph_height|'\n\t\t\t),\n\t\t'thumbnails' => array(\n\t\t\t'friendly_name' => __('Thumbnails'),\n\t\t\t'method' => 'checkbox',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Should the Graphs be rendered as Thumbnails?'),\n\t\t\t'value' => '|arg1:thumbnails|'\n\t\t\t),\n\t\t'freqhead' => array(\n\t\t\t'friendly_name' => __('Email Frequency'),\n\t\t\t'method' => 'spacer',\n\t\t\t'collapsible' => 'true'\n\t\t\t),\n\t\t'mailtime' => array(\n\t\t\t'friendly_name' => __('Next Timestamp for Sending Mail Report'),\n\t\t\t'description' => __('Start time for [first|next] mail to take place. All future mailing times will be based upon this start time. A good example would be 2:00am. The time must be in the future.  If a fractional time is used, say 2:00am, it is assumed to be in the future.'),\n\t\t\t'default' => 0,\n\t\t\t'method' => 'textbox',\n\t\t\t'size' => 20,\n\t\t\t'max_length' => 20,\n\t\t\t'value' => '|arg1:mailtime|'\n\t\t\t),\n\t\t'intrvl' => array(\n\t\t\t'friendly_name' => __('Report Interval'),\n\t\t\t'description' => __('Defines a Report Frequency relative to the given Mailtime above.') . '<br>' .\n\t\t\t\t__('e.g. \\'Week(s)\\' represents a weekly Reporting Interval.'),\n\t\t\t'default' => REPORTS_SCHED_INTVL_DAY,\n\t\t\t'method' => 'drop_array',\n\t\t\t'array' => $reports_interval,\n\t\t\t'value' => '|arg1:intrvl|'\n\t\t\t),\n\t\t'count' => array(\n\t\t\t'friendly_name' => __('Interval Frequency'),\n\t\t\t'description' => __('Based upon the Timespan of the Report Interval above, defines the Frequency within that Interval.') . '<br>' .\n\t\t\t\t__('e.g. If the Report Interval is \\'Month(s)\\', then \\'2\\' indicates Every \\'2 Month(s) from the next Mailtime.\\' Lastly, if using the Month(s) Report Intervals, the \\'Day of Week\\' and the \\'Day of Month\\' are both calculated based upon the Mailtime you specify above.'),\n\t\t\t'default' => REPORTS_SCHED_COUNT,\n\t\t\t'method' => 'textbox',\n\t\t\t'size' => 10,\n\t\t\t'max_length' => 10,\n\t\t\t'value' => '|arg1:count|'\n\t\t\t),\n\t\t'emailhead' => array(\n\t\t\t'friendly_name' => __('Email Sender/Receiver Details'),\n\t\t\t'method' => 'spacer',\n\t\t\t'collapsible' => 'true'\n\t\t\t),\n\t\t'subject' => array(\n\t\t\t'friendly_name' => __('Subject'),\n\t\t\t'method' => 'textbox',\n\t\t\t'default' => __('Cacti Report'),\n\t\t\t'description' => __('This value will be used as the default Email subject.  The report name will be used if left blank.'),\n\t\t\t'max_length' => 255,\n\t\t\t'value' => '|arg1:subject|'\n\t\t\t),\n\t\t'from_name' => array(\n\t\t\t'friendly_name' => __('From Name'),\n\t\t\t'method' => 'textbox',\n\t\t\t'default' => read_config_option('settings_from_name'),\n\t\t\t'description' => __('This Name will be used as the default E-mail Sender'),\n\t\t\t'max_length' => 255,\n\t\t\t'value' => '|arg1:from_name|'\n\t\t\t),\n\t\t'from_email' => array(\n\t\t\t'friendly_name' => __('From Email Address'),\n\t\t\t'method' => 'textbox',\n\t\t\t'default' => read_config_option('settings_from_email'),\n\t\t\t'description' => __('This Address will be used as the E-mail Senders address'),\n\t\t\t'max_length' => 255,\n\t\t\t'value' => '|arg1:from_email|'\n\t\t\t),\n\t\t'email' => array(\n\t\t\t'friendly_name' => __('To Email Address(es)'),\n\t\t\t'method' => 'textarea',\n\t\t\t'textarea_rows' => '5',\n\t\t\t'textarea_cols' => '60',\n\t\t\t'class' => 'textAreaNotes',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Please separate multiple addresses by comma (,)'),\n\t\t\t'max_length' => 255,\n\t\t\t'value' => '|arg1:email|'\n\t\t\t),\n\t\t'bcc' => array(\n\t\t\t'friendly_name' => __('BCC Address(es)'),\n\t\t\t'method' => 'textarea',\n\t\t\t'textarea_rows' => '5',\n\t\t\t'textarea_cols' => '60',\n\t\t\t'class' => 'textAreaNotes',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Blind carbon copy. Please separate multiple addresses by comma (,)'),\n\t\t\t'max_length' => 255,\n\t\t\t'value' => '|arg1:bcc|'\n\t\t\t),\n\t\t'attachment_type' => array(\n\t\t\t'friendly_name' => __('Image attach type'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => read_config_option('reports_default_image_format'),\n\t\t\t'description' => __('Select one of the given Types for the Image Attachments'),\n\t\t\t'value' => '|arg1:attachment_type|',\n\t\t\t'array' => $attach_types\n\t\t\t),\n\t);\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'name' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'tab' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'details',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_reports');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* display the report */\n\t$report = array();\n\tif (get_filter_request_var('id') > 0) {\n\t\t$report = db_fetch_row_prepared('SELECT * FROM reports WHERE id = ?', array(get_request_var('id')));\n\t\t# reformat mailtime to human readable format\n\t\t$report['mailtime'] = date(reports_date_time_format(), $report['mailtime']);\n\t\t# setup header\n\t\t$header_label = __('[edit: %s]', html_escape($report['name']));\n\t\t$tabs = array('details' => __('Details'), 'items' => __('Items'), 'preview' => __('Preview'), 'events' => __('Events'));\n\t} else {\n\t\t$header_label = __('[new]');\n\t\t# initialize mailtime with current timestamp\n\t\t$report['mailtime'] = date(reports_date_time_format(), floor(time() / read_config_option('poller_interval')) * read_config_option('poller_interval'));\n\t\t$tabs = array('details' => __('Details'));\n\t}\n\t/* if there was an error on the form, display the date in the correct format */\n\tif (isset($_SESSION['sess_field_values']['mailtime'])) {\n\t\t$_SESSION['sess_field_values']['mailtime'] = date(reports_date_time_format(), $_SESSION['sess_field_values']['mailtime']);\n\t}\n\n\t/* set the default settings category */\n\tif (!isset_request_var('tab')) set_request_var('tab', 'details');\n\t$current_tab = get_request_var('tab');\n\n\tif (cacti_sizeof($tabs) && isset_request_var('id')) {\n\t\t$i = 0;\n\n\t\t/* draw the tabs */\n\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\\n\";\n\n\t\tforeach (array_keys($tabs) as $tab_short_name) {\n\t\t\tprint \"<li class='subTab'><a class='tab\" . (($tab_short_name == $current_tab) ? \" selected'\" : \"'\") .\n\t\t\t\t\" href='\" . html_escape($config['url_path'] .\n\t\t\t\tget_reports_page() . '?action=edit&id=' . get_request_var('id') .\n\t\t\t\t'&tab=' . $tab_short_name) .\n\t\t\t\t\"'>\" . $tabs[$tab_short_name] . \"</a></li>\\n\";\n\n\t\t\t$i++;\n\t\t}\n\n\n\t\tif (!isempty_request_var('id')) {\n\t\t\tprint \"<li style='float:right;position:relative;'><a class='tab' href='\" . html_escape(get_reports_page() . '?action=send&id=' . get_request_var('id') . '&tab=' . get_request_var('tab')) . \"'>\" . __('Send Report') . \"</a></li>\\n\";\n\t\t}\n\n\t\tprint \"</ul></nav></div>\\n\";\n\t}\n\n\tswitch(get_request_var('tab')) {\n\tcase 'details':\n\t\tform_start(get_reports_page());\n\n\t\thtml_start_box(__('Details') . \" $header_label\", '100%', true, '3', 'center', '');\n\n\t\tdraw_edit_form(array(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_reports_edit, $report)\n\t\t));\n\n\t\thtml_end_box(true, true);\n\n\t\tform_hidden_box('id', (isset($report['id']) ? $report['id'] : '0'), '');\n\t\tform_hidden_box('save_component_report', '1', '');\n\n\t\t?>\n\t\t<script type='text/javascript'>\n\t\tfunction changeFormat() {\n\t\t\tif (cformat && cformat.checked) {\n\t\t\t\t$('#row_font_size').hide();\n\t\t\t\t$('#row_format_file').show();\n\t\t\t} else {\n\t\t\t\t$('#row_font_size').show();\n\t\t\t\t$('#row_format_file').hide();\n\t\t\t}\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#mailtime').datetimepicker({\n\t\t\t\tminuteGrid: 10,\n\t\t\t\tstepMinute: 1,\n\t\t\t\tshowAnim: 'slideDown',\n\t\t\t\tnumberOfMonths: 1,\n\t\t\t\ttimeFormat: 'HH:mm',\n\t\t\t\tdateFormat: 'yy-mm-dd'\n\t\t\t});\n\n\t\t\t$('#cformat').click(function() {\n\t\t\t\tchangeFormat();\n\t\t\t});\n\n\t\t\tchangeFormat();\n\t\t});\n\t\t</script>\n\t\t<?php\n\n\t\tform_save_button(get_reports_page(), 'return');\n\n\t\tbreak;\n\tcase 'items':\n\t\thtml_start_box(__('Items') . \" $header_label\", '100%', '', '3', 'center', get_reports_page() . '?action=item_edit&id=' . get_request_var('id'));\n\n\t\t/* display the items */\n\t\tif (!empty($report['id'])) {\n\t\t\tdisplay_reports_items($report['id']);\n\t\t}\n\n\t\thtml_end_box();\n\n\t\tif (!empty($report['id'])) {\n\t\t\t?>\n\t\t\t<script type='text/javascript'>\n\t\t\t$('#reports_admin_items1').find('.cactiTable').attr('id', 'report_item');\n\t\t\treportsPage = '<?php print get_reports_page();?>';\n\t\t\treportId    = <?php print $report['id'];?>;\n\t\t\t$(function() {\n\t\t\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n\t\t\t\t$('#report_item').tableDnD({\n\t\t\t\t\tonDrop: function(table, row) {\n\t\t\t\t\t\tloadPageNoHeader(reportsPage+'?action=ajax_dnd&id='+reportId+'&'+$.tableDnD.serialize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t<?php } ?>\n\t\t\t});\n\t\t\t</script>\n\t\t\t<?php\n\t\t}\n\n\t\tbreak;\n\tcase 'events':\n\t\tif (($timestamp = strtotime($report['mailtime'])) === false) {\n\t\t\t$timestamp = time();\n\t\t}\n\t\t$poller_interval = read_config_option('poller_interval');\n\t\tif ($poller_interval == '') $poller_interval = 300;\n\n\t\t$timestamp   = floor($timestamp / $poller_interval) * $poller_interval;\n\t\t$next        = reports_interval_start($report['intrvl'], $report['count'], $report['offset'], $timestamp);\n\t\t$date_format = reports_date_time_format() . ' - l';\n\n\t\thtml_start_box(__('Scheduled Events') . \" $header_label\", '100%', '', '3', 'center', '');\n\t\tfor ($i=0; $i<14; $i++) {\n\t\t\tform_alternate_row('line' . $i, true);\n\t\t\tform_selectable_cell(date($date_format, $next), $i);\n\t\t\tform_end_row();\n\t\t\t$next = reports_interval_start($report['intrvl'], $report['count'], $report['offset'], $next);\n\t\t}\n\t\thtml_end_box(false);\n\n\t\tbreak;\n\tcase 'preview':\n\t\thtml_start_box(__('Report Preview') . \" $header_label\", '100%', '', '0', 'center', '');\n\t\tprint \"\\t\\t\\t\\t\\t<tr><td>\\n\";\n\t\tprint reports_generate_html($report['id'], REPORTS_OUTPUT_STDOUT);\n\t\tprint \"\\t\\t\\t\\t\\t</td></tr>\\n\";\n\t\thtml_end_box(false);\n\n\t\tbreak;\n\t}\n}\n\n/* display_reports_items\t\tdisplay the list of all items related to a single report\n * @arg $report_id\t\t\t\tid of the report\n */\nfunction display_reports_items($report_id) {\n\tglobal $graph_timespans;\n\tglobal $item_types, $alignment;\n\n\t$items = db_fetch_assoc_prepared('SELECT *\n\t\tFROM reports_items\n\t\tWHERE report_id = ?\n\t\tORDER BY sequence', array($report_id));\n\n\t$css = db_fetch_cell_prepared('SELECT cformat FROM reports WHERE id = ?', array($report_id));\n\n\thtml_header(\n\t\tarray(\n\t\t\tarray('display' => __('Item'),         'align' => 'left'),\n\t\t\tarray('display' => __('Sequence'),     'align' => 'left'),\n\t\t\tarray('display' => __('Type'),         'align' => 'left'),\n\t\t\tarray('display' => __('Item Details'), 'align' => 'left'),\n\t\t\tarray('display' => __('Timespan'),     'align' => 'left'),\n\t\t\tarray('display' => __('Alignment'),    'align' => 'left'),\n\t\t\tarray('display' => __('Font Size'),    'align' => 'left'),\n\t\t\tarray('display' => __('Actions'),      'align' => 'right')\n\t\t), 2);\n\n\t$i = 1;\n\tif (cacti_sizeof($items)) {\n\t\tforeach ($items as $item) {\n\t\t\tswitch ($item['item_type']) {\n\t\t\tcase REPORTS_ITEM_GRAPH:\n\t\t\t\t$item_details = get_graph_title($item['local_graph_id']);\n\t\t\t\t$align = ($item['align'] > 0 ? $alignment[$item['align']] : '');\n\t\t\t\t$size = '';\n\t\t\t\t$timespan = ($item['timespan'] > 0 ? $graph_timespans[$item['timespan']] : '');\n\t\t\t\tbreak;\n\t\t\tcase REPORTS_ITEM_TEXT:\n\t\t\t\t$item_details = $item['item_text'];\n\t\t\t\t$align = ($item['align'] > 0 ? $alignment[$item['align']] : '');\n\t\t\t\t$size = ($item['font_size'] > 0 ? $item['font_size'] : '');\n\t\t\t\t$timespan = '';\n\t\t\t\tbreak;\n\t\t\tcase REPORTS_ITEM_TREE:\n\t\t\t\tif ($item['branch_id'] > 0) {\n\t\t\t\t\t$branch_details = db_fetch_row_prepared('SELECT * FROM graph_tree_items WHERE id = ?', array($item['branch_id']));\n\t\t\t\t} else {\n\t\t\t\t\t$branch_details = array();\n\t\t\t\t}\n\n\t\t\t\t$tree_name = db_fetch_cell_prepared('SELECT name FROM graph_tree WHERE id = ?', array($item['tree_id']));\n\n\t\t\t\t$item_details = 'Tree: ' . $tree_name;\n\t\t\t\tif ($item['branch_id'] > 0) {\n\t\t\t\t\tif ($branch_details['host_id'] > 0) {\n\t\t\t\t\t\t$item_details .= ', Device: ' . db_fetch_cell_prepared('SELECT description FROM host WHERE id = ?', array($branch_details['host_id']));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$item_details .= ', Branch: ' . $branch_details['title'];\n\n\t\t\t\t\t\tif ($item['tree_cascade'] == 'on') {\n\t\t\t\t\t\t\t$item_details .= ' ' . __('(All Branches)');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$item_details .= ' ' . __('(Current Branch)');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$align = ($item['align'] > 0 ? $alignment[$item['align']] : '');\n\t\t\t\t$size = ($item['font_size'] > 0 ? $item['font_size'] : '');\n\t\t\t\t$timespan = ($item['timespan'] > 0 ? $graph_timespans[$item['timespan']] : '');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$item_details = '';\n\t\t\t\t$align = '';\n\t\t\t\t$size = '';\n\t\t\t\t$timespan = '';\n\t\t\t}\n\n\t\t\tif ($css == 'on') {\n\t\t\t\t$size = '';\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $item['id'], false);\n\t\t\t$form_data = '<td><a class=\"linkEditMain\" href=\"' . html_escape(get_reports_page() . '?action=item_edit&id=' . $report_id. '&item_id=' . $item['id']) . '\">' . __('Item # %d', $i) . '</a></td>';\n\t\t\t$form_data .= '<td>' . $item['sequence'] . '</td>';\n\t\t\t$form_data .= '<td>' . $item_types[$item['item_type']] . '</td>';\n\t\t\t$form_data .= '<td class=\"nowrap\">' . $item_details . '</td>';\n\t\t\t$form_data .= '<td class=\"nowrap\">' . $timespan . '</td>';\n\t\t\t$form_data .= '<td>' . $align . '</td>';\n\t\t\t$form_data .= '<td>' . $size . '</td>';\n\n\t\t\tif ($i == 1) {\n\t\t\t\t$form_data .= '<td class=\"right nowrap\"><a class=\"remover fa fa-caret-down moveArrow\" title=\"' . __esc('Move Down') . '\" href=\"' . html_escape(get_reports_page() . '?action=item_movedown&item_id=' . $item['id'] . '&id=' . $report_id) . '\"></a>' . '<span class=\"moveArrowNone\"</span></td>';\n\t\t\t} elseif ($i > 1 && $i < cacti_sizeof($items)) {\n\t\t\t\t$form_data .= '<td class=\"right nowrap\"><a class=\"remover fa fa-caret-down moveArrow\" title=\"' . __esc('Move Down') . '\" href=\"' . html_escape(get_reports_page() . '?action=item_movedown&item_id=' . $item['id'] . '&id=' . $report_id) . '\"></a>' . '<a class=\"remover fa fa-caret-up moveArrow\" title=\"' . __esc('Move Up') . '\" href=\"' . html_escape(get_reports_page() . '?action=item_moveup&item_id=' . $item['id'] .\t'&id=' . $report_id) . '\"></a>' . '</td>';\n\t\t\t} else {\n\t\t\t\t$form_data .= '<td class=\"right nowrap\"><span class=\"moveArrowNone\"></span>' . '<a class=\"remover fa fa-caret-up moveArrow\" title=\"' . __esc('Move Up') . '\" href=\"' . html_escape(get_reports_page() . '?action=item_moveup&item_id=' . $item['id'] .\t'&id=' . $report_id) . '\"></a>' . '</td>';\n\t\t\t}\n\n\t\t\t$form_data .= '<td class=\"right\"><a class=\"pic deleteMarker fa fa-times\" href=\"' . html_escape(get_reports_page() . '?action=item_remove&item_id=' . $item['id'] . '&id=' . $report_id) . '\" title=\"' . __esc('Delete') . '\"></a>' . '</td></tr>';\n\t\t\tprint $form_data;\n\n\t\t\t$i++;\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"9\"><em>' . __('No Report Items') . '</em></td></tr>';\n\t}\n}\n\nfunction get_reports_page() {\n\treturn (is_realm_allowed(22) ? 'reports_admin.php' : 'reports_user.php');\n}\n\nfunction is_reports_admin() {\n\treturn (is_realm_allowed(22) ? true:false);\n}\n\nfunction reports() {\n\tglobal $config, $item_rows, $reports_interval;\n\tglobal $reports_actions, $attach_types;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'status' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_reports');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\tif ((!empty($_SESSION['sess_status'])) && (!isempty_request_var('status'))) {\n\t\tif ($_SESSION['sess_status'] != get_request_var('status')) {\n\t\t\tset_request_var('page', '1');\n\t\t}\n\t}\n\n\tform_start(get_reports_page(), 'form_report');\n\n\thtml_start_box(__('Reports [%s]', (is_reports_admin() ? __('Administrator Level'):__('User Level'))), '100%', '', '3', 'center', get_reports_page() . '?action=edit&tab=details');\n\n\tprint \"<tr class='even'>\n\t\t<td>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t\" . __('Search') . \"\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='\" . html_escape_request_var('filter') . \"'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t\" . __('Status') . \"\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='status' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'\" . (get_request_var('status') == '-1' ? ' selected':'') . \">\" . __('Any') . \"</option>\n\t\t\t\t\t\t\t<option value='-2'\" . (get_request_var('status') == '-2' ? ' selected':'') . \">\" . __('Enabled') . \"</option>\n\t\t\t\t\t\t\t<option value='-3'\" . (get_request_var('status') == '-3' ? ' selected':'') . \">\" . __('Disabled') . \"</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t\" . __('Reports') . \"\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'\" . (get_request_var('rows') == '-1' ? ' selected':'') . '>' . __('Default') . '</option>';\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\" .\n\t\t\t\t\t\t\t\t\t\t(get_request_var('rows') == $key ? ' selected':'') . \">$value</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\tprint \"\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input id='refresh' type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Go') . \"' name='go'>\n\t\t\t\t\t\t\t<input id='clear' type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Clear') . \"' name='clear'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box(true);\n\n\tform_end();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (reports.name LIKE '%%\" . get_request_var('filter') . \"%%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('status') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('status') == '-2') {\n\t\t$sql_where .= ($sql_where != '' ? \" AND reports.enabled='on'\" : \" WHERE reports.enabled='on'\");\n\t} elseif (get_request_var('status') == '-3') {\n\t\t$sql_where .= ($sql_where != '' ? \" AND reports.enabled=''\" : \" WHERE reports.enabled=''\");\n\t}\n\n\t/* account for permissions */\n\tif (is_reports_admin()) {\n\t\t$sql_join = 'LEFT JOIN user_auth ON user_auth.id=reports.user_id';\n\t} else {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' user_auth.id=' . $_SESSION['sess_user_id'];\n\t\t$sql_join = 'INNER JOIN user_auth ON user_auth.id=reports.user_id';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(reports.id)\n\t\tFROM reports\n\t\t$sql_join\n\t\t$sql_where\");\n\n\t$reports_list = db_fetch_assoc(\"SELECT\n\t\tuser_auth.full_name,\n\t\treports.*,\n\t\tCONCAT_WS('', intrvl, ' ', count, ' ', offset, '') AS cint\n\t\tFROM reports\n\t\t$sql_join\n\t\t$sql_where\n\t\tORDER BY \" .\n\t\tget_request_var('sort_column') . ' ' .\n\t\tget_request_var('sort_direction') .\n\t\t' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows);\n\n\tform_start(get_reports_page(), 'chk');\n\n\t$nav = html_nav_bar(get_reports_page() . 'filter=' . get_request_var('filter') . '&host_id=' . get_request_var('host_id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 10, __('Reports'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\tif (is_reports_admin()) {\n\t\t$display_text = array(\n\t\t\t'name'            => array('display' => __('Report Name'), 'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'full_name'       => array('display' => __('Owner'),       'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'cint'            => array('display' => __('Frequency'),   'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'lastsent'        => array('display' => __('Last Run'),    'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'mailtime'        => array('display' => __('Next Run'),    'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'from_name'       => array('display' => __('From'),        'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'nosort'          => array('display' => __('To'),          'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'attachment_type' => array('display' => __('Type'),        'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'enabled'         => array('display' => __('Enabled'),     'align' => 'left', 'sort' => 'ASC'),\n\t\t);\n\t} else {\n\t\t$display_text = array(\n\t\t\t'name'            => array('display' => __('Report Title'), 'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'cint'            => array('display' => __('Frequency'),    'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'lastsent'        => array('display' => __('Last Run'),     'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'mailtime'        => array('display' => __('Next Run'),     'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'from_name'       => array('display' => __('From'),         'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'nosort'          => array('display' => __('To'),           'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'attachment_type' => array('display' => __('Type'),         'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'enabled'         => array('display' => __('Enabled'),      'align' => 'left', 'sort' => 'ASC'),\n\t\t);\n\t}\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($reports_list)) {\n\t\t$date_format = reports_date_time_format();\n\n\t\tforeach ($reports_list as $report) {\n\t\t\tif (!reports_html_account_exists($report['user_id'])) {\n\t\t\t\treports_html_report_disable($report['id']);\n\t\t\t\t$report['enabled'] = '';\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $report['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($report['name'], get_request_var('filter'), get_reports_page() . '?action=edit&tab=details&id=' . $report['id'] . '&page=1'), $report['id']);\n\n\t\t\tif (is_reports_admin()) {\n\t\t\t\tif (reports_html_account_exists($report['user_id'])) {\n\t\t\t\t\tform_selectable_cell($report['full_name'], $report['id']);\n\t\t\t\t} else {\n\t\t\t\t\tform_selectable_cell(__('Report Disabled - No Owner'), $report['id']);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$interval = __('Every') . ' ' . $report['count'] . ' ' . $reports_interval[$report['intrvl']];\n\n\t\t\tform_selectable_cell($interval, $report['id']);\n\t\t\tform_selectable_cell(($report['lastsent'] == 0) ? __('Never') : date($date_format, $report['lastsent']), $report['lastsent']);\n\t\t\tform_selectable_cell(date($date_format, $report['mailtime']), $report['id']);\n\t\t\tform_selectable_cell($report['from_name'], $report['id']);\n\t\t\tform_selectable_cell((substr_count($report['email'], ',') ? __('Multiple'): $report['email']), $report['id']);\n\t\t\tform_selectable_cell((isset($attach_types[$report['attachment_type']])) ? $attach_types[$report['attachment_type']] : __('Invalid'), $report['id']);\n\t\t\tform_selectable_cell($report['enabled'] ? __('Enabled'): __('Disabled'), $report['id']);\n\t\t\tform_checkbox_cell($report['name'], $report['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='\" . (cacti_sizeof($display_text)+1) . \"'><em>\" . __('No Reports Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($reports_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($reports_actions);\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction applyFilter() {\n\t\tstrURL  = '<?php print get_reports_page();?>?header=false&status=' + $('#status').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = '<?php print get_reports_page();?>?header=false&clear=1';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_report').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction reports_html_account_exists($user_id) {\n\treturn db_fetch_cell_prepared('SELECT id FROM user_auth WHERE id = ?', array($user_id));\n}\n\nfunction reports_html_report_disable($report_id) {\n\tdb_execute_prepared('UPDATE reports SET enabled=\"\" WHERE id = ?', array($report_id));\n}\n\nfunction set_reports_item_var($reports_item, $var_id) {\n\t// if a different host_id was selected, use it\n\tif (isset_request_var($var_id) && get_filter_request_var($var_id) >= 0) {\n\t\t$reports_item[$var_id] = get_request_var($var_id);\n\t}\n\n\t// Check that we have set a host_id, if not, default to 0\n\tif (!isset($reports_item[$var_id])) {\n\t\t$reports_item[$var_id] = 0;\n\t}\n\n\treturn $reports_item;\n}\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* inject_form_variables - replaces all variables contained in $form_array with\n     their actual values\n   @arg $form_array - an array that contains all of the information needed to draw\n     the html form. see the arrays contained in include/global_settings.php\n     for the extact syntax of this array\n   @arg $arg1 - an array that represents the |arg1:| variable (see\n     include/global_form.php for more details)\n   @arg $arg2 - an array that represents the |arg2:| variable (see\n     include/global_form.php for more details)\n   @arg $arg3 - an array that represents the |arg3:| variable (see\n     include/global_form.php for more details)\n   @arg $arg4 - an array that represents the |arg4:| variable (see\n     include/global_form.php for more details)\n   @returns - $form_array with all available variables substituted with their\n     proper values */\nfunction inject_form_variables(&$form_array, $arg1 = array(), $arg2 = array(), $arg3 = array(), $arg4 = array()) {\n\t$check_fields = array('id', 'value', 'array', 'friendly_name', 'description', 'sql', 'sql_print', 'form_id', 'items', 'tree_id');\n\n\t/* loop through each available field */\n\tif (cacti_sizeof($form_array)) {\n\t\tforeach ($form_array as $field_name => $field_array) {\n\t\t\t/* loop through each sub-field that we are going to check for variables */\n\t\t\tforeach ($check_fields as $field_to_check) {\n\t\t\t\tif (isset($field_array[$field_to_check]) && is_array($form_array[$field_name][$field_to_check])) {\n\t\t\t\t\t/* if the field/sub-field combination is an array, resolve it recursively */\n\t\t\t\t\t$form_array[$field_name][$field_to_check] = inject_form_variables($form_array[$field_name][$field_to_check], $arg1);\n\t\t\t\t} elseif (isset($field_array[$field_to_check]) && !is_array($field_array[$field_to_check]) && preg_match('/\\|(arg[123]):([a-zA-Z0-9_]*)\\|/', $field_array[$field_to_check], $matches)) {\n\t\t\t\t\t$string = $field_array[$field_to_check];\n\n\t\t\t\t\t$count = 0;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t/* an empty field name in the variable means don't treat this as an array */\n\t\t\t\t\t\tif ($matches[2] == '') {\n\t\t\t\t\t\t\tif (is_array(${$matches[1]})) {\n\t\t\t\t\t\t\t\t/* the existing value is already an array, leave it alone */\n\t\t\t\t\t\t\t\t$form_array[$field_name][$field_to_check] = ${$matches[1]};\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t/* the existing value is probably a single variable */\n\t\t\t\t\t\t\t\t$form_array[$field_name][$field_to_check] = str_replace($matches[0], ${$matches[1]}, $field_array[$field_to_check]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* copy the value down from the array/key specified in the variable */\n\t\t\t\t\t\t\t$string = str_replace($matches[0], (isset(${$matches[1]}{$matches[2]}) ? ${$matches[1]}{$matches[2]} : ''), $string);\n\n\t\t\t\t\t\t\t$matches = array();\n\n\t\t\t\t\t\t\tpreg_match('/\\|(arg[123]):([a-zA-Z0-9_]*)\\|/', $string, $matches);\n\n\t\t\t\t\t\t\tif (!cacti_sizeof($matches)) {\n\t\t\t\t\t\t\t\t$form_array[$field_name][$field_to_check] = $string;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$count++;\n\n\t\t\t\t\t\tif ($count > 3) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $form_array;\n}\n\n/* form_alternate_row_color - starts an HTML row with an alternating color scheme\n   @arg $row_color1 - the first color to use\n   @arg $row_color2 - the second color to use\n   @arg $row_value - the value of the row which will be used to evaluate which color\n     to display for this particular row. must be an integer\n   @arg $row_id - used to allow js and ajax actions on this object\n   @returns - the background color used for this particular row */\nfunction form_alternate_row_color($row_color1, $row_color2, $row_value, $row_id = '') {\n\tif ($row_value % 2 == 1) {\n\t\t\t$class='odd';\n\t\t\t$current_color = $row_color1;\n\t} else {\n\t\tif ($row_color2 == '' || $row_color2 == 'E5E5E5') {\n\t\t\t$class = 'even';\n\t\t} else {\n\t\t\t$class = 'even-alternate';\n\t\t}\n\t\t$current_color = $row_color1;\n\t}\n\n\tif ($row_id != '') {\n\t\tprint \"<tr class='$class selectable tableRow' id='$row_id'>\\n\";\n\t} else {\n\t\tprint \"<tr class='$class tableRow'>\\n\";\n\t}\n\n\treturn $current_color;\n}\n\n/* form_alternate_row - starts an HTML row with an alternating color scheme\n   @arg $light - Alternate odd style\n   @arg $row_id - The id of the row\n   @arg $reset - Reset to top of table */\nfunction form_alternate_row($row_id = '', $light = false, $disabled = false) {\n\tstatic $i = 1;\n\n\tif ($i % 2 == 1) {\n\t\t$class = 'odd';\n\t} elseif ($light) {\n\t\t$class = 'even-alternate';\n\t} else {\n\t\t$class = 'even';\n\t}\n\n\t$i++;\n\n\tif ($row_id != '' && !$disabled && substr($row_id, 0, 4) != 'row_') {\n\t\tprint \"<tr class='$class selectable tableRow' id='$row_id'>\\n\";\n\t} elseif (substr($row_id, 0, 4) == 'row_') {\n\t\tprint \"<tr class='$class tableRow' id='$row_id'>\\n\";\n\t} elseif ($row_id != '') {\n\t\tprint \"<tr class='$class tableRow' id='$row_id'>\\n\";\n\t} else {\n\t\tprint \"<tr class='$class tableRow'>\\n\";\n\t}\n}\n\n/* form_selectable_cell - format's a table row such that it can be highlighted using cacti's js actions\n   @arg $contents - the readable portion of the\n   @arg $id - the id of the object that will be highlighted\n   @arg $width - the width of the table element\n   @arg $style_or_class - the style or class to apply to the table element\n   @arg $title - optional title for the column */\nfunction form_selectable_cell($contents, $id, $width = '', $style_or_class = '', $title = '') {\n\t$output = '';\n\n\tif ($style_or_class != '') {\n\t\tif (strpos($style_or_class, ':') === false) {\n\t\t\t$output = \"class='nowrap \" . $style_or_class . \"'\";\n\t\t\tif ($width != '') {\n\t\t\t\t$output .= \" style='width:$width;'\";\n\t\t\t}\n\t\t} else {\n\t\t\t$output = \"class='nowrap' style='\" . $style_or_class;\n\t\t\tif ($width != '') {\n\t\t\t\t$output .= \";width:$width;\";\n\t\t\t}\n\t\t\t$output .= \"'\";\n\t\t}\n\t} else {\n\t\t$output = 'class=\"nowrap\"';\n\n\t\tif ($width != '') {\n\t\t\t$output .= \" style='width:$width;'\";\n\t\t}\n\t}\n\n\tif ($title != '') {\n\t\t$wrapper = \"<span class='cactiTooltipHint' style='padding:0px;margin:0px;' title='\" . str_replace(array('\"', \"'\"), '', $title) . \"'>\" . $contents . \"</span>\";\n\t} else {\n\t\t$wrapper = $contents;\n\t}\n\n\tprint \"\\t<td \" . $output . \">\" . $wrapper . \"</td>\\n\";\n}\n\n/* form_checkbox_cell - format's a tables checkbox form element so that the cacti js actions work on it\n   @arg $title - the text that will be displayed if your hover over the checkbox */\nfunction form_checkbox_cell($title, $id, $disabled = false) {\n\tprint \"\\t<td class='checkbox' style='width:1%;'>\\n\";\n\tprint \"\\t\\t<input type='checkbox' title='\" . html_escape($title) . \"' class='checkbox\" . ($disabled ? ' disabled':'') . \"' \" . ($disabled ? \"disabled='disabled'\":'') . \" id='chk_\" . $id . \"' name='chk_\" . $id . \"'><label class='formCheckboxLabel' for='chk_\" . $id . \"'></label>\\n\";\n\tprint \"\\t</td>\\n\";\n}\n\n/* form_end_row - ends a table row that is started with form_alternate_row */\nfunction form_end_row() {\n\tprint \"</tr>\\n\";\n}\n\n/* form_confirm_buttons - provides confirm buttons in the gui\n   @arg $message - the value of the HTML checkbox */\nfunction form_confim_buttons($post_variable, $item_array, $save_message, $return = false) {\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($item_array) ? serialize($item_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . $post_variable . \"'>\" . ($return ? \"\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\n\t\t\t\":\"\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') .\"' title='$save_message'>\") . \"\n\t\t</td>\n\t</tr>\\n\";\n}\n\n/* html_boolean - returns the boolean equivalent of an HTML checkbox value\n   @arg $html_boolean - the value of the HTML checkbox\n   @returns - true or false based on the value of the HTML checkbox */\nfunction html_boolean($html_boolean) {\n\treturn ($html_boolean == \"on\");\n}\n\n/* html_boolean_friendly - returns the natural language equivalent of an HTML\n     checkbox value\n   @arg $html_boolean - the value of the HTML checkbox\n   @returns - 'Selected' or 'Not Selected' based on the value of the HTML\n     checkbox */\nfunction html_boolean_friendly($html_boolean) {\n\tif ($html_boolean == \"on\") {\n\t\treturn __(\"Selected\");\n\t} else {\n\t\treturn __(\"Not Selected\");\n\t}\n}\n\n/* get_checkbox_style - finds the proper CSS padding to apply based on the\n     current client browser in use\n   @returns - a CSS style string which should be used with an HTML checkbox\n     control */\nfunction get_checkbox_style() {\n\treturn \"\";\n}\n\n/* set_default_action - sets the required 'action' request variable\n   @arg $default - The default action is not set\n   @returns - null */\nfunction set_default_action($default = '') {\n\tif (!isset_request_var('action')) {\n\t\tset_request_var('action', $default);\n\t} elseif (is_array(get_nfilter_request_var('action'))) {\n\t\tif (read_config_option('log_validation') == 'on') {\n\t\t\tcacti_log('WARNING: Request variable \\'action\\' was passed as array in ' . $_SERVER['SCRIPT_NAME'] . '.', false, 'WEBUI');\n\t\t}\n\n\t\tset_request_var('action', $_REQUEST['action'][0]);\n\t} else {\n\t\tset_request_var('action', $_REQUEST['action']);\n\t}\n}\n\n/* unset_request_var - unsets the request variable\n   @arg $variable - The variable to unset\n   @returns - null */\nfunction unset_request_var($variable) {\n\tglobal $_CACTI_REQUEST;\n\n\tif (isset($_CACTI_REQUEST[$variable])) {\n\t\tunset($_CACTI_REQUEST[$variable]);\n\t}\n\n\tif (isset($_REQUEST[$variable])) {\n\t\tunset($_REQUEST[$variable]);\n\t}\n}\n\n/* isset_request_var - checks to see if the $_REQUEST variable\n   is set.  Returns true or false.\n   @arg $variable - The variable to check\n   @returns - true or false */\nfunction isset_request_var($variable) {\n\treturn isset($_REQUEST[$variable]);\n}\n\n/* isempty_request_var - checks to see if the $_REQUEST variable\n   is empty.  Returns true or false.\n   @arg $variable - The variable to check\n   @returns - true or false */\nfunction isempty_request_var($variable) {\n\tif (isset_request_var($variable)) {\n\t\t$value = $_REQUEST[$variable];\n\n\t\tif (!empty($value)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/* set_request_var - sets a given $_REQUEST variable and Cacti global.\n   @arg $variable - The variable to set\n   @arg $value - The value to set the variable to\n   @returns - null */\nfunction set_request_var($variable, $value) {\n\tglobal $_CACTI_REQUEST;\n\n\t$_CACTI_REQUEST[$variable] = $value;\n\t$_REQUEST[$variable]       = $value;\n\t$_POST[$variable]          = $value;\n\t$_GET[$variable]           = $value;\n}\n\n/* get_request_var - returns the current value of a PHP $_REQUEST variable, optionally\n     returning a default value if the request variable does not exist.  When Cacti\n     has 'log_validation' set on, it will log all instances where a request variable\n     has not first been filtered.\n   @arg $name - the name of the request variable. this should be a valid key in the\n     $_REQUEST array\n   @arg $default - the value to return if the specified name does not exist in the\n     $_REQUEST array\n   @returns - the value of the request variable */\nfunction get_request_var($name, $default = '') {\n\tglobal $_CACTI_REQUEST;\n\n\t$log_validation = read_config_option('log_validation');\n\n\tif (isset($_CACTI_REQUEST[$name])) {\n\t\treturn $_CACTI_REQUEST[$name];\n\t} elseif (isset_request_var($name)) {\n\t\tif ($log_validation == 'on') {\n\t\t\thtml_log_input_error($name);\n\t\t}\n\n\t\tset_request_var($name, $_REQUEST[$name]);\n\n\t\treturn $_REQUEST[$name];\n\t} else {\n\t\treturn $default;\n\t}\n}\n\n/* get_request_var_request - deprecated - alias of get_request_var()\n     returning a default value if the request variable does not exist\n   @arg $name - the name of the request variable. this should be a valid key in the\n     $_GET array\n   @arg $default - the value to return if the specified name does not exist in the\n     $_GET array\n   @returns - the value of the request variable */\nfunction get_request_var_request($name, $default = '') {\n\treturn get_request_var($name, $default);\n}\n\n/* get_filter_request_var - returns the current value of a PHP $_REQUEST variable and also\n     sanitizing the value using the filter. It will also optionally\n     return a default value if the request variable does not exist\n   @arg $name - the name of the request variable. this should be a valid key in the\n     $_REQUEST array\n   @arg $default - the value to return if the specified name does not exist in the\n     $_REQUEST array\n   @returns - the value of the request variable */\nfunction get_filter_request_var($name, $filter = FILTER_VALIDATE_INT, $options = array()) {\n\tif (isset_request_var($name)) {\n\t\tif (isempty_request_var($name)) {\n\t\t\tset_request_var($name, get_nfilter_request_var($name));\n\n\t\t\treturn get_request_var($name);\n\t\t} elseif (get_nfilter_request_var($name) == 'undefined') {\n\t\t\tif (isset($options['default'])) {\n\t\t\t\tset_request_var($name, $options['default']);\n\n\t\t\t\treturn $options['default'];\n\t\t\t} else {\n\t\t\t\tset_request_var($name, '');\n\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else {\n\t\t\tif (get_nfilter_request_var($name) == '0') {\n\t\t\t\t$value = '0';\n\t\t\t} elseif (get_nfilter_request_var($name) == 'undefined') {\n\t\t\t\tif (isset($options['default'])) {\n\t\t\t\t\t$value = $options['default'];\n\t\t\t\t} else {\n\t\t\t\t\t$value = '';\n\t\t\t\t}\n\t\t\t} elseif (isempty_request_var($name)) {\n\t\t\t\t$value = '';\n\t\t\t} elseif ($filter == FILTER_VALIDATE_IS_REGEX) {\n\t\t\t\tif (is_base64_encoded($_REQUEST[$name])) {\n\t\t\t\t\t$_REQUEST[$name] = utf8_decode(base64_decode($_REQUEST[$name]));\n\t\t\t\t}\n\n\t\t\t\t$valid = validate_is_regex($_REQUEST[$name]);\n\t\t\t\tif ($valid === true) {\n\t\t\t\t\t$value = $_REQUEST[$name];\n\t\t\t\t} else {\n\t\t\t\t\t$value = false;\n\t\t\t\t\t$custom_error = $valid;\n\t\t\t\t}\n\t\t\t} elseif ($filter == FILTER_VALIDATE_IS_NUMERIC_ARRAY) {\n\t\t\t\t$valid = true;\n\t\t\t\tif (is_array($_REQUEST[$name])) {\n\t\t\t\t\tforeach($_REQUEST[$name] AS $number) {\n\t\t\t\t\t\tif (!is_numeric($number)) {\n\t\t\t\t\t\t\t$valid = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$valid = false;\n\t\t\t\t}\n\n\t\t\t\tif ($valid == true) {\n\t\t\t\t\t$value = $_REQUEST[$name];\n\t\t\t\t} else {\n\t\t\t\t\t$value = false;\n\t\t\t\t}\n\t\t\t} elseif ($filter == FILTER_VALIDATE_IS_NUMERIC_LIST) {\n\t\t\t\t$valid = true;\n\t\t\t\t$values = preg_split('/,/', $_REQUEST[$name], NULL, PREG_SPLIT_NO_EMPTY);\n\t\t\t\tforeach($values AS $number) {\n\t\t\t\t\tif (!is_numeric($number)) {\n\t\t\t\t\t\t$valid = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($valid == true) {\n\t\t\t\t\t$value = $_REQUEST[$name];\n\t\t\t\t} else {\n\t\t\t\t\t$value = false;\n\t\t\t\t}\n\t\t\t} elseif (!cacti_sizeof($options)) {\n\t\t\t\t$value = filter_var($_REQUEST[$name], $filter);\n\t\t\t} else {\n\t\t\t\t$value = filter_var($_REQUEST[$name], $filter, $options);\n\t\t\t}\n\t\t}\n\n\t\tif ($value === false) {\n\t\t\tif ($filter == FILTER_VALIDATE_IS_REGEX) {\n\t\t\t\t$_SESSION['custom_error'] = __('The search term \"%s\" is not valid. Error is %s', html_escape(get_nfilter_request_var($name)), html_escape($custom_error));\n\t\t\t\tset_request_var($name, '');\n\t\t\t\traise_message('custom_error');\n\t\t\t} else {\n\t\t\t\tdie_html_input_error($name, get_nfilter_request_var($name));\n\t\t\t}\n\t\t} else {\n\t\t\tset_request_var($name, $value);\n\n\t\t\treturn $value;\n\t\t}\n\t} else {\n\t\tif (isset($options['default'])) {\n\t\t\tset_request_var($name, $options['default']);\n\n\t\t\treturn $options['default'];\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n/* get_nfilter_request_var - returns the value of the request variable deferring\n   any filtering.\n   @arg $name - the name of the request variable. this should be a valid key in the\n     $_POST array\n   @arg $default - the value to return if the specified name does not exist in the\n     $_POST array\n   @returns - the value of the request variable */\nfunction get_nfilter_request_var($name, $default = '') {\n\tglobal $_CACTI_REQUEST;\n\n\tif (isset($_CACTI_REQUEST[$name])) {\n\t\treturn $_CACTI_REQUEST[$name];\n\t} elseif (isset($_REQUEST[$name])) {\n\t\treturn $_REQUEST[$name];\n\t} else {\n\t\treturn $default;\n\t}\n}\n\n/* get_request_var_post - depricated - returns the current value of a\n     PHP $_POST variable, optionally returning a default value if the\n     request variable does not exist.\n   @arg $name - the name of the request variable. this should be a valid key in the\n     $_POST array\n   @arg $default - the value to return if the specified name does not exist in the\n     $_POST array\n   @returns - the value of the request variable */\nfunction get_request_var_post($name, $default = '') {\n\treturn get_nfilter_request_var($name, $default);\n}\n\n/* validate_store_request_vars - validate, sanitize, and store\n   request variables into the custom $_CACTI_REQUEST and desired\n   session variables for Cacti filtering.\n\n\n   @arg $filters - an array keyed with the filter methods.\n   @arg $session_prefix - the prefix for the session variable\n\n   Valid filter include those from PHP filter_var() function syntax.\n   The format of the array is:\n\n     array(\n       'varA' => array(\n          'filter' => value,\n          'pageset' => true,      (optional)\n          'session' => sess_name, (optional)\n          'options' => mixed,\n          'default' => value),\n       'varB' => array(\n          'filter' => value,\n          'pageset' => true,      (optional)\n          'session' => sess_name, (optional)\n          'options' => mixed,\n          'default' => value),\n       ...\n     );\n\n   The 'pageset' attribute is optional, and when set, any changes\n   between what the page returns and what is set in the session\n   result in the page number being returned to 1.\n\n   The 'session' attribute is also optional, and when set, all\n   changes will be stored to the session variable defined and\n   not to session_prefix . '_' . $variable as the default.  This\n   allows for the concept of global session variables such as\n   'sess_default_rows'.\n\n   Validation 'filter' follow PHP conventions including:\n\n     FILTER_VALIDATE_BOOLEAN          - Validate that the variable is boolean\n     FILTER_VALIDATE_EMAIL            - Validate that the variable is an email\n     FILTER_VALIDATE_FLOAT            - Validate that the variable is a float\n     FILTER_VALIDATE_INT              - Validate that the variable is an integer\n     FILTER_VALIDATE_IP               - Validate that the variable is an IP address\n     FILTER_VALIDATE_MAC              - Validate that the variable is a MAC Address\n     FILTER_VALIDATE_REGEXP           - Validate against a REGEX\n     FILTER_VALIDATE_URL              - Validate that the variable is a valid URL\n     FILTER_VALIDATE_IS_REGEX         - Validate if a filter variable is a valid regex\n     FILTER_VALIDATE_IS_NUMERIC_ARRAY - Validate if a filter variable is a numeric array\n     FILTER_VALIDATE_IS_NUMERIC_LIST  - Validate if a filter variable is a comma delimited list of numbers\n\n   Sanitization 'filters' follow PHP conventions including:\n\n     FILTER_SANITIZE_EMAIL              - Sanitize the email address\n     FILTER_SANITIZE_ENCODED            - URL-encode string\n     FILTER_SANITIZE_MAGIC_QUOTES       - Apply addslashes()\n     FILTER_SANITIZE_NUMBER_FLOAT       - Remove all non float values\n     FILTER_SANITIZE_NUMBER_INT         - Remove everything non int\n     FILTER_SANITIZE_SPECIAL_CHARS      - Escape special chars\n     FILTER_SANITIZE_FULL_SPECIAL_CHARS - Equivalent to htmlspecialchars adding ENT_QUOTES\n     FILTER_SANITIZE_STRING             - Strip tags, optionally strip or encode special chars\n     FILTER_SANITIZE_URL                - Remove all characters except letters, digits, etc.\n     FILTER_UNSAFE_RAW                  - Nothing and optional strip or encode\n\n   @returns - the $_REQUEST variable validated and sanitized. */\nfunction validate_store_request_vars($filters, $sess_prefix = '') {\n\tglobal $_CACTI_REQUEST;\n\n\t$changed = 0;\n\t$custom_error = '';\n\n\tif (cacti_sizeof($filters)) {\n\t\tforeach($filters as $variable => $options) {\n\t\t\t// Establish the session variable first\n\t\t\tif ($sess_prefix != '') {\n\t\t\t\tif (isset($options['session'])) {\n\t\t\t\t\t$session_variable = $options['session'];\n\t\t\t\t} elseif ($variable != 'rows') {\n\t\t\t\t\t$session_variable = $sess_prefix . '_' . $variable;\n\t\t\t\t} else {\n\t\t\t\t\t$session_variable = 'sess_default_rows';\n\t\t\t\t}\n\n\t\t\t\t// Check for special cases 'clear' and 'reset'\n\t\t\t\tif (isset_request_var('clear')) {\n\t\t\t\t\tkill_session_var($session_variable);\n\t\t\t\t\tunset_request_var($variable);\n\t\t\t\t} elseif (isset_request_var('reset')) {\n\t\t\t\t\tkill_session_var($session_variable);\n\t\t\t\t} elseif (isset($options['pageset']) && $options['pageset'] == true) {\n\t\t\t\t\t$changed += check_changed($variable, $session_variable);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!isset_request_var($variable)) {\n\t\t\t\tif ($sess_prefix != '' && isset($_SESSION[$session_variable])) {\n\t\t\t\t\tset_request_var($variable, $_SESSION[$session_variable]);\n\t\t\t\t} elseif (isset($options['default'])) {\n\t\t\t\t\tset_request_var($variable, $options['default']);\n\t\t\t\t} else {\n\t\t\t\t\tcacti_log(\"Filter Variable: $variable, Must have a default and none is set\", false);\n\t\t\t\t\tset_request_var($variable, '');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (get_nfilter_request_var($variable) == '0') {\n\t\t\t\t\t$value = '0';\n\t\t\t\t} elseif (get_nfilter_request_var($variable) == 'undefined') {\n\t\t\t\t\tif (isset($options['default'])) {\n\t\t\t\t\t\t$value = $options['default'];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$value = '';\n\t\t\t\t\t}\n\t\t\t\t} elseif (isempty_request_var($variable)) {\n\t\t\t\t\t$value = '';\n\t\t\t\t} elseif ($options['filter'] == FILTER_VALIDATE_IS_REGEX) {\n\t\t\t\t\tif (is_base64_encoded($_REQUEST[$variable])) {\n\t\t\t\t\t\t$_REQUEST[$variable] = utf8_decode(base64_decode($_REQUEST[$variable]));\n\t\t\t\t\t}\n\n\t\t\t\t\t$valid = validate_is_regex($_REQUEST[$variable]);\n\t\t\t\t\tif ($valid === true) {\n\t\t\t\t\t\t$value = $_REQUEST[$variable];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$value = false;\n\t\t\t\t\t\t$custom_error = $valid;\n\t\t\t\t\t}\n\t\t\t\t} elseif ($options['filter'] == FILTER_VALIDATE_IS_NUMERIC_ARRAY) {\n\t\t\t\t\t$valid = true;\n\t\t\t\t\tif (is_array($_REQUEST[$variable])) {\n\t\t\t\t\t\tforeach($_REQUEST[$variable] AS $number) {\n\t\t\t\t\t\t\tif (!is_numeric($number)) {\n\t\t\t\t\t\t\t\t$valid = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$valid = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($valid == true) {\n\t\t\t\t\t\t$value = $_REQUEST[$variable];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$value = false;\n\t\t\t\t\t}\n\t\t\t\t} elseif ($options['filter'] == FILTER_VALIDATE_IS_NUMERIC_LIST) {\n\t\t\t\t\t$valid = true;\n\t\t\t\t\t$values = preg_split('/,/', $_REQUEST[$variable], NULL, PREG_SPLIT_NO_EMPTY);\n\t\t\t\t\tforeach($values AS $number) {\n\t\t\t\t\t\tif (!is_numeric($number)) {\n\t\t\t\t\t\t\t$valid = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($valid == true) {\n\t\t\t\t\t\t$value = $_REQUEST[$variable];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$value = false;\n\t\t\t\t\t}\n\t\t\t\t} elseif (!isset($options['options'])) {\n\t\t\t\t\t$value = filter_var($_REQUEST[$variable], $options['filter']);\n\t\t\t\t} else {\n\t\t\t\t\t$value = filter_var($_REQUEST[$variable], $options['filter'], $options['options']);\n\t\t\t\t}\n\n\t\t\t\tif ($value === false) {\n\t\t\t\t\tif ($options['filter'] == FILTER_VALIDATE_IS_REGEX) {\n\t\t\t\t\t\t$_SESSION['custom_error'] = __('The search term \"%s\" is not valid. Error is %s', html_escape(get_nfilter_request_var($variable)), html_escape($custom_error));\n\t\t\t\t\t\tset_request_var($variable, '');\n\t\t\t\t\t\traise_message('custom_error');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdie_html_input_error($variable, get_nfilter_request_var($variable), html_escape($custom_error));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tset_request_var($variable, $value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($sess_prefix != '') {\n\t\t\t\tif (isset_request_var($variable)) {\n\t\t\t\t\t$_SESSION[$session_variable] = get_request_var($variable);\n\t\t\t\t} elseif (isset($_SESSION[$session_variable])) {\n\t\t\t\t\tset_request_var($variable, $_SESSION[$session_variable]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tupdate_order_string();\n\t}\n\n\tif ($changed) {\n\t\tset_request_var('page', 1);\n\t\tset_request_var('changed', 1);\n\t\t$_SESSION[$sess_prefix . '_page'] = 1;\n\t} elseif (!isset_request_var('page') && isset($_SESSION[$sess_prefix . '_page'])) {\n\t\tset_request_var('page', $_SESSION[$sess_prefix . '_page']);\n\t}\n}\n\n/* update_order_string - creates a sort string for standard Cacti tables\n   @returns - null */\nfunction update_order_string($inplace = false) {\n\t$page = get_order_string_page();\n\n\t$order = '';\n\n\tif (strpos(get_request_var('sort_column'), '(') === false && strpos(get_request_var('sort_column'), '`') === false) {\n\t\t$del = '`';\n\t} else {\n\t\t$del = '';\n\t}\n\n\tif ($inplace) {\n\t\t$_SESSION['sort_string'][$page] = 'ORDER BY ';\n\t\tforeach($_SESSION['sort_data'][$page] as $column => $direction) {\n\t\t\tif ($column == 'hostname' || $column == 'ip' || $column == 'ip_address') {\n\t\t\t\t$order .= ($order != '' ? ', ':'') . 'INET_ATON(' . $column . ') ' . $direction;\n\t\t\t} else {\n\t\t\t\t$order .= ($order != '' ? ', ':'') . $column . ' ' . $direction;\n\t\t\t}\n\t\t}\n\t\t$_SESSION['sort_string'][$page] .= $order;\n\t} else {\n\t\tif (isset_request_var('clear')) {\n\t\t\tunset($_SESSION['sort_data'][$page]);\n\t\t\tunset($_SESSION['sort_string'][$page]);\n\t\t} elseif (isset_request_var('add') && get_nfilter_request_var('add') == 'reset') {\n\t\t\tunset($_SESSION['sort_data'][$page]);\n\t\t\tunset($_SESSION['sort_string'][$page]);\n\n\t\t\t$_SESSION['sort_data'][$page][get_request_var('sort_column')] = get_request_var('sort_direction');\n\t\t\t$_SESSION['sort_string'][$page] = 'ORDER BY ' . $del . implode($del . '.'. $del, explode('.', get_request_var('sort_column'))) . $del . ' ' . get_request_var('sort_direction');\n\t\t} elseif (isset_request_var('sort_column')) {\n\t\t\t$_SESSION['sort_data'][$page][get_request_var('sort_column')] = get_nfilter_request_var('sort_direction');\n\t\t\t$_SESSION['sort_string'][$page] = 'ORDER BY ';\n\t\t\tforeach($_SESSION['sort_data'][$page] as $column => $direction) {\n\t\t\t\tif ($column == 'hostname' || $column == 'ip' || $column == 'ip_address') {\n\t\t\t\t\t$order .= ($order != '' ? ', ':'') . 'INET_ATON(' . $column . \") \" . $direction;\n\t\t\t\t} else {\n\t\t\t\t\t$order .= ($order != '' ? ', ' . $del:$del) . implode($del . '.' . $del, explode('.', $column)) . $del . ' ' . $direction;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$_SESSION['sort_string'][$page] .= $order;\n\t\t} else {\n\t\t\tunset($_SESSION['sort_data'][$page]);\n\t\t\tunset($_SESSION['sort_string'][$page]);\n\t\t}\n\t}\n}\n\n/* get_order_string - returns a valid order string for a table\n   @returns - the order string */\nfunction get_order_string() {\n\t$page = get_order_string_page();\n\n\tif (strpos(get_request_var('sort_column'), '(') === false && strpos(get_request_var('sort_column'), '`') === false) {\n\t\t$del = '`';\n\t} else {\n\t\t$del = '';\n\t}\n\n\tif (isset($_SESSION['sort_string'][$page])) {\n\t\treturn $_SESSION['sort_string'][$page];\n\t} else {\n\t\treturn 'ORDER BY ' . $del . implode($del . '.' . $del, explode('.', get_request_var('sort_column'))) . $del . ' ' . get_request_var('sort_direction');\n\t}\n}\n\nfunction remove_column_from_order_string($column) {\n\t$page = get_order_string_page();\n\n\tif (isset($_SESSION['sort_data'][$page][$column])) {\n\t\tunset($_SESSION['sort_data'][$page][$column]);\n\t\tupdate_order_string(true);\n\t}\n}\n\nfunction get_order_string_page() {\n\t$page = str_replace('.php', '', get_current_page());\n\n\tif (isset_request_var('action')) {\n\t\t$page .= '_' . get_nfilter_request_var('action');\n\t}\n\n\tif (isset_request_var('tab')) {\n\t\t$page .= '_' . get_nfilter_request_var('tab');\n\t}\n\n\treturn $page;\n}\n\nfunction validate_is_regex($regex) {\n\tglobal $php_errormsg;\n\n\tif ($regex == '') {\n\t\treturn true;\n\t}\n\n\trestore_error_handler();\n\n\t$track_errors = ini_get('track_errors');\n\tini_set('track_errors', 1);\n\n    if(@preg_match(\"'\" . $regex . \"'\", NULL) !== false) {\n\t\tini_set('track_errors', $track_errors);\n\t\treturn true;\n\t}\n\n\t$php_error = trim(str_replace('preg_match():', '', $php_errormsg));\n\n\tini_set('track_errors', $track_errors);\n\n\t$errors = array(\n\t\tPREG_INTERNAL_ERROR         => __('There was an internal error!'),\n\t\tPREG_BACKTRACK_LIMIT_ERROR  => __('Backtrack limit was exhausted!'),\n\t\tPREG_RECURSION_LIMIT_ERROR  => __('Recursion limit was exhausted!'),\n\t\tPREG_BAD_UTF8_ERROR         => __('Bad UTF-8 error!'),\n\t\tPREG_BAD_UTF8_OFFSET_ERROR  => __('Bad UTF-8 offset error!'),\n\t);\n\n\t$error = preg_last_error();\n\n\tif (!defined('IN_CACTI_INSTALL')) {\n\t\tset_error_handler('CactiErrorHandler');\n\t}\n\n\tif (empty($error)) {\n\t\treturn $php_error;\n\t} else {\n\t\treturn $errors[$error];\n\t}\n}\n\n/* load_current_session_value - finds the correct value of a variable that is being\n     cached as a session variable on an HTML form\n   @arg $request_var_name - the array index name for the request variable\n   @arg $session_var_name - the array index name for the session variable\n   @arg $default_value - the default value to use if values cannot be obtained using\n     the session or request array */\nfunction load_current_session_value($request_var_name, $session_var_name, $default_value) {\n\tif (isset_request_var($request_var_name)) {\n\t\t$_SESSION[$session_var_name] = get_request_var($request_var_name);\n\t} elseif (isset($_SESSION[$session_var_name])) {\n\t\tset_request_var($request_var_name, $_SESSION[$session_var_name]);\n\t} else {\n\t\tset_request_var($request_var_name, $default_value);\n\t}\n}\n\n/* get_colored_device_status - given a device's status, return the colored text in HTML\n     format suitable for display\n   @arg $disabled (bool) - true if the device is disabled, false is it is not\n   @arg $status - the status type of the device as defined in global_constants.php\n   @returns - a string containing html that represents the device's current status */\nfunction get_colored_device_status($disabled, $status) {\n\tif ($disabled) {\n\t\treturn \"<span class='deviceDisabled'>\" . __('Disabled') . \"</span>\";\n\t} else {\n\t\tswitch ($status) {\n\t\t\tcase HOST_DOWN:\n\t\t\t\treturn \"<span class='deviceDown'>\" . __('Down') . \"</span>\";\n\t\t\t\tbreak;\n\t\t\tcase HOST_RECOVERING:\n\t\t\t\treturn \"<span class='deviceRecovering'>\" . __('Recovering') . \"</span>\";\n\t\t\t\tbreak;\n\t\t\tcase HOST_UP:\n\t\t\t\treturn \"<span class='deviceUp'>\" . __('Up') . \"</span>\";\n\t\t\t\tbreak;\n\t\t\tcase HOST_ERROR:\n\t\t\t\treturn \"<span class='deviceError'>\" . __('Error') . \"</span>\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"<span class='deviceUnknown'>\" . __('Unknown') . \"</span>\";\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\n/* get_current_graph_start - determine the correct graph start time selected using\n     the timespan selector\n   @returns - the number of seconds relative to now where the graph should begin */\nfunction get_current_graph_start() {\n\tif (isset($_SESSION['sess_current_timespan_begin_now']) && is_numeric($_SESSION['sess_current_timespan_begin_now'])) {\n\t\treturn $_SESSION['sess_current_timespan_begin_now'];\n\t} else {\n\t\treturn '-' . DEFAULT_TIMESPAN;\n\t}\n}\n\n/* get_current_graph_end - determine the correct graph end time selected using\n     the timespan selector\n   @returns - the number of seconds relative to now where the graph should end */\nfunction get_current_graph_end() {\n\tif (isset($_SESSION['sess_current_timespan_end_now']) && is_numeric($_SESSION['sess_current_timespan_end_now'])) {\n\t\treturn $_SESSION['sess_current_timespan_end_now'];\n\t} else {\n\t\treturn '0';\n\t}\n}\n\n/* display_tooltip - display the text passed to the function as a tooltip\n   @arg $text - the text to display in the tooltip\n   @returns - null */\nfunction display_tooltip($text) {\n\treturn '<div class=\"cactiTooltipHint fa fa-question-circle\"><span style=\"display:none;\">' . $text . \"</span></div>\\n\";\n}\n\n/* get_page_list - generates the html necessary to present the user with a list of pages limited\n     in length and number of rows per page\n   @arg $current_page - the current page number\n   @arg $pages_per_screen - the maximum number of pages allowed on a single screen. odd numbered\n     values for this argument are prefered for equality reasons\n   @arg $current_page - the current page number\n   @arg $total_rows - the total number of available rows\n   @arg $url - the url string to prepend to each page click\n   @returns - a string containing html that represents the a page list */\nfunction get_page_list($current_page, $pages_per_screen, $rows_per_page, $total_rows, $url, $page_var = 'page', $return_to = '') {\n\t$url_page_select = \"<ul class='pagination'>\";\n\n\tif (strpos($url, '?') !== false) {\n\t\t$url . '&';\n\t} else {\n\t\t$url . '?';\n\t}\n\n\t$total_pages = ceil($total_rows / $rows_per_page);\n\n\tif ($rows_per_page <= 0) {\n\t\t$total_pages = 0;\n\t} else {\n\t\t$total_pages = ceil($total_rows / $rows_per_page);\n\t}\n\n\t$start_page = max(1, ($current_page - floor(($pages_per_screen - 1) / 2)));\n\t$end_page = min($total_pages, ($current_page + floor(($pages_per_screen - 1) / 2)));\n\n\t/* adjust if we are close to the beginning of the page list */\n\tif ($current_page > ceil($pages_per_screen/2)) {\n\t\t$url_page_select .= \"<li><a href='#' onClick='goto$page_var(1);return false'>1</a></li>\";\n\t\t$url_page_select .= '<li><span>...</span></li>';\n\t}\n\tif ($current_page <= ceil(($pages_per_screen) / 2)) {\n\t\t$end_page += ($pages_per_screen - $end_page);\n\t}\n\n\t/* adjust if we are close to the end of the page list */\n\tif (($total_pages - $current_page) < ceil(($pages_per_screen) / 2)) {\n\t\t$start_page -= (($pages_per_screen - ($end_page - $start_page)) - 1);\n\t}\n\n\t/* stay within limits */\n\t$start_page = max(1, $start_page);\n\t$end_page = min($total_pages, $end_page);\n\n\tfor ($page_number=0; (($page_number+$start_page) <= $end_page); $page_number++) {\n\t\t$page = $page_number + $start_page;\n\t\tif ($page_number < $pages_per_screen) {\n\t\t\tif ($current_page == $page) {\n\t\t\t\t$url_page_select .= \"<li><a href='#' class='active' onClick='goto$page_var($page);return false'>$page</a></li>\";\n\t\t\t} else {\n\t\t\t\t$url_page_select .= \"<li><a href='#' onClick='goto$page_var($page);return false'>$page</a></li>\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif (($total_pages - $current_page) >= ceil(($pages_per_screen) / 2)) {\n\t\t$url_page_select .= '<li><span>...</span></li>';\n\t\t$url_page_select .= \"<li><a href='#' onClick='goto$page_var($total_pages);return false'>$total_pages</a></li>\";\n\t}\n\n\t$url_page_select .= '</ul>';\n\n\tif ($return_to != '') {\n\t\t$url_page_select .= \"<script type='text/javascript'>function goto$page_var(pageNo) { if (typeof url_graph === 'function') { var url_add=url_graph('') } else { var url_add=''; }; $.get('\" . $url . \"header=false&\" . $page_var . \"='+pageNo+url_add).done(function(data) { $('#$return_to').html(data); applySkin(); }); }</script>\";\n\t} else {\n\t\t$url_page_select .= \"<script type='text/javascript'>function goto${page_var}(pageNo) { if (typeof url_graph === 'function') { var url_add=url_graph('') } else { var url_add=''; }; document.location='$url$page_var='+pageNo+url_add }</script>\";\n\t}\n\n\treturn $url_page_select;\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('./include/auth.php');\n\n$link_actions = array(\n\t1 => __('Delete'),\n\t3 => __('Enable'),\n\t2 => __('Disable')\n);\n\nset_default_action();\n\nswitch (get_request_var('action')) {\ncase 'actions':\n\tform_actions();\n\n\tbreak;\ncase 'delete_page':\n\tif (isset_request_var('id') && get_filter_request_var('id')) {\n\t\tpage_delete(get_request_var('id'));\n\t}\n\n\theader('Location: links.php?header=false');\n\n\tbreak;\ncase 'move_page_up':\n\tif (isset_request_var('id') && get_filter_request_var('id') && isset_request_var('order') && get_filter_request_var('order')) {\n\t\tpage_move(get_request_var('id'), get_request_var('order'), '-1');\n\t}\n\n\theader('Location: links.php?header=false');\n\n\tbreak;\ncase 'move_page_down':\n\tif (isset_request_var('id') && get_filter_request_var('id') && isset_request_var('order') && get_filter_request_var('order')) {\n\t\tpage_move(get_request_var('id'), get_request_var('order'), '1');\n\t}\n\n\theader('Location: links.php?header=false');\n\n\tbreak;\ncase 'save':\n\t$save['id']      = isset_request_var('id') ? get_filter_request_var('id'):0;\n\t$save['title']   = form_input_validate(get_nfilter_request_var('title'), 'title', '', false, 3);\n\t$save['style']   = get_nfilter_request_var('style');\n\t$save['enabled'] = (isset_request_var('enabled') ? 'on':'');\n\t$save['refresh'] = form_input_validate(get_nfilter_request_var('refresh'), 'refresh', '^[0-9]+$', false, 3);\n\n\tif (preg_match('/^((((ht|f)tp(s?))\\:\\/\\/){1}\\S+)/i', get_nfilter_request_var('fileurl')) && get_nfilter_request_var('filename') == '0') {\n\t\t$save['contentfile'] = get_nfilter_request_var('fileurl');\n\t} else {\n\t\t$save['contentfile'] = preg_replace('/[^A-Za-z0-9_\\.-]/','_', get_nfilter_request_var('filename'));\n\t}\n\n\t$consolesection    = get_nfilter_request_var('consolesection');\n\t$consolenewsection = get_nfilter_request_var('consolenewsection');\n\t$extendedstyle     = '';\n\t$lastsortorder     = db_fetch_cell('SELECT MAX(sortorder) FROM external_links');\n\t$save['sortorder'] = $lastsortorder + 1;\n\n\tif ($save['style'] == 'CONSOLE') {\n\t\tif ($consolesection == '__NEW__') {\n\t\t\t$extendedstyle = $consolenewsection;\n\t\t} else {\n\t\t\t$extendedstyle = $consolesection;\n\t\t}\n\n\t\tif ($extendedstyle == '') {\n\t\t\t$extendedstyle = __('External Links');\n\t\t}\n\t}\n\t$save['extendedstyle'] = $extendedstyle;\n\n\tif (!is_error_message()){\n\t\t$id = sql_save($save, 'external_links');\n\n\t\t// always give the login account access\n\t\tdb_execute_prepared('REPLACE INTO user_auth_realm (user_id, realm_id) VALUES (?, ?)', array($_SESSION['sess_user_id'], $id+10000));\n\n\t\traise_message(1);\n\n\t\theader('Location: links.php?header=false');\n\t\texit;\n\t} else {\n\t\traise_message(2);\n\n\t\theader('Location: links.php?action=edit&header=false&id=' . (isset_request_var('id') ? get_filter_request_var('id'):''));\n\t\texit;\n\t}\n\n\tbreak;\ncase 'edit':\n\ttop_header();\n\n\tedit_page();\n\n\tbottom_footer();\n\n\tbreak;\ndefault:\n\ttop_header();\n\n\tpages();\n\n\tbottom_footer();\n\n\tbreak;\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '3') { // Enable Page\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdb_execute_prepared(\"UPDATE external_links SET enabled='on' WHERE id = ?\", array($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // Disable Page\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdb_execute_prepared(\"UPDATE external_links SET enabled='' WHERE id = ?\", array($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '1') { // Delete Page\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM external_links WHERE id = ?', array($selected_items[$i]));\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_realm WHERE realm_id = ?', array($selected_items[$i]+10000));\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_realm WHERE realm_id = ?', array($selected_items[$i]+10000));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: links.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$page_list = ''; $i = 0;\n\n\t/* loop through each of the pages selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$page_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT title FROM external_links WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$pages[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('links.php');\n\n\thtml_start_box($actions[get_request_var_post('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($pages) && cacti_sizeof($pages)) {\n\t\tif (get_request_var('drp_action') == '3') { // Enable Pages\n\t\t\tprint \"<tr>\n\t\t\t\t<td colspan='2' class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to Enable the following Page(s).') . \"</p>\n\t\t\t\t\t<ul>\" . $page_list . \"</ul>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __('Continue') . \"' title='\" . __esc('Enable Page(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // Disable Pages\n\t\t\tprint \"<tr>\n\t\t\t\t<td colspan='2' class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to Disable the following Page(s).') . \"</p>\n\t\t\t\t\t<ul>\" . $page_list . \"</ul>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __('Continue') . \"' title='\" . __esc('Disable Page(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '1') { // Delete Pages\n\t\t\tprint \"<tr>\n\t\t\t\t<td colspan='2' class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to Delete the following Page(s).') . \"</p>\n\t\t\t\t\t<ul>\" . $page_list . \"</ul>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __('Continue') . \"' title='\" . __esc('Delete Page(s)') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: links.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr class='saveRow'>\n\t\t<td>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($pages) ? serialize($pages) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\nfunction pages() {\n\tglobal $item_rows, $config, $link_actions;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'sortorder',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_links');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction applyFilter() {\n\t\tstrURL  = 'links.php?rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL  = 'links.php?clear=true&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#links').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_start_box(__('External Links'), '100%', '', '3', 'center', 'links.php?action=edit');\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t\t<form id='link_filter' action='links.php' method='post'>\n\t\t\t<table class='filterTable' cellpadding='2' cellspacing='0'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Links');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value=-1 <?php get_request_var('rows') == -1 ? 'selected':'';?>><?php print __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tforeach ($item_rows as $key => $row) {\n\t\t\t\t\t\t\t\techo \"<option value='\" . $key . \"'\" . ($key == get_request_var('rows') ? ' selected' : '') . '>' . $row . '</option>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __('Go');?>' title='<?php print __esc('Apply Filter');?>' onClick='applyFilter()'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __('Clear');?>' title='<?php print __esc('Reset filters');?>' onClick='clearFilter()'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$style_translate = array(\n\t\t'CONSOLE'    => __('Console'),\n\t\t'TAB'        => __('Top Tab'),\n\t\t'FRONT'      => __('Bottom Console'),\n\t\t'FRONTTOP'   => __('Top Console')\n\t);\n\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \" WHERE title LIKE '%\" . get_request_var('filter') . \"%' OR contentfile LIKE '%\" . get_request_var('filter') . \"%'\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$sql_order = get_order_string();\n\t$sql_order = str_replace('sortorder DESC', 'sortorder ASC', $sql_order);\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$pages = db_fetch_assoc(\"SELECT *\n\t\tFROM external_links\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$total_rows = db_fetch_cell('SELECT COUNT(*) FROM external_links');\n\n\tform_start('links.php', 'chk');\n\n\t$nav = html_nav_bar('links.php', MAX_DISPLAY_PAGES, get_request_var_request('page'), $rows, $total_rows, 8, __('External Links'), 'page', 'main');\n\n\tprint $nav;\n\n    html_start_box('', '100%', '', '4', 'center', '');\n\n\t$display_text = array(\n\t\t'nosort0'     => array('display' => __('Actions'), 'align' => 'left',  'sort' => ''),\n\t\t'contentfile' => array('display' => __('Page'),    'align' => 'left',  'sort' => 'ASC'),\n\t\t'title'       => array('display' => __('Title'),   'align' => 'left',  'sort' => 'ASC'),\n\t\t'style'       => array('display' => __('Style'),   'align' => 'left',  'sort' => 'ASC'),\n\t\t'disabled'    => array('display' => __('Enabled'), 'align' => 'left',  'sort' => 'ASC'),\n\t\t'sortorder'   => array('display' => __('Order'),   'align' => 'center', 'sort' => 'ASC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'));\n\n\t$i = 0;\n\tif (cacti_sizeof($pages)) {\n\t\tforeach ($pages as $page) {\n\t\t\tform_alternate_row('line' . $page['id']);\n\n\t\t\t$actions = '<a class=\"pic\"  href=\"' . html_escape('links.php?action=edit&id='.$page['id']) . '\" title=\"' . __esc('Edit Page') . '\"><img src=\"' . $config['url_path'] . 'images/application_edit.png\" alt=\"\"></a>';\n\n\t\t\tif ($page['enabled'] == 'on') {\n\t\t\t\t$actions .= '<a class=\"pic\" href=\"' . html_escape('link.php?id=' . $page['id']) . '\" title=\"' . __esc('View Page') . '\"><img src=\"' . $config['url_path'] . 'images/view_page.png\" alt=\"\"></a>';\n\t\t\t}\n\n\t\t\tform_selectable_cell($actions, $page['id'], '50');\n\t\t\tform_selectable_cell(html_escape($page['contentfile']), $page['id']);\n\t\t\tform_selectable_cell(html_escape($page['title']), $page['id']);\n\t\t\tform_selectable_cell(html_escape($style_translate[$page['style']]) . ($page['style'] == 'CONSOLE' ? ' ( ' . ($page['extendedstyle'] == '' ? 'External Links':$page['extendedstyle']) . ' )':''), $page['id']);\n\t\t\tform_selectable_cell(($page['enabled'] == 'on' ? 'Yes':'No'), $page['id']);\n\n\t\t\tif (get_request_var('sort_column') == 'sortorder') {\n\t\t\t\tif ($i != 0) {\n\t\t\t\t\t$sort = '<a class=\"pic fa fa-caret-up moveArrow\" href=\"' . html_escape('links.php?action=move_page_up&order=' . $page['sortorder'] . '&id='.$page['id']) . '\"></a>';\n\t\t\t\t} else {\n\t\t\t\t\t$sort = '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t}\n\n\t\t\t\tif ($i == cacti_sizeof($pages)-1) {\n\t\t\t\t\t$sort .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t} else {\n\t\t\t\t\t$sort .= '<a class=\"pic fa fa-caret-down moveArrow\" href=\"' . html_escape('links.php?action=move_page_down&order=' . $page['sortorder'] . '&id=' . $page['id']) . '\"></a>';\n\t\t\t\t}\n\n\t\t\t\tform_selectable_cell($sort, $page['id'], '', 'center');\n\t\t\t} else {\n\t\t\t\tform_selectable_cell(__('Sort for Ordering'), $page['id']);\n\t\t\t}\n\n\t\t\tform_checkbox_cell($page['title'], $page['id']);\n\t\t\tform_end_row();\n\n\t\t\t$i++;\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='\" . (cacti_sizeof($nav) + 1) . \"'><em>\" . __('No Pages Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($pages)) {\n\t\tprint $nav;\n\t}\n\n\tdraw_actions_dropdown($link_actions);\n\n\tform_end();\n}\n\nfunction page_delete($id) {\n\tdb_execute_prepared('DELETE FROM external_links WHERE id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM user_auth_realm WHERE realm_id = ?', array($id+10000));\n\tdb_execute_prepared('DELETE FROM user_auth_group_realm WHERE realm_id = ?', array($id+10000));\n\n\tpage_resort();\n}\n\nfunction page_resort() {\n\t$pages = db_fetch_assoc(\"SELECT * FROM external_links ORDER BY sortorder\");\n\n\t$i = 1;\n\tif (cacti_sizeof($pages)) {\n\t\tforeach ($pages as $page) {\n\t\t\tdb_execute_prepared('UPDATE external_links SET sortorder = ? WHERE id = ?' . array($id, $page['id']));\n\t\t\t$i++;\n\t\t}\n\t}\n}\n\nfunction page_move($pageid, $junk, $direction) {\n\t$oldorder = db_fetch_cell_prepared('SELECT sortorder FROM external_links WHERE id = ?', array($pageid));\n\t$neworder = $oldorder + $direction;\n\t$otherid  = db_fetch_cell_prepared('SELECT id FROM external_links WHERE sortorder = ?', array($neworder));\n\n\tif (!empty($otherid)) {\n\t\tdb_execute_prepared('UPDATE external_links SET sortorder = ? WHERE id = ?', array($neworder, $pageid));\n\t\tdb_execute_prepared('UPDATE external_links SET sortorder = ? WHERE id = ?', array($oldorder, $otherid));\n\t}\n}\n\nfunction edit_page() {\n\tglobal $config, $poller_intervals;\n\n\t$sections = db_fetch_assoc(\"SELECT extendedstyle\n\t\tFROM external_links\n\t\tWHERE style='CONSOLE'\n\t\tGROUP BY extendedstyle\n\t\tORDER BY extendedstyle\");\n\n\t$sec_ar = array();\n\t$sec_ar['External Links'] = __('External Links');\n\n\tforeach ($sections as $sec) {\n\t\tif ($sec['extendedstyle'] !='') {\n\t\t\t$sec_ar[$sec['extendedstyle']] = $sec['extendedstyle'];\n\t\t}\n\t}\n\t$sec_ar['__NEW__'] = 'New Name Below';\n\n\tif (isset_request_var('id')) {\n\t\t$data = db_fetch_row_prepared('SELECT * FROM external_links WHERE id = ?', array(get_filter_request_var('id')));\n\t} else {\n\t\t$data = array();\n\t}\n\n\t$myrefresh[0] = __('Disabled');\n\t$myrefresh   += $poller_intervals;\n\n\t$field_array = array(\n\t\t'id' => array(\n\t\t\t'friendly_name' => __('Style'),\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => isset_request_var('id') ? get_request_var('id'):0\n\t\t),\n\t\t'style' => array(\n\t\t\t'friendly_name' => __('Style'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'array' => array(\n\t\t\t\t'TAB'        => __('Top Tab'),\n\t\t\t\t'CONSOLE'    => __('Console Menu'),\n\t\t\t\t'FRONT'      => __('Bottom of Console Page'),\n\t\t\t\t'FRONTTOP'   => __('Top of Console Page')\n\t\t\t),\n\t\t\t'description' => __('Where should this page appear?'),\n\t\t\t'value' => (isset($data['style']) ? $data['style']:'')\n\t\t),\n\t\t'consolesection' => array(\n\t\t\t'friendly_name' => __('Console Menu Section'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'array' => $sec_ar,\n\t\t\t'description' => __('Under which Console heading should this item appear? (All External Link menus will appear between Configuration and Utilities)'),\n\t\t\t'value' => (isset($data['extendedstyle']) ? $data['extendedstyle']:'')\n\t\t),\n\t\t'consolenewsection' => array(\n\t\t\t'friendly_name' => __('New Console Section'),\n\t\t\t'method' => 'textbox',\n\t\t\t'max_length' => 20,\n\t\t\t'description' => __('If you don\\'t like any of the choices above, type a new title in here.'),\n\t\t\t'value' => (isset($data['extendedstyle']) ? $data['extendedstyle']:'')\n\t\t),\n\t\t'title' => array(\n\t\t\t'friendly_name' => __('Tab/Menu Name'),\n\t\t\t'method' => 'textbox',\n\t\t\t'max_length' => 20,\n\t\t\t'description' => __('The text that will appear in the tab or menu.'),\n\t\t\t'value' => (isset($data['title']) ? $data['title']:'')\n\t\t),\n\t\t'filename' => array(\n\t\t\t'friendly_name' => __('Content File/URL'),\n\t\t\t'method' => 'drop_files',\n\t\t\t'directory' => $config['base_path'] . '/include/content',\n\t\t\t'exclusions' => array('README', 'index.php'),\n\t\t\t'none_value' => __('Web URL Below'),\n\t\t\t'description' => __('The file that contains the content for this page. This file needs to be in the Cacti \\'include/content/\\' directory.'),\n\t\t\t'value' => (isset($data['contentfile']) ? $data['contentfile']:'')\n\t\t),\n\t\t'fileurl' => array(\n\t\t\t'friendly_name' => __('Web URL Location'),\n\t\t\t'method' => 'textbox',\n\t\t\t'description' => __('The valid URL to use for this external link.  Must include the type, for example http://www.cacti.net.  Note that many websites do not allow them to be embedded in an iframe from a foreign site, and therefore External Linking may not work.'),\n\t\t\t'max_length' => 255,\n\t\t\t'size' => 80,\n\t\t\t'default' => 'http://www.cacti.net',\n\t\t\t'value' => (isset($data['contentfile']) ? $data['contentfile']:'')\n\t\t),\n\t\t'enabled' => array(\n\t\t\t'friendly_name' => __('Enabled'),\n\t\t\t'method' => 'checkbox',\n\t\t\t'description' => __('If checked, the page will be available immediately to the admin user.'),\n\t\t\t'default' => 'on',\n\t\t\t'value' => (isset($data['enabled']) ? 'on':'')\n\t\t),\n\t\t'refresh' => array(\n\t\t\t'friendly_name' => __('Automatic Page Refresh'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'array' => $myrefresh,\n\t\t\t'description' => __('How often do you wish this page to be refreshed automatically.'),\n\t\t\t'value' => (isset($data['refresh']) ? $data['refresh']:'')\n\t\t),\n\t);\n\n\tform_start('links.php', 'link_edit');\n\n\tif (isset($data['title'])) {\n\t\thtml_start_box(__('External Links [edit: %s]', html_escape($data['title'])), '100%', true, '3', 'center', '');\n\t} else {\n\t\thtml_start_box(__('External Links [new]'), '100%', true, '3', 'center', '');\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $field_array\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_save_button('links.php', 'save');\n\n    ?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t// hide and show the extra console fields when necessary\n\t\t$('#style').change(function() {\n\t\t\tif ($('#style').val() != 'CONSOLE') {\n\t\t\t\t$('#row_consolesection').hide();\n\t\t\t\t$('#row_consolenewsection').hide();\n\t\t\t} else {\n\t\t\t\t$('#row_consolesection').show();\n\t\t\t\tsetConsoleNewSectionVisibity();\n\t\t\t}\n\t\t}).change();\n\n\t\t$('#filename').change(function() {\n\t\t\tchangeFilename();\n\t\t}).change();\n\n\t\t// if you change the section, make the 'new' textbox reflect it\n\t\t// if you change it to 'new', then clear the textbox, and jump to it\n\t\t$('#consolesection').change(function() {\n\t\t\tsetConsoleNewSectionVisibity();\n\t\t}).change();\n\t});\n\n\tfunction setConsoleNewSectionVisibity() {\n\t\tif ($('#consolesection').val() == '__NEW__') {\n\t\t\t$('#row_consolenewsection').show();\n\t\t\t$('#consolenewsection').focus();\n\t\t} else {\n\t\t\t$('#row_consolenewsection').hide();\n\t\t}\n\t}\n\n\tfunction changeFilename() {\n\t\tif ($('#filename').val() == 0) {\n\t\t\t$('#row_fileurl').show();\n\t\t} else {\n\t\t\t$('#row_fileurl').hide();\n\t\t}\n\t}\n\n\t</script>\n\t<?php\n}\n\n// vim:ts=4:sw=4:\n", "<?php\n/*\n   +-------------------------------------------------------------------------+\n   | Copyright (C) 2004-2018 The Cacti Group                                 |\n   |                                                                         |\n   | This program is free software; you can redistribute it and/or           |\n   | modify it under the terms of the GNU General Public License             |\n   | as published by the Free Software Foundation; either version 2          |\n   | of the License, or (at your option) any later version.                  |\n   |                                                                         |\n   | This program is snmpagent in the hope that it will be useful,           |\n   | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n   | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n   | GNU General Public License for more details.                            |\n   +-------------------------------------------------------------------------+\n   | Cacti: The Complete RRDtool-based Graphing Solution                     |\n   +-------------------------------------------------------------------------+\n   | This code is designed, written, and maintained by the Cacti Group. See  |\n   | about.php and/or the AUTHORS file for specific developer information.   |\n   +-------------------------------------------------------------------------+\n   | http://www.cacti.net/                                                   |\n   +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n$manager_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Enable'),\n\t3 => __('Disable')\n);\n\n$manager_notification_actions = array(\n\t1 => __('Disable'),\n\t2 => __('Enable')\n);\n\n$tabs_manager_edit = array(\n\t'general'       => __('General'),\n\t'notifications' => __('Notifications'),\n\t'logs'          => __('Logs'),\n);\n\n/* set default action */\nset_default_action();\n\nget_filter_request_var('tab', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tmanager_edit();\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\tmanager();\n\t\tbottom_footer();\n\tbreak;\n}\n\nfunction manager(){\n\tglobal $manager_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'hostname',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_snmp_mgr');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type=\"text/javascript\">\n\tfunction applyFilter() {\n\t\tstrURL  = 'managers.php';\n\t\tstrURL += '?filter=' + $('#filter').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'managers.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_snmpagent_managers').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_start_box( __('SNMP Notification Receivers'), '100%', '', '3', 'center', 'managers.php?action=edit');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t\t<form id='form_snmpagent_managers' action='managers.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Receivers'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where = \"WHERE (sm.hostname LIKE '%\" . get_request_var('filter') . \"%'\n\t\tOR sm.description LIKE '%\" . get_request_var('filter') . \"%')\";\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(sm.id)\n\t\tFROM snmpagent_managers AS sm\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$managers = db_fetch_assoc(\"SELECT sm.id, sm.description,\n\t\tsm.hostname, sm.disabled, smn.count_notify, snl.count_log\n\t\tFROM snmpagent_managers AS sm\n\t\tLEFT JOIN (\n\t\t\tSELECT COUNT(*) as count_notify, manager_id\n\t\t\tFROM snmpagent_managers_notifications\n\t\t\tGROUP BY manager_id\n\t\t) AS smn\n\t\tON smn.manager_id = sm.id\n\t\tLEFT JOIN (\n\t\t\tSELECT COUNT(*) as count_log, manager_id\n\t\t\tFROM snmpagent_notifications_log\n\t\t\tGROUP BY manager_id\n\t\t) AS snl\n\t\tON snl.manager_id = sm.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$display_text = array(\n\t\t'description'  => array( __('Description'), 'ASC'),\n\t\t'id'           => array( __('Id'), 'ASC'),\n\t\t'disabled'     => array( __('Status'), 'ASC'),\n\t\t'hostname'     => array( __('Hostname'), 'ASC'),\n\t\t'count_notify' => array( __('Notifications'), 'ASC'),\n\t\t'count_log'    => array( __('Logs'), 'ASC')\n\t);\n\n\t/* generate page list */\n\t$nav = html_nav_bar('managers.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Receivers'), 'page', 'main');\n\n\tform_start('managers.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($managers)) {\n\t\tforeach ($managers as $item) {\n\t\t\t$description = filter_value($item['description'], get_request_var('filter'));\n\t\t\t$hostname    = filter_value($item['hostname'], get_request_var('filter'));\n\t\t\tform_alternate_row('line' . $item['id'], false);\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"managers.php?action=edit&id=' . $item['id'] . '\">' . $description . '</a>', $item['id']);\n\t\t\tform_selectable_cell($item['id'], $item['id']);\n\t\t\tform_selectable_cell($item['disabled'] ? '<span class=\"deviceDown\">' . __('Disabled') . '</span>' : '<span class=\"deviceUp\">' . __('Enabled') . '</span>', $item['id']);\n\t\t\tform_selectable_cell($hostname, $item['id']);\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"managers.php?action=edit&tab=notifications&id=' . $item['id'] . '\">' . ($item['count_notify'] ? $item['count_notify'] : 0) . '</a>' , $item['id']);\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"managers.php?action=edit&tab=logs&id=' . $item['id'] . '\">' . ($item['count_log'] ? $item['count_log'] : 0 ) . '</a>', $item['id']);\n\t\t\tform_checkbox_cell($item['description'], $item['id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td><em>' . __('No SNMP Notification Receivers') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($managers)) {\n\t\tprint $nav;\n\t}\n\n\tform_hidden_box('action_receivers', '1', '');\n\n\tdraw_actions_dropdown($manager_actions);\n\n\tform_end();\n}\n\nfunction manager_edit() {\n\tglobal $config, $snmp_auth_protocols, $snmp_priv_protocols, $snmp_versions,\n\t\t$tabs_manager_edit, $fields_manager_edit, $manager_notification_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isset_request_var('tab')) {\n\t\tset_request_var('tab', 'general');\n\t}\n\t$id\t= (isset_request_var('id') ? get_request_var('id') : '0');\n\n\tif ($id) {\n\t\t$manager = db_fetch_row_prepared('SELECT * FROM snmpagent_managers WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('SNMP Notification Receiver [edit: %s]', html_escape($manager['description']));\n\t} else {\n\t\t$header_label = __('SNMP Notification Receiver [new]');\n\t}\n\n\tif (cacti_sizeof($tabs_manager_edit) && isset_request_var('id')) {\n\t\t$i = 0;\n\n\t\t/* draw the tabs */\n\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\";\n\n\t\tforeach (array_keys($tabs_manager_edit) as $tab_short_name) {\n\t\t\tif (($id == 0 & $tab_short_name != 'general')){\n\t\t\t\tprint \"<li class='subTab'><a href='#' \" . (($tab_short_name == get_request_var('tab')) ? \"class='selected'\" : '') . \"'>\" . $tabs_manager_edit[$tab_short_name] . '</a></li>';\n\t\t\t}else {\n\t\t\t\tprint \"<li class='subTab'><a \" . (($tab_short_name == get_request_var('tab')) ? \"class='selected'\" : '') .\n\t\t\t\t\t\" href='\" . html_escape($config['url_path'] .\n\t\t\t\t\t'managers.php?action=edit&id=' . get_request_var('id') .\n\t\t\t\t\t'&tab=' . $tab_short_name) .\n\t\t\t\t\t\"'>\" . $tabs_manager_edit[$tab_short_name] . '</a></li>';\n\t\t\t}\n\n\t\t\t$i++;\n\t\t}\n\n\t\tprint '</ul></nav></div>';\n\n\t\tif (read_config_option('legacy_menu_nav') != 'on') { ?>\n\t\t<script type='text/javascript'>\n\n\t\t$(function() {\n\t\t\t$('.subTab').find('a').click(function(event) {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tstrURL  = $(this).attr('href');\n\t\t\t\tstrURL += (strURL.indexOf('?') > 0 ? '&':'?') + 'header=false';\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t});\n\t\t});\n\t\t</script>\n\t\t<?php }\n\t}\n\n\tswitch(get_request_var('tab')){\n\t\tcase 'notifications':\n\t\t\tmanager_notifications($id, $header_label);\n\n\t\t\tbreak;\n\t\tcase 'logs':\n\t\t\tmanager_logs($id, $header_label);\n\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tform_start('managers.php');\n\n\t\t\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\t\t\tdraw_edit_form(\n\t\t\t\tarray(\n\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t'fields' => inject_form_variables($fields_manager_edit, (isset($manager) ? $manager : array()))\n\t\t\t\t)\n\t\t\t);\n\n\t\t\thtml_end_box(true, true);\n\n\t\t\tform_save_button('managers.php', 'return');\n\n\t\t\t?>\n\t\t\t<script type='text/javascript'>\n\n\t\t\t// Need to set this for global snmpv3 functions to remain sane between edits\n\t\t\tsnmp_security_initialized = false;\n\n\t\t\t$(function() {\n\t\t\t\tsetSNMP();\n\t\t\t});\n\t\t\t</script>\n\t\t\t<?php\n\t}\n\n\t?>\n\t<script language='javascript' type='text/javascript' >\n\t\t$('.tooltip').tooltip({\n\t\t\ttrack: true,\n\t\t\tposition: { collision: 'flipfit' },\n\t\t\tcontent: function() { return $(this).attr('title'); }\n\t\t});\n\t</script>\n\t<?php\n}\n\nfunction manager_notifications($id, $header_label) {\n\tglobal $item_rows, $manager_notification_actions;\n\n\t$mibs = db_fetch_assoc('SELECT DISTINCT mib FROM snmpagent_cache');\n\t$registered_mibs = array();\n\tif ($mibs && $mibs >0) {\n\t\tforeach($mibs as $mib) { $registered_mibs[] = $mib['mib']; }\n\t}\n\n\t/* ================= input validation ================= */\n\tif (!$id | !is_numeric($id)) {\n\t\tdie_html_input_error();\n\t}\n\n\tif (!in_array(get_request_var('mib'), $registered_mibs) && get_request_var('mib') != '-1' && get_request_var('mib') != '') {\n\t\tdie_html_input_error();\n\t}\n\t/* ==================================================== */\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'mib' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_snmp_cache');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', '');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'managers.php?action=edit&tab=notifications&id=<?php echo $id; ?>';\n\t\tstrURL += '&mib=' + $('#mib').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'managers.php?action=edit&tab=notifications&id=<?php echo $id; ?>&clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_snmpagent_managers').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t\t<form id='form_snmpagent_managers' name='form_snmpagent_managers' action='managers.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('MIB');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='mib' name='mib' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('mib') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($mibs)) {\n\t\t\t\t\t\t\t\t\tforeach ($mibs as $mib) {\n\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $mib['mib'] . \"'\"; if (get_request_var('mib') == $mib['mib']) { print ' selected'; } print '>' . $mib['mib'] . '</option>';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Receivers');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . '</option>';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = \" AND `kind`='Notification'\";\n\n\t/* filter by host */\n\tif (get_request_var('mib') == '-1') {\n\t\t/* Show all items */\n\t} elseif (!isempty_request_var('mib')) {\n\t\t$sql_where .= \" AND snmpagent_cache.mib='\" . get_request_var('mib') . \"'\";\n\t}\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= \" AND (`oid` LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR `name` LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR `mib` LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\t$sql_where .= ' ORDER by `oid`';\n\n\tform_start('managers.php', 'chk');\n\n\t/* FIXME: Change SQL Queries to not use WHERE 1 */\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*) FROM snmpagent_cache WHERE 1 $sql_where\");\n\n\t$snmp_cache_sql = \"SELECT * FROM snmpagent_cache WHERE 1 $sql_where LIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\t$snmp_cache = db_fetch_assoc($snmp_cache_sql);\n\n\t$registered_notifications = db_fetch_assoc_prepared('SELECT notification, mib FROM snmpagent_managers_notifications WHERE manager_id = ?', array($id));\n\t$notifications = array();\n\tif ($registered_notifications && cacti_sizeof($registered_notifications) > 0) {\n\t\tforeach($registered_notifications as $registered_notification) {\n\t\t\t$notifications[$registered_notification['mib']][$registered_notification['notification']] = 1;\n\t\t}\n\t}\n\n\t$display_text = array(\n\t\t__('Name'),\n\t\t__('OID'),\n\t\t__('MIB'),\n\t\t__('Kind'),\n\t\t__('Max-Access'),\n\t\t__('Monitored')\n\t);\n\n\t/* generate page list */\n\t$nav = html_nav_bar('managers.php?action=edit&id=' . $id . '&tab=notifications&mib=' . get_request_var('mib') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text)+1, __('Notifications'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_checkbox($display_text, true, 'managers.php?action=edit&tab=notifications&id=' . $id);\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tforeach ($snmp_cache as $item) {\n\t\t\t$row_id = $item['mib'] . '__' . $item['name'];\n\t\t\t$oid    = filter_value($item['oid'], get_request_var('filter'));\n\t\t\t$name   = filter_value($item['name'], get_request_var('filter'));\n\t\t\t$mib    = filter_value($item['mib'], get_request_var('filter'));\n\n\t\t\tform_alternate_row('line' . $row_id, false);\n\n\t\t\tif ($item['description']) {\n\t\t\t\tprint '<td><a href=\"#\" title=\"<div class=\\'header\\'>' . $name . '</div><div class=\\'content preformatted\\'>' . $item['description']. '</div>\" class=\"tooltip\">' . $name . '</a></td>';\n\t\t\t}else {\n\t\t\t\tform_selectable_cell($name, $row_id);\n\t\t\t}\n\n\t\t\tform_selectable_cell($oid, $row_id);\n\t\t\tform_selectable_cell($mib, $row_id);\n\t\t\tform_selectable_cell($item['kind'], $row_id);\n\t\t\tform_selectable_cell($item['max-access'],$row_id);\n\t\t\tform_selectable_cell(((isset($notifications[$item['mib']]) && isset($notifications[$item['mib']][$item['name']])) ? '<span class=\"deviceUp\">' .__('Enabled') : '<span class=\"deviceDown\">' .  __('Disabled')) . '</span>', $row_id);\n\t\t\tform_checkbox_cell($item['oid'], $row_id);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td><em>' . __('No SNMP Notifications') . '</em></td></tr>';\n\t}\n\n\t?>\n\t<input type='hidden' name='id' value='<?php print get_request_var('id'); ?>'>\n\t<?php\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tprint $nav;\n\t}\n\n\tdraw_actions_dropdown($manager_notification_actions);\n\n    form_end();\n}\n\nfunction manager_logs($id, $header_label) {\n\t$severity_levels = array(\n\t\tSNMPAGENT_EVENT_SEVERITY_LOW      => 'LOW',\n\t\tSNMPAGENT_EVENT_SEVERITY_MEDIUM   => 'MEDIUM',\n\t\tSNMPAGENT_EVENT_SEVERITY_HIGH     => 'HIGH',\n\t\tSNMPAGENT_EVENT_SEVERITY_CRITICAL => 'CRITICAL'\n\t);\n\n\t$severity_colors = array(\n\t\tSNMPAGENT_EVENT_SEVERITY_LOW      => '#00FF00',\n\t\tSNMPAGENT_EVENT_SEVERITY_MEDIUM   => '#FFFF00',\n\t\tSNMPAGENT_EVENT_SEVERITY_HIGH     => '#FF0000',\n\t\tSNMPAGENT_EVENT_SEVERITY_CRITICAL => '#FF00FF'\n\t);\n\n\tif (isset_request_var('purge')) {\n\t\tdb_execute_prepared('DELETE FROM snmpagent_notifications_log WHERE manager_id = ?', array($id));\n\t\tset_request_var('clear', true);\n\t}\n\n\t/* ================= input validation ================= */\n\tif (!$id | !is_numeric($id)) {\n\t\tdie_html_input_error();\n\t}\n\n\tif (!in_array(get_request_var('severity'), array_keys($severity_levels)) && get_request_var('severity') != '-1' && get_request_var('severity') != '') {\n\t\tdie_html_input_error();\n\t}\n\n\t/* ==================================================== */\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'severity' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_snmp_logs');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', '');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter(objForm) {\n\t\tstrURL  = '?header=false&severity=' + $('#severity').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&action=edit&tab=logs&id=<?php print get_request_var('id'); ?>';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction showTooltip(e, div, title, desc) {\n\t\tdiv.style.display = 'inline';\n\t\tdiv.style.position = 'fixed';\n\t\tdiv.style.backgroundColor = '#EFFCF0';\n\t\tdiv.style.border = 'solid 1px grey';\n\t\tdiv.style.padding = '10px';\n\t\tdiv.innerHTML = '<b>' + title + '</b><div style=\"padding-left:10px; padding-right:5px;\"><pre>' + desc + '</pre></div>';\n\t\tdiv.style.left = e.clientX + 15 + 'px';\n\t\tdiv.style.top = e.clientY + 15 + 'px';\n\t}\n\n\tfunction hideTooltip(div) {\n\t\tdiv.style.display = 'none';\n\t}\n\n\tfunction highlightStatus(selectID){\n\t\tif ($('#status_' + selectID).val() == 'ON') {\n\t\t\t$('#status_' + selectID).css('background-color', 'LawnGreen');\n\t\t}else {\n\t\t\t$('#status_' + selectID).css('background-color', 'OrangeRed');\n\t\t}\n\t}\n\n\t</script>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form name='form_snmpagent_manager_logs' action='managers.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Severity');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='severity' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('severity') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tforeach ($severity_levels as $level => $name) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $level . \"'\"; if (get_request_var('severity') == $level) { print ' selected'; } print '>' . $name . '</option>';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='purge' value='<?php print __esc('Purge');?>' title='<?php print __esc('Purge Notification Log');?>'>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t\t<input type='hidden' name='tab' value='logs'>\n\t\t\t\t<input type='hidden' id='id' value='<?php print get_request_var('id'); ?>'>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = \" snl.manager_id='\" . $id . \"'\";\n\n\t/* filter by severity */\n\tif (get_request_var('severity') == '-1') {\n\t\t/* Show all items */\n\t} elseif (!isempty_request_var('severity')) {\n\t\t$sql_where .= \" AND snl.severity='\" . get_request_var('severity') . \"'\";\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= \" AND (`varbinds` LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\n\t$sql_where .= ' ORDER by `id` DESC';\n\t$sql_query = \"SELECT snl.*, sc.description\n\t\tFROM snmpagent_notifications_log AS snl\n\t\tLEFT JOIN snmpagent_cache AS sc\n\t\tON sc.name = snl.notification\n\t\tWHERE $sql_where\n\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\tform_start('managers.php', 'chk');\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM snmpagent_notifications_log AS snl\n\t\tWHERE $sql_where\");\n\n\t$logs = db_fetch_assoc($sql_query);\n\n\t$display_text = array(\n\t\t'',\n\t\t__('Time'),\n\t\t__('Notification'),\n\t\t__('Varbinds')\n\t);\n\n\t$nav = html_nav_bar('managers.php?action=exit&id=' . $id . '&tab=logs&mib=' . get_request_var('mib') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text), __('Receivers'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header($display_text);\n\n\tif (cacti_sizeof($logs)) {\n\t\tforeach ($logs as $item) {\n\t\t\t$varbinds = filter_value($item['varbinds'], get_request_var('filter'));\n\n\t\t\tform_alternate_row('line' . $item['id'], true);\n\n\t\t\tprint \"<td title='\" . __esc('Severity Level') . \": \" . $severity_levels[ $item['severity'] ] . \"' style='width:10px;background-color: \" . $severity_colors[ $item['severity'] ] . \";border-top:1px solid white;border-bottom:1px solid white;'></td>\";\n\t\t\tprint \"<td class='nowrap'>\" . date('Y/m/d H:i:s', $item['time']) . '</td>';\n\n\t\t\tif ($item['description']) {\n\t\t\t\t$description = '';\n\t\t\t\t$lines = preg_split( '/\\r\\n|\\r|\\n/', $item['description']);\n\t\t\t\tforeach($lines as $line) {\n\t\t\t\t\t$description .= html_escape(trim($line)) . '<br>';\n\t\t\t\t}\n\t\t\t\tprint '<td><a href=\"#\" onMouseOut=\"hideTooltip(snmpagentTooltip)\" onMouseMove=\"showTooltip(event, snmpagentTooltip, \\'' . $item['notification'] . '\\', \\'' . $description . '\\')\">' . $item['notification'] . '</a></td>';\n\t\t\t}else {\n\t\t\t\tprint \"<td>{$item['notification']}</td>\";\n\t\t\t}\n\t\t\tprint \"<td>$varbinds</td>\";\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td><em>' . __('No SNMP Notification Log Entries') . '</em></td></tr>';\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($logs)) {\n\t\tprint $nav;\n\t}\n\n\t?>\n\t<input type='hidden' name='id' value='<?php print get_filter_request_var('id'); ?>'>\n\t<div style='display:none' id='snmpagentTooltip'></div>\n\t<?php\n}\n\nfunction form_save() {\n\tif (!isset_request_var('tab')) set_request_var('tab', 'general');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('max_log_size');\n\n\tif (!in_array(get_nfilter_request_var('max_log_size'), range(1,31))) {\n\t\t//\tdie_html_input_error();\n\t}\n\t/* ================= input validation ================= */\n\n\tswitch(get_nfilter_request_var('tab')){\n\t\tcase 'notifications':\n\t\t\theader('Location: managers.php?action=edit&tab=notifications&id=' . (empty($manager_id) ? get_request_var('id') : $manager_id) );\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$save['id']                       = get_request_var('id');\n\t\t\t$save['description']              = form_input_validate(trim(get_nfilter_request_var('description')), 'description', '', false, 3);\n\t\t\t$save['hostname']                 = form_input_validate(trim(get_nfilter_request_var('hostname')), 'hostname', '', false, 3);\n\t\t\t$save['disabled']                 = form_input_validate(get_nfilter_request_var('disabled'), 'disabled', '^on$', true, 3);\n\t\t\t$save['max_log_size']             = get_nfilter_request_var('max_log_size');\n\n\t\t\t$save['snmp_version']             = form_input_validate(get_nfilter_request_var('snmp_version'), 'snmp_version', '^[1-3]$', false, 3);\n\t\t\t$save['snmp_community']           = form_input_validate(get_nfilter_request_var('snmp_community'), 'snmp_community', '', true, 3);\n\n\t\t\tif ($save['snmp_version'] == 3) {\n\t\t\t\t$save['snmp_username']        = form_input_validate(get_nfilter_request_var('snmp_username'), 'snmp_username', '', true, 3);\n\t\t\t\t$save['snmp_password']        = form_input_validate(get_nfilter_request_var('snmp_password'), 'snmp_password', '', true, 3);\n\t\t\t\t$save['snmp_auth_protocol']   = form_input_validate(get_nfilter_request_var('snmp_auth_protocol'), 'snmp_auth_protocol', \"^\\[None\\]|MD5|SHA$\", true, 3);\n\t\t\t\t$save['snmp_priv_passphrase'] = form_input_validate(get_nfilter_request_var('snmp_priv_passphrase'), 'snmp_priv_passphrase', '', true, 3);\n\t\t\t\t$save['snmp_priv_protocol']   = form_input_validate(get_nfilter_request_var('snmp_priv_protocol'), 'snmp_priv_protocol', \"^\\[None\\]|DES|AES128$\", true, 3);\n\t\t\t\t$save['snmp_engine_id']       = form_input_validate(get_request_var_post('snmp_engine_id'), 'snmp_engine_id', '', false, 3);\n\t\t\t} else {\n\t\t\t\t$save['snmp_username']        = '';\n\t\t\t\t$save['snmp_password']        = '';\n\t\t\t\t$save['snmp_auth_protocol']   = '';\n\t\t\t\t$save['snmp_priv_passphrase'] = '';\n\t\t\t\t$save['snmp_priv_protocol']   = '';\n\t\t\t\t$save['snmp_engine_id']       = '';\n\t\t\t}\n\n\t\t\t$save['snmp_port']                = form_input_validate(get_nfilter_request_var('snmp_port'), 'snmp_port', '^[0-9]+$', false, 3);\n\t\t\t$save['snmp_message_type']        = form_input_validate(get_nfilter_request_var('snmp_message_type'), 'snmp_message_type', '^[1-2]$', false, 3);\n\t\t\t$save['notes']                    = form_input_validate(get_nfilter_request_var('notes'), 'notes', '', true, 3);\n\n\n\t\t\tif ($save['snmp_version'] == 3 && ($save['snmp_password'] != get_nfilter_request_var('snmp_password_confirm'))) {\n\t\t\t\traise_message(4);\n\t\t\t}\n\n\t\t\tif ($save['snmp_version'] == 3 && ($save['snmp_priv_passphrase'] != get_nfilter_request_var('snmp_priv_passphrase_confirm'))) {\n\t\t\t\traise_message(4);\n\t\t\t}\n\n\t\t\t$manager_id = 0;\n\t\t\tif (!is_error_message()) {\n\t\t\t\t$manager_id = sql_save($save, 'snmpagent_managers');\n\t\t\t\traise_message( ($manager_id)? 1 : 2 );\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\theader('Location: managers.php?action=edit&header=false&id=' . (empty($manager_id) ? get_nfilter_request_var('id') : $manager_id) );\n}\n\nfunction form_actions(){\n\tglobal $manager_actions, $manager_notification_actions;\n\n\tif (isset_request_var('selected_items')) {\n\t\tif (isset_request_var('action_receivers')) {\n\t\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\t\tif ($selected_items != false) {\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\t\tdb_execute('DELETE FROM snmpagent_managers WHERE id IN (' . implode(',' ,$selected_items) . ')');\n\t\t\t\t\tdb_execute('DELETE FROM snmpagent_managers_notifications WHERE manager_id IN (' . implode(',' ,$selected_items) . ')');\n\t\t\t\t\tdb_execute('DELETE FROM snmpagent_notifications_log WHERE manager_id IN (' . implode(',' ,$selected_items) . ')');\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // enable\n\t\t\t\t\tdb_execute(\"UPDATE snmpagent_managers SET disabled = '' WHERE id IN (\" . implode(',' ,$selected_items) . ')');\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // disable\n\t\t\t\t\tdb_execute(\"UPDATE snmpagent_managers SET disabled = 'on' WHERE id IN (\" . implode(',' ,$selected_items) . ')');\n\t\t\t\t}\n\n\t\t\t\theader('Location: managers.php?header=false');\n\t\t\t\texit;\n\t\t\t}\n\t\t} elseif (isset_request_var('action_receiver_notifications')) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tget_filter_request_var('id');\n\t\t\t/* ==================================================== */\n\n\t\t\t$selected_items = unserialize(stripslashes(get_nfilter_request_var('selected_items')));\n\n\t\t\tif ($selected_items !== false) {\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // disable\n\t\t\t\t\tforeach($selected_items as $mib => $notifications) {\n\t\t\t\t\t\tforeach($notifications as $notification => $state) {\n\t\t\t\t\t\t\tdb_execute_prepared('DELETE FROM snmpagent_managers_notifications\n\t\t\t\t\t\t\t\tWHERE `manager_id` = ?\n\t\t\t\t\t\t\t\tAND `mib` = ?\n\t\t\t\t\t\t\t\tAND `notification` = ?\n\t\t\t\t\t\t\t\tLIMIT 1',\n\t\t\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $mib, $notification));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // enable\n\t\t\t\t\tforeach($selected_items as $mib => $notifications) {\n\t\t\t\t\t\tforeach($notifications as $notification => $state) {\n\t\t\t\t\t\t\tdb_execute_prepared('INSERT IGNORE INTO snmpagent_managers_notifications\n\t\t\t\t\t\t\t\t(`manager_id`, `notification`, `mib`)\n\t\t\t\t\t\t\t\tVALUES (?, ?, ?)',\n\t\t\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $notification, $mib));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\theader('Location: managers.php?action=edit&id=' . get_nfilter_request_var('id') . '&tab=notifications&header=false');\n\t\t\texit;\n\t\t}\n\t}else {\n\t\tif (isset_request_var('action_receivers')) {\n\t\t\t$selected_items = array();\n\t\t\t$list = '';\n\t\t\tforeach($_POST as $key => $value) {\n\t\t\t\tif (strstr($key, 'chk_')) {\n\t\t\t\t\t/* grep manager's id */\n\t\t\t\t\t$id = substr($key, 4);\n\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\tinput_validate_input_number($id);\n\t\t\t\t\t/* ==================================================== */\n\t\t\t\t\t$list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT description FROM snmpagent_managers WHERE id = ?', array($id))) . '</li>';\n\t\t\t\t\t$selected_items[] = $id;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttop_header();\n\n\t\t\tform_start('managers.php');\n\n\t\t\thtml_start_box($manager_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\t\t\tif (cacti_sizeof($selected_items)) {\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\t\t$msg = __n('Click \\'Continue\\' to delete the following Notification Receiver', 'Click \\'Continue\\' to delete following Notification Receiver', cacti_sizeof($selected_items));\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // enable\n\t\t\t\t\t$msg = __n('Click \\'Continue\\' to enable the following Notification Receiver', 'Click \\'Continue\\' to enable following Notification Receiver', cacti_sizeof($selected_items));\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // disable\n\t\t\t\t\t$msg = __n('Click \\'Continue\\' to disable the following Notification Receiver', 'Click \\'Continue\\' to disable following Notification Receiver', cacti_sizeof($selected_items));\n\t\t\t\t}\n\n\t\t\t\tprint \"<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>$msg</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$list</ul></div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\";\n\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'><input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('%s Notification Receivers', $manager_actions[get_nfilter_request_var('drp_action')]) . \"'>\";\n\t\t\t} else {\n\t\t\t\traise_message(40);\n\t\t\t\theader('Location: managers.php?header=false');\n\t\t\t\texit;\n\t\t\t}\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='saveRow'>\n\t\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t\t<input type='hidden' name='action_receivers' value='1'>\n\t\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($selected_items) ? serialize($selected_items) : '') . \"'>\n\t\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t\t$save_html\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\thtml_end_box();\n\n\t\t\tform_end();\n\n\t\t\tbottom_footer();\n\t\t}else {\n\t\t\t$selected_items = array();\n\t\t\t$list = '';\n\n\t\t\t/* ================= input validation ================= */\n\t\t\tget_filter_request_var('id');\n\t\t\t/* ==================================================== */\n\n\t\t\tforeach($_POST as $key => $value) {\n\t\t\t\tif (strstr($key, 'chk_')) {\n\t\t\t\t\t/* grep mib and notification name */\n\t\t\t\t\t$row_id = substr($key, 4);\n\t\t\t\t\tlist($mib, $name) = explode('__', $row_id);\n\t\t\t\t\t$list .= '<li>' . html_escape($name) . ' (' . html_escape($mib) .')</li>';\n\t\t\t\t\t$selected_items[$mib][$name] = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttop_header();\n\n\t\t\tform_start('managers.php');\n\n\t\t\thtml_start_box($manager_notification_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\t\t\tif (cacti_sizeof($selected_items)) {\n\t\t\t\t$msg = (get_nfilter_request_var('drp_action') == 2)\n\t\t\t\t\t ? __('Click \\'Continue\\' to forward the following Notification Objects to this Notification Receiver.')\n\t\t\t\t\t : __('Click \\'Continue\\' to disable forwarding the following Notification Objects to this Notification Receiver.');\n\n\t\t\t\tprint \"<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>$msg</p>\n\t\t\t\t\t\t<ul>$list</ul>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\";\n\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Disable Notification Objects') . \"'>\";\n\t\t\t} else {\n\t\t\t\tprint \"<tr><td><span class='textError'>\" . __('You must select at least one notification object.') . \"</span></td></tr>\\n\";\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t}\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='saveRow'>\n\t\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t\t<input type='hidden' name='action_receiver_notifications' value='1'>\n\t\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($selected_items) ? serialize($selected_items) : '') . \"'>\n\t\t\t\t<input type='hidden' name='id' value='\" . get_nfilter_request_var('id') . \"'>\n\t\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t\t$save_html\n\t\t\t\t</td>\n\t\t\t</tr>\";\n\n\t\t\thtml_end_box();\n\n\t\t\tform_end();\n\n\t\t\tbottom_footer();\n\t\t}\n\t}\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n$site_actions = array(\n\t1 => __('Delete')\n);\n\n/* file: sites.php, action: edit */\n$fields_site_edit = array(\n\t'spacer0' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('Site Information'),\n\t\t'collapsible' => 'true'\n\t),\n\t'name' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Name'),\n\t\t'description' => __('The primary name for the Site.'),\n\t\t'value' => '|arg1:name|',\n\t\t'size' => '50',\n\t\t'default' => __('New Site'),\n\t\t'max_length' => '100'\n\t),\n\t'spacer1' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('Address Information'),\n\t\t'collapsible' => 'true'\n\t),\n\t'address1' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Address1'),\n\t\t'description' => __('The primary address for the Site.'),\n\t\t'value' => '|arg1:address1|',\n\t\t'placeholder' => __('Enter the Site Address'),\n\t\t'size' => '70',\n\t\t'max_length' => '100'\n\t),\n\t'address2' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Address2'),\n\t\t'description' => __('Additional address information for the Site.'),\n\t\t'value' => '|arg1:address2|',\n\t\t'placeholder' => __('Additional Site Address information'),\n\t\t'size' => '70',\n\t\t'max_length' => '100'\n\t),\n\t'city' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('City'),\n\t\t'description' => __('The city or locality for the Site.'),\n\t\t'value' => '|arg1:city|',\n\t\t'placeholder' => __('Enter the City or Locality'),\n\t\t'size' => '30',\n\t\t'max_length' => '30'\n\t),\n\t'state' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('State'),\n\t\t'description' => __('The state for the Site.'),\n\t\t'value' => '|arg1:state|',\n\t\t'placeholder' => __('Enter the state'),\n\t\t'size' => '15',\n\t\t'max_length' => '20'\n\t),\n\t'postal_code' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Postal/Zip Code'),\n\t\t'description' => __('The postal or zip code for the Site.'),\n\t\t'value' => '|arg1:postal_code|',\n\t\t'placeholder' => __('Enter the postal code'),\n\t\t'size' => '20',\n\t\t'max_length' => '20'\n\t),\n\t'country' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Country'),\n\t\t'description' => __('The country for the Site.'),\n\t\t'value' => '|arg1:country|',\n\t\t'placeholder' => __('Enter the country'),\n\t\t'size' => '20',\n\t\t'max_length' => '30'\n\t),\n\t'timezone' => array(\n\t\t'method' => 'drop_callback',\n\t\t'friendly_name' => __('TimeZone'),\n\t\t'description' => __('The TimeZone for the Site.'),\n\t\t'sql' => 'SELECT Name AS id, Name AS name FROM mysql.time_zone_name ORDER BY name',\n\t\t'action' => 'ajax_tz',\n\t\t'id' => '|arg1:timezone|',\n\t\t'value' => '|arg1:timezone|'\n\t\t),\n\t'spacer2' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('Geolocation Information'),\n\t\t'collapsible' => 'true'\n\t),\n\t'latitude' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Latitude'),\n\t\t'description' => __('The Latitude for this Site.'),\n\t\t'value' => '|arg1:latitude|',\n\t\t'placeholder' => __('example 38.889488'),\n\t\t'size' => '20',\n\t\t'max_length' => '30'\n\t),\n\t'longitude' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Longitude'),\n\t\t'description' => __('The Longitude for this Site.'),\n\t\t'value' => '|arg1:longitude|',\n\t\t'placeholder' => __('example -77.0374678'),\n\t\t'size' => '20',\n\t\t'max_length' => '30'\n\t),\n\t'zoom' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Zoom'),\n\t\t'description' => __('The default Map Zoom for this Site.  Values can be from 0 to 23. Note that some regions of the planet have a max Zoom of 15.'),\n\t\t'value' => '|arg1:zoom|',\n\t\t'placeholder' => __('0 - 23'),\n\t\t'default' => '12',\n\t\t'size' => '4',\n\t\t'max_length' => '4'\n\t),\n\t'spacer3' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('Additional Information'),\n\t\t'collapsible' => 'true'\n\t),\n\t'notes' => array(\n\t\t'method' => 'textarea',\n\t\t'friendly_name' => __('Notes'),\n\t\t'textarea_rows' => '3',\n\t\t'textarea_cols' => '70',\n\t\t'description' => __('Additional area use for random notes related to this Site.'),\n\t\t'value' => '|arg1:notes|',\n\t\t'max_length' => '255',\n\t\t'placeholder' => __('Enter some useful information about the Site.'),\n\t\t'class' => 'textAreaNotes'\n\t),\n\t'alternate_id' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Alternate Name'),\n\t\t'description' => __('Used for cases where a Site has an alternate named used to describe it'),\n\t\t'value' => '|arg1:alternate_id|',\n\t\t'placeholder' => __('If the Site is known by another name enter it here.'),\n\t\t'size' => '50',\n\t\t'max_length' => '30'\n\t),\n\t'id' => array(\n\t\t'method' => 'hidden_zero',\n\t\t'value' => '|arg1:id|'\n\t),\n\t'save_component_site' => array(\n\t\t'method' => 'hidden',\n\t\t'value' => '1'\n\t)\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'ajax_tz':\n\t\tprint json_encode(db_fetch_assoc_prepared('SELECT Name AS label, Name AS `value`\n\t\t\tFROM mysql.time_zone_name\n\t\t\tWHERE Name LIKE ?\n\t\t\tORDER BY Name\n\t\t\tLIMIT ' . read_config_option('autocomplete_rows'),\n\t\t\tarray('%' . get_nfilter_request_var('term') . '%')));\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tsite_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tsites();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    Global Form Functions\n   -------------------------- */\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tif (isset_request_var('save_component_site')) {\n\t\t$save['id']           = get_filter_request_var('id');\n\t\t$save['name']         = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['address1']     = form_input_validate(get_nfilter_request_var('address1'), 'address1', '', true, 3);\n\t\t$save['address2']     = form_input_validate(get_nfilter_request_var('address2'), 'address2', '', true, 3);\n\t\t$save['city']         = form_input_validate(get_nfilter_request_var('city'), 'city', '', true, 3);\n\t\t$save['state']        = form_input_validate(get_nfilter_request_var('state'), 'state', '', true, 3);\n\t\t$save['postal_code']  = form_input_validate(get_nfilter_request_var('postal_code'), 'postal_code', '', true, 3);\n\t\t$save['country']      = form_input_validate(get_nfilter_request_var('country'), 'country', '', true, 3);\n\t\t$save['timezone']     = form_input_validate(get_nfilter_request_var('timezone'), 'timezone', '', true, 3);\n\t\t$save['latitude']     = form_input_validate(get_nfilter_request_var('latitude'), 'latitude', '^-?[0-9]\\d*(\\.\\d+)?$', true, 3);\n\t\t$save['longitude']    = form_input_validate(get_nfilter_request_var('longitude'), 'longitude', '^-?[0-9]\\d*(\\.\\d+)?$', true, 3);\n\t\t$save['zoom']         = form_input_validate(get_nfilter_request_var('zoom'), 'zoom', '^[0-9]+$', true, 3);\n\t\t$save['alternate_id'] = form_input_validate(get_nfilter_request_var('alternate_id'), 'alternate_id', '', true, 3);\n\t\t$save['notes']        = form_input_validate(get_nfilter_request_var('notes'), 'notes', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$site_id = sql_save($save, 'sites');\n\n\t\t\tif ($site_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: sites.php?header=false&action=edit&id=' . (empty($site_id) ? get_nfilter_request_var('id') : $site_id));\n\t}\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $site_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM sites WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('UPDATE host SET site_id=0 WHERE ' . array_to_sql_or($selected_items, 'site_id'));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: sites.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$site_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$site_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM sites WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$site_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('sites.php');\n\n\thtml_start_box($site_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($site_array) && cacti_sizeof($site_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following Site.  Note, all devices will be disassociated from this site.', 'Click \\'Continue\\' to delete all following Sites.  Note, all devices will be disassociated from this site.', cacti_sizeof($site_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$site_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Site', 'Delete Sites', cacti_sizeof($site_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: sites.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($site_array) ? serialize($site_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* ---------------------\n    Site Functions\n   --------------------- */\n\nfunction site_edit() {\n\tglobal $fields_site_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$site = db_fetch_row_prepared('SELECT * FROM sites WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('Site [edit: %s]', html_escape($site['name']));\n\t} else {\n\t\t$header_label = __('Site [new]');\n\t}\n\n\tform_start('sites.php', 'site');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_site_edit, (isset($site) ? $site : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_save_button('sites.php', 'return');\n}\n\nfunction sites() {\n\tglobal $site_actions, $item_rows, $config;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_site');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box( __('Sites'), '100%', '', '3', 'center', 'sites.php?action=edit');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_site' action='sites.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Sites');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type='text/javascript'>\n\n\t\t\tfunction applyFilter() {\n\t\t\t\tstrURL  = 'sites.php?header=false';\n\t\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = 'sites.php?clear=1&header=false';\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\t$('#refresh').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#form_site').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*) FROM sites $sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$site_list = db_fetch_assoc(\"SELECT sites.*, count(h.id) AS hosts\n\t\tFROM sites\n\t\tLEFT JOIN host AS h\n\t\tON h.site_id=sites.id\n\t\t$sql_where\n\t\tGROUP BY sites.id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('sites.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Sites'), 'page', 'main');\n\n\tform_start('sites.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'    => array('display' => __('Site Name'), 'align' => 'left',  'sort' => 'ASC', 'tip' => __('The name of this Site.')),\n\t\t'id'      => array('display' => __('ID'),        'align' => 'right', 'sort' => 'ASC', 'tip' => __('The unique id associated with this Site.')),\n\t\t'hosts'   => array('display' => __('Devices'),   'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Devices associated with this Site.')),\n\t\t'city'    => array('display' => __('City'),      'align' => 'left',  'sort' => 'DESC', 'tip' => __('The City associated with this Site.')),\n\t\t'state'   => array('display' => __('State'),     'align' => 'left',  'sort' => 'DESC', 'tip' => __('The State associated with this Site.')),\n\t\t'country' => array('display' => __('Country'),   'align' => 'left',  'sort' => 'DESC', 'tip' => __('The Country associated with this Site.')));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($site_list)) {\n\t\tforeach ($site_list as $site) {\n\t\t\t$devices_url = $config['url_path'] . 'host.php?reset=1&site_id=' . $site['id'];\n\t\t\tform_alternate_row('line' . $site['id'], true);\n\t\t\tform_selectable_cell(filter_value($site['name'], get_request_var('filter'), 'sites.php?action=edit&id=' . $site['id']), $site['id']);\n\t\t\tform_selectable_cell($site['id'], $site['id'], '', 'right');\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"' . $devices_url . '\">' . number_format_i18n($site['hosts'], '-1') . '</a>', $site['id'], '', 'right');\n\t\t\tform_selectable_cell($site['city'], $site['id'], '', 'left');\n\t\t\tform_selectable_cell($site['state'], $site['id'], '', 'left');\n\t\t\tform_selectable_cell($site['country'], $site['id'], '', 'left');\n\t\t\tform_checkbox_cell($site['name'], $site['id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='4'><em>\" . __('No Sites Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($site_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($site_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/data_query.php');\n\n$tree_actions = array(\n\t1 => __x('dropdown action', 'Delete'),\n\t2 => __x('dropdown action', 'Publish'),\n\t3 => __x('dropdown action', 'Un Publish')\n);\n\n/* set default action */\nset_default_action();\n\nif (get_request_var('action') != '') {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'tree_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'leaf_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'graph_tree_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'parent_item_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'parent' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '/([_\\-a-z:0-9#]+)/')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'position' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'nodeid' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '/([_\\-a-z:0-9#]+)/')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '/([_\\-a-z:0-9#]+)/')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters);\n\t/* ================= input validation ================= */\n}\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\t\tbreak;\n\tcase 'actions':\n        form_actions();\n        break;\n\tcase 'sortasc':\n\t\ttree_sort_name_asc();\n\t\theader('Location: tree.php?header=false');\n\t\tbreak;\n\tcase 'sortdesc':\n\t\ttree_sort_name_desc();\n\t\theader('Location: tree.php?header=false');\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\ttree_edit();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'sites':\n\t\tdisplay_sites();\n\t\tbreak;\n\tcase 'hosts':\n\t\tdisplay_hosts();\n\t\tbreak;\n\tcase 'graphs':\n\t\tdisplay_graphs();\n\t\tbreak;\n\tcase 'tree_up':\n\t\ttree_up();\n\t\tbreak;\n\tcase 'tree_down':\n\t\ttree_down();\n\t\tbreak;\n\tcase 'ajax_dnd':\n\t\ttree_dnd();\n\t\tbreak;\n\tcase 'lock':\n\t\tapi_tree_lock(get_request_var('id'), $_SESSION['sess_user_id']);\n\n\t\theader('Location: tree.php?action=edit&header=false&id=' . get_request_var('id'));\n\t\tbreak;\n\tcase 'unlock':\n\t\tapi_tree_unlock(get_request_var('id'), $_SESSION['sess_user_id']);\n\n\t\theader('Location: tree.php?action=edit&header=false&id=' . get_request_var('id'));\n\t\tbreak;\n\tcase 'copy_node':\n\t\tapi_tree_copy_node(get_request_var('tree_id'), get_request_var('id'), get_request_var('parent'), get_request_var('position'));\n\t\tbreak;\n\tcase 'create_node':\n\t\tapi_tree_create_node(get_request_var('tree_id'), get_request_var('id'), get_request_var('position'), get_nfilter_request_var('text'));\n\t\tbreak;\n\tcase 'delete_node':\n\t\tapi_tree_delete_node(get_request_var('tree_id'), get_request_var('id'));\n\t\tbreak;\n\tcase 'move_node':\n\t\tapi_tree_move_node(get_request_var('tree_id'), get_request_var('id'), get_request_var('parent'), get_request_var('position'));\n\t\tbreak;\n\tcase 'rename_node':\n\t\tapi_tree_rename_node(get_request_var('tree_id'), get_request_var('id'), get_nfilter_request_var('text'));\n\t\tbreak;\n\tcase 'get_node':\n\t\tapi_tree_get_node(get_request_var('tree_id'), get_request_var('id'));\n\t\tbreak;\n\tcase 'get_host_sort':\n\t\tget_host_sort_type();\n\t\tbreak;\n\tcase 'set_host_sort':\n\t\tset_host_sort_type();\n\t\tbreak;\n\tcase 'get_branch_sort':\n\t\tget_branch_sort_type();\n\t\tbreak;\n\tcase 'set_branch_sort':\n\t\tset_branch_sort_type();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\ttree();\n\t\tbottom_footer();\n\t\tbreak;\n}\n\nfunction tree_get_max_sequence() {\n\t$max_seq = db_fetch_cell('SELECT MAX(sequence) FROM graph_tree');\n\n\tif ($max_seq == NULL) {\n\t\t$max_seq = 0;\n\t}\n}\n\nfunction tree_check_sequences() {\n\t$bad_seq = db_fetch_cell('SELECT COUNT(sequence)\n\t\tFROM graph_tree\n\t\tWHERE sequence <= 0');\n\n\t$dup_seq = db_fetch_cell('SELECT SUM(count)\n\t\tFROM (\n\t\t\tSELECT sequence, COUNT(sequence) AS count\n\t\t\tFROM graph_tree\n\t\t\tGROUP BY sequence\n\t\t) AS t\n\t\tWHERE t.count > 1');\n\n\t// report any bad or duplicate sequencs to the log for reporting purposes\n\tif ($bad_seq > 0) {\n\t\tcacti_log('WARN: Found ' . $bad_seq . ' Sequences in graph_tree Table', false, 'TREE', POLLER_VERBOSITY_HIGH);\n\t}\n\n\tif ($dup_seq > 0) {\n\t\tcacti_log('WARN: Found ' . $dup_seq . ' Sequences in graph_tree Table', false, 'TREE', POLLER_VERBOSITY_HIGH);\n\t}\n\n\tif ($bad_seq > 0 || $dup_seq > 0) {\n\t\t// resequence the list so it has no gaps, and 0 values will appear at the top\n\t\t// since thats where they would have been displayed\n\t\tdb_execute('SET @seq = 0; UPDATE graph_tree SET sequence = (@seq:=@seq+1) ORDER BY sequence, id;');\n\t}\n}\n\nfunction tree_sort_name_asc() {\n\t// resequence the list so it has no gaps, alphabetically ascending\n\tdb_execute('SET @seq = 0; UPDATE graph_tree SET sequence = (@seq:=@seq+1) ORDER BY name;');\n}\n\nfunction tree_sort_name_desc() {\n\t// resequence the list so it has no gaps, alphabetically ascending\n\tdb_execute('SET @seq = 0; UPDATE graph_tree SET sequence = (@seq:=@seq+1) ORDER BY name DESC;');\n}\n\nfunction tree_down() {\n\ttree_check_sequences();\n\n\t$tree_id = get_filter_request_var('id');\n\n\t$seq = db_fetch_cell_prepared('SELECT sequence\n\t\tFROM graph_tree\n\t\tWHERE id = ?',\n\t\tarray($tree_id));\n\n\t$new_seq = $seq + 1;\n\n\t/* update the old tree first */\n\tdb_execute_prepared('UPDATE graph_tree\n\t\tSET sequence = ?\n\t\tWHERE sequence = ?',\n\t\tarray($seq, $new_seq));\n\n\t/* update the tree in question */\n\tdb_execute_prepared('UPDATE graph_tree\n\t\tSET sequence = ?\n\t\tWHERE id = ?',\n\t\tarray($new_seq, $tree_id));\n\n\theader('Location: tree.php?header=false');\n\texit;\n}\n\nfunction tree_up() {\n\ttree_check_sequences();\n\n\t$tree_id = get_filter_request_var('id');\n\n\t$seq = db_fetch_cell_prepared('SELECT sequence\n\t\tFROM graph_tree\n\t\tWHERE id = ?',\n\t\tarray($tree_id));\n\n\t$new_seq = $seq - 1;\n\n\t/* update the old tree first */\n\tdb_execute_prepared('UPDATE graph_tree\n\t\tSET sequence = ?\n\t\tWHERE sequence = ?',\n\t\tarray($seq, $new_seq));\n\n\t/* update the tree in question */\n\tdb_execute_prepared('UPDATE graph_tree\n\t\tSET sequence = ?\n\t\tWHERE id = ?',\n\t\tarray($new_seq, $tree_id));\n\n\theader('Location: tree.php?header=false');\n\texit;\n}\n\nfunction tree_dnd() {\n\tif (isset_request_var('tree_ids') && is_array(get_nfilter_request_var('tree_ids'))) {\n\t\t$tids     = get_nfilter_request_var('tree_ids');\n\t\t$sequence = 1;\n\n\t\tforeach($tids as $id) {\n\t\t\t$id = str_replace('line', '', $id);\n\t\t\tinput_validate_input_number($id);\n\n\t\t\tdb_execute_prepared('UPDATE graph_tree\n\t\t\t\tSET sequence = ?\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($sequence, $id));\n\n\t\t\t$sequence++;\n\t\t}\n\t}\n\n\theader('Location: tree.php?header=false');\n\texit;\n}\n\nfunction get_host_sort_type() {\n\tif (isset_request_var('nodeid')) {\n\t\t$ndata = explode('_', get_request_var('nodeid'));\n\t\tif (cacti_sizeof($ndata)) {\n\t\t\tforeach($ndata as $n) {\n\t\t\t\t$parts = explode(':', $n);\n\n\t\t\t\tif (isset($parts[0]) && $parts[0] == 'tbranch') {\n\t\t\t\t\t$branch = $parts[1];\n\t\t\t\t\tinput_validate_input_number($branch);\n\n\t\t\t\t\t$sort_type = db_fetch_cell_prepared('SELECT host_grouping_type\n\t\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($branch));\n\n\t\t\t\t\tif ($sort_type == HOST_GROUPING_GRAPH_TEMPLATE) {\n\t\t\t\t\t\tprint 'hsgt';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint 'hsdq';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn '';\n\t}\n}\n\nfunction set_host_sort_type() {\n\t$type   = '';\n\t$branch = '';\n\n\t/* clean up type string */\n\tif (isset_request_var('type')) {\n\t\tset_request_var('type', sanitize_search_string(get_request_var('type')));\n\t}\n\n\tif (isset_request_var('nodeid')) {\n\t\t$ndata = explode('_', get_request_var('nodeid'));\n\t\tif (cacti_sizeof($ndata)) {\n\t\t\tforeach($ndata as $n) {\n\t\t\t\t$parts = explode(':', $n);\n\n\t\t\t\tif (isset($parts[0]) && $parts[0] == 'tbranch') {\n\t\t\t\t\t$branch = $parts[1];\n\t\t\t\t\tinput_validate_input_number($branch);\n\n\t\t\t\t\tif (get_request_var('type') == 'hsgt') {\n\t\t\t\t\t\t$type = HOST_GROUPING_GRAPH_TEMPLATE;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$type = HOST_GROUPING_DATA_QUERY_INDEX;\n\t\t\t\t\t}\n\n\t\t\t\t\tdb_execute_prepared('UPDATE graph_tree_items\n\t\t\t\t\t\tSET host_grouping_type = ?\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($type, $branch));\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn;\n}\n\nfunction get_branch_sort_type() {\n\tif (isset_request_var('nodeid')) {\n\t\t$ndata = explode('_', get_request_var('nodeid'));\n\t\tif (cacti_sizeof($ndata)) {\n\t\tforeach($ndata as $n) {\n\t\t\t$parts = explode(':', $n);\n\n\t\t\tif (isset($parts[0]) && $parts[0] == 'tbranch') {\n\t\t\t\t$branch = $parts[1];\n\n\t\t\t\tinput_validate_input_number($branch);\n\n\t\t\t\t$sort_type = db_fetch_cell_prepared('SELECT sort_children_type\n\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($branch));\n\n\t\t\t\tswitch($sort_type) {\n\t\t\t\tcase TREE_ORDERING_INHERIT:\n\t\t\t\t\tprint __x('ordering of tree items', 'inherit');\n\t\t\t\t\tbreak;\n\t\t\t\tcase TREE_ORDERING_NONE:\n\t\t\t\t\tprint __x('ordering of tree items', 'manual');\n\t\t\t\t\tbreak;\n\t\t\t\tcase TREE_ORDERING_ALPHABETIC:\n\t\t\t\t\tprint __x('ordering of tree items', 'alpha');\n\t\t\t\t\tbreak;\n\t\t\t\tcase TREE_ORDERING_NATURAL:\n\t\t\t\t\tprint __x('ordering of tree items', 'natural');\n\t\t\t\t\tbreak;\n\t\t\t\tcase TREE_ORDERING_NUMERIC:\n\t\t\t\t\tprint __x('ordering of tree items', 'numeric');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tprint '';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t}\n\t} else {\n\t\tprint '';\n\t}\n}\n\nfunction set_branch_sort_type() {\n\t$type   = '';\n\t$branch = '';\n\n\t/* clean up type string */\n\tif (isset_request_var('type')) {\n\t\tset_request_var('type', sanitize_search_string(get_request_var('type')));\n\t}\n\n\tif (isset_request_var('nodeid')) {\n\t\t$ndata = explode('_', get_request_var('nodeid'));\n\t\tif (cacti_sizeof($ndata)) {\n\t\t\tforeach($ndata as $n) {\n\t\t\t\t$parts = explode(':', $n);\n\n\t\t\t\tif (isset($parts[0]) && $parts[0] == 'tbranch') {\n\t\t\t\t\t$branch = $parts[1];\n\t\t\t\t\tinput_validate_input_number($branch);\n\n\t\t\t\t\tswitch(get_request_var('type')) {\n\t\t\t\t\tcase 'inherit':\n\t\t\t\t\t\t$type = TREE_ORDERING_INHERIT;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t$type = TREE_ORDERING_NONE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'alpha':\n\t\t\t\t\t\t$type = TREE_ORDERING_ALPHABETIC;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'natural':\n\t\t\t\t\t\t$type = TREE_ORDERING_NATURAL;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'numeric':\n\t\t\t\t\t\t$type = TREE_ORDERING_NUMERIC;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (is_numeric($type) && is_numeric($branch)) {\n\t\t\t\t\t\tdb_execute_prepared('UPDATE graph_tree_items\n\t\t\t\t\t\t\tSET sort_children_type = ?\n\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\tarray($type, $branch));\n\t\t\t\t\t}\n\n\t\t\t\t\t$first_child = db_fetch_row_prepared('SELECT id, graph_tree_id\n\t\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\t\tWHERE parent = ?\n\t\t\t\t\t\tORDER BY position\n\t\t\t\t\t\tLIMIT 1',\n\t\t\t\t\t\tarray($branch));\n\n\t\t\t\t\tif (!empty($first_child)) {\n\t\t\t\t\t\tapi_tree_sort_branch($first_child['id'], $first_child['graph_tree_id']);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\nfunction form_save() {\n\t/* clear graph tree cache on save - affects current user only, other users should see changes in <5 minutes */\n\tif (isset($_SESSION['dhtml_tree'])) {\n\t\tunset($_SESSION['dhtml_tree']);\n\t}\n\n\tif (isset_request_var('save_component_tree')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\tif (get_filter_request_var('id') > 0) {\n\t\t\t$prev_order = db_fetch_cell_prepared('SELECT sort_type\n\t\t\t\tFROM graph_tree\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_request_var('id')));\n\t\t} else {\n\t\t\t$prev_order = 1;\n\t\t}\n\n\t\t$save['id']            = get_request_var('id');\n\t\t$save['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['sort_type']     = form_input_validate(get_nfilter_request_var('sort_type'), 'sort_type', '', true, 3);\n\t\t$save['last_modified'] = date('Y-m-d H:i:s', time());\n\t\t$save['enabled']       = get_nfilter_request_var('enabled') == 'true' ? 'on':'-';\n\t\t$save['modified_by']   = $_SESSION['sess_user_id'];\n\n\t\tif (empty($save['sequence'])) {\n\t\t\t$save['sequence'] = tree_get_max_sequence() + 1;\n\t\t}\n\n\t\tif (empty($save['id'])) {\n\t\t\t$save['user_id'] = $_SESSION['sess_user_id'];\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$tree_id = sql_save($save, 'graph_tree');\n\n\t\t\tif ($tree_id) {\n\t\t\t\traise_message(1);\n\n\t\t\t\t/* sort the tree using the algorithm chosen by the user */\n\t\t\t\tif ($save['sort_type'] != $prev_order) {\n\t\t\t\t\tif ($save['sort_type'] != TREE_ORDERING_NONE) {\n\t\t\t\t\t\tsort_recursive(0, $tree_id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader(\"Location: tree.php?header=false&action=edit&id=$tree_id\");\n\t\texit;\n\t}\n}\n\nfunction sort_recursive($branch, $tree_id) {\n\t$leaves = db_fetch_assoc_prepared('SELECT *\n\t\tFROM graph_tree_items\n\t\tWHERE graph_tree_id = ?\n\t\tAND parent = ?\n\t\tAND local_graph_id = 0\n\t\tAND host_id = 0',\n\t\tarray($tree_id, $branch));\n\n\tif (cacti_sizeof($leaves)) {\n\t\tforeach($leaves as $leaf) {\n\t\t\tif ($leaf['sort_children_type'] == TREE_ORDERING_INHERIT) {\n\t\t\t\t$first_child = db_fetch_cell_prepared('SELECT id\n\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\tWHERE parent = ?',\n\t\t\t\t\tarray($leaf['id']));\n\n\t\t\t\tif (!empty($first_child)) {\n\t\t\t\t\tapi_tree_sort_branch($first_child, $tree_id);\n\n\t\t\t\t\tif (leaves_exist($leaf['id'], $tree_id)) {\n\t\t\t\t\t\tsort_recursive($first_child, $tree_id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction leaves_exist($parent, $tree_id) {\n\treturn db_fetch_assoc_prepared('SELECT COUNT(*)\n\t\tFROM graph_tree_items\n\t\tWHERE graph_tree_id = ?\n\t\tAND parent = ?\n\t\tAND local_graph_id = 0\n\t\tAND host_id = 0',\n\t\tarray($tree_id, $parent));\n}\n\n/* -----------------------\n    Tree Item Functions\n   ----------------------- */\nfunction form_actions() {\n\tglobal $tree_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\tdb_execute('DELETE FROM graph_tree WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM graph_tree_items WHERE ' . array_to_sql_or($selected_items, 'graph_tree_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // publish\n\t\t\t\tdb_execute(\"UPDATE graph_tree\n\t\t\t\t\tSET enabled='on',\n\t\t\t\t\tlast_modified=NOW(),\n\t\t\t\t\tmodified_by=\" . $_SESSION['sess_user_id'] . '\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // un-publish\n\t\t\t\tdb_execute(\"UPDATE graph_tree\n\t\t\t\t\tSET enabled='',\n\t\t\t\t\tlast_modified=NOW(),\n\t\t\t\t\tmodified_by=\" . $_SESSION['sess_user_id'] . '\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: tree.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$tree_list = ''; $i = 0;\n\n\t/* loop through each of the selected items */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$tree_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM graph_tree WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$tree_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('tree.php');\n\n\thtml_start_box($tree_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($tree_array) && cacti_sizeof($tree_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following Tree.', 'Click \\'Continue\\' to delete following Trees.', cacti_sizeof($tree_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$tree_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Tree', 'Delete Trees', cacti_sizeof($tree_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // publish\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to publish the following Tree.', 'Click \\'Continue\\' to publish following Trees.', cacti_sizeof($tree_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$tree_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Publish Tree', 'Publish Trees', cacti_sizeof($tree_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // un-publish\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to un-publish the following Tree.', 'Click \\'Continue\\' to un-publish following Trees.', cacti_sizeof($tree_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$tree_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Un-publish Tree', 'Un-publish Trees', cacti_sizeof($tree_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: tree.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($tree_array) ? serialize($tree_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* ---------------------\n    Tree Functions\n   --------------------- */\n\nfunction tree_edit() {\n\tglobal $fields_tree_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('type');\n\t/* ==================================================== */\n\n\t/* clean up search string */\n\tif (isset_request_var('filter')) {\n\t\tset_request_var('filter', sanitize_search_string(get_request_var('filter')));\n\t}\n\n\tload_current_session_value('filter', 'sess_tree_edit_filter', '');\n\tload_current_session_value('type', 'sess_tree_edit_type', '0');\n\n\tif (!isempty_request_var('id')) {\n\t\t$tree = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_tree\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Trees [edit: %s]', html_escape($tree['name']) );\n\n\t\t// Reset the cookie state if tree id has changed\n\t\tif (isset($_SESSION['sess_tree_id']) && $_SESSION['sess_tree_id'] != get_request_var('id')) {\n\t\t\t$select_first = true;\n\t\t} else {\n\t\t\t$select_first = false;\n\t\t}\n\n\t\t$_SESSION['sess_tree_id'] = get_request_var('id');\n\t} else {\n\t\t$tree = array();\n\n\t\t$header_label = __('Trees [new]');\n\t}\n\n\tform_start('tree.php', 'tree_edit');\n\n\t// Remove inherit from the main tree option\n\tunset($fields_tree_edit['sort_type']['array'][0]);\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (!cacti_sizeof($tree)) {\n\t\tunset($fields_tree_edit['enabled']);\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_tree_edit, (isset($tree) ? $tree : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t$lockdiv = '';\n\n\tif (isset($tree['locked']) && $tree['locked'] == 0) {\n\t\t$lockdiv = \"<div style='padding:3px;'><table><tr><td><input type='button' class='ui-button ui-corner-all ui-widget' id='lock' value='\" . __esc('Edit Tree') . \"'></td><td style='font-weight:bold;'>\" . __('To Edit this tree, you must first lock it by pressing the Edit Tree button.') . \"</td></tr></table></div>\\n\";\n\t\t$editable = false;\n\t} elseif (isset($tree['locked']) && $tree['locked'] == 1) {\n\t\t$lockdiv = \"<div style='padding:3px;'><table><tr><td><input type='button' class='ui-button ui-corner-all ui-widget' id='unlock' value='\" . __esc('Finish Editing Tree') . \"'></td><td><input type='button' class='ui-button ui-corner-all ui-widget' id='addbranch' value='\" . __esc('Add Root Branch') . \"' onClick='createNode()'></td><td style='font-weight:bold;'>\" . __('This tree has been locked for Editing on %1$s by %2$s.', $tree['locked_date'], get_username($tree['modified_by']));\n\t\tif ($tree['modified_by'] == $_SESSION['sess_user_id']) {\n\t\t\t$editable = true;\n\t\t\t$lockdiv .= '</td></tr></table></div>';\n\t\t} else {\n\t\t\t$editable = false;\n\t\t\t$lockdiv .= __('To edit the tree, you must first unlock it and then lock it as yourself') . '</td></tr></table></div>';\n\t\t}\n\t} else {\n\t\t$tree['id'] = 0;\n\t\t$editable = true;\n\t}\n\n\tif ($editable) {\n\t\tform_save_button('tree.php', 'return');\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\tprint $lockdiv;\n\n\t\tprint \"<table class='treeTable' style='width:100%;'>\\n\";\n\n\t\tprint \"<tr class='even' id='tree_filter'>\\n\";\n\t\tprint \"<td colspan='4'>\";\n\t\tprint \"<table><tr><td>\" . __('Display') . \"</td>\";\n\t\tprint \"<td>\\n\";\n\t\tprint \"<select id='element'>\\n\";\n\t\tprint \"<option id='0'>\" . __('All') . \"</option>\";\n\t\tprint \"<option id='1'>\" . __('Sites') . \"</option>\";\n\t\tprint \"<option id='2'>\" . __('Devices') . \"</option>\";\n\t\tprint \"<option id='3'>\" . __('Graphs') . \"</option>\";\n\t\tprint \"</select></td></tr></table></td></tr>\";\n\n\t\tprint \"<tr><td class='treeArea'>\\n\";\n\n\t\thtml_start_box(__('Tree Items'), '100%', '', '3', 'center', '');\n\n\t\tprint \"<tr><td style='padding:7px;'><div id='ctree'></div></td></tr>\\n\";\n\n\t\thtml_end_box();\n\n\t\tprint \"</td><td class='treeItemsArea treeItemsAreaSite'>\\n\";\n\n\t\thtml_start_box(__('Available Sites'), '100%', '', '3', 'center', '');\n\t\t?>\n\t\t<tr class='even noprint'>\n\t\t\t<td>\n\t\t\t<form id='form_tree_sites' action='tree.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='sfilter' name='sfilter' size='25' value='<?php print html_escape_request_var('sfilter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box(false);\n\n\t\t$display_text = array(__('Site Name'));\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\thtml_header($display_text);\n\n\t\tprint \"<tr><td style='padding:7px;'><div id='sites'>\\n\";\n\t\tdisplay_sites();\n\t\tprint \"</div></td></tr>\\n\";\n\n\t\thtml_end_box();\n\n\t\tprint \"</td><td class='treeItemsArea treeItemsAreaDevice'>\\n\";\n\n\t\thtml_start_box(__('Available Devices'), '100%', '', '3', 'center', '');\n\t\t?>\n\t\t<tr class='even noprint'>\n\t\t\t<td>\n\t\t\t<form id='form_tree_devices' action='tree.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='hfilter' name='hfilter' size='25' value='<?php print html_escape_request_var('hfilter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box(false);\n\n\t\t$display_text = array(__('Device Description'));\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\thtml_header($display_text);\n\n\t\tprint \"<tr><td style='padding:7px;'><div id='hosts'>\\n\";\n\t\tdisplay_hosts();\n\t\tprint \"</div></td></tr>\\n\";\n\n\t\thtml_end_box();\n\n\t\tprint \"</td><td class='treeItemsArea treeItemsAreaGraph'>\\n\";\n\n\t\thtml_start_box(__('Available Graphs'), '100%', '', '3', 'center', '');\n\t\t?>\n\t\t<tr class='even noprint'>\n\t\t\t<td>\n\t\t\t<form id='form_tree_graphs' action='tree.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text'  class='ui-state-default ui-corner-all' id='grfilter' name='grfilter' size='25' value='<?php print html_escape_request_var('grfilter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\t\thtml_end_box(false);\n\n\t\t$display_text = array(__('Graph Name'));\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\thtml_header($display_text);\n\n\t\tprint \"<tr><td style='padding:7px;'><div id='graphs'>\\n\";\n\t\tdisplay_graphs();\n\t\tprint \"</div></td></tr>\\n\";\n\n\t\thtml_end_box();\n\n\t\tprint \"</td></tr></table>\\n\";\n\n\t\t?>\n\t\t<script type='text/javascript'>\n\t\t<?php\n\t\tif ($select_first) {\n\t\t\tprint \"var reset=true;\\n\";\n\t\t} else {\n\t\t\tprint \"var reset=false;\\n\";\n\t\t}\n\t\t?>\n\n\t\tvar graphMeTimer;\n\t\tvar hostMeTimer;\n\t\tvar siteMeTimer;\n\t\tvar hostSortInfo   = {};\n\t\tvar branchSortInfo = {};\n\n\t\tfunction createNode() {\n\t\t\tvar ref = $('#ctree').jstree(true);\n\t\t\tsel = ref.create_node('#', '<?php print __('New Node');?>', '0');\n\t\t\tif (sel) {\n\t\t\t\tref.edit(sel);\n\t\t\t}\n\t\t};\n\n\t\tfunction disableTree() {\n\t\t\t$('.treeTable').each(function() {\n\t\t\t\t$(this).mousedown(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tfunction getGraphData() {\n\t\t\t$.get('tree.php?action=graphs&filter='+$('#grfilter').val())\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#graphs').jstree('destroy');\n\t\t\t\t\t$('#graphs').html(data);\n\t\t\t\t\tdragable('#graphs');\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction getHostData() {\n\t\t\t$.get('tree.php?action=hosts&filter='+$('#hfilter').val())\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#hosts').jstree('destroy');\n\t\t\t\t\t$('#hosts').html(data);\n\t\t\t\t\tdragable('#hosts');\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction getSiteData() {\n\t\t\t$.get('tree.php?action=sites&filter='+$('#sfilter').val(), function(data) {\n\t\t\t\t$('#sites').jstree('destroy');\n\t\t\t\t$('#sites').html(data);\n\t\t\t\tdragable('#sites');\n\t\t\t});\n\t\t}\n\n\t\tfunction setHostSortIcon(nodeid) {\n\t\t\tif (hostSortInfo[nodeid]) {\n\t\t\t\t// Already set\n\t\t\t} else {\n\t\t\t\t$.get('tree.php?action=get_host_sort&nodeid='+nodeid)\n\t\t\t\t\t.done(function(data) {\n\t\t\t\t\t\thostSortInfo[nodeid] = data;\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(data) {\n\t\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction setBranchSortIcon(nodeid) {\n\t\t\tif (branchSortInfo[nodeid]) {\n\t\t\t\t// Already set\n\t\t\t} else {\n\t\t\t\t$.get('tree.php?action=get_branch_sort&nodeid='+nodeid)\n\t\t\t\t\t.done(function(data) {\n\t\t\t\t\t\tbranchSortInfo[nodeid] = data;\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(data) {\n\t\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction getHostSortIcon(type, nodeid) {\n\t\t\tif (hostSortInfo[nodeid] == type) {\n\t\t\t\treturn 'fa fa-check';\n\t\t\t} else {\n\t\t\t\treturn 'false';\n\t\t\t}\n\t\t}\n\n\t\tfunction getBranchSortIcon(type, nodeid) {\n\t\t\tif (branchSortInfo[nodeid] == type) {\n\t\t\t\treturn 'fa fa-check';\n\t\t\t} else {\n\t\t\t\treturn 'false';\n\t\t\t}\n\t\t}\n\n\t\tfunction setBranchSortOrder(type, nodeid) {\n\t\t\t$.get('tree.php?action=set_branch_sort&type='+type+'&nodeid='+nodeid)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\tbranchSortInfo[nodeid] = type;\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction setHostSortOrder(type, nodeid) {\n\t\t\t$.get('tree.php?action=set_host_sort&type='+type+'&nodeid='+nodeid)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\thostSortInfo[nodeid] = type;\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}\n\n\t\tgraphsDropSet = '';\n\t\thostsDropSet  = '';\n\t\tsitesDropSet  = '';\n\n\t\t$(function() {\n\t\t\t<?php if ($editable == false) {?>\n\t\t\t$('select, input').not('#lock, #element').each(function() {\n\t\t\t\t$(this).prop('disabled', true);\n\t\t\t\t$(this).addClass('ui-state-disabled');\n\t\t\t\tif ($(this).selectmenu('instance') !== undefined) {\n\t\t\t\t\t$(this).selectmenu('disable');\n\t\t\t\t}\n\t\t\t});\n\t\t\tdisableTree();\n\t\t\t<?php } else {?>\n\t\t\t$('select, input').each(function() {\n\t\t\t\t$(this).prop('disabled', false);\n\t\t\t});\n\t\t\t<?php }?>\n\n\t\t\t$('form').unbind().submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif ($(this).attr('id') == 'tree_edit') {\n\t\t\t\t\t$.post('tree.php', { action: 'save', name: $('#name').val(), sort_type: $('#sort_type').val(), enabled: $('#enabled').is(':checked'), id: $('#id').val(), save_component_tree: 1, __csrf_magic: csrfMagicToken } ).done(function(data) {\n\t\t\t\t\t\t$('#main').html(data);\n\t\t\t\t\t\tapplySkin();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('#lock').click(function() {\n\t\t\t\tstrURL = 'tree.php?action=lock&id=<?php print $tree['id'];?>';\n\t\t\t\tloadPage(strURL);\n\t\t\t});\n\n\t\t\t$('#unlock').click(function() {\n\t\t\t\tstrURL = 'tree.php?action=unlock&id=<?php print $tree['id'];?>';\n\t\t\t\tloadPage(strURL);\n\t\t\t});\n\n\t\t\tvar height  = parseInt($(window).height()-$('#ctree').offset().top-10)+'px';\n\t\t\tvar sheight = parseInt($(window).height()-$('#sites').offset().top-10)+'px';\n\t\t\tvar hheight = parseInt($(window).height()-$('#hosts').offset().top-10)+'px';\n\t\t\tvar gheight = parseInt($(window).height()-$('#graphs').offset().top-10)+'px';\n\n\t\t\t$('#element').change(function() {\n\t\t\t\tresizer();\n\t\t\t});\n\n\t\t\t$(window).resize(function() {\n\t\t\t\tresizer();\n\t\t\t});\n\n\t\t\tfunction resizer() {\n\t\t\t\tif ($('#ctree').length) {\n\t\t\t\t\theight  = parseInt($(window).height()-$('#ctree').offset().top-10)+'px';\n\t\t\t\t\tsheight = parseInt($(window).height()-$('#sites').offset().top-10)+'px';\n\t\t\t\t\thheight = parseInt($(window).height()-$('#hosts').offset().top-10)+'px';\n\t\t\t\t\tgheight = parseInt($(window).height()-$('#graphs').offset().top-10)+'px';\n\t\t\t\t\t$('#ctree').css('height', height).css('overflow','auto');;\n\t\t\t\t\t$('#hosts').css('height', hheight).css('overflow','auto');;\n\t\t\t\t\t$('#sites').css('height', hheight).css('overflow','auto');;\n\t\t\t\t\t$('#graphs').css('height', gheight).css('overflow','auto');;\n\n\t\t\t\t\tswitchDisplay();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction switchDisplay() {\n\t\t\t\tvar selected = $('#element').prop('selectedIndex');\n\t\t\t\tvar mainWidth = parseInt($('#main').outerWidth());\n\t\t\t\tvar treeWidth = parseInt($('.treeTable').outerWidth());\n\n\t\t\t\tif (selected == 0) {\n\t\t\t\t\tif (mainWidth != treeWidth && treeWidth > 0) {\n\t\t\t\t\t\t$('#element').prop('selectedIndex', 1);\n\t\t\t\t\t\tif (typeof $('#element').selectmenu() === 'object') {\n\t\t\t\t\t\t\t$('#element').selectmenu('refresh');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselected = $('#element').prop('selectedIndex');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tswitch(selected) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\t$('.treeItemsAreaSite').show();\n\t\t\t\t\t\t$('.treeItemsAreaDevice').show();\n\t\t\t\t\t\t$('.treeItemsAreaGraph').show();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t$('.treeItemsAreaSite').show();\n\t\t\t\t\t\t$('.treeItemsAreaDevice').hide();\n\t\t\t\t\t\t$('.treeItemsAreaGraph').hide();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\t$('.treeItemsAreaSite').hide();\n\t\t\t\t\t\t$('.treeItemsAreaDevice').show();\n\t\t\t\t\t\t$('.treeItemsAreaGraph').hide();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\t$('.treeItemsAreaSite').hide();\n\t\t\t\t\t\t$('.treeItemsAreaDevice').hide();\n\t\t\t\t\t\t$('.treeItemsAreaGraph').show();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$(\"#ctree\")\n\t\t\t.jstree({\n\t\t\t\t'types' : {\n\t\t\t\t\t'site' : {\n\t\t\t\t\t\ticon : 'images/site.png',\n\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t},\n\t\t\t\t\t'device' : {\n\t\t\t\t\t\ticon : 'images/server.png',\n\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t},\n\t\t\t\t\t'graph' : {\n\t\t\t\t\t\ticon : 'images/server_chart_curve.png',\n\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'contextmenu' : {\n\t\t\t\t\t'items': function(node) {\n\t\t\t\t\t\tif (node.id.search('tgraph') > 0) {\n\t\t\t\t\t\t\tvar dataType = 'graph';\n\t\t\t\t\t\t}else if (node.id.search('thost') > 0) {\n\t\t\t\t\t\t\tvar dataType = 'host';\n\t\t\t\t\t\t}else if (node.id.search('tsite') > 0) {\n\t\t\t\t\t\t\tvar dataType = 'site';\n\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\tvar dataType = 'branch';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (dataType == 'graph') {\n\t\t\t\t\t\t\treturn graphContext(node.id);\n\t\t\t\t\t\t}else if (dataType == 'host') {\n\t\t\t\t\t\t\treturn hostContext(node.id);\n\t\t\t\t\t\t}else if (dataType == 'site') {\n\t\t\t\t\t\t\treturn siteContext(node.id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn branchContext(node.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'core' : {\n\t\t\t\t\t'data' : {\n\t\t\t\t\t\t'url' : 'tree.php?action=get_node&tree_id='+$('#id').val(),\n\t\t\t\t\t\t'data' : function(node) {\n\t\t\t\t\t\t\treturn { 'id' : node.id }\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'animation' : 0,\n\t\t\t\t\t'check_callback' : true,\n\t\t\t\t\t'force_text' : true\n\t\t\t\t},\n\t\t\t\t'themes' : {\n\t\t\t\t\t'name' : 'default',\n\t\t\t\t\t'responsive' : true,\n\t\t\t\t\t'url' : true,\n\t\t\t\t\t'dots' : false\n\t\t\t\t},\n\t\t\t\t'state': { 'key': 'tree_<?php print get_request_var('id');?>' },\n\t\t\t\t'plugins' : [ 'state', 'wholerow', <?php if ($editable) {?>'contextmenu', 'dnd', <?php }?>'types' ]\n\t\t\t})\n\t\t\t.on('ready.jstree', function(e, data) {\n\t\t\t\tif (reset == true) {\n\t\t\t\t\t$('#ctree').jstree('clear_state');\n\t\t\t\t}\n\t\t\t})<?php if ($editable) {?>.on('delete_node.jstree', function (e, data) {\n\t\t\t\t$.get('?action=delete_node', { 'id' : data.node.id, 'tree_id' : $('#id').val() })\n\t\t\t\t\t.always(function() {\n\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t.on('hover_node.jstree', function (e, data) {\n\t\t\t\tif (data.node.id.search('thost') >= 0) {\n\t\t\t\t\tsetHostSortIcon(data.node.id);\n\t\t\t\t}else if (data.node.id.search('thost') < 0 && data.node.id.search('tgraph') < 0 && data.node.id.search('tsite')) {\n\t\t\t\t\tsetBranchSortIcon(data.node.id);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on('create_node.jstree', function (e, data) {\n\t\t\t\t$.get('?action=create_node', { 'id' : data.node.parent, 'tree_id' : $('#id').val(), 'position' : data.position, 'text' : data.node.text })\n\t\t\t\t\t.done(function (d) {\n\t\t\t\t\t\tdata.instance.set_id(data.node, d.id);\n\t\t\t\t\t\tdata.instance.set_text(data.node, d.text);\n\t\t\t\t\t\tdata.instance.edit(data.node);\n\n\t\t\t\t\t\tif (d.text != '<?php print __('New Node');?>') {\n\t\t\t\t\t\t\t$('.jstree').jstree(true).refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function () {\n\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.on('rename_node.jstree', function (e, data) {\n\t\t\t\t$.get('?action=rename_node', { 'id' : data.node.id, 'tree_id' : $('#id').val(), 'text' : data.text })\n\t\t\t\t\t.done(function (d) {\n\t\t\t\t\t\tif (d.result == 'false') {\n\t\t\t\t\t\t\tdata.instance.set_text(data.node, d.text);\n\t\t\t\t\t\t\tdata.instance.edit(data.node);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(data) {\n\t\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.on('move_node.jstree', function (e, data) {\n\t\t\t\t$.get('?action=move_node', { 'id' : data.node.id, 'tree_id' : $('#id').val(), 'parent' : data.parent, 'position' : data.position })\n\t\t\t\t\t.always(function () {\n\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.on('copy_node.jstree', function (e, data) {\n\t\t\t\toid = data.original.id;\n\n\t\t\t\tif (oid.search('thost') >= 0) {\n\t\t\t\t\tset = hostsDropSet;\n\t\t\t\t}else if (oid.search('tsite') >= 0) {\n\t\t\t\t\tset = sitesDropSet;\n\t\t\t\t} else {\n\t\t\t\t\tset = graphsDropSet;\n\t\t\t\t}\n\n\t\t\t\tif (set != '' && set.selected.length > 0) {\n\t\t\t\t\tentries = set.selected;\n\t\t\t\t\t$.each(entries, function(i, id) {\n\t\t\t\t\t\t$.get('?action=copy_node', { 'id' : id, 'tree_id' : $('#id').val(), 'parent' : data.parent, 'position' : data.position })\n\t\t\t\t\t\t\t.always(function () {\n\t\t\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\n\t\t\t\t\tif (oid.search('thost') >= 0) {\n\t\t\t\t\t\t$('#hosts').jstree().deselect_all();\n\t\t\t\t\t} else if (oid.search('tsite') >= 0) {\n\t\t\t\t\t\t$('#sites').jstree().deselect_all();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#graphs').jstree().deselect_all();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$.get('?action=copy_node', { 'id' : data.original.id, 'tree_id' : $('#id').val(), 'parent' : data.parent, 'position' : data.position })\n\t\t\t\t\t\t.always(function () {\n\t\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})<?php } else {?>.children().bind('contextmenu', function(event) {\n\t\t\t\treturn false;\n\t\t\t})<?php }?>;\n\n\t\t\t$('#ctree').css('height', height).css('overflow','auto');;\n\n\t\t\tdragable('#graphs', 'graphs');\n\t\t\tdragable('#sites',  'sites');\n\t\t\tdragable('#hosts',  'hosts');\n\t\t});\n\n\t\tfunction dragable(element, type) {\n\t\t\t$(element)\n\t\t\t\t.jstree({\n\t\t\t\t\t'types' : {\n\t\t\t\t\t\t'site' : {\n\t\t\t\t\t\t\ticon : 'images/site.png',\n\t\t\t\t\t\t\tvalid_children: 'none',\n\t\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'device' : {\n\t\t\t\t\t\t\ticon : 'images/server.png',\n\t\t\t\t\t\t\tvalid_children: 'none',\n\t\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'graph' : {\n\t\t\t\t\t\t\ticon : 'images/server_chart_curve.png',\n\t\t\t\t\t\t\tvalid_children: 'none',\n\t\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'core' : {\n\t\t\t\t\t\t'animation' : 0,\n\t\t\t\t\t\t'check_callback' : function(operation, node, node_parent, node_position, more) {\n\t\t\t\t\t\t\treturn false;  // not dragging onto self\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'dnd' : {\n\t\t\t\t\t\t'always_copy' : true,\n\t\t\t\t\t\t'check_while_dragging': true\n\t\t\t\t\t},\n\t\t\t\t\t'themes' : { 'stripes' : true },\n\t\t\t\t\t'plugins' : [ 'wholerow', <?php if ($editable) {?>'dnd', <?php }?>'types' ]\n\t\t\t\t})\n\t\t\t\t.on('ready.jstree', function(e, data) {\n\t\t\t\t\tif (reset == true) {\n\t\t\t\t\t\t$('#ctree').jstree('clear_state');\n\t\t\t\t\t}\n\t\t\t\t})<?php if ($editable) {?>\n\t\t\t\t.on('select_node.jstree', function(e, data) {\n\t\t\t\t\tif (type == 'graphs') {\n\t\t\t\t\t\tgraphsDropSet = data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\thostsDropSet  = data;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('deselect_node.jstree', function(e,data) {\n\t\t\t\t\tif (type == 'graphs') {\n\t\t\t\t\t\tgraphsDropSet = data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\thostsDropSet  = data;\n\t\t\t\t\t}\n\t\t\t\t})<?php }?>;\n\t\t\t\t$(element).find('.jstree-ocl').hide();\n\t\t\t\t$(element).children().bind('contextmenu', function(event) {\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t}\n\n\t\tfunction branchContext(nodeid) {\n\t\t\treturn {\n\t\t\t\t'create' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'separator_after'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-folder',\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Create');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.create_node(obj, {}, 'last', function (new_node) {\n\t\t\t\t\t\t\tsetTimeout(function () { inst.edit(new_node); },0);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'rename' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-pencil-alt',\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Rename');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.edit(obj);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'remove' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-times',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Delete');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'bst' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-sort',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Branch Sorting');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'inherit' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('inherit', nodeid),\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Inherit');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('inherit', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function() { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'manual' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('manual', nodeid),\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Manual');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('manual', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function() { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'alpha' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('alpha', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Alphabetic');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('alpha', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function() { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'natural' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('natural', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Natural');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('natural', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function () { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'numeric' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('numeric', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Numeric');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('numeric', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function () { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'ccp' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-edit',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Edit');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'cut' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-cut',\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Cut');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'copy' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-copy',\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Copy');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'paste' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-clipboard',\n\t\t\t\t\t\t\t'_disabled'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\treturn !$.jstree.reference(data.reference).can_paste();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Paste');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tinst.paste(obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction graphContext(nodeid) {\n\t\t\treturn {\n\t\t\t\t'remove' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-times',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'_disabled'\t\t\t: false, //(this.check('delete_node', data.reference, this.get_parent(data.reference), '')),\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Delete');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'ccp' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-edit',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Edit');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'cut' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-cut',\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Cut');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'copy' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-copy',\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Copy');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction siteContext(nodeid) {\n\t\t\treturn {\n\t\t\t\t'remove' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-times',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Delete');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction hostContext(nodeid) {\n\t\t\treturn {\n\t\t\t\t'remove' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-times',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Delete');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'hso' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-sort',\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Sorting Type');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'hsgt' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getHostSortIcon('hsgt', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Graph Template');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetHostSortOrder('hsgt', nodeid);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'hsdq' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getHostSortIcon('hsdq', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Data Query Index');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetHostSortOrder('hsdq', nodeid);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'ccp' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-edit',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Edit');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'cut' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-cut',\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Cut');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'copy' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-copy',\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Copy');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t$('#grfilter').keyup(function(data) {\n\t\t\tgraphMeTimer && clearTimeout(graphMeTimer);\n\t\t\tgraphMeTimer = setTimeout(getGraphData, 300);\n\t\t});\n\n\t\t$('#hfilter').keyup(function(data) {\n\t\t\thostMeTimer && clearTimeout(hostMeTimer);\n\t\t\thostMeTimer = setTimeout(getHostData, 300);\n\t\t});\n\n\t\t$('#sfilter').keyup(function(data) {\n\t\t\tsiteMeTimer && clearTimeout(siteMeTimer);\n\t\t\tsiteMeTimer = setTimeout(getSiteData, 300);\n\t\t});\n\t\t</script>\n\t\t<?php\n\t}\n}\n\nfunction display_sites() {\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE name LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR city LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR state LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR country LIKE '%\" . get_request_var('filter') . \"%'\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$sites = db_fetch_assoc(\"SELECT * FROM sites $sql_where\");\n\n\tif (cacti_sizeof($sites)) {\n\t\tforeach($sites as $s) {\n\t\t\tprint \"<ul><li id='tsite:\" . $s['id'] . \"' data-jstree='{ \\\"type\\\" : \\\"site\\\"}'>\" . $s['name'] . \"</li></ul>\\n\";\n\t\t}\n\t}\n}\n\nfunction display_hosts() {\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"h.hostname LIKE '%\" . get_request_var('filter') . \"%' OR h.description LIKE '%\" . get_request_var('filter') . \"%'\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$hosts = get_allowed_devices($sql_where, 'description', '20');\n\n\tif (cacti_sizeof($hosts)) {\n\t\tforeach($hosts as $h) {\n\t\t\tprint \"<ul><li id='thost:\" . $h['id'] . \"' data-jstree='{ \\\"type\\\" : \\\"device\\\"}'>\" . $h['description'] . ' (' . $h['hostname'] . ')' . \"</li></ul>\\n\";\n\t\t}\n\t}\n}\n\nfunction display_graphs() {\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (title_cache LIKE '%\" . get_request_var('filter') . \"%' OR gt.name LIKE '%\" . get_request_var('filter') . \"%') AND local_graph_id>0\";\n\t} else {\n\t\t$sql_where = 'WHERE local_graph_id>0';\n\t}\n\n\t$graphs = db_fetch_assoc(\"SELECT\n\t\tgtg.local_graph_id AS id,\n\t\tgtg.title_cache AS title,\n\t\tgt.name AS template_name\n\t\tFROM graph_templates_graph AS gtg\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=gtg.graph_template_id\n\t\t$sql_where\n\t\tORDER BY title_cache\n\t\tLIMIT 20\");\n\n\tif (cacti_sizeof($graphs)) {\n\t\tforeach($graphs as $g) {\n\t\t\tif (is_graph_allowed($g['id'])) {\n\t\t\t\tprint \"<ul><li id='tgraph:\" . $g['id'] . \"' data-jstree='{ \\\"type\\\": \\\"graph\\\" }'>\" . html_escape($g['title']) . '</li></ul>';\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction tree() {\n\tglobal $tree_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'sequence',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_tree');\n\t/* ================= input validation ================= */\n\n\t/* if the number of rows is -1, set it to the default */\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction applyFilter() {\n\t\tstrURL  = 'tree.php?rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'tree.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#sorta').click(function() {\n\t\t\tloadPageNoHeader('tree.php?action=sortasc');\n\t\t});\n\n\t\t$('#sortd').click(function() {\n\t\t\tloadPageNoHeader('tree.php?action=sortdesc');\n\t\t});\n\n\t\t$('#form_tree').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\n\t<?php\n\n\t$buttons = array(\n\t\tarray(\n\t\t\t'href'     => 'tree.php?action=edit',\n\t\t\t'callback' => true,\n\t\t\t'title'    => __esc('Add Tree'),\n\t\t\t'class'    => 'fa fa-plus'\n\t\t),\n\t\tarray(\n\t\t\t'href'     => 'tree.php?action=sortasc',\n\t\t\t'callback' => true,\n\t\t\t'title'    => __esc('Sort Trees Ascending'),\n\t\t\t'class'    => 'fa fa-sort-alpha-down'\n\t\t),\n\t\tarray(\n\t\t\t'href'     => 'tree.php?action=sortdesc',\n\t\t\t'callback' => true,\n\t\t\t'title'    => __esc('Sort Trees Descending'),\n\t\t\t'class'    => 'fa fa-sort-alpha-up'\n\t\t)\n\t);\n\n\thtml_start_box(__('Trees'), '100%', '', '3', 'center', $buttons);\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_tree' action='tree.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search'); ?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Trees'); ?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t<button type='button' class='ui-button ui-corner-all ui-widget' id='sorta' title='<?php print __esc('Sort Trees Ascending');?>'><i class='fa fa-sort-alpha-down'></i></button>\n\t\t\t\t\t\t\t<button type='button' class='ui-button ui-corner-all ui-widget' id='sortd' title='<?php print __esc('Sort Trees Descending');?>'><i class='fa fa-sort-alpha-up'></i></button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (t.name LIKE '%\" . get_request_var('filter') . \"%' OR ti.title LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$trees = db_fetch_assoc(\"SELECT t.*,\n\t\tSUM(CASE WHEN ti.host_id > 0 THEN 1 ELSE 0 END) AS hosts,\n\t\tSUM(CASE WHEN ti.local_graph_id > 0 THEN 1 ELSE 0 END) AS graphs,\n\t\tSUM(CASE WHEN ti.local_graph_id = 0 AND host_id = 0 AND site_id = 0 THEN 1 ELSE 0 END) AS branches,\n\t\tSUM(CASE WHEN ti.site_id > 0 THEN 1 ELSE 0 END) AS sites\n\t\tFROM graph_tree AS t\n\t\tLEFT JOIN graph_tree_items AS ti\n\t\tON t.id=ti.graph_tree_id\n\t\t$sql_where\n\t\tGROUP BY t.id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(DISTINCT(ti.graph_tree_id))\n\t\tFROM graph_tree AS t\n\t\tLEFT JOIN graph_tree_items AS ti\n\t\tON t.id=ti.graph_tree_id\n\t\t$sql_where\");\n\n\t$nav = html_nav_bar('tree.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Trees'), 'page', 'main');\n\n\tform_start('tree.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array('display' => __('Tree Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name by which this Tree will be referred to as.')),\n\t\t'id' => array('display' => __('ID'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The internal database ID for this Tree.  Useful when performing automation or debugging.')),\n\t\t'enabled' => array('display' => __('Published'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('Unpublished Trees cannot be viewed from the Graph tab')),\n\t\t'locked' => array('display' => __('Locked'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('A Tree must be locked in order to be edited.')),\n\t\t'user_id' => array('display' => __('Owner'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The original author of this Tree.')),\n\t\t'sequence' => array('display' => __('Order'), 'align' => 'center', 'sort' => 'ASC', 'tip' => __('To change the order of the trees, first sort by this column, press the up or down arrows once they appear.')),\n\t\t'last_modified' => array('display' => __('Last Edited'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The date that this Tree was last edited.')),\n\t\t'modified_by' => array('display' => __('Edited By'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The last user to have modified this Tree.')),\n\t\t'sites' => array('display' => __('Sites'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The total number of Site Branches in this Tree.')),\n\t\t'branches' => array('display' => __('Branches'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The total number of Branches in this Tree.')),\n\t\t'hosts' => array('display' => __('Devices'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The total number of individual Devices in this Tree.')),\n\t\t'graphs' => array('display' => __('Graphs'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The total number of individual Graphs in this Tree.')));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 1;\n\tif (cacti_sizeof($trees)) {\n\t\tforeach ($trees as $tree) {\n\t\t\t$sequence = '';\n\t\t\tif (get_request_var('sort_column') == 'sequence' && get_request_var('sort_direction') == 'ASC') {\n\t\t\t\tif ($i == 1 && cacti_sizeof($trees) == 1) {\n\t\t\t\t\t$sequence .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t$sequence .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t} elseif ($i == 1) {\n\t\t\t\t\t$sequence .= '<a class=\"pic fa fa-caret-down moveArrow\" href=\"' . htmlspecialchars('tree.php?action=tree_down&id=' . $tree['id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t$sequence .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t} elseif ($i == cacti_sizeof($trees)) {\n\t\t\t\t\t$sequence .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t$sequence .= '<a class=\"pic fa fa-caret-up moveArrow\" href=\"' . html_escape('tree.php?action=tree_up&id=' . $tree['id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\n\t\t\t\t} else {\n\t\t\t\t\t$sequence .= '<a class=\"pic fa fa-caret-down moveArrow\" href=\"' . html_escape('tree.php?action=tree_down&id=' . $tree['id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t$sequence .= '<a class=\"pic fa fa-caret-up moveArrow\" href=\"' . html_escape('tree.php?action=tree_up&id=' . $tree['id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $tree['id'], true);\n\t\t\tform_selectable_cell(filter_value($tree['name'], get_request_var('filter'), 'tree.php?action=edit&id=' . $tree['id']), $tree['id']);\n\t\t\tform_selectable_cell($tree['id'], $tree['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($tree['enabled'] == 'on' ? __('Yes'):__('No'), $tree['id']);\n\t\t\tform_selectable_cell($tree['locked'] == '1' ? __('Yes'):__('No'), $tree['id']);\n\t\t\tform_selectable_cell(get_username($tree['user_id']), $tree['id']);\n\t\t\tform_selectable_cell($sequence, $tree['id'], '', 'nowrap center');\n\t\t\tform_selectable_cell(substr($tree['last_modified'],0,16), $tree['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell(get_username($tree['modified_by']), $tree['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($tree['sites'] > 0 ? number_format_i18n($tree['sites'], '-1'):'-', $tree['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($tree['branches'] > 0 ? number_format_i18n($tree['branches'], '-1'):'-', $tree['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($tree['hosts'] > 0 ? number_format_i18n($tree['hosts'], '-1'):'-', $tree['id'], '', 'text-align:right');\n\t\t\tform_selectable_cell($tree['graphs'] > 0 ? number_format_i18n($tree['graphs'], '-1'):'-', $tree['id'], '', 'text-align:right');\n\t\t\tform_checkbox_cell($tree['name'], $tree['id']);\n\t\t\tform_end_row();\n\n\t\t\t$i++;\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='11'><em>\" . __('No Trees Found') . \"</em></td></tr>\";\n\t}\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($trees)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($tree_actions);\n\n\tform_end();\n\n\tif (get_request_var('sort_column') == 'sequence' && get_request_var('sort_direction') == 'ASC') {\n\t\t?>\n\t\t<script type='text/javascript'>\n\t\t$(function() {\n\t\t\t$('#tree2_child').attr('id', 'tree_ids');\n\n\t\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n\t\t\t$('#tree_ids').find('tr:first').addClass('nodrag').addClass('nodrop');\n\n\t\t\t$('#tree_ids').tableDnD({\n\t\t\t\tonDrop: function(table, row) {\n\t\t\t\t\tloadPageNoHeader('tree.php?action=ajax_dnd&'+$.tableDnD.serialize());\n\t\t\t\t}\n\t\t\t});\n\t\t\t<?php } ?>\n\t\t});\n\t\t</script>\n\t\t<?php\n\t}\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n$user_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Copy'),\n\t3 => __('Enable'),\n\t4 => __('Disable'),\n\t5 => __('Batch Copy')\n);\n\nset_default_action();\n\nif (isset_request_var('update_policy')) {\n\tupdate_policies();\n} else {\n\tswitch (get_request_var('action')) {\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'perm_remove':\n\t\tperm_remove();\n\n\t\tbreak;\n\tcase 'user_edit':\n\t\ttop_header();\n\t\tuser_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'checkpass':\n\t\t$error = secpass_check_pass(get_nfilter_request_var('password'));\n\n\t\tif ($error == '') {\n\t\t\tprint $error;\n\t\t} else {\n\t\t\tprint 'ok';\n\t\t}\n\n\t\tbreak;\n\tdefault:\n\t\tif (!api_plugin_hook_function('user_admin_action', get_request_var('action'))) {\n\t\t\ttop_header();\n\t\t\tuser();\n\t\t\tbottom_footer();\n\t\t}\n\n\t\tbreak;\n\t}\n}\n\n/* --------------------------\n    Actions Function\n   -------------------------- */\n\nfunction update_policies() {\n\t$set = '';\n\n\t$set .= isset_request_var('policy_graphs') ? 'policy_graphs=' . get_nfilter_request_var('policy_graphs'):'';\n\t$set .= isset_request_var('policy_trees') ? ($set != '' ? ',':'') . 'policy_trees=' . get_nfilter_request_var('policy_trees'):'';\n\t$set .= isset_request_var('policy_hosts') ? ($set != '' ? ',':'') . 'policy_hosts=' . get_nfilter_request_var('policy_hosts'):'';\n\t$set .= isset_request_var('policy_graph_templates') ? ($set != '' ? ',':'') . 'policy_graph_templates=' . get_nfilter_request_var('policy_graph_templates'):'';\n\n\tif ($set != '') {\n\t\tdb_execute_prepared(\"UPDATE user_auth SET $set WHERE id = ?\", array(get_nfilter_request_var('id')));\n\t}\n\n\theader('Location: user_admin.php?action=user_edit&header=false&tab=' .  get_nfilter_request_var('tab') . '&id=' . get_nfilter_request_var('id'));\n\texit;\n}\n\nfunction form_actions() {\n\tglobal $user_actions, $auth_realms;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('associate_host')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t\t\t(user_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 3)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 3',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&header=false&tab=permsd&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_graph')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t\t\t(user_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 1)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 1',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&header=false&tab=permsg&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_template')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t\t\t(user_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 4)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 4',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&header=false&tab=permste&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_groups')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_members\n\t\t\t\t\t\t(user_id, group_id)\n\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_members\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND group_id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&header=false&tab=permsgr&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_tree')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t\t\t(user_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 2)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 2',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&header=false&tab=permstr&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('selected_items')) {\n\t\tif (get_nfilter_request_var('drp_action') == '2') { /* copy */\n\t\t\t/* ================= input validation ================= */\n\t\t\tget_filter_request_var('selected_items');\n\t\t\tget_filter_request_var('new_realm');\n\t\t\t/* ==================================================== */\n\n\t\t\t$new_username  = get_nfilter_request_var('new_username');\n\t\t\t$new_realm     = get_nfilter_request_var('new_realm', 0);\n\n\t\t\t$template_user = db_fetch_row_prepared('SELECT username, realm\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_nfilter_request_var('selected_items')));\n\n\t\t\t$overwrite     = array( 'full_name' => get_nfilter_request_var('new_fullname') );\n\n\t\t\tif ($new_username != '') {\n\t\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT username FROM user_auth WHERE username = ? AND realm = ?', array($new_username, $new_realm)))) {\n\t\t\t\t\traise_message(19);\n\t\t\t\t} else {\n\t\t\t\t\tif (user_copy($template_user['username'], $new_username, $template_user['realm'], $new_realm, false, $overwrite) === false) {\n\t\t\t\t\t\traise_message(2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message(1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\t\tif ($selected_items != false) {\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t\tuser_remove($selected_items[$i]);\n\n\t\t\t\t\t\tapi_plugin_hook_function('user_remove', $selected_items[$i]);\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // enable\n\t\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t\tuser_enable($selected_items[$i]);\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { // disable\n\t\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t\tuser_disable($selected_items[$i]);\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '5') { // batch copy\n\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\tget_filter_request_var('template_user');\n\t\t\t\t\t/* ==================================================== */\n\n\t\t\t\t\t$copy_error = false;\n\t\t\t\t\t$template = db_fetch_row_prepared('SELECT username, realm\n\t\t\t\t\t\tFROM user_auth\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('template_user')));\n\n\t\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t\t$user = db_fetch_row_prepared('SELECT username, realm\n\t\t\t\t\t\t\tFROM user_auth\n\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\tarray($selected_items[$i]));\n\n\t\t\t\t\t\tif ((isset($user)) && (isset($template))) {\n\t\t\t\t\t\t\tif (user_copy($template['username'], $user['username'], $template['realm'], $user['realm'], true) === false) {\n\t\t\t\t\t\t\t\t$copy_error = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($copy_error) {\n\t\t\t\t\t\traise_message(2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message(1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?header=false');\n\t\texit;\n\t}\n\n\t/* loop through each of the users and process them */\n\t$user_list = '';\n\t$user_array = array();\n\t$i = 0;\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\tif (get_nfilter_request_var('drp_action') != '2') {\n\t\t\t\t$user_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t}\n\t\t\t$user_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('user_admin.php');\n\n\thtml_start_box($user_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($user_array) && cacti_sizeof($user_array)) {\n\t\tif ((get_nfilter_request_var('drp_action') == '1') && (cacti_sizeof($user_array))) { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the selected User(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$user_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'><input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete User(s)') . \"'>\";\n\t\t}\n\t\t$user_id = '';\n\n\t\tif ((get_nfilter_request_var('drp_action') == '2') && (cacti_sizeof($user_array))) { // copy\n\t\t\t$user_id = $user_array[0];\n\t\t\t$user_realm = db_fetch_cell_prepared('SELECT realm FROM user_auth WHERE id = ?', array($user_id));\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to copy the selected User to a new User below.') . \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Template Username:') . \" <i>\" . html_escape(db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array($user_id))) . \"</i></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Username:') . \" \";\n\t\t\tprint form_text_box('new_username', '', '', 25);\n\n\t\t\tprint \"</p></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('Full Name:') . \" \";\n\t\t\tprint form_text_box('new_fullname', '', '', 35);\n\n\t\t\tprint \"</p></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('Realm:') .\" \";\n\t\t\tprint form_dropdown('new_realm', $auth_realms, '', '', $user_realm, '', 0);\n\n\t\t\tprint \"</p></td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Copy User') . \"'>\";\n\t\t}\n\n\t\tif ((get_nfilter_request_var('drp_action') == '3') && (cacti_sizeof($user_array))) { // enable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to enable the selected User(s).'). \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$user_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Enable User(s)') . \"'>\";\n\t\t}\n\n\t\tif ((get_nfilter_request_var('drp_action') == '4') && (cacti_sizeof($user_array))) { // disable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to disable the selected User(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$user_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Disable User(s)') . \"'>\";\n\t\t}\n\n\t\tif ((get_nfilter_request_var('drp_action') == '5') && (cacti_sizeof($user_array))) { // batch copy\n\t\t\t$usernames = db_fetch_assoc('SELECT id, username FROM user_auth WHERE realm = 0 ORDER BY username');\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to overwrite the User(s) settings with the selected template User settings and permissions.  The original users Full Name, Password, Realm and Enable status will be retained, all other fields will be overwritten from Template User.') . \"<br><br></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('Template User:') . \" \";\n\t\t\tprint form_dropdown('template_user', $usernames, 'username', 'id', '', '', 0);\n\n\t\t\tprint \"</p></td>\n\t\t\t\t</tr><tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('User(s) to update:') . \"</p>\n\t\t\t\t\t\t<ul>$user_list</ul>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Reset User(s) Settings') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: user_admin.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\";\n\n\tif (get_nfilter_request_var('drp_action') == '2') { // copy\n\t\tprint \"<input type='hidden' name='selected_items' value='\" . $user_id . \"'>\\n\";\n\t} else {\n\t\tprint \"<input type='hidden' name='selected_items' value='\" . (isset($user_array) ? serialize($user_array) : '') . \"'>\\n\";\n\t}\n\n\tprint \"<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* --------------------------\n    Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tglobal $settings_user;\n\n\t/* graph permissions */\n\tif ((isset_request_var('save_component_graph_perms')) && (!is_error_message())) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('perm_graphs');\n\t\tget_filter_request_var('perm_trees');\n\t\tget_filter_request_var('perm_hosts');\n\t\tget_filter_request_var('perm_graph_templates');\n\t\tget_filter_request_var('policy_graphs');\n\t\tget_filter_request_var('policy_trees');\n\t\tget_filter_request_var('policy_hosts');\n\t\tget_filter_request_var('policy_graph_templates');\n\t\t/* ==================================================== */\n\n\t\t$add_button_clicked = false;\n\n\t\tif (isset_request_var('add_graph_x')) {\n\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t(user_id,item_id,type)\n\t\t\t\tVALUES (?, ?, 1)',\n\t\t\t\tarray(get_nfilter_request_var('id'), get_nfilter_request_var('perm_graphs')));\n\n\t\t\t$add_button_clicked = true;\n\t\t} elseif (isset_request_var('add_tree_x')) {\n\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t(user_id,item_id,type)\n\t\t\t\tVALUES (?, ?, 2)',\n\t\t\t\tarray(get_nfilter_request_var('id'), get_nfilter_request_var('perm_trees')));\n\n\t\t\t$add_button_clicked = true;\n\t\t} elseif (isset_request_var('add_host_x')) {\n\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t(user_id,item_id,type)\n\t\t\t\tVALUES (?, ?, 3)',\n\t\t\t\tarray(get_nfilter_request_var('id'), get_nfilter_request_var('perm_hosts')));\n\n\t\t\t$add_button_clicked = true;\n\t\t} elseif (isset_request_var('add_graph_template_x')) {\n\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t(user_id,item_id,type)\n\t\t\t\tVALUES (?, ?, 4)',\n\t\t\t\tarray(get_nfilter_request_var('id'), get_nfilter_request_var('perm_graph_templates')));\n\n\t\t\t$add_button_clicked = true;\n\t\t}\n\n\t\tif ($add_button_clicked == true) {\n\t\t\theader('Location: user_admin.php?action=user_edit&header=false&tab=graph_perms_edit&id=' . get_nfilter_request_var('id'));\n\t\t\texit;\n\t\t}\n\t} elseif (isset_request_var('save_component_user')) {\n\t\t/* user management save */\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('realm');\n\t\tget_filter_request_var('policy_hosts');\n\t\tget_filter_request_var('policy_graphs');\n\t\tget_filter_request_var('policy_trees');\n\t\tget_filter_request_var('policy_graph_templates');\n\t\t/* ==================================================== */\n\n\t\tif ((get_nfilter_request_var('password') == '') && (get_nfilter_request_var('password_confirm') == '')) {\n\t\t\t$password = db_fetch_cell_prepared('SELECT password\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_nfilter_request_var('id')));\n\t\t} else {\n\t\t\t$password = compat_password_hash(get_nfilter_request_var('password'), PASSWORD_DEFAULT);\n\t\t}\n\n\t\t/* check duplicate username */\n\t\tif (cacti_sizeof(db_fetch_row_prepared('SELECT * FROM user_auth WHERE realm = ? AND username = ? AND id != ?', array(get_nfilter_request_var('realm'), get_nfilter_request_var('username'), get_nfilter_request_var('id'))))) {\n\t\t\traise_message(12);\n\t\t}\n\n\t\t/* check for guest or template user */\n\t\t$username = db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array(get_nfilter_request_var('id')));\n\t\t$history  = db_fetch_cell_prepared('SELECT password_history FROM user_auth WHERE id = ?', array(get_nfilter_request_var('id')));\n\n\t\tif ($username != '' && $username != get_nfilter_request_var('username')) {\n\t\t\tif (get_filter_request_var('id') == get_template_account()) {\n\t\t\t\traise_message(20);\n\t\t\t}\n\n\t\t\tif (get_filter_request_var('id') == get_guest_account()) {\n\t\t\t\traise_message(20);\n\t\t\t}\n\t\t}\n\n\t\t/* check to make sure the passwords match; if not error */\n\t\tif (get_nfilter_request_var('password') != get_nfilter_request_var('password_confirm')) {\n\t\t\traise_message(4);\n\t\t}\n\n\t\tif (get_nfilter_request_var('must_change_password') == 'on' && get_nfilter_request_var('password_change') != 'on') {\n\t\t\traise_message('password_change');\n\t\t}\n\n\t\t$save['id']                   = get_nfilter_request_var('id');\n\t\t$save['username']             = form_input_validate(get_nfilter_request_var('username'), 'username', \"^[A-Za-z0-9\\._\\\\\\@\\ -]+$\", false, 3);\n\t\t$save['full_name']            = form_input_validate(get_nfilter_request_var('full_name'), 'full_name', '', true, 3);\n\t\t$save['password']             = $password;\n\t\t$save['must_change_password'] = form_input_validate(get_nfilter_request_var('must_change_password', ''), 'must_change_password', '', true, 3);\n\t\t$save['password_change']      = form_input_validate(get_nfilter_request_var('password_change', ''), 'password_change', '', true, 3);\n\t\t$save['show_tree']            = form_input_validate(get_nfilter_request_var('show_tree', ''), 'show_tree', '', true, 3);\n\t\t$save['show_list']            = form_input_validate(get_nfilter_request_var('show_list', ''), 'show_list', '', true, 3);\n\t\t$save['show_preview']         = form_input_validate(get_nfilter_request_var('show_preview', ''), 'show_preview', '', true, 3);\n\t\t$save['graph_settings']       = form_input_validate(get_nfilter_request_var('graph_settings', ''), 'graph_settings', '', true, 3);\n\t\t$save['login_opts']           = form_input_validate(get_nfilter_request_var('login_opts'), 'login_opts', '', true, 3);\n\t\t$save['realm']                = get_nfilter_request_var('realm', 0);\n\t\t$save['password_history']     = $history;\n\t\t$save['enabled']              = form_input_validate(get_nfilter_request_var('enabled', ''), 'enabled', '', true, 3);\n\t\t$save['email_address']        = form_input_validate(get_nfilter_request_var('email_address', ''), 'email_address', '', true, 3);\n\t\t$save['locked']               = form_input_validate(get_nfilter_request_var('locked', ''), 'locked', '', true, 3);\n\t\t$save['reset_perms']          = mt_rand();\n\t\tif ($save['locked'] == '') {\n\t\t\t$save['failed_attempts'] = 0;\n\t\t}\n\n\t\t$save = api_plugin_hook_function('user_admin_setup_sql_save', $save);\n\n\t\tif (!is_error_message()) {\n\t\t\t$user_id = sql_save($save, 'user_auth');\n\n\t\t\tif ($user_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\t} elseif (isset_request_var('save_component_realm_perms')) {\n\t\tdb_execute_prepared('DELETE FROM user_auth_realm\n\t\t\tWHERE user_id = ?',\n\t\t\tarray(get_nfilter_request_var('id')));\n\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^[section]/i', $var)) {\n\t\t\t\tif (substr($var, 0, 7) == 'section') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_realm\n\t\t\t\t\t\t(user_id, realm_id)\n\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), substr($var, 7)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treset_user_perms(get_nfilter_request_var('id'));\n\n\t\traise_message(1);\n\t} elseif (isset_request_var('save_component_graph_settings')) {\n\t\tsave_user_settings(get_request_var('id'));\n\n\t\t/* reset local settings cache so the user sees the new settings */\n\t\tkill_session_var('sess_user_config_array');\n\n\t\treset_user_perms(get_request_var('id'));\n\n\t\traise_message(1);\n\t} elseif (isset_request_var('save_component_graph_perms')) {\n\t\tdb_execute_prepared('UPDATE user_auth\n\t\t\tSET policy_graphs = ?,\n\t\t\tpolicy_trees = ?,\n\t\t\tpolicy_hosts = ?,\n\t\t\tpolicy_graph_templates = ?\n\t\t\tWHERE id = ?',\n\t\t\tarray(\n\t\t\t\tget_nfilter_request_var('policy_graphs'),\n\t\t\t\tget_nfilter_request_var('policy_trees'),\n\t\t\t\tget_nfilter_request_var('policy_hosts'),\n\t\t\t\tget_nfilter_request_var('policy_graph_templates'),\n\t\t\t\tget_nfilter_request_var('id')\n\t\t\t)\n\t\t);\n\t} else {\n\t\tapi_plugin_hook('user_admin_user_save');\n\n\t\treset_user_perms(get_filter_request_var('id'));\n\t}\n\n\t/* redirect to the appropriate page */\n\theader('Location: user_admin.php?action=user_edit&header=false&id=' . (empty($user_id) ? get_filter_request_var('id') : $user_id));\n}\n\n/* --------------------------\n    Graph Permissions\n   -------------------------- */\n\nfunction perm_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('user_id');\n\t/* ==================================================== */\n\n\tif (get_request_var('type') == 'graph') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\tWHERE type = 1\n\t\t\tAND user_id = ?\n\t\t\tAND item_id = ?',\n\t\t\tarray(get_request_var('user_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'tree') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\tWHERE type = 2\n\t\t\tAND user_id = ?\n\t\t\tAND item_id = ?',\n\t\t\tarray(get_request_var('user_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'host') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\tWHERE type = 3\n\t\t\tAND user_id = ?\n\t\t\tAND item_id = ?',\n\t\t\tarray(get_request_var('user_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'graph_template') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\tWHERE type = 4\n\t\t\tAND user_id = ?\n\t\t\tAND item_id = ?',\n\t\t\tarray(get_request_var('user_id'), get_request_var('id')));\n\t}\n\n\theader('Location: user_admin.php?action=user_edit&header=false&tab=graph_perms_edit&id=' . get_request_var('user_id'));\n}\n\nfunction get_permission_string(&$graph, &$policies) {\n\t$grantStr  = '';\n\t$rejectStr = '';\n\n\tif (read_config_option('graph_auth_method') == 1) {\n\t\t$method = 'loose';\n\t} else {\n\t\t$method = 'strong';\n\t}\n\n\t$i = 1;\n\tforeach($policies as $p) {\n\t\t$allowed  = 0;\n\t\t$rejected = 0;\n\n\t\tif ($p['policy_graphs'] == 1) {\n\t\t\tif ($graph[\"user$i\"] == '') {\n\t\t\t\t$grantStr  = $grantStr . ($grantStr != '' ? ', ':'') . 'Graph:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t} else {\n\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . 'Graph:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t}\n\t\t} elseif ($graph[\"user$i\"] != '') {\n\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . 'Graph:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t} elseif ($method == 'loose') {\n\t\t\t$rejected++;\n\t\t} else {\n\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . 'Graph:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t}\n\t\t$i++;\n\n\t\tif ($p['policy_hosts'] == 1) {\n\t\t\tif ($graph[\"user$i\"] == '') {\n\t\t\t\tif ($method == 'loose') {\n\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . 'Device:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t\t} else {\n\t\t\t\t\t$allowed++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . 'Device:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t}\n\t\t} elseif ($graph[\"user$i\"] != '') {\n\t\t\tif ($method == 'loose') {\n\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . 'Device:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t} else {\n\t\t\t\t$allowed++;\n\t\t\t}\n\t\t} elseif ($method == 'loose') {\n\t\t\t$rejected++;\n\t\t}\n\t\t$i++;\n\n\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\tif ($graph[\"user$i\"] == '') {\n\t\t\t\tif ($method == 'loose') {\n\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . 'Template:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t\t} else {\n\t\t\t\t\t$allowed++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . 'Template:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t}\n\t\t} elseif ($graph[\"user$i\"] != '') {\n\t\t\tif ($method == 'loose') {\n\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . 'Template:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t} else {\n\t\t\t\t$allowed++;\n\t\t\t}\n\t\t} elseif ($method == 'loose') {\n\t\t\t$rejected++;\n\t\t}\n\t\t$i++;\n\n\t\tif ($method != 'loose') {\n\t\t\tif ($allowed == 2) {\n\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . 'Device+Template:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t} else {\n\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . 'Device+Template:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t}\n\t\t} elseif ($rejected == 3) {\n\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . 'Graph+Device+Template:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t}\n\t}\n\n\t$permStr = '';\n\tif ($grantStr != '') {\n\t\t$permStr = \"<span class='accessGranted'>Granted:</span> <span class='accessGrantedItem'>\" . trim($grantStr,',') . '</span>';\n\t}\n\n\tif ($rejectStr != '') {\n\t\tif ($grantStr == '') {\n\t\t\t$permStr = \"<span class='accessRestricted'>Restricted:</span> <span class='accessRestrictedItem'>\" . trim($rejectStr,',') . '</span>';\n\t\t} else {\n\t\t\t$permStr .= \", <span class='accessRestrictedItem'>\" . trim($rejectStr,',') . '</span>';\n\t\t}\n\t}\n\n\treturn $permStr;\n}\n\nfunction graph_perms_edit($tab, $header_label) {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$sql_where  = '';\n\t$sql_join   = '';\n\t$limit      = '';\n\t$sql_having = '';\n\n\t$policy_array = array(\n\t\t1 => __('Allow'),\n\t\t2 => __('Deny')\n\t);\n\n\tif (!isempty_request_var('id')) {\n\t\t$policy = db_fetch_row_prepared('SELECT policy_graphs, policy_trees, policy_hosts, policy_graph_templates\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?', array(get_request_var('id')));\n\t} else {\n\t\t$policy = array(\n\t\t\t'policy_graphs' => '1',\n\t\t\t'policy_trees'  => '1',\n\t\t\t'policy_hosts'  => '1',\n\t\t\t'policy_graph_templates' => '1'\n\t\t);\n\t}\n\n\tswitch($tab) {\n\tcase 'permsg':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_admin.php&header=false');\n\t\t}\n\n\t\tprocess_graph_request_vars();\n\n\t\tgraph_filter($header_label);\n\n\t\tform_start('user_admin.php', 'policy');\n\n\t\tif (read_config_option('graph_auth_method') == 1) {\n\t\t\t$policy_note = __('<b>Note:</b> System Graph Policy is \\'Permissive\\' meaning the User must have access to at least one of Graph, Device, or Graph Template to gain access to the Graph');\n\t\t} else {\n\t\t\t$policy_note = __('<b>Note:</b> System Graph Policy is \\'Restrictive\\' meaning the User must have access to either the Graph or the Device and Graph Template to gain access to the Graph');\n\t\t}\n\n\t\t/* box: device permissions */\n\t\thtml_start_box(__('Default Graph Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><?php print __('Default Graph Policy for this User');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_graphs',$policy_array,'','',$policy['policy_graphs'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<tr class='even'>\n\t\t\t<td><br><?php print $policy_note;?></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t$user_id = get_request_var('id');\n\n\t\tif (read_config_option('graph_auth_method') == 1) {\n\t\t\t$sql_operator = 'OR';\n\t\t} else {\n\t\t\t$sql_operator = 'AND';\n\t\t}\n\n\t\t$limit = 'LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t/* get policies for all groups and user */\n\t\t$policies   = db_fetch_assoc_prepared(\"SELECT uag.id, 'group' AS type, uag.name,\n\t\t\tpolicy_graphs, policy_hosts, policy_graph_templates\n\t\t\tFROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uag.id = uagm.group_id\n\t\t\tWHERE uag.enabled = 'on' AND uagm.user_id = ?\",\n\t\t\tarray($user_id));\n\n\t\t$policies[] = db_fetch_row_prepared(\"SELECT id, 'user' AS type, 'user' AS name,\n\t\t\tpolicy_graphs, policy_hosts, policy_graph_templates\n\t\t\tFROM user_auth WHERE id = ?\",\n\t\t\tarray($user_id));\n\n\t\tarray_reverse($policies);\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (gtg.title_cache LIKE '%\" . get_request_var('filter') . \"%' AND gtg.local_graph_id > 0)\";\n\t\t} else {\n\t\t\t$sql_where = 'WHERE (gtg.local_graph_id > 0)';\n\t\t}\n\n\t\tif (get_request_var('graph_template_id') == '-1') {\n\t\t\t/* Show all items */\n\t\t} elseif (get_request_var('graph_template_id') == '0') {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gtg.graph_template_id=0';\n\t\t} elseif (!isempty_request_var('graph_template_id')) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gtg.graph_template_id=' . get_request_var('graph_template_id');\n\t\t}\n\n\t\t$i = 1;\n\t\t$user_perm = '';\n\t\t$sql_select = '';\n\t\tforeach($policies as $policy) {\n\t\t\tif ($policy['type'] == 'user' && $user_perm == '') {\n\t\t\t\t$user_perm = $i;\n\t\t\t}\n\n\t\t\tif (get_request_var('associated') == 'false') {\n\t\t\t\tif ($policy['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_having .= ($sql_having != '' ? ' OR ':'') . \" (user$i IS NULL\";\n\t\t\t\t} else {\n\t\t\t\t\t$sql_having .= ($sql_having != '' ? ' OR ':'') . \" (user$i IS NOT NULL\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql_join   .= 'LEFT JOIN user_auth_' . ($policy['type'] == 'user' ? '':'group_') . \"perms AS uap$i ON (gl.id=uap$i.item_id AND uap$i.type=1 AND uap$i.\" . $policy['type'] . '_id=' . get_request_var('id') . ') ';\n\t\t\t$sql_select .= ($sql_select != '' ? ', ':'') . \"uap$i.\" . $policy['type'] . \"_id AS user$i\";\n\t\t\t$i++;\n\n\t\t\tif (get_request_var('associated') == 'false') {\n\t\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t\t$sql_having .= \" OR (user$i IS NULL\";\n\t\t\t\t} else {\n\t\t\t\t\t$sql_having .= \" OR (user$i IS NOT NULL\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql_join   .= 'LEFT JOIN user_auth_' . ($policy['type'] == 'user' ? '':'group_') . \"perms AS uap$i ON (gl.host_id=uap$i.item_id AND uap$i.type=3 AND uap$i.\" . $policy['type'] . '_id=' . get_request_var('id') . ') ';\n\t\t\t$sql_select .= ($sql_select != '' ? ', ':'') . \"uap$i.\" . $policy['type'] . \"_id AS user$i\";\n\t\t\t$i++;\n\n\t\t\tif (get_request_var('associated') == 'false') {\n\t\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t\t$sql_having .= \" $sql_operator user$i IS NULL))\";\n\t\t\t\t} else {\n\t\t\t\t\t$sql_having .= \" $sql_operator user$i IS NOT NULL))\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql_join   .= 'LEFT JOIN user_auth_' . ($policy['type'] == 'user' ? '':'group_') . \"perms AS uap$i ON (gl.graph_template_id=uap$i.item_id AND uap$i.type=4 AND uap$i.\" . $policy['type'] . '_id=' . get_request_var('id') . ') ';\n\t\t\t$sql_select .= ($sql_select != '' ? ', ':'') . \"uap$i.\" . $policy['type'] . \"_id AS user$i\";\n\t\t\t$i++;\n\t\t}\n\n\t\tif ($sql_having != '') {\n\t\t\t$sql_having = 'HAVING ' . $sql_having;\n\t\t}\n\n\t\t$graphs = db_fetch_assoc(\"SELECT gtg.local_graph_id, h.description, gt.name AS template_name,\n\t\t\tgtg.title_cache, gtg.width, gtg.height, gl.snmp_index, gl.snmp_query_id,\n\t\t\t$sql_select\n\t\t\tFROM graph_templates_graph AS gtg\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.id = gtg.local_graph_id\n\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = gl.host_id\n\t\t\t$sql_join\n\t\t\t$sql_where\n\t\t\t$sql_having\n\t\t\tORDER BY gtg.title_cache\n\t\t\t$limit\");\n\n\t\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\t\tFROM (\n\t\t\t\tSELECT $sql_select\n\t\t\t\tFROM graph_templates_graph AS gtg\n\t\t\t\tINNER JOIN graph_local AS gl\n\t\t\t\tON gl.id = gtg.local_graph_id\n\t\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\t\tON gt.id = gl.graph_template_id\n\t\t\t\tLEFT JOIN host AS h\n\t\t\t\tON h.id = gl.host_id\n\t\t\t\t$sql_join\n\t\t\t\t$sql_where\n\t\t\t\t$sql_having\n\t\t\t) AS `rows`\");\n\n\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permsg&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Graphs'), 'page', 'main');\n\n\t\tform_start('user_admin.php?tab=permsg&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array(__('Graph Title'), __('ID'), __('Effective Policy'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tforeach ($graphs as $g) {\n\t\t\t\tform_alternate_row('line' . $g['local_graph_id'], true);\n\t\t\t\tform_selectable_cell(filter_value($g['title_cache'], get_request_var('filter')), $g['local_graph_id']);\n\t\t\t\tform_selectable_cell($g['local_graph_id'], $g['local_graph_id']);\n\t\t\t\tform_selectable_cell(get_permission_string($g, $policies), $g['local_graph_id']);\n\t\t\t\tform_checkbox_cell($g['title_cache'], $g['local_graph_id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Graphs Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_graph', '1', '');\n\n\t\tif ($policy['policy_graphs'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\tcase 'permsgr':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_admin.php&header=false');\n\t\t}\n\n\t\tprocess_group_request_vars();\n\n\t\tgroup_filter($header_label);\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (uag.name LIKE '%\" . get_request_var('filter') . \"%' OR uag.description LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (get_request_var('associated') != 'false') {\n\t\t\t/* Show all items */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' uagm.user_id=' . get_request_var('id');\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT\n\t\t\tCOUNT(DISTINCT uag.id)\n\t\t\tFROM user_auth_group AS uag\n\t\t\tLEFT JOIN (SELECT user_id, group_id FROM user_auth_group_members WHERE user_id=\" . get_request_var('id') . \") AS uagm\n\t\t\tON uag.id = uagm.group_id\n\t\t\t$sql_where\");\n\n\t\t$sql_query = \"SELECT DISTINCT uag.*, uagm.user_id\n\t\t\tFROM user_auth_group AS uag\n\t\t\tLEFT JOIN (SELECT user_id, group_id FROM user_auth_group_members WHERE user_id=\" . get_request_var('id') . \") AS uagm\n\t\t\tON uag.id = uagm.group_id\n\t\t\t$sql_where\n\t\t\tORDER BY name\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$groups = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permsgr&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Groups'), 'page', 'main');\n\n\t\tform_start('user_admin.php?tab=permsd&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array(__('Name'), __('Description'), __('Member'), __('ID'), __('Policies (Graph/Device/Template)'), __('Enabled'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($groups)) {\n\t\t\tforeach ($groups as $g) {\n\t\t\t\tform_alternate_row('line' . $g['id'], true);\n\t\t\t\tform_selectable_cell(filter_value($g['name'], get_request_var('filter'), 'user_group_admin.php?action=edit&id=' . $g['id']), $g['id']);\n\t\t\t\tform_selectable_cell(filter_value($g['description'], get_request_var('filter')), $g['id']);\n\t\t\t\tform_selectable_cell($g['user_id'] > 0 ? __('Member'):__('Non Member'), $g['id']);\n\t\t\t\tform_selectable_cell(($g['id']), $g['id']);\n\t\t\t\tform_selectable_cell(($g['policy_graphs'] == 1 ? __('ALLOW'):__('DENY')) . '/' . ($g['policy_hosts'] == 1 ? __('ALLOW'):__('DENY')) . '/' . ($g['policy_graph_templates'] == 1 ? __('ALLOW'):__('DENY')), $g['id']);\n\t\t\t\tform_selectable_cell($g['enabled'] == 'on' ? __('Enabled'):__('Disabled'), $g['id']);\n\t\t\t\tform_checkbox_cell($g['name'], $g['id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching User Groups Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($groups)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_groups', '1', '');\n\n\t\t$assoc_actions = array(\n\t\t\t1 => __('Assign Membership'),\n\t\t\t2 => __('Remove Membership')\n\t\t);\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\tcase 'permsd':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_admin.php&header=false');\n\t\t}\n\n\t\tprocess_device_request_vars();\n\n\t\tdevice_filter($header_label);\n\n\t\tform_start('user_admin.php', 'policy');\n\n\t\thtml_start_box(__('Default Device Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><?php print __('Default Device Policy for this User');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_hosts',$policy_array,'','',$policy['policy_hosts'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (host.hostname LIKE '%\" . get_request_var('filter') . \"%' OR host.description LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (get_request_var('host_template_id') == '-1') {\n\t\t\t/* Show all items */\n\t\t} elseif (get_request_var('host_template_id') == '0') {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' host.host_template_id=0';\n\t\t} elseif (!isempty_request_var('host_template_id')) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' host.host_template_id=' . get_request_var('host_template_id');\n\t\t}\n\n\t\tif (get_request_var('associated') == 'false') {\n\t\t\t/* Show all items */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' user_auth_perms.user_id=' . get_request_var('id', 0);\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT\n\t\t\tCOUNT(host.id)\n\t\t\tFROM host\n\t\t\tLEFT JOIN user_auth_perms\n\t\t\tON host.id = user_auth_perms.item_id\n\t\t\tAND user_auth_perms.type = 3\n\t\t\tAND user_auth_perms.user_id = \" . get_request_var('id') . \"\n\t\t\t$sql_where\");\n\n\t\t$host_graphs       = array_rekey(\n\t\t\tdb_fetch_assoc('SELECT host_id, count(*) AS graphs\n\t\t\t\tFROM graph_local\n\t\t\t\tGROUP BY host_id'),\n\t\t\t'host_id', 'graphs');\n\n\t\t$host_data_sources = array_rekey(\n\t\t\tdb_fetch_assoc('SELECT host_id, count(*) AS data_sources\n\t\t\t\tFROM data_local\n\t\t\t\tGROUP BY host_id'),\n\t\t\t'host_id', 'data_sources');\n\n\t\t$sql_query = \"SELECT host.*, user_auth_perms.user_id\n\t\t\tFROM host\n\t\t\tLEFT JOIN user_auth_perms\n\t\t\tON host.id = user_auth_perms.item_id\n\t\t\tAND user_auth_perms.type = 3\n\t\t\tAND user_auth_perms.user_id = \" . get_request_var('id') . \"\n\t\t\t$sql_where\n\t\t\tORDER BY description\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$hosts = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permsd&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Devices'), 'page', 'main');\n\n\t\tform_start('user_admin.php?tab=permsd&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array(__('Description'), __('ID'), __('Effective Policy'), __('Graphs'), __('Data Sources'), __('Status'), __('Hostname'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($hosts)) {\n\t\t\tforeach ($hosts as $host) {\n\t\t\t\tform_alternate_row('line' . $host['id'], true);\n\t\t\t\tform_selectable_cell(filter_value($host['description'], get_request_var('filter')), $host['id']);\n\t\t\t\tform_selectable_cell(round(($host['id']), 2), $host['id']);\n\t\t\t\tif (empty($host['user_id']) || $host['user_id'] == NULL) {\n\t\t\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $host['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $host['id']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $host['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $host['id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tform_selectable_cell((isset($host_graphs[$host['id']]) ? $host_graphs[$host['id']] : 0), $host['id']);\n\t\t\t\tform_selectable_cell((isset($host_data_sources[$host['id']]) ? $host_data_sources[$host['id']] : 0), $host['id']);\n\t\t\t\tform_selectable_cell(get_colored_device_status(($host['disabled'] == 'on' ? true : false), $host['status']), $host['id']);\n\t\t\t\tform_selectable_cell(filter_value($host['hostname'], get_request_var('filter')), $host['id']);\n\t\t\t\tform_checkbox_cell($host['description'], $host['id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Devices Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($hosts)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_host', '1', '');\n\n\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\tcase 'permste':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_admin.php&header=false');\n\t\t}\n\n\t\tprocess_template_request_vars();\n\n\t\ttemplate_filter($header_label);\n\n\t\tform_start('user_admin.php', 'policy');\n\n\t\thtml_start_box(__('Default Graph Template Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><?php print __('Default Graph Template Policy for this User');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_graph_templates',$policy_array,'','',$policy['policy_graph_templates'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (gt.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (get_request_var('associated') == 'false') {\n\t\t\t/* Show all items */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_perms.type=4 AND user_auth_perms.user_id=' . get_request_var('id', 0) . ')';\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT COUNT(`rows`)\n\t\t\tFROM (SELECT\n\t\t\t\tCOUNT(DISTINCT gt.id) AS `rows`\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN graph_local AS gl\n\t\t\t\tON gt.id = gl.graph_template_id\n\t\t\t\tLEFT JOIN user_auth_perms\n\t\t\t\tON (gt.id = user_auth_perms.item_id AND user_auth_perms.type = 4 AND user_auth_perms.user_id = \" . get_request_var('id') . \")\n\t\t\t\t$sql_where\n\t\t\t\tGROUP BY gl.graph_template_id\n\t\t\t) AS rs\");\n\n\t\t$sql_query = \"SELECT gt.id, gt.name, count(*) AS totals, user_auth_perms.user_id\n\t\t\tFROM graph_templates AS gt\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN user_auth_perms\n\t\t\tON (gt.id = user_auth_perms.item_id AND user_auth_perms.type = 4 AND user_auth_perms.user_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\n\t\t\tGROUP BY gl.graph_template_id\n\t\t\tORDER BY name\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$graphs = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permste&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Graph Templates'), 'page', 'main');\n\n\t\tform_start('user_admin.php?tab=permste&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array(__('Template Name'), __('ID'), __('Effective Policy'), __('Total Graphs'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tforeach ($graphs as $g) {\n\t\t\t\tform_alternate_row('line' . $g['id'], true);\n\t\t\t\tform_selectable_cell(filter_value($g['name'], get_request_var('filter')), $g['id']);\n\t\t\t\tform_selectable_cell($g['id'], $g['id']);\n\t\t\t\tif (empty($g['user_id']) || $g['user_id'] == NULL) {\n\t\t\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['id']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tform_selectable_cell($g['totals'], $g['id']);\n\t\t\t\tform_checkbox_cell($g['name'], $g['id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Graph Templates Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_template', '1', '');\n\n\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\tcase 'permstr':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_admin.php&header=false');\n\t\t}\n\n\t\tprocess_tree_request_vars();\n\n\t\ttree_filter($header_label);\n\n\t\tform_start('user_admin.php', 'policy');\n\n\t\thtml_start_box(__('Default Tree Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><?php print __('Default Tree Policy for this User');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_trees',$policy_array,'','',$policy['policy_trees'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (gt.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (get_request_var('associated') == 'false') {\n\t\t\t/* showing all rows */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_perms.type=2 AND user_auth_perms.user_id=' . get_request_var('id', 0) . ')';\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT\n\t\t\tCOUNT(DISTINCT gt.id)\n\t\t\tFROM graph_tree AS gt\n\t\t\tLEFT JOIN user_auth_perms\n\t\t\tON gt.id = user_auth_perms.item_id\n\t\t\tAND user_auth_perms.type = 2\n\t\t\tAND user_auth_perms.user_id = \" . get_request_var('id') . \"\n\t\t\t$sql_where\");\n\n\t\t$sql_query = \"SELECT gt.id, gt.name, user_auth_perms.user_id\n\t\t\tFROM graph_tree AS gt\n\t\t\tLEFT JOIN user_auth_perms\n\t\t\tON gt.id = user_auth_perms.item_id\n\t\t\tAND user_auth_perms.type = 2\n\t\t\tAND user_auth_perms.user_id = \" . get_request_var('id') . \"\n\t\t\t$sql_where\n\t\t\tORDER BY name\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$trees = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permstr&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Trees'), 'page', 'main');\n\n\t\tform_start('user_admin.php?tab=permstr&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array(__('Tree Name'), __('ID'), __('Effective Policy'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($trees)) {\n\t\t\tforeach ($trees as $t) {\n\t\t\t\tform_alternate_row('line' . $t['id'], true);\n\t\t\t\tform_selectable_cell(filter_value($t['name'], get_request_var('filter')), $t['id']);\n\t\t\t\tform_selectable_cell($t['id'], $t['id']);\n\t\t\t\tif (empty($t['user_id']) || $t['user_id'] == NULL) {\n\t\t\t\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $t['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $t['id']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $t['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $t['id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tform_checkbox_cell($t['name'], $t['id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Trees Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($trees)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_tree', '1', '');\n\n\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\t}\n}\n\nfunction user_realms_edit($header_label) {\n\tglobal $user_auth_realms, $user_auth_roles;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$all_realms = $user_auth_realms;\n\n\tprint \"<div class='cactiTable' style='width:100%;text-align:left;'>\n\t\t<div>\n\t\t\t<div class='cactiTableTitle'><span style='padding:3px;'>\" . __('User Permissions') . \" $header_label</span></div>\n\t\t\t<div class='cactiTableButton'><span style='padding:3px;'><input class='checkbox' type='checkbox' id='all' name='all' title='\" . __esc('Select All') . \"' onClick='selectAllRealms(this.checked)'></a><label class='formCheckboxLabel' title='\" . __esc('Select All') . \"' for='all'></label></span></div>\n\t\t</div>\n\t</div>\\n\";\n\n\tform_start('user_admin.php', 'chk');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t/* do cacti realms first */\n\t$i = 1;\n\tforeach($user_auth_roles as $role_name => $perms) {\n\t\t$j = 1;\n\n\t\tprint \"<tr class='tableHeader'><th colspan='2'>\" . $role_name . \"</th></tr>\\n\";\n\t\tprint \"<tr class='odd'><td colspan='4' style='width:100%;'><table style='width:100%;'>\\n\";\n\t\tforeach($perms as $realm) {\n\t\t\tif ($j == 1) {\n\t\t\t\tprint \"<tr>\\n\";\n\t\t\t}\n\n\t\t\tprint \"<td class='realms'>\\n\";\n\t\t\tif (isset($user_auth_realms[$realm])) {\n\t\t\t\t$set = db_fetch_cell_prepared('SELECT realm_id\n\t\t\t\t\tFROM user_auth_realm\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tAND realm_id = ?',\n\t\t\t\t\tarray(get_request_var('id', 0), $realm));\n\n\t\t\t\tif (!empty($set)) {\n\t\t\t\t\t$old_value = 'on';\n\t\t\t\t} else {\n\t\t\t\t\t$old_value = '';\n\t\t\t\t}\n\n\t\t\t\tunset($all_realms[$realm]);\n\n\t\t\t\tform_checkbox('section' . $realm, $old_value, $user_auth_realms[$realm], '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\t\t\t}\n\t\t\tprint \"</td>\\n\";\n\n\t\t\tif ($j == 5) {\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t\t$j = 1;\n\t\t\t} else {\n\t\t\t\t$j++;\n\t\t\t}\n\t\t}\n\n\t\tif ($j > 1) {\n\t\t\tprint \"<td class='realms' colspan='\" . (5-$j) . \"'></td>\\n\";\n\t\t\tprint \"</tr>\\n\";\n\t\t}\n\n\t\tprint \"</table></td></tr>\\n\";\n\t}\n\n\t/* external links */\n\t$links  = db_fetch_assoc('SELECT * FROM external_links ORDER BY sortorder');\n\n\t$style_translate = array(\n\t\t'CONSOLE'    => __('Console'),\n\t\t'TAB'        => __('Top Tab'),\n\t\t'FRONT'      => __('Bottom Console'),\n\t\t'FRONTTOP'   => __('Top Console')\n\t);\n\n\tprint \"<tr class='tableHeader'><th colspan='2'>\" . __('External Link Permissions') . \"</th></tr>\\n\";\n\tprint \"<tr class='odd'><td colspan='4'><table style='width:100%;'><tr><td class='realms'>\\n\";\n\tif (cacti_sizeof($links)) {\n\t\t$j = 1;\n\n\t\tforeach($links as $r) {\n\t\t\tif ($j == 1) {\n\t\t\t\tprint \"<tr>\\n\";\n\t\t\t}\n\n\t\t\t$realm = $r['id'] + 10000;\n\n\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_realm WHERE user_id = ? AND realm_id = ?', array(get_request_var('id', 0), $realm))) > 0) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\tunset($all_realms[$realm]);\n\n\t\t\tprint \"<td class='realms'>\\n\";\n\n\t\t\tswitch($r['style']) {\n\t\t\tcase 'CONSOLE':\n\t\t\t\t$description = $style_translate[$r['style']] . ': ' . ($r['extendedstyle'] == '' ? 'External Links' : $r['extendedstyle']) . '/' . $r['title'];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$description = $style_translate[$r['style']] . ': ' . ucfirst($r['title']);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tform_checkbox('section' . $realm, $old_value, $description, '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\n\t\t\tprint \"</td>\\n\";\n\n\t\t\tif ($j == 5) {\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t\t$j = 1;\n\t\t\t} else {\n\t\t\t\t$j++;\n\t\t\t}\n\t\t}\n\n\t\tif ($j > 1) {\n\t\t\tprint \"<td class='realms' colspan='\" . (5-$j) . \"'></td>\\n\";\n\t\t\tprint \"</tr>\\n\";\n\t\t}\n\t}\n\tprint \"</tr></table></td></tr>\\n\";\n\n\t/* do plugin realms */\n\t$realms = db_fetch_assoc('SELECT pc.name, pr.id AS realm_id, pr.display\n\t\tFROM plugin_config AS pc\n\t\tINNER JOIN plugin_realms AS pr\n\t\tON pc.directory = pr.plugin\n\t\tORDER BY pc.name, pr.display');\n\n\tprint \"<tr class='tableHeader'><th colspan='2'>\" . __('Plugin Permissions') . \"</th></tr>\\n\";\n\tprint \"<tr class='odd'><td colspan='4'><table style='width:100%;'><tr><td class='realms'>\\n\";\n\tif (cacti_sizeof($realms)) {\n\t\t$last_plugin = 'none';\n\t\t$i = 1;\n\t\t$j = 1;\n\n\t\tforeach($realms as $r) {\n\t\t\t$break = false;\n\n\t\t\tif ($last_plugin != $r['name'] && $last_plugin != 'none') {\n\t\t\t\t$break = true;\n\n\t\t\t\tif ($j == 5) {\n\t\t\t\t\tprint \"</tr><tr>\\n\";\n\t\t\t\t\t$break = true;;\n\t\t\t\t\t$j = 1;\n\t\t\t\t} else {\n\t\t\t\t\t$j++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($break) {\n\t\t\t\tprint \"</td><td class='realms'>\\n\";\n\t\t\t}\n\n\t\t\tif ($break || $i == 1) {\n\t\t\t\tprint \"<i>\" . html_escape($r['name']) . \"</i><br>\\n\";\n\t\t\t}\n\n\t\t\t$realm = $r['realm_id'] + 100;\n\n\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_realm WHERE user_id = ? AND realm_id = ?', array(get_request_var('id', 0), $realm))) > 0) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\tunset($all_realms[$realm]);\n\n\t\t\t$pos = (strpos($user_auth_realms[$realm], '->') !== false ? strpos($user_auth_realms[$realm], '->')+2:0);\n\n\t\t\tform_checkbox('section' . $realm, $old_value, substr($user_auth_realms[$realm], $pos), '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\n\t\t\t$last_plugin = $r['name'];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\t/* get the old PIA 1.x realms */\n\tif (cacti_sizeof($all_realms)) {\n\t\tif ($break) {\n\t\t\tprint \"</td><td class='realms'>\\n\";\n\t\t}\n\n\t\tprint '<strong>' . __('Legacy 1.x Plugins') . '</strong><br>';\n\t\tforeach($all_realms as $realm => $name) {\n\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_realm WHERE user_id = ? AND realm_id = ?', array(get_request_var('id', 0), $realm))) > 0) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\t$pos = (strpos($user_auth_realms[$realm], '->') !== false ? strpos($user_auth_realms[$realm], '->')+2:0);\n\n\t\t\tform_checkbox('section' . $realm, $old_value, substr($user_auth_realms[$realm], $pos), '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\t\t}\n\t}\n\n\tprint \"</td></tr></table></td></tr>\\n\";\n\t?>\n\t<script type='text/javascript'>\n\tfunction selectAllRealms(checked) {\n\t\tif (checked) {\n\t\t\t$('input[id^=\\\"section\\\"]').prop('checked', true);\n\t\t} else {\n\t\t\t$('input[id^=\\\"section\\\"]').prop('checked', false);\n\t\t}\n\t}\n\n\t$(function() {\n\t\t$('input[type=\"checkbox\"]').each(function() {\n\t\t\t$(this).addClass($(this).attr('id'));\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n\n\tform_hidden_box('id', get_request_var('id'), '');\n\tform_hidden_box('tab', 'realms', '');\n\tform_hidden_box('save_component_realm_perms', '1', '');\n\n\tform_save_button('user_admin.php', 'return');\n}\n\nfunction settings_edit($header_label) {\n\tglobal $settings_user, $tabs_graphs, $graph_views;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tform_start('user_admin.php');\n\n\thtml_start_box(__('User Settings %s', $header_label), '100%', true, '3', 'center', '');\n\n\tforeach ($settings_user as $tab_short_name => $tab_fields) {\n\t\t$collapsible = true;\n\n        print \"<div class='spacer tableHeader\" . ($collapsible ? ' collapsible':'') . \"' id='row_$tab_short_name'><div style='cursor:pointer;' class='tableSubHeaderColumn'>\" . $tabs_graphs[$tab_short_name] . ($collapsible ? \"<div style='float:right;padding-right:4px;'><i class='fa fa-angle-double-up'></i></div>\":\"\") . \"</div></div>\\n\";\n\n\t\t$form_array = array();\n\n\t\tforeach ($tab_fields as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $tab_fields[$field_name]);\n\n\t\t\tif ((isset($field_array['items'])) && (is_array($field_array['items']))) {\n\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\tif (graph_config_value_exists($sub_field_name, get_request_var('id'))) {\n\t\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['form_id'] = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['value'] =  db_fetch_cell_prepared('SELECT value FROM settings_user WHERE name = ? AND user_id = ?', array($sub_field_name, get_request_var('id')));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (graph_config_value_exists($field_name, get_request_var('id'))) {\n\t\t\t\t\t$form_array[$field_name]['form_id'] = 1;\n\t\t\t\t}\n\n\t\t\t\t$form_array[$field_name]['value'] = db_fetch_cell_prepared('SELECT value FROM settings_user WHERE name = ? and user_id = ?', array($field_name, get_request_var('id')));\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => $form_array\n\t\t\t)\n\t\t);\n\t}\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('id', get_request_var('id'), '');\n\tform_hidden_box('tab', 'settings', '');\n\tform_hidden_box('save_component_graph_settings','1','');\n\n\tform_save_button('user_admin.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar themeFonts=<?php print read_config_option('font_method');?>;\n\n\tfunction graphSettings() {\n\t\tif (themeFonts == 1) {\n\t\t\t\t$('#row_fonts').hide();\n\t\t\t\t$('#row_custom_fonts').hide();\n\t\t\t\t$('#row_title_size').hide();\n\t\t\t\t$('#row_title_font').hide();\n\t\t\t\t$('#row_legend_size').hide();\n\t\t\t\t$('#row_legend_font').hide();\n\t\t\t\t$('#row_axis_size').hide();\n\t\t\t\t$('#row_axis_font').hide();\n\t\t\t\t$('#row_unit_size').hide();\n\t\t\t\t$('#row_unit_font').hide();\n\t\t} else {\n\t\t\tvar custom_fonts = $('#custom_fonts').is(':checked');\n\n\t\t\tswitch(custom_fonts) {\n\t\t\tcase true:\n\t\t\t\t$('#row_fonts').show();\n\t\t\t\t$('#row_title_size').show();\n\t\t\t\t$('#row_title_font').show();\n\t\t\t\t$('#row_legend_size').show();\n\t\t\t\t$('#row_legend_font').show();\n\t\t\t\t$('#row_axis_size').show();\n\t\t\t\t$('#row_axis_font').show();\n\t\t\t\t$('#row_unit_size').show();\n\t\t\t\t$('#row_unit_font').show();\n\t\t\t\tbreak;\n\t\t\tcase false:\n\t\t\t\t$('#row_fonts').show();\n\t\t\t\t$('#row_title_size').hide();\n\t\t\t\t$('#row_title_font').hide();\n\t\t\t\t$('#row_legend_size').hide();\n\t\t\t\t$('#row_legend_font').hide();\n\t\t\t\t$('#row_axis_size').hide();\n\t\t\t\t$('#row_axis_font').hide();\n\t\t\t\t$('#row_unit_size').hide();\n\t\t\t\t$('#row_unit_font').hide();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t$(function() {\n\t\tgraphSettings();\n\t});\n\n\t</script>\n\t<?php\n}\n\n/* --------------------------\n    User Administration\n   -------------------------- */\n\nfunction user_edit() {\n\tglobal $config, $fields_user_user_edit_host;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('tab', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-z_A-Z]+)$/')));\n\t/* ==================================================== */\n\n\t/* present a tabbed interface */\n\t$tabs = array(\n\t\t'general'  => __('General'),\n\t\t'realms'   => __('Permissions'),\n\t\t'permsgr'  => __('Group Membership'),\n\t\t'permsg'   => __('Graph Perms'),\n\t\t'permsd'   => __('Device Perms'),\n\t\t'permste'  => __('Template Perms'),\n\t\t'permstr'  => __('Tree Perms'),\n\t\t'settings' => __('User Settings')\n\t);\n\n\t/* set the default tab */\n\tload_current_session_value('tab', 'sess_user_admin_tab', 'general');\n\t$current_tab = get_nfilter_request_var('tab');\n\n\tif (!isempty_request_var('id')) {\n\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('[edit: %s]', html_escape($user['username']));\n\t} else {\n\t\t$header_label = __('[new]');\n\t}\n\n\tif (cacti_sizeof($tabs) && !isempty_request_var('id')) {\n\t\t$i = 0;\n\n\t\t/* draw the tabs */\n\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\\n\";\n\n\t\tforeach (array_keys($tabs) as $tab_short_name) {\n\t\t\tprint \"<li class='subTab'><a class='tab\" . (($tab_short_name == $current_tab) ? \" selected'\" : \"'\") .\n\t\t\t\t\" href='\" . html_escape($config['url_path'] .\n\t\t\t\t'user_admin.php?action=user_edit&id=' . get_request_var('id') .\n\t\t\t\t'&tab=' . $tab_short_name) .\n\t\t\t\t\"'>\" . $tabs[$tab_short_name] . \"</a></li>\\n\";\n\n\t\t\t$i++;\n\t\t}\n\n\t\tapi_plugin_hook('user_admin_tab');\n\n\t\tprint \"</ul></nav></div>\\n\";\n\t}\n\n\tswitch($current_tab) {\n\tcase 'general':\n\t\tapi_plugin_hook_function('user_admin_edit', (isset($user) ? get_request_var('id') : 0));\n\n\t\tform_start('user_admin.php');\n\n\t\thtml_start_box(__('User Management %s', $header_label), '100%', '', '3', 'center', '');\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => inject_form_variables($fields_user_user_edit_host, (isset($user) ? $user : array()))\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box();\n\n\t\tform_save_button('user_admin.php', 'return');\n\n\t\t?>\n\t\t<script type='text/javascript'>\n\n\t\tvar minChars=<?php print read_config_option('secpass_minlen');?>;\n\n\t\tfunction changeRealm() {\n\t\t\tif ($('#realm').val() != 0) {\n\t\t\t\t$('#password_change').prop('disabled', true);\n\t\t\t} else {\n\t\t\t\t$('#password_change').prop('disabled', false);\n\t\t\t}\n\t\t}\n\n\t\tfunction checkPassword() {\n\t\t\tif ($('#password').val().length == 0) {\n\t\t\t\t$('#pass').remove();\n\t\t\t\t$('#passconfirm').remove();\n\t\t\t}else if ($('#password').val().length < minChars) {\n\t\t\t\t$('#pass').remove();\n\t\t\t\t$('#password').after('<span id=\"pass\"><i class=\"badpassword fa fa-times\"></i><span style=\"padding-left:4px;\"><?php print __('Password Too Short')?></span></span>');\n\t\t\t} else {\n\t\t\t\t$.post('user_admin.php?action=checkpass', { password: $('#password').val(), password_confim: $('#password_confirm').val(), __csrf_magic: csrfMagicToken } ).done(function(data) {\n\t\t\t\t\tif (data == 'ok') {\n\t\t\t\t\t\t$('#pass').remove();\n\t\t\t\t\t\t$('#password').after('<span id=\"pass\"><i class=\"goodpassword fa fa-check\"></i><span style=\"padding-left:4px;\"><?php print __('Password Validation Passes');?></span></span>');\n\t\t\t\t\t\tcheckPasswordConfirm();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#pass').remove();\n\t\t\t\t\t\t$('#password').after('<span id=\"pass\"><i class=\"badpassword fa fa-times\"></i><span style=\"padding-left:4px;\">'+data+'</span></span>');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction checkPasswordConfirm() {\n\t\t\tif ($('#password_confirm').val().length > 0) {\n\t\t\t\tif ($('#password').val() != $('#password_confirm').val()) {\n\t\t\t\t\t$('#passconfirm').remove();\n\t\t\t\t\t$('#password_confirm').after('<span id=\"passconfirm\"><i class=\"badpassword fa fa-times\"></i><span style=\"padding-left:4px;\"><?php print __('Passwords do Not Match');?></span></span>');\n\t\t\t\t} else {\n\t\t\t\t\t$('#passconfirm').remove();\n\t\t\t\t\t$('#password_confirm').after('<span id=\"passconfirm\"><i class=\"goodpassword fa fa-check\"></i><span style=\"padding-left:4px;\"><?php print __('Passwords Match');?></span></span>');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$('#passconfirm').remove();\n\t\t\t}\n\t\t}\n\n\t\tvar password_change = $('#password_change').is(':checked');\n\n\t\t$(function() {\n\t\t\tchangeRealm();\n\n\t\t\t/* clear passwords */\n\t\t\t$('#password').val('');\n\t\t\t$('#password_confirm').val('');\n\n\t\t\t$('#password').keyup(function() {\n\t\t\t\tcheckPassword();\n\t\t\t});\n\n\t\t\t$('#password_confirm').keyup(function() {\n\t\t\t\tcheckPasswordConfirm();\n\t\t\t});\n\n\t\t\t$('#realm').change(function() {\n\t\t\t\tchangeRealm();\n\t\t\t});\n\n\t\t\t$('#password_change').click(function() {\n\t\t\t\tpassword_change = $('#password_change').is(':checked');\n\n\t\t\t\tif (!password_change && $('#must_change_password').is(':checked')) {\n\t\t\t\t\tbutton = ($('#must_change_password').button('instance') !== undefined);\n\t\t\t\t\tif (button) {\n\t\t\t\t\t\t$('#must_change_password').prop('checked', false).button('refresh');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#must_change_password').prop('checked', false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('#must_change_password').click(function() {\n\t\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t\tbutton = ($('#must_change_password').button('instance') !== undefined);\n\t\t\t\t\tif (button) {\n\t\t\t\t\t\t$('#password_change').prop('checked', true);\n\t\t\t\t\t\t$('#password_change').button('refresh');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#password_change').prop('checked', true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbutton = ($('#must_change_password').button('instance') !== undefined);\n\t\t\t\t\tif (button) {\n\t\t\t\t\t\t$('#password_change').prop('checked', password_change).button('refresh');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#password_change').prop('checked', password_change);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t</script>\n\t\t<?php\n\n\t\tbreak;\n\tcase 'settings':\n\t\tsettings_edit($header_label);\n\n\t\tbreak;\n\tcase 'realms':\n\t\tuser_realms_edit($header_label);\n\n\t\tbreak;\n\tcase 'permsg':\n\tcase 'permsd':\n\tcase 'permsgr':\n\tcase 'permste':\n\tcase 'permstr':\n\t\tgraph_perms_edit($current_tab, $header_label);\n\n\t\tbreak;\n\tdefault:\n\t\tif (api_plugin_hook_function('user_admin_run_action', get_request_var('tab'))) {\n\t\t\tuser_realms_edit();\n\t\t}\n\t\tbreak;\n\t}\n}\n\nfunction user() {\n\tglobal $config, $auth_realms, $user_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'username',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_usera');\n\t/* ================= input validation ================= */\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_admin.php?rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_admin.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_user_admin').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('User Management'), '100%', '', '3', 'center', 'user_admin.php?tab=general&action=user_edit');\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='form_user_admin' action='user_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Users');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (user_auth.username LIKE '%\" . get_request_var('filter') . \"%' OR user_auth.full_name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(user_auth.id)\n\t\tFROM user_auth\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$user_list = db_fetch_assoc(\"SELECT id, user_auth.username, full_name,\n\t\trealm, enabled, policy_graphs, policy_hosts, policy_graph_templates,\n\t\ttime, max(time) as dtime\n\t\tFROM user_auth\n\t\tLEFT JOIN user_log ON (user_auth.id = user_log.user_id)\n\t\t$sql_where\n\t\tGROUP BY id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('user_admin.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 9, __('Users'), 'page', 'main');\n\n\tform_start('user_admin.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'username'               => array(__('User Name'), 'ASC'),\n\t\t'full_name'              => array(__('Full Name'), 'ASC'),\n\t\t'enabled'                => array(__('Enabled'), 'ASC'),\n\t\t'realm'                  => array(__('Realm'), 'ASC'),\n\t\t'policy_graphs'          => array(__('Graph Policy'), 'ASC'),\n\t\t'policy_hosts'           => array(__('Device Policy'), 'ASC'),\n\t\t'policy_graph_templates' => array(__('Template Policy'), 'ASC'),\n\t\t'dtime'                  => array(__('Last Login'), 'DESC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($user_list)) {\n\t\tforeach ($user_list as $user) {\n\t\t\tif (empty($user['dtime']) || ($user['dtime'] == '12/31/1969')) {\n\t\t\t\t$last_login = __('N/A');\n\t\t\t} else {\n\t\t\t\t$last_login = strftime('%A, %B %d, %Y %H:%M:%S ', strtotime($user['dtime']));;\n\t\t\t}\n\t\t\tif ($user['enabled'] == 'on') {\n\t\t\t\t$enabled = __('Yes');\n\t\t\t} else {\n\t\t\t\t$enabled = __('No');\n\t\t\t}\n\n\t\t\tif (isset($auth_realms[$user['realm']])) {\n\t\t\t\t$realm = $auth_realms[$user['realm']];\n\t\t\t} else {\n\t\t\t\t$realm = __('Unavailable');\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $user['id'], true);\n\t\t\tform_selectable_cell(filter_value($user['username'], get_request_var('filter'), $config['url_path'] . 'user_admin.php?action=user_edit&tab=general&id=' . $user['id']), $user['id']);\n\t\t\tform_selectable_cell(filter_value($user['full_name'], get_request_var('filter')), $user['id']);\n\t\t\tform_selectable_cell($enabled, $user['id']);\n\t\t\tform_selectable_cell($realm, $user['id']);\n\t\t\tform_selectable_cell(($user['policy_graphs'] == 1 ? __('ALLOW'):__('DENY')), $user['id']);\n\t\t\tform_selectable_cell(($user['policy_hosts'] == 1 ? __('ALLOW'):__('DENY')), $user['id']);\n\t\t\tform_selectable_cell(($user['policy_graph_templates'] == 1 ? __('ALLOW'):__('DENY')), $user['id']);\n\t\t\tform_selectable_cell($last_login, $user['id']);\n\t\t\tform_checkbox_cell($user['username'], $user['id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"' . (cacti_sizeof($display_text)+1) . '\"><em>' . __('No Users Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($user_list)) {\n\t\tprint $nav;\n\t}\n\n\tdraw_actions_dropdown($user_actions);\n\n\tform_end();\n}\n\nfunction process_graph_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'graph_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1',\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_uag');\n\t/* ================= input validation ================= */\n}\n\nfunction process_group_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_uagr');\n\t/* ================= input validation ================= */\n}\n\nfunction process_device_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'host_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1',\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_uad');\n\t/* ================= input validation ================= */\n}\n\nfunction process_template_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'graph_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1',\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_uate');\n\t/* ================= input validation ================= */\n}\n\nfunction process_tree_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'graph_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1',\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_uatr');\n\t/* ================= input validation ================= */\n}\n\nfunction graph_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_admin.php?action=user_edit&tab=permsg&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&graph_template_id=' + $('#graph_template_id').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter(objForm) {\n\t\tstrURL = 'user_admin.php?action=user_edit&tab=permsg&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Graph Permissions %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='graph_template_id' name='graph_template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('graph_template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('graph_template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$graph_templates = db_fetch_assoc('SELECT DISTINCT gt.id, gt.name\n\t\t\t\t\t\t\t\tFROM graph_templates AS gt\n\t\t\t\t\t\t\t\tINNER JOIN graph_local AS gl\n\t\t\t\t\t\t\t\tON gl.graph_template_id = gt.id\n\t\t\t\t\t\t\t\tORDER BY name');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($graph_templates)) {\n\t\t\t\t\t\t\t\tforeach ($graph_templates as $gt) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $gt['id'] . \"'\"; if (get_request_var('graph_template_id') == $gt['id']) { print ' selected'; } print '>' . html_escape($gt['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Graphs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show All');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='go' value='<?php print __esc('Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='user_edit'>\n\t\t\t<input type='hidden' name='tab' value='permsg'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction group_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_admin.php?action=user_edit&tab=permsgr&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_admin.php?action=user_edit&tab=permsgr&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Group Membership %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Groups');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show All');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='user_edit'>\n\t\t\t<input type='hidden' name='tab' value='permsgr'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction device_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_admin.php?action=user_edit&tab=permsd&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&host_template_id=' + $('#host_template_id').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter(objForm) {\n\t\tstrURL = 'user_admin.php?action=user_edit&tab=permsd&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Devices Permission %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='host_template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('host_template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('host_template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$host_templates = db_fetch_assoc('SELECT id, name FROM host_template ORDER BY name');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($host_templates)) {\n\t\t\t\t\t\t\t\tforeach ($host_templates as $host_template) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $host_template['id'] . \"'\"; if (get_request_var('host_template_id') == $host_template['id']) { print ' selected'; } print '>' . html_escape($host_template['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Devices');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='user_edit'>\n\t\t\t<input type='hidden' name='tab' value='permsd'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction template_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_admin.php?action=user_edit&tab=permste&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_admin.php?action=user_edit&tab=permste&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Template Permission %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Templates');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='user_edit'>\n\t\t\t<input type='hidden' name='tab' value='permste'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction tree_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_admin.php?action=user_edit&tab=permstr&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_admin.php?action=user_edit&tab=permstr&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Tree Permission %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Trees');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='user_edit'>\n\t\t\t<input type='hidden' name='tab' value='permstr'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction member_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter(objForm) {\n\t\tstrURL  = 'user_admin.php?action=user_edit&tab=members&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter(objForm) {\n\t\tstrURL = 'user_admin.php?action=user_edit&tab=members&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Tree Permission %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Trees');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='user_edit'>\n\t\t\t<input type='hidden' name='tab' value='members'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Disable'),\n\t3 => __('Enable'),\n\t4 => __('Default')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tdomain_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tdomains();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tglobal $registered_cacti_names;\n\n\tif (isset_request_var('save_component_domain_ldap')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('domain_id');\n\t\tget_filter_request_var('type');\n\t\tget_filter_request_var('user_id');\n\t\t/* ==================================================== */\n\n\t\t$save['domain_id']   = get_nfilter_request_var('domain_id');\n\t\t$save['type']        = get_nfilter_request_var('type');\n\t\t$save['user_id']     = get_nfilter_request_var('user_id');\n\t\t$save['domain_name'] = form_input_validate(get_nfilter_request_var('domain_name'), 'domain_name', '', false, 3);\n\t\t$save['enabled']     = (isset_request_var('enabled') ? form_input_validate(get_nfilter_request_var('enabled'), 'enabled', '', true,  3):'');\n\n\t\tif (!is_error_message()) {\n\t\t\t$domain_id = sql_save($save, 'user_domains', 'domain_id');\n\n\t\t\tif ($domain_id) {\n\t\t\t\t// Disable template user from logging in\n\t\t\t\tdb_execute_prepared('UPDATE user_auth\n\t\t\t\t\tSET enabled=\"\"\n\t\t\t\t\tWHERE id = ?', array($save['user_id']));\n\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\n\t\t\tif (!is_error_message()) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tget_filter_request_var('domain_id');\n\t\t\t\tget_filter_request_var('port');\n\t\t\t\tget_filter_request_var('port_ssl');\n\t\t\t\tget_filter_request_var('proto_version');\n\t\t\t\tget_filter_request_var('encryption');\n\t\t\t\tget_filter_request_var('referrals');\n\t\t\t\tget_filter_request_var('mode');\n\t\t\t\tget_filter_request_var('group_member_type');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$save                      = array();\n\t\t\t\t$save['domain_id']         = $domain_id;\n\t\t\t\t$save['server']            = form_input_validate(get_nfilter_request_var('server'), 'server', '', false, 3);\n\t\t\t\t$save['port']              = get_nfilter_request_var('port');\n\t\t\t\t$save['port_ssl']          = get_nfilter_request_var('port_ssl');\n\t\t\t\t$save['proto_version']     = get_nfilter_request_var('proto_version');\n\t\t\t\t$save['encryption']        = get_nfilter_request_var('encryption');\n\t\t\t\t$save['referrals']         = get_nfilter_request_var('referrals');\n\t\t\t\t$save['mode']              = get_nfilter_request_var('mode');\n\t\t\t\t$save['group_member_type'] = get_nfilter_request_var('group_member_type');\n\t\t\t\t$save['dn']                = form_input_validate(get_nfilter_request_var('dn'),                'dn',              '', true, 3);\n\t\t\t\t$save['group_require']     = isset_request_var('group_require') ? 'on':'';\n\t\t\t\t$save['group_dn']          = form_input_validate(get_nfilter_request_var('group_dn'),          'group_dn',        '', true, 3);\n\t\t\t\t$save['group_attrib']      = form_input_validate(get_nfilter_request_var('group_attrib'),      'group_attrib',    '', true, 3);\n\t\t\t\t$save['search_base']       = form_input_validate(get_nfilter_request_var('search_base'),       'search_base',     '', true, 3);\n\t\t\t\t$save['search_filter']     = form_input_validate(get_nfilter_request_var('search_filter'),     'search_filter',   '', true, 3);\n\t\t\t\t$save['specific_dn']         = form_input_validate(get_nfilter_request_var('specific_dn'),         'specific_dn',       '', true, 3);\n\t\t\t\t$save['specific_password']   = form_input_validate(get_nfilter_request_var('specific_password'),   'specific_password', '', true, 3);\n                                $save['cn_full_name']        = get_nfilter_request_var('cn_full_name');\n                                $save['cn_email']            = get_nfilter_request_var('cn_email');\n\n\t\t\t\tif (!is_error_message()) {\n\t\t\t\t\t$insert_id = sql_save($save, 'user_domains_ldap', 'domain_id', false);\n\n\t\t\t\t\tif ($insert_id) {\n\t\t\t\t\t\traise_message(1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} elseif (isset_request_var('save_component_domain')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('domain_id');\n\t\tget_filter_request_var('type');\n\t\tget_filter_request_var('user_id');\n\t\t/* ==================================================== */\n\n\t\t$save['domain_id']   = get_nfilter_request_var('domain_id');\n\t\t$save['domain_name'] = form_input_validate(get_nfilter_request_var('domain_name'), 'domain_name', '', false, 3);\n\t\t$save['type']        = get_nfilter_request_var('type');\n\t\t$save['user_id']     = get_nfilter_request_var('user_id');\n\t\t$save['enabled']     = (isset_request_var('enabled') ? form_input_validate(get_nfilter_request_var('enabled'), 'enabled', '', true,  3):'');\n\n\t\tif (!is_error_message()) {\n\t\t\t$domain_id = sql_save($save, 'user_domains', 'domain_id');\n\n\t\t\tif ($domain_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\t}\n\n\theader('Location: user_domains.php?header=false&action=edit&domain_id=' . (empty($domain_id) ? get_nfilter_request_var('domain_id') : $domain_id));\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdomain_remove($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // disable\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdomain_disable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // enable\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdomain_enable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { // default\n\t\t\t\tif (cacti_sizeof($selected_items) > 1) {\n\t\t\t\t\t/* error message */\n\t\t\t\t} else {\n\t\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t\tdomain_default($selected_items[$i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_domains.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$d_list = '';\n\t$d_array = array();\n\n\t/* loop through each of the data queries and process them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$d_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT domain_name FROM user_domains WHERE domain_id = ?', array($matches[1]))) . '</li>';\n\t\t\t$d_array[] = $matches[1];\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('user_domains.php');\n\n\thtml_start_box($actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($d_array) && cacti_sizeof($d_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following User Domain.', 'Click \\'Continue\\' to delete following User Domains.', cacti_sizeof($d_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$d_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete User Domain', 'Delete User Domains', cacti_sizeof($d_array)) . \"'>\";\n\t\t}else if (get_nfilter_request_var('drp_action') == '2') { // disable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to disable the following User Domain.', 'Click \\'Continue\\' to disable following User Domains.', cacti_sizeof($d_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$d_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Disable User Domain', 'Disable User Domains', cacti_sizeof($d_array)) . \"'>\";\n\t\t}else if (get_nfilter_request_var('drp_action') == '3') { // enable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to enable the following User Domain.', 'Click \\'Continue\\' to enable following User Domains.', cacti_sizeof($d_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$d_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Enabled User Domain', 'Enable User Domains', cacti_sizeof($d_array)) . \"'>\";\n\t\t}else if (get_nfilter_request_var('drp_action') == '4') { // default\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to make the following the following User Domain the default one.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$d_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Make Selected Domain Default') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: user_domains.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($d_array) ? serialize($d_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* -----------------------\n    Domain Functions\n   ----------------------- */\n\nfunction domain_remove($domain_id) {\n\tdb_execute_prepared('DELETE FROM user_domains WHERE domain_id = ?', array($domain_id));\n\tdb_execute_prepared('DELETE FROM user_domains_ldap WHERE domain_id = ?', array($domain_id));\n}\n\nfunction domain_disable($domain_id) {\n\tdb_execute_prepared('UPDATE user_domains SET enabled = \"\" WHERE domain_id = ?', array($domain_id));\n}\n\nfunction domain_enable($domain_id) {\n\tdb_execute_prepared('UPDATE user_domains SET enabled = \"on\" WHERE domain_id = ?', array($domain_id));\n}\n\nfunction domain_default($domain_id) {\n\tdb_execute('UPDATE user_domains SET defdomain = 0');\n\tdb_execute_prepared('UPDATE user_domains SET defdomain = 1 WHERE domain_id = ?', array($domain_id));\n}\n\nfunction domain_edit() {\n\tglobal $ldap_versions, $ldap_encryption, $ldap_modes, $domain_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('domain_id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('domain_id')) {\n\t\t$domain = db_fetch_row_prepared('SELECT * FROM user_domains WHERE domain_id = ?', array(get_request_var('domain_id')));\n\t\t$header_label = __('User Domain [edit: %s]', html_escape($domain['domain_name']));\n\t} else {\n\t\t$header_label = __('User Domain [new]');\n\t}\n\n\t/* file: data_input.php, action: edit */\n\t$fields_domain_edit = array(\n\t\t'domain_name' => array(\n\t\t\t'method' => 'textbox',\n\t\t\t'friendly_name' => __('Name'),\n\t\t\t'description' => __('Enter a meaningful name for this domain. This will be the name that appears in the Login Realm during login.'),\n\t\t\t'value' => '|arg1:domain_name|',\n\t\t\t'max_length' => '255',\n\t\t\t),\n\t\t'type' => array(\n\t\t\t'method' => 'drop_array',\n\t\t\t'friendly_name' => __('Domains Type'),\n\t\t\t'description' => __('Choose what type of domain this is.'),\n\t\t\t'value' => '|arg1:type|',\n\t\t\t'array' => $domain_types,\n\t\t\t'default' => '2'\n\t\t\t),\n\t\t'user_id' => array(\n\t\t\t'friendly_name' => __('User Template'),\n\t\t\t'description' => __('The name of the user that Cacti will use as a template for new user accounts.'),\n\t\t\t'method' => 'drop_sql',\n\t\t\t'value' => '|arg1:user_id|',\n\t\t\t'none_value' => __('No User'),\n\t\t\t'sql' => 'SELECT id AS id, username AS name FROM user_auth WHERE realm=0 ORDER BY username',\n\t\t\t'default' => '0'\n\t\t\t),\n\t\t'enabled' => array(\n\t\t\t'method' => 'checkbox',\n\t\t\t'friendly_name' => __('Enabled'),\n\t\t\t'description' => __('If this checkbox is checked, users will be able to login using this domain.'),\n\t\t\t'value' => '|arg1:enabled|',\n\t\t\t'default' => '',\n\t\t\t),\n\t\t'domain_id' => array(\n\t\t\t'method' => 'hidden_zero',\n\t\t\t'value' => '|arg1:domain_id|'\n\t\t\t),\n\t\t'save_component_domain' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => '1'\n\t\t\t)\n\t\t);\n\n\t$fields_domain_ldap_edit = array(\n\t\t'server' => array(\n\t\t\t'friendly_name' => __('Server'),\n\t\t\t'description' => __('The dns hostname or ip address of the server.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:server|',\n\t\t\t'default' => read_config_option('ldap_server'),\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'port' => array(\n\t\t\t'friendly_name' => __('Port Standard'),\n\t\t\t'description' => __('TCP/UDP port for Non SSL communications.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'max_length' => '5',\n\t\t\t'value' => '|arg1:port|',\n\t\t\t'default' => read_config_option('ldap_port'),\n\t\t\t'size' => '5'\n\t\t\t),\n\t\t'port_ssl' => array(\n\t\t\t'friendly_name' => __('Port SSL'),\n\t\t\t'description' => __('TCP/UDP port for SSL communications.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'max_length' => '5',\n\t\t\t'value' => '|arg1:port_ssl|',\n\t\t\t'default' => read_config_option('ldap_port_ssl'),\n\t\t\t'size' => '5'\n\t\t\t),\n\t\t'proto_version' => array(\n\t\t\t'friendly_name' => __('Protocol Version'),\n\t\t\t'description' => __('Protocol Version that the server supports.'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'value' => '|arg1:proto_version|',\n\t\t\t'array' => $ldap_versions\n\t\t\t),\n\t\t'encryption' => array(\n\t\t\t'friendly_name' => __('Encryption'),\n\t\t\t'description' => __('Encryption that the server supports. TLS is only supported by Protocol Version 3.'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'value' => '|arg1:encryption|',\n\t\t\t'array' => $ldap_encryption\n\t\t\t),\n\t\t'referrals' => array(\n\t\t\t'friendly_name' => __('Referrals'),\n\t\t\t'description' => __('Enable or Disable LDAP referrals.  If disabled, it may increase the speed of searches.'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'value' => '|arg1:referrals|',\n\t\t\t'array' => array( '0' => __('Disabled'), '1' => __('Enable'))\n\t\t\t),\n\t\t'mode' => array(\n\t\t\t'friendly_name' => __('Mode'),\n\t\t\t'description' => __('Mode which cacti will attempt to authenticate against the LDAP server.<blockquote><i>No Searching</i> - No Distinguished Name (DN) searching occurs, just attempt to bind with the provided Distinguished Name (DN) format.<br><br><i>Anonymous Searching</i> - Attempts to search for username against LDAP directory via anonymous binding to locate the users Distinguished Name (DN).<br><br><i>Specific Searching</i> - Attempts search for username against LDAP directory via Specific Distinguished Name (DN) and Specific Password for binding to locate the users Distinguished Name (DN).'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'value' => '|arg1:mode|',\n\t\t\t'array' => $ldap_modes\n\t\t\t),\n\t\t'dn' => array(\n\t\t\t'friendly_name' => __('Distinguished Name (DN)'),\n\t\t\t'description' => __('Distinguished Name syntax, such as for windows: <i>\"&lt;username&gt;@win2kdomain.local\"</i> or for OpenLDAP: <i>\"uid=&lt;username&gt;,ou=people,dc=domain,dc=local\"</i>.   \"&lt;username&gt\" is replaced with the username that was supplied at the login prompt.  This is only used when in \"No Searching\" mode.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:dn|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'group_require' => array(\n\t\t\t'friendly_name' => __('Require Group Membership'),\n\t\t\t'description' => __('Require user to be member of group to authenticate. Group settings must be set for this to work, enabling without proper group settings will cause authentication failure.'),\n\t\t\t'value' => '|arg1:group_require|',\n\t\t\t'method' => 'checkbox'\n\t\t\t),\n\t\t'group_header' => array(\n\t\t\t'friendly_name' => __('LDAP Group Settings'),\n\t\t\t'method' => 'spacer'\n\t\t\t),\n\t\t'group_dn' => array(\n\t\t\t'friendly_name' => __('Group Distinguished Name (DN)'),\n\t\t\t'description' => __('Distinguished Name of the group that user must have membership.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:group_dn|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'group_attrib' => array(\n\t\t\t'friendly_name' => __('Group Member Attribute'),\n\t\t\t'description' => __('Name of the attribute that contains the usernames of the members.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:group_attrib|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'group_member_type' => array(\n\t\t\t'friendly_name' => __('Group Member Type'),\n\t\t\t'description' => __('Defines if users use full Distinguished Name or just Username in the defined Group Member Attribute.'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'value' => '|arg1:group_member_type|',\n\t\t\t'array' => array( 1 => 'Distinguished Name', 2 => 'Username' )\n\t\t\t),\n\t\t'search_base_header' => array(\n\t\t\t'friendly_name' => __('LDAP Specific Search Settings'),\n\t\t\t'method' => 'spacer'\n\t\t\t),\n\t\t'search_base' => array(\n\t\t\t'friendly_name' => __('Search Base'),\n\t\t\t'description' => __('Search base for searching the LDAP directory, such as <i>\"dc=win2kdomain,dc=local\"</i> or <i>\"ou=people,dc=domain,dc=local\"</i>.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:search_base|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'search_filter' => array(\n\t\t\t'friendly_name' => __('Search Filter'),\n\t\t\t'description' => __('Search filter to use to locate the user in the LDAP directory, such as for windows: <i>\"(&amp;(objectclass=user)(objectcategory=user)(userPrincipalName=&lt;username&gt;*))\"</i> or for OpenLDAP: <i>\"(&(objectClass=account)(uid=&lt;username&gt))\"</i>.  \"&lt;username&gt\" is replaced with the username that was supplied at the login prompt.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:search_filter|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'specific_dn' => array(\n\t\t\t'friendly_name' => __('Search Distinguished Name (DN)'),\n\t\t\t'description' => __('Distinguished Name for Specific Searching binding to the LDAP directory.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:specific_dn|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'specific_password' => array(\n\t\t\t'friendly_name' => __('Search Password'),\n\t\t\t'description' => __('Password for Specific Searching binding to the LDAP directory.'),\n\t\t\t'method' => 'textbox_password',\n\t\t\t'value' => '|arg1:specific_password|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'cn_header' => array(\n\t\t\t'friendly_name' => __('LDAP CN Settings'),\n\t\t\t'method' => 'spacer'\n\t\t\t),\n\t\t'cn_full_name' => array(\n\t\t\t'friendly_name' => __('Full Name'),\n\t\t\t'description' => __('Field that will replace the Full Name when creating a new user, taken from LDAP. (on windows: displayname) '),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:cn_full_name|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'cn_email' => array(\n\t\t\t'friendly_name' => __('eMail'),\n\t\t\t'description' => __('Field that will replace the email taken from LDAP. (on windows: mail) '),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:cn_email|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'save_component_domain_ldap' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => '1'\n\t\t\t)\n\t);\n\n\tform_start('user_domains.php');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(array(\n\t\t'config' => array(),\n\t\t'fields' => inject_form_variables($fields_domain_edit, (isset($domain) ? $domain : array()))\n\t\t));\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('domain_id')) {\n\t\t$domain = db_fetch_row_prepared('SELECT * FROM user_domains_ldap WHERE domain_id = ?', array(get_request_var('domain_id')));\n\n\t\thtml_start_box( __('Domain Properties'), '100%', true, '3', 'center', '');\n\n\t\tdraw_edit_form(array(\n\t\t\t'config' => array(),\n\t\t\t'fields' => inject_form_variables($fields_domain_ldap_edit, (isset($domain) ? $domain : array()))\n\t\t\t));\n\n\t\thtml_end_box(true, true);\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction initGroupMember() {\n\t\tif ($('#group_require').is(':checked')) {\n\t\t\t$('#row_group_header').show();\n\t\t\t$('#row_group_dn').show();\n\t\t\t$('#row_group_attrib').show();\n\t\t\t$('#row_group_member_type').show();\n\t\t} else {\n\t\t\t$('#row_group_header').hide();\n\t\t\t$('#row_group_dn').hide();\n\t\t\t$('#row_group_attrib').hide();\n\t\t\t$('#row_group_member_type').hide();\n\t\t}\n\t}\n\n\tfunction initSearch() {\n\t\tswitch($('#mode').val()) {\n\t\tcase \"0\":\n\t\t\t$('#row_search_base_header').hide();\n\t\t\t$('#row_search_base').hide();\n\t\t\t$('#row_search_filter').hide();\n\t\t\t$('#row_specific_dn').hide();\n\t\t\t$('#row_specific_password').hide();\n\t\t\t$('#row_cn_full_name').hide();\n\t\t\t$('#row_cn_email').hide();\n\t\t\tbreak;\n\t\tcase \"1\":\n\t\t\t$('#row_search_base_header').show();\n\t\t\t$('#row_search_base').show();\n\t\t\t$('#row_search_filter').show();\n\t\t\t$('#row_specific_dn').hide();\n\t\t\t$('#row_specific_password').hide();\n\t\t\t$('#row_cn_full_name').hide();\n\t\t\t$('#row_cn_email').hide();\n\t\t\tbreak;\n\t\tcase \"2\":\n\t\t\t$('#row_search_base_header').show();\n\t\t\t$('#row_search_base').show();\n\t\t\t$('#row_search_filter').show();\n\t\t\t$('#row_specific_dn').show();\n\t\t\t$('#row_specific_password').show();\n\t\t\t$('#row_cn_full_name').show();\n\t\t\t$('#row_cn_email').show();\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t$(function() {\n\t\tinitSearch();\n\t\tinitGroupMember();\n\n\t\t$('#mode').change(function() {\n\t\t\tinitSearch();\n\t\t});\n\n\t\t$('#group_require').change(function() {\n\t\t\tinitGroupMember();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\tform_save_button('user_domains.php', 'return', 'domain_id');\n}\n\nfunction domains() {\n\tglobal $domain_types, $actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'domain_name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_domains');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box( __('User Domains'), '100%', '', '3', 'center', 'user_domains.php?action=edit');\n\n\t?>\n\t<tr class='even' class='noprint'>\n\t\t<td class='noprint'>\n\t\t<form id='form_domains' method='get' action='user_domains.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr class='noprint'>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Domains');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange=\"applyFilter()\">\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __x('filter: use', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t<script type='text/javascript'>\n\t\tfunction applyFilter() {\n\t\t\tstrURL  = 'user_domains.php?rows=' + $('#rows').val();\n\t\t\tstrURL += '&filter=' + $('#filter').val();\n\t\t\tstrURL += '&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\tfunction clearFilter() {\n\t\t\tstrURL = 'user_domains.php?clear=1&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#refresh').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#clear').click(function() {\n\t\t\t\tclearFilter();\n\t\t\t});\n\n\t\t\t$('#form_domains').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\t\t});\n\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (domain_name LIKE '%%\" . get_request_var('filter') . \"%%') ||\n\t\t\t(type LIKE '%%\" . get_request_var('filter') . \"%%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tcount(*)\n\t\tFROM user_domains\n\t\t$sql_where\");\n\n\t$domains = db_fetch_assoc(\"SELECT *\n\t\tFROM user_domains\n\t\t$sql_where\n\t\tORDER BY \" . get_request_var('sort_column') . ' ' . get_request_var('sort_direction') . '\n\t\tLIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows);\n\n\t$nav = html_nav_bar('user_user_domains.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 8, __('User Domains'), 'page', 'main');\n\n\tform_start('user_domains.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'domain_name'  => array(__('Domain Name'), 'ASC'),\n\t\t'type'         => array(__('Domain Type'), 'ASC'),\n\t\t'defdomain'    => array(__('Default'), 'ASC'),\n\t\t'user_id'      => array(__('Effective User'), 'ASC'),\n\t\t'cn_full_name' => array(__('CN FullName'), 'ASC'),\n\t\t'cn_email'     => array(__('CN eMail'), 'ASC'),\n\t\t'enabled'      => array(__('Enabled'), 'ASC'));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($domains)) {\n\t\tforeach ($domains as $domain) {\n\t\t\t/* hide system types */\n\t\t\tform_alternate_row('line' . $domain['domain_id'], true);\n\t\t\tform_selectable_cell(filter_value($domain['domain_name'], get_request_var('filter'), 'user_domains.php?action=edit&domain_id=' . $domain['domain_id']), $domain['domain_id']);\n\t\t\tform_selectable_cell($domain_types[$domain['type']], $domain['domain_id']);\n\t\t\tform_selectable_cell(($domain['defdomain'] == '0' ? '--': __('Yes') ), $domain['domain_id']);\n\t\t\tform_selectable_cell(($domain['user_id'] == '0' ? __('None Selected') : db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array($domain['user_id']))), $domain['domain_id']);\n\t\t\tform_selectable_cell(db_fetch_cell_prepared('SELECT cn_full_name FROM user_domains_ldap WHERE domain_id = ?', array($domain['domain_id'])), $domain['domain_id']);\n\t\t\tform_selectable_cell(db_fetch_cell_prepared('SELECT cn_email FROM user_domains_ldap WHERE domain_id = ?', array($domain['domain_id'])), $domain['domain_id']);\n\t\t\tform_selectable_cell($domain['enabled'] == 'on' ? __('Yes'):__('No'), $domain['domain_id']);\n\t\t\tform_checkbox_cell($domain['domain_name'], $domain['domain_id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"' . (cacti_sizeof($display_text)+1) . '\"><em>' . __('No User Domains Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($domains)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\nset_default_action();\n\n$group_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Copy'),\n\t3 => __('Enable'),\n\t4 => __('Disable')\n);\n\n$href_options = array(\n\t3 => array(\n\t\t'radio_value' => '4',\n\t\t'radio_caption' => __('Defer to the Users Setting')\n\t\t),\n\t0 => array(\n\t\t'radio_value' => '1',\n\t\t'radio_caption' => __('Show the Page that the User pointed their browser to')\n\t\t),\n\t1 => array(\n\t\t'radio_value' => '2',\n\t\t'radio_caption' => __('Show the Console')\n\t\t),\n\t2 => array(\n\t\t'radio_value' => '3',\n\t\t'radio_caption' => __('Show the default Graph Screen')\n\t\t)\n);\n\n$gperm_options = array(\n\t0 => array(\n\t\t'radio_value' => '1',\n\t\t'radio_caption' => __('Defer to the Users Setting')\n\t\t),\n\t1 => array(\n\t\t'radio_value' => '2',\n\t\t'radio_caption' => __('Grant Access')\n\t\t),\n\t2 => array(\n\t\t'radio_value' => '3',\n\t\t'radio_caption' => __('Restrict Access')\n\t\t)\n);\n\n$fields_user_group_edit = array(\n\t'name' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Group Name'),\n\t\t'description' => __('The name of this Group.'),\n\t\t'value' => '|arg1:name|',\n\t\t'max_length' => '255'\n\t\t),\n\t'description' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Group Description'),\n\t\t'description' => __('A more descriptive name for this group, that can include spaces or special characters.'),\n\t\t'value' => '|arg1:description|',\n\t\t'max_length' => '255'\n\t\t),\n\t'enabled' => array(\n\t\t'method' => 'checkbox',\n\t\t'friendly_name' => __('Enabled'),\n\t\t'description' => __('Determines if user is able to login.'),\n\t\t'value' => '|arg1:enabled|',\n\t\t'default' => ''\n\t\t),\n\t'grp1' => array(\n\t\t'friendly_name' => __('General Group Options'),\n\t\t'method' => 'checkbox_group',\n\t\t'description' => __('Set any user account-specific options here.'),\n\t\t'items' => array(\n\t\t\t'graph_settings' => array(\n\t\t\t\t'value' => '|arg1:graph_settings|',\n\t\t\t\t'friendly_name' => __('Allow Users of this Group to keep custom User Settings'),\n\t\t\t\t'form_id' => '|arg1:id|',\n\t\t\t\t'default' => 'on'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t'show_tree' => array(\n\t\t'friendly_name' => __('Tree Rights'),\n\t\t'method' => 'radio',\n\t\t'description' => __('Should Users of this Group have access to the Tree?'),\n\t\t'value' => '|arg1:show_tree|',\n\t\t'default' => '1',\n\t\t'items' => $gperm_options\n\t\t),\n\t'show_list' => array(\n\t\t'friendly_name' => __('Graph List Rights'),\n\t\t'method' => 'radio',\n\t\t'description' => __('Should Users of this Group have access to the Graph List?'),\n\t\t'value' => '|arg1:show_list|',\n\t\t'default' => '1',\n\t\t'items' => $gperm_options\n\t\t),\n\t'show_preview' => array(\n\t\t'friendly_name' => __('Graph Preview Rights'),\n\t\t'method' => 'radio',\n\t\t'description' => __('Should Users of this Group have access to the Graph Preview?'),\n\t\t'value' => '|arg1:show_preview|',\n\t\t'default' => '1',\n\t\t'items' => $gperm_options\n\t\t),\n\t'login_opts' => array(\n\t\t'friendly_name' => __('Login Options'),\n\t\t'method' => 'radio',\n\t\t'default' => '1',\n\t\t'description' => __('What to do when a User from this User Group logs in.'),\n\t\t'value' => '|arg1:login_opts|',\n\t\t'items' => $href_options\n\t\t),\n\t'id' => array(\n\t\t'method' => 'hidden_zero',\n\t\t'value' => '|arg1:id|'\n\t\t),\n\t'save_component_group' => array(\n\t\t'method' => 'hidden',\n\t\t'value' => '1'\n\t\t)\n);\n\nif (isset_request_var('update_policy')) {\n\tupdate_policies();\n} else {\n\tswitch (get_request_var('action')) {\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'perm_remove':\n\t\tperm_remove();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tgroup_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tdefault:\n\t\tif (!api_plugin_hook_function('user_group_admin_action', get_request_var('action'))) {\n\t\t\ttop_header();\n\t\t\tuser_group();\n\t\t\tbottom_footer();\n\t\t}\n\n\t\tbreak;\n\t}\n}\n\n/* --------------------------\n    Actions Function\n   -------------------------- */\n\nfunction user_group_disable($id) {\n\tdb_execute_prepared(\"UPDATE user_auth_group SET enabled = '' WHERE id = ?\", array($id));\n}\n\nfunction user_group_enable($id) {\n\tdb_execute_prepared(\"UPDATE user_auth_group SET enabled = 'on' WHERE id = ?\", array($id));\n}\n\nfunction user_group_remove($id) {\n\tdb_execute_prepared('DELETE FROM user_auth_group WHERE id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM user_auth_group_members WHERE group_id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM user_auth_group_realm WHERE group_id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE group_id = ?', array($id));\n}\n\nfunction user_group_copy($id, $prefix = 'New Group') {\n\tstatic $count = 1;\n\n\t$name = $prefix . ' ' . $count;\n\n\tdb_execute_prepared('INSERT INTO user_auth_group\n\t\t(name, description, graph_settings, login_opts, show_tree, show_list, show_preview,\n\t\tpolicy_graphs, policy_trees, policy_hosts, policy_graph_templates, enabled)\n\t\tSELECT ' . db_qstr($name) . ', description, graph_settings, login_opts, show_tree, show_list, show_preview,\n\t\tpolicy_graphs, policy_trees, policy_hosts, policy_graph_templates, enabled\n\t\tFROM user_auth_group WHERE id = ?', array($id));\n\n\t$id = db_fetch_insert_id();\n\n\tif (!empty($id)) {\n\t\t$perms = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM user_auth_group_perms\n\t\t\tWHERE group_id = ?',\n\t\t\tarray($id));\n\n\t\tif (cacti_sizeof($perms)) {\n\t\t\tforeach($perms as $p) {\n\t\t\t\tdb_execute_prepared('INSERT INTO user_auth_group_perms\n\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\tVALUES (?, ?, ?)',\n\t\t\t\t\tarray($id, $p['item_id'], $p['type']));\n\t\t\t}\n\t\t}\n\n\t\t$realms = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM user_auth_group_realm\n\t\t\tWHERE group_id = ?',\n\t\t\tarray($id));\n\n\t\tif (cacti_sizeof($realms)) {\n\t\t\tforeach($realms as $r) {\n\t\t\t\tdb_execute_prepared('INSERT INTO user_auth_group_realm\n\t\t\t\t\t(group_id, realm_id)\n\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\tarray($id, $r['realm_id']));\n\t\t\t}\n\t\t}\n\t}\n\n\t$count++;\n}\n\nfunction update_policies() {\n\t$set = '';\n\n\t$set .= isset_request_var('policy_graphs') ? 'policy_graphs=' . get_nfilter_request_var('policy_graphs'):'';\n\t$set .= isset_request_var('policy_trees') ? ($set != '' ? ',':'') . 'policy_trees=' . get_nfilter_request_var('policy_trees'):'';\n\t$set .= isset_request_var('policy_hosts') ? ($set != '' ? ',':'') . 'policy_hosts=' . get_nfilter_request_var('policy_hosts'):'';\n\t$set .= isset_request_var('policy_graph_templates') ? ($set != '' ? ',':'') . 'policy_graph_templates=' . get_nfilter_request_var('policy_graph_templates'):'';\n\n\tif ($set != '') {\n\t\tdb_execute_prepared(\"UPDATE user_auth_group SET $set WHERE id = ?\", array(get_nfilter_request_var('id')));\n\t}\n\n\theader('Location: user_group_admin.php?action=edit&header=false&tab=' .  get_nfilter_request_var('tab') . '&id=' . get_nfilter_request_var('id'));\n\texit;\n}\n\nfunction form_actions() {\n\tglobal $group_actions, $user_auth_realms;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('associate_host')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_perms\n\t\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 3)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 3',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=permsd&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_graph')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_perms\n\t\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 1)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 1',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=permsg&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_template')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_perms\n\t\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 4)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 4',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=permste&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_tree')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_perms\n\t\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 2)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 2',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=permstr&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_member')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_members\n\t\t\t\t\t\t(group_id, user_id)\n\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_members\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND user_id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=members&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tuser_group_remove($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* copy */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tuser_group_copy($selected_items[$i], get_nfilter_request_var('group_prefix'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { /* enable */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tuser_group_enable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { /* disable */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tuser_group_disable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?header=false');\n\t\texit;\n\t}\n\n\t/* loop through each of the users and process them */\n\t$group_list = '';\n\t$group_array = array();\n\t$i = 0;\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\tif (get_nfilter_request_var('drp_action') != '2') {\n\t\t\t\t$group_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM user_auth_group WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t}\n\t\t\t$group_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('user_group_admin.php');\n\n\thtml_start_box($group_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($group_array) && cacti_sizeof($group_array)) {\n\t\tif ((get_nfilter_request_var('drp_action') == '1') && (cacti_sizeof($group_array))) { /* delete */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following User Group', 'Click \\'Continue\\' to delete following User Groups', cacti_sizeof($group_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$group_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete User Group', 'Delete User Groups', cacti_sizeof($group_array)) . \"'>\";\n\t\t}\n\n\t\t$group_id = '';\n\n\t\tif ((get_nfilter_request_var('drp_action') == '2') && (cacti_sizeof($group_array))) { /* copy */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to Copy the following User Group to a new User Group.', 'Click \\'Continue\\' to Copy following User Groups to new User Groups.', cacti_sizeof($group_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$group_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Group Prefix:') . \" \";\n\t\t\tprint form_text_box('group_prefix', __('New Group'), '', 25);\n\t\t\tprint \"</p></td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Copy User Group', 'Copy User Groups', cacti_sizeof($group_array)) . \"'>\";\n\t\t}\n\n\t\tif ((get_nfilter_request_var('drp_action') == '3') && (cacti_sizeof($group_array))) { /* enable */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to enable the following User Group.', 'Click \\'Continue\\' to enable following User Groups.', cacti_sizeof($group_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$group_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Enable User Group', 'Enable User Groups', cacti_sizeof($group_array)) . \"'>\";\n\t\t}\n\n\t\tif ((get_nfilter_request_var('drp_action') == '4') && (cacti_sizeof($group_array))) { /* disable */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to disable the following User Group.', 'Click \\'Continue\\' to disable following User Groups.', cacti_sizeof($group_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$group_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Disable User Group', 'Disable User Groups', cacti_sizeof($group_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: user_group_admin.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\";\n\n\tprint \"<input type='hidden' name='selected_items' value='\" . (isset($group_array) ? serialize($group_array) : '') . \"'>\\n\";\n\tprint \"<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* --------------------------\n    Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tglobal $settings_user;\n\n\tif (isset_request_var('save_component_group')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('realm');\n\t\t/* ==================================================== */\n\n\t\t/* check duplicate group */\n\t\tif (cacti_sizeof(db_fetch_row_prepared('SELECT * FROM user_auth_group WHERE name = ? AND id != ?', array(get_nfilter_request_var('name'), get_nfilter_request_var('id'))))) {\n\t\t\traise_message(12);\n\t\t}\n\n\t\t$save['id']             = get_nfilter_request_var('id');\n\t\t$save['name']           = form_input_validate(get_nfilter_request_var('name'), 'name', \"^[A-Za-z0-9\\._\\\\\\@\\ -]+$\", false, 3);\n\t\t$save['description']    = form_input_validate(get_nfilter_request_var('description'), 'description', '', true, 3);\n\t\t$save['show_tree']      = form_input_validate(get_nfilter_request_var('show_tree', ''), 'show_tree', '', true, 3);\n\t\t$save['show_list']      = form_input_validate(get_nfilter_request_var('show_list', ''), 'show_list', '', true, 3);\n\t\t$save['show_preview']   = form_input_validate(get_nfilter_request_var('show_preview', ''), 'show_preview', '', true, 3);\n\t\t$save['graph_settings'] = form_input_validate(get_nfilter_request_var('graph_settings', ''), 'graph_settings', '', true, 3);\n\t\t$save['login_opts']     = form_input_validate(get_nfilter_request_var('login_opts'), 'login_opts', '', true, 3);\n\t\t$save['enabled']        = form_input_validate(get_nfilter_request_var('enabled', ''), 'enabled', '', true, 3);\n\t\t$save = api_plugin_hook_function('user_group_admin_setup_sql_save', $save);\n\n\t\tif (!is_error_message()) {\n\t\t\t$group_id = sql_save($save, 'user_auth_group');\n\n\t\t\tif ($group_id) {\n\t\t\t\treset_group_perms($group_id);\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=general&id=' . (isset($group_id) && $group_id > 0 ? $group_id : get_nfilter_request_var('id')));\n\t\texit;\n\t} elseif (isset_request_var('save_component_realm_perms')) {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_realm WHERE group_id = ?', array(get_filter_request_var('id')));\n\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^[section]/i', $var)) {\n\t\t\t\tif (substr($var, 0, 7) == 'section') {\n\t\t\t\t    db_execute_prepared('REPLACE INTO user_auth_group_realm (group_id, realm_id) VALUES (?, ?)', array(get_request_var('id'), substr($var, 7)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treset_group_perms(get_request_var('id'));\n\n\t\traise_message(1);\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=realms&id=' . get_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('save_component_graph_settings')) {\n\t\tforeach ($settings_user as $tab_short_name => $tab_fields) {\n\t\t\tforeach ($tab_fields as $field_name => $field_array) {\n\t\t\t\tif ((isset($field_array['items'])) && (is_array($field_array['items']))) {\n\t\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\t\tdb_execute_prepared('REPLACE INTO settings_user_group (group_id, name, value) VALUES (?, ?, ?)', array(get_filter_request_var('id'), $sub_field_name, get_nfilter_request_var($sub_field_name, '')));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO settings_user_group (group_id, name, value) VALUES (?, ?, ?)', array(get_request_var('id'), $field_name, get_nfilter_request_var($field_name)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tkill_session_var('sess_user_config_array');\n\n\t\treset_group_perms(get_request_var('id'));\n\n\t\traise_message(1);\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=settings&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} else {\n\t\tapi_plugin_hook('user_group_admin_save');\n\t}\n\n\t/* redirect to the appropriate page */\n\theader('Location: user_group_admin.php?action=edit&header=false&tab=general&id=' .  get_nfilter_request_var('id'));\n}\n\n/* --------------------------\n    Graph Permissions\n   -------------------------- */\n\nfunction perm_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('group_id');\n\t/* ==================================================== */\n\n\tif (get_request_var('type') == 'graph') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE type=1 AND group_id = ? AND item_id = ?', array(get_request_var('group_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'tree') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE type=2 AND group_id = ? AND item_id = ?', array(get_request_var('group_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'host') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE type=3 AND group_id = ? AND item_id = ?', array(get_request_var('group_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'graph_template') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE type=4 AND group_id = ? AND item_id = ?', array(get_request_var('group_id'), get_request_var('id')));\n\t}\n\n\theader('Location: user_group_admin.php?action=edit&header=false&tab=gperms&id=' . get_request_var('group_id'));\n}\n\nfunction user_group_members_edit($header_label) {\n\tglobal $config, $auth_realms;\n\n\tprocess_member_request_vars();\n\n\tmember_filter($header_label);\n\n\t/* if the number of rows is -1, set it to the default */\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (username LIKE '%\" . get_request_var('filter') . \"%' OR full_name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('associated') == 'false') {\n\t\t/* Show all items */\n\t} else {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_group_members.group_id=' . get_request_var('id', 0) . ')';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(ua.id)\n\t\tFROM user_auth AS ua\n\t\tLEFT JOIN user_auth_group_members\n\t\tON (ua.id = user_auth_group_members.user_id)\n\t\t$sql_where\");\n\n\t$sql_query = \"SELECT DISTINCT ua.id, ua.username, ua.full_name, ua.enabled, ua.realm\n\t\tFROM user_auth AS ua\n\t\tLEFT JOIN user_auth_group_members\n\t\tON (ua.id = user_auth_group_members.user_id)\n\t\t$sql_where\n\t\tORDER BY username, full_name\n\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$members = db_fetch_assoc($sql_query);\n\n\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=members&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Users'), 'page', 'main');\n\n\tform_start('user_group_admin.php?tab=members&id=' . get_request_var('id'), 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array( __('Login Name'), __('Full Name'), __('ID'), __('Membership'), __('Enabled'), __('Realm'));\n\n\thtml_header_checkbox($display_text, false);\n\n\tif (cacti_sizeof($members)) {\n\t\tforeach ($members as $g) {\n\t\t\tform_alternate_row('line' . $g['id'], true);\n\t\t\tform_selectable_cell(filter_value($g['username'], get_request_var('filter'), 'user_admin.php?action=user_edit&id=' . $g['id']), $g['id']);\n\t\t\tform_selectable_cell(filter_value($g['full_name'], get_request_var('filter')), $g['id']);\n\t\t\tform_selectable_cell($g['id'], $g['id']);\n\t\t\tif (user_group_is_member($g['id'], get_request_var('id'))) {\n\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Group Member') . '</span>', $g['id']);\n\t\t\t} else {\n\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Non Member') . '</span>', $g['id']);\n\t\t\t}\n\t\t\tform_selectable_cell(($g['enabled'] == 'on' ? __('Enabled'): __('Disabled') ), $g['id']);\n\t\t\tform_selectable_cell((isset($auth_realms[$g['realm']]) ? $auth_realms[$g['realm']]:'Unknown'), $g['id']);\n\t\t\tform_checkbox_cell($g['full_name'], $g['id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td><em>' . __('No Matching Group Members Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($members)) {\n\t\tprint $nav;\n\t}\n\n\tform_hidden_box('tab', 'members', '');\n\tform_hidden_box('id', get_request_var('id'), '');\n\tform_hidden_box('associate_member', '1', '');\n\n\t$assoc_actions = array(\n\t\t1 => __('Add to Group'),\n\t\t2 => __('Remove from Group')\n\t);\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($assoc_actions);\n\n\tform_end();\n}\n\nfunction user_group_graph_perms_edit($tab, $header_label) {\n\tglobal $config, $assoc_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$policy_array = array(\n\t\t1 => __('Allow'),\n\t\t2 => __('Deny')\n\t);\n\n\tif (!isempty_request_var('id')) {\n\t\t$policy = db_fetch_row_prepared('SELECT policy_graphs, policy_trees, policy_hosts, policy_graph_templates\n\t\t\tFROM user_auth_group\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\tswitch($tab) {\n\tcase 'permsg':\n\t\tprocess_graph_request_vars();\n\n\t\tgraph_filter($header_label);\n\n\t\tform_start('user_group_admin.php', 'policy');\n\n\t\t/* box: device permissions */\n\t\thtml_start_box( __('Default Graph Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><? print __('Default Graph Policy for this User Group');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_graphs', $policy_array, '', '', $policy['policy_graphs'], '', ''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type=\"hidden\" name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (gtg.title_cache LIKE '%\" . get_request_var('filter') . \"%' AND gtg.local_graph_id>0)\";\n\t\t} else {\n\t\t\t$sql_where = 'WHERE (gtg.local_graph_id>0)';\n\t\t}\n\n\t\tif (get_request_var('graph_template_id') == '-1') {\n\t\t\t/* Show all items */\n\t\t} elseif (get_request_var('graph_template_id') == '0') {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gtg.graph_template_id=0';\n\t\t} elseif (!isempty_request_var('graph_template_id')) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gtg.graph_template_id=' . get_request_var('graph_template_id');\n\t\t}\n\n\t\tif (get_request_var('associated') == 'false') {\n\t\t\t/* Show all items */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_group_perms.type = 1 AND user_auth_group_perms.group_id=' . get_request_var('id', 0) . ')';\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT\n\t\t\tCOUNT(DISTINCT gtg.id)\n\t\t\tFROM graph_templates_graph AS gtg\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (gtg.local_graph_id = user_auth_group_perms.item_id AND user_auth_group_perms.type = 1 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\");\n\n\t\t$sql_query = \"SELECT gtg.local_graph_id, gtg.title_cache, user_auth_group_perms.group_id\n\t\t\tFROM graph_templates_graph AS gtg\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (gtg.local_graph_id=user_auth_group_perms.item_id AND user_auth_group_perms.type = 1 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\n\t\t\tORDER BY title_cache\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$graphs = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=permsg&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Graphs'), 'page', 'main');\n\n\t\tform_start('user_group_admin.php?tab=permsg&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array( __('Graph Title'), __('ID'), __('Effective Policy'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tforeach ($graphs as $g) {\n\t\t\t\tform_alternate_row('line' . $g['local_graph_id'], true);\n\t\t\t\tform_selectable_cell(filter_value($g['title_cache'], get_request_var('filter')), $g['local_graph_id']);\n\t\t\t\tform_selectable_cell($g['local_graph_id'], $g['local_graph_id']);\n\t\t\t\tif (empty($g['group_id']) || $g['group_id'] == NULL) {\n\t\t\t\t\tif ($policy['policy_graphs'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['local_graph_id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['local_graph_id']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($policy['policy_graphs'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['local_graph_id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['local_graph_id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tform_checkbox_cell($g['title_cache'], $g['local_graph_id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Graphs Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_graph', '1', '');\n\n\t\tif ($policy['policy_graphs'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\tcase 'permsd':\n\t\tprocess_device_request_vars();\n\n\t\tdevice_filter($header_label);\n\n\t\tform_start('user_group_admin.php', 'policy');\n\n\t\t/* box: device permissions */\n\t\thtml_start_box( __('Default Device Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><? print __('Default Graph Policy for this User Group');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_hosts',$policy_array,'','',$policy['policy_hosts'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type=\"hidden\" name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (host.hostname LIKE '%\" . get_request_var('filter') . \"%' OR host.description LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (get_request_var('host_template_id') == '-1') {\n\t\t\t/* Show all items */\n\t\t} elseif (get_request_var('host_template_id') == '0') {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' host.host_template_id=0';\n\t\t} elseif (!isempty_request_var('host_template_id')) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' host.host_template_id=' . get_request_var('host_template_id');\n\t\t}\n\n\t\tif (get_request_var('associated') == 'false') {\n\t\t\t/* Show all items */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' user_auth_group_perms.group_id=' . get_request_var('id', 0);\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT\n\t\t\tCOUNT(DISTINCT host.id)\n\t\t\tFROM host\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (host.id = user_auth_group_perms.item_id AND user_auth_group_perms.type = 3 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\");\n\n\t\t$host_graphs       = array_rekey(db_fetch_assoc('SELECT host_id, count(*) AS graphs FROM graph_local GROUP BY host_id'), 'host_id', 'graphs');\n\t\t$host_data_sources = array_rekey(db_fetch_assoc('SELECT host_id, count(*) AS data_sources FROM data_local GROUP BY host_id'), 'host_id', 'data_sources');\n\n\t\t$sql_query = \"SELECT host.*, user_auth_group_perms.group_id\n\t\t\tFROM host\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (host.id=user_auth_group_perms.item_id AND user_auth_group_perms.type = 3 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\n\t\t\tORDER BY description\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$hosts = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=permsd&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Devices'), 'page', 'main');\n\n\t\tform_start('user_group_admin.php?tab=permsd&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array( __('Description'), __('ID'), __('Effective Policy'), __('Graphs'), __('Data Sources'), __('Status'), __('Hostname') );\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($hosts)) {\n\t\t\tforeach ($hosts as $host) {\n\t\t\t\tform_alternate_row('line' . $host['id'], true);\n\t\t\t\tform_selectable_cell(filter_value($host['description'], get_request_var('filter')), $host['id']);\n\t\t\t\tform_selectable_cell(round(($host['id']), 2), $host['id']);\n\t\t\t\tif (empty($host['group_id']) || $host['group_id'] == NULL) {\n\t\t\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $host['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $host['id']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $host['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $host['id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tform_selectable_cell((isset($host_graphs[$host['id']]) ? $host_graphs[$host['id']] : 0), $host['id']);\n\t\t\t\tform_selectable_cell((isset($host_data_sources[$host['id']]) ? $host_data_sources[$host['id']] : 0), $host['id']);\n\t\t\t\tform_selectable_cell(get_colored_device_status(($host['disabled'] == 'on' ? true : false), $host['status']), $host['id']);\n\t\t\t\tform_selectable_cell(filter_value($host['hostname'], get_request_var('filter')), $host['id']);\n\t\t\t\tform_checkbox_cell($host['description'], $host['id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Devices Found') . '</em></td></tr>';\n\t\t}\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($hosts)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_host', '1', '');\n\n\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\tcase 'permste':\n\t\tprocess_template_request_vars();\n\n\t\ttemplate_filter($header_label);\n\n\t\tform_start('user_group_admin.php', 'policy');\n\n\t\t/* box: device permissions */\n\t\thtml_start_box( __('Default Graph Template Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><?php print __('Default Graph Template Policy for this User Group');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_graph_templates',$policy_array,'','',$policy['policy_graph_templates'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type=\"hidden\" name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (gt.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (get_request_var('associated') == 'false') {\n\t\t\t/* Show all items */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_group_perms.type = 4 AND user_auth_group_perms.group_id=' . get_request_var('id', 0) . ')';\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT\n\t\t\tCOUNT(DISTINCT gt.id)\n\t\t\tFROM graph_templates AS gt\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (gt.id = user_auth_group_perms.item_id AND user_auth_group_perms.type = 4 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\n\t\t\tGROUP BY gl.graph_template_id\");\n\n\t\t$sql_query = \"SELECT gt.id, gt.name, count(*) AS totals, user_auth_group_perms.group_id\n\t\t\tFROM graph_templates AS gt\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (gt.id = user_auth_group_perms.item_id AND user_auth_group_perms.type = 4 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\n\t\t\tGROUP BY gl.graph_template_id\n\t\t\tORDER BY name\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$graphs = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=permste&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Graph Templates'), 'page', 'main');\n\n\t\tform_start('user_group_admin.php?tab=permste&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array( __('Template Name'), __('ID'), __('Effective Policy'), __('Total Graphs'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tforeach ($graphs as $g) {\n\t\t\t\tform_alternate_row('line' . $g['id'], true);\n\t\t\t\tform_selectable_cell(filter_value($g['name'], get_request_var('filter')), $g['id']);\n\t\t\t\tform_selectable_cell($g['id'], $g['id']);\n\t\t\t\tif (empty($g['group_id']) || $g['group_id'] == NULL) {\n\t\t\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['id']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tform_selectable_cell($g['totals'], $g['id']);\n\t\t\t\tform_checkbox_cell($g['name'], $g['id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Graph Templates Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_template', '1', '');\n\n\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\tcase 'permstr':\n\t\tprocess_tree_request_vars();\n\n\t\ttree_filter($header_label);\n\n\t\tform_start('user_group_admin.php', 'policy');\n\n\t\t/* box: device permissions */\n\t\thtml_start_box( __('Default Tree Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><?php print __('Default Tree Policy for this User Group');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_trees',$policy_array,'','',$policy['policy_trees'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (gt.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (get_request_var('associated') == 'false') {\n\t\t\t/* Show all items */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_group_perms.type = 2 AND user_auth_group_perms.group_id=' . get_request_var('id', 0) . ')';\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT\n\t\t\tCOUNT(DISTINCT gt.id)\n\t\t\tFROM graph_tree AS gt\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (gt.id = user_auth_group_perms.item_id AND user_auth_group_perms.type = 2 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\");\n\n\t\t$sql_query = \"SELECT gt.id, gt.name, user_auth_group_perms.group_id\n\t\t\tFROM graph_tree AS gt\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (gt.id = user_auth_group_perms.item_id AND user_auth_group_perms.type = 2 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\n\t\t\tORDER BY name\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$trees = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=permstr&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Trees'), 'page', 'main');\n\n\t\tform_start('user_group_admin.php?tab=permstr&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array( __('Tree Name'), __('ID'), __('Effective Policy'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($trees)) {\n\t\t\tforeach ($trees as $t) {\n\t\t\t\tform_alternate_row('line' . $t['id'], true);\n\t\t\t\tform_selectable_cell(filter_value($t['name'], get_request_var('filter')), $t['id']);\n\t\t\t\tform_selectable_cell($t['id'], $t['id']);\n\t\t\t\tif (empty($t['group_id']) || $t['group_id'] == NULL) {\n\t\t\t\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $t['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $t['id']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $t['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $t['id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tform_checkbox_cell($t['name'], $t['id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Trees Found') . '</em></td></tr>';\n\t\t}\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($trees)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_tree', '1', '');\n\n\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\t}\n}\n\nfunction user_group_is_member($user_id, $group_id) {\n\treturn db_fetch_cell_prepared('SELECT COUNT(*) FROM user_auth_group_members WHERE user_id = ? AND group_id = ?', array($user_id, $group_id));\n}\n\nfunction user_group_realms_edit($header_label) {\n\tglobal $user_auth_realms, $user_auth_roles;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tprint \"<div class='cactiTable' style='width:100%;text-align:left;'>\n\t\t<div>\n\t\t\t<div class='cactiTableTitle'><span style='padding:3px;'>\" . __('User Permissions') . \" $header_label</span></div>\n\t\t\t<div class='cactiTableButton'><span style='padding:3px;'><input class='checkbox' type='checkbox' id='all' name='all' title='\" . __esc('Select All') . \"' onClick='selectAllRealms(this.checked)'><label class='formCheckboxLabel' title='\" . __esc('Select All') . \"' for='all'></label></a><?php }?></span></div>\n\t\t</div>\n\t</div>\\n\";\n\n\tform_start('user_group_admin.php', 'chk');\n\n\t$all_realms = $user_auth_realms;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t/* do cacti realms first */\n\t$i = 1;\n\tforeach($user_auth_roles as $role_name => $perms) {\n\t\t$j = 1;\n\n\t\tprint \"<tr class='tableHeader'><th colspan='2'>\" . $role_name . \"</th></tr>\\n\";\n\t\tprint \"<tr class='odd'><td colspan='4' style='width:100%;'><table style='width:100%;'>\\n\";\n\t\tforeach($perms as $realm) {\n\t\t\tif ($j == 1) {\n\t\t\t\tprint \"<tr>\\n\";\n\t\t\t}\n\n\t\t\tprint \"<td class='realms'>\\n\";\n\t\t\tif (isset($user_auth_realms[$realm])) {\n\t\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_group_realm WHERE group_id = ? AND realm_id = ?', array(get_request_var('id', 0), $realm))) > 0) {\n\t\t\t\t\t$old_value = 'on';\n\t\t\t\t} else {\n\t\t\t\t\t$old_value = '';\n\t\t\t\t}\n\n\t\t\t\tunset($all_realms[$realm]);\n\n\t\t\t\tform_checkbox('section' . $realm, $old_value, $user_auth_realms[$realm], '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\t\t\t}\n\t\t\tprint \"</td>\\n\";\n\n\t\t\tif ($j == 5) {\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t\t$j = 1;\n\t\t\t} else {\n\t\t\t\t$j++;\n\t\t\t}\n\t\t}\n\n\t\tif ($j > 1) {\n\t\t\tprint \"<td class='realms' colspan='\" . (5-$j) . \"'></td>\\n\";\n\t\t\tprint \"</tr>\\n\";\n\t\t}\n\n\t\tprint \"</table></td></tr>\\n\";\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction selectAllRealms(checked) {\n\t\tif (checked) {\n\t\t\t$('input[id^=\\\"section\\\"]').prop('checked', true);\n\t\t} else {\n\t\t\t$('input[id^=\\\"section\\\"]').prop('checked', false);\n\t\t}\n\t}\n\n\t$(function() {\n\t\t$('input[type=\"checkbox\"]').each(function() {\n\t\t\t$(this).addClass($(this).attr('id'));\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\t/* external links */\n\t$links  = db_fetch_assoc('SELECT * FROM external_links ORDER BY sortorder');\n\n\t$style_translate = array(\n\t\t'CONSOLE'    => __('Console'),\n\t\t'TAB'        => __('Top Tab'),\n\t\t'FRONT'      => __('Bottom Console'),\n\t\t'FRONTTOP'   => __('Top Console')\n\t);\n\n\tprint \"<tr class='tableHeader'><th colspan='2'>\" . __('External Link Permissions') . \"</th></tr>\\n\";\n\tprint \"<tr class='odd'><td colspan='4'><table style='width:100%;'><tr><td class='realms'>\\n\";\n\tif (cacti_sizeof($links)) {\n\t\t$j = 1;\n\n\t\tforeach($links as $r) {\n\t\t\tif ($j == 1) {\n\t\t\t\tprint \"<tr>\\n\";\n\t\t\t}\n\n\t\t\t$realm = $r['id'] + 10000;\n\n\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_group_realm WHERE group_id = ? AND realm_id = ?', array(get_request_var('id', 0), $realm))) > 0) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\tunset($all_realms[$realm]);\n\n\t\t\tprint \"<td class='realms'>\\n\";\n\n\t\t\tswitch($r['style']) {\n\t\t\tcase 'CONSOLE':\n\t\t\t\t$description = $style_translate[$r['style']] . ': ' . ($r['extendedstyle'] == '' ? 'External Links' : $r['extendedstyle']) . '/' . $r['title'];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$description = $style_translate[$r['style']] . ': ' . ucfirst($r['title']);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tform_checkbox('section' . $realm, $old_value, $description, '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\n\t\t\tprint \"</td>\\n\";\n\n\t\t\tif ($j == 5) {\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t\t$j = 1;\n\t\t\t} else {\n\t\t\t\t$j++;\n\t\t\t}\n\t\t}\n\n\t\tif ($j > 1) {\n\t\t\tprint \"<td class='realms' colspan='\" . (5-$j) . \"'></td>\\n\";\n\t\t\tprint \"</tr>\\n\";\n\t\t}\n\t}\n\tprint \"</table></td></tr>\\n\";\n\n\t/* do plugin realms */\n\t$realms = db_fetch_assoc('SELECT pc.name, pr.id AS realm_id, pr.display\n\t\tFROM plugin_config AS pc\n\t\tINNER JOIN plugin_realms AS pr\n\t\tON pc.directory = pr.plugin\n\t\tORDER BY pc.name, pr.display');\n\n\tprint \"<tr class='tableHeader'><th colspan='2'>\" . __('Plugin Permissions') . \"</th></tr>\\n\";\n\tprint \"<tr class='odd'><td colspan='4'><table style='width:100%;'><tr><td class='realms'>\\n\";\n\tif (cacti_sizeof($realms)) {\n\t\t$last_plugin = 'none';\n\t\t$i = 1;\n\t\t$j = 1;\n\n\t\tforeach($realms as $r) {\n\t\t\t$break = false;\n\n\t\t\tif ($last_plugin != $r['name'] && $last_plugin != 'none') {\n\t\t\t\t$break = true;\n\n\t\t\t\tif ($j == 5) {\n\t\t\t\t\tprint \"</tr><tr>\\n\";\n\t\t\t\t\t$break = true;;\n\t\t\t\t\t$j = 1;\n\t\t\t\t} else {\n\t\t\t\t\t$j++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($break) {\n\t\t\t\tprint \"</td><td class='realms'>\\n\";\n\t\t\t}\n\n\t\t\tif ($break || $i == 1) {\n\t\t\t\tprint '<i>' . $r['name'] . \"</i><br>\\n\";\n\t\t\t}\n\n\t\t\t$realm = $r['realm_id'] + 100;\n\n\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_group_realm WHERE group_id = ? AND realm_id = ?', array(get_request_var('id', 0), $realm))) > 0) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\tunset($all_realms[$realm]);\n\n\t\t\t$pos = (strpos($user_auth_realms[$realm], '->') !== false ? strpos($user_auth_realms[$realm], '->')+2:0);\n\n\t\t\tform_checkbox('section' . $realm, $old_value, substr($user_auth_realms[$realm], $pos), '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\n\t\t\t$last_plugin = $r['name'];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\t/* get the old PIA 1.x realms */\n\tif (cacti_sizeof($all_realms)) {\n\t\tif ($break) {\n\t\t\tprint \"</td><td class='realms'>\\n\";\n\t\t}\n\n\t\tprint \"<strong>Legacy 1.x Plugins</strong><br>\\n\";\n\t\tforeach($all_realms as $realm => $name) {\n\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_group_realm WHERE group_id = ? AND realm_id = ?', array(get_request_var('id', 0), $realm))) > 0) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\t$pos = (strpos($user_auth_realms[$realm], '->') !== false ? strpos($user_auth_realms[$realm], '->')+2:0);\n\n\t\t\tform_checkbox('section' . $realm, $old_value, substr($user_auth_realms[$realm], $pos), '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\n\t\t}\n\t}\n\n\tprint \"</td></tr></table></td></tr>\\n\";\n\n\thtml_end_box();\n\n\tform_hidden_box('save_component_realm_perms','1','');\n\tform_hidden_box('tab','realms','');\n\tform_hidden_box('id',get_request_var('id'),'');\n\n\tform_save_button('user_group_admin.php', 'return');\n}\n\nfunction user_group_settings_edit($header_label) {\n\tglobal $settings_user, $tabs_graphs, $graph_views;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tform_start('user_group_admin.php', 'chk');\n\n\thtml_start_box( __('User Settings %s', $header_label), '100%', true, '3', 'center', '');\n\n\tforeach ($settings_user as $tab_short_name => $tab_fields) {\n\t\t$collapsible = true;\n\n\t\tprint \"<div class='spacer tableHeader\" . ($collapsible ? ' collapsible':'') . \"' id='row_$tab_short_name'><div style='cursor:pointer;' class='tableSubHeaderColumn'>\" . $tabs_graphs[$tab_short_name] . ($collapsible ? \"<div style='float:right;padding-right:4px;'><i class='fa fa-angle-double-up'></i></div>\":\"\") . \"</div></div>\\n\";\n\n\t\t$form_array = array();\n\n\t\tforeach ($tab_fields as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $tab_fields[$field_name]);\n\n\t\t\tif ((isset($field_array['items'])) && (is_array($field_array['items']))) {\n\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\tif (graph_config_value_exists($sub_field_name, get_request_var('id'))) {\n\t\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['form_id'] = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['value'] =  db_fetch_cell_prepared('SELECT value FROM settings_user_group WHERE name = ? AND group_id = ?', array($sub_field_name, get_request_var('id')));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (graph_config_value_exists($field_name, get_request_var('id'))) {\n\t\t\t\t\t$form_array[$field_name]['form_id'] = 1;\n\t\t\t\t}\n\n\t\t\t\t$form_array[$field_name]['value'] = db_fetch_cell_prepared('SELECT value FROM settings_user_group WHERE name = ? AND group_id = ?', array($field_name, get_request_var('id')));\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => $form_array\n\t\t\t)\n\t\t);\n\t}\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('save_component_graph_settings','1','');\n\tform_hidden_box('tab','settings','');\n\tform_hidden_box('id',get_request_var('id'),'');\n\n\tform_save_button('user_group_admin.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar themeFonts=<?php print read_config_option('font_method');?>;\n\n\tfunction graphSettings() {\n\t\tif (themeFonts == 1) {\n\t\t\t\t$('#row_fonts').hide();\n\t\t\t\t$('#row_custom_fonts').hide();\n\t\t\t\t$('#row_title_size').hide();\n\t\t\t\t$('#row_title_font').hide();\n\t\t\t\t$('#row_legend_size').hide();\n\t\t\t\t$('#row_legend_font').hide();\n\t\t\t\t$('#row_axis_size').hide();\n\t\t\t\t$('#row_axis_font').hide();\n\t\t\t\t$('#row_unit_size').hide();\n\t\t\t\t$('#row_unit_font').hide();\n\t\t} else {\n\t\t\tvar custom_fonts = $('#custom_fonts').is(':checked');\n\n\t\t\tswitch(custom_fonts) {\n\t\t\tcase true:\n\t\t\t\t$('#row_fonts').show();\n\t\t\t\t$('#row_title_size').show();\n\t\t\t\t$('#row_title_font').show();\n\t\t\t\t$('#row_legend_size').show();\n\t\t\t\t$('#row_legend_font').show();\n\t\t\t\t$('#row_axis_size').show();\n\t\t\t\t$('#row_axis_font').show();\n\t\t\t\t$('#row_unit_size').show();\n\t\t\t\t$('#row_unit_font').show();\n\t\t\t\tbreak;\n\t\t\tcase false:\n\t\t\t\t$('#row_fonts').show();\n\t\t\t\t$('#row_title_size').hide();\n\t\t\t\t$('#row_title_font').hide();\n\t\t\t\t$('#row_legend_size').hide();\n\t\t\t\t$('#row_legend_font').hide();\n\t\t\t\t$('#row_axis_size').hide();\n\t\t\t\t$('#row_axis_font').hide();\n\t\t\t\t$('#row_unit_size').hide();\n\t\t\t\t$('#row_unit_font').hide();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t$(function() {\n\t\tgraphSettings();\n\t});\n\n\t</script>\n\t<?php\n}\n\n/* --------------------------\n    User Administration\n   -------------------------- */\n\nfunction group_edit() {\n\tglobal $config, $fields_user_group_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('tab', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-z_A-Z]+)$/')));\n\t/* ==================================================== */\n\n\t/* present a tabbed interface */\n\t$tabs = array(\n\t\t'general'  => __('General'),\n\t\t'members'  => __('Members'),\n\t\t'realms'   => __('Permissions'),\n\t\t'permsg'   => __('Graph Perms'),\n\t\t'permsd'   => __('Device Perms'),\n\t\t'permste'  => __('Template Perms'),\n\t\t'permstr'  => __('Tree Perms'),\n\t\t'settings' => __('User Settings')\n\t);\n\n\t$tabs = api_plugin_hook_function('ugroup_tabs', $tabs);\n\tif (!isempty_request_var('id')) {\n\t\t$group = db_fetch_row_prepared('SELECT * FROM user_auth_group WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('User Group Management [edit: %s]', html_escape($group['name']));\n\t} else {\n\t\t$header_label = __('User Group Management [new]');\n\t}\n\n    /* set the default tab */\n    load_current_session_value('tab', 'sess_ugroup_tab', 'general');\n    $current_tab = get_nfilter_request_var('tab');\n\n\tif (cacti_sizeof($tabs) && !isempty_request_var('id')) {\n\t\t$i = 0;\n\n\t\t/* draw the tabs */\n\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\\n\";\n\n\t\tforeach (array_keys($tabs) as $tab_short_name) {\n\t\t\tprint \"<li class='subTab'><a class='tab\" . (($tab_short_name == $current_tab) ? \" selected'\" : \"'\") .\n\t\t\t\t\" href='\" . html_escape($config['url_path'] .\n\t\t\t\t'user_group_admin.php?action=edit&id=' . get_request_var('id') .\n\t\t\t\t'&tab=' . $tab_short_name) .\n\t\t\t\t\"'>\" . $tabs[$tab_short_name] . \"</a></li>\\n\";\n\n\t\t\t$i++;\n\t\t}\n\n\t\tprint \"</ul></nav></div>\\n\";\n\t}\n\n\tswitch(get_request_var('tab')) {\n\tcase 'general':\n\t\tapi_plugin_hook_function('user_group_admin_edit', (isset($user) ? get_request_var('id') : 0));\n\n\t\tform_start('user_group_admin.php');\n\n\t\thtml_start_box( $header_label, '100%', true, '3', 'center', '');\n\n\t\tdraw_edit_form(array(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_user_group_edit, (isset($group) ? $group : array()))\n\t\t));\n\n\t\thtml_end_box(true, true);\n\n\t\tform_save_button('user_group_admin.php', 'return');\n\n\t\tbreak;\n\tcase 'settings':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_group_admin.php&header=false');\n\t\t}\n\n\t\tuser_group_settings_edit($header_label);\n\n\t\tbreak;\n\tcase 'realms':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_group_admin.php&header=false');\n\t\t}\n\n\t\tuser_group_realms_edit($header_label);\n\n\t\tbreak;\n\tcase 'permsg':\n\tcase 'permsd':\n\tcase 'permste':\n\tcase 'permstr':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_group_admin.php&header=false');\n\t\t}\n\n\t\tuser_group_graph_perms_edit(get_request_var('tab'), $header_label);\n\n\t\tbreak;\n\tcase 'members':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_group_admin.php&header=false');\n\t\t}\n\n\t\tuser_group_members_edit($header_label);\n\n\t\tbreak;\n\t}\n}\n\nfunction user_group() {\n\tglobal $group_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ugad');\n\t/* ================= input validation ================= */\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_group_admin.php?rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_group_admin.php?clear=1';\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#form_group').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box( __('User Group Management'), '100%', '', '3', 'center', 'user_group_admin.php?action=edit&tab=general');\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='form_group' action='user_group_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Groups');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __x('filter: use', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>' onClick='applyFilter()'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __x('filter: reset', 'Clear');?>' title='<?php print __esc('Clear Filters');?>' onClick='clearFilter()'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* if the number of rows is -1, set it to the default */\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (name LIKE '%\" . get_request_var('filter') . \"%' OR description LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(*)\n\t\tFROM user_auth_group\n\t\t$sql_where\");\n\n\t$group_list = db_fetch_assoc(\"SELECT uag.id, uag.name, uag.description,\n\t\tuag.policy_graphs, uag.policy_hosts, uag.policy_graph_templates,\n\t\tuag.enabled, count(uagm.group_id) AS members\n\t\tFROM user_auth_group AS uag\n\t\tLEFT JOIN user_auth_group_members AS uagm\n\t\tON uag.id = uagm.group_id\n\t\t$sql_where\n\t\tGROUP BY uag.id\n\t\tORDER BY \" . get_request_var('sort_column') . ' ' . get_request_var('sort_direction') .\n\t\t' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows);\n\n\t$nav = html_nav_bar('user_group_admin.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 8, __('Groups'), 'page', 'main');\n\n\tform_start('user_group_admin.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'                   => array(__('Group Name'), 'ASC'),\n\t\t'members'                => array(__('Members'), 'ASC'),\n\t\t'description'            => array(__('Description'), 'ASC'),\n\t\t'policy_graphs'          => array(__('Graph Policy'), 'ASC'),\n\t\t'policy_hosts'           => array(__('Device Policy'), 'ASC'),\n\t\t'policy_graph_templates' => array(__('Template Policy'), 'ASC'),\n\t\t'enabled'                => array(__('Enabled'), 'ASC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($group_list)) {\n\t\tforeach ($group_list as $group) {\n\t\t\tif ($group['enabled'] == 'on') {\n\t\t\t\t$enabled = __('Yes');\n\t\t\t} else {\n\t\t\t\t$enabled = __('No');\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $group['id'], true);\n\t\t\tform_selectable_cell(filter_value($group['name'], get_request_var('filter'), 'user_group_admin.php?action=edit&tab=general&id=' . $group['id']), $group['id']);\n\t\t\tform_selectable_cell(($group['members'] > 0 ? number_format_i18n($group['members'], 0):'None'), $group['id']);\n\t\t\tform_selectable_cell(filter_value($group['description'], get_request_var('filter')), $group['id']);\n\t\t\tform_selectable_cell(($group['policy_graphs'] == 1 ? __('ALLOW') : __('DENY') ), $group['id']);\n\t\t\tform_selectable_cell(($group['policy_hosts'] == 1 ? __('ALLOW') : __('DENY') ), $group['id']);\n\t\t\tform_selectable_cell(($group['policy_graph_templates'] == 1 ? __('ALLOW') : __('DENY') ), $group['id']);\n\t\t\tform_selectable_cell($enabled, $group['id']);\n\t\t\tform_checkbox_cell($group['name'], $group['id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"' . (cacti_sizeof($display_text)+1) . '\"><em>' . __('No User Groups Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($group_list)) {\n\t\tprint $nav;\n\t}\n\n\tdraw_actions_dropdown($group_actions);\n\n\tform_end();\n}\n\nfunction process_graph_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t),\n\t\t'graph_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ugg');\n\t/* ================= input validation ================= */\n}\n\nfunction process_device_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t),\n\t\t'host_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ugd');\n\t/* ================= input validation ================= */\n}\n\nfunction process_template_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t),\n\t\t'host_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ugte');\n\t/* ================= input validation ================= */\n}\n\nfunction process_tree_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ugtr');\n\t/* ================= input validation ================= */\n}\n\nfunction process_member_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ugm');\n\t/* ================= input validation ================= */\n}\n\nfunction graph_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_group_admin.php?action=edit&tab=permsg&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&graph_template_id=' + $('#graph_template_id').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_group_admin.php?action=edit&tab=permsg&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box( __('Graph Permissions %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_group_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='graph_template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('graph_template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('graph_template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$graph_templates = db_fetch_assoc('SELECT DISTINCT gt.id, gt.name\n\t\t\t\t\t\t\t\tFROM graph_templates AS gt\n\t\t\t\t\t\t\t\tINNER JOIN graph_local AS gl\n\t\t\t\t\t\t\t\tON gl.graph_template_id = gt.id\n\t\t\t\t\t\t\t\tORDER BY name');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($graph_templates)) {\n\t\t\t\t\t\t\t\tforeach ($graph_templates as $gt) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $gt['id'] . \"'\"; if (get_request_var('graph_template_id') == $gt['id']) { print ' selected'; } print '>' . html_escape($gt['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Graphs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __x('filter: use','Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __x('filter: reset','Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t<input type='hidden' name='tab' value='permsg'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction device_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_group_admin.php?action=edit&tab=permsd&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&host_template_id=' + $('#host_template_id').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_group_admin.php?action=edit&tab=permsd&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box( __('Devices Permission %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_group_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='host_template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('host_template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('host_template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$host_templates = db_fetch_assoc('SELECT id, name FROM host_template ORDER BY name');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($host_templates) > 0) {\n\t\t\t\t\t\t\t\tforeach ($host_templates as $host_template) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $host_template['id'] . \"'\"; if (get_request_var('host_template_id') == $host_template['id']) { print ' selected'; } print '>' . html_escape($host_template['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Devices');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __x('filter: use', 'Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __x('filter: reset', 'Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t<input type='hidden' name='tab' value='permsd'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction template_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_group_admin.php?action=edit&tab=permste&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_group_admin.php?action=edit&tab=permste&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box( __('Template Permission %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_group_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Templates');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __x('filter: use', 'Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __x('filter: reset', 'Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t<input type='hidden' name='tab' value='permste'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction tree_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_group_admin.php?action=edit&tab=permstr&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_group_admin.php?action=edit&tab=permstr&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box( __('Tree Permission %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_group_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Trees');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __x('filter: use', 'Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __x('filter: reset', 'Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t<input type='hidden' name='tab' value='permstr'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction member_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_group_admin.php?action=edit&tab=members&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_group_admin.php?action=edit&tab=members&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box( __('User Membership %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_group_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Users');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Members');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __x('filter: use', 'Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __x('filter reset', 'Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t<input type='hidden' name='tab' value='members'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/boost.php');\ninclude_once('./lib/clog_webapi.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'clear_poller_cache':\n\t\t/* obtain timeout settings */\n\t\t$max_execution = ini_get('max_execution_time');\n\t\tini_set('max_execution_time', '0');\n\t\trepopulate_poller_cache();\n\t\tini_set('max_execution_time', $max_execution);\n\t\theader('Location: utilities.php?action=view_poller_cache');exit;\n\t\tbreak;\n\tcase 'rebuild_resource_cache':\n\t\trebuild_resource_cache();\n\t\theader('Location: utilities.php?header=false');exit;\n\t\tbreak;\n\tcase 'view_snmp_cache':\n\t\ttop_header();\n\t\tutilities_view_snmp_cache();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'view_poller_cache':\n\t\ttop_header();\n\t\tutilities_view_poller_cache();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'view_logfile':\n\t\tutilities_view_logfile();\n\t\tbreak;\n\tcase 'clear_logfile':\n\t\tutilities_clear_logfile();\n\t\tutilities_view_logfile();\n\t\tbreak;\n\tcase 'purge_logfile':\n\t\tclog_purge_logfile();\n\t\tutilities_view_logfile();\n\t\tbreak;\n\tcase 'view_cleaner':\n\t\ttop_header();\n\t\tutilities_view_cleaner();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'view_user_log':\n\t\ttop_header();\n\t\tutilities_view_user_log();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'clear_user_log':\n\t\tutilities_clear_user_log();\n\t\tutilities_view_user_log();\n\t\tbreak;\n\tcase 'view_tech':\n\t\t$php_info = utilities_php_modules();\n\n\t\ttop_header();\n\t\tutilities_view_tech($php_info);\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'view_boost_status':\n\t\ttop_header();\n\t\tboost_display_run_status();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'view_snmpagent_cache':\n\t\ttop_header();\n\t\tsnmpagent_utilities_run_cache();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'rebuild_snmpagent_cache';\n\t\tsnmpagent_cache_rebuilt();\n\t\theader('Location: utilities.php?action=view_snmpagent_cache');exit;\n\t\tbreak;\n\tcase 'view_snmpagent_events':\n\t\ttop_header();\n\t\tsnmpagent_utilities_run_eventlog();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'ajax_hosts':\n\t\tget_allowed_ajax_hosts();\n\n\t\tbreak;\n\tcase 'ajax_hosts_noany':\n\t\tget_allowed_ajax_hosts(false);\n\n\t\tbreak;\n\tdefault:\n\t\tif (!api_plugin_hook_function('utilities_action', get_request_var('action'))) {\n\t\t\ttop_header();\n\t\t\tutilities();\n\t\t\tbottom_footer();\n\t\t}\n\t\tbreak;\n}\n\n/* -----------------------\n    Utilities Functions\n   ----------------------- */\n\nfunction rebuild_resource_cache() {\n\tdb_execute('DELETE FROM settings WHERE name LIKE \"md5dirsum%\"');\n\tdb_execute('TRUNCATE TABLE poller_resource_cache');\n\n\traise_message('resource_cache_rebuild');\n\n\tcacti_log('NOTE: Poller Resource Cache scheduled for rebuild by user ' . get_username($_SESSION['sess_user_id']), false, 'WEBUI');\n}\n\nfunction utilities_view_tech($php_info = '') {\n\tglobal $database_default, $config, $rrdtool_versions, $poller_options, $input_types;\n\n\t/* Get table status */\n\t$tables = db_fetch_assoc_prepared('SELECT *\n\t\tFROM information_schema.tables\n\t\tWHERE table_schema = ?', array($database_default));\n\n\t/* Get poller stats */\n\t$poller_item = db_fetch_assoc('SELECT action, count(action) AS total\n\t\tFROM poller_item\n\t\tGROUP BY action');\n\n\t/* Get system stats */\n\t$host_count  = db_fetch_cell('SELECT COUNT(*) FROM host');\n\t$graph_count = db_fetch_cell('SELECT COUNT(*) FROM graph_local');\n\t$data_count  = db_fetch_assoc('SELECT i.type_id, COUNT(i.type_id) AS total\n\t\tFROM data_template_data AS d, data_input AS i\n\t\tWHERE d.data_input_id = i.id\n\t\tAND local_data_id <> 0\n\t\tGROUP BY i.type_id');\n\n\t/* Get RRDtool version */\n\t$rrdtool_version = 'Unknown';\n\tif ((file_exists(read_config_option('path_rrdtool'))) && ((function_exists('is_executable')) && (is_executable(read_config_option('path_rrdtool'))))) {\n\n\t\t$out_array = array();\n\t\texec(cacti_escapeshellcmd(read_config_option('path_rrdtool')), $out_array);\n\t\tif (cacti_sizeof($out_array) > 0) {\n\t\t\tif (preg_match('/^RRDtool ([0-9.]+)/', $out_array[0], $m)) {\n\t\t\t\tpreg_match('/^([0-9]+\\.[0-9]+)\\./', $m[1], $m2);\n\t\t\t\t$rrdtool_release = $m[1];\n\t\t\t\t$rrdtool_version = $m2[1];\n\t\t\t}\n\t\t}\n\t}\n\n\t/* Get SNMP cli version */\n\tif ((file_exists(read_config_option('path_snmpget'))) && ((function_exists('is_executable')) && (is_executable(read_config_option('path_snmpget'))))) {\n\t\t$snmp_version = shell_exec(cacti_escapeshellcmd(read_config_option('path_snmpget')) . ' -V 2>&1');\n\t} else {\n\t\t$snmp_version = \"<span class='deviceDown'>\" . __('NET-SNMP Not Installed or its paths are not set.  Please install if you wish to monitor SNMP enabled devices.') . \"</span>\";\n\t}\n\n\t/* Check RRDtool issues */\n\t$rrdtool_errors = array();\n\tif (cacti_version_compare($rrdtool_version, get_rrdtool_version(), '<')) {\n\t\t$rrdtool_errors[] = \"<span class='deviceDown'>\" . __('ERROR: Installed RRDtool version does not exceed configured version.<br>Please visit the %s and select the correct RRDtool Utility Version.', \"<a href='\" . html_escape('settings.php?tab=general') . \"'>\" . __('Configuration Settings') . '</a>') . \"</span>\";\n\t}\n\n\t$graph_gif_count = db_fetch_cell('SELECT COUNT(*) FROM graph_templates_graph WHERE image_format_id = 2');\n\tif ($graph_gif_count > 0) {\n\t\t$rrdtool_errors[] = \"<span class='deviceDown'>\" . __('ERROR: RRDtool 1.2.x+ does not support the GIF images format, but %d\" graph(s) and/or templates have GIF set as the image format.', $graph_gif_count) . '</span>';\n\t}\n\n\t/* Get spine version */\n\t$spine_version = 'Unknown';\n\tif ((file_exists(read_config_option('path_spine'))) && ((function_exists('is_executable')) && (is_executable(read_config_option('path_spine'))))) {\n\t\t$out_array = array();\n\t\texec(read_config_option('path_spine') . ' --version', $out_array);\n\t\tif (cacti_sizeof($out_array) > 0) {\n\t\t\t$spine_version = $out_array[0];\n\t\t}\n\t}\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('tab', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-z_A-Z]+)$/')));\n\t/* ==================================================== */\n\n\t/* present a tabbed interface */\n\t$tabs = array(\n\t\t'summary'  => __('Summary'),\n\t\t'database' => __('Database'),\n\t\t'phpinfo'  => __('PHP Info'),\n\t);\n\n\t/* set the default tab */\n\tload_current_session_value('tab', 'sess_ts_tabs', 'summary');\n\t$current_tab = get_nfilter_request_var('tab');\n\n\t$header_label = __('Technical Support [%s]', $tabs[get_request_var('tab')]);\n\n\tif (cacti_sizeof($tabs)) {\n\t\t$i = 0;\n\n\t\t/* draw the tabs */\n\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\\n\";\n\n\t\tforeach (array_keys($tabs) as $tab_short_name) {\n\t\t\tprint \"<li class='subTab'><a class='tab\" . (($tab_short_name == $current_tab) ? \" selected'\" : \"'\") .\n\t\t\t\t\" href='\" . html_escape($config['url_path'] .\n\t\t\t\t'utilities.php?action=view_tech' .\n\t\t\t\t'&tab=' . $tab_short_name) .\n\t\t\t\t\"'>\" . $tabs[$tab_short_name] . \"</a></li>\\n\";\n\n\t\t\t$i++;\n\t\t}\n\n\t\tapi_plugin_hook('utilities_tab');\n\n\t\tprint \"</ul></nav></div>\\n\";\n\t}\n\n\t/* Display tech information */\n\thtml_start_box($header_label, '100%', '', '3', 'center', '');\n\n\tif (get_request_var('tab') == 'summary') {\n\t\thtml_section_header(__('General Information'), 2);\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Date') . \"</td>\\n\";\n\t\tprint '<td>' . date('r') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tapi_plugin_hook_function('custom_version_info');\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Cacti Version') . \"</td>\\n\";\n\t\tprint '<td>' . CACTI_VERSION . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Cacti OS') . \"</td>\\n\";\n\t\tprint '<td>' . $config['cacti_server_os'] . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('RSA Fingerprint') . \"</td>\\n\";\n\t\tprint '<td>' . read_config_option('rsa_fingerprint') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('NET-SNMP Version') . \"</td>\\n\";\n\t\tprint '<td>' . $snmp_version . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('RRDtool Version') . ' ' . __('Configured') . \"</td>\\n\";\n\t\tprint '<td>' . get_rrdtool_version() . \"+</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('RRDtool Version') . ' ' . __('Found') . \"</td>\\n\";\n\t\tprint '<td>' . $rrdtool_release . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tif (!empty($rrdtool_errors)) {\n\t\t\tform_alternate_row();\n\t\t\tprint \"<td>&nbsp;</td>\\n\";\n\t\t\t$br = '';\n\t\t\tprint \"<td>\";\n\t\t\tforeach ($rrdtool_errors as $rrdtool_error) {\n\t\t\t\tprint $br . $rrdtool_error;\n\t\t\t\t$br = '<br/>';\n\t\t\t}\n\t\t\tprint \"</td>\\n\";\n\t\t\tform_end_row();\n\t\t}\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Devices') . \"</td>\\n\";\n\t\tprint '<td>' . number_format_i18n($host_count, -1) . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Graphs') . \"</td>\\n\";\n\t\tprint '<td>' . number_format_i18n($graph_count, -1) . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Data Sources') . \"</td>\\n\";\n\t\tprint '<td>';\n\t\t$data_total = 0;\n\t\tif (cacti_sizeof($data_count)) {\n\t\t\tforeach ($data_count as $item) {\n\t\t\t\tprint $input_types[$item['type_id']] . ': ' . number_format_i18n($item['total'], -1) . '<br>';\n\t\t\t\t$data_total += $item['total'];\n\t\t\t}\n\t\t\tprint __('Total: %s', number_format_i18n($data_total, -1));\n\t\t} else {\n\t\t\tprint \"<span class='deviceDown'>0</span>\";\n\t\t}\n\t\tprint \"</td>\\n\";\n\t\tform_end_row();\n\n\t\thtml_section_header(__('Poller Information'), 2);\n\n\t\tform_alternate_row();\n\t\tprint \"<td>Interval</td>\\n\";\n\t\tprint '<td>' . read_config_option('poller_interval') . \"</td>\\n\";\n\t\tif (file_exists(read_config_option('path_spine')) && $poller_options[read_config_option('poller_type')] == 'spine') {\n\t\t\t$type = $spine_version;\n\t\t        if (!strpos($spine_version, CACTI_VERSION)) {\n\t\t    \t    $type .= '<span class=\"textError\"> (' . __('Different version of Cacti and Spine!') . ')</span>';\n\t\t\t}\n\t\t} else {\n\t\t\t$type = $poller_options[read_config_option('poller_type')];\n\t\t}\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Type') . \"</td>\\n\";\n\t\tprint '<td>' . $type . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Items') . \"</td>\\n\";\n\t\tprint '<td>';\n\t\t$total = 0;\n\t\tif (cacti_sizeof($poller_item)) {\n\t\t\tforeach ($poller_item as $item) {\n\t\t\t\tprint __('Action[%s]', $item['action']) . ': ' . number_format_i18n($item['total'], -1) . '<br>';\n\t\t\t\t$total += $item['total'];\n\t\t\t}\n\t\t\tprint __('Total: %s', number_format_i18n($total, -1));\n\t\t} else {\n\t\t\tprint \"<span class='deviceDown'>\" . __('No items to poll') . \"</span>\";\n\t\t}\n\t\tprint \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Concurrent Processes') . \"</td>\\n\";\n\t\tprint '<td>' . read_config_option('concurrent_processes') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Max Threads') . \"</td>\\n\";\n\t\tprint '<td>' . read_config_option('max_threads') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('PHP Servers') . \"</td>\\n\";\n\t\tprint '<td>' . read_config_option('php_servers') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Script Timeout') . \"</td>\\n\";\n\t\tprint '<td>' . read_config_option('script_timeout') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Max OID') . \"</td>\\n\";\n\t\tprint '<td>' . read_config_option('max_get_size') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Last Run Statistics') . \"</td>\\n\";\n\t\tprint '<td>' . read_config_option('stats_poller') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\t/* Get System Memory */\n\t\t$memInfo = utilities_get_system_memory();\n\n\t\tif (cacti_sizeof($memInfo)) {\n\t\t\thtml_section_header(__('System Memory'), 2);\n\n\t\t\tforeach($memInfo as $name => $value) {\n\t\t\t\tif ($config['cacti_server_os'] == 'win32') {\n\t\t\t\t\tform_alternate_row();\n\t\t\t\t\tprint \"<td>$name</td>\\n\";\n\t\t\t\t\tprint '<td>' . number_format_i18n($value/1000, 2) . \" MB</td>\\n\";\n\t\t\t\t\tform_end_row();\n\t\t\t\t} else {\n\t\t\t\t\tswitch($name) {\n\t\t\t\t\tcase 'SwapTotal':\n\t\t\t\t\tcase 'SwapFree':\n\t\t\t\t\tcase 'Cached':\n\t\t\t\t\tcase 'MemTotal':\n\t\t\t\t\tcase 'MemFree':\n\t\t\t\t\tcase 'MemAvailable':\n\t\t\t\t\tcase 'Buffers':\n\t\t\t\t\tcase 'Active':\n\t\t\t\t\tcase 'Inactive':\n\t\t\t\t\t\tform_alternate_row();\n\t\t\t\t\t\tprint \"<td>$name</td>\\n\";\n\t\t\t\t\t\tprint '<td>' . number_format_i18n($value, 2) . \"</td>\\n\";\n\t\t\t\t\t\tform_end_row();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tform_end_row();\n\t\t}\n\n\t\thtml_section_header(__('PHP Information'), 2);\n\n\t\tform_alternate_row();\n\t\tprint \"<td>\" . __('PHP Version') . \"</td>\\n\";\n\t\tif (version_compare(PHP_VERSION, '5.5.0') >= 0) {\n\t\t\tprint '<td>' . PHP_VERSION . \"</td>\\n\";\n\t\t} else {\n\t\t\tprint '<td>' . PHP_VERSION . \"</br><span class='deviceDown'>\" . __('PHP Version 5.5.0+ is recommended due to strong password hashing support.') . \"</span></td>\\n\";\n\t\t}\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint \"<td>\" . __('PHP OS') . \"</td>\\n\";\n\t\tprint '<td>' . PHP_OS . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint \"<td>\" . __('PHP uname') . \"</td>\\n\";\n\t\tprint '<td>';\n\t\tif (function_exists('php_uname')) {\n\t\t\tprint php_uname();\n\t\t} else {\n\t\t\tprint __('N/A');\n\t\t}\n\t\tprint \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint \"<td>\" . __('PHP SNMP') . \"</td>\\n\";\n\t\tprint '<td>';\n\t\tif (function_exists('snmpget')) {\n\t\t\tprint __('Installed');\n\t\t} else {\n\t\t\tprint __('Not Installed');\n\t\t}\n\t\tprint \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint \"<td>max_execution_time</td>\\n\";\n\t\tprint '<td>' . ini_get('max_execution_time') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint \"<td>memory_limit</td>\\n\";\n\t\tprint '<td>' . ini_get('memory_limit');\n\n\t\t/* Calculate memory suggestion based off of data source count */\n\t\t$memory_suggestion = $data_total * 32768;\n\n\t\t/* Set minimum - 16M */\n\t\tif ($memory_suggestion < 16777216) {\n\t\t\t$memory_suggestion = 16777216;\n\t\t}\n\t\t/* Set maximum - 512M */\n\t\tif ($memory_suggestion > 536870912) {\n\t\t\t$memory_suggestion = 536870912;\n\t\t}\n\t\t/* Suggest values in 8M increments */\n\t\t$memory_suggestion = round($memory_suggestion / 8388608) * 8388608;\n\t\tif (memory_bytes(ini_get('memory_limit')) < $memory_suggestion) {\n\t\t\tprint \"<br><span class='deviceDown'>\";\n\t\t\tif ((ini_get('memory_limit') == -1)) {\n\t\t\t\tprint __(\"You've set memory limit to 'unlimited'.\") . \"<br>\";\n\t\t\t}\n\t\t\tprint __('It is highly suggested that you alter you php.ini memory_limit to %s or higher.', memory_readable($memory_suggestion)) . ' <br/>' .\n\t\t\t\t__('This suggested memory value is calculated based on the number of data source present and is only to be used as a suggestion, actual values may vary system to system based on requirements.');\n\t\t\tprint '</span><br>';\n\t\t}\n\t\tprint \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tutilities_get_mysql_recommendations();\n\t} elseif (get_request_var('tab') == 'database') {\n\t\thtml_section_header(__('MySQL Table Information - Sizes in KBytes'), 2);\n\n\t\tform_alternate_row();\n\t\tprint \"\t\t<td colspan='2' style='text-align:left;padding:0px'>\";\n\t\tif (cacti_sizeof($tables) > 0) {\n\t\t\tprint \"<table id='tables' class='cactiTable' style='width:100%'>\\n\";\n\t\t\tprint \"<thead>\\n\";\n\t\t\tprint \"<tr class='tableHeader'>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn'>\" . __('Name') . \"</th>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn'>\" . __('Engine') . \"</th>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Rows') . \"</th>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Avg Row Length') . \"</th>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Data Length') . \"</th>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Index Length') . \"</th>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn'>\" . __('Collation') . \"</th>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn'>\" . __('Comment') . \"</th>\\n\";\n\t\t\tprint \"</tr>\\n\";\n\t\t\tprint \"</thead>\\n\";\n\t\t\tforeach ($tables as $table) {\n\t\t\t\tform_alternate_row();\n\t\t\t\tprint '<td>' . $table['TABLE_NAME'] . \"</td>\\n\";\n\t\t\t\tprint '<td>' . $table['ENGINE'] . \"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\">' . number_format_i18n($table['TABLE_ROWS'], -1) . \"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\">' . number_format_i18n($table['AVG_ROW_LENGTH'], -1) . \"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\">' . number_format_i18n($table['DATA_LENGTH'], -1) . \"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\">' . number_format_i18n($table['INDEX_LENGTH'], -1) . \"</td>\\n\";\n\t\t\t\tprint '<td>' . $table['TABLE_COLLATION'] . \"</td>\\n\";\n\t\t\t\tprint '<td>' . $table['TABLE_COMMENT'] . \"</td>\\n\";\n\t\t\t\tform_end_row();\n\t\t\t}\n\n\t\t\tprint \"</table>\\n\";\n\t\t} else {\n\t\t\tprint __('Unable to retrieve table status');\n\t\t}\n\t\tprint \"</td>\\n\";\n\n\t\tform_end_row();\n\t} else {\n\t\thtml_section_header(__('PHP Module Information'), 2);\n\t\tform_alternate_row();\n\t\t$php_info = str_replace(\n\t\t\tarray('width=\"600\"', 'th colspan=\"2\"', ','),\n\t\t\tarray('', 'th class=\"subHeaderColumn\"', ', '),\n\t\t\t$php_info\n\t\t);\n\t\tprint \"<td colspan='2'>\" . $php_info . \"</td>\\n\";\n\n\t\tform_end_row();\n\t}\n\n\thtml_end_box();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#tables').tablesorter({\n\t\t\twidgets: ['zebra'],\n\t\t\twidgetZebra: { css: ['even', 'odd'] },\n\t\t\theaderTemplate: '<div class=\"textSubHeaderDark\">{content} {icon}</div>',\n\t\t\tcssIconAsc: 'fa-sort-up',\n\t\t\tcssIconDesc: 'fa-sort-down',\n\t\t\tcssIconNone: 'fa-sort',\n\t\t\tcssIcon: 'fa'\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction utilities_view_user_log() {\n\tglobal $auth_realms, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'time',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'DESC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'username' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => '-1',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'result' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_userlog');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type=\"text/javascript\">\n\tfunction clearFilter() {\n\t\tstrURL = urlPath+'utilities.php?action=view_user_log&clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction purgeLog() {\n\t\tstrURL = urlPath+'utilities.php?action=clear_user_log&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#purge').click(function() {\n\t\t\tpurgeLog();\n\t\t});\n\n\t\t$('#form_userlog').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\tfunction applyFilter() {\n\t\tstrURL  = urlPath+'utilities.php?username=' + $('#username').val();\n\t\tstrURL += '&result=' + $('#result').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&action=view_user_log';\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\t</script>\n\t<?php\n\n\thtml_start_box(__('User Login History'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_userlog' action='utilities.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('User');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='username' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('username') == '-1') {?> selected<?php }?>><?php print __('All');?></option>\n\t\t\t\t\t\t\t<option value='-2'<?php if (get_request_var('username') == '-2') {?> selected<?php }?>><?php print __('Deleted/Invalid');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$users = db_fetch_assoc('SELECT DISTINCT username FROM user_auth ORDER BY username');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($users)) {\n\t\t\t\t\t\t\t\tforeach ($users as $user) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $user['username'] . \"'\"; if (get_request_var('username') == $user['username']) { print ' selected'; } print '>' . $user['username'] . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Result');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='result' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('result') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='1'<?php if (get_request_var('result') == '1') {?> selected<?php }?>><?php print __('Success - Pswd');?></option>\n\t\t\t\t\t\t\t<option value='2'<?php if (get_request_var('result') == '2') {?> selected<?php }?>><?php print __('Success - Token');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('result') == '0') {?> selected<?php }?>><?php print __('Failed');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Attempts');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc_x('Button: use filter settings', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc_x('Button: reset filter settings', 'Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='purge' value='<?php print __esc_x('Button: delete all table entries', 'Purge');?>' title='<?php print __esc('Purge User Log');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='view_user_log'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = '';\n\n\t/* filter by username */\n\tif (get_request_var('username') == '-2') {\n\t\t$sql_where = 'WHERE ul.username NOT IN (SELECT DISTINCT username FROM user_auth)';\n\t} elseif (get_request_var('username') != '-1') {\n\t\t$sql_where = \"WHERE ul.username='\" . get_request_var('username') . \"'\";\n\t}\n\n\t/* filter by result */\n\tif (get_request_var('result') != '-1') {\n\t\tif ($sql_where != '') {\n\t\t\t$sql_where .= ' AND ul.result=' . get_request_var('result');\n\t\t} else {\n\t\t\t$sql_where = 'WHERE ul.result=' . get_request_var('result');\n\t\t}\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\tif ($sql_where != '') {\n\t\t\t$sql_where .= \" AND (ul.username LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\t\tOR ul.time LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\t\tOR ua.full_name LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\t\tOR ul.ip LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = \"WHERE (ul.username LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\t\tOR ul.time LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\t\tOR ua.full_name LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\t\tOR ul.ip LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t}\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(*)\n\t\tFROM user_auth AS ua\n\t\tRIGHT JOIN user_log AS ul\n\t\tON ua.username=ul.username\n\t\t$sql_where\");\n\n\t$user_log_sql = \"SELECT ul.username, ua.full_name, ua.realm,\n\t\tul.time, ul.result, ul.ip\n\t\tFROM user_auth AS ua\n\t\tRIGHT JOIN user_log AS ul\n\t\tON ua.username=ul.username\n\t\t$sql_where\n\t\tORDER BY \" . get_request_var('sort_column') . ' ' . get_request_var('sort_direction') . '\n\t\tLIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$user_log = db_fetch_assoc($user_log_sql);\n\n\t$nav = html_nav_bar('utilities.php?action=view_user_log&username=' . get_request_var('username') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 6, __('User Logins'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'username'  => array(__('User'), 'ASC'),\n\t\t'full_name' => array(__('Full Name'), 'ASC'),\n\t\t'realm'     => array(__('Authentication Realm'), 'ASC'),\n\t\t'time'      => array(__('Date'), 'DESC'),\n\t\t'result'    => array(__('Result'), 'DESC'),\n\t\t'ip'        => array(__('IP Address'), 'DESC')\n\t);\n\n\thtml_header_sort($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), 1, 'utilities.php?action=view_user_log');\n\n\tif (cacti_sizeof($user_log)) {\n\t\tforeach ($user_log as $item) {\n\t\t\tform_alternate_row('', true);\n\t\t\t?>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php print filter_value($item['username'], get_request_var('filter'));?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php if (isset($item['full_name'])) {\n\t\t\t\t\t\tprint filter_value($item['full_name'], get_request_var('filter'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint __('(User Removed)');\n\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php if (isset($auth_realms[$item['realm']])) {\n\t\t\t\t\t\tprint filter_value($auth_realms[$item['realm']], get_request_var('filter'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint __('N/A');\n\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php print filter_value($item['time'], get_request_var('filter'));?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php print ($item['result'] == 0 ? 'Failed':($item['result'] == 1 ? 'Success - Pswd':'Success - Token'));?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php print filter_value($item['ip'], get_request_var('filter'));?>\n\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<?php\n\t\t}\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($user_log)) {\n\t\tprint $nav;\n\t}\n}\n\nfunction utilities_clear_user_log() {\n\t$users = db_fetch_assoc('SELECT DISTINCT username FROM user_auth');\n\n\tif (cacti_sizeof($users)) {\n\t\t/* remove active users */\n\t\tforeach ($users as $user) {\n\t\t\t$total_login_rows = db_fetch_cell_prepared('SELECT COUNT(username)\n\t\t\t\tFROM user_log\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND result IN (1)',\n\t\t\t\tarray($user['username']));\n\n\t\t\t$total_token_rows = db_fetch_cell_prepared('SELECT COUNT(username)\n\t\t\t\tFROM user_log\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND result IN (2)',\n\t\t\t\tarray($user['username']));\n\n\t\t\tif ($total_login_rows > 1) {\n\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\tFROM user_log\n\t\t\t\t\tWHERE username = ?\n\t\t\t\t\tAND result IN(1)\n\t\t\t\t\tORDER BY time LIMIT ' . ($total_login_rows - 1),\n\t\t\t\t\tarray($user['username']));\n\t\t\t}\n\n\t\t\tif ($total_token_rows > 1) {\n\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\tFROM user_log\n\t\t\t\t\tWHERE username = ?\n\t\t\t\t\tAND result IN(2)\n\t\t\t\t\tORDER BY time\n\t\t\t\t\tLIMIT ' . ($total_token_rows - 1),\n\t\t\t\t\tarray($user['username']));\n\t\t\t}\n\n\t\t\tdb_execute_prepared('DELETE\n\t\t\t\tFROM user_log\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND result = 0',\n\t\t\t\tarray($user['username']));\n\t\t}\n\n\t\t/* delete inactive users */\n\t\tdb_execute('DELETE\n\t\t\tFROM user_log\n\t\t\tWHERE user_id NOT IN (SELECT id FROM user_auth)\n\t\t\tOR username NOT IN (SELECT username FROM user_auth)');\n\t}\n}\n\nfunction utilities_view_logfile() {\n\tglobal $log_tail_lines, $page_refresh_interval, $config;\n\n\t$logfile = read_config_option('path_cactilog');\n\t$logbase = basename($logfile);\n\n\tif (isset_request_var('filename')) {\n\t\t$requestedFile = dirname($logfile) . '/' . basename(get_nfilter_request_var('filename'));\n\t\tif (file_exists($requestedFile)) {\n\t\t\t$logfile = $requestedFile;\n\t\t} else {\n\t\t\t$logfile = read_config_option('path_cactilog');\n\t\t}\n\t}\n\n\tif ($logfile == '') {\n\t\t$logfile = $config['base_path'] . '/log/cacti.log';\n\t}\n\n\tif (get_nfilter_request_var('filename') != '') {\n\t\tif (strpos(get_nfilter_request_var('filename'), $logbase) === false) {\n\t\t\traise_message('clog_invalid');\n\t\t\theader('Location: utilities.php?action=view_logfile&filename=' . $logbase);\n\t\t\texit(0);\n\t\t}\n\t}\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'tail_lines' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'rfilter' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_IS_REGEX,\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'message_type' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'reverse' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'refresh' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => read_config_option('log_refresh_interval')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_log');\n\t/* ================= input validation ================= */\n\n\t$page_nr = get_request_var('page');\n\n\t$page = 'utilities.php?action=view_logfile&header=false';\n\t$page .= '&filename=' . basename($logfile) . '&page=' . $page_nr;\n\n\t$refresh = array(\n\t\t'seconds' => get_request_var('refresh'),\n\t\t'page'    => $page,\n\t\t'logout'  => 'false'\n\t);\n\n\tset_page_refresh($refresh);\n\n\ttop_header();\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction purgeLog() {\n\t\tstrURL = urlPath+'utilities.php?action=purge_logfile&header=false&filename='+$('#filename').val();\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refreshme').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#purge').click(function() {\n\t\t\tpurgeLog();\n\t\t});\n\n\t\t$('#form_logfile').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\tfunction applyFilter() {\n\t\tstrURL  = urlPath+'utilities.php' +\n\t\t\t'?tail_lines=' + $('#tail_lines').val() +\n\t\t\t'&message_type=' + $('#message_type').val() +\n\t\t\t'&refresh=' + $('#refresh').val() +\n\t\t\t'&reverse=' + $('#reverse').val() +\n\t\t\t'&rfilter=' + base64_encode($('#rfilter').val()) +\n\t\t\t'&filename=' + $('#filename').val() +\n\t\t\t'&action=view_logfile' +\n\t\t\t'&header=false';\n\t\trefreshMSeconds=$('#refresh').val()*1000;\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL  = urlPath+'utilities.php?clear=1';\n\t\tstrURL += '&action=view_logfile';\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Log Filters'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_logfile' action='utilities.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('File');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='filename'>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$configLogPath = read_config_option('path_cactilog');\n\t\t\t\t\t\t\t$configLogBase = basename($configLogPath);\n\t\t\t\t\t\t\t$selectedFile  = basename(get_nfilter_request_var('filename'));\n\n\t\t\t\t\t\t\tif ($configLogPath == '') {\n\t\t\t\t\t\t\t\t$logPath = $config['base_path'] . '/log/';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$logPath = dirname($configLogPath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (is_readable($logPath)) {\n\t\t\t\t\t\t\t\t$files = scandir($logPath);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$files = array('cacti.log');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (cacti_sizeof($files)) {\n\t\t\t\t\t\t\t\tforeach($files as $logFile) {\n\t\t\t\t\t\t\t\t\tif (in_array($logFile, array('.', '..', '.htaccess'))) {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (strpos($logFile, $configLogBase) === false) {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $logFile . \"'\";\n\n\t\t\t\t\t\t\t\t\tif ($selectedFile == $logFile) {\n\t\t\t\t\t\t\t\t\t\tprint ' selected';\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tprint '>' . $logFile . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Tail Lines');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='tail_lines' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tforeach($log_tail_lines AS $tail_lines => $display_text) {\n\t\t\t\t\t\t\t\tprint \"<option value='\" . $tail_lines . \"'\"; if (get_request_var('tail_lines') == $tail_lines) { print ' selected'; } print '>' . $display_text . \"</option>\\n\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refreshme' value='<?php print __esc_x('Button: use filter settings', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc_x('Button: reset filter settings', 'Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='purge' value='<?php print __esc_x('Button: delete all table entries', 'Purge');?>' title='<?php print __esc('Purge Log');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Type');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='message_type' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('message_type') == '-1') {?> selected<?php }?>><?php print __('All');?></option>\n\t\t\t\t\t\t\t<option value='1'<?php if (get_request_var('message_type') == '1') {?> selected<?php }?>><?php print __('Stats');?></option>\n\t\t\t\t\t\t\t<option value='2'<?php if (get_request_var('message_type') == '2') {?> selected<?php }?>><?php print __('Warnings');?></option>\n\t\t\t\t\t\t\t<option value='3'<?php if (get_request_var('message_type') == '3') {?> selected<?php }?>><?php print __('Errors');?></option>\n\t\t\t\t\t\t\t<option value='4'<?php if (get_request_var('message_type') == '4') {?> selected<?php }?>><?php print __('Debug');?></option>\n\t\t\t\t\t\t\t<option value='5'<?php if (get_request_var('message_type') == '5') {?> selected<?php }?>><?php print __('SQL Calls');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Display Order');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='reverse' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='1'<?php if (get_request_var('reverse') == '1') {?> selected<?php }?>><?php print __('Newest First');?></option>\n\t\t\t\t\t\t\t<option value='2'<?php if (get_request_var('reverse') == '2') {?> selected<?php }?>><?php print __('Oldest First');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Refresh');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='refresh' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tforeach($page_refresh_interval AS $seconds => $display_text) {\n\t\t\t\t\t\t\t\tprint \"<option value='\" . $seconds . \"'\"; if (get_request_var('refresh') == $seconds) { print ' selected'; } print '>' . $display_text . \"</option>\\n\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='rfilter' size='75' value='<?php print html_escape_request_var('rfilter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='view_logfile'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* read logfile into an array and display */\n\t$total_rows      = 0;\n\t$number_of_lines = get_request_var('tail_lines') < 0 ? read_config_option('max_display_rows') : get_request_var('tail_lines');\n\n\t$logcontents = tail_file($logfile, $number_of_lines, get_request_var('message_type'), get_request_var('rfilter'), $page_nr, $total_rows);\n\n\tif (get_request_var('reverse') == 1) {\n\t\t$logcontents = array_reverse($logcontents);\n\t}\n\n\tif (get_request_var('message_type') > 0) {\n\t\t$start_string = __('Log [Total Lines: %d - Non-Matching Items Hidden]', $total_rows);\n\t} else {\n\t\t$start_string = __('Log [Total Lines: %d - All Items Shown]', $total_rows);\n\t}\n\n\t$rfilter      = get_request_var('rfilter');\n\t$reverse      = get_request_var('reverse');\n\t$refreshTime  = get_request_var('refresh');\n\t$message_type = get_request_var('message_type');\n\t$tail_lines   = get_request_var('tail_lines');\n\t$base_url     = 'utilities.php?action=view_logfile&rfilter='.$rfilter.'&reverse='.$reverse.'&refresh='.$refreshTime.'&message_type='.$message_type.'&tail_lines='.$tail_lines.'&filename='.basename($logfile);\n\n\t$nav = html_nav_bar($base_url, MAX_DISPLAY_PAGES, $page_nr, $number_of_lines, $total_rows, 13, __('Entries'), 'page', 'main');\n\n\techo $nav;\n\n\thtml_start_box($start_string, '100%', '', '3', 'center', '');\n\n\t$linecolor = false;\n\tforeach ($logcontents as $item) {\n\t\t$host_start = strpos($item, 'Device[');\n\t\t$ds_start   = strpos($item, 'DS[');\n\n\t\tif (!$host_start && !$ds_start) {\n\t\t\t$new_item = html_escape($item);\n\t\t} else {\n\t\t\t$new_item = '';\n\t\t\twhile ($host_start) {\n\t\t\t\t$host_end   = strpos($item, ']', $host_start);\n\t\t\t\t$host_id    = substr($item, $host_start + 7, $host_end - ($host_start + 7));\n\t\t\t\t$new_item  .= html_escape(substr($item, 0, $host_start + 7)) . \"<a href='\" . html_escape('host.php?action=edit&id=' . $host_id) . \"'>\" . html_escape(substr($item, $host_start + 7, $host_end - ($host_start + 7))) . '</a>';\n\t\t\t\t$item       = substr($item, $host_end);\n\t\t\t\t$host_start = strpos($item, 'Device[');\n\t\t\t}\n\n\t\t\t$ds_start = strpos($item, 'DS[');\n\t\t\twhile ($ds_start) {\n\t\t\t\t$ds_end    = strpos($item, ']', $ds_start);\n\t\t\t\t$ds_id     = substr($item, $ds_start + 3, $ds_end - ($ds_start + 3));\n\t\t\t\t$new_item .= html_escape(substr($item, 0, $ds_start + 3)) . \"<a href='\" . html_escape('data_sources.php?action=ds_edit&id=' . $ds_id) . \"'>\" . html_escape(substr($item, $ds_start + 3, $ds_end - ($ds_start + 3))) . '</a>';\n\t\t\t\t$item      = substr($item, $ds_end);\n\t\t\t\t$ds_start  = strpos($item, 'DS[');\n\t\t\t}\n\n\t\t\t$new_item .= html_escape($item);\n\t\t}\n\n\t\t/* get the background color */\n\t\tif (strpos($new_item, 'ERROR') !== false || strpos($new_item, 'FATAL') !== false) {\n\t\t\t$class = 'clogError';\n\t\t} elseif (strpos($new_item, 'WARN') !== false) {\n\t\t\t$class = 'clogWarning';\n\t\t} elseif (strpos($new_item, ' SQL ') !== false) {\n\t\t\t$class = 'clogSQL';\n\t\t} elseif (strpos($new_item, 'DEBUG') !== false) {\n\t\t\t$class = 'clogDebug';\n\t\t} elseif (strpos($new_item, 'STATS') !== false) {\n\t\t\t$class = 'clogStats';\n\t\t} else {\n\t\t\tif ($linecolor) {\n\t\t\t\t$class = 'odd';\n\t\t\t} else {\n\t\t\t\t$class = 'even';\n\t\t\t}\n\t\t\t$linecolor = !$linecolor;\n\t\t}\n\n\t\tprint \"<tr class='\" . $class . \"'><td>\" . $new_item . \"</td></tr>\\n\";\n\t}\n\n\thtml_end_box();\n\n\tif ($total_rows) {\n\t\techo $nav;\n\t}\n\n\tbottom_footer();\n}\n\nfunction utilities_clear_logfile() {\n\tload_current_session_value('refresh', 'sess_logfile_refresh', read_config_option('log_refresh_interval'));\n\n\t$refresh['seconds'] = get_request_var('refresh');\n\t$refresh['page']    = 'utilities.php?action=view_logfile&header=false';\n\t$refresh['logout']  = 'false';\n\n\tset_page_refresh($refresh);\n\n\ttop_header();\n\n\t$logfile = read_config_option('path_cactilog');\n\n\tif ($logfile == '') {\n\t\t$logfile = './log/cacti.log';\n\t}\n\n\thtml_start_box(__('Clear Cacti Log'), '100%', '', '3', 'center', '');\n\tif (file_exists($logfile)) {\n\t\tif (is_writable($logfile)) {\n\t\t\t/* fill in the current date for printing in the log */\n\t\t\tif (defined('CACTI_DATE_TIME_FORMAT')) {\n\t\t\t\t$date = date(CACTI_DATE_TIME_FORMAT);\n\t\t\t} else {\n\t\t\t\t$date = date('Y-m-d H:i:s');\n\t\t\t}\n\n\t\t\t$log_fh = fopen($logfile, 'w');\n\t\t\tfwrite($log_fh, __('%s - WEBUI NOTE: Cacti Log Cleared from Web Management Interface.', $date) . PHP_EOL);\n\t\t\tfclose($log_fh);\n\t\t\tprint '<tr><td>' . __('Cacti Log Cleared') . '</td></tr>';\n\t\t} else {\n\t\t\tprint \"<tr><td class='deviceDown'><b>\" . __('Error: Unable to clear log, no write permissions.') . \"<b></td></tr>\";\n\t\t}\n\t} else {\n\t\tprint \"<tr><td class='deviceDown'><b>\" . __('Error: Unable to clear log, file does not exist.'). \"</b></td></tr>\";\n\t}\n\thtml_end_box();\n}\n\nfunction utilities_view_snmp_cache() {\n\tglobal $poller_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'with_index' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '0'\n\t\t\t),\n\t\t'host_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'snmp_query_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'poller_action' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_usnmp');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$refresh['seconds'] = '300';\n\t$refresh['page']    = 'utilities.php?action=view_snmp_cache&header=false';\n\t$refresh['logout']  = 'false';\n\n\tset_page_refresh($refresh);\n\n\t?>\n\t<script type=\"text/javascript\">\n\n\tfunction applyFilter() {\n\t\tstrURL  = urlPath+'utilities.php?host_id=' + $('#host_id').val();\n\t\tstrURL += '&snmp_query_id=' + $('#snmp_query_id').val();\n\t\tif ($('#with_index').is(':checked')) {\n\t\t\tstrURL += '&with_index=1';\n\t\t} else {\n\t\t\tstrURL += '&with_index=0';\n\t\t}\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&action=view_snmp_cache';\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = urlPath+'utilities.php?action=view_snmp_cache&clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_snmpcache').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Data Query Cache Items'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_snmpcache' action='utilities.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<?php print html_host_filter(get_request_var('host_id'));?>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Query Name');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='snmp_query_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('host_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (get_request_var('host_id') == -1) {\n\t\t\t\t\t\t\t\t$snmp_queries = db_fetch_assoc('SELECT DISTINCT sq.id, sq.name\n\t\t\t\t\t\t\t\t\tFROM host_snmp_cache AS hsc\n\t\t\t\t\t\t\t\t\tINNER JOIN snmp_query AS sq\n\t\t\t\t\t\t\t\t\tON hsc.snmp_query_id=sq.id\n\t\t\t\t\t\t\t\t\tINNER JOIN host AS h\n\t\t\t\t\t\t\t\t\tON hsc.host_id=h.id\n\t\t\t\t\t\t\t\t\tORDER by sq.name');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$snmp_queries = db_fetch_assoc_prepared(\"SELECT DISTINCT sq.id, sq.name\n\t\t\t\t\t\t\t\t\tFROM host_snmp_cache AS hsc\n\t\t\t\t\t\t\t\t\tINNER JOIN snmp_query AS sq\n\t\t\t\t\t\t\t\t\tON hsc.snmp_query_id=sq.id\n\t\t\t\t\t\t\t\t\tINNER JOIN host AS h\n\t\t\t\t\t\t\t\t\tON hsc.host_id=h.id\n\t\t\t\t\t\t\t\t\tORDER by sq.name\", array(get_request_var('host_id')));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (cacti_sizeof($snmp_queries)) {\n\t\t\t\t\t\t\t\tforeach ($snmp_queries as $snmp_query) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $snmp_query['id'] . \"'\"; if (get_request_var('snmp_query_id') == $snmp_query['id']) { print ' selected'; } print '>' . html_escape($snmp_query['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc_x('Button: use filter settings', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc_x('Button: reset filter settings', 'Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Rows');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='checkbox' id='with_index' onChange='applyFilter()' title='<?php print __esc('Allow the search term to include the index column');?>' <?php if (get_request_var('with_index') == 1) { print ' checked '; }?>>\n\t\t\t\t\t\t<label for='with_index'><?php print __('Include Index') ?></label>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='view_snmp_cache'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = '';\n\n\t/* filter by host */\n\tif (get_request_var('host_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('host_id') == '0') {\n\t\t$sql_where .= ' AND h.id=0';\n\t} elseif (!isempty_request_var('host_id')) {\n\t\t$sql_where .= ' AND h.id=' . get_request_var('host_id');\n\t}\n\n\t/* filter by query name */\n\tif (get_request_var('snmp_query_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (!isempty_request_var('snmp_query_id')) {\n\t\t$sql_where .= ' AND hsc.snmp_query_id=' . get_request_var('snmp_query_id');\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= \" AND (h.description LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR sq.name LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR hsc.field_name LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR hsc.field_value LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR hsc.oid LIKE '%\" . get_request_var('filter') . \"%'\";\n\t\tif (get_request_var('with_index') == 1) {\n\t\t\t$sql_where .= \" OR hsc.snmp_index LIKE '%\" . get_request_var('filter') . \"%'\";\n\t\t}\n\t\t$sql_where .= \")\";\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM host_snmp_cache AS hsc\n\t\tINNER JOIN snmp_query AS sq\n\t\tON hsc.snmp_query_id = sq.id\n\t\tINNER JOIN host AS h\n\t\tON hsc.host_id = h.id\n\t\tWHERE hsc.host_id = h.id\n\t\tAND hsc.snmp_query_id = sq.id\n\t\t$sql_where\");\n\n\t$snmp_cache_sql = \"SELECT hsc.*, h.description, sq.name\n\t\tFROM host_snmp_cache AS hsc\n\t\tINNER JOIN snmp_query AS sq\n\t\tON hsc.snmp_query_id = sq.id\n\t\tINNER JOIN host AS h\n\t\tON hsc.host_id = h.id\n\t\tWHERE hsc.host_id = h.id\n\t\tAND hsc.snmp_query_id = sq.id\n\t\t$sql_where\n\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$snmp_cache = db_fetch_assoc($snmp_cache_sql);\n\n\t$nav = html_nav_bar('utilities.php?action=view_snmp_cache&host_id=' . get_request_var('host_id') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 6, __('Entries'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header(array(__('Device'), __('Data Query Name'), __('Index'), __('Field Name'), __('Field Value'), __('OID')));\n\n\t$i = 0;\n\tif (cacti_sizeof($snmp_cache)) {\n\tforeach ($snmp_cache as $item) {\n\t\tform_alternate_row();\n\t\t?>\n\t\t<td>\n\t\t\t<?php print filter_value($item['description'], get_request_var('filter'));?>\n\t\t</td>\n\t\t<td>\n\t\t\t<?php print filter_value($item['name'], get_request_var('filter'));?>\n\t\t</td>\n\t\t<td>\n\t\t\t<?php print $item['snmp_index'];?>\n\t\t</td>\n\t\t<td>\n\t\t\t<?php print filter_value($item['field_name'], get_request_var('filter'));?>\n\t\t</td>\n\t\t<td>\n\t\t\t<?php print filter_value($item['field_value'], get_request_var('filter'));?>\n\t\t</td>\n\t\t<td>\n\t\t\t<?php print filter_value($item['oid'], get_request_var('filter'));?>\n\t\t</td>\n\t\t</tr>\n\t\t<?php\n\t\t}\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tprint $nav;\n\t}\n}\n\nfunction utilities_view_poller_cache() {\n\tglobal $poller_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'dtd.name_cache',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'host_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'poller_action' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_poller');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$refresh['seconds'] = '300';\n\t$refresh['page']    = 'utilities.php?action=view_poller_cache';\n\t$refresh['logout']  = 'false';\n\n\tset_page_refresh($refresh);\n\n\t?>\n\t<script type=\"text/javascript\">\n\n\tfunction applyFilter() {\n\t\tstrURL  = urlPath+'utilities.php?poller_action=' + $('#poller_action').val();\n\t\tstrURL += '&action=view_poller_cache';\n\t\tstrURL += '&host_id=' + $('#host_id').val();\n\t\tstrURL += '&template_id=' + $('#template_id').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = urlPath+'utilities.php?action=view_poller_cache&clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_pollercache').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Poller Cache Items'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_pollercache' action='utilities.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<?php print html_host_filter(get_request_var('host_id'));?>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (get_request_var('host_id') > 0) {\n\t\t\t\t\t\t\t\t$sql_where = 'WHERE dl.host_id = ' . get_request_var('host_id');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$sql_where = '';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$templates = db_fetch_assoc(\"SELECT DISTINCT dt.id, dt.name\n\t\t\t\t\t\t\t\tFROM data_template AS dt\n\t\t\t\t\t\t\t\tINNER JOIN data_local AS dl\n\t\t\t\t\t\t\t\tON dt.id=dl.data_template_id\n\t\t\t\t\t\t\t\t$sql_where\n\t\t\t\t\t\t\t\tORDER BY name\");\n\n\t\t\t\t\t\t\tif (cacti_sizeof($templates)) {\n\t\t\t\t\t\t\t\tforeach ($templates as $template) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $template['id'] . \"'\"; if (get_request_var('template_id') == $template['id']) { print ' selected'; } print '>' . title_trim(html_escape($template['name']), 40) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc_x('Button: use filter settings', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc_x('Button: reset filter settings', 'Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Action');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='poller_action' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('poller_action') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('poller_action') == '0') {?> selected<?php }?>><?php print __('SNMP');?></option>\n\t\t\t\t\t\t\t<option value='1'<?php if (get_request_var('poller_action') == '1') {?> selected<?php }?>><?php print __('Script');?></option>\n\t\t\t\t\t\t\t<option value='2'<?php if (get_request_var('poller_action') == '2') {?> selected<?php }?>><?php print __('Script Server');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Entries');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='view_poller_cache'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where = 'WHERE pi.local_data_id = dtd.local_data_id';\n\n\tif (get_request_var('poller_action') != '-1') {\n\t\t$sql_where .= \" AND pi.action='\" . get_request_var('poller_action') . \"'\";\n\t}\n\n\tif (get_request_var('host_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('host_id') == '0') {\n\t\t$sql_where .= ' AND pi.host_id = 0';\n\t} elseif (!isempty_request_var('host_id')) {\n\t\t$sql_where .= ' AND pi.host_id = ' . get_request_var('host_id');\n\t}\n\n\tif (get_request_var('template_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('template_id') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' dtd.data_template_id=0';\n\t} elseif (!isempty_request_var('template_id')) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' dl.data_template_id=' . get_request_var('template_id');\n\t}\n\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= \" AND (dtd.name_cache LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR h.description LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR pi.arg1 LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR pi.hostname LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR pi.rrd_path  LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM poller_item AS pi\n\t\tINNER JOIN data_local AS dl\n\t\tON dl.id=pi.local_data_id\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dtd.local_data_id = pi.local_data_id\n\t\tINNER JOIN host AS h\n\t\tON pi.host_id = h.id\n\t\t$sql_where\");\n\n\t$poller_sql = \"SELECT pi.*, dtd.name_cache, h.description\n\t\tFROM poller_item AS pi\n\t\tINNER JOIN data_local AS dl\n\t\tON dl.id=pi.local_data_id\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dtd.local_data_id = pi.local_data_id\n\t\tINNER JOIN host AS h\n\t\tON pi.host_id = h.id\n\t\t$sql_where\n\t\tORDER BY \" . get_request_var('sort_column') . ' ' . get_request_var('sort_direction') . ', action ASC\n\t\tLIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$poller_cache = db_fetch_assoc($poller_sql);\n\n\t$nav = html_nav_bar('utilities.php?action=view_poller_cache&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 3, __('Entries'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'dtd.name_cache' => array(__('Data Source Name'), 'ASC'),\n\t\t'h.description' => array(__('Device Description'), 'ASC'),\n\t\t'nosort' => array(__('Details'), 'ASC'));\n\n\thtml_header_sort($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), 1, 'utilities.php?action=view_poller_cache');\n\n\t$i = 0;\n\tif (cacti_sizeof($poller_cache)) {\n\t\tforeach ($poller_cache as $item) {\n\t\t\tif ($i % 2 == 0) {\n\t\t\t\t$class = 'odd';\n\t\t\t} else {\n\t\t\t\t$class = 'even';\n\t\t\t}\n\t\t\tprint \"<tr class='$class'>\\n\";\n\t\t\t\t?>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print filter_value($item['name_cache'], get_request_var('filter'), 'data_sources.php?action=ds_edit&id=' . $item['local_data_id']);?>\n\t\t\t\t</td>\n\n\t\t\t\t<td>\n\t\t\t\t\t<?php print $item['description'];?>\n\t\t\t\t</td>\n\n\t\t\t\t<td>\n\t\t\t\t<?php\n\t\t\t\tif ($item['action'] == 0) {\n\t\t\t\t\tif ($item['snmp_version'] != 3) {\n\t\t\t\t\t\t$details =\n\t\t\t\t\t\t\t__('SNMP Version:') . ' ' . $item['snmp_version'] . ', ' .\n\t\t\t\t\t\t\t__('Community:') . ' ' . $item['snmp_community'] . ', ' .\n\t\t\t\t\t\t\t__('OID:') . ' ' . filter_value($item['arg1'], get_request_var('filter'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$details =\n\t\t\t\t\t\t\t__('SNMP Version:') . ' ' . $item['snmp_version'] . ', ' .\n\t\t\t\t\t\t\t__('User:') . ' ' . $item['snmp_username'] . ', ' . __('OID:') . ' ' . $item['arg1'];\n\t\t\t\t\t}\n\t\t\t\t} elseif ($item['action'] == 1) {\n\t\t\t\t\t\t$details = __('Script:') . ' ' . filter_value($item['arg1'], get_request_var('filter'));\n\t\t\t\t} else {\n\t\t\t\t\t\t$details = __('Script Server:') . ' ' . filter_value($item['arg1'], get_request_var('filter'));\n\t\t\t\t}\n\n\t\t\t\tprint $details;\n\t\t\t\t?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<?php\n\t\t\tprint \"<tr class='$class'>\\n\";\n\t\t\t?>\n\t\t\t\t<td colspan='2'>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print __('RRD:');?> <?php print $item['rrd_path'];?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<?php\n\t\t\t$i++;\n\t\t}\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($poller_cache)) {\n\t\tprint $nav;\n\t}\n}\n\nfunction utilities() {\n\tglobal $utilities;\n\n\t$utilities[__('Technical Support')] = array(\n\t\t__('Technical Support') => array(\n\t\t\t'link'  => 'utilities.php?action=view_tech',\n\t\t\t'description' => __('Cacti technical support page.  Used by developers and technical support persons to assist with issues in Cacti.  Includes checks for common configuration issues.')\n\t\t),\n\t\t__('Log Administration') => array(\n\t\t\t'link'  => 'utilities.php?action=view_logfile',\n\t\t\t'description' => __('The Cacti Log stores statistic, error and other message depending on system settings.  This information can be used to identify problems with the poller and application.')\n\t\t),\n\t\t__('View User Log') => array(\n\t\t\t'link'  => 'utilities.php?action=view_user_log',\n\t\t\t'description' => __('Allows Administrators to browse the user log.  Administrators can filter and export the log as well.')\n\t\t)\n\t);\n\n\t$utilities[__('Poller Cache Administration')] = array(\n\t\t__('View Poller Cache') => array(\n\t\t\t'link'  => 'utilities.php?action=view_poller_cache',\n\t\t\t'description' => __('This is the data that is being passed to the poller each time it runs. This data is then in turn executed/interpreted and the results are fed into the RRDfiles for graphing or the database for display.')\n\t\t),\n\t\t__('View Data Query Cache') => array(\n\t\t\t'link'  => 'utilities.php?action=view_snmp_cache',\n\t\t\t'description' => __('The Data Query Cache stores information gathered from Data Query input types. The values from these fields can be used in the text area of Graphs for Legends, Vertical Labels, and GPRINTS as well as in CDEF\\'s.')\n\t\t),\n\t\t__('Rebuild Poller Cache') => array(\n\t\t\t'link'  => 'utilities.php?action=clear_poller_cache',\n\t\t\t'description' => __('The Poller Cache will be re-generated if you select this option. Use this option only in the event of a database crash if you are experiencing issues after the crash and have already run the database repair tools.  Alternatively, if you are having problems with a specific Device, simply re-save that Device to rebuild its Poller Cache.  There is also a command line interface equivalent to this command that is recommended for large systems.  <i class=\"deviceDown\">NOTE: On large systems, this command may take several minutes to hours to complete and therefore should not be run from the Cacti UI.  You can simply run \\'php -q cli/rebuild_poller_cache.php --help\\' at the command line for more information.</i>')\n\t\t),\n\t\t__('Rebuild Resource Cache') => array(\n\t\t\t'link'  => 'utilities.php?action=rebuild_resource_cache',\n\t\t\t'description' => __('When operating multiple Data Collectors in Cacti, Cacti will attempt to maintain state for key files on all Data Collectors.  This includes all core, non-install related website and plugin files.  When you force a Resource Cache rebuild, Cacti will clear the local Resource Cache, and then rebuild it at the next scheduled poller start.  This will trigger all Remote Data Collectors to recheck their website and plugin files for consistency.')\n\t\t),\n\t);\n\n\t$utilities[__('Boost Utilities')] = array(\n\t\t__('View Boost Status') => array(\n\t\t\t'link'  => 'utilities.php?action=view_boost_status',\n\t\t\t'description' => __('This menu pick allows you to view various boost settings and statistics associated with the current running Boost configuration.')\n\t\t),\n\t);\n\n\t$utilities[__('RRD Utilities')] = array(\n\t\t__('RRDfile Cleaner') => array(\n\t\t\t'link'  => 'rrdcleaner.php',\n\t\t\t'description' => __('When you delete Data Sources from Cacti, the corresponding RRDfiles are not removed automatically.  Use this utility to facilitate the removal of these old files.')\n\t\t),\n\t);\n\n\tif (snmpagent_enabled()) {\n\t\t$utilities[__('SNMPAgent Utilities')] = array(\n\t\t\t__('View SNMPAgent Cache') => array(\n\t\t\t\t'link'  => 'utilities.php?action=view_snmpagent_cache',\n\t\t\t\t'description' => __('This shows all objects being handled by the SNMPAgent.')\n\t\t\t),\n\t\t\t__('Rebuild SNMPAgent Cache') => array(\n\t\t\t\t'link'  => 'utilities.php?action=rebuild_snmpagent_cache',\n\t\t\t\t'description' => __('The SNMP cache will be cleared and re-generated if you select this option. Note that it takes another poller run to restore the SNMP cache completely.')\n\t\t\t),\n\t\t\t__('View SNMPAgent Notification Log') => array(\n\t\t\t\t'link'  => 'utilities.php?action=view_snmpagent_events',\n\t\t\t\t'description' => __('This menu pick allows you to view the latest events SNMPAgent has handled in relation to the registered notification receivers.')\n\t\t\t),\n\t\t\t__('SNMP Notification Receivers') => array(\n\t\t\t\t'link'  => 'managers.php',\n\t\t\t\t'description' => __('Allows Administrators to maintain SNMP notification receivers.')\n\t\t\t),\n\t\t);\n\t}\n\n\tapi_plugin_hook('utilities_array');\n\n\thtml_start_box(__('Cacti System Utilities'), '100%', '', '3', 'center', '');\n\n\tforeach($utilities as $header => $content) {\n\t\thtml_section_header($header, 2);\n\t\tforeach($content as $title => $details) {\n\t\t\tform_alternate_row();\n\t\t\tprint \"<td class='nowrap' style='vertical-align:top;'>\";\n\t\t\tprint \"<a class='hyperLink' href='\" . html_escape($details['link']) . \"'>\" . $title . \"</a>\";\n\t\t\tprint \"</td>\\n\";\n\t\t\tprint \"<td>\";\n\t\t\tprint $details['description'];\n\t\t\tprint \"</td>\\n\";\n\t\t\tform_end_row();\n\t\t}\n\t}\n\n\tapi_plugin_hook('utilities_list');\n\n\thtml_end_box();\n}\n\nfunction boost_display_run_status() {\n\tglobal $config, $refresh_interval, $boost_utilities_interval, $boost_refresh_interval, $boost_max_runtime;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('refresh');\n\t/* ==================================================== */\n\n\tload_current_session_value('refresh', 'sess_boost_utilities_refresh', '30');\n\n\t$last_run_time   = read_config_option('boost_last_run_time', true);\n\t$next_run_time   = read_config_option('boost_next_run_time', true);\n\n\t$rrd_updates     = read_config_option('boost_rrd_update_enable', true);\n\t$boost_cache     = read_config_option('boost_png_cache_enable', true);\n\n\t$max_records     = read_config_option('boost_rrd_update_max_records', true);\n\t$max_runtime     = read_config_option('boost_rrd_update_max_runtime', true);\n\t$update_interval = read_config_option('boost_rrd_update_interval', true);\n\t$peak_memory     = read_config_option('boost_peak_memory', true);\n\t$detail_stats    = read_config_option('stats_detail_boost', true);\n\n\t$refresh['seconds'] = get_request_var('refresh');\n\t$refresh['page']    = 'utilities.php?action=view_boost_status&header=false';\n\t$refresh['logout']  = 'false';\n\n\tset_page_refresh($refresh);\n\n\thtml_start_box(__('Boost Status'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<script type=\"text/javascript\">\n\n\tfunction applyFilter() {\n\t\tstrURL = urlPath+'utilities.php?action=view_boost_status&header=false&refresh=' + $('#refresh').val();\n\t\tloadPageNoHeader(strURL);\n\t}\n\t</script>\n\t<tr class='even'>\n\t\t<form id='form_boost_utilities_stats' method='post'>\n\t\t<td>\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t<?php print __('Refresh Interval');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='refresh' name='refresh' onChange='applyFilter()'>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tforeach ($boost_utilities_interval as $key => $interval) {\n\t\t\t\t\t\t\tprint '<option value=\"' . $key . '\"'; if (get_request_var('refresh') == $key) { print ' selected'; } print '>' . $interval . '</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Refresh');?>' onClick='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td>\n\t\t</form>\n\t</tr>\n\t<?php\n\thtml_end_box(true);\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t/* get the boost table status */\n\t$boost_table_status = db_fetch_assoc(\"SELECT *\n\t\tFROM INFORMATION_SCHEMA.TABLES WHERE table_schema=SCHEMA()\n\t\tAND (table_name LIKE 'poller_output_boost_arch_%' OR table_name LIKE 'poller_output_boost')\");\n\n\t$pending_records = 0;\n\t$arch_records    = 0;\n\t$data_length     = 0;\n\t$engine          = '';\n\t$max_data_length = 0;\n\n\tforeach($boost_table_status as $table) {\n\t\tif ($table['TABLE_NAME'] == 'poller_output_boost') {\n\t\t\t$pending_records += $table['TABLE_ROWS'];\n\t\t} else {\n\t\t\t$arch_records += $table['TABLE_ROWS'];\n\t\t}\n\n\t\t$data_length    += $table['DATA_LENGTH'];\n\t\t$data_length    += $table['INDEX_LENGTH'];\n\t\t$engine          = $table['ENGINE'];\n\t\t$max_data_length = $table['MAX_DATA_LENGTH'];\n\t}\n\n\t$total_records  = $pending_records + $arch_records;\n\t$avg_row_length = ($total_records ? intval($data_length / $total_records) : 0);\n\n\t$total_data_sources = db_fetch_cell('SELECT COUNT(*) FROM poller_item');\n\n\t$boost_status = read_config_option('boost_poller_status', true);\n\tif ($boost_status != '') {\n\t\t$boost_status_array = explode(':', $boost_status);\n\n\t\t$boost_status_date  = $boost_status_array[1];\n\n\t\tif (substr_count($boost_status_array[0], 'complete'))    $boost_status_text = __('Idle');\n\t\telseif (substr_count($boost_status_array[0], 'running')) $boost_status_text = __('Running');\n\t\telseif (substr_count($boost_status_array[0], 'overrun')) $boost_status_text = __('Overrun Warning');\n\t\telseif (substr_count($boost_status_array[0], 'timeout')) $boost_status_text = __('Timed Out');\n\t\telse   $boost_status_text = __('Other');\n\t} else {\n\t\t$boost_status_text = __('Never Run');\n\t\t$boost_status_date = '';\n\t}\n\n\t$stats_boost = read_config_option('stats_boost', true);\n\tif ($stats_boost != '') {\n\t\t$stats_boost_array = explode(' ', $stats_boost);\n\n\t\t$stats_duration = explode(':', $stats_boost_array[0]);\n\t\t$boost_last_run_duration = $stats_duration[1];\n\n\t\t$stats_rrds = explode(':', $stats_boost_array[1]);\n\t\t$boost_rrds_updated = $stats_rrds[1];\n\t} else {\n\t\t$boost_last_run_duration = '';\n\t\t$boost_rrds_updated = '';\n\t}\n\n\t/* get cache directory size/contents */\n\t$cache_directory    = read_config_option('boost_png_cache_directory', true);\n\t$directory_contents = array();\n\n\tif (is_dir($cache_directory)) {\n\t\tif ($handle = @opendir($cache_directory)) {\n\t\t\t/* This is the correct way to loop over the directory. */\n\t\t\twhile (false !== ($file = readdir($handle))) {\n\t\t\t\t$directory_contents[] = $file;\n\t\t\t}\n\n\t\t\tclosedir($handle);\n\n\t\t\t/* get size of directory */\n\t\t\t$directory_size = 0;\n\t\t\t$cache_files    = 0;\n\n\t\t\tif (cacti_sizeof($directory_contents)) {\n\t\t\t\t/* goto the cache directory */\n\t\t\t\tchdir($cache_directory);\n\n\t\t\t\t/* check and fry as applicable */\n\t\t\t\tforeach($directory_contents as $file) {\n\t\t\t\t\t/* only remove jpeg's and png's */\n\t\t\t\t\tif ((substr_count(strtolower($file), '.png')) ||\n\t\t\t\t\t\t(substr_count(strtolower($file), '.jpg'))) {\n\t\t\t\t\t\t$cache_files++;\n\t\t\t\t\t\t$directory_size += filesize($file);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$directory_size = boost_file_size_display($directory_size);\n\t\t\t$cache_files    = $cache_files . ' Files';\n\t\t} else {\n\t\t\t$directory_size = '<strong>' . __('WARNING:') . '</strong>' . __('Cannot open directory');\n\t\t\t$cache_files    = '<strong>' . __('WARNING:') . '</strong> ' . __('Unknown');\n\t\t}\n\t} else {\n\t\t$directory_size = '<strong>' . __('WARNING:') . '</strong> ' . __('Directory Does NOT Exist!!');\n\t\t$cache_files    = '<strong>' . __('WARNING:') . '</strong> ' . __('N/A');\n\t}\n\n\t$i = 0;\n\n\t/* boost status display */\n\thtml_section_header(__('Current Boost Status'), 2);\n\n\tform_alternate_row();\n\tprint '<td>' . __('Boost On-demand Updating:') . '</td><td>' . ($rrd_updates == '' ? 'Disabled' : $boost_status_text) . '</td>';\n\n\tform_alternate_row();\n\tprint '<td>' . __('Total Data Sources:') . '</td><td>' . number_format_i18n($total_data_sources, -1) . '</td>';\n\n\tif ($total_records) {\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Pending Boost Records:') . '</td><td>' . number_format_i18n($pending_records, -1) . '</td>';\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Archived Boost Records:') . '</td><td>' . number_format_i18n($arch_records, -1) . '</td>';\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Total Boost Records:') . '</td><td>' . number_format_i18n($total_records, -1) . '</td>';\n\t}\n\n\t/* boost status display */\n\thtml_section_header(__('Boost Storage Statistics'), 2);\n\n\t/* describe the table format */\n\tform_alternate_row();\n\tprint '<td>' . __('Database Engine:') . '</td><td>' . $engine . '</td>';\n\n\t/* tell the user how big the table is */\n\tform_alternate_row();\n\tprint '<td>' . __('Current Boost Table(s) Size:') . '</td><td>' . boost_file_size_display($data_length, 2) . '</td>';\n\n\t/* tell the user about the average size/record */\n\tform_alternate_row();\n\tprint '<td>' . __('Avg Bytes/Record:') . '</td><td>' . boost_file_size_display($avg_row_length, 0) . '</td>';\n\n\t/* tell the user about the average size/record */\n\t$output_length = read_config_option('boost_max_output_length');\n\tif ($output_length != '') {\n\t\t$parts = explode(':', $output_length);\n\t\tif ((time()-1200) > $parts[0]) {\n\t\t\t$ref = true;\n\t\t} else {\n\t\t\t$ref = false;\n\t\t}\n\t} else {\n\t\t$ref = true;\n\t}\n\n\tif ($ref) {\n\t\tif (strcmp($engine, 'MEMORY') == 0) {\n\t\t\t$max_length = db_fetch_cell('SELECT MAX(LENGTH(output)) FROM poller_output_boost');\n\t\t} else {\n\t\t\t$max_length = '0';\n\t\t}\n\t\tdb_execute(\"REPLACE INTO settings (name, value) VALUES ('boost_max_output_length', '\" . time() . ':' . $max_length . \"')\");\n\t} else {\n\t\t$max_length = $parts[1];\n\t}\n\n\tif ($max_length != 0) {\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Max Record Length:') . '</td><td>' . __('%d Bytes', number_format_i18n($max_length)) . '</td>';\n\t}\n\n\t/* tell the user about the \"Maximum Size\" this table can be */\n\tform_alternate_row();\n\tif (strcmp($engine, 'MEMORY')) {\n\t\t$max_table_allowed = __('Unlimited');\n\t\t$max_table_records = __('Unlimited');\n\t} else {\n\t\t$max_table_allowed = boost_file_size_display($max_data_length, 2);\n\t\t$max_table_records = number_format_i18n(($avg_row_length ? $max_data_length/$avg_row_length : 0), 3, 1000);\n\t}\n\tprint '<td>' . __('Max Allowed Boost Table Size:') . '</td><td>' . $max_table_allowed . '</td>';\n\n\t/* tell the user about the estimated records that \"could\" be held in memory */\n\tform_alternate_row();\n\tprint '<td>' . __('Estimated Maximum Records:') . '</td><td>' . $max_table_records . ' Records</td>';\n\n\t/* boost last runtime display */\n\thtml_section_header(__('Runtime Statistics'), 2);\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Last Start Time:') . '</td><td>' . $last_run_time . '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Last Run Duration:') . '</td><td>';\n\n\tif (is_numeric($boost_last_run_duration)) {\n\t\tprint (($boost_last_run_duration > 60) ? __('%d minutes', (int)($boost_last_run_duration/60)) : '' ) . __('%d seconds', $boost_last_run_duration%60);\n\t\tif ($rrd_updates != ''){ print ' (' . __('%0.2f percent of update frequency)', round(100*$boost_last_run_duration/$update_interval/60));}\n\t} else {\n\t\tprint __('N/A');\n\t}\n\tprint '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('RRD Updates:') . '</td><td>' . ($boost_rrds_updated != '' ? number_format_i18n($boost_rrds_updated, -1):'-') . '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Peak Poller Memory:') . '</td><td>' . ((read_config_option('boost_peak_memory') != '' && is_numeric(read_config_option('boost_peak_memory'))) ? (round(read_config_option('boost_peak_memory')/1024/1024,2)) . ' ' . __('MBytes') : __('N/A')) . '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Detailed Runtime Timers:') . '</td><td>' . (($detail_stats != '') ? $detail_stats:__('N/A')) . '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Max Poller Memory Allowed:') . '</td><td>' . ((read_config_option('boost_poller_mem_limit') != '') ? (read_config_option('boost_poller_mem_limit')) . ' ' . __('MBytes') : __('N/A')) . '</td>';\n\n\t/* boost runtime display */\n\thtml_section_header(__('Run Time Configuration'), 2);\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Update Frequency:') . '</td><td>' . ($rrd_updates == '' ? __('N/A') : $boost_refresh_interval[$update_interval]) . '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Next Start Time:') . '</td><td>' . $next_run_time . '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Maximum Records:') . '</td><td>' . number_format_i18n($max_records, -1) . ' ' . __('Records') . '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Maximum Allowed Runtime:') . '</td><td>' . $boost_max_runtime[$max_runtime] . '</td>';\n\n\t/* boost caching */\n\thtml_section_header(__('Image Caching'), 2);\n\n\tform_alternate_row();\n\tprint '<td>' . __('Image Caching Status:') . '</td><td>' . ($boost_cache == '' ? __('Disabled') : __('Enabled')) . '</td>';\n\n\tform_alternate_row();\n\tprint '<td>' . __('Cache Directory:') . '</td><td>' . $cache_directory . '</td>';\n\n\tform_alternate_row();\n\tprint '<td>' . __('Cached Files:') . '</td><td>' . $cache_files . '</td>';\n\n\tform_alternate_row();\n\tprint '<td>' . __('Cached Files Size:') . '</td><td>' . $directory_size . '</td>';\n\n\thtml_end_box(true);\n}\n\n/**\n *\n *\n * snmpagent_utilities_run_cache()\n *\n * @param mixed\n * @return\n */\nfunction snmpagent_utilities_run_cache() {\n\tglobal $item_rows;\n\n\tget_filter_request_var('mib', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\n\t$mibs = db_fetch_assoc('SELECT DISTINCT mib FROM snmpagent_cache');\n\t$registered_mibs = array();\n\tif($mibs && $mibs >0) {\n\t\tforeach($mibs as $mib) { $registered_mibs[] = $mib['mib']; }\n\t}\n\n\t/* ================= input validation ================= */\n\tif(!in_array(get_request_var('mib'), $registered_mibs) && get_request_var('mib') != '-1' && get_request_var('mib') != '') {\n\t\tdie_html_input_error();\n\t}\n\t/* ==================================================== */\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'mib' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => '-1',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_snmpac');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction applyFilter() {\n\t\tstrURL  = 'utilities.php?action=view_snmpagent_cache';\n\t\tstrURL += '&mib=' + $('#mib').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'utilities.php?action=view_snmpagent_cache&clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_snmpagent_cache').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_start_box(__('SNMPAgent Cache'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t\t<form id='form_snmpagent_cache' action='utilities.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('MIB');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='mib' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('mib') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($mibs) > 0) {\n\t\t\t\t\t\t\t\t\tforeach ($mibs as $mib) {\n\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $mib['mib'] . \"'\"; if (get_request_var('mib') == $mib['mib']) { print ' selected'; } print '>' . html_escape($mib['mib']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('OIDs');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('rows') == '-1') {?> selected<?php }?>><?php print __('Default');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc_x('Button: use filter settings', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc_x('Button: reset filter settings', 'Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = '';\n\n\t/* filter by host */\n\tif (get_request_var('mib') == '-1') {\n\t\t/* Show all items */\n\t} elseif (!isempty_request_var('mib')) {\n\t\t$sql_where .= \" AND snmpagent_cache.mib='\" . get_request_var('mib') . \"'\";\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= \" AND (`oid` LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR `name` LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR `mib` LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR `max-access` LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\t$sql_where .= ' ORDER by `oid`';\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*) FROM snmpagent_cache WHERE 1 $sql_where\");\n\n\t$snmp_cache_sql = \"SELECT * FROM snmpagent_cache WHERE 1 $sql_where LIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\t$snmp_cache = db_fetch_assoc($snmp_cache_sql);\n\n\t/* generate page list */\n\t$nav = html_nav_bar('utilities.php?action=view_snmpagent_cache&mib=' . get_request_var('mib') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Entries'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header(array(__('OID'), __('Name'), __('MIB'), __('Type'), __('Max-Access'), __('Value')));\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tforeach ($snmp_cache as $item) {\n\n\t\t\t$oid        = filter_value($item['oid'], get_request_var('filter'));\n\t\t\t$name       = filter_value($item['name'], get_request_var('filter'));\n\t\t\t$mib        = filter_value($item['mib'], get_request_var('filter'));\n\t\t\t$max_access = filter_value($item['max-access'], get_request_var('filter'));\n\n\t\t\tform_alternate_row('line' . $item['oid'], false);\n\t\t\tform_selectable_cell( $oid, $item['oid']);\n\t\t\tif($item['description']) {\n\t\t\t\tprint '<td><a href=\"#\" title=\"<div class=\\'header\\'>' . $name . '</div><div class=\\'content preformatted\\'>' . html_escape($item['description']) . '</div>\" class=\"tooltip\">' . $name . '</a></td>';\n\t\t\t}else {\n\t\t\t\tprint \"<td>$name</td>\";\n\t\t\t}\n\t\t\tform_selectable_cell($mib, $item['oid']);\n\t\t\tform_selectable_cell($item['kind'], $item['oid']);\n\t\t\tform_selectable_cell($max_access, $item['oid']);\n\t\t\tform_selectable_cell((in_array($item['kind'], array(__('Scalar'), __('Column Data'))) ? $item['value'] : __('N/A')), $item['oid']);\n\t\t\tform_end_row();\n\t\t}\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tprint $nav;\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\t\t$('.tooltip').tooltip({\n\t\t\ttrack: true,\n\t\t\tshow: 250,\n\t\t\thide: 250,\n\t\t\tposition: { collision: \"flipfit\" },\n\t\t\tcontent: function() { return $(this).attr('title'); }\n\t\t});\n\t</script>\n\t<?php\n}\n\nfunction snmpagent_utilities_run_eventlog(){\n\tglobal $item_rows;\n\n\t$severity_levels = array(\n\t\tSNMPAGENT_EVENT_SEVERITY_LOW      => 'LOW',\n\t\tSNMPAGENT_EVENT_SEVERITY_MEDIUM   => 'MEDIUM',\n\t\tSNMPAGENT_EVENT_SEVERITY_HIGH     => 'HIGH',\n\t\tSNMPAGENT_EVENT_SEVERITY_CRITICAL => 'CRITICAL'\n\t);\n\n\t$severity_colors = array(\n\t\tSNMPAGENT_EVENT_SEVERITY_LOW      => '#00FF00',\n\t\tSNMPAGENT_EVENT_SEVERITY_MEDIUM   => '#FFFF00',\n\t\tSNMPAGENT_EVENT_SEVERITY_HIGH     => '#FF0000',\n\t\tSNMPAGENT_EVENT_SEVERITY_CRITICAL => '#FF00FF'\n\t);\n\n\t$receivers = db_fetch_assoc('SELECT DISTINCT manager_id, hostname\n\t\tFROM snmpagent_notifications_log\n\t\tINNER JOIN snmpagent_managers\n\t\tON snmpagent_managers.id = snmpagent_notifications_log.manager_id');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('receiver');\n\n\tif(!in_array(get_request_var('severity'), array_keys($severity_levels)) && get_request_var('severity') != '-1' && get_request_var('severity') != '') {\n\t\tdie_html_input_error();\n\t}\n\t/* ==================================================== */\n\n\tif (isset_request_var('purge')) {\n\t\tdb_execute('TRUNCATE table snmpagent_notifications_log');\n\n\t\t/* reset filters */\n\t\tset_request_var('clear', true);\n\t}\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'severity' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'receiver' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_snmpl');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction applyFilter() {\n\t\tstrURL  = 'utilities.php?action=view_snmpagent_events';\n\t\tstrURL += '&severity=' + $('#severity').val();\n\t\tstrURL += '&receiver=' + $('#receiver').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'utilities.php?action=view_snmpagent_events&clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction purgeFilter() {\n\t\tstrURL = 'utilities.php?action=view_snmpagent_events&purge=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#purge').click(function() {\n\t\t\tpurgeFilter();\n\t\t});\n\n\t\t$('#form_snmpagent_notifications').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\n\t<?php\n\thtml_start_box(__('SNMPAgent Notification Log'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t\t<form id='form_snmpagent_notifications' action='utilities.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Severity');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='severity' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('severity') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tforeach ($severity_levels as $level => $name) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $level . \"'\"; if (get_request_var('severity') == $level) { print ' selected'; } print '>' . html_escape($name) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Receiver');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='receiver' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('receiver') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tforeach ($receivers as $receiver) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $receiver['manager_id'] . \"'\"; if (get_request_var('receiver') == $receiver['manager_id']) { print ' selected'; } print '>' . $receiver['hostname'] . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Entries');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('rows') == '-1') {?> selected<?php }?>><?php print __('Default');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc_x('Button: use filter settings', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc_x('Button: reset filter settings', 'Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='purge' value='<?php print __esc_x('Button: delete all table entries', 'Purge');?>' title='<?php print __esc('Purge Notification Log');?>'>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = ' 1';\n\n\t/* filter by severity */\n\tif(get_request_var('receiver') != '-1') {\n\t\t$sql_where .= \" AND snl.manager_id='\" . get_request_var('receiver') . \"'\";\n\t}\n\n\t/* filter by severity */\n\tif (get_request_var('severity') == '-1') {\n\t/* Show all items */\n\t} elseif (!isempty_request_var('severity')) {\n\t\t$sql_where .= \" AND snl.severity='\" . get_request_var('severity') . \"'\";\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= \" AND (`varbinds` LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\t$sql_where .= ' ORDER by `time` DESC';\n\t$sql_query  = \"SELECT snl.*, sm.hostname, sc.description\n\t\tFROM snmpagent_notifications_log AS snl\n\t\tINNER JOIN snmpagent_managers AS sm\n\t\tON sm.id = snl.manager_id\n\t\tLEFT JOIN snmpagent_cache AS sc\n\t\tON sc.name = snl.notification\n\t\tWHERE $sql_where\n\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM snmpagent_notifications_log AS snl\n\t\tWHERE $sql_where\");\n\n\t$logs = db_fetch_assoc($sql_query);\n\n\t$nav = html_nav_bar('utilities.php?action=view_snmpagent_events&severity='. get_request_var('severity').'&receiver='. get_request_var('receiver').'&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Log Entries'), 'page', 'main');\n\n\tform_start('managers.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header(array(' ', __('Time'), __('Receiver'), __('Notification'), __('Varbinds')));\n\n\tif (cacti_sizeof($logs)) {\n\t\tforeach ($logs as $item) {\n\t\t\t$varbinds = filter_value($item['varbinds'], get_request_var('filter'));\n\t\t\tform_alternate_row('line' . $item['id'], false);\n\n\t\t\tprint \"<td title='\" . __esc('Severity Level: %s', $severity_levels[$item['severity']]) . \"' style='width:10px;background-color: \" . $severity_colors[$item['severity']] . \";border-top:1px solid white;border-bottom:1px solid white;'></td>\";\n\t\t\tprint \"<td class='nowrap'>\" . date('Y-m-d H:i:s', $item['time']) . '</td>';\n\t\t\tprint '<td>' . html_escape($item['hostname']) . '</td>';\n\n\t\t\tif($item['description']) {\n\t\t\t\tprint '<td><a href=\"#\" title=\"<div class=\\'header\\'>' . html_escape($item['notification']) . '</div><div class=\\'content preformatted\\'>' . html_escape($item['description']) . '</div>\" class=\"tooltip\">' . html_escape($item['notification']) . '</a></td>';\n\t\t\t}else {\n\t\t\t\tprint '<td>' . html_escape($item['notification']) . '</td>';\n\t\t\t}\n\n\t\t\tprint \"<td>$varbinds</td>\";\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"5\"><em>' . __('No SNMP Notification Log Entries') . '</em></td></tr>';\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($logs)) {\n\t\tprint $nav;\n\t}\n\n\t?>\n\n\t<script type='text/javascript' >\n\t$('.tooltip').tooltip({\n\t\ttrack: true,\n\t\tposition: { collision: 'flipfit' },\n\t\tcontent: function() { return $(this).attr('title'); }\n\t});\n\t</script>\n\t<?php\n}\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/vdef.php');\n\n$vdef_actions = array(\n\t'1' => __('Delete'),\n\t'2' => __('Duplicate')\n);\n\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tvdef_form_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tvdef_form_actions();\n\n\t\tbreak;\n\tcase 'item_remove_confirm':\n\t\tvdef_item_remove_confirm();\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tvdef_item_remove();\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tget_filter_request_var('vdef_id');\n\n\t\titem_movedown();\n\n\t\theader('Location: vdef.php?header=false&action=edit&id=' . get_request_var('vdef_id'));\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tget_filter_request_var('vdef_id');\n\n\t\titem_moveup();\n\n\t\theader('Location: vdef.php?header=false&action=edit&id=' . get_request_var('vdef_id'));\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\t\tvdef_item_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tvdef_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'ajax_dnd':\n\t\tvdef_item_dnd();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tvdef();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\n/* --------------------------\n    Global Form Functions\n   -------------------------- */\n\nfunction draw_vdef_preview($vdef_id) {\n\t?>\n\t<tr class='even'>\n\t\t<td style='padding:4px'>\n\t\t\t<pre>vdef=<?php print get_vdef($vdef_id, true);?></pre>\n\t\t</td>\n\t</tr>\n\t<?php\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction vdef_form_save() {\n\tif (isset_request_var('save_component_vdef')) {\n\t\t$save['id']   = get_filter_request_var('id');\n\t\t$save['hash'] = get_hash_vdef(get_request_var('id'));\n\t\t$save['name'] = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$vdef_id = sql_save($save, 'vdef');\n\n\t\t\tif ($vdef_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: vdef.php?action=edit&header=false&id=' . (empty($vdef_id) ? get_request_var('id') : $vdef_id));\n\t} elseif (isset_request_var('save_component_item')) {\n\t\t$sequence = get_sequence(get_filter_request_var('id'), 'sequence', 'vdef_items', 'vdef_id=' . get_filter_request_var('vdef_id'));\n\n\t\t$save['id']       = get_filter_request_var('id');\n\t\t$save['hash']     = get_hash_vdef(get_request_var('id'), 'vdef_item');\n\t\t$save['vdef_id']  = get_filter_request_var('vdef_id');\n\t\t$save['sequence'] = $sequence;\n\t\t$save['type']     = get_nfilter_request_var('type');\n\t\t$save['value']    = get_nfilter_request_var('value');\n\n\t\tif (!is_error_message()) {\n\t\t\t$vdef_item_id = sql_save($save, 'vdef_items');\n\n\t\t\tif ($vdef_item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: vdef.php?action=item_edit&header=false&vdef_id=' . get_request_var('vdef_id') . '&id=' . (empty($vdef_item_id) ? get_request_var('id') : $vdef_item_id));\n\t\t} else {\n\t\t\theader('Location: vdef.php?action=edit&header=false&id=' . get_request_var('vdef_id'));\n\t\t}\n\t}\n}\n\nfunction duplicate_vdef($_vdef_id, $vdef_title) {\n\tglobal $fields_vdef_edit;\n\n\t$vdef       = db_fetch_row_prepared('SELECT * FROM vdef WHERE id = ?', array($_vdef_id));\n\t$vdef_items = db_fetch_assoc_prepared('SELECT * FROM vdef_items WHERE vdef_id = ?', array($_vdef_id));\n\n\t/* substitute the title variable */\n\t$vdef['name'] = str_replace('<vdef_title>', $vdef['name'], $vdef_title);\n\n\t/* create new entry: device_template */\n\t$save['id']   = 0;\n\t$save['hash'] = get_hash_vdef(0);\n\n\t$fields_vdef_edit = preset_vdef_form_list();\n\tforeach ($fields_vdef_edit as $field => $array) {\n\t\tif (!preg_match('/^hidden/', $array['method'])) {\n\t\t\t$save[$field] = $vdef[$field];\n\t\t}\n\t}\n\n\t$vdef_id = sql_save($save, 'vdef');\n\n\t/* create new entry(s): vdef_items */\n\tif (cacti_sizeof($vdef_items) > 0) {\n\t\tforeach ($vdef_items as $vdef_item) {\n\t\t\tunset($save);\n\n\t\t\t$save['id']       = 0;\n\t\t\t$save['hash']     = get_hash_vdef(0, 'vdef_item');\n\t\t\t$save['vdef_id']  = $vdef_id;\n\t\t\t$save['sequence'] = $vdef_item['sequence'];\n\t\t\t$save['type']     = $vdef_item['type'];\n\t\t\t$save['value']    = $vdef_item['value'];\n\n\t\t\tsql_save($save, 'vdef_items');\n\t\t}\n\t}\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n\nfunction vdef_form_actions() {\n\tglobal $vdef_actions;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') === '1') { // delete\n\t\t\t\t/* do a referential integrity check */\n\t\t\t\tif (cacti_sizeof($selected_items)) {\n\t\t\t\tforeach($selected_items as $vdef_id) {\n\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\tinput_validate_input_number($vdef_id);\n\t\t\t\t\t/* ==================================================== */\n\n\t\t\t\t\t$vdef_ids[] = $vdef_id;\n\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isset($vdef_ids)) {\n\t\t\t\t\tdb_execute('DELETE FROM vdef WHERE ' . array_to_sql_or($vdef_ids, 'id'));\n\t\t\t\t\tdb_execute('DELETE FROM vdef_items WHERE ' . array_to_sql_or($vdef_ids, 'vdef_id'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') === '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\tinput_validate_input_number($selected_items[$i]);\n\t\t\t\t\t/* ==================================================== */\n\n\t\t\t\t\tduplicate_vdef($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: vdef.php?header=false');\n\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$vdef_list = '';\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$vdef_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM vdef WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$vdef_array[] = $matches[1];\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('vdef.php', 'vdef_actions');\n\n\thtml_start_box($vdef_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($vdef_array)) {\n\t\tif (get_nfilter_request_var('drp_action') === '1') { // delete\n\t\t\tprint \"\t<tr>\n\t\t\t\t\t<td class='topBoxAlt'>\n\t\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following VDEF.', 'Click \\'Continue\\' to delete following VDEFs.', cacti_sizeof($vdef_array)) . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$vdef_list</ul></div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc_n('Delete VDEF', 'Delete VDEFs', cacti_sizeof($vdef_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') === '2') { // duplicate\n\t\t\tprint \"\t<tr>\n\t\t\t\t\t<td class='topBoxAlt'>\n\t\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to duplicate the following VDEF. You can optionally change the title format for the new VDEF.', 'Click \\'Continue\\' to duplicate following VDEFs. You can optionally change the title format for the new VDEFs.', cacti_sizeof($vdef_array)) . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$vdef_list</ul></div>\n\t\t\t\t\t\t<p><strong>\" . __('Title Format:') . \"</strong><br>\"; form_text_box(\"title_format\", \"<vdef_title> (1)\", \"\", \"255\", \"30\", \"text\"); print \"</p>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc_n('Duplicate VDEF', 'Duplicate VDEFs', cacti_sizeof($vdef_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: vdef.php?header=false');\n\t\texit;\n\t}\n\n    print \"<tr>\n        <td class='saveRow'>\n            <input type='hidden' name='action' value='actions'>\n            <input type='hidden' name='selected_items' value='\" . (isset($vdef_array) ? serialize($vdef_array) : '') . \"'>\n            <input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n            $save_html\n        </td>\n    </tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* --------------------------\n    VDEF Item Functions\n   -------------------------- */\n\nfunction vdef_item_remove_confirm() {\n\tglobal $vdef_functions, $vdef_item_types, $custom_vdef_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('vdef_id');\n\t/* ==================================================== */\n\n\tform_start('vdef.php');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$vdef       = db_fetch_row_prepared('SELECT * FROM vdef WHERE id = ?', array(get_request_var('id')));\n\t$vdef_item  = db_fetch_row_prepared('SELECT * FROM vdef_items WHERE id = ?', array(get_request_var('vdef_id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following VDEF\\'s.'); ?></p>\n\t\t\t<p>VDEF Name: '<?php print $vdef['name'];?>'<br>\n\t\t\t<em><?php $vdef_item_type = $vdef_item['type']; print $vdef_item_types[$vdef_item_type];?></em>: <strong><?php print get_vdef_item_name($vdef_item['id']);?></strong></p>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\");' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove VDEF Item');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').click(function(data) {\n\t\t\t$.post('vdef.php?action=item_remove', {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tvdef_id: <?php print get_request_var('vdef_id');?>,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}, function(data) {\n\t\t\t\t$('#cdialog').dialog('close');\n\t\t\t\tloadPageNoHeader('vdef.php?action=edit&header=false&id=<?php print get_request_var('id');?>');\n\t\t\t});\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction vdef_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('vdef_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM vdef_items WHERE id = ?', array(get_request_var('vdef_id')));\n}\n\nfunction vdef_item_edit() {\n\tglobal $vdef_functions, $vdef_item_types, $custom_vdef_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('vdef_id');\n\tget_filter_request_var('type_select');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$vdef = db_fetch_row_prepared('SELECT *\n\t\t\tFROM vdef_items\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (cacti_sizeof($vdef)) {\n\t\t\t$current_type = $vdef['type'];\n\t\t\t$values[$current_type] = $vdef['value'];\n\t\t}\n\t} else {\n\t\t$vdef = array();\n\t}\n\n\thtml_start_box(__('VDEF Preview'), '100%', '', '3', 'center', '');\n\tdraw_vdef_preview(get_request_var('vdef_id'));\n\thtml_end_box();\n\n\tif (!isempty_request_var('vdef_id')) {\n\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM vdef\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('vdef_id')));\n\n\t\t$header_label = __('VDEF Items [edit: %s]', html_escape($name));\n\t}else {\n\t\t$header_label = __('VDEF Items [new]');\n\t}\n\n\tform_start('vdef.php', 'form_vdef');\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', '');\n\n\tif (isset_request_var('type_select')) {\n\t\t$current_type = get_request_var('type_select');\n\t} elseif (isset($vdef['type'])) {\n\t\t$current_type = $vdef['type'];\n\t} else {\n\t\t$current_type = CVDEF_ITEM_TYPE_FUNCTION;\n\t}\n\n\t$form_vdef = array(\n\t\t'type_select' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('VDEF Item Type'),\n\t\t\t'description'   => __('Choose what type of VDEF item this is.'),\n\t\t\t'value'         => $current_type,\n\t\t\t'array'         => $vdef_item_types\n\t\t),\n\t\t'value' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('VDEF Item Value'),\n\t\t\t'description'   => __('Enter a value for this VDEF item.'),\n\t\t\t'value'         => (isset($vdef['value']) ? $vdef['value']:'')\n\t\t),\n\t\t'id' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => isset_request_var('id') ?  get_request_var('id') : '0',\n\t\t),\n\t\t'type' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => $current_type\n\t\t),\n\t\t'vdef_id' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => get_request_var('vdef_id')\n\t\t),\n\t\t'save_component_item' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => '1'\n\t\t)\n\t);\n\n\tswitch ($current_type) {\n\tcase '1':\n\t\t$form_vdef['value']['array'] = $vdef_functions;\n\n\t\tbreak;\n\tcase '4':\n\t\t$form_vdef['value']['array'] = $custom_vdef_data_source_types;\n\n\t\tbreak;\n\tcase '6':\n\t\t$form_vdef['value']['method']     = 'textbox';\n\t\t$form_vdef['value']['max_length'] = '255';\n\t\t$form_vdef['value']['size']       = '30';\n\n\t\tbreak;\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($form_vdef, $vdef)\n\t\t)\n\t);\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#type_select').unbind().change(function() {\n\t\t\tstrURL  = 'vdef.php?action=item_edit';\n\t\t\tstrURL += '&id=' + $('#id').val();\n\t\t\tstrURL += '&vdef_id=' + $('#vdef_id').val();\n\t\t\tstrURL += '&type_select=' + $('#type_select').val();\n\t\t\tstrURL += '&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n\n\tform_save_button('vdef.php?action=edit&id=' . get_request_var('vdef_id'));\n}\n\n/* ---------------------\n    VDEF Functions\n   --------------------- */\n\nfunction item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('vdef_id');\n\t/* ==================================================== */\n\n\tmove_item_down('vdef_items', get_request_var('id'), 'vdef_id=' . get_request_var('vdef_id'));\n}\n\nfunction item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('vdef_id');\n\t/* ==================================================== */\n\n\tmove_item_up('vdef_items', get_request_var('id'), 'vdef_id=' . get_request_var('vdef_id'));\n}\n\nfunction vdef_item_dnd() {\n\t/* ================= Input validation ================= */\n\tget_filter_request_var('id');\n\t/* ================= Input validation ================= */\n\n\t$continue = true;\n\n\tif (isset_request_var('vdef_item') && is_array(get_nfilter_request_var('vdef_item'))) {\n\t\t$vdef_ids = get_nfilter_request_var('vdef_item');\n\n\t\tif (cacti_sizeof($vdef_ids)) {\n\t\t\t$sequence = 1;\n\t\t\tforeach($vdef_ids as $vdef_id) {\n\t\t\t\t$vdef_id = str_replace('line', '', $vdef_id);\n\t\t\t\tinput_validate_input_number($vdef_id);\n\n\t\t\t\tdb_execute_prepared('UPDATE vdef_items\n\t\t\t\t\tSET sequence = ?\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($sequence, $vdef_id));\n\n\t\t\t\t$sequence++;\n\t\t\t}\n\t\t}\n\t}\n\n\theader('Location: vdef.php?action=edit&header=false&id=' . get_request_var('id'));\n}\n\nfunction vdef_edit() {\n\tglobal $vdef_item_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$vdef = db_fetch_row_prepared('SELECT *\n\t\t\tFROM vdef\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('VDEFs [edit: %s]', html_escape($vdef['name']));\n\t} else {\n\t\t$header_label = __('VDEFs [new]');\n\t}\n\n\tform_start('vdef.php', 'vdef_edit');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\t$preset_vdef_form_list = preset_vdef_form_list();\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($preset_vdef_form_list, (isset($vdef) ? $vdef : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('id', (isset($vdef['id']) ? $vdef['id'] : '0'), '');\n\tform_hidden_box('save_component_vdef', '1', '');\n\n\tif (!isempty_request_var('id')) {\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\tdraw_vdef_preview(get_request_var('id'));\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('VDEF Items'), '100%', '', '3', 'center', 'vdef.php?action=item_edit&vdef_id=' . $vdef['id']);\n\n\t\t$header_items = array(\n\t\t\tarray('display' => __('Item'), 'align' => 'left'),\n\t\t\tarray('display' => __('Item Value'), 'align' => 'left')\n\t\t);\n\n\t\thtml_header($header_items, 2);\n\n\t\t$vdef_items = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM vdef_items\n\t\t\tWHERE vdef_id = ?\n\t\t\tORDER BY sequence',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$i = 1;\n\t\t$total_items = cacti_sizeof($vdef_items);\n\n\t\tif (cacti_sizeof($vdef_items)) {\n\t\t\tforeach ($vdef_items as $vdef_item) {\n\t\t\t\tform_alternate_row('line' . $vdef_item['id'], true, true);\n\t\t\t\t?>\n\t\t\t\t<td>\n\t\t\t\t\t<a class='linkEditMain' href='<?php print html_escape('vdef.php?action=item_edit&id=' . $vdef_item['id'] . '&vdef_id=' . $vdef['id']);?>'><?php print __('Item #%d', $i);?></a>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<em><?php $vdef_item_type = $vdef_item['type']; print $vdef_item_types[$vdef_item_type];?></em>: <strong><?php print get_vdef_item_name($vdef_item['id']);?></strong>\n\t\t\t\t</td>\n\t\t\t\t<td class='right'>\n\t\t\t\t\t<?php\n\t\t\t\t\tif (read_config_option('drag_and_drop') == '') {\n\t\t\t\t\t\tif ($i < $total_items && $total_items > 1) {\n\t\t\t\t\t\t\techo '<a class=\"pic fa fa-caret-down moveArrow\" href=\"' . html_escape('vdef.php?action=item_movedown&id=' . $vdef_item['id'] . '&vdef_id=' . $vdef_item['vdef_id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\techo '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($i > 1 && $i <= $total_items) {\n\t\t\t\t\t\t\techo '<a class=\"pic fa fa-caret-up moveArrow\" href=\"' . html_escape('vdef.php?action=item_moveup&id=' . $vdef_item['id'] .\t'&vdef_id=' . $vdef_item['vdef_id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\techo '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t\t<a id='<?php print $vdef['id'] . '_' . $vdef_item['id'];?>' class='delete deleteMarker fa fa-times' title='<?php print __esc('Delete VDEF Item');?>'></a>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('vdef.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t$('#vdef_edit3').find('.cactiTable').attr('id', 'vdef_item');\n\t\t$('.cdialog').remove();\n\t\t$('body').append(\"<div class='cdialog' id='cdialog'></div>\");\n\n\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n\t\t$('#vdef_item').unbind().tableDnD({\n\t\t\tonDrop: function(table, row) {\n\t\t\t\tloadPageNoHeader('vdef.php?action=ajax_dnd&id=<?php isset_request_var('id') ? print get_request_var('id') : print 0;?>&'+$.tableDnD.serialize());\n\t\t\t}\n\t\t});\n\t\t<?php } ?>\n\n\t\t$('.delete').unbind().click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tid = $(this).attr('id').split('_');\n\t\t\trequest = 'vdef.php?action=item_remove_confirm&id='+id[0]+'&vdef_id='+id[1];\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t\t$('#cdialog').dialog({ title: '<?php print __esc('Delete VDEF Item');?>', minHeight: 80, minWidth: 500 });\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\t});\n\n\t</script>\n\t<?php\n}\n\nfunction vdef_filter() {\n\tglobal $item_rows;\n\n\thtml_start_box( __('VDEFs'), '100%', '', '3', 'center', 'vdef.php?action=edit');\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_vdef' action='vdef.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('VDEFs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . $value . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n                    <td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='has_graphs' <?php print (get_request_var('has_graphs') == 'true' ? 'checked':'');?>>\n                        \t<label for='has_graphs'><?php print __('Has Graphs');?></label>\n\t\t\t\t\t\t</span>\n                    </td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc_x('Button: use filter settings', 'Go');?>' id='refresh'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc_x('Button: reset filter settings', 'Clear');?>' id='clear'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type='text/javascript'>\n\n\t\t\tfunction applyFilter() {\n\t\t\t\tstrURL  = 'vdef.php?header=false';\n\t\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\t\tstrURL += '&has_graphs='+$('#has_graphs').is(':checked');\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = 'vdef.php?clear=1&header=false';\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\t$('#refresh').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#has_graphs').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#form_vdef').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction get_vdef_records(&$total_rows, &$rows) {\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (rs.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_having = 'HAVING graphs>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(`rows`)\n        FROM (\n            SELECT vd.id AS `rows`, vd.name,\n            SUM(CASE WHEN local_graph_id>0 THEN 1 ELSE 0 END) AS graphs\n            FROM vdef AS vd\n            LEFT JOIN graph_templates_item AS gti\n            ON gti.vdef_id=vd.id\n            GROUP BY vd.id\n        ) AS rs\n        $sql_where\n\t\t$sql_having\n\t\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\treturn db_fetch_assoc(\"SELECT rs.*,\n\t\tSUM(CASE WHEN local_graph_id=0 THEN 1 ELSE 0 END) AS templates,\n        SUM(CASE WHEN local_graph_id>0 THEN 1 ELSE 0 END) AS graphs\n        FROM (\n            SELECT vd.*, gti.local_graph_id\n            FROM vdef AS vd\n            LEFT JOIN graph_templates_item AS gti\n            ON gti.vdef_id=vd.id\n            GROUP BY vd.id, gti.graph_template_id, gti.local_graph_id\n        ) AS rs\n\t\t$sql_where\n\t\tGROUP BY rs.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\");\n}\n\nfunction vdef($refresh = true) {\n\tglobal $vdef_actions;\n\n    /* ================= input validation and session storage ================= */\n    $filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_vdef');\n\t/* ================= input validation ================= */\n\n\tvdef_filter();\n\n\t$total_rows = 0;\n\t$vdefs = array();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$vdefs = get_vdef_records($total_rows, $rows);\n\n\t$nav = html_nav_bar('vdef.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('VDEFs'), 'page', 'main');\n\n\tform_start('vdef.php', 'chk');\n\n    print $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n    $display_text = array(\n        'name'      => array('display' => __('VDEF Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __esc('The name of this VDEF.') ),\n        'nosort'    => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __esc('VDEFs that are in use cannot be Deleted. In use is defined as being referenced by a Graph or a Graph Template.') ),\n        'graphs'    => array('display' => __('Graphs Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __esc('The number of Graphs using this VDEF.') ),\n        'templates' => array('display' => __('Templates Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __esc('The number of Graphs Templates using this VDEF.') )\n\t);\n\n    html_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n    $i = 0;\n    if (cacti_sizeof($vdefs)) {\n        foreach ($vdefs as $vdef) {\n            if ($vdef['graphs'] == 0 && $vdef['templates'] == 0) {\n                $disabled = false;\n            } else {\n                $disabled = true;\n            }\n\n            form_alternate_row('line' . $vdef['id'], false, $disabled);\n\t\t\tform_selectable_cell(filter_value($vdef['name'], get_request_var('filter'), 'vdef.php?action=edit&id=' . $vdef['id']), $vdef['id']);\n            form_selectable_cell($disabled ? __('No'):__('Yes'), $vdef['id'], '', 'text-align:right');\n            form_selectable_cell(number_format_i18n($vdef['graphs'], '-1'), $vdef['id'], '', 'text-align:right');\n            form_selectable_cell(number_format_i18n($vdef['templates'], '-1'), $vdef['id'], '', 'text-align:right');\n            form_checkbox_cell($vdef['name'], $vdef['id'], $disabled);\n            form_end_row();\n        }\n    } else {\n        print \"<tr class='tableRow'><td colspan='4'><em>\" . __('No VDEFs') . \"</em></td></tr>\\n\";\n    }\n\n    html_end_box(false);\n\n    if (cacti_sizeof($vdefs)) {\n        print $nav;\n\t}\n\n    /* draw the dropdown containing a list of available actions for this form */\n    draw_actions_dropdown($vdef_actions);\n\n    form_end();\n}\n"], "fixing_code": ["Cacti CHANGELOG\n\n-issue#2184: html_host_filter() does not handle host_id consequently\n-issue#2188: SNMP timeout errors are being duplicated\n-issue#2191: i18n_themes is not properly primed in global_arrays.php\n-issue#2202: Can't create more than one graph with add_graphs.php from one template\n-issue#2207: Removing Graph Template does not Remove Data Query Associations\n-issue#2212: Stored XSS in \"Website Hostname\" field\n-issue#2213: Stored XSS in \"Website Hostname\" field - Devices\n-issue#2214: Stored XSS in \"Vertical Label\" field - Graph\n-issue#2215: Stored XSS in \"Name\" field - Color \n-feature: Update phpseclib to version 2.0.12\n\n1.2.0 Beta 4\n-issue#2186: Boost generates invalid SQL during on demand update\n-issue#2182: Graph View missing 'html_graph_template_multiselect()' function\n\n1.2.0 Beta 3\n-issue#2002: api_plugin_db_table_create should support non-string defaults\n-issue#2126: api_device.php generates undefined function poller_push_to_remote_db_connect()\n-issue#2127: Unable to save error when duplicating graph\n-issue#2135: api_tree_lock() and api_tree_unlock() forcing redirection incorrectly\n-issue#2143: export.php Illegal string offset 'method'\n-issue#2144: Device Management \"Status\" column does not sort properly\n-issue#2152: When editing a device, should show disable/enable option\n-issue#2153: Utilities page issues the wrong hook for tabs\n-issue#2163: LDAP functions are not consistent\n-issue#2164: Login page does not remember selected realm\n-issue#2171: datepicker and timepick translation not available\n-issue#2178: Header/Footer included more than once\n-issue: Unable to display user profile tabs\n-feature:#2173: Introduce Device and Graph Template Caching to Speed UI\n-feature: Update JavaScript library jstree.js to 3.3.7\n\n1.2.0 Beta 1\n-security#1882: Bypass output validation in select cases\n-issue#186: Cacti does not support jQueryUI 1.12.x\n-issue#187: Remove the use of jQuery Migrate plugin\n-issue#454: Cacti Re-Index does not resolve index changes properly during re-index \n-issue#983: Import Template Preview is misleading\n-issue#1072: CVE-2009-4112 with regard to exploiting Data Input methods\n-issue#1097: When copying template user, enable that user, also template users should be disabled by default\n-issue#1174: Disable drag and drop when tree is not in edit mode\n-issue#1200: Aggregate Graphs can not include some classes of COMMENT\n-issue#1298: Prevent system running if system log is not writable\n-issue#1350: When switching an Automation Tree Rule's leaf type, remove invalid Automation Rule Items\n-issue#1383: CSRF Timeout does not obey session timeout\n-issue#1408: Update SQL / Backtrace to use new clean_up_lines() function\n-issue#1414: DSSTATS reports incorrectly that a data source does not exist\n-issue#1420: Debian test suite reports issues \n-issue#1421: Fix issue when SQL had all bad modes, missing variable warning was generated\n-issue#1426: Fix issue where remote poller was not using unique filenames when attempting to verify files\n-issue#1437: Plugin install hover message sometimes shows line breaks rather than formatted text\n-issue#1473: Recovery Date overwritten by subsequent checks\n-issue#1494: Unable to Deep Link/Bookmark Trees\n-issue#1454: When using oid_regexp_parse, filter indexes to those that match\n-issue#1503: Undefined function clearstatscache in DSSTATS\n-issue#1507: When saving graph settings from the graph page, the graph template id should not be included\n-issue#1510: New Graphs Undefined Variable $graph_template_name\n-issue#1521: Force boost to be enabled when there are Remote Data Collectors\n-issue#1528: Saving a device can result in WARNINGS related to string vs array handling\n-issue#1529: Allow Aggregate Graphs to Sum Bandwidth and Percentile COMMENTS\n-issue#1543: Graph Preview appends header=false too many times\n-issue#1553: Poller does not set rrd_step_counter correctly if no steps taken\n-issue#1559: CLI Output Issues due to over escaping\n-issue#1560: Warning that escapeshellarg() is escaping a null\n-issue#1567: Technical support - add notification if Cacti and Spine version is different\n-issue#1574: User templates are not correctly being applied\n-issue#1589: Installer now checks that the temporary folder is writable\n-issue#1590: User Admin generates SQL error if user is not part of any groups\n-issue#1601: Aggregate Graphs can not include some classes of COMMENT\n-issue#1602: PHP ERROR: Call to undefined function api_data_source_cache_crc_update()\n-issue#1604: Failed to connect to remote collector\n-issue#1606: Boost debug log not functional\n-issue#1607: Boost next run time occurs in the past\n-issue#1608: Possible boost race conditions\n-issue#1609: Remote pollers update 'stats_poller' on main poller\n-issue#1617: Editing a data query results in missing $header variable\n-issue#1621: Realtime Popup can cause automatic logout\n-issue#1626: httpd-error.log have message about Fontconfig\n-issue#1634: Default snmp quick print setting resulting in false poller ASSERTS on some php releases\n-issue#1651: Check temporary folder has write access during import\n-issue#1655: Correct Cacti to handle new MySQL 8.0 reserved word `system`\n-issue#1658: Devices drop down should be filtered by Site\n-issue#1660: Reports based upon Tree don't maintain graph order\n-issue#1665: Must change password not working for local users when main realm is not local\n-issue#1669: Console log header grammar issue\n-issue#1674: Threads and Processes values not migrated to Poller table during upgrade\n-issue#1676: Allow automation discovery to add the same sysname on different hosts\n-issue#1682: Slow Select Statement lib/api_automation.php\n-issue#1689: Technical Support's RRDTool version should show detected RRD version\n-issue#1690: Report a warning if the default collation is not utf8mb4_unicode_ci\n-issue#1700: Mail sent without auth causes errors to appear in logs\n-issue#1710: RRDtool create command causes first update to fail\n-issue#1721: Console Side Bar not correct on first login\n-issue#1723: die() messages should include PHP_EOF for better logging\n-issue#1726: Poor page performance editing a Graphs Graph Items\n-issue#1746: Poller with no hosts does not exit until timeout is reached\n-issue#1761: Graph Management page shows bogus template names\n-issue#1783: Browser Back button still does not working\n-issue#1796: Import: Fixed handling of references to objects not included in file\n-issue#1799: Default User log sort should be date descending\n-issue#1810: Correct SQL errors with authentication set to no authentication\n-issue#1839: Dummy cosmetic bug on down device selection option\n-issue#1841: Data Source Stats table not properly migrated from pre 1.x Cacti plugin\n-issue#1849: SNMPAgent not sending traps\n-issue#1852: Reports Preview/Mails show no graphs\n-issue#1889: Insecure $ENV{ENV} which running setgid\n-issue#1901: Upgrade from 0.8.8h fails on external_links statement\n-issue#1921: Data Query XML field method 'rewrite_index' does not correctly query for value\n-issue#1926: Deselecting items should present warning or disable GO button\n-issue#1948: Device Template should warn about need to re-sync\n-issue#1953: set_default_action() should warn if more than one action provided\n-issue#1973: SpikeKill Menu does not display properly\n-issue#1976: Default admin permissions do not allow everything\n-issue#1982: Certain hooks should occur within api functions rather than UI functions\n-issue#2012: For kernel 3.2+, \"Linux - Memory - Free\" should grep for \"MemAvailable:\", not \"MemFree:\"\n-issue#2085: CLOG Regex Parser does not verify registered function exists\n-issue: Move Graph removal function to Graph API\n-issue: Fix issue with display_custom_error_message() causing problem with system error message handling\n-issue: Graph List View was not fully responsive\n-issue: Typo in Dutch translations when an error occurred while downgrading\n-issue: Verify all Fields not working due to Cacti 1.x upgrade error\n-issue: On the Data Sources page, if there is no filtered Device and a Data Source is edited, device association is lost\n-feature#122: Support a Site Branch Type\n-feature#289: Allow external nologin access for Realtime Graphs\n-feature#553: Aggregated graph does not belong to host\n-feature#614: Duplicate Data Input Methods\n-feature#948: Every time when creating new graph Cacti creates new datasource\n-feature#973: Obtain users email and full name from ldap \n-feature#1060: Design Enhancement for Large scale Cacti Implementations\n-feature#1347: Update automation logging to work better\n-feature#1142: Add Site dropdown to the Graphs and Data Source pages\n-feature#1184: Improve Data Input Methods editability and message handling\n-feature#1282: Email notification for Automation Network discovery process\n-feature#1395: Ensure messages have each new line keep the same prefix in cacti_log()\n-feature#1399: Allow 'requires' to include version against a plugin\n-feature#1400: User settings should have checkbox to enable overriding of global settings\n-feature#1422: Automatically select the next unused data input field when clicking add on data input method\n-feature#1428: Graphs: Add more information to error image\n-feature#1505: Allow Device Edit from Graphs page\n-feature#1527: Update Fontawesome from 4.7 to 5.0.10\n-feature#1580: Support Drag & Drop for Report Items\n-feature#1581: Allow Mass Adding of Graphs to Reports\n-feature#1584: Allow theme selection when installing\n-feature#1588: Check that PHP can run a test file\n-feature#1597: Ensure synchronised files have same attributes as originals\n-feature#1593: Allow External links to auto refresh\n-feature#1610: Script STDERR logging\n-feature#1628: Allow the User to define a initial Network Discovery during Setup\n-feature#1670: Improve Graph Management to show type of source for a graph\n-feature#1671: Duplicate Graph Template does not duplicate Data Query Graph Template Mappings\n-feature#1677: Default Tree nodes sorting to be inherited\n-feature#1692: Separate option for logging Input Validation issues\n-feature#1691: Add a 'Copy graph' option to context menu of graphs\n-feature#1703: Provide i18n for the graph right context menu\n-feature#1708: Automation: Email settings should have network level overrides\n-feature#1709: Dont warn when attempting to make updates in the past\n-feature#1711: Support specifying MySQL SSL file paths in the database API\n-feature#1731: Warn a user if they are going off page and there are unsaved changes\n-feature#1734: Visual enhancements to RRD error message when file not found\n-feature#1763: Automatic refresh for Time Graph View - Enhancement\n-feature#1806: Control low level debug routines via config.php\n-feature#1819: Removing Graphs using CLI\n-feature#1969: Allow linking to graph previews of a host by it's external id\n-feature#2006: Data Source Profile RRAs: Aggregation Level and Default Timespan for a Decade long graph\n-feature: New Install/Upgrade user permission to limit access to being able to upgrade\n-feature: Make Graph and Data Source suggested naming more efficient\n-feature: Make tree editing responive\n-feature: Add support for DDERIVE and DCOUNTER to Cacti\n-feature: Add Timezone support for Remote Data Collectors\n-feature: Add One Minute Sampling to the default Data Source Profiles\n-feature: Allow Top tabs to be Glyphs or Text or both\n-feature: Update JavaScript library c3.js to version 0.6.8\n-feature: Update JavaScript library d3.js to version 5.7.0\n-feature: Update JavaScript library jquery.tablesorter.js to version 2.30.7\n-feature: Update JavaScript library jquery-migrate.js to 3.0.1\n-feature: Update JavaScript library screenfull.js to 3.3.3\n-feature: Update JavaScript library jstree.js to 3.3.6\n-feature: Update JavaScript library Chart.js to 2.7.3\n-feature: Update phpseclib to version 2.0.11\n-feature: Update JavaScript library jquery.js to 3.3.1\n-feature: Make Top Tabs use Ajax Callback\n-feature: Make all user settings dynamic and allow resetting to default.\n-feature: Change password page provides visible confirmation of password rules\n-feature: Allow ASCII filepath paths to not be found on settings save\n-feature: Provide option to debug width errors where output exceeds column width\n-feature: Allow snmpagent to be disabled for very large installs\n-feature: Inform the primary Cacti administrator of problems by Email\n-feature: Add Graphs and Data Sources hyperlinks on Device page\n-feature: Do not allow second data source to be added to an SNMP Get data template\n-feature: Allow drill down from Graphs to Data Queries or Templates\n-feature: Allow Adding Aggregate Graphs to a Report \n-feature: Don't allow removal of Data Sources from Data Template once its in use\n-feature: Tree automation is now defaulted to on for new install\n-feature: Allow Import/Export to be hookable\n-feature: Add a Timeout setting for Remote Agent calls\n-feature: Make it easy to find Data Query based graphs that have lost indexes\n-feature: Big Spanish translation update plus massive QA fixes\n\n1.1.38\n-issue#1501: cmd.php poller not stripping alpha from snmp get values\n-issue#1515: Special characters not rendered properly in settings\n-issue#1530: Inconsistent behaviour handling blank Field Name/Value when editing data query suggested values\n-issue#1537: Numeric validation not ignoring blank elements\n\n1.1.37\n-issue#274: Allow Realtime Graph Popup Mode\n-issue#1405: When Data Query columns are wide, they cause rendering issues\n-issue#1414: DSSTATS reports incorrectly that a data source does not exist\n-issue#1419: Filtering log results in errors in the log\n-issue#1420: PHP NOTICE editing cdef and vdef items\n-issue#1421: CLI upgrade_database.php PHP Warning on execution\n-issue#1426: Remote poller erroring attempting to verify files\n-issue#1432: Delete confirmation does not disappear\n-issue#1443: Partial Save warnings under Settings -> Mail/Reporting/DNS\n-issue#1447: CLI audit_database.php not detecting database name, and failed to create audit tables when run fresh\n-issue#1453: CLI add_graph.php not allowing title to be set\n-issue#1456: Increase minimum php version maintaining support for RHEL6\n-issue#1457: Path-Based Cross-Site Scripting (XSS) issues\n-issue#1458: Error in logs when creating new graphs\n-issue#1459: Automation filter not applied correctly\n-issue#1461: Setting output_format on input type causes no values to be returned\n-issue#1464: Poller stuck in infinitely loop causing excess logging\n-issue#1466: No scrollbars in mobile browsers\n-issue#1468: Increase max length of host.snmp_sysObjectID column\n-issue#1471: Undefined function found in global_languages.php\n-issue#1472: Change Device Options - Style needs updating\n-issue#1474: Check possibility for creation of temporary tables on install\n-issue#1487: Undefined constant in ldap.php\n-issue#1483: Create New Graphs - Paw Styling Issue\n-issue#1493: Can't create tree branches with '#' sign\n-feature#1489: Add ability to use parts of OID as value via regex\n-feature: Updated Chinese Simplified translations\n-feature: Updated Dutch translations\n-feature: JavaScript library Chart.js updated 2.7.2 \n-feature: Allow snmp formatting functions to detect UTF-8 output\n\n1.1.36\n-issue#934: Template names missing in graph management list\n-issue#1211: CDEF and VDEF Item Edit do not use correct procedures\n-issue#1250: Language support does not support localization properly\n-issue#1331: Log Rotation should occur at midnight on system\n-issue#1334: Console->Users->(Edit) Permissions checkmark descriptions missing\n-issue#1336: Debian test suite reports php error\n-issue#1338: Allow automation to be run in debug mode from GUI\n-issue#1339: First graph of second page does not render\n-issue#1340: Unable to open Time Graph View in new tab\n-issue#1348: Toggle context menu of Zoom\n-issue#1351: Errorimage does not render on systems without GD ttf support\n-issue#1353: New installation without config.php silently throws errors\n-issue#1355: Single tree can have the order of the tree changed\n-issue#1357: Data Profile disable fields shown temporarily as editable\n-issue#1359: Settings page generates error for removed plugin tab\n-issue#1362: DSStats Avg/Peak function broken due to change in RRDtool processing\n-issue#1365: Plugin Management enforce folder name\n-issue#1366: Improve error/info message display\n-issue#1380: Potential failure when updating script type\n-issue#1384: When installing/enabling plugins, current user and admin should get permissions\n-issue#1386: form_selectable_cell() ignores width if no style_or_class is passed\n-issue#1389: Poller is including plugins that are not installed\n-issue#1390: Plugin uninstall should prompt user before removal\n-issue#1396: Prevent installation/uninstallation of a plugin if dependency is present\n-issue#1397: Distinguish between plugin tabs and core tabs in settings\n-issue#1371: Allow dynamic setting of from name when emailing\n-issue: Data Query Cache filter layout more consistent\n-issue: Minor plugin permissions format change\n-issue: Implementation of error handling causes errors creating New Graphs\n-issue: Deprecated DDStats setting removed\n-issue: Graph context menu items are now context aware\n-issue: Validate spine path before allowing enabling of spine\n-issue: Errored settings fields now highlighted correctly on error\n-issue: Add the Default Device to the Default Tree at install time\n-issue: Secpass password verification error message unuseful\n-feature: Searching of SNMP Index in View Data Query Cache now works\n-feature: Presets now have default device Template\n-feature: JavaScript library c3.js updated (v0.4.21) / jstree.js (3.3.5)\n-feature: PHPSecLib updated 2.0.10\n-feature: Updated Dutch translations\n\n1.1.35\n-issue#114: *all_max_peak* percentile calculations incorrect\n-issue#430: Pressing Back often fails to work as expected\n-issue#564: Fail to move items in graph template as desired\n-issue#981: Hyperlinks for Data Profile stats\n-issue#993: Realtime not working on remote pollers for certain data query\n-issue#1244: Errors importing templates with deprecated hashes\n-issue#1251: Allow zoom out through mouse mmiddle button\n-issue#1281: Max OIDs setting is for bulkget and not bulkwalk operations\n-issue#1286: Correct CHUNKED_ENCODING error when retrieving graph with some browsers\n-issue#1306: Graphs are not always refreshed properly\n-issue#1309: Provide meaningful authentication errors in graph_json.php and graph_image.php\n-issue#1310: Return button fails on change password page\n-issue#1315: Realtime not working on local data collector\n-issue#1316: CDEF Item Value dialog does not update creating items\n-issue#1319: Front end + remote poller - connection timeout issue\n-issue#1321: Use RRDtool pipelining functions within DSSTATS\n-issue#1323: Enhance form layout for readability\n-issue#1329: Spelling errors in automation_networks.php\n-issue: Validate regular expressions if specified in add_graphs.php\n-issue: Ensure compression levels are consistent when importing package\n\n1.1.34\n-issue#1040: PHP version 7.2 - ERROR PHP WARNING: sizeof()\n-issue#1195: Improved Javascript error message handling\n-issue#1245: Unable to reorder graph name suggested values\n-issue#1256: Error reporting of custom errors not displayed correctly\n-issue#1257: Boost excessively logging updates\n-issue#1258: cacti.sql updated to match expected schema\n-issue#1260: Tab images fail to render due to TrueType support in PHP GD Module\n-issue#1261: Automatic logout timeout does not apply to web basic authenication\n-issue#1263: CLI utility to validate database schema\n-issue#1266: Inconsistent usage graphWrapper CSS causes odd graph zoom behavior\n-issue#1268: Regex filters not working properly\n-issue#1274: Host CPU script checks value existance to avoid error\n-issue#1275: SNMP v3 authPriv fails to work\n-issue#1287: JSON calls return validation error in HTML format\n-issue#1289: Script Server should output parameter array rather than parameters\n-issue#1292: Chrome to aggressively caches Javascript files\n-issue#1293: Correctly identify if command 'snmpbulkwalk' is available\n-issue#1296: CactiErrorHandler does not ignore PHP suppressed errors\n-issue#1300: Automation discovery : New devices added by automation discovery have empty SNMP community field\n-issue#1302: Automatic logout should not be enforced on login page\n-issue#1304: mib_cache.php file contains unsafe transactions for binary logging\n-feature: CLI utilily to generate and verify file hashes for installed Cacti files\n-feature: Logging links back to appropriate areas for troubleshooting\n-feature: Logging lists filenames in reverse order\n\n1.1.33\n-issue#1253: Automatically generated RRDtool DEF names in Cacti 1.1.32 break existing Graph Templates\n\n1.1.32\n-issue#969: Undefined index: color_id / task_item when viewing graphs\n-issue#1166: Fix typo of 'locale' in global_languages.php\n-issue#1222: Graphs with large number of items causes RRDTool to error\n-issue#1230: PHP Fatal error: Call to undefined function get_max_tree_sequence()\n-issue#1238: SNMP functions fail to handle \"Invalid object identifier\" error\n-issue#1239: Browser console error in layout.js\n-issue#1240: Page layout issues caused by library update\n-issue#1246: Make SNMP Error return more info\n-issue: Missing or corrupted theme files can corrupt user settings\n-issue: Theme may not change until next login\n-issue: Tree edit Tree/Device/Graph drag areas incorrect\n-issue: Make callback error handling compatible with jQuery 3.x\n-issue: Ensure the snmp_error is cleared before every call\n-issue: Indicate unknown error when RRDTool returns no error message\n-feature: Update Javascript library: js.storage.js, d3.js, jquery.js, jquery.tablednd.js, jquery.timepicker.js\n\n1.1.31\n-issue#629: Site reload after delete the last letter in the searchbar\n-issue#1022: Discovery network stuck in \"running\" state does not return results\n-issue#1164: Version compare function fails on major/minor only versions\n-issue#1166: Invalid New User default language selection\n-issue#1175: Automatic logout inconsistent redirect\n-issue#1179: Warn during installation if installing moving to older version\n-issue#1183: Automatically detect missing Theme and use alternate\n-issue#1185: Layout with Graphs having large number of data columns\n-issue#1189: Allow ability to sort tree list by name asc/desc\n-issue#1190: Enabling, Disabling, Uninstalling plugin, you should page refresh\n-issue#1191: Tree sequences were not set or checked\n-issue#1197: Add more collection intervals to Data Source Profiles\n-issue#1206: Display issue with internationalization number format\n-issue#1210: CDEF and VDEF Items can not be properly edited\n-issue#1212: Navigation breadcrumbs fail to handle External links correctly\n-issue#1213: PHPMailer trying TLS despite SMTPSecure setting\n-issue#1215: Show version when installation prompts for license\n-issue#1217: Add ability to view/edit Input/Query when editing Data Template\n-issue: Named colors fail to import on install or upgrade\n-issue: Drag and Drop issues on multiple pages could corrupt sequencing\n-feature: Enhance filter to permit more glyphs for table headers\n-feature: Add a page refresh dropdown to the Automation Networks\n-feature: Enhanced SNMP v3 input forms\n-feature: Allow Trees to be rearranged using Drag and Drop\n-feature: Trap GUI callback errors and present error message\n\n1.1.30\n-issue#1155: Non-secure mail setting not functional due to changes in phpmailer\n-issue#1157: Resolve issue with branch permission api\n-issue#1158: Change CLOG to use regex replacement so line details are not mangled\n-issue#1161: Graph View regex's are not preserved during automatic page refresh\n-issue#1162: Error messages are not display when editing a user\n-issue#1166: Default language was not correctly set when editing a user\n-issue: basename function undefined during upgrade to 1.0.x\n-issue: Storage API and translations required for Change password function\n-issue: ALTER IGNORE still throws an error when attempting to drop the primary key\n-issue: Data Source profile form API generates error when system is half upgraded\n-issue: Resolve issue with importing packages\n-feature: Update package versions for Cacti version 1.1.29\n\n1.1.29\n-issue#871: Allow Nth Percentile and Bandwidth Summation to respect 'Base Value' in template\n-issue#965: Duplicate error message and incorrect error code when using LDAP authentication\n-issue#1084: Graph Tree Branch not properly populating when editing report item\n-issue#1104: Datetime formatting in developer debug mode incorrect\n-issue#1106: Template Filters has empty row\n-issue#1109: URL used in redirection when referrer already has parameters in it\n-issue#1110: Add CPU Total to 'SNMP - Get Processor Information'\n-issue#1111: PHP NOTICE when using LDAP authenication\n-issue#1116: Filters not allowing \"None\" or \"All\" when editing report item\n-issue#1119: Reduced amount of data fetched for CPU usage to just the data used\n-issue#1121: Bandwidth summation not using correct locale\n-issue#1122: Fix issue with local login / potential password problems\n-issue#1128: Resolve php warning when raising messages\n-issue#1130: Fix logging level issue where logs of same level as setting where not logged\n-issue#1131: Make upgrade_database.php use same version compare as /install/ system\n-issue#1133: Fix issues with variable name and debug log\n-issue#1141: When viewing graphs from list view, pagination causes list view filter to be cleared\n-issue#1143: ss_host_cpu.php - Division by zero / Invalid Return Value\n-issue#1146: Installation now checks URI path matchs with configuration option URL_PATH\n-issue: Updated Graph pagenation and filter reset\n-issue: Resolve issues with cacti_version_compare() processing\n-issue: Zoom context menu stays open after zoom out actions\n-issue: Paginator object was not always translated\n\n1.1.28\n-issue#958: User Group Tree permissions not calculated fully\n-issue#959: Issue viewing email reports due to email client decoding problems\n-issue#992: RRDfile naming issues that result from random sorting during export\n-issue#1012: Issue where disabled devices will not appear in Tree editor\n-issue#1044: Handle invalid exclusion regex properly when viewing the log\n-issue#1045: Issue with multiple pages and confirmation dialogs\n-issue#1048: Problem importing vdefs from templates\n-issue#1053: Remote Data Collector now works with https and self signed certificates\n-issue#1055: Errors in data source statistics inserts when invalid output is encountered\n-issue#1057: CVE-2017-16641 - Potential vulnerability in RRDtool functions\n-issue#1058: ICMP Ping to and IPv6 address fails to gather data for ping latency\n-issue#1059: Aggregate item filter should use regular expressions to avoid SQL errors due to flawed filter logic\n-issue#1064: When a Device Template is removed, Automation Templates for that Device Template remain\n-issue#1066: CVE-2017-16660 in remote_agent.php logging function\n-issue#1066: CVE-2017-16661 in view log file\n-issue#1071: CVE-2017-16785 in global_session.php Reflection XSS\n-issue#1074: Boost records get stuck in archive\n-issue#1079: Undefined index in lib/snmpagent.php\n-issue#1085: Undefined function html_log_input_error\n-issue#1086: Rerun data queries in automation process has no effect\n-issue#1087: cli/add_device.php --proxy option does not work with non-snmp devices\n-issue#1088: Set timeout for remote data collector context\n-issue: Minor performance increase in boost processing\n-issue: Poller output not empty not processed correctly on Log tab\n-feature: Timeout to the remote agent for realtime graphs\n-feature: Updated Dutch translations\n-feature: Database update adding additional indexes for increased performance\n-feature: Updated PHPMailer to version 5.2.26\n-feature: Updated phpseclib to version 2.0.7\n\n1.1.27\n-issue#1033: Issues inserting into dsstats table due to legacy data\n-issue#1039: Using html_escape still double escapes.  Use strip_tags instead\n-issue#1040: Resolving compatibility issue with PHP7.2\n\n1.1.26\n-issue#841: --input-fields variable not working with add_graphs.php cli\n-issue#986: Resolve minor appearance problem on Modern theme\n-issue#989: Resolve issue with data input method commands loosing spaces on import\n-issue#1000: add_graphs.php not recognizing input fields\n-issue#1003: Reversing resolution to Issue#995 due to adverse impact to polling times\n-issue#1008: Remove developer debug warning about thumbnail validation\n-issue#1009: Resolving minor issue with cmd_realtime.php and a changing hostname\n-issue#1010: CVE-2017-15194 - Path-Based Cross-Site Scripting (XSS)\n-issue#1027: Confirm that the PHP date.timezone setting is properly set during install\n-issue: Fixed database session handling for PHP 7.1\n-issue: Fixed some missing i18n\n-issue: Fixed typo's\n-feature: Updated Dutch translations\n-feature: Schema changes; Examined queries without key usage and added/changed some keys\n-feature: Some small improvements\n\n1.1.25\n-issue#966: Email still using SMTP security even though set to none\n-issue#995: Redirecting exec_background() to dev null breaks some functions\n-issue#998: Allow removal of external data template and prevent their creation\n-issue: Remove spikes uses wrong variance value from WebGUI\n-issue: Changing filters on log page does not reset to first page\n-issue: Allow manual creation of external data sources once again\n-feature: Updated Dutch translations\n\n1.1.24\n-issue#932: Zoom positioning breaks when you scroll the graph page\n-issue#970: Remote Data Collector Cache Synchronization missing plugin sub-directories\n-issue#980: Resolve issue where a new tree branches refreshs before you have a chance to name it\n-issue#982: Data Source Profile size information not showing properly\n-issue: Long sysDescriptions on automation page cause columns to be hidden\n-issue: Resolve visual issues in Classic theme\n-feature: Allow Resynchronization of Poller Resource Cache\n-feature: Update Spanish Translation\n\n1.1.23\n-issue#963: SQL Errors with snmpagent and MariaDB 10.2\n-issue#964: SQL Mode optimization failing in 1.1.22\n\n1.1.22\n-issue#950: Automation - New graph rule looses name on change\n-issue#952: CSV Export not rendering chinese characters correctly (Second attempt)\n-issue#955: Validation error trying to view graph debug syntax\n-issue: MySQL/MariaDB database sql_mode NO_AUTO_VALUE_ON_ZERO corrupts Cacti database\n-issue: When creating a data source, the data source profile does not default to the system default\n-feature: Enhance table filters to support new Cycle plugin\n-feature: Updated Dutch Translations\n\n1.1.21\n-issue#938: Problems upgrading to 1.1.20 with one table alter statement\n-issue#952: CSV Export not rendering chinese characters correctly\n-issue: Minor alignment issue on tables\n\n1.1.20\n-issue#920: Issue with scrollbars after update to 1.1.19 related to #902\n-issue#921: Tree Mode no longer expands to accomodate full tree item names\n-issue#922: When using LDAP domains some setings are not passed correctly to the Cacti LDAP library\n-issue#923: Warninga in cacti.log are displayed incorrectly\n-issue#926: Update Utilities page to provide more information on rebuilding poller cache\n-issue#927: Minor schema change to support XtraDB Cluster\n-issue#929: Overlapping frames on certain themes\n-issue#931: Aggregate graphs missing from list view\n-issue#933: Aggregate graphs page counter off\n-issue#935: Support utf8 printable in data query inserts\n-issue#936: TimeZone query failure undefined function\n-issue: Taking actions on users does not use callbacks\n-issue: Undefined constant in lib/snmp.php on RHEL7\n-issue: Human readable socket errno's not defined\n-issue: Audit of ping methods tcp, udp, and icmp ping. IPv6 will still not work till php 5.5.4\n\n1.1.19\n-issue#810: Scripts in packages don't match distribution\n-issue#919: Unable to upgrade to 1.1.18\n-issue: Update documentation for minimum PHP 5.4\n\n1.1.18\n-issue#902: Correcting some issues with Console and External Links\n-issue#903: Upgrade pace.js to v0.7.8\n-issue#904: Allow user to hide Graphs from disabled Devices\n-issue#906: Create a separate Realm for Realtime Graphs\n-issue#907: XSS issue in spikekill.php\n-issue#910: Boost last run duration generates an error on new install\n-issue#914: Unable to purge Cacti logfile from System Utilities\n-issue#915: Non-numeric data in ss_host_disk.php\n-issue#916: Resolve display of errors when encountering ldap issues\n-issue#918: Minor XSS and create generalized escape function\n-issue: Resolve JavaScript errors on Login page\n-issue: Resolve JavaScript errors on Permission Denied pages\n-issue: Graphs tab would appear in non-classic even if you did not have permissions\n-feature: Updated dutch translations\n\n1.1.17\n-issue#450: List View to Preview shows no results\n-issue#486: Export Device table results to CSV\n-issue#544: Allow Log Rotation to be other than Daily\n-issue#673: Downtime/Recovery time/date is set incorrectly\n-issue#819: Customized timespans for graphs\n-issue#888: Rebuilding Poller Cache when External data sources are present results in false positive warnings in the log\n-issue#891: Database.php unable to connect to MySQL when using port different than 3306\n-issue#893: Warning messages when duplicating CDEF objects\n-issue#897: Due to browser use of special key, deprecate ctrl-shift-x for clearing filter\n-issue#898: Issue with tcp and udp ping due to file description allocation changes\n-issue: Unable use ipv6 ip addresses for snmp ping in the Cacti GUI\n-issue: Update language of the Rebuild Poller Cache menu pick\n-issue: Broken design for input controls with Sunrise theme\n-issue: Timespan switching not switching to Custom in Preview Mode\n-issue: Log rotation would not occur under certain conditions.  Provide more control over log functions\n-issue: Purge log file always purged the cacti.log, not the selected log\n-issue: Unable to view graphs for errored data sources from Cacti log\n\n1.1.16\n-issue#865: Escape Data Query arguments to prevent issues with special characters\n-issue#872: Can't add device items to graphs generated with no device and no template\n-issue#875: When modifying Realm permissions, realms that are listed multiple times don't stay in sync\n-issue#877: Improving resolution to issue#847 and one additional vulnerability\n-issue#878: Ambiguous language in purge log function\n-issue#879: SQL Error when adding a report item to a report\n-issue#880: Device drop down is limited to 20 devices and lacks a scroll bar\n-issue#885: Graph generated with no device and no graph template forgets device definitions\n-issue#886: Unable to export templates other than Device templates\n-issue: Address additional corner cases around get_order_string usage\n-issue: Data Queries sharing a Data Source can result in poller output table not empty errors\n-issue: Fix Sunrise theme to properly theme multiselect widgets\n-issue: Increase height of multiselects so that more options are visible\n-issue: When a graph is locked, anchor tags are still functional\n-issue: Autocomplete does not populate none-value when the selected value is not set\n\n1.1.15\n-issue: PHP Fatal Exception on upgrade from 1.1.11 or earlier\n-feature: Added test to detect install upgrade code problems\n\n1.1.14\n-issue#849: Unable to select host in Graph Item pick\n-issue#850: Reporting not allowing Non-templated Graphs\n-issue#858: Pagination on SNMP Options wrong\n-issue#860: Network Discovery Subnet Range character limit too small\n-issue#861: The search filter does not support Cyrillic\n-issue#862: Automation - When editing Graph Rules, unable to Change Data Query\n-issue#863: Typo error in auth_login.php for LDAP authentication\n-issue#867: Cross-site scripting (XSS) vulnerability in auth_profile.php\n-issue: Link's not showing in Automation Graph and Tree rules on Sunshine theme\n-issue: Make Templates Export responsive\n-issue: Don't wrap menu glyphs and menuitems\n-issue: The function get_order_string() can fail when encountering reserved word columns\n-issue: Data Query Delete is not using callback\n-feature: Resize Graphs on Graph page to be responsive\n-feature: Make import text a hidden field as it is likely seldom used\n\n1.1.13\n-issue#605: Remove Spikes feature not fully functional\n-issue#814: Allow 'Save' feature from New Graphs\n-issue#837: Using the add_device.php CLI script, you can not 'default' the device threads to other than 1\n-issue#838: CVE-2017-10970: XSS Issue in link.php\n-issue#839: The Database column name 'rows' is a reserved word in MariaDB 10.2+\n-issue#845: External links tabs should appear at the end of the tab view\n-issue#846: Web crawl of Cacti site shows errors in the log\n-issue#847: CVE-2017-10970: XSS Issue in lib/html_form.php.\n-issue#853: Go and Clear buttons do not work in all cases on Graph Rules pages\n-issue: Up/Down arrow titles labeled incorrectly on Tree Management page\n-issue: Make the default Export Type a Device Template\n-issue: Fix SNMPagent MIB cache issues\n-issue: Realtime cache cleanup now only removes rrd and png\n-issue: When redirected from reports, you can receive a validation error\n-feature: updated Dutch language\n\n1.1.12\n-issue#822: Aggregate Graph Items are incorrectly editable\n-issue#823: Allow Filters to be hidden\n-issue#834: Add spacing on graphs pages\n-issue: Uninstalled plugins can not install\n-issue: Location of filter functions in host.php prevent full responsive filter implementation\n-feature: Implement first phase of responsive search filters\n\n1.1.11\n-issue#642: RRA not written or WARNING: Poller Output Table not Empty\n-issue#779: PHP running out of memory due to date format issues\n-issue#791: SeLinux causing problems due to recent enhancement of the Cacti log\n-issue#818: Unable to unselect all SpikeKill templates under settings\n-issue#831: Unable to add devices from automation devices that don't have a snmpSysname\n-issue: incorrect version of pace: fix progess bar\n-issue: date_format(): fix date separator character\n-issue: host.php: fix itemCount en rowCount when result = null\n-issue: clog: fix scandir for systems with limited permissions to log directory\n-issue: clog: fix listing of logfiles\n-issue: Stop New Graphs filter interface from taking too much space\n-issue: Pagination of clog is not done via ajax\n-issue: Unable to dry run spikekill's from Graphs page\n-issue: Default sort order does not highlight on Aggregate Template page\n-issue: Correct display issue with Graph Templates when editing Device\n-issue: External Data Sources show as having poller interval on Data Source page\n-issue: Allow Selecting 'External' as the Data Source Profile when creating non-templated Data Source\n-issue: Remove Field Order on Data Input output data as it's not required\n-issue: Data Templates not using Ajax callbacks to switch Data Sources\n-issue: Visual issue when creating non-templated Aggregate Graphs\n-feature: new skin: Sunrise\n-feature: Provide Non Compatible explanation when a plugin is not compatible\n-feature: Updated Dutch translations\n-feature: Allow Graph Templates with multiple flag to be created repeatedly from Graphs New interface\n-feature: Allow plugins to exclude files and directories from their remote poller synchronization process\n-feature: Add Device Description to View Poller Cache UI\n\n1.1.10\n-issue#779: Resolve random Apache segfault due to recursion\n-issue#786: Unable to create second RRA for a Data Source Profile with collection rate less than 5 minutes\n-issue#789: Unable to Clear Filter due to JavaScript name space collision\n-issue#791: cacti 1.1.9 and clog_webapi.php permission issue\n-issue#794: SQL Error when creating graphs manually\n-issue#798: Cosmetic issue when checking checkboxes in Cacti\n-issue#800: Unchecked loop in lib/html_utility.php causing race condition\n-issue#802: Issue updating device hostname with SNMP data queries\n-issue#803: Issues with utf8mb4 introduced via optimization\n-issue: If the device is down and snmp_sysUpTimeInstance is 0, time in state can be wrong\n-feature: Updated Dutch translations\n\n1.1.9\n-issue#788: Fails on PHP Fatal error if LDAP auth enabled\n\n1.1.8\n-issue#529: Issue on Graph New page with checkbox unselected\n-issue#552: Minor selectable row checkbox issue\n-issue#577: Dragging multiple items causes the tree to refresh too early\n-issue#617: Correct poller timeouts when no devices are associated with active data collector\n-issue#706: Classic external link template images missing\n-issue#726: Undefined variable in upgrade script\n-issue#728: Resolve issues with jQueryUI empty dialogs\n-issue#731: Add class to radio button labels to correct display issue\n-issue#736: Sequence numbers not visible when editing templates using modern theme\n-issue#739: Graph Titles missing on aggregate graphs\n-issue#740: Spacer manipulation broken after update to responsive forms\n-issue#741: Errors in dsstats with very large RRDfiles with more than 60 data sources\n-issue#748: Search results are not cleared on Aggregates\n-issue#754: Default Language for user and system are not set on new installation\n-issue#755: RRDtool Graph Watermark is incorrect\n-issue#756: Resolving some translation issues\n-issue#763: Template Export not functional\n-issue#765: Validation error when viewing Utility View\n-issue#771: Editing a report renders no options after creation\n-issue#780: Preview always shows thumbnails in reports interface\n-issue: Hide Aggregate system cdefs when editing graphs and graph templates\n-issue: Updating Utility View zoom was not updating table data\n-feature#723: Convert Data Source dropdown to autocomplete when editing standalone graphs\n-feature#735: Allow color selection in graphs and templates to be autocomplete\n-feature#753: Preliminary support for RRDtool 1.7.\n-feature: Add function to obtain the current execution user\n-feature: Implement Site timezones as autocomplete for performance\n-feature: For themes other than classic, make color id selection autocomplete\n-feature: CLOG timestamp is now formatted as defined in settings\n-feature: CLOG can show loginformation from rotated logfiles\n\n1.1.7\n-issue#470: Enhance Cacti's SNMP function and Data Query XML, add <output_format>hex|string|guess</output_format>\n-issue#653: Devices with empty sysNames are not added to discovered devices\n-issue#655: Data source not displaying device name\n-issue#658: Scheduled Reports (type \"tree\") not working\n-issue#662: Sending test Email should optionally bypass ping\n-issue#667: In Classic theme initial view of Tree view broken\n-issue#669: Invalid SQL Messages when upgrading to Cacti 1.0.5\n-issue#670: Validation error when you do \"Change Graph Template\" in Cacti\n-issue#672: Cacti unable to enable snmp notification receiver mibs\n-issue#680: Sort order in Time Graph View\n-issue#687: Cacti DB access not compatible with PHP 7\n-issue#696: Multiple issues with snmpagent notification UI\n-issue#699: Add custom error handler for ping functions\n-issue#704: Fix GUI issues for Graphs not belonging to a device\n-issue#707: Back button not working\n-issue#708: Issues finding lib/snmp.php in host disk functions\n-issue#712: Change Graph Template dropdown invalid\n-issue#717: Allow ajax callbacks when adding non-templated graph items\n-issue: Reports were not using Cacti's permission system for checking access\n-issue: User Admin page reported wrong permissions at Tree level missing some i18n as well\n-issue: Short data_name can cause data collection issues\n-feature: Updated Dutch language\n-feature: Updating PHPMailer to 5.2.23\n-feature: Support input-output Data Query types\n-feature: Introduce new get_cacti_version() to reduce database calls on pages\n\n1.1.6\n-issue#620: The table poller_data_template_field_mappings can get out of sync when manipulating data templates\n-issue#622: Can not connect to MySQL over a socket\n-issue#628: Cacti upgrade process is complex and error pront for developers\n-issue#635: Error when saving change to data template\n-issue#637: When displaying tree graphs, use the same layout as preview mode\n-issue#646: When a plugin is disabled during page operations, warnings can appear\n-issue#651: Unable to view cacti log (because of allowed memory size exhausted)\n-issue#657: Error in log when host is down, using icmp and using cmd.php on FreeBSD\n-issue: List for creating a Graph type shows already added Graph Templates\n-issue: Fix and undefined variable on data source page when first creating a manual data source\n-issue: Remove tabindex and other non-required manual aria controls from pages\n-issue: Table type and column type in poller_output table wrong\n-issue: FILTER_VALIDATE_MAC not defined on PHP less than 5.5\n-issue: When changing your language Cacti would not do a full page refresh\n-feature#106: Paginated CLOG and log administration\n-feature: Dutch translations\n-feature: Responsive Graphs page\n-feature: Convert forms from table based to div based for responsive design\n-feature: Better support for phones and tablets\n-feature: Simplified installation code to facilitate easier release cycle\n-feature: Updating Tablesorter to v2.28.9, adding widgets and pager\n\n1.1.5\n-issue#580: Data collection warnings when using cmd.php\n-issue#592: Incorrectly formatted HTML\n-issue#606: Replace <path_php_binary> in data input methods\n-issue#607: Allow draw_menu to specify multiple actions for the same URL\n-issue#608: Spaces adjacent to double quotes are eliminated during data input method import\n-issue#609: Honor the column setting in graph tree view mode\n-issue#610: Change Graph Template action not available\n-issue#611: Cacti Installation Wizard - Spine page incorrect on Windows\n-issue#612: Uncaught Error: Call to a member function row() on a string\n-issue#613: Network Automation, now requires a site or your are unable to save rules\n-issue#615: Data Input field length too short for longer scripts\n-issue#619: Export logging option in settings no longer used\n\n1.1.4\n-issue#524: Reporting not working when Tree branch is device\n-issue#560: Add 'Duplicate' and 'Convert to Graph Template' back to Graph Management page for Advanced mode\n-issue#573: Missing Graph Template dropdown items\n-issue#575: Very large hex strings result in scientific notation that RRDtool rejects\n-issue#579: Problems logging in using nginx web server\n-issue#581: session_start() warnings when manually sending reports\n-issue#584: Issues reporting memory recommendation on utilities page\n-issue#586: Overrunning pollers can cause system load spikes\n-issue#587: Data Collector setting under Network Discovery is not being used\n-issue#588: Devices with blank sysDescr are added to the first Device Template in error\n-issue#589: Automation discovery does not allow site association\n-issue#590: Unable to create a plugin based menu\n-issue#591: Row selection in Device Automation Templates not sane with drag-n-drop enabled\n-issue#601: Resolving some translation issues\n-issue#604: Unexpected backtrace on regular expression filters\n-issue#605: Remove Spikes non-numeric data causes warnings\n-issue: Ping email does not use a from email address\n-issue: Automation does not recognize default size or poller\n-issue: Unable to drag-n-drop on automation templates pages when enabled\n-issue: Fixed number of hosts in poller stats for first poller\n-issue: Fixed screenwidth issue in tab PHP-Info of Utilities module\n-issue: Recovery poller could get stuck in some situations\n-issue: Fix JavaScript errors when managing Aggregate Graphs\n-feature: Reorganize defaults to place more on device defaults page\n-feature: Update jQuery tableDnD to version 0.9\n-feature: More tolerant of empty PHP_SELF found with some web servers\n\n1.1.3\n-issue#515: Unable to import color CSV file\n-issue#519: In non-classic themes its not possible to remove Cacti log or reporting tabs\n-issue#520: SQL error in graph automation\n-issue#521: Cacti allows removal of Data Query Graph Template associations when they are in use\n-issue#525: LAST GPRINT type not rendered correctly due to lack of escaping\n-issue#530: Undefined function get_vdef in lib/rrd.php\n-issue#531: Issues with TextAlign and Tick graph items\n-issue#532: Unreliable scroll height causes issues in Chrome\n-issue#533: User settings not cleared after saving profile\n-issue#534: Automation issue with AS clause\n-issue#538: Unable to rename tree folder\n-issue#541: Issues with mobile graph viewing\n-issue#555: DSStats SQL insert errors due to data collection issues\n-issue#563: Division by zero in removespikes.php\n-issue: Fixed rendering issues with HRULE's on graphs\n-issue: Update jsTree to 3.3.4 version\n-feature: Improved responsiveness UI tables, filters, and menus\n\n1.1.2\n-issue#492: Error while adding non data query (cg) graphs\n-issue#494: CLI error while importing template\n-issue#499: SQL error in graph automation resulting in no graphs on tree\n-issue#500: Generic SNMP device package damaged - Unix Ping Host\n-issue#505: Log rotation does not work in some cases\n-issue#506: Undefined index: cactiStatsDeviceFailedPolls\n-issue#507: Nextwork discovery 'export' produces no results\n-issue#509: Minor bug with device ownership selection\n-feature: Add new legend type that includes Current/Average/Minimum/Maximum\n-feature: Update d3.js to latest version 4.7.4\n\n1.1.1\n-issue#457: Continued LDAP issues with initial user creation\n-issue#461: The function escapeshell arg not appropriate on Windows\n-issue#462: LDAP authorization issues: group membership check broken for 'Group Member Type' = 'Username'\n-issue#464: Change default batch spike removal limits for standard deviation and variance\n-issue#465: Less than sign inside items and labels of graph break graph\n-issue#466: Call to member function row() on a non-object in lib/snmpagent.php\n-issue#467: Reduce the number of queries in log function\n-issue#472: Schema changes to improve performance\n-issue#485: When editing a device, the ping status was not always returned\n-issue: Back button issues due to syntax problems in JavaScript\n-issue: Zoom periodically would loose it's crosshairs after zooming\n-issue: Zoom would zoom out into the future even when disabled\n-issue: Fixing lite corruption in graph_templates_item table\n-feature: Make SpikeKill options more consistent\n-feature#459: Add variable date time option to report mail subject\n-feature#460: Add external_id to host variables\n-feature#469: Change re-index method of Data Query from Device edit\n-feature: Support generalized date format approach in the GUI\n-feature: Use localStorage over a Cookie for Zoom setting storage\n-feature: Fully implement 'Remove Orphans' from Package import process\n\n1.1.0\n-issue#337: Generic SNMP OID Graph Template damanged\n-issue#338: Extremely slow new graph/DS creation\n-issue#353: Broadcast & Multicast Packet counters missing\n-issue#376: Structured RRD path permission issues\n-issue#389: Manual template based graph creation not working\n-issue#407: The RRDfile does not exist message is misleading\n-issue#410: Select character data was interpreted as hex by cacti_snmp_walk()\n-issue#422: additional issues with LDAP authentication\n-issue#424: Automation does not discover devices w/o resolvable hostnames\n-issue#427: undefined index TotalVisibleMemorySize on FreeBSD\n-issue#432: SpikeKill menu wonky on Paw Theme\n-issue#434: password_verify not compatible in php5.4-\n-issue#435: urlPath missing from paw theme links\n-issue#436: Restricted user does not see graphs in tree view\n-issue#443: Allow remote_agent.php through a NAT\n-issue#446: No local admin when using multiple LDAP configuration\n-issue#447: Creating another non data query graph from same template reuses first data source\n-issue#449: exec_poll_php does not flush pipes when using script server\n-issue#450: Graph list view - No Graphs Found\n-issue: Improve email test exception errors and change default timeout to 10 seconds\n-issue: When on links page, breadcrumbs would become corrupted\n-issue: When upgrading from any version of Cacti to 1.0.5, SQL's relative to poller_reindex might appear\n-issue: Color page performance poor\n-issue: The Device dropdown on the Graph View page was unreliable\n-issue: Aggregate and non-Device Graphs in list view had not Device or Title description\n-issue: Re-engineer back button design to accomocate ajax and native navigation\n-issue: Make Graph Template filter wider \n-issue: Resolve some visual issues in Classic theme\n-feature: Add page refresh API to make page refreshing in Ajax easier to accomplish\n-feature: Update fontawesome to version 4.7\n-feature: Use fontawesome glyphs for menu items\n-feature: Support multiple column sort in table library\n-feature: Add glyphs to main Cacti console menu\n\n1.0.6\n-issue#386: Allow special characters in graph title\n-issue#414: Install Wizard check path for spine\n-issue#415: SNMP session handling broken\n-issue#418: LDAP create user from template not working\n\n1.0.5\n-issue#296: Poller warning for Non-SNMP device\n-issue#319: Add default 'High Collection Rate' data source profile to new installs to demonstrate concept of multiple rates\n-issue#330: Import templates to non-default Data Profile\n-issue#337: Error when try create new graph - SNMP - Generic OID\n-issue#342: Infinite loop in poller_automation.php with invalid schedule\n-issue#343: Device discovery cannot handle dots in device name\n-issue#344: Unable to upgrade to latest Cacti on FreeBSD\n-issue#353: Legacy broadcast & multicast packet counters missing in interface.xml\n-issue#354: Place on tree dashes / ordering is not correct\n-issue#355: Replace table rows with count when using InnoDB tables\n-issue#357: If recovery mode runs longer than a polling interval, a second is spawned\n-issue#358: Sending test e-mail results in warning\n-issue#360: Issue importing cacti.sql with some charsets\n-issue#364: Moving graph item causes page render issue\n-issue#365: ss_host_disk.php and ss_host_cpu.php should use return\n-issue#367: Upgrade chart.js to version 2.5\n-issue#368: Issue with device automation ip vs. ip_address\n-issue#369: Interface bits/second total Bandwidth wrong CDEF\n-issue#375: Drag and Drop of Devices and Graphs allows dropping onto self\n-issue#380: Ignores a non-standard SNMP port\n-issue#382: When using php5.5+ new users unable to change their password\n-issue#384: graph_view.php backtrace errors\n-issue#385: Unable to place an aggregate grapn on a subtree\n-issue#390: Display graphs from this aggregate icon next to graph not displaying\n-issue#392: cdef.php missing sql where for system cdef's\n-issue#398: checkbox is not honored when creating tree\n-issue#399: External link configuration: Order buttons don't work\n-issue#400: SNMP Engine ID (v3) field too short\n-issue#401: Graphs -> Apply Automation Rules fails\n-issue#404: Success even when test mail fails\n-issue#406: HRULE text format special characters not escaped\n-issue#408: Suppress SNMP units suffix from cacti_snmp_get() output\n-issue: Improve is_ipaddress functions\n-issue: Drag & drop showing when disabled on page automation_templates.php\n-issue: Output messages displayed incorrectly in automation_templates.php and automation_snmp.php\n-issue: Importing template from old Cacti would not show data templates\n-issue: Handle snmp error exceptions better\n-issue: Update Apache .htaccess files to support multiple version\n-issue: When executing a full sync, if the table structured has changed, recreate the remote table\n-issue: Multiple domains not working as expected\n-feature#197: Add external_id to Cacti for linking Cacti to other monitoring systems\n-feature#332: Support copy user groups\n-feature: Log proper IP address if logging in behind a NAT\n-feature: New qquery parsing rules: VALUE/TEST, VALUE/TABLE, VALUE/HEX2IP\n\n1.0.4\n-feature: Javascript: make menu movement smooth and use localStorage\n-feature: Added cacti_snmp_get_raw() for plugin developers\n-issue#288: Function cacti_snmp_get bad handling of wierd value into snmp_value\n-issue#298: Graph generation issue with SNMP - Bits/Sec + Total Bandwith\n-issue#301: Unresolvable DNS hostname causing backtraces\n-issue#302: spikekill memory leak\n-issue#303: Error when creating tree items with \"&\" in the name\n-issue#307: Aggregate graph gives CMDPHP errors\n-issue#308: UI resize issue\n-issue#309: Show \"Save Successful\" notification permanently\n-issue#311: Graph thumbnail settings in profile setting does not work\n-issue#320: Users can not change their own password\n-issue#324: Aggregate template graph template JavaScript error\n-issue#352: Add configurable auto-logout and page-reload options\n-issue#329: Customize the favicon\n-issue#334: primary key on poller output boost table not efficient/not being used correctly\n-issue: Fixed issues with Dark theme\n-issue: Fixed issues with Paw theme\n-issue: Fix timespan calculation\n-issue: Added misplaced join condition when generating RRDtool graphs\n-issue: Fix the selection of timestan based on local_graph_id and rra_id\n-issue: Correct error in discovery not adding devices\n-issue: Action message did not always display\n-issue: fix regex to use Domains like www.t-online.de\n-issue: Properly align Order columns.\n-issue: address renaming issues with tree items.\n-issue: Add device snmp --version is ambiguous\n-issue: SNMP Availability failed to report down devices - This only was occuring for cmd.php collector.\n-issue: i18n remove embedded HTML syntax\n-issue: Wrap menu items to avoid scrolling\n\n1.0.3\n-issue#297: Upgrade 0.8.8h to 1.0.0 fails to create poller_output_boost table\n-issue: Added missing template import hash for 1.0.2\n\n1.0.2\n-issue#279: Correct Boost Status display issue\n-issue#275: Permission View issue and Device Dropdown when in Classic Theme\n-issue#270: Major Mib Cache corruption.  Rebuild your MIB Cache after upgrading\n-issue: Resolve Cacti logo on Graphs page in Classic Theme\n\n1.0.1\n-feature: SpikeKill allows filling range to last known good value\n-issue#261: Add IPv4 and IPv6 Specific Counters to interfaces.xml\n-issue#257: Poller Output Table not Empty WARNING messages in cacti.log\n-issue#256: New Graph - Add Graph Items Fails (Data Sources shows None)\n-issue#255: Errors Creating new Graphs - Undefined Index Errors\n-issue#254: Unable to Properly add Data Source\n-issue#251: Remote Data Collector stuck on upgrade page\n-issue#247: Devices missing from tree device list\n-issue#245: Drag and Drop in Tree Edit Erratic\n-issue#243: SMTP Ping Failure with not SNMP Authentication\n-issue#241: Authentication Method: None not functional\n-issue#240: SQL error when install plugin\n-issue#238: Duplicate color id's cause error during Upgrade\n-issue#231: SNMPv3 - PHP ERROR WARNING: Fatal error: Unknown user name in file\n-issue: Resolving visual issues with row counts.\n-issue: When deleting Graphs prevent the removal of Data Sources that are still in use\n-issue: Improve SNMP agent performance through SQL optimizations\n\n1.0.0\n-feature: Support for remote data collectors\n-feature: Support Internationalization (i18n) for the main Cacti site, and supported plugins\n-feature: Data Source Profiles replace RRA settings allowing a single system to have multiple polling intervals\n-feature: Redesigned Tree page including Drag & Drop functionality\n-feature: New Graph Permissions system designed to make permissions simple to manage\n-feature: Add Themes 'Classic', 'Modern', 'Dark', and 'Paw'\n-feature: Debug Data Sources by comparing them to the Data Template\n-feature: New special Data Source type to detect the poller interval\n-feature: Bulk inserts in PHP poller to address latency issues\n-feature: Optimize data collection through in memory caching giving a 50% reduction in polling times when dealing with large sites\n-feature: Support RRDtool VDEFs\n-feature: Support new Graph Items: AREA:STACK, GPRINT:AVERAGE, GPRINT:LAST, GPRINT:MAX, GPRINT:MIN, LINE:STACK, TEXTALIGN, TICK\n-feature: Support RRDtool features: Right Axis Support, Dynamic Labels, Tab Width, Legend Position, Legend Direction\n-feature; Resizeable table columns\n-feature: Deprecated Single Pane Tree View\n-feature: Role Based Access Control (RBAC)\n-feature: Support User Group Permissions\n-feature: Show number of in use Graphs, Data Sources, and Devices for a given Template\n-feature: Support bulk re-sync of graphs to assigned Graph Template\n-feature: Bulk Device Settings changes\n-feature: CDEFs, Colors, GPrint Presets consolidated to Presets menu\n-feature: Authentication cookies for 'remember me' functionality\n-feature: Automatic logout after session inactivity\n-feature: Replace Boost server in favor of RRDtool Proxy\n-feature: Graph Details include CSV output, zoom, debug, and download links\n-feature: Graph Export moved to a plugin\n-feature: User change password functionality\n-feature: Automation added to core functionality through the merge of the Discovery and AutoM8 plugins\n-feature: Change interface graphs from 32 bit to 64 bit with ease\n-feature: Plugins now have hooks in device templates and automation\n-feature: Allow users to preview template imports to determine if there will be issues from importing\n-feature: Automatic removal of orphaned graph items when importing newer versions of graph templates\n-feature: Support for MySQL 5.7\n-feature: Support for PHP 7.0\n-feature: Merge Aggregate Plugin - Aggregate graph creation\n-feature: Merge AutoM8 Plugin - Automation of graph creation\n-feature: Merge Boost Plugin - Faster polling, result caching, on-demand RRDtool file updates\n-feature: Merge CLog Plugin - View Cacti logs\n-feature: Merge Discovery Plugin - Device discovery\n-feature: Merge Domains Plugin - Support for domain (ADS/LDAP) specific user templates\n-feature: Merge DSStats Plugin - Cache Data Source values for easy retrieval\n-feature: Merge Logrotate Plugin - Rotate Cacti logs\n-feature: Merge Realtime Plugin - Realtime graph viewing\n-feature: Merge Reporting (Nectar) Plugin - Reporting\n-feature: Merge RRDclean Plugin - RRD file cleanup and management\n-feature: Merge Secpass Plugin - User password policy enforcement\n-feature: Merge Settings Plugin - Shared settings for plugins\n-feature: Merge SNMP Agent Plugin - SNMP Agent for Cacti providing system statistics\n-feature: Merge SpikeKill Plugin - Remove unwanted spikes from graphs\n-feature: Merge SSL Plugin - Force https\n-feature: Merge SuperLinks Plugin - Add external links within Cacti\n-feature: Merge UGroup Plugin - User groups with permissions\n-feature: Merge Watermark Plugin - Watermark your Cacti graphs\n-bug: Fixed issue where old graph templates (0.8.6-), could import bogus data causing issues with Data Input Methods\n-bug#0000168: Duplicate data sources should be avoided when creating new graphs\n-bug#0000851: Review an imported template\n-bug#0001155: When viewing graph tree do not show empty nodes\n-bug#0001337: Form to filter for graphs in host view mode\n-bug#0001552: Date ranges not shown on graphs in the view with Daily, Weekly, Monthly & Yearly graphs\n-bug#0001573: RRA templates/grouping\n-bug#0001577: Override session handling and store session in Database\n-bug#0001790: Allow for XML delimiter in fields of a script query\n-bug#0001820: Unable to use a Data Input Method Output Field in more than one Data Source Item\n-bug#0001827: Changing the graph template messes up the graph item fields\n-bug#0001836: Add mysql error message to log\n-bug#0001877: Cookies path is not properly set\n-bug#0001966: Expand Devices in tree view not honored\n-bug#0001970: Data query index order cache should be populated on re-index\n-bug#0001981: Cacti is not full UTF-8\n-bug#0001986: CLI allow add_graphs.php to have multiples --snmp-field and --snmp-value options\n-bug#0001996: Allow using data input field in graph title\n-bug#0002096: Enumerated SNMP values not parsed correctly\n-bug#0002112: CLI add configurable parameters for device_add.php\n-bug#0002133: Restrict User to only manage specific device(s)\n-bug#0002135: Regular expression support for filter\n-bug#0002137: Data query oid_suffix parameter does not function\n-bug#0002159: Database creation file not fully compliant with strict SQL mode\n-bug#0002162: Unable to authenticate user with password containing UTF-8\n-bug#0002196: Incorrect script server instance number in log\n-bug#0002225: Make -Cc SNMP option configurable\n-bug#0002255: Script query_unix_partitions.pl should only query local mounts\n-bug#0002336: Implement php-snmp class library\n-bug#0002340: Data query script execution should be escaped\n-bug#0002350: SNMP Data Query index_order ignored\n-bug#0002351: Ping does not work with non-English locale\n-bug#0002361: Spine does not log unknowns the same way cmd.php\n-bug#0002362: Poller cmd.php makes wrong hex-string to decimal conversion\n-bug#0002370: Cacti prints wrong date formats, does not honor a systems locale\n-bug#0002403: Typo in DELETE statement leading to poor graphing performance\n-bug#0002412: Graph Template duplication causes \\t to be converted to TAB char\n-bug#0002418: Data Source Items named 'ds' break UI ability to add more items\n-bug#0002419: SNMP enum results not parsed correctly by cmd.php poller\n-bug#0002452: CVE-2014-4000 PHP Object Injection Vulnerabilities\n-bug#0002454: OS Command Injection\n-bug#0002468: Changing graph format to anything but PNG causes no output\n-bug#0002476: Add support for SNMP v3 EngineID\n-bug#0002483: Cisco ASA using Re-index method of verify all causes recache event every time\n-bug#0002484: Incorrect SQL request in cli script repair_database.php\n-bug#0002521: Unable to create two devices via CLI with the same IP-Address\n-bug#0002522: Zero padded hex strings are parsed incorrectly\n-bug#0002535: Graph Template Changes not updating RRDtool command\n-bug#0002636: Creating Data Template with \"U\" for min and max saves field data_input_field_id as 0 for first item\n-bug#0002697: CVE-2016-2313 allows remote authenticated users who use web authentication to bypass intended access\n-bug#0002698: When the host is down the wrong data type are used for some columns in the host table\n-bug#0002723: Renaming a disabled device still attempts to connect and get SNMP host information\n-bug#0002724: Multipage graphs the menu can disappear\n-bug#0002725: Changing graph template does not mark correct interfaces disabled on data query generated list\n\n0.8.8h\n-bug:0002656: Authentication using web authentication as a user not in the cacti database allows complete access (regression)\n-bug:0002667: Cacti SQL Injection Vulnerability\n-bug:0002666: When click the [Clear] button after clicking the [Refresh] button in Preview Mode , fails to CSRFcheck\n-bug:0002673: CVE-2016-3659 - Cacti graph_view.php SQL Injection Vulnerability\n-bug:0002676: Outdated MIBs for non-unicast packets\n-bug:0002677: Index is a MySQL 5.6 reserved word\n-bug:0002681: generate_graph_def_name() generates reserved word \"cf\"\n\n0.8.8g\n-bug:0002161: Graph management \"graph()\" function conflicts with graphviz PECL extension graph()\n-bug:0002320: Unable to delete more than 500 graphs at once\n-bug:0002591: graph_view.php - unable to advance to Next Page in Tree View\n-bug:0002608: cacti 0.8.8f - Data Templates - Poller/script issue with backslash\n-bug:0002618: bug/syntax error in html_utility.php\n-bug:0002616: cdef.php -- Extra php closing tag\n-bug:0002617: PHP Warning is thrown when trying to include auth_login.php\n-bug:0002623: log warning display wrong time_interval\n-bug:0002627: Graph tree doesn't work in Internet Explorer\n-bug:0002601: graphs_new.php query not sorted as per definition xml:index_order\n-bug:0002625: Plugins don't display the next page\n-bug:0002631: RRDtool export not XML compliant - results in empty CSV exports\n-bug:0002622: graph_view.php -- Navigation and Content Areas are not visible in Tree Mode\n-bug:0002626: Unable to add two users in a row - Notice: Undefined index: id\n-bug:0002620: Unable to copy user\n-bug:0002618: bug/syntax error in html_utility.php\n-bug:0002646: SQL injection in graph.php\n-bug:0002656: Authentication using web authentication as a user not in the cacti database allows complete access\n-bug:0002647: 0.8.8g rev 7767 Can add cacti devices to graph tree \"Save Failed\"\n-bug:0002652: CVE-2015-8604: SQL injection in graphs_new.php\n-bug:0002655: CVE-2015-8377: SQL injection vulnerability in the host_new_graphs_save function in graphs_new.php\n-bug:0002629: Cacti lacks tab icons in chrome from android\n-bug:0002619: Fix incorrect placement of htmlspecialchars() in tree.php\n-bug:0002642: ping.pl does not take into account host port numbers\n-bug:0002567: RRDtool 1.5.x Support \n-bug:0002269: |query_ifSpeed| in --upper-limit for graph template does not work with empty ifSpee\n\n0.8.8f\n-bug:0002599: 0.8.8e Poller Script Parser is Broken\n-bug:0002600: cli/upgrade_database.php is missing releases\n-bug:0002603: Graph managment graphs.php save button does not work\n-bug:0002599: Poller Script Parser is Broken\n\n0.8.8e\n-bug: Fixed issue with graph zooming failing to work\n-bug: Fixed various SQL Injection vectors\n-bug#0002569: Impossible to have a URL pointing directly to a graph\n-bug#0002574: SQL Injection Vulnerabilities in graph items and graph template items\n-bug#0002577: CVE-2015-4634 - SQL injection in graphs.php\n-bug#0002579: SQL Injection Vulnerabilities in data sources\n-bug#0002580: SQL Injection in cdef.php\n-bug#0002582: SQL Injection in data_templates.php\n-bug#0002583: SQL Injection in graph_templates.php\n-bug#0002584: SQL Injection in host_templates.php\n-bug#0002586: Cannot delete data sources from the GUI\n-bug#0002592: graph_view.php - viewing host in new tab - Undefined index: nodeid\n-bug#0002594: status_fail_date and status_rec_date are set incorrectly after host is marked down\n-bug#0002597: Incorrect value in Hosts column on Host Templates page\n-bug#0002598: Incorrect row number in Devices -> (Edit) page\n\n0.8.8d\n-feature: Remove un-needed fonts and javascript files\n-bug: Fixed XSS VN: JVN#78187936 / TN:JPCERT#98968540\n-bug#0002261: PHP 5.4.0 added new error_reporting variable, causing cacti to show errors\n-bug#0002391: Odd Behaviour on ReIndex of Data Query Data\n-bug#0002393: Broken thumbnail images for graph templates\n-bug#0002402: Subtree must not have the same header as the parent header\n-bug#0002474: CLI add_device.php dows not set availability_method correctly\n-bug#0002449: The Save button does not work: Invalid html on page Console -> Cacti Settings: empty form tag\n-bug#0002428: Fail to delete all data input items when removing more than 1000 data sources\n-bug#0002439: Password with special character don't work with LDAP authentication\n-bug#0002461: invalid bn with ldap and anonymous bind\n-bug#0002465: Graph Export return empty CSV file\n-bug#0002484: Incorrect SQL request in cli script repair_database.php\n-bug#0002485: Broken pagenation on graph viewing\n-bug#0002489: SNMP - Get Mounted Partitions using Re-index method of Index Count Changed causes recache event every time\n-bug#0002490: Can not select page for multiple datasources per device\n-bug#0002494: CSV export always shows last day\n-bug#0002504: Data template search not functional\n-bug#0002542: [FG-VD-15-017] Cacti Cross-Site Scripting Vulnerability Notification\n-bug#0002543: Unable to switch pages within graphs_new.php due to invalid URL generation\n-bug#0002544: Duplicate entry in $nav_url during list view\n-bug#0002571: SQL Injection and Location header injection from cdef id CVE-2015-4342 \n-bug#0002572: SQL injection in graph templates CVE-2015-4454\n\n0.8.8c\n-bug#0002228: GPL incompatible files included in Cacti project in include/treeview\n-bug#0002383: Sanitize the step and id variables CVE-2013-5588, CVE-2013-5589\n-bug#0002385: Cannot export host templates while including dependencies\n-bug#0002386: cli/upgrade_database.php is missing the last two releases\n-bug#0002390: Poller/script issue with slash and backslash\n-bug#0002405: SQL injection in graph_xport.php\n-bug#0002431: CVE-2014-2326 Unspecified HTML Injection Vulnerability\n-bug#0002432: CVE-2014-2327 Cross Site Request Forgery Vulnerability - Special Thanks to Deutsche Telekom CERT\n-bug#0002433: CVE-2014-2328 Unspecified Remote Command Execution Vulnerability\n-bug#0002434: Suppress SNMP UNITS Suffix from cacti_snmp_get() output\n-bug#0002438: Down Host Detection issue when using SNMP Desc or SNMP getNext\n-bug#0002446: Subtract plugin processing time from Poller sleep time\n-bug#0002453: CVE-2014-4002 Cross-Site Scripting Vulnerability - Special Thanks to G. Geshev (munmap)\n-bug#0002455: Incomplete and incorrect input parsing leads to remote code execution and SQL injection attack scenarios\n-bug#0002456: CVE-2014-5025 / CVE-2014-5026 - Cross-Site Scripting Vulnerability - Special Thanks to Adan Alvarez and Paul Gevers\n-bug#0002495: Graph Filter Date Range\n-bug: Fix COMMENT handling, even in case COMMENT is empty, with or without HR and with variable substitution\n-bug: Fix issues when SNMP data holds a \"=\"; \"explode\" must be treated accordingly\n-bug: Fix filter highlighting on data sources for the data template field\n-bug: correct description of SNMP V3 parameters\n-feature: Added native jquery, jqueryui, and jstree\n-feature: Fixed issues with 'Clear' under preview not working\n-feature: Added new Tree navigation\n-feature: Added Columns and Thumbnails to Preview\n-feature: Added Columns to Tree (Preview only)\n-feature: Both Graphs and Columns default to 'Default'\n-feature: Resolved Left hand navigation taking entire page\n-feature: Added new graph zoom to tree view and preview offering a \"quick\" (default) and an \"advanced\" mode\n\n0.8.8b\n-bug: Fixed issue with custom data source information being lost when saved from edit\n-bug: Repopulate the poller cache on new installations\n-bug: Fix issue with poller not escaping the script query path correctly\n-bug: Allow snmpv3 priv proto none\n-bug: Fix issue where host activate may flush the entire poller item cache\n-security: SQL injection and shell escaping issues\n\n0.8.8a\n-bug#0002207: cannot export graph templates\n-bug#0002208: Graphs with CDEFs fail to generate\n-bug#0002209: External auth does not work behind a reverse proxy\n-bug#0002211: creating an index USING BTREE fails ony MySQL < 5.0.60\n-bug#0002213: CLI upgrade script is missing 0.8.7i as a target\n-bug#0002214: SQL error during non-PIA upgrade to 088 when giving a default for a text field in plugin_realms\n-bug#0002216: use of define_syslog_variables() gone in PHP 5.4\n-bug#0002217: url_path should default to /cacti/\n-bug#0002221: Missing plugin directory causes endless loop in plugins.php\n-bug#0002222: tail_logfile hangs when cacti.log not readable, filling apache log with fgets warnings\n\n0.8.8\n-bug#0002056: un-initialized datetime used for host status (was: Zero length string != NULL)\n-bug#0002081: In Graph Management, search display graph title breaks when using pattern symbol \"/\"\n-bug#0002132: need to include pa.sql with the 0.8.7i and future releases\n-bug#0002134: rebuild_poller_cache.php --host-id deletes table poller_item completely\n-bug#0002141: cacti.sql missing BTREE PRIMARY KEY for poller_output\n-bug#0002146: Utilities -> View Log File -> refresh does not work\n-bug#0002150: usort_data_query_index() is broken -> graph order for hosts with data query sort option fails\n-bug#0002151: When building HTML forms with sub_checkbox on_change parameter is not used\n-bug#0002152: Issue with filter on graphs_new.php\n-bug#0002153: Cant search for patterns containing a forward-slash\n-bug#0002156: CDEF strings are not escaped before passed to rrdtool command\n-bug#0002158: Minor changes to grammar of displayed messages\n-bug#0002165: Using data input field in data source name (related to 2079 in 0.8.7i)\n-bug#0002167: New poller hook poller_finishing\n-bug#0002172: structure_rra_paths.php does not handle disabled data sources\n-bug#0002174: poller_item.host_id has wrong type\n-bug#0002178: typo in include/global_form.php: Mimimum -> Minimum\n-bug#0002181: session_unregister (use in functions.php) doesn't exist anymore in PHP 5.4\n-bug#0002182: When there is no suitable (unique) index, graphs are not shown in data query ordering on host leafs\n-bug#0002189: Proper graph hooks\n-bug#0002191: Refresh issues\n-bug#0002194: changing data query XML <index_order> does not propagate to existing data sources\n-bug: Fix input validation on cli/api_device.php\n-bug: Fix issue with data source template associate command line script inserting incorrect rra information\n-bug: Fix minor display issue on data source pages\n-bug: Fix minor issue with counting items in the poller_output table\n-bug: Graph settings and settings check boxes do not allow unchecking to be saved\n-bug: Fix minor issue with plugin library caused by non-session\n-bug: Fix SQL error on data input save for non-templated graphs\n-bug: user_log index added to increase performance\n-feature: Merge Plugin Architecture into Cacti\n-feature: Added index to data_template_data to increase performance\n\n0.8.7i\n-bug#0001963: Bandwidth summation \"total in\" and \"total out\" are always 0\n-bug#0002040: ICMP ping errors for Windows 7 with PHP 5.3\n-bug#0002062: Multiple security vulnerabilities\n-bug#0002063: Multiple value poller output incorrectly interpreted as hexadecimal value\n-bug#0002064: Removing \"~\" (tilde) by sanitize_uri() conflicts with Apache UserDir translation\n-bug#0002066: Graph without host id \"Notice: Undefined variable: host_id\"\n-bug#0002067: Custom time range filter not working\n-bug#0002068: Missing header include in analyze_database.php\n-bug#0002071: MySQL table poller_item is dropped always when \"Data Input Method\" is changed or added.\n-bug#0002079: Using input field of a script in graph title does not work\n-bug#0002080: Database password containing \"@\" does not connect\n-bug#0002083: Adding a new users generates errors in apache logs\n-bug#0002084: Incorrect normalization of hrStorageTable values over 2^31\n-bug#0002086: Incorrect usage of mysql custom tcp port\n-bug#0002087: PHP recache problems due to missing slashes in reindex table\n-bug#0002093: Unit exponent value of 0 not imported with graph template\n-bug#0002094: CDEF: \"another cdef\" references not included in template export\n-bug#0002106: Command line add device does not accept \"None\" for host template\n-bug: Update host template cli script help to fix incorrect options\n-bug: Refresh of Cacti log viewer not working\n-bug: Problems saving User Graph Permissions in IE9\n-bug: Bandwidth summation fails if NAN values are present\n-bug: Special Type Code \"host_id\" available in Data Queries by Not Data Input Methods\n-bug: Do not generate error messages when creating non host based graphs\n-bug: Wrong index used for Data Queries using VALUE/REGEXP\n-bug: Fix issue with title variable replacement failing when no host is associated with graph\n-bug: Cacti generating MySQL 1100 Errors when modifying the tree\n-bug: Resolved \"Fatal error: Cannot use string offset as an array\" in lib/data_query.php\n-feature: Properly support ifHighSpeed replacement variable\n-feature: Increase granularity of availability options to correct spine bug\n-feature: Replace \"event count\" with last changed date for host availability\n\n0.8.7h\n-bug#0001403: Reapply Suggested Names does not work correctly for graphs and data sources not associated with Data Queries\n-bug#0001568: Remove PHP 5.3 deprecated functions\n-bug#0001584: Concurrent changes to graph tree ordering can corrupt sort values\n-bug#0001626: Symbol ($) does not appear in labels/gprint strings to rrdtool during graph generation\n-bug#0001632: Script server treats quoted arguments with spaces incorrectly as multiple separate arguments\n-bug#0001646: MySQL SSL connection support\n-bug#0001660: Modifying data template values does not propagate as expected\n-bug#0001678: Adding graphs to a device fails to add entries to poller_item if using the script server\n-bug#0001768: Perform consistency check on ds maximum vs. ds minimum\n-bug#0001783: Graph Export export date is incorrect\n-bug#0001812: Data template copying ignores some item templating\n-bug#0001814: Command line device add script fails when SNMP default is disabled\n-bug#0001815: One minute polling not working correctly\n-bug#0001816: Cannot export graph data to CSV with IE 8\n-bug#0001819: MySQL \"TYPE=\" command deprecated since MySQL 4.1 removed in MySQL 5.4.4\n-bug#0001826: Zoomed graph views should auto refresh\n-bug#0001828: Reapply Suggested Name prompt as spelling problems\n-bug#0001835: Graph edit page has more than one html form tag\n-bug#0001847: Graph export API function has required argument not defined\n-bug#0001851: Graph creation selector does not work with data query that has no associated graph templates\n-bug#0001855: Improper formatting of data queries can result in SQL errors\n-bug#0001862: Ping script does not process output of update ping utility\n-bug#0001867: RRDtool Cacti fetch function does not work for some locales\n-bug#0001876: PHP function strip_quotes causes HEX values to be truncated\n-bug#0001880: Form validation error message does not highlight text area control\n-bug#0001882: Cacti snmp_walk function fails if max_oids is an empty value\n-bug#0001890: Default tree view mode set to single pane mode not working\n-bug#0001893: Data input method description text does not make sense\n-bug#0001900: Equal sign not correctly parsed in snmp data results\n-bug#0001903: Undefined variable: mode in lib/ldap.php on line 375\n-bug#0001918: Script server does not accept more than one blank space before the function name\n-bug#0001926: Importing templates \"using defaults for this installation\" associates all rra's defined\n-bug#0001928: graph_image.php does not check local_graph_id\n-bug#0001929: Error when exporting templates are not properly reported\n-bug#0001930: No error reporting for wrong RRA\n-bug#0001934: Poller does not process SIGTERM signal correctly\n-bug#0001936: Removing multiple data sources is inefficient\n-bug#0001937: Technical support page uses check table which waits for table lock\n-bug#0001939: Do not query for number or items per host if concurrent polling processes is set to one\n-bug#0001954: Usage of PHP_SELF without basename in html.php (at least partly fixed)\n-bug#0001956: Attempts to update existing tree item fail\n-bug#0001967: Reflected XSS on Cacti 0.8.7g\n-bug#0001989: IE9 breaks Cacti when objects are hidden using 'display:none;' style tag\n-bug#0001993: Undefined index in lib/html.php\n-bug#0001995: REQUEST_URI not properly escaped in graph_view.php for preview mode\n-bug#0002005: Saving Script Server or Script Data Input Method Results in SQL Error\n-bug#0002060: NAN values in hdd utilisation graphs (Poller Output Table not Empty)\n-bug: Fix SQL injection issues in login page\n-bug: RRDtool fetch in Cacti fails to function properly on rrdtool files with NaN values in the output\n-bug: Accept \"Connection refused\" on TCP ping tests\n-bug: Add missing row selection javascript to graph preview\n-bug: Script server throws \"undefined variable\" error when in debug mode\n-bug: Removing graphs does not take advantage of bulk deletes\n-bug: Fixed issue with multiple \"U\" results for a data input method with multiple output parameters\n-bug: SNMP v3 use AuthNoPriv when privacy passphrase is empty\n-bug: Fixed sql errors when using template and search filter on graph management\n-bug: Delete Data Source multi fails to perform bulk deletes on Data Source items\n-bug: Allow Timespan Selector to work with $_REQUEST as well as $_POST\n-bug: While in the mrtg view of Cacti Graphs, or in viewing graph properties zoom fails\n-bug: The filepath api call should trim the filename before checking for the files existance\n-bug: Fix issues with IE9 while editing templates\n-bug: Form action in graph_items.php incorrect\n-bug: Initial drawing of tree causing Next/Previous with malformed URI\n-feature#0001519: Spine enhancement for parallel collection of data at device level\n-feature#0001667: Get values of |host_*| variables in graph elements from data source\n-feature#0001922: Reindex method \"Index Count Changed\" requires that OID_NUM_INDEXES is given for SNMP Data Queries\n-feature#0001923: Implement counting for script (server) data queries just like OID_NUM_INDEXES\n-feature#0001924: Allow for reindex method \"Index Count Changed\" to apply to script (server) queries as well\n-feature#0001952: Ability to use input field of a script in graph title\n-feature: Make reindexing and repopulating the poller cache a lossless process\n-feature: Change default font sizes\n-feature: Add analyze database and push out host cli scripts\n\n0.8.7g\n-bug: RRDtool 1.4.x not recognized during installation\n-bug: Implement windows-aware shell escaping\n-bug: Fixed multiple cross site scripting vulnerabilities reported by Tomas Hoger of the Red Hat Security Response Team\n-bug#0001292: Over 8TByte Partition in Windows cant get correct data from snmp\n-bug#0001486: Unable to login after redirection to access denied page\n-bug#0001516: \"Show the page that user pointed their browser\" does not seem to work\n-bug#0001561: Over zelous HTML excaping on filter strings\n-bug#0001575: LDAP-Authentifications does not work due to ldap_host being set incorrect\n-bug#0001587: Feature from bug#0001271 breaks on large values\n-bug#0001607: Web Basic authentication does not work with fastcgi\n-bug#0001620: Max OID's max value reported incorrectly in Web UI\n-bug#0001747: oid_suffix do not work correctly for input direction on data queries\n-bug#0001756: Alternate font styles do not work correctly\n-bug#0001757: LDAP realm authentication outputs warning for undefined index\n-bug#0001763: Unable to add graph permissions on a user\n-bug#0001765: Tech support does not work correctly with RRDtool 1.4.x\n-bug#0001766: Page refresh setting not being honored\n-bug#0001771: \"index count changed\" not implemented for query_unix_partitions.pl, query_host_partitions.pl, query_cpu_partitions.pl, ss_host_cpu.php and ss_host_disk.php\n-bug#0001773: Character encoding problem after upgrade to 0.8.7f\n-bug#0001775: Tech support page does account for no memory limit set for PHP\n-bug#0001776: Simultaneous databases connections are not supported\n\n0.8.7f\n-security: SQL injection and shell escaping issues reported by Bonsai Information Security (http://www.bonsai-sec.com)\n-security: Cross-site scripting issues reported by VUPEN Security (http://www.vupen.com)\n-security: MOPS-2010-023: Cacti Graph Viewer SQL Injection Vulnerability (http://php-security.org)\n-bug#0001125: XML parse error on template import with degree symbol\n-bug#0001311: Access denied for graph-only users when accessing index.php directly\n-bug#0001366: Exported data templates do not import special characters properly\n-bug#0001416: Graph Export fails with EXPORT FATAL ERROR: Export path /some/path/root/export is within a system path /root. Can not continue.\n-bug#0001452: Missing \"<\" and \">\" in \"Collection Methods=>Data Input Methods=>\"Input String\" after importing template\n-bug#0001461: Data query export/import fails\n-bug#0001492: RRDtool 1.3 series fonts (fontconfig) support\n-bug#0001506: Reindexing fails due to global include issue in lib/snmp.php\n-bug#0001522: Special characters break parsing of template data\n-bug#0001524: Export graphs and Classical Presentation does not honor per graph export rules\n-bug#0001528: ICMP Ping availabilty broken in UI for Windows Servers using IIS\n-bug#0001535: No display of parent ID in tree nodes for CLI tree add script\n-bug#0001543: All graphs are exported dispite graph export rules\n-bug#0001549: Function array_to_sql_or creates poor sql where clauses\n-bug#0001557: Quotes in Text Format graph template field break graph rendering\n-bug#0001587: 64bit HEX Strings do not convert to Decimal on 32bit Systems\n-bug#0001604: HEX Counter values enclosed in quotes not recognized as HEX\n-bug#0001609: Script server timeout too aggressive with 10 second poller interval\n-bug#0001628: Inconsistent message for Change SNMP Options related to available buttons\n-bug#0001695: Suppress deprecated warnings in Cacti code\n-bug#0001725: PHP Fatal Error while trying to add a tree node via cli\n-bug: When creating new graphs without a data source, print error to user instead of throwing php error\n-bug: Browser query string does not contain arguments\n-bug: Function inject_form_variables does not operate if more than 1 variable needs replacing\n-bug: Script imposed memory limits cause issues with some scripts\n-bug: Turn off process leveling if there are not enough poller items to substantiate it\n-bug: Add device should allow no-snmp type devices\n-bug: Firefox Autocomplete causes issues with password validation\n-bug: Access Denied messages do not allow re-direction to login page\n-bug: When clearing filter on new-graphs do not clear host or template\n-bug: When clearing filter, reset page to 1 for all queries\n-bug: Graph List selectors do not persist between pages\n-bug: allow empty [upper|lower]_limit even without autoscaling\n-bug: Availability method Ping or SNMP generates meaningless warnings\n-feature: Add logging to SQL Save error handling\n-feature: Add utility to convert database to InnoDB\n-feature: Return nav as the title for the page\n-feature: Detect and correct for RRDtool segfaults\n-feature: Add rra_id for hosts and graphs to be used during tree export\n-feature: Make the Graphs pages render like the rest of Cacti\n-feature: Convert base Cacti UI to use buttons and not images\n-feature: Make poller sane so that it can be used by other cacti processes\n-feature: Add snmp timeout warnings for lib/snmp.php\n\n0.8.7e\n-bug#0001044: Creating a DS, Output field can't be selected for DT with a DIM when \"Use Per-Data Source Value\" is on\n-bug#0001341: SNMP query: add oid_suffix for weird SNMP queries\n-bug#0001345: Overwriting $snmp_index in query_snmp_host() breaks SNMP Data query if using get method\n-bug#0001346: Strip out noisy 'No Such Instance currently exists at this OID'\n-bug#0001404: timeout in \"function ping_icmp\" (lib/ping.php)\n-bug#0001405: Spaces in DS when .rrd file is created, so it fails\n-bug#0001407: Place graph thumbnail into div to lower page length changes on load graphs\n-bug#0001410: Thumbnail Columns is not honored for host display with snmp index group style\n-bug#0001411: Graph searching issue\n-bug#0001413: strip_quotes fails\n-bug#0001426: multiple form opening due to bug in draw_edit_form()\n-bug#0001436: CSV Export Start Date and End Date are always 1970-01-01 01:00:00\n-bug#0001443: format_snmp_string can return a number with a leading space\n-bug#0001446: Wrong dates override in CSV export\n-bug#0001456: oid_uptime is not parsed correctly\n-bug#0001460: Skiping input parameters in data_query_field_list() may lead to SQL errors\n-bug#0001464: Typo in install/index.php\n-bug#0001467: Customisable oid index parse regexp for weird MIBs\n-bug#0001468: Tree is not expanded correctly\n-bug#0001469: Tree is not being expanded if user followed link outside of cacti\n-bug#0001476: Mark stacked columns in rrdtool_function_xport() output\n-bug#0001477: Spelling error in a variable in html_tree.php\n-bug#0001478: Combo boxes on Graph Management page produce URLs with leading spaces\n-bug: Top Graph Header Breaks When Plugins Used\n-bug: SNMP v3 Password issue caused by Firefox's Password AutoFill\n-bug: Strip Quotes does not properly handle the value 'U'\n-bug: Changes to the graph tree would not show up immediately for current user\n\n0.8.7d\n-bug#0001336: Allow to specify on_change handler for checkbox_group\n-bug#0001338: When Using Web Basic Authentication HTML Bookmarks Do Not Work\n-bug#0001388: Spine uses illegal flag for ping on Mac OS X\n-bug#0001351: Deleting 1000 graphs along with their Data Sources crashes the Server\n-bug#0001361: SNMP query: 'No more variables left in this MIB View' instead of value of input field\n-bug#0001374: ss_host_disk.php etc. error corrected when using SNMP V3 (index off by 1)\n-bug#0001376: graph_items.php variable $id defined in wrong place\n-bug#0001377: Several bugs in new cli script \"structured_rra_paths\"\n-bug#0001378: ping.pl script fails when using tcp:hostname\n-bug#0001382: cdef.php error due to wrong function name\n-bug#0001383: syntax error in lib/rrd.php with PHP 4.4.4\n-bug#0001384: utilities.php does not handle view_snmp_cache when host_id = -1 (Any)\n-bug#0001385: LDAP Error: Group DN could not be found\n-bug#0001391: parsing snmp string with \"=\" ?? --> WARNING: Result from SNMP not valid\n-bug#0001392: Problem on CDEF function ALL|SIMILAR_DATA_SOURCES_(NO)?DUPS\n-bug#0001394: Error of variable in lib/html_tree.php\n-bug#0001398: Cross site scripting checking is overly protective on search filters\n-bug#0001400: LDAP authentication results in PHP warning message\n-bug: Resolved issue with reapply suggested names not working for data sources under certain conditions\n-bug: Correct missing db_conn argument issue\n-bug: Deleting large number of hosts results in SQL errors due to MySQL buffer overrun\n-feature: SNMP cli version information added to tech support page\n\n0.8.7c\n-bug#0000157: Dual pane tree does not have the option of not rendering all trees in one page\n-bug#0000486: RRA template edit allows invalid XFF values\n-bug#0000626: Setting \"Default Graph Tree\" does not work with dual pane view\n-bug#0000828: Truncated IOS description in |query_ifAlias|\n-bug#0000909: ALL_DATA_SOURCES_NODUPS breaks graphing when using \"Consolidation Function\" MAX\n-bug#0000943: scripts/ping.pl has incorrect response when \"icmp hop redirect\" occurs\n-bug#0000948: Exporting graphs to a local path does not work correctly in some cases\n-bug#0000986: Graphs that are done by graph type are not exported when using the tree view\n-bug#0001022: strip_quotes incorrectly parses script output\n-bug#0001090: LDAP authentication fails when using quote character in password\n-bug#0001135: Graph export feature not exporting as per user level selected\n-bug#0001136: Regex ambiguous for mbstring\n-bug#0001138: Lack of error checking causes graphs to not update when rrdtool crashes\n-bug#0001141: Script server appears broken for \"index\" and \"query\" requests (Documentation Fix)\n-bug#0001145: Save Failed error when changing Graph Details\n-bug#0001153: Undefined variable: local_graph_id in graphs.php on line 201\n-bug#0001166: Installer does not properly handle disabled guest_user conversion\n-bug#0001174: Unidentified index warning\n-bug#0001175: Hide hosts in Graph Permissions that you already have access to\n-bug#0001176: Problem validating IPv6 addresses\n-bug#0001188: Graph export issues in tree mode\n-bug#0001191: Faulty IP address validation by ping.php script\n-bug#0001180: Graph Export to CSV failed by using IE 6 SP2\n-bug#0001194: RRDtool URL is incorrect on the about page\n-bug#0001204: Since upgrade to 0.87b the hosts with ip address with 255 are down and have no datas\n-bug#0001206: Graphs are not zoom-able with PHP warnings turned on\n-bug#0001211: Allow use of \"REMOTE_USER\" if \"PHP_AUTH_USER\" is not set for authentication\n-bug#0001213: Template Copy does not hash copied template_items\n-bug#0001215: Impossible to define a none availability with the client cli/add_device.php\n-bug#0001216: CSV Export for zoomed graph, results in Validation error\n-bug#0001217: Default Graph Tree is not reflected in Left Pane of the graph page\n-bug#0001223: Missing Hard return on last GPRINT causes bad formatting\n-bug#0001228: LDAP server port not honored\n-bug#0001230: Poller stops updating rrd files\n-bug#0001236: Set 'stats_recache' to zero when no re-index is present\n-bug#0001238: Guest user has access to change password\n-bug#0001239: Using the TOTAL_ALL_DATA_SOURCES in a graph where all item are using the MAX CF yields an invalid(empty) CDEF\n-bug#0001240: SNMP string cleanup removes too many '=' signs\n-bug#0001244: Missing closing </form> on host.php\n-bug#0001247: Snmp ping won't work for snmp v3\n-bug#0001256: Spine-poller.c : Bug in size string sysUptime\n-bug#0001258: \"Remove Verification\" is an ambiguous definition, leads to data loss\n-bug#0001259: LDAP Authentication using Solaris 10 standard ldap client fails\n-bug#0001262: Do not allow deletion of Graph Export User\n-bug#0001264: CDEFs can't recognize |query_*|\n-bug#0001268: resource/snmp_queries/net-snmp_disk.xml has incorrect name for \"Percent Available\"\n-bug#0001271: Hex string to decimal conversion for proper RRDtool storage\n-bug#0001273: Escape windows paths to accommodate spaces\n-bug#0001281: ICMP Ping fails if an octet == 255\n-bug#0001283: graph_image.php causes PHP Notice errors on view\n-bug#0001286: poller_item cache is not updated when \"Data Input Method\" is changed\n-bug#0001288: A host with ICMP ping selected as method does not properly perform ping\n-bug#0001291: Reapply Suggested Names fails on Script Queries\n-bug#0001293: When Creating Data Query Graphs, Performing Search will Cause List to Disappear\n-bug#0001294: Stack overflow if database is not correctly initialized\n-bug#0001295: Division by zero when rrd_step < poller_interval\n-bug#0001296: add_graphs.php does not add the graph template to the host\n-bug#0001299: When creating graphs the entire poller cache is recreated for a host\n-bug#0001314: Use Data Query variables as HRULE input for graph templates\n-bug#0001318: Graph Export with 1 minute poller re-exports graphs 5 times\n-bug#0001320: Invalid PHP_SELF Path\n-bug#0001326: If a user's password contains a single quote the login fails\n-bug#0001342: VRULE printed as HRULE on graph_templates.php graph template item list\n-bug#0001380: Expand description of ping retries\n-bug: Remove include/html files to mitigate XSS issues\n-bug: IE generates errors on both the host and graph settings pages\n-bug: Host save failed in FireFox 3 for non-SNMP V3 hosts, complaining about \"password mismatch\"\n-bug: Initialization of snmp_auth when using SNMP=NONE\n-bug: Speed up add_graphs.php in most cases (still slow only if --input-fields is used)\n-bug: If the poller_output table is not empty, do not flood the log\n-bug: Remove warnings appear in the httpd log relative to reset attempts on settings array\n-bug: Add API Automation tool quietMode to additional functions\n-bug: When Cacti is launched from within an iframe, cookies are dropped from IE6\n-bug: Database upgrade and cacti.sql differ\n-bug: drop color setting background on FF does not work\n-bug: cli/add_tree.php requires as least a host-id for --list-graphs\n-bug: add_tree.php did not allow nodes with propagating sort options\n-bug: When adding a tree node via the api numeric and natural were reversed\n-bug: When saving a data query based data templates, their data sources would become corrupt\n-bug: If your system contains INNODB tables, the Technical Support page would hang\n-bug: The default user tree link icon would not be properly highlighted when opening graphs\n-bug: Severe performance problems when adding data query based graphs.\n-bug: Default refresh on Cacti Log was too quick\n-bug: Some users do not like the idea of automatic page refreshes\n-bug: Allow more rows to be visible in Cacti pages\n-bug: Ping and SNMP should test both conditions\n-bug: When step is less than poller interval, item will stop polling for long period of time\n-bug: When using Web Basic authentication, user is directed to default page and not REQUEST URI\n-feature#0000284: Custom <path_rra> for each device\n-feature#0000431: Add php-xml to requirements, verify required PHP extensions\n-feature#0000852: Have \"Previous\" and \"Next\" disappear when not in use (only for graph display)\n-feature#0001082: Mirror Graph Rename based on template function to work with Data Sources\n-feature#0001140: CLI-Script to associate a graph template to a host\n-feature#0001162: WEB UI now accepts max_oids on SNMP bulkwalks\n-feature#0001177: CLI Reindexing - poller_reindex_hosts.php: allow filter on \"host description\"\n-feature#0001189: Introducing |data_source_title| variable\n-feature#0001195: Add graph title to graphs page\n-feature#0001201: Reapply Suggested Names for Data Sources and cli/poller_data_sources_reapply_names.php\n-feature#0001205: Add filtering and pagination to cdef management; add \"Duplicate CDEF\"\n-feature#0001220: Disable snmpbulkwalk if max OIDS is less than 2\n-feature#0001233: Move $export_types variable definition from templates_export.php to include/global_form.php\n-feature#0001233: Move $export_types variable definition from templates_export.php to include/global_form.php\n-feature#0001235: CLI script needs to activate a query: add_data_query.php\n-feature#0001250: Dispatching job in poller can lead to unbalanced threads\n-feature#0001249: New pseudo CDEF variables for \"Count All|Similar Data Sources (NO)?DUPS\"\n-feature#0001289: Add \"Graph Properties\" wrench to tree+preview mode\n-feature#0001323: List all graph template associated with a host template\n-feature#0001306: Add Blank Line as possible graph item\n-feature: Paginate Treeview Dual Pane\n-feature: Allow user to specify maximum graphs per page from Treeview Dual Pane\n-feature: Allow Treeview Dual Pane to be filtered for graph titles\n-feature: Allow the user to add or remove graph text from page for searching with the browser\n-feature: Add links to Graph Management and Data Sources to Device Edit Screen\n-feature: Add links to Graph Template and Host Edit to Graph Edit Screen\n-feature: Add links to Data Template and Host Edit to Data Source Edit Screen\n-feature: Support using the cacti database api with more than one connection\n-feature: Add some more debug lines to Data Query debugging (Verbose Query)\n-feature: Fix compatibility issues for RRDtool 1.3\n-feature: Make the tabs section work a little better with existing plugins\n-feature: Add additional options to speed data query graph automation process\n-feature: Add additional indexes to speed data query graph creation\n-feature: Allow the cli reindexing of hosts to be limited to a single query\n-feature: New cli command host_update_template to allow re-templating of hosts using an updated template\n-feature: When reindexing hosts, allow a queryid to be specified\n-feature: Add command line Database upgrade script\n-feature: Add api call to associate graphs with their data sources\n-feature: Move the notes field to bottom of page\n-feature: New availability option \"Ping or SNMP\"\n-feature: Allow for specification of a default reindex method\n-feature: Show more colors on a single color's page\n-feature: Exit is either a database or table does not exist\n-feature: Add developer debug level to reduce SQL messages in DEBUG\n-feature: Add support for group membership for LDAP authenication\n\n0.8.7b\n-bug#0000855: Unnecessary (and faulty) DEF generation for CF:AVERAGE\n-bug#0001083: Small visual fix for Cacti in \"View Cacti Log File\"\n-bug#0001089: Graph xport modification to increase default rows output\n-bug#0001091: Poller incorrectly identifies unique hosts\n-bug#0001093: CLI Scripts bring MySQL down on large installations\n-bug#0001094: Filtering broken on Data Sources page\n-bug#0001103: Fix looping poller recache events\n-bug#0001107: ss_fping.php 100% \"Pkt Loss\" does not work properly\n-bug#0001114: Graphs with no template and/or no host cause filtering errors on Graph Management page\n-bug#0001115: View Poller Cache does not show Data Sources that have no host\n-bug#0001118: Graph Generation fails if e.g. ifDescr contains some blanks\n-bug#0001132: TCP/UDP ping port ignored\n-bug#0001133: Downed Device Detection: None leads to database errors\n-bug#0001134: update_host_status handles ping_availability incorrectly\n-bug#0001143: \"U\" not allowed as min/max RRD value\n-bug#0001158: Deleted user causes error on user log viewer\n-bug#0001161: Re-assign duplicate radio button IDs\n-bug#0001164: Add HTML title attributes for certain pages\n-bug#0001168: ALL_DATA_SOURCES_NODUPS includes DUPs? SIMILAR_DATA_SOURCES_DUPS is available again\n-bug: Cacti does not guarentee RRA consolidation functions exist in RRA's\n-bug: Alert on changing logarithmic scaling removed\n-bug: add_hosts.php did not accept privacy protocol\n-security: Fix several security vulnerabilities\n-feature: show basic RRDtool graph options on Graph Template edit\n-feature: Add additional logging to Graph Xport\n-feature: Add rows dropdown to devices, graphs and data sources\n-feature: Add device_id and event count to devices\n-feature: Add ids to devices, graphs and data sources pages\n-feature: Add database repair utility\n-feature: Default Script Server/Script Queries now accept host specific ping_retries, max_oids\n-feature: Support for new variables |host_ping_retries| and |host_max_oids|\n\n0.8.7a\n-bug#0000895: \"Use Per-Data Source Value (Ignore this Value)\" runs only when when checking \"Allow Empty Input\"\n-bug#0001029: Add --autoscale-min (rrdtool 1.2.x only) and --autoscale-max (using upper AND lower limit)\n-bug#0001035: Allow for --logarithmic scaling without autoscaling\n-bug#0001038: Data sources in RRAs have random order, messing up predefined CDEFs\n-bug#0001043: Graph Templates drop down populates with duplicates\n-bug#0001046: Upgrade from 0.8.6j to 0.8.7 defaults to Authentication Method NONE\n-bug#0001052: Graph template - GRINT creates CF function DEF\n-bug#0001055: Invalid date format - \"half hour\" not the GNU Date format\n-bug#0001057: SQL error when using 'Auth Method' None when no 'guest' user exists\n-bug#0001058: Graph Filter dropdowns do not respect user graph permissions\n-bug#0001059: Potential SQL injection vulnerability\n-bug#0001060: RRDtool 1.2.15 complain for garbage characters when rrdtool_function_xport is used\n-bug#0001061: cmd.php: potential call to invalid \"availability_method\" key on wrong hash\n-bug#0001064: Log file viewer inefficient filtering uses excess memory\n-bug#0001066: doc change for using COUNTERs as integers only\n-bug#0001067: Fixed extra spaces in GPRINT. Better Alignment for Autopadding\n-bug#0001068: doc change for patching cacti when running SELinux\n-bug#0001070: Cron interval detection causes multiple pollers to run\n-bug#0001073: Max OIDS is not saved in device view\n-bug#0001078: Undefined variable: rra in graph.php on line 241\n-bug#0001079: Dates are not stored in host table using correct format\n-bug#0001080: Graph Export Generates SQL Errors\n-bug#0001081: Usernames with spaces and dashes are not able to save\n-feature#0001035: Allow for --units=si on logarithmic scaled graphs (rrdtool-1.2.x only).\n-feature#0001069: add opacity/alpha channel to graph items (rrdtool-1.2.x only).\n-feature#0001065: Move to Top for List and Tree View. Omit boring scrolling\n-feature: add availability pings to host interface\n\n0.8.7\n-bug#0000480: Fix error after altering graphs displayed per page\n-bug#0000740: Add support for setting the PHP session name of Cacti\n-bug#0000829: Add support for an specifying an uptime OID for SNMP queries\n-bug#0000830: Add filtering graphs by Graph Template\n-bug#0000833: Add favicon.ico support\n-bug#0000850: Add Select All for graph list view\n-bug#0000854: Move \"Downed Host Detection\" into the device edit screen\n-bug#0000873: Fix issues with the poller hanging in certain situations\n-bug#0000876: Add ability to search for host with a not UP status\n-bug#0000898: Selecting a CUSTOM timespan and then CLEARing yields \"LAST HALF HOUR\" preset\n-bug#0000899: Add local checking to the Paths tab on the Settings page\n-bug#0000902: Fix issues with cmd.php and PHP 4.4.1 under windows\n-bug#0000903: snmpgetnext function does not exist in PHP less than 5.0\n-bug#0000904: Data Source creation fails without php-snmp\n-bug#0000906: Every tenth host does not show on tree during console edit\n-bug#0000907: Sorting of data sources when interface numbers are used without leading zeros are incorrectly sorted\n-bug#0000908: Graphs created by SNMP data queries are losing their specific names if the template is modified\n-bug#0000910: Cacti complains when trying to set the data source \"maximum value\" to any number with a decimal point\n-bug#0000912: Nth Percentile thumbnail graphs fail with RRDtool 1.2.15, 1.2.18\n-bug#0000913: Allow direct linking to specific graph pages\n-bug#0000919: Fix problem with ping_tcp function\n-bug#0000920: Improved handling of rrdtool --font parameter\n-bug#0000921: Improvement to ping.pl script\n-bug#0000925: Support for host_* variables in the legend\n-bug#0000926: Stop removing useful characters when searching\n-bug#0000927: Classic export does not recognize thumbnail columns properly\n-bug#0000931: New rrdtool fails on empty comment\n-bug#0000934: Column 'status_last_error' in table 'host' too short.\n-bug#0000937: System output in hosts.php poor for Alcatel\n-bug#0000946: Timetick of zero returns down for device\n-bug#0000947: Trailing blank on OID in form causes problems\n-bug#0000953: SNMP Passphrase is displayed in cleartext\n-bug#0000954: Y-grid lables are not informative when using --alt-autoscale\n-bug#0000955: Fixed possible denial of service attack by modifying graph image URL\n-bug#0000956: Additional editing help with tree management\n-bug#0000957: Script server output's beginning/trailing data during \"Include\" causing a synchronization issue\n-bug#0000958: Slope Mode is now selectable\n-bug#0000959: Alarming added when poller output table is not empty\n-bug#0000963: TCP/UDP capitalization\n-bug#0000965: When setting filters under utilities, pressing enter takes you back to the main page\n-bug#0000966: Log file viewing utility has no ability to filter\n-bug#0000969: In some versions of PHP, the graph tree will not view properly\n-bug#0000970: Incorrect debug messages in lib/ping.php for failed UDP ping\n-bug#0000974: No graphs on Fedora core6 using sunone/iplanet 6.1 SP5\n-bug#0000975: Add Nth Percentile aggregate_current - Summing Multiple Data Sources with like names for Nth Percentile\n-bug#0000982: Remove invalid references to the \"output_string\" column in the \"data_input\" table\n-bug#0000983: Bad SQL: snmp_query_graph_rrd.snmp_query_graph_id=\n-bug#0000984: Poller does not correctly flush poller_output table after a memory error\n-bug#0000989: hyphen - host description used with Data Source Path\n-bug#0001001: \"Purge User Log\" keeps invalid entries\n-bug#0001002: Cacti reports incomplete interface status\n-bug#0001007: SNMPv3 password field allows command injection\n-bug: ss_sql.php causes the script server to crash\n-bug: Timeshifter added to base code\n-bug: Allow query_ and host_ substitution in COMMENT and CDEF's.\n-bug: Command line interface scripts to add devices, graphs, tree's and permissions.\n-bug: Correct index error when creating graphs when you have no hosts on your system.\n-bug: More recent versions of net-snmp broke SNMP walk functions.\n-bug: Adjust for problematic responses from some SNMP agents (IBM AIX).\n-bug: Improve logging in cmd.php and poller.php when parameters are not specified correctly.\n-bug: Reduce the total number of SQL queries called\n-bug: Replace inefficient strip function in process_poller_output\n-bug: Some php_snmp implementations return strings as \"Hex-STRING:\".  In these cases properly resolve the string\n-bug: Correctly assign right and left click actions for Opera\n-bug: Fix SQL error when viewing an invalid Data Source via the Log Viewer\n-bug: Fix command line user copy utility\n-feature: Paginate the Graph Creation Page\n-feature: Add SNMPv3 Support to Cacti\n-feature: Add a Notes field to the Device that can contain arbitrary information\n-feature: Add Availability Methods to Cacti including per Host Ping Methods and Timeouts\n-feature: Add Max OID's to te Host Level\n-feature: Allow CSV Export from the various Graphs page\n-feature: Add rra_path as a global.php config variable\n-feature: Add drop down actions to data queries\n-feature: Add drop down actions to data input methods\n-feature: Add drop down actions to user administration\n-feature: Add filtering and pagination to data queries\n-feature: Add filtering and pagination to data input methods\n-feature: Add filtering and pagination to host templates\n-feature: Add filtering and pagination to user administration\n-feature: Add extended LDAP authentication support\n-feature: Add Web Basic authentication\n-feature: Add authentication realm to modifiable user parameters\n-feature: Add multiple polling intervals\n-feature: Moved command line scripts to cli sub directory\n-feature: include/config.php now only includes database configuration\n-feature: include/config_* have been renamed to include/global_*. Note: Script servers need to be updated.\n-feature: Allow VRULE's in Cacti to specify an absolute timestamp in addition to [+/-]HH:MM\n-feature: Add 1 minute RRA\n-feature: Add item select highlighting to main pages\n-feature: Let poller.php be more intelligent about poller intervals less than 60 seconds\n-feature: Add consistency to Filters by adding nowrap to td items\n-feature: Add Graph and Data Source counts to Device page\n-feature: Add Poller Interval to Data Sources page\n-feature: Keep filters aligned with main page content on window resize\n-feature: Add Enable/Disable user\n-feature: Add copy and batch copy of users\n-feature: Reduce ADODB memory consumption during polling\n-feature: Add new RRDtool Function to facilitate CSV export\n-feature: Add the ability to ignore custom RRA settings when importing templates and use this behavior by default\n-feature: Add technical support output to System Utilities\n-compat: Add additional checking due to php-snmp changes in Windows\n-compat: Remove GIF as a supported file type for RRDtool 1.2.x and added SVG file type\n\n0.8.6j\n-bug#0000842: SNMPv3 password field does not check if entered passwords match.\n-bug#0000848: Fix \"PHP Script Server communications lost\" error in the poller under high network load.\n-bug#0000859: User log \"purge\" now keeps the last successful login.\n-bug#0000861: Use downed host detection even when the SNMP community is blank.\n-bug#0000864: Apply natural sort to graph items in the tree.\n-bug#0000867: Apply various cleanups to poller.php and lib/poller.php.\n-bug#0000870: Add sorting to the graph templates list on the \"Change Graph Template\" page.\n-bug#0000877: Fix issue that caused PHP 5.2.0 to break the Windows cmd.php poller.\n-bug#0000882: Add \"collapsible\" branches to the graph tree editor.\n-bug#0000883: Fix exploit in cmd.php with register_argc_argv enabled in PHP.\n-bug#0000884: Add bottom navigation bar to graph viewing.\n-bug#0000885: Fix issue causing spaces to be removed when importing/exporting data input methods.\n-bug#0000886: Allow SNMP ping to utilize the snmpgetnext call instead of snmpget.\n-bug#0000890: Fix issue with dec-vulnerability-poller patch breaking graph_view.php.\n-bug#0000892: Fix hostname sorting on the devices page for IP addresses.\n-bug#0000894: poller.php does not give any output with MySQL disabled in CLI's php.ini.\n-bug: Template export produces invalid XML escaped character encoding.\n-bug: Data queries were not sorted properly during initial display.\n-bug: Apply various graph changes required for Boost plugin.\n-bug: If your system has no hosts or graphs, you would get a warning when creating new graphs.\n-bug: If using the CGI version of PHP, the script server risked not starting properly.\n\n0.8.6i\n-bug#0000188: Add ability to sort columns by selecting column headers.\n-bug#0000199: Exported thumbnail graphics shows limited time range only.\n-bug#0000207: Correct unit size displayed in the default 'Localhost - Memory Usage' graph.\n-bug#0000286: Fix issue with bandwidth summation on exported graphs.\n-bug#0000313/#0000561: Don't print menu/titlebar by using CSS class noprint.\n-bug#0000316: Take the unit value field into account when creating graphs.\n-bug#0000395: Fix graph export FTP functionality in Unix environments.\n-bug#0000430: Add natural sort order option for graph trees.\n-bug#0000433: Remove script server restriction on varying case path names.\n-bug#0000488: Remove reliance on HTTP_USER_AGENT to prevent possible notices.\n-bug#0000527: Fix issue updating the RRA for a graph tree item.\n-bug#0000584: Add barometer decimal fix to scripts/weatherbug.pl.\n-bug#0000624: Generate DEFs for graph items other than AREA, STACK, and LINE.\n-bug#0000643: Always display a human readable sysUpTime in the device edit page.\n-bug#0000665: Invalid index error on empty or 0 return set from rrdfetch with Nth Percentile.\n-bug#0000672: When creating a device, the Host Template was not properly validated.\n-bug#0000678: Allow graph export to a Cacti sub directory.\n-bug#0000681: Increase the size of the arg1, arg2, and arg3 fields in the poller_item table.\n-bug#0000692: Fix problems with FTP and the tree export method.\n-bug#0000693: Fix problems with the \"Expand Host\" option and the tree export method.\n-bug#0000698: Make arguments to 'df' more compatible with FreeBSD 6.0 in the \"Get Unix Partitions\" data query.\n-bug#0000705: Fix problem with the current selected data source item and SIMILAR_DATA_SOURCES_NODUPS (again).\n-bug#0000709: Fix problems with FTP and the tree export method (duplicate).\n-bug#0000720: Fix undefined variable message in script_server.php.\n-bug#0000721: SNMPv2 Query has issues with ifAlias & ifName when none present.\n-bug#0000727: Allow a user with specific graph permissions to be used when exporting graphs.\n-bug#0000730: Allow non-standard MySQL ports to be specified.\n-bug#0000731: Use proper defaults when adding a device to a tree from the Devices page.\n-bug#0000739: Stop ignoring the \"Unit value\" parameter in the graph template.\n-bug#0000741: Fix issue with links getting mismatched after using zoom on a graph.\n-bug#0000746: Make sure clearing Cacti log file from web interface preserves file permissions.\n-bug#0000752: Allow OID's greater than 255 characters except for the index OID because of MySQL index limitations.\n-bug#0000758: LDAP user with non-alphanumeric characters in the password failed to authenticate.\n-bug#0000761: Correct input validation to allow all possible numbers in the RRAs form.\n-bug#0000766: Increase the size of the id field in the graph tree items table.\n-bug#0000769: Use only selected RRA's when exporting graphs.\n-bug#0000775: Add pagination to the SNMP cache viewer to handle large numbers of items.\n-bug#0000779: Scale down the size of text when viewing thumbnail graphs.\n-bug#0000781: Add an \"enabled\" filter status item in the devices list.\n-bug#0000785: Fix issue with Graph Tree View and Data Query Index Sorting showing \"Non Indexed\" even if empty.\n-bug#0000786: Expose the SNMP port field to data sources that use SNMP.\n-bug#0000789: Remove use of \"action\" attribute on graph tree image which is incompatible with newer Opera browsers and HTML4.\n-bug#0000797: Fix issue with filtering on multiple fields on the Data Sources and Graph Management pages.\n-bug#0000809: Add an option to \"purge\" the user_log table.\n-bug#0000814: Prevent Apache from segfaulting if the database permissions are not correct.\n-bug#0000815: Paginated the Cacti log file viewer to handle large numbers of items.\n-bug#0000821: Add missing menuarrow.gif image.\n-bug#0000823: Prevent Cacti from overwriting data during the creation of a new data template.\n-bug: Do not allow the device filter on the graph items editor to clear the selected data source.\n-bug: SQL query incorrectly formatted causing SQL queries to fail in preview mode.\n-bug: Setting a host template filter in devices, followed by moving off and then back on the page generated an error.\n-bug: PHP 5.1 snmpwalks utilize the bulk method by default.  Therefore, prefer them over the bulkwalk binary.\n-bug: Allow read_config_option to force a database refresh when one is wanted.\n-bug: Fix to resolve script server script not returning data as expected.\n-bug: Make load average script compatible with Mac OS X systems.\n-bug: Correct an issue where under certain circumstances, |query_ifSize| was being implemented as the maximum value for an RRD.\n-bug: Correct issue where DHTML caching was not working with expand hosts enabled.\n-bug: Add SNMP retries option to Cacti's SNMP functions.\n-bug: Once Graph Export has been enabled, do not allow Cacti to run even after it has been disabled.\n-bug: Correct alphabetic tree sorting to be more natural.\n-bug: Fix meta refresh tags to use proper URL syntax.\n-bug: Do not allow the graphs setting page to use the refresh interval, which can cause it to refresh while the user is inputting data.\n-bug: Make sure that data query index ordering with the \"index_order\" XML field is always respected.\n-bug: Limit the number of rows retrieved from the poller_output table to minimize the impact low memory system configurations.\n\n0.8.6h\n-bug#0000383: Add more verbose RRDtool debug output from Graph Management.\n-bug#0000522: Take 'oid_index_parse' into consideration when handling 'OID/REGEXP:' data query fields.\n-bug#0000528: Allow template_import.php to return without error when XML file is invalid in PHP 4.4 and above.\n-bug#0000557: Changing filter value resulted in invalid page/row selection.\n-bug#0000572: Added $database_port to config.php.\n-bug#0000570: Grammar edit for text about already up-to-date.\n-bug#0000571: Misleading diagnostic error messages during install have been updated.\n-bug#0000582: Ampersand present in graph template graph name causes XML import to fail.\n-bug#0000585: Graphing fails using AREA/STACK/LINE/HRULE/VRULE without defined color.\n-bug#0000586: Remove static reference to RRA ID #1.\n-bug#0000596: Proper escape of ' in graph titles.\n-bug#0000599: Add filtering to graphs and data templates.\n-bug#0000601: Add ability to add multiple hosts to a tree.\n-bug#0000603: user_log.ip field not ipv6 compatible.\n-bug#0000608: Minor coding error in lib/poller.php with a erroneous pclose statement.\n-bug#0000615: Add sysContact and sysLocation output to device edit page.\n-bug#0000619: Host templates not alphabetized on device creation form.\n-bug#0000625: Cannot modify/create a user with a period in the username.\n-bug#0000631: Invalid information concerning delimiter for index_order in SNMP Query documentation.\n-bug#0000650: Clicking Cancel in Create Graphs for this Host does nothing.\n-bug#0000656: Perl scripts using back ticks is not portable.\n-bug: Stop MySQL connect messages from appearing in user interface.\n-bug: Allow primary keys other than \"ID\" to work in sql_save and in HTML code.\n-bug: Save statistics even when the poller times out.\n-bug: Only call poller_commands.php or poller_export.php if they require calling.\n-bug: Incorporate a timeout to ss_fping.php so that a host that takes to long to finish at least returns data.\n-bug: Correct the display of custom data under data input methods to follow the proper order.\n-bug: Change the default behavior of ping.php to mark a host as up if either SNMP or ping are successful.\n-bug: Don't allow graph_export to delete your web site.\n-bug: Correct issue where SNMP was not returning both hex and text data under certain circumstances.\n-bug: Prevent a never ending table lock in lib/tree.php.\n-bug: Correct issue where either AREA or LINEx without color were causing RRD_NL without any elements in rrdtool_graph.\n-bug: Allow hostname to include the TCP: prefix for TCP based snmp and keep tcp, icmp, udp ping functional\n-bug: Better error reporting for Clear Cacti Log File in Utilities\n-bug: Graphs with items having Legend text defined but no color will fail under RRDtool 1.2.x.\n-feature: Add MySQL 5.x support.\n-feature: Add IPv6 support to lib/ping.php.\n-feature: When utilizing cmd.php, do not run the script_server if it is not required for a process.\n-feature: Incorporate snmpbulkwalk binary path to user interface to speed snmpv2 and snmpv3 walk calls.\n-feature: Incorporate snmpgetnext binary path to user interface to make available for certain plugins.\n-feature; Add support for Nth percentile functions, not just 95th.\n-feature: Add support for new Nth percentile variables: aggregate, aggregate_max, aggregate_sum.\n-feature: Allow additional filtering for graph item adding while creating graphs.\n-feature: Add Command line script to copy users: copy_cacti_user.php.\n-feature: Add Command line script to reindex hosts: poller_reindex_hosts.php.\n-feature: Add Command line script to rebuild the poller cache: rebuild_poller_cache.php.\n\n0.8.6g\n-bug#0000351: Fix zooming capability in Safari.\n-bug#0000491: Allow underscore, dash, and forward slash characters through search string validation.\n-bug#0000498: Fix issue where editing data input methods damaged portions of the database.\n-bug#0000502: Fix Syslog support in unix.\n-bug#0000506/#0000517: Properly handle special XML characters when importing/exporting templates.\n-bug#0000508: Fix issues where filter functionality would not work in preview mode.\n-bug#0000512: Increase script server buffer size for large output.\n-bug#0000520: Fix issue where LDAP authentication causes crash/abort.\n-bug#0000521: Add graph/data source title mouseover support.\n-bug#0000525: Make sure that all files in the Cacti distribution contain an EOF character.\n-bug#0000530: Remove 132 character limitation for OID's during polling.\n-bug#0000531: Make sure that quote characters in suggested value fields are properly escaped.\n-bug#0000535: Fix template export support for PHP 4.4.\n-bug#0000536: Fix printing of zoomed graphs where in IE where a white box would appear over the graph.\n-bug#0000537: Re-implement functional SNMPv3 support (authNoPriv only)\n-bug#0000543: Always allow non-templated graph/data template fields to be blank.\n-bug#0000544: See graph tree export contrib below.\n-bug#0000547: Fix issue with escaping certain control characters, causing the graph tree to break.\n-bug#0000552: Fix typo on the Settings page.\n-bug: Fix multiple output support in the script server.\n-bug: Fix incompatible binary SNMP calling parameter issue with NET-SNMP versions earlier than 5.1.\n-bug: Fix issues encountered when polling invalid data sources.\n-bug: Fix issue where if a host was deleted, re-indexing would continue to attempt to be performed on it.\n-bug: Allow lib/ping.php to be included in user script server scripts.\n-bug: Eliminate the need to run php-win.exe in Windows environment.  Will now work with just php.exe.\n-feature: Add a great new graph export format \"Tree Presentation\", thanks to our friend from Toulouse France (forums user: jaybob).\n-feature: Allow data query |query_*| variables to be used within a CDEF string.\n-feature: Force export functions into a separate poller process.\n-feature: Force re-caching of data queries into a separate poller process.\n-feature: Added filter capability to graph list view mode.\n-feature: Enhanced ss_fping.php and ping.php to inclue ICMP, TCP and UDP ping functionality and to specify a port.\n\n0.8.6f\n-security: Hardened PHP Project Advisory #042005 - Cacti Authentification/Addslashes Bypass Vulnerability\n-security: Hardened PHP Project Advisory #022005 - Cacti Multiple SQL Injection Vulnerabilities\n-security: Hardened PHP Project Advisory #032005 - Cacti Remote Command Execution Vulnerability\n\n0.8.6e\n-bug#0000143: Allow the user to enter 'U' for unknown minimum and maximum data source input values.\n-bug#0000377: Fix logarithmic graph creation issues.\n-bug#0000392: Implement caching to reduce the number of SQL queries needed to render the graph tree.\n-bug#0000402/#0000457: Allow bounds to be set properly for logarithmic graph creation.\n-bug#0000428: Unable to try login again after Access Denied.\n-bug#0000450: Force strict checking for data query parsing to prevent numeric values from being incorrectly handled.\n-bug#0000453: SPAN tag between each character of GraphTitle in Graph Management.\n-bug#0000458: Generate and error message and exit poller.php if the cactid binary path is invalid.\n-bug#0000463: Fix Syslog logging of poller statistics.\n-bug#0000464: Remove dates from Syslog generated messages.\n-bug#0000465: Allow for the mass resize of graphs.\n-bug#0000471: Remove the graph 'Settings' tab if the user is not allowed to save graph settings.\n-bug#0000478: Validate field input values on the Data Templates page. Prevent duplicate data template items from appearing as a result of this bug.\n-bug#0000481: Add several checks to prevent PHP errors when parsing data query XML files.\n-bug: Graph zoom feature had incorrect bounding box when using RRD 1.2.x\n-bug: Speed the generation of the Tree View Dual Pane by caching the Tree to a local session variable.\n-bug: Handle STACK graph items properly in RRDtool 1.2.\n-bug: Prevent data query recaches if the device returns empty input.\n-bug: Fix potential issues with graph gaps when using a large number of poller processes.\n-bug: Fix issues when zooming with new RRDtool 1.2 title fonts with a point size other than 10\n-bug: Fix issues when zooming outside of the select areas causing a broken graph\n-bug: Fix issues experienced when users attempted to create custom graphs and thousands of data sources exist\n-feature: Add ability to filter by host status as well as add ability to filter accross both description and hostname\n-feature: Add additional options to control RRDtool 1.2 fonts.\n-feature: Allow the user to Enable/Disable Data Sources from the user interface and automatically disable hosts when deleting a device.\n-feature: Add Data Source information to the Cacti Log File to assist with troubleshooting.\n-feature: Add html links to both hosts and data sources in the Cacti Log File.\n-security: Fix several remote inclusion bugs that were exploitable when PHP's 'register_global' feature is turned on [IDEF0941], [IDEF1023], [IDEF1024].\n-security: Fix several SQL injection bugs due to improper input validation [IDEF1001].\n\n0.8.6d\n-bug#0000416: Speed up binary net-snmp calls by removing MIB lookup requirement.\n-bug#0000434/#0000403: Allow for periods in script return variable names.\n-bug#0000436: Made snmp.php more like version 0.9 code base.\n-bug#0000419: Fixed session initialization problems with some browsers.\n-bug#0000394: Fixed a web server crash when reordering items in a graph tree.\n-bug#0000390: Remove deep linking in Cacti.\n-bug#0000389: Implement directory security in Cacti.\n-bug#0000443: Add SNMP port/timeout to the Host MIB CPU/disk script queries.\n-bug: Corrected issues encountered when creating multiple graphs from a single graph template.\n-bug: Corrected a problem where no graphs are displayed in the graph tree when authentication is turned off.\n-bug: Allow RRDtool fetch command to retrieve negative numbers.\n-bug: Increased some field lengths for very long OID's.\n-bug: Removed references to non-existing code when attempting to make database connections.\n-bug: Give poller cache more time to process entries during a clear operation, give it more memory.\n-bug: Changed default value in Unix ping script to correct for template bug.\n-bug: Fixed page refresh issue.\n-bug: Fixed include ordering in config.php to accommodate MySQL bugs and logging.\n-bug: Changed SNMP ping OID to be sysUptime because it is more common.\n-bug: Increased PHP timeout to accommodate for long running recache events causing poller issues.\n-bug: LDAP Auth with no DN specified and blank username would allow login.\n-feature: Basic support for RRDtool 1.2 including specifying a default True Type Font.\n-feature: Added support for spike suppression within the cmd.php poller.\n-feature: Support php_snmp version 2 builtin functions.\n\n0.8.6c\n-bug#0000354: User Name field always displays \"admin\" in Mozilla web browser.\n-bug#0000293: JavaScript selection bug on the \"New Graphs\" page.\n-bug#0000352: Problem with the current data source item when using the \"Similar Data Sources\" special data source.\n-bug#0000348: Scale problems with the \"ucd/net - Memory Usage\" graph template.\n-bug#0000358: Problems adding the same graph to more than one graph tree.\n-bug#0000355: Allow scientific and negative numbers to be returned from a script.\n-bug#0000347: Change Order of Graph Templates and Data Queries in Host.\n-bug#0000339: LDAP description misspell 'allow'.\n-bug: Maximum runtime issues with the script server.\n-bug: User could select a data query graph type from \"Graph Templates\", causing duplicate data source items.\n-bug: Auto-recache failed and caused the poller to crash under specific circumstances.\n-bug: Problems saving a user's graph settings from the user admin page.\n-bug: Poller cache not being updated properly for some host types upon change.\n-bug: Hope it's final this time: 95th percentile and bandwidth summation fixes.\n-bug: Added more verbose error handling with template XML importing.\n-bug: Sort host templates when creating a host.\n-bug: Corrected user form edit array problem that didn't show the graph options for an edited user.\n-bug: Access Denied error when user doesn't have console access.\n-bug: Return type bug in cacti_snmp_walk() which could cause extra blank data query rows.\n-feature: Data queries now support indexes that span multiple OIDs (see the manual).\n-feature: Re-apply suggested naming to graphs from the user interface.\n-feature: TreeView-specific feature to speed up rendering the tree for large databases.\n-feature: Added retry logic to the MySQL connect statements.\n-feature: Changed default connect method to a 'pconnect' from a 'connect' to improve performance with large implementations.\n-feature: Add support for Safari on the graph zoom page.\n\n0.8.6b\n-bug#0000318: Only delete the Cacti system user when uninstalling the RPM package rather than during each upgrade.\n-bug: Problems with the 95th percentile and bandwidth summation graph variables.\n-bug: Problem with random gaps in some or all graphs caused by staggered RRDtool update times.\n\n0.8.6a\n-bug#0000287: Non-host based scripts failing to populate the poller cache (0.8.6).\n-bug#0000285: Data query variables on graphs should reflect the data source of each individual graph item (0.8.6).\n-bug#0000289: Check the value of PHP's \"magic_quotes_gpc\" setting to prevent potential security holes (0.8.6).\n-bug#0000295: Problem with the DHTML tree when Cacti is included inside of a parent frame.\n-bug#0000311: Set PHP's \"max_execution_time\" to \"0\" during all upgrades.\n-bug#0000303: Correct the logic that checks if the export path directory exists or not.\n-bug#0000310: Problems viewing data templates with the \"Data Input Method\" set to \"None\".\n-bug#0000304: Problems displaying duplicate data templates on the main \"Data Templates\" screen.\n-bug#0000302: Update the Windows install documentation to mention the \"PHPRC\" environment variable.\n-bug#0000293: Problem with the JavaScript that grays out already created graphs on the \"New Graphs\" page.\n-bug#0000312: Make sure that the \"host_graph\" table is populated in the installer for users coming from a version less than 0.8.4.\n-bug#0000296: Remove references to PHP's ob_flush() function it doesn't exist until verion 4.2.\n-bug#0000314: Respect graph export timing settings.\n-bug: Problem saving a templated graph or data source that contained a checkbox field that had a value different from the default.\n-bug: Typo in graphs.php when placing graph(s) on a tree.\n-bug: Make sure that there is a user logged in before trying to read a per-user graph configuration value.\n-bug: Fix support for multiple cmd.php/cactid polling sessions in a single poller.php session.\n-bug: Revert back to older RRDtool update method as to correct several poller related issues with 0.8.6.\n-bug: Fix PHP-SNMP support in cmd.php.\n-bug: Fix multiple graph/data template corruption issues when converting from graphs or data sources.\n\n0.8.6\n-bug#0000051: HTTP header caching problems (0.8.5).\n-bug#0000121: It is no longer possible to add the same graph twice to a single graph tree branch.\n-bug#0000123: Several UI fixes on the tree item edit page (0.8.5).\n-bug#0000124: Select all check boxes would actually invert the selection.\n-bug#0000128: Graph template item corruption issues (0.8.5a).\n-bug#0000139: Graph tree deletion corruption issue (0.8.5a).\n-bug#0000140: Replaced the 'None' option in several host drop downs with 'Any' and redefined 'None' to mean host = 0 (0.8.5a).\n-bug#0000144: Possible corruption issues when deleting tree items from the root of the tree.\n-bug#0000149: Error using the 'total' type for 95th percentile or bandwidth summation.\n-bug#0000151: Added the ability to duplicate a host template.\n-bug#0000160: A change in Mozilla 1.5+ caused extra vertical space to appear on many table rows throughout the console.\n-bug#0000164: HostMIB scripts do not respect SNMP port and timeout parameters.\n-bug#0000173: Increase the number of characters dedicated to each tier from 2 to 3 which increases the item per tier/branch limit to 999.\n-bug#0000174: Broken thumbnail graphs that contained a 95th percentile HRULE item.\n-bug#0000175: Strip quotes from SNMP output to prevent UI escaping issues.\n-bug#0000176: Added the '-P' argument to 'df' to prevent multi-line output for the query_unix_partitions.pl script.\n-bug#0000179: Updated ADODB to version 4.23 which enabled Cacti work with PHP 5.\n-bug#0000198: Strip greater and less than characters from SNMP output to prevent UI escaping issues.\n-bug#0000214: Rename 'Utilities' to 'System Utilities' and move it under the 'Utilities' menu heading.\n-bug#0000235: Limit the number of pages displayed for graph management, data sources, and devices.\n-bug#0000244: Prevent PHP errors from being displayed during summation/95th percentile calculation when the .rrd file does not exist.\n-bug#0000253: Fixed recursive CDEFs.\n-bug#0000254: CDEF dropdown list in adding another CDEF is not sorted.\n-bug#0000265: Removed \"CANNOT FIND GUEST USER\" error message.\n-bug#0000273: Fixed 'rrdtool fetch' parsing for RRDtool 1.0.9.\n-bug: A hash was not being generated for duplicated graph and data templates which would cause import/export for those templates to fail.\n-bug: A user's graph permissions may fail to delete properly after removing that user.\n-bug: The \"Export Every x Times\" feature did not work correctly.\n-bug: Work correctly with PHP's get_magic_quotes_gpc() turned off.\n-bug: Eliminated potential password injection attack in auth_login.php.\n-bug: Eliminated popen issues in cactid win32 with threads > 1.\n-feature/bug#0000118: Data source screen UI enhancements (0.8.5).\n-feature/bug#0000120: Deleting a tree header should delete all child items (0.8.4).\n-feature/bug#0000125: A forced sort type can be specified for data query indexes which will be used to sort data query results in the UI.\n-feature/bug#0000152: Added filter/search/pagination capabilities to the Devices page.\n-feature/bug#0000155: Allow hosts on the graph tree to be grouped by data query index (ie. switch port, partition, etc) instead of only graph template.\n-feature/bug#0000156: Added the ability to sort a graph tree branch alphabetically or numerically.\n-feature/bug#0000161: Removing a graph now gives the user the option to remove all associated data sources.\n-feature/bug#0000172: Added the ability to control which graph viewing areas should display thumbnail graphs and which ones should display full sized graphs.\n-feature/bug#0000185: Deleting a device gives the user the option of deleting all associated graphs and data sources.\n-feature/bug#0000187: Add host availability and device enabled/disable controls to the main devices page.\n-feature/bug#0000189: Add a system-wide defaults for SNMP community, version, port, timeout and retries configurable under 'Cacti Settings'.\n-feature/bug#0000192: Add the ability to log poller runtime statistics to the log.\n-feature/bug#0000194: Add host availability capability which allows Cacti to track of downed devices as well as a device's uptime history.\n-feature/bug#0000200: Implement three different auto re-index methods which allow Cacti to automatically 'refresh' a data query when an indexes changes.\n-feature/bug#0000213: Add a 'Clear' button to all filter forms which resets the form to its default state.\n-feature/bug#0000240: Add moonman's SIMILAR_DATA_SOURCES_NODUPS CDEF patch.\n-feature/bug#0000250: Allow host/graph tree items to change parents.\n-feature: Data query index types are now automatically selected which eliminates the need to prompt the user for this information at graph creation time.\n-feature: Better message handling on the \"New Graphs\" page.\n-feature: Get rid of the \"Data Input Method\" box from the data query edit screen as this data can be automatically derived.\n-feature: Customizable log levels.\n-feature: Ability to log to syslog (Unix) and event log (Windows) in addition to the log file.\n-feature: UDP/ICMP/SNMP ping support used to determine a host's availability status.\n-feature: A PHP script server which enables PHP script to be interpreted by the poller without spawning a separate PHP process for each item. See the manual for more details.\n-feature: Ability to choose the type of poller (cmd.php, cactid) and number of threads (cactid only) from the UI.\n-feature: Ability to spawn multiple simultaneous cmd.php/cactid processes to speed up the polling process.\n-feature: Allow data templates and data sources that use SNMP to override host fields (hostname, snmp port, etc) in the poller cache.\n-feature: Added Eric Steffen's Bonsai patch which enables users to zoom a graph by dragging a box around the area of interest.\n-feature: Added branix's graph export enhancements patch which adds many more graph export configuration options including remote FTP support.\n-feature: Ability to view/clear the log file from the console.\n-feature: Use a single RRDtool stdin pipe for all update, create, and graph export actions.\n-feature: Advanced timespan selector which provides a large number of presets and a calendar control for custom timespans.\n-feature: Better support for SNMP v2 from UI.  Speed up some UI queries.\n-feature: Enable/Disable Poller from UI.\n-feature: Added ifOperStatus to Graph Creation page to show either Up or Down.\n-feature: Rearchitected poller subsystem to prepare for multiple poller architecture in future releases.\n-feature: Added validation logic in the pollers to prevent system and log anomalies.\n-feature: Removed SNMP v3 options until SNMP v3 is supported.\n\n0.8.5a\n-bug#84: Updated internal CDEF caching to take CFs into account.\n-bug#86: Updated the LDAP code to correctly copy template users.\n-bug#136: Inaccurate total bandwidth readings for RRAs with a step > 1.\n-bug#138: Typo on install/index.php\n-bug#141: Incorrect pre-requisite file check when doing a graph export.\n-bug#142: Added the '-t' option when calling ucd-snmp or net-snmp to support numeric timeticks.\n-bug#145: phpMyAdmin was choking on the import of cacti.sql.\n-bug#146: Minor HTML fix in lib/form.php\n-bug: Fixed potential graph item input corruption when saving a graph template item.\n-bug: Fixed problem saving a data source using a template that had more than one item.\n-bug: Correctly display the console menu when authentication has been turned off.\n-bug: Correctly display the two pane tree when authentication has been turned off.\n-bug: Support regular expression characters in passwords: \\+*?[^]$(){}=!<>|:\n-bug: Fixed certain re-ordering problems when deleting branches from a graph tree.\n-bug: Add support for a 3 digit exponents in RRDtool fetch output on Windows.\n-bug: Correctly escape community strings with a quotation mark under Windows.\n-bug: 95th percentile and bandwidth summation code should result in less errors when things don't go as planned.\n-bug: Fix 'data_input_data_fcache' orphan when deleting a data source.\n-feature: Make the 'None' option on the graph management and data sources host filter dropdowns only display items with no host assigned. Add an 'Any' option to display items assigned to all hosts.\n-cactid: Fix segfault problems on all platforms when performing SNMP queries.\n-cactid: Fix deadlock issues on Windows and Solaris when making popen calls.\n\n0.8.5\n-bug#102: Fix problem with SNMP community strings that contain certain variable shell characters.\n-bug#103: Under \"New Graphs\", make sure to highlight the host template line when the right-hand checkbox is selected.\n-bug#104: Typo in the usage for the query_unix_partitions.pl script.\n-bug#105: On the data query edit page, only display compatible items in the \"Data Input Method\" dropdown.\n-bug#106: Render the main menu based on a user's permissions so graph-only users cannot see a list of menu options when attempting to view 'index.php'.\n-bug#109: Replaced all instances of 'ifDesc' with the correct 'ifDescr' when dealing with the IF MIB.\n-bug#110: Be smarter about redirecting the user to the correct page when the user's login option is set to \"Show the page that user pointed their browser to\".\n-bug#111: Take host permissions into account when rendering the left-hand pane in tree view.\n-bug#112: Every 10th tree item was not being displayed.\n-bug#115: Fixed a bunch of misspellings of the word 'substitute' throughout the code.\n-bug#116: Restructured the edit screens for CDEF items and tree items, making them less confusing to users.\n-bug#119: Added a \"Search:\" label to the filter textboxes on the \"Graph Management\" and \"Data Sources\" pages.\n-bug#127: Added an HTML \"title\" tag to the three graph mode images.\n-bug#129: Added support for correctly parsing timeticks in both cmd.php and cactid.\n-bug#130: Users are sometimes redirected to the incorrect host when selecting the \"Create Graphs for this Host\" link under \"Polling Hosts\".\n-bug#131: Load averages above '10' were not being returned correctly from the loadavg_multi.pl script.\n-bug#133: Non-SNMP data sources were not being removed from the poller cache when a host became 'disabled'.\n-bug#134: Make sure to delete associated 'host' tree items when deleting a host.\n-bug#135: Fix the navigation display so it doesn't display errors when directly linking to a graph.\n-bug#137: Remove the 'td.shadow' CSS class as it isn't being used and contains an incorrect image reference.\n-bug: Allow the user to enter a \"Unit Exponent Value\" of '0'.\n-bug: Remove all references to $_SERVER[\"HTTP_REFERER\"] for web servers that do not include this variable.\n-bug: Extend the \"Maximum JavaScript Rows\" feature to work for host templates as well.\n-bug: Fixed a few parsing problems that were causing problems for users including a '\\' or '/' in their script's input string.\n-bug: The correct representation of memory usage using net-snmp should be 'free memory + cache memory + buffered memory'.\n-bug: Fixed a problem importing CDEF items correctly from an XML file.\n-bug: Deleting a GPRINT preset now correctly displays the name of the item about to be removed.\n-bug: Problems importing XML that contained a host template with more than one associated graph template.\n-bug: Added a potential workaround for the PHP session/popen bug which occurs on Windows systems using PHP in ISAPI mode.\n-feature: Data query variables such as |query_ifAlias| can now be included on the actual graph in the \"Text Format\" or \"Value\" field.\n-feature: Added two new special data sources to CDEFs, which enable users to use the data source's maximum or minimum value in a CDEF.\n-feature: Added a new SNMP query source type, \"VALUE/REGEXP\", which enables users to parse the SNMP value with a regular expression before passing it onto Cacti.\n-feature: Hide the \"Console\" tab from users that only have rights to view graphs.\n-feature: Added a new 95th percentile type, \"max\", which calculates 95th percentile based on the maximum of either inbound or outbound for each sample. This is how most co-location facilities calculate 95th percentile for billing purposes.\n-feature: Update ADODB to version 4.05.\n-feature: Data source graph inputs are automatically added and maintained by Cacti for new graph templates as to reduce user confusion.\n-feature: The \"Graph Management\" and \"Data Sources\" edit pages are much improved when using a template.\n-feature: Renamed \"Polling Hosts\" to \"Devices\" since polling hosts technically implies that you are managing the hosts that poll data, which could be reserved for later use.\n-feature: If you enter a value for a \"host field\" in the data template, Cacti will use that value rather than always defaulting to the host. If you leave it blank, Cacti will use the value from the host.\n-feature: Data input method type codes 'snmp_timeout' and 'snmp_port' are now supported.\n-feature: Users will only see tabs for the graph viewing modes that they have access to.\n-doc: Completely re-written manual in SGML/Docbook so HTML, PDF, and ASCII versions of the manual are now possible. The new manual also includes a better introduction to Cacti for new users and makes use of screen shots to illustrate various portions of the user interface.\n-cactid: Fixed segfault problems using cactid on Solaris platforms.\n\n0.8.4\n-bug#87: Deleting top level branches without children on the tree caused ordering problems.\n-bug#88: Possibly popen/pclose concurrency problem with cactid.\n-bug#89: Missing \"check all\" checkbox on polling hosts page when an empty column was drawn.\n-bug#91: Fix undefined index errors on data source checkbox popups.\n-bug#92: Fix undefined index errors on graph management checkbox popups.\n-bug#96: Problems creating graphs from data queries where there was only row row total in the query result.\n-bug#97: Typo in cmd.php\n-bug#98: Creating a data source or graph with no host or template, would result in an extra empty item.\n-bug#99: Deleting a graph or data template that was still attached to one or more items would cause the graph/data source to appear to still have the deleted template still attached.\n-bug: Removed size limits on Linux memory data template.\n-bug: Undefined variable errors when creating new graphs/data sources without a template.\n-bug: multiple problems that caused the Windows disk space and CPU graphs to stop working.\n-bug: Broken images for bandwidth summation graphs that were less than a day old.\n-bug: Graph order changes on the tree would affect other graph trees.\n-bug: Problem with the \"Host MIB - Hard Drive Space\" data template that broke Windows disk spaces graphs.\n-bug: Fixed the LDAP authentication code, which was partially broken in 0.8.3.\n-bug: Fixed a cmd.php parsing problem when input and output fields are sharing the same name.\n-bug: Added basename() to all PHP_SELF references to make sure all hrefs stay absolute.\n-bug: The RRA field is now honored for the dual pane tree view.\n-bug: The |date_time| graph variable now displays the current day of the month.\n-feature: The \"Total All Items\" CDEF is now able to total NaN's without becoming 'U'.\n-feature: Data query results are now grayed out if they have already been created.\n-feature: The \"cacti Web Root\" and \"Web Server Document Root\" settings are completely auto-detected now.\n-feature: Add SNMP port and SNMP timeout fields to each host.\n-feature: Removed the \"Management IP\" field in polling hosts in favor of \"Hostname\".\n-feature: Re-organized the menus expand/contract for less used items to help save vertical space.\n-feature: Added complete template to XML import and export support.\n-feature: Moved the graph creation features of \"Polling Hosts\" to a new menu item,\"New Graphs\".\n-feature: Added verbose debugging support for data queries.\n-doc: Added a FAQ.\n-cactid: Removed lots of potential buffer overflows.\n-cactid: Several libz/openssl autoconf fixes that improve FreeBSD 5.x support.\n-cactid: Fixed some potential segfaults on FreeBSD when reading information from the targets table.\n-cactid: The snmp_get() function now respects the SNMP version chosen under \"Polling Hosts\", so 64-bit counters should work.\n\n0.8.3a\n-bug#81: Partial/complete poller cache rebuild failure after an upgrade.\n-bug#82: Undefined variable error messages under win32/IIS.\n-bug: Problems with overlapping graph permissions with multiple users.\n\n0.8.3\n-bug#50: When viewing a graph, only display it for the RRAs used on the graph.\n-bug#66: Users can see a list of all hosts in graph preview mode.\n-bug#71: Extra escape characters in the |date_time| variable output.\n-bug#72: Disk space graph for ucd/net was broken for original 0.8 users.\n-bug#75: Problems monitoring more than one CPU with query_host_cpu.php.\n-bug#76: Cactid segfault on Solaris caused by unchecked use of NULL with sprintf.\n-bug#77: Cactid segfault upon a MySQL connect error.\n-bug#79: Check for unique/valid data when the user selects a field to index their new data sources off of.\n-bug: Redirect user to the correct page after a forced password change.\n-bug: Problems entering negative numbers for upper/lower limit fields on graph pages.\n-bug: Never try to use internal SNMP support if SNMP version 2 or 3 is selected.\n-bug: Adding or removing data source items in a data template should update attached data sources as well.\n-bug: Problems updating certain fields when switching or turning off both graph and data templates.\n-bug: Got rid of the \"Use Per-Data Source Value\" checkbox where it isn't usable.\n-bug: Strange sequence/ordering behavior after updating an already created tree item.\n-bug: Error message displayed instead of 'Access Denied' message.\n-feature: Added host and graph template permissions for graph viewing users.\n-feature: Added a new 'dual pane' tree view type that draws the graph trees on a DHTML tree on the left side of the page.\n-feature: Added the ability to add hosts to a tree.\n-feature: Added a 'timespan' field to \"Round Robin Archives\" to determine the timespan (in seconds) of graphs using each RRA.\n-feature: Completely replaced the header images/layout for both the console and graph viewing pages\n-feature: Added a navigation bar in the header so you can keep track of you location in the UI.\n-feature: Added bandwidth summation support. See the manual for more information.\n-feature: Made the installer more verbose about SQL it runs during an upgrade.\n-cactid: Changed threading strategy to spawn threads based on hosts.\n-cactid: Created header files for each source file and moved precasts out of cactid.h.\n-cactid: A bunch of autoconf updates.\n\n0.8.2a\n-bug: Fixed various problems updating the poller cache.\n-bug: Fixed the Weatherbug script to work under Redhat 9.\n-cactid: Updated poller to use detached threads based on each host.\n\n0.8.2\n-bug#47: The 'cacti_server_os' variable is now auto-detected.\n-bug#56: Possible endless loop for non 0.8 users in version upgrade loop.\n-bug#57: Cacti does not take the 'graph_tree_id' column into account when re-ordering trees which can cause unexpected results.\n-bug#59: Regular expression bug that caused 'query_unix_partitions.pl' not to function on FreeBSD.\n-bug#60: Incorrect index OID in the (currently unused) 'host_disk.xml' SNMP query.\n-bug#61: Problems adding additional graph items to an input after the template is in use by graphs.\n-bug#64: Cactid now checks for the RRDtool path in the 'settings' table.\\\n-bug#67: Problems with wrapping and 'diskfree.pl'.\n-bug: Problems deleting GPRINT presets.\n-bug: Undefined variable errors on the graph settings page if built in user authentication was turned off.\n-bug: Kill cached field value when messages are displayed.\n-bug: Graph trees now honor the RRA selected when creating the tree (andyfud.org.nz)\n-bug: Graph and data source titles are now properly updated when making changes to graph or data templates.\n-bug: Unexpected results when trying to delete top level branches from a graph tree.\n-bug: Problems expanding/contracting trees when two or more nested branches had the hidden flag set.\n-feature: Added ability to turn off checks for an entire host.\n-feature: Added SNMP and operating system variable printout to the about page.\n-feature: Added 95th percentile support. See the manual for more information.\n-feature: Added setting for data query maximum field length.\n-cactid: Added downed host detection.\n-cactid: Code cleanup: formatting, compiler warnings, and removal of unused functions.\n-cactid: Daemon support has been removed from cactid for the time being, it must be run out of CRON.\n-cactid: Have autoconf detect net-snmp before trying ucd-snmp to prevent failure on default Redhat installs.\n\n0.8.1\n-bug#40: Fixed OIDs in serveral Netware data templates.\n-bug#41: Data source and graph names are lost when created from a  template.\n-bug#44: Fixed Host MIB logged in users OID in data template.\n-bug#46: Fixed an RRDtool/PHP binary variable mixup on the install page for win32 users.\n-bug#48: Changed the \"Create\" button on the settings page to \"Save\".\n-bug#52: Make sure the data source/graph names are pulled down after clicking \"Create\", so the user can press cancel.\n-bug: Changed references from $_SERVER[\"SCRIPT_NAME\"] to $_SERVER[\"PHP_SELF\"] because of strange behavior on PHP 4.3.2 under Windows.\n-bug: Make sure to filter on the \"cached title\" for on both the data sources and graph management pages.\n-bug: Fixed error when debug mode was on and the user tried to add a new graph or data source.\n-bug: Take tree permissions into account when displaying the \"Default Tree\" dropdown on the graph settings page.\n-bug: Incorrect graph title was displayed on graph tree delete confirmation.\n-bug: Win32: Graphs were being exported even when the graph export path was left blank.\n-bug: Exported graphs were displayed in the incorrect order.\n-bug: Legends were not displayed on exported graphs.\n-bug: HRULE items caused graphs to break.\n-feature: You can now use negative VRULE items, such as '-12:00' to display a line 12 hours ago.\n-bug: Data queries that had a non-integer index would not render graph/data source titles properly.\n-auth: LDAP authentication updates\n\n0.8\n-feature: Added support for graph, data source, and host templates.\n-feature: Added a stricter concept of hosts which enables better organization and easier graph creation.\n-feature: Created data queries which enable the retrieval of indexable data in the form of a query.\n-feature: Revised the entire UI creating more functional and attractive forms.\n-feature: New generic poller interface enables other pollers to handle the data gathering for Cacti.\n-feature: Added support for net-snmp 5.x.\n-docs: Revised the install documentation and re-wrote the manual for this version.\n-feature: The beginnings of a threaded c-based poller (cactid), which is not completely function at this point.\n-feature: And much much more...\n\n0.6.8a\n-bug: Unchecked string being passed to rrdtool caused a potential security problem.\n-bug: The logout funtionality was broken for some users because of a missing fourth argument.\n-bug: Fixed some SNMP parsing problems.\n-bug: Fixed a problem with using quotes for data source input.\n\n0.6.8\n-feature: Added the following new rrdtool graph options: --units-exponent value, --unit, and --logarithmic.\n-feature: Added the ability to show exact numbers in GPRINT, users can now specify a custom GPRINT string on a per-graph item basis.\n-bug: Any data input source with more than one output would be added as a multi-data source .rrd file.\n-bug: Some data source file name issues.\n-bug: Cacti now checks to see if a host exists when adding it to be graphed.\n-feature: There is now an optional \"remove verification\" for most of cacti's dialogs.\n-feature: There is a \"logout\" button when viewing graphs (not for the guest user).\n-docs: Updated the Win32 docs (thanks Larry).\n-bug: Fixed some rare HTML \"multipart/form\" bugs with PHP.\n-feature: Added a \"Default View Mode\" for each user when viewing graphs.\n-bug: Fixed some bugs where you would change a parent graph item to a child or a child graph item to a parent when graph grouping was turned on.\n-bug: Fixed some potential security bugs by eliminating cacti's use of cookies.\n\n0.6.7\n-feature: Added a \"none\" option for a data source when creating a CDEF. This can be used if you check the \"Use the current data source being used on the graph instead of a preset one\" box.\n-feature: Each user has a default graph policy: ALLOW or DENY for their graph permissions.\n-bug: Unique .rrd filename/data source name issues for SNMP \"Make Graph\" have been fixed.\n-feature: Changing the data source for a graph group parent will change the data sources for each of the child items.\n-bug: Logging has been fixed so errors do not show up in the Apache error_log any more.\n-bug: VRULE's work correctly now. Enter a time in the \"value\" field to use them, such as \"00:00\" or \"14:00\".\n-feature: If you select a graph to be added to the graph hierarchy, the \"This Item is a Graph\" checkbox is automatically selected.\n-docs: Install docs have been updated for Unix/Win32, documentation on upgrading cacti has been added. See the 'docs/' directory for more information.\n-bug: SNMP can function on win32/unix without snmpwalk/snmpget binaries. This will only work if you have php-snmp support compiled into both your php binary and web server modules. This is already the case for win32.\n-bug: A bug when more than one data source was created using the same data input source with multiple outputs has been fixed.\n-feature: The default install/upgrade screen has been revised.\n\n0.6.6\n-feature: Multiple data sources per .rrd is supported. To use this feature, simply create a data input source with multiple outputs that 'Update RRA'.\n-feature: Graph item grouping, which enables you to delete/reorder groups of similair graph items.\n-feature: Graph preview and output preview in the console, which allows you to preview what a graph will look like/what rrdtool's output is.\n-feature: Graph-based permissions have added, you can also show/hide certain hierarchies per user.\n-feature: Multiple data source per .rrd file support, read the docs for more information.\n-feature: You can now export graphs to static png's/html's every n times.\n-feature: By default, SNMP data source names come from <IP>_<IFNUM>, instead of just <IFDESC> which is more unique.\n-feature: More options for users such as where to go when the user logs in and whether the user can have their own settings or not.\n\n0.6.5\n-bug: Fixed some of the data source naming issues. You can now use any data source name you want; cacti will take care of making the name \"rrdtool friendly\".\n-feature: Cacti will use PHP's builtin SNMP support if detected, SNMP is overall faster now too. NOTE: PHP's SNMP support may not work with all of your MIB names, you may have to use the OID instead!\n-feature: Basic high speed counter support has been added, use 'hcin'/'hcout' to use it. Also may not work with PHP's builtin SNMP support yet.\n-bug: Using the MAX consolidation function with graph data works better now. You can make graphs that look like the MRTG ones (5 minute maximum). This code still needs a little work though.\n\n0.6.4\n-bug: You can now add the same CDEF to multiple data sources in the same graph.\n-feature: Ability to \"sync\" changes with the .rrd file with rrdtool's TUNE function. Cacti also tries to fill in internal data source path and name information to keep graphs from \"breaking\" when possible.\n-settings: You can now change the PHP Binary path from within cacti.\n-feature: Cacti can now export static images/html files when it gathers data like MRTG did.\n-feature: Multiple graph hierarchies are supported.\n-feature: You can now \"zoom in\" on any portion of the graph hierarchy by clicking on a header item.\n-bug: Some changes were made to make cacti more win32 complaint; a tutorial on how to setup cacti on win32 can be found on the raXnet page.\n-feature: You can now create all graphs for an SNMP host with one click.\n-feature: You can customize the graph title when creating graphs using the 'Make Graph' or 'Make All Graphs' link.\n-feature: Data sources in cacti are no longer limited to 19 characters. If you create a data source name that rrdtool will not like, cacti will automatically modify the name and save it internally for rrdtool-only use.\n\n0.6.3\n-feature: Put limits (HTML 'maxlength') on fields that have a maximum length.\n-feature: Added 'cacti Settings' and 'User Administration' to the cacti menu.\n-feature: Added a 'Step' field for Data Sources to graph data at non-300 second intervals.\n-feature: Added a '--rigid' on/off option, plus the ability to choose between '--alt-autoscale' and '--alt-autoscale-max' when using auto scale.\n-feature: Added a 'Base Value' field to the graphs to adjust how the vertical axis is displayed.\n-feature: Updated the menu/header graphics for a smoother look and easier navigation.\n-feature: cacti now stores its settings in the database instead of config.php, so they can be manipulated under 'cacti Settings'. Database credentials are still located in config.php however.\n-feature: Added a preview of the rrdtool source when creating data sources.\n-feature: Added a \"data source duplicate\" function and moved \"graph duplicate\" to \"Graphs\" on the cacti menu.\n-settings: You can now turn on/off cacti's builtin authentication.\n-settings: You can control what is logged (create, graph, snmp, update).\n-feature: Added a \"Total All Data Sources\" CDEF, which can be used to represent the total of all of the data on a graph.\n-bug: Fixed a few add/edit/delete form-related bugs.\n-docs: Added some more content to the documentation and made it more visible from within cacti.\n\n0.6.2\n-bug: Fixed some bugs when creating CDEF's using multiple data sources.\n-bug: Fixed more SNMP parsing bugs with some versions of net-snmp.\n-feature: added an \"auto-refresh\" feature to the graphs (thanks Nossie).\n-bug: HRULE's and VRULE's acually work now.\n-docs: the beginnings of some real documentation.\n-bug: you can select the color black now.\n\n0.6.1\n-bug: Fixed a parsing bug with snmp, more parsing is done in cacti's code and not via arguments passed to snmpget.\n-auth: Updated the function used to hash passwords (more compatible with older MySQL versions), more strict on document caching.\n-feature: Easier installation: cacti now checks for common problems and gives suggestions. Database updates are also done at this time.\n-bug: Fixed a problem with adding new data input sources.\n-bug: Problem saving the wrong numbers for 'Round Robin Archives'.\n-feature: Ability to preview the output of the cron script from a web browser under 'Cron Printout'.\n-feature: Added 'Logout User' to the menu.\n-bug: Removed some occurances of /var/www/html and replaced them with more dynamic variables.\n\n0.6\n-new tree code\n-some html table issues in graph view mode\n-fixed the settings code for saved graph-view data\n\n0.5\n-initial release\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_aggregate.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/html_form_template.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/reports.php');\ninclude_once('./lib/rrd.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\naggregate_prune_graphs();\n\n$graph_actions = array(\n\t1 => __('Delete'),\n\t4 => __('Place Graphs on Report'),\n\t2 => __('Migrate Aggregate to use a Template'),\n\t3 => __('Create New Aggregate from Aggregates')\n);\n\n$agg_item_actions = array(\n\t10 => __('Associate with Aggregate'),\n\t11 => __('Disassociate with Aggregate')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tgraph_edit();\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\taggregate_graph();\n\t\tbottom_footer();\n\t\tbreak;\n}\n\nfunction add_tree_names_to_actions_array() {\n\tglobal $graph_actions;\n\n\t/* add a list of tree names to the actions dropdown */\n\t$trees = db_fetch_assoc('SELECT id,name FROM graph_tree ORDER BY name');\n\n\tif (cacti_sizeof($trees)) {\n\t\tforeach ($trees as $tree) {\n\t\t\t$graph_actions['tr_' . $tree['id']] = __('Place on a Tree (%s)', $tree['name']);\n\t\t}\n\t}\n}\n\nfunction form_save() {\n\tif (!isset_request_var('save_component_graph')) {\n\t\theader('Location: aggregate_graphs.php?header=false&action=edit&id=' . get_nfilter_request_var('id'));\n\t\treturn null;\n\t}\n\n\t/* remember some often used values */\n\t$local_graph_id        = get_nfilter_request_var('local_graph_id', 0);\n\t$graph_template_id     = get_nfilter_request_var('graph_template_id', 0);\n\t$aggregate_template_id = get_nfilter_request_var('aggregate_template_id', 0);\n\t$graph_title           = form_input_validate(get_nfilter_request_var('title_format'), 'title_format', '', false, 3);\n\tif (is_error_message()) {\n\t\traise_message(2);\n\t\theader('Location: aggregate_graphs.php?header=false&action=edit&id=' . $local_graph_id);\n\t\treturn null;\n\t}\n\n\t/* get the aggregate graph id */\n\t$aggregate_graph_id  = db_fetch_cell_prepared('SELECT id\n\t\tFROM aggregate_graphs\n\t\tWHERE local_graph_id = ?', array($local_graph_id));\n\n\t/* if user disabled template propagation we need to get graph data from form */\n\tif (!isset_request_var('template_propogation')) {\n\t\t$aggregate_template_id = 0;\n\t\t$new_data = aggregate_validate_graph_params($_POST, false);\n\t} else {\n\t\t$new_data = array();\n\t}\n\n\tif (is_error_message()) {\n\t\traise_message(2);\n\t\theader('Location: aggregate_graphs.php?header=false&action=edit&id=' . $local_graph_id);\n\t\treturn null;\n\t}\n\n\t/* save graph data to cacti tables */\n\t$graph_templates_graph_id = aggregate_graph_templates_graph_save(\n\t\t$local_graph_id,\n\t\t$graph_template_id,\n\t\t$graph_title,\n\t\t$aggregate_template_id,\n\t\t$new_data\n\t);\n\n\t/* update title in aggregate graphs table */\n\tdb_execute_prepared('UPDATE aggregate_graphs\n\t\tSET title_format = ?\n\t\tWHERE id = ?',\n\t\tarray($graph_title, $aggregate_graph_id));\n\n\t/* next lets see if any of the aggregate has changed and save as applicable\n\t * if the graph is templates, we can simply ignore.  A simple check will\n\t * determine if aggregation propagation is enabled\n\t */\n\tif (!isset_request_var('template_propogation')) {\n\t\t/* template propagation is disabled */\n\t\t$save                          = array();\n\t\t$save['id']                    = $aggregate_graph_id;\n\t\t$save['aggregate_template_id'] = $aggregate_template_id;\n\t\t$save['template_propogation']  = '';\n\t\t$save['gprint_prefix']         = get_nfilter_request_var('gprint_prefix');\n\t\t$save['total_prefix']          = get_nfilter_request_var('total_prefix');\n\n\t\t$save['total']                 = get_filter_request_var('total');\n\t\t$save['graph_type']            = get_filter_request_var('graph_type');\n\t\t$save['total_type']            = get_filter_request_var('total_type');\n\t\t$save['order_type']            = get_filter_request_var('order_type');\n\n\t\t/* see if anything changed, if so, we will have to push out the aggregate */\n\t\tif (!empty($aggregate_graph_id)) {\n\t\t\t$old = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM aggregate_graphs\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($aggregate_graph_id));\n\n\t\t\t$save_me = 0;\n\n\t\t\t$save_me += ($old['aggregate_template_id'] != $save['aggregate_template_id']);\n\t\t\t$save_me += ($old['template_propogation']  != $save['template_propogation']);\n\t\t\t$save_me += ($old['gprint_prefix']         != $save['gprint_prefix']);\n\t\t\t$save_me += ($old['graph_type']            != $save['graph_type']);\n\t\t\t$save_me += ($old['total']                 != $save['total']);\n\t\t\t$save_me += ($old['total_type']            != $save['total_type']);\n\t\t\t$save_me += ($old['total_prefix']          != $save['total_prefix']);\n\t\t\t$save_me += ($old['order_type']            != $save['order_type']);\n\n\t\t\tif ($save_me) {\n\t\t\t\t$aggregate_graph_id = sql_save($save, 'aggregate_graphs');\n\t\t\t}\n\n\t\t\t/* save the template items now */\n\t\t\t/* get existing item ids and sequences from graph template */\n\t\t\t$graph_templates_items = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT id, sequence\n\t\t\t\t\tFROM graph_templates_item\n\t\t\t\t\tWHERE local_graph_id=0\n\t\t\t\t\tAND graph_template_id = ?\n\t\t\t\t\tORDER BY sequence', array($graph_template_id)),\n\t\t\t\t'id', array('sequence')\n\t\t\t);\n\t\t\t/* get existing aggregate template items */\n\t\t\t$aggregate_graph_items_old = array_rekey(\n\t\t\t\tdb_fetch_assoc_prepared('SELECT *\n\t\t\t\t\tFROM aggregate_graphs_graph_item\n\t\t\t\t\tWHERE aggregate_graph_id = ?\n\t\t\t\t\tORDER BY sequence', array($aggregate_graph_id)),\n\t\t\t\t'graph_templates_item_id', array('aggregate_graph_id', 'graph_templates_item_id', 'sequence', 'color_template', 't_graph_type_id', 'graph_type_id', 't_cdef_id', 'cdef_id', 'item_skip', 'item_total')\n\t\t\t);\n\n\t\t\t/* update graph template item values with posted values */\n\t\t\taggregate_validate_graph_items($_POST, $graph_templates_items);\n\n\t\t\t$items_changed = false;\n\t\t\t$items_to_save = array();\n\t\t\t$sequence = 1;\n\t\t\tforeach($graph_templates_items as $item_id => $data) {\n\t\t\t\t$item_new = array();\n\t\t\t\t$item_new['aggregate_graph_id'] = $aggregate_graph_id;\n\t\t\t\t$item_new['graph_templates_item_id'] = $item_id;\n\n\t\t\t\t$item_new['color_template'] = isset($data['color_template']) ? $data['color_template']:0;\n\t\t\t\t$item_new['item_skip']      = isset($data['item_skip']) ? 'on':'';\n\t\t\t\t$item_new['item_total']     = isset($data['item_total']) ? 'on':'';\n\t\t\t\t$item_new['sequence']       = $sequence;\n\n\t\t\t\t/* compare with old item to see if we need to push out. */\n\t\t\t\tif (!isset($aggregate_graph_items_old[$item_id])) {\n\t\t\t\t\t/* this item does not yet exist */\n\t\t\t\t\t$items_changed = true;\n\t\t\t\t} else {\n\t\t\t\t\t/* compare data from user to data from DB */\n\t\t\t\t\tforeach ($item_new as $field => $new_value) {\n\t\t\t\t\t\tif ($aggregate_graph_items_old[$item_id][$field] != $new_value) {\n\t\t\t\t\t\t\t$items_changed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/* fill in missing fields with db values */\n\t\t\t\t\t$item_new = array_merge($aggregate_graph_items_old[$item_id], $item_new);\n\t\t\t\t}\n\t\t\t\t$items_to_save[] = $item_new;\n\n\t\t\t\t$sequence++;\n\t\t\t}\n\n\t\t\tif ($items_changed) {\n\t\t\t\taggregate_graph_items_save($items_to_save, 'aggregate_graphs_graph_item');\n\t\t\t}\n\n\t\t\tif ($save_me || $items_changed) {\n\t\t\t\tpush_out_aggregates(0, $local_graph_id);\n\t\t\t}\n\t\t}\n\t}\n\n\traise_message(1);\n\n\theader('Location: aggregate_graphs.php?header=false&action=edit&id=' . $local_graph_id);\n}\n\n/* ------------------------\n    The \"actions\" function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $graph_actions, $agg_item_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* we are performing two set's of actions here */\n\t$graph_actions += $agg_item_actions;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tapi_aggregate_remove_multi($selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // migrate to template\n\t\t\t\tapi_aggregate_convert_template($selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '3') { // create aggregate from aggregate\n\t\t\t\t$aggregate_name = get_request_var('aggregate_name');\n\t\t\t\tapi_aggregate_create($aggregate_name, $selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '4') { // add graphs to report\n                $good = true;\n                for ($i=0;($i<cacti_count($selected_items));$i++) {\n                    if (!reports_add_graphs(get_filter_request_var('report_id'), $selected_items[$i], get_request_var('timespan'), get_request_var('align'))) {\n                        raise_message('reports_add_error');\n                        $good = false;\n                        break;\n                    }\n                }\n\n                if ($good) {\n                    raise_message('reports_graphs_added');\n                }\n\t\t\t} elseif (get_request_var('drp_action') == '10') { // associate with aggregate\n\t\t\t\tapi_aggregate_associate($selected_items);\n\t\t\t} elseif (get_request_var('drp_action') == '11') { // dis-associate with aggregate\n\t\t\t\tapi_aggregate_disassociate($selected_items);\n\t\t\t} elseif (preg_match('/^tr_([0-9]+)$/', get_request_var('drp_action'), $matches)) { // place on tree\n\t\t\t\tget_filter_request_var('tree_id');\n\t\t\t\tget_filter_request_var('tree_item_id');\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_tree_item_save(0, get_nfilter_request_var('tree_id'), TREE_ITEM_TYPE_GRAPH, get_nfilter_request_var('tree_item_id'), '', $selected_items[$i], 0, 0, 0, 0, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: aggregate_graphs.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$graph_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$graph_list .= '<li>' . html_escape(get_graph_title($matches[1])) . '</li>';\n\t\t\t$graph_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\t/* add a list of tree names to the actions dropdown */\n\tadd_tree_names_to_actions_array();\n\n\tform_start('aggregate_graphs.php');\n\n\thtml_start_box($graph_actions{get_request_var('drp_action')}, '60%', '', '3', 'center', '');\n\n\tif (isset($graph_array) && cacti_sizeof($graph_array)) {\n\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Aggregate Graph(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete Graph(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // migrate to aggregate\n\t\t\t/* determine the common graph template if any */\n\t\t\tforeach ($_POST as $var => $val) {\n\t\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t\t$local_graph_ids[] = $matches[1];\n\t\t\t\t}\n\t\t\t}\n\t\t\t$lgid = implode(',',$local_graph_ids);\n\n\t\t\t/* for whatever reason,  subquery performance in mysql is sub-optimal.  Therefore, let's do this\n\t\t\t * as a few queries instead.\n\t\t\t */\n\t\t\t$task_items = array_rekey(db_fetch_assoc(\"SELECT DISTINCT task_item_id\n\t\t\t\tFROM graph_templates_item\n\t\t\t\tWHERE local_graph_id IN($lgid)\"), 'task_item_id', 'task_item_id');\n\n\t\t\t$task_items = implode(',', $task_items);\n\n\t\t\t$graph_templates = db_fetch_assoc(\"SELECT DISTINCT graph_template_id\n\t\t\t\tFROM graph_templates_item\n\t\t\t\tWHERE task_item_id IN ($task_items) AND graph_template_id>0\");\n\n\t\t\tif (cacti_sizeof($graph_templates) > 1) {\n\t\t\t\tprint \"<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('The selected Aggregate Graphs represent elements from more than one Graph Template.') . \"</p>\n\t\t\t\t\t\t<p>\" . __('In order to migrate the Aggregate Graphs below to a Template based Aggregate, they must only be using one Graph Template.  Please press \\'Return\\' and then select only Aggregate Graph that utilize the same Graph Template.') . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t} else {\n\t\t\t\t$graph_template      = $graph_templates[0]['graph_template_id'];\n\n\t\t\t\t$aggregate_templates = db_fetch_assoc_prepared('SELECT id, name\n\t\t\t\t\tFROM aggregate_graph_templates\n\t\t\t\t\tWHERE graph_template_id = ?\n\t\t\t\t\tORDER BY name',\n\t\t\t\t\tarray($graph_template));\n\n\t\t\t\tif (cacti_sizeof($aggregate_templates)) {\n\t\t\t\t\tprint \"<tr>\n\t\t\t\t\t\t<td class='textArea' colspan='2'>\n\t\t\t\t\t\t\t<p>\" . __('Click \\'Continue\\' and the following Aggregate Graph(s) will be migrated to use the Aggregate Template that you choose below.') . \"</p>\n\t\t\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\\n\";\n\n\t\t\t\t\tprint \"<tr>\n\t\t\t\t\t\t<td class='textArea' width='170'>\" . __('Aggregate Template:') . \"</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select name='aggregate_template_id'>\\n\";\n\n\t\t\t\t\thtml_create_list($aggregate_templates, 'name', 'id', $aggregate_templates[0]['id']);\n\n\t\t\t\t\tprint \"</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\\n\";\n\n\t\t\t\t\t$save_html = \"<tr><td colspan='2' class='right'><input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel'). \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete Graph(s)') . \"'></td></tr>\";\n\t\t\t\t} else {\n\t\t\t\t\tprint \"<tr>\n\t\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t\t<p>\" . __('There are currently no Aggregate Templates defined for the selected Legacy Aggregates.') . \"</p>\n\t\t\t\t\t\t\t<p>\" . __('In order to migrate the Aggregate Graphs below to a Template based Aggregate, first create an Aggregate Template for the Graph Template \\'%s\\'.', db_fetch_cell_prepared('SELECT name FROM graph_templates WHERE id = ?', array($graph_template))) . \"</p>\n\t\t\t\t\t\t\t<p>\" . __('Please press \\'Return\\' to continue.') . \"</p>\n\t\t\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\\n\";\n\n\t\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t\t}\n\t\t\t}\n\t\t} elseif (get_request_var('drp_action') == '3') { // create aggregate from aggregates\n\t\t\tprint \"<tr>\n\t\t\t\t<td colspan='2' class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to combine the following Aggregate Graph(s) into a single Aggregate Graph.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\tprint \"\t<tr><td class='textArea' width='170'>\" . __('Aggregate Name:') . \"</td></tr>\\n\";\n\t\t\tprint \"\t<tr><td class='textArea'><input type='text' class='ui-state-default ui-corner-all' name='aggregate_name' size='40' value='\" . __esc('New Aggregate') . \"'></td></tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete Graph(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '4') {\n\t\t\tglobal $alignment, $graph_timespans;\n\n\t\t\t$reports = db_fetch_assoc_prepared('SELECT id, name\n\t\t\t\tFROM reports\n\t\t\t\tWHERE user_id = ?\n\t\t\t\tORDER BY name',\n\t\t\t\tarray($_SESSION['sess_user_id']));\n\n\t\t\tif (cacti_sizeof($reports)) {\n\t\t\t\tprint \"<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to add the selected Graphs to the Report below.') . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr><td>\" . __('Report Name') . '<br>';\n\t\t\t\tform_dropdown('report_id', $reports, 'name', 'id', '', '', '0');\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\tprint '<tr><td>' . __('Timespan') . '<br>';\n\t\t\t\tform_dropdown('timespan',$graph_timespans, '', '', '', '', read_user_setting('default_timespan'));\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\tprint '<tr><td>' . __('Align') . '<br>';\n\t\t\t\tform_dropdown('align',$alignment, '', '', '', '', REPORTS_ALIGN_CENTER);\n\t\t\t\tprint \"</td></tr>\\n\";\n\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Add Graphs to Report') . \"'>\";\n\t\t\t} else {\n\t\t\t\tprint \"<tr><td class='even'><span class='textError'>\" . __('You currently have no reports defined.') . \"</span></td></tr>\\n\";\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t}\n\t\t} elseif (get_request_var('drp_action') == '10') { // associate with aggregate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to associate the following Graph(s) with the Aggregate Graph.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Associate Graph(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '11') { // dis-associate with aggregate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to disassociate the following Graph(s) from the Aggregate.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Dis-Associate Graph(s)') . \"'>\";\n\t\t} elseif (preg_match(\"/^tr_([0-9]+)$/\", get_request_var('drp_action'), $matches)) { // place on tree\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to place the following Aggregate Graph(s) under the Tree Branch.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t<p>\" . __('Destination Branch:') . \"<br>\"; grow_dropdown_tree($matches[1], '0', 'tree_item_id', '0'); print \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\n\t\t\t<input type='hidden' name='tree_id' value='\" . html_escape($matches[1]) . \"'>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Place Graph(s) on Tree') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: aggregate_graphs.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"\t<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='local_graph_id' value='\" . (isset_request_var('local_graph_id') ? get_nfilter_request_var('local_graph_id'):0) . \"'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($graph_array) ? serialize($graph_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box(false);\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* -----------------------\n    item - Graph Items\n   ----------------------- */\n\nfunction item() {\n\tglobal $consolidation_functions, $graph_item_types, $struct_graph_item;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (isempty_request_var('id')) {\n\t\t$template_item_list = array();\n\n\t\t$header_label = __('Graph Items [new]');\n\t} else {\n\t\t$template_item_list = db_fetch_assoc_prepared('SELECT\n\t\t\tgti.id, gti.text_format, gti.value, gti.hard_return, gti.graph_type_id,\n\t\t\tgti.consolidation_function_id, dtr.data_source_name, gti.alpha,\n\t\t\tcdef.name AS cdef_name, colors.hex\n\t\t\tFROM graph_templates_item AS gti\n\t\t\tLEFT JOIN data_template_rrd AS dtr ON (gti.task_item_id=dtr.id)\n\t\t\tLEFT JOIN data_local AS dl ON (dtr.local_data_id=dl.id)\n\t\t\tLEFT JOIN data_template_data AS dtd ON (dl.id=dtd.local_data_id)\n\t\t\tLEFT JOIN cdef ON (gti.cdef_id=cdef.id)\n\t\t\tLEFT JOIN colors ON (gti.color_id=colors.id)\n\t\t\tWHERE gti.local_graph_id = ?\n\t\t\tORDER BY gti.sequence',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Graph Items [edit: %s]', html_escape(get_graph_title(get_request_var('id'))));\n\t}\n\n\t$graph_template_id = db_fetch_cell_prepared('SELECT graph_template_id\n\t\tFROM graph_local\n\t\tWHERE id = ?', array(get_request_var('id')));\n\n\tif (empty($graph_template_id)) {\n\t\t$add_text = 'aggregate_items.php?action=item_edit&local_graph_id=' . get_request_var('id');\n\t} else {\n\t\t$add_text = '';\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', $add_text);\n\tdraw_graph_items_list($template_item_list, 'aggregate_items.php', 'local_graph_id=' . get_request_var('id') , (empty($graph_template_id) ? false : true));\n\thtml_end_box(false);\n}\n\n/* ------------------------------------\n    graph - Graphs\n   ------------------------------------ */\n\nfunction graph_edit() {\n\tglobal $config, $struct_graph, $struct_aggregate_graph, $image_types, $consolidation_functions, $graph_item_types, $struct_graph_item;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t/* purge any old graphs */\n\taggregate_prune_graphs(get_request_var('id'));\n\n\tif (isset_request_var('reset')) {\n\t\t$_SESSION['aggregate_referer'] = 'aggregate_graphs.php';\n\t} elseif (isset($_SERVER['HTTP_REFERER']) && !substr_count($_SERVER['HTTP_REFERER'], 'aggregate_graphs.php')) {\n\t\t$_SESSION['aggregate_referer'] = sanitize_uri($_SERVER['HTTP_REFERER']);\n\t} elseif (isset($_SERVER['HTTP_REFERER']) && !isset($_SESSION['aggregate_referer'])) {\n\t\t$_SESSION['aggregate_referer'] = sanitize_uri($_SERVER['HTTP_REFERER']);\n\t}\n\t$referer = $_SESSION['aggregate_referer'];\n\n\t$use_graph_template = false;\n\t$aginfo = array();\n\t$graphs = array();\n\tif (!isempty_request_var('id')) {\n\t\t$graphs = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE local_graph_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$aginfo = db_fetch_row_prepared('SELECT *\n\t\t\tFROM aggregate_graphs\n\t\t\tWHERE local_graph_id = ?',\n\t\t\tarray($graphs['local_graph_id']));\n\n\t\tif ($aginfo['title_format'] == '') {\n\t\t\t$aginfo['title_format'] = get_graph_title($graphs['local_graph_id']);\n\t\t}\n\n\t\t$header_label = '[edit: ' . html_escape(get_graph_title(get_request_var('id'))) . ']';\n\t}\n\n\tif (cacti_sizeof($aginfo)) {\n\t\tif ($aginfo['aggregate_template_id'] > 0) {\n\t\t\t$template = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM aggregate_graph_templates\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($aginfo['aggregate_template_id']));\n\t\t} else {\n\t\t\t$template = $aginfo;\n\t\t}\n\n\t\t$aggregate_tabs = array(\n\t\t\t'details' => __('Details'),\n\t\t\t'items'   => __('Items'),\n\t\t\t'preview' => __('Preview')\n\t\t);\n\t} else {\n\t\t$template = array();\n\t\t$aggregate_tabs = array(\n\t\t\t'details' => __('Details'),\n\t\t\t'preview' => __('Preview')\n\t\t);\n\t}\n\n\t/* ================= input validation and session storage ================= */\n\tif (isset_request_var('tab')) {\n\t\tswitch(get_nfilter_request_var('tab')) {\n\t\tcase 'details':\n\t\tcase 'items':\n\t\tcase 'preview':\n\t\t\t$_SESSION['agg_tab'] = get_nfilter_request_var('tab');\n\t\t\tset_request_var('tab', get_nfilter_request_var('tab'));\n\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (isset($_SESSION['agg_tab'])) {\n\t\t\t\tset_request_var('tab', $_SESSION['agg_tab']);\n\t\t\t}else{\n\t\t\t\t$_SESSION['agg_tab'] = 'details';\n\t\t\t\tset_request_var('tab', 'details');\n\t\t\t}\n\t\t}\n\t} elseif (isset($_SESSION['agg_tab'])) {\n\t\tset_request_var('tab', $_SESSION['agg_tab']);\n\t} else {\n\t\tset_request_var('tab', 'details');\n\t}\n\t/* ================= input validation ================= */\n\n\t$current_tab = get_nfilter_request_var('tab');\n\n\t/* draw the categories tabs on the top of the page */\n\tprint \"<div class='tabs'>\\n\";\n\tprint \"<div class='aggtabs'><nav><ul role='tablist'>\\n\";\n\n\t$i = 0;\n\tif (cacti_sizeof($aggregate_tabs)) {\n\t\tforeach (array_keys($aggregate_tabs) as $tab_short_name) {\n\t\t\tif ($tab_short_name == 'details' || (!isempty_request_var('id'))) {\n\t\t\t\tprint \"<li class='subTab'><a class='tab \" . ($tab_short_name == $current_tab ? \"selected'\" : \"'\") .\n\t\t\t\t\t\" href='\" . html_escape($config['url_path'] . 'aggregate_graphs.php?action=edit&id=' . get_request_var('id') . \"&tab=$tab_short_name\") . \"'>\" . $aggregate_tabs[$tab_short_name] . \"</a></li>\\n\";\n\t\t\t}\n\n\t\t\t$i++;\n\t\t}\n\t}\n\tprint \"</ul>\\n\";\n\n\t/* handle debug mode */\n\tif (isset_request_var('debug')) {\n\t\tif (get_filter_request_var('debug') == '0') {\n\t\t\tkill_session_var('graph_debug_mode');\n\t\t} elseif (get_filter_request_var('debug') == '1') {\n\t\t\t$_SESSION['graph_debug_mode'] = true;\n\t\t}\n\t}\n\n\tif (isset($_SESSION['graph_debug_mode'])) {\n\t\t$message = __('Turn Off Graph Debug Mode');\n\t} else {\n\t\t$message = __('Turn On Graph Debug Mode');\n\t}\n\n\tif (!isempty_request_var('id') && $current_tab == 'preview') {\n\t\tprint \"<ul style='float:right;'><li><a class='pic' href='\" . html_escape('aggregate_graphs.php?action=edit&id=' . get_request_var('id') . '&tab=' . get_request_var('tab') .  '&debug=' . (isset($_SESSION['graph_debug_mode']) ? '0' : '1')) . \"'>\" . $message . \"</a></li></ul></nav>\\n</div></div>\\n\";\n\t} elseif (!isempty_request_var('id') && $current_tab == 'details' && (!cacti_sizeof($template))) {\n\t\tprint \"<ul style='float:right;'><li><a id='toggle_items' class='pic' href='#'>\" . __('Show Item Details') . \"</a></li></ul></nav>\\n</div></div>\\n\";\n\t} else {\n\t\tprint \"</nav></div></div>\\n\";\n\t}\n\n\tif (!isempty_request_var('id') && $current_tab == 'preview') {\n\t\thtml_start_box(__('Aggregate Preview [%s]', $header_label), '100%', '', '3', 'center', '');\n\t\t?>\n\t\t<tr class='even'><td class='center'>\n\t\t\t<img src='<?php print html_escape($config['url_path'] . 'graph_image.php?action=edit&disable_cache=1&local_graph_id=' . get_request_var('id') . '&rra_id=' . read_user_setting('default_rra_id') . '&random=' . mt_rand());?>' alt=''>\n\t\t</td></tr>\n\t\t<?php\n\t\tif (isset($_SESSION['graph_debug_mode']) && isset_request_var('id')) {\n\t\t\t$graph_data_array['output_flag'] = RRDTOOL_OUTPUT_STDERR;\n\t\t\t$graph_data_array['print_source'] = 1;\n\t\t\t?>\n\t\t\t<tr><td class='left'>\n\t\t\t\t<div style='overflow:auto;'>\n\t\t\t\t<span class='textInfo'><?php print __('RRDtool Command:');?></span><br>\n\t\t\t\t<pre class='monoSpace'><?php print @rrdtool_function_graph(get_request_var('id'), 1, $graph_data_array);?></pre>\n\t\t\t\t<span class='textInfo'><?php print __('RRDtool Says:');?></span><br>\n\t\t\t\t<?php unset($graph_data_array['print_source']);?>\n\t\t\t\t<pre class='monoSpace'><?php print @rrdtool_function_graph(get_request_var('id'), 1, $graph_data_array);?></pre>\n\t\t\t\t</div>\n\t\t\t</td></tr>\n\t\t\t<?php\n\t\t}\n\t\t?>\n\t\t<?php\n\t\thtml_end_box(false);\n\t}\n\n\tif (!isempty_request_var('id') && $current_tab == 'items') {\n\t\taggregate_items();\n\t\tbottom_footer();\n\t\texit;\n\t}\n\n\tform_start('aggregate_graphs.php', 'template_edit');\n\n\t/* we will show the templated representation only when when there is a template and propagation is enabled */\n\tif (!isempty_request_var('id') && $current_tab == 'details') {\n\t\tif (cacti_sizeof($template)) {\n\t\t\tprint \"<div id='templated'>\";\n\n\t\t\thtml_start_box(__('Aggregate Graph %s', $header_label), '100%', true, '3', 'center', '');\n\n\t\t\t/* add template propagation to the structure */\n\t\t\tdraw_edit_form(\n\t\t\t\tarray(\n\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t'fields' => inject_form_variables($struct_aggregate_graph, (isset($aginfo) ? $aginfo : array()))\n\t\t\t\t)\n\t\t\t);\n\n\t\t\thtml_end_box(true, true);\n\n\t\t\tif (isset($template)) {\n\t\t\t\tdraw_aggregate_graph_items_list(0, $template['graph_template_id'], $aginfo);\n\t\t\t}\n\n\t\t\tform_hidden_box('save_component_template', '1', '');\n\n\t\t\t?>\n\t\t\t<script type='text/javascript'>\n\n\t\t\tvar templated_selectors = [\n\t\t\t\t'#gprint_prefix',\n\t\t\t\t'#graph_type',\n\t\t\t\t'#total',\n\t\t\t\t'#total_type',\n\t\t\t\t'#total_prefix',\n\t\t\t\t'#order_type',\n\t\t\t\t'select[id^=\"agg_color\"]',\n\t\t\t\t'input[id^=\"agg_total\"]',\n\t\t\t\t'input[id^=\"agg_skip\"]',\n\t\t\t\t'#image_format_id',\n\t\t\t\t'#height',\n\t\t\t\t'#width',\n\t\t\t\t'#slope_mode',\n\t\t\t\t'#auto_scale',\n\t\t\t\t'#auto_scale_opts',\n\t\t\t\t'#auto_scale_log',\n\t\t\t\t'#scale_log_units',\n\t\t\t\t'#auto_scale_rigid',\n\t\t\t\t'#auto_padding',\n\t\t\t\t'#export',\n\t\t\t\t'#upper_limit',\n\t\t\t\t'#lower_limit',\n\t\t\t\t'#base_value',\n\t\t\t\t'#unit_value',\n\t\t\t\t'#unit_exponent_value',\n\t\t\t\t'#alt_y_grid',\n\t\t\t\t'#right_axis',\n\t\t\t\t'#right_axis_label',\n\t\t\t\t'#right_axis_format',\n\t\t\t\t'#right_axis_formatter',\n\t\t\t\t'#left_axis_formatter',\n\t\t\t\t'#no_gridfit',\n\t\t\t\t'#unit_length',\n\t\t\t\t'#tab_width',\n\t\t\t\t'#dynamic_labels',\n\t\t\t\t'#force_rules_legend',\n\t\t\t\t'#legend_position',\n\t\t\t\t'#legend_direction',\n\t\t\t\t'#vertical_label'\n\t\t\t];\n\n\t\t\t$(function() {\n\t\t\t\tif ($('#template_propogation').is(':checked')) {\n\t\t\t\t\tfor (var i = 0; i < templated_selectors.length; i++) {\n\t\t\t\t\t\t$(templated_selectors[i] ).prop('disabled', true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$('#row_template_propogation').hide();\n\t\t\t\t\t$('#row_spacer0').hide();\n\t\t\t\t}\n\n\t\t\t\t$('input[id^=\"agg_total\"], input[id^=\"agg_skip\"]').click(function() {\n\t\t\t\t\tid = $(this).attr('id');\n\n\t\t\t\t\tif (id.indexOf('skip') > 0) {\n\t\t\t\t\t\taltId = id.replace('skip', 'total');\n\t\t\t\t\t} else {\n\t\t\t\t\t\taltId = id.replace('total', 'skip');\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($('#'+id).is(':checked')) {\n\t\t\t\t\t\t$('#'+altId).prop('checked', false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#'+altId).prop('checked', true);\n\t\t\t\t\t}\n\n\t\t\t\t\tchangeTotals();\n\t\t\t\t});\n\n\t\t\t\t$('#total').change(function() {\n\t\t\t\t\tchangeTotals();\n\t\t\t\t});\n\n\t\t\t\t$('#total_type').change(function() {\n\t\t\t\t\tchangeTotalsType();\n\t\t\t\t});\n\n\t\t\t\t$('#template_propogation').change(function() {\n\t\t\t\t\tif (!$('#template_propogation').is(':checked')) {\n\t\t\t\t\t\tfor (var i = 0; i < templated_selectors.length; i++) {\n\t\t\t\t\t\t\t$(templated_selectors[i]).prop('disabled', false);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (var i = 0; i < templated_selectors.length; i++) {\n\t\t\t\t\t\t\t$(templated_selectors[i]).prop('disabled', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tfunction changeTotals() {\n\t\t\t\tswitch ($('#total').val()) {\n\t\t\t\t\tcase '<?php print AGGREGATE_TOTAL_NONE;?>':\n\t\t\t\t\t\t$('#row_total_type').hide();\n\t\t\t\t\t\t$('#row_total_prefix').hide();\n\t\t\t\t\t\t$('#row_order_type').show();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '<?php print AGGREGATE_TOTAL_ALL;?>':\n\t\t\t\t\t\t$('#row_total_type').show();\n\t\t\t\t\t\t$('#row_total_prefix').show();\n\t\t\t\t\t\t$('#row_order_type').show();\n\t\t\t\t\t\tchangeTotalsType();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '<?php print AGGREGATE_TOTAL_ONLY;?>':\n\t\t\t\t\t\t$('#row_total_type').show();\n\t\t\t\t\t\t$('#row_total_prefix').show();\n\t\t\t\t\t\t//$('#order_type').prop('disabled', true);\n\t\t\t\t\t\tchangeTotalsType();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction changeTotalsType() {\n\t\t\t\tif ($('#total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_SIMILAR;?>) {\n\t\t\t\t\tif ($('#total_prefix').val() == '') {\n\t\t\t\t\t\t$('#total_prefix').attr('value', '<?php print __('Total');?>');\n\t\t\t\t\t}\n\t\t\t\t} else if ($('#total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_ALL;?>) {\n\t\t\t\t\tif ($('#total_prefix').val() == '') {\n\t\t\t\t\t\t$('#total_prefix').attr('value', '<?php print __('All Items');?>');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t</script>\n\t\t\t<?php\n\t\t\tprint '</div>';\n\t\t}\n\n\t\t/* we will show the classic representation only when we are not templating */\n\t\tprint \"<div id='classic'>\";\n\n\t\t?>\n\t\t<input type='hidden' id='graph_template_graph_id' name='graph_template_graph_id' value='<?php print (isset($graphs) ? $graphs['id'] : '0');?>'>\n\t\t<input type='hidden' id='local_graph_template_graph_id' name='local_graph_template_graph_id' value='<?php print (isset($graphs) ? $graphs['local_graph_template_graph_id'] : '0');?>'>\n\t\t<?php\n\n\t\t/* graph item list goes here */\n\t\tif (empty($graphs['graph_template_id']) && cacti_sizeof($template) == 0) {\n\t\t\titem();\n\t\t}\n\n\t\tif (empty($graphs['graph_template_id'])) {\n\t\t\thtml_start_box(__('Graph Configuration'), '100%', true, '3', 'center', '');\n\n\t\t\t$form_array = array();\n\n\t\t\tforeach ($struct_graph as $field_name => $field_array) {\n\t\t\t\tif ($field_array['method'] != 'spacer') {\n\t\t\t\t\tif ($field_name != 'title') {\n\t\t\t\t\t\t$form_array += array($field_name => $struct_graph[$field_name]);\n\n\t\t\t\t\t\t$form_array[$field_name]['value']   = (isset($graphs) ? $graphs[$field_name] : '');\n\t\t\t\t\t\t$form_array[$field_name]['form_id'] = (isset($graphs) ? $graphs['id'] : '0');\n\n\t\t\t\t\t\tif (!(($use_graph_template == false) || ($graphs_template['t_' . $field_name] == 'on'))) {\n\t\t\t\t\t\t\t$form_array[$field_name]['method']      = 'template_' . $form_array[$field_name]['method'];\n\t\t\t\t\t\t\t$form_array[$field_name]['description'] = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$form_array += array($field_name => $struct_graph[$field_name]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdraw_edit_form(\n\t\t\t\tarray(\n\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t'fields' => $form_array\n\t\t\t\t)\n\t\t\t);\n\n\t\t\thtml_end_box(true, true);\n\t\t}\n\n\t\tform_hidden_box('save_component_graph','1','');\n\t\tform_hidden_box('save_component_input','1','');\n\t\tform_hidden_box('rrdtool_version', get_rrdtool_version(), '');\n\t\tform_save_button($referer, 'return', 'id');\n\n\t\techo '</div>';\n\n\t\t?>\n\t\t<script type='text/javascript'>\n\n\t\t$().ready(function() {\n\t\t\tdynamic();\n\t\t\tif (!$('#templated')) {\n\t\t\t\t$('#local_graph_template_graph_id').next('table').css('display', 'none');\n\t\t\t}\n\t\t});\n\n\t\t$('#toggle_items').click(function() {\n\t\t\tif ($('#toggle_items').is(\":contains('<?php print __('Show');?>')\")) {\n\t\t\t\t$('#local_graph_template_graph_id').next('table').css('display', '');\n\t\t\t\t$('#toggle_items').text('<?php print __('Hide Item Details');?>');\n\t\t\t} else {\n\t\t\t\t$('#local_graph_template_graph_id').next('table').css('display', 'none');\n\t\t\t\t$('#toggle_items').text('<?php print __('Show Item Details');?>');\n\t\t\t}\n\t\t});\n\n\t\tfunction dynamic() {\n\t\t\tif ($('#scale_log_units')) {\n\t\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\t\tif (($('#rrdtool_version').val() != '1.0.0') &&\n\t\t\t\t\t($('#auto_scale_log').is(':checked'))) {\n\t\t\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction changeScaleLog() {\n\t\t\tif ($('#scale_log_units')) {\n\t\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\t\tif (($('#rrdtool_version').val() != '1.0.0') &&\n\t\t\t\t\t($('#auto_scale_log').is(':checked'))) {\n\t\t\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t</script>\n\t\t<?php\n\t}\n}\n\nfunction aggregate_items() {\n\tglobal $agg_item_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'rfilter' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_IS_REGEX,\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'matching' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'on',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'title_cache',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_agraph_item');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL = 'aggregate_graphs.php' +\n\t\t\t'?action=edit&tab=items&id='+$('#id').val() +\n\t\t\t'&rows=' + $('#rows').val() +\n\t\t\t'&rfilter=' + base64_encode($('#rfilter').val()) +\n\t\t\t'&matching=' + $('#matching').is(':checked') +\n\t\t\t'&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'aggregate_graphs.php?action=edit&tab=items&id='+$('#id').val()+'&clear=true&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#rfilter').change(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#form_graphs').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Matching Graphs'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_graphs' action='aggregate_graphs.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='rfilter' size='45' onChange='applyFilter()' value='<?php print get_request_var('rfilter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Graphs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='matching' onChange='applyFilter()' <?php print (get_request_var('matching') == 'on' || get_request_var('matching') == 'true' ? ' checked':'');?>>\n\t\t\t\t\t\t\t<label for='matching'><?php print __('Part of Aggregate');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' onClick='clearFilter()' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t<input type='hidden' name='tab' value='items'>\n\t\t\t<input type='hidden' id='id' value='<?php print get_request_var('id');?>'>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box(false);\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('rfilter') == '') {\n\t\t$sql_where = '';\n\t} elseif (validate_is_regex(get_request_var('rfilter'))) {\n\t\t$sql_where = 'WHERE gtg.title_cache RLIKE \"' . get_request_var('rfilter') . '\"';\n\t} else {\n\t\t$filters = explode(' ', get_request_var('rfilter'));\n\t\t$sql_where = '';\n\t\t$sql_where = aggregate_make_sql_where($sql_where, $filters, 'gtg.title_cache');\n\t}\n\n\tif (get_request_var('matching') != 'false') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND':'WHERE') . ' (agi.local_graph_id IS NOT NULL)';\n\t}\n\n\t$graph_template = db_fetch_cell_prepared('SELECT graph_template_id\n\t\tFROM aggregate_graphs AS ag\n\t\tWHERE ag.local_graph_id = ?',\n\t\tarray(get_request_var('id')));\n\n\t$aggregate_id = db_fetch_cell_prepared('SELECT id\n\t\tFROM aggregate_graphs\n\t\tWHERE local_graph_id = ?',\n\t\tarray(get_request_var('id')));\n\n\tif (!empty($graph_template)) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND':'WHERE') . \" (gtg.graph_template_id=$graph_template)\";\n\t}\n\n\t/* print checkbox form for validation */\n\tform_start('aggregate_graphs.php', 'chk');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(DISTINCT gl.id) AS total\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gtg.local_graph_id=gl.id\n\t\tLEFT JOIN (SELECT DISTINCT local_graph_id FROM aggregate_graphs_items) AS agi\n\t\tON gtg.local_graph_id=agi.local_graph_id\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$graph_list = db_fetch_assoc(\"SELECT\n\t\tgtg.id, gtg.local_graph_id, gtg.height, gtg.width, gtg.title_cache, agi.local_graph_id AS agg_graph_id\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gtg.local_graph_id=gl.id\n\t\tLEFT JOIN (\n\t\t\tSELECT DISTINCT local_graph_id\n\t\t\tFROM aggregate_graphs_items\n\t\t\tWHERE aggregate_graph_id=$aggregate_id) AS agi\n\t\tON gtg.local_graph_id=agi.local_graph_id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('aggregate_graphs.php?action=edit&tab=items&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Graphs'), 'page', 'main');\n\n\tprint $nav;\n\n\t$display_text = array(\n\t\t'title_cache'    => array('display' => __('Graph Title'), 'align' => 'left', 'sort' => 'ASC'),\n\t\t'local_graph_id' => array('display' => __('ID'), 'align' => 'right', 'sort' => 'ASC'),\n\t\t'agg_graph_id'   => array('display' => __('Included in Aggregate'), 'align' => 'left', 'sort' => 'ASC'),\n\t\t'height'         => array('display' => __('Size'), 'align' => 'right', 'sort' => 'ASC'));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false, 'aggregate_graphs.php?action=edit&id=' . get_request_var('id'));\n\n\tif (cacti_sizeof($graph_list) > 0) {\n\t\tforeach ($graph_list as $graph) {\n\t\t\t/* we're escaping strings here, so no need to escape them on form_selectable_cell */\n\t\t\tform_alternate_row('line' . $graph['local_graph_id'], true);\n\n\t\t\tif (validate_is_regex(get_request_var('rfilter'))) {\n\t\t\t\tform_selectable_cell(filter_value($graph['title_cache'], get_request_var('rfilter')), $graph['local_graph_id']);\n\t\t\t} else {\n\t\t\t\tform_selectable_ecell(get_request_var('rfilter') != '' ? aggregate_format_text($graph['title_cache'], get_request_var('rfilter')) : $graph['title_cache'], $graph['local_graph_id']);\n\t\t\t}\n\n\t\t\tform_selectable_cell($graph['local_graph_id'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_selectable_cell(($graph['agg_graph_id'] != '' ? \"<span class='associated'>\" . __('Yes') . '</span>':\"<span class='notAssociated'>\" . __('No') . \"</span>\"), $graph['local_graph_id']);\n\t\t\tform_selectable_ecell($graph['height'] . 'x' . $graph['width'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_checkbox_cell($graph['title_cache'], $graph['local_graph_id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td><em>' . __('No Graphs Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\t/* put the nav bar on the bottom as well */\n\tprint $nav;\n\n\t/* add a list of tree names to the actions dropdown */\n\tadd_tree_names_to_actions_array();\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tform_hidden_box('local_graph_id', get_request_var('id'), '');\n\n\tdraw_actions_dropdown($agg_item_actions);\n\n\tform_end();\n}\n\nfunction aggregate_make_sql_where($sql_where, $items, $field) {\n\tif ($sql_where != '') {\n\t\t$sql_where .= ' AND (';\n\t} else {\n\t\t$sql_where  = 'WHERE (';\n\t}\n\n\t$indentation = 0;\n\t$termcount   = 0;\n\n\tif (cacti_sizeof($items)) {\n\t\tforeach($items as $i) {\n\t\t\t$i = trim($i);\n\t\t\twhile (substr($i,0,1) == '(') {\n\t\t\t\t$indentation++;\n\t\t\t\t$termcount = 0;\n\t\t\t\t$sql_where .= '(';\n\t\t\t\t$i = substr($i, 1);\n\t\t\t}\n\n\t\t\t$split = strpos($i, ')');\n\t\t\tif ($split !== false) {\n\t\t\t\t$end = trim(substr($i, $split));\n\t\t\t\t$i   = substr($i, 0, $split);\n\t\t\t} else {\n\t\t\t\t$end = '';\n\t\t\t}\n\n\t\t\tif ($i != '') {\n\t\t\t\tif (strtolower($i) == 'and') {\n\t\t\t\t\t$sql_where .= ' AND ';\n\t\t\t\t} elseif (strtolower($i) == 'or') {\n\t\t\t\t\t$sql_where .= ' OR ';\n\t\t\t\t} else {\n\t\t\t\t\t$sql_where .= ($termcount > 0 ? ' OR ':'') . $field . \" LIKE '%\" . trim($i) . \"%'\";\n\t\t\t\t\t$termcount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($end != '') {\n\t\t\t\twhile (substr($end, 0, 1) == ')') {\n\t\t\t\t\t$indentation--;\n\t\t\t\t\t$termcount = 0;\n\t\t\t\t\t$sql_where .= ')';\n\t\t\t\t\t$end = trim(substr($end, 1));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$sql_where .= ')';\n\n\treturn trim($sql_where);\n}\n\nfunction aggregate_format_text($text, $filter) {\n\t$items = explode(' ', $filter);\n\t$tags  = array();\n\tforeach($items as $i) {\n\t\t$i = trim($i);\n\t\t$i = str_replace('(','',$i);\n\t\t$i = str_replace(')','',$i);\n\t\tif (strtolower($i) == 'and' || strtolower($i) == 'or') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (substr_count($text, $i) !== false) {\n\t\t\t$tagno = rand();\n\t\t\t$tags[$tagno] = $i;\n\t\t\t$text = str_replace($i, \"<<$tagno>>\", $text);\n\t\t}\n\t}\n\n\tif (cacti_sizeof($tags)) {\n\t\tforeach($tags as $k => $t) {\n\t\t\t$text = str_replace(\"<<$k>>\", \"<span class='filteredValue'>\" . html_escape($t) . \"</span>\", $text);\n\t\t}\n\t}\n\n\treturn $text;\n}\n\nfunction aggregate_graph() {\n\tglobal $graph_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'title_cache',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_agraph');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'aggregate_graphs.php';\n\t\tstrURL += '?rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&template_id=' + $('#template_id').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'aggregate_graphs.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#filter').change(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#form_graphs').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Aggregate Graphs'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_graphs' action='aggregate_graphs.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print get_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='template_id' name='template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$templates = db_fetch_assoc('SELECT DISTINCT at.id, at.name\n\t\t\t\t\t\t\t\tFROM aggregate_graph_templates AS at\n\t\t\t\t\t\t\t\tINNER JOIN aggregate_graphs AS ag\n\t\t\t\t\t\t\t\tON ag.aggregate_template_id=at.id\n\t\t\t\t\t\t\t\tORDER BY name');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($templates) > 0) {\n\t\t\t\t\t\t\t\tforeach ($templates as $template) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $template['id'] . \"'\"; if (get_request_var('template_id') == $template['id']) { print ' selected'; } print '>' . html_escape($template['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Graphs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = 'WHERE (gtg.graph_template_id=0 AND gl.host_id=0)';\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= \" AND (gtg.title_cache LIKE '%\" . get_request_var('filter') . \"%'\" .\n\t\t\t\" OR ag.title_format LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\n\tif (get_request_var('template_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('template_id') == '0') {\n\t\t$sql_where .= ' AND (ag.aggregate_template_id=0 OR ag.aggregate_template_id IS NULL)';\n\t} elseif (!isempty_request_var('template_id')) {\n\t\t$sql_where .= ' AND ag.aggregate_template_id=' . get_request_var('template_id');\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(DISTINCT gl.id) AS total\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gtg.local_graph_id=gl.id\n\t\tINNER JOIN aggregate_graphs AS ag\n\t\tON gtg.local_graph_id=ag.local_graph_id\n\t\tLEFT JOIN aggregate_graph_templates AS agt\n\t\tON agt.id=ag.aggregate_template_id\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$graph_list = db_fetch_assoc(\"SELECT\n\t\tgtg.id, gtg.local_graph_id, gtg.height, gtg.width, gtg.title_cache, agt.name\n\t\tFROM graph_templates_graph AS gtg\n\t\tINNER JOIN graph_local AS gl\n\t\tON gtg.local_graph_id=gl.id\n\t\tINNER JOIN aggregate_graphs AS ag\n\t\tON gl.id=ag.local_graph_id\n\t\tLEFT JOIN aggregate_graph_templates AS agt\n\t\tON agt.id=ag.aggregate_template_id\n\t\t$sql_where\n\t\tAND ag.id IS NOT NULL\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('aggregate_graphs.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Aggregate Graphs'), 'page', 'main');\n\n\tform_start('aggregate_graphs.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'title_cache'    => array('display' => __('Graph Title'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The title for the Aggregate Graphs')),\n\t\t'local_graph_id' => array('display' => __('ID'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The internal database identifier for this object')),\n\t\t'name'           => array('display' => __('Aggregate Template'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The Aggregate Template that this Aggregate Graphs is based upon')),\n\t\t'height'         => array('display' => __('Size'), 'align' => 'right', 'sort' => 'ASC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false, 'aggregate_graphs.php?filter=' . get_request_var('filter'));\n\n\tif (cacti_sizeof($graph_list)) {\n\t\tforeach ($graph_list as $graph) {\n\t\t\t/* we're escaping strings here, so no need to escape them on form_selectable_cell */\n\t\t\t$template_name = html_escape($graph['name']);\n\t\t\tform_alternate_row('line' . $graph['local_graph_id'], true);\n\t\t\tform_selectable_cell(filter_value(title_trim($graph['title_cache'], read_config_option('max_title_length')), get_request_var('filter'), 'aggregate_graphs.php?action=edit&id=' . $graph['local_graph_id']), $graph['local_graph_id']);\n\t\t\tform_selectable_cell($graph['local_graph_id'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_selectable_cell((empty($graph['name']) ? '<em>' . __('None') . '</em>' : filter_value($template_name, get_request_var('filter'))), $graph['local_graph_id']);\n\t\t\tform_selectable_ecell($graph['height'] . 'x' . $graph['width'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_checkbox_cell($graph['title_cache'], $graph['local_graph_id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"' . (cacti_sizeof($display_text)+1) . '\"><em>' . __('No Aggregate Graphs Found') .'</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($graph_list)) {\n\t\t/* put the nav bar on the bottom as well */\n\t\tprint $nav;\n\t}\n\n\t/* add a list of tree names to the actions dropdown */\n\tadd_tree_names_to_actions_array();\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($graph_actions);\n\n\t/* remove old graphs */\n\tpurge_old_graphs();\n\n\tform_end();\n}\n\nfunction purge_old_graphs() {\n\t/* workaround to handle purged graphs */\n\t$old_graphs = array_rekey(db_fetch_assoc('SELECT DISTINCT local_graph_id\n\t\tFROM aggregate_graphs_items AS pagi\n\t\tLEFT JOIN graph_local AS gl ON pagi.local_graph_id=gl.id\n\t\tWHERE gl.id IS NULL AND local_graph_id>0'), 'local_graph_id',  'local_graph_id');\n\n\tif (cacti_sizeof($old_graphs)) {\n\t\tdb_execute('DELETE FROM aggregate_graphs_items\n\t\t\tWHERE local_graph_id IN (' . implode(',', $old_graphs) . ')');\n\t}\n\n\t$old_aggregates = array_rekey(db_fetch_assoc('SELECT DISTINCT local_graph_id\n\t\tFROM aggregate_graphs AS pag\n\t\tLEFT JOIN graph_local AS gl\n\t\tON pag.local_graph_id=gl.id\n\t\tWHERE gl.id IS NULL AND local_graph_id>0'), 'local_graph_id', 'local_graph_id');\n\n\t$old_agg_ids = array_rekey(db_fetch_assoc('SELECT DISTINCT pag.id\n\t\tFROM aggregate_graphs AS pag\n\t\tLEFT JOIN graph_local AS gl\n\t\tON pag.local_graph_id=gl.id\n\t\tWHERE gl.id IS NULL'), 'id', 'id');\n\n\tif (cacti_sizeof($old_aggregates)) {\n\t\tdb_execute('DELETE FROM graph_templates_item\n\t\t\tWHERE local_graph_id IN (' . implode(',', $old_aggregates) . ')');\n\n\t\tdb_execute('DELETE FROM graph_templates_graph\n\t\t\tWHERE local_graph_id IN (' . implode(',', $old_aggregates) . ')');\n\n\t\tdb_execute('DELETE FROM aggregate_graphs\n\t\t\tWHERE local_graph_id IN (' . implode(',', $old_aggregates) . ')');\n\t}\n\n\tif (cacti_sizeof($old_agg_ids)) {\n\t\tdb_execute('DELETE FROM aggregate_graphs_items\n\t\t\tWHERE aggregate_graph_id IN (' . implode(',', $old_agg_ids) . ')');\n\t}\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('./include/auth.php');\ninclude_once('./lib/api_aggregate.php');\n\n$aggregate_actions = array(\n\t1 => __('Delete')\n);\n\n/* set default action */\nset_default_action();\n\nif (get_request_var('action') == 'save') {\n\tif (isset_request_var('id') && get_filter_request_var('id') == 0 && isset_request_var('graph_template_id_prev') && get_filter_request_var('graph_template_id_prev') == 0) {\n\t\tset_request_var('action', 'edit');\n\t}\n}\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\taggregate_form_save();\n\t\tbreak;\n\tcase 'actions':\n\t\taggregate_form_actions();\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\taggregate_template_edit();\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\taggregate_template();\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n/**\n * aggregate_form_save\tthe save function\n */\nfunction aggregate_form_save() {\n\t/* make sure we are saving aggregate template */\n\tif (!isset_request_var('save_component_template')) {\n\t\theader('Location: aggregate_templates.php?header=false&action=edit&id=' . get_nfilter_request_var('id'));\n\t\treturn null;\n\t}\n\n\t$save1 = array();\n\n\t/* updating existing template or creating a new one? */\n\tif (isset_request_var('id') && get_request_var('id') > 0) {\n\t\t$is_new = false;\n\t\t$save1['id'] = get_nfilter_request_var('id');\n\t} else {\n\t\t$is_new = true;\n\t\t$save1['id'] = 0;\n\t}\n\n\t/* set some defaults for possibly disabled values */\n\tif (!isset_request_var('total'))        set_request_var('total', 0);\n\tif (!isset_request_var('total_type'))   set_request_var('total_type', 0);\n\tif (!isset_request_var('order_type'))   set_request_var('order_type', 0);\n\tif (!isset_request_var('total_prefix')) set_request_var('total_prefix', '');\n\n\t/* populate aggregate template save array and validate posted values*/\n\t$save1['name']              = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t$save1['graph_template_id'] = get_filter_request_var('graph_template_id_prev');\n\t$save1['gprint_prefix']     = form_input_validate(get_nfilter_request_var('gprint_prefix'), 'gprint_prefix', '', true, 3);\n\t$save1['graph_type']        = form_input_validate(get_nfilter_request_var('graph_type'), 'graph_type', '', false, 3);\n\t$save1['total']             = form_input_validate(get_nfilter_request_var('total'), 'total', '', false, 3);\n\t$save1['total_type']        = form_input_validate(get_nfilter_request_var('total_type'), 'total_type', '', false, 3);\n\t$save1['total_prefix']      = form_input_validate(get_nfilter_request_var('total_prefix'), 'total_prefix', '', true, 3);\n\t$save1['order_type']        = form_input_validate(get_nfilter_request_var('order_type'), 'order_type', '', false, 3);\n\t$save1['user_id']           = $_SESSION['sess_user_id'];\n\n\t/* form validation failed */\n\tif (is_error_message()) {\n\t\theader('Location: aggregate_templates.php?header=false&action=edit&id=' . get_nfilter_request_var('id'));\n\t\treturn null;\n\t}\n\n\tcacti_log('AGGREGATE GRAPH TEMPLATE Saved ID: ' . $save1['id'] . ' Name: ' . $save1['name'], false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\n\t/* do a quick comparison to see if anything changed */\n\tif ($is_new == false) {\n\t\t$old = db_fetch_row_prepared('SELECT *\n\t\t\tFROM aggregate_graph_templates\n\t\t\tWHERE id = ?',\n\t\t\tarray($save1['id']));\n\n\t\t$save_me = 0;\n\n\t\t$save_me += ($old['name']          != $save1['name']);\n\t\t$save_me += ($old['gprint_prefix'] != $save1['gprint_prefix']);\n\t\t$save_me += ($old['graph_type']    != $save1['graph_type']);\n\t\t$save_me += ($old['total']         != $save1['total']);\n\t\t$save_me += ($old['total_prefix']  != $save1['total_prefix']);\n\t\t$save_me += ($old['order_type']    != $save1['order_type']);\n\t} else {\n\t\t$save_me = 1;\n\t}\n\n\tif ($save_me) {\n\t\t$id = sql_save($save1, 'aggregate_graph_templates', 'id');\n\n\t\t/* update children of the template */\n\t\tdb_execute_prepared(\"UPDATE aggregate_graphs\n\t\t\tSET gprint_prefix = ?, graph_type = ?, total = ?, total_prefix = ?, order_type = ?\n\t\t\tWHERE aggregate_template_id = ?\n\t\t\tAND template_propogation='on'\",\n\t\t\tarray($save1['gprint_prefix'], $save1['graph_type'],\n\t\t\t\t$save1['total'], $save1['total_prefix'],  $save1['order_type'], $id));\n\n\t\tcacti_log('AGGREGATE GRAPH TEMPLATE Saved ID: ' . $id, false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\t} else {\n\t\t$id = $save1['id'];\n\t}\n\n\tif (!$id) {\n\t\traise_message(2);\n\t\theader('Location: aggregate_templates.php?header=false&action=edit&id=' . get_nfilter_request_var('id'));\n\t\treturn null;\n\t}\n\n\t/* save extra graph parameters */\n\t/* validate posted graph params */\n\t$params_new = aggregate_validate_graph_params($_POST, true);\n\t$params_new['aggregate_template_id'] = $id;\n\n\t/* compare new graph param values with existing in DB.\n\t * We need to know if there were changes so we only\n\t * rebuild existing graphs if needed. */\n\t$params_changed = false;\n\n\t$params_old = db_fetch_row_prepared('SELECT *\n\t\tFROM aggregate_graph_templates_graph\n\t\tWHERE aggregate_template_id = ?',\n\t\tarray($id));\n\n\tif (!empty($params_old)) {\n\t\tforeach ($params_old as $field => $value_old) {\n\t\t\tif (isset($params_new[$field]) && $params_new[$field] != $value_old) {\n\t\t\t\t$params_changed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$params_changed = true;\n\t}\n\n\n\t/* save only if all posted form fields passed validation */\n\tif (!is_error_message()) {\n\t\tsql_save($params_new, 'aggregate_graph_templates_graph', 'aggregate_template_id', false);\n\t}\n\n\t/* save the template items now */\n\t/* get existing item ids and sequences from graph template */\n\t$graph_templates_items = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT id, sequence\n\t\t\tFROM graph_templates_item\n\t\t\tWHERE local_graph_id=0\n\t\t\tAND graph_template_id = ?',\n\t\t\tarray($save1['graph_template_id'])),\n\t\t'id', array('sequence')\n\t);\n\n\t/* get existing aggregate template items */\n\t$aggregate_template_items_old = array_rekey(\n\t\tdb_fetch_assoc_prepared('SELECT *\n\t\t\tFROM aggregate_graph_templates_item\n\t\t\tWHERE aggregate_template_id = ?', array($id)),\n\t\t'graph_templates_item_id', array('sequence', 'color_template', 't_graph_type_id', 'graph_type_id', 't_cdef_id', 'cdef_id', 'item_skip', 'item_total')\n\t);\n\n\t/* update graph template item values with posted values */\n\taggregate_validate_graph_items($_POST, $graph_templates_items);\n\n\t$items_changed = false;\n\t$items_to_save = array();\n\n\tforeach($graph_templates_items as $item_id => $data) {\n\t\t$item_new = array();\n\t\t$item_new['aggregate_template_id']   = $id;\n\t\t$item_new['graph_templates_item_id'] = $item_id;\n\n\t\t$item_new['color_template'] = isset($data['color_template']) ? $data['color_template']:0;\n\t\t$item_new['item_skip']      = isset($data['item_skip']) ? 'on':'';\n\t\t$item_new['item_total']     = isset($data['item_total']) ? 'on':'';\n\t\t$item_new['sequence']       = isset($data['sequence']) ? $data['sequence']:0;\n\n\t\t/* compare with old item to see if we need to push out. */\n\t\tif (!isset($aggregate_template_items_old[$item_id])) {\n\t\t\t/* this item does not yet exist */\n\t\t\t$items_changed = true;\n\t\t} else {\n\t\t\t// fill in missing fields with db values\n\t\t\t$item_new = array_merge($aggregate_template_items_old[$item_id], $item_new);\n\t\t\t/* compare data from user to data from DB */\n\t\t\tforeach ($data as $field => $new_value) {\n\t\t\t\tif ($aggregate_template_items_old[$item_id][$field] != $new_value)\n\t\t\t\t\t$items_changed = true;\n\t\t\t}\n\t\t}\n\t\t$items_to_save[] = $item_new;\n\t}\n\n\tif ($items_changed) {\n\t\taggregate_graph_items_save($items_to_save, 'aggregate_graph_templates_item');\n\t}\n\n\tif ($save_me || $params_changed || $items_changed) {\n\t\tpush_out_aggregates($id);\n\t}\n\n\traise_message(1);\n\n\theader('Location: aggregate_templates.php?header=false&action=edit&id=' . (empty($id) ? get_nfilter_request_var('id') : $id));\n}\n\n\nfunction aggregate_get_graph_items($table, $id) {\n\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n/**\n * aggregate_form_actions\t\tthe action function\n */\nfunction aggregate_form_actions() {\n\tglobal $aggregate_actions, $config;\n\tinclude_once($config['base_path'] . '/api_aggregate.php');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM aggregate_graph_templates WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM aggregate_graph_templates_item WHERE ' . array_to_sql_or($selected_items, 'aggregate_template_id'));\n\t\t\t\tdb_execute('DELETE FROM aggregate_graph_templates_graph WHERE ' . array_to_sql_or($selected_items, 'aggregate_template_id'));\n\t\t\t\tdb_execute(\"UPDATE aggregate_graphs SET aggregate_template_id=0, template_propogation='' WHERE \" . array_to_sql_or($selected_items, 'aggregate_template_id'));\n\t\t\t}\n\t\t} else {\n\t\t}\n\n\t\theader('Location: aggregate_templates.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$aggregate_list = ''; $i = 0;\n\n\t/* loop through each of the color templates selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\t\t\t$aggregate_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM aggregate_graph_templates WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$aggregate_array[] = $matches[1];\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('aggregate_templates.php');\n\n\thtml_start_box($aggregate_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($aggregate_array) && cacti_sizeof($aggregate_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\tprint \"<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to Delete the following Aggregate Graph Template(s).') . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$aggregate_list</ul></div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete Color Template(s)') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: aggregate_templates.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($aggregate_array) ? serialize($aggregate_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/**\n * aggregate_template_edit\tedit the color template\n */\nfunction aggregate_template_edit() {\n\tglobal $image_types, $struct_aggregate_template;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$template = db_fetch_row_prepared('SELECT *\n\t\t\tFROM aggregate_graph_templates\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Aggregate Template [edit: %s]', html_escape($template['name']));\n\t} else {\n\t\t$header_label = __('Aggregate Template [new]');\n\t}\n\n\t/* populate the graph template id if it's set */\n\tif (isset_request_var('graph_template_id') && !isset($template)) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('graph_template_id');\n\t\t/* ==================================================== */\n\t\t$template['graph_template_id'] = get_nfilter_request_var('graph_template_id');\n\t\t$template['id']                = 0;\n\t}\n\n\tform_start('aggregate_templates.php', 'template_edit');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($struct_aggregate_template, (isset($template) ? $template : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tif (isset($template)) {\n\t\tdraw_aggregate_graph_items_list(0, $template['graph_template_id'], $template);\n\n\t\t/* Draw Graph Configuration form, so user can override some parameters from graph template */\n\t\tdraw_aggregate_template_graph_config($template['id'], $template['graph_template_id']);\n\t}\n\n\tform_hidden_box('id', (isset($template['id']) ? $template['id'] : '0'), '0');\n\tform_hidden_box('save_component_template', '1', '');\n\tform_save_button('aggregate_templates.php', 'return', 'id');\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\tif ($('#id').val() == 0) {\n\t\t\t$('[id^=\"agg_total_\"]').prop('checked', true);\n\t\t}\n\n\t\tif ($('#graph_template_id').val() == 0) {\n\t\t\t$('#row_name').hide();\n\t\t\t$('#row_spacer1').hide();\n\t\t\t$('#row_gprint_prefix').hide();\n\t\t\t$('#row_graph_type').hide();\n\t\t\t$('#row_total').hide();\n\t\t\t$('#row_total_type').hide();\n\t\t\t$('#row_total_prefix').hide();\n\t\t\t$('#row_order_type').hide();\n\n\t\t\t$('#graph_template_id').change(function() {\n\t\t\t\t$('#template_edit').submit();\n\t\t\t});\n\n\t\t\t$('#save_component_template').parent().next('table').css('display', 'none');\n\t\t} else {\n\t\t\t$('#graph_template_id').prop('disabled', true);\n\t\t\tif ($('#graph_template_id').selectmenu('instance') !== undefined) {\n\t\t\t\t$('#graph_template_id').selectmenu('disable');\n\t\t\t}\n\t\t}\n\n\t\t$('#total').change(function() {\n\t\t\tchangeTotals();\n\t\t});\n\n\t\t$('#total_type').change(function() {\n\t\t\tchangeTotalsType();\n\t\t});\n\n\t\t$('input[id^=\"agg_total\"], input[id^=\"agg_skip\"]').click(function() {\n\t\t\tid = $(this).attr('id');\n\n\t\t\tif (id.indexOf('skip') > 0) {\n\t\t\t\taltId = id.replace('skip', 'total');\n\t\t\t} else {\n\t\t\t\taltId = id.replace('total', 'skip');\n\t\t\t}\n\n\t\t\tif ($('#'+id).is(':checked')) {\n\t\t\t\t$('#'+altId).prop('checked', false);\n\t\t\t} else {\n\t\t\t\t$('#'+altId).prop('checked', true);\n\t\t\t}\n\t\t});\n\n\t\tchangeTotals();\n\t});\n\n\tfunction changeTotals() {\n\t\tswitch ($('#total').val()) {\n\t\t\tcase '<?php print AGGREGATE_TOTAL_NONE;?>':\n\t\t\t\t$('#row_total_type').hide();\n\t\t\t\t$('#row_total_prefix').hide();\n\t\t\t\t$('#row_order_type').show();\n\t\t\t\tbreak;\n\t\t\tcase '<?php print AGGREGATE_TOTAL_ALL;?>':\n\t\t\t\t$('#row_total_type').show();\n\t\t\t\t$('#row_total_prefix').show();\n\t\t\t\t$('#row_order_type').show();\n\t\t\t\tchangeTotalsType();\n\t\t\t\tbreak;\n\t\t\tcase '<?php print AGGREGATE_TOTAL_ONLY;?>':\n\t\t\t\t$('#row_total_type').show();\n\t\t\t\t$('#row_total_prefix').show();\n\t\t\t\t//$('#order_type').prop('disabled', true);\n\t\t\t\tchangeTotalsType();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction changeTotalsType() {\n\t\tif ($('#total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_SIMILAR;?>) {\n\t\t\tif ($('#total_prefix').val() == '') {\n\t\t\t\t$('#total_prefix').attr('value', 'Total');\n\t\t\t}\n\t\t} else if ($('#total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_ALL;?>) {\n\t\t\tif ($('#total_prefix').val() == '') {\n\t\t\t\t$('#total_prefix').attr('value', 'All Items');\n\t\t\t}\n\t\t}\n\t}\n\t</script>\n\t<?php\n}\n\n/**\n * aggregate_template\n */\nfunction aggregate_template() {\n\tglobal $aggregate_actions, $item_rows, $config;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'pgt.name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_agg_tmp');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\tform_start('aggregate_templates.php', 'template');\n\n\thtml_start_box(__('Aggregate Templates'), '100%', '', '3', 'center', 'aggregate_templates.php?action=edit');\n\n\t$filter_html = '<tr class=\"even\">\n\t\t<td>\n\t\t\t<table class=\"filterTable\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t' . __('Search') . '\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type=\"text\" class=\"ui-state-default ui-corner-all\" id=\"filter\" size=\"25\" value=\"' . html_escape_request_var('filter') . '\">\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t' . __('Templates') . '\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id=\"rows\" onChange=\"applyFilter()\">\n\t\t\t\t\t\t<option value=\"-1\" ';\n\n\tif (get_request_var(\"rows\") == \"-1\") {\n\t\t$filter_html .= 'selected';\n\t}\n\n\t$filter_html .= '>' . __('Default') . '</option>';\n\tif (cacti_sizeof($item_rows)) {\n\t\tforeach ($item_rows as $key => $value) {\n\t\t\t$filter_html .= \"<option value='\" . $key . \"'\";\n\t\t\tif (get_request_var(\"rows\") == $key) {\n\t\t\t\t$filter_html .= \" selected\";\n\t\t\t}\n\t\t\t$filter_html .= \">\" . $value . \"</option>\\n\";\n\t\t}\n\t}\n\n\t$filter_html .= '</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"has_graphs\" ' . (get_request_var('has_graphs') == 'true' ? 'checked':'') . ' onChange=\"applyFilter()\">\n\t\t\t\t\t\t\t<label for=\"has_graphs\">' . __('Has Graphs') . '</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type=\"button\" class=\"ui-button ui-corner-all ui-widget\" value=\"' . __esc('Go') . '\" id=\"refresh\">\n\t\t\t\t\t\t\t<input type=\"button\" class=\"ui-button ui-corner-all ui-widget\" value=\"' . __esc('Clear') . '\" id=\"clear\">\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td>\n\t</tr>';\n\n\tprint $filter_html;\n\n\thtml_end_box();\n\n\tform_end();\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where = '';\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (pgt.name LIKE '%\" . get_request_var('filter') . \"%' OR gt.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . 'graphs.graphs>0';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(pgt.id)\n\t\tFROM aggregate_graph_templates AS pgt\n\t\tLEFT JOIN (\n\t\t\tSELECT aggregate_template_id, COUNT(*) AS graphs\n\t\t\tFROM aggregate_graphs\n\t\t\tGROUP BY aggregate_template_id\n\t\t) AS graphs\n\t\tON pgt.id=graphs.aggregate_template_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=pgt.graph_template_id\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$template_list = db_fetch_assoc(\"SELECT pgt.*, graphs.graphs, gt.name AS graph_template_name\n\t\tFROM aggregate_graph_templates AS pgt\n\t\tLEFT JOIN (\n\t\t\tSELECT aggregate_template_id, COUNT(*) AS graphs\n\t\t\tFROM aggregate_graphs\n\t\t\tGROUP BY aggregate_template_id\n\t\t) AS graphs\n\t\tON pgt.id=graphs.aggregate_template_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=pgt.graph_template_id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('aggregate_templates.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Aggregate Templates'), 'page', 'main');\n\n\tform_start('aggregate_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'pgt.name'            => array('display' => __('Template Title'), 'align' => 'left', 'sort' => 'ASC'),\n\t\t'nosort'              => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('Aggregate Templates that are in use can not be Deleted.  In use is defined as being referenced by an Aggregate.')),\n\t\t'graphs.graphs'       => array('display' => __('Graphs Using'), 'align' => 'right', 'sort' => 'DESC'),\n\t\t'graph_template_name' => array('display' => __('Graph Template'), 'align' => 'left', 'sort' => 'ASC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['graphs'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $template['id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'aggregate_templates.php?action=edit&id=' . $template['id'] . '&page=1'), $template['id']);\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $template['id'], '', 'right');\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"' . html_escape('aggregate_graphs.php?reset=true&template_id=' . $template['id']) . '\">' . number_format_i18n($template['graphs'], '-1') . '</a>', $template['id'], '', 'right');\n\t\t\tform_selectable_cell(filter_value($template['graph_template_name'], get_request_var('filter')), $template['id']);\n\t\t\tform_checkbox_cell($template['graph_template_name'], $template['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='\" . (cacti_sizeof($display_text)+1) . \"'><em>\" . __('No Aggregate Templates Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\t/* put the nav bar on the bottom as well */\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($aggregate_actions);\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'aggregate_templates.php';\n\t\tstrURL += '?rows=' + $('#rows').val();\n\t\tstrURL += '&has_graphs=' + $('#has_graphs').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'aggregate_templates.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#filter').change(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#template').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* include cacti base functions */\ninclude('./include/auth.php');\ninclude_once('./lib/snmp.php');\ninclude_once('./lib/poller.php');\n\n$network_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Disable'),\n\t3 => __('Enable'),\n\t4 => __('Discover Now'),\n\t5 => __('Cancel Discovery')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\ncase 'save':\n\tform_save();\n\n\tbreak;\ncase 'actions':\n\tform_actions();\n\n\tbreak;\ncase 'edit':\n\ttop_header();\n\tnetwork_edit();\n\tbottom_footer();\n\n\tbreak;\ndefault:\n\ttop_header();\n\tnetworks();\n\tbottom_footer();\n\n\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tif (isset_request_var('save_component_network')) {\n\t\t$network_id = api_networks_save($_POST);\n\n\t\theader('Location: automation_networks.php?header=false&action=edit&id=' . (empty($network_id) ? get_nfilter_request_var('id') : $network_id));\n\t}\n}\n\nfunction api_networks_remove($network_id){\n\tdb_execute_prepared('DELETE FROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n\n\tdb_execute_prepared('DELETE FROM automation_devices\n\t\tWHERE network_id = ?',\n\t\tarray($network_id));\n}\n\nfunction api_networks_enable($network_id){\n\tdb_execute_prepared('UPDATE automation_networks\n\t\tSET enabled=\"on\"\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n}\n\nfunction api_networks_disable($network_id){\n\tdb_execute_prepared('UPDATE automation_networks\n\t\tSET enabled=\"\"\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n}\n\nfunction api_networks_cancel($network_id){\n\tdb_execute_prepared('UPDATE IGNORE automation_processes\n\t\tSET command=\"cancel\"\n\t\tWHERE task=\"tmaster\"\n\t\tAND network_id = ?',\n\t\tarray($network_id));\n}\n\nfunction api_networks_discover($network_id, $discover_debug) {\n\tglobal $config;\n\n\t$enabled   = db_fetch_cell_prepared('SELECT enabled\n\t\tFROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n\n\t$running = db_fetch_cell_prepared('SELECT count(*)\n\t\tFROM automation_processes\n\t\tWHERE network_id = ?',\n\t\tarray($network_id));\n\n\t$name = db_fetch_cell_prepared('SELECT name\n\t\tFROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n\n\t$poller_id = db_fetch_cell_prepared('SELECT poller_id\n\t\tFROM automation_networks\n\t\tWHERE id = ?',\n\t\tarray($network_id));\n\n\tif ($enabled == 'on') {\n\t\tif (!$running) {\n\t\t\tif ($config['poller_id'] == $poller_id) {\n\t\t\t\t$args_debug = ($discover_debug) ? ' --debug' : '';\n\t\t\t\texec_background(read_config_option('path_php_binary'), '-q ' . read_config_option('path_webroot') . \"/poller_automation.php --network=$network_id --force\" . $args_debug);\n\t\t\t} else {\n\t\t\t\t$args_debug = ($discover_debug) ? '&debug=true' : '';\n\t\t\t\t$hostname = db_fetch_cell_prepared('SELECT hostname\n\t\t\t\t\tFROM poller\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($poller_id));\n\n\t\t\t\t$fgc_contextoption = get_default_contextoption();\n\t\t\t\t$fgc_context       = stream_context_create($fgc_contextoption);\n\t\t\t\t$response          = @file_get_contents(get_url_type() .'://' . $hostname . $config['url_path'] . 'remote_agent.php?action=discover&network=' . $network_id . $args_debug, false, $fgc_context);\n\t\t\t}\n\t\t} else {\n\t\t\t$_SESSION['automation_message'] = \"Can Not Restart Discovery for Discovery in Progress for Network '$name'\";\n\t\t\traise_message('automation_message');\n\t\t}\n\t} else {\n\t\t$_SESSION['automation_message'] = \"Can Not Perform Discovery for Disabled Network '$name'\";\n\t\traise_message('automation_message');\n\t}\n\n\tforce_session_data();\n}\n\nfunction api_networks_save($post) {\n\tif (empty($post['network_id'])) {\n\t\t$save['id']            = form_input_validate($post['id'], 'id', '^[0-9]+$', false, 3);\n\n\t\t/* general information */\n\t\t$save['name']          = form_input_validate($post['name'], 'name', '', false, 3);\n\t\t$save['poller_id']     = form_input_validate($post['poller_id'], 'poller_id', '^[0-9]+$', false, 3);\n\t\t$save['site_id']       = form_input_validate($post['site_id'], 'site_id', '^[0-9]+$', false, 3);\n\t\t$save['subnet_range']  = form_input_validate($post['subnet_range'], 'subnet_range', '', false, 3);\n\t\t$save['dns_servers']   = form_input_validate($post['dns_servers'], 'dns_servers', '', true, 3);\n\n\t\t$save['threads']       = form_input_validate($post['threads'], 'threads', '^[0-9]+$', false, 3);\n\t\t$save['run_limit']     = form_input_validate($post['run_limit'], 'run_limit', '^[0-9]+$', false, 3);\n\n\t\t$save['enabled']              = (isset($post['enabled']) ? 'on':'');\n\n\t\t/* notification settings */\n\t\t$save['notification_enabled'] = (isset($post['notification_enabled']) ? 'on':'');\n\t\t$save['notification_email']   = form_input_validate($post['notification_email'], 'notification_email', '', true, 3);\n\n\t\t$save['notification_fromname']  = form_input_validate($post['notification_fromname'], 'notification_fromname', '', true, 3);\n\t\t$save['notification_fromemail'] = form_input_validate($post['notification_fromemail'], 'notification_fromemail', '', true, 3);\n\n\t\t$save['enable_netbios']       = (isset($post['enable_netbios']) ? 'on':'');\n\t\t$save['add_to_cacti']         = (isset($post['add_to_cacti']) ? 'on':'');\n\t\t$save['same_sysname']         = (isset($post['same_sysname']) ? 'on':'');\n\t\t$save['rerun_data_queries']   = (isset($post['rerun_data_queries']) ? 'on':'');\n\n\t\t/* discovery connectivity settings */\n\t\t$save['snmp_id']       = form_input_validate($post['snmp_id'], 'snmp_id', '^[0-9]+$', false, 3);\n\t\t$save['ping_method']   = form_input_validate($post['ping_method'], 'ping_method', '^[0-9]+$', false, 3);\n\t\t$save['ping_port']     = form_input_validate($post['ping_port'], 'ping_port', '^[0-9]+$', false, 3);\n\t\t$save['ping_timeout']  = form_input_validate($post['ping_timeout'], 'ping_timeout', '^[0-9]+$', false, 3);\n\t\t$save['ping_retries']  = form_input_validate($post['ping_retries'], 'ping_retries', '^[0-9]+$', false, 3);\n\n\t\t/* discovery schedule settings */\n\t\t$save['sched_type']    = form_input_validate($post['sched_type'], 'sched_type', '^[0-9]+$', false, 3);\n\t\t$save['start_at']      = form_input_validate($post['start_at'], 'start_at', '', false, 3);;\n\n\t\t// accomodate a schedule start change\n\t\tif ($post['orig_start_at'] != $post['start_at']) {\n\t\t\t$save['next_start'] = '0000-00-00';\n\t\t}\n\n\t\tif ($post['orig_sched_type'] != $post['sched_type']) {\n\t\t\t$save['next_start'] = '0000-00-00';\n\t\t}\n\n\t\t$save['recur_every']   = form_input_validate($post['recur_every'], 'recur_every', '', true, 3);\n\n\t\t$save['day_of_week']   = form_input_validate(isset($post['day_of_week']) ? implode(',', $post['day_of_week']):'', 'day_of_week', '', true, 3);\n\t\t$save['month']         = form_input_validate(isset($post['month']) ? implode(',', $post['month']):'', 'month', '', true, 3);\n\t\t$save['day_of_month']  = form_input_validate(isset($post['day_of_month']) ? implode(',', $post['day_of_month']):'', 'day_of_month', '', true, 3);\n\t\t$save['monthly_week']  = form_input_validate(isset($post['monthly_week']) ? implode(',', $post['monthly_week']):'', 'monthly_week', '', true, 3);\n\t\t$save['monthly_day']   = form_input_validate(isset($post['monthly_day']) ? implode(',', $post['monthly_day']):'', 'monthly_day', '', true, 3);\n\n\t\t/* check for bad rules */\n\t\tif ($save['sched_type'] == '3') {\n\t\t\tif ($save['day_of_week'] == '') {\n\t\t\t\t$save['enabled'] = '';\n\t\t\t\t$_SESSION['automation_message'] = __('ERROR: You must specify the day of the week.  Disabling Network %s!.', $net);\n\t\t\t\traise_message('automation_message');\n\t\t\t}\n\t\t} elseif ($save['sched_type'] == '4') {\n\t\t\tif ($save['month'] == '' || $save['day_of_month'] == '') {\n\t\t\t\t$save['enabled'] = '';\n\t\t\t\t$_SESSION['automation_message'] = __('ERROR: You must specify both the Months and Days of Month.  Disabling Network %s!', $net);\n\t\t\t\traise_message('automation_message');\n\t\t\t}\n\t\t} elseif ($save['sched_type'] == '5') {\n\t\t\tif ($save['month'] == '' || $save['monthly_day'] == '' || $save['monthly_week'] == '') {\n\t\t\t\t$save['enabled'] = '';\n\t\t\t\t$_SESSION['automation_message'] = __('ERROR: You must specify the Months, Weeks of Months, and Days of Week.  Disabling Network %s!', $net);\n\t\t\t\traise_message('automation_message');\n\t\t\t}\n\t\t}\n\n\t\t/* validate the network definitions and rais error if failed */\n\t\t$continue  = true;\n\t\t$total_ips = 0;\n\t\t$networks  = explode(',', $save['subnet_range']);\n\n\t\t$i = 0;\n\t\tif (cacti_sizeof($networks)) {\n\t\t\tforeach($networks as $net) {\n\t\t\t\t$ips = automation_calculate_total_ips($networks, $i);\n\t\t\t\tif ($ips !== false) {\n\t\t\t\t\t$total_ips += $ips;\n\t\t\t\t} else {\n\t\t\t\t\t$continue = false;\n\t\t\t\t\t$_SESSION['automation_message'] = __(\"ERROR: Network '%s' is Invalid.\", $net);\n\t\t\t\t\traise_message('automation_message');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\n\t\tif ($continue) {\n\t\t\t$save['total_ips'] = $total_ips;\n\n\t\t\t$network_id = 0;\n\t\t\tif (!is_error_message()) {\n\t\t\t\t$network_id = sql_save($save, 'automation_networks');\n\n\t\t\t\tif ($network_id) {\n\t\t\t\t\traise_message(1);\n\t\t\t\t} else {\n\t\t\t\t\traise_message(2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $network_id;\n\t\t}\n\t}\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $config, $network_actions, $fields_networkss_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tforeach($selected_items as $item) {\n\t\t\t\t\tapi_networks_remove($item);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { /* enable */\n\t\t\t\tforeach($selected_items as $item) {\n\t\t\t\t\tapi_networks_enable($item);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* disable */\n\t\t\t\tforeach($selected_items as $item) {\n\t\t\t\t\tapi_networks_disable($item);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { /* run now */\n\t\t\t\t$discover_debug = isset_request_var('discover_debug');\n\n\t\t\t\tforeach($selected_items as $item) {\n\t\t\t\t\tapi_networks_discover($item, $discover_debug);\n\t\t\t\t}\n\n\t\t\t\tsleep(2);\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '5') { /* cancel */\n\t\t\t\tforeach($selected_items as $item) {\n\t\t\t\t\tapi_networks_cancel($item);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_networks.php?header=false');\n\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$networks_list = ''; $i = 0;\n\n\t/* loop through each of the device types selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$networks_info = db_fetch_row_prepared('SELECT name FROM automation_networks WHERE id = ?', array($matches[1]));\n\t\t\t$networks_list .= '<li>' . html_escape($networks_info['name']) . '</li>';\n\t\t\t$networks_array[$i] = $matches[1];\n\t\t}\n\n\t\t$i++;\n\t}\n\n\ttop_header();\n\n\tform_start('automation_networks.php');\n\n\thtml_start_box($network_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Network(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$networks_list</ul></div>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t} elseif (get_nfilter_request_var('drp_action') == '3') { /* enable */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to enable the following Network(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$networks_list</ul></div>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* disable */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to disable the following Network(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$networks_list</ul></div>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t} elseif (get_nfilter_request_var('drp_action') == '4') { /* discover now */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to discover the following Network(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$networks_list</ul></div>\n\t\t\t\t<p><input type='checkbox' id='discover_debug' name='discover_debug' value='1'>\n\t\t\t\t<label id='discover_debug_label' for='discover_debug'>\" . __('Run discover in debug mode') . \"</label></p>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t} elseif (get_nfilter_request_var('drp_action') == '5') { /* cancel discovery now */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to cancel on going Network Discovery(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$networks_list</ul></div>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t}\n\n\tif (!isset($networks_array)) {\n\t\traise_message(40);\n\t\theader('Location: automation_networks.php?header=false');\n\t\texit;\n\t} else {\n\t\t$save_html = \"<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' name='save'>\";\n\t}\n\n\tprint \"<tr>\n\t\t<td colspan='2' class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($networks_array) ? serialize($networks_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\" . ($save_html != '' ? \"\n\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='cancel' value='\" . __esc('Cancel') . \"'>\n\t\t\t$save_html\" : \"<input type='submit' class='ui-button ui-corner-all ui-widget' name='cancel' value='\" . __esc('Return') . \"'>\") . \"\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\nfunction network_edit() {\n\tglobal $config, $ping_methods;;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$sched_types = array(\n\t\t'1' => __('Manual'),\n\t\t'2' => __('Daily'),\n\t\t'3' => __('Weekly'),\n\t\t'4' => __('Monthly'),\n\t\t'5' => __('Monthly on Day'));\n\n\tif (!isempty_request_var('id')) {\n\t\t$network = db_fetch_row_prepared('SELECT * FROM automation_networks WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('Network Discovery Range [edit: %s]', html_escape($network['name']));\n\t} else {\n\t\t$header_label = __('Network Discovery Range [new]');\n\t}\n\n\t/* file: mactrack_device_types.php, action: edit */\n\t$fields = array(\n\t'spacer0' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('General Settings'),\n\t\t'collapsible' => 'true'\n\t\t),\n\t'name' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Name'),\n\t\t'description' => __('Give this Network a meaningful name.'),\n\t\t'value' => '|arg1:name|',\n\t\t'max_length' => '250',\n\t\t'placeholder' => __('New Network Discovery Range')\n\t\t),\n\t'poller_id' => array(\n\t\t'method' => 'drop_sql',\n\t\t'friendly_name' => __('Data Collector'),\n\t\t'description' => __('Choose the Cacti Data Collector/Poller to be used to gather data from this Device.'),\n\t\t'value' => '|arg1:poller_id|',\n\t\t'default' => read_config_option('default_poller'),\n\t\t'sql' => 'SELECT id, name FROM poller ORDER BY name',\n\t\t),\n\t'site_id' => array(\n\t\t'method' => 'drop_sql',\n\t\t'friendly_name' => __('Associated Site'),\n\t\t'description' => __('Choose the Cacti Site that you wish to associate discovered Devices with.'),\n\t\t'value' => '|arg1:site_id|',\n\t\t'default' => read_config_option('default_site'),\n\t\t'sql' => 'SELECT id, name FROM sites ORDER BY name',\n\t\t'none_value' => __('None')\n\t\t),\n\t'subnet_range' => array(\n\t\t'method' => 'textarea',\n\t\t'friendly_name' => __('Subnet Range'),\n\t\t'description' => __('Enter valid Network Ranges separated by commas.  You may use an IP address, a Network range such as 192.168.1.0/24 or 192.168.1.0/255.255.255.0, or using wildcards such as 192.168.*.*'),\n\t\t'value' => '|arg1:subnet_range|',\n\t\t'textarea_rows' => '4',\n\t\t'textarea_cols' => '80',\n\t\t'max_length' => '1024',\n\t\t'placeholder' => '192.168.1.0/24'\n\t\t),\n\t'total_ips' => array(\n\t\t'method' => 'other',\n\t\t'friendly_name' => __('Total IP Addresses'),\n\t\t'description' => __('Total addressable IP Addresses in this Network Range.'),\n\t\t'value' => (isset($network['total_ips']) ? number_format_i18n($network['total_ips']) : 0)\n\t\t),\n\t'dns_servers' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Alternate DNS Servers'),\n\t\t'description' => __('A space delimited list of alternate DNS Servers to use for DNS resolution. If blank, the poller OS will be used to resolve DNS names.'),\n\t\t'value' => '|arg1:dns_servers|',\n\t\t'max_length' => '250',\n\t\t'placeholder' => __('Enter IPs or FQDNs of DNS Servers')\n\t\t),\n\t'sched_type' => array(\n\t\t'method' => 'drop_array',\n\t\t'friendly_name' => __('Schedule Type'),\n\t\t'description' => __('Define the collection frequency.'),\n\t\t'value' => '|arg1:sched_type|',\n\t\t'array' => $sched_types,\n\t\t'default' => 1\n\t\t),\n\t'threads' => array(\n\t\t'method' => 'drop_array',\n\t\t'friendly_name' => __('Discovery Threads'),\n\t\t'description' => __('Define the number of threads to use for discovering this Network Range.'),\n\t\t'value' => '|arg1:threads|',\n\t\t'array' => array(\n\t\t\t'1'  => __('%d Thread', 1),\n\t\t\t'2'  => __('%d Threads', 2),\n\t\t\t'3'  => __('%d Threads', 3),\n\t\t\t'4'  => __('%d Threads', 4),\n\t\t\t'5'  => __('%d Threads', 5),\n\t\t\t'6'  => __('%d Threads', 6),\n\t\t\t'7'  => __('%d Threads', 7),\n\t\t\t'8'  => __('%d Threads', 8),\n\t\t\t'9'  => __('%d Threads', 9),\n\t\t\t'10' => __('%d Threads', 10),\n\t\t\t'20' => __('%d Threads', 20),\n\t\t\t'50' => __('%d Threads', 50)\n\t\t\t),\n\t\t'default' => 1\n\t\t),\n\t'run_limit' => array(\n\t\t'method' => 'drop_array',\n\t\t'friendly_name' => __('Run Limit'),\n\t\t'description' => __('After the selected Run Limit, the discovery process will be terminated.'),\n\t\t'value' => '|arg1:run_limit|',\n\t\t'array' => array(\n\t\t\t'60'    => __('%d Minute', 1),\n\t\t\t'300'   => __('%d Minutes', 5),\n\t\t\t'600'   => __('%d Minutes', 10),\n\t\t\t'1200'  => __('%d Minutes', 20),\n\t\t\t'1800'  => __('%d Minutes', 30),\n\t\t\t'3600'  => __('%d Hour', 1),\n\t\t\t'7200'  => __('%d Hours', 2),\n\t\t\t'14400' => __('%d Hours', 4),\n\t\t\t'28800' => __('%d Hours', 8),\n\t\t\t),\n\t\t'default' => 1200\n\t\t),\n\t'enabled' => array(\n\t\t'method' => 'checkbox',\n\t\t'friendly_name' => __('Enabled'),\n\t\t'description' => __('Enable this Network Range.'),\n\t\t'value' => '|arg1:enabled|'\n\t\t),\n\t'enable_netbios' => array(\n\t\t'method' => 'checkbox',\n\t\t'friendly_name' => __('Enable NetBIOS'),\n\t\t'description' => __('Use NetBIOS to attempt to resolve the hostname of up hosts.'),\n\t\t'value' => '|arg1:enable_netbios|',\n\t\t'default' => ''\n\t\t),\n\t'add_to_cacti' => array(\n\t\t'method' => 'checkbox',\n\t\t'friendly_name' => __('Automatically Add to Cacti'),\n\t\t'description' => __('For any newly discovered Devices that are reachable using SNMP and who match a Device Rule, add them to Cacti.'),\n\t\t'value' => '|arg1:add_to_cacti|'\n\t\t),\n\t'same_sysname' => array(\n\t\t'method' => 'checkbox',\n\t\t'friendly_name' => __('Allow same sysName on different hosts'),\n\t\t'description' => __('When discovering devices, allow duplicate sysnames to be added on different hosts'),\n\t\t'value' => '|arg1:same_sysname|'\n\t\t),\n\t'rerun_data_queries' => array(\n\t\t'method' => 'checkbox',\n\t\t'friendly_name' => __('Rerun Data Queries'),\n\t\t'description' => __('If a device previously added to Cacti is found, rerun its data queries.'),\n\t\t'value' => '|arg1:rerun_data_queries|'\n\t\t),\n\t'spacern' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('Notification Settings'),\n\t\t'collapsible' => 'true'\n\t\t),\n\t'notification_enabled' => array(\n\t\t'method' => 'checkbox',\n\t\t'friendly_name' => __('Notification Enabled'),\n\t\t'description' => __('If checked, when the Automation Network is scanned, a report will be sent to the Notification Email account..'),\n\t\t'value' => '|arg1:notification_enabled|',\n\t\t'default' => ''\n\t\t),\n\t'notification_email' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Notification Email'),\n\t\t'description' => __('The Email account to be used to send the Notification Email to.'),\n\t\t'value' => '|arg1:notification_email|',\n\t\t'max_length' => '250',\n\t\t'default' => ''\n\t\t),\n\t'notification_fromname' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Notification From Name'),\n\t\t'description' => __('The Email account name to be used as the senders name for the Notification Email.  If left blank, Cacti will use the default Automation Notification Name if specified, otherwise, it will use the Cacti system default Email name'),\n\t\t'value' => '|arg1:notification_fromname|',\n\t\t'max_length' => '32',\n\t\t'size' => '30',\n\t\t'default' => ''\n\t\t),\n\t'notification_fromemail' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Notification From Email Address'),\n\t\t'description' => __('The Email Address to be used as the senders Email for the Notification Email.  If left blank, Cacti will use the default Automation Notification Email Address if specified, otherwise, it will use the Cacti system default Email Address'),\n\t\t'value' => '|arg1:notification_fromemail|',\n\t\t'max_length' => '128',\n\t\t'default' => ''\n\t\t),\n\t'spacer2' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('Discovery Timing'),\n\t\t'collapsible' => 'true'\n\t\t),\n\t'start_at' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Starting Date/Time'),\n\t\t'description' => __('What time will this Network discover item start?'),\n\t\t'value' => '|arg1:start_at|',\n\t\t'max_length' => '30',\n\t\t'default' => date('Y-m-d H:i:s'),\n\t\t'size' => 20\n\t\t),\n\t'recur_every' => array(\n\t\t'method' => 'drop_array',\n\t\t'friendly_name' => __('Rerun Every'),\n\t\t'description' => __('Rerun discovery for this Network Range every X.'),\n\t\t'value' => '|arg1:recur_every|',\n\t\t'default' => '1',\n\t\t'array' => array(\n\t\t\t1 => '1',\n\t\t\t2 => '2',\n\t\t\t3 => '3',\n\t\t\t4 => '4',\n\t\t\t5 => '5',\n\t\t\t6 => '6',\n\t\t\t7 => '7'\n\t\t\t),\n\t\t),\n\t'day_of_week' => array(\n\t\t'method' => 'drop_multi',\n\t\t'friendly_name' => __('Days of Week'),\n\t\t'description' => __('What Day(s) of the week will this Network Range be discovered.'),\n\t\t'array' => array(\n\t\t\t1 => __('Sunday'),\n\t\t\t2 => __('Monday'),\n\t\t\t3 => __('Tuesday'),\n\t\t\t4 => __('Wednesday'),\n\t\t\t5 => __('Thursday'),\n\t\t\t6 => __('Friday'),\n\t\t\t7 => __('Saturday')\n\t\t\t),\n\t\t'value' => '|arg1:day_of_week|',\n\t\t'class' => 'day_of_week'\n\t\t),\n\t'month' => array(\n\t\t'method' => 'drop_multi',\n\t\t'friendly_name' => __('Months of Year'),\n\t\t'description' => __('What Months(s) of the Year will this Network Range be discovered.'),\n\t\t'array' => array(\n\t\t\t1 => __('January'),\n\t\t\t2 => __('February'),\n\t\t\t3 => __('March'),\n\t\t\t4 => __('April'),\n\t\t\t5 => __('May'),\n\t\t\t6 => __('June'),\n\t\t\t7 => __('July'),\n\t\t\t8 => __('August'),\n\t\t\t9 => __('September'),\n\t\t\t10 => __('October'),\n\t\t\t11 => __('November'),\n\t\t\t12 => __('December')\n\t\t\t),\n\t\t'value' => '|arg1:month|',\n\t\t'class' => 'month'\n\t\t),\n\t'day_of_month' => array(\n\t\t'method' => 'drop_multi',\n\t\t'friendly_name' => __('Days of Month'),\n\t\t'description' => __('What Day(s) of the Month will this Network Range be discovered.'),\n\t\t'array' => array(1 => '1', 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 => __('Last')),\n\t\t'value' => '|arg1:day_of_month|',\n\t\t'class' => 'days_of_month'\n\t\t),\n\t'monthly_week' => array(\n\t\t'method' => 'drop_multi',\n\t\t'friendly_name' => __('Week(s) of Month'),\n\t\t'description' => __('What Week(s) of the Month will this Network Range be discovered.'),\n\t\t'array' => array(\n\t\t\t1 => __('First'),\n\t\t\t2 => __('Second'),\n\t\t\t3 => __('Third'),\n\t\t\t'32' => __('Last')\n\t\t\t),\n\t\t'value' => '|arg1:monthly_week|',\n\t\t'class' => 'monthly_week'\n\t\t),\n\t'monthly_day' => array(\n\t\t'method' => 'drop_multi',\n\t\t'friendly_name' => __('Day(s) of Week'),\n\t\t'description' => __('What Day(s) of the week will this Network Range be discovered.'),\n\t\t'array' => array(\n\t\t\t1 => __('Sunday'),\n\t\t\t2 => __('Monday'),\n\t\t\t3 => __('Tuesday'),\n\t\t\t4 => __('Wednesday'),\n\t\t\t5 => __('Thursday'),\n\t\t\t6 => __('Friday'),\n\t\t\t7 => __('Saturday')\n\t\t\t),\n\t\t'value' => '|arg1:monthly_day|',\n\t\t'class' => 'monthly_day'\n\t\t),\n\t'spacer1' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('Reachability Settings'),\n\t\t'collapsible' => 'true'\n\t\t),\n\t'snmp_id' => array(\n\t\t'method' => 'drop_sql',\n\t\t'friendly_name' => __('SNMP Options'),\n\t\t'description' => __('Select the SNMP Options to use for discovery of this Network Range.'),\n\t\t'value' => '|arg1:snmp_id|',\n\t\t'none_value' => __('None'),\n\t\t'sql' => 'SELECT id, name FROM automation_snmp ORDER BY name'\n\t\t),\n\t'ping_method' => array(\n\t\t'friendly_name' => __('Ping Method'),\n\t\t'description' => __('The type of ping packet to send.'),\n\t\t'value' => '|arg1:ping_method|',\n\t\t'method' => 'drop_array',\n\t\t'default' => read_config_option('ping_method'),\n\t\t'array' => $ping_methods\n\t\t),\n\t'ping_port' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Ping Port'),\n\t\t'value' => '|arg1:ping_port|',\n\t\t'description' => __('TCP or UDP port to attempt connection.'),\n\t\t'default' => read_config_option('ping_port'),\n\t\t'max_length' => 5,\n\t\t'size' => 5\n\t\t),\n\t'ping_timeout' => array(\n\t\t'friendly_name' => __('Ping Timeout Value'),\n\t\t'description' => __('The timeout value to use for host ICMP and UDP pinging.  This host SNMP timeout value applies for SNMP pings.'),\n\t\t'method' => 'textbox',\n\t\t'value' => '|arg1:ping_timeout|',\n\t\t'default' => read_config_option('ping_timeout'),\n\t\t'max_length' => 5,\n\t\t'size' => 5\n\t\t),\n\t'ping_retries' => array(\n\t\t'friendly_name' => __('Ping Retry Count'),\n\t\t'description' => __('After an initial failure, the number of ping retries Cacti will attempt before failing.'),\n\t\t'method' => 'textbox',\n\t\t'value' => '|arg1:ping_retries|',\n\t\t'default' => read_config_option('ping_retries'),\n\t\t'max_length' => 5,\n\t\t'size' => 5\n\t\t),\n\t'orig_start_at' => array(\n\t\t'method' => 'hidden',\n\t\t'value' => '|arg1:start_at|',\n\t\t),\n\t'orig_sched_type' => array(\n\t\t'method' => 'hidden',\n\t\t'value' => '|arg1:sched_type|',\n\t\t)\n\t);\n\n\tform_start('automation_networks.php', 'form_network');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => 'true'),\n\t\t\t'fields' => inject_form_variables($fields, (isset($network) ? $network : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('save_component_network', '1', '');\n\tform_hidden_box('id', !isempty_request_var('id') ? get_request_var('id'):0, 0);\n\n\tform_save_button('automation_networks.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#day_of_week').multiselect({\n\t\t\tselectedList: 7,\n\t\t\tnoneSelectedText: '<?php print __('Select the days(s) of the week');?>',\n\t\t\theader: false,\n\t\t\theight: 54,\n\t\t\tmultipleRow: true,\n\t\t\tmultipleRowWidth: 90,\n\t\t\tminWidth: 450\n\t\t});\n\n\t\t$('#month').multiselect({\n\t\t\tselectedList: 7,\n\t\t\tnoneSelectedText: '<?php print __('Select the month(s) of the year');?>',\n\t\t\theader: false,\n\t\t\theight: 82,\n\t\t\tmultipleRow: true,\n\t\t\tmultipleRowWidth: 90,\n\t\t\tminWidth: 400\n\t\t});\n\n\t\t$('#day_of_month').multiselect({\n\t\t\tselectedList: 15,\n\t\t\tnoneSelectedText: '<?php print __('Select the day(s) of the month');?>',\n\t\t\theader: false,\n\t\t\theight: 162,\n\t\t\tmultipleRow: true,\n\t\t\tmultipleRowWidth: 55,\n\t\t\tminWidth: 400\n\t\t});\n\n\t\t$('#monthly_week').multiselect({\n\t\t\tselectedList: 4,\n\t\t\tnoneSelectedText: '<?php print __('Select the week(s) of the month');?>',\n\t\t\theader: false,\n\t\t\theight: 28,\n\t\t\tmultipleRow: true,\n\t\t\tmultipleRowWidth: 70,\n\t\t\tminWidth: 300\n\t\t});\n\n\t\t$('#monthly_day').multiselect({\n\t\t\tselectedList: 7,\n\t\t\tnoneSelectedText: '<?php print __('Select the day(s) of the week');?>',\n\t\t\theader: false,\n\t\t\theight: 54,\n\t\t\tmultipleRow: true,\n\t\t\tmultipleRowWidth: 90,\n\t\t\tminWidth: 450\n\t\t});\n\n\t\t$('#start_at').datetimepicker({\n\t\t\tminuteGrid: 10,\n\t\t\tstepMinute: 5,\n\t\t\ttimeFormat: 'HH:mm',\n\t\t\tdateFormat: 'yy-mm-dd',\n\t\t\tminDateTime: new Date(<?php print date(\"Y\") . ', ' . (date(\"m\")-1) . ', ' . date(\"d, H\") . ', ' . date('i', ceil(time()/300)*300) . ', 0, 0';?>)\n\t\t});\n\n\t\t$('#sched_type').change(function() {\n\t\t\tsetSchedule();\n\t\t});\n\n\t\tsetSchedule();\n\n\t\t$('#notification_enabled').click(function() {\n\t\t\tsetNotification();\n\t\t});\n\n\t\tsetNotification();\n\n\t\t$('#ping_method').change(function() {\n\t\t\tsetPing();\n\t\t});\n\n\t\tsetPing();\n\t});\n\n\tfunction setNotification() {\n\t\tif ($('#notification_enabled').is(':checked')) {\n\t\t\t$('#row_notification_email').show();\n\t\t\t$('#row_notification_fromname').show();\n\t\t\t$('#row_notification_fromemail').show();\n\t\t} else {\n\t\t\t$('#row_notification_email').hide();\n\t\t\t$('#row_notification_fromname').hide();\n\t\t\t$('#row_notification_fromemail').hide();\n\t\t}\n\t}\n\n\tfunction setPing() {\n\t\t$('#row_snmp_id').show();\n\t\t$('#row_ping_method').show();\n\n\t\tswitch($('#ping_method').val()) {\n\t\tcase '0':\n\t\t\t$('#row_ping_port').hide();\n\t\t\t$('#row_ping_timeout').hide();\n\t\t\t$('#row_ping_retries').hide();\n\t\t\tbreak;\n\t\tcase '1':\n\t\t\t$('#row_ping_port').hide();\n\t\t\t$('#row_ping_timeout').show();\n\t\t\t$('#row_ping_retries').show();\n\t\t\tbreak;\n\t\tcase '2':\n\t\tcase '3':\n\t\t\t$('#row_ping_port').show();\n\t\t\t$('#row_ping_timeout').show();\n\t\t\t$('#row_ping_retries').show();\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction setSchedule() {\n\t\tswitch($('#sched_type').val()) {\n\t\tcase '1': //Manual\n\t\t\t$('#row_start_at').hide();\n\t\t\t$('#row_spacer2').hide();\n\t\t\t$('#row_recur_every').hide();\n\t\t\t$('#row_day_of_week').hide();\n\t\t\t$('#row_month').hide();\n\t\t\t$('#row_day_of_month').hide();\n\t\t\t$('#row_monthly_week').hide();\n\t\t\t$('#row_monthly_day').hide();\n\t\t\tbreak;\n\t\tcase '2': //Daily\n\t\t\t$('#row_start_at').show();\n\t\t\t$('#row_spacer2').show();\n\t\t\t$('#row_recur_every').show();\n\t\t\t$('#row_day_of_week').hide();\n\t\t\t$('#row_month').hide();\n\t\t\t$('#row_day_of_month').hide();\n\t\t\t$('#row_monthly_week').hide();\n\t\t\t$('#row_monthly_day').hide();\n\t\t\t$('#row_recur_every').find('td:first').each(function() {\n\t\t\t\tvar html = $(this).html();\n\t\t\t\thtml = html.replace('<?php print __('every X Weeks');?>', '<?php print __('every X Days');?>');\n\t\t\t\thtml = html.replace('<?php print __('every X.');?>', '<?php print __('every X Days.');?>');\n\t\t\t\t$(this).html(html);\n\t\t\t});\n\n\t\t\tbreak;\n\t\tcase '3': //Weekly\n\t\t\t$('#row_start_at').show();\n\t\t\t$('#row_spacer2').show();\n\t\t\t$('#row_recur_every').show();\n\t\t\t$('#row_day_of_week').show();\n\t\t\t$('#row_month').hide();\n\t\t\t$('#row_day_of_month').hide();\n\t\t\t$('#row_monthly_week').hide();\n\t\t\t$('#row_monthly_day').hide();\n\t\t\t$('#row_recur_every').find('td:first').each(function() {\n\t\t\t\tvar html = $(this).html();\n\t\t\t\thtml = html.replace('<?php print __('every X Days');?>', '<?php print __('every X Weeks');?>');\n\t\t\t\thtml = html.replace('<?php print __('every X.');?>', '<?php print __('every X Weeks.');?>');\n\t\t\t\t$(this).html(html);\n\t\t\t});\n\n\t\t\tbreak;\n\t\tcase '4': //Monthly\n\t\t\t$('#row_start_at').show();\n\t\t\t$('#row_spacer2').show();\n\t\t\t$('#row_recur_every').hide();\n\t\t\t$('#row_day_of_week').hide();\n\t\t\t$('#row_month').show();\n\t\t\t$('#row_day_of_month').show();\n\t\t\t$('#row_monthly_week').hide();\n\t\t\t$('#row_monthly_day').hide();\n\t\t\tbreak;\n\t\tcase '5': //Monthly on Day\n\t\t\t$('#row_start_at').show();\n\t\t\t$('#row_spacer2').show();\n\t\t\t$('#row_recur_every').hide();\n\t\t\t$('#row_day_of_week').hide();\n\t\t\t$('#row_month').show();\n\t\t\t$('#row_day_of_month').hide();\n\t\t\t$('#row_monthly_week').show();\n\t\t\t$('#row_monthly_day').show();\n\t\t\tbreak;\n\t\t}\n\t}\n\t</script>\n\t<?php\n}\n\nfunction get_networks(&$sql_where, $rows, $apply_limits = true) {\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \" WHERE (automation_networks.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\n\t$sql_order = get_order_string();\n\n\tif ($apply_limits) {\n\t\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\t} else {\n\t\t$sql_limit = '';\n\t}\n\n\t$query_string = \"SELECT automation_networks.*, poller.name AS data_collector\n\t\tFROM automation_networks\n\t\tLEFT JOIN poller\n\t\tON automation_networks.poller_id=poller.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\";\n\n\treturn db_fetch_assoc($query_string);\n}\n\nfunction networks() {\n\tglobal $network_actions, $networkss, $config, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'refresh' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '20'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_networks');\n\t/* ================= input validation ================= */\n\n\t$refresh['page']    = 'automation_networks.php?header=false';\n\t$refresh['seconds'] = get_request_var('refresh');\n\t$refresh['logout']  = 'false';\n\n\tset_page_refresh($refresh);\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} elseif (get_request_var('rows') == -2) {\n\t\t$rows = 99999999;\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('Network Filters'), '100%', '', '3', 'center', 'automation_networks.php?action=edit');\n\tnetworks_filter();\n\thtml_end_box();\n\n\t$sql_where = '';\n\n\t$networks = get_networks($sql_where, $rows);\n\n\t$total_rows = db_fetch_cell('SELECT COUNT(*) FROM automation_networks ' . $sql_where);\n\n\t$nav = html_nav_bar('automation_networks.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 14, __('Networks'), 'page', 'main');\n\n\tform_start('automation_networks.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$sched_types = array(\n\t\t'1' => __('Manual'),\n\t\t'2' => __('Daily'),\n\t\t'3' => __('Weekly'),\n\t\t'4' => __('Monthly'),\n\t\t'5' => __('Monthly on Day')\n\t);\n\n\t$display_text = array(\n\t\t'name'           => array('display' => __('Network Name'), 'align' => 'left', 'sort' => 'ASC'),\n\t\t'data_collector' => array('display' => __('Data Collector'), 'align' => 'left', 'sort' => 'DESC'),\n\t\t'sched_type'     => array('display' => __('Schedule'), 'align' => 'left', 'sort' => 'DESC'),\n\t\t'total_ips'      => array('display' => __('Total IPs'), 'align' => 'right', 'sort' => 'DESC'),\n\t\t'nosort1'        => array('display' => __('Status'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The Current Status of this Networks Discovery')),\n\t\t'nosort2'        => array('display' => __('Progress'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('Pending/Running/Done')),\n\t\t'nosort3'        => array('display' => __('Up/SNMP Hosts'), 'align' => 'right', 'sort' => 'DESC'),\n\t\t'threads'        => array('display' => __('Threads'), 'align' => 'right', 'sort' => 'DESC'),\n\t\t'last_runtime'   => array('display' => __('Last Runtime'), 'align' => 'right', 'sort' => 'ASC'),\n\t\t'nosort4'        => array('display' => __('Next Start'), 'align' => 'right', 'sort' => 'ASC'),\n\t\t'last_started'   => array('display' => __('Last Started'), 'align' => 'right', 'sort' => 'ASC'));\n\n\t$status = 'Idle';\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($networks)) {\n\t\tforeach ($networks as $network) {\n\t\t\tif ($network['enabled'] == '') {\n\t\t\t\t$mystat   = \"<span class='disabled'>\" . __('Disabled') . \"</span>\";\n\t\t\t\t$progress = \"0/0/0\";\n\t\t\t\t$status   = array();\n\t\t\t\t$updown['up'] = $updown['snmp'] = '0';\n\t\t\t} else {\n\t\t\t\t$running = db_fetch_cell_prepared('SELECT COUNT(*) FROM automation_processes WHERE network_id = ?', array($network['id']));\n\n\t\t\t\tif ($running > 0) {\n\t\t\t\t\t$status = db_fetch_row_prepared('SELECT\n\t\t\t\t\t\tCOUNT(*) AS total,\n\t\t\t\t\t\tSUM(CASE WHEN status=0 THEN 1 ELSE 0 END) AS pending,\n\t\t\t\t\t\tSUM(CASE WHEN status=1 THEN 1 ELSE 0 END) AS running,\n\t\t\t\t\t\tSUM(CASE WHEN status=2 THEN 1 ELSE 0 END) AS done\n\t\t\t\t\t\tFROM automation_ips\n\t\t\t\t\t\tWHERE network_id = ?', array($network['id']));\n\n\t\t\t\t\t$mystat   = \"<span class='running'>\" . __('Running') . \"</span>\";\n\n\t\t\t\t\tif (empty($status['total'])) {\n\t\t\t\t\t\t$progress = \"0/0/0\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$progress = $status['pending'] . '/' . $status['running'] . '/' . $status['done'];\n\t\t\t\t\t}\n\n\t\t\t\t\t$updown = db_fetch_row_prepared(\"SELECT SUM(up_hosts) AS up, SUM(snmp_hosts) AS snmp\n\t\t\t\t\t\tFROM automation_processes\n\t\t\t\t\t\tWHERE network_id = ?\", array($network['id']));\n\n\t\t\t\t\tif (empty($updown['up'])) {\n\t\t\t\t\t\t$updown['up']   = 0;\n\t\t\t\t\t\t$updown['snmp'] = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$updown['up']   = $network['up_hosts'];\n\t\t\t\t\t$updown['snmp'] = $network['snmp_hosts'];\n\n\t\t\t\t\t$mystat   = \"<span class='idle'>\" . __('Idle') . \"</span>\";\n\t\t\t\t\t$progress = \"0/0/0\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $network['id'], true);\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"' . html_escape('automation_networks.php?action=edit&id=' . $network['id']) . '\">' . html_escape($network['name']) . '</a>', $network['id']);\n\t\t\tform_selectable_ecell($network['data_collector'], $network['id']);\n\t\t\tform_selectable_cell($sched_types[$network['sched_type']], $network['id']);\n\t\t\tform_selectable_cell(number_format_i18n($network['total_ips']), $network['id'], '', 'right');\n\t\t\tform_selectable_cell($mystat, $network['id'], '', 'right');\n\t\t\tform_selectable_cell($progress, $network['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($updown['up']) . '/' . number_format_i18n($updown['snmp']), $network['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($network['threads']), $network['id'], '', 'right');\n\t\t\tform_selectable_cell(round($network['last_runtime'],2), $network['id'], '', 'right');\n\t\t\tform_selectable_cell($network['enabled'] == '' || $network['sched_type'] == '1' ? __('N/A'):($network['next_start'] == '0000-00-00 00:00:00' ? substr($network['start_at'],0,16):substr($network['next_start'],0,16)), $network['id'], '', 'right');\n\t\t\tform_selectable_cell($network['last_started'] == '0000-00-00 00:00:00' ? __('Never'):substr($network['last_started'],0,16), $network['id'], '', 'right');\n\t\t\tform_checkbox_cell($network['name'], $network['id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='10'><em>\" . __('No Networks Found') . \"</em></td></tr>\";\n\t}\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($networks)) {\n\t\t/* put the nav bar on the bottom as well */\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($network_actions);\n\n\tform_end();\n}\n\nfunction networks_filter() {\n\tglobal $item_rows;\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='networks' action='automation_networks.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Networks');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('rows') == '-1') {?> selected<?php }?>><?php print __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . $value . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Refresh');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='refresh' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$frequency = array(\n\t\t\t\t\t\t\t\t10  => __('%d Seconds', 10),\n\t\t\t\t\t\t\t\t20  => __('%d Seconds', 20),\n\t\t\t\t\t\t\t\t30  => __('%d Seconds', 30),\n\t\t\t\t\t\t\t\t45  => __('%d Seconds', 45),\n\t\t\t\t\t\t\t\t60  => __('%d Minute', 1),\n\t\t\t\t\t\t\t\t120 => __('%d Minutes', 2),\n\t\t\t\t\t\t\t\t300 => __('%d Minutes', 5)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tforeach ($frequency as $r => $row) {\n\t\t\t\t\t\t\t\techo \"<option value='\" . $r . \"'\" . (isset_request_var('refresh') && $r == get_request_var('refresh') ? ' selected' : '') . '>' . $row . '</option>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='go' title='<?php print __esc('Search');?>' value='<?php print __esc('Go');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' title='<?php print __esc('Clear Filtered');?>' value='<?php print __esc('Clear');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type='text/javascript'>\n\t\t\tfunction applyFilter() {\n\t\t\t\tstrURL  = '?rows=' + $('#rows').val();\n\t\t\t\tstrURL += '&filter=' + $('#filter').val();\n\t\t\t\tstrURL += '&refresh=' + $('#refresh').val();\n\t\t\t\tstrURL += '&header=false';\n\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = '?clear=true&header=false';\n\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\t$('#go').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#networks').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\t\t\t});\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/data_query.php');\n\n$automation_tree_rules_actions = array(\n\tAUTOMATION_ACTION_TREE_DUPLICATE => __('Duplicate'),\n\tAUTOMATION_ACTION_TREE_ENABLE    => __('Enable'),\n\tAUTOMATION_ACTION_TREE_DISABLE   => __('Disable'),\n\tAUTOMATION_ACTION_TREE_DELETE    => __('Delete'),\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tautomation_tree_rules_form_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tautomation_tree_rules_form_actions();\n\n\t\tbreak;\n\tcase 'change_leaf':\n\t\tautomation_tree_rules_change_leaf();\n\n\t\theader('Location: automation_tree_rules.php?header=false&action=edit&id=' . get_request_var('id'));\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tautomation_tree_rules_item_movedown();\n\n\t\theader('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id'));\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tautomation_tree_rules_item_moveup();\n\n\t\theader('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id'));\n\t\tbreak;\n\tcase 'item_remove':\n\t\tautomation_tree_rules_item_remove();\n\n\t\theader('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id'));\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\t\tautomation_tree_rules_item_edit();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'remove':\n\t\tautomation_tree_rules_remove();\n\n\t\theader ('Location: automation_tree_rules.php');\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tautomation_tree_rules_edit();\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\tautomation_tree_rules();\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n The Save Function\n -------------------------- */\n\nfunction automation_tree_rules_form_save() {\n\n\tif (isset_request_var('save_component_automation_tree_rule')) {\n\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save['id']                 = get_request_var('id');\n\t\t$save['name']               = form_input_validate(get_nfilter_request_var('name'), 'name', '', true, 3);\n\t\t$save['tree_id']            = form_input_validate(get_nfilter_request_var('tree_id'), 'tree_id', '^[0-9]+$', false, 3);\n\t\t$save['tree_item_id']       = isset_request_var('tree_item_id') ? form_input_validate(get_nfilter_request_var('tree_item_id'), 'tree_item_id', '^[0-9]+$', false, 3) : 0;\n\t\t$save['leaf_type']          = (isset_request_var('leaf_type')) ? form_input_validate(get_nfilter_request_var('leaf_type'), 'leaf_type', '^[0-9]+$', false, 3) : 0;\n\t\t$save['host_grouping_type'] = isset_request_var('host_grouping_type') ? form_input_validate(get_nfilter_request_var('host_grouping_type'), 'host_grouping_type', '^[0-9]+$', false, 3) : 0;\n\t\t$save['enabled']            = (isset_request_var('enabled') ? 'on' : '');\n\t\tif (!is_error_message()) {\n\t\t\t$rule_id = sql_save($save, 'automation_tree_rules');\n\n\t\t\tif ($rule_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_tree_rules.php?header=false&action=edit&id=' . (empty($rule_id) ? get_request_var('id') : $rule_id));\n\n\t} elseif (isset_request_var('save_component_automation_match_item')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('item_id');\n\t\t/* ==================================================== */\n\n\t\t$save = array();\n\t\t$save['id']        = form_input_validate(get_request_var('item_id'), 'item_id', '^[0-9]+$', false, 3);\n\t\t$save['rule_id']   = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['rule_type'] = AUTOMATION_RULE_TYPE_TREE_MATCH;\n\t\t$save['sequence']  = form_input_validate(get_nfilter_request_var('sequence'), 'sequence', '^[0-9]+$', false, 3);\n\t\t$save['operation'] = form_input_validate(get_nfilter_request_var('operation'), 'operation', '^[-0-9]+$', true, 3);\n\t\t$save['field']     = form_input_validate(((isset_request_var('field') && get_nfilter_request_var('field') != '0') ? get_nfilter_request_var('field') : ''), 'field', '', true, 3);\n\t\t$save['operator']  = form_input_validate((isset_request_var('operator') ? get_nfilter_request_var('operator') : ''), 'operator', '^[0-9]+$', true, 3);\n\t\t$save['pattern']   = form_input_validate((isset_request_var('pattern') ? get_nfilter_request_var('pattern') : ''), 'pattern', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$item_id = sql_save($save, 'automation_match_rule_items');\n\n\t\t\tif ($item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: automation_tree_rules.php?header=false&action=item_edit&id=' . get_request_var('id') . '&item_id=' . (empty($item_id) ? get_request_var('item_id') : $item_id) . '&rule_type=' . AUTOMATION_RULE_TYPE_TREE_MATCH);\n\t\t} else {\n\t\t\theader('Location: automation_tree_rules.php?header=false&action=edit&id=' . get_request_var('id') . '&rule_type=' . AUTOMATION_RULE_TYPE_TREE_MATCH);\n\t\t}\n\t} elseif (isset_request_var('save_component_automation_tree_rule_item')) {\n\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('item_id');\n\t\t/* ==================================================== */\n\n\t\tunset($save);\n\t\t$save['id']                = form_input_validate(get_request_var('item_id'), 'item_id', '^[0-9]+$', false, 3);\n\t\t$save['rule_id']           = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['sequence']          = form_input_validate(get_nfilter_request_var('sequence'), 'sequence', '^[0-9]+$', false, 3);\n\t\t$save['field']             = form_input_validate((isset_request_var('field') ? get_nfilter_request_var('field') : ''), 'field', '', true, 3);\n\t\t$save['sort_type']         = form_input_validate(get_nfilter_request_var('sort_type'), 'sort_type', '^[0-9]+$', false, 3);\n\t\t$save['propagate_changes'] = (isset_request_var('propagate_changes') ? 'on' : '');\n\t\t$save['search_pattern']    = isset_request_var('search_pattern') ? form_input_validate(get_nfilter_request_var('search_pattern'), 'search_pattern', '', false, 3) : '';\n\t\t$save['replace_pattern']   = isset_request_var('replace_pattern') ? form_input_validate(get_nfilter_request_var('replace_pattern'), 'replace_pattern', '', true, 3) : '';\n\n\t\tif (!is_error_message()) {\n\t\t\t$automation_graph_rule_item_id = sql_save($save, 'automation_tree_rule_items');\n\n\t\t\tif ($automation_graph_rule_item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: automation_tree_rules.php?header=false&action=item_edit&id=' . get_request_var('id') . '&item_id=' . (empty($automation_graph_rule_item_id) ? get_request_var('item_id') : $automation_graph_rule_item_id) . '&rule_type=' . AUTOMATION_RULE_TYPE_TREE_ACTION);\n\t\t} else {\n\t\t\theader('Location: automation_tree_rules.php?header=false&action=edit&id=' . get_request_var('id') . '&rule_type=' . AUTOMATION_RULE_TYPE_TREE_ACTION);\n\t\t}\n\t} else {\n\t\traise_message(2);\n\t\theader('Location: automation_tree_rules.php?header=false');\n\t}\n}\n\n/* ------------------------\n The 'actions' function\n ------------------------ */\n\nfunction automation_tree_rules_form_actions() {\n\tglobal $automation_tree_rules_actions;\n\tglobal $config;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DELETE) { /* DELETE */\n\t\t\t\tcacti_log('form_actions DELETE: ' . serialize($selected_items), true, 'AUTOM8 TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\tdb_execute('DELETE FROM automation_tree_rules WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM automation_tree_rule_items WHERE ' . array_to_sql_or($selected_items, 'rule_id'));\n\t\t\t\tdb_execute('DELETE FROM automation_match_rule_items WHERE ' . array_to_sql_or($selected_items, 'rule_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DUPLICATE) { /* duplicate */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tcacti_log('form_actions duplicate: ' . $selected_items[$i], true, 'AUTOM8 TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t\tduplicate_automation_tree_rules($selected_items[$i], get_nfilter_request_var('name_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_ENABLE) { /* enable */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tcacti_log('form_actions enable: ' . $selected_items[$i], true, 'AUTOM8 TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t\tdb_execute_prepared(\"UPDATE automation_tree_rules SET enabled='on' WHERE id = ?\", array($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DISABLE) { /* disable */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tcacti_log('form_actions disable: ' . $selected_items[$i], true, 'AUTOM8 TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t\tdb_execute_prepared(\"UPDATE automation_tree_rules SET enabled='' WHERE id = ?\", array($selected_items[$i]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: automation_tree_rules.php?header=false');\n\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$automation_tree_rules_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$automation_tree_rules_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM automation_tree_rules WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$automation_tree_rules_array[] = $matches[1];\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('automation_tree_rules.php', 'automation_tree_rules_action');\n\n\thtml_start_box($automation_tree_rules_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DELETE) { /* DELETE */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Rule(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$automation_tree_rules_list</ul></div>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DUPLICATE) { /* duplicate */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to duplicate the following Rule(s). You can optionally change the title format for the new Rules.') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$automation_tree_rules_list</ul></div>\n\t\t\t\t<p>\" . __('Title Format') . '<br>'; form_text_box('name_format', '<' . __('rule_name') . '> (1)', '', '255', '30', 'text'); print \"</p>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_ENABLE) { /* enable */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to enable the following Rule(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$automation_tree_rules_list</ul></div>\n\t\t\t\t<p>\" . __('Make sure, that those rules have successfully been tested!') . \"</p>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t} elseif (get_nfilter_request_var('drp_action') == AUTOMATION_ACTION_TREE_DISABLE) { /* disable */\n\t\tprint \"<tr>\n\t\t\t<td class='textArea'>\n\t\t\t\t<p>\" . __('Click \\'Continue\\' to disable the following Rule(s).') . \"</p>\n\t\t\t\t<div class='itemlist'><ul>$automation_tree_rules_list</ul></div>\n\t\t\t</td>\n\t\t</tr>\\n\";\n\t}\n\n\tif (!isset($automation_tree_rules_array)) {\n\t\traise_message(40);\n\t\theader('Location: automation_tree_rules.php?header=false');\n\t\texit;\n\t}else {\n\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Apply requested action') . \"'>\";\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($automation_tree_rules_array) ? serialize($automation_tree_rules_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\nfunction automation_tree_rules_change_leaf() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('leaf_type');\n\t/* ==================================================== */\n\n\tautomation_change_tree_rule_leaf_type(get_request_var('leaf_type'), get_request_var('id'));\n}\n\n/* --------------------------\n Rule Item Functions\n -------------------------- */\n\nfunction automation_tree_rules_item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_MATCH) {\n\t\tmove_item_down('automation_match_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id') . ' AND rule_type=' . get_request_var('rule_type'));\n\t} elseif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION) {\n\t\tmove_item_down('automation_tree_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id'));\n\t}\n}\n\nfunction automation_tree_rules_item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_MATCH) {\n\t\tmove_item_up('automation_match_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id') . ' AND rule_type=' . get_request_var('rule_type'));\n\t} elseif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION) {\n\t\tmove_item_up('automation_tree_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id'));\n\t}\n}\n\nfunction automation_tree_rules_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\t/* ==================================================== */\n\n\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_MATCH) {\n\t\tdb_execute_prepared('DELETE FROM automation_match_rule_items WHERE id = ?', array(get_request_var('item_id')));\n\t} elseif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION) {\n\t\tdb_execute_prepared('DELETE FROM automation_tree_rule_items WHERE id = ?', array(get_request_var('item_id')));\n\t}\n\n\n}\n\n\nfunction automation_tree_rules_item_edit() {\n\tglobal $config;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('rule_type');\n\tget_filter_request_var('show_trees');\n\t/* ==================================================== */\n\n\t/* handle show_trees mode */\n\tif (isset_request_var('show_trees')) {\n\t\tif (get_request_var('show_trees') == '0') {\n\t\t\tkill_session_var('automation_tree_rules_show_trees');\n\t\t} elseif (get_request_var('show_trees') == '1') {\n\t\t\t$_SESSION['automation_tree_rules_show_trees'] = true;\n\t\t}\n\t}\n\n\tif (!isempty_request_var('rule_type') && !isempty_request_var('item_id')) {\n\t\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION) {\n\t\t$item = db_fetch_row_prepared('SELECT * FROM automation_tree_rule_items WHERE id = ?', array(get_request_var('item_id')));\n\t\t\tif ($item['field'] != AUTOMATION_TREE_ITEM_TYPE_STRING) {\n\t\t\t\t?>\n<table style='width:100%;text-align:center;'>\n\t<tr>\n\t\t<td class='textInfo' style='text-align:right;vertical-align:top;'><span class='linkMarker'>*</span><a class='linkEditMain' href='<?php print html_escape('automation_tree_rules.php?action=item_edit&id=' . (isset_request_var('id') ? get_request_var('id') : 0) . '&item_id=' . (isset_request_var('item_id') ? get_request_var('item_id') : 0) . '&rule_type=' . (isset_request_var('rule_type') ? get_request_var('rule_type') : 0) .'&show_trees=') . (isset($_SESSION['automation_tree_rules_show_trees']) ? '0' : '1');?>'><?php print (isset($_SESSION['automation_tree_rules_show_trees']) ? __('Don\\'t Show'):__('Show'));?> <?php print __('Created Trees');?></a><br>\n\t\t</td>\n\t</tr>\n</table>\n<br>\n\t\t\t\t<?php\n\t\t\t}\n\t\t}\n\t}\n\n\tglobal_item_edit(get_request_var('id'), get_request_var('item_id'), get_request_var('rule_type'));\n\n\tform_hidden_box('rule_type', get_request_var('rule_type'), get_request_var('rule_type'));\n\tform_hidden_box('id', (isset_request_var('id') ? get_request_var('id') : '0'), '');\n\tform_hidden_box('item_id', (isset_request_var('item_id') ? get_request_var('item_id') : '0'), '');\n\tif(get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_MATCH) {\n\t\tform_hidden_box('save_component_automation_match_item', '1', '');\n\t} else {\n\t\tform_hidden_box('save_component_automation_tree_rule_item', '1', '');\n\t}\n\tform_save_button('automation_tree_rules.php?action=edit&id=' . get_request_var('id') . '&rule_type=' . get_request_var('rule_type'));\n\tprint '<br>';\n\n\t/* display list of matching trees */\n\tif (!isempty_request_var('rule_type') && !isempty_request_var('item_id')) {\n\t\tif (get_request_var('rule_type') == AUTOMATION_RULE_TYPE_TREE_ACTION) {\n\t\t\tif (isset($_SESSION['automation_tree_rules_show_trees']) && ($item['field'] != AUTOMATION_TREE_ITEM_TYPE_STRING)) {\n\t\t\t\tif ($_SESSION['automation_tree_rules_show_trees']) {\n\t\t\t\t\tdisplay_matching_trees(get_request_var('id'), AUTOMATION_RULE_TYPE_TREE_ACTION, $item, 'automation_tree_rules.php?action=item_edit&id=' . get_request_var('id') . '&item_id=' . get_request_var('item_id') . '&rule_type=' . get_request_var('rule_type'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//Now we need some javascript to make it dynamic\n?>\n<script type='text/javascript'>\n\napplyHeaderChange();\ntoggle_operation();\ntoggle_operator();\n\nfunction applyHeaderChange() {\n\tif ($('#rule_type').val() == '<?php print AUTOMATION_RULE_TYPE_TREE_ACTION;?>') {\n\t\tif ($('#field').val() == '<?php print AUTOMATION_TREE_ITEM_TYPE_STRING;?>') {\n\t\t\t$('#replace_pattern').val('');\n\t\t\t$('#replace_pattern').prop('disabled', true);\n\t\t} else {\n\t\t\t$('#replace_pattern').prop('disabled', false);\n\t\t}\n\t}\n}\n\nfunction toggle_operation() {\n\t// right bracket ')' does not come with a field\n\tif ($('operation').value == '<?php print AUTOMATION_OPER_RIGHT_BRACKET;?>') {\n\t\t//alert('Sequence is '' + document.getElementById('sequence').value + ''');\n\t\t$('#field').val('');\n\t\t$('#field').prop('disabled', true);\n\t\t$('#operator').val(0);\n\t\t$('#operator').prop('disabled', true);\n\t\t$('#pattern').val('');\n\t\t$('#pattern').prop('disabled', true);\n\t} else {\n\t\t$('#field').prop('disabled', false);\n\t\t$('#operator').prop('disabled', false);\n\t\t$('#pattern').prop('disabled', false)\n\t}\n}\n\nfunction toggle_operator() {\n\t// if operator is not 'binary', disable the 'field' for matching strings\n\tif ($('#operator').val() == '<?php print AUTOMATION_OPER_RIGHT_BRACKET;?>') {\n\t\t//alert('Sequence is '' + document.getElementById('sequence').value + ''');\n\t} else {\n\t}\n}\n</script>\n<?php\n}\n\n/* ---------------------\n Rule Functions\n --------------------- */\n\nfunction automation_tree_rules_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif ((read_config_option('deletion_verification') == 'on') && (!isset_request_var('confirm'))) {\n\t\ttop_header();\n\t\tform_confirm(__('Are You Sure?'), __(\"Are you sure you want to DELETE the Rule '%s'?\", db_fetch_cell_prepared('SELECT name FROM automation_tree_rules WHERE id = ?', array(get_request_var('id')))), 'automation_tree_rules.php', 'automation_tree_rules.php?action=remove&id=' . get_request_var('id'));\n\t\tbottom_footer();\n\t\texit;\n\t}\n\n\tif ((read_config_option('deletion_verification') == '') || (isset_request_var('confirm'))) {\n\t\tdb_execute_prepared('DELETE FROM automation_match_rule_items\n\t\t\tWHERE rule_id = ?\n\t\t\tAND rule_type = ?',\n\t\t\tarray(get_request_var('id'), AUTOMATION_RULE_TYPE_TREE_MATCH));\n\n\t\tdb_execute_prepared('DELETE FROM automation_tree_rule_items\n\t\t\tWHERE rule_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tdb_execute_prepared('DELETE FROM automation_tree_rules\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n}\n\nfunction automation_tree_rules_edit() {\n\tglobal $config;\n\tglobal $fields_automation_tree_rules_edit1, $fields_automation_tree_rules_edit2, $fields_automation_tree_rules_edit3;\n\n\tinclude_once($config['base_path'].'/lib/html_tree.php');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('rows');\n\tget_filter_request_var('tree_id');\n\tget_filter_request_var('leaf_type');\n\tget_filter_request_var('host_grouping_type');\n\tget_filter_request_var('tree_item_id');\n\tget_filter_request_var('show_hosts');\n\t/* ==================================================== */\n\n\t/* clean up rule name */\n\tif (isset_request_var('name')) {\n\t\tset_request_var('name', sanitize_search_string(get_request_var('name')));\n\t}\n\n\t/* remember these search fields in session vars so we don't have to keep passing them around */\n\tload_current_session_value('rows', 'sess_default_rows', read_config_option('num_rows_table'));\n\n\t/* handle show_hosts mode */\n\tif (isset_request_var('show_hosts')) {\n\t\tif (get_request_var('show_hosts') == '0') {\n\t\t\tkill_session_var('automation_tree_rules_show_objects');\n\t\t} elseif (get_request_var('show_hosts') == '1') {\n\t\t\t$_SESSION['automation_tree_rules_show_objects'] = true;\n\t\t}\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\t?>\n<table style='width:100%;text-align:center;'>\n\t<tr>\n\t\t<td class='textInfo right' style='vertical-align:top;'><span class='linkMarker'>*</span><a class='linkEditMain' href='<?php print html_escape('automation_tree_rules.php?action=edit&id=' . (isset_request_var('id') ? get_request_var('id') : 0) . '&show_hosts=') . (isset($_SESSION['automation_tree_rules_show_objects']) ? '0' : '1');?>'><?php print (isset($_SESSION['automation_tree_rules_show_objects']) ? __('Don\\'t Show'):__('Show'));?> <?php print __('Eligible Objects');?></a><br>\n\t\t</td>\n\t</tr>\n</table>\n\t\t<?php\n\t}\n\n\t/*\n\t * display the rule -------------------------------------------------------------------------------------\n\t */\n\t$rule = array();\n\tif (!isempty_request_var('id')) {\n\t\t$rule = db_fetch_row_prepared('SELECT * FROM automation_tree_rules WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('Tree Rule Selection [edit: %s]', html_escape($rule['name']));\n\t} else {\n\t\t$header_label = __('Tree Rules Selection [new]');\n\t}\n\t/* if creating a new rule, use all fields that have already been entered on page reload */\n\tif (isset_request_var('name')) {\n\t\t$rule['name'] = get_request_var('name');\n\t}\n\n\tif (isset_request_var('tree_id')) {\n\t\t$rule['tree_id'] = get_request_var('tree_id');\n\t}\n\n\tif (isset_request_var('leaf_type')) {\n\t\t$rule['leaf_type'] = get_request_var('leaf_type');\n\t}\n\n\tif (isset_request_var('host_grouping_type')) {\n\t\t$rule['host_grouping_type'] = get_request_var('host_grouping_type');\n\t}\n\n\tif (isset_request_var('tree_item_id')) {\n\t\t$rule['tree_item_id'] = get_request_var('tree_item_id');\n\t}\n\n\tform_start('automation_tree_rules.php', 'form_automation_tree_rule_edit');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (!isempty_request_var('id')) {\n\t\t/* display whole rule */\n\t\t$form_array = $fields_automation_tree_rules_edit1 + $fields_automation_tree_rules_edit2 + $fields_automation_tree_rules_edit3;\n\t} else {\n\t\t/* display first part of rule only and request user to proceed */\n\t\t$form_array = $fields_automation_tree_rules_edit1;\n\t}\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => true),\n\t\t'fields' => inject_form_variables($form_array, (isset($rule) ? $rule : array()))\n\t));\n\n\tform_hidden_box('id', (isset($rule['id']) ? $rule['id'] : '0'), '');\n\tform_hidden_box('item_id', (isset($rule['item_id']) ? $rule['item_id'] : '0'), '');\n\tform_hidden_box('save_component_automation_tree_rule', '1', '');\n\n\thtml_end_box(true, true);\n\n\t/*\n\t * display the rule items -------------------------------------------------------------------------------\n\t */\n\tif (!empty($rule['id'])) {\n\t\t# display tree rules for host match\n\t\tdisplay_match_rule_items(__('Object Selection Criteria'),\n\t\t\t$rule['id'],\n\t\t\tAUTOMATION_RULE_TYPE_TREE_MATCH,\n\t\t\t'automation_tree_rules.php');\n\n\t\t# fetch tree action rules\n\t\tdisplay_tree_rule_items(__('Tree Creation Criteria'),\n\t\t\t$rule['id'],\n\t\t\t$rule['leaf_type'],\n\t\t\tAUTOMATION_RULE_TYPE_TREE_ACTION,\n\t\t\t'automation_tree_rules.php');\n\t}\n\n\tform_save_button('automation_tree_rules.php', 'return');\n\n\tprint '<br>';\n\n\tif (!empty($rule['id'])) {\n\t\t/* display list of matching hosts */\n\t\tif (isset($_SESSION['automation_tree_rules_show_objects'])) {\n\t\t\tif ($_SESSION['automation_tree_rules_show_objects']) {\n\t\t\t\tif ($rule['leaf_type'] == TREE_ITEM_TYPE_HOST) {\n\t\t\t\t\tdisplay_matching_hosts($rule, AUTOMATION_RULE_TYPE_TREE_MATCH, 'automation_tree_rules.php?action=edit&id=' . get_request_var('id'));\n\t\t\t\t} elseif ($rule['leaf_type'] == TREE_ITEM_TYPE_GRAPH) {\n\t\t\t\t\tdisplay_matching_graphs($rule, AUTOMATION_RULE_TYPE_TREE_MATCH, 'automation_tree_rules.php?action=edit&id=' . get_request_var('id'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tvar automationLeafTypeOriginal = $('#leaf_type').val();\n\n\t<?php\n\tif (!empty($rule['id'])) {\n\t\tprint 'var isNew = false;';\n\t} else {\n\t\tprint 'var isNew = true;';\n\t}\n\t?>\n\n\t$(function() {\n\t\tapplyItemTypeChange();\n\t});\n\n\tfunction applyTreeChange(action,force) {\n\t\tif (force == undefined) {\n\t\t\tforce = false;\n\t\t}\n\n\t\tif (action == undefined) {\n\t\t\taction = 'edit';\n\t\t}\n\n\t\tstrURL  = 'automation_tree_rules.php?header=false&action=' + action;\n\t\tstrURL += '&id=' + $('#id').val();\n\t\tstrURL += '&name=' + $('#name').val();\n\t\tstrURL += '&tree_id=' + $('#tree_id').val();\n\t\tstrURL += '&tree_item_id=' + $('#tree_item_id').val();\n\t\tstrURL += '&leaf_type=' + $('#leaf_type').val();\n\t\tstrURL += '&enabled=' + $('#enabled').val();\n\n\t\tloadPageNoHeader(strURL,undefined,force);\n\t}\n\n\tfunction applyItemTypeChange() {\n\t\tvar automationLeafTypeNew = $('#leaf_type').val();\n\t\tif (automationLeafTypeOriginal != automationLeafTypeNew && !isNew) {\n\t\t\tif (automationLeafTypeNew == 3) {\n\t\t\t\tvar automationLeafTypeButtons = {\n\t\t\t\t\t'Yes': {\n\t\t\t\t\t\ttext: '<?php print __('Yes'); ?>',\n\t\t\t\t\t\tid: 'btnAutomationLeafTypeYes',\n\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\tapplyTreeChange('change_leaf',true);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'No': {\n\t\t\t\t\t\ttext: '<?php print __('No'); ?>',\n\t\t\t\t\t\tid: 'btnAutomationLeafTypeNo',\n\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t$(this).dialog('close');\n\t\t\t\t\t\t\tvar leaf = $('#leaf_type');\n\t\t\t\t\t\t\tif (leaf != null) {\n\t\t\t\t\t\t\t\tleaf.val(automationLeafTypeOriginal);\n\t\t\t\t\t\t\t\tleaf.selectmenu(\"refresh\");\n\t\t\t\t\t\t\t\tleaf.change();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tvar automationLeafTypeTitle = '<?php print __('Change Leaf Type'); ?>';\n\t\t\t\tvar automationLeafTypeContainer = '<div id=\"automationLeafTypeContainer\" style=\"display:none\">' +\n\t\t\t\t\t'<p style=\"display:table-cell;overflow:auto\"> ' +\n\t\t\t\t\t'<b><?php print __('WARNING:'); ?></b>' +\n\t\t\t\t\t'<?php print __('You are changing the leaf type to \"Device\" which does not support Graph-based object matching/creation.');?>' +\n\t\t\t\t\t'<?php print __('By changing the leaf type, all invalid rules will be automatically removed and will not be recoverable.');?> <br/><br/>' +\n\t\t\t\t\t'<?php print __('Are you sure you wish to continue?');?>' +\n\t\t\t\t\t'</p>' +\n\t\t\t\t\t'</div>';\n\n\t\t\t\t$('#automationLeafTypeContainer').remove();\n\t\t\t\t$('body').append(automationLeafTypeContainer);\n\n\t\t\t\tvar automationLeafTypeWidth = $(window).width();\n\t\t\t\tif (automationLeafTypeWidth > 600) {\n\t\t\t\t\tautomationLeafTypeWidth = 600;\n\t\t\t\t} else {\n\t\t\t\t\tautomationLeafTypeWidth -= 50;\n\t\t\t\t}\n\n\t\t\t\t$('#automationLeafTypeContainer').dialog({\n\t\t\t\t\tdraggable: true,\n\t\t\t\t\tresizable: false,\n\t\t\t\t\theight: 'auto',\n\t\t\t\t\tminWidth: automationLeafTypeWidth,\n\t\t\t\t\tmaxWidth: 800,\n\t\t\t\t\tmaxHeight: 600,\n\t\t\t\t\ttitle: automationLeafTypeTitle,\n\t\t\t\t\tbuttons: automationLeafTypeButtons\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tapplyTreeChange('change_leaf',true);\n\t\t\t}\n\t\t} else {\n\t\t\tif ($('#leaf_type').val() == '<?php print TREE_ITEM_TYPE_HOST;?>') {\n\t\t\t\t$('#row_host_grouping_type').show();\n\t\t\t} else if ($('#leaf_type').val() == '<?php print TREE_ITEM_TYPE_GRAPH;?>') {\n\t\t\t\t$('#row_host_grouping_type').hide();\n\t\t\t}\n\t\t\t$('#leaf_type').selectmenu(\"refresh\");\n\t\t}\n\t}\n\t</script>\n\t<?php\n}\n\nfunction automation_tree_rules() {\n\tglobal $automation_tree_rules_actions, $config, $item_rows;\n\tglobal $automation_tree_item_types, $host_group_types;\n\n\tif ((!empty($_SESSION['sess_autom_tr_status'])) && (!isempty_request_var('status'))) {\n\t\tif ($_SESSION['sess_autom_tr_status'] != get_nfilter_request_var('status')) {\n\t\t\tset_request_var('page', 1);\n\t\t}\n\t}\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'status' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_autom_tr');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('Tree Rules'), '100%', '', '3', 'center', 'automation_tree_rules.php?action=edit');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_automation' action='automation_tree_rules.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Status');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='status'>\n\t\t\t\t\t\t\t\t<option value='-1' <?php print (get_request_var('status') == '-1' ? ' selected':'');?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t\t<option value='-2' <?php print (get_request_var('status') == '-2' ? ' selected':'');?>><?php print __('Enabled');?></option>\n\t\t\t\t\t\t\t\t<option value='-3' <?php print (get_request_var('status') == '-3' ? ' selected':'');?>><?php print __('Disabled');?></option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Tree Rules');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='rows'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\" . (get_request_var('rows') == $key ? ' selected':'') . '>' . $value . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>'>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type='text/javascript'>\n\t\t\tfunction applyFilter() {\n\t\t\t\tstrURL = 'automation_tree_rules.php' +\n\t\t\t\t\t'?status='+$('#status').val() +\n\t\t\t\t\t'&filter='+$('#filter').val() +\n\t\t\t\t\t'&rows='+$('#rows').val() +\n\t\t\t\t\t'&header=false';\n\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = 'automation_tree_rules.php?clear=1&header=false';\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\t$('#rows, #status').change(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#refresh').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#form_automation').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\t\t\t});\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'WHERE' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (atr.name LIKE '%%\" . get_request_var('filter') . \"%%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('status') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('status') == '-2') {\n\t\t$sql_where .= ($sql_where != '' ? \" AND atr.enabled='on'\" : \"WHERE atr.enabled='on'\");\n\t} elseif (get_request_var('status') == '-3') {\n\t\t$sql_where .= ($sql_where != '' ? \" AND atr.enabled=''\" : \"WHERE atr.enabled=''\");\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(atr.id)\n\t\tFROM automation_tree_rules AS atr\n\t\tLEFT JOIN graph_tree AS gt\n\t\tON atr.id=gt.id\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$automation_tree_rules = db_fetch_assoc(\"SELECT atr.id, atr.name, atr.tree_id, atr.tree_item_id,\n\t\tatr.leaf_type, atr.host_grouping_type, atr.enabled,\n\t\tgt.name AS tree_name, gti.title AS subtree_name\n\t\tFROM automation_tree_rules AS atr\n\t\tLEFT JOIN graph_tree AS gt\n\t\tON atr.tree_id=gt.id\n\t\tLEFT JOIN graph_tree_items AS gti\n\t\tON atr.tree_item_id = gti.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('automation_tree_rules.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Tree Rules'), 'page', 'main');\n\n\tform_start('automation_tree_rules.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'               => array('display' => __('Rule Name'),      'align' => 'left',  'sort' => 'ASC'),\n\t\t'id'                 => array('display' => __('ID'),             'align' => 'right', 'sort' => 'ASC'),\n\t\t'tree_name'          => array('display' => __('Hook into Tree'), 'align' => 'left',  'sort' => 'ASC'),\n\t\t'subtree_name'       => array('display' => __('At Subtree'),     'align' => 'left',  'sort' => 'ASC'),\n\t\t'leaf_type'          => array('display' => __('This Type'),      'align' => 'left',  'sort' => 'ASC'),\n\t\t'host_grouping_type' => array('display' => __('Using Grouping'), 'align' => 'left',  'sort' => 'ASC'),\n\t\t'enabled'            => array('display' => __('Enabled'),        'align' => 'right', 'sort' => 'ASC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($automation_tree_rules)) {\n\t\tforeach ($automation_tree_rules as \t$automation_tree_rule) {\n\t\t\t$tree_item_type_name = ((empty($automation_tree_rule['leaf_type'])) ? '<em>' . __('None') . '</em>' : $automation_tree_item_types[$automation_tree_rule['leaf_type']]);\n\t\t\t$subtree_name = ((empty($automation_tree_rule['subtree_name'])) ? '<em>' . __('ROOT') . '</em>' : html_escape($automation_tree_rule['subtree_name']));\n\t\t\t$tree_host_grouping_type = ((empty($host_group_types[$automation_tree_rule['host_grouping_type']])) ? '' : $host_group_types[$automation_tree_rule['host_grouping_type']]);\n\t\t\tform_alternate_row('line' .  $automation_tree_rule['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($automation_tree_rule['name'], get_request_var('filter'), 'automation_tree_rules.php?action=edit&id=' . $automation_tree_rule['id'] . '&page=1'), $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($automation_tree_rule['id'], $automation_tree_rule['id'], '', 'text-align:right');\n\t\t\tform_selectable_ecell($automation_tree_rule['tree_name'], $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($subtree_name, $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($tree_item_type_name, $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($tree_host_grouping_type, $automation_tree_rule['id']);\n\t\t\tform_selectable_cell($automation_tree_rule['enabled'] ? __('Enabled'):__('Disabled'), $automation_tree_rule['id'], '', 'text-align:right');\n\t\t\tform_checkbox_cell($automation_tree_rule['name'], $automation_tree_rule['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='9'><em>\" . __('No Tree Rules Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($automation_tree_rules)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($automation_tree_rules_actions);\n\n\tform_end();\n}\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/cdef.php');\n\n$cdef_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item_remove_confirm':\n\t\tcdef_item_remove_confirm();\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tcdef_item_remove();\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tget_filter_request_var('cdef_id');\n\n\t\titem_movedown();\n\n\t\theader('Location: cdef.php?action=edit&id=' . get_request_var('cdef_id'));\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tget_filter_request_var('cdef_id');\n\n\t\titem_moveup();\n\n\t\theader('Location: cdef.php?action=edit&id=' . get_request_var('cdef_id'));\n\t\tbreak;\n\tcase 'item_remove':\n\t\tget_filter_request_var('cdef_id');\n\n\t\titem_remove();\n\n\t\theader('Location: cdef.php?action=edit&id=' . get_request_var('cdef_id'));\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\n\t\titem_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tcdef_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n    case 'ajax_dnd':\n        cdef_item_dnd();\n\n        break;\n\tdefault:\n\t\ttop_header();\n\n\t\tcdef();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    Global Form Functions\n   -------------------------- */\n\nfunction draw_cdef_preview($cdef_id) {\n\t?>\n\t<tr class='even'>\n\t\t<td style='padding:4px'>\n\t\t\t<pre>cdef=<?php print html_escape(get_cdef($cdef_id, true));?></pre>\n\t\t</td>\n\t</tr>\n\t<?php\n}\n\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\n\t// make sure ids are numeric\n\tif (isset_request_var('id') && ! is_numeric(get_filter_request_var('id'))) {\n\t\tset_request_var('id', 0);\n\t}\n\n\tif (isset_request_var('cdef_id') && ! is_numeric(get_filter_request_var('cdef_id'))) {\n\t\tset_request_var('cdef_id', 0);\n\t}\n\n\tif (isset_request_var('save_component_cdef')) {\n\t\t$save['id']     = form_input_validate(get_nfilter_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['hash']   = get_hash_cdef(get_nfilter_request_var('id'));\n\t\t$save['name']   = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['system'] = 0;\n\n\t\tif (!is_error_message()) {\n\t\t\t$cdef_id = sql_save($save, 'cdef');\n\n\t\t\tif ($cdef_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: cdef.php?header=false&action=edit&id=' . (empty($cdef_id) ? get_nfilter_request_var('id') : $cdef_id));\n\t} elseif (isset_request_var('save_component_item')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('cdef_id');\n\t\tget_filter_request_var('type');\n\t\t/* ==================================================== */\n\n\t\t$sequence = get_sequence(get_nfilter_request_var('id'), 'sequence', 'cdef_items', 'cdef_id=' . get_nfilter_request_var('cdef_id'));\n\n\t\t$save['id']       = form_input_validate(get_nfilter_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['hash']     = get_hash_cdef(get_nfilter_request_var('id'), 'cdef_item');\n\t\t$save['cdef_id']  = form_input_validate(get_nfilter_request_var('cdef_id'), 'cdef_id', '^[0-9]+$', false, 3);\n\t\t$save['sequence'] = $sequence;\n\t\t$save['type']     = form_input_validate(get_nfilter_request_var('type'), 'type', '^[0-9]+$', false, 3);\n\t\t$save['value']    = form_input_validate(get_nfilter_request_var('value'), 'value', '', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$cdef_item_id = sql_save($save, 'cdef_items');\n\n\t\t\tif ($cdef_item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: cdef.php?header=false&action=item_edit&cdef_id=' . get_nfilter_request_var('cdef_id') . '&id=' . (empty($cdef_item_id) ? get_nfilter_request_var('id') : $cdef_item_id));\n\t\t} else {\n\t\t\theader('Location: cdef.php?header=false&action=edit&id=' . get_nfilter_request_var('cdef_id'));\n\t\t}\n\t}\n}\n\nfunction duplicate_cdef($_cdef_id, $cdef_title) {\n\tglobal $fields_cdef_edit;\n\n\t$cdef       = db_fetch_row_prepared('SELECT * FROM cdef WHERE id = ?', array($_cdef_id));\n\t$cdef_items = db_fetch_assoc_prepared('SELECT * FROM cdef_items WHERE cdef_id = ?', array($_cdef_id));\n\n\t/* substitute the title variable */\n\t$cdef['name'] = str_replace('<cdef_title>', $cdef['name'], $cdef_title);\n\n\t/* create new entry: host_template */\n\t$save['id']   = 0;\n\t$save['hash'] = get_hash_cdef(0);\n\n\tforeach ($fields_cdef_edit as $field => $array) {\n\t\tif (!preg_match('/^hidden/', $array['method'])) {\n\t\t\t$save[$field] = $cdef[$field];\n\t\t}\n\t}\n\n\t$cdef_id = sql_save($save, 'cdef');\n\n\t/* create new entry(s): cdef_items */\n\tif (cacti_sizeof($cdef_items) > 0) {\n\t\tforeach ($cdef_items as $cdef_item) {\n\t\t\tunset($save);\n\n\t\t\t$save['id']       = 0;\n\t\t\t$save['hash']     = get_hash_cdef(0, 'cdef_item');\n\t\t\t$save['cdef_id']  = $cdef_id;\n\t\t\t$save['sequence'] = $cdef_item['sequence'];\n\t\t\t$save['type']     = $cdef_item['type'];\n\t\t\t$save['value']    = $cdef_item['value'];\n\n\t\t\tsql_save($save, 'cdef_items');\n\t\t}\n\t}\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $cdef_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM cdef WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM cdef_items WHERE ' . array_to_sql_or($selected_items, 'cdef_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* duplicate */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tduplicate_cdef($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: cdef.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$cdef_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$cdef_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM cdef WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$cdef_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('cdef.php');\n\n\thtml_start_box($cdef_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($cdef_array) && cacti_sizeof($cdef_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following CDEF.', 'Click \\'Continue\\' to delete all following CDEFs.', cacti_sizeof($cdef_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$cdef_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete CDEF', 'Delete CDEFs', cacti_sizeof($cdef_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* duplicate */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to duplicate the following CDEF. You can optionally change the title format for the new CDEF.', 'Click \\'Continue\\' to duplicate the following CDEFs. You can optionally change the title format for the new CDEFs.', cacti_sizeof($cdef_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$cdef_list</ul></div>\n\t\t\t\t\t<p>\" . __('Title Format:') . '<br>';\n\t\t\t\t\tform_text_box('title_format', '<cdef_title> (1)', '', '255', '30', 'text'); print \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Duplicate CDEF', 'Duplicate CDEFs', cacti_sizeof($cdef_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: cdef.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($cdef_array) ? serialize($cdef_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* --------------------------\n    CDEF Item Functions\n   -------------------------- */\n\nfunction cdef_item_remove_confirm() {\n\tglobal $cdef_functions, $cdef_item_types, $custom_cdef_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tform_start('cdef.php');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$cdef       = db_fetch_row_prepared('SELECT * FROM cdef WHERE id = ?', array(get_request_var('id')));\n\t$cdef_item  = db_fetch_row_prepared('SELECT * FROM cdef_items WHERE id = ?', array(get_request_var('cdef_id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following CDEF Item.');?></p>\n\t\t\t<p><?php print __('CDEF Name: \\'%s\\'', $cdef['name']);?><br>\n\t\t\t<em><?php $cdef_item_type = $cdef_item['type']; print $cdef_item_types[$cdef_item_type];?></em>: <strong><?php print get_cdef_item_name($cdef_item['id']);?></strong></p>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\");$(\".deleteMarker\").blur();' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove CDEF Item');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').click(function(data) {\n\t\t\t$.post('cdef.php?action=item_remove', {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tcdef_id: <?php print get_request_var('cdef_id');?>,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}, function(data) {\n\t\t\t\t$('#cdialog').dialog('close');\n\t\t\t\t$('.deleteMarker').blur();\n\t\t\t\tloadPageNoHeader('cdef.php?action=edit&header=false&id=<?php print get_request_var('id');?>');\n\t\t\t});\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction cdef_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM cdef_items WHERE id = ?', array(get_request_var('cdef_id')));\n}\n\nfunction item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tmove_item_down('cdef_items', get_request_var('id'), 'cdef_id=' . get_request_var('cdef_id'));\n}\n\nfunction item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tmove_item_up('cdef_items', get_request_var('id'), 'cdef_id=' . get_request_var('cdef_id'));\n}\n\nfunction item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM cdef_items WHERE id = ?', array(get_request_var('id')));\n}\n\nfunction item_edit() {\n\tglobal $cdef_item_types, $cdef_functions, $cdef_operators, $custom_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('cdef_id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$cdef = db_fetch_row_prepared('SELECT *\n\t\t\tFROM cdef_items\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (cacti_sizeof($cdef)) {\n\t\t\t$current_type = $cdef['type'];\n\t\t\t$values[$current_type] = $cdef['value'];\n\t\t}\n\t} else {\n\t\t$cdef = array();\n\t}\n\n\thtml_start_box(__('CDEF Preview'), '100%', '', '3', 'center', '');\n\tdraw_cdef_preview(get_request_var('cdef_id'));\n\thtml_end_box();\n\n\tform_start('cdef.php', 'chk');\n\n\t$cdef_name = db_fetch_cell_prepared('SELECT name\n\t\tFROM cdef\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('cdef_id')));\n\n\thtml_start_box(__('CDEF Items [edit: %s]', html_escape($cdef_name)), '100%', '', '3', 'center', '');\n\n\tif (isset_request_var('type_select')) {\n\t\t$current_type = get_request_var('type_select');\n\t} elseif (isset($cdef['type'])) {\n\t\t$current_type = $cdef['type'];\n\t} else {\n\t\t$current_type = '1';\n\t}\n\n\t$form_cdef = array(\n\t\t'type_select' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('CDEF Item Type'),\n\t\t\t'description'   => __('Choose what type of CDEF item this is.'),\n\t\t\t'value'         => $current_type,\n\t\t\t'array'         => $cdef_item_types\n\t\t),\n\t\t'value' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('CDEF Item Value'),\n\t\t\t'description'   => __('Enter a value for this CDEF item.'),\n\t\t\t'value'         => (isset($cdef['value']) ? $cdef['value']:'')\n\t\t),\n\t\t'id' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => isset_request_var('id') ?  get_request_var('id') : '0',\n\t\t),\n\t\t'type' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => $current_type\n\t\t),\n\t\t'cdef_id' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => get_request_var('cdef_id')\n\t\t),\n\t\t'save_component_item' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => '1'\n\t\t)\n\t);\n\n\tswitch ($current_type) {\n\tcase '1':\n\t\t$form_cdef['value']['array'] = $cdef_functions;\n\n\t\tbreak;\n\tcase '2':\n\t\t$form_cdef['value']['array'] = $cdef_operators;\n\n\t\tbreak;\n\tcase '4':\n\t\t$form_cdef['value']['array'] = $custom_data_source_types;\n\n\t\tbreak;\n\tcase '5':\n\t\t$form_cdef['value']['method'] = 'drop_sql';\n\t\t$form_cdef['value']['sql']    = 'SELECT name, id FROM cdef WHERE `system`=0 ORDER BY name';\n\n\t\tbreak;\n\tcase '6':\n\t\t$form_cdef['value']['method']     = 'textbox';\n\t\t$form_cdef['value']['max_length'] = '255';\n\t\t$form_cdef['value']['size']       = '30';\n\n\t\tbreak;\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($form_cdef, $cdef)\n\t\t)\n\t);\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#type_select').unbind().change(function() {\n\t\t\tstrURL  = 'cdef.php?action=item_edit';\n\t\t\tstrURL += '&id=' + $('#id').val();\n\t\t\tstrURL += '&cdef_id=' + $('#cdef_id').val();\n\t\t\tstrURL += '&type_select=' + $('#type_select').val();\n\t\t\tstrURL += '&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n\n\tform_save_button('cdef.php?action=edit&id=' . get_request_var('cdef_id'));\n}\n\n/* ---------------------\n    CDEF Functions\n   --------------------- */\n\nfunction cdef_item_dnd() {\n\t/* ================= Input validation ================= */\n\tget_filter_request_var('id');\n\t/* ================= Input validation ================= */\n\n\t$continue = true;\n\n\tif (isset_request_var('cdef_item') && is_array(get_nfilter_request_var('cdef_item'))) {\n\t\t$cdef_ids = get_nfilter_request_var('cdef_item');\n\n\t\tif (cacti_sizeof($cdef_ids)) {\n\t\t\t$sequence = 1;\n\t\t\tforeach($cdef_ids as $cdef_id) {\n\t\t\t\t$cdef_id = str_replace('line', '', $cdef_id);\n\t\t\t\tinput_validate_input_number($cdef_id);\n\n\t\t\t\tdb_execute_prepared('UPDATE cdef_items\n\t\t\t\t\tSET sequence = ?\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($sequence, $cdef_id));\n\n\t\t\t\t$sequence++;\n\t\t\t}\n\t\t}\n\t}\n\n\theader('Location: cdef.php?action=edit&header=false&id=' . get_request_var('id'));\n}\n\nfunction cdef_edit() {\n\tglobal $cdef_item_types, $fields_cdef_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$cdef = db_fetch_row_prepared('SELECT * FROM cdef WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('CDEF [edit: %s]', html_escape($cdef['name']));\n\t} else {\n\t\t$header_label = __('CDEF [new]');\n\t}\n\n\tform_start('cdef.php', 'cdef');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_cdef_edit, (isset($cdef) ? $cdef : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('id')) {\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\tdraw_cdef_preview(get_request_var('id'));\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('CDEF Items'), '100%', '', '3', 'center', 'cdef.php?action=item_edit&cdef_id=' . $cdef['id']);\n\n\t\t$display_text = array(\n\t\t\tarray('display' => __('Item'), 'align' => 'left'),\n\t\t\tarray('display' => __('Item Value'), 'align' => 'left')\n\t\t);\n\n\t\thtml_header($display_text, 2);\n\n\t\t$cdef_items = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM cdef_items\n\t\t\tWHERE cdef_id = ?\n\t\t\tORDER BY sequence',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$i = 1;\n\t\t$total_items = cacti_sizeof($cdef_items);\n\t\tif (cacti_sizeof($cdef_items)) {\n\t\t\tforeach ($cdef_items as $cdef_item) {\n\t\t\t\tform_alternate_row('line' . $cdef_item['id'], true, true);?>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a class='linkEditMain' href='<?php print html_escape('cdef.php?action=item_edit&id=' . $cdef_item['id'] . '&cdef_id=' . $cdef['id']);?>'><?php print __('Item #%d', $i);?></a>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<em><?php $cdef_item_type = $cdef_item['type']; print $cdef_item_types[$cdef_item_type];?></em>: <?php print html_escape(get_cdef_item_name($cdef_item['id']));?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif (read_config_option('drag_and_drop') == '') {\n\t\t\t\t\t\t\tif ($i < $total_items && $total_items > 0) {\n\t\t\t\t\t\t\t\techo '<a class=\"pic fa fa-caret-down moveArrow\" href=\"' . html_escape('cdef.php?action=item_movedown&id=' . $cdef_item['id'] . '&cdef_id=' . $cdef_item['cdef_id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\techo '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ($i > 1 && $i <= $total_items) {\n\t\t\t\t\t\t\t\techo '<a class=\"pic fa fa-caret-up moveArrow\" href=\"' . html_escape('cdef.php?action=item_moveup&id=' . $cdef_item['id'] .\t'&cdef_id=' . $cdef_item['cdef_id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\techo '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<a id='<?php print $cdef['id'] . '_' . $cdef_item['id'];?>' class='delete deleteMarker fa fa-times' title='<?php print __esc('Delete');?>' href='#'></a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<?php\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('cdef.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t$('#cdef_edit3').find('.cactiTable').attr('id', 'cdef_item');\n\t\t$('.cdialog').remove();\n\t\t$('body').append(\"<div class='cdialog' id='cdialog'></div>\");\n\n\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n\t\t$('#cdef_item').tableDnD({\n\t\t\tonDrop: function(table, row) {\n\t\t\t\tloadPageNoHeader('cdef.php?action=ajax_dnd&id=<?php isset_request_var('id') ? print get_request_var('id') : print 0;?>&'+$.tableDnD.serialize());\n\t\t\t}\n\t\t});\n\t\t<?php } ?>\n\n\t\t$('.delete').click(function(event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tid = $(this).attr('id').split('_');\n\t\t\trequest = 'cdef.php?action=item_remove_confirm&id='+id[0]+'&cdef_id='+id[1];\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t\t$('#cdialog').dialog({ title: '<?php print __('Delete CDEF Item');?>', minHeight: 80, minWidth: 500 });\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction cdef() {\n\tglobal $cdef_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_cdef');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('CDEFs'), '100%', '', '3', 'center', 'cdef.php?action=edit');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_cdef' action='cdef.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' name='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('CDEFs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='has_graphs' <?php print (get_request_var('has_graphs') == 'true' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='has_graphs'><?php print __('Has Graphs');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type='text/javascript'>\n\n\t\t\tfunction applyFilter() {\n\t\t\t\tstrURL  = 'cdef.php?header=false';\n\t\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\t\tstrURL += '&has_graphs='+$('#has_graphs').is(':checked');\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = 'cdef.php?clear=1&header=false';\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\t$('#refresh').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#has_graphs').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#form_cdef').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (name LIKE '%\" . get_request_var('filter') . \"%' AND `system`=0)\";\n\t} else {\n\t\t$sql_where = 'WHERE `system`=0';\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_having = 'HAVING graphs>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(`rows`)\n\t\tFROM (\n\t\t\tSELECT cd.id AS `rows`,\n\t\t\tSUM(CASE WHEN local_graph_id>0 THEN 1 ELSE 0 END) AS graphs\n\t\t\tFROM cdef AS cd\n\t\t\tLEFT JOIN graph_templates_item AS gti\n\t\t\tON gti.cdef_id=cd.id\n\t\t\t$sql_where\n\t\t\tGROUP BY cd.id\n\t\t\t$sql_having\n\t\t) AS rs\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$cdef_list = db_fetch_assoc(\"SELECT rs.*,\n\t\tSUM(CASE WHEN local_graph_id=0 THEN 1 ELSE 0 END) AS templates,\n\t\tSUM(CASE WHEN local_graph_id>0 THEN 1 ELSE 0 END) AS graphs\n\t\tFROM (\n\t\t\tSELECT cd.*, gti.local_graph_id\n\t\t\tFROM cdef AS cd\n\t\t\tLEFT JOIN graph_templates_item AS gti\n\t\t\tON gti.cdef_id=cd.id\n\t\t\tWHERE `system`=0\n\t\t\tGROUP BY cd.id, gti.graph_template_id, gti.local_graph_id\n\t\t) AS rs\n\t\t$sql_where\n\t\tGROUP BY rs.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('cdef.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('CDEFs'), 'page', 'main');\n\n\tform_start('cdef.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'      => array('display' => __('CDEF Name'),       'align' => 'left',  'sort' => 'ASC', 'tip' => __('The name of this CDEF.')),\n\t\t'nosort'    => array('display' => __('Deletable'),       'align' => 'right', 'tip'  => __('CDEFs that are in use cannot be Deleted.  In use is defined as being referenced by a Graph or a Graph Template.')),\n\t\t'graphs'    => array('display' => __('Graphs Using'),    'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Graphs using this CDEF.')),\n\t\t'templates' => array('display' => __('Templates Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Graphs Templates using this CDEF.')));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($cdef_list)) {\n\t\tforeach ($cdef_list as $cdef) {\n\t\t\tif ($cdef['graphs'] == 0 && $cdef['templates'] == 0) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $cdef['id'], false, $disabled);\n\t\t\tform_selectable_cell(filter_value($cdef['name'], get_request_var('filter'), 'cdef.php?action=edit&id=' . $cdef['id']), $cdef['id']);\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $cdef['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($cdef['graphs'], '-1'), $cdef['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($cdef['templates'], '-1'), $cdef['id'], '', 'right');\n\t\t\tform_checkbox_cell($cdef['name'], $cdef['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='4'><em>\" . __('No CDEFs') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($cdef_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($cdef_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('./include/auth.php');\n\n$aggregate_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\taggregate_color_form_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\taggregate_color_form_actions();\n\n\t\tbreak;\n\tcase 'template_edit':\n\t\ttop_header();\n\t\taggregate_color_template_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\taggregate_color_template();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\n/** draw_color_template_items_list \t- draws a nicely formatted list of color items for display\n *   \t\t\t\t\t\t\t\t  on an edit form\n * @param array $item_list \t\t\t- an array representing the list of color items. this array should\n *   \t\t\t\t\t\t\t\t  come directly from the output of db_fetch_assoc()\n * @param string $filename \t\t\t- the filename to use when referencing any external url\n * @param string $url_data \t\t\t- any extra GET url information to pass on when referencing any\n *   \t\t\t\t\t\t\t\t  external url\n * @param bool $disable_controls \t- whether to hide all edit/delete functionality on this form\n */\nfunction draw_color_template_items_list($item_list, $filename, $url_data, $disable_controls) {\n\tglobal $config;\n\tglobal $struct_color_template_item;\n\n\t$display_text = array(\n\t\tarray('display' => __('Color Item'), 'align' => 'left', 'nohide' => true),\n\t\tarray('display' => __('Color'), 'align' => 'left', 'nohide' => true),\n\t\tarray('display' => __('Hex'), 'align' => 'left', 'nohide' => true),\n\t);\n\n\thtml_header($display_text, 2);\n\n\t$i = 1;\n\t$total_items = cacti_sizeof($item_list);\n\n\tif (cacti_sizeof($item_list)) {\n\t\tforeach ($item_list as $item) {\n\t\t\t/* alternating row color */\n\t\t\tform_alternate_row('line' . $item['color_template_item_id'], true, true);\n\n\t\t\tprint '<td>';\n\n\t\t\tif ($disable_controls == false) {\n\t\t\t\tprint \"<a class='linkEditMain' href='\" . html_escape($filename . '?action=item_edit&color_template_item_id=' . $item['color_template_item_id'] . \"&$url_data\") . \"'>\";\n\t\t\t}\n\n\t\t\tprint __('Item # %d', $i);\n\n\t\t\tif ($disable_controls == false) {\n\t\t\t\tprint '</a>';\n\t\t\t}\n\n\t\t\tprint \"</td>\\n\";\n\n\t\t\tprint \"<td style='\" . ((isset($item['hex'])) ? \"background-color:#\" . $item['hex'] . \";'\" : \"\") . \"></td>\\n\";\n\n\t\t\tprint \"<td>\" . $item['hex'] . \"</td>\\n\";\n\n\t\t\tif ($disable_controls == false) {\n\t\t\t\tprint \"<td class='right nowrap'>\";\n\n\t\t\t\tif (read_config_option('drag_and_drop') == '') {\n\t\t\t\t\tif ($i < $total_items && $total_items > 1) {\n\t\t\t\t\t\techo '<a class=\"pic fa fa-caret-down moveArrow\" href=\"' . html_escape('color_templates_items.php?action=item_movedown&color_template_item_id=' . $item['color_template_item_id'] . '&color_template_id=' . $item['color_template_id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\techo '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($i > 1 && $i <= $total_items) {\n\t\t\t\t\t\techo '<a class=\"pic fa fa-caret-up moveArrow\" href=\"' . html_escape('color_templates_items.php?action=item_moveup&color_template_item_id=' . $item['color_template_item_id'] . '&color_template_id=' . $item['color_template_id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\techo '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprint \"<a class='delete deleteMarker fa fa-times' id='\" .  $item['color_template_id'] . '_' . $item['color_template_item_id'] . \"' title='\" . __esc('Delete') . \"'></a>\";\n\n\t\t\t\tprint \"</td>\\n\";\n\t\t\t}\n\n\t\t\tform_end_row();\n\n\t\t\t$i++;\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='7'><em>\" . __('No Items') . \"</em></td></tr>\";\n\t}\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n/**\n * aggregate_color_form_save\tthe save function\n */\nfunction aggregate_color_form_save() {\n\tif (isset_request_var('save_component_color')) {\n\t\tif (isset_request_var('color_template_id')) {\n\t\t\t$save1['color_template_id'] = get_nfilter_request_var('color_template_id');\n\t\t} else {\n\t\t\t$save1['color_template_id'] = 0;\n\t\t}\n\n\t\t$save1['name'] = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\n\t\tcacti_log('Saved ID: ' . $save1['color_template_id'] . ' Name: ' . $save1['name'], false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\n\t\tif (!is_error_message()) {\n\t\t\t$color_template_id = sql_save($save1, 'color_templates', 'color_template_id');\n\n\t\t\tcacti_log('Saved ID: ' . $color_template_id, false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);\n\n\t\t\tif ($color_template_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\t}\n\n\theader('Location: color_templates.php?header=false&action=template_edit&color_template_id=' . (empty($color_template_id) ? get_nfilter_request_var('color_template_id') : $color_template_id));\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n/**\n * aggregate_color_form_actions\t\tthe action function\n */\nfunction aggregate_color_form_actions() {\n\tglobal $aggregate_actions, $config;\n\tinclude_once($config['base_path'] . '/lib/api_aggregate.php');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM color_templates WHERE ' . array_to_sql_or($selected_items, 'color_template_id'));\n\t\t\t\tdb_execute('DELETE FROM color_template_items WHERE ' . array_to_sql_or($selected_items, 'color_template_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tduplicate_color_template($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: color_templates.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$color_list = ''; $i = 0;\n\n\t/* loop through each of the color templates selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\t\t\t$color_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM color_templates WHERE color_template_id = ?', array($matches[1]))) . '</li>';\n\t\t\t$color_array[] = $matches[1];\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('color_templates.php');\n\n\thtml_start_box($aggregate_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($color_array) && cacti_sizeof($color_array)) {\n\t\tif (get_request_var('drp_action') == '1') { /* delete */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following Color Template', 'Click \\'Continue\\' to delete following Color Templates', cacti_sizeof($color_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$color_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Color Template', 'Delete Color Templates', cacti_sizeof($color_array)) . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to duplicate the following Color Template. You can optionally change the title format for the new color template.', 'Click \\'Continue\\' to duplicate following Color Templates. You can optionally change the title format for the new color templates.', cacti_sizeof($color_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$color_list</ul></div>\n\t\t\t\t\t<p>\" . __('Title Format:') . \"<br>\"; form_text_box('title_format', '<template_title> (1)', '', '255', '30', 'text'); print \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Duplicate Color Template', 'Duplicate Color Templates', cacti_sizeof($color_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: color_templates.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($color_array) ? serialize($color_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/**\n * aggregate_color_item\t\tshow all color template items\n */\nfunction aggregate_color_item() {\n\tglobal $config;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('color_template_id');\n\t/* ==================================================== */\n\n\tif (isempty_request_var('color_template_id')) {\n\t\t$template_item_list = array();\n\n\t\t$header_label = __('Color Template Items [new]');\n\t} else {\n\t\t$template_item_list = db_fetch_assoc_prepared('SELECT\n\t\t\tcti.color_template_id, cti.color_template_item_id, cti.sequence, colors.hex\n\t\t\tFROM color_template_items AS cti\n\t\t\tLEFT JOIN colors\n\t\t\tON cti.color_id=colors.id\n\t\t\tWHERE cti.color_template_id = ?\n\t\t\tORDER BY cti.sequence ASC',\n\t\t\tarray(get_request_var('color_template_id')));\n\n\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM color_templates\n\t\t\tWHERE color_template_id = ?',\n\t\t\tarray(get_request_var('color_template_id')));\n\n\t\t$header_label = __('Color Template Items [edit: %s]', html_escape($name));\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', 'color_templates_items.php?action=item_edit&color_template_id=' . html_escape_request_var('color_template_id'));\n\n\tdraw_color_template_items_list($template_item_list, 'color_templates_items.php', 'color_template_id=' . html_escape_request_var('color_template_id'), false);\n\n\thtml_end_box();\n\n    ?>\n    <script type='text/javascript'>\n\n    $(function() {\n        $('#color_templates_template_edit2_child').attr('id', 'color_item');\n        $('.cdialog').remove();\n        $('body').append(\"<div class='cdialog' id='cdialog'></div>\");\n\n\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n        $('#color_item').tableDnD({\n            onDrop: function(table, row) {\n                loadPageNoHeader('color_templates_items.php?action=ajax_dnd&id=<?php isset_request_var('color_template_id') ? print get_request_var('color_template_id') : print 0;?>&'+$.tableDnD.serialize());\n            }\n        });\n\t\t<?php } ?>\n\n        $('.delete').click(function (event) {\n            event.preventDefault();\n\n            id = $(this).attr('id').split('_');\n            request = 'color_templates_items.php?action=item_remove_confirm&id='+id[0]+'&color_id='+id[1];\n            $.get(request)\n\t\t.done(function(data) {\n\t                $('#cdialog').html(data);\n        \t        applySkin();\n\t\t\t$('#cdialog').dialog({ title: '<?php print __('Delete Color Item');?>', minHeight: 80, minWidth: 500 });\n \t\t})\n\t\t.fail(function(data) {\n\t\t\tgetPresentHTTPError(data);\n\t\t});\n        }).css('cursor', 'pointer');\n    });\n\n    </script>\n    <?php\n\n}\n\n/* ----------------------------\n    template - Color Templates\n   ---------------------------- */\n/**\n * aggregate_color_template_edit\tedit the color template\n */\nfunction aggregate_color_template_edit() {\n\tglobal $config, $image_types, $fields_color_template_template_edit, $struct_aggregate;\n\n\tinclude_once($config['base_path'] . '/lib/api_aggregate.php');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('color_template_id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('color_template_id')) {\n\t\t$template = db_fetch_row_prepared('SELECT * FROM color_templates WHERE color_template_id = ?', array(get_request_var('color_template_id')));\n\t\t$header_label = __('Color Template [edit: %s]', html_escape($template['name']));\n\t} else {\n\t\t$header_label = __('Color Template [new]');\n\t}\n\n\tform_start('color_templates.php', 'color_template_edit');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_color_template_template_edit, (isset($template) ? $template : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('color_template_id', (isset($template['color_template_id']) ? $template['color_template_id'] : '0'), '');\n\tform_hidden_box('save_component_color', '1', '');\n\n\t/* color item list goes here */\n\tif (!isempty_request_var('color_template_id')) {\n\t\taggregate_color_item();\n\t}\n\n\tform_save_button('color_templates.php', 'return', 'color_template_id');\n}\n\n\n/**\n * aggregate_color_template\t\tmaintain color templates\n */\nfunction aggregate_color_template() {\n\tglobal $aggregate_actions, $item_rows, $config;\n\tinclude_once($config['base_path'] . '/lib/api_aggregate.php');\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ct');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\tform_start('color_templates.php', 'form_template');\n\n\thtml_start_box(__('Color Templates'), '100%', '', '3', 'center', 'color_templates.php?action=template_edit');\n\n\t$filter_html = '<tr class=\"even\">\n\t\t<td>\n\t\t\t<table class=\"filterTable\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t' . __('Search') . '\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type=\"text\" class=\"ui-state-default ui-corner-all\" id=\"filter\" size=\"25\" value=\"' . html_escape_request_var('filter') . '\">\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t' . __('Color Templates') . '\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id=\"rows\" onChange=\"applyFilter()\">\n\t\t\t\t\t\t\t<option value=\"-1\" ';\n\tif (get_request_var('rows') == '-1') {\n\t\t$filter_html .= 'selected';\n\t}\n\n\t$filter_html .= '>' . __('Default') . '</option>';\n\n\tif (cacti_sizeof($item_rows)) {\n\t\tforeach ($item_rows as $key => $value) {\n\t\t\t$filter_html .= \"<option value='\" . $key . \"'\";\n\t\t\tif (get_request_var('rows') == $key) {\n\t\t\t\t$filter_html .= ' selected';\n\t\t\t}\n\t\t\t$filter_html .= '>' . $value . \"</option>\\n\";\n\t\t}\n\t}\n\n\t$filter_html .= '\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"has_graphs\" ' . (get_request_var('has_graphs') == 'true' ? 'checked':'') . ' onChange=\"applyFilter()\">\n\t\t\t\t\t\t\t<label for=\"has_graphs\">' . __('Has Graphs') . '</label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type=\"button\" class=\"ui-button ui-corner-all ui-widget\" id=\"refresh\" value=\"' . __esc('Go') . '\">\n\t\t\t\t\t\t\t<input type=\"button\" class=\"ui-button ui-corner-all ui-widget\" id=\"clear\" value=\"' . __esc('Clear') . '\">\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>';\n\n\tprint $filter_html;\n\n\thtml_end_box();\n\n\tform_end();\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where = '';\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (ct.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ' : 'WHERE ') . ' (templates>0 OR graphs>0)';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(ct.color_template_id)\n\t\tFROM color_templates AS ct\n\t\tLEFT JOIN (\n\t\t\tSELECT color_template, COUNT(*) AS templates\n\t\t\tFROM aggregate_graph_templates_item\n\t\t\tGROUP BY color_template\n\t\t) AS templates\n\t\tON ct.color_template_id=templates.color_template\n\t\tLEFT JOIN (\n\t\t\tSELECT color_template, COUNT(*) AS graphs\n\t\t\tFROM aggregate_graphs_graph_item\n\t\t\tGROUP BY color_template\n\t\t) AS graphs\n\t\tON ct.color_template_id=graphs.color_template\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$template_list = db_fetch_assoc(\"SELECT\n\t\tct.color_template_id, ct.name, templates.templates, graphs.graphs\n\t\tFROM color_templates AS ct\n\t\tLEFT JOIN (\n\t\t\tSELECT color_template, COUNT(*) AS templates\n\t\t\tFROM aggregate_graph_templates_item\n\t\t\tGROUP BY color_template\n\t\t) AS templates\n\t\tON ct.color_template_id=templates.color_template\n\t\tLEFT JOIN (\n\t\t\tSELECT color_template, COUNT(*) AS graphs\n\t\t\tFROM aggregate_graphs_graph_item\n\t\t\tGROUP BY color_template\n\t\t) AS graphs\n\t\tON ct.color_template_id=graphs.color_template\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('color_templates.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Color Templates'), 'page', 'main');\n\n\tform_start('color_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'      => array(__('Template Title'), 'ASC'),\n\t\t'nosort'    => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('Color Templates that are in use cannot be Deleted. In use is defined as being referenced by an Aggregate Template.')),\n\t\t'graphs'    => array('display' => __('Graphs'), 'align' => 'right', 'sort' => 'DESC'),\n\t\t'templates' => array('display' => __('Templates'), 'align' => 'right', 'sort' => 'DESC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['templates'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $template['color_template_id'], true);\n\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'color_templates.php?action=template_edit&color_template_id=' . $template['color_template_id'] . '&page=1'), $template['color_template_id']);\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $template['color_template_id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($template['graphs']), $template['color_template_id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($template['templates']), $template['color_template_id'], '', 'right');\n\t\t\tform_checkbox_cell($template['name'], $template['color_template_id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='\" . (cacti_sizeof($display_text)+1) . \"'><em>\" . __('No Color Templates Found') .\"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($aggregate_actions);\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'color_templates.php';\n\t\tstrURL += '?rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&has_graphs=' + $('#has_graphs').is(':checked');\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'color_templates.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#filter').change(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#form_template').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n}\n\n", "<?php\n/*\n ex: set tabstop=4 shiftwidth=4 autoindent:\n +-------------------------------------------------------------------------+\n | Copyright (C) 2010-2017 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDTool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('include/auth.php');\n\n$actions = array(\n\t1 => __('Rerun Check'),\n\t2 => __('Delete')\n);\n\n\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tdebug_add();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'view':\n\t\ttop_header();\n\t\tdebug_view();\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\tdebug_wizard();\n\t\tbottom_footer();\n\t\tbreak;\n}\n\nfunction form_actions() {\n\tglobal $actions, $assoc_actions;\n\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ================= input validation ================= */\n\n\n\n\t$selected_items = array();\n\tif (isset_request_var('save_list')) {\n\t\t/* loop through each of the lists selected on the previous page and get more info about them */\n\t\twhile (list($var,$val) = each($_POST)) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$selected_items[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t/* if we are to save this form, instead of display it */\n\t\tif (isset_request_var('save_list')) {\n\t\t\tif (get_request_var('drp_action') == '2') { /* delete */\n\t\t\t\tdebug_delete($selected_items);\n\t\t\t}elseif (get_request_var('drp_action') == '1') { /* Rerun */\n\t\t\t\tdebug_rerun($selected_items);\n\t\t\t}\n\t\t\theader('Location: data_debug.php?header=false');\n\t\t\texit;\n\t\t}\n\t}\n}\n\n\nfunction form_save() {\n\n\tif (isset_request_var('save_component')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('local_data_id');\n\n\t\t/* ==================================================== */\n\t\t$save = array();\n\t\t$save['id']        \t\t= get_nfilter_request_var('id');\n\t\t$save['datasource']      = get_nfilter_request_var('local_data_id');\n\n\t\t$info = array(\n\t\t\t'rrd_folder_writable' => '',\n\t\t\t'rrd_exists' => '',\n\t\t\t'rrd_writable' => '',\n\t\t\t'active' => '',\n\t\t\t'owner' => '',\n\t\t\t'runas_poller' => '',\n\t\t\t'runas_website' => get_running_user(),\n\t\t\t'last_result' => '',\n\t\t\t'valid_data' => '',\n\t\t\t'rra_timestamp' => '',\n\t\t\t'rra_timestamp2' => '',\n\t\t\t'rrd_match' => '');\n\t\t$save['info'] = serialize($info);\n\t\t$save['started'] = time();\n\t\t$save['user'] = intval($_SESSION['sess_user_id']);\n\n\t\tif (!is_error_message()) {\n\t\t\t$id = sql_save($save, 'data_debug');\n\t\t\tif ($id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_debug.php?header=false');\n\t\texit;\n\t}\n}\n\n\nfunction debug_rerun ($selected_items) {\n\n\t$info = array(\n\t\t'rrd_folder_writable' => '',\n\t\t'rrd_exists' => '',\n\t\t'rrd_writable' => '',\n\t\t'active' => '',\n\t\t'owner' => '',\n\t\t'runas_poller' => '',\n\t\t'runas_website' => get_running_user(),\n\t\t'last_result' => '',\n\t\t'valid_data' => '',\n\t\t'rra_timestamp' => '',\n\t\t'rra_timestamp2' => '',\n\t\t'rrd_match' => '');\n\t$info = serialize($info);\n\n\tif (!empty($selected_items)) {\n\t\tforeach($selected_items as $id) {\n\t\t\t$stime = time();\n\t\t\tdb_execute_prepared('UPDATE data_debug SET started = ?, done = 0, info = ?, issue = \"\" WHERE id = ? LIMIT 1', array($stime, $info, $id));\n\t\t}\n\t}\n\n\theader('Location: data_debug.php?header=false');\n\texit;\n}\n\nfunction debug_delete ($selected_items) {\n\tif (!empty($selected_items)) {\n\t\tforeach($selected_items as $id) {\n\t\t\t$stime = time();\n\t\t\tdb_execute_prepared('DELETE FROM data_debug WHERE id = ? LIMIT 1', array($id));\n\t\t}\n\t}\n\n\theader('Location: data_debug.php?header=false');\n\texit;\n}\n\nfunction debug_add() {\n\tglobal $config;\n\n\t$id = 0;\n\t$header_label = __('New Check');\n\n\tform_start('data_debug.php', 'debug');\n\n\thtml_start_box(htmlspecialchars($header_label), '100%', '', '3', 'center', '');\n\n\t$form_array = array(\n\t\t'general_header' => array(\n\t\t\t'friendly_name' => __('Debugging Data Source'),\n\t\t\t'method' => 'spacer',\n\t\t),\n\t\t'local_data_id' => array(\n\t\t\t'friendly_name' => __('Data Source'),\n\t\t\t'method' => 'drop_sql',\n\t\t\t'description' => __('Provide the Maintenance Schedule a meaningful name'),\n\t\t\t'sql' => 'SELECT DISTINCT local_data_id as id, name_cache as name FROM data_template_data WHERE local_data_id > 0 ORDER BY name_cache',\n\t\t\t'value' => ''\n\t\t),\n\t\t'save_component' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => '1'\n\t\t),\n\t\t'save' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value'  => 'edit'\n\t\t),\n\t\t'id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => $id\n\t\t)\n\t);\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array(\n\t\t\t\t'no_form_tag' => true\n\t\t\t\t),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\thtml_end_box();\n\n\tform_save_button('data_debug.php', 'return');\n\n\n}\n\nfunction debug_wizard() {\n\tglobal $actions, $refresh;\n\t$refresh = 60;\n\n\t$checks = db_fetch_assoc('SELECT * FROM data_debug ORDER BY id');\n\n\tform_start('data_debug.php', 'chk');\n\n\thtml_start_box(__('Data Source Debugger'), '100%', '', '2', 'center', 'data_debug.php?action=edit');\n\n\thtml_header_checkbox(array(__('ID'), __('User'), __('Started'), __('Data Source'), __('Status'), __('Writable'), __('Exists'), __('Active'), __('RRD Match'), __('Valid Data'), __('RRD Updated'), __('Issue')));\n\n\tif (cacti_sizeof($checks)) {\n\t\tforeach ($checks as $check) {\n\t\t\t$info = unserialize($check['info']);\n\t\t\t$issues = explode(\"\\n\", $check['issue']);\n\t\t\t$issue_line = '';\n\t\t\tif (cacti_sizeof($issues)) {\n\t\t\t\t$issue_line = $issues[0];\n\t\t\t}\n\t\t\t$issue_title = implode($issues, '<br/>');\n\n\t\t\t$user = db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array($check['user']), 'username');\n\t\t\tform_alternate_row('line' . $check['id']);\n\t\t\t$name = get_data_source_title($check['datasource']);\n\t\t\t$title = $name;\n\t\t\tif (strlen($name) > 50) {\n\t\t\t\t$name = substr($name, 0, 50);\n\t\t\t}\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" title=\"' . $title .'\" href=\"' . html_escape('data_debug.php?action=view&id=' . $check['id']) . '\">' . html_escape($name) . '</a>', $check['id']);\n\t\t\tform_selectable_ecell($user, $check['id']);\n\t\t\tform_selectable_cell(date('F j, Y, G:i', $check['started']), $check['id']);\n\t\t\tform_selectable_ecell($check['datasource'], $check['id']);\n\t\t\tform_selectable_cell(debug_icon(($check['done'] ? (strlen($issue_line) ? 'off' : 'on' ) : '')), $check['id'], '', 'center');\n\t\t\tform_selectable_cell(debug_icon($info['rrd_writable']), $check['id'], '', 'center');\n\t\t\tform_selectable_cell(debug_icon($info['rrd_exists']), $check['id'], '', 'center');\n\t\t\tform_selectable_cell(debug_icon($info['active']), $check['id'], '', 'center');\n\t\t\tform_selectable_cell(debug_icon($info['rrd_match']), $check['id'], '', 'center');\n\t\t\tform_selectable_cell(debug_icon($info['valid_data']), $check['id'], '', 'center');\n\t\t\tform_selectable_cell(debug_icon(($info['rra_timestamp2'] != '' ? 1 : '')), $check['id'], '', 'center');\n\t\t\tform_selectable_cell('<a class=\\'linkEditMain\\' href=\\'#\\' title=\"' . html_escape($issue_title) . '\">' . html_escape(strlen(trim($issue_line)) ? $issue_line : __('<none>')) . '</a>', $check['id']);\n\t\t\tform_checkbox_cell($check['id'], $check['id']);\n\t\t\tform_end_row();\n\t\t}\n\t}else{\n\t\tprint \"<tr><td colspan='5'><em>\" . __('No Checks') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tform_hidden_box('save_list', '1', '');\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n\nfunction debug_view() {\n\tglobal $config, $refresh;\n\t$refresh = 60;\n\n\tget_filter_request_var('id');\n\t$id = get_nfilter_request_var('id');\n\n\t$check = db_fetch_row_prepared('SELECT * FROM data_debug WHERE id = ?', array($id));\n\tif (isset($check) && is_array($check)) {\n\t\t$check['info'] = unserialize($check['info']);\n\t}\n\t$dtd = db_fetch_row_prepared('SELECT * from data_template_data WHERE local_data_id = ?', array($check['datasource']));\n\t$real_pth = str_replace('<path_rra>', $config['rra_path'], $dtd['data_source_path']);\n\n\t$poller_data = array();\n\tif (!empty($check['info']['last_result'])) {\n\t\tforeach ($check['info']['last_result'] as $a => $l) {\n\t\t\t$poller_data[] = \"$a: $l\";\n\t\t}\n\t}\n\t$poller_data = implode('<br>', $poller_data);\n\n\t$rra_updated = '';\n\tif (isset($check['info']['rra_timestamp2'])) {\n\t\t$rra_updated = $check['info']['rra_timestamp2'] != '' ? 1 : '';\n\t}\n\n\t$issue = '';\n\tif (isset($check['issue'])) {\n\t\t$issue = $check['issue'];\n\t}\n\n\t$fields = array(\n\t\tarray('name' => 'owner', 'title' => __('RRD Owner'), 'icon' => '-'),\n\t\tarray('name' => 'runas_website', 'title' => __('Website runs as')),\n\t\tarray('name' => 'runas_poller', 'title' => __('Poller runs as')),\n\t\tarray('name' => 'rrd_folder_writable', 'title' => __('Is RRA Folder writeable by poller?'), 'value' => dirname($real_pth)),\n\t\tarray('name' => 'rrd_writable', 'title' => __('Is RRD writeable by poller?'), 'value' => $real_pth),\n\t\tarray('name' => 'rrd_exists', 'title' => __('Does the RRD Exist?')),\n\t\tarray('name' => 'active', 'title' => __('Is the Data Source set as Active?')),\n\t\tarray('name' => 'last_result', 'title' => __('Did the poller receive valid data?'), 'value' => $poller_data),\n\t\tarray('name' => 'rra_updated', 'title' => __('Was the RRD File updated?'), 'value' => '', 'icon' => $rra_updated),\n\t\tarray('name' => 'rra_timestamp', 'title' => __('First Check TimeStamp'), 'icon' => '-'),\n\t\tarray('name' => 'rra_timestamp2', 'title' => __('Second Check TimeStamp'), 'icon' => '-'),\n\t\tarray('name' => 'convert_name', 'title' => __('Were we able to convert the title?'), 'value' => get_data_source_title($check['datasource'])),\n\t\tarray('name' => 'rrd_match', 'title' => __('Does the RRA Profile match the RRD File structure?'), 'value' => ''),\n\t\tarray('name' => 'issue', 'title' => __('Issue'), 'value' => $issue, 'icon' => '-'),\n\t);\n\n\thtml_start_box(__('Data Source Debugger'), '', '', '2', 'center', '');\n\thtml_header(array(__('Check'), __('Value'), __('Results')));\n\n\t$i = 1;\n\tforeach ($fields as $field) {\n\t\t$field_name = $field['name'];\n\n\t\tform_alternate_row('line' . $i);\n\t\tform_selectable_ecell($field['title'], $i);\n\n\t\t$value = __('<not set>');\n\t\t$icon  = '';\n\n\t\tif (array_key_exists($field_name, $check['info'])) {\n\t\t\t$value = $check['info'][$field_name];\n\t\t\t$icon  = debug_icon($check['info'][$field_name]);\n\t\t}\n\n\t\tif (array_key_exists('value', $field)) {\n\t\t\t$value = $field['value'];\n\t\t}\n\n\t\tif (array_key_exists('icon', $field)) {\n\t\t\t$icon = $field['icon'];\n\t\t}\n\n\t\t$value_title = $value;\n\t\tif (strlen($value) > 100) {\n\t\t\t$value = substr($value, 0, 100);\n\t\t}\n\n\t\tform_selectable_ecell($value, $i, '', '', $value_title);\n\t\tform_selectable_cell($icon, $i);\n\n\t\tform_end_row();\n\t\t$i++;\n\t}\n\n\n\thtml_end_box(false);\n}\n\nfunction debug_icon($result) {\n\tif ($result === '' || $result === false) {\n\t\t\treturn '<i class=\"fa fa-spinner fa-pulse fa-fw\"></i>';\n\t}\n\tif ($result === '-') {\n\t\t\treturn '<i class=\"fa fa-info-circle\"></i>';\n\t}\n\tif ($result === 1 || $result === 'on') {\n\t\t\treturn '<i class=\"fa fa-check\" style=\"color:green\"></i>';\n\t}\n\tif ($result === 0 || $result === 'off') {\n\t\t\treturn '<i class=\"fa fa-times\" style=\"color:red\"></i>';\n\t}\n\treturn '<i class=\"fa fa-warn-triagle\" style=\"color:orange\"></i>';\n}\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n$di_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'field_remove_confirm':\n\t\tfield_remove_confirm();\n\n\t\tbreak;\n\tcase 'field_remove':\n\t\tfield_remove();\n\n\t\theader('Location: data_input.php?header=false&action=edit&id=' . get_filter_request_var('data_input_id'));\n\t\tbreak;\n\tcase 'field_edit':\n\t\ttop_header();\n\n\t\tfield_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tdata_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tdata();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction duplicate_data_input($_data_input_id, $input_title) {\n\t$orig_input = db_fetch_row_prepared('SELECT *\n\t\tFROM data_input\n\t\tWHERE id = ?',\n\t\tarray($_data_input_id));\n\n\tif (cacti_sizeof($orig_input)) {\n\t\tunset($save);\n\t\t$save['id']           = 0;\n\t\t$save['hash']         = get_hash_data_input(0);\n\t\t$save['name']         = str_replace('<input_title>', $orig_input['name'], $input_title);\n\t\t$save['input_string'] = $orig_input['input_string'];\n\t\t$save['type_id']      = $orig_input['type_id'];\n\n\t\t$data_input_id = sql_save($save, 'data_input');\n\n\t\tif (!empty($data_input_id)) {\n\t\t\t$data_input_fields = db_fetch_assoc_prepared('SELECT *\n\t\t\t\tFROM data_input_fields\n\t\t\t\tWHERE data_input_id = ?',\n\t\t\t\tarray($_data_input_id));\n\n\t\t\tif (cacti_sizeof($data_input_fields)) {\n\t\t\t\tforeach($data_input_fields as $dif) {\n\t\t\t\t\tunset($save);\n\t\t\t\t\t$save['id']            = 0;\n\t\t\t\t\t$save['hash']          = get_hash_data_input(0, 'data_input_field');\n\t\t\t\t\t$save['data_input_id'] = $data_input_id;\n\t\t\t\t\t$save['name']          = $dif['name'];\n\t\t\t\t\t$save['data_name']     = $dif['data_name'];\n\t\t\t\t\t$save['input_output']  = $dif['input_output'];\n\t\t\t\t\t$save['update_rra']    = $dif['update_rra'];\n\t\t\t\t\t$save['sequence']      = $dif['sequence'];\n\t\t\t\t\t$save['type_code']     = $dif['type_code'];\n\t\t\t\t\t$save['regexp_match']  = $dif['regexp_match'];\n\t\t\t\t\t$save['allow_nulls']   = $dif['allow_nulls'];\n\n\t\t\t\t\t$data_input_field_id = sql_save($save, 'data_input_fields');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction form_save() {\n\tglobal $registered_cacti_names;\n\n\tif (isset_request_var('save_component_data_input')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save['id']           = get_nfilter_request_var('id');\n\t\t$save['hash']         = get_hash_data_input(get_nfilter_request_var('id'));\n\t\t$save['name']         = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['input_string'] = form_input_validate(get_nfilter_request_var('input_string'), 'input_string', '', true, 3);\n\t\t$save['type_id']      = form_input_validate(get_nfilter_request_var('type_id'), 'type_id', '^[0-9]+$', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$data_input_id = sql_save($save, 'data_input');\n\n\t\t\tif ($data_input_id) {\n\t\t\t\tdata_input_save_message($data_input_id);\n\n\t\t\t\t/* get a list of each field so we can note their sequence of occurrence in the database */\n\t\t\t\tif (!isempty_request_var('id')) {\n\t\t\t\t\tdb_execute_prepared('UPDATE data_input_fields SET sequence = 0 WHERE data_input_id = ?', array(get_nfilter_request_var('id')));\n\n\t\t\t\t\tgenerate_data_input_field_sequences(get_nfilter_request_var('input_string'), get_nfilter_request_var('id'));\n\n\t\t\t\t\tupdate_replication_crc(0, 'poller_replicate_data_input_fields_crc');\n\t\t\t\t}\n\n\t\t\t\tpush_out_data_input_method($data_input_id);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_input.php?header=false&action=edit&id=' . (empty($data_input_id) ? get_nfilter_request_var('id') : $data_input_id));\n\t} elseif (isset_request_var('save_component_field')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('data_input_id');\n\t\tget_filter_request_var('sequence');\n\t\tget_filter_request_var('input_output', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^(in|out)$/')));\n\t\t/* ==================================================== */\n\n\t\t$save['id']            = get_request_var('id');\n\t\t$save['hash']          = get_hash_data_input(get_nfilter_request_var('id'), 'data_input_field');\n\t\t$save['data_input_id'] = get_request_var('data_input_id');\n\t\t$save['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['data_name']     = form_input_validate(get_nfilter_request_var('data_name'), 'data_name', '', false, 3);\n\t\t$save['input_output']  = get_nfilter_request_var('input_output');\n\t\t$save['update_rra']    = form_input_validate((isset_request_var('update_rra') ? get_nfilter_request_var('update_rra') : ''), 'update_rra', '', true, 3);\n\t\t$save['sequence']      = get_request_var('sequence');\n\t\t$save['type_code']     = form_input_validate((isset_request_var('type_code') ? get_nfilter_request_var('type_code') : ''), 'type_code', '', true, 3);\n\t\t$save['regexp_match']  = form_input_validate((isset_request_var('regexp_match') ? get_nfilter_request_var('regexp_match') : ''), 'regexp_match', '', true, 3);\n\t\t$save['allow_nulls']   = form_input_validate((isset_request_var('allow_nulls') ? get_nfilter_request_var('allow_nulls') : ''), 'allow_nulls', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$data_input_field_id = sql_save($save, 'data_input_fields');\n\n\t\t\tif ($data_input_field_id) {\n\t\t\t\tdata_input_save_message(get_request_var('data_input_id'), 'field');\n\n\t\t\t\tif ((!empty($data_input_field_id)) && (get_request_var('input_output') == 'in')) {\n\t\t\t\t\tgenerate_data_input_field_sequences(db_fetch_cell_prepared('SELECT input_string FROM data_input WHERE id = ?', array(get_request_var('data_input_id'))), get_request_var('data_input_id'));\n\t\t\t\t}\n\n\t\t\t\tupdate_replication_crc(0, 'poller_replicate_data_input_fields_crc');\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: data_input.php?header=false&action=field_edit&data_input_id=' . get_request_var('data_input_id') . '&id=' . (empty($data_input_field_id) ? get_request_var('id') : $data_input_field_id) . (!isempty_request_var('input_output') ? '&type=' . get_request_var('input_output') : ''));\n\t\t} else {\n\t\t\theader('Location: data_input.php?header=false&action=edit&id=' . get_request_var('data_input_id'));\n\t\t}\n\t}\n}\n\nfunction data_input_save_message($data_input_id, $type = 'input') {\n\t$counts = db_fetch_row_prepared(\"SELECT\n\t\tSUM(CASE WHEN dtd.local_data_id=0 THEN 1 ELSE 0 END) AS templates,\n\t\tSUM(CASE WHEN dtd.local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\tFROM data_input AS di\n\t\tLEFT JOIN data_template_data AS dtd\n\t\tON di.id=dtd.data_input_id\n\t\tWHERE di.id = ?\",\n\t\tarray($data_input_id));\n\n\tif ($counts['templates'] == 0 && $counts['data_sources'] == 0) {\n\t\traise_message(1);\n\t} elseif ($counts['templates'] > 0 && $counts['data_sources'] == 0) {\n\t\tif ($type == 'input') {\n\t\t\traise_message('input_save_wo_ds');\n\t\t} else {\n\t\t\traise_message('input_field_save_wo_ds');\n\t\t}\n\t} else {\n\t\tif ($type == 'input') {\n\t\t\traise_message('input_save_w_ds');\n\t\t} else {\n\t\t\traise_message('input_field_save_w_ds');\n\t\t}\n\t}\n}\n\nfunction form_actions() {\n\tglobal $di_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdata_remove($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tduplicate_data_input($selected_items[$i], get_nfilter_request_var('input_title'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_input.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$di_list = ''; $i = 0;\n\n\t/* loop through each of the data inputs and process them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$di_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM data_input WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$di_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('data_input.php');\n\n\thtml_start_box($di_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($di_array) && cacti_sizeof($di_array)) {\n\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t$graphs = array();\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following Data Input Method', 'Click \\'Continue\\' to delete the following Data Input Method', cacti_sizeof($di_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$di_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to duplicate the following Data Input Method(s). You can optionally change the title format for the new Data Input Method(s).') . \"</p>\n                    <div class='itemlist'><ul>$di_list</ul></div>\n                    <p><strong>\" . __('Input Name:'). \"</strong><br>\"; form_text_box('input_title', '<input_title> (1)', '', '255', '30', 'text'); print \"</p>\n                </td>\n\t\t\t</tr>\\n\";\n\t\t}\n\n\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Data Input Method', 'Delete Data Input Methods', cacti_sizeof($di_array)) . \"'>\";\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: data_input.php?header=none');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($di_array) ? serialize($di_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* --------------------------\n    CDEF Item Functions\n   -------------------------- */\n\nfunction field_remove_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_input_id');\n\t/* ==================================================== */\n\n\tform_start('data_intput.php?action=edit&id' . get_request_var('data_input_id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$field = db_fetch_row_prepared('SELECT *\n\t\tFROM data_input_fields\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Data Input Field.');?></p>\n\t\t\t<p><?php print __('Field Name: %s', $field['data_name']);?><br>\n\t\t\t<p><?php print __('Friendly Name: %s', $field['name']);?><br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove Data Input Field');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').unbind('click').click(function(data) {\n\t\t\t$.post('data_input.php?action=field_remove', {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tdata_input_id: <?php print get_request_var('data_input_id');?>,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}, function(data) {\n\t\t\t\tloadPageNoHeader('data_input.php?action=edit&header=false&id=<?php print get_request_var('data_input_id');?>');\n\t\t\t});\n\t\t});\n\n\t\t$('#cancel').unbind().click(function() {\n\t\t\t$('#cdialog').dialog('close');\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction field_remove() {\n\tglobal $registered_cacti_names;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_input_id');\n\t/* ==================================================== */\n\n\t/* get information about the field we're going to delete so we can re-order the seqs */\n\t$field = db_fetch_row_prepared('SELECT input_output,data_input_id FROM data_input_fields WHERE id = ?', array(get_request_var('id')));\n\n\tdb_execute_prepared('DELETE FROM data_input_fields WHERE id = ?', array(get_request_var('id')));\n\tdb_execute_prepared('DELETE FROM data_input_data WHERE data_input_field_id = ?', array(get_request_var('id')));\n\n\t/* when a field is deleted; we need to re-order the field sequences */\n\tif (($field['input_output'] == 'in') && (preg_match_all('/<([_a-zA-Z0-9]+)>/', db_fetch_cell_prepared('SELECT input_string FROM data_input WHERE id = ?', array($field['data_input_id'])), $matches))) {\n\t\t$j = 0;\n\t\tfor ($i=0; ($i < cacti_count($matches[1])); $i++) {\n\t\t\tif (in_array($matches[1][$i], $registered_cacti_names) == false) {\n\t\t\t\t$j++;\n\t\t\t\tdb_execute_prepared(\"UPDATE data_input_fields SET sequence = ? WHERE data_input_id = ? AND input_output = 'in' AND data_name = ?\", array($j, $field['data_input_id'], $matches[1][$i]));\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate_replication_crc(0, 'poller_replicate_data_input_fields_crc');\n}\n\nfunction field_edit() {\n\tglobal $registered_cacti_names, $fields_data_input_field_edit_1, $fields_data_input_field_edit_2, $fields_data_input_field_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_input_id');\n\tget_filter_request_var('type', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^(in|out)$/')));\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$field = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_input_fields\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\tif (!isempty_request_var('type')) {\n\t\t$current_field_type = get_request_var('type');\n\t} else {\n\t\t$current_field_type = $field['input_output'];\n\t}\n\n\t$data_input = db_fetch_row_prepared('SELECT type_id, name\n\t\tFROM data_input\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('data_input_id')));\n\n\t/* obtain a list of available fields for this given field type (input/output) */\n\tif (($current_field_type == 'in') && (preg_match_all('/<([_a-zA-Z0-9]+)>/', db_fetch_cell_prepared('SELECT input_string FROM data_input WHERE id = ?', array(!isempty_request_var('data_input_id') ? get_request_var('data_input_id') : $field['data_input_id'])), $matches))) {\n\t\tfor ($i=0; ($i < cacti_count($matches[1])); $i++) {\n\t\t\tif (in_array($matches[1][$i], $registered_cacti_names) == false) {\n\t\t\t\t$current_field_name = $matches[1][$i];\n\t\t\t\t$array_field_names[$current_field_name] = $current_field_name;\n\t\t\t\tif (!isset($field)) {\n\t\t\t\t\t$field_id = db_fetch_cell_prepared('SELECT id FROM data_input_fields\n\t\t\t\t\t\tWHERE data_name = ?\n\t\t\t\t\t\tAND data_input_id = ?',\n\t\t\t\t\t\tarray($current_field_name, get_filter_request_var('data_input_id')));\n\t\t\t\t\tif (!$field_id > 0) {\n\t\t\t\t\t\t$field = array();\n\t\t\t\t\t\t$field['name'] = ucwords($current_field_name);\n\t\t\t\t\t\t$field['data_name'] = $current_field_name;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/* if there are no input fields to choose from, complain */\n\tif ((!isset($array_field_names)) && (isset_request_var('type') ? get_request_var('type') == 'in' : false) && ($data_input['type_id'] == '1')) {\n\t\tdisplay_custom_error_message(__('This script appears to have no input values, therefore there is nothing to add.'));\n\t\theader('Location: data_input.php?header=false&action=edit&id=' . get_filter_request_var('data_input_id'));\n\t\texit;\n\t}\n\n\tif ($current_field_type == 'out') {\n\t\t$header_name = __('Output Fields [edit: %s]', html_escape($data_input['name']));\n\t\t$dfield      = __('Output Field');\n\t} elseif ($current_field_type == 'in') {\n\t\t$header_name = __('Input Fields [edit: %s]', html_escape($data_input['name']));\n\t\t$dfield      = __('Input Field');\n\t}\n\n\tif (isset($field)) {\n\t\t$dfield .= ' ' . $field['data_name'];\n\t}\n\tform_start('data_input.php', 'data_input');\n\n\thtml_start_box($header_name, '100%', true, '3', 'center', '');\n\n\t$form_array = array();\n\n\t/* field name */\n\tif ((($data_input['type_id'] == '1') || ($data_input['type_id'] == '5')) && ($current_field_type == 'in')) { /* script */\n\t\t$form_array = inject_form_variables($fields_data_input_field_edit_1, $dfield, $array_field_names, (isset($field) ? $field : array()));\n\t} elseif ($current_field_type == 'out' || ($data_input['type_id'] != 1 && $data_input['type_id'] != 5)) {\n\t\t$form_array = inject_form_variables($fields_data_input_field_edit_2, $dfield, (isset($field) ? $field : array()));\n\t}\n\n\t/* ONLY if the field is an input */\n\tif ($current_field_type == 'in') {\n\t\tunset($fields_data_input_field_edit['update_rra']);\n\t} elseif ($current_field_type == 'out') {\n\t\tunset($fields_data_input_field_edit['regexp_match']);\n\t\tunset($fields_data_input_field_edit['allow_nulls']);\n\t\tunset($fields_data_input_field_edit['type_code']);\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array + inject_form_variables($fields_data_input_field_edit, (isset($field) ? $field : array()), $current_field_type, $_REQUEST)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_save_button('data_input.php?action=edit&id=' . get_request_var('data_input_id'));\n}\n\n/* -----------------------\n    Data Input Functions\n   ----------------------- */\n\nfunction data_remove($id) {\n\t$data_input_fields = db_fetch_assoc_prepared('SELECT id\n\t\tFROM data_input_fields\n\t\tWHERE data_input_id = ?',\n\t\tarray($id));\n\n\tif (is_array($data_input_fields)) {\n\t\tforeach ($data_input_fields as $data_input_field) {\n\t\t\tdb_execute_prepared('DELETE FROM data_input_data WHERE data_input_field_id = ?', array($data_input_field['id']));\n\t\t}\n\t}\n\n\tdb_execute_prepared('DELETE FROM data_input WHERE id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM data_input_fields WHERE data_input_id = ?', array($id));\n\n\tupdate_replication_crc(0, 'poller_replicate_data_input_fields_crc');\n\tupdate_replication_crc(0, 'poller_replicate_data_input_crc');\n}\n\nfunction data_edit() {\n\tglobal $config, $fields_data_input_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$data_id = get_nonsystem_data_input(get_request_var('id'));\n\t\tif ($data_id == 0 || $data_id == NULL) {\n\t\t\theader('Location: data_input.php');\n\t\t\treturn;\n\t\t}\n\n\t\t$data_input = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_input\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Data Input Methods [edit: %s]', html_escape($data_input['name']));\n\t} else {\n\t\t$data_input = array();\n\n\t\t$header_label = __('Data Input Methods [new]');\n\t}\n\n\tif (!isset($config['input_whitelist'])) {\n\t\tunset($fields_data_input_edit['whitelist_verification']);\n\t}\n\n\tform_start('data_input.php', 'data_input');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (cacti_sizeof($data_input)) {\n\t\tswitch ($data_input['type_id']) {\n\t\tcase DATA_INPUT_TYPE_SNMP:\n\t\t\t$fields_data_input_edit['type_id']['array'][DATA_INPUT_TYPE_SNMP] = __('SNMP Get');\n\t\t\tbreak;\n\t\tcase DATA_INPUT_TYPE_SNMP_QUERY:\n\t\t\t$fields_data_input_edit['type_id']['array'][DATA_INPUT_TYPE_SNMP_QUERY] = __('SNMP Query');\n\t\t\tbreak;\n\t\tcase DATA_INPUT_TYPE_SCRIPT_QUERY:\n\t\t\t$fields_data_input_edit['type_id']['array'][DATA_INPUT_TYPE_SCRIPT_QUERY] = __('Script Query');\n\t\t\tbreak;\n\t\tcase DATA_INPUT_TYPE_QUERY_SCRIPT_SERVER:\n\t\t\t$fields_data_input_edit['type_id']['array'][DATA_INPUT_TYPE_QUERY_SCRIPT_SERVER] = __('Script Query - Script Server');\n\t\t\tbreak;\n\t\t}\n\n\t\tif (isset($config['input_whitelist']) && isset($data_input['hash'])) {\n\t\t\t$aud = verify_data_input_whitelist($data_input['hash'], $data_input['input_string']);\n\n\t\t\tif ($aud === true) {\n\t\t\t\t$fields_data_input_edit['whitelist_verification']['value'] = __('White List Verification Succeeded.');\n\t\t\t} elseif ($aud == false) {\n\t\t\t\t$fields_data_input_edit['whitelist_verification']['value'] = __('White List Verification Failed.  Run CLI script input_whitelist.php to correct.');\n\t\t\t} elseif ($aud == '-1') {\n\t\t\t\t$fields_data_input_edit['whitelist_verification']['value'] = __('Input String does not exist in White List.  Run CLI script input_whitelist.php to correct.');\n\t\t\t}\n\t\t}\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_data_input_edit, $data_input)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('id')) {\n\t\thtml_start_box(__('Input Fields'), '100%', '', '3', 'center', 'data_input.php?action=field_edit&type=in&data_input_id=' . get_request_var('id'));\n\n\t\tprint \"<tr class='tableHeader'>\";\n\t\tDrawMatrixHeaderItem(__('Name'), '', 1);\n\t\tDrawMatrixHeaderItem(__('Friendly Name'), '', 1);\n\t\tDrawMatrixHeaderItem(__('Field Order'), '', 2);\n\t\tprint '</tr>';\n\n\t\t$fields = db_fetch_assoc_prepared(\"SELECT id, data_name, name, sequence\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output = 'in'\n\t\t\tORDER BY sequence, data_name\",\n\t\t\tarray(get_request_var('id')));\n\n\t\t$counts = db_fetch_row_prepared(\"SELECT\n\t\t\tSUM(CASE WHEN dtd.local_data_id=0 THEN 1 ELSE 0 END) AS templates,\n\t\t\tSUM(CASE WHEN dtd.local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\t\tFROM data_input AS di\n\t\t\tLEFT JOIN data_template_data AS dtd\n\t\t\tON di.id=dtd.data_input_id\n\t\t\tWHERE di.id = ?\",\n\t\t\tarray(get_request_var('id')));\n\n\t\t$output_disabled  = false;\n\t\t$save_alt_message = false;\n\t\tif (!cacti_sizeof($counts)) {\n\t\t\t$output_disabled  = false;\n\t\t\t$save_alt_message = false;\n\t\t} elseif ($counts['data_sources'] > 0) {\n\t\t\t$output_disabled  = true;\n\t\t\t$save_alt_message = true;\n\t\t} elseif ($counts['templates'] > 0) {\n\t\t\t$output_disabled  = false;\n\t\t\t$save_alt_message = true;\n\t\t}\n\n\t\t$i = 0;\n\t\tif (cacti_sizeof($fields)) {\n\t\t\tforeach ($fields as $field) {\n\t\t\t\tform_alternate_row('', true);\n\t\t\t\t?>\n\t\t\t\t<td>\n\t\t\t\t\t<a class=\"linkEditMain\" href=\"<?php print html_escape('data_input.php?action=field_edit&id=' . $field['id'] . '&data_input_id=' . get_request_var('id'));?>\"><?php print html_escape($field['data_name']);?></a>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print html_escape($field['name']);?>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print $field['sequence']; if ($field['sequence'] == '0') { print ' ' . __('(Not In Use)'); }?>\n\t\t\t\t</td>\n\t\t\t\t<td class=\"right\">\n\t\t\t\t\t<a class='delete deleteMarker fa fa-times' href='<?php print html_escape('data_input.php?action=field_remove_confirm&id=' . $field['id'] . '&data_input_id=' . get_request_var('id'));?>' title='<?php print __esc('Delete');?>'></a>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td colspan=\"4\"><em>' . __('No Input Fields') . '</em></td></tr>';\n\t\t}\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('Output Fields'), '100%', '', '3', 'center', 'data_input.php?action=field_edit&type=out&data_input_id=' . get_request_var('id'));\n\t\tprint \"<tr class='tableHeader'>\";\n\t\tDrawMatrixHeaderItem(__('Name'),'',1);\n\t\tDrawMatrixHeaderItem(__('Friendly Name'),'',1);\n\t\tDrawMatrixHeaderItem(__('Update RRA'),'',2);\n\t\tprint '</tr>';\n\n\t\t$fields = db_fetch_assoc_prepared(\"SELECT id, name, data_name, update_rra, sequence\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output = 'out'\n\t\t\tORDER BY sequence, data_name\",\n\t\t\tarray(get_request_var('id')));\n\n\t\t$i = 0;\n\t\tif (cacti_sizeof($fields)) {\n\t\t\tforeach ($fields as $field) {\n\t\t\t\tform_alternate_row('', true);\n\t\t\t\t?>\n\t\t\t\t<td>\n\t\t\t\t\t<a class='linkEditMain' href='<?php print html_escape('data_input.php?action=field_edit&id=' . $field['id'] . '&data_input_id=' . get_request_var('id'));?>'><?php print html_escape($field['data_name']);?></a>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print html_escape($field['name']);?>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print html_boolean_friendly($field['update_rra']);?>\n\t\t\t\t</td>\n\t\t\t\t<td class='right'>\n\t\t\t\t\t<?php if ($output_disabled) {?>\n\t\t\t\t\t<a class='deleteMarkerDisabled fa fa-times' href='#' title='<?php print __esc('Output Fields can not be removed when Data Sources are present');?>'></a>\n\t\t\t\t\t<?php } else { ?>\n\t\t\t\t\t<a class='delete deleteMarker fa fa-times' href='<?php print html_escape('data_input.php?action=field_remove_confirm&id=' . $field['id'] . '&data_input_id=' . get_request_var('id'));?>' title='<?php print __esc('Delete');?>'></a>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td colspan=\"4\"><em>' . __('No Output Fields') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('data_input.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t$('body').append(\"<div id='cdialog'></div>\");\n\n\t\t$('.delete').unbind().click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\trequest = $(this).attr('href');\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete Data Input Field');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tmodal: false,\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\t});\n\n\t</script>\n\t<?php\n}\n\nfunction data() {\n\tglobal $input_types, $di_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_data_input');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('Data Input Methods'), '100%', '', '3', 'center', 'data_input.php?action=edit');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td class='noprint'>\n\t\t<form id='form_data_input' method='get' action='data_input.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr class='noprint'>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' name='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Input Methods');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t<script type='text/javascript'>\n\n\t\tfunction applyFilter() {\n\t\t\tstrURL  = 'data_input.php?header=false';\n\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\tfunction clearFilter() {\n\t\t\tstrURL = 'data_input.php?clear=1&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#refresh').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#clear').click(function() {\n\t\t\t\tclearFilter();\n\t\t\t});\n\n\t\t\t$('#form_data_input').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\t\t});\n\n\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (di.name like '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$sql_where .= ($sql_where != '' ? ' AND' : 'WHERE') . \" (di.hash NOT IN ('3eb92bb845b9660a7445cf9740726522', 'bf566c869ac6443b0c75d1c32b5a350e', '80e9e4c4191a5da189ae26d0e237f015', '332111d8b54ac8ce939af87a7eac0c06'))\";\n\n\t$sql_where  = api_plugin_hook_function('data_input_sql_where', $sql_where);\n\n\t$total_rows = db_fetch_cell(\"SELECT count(*)\n\t\tFROM data_input AS di\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$data_inputs = db_fetch_assoc(\"SELECT di.*,\n\t\tSUM(CASE WHEN dtd.local_data_id=0 THEN 1 ELSE 0 END) AS templates,\n\t\tSUM(CASE WHEN dtd.local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\tFROM data_input AS di\n\t\tLEFT JOIN data_template_data AS dtd\n\t\tON di.id=dtd.data_input_id\n\t\t$sql_where\n\t\tGROUP BY di.id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('data_input.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 6, __('Input Methods'), 'page', 'main');\n\n\tform_start('data_input.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'         => array('display' => __('Data Input Name'),    'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this Data Input Method.')),\n\t\t'nosort'       => array('display' => __('Deletable'),          'align' => 'right', 'tip' => __('Data Inputs that are in use cannot be Deleted. In use is defined as being referenced either by a Data Source or a Data Template.')),\n\t\t'data_sources' => array('display' => __('Data Sources Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Data Sources that use this Data Input Method.')),\n\t\t'templates'    => array('display' => __('Templates Using'),    'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Data Templates that use this Data Input Method.')),\n\t\t'type_id'      => array('display' => __('Data Input Method'),  'align' => 'left', 'sort' => 'ASC', 'tip' => __('The method used to gather information for this Data Input Method.')));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($data_inputs)) {\n\t\tforeach ($data_inputs as $data_input) {\n\t\t\t/* hide system types */\n\t\t\tif ($data_input['templates'] > 0 || $data_input['data_sources'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\t\t\tform_alternate_row('line' . $data_input['id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value($data_input['name'], get_request_var('filter'), 'data_input.php?action=edit&id=' . $data_input['id']), $data_input['id']);\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $data_input['id'],'', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($data_input['data_sources'], '-1'), $data_input['id'],'', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($data_input['templates'], '-1'), $data_input['id'],'', 'right');\n\t\t\tform_selectable_cell($input_types[$data_input['type_id']], $data_input['id']);\n\t\t\tform_checkbox_cell($data_input['name'], $data_input['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"' . (cacti_sizeof($display_text)+1) . '\"><em>' . __('No Data Input Methods Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($data_inputs)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($di_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n$dq_actions = array(\n\t1 => __('Delete')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item_moveup_dssv':\n\t\tdata_query_item_moveup_dssv();\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\t\tbreak;\n\tcase 'item_movedown_dssv':\n\t\tdata_query_item_movedown_dssv();\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\t\tbreak;\n\tcase 'item_remove_dssv':\n\t\tdata_query_item_remove_dssv();\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\t\tbreak;\n\tcase 'item_moveup_gsv':\n\t\tdata_query_item_moveup_gsv();\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\t\tbreak;\n\tcase 'item_movedown_gsv':\n\t\tdata_query_item_movedown_gsv();\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\t\tbreak;\n\tcase 'item_remove_gsv':\n\t\tdata_query_item_remove_gsv();\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit&id=' . get_filter_request_var('snmp_query_graph_id') . '&snmp_query_id=' . get_filter_request_var('snmp_query_id'));\n\t\tbreak;\n    case 'item_remove_confirm':\n        data_query_item_remove_confirm();\n\n        break;\n\tcase 'item_remove':\n\t\tdata_query_item_remove();\n\n\t\theader('Location: data_queries.php?header=false&action=edit&id=' . get_filter_request_var('snmp_query_id'));\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\n\t\tdata_query_item_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'remove':\n\t\tdata_query_remove();\n\n\t\theader ('Location: data_queries.php');\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tdata_query_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tdata_query();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tif (isset_request_var('save_component_snmp_query')) {\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('data_input_id');\n\n\t\t$save['id']            = get_request_var('id');\n\t\t$save['hash']          = get_hash_data_query(get_nfilter_request_var('id'));\n\t\t$save['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['description']   = form_input_validate(get_nfilter_request_var('description'), 'description', '', true, 3);\n\t\t$save['xml_path']      = form_input_validate(get_nfilter_request_var('xml_path'), 'xml_path', '', false, 3);\n\t\t$save['data_input_id'] = get_request_var('data_input_id');\n\n\t\t// Detect changing input id\n\t\tif (!empty($save['id'])) {\n\t\t\t$previous_input_id = db_fetch_cell_prepared('SELECT data_input_id\n\t\t\t\tFROM snmp_query\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($save['id']));\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$snmp_query_id = sql_save($save, 'snmp_query');\n\n\t\t\tif ($snmp_query_id) {\n\t\t\t\traise_message(1);\n\n\t\t\t\tdata_query_update_input_method($snmp_query_id, $previous_input_id, $save['data_input_id']);\n\n\t\t\t\tupdate_replication_crc(0, 'poller_replicate_snmp_query_crc');\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_queries.php?header=false&action=edit&id=' . (empty($snmp_query_id) ? get_request_var('id') : $snmp_query_id));\n\t} elseif (isset_request_var('save_component_snmp_query_item') && !isset_request_var('svg_x') && !isset_request_var('svds_x')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('snmp_query_id');\n\t\tget_filter_request_var('graph_template_id');\n\t\t/* ==================================================== */\n\n\t\t$save['id'] = get_request_var('id');\n\t\t$save['hash'] = get_hash_data_query(get_nfilter_request_var('id'), 'data_query_graph');\n\t\t$save['snmp_query_id'] = get_request_var('snmp_query_id');\n\t\t$save['name'] = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['graph_template_id'] = get_request_var('graph_template_id');\n\n\t\t$header = '';\n\n\t\tif (!is_error_message()) {\n\t\t\t$snmp_query_graph_id = sql_save($save, 'snmp_query_graph');\n\n\t\t\tif ($snmp_query_graph_id) {\n\t\t\t\traise_message(1);\n\n\t\t\t\t/* if the user changed the graph template, go through and delete everything that\n\t\t\t\twas associated with the old graph template */\n\t\t\t\tif (get_nfilter_request_var('graph_template_id') != get_nfilter_request_var('graph_template_id_prev')) {\n\t\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\t\tFROM snmp_query_graph_rrd_sv\n\t\t\t\t\t\tWHERE snmp_query_graph_id = ?',\n\t\t\t\t\t\tarray($snmp_query_graph_id));\n\n\t\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\t\tFROM snmp_query_graph_sv\n\t\t\t\t\t\tWHERE snmp_query_graph_id = ?',\n\t\t\t\t\t\tarray($snmp_query_graph_id));\n\t\t\t\t}\n\n\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\tFROM snmp_query_graph_rrd\n\t\t\t\t\tWHERE snmp_query_graph_id = ?',\n\t\t\t\t\tarray($snmp_query_graph_id));\n\n\t\t\t\tforeach ($_POST as $var => $val) {\n\t\t\t\t\tif (preg_match('/^dsdt_([0-9]+)_([0-9]+)_check/i', $var)) {\n\t\t\t\t\t\t$data_template_id = preg_replace('/^dsdt_([0-9]+)_([0-9]+).+/', \"\\\\1\", $var);\n\t\t\t\t\t\t$data_template_rrd_id = preg_replace('/^dsdt_([0-9]+)_([0-9]+).+/', \"\\\\2\", $var);\n\t\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\t\tinput_validate_input_number($data_template_id);\n\t\t\t\t\t\tinput_validate_input_number($data_template_rrd_id);\n\t\t\t\t\t\t/* ==================================================== */\n\n\t\t\t\t\t\tdb_execute_prepared('REPLACE INTO snmp_query_graph_rrd\n\t\t\t\t\t\t\t(snmp_query_graph_id, data_template_id, data_template_rrd_id, snmp_field_name)\n\t\t\t\t\t\t\tVALUES (?, ?, ?, ?)',\n\t\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t\t$snmp_query_graph_id,\n\t\t\t\t\t\t\t\t$data_template_id,\n\t\t\t\t\t\t\t\t$data_template_rrd_id,\n\t\t\t\t\t\t\t\tget_nfilter_request_var('dsdt_' .\n\t\t\t\t\t\t\t\t\t$data_template_id . '_' .\n\t\t\t\t\t\t\t\t\t$data_template_rrd_id . '_snmp_field_output')\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isset_request_var('header') && get_nfilter_request_var('header') == 'false') {\n\t\t\t\t\t$header = '&header=false';\n\t\t\t\t} else {\n\t\t\t\t\t$header = '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t\t$header = '';\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit' . $header . '&id=' . (empty($snmp_query_graph_id) ? get_request_var('id') : $snmp_query_graph_id) . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t} elseif (isset_request_var('svg_x')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('snmp_query_id');\n\t\tget_filter_request_var('graph_template_id');\n\t\t/* ==================================================== */\n\n\t\tif (isset_request_var('header') && get_nfilter_request_var('header') == 'false') {\n\t\t\t$header = '&header=false';\n\t\t} else {\n\t\t\t$header = '';\n\t\t}\n\n\t\tif  (isempty_request_var('svg_text')) {\n\t\t\traise_message(39);\n\t\t\theader('Location: data_queries.php?header=false&action=item_edit' . $header . '&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t\t\treturn;\n\t\t} elseif (isempty_request_var('svg_field')) {\n\t\t\traise_message(38);\n\t\t\theader('Location: data_queries.php?header=false&action=item_edit' . $header . '&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t\t\treturn;\n\t\t}\n\n\t\t/* suggested values -- graph templates */\n\t\t$sequence = get_sequence(0, 'sequence', 'snmp_query_graph_sv', 'snmp_query_graph_id=' . get_filter_request_var('id') . \" AND field_name = \" . db_qstr(get_nfilter_request_var('svg_field')));\n\n\t\t$hash   = get_hash_data_query(0, 'data_query_sv_graph');\n\t\t$header = '';\n\n\t\tdb_execute_prepared('INSERT INTO snmp_query_graph_sv\n\t\t\t(hash, snmp_query_graph_id, sequence, field_name, text)\n\t\t\tVALUES (?, ?, ?, ?, ?)',\n\t\t\tarray(\n\t\t\t\t$hash,\n\t\t\t\tget_request_var('id'),\n\t\t\t\t$sequence,\n\t\t\t\tget_nfilter_request_var('svg_field'),\n\t\t\t\tget_nfilter_request_var('svg_text')\n\t\t\t)\n\t\t);\n\n\t\tclear_messages();\n\n\t\tif (isset_request_var('header') && get_nfilter_request_var('header') == 'false') {\n\t\t\t$header = '&header=false';\n\t\t} else {\n\t\t\t$header = '';\n\t\t}\n\n\t\theader('Location: data_queries.php?header=false&action=item_edit' . $header . '&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t} elseif (isset_request_var('svds_x')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('snmp_query_id');\n\t\tget_filter_request_var('graph_template_id');\n\t\t/* ==================================================== */\n\n\t\tif (isset_request_var('header') && get_nfilter_request_var('header') == 'false') {\n\t\t\t$header = '&header=false';\n\t\t} else {\n\t\t\t$header = '';\n\t\t}\n\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^svds_([0-9]+)_x/i', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif  (isempty_request_var('svds_' . $matches[1] . '_text')) {\n\t\t\t\t\traise_message(39);\n\t\t\t\t\theader('Location: data_queries.php?header=false&action=item_edit' . $header . '&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t\t\t\t\treturn;\n\t\t\t\t} elseif (isempty_request_var('svds_' . $matches[1] . '_field')) {\n\t\t\t\t\traise_message(38);\n\t\t\t\t\theader('Location: data_queries.php?header=false&action=item_edit' . $header . '&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$sequence = get_sequence(0, 'sequence', 'snmp_query_graph_rrd_sv', 'snmp_query_graph_id=' . get_request_var('id')  . ' AND data_template_id=' . $matches[1] . \" AND field_name='\" . get_nfilter_request_var('svds_' . $matches[1] . '_field') . \"'\");\n\n\t\t\t\t$hash = get_hash_data_query(0, 'data_query_sv_data_source');\n\n\t\t\t\tdb_execute_prepared('INSERT INTO snmp_query_graph_rrd_sv\n\t\t\t\t\t(hash, snmp_query_graph_id, data_template_id, sequence, field_name, text)\n\t\t\t\t\tVALUES (?, ?, ?, ?, ?, ?)',\n\t\t\t\t\tarray(\n\t\t\t\t\t\t$hash, get_request_var('id'),\n\t\t\t\t\t\t$matches[1],\n\t\t\t\t\t\t$sequence,\n\t\t\t\t\t\tget_nfilter_request_var('svds_' . $matches[1] . '_field'),\n\t\t\t\t\t\tget_nfilter_request_var('svds_' . $matches[1] . '_text')\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tclear_messages();\n\n\t\t\t\tif (isset_request_var('header') && get_nfilter_request_var('header') == 'false') {\n\t\t\t\t\t$header = '&header=false';\n\t\t\t\t} else {\n\t\t\t\t\t$header = '';\n\t\t\t\t}\n\n\t\t\t\theader('Location: data_queries.php?header=false&action=item_edit' . $header . '&id=' . get_request_var('id') . '&snmp_query_id=' . get_request_var('snmp_query_id'));\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction form_actions() {\n\tglobal $dq_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t data_query_remove($selected_items[$i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_queries.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$dq_list = ''; $i = 0;\n\n\t/* loop through each of the data queries and process them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\t\tFROM snmp_query\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($matches[1]));\n\n\t\t\t$dq_list .= '<li>' . html_escape($name) . '</li>';\n\t\t\t$dq_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('data_queries.php');\n\n\thtml_start_box($dq_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($dq_array) && cacti_sizeof($dq_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t$graphs = array();\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following Data Query.', 'Click \\'Continue\\' to delete following Data Queries.', cacti_sizeof($dq_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$dq_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t}\n\n\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Data Query', 'Delete Data Query', cacti_sizeof($dq_array)) . \"'>\";\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: data_queries.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($dq_array) ? serialize($dq_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* ----------------------------\n    Data Query Graph Functions\n   ---------------------------- */\n\nfunction data_query_item_movedown_gsv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('snmp_query_graph_id');\n\t/* ==================================================== */\n\n\tmove_item_down('snmp_query_graph_sv', get_request_var('id'), 'snmp_query_graph_id=' . get_request_var('snmp_query_graph_id') . \" AND field_name = \" . db_qstr(get_nfilter_request_var('field_name')));\n}\n\nfunction data_query_item_moveup_gsv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('snmp_query_graph_id');\n\t/* ==================================================== */\n\n\tmove_item_up('snmp_query_graph_sv', get_request_var('id'), 'snmp_query_graph_id=' . get_request_var('snmp_query_graph_id') . \" AND field_name = \" . db_qstr(get_nfilter_request_var('field_name')));\n}\n\nfunction data_query_item_remove_gsv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM snmp_query_graph_sv\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n}\n\nfunction data_query_item_movedown_dssv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_template_id');\n\tget_filter_request_var('snmp_query_graph_id');\n\t/* ==================================================== */\n\n\tmove_item_down('snmp_query_graph_rrd_sv', get_request_var('id'), 'data_template_id=' . get_request_var('data_template_id') . ' AND snmp_query_graph_id=' . get_request_var('snmp_query_graph_id') . \" AND field_name = \" . db_qstr(get_nfilter_request_var('field_name')));\n}\n\nfunction data_query_item_moveup_dssv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_template_id');\n\tget_filter_request_var('snmp_query_graph_id');\n\t/* ==================================================== */\n\n\tmove_item_up('snmp_query_graph_rrd_sv', get_request_var('id'), 'data_template_id=' . get_request_var('data_template_id') . ' AND snmp_query_graph_id=' . get_request_var('snmp_query_graph_id') . \" AND field_name = \" . db_qstr(get_nfilter_request_var('field_name')));\n}\n\nfunction data_query_sv_check_sequences($type, $snmp_query_graph_id, $field_name) {\n\tif ($type == 'ds' || $type == 'gr') {\n\t\tif ($type == 'ds') {\n\t\t\t$table = 'snmp_query_graph_rrd_sv';\n\t\t} else {\n\t\t\t$table = 'snmp_query_graph_sv';\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n\n\t$bad_seq = db_fetch_cell_prepared(\"SELECT COUNT(sequence)\n\t\tFROM $table\n\t\tWHERE sequence <= 0\n\t\tAND field_name = ?\n\t\tAND snmp_query_graph_id = ?\",\n\t\tarray($field_name, $snmp_query_graph_id));\n\n\t$dup_seq = db_fetch_cell_prepared(\"SELECT SUM(count)\n\t\tFROM (\n\t\t\tSELECT sequence, COUNT(sequence) AS count\n\t\t\tFROM $table\n\t\t\tWHERE field_name = ?\n\t\t\tAND snmp_query_graph_id = ?\n\t\t\tGROUP BY sequence\n\t\t) AS t\n\t\tWHERE t.count > 1\",\n\t\tarray($field_name, $snmp_query_graph_id));\n\n\t// report any bad or duplicate sequencs to the log for reporting purposes\n\tif ($bad_seq > 0) {\n\t\tcacti_log('WARN: Found ' . $bad_seq . \" Bad Sequences in $table Table\", false, 'WEBUI', POLLER_VERBOSITY_HIGH);\n\t}\n\n\tif ($dup_seq > 0) {\n\t\tcacti_log('WARN: Found ' . $dup_seq . \" Duplicated Sequences in $table Table\", false, 'WEBUI', POLLER_VERBOSITY_HIGH);\n\t}\n\n\tif ($bad_seq > 0 || $dup_seq > 0) {\n\t\t// resequence the list so it has no gaps, and 0 values will appear at the top\n\t\t// since thats where they would have been displayed\n\t\tdb_execute_prepared(\"SET @seq = 0;\n\t\t\tUPDATE $table\n\t\t\tSET sequence = (@seq:=@seq+1)\n\t\t\tWHERE field_name = ?\n\t\t\tAND snmp_query_graph_id = ?\n\t\t\tORDER BY sequence, id;\",\n\t\t\tarray($field_name, $snmp_query_graph_id));\n\t}\n}\n\nfunction data_query_item_remove_dssv() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph_rrd_sv\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n}\n\nfunction data_query_item_remove_confirm() {\n\tglobal $vdef_functions, $vdef_item_types, $custom_vdef_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('snmp_query_id');\n\t/* ==================================================== */\n\n\tform_start('data_queries.php?action=edit&id' . get_request_var('snmp_query_id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$graph_template = db_fetch_row_prepared('SELECT *\n\t\tFROM snmp_query_graph\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Data Query Graph Association.');?></p>\n\t\t\t<p><?php print __('Graph Name: %s', $graph_template['name']);?><br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\");' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove VDEF Item');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').click(function(data) {\n\t\t\t$.post('data_queries.php?action=item_remove', {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tsnmp_query_id: <?php print get_request_var('snmp_query_id');?>,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}, function(data) {\n\t\t\t\t$('#cdialog').dialog('close');\n\t\t\t\tloadPageNoHeader('data_queries.php?action=edit&header=false&id=<?php print get_request_var('snmp_query_id');?>');\n\t\t\t});\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction data_query_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph_rrd\n\t\tWHERE snmp_query_graph_id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph_rrd_sv\n\t\tWHERE snmp_query_graph_id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph_sv\n\t\tWHERE snmp_query_graph_id = ?',\n\t\tarray(get_request_var('id')));\n}\n\nfunction data_query_item_edit() {\n\tglobal $fields_data_query_item_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('snmp_query_id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$snmp_query_item = db_fetch_row_prepared('SELECT *\n\t\t\tFROM snmp_query_graph\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\t$snmp_query   = db_fetch_row_prepared('SELECT name, xml_path\n\t\tFROM snmp_query\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('snmp_query_id')));\n\n\t$header_label = __('Associated Graph/Data Templates [edit: %s]', html_escape($snmp_query['name']));\n\n\tform_start('data_queries.php', 'data_queries');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_data_query_item_edit, (isset($snmp_query_item) ? $snmp_query_item : array()), $_REQUEST)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t?>\n\t<script type='text/javascript'>\n\t$('#graph_template_id').change(function() {\n\t\t$('#name').val($(this).children(':selected').text());\n\t});\n\t</script>\n\t<?php\n\n\tif (!empty($snmp_query_item['id'])) {\n\t\thtml_start_box( __('Associated Data Templates'), '100%', '', '3', 'center', '');\n\n\t\t$data_templates = db_fetch_assoc_prepared('SELECT data_template.id, data_template.name\n\t\t\tFROM (data_template, data_template_rrd, graph_templates_item)\n\t\t\tWHERE graph_templates_item.task_item_id = data_template_rrd.id\n\t\t\tAND data_template_rrd.data_template_id = data_template.id\n\t\t\tAND data_template_rrd.local_data_id = 0\n\t\t\tAND graph_templates_item.local_graph_id = 0\n\t\t\tAND graph_templates_item.graph_template_id = ?\n\t\t\tGROUP BY data_template.id\n\t\t\tORDER BY data_template.name', array($snmp_query_item['graph_template_id']));\n\n\t\t$i = 0;\n\t\tif (cacti_sizeof($data_templates)) {\n\t\t\tforeach ($data_templates as $data_template) {\n\t\t\t\tprint \"<tr class='tableHeader'>\n\t\t\t\t\t\t<th class='tableSubHeaderColumn'>\" . __('Data Template - %s', $data_template['name']) . '</th>\n\t\t\t\t\t</tr>';\n\n\t\t\t\t$data_template_rrds = db_fetch_assoc_prepared('SELECT dtr.id, dtr.data_source_name,\n\t\t\t\t\tsqgr.snmp_field_name, sqgr.snmp_query_graph_id\n\t\t\t\t\tFROM data_template_rrd AS dtr\n\t\t\t\t\tLEFT JOIN snmp_query_graph_rrd AS sqgr\n\t\t\t\t\tON sqgr.data_template_rrd_id = dtr.id\n\t\t\t\t\tAND sqgr.snmp_query_graph_id = ?\n\t\t\t\t\tAND sqgr.data_template_id = ?\n\t\t\t\t\tWHERE dtr.data_template_id = ?\n\t\t\t\t\tAND dtr.local_data_id = 0\n\t\t\t\t\tORDER BY dtr.data_source_name',\n\t\t\t\t\tarray(get_request_var('id'), $data_template['id'], $data_template['id']));\n\n\t\t\t\t$i = 0;\n\t\t\t\tif (cacti_sizeof($data_template_rrds)) {\n\t\t\t\t\tforeach ($data_template_rrds as $data_template_rrd) {\n\t\t\t\t\t\tif (empty($data_template_rrd['snmp_query_graph_id'])) {\n\t\t\t\t\t\t\t$old_value = '';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$old_value = 'on';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tform_alternate_row();\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td style='width:200px;'>\n\t\t\t\t\t\t\t\t\t\t<?php print __('Data Source');?>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td style='width:200px;'>\n\t\t\t\t\t\t\t\t\t\t<?php print $data_template_rrd['data_source_name'];?>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t\t$snmp_queries = get_data_query_array(get_request_var('snmp_query_id'));\n\t\t\t\t\t\t\t\t\t\t$xml_outputs  = array();\n\n\t\t\t\t\t\t\t\t\t\tif (isset($snmp_queries['fields']) && cacti_sizeof($snmp_queries['fields'])) {\n\t\t\t\t\t\t\t\t\t\t\tforeach ($snmp_queries['fields'] as $field_name => $field_array) {\n\t\t\t\t\t\t\t\t\t\t\t\tif ($field_array['direction'] == 'output' || $field_array['direction'] == 'input-output') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$xml_outputs[$field_name] = $field_name . ' (' . $field_array['name'] . ')';\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tform_dropdown('dsdt_' . $data_template['id'] . '_' . $data_template_rrd['id'] . '_snmp_field_output',$xml_outputs,'','',$data_template_rrd['snmp_field_name'],'','');?>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t\t\t\t\t<?php form_checkbox('dsdt_' . $data_template['id'] . '_' . $data_template_rrd['id'] . '_check', $old_value, '', '', '', get_request_var('id')); print '<br>';?>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tform_end_row();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('Suggested Values - Graphs'), '100%', '', '3', 'center', '');\n\n\t\t/* suggested values for graphs templates */\n\t\t$suggested_values = db_fetch_assoc_prepared('SELECT text, field_name, snmp_query_graph_id, id\n\t\t\tFROM snmp_query_graph_sv\n\t\t\tWHERE snmp_query_graph_id = ?\n\t\t\tORDER BY field_name, sequence',\n\t\t\tarray(get_request_var('id')));\n\n\t\thtml_header(array(\n\t\t\tarray('display' => __('Name'), 'align' => 'left'),\n\t\t\tarray('display' => __('Order'), 'align' => 'center'),\n\t\t\tarray('display' => __('Equation'), 'align' => 'left')\n\t\t), 2);\n\n\t\t$i = 0;\n\t\t$total_values = cacti_sizeof($suggested_values);\n\t\tif ($total_values) {\n\t\t\tforeach ($suggested_values as $suggested_value) {\n\t\t\t\tdata_query_sv_check_sequences('gr', $suggested_value['snmp_query_graph_id'], $suggested_value['field_name']);\n\n\t\t\t\tform_alternate_row();\n\n\t\t\t\t$show_up   = false;\n\t\t\t\t$show_down = false;\n\n\t\t\t\t// Handle up true\n\t\t\t\tif ($i != 0) {\n\t\t\t\t\t$show_up = true;\n\t\t\t\t}\n\n\t\t\t\t// Handle down true\n\t\t\t\tif ($total_values > 1 && $i < $total_values-1) {\n\t\t\t\t\t$show_down = true;\n\t\t\t\t}\n\n\t\t\t\t?>\n\t\t\t\t<td class='left'>\n\t\t\t\t\t<?php print html_escape($suggested_value['field_name']);?>\n\t\t\t\t</td>\n\t\t\t\t<td class='center'>\n\t\t\t\t\t<?php if ($show_down) {?>\n\t\t\t\t\t<a class='remover fa fa-caret-down moveArrow' title='<?php print __('Move Down');?>' href='<?php print html_escape('data_queries.php?action=item_movedown_gsv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&field_name=' . $suggested_value['field_name']);?>'></a>\n\t\t\t\t\t<?php } else {?>\n\t\t\t\t\t<span class='moveArrowNone'></span>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t\t<?php if ($show_up) {?>\n\t\t\t\t\t<a class='remover fa fa-caret-up moveArrow' title='<?php print __('Move Up');?>' href='<?php print html_escape('data_queries.php?action=item_moveup_gsv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&field_name=' . $suggested_value['field_name']);?>'></a>\n\t\t\t\t\t<?php } else {?>\n\t\t\t\t\t<span class='moveArrowNone'></span>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t</td>\n\t\t\t\t<td class='left'>\n\t\t\t\t\t<?php print html_escape($suggested_value['text']);?>\n\t\t\t\t</td>\n\t\t\t\t<td class='right'>\n\t\t\t\t\t<a class='remover deleteMarker fa fa-times' title='<?php print html_escape(__('Delete'));?>' href='<?php print html_escape('data_queries.php?action=item_remove_gsv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id'));?>'></a>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint \"<tr><td colspan='4'><em>\" . __('No Suggested Values Found') . \"</em></td></tr>\";\n\t\t}\n\n\t\tform_alternate_row();\n\t\t?>\n\t\t<td colspan='4'>\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t<?php print __('Field Name');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='svg_field' size='15'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t<?php print __('Suggested Value');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='svg_text' size='60'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='svg_x' name='svg_x' value='<?php print __esc('Add');?>' title='<?php print __('Add Graph Title Suggested Name');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td>\n\t\t<?php\n\t\tform_end_row();\n\n\t\thtml_end_box();\n\n\t\thtml_start_box( __('Suggested Values - Data Sources'), '100%', '', '3', 'center', '');\n\n\t\t/* suggested values for data templates */\n\t\tif (cacti_sizeof($data_templates)) {\n\t\t\tforeach ($data_templates as $data_template) {\n\t\t\t\t$suggested_values = db_fetch_assoc_prepared('SELECT text, field_name, snmp_query_graph_id, id\n\t\t\t\t\tFROM snmp_query_graph_rrd_sv\n\t\t\t\t\tWHERE snmp_query_graph_id = ?\n\t\t\t\t\tAND data_template_id = ?\n\t\t\t\t\tORDER BY field_name, sequence', array(get_request_var('id'), $data_template['id']));\n\n\t\t\t\thtml_header(array(\n\t\t\t\t\tarray('display' => __('Name'), 'align' => 'left'),\n\t\t\t\t\tarray('display' => __('Order'), 'align' => 'center'),\n\t\t\t\t\tarray('display' => __('Equation'), 'align' => 'left')\n\t\t\t\t), 2);\n\n\t\t\t\t$i = 0;\n\t\t\t\t$total_values = cacti_sizeof($suggested_values);\n\n\t\t\t\tif ($total_values) {\n\t\t\t\t\t$prev_name = '';\n\t\t\t\t\tforeach ($suggested_values as $suggested_value) {\n\t\t\t\t\t\tdata_query_sv_check_sequences('ds', $suggested_value['snmp_query_graph_id'], $suggested_value['field_name']);\n\n\t\t\t\t\t\tform_alternate_row();\n\n\t\t\t\t\t\t$show_up   = false;\n\t\t\t\t\t\t$show_down = false;\n\n\t\t\t\t\t\t// Handle up true\n\t\t\t\t\t\tif ($i != 0) {\n\t\t\t\t\t\t\t$show_up = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Handle down true\n\t\t\t\t\t\tif ($total_values > 1 && $i < $total_values-1) {\n\t\t\t\t\t\t\t$show_down = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<td class='left'>\n\t\t\t\t\t\t\t<?php print html_escape($suggested_value['field_name']);?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='center'>\n\t\t\t\t\t\t\t<?php if ($show_down) {?>\n\t\t\t\t\t\t\t<a class='remover fa fa-caret-down moveArrow' title='<?php print __('Move Down');?>' href='<?php print html_escape('data_queries.php?action=item_movedown_dssv&snmp_query_graph_id=' . get_request_var('id') . '&id='. $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&data_template_id=' . $data_template['id'] . '&field_name=' . $suggested_value['field_name']);?>'></a>\n\t\t\t\t\t\t\t<?php } else {?>\n\t\t\t\t\t\t\t<span class='moveArrowNone'></span>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t<?php if ($show_up) {?>\n\t\t\t\t\t\t\t<a class='remover fa fa-caret-up moveArrow' title='<?php print __('Move Up');?>' href='<?php print html_escape('data_queries.php?action=item_moveup_dssv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&data_template_id=' . $data_template['id'] . '&field_name=' . $suggested_value['field_name']);?>'></a>\n\t\t\t\t\t\t\t<?php } else {?>\n\t\t\t\t\t\t\t<span class='moveArrowNone'></span>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='nowrap left'>\n\t\t\t\t\t\t\t<?php print html_escape($suggested_value['text']);?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t\t<a class='remover deleteMarker fa fa-times' title='<?php print __('Delete');?>' href='<?php print html_escape('data_queries.php?action=item_remove_dssv&snmp_query_graph_id=' . get_request_var('id') . '&id=' . $suggested_value['id'] . '&snmp_query_id=' . get_request_var('snmp_query_id') . '&data_template_id=' . $data_template['id']);?>'></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<?php\n\n\t\t\t\t\t\tform_end_row();\n\n\t\t\t\t\t\t$prev_name = $suggested_value['field_name'];\n\t\t\t\t\t\t$i++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint \"<tr><td colspan='4'><em>\" . __('No Suggested Values Found') . \"</em></td></tr>\";\n\t\t\t\t}\n\n\t\t\t\tform_alternate_row();\n\t\t\t\t?>\n\t\t\t\t<td colspan='4'>\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t\t\t<?php print __('Field Name');?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='text' class='svds_field ui-state-default ui-corner-all' id='svds_<?php print $data_template['id'];?>_field' name='svds_<?php print $data_template['id'];?>_field' size='15'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t\t\t<?php print __('Suggested Value');?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='text' class='svds_text ui-state-default ui-corner-all' id='svds_<?php print $data_template['id'];?>_text' name='svds_<?php print $data_template['id'];?>_text' size='60'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input type='button' class='svds_x ui-button ui-corner-all ui-widget' id='svds_<?php print $data_template['id'];?>_x' name='svds_<?php print $data_template['id'];?>_x' value='<?php print __esc('Add');?>' title='<?php print __('Add Data Source Name Suggested Name');?>'>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tif (isset($snmp_query_item['graph_template_id'])) {\n\t\t$item = $snmp_query_item['graph_template_id'];\n\t} else {\n\t\t$item = 0;\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tvar graph_template_id_prev=<?php print $item;?>;\n\n\t$('.remover').click(function(event) {\n\t\tevent.preventDefault();\n\t\thref=$(this).attr('href');\n\t\t$.get(href)\n\t\t\t.done(function(data) {\n\t\t\t\t$('form[action=\"data_queries.php\"]').unbind();\n\t\t\t\t$('#main').html(data);\n\t\t\t\tapplySkin();\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\t});\n\n\t$('input[id=\"svg_x\"]').click(function() {\n\t\t$.post('data_queries.php', {\n\t\t\tgraph_template_id_prev:graph_template_id_prev,\n\t\t\taction:'save',\n\t\t\tname:$('#name').val(),\n\t\t\tgraph_template_id:$('#graph_template_id').val(),\n\t\t\tid:$('#id').val(),\n\t\t\theader:'false',\n\t\t\tsave_component_snmp_query_item:'1',\n\t\t\tsnmp_query_id:$('#snmp_query_id').val(),\n\t\t\tsvg_field:$('#svg_field').val(),\n\t\t\tsvg_text:$('#svg_text').val(),\n\t\t\tsvg_x:'Add',\n\t\t\t__csrf_magic: csrfMagicToken\n\t\t}).done(function(data) {\n\t\t\t$('#main').html(data);\n\t\t\tapplySkin();\n\t\t});\n\t});\n\n\t$('input.svds_x').click(function() {\n\t\tvar $form = $(this).closest('form');\n\t\tvar svds_text_name=$form.find('input.svds_text').attr('name');\n\t\tvar svds_field_name=$form.find('input.svds_field').attr('name');\n\t\tvar svds_x_name=$form.find('input.svds_x').attr('name');\n\n\t\tvar jSON = $.parseJSON('{ ' +\n\t\t\t'\"graph_template_id_prev\":\"'+graph_template_id_prev + '\", ' +\n\t\t\t'\"action\":\"save\", ' +\n\t\t\t'\"name\":\"'+$('#name').val() + '\", ' +\n\t\t\t'\"graph_template_id\":\"'+$('#graph_template_id').val() + '\", ' +\n\t\t\t'\"id\":\"'+$('#id').val() + '\", ' +\n\t\t\t'\"header\":\"false\", ' +\n\t\t\t'\"__csrf_magic\":\"'+csrfMagicToken+'\", ' +\n\t\t\t'\"save_component_snmp_query_item\":\"1\", ' +\n\t\t\t'\"snmp_query_id\":\"'+$('#snmp_query_id').val() + '\", ' +\n\t\t\t'\"'+svds_field_name+'\":\"'+$form.find('input.svds_field').val() + '\", ' +\n\t\t\t'\"'+svds_text_name+'\":\"'+$form.find('input.svds_text').val() + '\", ' +\n\t\t\t'\"'+svds_x_name+'\":\"Add\", ' +\n\t\t\t'\"svds_x\":\"Add\" }');\n\n\t\t$.post('data_queries.php', jSON).done(function(data) {\n\t\t\t$('#main').html(data);\n\t\t\tapplySkin();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\tform_save_button('data_queries.php?action=edit&id=' . get_request_var('snmp_query_id'), 'return');\n}\n\n/* ---------------------\n    Data Query Functions\n   --------------------- */\n\nfunction data_query_remove($id) {\n\t$snmp_query_graph = db_fetch_assoc_prepared('SELECT id\n\t\tFROM snmp_query_graph\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tif (cacti_sizeof($snmp_query_graph)) {\n\t\tforeach ($snmp_query_graph as $item) {\n\t\t\tdb_execute_prepared('DELETE\n\t\t\t\tFROM snmp_query_graph_rrd\n\t\t\t\tWHERE snmp_query_graph_id = ?',\n\t\t\t\tarray($item['id']));\n\t\t}\n\t}\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query\n\t\tWHERE id = ?',\n\t\tarray($id));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM snmp_query_graph\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM host_template_snmp_query\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM host_snmp_query\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tdb_execute_prepared('DELETE\n\t\tFROM host_snmp_cache\n\t\tWHERE snmp_query_id = ?',\n\t\tarray($id));\n\n\tupdate_replication_crc(0, 'poller_replicate_snmp_query_crc');\n}\n\nfunction data_query_edit() {\n\tglobal $fields_data_query_edit, $config;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$snmp_query = db_fetch_row_prepared('SELECT * FROM snmp_query WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('Data Queries [edit: %s]', html_escape($snmp_query['name']));\n\t} else {\n\t\t$header_label = __('Data Queries [new]');\n\t}\n\n\tform_start('data_queries.php', 'data_queries');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_data_query_edit, (isset($snmp_query) ? $snmp_query : array()))\n\t\t)\n\t);\n\n\thtml_end_box(false, true);\n\n\tif (!empty($snmp_query['id'])) {\n\t\t$search       = array('<path_cacti>', '<path_snmpget>', '<path_php_binary>');\n\t\t$replace      = array($config['base_path'], read_config_option('path_snmpget'), read_config_option('path_php_binary'));\n\t\t$xml_filename = str_replace($search, $replace, $snmp_query['xml_path']);\n\n\t\tif ((file_exists($xml_filename)) && (is_file($xml_filename))) {\n\t\t\t$text = \"<span class='deviceUp'>\" . __('Successfully located XML file') . \"</span>\";\n\t\t\t$xml_file_exists = true;\n\t\t} else {\n\t\t\t$text = \"<span class='deviceDown'>\" . __('Could not locate XML file.') . \"</span>\";\n\t\t\t$xml_file_exists = false;\n\t\t}\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\tprint \"<tr class='tableRow debug'><td>$text</td></tr>\";\n\t\thtml_end_box(false);\n\n\t\thtml_start_box( __('Associated Graph Templates'), '100%', '', '3', 'center', 'data_queries.php?action=item_edit&snmp_query_id=' . $snmp_query['id']);\n\n\t\tprint \"<tr class='tableHeader'>\n\t\t\t<th class='tableSubHeaderColumn'>\" . __('Name') . \"</th>\n\t\t\t<th class='tableSubHeaderColumn'>\" . __('Graph Template Name') . \"</th>\n\t\t\t<th class='tableSubHeaderColumn right'>\" . __('Graphs Using') . \"</th>\n\t\t\t<th class='tableSubHeaderColumn right'>\" . __('Mapping ID') . \"</th>\n\t\t\t<th class='tableSubHeaderColumn right' style='width:60px;'>\" . __('Action') . \"</th>\n\t\t</tr>\";\n\n\t\t$snmp_query_graphs = db_fetch_assoc_prepared('SELECT sqg.id,\n\t\t\tgt.name AS graph_template_name, sqg.name, COUNT(gl.id) AS graphs\n\t\t\tFROM snmp_query_graph AS sqg\n\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\tON sqg.graph_template_id = gt.id\n\t\t\tLEFT JOIN graph_local AS gl\n\t\t\tON gl.snmp_query_graph_id = sqg.id\n\t\t\tAND gl.graph_template_id = sqg.graph_template_id\n\t\t\tWHERE sqg.snmp_query_id = ?\n\t\t\tGROUP BY sqg.id\n\t\t\tORDER BY sqg.name',\n\t\t\tarray($snmp_query['id']));\n\n\t\tif (cacti_sizeof($snmp_query_graphs)) {\n\t\t\tforeach ($snmp_query_graphs as $snmp_query_graph) {\n\t\t\t\tform_alternate_row();\n\t\t\t\t?>\n\t\t\t\t\t<td>\n\t\t\t\t\t<?php if ($xml_file_exists) {?>\n\t\t\t\t\t\t<a class='linkEditMain' href=\"<?php print html_escape('data_queries.php?action=item_edit&id=' . $snmp_query_graph['id'] . '&snmp_query_id=' . $snmp_query['id']);?>\"><?php print html_escape($snmp_query_graph['name']);?></a>\n\t\t\t\t\t<?php } else { ?>\n\t\t\t\t\t\t<span class='noLinkEditMain' title='Association Read Only until XML file located'><?php print html_escape($snmp_query_graph['name']);?></span>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print html_escape($snmp_query_graph['graph_template_name']);?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t<?php print number_format_i18n($snmp_query_graph['graphs'], '-1');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t<?php print $snmp_query_graph['id'];?>\n\t\t\t\t\t</td><?php if ($snmp_query_graph['graphs'] == 0) {?>\n\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t\t<a class='delete deleteMarker fa fa-times' title='<?php print __('Delete');?>' href='<?php print html_escape('data_queries.php?action=item_remove_confirm&id=' . $snmp_query_graph['id'] . '&snmp_query_id=' . $snmp_query['id']);?>'></a>\n\t\t\t\t\t</td>\n\t\t\t\t\t<?php } else { ?>\n\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t\t<a class='deleteMarkerDisabled fa fa-times' title='<?php print __('Mapped Graph Templates with Graphs are read only');?>' href='#'></a>\n\t\t\t\t\t</td>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t</tr>\n\t\t\t\t<?php\n\t\t\t}\n\t\t} else {\n\t\t\t\tprint \"<tr class='tableRow'><td><em>\" . __('No Graph Templates Defined.') . \"</em></td></tr>\";\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('data_queries.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t$('body').append(\"<div id='cdialog'></div>\");\n\n\t\t$('.noLinkEditMain').tooltip();\n\n\t\t$('.delete').click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\trequest = $(this).attr('href');\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete Associated Graph');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\t});\n\n\t</script>\n\t<?php\n}\n\nfunction data_query() {\n\tglobal $dq_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_dq');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box( __('Data Queries'), '100%', '', '3', 'center', 'data_queries.php?action=edit');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td class='noprint'>\n\t\t<form id='form_data_queries' method='get' action='data_queries.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr class='noprint'>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' name='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Data Queries');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' name='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t<script type='text/javascript'>\n\t\tfunction applyFilter() {\n\t\t\tstrURL  = 'data_queries.php?header=false';\n\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\tfunction clearFilter() {\n\t\t\tstrURL = 'data_queries.php?clear=1&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#refresh').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#clear').click(function() {\n\t\t\t\tclearFilter();\n\t\t\t});\n\n\t\t\t$('#form_data_queries').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\t\t});\n\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (sq.name like '%\" . get_request_var('filter') . \"%' OR di.name like '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(*)\n\t\tFROM snmp_query AS sq\n\t\tINNER JOIN data_input AS di\n\t\tON (sq.data_input_id=di.id)\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$snmp_queries = db_fetch_assoc(\"SELECT sq.id, sq.name,\n\t\tdi.name AS data_input_method,\n\t\tCOUNT(DISTINCT gl.id) AS graphs,\n\t\tCOUNT(DISTINCT sqg.graph_template_id) AS templates\n\t\tFROM snmp_query AS sq\n\t\tLEFT JOIN snmp_query_graph AS sqg\n\t\tON sq.id=sqg.snmp_query_id\n\t\tLEFT JOIN data_input AS di\n\t\tON (sq.data_input_id=di.id)\n\t\tLEFT JOIN graph_local AS gl\n\t\tON gl.snmp_query_id=sq.id\n\t\t$sql_where\n\t\tGROUP BY sq.id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('data_queries.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Data Queries'), 'page', 'main');\n\n\tform_start('data_queries.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'              => array('display' => __('Data Query Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this Data Query.')),\n\t\t'id'                => array('display' => __('ID'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The internal ID for this Graph Template.  Useful when performing automation or debugging.')),\n\t\t'nosort'            => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('Data Queries that are in use cannot be Deleted. In use is defined as being referenced by either a Graph or a Graph Template.')),\n\t\t'graphs'            => array('display' => __('Graphs Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Graphs using this Data Query.')),\n\t\t'templates'         => array('display' => __('Templates Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Graphs Templates using this Data Query.')),\n\t\t'data_input_method' => array('display' => __('Data Input Method'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The Data Input Method used to collect data for Data Sources associated with this Data Query.')));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($snmp_queries)) {\n\t\tforeach ($snmp_queries as $snmp_query) {\n\t\t\tif ($snmp_query['graphs'] == 0 && $snmp_query['templates'] == 0) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $snmp_query['id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value($snmp_query['name'], get_request_var('filter'), 'data_queries.php?action=edit&id=' . $snmp_query['id']), $snmp_query['id']);\n\t\t\tform_selectable_cell($snmp_query['id'], $snmp_query['id'], '', 'right');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $snmp_query['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($snmp_query['graphs'], '-1'), $snmp_query['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($snmp_query['templates'], '-1'), $snmp_query['id'], '', 'right');\n\t\t\tform_selectable_cell(filter_value($snmp_query['data_input_method'], get_request_var('filter')), $snmp_query['id']);\n\t\t\tform_checkbox_cell($snmp_query['name'], $snmp_query['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='5'><em>\" . __('No Data Queries Found') . \"</em></td></tr>\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($snmp_queries)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($dq_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n$profile_actions = array(\n\t1 => __('Delete'),\n//\t2 => __('Duplicate')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item_remove_confirm':\n\t\tprofile_item_remove_confirm();\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tprofile_item_remove();\n\n\t\tbreak;\n\tcase 'ajax_span':\n\t\tget_filter_request_var('profile_id');\n\t\tget_filter_request_var('span');\n\t\tget_filter_request_var('rows');\n\n\t\t$sampling_interval = db_fetch_cell_prepared('SELECT step\n\t\t\tFROM data_source_profiles\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('profile_id')));\n\n\t\tif (get_request_var('span') == 1) {\n\t\t\tprint get_span(get_request_var('rows') * $sampling_interval);\n\t\t} else {\n\t\t\tprint get_span(get_request_var('rows') * get_request_var('span'));\n\t\t}\n\n\t\tbreak;\n\tcase 'ajax_size':\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('cfs');\n\t\tprint get_size(get_request_var('id'), get_nfilter_request_var('type'), get_request_var('cfs'));\n\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\n\t\titem_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tprofile_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tprofile();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    Global Form Functions\n   -------------------------- */\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\n\t// make sure ids are numeric\n\tif (isset_request_var('id') && ! is_numeric(get_filter_request_var('id'))) {\n\t\tset_request_var('id', 0);\n\t}\n\n\tif (isset_request_var('profile_id') && ! is_numeric(get_filter_request_var('profile_id'))) {\n\t\tset_request_var('profile_id', 0);\n\t}\n\n\tif (isset_request_var('save_component_profile')) {\n\t\t$save['id']             = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['hash']           = get_hash_data_source_profile(get_request_var('id'));\n\n\t\t$save['name']           = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\n\t\tif (isset_request_var('step')) {\n\t\t\t$save['step']           = form_input_validate(get_nfilter_request_var('step'), 'step', '', false, 3);\n\t\t\t$save['heartbeat']      = form_input_validate(get_nfilter_request_var('heartbeat'), 'heartbeat', '', false, 3);\n\t\t\t$save['x_files_factor'] = form_input_validate(get_nfilter_request_var('x_files_factor'), 'x_files_factor', '', false, 3);\n\t\t}\n\n\t\tif (isset_request_var('default')) {\n\t\t\t$save['default'] = (isset_request_var('default') ? 'on':'');\n\t\t\tdb_execute('UPDATE data_source_profiles SET `default`=\"\"');\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$profile_id = sql_save($save, 'data_source_profiles');\n\n\t\t\tif ($profile_id) {\n\t\t\t\tif (isset_request_var('step')) {\n\t\t\t\t\t// Validate consolidation functions\n\t\t\t\t\t$cfs = get_nfilter_request_var('consolidation_function_id');\n\t\t\t\t\tif (cacti_sizeof($cfs) && !empty($cfs)) {\n\t\t\t\t\t\tforeach($cfs as $cf) {\n\t\t\t\t\t\t\tinput_validate_input_number($cf);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdb_execute_prepared('DELETE FROM data_source_profiles_cf\n\t\t\t\t\t\t\tWHERE data_source_profile_id = ?\n\t\t\t\t\t\t\tAND consolidation_function_id NOT IN (' . implode(',', $cfs) . ')', array($profile_id));\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// Validate consolidation functions\n\t\t\t\t\t$cfs = get_nfilter_request_var('consolidation_function_id');\n\t\t\t\t\tif (cacti_sizeof($cfs) && !empty($cfs)) {\n\t\t\t\t\t\tforeach($cfs as $cf) {\n\t\t\t\t\t\t\tdb_execute_prepared('REPLACE INTO data_source_profiles_cf\n\t\t\t\t\t\t\t\t(data_source_profile_id, consolidation_function_id)\n\t\t\t\t\t\t\t\tVALUES (?, ?)', array($profile_id, $cf));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_source_profiles.php?header=false&action=edit&id=' . (empty($profile_id) ? get_request_var('id') : $profile_id));\n\t} elseif (isset_request_var('save_component_rra')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('profile_id');\n\t\t/* ==================================================== */\n\n\t\t$sampling_interval = db_fetch_cell_prepared('SELECT step\n\t\t\tFROM data_source_profiles\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('profile_id')));\n\n\t\t$save['id']                      = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);\n\t\t$save['name']                    = form_input_validate(get_nfilter_request_var('name'), 'name', '', true, 3);\n\t\t$save['data_source_profile_id']  = form_input_validate(get_request_var('profile_id'), 'profile_id', '^[0-9]+$', false, 3);\n\t\t$save['timespan']                = form_input_validate(get_nfilter_request_var('timespan'), 'timespan', '^[0-9]+$', false, 3);\n\n\t\tif (isset_request_var('steps')) {\n\t\t\t$save['steps'] = form_input_validate(get_nfilter_request_var('steps'), 'steps', '^[0-9]+$', false, 3);\n\n\t\t\tif ($save['steps'] != '1') {\n\t\t\t\t$save['steps'] /= $sampling_interval;\n\t\t\t}\n\t\t}\n\n\t\tif (isset_request_var('rows')) {\n\t\t\t$save['rows'] = form_input_validate(get_nfilter_request_var('rows'), 'rows', '^[0-9]+$', false, 3);\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$profile_rra_id = sql_save($save, 'data_source_profiles_rra');\n\n\t\t\tif ($profile_rra_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: data_source_profiles.php?header=false&action=item_edit&profile_id=' . get_request_var('profile_id') . '&id=' . (empty($profile_rra_id) ? get_request_var('id') : $profile_rra_id));\n\t\t} else {\n\t\t\theader('Location: data_source_profiles.php?header=false&action=edit&id=' . get_request_var('profile_id'));\n\t\t}\n\t}\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $profile_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tdb_execute('DELETE FROM data_source_profiles WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM data_source_profiles_rra WHERE ' . array_to_sql_or($selected_items, 'data_source_profile_id'));\n\t\t\t\tdb_execute('DELETE FROM data_source_profiles_cf WHERE ' . array_to_sql_or($selected_items, 'data_source_profile_id'));\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tduplicate_data_source_profile($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_source_profiles.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$profile_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST AS $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$profile_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM data_source_profiles WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$profile_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('data_source_profiles.php');\n\n\thtml_start_box($profile_actions{get_request_var('drp_action')}, '60%', '', '3', 'center', '');\n\n\tif (isset($profile_array) && cacti_sizeof($profile_array)) {\n\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following Data Source Profile', 'Click \\'Continue\\' to delete following Data Source Profiles', cacti_sizeof($profile_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$profile_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Data Source Profile', 'Delete Data Source Profiles', cacti_sizeof($profile_array)) . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to duplicate the following Data Source Profile. You can optionally change the title format for the new Data Source Profile', 'Click \\'Continue\\' to duplicate following Data Source Profiles. You can optionally change the title format for the new Data Source Profiles.', cacti_sizeof($profile_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$profile_list</ul></div>\n\t\t\t\t\t<p>\" . __('Title Format:') . \"<br>\"; form_text_box('title_format', '<profile_title> (1)', '', '255', '30', 'text'); print \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Duplicate Data Source Profile', 'Duplicate Date Source Profiles', cacti_sizeof($profile_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: data_source_profiles.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($profile_array) ? serialize($profile_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* --------------------------\n    CDEF Item Functions\n   -------------------------- */\n\nfunction profile_item_remove_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('profile_id');\n\t/* ==================================================== */\n\n\tform_start('data_source_profiles.php');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$profile = db_fetch_row_prepared('SELECT *\n\t\tFROM data_source_profiles_rra\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Data Source Profile RRA.');?></p>\n\t\t\t<p><?php print __('Profile Name: %s', $profile['name']);?><br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\");' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove Data Source Profile RRA');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').click(function(data) {\n\t\t\t$.post('data_source_profiles.php?action=item_remove', {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}, function(data) {\n\t\t\t\t$('#cdialog').dialog('close');\n\t\t\t\tloadPageNoHeader('data_source_profiles.php?action=edit&header=false&id=<?php print $profile['data_source_profile_id'];?>');\n\t\t\t});\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction profile_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM data_source_profiles_rra WHERE id = ?', array(get_request_var('id')));\n}\n\n\nfunction item_edit() {\n\tglobal $fields_profile_rra_edit, $aggregation_levels;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('profile_id');\n\t/* ==================================================== */\n\n\t$sampling_interval = db_fetch_cell_prepared('SELECT step\n\t\tFROM data_source_profiles\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('profile_id')));\n\n\t$readonly = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\tFROM data_template_data AS dtd\n\t\tWHERE data_source_profile_id = ?\n\t\tAND local_data_id > 0',\n\t\tarray(get_request_var('profile_id')));\n\n\tif (!isempty_request_var('id')) {\n\t\t$rra = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_source_profiles_rra\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif ($rra['steps'] == '1') {\n\t\t\t$fields_profile_rra_edit['steps']['array'] = array('1' => __('Each Insert is New Row'));\n\t\t} else {\n\t\t\tforeach($aggregation_levels as $interval => $name) {\n\t\t\t\tif ($interval <= $sampling_interval) {\n\t\t\t\t\tunset($aggregation_levels[$interval]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$fields_profile_rra_edit['steps']['array'] = $aggregation_levels;\n\t\t}\n\n\t\t$fields_profile_rra_edit['steps']['value'] = $rra['steps'] * $sampling_interval;\n\t} else {\n\t\t$oneguy = db_fetch_cell_prepared('SELECT id\n\t\t\tFROM data_source_profiles_rra\n\t\t\tWHERE data_source_profile_id = ?\n\t\t\tAND steps=1',\n\t\t\tarray(get_request_var('profile_id')));\n\n\t\tif (empty($oneguy)) {\n\t\t\t$fields_profile_rra_edit['steps']['array'] = array('1' => __('Each Insert is New Row'));\n\t\t} else {\n\t\t\tforeach($aggregation_levels as $interval => $name) {\n\t\t\t\tif ($interval <= $sampling_interval) {\n\t\t\t\t\tunset($aggregation_levels[$interval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$fields_profile_rra_edit['steps']['array'] = $aggregation_levels;\n\t\t}\n\t}\n\n\tform_start('data_source_profiles.php', 'form_rra');\n\n\t$name = db_fetch_cell_prepared('SELECT name\n\t\tFROM data_source_profiles_rra\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\thtml_start_box( __('RRA [edit: %s %s]', html_escape($name), ($readonly ? __('(Some Elements Read Only)'):'')), '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => true),\n\t\t'fields' => inject_form_variables($fields_profile_rra_edit, (isset($rra) ? $rra : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('profile_id', get_request_var('profile_id'), '');\n\n\tform_save_button('data_source_profiles.php?action=edit&id=' . get_request_var('profile_id'));\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar profile_id=<?php print get_request_var('profile_id') != '' ? get_request_var('profile_id'):0;?>;\n\tvar rows_to = false;\n\tvar readonly = <?php print ($readonly ? 'true':'false');?>;\n\n\t$(function() {\n\t\tget_span();\n\t\tget_size();\n\n\t\t$('#steps').change(function() {\n\t\t\tget_span();\n\t\t\tget_size();\n\t\t});\n\n        $('#rows').keyup(function() {\n            if (rows_to) { clearTimeout(rows_to); }\n            rows_to = setTimeout(function () { get_span(); get_size() }, 250);\n        });\n\n\t\tif (readonly) {\n\t\t\t$('#steps').prop('disabled', true);\n\t\t\tif ($('#steps').selectmenu('instance')) {\n\t\t\t\t$('#steps').selectmenu('disable');\n\t\t\t}\n\n\t\t\t$('#rows').prop('disabled', true);\n\t\t\tif ($('#rows').selectmenu('instance')) {\n\t\t\t\t$('#rows').selectmenu('disable');\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction get_size() {\n\t\t$.get('data_source_profiles.php?action=ajax_size&type=rra&id='+profile_id+'&rows='+$('#rows').val())\n\t\t\t.done(function(data) {\n\t\t\t\t$('#row_size').find('.formColumnRight').empty().html('<em>'+data+'</em>');\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\t}\n\n\tfunction get_span() {\n\t\t$.get('data_source_profiles.php?action=ajax_span&profile_id='+profile_id+'&span='+$('#steps').val()+'&rows='+$('#rows').val())\n\t\t\t.done(function(data) {\n\t\t\t\t$('#row_retention').find('.formColumnRight').empty().html('<em>'+data+'</em>');\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\n\t}\n\t</script>\n\t<?php\n}\n\n/* ---------------------\n    Profile Functions\n   --------------------- */\n\nfunction profile_edit() {\n\tglobal $fields_profile_edit, $timespans;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$profile = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_source_profiles\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$readonly     = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\tFROM data_template_data AS dtd\n\t\t\tWHERE data_source_profile_id = ?\n\t\t\tAND local_data_id > 0',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Data Source Profile [edit: %s]', html_escape($profile['name']) . ($readonly ? ' (Read Only)':''));\n\t} else {\n\t\t$header_label = __('Data Source Profile [new]');\n\t\t$readonly     = false;\n\t}\n\n\tform_start('data_source_profiles.php', 'profile');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => true),\n\t\t'fields' => inject_form_variables($fields_profile_edit, (isset($profile) ? $profile : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('id')) {\n\t\tif (!$readonly) {\n\t\t\thtml_start_box( __('Data Source Profile RRAs (press save to update timespans)'), '100%', '', '3', 'center', 'data_source_profiles.php?action=item_edit&profile_id=' . $profile['id']);\n\t\t} else {\n\t\t\thtml_start_box( __('Data Source Profile RRAs (Read Only)'), '100%', '', '3', 'center', '');\n\t\t}\n\n\t\t$display_text = array(\n\t\t\tarray('display' => __('Name'),           'align' => 'left'),\n\t\t\tarray('display' => __('Data Retention'), 'align' => 'left'),\n\t\t\tarray('display' => __('Graph Timespan'), 'align' => 'left'),\n\t\t\tarray('display' => __('Steps'),          'align' => 'left'),\n\t\t\tarray('display' => __('Rows'),           'align' => 'left'),\n\t\t);\n\n\t\thtml_header($display_text, 2);\n\n\t\t$profile_rras = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM data_source_profiles_rra\n\t\t\tWHERE data_source_profile_id = ?\n\t\t\tORDER BY steps',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$i = 0;\n\t\tif (cacti_sizeof($profile_rras)) {\n\t\t\tforeach ($profile_rras as $rra) {\n\t\t\t\tform_alternate_row('line' . $rra['id']);$i++;?>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print \"<a class='linkEditMain' href='\" . html_escape('data_source_profiles.php?action=item_edit&id=' . $rra['id'] . '&profile_id=' . $rra['data_source_profile_id']) . \"'>\" . html_escape($rra['name']) . '</a>';?>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<em><?php print get_span($profile['step'] * $rra['steps'] * $rra['rows']);?></em>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<em><?php print isset($timespans[$rra['timespan']]) ? $timespans[$rra['timespan']]:get_span($rra['timespan']);?></em>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<em><?php print $rra['steps'];?></em>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<em><?php print $rra['rows'];?></em>\n\t\t\t\t</td>\n\t\t\t\t<td class='right'>\n\t\t\t\t\t<?php print (!$readonly ? \"<a id='\" . $profile['id'] . '_' . $rra['id'] . \"' class='delete deleteMarker fa fa-times' title='\" . __esc('Delete') . \"' href='#'></a>\":\"\");?>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('data_source_profiles.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar profile_id=<?php print get_request_var('id') != '' ? get_request_var('id'):0;?>;\n\n\t$(function() {\n\t\t$('body').append(\"<div id='cdialog'></div>\");\n\n        $('#consolidation_function_id').multiselect({\n            selectedList: 1,\n            noneSelectedText: '<?php print __('Select Consolidation Function(s)');?>',\n            header: false,\n            multipleRow: true,\n            multipleRowWidth: 90,\n            height: 28,\n            minWidth: 400,\n\t\t\tclick: function(event, ui){\n\t\t\t\tget_size();\n\t\t\t}\n        });\n\n\t\tget_size();\n\t\t$('consolidation_function_id').change(function() {\n\t\t\tget_size();\n\t\t});\n\n\t\t<?php if (!$readonly) {?>\n\t\t$('.delete').click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tid = $(this).attr('id').split('_');\n\t\t\trequest = 'data_source_profiles.php?action=item_remove_confirm&id='+id[1]+'&profle_id='+id[0];\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete Data Source Profile Item');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(data) {\n\t\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\t\t<?php } else { ?>\n\t\t$('#step').prop('disabled', true);\n\t\tif ($('#step').selectmenu('instance')) {\n\t\t\t$('#step').selectmenu('disable')\n\t\t}\n\n\t\t$('#x_files_factor').prop('disabled', true);\n\n\t\t$('#heartbeat').prop('disabled', true);\n\t\tif ($('#heartbeat').selectmenu('instance')) {\n\t\t\t$('#heartbeat').selectmenu('disable')\n\t\t}\n\n\t\t$('#consolidation_function_id').prop('disabled', true);\n\t\tif ($('#consolidation_function_id').multiselect('instance')) {\n\t\t\t$('#consolidation_function_id').multiselect('disable');\n\t\t}\n\t\t<?php } ?>\n\t});\n\n\tfunction get_size() {\n\t\tchecked = $('#consolidation_function_id').multiselect('getChecked').length;\n\t\t$.get('data_source_profiles.php?action=ajax_size&type=profile&id='+profile_id+'&cfs='+checked)\n\t\t\t.done(function(data) {\n\t\t\t\t$('#row_size').find('.formColumnRight').empty().html('<em>'+data+'</em>');\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\t}\n\n\t</script>\n\t<?php\n}\n\nfunction get_size($id, $type, $cfs = '') {\n\t// On x86_64 platform, here is the equation\n\t// file_size = $header + (# data sources * 300) + (# cfs * #rows in all RRAs)\n\t$header   = 284;\n\t$dsheader = 300;\n\t$row      = 8;\n\n\tif ($type == 'profile') {\n\t\tif (empty($cfs)) {\n\t\t\t$cfs  = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\tFROM data_source_profiles_cf\n\t\t\t\tWHERE data_source_profile_id = ?',\n\t\t\t\tarray($id));\n\t\t}\n\n\t\t$rows = db_fetch_cell_prepared('SELECT SUM(`rows`)\n\t\t\tFROM data_source_profiles_rra\n\t\t\tWHERE data_source_profile_id = ?',\n\t\t\tarray($id));\n\n\t\treturn __('%s KBytes per Data Sources and %s Bytes for the Header', number_format_i18n(($rows * $row * $cfs + $dsheader) / 1000), $header);\n\t} else {\n\t\t$cfs  = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\tFROM data_source_profiles_cf\n\t\t\tWHERE data_source_profile_id = ?',\n\t\t\tarray($id));\n\n\t\t$rows = get_filter_request_var('rows');\n\n\t\treturn __('%s KBytes per Data Source', number_format_i18n(($rows * $row * $cfs) / 1000));\n\t}\n}\n\nfunction get_span($duration) {\n\t$years  = '';\n\t$months = '';\n\t$weeks  = '';\n\t$days   = '';\n\t$output = '';\n\n\tif ($duration > 31536000) {\n\t\tif (floor($duration/31536000) > 0) {\n\t\t\t$years     = floor($duration/31536000);\n\t\t\t$years\t   = ( $years == 1 ) ? __('1 Year') : __('%d Years', $years);\n\t\t\t$duration %= 31536000;\n\t\t\t$output    = $years;\n\t\t}\n\t}\n\n\tif ($duration > 2592000) {\n\t\tif (floor($duration/2592000)) {\n\t\t\t$months    = floor($duration/2592000);\n\t\t\t$months    = ( $months == 1 ) ? __('%d Month', 1) : __('%d Months', $months);\n\t\t\t$duration %= 2592000;\n\t\t\t$output   .= ($output != '' ? ', ' : '') . $months;\n\t\t}\n\t}\n\n\tif ($duration > 604800) {\n\t\tif (floor($duration/604800) > 0) {\n\t\t\t$weeks     = floor($duration/604800);\n\t\t\t$weeks     = ( $weeks == 1 ) ? __('%d Week', 1) : __('%d Weeks', $weeks);\n\t\t\t$duration %= 604800;\n\t\t\t$output   .= ($output != '' ? ', ' : '') . $weeks;\n\t\t}\n\t}\n\n\tif ($duration > 86400) {\n\t\tif (floor($duration/86400) > 0) {\n\t\t\t$days      = floor($duration/86400);\n\t\t\t$days      = ( $days == 1 ) ? __('%d Day', 1) : __('%d Days', $days);\n\t\t\t$duration %= 86400;\n\t\t\t$output   .= ($output != '' ? ', ' : '') . $days;\n\t\t}\n\t}\n\n\tif (floor($duration/3600) > 0) {\n\t\t$hours   = floor($duration/3600);\n\t\t$hours   = ( $hours == 1 ) ? __('1 Hour') : __('%d Hours', $hours);\n\t\t$output .= ($output != '' ? ', ' : '') . $hours;\n\t}\n\n\treturn $output;\n}\n\nfunction profile() {\n\tglobal $profile_actions, $item_rows, $sampling_intervals, $heartbeats, $config;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'step',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_data' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_dsp');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box( __('Data Source Profiles'), '100%', '', '3', 'center', 'data_source_profiles.php?action=edit');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_dsp' action='data_source_profiles.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' name='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Profiles');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='has_data' <?php print (get_request_var('has_data') == 'true' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='has_data'><?php print __('Has Data Sources');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type='text/javascript'>\n\n\t\t\tfunction applyFilter() {\n\t\t\t\tstrURL  = 'data_source_profiles.php?header=false';\n\t\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\t\tstrURL += '&has_data='+$('#has_data').is(':checked');\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = 'data_source_profiles.php?clear=1&header=false';\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\t$('#refresh').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#has_data').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#form_dsp').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('has_data') == 'true') {\n\t\t$sql_having = 'HAVING data_sources>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(`rows`)\n\t\tFROM (\n\t\t\tSELECT dsp.id AS `rows`,\n\t\t\tSUM(CASE WHEN local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\t\tFROM data_source_profiles AS dsp\n\t\t\tLEFT JOIN data_template_data AS dtd\n\t\t\tON dsp.id=dtd.data_source_profile_id\n\t\t\t$sql_where\n\t\t\tGROUP BY dsp.id\n\t\t\t$sql_having\n\t\t) AS rs\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$profile_list = db_fetch_assoc(\"SELECT rs.*,\n\t\tSUM(CASE WHEN local_data_id=0 THEN 1 ELSE 0 END) AS templates,\n\t\tSUM(CASE WHEN local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\tFROM (\n\t\t\tSELECT dsp.*, dtd.local_data_id\n\t\t\tFROM data_source_profiles AS dsp\n\t\t\tLEFT JOIN data_template_data AS dtd\n\t\t\tON dsp.id=dtd.data_source_profile_id\n\t\t\tGROUP BY dsp.id, dtd.data_template_id, dtd.local_data_id\n\t\t) AS rs\n\t\t$sql_where\n\t\tGROUP BY rs.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('data_source_profiles.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 9, __('Profiles'), 'page', 'main');\n\n\tform_start('data_source_profiles.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array('display' => __('Data Source Profile Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this CDEF.')),\n\t\t'nosort00' => array('display' => __('Default'), 'align' => 'right', 'tip' => __('Is this the default Profile for all new Data Templates?')),\n\t\t'nosort01' => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('Profiles that are in use cannot be Deleted. In use is defined as being referenced by a Data Source or a Data Template.')),\n\t\t'nosort02' => array('display' => __('Read Only'), 'align' => 'right', 'tip' => __('Profiles that are in use by Data Sources become read only for now.')),\n\t\t'step' => array('display' => __('Poller Interval'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The Polling Frequency for the Profile')),\n\t\t'heartbeat' => array('display' => __('Heartbeat'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The Amount of Time, in seconds, without good data before Data is stored as Unknown')),\n\t\t'data_sources' => array('display' => __('Data Sources Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Data Sources using this Profile.')),\n\t\t'templates' => array('display' => __('Templates Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Data Templates using this Profile.')));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($profile_list)) {\n\t\tforeach ($profile_list as $profile) {\n\t\t\tif ($profile['data_sources'] == 0 && $profile['templates'] == 0) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\tif ($profile['data_sources']) {\n\t\t\t\t$readonly = true;\n\t\t\t} else {\n\t\t\t\t$readonly = false;\n\t\t\t}\n\n\t\t\tif ($profile['data_sources'] > 0) {\n\t\t\t\t$ds = '<a class=\"linkEditMain\" href=\"' . $config['url_path'] . 'data_sources.php?reset=true&profile=' . $profile['id'] . '\">' . number_format_i18n($profile['data_sources'], '-1') . '</a>';\n\t\t\t} else {\n\t\t\t\t$ds = number_format_i18n($profile['data_sources'], '-1');\n\t\t\t}\n\n\t\t\tif ($profile['templates'] > 0) {\n\t\t\t\t$dt = '<a class=\"linkEditMain\" href=\"' . $config['url_path'] . 'data_templates.php?reset=true&profile=' . $profile['id'] . '\">' . number_format_i18n($profile['templates'], '-1') . '</a>';\n\t\t\t} else {\n\t\t\t\t$dt = number_format_i18n($profile['templates'], '-1');\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $profile['id'], false, $disabled);\n\t\t\tform_selectable_cell(filter_value($profile['name'], get_request_var('filter'), 'data_source_profiles.php?action=edit&id=' . $profile['id']), $profile['id']);\n\t\t\tform_selectable_cell($profile['default'] == 'on' ? __('Yes'):'', $profile['id'], '', 'right');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $profile['id'], '', 'right');\n\t\t\tform_selectable_cell($readonly ? __('Yes'):__('No'), $profile['id'], '', 'right');\n\t\t\tform_selectable_cell($sampling_intervals[$profile['step']], $profile['id'], '', 'right');\n\t\t\tform_selectable_cell($heartbeats[$profile['heartbeat']], $profile['id'], '', 'right');\n\t\t\tform_selectable_cell($ds, $profile['id'], '', 'right');\n\t\t\tform_selectable_cell($dt, $profile['id'], '', 'right');\n\t\t\tform_checkbox_cell($profile['name'], $profile['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='4'><em>\" . __('No Data Source Profiles Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($profile_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($profile_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude ('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/html_form_template.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/rrd.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n$ds_actions = array(\n\t1 => __('Delete'),\n\t3 => __('Change Device'),\n\t8 => __('Reapply Suggested Names'),\n\t6 => __('Enable'),\n\t7 => __('Disable')\n);\n\n$ds_actions = api_plugin_hook_function('data_source_action_array', $ds_actions);\n\n/* set default action */\nset_default_action();\n\nvalidate_data_source_vars();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'rrd_add':\n\t\tds_rrd_add();\n\n\t\tbreak;\n\tcase 'rrd_remove':\n\t\tds_rrd_remove();\n\n\t\tbreak;\n\tcase 'data_edit':\n\t\ttop_header();\n\n\t\tdata_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'ds_remove':\n\t\tds_remove();\n\n\t\theader ('Location: data_sources.php');\n\t\tbreak;\n\tcase 'ds_edit':\n\t\tds_edit();\n\n\t\tbreak;\n\tcase 'ajax_hosts':\n\t\t$sql_where = '';\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where = 'site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(true, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\tcase 'ajax_hosts_noany':\n\n\t\t$sql_where = '';\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where = 'site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(false, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tds();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tif ((isset_request_var('save_component_data_source_new')) && (!isempty_request_var('data_template_id'))) {\n\t\t$save['id']               = get_filter_request_var('local_data_id');\n\t\t$save['host_id']          = get_filter_request_var('host_id');\n\t\t$save['data_template_id'] = get_filter_request_var('data_template_id');\n\n\t\t$local_data_id = sql_save($save, 'data_local');\n\n\t\tchange_data_template($local_data_id, get_request_var('data_template_id'));\n\n\t\t/* update the title cache */\n\t\tupdate_data_source_title_cache($local_data_id);\n\n\t\t/* update host data */\n\t\tif (!isempty_request_var('host_id')) {\n\t\t\tpush_out_host(get_request_var('host_id'), $local_data_id);\n\t\t}\n\t}\n\n\tif ((isset_request_var('save_component_data')) && (!is_error_message())) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('data_template_data_id');\n\t\t/* ==================================================== */\n\n\t\t/* ok, first pull out all 'input' values so we know how much to save */\n\t\t$input_fields = db_fetch_assoc_prepared(\"SELECT dtd.data_input_id, dl.host_id, dif.id, dif.input_output,\n\t\t\tdif.data_name, dif.regexp_match, dif.allow_nulls, dif.type_code\n\t\t\tFROM data_template_data AS dtd\n\t\t\tLEFT JOIN data_input_fields AS dif\n\t\t\tON dif.data_input_id = dtd.data_input_id\n\t\t\tLEFT JOIN data_local AS dl\n\t\t\tON dtd.local_data_id = dl.id\n\t\t\tWHERE dtd.id = ?\n\t\t\tAND dif.input_output='in'\",\n\t\t\tarray(get_request_var('data_template_data_id')));\n\n\t\tif (cacti_sizeof($input_fields)) {\n\t\t\tforeach ($input_fields as $input_field) {\n\t\t\t\tif (isset_request_var('value_' . $input_field['id'])) {\n\t\t\t\t\t/* save the data into the 'data_input_data' table */\n\t\t\t\t\t$form_value = get_nfilter_request_var('value_' . $input_field['id']);\n\n\t\t\t\t\t/* we shouldn't enforce rules on fields the user cannot see (ie. templated ones) */\n\t\t\t\t\t$data_template_id = db_fetch_cell_prepared('SELECT local_data_template_data_id\n\t\t\t\t\t\tFROM data_template_data\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray(get_request_var('data_template_data_id'))\n\t\t\t\t\t);\n\n\t\t\t\t\t$is_templated = db_fetch_cell_prepared('SELECT t_value\n\t\t\t\t\t\tFROM data_input_data\n\t\t\t\t\t\tWHERE data_input_field_id = ?\n\t\t\t\t\t\tAND data_template_data_id = ?',\n\t\t\t\t\t\tarray($input_field['id'], $data_template_id)\n\t\t\t\t\t);\n\n\t\t\t\t\tif ($is_templated == '') {\n\t\t\t\t\t\t$allow_nulls = true;\n\t\t\t\t\t} elseif ($input_field['allow_nulls'] == 'on') {\n\t\t\t\t\t\t$allow_nulls = true;\n\t\t\t\t\t} elseif (empty($input_field['allow_nulls'])) {\n\t\t\t\t\t\t$allow_nulls = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* run regexp match on input string */\n\t\t\t\t\t$form_value = form_input_validate($form_value, 'value_' . $input_field['id'], $input_field['regexp_match'], $allow_nulls, 3);\n\n\t\t\t\t\tif (!is_error_message()) {\n\t\t\t\t\t\tdb_execute_prepared(\"REPLACE INTO data_input_data\n\t\t\t\t\t\t\t(data_input_field_id, data_template_data_id, t_value, value)\n\t\t\t\t\t\t\tVALUES\n\t\t\t\t\t\t\t(?, ?, '', ?)\",\n\t\t\t\t\t\t\tarray($input_field['id'], get_request_var('data_template_data_id'), $form_value)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif ((isset_request_var('save_component_data_source')) && (!is_error_message())) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('current_rrd');\n\t\tget_filter_request_var('rrd_step');\n\t\tget_filter_request_var('data_input_id');\n\t\tget_filter_request_var('data_source_profile_id');\n\t\tget_filter_request_var('host_id');\n\t\tget_filter_request_var('_host_id');\n\t\tget_filter_request_var('_data_template_id');\n\t\t/* ==================================================== */\n\n\t\t$save1['id']               = get_filter_request_var('local_data_id');\n\t\t$save1['data_template_id'] = get_filter_request_var('data_template_id');\n\t\t$save1['host_id']          = get_filter_request_var('host_id');\n\n\t\t$save2['id']                          = get_filter_request_var('data_template_data_id');\n\t\t$save2['local_data_template_data_id'] = get_filter_request_var('local_data_template_data_id');\n\t\t$save2['data_template_id']            = get_filter_request_var('data_template_id');\n\t\t$save2['data_input_id']               = form_input_validate(get_request_var('data_input_id'), 'data_input_id', '^[0-9]+$', true, 3);\n\t\t$save2['name']                        = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save2['data_source_path']            = form_input_validate(get_nfilter_request_var('data_source_path'), 'data_source_path', '', true, 3);\n\t\t$save2['active']                      = form_input_validate((isset_request_var('active') ? get_nfilter_request_var('active') : ''), 'active', '', true, 3);\n\t\t$save2['data_source_profile_id']      = form_input_validate(get_request_var('data_source_profile_id'), 'data_source_profile_id', '^[0-9]+$', false, 3);\n\t\t$save2['rrd_step']                    = form_input_validate(get_request_var('rrd_step'), 'rrd_step', '^[0-9]+$', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$local_data_id = sql_save($save1, 'data_local');\n\n\t\t\t$save2['local_data_id'] = $local_data_id;\n\t\t\t$data_template_data_id = sql_save($save2, 'data_template_data');\n\n\t\t\tif ($data_template_data_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t/* if this is a new data source and a template has been selected, skip item creation this time\n\t\t\totherwise it throws off the templatate creation because of the NULL data */\n\t\t\tif (!isempty_request_var('local_data_id') || isempty_request_var('data_template_id')) {\n\t\t\t\t/* if no template was set before the save, there will be only one data source item to save;\n\t\t\t\totherwise there might be >1 */\n\t\t\t\tif (isempty_request_var('_data_template_id')) {\n\t\t\t\t\t$rrds[0]['id'] = get_nfilter_request_var('current_rrd');\n\t\t\t\t} else {\n\t\t\t\t\t$rrds = db_fetch_assoc_prepared('SELECT id\n\t\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\t\tWHERE local_data_id = ?',\n\t\t\t\t\t\tarray(get_filter_request_var('local_data_id')));\n\t\t\t\t}\n\n\t\t\t\tif (cacti_sizeof($rrds)) {\n\t\t\t\t\tforeach ($rrds as $rrd) {\n\t\t\t\t\t\tif (isempty_request_var('_data_template_id')) {\n\t\t\t\t\t\t\t$name_modifier = '';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$name_modifier = '_' . $rrd['id'];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$save3['id'] = $rrd['id'];\n\t\t\t\t\t\t$save3['local_data_id'] = $local_data_id;\n\n\t\t\t\t\t\t$save3['local_data_template_rrd_id'] = db_fetch_cell_prepared('SELECT local_data_template_rrd_id\n\t\t\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\tarray($rrd['id']));\n\n\t\t\t\t\t\t$save3['data_template_id'] = get_filter_request_var('data_template_id');\n\t\t\t\t\t\t$save3['rrd_maximum'] = form_input_validate(get_nfilter_request_var(\"rrd_maximum$name_modifier\"), \"rrd_maximum$name_modifier\", \"^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$|\\|query_ifSpeed\\||\\|query_ifHighSpeed\\|\", false, 3);\n\t\t\t\t\t\t$save3['rrd_minimum'] = form_input_validate(get_nfilter_request_var(\"rrd_minimum$name_modifier\"), \"rrd_minimum$name_modifier\", \"^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$|\\|query_ifSpeed\\||\\|query_ifHighSpeed\\|\", false, 3);\n\t\t\t\t\t\t$save3['rrd_heartbeat'] = form_input_validate(get_nfilter_request_var(\"rrd_heartbeat$name_modifier\"), \"rrd_heartbeat$name_modifier\", '^[0-9]+$', false, 3);\n\t\t\t\t\t\t$save3['data_source_type_id'] = form_input_validate(get_nfilter_request_var(\"data_source_type_id$name_modifier\"), \"data_source_type_id$name_modifier\", '^[0-9]+$', false, 3);\n\t\t\t\t\t\t$save3['data_source_name'] = form_input_validate(get_nfilter_request_var(\"data_source_name$name_modifier\"), \"data_source_name$name_modifier\", '^[a-zA-Z0-9_-]{1,19}$', false, 3);\n\t\t\t\t\t\t$save3['data_input_field_id'] = form_input_validate((isset_request_var(\"data_input_field_id$name_modifier\") ? get_nfilter_request_var(\"data_input_field_id$name_modifier\") : '0'), \"data_input_field_id$name_modifier\", '', true, 3);\n\n\t\t\t\t\t\t$data_template_rrd_id = sql_save($save3, 'data_template_rrd');\n\n\t\t\t\t\t\tif ($data_template_rrd_id) {\n\t\t\t\t\t\t\traise_message(1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\traise_message(2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\tif (get_request_var('data_template_id') != get_request_var('_data_template_id')) {\n\t\t\t\t/* update all necessary template information */\n\t\t\t\tchange_data_template($local_data_id, get_request_var('data_template_id'));\n\t\t\t} elseif (!isempty_request_var('data_template_id')) {\n\t\t\t\tupdate_data_source_data_query_cache($local_data_id);\n\t\t\t}\n\n\t\t\tif (get_request_var('host_id') != get_request_var('_host_id')) {\n\t\t\t\t/* push out all necessary host information */\n\t\t\t\tpush_out_host(get_request_var('host_id'), $local_data_id);\n\n\t\t\t\t/* reset current host for display purposes */\n\t\t\t\t$_SESSION['sess_data_source_current_host_id'] = get_request_var('host_id');\n\t\t\t}\n\n\t\t\t/* if no data source path has been entered, generate one */\n\t\t\tif (isempty_request_var('data_source_path')) {\n\t\t\t\tgenerate_data_source_path($local_data_id);\n\t\t\t}\n\n\t\t\t/* update the title cache */\n\t\t\tupdate_data_source_title_cache($local_data_id);\n\t\t}\n\t}\n\n\t/* update the poller cache last to make sure everything is fresh */\n\tif ((!is_error_message()) && (!empty($local_data_id))) {\n\t\tupdate_poller_cache($local_data_id, true);\n\t}\n\n\tif (isset_request_var('save_component_data_source_new') && isempty_request_var('data_template_id')) {\n\t\theader('Location: data_sources.php?header=false&action=ds_edit&host_id=' . get_request_var('host_id') . '&new=1');\n\t} elseif ((is_error_message()) || (get_filter_request_var('data_template_id') != get_filter_request_var('_data_template_id')) || (get_filter_request_var('data_input_id') != get_filter_request_var('_data_input_id')) || (get_filter_request_var('host_id') != get_filter_request_var('_host_id'))) {\n\t\theader('Location: data_sources.php?header=false&action=ds_edit&id=' . (empty($local_data_id) ? get_filter_request_var('local_data_id') : $local_data_id) . '&host_id=' . get_request_var('host_id') . '&view_rrd=' . (isset_request_var('current_rrd') ? get_nfilter_request_var('current_rrd') : '0'));\n\t} else {\n\t\theader('Location: data_sources.php?header=false');\n\t}\n}\n\n/* ------------------------\n    The \"actions\" function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $ds_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tif (!isset_request_var('delete_type')) {\n\t\t\t\t\tset_request_var('delete_type', 1);\n\t\t\t\t} else {\n\t\t\t\t\tget_filter_request_var('delete_type');\n\t\t\t\t}\n\n\t\t\t\tswitch (get_request_var('delete_type')) {\n\t\t\t\t\tcase '2': /* delete all graph items tied to this data source */\n\t\t\t\t\t\t$data_template_rrds = array_rekey(db_fetch_assoc('SELECT id\n\t\t\t\t\t\t\tFROM data_template_rrd\n\t\t\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'local_data_id')), 'id', 'id');\n\n\t\t\t\t\t\t$poller_ids = db_fetch_assoc('SELECT DISTINCT poller_id\n\t\t\t\t\t\t\tFROM host AS h\n\t\t\t\t\t\t\tINNER JOIN data_local AS dl\n\t\t\t\t\t\t\tON dl.host_id=h.id\n\t\t\t\t\t\t\tWHERE poller_id > 1\n\t\t\t\t\t\t\tAND id IN (' . implode(', ', $selected_items) . ')');\n\n\t\t\t\t\t\tapi_plugin_hook_function('graph_items_remove', $data_template_rrds);\n\n\t\t\t\t\t\t/* loop through each data source item */\n\t\t\t\t\t\tif (cacti_sizeof($data_template_rrds) > 0) {\n\t\t\t\t\t\t\tdb_execute('DELETE FROM graph_templates_item\n\t\t\t\t\t\t\t\tWHERE task_item_id IN (' . implode(',', $data_template_rrds) . ')\n\t\t\t\t\t\t\t\tAND local_graph_id > 0');\n\n\t\t\t\t\t\t\tif (sizeof($poller_ids)) {\n\t\t\t\t\t\t\t\tforeach($poller_ids as $poller_id) {\n\t\t\t\t\t\t\t\t\tif (($rcnn_id = poller_push_to_remote_db_connect($poller_id, true)) !== false) {\n\t\t\t\t\t\t\t\t\t\tdb_execute('DELETE FROM graph_templates_item\n\t\t\t\t\t\t\t\t\t\t\tWHERE task_item_id IN (' . implode(',', $data_template_rrds) . ')\n\t\t\t\t\t\t\t\t\t\t\tAND local_graph_id > 0', true, $rcnn_id);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '3': /* delete all graphs tied to this data source */\n\t\t\t\t\t\t$graphs = array_rekey(db_fetch_assoc('SELECT\n\t\t\t\t\t\t\tgraph_templates_graph.local_graph_id\n\t\t\t\t\t\t\tFROM (data_template_rrd,graph_templates_item,graph_templates_graph)\n\t\t\t\t\t\t\tWHERE graph_templates_item.task_item_id=data_template_rrd.id\n\t\t\t\t\t\t\tAND graph_templates_item.local_graph_id=graph_templates_graph.local_graph_id\n\t\t\t\t\t\t\tAND ' . array_to_sql_or($selected_items, 'data_template_rrd.local_data_id') . '\n\t\t\t\t\t\t\tAND graph_templates_graph.local_graph_id > 0\n\t\t\t\t\t\t\tGROUP BY graph_templates_graph.local_graph_id'), 'local_graph_id', 'local_graph_id');\n\n\t\t\t\t\t\tif (cacti_sizeof($graphs) > 0) {\n\t\t\t\t\t\t\tapi_graph_remove_multi($graphs);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tapi_data_source_remove_multi($selected_items);\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // change host\n\t\t\t\tget_filter_request_var('host_id');\n\n\t\t\t\tapi_data_source_change_host($selected_items, get_request_var('host_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '6') { // data source enable\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_data_source_enable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '7') { // data source disable\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_data_source_disable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '8') { // reapply suggested data source naming\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_reapply_suggested_data_source_data($selected_items[$i]);\n\t\t\t\t\tupdate_data_source_title_cache($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tapi_plugin_hook_function('data_source_action_execute', get_nfilter_request_var('drp_action'));\n\t\t\t}\n\t\t}\n\n\t\t/* update snmpcache */\n\t\tsnmpagent_data_source_action_bottom(array(get_nfilter_request_var('drp_action'), $selected_items));\n\n\t\tapi_plugin_hook_function('data_source_action_bottom', array(get_nfilter_request_var('drp_action'), $selected_items));\n\n\t\theader('Location: data_sources.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$ds_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$ds_list .= '<li>' . html_escape(get_data_source_title($matches[1])) . '</li>';\n\t\t\t$ds_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('data_sources.php');\n\n\thtml_start_box($ds_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($ds_array) && cacti_sizeof($ds_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t$graphs = array();\n\n\t\t\t/* find out which (if any) graphs are using this data source, so we can tell the user */\n\t\t\tif (isset($ds_array)) {\n\t\t\t\t$graphs = db_fetch_assoc('SELECT\n\t\t\t\t\tgraph_templates_graph.local_graph_id,\n\t\t\t\t\tgraph_templates_graph.title_cache\n\t\t\t\t\tFROM (data_template_rrd,graph_templates_item,graph_templates_graph)\n\t\t\t\t\tWHERE graph_templates_item.task_item_id=data_template_rrd.id\n\t\t\t\t\tAND graph_templates_item.local_graph_id=graph_templates_graph.local_graph_id\n\t\t\t\t\tAND ' . array_to_sql_or($ds_array, 'data_template_rrd.local_data_id') . '\n\t\t\t\t\tAND graph_templates_graph.local_graph_id > 0\n\t\t\t\t\tGROUP BY graph_templates_graph.local_graph_id\n\t\t\t\t\tORDER BY graph_templates_graph.title_cache');\n\t\t\t}\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following Data Source', 'Click \\'Continue\\' to delete following Data Sources', cacti_sizeof($ds_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\";\n\n\t\t\tif (cacti_sizeof($graphs)) {\n\t\t\t\tprint \"<tr><td class='textArea'><p class='textArea'>\" . __n('The following graph is using these data sources:', 'The following graphs are using these data sources:', cacti_sizeof($graphs)) . \"</p>\\n\";\n\n\t\t\t\tprint '<div class=\"itemlist\"><ul>';\n\t\t\t\tforeach ($graphs as $graph) {\n\t\t\t\t\tprint '<li>' . html_escape($graph['title_cache']) . \"</li>\\n\";\n\t\t\t\t}\n\t\t\t\tprint '</ul></div>';\n\t\t\t\tprint '<br>';\n\n\t\t\t\tform_radio_button('delete_type', '3', '1', __n('Leave the <strong>Graph</strong> untouched.', 'Leave all <strong>Graphs</strong> untouched.', cacti_sizeof($graphs)), '1'); print '<br>';\n\t\t\t\tform_radio_button('delete_type', '3', '2', __n('Delete all <strong>Graph Items</strong> that reference this Data Source.', 'Delete all <strong>Graph Items</strong> that reference these Data Sources.', cacti_sizeof($ds_array)), '1'); print '<br>';\n\t\t\t\tform_radio_button('delete_type', '3', '3', __n('Delete all <strong>Graphs</strong> that reference this Data Source.', 'Delete all <strong>Graphs</strong> that reference these Data Sources.', cacti_sizeof($ds_array)), '1'); print '<br>';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\tprint \"</td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Data Source', 'Delete Data Sources', cacti_sizeof($ds_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // change host\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Choose a new Device for this Data Source and click \\'Continue\\'.', 'Choose a new Device for these Data Sources and click \\'Continue\\'', cacti_sizeof($ds_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\n\t\t\t\t\t<p>\" . __('New Device:') . \"<br>\"; form_dropdown('host_id', db_fetch_assoc(\"SELECT id, CONCAT_WS('',description,' (',hostname,')') AS name FROM host ORDER BY description, hostname\"),'name','id','','','0'); print \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Change Device') . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '6') { // data source enable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to enable the following Data Source.', 'Click \\'Continue\\' to enable all following Data Sources.', cacti_sizeof($ds_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Enable Data Source', 'Enable Data Sources', cacti_sizeof($ds_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '7') { // data source disable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to disable the following Data Source.', 'Click \\'Continue\\' to disable all following Data Sources.', cacti_sizeof($ds_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Disable Data Source', 'Disable Data Sources', cacti_sizeof($ds_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '8') { // reapply suggested data source naming\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to re-apply the suggested name to the following Data Source.', 'Click \\'Continue\\' to re-apply the suggested names to all following Data Sources.', cacti_sizeof($ds_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Reapply Suggested Naming to Data Source', 'Reapply Suggested Naming to Data Sources', cacti_sizeof($ds_array)) . \"'>\";\n\t\t} else {\n\t\t\t$save['drp_action'] = get_nfilter_request_var('drp_action');\n\t\t\t$save['ds_list'] = $ds_list;\n\t\t\t$save['ds_array'] = (isset($ds_array)? $ds_array : array());\n\t\t\tapi_plugin_hook_function('data_source_action_prepare', $save);\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: data_sources.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($ds_array) ? serialize($ds_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* ----------------------------\n    data - Custom Data\n   ---------------------------- */\n\nfunction data_edit($incform = true) {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$data = db_fetch_row_prepared('SELECT id, data_input_id, data_template_id, name, local_data_id\n\t\t\tFROM data_template_data\n\t\t\tWHERE local_data_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$template_data = db_fetch_row_prepared('SELECT id, data_input_id\n\t\t\tFROM data_template_data\n\t\t\tWHERE data_template_id = ?\n\t\t\tAND local_data_id = 0',\n\t\t\tarray($data['data_template_id']));\n\n\t\t$host = db_fetch_row_prepared('SELECT host.id, host.hostname\n\t\t\tFROM (data_local, host)\n\t\t\tWHERE data_local.host_id = host.id\n\t\t\tAND data_local.id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\tif ($incform) {\n\t\tform_start('data_sources.php', 'data_source_edit');\n\t}\n\n\t$i = 0;\n\tif (!empty($data['data_input_id'])) {\n\t\t/* get each INPUT field for this data input source */\n\t\t$fields = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output = \"in\"\n\t\t\tORDER BY name',\n\t\t\tarray($data['data_input_id'])\n\t\t);\n\n\t\t$data_input_name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM data_input\n\t\t\tWHERE id = ?',\n\t\t\tarray($data['data_input_id']));\n\n\t\thtml_start_box(__('Custom Data [data input: %s]', html_escape($data_input_name)), '100%', '', '3', 'center', '');\n\n\t\t/* loop through each field found */\n\t\tif (cacti_sizeof($fields) > 0) {\n\t\t\tforeach ($fields as $field) {\n\t\t\t\t$data_input_data = db_fetch_row_prepared('SELECT *\n\t\t\t\t\tFROM data_input_data\n\t\t\t\t\tWHERE data_template_data_id = ?\n\t\t\t\t\tAND data_input_field_id = ?',\n\t\t\t\t\tarray($data['id'], $field['id'])\n\t\t\t\t);\n\n\t\t\t\tif (cacti_sizeof($data_input_data) > 0) {\n\t\t\t\t\t$old_value = $data_input_data['value'];\n\t\t\t\t} else {\n\t\t\t\t\t$old_value = '';\n\t\t\t\t}\n\n\t\t\t\t/* if data template then get t_value FROM template, else always allow user input */\n\t\t\t\tif (empty($data['data_template_id'])) {\n\t\t\t\t\t$can_template = 'on';\n\t\t\t\t} else {\n\t\t\t\t\t$can_template = db_fetch_cell_prepared('SELECT t_value\n\t\t\t\t\t\tFROM data_input_data\n\t\t\t\t\t\tWHERE data_template_data_id = ?\n\t\t\t\t\t\tAND data_input_field_id = ?',\n\t\t\t\t\t\tarray($template_data['id'], $field['id'])\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tform_alternate_row();\n\n\t\t\t\tif ((!empty($host['id'])) && (preg_match('/^' . VALID_HOST_FIELDS . '$/i', $field['type_code']))) {\n\t\t\t\t\tprint \"<td style='width:50%;'><strong>\" . html_escape($field['name']) . '</strong> ' . __('(From Device: %s)', html_escape($host['hostname'])) . \"</td>\\n\";\n\t\t\t\t\tprint \"<td><em>\" . html_escape($old_value) . \"</em></td>\\n\";\n\t\t\t\t} elseif (empty($can_template)) {\n\t\t\t\t\tprint \"<td style='width:50%;'><strong>\" . html_escape($field['name']) . '</strong> ' . __('(From Data Template)') . \"</td>\\n\";\n\t\t\t\t\tprint '<td><em>' . (empty($old_value) ? __('Nothing Entered') : html_escape($old_value)) . \"</em></td>\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tprint \"<td style='width:50%;'><strong>\" . html_escape($field['name']) . \"</strong></td>\\n\";\n\t\t\t\t\tprint '<td>';\n\n\t\t\t\t\tdraw_custom_data_row('value_' . $field['id'], $field['id'], $data['id'], $old_value);\n\n\t\t\t\t\tprint '</td>';\n\t\t\t\t}\n\n\t\t\t\tprint \"</tr>\\n\";\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Input Fields for the Selected Data Input Source') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tif ($incform) {\n\t\tform_hidden_box('local_data_id', (isset($data) ? $data['local_data_id'] : '0'), '');\n\t\tform_hidden_box('data_template_data_id', (isset($data) ? $data['id'] : '0'), '');\n\t}\n\n\tform_hidden_box('save_component_data', '1', '');\n}\n\n/* ------------------------\n    Data Source Functions\n   ------------------------ */\n\nfunction ds_rrd_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM data_template_rrd\n\t\tWHERE id = ?',\n\t\tarray(get_request_var('id')));\n\n\tdb_execute_prepared('UPDATE graph_templates_item\n\t\tSET task_item_id = 0\n\t\tWHERE task_item_id = ?',\n\t\tarray(get_request_var('id')));\n\n\theader('Location: data_sources.php?header=false&action=ds_edit&id=' . get_request_var('local_data_id'));\n}\n\nfunction ds_rrd_add() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared(\"INSERT INTO data_template_rrd\n\t\t(local_data_id, rrd_maximum, rrd_minimum, rrd_heartbeat, data_source_type_id, data_source_name)\n\t\tVALUES (?, 100, 0, 600, 1, 'ds')\",\n\t\tarray(get_request_var('id')));\n\n\t$data_template_rrd_id = db_fetch_insert_id();\n\n\theader('Location: data_sources.php?header=false&action=ds_edit&id=' . get_request_var('id') . \"&view_rrd=$data_template_rrd_id\");\n}\n\nfunction ds_edit() {\n\tglobal $struct_data_source, $struct_data_source_item;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_id');\n\t/* ==================================================== */\n\n\tapi_plugin_hook('data_source_edit_top');\n\n\t$use_data_template = true;\n\t$data_template     = array();\n\n\tif (!isempty_request_var('id')) {\n\t\t$data_local = db_fetch_row_prepared('SELECT host_id, data_template_id\n\t\t\tFROM data_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$data = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_template_data\n\t\t\tWHERE local_data_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (isset($data_local['data_template_id']) && $data_local['data_template_id'] >= 0) {\n\t\t\t$data_template = db_fetch_row_prepared('SELECT id, name\n\t\t\t\tFROM data_template\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($data_local['data_template_id']));\n\n\t\t\t$data_template_data = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM data_template_data\n\t\t\t\tWHERE data_template_id = ?\n\t\t\t\tAND local_data_id = 0',\n\t\t\t\tarray($data_local['data_template_id']));\n\t\t} else {\n\t\t\traise_message(11);\n\t\t\theader ('Location: data_sources.php');\n\t\t\texit;\n\t\t}\n\n\t\t$header_label = __('Data Template Selection [edit: %s]', html_escape(get_data_source_title(get_request_var('id'))));\n\n\t\tif (empty($data_local['data_template_id'])) {\n\t\t\t$use_data_template = false;\n\t\t}\n\t} else {\n\t\t$header_label = __('Data Template Selection [new]');\n\n\t\t$use_data_template = false;\n\t}\n\n\t/* handle debug mode */\n\tif (isset_request_var('debug')) {\n\t\tif (get_nfilter_request_var('debug') == '0') {\n\t\t\tkill_session_var('ds_debug_mode');\n\t\t} elseif (get_nfilter_request_var('debug') == '1') {\n\t\t\t$_SESSION['ds_debug_mode'] = true;\n\t\t}\n\t}\n\n\t/* handle debug mode */\n\tif (isset_request_var('info')) {\n\t\tif (get_nfilter_request_var('info') == '0') {\n\t\t\tkill_session_var('ds_info_mode');\n\t\t} elseif (get_nfilter_request_var('info') == '1') {\n\t\t\t$_SESSION['ds_info_mode'] = true;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tif (!isempty_request_var('id')) {\n\t\t?>\n\t\t<table style='width:100%'>\n\t\t\t<tr>\n\t\t\t\t<td class='textInfo left' style='vertical-align:top;'>\n\t\t\t\t\t<?php print html_escape(get_data_source_title(get_request_var('id')));?>\n\t\t\t\t</td>\n\t\t\t\t<td class='textInfo right' style='vertical-align:top;'>\n\t\t\t\t\t<span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('data_sources.php?action=ds_edit&id=' . (isset_request_var('id') ? get_request_var('id') : '0') . '&debug=' . (isset($_SESSION['ds_debug_mode']) ? '0' : '1'));?>'><?php print (isset($_SESSION['ds_debug_mode']) ? __('Turn Off Data Source Debug Mode.') : __('Turn On Data Source Debug Mode.'));?></a><br>\n\t\t\t\t\t<span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('data_sources.php?action=ds_edit&id=' . (isset_request_var('id') ? get_request_var('id') : '0') . '&info=' . (isset($_SESSION['ds_info_mode']) ? '0' : '1'));?>'><?php print (isset($_SESSION['ds_info_mode']) ? __('Turn Off Data Source Info Mode.') : __('Turn On Data Source Info Mode.'));?></a><br>\n\t\t\t\t\t<?php\n\t\t\t\t\t\tif (!empty($data_template['id'])) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('data_templates.php?action=template_edit&id=' . (isset($data_template['id']) ? $data_template['id'] : '0'));?>'><?php print __('Edit Data Template.');?></a><br><?php\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!empty($data_local['host_id'])) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('host.php?action=edit&id=' . $data_local['host_id']);?>'><?php print __('Edit Device.');?></a><br><?php\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<br>\n\t\t<?php\n\t}\n\n\tform_start('data_sources.php', 'data_source');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (cacti_sizeof($data_template)) {\n\t\t$data_sources = db_fetch_cell_prepared('SELECT\n\t\t\tGROUP_CONCAT(DISTINCT data_source_name ORDER BY data_source_name) AS data_source_names\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE data_template_id = ?\n\t\t\tGROUP BY data_template_id\n\t\t\tORDER BY data_source_names',\n\t\t\tarray($data_template['id'])\n\t\t);\n\n\t\t$dts = db_fetch_assoc_prepared('SELECT data_template_id,\n\t\t\tGROUP_CONCAT(DISTINCT data_source_name ORDER BY data_source_name) AS data_source_names\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE local_data_id=0\n\t\t\tGROUP BY data_template_id\n\t\t\tHAVING data_source_names = ?',\n\t\t\tarray($data_sources)\n\t\t);\n\n\t\tif (cacti_sizeof($dts)) {\n\t\t\tforeach($dts as $dtid) {\n\t\t\t\t$dtids[] = $dtid['data_template_id'];\n\t\t\t}\n\t\t}\n\n\t\t$dtsql = 'SELECT id, name FROM data_template WHERE id IN(' . implode(',', $dtids) . ') ORDER BY name';\n\t} else {\n\t\t$dtsql = 'SELECT id, name FROM data_template ORDER BY name';\n\t}\n\n\tif (get_request_var('host_id') > 0) {\n\t\t$hostDescription = db_fetch_cell_prepared('SELECT description\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('host_id'))\n\t\t);\n\t} elseif (isset($data_local['host_id'])) {\n\t\t$hostDescription = db_fetch_cell_prepared('SELECT description\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray($data_local['host_id'])\n\t\t);\n\t} else {\n\t\t$hostDescription = '';\n\t}\n\n\t$form_array = array(\n\t\t'data_template_id' => array(\n\t\t\t'method' => 'drop_sql',\n\t\t\t'friendly_name' => __('Selected Data Template'),\n\t\t\t'description' => __('The name given to this data template.  Please note that you may only change Graph Templates to a 100%$ compatible Graph Template, which means that it includes identical Data Sources.'),\n\t\t\t'value' => (cacti_sizeof($data_template) ? $data_template['id'] : '0'),\n\t\t\t'none_value' => (cacti_sizeof($data_template) ? '' : 'None'),\n\t\t\t'sql' => $dtsql\n\t\t\t),\n\t\t'host_id' => array(\n\t\t\t'method' => 'drop_callback',\n\t\t\t'friendly_name' => __('Device'),\n\t\t\t'description' => __('Choose the Device that this Data Source belongs to.'),\n\t\t\t'none_value' => __('None'),\n\t\t\t'sql' => 'SELECT id, description AS name FROM host ORDER BY name',\n\t\t\t'action' => 'ajax_hosts_noany',\n\t\t\t'id' => (isset($data_local['host_id']) ? $data_local['host_id'] : 0),\n\t\t\t'value' => $hostDescription\n\t\t\t),\n\t\t'_data_template_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($data_template['id']) ? $data_template['id'] : '0')\n\t\t\t),\n\t\t'_host_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($data_local['host_id']) ? $data_local['host_id'] : '0')\n\t\t\t),\n\t\t'_data_input_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($data['data_input_id']) ? $data['data_input_id'] : '0')\n\t\t\t),\n\t\t'data_template_data_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($data['id']) ? $data['id'] : '0')\n\t\t\t),\n\t\t'local_data_template_data_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($data['local_data_template_data_id']) ? $data['local_data_template_data_id'] : '0')\n\t\t\t),\n\t\t'local_data_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($data['local_data_id']) ? $data['local_data_id'] : '0')\n\t\t\t),\n\t\t);\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t/* only display the \"inputs\" area if we are using a data template for this data source */\n\tif (!empty($data['data_template_id'])) {\n\t\t$template_data_rrds = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE local_data_id = ?\n\t\t\tORDER BY data_source_name',\n\t\t\tarray(get_request_var('id')));\n\n\t\thtml_start_box(__('Supplemental Data Template Data'), '100%', true, '3', 'center', '');\n\n\t\tdraw_nontemplated_fields_data_source($data['data_template_id'], $data['local_data_id'], $data, '|field|', __('Data Source Fields'), true, true, 0);\n\t\tdraw_nontemplated_fields_data_source_item($data['data_template_id'], $template_data_rrds, '|field|_|id|', __('Data Source Item Fields'), true, true, true, 0);\n\t\tdraw_nontemplated_fields_custom_data($data['id'], 'value_|id|', __('Custom Data'), true, true, 0);\n\n\t\tform_hidden_box('save_component_data','1','');\n\n\t\thtml_end_box(true, true);\n\t}\n\n\tif (((isset_request_var('id')) || (isset_request_var('new'))) && (empty($data['data_template_id']))) {\n\t\thtml_start_box( __('Data Source'), '100%', true, '3', 'center', '');\n\n\t\t$form_array = array();\n\n\t\tforeach ($struct_data_source as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $struct_data_source[$field_name]);\n\n\t\t\tif (($field_array['method'] != 'header') && ($field_array['method'] != 'spacer' )){\n\t\t\t\tif (!(($use_data_template == false) || (!empty($data_template_data['t_' . $field_name])) || ($field_array['flags'] == 'NOTEMPLATE'))) {\n\t\t\t\t\t$form_array[$field_name]['description'] = '';\n\t\t\t\t}\n\n\t\t\t\t$form_array[$field_name]['value'] = (isset($data[$field_name]) ? $data[$field_name] : '');\n\t\t\t\t$form_array[$field_name]['form_id'] = (empty($data['id']) ? '0' : $data['id']);\n\n\t\t\t\tif (!(($use_data_template == false) || (!empty($data_template_data['t_' . $field_name])) || ($field_array['flags'] == 'NOTEMPLATE'))) {\n\t\t\t\t\t$form_array[$field_name]['method'] = 'template_' . $form_array[$field_name]['method'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => inject_form_variables($form_array, (isset($data) ? $data : array()))\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box(true, true);\n\n\t\t/* fetch ALL rrd's for this data source */\n\t\tif (!isempty_request_var('id')) {\n\t\t\t$template_data_rrds = db_fetch_assoc_prepared('SELECT id, data_source_name\n\t\t\t\tFROM data_template_rrd\n\t\t\t\tWHERE local_data_id = ?\n\t\t\t\tORDER BY data_source_name',\n\t\t\t\tarray(get_request_var('id')));\n\t\t}\n\n\t\t/* select the first \"rrd\" of this data source by default */\n\t\tif (isempty_request_var('view_rrd')) {\n\t\t\tset_request_var('view_rrd', (isset($template_data_rrds[0]['id']) ? $template_data_rrds[0]['id'] : '0'));\n\t\t}\n\n\t\t/* get more information about the rrd we chose */\n\t\tif (!isempty_request_var('view_rrd')) {\n\t\t\t$local_data_template_rrd_id = db_fetch_cell_prepared('SELECT local_data_template_rrd_id\n\t\t\t\tFROM data_template_rrd\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_request_var('view_rrd')));\n\n\t\t\t$rrd = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM data_template_rrd\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_request_var('view_rrd')));\n\n\t\t\t$rrd_template = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM data_template_rrd\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($local_data_template_rrd_id));\n\n\t\t\t$header_label = __('[edit: %s]', html_escape($rrd['data_source_name']));\n\t\t} else {\n\t\t\t$header_label = '';\n\t\t}\n\n\t\t$i = 0;\n\t\tif (isset($template_data_rrds)) {\n\t\t\tif (cacti_sizeof($template_data_rrds) > 1) {\n\t\t\t\t/* draw the data source tabs on the top of the page */\n\t\t\t\tprint \"\t<table class='tabs'><tr>\\n\";\n\n\t\t\t\tforeach ($template_data_rrds as $template_data_rrd) {\n\t\t\t\t\t$i++;\n\t\t\t\t\tprint \"\t<td \" . (($template_data_rrd['id'] == get_request_var('view_rrd')) ? \"class='even'\" : \"class='odd'\") . \" style='width:\" . ((strlen($template_data_rrd['data_source_name']) * 9) + 50) . \";text-align:center;' class='tab'>\n\t\t\t\t\t\t<span class='textHeader'><a href='\" . html_escape('data_sources.php?action=ds_edit&id=' . get_request_var('id') . '&view_rrd=' . $template_data_rrd['id']) . \"'>$i: \" . html_escape($template_data_rrd['data_source_name']) . '</a>' . (($use_data_template == false) ? \" <a class='pic deleteMarker fa fa-times' href='\" . html_escape('data_sources.php?action=rrd_remove&id=' . $template_data_rrd['id'] . '&local_data_id=' . get_request_var('id')) . \"' title='\" . __esc('Delete') . \"'></a>\" : '') . \"</span>\n\t\t\t\t\t\t</td>\\n\";\n\t\t\t\t\tprint \"<td style='width:1px;'></td>\\n\";\n\t\t\t\t}\n\n\t\t\t\tprint \"<td></td></tr></table>\\n\";\n\t\t\t} elseif (cacti_sizeof($template_data_rrds) == 1) {\n\t\t\t\tset_request_var('view_rrd', $template_data_rrds[0]['id']);\n\t\t\t}\n\t\t}\n\n\t\thtml_start_box('', '100%', true, '3', 'center', '');\n\n\t\tprint \"<div class='tableHeader'>\n\t\t\t<div class='tableSubHeaderColumn left'>\n\t\t\t\t\" . __('Data Source Item %s', $header_label) . \"\n\t\t\t</div>\n\t\t\t<div class='tableSubHeaderColumn right'>\n\t\t\t\t\" . ((!isempty_request_var('id') && (empty($data_template['id']))) ? \"<a class='linkOverDark' href='\" . html_escape('data_sources.php?action=rrd_add&id=' . get_request_var('id')) . \"'>\" . __('New') . \"</a>&nbsp;\" : '') . \"\n\t\t\t</div>\n\t\t</div>\\n\";\n\n\t\t/* data input fields list */\n\t\tif ((empty($data['data_input_id'])) || (db_fetch_cell_prepared('SELECT type_id FROM data_input WHERE id = ?', array($data['data_input_id'])) > '1')) {\n\t\t\tunset($struct_data_source_item['data_input_field_id']);\n\t\t} else {\n\t\t\t$struct_data_source_item['data_input_field_id']['sql'] = \"SELECT id,CONCAT(data_name,' - ',name) as name FROM data_input_fields WHERE data_input_id=\" . $data['data_input_id'] . \" and input_output='out' and update_rra='on' order by data_name,name\";\n\t\t}\n\n\t\t$form_array = array();\n\n\t\tforeach ($struct_data_source_item as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $struct_data_source_item[$field_name]);\n\n\t\t\tif (($field_array['method'] != 'header') && ($field_array['method'] != 'spacer' )){\n\t\t\t\tif (!(($use_data_template == false) || ($rrd_template['t_' . $field_name] == 'on'))) {\n\t\t\t\t\t$form_array[$field_name]['description'] = '';\n\t\t\t\t}\n\n\t\t\t\t$form_array[$field_name]['value'] = (isset($rrd) ? $rrd[$field_name] : '');\n\n\t\t\t\tif (!(($use_data_template == false) || ($rrd_template['t_' . $field_name] == 'on'))) {\n\t\t\t\t\t$form_array[$field_name]['method'] = 'template_' . $form_array[$field_name]['method'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => array(\n\t\t\t\t\t'data_template_rrd_id' => array(\n\t\t\t\t\t\t'method' => 'hidden',\n\t\t\t\t\t\t'value' => (isset($rrd) ? $rrd['id'] : '0')\n\t\t\t\t\t),\n\t\t\t\t\t'local_data_template_rrd_id' => array(\n\t\t\t\t\t\t'method' => 'hidden',\n\t\t\t\t\t\t'value' => (isset($rrd) ? $rrd['local_data_template_rrd_id'] : '0')\n\t\t\t\t\t)\n\t\t\t\t) + $form_array\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box(true, true);\n\n\t\t/* data source data goes here */\n\t\tdata_edit(false);\n\n\t\tform_hidden_box('current_rrd', get_request_var('view_rrd'), '0');\n\t}\n\n\t/* display the debug mode box if the user wants it */\n\tif ((isset($_SESSION['ds_debug_mode'])) && (isset_request_var('id'))) {\n\t\t?>\n\t\t<table style='width:100%'>\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<span class='textInfo'><?php print __('Data Source Debug');?></span><br>\n\t\t\t\t\t<pre><?php print @rrdtool_function_create(get_request_var('id'), '-600', true);?></pre>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<?php\n\t}\n\n\t/* display the debug mode box if the user wants it */\n\tif ((isset($_SESSION['ds_info_mode'])) && (isset_request_var('id'))) {\n\t\t?>\n\t\t<table style='width:100%'>\n\t\t\t<tr>\n\t\t\t\t<td><?php\n\t\t\t\t$rrd_info = rrdtool_function_info(get_request_var('id'));\n\n\t\t\t\tif (cacti_sizeof($rrd_info['rra'])) {\n\t\t\t\t\t$diff = rrdtool_cacti_compare(get_request_var('id'), $rrd_info);\n\t\t\t\t\trrdtool_info2html($rrd_info, $diff);\n\t\t\t\t\tif (cacti_sizeof($diff)) {\n\t\t\t\t\t\thtml_start_box(__('RRDtool Tune Info'), '100%', '', '3', 'center', '');\n\t\t\t\t\t\trrdtool_tune($rrd_info['filename'], $diff, true);\n\t\t\t\t\t\thtml_end_box();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t?></td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<?php\n\t}\n\n\tif ((isset_request_var('id')) || (isset_request_var('new'))) {\n\t\tform_hidden_box('save_component_data_source','1','');\n\t} else {\n\t\tform_hidden_box('save_component_data_source_new','1','');\n\t}\n\n\tform_save_button('data_sources.php');\n\n\tapi_plugin_hook('data_source_edit_bottom');\n\n\tbottom_footer();\n}\n\nfunction get_poller_interval($seconds, $data_source_profile_id) {\n\tif ($seconds == 0 || $data_source_profile_id == 0) {\n\t\treturn '<em>' . __('External') . '</em>';\n\t}else if ($seconds < 60) {\n\t\treturn '<em>' . __('%d Seconds', $seconds) . '</em>';\n\t}else if ($seconds == 60) {\n\t\treturn  __('1 Minute');\n\t} else {\n\t\treturn '<em>' . __('%d Minutes', ($seconds / 60)) . '</em>';\n\t}\n}\n\nfunction validate_data_source_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'rfilter' => array(\n\t\t\t'filter' => FILTER_VALIDATE_IS_REGEX,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name_cache',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'host_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'site_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'status' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'profile' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'orphans' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ds');\n\t/* ================= input validation ================= */\n}\n\nfunction ds() {\n\tglobal $ds_actions, $item_rows, $sampling_intervals;\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\tif (get_request_var('host_id') > 0) {\n\t\t$host = db_fetch_row_prepared('SELECT hostname\n\t\t\tFROM host\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('host_id')));\n\t} else {\n\t\t$host = array();\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction applyFilter() {\n\t\tstrURL  = 'data_sources.php' +\n\t\t\t'?host_id=' + $('#host_id').val() +\n\t\t\t'&site_id=' + $('#site_id').val() +\n\t\t\t'&rfilter=' + base64_encode($('#rfilter').val()) +\n\t\t\t'&rows=' + $('#rows').val() +\n\t\t\t'&status=' + $('#status').val() +\n\t\t\t'&profile=' + $('#profile').val() +\n\t\t\t'&orphans=' + $('#orphans').val() +\n\t\t\t'&template_id=' + $('#template_id').val() +\n\t\t\t'&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'data_sources.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter()\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter()\n\t\t});\n\n\t\t$('#form_data_sources').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\tif (read_config_option('grds_creation_method') == 1 ) {\n\t\tif (get_request_var('host_id') == '-1') {\n\t\t\t$new_host_id = 0;\n\t\t} else {\n\t\t\t$new_host_id = get_request_var('host_id');\n\t\t}\n\n\t\t$add_url = html_escape('data_sources.php?action=ds_edit&host_id=' . $new_host_id);\n\t} else {\n\t\t$add_url = '';\n\t}\n\n\tif (get_request_var('site_id') > 0) {\n\t\t$host_where = 'site_id = ' . get_request_var('site_id');\n\t} else {\n\t\t$host_where = '';\n\t}\n\n\thtml_start_box( __('Data Sources [%s]', (empty($host['hostname']) ? __('No Device') : html_escape($host['hostname']))), '100%', '', '3', 'center', $add_url);\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_data_sources' name='form_data_sources' action='data_sources.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<?php print html_site_filter(get_request_var('site_id'));?>\n\t\t\t\t\t<?php print html_host_filter(get_request_var('host_id'), 'applyFilter', $host_where);?>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='template_id' name='template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\n\t\t\t\t\t\t\t$templates = db_fetch_assoc('SELECT DISTINCT data_template.id, data_template.name\n\t\t\t\t\t\t\t\tFROM data_template\n\t\t\t\t\t\t\t\tINNER JOIN data_template_data\n\t\t\t\t\t\t\t\tON data_template.id = data_template_data.data_template_id\n\t\t\t\t\t\t\t\tWHERE data_template_data.local_data_id > 0\n\t\t\t\t\t\t\t\tORDER BY data_template.name');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($templates) > 0) {\n\t\t\t\t\t\t\t\tforeach ($templates as $template) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $template['id'] . \"'\"; if (get_request_var('template_id') == $template['id']) { print ' selected'; } print '>' . title_trim(html_escape($template['name']), 40) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Profile');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='profile' name='profile' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('profile') == '-1' ? ' selected>':'>') . __('All');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$profiles = array_rekey(db_fetch_assoc('SELECT id, name FROM data_source_profiles ORDER BY name'), 'id', 'name');\n\t\t\t\t\t\t\tif (cacti_sizeof($profiles)) {\n\t\t\t\t\t\t\t\tforeach ($profiles as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('profile') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Status');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='status' name='status' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('status') == '-1') {?> selected<?php }?>><?php print __('All');?></option>\n\t\t\t\t\t\t\t<option value='1'<?php if (get_request_var('status') == '1') {?> selected<?php }?>><?php print __('Enabled');?></option>\n\t\t\t\t\t\t\t<option value='2'<?php if (get_request_var('status') == '2') {?> selected<?php }?>><?php print __('Disabled');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Orphaned');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='orphans' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('orphans') == '-1' ? ' selected>':'>') . __('All');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php print (get_request_var('orphans') == '0' ? ' selected>':'>') . __('Has Graphs');?></option>\n\t\t\t\t\t\t\t<option value='1'<?php print (get_request_var('orphans') == '1' ? ' selected>':'>') . __('Orphaned');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='rfilter' size='30' value='<?php print html_escape_request_var('rfilter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Data Sources');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows) > 0) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('rfilter') != '') {\n\t\t$sql_where1 = \"WHERE (dtd.name_cache RLIKE '\" . get_request_var('rfilter') . \"'\" .\n\t\t\t\" OR dtd.local_data_id RLIKE '\" . get_request_var('rfilter') . \"'\" .\n\t\t\t\" OR dt.name RLIKE '\" . get_request_var('rfilter') . \"')\";\n\t} else {\n\t\t$sql_where1 = '';\n\t}\n\n\tif (get_request_var('host_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (isempty_request_var('host_id')) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' (dl.host_id=0 OR dl.host_id IS NULL)';\n\t} elseif (!isempty_request_var('host_id')) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dl.host_id=' . get_request_var('host_id');\n\t}\n\n\tif (get_request_var('site_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (isempty_request_var('site_id')) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' (h.site_id=0 OR h.site_id IS NULL)';\n\t} elseif (!isempty_request_var('site_id')) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' h.site_id=' . get_request_var('site_id');\n\t}\n\n\tif (get_request_var('template_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('template_id') == '0') {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dtd.data_template_id=0';\n\t} elseif (!isempty_request_var('template_id')) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dtd.data_template_id=' . get_request_var('template_id');\n\t}\n\n\tif (get_request_var('profile') == '-1') {\n\t\t/* Show all items */\n\t} else {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dtd.data_source_profile_id=' . get_request_var('profile');\n\t}\n\n\tif (get_request_var('status') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('status') == '1') {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dtd.active=\"on\"';\n\t} else {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dtd.active=\"\"';\n\t}\n\n\t$orphan_where = ' AND graph_type_id IN (' .\n\t\tGRAPH_ITEM_TYPE_LINE1     . ', ' .\n\t\tGRAPH_ITEM_TYPE_LINE2     . ', '.\n\t\tGRAPH_ITEM_TYPE_LINE3     . ', ' .\n\t\tGRAPH_ITEM_TYPE_LINESTACK . ', ' .\n\t\tGRAPH_ITEM_TYPE_AREA      . ', ' .\n\t\tGRAPH_ITEM_TYPE_STACK     . ')';\n\n\tif (get_request_var('orphans') == '0') {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dl.id IN (SELECT DISTINCT dl.id FROM data_local AS dl INNER JOIN data_template_rrd AS dtr ON dl.id=dtr.local_data_id LEFT JOIN graph_templates_item AS gti ON gti.task_item_id=dtr.id WHERE gti.id IS NOT NULL' . $orphan_where . ')';\n\t} elseif (get_request_var('orphans') == 1) {\n\t\t$sql_where1 .= ($sql_where1 != '' ? ' AND':'WHERE') . ' dl.id IN (SELECT DISTINCT dl.id FROM data_local AS dl INNER JOIN data_template_rrd AS dtr ON dl.id=dtr.local_data_id LEFT JOIN graph_templates_item AS gti ON gti.task_item_id=dtr.id WHERE gti.id IS NULL)';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM data_local AS dl\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dl.id=dtd.local_data_id\n\t\tINNER JOIN data_template AS dt\n\t\tON dt.id=dl.data_template_id\n\t\tINNER JOIN host AS h\n\t\tON h.id = dl.host_id\n\t\t$sql_where1\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$data_sources = db_fetch_assoc(\"SELECT dtd.local_data_id, dtd.name_cache, dtd.active,\n\t\tdtd.rrd_step, dt.name AS data_template_name, dl.host_id, dtd.data_source_profile_id\n\t\tFROM data_local AS dl\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dl.id=dtd.local_data_id\n\t\tINNER JOIN data_template AS dt\n\t\tON dt.id=dl.data_template_id\n\t\tINNER JOIN host AS h\n\t\tON h.id = dl.host_id\n\t\t$sql_where1\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('data_sources.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Data Sources'), 'page', 'main');\n\n\tform_start('data_sources.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name_cache' => array(\n\t\t\t'display' => __('Data Source Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The name of this Data Source. Generally programtically generated from the Data Template definition.')\n\t\t),\n\t\t'local_data_id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database ID for this Data Source. Useful when performing automation or debugging.')\n\t\t),\n\t\t'nosort' => array(\n\t\t\t'display' => __('Poller Interval'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The frequency that data is collected for this Data Source.')\n\t\t),\n\t\t'nosort1' => array(\n\t\t\t'display' => __('Deletable'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('If this Data Source is no long in use by Graphs, it can be Deleted.')\n\t\t),\n\t\t'active' => array(\n\t\t\t'display' => __('Active'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('Whether or not data will be collected for this Data Source. Controlled at the Data Template level.')\n\t\t),\n\t\t'data_template_name' => array(\n\t\t\t'display' => __('Template Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Data Template that this Data Source was based upon.')\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($data_sources)) {\n\t\tforeach ($data_sources as $data_source) {\n\t\t\tif (api_data_source_deletable($data_source['local_data_id'])) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n\t\t\t$data_source['data_template_name'] = html_escape($data_source['data_template_name']);\n\t\t\t$data_name_cache = title_trim(html_escape($data_source['name_cache']), read_config_option('max_title_length'));\n\n\t\t\tif (get_request_var('rfilter') != '') {\n\t\t\t\t$data_name_cache = filter_value($data_name_cache, get_request_var('rfilter'));\n\t\t\t}\n\n\t\t\t/* keep copy of data source for comparison */\n\t\t\t$data_source_orig = $data_source;\n\t\t\t$data_source = api_plugin_hook_function('data_sources_table', $data_source);\n\n\t\t\t/* we're escaping strings here, so no need to escape them on form_selectable_cell */\n\t\t\tif (empty($data_source['data_template_name'])) {\n\t\t\t\t$data_template_name = '<em>' . __('None') . '</em>';\n\t\t\t} elseif ($data_source_orig['data_template_name'] != $data_source['data_template_name']) {\n\t\t\t\t/* was changed by plugin, plugin has to take care for html-escaping */\n\t\t\t\t$data_template_name = $data_source['data_template_name'];\n\t\t\t} elseif (get_request_var('rfilter') != '') {\n\t\t\t\t$data_template_name = filter_value($data_source['data_template_name'], get_request_var('rfilter'));\n\t\t\t} else {\n\t\t\t\t$data_template_name = html_escape($data_source['data_template_name']);\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $data_source['local_data_id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value(title_trim($data_source['name_cache'], read_config_option('max_title_length')), get_request_var('rfilter'), 'data_sources.php?action=ds_edit&id=' . $data_source['local_data_id']), $data_source['local_data_id']);\n\t\t\tform_selectable_cell($data_source['local_data_id'], $data_source['local_data_id'], '', 'right');\n\t\t\tform_selectable_cell(get_poller_interval($data_source['rrd_step'], $data_source['data_source_profile_id']), $data_source['local_data_id']);\n\t\t\tform_selectable_cell(api_data_source_deletable($data_source['local_data_id']) ? __('Yes') : __('No'), $data_source['local_data_id']);\n\t\t\tform_selectable_cell(($data_source['active'] == 'on' ? __('Yes'):__('No')), $data_source['local_data_id']);\n\t\t\tform_selectable_cell($data_template_name, $data_source['local_data_id']);\n\t\t\tform_checkbox_cell($data_source['name_cache'], $data_source['local_data_id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='7'><em>\" . __('No Data Sources Found') . \"</em></td></tr>\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($data_sources)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($ds_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude ('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n$ds_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate'),\n\t3 => __('Change Profile')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'rrd_add':\n\t\ttemplate_rrd_add();\n\n\t\tbreak;\n\tcase 'rrd_remove':\n\t\ttemplate_rrd_remove();\n\n\t\tbreak;\n\tcase 'template_remove':\n\t\ttemplate_remove();\n\n\t\theader('Location: data_templates.php?header=false');\n\t\tbreak;\n\tcase 'template_edit':\n\t\ttop_header();\n\n\t\ttemplate_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\ttemplate();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tif (isset_request_var('save_component_template')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('data_input_id');\n\t\tget_filter_request_var('data_template_id');\n\t\tget_filter_request_var('data_template_data_id');\n\t\tget_filter_request_var('data_template_rrd_id');\n\t\tget_filter_request_var('data_source_type_id');\n\t\tget_filter_request_var('data_source_profile_id');\n\t\tget_filter_request_var('rrd_heartbeat');\n\t\t/* ==================================================== */\n\n\t\t/* save: data_template */\n\t\t$save1['id']   = get_request_var('data_template_id');\n\t\t$save1['hash'] = get_hash_data_template(get_request_var('data_template_id'));\n\t\t$save1['name'] = form_input_validate(get_nfilter_request_var('template_name'), 'template_name', '', false, 3);\n\n\t\t/* save: data_template_data */\n\t\t$save2['id']            = get_request_var('data_template_data_id');\n\t\t$save2['local_data_template_data_id'] = 0;\n\t\t$save2['local_data_id'] = 0;\n\n\t\t$save2['data_input_id'] = form_input_validate(get_request_var('data_input_id'), 'data_input_id', '^[0-9]+$', true, 3);\n\t\t$save2['t_name']        = form_input_validate((isset_request_var('t_name') ? get_nfilter_request_var('t_name') : ''), 't_name', '', true, 3);\n\t\t$save2['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', (isset_request_var('t_name') ? true : false), 3);\n\t\t$save2['t_active']      = form_input_validate((isset_request_var('t_active') ? get_nfilter_request_var('t_active') : ''), 't_active', '', true, 3);\n\t\t$save2['active']        = form_input_validate((isset_request_var('active') ? get_nfilter_request_var('active') : ''), 'active', '', true, 3);\n\n\t\t$rrd_step               = db_fetch_cell_prepared('SELECT step FROM data_source_profiles WHERE id = ?', array(get_request_var('data_source_profile_id')));\n\t\t$rrd_heartbeat          = db_fetch_cell_prepared('SELECT heartbeat FROM data_source_profiles WHERE id = ?', array(get_request_var('data_source_profile_id')));\n\t\t$save2['rrd_step']      = $rrd_step;\n\n\t\t$save2['t_data_source_profile_id'] = form_input_validate((isset_request_var('t_data_source_profile_id') ? get_nfilter_request_var('t_data_source_profile_id') : ''), 't_data_source_profile_id', '', true, 3);\n\t\t$save2['data_source_profile_id']   = form_input_validate(get_request_var('data_source_profile_id'), 'data_source_profile_id', '^[0-9]+$', (isset_request_var('data_source_profile_id') ? true : false), 3);\n\n\t\t/* save: data_template_rrd */\n\t\t$save3['id']                    = get_request_var('data_template_rrd_id');\n\t\t$save3['hash']                  = get_hash_data_template(get_request_var('data_template_rrd_id'), 'data_template_item');\n\t\t$save3['local_data_template_rrd_id'] = 0;\n\t\t$save3['local_data_id']         = 0;\n\n\t\t$save3['t_rrd_maximum']         = form_input_validate((isset_request_var('t_rrd_maximum') ? get_nfilter_request_var('t_rrd_maximum') : ''), 't_rrd_maximum', '', true, 3);\n\t\t$save3['rrd_maximum']           = form_input_validate(get_nfilter_request_var('rrd_maximum'), 'rrd_maximum', '^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$', (isset_request_var('t_rrd_maximum') ? true : false), 3);\n\t\t$save3['t_rrd_minimum']         = form_input_validate((isset_request_var('t_rrd_minimum') ? get_nfilter_request_var('t_rrd_minimum') : ''), 't_rrd_minimum', '', true, 3);\n\t\t$save3['rrd_minimum']           = form_input_validate(get_nfilter_request_var('rrd_minimum'), 'rrd_minimum', '^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$', (isset_request_var('t_rrd_minimum') ? true : false), 3);\n\n\t\t$save3['rrd_heartbeat']         = $rrd_heartbeat;\n\n\t\t$save3['t_data_source_type_id'] = form_input_validate((isset_request_var('t_data_source_type_id') ? get_nfilter_request_var('t_data_source_type_id') : ''), 't_data_source_type_id', '', true, 3);\n\t\t$save3['data_source_type_id']   = form_input_validate(get_request_var('data_source_type_id'), 'data_source_type_id', '^[0-9]+$', true, 3);\n\t\t$save3['t_data_source_name']    = form_input_validate((isset_request_var('t_data_source_name') ? get_nfilter_request_var('t_data_source_name') : ''), 't_data_source_name', '', true, 3);\n\t\t$save3['data_source_name']      = form_input_validate(get_nfilter_request_var('data_source_name'), 'data_source_name', '^[a-zA-Z0-9_]{1,19}$', (isset_request_var('t_data_source_name') ? true : false), 3);\n\t\t$save3['t_data_input_field_id'] = form_input_validate((isset_request_var('t_data_input_field_id') ? get_nfilter_request_var('t_data_input_field_id') : ''), 't_data_input_field_id', '', true, 3);\n\t\t$save3['data_input_field_id']   = form_input_validate((isset_request_var('data_input_field_id') ? get_nfilter_request_var('data_input_field_id') : '0'), 'data_input_field_id', '', true, 3);\n\n\t\t/* ok, first pull out all 'input' values so we know how much to save */\n\t\t$input_fields = db_fetch_assoc_prepared(\"SELECT id, input_output, regexp_match,\n\t\t\tallow_nulls, type_code, data_name\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output = 'in'\",\n\t\t\tarray(get_request_var('data_input_id')));\n\n\t\t/* pass 1 for validation */\n\t\tif (cacti_sizeof($input_fields)) {\n\t\t\tforeach ($input_fields as $input_field) {\n\t\t\t\t$form_value = 'value_' . $input_field['data_name'];\n\n\t\t\t\tif ((isset_request_var($form_value)) && ($input_field['type_code'] == '')) {\n\t\t\t\t\tif ((isset_request_var('t_' . $form_value)) &&\n\t\t\t\t\t\t(get_nfilter_request_var('t_' . $form_value) == 'on')) {\n\t\t\t\t\t\t$not_required = true;\n\t\t\t\t\t} elseif ($input_field['allow_nulls'] == 'on') {\n\t\t\t\t\t\t$not_required = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$not_required = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tform_input_validate(get_nfilter_request_var($form_value), 'value_' . $input_field['data_name'], $input_field['regexp_match'], $not_required, 3);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$data_template_id = sql_save($save1, 'data_template');\n\n\t\t\tif ($data_template_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$save2['data_template_id'] = $data_template_id;\n\t\t\t$data_template_data_id = sql_save($save2, 'data_template_data');\n\n\t\t\tif ($data_template_data_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\t/* update actual host template information for live hosts */\n\t\tif ((!is_error_message()) && ($save2['id'] > 0)) {\n\t\t\tdb_execute_prepared('UPDATE data_template_data\n\t\t\t\tSET data_input_id = ?\n\t\t\t\tWHERE data_template_id = ?',\n\t\t\t\tarray(get_request_var('data_input_id'), get_request_var('data_template_id')));\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$save3['data_template_id'] = $data_template_id;\n\t\t\t$data_template_rrd_id = sql_save($save3, 'data_template_rrd');\n\n\t\t\tif ($data_template_rrd_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\tif (!isempty_request_var('data_template_id')) {\n\t\t\t\t/* push out all data source settings to child data source using this template */\n\t\t\t\tpush_out_data_source($data_template_data_id);\n\t\t\t\tpush_out_data_source_item($data_template_rrd_id);\n\n\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\tFROM data_input_data\n\t\t\t\t\tWHERE data_template_data_id = ?',\n\t\t\t\t\tarray($data_template_data_id));\n\n\t\t\t\tif (cacti_sizeof($input_fields)) {\n\t\t\t\t\tforeach ($input_fields as $input_field) {\n\t\t\t\t\t\t$form_value = 'value_' . $input_field['data_name'];\n\n\t\t\t\t\t\tif (isset_request_var($form_value)) {\n\t\t\t\t\t\t\t/* save the data into the 'host_template_data' table */\n\t\t\t\t\t\t\tif (isset_request_var('t_value_' . $input_field['data_name'])) {\n\t\t\t\t\t\t\t\t$template_this_item = 'on';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$template_this_item = '';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ((!empty($form_value)) || (!isempty_request_var('t_value_' . $input_field['data_name']))) {\n\t\t\t\t\t\t\t\t/* unusual case where a form value comes back as an array\n\t\t\t\t\t\t\t\t * this should be cleaned up in the database repair script. */\n\t\t\t\t\t\t\t\t$value = get_nfilter_request_var($form_value);\n\t\t\t\t\t\t\t\tif (is_array($value)) {\n\t\t\t\t\t\t\t\t\t$value = trim($value[0]);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$value = trim($value);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tdb_execute_prepared('INSERT INTO data_input_data\n\t\t\t\t\t\t\t\t\t(data_input_field_id, data_template_data_id, t_value, value)\n\t\t\t\t\t\t\t\t\tVALUES (?, ?, ?, ?)',\n\t\t\t\t\t\t\t\t\tarray($input_field['id'], $data_template_data_id, $template_this_item, $value));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* push out all \"custom data\" for this data source template */\n\t\t\t\tpush_out_data_source_custom_data($data_template_id);\n\t\t\t\tpush_out_host(0, 0, $data_template_id);\n\n\t\t\t\t/* push out field mappings for the data collector */\n\t\t\t\t/* its important to delete first due to the possibility that\n\t\t\t\t * the field names were changed */\n\t\t\t\tdb_execute_prepared('DELETE FROM poller_data_template_field_mappings\n\t\t\t\t\tWHERE data_template_id = ?',\n\t\t\t\t\tarray($data_template_id));\n\n\t\t\t\tdb_execute_prepared('REPLACE INTO poller_data_template_field_mappings\n\t\t\t\t\tSELECT dtr.data_template_id,\n\t\t\t\t\tdif.data_name,\n\t\t\t\t\tGROUP_CONCAT(dtr.data_source_name ORDER BY dtr.data_source_name) AS data_source_names,\n\t\t\t\t\tNOW() AS last_updated\n\t\t\t\t\tFROM data_template_rrd AS dtr\n\t\t\t\t\tINNER JOIN data_input_fields AS dif\n\t\t\t\t\tON dtr.data_input_field_id = dif.id\n\t\t\t\t\tWHERE dtr.local_data_id = 0\n\t\t\t\t\tAND dtr.data_template_id = ?\n\t\t\t\t\tGROUP BY dtr.data_template_id, dif.data_name',\n\t\t\t\t\tarray($data_template_id));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_templates.php?header=false&action=template_edit&id=' . (empty($data_template_id) ? get_request_var('data_template_id') : $data_template_id) . (isempty_request_var('current_rrd') ? '' : '&view_rrd=' . (get_nfilter_request_var('current_rrd') ? get_nfilter_request_var('current_rrd') : $data_template_rrd_id)));\n\t}\n}\n\n/* ------------------------\n    The \"actions\" function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $ds_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\tdb_execute('DELETE FROM data_template_data WHERE ' . array_to_sql_or($selected_items, 'data_template_id') . ' AND local_data_id=0');\n\t\t\t\tdb_execute('DELETE FROM data_template_rrd WHERE ' . array_to_sql_or($selected_items, 'data_template_id') . ' AND local_data_id=0');\n\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_rrd WHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_rrd_sv WHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\t\t\t\tdb_execute('DELETE FROM data_template WHERE ' . array_to_sql_or($selected_items, 'id'));\n\n\t\t\t\t/* \"undo\" any graph that is currently using this template */\n\t\t\t\tdb_execute('UPDATE data_template_data set local_data_template_data_id=0,data_template_id=0 WHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\t\t\t\tdb_execute('UPDATE data_template_rrd set local_data_template_rrd_id=0,data_template_id=0 WHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\t\t\t\tdb_execute('UPDATE data_local set data_template_id=0 WHERE ' . array_to_sql_or($selected_items, 'data_template_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_duplicate_data_source(0, $selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // change data source profile\n\t\t\t\t$step = db_fetch_cell_prepared('SELECT step\n\t\t\t\t\tFROM data_source_profiles\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray(get_filter_request_var('data_source_profile_id')));\n\n\t\t\t\tif (!empty($step)) {\n\t\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t\tdb_execute_prepared('UPDATE data_template_data\n\t\t\t\t\t\t\tSET data_source_profile_id = ?,\n\t\t\t\t\t\t\trrd_step = ?\n\t\t\t\t\t\t\tWHERE data_template_id = ?',\n\t\t\t\t\t\t\tarray(get_filter_request_var('data_source_profile_id'), $step, $selected_items[$i]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: data_templates.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$ds_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$ds_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM data_template WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$ds_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('data_templates.php');\n\n\thtml_start_box($ds_actions{get_request_var('drp_action')}, '60%', '', '3', 'center', '');\n\n\tif (isset($ds_array) && cacti_sizeof($ds_array)) {\n\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Data Template(s).  Any data sources attached to these templates will become individual Data Source(s) and all Templating benefits will be removed.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete Data Template(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to duplicate the following Data Template(s). You can optionally change the title format for the new Data Template(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\n\t\t\t\t\t<p>\" . __('Title Format:') . '<br>'; form_text_box('title_format', '<' . __('template_title') . '> (1)', '', '255', '30', 'text'); print \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Duplicate Data Template(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '3') { // change profile\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to change the default Data Source Profile for the following Data Template(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$ds_list</ul></div>\n\t\t\t\t\t<p>\" . __('New Data Source Profile') . '<br>';\n\n\t\t\t\t\t$available_profiles = db_fetch_assoc('SELECT id, name FROM data_source_profiles ORDER BY name');\n\t\t\t\t\tform_dropdown('data_source_profile_id',$available_profiles, 'name', 'id', '', '', '');\n\n\t\t\tprint \"</p>\n\t\t\t\t<p>\" . __('NOTE: This change only will affect future Data Sources and does not alter existing Data Sources.') . \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Change Data Source Profile') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: data_templates.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($ds_array) ? serialize($ds_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* ----------------------------\n    template - Data Templates\n   ---------------------------- */\n\nfunction template_rrd_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('data_template_id');\n\t/* ==================================================== */\n\n\t$children = db_fetch_assoc_prepared('SELECT id\n\t\tFROM data_template_rrd\n\t\tWHERE local_data_template_rrd_id = ?\n\t\tOR id = ?',\n\t\tarray(get_request_var('id'), get_request_var('id')));\n\n\tif (cacti_sizeof($children)) {\n\t\tforeach ($children as $item) {\n\t\t\tdb_execute_prepared('DELETE FROM data_template_rrd WHERE id = ?', array($item['id']));\n\t\t\tdb_execute_prepared('DELETE FROM snmp_query_graph_rrd WHERE data_template_rrd_id = ?', array($item['id']));\n\t\t\tdb_execute_prepared('UPDATE graph_templates_item SET task_item_id = 0 WHERE task_item_id = ?', array($item['id']));\n\t\t}\n\t}\n\n\theader('Location: data_templates.php?action=template_edit&id=' . get_request_var('data_template_id'));\n}\n\nfunction template_rrd_add() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('local_data_id');\n\t/* ==================================================== */\n\n\t$hash = get_hash_data_template(0, 'data_template_item');\n\n\t/* check for duplicated data source name */\n\t$i = 0;\n\t$dsname = 'ds';\n\twhile (true) {\n\t\t$exists = db_fetch_cell_prepared('SELECT data_source_name\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE data_source_name = ?\n\t\t\tAND data_template_id = ?',\n\t\t\tarray($dsname, get_request_var('id')));\n\n\t\tif (empty($exists)) {\n\t\t\tbreak;\n\t\t} else {\n\t\t\t$i++;\n\t\t\t$dsname = 'ds (' . $i . ')';\n\n\t\t\tif ($i > 100) break;\n\t\t}\n\t}\n\n\tdb_execute_prepared('INSERT IGNORE INTO data_template_rrd\n\t\t(hash, data_template_id, rrd_maximum, rrd_minimum, rrd_heartbeat, data_source_type_id, data_source_name)\n\t    VALUES (?, ?, 0, 0, 600, 1, ?)', array($hash, get_request_var('id'), $dsname));\n\n\t$data_template_rrd_id = db_fetch_insert_id();\n\n\t/* add this data template item to each data source using this data template */\n\t$children = db_fetch_assoc_prepared('SELECT local_data_id\n\t\tFROM data_template_data\n\t\tWHERE data_template_id = ?\n\t\tAND local_data_id > 0',\n\t\tarray(get_request_var('id')));\n\n\tif (cacti_sizeof($children)) {\n\t\tforeach ($children as $item) {\n\t\t\tdb_execute_prepared('INSERT IGNORE INTO data_template_rrd\n\t\t\t\t(local_data_template_rrd_id, local_data_id, data_template_id, rrd_maximum, rrd_minimum, rrd_heartbeat, data_source_type_id, data_source_name)\n\t\t\t\tVALUES (?, ?, ?, 0, 0, 600, 1, ?)',\n\t\t\t\tarray($data_template_rrd_id, $item['local_data_id'], get_request_var('id'), $dsname));\n\t\t}\n\t}\n\n\theader('Location: data_templates.php?action=template_edit&id=' . get_request_var('id') . \"&view_rrd=$data_template_rrd_id\");\n}\n\nfunction template_edit() {\n\tglobal $struct_data_source, $struct_data_source_item, $data_source_types, $fields_data_template_template_edit, $fields_host_edit, $hash_system_data_inputs;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('view_rrd');\n\t/* ==================================================== */\n\n\t$isSNMPget = false;\n\n\tif (!isempty_request_var('id')) {\n\t\t$template_data = db_fetch_row_prepared('SELECT dtd.*,\n\t\t\tSUM(CASE WHEN dl.data_template_id = ? THEN 1 ELSE 0 END) AS data_sources\n\t\t\tFROM data_template_data AS dtd\n\t\t\tLEFT JOIN data_local AS dl\n\t\t\tON dl.id=dtd.local_data_id\n\t\t\tWHERE dtd.data_template_id = ?\n\t\t\tHAVING dtd.local_data_id=0',\n\t\t\tarray(get_request_var('id'), get_request_var('id')));\n\n\t\t$template = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_template\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (cacti_sizeof($template_data)) {\n\t\t\t$snmp_data = db_fetch_row_prepared('SELECT *\n\t\t\t\tFROM data_input\n\t\t\t\tWHERE hash=\"3eb92bb845b9660a7445cf9740726522\"\n\t\t\t\tAND id = ?',\n\t\t\t\tarray($template_data['data_input_id']));\n\n\t\t\tif (cacti_sizeof($snmp_data)) {\n\t\t\t\t$isSNMPget = true;\n\t\t\t}\n\t\t}\n\n\t\t$header_label = __('Data Templates [edit: %s]', html_escape($template['name']));\n\n\t\t?>\n\t\t<table style='width:100%'>\n\t\t\t<tr>\n\t\t\t\t<td class='textInfo left' style='vertical-align:top;'>\n\t\t\t\t\t<?php print html_escape($template['name']);?>\n\t\t\t\t</td>\n\t\t\t\t<td class='textInfo right' style='vertical-align:top;'>\n\t\t\t\t\t<?php\n\t\t\t\t\t\t$data_input_id = 0;\n\t\t\t\t\t\tif (!empty($template_data['data_input_id'])) {\n\t\t\t\t\t\t\t$data_input_id = get_nonsystem_data_input($template_data['data_input_id']);\n\t\t\t\t\t\t\tif (!isset($data_input_id) || $data_input_id == NULL) {\n\t\t\t\t\t\t\t\t$data_input_id = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($data_input_id > 0) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print htmlspecialchars('data_input.php?action=edit&id=' . $data_input_id);?>'><?php print __('Edit Data Input Method.');?></a><br><?php\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<br>\n\t\t<?php\n\t} else {\n\t\t$header_label = __('Data Templates [new]');\n\t}\n\n\tform_start('data_templates.php', 'data_templates');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(array(\n\t\t'config' => array('no_form_tag' => 'true'),\n\t\t'fields' => inject_form_variables($fields_data_template_template_edit, (isset($template) ? $template : array()), (isset($template_data) ? $template_data : array()), $_REQUEST)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\thtml_start_box(__('Data Source'), '100%', true, '3', 'center', '');\n\n\t/* make sure 'data source path' doesn't show up for a template... we should NEVER template this field */\n\tunset($struct_data_source['data_source_path']);\n\n\t$form_array = array();\n\n\tforeach ($struct_data_source as $field_name => $field_array) {\n\t\t$form_array += array($field_name => $struct_data_source[$field_name]);\n\n\t\tif ($form_array[$field_name]['method'] != 'spacer') {\n\t\t\t$form_array[$field_name]['value'] = (isset($template_data[$field_name]) ? $template_data[$field_name] : '');\n\t\t}\n\n\t\t$form_array[$field_name]['form_id'] = (isset($template_data) ? $template_data['data_template_id'] : '0');\n\n\t\tif ($field_array['flags'] == 'ALWAYSTEMPLATE') {\n\t\t\t$form_array[$field_name]['description'] .= '<br><em>' . __('This field is always templated.') . '</em>';\n\t\t} else {\n\t\t\t$form_array[$field_name]['sub_checkbox'] = array(\n\t\t\t\t'name' => 't_' . $field_name,\n\t\t\t\t'friendly_name' => __esc('Check this checkbox if you wish to allow the user to override the value on the right during Data Source creation.'),\n\t\t\t\t'value' => (isset($template_data['t_' . $field_name]) ? $template_data['t_' . $field_name] : '')\n\t\t\t);\n\t\t}\n\t}\n\n\t$form_array['data_source_profile_id']['sql'] = 'SELECT id, name FROM data_source_profiles ORDER BY name';\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($form_array, (isset($template_data) ? $template_data : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t/* fetch ALL rrd's for this data source */\n\tif (!isempty_request_var('id')) {\n\t\t$template_data_rrds = db_fetch_assoc_prepared('SELECT id, data_source_name\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE data_template_id = ?\n\t\t\tAND local_data_id = 0\n\t\t\tORDER BY data_source_name',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\t/* select the first \"rrd\" of this data source by default */\n\tif (isempty_request_var('view_rrd')) {\n\t\tset_request_var('view_rrd', (isset($template_data_rrds[0]['id']) ? $template_data_rrds[0]['id'] : '0'));\n\t}\n\n\t/* get more information about the rrd we chose */\n\tif (!isempty_request_var('view_rrd')) {\n\t\t$template_rrd = db_fetch_row_prepared('SELECT *\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('view_rrd')));\n\t}\n\n\t$i = 0;\n\tif (isset($template_data_rrds)) {\n\t\tif (cacti_sizeof($template_data_rrds) > 1) {\n\t\t\t/* draw the data source tabs on the top of the page */\n\t\t\tprint \"<div class='tabs' style='float:left;'><nav><ul role='tablist'>\\n\";\n\n\t\t\tforeach ($template_data_rrds as $template_data_rrd) {\n\t\t\t\tprint \"<li class='subTab'><a \" . (($template_data_rrd['id'] == get_request_var('view_rrd')) ? \"class='pic selected'\" : \"class='pic'\") . \" href='\" . html_escape('data_templates.php?action=template_edit&id=' . get_request_var('id') . '&view_rrd=' . $template_data_rrd['id']) . \"'>\" . ($i+1) . \": \" . html_escape($template_data_rrd['data_source_name']) . \"</a>\" . ($template_data['data_sources'] == 0 ? \"<a class='pic deleteMarker fa fa-times' title='\" . __esc('Delete') . \"' href='\" . html_escape('data_templates.php?action=rrd_remove&id=' . $template_data_rrd['id'] . '&data_template_id=' . get_request_var('id')) . \"'></a>\":\"<a class='deleteMarkerDisabled fa fa-times' href='#' title='\" . __esc('Data Templates in use can not be modified') . \"'></a>\") . \"</li>\\n\";\n\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tprint \"\n\t\t\t</ul></nav>\\n\n\t\t\t</div>\\n\";\n\t\t} elseif (cacti_sizeof($template_data_rrds) == 1) {\n\t\t\tset_request_var('view_rrd', $template_data_rrds[0]['id']);\n\t\t}\n\t}\n\n\tif (!$isSNMPget) {\n\t\thtml_start_box(__('Data Source Item [%s]', (isset($template_rrd) ? html_escape($template_rrd['data_source_name']) : '')), '100%', true, '0', 'center', (!isempty_request_var('id') ? 'data_templates.php?action=rrd_add&id=' . get_request_var('id'):''), __('New'));\n\t} else {\n\t\thtml_start_box(__('Data Source Item [%s]', (isset($template_rrd) ? html_escape($template_rrd['data_source_name']) : '')), '100%', true, '0', 'center', '', '');\n\t}\n\n\t/* data input fields list */\n\tif (empty($template_data['data_input_id'])) {\n\t\tunset($struct_data_source_item['data_input_field_id']);\n\t} else {\n\t\t$input_type = db_fetch_cell_prepared('SELECT type_id\n\t\t\tFROM data_input\n\t\t\tWHERE id = ?',\n\t\t\tarray($template_data['data_input_id']));\n\n\t\tif ($input_type != 1 && $input_type != 5) {\n\t\t\tunset($struct_data_source_item['data_input_field_id']);\n\t\t} else {\n\t\t\t$struct_data_source_item['data_input_field_id']['sql'] = \"SELECT id, CONCAT(data_name, ' - ', name) AS name FROM data_input_fields WHERE data_input_id=\" . $template_data['data_input_id'] . \" AND input_output='out' AND update_rra='on' ORDER BY data_name, name\";\n\t\t}\n\t}\n\n\t$form_array = array();\n\n\tforeach ($struct_data_source_item as $field_name => $field_array) {\n\t\t$form_array += array($field_name => $struct_data_source_item[$field_name]);\n\n\t\t$form_array[$field_name]['value'] = (isset($template_rrd) ? $template_rrd[$field_name] : '');\n\t\t$form_array[$field_name]['sub_checkbox'] = array(\n\t\t\t'name' => 't_' . $field_name,\n\t\t\t'friendly_name' => __esc('Check this checkbox if you wish to allow the user to override the value on the right during Data Source creation.'),\n\t\t\t'value' => (isset($template_rrd) ? $template_rrd['t_' . $field_name] : '')\n\t\t);\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array + array(\n\t\t\t\t'data_template_rrd_id' => array(\n\t\t\t\t\t'method' => 'hidden',\n\t\t\t\t\t'value' => (isset($template_rrd) ? $template_rrd['id'] : '0')\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t$i = 0;\n\tif (!isempty_request_var('id')) {\n\t\t/* get each INPUT field for this data input source */\n\t\t$fields = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output=\"in\" ORDER BY name',\n\t\t\tarray($template_data['data_input_id']));\n\n\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM data_input\n\t\t\tWHERE id = ?',\n\t\t\tarray($template_data['data_input_id']));\n\n\t\thtml_start_box(__('Custom Data [data input: %s]', html_escape($name)), '100%', true, '3', 'center', '');\n\n\t\t/* loop through each field found */\n\t\tif (cacti_sizeof($fields) > 0) {\n\t\t\t$class = 'odd';\n\n\t\t\tforeach ($fields as $field) {\n\t\t\t\t$data_input_data = db_fetch_row_prepared('SELECT t_value, value\n\t\t\t\t\tFROM data_input_data\n\t\t\t\t\tWHERE data_template_data_id = ?\n\t\t\t\t\tAND data_input_field_id = ?',\n\t\t\t\t\tarray($template_data['id'], $field['id']));\n\n\t\t\t\tif (cacti_sizeof($data_input_data)) {\n\t\t\t\t\t$old_value  = $data_input_data['value'];\n\t\t\t\t\t$old_tvalue = $data_input_data['t_value'];\n\t\t\t\t} else {\n\t\t\t\t\t$old_value  = '';\n\t\t\t\t\t$old_tvalue = '';\n\t\t\t\t}\n\n\t\t\t\tif ($field['data_name'] == 'management_ip') {\n\t\t\t\t\t$help = $fields_host_edit['hostname']['description'];\n\t\t\t\t} elseif (isset($fields_host_edit[$field['data_name']])) {\n\t\t\t\t\t$help = $fields_host_edit[$field['data_name']]['description'];\n\t\t\t\t} else {\n\t\t\t\t\t$help = $field['name'];\n\t\t\t\t}\n\n\t\t\t\tprint \"<div class='formRow $class'>\";\n\n\t\t\t\tif ($class == 'odd') {\n\t\t\t\t\t$class = 'even';\n\t\t\t\t} else {\n\t\t\t\t\t$class = 'odd';\n\t\t\t\t}\n\n\t\t\t\tif (preg_match('/^' . VALID_HOST_FIELDS . '$/i', $field['type_code']) && $old_tvalue  == '') {\n\t\t\t\t\t$title = __esc('Value will be derived from the device if this field is left empty.');\n\t\t\t\t} else {\n\t\t\t\t\t$title = '';\n\t\t\t\t}\n\n\t\t\t\t?>\n\t\t\t\t<div class='formColumnLeft'>\n\t\t\t\t\t<div class='formFieldName'><?php form_checkbox('t_value_' . $field['data_name'], $old_tvalue, '', '', '', get_request_var('id'), '', __esc('Check this checkbox if you wish to allow the user to override the value on the right during Data Source creation.'));?><?php print html_escape($field['name']);?><div class='formTooltip'><?php print display_tooltip($help);?></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class='formColumnRight'>\n\t\t\t\t\t<?php form_text_box('value_' . $field['data_name'], $old_value, '', '', 30, 'text', 0, '', $title);?>\n\t\t\t\t</div>\n\t\t\t\t<?php\n\t\t\t\tprint \"</div>\";\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<div style=\"width:100%;float:left;\"><em>' . __('No Input Fields for the Selected Data Input Source') . '</em></div>';\n\t\t}\n\n\t\thtml_end_box(true, true);\n\t}\n\n\tform_save_button('data_templates.php', 'return');\n}\n\nfunction template() {\n\tglobal $ds_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'profile' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'has_data' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_dt');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('Data Templates'), '100%', '', '3', 'center', 'data_templates.php?action=template_edit');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_data_template' action='data_templates.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' name='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Profile');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='profile' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('profile') == '-1' ? ' selected>':'>') . __('All');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$profiles = array_rekey(db_fetch_assoc('SELECT id, name FROM data_source_profiles ORDER BY name'), 'id', 'name');\n\t\t\t\t\t\t\tif (cacti_sizeof($profiles)) {\n\t\t\t\t\t\t\t\tforeach ($profiles as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('profile') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Data Templates');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='has_data' <?php print (get_request_var('has_data') == 'true' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='has_data'><?php print __('Has Data Sources');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t</td>\n\t\t<script type='text/javascript'>\n\t\tfunction applyFilter() {\n\t\t\tstrURL  = 'data_templates.php?header=false';\n\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\tstrURL += '&profile='+$('#profile').val();\n\t\t\tstrURL += '&has_data='+$('#has_data').is(':checked');\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\tfunction clearFilter() {\n\t\t\tstrURL = 'data_templates.php?clear=1&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#has_data').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#refresh').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#clear').click(function() {\n\t\t\t\tclearFilter();\n\t\t\t});\n\n\t\t\t$('#form_data_template').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\t\t});\n\t\t</script>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\t$rows_where = '';\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \" WHERE (dt.name like '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('profile') != '-1') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' dsp.id=' . get_request_var('profile');\n\t}\n\n\tif (get_request_var('has_data') == 'true') {\n\t\t$sql_having = 'HAVING data_sources>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(`rows`)\n\t\tFROM (SELECT\n\t\t\tCOUNT(dt.id) `rows`,\n\t\t\tSUM(CASE WHEN dtd.local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\t\tFROM data_template AS dt\n\t\t\tINNER JOIN data_template_data AS dtd\n\t\t\tON dt.id=dtd.data_template_id\n\t\t\tLEFT JOIN data_source_profiles AS dsp\n\t\t\tON dtd.data_source_profile_id=dsp.id\n\t\t\tLEFT JOIN data_input AS di\n\t\t\tON dtd.data_input_id=di.id\n\t\t\t$sql_where\n\t\t\tGROUP BY dt.id\n\t\t\t$sql_having\n\t\t) AS rs\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$template_list = db_fetch_assoc(\"SELECT dt.id, dt.name,\n\t\tdi.name AS data_input_method, dtd.active AS active, dsp.name AS profile_name,\n\t\tSUM(CASE WHEN dtd.local_data_id>0 THEN 1 ELSE 0 END) AS data_sources\n\t\tFROM data_template AS dt\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dt.id=dtd.data_template_id\n\t\tLEFT JOIN data_source_profiles AS dsp\n\t\tON dtd.data_source_profile_id=dsp.id\n\t\tLEFT JOIN data_input AS di\n\t\tON dtd.data_input_id=di.id\n\t\t$sql_where\n\t\tGROUP BY dt.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('data_templates.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Data Templates'), 'page', 'main');\n\n\tform_start('data_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'              => array('display' => __('Data Template Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this Data Template.')),\n\t\t'id'                => array('display' => __('ID'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The internal database ID for this Data Template.  Useful when performing automation or debugging.')),\n\t\t'nosort'            => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('Data Templates that are in use cannot be Deleted.  In use is defined as being referenced by a Data Source.')),\n\t\t'data_sources'      => array('display' => __('Data Sources Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Data Sources using this Data Template.')),\n\t\t'data_input_method' => array('display' => __('Input Method'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The method that is used to place Data into the Data Source RRDfile.')),\n\t\t'profile_name' => array('display' => __('Profile Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The default Data Source Profile for this Data Template.')),\n\t\t'active'            => array('display' => __('Status'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('Data Sources based on Inactive Data Templates will not be updated when the poller runs.'))\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['data_sources'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $template['id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'data_templates.php?action=template_edit&id=' . $template['id']), $template['id']);\n\t\t\tform_selectable_cell($template['id'], $template['id'], '', 'right');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $template['id'], '', 'right');\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"' . html_escape('data_sources.php?reset=true&template_id=' . $template['id']) . '\">' . number_format_i18n($template['data_sources']) . '</a>', $template['id'], '', 'right');\n\t\t\tform_selectable_cell((empty($template['data_input_method']) ? '<em>' . __('None') .'</em>': html_escape($template['data_input_method'])), $template['id']);\n\t\t\tform_selectable_cell((empty($template['profile_name']) ? __('External'):html_escape($template['profile_name'])), $template['id']);\n\t\t\tform_selectable_cell((($template['active'] == 'on') ? __('Active'):__('Disabled')), $template['id']);\n\t\t\tform_checkbox_cell($template['name'], $template['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='6'><em>\" . __('No Data Templates Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($ds_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n$gprint_actions = array(\n\t1 => __('Delete')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tgprint_presets_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tgprint_presets();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tif (isset_request_var('save_component_gprint_presets')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save['id']          = get_request_var('id');\n\t\t$save['hash']        = get_hash_gprint(get_request_var('id'));\n\t\t$save['name']        = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['gprint_text'] = form_input_validate(get_nfilter_request_var('gprint_text'), 'gprint_text', '', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$gprint_preset_id = sql_save($save, 'graph_templates_gprint');\n\n\t\t\tif ($gprint_preset_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: gprint_presets.php?header=false&action=edit&id=' . (empty($gprint_preset_id) ? get_nfilter_request_var('id') : $gprint_preset_id));\n\t\t\texit;\n\t\t} else {\n\t\t\theader('Location: gprint_presets.php?header=false');\n\n\t\t\texit;\n\t\t}\n\t}\n}\n\n/* -----------------------------------\n    gprint_presets - GPRINT Presets\n   ----------------------------------- */\n\nfunction form_actions() {\n\tglobal $gprint_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM graph_templates_gprint WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: gprint_presets.php?header=false');\n\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$gprint_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$gprint_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM graph_templates_gprint WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$gprint_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('gprint_presets.php');\n\n\thtml_start_box($gprint_actions{get_request_var('drp_action')}, '60%', '', '3', 'center', '');\n\n\tif (isset($gprint_array) && cacti_sizeof($gprint_array)) {\n\t\tif (get_request_var('drp_action') == '1') { /* delete */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the folling GPRINT Preset(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$gprint_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') .\"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete GPRINT Preset(s)') .\"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: gprint_presets.php?header=false');\n        exit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($gprint_array) ? serialize($gprint_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\nfunction gprint_presets_edit() {\n\tglobal $fields_grprint_presets_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$gprint_preset = db_fetch_row_prepared('SELECT * FROM graph_templates_gprint WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('GPRINT Presets [edit: %s]', html_escape($gprint_preset['name']));\n\t} else {\n\t\t$header_label = __('GPRINT Presets [new]');\n\t}\n\n\tform_start('gprint_presets.php', 'gprint_presets');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_grprint_presets_edit, (isset($gprint_preset) ? $gprint_preset : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_save_button('gprint_presets.php');\n}\n\nfunction gprint_presets() {\n\tglobal $gprint_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_gp');\n\t/* ================= input validation and session storage ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('GPRINT Presets'), '100%', '', '3', 'center', 'gprint_presets.php?action=edit');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_gprint' action='gprint_presets.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' name='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('GPRINTs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type=\"checkbox\" id='has_graphs' <?php print (get_request_var('has_graphs') == 'true' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='has_graphs'><?php print __('Has Graphs');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type='text/javascript'>\n\n\t\t\tfunction applyFilter() {\n\t\t\t\tstrURL  = 'gprint_presets.php?header=false';\n\t\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\t\tstrURL += '&has_graphs='+$('#has_graphs').is(':checked');\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = 'gprint_presets.php?clear=1&header=false';\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\t$('#refresh').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#has_graphs').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#form_gprint').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_having = 'HAVING graphs>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(`rows`)\n\t\tFROM (\n\t\t\tSELECT gp.id AS `rows`,\n\t\t\tSUM(CASE WHEN local_graph_id>0 THEN 1 ELSE 0 END) AS graphs\n\t\t\tFROM graph_templates_gprint AS gp\n\t\t\tLEFT JOIN graph_templates_item AS gti\n\t\t\tON gti.gprint_id=gp.id\n\t\t\t$sql_where\n\t\t\tGROUP BY gp.id\n\t\t\t$sql_having\n\t\t) AS rs\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$gprint_list = db_fetch_assoc(\"SELECT rs.*,\n\t\tSUM(CASE WHEN local_graph_id=0 THEN 1 ELSE 0 END) AS templates,\n\t\tSUM(CASE WHEN local_graph_id>0 THEN 1 ELSE 0 END) AS graphs\n\t\tFROM (\n\t\t\tSELECT gp.*, gti.local_graph_id\n\t\t\tFROM graph_templates_gprint AS gp\n\t\t\tLEFT JOIN graph_templates_item AS gti\n\t\t\tON gti.gprint_id=gp.id\n\t\t\tGROUP BY gp.id, gti.graph_template_id, gti.local_graph_id\n\t\t) AS rs\n\t\t$sql_where\n\t\tGROUP BY rs.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('gprint_presets.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 6, __('GPRINTs'), 'page', 'main');\n\n\tform_start('gprint_presets.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'      => array('display' => __('GPRINT Preset Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this GPRINT Preset.')),\n\t\t'gprint_text'      => array('display' => __('Format'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The GPRINT format string.')),\n\t\t'nosort'    => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('GPRINTs that are in use cannot be Deleted.  In use is defined as being referenced by either a Graph or a Graph Template.')),\n\t\t'graphs'    => array('display' => __('Graphs Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Graphs using this GPRINT.')),\n\t\t'templates' => array('display' => __('Templates Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Graphs Templates using this GPRINT.'))\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($gprint_list)) {\n\t\tforeach ($gprint_list as $gp) {\n\t\t\tif ($gp['graphs'] == 0 && $gp['templates'] == 0) {\n\t\t\t\t$disabled = false;\n\t\t\t} else {\n\t\t\t\t$disabled = true;\n\t\t\t}\n\n            form_alternate_row('line' . $gp['id'], false, $disabled);\n\t\t\tform_selectable_cell(filter_value($gp['name'], get_request_var('filter'), 'gprint_presets.php?action=edit&id=' . $gp['id']), $gp['id']);\n            form_selectable_cell($gp['gprint_text'], $gp['id'], '', 'right');\n            form_selectable_cell($disabled ? __('No'):__('Yes'), $gp['id'], '', 'right');\n            form_selectable_cell(number_format_i18n($gp['graphs'], '-1'), $gp['id'], '', 'right');\n            form_selectable_cell(number_format_i18n($gp['templates'], '-1'), $gp['id'], '', 'right');\n            form_checkbox_cell($gp['name'], $gp['id'], $disabled);\n            form_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='6'><em>\" . __('No GPRINT Presets') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($gprint_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($gprint_actions);\n\n\tform_end();\n}\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n$graph_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate'),\n\t3 => __('Resize'),\n\t4 => __('Sync Graphs')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'template_remove':\n\t\ttemplate_remove();\n\n\t\theader('Location: graph_templates.php?header=false');\n\t\tbreak;\n\tcase 'input_remove':\n\t\tget_filter_request_var('graph_template_id');\n\n\t\tinput_remove();\n\n\t\theader('Location: graph_templates.php?header=false&action=template_edit&id=' . get_request_var('graph_template_id'));\n\t\tbreak;\n\tcase 'input_edit':\n\t\ttop_header();\n\n\t\tinput_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'template_edit':\n\t\ttop_header();\n\n\t\ttemplate_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\ttemplate();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\t// sanitize ids\n\tif (isset_request_var('graph_template_id') && !is_numeric(get_nfilter_request_var('graph_template_id'))) {\n\t\t$graph_template_id = 0;\n\t} else {\n\t\t$graph_template_id = get_filter_request_var('graph_template_id');\n\t}\n\n\tif (isset_request_var('save_component_template')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('graph_template_graph_id');\n\t\t/* ==================================================== */\n\n\t\t$save1['id']       = $graph_template_id;\n\t\t$save1['hash']     = get_hash_graph_template($graph_template_id);\n\t\t$save1['name']     = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save1['multiple'] = isset_request_var('multiple') ? 'on':'';\n\n\t\t$save2['id']                     = get_nfilter_request_var('graph_template_graph_id');\n\t\t$save2['local_graph_template_graph_id'] = 0;\n\t\t$save2['local_graph_id']         = 0;\n\t\t$save2['t_image_format_id']      = (isset_request_var('t_image_format_id') ? get_nfilter_request_var('t_image_format_id') : '');\n\t\t$save2['image_format_id']        = form_input_validate(get_nfilter_request_var('image_format_id'), 'image_format_id', '^[0-9]+$', true, 3);\n\t\t$save2['t_title']                = form_input_validate((isset_request_var('t_title') ? get_nfilter_request_var('t_title') : ''), 't_title', '', true, 3);\n\t\t$save2['title']                  = form_input_validate(get_nfilter_request_var('title'), 'title', '', (isset_request_var('t_title') ? true : false), 3);\n\t\t$save2['t_height']               = form_input_validate((isset_request_var('t_height') ? get_nfilter_request_var('t_height') : ''), 't_height', '', true, 3);\n\t\t$save2['height']                 = form_input_validate(get_nfilter_request_var('height'), 'height', '^[0-9]+$', (isset_request_var('t_height') ? true : false), 3);\n\t\t$save2['t_width']                = form_input_validate((isset_request_var('t_width') ? get_nfilter_request_var('t_width') : ''), 't_width', '', true, 3);\n\t\t$save2['width']                  = form_input_validate(get_nfilter_request_var('width'), 'width', '^[0-9]+$', (isset_request_var('t_width') ? true : false), 3);\n\t\t$save2['t_upper_limit']          = form_input_validate((isset_request_var('t_upper_limit') ? get_nfilter_request_var('t_upper_limit') : ''), 't_upper_limit', '', true, 3);\n\t\t$save2['upper_limit']            = form_input_validate(get_nfilter_request_var('upper_limit'), 'upper_limit', '^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$', ((isset_request_var('t_upper_limit') || (strlen(get_nfilter_request_var('upper_limit')) === 0)) ? true : false), 3);\n\t\t$save2['t_lower_limit']          = form_input_validate((isset_request_var('t_lower_limit') ? get_nfilter_request_var('t_lower_limit') : ''), 't_lower_limit', '', true, 3);\n\t\t$save2['lower_limit']            = form_input_validate(get_nfilter_request_var('lower_limit'), 'lower_limit', '^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$', ((isset_request_var('t_lower_limit') || (strlen(get_nfilter_request_var('lower_limit')) === 0)) ? true : false), 3);\n\t\t$save2['t_vertical_label']       = form_input_validate((isset_request_var('t_vertical_label') ? get_nfilter_request_var('t_vertical_label') : ''), 't_vertical_label', '', true, 3);\n\t\t$save2['vertical_label']         = form_input_validate(get_nfilter_request_var('vertical_label'), 'vertical_label', '', true, 3);\n\t\t$save2['t_slope_mode']           = form_input_validate((isset_request_var('t_slope_mode') ? get_nfilter_request_var('t_slope_mode') : ''), 't_slope_mode', '', true, 3);\n\t\t$save2['slope_mode']             = form_input_validate((isset_request_var('slope_mode') ? get_nfilter_request_var('slope_mode') : ''), 'slope_mode', '', true, 3);\n\t\t$save2['t_auto_scale']           = form_input_validate((isset_request_var('t_auto_scale') ? get_nfilter_request_var('t_auto_scale') : ''), 't_auto_scale', '', true, 3);\n\t\t$save2['auto_scale']             = form_input_validate((isset_request_var('auto_scale') ? get_nfilter_request_var('auto_scale') : ''), 'auto_scale', '', true, 3);\n\t\t$save2['t_auto_scale_opts']      = form_input_validate((isset_request_var('t_auto_scale_opts') ? get_nfilter_request_var('t_auto_scale_opts') : ''), 't_auto_scale_opts', '', true, 3);\n\t\t$save2['auto_scale_opts']        = form_input_validate(get_nfilter_request_var('auto_scale_opts'), 'auto_scale_opts', '', true, 3);\n\t\t$save2['t_auto_scale_log']       = form_input_validate((isset_request_var('t_auto_scale_log') ? get_nfilter_request_var('t_auto_scale_log') : ''), 't_auto_scale_log', '', true, 3);\n\t\t$save2['auto_scale_log']         = form_input_validate((isset_request_var('auto_scale_log') ? get_nfilter_request_var('auto_scale_log') : ''), 'auto_scale_log', '', true, 3);\n\t\t$save2['t_scale_log_units']      = form_input_validate((isset_request_var('t_scale_log_units') ? get_nfilter_request_var('t_scale_log_units') : ''), 't_scale_log_units', '', true, 3);\n\t\t$save2['scale_log_units']        = form_input_validate((isset_request_var('scale_log_units') ? get_nfilter_request_var('scale_log_units') : ''), 'scale_log_units', '', true, 3);\n\t\t$save2['t_auto_scale_rigid']     = form_input_validate((isset_request_var('t_auto_scale_rigid') ? get_nfilter_request_var('t_auto_scale_rigid') : ''), 't_auto_scale_rigid', '', true, 3);\n\t\t$save2['auto_scale_rigid']       = form_input_validate((isset_request_var('auto_scale_rigid') ? get_nfilter_request_var('auto_scale_rigid') : ''), 'auto_scale_rigid', '', true, 3);\n\t\t$save2['t_auto_padding']         = form_input_validate((isset_request_var('t_auto_padding') ? get_nfilter_request_var('t_auto_padding') : ''), 't_auto_padding', '', true, 3);\n\t\t$save2['auto_padding']           = form_input_validate((isset_request_var('auto_padding') ? get_nfilter_request_var('auto_padding') : ''), 'auto_padding', '', true, 3);\n\t\t$save2['t_base_value']           = form_input_validate((isset_request_var('t_base_value') ? get_nfilter_request_var('t_base_value') : ''), 't_base_value', '', true, 3);\n\t\t$save2['base_value']             = form_input_validate(get_nfilter_request_var('base_value'), 'base_value', '^[0-9]+$', (isset_request_var('t_base_value') ? true : false), 3);\n\t\t$save2['t_unit_value']           = form_input_validate((isset_request_var('t_unit_value') ? get_nfilter_request_var('t_unit_value') : ''), 't_unit_value', '', true, 3);\n\t\t$save2['unit_value']             = form_input_validate(get_nfilter_request_var('unit_value'), 'unit_value', '', true, 3);\n\t\t$save2['t_unit_exponent_value']  = form_input_validate((isset_request_var('t_unit_exponent_value') ? get_nfilter_request_var('t_unit_exponent_value') : ''), 't_unit_exponent_value', '', true, 3);\n\t\t$save2['unit_exponent_value']    = form_input_validate(get_nfilter_request_var('unit_exponent_value'), 'unit_exponent_value', '^-?[0-9]+$', true, 3);\n\t\t$save2['t_alt_y_grid']           = form_input_validate((isset_request_var('t_alt_y_grid') ? get_nfilter_request_var('t_alt_y_grid') : ''), 't_alt_y_grid', '', true, 3);\n\t\t$save2['alt_y_grid']             = form_input_validate((isset_request_var('alt_y_grid') ? get_nfilter_request_var('alt_y_grid') : ''), 'alt_y_grid', '', true, 3);\n\t\t$save2['t_right_axis']           = form_input_validate((isset_request_var('t_right_axis') ? get_nfilter_request_var('t_right_axis') : ''), 't_right_axis', '', true, 3);\n\t\t$save2['right_axis']             = form_input_validate((isset_request_var('right_axis') ? get_nfilter_request_var('right_axis') : ''), 'right_axis', '^[.0-9]+:-?[.0-9]+$', true, 3);\n\t\t$save2['t_right_axis_label']     = form_input_validate((isset_request_var('t_right_axis_label') ? get_nfilter_request_var('t_right_axis_label') : ''), 't_right_axis_label', '', true, 3);\n\t\t$save2['right_axis_label']       = form_input_validate((isset_request_var('right_axis_label') ? get_nfilter_request_var('right_axis_label') : ''), 'right_axis_label', '', true, 3);\n\t\t$save2['t_right_axis_format']    = form_input_validate((isset_request_var('t_right_axis_format') ? get_nfilter_request_var('t_right_axis_format') : ''), 't_right_axis_format', '', true, 3);\n\t\t$save2['right_axis_format']      = form_input_validate((isset_request_var('right_axis_format') ? get_nfilter_request_var('right_axis_format') : ''), 'right_axis_format', '^[0-9]+$', true, 3);\n\t\t$save2['t_no_gridfit']           = form_input_validate((isset_request_var('t_no_gridfit') ? get_nfilter_request_var('t_no_gridfit') : ''), 't_no_gridfit', '', true, 3);\n\t\t$save2['no_gridfit']             = form_input_validate((isset_request_var('no_gridfit') ? get_nfilter_request_var('no_gridfit') : ''), 'no_gridfit', '', true, 3);\n\t\t$save2['t_unit_length']          = form_input_validate((isset_request_var('t_unit_length') ? get_nfilter_request_var('t_unit_length') : ''), 't_unit_length', '', true, 3);\n\t\t$save2['unit_length']            = form_input_validate((isset_request_var('unit_length') ? get_nfilter_request_var('unit_length') : ''), 'unit_length', '^[0-9]+$', true, 3);\n\t\t$save2['t_tab_width']            = form_input_validate((isset_request_var('t_tab_width') ? get_nfilter_request_var('t_tab_width') : ''), 't_tab_width', '', true, 3);\n\t\t$save2['tab_width']              = form_input_validate((isset_request_var('tab_width') ? get_nfilter_request_var('tab_width') : ''), 'tab_width', '^[0-9]*$', true, 3);\n\t\t$save2['t_dynamic_labels']       = form_input_validate((isset_request_var('t_dynamic_labels') ? get_nfilter_request_var('t_dynamic_labels') : ''), 't_dynamic_labels', '', true, 3);\n\t\t$save2['dynamic_labels']         = form_input_validate((isset_request_var('dynamic_labels') ? get_nfilter_request_var('dynamic_labels') : ''), 'dynamic_labels', '', true, 3);\n\t\t$save2['t_force_rules_legend']   = form_input_validate((isset_request_var('t_force_rules_legend') ? get_nfilter_request_var('t_force_rules_legend') : ''), 't_force_rules_legend', '', true, 3);\n\t\t$save2['force_rules_legend']     = form_input_validate((isset_request_var('force_rules_legend') ? get_nfilter_request_var('force_rules_legend') : ''), 'force_rules_legend', '', true, 3);\n\t\t$save2['t_legend_position']      = form_input_validate((isset_request_var('t_legend_position') ? get_nfilter_request_var('t_legend_position') : ''), 't_legend_position', '', true, 3);\n\t\t$save2['legend_position']        = form_input_validate((isset_request_var('legend_position') ? get_nfilter_request_var('legend_position') : ''), 'legend_position', '', true, 3);\n\t\t$save2['t_legend_direction']     = form_input_validate((isset_request_var('t_legend_direction') ? get_nfilter_request_var('t_legend_direction') : ''), 't_legend_direction', '', true, 3);\n\t\t$save2['legend_direction']       = form_input_validate((isset_request_var('legend_direction') ? get_nfilter_request_var('legend_direction') : ''), 'legend_direction', '', true, 3);\n\t\t$save2['t_right_axis_formatter'] = form_input_validate((isset_request_var('t_right_axis_formatter') ? get_nfilter_request_var('t_right_axis_formatter') : ''), 't_right_axis_formatter', '', true, 3);\n\t\t$save2['right_axis_formatter']   = form_input_validate((isset_request_var('right_axis_formatter') ? get_nfilter_request_var('right_axis_formatter') : ''), 'right_axis_formatter', '', true, 3);\n\t\t$save2['t_left_axis_formatter']  = form_input_validate((isset_request_var('t_left_axis_formatter') ? get_nfilter_request_var('t_left_axis_formatter') : ''), 't_left_axis_formatter', '', true, 3);\n\t\t$save2['left_axis_formatter']    = form_input_validate((isset_request_var('left_axis_formatter') ? get_nfilter_request_var('left_axis_formatter') : ''), 'left_axis_formatter', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$graph_template_id = sql_save($save1, 'graph_templates');\n\n\t\t\tif ($graph_template_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$save2['graph_template_id'] = $graph_template_id;\n\t\t\t$graph_template_graph_id = sql_save($save2, 'graph_templates_graph');\n\n\t\t\tif ($graph_template_graph_id) {\n\t\t\t\traise_message(1);\n\n\t\t\t\tpush_out_graph($graph_template_graph_id);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($graph_template_id)) {\n\t\t\tresequence_graphs($graph_template_id);\n\t\t}\n\t}\n\n\theader('Location: graph_templates.php?header=false&action=template_edit&id=' . (empty($graph_template_id) ? get_nfilter_request_var('graph_template_id') : $graph_template_id));\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $graph_actions, $config;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tdb_execute('DELETE FROM graph_templates\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'id'));\n\n\t\t\t\t$snmp_graph_ids = array_rekey(\n\t\t\t\t\tdb_fetch_assoc('SELECT id\n\t\t\t\t\t\tFROM snmp_query_graph\n\t\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id')),\n\t\t\t\t\t'id', 'id'\n\t\t\t\t);\n\n\t\t\t\tif (cacti_sizeof($snmp_graph_ids)) {\n\t\t\t\t\tdb_execute('DELETE FROM snmp_query_graph\n\t\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_rrd\n\t\t\t\t\t\tWHERE snmp_query_graph_id IN (' . implode(', ', $snmp_graph_ids) . ')');\n\n\t\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_rrd_sv\n\t\t\t\t\t\tWHERE snmp_query_graph_id IN (' . implode(', ', $snmp_graph_ids) . ')');\n\n\t\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_rrd_sv\n\t\t\t\t\t\tWHERE snmp_query_graph_id IN (' . implode(', ', $snmp_graph_ids) . ')');\n\n\t\t\t\t\tdb_execute('DELETE FROM snmp_query_graph_sv\n\t\t\t\t\t\tWHERE snmp_query_graph_id IN (' . implode(', ', $snmp_graph_ids) . ')');\n\t\t\t\t}\n\n\t\t\t\t$graph_template_input = db_fetch_assoc('SELECT id\n\t\t\t\t\tFROM graph_template_input\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\tif (cacti_sizeof($graph_template_input) > 0) {\n\t\t\t\t\tforeach ($graph_template_input as $item) {\n\t\t\t\t\t\tdb_execute_prepared('DELETE FROM graph_template_input_defs\n\t\t\t\t\t\t\tWHERE graph_template_input_id = ?', array($item['id']));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdb_execute('DELETE FROM graph_template_input\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\tdb_execute('DELETE FROM graph_templates_graph\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id') . ' AND local_graph_id=0');\n\n\t\t\t\tdb_execute('DELETE FROM graph_templates_item\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id') . ' AND local_graph_id=0');\n\n\t\t\t\tdb_execute('DELETE FROM host_template_graph\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\t/* 'undo' any graph that is currently using this template */\n\t\t\t\tdb_execute('UPDATE graph_templates_graph\n\t\t\t\t\tSET local_graph_template_graph_id=0, graph_template_id=0\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\tdb_execute('UPDATE graph_templates_item\n\t\t\t\t\tSET local_graph_template_item_id=0, graph_template_id=0\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\n\t\t\t\tdb_execute('UPDATE graph_local\n\t\t\t\t\tSET graph_template_id=0\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'graph_template_id'));\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_duplicate_graph(0, $selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '3') { // resize\n\t\t\t\tget_filter_request_var('graph_width');\n\t\t\t\tget_filter_request_var('graph_height');\n\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdb_execute_prepared('UPDATE graph_templates_graph\n\t\t\t\t\t\tSET width = ?, height = ?\n\t\t\t\t\t\tWHERE graph_template_id = ?',\n\t\t\t\t\t\tarray(get_request_var('graph_width'),\n\t\t\t\t\t\tget_request_var('graph_height'),\n\t\t\t\t\t\t$selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '4') { // retemplate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tretemplate_graphs($selected_items[$i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: graph_templates.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$graph_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$graph_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM graph_templates WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$graph_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('graph_templates.php');\n\n\thtml_start_box($graph_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($graph_array) && cacti_sizeof($graph_array)) {\n\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Graph Template(s).  Any Graph(s) associated with the Template(s) will become individual Graph(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete Graph Template(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to duplicate the following Graph Template(s). You can optionally change the title format for the new Graph Template(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t<p><strong>\" . __('Title Format:'). \"</strong><br>\"; form_text_box('title_format', '<template_title> (1)', '', '255', '30', 'text'); print \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue'). \"' title='\" . __esc('Duplicate Graph Template(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '3') { // resize\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to resize the following Graph Template(s) and Graph(s) to the Height and Width below.  The defaults below are maintained in Settings.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table>\n\t\t\t<tr>\n\t\t\t\t<td>\";\n\n\t\t\tprint __('Graph Height') . '</td><td>';\n\t\t\tform_text_box('graph_height', read_config_option('default_graph_height'), '', '5', '5', 'text');\n\t\t\tprint __('Graph Width') . '</td><td>';\n\t\t\tform_text_box('graph_width', read_config_option('default_graph_width'), '', '5', '5', 'text');\n\n\t\t\tprint \"</td></tr></table><div class='break'></div><table style='width:100%'>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Resize Selected Graph Template(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '4') { // retemplate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to Synchronize your Graphs with the following Graph Template(s). This function is important if you have Graphs that exist with multiple versions of a Graph Template and wish to make them all common in appearance.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue'). \"' title='\" . __esc('Synchronize Graphs to Graph Template(s)') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: graph_templates.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($graph_array) ? serialize($graph_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\nfunction item() {\n\tglobal $consolidation_functions, $graph_item_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (isempty_request_var('id')) {\n\t\t$template_item_list = array();\n\n\t\t$header_label = 'Graph Template Items [new]';\n\t} else {\n\t\t$template_item_list = db_fetch_assoc_prepared(\"SELECT gti.id, gti.text_format, gti.alpha,\n\t\t\tgti.value, gti.hard_return, gti.graph_type_id, gti.consolidation_function_id, gti.textalign,\n\t\t\tCONCAT_WS(' - ', dtd.name, dtr.data_source_name) AS data_source_name,\n\t\t\tcdef.name AS cdef_name, colors.hex\n\t\t\tFROM graph_templates_item AS gti\n\t\t\tLEFT JOIN data_template_rrd AS dtr\n\t\t\tON gti.task_item_id=dtr.id\n\t\t\tLEFT JOIN data_local AS dl\n\t\t\tON dtr.local_data_id=dl.id\n\t\t\tLEFT JOIN data_template_data AS dtd\n\t\t\tON dl.id=dtd.local_data_id\n\t\t\tLEFT JOIN cdef\n\t\t\tON cdef_id=cdef.id\n\t\t\tLEFT JOIN vdef\n\t\t\tON vdef_id=vdef.id\n\t\t\tLEFT JOIN colors\n\t\t\tON color_id=colors.id\n\t\t\tWHERE gti.graph_template_id = ?\n\t\t\tAND gti.local_graph_id=0\n\t\t\tORDER BY gti.sequence\",\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Graph Template Items [edit: %s]', html_escape(db_fetch_cell_prepared('SELECT name FROM graph_templates WHERE id = ?', array(get_request_var('id')))));\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', 'graph_templates_items.php?action=item_edit&graph_template_id=' . get_request_var('id'));\n\tdraw_graph_items_list($template_item_list, 'graph_templates_items.php', 'graph_template_id=' . get_request_var('id'), false);\n\thtml_end_box();\n\n\thtml_start_box(__('Graph Item Inputs'), '100%', '', '3', 'center', 'graph_templates_inputs.php?action=input_edit&graph_template_id=' . get_request_var('id'));\n\n\tprint \"<tr class='tableHeader'>\";\n\t\tDrawMatrixHeaderItem(__('Name'),'',2);\n\tprint '</tr>';\n\n\t$template_item_list = db_fetch_assoc_prepared('SELECT id, name\n\t\tFROM graph_template_input\n\t\tWHERE graph_template_id = ?\n\t\tORDER BY name', array(get_request_var('id')));\n\n\t$i = 0;\n\tif (cacti_sizeof($template_item_list) > 0) {\n\t\tforeach ($template_item_list as $item) {\n\t\t\tform_alternate_row('', true);\n\t\t\t?>\n\t\t\t<td>\n\t\t\t\t<a class='linkEditMain' href='<?php print html_escape('graph_templates_inputs.php?action=input_edit&id=' . $item['id'] . '&graph_template_id=' . get_request_var('id'));?>'><?php print html_escape($item['name']);?></a>\n\t\t\t</td>\n\t\t\t<td class='right'>\n\t\t\t\t<a class='deleteMarker fa fa-times' title='<?php print __esc('Delete');?>' href='<?php print html_escape('graph_templates_inputs.php?action=input_remove&id=' . $item['id'] . '&graph_template_id=' . get_request_var('id'));?>'></a>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='2'><em>\" . __('No Inputs') . \"</em></td></tr>\";\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('.deleteMarker, .moveArrow').click(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tloadPageNoHeader($(this).attr('href'));\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n}\n\n/* ----------------------------\n    template - Graph Templates\n   ---------------------------- */\n\nfunction template_edit() {\n\tglobal $struct_graph, $image_types, $fields_graph_template_template_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t/* graph item list goes here */\n\tif (!isempty_request_var('id')) {\n\t\titem();\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\t$template       = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$template_graph = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE graph_template_id = ?\n\t\t\tAND local_graph_id=0',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Graph Template [edit: %s]', html_escape($template['name']));\n\t} else {\n\t\t$header_label = __('Graph Template [new]');\n\t}\n\n\tform_start('graph_templates.php', 'graph_templates');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_graph_template_template_edit, (isset($template) ? $template : array()), (isset($template_graph) ? $template_graph : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\thtml_start_box(__('Graph Template Options'), '100%', true, '3', 'center', '');\n\n\t$form_array = array();\n\n\tforeach ($struct_graph as $field_name => $field_array) {\n\t\t$form_array += array($field_name => $struct_graph[$field_name]);\n\n\t\tif ($form_array[$field_name]['method'] != 'spacer') {\n\t\t\t$form_array[$field_name]['value'] = (isset($template_graph[$field_name]) ? $template_graph[$field_name] : '');\n\t\t}\n\n\t\t$form_array[$field_name]['form_id'] = (isset($template_graph['id']) ? $template_graph['id'] : '0');\n\n\t\tif ($form_array[$field_name]['method'] != 'spacer') {\n\t\t\t$form_array[$field_name]['sub_checkbox'] = array(\n\t\t\t\t'name' => 't_' . $field_name,\n\t\t\t\t'friendly_name' => __esc('Check this checkbox if you wish to allow the user to override the value on the right during Graph creation.'),\n\t\t\t\t'value' => (isset($template_graph['t_' . $field_name]) ? $template_graph['t_' . $field_name] : '')\n\t\t\t);\n\t\t}\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\n\tform_hidden_box('rrdtool_version', get_rrdtool_version(), '');\n\n\thtml_end_box(true, true);\n\n\tform_save_button('graph_templates.php', 'return');\n\n\t//Now we need some javascript to make it dynamic\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\tdynamic();\n\t});\n\n\tfunction dynamic() {\n\t\t$('#t_scale_log_units').prop('disabled', true);\n\t\t$('#scale_log_units').prop('disabled', true);\n\t\tif ($('#auto_scale_log').is(':checked')) {\n\t\t\t$('#t_scale_log_units').prop('disabled', false);\n\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t}\n\t}\n\n\tfunction changeScaleLog() {\n\t\t$('#t_scale_log_units').prop('disabled', true);\n\t\t$('#scale_log_units').prop('disabled', true);\n\t\tif ($('#auto_scale_log').is(':checked')) {\n\t\t\t$('#t_scale_log_units').prop('disabled', false);\n\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t}\n\t}\n\t</script>\n\t<?php\n}\n\nfunction template() {\n\tglobal $graph_actions, $item_rows, $image_types;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_gt');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('Graph Templates'), '100%', '', '3', 'center', 'graph_templates.php?action=template_edit');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_graph_template' action='graph_templates.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default' id='filter' name='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Graph Templates');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='has_graphs' <?php print (get_request_var('has_graphs') == 'true' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='has_graphs'><?php print __('Has Graphs');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t<script type='text/javascript'>\n\t\tvar disabled = true;\n\n\t\tfunction applyFilter() {\n\t\t\tstrURL  = 'graph_templates.php?header=false';\n\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\tstrURL += '&has_graphs='+$('#has_graphs').is(':checked');\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\tfunction clearFilter() {\n\t\t\tstrURL = 'graph_templates.php?clear=1&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#refresh').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#has_graphs').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#clear').click(function() {\n\t\t\t\tclearFilter();\n\t\t\t});\n\n\t\t\t$('#form_graph_template').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\t\t});\n\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (gt.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_having = 'HAVING graphs>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(`rows`)\n\t\tFROM (SELECT\n\t\t\tCOUNT(gt.id) AS `rows`,\n\t\t\tCOUNT(gl.id) AS graphs\n\t\t\tFROM graph_templates AS gt\n\t\t\tLEFT JOIN graph_local AS gl\n\t\t\tON gt.id=gl.graph_template_id\n\t\t\tINNER JOIN (\n\t\t\t\tSELECT *\n\t\t\t\tFROM graph_templates_graph AS gtg\n\t\t\t\tWHERE gtg.local_graph_id=0\n\t\t\t) AS gtg\n\t\t\tON gtg.graph_template_id=gt.id\n\t\t\t$sql_where\n\t\t\tGROUP BY gt.id\n\t\t\t$sql_having\n\t\t) AS rs\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$template_list = db_fetch_assoc(\"SELECT\n\t\tgt.id, gt.name, gl.snmp_query_id AS dqid,\n\t\tCONCAT(gtg.height,'x',gtg.width) AS size, gtg.vertical_label,\n\t\tgtg.image_format_id, COUNT(gl.id) AS graphs\n\t\tFROM graph_templates AS gt\n\t\tINNER JOIN graph_templates_graph AS gtg\n\t\tON gtg.graph_template_id=gt.id\n\t\tAND gtg.local_graph_id=0\n\t\tLEFT JOIN graph_local AS gl\n\t\tON gt.id=gl.graph_template_id\n\t\t$sql_where\n\t\tGROUP BY gt.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('graph_templates.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 8, __('Graph Templates'), 'page', 'main');\n\n\tform_start('graph_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'            => array('display' => __('Graph Template Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this Graph Template.')),\n\t\t'gt.id'           => array('display' => __('ID'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The internal ID for this Graph Template.  Useful when performing automation or debugging.')),\n\t\t'nosort3'         => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('Graph Templates that are in use cannot be Deleted.  In use is defined as being referenced by a Graph.')),\n\t\t'graphs'          => array('display' => __('Graphs Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Graphs using this Graph Template.')),\n\t\t'size'            => array('display' => __('Size'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The default size of the resulting Graphs.')),\n\t\t'image_format_id' => array('display' => __('Image Format'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The default image format for the resulting Graphs.')),\n\t\t'vertical_label'  => array('display' => __('Vertical Label'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The vertical label for the resulting Graphs.'))\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['graphs'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\t\t\tform_alternate_row('line' . $template['id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'graph_templates.php?action=template_edit&id=' . $template['id']), $template['id']);\n\t\t\tform_selectable_cell($template['id'], $template['id'], '', 'right');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $template['id'], '', 'right');\n\t\t\tform_selectable_cell(number_format_i18n($template['graphs'], '-1'), $template['id'], '', 'right');\n\t\t\tform_selectable_ecell($template['size'], $template['id'], '', 'right');\n\t\t\tform_selectable_cell($image_types[$template['image_format_id']], $template['id'], '', 'right');\n\t\t\tform_selectable_ecell($template['vertical_label'], $template['id'], '', 'right');\n\t\t\tform_checkbox_cell($template['name'], $template['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='4'><em>\" . __('No Graph Templates Found') . \"</em></td></tr>\\n\";\n\t}\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($graph_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n$guest_account = true;\n\ninclude('./include/auth.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/html_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/reports.php');\ninclude_once('./lib/timespan_settings.php');\n\n/* set the default graph action */\nset_default_graph_action();\n\n/* perform spikekill action */\nhtml_spikekill_actions();\n\n/* process tree settings */\nprocess_tree_settings();\n\n/* setup realtime defaults if they are not set */\ninitialize_realtime_step_and_window();\n\nfunction get_matching_nodes() {\n\t$my_matches = array();\n\t$match = array();\n\n\t$filter = '%' . get_nfilter_request_var('str') . '%';\n\n\tif (get_nfilter_request_var('str') != '') {\n\t\t$matching = db_fetch_assoc_prepared(\"SELECT gti.parent, gti.graph_tree_id\n\t\t\tFROM graph_tree_items AS gti\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id=gti.host_id\n\t\t\tLEFT JOIN graph_templates_graph AS gtg\n\t\t\tON gtg.local_graph_id=gti.local_graph_id AND gtg.local_graph_id>0\n\t\t\tWHERE gtg.title_cache LIKE ?\n\t\t\tOR h.description LIKE ?\n\t\t\tOR h.hostname LIKE ?\n\t\t\tOR gti.title LIKE ?\",\n\t\t\tarray($filter, $filter, $filter, $filter));\n\t} else {\n\t\t$matching = db_fetch_assoc(\"SELECT parent, graph_tree_id FROM graph_tree_items\");\n\t}\n\n\tif (cacti_sizeof($matching)) {\n\t\tforeach($matching as $row) {\n\t\t\twhile ($row['parent'] != '0') {\n\t\t\t\t$match[] = 'tbranch-' . $row['parent'];\n\n\t\t\t\t$row = db_fetch_row_prepared('SELECT parent, graph_tree_id\n\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($row['parent']));\n\n\t\t\t\tif (!cacti_sizeof($row)) {\n\t\t\t\t    break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cacti_sizeof($row)) {\n\t\t\t\t$match[]      = 'tree_anchor-' . $row['graph_tree_id'];\n\t\t\t\t$my_matches[] = array_reverse($match);\n\t\t\t\t$match        = array();\n\t\t\t}\n\t\t}\n\n\t\t// Now flatten the list of nodes\n\t\t$final_array = array();\n\t\t$level = 0;\n\t\twhile (true) {\n\t\t\t$found = 0;\n\t\t\tforeach($my_matches as $match) {\n\t\t\t\tif (isset($match[$level])) {\n\t\t\t\t\tif ($level == 0) {\n\t\t\t\t\t\t$final_array[$match[$level]][$match[$level]] = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$final_array[$match[0]][$match[$level]] = 1;\n\t\t\t\t\t}\n\t\t\t\t\t$found++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$level++;\n\n\t\t\tif ($found == 0) {\n\t\t\t    break;\n\t\t\t}\n\t\t}\n\n\t\tif (cacti_sizeof($final_array)) {\n\t\t\t$fa = array();\n\n\t\t\tforeach($final_array as $key => $matches) {\n\t\t\t\tforeach($matches as $branch => $dnc) {\n\t\t\t\t\t$fa[] = $branch;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Content-Type: application/json; charset=utf-8');\n\n\t\tprint json_encode($fa);\n\t}\n}\n\nswitch (get_nfilter_request_var('action')) {\ncase 'ajax_hosts':\n\tget_allowed_ajax_hosts();\n\n\tbreak;\ncase 'ajax_search':\n\tget_matching_nodes();\n\texit;\n\n\tbreak;\ncase 'ajax_reports':\n\t// Add to a report\n\tget_filter_request_var('report_id');\n\tget_filter_request_var('timespan');\n\tget_filter_request_var('align');\n\n\tif (isset_request_var('graph_list')) {\n\t\t$items = explode(',', get_request_var('graph_list'));\n\n\t\tif (cacti_sizeof($items)) {\n\t\t\t$good = true;\n\n\t\t\tforeach($items as $item) {\n\t\t\t\tif (!reports_add_graphs(get_filter_request_var('report_id'), $item, get_request_var('timespan'), get_request_var('align'))) {\n\t\t\t\t\traise_message('reports_add_error');\n\t\t\t\t\t$good = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($good) {\n\t\t\t\traise_message('reports_graphs_added');\n\t\t\t}\n\t\t}\n\t} else {\n\t\traise_message('reports_no_graph');\n\t}\n\n\theader('Location: graph_view.php?action=list&header=false');\n\n\tbreak;\ncase 'update_timespan':\n\t// we really don't need to do anything.  The session variables have already been updated\n\n\tbreak;\ncase 'save':\n\tif (is_view_allowed('graph_settings')) {\n\t\tget_filter_request_var('columns');\n\t\tget_filter_request_var('predefined_timespan');\n\t\tget_filter_request_var('predefined_timeshift');\n\t\tget_filter_request_var('graphs');\n\t\tget_filter_request_var('thumbnails', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '(true|false)')));\n\n\t\tif (isset_request_var('predefined_timespan')) {\n\t\t\tset_graph_config_option('default_timespan', get_request_var('predefined_timespan'));\n\t\t}\n\n\t\tif (isset_request_var('predefined_timeshift')) {\n\t\t\tset_graph_config_option('default_timeshift', get_request_var('predefined_timeshift'));\n\t\t}\n\n\t\tif (isset_request_var('section') && get_nfilter_request_var('section') == 'preview') {\n\t\t\tif (isset_request_var('columns')) {\n\t\t\t\tset_graph_config_option('num_columns', get_request_var('columns'));\n\t\t\t}\n\t\t\tif (isset_request_var('graphs')) {\n\t\t\t\tset_graph_config_option('preview_graphs_per_page', get_request_var('graphs'));\n\t\t\t}\n\t\t\tif (isset_request_var('thumbnails')) {\n\t\t\t\tset_graph_config_option('thumbnail_section_preview', get_nfilter_request_var('thumbnails') == 'true' ? 'on':'');\n\t\t\t}\n\t\t} else {\n\t\t\tif (isset_request_var('columns')) {\n\t\t\t\tset_graph_config_option('num_columns_tree', get_request_var('columns'));\n\t\t\t}\n\t\t\tif (isset_request_var('graphs')) {\n\t\t\t\tset_graph_config_option('treeview_graphs_per_page', get_request_var('graphs'));\n\t\t\t}\n\t\t\tif (isset_request_var('thumbnails')) {\n\t\t\t\tset_graph_config_option('thumbnail_section_tree_2', get_request_var('thumbnails') == 'true' ? 'on':'');\n\t\t\t}\n\t\t}\n\t}\n\n\tbreak;\ncase 'tree':\n\tif (isset_request_var('tree_id')) {\n\t\t$_SESSION['sess_tree_id'] = get_filter_request_var('tree_id');\n\t}\n\n\ttop_graph_header();\n\n\tbottom_footer();\n\n\tbreak;\ncase 'get_node':\n\t$parent  = -1;\n\t$tree_id = 0;\n\n\tif (isset_request_var('tree_id')) {\n\t\tif (get_nfilter_request_var('tree_id') == 0 && strstr(get_nfilter_request_var('id'), 'tbranch-') !== false) {\n\t\t\t$tree_id = db_fetch_cell_prepared('SELECT graph_tree_id\n\t\t\t\tFROM graph_tree_items\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(str_replace('tbranch-', '', get_nfilter_request_var('id'))));\n\t\t}else if (get_nfilter_request_var('tree_id') == 'default' ||\n\t\t\tget_nfilter_request_var('tree_id') == 'undefined' ||\n\t\t\tget_nfilter_request_var('tree_id') == '') {\n\n\t\t\t$tree_id = read_user_setting('default_tree_id');\n\t\t} elseif (get_nfilter_request_var('tree_id') == 0 &&\n\t\t\tsubstr_count(get_nfilter_request_var('id'), 'tree_anchor') > 0) {\n\n\t\t\t$ndata = explode('-', get_nfilter_request_var('id'));\n\t\t\t$tree_id = $ndata[1];\n\t\t\tinput_validate_input_number($tree_id);\n\t\t}\n\t} else {\n\t\t$tree_id = read_user_setting('default_tree_id');\n\t}\n\n\tif (isset_request_var('id') && get_nfilter_request_var('id') != '#') {\n\t\tif (substr_count(get_nfilter_request_var('id'), 'tree_anchor')) {\n\t\t\t$parent = -1;\n\t\t} else {\n\t\t\t$ndata = explode('_', get_nfilter_request_var('id'));\n\n\t\t\tforeach($ndata as $node) {\n\t\t\t\t$pnode = explode('-', $node);\n\n\t\t\t\tif ($pnode[0] == 'tbranch') {\n\t\t\t\t\t$parent = $pnode[1];\n\t\t\t\t\tinput_validate_input_number($parent);\n\n\t\t\t\t\t$tree_id = db_fetch_cell_prepared('SELECT graph_tree_id\n\t\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($parent));\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tapi_tree_get_main($tree_id, $parent);\n\n\tbreak;\ncase 'tree_content':\n\thtml_validate_tree_vars();\n\n\tif (!is_view_allowed('show_tree')) {\n\t\tprint \"<font class='txtErrorTextBox'>\" . __('YOU DO NOT HAVE RIGHTS FOR TREE VIEW') . '</font>';\n\t\texit;\n\t}\n\n\tif (!isempty_request_var('node')) {\n\t\t$_SESSION['sess_graph_node'] = get_request_var('node');\n\n\t\tif (!isempty_request_var('hgd')) {\n\t\t\t$_SESSION['sess_graph_hgd'] = get_request_var('hgd');\n\t\t} else {\n\t\t\t$_SESSION['sess_graph_hgd'] = '';\n\t\t}\n\t} elseif (isset($_SESSION['sess_graph_node'])) {\n\t\tset_request_var('node', $_SESSION['sess_graph_node']);\n\t\tset_request_var('hgd', $_SESSION['sess_graph_hgd']);\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tvar refreshIsLogout = false;\n\tvar refreshPage     = '<?php print str_replace('tree_content', 'tree', sanitize_uri($_SERVER['REQUEST_URI']));?>';\n\tvar refreshMSeconds = <?php print read_user_setting('page_refresh')*1000;?>;\n\tvar graph_start     = <?php print get_current_graph_start();?>;\n\tvar graph_end       = <?php print get_current_graph_end();?>;\n\tvar timeOffset      = <?php print date('Z');?>\n\n\t// Adjust the height of the tree\n\t$(function() {\n\t\tpageAction   = 'tree';\n\t\tnavHeight    = $('.cactiTreeNavigationArea').height();\n\t\twindowHeight = $(window).height();\n\t\tnavOffset    = $('.cactiTreeNavigationArea').offset();\n\t\tif (navHeight + navOffset.top < windowHeight) {\n\t\t\t$('.cactiTreeNavigationArea').height(windowHeight - navOffset.top);\n\t\t}\n\t});\n\t</script>\n\t<?php\n\n\t$access_denied = false;\n\t$tree_parameters = array();\n\t$tree_id = 0;\n\t$node_id = 0;\n\t$hgdata  = 0;\n\n\tif (isset_request_var('node')) {\n\t\t$parts = explode('-', get_request_var('node'));\n\n\t\t// Check for tree anchoe\n\t\tif (strpos(get_request_var('node'), 'tree_anchor') !== false) {\n\t\t\t$tree_id = $parts[1];\n\t\t\t$node_id = 0;\n\t\t} elseif (strpos(get_request_var('node'), 'tbranch') !== false) {\n\t\t\t// Check for branch\n\t\t\t$node_id = $parts[1];\n\t\t\t$tree_id = db_fetch_cell_prepared('SELECT graph_tree_id\n\t\t\t\tFROM graph_tree_items\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($node_id));\n\t\t}\n\t}\n\n\tif (isset_request_var('hgd')) {\n\t\t$hgdata = get_request_var('hgd');\n\t}\n\n\tif ($tree_id > 0) {\n\t\tif (!is_tree_allowed($tree_id)) {\n\t\t\theader('Location: permission_denied.php');\n\t\t\texit;\n\t\t}\n\n\t\tgrow_right_pane_tree($tree_id, $node_id, $hgdata);\n\t}\n\n\tbottom_footer();\n\n\tbreak;\ncase 'preview':\n\ttop_graph_header();\n\n\tif (!is_view_allowed('show_preview')) {\n\t\tprint \"<font class='txtErrorTextBox'>\" . __('YOU DO NOT HAVE RIGHTS FOR PREVIEW VIEW') . \"</font>\";\n\t\tbottom_footer();\n\t\texit;\n\t}\n\n\tif (isset_request_var('external_id')) {\n\t\t$host_id = db_fetch_cell_prepared('SELECT id FROM host WHERE external_id = ?', array(get_nfilter_request_var('external_id')));\n\t\tif (!empty($host_id)) {\n\t\t\tset_request_var('host_id', $host_id);\n\t\t\tset_request_var('reset',true);\n\t\t}\n\t}\n\n\thtml_graph_validate_preview_request_vars();\n\n\t/* include graph view filter selector */\n\thtml_start_box(__('Graph Preview Filters') . (isset_request_var('style') && get_request_var('style') != '' ? ' ' . __('[ Custom Graph List Applied - Filtering from List ]'):''), '100%', '', '3', 'center', '');\n\n\thtml_graph_preview_filter('graph_view.php', 'preview');\n\n\thtml_end_box();\n\n\t/* the user select a bunch of graphs of the 'list' view and wants them displayed here */\n\t$sql_or = '';\n\tif (isset_request_var('style')) {\n\t\tif (get_request_var('style') == 'selective') {\n\t\t\t$graph_list = array();\n\n\t\t\t/* process selected graphs */\n\t\t\tif (!isempty_request_var('graph_list')) {\n\t\t\t\tforeach (explode(',', get_request_var('graph_list')) as $item) {\n\t\t\t\t\tif (is_numeric($item)) {\n\t\t\t\t\t\t$graph_list[$item] = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!isempty_request_var('graph_add')) {\n\t\t\t\tforeach (explode(',', get_request_var('graph_add')) as $item) {\n\t\t\t\t\tif (is_numeric($item)) {\n\t\t\t\t\t\t$graph_list[$item] = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* remove items */\n\t\t\tif (!isempty_request_var('graph_remove')) {\n\t\t\t\tforeach (explode(',', get_request_var('graph_remove')) as $item) {\n\t\t\t\t\tunset($graph_list[$item]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$i = 0;\n\t\t\tforeach ($graph_list as $item => $value) {\n\t\t\t\t$graph_array[$i] = $item;\n\t\t\t\t$i++;\n\t\t\t}\n\n\t\t\tif ((isset($graph_array)) && (cacti_sizeof($graph_array) > 0)) {\n\t\t\t\t/* build sql string including each graph the user checked */\n\t\t\t\t$sql_or = array_to_sql_or($graph_array, 'gtg.local_graph_id');\n\t\t\t}\n\t\t}\n\t}\n\n\t$total_graphs = 0;\n\n\t/* create filter for sql */\n\t$sql_where  = '';\n\tif (!isempty_request_var('rfilter')) {\n\t\t$sql_where .= \" gtg.title_cache RLIKE '\" . get_request_var('rfilter') . \"'\";\n\t}\n\n\t$sql_where .= ($sql_or != '' && $sql_where != '' ? ' AND ':'') . $sql_or;\n\n\tif (!isempty_request_var('host_id') && get_request_var('host_id') > 0) {\n\t\t$sql_where .= (empty($sql_where) ? '' : ' AND') . ' gl.host_id=' . get_request_var('host_id');\n\t} elseif (isempty_request_var('host_id')) {\n\t\t$sql_where .= (empty($sql_where) ? '' : ' AND') . ' gl.host_id=0';\n\t}\n\n\tif (!isempty_request_var('graph_template_id') && get_request_var('graph_template_id') != '-1' && get_request_var('graph_template_id') != '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . ' (gl.graph_template_id IN (' . get_request_var('graph_template_id') . '))';\n\t} elseif (get_request_var('graph_template_id') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . ' (gl.graph_template_id IN (' . get_request_var('graph_template_id') . '))';\n\t}\n\n\t$limit      = (get_request_var('graphs')*(get_request_var('page')-1)) . ',' . get_request_var('graphs');\n\t$order      = 'gtg.title_cache';\n\n\t$graphs     = get_allowed_graphs($sql_where, $order, $limit, $total_graphs);\n\n\t$nav = html_nav_bar('graph_view.php', MAX_DISPLAY_PAGES, get_request_var('page'), get_request_var('graphs'), $total_graphs, get_request_var('columns'), __('Graphs'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\tif (get_request_var('thumbnails') == 'true') {\n\t\thtml_graph_thumbnail_area($graphs, '', 'graph_start=' . get_current_graph_start() . '&graph_end=' . get_current_graph_end(), '', get_request_var('columns'));\n\t} else {\n\t\thtml_graph_area($graphs, '', 'graph_start=' . get_current_graph_start() . '&graph_end=' . get_current_graph_end(), '', get_request_var('columns'));\n\t}\n\n\thtml_end_box();\n\n\tif ($total_graphs) {\n\t\tprint $nav;\n\t}\n\n\tif (!isset_request_var('header') || get_nfilter_request_var('header') == 'false') {\n\t\tbottom_footer();\n\t}\n\n\tbreak;\ncase 'list':\n\ttop_graph_header();\n\n\tif (!is_view_allowed('show_list')) {\n\t\tprint \"<font class='txtErrorTextBox'>\" . __('YOU DO NOT HAVE RIGHTS FOR LIST VIEW') . '</font>';\n\t\tbottom_footer();\n\t\texit;\n\t}\n\n\t/* reset the graph list on a new viewing */\n\tif (!isset_request_var('page')) {\n\t\tset_request_var('graph_list', '');\n\t}\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'rfilter' => array(\n\t\t\t'filter' => FILTER_VALIDATE_IS_REGEX,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t),\n\t\t'graph_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_IS_NUMERIC_LIST,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'host_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'graph_add' => array(\n\t\t\t'filter' => FILTER_VALIDATE_IS_NUMERIC_LIST,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'graph_list' => array(\n\t\t\t'filter' => FILTER_VALIDATE_IS_NUMERIC_LIST,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'graph_remove' => array(\n\t\t\t'filter' => FILTER_VALIDATE_IS_NUMERIC_LIST,\n\t\t\t'default' => ''\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_gl');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$graph_list = array();\n\n\t/* save selected graphs into url */\n\tif (!isempty_request_var('graph_list')) {\n\t\tforeach (explode(',', get_request_var('graph_list')) as $item) {\n\t\t\tif (is_numeric($item)) {\n\t\t\t\t$graph_list[$item] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!isempty_request_var('graph_add')) {\n\t\tforeach (explode(',', get_request_var('graph_add')) as $item) {\n\t\t\tif (is_numeric($item)) {\n\t\t\t\t$graph_list[$item] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* remove items */\n\tif (!isempty_request_var('graph_remove')) {\n\t\tforeach (explode(',', get_request_var('graph_remove')) as $item) {\n\t\t\tunset($graph_list[$item]);\n\t\t}\n\t}\n\n\t/* update the revised graph list session variable */\n\tif (cacti_sizeof($graph_list)) {\n\t\tset_request_var('graph_list', implode(',', array_keys($graph_list)));\n\t}\n\tload_current_session_value('graph_list', 'sess_gl_graph_list', '');\n\n\t$reports = db_fetch_assoc_prepared('SELECT *\n\t\tFROM reports\n\t\tWHERE user_id = ?',\n\t\tarray($_SESSION['sess_user_id']));\n\n\tform_start('graph_view.php', 'chk');\n\n\t/* display graph view filter selector */\n\thtml_start_box(__('Graph List View Filters') . (isset_request_var('style') && get_request_var('style') != '' ? ' ' . __('[ Custom Graph List Applied - Filter FROM List ]'):''), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td class='noprint'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr class='noprint'>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='rfilter' size='30' value='<?php print html_escape_request_var('rfilter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<?php html_host_filter(get_request_var('host_id'));?>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>' onClick='clearFilter()'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('View');?>' title='<?php print __esc('View Graphs');?>' onClick='viewGraphs()'>\n\t\t\t\t\t\t\t<?php if (cacti_sizeof($reports)) {?>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='addreport' value='<?php print __esc('Report');?>' title='<?php print __esc('Add to a Report');?>'>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='graph_template_id' multiple style='opacity:0.1;overflow:hide;height:0px;'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('graph_template_id') == '-1') {?> selected<?php }?>><?php print __('All Graphs & Templates');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('graph_template_id') == '0') {?> selected<?php }?>><?php print __('Not Templated');?></option>\n\t\t\t\t\t\t\t<?php\n\n\t\t\t\t\t\t\t// suppress total rows collection\n\t\t\t\t\t\t\t$total_rows = -1;\n\n\t\t\t\t\t\t\t$graph_templates = get_allowed_graph_templates('', 'name', '', $total_rows);\n\t\t\t\t\t\t\tif (cacti_sizeof($graph_templates)) {\n\t\t\t\t\t\t\t\t$selected    = explode(',', get_request_var('graph_template_id'));\n\t\t\t\t\t\t\t\tforeach ($graph_templates as $gt) {\n\t\t\t\t\t\t\t\t\tif ($gt['id'] != 0) {\n\t\t\t\t\t\t\t\t\t\t$found = db_fetch_cell_prepared('SELECT id\n\t\t\t\t\t\t\t\t\t\t\tFROM graph_local\n\t\t\t\t\t\t\t\t\t\t\tWHERE graph_template_id = ? LIMIT 1',\n\t\t\t\t\t\t\t\t\t\t\tarray($gt['id']));\n\n\t\t\t\t\t\t\t\t\t\tif ($found) {\n\t\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $gt['id'] . \"'\";\n\t\t\t\t\t\t\t\t\t\t\tif (cacti_sizeof($selected)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (in_array($gt['id'], $selected)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tprint ' selected';\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tprint '>';\n\t\t\t\t\t\t\t\t\t\t\tprint $gt['name'] . \"</option>\\n\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Graphs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . $value . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' id='style' value='selective'>\n\t\t\t<input type='hidden' id='action' value='list'>\n\t\t\t<input type='hidden' id='graph_add' value=''>\n\t\t\t<input type='hidden' id='graph_remove' value=''>\n\t\t\t<input type='hidden' id='graph_list' value='<?php print get_request_var('graph_list');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\thtml_end_box();\n\n\t/* create filter for sql */\n\t$sql_where  = '';\n\tif (!isempty_request_var('rfilter')) {\n\t\t$sql_where .= \" gtg.title_cache RLIKE '\" . get_request_var('rfilter') . \"'\";\n\t}\n\n\tif (!isempty_request_var('host_id') && get_request_var('host_id') > 0) {\n\t\t$sql_where .= ($sql_where == '' ? '' : ' AND') . ' gl.host_id=' . get_request_var('host_id');\n\t} elseif (isempty_request_var('host_id')) {\n\t\t$sql_where .= ($sql_where == '' ? '' : ' AND') . ' gl.host_id=0';\n\t}\n\n\tif (!isempty_request_var('graph_template_id') && get_request_var('graph_template_id') != '-1' && get_request_var('graph_template_id') != '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . ' (gl.graph_template_id IN (' . get_request_var('graph_template_id') . '))';\n\t} elseif (get_request_var('graph_template_id') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . ' (gl.graph_template_id IN (' . get_request_var('graph_template_id') . '))';\n\t}\n\n\t$total_rows = 0;\n\t$limit      = ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$graphs = get_allowed_graphs($sql_where, 'gtg.title_cache', $limit, $total_rows);\n\n\t$nav = html_nav_bar('graph_view.php?action=list', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Graphs'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_checkbox(array(__('Graph Title'), __('Device'), __('Graph Template'), __('Graph Size')), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($graphs)) {\n\t\tforeach ($graphs as $graph) {\n\t\t\tif ($graph['description'] == '' && $graph['template_name'] == '') {\n\t\t\t\t$aggregate = db_fetch_cell_prepared('SELECT agt.name\n\t\t\t\t\tFROM aggregate_graphs AS ag\n\t\t\t\t\tINNER JOIN aggregate_graph_templates AS agt\n\t\t\t\t\tON ag.aggregate_template_id=agt.id\n\t\t\t\t\tWHERE local_graph_id = ?',\n\t\t\t\t\tarray($graph['local_graph_id']));\n\n\t\t\t\tif (!empty($aggregate)) {\n\t\t\t\t\t$graph['description']   = __('Aggregated Device');\n\t\t\t\t\t$graph['template_name'] = $aggregate;\n\t\t\t\t} else {\n\t\t\t\t\t$graph['description']   = __('Non-Device');\n\t\t\t\t\t$graph['template_name'] = __('Not Applicable');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $graph['local_graph_id'], true);\n\t\t\tform_selectable_cell(filter_value($graph['title_cache'], get_request_var('rfilter'), 'graph.php?local_graph_id=' . $graph['local_graph_id'] . '&rra_id=0'), $graph['local_graph_id']);\n\t\t\tform_selectable_ecell($graph['description'], $graph['local_graph_id']);\n\t\t\tform_selectable_ecell($graph['template_name'], $graph['local_graph_id']);\n\t\t\tform_selectable_ecell($graph['height'] . 'x' . $graph['width'], $graph['local_graph_id']);\n\t\t\tform_checkbox_cell($graph['title_cache'], $graph['local_graph_id']);\n\t\t\tform_end_row();\n\t\t}\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($graphs)) {\n\t\tprint $nav;\n\t}\n\n\tform_end();\n\n\tglobal $graph_timespans, $alignment;\n\n\t$report_text = '';\n\n\tif (cacti_sizeof($reports)) {\n\t\t$report_text = '<div id=\"addGraphs\" style=\"display:none;\">\n\t\t\t<p>' . __('Select the Report to add the selected Graphs to.') . '</p>\n\t\t\t<table class=\"cactiTable\">';\n\n\t\t$report_text .= '<tr><td>' . __('Report Name') . '</td>';\n\t\t$report_text .= '<td><select id=\"report_id\">';\n\t\tforeach($reports as $report) {\n\t\t\t$report_text .= '<option value=\"' . $report['id'] . '\">' . $report['name'] . '</option>';\n\t\t}\n\t\t$report_text .= '</select></td></tr>';\n\n\t\t$report_text .= '<tr><td>' . __('Timespan') . '</td>';\n\t\t$report_text .= '<td><select id=\"timespan\">';\n\t\tforeach($graph_timespans as $key => $value) {\n\t\t\t$report_text .= '<option value=\"' . $key . '\"' . ($key == read_user_setting('default_timespan') ? ' selected':'') . '>' . $value . '</option>';\n\t\t}\n\t\t$report_text .= '</select></td></tr>';\n\n\t\t$report_text .= '<tr><td>' . __('Align') . '</td>';\n\t\t$report_text .= '<td><select id=\"align\">';\n\t\tforeach($alignment as $key => $value) {\n\t\t\t$report_text .= '<option value=\"' . $key . '\"' . ($key == REPORTS_ALIGN_CENTER ? ' selected':'') . '>' . $value . '</option>';\n\t\t}\n\t\t$report_text .= '</select></td></tr>';\n\n\t\t$report_text .= '</table></div>';\n\t}\n\n\t?>\n\t<div class='break'></div>\n\t<div class='cactiTable'>\n\t\t<div style='float:left'><img src='images/arrow.gif' alt=''>&nbsp;</div>\n\t\t<div style='float:right'><input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('View');?>' title='<?php print __esc('View Graphs');?>' onClick='viewGraphs()'></div>\n\t</div>\n\t<?php print $report_text;?>\n\t<script type='text/javascript'>\n\tvar refreshMSeconds=999999999;\n\tvar graph_list_array = new Array(<?php print get_request_var('graph_list');?>);\n\n\tfunction clearFilter() {\n\t\tstrURL = 'graph_view.php?action=list&header=false&clear=1';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction applyFilter() {\n\t\tstrURL = 'graph_view.php?action=list&header=false&page=1';\n\t\tstrURL += '&host_id=' + $('#host_id').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&graph_template_id=' + $('#graph_template_id').val();\n\t\tstrURL += '&rfilter=' + base64_encode($('#rfilter').val());\n\t\tstrURL += url_graph('');\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction initializeChecks() {\n\t\tfor (var i = 0; i < graph_list_array.length; i++) {\n\t\t\t$('#line'+graph_list_array[i]).addClass('selected');\n\t\t\t$('#chk_'+graph_list_array[i]).prop('checked', true);\n\t\t\t$('#chk_'+graph_list_array[i]).parent().addClass('selected');\n\t\t}\n\t}\n\n\tfunction viewGraphs() {\n\t\tgraphList = $('#graph_list').val();\n\t\t$('input[id^=chk_]').each(function(data) {\n\t\t\tgraphID = $(this).attr('id').replace('chk_','');\n\t\t\tif ($(this).is(':checked')) {\n\t\t\t\tgraphList += (graphList.length > 0 ? ',':'') + graphID;\n\t\t\t}\n\t\t});\n\t\t$('#graph_list').val(graphList);\n\n\t\tstrURL = urlPath+'graph_view.php?action=preview';\n\t\t$('#chk').find('select, input').each(function() {\n\t\t\tswitch($(this).attr('id')) {\n\t\t\tcase 'graph_template_id':\n\t\t\t\tstrURL += '&' + $(this).attr('id') + '=' + $(this).val();\n\t\t\t\tbreak;\n\t\t\tcase 'host_id':\n\t\t\tcase 'rfilter':\n\t\t\tcase 'graph_add':\n\t\t\tcase 'graph_remove':\n\t\t\tcase 'graph_list':\n\t\t\tcase 'style':\n\t\t\tcase 'csrf_magic':\n\t\t\t\tstrURL += '&' + $(this).attr('id') + '=' + $(this).val();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tstrURL += '&reset=true&header=false';\n\n\t\tloadPageNoHeader(strURL);\n\n\t\t$('#breadcrumbs').empty().html('<li><a href=\"graph_view.php?action=preview\"><?php print __('Preview Mode');?></a></li>');\n\t\t$('#listview').removeClass('selected');\n\t\t$('#preview').addClass('selected');\n\t}\n\n\tfunction url_graph(strNavURL) {\n\t\tif ($('#action').val() == 'list') {\n\t\t\tvar strURL = '';\n\t\t\tvar strAdd = '';\n\t\t\tvar strDel = '';\n\t\t\t$('input[id^=chk_]').each(function(data) {\n\t\t\t\tgraphID = $(this).attr('id').replace('chk_','');\n\t\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t\tstrAdd += (strAdd.length > 0 ? ',':'') + graphID;\n\t\t\t\t} else if (graphChecked(graphID)) {\n\t\t\t\t\tstrDel += (strDel.length > 0 ? ',':'') + graphID;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tstrURL = '&demon=1&graph_list=<?php print get_request_var('graph_list');?>&graph_add=' + strAdd + '&graph_remove=' + strDel;\n\n\t\t\treturn strNavURL + strURL;\n\t\t} else {\n\t\t\treturn strNavURL;\n\t\t}\n\t}\n\n\tfunction graphChecked(graph_id) {\n\t\tfor(var i = 0; i < graph_list_array.length; i++) {\n\t\t\tif (graph_list_array[i] == graph_id) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction addReport() {\n\t\t$('#addGraphs').dialog({\n\t\t\ttitle: '<?php print __('Add Selected Graphs to Report');?>',\n\t\t\tminHeight: 80,\n\t\t\tminWidth: 400,\n\t\t\tmodal: true,\n\t\t\tresizable: false,\n\t\t\tdraggable: false,\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\ttext: '<?php print __('Cancel');?>',\n\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t$(this).dialog('close');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttext: '<?php print __('Ok');?>',\n\t\t\t\t\tclick: function() {\n\t\t\t\t\t\tgraphList = $('#graph_list').val();\n\t\t\t\t\t\t$('input[id^=chk_]').each(function(data) {\n\t\t\t\t\t\t\tgraphID = $(this).attr('id').replace('chk_','');\n\t\t\t\t\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t\t\t\t\tgraphList += (graphList.length > 0 ? ',':'') + graphID;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$('#graph_list').val(graphList);\n\n\t\t\t\t\t\t$(this).dialog('close');\n\n\t\t\t\t\t\tstrURL = 'graph_view.php?action=ajax_reports';\n\t\t\t\t\t\t\t'&header=false' +\n\t\t\t\t\t\t\t'&report_id='   + $('#report_id').val()  +\n\t\t\t\t\t\t\t'&timespan='    + $('#timespan').val()   +\n\t\t\t\t\t\t\t'&align='       + $('#align').val()      +\n\t\t\t\t\t\t\t'&graph_list='  + $('#graph_list').val();\n\n\t\t\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\topen: function() {\n\t\t\t\t$('.ui-dialog').css('z-index', 99);\n\t\t\t\t$('.ui-widget-overlay').css('z-index', 98);\n\t\t\t},\n\t\t\tclose: function() {\n\t\t\t\t$('[title]').each(function() {\n\t\t\t\t\tif ($(this).tooltip('instance')) {\n\t\t\t\t\t\t$(this).tooltip('close');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t$(function() {\n\t\tpageAction = 'list';\n\n\t\tinitializeChecks();\n\n\t\t$('#addreport').click(function() {\n\t\t\taddReport();\n\t\t});\n\n\t\t<?php html_graph_template_multiselect('list');?>\n\n\t\t$('#chk').unbind().on('submit', function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\tbottom_footer();\n\n\tbreak;\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_aggregate.php');\ninclude_once('./lib/api_automation.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/api_graph.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/data_query.php');\ninclude_once('./lib/html_graph.php');\ninclude_once('./lib/html_form_template.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/reports.php');\ninclude_once('./lib/rrd.php');\ninclude_once('./lib/template.php');\ninclude_once('./lib/utility.php');\n\n/* set default action */\nset_default_action();\n\nvalidate_graph_request_vars();\n\n$graph_actions = array(\n\t1  => __('Delete'),\n);\n\nif (get_nfilter_request_var('template_id') != '-1' && get_nfilter_request_var('template_id') != '0') {\n\t$graph_actions += array(\n\t\t2  => __('Change Graph Template'),\n\t);\n}\n\n$graph_actions += array(\n\t5  => __('Change Device'),\n\t6  => __('Reapply Suggested Names'),\n\t11 => __('Place Graphs on Report'),\n\t9  => __('Create Aggregate Graph'),\n\t10 => __('Create Aggregate from Template'),\n\t8  => __('Apply Automation Rules')\n);\n\nif (read_config_option('grds_creation_method') == 1) {\n\t$graph_actions += array(\n\t\t3 => __('Duplicate'),\n\t\t4 => __('Convert to Graph Template')\n\t);\n}\n\n$graph_actions = api_plugin_hook_function('graphs_action_array', $graph_actions);\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item':\n\t\ttop_header();\n\t\titem();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'ajax_graph_items':\n\t\tget_ajax_graph_items();\n\n\t\tbreak;\n\tcase 'ajax_hosts':\n\t\t$sql_where = '';\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where = 'site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(true, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\tcase 'ajax_hosts_noany':\n\t\t$sql_where = '';\n\t\tif (get_request_var('site_id') > 0) {\n\t\t\t$sql_where = 'site_id = ' . get_request_var('site_id');\n\t\t}\n\n\t\tget_allowed_ajax_hosts(false, 'applyFilter', $sql_where);\n\n\t\tbreak;\n\tcase 'lock':\n\tcase 'unlock':\n\t\t$_SESSION['sess_graph_lock_id'] = get_filter_request_var('id');\n\t\t$_SESSION['sess_graph_locked']  = (get_request_var('action') == 'lock' ? true:false);\n\tcase 'graph_edit':\n\t\ttop_header();\n\t\tgraph_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\tgraph_management();\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\n/* --------------------------\n    Global Form Functions\n   -------------------------- */\n\nfunction get_ajax_graph_items() {\n\t$rrd_id  = get_filter_request_var('rrd_id');\n\t$host_id = get_filter_request_var('host_id');\n\n\tif ($host_id > 0) {\n\t\t$sql_where = ' AND data_local.host_id=' . $host_id;\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('term') != '') {\n\t\t$sql_where .= ' HAVING name LIKE \"%' . trim(db_qstr(get_request_var('term')),\"'\") . '%\"';\n\t}\n\n\t$items  = db_fetch_assoc_prepared(\"SELECT *\n\t\tFROM (SELECT data_template_rrd.id AS id,\n\t\t\tCONCAT_WS('',\n\t\t\tCASE\n\t\t\tWHEN host.description IS NULL THEN 'No Device - '\n\t\t\tWHEN host.description IS NOT NULL THEN ''\n\t\t\tEND,\n\t\t\tdata_template_data.name_cache,' (',data_template_rrd.data_source_name,')') AS name\n\t\t\tFROM (data_template_data,data_template_rrd,data_local)\n\t\t\tLEFT JOIN host ON (data_local.host_id=host.id)\n\t\t\tWHERE data_template_rrd.local_data_id=data_local.id\n\t\t\tAND data_template_data.local_data_id=data_local.id\n\t\t\tAND data_template_rrd.id = ?\n\t\t) AS a\n\t\tUNION\n\t\tSELECT *\n\t\tFROM (SELECT data_template_rrd.id AS id,\n\t\t\tCONCAT_WS('',\n\t\t\tCASE\n\t\t\tWHEN host.description IS NULL THEN 'No Device - '\n\t\t\tWHEN host.description IS NOT NULL THEN ''\n\t\t\tEND,\n\t\t\tdata_template_data.name_cache,' (',data_template_rrd.data_source_name,')') AS name\n\t\t\tFROM (data_template_data,data_template_rrd,data_local)\n\t\t\tLEFT JOIN host ON (data_local.host_id=host.id)\n\t\t\tWHERE data_template_rrd.local_data_id=data_local.id\n\t\t\tAND data_template_data.local_data_id=data_local.id\n\t\t\t$sql_where\n\t\t\tORDER BY name\n\t\t) AS b\n\t\tLIMIT \" . read_config_option('autocomplete_rows'),\n\t\tarray($rrd_id));\n\n\tforeach($items as $key => $item) {\n\t\t$items[$key]['label'] = $item['name'];\n\t}\n\n\tprint json_encode($items);\n}\n\nfunction add_tree_names_to_actions_array() {\n\tglobal $graph_actions;\n\n\t/* add a list of tree names to the actions dropdown */\n\t$trees = db_fetch_assoc('SELECT id, name\n\t\tFROM graph_tree\n\t\tORDER BY name');\n\n\tif (cacti_sizeof($trees)) {\n\t\tforeach ($trees as $tree) {\n\t\t\t$graph_actions['tr_' . $tree['id']] = __('Place on a Tree (%s)', $tree['name']);\n\t\t}\n\t}\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction parse_validate_graph_template_id($variable) {\n\t$output_type_id = 0;\n\tif (strpos(get_nfilter_request_var($variable), '_') !== false) {\n\t\t$template_parts = explode('_', get_nfilter_request_var($variable));\n\t\tif (is_numeric($template_parts[0]) && is_numeric($template_parts[1])) {\n\t\t\tset_request_var('graph_template_id', $template_parts[0]);\n\t\t\t$output_type_id = $template_parts[1];\n\t\t} else {\n\t\t\tcacti_log('ERROR: Unable to parse graph_template_id with value ' . get_nfilter_request_var($variable), false, 'WEBUI');\n\t\t\texit;\n\t\t}\n\t} else {\n\t\tget_filter_request_var($variable);\n\t}\n\n\treturn $output_type_id;\n}\n\nfunction form_save() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('local_graph_id');\n\tget_filter_request_var('host_id');\n\tget_filter_request_var('host_id_prev');\n\tget_filter_request_var('graph_template_graph_id');\n\tget_filter_request_var('local_graph_template_graph_id');\n\t/* ==================================================== */\n\n\t$gt_id_unparsed      = get_nfilter_request_var('graph_template_id');\n\t$gt_id_prev_unparsed = get_nfilter_request_var('graph_template_id_prev');\n\tparse_validate_graph_template_id('graph_template_id');\n\n\tif (isset_request_var('save_component_graph_new') && !isempty_request_var('graph_template_id')) {\n\t\t$snmp_query_array  = array();\n\t\t$suggested_values  = array();\n\t\t$graph_template_id = get_request_var('graph_template_id');\n\t\t$host_id           = get_request_var('host_id');\n\n\t\t$return_array = create_complete_graph_from_template($graph_template_id, $host_id, $snmp_query_array, $suggested_values);\n\n\t\tif ($return_array !== false) {\n\t\t\tdebug_log_insert('new_graphs', __('Created graph: %s', get_graph_title($return_array['local_graph_id'])));\n\n\t\t\t/* lastly push host-specific information to our data sources */\n\t\t\tif (cacti_sizeof($return_array['local_data_id'])) { # we expect at least one data source associated\n\t\t\t\tforeach($return_array['local_data_id'] as $item) {\n\t\t\t\t\tpush_out_host($host_id, $item);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdebug_log_insert('new_graphs', __('ERROR: No Data Source associated. Check Template'));\n\t\t\t}\n\t\t}\n\n\t\tif (isset($return_array['local_graph_id'])) {\n\t\t\t$local_graph_id = $return_array['local_graph_id'];\n\t\t\theader('Location: graphs.php?action=graph_edit&header=false&id=' . $local_graph_id);\n\t\t} else {\n\t\t\theader('Location: graphs.php?header=false');\n\t\t}\n\n\t\texit;\n\t}\n\n\tif (isset_request_var('save_component_graph')) {\n\t\tif (get_filter_request_var('host_id') == '-1') {\n\t\t\tset_request_var('host_id', '0');\n\t\t}\n\n\t\t$save1['id']                   = get_nfilter_request_var('local_graph_id');\n\t\t$save1['host_id']              = get_request_var('host_id');\n\t\t$save1['graph_template_id']    = get_nfilter_request_var('graph_template_id');\n\n\t\t$save2['id']                   = get_nfilter_request_var('graph_template_graph_id');\n\t\t$save2['local_graph_template_graph_id'] = get_nfilter_request_var('local_graph_template_graph_id');\n\t\t$save2['graph_template_id']    = get_nfilter_request_var('graph_template_id');\n\t\t$save2['image_format_id']      = form_input_validate(get_nfilter_request_var('image_format_id'), 'image_format_id', '^[0-9]+$', true, 3);\n\t\t$save2['title']                = form_input_validate(get_nfilter_request_var('title'), 'title', '', false, 3);\n\t\t$save2['height']               = form_input_validate(get_nfilter_request_var('height'), 'height', '^[0-9]+$', false, 3);\n\t\t$save2['width']                = form_input_validate(get_nfilter_request_var('width'), 'width', '^[0-9]+$', false, 3);\n\t\t$save2['upper_limit']          = form_input_validate(get_nfilter_request_var('upper_limit'), 'upper_limit', \"^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$\", ((strlen(get_nfilter_request_var('upper_limit')) === 0) ? true : false), 3);\n\t\t$save2['lower_limit']          = form_input_validate(get_nfilter_request_var('lower_limit'), 'lower_limit', \"^(-?([0-9]+(\\.[0-9]*)?|[0-9]*\\.[0-9]+)([eE][+\\-]?[0-9]+)?)|U$\", ((strlen(get_nfilter_request_var('lower_limit')) === 0) ? true : false), 3);\n\t\t$save2['vertical_label']       = form_input_validate(get_nfilter_request_var('vertical_label'), 'vertical_label', '', true, 3);\n\t\t$save2['slope_mode']           = form_input_validate((isset_request_var('slope_mode') ? get_nfilter_request_var('slope_mode') : ''), 'slope_mode', '', true, 3);\n\t\t$save2['auto_scale']           = form_input_validate((isset_request_var('auto_scale') ? get_nfilter_request_var('auto_scale') : ''), 'auto_scale', '', true, 3);\n\t\t$save2['auto_scale_opts']      = form_input_validate(get_nfilter_request_var('auto_scale_opts'), 'auto_scale_opts', '', true, 3);\n\t\t$save2['auto_scale_log']       = form_input_validate((isset_request_var('auto_scale_log') ? get_nfilter_request_var('auto_scale_log') : ''), 'auto_scale_log', '', true, 3);\n\t\t$save2['scale_log_units']      = form_input_validate((isset_request_var('scale_log_units') ? get_nfilter_request_var('scale_log_units') : ''), 'scale_log_units', '', true, 3);\n\t\t$save2['auto_scale_rigid']     = form_input_validate((isset_request_var('auto_scale_rigid') ? get_nfilter_request_var('auto_scale_rigid') : ''), 'auto_scale_rigid', '', true, 3);\n\t\t$save2['auto_padding']         = form_input_validate((isset_request_var('auto_padding') ? get_nfilter_request_var('auto_padding') : ''), 'auto_padding', '', true, 3);\n\t\t$save2['base_value']           = form_input_validate(get_nfilter_request_var('base_value'), 'base_value', '^[0-9]+$', false, 3);\n\t\t$save2['unit_value']           = form_input_validate(get_nfilter_request_var('unit_value'), 'unit_value', '', true, 3);\n\t\t$save2['unit_exponent_value']  = form_input_validate(get_nfilter_request_var('unit_exponent_value'), 'unit_exponent_value', '^-?[0-9]+$', true, 3);\n\t\t$save2['alt_y_grid']           = form_input_validate((isset_request_var('alt_y_grid') ? get_nfilter_request_var('alt_y_grid') : ''), 'alt_y_grid', '', true, 3);\n\t\t$save2['right_axis']           = form_input_validate((isset_request_var('right_axis') ? get_nfilter_request_var('right_axis') : ''), 'right_axis', '^[.0-9]+:-?[.0-9]+$', true, 3);\n\t\t$save2['right_axis_label']     = form_input_validate((isset_request_var('right_axis_label') ? get_nfilter_request_var('right_axis_label') : ''), 'right_axis_label', '', true, 3);\n\t\t$save2['right_axis_format']    = form_input_validate((isset_request_var('right_axis_format') ? get_nfilter_request_var('right_axis_format') : ''), 'right_axis_format', '^[0-9]+$', true, 3);\n\t\t$save2['no_gridfit']           = form_input_validate((isset_request_var('no_gridfit') ? get_nfilter_request_var('no_gridfit') : ''), 'no_gridfit', '', true, 3);\n\t\t$save2['unit_length']          = form_input_validate((isset_request_var('unit_length') ? get_nfilter_request_var('unit_length') : ''), 'unit_length', '^[0-9]+$', true, 3);\n\t\t$save2['tab_width']            = form_input_validate((isset_request_var('tab_width') ? get_nfilter_request_var('tab_width') : ''), 'tab_width', '^[0-9]*$', true, 3);\n\t\t$save2['dynamic_labels']       = form_input_validate((isset_request_var('dynamic_labels') ? get_nfilter_request_var('dynamic_labels') : ''), 'dynamic_labels', '', true, 3);\n\t\t$save2['force_rules_legend']   = form_input_validate((isset_request_var('force_rules_legend') ? get_nfilter_request_var('force_rules_legend') : ''), 'force_rules_legend', '', true, 3);\n\t\t$save2['legend_position']      = form_input_validate((isset_request_var('legend_position') ? get_nfilter_request_var('legend_position') : ''), 'legend_position', '', true, 3);\n\t\t$save2['legend_direction']     = form_input_validate((isset_request_var('legend_direction') ? get_nfilter_request_var('legend_direction') : ''), 'legend_direction', '', true, 3);\n\t\t$save2['right_axis_formatter'] = form_input_validate((isset_request_var('right_axis_formatter') ? get_nfilter_request_var('right_axis_formatter') : ''), 'right_axis_formatter', '', true, 3);\n\t\t$save2['left_axis_formatter']  = form_input_validate((isset_request_var('left_axis_formatter') ? get_nfilter_request_var('left_axis_formatter') : ''), 'left_axis_formatter', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$local_graph_id = sql_save($save1, 'graph_local');\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$save2['local_graph_id'] = $local_graph_id;\n\t\t\t$graph_templates_graph_id = sql_save($save2, 'graph_templates_graph');\n\n\t\t\tif ($graph_templates_graph_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\n\t\t\t/* update the title cache */\n\t\t\tupdate_graph_title_cache($local_graph_id);\n\n\t\t\t/* if the host id changes, then update the graph items association too */\n\t\t\tif (get_request_var('host_id') != get_request_var('host_id_prev')) {\n\t\t\t\tif (!api_graph_change_device($local_graph_id, get_request_var('host_id'))) {\n\t\t\t\t\traise_message(34);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$lg_template_id = db_fetch_cell_prepared('SELECT graph_template_id\n\t\t\t\tFROM graph_local\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($local_graph_id)\n\t\t\t);\n\n\t\t\tif ($lg_template_id > 0) {\n\t\t\t\tchange_graph_template($local_graph_id, $gt_id_unparsed);\n\n\t\t\t\t$lg_dq_id = db_fetch_cell_prepared('SELECT snmp_query_id\n\t\t\t\t\tFROM graph_local\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($local_graph_id)\n\t\t\t\t);\n\n\t\t\t\tif ($lg_dq_id > 0) {\n\t\t\t\t\tupdate_graph_data_query_cache($local_graph_id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (isset_request_var('save_component_input')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('local_graph_id');\n\t\t/* ==================================================== */\n\n\t\t/* first; get the current graph template id */\n\t\t$graph_template_id = db_fetch_cell_prepared('SELECT graph_template_id\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_nfilter_request_var('local_graph_id')));\n\n\t\t/* get all inputs that go along with this graph template, if templated */\n\t\tif ($graph_template_id > 0) {\n\t\t\t$input_list = db_fetch_assoc_prepared('SELECT id, column_name\n\t\t\t\tFROM graph_template_input\n\t\t\t\tWHERE graph_template_id = ?',\n\t\t\t\tarray($graph_template_id));\n\n\t\t\tif (cacti_sizeof($input_list)) {\n\t\t\t\tforeach ($input_list as $input) {\n\t\t\t\t\t/* we need to find out which graph items will be affected by saving this particular item */\n\t\t\t\t\t$item_list = db_fetch_assoc_prepared('SELECT gti.id\n\t\t\t\t\t\tFROM graph_template_input_defs AS gtid\n\t\t\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\t\t\tON gtid.graph_template_item_id=gti.local_graph_template_item_id\n\t\t\t\t\t\tWHERE gti.local_graph_id = ?\n\t\t\t\t\t\tAND gtid.graph_template_input_id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('local_graph_id'), $input['id']));\n\n\t\t\t\t\t/* loop through each item affected and update column data */\n\t\t\t\t\tif (cacti_sizeof($item_list)) {\n\t\t\t\t\t\tforeach ($item_list as $item) {\n\t\t\t\t\t\t\t/* if we are changing templates, the POST vars we are searching for here will not exist.\n\t\t\t\t\t\t\t this is because the db and form are out of sync here, but it is ok to just skip over saving\n\t\t\t\t\t\t\t the inputs in this case. */\n\t\t\t\t\t\t\tif (isset_request_var($input['column_name'] . '_' . $input['id'])) {\n\t\t\t\t\t\t\t\tdb_execute_prepared('UPDATE graph_templates_item\n\t\t\t\t\t\t\t\t\tSET ' . $input['column_name'] . ' = ?\n\t\t\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\t\t\tarray(get_nfilter_request_var($input['column_name'] . '_' . $input['id']), $item['id']));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif ((isset_request_var('save_component_graph_new')) && (isempty_request_var('graph_template_id'))) {\n\t\theader('Location: graphs.php?action=graph_edit&header=false&host_id=' . get_nfilter_request_var('host_id') . '&new=1');\n\t} elseif ((is_error_message()) || (isempty_request_var('local_graph_id')) || (get_nfilter_request_var('graph_template_id') != get_nfilter_request_var('graph_template_id_prev')) || (get_nfilter_request_var('host_id') != get_nfilter_request_var('host_id_prev'))) {\n\t\theader('Location: graphs.php?action=graph_edit&header=false&id=' . (empty($local_graph_id) ? get_nfilter_request_var('local_graph_id') : $local_graph_id) . (isset_request_var('host_id') ? '&host_id=' . get_nfilter_request_var('host_id') : ''));\n\t} else {\n\t\theader('Location: graphs.php?header=false');\n\t}\n}\n\n/* ------------------------\n    The \"actions\" function\n   ------------------------ */\n\nfunction get_current_graph_template_details($local_graph_id) {\n\t$graph_local = db_fetch_row_prepared('SELECT *\n\t\tFROM graph_local\n\t\tWHERE id = ?',\n\t\tarray($local_graph_id));\n\n\tif (!cacti_sizeof($graph_local) || $graph_local['graph_template_id'] == 0) {\n\t\treturn array('id' => 0, 'name' => __('Not Templated'), 'source' => 0);\n\t} elseif ($graph_local['snmp_query_id'] > 0) {\n\t\t$detail = db_fetch_row_prepared('SELECT sqg.id, sqg.name\n\t\t\tFROM snmp_query_graph AS sqg\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.snmp_query_graph_id=sqg.id\n\t\t\tAND gl.snmp_query_id=sqg.snmp_query_id\n\t\t\tWHERE gl.id = ?',\n\t\t\tarray($local_graph_id));\n\n\t\tif (cacti_sizeof($detail)) {\n\t\t\treturn array('id' => $detail['id'], 'name' => $detail['name'], 'source' => 1);\n\t\t} else {\n\t\t\treturn array('id' => 0, 'name' => __('Not Found'), 'source' => 1);\n\t\t}\n\t} else {\n\t\t$detail = db_fetch_row_prepared('SELECT gt.id, gt.name\n\t\t\tFROM graph_templates AS gt\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.graph_template_id=gt.id\n\t\t\tWHERE gl.id = ?',\n\t\t\tarray($local_graph_id));\n\n\t\tif (cacti_sizeof($detail)) {\n\t\t\treturn array('id' => $detail['id'], 'name' => $detail['name'], 'source' => 2);\n\t\t} else {\n\t\t\treturn array('id' => 0, 'name' => __('Not Found'), 'source' => 2);\n\t\t}\n\t}\n}\n\nfunction get_current_graph_template($local_graph_id) {\n\t$graph_local = db_fetch_row_prepared('SELECT *\n\t\tFROM graph_local\n\t\tWHERE id = ?',\n\t\tarray($local_graph_id));\n\n\t$task_items = db_fetch_cell_prepared('SELECT GROUP_CONCAT(DISTINCT task_item_id) AS items\n\t\tFROM graph_templates_item\n\t\tWHERE local_graph_id = ?',\n\t\tarray($local_graph_id));\n\n\tif ($task_items != '') {\n\t\t$local_data_id = db_fetch_cell(\"SELECT DISTINCT local_data_id\n\t\t\tFROM data_template_rrd\n\t\t\tWHERE id IN($task_items)\");\n\t} else {\n\t\t$local_data_id = 0;\n\t}\n\n\tif ($local_data_id > 0) {\n\t\t$data = db_fetch_row_prepared('SELECT id, data_input_id, data_template_id, name, local_data_id\n\t\t\tFROM data_template_data\n\t\t\tWHERE local_data_id = ?',\n\t\t\tarray($local_data_id));\n\n\t\t/* get each INPUT field for this data input source */\n\t\t$output_type_field_id = db_fetch_cell_prepared('SELECT id\n\t\t\tFROM data_input_fields\n\t\t\tWHERE data_input_id = ?\n\t\t\tAND input_output=\"in\"\n\t\t\tAND type_code=\"output_type\"\n\t\t\tORDER BY sequence',\n\t\t\tarray($data['data_input_id']));\n\n\t\t$snmp_query_graph_id = db_fetch_cell_prepared('SELECT value\n\t\t\tFROM data_input_data\n\t\t\tWHERE data_template_data_id = ?\n\t\t\tAND data_input_field_id = ?',\n\t\t\tarray($data['id'], $output_type_field_id));\n\n\t\tif (!empty($snmp_query_graph_id)) {\n\t\t\treturn $graph_local['graph_template_id'] . '_' . $snmp_query_graph_id;\n\t\t} else {\n\t\t\treturn $graph_local['graph_template_id'];\n\t\t}\n\t} else {\n\t\treturn $graph_local['graph_template_id'];\n\t}\n}\n\nfunction get_common_graph_templates(&$graph) {\n\t$dqid = 0;\n\n\tif (cacti_sizeof($graph)) {\n\t\t$dqid = db_fetch_cell_prepared('SELECT snmp_query_id\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray($graph['local_graph_id']));\n\t}\n\n\tif ($dqid > 0) {\n\t\t$sqgi = db_fetch_cell_prepared('SELECT GROUP_CONCAT(id) AS id\n\t\t\tFROM snmp_query_graph\n\t\t\tWHERE snmp_query_id = ?\n\t\t\tAND graph_template_id = ?',\n\t\t\tarray($dqid, $graph['graph_template_id']));\n\n\t\tif ($sqgi != '') {\n\t\t\t$query_fields = array_rekey(db_fetch_assoc_prepared('SELECT snmp_query_graph_id,\n\t\t\t\tGROUP_CONCAT(snmp_field_name ORDER BY snmp_field_name) AS columns\n\t\t\t\tFROM snmp_query_graph_rrd\n\t\t\t\tWHERE snmp_query_graph_id IN (' . $sqgi . ')\n\t\t\t\tGROUP BY snmp_query_graph_id'), 'snmp_query_graph_id', 'columns');\n\n\t\t\t$ids = array_to_sql_or(array_values($query_fields), 'columns');\n\n\t\t\t$common_graph_ids = array_rekey(db_fetch_assoc_prepared('SELECT\n\t\t\t\tsnmp_query_graph_id, GROUP_CONCAT(snmp_field_name ORDER BY snmp_field_name) AS columns\n\t\t\t\tFROM snmp_query_graph_rrd\n\t\t\t\tGROUP BY snmp_query_graph_id\n\t\t\t\tHAVING ' . $ids), 'snmp_query_graph_id', 'columns');\n\n\t\t\t$ids = implode(',', array_keys($common_graph_ids));\n\n\t\t\t$gtids = db_fetch_cell_prepared('SELECT GROUP_CONCAT(DISTINCT graph_template_id) AS gtids\n\t\t\t\tFROM snmp_query_graph\n\t\t\t\tWHERE snmp_query_id = ?\n\t\t\t\tAND id IN (' . $ids . ')',\n\t\t\t\tarray($dqid));\n\n\t\t\t$gtsql = \"SELECT CONCAT_WS('', graph_template_id, '_', id, '') AS id, name\n\t\t\t\tFROM snmp_query_graph\n\t\t\t\tWHERE (snmp_query_id = $dqid AND id IN ($ids))\n\t\t\t\tOR graph_template_id IN ($gtids) ORDER BY name\";\n\t\t} else {\n\t\t\t$gtsql = 'SELECT gt.id, gt.name FROM graph_templates AS gt ORDER BY name';\n\t\t}\n\t} else {\n\t\t$gtsql = 'SELECT gt.id, gt.name FROM graph_templates AS gt ORDER BY name';\n\t}\n\n\treturn $gtsql;\n}\n\nfunction form_actions() {\n\tglobal $graph_actions, $struct_aggregate;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t\tif (!isset_request_var('delete_type')) {\n\t\t\t\t\tset_request_var('delete_type', 1);\n\t\t\t\t}\n\n\t\t\t\tapi_delete_graphs($selected_items, get_filter_request_var('delete_type'));\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // change graph template\n\t\t\t\t$gt_id_unparsed      = get_nfilter_request_var('graph_template_id');\n\t\t\t\t$gt_id_prev_unparsed = get_nfilter_request_var('graph_template_id_prev');\n\t\t\t\tparse_validate_graph_template_id('graph_template_id');\n\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tchange_graph_template($selected_items[$i], $gt_id_unparsed, true);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '3') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_duplicate_graph($selected_items[$i], 0, get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '4') { // graph -> graph template\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tgraph_to_graph_template($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (preg_match('/^tr_([0-9]+)$/', get_request_var('drp_action'), $matches)) { // place on tree\n\t\t\t\tget_filter_request_var('tree_id');\n\t\t\t\tget_filter_request_var('tree_item_id');\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_tree_item_save(0, get_nfilter_request_var('tree_id'), TREE_ITEM_TYPE_GRAPH, get_nfilter_request_var('tree_item_id'), '', $selected_items[$i], 0, 0, 0, 0, false);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '5') { // change host\n\t\t\t\tget_filter_request_var('host_id');\n\t\t\t\t$failures = false;\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tif (!api_graph_change_device($selected_items[$i], get_request_var('host_id'))) {\n\t\t\t\t\t\t$failures = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($failures) {\n\t\t\t\t\t\traise_message(33);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '6') { // reapply suggested naming\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_reapply_suggested_graph_title($selected_items[$i]);\n\t\t\t\t\tupdate_graph_title_cache($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '9' || get_request_var('drp_action') == '10') {\n\t\t\t\t/* get common info - not dependant on template/no template*/\n\t\t\t\t$local_graph_id = 0; // this will be a new graph\n\t\t\t\t$member_graphs  = $selected_items;\n\t\t\t\t$graph_title    = form_input_validate(get_nfilter_request_var('title_format'), 'title_format', '', true, 3);\n\n\t\t\t\t/* future aggregate_graphs entry */\n\t\t\t\t$ag_data = array();\n\t\t\t\t$ag_data['id'] = 0;\n\t\t\t\t$ag_data['title_format'] = $graph_title;\n\t\t\t\t$ag_data['user_id']      = $_SESSION['sess_user_id'];\n\n\t\t\t\tif (get_request_var('drp_action') == '9') {\n\t\t\t\t\tif (!isset_request_var('aggregate_total_type'))   set_request_var('aggregate_total_type', 0);\n\t\t\t\t\tif (!isset_request_var('aggregate_total'))        set_request_var('aggregate_total', 0);\n\t\t\t\t\tif (!isset_request_var('aggregate_total_prefix')) set_request_var('aggregate_total_prefix', '');\n\t\t\t\t\tif (!isset_request_var('aggregate_order_type'))   set_request_var('aggregate_order_type', 0);\n\n\t\t\t\t\t$item_no = form_input_validate(get_nfilter_request_var('item_no'), 'item_no', '^[0-9]+$', true, 3);\n\n\t\t\t\t\t$ag_data['aggregate_template_id'] = 0;\n\t\t\t\t\t$ag_data['template_propogation']  = '';\n\t\t\t\t\t$ag_data['graph_template_id']     = form_input_validate(get_nfilter_request_var('graph_template_id'), 'graph_template_id', '^[0-9]+$', true, 3);\n\t\t\t\t\t$ag_data['gprint_prefix']         = form_input_validate(get_nfilter_request_var('gprint_prefix'), 'gprint_prefix', '', true, 3);\n\t\t\t\t\t$ag_data['graph_type']            = form_input_validate(get_nfilter_request_var('aggregate_graph_type'), 'aggregate_graph_type', '^[0-9]+$', true, 3);\n\t\t\t\t\t$ag_data['total']                 = form_input_validate(get_nfilter_request_var('aggregate_total'), 'aggregate_total', '^[0-9]+$', true, 3);\n\t\t\t\t\t$ag_data['total_type']            = form_input_validate(get_nfilter_request_var('aggregate_total_type'), 'aggregate_total_type', '^[0-9]+$', true, 3);\n\t\t\t\t\t$ag_data['total_prefix']          = form_input_validate(get_nfilter_request_var('aggregate_total_prefix'), 'aggregate_total_prefix', '', true, 3);\n\t\t\t\t\t$ag_data['order_type']            = form_input_validate(get_nfilter_request_var('aggregate_order_type'), 'aggregate_order_type', '^[0-9]+$', true, 3);\n\t\t\t\t} else {\n\t\t\t\t\t$template_data = db_fetch_row_prepared('SELECT *\n\t\t\t\t\t\tFROM aggregate_graph_templates\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('aggregate_template_id')));\n\n\t\t\t\t\t$item_no = db_fetch_cell_prepared('SELECT COUNT(*)\n\t\t\t\t\t\tFROM aggregate_graph_templates_item\n\t\t\t\t\t\tWHERE aggregate_template_id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('aggregate_template_id')));\n\n\t\t\t\t\t$ag_data['aggregate_template_id'] = get_nfilter_request_var('aggregate_template_id');\n\t\t\t\t\t$ag_data['template_propogation']  = 'on';\n\t\t\t\t\t$ag_data['graph_template_id']     = $template_data['graph_template_id'];\n\t\t\t\t\t$ag_data['gprint_prefix']         = $template_data['gprint_prefix'];\n\t\t\t\t\t$ag_data['graph_type']            = $template_data['graph_type'];\n\t\t\t\t\t$ag_data['total']                 = $template_data['total'];\n\t\t\t\t\t$ag_data['total_type']            = $template_data['total_type'];\n\t\t\t\t\t$ag_data['total_prefix']          = $template_data['total_prefix'];\n\t\t\t\t\t$ag_data['order_type']            = $template_data['order_type'];\n\t\t\t\t}\n\n\t\t\t\t/* create graph in cacti tables */\n\t\t\t\t$local_graph_id = aggregate_graph_save(\n\t\t\t\t\t$local_graph_id,\n\t\t\t\t\t$ag_data['graph_template_id'],\n\t\t\t\t\t$graph_title,\n\t\t\t\t\t$ag_data['aggregate_template_id']\n\t\t\t\t);\n\n\t\t\t\t$ag_data['local_graph_id'] = $local_graph_id;\n\t\t\t\t$aggregate_graph_id = sql_save($ag_data, 'aggregate_graphs');\n\t\t\t\t$ag_data['aggregate_graph_id'] = $aggregate_graph_id;\n\n\t\t\t\t// \t/* save member graph info */\n\t\t\t\t// \t$i = 1;\n\t\t\t\t// \tforeach($member_graphs as $graph_id) {\n\t\t\t\t// \t\tdb_execute(\"INSERT INTO aggregate_graphs_items\n\t\t\t\t// \t\t\t(aggregate_graph_id, local_graph_id, sequence)\n\t\t\t\t// \t\t\tVALUES\n\t\t\t\t// \t\t\t($aggregate_graph_id, $graph_id, $i)\"\n\t\t\t\t// \t\t);\n\t\t\t\t// \t\t$i++;\n\t\t\t\t// \t}\n\n\t\t\t\t/* save aggregate graph graph items */\n\t\t\t\tif (get_request_var('drp_action') == '9') {\n\t\t\t\t\t/* get existing item ids and sequences from graph template */\n\t\t\t\t\t$graph_templates_items = array_rekey(\n\t\t\t\t\t\tdb_fetch_assoc_prepared('SELECT id, sequence\n\t\t\t\t\t\t\tFROM graph_templates_item\n\t\t\t\t\t\t\tWHERE local_graph_id=0\n\t\t\t\t\t\t\tAND graph_template_id = ?',\n\t\t\t\t\t\t\tarray($ag_data['graph_template_id'])),\n\t\t\t\t\t\t'id', array('sequence')\n\t\t\t\t\t);\n\n\t\t\t\t\t/* update graph template item values with posted values */\n\t\t\t\t\taggregate_validate_graph_items($_POST, $graph_templates_items);\n\n\t\t\t\t\t$aggregate_graph_items = array();\n\t\t\t\t\tforeach ($graph_templates_items as $item_id => $data) {\n\t\t\t\t\t\t$item_new                            = array();\n\t\t\t\t\t\t$item_new['aggregate_graph_id']      = $aggregate_graph_id;\n\t\t\t\t\t\t$item_new['graph_templates_item_id'] = $item_id;\n\n\t\t\t\t\t\t$item_new['color_template']          = isset($data['color_template']) ? $data['color_template'] : 0;\n\t\t\t\t\t\t$item_new['item_skip']               = isset($data['item_skip']) ? 'on' : '';\n\t\t\t\t\t\t$item_new['item_total']              = isset($data['item_total']) ? 'on' : '';\n\t\t\t\t\t\t$item_new['sequence']                = isset($data['sequence']) ? $data['sequence'] : 0;\n\n\t\t\t\t\t\t$aggregate_graph_items[]             = $item_new;\n\t\t\t\t\t}\n\n\t\t\t\t\taggregate_graph_items_save($aggregate_graph_items, 'aggregate_graphs_graph_item');\n\t\t\t\t} else {\n\t\t\t\t\t$aggregate_graph_items = db_fetch_assoc_prepared('SELECT *\n\t\t\t\t\t\tFROM aggregate_graph_templates_item\n\t\t\t\t\t\tWHERE aggregate_template_id = ?',\n\t\t\t\t\t\tarray($ag_data['aggregate_template_id']));\n\t\t\t\t}\n\n\t\t\t\t$attribs = $ag_data;\n\t\t\t\t$attribs['graph_title'] = $ag_data['title_format'];\n\t\t\t\t$attribs['reorder'] = $ag_data['order_type'];\n\t\t\t\t$attribs['item_no'] = $item_no;\n\t\t\t\t$attribs['color_templates'] = array();\n\t\t\t\t$attribs['skipped_items']   = array();\n\t\t\t\t$attribs['total_items']     = array();\n\t\t\t\t$attribs['graph_item_types']= array();\n\t\t\t\t$attribs['cdefs']           = array();\n\t\t\t\tforeach ($aggregate_graph_items as $item) {\n\t\t\t\t\tif (isset($item['color_template']) && $item['color_template'] > 0)\n\t\t\t\t\t\t$attribs['color_templates'][ $item['sequence'] ] = $item['color_template'];\n\n\t\t\t\t\tif (isset($item['item_skip']) && $item['item_skip'] == 'on')\n\t\t\t\t\t\t$attribs['skipped_items'][ $item['sequence'] ] = $item['sequence'];\n\n\t\t\t\t\tif (isset($item['item_total']) && $item['item_total'] == 'on')\n\t\t\t\t\t\t$attribs['total_items'][ $item['sequence'] ] = $item['sequence'];\n\n\t\t\t\t\tif (isset($item['cdef_id']) && isset($item['t_cdef_id']) && $item['t_cdef_id'] == 'on')\n\t\t\t\t\t\t$attribs['cdefs'][ $item['sequence'] ] = $item['cdef_id'];\n\n\t\t\t\t\tif (isset($item['graph_type_id']) && isset($item['t_graph_type_id']) && $item['t_graph_type_id'] == 'on')\n\t\t\t\t\t\t$attribs['graph_item_types'][ $item['sequence'] ] = $item['graph_type_id'];\n\t\t\t\t}\n\n\t\t\t\t/* create actual graph items */\n\t\t\t\taggregate_create_update($local_graph_id, $member_graphs, $attribs);\n\n\t\t\t\theader(\"Location: aggregate_graphs.php?header=false&action=edit&tab=details&id=$local_graph_id\");\n\t\t\t\texit;\n\t\t\t} elseif (get_request_var('drp_action') == '8') { // automation\n\t\t\t\tcacti_log('automation_graph_action_execute called: ' . $action, true, 'AUTM8 TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t/* work on all selected graphs */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tautomation_execute_graph_create_tree($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '11') {\n\t\t\t\t// Add to a report\n\t\t\t\t$good = true;\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tif (!reports_add_graphs(get_filter_request_var('report_id'), $selected_items[$i], get_request_var('timespan'), get_request_var('align'))) {\n\t\t\t\t\t\traise_message('reports_add_error');\n\t\t\t\t\t\t$good = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($good) {\n\t\t\t\t\traise_message('reports_graphs_added');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tapi_plugin_hook_function('graphs_action_execute', get_request_var('drp_action'));\n\t\t\t}\n\n\t\t\t/* update snmpcache */\n\t\t\tsnmpagent_graphs_action_bottom(array(get_request_var('drp_action'), $selected_items));\n\t\t\tapi_plugin_hook_function('graphs_action_bottom', array(get_request_var('drp_action'), $selected_items));\n\t\t}\n\n\t\tif (get_request_var('drp_action') == '2') { // change graph template\n\t\t\theader('Location: graphs.php?header=false&template_id=-1');\n\t\t} else {\n\t\t\theader('Location: graphs.php?header=false');\n\t\t}\n\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$i          = 0;\n\t$graph_list = '';\n\t$graph      = array();\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$graph_list .= '<li>' . html_escape(get_graph_title($matches[1])) . '</li>';\n\t\t\t$graph_array[$i] = $matches[1];\n\n\t\t\tif ($i == 0) {\n\t\t\t\t$graph = db_fetch_row_prepared('SELECT id AS local_graph_id, graph_template_id\n\t\t\t\t\tFROM graph_local\n\t\t\t\t\tWHERE id = ?\n\t\t\t\t\tLIMIT 1',\n\t\t\t\t\tarray($matches[1]));\n\t\t\t}\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\t/* add a list of tree names to the actions dropdown */\n\tadd_tree_names_to_actions_array();\n\n\tform_start('graphs.php');\n\n\thtml_start_box($graph_actions{get_request_var('drp_action')}, '60%', '', '3', 'center', '');\n\n\tif (isset($graph_array) && cacti_sizeof($graph_array)) {\n\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\t/* find out which (if any) data sources are being used by this graph, so we can tell the user */\n\t\t\tif (isset($graph_array) && cacti_sizeof($graph_array)) {\n\t\t\t\t$data_sources = array_rekey(\n\t\t\t\t\tdb_fetch_assoc('SELECT DISTINCT dtd.local_data_id, dtd.name_cache\n\t\t\t\t\t\tFROM data_template_data AS dtd\n\t\t\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\t\t\tON dtr.local_data_id=dtd.local_data_id\n\t\t\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\t\t\tON dtr.id=gti.task_item_id\n\t\t\t\t\t\tWHERE ' . array_to_sql_or($graph_array, 'gti.local_graph_id') . '\n\t\t\t\t\t\tAND dtd.local_data_id > 0'),\n\t\t\t\t\t'local_data_id', array('local_data_id', 'name_cache'));\n\n\t\t\t\t/* data sources to delete */\n\t\t\t\t$data_array = array_keys($data_sources);\n\n\t\t\t\tif (cacti_sizeof($data_array)) {\n\t\t\t\t\t$not_deletable = array_rekey(\n\t\t\t\t\t\tdb_fetch_assoc('SELECT DISTINCT dtd.local_data_id\n\t\t\t\t\t\t\tFROM data_template_data AS dtd\n\t\t\t\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\t\t\t\tON dtr.local_data_id=dtd.local_data_id\n\t\t\t\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\t\t\t\tON dtr.id=gti.task_item_id\n\t\t\t\t\t\t\tWHERE gti.local_graph_id NOT IN(' . implode(',', $graph_array) . ')\n\t\t\t\t\t\t\tAND dtr.local_data_id IN(' . implode(',', $data_array) . ')\n\t\t\t\t\t\t\tAND dtd.local_data_id > 0'),\n\t\t\t\t\t\t'local_data_id', 'local_data_id');\n\t\t\t\t} else {\n\t\t\t\t\t$not_deletable = array();\n\t\t\t\t}\n\n\t\t\t\tif (cacti_sizeof($not_deletable)) {\n\t\t\t\t\t$data_sources = array_rekey(\n\t\t\t\t\t\tdb_fetch_assoc('SELECT DISTINCT dtd.local_data_id, dtd.name_cache\n\t\t\t\t\t\t\tFROM data_template_data AS dtd\n\t\t\t\t\t\t\tINNER JOIN data_template_rrd AS dtr\n\t\t\t\t\t\t\tON dtr.local_data_id=dtd.local_data_id\n\t\t\t\t\t\t\tINNER JOIN graph_templates_item AS gti\n\t\t\t\t\t\t\tON dtr.id=gti.task_item_id\n\t\t\t\t\t\t\tWHERE gti.local_graph_id IN (' . implode(',', $graph_array) . ')\n\t\t\t\t\t\t\tAND dtr.local_data_id NOT IN (' . implode(',', $not_deletable) . ')\n\t\t\t\t\t\t\tAND dtd.local_data_id > 0'),\n\t\t\t\t\t\t'local_data_id', array('local_data_id', 'name_cache'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Graph(s).  Note that if you choose to Delete Data Sources, only those Data Sources not in use elsewhere will also be Deleted.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\";\n\n\t\t\tif (isset($data_sources) && cacti_sizeof($data_sources)) {\n\t\t\t\tprint \"<tr><td class='textArea'><p>\" . __('The following Data Source(s) are in use by these Graph(s).') . \"</p>\\n\";\n\n\t\t\t\tprint '<div class=\"itemlist\"><ul>';\n\t\t\t\tforeach ($data_sources as $data_source) {\n\t\t\t\t\tprint '<li>' . html_escape($data_source['name_cache']) . \"</li>\\n\";\n\t\t\t\t}\n\t\t\t\tprint '</ul></div><br>';\n\n\t\t\t\tprint '<span class=\"nowrap\">';\n\t\t\t\tform_radio_button('delete_type', '2', '2', __('Delete all Data Source(s) referenced by these Graph(s) that are not in use elsewhere.'), '1');\n\t\t\t\tprint '<br>';\n\t\t\t\tform_radio_button('delete_type', '2', '1', __('Leave the Data Source(s) untouched.'), '1');\n\t\t\t\tprint '<br>';\n\t\t\t\tprint '</span>';\n\t\t\t\tprint '</td></tr>';\n\t\t\t}\n\n\t\t\tprint \"</td></tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') .\"' title='\" . __esc('Delete Graph(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // change graph template\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Choose a Graph Template and click \\'Continue\\' to change the Graph Template for the following Graph(s). Please note, that only compatible Graph Templates will be displayed.  Compatible is identified by those having identical Data Sources.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t<p>\" . __('New Graph Template') . \"<br>\";\n\n\t\t\t\t\t$gtsql = get_common_graph_templates($graph);\n\n\t\t\t\t\tform_dropdown('graph_template_id', db_fetch_assoc($gtsql), 'name', 'id', '', '', '0');\n\n\t\t\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Change Graph Template') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '3') { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to duplicate the following Graph(s). You can optionally change the title format for the new Graph(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t<p>\" . __('Title Format') . \"<br>\";\n\t\t\tform_text_box('title_format', __('<graph_title> (1)'), '', '255', '30', 'text');\n\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Duplicate Graph(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '4') { // graph -> graph template\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to convert the following Graph(s) into Graph Template(s).  You can optionally change the title format for the new Graph Template(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t<p>\" . __('Title Format') . \"<br>\";\n\t\t\tform_text_box('title_format', __('<graph_title> Template'), '', '255', '30', 'text');\n\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Convert to Graph Template') . \"'>\";\n\t\t} elseif (preg_match('/^tr_([0-9]+)$/', get_request_var('drp_action'), $matches)) { // place on tree\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to place the following Graph(s) under the Tree Branch selected below.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t<p>\" . __('Destination Branch') . \"<br>\";\n\n\t\t\tgrow_dropdown_tree($matches[1], '0', 'tree_item_id', '0');\n\n\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<input type='hidden' name='tree_id' value='\" . html_escape($matches[1]) . \"'>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Place Graph(s) on Tree') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '5') { // change host\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Choose a new Device for these Graph(s) and click \\'Continue\\'.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t<p>\" . __('New Device'). \"<br>\";\n\n\t\t\tform_dropdown('host_id',db_fetch_assoc(\"SELECT id,CONCAT_WS('',description,' (',hostname,')') as name FROM host ORDER BY description,hostname\"),'name','id','','','0');\n\n\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Change Graph(s) Associated Device') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '6') { // reapply suggested naming to host\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to re-apply suggested naming to the following Graph(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Reapply Suggested Naming to Graph(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '9') {\n\t\t\tinclude_once('./lib/api_aggregate.php');\n\n\t\t\t/* initialize return code and graphs array */\n\t\t\t$return_code    = false;\n\t\t\t$data_sources   = array();\n\t\t\t$graph_template = '';\n\n\t\t\tif (aggregate_get_data_sources($graph_array, $data_sources, $graph_template)) {\n\t\t\t\t# provide a new prefix for GPRINT lines\n\t\t\t\t$gprint_prefix = '|host_hostname|';\n\n\t\t\t\t/* list affected graphs */\n\t\t\t\tprint '<tr>';\n\t\t\t\tprint \"<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to create an Aggregate Graph from the selected Graph(s).'). \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>\" . get_nfilter_request_var('graph_list') . '</ul></div>\n\t\t\t\t</td></tr>';\n\n\t\t\t\t/* list affected data sources */\n\t\t\t\tprint '<tr>';\n\n\t\t\t\tif (cacti_sizeof($data_sources)) {\n\t\t\t\t\tprint \"<td class='textArea'>\" .\n\t\t\t\t\t'<p>' . __('The following data sources are in use by these graphs:') . '</p>\n\t\t\t\t\t<div class=\"itemlist\"><ul>';\n\t\t\t\t\tforeach ($data_sources as $data_source) {\n\t\t\t\t\t\tprint '<li>' . html_escape($data_source['name_cache']) . '</li>';\n\t\t\t\t\t}\n\t\t\t\t\tprint '</ul></div></td>';\n\t\t\t\t}\n\t\t\t\tprint '</tr>';\n\n\t\t\t\tprint '<tr><td>';\n\n\t\t\t\t$ttitle = $graph_array[0];\n\n\t\t\t\t/* aggregate form */\n\t\t\t\t$_aggregate_defaults = array(\n\t\t\t\t\t'title_format'      => auto_title($ttitle),\n\t\t\t\t\t'graph_template_id' => $graph_template,\n\t\t\t\t\t'gprint_prefix'     => $gprint_prefix\n\t\t\t\t);\n\n\t\t\t\tdraw_edit_form(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t\t'fields' => inject_form_variables($struct_aggregate, $_aggregate_defaults)\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t# draw all graph items of first graph, including a html_start_box\n\t\t\t\tdraw_aggregate_graph_items_list(0, $graph_template);\n\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\t# again, a new html_start_box. Using the one from above would yield ugly formatted NO and YES buttons\n\t\t\t\thtml_start_box(__('Please confirm'), '100%', '', '3', 'center', '');\n\n\t\t\t\t?>\n\t\t\t\t<script type='text/javascript'>\n\t\t\t\tfunction changeTotals() {\n\t\t\t\t\tswitch ($('#aggregate_total').val()) {\n\t\t\t\t\t\tcase '<?php print AGGREGATE_TOTAL_NONE;?>':\n\t\t\t\t\t\t\t$('#aggregate_total_type').prop('disabled', true);\n\t\t\t\t\t\t\t$('#aggregate_total_prefix').prop('disabled', true);\n\t\t\t\t\t\t\t$('#aggregate_order_type').prop('disabled', false);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '<?php print AGGREGATE_TOTAL_ALL;?>':\n\t\t\t\t\t\t\t$('#aggregate_total_type').prop('disabled', false);\n\t\t\t\t\t\t\t$('#aggregate_total_prefix').prop('disabled', false);\n\t\t\t\t\t\t\t$('#aggregate_order_type').prop('disabled', false);\n\t\t\t\t\t\t\tchangeTotalsType();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '<?php print AGGREGATE_TOTAL_ONLY;?>':\n\t\t\t\t\t\t\t$('#aggregate_total_type').prop('disabled', false);\n\t\t\t\t\t\t\t$('#aggregate_total_prefix').prop('disabled', false);\n\t\t\t\t\t\t\t$('#aggregate_order_type').prop('disabled', true);\n\t\t\t\t\t\t\tchangeTotalsType();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction changeTotalsType() {\n\t\t\t\t\tif (($('#aggregate_total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_SIMILAR;?>)) {\n\t\t\t\t\t\t$('#aggregate_total_prefix').attr('value', '<?php print __('Total');?>');\n\t\t\t\t\t} else if (($('#aggregate_total_type').val() == <?php print AGGREGATE_TOTAL_TYPE_ALL;?>)) {\n\t\t\t\t\t\t$('#aggregate_total_prefix').attr('value', '<?php print __('All Items');?>');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$(function() {\n\t\t\t\t\t$('#aggregate_total').change(function() {\n\t\t\t\t\t\tchangeTotals();\n\t\t\t\t\t});\n\n\t\t\t\t\t$('#aggregate_total_type').change(function() {\n\t\t\t\t\t\tchangeTotalsType();\n\t\t\t\t\t});\n\n\t\t\t\t\t$('input[id^=\"agg_total\"], input[id^=\"agg_skip\"]').click(function() {\n\t\t\t\t\t\tid = $(this).attr('id');\n\n\t\t\t\t\t\tif (id.indexOf('skip') > 0) {\n\t\t\t\t\t\t\taltId = id.replace('skip', 'total');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taltId = id.replace('total', 'skip');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($('#'+id).is(':checked')) {\n\t\t\t\t\t\t\t$('#'+altId).prop('checked', false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$('#'+altId).prop('checked', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t$('input[id^=\"agg_skip\"]').each(function() {\n\t\t\t\t\t\t$(this).prop('checked', true);\n\t\t\t\t\t});\n\n\t\t\t\t\tchangeTotals();\n\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t\t<?php\n\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Resize Selected Graph(s)') . \"'>\";\n\t\t\t} else {\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t}\n\t\t} elseif (get_request_var('drp_action') == '10') { // aggregate template\n\t\t\tinclude_once('./lib/api_aggregate.php');\n\n\t\t\t/* initialize return code and graphs array */\n\t\t\t$data_sources   = array();\n\t\t\t$graph_template = '';\n\n\t\t\t/* find out which (if any) data sources are being used by this graph, so we can tell the user */\n\t\t\tif (aggregate_get_data_sources($graph_array, $data_sources, $graph_template)) {\n\t\t\t\t$aggregate_templates = db_fetch_assoc_prepared('SELECT id, name\n\t\t\t\t\tFROM aggregate_graph_templates\n\t\t\t\t\tWHERE graph_template_id = ?\n\t\t\t\t\tORDER BY name', array($graph_template));\n\n\t\t\t\tif (cacti_sizeof($aggregate_templates)) {\n\t\t\t\t\t/* list affected graphs */\n\t\t\t\t\tprint \"<tr>\n\t\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t\t<p>\" . __('Select the Aggregate Template to use and press \\'Continue\\' to create your Aggregate Graph.  Otherwise press \\'Cancel\\' to return.') . \"</p>\n\t\t\t\t\t\t\t<div class='itemlist'><ul>\" . $graph_list . \"</ul></div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\\n\";\n\n\t\t\t\t\tprint \"<tr><td><table>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\" . __('Graph Title') . \"</td>\n\t\t\t\t\t\t\t<td><input type='text' class='ui-state-default ui-corner-all' name='title_format' size='40'></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\" . __('Aggregate Template') . \"</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<select name='aggregate_template_id'>\\n\";\n\n\t\t\t\t\thtml_create_list($aggregate_templates, 'name', 'id', $aggregate_templates[0]['id']);\n\n\t\t\t\t\tprint \"</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr></table></td></tr>\\n\";\n\n\t\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Create Aggregate') . \"'>\";\n\t\t\t\t} else {\n\t\t\t\t\tprint \"<tr>\n\t\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t\t<p>\" . __('There are presently no Aggregate Templates defined for this Graph Template.  Please either first create an Aggregate Template for the selected Graphs Graph Template and try again, or simply crease an un-templated Aggregate Graph.') . \"</p>\n\t\t\t\t\t\t\t<p>\" . __('Press \\'Return\\' to return and select different Graphs.') . \"</p>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\\n\";\n\n\t\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t}\n\t\t} elseif (get_request_var('drp_action') == 8) { // automation\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to apply Automation Rules to the following Graphs.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Apply Automation Rules') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '11') {\n\t\t\tglobal $alignment, $graph_timespans;\n\n\t\t\t$reports = db_fetch_assoc_prepared('SELECT id, name\n\t\t\t\tFROM reports\n\t\t\t\tWHERE user_id = ?\n\t\t\t\tORDER BY name',\n\t\t\t\tarray($_SESSION['sess_user_id']));\n\n\t\t\tif (cacti_sizeof($reports)) {\n\t\t\t\tprint \"<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to add the selected Graphs to the Report below.') . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$graph_list</ul></div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr><td>\" . __('Report Name') . '<br>';\n\t\t\t\tform_dropdown('report_id', $reports, 'name', 'id', '', '', '0');\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\tprint '<tr><td>' . __('Timespan') . '<br>';\n\t\t\t\tform_dropdown('timespan',$graph_timespans, '', '', '', '', read_user_setting('default_timespan'));\n\t\t\t\tprint '</td></tr>';\n\n\t\t\t\tprint '<tr><td>' . __('Align') . '<br>';\n\t\t\t\tform_dropdown('align',$alignment, '', '', '', '', REPORTS_ALIGN_CENTER);\n\t\t\t\tprint \"</td></tr>\\n\";\n\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Add Graphs to Report') . \"'>\";\n\t\t\t} else {\n\t\t\t\tprint \"<tr><td class='even'><span class='textError'>\" . __('You currently have no reports defined.') . \"</span></td></tr>\\n\";\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t}\n\t\t} else {\n\t\t\t$save['drp_action'] = get_nfilter_request_var('drp_action');\n\t\t\t$save['graph_list'] = $graph_list;\n\t\t\t$save['graph_array'] = (isset($graph_array) ? $graph_array : array());\n\n\t\t\tapi_plugin_hook_function('graphs_action_prepare', $save);\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: graphs.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($graph_array) ? serialize($graph_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* -----------------------\n    item - Graph Items\n   ----------------------- */\n\nfunction item() {\n\tglobal $consolidation_functions, $graph_item_types, $struct_graph_item;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (isempty_request_var('id')) {\n\t\t$template_item_list = array();\n\n\t\t$header_label = __('Graph Items [new]');\n\t\t$add_text     = '';\n\t\t$anchor_link  = '';\n\t} else {\n\t\t$template_item_list = db_fetch_assoc_prepared('SELECT\n\t\t\tgti.id, gti.text_format, gti.value, gti.hard_return, gti.graph_type_id, gti.alpha, gti.textalign,\n\t\t\tgti.consolidation_function_id, dtr.data_source_name, cd.name AS cdef_name, c.hex\n\t\t\tFROM graph_templates_item AS gti\n\t\t\tLEFT JOIN data_template_rrd AS dtr\n\t\t\tON (gti.task_item_id = dtr.id)\n\t\t\tLEFT JOIN data_local AS dl\n\t\t\tON (dtr.local_data_id = dl.id)\n\t\t\tLEFT JOIN data_template_data AS dtd\n\t\t\tON (dl.id = dtd.local_data_id)\n\t\t\tLEFT JOIN cdef AS cd\n\t\t\tON (cdef_id = cd.id)\n\t\t\tLEFT JOIN colors AS c\n\t\t\tON (color_id = c.id)\n\t\t\tWHERE gti.local_graph_id = ?\n\t\t\tORDER BY gti.sequence', array(get_request_var('id')));\n\n\t\t$template_item_list = api_plugin_hook_function('graphs_item_array', $template_item_list);\n\n\t\t$host_id = db_fetch_cell_prepared('SELECT host_id\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$graph_template_id = db_fetch_cell_prepared('SELECT graph_template_id\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Graph Items [edit: %s]', html_escape(get_graph_title(get_request_var('id'))));\n\t\t$add_text     = 'graphs_items.php?action=item_edit' . (!empty($host_id) ? '&host_id=' . $host_id:'') . '&local_graph_id=' . get_request_var('id');\n\t\t$anchor_link  = 'host_id=' . $host_id . '&local_graph_id=' . get_request_var('id');\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', $add_text);\n\n\tdraw_graph_items_list($template_item_list, 'graphs_items.php', $anchor_link, (empty($graph_template_id) ? false : true));\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('.deleteMarker, .moveArrow').unbind().click(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tloadPageNoHeader($(this).attr('href'));\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n}\n\n/* ------------------------------------\n    graph - Graphs\n   ------------------------------------ */\n\nfunction graph_edit() {\n\tglobal $config, $struct_graph, $image_types, $consolidation_functions, $graph_item_types, $struct_graph_item;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$use_graph_template = true;\n\n\t$locked = 'false';\n\t$graph  = array();\n\n\tif (!isempty_request_var('id')) {\n\t\t$_SESSION['sess_graph_lock_id'] = get_request_var('id');\n\n\t\t$local_graph_template_graph_id = db_fetch_cell_prepared('SELECT local_graph_template_graph_id\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE local_graph_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (get_request_var('id') != $_SESSION['sess_graph_lock_id'] && !empty($local_graph_template_graph_id)) {\n\t\t\t$locked = true;\n\t\t\t$_SESSION['sess_graph_locked'] = $locked;\n\t\t} elseif (empty($local_graph_template_graph_id)) {\n\t\t\t$locked = false;\n\t\t\t$_SESSION['sess_graph_locked'] = $locked;\n\t\t} elseif (isset($_SESSION['sess_graph_locked'])) {\n\t\t\t$locked = $_SESSION['sess_graph_locked'];\n\t\t} else {\n\t\t\t$locked = true;\n\t\t\t$_SESSION['sess_graph_locked'] = $locked;\n\t\t}\n\n\t\t$graph = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE local_graph_id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$graph_template = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_templates_graph\n\t\t\tWHERE id = ?',\n\t\t\tarray($local_graph_template_graph_id));\n\n\t\t$host_id = db_fetch_cell_prepared('SELECT host_id\n\t\t\tFROM graph_local\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t/* case of a deleted graph */\n\t\tif (!cacti_sizeof($graph)) {\n\t\t\traise_message(31);\n\t\t\theader('Location: graphs.php');\n\t\t\texit;\n\t\t}\n\n\t\t$header_label = __('Graph [edit: %s]', html_escape(get_graph_title(get_request_var('id'))));\n\n\t\tif ($graph['graph_template_id'] == '0') {\n\t\t\t$use_graph_template = 'false';\n\t\t}\n\t} else {\n\t\t$header_label = __('Graph [new]');\n\t\t$use_graph_template = false;\n\n\t\tif (isset_request_var('host_id') && get_filter_request_var('host_id') > 0) {\n\t\t\t$host_id = get_request_var('host_id');\n\t\t} else {\n\t\t\t$host_id = 0;\n\t\t}\n\n\t\tif (isempty_request_var('graph_template_id')) {\n\t\t\t$locked = false;\n\t\t}\n\t}\n\n\t/* handle debug mode */\n\tif (isset_request_var('debug')) {\n\t\tif (get_nfilter_request_var('debug') == '0') {\n\t\t\tkill_session_var('graph_debug_mode');\n\t\t} elseif (get_nfilter_request_var('debug') == '1') {\n\t\t\t$_SESSION['graph_debug_mode'] = true;\n\t\t}\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\tif (isset($_SESSION['graph_debug_mode'])) {\n\t\t\t$message = __('Turn Off Graph Debug Mode.');\n\t\t} else {\n\t\t\t$message = __('Turn On Graph Debug Mode.');\n\t\t}\n\n\t\t?>\n\t\t<table style='width:100%;'>\n\t\t\t<tr>\n\t\t\t\t<td class='textInfo left' style='vertical-align:top'>\n\t\t\t\t\t<?php print html_escape(get_graph_title(get_request_var('id')));?>\n\t\t\t\t</td>\n\t\t\t\t<td class='textInfo right' style='vertical-align:top;'>\n\t\t\t\t\t<span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('graphs.php?action=graph_edit&id=' . (isset_request_var('id') ? get_request_var('id') : '0') . '&debug=' . (isset($_SESSION['graph_debug_mode']) ? '0' : '1'));?>'><?php print $message;?></a><br>\n\t\t\t\t\t<?php\n\t\t\t\t\t\tif (!empty($graph['graph_template_id'])) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('graph_templates.php?action=template_edit&id=' . (isset($graph['graph_template_id']) ? $graph['graph_template_id'] : '0'));?>'><?php print __('Edit Graph Template.');?></a><br><?php\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isempty_request_var('host_id') || !empty($host_id)) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a class='hyperLink' href='<?php print html_escape('host.php?action=edit&id=' . ($host_id > 0 ? $host_id : get_request_var('host_id')));?>'><?php print __('Edit Device.');?></a><br><?php\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($locked) {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a href='#' class='hyperLink' id='unlockid'><?php print __('Unlock Graph.');?></a><?php\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t?><span class='linkMarker'>*</span><a href='#' class='hyperLink' id='lockid'><?php print __('Lock Graph.');?></a><?php\n\t\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<?php\n\t}\n\n\tform_start('graphs.php');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (!empty($graph['local_graph_id'])) {\n\t\t$graph_template_id = get_current_graph_template($graph['local_graph_id']);\n\t\t$gtsql = get_common_graph_templates($graph);\n\t} else {\n\t\t$graph_template_id = 0;\n\t\t$gtsql = 'SELECT gt.id, gt.name\n\t\t\tFROM graph_templates AS gt\n\t\t\tWHERE id NOT IN (SELECT graph_template_id FROM snmp_query_graph)\n\t\t\tORDER BY name';\n\t}\n\n\t$form_array = array(\n\t\t'graph_template_id' => array(\n\t\t\t'method' => 'drop_sql',\n\t\t\t'friendly_name' => __('Selected Graph Template'),\n\t\t\t'description' => __('Choose a Graph Template to apply to this Graph. Please note that you may only change Graph Templates to a 100%% compatible Graph Template, which means that it includes identical Data Sources.'),\n\t\t\t'value' => $graph_template_id,\n\t\t\t'none_value' => (!isset($graph['graph_template_id']) || $graph['graph_template_id'] == 0 ? __('None'):''),\n\t\t\t'sql' => $gtsql\n  \t\t\t),\n\t\t'host_id' => array(\n\t\t\t'method' => 'drop_callback',\n\t\t\t'friendly_name' => __('Device'),\n\t\t\t'description' => __('Choose the Device that this Graph belongs to.'),\n\t\t\t'sql' => 'SELECT id, description as name FROM host ORDER BY name',\n\t\t\t'action' => 'ajax_hosts_noany',\n\t\t\t'none_value' => __('None'),\n\t\t\t'id' => $host_id,\n\t\t\t'value' => db_fetch_cell_prepared('SELECT description FROM host WHERE id = ?', array($host_id)),\n\t\t\t),\n\t\t'graph_template_graph_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($graph['id']) ? $graph['id'] : '0')\n\t\t\t),\n\t\t'local_graph_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($graph['local_graph_id']) ? $graph['local_graph_id'] : '0')\n\t\t\t),\n\t\t'local_graph_template_graph_id' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($graph['local_graph_template_graph_id']) ? $graph['local_graph_template_graph_id'] : '0')\n\t\t\t),\n\t\t'graph_template_id_prev' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => $graph_template_id\n\t\t\t),\n\t\t'host_id_prev' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => (isset($host_id) ? $host_id : '0')\n\t\t\t)\n\t\t);\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $form_array\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t/* only display the \"inputs\" area if we are using a graph template for this graph */\n\tif (!empty($graph['graph_template_id'])) {\n\t\thtml_start_box(__('Supplemental Graph Template Data'), '100%', true, '3', 'center', '');\n\n\t\tdraw_nontemplated_fields_graph($graph['graph_template_id'], $graph, '|field|', __('Graph Fields'), true, true, 0);\n\t\tdraw_nontemplated_fields_graph_item($graph['graph_template_id'], get_request_var('id'), '|field|_|id|', __('Graph Item Fields'), true, $locked);\n\n\t\thtml_end_box(true, true);\n\t}\n\n\t/* graph item list goes here */\n\tif ((!isempty_request_var('id')) && (empty($graph['graph_template_id']))) {\n\t\titem();\n\t}\n\n\t$graph['src'] = html_escape($config['url_path'] . 'graph_json.php?local_graph_id=' . get_request_var('id') . '&rra_id=0&graph_start=' . (time()-86400) . '&graph_end=-300&v=' . mt_rand());\n\n\tif (!isempty_request_var('id')) {\n\t\t?>\n\t\t<div class='cactiTable'>\n\t\t\t<div id='graphLocation' class='center'></div>\n\t\t<?php\n\t\tif ((isset($_SESSION['graph_debug_mode'])) && (isset_request_var('id'))) {\n\t\t\t$graph_data_array['output_flag'] = RRDTOOL_OUTPUT_STDERR;\n\t\t\t$graph_data_array['print_source'] = 1;\n\t\t?>\n\t\t</div>\n\t\t<div class='cactiTable'>\n\t\t\t<div style='float:left'>\n\t\t\t\t<span class='textInfo'><?php print __('RRDtool Command:');?></span><br>\n\t\t\t\t<pre><?php print @rrdtool_function_graph(get_request_var('id'), 1, $graph_data_array);?></pre>\n\t\t\t\t<span class='textInfo'><?php print __('RRDtool Says:');?></span><br>\n\t\t\t\t<?php unset($graph_data_array['print_source']);?>\n\t\t\t\t<pre><?php print @rrdtool_function_graph(get_request_var('id'), 1, $graph_data_array);?></pre>\n\t\t\t</div>\n\t\t<?php\n\t\t}\n\t\t?>\n\t\t</div>\n\t\t<br>\n\t\t<?php\n\t}\n\n\tif (((isset_request_var('id')) || (isset_request_var('new'))) && (empty($graph['graph_template_id']))) {\n\t\thtml_start_box(__('Graph Configuration'), '100%', true, '3', 'center', '');\n\n\t\t$form_array = array();\n\n\t\tforeach ($struct_graph as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $struct_graph[$field_name]);\n\n\t\t\tif (($field_array['method'] != 'header') && ($field_array['method'] != 'spacer' )){\n\t\t\t\t$form_array[$field_name]['value'] = (isset($graph[$field_name]) ? $graph[$field_name] : '');\n\t\t\t\t$form_array[$field_name]['form_id'] = (isset($graph[$field_name]) ? $graph['id'] : '0');\n\n\t\t\t\tif ($use_graph_template == true && isset($graph_template['t_' . $field_name]) && ($graph_template['t_' . $field_name] == 'on')) {\n\t\t\t\t\t$form_array[$field_name]['method'] = 'template_' . $form_array[$field_name]['method'];\n\t\t\t\t\t$form_array[$field_name]['description'] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => $form_array\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box(true, true);\n\t}\n\n\tif ((isset_request_var('id')) || (isset_request_var('new'))) {\n\t\tform_hidden_box('save_component_graph','1','');\n\t\tform_hidden_box('save_component_input','1','');\n\t} else {\n\t\tform_hidden_box('save_component_graph_new','1','');\n\t}\n\n\tform_hidden_box('rrdtool_version', get_rrdtool_version(), '');\n\n\tform_save_button('graphs.php');\n\n\t//Now we need some javascript to make it dynamic\n\t?>\n\t<script type='text/javascript'>\n\n\tvar locked         = <?php print ($locked ? 'true':'false');?>;\n\tvar imageSource    = '<?php print $graph['src'];?>';\n\tvar originalWidth  = null;\n\tvar originalHeight = null;\n\n\tfunction dynamic() {\n\t\tif ($('#scale_log_units').is(':checked')) {\n\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\tif ($('#auto_scale_log').is(':checked')) {\n\t\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction changeScaleLog() {\n\t\tif ($('#scale_log_units').is(':checked')) {\n\t\t\t$('#scale_log_units').prop('disabled', true);\n\t\t\tif ($('#auto_scale_log').is(':checked')) {\n\t\t\t\t$('#scale_log_units').prop('disabled', false);\n\t\t\t}\n\t\t}\n\t}\n\n\t$(function() {\n\t\tdynamic();\n\n\t\t$('#unlockid').click(function(event) {\n\t\t\tevent.preventDefault;\n\n\t\t\t$('body').append(\"<div id='modal' class='ui-widget-overlay ui-front' style='z-index: 100;'><i style='position:absolute;top:50%;left:50%;' class='fa fa-spin fa-circle-notch'/></div>\");\n\n\t\t\t$.get('graphs.php?action=unlock&header=false&id='+$('#local_graph_id').val())\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#modal').remove();\n\t\t\t\t\t$('#main').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t});\n\n\t\t$.getJSON(imageSource)\n\t\t\t.done(function(data) {\n\t\t\t\t$('#graphLocation').html(\"<img class='cactiGraphImage' src='data:image/\"+data.type+\";base64,\"+data.image+\"' graph_start='\"+data.graph_start+\"' graph_end='\"+data.graph_end+\"' graph_left='\"+data.graph_left+\"' graph_top='\"+data.graph_top+\"' graph_width='\"+data.graph_width+\"' graph_height='\"+data.graph_height+\"' width='\"+data.image_width+\"' height='\"+data.image_height+\"' image_width='\"+data.image_width+\"' image_height='\"+data.image_height+\"' value_min='\"+data.value_min+\"' value_max='\"+data.value_max+\"'>\");\n\t\t\t\t$(window).trigger('resize');\n\t\t\t})\n\t\t\t.fail(function(data) {\n\t\t\t\tgetPresentHTTPError(data);\n\t\t\t});\n\n\n\t\t$('#lockid').click(function(event) {\n\t\t\tevent.preventDefault;\n\n\t\t\tloadPageNoHeader('graphs.php?action=lock&header=false&id='+$('#local_graph_id').val());\n\t\t});\n\n\t\t$(window).resize(function() {\n\t\t\timageWidth    = $('.cactiGraphImage').width();\n\t\t\timageHeight   = $('.cactiGraphImage').height();\n\t\t\taspectRatio   = imageWidth/imageHeight;\n\n\t\t\tif (imageWidth > 0 && originalWidth == null) {\n\t\t\t\toriginalWidth = imageWidth;\n\t\t\t\toriginalHeight = imageHeight;\n\t\t\t}\n\n\t\t\t$('.cactiGraphImage').hide();\n\n\t\t\tmainSize      = $('#main').width();\n\n\t\t\tif (imageWidth > mainSize || mainSize < originalWidth) {\n\t\t\t\tnewWidth    = mainSize - 40;\n\t\t\t\taspectRatio = imageWidth / imageHeight;\n\t\t\t\timageWidth  = newWidth;\n\t\t\t\timageHeight = newWidth / aspectRatio;\n\t\t\t\t$('.cactiGraphImage').css({ width: imageWidth, height: imageHeight });\n\t\t\t} else if (mainSize > originalWidth) {\n\t\t\t\t$('.cactiGraphImage').css({ width: originalWidth, height: originalHeight });\n\t\t\t}\n\n\t\t\t$('.cactiGraphImage').show();\n\t\t}).trigger('resize');\n\t});\n\n\tif (locked) {\n\t\t$('input, select').not('input[value=\"<?php print __('Cancel');?>\"]').prop('disabled', true);\n\t\t$('.moveArrow, .deleteMarker, .linkOverDark, .linkEditMain').attr('href', '#').removeClass('moveArrow').removeClass('deleteMarker');\n\t\tif ($('#submit').button('instance')) {\n\t\t\t$('#submit').button('disable');\n\t\t} else {\n\t\t\t$('#submit').prop('disabled', true);\n\t\t}\n\t\t$('#host_id_wrap').addClass('ui-selectmenu-disabled ui-state-disabled');\n\t\t$('#host_id_input').addClass('ui-state-disabled');\n\t}\n\t</script>\n\t<?php\n\tif (isset_request_var('id')) {\n\t\tapi_plugin_hook_function('graph_edit_after', get_request_var('id'));\n\t} else {\n\t\tapi_plugin_hook_function('graph_edit_after');\n\t}\n}\n\nfunction validate_graph_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'rfilter' => array(\n\t\t\t'filter' => FILTER_VALIDATE_IS_REGEX,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t),\n\t\t'orphans' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'title_cache',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'host_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'site_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(cg_[0-9]|dq_[0-9]|[\\-0-9])')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_graph');\n\t/* ================= input validation ================= */\n}\n\nfunction graph_management() {\n\tglobal $graph_actions, $item_rows, $config;\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'graphs.php' +\n\t\t\t'?host_id=' + $('#host_id').val() +\n\t\t\t'&site_id=' + $('#site_id').val() +\n\t\t\t'&rows=' + $('#rows').val() +\n\t\t\t'&orphans=' + $('#orphans').is(':checked') +\n\t\t\t'&rfilter=' + base64_encode($('#rfilter').val()) +\n\t\t\t'&template_id=' + $('#template_id').val() +\n\t\t\t'&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'graphs.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#clear').unbind().on('click', function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#filter').unbind().on('change', function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#form_graphs').unbind().on('submit', function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\tif (read_config_option('grds_creation_method') == 1) {\n\t\t$add_url = html_escape('graphs.php?action=graph_edit&host_id=' . get_request_var('host_id'));\n\t} else {\n\t\t$add_url = '';\n\t}\n\n\thtml_start_box(__('Graph Management'), '100%', '', '3', 'center', $add_url);\n\n\tif (get_request_var('site_id') > 0) {\n\t\t$host_where = 'site_id = ' . get_request_var('site_id');\n\t} else {\n\t\t$host_where = '';\n\t}\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t\t<form id='form_graphs' action='graphs.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<?php print html_site_filter(get_request_var('site_id'));?>\n\t\t\t\t\t<?php print html_host_filter(get_request_var('host_id'), 'applyFilter', $host_where);?>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\n\t\t\t\t\t\t\t// suppress total rows retrieval\n\t\t\t\t\t\t\t$total_rows = -1;\n\n\t\t\t\t\t\t\tif (get_request_var('host_id') == 0) {\n\t\t\t\t\t\t\t\t$templates = get_allowed_graph_templates_normalized('gl.host_id=0', 'name', '', $total_rows);\n\t\t\t\t\t\t\t} elseif (get_request_var('host_id') > 0) {\n\t\t\t\t\t\t\t\t$templates = get_allowed_graph_templates_normalized('gl.host_id=' . get_filter_request_var('host_id'), 'name', '', $total_rows);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$templates = get_allowed_graph_templates_normalized('', 'name', '', $total_rows);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (cacti_sizeof($templates) > 0) {\n\t\t\t\t\t\t\t\tforeach ($templates as $template) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $template['id'] . \"'\"; if (get_request_var('template_id') == $template['id']) { print ' selected'; } print '>' . html_escape($template['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='orphans' onChange='applyFilter()' <?php print (get_request_var('orphans') == 'true' || get_request_var('orphans') == 'on' ? 'checked':'');?>>\n   \t                    \t<label for='orphans'><?php print __('Orphaned');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='rfilter' size='30' value='<?php print html_escape_request_var('rfilter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Graphs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where = '';\n\tif (get_request_var('rfilter') != '') {\n\t\t$sql_where = \" WHERE (gtg.title_cache RLIKE '\" . get_request_var('rfilter') . \"'\" .\n\t\t\t\" OR gt.name RLIKE '\" . get_request_var('rfilter') . \"')\";\n\t}\n\n\tif (get_request_var('host_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (isempty_request_var('host_id')) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gl.host_id=0';\n\t} elseif (!isempty_request_var('host_id')) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gl.host_id=' . get_request_var('host_id');\n\t}\n\n\tif (get_request_var('site_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (isempty_request_var('site_id')) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' h.site_id=0';\n\t} elseif (!isempty_request_var('site_id')) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' h.site_id=' . get_request_var('site_id');\n\t}\n\n\tif (get_request_var('template_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('template_id') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gtg.graph_template_id=0';\n\t} elseif (!isempty_request_var('template_id')) {\n\t\t$parts = explode('_', get_request_var('template_id'));\n\t\tif ($parts[0] == 'cg') {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gl.graph_template_id=' . $parts[1];\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gl.snmp_query_graph_id=' . $parts[1];\n\t\t}\n\t}\n\n\tif (get_request_var('orphans') == 'true') {\n\t\t$orphan_where = ' AND graph_type_id IN (' .\n\t\t\tGRAPH_ITEM_TYPE_LINE1     . ', ' .\n\t\t\tGRAPH_ITEM_TYPE_LINE2     . ', '.\n\t\t\tGRAPH_ITEM_TYPE_LINE3     . ', ' .\n\t\t\tGRAPH_ITEM_TYPE_LINESTACK . ', ' .\n\t\t\tGRAPH_ITEM_TYPE_AREA      . ', ' .\n\t\t\tGRAPH_ITEM_TYPE_STACK     . ')';\n\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' ((gl.snmp_index = \"\" AND gl.snmp_query_id > 0) OR (gl.id IN (SELECT gti.local_graph_id FROM graph_templates_item AS gti LEFT JOIN data_template_rrd AS dtr ON gti.task_item_id=dtr.id WHERE gti.task_item_id > 0 AND dtr.local_data_id IS NULL ' . $orphan_where . ')))';\n\t}\n\n\t/* don't allow aggregates to be view here */\n\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' ag.local_graph_id IS NULL';\n\n\t/* allow plugins to modify sql_where */\n\t$sql_where = api_plugin_hook_function('graphs_sql_where', $sql_where);\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(gtg.id)\n\t\tFROM graph_local AS gl\n\t\tINNER JOIN graph_templates_graph AS gtg\n\t\tON gl.id=gtg.local_graph_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gl.graph_template_id=gt.id\n\t\tLEFT JOIN aggregate_graphs AS ag\n\t\tON ag.local_graph_id=gl.id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\tLEFT JOIN sites AS s\n\t\tON h.site_id=s.id\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$graph_list = db_fetch_assoc(\"SELECT gtg.id, gtg.local_graph_id, gtg.height, gtg.width,\n\t\tgtg.title_cache, gt.name, gl.host_id,\n\t\tIF(gl.graph_template_id=0, 0, IF(gl.snmp_query_id=0, 2, 1)) AS source\n\t\tFROM graph_local AS gl\n\t\tINNER JOIN graph_templates_graph AS gtg\n\t\tON gl.id=gtg.local_graph_id\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gl.graph_template_id=gt.id\n\t\tLEFT JOIN aggregate_graphs AS ag\n\t\tON ag.local_graph_id=gl.id\n\t\tLEFT JOIN host AS h\n\t\tON h.id=gl.host_id\n\t\tLEFT JOIN sites AS s\n\t\tON h.site_id=s.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('graphs.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Graphs'), 'page', 'main');\n\n\tform_start('graphs.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$sources = array(\n\t\t0 => __('Not Templated'),\n\t\t1 => __('Data Query'),\n\t\t2 => __('Template')\n\t);\n\n\t$display_text = array(\n\t\t'title_cache' => array(\n\t\t\t'display' => __('Graph Name'),\n\t\t\t'align'   => 'left',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Title of this Graph.  Generally programatically generated from the Graph Template definition or Suggested Naming rules.  The max length of the Title is controlled under Settings->Visual.')\n\t\t),\n\t\t'local_graph_id' => array(\n\t\t\t'display' => __('ID'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The internal database ID for this Graph.  Useful when performing automation or debugging.')\n\t\t),\n\t\t'source' => array(\n\t\t\t'display' => __('Source Type'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The underlying source that this Graph was based upon.')\n\t\t),\n\t\t'name' => array(\n\t\t\t'display' => __('Source Name'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The Graph Template or Data Query that this Graph was based upon.')\n\t\t),\n\t\t'height' => array(\n\t\t\t'display' => __('Size'),\n\t\t\t'align'   => 'right',\n\t\t\t'sort'    => 'ASC',\n\t\t\t'tip'     => __('The size of this Graph when not in Preview mode.')\n\t\t)\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($graph_list)) {\n\t\tforeach ($graph_list as $graph) {\n\t\t\t/* we're escaping strings here, so no need to escape them on form_selectable_cell */\n\t\t\t$template_details = get_current_graph_template_details($graph['local_graph_id']);\n\n\t\t\tif ($template_details['id'] > 0) {\n\t\t\t\tif ($template_details['source'] == 1) { // Data Query\n\t\t\t\t\t$url = $config['url_path'] . 'data_queries.php?action=item_edit&id=' . $template_details['id'];\n\t\t\t\t} else { // Graph Template\n\t\t\t\t\t$url = $config['url_path'] . 'graph_templates.php?action=template_edit&id=' . $template_details['id'];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$url = '';\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $graph['local_graph_id'], true);\n\t\t\tform_selectable_cell(filter_value(title_trim($graph['title_cache'], read_config_option('max_title_length')), get_request_var('rfilter'), 'graphs.php?action=graph_edit&id=' . $graph['local_graph_id']), $graph['local_graph_id']);\n\t\t\tform_selectable_cell($graph['local_graph_id'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_selectable_cell(filter_value($sources[$graph['source']], get_request_var('rfilter')), $graph['local_graph_id'], '', 'right');\n\t\t\tform_selectable_cell(filter_value($template_details['name'], get_request_var('rfilter'), $url), $graph['local_graph_id'], '', 'right');\n\t\t\tform_selectable_ecell($graph['height'] . 'x' . $graph['width'], $graph['local_graph_id'], '', 'right');\n\t\t\tform_checkbox_cell($graph['title_cache'], $graph['local_graph_id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='5'><em>\" . __('No Graphs Found') . \"</em></td></tr>\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($graph_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* add a list of tree names to the actions dropdown */\n\tadd_tree_names_to_actions_array();\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($graph_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_device.php');\ninclude_once('./lib/data_query.php');\n\n$host_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Duplicate'),\n\t3 => __('Sync Devices')\n);\n\n/* set default action */\nset_default_action();\n\napi_plugin_hook('device_template_top');\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'item_add_gt':\n\t\ttemplate_item_add_gt();\n\n\t\theader('Location: host_templates.php?header=false&action=edit&id=' . get_filter_request_var('host_template_id'));\n\t\tbreak;\n    case 'item_remove_gt_confirm':\n        template_item_remove_gt_confirm();\n\n        break;\n\tcase 'item_remove_gt':\n\t\ttemplate_item_remove_gt();\n\n\t\theader('Location: host_templates.php?header=false&action=edit&id=' . get_filter_request_var('host_template_id'));\n\t\tbreak;\n\tcase 'item_add_dq':\n\t\ttemplate_item_add_dq();\n\n\t\theader('Location: host_templates.php?header=false&action=edit&id=' . get_filter_request_var('host_template_id'));\n\t\tbreak;\n    case 'item_remove_dq_confirm':\n        template_item_remove_dq_confirm();\n\n        break;\n\tcase 'item_remove_dq':\n\t\ttemplate_item_remove_dq();\n\n\t\theader('Location: host_templates.php?header=false&action=edit&id=' . get_filter_request_var('host_template_id'));\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\ttemplate_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\ttemplate();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\tget_filter_request_var('snmp_query_id');\n\tget_filter_request_var('graph_template_id');\n\t/* ==================================================== */\n\n\tif (isset_request_var('save_component_template')) {\n\t\t$save['id']   = get_nfilter_request_var('id');\n\t\t$save['hash'] = get_hash_host_template(get_nfilter_request_var('id'));\n\t\t$save['name'] = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$host_template_id = sql_save($save, 'host_template');\n\n\t\t\tif ($host_template_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: host_templates.php?header=false&action=edit&id=' . (empty($host_template_id) ? get_nfilter_request_var('id') : $host_template_id));\n\t}\n}\n\nfunction duplicate_host_template($_host_template_id, $host_template_title) {\n\tglobal $fields_host_template_edit;\n\n\t$host_template              = db_fetch_row_prepared('SELECT * FROM host_template WHERE id = ?', array($_host_template_id));\n\t$host_template_graphs       = db_fetch_assoc_prepared('SELECT * FROM host_template_graph WHERE host_template_id = ?', array($_host_template_id));\n\t$host_template_data_queries = db_fetch_assoc_prepared('SELECT * FROM host_template_snmp_query WHERE host_template_id = ?', array($_host_template_id));\n\n\t/* substitute the title variable */\n\t$host_template['name'] = str_replace('<template_title>', $host_template['name'], $host_template_title);\n\n\t/* create new entry: host_template */\n\t$save['id']   = 0;\n\t$save['hash'] = get_hash_host_template(0);\n\n\tforeach ($fields_host_template_edit as $field => $array) {\n\t\tif (!preg_match('/^hidden/', $array['method'])) {\n\t\t\t$save[$field] = $host_template[$field];\n\t\t}\n\t}\n\n\t$host_template_id = sql_save($save, 'host_template');\n\n\t/* create new entry(s): host_template_graph */\n\tif (cacti_sizeof($host_template_graphs)) {\n\t\tforeach ($host_template_graphs as $host_template_graph) {\n\t\t\tdb_execute_prepared('INSERT INTO host_template_graph\n\t\t\t\t(host_template_id,graph_template_id)\n\t\t\t\tVALUES (?, ?)',\n\t\t\t\tarray($host_template_id, $host_template_graph['graph_template_id']));\n\t\t}\n\t}\n\n\t/* create new entry(s): host_template_snmp_query */\n\tif (cacti_sizeof($host_template_data_queries)) {\n\t\tforeach ($host_template_data_queries as $host_template_data_query) {\n\t\t\tdb_execute_prepared('INSERT INTO host_template_snmp_query\n\t\t\t\t(host_template_id,snmp_query_id)\n\t\t\t\tVALUES (?, ?)',\n\t\t\t\tarray($host_template_id, $host_template_data_query['snmp_query_id']));\n\t\t}\n\t}\n}\n\n/* ------------------------\n    The \"actions\" function\n   ------------------------ */\n\nfunction template_item_add_dq() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('host_template_id');\n\tget_filter_request_var('snmp_query_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('REPLACE INTO host_template_snmp_query\n\t\t(host_template_id, snmp_query_id)\n\t\tVALUES (?, ?)',\n\t\tarray(get_request_var('host_template_id'), get_request_var('snmp_query_id')));\n\n\traise_message(41);\n}\n\nfunction template_item_add_gt() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('host_template_id');\n\tget_filter_request_var('graph_template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('REPLACE INTO host_template_graph\n\t\t(host_template_id, graph_template_id)\n\t\tVALUES (?, ?)',\n\t\tarray(get_request_var('host_template_id'), get_request_var('graph_template_id')));\n\n\traise_message(41);\n}\n\nfunction form_actions() {\n\tglobal $host_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\tdb_execute('DELETE FROM host_template WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM host_template_snmp_query WHERE ' . array_to_sql_or($selected_items, 'host_template_id'));\n\t\t\t\tdb_execute('DELETE FROM host_template_graph WHERE ' . array_to_sql_or($selected_items, 'host_template_id'));\n\n\t\t\t\t/* \"undo\" any device that is currently using this template */\n\t\t\t\tdb_execute('UPDATE host SET host_template_id=0 WHERE ' . array_to_sql_or($selected_items, 'host_template_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tduplicate_host_template($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // sync\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tapi_device_template_sync_template($selected_items[$i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: host_templates.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$host_list = ''; $i = 0;\n\n\t/* loop through each of the host templates selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$host_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM host_template WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$host_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('host_templates.php');\n\n\thtml_start_box($host_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($host_array) && cacti_sizeof($host_array)) {\n\t\tif (get_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Device Template(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$host_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete Device Template(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to duplicate the following Device Template(s).  Optionally change the title for the new Device Template(s).') .\"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$host_list</ul></div>\n\t\t\t\t\t<p><strong>\" . __('Title Format:'). \"</strong><br>\\n\";\n\n\t\t\tform_text_box('title_format', '<template_title> (1)', '', '255', '30', 'text');\n\n\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') .\"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Duplicate Device Template(s)') .\"'>\";\n\t\t} elseif (get_request_var('drp_action') == '3') { // sync devices\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to Synchronize Devices associated with the selected Device Template(s).  Note that this action may take some time depending on the number of Devices mapped to the Device Template.') .\"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$host_list</ul></div>\\n\";\n\n\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') .\"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Sync Devices to Device Template(s)') .\"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: host_templates.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($host_array) ? serialize($host_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* ---------------------\n    Template Functions\n   --------------------- */\n\nfunction template_item_remove_gt_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\t/* ==================================================== */\n\n\tform_start('host_templates.php?action=edit&id' . get_request_var('host_template_id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$template = db_fetch_row_prepared('SELECT * FROM graph_templates WHERE id = ?', array(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Graph Template will be disassociated from the Device Template.');?></p>\n\t\t\t<p><?php print __('Graph Template Name: %s', html_escape($template['name']));?>'<br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\")' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove Data Input Field');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$('#continue').click(function(data) {\n\t\t$.post('host_templates.php?action=item_remove_gt', {\n\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\thost_template_id: <?php print get_request_var('host_template_id');?>,\n\t\t\tid: <?php print get_request_var('id');?>\n\t\t}, function(data) {\n\t\t\t$('#cdialog').dialog('close');\n\t\t\t$('div[class^=\"ui-\"]').remove();\n\t\t\t$('#main').html(data);\n\t\t\tapplySkin();\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction template_item_remove_gt() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM host_template_graph\n\t\tWHERE graph_template_id = ?\n\t\tAND host_template_id = ?',\n\t\tarray(get_request_var('id'), get_request_var('host_template_id')));\n\n\traise_message(41);\n}\n\nfunction template_item_remove_dq_confirm() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\t/* ==================================================== */\n\n\tform_start('host_templates.php?action=edit&id' . get_request_var('host_template_id'));\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$query = db_fetch_row_prepared('SELECT * FROM snmp_query WHERE id = ?', array(get_request_var('id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following Data Queries will be disassociated from the Device Template.');?></p>\n\t\t\t<p><?php print __('Data Query Name: %s', html_escape($query['name']));?>'<br>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\")' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove Data Input Field');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$('#continue').click(function(data) {\n\t\t$.post('host_templates.php?action=item_remove_dq', {\n\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\thost_template_id: <?php print get_request_var('host_template_id');?>,\n\t\t\tid: <?php print get_request_var('id');?>\n\t\t}, function(data) {\n\t\t\t$('#cdialog').dialog('close');\n\t\t\t$('div[class^=\"ui-\"]').remove();\n\t\t\t$('#main').html(data);\n\t\t\tapplySkin();\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction template_item_remove_dq() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('host_template_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM host_template_snmp_query\n\t\tWHERE snmp_query_id = ?\n\t\tAND host_template_id = ?',\n\t\tarray(get_request_var('id'), get_request_var('host_template_id')));\n\n\traise_message(41);\n}\n\nfunction template_edit() {\n\tglobal $fields_host_template_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$host_template = db_fetch_row_prepared('SELECT *\n\t\t\tFROM host_template\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Device Templates [edit: %s]', html_escape($host_template['name']));\n\t} else {\n\t\t$header_label = __('Device Templates [new]');\n\t\tset_request_var('id', 0);\n\t}\n\n\tform_start('host_templates.php', 'form_network');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => 'true'),\n\t\t\t'fields' => inject_form_variables($fields_host_template_edit, (isset($host_template) ? $host_template : array()))\n\t\t)\n\t);\n\n\t/* we have to hide this button to make a form change in the main form trigger the correct\n\t * submit action */\n\techo \"<div style='display:none;'><input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Default Submit Button') . \"'></div>\";\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('id')) {\n\t\thtml_start_box(__('Associated Graph Templates'), '100%', '', '3', 'center', '');\n\n\t\t$selected_graph_templates = db_fetch_assoc_prepared('SELECT\n\t\t\tgraph_templates.id,\n\t\t\tgraph_templates.name\n\t\t\tFROM (graph_templates,host_template_graph)\n\t\t\tWHERE graph_templates.id = host_template_graph.graph_template_id\n\t\t\tAND host_template_graph.host_template_id = ?\n\t\t\tORDER BY graph_templates.name', array(get_request_var('id')));\n\n\t\t$i = 0;\n\t\tif (cacti_sizeof($selected_graph_templates)) {\n\t\t\tforeach ($selected_graph_templates as $item) {\n\t\t\t\tform_alternate_row(\"gt$i\", true);\n\t\t\t\t?>\n\t\t\t\t\t<td class='left'>\n\t\t\t\t\t\t<strong><?php print $i;?>)</strong> <?php print html_escape($item['name']);?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t<a class='delete deleteMarker fa fa-times' title='<?php print __esc('Delete');?>' href='<?php print html_escape('host_templates.php?action=item_remove_gt_confirm&id=' . $item['id'] . '&host_template_id=' . get_request_var('id'));?>'></a>\n\t\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No associated graph templates.') . '</em></td></tr>';\n\t\t}\n\n\t\t?>\n\t\t<tr class='odd'>\n\t\t\t<td colspan='2'>\n\t\t\t\t<table>\n\t\t\t\t\t<tr style='line-height:10px'>\n\t\t\t\t\t\t<td class='nowrap templateAdd'>\n\t\t\t\t\t\t\t<?php print __('Add Graph Template');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t\t<?php form_dropdown('graph_template_id', db_fetch_assoc_prepared('SELECT gt.id, gt.name\n\t\t\t\t\t\t\t\tFROM graph_templates AS gt\n\t\t\t\t\t\t\t\tLEFT JOIN host_template_graph AS htg\n\t\t\t\t\t\t\t\tON gt.id=htg.graph_template_id\n\t\t\t\t\t\t\t\tAND htg.host_template_id = ?\n\t\t\t\t\t\t\t\tWHERE htg.host_template_id IS NULL\n\t\t\t\t\t\t\t\tAND gt.id NOT IN (SELECT graph_template_id FROM snmp_query_graph)\n\t\t\t\t\t\t\t\tORDER BY gt.name', array(get_request_var('id'))),'name','id','','','');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Add');?>' id='add_gt' title='<?php print __esc('Add Graph Template to Device Template');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\n\t\t<?php\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('Associated Data Queries'), '100%', '', '3', 'center', '');\n\n\t\t$selected_data_queries = db_fetch_assoc_prepared('SELECT snmp_query.id, snmp_query.name\n\t\t\tFROM (snmp_query, host_template_snmp_query)\n\t\t\tWHERE snmp_query.id = host_template_snmp_query.snmp_query_id\n\t\t\tAND host_template_snmp_query.host_template_id = ?\n\t\t\tORDER BY snmp_query.name', array(get_request_var('id')));\n\n\t\t$i = 0;\n\t\tif (cacti_sizeof($selected_data_queries)) {\n\t\t\tforeach ($selected_data_queries as $item) {\n\t\t\t\tform_alternate_row(\"dq$i\", true);\n\t\t\t\t?>\n\t\t\t\t\t<td class='left'>\n\t\t\t\t\t\t<strong><?php print $i;?>)</strong> <?php print html_escape($item['name']);?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class='right'>\n\t\t\t\t\t\t<a class='delete deleteMarker fa fa-times' title='<?php print __esc('Delete');?>' href='<?php print html_escape('host_templates.php?action=item_remove_dq_confirm&id=' . $item['id'] . '&host_template_id=' . get_request_var('id'));?>'></a>\n\t\t\t\t\t</td>\n\t\t\t\t<?php\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No associated data queries.') . '</em></td></tr>';\n\t\t}\n\n\t\t?>\n\t\t<tr class='odd'>\n\t\t\t<td colspan='2'>\n\t\t\t\t<table>\n\t\t\t\t\t<tr style='line-height:10px;'>\n\t\t\t\t\t\t<td class='nowrap queryAdd'>\n\t\t\t\t\t\t\t<?php print __('Add Data Query');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t\t<?php form_dropdown('snmp_query_id', db_fetch_assoc_prepared('SELECT snmp_query.id, snmp_query.name\n\t\t\t\t\t\t\t\tFROM snmp_query LEFT JOIN host_template_snmp_query\n\t\t\t\t\t\t\t\tON (snmp_query.id = host_template_snmp_query.snmp_query_id AND host_template_snmp_query.host_template_id = ?)\n\t\t\t\t\t\t\t\tWHERE host_template_snmp_query.host_template_id is null\n\t\t\t\t\t\t\t\tORDER BY snmp_query.name', array(get_request_var('id'))),'name','id','','','');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class='noHide'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Add');?>' id='add_dq' title='<?php print __esc('Add Data Query to Device Template');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tapi_plugin_hook('device_template_edit');\n\t}\n\n\tform_save_button('host_templates.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t$('#cdialog').remove();\n\t\t$('body').append(\"<div id='cdialog'></div>\");\n\n\t\t$('.delete').click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\trequest = $(this).attr('href');\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t\t$('#cdialog').dialog({\n\t\t\t\t\t\ttitle: '<?php print __('Delete Data Input Field');?>',\n\t\t\t\t\t\tclose: function () { $('.delete').blur(); $('.selectable').removeClass('selected'); },\n\t\t\t\t\t\tminHeight: 80,\n\t\t\t\t\t\tminWidth: 500\n\t\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\n\t\t$('#add_dq').click(function() {\n\t\t\t$.post('host_templates.php?action=item_add_dq', {\n\t\t\t\thost_template_id: $('#id').val(),\n\t\t\t\tsnmp_query_id: $('#snmp_query_id').val(),\n\t\t\t\treindex_method: $('#reindex_method').val(),\n\t\t\t\t__csrf_magic: csrfMagicToken\n\t\t\t}).done(function(data) {\n\t\t\t\t$('div[class^=\"ui-\"]').remove();\n\t\t\t\t$('#main').html(data);\n\t\t\t\tapplySkin();\n\t\t\t});\n\t\t});\n\n\t\t$('#add_gt').click(function() {\n\t\t\t$.post('host_templates.php?action=item_add_gt', {\n\t\t\t\thost_template_id: $('#id').val(),\n\t\t\t\tgraph_template_id: $('#graph_template_id').val(),\n\t\t\t\t__csrf_magic: csrfMagicToken\n\t\t\t}).done(function(data) {\n\t\t\t\t$('div[class^=\"ui-\"]').remove();\n\t\t\t\t$('#main').html(data);\n\t\t\t\tapplySkin();\n\t\t\t});\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t});\n\t</script>\n\t<?php\n}\n\nfunction template() {\n\tglobal $host_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_hosts' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ht');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box(__('Device Templates'), '100%', '', '3', 'center', 'host_templates.php?action=edit');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_host_template' action='host_templates.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Device Templates');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='has_hosts' <?php print (get_request_var('has_hosts') == 'true' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='has_hosts'><?php print __('Has Devices');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t</td>\n\t\t<script type='text/javascript'>\n\t\tfunction applyFilter() {\n\t\t\tstrURL  = 'host_templates.php?header=false';\n\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\tstrURL += '&has_hosts='+$('#has_hosts').is(':checked');\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\tfunction clearFilter() {\n\t\t\tstrURL = 'host_templates.php?clear=1&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#refresh, #has_hosts').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#clear').click(function() {\n\t\t\t\tclearFilter();\n\t\t\t});\n\n\t\t\t$('#form_host_template').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\t\t});\n\t\t</script>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (host_template.name LIKE '%%\" . get_request_var('filter') . \"%%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('has_hosts') == 'true') {\n\t\t$sql_having = 'HAVING hosts>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(`rows`)\n\t\tFROM (\n\t\t\tSELECT\n\t\t\tCOUNT(host_template.id) AS `rows`, COUNT(DISTINCT host.id) AS hosts\n\t\t\tFROM host_template\n\t\t\tLEFT JOIN host ON host.host_template_id=host_template.id\n\t\t\t$sql_where\n\t\t\tGROUP BY host_template.id\n\t\t\t$sql_having\n\t\t) AS rs\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$template_list = db_fetch_assoc(\"SELECT\n\t\thost_template.id,host_template.name, COUNT(DISTINCT host.id) AS hosts\n\t\tFROM host_template\n\t\tLEFT JOIN host ON host.host_template_id=host_template.id\n\t\t$sql_where\n\t\tGROUP BY host_template.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('host_templates.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Device Templates'), 'page', 'main');\n\n\tform_start('host_templates.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array('display' => __('Device Template Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name of this Device Template.')),\n\t\t'host_template.id' => array('display' => __('ID'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The internal database ID for this Device Template.  Useful when performing automation or debugging.')),\n\t\t\"nosort\" => array('display' => __('Deletable'), 'align' => 'right', 'sort' => '', 'tip' => __('Device Templates in use cannot be Deleted.  In use is defined as being referenced by a Device.')),\n\t\t'hosts' => array('display' => __('Devices Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Devices using this Device Template.'))\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($template_list)) {\n\t\tforeach ($template_list as $template) {\n\t\t\tif ($template['hosts'] > 0) {\n\t\t\t\t$disabled = true;\n\t\t\t} else {\n\t\t\t\t$disabled = false;\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $template['id'], true, $disabled);\n\t\t\tform_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'host_templates.php?action=edit&id=' . $template['id']), $template['id']);\n\t\t\tform_selectable_cell($template['id'], $template['id'], '', 'right');\n\t\t\tform_selectable_cell($disabled ? __('No'):__('Yes'), $template['id'], '', 'right');\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"' . html_escape('host.php?reset=true&host_template_id=' . $template['id']) . '\">' . number_format_i18n($template['hosts'], '-1') . '</a>', $template['id'], '', 'right');\n\t\t\tform_checkbox_cell($template['name'], $template['id'], $disabled);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='4'><em>\" . __('No Device Templates Found') . \"</em></td></tr>\\n\";\n\t}\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($template_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($host_actions);\n\n\tform_end();\n}\n\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\nfunction reports_item_dnd() {\n\t/* ================= Input validation ================= */\n\tget_filter_request_var('id');\n\t/* ================= Input validation ================= */\n\n\t$continue = true;\n\n\tif (isset_request_var('report_item') && is_array(get_nfilter_request_var('report_item'))) {\n        $report_items = get_nfilter_request_var('report_item');\n\n        if (cacti_sizeof($report_items)) {\n            $sequence = 1;\n            foreach($report_items as $item) {\n                $item_id = str_replace('line', '', $item);\n                input_validate_input_number($item_id);\n\n                db_execute_prepared('UPDATE reports_items\n                    SET sequence = ?\n                    WHERE id = ?\n\t\t\t\t\tAND report_id = ?',\n                    array($sequence, $item_id, get_request_var('id')));\n\n                $sequence++;\n            }\n        }\n    }\n}\n\nfunction reports_form_save() {\n\tglobal $config, $messages;\n\n\tif (isset_request_var('save_component_report')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('font_size');\n\t\tget_filter_request_var('graph_width');\n\t\tget_filter_request_var('graph_height');\n\t\tget_filter_request_var('graph_columns');\n\t\t/* ==================================================== */\n\t\t$now = time();\n\n\t\tif (isempty_request_var('id')) {\n\t\t\t$save['user_id'] = $_SESSION['sess_user_id'];\n\t\t} else {\n\t\t\t$save['user_id'] = db_fetch_cell_prepared('SELECT user_id FROM reports WHERE id = ?', array(get_nfilter_request_var('id')));\n\t\t}\n\n\t\t$save['id']            = get_nfilter_request_var('id');\n\t\t$save['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['email']         = form_input_validate(get_nfilter_request_var('email'), 'email', '', false, 3);\n\t\t$save['enabled']       = (isset_request_var('enabled') ? 'on' : '');\n\n\t\t$save['cformat']       = (isset_request_var('cformat') ? 'on' : '');\n\t\t$save['format_file']   = get_nfilter_request_var('format_file');\n\t\t$save['font_size']     = form_input_validate(get_nfilter_request_var('font_size'), 'font_size', '^[0-9]+$', false, 3);\n\t\t$save['alignment']     = form_input_validate(get_nfilter_request_var('alignment'), 'alignment', '^[0-9]+$', false, 3);\n\t\t$save['graph_linked']  = (isset_request_var('graph_linked') ? 'on' : '');\n\n\t\t$save['graph_columns'] = form_input_validate(get_nfilter_request_var('graph_columns'), 'graph_columns', '^[0-9]+$', false, 3);\n\t\t$save['graph_width']   = form_input_validate(get_nfilter_request_var('graph_width'), 'graph_width', '^[0-9]+$', false, 3);\n\t\t$save['graph_height']  = form_input_validate(get_nfilter_request_var('graph_height'), 'graph_height', '^[0-9]+$', false, 3);\n\t\t$save['thumbnails']    = form_input_validate((isset_request_var('thumbnails') ? get_nfilter_request_var('thumbnails'):''), 'thumbnails', '', true, 3);\n\n\t\t$save['intrvl']        = form_input_validate(get_nfilter_request_var('intrvl'), 'intrvl', '^[-+]?[0-9]+$', false, 3);\n\t\t$save['count']         = form_input_validate(get_nfilter_request_var('count'), 'count', '^[0-9]+$', false, 3);\n\t\t$save['offset']        = '0';\n\n\t\t/* adjust mailtime according to rules */\n\t\t$timestamp = strtotime(get_nfilter_request_var('mailtime'));\n\t\tif ($timestamp === false) {\n\t\t\t$timestamp  = $now;\n\t\t} elseif (($timestamp + read_config_option('poller_interval')) < $now) {\n\t\t\t$timestamp += 86400;\n\n\t\t\t/* if the time is far into the past, make it the correct time, but tomorrow */\n\t\t\tif (($timestamp + read_config_option('poller_interval')) < $now) {\n\t\t\t\t$timestamp = strtotime('12:00am') + 86400 + date('H', $timestamp) * 3600 + date('i', $timestamp) * 60 + date('s', $timestamp);\n\t\t\t}\n\n\t\t\t$_SESSION['reports_message'] = __('Date/Time moved to the same time Tomorrow');\n\n\t\t\traise_message('reports_message');\n\t\t}\n\n\t\t$save['mailtime']     = form_input_validate($timestamp, 'mailtime', '^[0-9]+$', false, 3);\n\n\t\tif (get_nfilter_request_var('subject') != '') {\n\t\t\t$save['subject'] = get_nfilter_request_var('subject');\n\t\t} else {\n\t\t\t$save['subject'] = $save['name'];\n\t\t}\n\n\t\t$save['from_name']        = get_nfilter_request_var('from_name');\n\t\t$save['from_email']       = get_nfilter_request_var('from_email');\n\t\t$save['bcc']              = get_nfilter_request_var('bcc');\n\n\t\t$atype = get_nfilter_request_var('attachment_type');\n\t\tif (($atype != REPORTS_TYPE_INLINE_PNG) &&\n\t\t\t($atype != REPORTS_TYPE_INLINE_JPG) &&\n\t\t\t($atype != REPORTS_TYPE_INLINE_GIF) &&\n\t\t\t($atype != REPORTS_TYPE_ATTACH_PNG) &&\n\t\t\t($atype != REPORTS_TYPE_ATTACH_JPG) &&\n\t\t\t($atype != REPORTS_TYPE_ATTACH_GIF) &&\n\t\t\t($atype != REPORTS_TYPE_INLINE_PNG_LN) &&\n\t\t\t($atype != REPORTS_TYPE_INLINE_JPG_LN) &&\n\t\t\t($atype != REPORTS_TYPE_INLINE_GIF_LN)) {\n\t\t\t$atype = REPORTS_TYPE_INLINE_PNG;\n\t\t}\n\n\t\t$save['attachment_type']  = form_input_validate($atype, 'attachment_type', '^[0-9]+$', false, 3);\n\t\t$save['lastsent']         = 0;\n\n\t\tif (!is_error_message()) {\n\t\t\t$id = sql_save($save, 'reports');\n\n\t\t\tif ($id) {\n\t\t\t\traise_message('reports_save');\n\t\t\t} else {\n\t\t\t\traise_message('reports_save_failed');\n\t\t\t}\n\t\t}\n\n\t\theader('Location: ' . get_reports_page() . '?action=edit&header=false&id=' . (empty($id) ? get_nfilter_request_var('id') : $id));\n\t\texit;\n\t} elseif (isset_request_var('save_component_report_item')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('report_id');\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\t$save = array();\n\n\t\t$save['id']                = get_nfilter_request_var('id');\n\t\t$save['report_id']         = form_input_validate(get_nfilter_request_var('report_id'), 'report_id', '^[0-9]+$', false, 3);\n\t\t$save['sequence']          = form_input_validate(get_nfilter_request_var('sequence'), 'sequence', '^[0-9]+$', false, 3);\n\t\t$save['item_type']         = form_input_validate(get_nfilter_request_var('item_type'), 'item_type', '^[-0-9]+$', false, 3);\n\t\t$save['tree_id']           = (isset_request_var('tree_id') ? form_input_validate(get_nfilter_request_var('tree_id'), 'tree_id', '^[-0-9]+$', true, 3) : 0);\n\t\t$save['branch_id']         = (isset_request_var('branch_id') ? form_input_validate(get_nfilter_request_var('branch_id'), 'branch_id', '^[-0-9]+$', true, 3) : 0);\n\t\t$save['tree_cascade']      = (isset_request_var('tree_cascade') ? 'on':'');\n\t\t$save['graph_name_regexp'] = get_nfilter_request_var('graph_name_regexp');\n\t\t$save['host_template_id']  = (isset_request_var('host_template_id') ? form_input_validate(get_nfilter_request_var('host_template_id'), 'host_template_id', '^[-0-9]+$', true, 3) : 0);\n\t\t$save['host_id']           = (isset_request_var('host_id') ? form_input_validate(get_nfilter_request_var('host_id'), 'host_id', '^[-0-9]+$', true, 3) : 0);\n\t\t$save['graph_template_id'] = (isset_request_var('graph_template_id') ? form_input_validate(get_nfilter_request_var('graph_template_id'), 'graph_template_id', '^[-0-9]+$', true, 3) : 0);\n\t\t$save['local_graph_id']    = (isset_request_var('local_graph_id') ? form_input_validate(get_nfilter_request_var('local_graph_id'), 'local_graph_id', '^[0-9]+$', true, 3) : 0);\n\t\t$save['timespan']          = (isset_request_var('timespan') ? form_input_validate(get_nfilter_request_var('timespan'), 'timespan', '^[0-9]+$', true, 3) : 0);\n\t\t$save['item_text']         = (isset_request_var('item_text') ? form_input_validate(get_nfilter_request_var('item_text'), 'item_text', '', true, 3) : '');\n\t\t$save['align']             = (isset_request_var('align') ? form_input_validate(get_nfilter_request_var('align'), 'align', '^[0-9]+$', true, 3) : REPORTS_ALIGN_LEFT);\n\t\t$save['font_size']         = (isset_request_var('font_size') ? form_input_validate(get_nfilter_request_var('font_size'), 'font_size', '^[0-9]+$', true, 3) : REPORTS_FONT_SIZE);\n\n\t\tif (!is_error_message()) {\n\t\t\t$item_id = sql_save($save, 'reports_items');\n\n\t\t\tif ($item_id) {\n\t\t\t\traise_message('reports_item_save');\n\t\t\t} else {\n\t\t\t\traise_message('reports_item_save_failed');\n\t\t\t}\n\t\t}\n\n\t\theader('Location: ' . get_reports_page() . '?action=item_edit&header=false&id=' . get_nfilter_request_var('report_id') . '&item_id=' . (empty($item_id) ? get_nfilter_request_var('id') : $item_id));\n\t} else {\n\t\theader('Location: ' . get_reports_page() . '?header=false');\n\t}\n\texit;\n}\n\n\n/* ------------------------\n The 'actions' function\n ------------------------ */\nfunction reports_form_actions() {\n\tglobal $config, $reports_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == REPORTS_DELETE) { // delete\n\t\t\t\tdb_execute('DELETE FROM reports WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM reports_items WHERE ' . str_replace('id', 'report_id', array_to_sql_or($selected_items, 'id')));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_OWN) { // take ownership\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\treports_log(__FUNCTION__ . ', takeown: ' . $selected_items[$i] . ' user: ' . $_SESSION['sess_user_id'], false, 'REPORTS TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t\tdb_execute_prepared('UPDATE reports\n\t\t\t\t\t\tSET user_id = ?\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($_SESSION['sess_user_id'], $selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_DUPLICATE) { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\treports_log(__FUNCTION__ . ', duplicate: ' . $selected_items[$i] . ' name: ' . get_nfilter_request_var('name_format'), false, 'REPORTS TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t\tduplicate_reports($selected_items[$i], get_nfilter_request_var('name_format'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_ENABLE) { // enable\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\treports_log(__FUNCTION__ . ', enable: ' . $selected_items[$i], false, 'REPORTS TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t\tdb_execute_prepared('UPDATE reports\n\t\t\t\t\t\tSET enabled=\"on\"\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_DISABLE) { // disable\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\treports_log(__FUNCTION__ . ', disable: ' . $selected_items[$i], false, 'REPORTS TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t\t\t\tdb_execute_prepared('UPDATE reports\n\t\t\t\t\t\tSET enabled=\"\"\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_SEND_NOW) { // send now\n\t\t\t\t$message = '';\n\n\t\t\t\tkill_session_var('reports_message');\n\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\treports_send($selected_items[$i]);\n\n\t\t\t\t\tif (isset($_SESSION['reports_info']) && $_SESSION['reports_info'] != '') {\n\t\t\t\t\t\t$message .= ($message != '' ? '<br>':'') . $_SESSION['reports_info'];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($_SESSION['reports_error']) && $_SESSION['reports_error'] != '') {\n\t\t\t\t\t\t$message .= ($message != '' ? '<br>':'') . \"<span style='color:red;'>\" . $_SESSION['reports_error'] . '</span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tkill_session_var('reports_info');\n\t\t\t\t\tkill_session_var('reports_error');\n\t\t\t\t}\n\n\t\t\t\tif ($message != '') {\n\t\t\t\t\t$_SESSION['reports_message'] = $message;\n\t\t\t\t\traise_message('reports_message');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tforce_session_data();\n\n\t\theader('Location: ' . get_reports_page() . '?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$reports_list = ''; $i = 0;\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$reports_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM reports WHERE id = ?', array($matches[1]))) . '</li>';\n\n\t\t\t$reports_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\tgeneral_header();\n\n\tform_start(get_reports_page(), 'report');\n\n\thtml_start_box($reports_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (!isset($reports_array)) {\n\t\traise_message(40);\n\t\theader('Location: ' . get_reports_page() . '?header=false');\n\t\texit;\n\t} else {\n\t\t$save_html = \"<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' name='save'>\";\n\n\t\tif (get_nfilter_request_var('drp_action') == REPORTS_DELETE) { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the following Report(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$reports_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t} elseif (is_reports_admin() && get_nfilter_request_var('drp_action') == REPORTS_OWN) { // take ownership\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to take ownership of the following Report(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$reports_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_DUPLICATE) { // duplicate\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to duplicate the following Report(s).  You may optionally change the title for the new Reports') . \".</p>\n\t\t\t\t\t<div class='itemlist'><ul>$reports_list</ul></div>\n\t\t\t\t\t<p>\" . __('Name Format:') . \"<br>\\n\";\n\n\t\t\tform_text_box('name_format', '<name> (1)', '', '255', '30', 'text');\n\n\t\t\tprint \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_ENABLE) { // enable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to enable the following Report(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$reports_list</ul></div>\n\t\t\t\t\t<p>\" . __('Please be certain that those Report(s) have successfully been tested first!') . \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_DISABLE) { // disable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to disable the following Reports.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$reports_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == REPORTS_SEND_NOW) { // send now\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to send the following Report(s) now.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$reports_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\t\t}\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($reports_array) ? serialize($reports_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' onClick='cactiReturnTo()' value='\" . ($save_html == '' ? 'Return':'Cancel') . \"' name='cancel'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* --------------------------\n Report Item Functions\n -------------------------- */\nfunction reports_send($id) {\n\tglobal $config;\n\n\t/* ================= input validation ================= */\n\tinput_validate_input_number($id);\n\t/* ==================================================== */\n\n\t$report = db_fetch_row_prepared('SELECT *\n\t\tFROM reports\n\t\tWHERE id = ?',\n\t\tarray($id));\n\n\tif (!cacti_sizeof($report)) {\n\t\t/* set error condition */\n\t} elseif ($report['user_id'] == $_SESSION['sess_user_id']) {\n\t\treports_log(__FUNCTION__ . ', send now, report_id: ' . $id, false, 'REPORTS TRACE', POLLER_VERBOSITY_MEDIUM);\n\n\t\t/* use report name as default EMail title */\n\t\tif ($report['subject'] == '') {\n\t\t\t$report['subject'] = $report['name'];\n\t\t}\n\n\t\tif ($report['email'] == '') {\n\t\t\t$_SESSION['reports_error'] = __('Unable to send Report \\'%s\\'.  Please set destination e-mail addresses',  $report['name']);\n\t\t\tif (!isset_request_var('selected_items')) {\n\t\t\t\traise_message('reports_error');\n\t\t\t}\n\t\t} elseif ($report['subject'] == '') {\n\t\t\t$_SESSION['reports_error'] = __('Unable to send Report \\'%s\\'.  Please set an e-mail subject',  $report['name']);\n\t\t\tif (!isset_request_var('selected_items')) {\n\t\t\t\traise_message('reports_error');\n\t\t\t}\n\t\t} elseif ($report['from_name'] == '') {\n\t\t\t$_SESSION['reports_error'] = __('Unable to send Report \\'%s\\'.  Please set an e-mail From Name',  $report['name']);\n\t\t\tif (!isset_request_var('selected_items')) {\n\t\t\t\traise_message('reports_error');\n\t\t\t}\n\t\t} elseif ($report['from_email'] == '') {\n\t\t\t$_SESSION['reports_error'] = __('Unable to send Report \\'%s\\'.  Please set an e-mail from address',  $report['name']);\n\t\t\tif (!isset_request_var('selected_items')) {\n\t\t\t\traise_message('reports_error');\n\t\t\t}\n\t\t} else {\n\t\t\tgenerate_report($report, true);\n\t\t}\n\t}\n}\n\nfunction reports_item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tmove_item_down('reports_items', get_request_var('item_id'), 'report_id=' . get_request_var('id'));\n}\n\nfunction reports_item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('item_id');\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\tmove_item_up('reports_items', get_request_var('item_id'), 'report_id=' . get_request_var('id'));\n}\n\nfunction reports_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('item_id');\n\t/* ==================================================== */\n\tdb_execute_prepared('DELETE FROM reports_items WHERE id = ?', array(get_request_var('item_id')));\n}\n\nfunction reports_item_edit() {\n\tglobal $config, $item_types, $graph_timespans, $alignment;\n\n\t$trees           = array();\n\t$branches        = array();\n\t$hosts           = array();\n\t$graph_templates = array();\n\t$graphs          = array();\n\n\t$report_item = array();\n\tif (isset_request_var('item_id')) {\n\t\t$report_item = db_fetch_row_prepared('SELECT *\n\t\t\tFROM reports_items WHERE id = ?',\n\t\t\tarray(get_filter_request_var('item_id')));\n\t}\n\n\tif (cacti_sizeof($report_item) || $report_item['item_type'] == REPORTS_ITEM_GRAPH) {\n\t\t$trees           = array();\n\t\t$branches        = array();\n\n\t\t/* get the hosts sql first */\n\t\t$hosts = null;\n\t\t$total_rows = -1;\n\t\tif (isset_request_var('host_template_id')) {\n\t\t\tif (get_filter_request_var('host_template_id') > 0) {\n\t\t\t\t$hosts = array_rekey(\n\t\t\t\t\tget_allowed_devices('h.host_template_id =' . get_request_var('host_template_id'), 'description', '', $total_rows),\n\t\t\t\t\t'id', 'description'\n\t\t\t\t);\n\t\t\t}\n\t\t} elseif ($report_item['host_template_id'] > 0) {\n\t\t\t$hosts = array_rekey(\n\t\t\t\tget_allowed_devices('h.host_template_id =' . $report_item['host_template_id'], 'description', '', $total_rows),\n\t\t\t\t'id', 'description'\n\t\t\t);\n\t\t}\n\n\t\tif ($hosts == null) {\n\t\t\t$hosts = array_rekey(\n\t\t\t\tget_allowed_devices('', 'description', '', $total_rows),\n\t\t\t\t'id','description'\n\t\t\t);\n\t\t}\n\n\t\t// suppress total rows collection\n\t\t$total_rows = -1;\n\n\t\t$graph_templates = array();\n\t\tif (isset_request_var('host_id') && get_filter_request_var('host_id') > 0) {\n\t\t\t$graph_templates = array_rekey(\n\t\t\t\tget_allowed_graph_templates('h.id = ' . get_request_var('host_id')),\n\t\t\t\t'id', 'name', $total_rows\n\t\t\t);\n\t\t} elseif ($report_item['host_id'] > 0) {\n\t\t\t$graph_templates = array_rekey(\n\t\t\t\tget_allowed_graph_templates('h.id = ' . $report_item['host_id']),\n\t\t\t\t'id', 'name', $total_rows\n\t\t\t);\n\t\t}\n\n\t\t$sql_where = '';\n\t\t$graphs    = array();\n\t\tif (isset_request_var('host_template_id')) {\n\t\t\tif (get_filter_request_var('host_template_id') > 0) {\n\t\t\t\t$sql_where = 'h.host_template_id=' . get_request_var('host_template_id');\n\t\t\t}\n\t\t} elseif ($report_item['host_template_id'] > 0) {\n\t\t\t$sql_where = 'h.host_template_id=' . $report_item['host_template_id'];\n\t\t}\n\n\t\tif (isset_request_var('host_id')) {\n\t\t\tif (get_filter_request_var('host_id') > 0) {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'gl.host_id=' . get_request_var('host_id');\n\t\t\t}\n\t\t} elseif ($report_item['host_id'] > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'gl.host_id=' . $report_item['host_id'];\n\t\t}\n\n\t\tif (isset_request_var('graph_template_id')) {\n\t\t\tif (get_filter_request_var('graph_template_id') > 0) {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'gl.graph_template_id=' . get_request_var('graph_template_id');\n\t\t\t}\n\t\t} elseif ($report_item['graph_template_id'] > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'gl.graph_template_id=' . $report_item['graph_template_id'];\n\t\t}\n\n\t\tif ($sql_where != '') {\n\t\t\t$graphs = array_rekey(\n\t\t\t\tget_allowed_graphs($sql_where),\n\t\t\t\t'local_graph_id', 'title_cache'\n\t\t\t);\n\t\t\t$agg   = array_rekey(\n\t\t\t\tget_allowed_aggregate_graphs($sql_where),\n\t\t\t\t'local_graph_id', 'title_cache'\n\t\t\t);\n\t\t} else {\n\t\t\t$sql_where = 'gl.graph_template_id=0';\n\t\t\t$graphs = array_rekey(\n\t\t\t\tget_allowed_graphs($sql_where),\n\t\t\t\t'local_graph_id', 'title_cache'\n\t\t\t);\n\t\t\t$agg   = array_rekey(\n\t\t\t\tget_allowed_aggregate_graphs($sql_where),\n\t\t\t\t'local_graph_id', 'title_cache'\n\t\t\t);\n\t\t}\n\n\t\t$graphs = array_merge($graphs, $agg);\n\t}\n\n\n\tif (!isset($report_item) || $report_item['item_type'] == REPORTS_ITEM_TREE) {\n\t\t$trees = array_rekey(\n\t\t\tget_allowed_trees(),\n\t\t\t'id', 'name'\n\t\t);\n\n\t\t$sql_where = '';\n\t\tif (isset_request_var('tree_id')) {\n\t\t\tif (get_filter_request_var('tree_id') > 0) {\n\t\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'gt.id=' . get_request_var('tree_id');\n\t\t\t}\n\t\t} elseif ($report_item['tree_id'] > 0) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'') . 'gt.id=' . $report_item['tree_id'];\n\t\t}\n\n\t\t$branches = array_rekey(\n\t\t\tget_allowed_branches($sql_where),\n\t\t\t'id', 'name'\n\t\t);\n\t}\n\n\t$fields_reports_item_edit = array(\n\t\t'item_type' => array(\n\t\t\t'friendly_name' => __('Type'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => REPORTS_ITEM_GRAPH,\n\t\t\t'description' => __('Item Type to be added.'),\n\t\t\t'value' => '|arg1:item_type|',\n\t\t\t'on_change' => 'toggle_item_type()',\n\t\t\t'array' => $item_types\n\t\t),\n\t\t'tree_id' => array(\n\t\t\t'friendly_name' => __('Graph Tree'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => REPORTS_TREE_NONE,\n\t\t\t'none_value' => __('None'),\n\t\t\t'description' => __('Select a Tree to use.'),\n\t\t\t'value' => '|arg1:tree_id|',\n\t\t\t'on_change' => 'applyChange()',\n\t\t\t'array' => $trees\n\t\t),\n\t\t'branch_id' => array(\n\t\t\t'friendly_name' => __('Graph Tree Branch'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => REPORTS_TREE_NONE,\n\t\t\t'none_value' => __('All'),\n\t\t\t'description' => __('Select a Tree Branch to use.'),\n\t\t\t'value' => '|arg1:branch_id|',\n\t\t\t'on_change' => 'applyChange()',\n\t\t\t'array' => $branches\n\t\t),\n\t\t'tree_cascade' => array(\n\t\t\t'friendly_name' => __('Cascade to Branches'),\n\t\t\t'method' => 'checkbox',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Should all children branch Graphs be rendered?'),\n\t\t\t'value' => '|arg1:tree_cascade|'\n\t\t),\n\t\t'graph_name_regexp' => array(\n\t\t\t'friendly_name' => __('Graph Name Regular Expression'),\n\t\t\t'method' => 'textbox',\n\t\t\t'default' => '',\n\t\t\t'description' => __('A Perl compatible regular expression (REGEXP) used to select graphs to include from the tree.'),\n\t\t\t'max_length' => 255,\n\t\t\t'size' => 80,\n\t\t\t'value' => '|arg1:graph_name_regexp|'\n\t\t),\n\t\t'host_template_id' => array(\n\t\t\t'friendly_name' => __('Device Template'),\n\t\t\t'method' => 'drop_sql',\n\t\t\t'default' => REPORTS_HOST_NONE,\n\t\t\t'none_value' => __('None'),\n\t\t\t'description' => __('Select a Device Template to use.'),\n\t\t\t'value' => '|arg1:host_template_id|',\n\t\t\t'on_change' => 'applyChange()',\n\t\t\t'sql' => \"SELECT DISTINCT ht.id, ht.name FROM host_template AS ht INNER JOIN host AS h ON h.host_template_id=ht.id ORDER BY name\"\n\t\t),\n\t\t'host_id' => array(\n\t\t\t'friendly_name' => __('Device'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => REPORTS_HOST_NONE,\n\t\t\t'description' => __('Select a Device to specify a Graph'),\n\t\t\t'value' => '|arg1:host_id|',\n\t\t\t'none_value' => __('None'),\n\t\t\t'on_change' => 'applyChange()',\n\t\t\t'array' => $hosts\n\t\t),\n\t\t'graph_template_id' => array(\n\t\t\t'friendly_name' => __('Graph Template'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => '0',\n\t\t\t'description' => __('Select a Graph Template for the host'),\n\t\t\t'none_value' => __('None'),\n\t\t\t'on_change' => 'applyChange()',\n\t\t\t'value' => '|arg1:graph_template_id|',\n\t\t\t'array' => $graph_templates\n\t\t),\n\t\t'local_graph_id' => array(\n\t\t\t'friendly_name' => __('Graph Name'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => '0',\n\t\t\t'description' => __('The Graph to use for this report item.'),\n\t\t\t'none_value' => __('None'),\n\t\t\t'on_change' => 'graphImage(this.value)',\n\t\t\t'value' => '|arg1:local_graph_id|',\n\t\t\t'array' => $graphs\n\t\t),\n\t\t'timespan' => array(\n\t\t\t'friendly_name' => __('Graph Timespan'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => GT_LAST_DAY,\n\t\t\t'description' => __('The Graph End time will be set to the scheduled report send time.  So, if you wish the end time on the various Graphs to be midnight, ensure you send the report at midnight.  The Graph Start time will be the End Time minus the Graph Timespan.'),\n\t\t\t'array' => $graph_timespans,\n\t\t\t'value' => '|arg1:timespan|'\n\t\t),\n\t\t'align' => array(\n\t\t\t'friendly_name' => __('Alignment'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => REPORTS_ALIGN_LEFT,\n\t\t\t'description' => __('Alignment of the Item'),\n\t\t\t'value' => '|arg1:align|',\n\t\t\t'array' => $alignment\n\t\t),\n\t\t'item_text' => array(\n\t\t\t'friendly_name' => __('Fixed Text'),\n\t\t\t'method' => 'textbox',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Enter descriptive Text'),\n\t\t\t'max_length' => 255,\n\t\t\t'value' => '|arg1:item_text|'\n\t\t),\n\t\t'font_size' => array(\n\t\t\t'friendly_name' => __('Font Size'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => REPORTS_FONT_SIZE,\n\t\t\t'array' => array(7 => 7, 8 => 8, 10 => 10, 12 => 12, 14 => 14, 16 => 16, 18 => 18, 20 => 20, 24 => 24, 28 => 28, 32 => 32),\n\t\t\t'description' => __('Font Size of the Item'),\n\t\t\t'value' => '|arg1:font_size|'\n\t\t),\n\t\t'sequence' => array(\n\t\t\t'method' => 'view',\n\t\t\t'friendly_name' => __('Sequence'),\n\t\t\t'description' => __('Sequence of Item.'),\n\t\t\t'value' => '|arg1:sequence|'\n\t\t),\n\t);\n\n\t# fetch the current report record\n\t$report = db_fetch_row_prepared('SELECT * FROM reports WHERE id = ?', array(get_filter_request_var('id')));\n\n\t# if an existing item was requested, fetch data for it\n\tif (isset_request_var('item_id') && (get_filter_request_var('item_id') > 0)) {\n\t\t$reports_item = db_fetch_row_prepared('SELECT * FROM reports_items WHERE id = ?', array(get_request_var('item_id')));\n\n\t\t$header_label = __('Report Item [edit Report: %s]', $report['name']);\n\t} else {\n\t\t$header_label = __('Report Item [new Report: %s]', $report['name']);\n\t\t$reports_item = array();\n\t\t$reports_item['report_id'] = get_request_var('id');\n\t\t$reports_item['sequence']  = get_sequence('', 'sequence', 'reports_items', 'report_id=' . get_request_var('id'));\n\t\t$reports_item['host_id']   = REPORTS_HOST_NONE;\n\t}\n\n\t// if a different item_type was selected, use it\n\tif (isset_request_var('item_type')) {\n\t\tif (get_filter_request_var('item_type') > 0) {\n\t\t\t$reports_item['item_type'] = get_request_var('item_type');\n\t\t}\n\t}\n\n\t$reports_item = set_reports_item_var($reports_item, 'host_id');\n\t$reports_item = set_reports_item_var($reports_item, 'branch_id');\n\t$reports_item = set_reports_item_var($reports_item, 'tree_id');\n\t$reports_item = set_reports_item_var($reports_item, 'host_template_id');\n\t$reports_item = set_reports_item_var($reports_item, 'graph_template_id');\n\n\tif ($reports_item['tree_id'] == 0) {\n\t\t$reports_item['branch_id'] = 0;\n\t}\n\n\tload_current_session_value('host_template_id', 'sess_reports_edit_host_template_id', 0);\n\tload_current_session_value('host_id', 'sess_reports_edit_host_id', 0);\n\tload_current_session_value('tree_id', 'sess_reports_edit_tree_id', 0);\n\n\t/* set the default item alignment */\n\t$fields_reports_item_edit['align']['default'] = $report['alignment'];\n\n\t/* set the default item alignment */\n\t$fields_reports_item_edit['font_size']['default'] = $report['font_size'];\n\n\tform_start(get_current_page(), 'chk');\n\n\t# ready for displaying the fields\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_reports_item_edit, (isset($reports_item) ? $reports_item : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('id', (isset($reports_item['id']) ? $reports_item['id'] : '0'), '');\n\tform_hidden_box('report_id', (isset($reports_item['report_id']) ? $reports_item['report_id'] : '0'), '');\n\tform_hidden_box('save_component_report_item', '1', '');\n\n\techo \"<table id='graphdiv' style='text-align:center;width:100%;display:none;'><tr><td class='center' id='graph'></td></tr></table>\";\n\n\tform_save_button(get_reports_page() . '?action=edit&tab=items&id=' . get_request_var('id'), 'return');\n\n\tif (isset($item['item_type']) && $item['item_type'] == REPORTS_ITEM_GRAPH) {\n\t\t$timespan = array();\n\t\t# get config option for first-day-of-the-week\n\t\t$first_weekdayid = read_user_setting('first_weekdayid');\n\t\t# get start/end time-since-epoch for actual time (now()) and given current-session-timespan\n\t\tget_timespan($timespan, time(), $item['timespan'], $first_weekdayid);\n\t}\n\n\t/* don't cache previews */\n\t$_SESSION['custom'] = 'true';\n\n\t?>\n\t<script type='text/javascript'>\n\n\tuseCss=<?php print ($report['cformat'] == 'on' ? 'true':'false');?>;\n\n\tfunction toggle_item_type() {\n\t\t//console.log($('#item_type').val());\n\t\t// right bracket ')' does not come with a field\n\t\tif ($('#item_type').val() == '<?php print REPORTS_ITEM_GRAPH;?>') {\n\t\t\t$('#row_align').show();\n\t\t\t$('#row_tree_id').hide();\n\t\t\t$('#row_branch_id').hide();\n\t\t\t$('#row_tree_cascade').hide();\n\t\t\t$('#row_graph_name_regexp').hide();\n\t\t\t$('#row_host_template_id').show();\n\t\t\t$('#row_host_id').show();\n\t\t\t$('#row_graph_template_id').show();\n\t\t\t$('#row_local_graph_id').show();\n\t\t\t$('#row_timespan').show();\n\t\t\t$('#item_text').val('');\n\t\t\t$('#row_item_text').hide();\n\t\t\t$('#row_font_size').hide();\n\t\t} else if ($('#item_type').val() == '<?php print REPORTS_ITEM_TEXT;?>') {\n\t\t\t$('#row_align').show();\n\t\t\t$('#row_tree_id').hide();\n\t\t\t$('#row_branch_id').hide();\n\t\t\t$('#row_tree_cascade').hide();\n\t\t\t$('#row_graph_name_regexp').hide();\n\t\t\t$('#row_host_template_id').hide();\n\t\t\t$('#row_host_id').hide();\n\t\t\t$('#row_graph_template_id').hide();\n\t\t\t$('#row_local_graph_id').hide();\n\t\t\t$('#row_timespan').hide();\n\t\t\t$('#row_item_text').show();\n\t\t\tif (useCss) {\n\t\t\t\t$('#row_font_size').hide();\n\t\t\t} else {\n\t\t\t\t$('#row_font_size').show();\n\t\t\t}\n\t\t} else if ($('#item_type').val() == '<?php print REPORTS_ITEM_TREE;?>') {\n\t\t\t$('#row_align').show();\n\t\t\t$('#row_tree_id').show();\n\t\t\t$('#row_branch_id').show();\n\t\t\t$('#row_tree_cascade').show();\n\t\t\t$('#row_graph_name_regexp').show();\n\t\t\t$('#row_host_template_id').hide();\n\t\t\t$('#row_host_id').hide();\n\t\t\t$('#row_graph_template_id').hide();\n\t\t\t$('#row_local_graph_id').hide();\n\t\t\t$('#row_timespan').show();\n\t\t\t$('#row_item_text').hide();\n\t\t\tif (useCss) {\n\t\t\t\t$('#row_font_size').hide();\n\t\t\t} else {\n\t\t\t\t$('#row_font_size').show();\n\t\t\t}\n\t\t} else {\n\t\t\t$('#row_tree_id').hide();\n\t\t\t$('#row_branch_id').hide();\n\t\t\t$('#row_tree_cascade').hide();\n\t\t\t$('#row_graph_name_regexp').hide();\n\t\t\t$('#row_host_template_id').hide();\n\t\t\t$('#row_host_id').hide();\n\t\t\t$('#row_graph_template_id').hide();\n\t\t\t$('#row_local_graph_id').hide();\n\t\t\t$('#row_timespan').hide();\n\t\t\t$('#row_item_text').hide();\n\t\t\t$('#row_font_size').hide();\n\t\t\t$('#row_align').hide();\n\t\t}\n\t}\n\n\tfunction applyChange() {\n\t\tstrURL  = '?action=item_edit&header=false'\n\t\tstrURL += '&id=' + $('#report_id').val();\n\t\tstrURL += '&item_id=' + $('#id').val();\n\t\tstrURL += '&item_type=' + $('#item_type').val();\n\t\tstrURL += '&tree_id=' + $('#tree_id').val();\n\t\tstrURL += '&branch_id=' + $('#branch_id').val();\n\t\tstrURL += '&host_template_id=' + $('#host_template_id').val();\n\t\tstrURL += '&host_id=' + $('#host_id').val();\n\t\tstrURL += '&graph_template_id=' + $('#graph_template_id').val();\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction graphImage(graphId) {\n\t\tif (graphId > 0) {\n\t\t\t$('#graphdiv').show();\n\t\t\t$('#graph').html(\"<img class='center' src='<?php print $config['url_path'];?>graph_image.php\"+\n\t\t\t\t\t\"?local_graph_id=\"+graphId+\n\t\t\t\t\t\"&image_format=png\"+\n\t\t\t\t\t\"<?php print (($report['graph_width'] > 0) ? '&graph_width=' . $report['graph_width']:'');?>\"+\n\t\t\t\t\t\"<?php print (($report['graph_height'] > 0) ? '&graph_height=' . $report['graph_height']:'');?>\"+\n\t\t\t\t\t\"<?php print (($report['thumbnails'] == 'on') ? '&graph_nolegend=true':'');?>\"+\n\t\t\t\t\t\"<?php print ((isset($timespan['begin_now'])) ? '&graph_start=' . $timespan['begin_now']:'');?>\"+\n\t\t\t\t\t\"<?php print ((isset($timespan['end_now'])) ? '&graph_end=' . $timespan['end_now']:'');?>\"+\n\t\t\t\t\t\"&rra_id=0'>\");\n\t\t} else {\n\t\t\t$('#graphdiv').hide();\n\t\t\t$('#graph').html('');\n\t\t}\n\t}\n\n\t$(function() {\n\t\t$('#item_type').change(function() {\n\t\t\ttoggle_item_type();\n\t\t\tapplyChange();\n\t\t});\n\n\t\ttoggle_item_type();\n\n\t\tif ($('#item_type').val() == 1) {\n\t\t\tgraphImage($('#local_graph_id').val());\n\t\t}\n\t});\n\t</script>\n\t<?php\n}\n\n\n/* ---------------------\n Report Functions\n --------------------- */\n\nfunction reports_edit() {\n\tglobal $config, $attach_types, $alignment, $reports_interval;\n\n\t/* get the format files */\n\t$formats = reports_get_format_files();\n\n\t$fields_reports_edit = array(\n\t\t'genhead' => array(\n\t\t\t'friendly_name' => __('General Settings'),\n\t\t\t'method' => 'spacer',\n\t\t\t'collapsible' => 'true'\n\t\t\t),\n\t\t'name' => array(\n\t\t\t'friendly_name' => __('Report Name'),\n\t\t\t'method' => 'textbox',\n\t\t\t'default' => __('New Report'),\n\t\t\t'description' => __('Give this Report a descriptive Name'),\n\t\t\t'max_length' => 99,\n\t\t\t'value' => '|arg1:name|'\n\t\t\t),\n\t\t'enabled' => array(\n\t\t\t'friendly_name' => __('Enable Report'),\n\t\t\t'method' => 'checkbox',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Check this box to enable this Report.'),\n\t\t\t'value' => '|arg1:enabled|',\n\t\t\t'form_id' => false\n\t\t\t),\n\t\t'formathead' => array(\n\t\t\t'friendly_name' => __('Output Formatting'),\n\t\t\t'method' => 'spacer',\n\t\t\t'collapsible' => 'true'\n\t\t\t),\n\t\t'cformat' => array(\n\t\t\t'friendly_name' => __('Use Custom Format HTML'),\n\t\t\t'method' => 'checkbox',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Check this box if you want to use custom html and CSS for the report.'),\n\t\t\t'value' => '|arg1:cformat|',\n\t\t\t'form_id' => false\n\t\t\t),\n\t\t'format_file' => array(\n\t\t\t'friendly_name' => __('Format File to Use'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => 'default.format',\n\t\t\t'description' => __('Choose the custom html wrapper and CSS file to use.  This file contains both html and CSS to wrap around your report.  If it contains more than simply CSS, you need to place a special <REPORT> tag inside of the file.  This format tag will be replaced by the report content.  These files are located in the \\'formats\\' directory.'),\n\t\t\t'value' => '|arg1:format_file|',\n\t\t\t'array' => $formats\n\t\t\t),\n\t\t'font_size' => array(\n\t\t\t'friendly_name' => __('Default Text Font Size'),\n\t\t\t'description' => __('Defines the default font size for all text in the report including the Report Title.'),\n\t\t\t'default' => 16,\n\t\t\t'method' => 'drop_array',\n\t\t\t'array' => array(7 => 7, 8 => 8, 10 => 10, 12 => 12, 14 => 14, 16 => 16, 18 => 18, 20 => 20, 24 => 24, 28 => 28, 32 => 32),\n\t\t\t'value' => '|arg1:font_size|'\n\t\t\t),\n\t\t'alignment' => array(\n\t\t\t'friendly_name' => __('Default Object Alignment'),\n\t\t\t'description' => __('Defines the default Alignment for Text and Graphs.'),\n\t\t\t'default' => 0,\n\t\t\t'method' => 'drop_array',\n\t\t\t'array' => $alignment,\n\t\t\t'value' => '|arg1:alignment|'\n\t\t\t),\n\t\t'graph_linked' => array(\n\t\t\t'friendly_name' => __('Graph Linked'),\n\t\t\t'method' => 'checkbox',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Should the Graphs be linked back to the Cacti site?'),\n\t\t\t'value' => '|arg1:graph_linked|'\n\t\t\t),\n\t\t'graphhead' => array(\n\t\t\t'friendly_name' => __('Graph Settings'),\n\t\t\t'method' => 'spacer',\n\t\t\t'collapsible' => 'true'\n\t\t\t),\n\t\t'graph_columns' => array(\n\t\t\t'friendly_name' => __('Graph Columns'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => '1',\n\t\t\t'array' => array(1 => 1, 2, 3, 4, 5),\n\t\t\t'description' => __('The number of Graph columns.'),\n\t\t\t'value' => '|arg1:graph_columns|'\n\t\t\t),\n\t\t'graph_width' => array(\n\t\t\t'friendly_name' => __('Graph Width'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => '300',\n\t\t\t'array' => array(100 => 100, 150 => 150, 200 => 200, 250 => 250, 300 => 300, 350 => 350, 400 => 400, 500 => 500, 600 => 600, 700 => 700, 800 => 800, 900 => 900, 1000 => 1000),\n\t\t\t'description' => __('The Graph width in pixels.'),\n\t\t\t'value' => '|arg1:graph_width|'\n\t\t\t),\n\t\t'graph_height' => array(\n\t\t\t'friendly_name' => __('Graph Height'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => '125',\n\t\t\t'array' => array(75 => 75, 100 => 100, 125 => 125, 150 => 150, 175 => 175, 200 => 200, 250 => 250, 300 => 300),\n\t\t\t'description' => __('The Graph height in pixels.'),\n\t\t\t'value' => '|arg1:graph_height|'\n\t\t\t),\n\t\t'thumbnails' => array(\n\t\t\t'friendly_name' => __('Thumbnails'),\n\t\t\t'method' => 'checkbox',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Should the Graphs be rendered as Thumbnails?'),\n\t\t\t'value' => '|arg1:thumbnails|'\n\t\t\t),\n\t\t'freqhead' => array(\n\t\t\t'friendly_name' => __('Email Frequency'),\n\t\t\t'method' => 'spacer',\n\t\t\t'collapsible' => 'true'\n\t\t\t),\n\t\t'mailtime' => array(\n\t\t\t'friendly_name' => __('Next Timestamp for Sending Mail Report'),\n\t\t\t'description' => __('Start time for [first|next] mail to take place. All future mailing times will be based upon this start time. A good example would be 2:00am. The time must be in the future.  If a fractional time is used, say 2:00am, it is assumed to be in the future.'),\n\t\t\t'default' => 0,\n\t\t\t'method' => 'textbox',\n\t\t\t'size' => 20,\n\t\t\t'max_length' => 20,\n\t\t\t'value' => '|arg1:mailtime|'\n\t\t\t),\n\t\t'intrvl' => array(\n\t\t\t'friendly_name' => __('Report Interval'),\n\t\t\t'description' => __('Defines a Report Frequency relative to the given Mailtime above.') . '<br>' .\n\t\t\t\t__('e.g. \\'Week(s)\\' represents a weekly Reporting Interval.'),\n\t\t\t'default' => REPORTS_SCHED_INTVL_DAY,\n\t\t\t'method' => 'drop_array',\n\t\t\t'array' => $reports_interval,\n\t\t\t'value' => '|arg1:intrvl|'\n\t\t\t),\n\t\t'count' => array(\n\t\t\t'friendly_name' => __('Interval Frequency'),\n\t\t\t'description' => __('Based upon the Timespan of the Report Interval above, defines the Frequency within that Interval.') . '<br>' .\n\t\t\t\t__('e.g. If the Report Interval is \\'Month(s)\\', then \\'2\\' indicates Every \\'2 Month(s) from the next Mailtime.\\' Lastly, if using the Month(s) Report Intervals, the \\'Day of Week\\' and the \\'Day of Month\\' are both calculated based upon the Mailtime you specify above.'),\n\t\t\t'default' => REPORTS_SCHED_COUNT,\n\t\t\t'method' => 'textbox',\n\t\t\t'size' => 10,\n\t\t\t'max_length' => 10,\n\t\t\t'value' => '|arg1:count|'\n\t\t\t),\n\t\t'emailhead' => array(\n\t\t\t'friendly_name' => __('Email Sender/Receiver Details'),\n\t\t\t'method' => 'spacer',\n\t\t\t'collapsible' => 'true'\n\t\t\t),\n\t\t'subject' => array(\n\t\t\t'friendly_name' => __('Subject'),\n\t\t\t'method' => 'textbox',\n\t\t\t'default' => __('Cacti Report'),\n\t\t\t'description' => __('This value will be used as the default Email subject.  The report name will be used if left blank.'),\n\t\t\t'max_length' => 255,\n\t\t\t'value' => '|arg1:subject|'\n\t\t\t),\n\t\t'from_name' => array(\n\t\t\t'friendly_name' => __('From Name'),\n\t\t\t'method' => 'textbox',\n\t\t\t'default' => read_config_option('settings_from_name'),\n\t\t\t'description' => __('This Name will be used as the default E-mail Sender'),\n\t\t\t'max_length' => 255,\n\t\t\t'value' => '|arg1:from_name|'\n\t\t\t),\n\t\t'from_email' => array(\n\t\t\t'friendly_name' => __('From Email Address'),\n\t\t\t'method' => 'textbox',\n\t\t\t'default' => read_config_option('settings_from_email'),\n\t\t\t'description' => __('This Address will be used as the E-mail Senders address'),\n\t\t\t'max_length' => 255,\n\t\t\t'value' => '|arg1:from_email|'\n\t\t\t),\n\t\t'email' => array(\n\t\t\t'friendly_name' => __('To Email Address(es)'),\n\t\t\t'method' => 'textarea',\n\t\t\t'textarea_rows' => '5',\n\t\t\t'textarea_cols' => '60',\n\t\t\t'class' => 'textAreaNotes',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Please separate multiple addresses by comma (,)'),\n\t\t\t'max_length' => 255,\n\t\t\t'value' => '|arg1:email|'\n\t\t\t),\n\t\t'bcc' => array(\n\t\t\t'friendly_name' => __('BCC Address(es)'),\n\t\t\t'method' => 'textarea',\n\t\t\t'textarea_rows' => '5',\n\t\t\t'textarea_cols' => '60',\n\t\t\t'class' => 'textAreaNotes',\n\t\t\t'default' => '',\n\t\t\t'description' => __('Blind carbon copy. Please separate multiple addresses by comma (,)'),\n\t\t\t'max_length' => 255,\n\t\t\t'value' => '|arg1:bcc|'\n\t\t\t),\n\t\t'attachment_type' => array(\n\t\t\t'friendly_name' => __('Image attach type'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'default' => read_config_option('reports_default_image_format'),\n\t\t\t'description' => __('Select one of the given Types for the Image Attachments'),\n\t\t\t'value' => '|arg1:attachment_type|',\n\t\t\t'array' => $attach_types\n\t\t\t),\n\t);\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'name' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'tab' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'details',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_reports');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* display the report */\n\t$report = array();\n\tif (get_filter_request_var('id') > 0) {\n\t\t$report = db_fetch_row_prepared('SELECT * FROM reports WHERE id = ?', array(get_request_var('id')));\n\t\t# reformat mailtime to human readable format\n\t\t$report['mailtime'] = date(reports_date_time_format(), $report['mailtime']);\n\t\t# setup header\n\t\t$header_label = __('[edit: %s]', html_escape($report['name']));\n\t\t$tabs = array('details' => __('Details'), 'items' => __('Items'), 'preview' => __('Preview'), 'events' => __('Events'));\n\t} else {\n\t\t$header_label = __('[new]');\n\t\t# initialize mailtime with current timestamp\n\t\t$report['mailtime'] = date(reports_date_time_format(), floor(time() / read_config_option('poller_interval')) * read_config_option('poller_interval'));\n\t\t$tabs = array('details' => __('Details'));\n\t}\n\t/* if there was an error on the form, display the date in the correct format */\n\tif (isset($_SESSION['sess_field_values']['mailtime'])) {\n\t\t$_SESSION['sess_field_values']['mailtime'] = date(reports_date_time_format(), $_SESSION['sess_field_values']['mailtime']);\n\t}\n\n\t/* set the default settings category */\n\tif (!isset_request_var('tab')) set_request_var('tab', 'details');\n\t$current_tab = get_request_var('tab');\n\n\tif (cacti_sizeof($tabs) && isset_request_var('id')) {\n\t\t$i = 0;\n\n\t\t/* draw the tabs */\n\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\\n\";\n\n\t\tforeach (array_keys($tabs) as $tab_short_name) {\n\t\t\tprint \"<li class='subTab'><a class='tab\" . (($tab_short_name == $current_tab) ? \" selected'\" : \"'\") .\n\t\t\t\t\" href='\" . html_escape($config['url_path'] .\n\t\t\t\tget_reports_page() . '?action=edit&id=' . get_request_var('id') .\n\t\t\t\t'&tab=' . $tab_short_name) .\n\t\t\t\t\"'>\" . $tabs[$tab_short_name] . \"</a></li>\\n\";\n\n\t\t\t$i++;\n\t\t}\n\n\n\t\tif (!isempty_request_var('id')) {\n\t\t\tprint \"<li style='float:right;position:relative;'><a class='tab' href='\" . html_escape(get_reports_page() . '?action=send&id=' . get_request_var('id') . '&tab=' . get_request_var('tab')) . \"'>\" . __('Send Report') . \"</a></li>\\n\";\n\t\t}\n\n\t\tprint \"</ul></nav></div>\\n\";\n\t}\n\n\tswitch(get_request_var('tab')) {\n\tcase 'details':\n\t\tform_start(get_reports_page());\n\n\t\thtml_start_box(__('Details') . \" $header_label\", '100%', true, '3', 'center', '');\n\n\t\tdraw_edit_form(array(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_reports_edit, $report)\n\t\t));\n\n\t\thtml_end_box(true, true);\n\n\t\tform_hidden_box('id', (isset($report['id']) ? $report['id'] : '0'), '');\n\t\tform_hidden_box('save_component_report', '1', '');\n\n\t\t?>\n\t\t<script type='text/javascript'>\n\t\tfunction changeFormat() {\n\t\t\tif (cformat && cformat.checked) {\n\t\t\t\t$('#row_font_size').hide();\n\t\t\t\t$('#row_format_file').show();\n\t\t\t} else {\n\t\t\t\t$('#row_font_size').show();\n\t\t\t\t$('#row_format_file').hide();\n\t\t\t}\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#mailtime').datetimepicker({\n\t\t\t\tminuteGrid: 10,\n\t\t\t\tstepMinute: 1,\n\t\t\t\tshowAnim: 'slideDown',\n\t\t\t\tnumberOfMonths: 1,\n\t\t\t\ttimeFormat: 'HH:mm',\n\t\t\t\tdateFormat: 'yy-mm-dd'\n\t\t\t});\n\n\t\t\t$('#cformat').click(function() {\n\t\t\t\tchangeFormat();\n\t\t\t});\n\n\t\t\tchangeFormat();\n\t\t});\n\t\t</script>\n\t\t<?php\n\n\t\tform_save_button(get_reports_page(), 'return');\n\n\t\tbreak;\n\tcase 'items':\n\t\thtml_start_box(__('Items') . \" $header_label\", '100%', '', '3', 'center', get_reports_page() . '?action=item_edit&id=' . get_request_var('id'));\n\n\t\t/* display the items */\n\t\tif (!empty($report['id'])) {\n\t\t\tdisplay_reports_items($report['id']);\n\t\t}\n\n\t\thtml_end_box();\n\n\t\tif (!empty($report['id'])) {\n\t\t\t?>\n\t\t\t<script type='text/javascript'>\n\t\t\t$('#reports_admin_items1').find('.cactiTable').attr('id', 'report_item');\n\t\t\treportsPage = '<?php print get_reports_page();?>';\n\t\t\treportId    = <?php print $report['id'];?>;\n\t\t\t$(function() {\n\t\t\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n\t\t\t\t$('#report_item').tableDnD({\n\t\t\t\t\tonDrop: function(table, row) {\n\t\t\t\t\t\tloadPageNoHeader(reportsPage+'?action=ajax_dnd&id='+reportId+'&'+$.tableDnD.serialize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t<?php } ?>\n\t\t\t});\n\t\t\t</script>\n\t\t\t<?php\n\t\t}\n\n\t\tbreak;\n\tcase 'events':\n\t\tif (($timestamp = strtotime($report['mailtime'])) === false) {\n\t\t\t$timestamp = time();\n\t\t}\n\t\t$poller_interval = read_config_option('poller_interval');\n\t\tif ($poller_interval == '') $poller_interval = 300;\n\n\t\t$timestamp   = floor($timestamp / $poller_interval) * $poller_interval;\n\t\t$next        = reports_interval_start($report['intrvl'], $report['count'], $report['offset'], $timestamp);\n\t\t$date_format = reports_date_time_format() . ' - l';\n\n\t\thtml_start_box(__('Scheduled Events') . \" $header_label\", '100%', '', '3', 'center', '');\n\t\tfor ($i=0; $i<14; $i++) {\n\t\t\tform_alternate_row('line' . $i, true);\n\t\t\tform_selectable_cell(date($date_format, $next), $i);\n\t\t\tform_end_row();\n\t\t\t$next = reports_interval_start($report['intrvl'], $report['count'], $report['offset'], $next);\n\t\t}\n\t\thtml_end_box(false);\n\n\t\tbreak;\n\tcase 'preview':\n\t\thtml_start_box(__('Report Preview') . \" $header_label\", '100%', '', '0', 'center', '');\n\t\tprint \"\\t\\t\\t\\t\\t<tr><td>\\n\";\n\t\tprint reports_generate_html($report['id'], REPORTS_OUTPUT_STDOUT);\n\t\tprint \"\\t\\t\\t\\t\\t</td></tr>\\n\";\n\t\thtml_end_box(false);\n\n\t\tbreak;\n\t}\n}\n\n/* display_reports_items\t\tdisplay the list of all items related to a single report\n * @arg $report_id\t\t\t\tid of the report\n */\nfunction display_reports_items($report_id) {\n\tglobal $graph_timespans;\n\tglobal $item_types, $alignment;\n\n\t$items = db_fetch_assoc_prepared('SELECT *\n\t\tFROM reports_items\n\t\tWHERE report_id = ?\n\t\tORDER BY sequence', array($report_id));\n\n\t$css = db_fetch_cell_prepared('SELECT cformat FROM reports WHERE id = ?', array($report_id));\n\n\thtml_header(\n\t\tarray(\n\t\t\tarray('display' => __('Item'),         'align' => 'left'),\n\t\t\tarray('display' => __('Sequence'),     'align' => 'left'),\n\t\t\tarray('display' => __('Type'),         'align' => 'left'),\n\t\t\tarray('display' => __('Item Details'), 'align' => 'left'),\n\t\t\tarray('display' => __('Timespan'),     'align' => 'left'),\n\t\t\tarray('display' => __('Alignment'),    'align' => 'left'),\n\t\t\tarray('display' => __('Font Size'),    'align' => 'left'),\n\t\t\tarray('display' => __('Actions'),      'align' => 'right')\n\t\t), 2);\n\n\t$i = 1;\n\tif (cacti_sizeof($items)) {\n\t\tforeach ($items as $item) {\n\t\t\tswitch ($item['item_type']) {\n\t\t\tcase REPORTS_ITEM_GRAPH:\n\t\t\t\t$item_details = get_graph_title($item['local_graph_id']);\n\t\t\t\t$align = ($item['align'] > 0 ? $alignment[$item['align']] : '');\n\t\t\t\t$size = '';\n\t\t\t\t$timespan = ($item['timespan'] > 0 ? $graph_timespans[$item['timespan']] : '');\n\t\t\t\tbreak;\n\t\t\tcase REPORTS_ITEM_TEXT:\n\t\t\t\t$item_details = $item['item_text'];\n\t\t\t\t$align = ($item['align'] > 0 ? $alignment[$item['align']] : '');\n\t\t\t\t$size = ($item['font_size'] > 0 ? $item['font_size'] : '');\n\t\t\t\t$timespan = '';\n\t\t\t\tbreak;\n\t\t\tcase REPORTS_ITEM_TREE:\n\t\t\t\tif ($item['branch_id'] > 0) {\n\t\t\t\t\t$branch_details = db_fetch_row_prepared('SELECT * FROM graph_tree_items WHERE id = ?', array($item['branch_id']));\n\t\t\t\t} else {\n\t\t\t\t\t$branch_details = array();\n\t\t\t\t}\n\n\t\t\t\t$tree_name = db_fetch_cell_prepared('SELECT name FROM graph_tree WHERE id = ?', array($item['tree_id']));\n\n\t\t\t\t$item_details = 'Tree: ' . $tree_name;\n\t\t\t\tif ($item['branch_id'] > 0) {\n\t\t\t\t\tif ($branch_details['host_id'] > 0) {\n\t\t\t\t\t\t$item_details .= ', Device: ' . db_fetch_cell_prepared('SELECT description FROM host WHERE id = ?', array($branch_details['host_id']));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$item_details .= ', Branch: ' . $branch_details['title'];\n\n\t\t\t\t\t\tif ($item['tree_cascade'] == 'on') {\n\t\t\t\t\t\t\t$item_details .= ' ' . __('(All Branches)');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$item_details .= ' ' . __('(Current Branch)');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$align = ($item['align'] > 0 ? $alignment[$item['align']] : '');\n\t\t\t\t$size = ($item['font_size'] > 0 ? $item['font_size'] : '');\n\t\t\t\t$timespan = ($item['timespan'] > 0 ? $graph_timespans[$item['timespan']] : '');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$item_details = '';\n\t\t\t\t$align = '';\n\t\t\t\t$size = '';\n\t\t\t\t$timespan = '';\n\t\t\t}\n\n\t\t\tif ($css == 'on') {\n\t\t\t\t$size = '';\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $item['id'], false);\n\t\t\t$form_data = '<td><a class=\"linkEditMain\" href=\"' . html_escape(get_reports_page() . '?action=item_edit&id=' . $report_id. '&item_id=' . $item['id']) . '\">' . __('Item # %d', $i) . '</a></td>';\n\t\t\t$form_data .= '<td>' . $item['sequence'] . '</td>';\n\t\t\t$form_data .= '<td>' . $item_types[$item['item_type']] . '</td>';\n\t\t\t$form_data .= '<td class=\"nowrap\">' . $item_details . '</td>';\n\t\t\t$form_data .= '<td class=\"nowrap\">' . $timespan . '</td>';\n\t\t\t$form_data .= '<td>' . $align . '</td>';\n\t\t\t$form_data .= '<td>' . $size . '</td>';\n\n\t\t\tif ($i == 1) {\n\t\t\t\t$form_data .= '<td class=\"right nowrap\"><a class=\"remover fa fa-caret-down moveArrow\" title=\"' . __esc('Move Down') . '\" href=\"' . html_escape(get_reports_page() . '?action=item_movedown&item_id=' . $item['id'] . '&id=' . $report_id) . '\"></a>' . '<span class=\"moveArrowNone\"</span></td>';\n\t\t\t} elseif ($i > 1 && $i < cacti_sizeof($items)) {\n\t\t\t\t$form_data .= '<td class=\"right nowrap\"><a class=\"remover fa fa-caret-down moveArrow\" title=\"' . __esc('Move Down') . '\" href=\"' . html_escape(get_reports_page() . '?action=item_movedown&item_id=' . $item['id'] . '&id=' . $report_id) . '\"></a>' . '<a class=\"remover fa fa-caret-up moveArrow\" title=\"' . __esc('Move Up') . '\" href=\"' . html_escape(get_reports_page() . '?action=item_moveup&item_id=' . $item['id'] .\t'&id=' . $report_id) . '\"></a>' . '</td>';\n\t\t\t} else {\n\t\t\t\t$form_data .= '<td class=\"right nowrap\"><span class=\"moveArrowNone\"></span>' . '<a class=\"remover fa fa-caret-up moveArrow\" title=\"' . __esc('Move Up') . '\" href=\"' . html_escape(get_reports_page() . '?action=item_moveup&item_id=' . $item['id'] .\t'&id=' . $report_id) . '\"></a>' . '</td>';\n\t\t\t}\n\n\t\t\t$form_data .= '<td class=\"right\"><a class=\"pic deleteMarker fa fa-times\" href=\"' . html_escape(get_reports_page() . '?action=item_remove&item_id=' . $item['id'] . '&id=' . $report_id) . '\" title=\"' . __esc('Delete') . '\"></a>' . '</td></tr>';\n\t\t\tprint $form_data;\n\n\t\t\t$i++;\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"9\"><em>' . __('No Report Items') . '</em></td></tr>';\n\t}\n}\n\nfunction get_reports_page() {\n\treturn (is_realm_allowed(22) ? 'reports_admin.php' : 'reports_user.php');\n}\n\nfunction is_reports_admin() {\n\treturn (is_realm_allowed(22) ? true:false);\n}\n\nfunction reports() {\n\tglobal $config, $item_rows, $reports_interval;\n\tglobal $reports_actions, $attach_types;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'status' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_reports');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\tif ((!empty($_SESSION['sess_status'])) && (!isempty_request_var('status'))) {\n\t\tif ($_SESSION['sess_status'] != get_request_var('status')) {\n\t\t\tset_request_var('page', '1');\n\t\t}\n\t}\n\n\tform_start(get_reports_page(), 'form_report');\n\n\thtml_start_box(__('Reports [%s]', (is_reports_admin() ? __('Administrator Level'):__('User Level'))), '100%', '', '3', 'center', get_reports_page() . '?action=edit&tab=details');\n\n\tprint \"<tr class='even'>\n\t\t<td>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t\" . __('Search') . \"\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='\" . html_escape_request_var('filter') . \"'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t\" . __('Status') . \"\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='status' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'\" . (get_request_var('status') == '-1' ? ' selected':'') . \">\" . __('Any') . \"</option>\n\t\t\t\t\t\t\t<option value='-2'\" . (get_request_var('status') == '-2' ? ' selected':'') . \">\" . __('Enabled') . \"</option>\n\t\t\t\t\t\t\t<option value='-3'\" . (get_request_var('status') == '-3' ? ' selected':'') . \">\" . __('Disabled') . \"</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t\" . __('Reports') . \"\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'\" . (get_request_var('rows') == '-1' ? ' selected':'') . '>' . __('Default') . '</option>';\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\" .\n\t\t\t\t\t\t\t\t\t\t(get_request_var('rows') == $key ? ' selected':'') . \">$value</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\tprint \"\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input id='refresh' type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Go') . \"' name='go'>\n\t\t\t\t\t\t\t<input id='clear' type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Clear') . \"' name='clear'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box(true);\n\n\tform_end();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (reports.name LIKE '%%\" . get_request_var('filter') . \"%%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('status') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('status') == '-2') {\n\t\t$sql_where .= ($sql_where != '' ? \" AND reports.enabled='on'\" : \" WHERE reports.enabled='on'\");\n\t} elseif (get_request_var('status') == '-3') {\n\t\t$sql_where .= ($sql_where != '' ? \" AND reports.enabled=''\" : \" WHERE reports.enabled=''\");\n\t}\n\n\t/* account for permissions */\n\tif (is_reports_admin()) {\n\t\t$sql_join = 'LEFT JOIN user_auth ON user_auth.id=reports.user_id';\n\t} else {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' user_auth.id=' . $_SESSION['sess_user_id'];\n\t\t$sql_join = 'INNER JOIN user_auth ON user_auth.id=reports.user_id';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(reports.id)\n\t\tFROM reports\n\t\t$sql_join\n\t\t$sql_where\");\n\n\t$reports_list = db_fetch_assoc(\"SELECT\n\t\tuser_auth.full_name,\n\t\treports.*,\n\t\tCONCAT_WS('', intrvl, ' ', count, ' ', offset, '') AS cint\n\t\tFROM reports\n\t\t$sql_join\n\t\t$sql_where\n\t\tORDER BY \" .\n\t\tget_request_var('sort_column') . ' ' .\n\t\tget_request_var('sort_direction') .\n\t\t' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows);\n\n\tform_start(get_reports_page(), 'chk');\n\n\t$nav = html_nav_bar(get_reports_page() . 'filter=' . get_request_var('filter') . '&host_id=' . get_request_var('host_id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 10, __('Reports'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\tif (is_reports_admin()) {\n\t\t$display_text = array(\n\t\t\t'name'            => array('display' => __('Report Name'), 'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'full_name'       => array('display' => __('Owner'),       'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'cint'            => array('display' => __('Frequency'),   'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'lastsent'        => array('display' => __('Last Run'),    'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'mailtime'        => array('display' => __('Next Run'),    'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'from_name'       => array('display' => __('From'),        'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'nosort'          => array('display' => __('To'),          'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'attachment_type' => array('display' => __('Type'),        'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'enabled'         => array('display' => __('Enabled'),     'align' => 'left', 'sort' => 'ASC'),\n\t\t);\n\t} else {\n\t\t$display_text = array(\n\t\t\t'name'            => array('display' => __('Report Title'), 'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'cint'            => array('display' => __('Frequency'),    'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'lastsent'        => array('display' => __('Last Run'),     'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'mailtime'        => array('display' => __('Next Run'),     'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'from_name'       => array('display' => __('From'),         'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'nosort'          => array('display' => __('To'),           'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'attachment_type' => array('display' => __('Type'),         'align' => 'left', 'sort' => 'ASC'),\n\t\t\t'enabled'         => array('display' => __('Enabled'),      'align' => 'left', 'sort' => 'ASC'),\n\t\t);\n\t}\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($reports_list)) {\n\t\t$date_format = reports_date_time_format();\n\n\t\tforeach ($reports_list as $report) {\n\t\t\tif (!reports_html_account_exists($report['user_id'])) {\n\t\t\t\treports_html_report_disable($report['id']);\n\t\t\t\t$report['enabled'] = '';\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $report['id'], true);\n\n\t\t\tform_selectable_cell(filter_value($report['name'], get_request_var('filter'), get_reports_page() . '?action=edit&tab=details&id=' . $report['id'] . '&page=1'), $report['id']);\n\n\t\t\tif (is_reports_admin()) {\n\t\t\t\tif (reports_html_account_exists($report['user_id'])) {\n\t\t\t\t\tform_selectable_ecell($report['full_name'], $report['id']);\n\t\t\t\t} else {\n\t\t\t\t\tform_selectable_cell(__('Report Disabled - No Owner'), $report['id']);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$interval = __('Every') . ' ' . $report['count'] . ' ' . $reports_interval[$report['intrvl']];\n\n\t\t\tform_selectable_cell($interval, $report['id']);\n\t\t\tform_selectable_cell(($report['lastsent'] == 0) ? __('Never') : date($date_format, $report['lastsent']), $report['lastsent']);\n\t\t\tform_selectable_cell(date($date_format, $report['mailtime']), $report['id']);\n\t\t\tform_selectable_ecell($report['from_name'], $report['id']);\n\t\t\tform_selectable_ecell((substr_count($report['email'], ',') ? __('Multiple'): $report['email']), $report['id']);\n\t\t\tform_selectable_cell((isset($attach_types[$report['attachment_type']])) ? $attach_types[$report['attachment_type']] : __('Invalid'), $report['id']);\n\t\t\tform_selectable_cell($report['enabled'] ? __('Enabled'):__('Disabled'), $report['id']);\n\t\t\tform_checkbox_cell($report['name'], $report['id']);\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='\" . (cacti_sizeof($display_text)+1) . \"'><em>\" . __('No Reports Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($reports_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($reports_actions);\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction applyFilter() {\n\t\tstrURL  = '<?php print get_reports_page();?>?header=false&status=' + $('#status').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = '<?php print get_reports_page();?>?header=false&clear=1';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_report').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction reports_html_account_exists($user_id) {\n\treturn db_fetch_cell_prepared('SELECT id FROM user_auth WHERE id = ?', array($user_id));\n}\n\nfunction reports_html_report_disable($report_id) {\n\tdb_execute_prepared('UPDATE reports SET enabled=\"\" WHERE id = ?', array($report_id));\n}\n\nfunction set_reports_item_var($reports_item, $var_id) {\n\t// if a different host_id was selected, use it\n\tif (isset_request_var($var_id) && get_filter_request_var($var_id) >= 0) {\n\t\t$reports_item[$var_id] = get_request_var($var_id);\n\t}\n\n\t// Check that we have set a host_id, if not, default to 0\n\tif (!isset($reports_item[$var_id])) {\n\t\t$reports_item[$var_id] = 0;\n\t}\n\n\treturn $reports_item;\n}\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\n/* inject_form_variables - replaces all variables contained in $form_array with\n     their actual values\n   @arg $form_array - an array that contains all of the information needed to draw\n     the html form. see the arrays contained in include/global_settings.php\n     for the extact syntax of this array\n   @arg $arg1 - an array that represents the |arg1:| variable (see\n     include/global_form.php for more details)\n   @arg $arg2 - an array that represents the |arg2:| variable (see\n     include/global_form.php for more details)\n   @arg $arg3 - an array that represents the |arg3:| variable (see\n     include/global_form.php for more details)\n   @arg $arg4 - an array that represents the |arg4:| variable (see\n     include/global_form.php for more details)\n   @returns - $form_array with all available variables substituted with their\n     proper values */\nfunction inject_form_variables(&$form_array, $arg1 = array(), $arg2 = array(), $arg3 = array(), $arg4 = array()) {\n\t$check_fields = array('id', 'value', 'array', 'friendly_name', 'description', 'sql', 'sql_print', 'form_id', 'items', 'tree_id');\n\n\t/* loop through each available field */\n\tif (cacti_sizeof($form_array)) {\n\t\tforeach ($form_array as $field_name => $field_array) {\n\t\t\t/* loop through each sub-field that we are going to check for variables */\n\t\t\tforeach ($check_fields as $field_to_check) {\n\t\t\t\tif (isset($field_array[$field_to_check]) && is_array($form_array[$field_name][$field_to_check])) {\n\t\t\t\t\t/* if the field/sub-field combination is an array, resolve it recursively */\n\t\t\t\t\t$form_array[$field_name][$field_to_check] = inject_form_variables($form_array[$field_name][$field_to_check], $arg1);\n\t\t\t\t} elseif (isset($field_array[$field_to_check]) && !is_array($field_array[$field_to_check]) && preg_match('/\\|(arg[123]):([a-zA-Z0-9_]*)\\|/', $field_array[$field_to_check], $matches)) {\n\t\t\t\t\t$string = $field_array[$field_to_check];\n\n\t\t\t\t\t$count = 0;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t/* an empty field name in the variable means don't treat this as an array */\n\t\t\t\t\t\tif ($matches[2] == '') {\n\t\t\t\t\t\t\tif (is_array(${$matches[1]})) {\n\t\t\t\t\t\t\t\t/* the existing value is already an array, leave it alone */\n\t\t\t\t\t\t\t\t$form_array[$field_name][$field_to_check] = ${$matches[1]};\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t/* the existing value is probably a single variable */\n\t\t\t\t\t\t\t\t$form_array[$field_name][$field_to_check] = str_replace($matches[0], ${$matches[1]}, $field_array[$field_to_check]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* copy the value down from the array/key specified in the variable */\n\t\t\t\t\t\t\t$string = str_replace($matches[0], (isset(${$matches[1]}{$matches[2]}) ? ${$matches[1]}{$matches[2]} : ''), $string);\n\n\t\t\t\t\t\t\t$matches = array();\n\n\t\t\t\t\t\t\tpreg_match('/\\|(arg[123]):([a-zA-Z0-9_]*)\\|/', $string, $matches);\n\n\t\t\t\t\t\t\tif (!cacti_sizeof($matches)) {\n\t\t\t\t\t\t\t\t$form_array[$field_name][$field_to_check] = $string;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$count++;\n\n\t\t\t\t\t\tif ($count > 3) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $form_array;\n}\n\n/* form_alternate_row_color - starts an HTML row with an alternating color scheme\n   @arg $row_color1 - the first color to use\n   @arg $row_color2 - the second color to use\n   @arg $row_value - the value of the row which will be used to evaluate which color\n     to display for this particular row. must be an integer\n   @arg $row_id - used to allow js and ajax actions on this object\n   @returns - the background color used for this particular row */\nfunction form_alternate_row_color($row_color1, $row_color2, $row_value, $row_id = '') {\n\tif ($row_value % 2 == 1) {\n\t\t\t$class='odd';\n\t\t\t$current_color = $row_color1;\n\t} else {\n\t\tif ($row_color2 == '' || $row_color2 == 'E5E5E5') {\n\t\t\t$class = 'even';\n\t\t} else {\n\t\t\t$class = 'even-alternate';\n\t\t}\n\t\t$current_color = $row_color1;\n\t}\n\n\tif ($row_id != '') {\n\t\tprint \"<tr class='$class selectable tableRow' id='$row_id'>\\n\";\n\t} else {\n\t\tprint \"<tr class='$class tableRow'>\\n\";\n\t}\n\n\treturn $current_color;\n}\n\n/* form_alternate_row - starts an HTML row with an alternating color scheme\n   @arg $light - Alternate odd style\n   @arg $row_id - The id of the row\n   @arg $reset - Reset to top of table */\nfunction form_alternate_row($row_id = '', $light = false, $disabled = false) {\n\tstatic $i = 1;\n\n\tif ($i % 2 == 1) {\n\t\t$class = 'odd';\n\t} elseif ($light) {\n\t\t$class = 'even-alternate';\n\t} else {\n\t\t$class = 'even';\n\t}\n\n\t$i++;\n\n\tif ($row_id != '' && !$disabled && substr($row_id, 0, 4) != 'row_') {\n\t\tprint \"<tr class='$class selectable tableRow' id='$row_id'>\\n\";\n\t} elseif (substr($row_id, 0, 4) == 'row_') {\n\t\tprint \"<tr class='$class tableRow' id='$row_id'>\\n\";\n\t} elseif ($row_id != '') {\n\t\tprint \"<tr class='$class tableRow' id='$row_id'>\\n\";\n\t} else {\n\t\tprint \"<tr class='$class tableRow'>\\n\";\n\t}\n}\n\n/* form_selectable_ecell - a wrapper to form_selectable_cell that escapes the contents\n   @arg $contents - the readable portion of the\n   @arg $id - the id of the object that will be highlighted\n   @arg $width - the width of the table element\n   @arg $style_or_class - the style or class to apply to the table element\n   @arg $title - optional title for the column */\nfunction form_selectable_ecell($contents, $id, $width = '', $style_or_class = '', $title = '') {\n\tform_selectable_cell(html_escape($contents), $id, $width, $style_or_class, $title);\n}\n\n/* form_selectable_cell - format's a table row such that it can be highlighted using cacti's js actions\n   @arg $contents - the readable portion of the\n   @arg $id - the id of the object that will be highlighted\n   @arg $width - the width of the table element\n   @arg $style_or_class - the style or class to apply to the table element\n   @arg $title - optional title for the column */\nfunction form_selectable_cell($contents, $id, $width = '', $style_or_class = '', $title = '') {\n\t$output = '';\n\n\tif ($style_or_class != '') {\n\t\tif (strpos($style_or_class, ':') === false) {\n\t\t\t$output = \"class='nowrap \" . $style_or_class . \"'\";\n\t\t\tif ($width != '') {\n\t\t\t\t$output .= \" style='width:$width;'\";\n\t\t\t}\n\t\t} else {\n\t\t\t$output = \"class='nowrap' style='\" . $style_or_class;\n\t\t\tif ($width != '') {\n\t\t\t\t$output .= \";width:$width;\";\n\t\t\t}\n\t\t\t$output .= \"'\";\n\t\t}\n\t} else {\n\t\t$output = 'class=\"nowrap\"';\n\n\t\tif ($width != '') {\n\t\t\t$output .= \" style='width:$width;'\";\n\t\t}\n\t}\n\n\tif ($title != '') {\n\t\t$wrapper = \"<span class='cactiTooltipHint' style='padding:0px;margin:0px;' title='\" . str_replace(array('\"', \"'\"), '', $title) . \"'>\" . $contents . \"</span>\";\n\t} else {\n\t\t$wrapper = $contents;\n\t}\n\n\tprint \"\\t<td \" . $output . \">\" . $wrapper . \"</td>\\n\";\n}\n\n/* form_checkbox_cell - format's a tables checkbox form element so that the cacti js actions work on it\n   @arg $title - the text that will be displayed if your hover over the checkbox */\nfunction form_checkbox_cell($title, $id, $disabled = false) {\n\tprint \"\\t<td class='checkbox' style='width:1%;'>\\n\";\n\tprint \"\\t\\t<input type='checkbox' title='\" . html_escape($title) . \"' class='checkbox\" . ($disabled ? ' disabled':'') . \"' \" . ($disabled ? \"disabled='disabled'\":'') . \" id='chk_\" . $id . \"' name='chk_\" . $id . \"'><label class='formCheckboxLabel' for='chk_\" . $id . \"'></label>\\n\";\n\tprint \"\\t</td>\\n\";\n}\n\n/* form_end_row - ends a table row that is started with form_alternate_row */\nfunction form_end_row() {\n\tprint \"</tr>\\n\";\n}\n\n/* form_confirm_buttons - provides confirm buttons in the gui\n   @arg $message - the value of the HTML checkbox */\nfunction form_confim_buttons($post_variable, $item_array, $save_message, $return = false) {\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($item_array) ? serialize($item_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . $post_variable . \"'>\" . ($return ? \"\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\n\t\t\t\":\"\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') .\"' title='$save_message'>\") . \"\n\t\t</td>\n\t</tr>\\n\";\n}\n\n/* html_boolean - returns the boolean equivalent of an HTML checkbox value\n   @arg $html_boolean - the value of the HTML checkbox\n   @returns - true or false based on the value of the HTML checkbox */\nfunction html_boolean($html_boolean) {\n\treturn ($html_boolean == \"on\");\n}\n\n/* html_boolean_friendly - returns the natural language equivalent of an HTML\n     checkbox value\n   @arg $html_boolean - the value of the HTML checkbox\n   @returns - 'Selected' or 'Not Selected' based on the value of the HTML\n     checkbox */\nfunction html_boolean_friendly($html_boolean) {\n\tif ($html_boolean == \"on\") {\n\t\treturn __(\"Selected\");\n\t} else {\n\t\treturn __(\"Not Selected\");\n\t}\n}\n\n/* get_checkbox_style - finds the proper CSS padding to apply based on the\n     current client browser in use\n   @returns - a CSS style string which should be used with an HTML checkbox\n     control */\nfunction get_checkbox_style() {\n\treturn \"\";\n}\n\n/* set_default_action - sets the required 'action' request variable\n   @arg $default - The default action is not set\n   @returns - null */\nfunction set_default_action($default = '') {\n\tif (!isset_request_var('action')) {\n\t\tset_request_var('action', $default);\n\t} elseif (is_array(get_nfilter_request_var('action'))) {\n\t\tif (read_config_option('log_validation') == 'on') {\n\t\t\tcacti_log('WARNING: Request variable \\'action\\' was passed as array in ' . $_SERVER['SCRIPT_NAME'] . '.', false, 'WEBUI');\n\t\t}\n\n\t\tset_request_var('action', $_REQUEST['action'][0]);\n\t} else {\n\t\tset_request_var('action', $_REQUEST['action']);\n\t}\n}\n\n/* unset_request_var - unsets the request variable\n   @arg $variable - The variable to unset\n   @returns - null */\nfunction unset_request_var($variable) {\n\tglobal $_CACTI_REQUEST;\n\n\tif (isset($_CACTI_REQUEST[$variable])) {\n\t\tunset($_CACTI_REQUEST[$variable]);\n\t}\n\n\tif (isset($_REQUEST[$variable])) {\n\t\tunset($_REQUEST[$variable]);\n\t}\n}\n\n/* isset_request_var - checks to see if the $_REQUEST variable\n   is set.  Returns true or false.\n   @arg $variable - The variable to check\n   @returns - true or false */\nfunction isset_request_var($variable) {\n\treturn isset($_REQUEST[$variable]);\n}\n\n/* isempty_request_var - checks to see if the $_REQUEST variable\n   is empty.  Returns true or false.\n   @arg $variable - The variable to check\n   @returns - true or false */\nfunction isempty_request_var($variable) {\n\tif (isset_request_var($variable)) {\n\t\t$value = $_REQUEST[$variable];\n\n\t\tif (!empty($value)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/* set_request_var - sets a given $_REQUEST variable and Cacti global.\n   @arg $variable - The variable to set\n   @arg $value - The value to set the variable to\n   @returns - null */\nfunction set_request_var($variable, $value) {\n\tglobal $_CACTI_REQUEST;\n\n\t$_CACTI_REQUEST[$variable] = $value;\n\t$_REQUEST[$variable]       = $value;\n\t$_POST[$variable]          = $value;\n\t$_GET[$variable]           = $value;\n}\n\n/* get_request_var - returns the current value of a PHP $_REQUEST variable, optionally\n     returning a default value if the request variable does not exist.  When Cacti\n     has 'log_validation' set on, it will log all instances where a request variable\n     has not first been filtered.\n   @arg $name - the name of the request variable. this should be a valid key in the\n     $_REQUEST array\n   @arg $default - the value to return if the specified name does not exist in the\n     $_REQUEST array\n   @returns - the value of the request variable */\nfunction get_request_var($name, $default = '') {\n\tglobal $_CACTI_REQUEST;\n\n\t$log_validation = read_config_option('log_validation');\n\n\tif (isset($_CACTI_REQUEST[$name])) {\n\t\treturn $_CACTI_REQUEST[$name];\n\t} elseif (isset_request_var($name)) {\n\t\tif ($log_validation == 'on') {\n\t\t\thtml_log_input_error($name);\n\t\t}\n\n\t\tset_request_var($name, $_REQUEST[$name]);\n\n\t\treturn $_REQUEST[$name];\n\t} else {\n\t\treturn $default;\n\t}\n}\n\n/* get_request_var_request - deprecated - alias of get_request_var()\n     returning a default value if the request variable does not exist\n   @arg $name - the name of the request variable. this should be a valid key in the\n     $_GET array\n   @arg $default - the value to return if the specified name does not exist in the\n     $_GET array\n   @returns - the value of the request variable */\nfunction get_request_var_request($name, $default = '') {\n\treturn get_request_var($name, $default);\n}\n\n/* get_filter_request_var - returns the current value of a PHP $_REQUEST variable and also\n     sanitizing the value using the filter. It will also optionally\n     return a default value if the request variable does not exist\n   @arg $name - the name of the request variable. this should be a valid key in the\n     $_REQUEST array\n   @arg $default - the value to return if the specified name does not exist in the\n     $_REQUEST array\n   @returns - the value of the request variable */\nfunction get_filter_request_var($name, $filter = FILTER_VALIDATE_INT, $options = array()) {\n\tif (isset_request_var($name)) {\n\t\tif (isempty_request_var($name)) {\n\t\t\tset_request_var($name, get_nfilter_request_var($name));\n\n\t\t\treturn get_request_var($name);\n\t\t} elseif (get_nfilter_request_var($name) == 'undefined') {\n\t\t\tif (isset($options['default'])) {\n\t\t\t\tset_request_var($name, $options['default']);\n\n\t\t\t\treturn $options['default'];\n\t\t\t} else {\n\t\t\t\tset_request_var($name, '');\n\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else {\n\t\t\tif (get_nfilter_request_var($name) == '0') {\n\t\t\t\t$value = '0';\n\t\t\t} elseif (get_nfilter_request_var($name) == 'undefined') {\n\t\t\t\tif (isset($options['default'])) {\n\t\t\t\t\t$value = $options['default'];\n\t\t\t\t} else {\n\t\t\t\t\t$value = '';\n\t\t\t\t}\n\t\t\t} elseif (isempty_request_var($name)) {\n\t\t\t\t$value = '';\n\t\t\t} elseif ($filter == FILTER_VALIDATE_IS_REGEX) {\n\t\t\t\tif (is_base64_encoded($_REQUEST[$name])) {\n\t\t\t\t\t$_REQUEST[$name] = utf8_decode(base64_decode($_REQUEST[$name]));\n\t\t\t\t}\n\n\t\t\t\t$valid = validate_is_regex($_REQUEST[$name]);\n\t\t\t\tif ($valid === true) {\n\t\t\t\t\t$value = $_REQUEST[$name];\n\t\t\t\t} else {\n\t\t\t\t\t$value = false;\n\t\t\t\t\t$custom_error = $valid;\n\t\t\t\t}\n\t\t\t} elseif ($filter == FILTER_VALIDATE_IS_NUMERIC_ARRAY) {\n\t\t\t\t$valid = true;\n\t\t\t\tif (is_array($_REQUEST[$name])) {\n\t\t\t\t\tforeach($_REQUEST[$name] AS $number) {\n\t\t\t\t\t\tif (!is_numeric($number)) {\n\t\t\t\t\t\t\t$valid = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$valid = false;\n\t\t\t\t}\n\n\t\t\t\tif ($valid == true) {\n\t\t\t\t\t$value = $_REQUEST[$name];\n\t\t\t\t} else {\n\t\t\t\t\t$value = false;\n\t\t\t\t}\n\t\t\t} elseif ($filter == FILTER_VALIDATE_IS_NUMERIC_LIST) {\n\t\t\t\t$valid = true;\n\t\t\t\t$values = preg_split('/,/', $_REQUEST[$name], NULL, PREG_SPLIT_NO_EMPTY);\n\t\t\t\tforeach($values AS $number) {\n\t\t\t\t\tif (!is_numeric($number)) {\n\t\t\t\t\t\t$valid = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($valid == true) {\n\t\t\t\t\t$value = $_REQUEST[$name];\n\t\t\t\t} else {\n\t\t\t\t\t$value = false;\n\t\t\t\t}\n\t\t\t} elseif (!cacti_sizeof($options)) {\n\t\t\t\t$value = filter_var($_REQUEST[$name], $filter);\n\t\t\t} else {\n\t\t\t\t$value = filter_var($_REQUEST[$name], $filter, $options);\n\t\t\t}\n\t\t}\n\n\t\tif ($value === false) {\n\t\t\tif ($filter == FILTER_VALIDATE_IS_REGEX) {\n\t\t\t\t$_SESSION['custom_error'] = __('The search term \"%s\" is not valid. Error is %s', html_escape(get_nfilter_request_var($name)), html_escape($custom_error));\n\t\t\t\tset_request_var($name, '');\n\t\t\t\traise_message('custom_error');\n\t\t\t} else {\n\t\t\t\tdie_html_input_error($name, get_nfilter_request_var($name));\n\t\t\t}\n\t\t} else {\n\t\t\tset_request_var($name, $value);\n\n\t\t\treturn $value;\n\t\t}\n\t} else {\n\t\tif (isset($options['default'])) {\n\t\t\tset_request_var($name, $options['default']);\n\n\t\t\treturn $options['default'];\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n/* get_nfilter_request_var - returns the value of the request variable deferring\n   any filtering.\n   @arg $name - the name of the request variable. this should be a valid key in the\n     $_POST array\n   @arg $default - the value to return if the specified name does not exist in the\n     $_POST array\n   @returns - the value of the request variable */\nfunction get_nfilter_request_var($name, $default = '') {\n\tglobal $_CACTI_REQUEST;\n\n\tif (isset($_CACTI_REQUEST[$name])) {\n\t\treturn $_CACTI_REQUEST[$name];\n\t} elseif (isset($_REQUEST[$name])) {\n\t\treturn $_REQUEST[$name];\n\t} else {\n\t\treturn $default;\n\t}\n}\n\n/* get_request_var_post - depricated - returns the current value of a\n     PHP $_POST variable, optionally returning a default value if the\n     request variable does not exist.\n   @arg $name - the name of the request variable. this should be a valid key in the\n     $_POST array\n   @arg $default - the value to return if the specified name does not exist in the\n     $_POST array\n   @returns - the value of the request variable */\nfunction get_request_var_post($name, $default = '') {\n\treturn get_nfilter_request_var($name, $default);\n}\n\n/* validate_store_request_vars - validate, sanitize, and store\n   request variables into the custom $_CACTI_REQUEST and desired\n   session variables for Cacti filtering.\n\n\n   @arg $filters - an array keyed with the filter methods.\n   @arg $session_prefix - the prefix for the session variable\n\n   Valid filter include those from PHP filter_var() function syntax.\n   The format of the array is:\n\n     array(\n       'varA' => array(\n          'filter' => value,\n          'pageset' => true,      (optional)\n          'session' => sess_name, (optional)\n          'options' => mixed,\n          'default' => value),\n       'varB' => array(\n          'filter' => value,\n          'pageset' => true,      (optional)\n          'session' => sess_name, (optional)\n          'options' => mixed,\n          'default' => value),\n       ...\n     );\n\n   The 'pageset' attribute is optional, and when set, any changes\n   between what the page returns and what is set in the session\n   result in the page number being returned to 1.\n\n   The 'session' attribute is also optional, and when set, all\n   changes will be stored to the session variable defined and\n   not to session_prefix . '_' . $variable as the default.  This\n   allows for the concept of global session variables such as\n   'sess_default_rows'.\n\n   Validation 'filter' follow PHP conventions including:\n\n     FILTER_VALIDATE_BOOLEAN          - Validate that the variable is boolean\n     FILTER_VALIDATE_EMAIL            - Validate that the variable is an email\n     FILTER_VALIDATE_FLOAT            - Validate that the variable is a float\n     FILTER_VALIDATE_INT              - Validate that the variable is an integer\n     FILTER_VALIDATE_IP               - Validate that the variable is an IP address\n     FILTER_VALIDATE_MAC              - Validate that the variable is a MAC Address\n     FILTER_VALIDATE_REGEXP           - Validate against a REGEX\n     FILTER_VALIDATE_URL              - Validate that the variable is a valid URL\n     FILTER_VALIDATE_IS_REGEX         - Validate if a filter variable is a valid regex\n     FILTER_VALIDATE_IS_NUMERIC_ARRAY - Validate if a filter variable is a numeric array\n     FILTER_VALIDATE_IS_NUMERIC_LIST  - Validate if a filter variable is a comma delimited list of numbers\n\n   Sanitization 'filters' follow PHP conventions including:\n\n     FILTER_SANITIZE_EMAIL              - Sanitize the email address\n     FILTER_SANITIZE_ENCODED            - URL-encode string\n     FILTER_SANITIZE_MAGIC_QUOTES       - Apply addslashes()\n     FILTER_SANITIZE_NUMBER_FLOAT       - Remove all non float values\n     FILTER_SANITIZE_NUMBER_INT         - Remove everything non int\n     FILTER_SANITIZE_SPECIAL_CHARS      - Escape special chars\n     FILTER_SANITIZE_FULL_SPECIAL_CHARS - Equivalent to htmlspecialchars adding ENT_QUOTES\n     FILTER_SANITIZE_STRING             - Strip tags, optionally strip or encode special chars\n     FILTER_SANITIZE_URL                - Remove all characters except letters, digits, etc.\n     FILTER_UNSAFE_RAW                  - Nothing and optional strip or encode\n\n   @returns - the $_REQUEST variable validated and sanitized. */\nfunction validate_store_request_vars($filters, $sess_prefix = '') {\n\tglobal $_CACTI_REQUEST;\n\n\t$changed = 0;\n\t$custom_error = '';\n\n\tif (cacti_sizeof($filters)) {\n\t\tforeach($filters as $variable => $options) {\n\t\t\t// Establish the session variable first\n\t\t\tif ($sess_prefix != '') {\n\t\t\t\tif (isset($options['session'])) {\n\t\t\t\t\t$session_variable = $options['session'];\n\t\t\t\t} elseif ($variable != 'rows') {\n\t\t\t\t\t$session_variable = $sess_prefix . '_' . $variable;\n\t\t\t\t} else {\n\t\t\t\t\t$session_variable = 'sess_default_rows';\n\t\t\t\t}\n\n\t\t\t\t// Check for special cases 'clear' and 'reset'\n\t\t\t\tif (isset_request_var('clear')) {\n\t\t\t\t\tkill_session_var($session_variable);\n\t\t\t\t\tunset_request_var($variable);\n\t\t\t\t} elseif (isset_request_var('reset')) {\n\t\t\t\t\tkill_session_var($session_variable);\n\t\t\t\t} elseif (isset($options['pageset']) && $options['pageset'] == true) {\n\t\t\t\t\t$changed += check_changed($variable, $session_variable);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!isset_request_var($variable)) {\n\t\t\t\tif ($sess_prefix != '' && isset($_SESSION[$session_variable])) {\n\t\t\t\t\tset_request_var($variable, $_SESSION[$session_variable]);\n\t\t\t\t} elseif (isset($options['default'])) {\n\t\t\t\t\tset_request_var($variable, $options['default']);\n\t\t\t\t} else {\n\t\t\t\t\tcacti_log(\"Filter Variable: $variable, Must have a default and none is set\", false);\n\t\t\t\t\tset_request_var($variable, '');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (get_nfilter_request_var($variable) == '0') {\n\t\t\t\t\t$value = '0';\n\t\t\t\t} elseif (get_nfilter_request_var($variable) == 'undefined') {\n\t\t\t\t\tif (isset($options['default'])) {\n\t\t\t\t\t\t$value = $options['default'];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$value = '';\n\t\t\t\t\t}\n\t\t\t\t} elseif (isempty_request_var($variable)) {\n\t\t\t\t\t$value = '';\n\t\t\t\t} elseif ($options['filter'] == FILTER_VALIDATE_IS_REGEX) {\n\t\t\t\t\tif (is_base64_encoded($_REQUEST[$variable])) {\n\t\t\t\t\t\t$_REQUEST[$variable] = utf8_decode(base64_decode($_REQUEST[$variable]));\n\t\t\t\t\t}\n\n\t\t\t\t\t$valid = validate_is_regex($_REQUEST[$variable]);\n\t\t\t\t\tif ($valid === true) {\n\t\t\t\t\t\t$value = $_REQUEST[$variable];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$value = false;\n\t\t\t\t\t\t$custom_error = $valid;\n\t\t\t\t\t}\n\t\t\t\t} elseif ($options['filter'] == FILTER_VALIDATE_IS_NUMERIC_ARRAY) {\n\t\t\t\t\t$valid = true;\n\t\t\t\t\tif (is_array($_REQUEST[$variable])) {\n\t\t\t\t\t\tforeach($_REQUEST[$variable] AS $number) {\n\t\t\t\t\t\t\tif (!is_numeric($number)) {\n\t\t\t\t\t\t\t\t$valid = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$valid = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($valid == true) {\n\t\t\t\t\t\t$value = $_REQUEST[$variable];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$value = false;\n\t\t\t\t\t}\n\t\t\t\t} elseif ($options['filter'] == FILTER_VALIDATE_IS_NUMERIC_LIST) {\n\t\t\t\t\t$valid = true;\n\t\t\t\t\t$values = preg_split('/,/', $_REQUEST[$variable], NULL, PREG_SPLIT_NO_EMPTY);\n\t\t\t\t\tforeach($values AS $number) {\n\t\t\t\t\t\tif (!is_numeric($number)) {\n\t\t\t\t\t\t\t$valid = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($valid == true) {\n\t\t\t\t\t\t$value = $_REQUEST[$variable];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$value = false;\n\t\t\t\t\t}\n\t\t\t\t} elseif (!isset($options['options'])) {\n\t\t\t\t\t$value = filter_var($_REQUEST[$variable], $options['filter']);\n\t\t\t\t} else {\n\t\t\t\t\t$value = filter_var($_REQUEST[$variable], $options['filter'], $options['options']);\n\t\t\t\t}\n\n\t\t\t\tif ($value === false) {\n\t\t\t\t\tif ($options['filter'] == FILTER_VALIDATE_IS_REGEX) {\n\t\t\t\t\t\t$_SESSION['custom_error'] = __('The search term \"%s\" is not valid. Error is %s', html_escape(get_nfilter_request_var($variable)), html_escape($custom_error));\n\t\t\t\t\t\tset_request_var($variable, '');\n\t\t\t\t\t\traise_message('custom_error');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdie_html_input_error($variable, get_nfilter_request_var($variable), html_escape($custom_error));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tset_request_var($variable, $value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($sess_prefix != '') {\n\t\t\t\tif (isset_request_var($variable)) {\n\t\t\t\t\t$_SESSION[$session_variable] = get_request_var($variable);\n\t\t\t\t} elseif (isset($_SESSION[$session_variable])) {\n\t\t\t\t\tset_request_var($variable, $_SESSION[$session_variable]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tupdate_order_string();\n\t}\n\n\tif ($changed) {\n\t\tset_request_var('page', 1);\n\t\tset_request_var('changed', 1);\n\t\t$_SESSION[$sess_prefix . '_page'] = 1;\n\t} elseif (!isset_request_var('page') && isset($_SESSION[$sess_prefix . '_page'])) {\n\t\tset_request_var('page', $_SESSION[$sess_prefix . '_page']);\n\t}\n}\n\n/* update_order_string - creates a sort string for standard Cacti tables\n   @returns - null */\nfunction update_order_string($inplace = false) {\n\t$page = get_order_string_page();\n\n\t$order = '';\n\n\tif (strpos(get_request_var('sort_column'), '(') === false && strpos(get_request_var('sort_column'), '`') === false) {\n\t\t$del = '`';\n\t} else {\n\t\t$del = '';\n\t}\n\n\tif ($inplace) {\n\t\t$_SESSION['sort_string'][$page] = 'ORDER BY ';\n\t\tforeach($_SESSION['sort_data'][$page] as $column => $direction) {\n\t\t\tif ($column == 'hostname' || $column == 'ip' || $column == 'ip_address') {\n\t\t\t\t$order .= ($order != '' ? ', ':'') . 'INET_ATON(' . $column . ') ' . $direction;\n\t\t\t} else {\n\t\t\t\t$order .= ($order != '' ? ', ':'') . $column . ' ' . $direction;\n\t\t\t}\n\t\t}\n\t\t$_SESSION['sort_string'][$page] .= $order;\n\t} else {\n\t\tif (isset_request_var('clear')) {\n\t\t\tunset($_SESSION['sort_data'][$page]);\n\t\t\tunset($_SESSION['sort_string'][$page]);\n\t\t} elseif (isset_request_var('add') && get_nfilter_request_var('add') == 'reset') {\n\t\t\tunset($_SESSION['sort_data'][$page]);\n\t\t\tunset($_SESSION['sort_string'][$page]);\n\n\t\t\t$_SESSION['sort_data'][$page][get_request_var('sort_column')] = get_request_var('sort_direction');\n\t\t\t$_SESSION['sort_string'][$page] = 'ORDER BY ' . $del . implode($del . '.'. $del, explode('.', get_request_var('sort_column'))) . $del . ' ' . get_request_var('sort_direction');\n\t\t} elseif (isset_request_var('sort_column')) {\n\t\t\t$_SESSION['sort_data'][$page][get_request_var('sort_column')] = get_nfilter_request_var('sort_direction');\n\t\t\t$_SESSION['sort_string'][$page] = 'ORDER BY ';\n\t\t\tforeach($_SESSION['sort_data'][$page] as $column => $direction) {\n\t\t\t\tif ($column == 'hostname' || $column == 'ip' || $column == 'ip_address') {\n\t\t\t\t\t$order .= ($order != '' ? ', ':'') . 'INET_ATON(' . $column . \") \" . $direction;\n\t\t\t\t} else {\n\t\t\t\t\t$order .= ($order != '' ? ', ' . $del:$del) . implode($del . '.' . $del, explode('.', $column)) . $del . ' ' . $direction;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$_SESSION['sort_string'][$page] .= $order;\n\t\t} else {\n\t\t\tunset($_SESSION['sort_data'][$page]);\n\t\t\tunset($_SESSION['sort_string'][$page]);\n\t\t}\n\t}\n}\n\n/* get_order_string - returns a valid order string for a table\n   @returns - the order string */\nfunction get_order_string() {\n\t$page = get_order_string_page();\n\n\tif (strpos(get_request_var('sort_column'), '(') === false && strpos(get_request_var('sort_column'), '`') === false) {\n\t\t$del = '`';\n\t} else {\n\t\t$del = '';\n\t}\n\n\tif (isset($_SESSION['sort_string'][$page])) {\n\t\treturn $_SESSION['sort_string'][$page];\n\t} else {\n\t\treturn 'ORDER BY ' . $del . implode($del . '.' . $del, explode('.', get_request_var('sort_column'))) . $del . ' ' . get_request_var('sort_direction');\n\t}\n}\n\nfunction remove_column_from_order_string($column) {\n\t$page = get_order_string_page();\n\n\tif (isset($_SESSION['sort_data'][$page][$column])) {\n\t\tunset($_SESSION['sort_data'][$page][$column]);\n\t\tupdate_order_string(true);\n\t}\n}\n\nfunction get_order_string_page() {\n\t$page = str_replace('.php', '', get_current_page());\n\n\tif (isset_request_var('action')) {\n\t\t$page .= '_' . get_nfilter_request_var('action');\n\t}\n\n\tif (isset_request_var('tab')) {\n\t\t$page .= '_' . get_nfilter_request_var('tab');\n\t}\n\n\treturn $page;\n}\n\nfunction validate_is_regex($regex) {\n\tglobal $php_errormsg;\n\n\tif ($regex == '') {\n\t\treturn true;\n\t}\n\n\trestore_error_handler();\n\n\t$track_errors = ini_get('track_errors');\n\tini_set('track_errors', 1);\n\n    if(@preg_match(\"'\" . $regex . \"'\", NULL) !== false) {\n\t\tini_set('track_errors', $track_errors);\n\t\treturn true;\n\t}\n\n\t$php_error = trim(str_replace('preg_match():', '', $php_errormsg));\n\n\tini_set('track_errors', $track_errors);\n\n\t$errors = array(\n\t\tPREG_INTERNAL_ERROR         => __('There was an internal error!'),\n\t\tPREG_BACKTRACK_LIMIT_ERROR  => __('Backtrack limit was exhausted!'),\n\t\tPREG_RECURSION_LIMIT_ERROR  => __('Recursion limit was exhausted!'),\n\t\tPREG_BAD_UTF8_ERROR         => __('Bad UTF-8 error!'),\n\t\tPREG_BAD_UTF8_OFFSET_ERROR  => __('Bad UTF-8 offset error!'),\n\t);\n\n\t$error = preg_last_error();\n\n\tif (!defined('IN_CACTI_INSTALL')) {\n\t\tset_error_handler('CactiErrorHandler');\n\t}\n\n\tif (empty($error)) {\n\t\treturn $php_error;\n\t} else {\n\t\treturn $errors[$error];\n\t}\n}\n\n/* load_current_session_value - finds the correct value of a variable that is being\n     cached as a session variable on an HTML form\n   @arg $request_var_name - the array index name for the request variable\n   @arg $session_var_name - the array index name for the session variable\n   @arg $default_value - the default value to use if values cannot be obtained using\n     the session or request array */\nfunction load_current_session_value($request_var_name, $session_var_name, $default_value) {\n\tif (isset_request_var($request_var_name)) {\n\t\t$_SESSION[$session_var_name] = get_request_var($request_var_name);\n\t} elseif (isset($_SESSION[$session_var_name])) {\n\t\tset_request_var($request_var_name, $_SESSION[$session_var_name]);\n\t} else {\n\t\tset_request_var($request_var_name, $default_value);\n\t}\n}\n\n/* get_colored_device_status - given a device's status, return the colored text in HTML\n     format suitable for display\n   @arg $disabled (bool) - true if the device is disabled, false is it is not\n   @arg $status - the status type of the device as defined in global_constants.php\n   @returns - a string containing html that represents the device's current status */\nfunction get_colored_device_status($disabled, $status) {\n\tif ($disabled) {\n\t\treturn \"<span class='deviceDisabled'>\" . __('Disabled') . \"</span>\";\n\t} else {\n\t\tswitch ($status) {\n\t\t\tcase HOST_DOWN:\n\t\t\t\treturn \"<span class='deviceDown'>\" . __('Down') . \"</span>\";\n\t\t\t\tbreak;\n\t\t\tcase HOST_RECOVERING:\n\t\t\t\treturn \"<span class='deviceRecovering'>\" . __('Recovering') . \"</span>\";\n\t\t\t\tbreak;\n\t\t\tcase HOST_UP:\n\t\t\t\treturn \"<span class='deviceUp'>\" . __('Up') . \"</span>\";\n\t\t\t\tbreak;\n\t\t\tcase HOST_ERROR:\n\t\t\t\treturn \"<span class='deviceError'>\" . __('Error') . \"</span>\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"<span class='deviceUnknown'>\" . __('Unknown') . \"</span>\";\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\n/* get_current_graph_start - determine the correct graph start time selected using\n     the timespan selector\n   @returns - the number of seconds relative to now where the graph should begin */\nfunction get_current_graph_start() {\n\tif (isset($_SESSION['sess_current_timespan_begin_now']) && is_numeric($_SESSION['sess_current_timespan_begin_now'])) {\n\t\treturn $_SESSION['sess_current_timespan_begin_now'];\n\t} else {\n\t\treturn '-' . DEFAULT_TIMESPAN;\n\t}\n}\n\n/* get_current_graph_end - determine the correct graph end time selected using\n     the timespan selector\n   @returns - the number of seconds relative to now where the graph should end */\nfunction get_current_graph_end() {\n\tif (isset($_SESSION['sess_current_timespan_end_now']) && is_numeric($_SESSION['sess_current_timespan_end_now'])) {\n\t\treturn $_SESSION['sess_current_timespan_end_now'];\n\t} else {\n\t\treturn '0';\n\t}\n}\n\n/* display_tooltip - display the text passed to the function as a tooltip\n   @arg $text - the text to display in the tooltip\n   @returns - null */\nfunction display_tooltip($text) {\n\treturn '<div class=\"cactiTooltipHint fa fa-question-circle\"><span style=\"display:none;\">' . $text . \"</span></div>\\n\";\n}\n\n/* get_page_list - generates the html necessary to present the user with a list of pages limited\n     in length and number of rows per page\n   @arg $current_page - the current page number\n   @arg $pages_per_screen - the maximum number of pages allowed on a single screen. odd numbered\n     values for this argument are prefered for equality reasons\n   @arg $current_page - the current page number\n   @arg $total_rows - the total number of available rows\n   @arg $url - the url string to prepend to each page click\n   @returns - a string containing html that represents the a page list */\nfunction get_page_list($current_page, $pages_per_screen, $rows_per_page, $total_rows, $url, $page_var = 'page', $return_to = '') {\n\t$url_page_select = \"<ul class='pagination'>\";\n\n\tif (strpos($url, '?') !== false) {\n\t\t$url . '&';\n\t} else {\n\t\t$url . '?';\n\t}\n\n\t$total_pages = ceil($total_rows / $rows_per_page);\n\n\tif ($rows_per_page <= 0) {\n\t\t$total_pages = 0;\n\t} else {\n\t\t$total_pages = ceil($total_rows / $rows_per_page);\n\t}\n\n\t$start_page = max(1, ($current_page - floor(($pages_per_screen - 1) / 2)));\n\t$end_page = min($total_pages, ($current_page + floor(($pages_per_screen - 1) / 2)));\n\n\t/* adjust if we are close to the beginning of the page list */\n\tif ($current_page > ceil($pages_per_screen/2)) {\n\t\t$url_page_select .= \"<li><a href='#' onClick='goto$page_var(1);return false'>1</a></li>\";\n\t\t$url_page_select .= '<li><span>...</span></li>';\n\t}\n\tif ($current_page <= ceil(($pages_per_screen) / 2)) {\n\t\t$end_page += ($pages_per_screen - $end_page);\n\t}\n\n\t/* adjust if we are close to the end of the page list */\n\tif (($total_pages - $current_page) < ceil(($pages_per_screen) / 2)) {\n\t\t$start_page -= (($pages_per_screen - ($end_page - $start_page)) - 1);\n\t}\n\n\t/* stay within limits */\n\t$start_page = max(1, $start_page);\n\t$end_page = min($total_pages, $end_page);\n\n\tfor ($page_number=0; (($page_number+$start_page) <= $end_page); $page_number++) {\n\t\t$page = $page_number + $start_page;\n\t\tif ($page_number < $pages_per_screen) {\n\t\t\tif ($current_page == $page) {\n\t\t\t\t$url_page_select .= \"<li><a href='#' class='active' onClick='goto$page_var($page);return false'>$page</a></li>\";\n\t\t\t} else {\n\t\t\t\t$url_page_select .= \"<li><a href='#' onClick='goto$page_var($page);return false'>$page</a></li>\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif (($total_pages - $current_page) >= ceil(($pages_per_screen) / 2)) {\n\t\t$url_page_select .= '<li><span>...</span></li>';\n\t\t$url_page_select .= \"<li><a href='#' onClick='goto$page_var($total_pages);return false'>$total_pages</a></li>\";\n\t}\n\n\t$url_page_select .= '</ul>';\n\n\tif ($return_to != '') {\n\t\t$url_page_select .= \"<script type='text/javascript'>function goto$page_var(pageNo) { if (typeof url_graph === 'function') { var url_add=url_graph('') } else { var url_add=''; }; $.get('\" . $url . \"header=false&\" . $page_var . \"='+pageNo+url_add).done(function(data) { $('#$return_to').html(data); applySkin(); }); }</script>\";\n\t} else {\n\t\t$url_page_select .= \"<script type='text/javascript'>function goto${page_var}(pageNo) { if (typeof url_graph === 'function') { var url_add=url_graph('') } else { var url_add=''; }; document.location='$url$page_var='+pageNo+url_add }</script>\";\n\t}\n\n\treturn $url_page_select;\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude_once('./include/auth.php');\n\n$link_actions = array(\n\t1 => __('Delete'),\n\t3 => __('Enable'),\n\t2 => __('Disable')\n);\n\nset_default_action();\n\nswitch (get_request_var('action')) {\ncase 'actions':\n\tform_actions();\n\n\tbreak;\ncase 'delete_page':\n\tif (isset_request_var('id') && get_filter_request_var('id')) {\n\t\tpage_delete(get_request_var('id'));\n\t}\n\n\theader('Location: links.php?header=false');\n\n\tbreak;\ncase 'move_page_up':\n\tif (isset_request_var('id') && get_filter_request_var('id') && isset_request_var('order') && get_filter_request_var('order')) {\n\t\tpage_move(get_request_var('id'), get_request_var('order'), '-1');\n\t}\n\n\theader('Location: links.php?header=false');\n\n\tbreak;\ncase 'move_page_down':\n\tif (isset_request_var('id') && get_filter_request_var('id') && isset_request_var('order') && get_filter_request_var('order')) {\n\t\tpage_move(get_request_var('id'), get_request_var('order'), '1');\n\t}\n\n\theader('Location: links.php?header=false');\n\n\tbreak;\ncase 'save':\n\t$save['id']      = isset_request_var('id') ? get_filter_request_var('id'):0;\n\t$save['title']   = form_input_validate(get_nfilter_request_var('title'), 'title', '', false, 3);\n\t$save['style']   = get_nfilter_request_var('style');\n\t$save['enabled'] = (isset_request_var('enabled') ? 'on':'');\n\t$save['refresh'] = form_input_validate(get_nfilter_request_var('refresh'), 'refresh', '^[0-9]+$', false, 3);\n\n\tif (preg_match('/^((((ht|f)tp(s?))\\:\\/\\/){1}\\S+)/i', get_nfilter_request_var('fileurl')) && get_nfilter_request_var('filename') == '0') {\n\t\t$save['contentfile'] = get_nfilter_request_var('fileurl');\n\t} else {\n\t\t$save['contentfile'] = preg_replace('/[^A-Za-z0-9_\\.-]/','_', get_nfilter_request_var('filename'));\n\t}\n\n\t$consolesection    = get_nfilter_request_var('consolesection');\n\t$consolenewsection = get_nfilter_request_var('consolenewsection');\n\t$extendedstyle     = '';\n\t$lastsortorder     = db_fetch_cell('SELECT MAX(sortorder) FROM external_links');\n\t$save['sortorder'] = $lastsortorder + 1;\n\n\tif ($save['style'] == 'CONSOLE') {\n\t\tif ($consolesection == '__NEW__') {\n\t\t\t$extendedstyle = $consolenewsection;\n\t\t} else {\n\t\t\t$extendedstyle = $consolesection;\n\t\t}\n\n\t\tif ($extendedstyle == '') {\n\t\t\t$extendedstyle = __('External Links');\n\t\t}\n\t}\n\t$save['extendedstyle'] = $extendedstyle;\n\n\tif (!is_error_message()){\n\t\t$id = sql_save($save, 'external_links');\n\n\t\t// always give the login account access\n\t\tdb_execute_prepared('REPLACE INTO user_auth_realm (user_id, realm_id) VALUES (?, ?)', array($_SESSION['sess_user_id'], $id+10000));\n\n\t\traise_message(1);\n\n\t\theader('Location: links.php?header=false');\n\t\texit;\n\t} else {\n\t\traise_message(2);\n\n\t\theader('Location: links.php?action=edit&header=false&id=' . (isset_request_var('id') ? get_filter_request_var('id'):''));\n\t\texit;\n\t}\n\n\tbreak;\ncase 'edit':\n\ttop_header();\n\n\tedit_page();\n\n\tbottom_footer();\n\n\tbreak;\ndefault:\n\ttop_header();\n\n\tpages();\n\n\tbottom_footer();\n\n\tbreak;\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action');\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_request_var('drp_action') == '3') { // Enable Page\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdb_execute_prepared(\"UPDATE external_links SET enabled='on' WHERE id = ?\", array($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '2') { // Disable Page\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdb_execute_prepared(\"UPDATE external_links SET enabled='' WHERE id = ?\", array($selected_items[$i]));\n\t\t\t\t}\n\t\t\t} elseif (get_request_var('drp_action') == '1') { // Delete Page\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM external_links WHERE id = ?', array($selected_items[$i]));\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_realm WHERE realm_id = ?', array($selected_items[$i]+10000));\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_realm WHERE realm_id = ?', array($selected_items[$i]+10000));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: links.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$page_list = ''; $i = 0;\n\n\t/* loop through each of the pages selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$page_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT title FROM external_links WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$pages[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('links.php');\n\n\thtml_start_box($actions[get_request_var_post('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($pages) && cacti_sizeof($pages)) {\n\t\tif (get_request_var('drp_action') == '3') { // Enable Pages\n\t\t\tprint \"<tr>\n\t\t\t\t<td colspan='2' class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to Enable the following Page(s).') . \"</p>\n\t\t\t\t\t<ul>\" . $page_list . \"</ul>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __('Continue') . \"' title='\" . __esc('Enable Page(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '2') { // Disable Pages\n\t\t\tprint \"<tr>\n\t\t\t\t<td colspan='2' class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to Disable the following Page(s).') . \"</p>\n\t\t\t\t\t<ul>\" . $page_list . \"</ul>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __('Continue') . \"' title='\" . __esc('Disable Page(s)') . \"'>\";\n\t\t} elseif (get_request_var('drp_action') == '1') { // Delete Pages\n\t\t\tprint \"<tr>\n\t\t\t\t<td colspan='2' class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to Delete the following Page(s).') . \"</p>\n\t\t\t\t\t<ul>\" . $page_list . \"</ul>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __('Continue') . \"' title='\" . __esc('Delete Page(s)') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: links.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr class='saveRow'>\n\t\t<td>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($pages) ? serialize($pages) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . get_request_var('drp_action') . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\nfunction pages() {\n\tglobal $item_rows, $config, $link_actions;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'sortorder',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_links');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction applyFilter() {\n\t\tstrURL  = 'links.php?rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL  = 'links.php?clear=true&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#links').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_start_box(__('External Links'), '100%', '', '3', 'center', 'links.php?action=edit');\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t\t<form id='link_filter' action='links.php' method='post'>\n\t\t\t<table class='filterTable' cellpadding='2' cellspacing='0'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Links');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value=-1 <?php get_request_var('rows') == -1 ? 'selected':'';?>><?php print __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tforeach ($item_rows as $key => $row) {\n\t\t\t\t\t\t\t\techo \"<option value='\" . $key . \"'\" . ($key == get_request_var('rows') ? ' selected' : '') . '>' . $row . '</option>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __('Go');?>' title='<?php print __esc('Apply Filter');?>' onClick='applyFilter()'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __('Clear');?>' title='<?php print __esc('Reset filters');?>' onClick='clearFilter()'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$style_translate = array(\n\t\t'CONSOLE'    => __('Console'),\n\t\t'TAB'        => __('Top Tab'),\n\t\t'FRONT'      => __('Bottom Console'),\n\t\t'FRONTTOP'   => __('Top Console')\n\t);\n\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \" WHERE title LIKE '%\" . get_request_var('filter') . \"%' OR contentfile LIKE '%\" . get_request_var('filter') . \"%'\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$sql_order = get_order_string();\n\t$sql_order = str_replace('sortorder DESC', 'sortorder ASC', $sql_order);\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$pages = db_fetch_assoc(\"SELECT *\n\t\tFROM external_links\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$total_rows = db_fetch_cell('SELECT COUNT(*) FROM external_links');\n\n\tform_start('links.php', 'chk');\n\n\t$nav = html_nav_bar('links.php', MAX_DISPLAY_PAGES, get_request_var_request('page'), $rows, $total_rows, 8, __('External Links'), 'page', 'main');\n\n\tprint $nav;\n\n    html_start_box('', '100%', '', '4', 'center', '');\n\n\t$display_text = array(\n\t\t'nosort0'     => array('display' => __('Actions'), 'align' => 'left',  'sort' => ''),\n\t\t'contentfile' => array('display' => __('Page'),    'align' => 'left',  'sort' => 'ASC'),\n\t\t'title'       => array('display' => __('Title'),   'align' => 'left',  'sort' => 'ASC'),\n\t\t'style'       => array('display' => __('Style'),   'align' => 'left',  'sort' => 'ASC'),\n\t\t'disabled'    => array('display' => __('Enabled'), 'align' => 'left',  'sort' => 'ASC'),\n\t\t'sortorder'   => array('display' => __('Order'),   'align' => 'center', 'sort' => 'ASC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'));\n\n\t$i = 0;\n\tif (cacti_sizeof($pages)) {\n\t\tforeach ($pages as $page) {\n\t\t\tform_alternate_row('line' . $page['id']);\n\n\t\t\t$actions = '<a class=\"pic\"  href=\"' . html_escape('links.php?action=edit&id='.$page['id']) . '\" title=\"' . __esc('Edit Page') . '\"><img src=\"' . $config['url_path'] . 'images/application_edit.png\" alt=\"\"></a>';\n\n\t\t\tif ($page['enabled'] == 'on') {\n\t\t\t\t$actions .= '<a class=\"pic\" href=\"' . html_escape('link.php?id=' . $page['id']) . '\" title=\"' . __esc('View Page') . '\"><img src=\"' . $config['url_path'] . 'images/view_page.png\" alt=\"\"></a>';\n\t\t\t}\n\n\t\t\tform_selectable_cell($actions, $page['id'], '50');\n\t\t\tform_selectable_ecell($page['contentfile'], $page['id']);\n\t\t\tform_selectable_ecell($page['title'], $page['id']);\n\t\t\tform_selectable_ecell($style_translate[$page['style']] . ($page['style'] == 'CONSOLE' ? ' ( ' . ($page['extendedstyle'] == '' ? __('External Links'):$page['extendedstyle']) . ' )':''), $page['id']);\n\t\t\tform_selectable_cell(($page['enabled'] == 'on' ? __('Yes'):__('No')), $page['id']);\n\n\t\t\tif (get_request_var('sort_column') == 'sortorder') {\n\t\t\t\tif ($i != 0) {\n\t\t\t\t\t$sort = '<a class=\"pic fa fa-caret-up moveArrow\" href=\"' . html_escape('links.php?action=move_page_up&order=' . $page['sortorder'] . '&id='.$page['id']) . '\"></a>';\n\t\t\t\t} else {\n\t\t\t\t\t$sort = '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t}\n\n\t\t\t\tif ($i == cacti_sizeof($pages)-1) {\n\t\t\t\t\t$sort .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t} else {\n\t\t\t\t\t$sort .= '<a class=\"pic fa fa-caret-down moveArrow\" href=\"' . html_escape('links.php?action=move_page_down&order=' . $page['sortorder'] . '&id=' . $page['id']) . '\"></a>';\n\t\t\t\t}\n\n\t\t\t\tform_selectable_cell($sort, $page['id'], '', 'center');\n\t\t\t} else {\n\t\t\t\tform_selectable_cell(__('Sort for Ordering'), $page['id']);\n\t\t\t}\n\n\t\t\tform_checkbox_cell($page['title'], $page['id']);\n\t\t\tform_end_row();\n\n\t\t\t$i++;\n\t\t}\n\t} else {\n\t\tprint \"<tr><td colspan='\" . (cacti_sizeof($nav) + 1) . \"'><em>\" . __('No Pages Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($pages)) {\n\t\tprint $nav;\n\t}\n\n\tdraw_actions_dropdown($link_actions);\n\n\tform_end();\n}\n\nfunction page_delete($id) {\n\tdb_execute_prepared('DELETE FROM external_links WHERE id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM user_auth_realm WHERE realm_id = ?', array($id+10000));\n\tdb_execute_prepared('DELETE FROM user_auth_group_realm WHERE realm_id = ?', array($id+10000));\n\n\tpage_resort();\n}\n\nfunction page_resort() {\n\t$pages = db_fetch_assoc(\"SELECT * FROM external_links ORDER BY sortorder\");\n\n\t$i = 1;\n\tif (cacti_sizeof($pages)) {\n\t\tforeach ($pages as $page) {\n\t\t\tdb_execute_prepared('UPDATE external_links SET sortorder = ? WHERE id = ?' . array($id, $page['id']));\n\t\t\t$i++;\n\t\t}\n\t}\n}\n\nfunction page_move($pageid, $junk, $direction) {\n\t$oldorder = db_fetch_cell_prepared('SELECT sortorder FROM external_links WHERE id = ?', array($pageid));\n\t$neworder = $oldorder + $direction;\n\t$otherid  = db_fetch_cell_prepared('SELECT id FROM external_links WHERE sortorder = ?', array($neworder));\n\n\tif (!empty($otherid)) {\n\t\tdb_execute_prepared('UPDATE external_links SET sortorder = ? WHERE id = ?', array($neworder, $pageid));\n\t\tdb_execute_prepared('UPDATE external_links SET sortorder = ? WHERE id = ?', array($oldorder, $otherid));\n\t}\n}\n\nfunction edit_page() {\n\tglobal $config, $poller_intervals;\n\n\t$sections = db_fetch_assoc(\"SELECT extendedstyle\n\t\tFROM external_links\n\t\tWHERE style='CONSOLE'\n\t\tGROUP BY extendedstyle\n\t\tORDER BY extendedstyle\");\n\n\t$sec_ar = array();\n\t$sec_ar['External Links'] = __('External Links');\n\n\tforeach ($sections as $sec) {\n\t\tif ($sec['extendedstyle'] !='') {\n\t\t\t$sec_ar[$sec['extendedstyle']] = $sec['extendedstyle'];\n\t\t}\n\t}\n\t$sec_ar['__NEW__'] = 'New Name Below';\n\n\tif (isset_request_var('id')) {\n\t\t$data = db_fetch_row_prepared('SELECT * FROM external_links WHERE id = ?', array(get_filter_request_var('id')));\n\t} else {\n\t\t$data = array();\n\t}\n\n\t$myrefresh[0] = __('Disabled');\n\t$myrefresh   += $poller_intervals;\n\n\t$field_array = array(\n\t\t'id' => array(\n\t\t\t'friendly_name' => __('Style'),\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => isset_request_var('id') ? get_request_var('id'):0\n\t\t),\n\t\t'style' => array(\n\t\t\t'friendly_name' => __('Style'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'array' => array(\n\t\t\t\t'TAB'        => __('Top Tab'),\n\t\t\t\t'CONSOLE'    => __('Console Menu'),\n\t\t\t\t'FRONT'      => __('Bottom of Console Page'),\n\t\t\t\t'FRONTTOP'   => __('Top of Console Page')\n\t\t\t),\n\t\t\t'description' => __('Where should this page appear?'),\n\t\t\t'value' => (isset($data['style']) ? $data['style']:'')\n\t\t),\n\t\t'consolesection' => array(\n\t\t\t'friendly_name' => __('Console Menu Section'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'array' => $sec_ar,\n\t\t\t'description' => __('Under which Console heading should this item appear? (All External Link menus will appear between Configuration and Utilities)'),\n\t\t\t'value' => (isset($data['extendedstyle']) ? $data['extendedstyle']:'')\n\t\t),\n\t\t'consolenewsection' => array(\n\t\t\t'friendly_name' => __('New Console Section'),\n\t\t\t'method' => 'textbox',\n\t\t\t'max_length' => 20,\n\t\t\t'description' => __('If you don\\'t like any of the choices above, type a new title in here.'),\n\t\t\t'value' => (isset($data['extendedstyle']) ? $data['extendedstyle']:'')\n\t\t),\n\t\t'title' => array(\n\t\t\t'friendly_name' => __('Tab/Menu Name'),\n\t\t\t'method' => 'textbox',\n\t\t\t'max_length' => 20,\n\t\t\t'description' => __('The text that will appear in the tab or menu.'),\n\t\t\t'value' => (isset($data['title']) ? $data['title']:'')\n\t\t),\n\t\t'filename' => array(\n\t\t\t'friendly_name' => __('Content File/URL'),\n\t\t\t'method' => 'drop_files',\n\t\t\t'directory' => $config['base_path'] . '/include/content',\n\t\t\t'exclusions' => array('README', 'index.php'),\n\t\t\t'none_value' => __('Web URL Below'),\n\t\t\t'description' => __('The file that contains the content for this page. This file needs to be in the Cacti \\'include/content/\\' directory.'),\n\t\t\t'value' => (isset($data['contentfile']) ? $data['contentfile']:'')\n\t\t),\n\t\t'fileurl' => array(\n\t\t\t'friendly_name' => __('Web URL Location'),\n\t\t\t'method' => 'textbox',\n\t\t\t'description' => __('The valid URL to use for this external link.  Must include the type, for example http://www.cacti.net.  Note that many websites do not allow them to be embedded in an iframe from a foreign site, and therefore External Linking may not work.'),\n\t\t\t'max_length' => 255,\n\t\t\t'size' => 80,\n\t\t\t'default' => 'http://www.cacti.net',\n\t\t\t'value' => (isset($data['contentfile']) ? $data['contentfile']:'')\n\t\t),\n\t\t'enabled' => array(\n\t\t\t'friendly_name' => __('Enabled'),\n\t\t\t'method' => 'checkbox',\n\t\t\t'description' => __('If checked, the page will be available immediately to the admin user.'),\n\t\t\t'default' => 'on',\n\t\t\t'value' => (isset($data['enabled']) ? 'on':'')\n\t\t),\n\t\t'refresh' => array(\n\t\t\t'friendly_name' => __('Automatic Page Refresh'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'array' => $myrefresh,\n\t\t\t'description' => __('How often do you wish this page to be refreshed automatically.'),\n\t\t\t'value' => (isset($data['refresh']) ? $data['refresh']:'')\n\t\t),\n\t);\n\n\tform_start('links.php', 'link_edit');\n\n\tif (isset($data['title'])) {\n\t\thtml_start_box(__('External Links [edit: %s]', html_escape($data['title'])), '100%', true, '3', 'center', '');\n\t} else {\n\t\thtml_start_box(__('External Links [new]'), '100%', true, '3', 'center', '');\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => $field_array\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_save_button('links.php', 'save');\n\n    ?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t// hide and show the extra console fields when necessary\n\t\t$('#style').change(function() {\n\t\t\tif ($('#style').val() != 'CONSOLE') {\n\t\t\t\t$('#row_consolesection').hide();\n\t\t\t\t$('#row_consolenewsection').hide();\n\t\t\t} else {\n\t\t\t\t$('#row_consolesection').show();\n\t\t\t\tsetConsoleNewSectionVisibity();\n\t\t\t}\n\t\t}).change();\n\n\t\t$('#filename').change(function() {\n\t\t\tchangeFilename();\n\t\t}).change();\n\n\t\t// if you change the section, make the 'new' textbox reflect it\n\t\t// if you change it to 'new', then clear the textbox, and jump to it\n\t\t$('#consolesection').change(function() {\n\t\t\tsetConsoleNewSectionVisibity();\n\t\t}).change();\n\t});\n\n\tfunction setConsoleNewSectionVisibity() {\n\t\tif ($('#consolesection').val() == '__NEW__') {\n\t\t\t$('#row_consolenewsection').show();\n\t\t\t$('#consolenewsection').focus();\n\t\t} else {\n\t\t\t$('#row_consolenewsection').hide();\n\t\t}\n\t}\n\n\tfunction changeFilename() {\n\t\tif ($('#filename').val() == 0) {\n\t\t\t$('#row_fileurl').show();\n\t\t} else {\n\t\t\t$('#row_fileurl').hide();\n\t\t}\n\t}\n\n\t</script>\n\t<?php\n}\n\n// vim:ts=4:sw=4:\n", "<?php\n/*\n   +-------------------------------------------------------------------------+\n   | Copyright (C) 2004-2018 The Cacti Group                                 |\n   |                                                                         |\n   | This program is free software; you can redistribute it and/or           |\n   | modify it under the terms of the GNU General Public License             |\n   | as published by the Free Software Foundation; either version 2          |\n   | of the License, or (at your option) any later version.                  |\n   |                                                                         |\n   | This program is snmpagent in the hope that it will be useful,           |\n   | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n   | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n   | GNU General Public License for more details.                            |\n   +-------------------------------------------------------------------------+\n   | Cacti: The Complete RRDtool-based Graphing Solution                     |\n   +-------------------------------------------------------------------------+\n   | This code is designed, written, and maintained by the Cacti Group. See  |\n   | about.php and/or the AUTHORS file for specific developer information.   |\n   +-------------------------------------------------------------------------+\n   | http://www.cacti.net/                                                   |\n   +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n$manager_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Enable'),\n\t3 => __('Disable')\n);\n\n$manager_notification_actions = array(\n\t1 => __('Disable'),\n\t2 => __('Enable')\n);\n\n$tabs_manager_edit = array(\n\t'general'       => __('General'),\n\t'notifications' => __('Notifications'),\n\t'logs'          => __('Logs'),\n);\n\n/* set default action */\nset_default_action();\n\nget_filter_request_var('tab', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tmanager_edit();\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\tmanager();\n\t\tbottom_footer();\n\tbreak;\n}\n\nfunction manager(){\n\tglobal $config, $manager_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'hostname',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_snmp_mgr');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type=\"text/javascript\">\n\tfunction applyFilter() {\n\t\tstrURL  = 'managers.php';\n\t\tstrURL += '?filter=' + $('#filter').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'managers.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_snmpagent_managers').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_start_box( __('SNMP Notification Receivers'), '100%', '', '3', 'center', 'managers.php?action=edit');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t\t<form id='form_snmpagent_managers' action='managers.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Receivers'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where = \"WHERE (sm.hostname LIKE '%\" . get_request_var('filter') . \"%'\n\t\tOR sm.description LIKE '%\" . get_request_var('filter') . \"%')\";\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(sm.id)\n\t\tFROM snmpagent_managers AS sm\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$managers = db_fetch_assoc(\"SELECT sm.id, sm.description,\n\t\tsm.hostname, sm.disabled, smn.count_notify, snl.count_log\n\t\tFROM snmpagent_managers AS sm\n\t\tLEFT JOIN (\n\t\t\tSELECT COUNT(*) as count_notify, manager_id\n\t\t\tFROM snmpagent_managers_notifications\n\t\t\tGROUP BY manager_id\n\t\t) AS smn\n\t\tON smn.manager_id = sm.id\n\t\tLEFT JOIN (\n\t\t\tSELECT COUNT(*) as count_log, manager_id\n\t\t\tFROM snmpagent_notifications_log\n\t\t\tGROUP BY manager_id\n\t\t) AS snl\n\t\tON snl.manager_id = sm.id\n\t\t$sql_where\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$display_text = array(\n\t\t'description'  => array( __('Description'), 'ASC'),\n\t\t'id'           => array( __('Id'), 'ASC'),\n\t\t'disabled'     => array( __('Status'), 'ASC'),\n\t\t'hostname'     => array( __('Hostname'), 'ASC'),\n\t\t'count_notify' => array( __('Notifications'), 'ASC'),\n\t\t'count_log'    => array( __('Logs'), 'ASC')\n\t);\n\n\t/* generate page list */\n\t$nav = html_nav_bar('managers.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Receivers'), 'page', 'main');\n\n\tform_start('managers.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($managers)) {\n\t\tforeach ($managers as $item) {\n\t\t\t$description = filter_value($item['description'], get_request_var('filter'));\n\t\t\t$hostname    = filter_value($item['hostname'], get_request_var('filter'));\n\t\t\tform_alternate_row('line' . $item['id'], false);\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"' . html_escape($config['url_path'] . 'managers.php?action=edit&id=' . $item['id']) . '\">' . html_escape($description) . '</a>', $item['id']);\n\t\t\tform_selectable_cell($item['id'], $item['id']);\n\t\t\tform_selectable_cell($item['disabled'] ? '<span class=\"deviceDown\">' . __('Disabled') . '</span>' : '<span class=\"deviceUp\">' . __('Enabled') . '</span>', $item['id']);\n\t\t\tform_selectable_ecell($hostname, $item['id']);\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"' . html_escape($config['url_path'] . 'managers.php?action=edit&tab=notifications&id=' . $item['id']) . '\">' . ($item['count_notify'] ? $item['count_notify'] : 0) . '</a>' , $item['id']);\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"' . html_escape($config['url_path'] . 'managers.php?action=edit&tab=logs&id=' . $item['id']) . '\">' . ($item['count_log'] ? $item['count_log'] : 0 ) . '</a>', $item['id']);\n\t\t\tform_checkbox_cell($item['description'], $item['id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td><em>' . __('No SNMP Notification Receivers') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($managers)) {\n\t\tprint $nav;\n\t}\n\n\tform_hidden_box('action_receivers', '1', '');\n\n\tdraw_actions_dropdown($manager_actions);\n\n\tform_end();\n}\n\nfunction manager_edit() {\n\tglobal $config, $snmp_auth_protocols, $snmp_priv_protocols, $snmp_versions,\n\t\t$tabs_manager_edit, $fields_manager_edit, $manager_notification_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isset_request_var('tab')) {\n\t\tset_request_var('tab', 'general');\n\t}\n\t$id\t= (isset_request_var('id') ? get_request_var('id') : '0');\n\n\tif ($id) {\n\t\t$manager = db_fetch_row_prepared('SELECT * FROM snmpagent_managers WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('SNMP Notification Receiver [edit: %s]', html_escape($manager['description']));\n\t} else {\n\t\t$header_label = __('SNMP Notification Receiver [new]');\n\t}\n\n\tif (cacti_sizeof($tabs_manager_edit) && isset_request_var('id')) {\n\t\t$i = 0;\n\n\t\t/* draw the tabs */\n\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\";\n\n\t\tforeach (array_keys($tabs_manager_edit) as $tab_short_name) {\n\t\t\tif (($id == 0 & $tab_short_name != 'general')){\n\t\t\t\tprint \"<li class='subTab'><a href='#' \" . (($tab_short_name == get_request_var('tab')) ? \"class='selected'\" : '') . \"'>\" . $tabs_manager_edit[$tab_short_name] . '</a></li>';\n\t\t\t}else {\n\t\t\t\tprint \"<li class='subTab'><a \" . (($tab_short_name == get_request_var('tab')) ? \"class='selected'\" : '') .\n\t\t\t\t\t\" href='\" . html_escape($config['url_path'] .\n\t\t\t\t\t'managers.php?action=edit&id=' . get_request_var('id') .\n\t\t\t\t\t'&tab=' . $tab_short_name) .\n\t\t\t\t\t\"'>\" . $tabs_manager_edit[$tab_short_name] . '</a></li>';\n\t\t\t}\n\n\t\t\t$i++;\n\t\t}\n\n\t\tprint '</ul></nav></div>';\n\n\t\tif (read_config_option('legacy_menu_nav') != 'on') { ?>\n\t\t<script type='text/javascript'>\n\n\t\t$(function() {\n\t\t\t$('.subTab').find('a').click(function(event) {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tstrURL  = $(this).attr('href');\n\t\t\t\tstrURL += (strURL.indexOf('?') > 0 ? '&':'?') + 'header=false';\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t});\n\t\t});\n\t\t</script>\n\t\t<?php }\n\t}\n\n\tswitch(get_request_var('tab')){\n\t\tcase 'notifications':\n\t\t\tmanager_notifications($id, $header_label);\n\n\t\t\tbreak;\n\t\tcase 'logs':\n\t\t\tmanager_logs($id, $header_label);\n\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tform_start('managers.php');\n\n\t\t\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\t\t\tdraw_edit_form(\n\t\t\t\tarray(\n\t\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t\t'fields' => inject_form_variables($fields_manager_edit, (isset($manager) ? $manager : array()))\n\t\t\t\t)\n\t\t\t);\n\n\t\t\thtml_end_box(true, true);\n\n\t\t\tform_save_button('managers.php', 'return');\n\n\t\t\t?>\n\t\t\t<script type='text/javascript'>\n\n\t\t\t// Need to set this for global snmpv3 functions to remain sane between edits\n\t\t\tsnmp_security_initialized = false;\n\n\t\t\t$(function() {\n\t\t\t\tsetSNMP();\n\t\t\t});\n\t\t\t</script>\n\t\t\t<?php\n\t}\n\n\t?>\n\t<script language='javascript' type='text/javascript' >\n\t\t$('.tooltip').tooltip({\n\t\t\ttrack: true,\n\t\t\tposition: { collision: 'flipfit' },\n\t\t\tcontent: function() { return $(this).attr('title'); }\n\t\t});\n\t</script>\n\t<?php\n}\n\nfunction manager_notifications($id, $header_label) {\n\tglobal $item_rows, $manager_notification_actions;\n\n\t$mibs = db_fetch_assoc('SELECT DISTINCT mib FROM snmpagent_cache');\n\t$registered_mibs = array();\n\tif ($mibs && $mibs >0) {\n\t\tforeach($mibs as $mib) { $registered_mibs[] = $mib['mib']; }\n\t}\n\n\t/* ================= input validation ================= */\n\tif (!$id | !is_numeric($id)) {\n\t\tdie_html_input_error();\n\t}\n\n\tif (!in_array(get_request_var('mib'), $registered_mibs) && get_request_var('mib') != '-1' && get_request_var('mib') != '') {\n\t\tdie_html_input_error();\n\t}\n\t/* ==================================================== */\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'mib' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_snmp_cache');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', '');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'managers.php?action=edit&tab=notifications&id=<?php echo $id; ?>';\n\t\tstrURL += '&mib=' + $('#mib').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'managers.php?action=edit&tab=notifications&id=<?php echo $id; ?>&clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_snmpagent_managers').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t\t<form id='form_snmpagent_managers' name='form_snmpagent_managers' action='managers.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('MIB');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='mib' name='mib' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('mib') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($mibs)) {\n\t\t\t\t\t\t\t\t\tforeach ($mibs as $mib) {\n\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $mib['mib'] . \"'\"; if (get_request_var('mib') == $mib['mib']) { print ' selected'; } print '>' . $mib['mib'] . '</option>';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Receivers');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='rows' name='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . '</option>';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = \" AND `kind`='Notification'\";\n\n\t/* filter by host */\n\tif (get_request_var('mib') == '-1') {\n\t\t/* Show all items */\n\t} elseif (!isempty_request_var('mib')) {\n\t\t$sql_where .= \" AND snmpagent_cache.mib='\" . get_request_var('mib') . \"'\";\n\t}\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= \" AND (`oid` LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR `name` LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR `mib` LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\t$sql_where .= ' ORDER by `oid`';\n\n\tform_start('managers.php', 'chk');\n\n\t/* FIXME: Change SQL Queries to not use WHERE 1 */\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*) FROM snmpagent_cache WHERE 1 $sql_where\");\n\n\t$snmp_cache_sql = \"SELECT * FROM snmpagent_cache WHERE 1 $sql_where LIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\t$snmp_cache = db_fetch_assoc($snmp_cache_sql);\n\n\t$registered_notifications = db_fetch_assoc_prepared('SELECT notification, mib FROM snmpagent_managers_notifications WHERE manager_id = ?', array($id));\n\t$notifications = array();\n\tif ($registered_notifications && cacti_sizeof($registered_notifications) > 0) {\n\t\tforeach($registered_notifications as $registered_notification) {\n\t\t\t$notifications[$registered_notification['mib']][$registered_notification['notification']] = 1;\n\t\t}\n\t}\n\n\t$display_text = array(\n\t\t__('Name'),\n\t\t__('OID'),\n\t\t__('MIB'),\n\t\t__('Kind'),\n\t\t__('Max-Access'),\n\t\t__('Monitored')\n\t);\n\n\t/* generate page list */\n\t$nav = html_nav_bar('managers.php?action=edit&id=' . $id . '&tab=notifications&mib=' . get_request_var('mib') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text)+1, __('Notifications'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header_checkbox($display_text, true, 'managers.php?action=edit&tab=notifications&id=' . $id);\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tforeach ($snmp_cache as $item) {\n\t\t\t$row_id = $item['mib'] . '__' . $item['name'];\n\t\t\t$oid    = filter_value($item['oid'], get_request_var('filter'));\n\t\t\t$name   = filter_value($item['name'], get_request_var('filter'));\n\t\t\t$mib    = filter_value($item['mib'], get_request_var('filter'));\n\n\t\t\tform_alternate_row('line' . $row_id, false);\n\n\t\t\tif ($item['description']) {\n\t\t\t\tprint '<td><a href=\"#\" title=\"<div class=\\'header\\'>' . $name . '</div><div class=\\'content preformatted\\'>' . $item['description']. '</div>\" class=\"tooltip\">' . $name . '</a></td>';\n\t\t\t}else {\n\t\t\t\tform_selectable_cell($name, $row_id);\n\t\t\t}\n\n\t\t\tform_selectable_cell($oid, $row_id);\n\t\t\tform_selectable_cell($mib, $row_id);\n\t\t\tform_selectable_cell($item['kind'], $row_id);\n\t\t\tform_selectable_cell($item['max-access'],$row_id);\n\t\t\tform_selectable_cell(((isset($notifications[$item['mib']]) && isset($notifications[$item['mib']][$item['name']])) ? '<span class=\"deviceUp\">' . __('Enabled'):'<span class=\"deviceDown\">' . __('Disabled')) . '</span>', $row_id);\n\t\t\tform_checkbox_cell($item['oid'], $row_id);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td><em>' . __('No SNMP Notifications') . '</em></td></tr>';\n\t}\n\n\t?>\n\t<input type='hidden' name='id' value='<?php print get_request_var('id'); ?>'>\n\t<?php\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tprint $nav;\n\t}\n\n\tdraw_actions_dropdown($manager_notification_actions);\n\n    form_end();\n}\n\nfunction manager_logs($id, $header_label) {\n\t$severity_levels = array(\n\t\tSNMPAGENT_EVENT_SEVERITY_LOW      => 'LOW',\n\t\tSNMPAGENT_EVENT_SEVERITY_MEDIUM   => 'MEDIUM',\n\t\tSNMPAGENT_EVENT_SEVERITY_HIGH     => 'HIGH',\n\t\tSNMPAGENT_EVENT_SEVERITY_CRITICAL => 'CRITICAL'\n\t);\n\n\t$severity_colors = array(\n\t\tSNMPAGENT_EVENT_SEVERITY_LOW      => '#00FF00',\n\t\tSNMPAGENT_EVENT_SEVERITY_MEDIUM   => '#FFFF00',\n\t\tSNMPAGENT_EVENT_SEVERITY_HIGH     => '#FF0000',\n\t\tSNMPAGENT_EVENT_SEVERITY_CRITICAL => '#FF00FF'\n\t);\n\n\tif (isset_request_var('purge')) {\n\t\tdb_execute_prepared('DELETE FROM snmpagent_notifications_log WHERE manager_id = ?', array($id));\n\t\tset_request_var('clear', true);\n\t}\n\n\t/* ================= input validation ================= */\n\tif (!$id | !is_numeric($id)) {\n\t\tdie_html_input_error();\n\t}\n\n\tif (!in_array(get_request_var('severity'), array_keys($severity_levels)) && get_request_var('severity') != '-1' && get_request_var('severity') != '') {\n\t\tdie_html_input_error();\n\t}\n\n\t/* ==================================================== */\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'severity' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_snmp_logs');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', '');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter(objForm) {\n\t\tstrURL  = '?header=false&severity=' + $('#severity').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&action=edit&tab=logs&id=<?php print get_request_var('id'); ?>';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction showTooltip(e, div, title, desc) {\n\t\tdiv.style.display = 'inline';\n\t\tdiv.style.position = 'fixed';\n\t\tdiv.style.backgroundColor = '#EFFCF0';\n\t\tdiv.style.border = 'solid 1px grey';\n\t\tdiv.style.padding = '10px';\n\t\tdiv.innerHTML = '<b>' + title + '</b><div style=\"padding-left:10px; padding-right:5px;\"><pre>' + desc + '</pre></div>';\n\t\tdiv.style.left = e.clientX + 15 + 'px';\n\t\tdiv.style.top = e.clientY + 15 + 'px';\n\t}\n\n\tfunction hideTooltip(div) {\n\t\tdiv.style.display = 'none';\n\t}\n\n\tfunction highlightStatus(selectID){\n\t\tif ($('#status_' + selectID).val() == 'ON') {\n\t\t\t$('#status_' + selectID).css('background-color', 'LawnGreen');\n\t\t}else {\n\t\t\t$('#status_' + selectID).css('background-color', 'OrangeRed');\n\t\t}\n\t}\n\n\t</script>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form name='form_snmpagent_manager_logs' action='managers.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Severity');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='severity' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('severity') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tforeach ($severity_levels as $level => $name) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $level . \"'\"; if (get_request_var('severity') == $level) { print ' selected'; } print '>' . $name . '</option>';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='purge' value='<?php print __esc('Purge');?>' title='<?php print __esc('Purge Notification Log');?>'>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t\t<input type='hidden' name='tab' value='logs'>\n\t\t\t\t<input type='hidden' id='id' value='<?php print get_request_var('id'); ?>'>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = \" snl.manager_id='\" . $id . \"'\";\n\n\t/* filter by severity */\n\tif (get_request_var('severity') == '-1') {\n\t\t/* Show all items */\n\t} elseif (!isempty_request_var('severity')) {\n\t\t$sql_where .= \" AND snl.severity='\" . get_request_var('severity') . \"'\";\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= \" AND (`varbinds` LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\n\t$sql_where .= ' ORDER by `id` DESC';\n\t$sql_query = \"SELECT snl.*, sc.description\n\t\tFROM snmpagent_notifications_log AS snl\n\t\tLEFT JOIN snmpagent_cache AS sc\n\t\tON sc.name = snl.notification\n\t\tWHERE $sql_where\n\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\tform_start('managers.php', 'chk');\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM snmpagent_notifications_log AS snl\n\t\tWHERE $sql_where\");\n\n\t$logs = db_fetch_assoc($sql_query);\n\n\t$display_text = array(\n\t\t'',\n\t\t__('Time'),\n\t\t__('Notification'),\n\t\t__('Varbinds')\n\t);\n\n\t$nav = html_nav_bar('managers.php?action=exit&id=' . $id . '&tab=logs&mib=' . get_request_var('mib') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, cacti_sizeof($display_text), __('Receivers'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header($display_text);\n\n\tif (cacti_sizeof($logs)) {\n\t\tforeach ($logs as $item) {\n\t\t\t$varbinds = filter_value($item['varbinds'], get_request_var('filter'));\n\n\t\t\tform_alternate_row('line' . $item['id'], true);\n\n\t\t\tprint \"<td title='\" . __esc('Severity Level') . \": \" . $severity_levels[ $item['severity'] ] . \"' style='width:10px;background-color: \" . $severity_colors[ $item['severity'] ] . \";border-top:1px solid white;border-bottom:1px solid white;'></td>\";\n\t\t\tprint \"<td class='nowrap'>\" . date('Y/m/d H:i:s', $item['time']) . '</td>';\n\n\t\t\tif ($item['description']) {\n\t\t\t\t$description = '';\n\t\t\t\t$lines = preg_split( '/\\r\\n|\\r|\\n/', $item['description']);\n\t\t\t\tforeach($lines as $line) {\n\t\t\t\t\t$description .= html_escape(trim($line)) . '<br>';\n\t\t\t\t}\n\t\t\t\tprint '<td><a href=\"#\" onMouseOut=\"hideTooltip(snmpagentTooltip)\" onMouseMove=\"showTooltip(event, snmpagentTooltip, \\'' . $item['notification'] . '\\', \\'' . $description . '\\')\">' . $item['notification'] . '</a></td>';\n\t\t\t}else {\n\t\t\t\tprint \"<td>{$item['notification']}</td>\";\n\t\t\t}\n\t\t\tprint \"<td>$varbinds</td>\";\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td><em>' . __('No SNMP Notification Log Entries') . '</em></td></tr>';\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($logs)) {\n\t\tprint $nav;\n\t}\n\n\t?>\n\t<input type='hidden' name='id' value='<?php print get_filter_request_var('id'); ?>'>\n\t<div style='display:none' id='snmpagentTooltip'></div>\n\t<?php\n}\n\nfunction form_save() {\n\tif (!isset_request_var('tab')) set_request_var('tab', 'general');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('max_log_size');\n\n\tif (!in_array(get_nfilter_request_var('max_log_size'), range(1,31))) {\n\t\t//\tdie_html_input_error();\n\t}\n\t/* ================= input validation ================= */\n\n\tswitch(get_nfilter_request_var('tab')){\n\t\tcase 'notifications':\n\t\t\theader('Location: managers.php?action=edit&tab=notifications&id=' . (empty($manager_id) ? get_request_var('id') : $manager_id) );\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$save['id']                       = get_request_var('id');\n\t\t\t$save['description']              = form_input_validate(trim(get_nfilter_request_var('description')), 'description', '', false, 3);\n\t\t\t$save['hostname']                 = form_input_validate(trim(get_nfilter_request_var('hostname')), 'hostname', '', false, 3);\n\t\t\t$save['disabled']                 = form_input_validate(get_nfilter_request_var('disabled'), 'disabled', '^on$', true, 3);\n\t\t\t$save['max_log_size']             = get_nfilter_request_var('max_log_size');\n\n\t\t\t$save['snmp_version']             = form_input_validate(get_nfilter_request_var('snmp_version'), 'snmp_version', '^[1-3]$', false, 3);\n\t\t\t$save['snmp_community']           = form_input_validate(get_nfilter_request_var('snmp_community'), 'snmp_community', '', true, 3);\n\n\t\t\tif ($save['snmp_version'] == 3) {\n\t\t\t\t$save['snmp_username']        = form_input_validate(get_nfilter_request_var('snmp_username'), 'snmp_username', '', true, 3);\n\t\t\t\t$save['snmp_password']        = form_input_validate(get_nfilter_request_var('snmp_password'), 'snmp_password', '', true, 3);\n\t\t\t\t$save['snmp_auth_protocol']   = form_input_validate(get_nfilter_request_var('snmp_auth_protocol'), 'snmp_auth_protocol', \"^\\[None\\]|MD5|SHA$\", true, 3);\n\t\t\t\t$save['snmp_priv_passphrase'] = form_input_validate(get_nfilter_request_var('snmp_priv_passphrase'), 'snmp_priv_passphrase', '', true, 3);\n\t\t\t\t$save['snmp_priv_protocol']   = form_input_validate(get_nfilter_request_var('snmp_priv_protocol'), 'snmp_priv_protocol', \"^\\[None\\]|DES|AES128$\", true, 3);\n\t\t\t\t$save['snmp_engine_id']       = form_input_validate(get_request_var_post('snmp_engine_id'), 'snmp_engine_id', '', false, 3);\n\t\t\t} else {\n\t\t\t\t$save['snmp_username']        = '';\n\t\t\t\t$save['snmp_password']        = '';\n\t\t\t\t$save['snmp_auth_protocol']   = '';\n\t\t\t\t$save['snmp_priv_passphrase'] = '';\n\t\t\t\t$save['snmp_priv_protocol']   = '';\n\t\t\t\t$save['snmp_engine_id']       = '';\n\t\t\t}\n\n\t\t\t$save['snmp_port']                = form_input_validate(get_nfilter_request_var('snmp_port'), 'snmp_port', '^[0-9]+$', false, 3);\n\t\t\t$save['snmp_message_type']        = form_input_validate(get_nfilter_request_var('snmp_message_type'), 'snmp_message_type', '^[1-2]$', false, 3);\n\t\t\t$save['notes']                    = form_input_validate(get_nfilter_request_var('notes'), 'notes', '', true, 3);\n\n\n\t\t\tif ($save['snmp_version'] == 3 && ($save['snmp_password'] != get_nfilter_request_var('snmp_password_confirm'))) {\n\t\t\t\traise_message(4);\n\t\t\t}\n\n\t\t\tif ($save['snmp_version'] == 3 && ($save['snmp_priv_passphrase'] != get_nfilter_request_var('snmp_priv_passphrase_confirm'))) {\n\t\t\t\traise_message(4);\n\t\t\t}\n\n\t\t\t$manager_id = 0;\n\t\t\tif (!is_error_message()) {\n\t\t\t\t$manager_id = sql_save($save, 'snmpagent_managers');\n\t\t\t\traise_message( ($manager_id)? 1 : 2 );\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\theader('Location: managers.php?action=edit&header=false&id=' . (empty($manager_id) ? get_nfilter_request_var('id') : $manager_id) );\n}\n\nfunction form_actions(){\n\tglobal $manager_actions, $manager_notification_actions;\n\n\tif (isset_request_var('selected_items')) {\n\t\tif (isset_request_var('action_receivers')) {\n\t\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\t\tif ($selected_items != false) {\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\t\tdb_execute('DELETE FROM snmpagent_managers WHERE id IN (' . implode(',' ,$selected_items) . ')');\n\t\t\t\t\tdb_execute('DELETE FROM snmpagent_managers_notifications WHERE manager_id IN (' . implode(',' ,$selected_items) . ')');\n\t\t\t\t\tdb_execute('DELETE FROM snmpagent_notifications_log WHERE manager_id IN (' . implode(',' ,$selected_items) . ')');\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // enable\n\t\t\t\t\tdb_execute(\"UPDATE snmpagent_managers SET disabled = '' WHERE id IN (\" . implode(',' ,$selected_items) . ')');\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // disable\n\t\t\t\t\tdb_execute(\"UPDATE snmpagent_managers SET disabled = 'on' WHERE id IN (\" . implode(',' ,$selected_items) . ')');\n\t\t\t\t}\n\n\t\t\t\theader('Location: managers.php?header=false');\n\t\t\t\texit;\n\t\t\t}\n\t\t} elseif (isset_request_var('action_receiver_notifications')) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tget_filter_request_var('id');\n\t\t\t/* ==================================================== */\n\n\t\t\t$selected_items = unserialize(stripslashes(get_nfilter_request_var('selected_items')));\n\n\t\t\tif ($selected_items !== false) {\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // disable\n\t\t\t\t\tforeach($selected_items as $mib => $notifications) {\n\t\t\t\t\t\tforeach($notifications as $notification => $state) {\n\t\t\t\t\t\t\tdb_execute_prepared('DELETE FROM snmpagent_managers_notifications\n\t\t\t\t\t\t\t\tWHERE `manager_id` = ?\n\t\t\t\t\t\t\t\tAND `mib` = ?\n\t\t\t\t\t\t\t\tAND `notification` = ?\n\t\t\t\t\t\t\t\tLIMIT 1',\n\t\t\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $mib, $notification));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // enable\n\t\t\t\t\tforeach($selected_items as $mib => $notifications) {\n\t\t\t\t\t\tforeach($notifications as $notification => $state) {\n\t\t\t\t\t\t\tdb_execute_prepared('INSERT IGNORE INTO snmpagent_managers_notifications\n\t\t\t\t\t\t\t\t(`manager_id`, `notification`, `mib`)\n\t\t\t\t\t\t\t\tVALUES (?, ?, ?)',\n\t\t\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $notification, $mib));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\theader('Location: managers.php?action=edit&id=' . get_nfilter_request_var('id') . '&tab=notifications&header=false');\n\t\t\texit;\n\t\t}\n\t}else {\n\t\tif (isset_request_var('action_receivers')) {\n\t\t\t$selected_items = array();\n\t\t\t$list = '';\n\t\t\tforeach($_POST as $key => $value) {\n\t\t\t\tif (strstr($key, 'chk_')) {\n\t\t\t\t\t/* grep manager's id */\n\t\t\t\t\t$id = substr($key, 4);\n\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\tinput_validate_input_number($id);\n\t\t\t\t\t/* ==================================================== */\n\t\t\t\t\t$list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT description FROM snmpagent_managers WHERE id = ?', array($id))) . '</li>';\n\t\t\t\t\t$selected_items[] = $id;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttop_header();\n\n\t\t\tform_start('managers.php');\n\n\t\t\thtml_start_box($manager_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\t\t\tif (cacti_sizeof($selected_items)) {\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\t\t$msg = __n('Click \\'Continue\\' to delete the following Notification Receiver', 'Click \\'Continue\\' to delete following Notification Receiver', cacti_sizeof($selected_items));\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // enable\n\t\t\t\t\t$msg = __n('Click \\'Continue\\' to enable the following Notification Receiver', 'Click \\'Continue\\' to enable following Notification Receiver', cacti_sizeof($selected_items));\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // disable\n\t\t\t\t\t$msg = __n('Click \\'Continue\\' to disable the following Notification Receiver', 'Click \\'Continue\\' to disable following Notification Receiver', cacti_sizeof($selected_items));\n\t\t\t\t}\n\n\t\t\t\tprint \"<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>$msg</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$list</ul></div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\";\n\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'><input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('%s Notification Receivers', $manager_actions[get_nfilter_request_var('drp_action')]) . \"'>\";\n\t\t\t} else {\n\t\t\t\traise_message(40);\n\t\t\t\theader('Location: managers.php?header=false');\n\t\t\t\texit;\n\t\t\t}\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='saveRow'>\n\t\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t\t<input type='hidden' name='action_receivers' value='1'>\n\t\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($selected_items) ? serialize($selected_items) : '') . \"'>\n\t\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t\t$save_html\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\thtml_end_box();\n\n\t\t\tform_end();\n\n\t\t\tbottom_footer();\n\t\t}else {\n\t\t\t$selected_items = array();\n\t\t\t$list = '';\n\n\t\t\t/* ================= input validation ================= */\n\t\t\tget_filter_request_var('id');\n\t\t\t/* ==================================================== */\n\n\t\t\tforeach($_POST as $key => $value) {\n\t\t\t\tif (strstr($key, 'chk_')) {\n\t\t\t\t\t/* grep mib and notification name */\n\t\t\t\t\t$row_id = substr($key, 4);\n\t\t\t\t\tlist($mib, $name) = explode('__', $row_id);\n\t\t\t\t\t$list .= '<li>' . html_escape($name) . ' (' . html_escape($mib) .')</li>';\n\t\t\t\t\t$selected_items[$mib][$name] = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttop_header();\n\n\t\t\tform_start('managers.php');\n\n\t\t\thtml_start_box($manager_notification_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\t\t\tif (cacti_sizeof($selected_items)) {\n\t\t\t\t$msg = (get_nfilter_request_var('drp_action') == 2)\n\t\t\t\t\t ? __('Click \\'Continue\\' to forward the following Notification Objects to this Notification Receiver.')\n\t\t\t\t\t : __('Click \\'Continue\\' to disable forwarding the following Notification Objects to this Notification Receiver.');\n\n\t\t\t\tprint \"<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>$msg</p>\n\t\t\t\t\t\t<ul>$list</ul>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\";\n\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Disable Notification Objects') . \"'>\";\n\t\t\t} else {\n\t\t\t\tprint \"<tr><td><span class='textError'>\" . __('You must select at least one notification object.') . \"</span></td></tr>\\n\";\n\t\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Return') . \"' onClick='cactiReturnTo()'>\";\n\t\t\t}\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='saveRow'>\n\t\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t\t<input type='hidden' name='action_receiver_notifications' value='1'>\n\t\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($selected_items) ? serialize($selected_items) : '') . \"'>\n\t\t\t\t<input type='hidden' name='id' value='\" . get_nfilter_request_var('id') . \"'>\n\t\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t\t$save_html\n\t\t\t\t</td>\n\t\t\t</tr>\";\n\n\t\t\thtml_end_box();\n\n\t\t\tform_end();\n\n\t\t\tbottom_footer();\n\t\t}\n\t}\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n$site_actions = array(\n\t1 => __('Delete')\n);\n\n/* file: sites.php, action: edit */\n$fields_site_edit = array(\n\t'spacer0' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('Site Information'),\n\t\t'collapsible' => 'true'\n\t),\n\t'name' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Name'),\n\t\t'description' => __('The primary name for the Site.'),\n\t\t'value' => '|arg1:name|',\n\t\t'size' => '50',\n\t\t'default' => __('New Site'),\n\t\t'max_length' => '100'\n\t),\n\t'spacer1' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('Address Information'),\n\t\t'collapsible' => 'true'\n\t),\n\t'address1' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Address1'),\n\t\t'description' => __('The primary address for the Site.'),\n\t\t'value' => '|arg1:address1|',\n\t\t'placeholder' => __('Enter the Site Address'),\n\t\t'size' => '70',\n\t\t'max_length' => '100'\n\t),\n\t'address2' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Address2'),\n\t\t'description' => __('Additional address information for the Site.'),\n\t\t'value' => '|arg1:address2|',\n\t\t'placeholder' => __('Additional Site Address information'),\n\t\t'size' => '70',\n\t\t'max_length' => '100'\n\t),\n\t'city' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('City'),\n\t\t'description' => __('The city or locality for the Site.'),\n\t\t'value' => '|arg1:city|',\n\t\t'placeholder' => __('Enter the City or Locality'),\n\t\t'size' => '30',\n\t\t'max_length' => '30'\n\t),\n\t'state' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('State'),\n\t\t'description' => __('The state for the Site.'),\n\t\t'value' => '|arg1:state|',\n\t\t'placeholder' => __('Enter the state'),\n\t\t'size' => '15',\n\t\t'max_length' => '20'\n\t),\n\t'postal_code' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Postal/Zip Code'),\n\t\t'description' => __('The postal or zip code for the Site.'),\n\t\t'value' => '|arg1:postal_code|',\n\t\t'placeholder' => __('Enter the postal code'),\n\t\t'size' => '20',\n\t\t'max_length' => '20'\n\t),\n\t'country' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Country'),\n\t\t'description' => __('The country for the Site.'),\n\t\t'value' => '|arg1:country|',\n\t\t'placeholder' => __('Enter the country'),\n\t\t'size' => '20',\n\t\t'max_length' => '30'\n\t),\n\t'timezone' => array(\n\t\t'method' => 'drop_callback',\n\t\t'friendly_name' => __('TimeZone'),\n\t\t'description' => __('The TimeZone for the Site.'),\n\t\t'sql' => 'SELECT Name AS id, Name AS name FROM mysql.time_zone_name ORDER BY name',\n\t\t'action' => 'ajax_tz',\n\t\t'id' => '|arg1:timezone|',\n\t\t'value' => '|arg1:timezone|'\n\t\t),\n\t'spacer2' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('Geolocation Information'),\n\t\t'collapsible' => 'true'\n\t),\n\t'latitude' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Latitude'),\n\t\t'description' => __('The Latitude for this Site.'),\n\t\t'value' => '|arg1:latitude|',\n\t\t'placeholder' => __('example 38.889488'),\n\t\t'size' => '20',\n\t\t'max_length' => '30'\n\t),\n\t'longitude' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Longitude'),\n\t\t'description' => __('The Longitude for this Site.'),\n\t\t'value' => '|arg1:longitude|',\n\t\t'placeholder' => __('example -77.0374678'),\n\t\t'size' => '20',\n\t\t'max_length' => '30'\n\t),\n\t'zoom' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Zoom'),\n\t\t'description' => __('The default Map Zoom for this Site.  Values can be from 0 to 23. Note that some regions of the planet have a max Zoom of 15.'),\n\t\t'value' => '|arg1:zoom|',\n\t\t'placeholder' => __('0 - 23'),\n\t\t'default' => '12',\n\t\t'size' => '4',\n\t\t'max_length' => '4'\n\t),\n\t'spacer3' => array(\n\t\t'method' => 'spacer',\n\t\t'friendly_name' => __('Additional Information'),\n\t\t'collapsible' => 'true'\n\t),\n\t'notes' => array(\n\t\t'method' => 'textarea',\n\t\t'friendly_name' => __('Notes'),\n\t\t'textarea_rows' => '3',\n\t\t'textarea_cols' => '70',\n\t\t'description' => __('Additional area use for random notes related to this Site.'),\n\t\t'value' => '|arg1:notes|',\n\t\t'max_length' => '255',\n\t\t'placeholder' => __('Enter some useful information about the Site.'),\n\t\t'class' => 'textAreaNotes'\n\t),\n\t'alternate_id' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Alternate Name'),\n\t\t'description' => __('Used for cases where a Site has an alternate named used to describe it'),\n\t\t'value' => '|arg1:alternate_id|',\n\t\t'placeholder' => __('If the Site is known by another name enter it here.'),\n\t\t'size' => '50',\n\t\t'max_length' => '30'\n\t),\n\t'id' => array(\n\t\t'method' => 'hidden_zero',\n\t\t'value' => '|arg1:id|'\n\t),\n\t'save_component_site' => array(\n\t\t'method' => 'hidden',\n\t\t'value' => '1'\n\t)\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'ajax_tz':\n\t\tprint json_encode(db_fetch_assoc_prepared('SELECT Name AS label, Name AS `value`\n\t\t\tFROM mysql.time_zone_name\n\t\t\tWHERE Name LIKE ?\n\t\t\tORDER BY Name\n\t\t\tLIMIT ' . read_config_option('autocomplete_rows'),\n\t\t\tarray('%' . get_nfilter_request_var('term') . '%')));\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tsite_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tsites();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    Global Form Functions\n   -------------------------- */\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tif (isset_request_var('save_component_site')) {\n\t\t$save['id']           = get_filter_request_var('id');\n\t\t$save['name']         = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['address1']     = form_input_validate(get_nfilter_request_var('address1'), 'address1', '', true, 3);\n\t\t$save['address2']     = form_input_validate(get_nfilter_request_var('address2'), 'address2', '', true, 3);\n\t\t$save['city']         = form_input_validate(get_nfilter_request_var('city'), 'city', '', true, 3);\n\t\t$save['state']        = form_input_validate(get_nfilter_request_var('state'), 'state', '', true, 3);\n\t\t$save['postal_code']  = form_input_validate(get_nfilter_request_var('postal_code'), 'postal_code', '', true, 3);\n\t\t$save['country']      = form_input_validate(get_nfilter_request_var('country'), 'country', '', true, 3);\n\t\t$save['timezone']     = form_input_validate(get_nfilter_request_var('timezone'), 'timezone', '', true, 3);\n\t\t$save['latitude']     = form_input_validate(get_nfilter_request_var('latitude'), 'latitude', '^-?[0-9]\\d*(\\.\\d+)?$', true, 3);\n\t\t$save['longitude']    = form_input_validate(get_nfilter_request_var('longitude'), 'longitude', '^-?[0-9]\\d*(\\.\\d+)?$', true, 3);\n\t\t$save['zoom']         = form_input_validate(get_nfilter_request_var('zoom'), 'zoom', '^[0-9]+$', true, 3);\n\t\t$save['alternate_id'] = form_input_validate(get_nfilter_request_var('alternate_id'), 'alternate_id', '', true, 3);\n\t\t$save['notes']        = form_input_validate(get_nfilter_request_var('notes'), 'notes', '', true, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$site_id = sql_save($save, 'sites');\n\n\t\t\tif ($site_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: sites.php?header=false&action=edit&id=' . (empty($site_id) ? get_nfilter_request_var('id') : $site_id));\n\t}\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n\nfunction form_actions() {\n\tglobal $site_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tdb_execute('DELETE FROM sites WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('UPDATE host SET site_id=0 WHERE ' . array_to_sql_or($selected_items, 'site_id'));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: sites.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$site_list = ''; $i = 0;\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$site_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM sites WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$site_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('sites.php');\n\n\thtml_start_box($site_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($site_array) && cacti_sizeof($site_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following Site.  Note, all devices will be disassociated from this site.', 'Click \\'Continue\\' to delete all following Sites.  Note, all devices will be disassociated from this site.', cacti_sizeof($site_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$site_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Site', 'Delete Sites', cacti_sizeof($site_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: sites.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($site_array) ? serialize($site_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* ---------------------\n    Site Functions\n   --------------------- */\n\nfunction site_edit() {\n\tglobal $fields_site_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$site = db_fetch_row_prepared('SELECT * FROM sites WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('Site [edit: %s]', html_escape($site['name']));\n\t} else {\n\t\t$header_label = __('Site [new]');\n\t}\n\n\tform_start('sites.php', 'site');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_site_edit, (isset($site) ? $site : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_save_button('sites.php', 'return');\n}\n\nfunction sites() {\n\tglobal $site_actions, $item_rows, $config;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_site');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box( __('Sites'), '100%', '', '3', 'center', 'sites.php?action=edit');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_site' action='sites.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Sites');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type='text/javascript'>\n\n\t\t\tfunction applyFilter() {\n\t\t\t\tstrURL  = 'sites.php?header=false';\n\t\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = 'sites.php?clear=1&header=false';\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\t$('#refresh').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#form_site').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*) FROM sites $sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$site_list = db_fetch_assoc(\"SELECT sites.*, count(h.id) AS hosts\n\t\tFROM sites\n\t\tLEFT JOIN host AS h\n\t\tON h.site_id=sites.id\n\t\t$sql_where\n\t\tGROUP BY sites.id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('sites.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Sites'), 'page', 'main');\n\n\tform_start('sites.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'    => array('display' => __('Site Name'), 'align' => 'left',  'sort' => 'ASC', 'tip' => __('The name of this Site.')),\n\t\t'id'      => array('display' => __('ID'),        'align' => 'right', 'sort' => 'ASC', 'tip' => __('The unique id associated with this Site.')),\n\t\t'hosts'   => array('display' => __('Devices'),   'align' => 'right', 'sort' => 'DESC', 'tip' => __('The number of Devices associated with this Site.')),\n\t\t'city'    => array('display' => __('City'),      'align' => 'left',  'sort' => 'DESC', 'tip' => __('The City associated with this Site.')),\n\t\t'state'   => array('display' => __('State'),     'align' => 'left',  'sort' => 'DESC', 'tip' => __('The State associated with this Site.')),\n\t\t'country' => array('display' => __('Country'),   'align' => 'left',  'sort' => 'DESC', 'tip' => __('The Country associated with this Site.')));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($site_list)) {\n\t\tforeach ($site_list as $site) {\n\t\t\t$devices_url = html_escape($config['url_path'] . 'host.php?reset=1&site_id=' . $site['id']);\n\t\t\tform_alternate_row('line' . $site['id'], true);\n\t\t\tform_selectable_cell(filter_value($site['name'], get_request_var('filter'), 'sites.php?action=edit&id=' . $site['id']), $site['id']);\n\t\t\tform_selectable_cell($site['id'], $site['id'], '', 'right');\n\t\t\tform_selectable_cell('<a class=\"linkEditMain\" href=\"' . $devices_url . '\">' . number_format_i18n($site['hosts'], '-1') . '</a>', $site['id'], '', 'right');\n\t\t\tform_selectable_ecell($site['city'], $site['id'], '', 'left');\n\t\t\tform_selectable_ecell($site['state'], $site['id'], '', 'left');\n\t\t\tform_selectable_ecell($site['country'], $site['id'], '', 'left');\n\t\t\tform_checkbox_cell($site['name'], $site['id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='4'><em>\" . __('No Sites Found') . \"</em></td></tr>\\n\";\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($site_list)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($site_actions);\n\n\tform_end();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_tree.php');\ninclude_once('./lib/html_tree.php');\ninclude_once('./lib/data_query.php');\n\n$tree_actions = array(\n\t1 => __x('dropdown action', 'Delete'),\n\t2 => __x('dropdown action', 'Publish'),\n\t3 => __x('dropdown action', 'Un Publish')\n);\n\n/* set default action */\nset_default_action();\n\nif (get_request_var('action') != '') {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'tree_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'leaf_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'graph_tree_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'parent_item_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'parent' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '/([_\\-a-z:0-9#]+)/')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'position' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'nodeid' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '/([_\\-a-z:0-9#]+)/')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '/([_\\-a-z:0-9#]+)/')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters);\n\t/* ================= input validation ================= */\n}\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\t\tbreak;\n\tcase 'actions':\n        form_actions();\n        break;\n\tcase 'sortasc':\n\t\ttree_sort_name_asc();\n\t\theader('Location: tree.php?header=false');\n\t\tbreak;\n\tcase 'sortdesc':\n\t\ttree_sort_name_desc();\n\t\theader('Location: tree.php?header=false');\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\ttree_edit();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'sites':\n\t\tdisplay_sites();\n\t\tbreak;\n\tcase 'hosts':\n\t\tdisplay_hosts();\n\t\tbreak;\n\tcase 'graphs':\n\t\tdisplay_graphs();\n\t\tbreak;\n\tcase 'tree_up':\n\t\ttree_up();\n\t\tbreak;\n\tcase 'tree_down':\n\t\ttree_down();\n\t\tbreak;\n\tcase 'ajax_dnd':\n\t\ttree_dnd();\n\t\tbreak;\n\tcase 'lock':\n\t\tapi_tree_lock(get_request_var('id'), $_SESSION['sess_user_id']);\n\n\t\theader('Location: tree.php?action=edit&header=false&id=' . get_request_var('id'));\n\t\tbreak;\n\tcase 'unlock':\n\t\tapi_tree_unlock(get_request_var('id'), $_SESSION['sess_user_id']);\n\n\t\theader('Location: tree.php?action=edit&header=false&id=' . get_request_var('id'));\n\t\tbreak;\n\tcase 'copy_node':\n\t\tapi_tree_copy_node(get_request_var('tree_id'), get_request_var('id'), get_request_var('parent'), get_request_var('position'));\n\t\tbreak;\n\tcase 'create_node':\n\t\tapi_tree_create_node(get_request_var('tree_id'), get_request_var('id'), get_request_var('position'), get_nfilter_request_var('text'));\n\t\tbreak;\n\tcase 'delete_node':\n\t\tapi_tree_delete_node(get_request_var('tree_id'), get_request_var('id'));\n\t\tbreak;\n\tcase 'move_node':\n\t\tapi_tree_move_node(get_request_var('tree_id'), get_request_var('id'), get_request_var('parent'), get_request_var('position'));\n\t\tbreak;\n\tcase 'rename_node':\n\t\tapi_tree_rename_node(get_request_var('tree_id'), get_request_var('id'), get_nfilter_request_var('text'));\n\t\tbreak;\n\tcase 'get_node':\n\t\tapi_tree_get_node(get_request_var('tree_id'), get_request_var('id'));\n\t\tbreak;\n\tcase 'get_host_sort':\n\t\tget_host_sort_type();\n\t\tbreak;\n\tcase 'set_host_sort':\n\t\tset_host_sort_type();\n\t\tbreak;\n\tcase 'get_branch_sort':\n\t\tget_branch_sort_type();\n\t\tbreak;\n\tcase 'set_branch_sort':\n\t\tset_branch_sort_type();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\t\ttree();\n\t\tbottom_footer();\n\t\tbreak;\n}\n\nfunction tree_get_max_sequence() {\n\t$max_seq = db_fetch_cell('SELECT MAX(sequence) FROM graph_tree');\n\n\tif ($max_seq == NULL) {\n\t\t$max_seq = 0;\n\t}\n}\n\nfunction tree_check_sequences() {\n\t$bad_seq = db_fetch_cell('SELECT COUNT(sequence)\n\t\tFROM graph_tree\n\t\tWHERE sequence <= 0');\n\n\t$dup_seq = db_fetch_cell('SELECT SUM(count)\n\t\tFROM (\n\t\t\tSELECT sequence, COUNT(sequence) AS count\n\t\t\tFROM graph_tree\n\t\t\tGROUP BY sequence\n\t\t) AS t\n\t\tWHERE t.count > 1');\n\n\t// report any bad or duplicate sequencs to the log for reporting purposes\n\tif ($bad_seq > 0) {\n\t\tcacti_log('WARN: Found ' . $bad_seq . ' Sequences in graph_tree Table', false, 'TREE', POLLER_VERBOSITY_HIGH);\n\t}\n\n\tif ($dup_seq > 0) {\n\t\tcacti_log('WARN: Found ' . $dup_seq . ' Sequences in graph_tree Table', false, 'TREE', POLLER_VERBOSITY_HIGH);\n\t}\n\n\tif ($bad_seq > 0 || $dup_seq > 0) {\n\t\t// resequence the list so it has no gaps, and 0 values will appear at the top\n\t\t// since thats where they would have been displayed\n\t\tdb_execute('SET @seq = 0; UPDATE graph_tree SET sequence = (@seq:=@seq+1) ORDER BY sequence, id;');\n\t}\n}\n\nfunction tree_sort_name_asc() {\n\t// resequence the list so it has no gaps, alphabetically ascending\n\tdb_execute('SET @seq = 0; UPDATE graph_tree SET sequence = (@seq:=@seq+1) ORDER BY name;');\n}\n\nfunction tree_sort_name_desc() {\n\t// resequence the list so it has no gaps, alphabetically ascending\n\tdb_execute('SET @seq = 0; UPDATE graph_tree SET sequence = (@seq:=@seq+1) ORDER BY name DESC;');\n}\n\nfunction tree_down() {\n\ttree_check_sequences();\n\n\t$tree_id = get_filter_request_var('id');\n\n\t$seq = db_fetch_cell_prepared('SELECT sequence\n\t\tFROM graph_tree\n\t\tWHERE id = ?',\n\t\tarray($tree_id));\n\n\t$new_seq = $seq + 1;\n\n\t/* update the old tree first */\n\tdb_execute_prepared('UPDATE graph_tree\n\t\tSET sequence = ?\n\t\tWHERE sequence = ?',\n\t\tarray($seq, $new_seq));\n\n\t/* update the tree in question */\n\tdb_execute_prepared('UPDATE graph_tree\n\t\tSET sequence = ?\n\t\tWHERE id = ?',\n\t\tarray($new_seq, $tree_id));\n\n\theader('Location: tree.php?header=false');\n\texit;\n}\n\nfunction tree_up() {\n\ttree_check_sequences();\n\n\t$tree_id = get_filter_request_var('id');\n\n\t$seq = db_fetch_cell_prepared('SELECT sequence\n\t\tFROM graph_tree\n\t\tWHERE id = ?',\n\t\tarray($tree_id));\n\n\t$new_seq = $seq - 1;\n\n\t/* update the old tree first */\n\tdb_execute_prepared('UPDATE graph_tree\n\t\tSET sequence = ?\n\t\tWHERE sequence = ?',\n\t\tarray($seq, $new_seq));\n\n\t/* update the tree in question */\n\tdb_execute_prepared('UPDATE graph_tree\n\t\tSET sequence = ?\n\t\tWHERE id = ?',\n\t\tarray($new_seq, $tree_id));\n\n\theader('Location: tree.php?header=false');\n\texit;\n}\n\nfunction tree_dnd() {\n\tif (isset_request_var('tree_ids') && is_array(get_nfilter_request_var('tree_ids'))) {\n\t\t$tids     = get_nfilter_request_var('tree_ids');\n\t\t$sequence = 1;\n\n\t\tforeach($tids as $id) {\n\t\t\t$id = str_replace('line', '', $id);\n\t\t\tinput_validate_input_number($id);\n\n\t\t\tdb_execute_prepared('UPDATE graph_tree\n\t\t\t\tSET sequence = ?\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray($sequence, $id));\n\n\t\t\t$sequence++;\n\t\t}\n\t}\n\n\theader('Location: tree.php?header=false');\n\texit;\n}\n\nfunction get_host_sort_type() {\n\tif (isset_request_var('nodeid')) {\n\t\t$ndata = explode('_', get_request_var('nodeid'));\n\t\tif (cacti_sizeof($ndata)) {\n\t\t\tforeach($ndata as $n) {\n\t\t\t\t$parts = explode(':', $n);\n\n\t\t\t\tif (isset($parts[0]) && $parts[0] == 'tbranch') {\n\t\t\t\t\t$branch = $parts[1];\n\t\t\t\t\tinput_validate_input_number($branch);\n\n\t\t\t\t\t$sort_type = db_fetch_cell_prepared('SELECT host_grouping_type\n\t\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($branch));\n\n\t\t\t\t\tif ($sort_type == HOST_GROUPING_GRAPH_TEMPLATE) {\n\t\t\t\t\t\tprint 'hsgt';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint 'hsdq';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn '';\n\t}\n}\n\nfunction set_host_sort_type() {\n\t$type   = '';\n\t$branch = '';\n\n\t/* clean up type string */\n\tif (isset_request_var('type')) {\n\t\tset_request_var('type', sanitize_search_string(get_request_var('type')));\n\t}\n\n\tif (isset_request_var('nodeid')) {\n\t\t$ndata = explode('_', get_request_var('nodeid'));\n\t\tif (cacti_sizeof($ndata)) {\n\t\t\tforeach($ndata as $n) {\n\t\t\t\t$parts = explode(':', $n);\n\n\t\t\t\tif (isset($parts[0]) && $parts[0] == 'tbranch') {\n\t\t\t\t\t$branch = $parts[1];\n\t\t\t\t\tinput_validate_input_number($branch);\n\n\t\t\t\t\tif (get_request_var('type') == 'hsgt') {\n\t\t\t\t\t\t$type = HOST_GROUPING_GRAPH_TEMPLATE;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$type = HOST_GROUPING_DATA_QUERY_INDEX;\n\t\t\t\t\t}\n\n\t\t\t\t\tdb_execute_prepared('UPDATE graph_tree_items\n\t\t\t\t\t\tSET host_grouping_type = ?\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray($type, $branch));\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn;\n}\n\nfunction get_branch_sort_type() {\n\tif (isset_request_var('nodeid')) {\n\t\t$ndata = explode('_', get_request_var('nodeid'));\n\t\tif (cacti_sizeof($ndata)) {\n\t\tforeach($ndata as $n) {\n\t\t\t$parts = explode(':', $n);\n\n\t\t\tif (isset($parts[0]) && $parts[0] == 'tbranch') {\n\t\t\t\t$branch = $parts[1];\n\n\t\t\t\tinput_validate_input_number($branch);\n\n\t\t\t\t$sort_type = db_fetch_cell_prepared('SELECT sort_children_type\n\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($branch));\n\n\t\t\t\tswitch($sort_type) {\n\t\t\t\tcase TREE_ORDERING_INHERIT:\n\t\t\t\t\tprint __x('ordering of tree items', 'inherit');\n\t\t\t\t\tbreak;\n\t\t\t\tcase TREE_ORDERING_NONE:\n\t\t\t\t\tprint __x('ordering of tree items', 'manual');\n\t\t\t\t\tbreak;\n\t\t\t\tcase TREE_ORDERING_ALPHABETIC:\n\t\t\t\t\tprint __x('ordering of tree items', 'alpha');\n\t\t\t\t\tbreak;\n\t\t\t\tcase TREE_ORDERING_NATURAL:\n\t\t\t\t\tprint __x('ordering of tree items', 'natural');\n\t\t\t\t\tbreak;\n\t\t\t\tcase TREE_ORDERING_NUMERIC:\n\t\t\t\t\tprint __x('ordering of tree items', 'numeric');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tprint '';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t}\n\t} else {\n\t\tprint '';\n\t}\n}\n\nfunction set_branch_sort_type() {\n\t$type   = '';\n\t$branch = '';\n\n\t/* clean up type string */\n\tif (isset_request_var('type')) {\n\t\tset_request_var('type', sanitize_search_string(get_request_var('type')));\n\t}\n\n\tif (isset_request_var('nodeid')) {\n\t\t$ndata = explode('_', get_request_var('nodeid'));\n\t\tif (cacti_sizeof($ndata)) {\n\t\t\tforeach($ndata as $n) {\n\t\t\t\t$parts = explode(':', $n);\n\n\t\t\t\tif (isset($parts[0]) && $parts[0] == 'tbranch') {\n\t\t\t\t\t$branch = $parts[1];\n\t\t\t\t\tinput_validate_input_number($branch);\n\n\t\t\t\t\tswitch(get_request_var('type')) {\n\t\t\t\t\tcase 'inherit':\n\t\t\t\t\t\t$type = TREE_ORDERING_INHERIT;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t$type = TREE_ORDERING_NONE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'alpha':\n\t\t\t\t\t\t$type = TREE_ORDERING_ALPHABETIC;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'natural':\n\t\t\t\t\t\t$type = TREE_ORDERING_NATURAL;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'numeric':\n\t\t\t\t\t\t$type = TREE_ORDERING_NUMERIC;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (is_numeric($type) && is_numeric($branch)) {\n\t\t\t\t\t\tdb_execute_prepared('UPDATE graph_tree_items\n\t\t\t\t\t\t\tSET sort_children_type = ?\n\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\tarray($type, $branch));\n\t\t\t\t\t}\n\n\t\t\t\t\t$first_child = db_fetch_row_prepared('SELECT id, graph_tree_id\n\t\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\t\tWHERE parent = ?\n\t\t\t\t\t\tORDER BY position\n\t\t\t\t\t\tLIMIT 1',\n\t\t\t\t\t\tarray($branch));\n\n\t\t\t\t\tif (!empty($first_child)) {\n\t\t\t\t\t\tapi_tree_sort_branch($first_child['id'], $first_child['graph_tree_id']);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\nfunction form_save() {\n\t/* clear graph tree cache on save - affects current user only, other users should see changes in <5 minutes */\n\tif (isset($_SESSION['dhtml_tree'])) {\n\t\tunset($_SESSION['dhtml_tree']);\n\t}\n\n\tif (isset_request_var('save_component_tree')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\t/* ==================================================== */\n\n\t\tif (get_filter_request_var('id') > 0) {\n\t\t\t$prev_order = db_fetch_cell_prepared('SELECT sort_type\n\t\t\t\tFROM graph_tree\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_request_var('id')));\n\t\t} else {\n\t\t\t$prev_order = 1;\n\t\t}\n\n\t\t$save['id']            = get_request_var('id');\n\t\t$save['name']          = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\t\t$save['sort_type']     = form_input_validate(get_nfilter_request_var('sort_type'), 'sort_type', '', true, 3);\n\t\t$save['last_modified'] = date('Y-m-d H:i:s', time());\n\t\t$save['enabled']       = get_nfilter_request_var('enabled') == 'true' ? 'on':'-';\n\t\t$save['modified_by']   = $_SESSION['sess_user_id'];\n\n\t\tif (empty($save['sequence'])) {\n\t\t\t$save['sequence'] = tree_get_max_sequence() + 1;\n\t\t}\n\n\t\tif (empty($save['id'])) {\n\t\t\t$save['user_id'] = $_SESSION['sess_user_id'];\n\t\t}\n\n\t\tif (!is_error_message()) {\n\t\t\t$tree_id = sql_save($save, 'graph_tree');\n\n\t\t\tif ($tree_id) {\n\t\t\t\traise_message(1);\n\n\t\t\t\t/* sort the tree using the algorithm chosen by the user */\n\t\t\t\tif ($save['sort_type'] != $prev_order) {\n\t\t\t\t\tif ($save['sort_type'] != TREE_ORDERING_NONE) {\n\t\t\t\t\t\tsort_recursive(0, $tree_id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader(\"Location: tree.php?header=false&action=edit&id=$tree_id\");\n\t\texit;\n\t}\n}\n\nfunction sort_recursive($branch, $tree_id) {\n\t$leaves = db_fetch_assoc_prepared('SELECT *\n\t\tFROM graph_tree_items\n\t\tWHERE graph_tree_id = ?\n\t\tAND parent = ?\n\t\tAND local_graph_id = 0\n\t\tAND host_id = 0',\n\t\tarray($tree_id, $branch));\n\n\tif (cacti_sizeof($leaves)) {\n\t\tforeach($leaves as $leaf) {\n\t\t\tif ($leaf['sort_children_type'] == TREE_ORDERING_INHERIT) {\n\t\t\t\t$first_child = db_fetch_cell_prepared('SELECT id\n\t\t\t\t\tFROM graph_tree_items\n\t\t\t\t\tWHERE parent = ?',\n\t\t\t\t\tarray($leaf['id']));\n\n\t\t\t\tif (!empty($first_child)) {\n\t\t\t\t\tapi_tree_sort_branch($first_child, $tree_id);\n\n\t\t\t\t\tif (leaves_exist($leaf['id'], $tree_id)) {\n\t\t\t\t\t\tsort_recursive($first_child, $tree_id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction leaves_exist($parent, $tree_id) {\n\treturn db_fetch_assoc_prepared('SELECT COUNT(*)\n\t\tFROM graph_tree_items\n\t\tWHERE graph_tree_id = ?\n\t\tAND parent = ?\n\t\tAND local_graph_id = 0\n\t\tAND host_id = 0',\n\t\tarray($tree_id, $parent));\n}\n\n/* -----------------------\n    Tree Item Functions\n   ----------------------- */\nfunction form_actions() {\n\tglobal $tree_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('drp_action', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-zA-Z0-9_]+)$/')));\n\t/* ==================================================== */\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\tdb_execute('DELETE FROM graph_tree WHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t\tdb_execute('DELETE FROM graph_tree_items WHERE ' . array_to_sql_or($selected_items, 'graph_tree_id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // publish\n\t\t\t\tdb_execute(\"UPDATE graph_tree\n\t\t\t\t\tSET enabled='on',\n\t\t\t\t\tlast_modified=NOW(),\n\t\t\t\t\tmodified_by=\" . $_SESSION['sess_user_id'] . '\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // un-publish\n\t\t\t\tdb_execute(\"UPDATE graph_tree\n\t\t\t\t\tSET enabled='',\n\t\t\t\t\tlast_modified=NOW(),\n\t\t\t\t\tmodified_by=\" . $_SESSION['sess_user_id'] . '\n\t\t\t\t\tWHERE ' . array_to_sql_or($selected_items, 'id'));\n\t\t\t}\n\t\t}\n\n\t\theader('Location: tree.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$tree_list = ''; $i = 0;\n\n\t/* loop through each of the selected items */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$tree_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM graph_tree WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$tree_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('tree.php');\n\n\thtml_start_box($tree_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($tree_array) && cacti_sizeof($tree_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following Tree.', 'Click \\'Continue\\' to delete following Trees.', cacti_sizeof($tree_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$tree_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete Tree', 'Delete Trees', cacti_sizeof($tree_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // publish\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to publish the following Tree.', 'Click \\'Continue\\' to publish following Trees.', cacti_sizeof($tree_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$tree_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Publish Tree', 'Publish Trees', cacti_sizeof($tree_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // un-publish\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea' class='odd'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to un-publish the following Tree.', 'Click \\'Continue\\' to un-publish following Trees.', cacti_sizeof($tree_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$tree_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Un-publish Tree', 'Un-publish Trees', cacti_sizeof($tree_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: tree.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($tree_array) ? serialize($tree_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* ---------------------\n    Tree Functions\n   --------------------- */\n\nfunction tree_edit() {\n\tglobal $fields_tree_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('type');\n\t/* ==================================================== */\n\n\t/* clean up search string */\n\tif (isset_request_var('filter')) {\n\t\tset_request_var('filter', sanitize_search_string(get_request_var('filter')));\n\t}\n\n\tload_current_session_value('filter', 'sess_tree_edit_filter', '');\n\tload_current_session_value('type', 'sess_tree_edit_type', '0');\n\n\tif (!isempty_request_var('id')) {\n\t\t$tree = db_fetch_row_prepared('SELECT *\n\t\t\tFROM graph_tree\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('Trees [edit: %s]', html_escape($tree['name']) );\n\n\t\t// Reset the cookie state if tree id has changed\n\t\tif (isset($_SESSION['sess_tree_id']) && $_SESSION['sess_tree_id'] != get_request_var('id')) {\n\t\t\t$select_first = true;\n\t\t} else {\n\t\t\t$select_first = false;\n\t\t}\n\n\t\t$_SESSION['sess_tree_id'] = get_request_var('id');\n\t} else {\n\t\t$tree = array();\n\n\t\t$header_label = __('Trees [new]');\n\t}\n\n\tform_start('tree.php', 'tree_edit');\n\n\t// Remove inherit from the main tree option\n\tunset($fields_tree_edit['sort_type']['array'][0]);\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tif (!cacti_sizeof($tree)) {\n\t\tunset($fields_tree_edit['enabled']);\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_tree_edit, (isset($tree) ? $tree : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\t$lockdiv = '';\n\n\tif (isset($tree['locked']) && $tree['locked'] == 0) {\n\t\t$lockdiv = \"<div style='padding:3px;'><table><tr><td><input type='button' class='ui-button ui-corner-all ui-widget' id='lock' value='\" . __esc('Edit Tree') . \"'></td><td style='font-weight:bold;'>\" . __('To Edit this tree, you must first lock it by pressing the Edit Tree button.') . \"</td></tr></table></div>\\n\";\n\t\t$editable = false;\n\t} elseif (isset($tree['locked']) && $tree['locked'] == 1) {\n\t\t$lockdiv = \"<div style='padding:3px;'><table><tr><td><input type='button' class='ui-button ui-corner-all ui-widget' id='unlock' value='\" . __esc('Finish Editing Tree') . \"'></td><td><input type='button' class='ui-button ui-corner-all ui-widget' id='addbranch' value='\" . __esc('Add Root Branch') . \"' onClick='createNode()'></td><td style='font-weight:bold;'>\" . __('This tree has been locked for Editing on %1$s by %2$s.', $tree['locked_date'], get_username($tree['modified_by']));\n\t\tif ($tree['modified_by'] == $_SESSION['sess_user_id']) {\n\t\t\t$editable = true;\n\t\t\t$lockdiv .= '</td></tr></table></div>';\n\t\t} else {\n\t\t\t$editable = false;\n\t\t\t$lockdiv .= __('To edit the tree, you must first unlock it and then lock it as yourself') . '</td></tr></table></div>';\n\t\t}\n\t} else {\n\t\t$tree['id'] = 0;\n\t\t$editable = true;\n\t}\n\n\tif ($editable) {\n\t\tform_save_button('tree.php', 'return');\n\t}\n\n\tif (!isempty_request_var('id')) {\n\t\tprint $lockdiv;\n\n\t\tprint \"<table class='treeTable' style='width:100%;'>\\n\";\n\n\t\tprint \"<tr class='even' id='tree_filter'>\\n\";\n\t\tprint \"<td colspan='4'>\";\n\t\tprint \"<table><tr><td>\" . __('Display') . \"</td>\";\n\t\tprint \"<td>\\n\";\n\t\tprint \"<select id='element'>\\n\";\n\t\tprint \"<option id='0'>\" . __('All') . \"</option>\";\n\t\tprint \"<option id='1'>\" . __('Sites') . \"</option>\";\n\t\tprint \"<option id='2'>\" . __('Devices') . \"</option>\";\n\t\tprint \"<option id='3'>\" . __('Graphs') . \"</option>\";\n\t\tprint \"</select></td></tr></table></td></tr>\";\n\n\t\tprint \"<tr><td class='treeArea'>\\n\";\n\n\t\thtml_start_box(__('Tree Items'), '100%', '', '3', 'center', '');\n\n\t\tprint \"<tr><td style='padding:7px;'><div id='ctree'></div></td></tr>\\n\";\n\n\t\thtml_end_box();\n\n\t\tprint \"</td><td class='treeItemsArea treeItemsAreaSite'>\\n\";\n\n\t\thtml_start_box(__('Available Sites'), '100%', '', '3', 'center', '');\n\t\t?>\n\t\t<tr class='even noprint'>\n\t\t\t<td>\n\t\t\t<form id='form_tree_sites' action='tree.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='sfilter' name='sfilter' size='25' value='<?php print html_escape_request_var('sfilter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box(false);\n\n\t\t$display_text = array(__('Site Name'));\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\thtml_header($display_text);\n\n\t\tprint \"<tr><td style='padding:7px;'><div id='sites'>\\n\";\n\t\tdisplay_sites();\n\t\tprint \"</div></td></tr>\\n\";\n\n\t\thtml_end_box();\n\n\t\tprint \"</td><td class='treeItemsArea treeItemsAreaDevice'>\\n\";\n\n\t\thtml_start_box(__('Available Devices'), '100%', '', '3', 'center', '');\n\t\t?>\n\t\t<tr class='even noprint'>\n\t\t\t<td>\n\t\t\t<form id='form_tree_devices' action='tree.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='hfilter' name='hfilter' size='25' value='<?php print html_escape_request_var('hfilter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box(false);\n\n\t\t$display_text = array(__('Device Description'));\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\thtml_header($display_text);\n\n\t\tprint \"<tr><td style='padding:7px;'><div id='hosts'>\\n\";\n\t\tdisplay_hosts();\n\t\tprint \"</div></td></tr>\\n\";\n\n\t\thtml_end_box();\n\n\t\tprint \"</td><td class='treeItemsArea treeItemsAreaGraph'>\\n\";\n\n\t\thtml_start_box(__('Available Graphs'), '100%', '', '3', 'center', '');\n\t\t?>\n\t\t<tr class='even noprint'>\n\t\t\t<td>\n\t\t\t<form id='form_tree_graphs' action='tree.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search'); ?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text'  class='ui-state-default ui-corner-all' id='grfilter' name='grfilter' size='25' value='<?php print html_escape_request_var('grfilter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t\t</td>\n\t\t</tr>\n\t\t<?php\n\t\thtml_end_box(false);\n\n\t\t$display_text = array(__('Graph Name'));\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\thtml_header($display_text);\n\n\t\tprint \"<tr><td style='padding:7px;'><div id='graphs'>\\n\";\n\t\tdisplay_graphs();\n\t\tprint \"</div></td></tr>\\n\";\n\n\t\thtml_end_box();\n\n\t\tprint \"</td></tr></table>\\n\";\n\n\t\t?>\n\t\t<script type='text/javascript'>\n\t\t<?php\n\t\tif ($select_first) {\n\t\t\tprint \"var reset=true;\\n\";\n\t\t} else {\n\t\t\tprint \"var reset=false;\\n\";\n\t\t}\n\t\t?>\n\n\t\tvar graphMeTimer;\n\t\tvar hostMeTimer;\n\t\tvar siteMeTimer;\n\t\tvar hostSortInfo   = {};\n\t\tvar branchSortInfo = {};\n\n\t\tfunction createNode() {\n\t\t\tvar ref = $('#ctree').jstree(true);\n\t\t\tsel = ref.create_node('#', '<?php print __('New Node');?>', '0');\n\t\t\tif (sel) {\n\t\t\t\tref.edit(sel);\n\t\t\t}\n\t\t};\n\n\t\tfunction disableTree() {\n\t\t\t$('.treeTable').each(function() {\n\t\t\t\t$(this).mousedown(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tfunction getGraphData() {\n\t\t\t$.get('tree.php?action=graphs&filter='+$('#grfilter').val())\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#graphs').jstree('destroy');\n\t\t\t\t\t$('#graphs').html(data);\n\t\t\t\t\tdragable('#graphs');\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction getHostData() {\n\t\t\t$.get('tree.php?action=hosts&filter='+$('#hfilter').val())\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#hosts').jstree('destroy');\n\t\t\t\t\t$('#hosts').html(data);\n\t\t\t\t\tdragable('#hosts');\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction getSiteData() {\n\t\t\t$.get('tree.php?action=sites&filter='+$('#sfilter').val(), function(data) {\n\t\t\t\t$('#sites').jstree('destroy');\n\t\t\t\t$('#sites').html(data);\n\t\t\t\tdragable('#sites');\n\t\t\t});\n\t\t}\n\n\t\tfunction setHostSortIcon(nodeid) {\n\t\t\tif (hostSortInfo[nodeid]) {\n\t\t\t\t// Already set\n\t\t\t} else {\n\t\t\t\t$.get('tree.php?action=get_host_sort&nodeid='+nodeid)\n\t\t\t\t\t.done(function(data) {\n\t\t\t\t\t\thostSortInfo[nodeid] = data;\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(data) {\n\t\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction setBranchSortIcon(nodeid) {\n\t\t\tif (branchSortInfo[nodeid]) {\n\t\t\t\t// Already set\n\t\t\t} else {\n\t\t\t\t$.get('tree.php?action=get_branch_sort&nodeid='+nodeid)\n\t\t\t\t\t.done(function(data) {\n\t\t\t\t\t\tbranchSortInfo[nodeid] = data;\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(data) {\n\t\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction getHostSortIcon(type, nodeid) {\n\t\t\tif (hostSortInfo[nodeid] == type) {\n\t\t\t\treturn 'fa fa-check';\n\t\t\t} else {\n\t\t\t\treturn 'false';\n\t\t\t}\n\t\t}\n\n\t\tfunction getBranchSortIcon(type, nodeid) {\n\t\t\tif (branchSortInfo[nodeid] == type) {\n\t\t\t\treturn 'fa fa-check';\n\t\t\t} else {\n\t\t\t\treturn 'false';\n\t\t\t}\n\t\t}\n\n\t\tfunction setBranchSortOrder(type, nodeid) {\n\t\t\t$.get('tree.php?action=set_branch_sort&type='+type+'&nodeid='+nodeid)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\tbranchSortInfo[nodeid] = type;\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction setHostSortOrder(type, nodeid) {\n\t\t\t$.get('tree.php?action=set_host_sort&type='+type+'&nodeid='+nodeid)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\thostSortInfo[nodeid] = type;\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}\n\n\t\tgraphsDropSet = '';\n\t\thostsDropSet  = '';\n\t\tsitesDropSet  = '';\n\n\t\t$(function() {\n\t\t\t<?php if ($editable == false) {?>\n\t\t\t$('select, input').not('#lock, #element').each(function() {\n\t\t\t\t$(this).prop('disabled', true);\n\t\t\t\t$(this).addClass('ui-state-disabled');\n\t\t\t\tif ($(this).selectmenu('instance') !== undefined) {\n\t\t\t\t\t$(this).selectmenu('disable');\n\t\t\t\t}\n\t\t\t});\n\t\t\tdisableTree();\n\t\t\t<?php } else {?>\n\t\t\t$('select, input').each(function() {\n\t\t\t\t$(this).prop('disabled', false);\n\t\t\t});\n\t\t\t<?php }?>\n\n\t\t\t$('form').unbind().submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif ($(this).attr('id') == 'tree_edit') {\n\t\t\t\t\t$.post('tree.php', { action: 'save', name: $('#name').val(), sort_type: $('#sort_type').val(), enabled: $('#enabled').is(':checked'), id: $('#id').val(), save_component_tree: 1, __csrf_magic: csrfMagicToken } ).done(function(data) {\n\t\t\t\t\t\t$('#main').html(data);\n\t\t\t\t\t\tapplySkin();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('#lock').click(function() {\n\t\t\t\tstrURL = 'tree.php?action=lock&id=<?php print $tree['id'];?>';\n\t\t\t\tloadPage(strURL);\n\t\t\t});\n\n\t\t\t$('#unlock').click(function() {\n\t\t\t\tstrURL = 'tree.php?action=unlock&id=<?php print $tree['id'];?>';\n\t\t\t\tloadPage(strURL);\n\t\t\t});\n\n\t\t\tvar height  = parseInt($(window).height()-$('#ctree').offset().top-10)+'px';\n\t\t\tvar sheight = parseInt($(window).height()-$('#sites').offset().top-10)+'px';\n\t\t\tvar hheight = parseInt($(window).height()-$('#hosts').offset().top-10)+'px';\n\t\t\tvar gheight = parseInt($(window).height()-$('#graphs').offset().top-10)+'px';\n\n\t\t\t$('#element').change(function() {\n\t\t\t\tresizer();\n\t\t\t});\n\n\t\t\t$(window).resize(function() {\n\t\t\t\tresizer();\n\t\t\t});\n\n\t\t\tfunction resizer() {\n\t\t\t\tif ($('#ctree').length) {\n\t\t\t\t\theight  = parseInt($(window).height()-$('#ctree').offset().top-10)+'px';\n\t\t\t\t\tsheight = parseInt($(window).height()-$('#sites').offset().top-10)+'px';\n\t\t\t\t\thheight = parseInt($(window).height()-$('#hosts').offset().top-10)+'px';\n\t\t\t\t\tgheight = parseInt($(window).height()-$('#graphs').offset().top-10)+'px';\n\t\t\t\t\t$('#ctree').css('height', height).css('overflow','auto');;\n\t\t\t\t\t$('#hosts').css('height', hheight).css('overflow','auto');;\n\t\t\t\t\t$('#sites').css('height', hheight).css('overflow','auto');;\n\t\t\t\t\t$('#graphs').css('height', gheight).css('overflow','auto');;\n\n\t\t\t\t\tswitchDisplay();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction switchDisplay() {\n\t\t\t\tvar selected = $('#element').prop('selectedIndex');\n\t\t\t\tvar mainWidth = parseInt($('#main').outerWidth());\n\t\t\t\tvar treeWidth = parseInt($('.treeTable').outerWidth());\n\n\t\t\t\tif (selected == 0) {\n\t\t\t\t\tif (mainWidth != treeWidth && treeWidth > 0) {\n\t\t\t\t\t\t$('#element').prop('selectedIndex', 1);\n\t\t\t\t\t\tif (typeof $('#element').selectmenu() === 'object') {\n\t\t\t\t\t\t\t$('#element').selectmenu('refresh');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselected = $('#element').prop('selectedIndex');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tswitch(selected) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\t$('.treeItemsAreaSite').show();\n\t\t\t\t\t\t$('.treeItemsAreaDevice').show();\n\t\t\t\t\t\t$('.treeItemsAreaGraph').show();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t$('.treeItemsAreaSite').show();\n\t\t\t\t\t\t$('.treeItemsAreaDevice').hide();\n\t\t\t\t\t\t$('.treeItemsAreaGraph').hide();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\t$('.treeItemsAreaSite').hide();\n\t\t\t\t\t\t$('.treeItemsAreaDevice').show();\n\t\t\t\t\t\t$('.treeItemsAreaGraph').hide();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\t$('.treeItemsAreaSite').hide();\n\t\t\t\t\t\t$('.treeItemsAreaDevice').hide();\n\t\t\t\t\t\t$('.treeItemsAreaGraph').show();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$(\"#ctree\")\n\t\t\t.jstree({\n\t\t\t\t'types' : {\n\t\t\t\t\t'site' : {\n\t\t\t\t\t\ticon : 'images/site.png',\n\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t},\n\t\t\t\t\t'device' : {\n\t\t\t\t\t\ticon : 'images/server.png',\n\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t},\n\t\t\t\t\t'graph' : {\n\t\t\t\t\t\ticon : 'images/server_chart_curve.png',\n\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'contextmenu' : {\n\t\t\t\t\t'items': function(node) {\n\t\t\t\t\t\tif (node.id.search('tgraph') > 0) {\n\t\t\t\t\t\t\tvar dataType = 'graph';\n\t\t\t\t\t\t}else if (node.id.search('thost') > 0) {\n\t\t\t\t\t\t\tvar dataType = 'host';\n\t\t\t\t\t\t}else if (node.id.search('tsite') > 0) {\n\t\t\t\t\t\t\tvar dataType = 'site';\n\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\tvar dataType = 'branch';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (dataType == 'graph') {\n\t\t\t\t\t\t\treturn graphContext(node.id);\n\t\t\t\t\t\t}else if (dataType == 'host') {\n\t\t\t\t\t\t\treturn hostContext(node.id);\n\t\t\t\t\t\t}else if (dataType == 'site') {\n\t\t\t\t\t\t\treturn siteContext(node.id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn branchContext(node.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'core' : {\n\t\t\t\t\t'data' : {\n\t\t\t\t\t\t'url' : 'tree.php?action=get_node&tree_id='+$('#id').val(),\n\t\t\t\t\t\t'data' : function(node) {\n\t\t\t\t\t\t\treturn { 'id' : node.id }\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'animation' : 0,\n\t\t\t\t\t'check_callback' : true,\n\t\t\t\t\t'force_text' : true\n\t\t\t\t},\n\t\t\t\t'themes' : {\n\t\t\t\t\t'name' : 'default',\n\t\t\t\t\t'responsive' : true,\n\t\t\t\t\t'url' : true,\n\t\t\t\t\t'dots' : false\n\t\t\t\t},\n\t\t\t\t'state': { 'key': 'tree_<?php print get_request_var('id');?>' },\n\t\t\t\t'plugins' : [ 'state', 'wholerow', <?php if ($editable) {?>'contextmenu', 'dnd', <?php }?>'types' ]\n\t\t\t})\n\t\t\t.on('ready.jstree', function(e, data) {\n\t\t\t\tif (reset == true) {\n\t\t\t\t\t$('#ctree').jstree('clear_state');\n\t\t\t\t}\n\t\t\t})<?php if ($editable) {?>.on('delete_node.jstree', function (e, data) {\n\t\t\t\t$.get('?action=delete_node', { 'id' : data.node.id, 'tree_id' : $('#id').val() })\n\t\t\t\t\t.always(function() {\n\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t.on('hover_node.jstree', function (e, data) {\n\t\t\t\tif (data.node.id.search('thost') >= 0) {\n\t\t\t\t\tsetHostSortIcon(data.node.id);\n\t\t\t\t}else if (data.node.id.search('thost') < 0 && data.node.id.search('tgraph') < 0 && data.node.id.search('tsite')) {\n\t\t\t\t\tsetBranchSortIcon(data.node.id);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on('create_node.jstree', function (e, data) {\n\t\t\t\t$.get('?action=create_node', { 'id' : data.node.parent, 'tree_id' : $('#id').val(), 'position' : data.position, 'text' : data.node.text })\n\t\t\t\t\t.done(function (d) {\n\t\t\t\t\t\tdata.instance.set_id(data.node, d.id);\n\t\t\t\t\t\tdata.instance.set_text(data.node, d.text);\n\t\t\t\t\t\tdata.instance.edit(data.node);\n\n\t\t\t\t\t\tif (d.text != '<?php print __('New Node');?>') {\n\t\t\t\t\t\t\t$('.jstree').jstree(true).refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function () {\n\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.on('rename_node.jstree', function (e, data) {\n\t\t\t\t$.get('?action=rename_node', { 'id' : data.node.id, 'tree_id' : $('#id').val(), 'text' : data.text })\n\t\t\t\t\t.done(function (d) {\n\t\t\t\t\t\tif (d.result == 'false') {\n\t\t\t\t\t\t\tdata.instance.set_text(data.node, d.text);\n\t\t\t\t\t\t\tdata.instance.edit(data.node);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(data) {\n\t\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.on('move_node.jstree', function (e, data) {\n\t\t\t\t$.get('?action=move_node', { 'id' : data.node.id, 'tree_id' : $('#id').val(), 'parent' : data.parent, 'position' : data.position })\n\t\t\t\t\t.always(function () {\n\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.on('copy_node.jstree', function (e, data) {\n\t\t\t\toid = data.original.id;\n\n\t\t\t\tif (oid.search('thost') >= 0) {\n\t\t\t\t\tset = hostsDropSet;\n\t\t\t\t}else if (oid.search('tsite') >= 0) {\n\t\t\t\t\tset = sitesDropSet;\n\t\t\t\t} else {\n\t\t\t\t\tset = graphsDropSet;\n\t\t\t\t}\n\n\t\t\t\tif (set != '' && set.selected.length > 0) {\n\t\t\t\t\tentries = set.selected;\n\t\t\t\t\t$.each(entries, function(i, id) {\n\t\t\t\t\t\t$.get('?action=copy_node', { 'id' : id, 'tree_id' : $('#id').val(), 'parent' : data.parent, 'position' : data.position })\n\t\t\t\t\t\t\t.always(function () {\n\t\t\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t});\n\n\t\t\t\t\tif (oid.search('thost') >= 0) {\n\t\t\t\t\t\t$('#hosts').jstree().deselect_all();\n\t\t\t\t\t} else if (oid.search('tsite') >= 0) {\n\t\t\t\t\t\t$('#sites').jstree().deselect_all();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#graphs').jstree().deselect_all();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$.get('?action=copy_node', { 'id' : data.original.id, 'tree_id' : $('#id').val(), 'parent' : data.parent, 'position' : data.position })\n\t\t\t\t\t\t.always(function () {\n\t\t\t\t\t\t\tvar st = data.instance.get_state();\n\t\t\t\t\t\t\tdata.instance.load_node(data.instance.get_parent(data.node.id), function () { this.set_state(st); });\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})<?php } else {?>.children().bind('contextmenu', function(event) {\n\t\t\t\treturn false;\n\t\t\t})<?php }?>;\n\n\t\t\t$('#ctree').css('height', height).css('overflow','auto');;\n\n\t\t\tdragable('#graphs', 'graphs');\n\t\t\tdragable('#sites',  'sites');\n\t\t\tdragable('#hosts',  'hosts');\n\t\t});\n\n\t\tfunction dragable(element, type) {\n\t\t\t$(element)\n\t\t\t\t.jstree({\n\t\t\t\t\t'types' : {\n\t\t\t\t\t\t'site' : {\n\t\t\t\t\t\t\ticon : 'images/site.png',\n\t\t\t\t\t\t\tvalid_children: 'none',\n\t\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'device' : {\n\t\t\t\t\t\t\ticon : 'images/server.png',\n\t\t\t\t\t\t\tvalid_children: 'none',\n\t\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'graph' : {\n\t\t\t\t\t\t\ticon : 'images/server_chart_curve.png',\n\t\t\t\t\t\t\tvalid_children: 'none',\n\t\t\t\t\t\t\tmax_children : 0\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'core' : {\n\t\t\t\t\t\t'animation' : 0,\n\t\t\t\t\t\t'check_callback' : function(operation, node, node_parent, node_position, more) {\n\t\t\t\t\t\t\treturn false;  // not dragging onto self\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'dnd' : {\n\t\t\t\t\t\t'always_copy' : true,\n\t\t\t\t\t\t'check_while_dragging': true\n\t\t\t\t\t},\n\t\t\t\t\t'themes' : { 'stripes' : true },\n\t\t\t\t\t'plugins' : [ 'wholerow', <?php if ($editable) {?>'dnd', <?php }?>'types' ]\n\t\t\t\t})\n\t\t\t\t.on('ready.jstree', function(e, data) {\n\t\t\t\t\tif (reset == true) {\n\t\t\t\t\t\t$('#ctree').jstree('clear_state');\n\t\t\t\t\t}\n\t\t\t\t})<?php if ($editable) {?>\n\t\t\t\t.on('select_node.jstree', function(e, data) {\n\t\t\t\t\tif (type == 'graphs') {\n\t\t\t\t\t\tgraphsDropSet = data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\thostsDropSet  = data;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('deselect_node.jstree', function(e,data) {\n\t\t\t\t\tif (type == 'graphs') {\n\t\t\t\t\t\tgraphsDropSet = data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\thostsDropSet  = data;\n\t\t\t\t\t}\n\t\t\t\t})<?php }?>;\n\t\t\t\t$(element).find('.jstree-ocl').hide();\n\t\t\t\t$(element).children().bind('contextmenu', function(event) {\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t}\n\n\t\tfunction branchContext(nodeid) {\n\t\t\treturn {\n\t\t\t\t'create' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'separator_after'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-folder',\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Create');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.create_node(obj, {}, 'last', function (new_node) {\n\t\t\t\t\t\t\tsetTimeout(function () { inst.edit(new_node); },0);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'rename' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-pencil-alt',\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Rename');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.edit(obj);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'remove' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-times',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Delete');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'bst' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-sort',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Branch Sorting');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'inherit' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('inherit', nodeid),\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Inherit');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('inherit', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function() { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'manual' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('manual', nodeid),\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Manual');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('manual', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function() { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'alpha' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('alpha', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Alphabetic');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('alpha', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function() { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'natural' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('natural', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Natural');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('natural', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function () { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'numeric' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getBranchSortIcon('numeric', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Numeric');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetBranchSortOrder('numeric', nodeid);\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar st = inst.get_state();\n\t\t\t\t\t\t\t\tvar obj = inst.get_node();\n\t\t\t\t\t\t\t\tinst.refresh(obj);\n\t\t\t\t\t\t\t\tinst.load_node(nodeid, function () { this.set_state(st); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'ccp' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-edit',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Edit');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'cut' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-cut',\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Cut');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'copy' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-copy',\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Copy');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'paste' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-clipboard',\n\t\t\t\t\t\t\t'_disabled'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\treturn !$.jstree.reference(data.reference).can_paste();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Paste');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tinst.paste(obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction graphContext(nodeid) {\n\t\t\treturn {\n\t\t\t\t'remove' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-times',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'_disabled'\t\t\t: false, //(this.check('delete_node', data.reference, this.get_parent(data.reference), '')),\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Delete');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'ccp' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-edit',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Edit');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'cut' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-cut',\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Cut');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'copy' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-copy',\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Copy');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction siteContext(nodeid) {\n\t\t\treturn {\n\t\t\t\t'remove' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-times',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Delete');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction hostContext(nodeid) {\n\t\t\treturn {\n\t\t\t\t'remove' : {\n\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-times',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'_disabled'\t\t\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Delete');?>',\n\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference);\n\t\t\t\t\t\tvar obj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'hso' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-sort',\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Sorting Type');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'hsgt' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getHostSortIcon('hsgt', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Graph Template');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetHostSortOrder('hsgt', nodeid);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'hsdq' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: getHostSortIcon('hsdq', nodeid),\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Data Query Index');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tsetHostSortOrder('hsdq', nodeid);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'ccp' : {\n\t\t\t\t\t'separator_before'\t: true,\n\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-edit',\n\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Edit');?>',\n\t\t\t\t\t'action'\t\t\t: false,\n\t\t\t\t\t'submenu' : {\n\t\t\t\t\t\t'cut' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-cut',\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Cut');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'copy' : {\n\t\t\t\t\t\t\t'separator_before'\t: false,\n\t\t\t\t\t\t\t'icon'\t\t\t\t: 'fa fa-copy',\n\t\t\t\t\t\t\t'separator_after'\t: false,\n\t\t\t\t\t\t\t'label'\t\t\t\t: '<?php print __('Copy');?>',\n\t\t\t\t\t\t\t'action'\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_selected());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t$('#grfilter').keyup(function(data) {\n\t\t\tgraphMeTimer && clearTimeout(graphMeTimer);\n\t\t\tgraphMeTimer = setTimeout(getGraphData, 300);\n\t\t});\n\n\t\t$('#hfilter').keyup(function(data) {\n\t\t\thostMeTimer && clearTimeout(hostMeTimer);\n\t\t\thostMeTimer = setTimeout(getHostData, 300);\n\t\t});\n\n\t\t$('#sfilter').keyup(function(data) {\n\t\t\tsiteMeTimer && clearTimeout(siteMeTimer);\n\t\t\tsiteMeTimer = setTimeout(getSiteData, 300);\n\t\t});\n\t\t</script>\n\t\t<?php\n\t}\n}\n\nfunction display_sites() {\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE name LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR city LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR state LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR country LIKE '%\" . get_request_var('filter') . \"%'\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$sites = db_fetch_assoc(\"SELECT * FROM sites $sql_where\");\n\n\tif (cacti_sizeof($sites)) {\n\t\tforeach($sites as $s) {\n\t\t\tprint \"<ul><li id='tsite:\" . $s['id'] . \"' data-jstree='{ \\\"type\\\" : \\\"site\\\"}'>\" . $s['name'] . \"</li></ul>\\n\";\n\t\t}\n\t}\n}\n\nfunction display_hosts() {\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"h.hostname LIKE '%\" . get_request_var('filter') . \"%' OR h.description LIKE '%\" . get_request_var('filter') . \"%'\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$hosts = get_allowed_devices($sql_where, 'description', '20');\n\n\tif (cacti_sizeof($hosts)) {\n\t\tforeach($hosts as $h) {\n\t\t\tprint \"<ul><li id='thost:\" . $h['id'] . \"' data-jstree='{ \\\"type\\\" : \\\"device\\\"}'>\" . $h['description'] . ' (' . $h['hostname'] . ')' . \"</li></ul>\\n\";\n\t\t}\n\t}\n}\n\nfunction display_graphs() {\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (title_cache LIKE '%\" . get_request_var('filter') . \"%' OR gt.name LIKE '%\" . get_request_var('filter') . \"%') AND local_graph_id>0\";\n\t} else {\n\t\t$sql_where = 'WHERE local_graph_id>0';\n\t}\n\n\t$graphs = db_fetch_assoc(\"SELECT\n\t\tgtg.local_graph_id AS id,\n\t\tgtg.title_cache AS title,\n\t\tgt.name AS template_name\n\t\tFROM graph_templates_graph AS gtg\n\t\tLEFT JOIN graph_templates AS gt\n\t\tON gt.id=gtg.graph_template_id\n\t\t$sql_where\n\t\tORDER BY title_cache\n\t\tLIMIT 20\");\n\n\tif (cacti_sizeof($graphs)) {\n\t\tforeach($graphs as $g) {\n\t\t\tif (is_graph_allowed($g['id'])) {\n\t\t\t\tprint \"<ul><li id='tgraph:\" . $g['id'] . \"' data-jstree='{ \\\"type\\\": \\\"graph\\\" }'>\" . html_escape($g['title']) . '</li></ul>';\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction tree() {\n\tglobal $tree_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'sequence',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_tree');\n\t/* ================= input validation ================= */\n\n\t/* if the number of rows is -1, set it to the default */\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction applyFilter() {\n\t\tstrURL  = 'tree.php?rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'tree.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#sorta').click(function() {\n\t\t\tloadPageNoHeader('tree.php?action=sortasc');\n\t\t});\n\n\t\t$('#sortd').click(function() {\n\t\t\tloadPageNoHeader('tree.php?action=sortdesc');\n\t\t});\n\n\t\t$('#form_tree').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\n\t<?php\n\n\t$buttons = array(\n\t\tarray(\n\t\t\t'href'     => 'tree.php?action=edit',\n\t\t\t'callback' => true,\n\t\t\t'title'    => __esc('Add Tree'),\n\t\t\t'class'    => 'fa fa-plus'\n\t\t),\n\t\tarray(\n\t\t\t'href'     => 'tree.php?action=sortasc',\n\t\t\t'callback' => true,\n\t\t\t'title'    => __esc('Sort Trees Ascending'),\n\t\t\t'class'    => 'fa fa-sort-alpha-down'\n\t\t),\n\t\tarray(\n\t\t\t'href'     => 'tree.php?action=sortdesc',\n\t\t\t'callback' => true,\n\t\t\t'title'    => __esc('Sort Trees Descending'),\n\t\t\t'class'    => 'fa fa-sort-alpha-up'\n\t\t)\n\t);\n\n\thtml_start_box(__('Trees'), '100%', '', '3', 'center', $buttons);\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_tree' action='tree.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search'); ?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Trees'); ?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t<button type='button' class='ui-button ui-corner-all ui-widget' id='sorta' title='<?php print __esc('Sort Trees Ascending');?>'><i class='fa fa-sort-alpha-down'></i></button>\n\t\t\t\t\t\t\t<button type='button' class='ui-button ui-corner-all ui-widget' id='sortd' title='<?php print __esc('Sort Trees Descending');?>'><i class='fa fa-sort-alpha-up'></i></button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (t.name LIKE '%\" . get_request_var('filter') . \"%' OR ti.title LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$trees = db_fetch_assoc(\"SELECT t.*,\n\t\tSUM(CASE WHEN ti.host_id > 0 THEN 1 ELSE 0 END) AS hosts,\n\t\tSUM(CASE WHEN ti.local_graph_id > 0 THEN 1 ELSE 0 END) AS graphs,\n\t\tSUM(CASE WHEN ti.local_graph_id = 0 AND host_id = 0 AND site_id = 0 THEN 1 ELSE 0 END) AS branches,\n\t\tSUM(CASE WHEN ti.site_id > 0 THEN 1 ELSE 0 END) AS sites\n\t\tFROM graph_tree AS t\n\t\tLEFT JOIN graph_tree_items AS ti\n\t\tON t.id=ti.graph_tree_id\n\t\t$sql_where\n\t\tGROUP BY t.id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(DISTINCT(ti.graph_tree_id))\n\t\tFROM graph_tree AS t\n\t\tLEFT JOIN graph_tree_items AS ti\n\t\tON t.id=ti.graph_tree_id\n\t\t$sql_where\");\n\n\t$nav = html_nav_bar('tree.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Trees'), 'page', 'main');\n\n\tform_start('tree.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name' => array('display' => __('Tree Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The name by which this Tree will be referred to as.')),\n\t\t'id' => array('display' => __('ID'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The internal database ID for this Tree.  Useful when performing automation or debugging.')),\n\t\t'enabled' => array('display' => __('Published'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('Unpublished Trees cannot be viewed from the Graph tab')),\n\t\t'locked' => array('display' => __('Locked'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('A Tree must be locked in order to be edited.')),\n\t\t'user_id' => array('display' => __('Owner'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __('The original author of this Tree.')),\n\t\t'sequence' => array('display' => __('Order'), 'align' => 'center', 'sort' => 'ASC', 'tip' => __('To change the order of the trees, first sort by this column, press the up or down arrows once they appear.')),\n\t\t'last_modified' => array('display' => __('Last Edited'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The date that this Tree was last edited.')),\n\t\t'modified_by' => array('display' => __('Edited By'), 'align' => 'right', 'sort' => 'ASC', 'tip' => __('The last user to have modified this Tree.')),\n\t\t'sites' => array('display' => __('Sites'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The total number of Site Branches in this Tree.')),\n\t\t'branches' => array('display' => __('Branches'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The total number of Branches in this Tree.')),\n\t\t'hosts' => array('display' => __('Devices'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The total number of individual Devices in this Tree.')),\n\t\t'graphs' => array('display' => __('Graphs'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __('The total number of individual Graphs in this Tree.')));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 1;\n\tif (cacti_sizeof($trees)) {\n\t\tforeach ($trees as $tree) {\n\t\t\t$sequence = '';\n\t\t\tif (get_request_var('sort_column') == 'sequence' && get_request_var('sort_direction') == 'ASC') {\n\t\t\t\tif ($i == 1 && cacti_sizeof($trees) == 1) {\n\t\t\t\t\t$sequence .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t$sequence .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t} elseif ($i == 1) {\n\t\t\t\t\t$sequence .= '<a class=\"pic fa fa-caret-down moveArrow\" href=\"' . htmlspecialchars('tree.php?action=tree_down&id=' . $tree['id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t$sequence .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t} elseif ($i == cacti_sizeof($trees)) {\n\t\t\t\t\t$sequence .= '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t$sequence .= '<a class=\"pic fa fa-caret-up moveArrow\" href=\"' . html_escape('tree.php?action=tree_up&id=' . $tree['id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\n\t\t\t\t} else {\n\t\t\t\t\t$sequence .= '<a class=\"pic fa fa-caret-down moveArrow\" href=\"' . html_escape('tree.php?action=tree_down&id=' . $tree['id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t$sequence .= '<a class=\"pic fa fa-caret-up moveArrow\" href=\"' . html_escape('tree.php?action=tree_up&id=' . $tree['id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $tree['id'], true);\n\t\t\tform_selectable_cell(filter_value($tree['name'], get_request_var('filter'), 'tree.php?action=edit&id=' . $tree['id']), $tree['id']);\n\t\t\tform_selectable_cell($tree['id'], $tree['id'], '', 'right');\n\t\t\tform_selectable_cell($tree['enabled'] == 'on' ? __('Yes'):__('No'), $tree['id']);\n\t\t\tform_selectable_cell($tree['locked'] == '1' ? __('Yes'):__('No'), $tree['id']);\n\t\t\tform_selectable_cell(get_username($tree['user_id']), $tree['id']);\n\t\t\tform_selectable_cell($sequence, $tree['id'], '', 'nowrap center');\n\t\t\tform_selectable_cell(substr($tree['last_modified'],0,16), $tree['id'], '', 'right');\n\t\t\tform_selectable_cell(get_username($tree['modified_by']), $tree['id'], '', 'right');\n\t\t\tform_selectable_cell($tree['sites'] > 0 ? number_format_i18n($tree['sites'], '-1'):'-', $tree['id'], '', 'right');\n\t\t\tform_selectable_cell($tree['branches'] > 0 ? number_format_i18n($tree['branches'], '-1'):'-', $tree['id'], '', 'right');\n\t\t\tform_selectable_cell($tree['hosts'] > 0 ? number_format_i18n($tree['hosts'], '-1'):'-', $tree['id'], '', 'right');\n\t\t\tform_selectable_cell($tree['graphs'] > 0 ? number_format_i18n($tree['graphs'], '-1'):'-', $tree['id'], '', 'right');\n\t\t\tform_checkbox_cell($tree['name'], $tree['id']);\n\t\t\tform_end_row();\n\n\t\t\t$i++;\n\t\t}\n\t} else {\n\t\tprint \"<tr class='tableRow'><td colspan='11'><em>\" . __('No Trees Found') . \"</em></td></tr>\";\n\t}\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($trees)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($tree_actions);\n\n\tform_end();\n\n\tif (get_request_var('sort_column') == 'sequence' && get_request_var('sort_direction') == 'ASC') {\n\t\t?>\n\t\t<script type='text/javascript'>\n\t\t$(function() {\n\t\t\t$('#tree2_child').attr('id', 'tree_ids');\n\n\t\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n\t\t\t$('#tree_ids').find('tr:first').addClass('nodrag').addClass('nodrop');\n\n\t\t\t$('#tree_ids').tableDnD({\n\t\t\t\tonDrop: function(table, row) {\n\t\t\t\t\tloadPageNoHeader('tree.php?action=ajax_dnd&'+$.tableDnD.serialize());\n\t\t\t\t}\n\t\t\t});\n\t\t\t<?php } ?>\n\t\t});\n\t\t</script>\n\t\t<?php\n\t}\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\n$user_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Copy'),\n\t3 => __('Enable'),\n\t4 => __('Disable'),\n\t5 => __('Batch Copy')\n);\n\nset_default_action();\n\nif (isset_request_var('update_policy')) {\n\tupdate_policies();\n} else {\n\tswitch (get_request_var('action')) {\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'perm_remove':\n\t\tperm_remove();\n\n\t\tbreak;\n\tcase 'user_edit':\n\t\ttop_header();\n\t\tuser_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'checkpass':\n\t\t$error = secpass_check_pass(get_nfilter_request_var('password'));\n\n\t\tif ($error == '') {\n\t\t\tprint $error;\n\t\t} else {\n\t\t\tprint 'ok';\n\t\t}\n\n\t\tbreak;\n\tdefault:\n\t\tif (!api_plugin_hook_function('user_admin_action', get_request_var('action'))) {\n\t\t\ttop_header();\n\t\t\tuser();\n\t\t\tbottom_footer();\n\t\t}\n\n\t\tbreak;\n\t}\n}\n\n/* --------------------------\n    Actions Function\n   -------------------------- */\n\nfunction update_policies() {\n\t$set = '';\n\n\t$set .= isset_request_var('policy_graphs') ? 'policy_graphs=' . get_nfilter_request_var('policy_graphs'):'';\n\t$set .= isset_request_var('policy_trees') ? ($set != '' ? ',':'') . 'policy_trees=' . get_nfilter_request_var('policy_trees'):'';\n\t$set .= isset_request_var('policy_hosts') ? ($set != '' ? ',':'') . 'policy_hosts=' . get_nfilter_request_var('policy_hosts'):'';\n\t$set .= isset_request_var('policy_graph_templates') ? ($set != '' ? ',':'') . 'policy_graph_templates=' . get_nfilter_request_var('policy_graph_templates'):'';\n\n\tif ($set != '') {\n\t\tdb_execute_prepared(\"UPDATE user_auth SET $set WHERE id = ?\", array(get_nfilter_request_var('id')));\n\t}\n\n\theader('Location: user_admin.php?action=user_edit&header=false&tab=' .  get_nfilter_request_var('tab') . '&id=' . get_nfilter_request_var('id'));\n\texit;\n}\n\nfunction form_actions() {\n\tglobal $user_actions, $auth_realms;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('associate_host')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t\t\t(user_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 3)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 3',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&header=false&tab=permsd&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_graph')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t\t\t(user_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 1)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 1',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&header=false&tab=permsg&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_template')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t\t\t(user_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 4)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 4',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&header=false&tab=permste&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_groups')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_members\n\t\t\t\t\t\t(user_id, group_id)\n\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_members\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND group_id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&header=false&tab=permsgr&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_tree')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t\t\t(user_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 2)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 2',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?action=user_edit&header=false&tab=permstr&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('selected_items')) {\n\t\tif (get_nfilter_request_var('drp_action') == '2') { /* copy */\n\t\t\t/* ================= input validation ================= */\n\t\t\tget_filter_request_var('selected_items');\n\t\t\tget_filter_request_var('new_realm');\n\t\t\t/* ==================================================== */\n\n\t\t\t$new_username  = get_nfilter_request_var('new_username');\n\t\t\t$new_realm     = get_nfilter_request_var('new_realm', 0);\n\n\t\t\t$template_user = db_fetch_row_prepared('SELECT username, realm\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_nfilter_request_var('selected_items')));\n\n\t\t\t$overwrite     = array( 'full_name' => get_nfilter_request_var('new_fullname') );\n\n\t\t\tif ($new_username != '') {\n\t\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT username FROM user_auth WHERE username = ? AND realm = ?', array($new_username, $new_realm)))) {\n\t\t\t\t\traise_message(19);\n\t\t\t\t} else {\n\t\t\t\t\tif (user_copy($template_user['username'], $new_username, $template_user['realm'], $new_realm, false, $overwrite) === false) {\n\t\t\t\t\t\traise_message(2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message(1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\t\tif ($selected_items != false) {\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t\tuser_remove($selected_items[$i]);\n\n\t\t\t\t\t\tapi_plugin_hook_function('user_remove', $selected_items[$i]);\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // enable\n\t\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t\tuser_enable($selected_items[$i]);\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { // disable\n\t\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t\tuser_disable($selected_items[$i]);\n\t\t\t\t\t}\n\t\t\t\t} elseif (get_nfilter_request_var('drp_action') == '5') { // batch copy\n\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\tget_filter_request_var('template_user');\n\t\t\t\t\t/* ==================================================== */\n\n\t\t\t\t\t$copy_error = false;\n\t\t\t\t\t$template = db_fetch_row_prepared('SELECT username, realm\n\t\t\t\t\t\tFROM user_auth\n\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('template_user')));\n\n\t\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t\t$user = db_fetch_row_prepared('SELECT username, realm\n\t\t\t\t\t\t\tFROM user_auth\n\t\t\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\t\t\tarray($selected_items[$i]));\n\n\t\t\t\t\t\tif ((isset($user)) && (isset($template))) {\n\t\t\t\t\t\t\tif (user_copy($template['username'], $user['username'], $template['realm'], $user['realm'], true) === false) {\n\t\t\t\t\t\t\t\t$copy_error = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($copy_error) {\n\t\t\t\t\t\traise_message(2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message(1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_admin.php?header=false');\n\t\texit;\n\t}\n\n\t/* loop through each of the users and process them */\n\t$user_list = '';\n\t$user_array = array();\n\t$i = 0;\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\tif (get_nfilter_request_var('drp_action') != '2') {\n\t\t\t\t$user_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t}\n\t\t\t$user_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('user_admin.php');\n\n\thtml_start_box($user_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($user_array) && cacti_sizeof($user_array)) {\n\t\tif ((get_nfilter_request_var('drp_action') == '1') && (cacti_sizeof($user_array))) { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to delete the selected User(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$user_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'><input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Delete User(s)') . \"'>\";\n\t\t}\n\t\t$user_id = '';\n\n\t\tif ((get_nfilter_request_var('drp_action') == '2') && (cacti_sizeof($user_array))) { // copy\n\t\t\t$user_id = $user_array[0];\n\t\t\t$user_realm = db_fetch_cell_prepared('SELECT realm FROM user_auth WHERE id = ?', array($user_id));\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to copy the selected User to a new User below.') . \"</p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Template Username:') . \" <i>\" . html_escape(db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array($user_id))) . \"</i></p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Username:') . \" \";\n\t\t\tprint form_text_box('new_username', '', '', 25);\n\n\t\t\tprint \"</p></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('Full Name:') . \" \";\n\t\t\tprint form_text_box('new_fullname', '', '', 35);\n\n\t\t\tprint \"</p></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('Realm:') .\" \";\n\t\t\tprint form_dropdown('new_realm', $auth_realms, '', '', $user_realm, '', 0);\n\n\t\t\tprint \"</p></td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Copy User') . \"'>\";\n\t\t}\n\n\t\tif ((get_nfilter_request_var('drp_action') == '3') && (cacti_sizeof($user_array))) { // enable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to enable the selected User(s).'). \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$user_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Enable User(s)') . \"'>\";\n\t\t}\n\n\t\tif ((get_nfilter_request_var('drp_action') == '4') && (cacti_sizeof($user_array))) { // disable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to disable the selected User(s).') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$user_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Disable User(s)') . \"'>\";\n\t\t}\n\n\t\tif ((get_nfilter_request_var('drp_action') == '5') && (cacti_sizeof($user_array))) { // batch copy\n\t\t\t$usernames = db_fetch_assoc('SELECT id, username FROM user_auth WHERE realm = 0 ORDER BY username');\n\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to overwrite the User(s) settings with the selected template User settings and permissions.  The original users Full Name, Password, Realm and Enable status will be retained, all other fields will be overwritten from Template User.') . \"<br><br></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('Template User:') . \" \";\n\t\t\tprint form_dropdown('template_user', $usernames, 'username', 'id', '', '', 0);\n\n\t\t\tprint \"</p></td>\n\t\t\t\t</tr><tr>\n\t\t\t\t\t<td class='textArea'>\n\t\t\t\t\t\t<p>\" . __('User(s) to update:') . \"</p>\n\t\t\t\t\t\t<ul>$user_list</ul>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Reset User(s) Settings') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: user_admin.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\";\n\n\tif (get_nfilter_request_var('drp_action') == '2') { // copy\n\t\tprint \"<input type='hidden' name='selected_items' value='\" . $user_id . \"'>\\n\";\n\t} else {\n\t\tprint \"<input type='hidden' name='selected_items' value='\" . (isset($user_array) ? serialize($user_array) : '') . \"'>\\n\";\n\t}\n\n\tprint \"<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* --------------------------\n    Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tglobal $settings_user;\n\n\t/* graph permissions */\n\tif ((isset_request_var('save_component_graph_perms')) && (!is_error_message())) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('perm_graphs');\n\t\tget_filter_request_var('perm_trees');\n\t\tget_filter_request_var('perm_hosts');\n\t\tget_filter_request_var('perm_graph_templates');\n\t\tget_filter_request_var('policy_graphs');\n\t\tget_filter_request_var('policy_trees');\n\t\tget_filter_request_var('policy_hosts');\n\t\tget_filter_request_var('policy_graph_templates');\n\t\t/* ==================================================== */\n\n\t\t$add_button_clicked = false;\n\n\t\tif (isset_request_var('add_graph_x')) {\n\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t(user_id,item_id,type)\n\t\t\t\tVALUES (?, ?, 1)',\n\t\t\t\tarray(get_nfilter_request_var('id'), get_nfilter_request_var('perm_graphs')));\n\n\t\t\t$add_button_clicked = true;\n\t\t} elseif (isset_request_var('add_tree_x')) {\n\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t(user_id,item_id,type)\n\t\t\t\tVALUES (?, ?, 2)',\n\t\t\t\tarray(get_nfilter_request_var('id'), get_nfilter_request_var('perm_trees')));\n\n\t\t\t$add_button_clicked = true;\n\t\t} elseif (isset_request_var('add_host_x')) {\n\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t(user_id,item_id,type)\n\t\t\t\tVALUES (?, ?, 3)',\n\t\t\t\tarray(get_nfilter_request_var('id'), get_nfilter_request_var('perm_hosts')));\n\n\t\t\t$add_button_clicked = true;\n\t\t} elseif (isset_request_var('add_graph_template_x')) {\n\t\t\tdb_execute_prepared('REPLACE INTO user_auth_perms\n\t\t\t\t(user_id,item_id,type)\n\t\t\t\tVALUES (?, ?, 4)',\n\t\t\t\tarray(get_nfilter_request_var('id'), get_nfilter_request_var('perm_graph_templates')));\n\n\t\t\t$add_button_clicked = true;\n\t\t}\n\n\t\tif ($add_button_clicked == true) {\n\t\t\theader('Location: user_admin.php?action=user_edit&header=false&tab=graph_perms_edit&id=' . get_nfilter_request_var('id'));\n\t\t\texit;\n\t\t}\n\t} elseif (isset_request_var('save_component_user')) {\n\t\t/* user management save */\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('realm');\n\t\tget_filter_request_var('policy_hosts');\n\t\tget_filter_request_var('policy_graphs');\n\t\tget_filter_request_var('policy_trees');\n\t\tget_filter_request_var('policy_graph_templates');\n\t\t/* ==================================================== */\n\n\t\tif ((get_nfilter_request_var('password') == '') && (get_nfilter_request_var('password_confirm') == '')) {\n\t\t\t$password = db_fetch_cell_prepared('SELECT password\n\t\t\t\tFROM user_auth\n\t\t\t\tWHERE id = ?',\n\t\t\t\tarray(get_nfilter_request_var('id')));\n\t\t} else {\n\t\t\t$password = compat_password_hash(get_nfilter_request_var('password'), PASSWORD_DEFAULT);\n\t\t}\n\n\t\t/* check duplicate username */\n\t\tif (cacti_sizeof(db_fetch_row_prepared('SELECT * FROM user_auth WHERE realm = ? AND username = ? AND id != ?', array(get_nfilter_request_var('realm'), get_nfilter_request_var('username'), get_nfilter_request_var('id'))))) {\n\t\t\traise_message(12);\n\t\t}\n\n\t\t/* check for guest or template user */\n\t\t$username = db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array(get_nfilter_request_var('id')));\n\t\t$history  = db_fetch_cell_prepared('SELECT password_history FROM user_auth WHERE id = ?', array(get_nfilter_request_var('id')));\n\n\t\tif ($username != '' && $username != get_nfilter_request_var('username')) {\n\t\t\tif (get_filter_request_var('id') == get_template_account()) {\n\t\t\t\traise_message(20);\n\t\t\t}\n\n\t\t\tif (get_filter_request_var('id') == get_guest_account()) {\n\t\t\t\traise_message(20);\n\t\t\t}\n\t\t}\n\n\t\t/* check to make sure the passwords match; if not error */\n\t\tif (get_nfilter_request_var('password') != get_nfilter_request_var('password_confirm')) {\n\t\t\traise_message(4);\n\t\t}\n\n\t\tif (get_nfilter_request_var('must_change_password') == 'on' && get_nfilter_request_var('password_change') != 'on') {\n\t\t\traise_message('password_change');\n\t\t}\n\n\t\t$save['id']                   = get_nfilter_request_var('id');\n\t\t$save['username']             = form_input_validate(get_nfilter_request_var('username'), 'username', \"^[A-Za-z0-9\\._\\\\\\@\\ -]+$\", false, 3);\n\t\t$save['full_name']            = form_input_validate(get_nfilter_request_var('full_name'), 'full_name', '', true, 3);\n\t\t$save['password']             = $password;\n\t\t$save['must_change_password'] = form_input_validate(get_nfilter_request_var('must_change_password', ''), 'must_change_password', '', true, 3);\n\t\t$save['password_change']      = form_input_validate(get_nfilter_request_var('password_change', ''), 'password_change', '', true, 3);\n\t\t$save['show_tree']            = form_input_validate(get_nfilter_request_var('show_tree', ''), 'show_tree', '', true, 3);\n\t\t$save['show_list']            = form_input_validate(get_nfilter_request_var('show_list', ''), 'show_list', '', true, 3);\n\t\t$save['show_preview']         = form_input_validate(get_nfilter_request_var('show_preview', ''), 'show_preview', '', true, 3);\n\t\t$save['graph_settings']       = form_input_validate(get_nfilter_request_var('graph_settings', ''), 'graph_settings', '', true, 3);\n\t\t$save['login_opts']           = form_input_validate(get_nfilter_request_var('login_opts'), 'login_opts', '', true, 3);\n\t\t$save['realm']                = get_nfilter_request_var('realm', 0);\n\t\t$save['password_history']     = $history;\n\t\t$save['enabled']              = form_input_validate(get_nfilter_request_var('enabled', ''), 'enabled', '', true, 3);\n\t\t$save['email_address']        = form_input_validate(get_nfilter_request_var('email_address', ''), 'email_address', '', true, 3);\n\t\t$save['locked']               = form_input_validate(get_nfilter_request_var('locked', ''), 'locked', '', true, 3);\n\t\t$save['reset_perms']          = mt_rand();\n\t\tif ($save['locked'] == '') {\n\t\t\t$save['failed_attempts'] = 0;\n\t\t}\n\n\t\t$save = api_plugin_hook_function('user_admin_setup_sql_save', $save);\n\n\t\tif (!is_error_message()) {\n\t\t\t$user_id = sql_save($save, 'user_auth');\n\n\t\t\tif ($user_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\t} elseif (isset_request_var('save_component_realm_perms')) {\n\t\tdb_execute_prepared('DELETE FROM user_auth_realm\n\t\t\tWHERE user_id = ?',\n\t\t\tarray(get_nfilter_request_var('id')));\n\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^[section]/i', $var)) {\n\t\t\t\tif (substr($var, 0, 7) == 'section') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_realm\n\t\t\t\t\t\t(user_id, realm_id)\n\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), substr($var, 7)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treset_user_perms(get_nfilter_request_var('id'));\n\n\t\traise_message(1);\n\t} elseif (isset_request_var('save_component_graph_settings')) {\n\t\tsave_user_settings(get_request_var('id'));\n\n\t\t/* reset local settings cache so the user sees the new settings */\n\t\tkill_session_var('sess_user_config_array');\n\n\t\treset_user_perms(get_request_var('id'));\n\n\t\traise_message(1);\n\t} elseif (isset_request_var('save_component_graph_perms')) {\n\t\tdb_execute_prepared('UPDATE user_auth\n\t\t\tSET policy_graphs = ?,\n\t\t\tpolicy_trees = ?,\n\t\t\tpolicy_hosts = ?,\n\t\t\tpolicy_graph_templates = ?\n\t\t\tWHERE id = ?',\n\t\t\tarray(\n\t\t\t\tget_nfilter_request_var('policy_graphs'),\n\t\t\t\tget_nfilter_request_var('policy_trees'),\n\t\t\t\tget_nfilter_request_var('policy_hosts'),\n\t\t\t\tget_nfilter_request_var('policy_graph_templates'),\n\t\t\t\tget_nfilter_request_var('id')\n\t\t\t)\n\t\t);\n\t} else {\n\t\tapi_plugin_hook('user_admin_user_save');\n\n\t\treset_user_perms(get_filter_request_var('id'));\n\t}\n\n\t/* redirect to the appropriate page */\n\theader('Location: user_admin.php?action=user_edit&header=false&id=' . (empty($user_id) ? get_filter_request_var('id') : $user_id));\n}\n\n/* --------------------------\n    Graph Permissions\n   -------------------------- */\n\nfunction perm_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('user_id');\n\t/* ==================================================== */\n\n\tif (get_request_var('type') == 'graph') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\tWHERE type = 1\n\t\t\tAND user_id = ?\n\t\t\tAND item_id = ?',\n\t\t\tarray(get_request_var('user_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'tree') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\tWHERE type = 2\n\t\t\tAND user_id = ?\n\t\t\tAND item_id = ?',\n\t\t\tarray(get_request_var('user_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'host') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\tWHERE type = 3\n\t\t\tAND user_id = ?\n\t\t\tAND item_id = ?',\n\t\t\tarray(get_request_var('user_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'graph_template') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_perms\n\t\t\tWHERE type = 4\n\t\t\tAND user_id = ?\n\t\t\tAND item_id = ?',\n\t\t\tarray(get_request_var('user_id'), get_request_var('id')));\n\t}\n\n\theader('Location: user_admin.php?action=user_edit&header=false&tab=graph_perms_edit&id=' . get_request_var('user_id'));\n}\n\nfunction get_permission_string(&$graph, &$policies) {\n\t$grantStr  = '';\n\t$rejectStr = '';\n\n\tif (read_config_option('graph_auth_method') == 1) {\n\t\t$method = 'loose';\n\t} else {\n\t\t$method = 'strong';\n\t}\n\n\t$i = 1;\n\tforeach($policies as $p) {\n\t\t$allowed  = 0;\n\t\t$rejected = 0;\n\n\t\tif ($p['policy_graphs'] == 1) {\n\t\t\tif ($graph[\"user$i\"] == '') {\n\t\t\t\t$grantStr  = $grantStr . ($grantStr != '' ? ', ':'') . 'Graph:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t} else {\n\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . 'Graph:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t}\n\t\t} elseif ($graph[\"user$i\"] != '') {\n\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . 'Graph:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t} elseif ($method == 'loose') {\n\t\t\t$rejected++;\n\t\t} else {\n\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . 'Graph:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t}\n\t\t$i++;\n\n\t\tif ($p['policy_hosts'] == 1) {\n\t\t\tif ($graph[\"user$i\"] == '') {\n\t\t\t\tif ($method == 'loose') {\n\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . 'Device:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t\t} else {\n\t\t\t\t\t$allowed++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . 'Device:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t}\n\t\t} elseif ($graph[\"user$i\"] != '') {\n\t\t\tif ($method == 'loose') {\n\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . 'Device:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t} else {\n\t\t\t\t$allowed++;\n\t\t\t}\n\t\t} elseif ($method == 'loose') {\n\t\t\t$rejected++;\n\t\t}\n\t\t$i++;\n\n\t\tif ($p['policy_graph_templates'] == 1) {\n\t\t\tif ($graph[\"user$i\"] == '') {\n\t\t\t\tif ($method == 'loose') {\n\t\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . 'Template:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t\t} else {\n\t\t\t\t\t$allowed++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . 'Template:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t}\n\t\t} elseif ($graph[\"user$i\"] != '') {\n\t\t\tif ($method == 'loose') {\n\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . 'Template:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t} else {\n\t\t\t\t$allowed++;\n\t\t\t}\n\t\t} elseif ($method == 'loose') {\n\t\t\t$rejected++;\n\t\t}\n\t\t$i++;\n\n\t\tif ($method != 'loose') {\n\t\t\tif ($allowed == 2) {\n\t\t\t\t$grantStr = $grantStr . ($grantStr != '' ? ', ':'') . 'Device+Template:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t} else {\n\t\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . 'Device+Template:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t\t}\n\t\t} elseif ($rejected == 3) {\n\t\t\t$rejectStr = $rejectStr . ($rejectStr != '' ? ', ':'') . 'Graph+Device+Template:(' . ucfirst($p['type']) . ($p['type'] != 'user' ? '/' . $p['name'] . ')':')');\n\t\t}\n\t}\n\n\t$permStr = '';\n\tif ($grantStr != '') {\n\t\t$permStr = \"<span class='accessGranted'>Granted:</span> <span class='accessGrantedItem'>\" . trim($grantStr,',') . '</span>';\n\t}\n\n\tif ($rejectStr != '') {\n\t\tif ($grantStr == '') {\n\t\t\t$permStr = \"<span class='accessRestricted'>Restricted:</span> <span class='accessRestrictedItem'>\" . trim($rejectStr,',') . '</span>';\n\t\t} else {\n\t\t\t$permStr .= \", <span class='accessRestrictedItem'>\" . trim($rejectStr,',') . '</span>';\n\t\t}\n\t}\n\n\treturn $permStr;\n}\n\nfunction graph_perms_edit($tab, $header_label) {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$sql_where  = '';\n\t$sql_join   = '';\n\t$limit      = '';\n\t$sql_having = '';\n\n\t$policy_array = array(\n\t\t1 => __('Allow'),\n\t\t2 => __('Deny')\n\t);\n\n\tif (!isempty_request_var('id')) {\n\t\t$policy = db_fetch_row_prepared('SELECT policy_graphs, policy_trees, policy_hosts, policy_graph_templates\n\t\t\tFROM user_auth\n\t\t\tWHERE id = ?', array(get_request_var('id')));\n\t} else {\n\t\t$policy = array(\n\t\t\t'policy_graphs' => '1',\n\t\t\t'policy_trees'  => '1',\n\t\t\t'policy_hosts'  => '1',\n\t\t\t'policy_graph_templates' => '1'\n\t\t);\n\t}\n\n\tswitch($tab) {\n\tcase 'permsg':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_admin.php&header=false');\n\t\t}\n\n\t\tprocess_graph_request_vars();\n\n\t\tgraph_filter($header_label);\n\n\t\tform_start('user_admin.php', 'policy');\n\n\t\tif (read_config_option('graph_auth_method') == 1) {\n\t\t\t$policy_note = __('<b>Note:</b> System Graph Policy is \\'Permissive\\' meaning the User must have access to at least one of Graph, Device, or Graph Template to gain access to the Graph');\n\t\t} else {\n\t\t\t$policy_note = __('<b>Note:</b> System Graph Policy is \\'Restrictive\\' meaning the User must have access to either the Graph or the Device and Graph Template to gain access to the Graph');\n\t\t}\n\n\t\t/* box: device permissions */\n\t\thtml_start_box(__('Default Graph Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><?php print __('Default Graph Policy for this User');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_graphs',$policy_array,'','',$policy['policy_graphs'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<tr class='even'>\n\t\t\t<td><br><?php print $policy_note;?></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t$user_id = get_request_var('id');\n\n\t\tif (read_config_option('graph_auth_method') == 1) {\n\t\t\t$sql_operator = 'OR';\n\t\t} else {\n\t\t\t$sql_operator = 'AND';\n\t\t}\n\n\t\t$limit = 'LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t/* get policies for all groups and user */\n\t\t$policies   = db_fetch_assoc_prepared(\"SELECT uag.id, 'group' AS type, uag.name,\n\t\t\tpolicy_graphs, policy_hosts, policy_graph_templates\n\t\t\tFROM user_auth_group AS uag\n\t\t\tINNER JOIN user_auth_group_members AS uagm\n\t\t\tON uag.id = uagm.group_id\n\t\t\tWHERE uag.enabled = 'on' AND uagm.user_id = ?\",\n\t\t\tarray($user_id));\n\n\t\t$policies[] = db_fetch_row_prepared(\"SELECT id, 'user' AS type, 'user' AS name,\n\t\t\tpolicy_graphs, policy_hosts, policy_graph_templates\n\t\t\tFROM user_auth WHERE id = ?\",\n\t\t\tarray($user_id));\n\n\t\tarray_reverse($policies);\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (gtg.title_cache LIKE '%\" . get_request_var('filter') . \"%' AND gtg.local_graph_id > 0)\";\n\t\t} else {\n\t\t\t$sql_where = 'WHERE (gtg.local_graph_id > 0)';\n\t\t}\n\n\t\tif (get_request_var('graph_template_id') == '-1') {\n\t\t\t/* Show all items */\n\t\t} elseif (get_request_var('graph_template_id') == '0') {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gtg.graph_template_id=0';\n\t\t} elseif (!isempty_request_var('graph_template_id')) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gtg.graph_template_id=' . get_request_var('graph_template_id');\n\t\t}\n\n\t\t$i = 1;\n\t\t$user_perm = '';\n\t\t$sql_select = '';\n\t\tforeach($policies as $policy) {\n\t\t\tif ($policy['type'] == 'user' && $user_perm == '') {\n\t\t\t\t$user_perm = $i;\n\t\t\t}\n\n\t\t\tif (get_request_var('associated') == 'false') {\n\t\t\t\tif ($policy['policy_graphs'] == 1) {\n\t\t\t\t\t$sql_having .= ($sql_having != '' ? ' OR ':'') . \" (user$i IS NULL\";\n\t\t\t\t} else {\n\t\t\t\t\t$sql_having .= ($sql_having != '' ? ' OR ':'') . \" (user$i IS NOT NULL\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql_join   .= 'LEFT JOIN user_auth_' . ($policy['type'] == 'user' ? '':'group_') . \"perms AS uap$i ON (gl.id=uap$i.item_id AND uap$i.type=1 AND uap$i.\" . $policy['type'] . '_id=' . get_request_var('id') . ') ';\n\t\t\t$sql_select .= ($sql_select != '' ? ', ':'') . \"uap$i.\" . $policy['type'] . \"_id AS user$i\";\n\t\t\t$i++;\n\n\t\t\tif (get_request_var('associated') == 'false') {\n\t\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t\t$sql_having .= \" OR (user$i IS NULL\";\n\t\t\t\t} else {\n\t\t\t\t\t$sql_having .= \" OR (user$i IS NOT NULL\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql_join   .= 'LEFT JOIN user_auth_' . ($policy['type'] == 'user' ? '':'group_') . \"perms AS uap$i ON (gl.host_id=uap$i.item_id AND uap$i.type=3 AND uap$i.\" . $policy['type'] . '_id=' . get_request_var('id') . ') ';\n\t\t\t$sql_select .= ($sql_select != '' ? ', ':'') . \"uap$i.\" . $policy['type'] . \"_id AS user$i\";\n\t\t\t$i++;\n\n\t\t\tif (get_request_var('associated') == 'false') {\n\t\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t\t$sql_having .= \" $sql_operator user$i IS NULL))\";\n\t\t\t\t} else {\n\t\t\t\t\t$sql_having .= \" $sql_operator user$i IS NOT NULL))\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sql_join   .= 'LEFT JOIN user_auth_' . ($policy['type'] == 'user' ? '':'group_') . \"perms AS uap$i ON (gl.graph_template_id=uap$i.item_id AND uap$i.type=4 AND uap$i.\" . $policy['type'] . '_id=' . get_request_var('id') . ') ';\n\t\t\t$sql_select .= ($sql_select != '' ? ', ':'') . \"uap$i.\" . $policy['type'] . \"_id AS user$i\";\n\t\t\t$i++;\n\t\t}\n\n\t\tif ($sql_having != '') {\n\t\t\t$sql_having = 'HAVING ' . $sql_having;\n\t\t}\n\n\t\t$graphs = db_fetch_assoc(\"SELECT gtg.local_graph_id, h.description, gt.name AS template_name,\n\t\t\tgtg.title_cache, gtg.width, gtg.height, gl.snmp_index, gl.snmp_query_id,\n\t\t\t$sql_select\n\t\t\tFROM graph_templates_graph AS gtg\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gl.id = gtg.local_graph_id\n\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN host AS h\n\t\t\tON h.id = gl.host_id\n\t\t\t$sql_join\n\t\t\t$sql_where\n\t\t\t$sql_having\n\t\t\tORDER BY gtg.title_cache\n\t\t\t$limit\");\n\n\t\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\t\tFROM (\n\t\t\t\tSELECT $sql_select\n\t\t\t\tFROM graph_templates_graph AS gtg\n\t\t\t\tINNER JOIN graph_local AS gl\n\t\t\t\tON gl.id = gtg.local_graph_id\n\t\t\t\tLEFT JOIN graph_templates AS gt\n\t\t\t\tON gt.id = gl.graph_template_id\n\t\t\t\tLEFT JOIN host AS h\n\t\t\t\tON h.id = gl.host_id\n\t\t\t\t$sql_join\n\t\t\t\t$sql_where\n\t\t\t\t$sql_having\n\t\t\t) AS `rows`\");\n\n\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permsg&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Graphs'), 'page', 'main');\n\n\t\tform_start('user_admin.php?tab=permsg&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array(__('Graph Title'), __('ID'), __('Effective Policy'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tforeach ($graphs as $g) {\n\t\t\t\tform_alternate_row('line' . $g['local_graph_id'], true);\n\t\t\t\tform_selectable_cell(filter_value($g['title_cache'], get_request_var('filter')), $g['local_graph_id']);\n\t\t\t\tform_selectable_cell($g['local_graph_id'], $g['local_graph_id']);\n\t\t\t\tform_selectable_cell(get_permission_string($g, $policies), $g['local_graph_id']);\n\t\t\t\tform_checkbox_cell($g['title_cache'], $g['local_graph_id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Graphs Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_graph', '1', '');\n\n\t\tif ($policy['policy_graphs'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\tcase 'permsgr':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_admin.php&header=false');\n\t\t}\n\n\t\tprocess_group_request_vars();\n\n\t\tgroup_filter($header_label);\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (uag.name LIKE '%\" . get_request_var('filter') . \"%' OR uag.description LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (get_request_var('associated') != 'false') {\n\t\t\t/* Show all items */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' uagm.user_id=' . get_request_var('id');\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT\n\t\t\tCOUNT(DISTINCT uag.id)\n\t\t\tFROM user_auth_group AS uag\n\t\t\tLEFT JOIN (SELECT user_id, group_id FROM user_auth_group_members WHERE user_id=\" . get_request_var('id') . \") AS uagm\n\t\t\tON uag.id = uagm.group_id\n\t\t\t$sql_where\");\n\n\t\t$sql_query = \"SELECT DISTINCT uag.*, uagm.user_id\n\t\t\tFROM user_auth_group AS uag\n\t\t\tLEFT JOIN (SELECT user_id, group_id FROM user_auth_group_members WHERE user_id=\" . get_request_var('id') . \") AS uagm\n\t\t\tON uag.id = uagm.group_id\n\t\t\t$sql_where\n\t\t\tORDER BY name\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$groups = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permsgr&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Groups'), 'page', 'main');\n\n\t\tform_start('user_admin.php?tab=permsd&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array(__('Name'), __('Description'), __('Member'), __('ID'), __('Policies (Graph/Device/Template)'), __('Enabled'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($groups)) {\n\t\t\tforeach ($groups as $g) {\n\t\t\t\tform_alternate_row('line' . $g['id'], true);\n\t\t\t\tform_selectable_cell(filter_value($g['name'], get_request_var('filter'), 'user_group_admin.php?action=edit&id=' . $g['id']), $g['id']);\n\t\t\t\tform_selectable_cell(filter_value($g['description'], get_request_var('filter')), $g['id']);\n\t\t\t\tform_selectable_cell($g['user_id'] > 0 ? __('Member'):__('Non Member'), $g['id']);\n\t\t\t\tform_selectable_cell(($g['id']), $g['id']);\n\t\t\t\tform_selectable_cell(($g['policy_graphs'] == 1 ? __('ALLOW'):__('DENY')) . '/' . ($g['policy_hosts'] == 1 ? __('ALLOW'):__('DENY')) . '/' . ($g['policy_graph_templates'] == 1 ? __('ALLOW'):__('DENY')), $g['id']);\n\t\t\t\tform_selectable_cell($g['enabled'] == 'on' ? __('Enabled'):__('Disabled'), $g['id']);\n\t\t\t\tform_checkbox_cell($g['name'], $g['id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching User Groups Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($groups)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_groups', '1', '');\n\n\t\t$assoc_actions = array(\n\t\t\t1 => __('Assign Membership'),\n\t\t\t2 => __('Remove Membership')\n\t\t);\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\tcase 'permsd':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_admin.php&header=false');\n\t\t}\n\n\t\tprocess_device_request_vars();\n\n\t\tdevice_filter($header_label);\n\n\t\tform_start('user_admin.php', 'policy');\n\n\t\thtml_start_box(__('Default Device Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><?php print __('Default Device Policy for this User');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_hosts',$policy_array,'','',$policy['policy_hosts'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (host.hostname LIKE '%\" . get_request_var('filter') . \"%' OR host.description LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (get_request_var('host_template_id') == '-1') {\n\t\t\t/* Show all items */\n\t\t} elseif (get_request_var('host_template_id') == '0') {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' host.host_template_id=0';\n\t\t} elseif (!isempty_request_var('host_template_id')) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' host.host_template_id=' . get_request_var('host_template_id');\n\t\t}\n\n\t\tif (get_request_var('associated') == 'false') {\n\t\t\t/* Show all items */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' user_auth_perms.user_id=' . get_request_var('id', 0);\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT\n\t\t\tCOUNT(host.id)\n\t\t\tFROM host\n\t\t\tLEFT JOIN user_auth_perms\n\t\t\tON host.id = user_auth_perms.item_id\n\t\t\tAND user_auth_perms.type = 3\n\t\t\tAND user_auth_perms.user_id = \" . get_request_var('id') . \"\n\t\t\t$sql_where\");\n\n\t\t$host_graphs       = array_rekey(\n\t\t\tdb_fetch_assoc('SELECT host_id, count(*) AS graphs\n\t\t\t\tFROM graph_local\n\t\t\t\tGROUP BY host_id'),\n\t\t\t'host_id', 'graphs');\n\n\t\t$host_data_sources = array_rekey(\n\t\t\tdb_fetch_assoc('SELECT host_id, count(*) AS data_sources\n\t\t\t\tFROM data_local\n\t\t\t\tGROUP BY host_id'),\n\t\t\t'host_id', 'data_sources');\n\n\t\t$sql_query = \"SELECT host.*, user_auth_perms.user_id\n\t\t\tFROM host\n\t\t\tLEFT JOIN user_auth_perms\n\t\t\tON host.id = user_auth_perms.item_id\n\t\t\tAND user_auth_perms.type = 3\n\t\t\tAND user_auth_perms.user_id = \" . get_request_var('id') . \"\n\t\t\t$sql_where\n\t\t\tORDER BY description\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$hosts = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permsd&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Devices'), 'page', 'main');\n\n\t\tform_start('user_admin.php?tab=permsd&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array(__('Description'), __('ID'), __('Effective Policy'), __('Graphs'), __('Data Sources'), __('Status'), __('Hostname'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($hosts)) {\n\t\t\tforeach ($hosts as $host) {\n\t\t\t\tform_alternate_row('line' . $host['id'], true);\n\t\t\t\tform_selectable_cell(filter_value($host['description'], get_request_var('filter')), $host['id']);\n\t\t\t\tform_selectable_cell($host['id'], $host['id']);\n\t\t\t\tif (empty($host['user_id']) || $host['user_id'] == NULL) {\n\t\t\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $host['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $host['id']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $host['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $host['id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tform_selectable_cell((isset($host_graphs[$host['id']]) ? $host_graphs[$host['id']] : 0), $host['id']);\n\t\t\t\tform_selectable_cell((isset($host_data_sources[$host['id']]) ? $host_data_sources[$host['id']] : 0), $host['id']);\n\t\t\t\tform_selectable_cell(get_colored_device_status(($host['disabled'] == 'on' ? true : false), $host['status']), $host['id']);\n\t\t\t\tform_selectable_cell(filter_value($host['hostname'], get_request_var('filter')), $host['id']);\n\t\t\t\tform_checkbox_cell($host['description'], $host['id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Devices Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($hosts)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_host', '1', '');\n\n\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\tcase 'permste':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_admin.php&header=false');\n\t\t}\n\n\t\tprocess_template_request_vars();\n\n\t\ttemplate_filter($header_label);\n\n\t\tform_start('user_admin.php', 'policy');\n\n\t\thtml_start_box(__('Default Graph Template Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><?php print __('Default Graph Template Policy for this User');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_graph_templates',$policy_array,'','',$policy['policy_graph_templates'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (gt.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (get_request_var('associated') == 'false') {\n\t\t\t/* Show all items */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_perms.type=4 AND user_auth_perms.user_id=' . get_request_var('id', 0) . ')';\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT COUNT(`rows`)\n\t\t\tFROM (SELECT\n\t\t\t\tCOUNT(DISTINCT gt.id) AS `rows`\n\t\t\t\tFROM graph_templates AS gt\n\t\t\t\tINNER JOIN graph_local AS gl\n\t\t\t\tON gt.id = gl.graph_template_id\n\t\t\t\tLEFT JOIN user_auth_perms\n\t\t\t\tON (gt.id = user_auth_perms.item_id AND user_auth_perms.type = 4 AND user_auth_perms.user_id = \" . get_request_var('id') . \")\n\t\t\t\t$sql_where\n\t\t\t\tGROUP BY gl.graph_template_id\n\t\t\t) AS rs\");\n\n\t\t$sql_query = \"SELECT gt.id, gt.name, count(*) AS totals, user_auth_perms.user_id\n\t\t\tFROM graph_templates AS gt\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN user_auth_perms\n\t\t\tON (gt.id = user_auth_perms.item_id AND user_auth_perms.type = 4 AND user_auth_perms.user_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\n\t\t\tGROUP BY gl.graph_template_id\n\t\t\tORDER BY name\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$graphs = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permste&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Graph Templates'), 'page', 'main');\n\n\t\tform_start('user_admin.php?tab=permste&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array(__('Template Name'), __('ID'), __('Effective Policy'), __('Total Graphs'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tforeach ($graphs as $g) {\n\t\t\t\tform_alternate_row('line' . $g['id'], true);\n\t\t\t\tform_selectable_cell(filter_value($g['name'], get_request_var('filter')), $g['id']);\n\t\t\t\tform_selectable_cell($g['id'], $g['id']);\n\t\t\t\tif (empty($g['user_id']) || $g['user_id'] == NULL) {\n\t\t\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['id']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tform_selectable_cell($g['totals'], $g['id']);\n\t\t\t\tform_checkbox_cell($g['name'], $g['id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Graph Templates Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_template', '1', '');\n\n\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\tcase 'permstr':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_admin.php&header=false');\n\t\t}\n\n\t\tprocess_tree_request_vars();\n\n\t\ttree_filter($header_label);\n\n\t\tform_start('user_admin.php', 'policy');\n\n\t\thtml_start_box(__('Default Tree Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><?php print __('Default Tree Policy for this User');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_trees',$policy_array,'','',$policy['policy_trees'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (gt.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (get_request_var('associated') == 'false') {\n\t\t\t/* showing all rows */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_perms.type=2 AND user_auth_perms.user_id=' . get_request_var('id', 0) . ')';\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT\n\t\t\tCOUNT(DISTINCT gt.id)\n\t\t\tFROM graph_tree AS gt\n\t\t\tLEFT JOIN user_auth_perms\n\t\t\tON gt.id = user_auth_perms.item_id\n\t\t\tAND user_auth_perms.type = 2\n\t\t\tAND user_auth_perms.user_id = \" . get_request_var('id') . \"\n\t\t\t$sql_where\");\n\n\t\t$sql_query = \"SELECT gt.id, gt.name, user_auth_perms.user_id\n\t\t\tFROM graph_tree AS gt\n\t\t\tLEFT JOIN user_auth_perms\n\t\t\tON gt.id = user_auth_perms.item_id\n\t\t\tAND user_auth_perms.type = 2\n\t\t\tAND user_auth_perms.user_id = \" . get_request_var('id') . \"\n\t\t\t$sql_where\n\t\t\tORDER BY name\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$trees = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_admin.php?action=user_edit&tab=permstr&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Trees'), 'page', 'main');\n\n\t\tform_start('user_admin.php?tab=permstr&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array(__('Tree Name'), __('ID'), __('Effective Policy'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($trees)) {\n\t\t\tforeach ($trees as $t) {\n\t\t\t\tform_alternate_row('line' . $t['id'], true);\n\t\t\t\tform_selectable_cell(filter_value($t['name'], get_request_var('filter')), $t['id']);\n\t\t\t\tform_selectable_cell($t['id'], $t['id']);\n\t\t\t\tif (empty($t['user_id']) || $t['user_id'] == NULL) {\n\t\t\t\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $t['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $t['id']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $t['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $t['id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tform_checkbox_cell($t['name'], $t['id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Trees Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($trees)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_tree', '1', '');\n\n\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\t}\n}\n\nfunction user_realms_edit($header_label) {\n\tglobal $user_auth_realms, $user_auth_roles;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$all_realms = $user_auth_realms;\n\n\tprint \"<div class='cactiTable' style='width:100%;text-align:left;'>\n\t\t<div>\n\t\t\t<div class='cactiTableTitle'><span style='padding:3px;'>\" . __('User Permissions') . \" $header_label</span></div>\n\t\t\t<div class='cactiTableButton'><span style='padding:3px;'><input class='checkbox' type='checkbox' id='all' name='all' title='\" . __esc('Select All') . \"' onClick='selectAllRealms(this.checked)'></a><label class='formCheckboxLabel' title='\" . __esc('Select All') . \"' for='all'></label></span></div>\n\t\t</div>\n\t</div>\\n\";\n\n\tform_start('user_admin.php', 'chk');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t/* do cacti realms first */\n\t$i = 1;\n\tforeach($user_auth_roles as $role_name => $perms) {\n\t\t$j = 1;\n\n\t\tprint \"<tr class='tableHeader'><th colspan='2'>\" . $role_name . \"</th></tr>\\n\";\n\t\tprint \"<tr class='odd'><td colspan='4' style='width:100%;'><table style='width:100%;'>\\n\";\n\t\tforeach($perms as $realm) {\n\t\t\tif ($j == 1) {\n\t\t\t\tprint \"<tr>\\n\";\n\t\t\t}\n\n\t\t\tprint \"<td class='realms'>\\n\";\n\t\t\tif (isset($user_auth_realms[$realm])) {\n\t\t\t\t$set = db_fetch_cell_prepared('SELECT realm_id\n\t\t\t\t\tFROM user_auth_realm\n\t\t\t\t\tWHERE user_id = ?\n\t\t\t\t\tAND realm_id = ?',\n\t\t\t\t\tarray(get_request_var('id', 0), $realm));\n\n\t\t\t\tif (!empty($set)) {\n\t\t\t\t\t$old_value = 'on';\n\t\t\t\t} else {\n\t\t\t\t\t$old_value = '';\n\t\t\t\t}\n\n\t\t\t\tunset($all_realms[$realm]);\n\n\t\t\t\tform_checkbox('section' . $realm, $old_value, $user_auth_realms[$realm], '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\t\t\t}\n\t\t\tprint \"</td>\\n\";\n\n\t\t\tif ($j == 5) {\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t\t$j = 1;\n\t\t\t} else {\n\t\t\t\t$j++;\n\t\t\t}\n\t\t}\n\n\t\tif ($j > 1) {\n\t\t\tprint \"<td class='realms' colspan='\" . (5-$j) . \"'></td>\\n\";\n\t\t\tprint \"</tr>\\n\";\n\t\t}\n\n\t\tprint \"</table></td></tr>\\n\";\n\t}\n\n\t/* external links */\n\t$links  = db_fetch_assoc('SELECT * FROM external_links ORDER BY sortorder');\n\n\t$style_translate = array(\n\t\t'CONSOLE'    => __('Console'),\n\t\t'TAB'        => __('Top Tab'),\n\t\t'FRONT'      => __('Bottom Console'),\n\t\t'FRONTTOP'   => __('Top Console')\n\t);\n\n\tprint \"<tr class='tableHeader'><th colspan='2'>\" . __('External Link Permissions') . \"</th></tr>\\n\";\n\tprint \"<tr class='odd'><td colspan='4'><table style='width:100%;'><tr><td class='realms'>\\n\";\n\tif (cacti_sizeof($links)) {\n\t\t$j = 1;\n\n\t\tforeach($links as $r) {\n\t\t\tif ($j == 1) {\n\t\t\t\tprint \"<tr>\\n\";\n\t\t\t}\n\n\t\t\t$realm = $r['id'] + 10000;\n\n\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_realm WHERE user_id = ? AND realm_id = ?', array(get_request_var('id', 0), $realm))) > 0) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\tunset($all_realms[$realm]);\n\n\t\t\tprint \"<td class='realms'>\\n\";\n\n\t\t\tswitch($r['style']) {\n\t\t\tcase 'CONSOLE':\n\t\t\t\t$description = $style_translate[$r['style']] . ': ' . ($r['extendedstyle'] == '' ? 'External Links' : $r['extendedstyle']) . '/' . $r['title'];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$description = $style_translate[$r['style']] . ': ' . ucfirst($r['title']);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tform_checkbox('section' . $realm, $old_value, $description, '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\n\t\t\tprint \"</td>\\n\";\n\n\t\t\tif ($j == 5) {\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t\t$j = 1;\n\t\t\t} else {\n\t\t\t\t$j++;\n\t\t\t}\n\t\t}\n\n\t\tif ($j > 1) {\n\t\t\tprint \"<td class='realms' colspan='\" . (5-$j) . \"'></td>\\n\";\n\t\t\tprint \"</tr>\\n\";\n\t\t}\n\t}\n\tprint \"</tr></table></td></tr>\\n\";\n\n\t/* do plugin realms */\n\t$realms = db_fetch_assoc('SELECT pc.name, pr.id AS realm_id, pr.display\n\t\tFROM plugin_config AS pc\n\t\tINNER JOIN plugin_realms AS pr\n\t\tON pc.directory = pr.plugin\n\t\tORDER BY pc.name, pr.display');\n\n\tprint \"<tr class='tableHeader'><th colspan='2'>\" . __('Plugin Permissions') . \"</th></tr>\\n\";\n\tprint \"<tr class='odd'><td colspan='4'><table style='width:100%;'><tr><td class='realms'>\\n\";\n\tif (cacti_sizeof($realms)) {\n\t\t$last_plugin = 'none';\n\t\t$i = 1;\n\t\t$j = 1;\n\n\t\tforeach($realms as $r) {\n\t\t\t$break = false;\n\n\t\t\tif ($last_plugin != $r['name'] && $last_plugin != 'none') {\n\t\t\t\t$break = true;\n\n\t\t\t\tif ($j == 5) {\n\t\t\t\t\tprint \"</tr><tr>\\n\";\n\t\t\t\t\t$break = true;;\n\t\t\t\t\t$j = 1;\n\t\t\t\t} else {\n\t\t\t\t\t$j++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($break) {\n\t\t\t\tprint \"</td><td class='realms'>\\n\";\n\t\t\t}\n\n\t\t\tif ($break || $i == 1) {\n\t\t\t\tprint \"<i>\" . html_escape($r['name']) . \"</i><br>\\n\";\n\t\t\t}\n\n\t\t\t$realm = $r['realm_id'] + 100;\n\n\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_realm WHERE user_id = ? AND realm_id = ?', array(get_request_var('id', 0), $realm))) > 0) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\tunset($all_realms[$realm]);\n\n\t\t\t$pos = (strpos($user_auth_realms[$realm], '->') !== false ? strpos($user_auth_realms[$realm], '->')+2:0);\n\n\t\t\tform_checkbox('section' . $realm, $old_value, substr($user_auth_realms[$realm], $pos), '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\n\t\t\t$last_plugin = $r['name'];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\t/* get the old PIA 1.x realms */\n\tif (cacti_sizeof($all_realms)) {\n\t\tif ($break) {\n\t\t\tprint \"</td><td class='realms'>\\n\";\n\t\t}\n\n\t\tprint '<strong>' . __('Legacy 1.x Plugins') . '</strong><br>';\n\t\tforeach($all_realms as $realm => $name) {\n\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_realm WHERE user_id = ? AND realm_id = ?', array(get_request_var('id', 0), $realm))) > 0) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\t$pos = (strpos($user_auth_realms[$realm], '->') !== false ? strpos($user_auth_realms[$realm], '->')+2:0);\n\n\t\t\tform_checkbox('section' . $realm, $old_value, substr($user_auth_realms[$realm], $pos), '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\t\t}\n\t}\n\n\tprint \"</td></tr></table></td></tr>\\n\";\n\t?>\n\t<script type='text/javascript'>\n\tfunction selectAllRealms(checked) {\n\t\tif (checked) {\n\t\t\t$('input[id^=\\\"section\\\"]').prop('checked', true);\n\t\t} else {\n\t\t\t$('input[id^=\\\"section\\\"]').prop('checked', false);\n\t\t}\n\t}\n\n\t$(function() {\n\t\t$('input[type=\"checkbox\"]').each(function() {\n\t\t\t$(this).addClass($(this).attr('id'));\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n\n\tform_hidden_box('id', get_request_var('id'), '');\n\tform_hidden_box('tab', 'realms', '');\n\tform_hidden_box('save_component_realm_perms', '1', '');\n\n\tform_save_button('user_admin.php', 'return');\n}\n\nfunction settings_edit($header_label) {\n\tglobal $settings_user, $tabs_graphs, $graph_views;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tform_start('user_admin.php');\n\n\thtml_start_box(__('User Settings %s', $header_label), '100%', true, '3', 'center', '');\n\n\tforeach ($settings_user as $tab_short_name => $tab_fields) {\n\t\t$collapsible = true;\n\n        print \"<div class='spacer tableHeader\" . ($collapsible ? ' collapsible':'') . \"' id='row_$tab_short_name'><div style='cursor:pointer;' class='tableSubHeaderColumn'>\" . $tabs_graphs[$tab_short_name] . ($collapsible ? \"<div style='float:right;padding-right:4px;'><i class='fa fa-angle-double-up'></i></div>\":\"\") . \"</div></div>\\n\";\n\n\t\t$form_array = array();\n\n\t\tforeach ($tab_fields as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $tab_fields[$field_name]);\n\n\t\t\tif ((isset($field_array['items'])) && (is_array($field_array['items']))) {\n\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\tif (graph_config_value_exists($sub_field_name, get_request_var('id'))) {\n\t\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['form_id'] = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['value'] =  db_fetch_cell_prepared('SELECT value FROM settings_user WHERE name = ? AND user_id = ?', array($sub_field_name, get_request_var('id')));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (graph_config_value_exists($field_name, get_request_var('id'))) {\n\t\t\t\t\t$form_array[$field_name]['form_id'] = 1;\n\t\t\t\t}\n\n\t\t\t\t$form_array[$field_name]['value'] = db_fetch_cell_prepared('SELECT value FROM settings_user WHERE name = ? and user_id = ?', array($field_name, get_request_var('id')));\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => $form_array\n\t\t\t)\n\t\t);\n\t}\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('id', get_request_var('id'), '');\n\tform_hidden_box('tab', 'settings', '');\n\tform_hidden_box('save_component_graph_settings','1','');\n\n\tform_save_button('user_admin.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar themeFonts=<?php print read_config_option('font_method');?>;\n\n\tfunction graphSettings() {\n\t\tif (themeFonts == 1) {\n\t\t\t\t$('#row_fonts').hide();\n\t\t\t\t$('#row_custom_fonts').hide();\n\t\t\t\t$('#row_title_size').hide();\n\t\t\t\t$('#row_title_font').hide();\n\t\t\t\t$('#row_legend_size').hide();\n\t\t\t\t$('#row_legend_font').hide();\n\t\t\t\t$('#row_axis_size').hide();\n\t\t\t\t$('#row_axis_font').hide();\n\t\t\t\t$('#row_unit_size').hide();\n\t\t\t\t$('#row_unit_font').hide();\n\t\t} else {\n\t\t\tvar custom_fonts = $('#custom_fonts').is(':checked');\n\n\t\t\tswitch(custom_fonts) {\n\t\t\tcase true:\n\t\t\t\t$('#row_fonts').show();\n\t\t\t\t$('#row_title_size').show();\n\t\t\t\t$('#row_title_font').show();\n\t\t\t\t$('#row_legend_size').show();\n\t\t\t\t$('#row_legend_font').show();\n\t\t\t\t$('#row_axis_size').show();\n\t\t\t\t$('#row_axis_font').show();\n\t\t\t\t$('#row_unit_size').show();\n\t\t\t\t$('#row_unit_font').show();\n\t\t\t\tbreak;\n\t\t\tcase false:\n\t\t\t\t$('#row_fonts').show();\n\t\t\t\t$('#row_title_size').hide();\n\t\t\t\t$('#row_title_font').hide();\n\t\t\t\t$('#row_legend_size').hide();\n\t\t\t\t$('#row_legend_font').hide();\n\t\t\t\t$('#row_axis_size').hide();\n\t\t\t\t$('#row_axis_font').hide();\n\t\t\t\t$('#row_unit_size').hide();\n\t\t\t\t$('#row_unit_font').hide();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t$(function() {\n\t\tgraphSettings();\n\t});\n\n\t</script>\n\t<?php\n}\n\n/* --------------------------\n    User Administration\n   -------------------------- */\n\nfunction user_edit() {\n\tglobal $config, $fields_user_user_edit_host;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('tab', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-z_A-Z]+)$/')));\n\t/* ==================================================== */\n\n\t/* present a tabbed interface */\n\t$tabs = array(\n\t\t'general'  => __('General'),\n\t\t'realms'   => __('Permissions'),\n\t\t'permsgr'  => __('Group Membership'),\n\t\t'permsg'   => __('Graph Perms'),\n\t\t'permsd'   => __('Device Perms'),\n\t\t'permste'  => __('Template Perms'),\n\t\t'permstr'  => __('Tree Perms'),\n\t\t'settings' => __('User Settings')\n\t);\n\n\t/* set the default tab */\n\tload_current_session_value('tab', 'sess_user_admin_tab', 'general');\n\t$current_tab = get_nfilter_request_var('tab');\n\n\tif (!isempty_request_var('id')) {\n\t\t$user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('[edit: %s]', html_escape($user['username']));\n\t} else {\n\t\t$header_label = __('[new]');\n\t}\n\n\tif (cacti_sizeof($tabs) && !isempty_request_var('id')) {\n\t\t$i = 0;\n\n\t\t/* draw the tabs */\n\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\\n\";\n\n\t\tforeach (array_keys($tabs) as $tab_short_name) {\n\t\t\tprint \"<li class='subTab'><a class='tab\" . (($tab_short_name == $current_tab) ? \" selected'\" : \"'\") .\n\t\t\t\t\" href='\" . html_escape($config['url_path'] .\n\t\t\t\t'user_admin.php?action=user_edit&id=' . get_request_var('id') .\n\t\t\t\t'&tab=' . $tab_short_name) .\n\t\t\t\t\"'>\" . $tabs[$tab_short_name] . \"</a></li>\\n\";\n\n\t\t\t$i++;\n\t\t}\n\n\t\tapi_plugin_hook('user_admin_tab');\n\n\t\tprint \"</ul></nav></div>\\n\";\n\t}\n\n\tswitch($current_tab) {\n\tcase 'general':\n\t\tapi_plugin_hook_function('user_admin_edit', (isset($user) ? get_request_var('id') : 0));\n\n\t\tform_start('user_admin.php');\n\n\t\thtml_start_box(__('User Management %s', $header_label), '100%', '', '3', 'center', '');\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => inject_form_variables($fields_user_user_edit_host, (isset($user) ? $user : array()))\n\t\t\t)\n\t\t);\n\n\t\thtml_end_box();\n\n\t\tform_save_button('user_admin.php', 'return');\n\n\t\t?>\n\t\t<script type='text/javascript'>\n\n\t\tvar minChars=<?php print read_config_option('secpass_minlen');?>;\n\n\t\tfunction changeRealm() {\n\t\t\tif ($('#realm').val() != 0) {\n\t\t\t\t$('#password_change').prop('disabled', true);\n\t\t\t} else {\n\t\t\t\t$('#password_change').prop('disabled', false);\n\t\t\t}\n\t\t}\n\n\t\tfunction checkPassword() {\n\t\t\tif ($('#password').val().length == 0) {\n\t\t\t\t$('#pass').remove();\n\t\t\t\t$('#passconfirm').remove();\n\t\t\t}else if ($('#password').val().length < minChars) {\n\t\t\t\t$('#pass').remove();\n\t\t\t\t$('#password').after('<span id=\"pass\"><i class=\"badpassword fa fa-times\"></i><span style=\"padding-left:4px;\"><?php print __('Password Too Short')?></span></span>');\n\t\t\t} else {\n\t\t\t\t$.post('user_admin.php?action=checkpass', { password: $('#password').val(), password_confim: $('#password_confirm').val(), __csrf_magic: csrfMagicToken } ).done(function(data) {\n\t\t\t\t\tif (data == 'ok') {\n\t\t\t\t\t\t$('#pass').remove();\n\t\t\t\t\t\t$('#password').after('<span id=\"pass\"><i class=\"goodpassword fa fa-check\"></i><span style=\"padding-left:4px;\"><?php print __('Password Validation Passes');?></span></span>');\n\t\t\t\t\t\tcheckPasswordConfirm();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#pass').remove();\n\t\t\t\t\t\t$('#password').after('<span id=\"pass\"><i class=\"badpassword fa fa-times\"></i><span style=\"padding-left:4px;\">'+data+'</span></span>');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction checkPasswordConfirm() {\n\t\t\tif ($('#password_confirm').val().length > 0) {\n\t\t\t\tif ($('#password').val() != $('#password_confirm').val()) {\n\t\t\t\t\t$('#passconfirm').remove();\n\t\t\t\t\t$('#password_confirm').after('<span id=\"passconfirm\"><i class=\"badpassword fa fa-times\"></i><span style=\"padding-left:4px;\"><?php print __('Passwords do Not Match');?></span></span>');\n\t\t\t\t} else {\n\t\t\t\t\t$('#passconfirm').remove();\n\t\t\t\t\t$('#password_confirm').after('<span id=\"passconfirm\"><i class=\"goodpassword fa fa-check\"></i><span style=\"padding-left:4px;\"><?php print __('Passwords Match');?></span></span>');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$('#passconfirm').remove();\n\t\t\t}\n\t\t}\n\n\t\tvar password_change = $('#password_change').is(':checked');\n\n\t\t$(function() {\n\t\t\tchangeRealm();\n\n\t\t\t/* clear passwords */\n\t\t\t$('#password').val('');\n\t\t\t$('#password_confirm').val('');\n\n\t\t\t$('#password').keyup(function() {\n\t\t\t\tcheckPassword();\n\t\t\t});\n\n\t\t\t$('#password_confirm').keyup(function() {\n\t\t\t\tcheckPasswordConfirm();\n\t\t\t});\n\n\t\t\t$('#realm').change(function() {\n\t\t\t\tchangeRealm();\n\t\t\t});\n\n\t\t\t$('#password_change').click(function() {\n\t\t\t\tpassword_change = $('#password_change').is(':checked');\n\n\t\t\t\tif (!password_change && $('#must_change_password').is(':checked')) {\n\t\t\t\t\tbutton = ($('#must_change_password').button('instance') !== undefined);\n\t\t\t\t\tif (button) {\n\t\t\t\t\t\t$('#must_change_password').prop('checked', false).button('refresh');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#must_change_password').prop('checked', false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('#must_change_password').click(function() {\n\t\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t\tbutton = ($('#must_change_password').button('instance') !== undefined);\n\t\t\t\t\tif (button) {\n\t\t\t\t\t\t$('#password_change').prop('checked', true);\n\t\t\t\t\t\t$('#password_change').button('refresh');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#password_change').prop('checked', true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbutton = ($('#must_change_password').button('instance') !== undefined);\n\t\t\t\t\tif (button) {\n\t\t\t\t\t\t$('#password_change').prop('checked', password_change).button('refresh');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#password_change').prop('checked', password_change);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t</script>\n\t\t<?php\n\n\t\tbreak;\n\tcase 'settings':\n\t\tsettings_edit($header_label);\n\n\t\tbreak;\n\tcase 'realms':\n\t\tuser_realms_edit($header_label);\n\n\t\tbreak;\n\tcase 'permsg':\n\tcase 'permsd':\n\tcase 'permsgr':\n\tcase 'permste':\n\tcase 'permstr':\n\t\tgraph_perms_edit($current_tab, $header_label);\n\n\t\tbreak;\n\tdefault:\n\t\tif (api_plugin_hook_function('user_admin_run_action', get_request_var('tab'))) {\n\t\t\tuser_realms_edit();\n\t\t}\n\t\tbreak;\n\t}\n}\n\nfunction user() {\n\tglobal $config, $auth_realms, $user_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'username',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_usera');\n\t/* ================= input validation ================= */\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_admin.php?rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_admin.php?clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_user_admin').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('User Management'), '100%', '', '3', 'center', 'user_admin.php?tab=general&action=user_edit');\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='form_user_admin' action='user_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Users');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (user_auth.username LIKE '%\" . get_request_var('filter') . \"%' OR user_auth.full_name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(user_auth.id)\n\t\tFROM user_auth\n\t\t$sql_where\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$user_list = db_fetch_assoc(\"SELECT id, user_auth.username, full_name,\n\t\trealm, enabled, policy_graphs, policy_hosts, policy_graph_templates,\n\t\ttime, max(time) as dtime\n\t\tFROM user_auth\n\t\tLEFT JOIN user_log ON (user_auth.id = user_log.user_id)\n\t\t$sql_where\n\t\tGROUP BY id\n\t\t$sql_order\n\t\t$sql_limit\");\n\n\t$nav = html_nav_bar('user_admin.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 9, __('Users'), 'page', 'main');\n\n\tform_start('user_admin.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'username'               => array(__('User Name'), 'ASC'),\n\t\t'full_name'              => array(__('Full Name'), 'ASC'),\n\t\t'enabled'                => array(__('Enabled'), 'ASC'),\n\t\t'realm'                  => array(__('Realm'), 'ASC'),\n\t\t'policy_graphs'          => array(__('Graph Policy'), 'ASC'),\n\t\t'policy_hosts'           => array(__('Device Policy'), 'ASC'),\n\t\t'policy_graph_templates' => array(__('Template Policy'), 'ASC'),\n\t\t'dtime'                  => array(__('Last Login'), 'DESC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($user_list)) {\n\t\tforeach ($user_list as $user) {\n\t\t\tif (empty($user['dtime']) || ($user['dtime'] == '12/31/1969')) {\n\t\t\t\t$last_login = __('N/A');\n\t\t\t} else {\n\t\t\t\t$last_login = strftime('%A, %B %d, %Y %H:%M:%S ', strtotime($user['dtime']));;\n\t\t\t}\n\t\t\tif ($user['enabled'] == 'on') {\n\t\t\t\t$enabled = __('Yes');\n\t\t\t} else {\n\t\t\t\t$enabled = __('No');\n\t\t\t}\n\n\t\t\tif (isset($auth_realms[$user['realm']])) {\n\t\t\t\t$realm = $auth_realms[$user['realm']];\n\t\t\t} else {\n\t\t\t\t$realm = __('Unavailable');\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $user['id'], true);\n\t\t\tform_selectable_cell(filter_value($user['username'], get_request_var('filter'), $config['url_path'] . 'user_admin.php?action=user_edit&tab=general&id=' . $user['id']), $user['id']);\n\t\t\tform_selectable_cell(filter_value($user['full_name'], get_request_var('filter')), $user['id']);\n\t\t\tform_selectable_cell($enabled, $user['id']);\n\t\t\tform_selectable_cell($realm, $user['id']);\n\t\t\tform_selectable_cell(($user['policy_graphs'] == 1 ? __('ALLOW'):__('DENY')), $user['id']);\n\t\t\tform_selectable_cell(($user['policy_hosts'] == 1 ? __('ALLOW'):__('DENY')), $user['id']);\n\t\t\tform_selectable_cell(($user['policy_graph_templates'] == 1 ? __('ALLOW'):__('DENY')), $user['id']);\n\t\t\tform_selectable_cell($last_login, $user['id']);\n\t\t\tform_checkbox_cell($user['username'], $user['id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"' . (cacti_sizeof($display_text)+1) . '\"><em>' . __('No Users Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($user_list)) {\n\t\tprint $nav;\n\t}\n\n\tdraw_actions_dropdown($user_actions);\n\n\tform_end();\n}\n\nfunction process_graph_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'graph_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1',\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_uag');\n\t/* ================= input validation ================= */\n}\n\nfunction process_group_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_uagr');\n\t/* ================= input validation ================= */\n}\n\nfunction process_device_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'host_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1',\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_uad');\n\t/* ================= input validation ================= */\n}\n\nfunction process_template_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'graph_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1',\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_uate');\n\t/* ================= input validation ================= */\n}\n\nfunction process_tree_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'graph_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1',\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_uatr');\n\t/* ================= input validation ================= */\n}\n\nfunction graph_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_admin.php?action=user_edit&tab=permsg&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&graph_template_id=' + $('#graph_template_id').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter(objForm) {\n\t\tstrURL = 'user_admin.php?action=user_edit&tab=permsg&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Graph Permissions %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='graph_template_id' name='graph_template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('graph_template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('graph_template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$graph_templates = db_fetch_assoc('SELECT DISTINCT gt.id, gt.name\n\t\t\t\t\t\t\t\tFROM graph_templates AS gt\n\t\t\t\t\t\t\t\tINNER JOIN graph_local AS gl\n\t\t\t\t\t\t\t\tON gl.graph_template_id = gt.id\n\t\t\t\t\t\t\t\tORDER BY name');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($graph_templates)) {\n\t\t\t\t\t\t\t\tforeach ($graph_templates as $gt) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $gt['id'] . \"'\"; if (get_request_var('graph_template_id') == $gt['id']) { print ' selected'; } print '>' . html_escape($gt['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Graphs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show All');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='go' value='<?php print __esc('Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='user_edit'>\n\t\t\t<input type='hidden' name='tab' value='permsg'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction group_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_admin.php?action=user_edit&tab=permsgr&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_admin.php?action=user_edit&tab=permsgr&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Group Membership %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Groups');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show All');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='user_edit'>\n\t\t\t<input type='hidden' name='tab' value='permsgr'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction device_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_admin.php?action=user_edit&tab=permsd&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&host_template_id=' + $('#host_template_id').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter(objForm) {\n\t\tstrURL = 'user_admin.php?action=user_edit&tab=permsd&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Devices Permission %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='host_template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('host_template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('host_template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$host_templates = db_fetch_assoc('SELECT id, name FROM host_template ORDER BY name');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($host_templates)) {\n\t\t\t\t\t\t\t\tforeach ($host_templates as $host_template) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $host_template['id'] . \"'\"; if (get_request_var('host_template_id') == $host_template['id']) { print ' selected'; } print '>' . html_escape($host_template['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Devices');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='user_edit'>\n\t\t\t<input type='hidden' name='tab' value='permsd'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction template_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_admin.php?action=user_edit&tab=permste&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_admin.php?action=user_edit&tab=permste&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Template Permission %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Templates');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='user_edit'>\n\t\t\t<input type='hidden' name='tab' value='permste'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction tree_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_admin.php?action=user_edit&tab=permstr&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_admin.php?action=user_edit&tab=permstr&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Tree Permission %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Trees');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='user_edit'>\n\t\t\t<input type='hidden' name='tab' value='permstr'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction member_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter(objForm) {\n\t\tstrURL  = 'user_admin.php?action=user_edit&tab=members&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter(objForm) {\n\t\tstrURL = 'user_admin.php?action=user_edit&tab=members&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Tree Permission %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Trees');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc('Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='user_edit'>\n\t\t\t<input type='hidden' name='tab' value='members'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n$actions = array(\n\t1 => __('Delete'),\n\t2 => __('Disable'),\n\t3 => __('Enable'),\n\t4 => __('Default')\n);\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tdomain_edit();\n\n\t\tbottom_footer();\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tdomains();\n\n\t\tbottom_footer();\n\t\tbreak;\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tglobal $registered_cacti_names;\n\n\tif (isset_request_var('save_component_domain_ldap')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('domain_id');\n\t\tget_filter_request_var('type');\n\t\tget_filter_request_var('user_id');\n\t\t/* ==================================================== */\n\n\t\t$save['domain_id']   = get_nfilter_request_var('domain_id');\n\t\t$save['type']        = get_nfilter_request_var('type');\n\t\t$save['user_id']     = get_nfilter_request_var('user_id');\n\t\t$save['domain_name'] = form_input_validate(get_nfilter_request_var('domain_name'), 'domain_name', '', false, 3);\n\t\t$save['enabled']     = (isset_request_var('enabled') ? form_input_validate(get_nfilter_request_var('enabled'), 'enabled', '', true,  3):'');\n\n\t\tif (!is_error_message()) {\n\t\t\t$domain_id = sql_save($save, 'user_domains', 'domain_id');\n\n\t\t\tif ($domain_id) {\n\t\t\t\t// Disable template user from logging in\n\t\t\t\tdb_execute_prepared('UPDATE user_auth\n\t\t\t\t\tSET enabled=\"\"\n\t\t\t\t\tWHERE id = ?', array($save['user_id']));\n\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\n\t\t\tif (!is_error_message()) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tget_filter_request_var('domain_id');\n\t\t\t\tget_filter_request_var('port');\n\t\t\t\tget_filter_request_var('port_ssl');\n\t\t\t\tget_filter_request_var('proto_version');\n\t\t\t\tget_filter_request_var('encryption');\n\t\t\t\tget_filter_request_var('referrals');\n\t\t\t\tget_filter_request_var('mode');\n\t\t\t\tget_filter_request_var('group_member_type');\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\t$save                      = array();\n\t\t\t\t$save['domain_id']         = $domain_id;\n\t\t\t\t$save['server']            = form_input_validate(get_nfilter_request_var('server'), 'server', '', false, 3);\n\t\t\t\t$save['port']              = get_nfilter_request_var('port');\n\t\t\t\t$save['port_ssl']          = get_nfilter_request_var('port_ssl');\n\t\t\t\t$save['proto_version']     = get_nfilter_request_var('proto_version');\n\t\t\t\t$save['encryption']        = get_nfilter_request_var('encryption');\n\t\t\t\t$save['referrals']         = get_nfilter_request_var('referrals');\n\t\t\t\t$save['mode']              = get_nfilter_request_var('mode');\n\t\t\t\t$save['group_member_type'] = get_nfilter_request_var('group_member_type');\n\t\t\t\t$save['dn']                = form_input_validate(get_nfilter_request_var('dn'),                'dn',              '', true, 3);\n\t\t\t\t$save['group_require']     = isset_request_var('group_require') ? 'on':'';\n\t\t\t\t$save['group_dn']          = form_input_validate(get_nfilter_request_var('group_dn'),          'group_dn',        '', true, 3);\n\t\t\t\t$save['group_attrib']      = form_input_validate(get_nfilter_request_var('group_attrib'),      'group_attrib',    '', true, 3);\n\t\t\t\t$save['search_base']       = form_input_validate(get_nfilter_request_var('search_base'),       'search_base',     '', true, 3);\n\t\t\t\t$save['search_filter']     = form_input_validate(get_nfilter_request_var('search_filter'),     'search_filter',   '', true, 3);\n\t\t\t\t$save['specific_dn']         = form_input_validate(get_nfilter_request_var('specific_dn'),         'specific_dn',       '', true, 3);\n\t\t\t\t$save['specific_password']   = form_input_validate(get_nfilter_request_var('specific_password'),   'specific_password', '', true, 3);\n                                $save['cn_full_name']        = get_nfilter_request_var('cn_full_name');\n                                $save['cn_email']            = get_nfilter_request_var('cn_email');\n\n\t\t\t\tif (!is_error_message()) {\n\t\t\t\t\t$insert_id = sql_save($save, 'user_domains_ldap', 'domain_id', false);\n\n\t\t\t\t\tif ($insert_id) {\n\t\t\t\t\t\traise_message(1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\traise_message(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} elseif (isset_request_var('save_component_domain')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('domain_id');\n\t\tget_filter_request_var('type');\n\t\tget_filter_request_var('user_id');\n\t\t/* ==================================================== */\n\n\t\t$save['domain_id']   = get_nfilter_request_var('domain_id');\n\t\t$save['domain_name'] = form_input_validate(get_nfilter_request_var('domain_name'), 'domain_name', '', false, 3);\n\t\t$save['type']        = get_nfilter_request_var('type');\n\t\t$save['user_id']     = get_nfilter_request_var('user_id');\n\t\t$save['enabled']     = (isset_request_var('enabled') ? form_input_validate(get_nfilter_request_var('enabled'), 'enabled', '', true,  3):'');\n\n\t\tif (!is_error_message()) {\n\t\t\t$domain_id = sql_save($save, 'user_domains', 'domain_id');\n\n\t\t\tif ($domain_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\t}\n\n\theader('Location: user_domains.php?header=false&action=edit&domain_id=' . (empty($domain_id) ? get_nfilter_request_var('domain_id') : $domain_id));\n}\n\nfunction form_actions() {\n\tglobal $actions;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdomain_remove($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { // disable\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdomain_disable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { // enable\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tdomain_enable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { // default\n\t\t\t\tif (cacti_sizeof($selected_items) > 1) {\n\t\t\t\t\t/* error message */\n\t\t\t\t} else {\n\t\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t\tdomain_default($selected_items[$i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_domains.php?header=false');\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$d_list = '';\n\t$d_array = array();\n\n\t/* loop through each of the data queries and process them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$d_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT domain_name FROM user_domains WHERE domain_id = ?', array($matches[1]))) . '</li>';\n\t\t\t$d_array[] = $matches[1];\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('user_domains.php');\n\n\thtml_start_box($actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($d_array) && cacti_sizeof($d_array)) {\n\t\tif (get_nfilter_request_var('drp_action') == '1') { // delete\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following User Domain.', 'Click \\'Continue\\' to delete following User Domains.', cacti_sizeof($d_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$d_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete User Domain', 'Delete User Domains', cacti_sizeof($d_array)) . \"'>\";\n\t\t}else if (get_nfilter_request_var('drp_action') == '2') { // disable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to disable the following User Domain.', 'Click \\'Continue\\' to disable following User Domains.', cacti_sizeof($d_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$d_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Disable User Domain', 'Disable User Domains', cacti_sizeof($d_array)) . \"'>\";\n\t\t}else if (get_nfilter_request_var('drp_action') == '3') { // enable\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to enable the following User Domain.', 'Click \\'Continue\\' to enable following User Domains.', cacti_sizeof($d_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$d_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Enabled User Domain', 'Enable User Domains', cacti_sizeof($d_array)) . \"'>\";\n\t\t}else if (get_nfilter_request_var('drp_action') == '4') { // default\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Click \\'Continue\\' to make the following the following User Domain the default one.') . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$d_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc('Make Selected Domain Default') . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: user_domains.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\n\t\t\t<input type='hidden' name='selected_items' value='\" . (isset($d_array) ? serialize($d_array) : '') . \"'>\n\t\t\t<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* -----------------------\n    Domain Functions\n   ----------------------- */\n\nfunction domain_remove($domain_id) {\n\tdb_execute_prepared('DELETE FROM user_domains WHERE domain_id = ?', array($domain_id));\n\tdb_execute_prepared('DELETE FROM user_domains_ldap WHERE domain_id = ?', array($domain_id));\n}\n\nfunction domain_disable($domain_id) {\n\tdb_execute_prepared('UPDATE user_domains SET enabled = \"\" WHERE domain_id = ?', array($domain_id));\n}\n\nfunction domain_enable($domain_id) {\n\tdb_execute_prepared('UPDATE user_domains SET enabled = \"on\" WHERE domain_id = ?', array($domain_id));\n}\n\nfunction domain_default($domain_id) {\n\tdb_execute('UPDATE user_domains SET defdomain = 0');\n\tdb_execute_prepared('UPDATE user_domains SET defdomain = 1 WHERE domain_id = ?', array($domain_id));\n}\n\nfunction domain_edit() {\n\tglobal $ldap_versions, $ldap_encryption, $ldap_modes, $domain_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('domain_id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('domain_id')) {\n\t\t$domain = db_fetch_row_prepared('SELECT * FROM user_domains WHERE domain_id = ?', array(get_request_var('domain_id')));\n\t\t$header_label = __('User Domain [edit: %s]', html_escape($domain['domain_name']));\n\t} else {\n\t\t$header_label = __('User Domain [new]');\n\t}\n\n\t/* file: data_input.php, action: edit */\n\t$fields_domain_edit = array(\n\t\t'domain_name' => array(\n\t\t\t'method' => 'textbox',\n\t\t\t'friendly_name' => __('Name'),\n\t\t\t'description' => __('Enter a meaningful name for this domain. This will be the name that appears in the Login Realm during login.'),\n\t\t\t'value' => '|arg1:domain_name|',\n\t\t\t'max_length' => '255',\n\t\t\t),\n\t\t'type' => array(\n\t\t\t'method' => 'drop_array',\n\t\t\t'friendly_name' => __('Domains Type'),\n\t\t\t'description' => __('Choose what type of domain this is.'),\n\t\t\t'value' => '|arg1:type|',\n\t\t\t'array' => $domain_types,\n\t\t\t'default' => '2'\n\t\t\t),\n\t\t'user_id' => array(\n\t\t\t'friendly_name' => __('User Template'),\n\t\t\t'description' => __('The name of the user that Cacti will use as a template for new user accounts.'),\n\t\t\t'method' => 'drop_sql',\n\t\t\t'value' => '|arg1:user_id|',\n\t\t\t'none_value' => __('No User'),\n\t\t\t'sql' => 'SELECT id AS id, username AS name FROM user_auth WHERE realm=0 ORDER BY username',\n\t\t\t'default' => '0'\n\t\t\t),\n\t\t'enabled' => array(\n\t\t\t'method' => 'checkbox',\n\t\t\t'friendly_name' => __('Enabled'),\n\t\t\t'description' => __('If this checkbox is checked, users will be able to login using this domain.'),\n\t\t\t'value' => '|arg1:enabled|',\n\t\t\t'default' => '',\n\t\t\t),\n\t\t'domain_id' => array(\n\t\t\t'method' => 'hidden_zero',\n\t\t\t'value' => '|arg1:domain_id|'\n\t\t\t),\n\t\t'save_component_domain' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => '1'\n\t\t\t)\n\t\t);\n\n\t$fields_domain_ldap_edit = array(\n\t\t'server' => array(\n\t\t\t'friendly_name' => __('Server'),\n\t\t\t'description' => __('The dns hostname or ip address of the server.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:server|',\n\t\t\t'default' => read_config_option('ldap_server'),\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'port' => array(\n\t\t\t'friendly_name' => __('Port Standard'),\n\t\t\t'description' => __('TCP/UDP port for Non SSL communications.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'max_length' => '5',\n\t\t\t'value' => '|arg1:port|',\n\t\t\t'default' => read_config_option('ldap_port'),\n\t\t\t'size' => '5'\n\t\t\t),\n\t\t'port_ssl' => array(\n\t\t\t'friendly_name' => __('Port SSL'),\n\t\t\t'description' => __('TCP/UDP port for SSL communications.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'max_length' => '5',\n\t\t\t'value' => '|arg1:port_ssl|',\n\t\t\t'default' => read_config_option('ldap_port_ssl'),\n\t\t\t'size' => '5'\n\t\t\t),\n\t\t'proto_version' => array(\n\t\t\t'friendly_name' => __('Protocol Version'),\n\t\t\t'description' => __('Protocol Version that the server supports.'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'value' => '|arg1:proto_version|',\n\t\t\t'array' => $ldap_versions\n\t\t\t),\n\t\t'encryption' => array(\n\t\t\t'friendly_name' => __('Encryption'),\n\t\t\t'description' => __('Encryption that the server supports. TLS is only supported by Protocol Version 3.'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'value' => '|arg1:encryption|',\n\t\t\t'array' => $ldap_encryption\n\t\t\t),\n\t\t'referrals' => array(\n\t\t\t'friendly_name' => __('Referrals'),\n\t\t\t'description' => __('Enable or Disable LDAP referrals.  If disabled, it may increase the speed of searches.'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'value' => '|arg1:referrals|',\n\t\t\t'array' => array( '0' => __('Disabled'), '1' => __('Enable'))\n\t\t\t),\n\t\t'mode' => array(\n\t\t\t'friendly_name' => __('Mode'),\n\t\t\t'description' => __('Mode which cacti will attempt to authenticate against the LDAP server.<blockquote><i>No Searching</i> - No Distinguished Name (DN) searching occurs, just attempt to bind with the provided Distinguished Name (DN) format.<br><br><i>Anonymous Searching</i> - Attempts to search for username against LDAP directory via anonymous binding to locate the users Distinguished Name (DN).<br><br><i>Specific Searching</i> - Attempts search for username against LDAP directory via Specific Distinguished Name (DN) and Specific Password for binding to locate the users Distinguished Name (DN).'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'value' => '|arg1:mode|',\n\t\t\t'array' => $ldap_modes\n\t\t\t),\n\t\t'dn' => array(\n\t\t\t'friendly_name' => __('Distinguished Name (DN)'),\n\t\t\t'description' => __('Distinguished Name syntax, such as for windows: <i>\"&lt;username&gt;@win2kdomain.local\"</i> or for OpenLDAP: <i>\"uid=&lt;username&gt;,ou=people,dc=domain,dc=local\"</i>.   \"&lt;username&gt\" is replaced with the username that was supplied at the login prompt.  This is only used when in \"No Searching\" mode.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:dn|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'group_require' => array(\n\t\t\t'friendly_name' => __('Require Group Membership'),\n\t\t\t'description' => __('Require user to be member of group to authenticate. Group settings must be set for this to work, enabling without proper group settings will cause authentication failure.'),\n\t\t\t'value' => '|arg1:group_require|',\n\t\t\t'method' => 'checkbox'\n\t\t\t),\n\t\t'group_header' => array(\n\t\t\t'friendly_name' => __('LDAP Group Settings'),\n\t\t\t'method' => 'spacer'\n\t\t\t),\n\t\t'group_dn' => array(\n\t\t\t'friendly_name' => __('Group Distinguished Name (DN)'),\n\t\t\t'description' => __('Distinguished Name of the group that user must have membership.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:group_dn|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'group_attrib' => array(\n\t\t\t'friendly_name' => __('Group Member Attribute'),\n\t\t\t'description' => __('Name of the attribute that contains the usernames of the members.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:group_attrib|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'group_member_type' => array(\n\t\t\t'friendly_name' => __('Group Member Type'),\n\t\t\t'description' => __('Defines if users use full Distinguished Name or just Username in the defined Group Member Attribute.'),\n\t\t\t'method' => 'drop_array',\n\t\t\t'value' => '|arg1:group_member_type|',\n\t\t\t'array' => array( 1 => 'Distinguished Name', 2 => 'Username' )\n\t\t\t),\n\t\t'search_base_header' => array(\n\t\t\t'friendly_name' => __('LDAP Specific Search Settings'),\n\t\t\t'method' => 'spacer'\n\t\t\t),\n\t\t'search_base' => array(\n\t\t\t'friendly_name' => __('Search Base'),\n\t\t\t'description' => __('Search base for searching the LDAP directory, such as <i>\"dc=win2kdomain,dc=local\"</i> or <i>\"ou=people,dc=domain,dc=local\"</i>.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:search_base|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'search_filter' => array(\n\t\t\t'friendly_name' => __('Search Filter'),\n\t\t\t'description' => __('Search filter to use to locate the user in the LDAP directory, such as for windows: <i>\"(&amp;(objectclass=user)(objectcategory=user)(userPrincipalName=&lt;username&gt;*))\"</i> or for OpenLDAP: <i>\"(&(objectClass=account)(uid=&lt;username&gt))\"</i>.  \"&lt;username&gt\" is replaced with the username that was supplied at the login prompt.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:search_filter|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'specific_dn' => array(\n\t\t\t'friendly_name' => __('Search Distinguished Name (DN)'),\n\t\t\t'description' => __('Distinguished Name for Specific Searching binding to the LDAP directory.'),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:specific_dn|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'specific_password' => array(\n\t\t\t'friendly_name' => __('Search Password'),\n\t\t\t'description' => __('Password for Specific Searching binding to the LDAP directory.'),\n\t\t\t'method' => 'textbox_password',\n\t\t\t'value' => '|arg1:specific_password|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'cn_header' => array(\n\t\t\t'friendly_name' => __('LDAP CN Settings'),\n\t\t\t'method' => 'spacer'\n\t\t\t),\n\t\t'cn_full_name' => array(\n\t\t\t'friendly_name' => __('Full Name'),\n\t\t\t'description' => __('Field that will replace the Full Name when creating a new user, taken from LDAP. (on windows: displayname) '),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:cn_full_name|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'cn_email' => array(\n\t\t\t'friendly_name' => __('eMail'),\n\t\t\t'description' => __('Field that will replace the email taken from LDAP. (on windows: mail) '),\n\t\t\t'method' => 'textbox',\n\t\t\t'value' => '|arg1:cn_email|',\n\t\t\t'max_length' => '255'\n\t\t\t),\n\t\t'save_component_domain_ldap' => array(\n\t\t\t'method' => 'hidden',\n\t\t\t'value' => '1'\n\t\t\t)\n\t);\n\n\tform_start('user_domains.php');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\tdraw_edit_form(array(\n\t\t'config' => array(),\n\t\t'fields' => inject_form_variables($fields_domain_edit, (isset($domain) ? $domain : array()))\n\t\t));\n\n\thtml_end_box(true, true);\n\n\tif (!isempty_request_var('domain_id')) {\n\t\t$domain = db_fetch_row_prepared('SELECT * FROM user_domains_ldap WHERE domain_id = ?', array(get_request_var('domain_id')));\n\n\t\thtml_start_box( __('Domain Properties'), '100%', true, '3', 'center', '');\n\n\t\tdraw_edit_form(array(\n\t\t\t'config' => array(),\n\t\t\t'fields' => inject_form_variables($fields_domain_ldap_edit, (isset($domain) ? $domain : array()))\n\t\t\t));\n\n\t\thtml_end_box(true, true);\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction initGroupMember() {\n\t\tif ($('#group_require').is(':checked')) {\n\t\t\t$('#row_group_header').show();\n\t\t\t$('#row_group_dn').show();\n\t\t\t$('#row_group_attrib').show();\n\t\t\t$('#row_group_member_type').show();\n\t\t} else {\n\t\t\t$('#row_group_header').hide();\n\t\t\t$('#row_group_dn').hide();\n\t\t\t$('#row_group_attrib').hide();\n\t\t\t$('#row_group_member_type').hide();\n\t\t}\n\t}\n\n\tfunction initSearch() {\n\t\tswitch($('#mode').val()) {\n\t\tcase \"0\":\n\t\t\t$('#row_search_base_header').hide();\n\t\t\t$('#row_search_base').hide();\n\t\t\t$('#row_search_filter').hide();\n\t\t\t$('#row_specific_dn').hide();\n\t\t\t$('#row_specific_password').hide();\n\t\t\t$('#row_cn_full_name').hide();\n\t\t\t$('#row_cn_email').hide();\n\t\t\tbreak;\n\t\tcase \"1\":\n\t\t\t$('#row_search_base_header').show();\n\t\t\t$('#row_search_base').show();\n\t\t\t$('#row_search_filter').show();\n\t\t\t$('#row_specific_dn').hide();\n\t\t\t$('#row_specific_password').hide();\n\t\t\t$('#row_cn_full_name').hide();\n\t\t\t$('#row_cn_email').hide();\n\t\t\tbreak;\n\t\tcase \"2\":\n\t\t\t$('#row_search_base_header').show();\n\t\t\t$('#row_search_base').show();\n\t\t\t$('#row_search_filter').show();\n\t\t\t$('#row_specific_dn').show();\n\t\t\t$('#row_specific_password').show();\n\t\t\t$('#row_cn_full_name').show();\n\t\t\t$('#row_cn_email').show();\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t$(function() {\n\t\tinitSearch();\n\t\tinitGroupMember();\n\n\t\t$('#mode').change(function() {\n\t\t\tinitSearch();\n\t\t});\n\n\t\t$('#group_require').change(function() {\n\t\t\tinitGroupMember();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\tform_save_button('user_domains.php', 'return', 'domain_id');\n}\n\nfunction domains() {\n\tglobal $domain_types, $actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'domain_name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_domains');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\thtml_start_box( __('User Domains'), '100%', '', '3', 'center', 'user_domains.php?action=edit');\n\n\t?>\n\t<tr class='even' class='noprint'>\n\t\t<td class='noprint'>\n\t\t<form id='form_domains' method='get' action='user_domains.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr class='noprint'>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Domains');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange=\"applyFilter()\">\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __x('filter: use', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc('Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t<script type='text/javascript'>\n\t\tfunction applyFilter() {\n\t\t\tstrURL  = 'user_domains.php?rows=' + $('#rows').val();\n\t\t\tstrURL += '&filter=' + $('#filter').val();\n\t\t\tstrURL += '&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\tfunction clearFilter() {\n\t\t\tstrURL = 'user_domains.php?clear=1&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t}\n\n\t\t$(function() {\n\t\t\t$('#refresh').click(function() {\n\t\t\t\tapplyFilter();\n\t\t\t});\n\n\t\t\t$('#clear').click(function() {\n\t\t\t\tclearFilter();\n\t\t\t});\n\n\t\t\t$('#form_domains').submit(function(event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tapplyFilter();\n\t\t\t});\n\t\t});\n\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (domain_name LIKE '%%\" . get_request_var('filter') . \"%%') ||\n\t\t\t(type LIKE '%%\" . get_request_var('filter') . \"%%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tcount(*)\n\t\tFROM user_domains\n\t\t$sql_where\");\n\n\t$domains = db_fetch_assoc(\"SELECT *\n\t\tFROM user_domains\n\t\t$sql_where\n\t\tORDER BY \" . get_request_var('sort_column') . ' ' . get_request_var('sort_direction') . '\n\t\tLIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows);\n\n\t$nav = html_nav_bar('user_user_domains.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 8, __('User Domains'), 'page', 'main');\n\n\tform_start('user_domains.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'domain_name'  => array(__('Domain Name'), 'ASC'),\n\t\t'type'         => array(__('Domain Type'), 'ASC'),\n\t\t'defdomain'    => array(__('Default'), 'ASC'),\n\t\t'user_id'      => array(__('Effective User'), 'ASC'),\n\t\t'cn_full_name' => array(__('CN FullName'), 'ASC'),\n\t\t'cn_email'     => array(__('CN eMail'), 'ASC'),\n\t\t'enabled'      => array(__('Enabled'), 'ASC'));\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\t$i = 0;\n\tif (cacti_sizeof($domains)) {\n\t\tforeach ($domains as $domain) {\n\t\t\t/* hide system types */\n\t\t\tform_alternate_row('line' . $domain['domain_id'], true);\n\t\t\tform_selectable_cell(filter_value($domain['domain_name'], get_request_var('filter'), 'user_domains.php?action=edit&domain_id=' . $domain['domain_id']), $domain['domain_id']);\n\t\t\tform_selectable_cell($domain_types[$domain['type']], $domain['domain_id']);\n\t\t\tform_selectable_cell(($domain['defdomain'] == '0' ? '--': __('Yes') ), $domain['domain_id']);\n\t\t\tform_selectable_ecell(($domain['user_id'] == '0' ? __('None Selected') : db_fetch_cell_prepared('SELECT username FROM user_auth WHERE id = ?', array($domain['user_id']))), $domain['domain_id']);\n\t\t\tform_selectable_ecell(db_fetch_cell_prepared('SELECT cn_full_name FROM user_domains_ldap WHERE domain_id = ?', array($domain['domain_id'])), $domain['domain_id']);\n\t\t\tform_selectable_ecell(db_fetch_cell_prepared('SELECT cn_email FROM user_domains_ldap WHERE domain_id = ?', array($domain['domain_id'])), $domain['domain_id']);\n\t\t\tform_selectable_cell($domain['enabled'] == 'on' ? __('Yes'):__('No'), $domain['domain_id']);\n\t\t\tform_checkbox_cell($domain['domain_name'], $domain['domain_id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"' . (cacti_sizeof($display_text)+1) . '\"><em>' . __('No User Domains Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($domains)) {\n\t\tprint $nav;\n\t}\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($actions);\n\n\tform_end();\n}\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\n\nset_default_action();\n\n$group_actions = array(\n\t1 => __('Delete'),\n\t2 => __('Copy'),\n\t3 => __('Enable'),\n\t4 => __('Disable')\n);\n\n$href_options = array(\n\t3 => array(\n\t\t'radio_value' => '4',\n\t\t'radio_caption' => __('Defer to the Users Setting')\n\t\t),\n\t0 => array(\n\t\t'radio_value' => '1',\n\t\t'radio_caption' => __('Show the Page that the User pointed their browser to')\n\t\t),\n\t1 => array(\n\t\t'radio_value' => '2',\n\t\t'radio_caption' => __('Show the Console')\n\t\t),\n\t2 => array(\n\t\t'radio_value' => '3',\n\t\t'radio_caption' => __('Show the default Graph Screen')\n\t\t)\n);\n\n$gperm_options = array(\n\t0 => array(\n\t\t'radio_value' => '1',\n\t\t'radio_caption' => __('Defer to the Users Setting')\n\t\t),\n\t1 => array(\n\t\t'radio_value' => '2',\n\t\t'radio_caption' => __('Grant Access')\n\t\t),\n\t2 => array(\n\t\t'radio_value' => '3',\n\t\t'radio_caption' => __('Restrict Access')\n\t\t)\n);\n\n$fields_user_group_edit = array(\n\t'name' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Group Name'),\n\t\t'description' => __('The name of this Group.'),\n\t\t'value' => '|arg1:name|',\n\t\t'max_length' => '255'\n\t\t),\n\t'description' => array(\n\t\t'method' => 'textbox',\n\t\t'friendly_name' => __('Group Description'),\n\t\t'description' => __('A more descriptive name for this group, that can include spaces or special characters.'),\n\t\t'value' => '|arg1:description|',\n\t\t'max_length' => '255'\n\t\t),\n\t'enabled' => array(\n\t\t'method' => 'checkbox',\n\t\t'friendly_name' => __('Enabled'),\n\t\t'description' => __('Determines if user is able to login.'),\n\t\t'value' => '|arg1:enabled|',\n\t\t'default' => ''\n\t\t),\n\t'grp1' => array(\n\t\t'friendly_name' => __('General Group Options'),\n\t\t'method' => 'checkbox_group',\n\t\t'description' => __('Set any user account-specific options here.'),\n\t\t'items' => array(\n\t\t\t'graph_settings' => array(\n\t\t\t\t'value' => '|arg1:graph_settings|',\n\t\t\t\t'friendly_name' => __('Allow Users of this Group to keep custom User Settings'),\n\t\t\t\t'form_id' => '|arg1:id|',\n\t\t\t\t'default' => 'on'\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t'show_tree' => array(\n\t\t'friendly_name' => __('Tree Rights'),\n\t\t'method' => 'radio',\n\t\t'description' => __('Should Users of this Group have access to the Tree?'),\n\t\t'value' => '|arg1:show_tree|',\n\t\t'default' => '1',\n\t\t'items' => $gperm_options\n\t\t),\n\t'show_list' => array(\n\t\t'friendly_name' => __('Graph List Rights'),\n\t\t'method' => 'radio',\n\t\t'description' => __('Should Users of this Group have access to the Graph List?'),\n\t\t'value' => '|arg1:show_list|',\n\t\t'default' => '1',\n\t\t'items' => $gperm_options\n\t\t),\n\t'show_preview' => array(\n\t\t'friendly_name' => __('Graph Preview Rights'),\n\t\t'method' => 'radio',\n\t\t'description' => __('Should Users of this Group have access to the Graph Preview?'),\n\t\t'value' => '|arg1:show_preview|',\n\t\t'default' => '1',\n\t\t'items' => $gperm_options\n\t\t),\n\t'login_opts' => array(\n\t\t'friendly_name' => __('Login Options'),\n\t\t'method' => 'radio',\n\t\t'default' => '1',\n\t\t'description' => __('What to do when a User from this User Group logs in.'),\n\t\t'value' => '|arg1:login_opts|',\n\t\t'items' => $href_options\n\t\t),\n\t'id' => array(\n\t\t'method' => 'hidden_zero',\n\t\t'value' => '|arg1:id|'\n\t\t),\n\t'save_component_group' => array(\n\t\t'method' => 'hidden',\n\t\t'value' => '1'\n\t\t)\n);\n\nif (isset_request_var('update_policy')) {\n\tupdate_policies();\n} else {\n\tswitch (get_request_var('action')) {\n\tcase 'actions':\n\t\tform_actions();\n\n\t\tbreak;\n\tcase 'save':\n\t\tform_save();\n\n\t\tbreak;\n\tcase 'perm_remove':\n\t\tperm_remove();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\t\tgroup_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tdefault:\n\t\tif (!api_plugin_hook_function('user_group_admin_action', get_request_var('action'))) {\n\t\t\ttop_header();\n\t\t\tuser_group();\n\t\t\tbottom_footer();\n\t\t}\n\n\t\tbreak;\n\t}\n}\n\n/* --------------------------\n    Actions Function\n   -------------------------- */\n\nfunction user_group_disable($id) {\n\tdb_execute_prepared(\"UPDATE user_auth_group SET enabled = '' WHERE id = ?\", array($id));\n}\n\nfunction user_group_enable($id) {\n\tdb_execute_prepared(\"UPDATE user_auth_group SET enabled = 'on' WHERE id = ?\", array($id));\n}\n\nfunction user_group_remove($id) {\n\tdb_execute_prepared('DELETE FROM user_auth_group WHERE id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM user_auth_group_members WHERE group_id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM user_auth_group_realm WHERE group_id = ?', array($id));\n\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE group_id = ?', array($id));\n}\n\nfunction user_group_copy($id, $prefix = 'New Group') {\n\tstatic $count = 1;\n\n\t$name = $prefix . ' ' . $count;\n\n\tdb_execute_prepared('INSERT INTO user_auth_group\n\t\t(name, description, graph_settings, login_opts, show_tree, show_list, show_preview,\n\t\tpolicy_graphs, policy_trees, policy_hosts, policy_graph_templates, enabled)\n\t\tSELECT ' . db_qstr($name) . ', description, graph_settings, login_opts, show_tree, show_list, show_preview,\n\t\tpolicy_graphs, policy_trees, policy_hosts, policy_graph_templates, enabled\n\t\tFROM user_auth_group WHERE id = ?', array($id));\n\n\t$id = db_fetch_insert_id();\n\n\tif (!empty($id)) {\n\t\t$perms = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM user_auth_group_perms\n\t\t\tWHERE group_id = ?',\n\t\t\tarray($id));\n\n\t\tif (cacti_sizeof($perms)) {\n\t\t\tforeach($perms as $p) {\n\t\t\t\tdb_execute_prepared('INSERT INTO user_auth_group_perms\n\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\tVALUES (?, ?, ?)',\n\t\t\t\t\tarray($id, $p['item_id'], $p['type']));\n\t\t\t}\n\t\t}\n\n\t\t$realms = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM user_auth_group_realm\n\t\t\tWHERE group_id = ?',\n\t\t\tarray($id));\n\n\t\tif (cacti_sizeof($realms)) {\n\t\t\tforeach($realms as $r) {\n\t\t\t\tdb_execute_prepared('INSERT INTO user_auth_group_realm\n\t\t\t\t\t(group_id, realm_id)\n\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\tarray($id, $r['realm_id']));\n\t\t\t}\n\t\t}\n\t}\n\n\t$count++;\n}\n\nfunction update_policies() {\n\t$set = '';\n\n\t$set .= isset_request_var('policy_graphs') ? 'policy_graphs=' . get_nfilter_request_var('policy_graphs'):'';\n\t$set .= isset_request_var('policy_trees') ? ($set != '' ? ',':'') . 'policy_trees=' . get_nfilter_request_var('policy_trees'):'';\n\t$set .= isset_request_var('policy_hosts') ? ($set != '' ? ',':'') . 'policy_hosts=' . get_nfilter_request_var('policy_hosts'):'';\n\t$set .= isset_request_var('policy_graph_templates') ? ($set != '' ? ',':'') . 'policy_graph_templates=' . get_nfilter_request_var('policy_graph_templates'):'';\n\n\tif ($set != '') {\n\t\tdb_execute_prepared(\"UPDATE user_auth_group SET $set WHERE id = ?\", array(get_nfilter_request_var('id')));\n\t}\n\n\theader('Location: user_group_admin.php?action=edit&header=false&tab=' .  get_nfilter_request_var('tab') . '&id=' . get_nfilter_request_var('id'));\n\texit;\n}\n\nfunction form_actions() {\n\tglobal $group_actions, $user_auth_realms;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('associate_host')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_perms\n\t\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 3)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 3',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=permsd&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_graph')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_perms\n\t\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 1)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 1',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=permsg&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_template')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_perms\n\t\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 4)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 4',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=permste&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_tree')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_perms\n\t\t\t\t\t\t(group_id, item_id, type)\n\t\t\t\t\t\tVALUES (?, ?, 2)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND item_id = ?\n\t\t\t\t\t\tAND type = 2',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=permstr&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('associate_member')) {\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t\t/* ================= input validation ================= */\n\t\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t\t/* ==================================================== */\n\n\t\t\t\tif (get_nfilter_request_var('drp_action') == '1') {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO user_auth_group_members\n\t\t\t\t\t\t(group_id, user_id)\n\t\t\t\t\t\tVALUES (?, ?)',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('DELETE FROM user_auth_group_members\n\t\t\t\t\t\tWHERE group_id = ?\n\t\t\t\t\t\tAND user_id = ?',\n\t\t\t\t\t\tarray(get_nfilter_request_var('id'), $matches[1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=members&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') == '1') { /* delete */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tuser_group_remove($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '2') { /* copy */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tuser_group_copy($selected_items[$i], get_nfilter_request_var('group_prefix'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '3') { /* enable */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tuser_group_enable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') == '4') { /* disable */\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\tuser_group_disable($selected_items[$i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: user_group_admin.php?header=false');\n\t\texit;\n\t}\n\n\t/* loop through each of the users and process them */\n\t$group_list = '';\n\t$group_array = array();\n\t$i = 0;\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\tif (get_nfilter_request_var('drp_action') != '2') {\n\t\t\t\t$group_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM user_auth_group WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t}\n\t\t\t$group_array[$i] = $matches[1];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('user_group_admin.php');\n\n\thtml_start_box($group_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($group_array) && cacti_sizeof($group_array)) {\n\t\tif ((get_nfilter_request_var('drp_action') == '1') && (cacti_sizeof($group_array))) { /* delete */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following User Group', 'Click \\'Continue\\' to delete following User Groups', cacti_sizeof($group_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$group_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Delete User Group', 'Delete User Groups', cacti_sizeof($group_array)) . \"'>\";\n\t\t}\n\n\t\t$group_id = '';\n\n\t\tif ((get_nfilter_request_var('drp_action') == '2') && (cacti_sizeof($group_array))) { /* copy */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to Copy the following User Group to a new User Group.', 'Click \\'Continue\\' to Copy following User Groups to new User Groups.', cacti_sizeof($group_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$group_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __('Group Prefix:') . \" \";\n\t\t\tprint form_text_box('group_prefix', __('New Group'), '', 25);\n\t\t\tprint \"</p></td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Copy User Group', 'Copy User Groups', cacti_sizeof($group_array)) . \"'>\";\n\t\t}\n\n\t\tif ((get_nfilter_request_var('drp_action') == '3') && (cacti_sizeof($group_array))) { /* enable */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to enable the following User Group.', 'Click \\'Continue\\' to enable following User Groups.', cacti_sizeof($group_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$group_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Enable User Group', 'Enable User Groups', cacti_sizeof($group_array)) . \"'>\";\n\t\t}\n\n\t\tif ((get_nfilter_request_var('drp_action') == '4') && (cacti_sizeof($group_array))) { /* disable */\n\t\t\tprint \"<tr>\n\t\t\t\t<td class='textArea'>\n\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to disable the following User Group.', 'Click \\'Continue\\' to disable following User Groups.', cacti_sizeof($group_array)) . \"</p>\n\t\t\t\t\t<div class='itemlist'><ul>$group_list</ul></div>\n\t\t\t\t</td>\n\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __n('Disable User Group', 'Disable User Groups', cacti_sizeof($group_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: user_group_admin.php?header=false');\n\t\texit;\n\t}\n\n\tprint \"<tr>\n\t\t<td class='saveRow'>\n\t\t\t<input type='hidden' name='action' value='actions'>\";\n\n\tprint \"<input type='hidden' name='selected_items' value='\" . (isset($group_array) ? serialize($group_array) : '') . \"'>\\n\";\n\tprint \"<input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n\t\t$save_html\n\t\t</td>\n\t</tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* --------------------------\n    Save Function\n   -------------------------- */\n\nfunction form_save() {\n\tglobal $settings_user;\n\n\tif (isset_request_var('save_component_group')) {\n\t\t/* ================= input validation ================= */\n\t\tget_filter_request_var('id');\n\t\tget_filter_request_var('realm');\n\t\t/* ==================================================== */\n\n\t\t/* check duplicate group */\n\t\tif (cacti_sizeof(db_fetch_row_prepared('SELECT * FROM user_auth_group WHERE name = ? AND id != ?', array(get_nfilter_request_var('name'), get_nfilter_request_var('id'))))) {\n\t\t\traise_message(12);\n\t\t}\n\n\t\t$save['id']             = get_nfilter_request_var('id');\n\t\t$save['name']           = form_input_validate(get_nfilter_request_var('name'), 'name', \"^[A-Za-z0-9\\._\\\\\\@\\ -]+$\", false, 3);\n\t\t$save['description']    = form_input_validate(get_nfilter_request_var('description'), 'description', '', true, 3);\n\t\t$save['show_tree']      = form_input_validate(get_nfilter_request_var('show_tree', ''), 'show_tree', '', true, 3);\n\t\t$save['show_list']      = form_input_validate(get_nfilter_request_var('show_list', ''), 'show_list', '', true, 3);\n\t\t$save['show_preview']   = form_input_validate(get_nfilter_request_var('show_preview', ''), 'show_preview', '', true, 3);\n\t\t$save['graph_settings'] = form_input_validate(get_nfilter_request_var('graph_settings', ''), 'graph_settings', '', true, 3);\n\t\t$save['login_opts']     = form_input_validate(get_nfilter_request_var('login_opts'), 'login_opts', '', true, 3);\n\t\t$save['enabled']        = form_input_validate(get_nfilter_request_var('enabled', ''), 'enabled', '', true, 3);\n\t\t$save = api_plugin_hook_function('user_group_admin_setup_sql_save', $save);\n\n\t\tif (!is_error_message()) {\n\t\t\t$group_id = sql_save($save, 'user_auth_group');\n\n\t\t\tif ($group_id) {\n\t\t\t\treset_group_perms($group_id);\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\n\t\t}\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=general&id=' . (isset($group_id) && $group_id > 0 ? $group_id : get_nfilter_request_var('id')));\n\t\texit;\n\t} elseif (isset_request_var('save_component_realm_perms')) {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_realm WHERE group_id = ?', array(get_filter_request_var('id')));\n\n\t\tforeach ($_POST as $var => $val) {\n\t\t\tif (preg_match('/^[section]/i', $var)) {\n\t\t\t\tif (substr($var, 0, 7) == 'section') {\n\t\t\t\t    db_execute_prepared('REPLACE INTO user_auth_group_realm (group_id, realm_id) VALUES (?, ?)', array(get_request_var('id'), substr($var, 7)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treset_group_perms(get_request_var('id'));\n\n\t\traise_message(1);\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=realms&id=' . get_request_var('id'));\n\t\texit;\n\t} elseif (isset_request_var('save_component_graph_settings')) {\n\t\tforeach ($settings_user as $tab_short_name => $tab_fields) {\n\t\t\tforeach ($tab_fields as $field_name => $field_array) {\n\t\t\t\tif ((isset($field_array['items'])) && (is_array($field_array['items']))) {\n\t\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\t\tdb_execute_prepared('REPLACE INTO settings_user_group (group_id, name, value) VALUES (?, ?, ?)', array(get_filter_request_var('id'), $sub_field_name, get_nfilter_request_var($sub_field_name, '')));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdb_execute_prepared('REPLACE INTO settings_user_group (group_id, name, value) VALUES (?, ?, ?)', array(get_request_var('id'), $field_name, get_nfilter_request_var($field_name)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tkill_session_var('sess_user_config_array');\n\n\t\treset_group_perms(get_request_var('id'));\n\n\t\traise_message(1);\n\n\t\theader('Location: user_group_admin.php?action=edit&header=false&tab=settings&id=' . get_nfilter_request_var('id'));\n\t\texit;\n\t} else {\n\t\tapi_plugin_hook('user_group_admin_save');\n\t}\n\n\t/* redirect to the appropriate page */\n\theader('Location: user_group_admin.php?action=edit&header=false&tab=general&id=' .  get_nfilter_request_var('id'));\n}\n\n/* --------------------------\n    Graph Permissions\n   -------------------------- */\n\nfunction perm_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('group_id');\n\t/* ==================================================== */\n\n\tif (get_request_var('type') == 'graph') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE type=1 AND group_id = ? AND item_id = ?', array(get_request_var('group_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'tree') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE type=2 AND group_id = ? AND item_id = ?', array(get_request_var('group_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'host') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE type=3 AND group_id = ? AND item_id = ?', array(get_request_var('group_id'), get_request_var('id')));\n\t} elseif (get_request_var('type') == 'graph_template') {\n\t\tdb_execute_prepared('DELETE FROM user_auth_group_perms WHERE type=4 AND group_id = ? AND item_id = ?', array(get_request_var('group_id'), get_request_var('id')));\n\t}\n\n\theader('Location: user_group_admin.php?action=edit&header=false&tab=gperms&id=' . get_request_var('group_id'));\n}\n\nfunction user_group_members_edit($header_label) {\n\tglobal $config, $auth_realms;\n\n\tprocess_member_request_vars();\n\n\tmember_filter($header_label);\n\n\t/* if the number of rows is -1, set it to the default */\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (username LIKE '%\" . get_request_var('filter') . \"%' OR full_name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('associated') == 'false') {\n\t\t/* Show all items */\n\t} else {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_group_members.group_id=' . get_request_var('id', 0) . ')';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(ua.id)\n\t\tFROM user_auth AS ua\n\t\tLEFT JOIN user_auth_group_members\n\t\tON (ua.id = user_auth_group_members.user_id)\n\t\t$sql_where\");\n\n\t$sql_query = \"SELECT DISTINCT ua.id, ua.username, ua.full_name, ua.enabled, ua.realm\n\t\tFROM user_auth AS ua\n\t\tLEFT JOIN user_auth_group_members\n\t\tON (ua.id = user_auth_group_members.user_id)\n\t\t$sql_where\n\t\tORDER BY username, full_name\n\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$members = db_fetch_assoc($sql_query);\n\n\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=members&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Users'), 'page', 'main');\n\n\tform_start('user_group_admin.php?tab=members&id=' . get_request_var('id'), 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array( __('Login Name'), __('Full Name'), __('ID'), __('Membership'), __('Enabled'), __('Realm'));\n\n\thtml_header_checkbox($display_text, false);\n\n\tif (cacti_sizeof($members)) {\n\t\tforeach ($members as $g) {\n\t\t\tform_alternate_row('line' . $g['id'], true);\n\t\t\tform_selectable_cell(filter_value($g['username'], get_request_var('filter'), 'user_admin.php?action=user_edit&id=' . $g['id']), $g['id']);\n\t\t\tform_selectable_cell(filter_value($g['full_name'], get_request_var('filter')), $g['id']);\n\t\t\tform_selectable_cell($g['id'], $g['id']);\n\t\t\tif (user_group_is_member($g['id'], get_request_var('id'))) {\n\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Group Member') . '</span>', $g['id']);\n\t\t\t} else {\n\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Non Member') . '</span>', $g['id']);\n\t\t\t}\n\t\t\tform_selectable_cell(($g['enabled'] == 'on' ? __('Enabled'):__('Disabled') ), $g['id']);\n\t\t\tform_selectable_cell((isset($auth_realms[$g['realm']]) ? $auth_realms[$g['realm']]:'Unknown'), $g['id']);\n\t\t\tform_checkbox_cell($g['full_name'], $g['id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td><em>' . __('No Matching Group Members Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($members)) {\n\t\tprint $nav;\n\t}\n\n\tform_hidden_box('tab', 'members', '');\n\tform_hidden_box('id', get_request_var('id'), '');\n\tform_hidden_box('associate_member', '1', '');\n\n\t$assoc_actions = array(\n\t\t1 => __('Add to Group'),\n\t\t2 => __('Remove from Group')\n\t);\n\n\t/* draw the dropdown containing a list of available actions for this form */\n\tdraw_actions_dropdown($assoc_actions);\n\n\tform_end();\n}\n\nfunction user_group_graph_perms_edit($tab, $header_label) {\n\tglobal $config, $assoc_actions;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\t$policy_array = array(\n\t\t1 => __('Allow'),\n\t\t2 => __('Deny')\n\t);\n\n\tif (!isempty_request_var('id')) {\n\t\t$policy = db_fetch_row_prepared('SELECT policy_graphs, policy_trees, policy_hosts, policy_graph_templates\n\t\t\tFROM user_auth_group\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\t}\n\n\tswitch($tab) {\n\tcase 'permsg':\n\t\tprocess_graph_request_vars();\n\n\t\tgraph_filter($header_label);\n\n\t\tform_start('user_group_admin.php', 'policy');\n\n\t\t/* box: device permissions */\n\t\thtml_start_box( __('Default Graph Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><? print __('Default Graph Policy for this User Group');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_graphs', $policy_array, '', '', $policy['policy_graphs'], '', ''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type=\"hidden\" name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (gtg.title_cache LIKE '%\" . get_request_var('filter') . \"%' AND gtg.local_graph_id>0)\";\n\t\t} else {\n\t\t\t$sql_where = 'WHERE (gtg.local_graph_id>0)';\n\t\t}\n\n\t\tif (get_request_var('graph_template_id') == '-1') {\n\t\t\t/* Show all items */\n\t\t} elseif (get_request_var('graph_template_id') == '0') {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gtg.graph_template_id=0';\n\t\t} elseif (!isempty_request_var('graph_template_id')) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' gtg.graph_template_id=' . get_request_var('graph_template_id');\n\t\t}\n\n\t\tif (get_request_var('associated') == 'false') {\n\t\t\t/* Show all items */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_group_perms.type = 1 AND user_auth_group_perms.group_id=' . get_request_var('id', 0) . ')';\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT\n\t\t\tCOUNT(DISTINCT gtg.id)\n\t\t\tFROM graph_templates_graph AS gtg\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (gtg.local_graph_id = user_auth_group_perms.item_id AND user_auth_group_perms.type = 1 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\");\n\n\t\t$sql_query = \"SELECT gtg.local_graph_id, gtg.title_cache, user_auth_group_perms.group_id\n\t\t\tFROM graph_templates_graph AS gtg\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (gtg.local_graph_id=user_auth_group_perms.item_id AND user_auth_group_perms.type = 1 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\n\t\t\tORDER BY title_cache\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$graphs = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=permsg&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 7, __('Graphs'), 'page', 'main');\n\n\t\tform_start('user_group_admin.php?tab=permsg&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array( __('Graph Title'), __('ID'), __('Effective Policy'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tforeach ($graphs as $g) {\n\t\t\t\tform_alternate_row('line' . $g['local_graph_id'], true);\n\t\t\t\tform_selectable_cell(filter_value($g['title_cache'], get_request_var('filter')), $g['local_graph_id']);\n\t\t\t\tform_selectable_cell($g['local_graph_id'], $g['local_graph_id']);\n\t\t\t\tif (empty($g['group_id']) || $g['group_id'] == NULL) {\n\t\t\t\t\tif ($policy['policy_graphs'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['local_graph_id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['local_graph_id']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($policy['policy_graphs'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['local_graph_id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['local_graph_id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tform_checkbox_cell($g['title_cache'], $g['local_graph_id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Graphs Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_graph', '1', '');\n\n\t\tif ($policy['policy_graphs'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\tcase 'permsd':\n\t\tprocess_device_request_vars();\n\n\t\tdevice_filter($header_label);\n\n\t\tform_start('user_group_admin.php', 'policy');\n\n\t\t/* box: device permissions */\n\t\thtml_start_box( __('Default Device Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><? print __('Default Graph Policy for this User Group');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_hosts',$policy_array,'','',$policy['policy_hosts'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type=\"hidden\" name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (host.hostname LIKE '%\" . get_request_var('filter') . \"%' OR host.description LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (get_request_var('host_template_id') == '-1') {\n\t\t\t/* Show all items */\n\t\t} elseif (get_request_var('host_template_id') == '0') {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' host.host_template_id=0';\n\t\t} elseif (!isempty_request_var('host_template_id')) {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' host.host_template_id=' . get_request_var('host_template_id');\n\t\t}\n\n\t\tif (get_request_var('associated') == 'false') {\n\t\t\t/* Show all items */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' user_auth_group_perms.group_id=' . get_request_var('id', 0);\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT\n\t\t\tCOUNT(DISTINCT host.id)\n\t\t\tFROM host\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (host.id = user_auth_group_perms.item_id AND user_auth_group_perms.type = 3 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\");\n\n\t\t$host_graphs       = array_rekey(db_fetch_assoc('SELECT host_id, count(*) AS graphs FROM graph_local GROUP BY host_id'), 'host_id', 'graphs');\n\t\t$host_data_sources = array_rekey(db_fetch_assoc('SELECT host_id, count(*) AS data_sources FROM data_local GROUP BY host_id'), 'host_id', 'data_sources');\n\n\t\t$sql_query = \"SELECT host.*, user_auth_group_perms.group_id\n\t\t\tFROM host\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (host.id=user_auth_group_perms.item_id AND user_auth_group_perms.type = 3 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\n\t\t\tORDER BY description\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$hosts = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=permsd&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Devices'), 'page', 'main');\n\n\t\tform_start('user_group_admin.php?tab=permsd&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array( __('Description'), __('ID'), __('Effective Policy'), __('Graphs'), __('Data Sources'), __('Status'), __('Hostname') );\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($hosts)) {\n\t\t\tforeach ($hosts as $host) {\n\t\t\t\tform_alternate_row('line' . $host['id'], true);\n\t\t\t\tform_selectable_cell(filter_value($host['description'], get_request_var('filter')), $host['id']);\n\t\t\t\tform_selectable_cell($host['id'], $host['id']);\n\t\t\t\tif (empty($host['group_id']) || $host['group_id'] == NULL) {\n\t\t\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $host['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $host['id']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $host['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $host['id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tform_selectable_cell((isset($host_graphs[$host['id']]) ? $host_graphs[$host['id']] : 0), $host['id']);\n\t\t\t\tform_selectable_cell((isset($host_data_sources[$host['id']]) ? $host_data_sources[$host['id']] : 0), $host['id']);\n\t\t\t\tform_selectable_cell(get_colored_device_status(($host['disabled'] == 'on' ? true : false), $host['status']), $host['id']);\n\t\t\t\tform_selectable_cell(filter_value($host['hostname'], get_request_var('filter')), $host['id']);\n\t\t\t\tform_checkbox_cell($host['description'], $host['id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Devices Found') . '</em></td></tr>';\n\t\t}\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($hosts)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_host', '1', '');\n\n\t\tif ($policy['policy_hosts'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\tcase 'permste':\n\t\tprocess_template_request_vars();\n\n\t\ttemplate_filter($header_label);\n\n\t\tform_start('user_group_admin.php', 'policy');\n\n\t\t/* box: device permissions */\n\t\thtml_start_box( __('Default Graph Template Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><?php print __('Default Graph Template Policy for this User Group');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_graph_templates',$policy_array,'','',$policy['policy_graph_templates'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type=\"hidden\" name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (gt.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (get_request_var('associated') == 'false') {\n\t\t\t/* Show all items */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_group_perms.type = 4 AND user_auth_group_perms.group_id=' . get_request_var('id', 0) . ')';\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT\n\t\t\tCOUNT(DISTINCT gt.id)\n\t\t\tFROM graph_templates AS gt\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (gt.id = user_auth_group_perms.item_id AND user_auth_group_perms.type = 4 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\n\t\t\tGROUP BY gl.graph_template_id\");\n\n\t\t$sql_query = \"SELECT gt.id, gt.name, count(*) AS totals, user_auth_group_perms.group_id\n\t\t\tFROM graph_templates AS gt\n\t\t\tINNER JOIN graph_local AS gl\n\t\t\tON gt.id = gl.graph_template_id\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (gt.id = user_auth_group_perms.item_id AND user_auth_group_perms.type = 4 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\n\t\t\tGROUP BY gl.graph_template_id\n\t\t\tORDER BY name\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$graphs = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=permste&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Graph Templates'), 'page', 'main');\n\n\t\tform_start('user_group_admin.php?tab=permste&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array( __('Template Name'), __('ID'), __('Effective Policy'), __('Total Graphs'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tforeach ($graphs as $g) {\n\t\t\t\tform_alternate_row('line' . $g['id'], true);\n\t\t\t\tform_selectable_cell(filter_value($g['name'], get_request_var('filter')), $g['id']);\n\t\t\t\tform_selectable_cell($g['id'], $g['id']);\n\t\t\t\tif (empty($g['group_id']) || $g['group_id'] == NULL) {\n\t\t\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['id']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $g['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $g['id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tform_selectable_cell($g['totals'], $g['id']);\n\t\t\t\tform_checkbox_cell($g['name'], $g['id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Graph Templates Found') . '</em></td></tr>';\n\t\t}\n\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($graphs)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_template', '1', '');\n\n\t\tif ($policy['policy_graph_templates'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\tcase 'permstr':\n\t\tprocess_tree_request_vars();\n\n\t\ttree_filter($header_label);\n\n\t\tform_start('user_group_admin.php', 'policy');\n\n\t\t/* box: device permissions */\n\t\thtml_start_box( __('Default Tree Policy'), '100%', '', '3', 'center', '');\n\n\t\t?>\n\t\t<tr class='even'>\n\t\t\t<td><table><tr>\n\t\t\t<td class='nowrap'><?php print __('Default Tree Policy for this User Group');?></td>\n\t\t\t<td>\n\t\t\t\t<?php form_dropdown('policy_trees',$policy_array,'','',$policy['policy_trees'],'',''); ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' name='update_policy' value='<?php print __esc('Update');?>'>\n\t\t\t\t<input type='hidden' name='tab' value='<?php print $tab;?>'>\n\t\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t\t\t<input type='hidden' name='update_policy' value='1'>\n\t\t\t</td>\n\t\t\t</tr></table></td>\n\t\t</tr>\n\t\t<?php\n\n\t\thtml_end_box();\n\n\t\tform_end();\n\n\t\t/* if the number of rows is -1, set it to the default */\n\t\tif (get_request_var('rows') == -1) {\n\t\t\t$rows = read_config_option('num_rows_table');\n\t\t} else {\n\t\t\t$rows = get_request_var('rows');\n\t\t}\n\n\t\t/* form the 'where' clause for our main sql query */\n\t\tif (get_request_var('filter') != '') {\n\t\t\t$sql_where = \"WHERE (gt.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = '';\n\t\t}\n\n\t\tif (get_request_var('associated') == 'false') {\n\t\t\t/* Show all items */\n\t\t} else {\n\t\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' (user_auth_group_perms.type = 2 AND user_auth_group_perms.group_id=' . get_request_var('id', 0) . ')';\n\t\t}\n\n\t\t$total_rows = db_fetch_cell(\"SELECT\n\t\t\tCOUNT(DISTINCT gt.id)\n\t\t\tFROM graph_tree AS gt\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (gt.id = user_auth_group_perms.item_id AND user_auth_group_perms.type = 2 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\");\n\n\t\t$sql_query = \"SELECT gt.id, gt.name, user_auth_group_perms.group_id\n\t\t\tFROM graph_tree AS gt\n\t\t\tLEFT JOIN user_auth_group_perms\n\t\t\tON (gt.id = user_auth_group_perms.item_id AND user_auth_group_perms.type = 2 AND user_auth_group_perms.group_id = \" . get_request_var('id') . \")\n\t\t\t$sql_where\n\t\t\tORDER BY name\n\t\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t\t$trees = db_fetch_assoc($sql_query);\n\n\t\t$nav = html_nav_bar('user_group_admin.php?action=edit&tab=permstr&id=' . get_request_var('id'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Trees'), 'page', 'main');\n\n\t\tform_start('user_group_admin.php?tab=permstr&id=' . get_request_var('id'), 'chk');\n\n\t\tprint $nav;\n\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t\t$display_text = array( __('Tree Name'), __('ID'), __('Effective Policy'));\n\n\t\thtml_header_checkbox($display_text, false);\n\n\t\tif (cacti_sizeof($trees)) {\n\t\t\tforeach ($trees as $t) {\n\t\t\t\tform_alternate_row('line' . $t['id'], true);\n\t\t\t\tform_selectable_cell(filter_value($t['name'], get_request_var('filter')), $t['id']);\n\t\t\t\tform_selectable_cell($t['id'], $t['id']);\n\t\t\t\tif (empty($t['group_id']) || $t['group_id'] == NULL) {\n\t\t\t\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $t['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $t['id']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessRestricted\">' . __('Access Restricted') . '</span>', $t['id']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tform_selectable_cell('<span class=\"accessGranted\">' . __('Access Granted') . '</span>', $t['id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tform_checkbox_cell($t['name'], $t['id']);\n\t\t\t\tform_end_row();\n\t\t\t}\n\t\t} else {\n\t\t\tprint '<tr><td><em>' . __('No Matching Trees Found') . '</em></td></tr>';\n\t\t}\n\t\thtml_end_box(false);\n\n\t\tif (cacti_sizeof($trees)) {\n\t\t\tprint $nav;\n\t\t}\n\n\t\tform_hidden_box('tab',$tab,'');\n\t\tform_hidden_box('id', get_request_var('id'), '');\n\t\tform_hidden_box('associate_tree', '1', '');\n\n\t\tif ($policy['policy_trees'] == 1) {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Revoke Access'),\n\t\t\t\t2 => __('Grant Access')\n\t\t\t);\n\t\t} else {\n\t\t\t$assoc_actions = array(\n\t\t\t\t1 => __('Grant Access'),\n\t\t\t\t2 => __('Revoke Access')\n\t\t\t);\n\t\t}\n\n\t\t/* draw the dropdown containing a list of available actions for this form */\n\t\tdraw_actions_dropdown($assoc_actions);\n\n\t\tform_end();\n\n\t\tbreak;\n\t}\n}\n\nfunction user_group_is_member($user_id, $group_id) {\n\treturn db_fetch_cell_prepared('SELECT COUNT(*) FROM user_auth_group_members WHERE user_id = ? AND group_id = ?', array($user_id, $group_id));\n}\n\nfunction user_group_realms_edit($header_label) {\n\tglobal $user_auth_realms, $user_auth_roles;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tprint \"<div class='cactiTable' style='width:100%;text-align:left;'>\n\t\t<div>\n\t\t\t<div class='cactiTableTitle'><span style='padding:3px;'>\" . __('User Permissions') . \" $header_label</span></div>\n\t\t\t<div class='cactiTableButton'><span style='padding:3px;'><input class='checkbox' type='checkbox' id='all' name='all' title='\" . __esc('Select All') . \"' onClick='selectAllRealms(this.checked)'><label class='formCheckboxLabel' title='\" . __esc('Select All') . \"' for='all'></label></a><?php }?></span></div>\n\t\t</div>\n\t</div>\\n\";\n\n\tform_start('user_group_admin.php', 'chk');\n\n\t$all_realms = $user_auth_realms;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t/* do cacti realms first */\n\t$i = 1;\n\tforeach($user_auth_roles as $role_name => $perms) {\n\t\t$j = 1;\n\n\t\tprint \"<tr class='tableHeader'><th colspan='2'>\" . $role_name . \"</th></tr>\\n\";\n\t\tprint \"<tr class='odd'><td colspan='4' style='width:100%;'><table style='width:100%;'>\\n\";\n\t\tforeach($perms as $realm) {\n\t\t\tif ($j == 1) {\n\t\t\t\tprint \"<tr>\\n\";\n\t\t\t}\n\n\t\t\tprint \"<td class='realms'>\\n\";\n\t\t\tif (isset($user_auth_realms[$realm])) {\n\t\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_group_realm WHERE group_id = ? AND realm_id = ?', array(get_request_var('id', 0), $realm))) > 0) {\n\t\t\t\t\t$old_value = 'on';\n\t\t\t\t} else {\n\t\t\t\t\t$old_value = '';\n\t\t\t\t}\n\n\t\t\t\tunset($all_realms[$realm]);\n\n\t\t\t\tform_checkbox('section' . $realm, $old_value, $user_auth_realms[$realm], '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\t\t\t}\n\t\t\tprint \"</td>\\n\";\n\n\t\t\tif ($j == 5) {\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t\t$j = 1;\n\t\t\t} else {\n\t\t\t\t$j++;\n\t\t\t}\n\t\t}\n\n\t\tif ($j > 1) {\n\t\t\tprint \"<td class='realms' colspan='\" . (5-$j) . \"'></td>\\n\";\n\t\t\tprint \"</tr>\\n\";\n\t\t}\n\n\t\tprint \"</table></td></tr>\\n\";\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction selectAllRealms(checked) {\n\t\tif (checked) {\n\t\t\t$('input[id^=\\\"section\\\"]').prop('checked', true);\n\t\t} else {\n\t\t\t$('input[id^=\\\"section\\\"]').prop('checked', false);\n\t\t}\n\t}\n\n\t$(function() {\n\t\t$('input[type=\"checkbox\"]').each(function() {\n\t\t\t$(this).addClass($(this).attr('id'));\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\t/* external links */\n\t$links  = db_fetch_assoc('SELECT * FROM external_links ORDER BY sortorder');\n\n\t$style_translate = array(\n\t\t'CONSOLE'    => __('Console'),\n\t\t'TAB'        => __('Top Tab'),\n\t\t'FRONT'      => __('Bottom Console'),\n\t\t'FRONTTOP'   => __('Top Console')\n\t);\n\n\tprint \"<tr class='tableHeader'><th colspan='2'>\" . __('External Link Permissions') . \"</th></tr>\\n\";\n\tprint \"<tr class='odd'><td colspan='4'><table style='width:100%;'><tr><td class='realms'>\\n\";\n\tif (cacti_sizeof($links)) {\n\t\t$j = 1;\n\n\t\tforeach($links as $r) {\n\t\t\tif ($j == 1) {\n\t\t\t\tprint \"<tr>\\n\";\n\t\t\t}\n\n\t\t\t$realm = $r['id'] + 10000;\n\n\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_group_realm WHERE group_id = ? AND realm_id = ?', array(get_request_var('id', 0), $realm))) > 0) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\tunset($all_realms[$realm]);\n\n\t\t\tprint \"<td class='realms'>\\n\";\n\n\t\t\tswitch($r['style']) {\n\t\t\tcase 'CONSOLE':\n\t\t\t\t$description = $style_translate[$r['style']] . ': ' . ($r['extendedstyle'] == '' ? 'External Links' : $r['extendedstyle']) . '/' . $r['title'];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$description = $style_translate[$r['style']] . ': ' . ucfirst($r['title']);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tform_checkbox('section' . $realm, $old_value, $description, '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\n\t\t\tprint \"</td>\\n\";\n\n\t\t\tif ($j == 5) {\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t\t$j = 1;\n\t\t\t} else {\n\t\t\t\t$j++;\n\t\t\t}\n\t\t}\n\n\t\tif ($j > 1) {\n\t\t\tprint \"<td class='realms' colspan='\" . (5-$j) . \"'></td>\\n\";\n\t\t\tprint \"</tr>\\n\";\n\t\t}\n\t}\n\tprint \"</table></td></tr>\\n\";\n\n\t/* do plugin realms */\n\t$realms = db_fetch_assoc('SELECT pc.name, pr.id AS realm_id, pr.display\n\t\tFROM plugin_config AS pc\n\t\tINNER JOIN plugin_realms AS pr\n\t\tON pc.directory = pr.plugin\n\t\tORDER BY pc.name, pr.display');\n\n\tprint \"<tr class='tableHeader'><th colspan='2'>\" . __('Plugin Permissions') . \"</th></tr>\\n\";\n\tprint \"<tr class='odd'><td colspan='4'><table style='width:100%;'><tr><td class='realms'>\\n\";\n\tif (cacti_sizeof($realms)) {\n\t\t$last_plugin = 'none';\n\t\t$i = 1;\n\t\t$j = 1;\n\n\t\tforeach($realms as $r) {\n\t\t\t$break = false;\n\n\t\t\tif ($last_plugin != $r['name'] && $last_plugin != 'none') {\n\t\t\t\t$break = true;\n\n\t\t\t\tif ($j == 5) {\n\t\t\t\t\tprint \"</tr><tr>\\n\";\n\t\t\t\t\t$break = true;;\n\t\t\t\t\t$j = 1;\n\t\t\t\t} else {\n\t\t\t\t\t$j++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($break) {\n\t\t\t\tprint \"</td><td class='realms'>\\n\";\n\t\t\t}\n\n\t\t\tif ($break || $i == 1) {\n\t\t\t\tprint '<i>' . $r['name'] . \"</i><br>\\n\";\n\t\t\t}\n\n\t\t\t$realm = $r['realm_id'] + 100;\n\n\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_group_realm WHERE group_id = ? AND realm_id = ?', array(get_request_var('id', 0), $realm))) > 0) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\tunset($all_realms[$realm]);\n\n\t\t\t$pos = (strpos($user_auth_realms[$realm], '->') !== false ? strpos($user_auth_realms[$realm], '->')+2:0);\n\n\t\t\tform_checkbox('section' . $realm, $old_value, substr($user_auth_realms[$realm], $pos), '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\n\t\t\t$last_plugin = $r['name'];\n\n\t\t\t$i++;\n\t\t}\n\t}\n\n\t/* get the old PIA 1.x realms */\n\tif (cacti_sizeof($all_realms)) {\n\t\tif ($break) {\n\t\t\tprint \"</td><td class='realms'>\\n\";\n\t\t}\n\n\t\tprint \"<strong>Legacy 1.x Plugins</strong><br>\\n\";\n\t\tforeach($all_realms as $realm => $name) {\n\t\t\tif (cacti_sizeof(db_fetch_assoc_prepared('SELECT realm_id FROM user_auth_group_realm WHERE group_id = ? AND realm_id = ?', array(get_request_var('id', 0), $realm))) > 0) {\n\t\t\t\t$old_value = 'on';\n\t\t\t} else {\n\t\t\t\t$old_value = '';\n\t\t\t}\n\n\t\t\t$pos = (strpos($user_auth_realms[$realm], '->') !== false ? strpos($user_auth_realms[$realm], '->')+2:0);\n\n\t\t\tform_checkbox('section' . $realm, $old_value, substr($user_auth_realms[$realm], $pos), '', '', '', (!isempty_request_var('id') ? 1 : 0)); print '<br>';\n\n\t\t}\n\t}\n\n\tprint \"</td></tr></table></td></tr>\\n\";\n\n\thtml_end_box();\n\n\tform_hidden_box('save_component_realm_perms','1','');\n\tform_hidden_box('tab','realms','');\n\tform_hidden_box('id',get_request_var('id'),'');\n\n\tform_save_button('user_group_admin.php', 'return');\n}\n\nfunction user_group_settings_edit($header_label) {\n\tglobal $settings_user, $tabs_graphs, $graph_views;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tform_start('user_group_admin.php', 'chk');\n\n\thtml_start_box( __('User Settings %s', $header_label), '100%', true, '3', 'center', '');\n\n\tforeach ($settings_user as $tab_short_name => $tab_fields) {\n\t\t$collapsible = true;\n\n\t\tprint \"<div class='spacer tableHeader\" . ($collapsible ? ' collapsible':'') . \"' id='row_$tab_short_name'><div style='cursor:pointer;' class='tableSubHeaderColumn'>\" . $tabs_graphs[$tab_short_name] . ($collapsible ? \"<div style='float:right;padding-right:4px;'><i class='fa fa-angle-double-up'></i></div>\":\"\") . \"</div></div>\\n\";\n\n\t\t$form_array = array();\n\n\t\tforeach ($tab_fields as $field_name => $field_array) {\n\t\t\t$form_array += array($field_name => $tab_fields[$field_name]);\n\n\t\t\tif ((isset($field_array['items'])) && (is_array($field_array['items']))) {\n\t\t\t\tforeach ($field_array['items'] as $sub_field_name => $sub_field_array) {\n\t\t\t\t\tif (graph_config_value_exists($sub_field_name, get_request_var('id'))) {\n\t\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['form_id'] = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t$form_array[$field_name]['items'][$sub_field_name]['value'] =  db_fetch_cell_prepared('SELECT value FROM settings_user_group WHERE name = ? AND group_id = ?', array($sub_field_name, get_request_var('id')));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (graph_config_value_exists($field_name, get_request_var('id'))) {\n\t\t\t\t\t$form_array[$field_name]['form_id'] = 1;\n\t\t\t\t}\n\n\t\t\t\t$form_array[$field_name]['value'] = db_fetch_cell_prepared('SELECT value FROM settings_user_group WHERE name = ? AND group_id = ?', array($field_name, get_request_var('id')));\n\t\t\t}\n\t\t}\n\n\t\tdraw_edit_form(\n\t\t\tarray(\n\t\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t\t'fields' => $form_array\n\t\t\t)\n\t\t);\n\t}\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('save_component_graph_settings','1','');\n\tform_hidden_box('tab','settings','');\n\tform_hidden_box('id',get_request_var('id'),'');\n\n\tform_save_button('user_group_admin.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\tvar themeFonts=<?php print read_config_option('font_method');?>;\n\n\tfunction graphSettings() {\n\t\tif (themeFonts == 1) {\n\t\t\t\t$('#row_fonts').hide();\n\t\t\t\t$('#row_custom_fonts').hide();\n\t\t\t\t$('#row_title_size').hide();\n\t\t\t\t$('#row_title_font').hide();\n\t\t\t\t$('#row_legend_size').hide();\n\t\t\t\t$('#row_legend_font').hide();\n\t\t\t\t$('#row_axis_size').hide();\n\t\t\t\t$('#row_axis_font').hide();\n\t\t\t\t$('#row_unit_size').hide();\n\t\t\t\t$('#row_unit_font').hide();\n\t\t} else {\n\t\t\tvar custom_fonts = $('#custom_fonts').is(':checked');\n\n\t\t\tswitch(custom_fonts) {\n\t\t\tcase true:\n\t\t\t\t$('#row_fonts').show();\n\t\t\t\t$('#row_title_size').show();\n\t\t\t\t$('#row_title_font').show();\n\t\t\t\t$('#row_legend_size').show();\n\t\t\t\t$('#row_legend_font').show();\n\t\t\t\t$('#row_axis_size').show();\n\t\t\t\t$('#row_axis_font').show();\n\t\t\t\t$('#row_unit_size').show();\n\t\t\t\t$('#row_unit_font').show();\n\t\t\t\tbreak;\n\t\t\tcase false:\n\t\t\t\t$('#row_fonts').show();\n\t\t\t\t$('#row_title_size').hide();\n\t\t\t\t$('#row_title_font').hide();\n\t\t\t\t$('#row_legend_size').hide();\n\t\t\t\t$('#row_legend_font').hide();\n\t\t\t\t$('#row_axis_size').hide();\n\t\t\t\t$('#row_axis_font').hide();\n\t\t\t\t$('#row_unit_size').hide();\n\t\t\t\t$('#row_unit_font').hide();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t$(function() {\n\t\tgraphSettings();\n\t});\n\n\t</script>\n\t<?php\n}\n\n/* --------------------------\n    User Administration\n   -------------------------- */\n\nfunction group_edit() {\n\tglobal $config, $fields_user_group_edit;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('tab', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-z_A-Z]+)$/')));\n\t/* ==================================================== */\n\n\t/* present a tabbed interface */\n\t$tabs = array(\n\t\t'general'  => __('General'),\n\t\t'members'  => __('Members'),\n\t\t'realms'   => __('Permissions'),\n\t\t'permsg'   => __('Graph Perms'),\n\t\t'permsd'   => __('Device Perms'),\n\t\t'permste'  => __('Template Perms'),\n\t\t'permstr'  => __('Tree Perms'),\n\t\t'settings' => __('User Settings')\n\t);\n\n\t$tabs = api_plugin_hook_function('ugroup_tabs', $tabs);\n\tif (!isempty_request_var('id')) {\n\t\t$group = db_fetch_row_prepared('SELECT * FROM user_auth_group WHERE id = ?', array(get_request_var('id')));\n\t\t$header_label = __('User Group Management [edit: %s]', html_escape($group['name']));\n\t} else {\n\t\t$header_label = __('User Group Management [new]');\n\t}\n\n    /* set the default tab */\n    load_current_session_value('tab', 'sess_ugroup_tab', 'general');\n    $current_tab = get_nfilter_request_var('tab');\n\n\tif (cacti_sizeof($tabs) && !isempty_request_var('id')) {\n\t\t$i = 0;\n\n\t\t/* draw the tabs */\n\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\\n\";\n\n\t\tforeach (array_keys($tabs) as $tab_short_name) {\n\t\t\tprint \"<li class='subTab'><a class='tab\" . (($tab_short_name == $current_tab) ? \" selected'\" : \"'\") .\n\t\t\t\t\" href='\" . html_escape($config['url_path'] .\n\t\t\t\t'user_group_admin.php?action=edit&id=' . get_request_var('id') .\n\t\t\t\t'&tab=' . $tab_short_name) .\n\t\t\t\t\"'>\" . $tabs[$tab_short_name] . \"</a></li>\\n\";\n\n\t\t\t$i++;\n\t\t}\n\n\t\tprint \"</ul></nav></div>\\n\";\n\t}\n\n\tswitch(get_request_var('tab')) {\n\tcase 'general':\n\t\tapi_plugin_hook_function('user_group_admin_edit', (isset($user) ? get_request_var('id') : 0));\n\n\t\tform_start('user_group_admin.php');\n\n\t\thtml_start_box( $header_label, '100%', true, '3', 'center', '');\n\n\t\tdraw_edit_form(array(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($fields_user_group_edit, (isset($group) ? $group : array()))\n\t\t));\n\n\t\thtml_end_box(true, true);\n\n\t\tform_save_button('user_group_admin.php', 'return');\n\n\t\tbreak;\n\tcase 'settings':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_group_admin.php&header=false');\n\t\t}\n\n\t\tuser_group_settings_edit($header_label);\n\n\t\tbreak;\n\tcase 'realms':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_group_admin.php&header=false');\n\t\t}\n\n\t\tuser_group_realms_edit($header_label);\n\n\t\tbreak;\n\tcase 'permsg':\n\tcase 'permsd':\n\tcase 'permste':\n\tcase 'permstr':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_group_admin.php&header=false');\n\t\t}\n\n\t\tuser_group_graph_perms_edit(get_request_var('tab'), $header_label);\n\n\t\tbreak;\n\tcase 'members':\n\t\tif (isempty_request_var('id')) {\n\t\t\theader('Location: user_group_admin.php&header=false');\n\t\t}\n\n\t\tuser_group_members_edit($header_label);\n\n\t\tbreak;\n\t}\n}\n\nfunction user_group() {\n\tglobal $group_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ugad');\n\t/* ================= input validation ================= */\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_group_admin.php?rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_group_admin.php?clear=1';\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#form_group').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box( __('User Group Management'), '100%', '', '3', 'center', 'user_group_admin.php?action=edit&tab=general');\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='form_group' action='user_group_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Groups');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __x('filter: use', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>' onClick='applyFilter()'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __x('filter: reset', 'Clear');?>' title='<?php print __esc('Clear Filters');?>' onClick='clearFilter()'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* if the number of rows is -1, set it to the default */\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (name LIKE '%\" . get_request_var('filter') . \"%' OR description LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(*)\n\t\tFROM user_auth_group\n\t\t$sql_where\");\n\n\t$group_list = db_fetch_assoc(\"SELECT uag.id, uag.name, uag.description,\n\t\tuag.policy_graphs, uag.policy_hosts, uag.policy_graph_templates,\n\t\tuag.enabled, count(uagm.group_id) AS members\n\t\tFROM user_auth_group AS uag\n\t\tLEFT JOIN user_auth_group_members AS uagm\n\t\tON uag.id = uagm.group_id\n\t\t$sql_where\n\t\tGROUP BY uag.id\n\t\tORDER BY \" . get_request_var('sort_column') . ' ' . get_request_var('sort_direction') .\n\t\t' LIMIT ' . ($rows * (get_request_var('page') - 1)) . ',' . $rows);\n\n\t$nav = html_nav_bar('user_group_admin.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 8, __('Groups'), 'page', 'main');\n\n\tform_start('user_group_admin.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'name'                   => array(__('Group Name'), 'ASC'),\n\t\t'members'                => array(__('Members'), 'ASC'),\n\t\t'description'            => array(__('Description'), 'ASC'),\n\t\t'policy_graphs'          => array(__('Graph Policy'), 'ASC'),\n\t\t'policy_hosts'           => array(__('Device Policy'), 'ASC'),\n\t\t'policy_graph_templates' => array(__('Template Policy'), 'ASC'),\n\t\t'enabled'                => array(__('Enabled'), 'ASC')\n\t);\n\n\thtml_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n\tif (cacti_sizeof($group_list)) {\n\t\tforeach ($group_list as $group) {\n\t\t\tif ($group['enabled'] == 'on') {\n\t\t\t\t$enabled = __('Yes');\n\t\t\t} else {\n\t\t\t\t$enabled = __('No');\n\t\t\t}\n\n\t\t\tform_alternate_row('line' . $group['id'], true);\n\t\t\tform_selectable_cell(filter_value($group['name'], get_request_var('filter'), 'user_group_admin.php?action=edit&tab=general&id=' . $group['id']), $group['id']);\n\t\t\tform_selectable_cell(($group['members'] > 0 ? number_format_i18n($group['members'], 0):'None'), $group['id']);\n\t\t\tform_selectable_cell(filter_value($group['description'], get_request_var('filter')), $group['id']);\n\t\t\tform_selectable_cell(($group['policy_graphs'] == 1 ? __('ALLOW') : __('DENY') ), $group['id']);\n\t\t\tform_selectable_cell(($group['policy_hosts'] == 1 ? __('ALLOW') : __('DENY') ), $group['id']);\n\t\t\tform_selectable_cell(($group['policy_graph_templates'] == 1 ? __('ALLOW') : __('DENY') ), $group['id']);\n\t\t\tform_selectable_cell($enabled, $group['id']);\n\t\t\tform_checkbox_cell($group['name'], $group['id']);\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"' . (cacti_sizeof($display_text)+1) . '\"><em>' . __('No User Groups Found') . '</em></td></tr>';\n\t}\n\n\thtml_end_box(false);\n\n\tif (cacti_sizeof($group_list)) {\n\t\tprint $nav;\n\t}\n\n\tdraw_actions_dropdown($group_actions);\n\n\tform_end();\n}\n\nfunction process_graph_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t),\n\t\t'graph_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ugg');\n\t/* ================= input validation ================= */\n}\n\nfunction process_device_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t),\n\t\t'host_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ugd');\n\t/* ================= input validation ================= */\n}\n\nfunction process_template_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t),\n\t\t'host_template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ugte');\n\t/* ================= input validation ================= */\n}\n\nfunction process_tree_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ugtr');\n\t/* ================= input validation ================= */\n}\n\nfunction process_member_request_vars() {\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('num_rows_table')\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'associated' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => 'true'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_ugm');\n\t/* ================= input validation ================= */\n}\n\nfunction graph_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_group_admin.php?action=edit&tab=permsg&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&graph_template_id=' + $('#graph_template_id').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_group_admin.php?action=edit&tab=permsg&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box( __('Graph Permissions %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_group_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='graph_template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('graph_template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('graph_template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$graph_templates = db_fetch_assoc('SELECT DISTINCT gt.id, gt.name\n\t\t\t\t\t\t\t\tFROM graph_templates AS gt\n\t\t\t\t\t\t\t\tINNER JOIN graph_local AS gl\n\t\t\t\t\t\t\t\tON gl.graph_template_id = gt.id\n\t\t\t\t\t\t\t\tORDER BY name');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($graph_templates)) {\n\t\t\t\t\t\t\t\tforeach ($graph_templates as $gt) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $gt['id'] . \"'\"; if (get_request_var('graph_template_id') == $gt['id']) { print ' selected'; } print '>' . html_escape($gt['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Graphs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __x('filter: use','Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __x('filter: reset','Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t<input type='hidden' name='tab' value='permsg'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction device_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_group_admin.php?action=edit&tab=permsd&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&host_template_id=' + $('#host_template_id').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_group_admin.php?action=edit&tab=permsd&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box( __('Devices Permission %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_group_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='host_template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('host_template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('host_template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$host_templates = db_fetch_assoc('SELECT id, name FROM host_template ORDER BY name');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($host_templates) > 0) {\n\t\t\t\t\t\t\t\tforeach ($host_templates as $host_template) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $host_template['id'] . \"'\"; if (get_request_var('host_template_id') == $host_template['id']) { print ' selected'; } print '>' . html_escape($host_template['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Devices');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __x('filter: use', 'Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __x('filter: reset', 'Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t<input type='hidden' name='tab' value='permsd'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction template_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_group_admin.php?action=edit&tab=permste&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_group_admin.php?action=edit&tab=permste&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box( __('Template Permission %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_group_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Templates');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __x('filter: use', 'Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __x('filter: reset', 'Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t<input type='hidden' name='tab' value='permste'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction tree_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_group_admin.php?action=edit&tab=permstr&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_group_admin.php?action=edit&tab=permstr&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box( __('Tree Permission %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_group_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Trees');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Exceptions');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __x('filter: use', 'Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __x('filter: reset', 'Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t<input type='hidden' name='tab' value='permstr'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction member_filter($header_label) {\n\tglobal $config, $item_rows;\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction applyFilter() {\n\t\tstrURL  = 'user_group_admin.php?action=edit&tab=members&id=<?php print get_request_var('id');?>'\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&associated=' + $('#associated').is(':checked');\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'user_group_admin.php?action=edit&tab=members&id=<?php print get_request_var('id');?>&clear=true'\n\t\tstrURL = strURL + '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#forms').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\t</script>\n\t<?php\n\n\thtml_start_box( __('User Membership %s', html_escape($header_label)), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t<form id='forms' method='post' action='user_group_admin.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>' onChange='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Users');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' name='associated' id='associated' onChange='applyFilter()' <?php print (get_request_var('associated') == 'true' || get_request_var('associated') == 'on' ? 'checked':'');?>>\n\t\t\t\t\t\t\t<label for='associated'><?php print __('Show Members');?></label>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __x('filter: use', 'Go');?>' onClick='applyFilter()' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __x('filter reset', 'Clear');?>' onClick='clearFilter()' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='edit'>\n\t\t\t<input type='hidden' name='tab' value='members'>\n\t\t\t<input type='hidden' name='id' value='<?php print get_request_var('id');?>'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/api_data_source.php');\ninclude_once('./lib/boost.php');\ninclude_once('./lib/clog_webapi.php');\ninclude_once('./lib/poller.php');\ninclude_once('./lib/utility.php');\n\n/* set default action */\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'clear_poller_cache':\n\t\t/* obtain timeout settings */\n\t\t$max_execution = ini_get('max_execution_time');\n\t\tini_set('max_execution_time', '0');\n\t\trepopulate_poller_cache();\n\t\tini_set('max_execution_time', $max_execution);\n\t\theader('Location: utilities.php?action=view_poller_cache');exit;\n\t\tbreak;\n\tcase 'rebuild_resource_cache':\n\t\trebuild_resource_cache();\n\t\theader('Location: utilities.php?header=false');exit;\n\t\tbreak;\n\tcase 'view_snmp_cache':\n\t\ttop_header();\n\t\tutilities_view_snmp_cache();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'view_poller_cache':\n\t\ttop_header();\n\t\tutilities_view_poller_cache();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'view_logfile':\n\t\tutilities_view_logfile();\n\t\tbreak;\n\tcase 'clear_logfile':\n\t\tutilities_clear_logfile();\n\t\tutilities_view_logfile();\n\t\tbreak;\n\tcase 'purge_logfile':\n\t\tclog_purge_logfile();\n\t\tutilities_view_logfile();\n\t\tbreak;\n\tcase 'view_cleaner':\n\t\ttop_header();\n\t\tutilities_view_cleaner();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'view_user_log':\n\t\ttop_header();\n\t\tutilities_view_user_log();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'clear_user_log':\n\t\tutilities_clear_user_log();\n\t\tutilities_view_user_log();\n\t\tbreak;\n\tcase 'view_tech':\n\t\t$php_info = utilities_php_modules();\n\n\t\ttop_header();\n\t\tutilities_view_tech($php_info);\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'view_boost_status':\n\t\ttop_header();\n\t\tboost_display_run_status();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'view_snmpagent_cache':\n\t\ttop_header();\n\t\tsnmpagent_utilities_run_cache();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'rebuild_snmpagent_cache';\n\t\tsnmpagent_cache_rebuilt();\n\t\theader('Location: utilities.php?action=view_snmpagent_cache');exit;\n\t\tbreak;\n\tcase 'view_snmpagent_events':\n\t\ttop_header();\n\t\tsnmpagent_utilities_run_eventlog();\n\t\tbottom_footer();\n\t\tbreak;\n\tcase 'ajax_hosts':\n\t\tget_allowed_ajax_hosts();\n\n\t\tbreak;\n\tcase 'ajax_hosts_noany':\n\t\tget_allowed_ajax_hosts(false);\n\n\t\tbreak;\n\tdefault:\n\t\tif (!api_plugin_hook_function('utilities_action', get_request_var('action'))) {\n\t\t\ttop_header();\n\t\t\tutilities();\n\t\t\tbottom_footer();\n\t\t}\n\t\tbreak;\n}\n\n/* -----------------------\n    Utilities Functions\n   ----------------------- */\n\nfunction rebuild_resource_cache() {\n\tdb_execute('DELETE FROM settings WHERE name LIKE \"md5dirsum%\"');\n\tdb_execute('TRUNCATE TABLE poller_resource_cache');\n\n\traise_message('resource_cache_rebuild');\n\n\tcacti_log('NOTE: Poller Resource Cache scheduled for rebuild by user ' . get_username($_SESSION['sess_user_id']), false, 'WEBUI');\n}\n\nfunction utilities_view_tech($php_info = '') {\n\tglobal $database_default, $config, $rrdtool_versions, $poller_options, $input_types;\n\n\t/* Get table status */\n\t$tables = db_fetch_assoc_prepared('SELECT *\n\t\tFROM information_schema.tables\n\t\tWHERE table_schema = ?', array($database_default));\n\n\t/* Get poller stats */\n\t$poller_item = db_fetch_assoc('SELECT action, count(action) AS total\n\t\tFROM poller_item\n\t\tGROUP BY action');\n\n\t/* Get system stats */\n\t$host_count  = db_fetch_cell('SELECT COUNT(*) FROM host');\n\t$graph_count = db_fetch_cell('SELECT COUNT(*) FROM graph_local');\n\t$data_count  = db_fetch_assoc('SELECT i.type_id, COUNT(i.type_id) AS total\n\t\tFROM data_template_data AS d, data_input AS i\n\t\tWHERE d.data_input_id = i.id\n\t\tAND local_data_id <> 0\n\t\tGROUP BY i.type_id');\n\n\t/* Get RRDtool version */\n\t$rrdtool_version = 'Unknown';\n\tif ((file_exists(read_config_option('path_rrdtool'))) && ((function_exists('is_executable')) && (is_executable(read_config_option('path_rrdtool'))))) {\n\n\t\t$out_array = array();\n\t\texec(cacti_escapeshellcmd(read_config_option('path_rrdtool')), $out_array);\n\t\tif (cacti_sizeof($out_array) > 0) {\n\t\t\tif (preg_match('/^RRDtool ([0-9.]+)/', $out_array[0], $m)) {\n\t\t\t\tpreg_match('/^([0-9]+\\.[0-9]+)\\./', $m[1], $m2);\n\t\t\t\t$rrdtool_release = $m[1];\n\t\t\t\t$rrdtool_version = $m2[1];\n\t\t\t}\n\t\t}\n\t}\n\n\t/* Get SNMP cli version */\n\tif ((file_exists(read_config_option('path_snmpget'))) && ((function_exists('is_executable')) && (is_executable(read_config_option('path_snmpget'))))) {\n\t\t$snmp_version = shell_exec(cacti_escapeshellcmd(read_config_option('path_snmpget')) . ' -V 2>&1');\n\t} else {\n\t\t$snmp_version = \"<span class='deviceDown'>\" . __('NET-SNMP Not Installed or its paths are not set.  Please install if you wish to monitor SNMP enabled devices.') . \"</span>\";\n\t}\n\n\t/* Check RRDtool issues */\n\t$rrdtool_errors = array();\n\tif (cacti_version_compare($rrdtool_version, get_rrdtool_version(), '<')) {\n\t\t$rrdtool_errors[] = \"<span class='deviceDown'>\" . __('ERROR: Installed RRDtool version does not exceed configured version.<br>Please visit the %s and select the correct RRDtool Utility Version.', \"<a href='\" . html_escape('settings.php?tab=general') . \"'>\" . __('Configuration Settings') . '</a>') . \"</span>\";\n\t}\n\n\t$graph_gif_count = db_fetch_cell('SELECT COUNT(*) FROM graph_templates_graph WHERE image_format_id = 2');\n\tif ($graph_gif_count > 0) {\n\t\t$rrdtool_errors[] = \"<span class='deviceDown'>\" . __('ERROR: RRDtool 1.2.x+ does not support the GIF images format, but %d\" graph(s) and/or templates have GIF set as the image format.', $graph_gif_count) . '</span>';\n\t}\n\n\t/* Get spine version */\n\t$spine_version = 'Unknown';\n\tif ((file_exists(read_config_option('path_spine'))) && ((function_exists('is_executable')) && (is_executable(read_config_option('path_spine'))))) {\n\t\t$out_array = array();\n\t\texec(read_config_option('path_spine') . ' --version', $out_array);\n\t\tif (cacti_sizeof($out_array) > 0) {\n\t\t\t$spine_version = $out_array[0];\n\t\t}\n\t}\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('tab', FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => '/^([a-z_A-Z]+)$/')));\n\t/* ==================================================== */\n\n\t/* present a tabbed interface */\n\t$tabs = array(\n\t\t'summary'  => __('Summary'),\n\t\t'database' => __('Database'),\n\t\t'phpinfo'  => __('PHP Info'),\n\t);\n\n\t/* set the default tab */\n\tload_current_session_value('tab', 'sess_ts_tabs', 'summary');\n\t$current_tab = get_nfilter_request_var('tab');\n\n\t$header_label = __('Technical Support [%s]', $tabs[get_request_var('tab')]);\n\n\tif (cacti_sizeof($tabs)) {\n\t\t$i = 0;\n\n\t\t/* draw the tabs */\n\t\tprint \"<div class='tabs'><nav><ul role='tablist'>\\n\";\n\n\t\tforeach (array_keys($tabs) as $tab_short_name) {\n\t\t\tprint \"<li class='subTab'><a class='tab\" . (($tab_short_name == $current_tab) ? \" selected'\" : \"'\") .\n\t\t\t\t\" href='\" . html_escape($config['url_path'] .\n\t\t\t\t'utilities.php?action=view_tech' .\n\t\t\t\t'&tab=' . $tab_short_name) .\n\t\t\t\t\"'>\" . $tabs[$tab_short_name] . \"</a></li>\\n\";\n\n\t\t\t$i++;\n\t\t}\n\n\t\tapi_plugin_hook('utilities_tab');\n\n\t\tprint \"</ul></nav></div>\\n\";\n\t}\n\n\t/* Display tech information */\n\thtml_start_box($header_label, '100%', '', '3', 'center', '');\n\n\tif (get_request_var('tab') == 'summary') {\n\t\thtml_section_header(__('General Information'), 2);\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Date') . \"</td>\\n\";\n\t\tprint '<td>' . date('r') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tapi_plugin_hook_function('custom_version_info');\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Cacti Version') . \"</td>\\n\";\n\t\tprint '<td>' . CACTI_VERSION . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Cacti OS') . \"</td>\\n\";\n\t\tprint '<td>' . $config['cacti_server_os'] . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('RSA Fingerprint') . \"</td>\\n\";\n\t\tprint '<td>' . read_config_option('rsa_fingerprint') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('NET-SNMP Version') . \"</td>\\n\";\n\t\tprint '<td>' . $snmp_version . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('RRDtool Version') . ' ' . __('Configured') . \"</td>\\n\";\n\t\tprint '<td>' . get_rrdtool_version() . \"+</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('RRDtool Version') . ' ' . __('Found') . \"</td>\\n\";\n\t\tprint '<td>' . $rrdtool_release . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tif (!empty($rrdtool_errors)) {\n\t\t\tform_alternate_row();\n\t\t\tprint \"<td>&nbsp;</td>\\n\";\n\t\t\t$br = '';\n\t\t\tprint \"<td>\";\n\t\t\tforeach ($rrdtool_errors as $rrdtool_error) {\n\t\t\t\tprint $br . $rrdtool_error;\n\t\t\t\t$br = '<br/>';\n\t\t\t}\n\t\t\tprint \"</td>\\n\";\n\t\t\tform_end_row();\n\t\t}\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Devices') . \"</td>\\n\";\n\t\tprint '<td>' . number_format_i18n($host_count, -1) . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Graphs') . \"</td>\\n\";\n\t\tprint '<td>' . number_format_i18n($graph_count, -1) . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Data Sources') . \"</td>\\n\";\n\t\tprint '<td>';\n\t\t$data_total = 0;\n\t\tif (cacti_sizeof($data_count)) {\n\t\t\tforeach ($data_count as $item) {\n\t\t\t\tprint $input_types[$item['type_id']] . ': ' . number_format_i18n($item['total'], -1) . '<br>';\n\t\t\t\t$data_total += $item['total'];\n\t\t\t}\n\t\t\tprint __('Total: %s', number_format_i18n($data_total, -1));\n\t\t} else {\n\t\t\tprint \"<span class='deviceDown'>0</span>\";\n\t\t}\n\t\tprint \"</td>\\n\";\n\t\tform_end_row();\n\n\t\thtml_section_header(__('Poller Information'), 2);\n\n\t\tform_alternate_row();\n\t\tprint \"<td>Interval</td>\\n\";\n\t\tprint '<td>' . read_config_option('poller_interval') . \"</td>\\n\";\n\t\tif (file_exists(read_config_option('path_spine')) && $poller_options[read_config_option('poller_type')] == 'spine') {\n\t\t\t$type = $spine_version;\n\t\t        if (!strpos($spine_version, CACTI_VERSION)) {\n\t\t    \t    $type .= '<span class=\"textError\"> (' . __('Different version of Cacti and Spine!') . ')</span>';\n\t\t\t}\n\t\t} else {\n\t\t\t$type = $poller_options[read_config_option('poller_type')];\n\t\t}\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Type') . \"</td>\\n\";\n\t\tprint '<td>' . $type . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Items') . \"</td>\\n\";\n\t\tprint '<td>';\n\t\t$total = 0;\n\t\tif (cacti_sizeof($poller_item)) {\n\t\t\tforeach ($poller_item as $item) {\n\t\t\t\tprint __('Action[%s]', $item['action']) . ': ' . number_format_i18n($item['total'], -1) . '<br>';\n\t\t\t\t$total += $item['total'];\n\t\t\t}\n\t\t\tprint __('Total: %s', number_format_i18n($total, -1));\n\t\t} else {\n\t\t\tprint \"<span class='deviceDown'>\" . __('No items to poll') . \"</span>\";\n\t\t}\n\t\tprint \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Concurrent Processes') . \"</td>\\n\";\n\t\tprint '<td>' . read_config_option('concurrent_processes') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Max Threads') . \"</td>\\n\";\n\t\tprint '<td>' . read_config_option('max_threads') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('PHP Servers') . \"</td>\\n\";\n\t\tprint '<td>' . read_config_option('php_servers') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Script Timeout') . \"</td>\\n\";\n\t\tprint '<td>' . read_config_option('script_timeout') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Max OID') . \"</td>\\n\";\n\t\tprint '<td>' . read_config_option('max_get_size') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Last Run Statistics') . \"</td>\\n\";\n\t\tprint '<td>' . read_config_option('stats_poller') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\t/* Get System Memory */\n\t\t$memInfo = utilities_get_system_memory();\n\n\t\tif (cacti_sizeof($memInfo)) {\n\t\t\thtml_section_header(__('System Memory'), 2);\n\n\t\t\tforeach($memInfo as $name => $value) {\n\t\t\t\tif ($config['cacti_server_os'] == 'win32') {\n\t\t\t\t\tform_alternate_row();\n\t\t\t\t\tprint \"<td>$name</td>\\n\";\n\t\t\t\t\tprint '<td>' . number_format_i18n($value/1000, 2) . \" MB</td>\\n\";\n\t\t\t\t\tform_end_row();\n\t\t\t\t} else {\n\t\t\t\t\tswitch($name) {\n\t\t\t\t\tcase 'SwapTotal':\n\t\t\t\t\tcase 'SwapFree':\n\t\t\t\t\tcase 'Cached':\n\t\t\t\t\tcase 'MemTotal':\n\t\t\t\t\tcase 'MemFree':\n\t\t\t\t\tcase 'MemAvailable':\n\t\t\t\t\tcase 'Buffers':\n\t\t\t\t\tcase 'Active':\n\t\t\t\t\tcase 'Inactive':\n\t\t\t\t\t\tform_alternate_row();\n\t\t\t\t\t\tprint \"<td>$name</td>\\n\";\n\t\t\t\t\t\tprint '<td>' . number_format_i18n($value, 2) . \"</td>\\n\";\n\t\t\t\t\t\tform_end_row();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tform_end_row();\n\t\t}\n\n\t\thtml_section_header(__('PHP Information'), 2);\n\n\t\tform_alternate_row();\n\t\tprint \"<td>\" . __('PHP Version') . \"</td>\\n\";\n\t\tif (version_compare(PHP_VERSION, '5.5.0') >= 0) {\n\t\t\tprint '<td>' . PHP_VERSION . \"</td>\\n\";\n\t\t} else {\n\t\t\tprint '<td>' . PHP_VERSION . \"</br><span class='deviceDown'>\" . __('PHP Version 5.5.0+ is recommended due to strong password hashing support.') . \"</span></td>\\n\";\n\t\t}\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint \"<td>\" . __('PHP OS') . \"</td>\\n\";\n\t\tprint '<td>' . PHP_OS . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint \"<td>\" . __('PHP uname') . \"</td>\\n\";\n\t\tprint '<td>';\n\t\tif (function_exists('php_uname')) {\n\t\t\tprint php_uname();\n\t\t} else {\n\t\t\tprint __('N/A');\n\t\t}\n\t\tprint \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint \"<td>\" . __('PHP SNMP') . \"</td>\\n\";\n\t\tprint '<td>';\n\t\tif (function_exists('snmpget')) {\n\t\t\tprint __('Installed');\n\t\t} else {\n\t\t\tprint __('Not Installed');\n\t\t}\n\t\tprint \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint \"<td>max_execution_time</td>\\n\";\n\t\tprint '<td>' . ini_get('max_execution_time') . \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tform_alternate_row();\n\t\tprint \"<td>memory_limit</td>\\n\";\n\t\tprint '<td>' . ini_get('memory_limit');\n\n\t\t/* Calculate memory suggestion based off of data source count */\n\t\t$memory_suggestion = $data_total * 32768;\n\n\t\t/* Set minimum - 16M */\n\t\tif ($memory_suggestion < 16777216) {\n\t\t\t$memory_suggestion = 16777216;\n\t\t}\n\t\t/* Set maximum - 512M */\n\t\tif ($memory_suggestion > 536870912) {\n\t\t\t$memory_suggestion = 536870912;\n\t\t}\n\t\t/* Suggest values in 8M increments */\n\t\t$memory_suggestion = round($memory_suggestion / 8388608) * 8388608;\n\t\tif (memory_bytes(ini_get('memory_limit')) < $memory_suggestion) {\n\t\t\tprint \"<br><span class='deviceDown'>\";\n\t\t\tif ((ini_get('memory_limit') == -1)) {\n\t\t\t\tprint __(\"You've set memory limit to 'unlimited'.\") . \"<br>\";\n\t\t\t}\n\t\t\tprint __('It is highly suggested that you alter you php.ini memory_limit to %s or higher.', memory_readable($memory_suggestion)) . ' <br/>' .\n\t\t\t\t__('This suggested memory value is calculated based on the number of data source present and is only to be used as a suggestion, actual values may vary system to system based on requirements.');\n\t\t\tprint '</span><br>';\n\t\t}\n\t\tprint \"</td>\\n\";\n\t\tform_end_row();\n\n\t\tutilities_get_mysql_recommendations();\n\t} elseif (get_request_var('tab') == 'database') {\n\t\thtml_section_header(__('MySQL Table Information - Sizes in KBytes'), 2);\n\n\t\tform_alternate_row();\n\t\tprint \"\t\t<td colspan='2' style='text-align:left;padding:0px'>\";\n\t\tif (cacti_sizeof($tables) > 0) {\n\t\t\tprint \"<table id='tables' class='cactiTable' style='width:100%'>\\n\";\n\t\t\tprint \"<thead>\\n\";\n\t\t\tprint \"<tr class='tableHeader'>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn'>\" . __('Name') . \"</th>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn'>\" . __('Engine') . \"</th>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Rows') . \"</th>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Avg Row Length') . \"</th>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Data Length') . \"</th>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn right'>\" . __('Index Length') . \"</th>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn'>\" . __('Collation') . \"</th>\\n\";\n\t\t\tprint \"  <th class='tableSubHeaderColumn'>\" . __('Comment') . \"</th>\\n\";\n\t\t\tprint \"</tr>\\n\";\n\t\t\tprint \"</thead>\\n\";\n\t\t\tforeach ($tables as $table) {\n\t\t\t\tform_alternate_row();\n\t\t\t\tprint '<td>' . $table['TABLE_NAME'] . \"</td>\\n\";\n\t\t\t\tprint '<td>' . $table['ENGINE'] . \"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\">' . number_format_i18n($table['TABLE_ROWS'], -1) . \"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\">' . number_format_i18n($table['AVG_ROW_LENGTH'], -1) . \"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\">' . number_format_i18n($table['DATA_LENGTH'], -1) . \"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\">' . number_format_i18n($table['INDEX_LENGTH'], -1) . \"</td>\\n\";\n\t\t\t\tprint '<td>' . $table['TABLE_COLLATION'] . \"</td>\\n\";\n\t\t\t\tprint '<td>' . $table['TABLE_COMMENT'] . \"</td>\\n\";\n\t\t\t\tform_end_row();\n\t\t\t}\n\n\t\t\tprint \"</table>\\n\";\n\t\t} else {\n\t\t\tprint __('Unable to retrieve table status');\n\t\t}\n\t\tprint \"</td>\\n\";\n\n\t\tform_end_row();\n\t} else {\n\t\thtml_section_header(__('PHP Module Information'), 2);\n\t\tform_alternate_row();\n\t\t$php_info = str_replace(\n\t\t\tarray('width=\"600\"', 'th colspan=\"2\"', ','),\n\t\t\tarray('', 'th class=\"subHeaderColumn\"', ', '),\n\t\t\t$php_info\n\t\t);\n\t\tprint \"<td colspan='2'>\" . $php_info . \"</td>\\n\";\n\n\t\tform_end_row();\n\t}\n\n\thtml_end_box();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#tables').tablesorter({\n\t\t\twidgets: ['zebra'],\n\t\t\twidgetZebra: { css: ['even', 'odd'] },\n\t\t\theaderTemplate: '<div class=\"textSubHeaderDark\">{content} {icon}</div>',\n\t\t\tcssIconAsc: 'fa-sort-up',\n\t\t\tcssIconDesc: 'fa-sort-down',\n\t\t\tcssIconNone: 'fa-sort',\n\t\t\tcssIcon: 'fa'\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction utilities_view_user_log() {\n\tglobal $auth_realms, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'time',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'DESC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'username' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => '-1',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'result' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_userlog');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type=\"text/javascript\">\n\tfunction clearFilter() {\n\t\tstrURL = urlPath+'utilities.php?action=view_user_log&clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction purgeLog() {\n\t\tstrURL = urlPath+'utilities.php?action=clear_user_log&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#purge').click(function() {\n\t\t\tpurgeLog();\n\t\t});\n\n\t\t$('#form_userlog').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\tfunction applyFilter() {\n\t\tstrURL  = urlPath+'utilities.php?username=' + $('#username').val();\n\t\tstrURL += '&result=' + $('#result').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&action=view_user_log';\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\t</script>\n\t<?php\n\n\thtml_start_box(__('User Login History'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_userlog' action='utilities.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('User');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='username' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('username') == '-1') {?> selected<?php }?>><?php print __('All');?></option>\n\t\t\t\t\t\t\t<option value='-2'<?php if (get_request_var('username') == '-2') {?> selected<?php }?>><?php print __('Deleted/Invalid');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$users = db_fetch_assoc('SELECT DISTINCT username FROM user_auth ORDER BY username');\n\n\t\t\t\t\t\t\tif (cacti_sizeof($users)) {\n\t\t\t\t\t\t\t\tforeach ($users as $user) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $user['username'] . \"'\"; if (get_request_var('username') == $user['username']) { print ' selected'; } print '>' . $user['username'] . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Result');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='result' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('result') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='1'<?php if (get_request_var('result') == '1') {?> selected<?php }?>><?php print __('Success - Pswd');?></option>\n\t\t\t\t\t\t\t<option value='2'<?php if (get_request_var('result') == '2') {?> selected<?php }?>><?php print __('Success - Token');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('result') == '0') {?> selected<?php }?>><?php print __('Failed');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Attempts');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc_x('Button: use filter settings', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc_x('Button: reset filter settings', 'Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='purge' value='<?php print __esc_x('Button: delete all table entries', 'Purge');?>' title='<?php print __esc('Purge User Log');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='view_user_log'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = '';\n\n\t/* filter by username */\n\tif (get_request_var('username') == '-2') {\n\t\t$sql_where = 'WHERE ul.username NOT IN (SELECT DISTINCT username FROM user_auth)';\n\t} elseif (get_request_var('username') != '-1') {\n\t\t$sql_where = \"WHERE ul.username='\" . get_request_var('username') . \"'\";\n\t}\n\n\t/* filter by result */\n\tif (get_request_var('result') != '-1') {\n\t\tif ($sql_where != '') {\n\t\t\t$sql_where .= ' AND ul.result=' . get_request_var('result');\n\t\t} else {\n\t\t\t$sql_where = 'WHERE ul.result=' . get_request_var('result');\n\t\t}\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\tif ($sql_where != '') {\n\t\t\t$sql_where .= \" AND (ul.username LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\t\tOR ul.time LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\t\tOR ua.full_name LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\t\tOR ul.ip LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t} else {\n\t\t\t$sql_where = \"WHERE (ul.username LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\t\tOR ul.time LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\t\tOR ua.full_name LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\t\tOR ul.ip LIKE '%\" . get_request_var('filter') . \"%')\";\n\t\t}\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(*)\n\t\tFROM user_auth AS ua\n\t\tRIGHT JOIN user_log AS ul\n\t\tON ua.username=ul.username\n\t\t$sql_where\");\n\n\t$user_log_sql = \"SELECT ul.username, ua.full_name, ua.realm,\n\t\tul.time, ul.result, ul.ip\n\t\tFROM user_auth AS ua\n\t\tRIGHT JOIN user_log AS ul\n\t\tON ua.username=ul.username\n\t\t$sql_where\n\t\tORDER BY \" . get_request_var('sort_column') . ' ' . get_request_var('sort_direction') . '\n\t\tLIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$user_log = db_fetch_assoc($user_log_sql);\n\n\t$nav = html_nav_bar('utilities.php?action=view_user_log&username=' . get_request_var('username') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 6, __('User Logins'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'username'  => array(__('User'), 'ASC'),\n\t\t'full_name' => array(__('Full Name'), 'ASC'),\n\t\t'realm'     => array(__('Authentication Realm'), 'ASC'),\n\t\t'time'      => array(__('Date'), 'DESC'),\n\t\t'result'    => array(__('Result'), 'DESC'),\n\t\t'ip'        => array(__('IP Address'), 'DESC')\n\t);\n\n\thtml_header_sort($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), 1, 'utilities.php?action=view_user_log');\n\n\tif (cacti_sizeof($user_log)) {\n\t\tforeach ($user_log as $item) {\n\t\t\tform_alternate_row('', true);\n\t\t\t?>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php print filter_value($item['username'], get_request_var('filter'));?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php if (isset($item['full_name'])) {\n\t\t\t\t\t\tprint filter_value($item['full_name'], get_request_var('filter'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint __('(User Removed)');\n\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php if (isset($auth_realms[$item['realm']])) {\n\t\t\t\t\t\tprint filter_value($auth_realms[$item['realm']], get_request_var('filter'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint __('N/A');\n\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php print filter_value($item['time'], get_request_var('filter'));?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php print ($item['result'] == 0 ? 'Failed':($item['result'] == 1 ? 'Success - Pswd':'Success - Token'));?>\n\t\t\t</td>\n\t\t\t<td class='nowrap'>\n\t\t\t\t<?php print filter_value($item['ip'], get_request_var('filter'));?>\n\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<?php\n\t\t}\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($user_log)) {\n\t\tprint $nav;\n\t}\n}\n\nfunction utilities_clear_user_log() {\n\t$users = db_fetch_assoc('SELECT DISTINCT username FROM user_auth');\n\n\tif (cacti_sizeof($users)) {\n\t\t/* remove active users */\n\t\tforeach ($users as $user) {\n\t\t\t$total_login_rows = db_fetch_cell_prepared('SELECT COUNT(username)\n\t\t\t\tFROM user_log\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND result IN (1)',\n\t\t\t\tarray($user['username']));\n\n\t\t\t$total_token_rows = db_fetch_cell_prepared('SELECT COUNT(username)\n\t\t\t\tFROM user_log\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND result IN (2)',\n\t\t\t\tarray($user['username']));\n\n\t\t\tif ($total_login_rows > 1) {\n\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\tFROM user_log\n\t\t\t\t\tWHERE username = ?\n\t\t\t\t\tAND result IN(1)\n\t\t\t\t\tORDER BY time LIMIT ' . ($total_login_rows - 1),\n\t\t\t\t\tarray($user['username']));\n\t\t\t}\n\n\t\t\tif ($total_token_rows > 1) {\n\t\t\t\tdb_execute_prepared('DELETE\n\t\t\t\t\tFROM user_log\n\t\t\t\t\tWHERE username = ?\n\t\t\t\t\tAND result IN(2)\n\t\t\t\t\tORDER BY time\n\t\t\t\t\tLIMIT ' . ($total_token_rows - 1),\n\t\t\t\t\tarray($user['username']));\n\t\t\t}\n\n\t\t\tdb_execute_prepared('DELETE\n\t\t\t\tFROM user_log\n\t\t\t\tWHERE username = ?\n\t\t\t\tAND result = 0',\n\t\t\t\tarray($user['username']));\n\t\t}\n\n\t\t/* delete inactive users */\n\t\tdb_execute('DELETE\n\t\t\tFROM user_log\n\t\t\tWHERE user_id NOT IN (SELECT id FROM user_auth)\n\t\t\tOR username NOT IN (SELECT username FROM user_auth)');\n\t}\n}\n\nfunction utilities_view_logfile() {\n\tglobal $log_tail_lines, $page_refresh_interval, $config;\n\n\t$logfile = read_config_option('path_cactilog');\n\t$logbase = basename($logfile);\n\n\tif (isset_request_var('filename')) {\n\t\t$requestedFile = dirname($logfile) . '/' . basename(get_nfilter_request_var('filename'));\n\t\tif (file_exists($requestedFile)) {\n\t\t\t$logfile = $requestedFile;\n\t\t} else {\n\t\t\t$logfile = read_config_option('path_cactilog');\n\t\t}\n\t}\n\n\tif ($logfile == '') {\n\t\t$logfile = $config['base_path'] . '/log/cacti.log';\n\t}\n\n\tif (get_nfilter_request_var('filename') != '') {\n\t\tif (strpos(get_nfilter_request_var('filename'), $logbase) === false) {\n\t\t\traise_message('clog_invalid');\n\t\t\theader('Location: utilities.php?action=view_logfile&filename=' . $logbase);\n\t\t\texit(0);\n\t\t}\n\t}\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'tail_lines' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'rfilter' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_IS_REGEX,\n\t\t\t'pageset' => true,\n\t\t\t'default' => ''\n\t\t\t),\n\t\t'message_type' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'reverse' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'refresh' => array(\n\t\t\t'filter'  => FILTER_VALIDATE_INT,\n\t\t\t'default' => read_config_option('log_refresh_interval')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_log');\n\t/* ================= input validation ================= */\n\n\t$page_nr = get_request_var('page');\n\n\t$page = 'utilities.php?action=view_logfile&header=false';\n\t$page .= '&filename=' . basename($logfile) . '&page=' . $page_nr;\n\n\t$refresh = array(\n\t\t'seconds' => get_request_var('refresh'),\n\t\t'page'    => $page,\n\t\t'logout'  => 'false'\n\t);\n\n\tset_page_refresh($refresh);\n\n\ttop_header();\n\n\t?>\n\t<script type='text/javascript'>\n\n\tfunction purgeLog() {\n\t\tstrURL = urlPath+'utilities.php?action=purge_logfile&header=false&filename='+$('#filename').val();\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refreshme').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#purge').click(function() {\n\t\t\tpurgeLog();\n\t\t});\n\n\t\t$('#form_logfile').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\n\tfunction applyFilter() {\n\t\tstrURL  = urlPath+'utilities.php' +\n\t\t\t'?tail_lines=' + $('#tail_lines').val() +\n\t\t\t'&message_type=' + $('#message_type').val() +\n\t\t\t'&refresh=' + $('#refresh').val() +\n\t\t\t'&reverse=' + $('#reverse').val() +\n\t\t\t'&rfilter=' + base64_encode($('#rfilter').val()) +\n\t\t\t'&filename=' + $('#filename').val() +\n\t\t\t'&action=view_logfile' +\n\t\t\t'&header=false';\n\t\trefreshMSeconds=$('#refresh').val()*1000;\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL  = urlPath+'utilities.php?clear=1';\n\t\tstrURL += '&action=view_logfile';\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Log Filters'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_logfile' action='utilities.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('File');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='filename'>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$configLogPath = read_config_option('path_cactilog');\n\t\t\t\t\t\t\t$configLogBase = basename($configLogPath);\n\t\t\t\t\t\t\t$selectedFile  = basename(get_nfilter_request_var('filename'));\n\n\t\t\t\t\t\t\tif ($configLogPath == '') {\n\t\t\t\t\t\t\t\t$logPath = $config['base_path'] . '/log/';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$logPath = dirname($configLogPath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (is_readable($logPath)) {\n\t\t\t\t\t\t\t\t$files = scandir($logPath);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$files = array('cacti.log');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (cacti_sizeof($files)) {\n\t\t\t\t\t\t\t\tforeach($files as $logFile) {\n\t\t\t\t\t\t\t\t\tif (in_array($logFile, array('.', '..', '.htaccess'))) {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (strpos($logFile, $configLogBase) === false) {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $logFile . \"'\";\n\n\t\t\t\t\t\t\t\t\tif ($selectedFile == $logFile) {\n\t\t\t\t\t\t\t\t\t\tprint ' selected';\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tprint '>' . $logFile . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Tail Lines');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='tail_lines' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tforeach($log_tail_lines AS $tail_lines => $display_text) {\n\t\t\t\t\t\t\t\tprint \"<option value='\" . $tail_lines . \"'\"; if (get_request_var('tail_lines') == $tail_lines) { print ' selected'; } print '>' . $display_text . \"</option>\\n\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refreshme' value='<?php print __esc_x('Button: use filter settings', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc_x('Button: reset filter settings', 'Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='purge' value='<?php print __esc_x('Button: delete all table entries', 'Purge');?>' title='<?php print __esc('Purge Log');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Type');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='message_type' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('message_type') == '-1') {?> selected<?php }?>><?php print __('All');?></option>\n\t\t\t\t\t\t\t<option value='1'<?php if (get_request_var('message_type') == '1') {?> selected<?php }?>><?php print __('Stats');?></option>\n\t\t\t\t\t\t\t<option value='2'<?php if (get_request_var('message_type') == '2') {?> selected<?php }?>><?php print __('Warnings');?></option>\n\t\t\t\t\t\t\t<option value='3'<?php if (get_request_var('message_type') == '3') {?> selected<?php }?>><?php print __('Errors');?></option>\n\t\t\t\t\t\t\t<option value='4'<?php if (get_request_var('message_type') == '4') {?> selected<?php }?>><?php print __('Debug');?></option>\n\t\t\t\t\t\t\t<option value='5'<?php if (get_request_var('message_type') == '5') {?> selected<?php }?>><?php print __('SQL Calls');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Display Order');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='reverse' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='1'<?php if (get_request_var('reverse') == '1') {?> selected<?php }?>><?php print __('Newest First');?></option>\n\t\t\t\t\t\t\t<option value='2'<?php if (get_request_var('reverse') == '2') {?> selected<?php }?>><?php print __('Oldest First');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Refresh');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='refresh' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tforeach($page_refresh_interval AS $seconds => $display_text) {\n\t\t\t\t\t\t\t\tprint \"<option value='\" . $seconds . \"'\"; if (get_request_var('refresh') == $seconds) { print ' selected'; } print '>' . $display_text . \"</option>\\n\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='rfilter' size='75' value='<?php print html_escape_request_var('rfilter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='view_logfile'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* read logfile into an array and display */\n\t$total_rows      = 0;\n\t$number_of_lines = get_request_var('tail_lines') < 0 ? read_config_option('max_display_rows') : get_request_var('tail_lines');\n\n\t$logcontents = tail_file($logfile, $number_of_lines, get_request_var('message_type'), get_request_var('rfilter'), $page_nr, $total_rows);\n\n\tif (get_request_var('reverse') == 1) {\n\t\t$logcontents = array_reverse($logcontents);\n\t}\n\n\tif (get_request_var('message_type') > 0) {\n\t\t$start_string = __('Log [Total Lines: %d - Non-Matching Items Hidden]', $total_rows);\n\t} else {\n\t\t$start_string = __('Log [Total Lines: %d - All Items Shown]', $total_rows);\n\t}\n\n\t$rfilter      = get_request_var('rfilter');\n\t$reverse      = get_request_var('reverse');\n\t$refreshTime  = get_request_var('refresh');\n\t$message_type = get_request_var('message_type');\n\t$tail_lines   = get_request_var('tail_lines');\n\t$base_url     = 'utilities.php?action=view_logfile&rfilter='.$rfilter.'&reverse='.$reverse.'&refresh='.$refreshTime.'&message_type='.$message_type.'&tail_lines='.$tail_lines.'&filename='.basename($logfile);\n\n\t$nav = html_nav_bar($base_url, MAX_DISPLAY_PAGES, $page_nr, $number_of_lines, $total_rows, 13, __('Entries'), 'page', 'main');\n\n\techo $nav;\n\n\thtml_start_box($start_string, '100%', '', '3', 'center', '');\n\n\t$linecolor = false;\n\tforeach ($logcontents as $item) {\n\t\t$host_start = strpos($item, 'Device[');\n\t\t$ds_start   = strpos($item, 'DS[');\n\n\t\tif (!$host_start && !$ds_start) {\n\t\t\t$new_item = html_escape($item);\n\t\t} else {\n\t\t\t$new_item = '';\n\t\t\twhile ($host_start) {\n\t\t\t\t$host_end   = strpos($item, ']', $host_start);\n\t\t\t\t$host_id    = substr($item, $host_start + 7, $host_end - ($host_start + 7));\n\t\t\t\t$new_item  .= html_escape(substr($item, 0, $host_start + 7)) . \"<a href='\" . html_escape('host.php?action=edit&id=' . $host_id) . \"'>\" . html_escape(substr($item, $host_start + 7, $host_end - ($host_start + 7))) . '</a>';\n\t\t\t\t$item       = substr($item, $host_end);\n\t\t\t\t$host_start = strpos($item, 'Device[');\n\t\t\t}\n\n\t\t\t$ds_start = strpos($item, 'DS[');\n\t\t\twhile ($ds_start) {\n\t\t\t\t$ds_end    = strpos($item, ']', $ds_start);\n\t\t\t\t$ds_id     = substr($item, $ds_start + 3, $ds_end - ($ds_start + 3));\n\t\t\t\t$new_item .= html_escape(substr($item, 0, $ds_start + 3)) . \"<a href='\" . html_escape('data_sources.php?action=ds_edit&id=' . $ds_id) . \"'>\" . html_escape(substr($item, $ds_start + 3, $ds_end - ($ds_start + 3))) . '</a>';\n\t\t\t\t$item      = substr($item, $ds_end);\n\t\t\t\t$ds_start  = strpos($item, 'DS[');\n\t\t\t}\n\n\t\t\t$new_item .= html_escape($item);\n\t\t}\n\n\t\t/* get the background color */\n\t\tif (strpos($new_item, 'ERROR') !== false || strpos($new_item, 'FATAL') !== false) {\n\t\t\t$class = 'clogError';\n\t\t} elseif (strpos($new_item, 'WARN') !== false) {\n\t\t\t$class = 'clogWarning';\n\t\t} elseif (strpos($new_item, ' SQL ') !== false) {\n\t\t\t$class = 'clogSQL';\n\t\t} elseif (strpos($new_item, 'DEBUG') !== false) {\n\t\t\t$class = 'clogDebug';\n\t\t} elseif (strpos($new_item, 'STATS') !== false) {\n\t\t\t$class = 'clogStats';\n\t\t} else {\n\t\t\tif ($linecolor) {\n\t\t\t\t$class = 'odd';\n\t\t\t} else {\n\t\t\t\t$class = 'even';\n\t\t\t}\n\t\t\t$linecolor = !$linecolor;\n\t\t}\n\n\t\tprint \"<tr class='\" . $class . \"'><td>\" . $new_item . \"</td></tr>\\n\";\n\t}\n\n\thtml_end_box();\n\n\tif ($total_rows) {\n\t\techo $nav;\n\t}\n\n\tbottom_footer();\n}\n\nfunction utilities_clear_logfile() {\n\tload_current_session_value('refresh', 'sess_logfile_refresh', read_config_option('log_refresh_interval'));\n\n\t$refresh['seconds'] = get_request_var('refresh');\n\t$refresh['page']    = 'utilities.php?action=view_logfile&header=false';\n\t$refresh['logout']  = 'false';\n\n\tset_page_refresh($refresh);\n\n\ttop_header();\n\n\t$logfile = read_config_option('path_cactilog');\n\n\tif ($logfile == '') {\n\t\t$logfile = './log/cacti.log';\n\t}\n\n\thtml_start_box(__('Clear Cacti Log'), '100%', '', '3', 'center', '');\n\tif (file_exists($logfile)) {\n\t\tif (is_writable($logfile)) {\n\t\t\t/* fill in the current date for printing in the log */\n\t\t\tif (defined('CACTI_DATE_TIME_FORMAT')) {\n\t\t\t\t$date = date(CACTI_DATE_TIME_FORMAT);\n\t\t\t} else {\n\t\t\t\t$date = date('Y-m-d H:i:s');\n\t\t\t}\n\n\t\t\t$log_fh = fopen($logfile, 'w');\n\t\t\tfwrite($log_fh, __('%s - WEBUI NOTE: Cacti Log Cleared from Web Management Interface.', $date) . PHP_EOL);\n\t\t\tfclose($log_fh);\n\t\t\tprint '<tr><td>' . __('Cacti Log Cleared') . '</td></tr>';\n\t\t} else {\n\t\t\tprint \"<tr><td class='deviceDown'><b>\" . __('Error: Unable to clear log, no write permissions.') . \"<b></td></tr>\";\n\t\t}\n\t} else {\n\t\tprint \"<tr><td class='deviceDown'><b>\" . __('Error: Unable to clear log, file does not exist.'). \"</b></td></tr>\";\n\t}\n\thtml_end_box();\n}\n\nfunction utilities_view_snmp_cache() {\n\tglobal $poller_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'with_index' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '0'\n\t\t\t),\n\t\t'host_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'snmp_query_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'poller_action' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_usnmp');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$refresh['seconds'] = '300';\n\t$refresh['page']    = 'utilities.php?action=view_snmp_cache&header=false';\n\t$refresh['logout']  = 'false';\n\n\tset_page_refresh($refresh);\n\n\t?>\n\t<script type=\"text/javascript\">\n\n\tfunction applyFilter() {\n\t\tstrURL  = urlPath+'utilities.php?host_id=' + $('#host_id').val();\n\t\tstrURL += '&snmp_query_id=' + $('#snmp_query_id').val();\n\t\tif ($('#with_index').is(':checked')) {\n\t\t\tstrURL += '&with_index=1';\n\t\t} else {\n\t\t\tstrURL += '&with_index=0';\n\t\t}\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&action=view_snmp_cache';\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = urlPath+'utilities.php?action=view_snmp_cache&clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_snmpcache').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Data Query Cache Items'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_snmpcache' action='utilities.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<?php print html_host_filter(get_request_var('host_id'));?>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Query Name');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='snmp_query_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('host_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (get_request_var('host_id') == -1) {\n\t\t\t\t\t\t\t\t$snmp_queries = db_fetch_assoc('SELECT DISTINCT sq.id, sq.name\n\t\t\t\t\t\t\t\t\tFROM host_snmp_cache AS hsc\n\t\t\t\t\t\t\t\t\tINNER JOIN snmp_query AS sq\n\t\t\t\t\t\t\t\t\tON hsc.snmp_query_id=sq.id\n\t\t\t\t\t\t\t\t\tINNER JOIN host AS h\n\t\t\t\t\t\t\t\t\tON hsc.host_id=h.id\n\t\t\t\t\t\t\t\t\tORDER by sq.name');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$snmp_queries = db_fetch_assoc_prepared(\"SELECT DISTINCT sq.id, sq.name\n\t\t\t\t\t\t\t\t\tFROM host_snmp_cache AS hsc\n\t\t\t\t\t\t\t\t\tINNER JOIN snmp_query AS sq\n\t\t\t\t\t\t\t\t\tON hsc.snmp_query_id=sq.id\n\t\t\t\t\t\t\t\t\tINNER JOIN host AS h\n\t\t\t\t\t\t\t\t\tON hsc.host_id=h.id\n\t\t\t\t\t\t\t\t\tORDER by sq.name\", array(get_request_var('host_id')));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (cacti_sizeof($snmp_queries)) {\n\t\t\t\t\t\t\t\tforeach ($snmp_queries as $snmp_query) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $snmp_query['id'] . \"'\"; if (get_request_var('snmp_query_id') == $snmp_query['id']) { print ' selected'; } print '>' . html_escape($snmp_query['name']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc_x('Button: use filter settings', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc_x('Button: reset filter settings', 'Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Rows');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='checkbox' id='with_index' onChange='applyFilter()' title='<?php print __esc('Allow the search term to include the index column');?>' <?php if (get_request_var('with_index') == 1) { print ' checked '; }?>>\n\t\t\t\t\t\t<label for='with_index'><?php print __('Include Index') ?></label>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='view_snmp_cache'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = '';\n\n\t/* filter by host */\n\tif (get_request_var('host_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('host_id') == '0') {\n\t\t$sql_where .= ' AND h.id=0';\n\t} elseif (!isempty_request_var('host_id')) {\n\t\t$sql_where .= ' AND h.id=' . get_request_var('host_id');\n\t}\n\n\t/* filter by query name */\n\tif (get_request_var('snmp_query_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (!isempty_request_var('snmp_query_id')) {\n\t\t$sql_where .= ' AND hsc.snmp_query_id=' . get_request_var('snmp_query_id');\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= \" AND (h.description LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR sq.name LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR hsc.field_name LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR hsc.field_value LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR hsc.oid LIKE '%\" . get_request_var('filter') . \"%'\";\n\t\tif (get_request_var('with_index') == 1) {\n\t\t\t$sql_where .= \" OR hsc.snmp_index LIKE '%\" . get_request_var('filter') . \"%'\";\n\t\t}\n\t\t$sql_where .= \")\";\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM host_snmp_cache AS hsc\n\t\tINNER JOIN snmp_query AS sq\n\t\tON hsc.snmp_query_id = sq.id\n\t\tINNER JOIN host AS h\n\t\tON hsc.host_id = h.id\n\t\tWHERE hsc.host_id = h.id\n\t\tAND hsc.snmp_query_id = sq.id\n\t\t$sql_where\");\n\n\t$snmp_cache_sql = \"SELECT hsc.*, h.description, sq.name\n\t\tFROM host_snmp_cache AS hsc\n\t\tINNER JOIN snmp_query AS sq\n\t\tON hsc.snmp_query_id = sq.id\n\t\tINNER JOIN host AS h\n\t\tON hsc.host_id = h.id\n\t\tWHERE hsc.host_id = h.id\n\t\tAND hsc.snmp_query_id = sq.id\n\t\t$sql_where\n\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$snmp_cache = db_fetch_assoc($snmp_cache_sql);\n\n\t$nav = html_nav_bar('utilities.php?action=view_snmp_cache&host_id=' . get_request_var('host_id') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 6, __('Entries'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header(array(__('Device'), __('Data Query Name'), __('Index'), __('Field Name'), __('Field Value'), __('OID')));\n\n\t$i = 0;\n\tif (cacti_sizeof($snmp_cache)) {\n\tforeach ($snmp_cache as $item) {\n\t\tform_alternate_row();\n\t\t?>\n\t\t<td>\n\t\t\t<?php print filter_value($item['description'], get_request_var('filter'));?>\n\t\t</td>\n\t\t<td>\n\t\t\t<?php print filter_value($item['name'], get_request_var('filter'));?>\n\t\t</td>\n\t\t<td>\n\t\t\t<?php print $item['snmp_index'];?>\n\t\t</td>\n\t\t<td>\n\t\t\t<?php print filter_value($item['field_name'], get_request_var('filter'));?>\n\t\t</td>\n\t\t<td>\n\t\t\t<?php print filter_value($item['field_value'], get_request_var('filter'));?>\n\t\t</td>\n\t\t<td>\n\t\t\t<?php print filter_value($item['oid'], get_request_var('filter'));?>\n\t\t</td>\n\t\t</tr>\n\t\t<?php\n\t\t}\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tprint $nav;\n\t}\n}\n\nfunction utilities_view_poller_cache() {\n\tglobal $poller_actions, $item_rows;\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'dtd.name_cache',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'host_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'template_id' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'poller_action' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_poller');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$refresh['seconds'] = '300';\n\t$refresh['page']    = 'utilities.php?action=view_poller_cache';\n\t$refresh['logout']  = 'false';\n\n\tset_page_refresh($refresh);\n\n\t?>\n\t<script type=\"text/javascript\">\n\n\tfunction applyFilter() {\n\t\tstrURL  = urlPath+'utilities.php?poller_action=' + $('#poller_action').val();\n\t\tstrURL += '&action=view_poller_cache';\n\t\tstrURL += '&host_id=' + $('#host_id').val();\n\t\tstrURL += '&template_id=' + $('#template_id').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = urlPath+'utilities.php?action=view_poller_cache&clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_pollercache').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_start_box(__('Poller Cache Items'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t<form id='form_pollercache' action='utilities.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<?php print html_host_filter(get_request_var('host_id'));?>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Template');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='template_id' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('template_id') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('template_id') == '0') {?> selected<?php }?>><?php print __('None');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (get_request_var('host_id') > 0) {\n\t\t\t\t\t\t\t\t$sql_where = 'WHERE dl.host_id = ' . get_request_var('host_id');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$sql_where = '';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$templates = db_fetch_assoc(\"SELECT DISTINCT dt.id, dt.name\n\t\t\t\t\t\t\t\tFROM data_template AS dt\n\t\t\t\t\t\t\t\tINNER JOIN data_local AS dl\n\t\t\t\t\t\t\t\tON dt.id=dl.data_template_id\n\t\t\t\t\t\t\t\t$sql_where\n\t\t\t\t\t\t\t\tORDER BY name\");\n\n\t\t\t\t\t\t\tif (cacti_sizeof($templates)) {\n\t\t\t\t\t\t\t\tforeach ($templates as $template) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $template['id'] . \"'\"; if (get_request_var('template_id') == $template['id']) { print ' selected'; } print '>' . title_trim(html_escape($template['name']), 40) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='submit' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc_x('Button: use filter settings', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc_x('Button: reset filter settings', 'Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Action');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='poller_action' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('poller_action') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t<option value='0'<?php if (get_request_var('poller_action') == '0') {?> selected<?php }?>><?php print __('SNMP');?></option>\n\t\t\t\t\t\t\t<option value='1'<?php if (get_request_var('poller_action') == '1') {?> selected<?php }?>><?php print __('Script');?></option>\n\t\t\t\t\t\t\t<option value='2'<?php if (get_request_var('poller_action') == '2') {?> selected<?php }?>><?php print __('Script Server');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Entries');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<input type='hidden' name='action' value='view_poller_cache'>\n\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t/* form the 'where' clause for our main sql query */\n\t$sql_where = 'WHERE pi.local_data_id = dtd.local_data_id';\n\n\tif (get_request_var('poller_action') != '-1') {\n\t\t$sql_where .= \" AND pi.action='\" . get_request_var('poller_action') . \"'\";\n\t}\n\n\tif (get_request_var('host_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('host_id') == '0') {\n\t\t$sql_where .= ' AND pi.host_id = 0';\n\t} elseif (!isempty_request_var('host_id')) {\n\t\t$sql_where .= ' AND pi.host_id = ' . get_request_var('host_id');\n\t}\n\n\tif (get_request_var('template_id') == '-1') {\n\t\t/* Show all items */\n\t} elseif (get_request_var('template_id') == '0') {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' dtd.data_template_id=0';\n\t} elseif (!isempty_request_var('template_id')) {\n\t\t$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . ' dl.data_template_id=' . get_request_var('template_id');\n\t}\n\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= \" AND (dtd.name_cache LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR h.description LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR pi.arg1 LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR pi.hostname LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR pi.rrd_path  LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM poller_item AS pi\n\t\tINNER JOIN data_local AS dl\n\t\tON dl.id=pi.local_data_id\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dtd.local_data_id = pi.local_data_id\n\t\tINNER JOIN host AS h\n\t\tON pi.host_id = h.id\n\t\t$sql_where\");\n\n\t$poller_sql = \"SELECT pi.*, dtd.name_cache, h.description\n\t\tFROM poller_item AS pi\n\t\tINNER JOIN data_local AS dl\n\t\tON dl.id=pi.local_data_id\n\t\tINNER JOIN data_template_data AS dtd\n\t\tON dtd.local_data_id = pi.local_data_id\n\t\tINNER JOIN host AS h\n\t\tON pi.host_id = h.id\n\t\t$sql_where\n\t\tORDER BY \" . get_request_var('sort_column') . ' ' . get_request_var('sort_direction') . ', action ASC\n\t\tLIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$poller_cache = db_fetch_assoc($poller_sql);\n\n\t$nav = html_nav_bar('utilities.php?action=view_poller_cache&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 3, __('Entries'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$display_text = array(\n\t\t'dtd.name_cache' => array(__('Data Source Name'), 'ASC'),\n\t\t'h.description' => array(__('Device Description'), 'ASC'),\n\t\t'nosort' => array(__('Details'), 'ASC'));\n\n\thtml_header_sort($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), 1, 'utilities.php?action=view_poller_cache');\n\n\t$i = 0;\n\tif (cacti_sizeof($poller_cache)) {\n\t\tforeach ($poller_cache as $item) {\n\t\t\tif ($i % 2 == 0) {\n\t\t\t\t$class = 'odd';\n\t\t\t} else {\n\t\t\t\t$class = 'even';\n\t\t\t}\n\t\t\tprint \"<tr class='$class'>\\n\";\n\t\t\t\t?>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print filter_value($item['name_cache'], get_request_var('filter'), 'data_sources.php?action=ds_edit&id=' . $item['local_data_id']);?>\n\t\t\t\t</td>\n\n\t\t\t\t<td>\n\t\t\t\t\t<?php print $item['description'];?>\n\t\t\t\t</td>\n\n\t\t\t\t<td>\n\t\t\t\t<?php\n\t\t\t\tif ($item['action'] == 0) {\n\t\t\t\t\tif ($item['snmp_version'] != 3) {\n\t\t\t\t\t\t$details =\n\t\t\t\t\t\t\t__('SNMP Version:') . ' ' . $item['snmp_version'] . ', ' .\n\t\t\t\t\t\t\t__('Community:') . ' ' . $item['snmp_community'] . ', ' .\n\t\t\t\t\t\t\t__('OID:') . ' ' . filter_value($item['arg1'], get_request_var('filter'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$details =\n\t\t\t\t\t\t\t__('SNMP Version:') . ' ' . $item['snmp_version'] . ', ' .\n\t\t\t\t\t\t\t__('User:') . ' ' . $item['snmp_username'] . ', ' . __('OID:') . ' ' . $item['arg1'];\n\t\t\t\t\t}\n\t\t\t\t} elseif ($item['action'] == 1) {\n\t\t\t\t\t\t$details = __('Script:') . ' ' . filter_value($item['arg1'], get_request_var('filter'));\n\t\t\t\t} else {\n\t\t\t\t\t\t$details = __('Script Server:') . ' ' . filter_value($item['arg1'], get_request_var('filter'));\n\t\t\t\t}\n\n\t\t\t\tprint $details;\n\t\t\t\t?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<?php\n\t\t\tprint \"<tr class='$class'>\\n\";\n\t\t\t?>\n\t\t\t\t<td colspan='2'>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php print __('RRD:');?> <?php print $item['rrd_path'];?>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<?php\n\t\t\t$i++;\n\t\t}\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($poller_cache)) {\n\t\tprint $nav;\n\t}\n}\n\nfunction utilities() {\n\tglobal $utilities;\n\n\t$utilities[__('Technical Support')] = array(\n\t\t__('Technical Support') => array(\n\t\t\t'link'  => 'utilities.php?action=view_tech',\n\t\t\t'description' => __('Cacti technical support page.  Used by developers and technical support persons to assist with issues in Cacti.  Includes checks for common configuration issues.')\n\t\t),\n\t\t__('Log Administration') => array(\n\t\t\t'link'  => 'utilities.php?action=view_logfile',\n\t\t\t'description' => __('The Cacti Log stores statistic, error and other message depending on system settings.  This information can be used to identify problems with the poller and application.')\n\t\t),\n\t\t__('View User Log') => array(\n\t\t\t'link'  => 'utilities.php?action=view_user_log',\n\t\t\t'description' => __('Allows Administrators to browse the user log.  Administrators can filter and export the log as well.')\n\t\t)\n\t);\n\n\t$utilities[__('Poller Cache Administration')] = array(\n\t\t__('View Poller Cache') => array(\n\t\t\t'link'  => 'utilities.php?action=view_poller_cache',\n\t\t\t'description' => __('This is the data that is being passed to the poller each time it runs. This data is then in turn executed/interpreted and the results are fed into the RRDfiles for graphing or the database for display.')\n\t\t),\n\t\t__('View Data Query Cache') => array(\n\t\t\t'link'  => 'utilities.php?action=view_snmp_cache',\n\t\t\t'description' => __('The Data Query Cache stores information gathered from Data Query input types. The values from these fields can be used in the text area of Graphs for Legends, Vertical Labels, and GPRINTS as well as in CDEF\\'s.')\n\t\t),\n\t\t__('Rebuild Poller Cache') => array(\n\t\t\t'link'  => 'utilities.php?action=clear_poller_cache',\n\t\t\t'description' => __('The Poller Cache will be re-generated if you select this option. Use this option only in the event of a database crash if you are experiencing issues after the crash and have already run the database repair tools.  Alternatively, if you are having problems with a specific Device, simply re-save that Device to rebuild its Poller Cache.  There is also a command line interface equivalent to this command that is recommended for large systems.  <i class=\"deviceDown\">NOTE: On large systems, this command may take several minutes to hours to complete and therefore should not be run from the Cacti UI.  You can simply run \\'php -q cli/rebuild_poller_cache.php --help\\' at the command line for more information.</i>')\n\t\t),\n\t\t__('Rebuild Resource Cache') => array(\n\t\t\t'link'  => 'utilities.php?action=rebuild_resource_cache',\n\t\t\t'description' => __('When operating multiple Data Collectors in Cacti, Cacti will attempt to maintain state for key files on all Data Collectors.  This includes all core, non-install related website and plugin files.  When you force a Resource Cache rebuild, Cacti will clear the local Resource Cache, and then rebuild it at the next scheduled poller start.  This will trigger all Remote Data Collectors to recheck their website and plugin files for consistency.')\n\t\t),\n\t);\n\n\t$utilities[__('Boost Utilities')] = array(\n\t\t__('View Boost Status') => array(\n\t\t\t'link'  => 'utilities.php?action=view_boost_status',\n\t\t\t'description' => __('This menu pick allows you to view various boost settings and statistics associated with the current running Boost configuration.')\n\t\t),\n\t);\n\n\t$utilities[__('RRD Utilities')] = array(\n\t\t__('RRDfile Cleaner') => array(\n\t\t\t'link'  => 'rrdcleaner.php',\n\t\t\t'description' => __('When you delete Data Sources from Cacti, the corresponding RRDfiles are not removed automatically.  Use this utility to facilitate the removal of these old files.')\n\t\t),\n\t);\n\n\tif (snmpagent_enabled()) {\n\t\t$utilities[__('SNMPAgent Utilities')] = array(\n\t\t\t__('View SNMPAgent Cache') => array(\n\t\t\t\t'link'  => 'utilities.php?action=view_snmpagent_cache',\n\t\t\t\t'description' => __('This shows all objects being handled by the SNMPAgent.')\n\t\t\t),\n\t\t\t__('Rebuild SNMPAgent Cache') => array(\n\t\t\t\t'link'  => 'utilities.php?action=rebuild_snmpagent_cache',\n\t\t\t\t'description' => __('The SNMP cache will be cleared and re-generated if you select this option. Note that it takes another poller run to restore the SNMP cache completely.')\n\t\t\t),\n\t\t\t__('View SNMPAgent Notification Log') => array(\n\t\t\t\t'link'  => 'utilities.php?action=view_snmpagent_events',\n\t\t\t\t'description' => __('This menu pick allows you to view the latest events SNMPAgent has handled in relation to the registered notification receivers.')\n\t\t\t),\n\t\t\t__('SNMP Notification Receivers') => array(\n\t\t\t\t'link'  => 'managers.php',\n\t\t\t\t'description' => __('Allows Administrators to maintain SNMP notification receivers.')\n\t\t\t),\n\t\t);\n\t}\n\n\tapi_plugin_hook('utilities_array');\n\n\thtml_start_box(__('Cacti System Utilities'), '100%', '', '3', 'center', '');\n\n\tforeach($utilities as $header => $content) {\n\t\thtml_section_header($header, 2);\n\t\tforeach($content as $title => $details) {\n\t\t\tform_alternate_row();\n\t\t\tprint \"<td class='nowrap' style='vertical-align:top;'>\";\n\t\t\tprint \"<a class='hyperLink' href='\" . html_escape($details['link']) . \"'>\" . $title . \"</a>\";\n\t\t\tprint \"</td>\\n\";\n\t\t\tprint \"<td>\";\n\t\t\tprint $details['description'];\n\t\t\tprint \"</td>\\n\";\n\t\t\tform_end_row();\n\t\t}\n\t}\n\n\tapi_plugin_hook('utilities_list');\n\n\thtml_end_box();\n}\n\nfunction boost_display_run_status() {\n\tglobal $config, $refresh_interval, $boost_utilities_interval, $boost_refresh_interval, $boost_max_runtime;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('refresh');\n\t/* ==================================================== */\n\n\tload_current_session_value('refresh', 'sess_boost_utilities_refresh', '30');\n\n\t$last_run_time   = read_config_option('boost_last_run_time', true);\n\t$next_run_time   = read_config_option('boost_next_run_time', true);\n\n\t$rrd_updates     = read_config_option('boost_rrd_update_enable', true);\n\t$boost_cache     = read_config_option('boost_png_cache_enable', true);\n\n\t$max_records     = read_config_option('boost_rrd_update_max_records', true);\n\t$max_runtime     = read_config_option('boost_rrd_update_max_runtime', true);\n\t$update_interval = read_config_option('boost_rrd_update_interval', true);\n\t$peak_memory     = read_config_option('boost_peak_memory', true);\n\t$detail_stats    = read_config_option('stats_detail_boost', true);\n\n\t$refresh['seconds'] = get_request_var('refresh');\n\t$refresh['page']    = 'utilities.php?action=view_boost_status&header=false';\n\t$refresh['logout']  = 'false';\n\n\tset_page_refresh($refresh);\n\n\thtml_start_box(__('Boost Status'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<script type=\"text/javascript\">\n\n\tfunction applyFilter() {\n\t\tstrURL = urlPath+'utilities.php?action=view_boost_status&header=false&refresh=' + $('#refresh').val();\n\t\tloadPageNoHeader(strURL);\n\t}\n\t</script>\n\t<tr class='even'>\n\t\t<form id='form_boost_utilities_stats' method='post'>\n\t\t<td>\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class='nowrap'>\n\t\t\t\t\t\t<?php print __('Refresh Interval');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='refresh' name='refresh' onChange='applyFilter()'>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tforeach ($boost_utilities_interval as $key => $interval) {\n\t\t\t\t\t\t\tprint '<option value=\"' . $key . '\"'; if (get_request_var('refresh') == $key) { print ' selected'; } print '>' . $interval . '</option>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc('Refresh');?>' onClick='applyFilter()'>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td>\n\t\t</form>\n\t</tr>\n\t<?php\n\thtml_end_box(true);\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t/* get the boost table status */\n\t$boost_table_status = db_fetch_assoc(\"SELECT *\n\t\tFROM INFORMATION_SCHEMA.TABLES WHERE table_schema=SCHEMA()\n\t\tAND (table_name LIKE 'poller_output_boost_arch_%' OR table_name LIKE 'poller_output_boost')\");\n\n\t$pending_records = 0;\n\t$arch_records    = 0;\n\t$data_length     = 0;\n\t$engine          = '';\n\t$max_data_length = 0;\n\n\tforeach($boost_table_status as $table) {\n\t\tif ($table['TABLE_NAME'] == 'poller_output_boost') {\n\t\t\t$pending_records += $table['TABLE_ROWS'];\n\t\t} else {\n\t\t\t$arch_records += $table['TABLE_ROWS'];\n\t\t}\n\n\t\t$data_length    += $table['DATA_LENGTH'];\n\t\t$data_length    += $table['INDEX_LENGTH'];\n\t\t$engine          = $table['ENGINE'];\n\t\t$max_data_length = $table['MAX_DATA_LENGTH'];\n\t}\n\n\t$total_records  = $pending_records + $arch_records;\n\t$avg_row_length = ($total_records ? intval($data_length / $total_records) : 0);\n\n\t$total_data_sources = db_fetch_cell('SELECT COUNT(*) FROM poller_item');\n\n\t$boost_status = read_config_option('boost_poller_status', true);\n\tif ($boost_status != '') {\n\t\t$boost_status_array = explode(':', $boost_status);\n\n\t\t$boost_status_date  = $boost_status_array[1];\n\n\t\tif (substr_count($boost_status_array[0], 'complete'))    $boost_status_text = __('Idle');\n\t\telseif (substr_count($boost_status_array[0], 'running')) $boost_status_text = __('Running');\n\t\telseif (substr_count($boost_status_array[0], 'overrun')) $boost_status_text = __('Overrun Warning');\n\t\telseif (substr_count($boost_status_array[0], 'timeout')) $boost_status_text = __('Timed Out');\n\t\telse   $boost_status_text = __('Other');\n\t} else {\n\t\t$boost_status_text = __('Never Run');\n\t\t$boost_status_date = '';\n\t}\n\n\t$stats_boost = read_config_option('stats_boost', true);\n\tif ($stats_boost != '') {\n\t\t$stats_boost_array = explode(' ', $stats_boost);\n\n\t\t$stats_duration = explode(':', $stats_boost_array[0]);\n\t\t$boost_last_run_duration = $stats_duration[1];\n\n\t\t$stats_rrds = explode(':', $stats_boost_array[1]);\n\t\t$boost_rrds_updated = $stats_rrds[1];\n\t} else {\n\t\t$boost_last_run_duration = '';\n\t\t$boost_rrds_updated = '';\n\t}\n\n\t/* get cache directory size/contents */\n\t$cache_directory    = read_config_option('boost_png_cache_directory', true);\n\t$directory_contents = array();\n\n\tif (is_dir($cache_directory)) {\n\t\tif ($handle = @opendir($cache_directory)) {\n\t\t\t/* This is the correct way to loop over the directory. */\n\t\t\twhile (false !== ($file = readdir($handle))) {\n\t\t\t\t$directory_contents[] = $file;\n\t\t\t}\n\n\t\t\tclosedir($handle);\n\n\t\t\t/* get size of directory */\n\t\t\t$directory_size = 0;\n\t\t\t$cache_files    = 0;\n\n\t\t\tif (cacti_sizeof($directory_contents)) {\n\t\t\t\t/* goto the cache directory */\n\t\t\t\tchdir($cache_directory);\n\n\t\t\t\t/* check and fry as applicable */\n\t\t\t\tforeach($directory_contents as $file) {\n\t\t\t\t\t/* only remove jpeg's and png's */\n\t\t\t\t\tif ((substr_count(strtolower($file), '.png')) ||\n\t\t\t\t\t\t(substr_count(strtolower($file), '.jpg'))) {\n\t\t\t\t\t\t$cache_files++;\n\t\t\t\t\t\t$directory_size += filesize($file);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$directory_size = boost_file_size_display($directory_size);\n\t\t\t$cache_files    = $cache_files . ' Files';\n\t\t} else {\n\t\t\t$directory_size = '<strong>' . __('WARNING:') . '</strong>' . __('Cannot open directory');\n\t\t\t$cache_files    = '<strong>' . __('WARNING:') . '</strong> ' . __('Unknown');\n\t\t}\n\t} else {\n\t\t$directory_size = '<strong>' . __('WARNING:') . '</strong> ' . __('Directory Does NOT Exist!!');\n\t\t$cache_files    = '<strong>' . __('WARNING:') . '</strong> ' . __('N/A');\n\t}\n\n\t$i = 0;\n\n\t/* boost status display */\n\thtml_section_header(__('Current Boost Status'), 2);\n\n\tform_alternate_row();\n\tprint '<td>' . __('Boost On-demand Updating:') . '</td><td>' . ($rrd_updates == '' ? 'Disabled' : $boost_status_text) . '</td>';\n\n\tform_alternate_row();\n\tprint '<td>' . __('Total Data Sources:') . '</td><td>' . number_format_i18n($total_data_sources, -1) . '</td>';\n\n\tif ($total_records) {\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Pending Boost Records:') . '</td><td>' . number_format_i18n($pending_records, -1) . '</td>';\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Archived Boost Records:') . '</td><td>' . number_format_i18n($arch_records, -1) . '</td>';\n\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Total Boost Records:') . '</td><td>' . number_format_i18n($total_records, -1) . '</td>';\n\t}\n\n\t/* boost status display */\n\thtml_section_header(__('Boost Storage Statistics'), 2);\n\n\t/* describe the table format */\n\tform_alternate_row();\n\tprint '<td>' . __('Database Engine:') . '</td><td>' . $engine . '</td>';\n\n\t/* tell the user how big the table is */\n\tform_alternate_row();\n\tprint '<td>' . __('Current Boost Table(s) Size:') . '</td><td>' . boost_file_size_display($data_length, 2) . '</td>';\n\n\t/* tell the user about the average size/record */\n\tform_alternate_row();\n\tprint '<td>' . __('Avg Bytes/Record:') . '</td><td>' . boost_file_size_display($avg_row_length, 0) . '</td>';\n\n\t/* tell the user about the average size/record */\n\t$output_length = read_config_option('boost_max_output_length');\n\tif ($output_length != '') {\n\t\t$parts = explode(':', $output_length);\n\t\tif ((time()-1200) > $parts[0]) {\n\t\t\t$ref = true;\n\t\t} else {\n\t\t\t$ref = false;\n\t\t}\n\t} else {\n\t\t$ref = true;\n\t}\n\n\tif ($ref) {\n\t\tif (strcmp($engine, 'MEMORY') == 0) {\n\t\t\t$max_length = db_fetch_cell('SELECT MAX(LENGTH(output)) FROM poller_output_boost');\n\t\t} else {\n\t\t\t$max_length = '0';\n\t\t}\n\t\tdb_execute(\"REPLACE INTO settings (name, value) VALUES ('boost_max_output_length', '\" . time() . ':' . $max_length . \"')\");\n\t} else {\n\t\t$max_length = $parts[1];\n\t}\n\n\tif ($max_length != 0) {\n\t\tform_alternate_row();\n\t\tprint '<td>' . __('Max Record Length:') . '</td><td>' . __('%d Bytes', number_format_i18n($max_length)) . '</td>';\n\t}\n\n\t/* tell the user about the \"Maximum Size\" this table can be */\n\tform_alternate_row();\n\tif (strcmp($engine, 'MEMORY')) {\n\t\t$max_table_allowed = __('Unlimited');\n\t\t$max_table_records = __('Unlimited');\n\t} else {\n\t\t$max_table_allowed = boost_file_size_display($max_data_length, 2);\n\t\t$max_table_records = number_format_i18n(($avg_row_length ? $max_data_length/$avg_row_length : 0), 3, 1000);\n\t}\n\tprint '<td>' . __('Max Allowed Boost Table Size:') . '</td><td>' . $max_table_allowed . '</td>';\n\n\t/* tell the user about the estimated records that \"could\" be held in memory */\n\tform_alternate_row();\n\tprint '<td>' . __('Estimated Maximum Records:') . '</td><td>' . $max_table_records . ' Records</td>';\n\n\t/* boost last runtime display */\n\thtml_section_header(__('Runtime Statistics'), 2);\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Last Start Time:') . '</td><td>' . $last_run_time . '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Last Run Duration:') . '</td><td>';\n\n\tif (is_numeric($boost_last_run_duration)) {\n\t\tprint (($boost_last_run_duration > 60) ? __('%d minutes', (int)($boost_last_run_duration/60)) : '' ) . __('%d seconds', $boost_last_run_duration%60);\n\t\tif ($rrd_updates != ''){ print ' (' . __('%0.2f percent of update frequency)', round(100*$boost_last_run_duration/$update_interval/60));}\n\t} else {\n\t\tprint __('N/A');\n\t}\n\tprint '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('RRD Updates:') . '</td><td>' . ($boost_rrds_updated != '' ? number_format_i18n($boost_rrds_updated, -1):'-') . '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Peak Poller Memory:') . '</td><td>' . ((read_config_option('boost_peak_memory') != '' && is_numeric(read_config_option('boost_peak_memory'))) ? (round(read_config_option('boost_peak_memory')/1024/1024,2)) . ' ' . __('MBytes') : __('N/A')) . '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Detailed Runtime Timers:') . '</td><td>' . (($detail_stats != '') ? $detail_stats:__('N/A')) . '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Max Poller Memory Allowed:') . '</td><td>' . ((read_config_option('boost_poller_mem_limit') != '') ? (read_config_option('boost_poller_mem_limit')) . ' ' . __('MBytes') : __('N/A')) . '</td>';\n\n\t/* boost runtime display */\n\thtml_section_header(__('Run Time Configuration'), 2);\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Update Frequency:') . '</td><td>' . ($rrd_updates == '' ? __('N/A') : $boost_refresh_interval[$update_interval]) . '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Next Start Time:') . '</td><td>' . $next_run_time . '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Maximum Records:') . '</td><td>' . number_format_i18n($max_records, -1) . ' ' . __('Records') . '</td>';\n\n\tform_alternate_row();\n\tprint '<td class=\"utilityPick\">' . __('Maximum Allowed Runtime:') . '</td><td>' . $boost_max_runtime[$max_runtime] . '</td>';\n\n\t/* boost caching */\n\thtml_section_header(__('Image Caching'), 2);\n\n\tform_alternate_row();\n\tprint '<td>' . __('Image Caching Status:') . '</td><td>' . ($boost_cache == '' ? __('Disabled') : __('Enabled')) . '</td>';\n\n\tform_alternate_row();\n\tprint '<td>' . __('Cache Directory:') . '</td><td>' . $cache_directory . '</td>';\n\n\tform_alternate_row();\n\tprint '<td>' . __('Cached Files:') . '</td><td>' . $cache_files . '</td>';\n\n\tform_alternate_row();\n\tprint '<td>' . __('Cached Files Size:') . '</td><td>' . $directory_size . '</td>';\n\n\thtml_end_box(true);\n}\n\n/**\n *\n *\n * snmpagent_utilities_run_cache()\n *\n * @param mixed\n * @return\n */\nfunction snmpagent_utilities_run_cache() {\n\tglobal $item_rows;\n\n\tget_filter_request_var('mib', FILTER_CALLBACK, array('options' => 'sanitize_search_string'));\n\n\t$mibs = db_fetch_assoc('SELECT DISTINCT mib FROM snmpagent_cache');\n\t$registered_mibs = array();\n\tif($mibs && $mibs >0) {\n\t\tforeach($mibs as $mib) { $registered_mibs[] = $mib['mib']; }\n\t}\n\n\t/* ================= input validation ================= */\n\tif(!in_array(get_request_var('mib'), $registered_mibs) && get_request_var('mib') != '-1' && get_request_var('mib') != '') {\n\t\tdie_html_input_error();\n\t}\n\t/* ==================================================== */\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'mib' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => '-1',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_snmpac');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction applyFilter() {\n\t\tstrURL  = 'utilities.php?action=view_snmpagent_cache';\n\t\tstrURL += '&mib=' + $('#mib').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'utilities.php?action=view_snmpagent_cache&clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#form_snmpagent_cache').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_start_box(__('SNMPAgent Cache'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t\t<form id='form_snmpagent_cache' action='utilities.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('MIB');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='mib' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('mib') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($mibs) > 0) {\n\t\t\t\t\t\t\t\t\tforeach ($mibs as $mib) {\n\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $mib['mib'] . \"'\"; if (get_request_var('mib') == $mib['mib']) { print ' selected'; } print '>' . html_escape($mib['mib']) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('OIDs');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('rows') == '-1') {?> selected<?php }?>><?php print __('Default');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc_x('Button: use filter settings', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc_x('Button: reset filter settings', 'Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = '';\n\n\t/* filter by host */\n\tif (get_request_var('mib') == '-1') {\n\t\t/* Show all items */\n\t} elseif (!isempty_request_var('mib')) {\n\t\t$sql_where .= \" AND snmpagent_cache.mib='\" . get_request_var('mib') . \"'\";\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= \" AND (`oid` LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR `name` LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR `mib` LIKE '%\" . get_request_var('filter') . \"%'\n\t\t\tOR `max-access` LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\t$sql_where .= ' ORDER by `oid`';\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*) FROM snmpagent_cache WHERE 1 $sql_where\");\n\n\t$snmp_cache_sql = \"SELECT * FROM snmpagent_cache WHERE 1 $sql_where LIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\t$snmp_cache = db_fetch_assoc($snmp_cache_sql);\n\n\t/* generate page list */\n\t$nav = html_nav_bar('utilities.php?action=view_snmpagent_cache&mib=' . get_request_var('mib') . '&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Entries'), 'page', 'main');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header(array(__('OID'), __('Name'), __('MIB'), __('Type'), __('Max-Access'), __('Value')));\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tforeach ($snmp_cache as $item) {\n\n\t\t\t$oid        = filter_value($item['oid'], get_request_var('filter'));\n\t\t\t$name       = filter_value($item['name'], get_request_var('filter'));\n\t\t\t$mib        = filter_value($item['mib'], get_request_var('filter'));\n\t\t\t$max_access = filter_value($item['max-access'], get_request_var('filter'));\n\n\t\t\tform_alternate_row('line' . $item['oid'], false);\n\t\t\tform_selectable_cell($oid, $item['oid']);\n\t\t\tif($item['description']) {\n\t\t\t\tprint '<td><a href=\"#\" title=\"<div class=\\'header\\'>' . $name . '</div><div class=\\'content preformatted\\'>' . html_escape($item['description']) . '</div>\" class=\"tooltip\">' . $name . '</a></td>';\n\t\t\t}else {\n\t\t\t\tprint \"<td>$name</td>\";\n\t\t\t}\n\t\t\tform_selectable_cell($mib, $item['oid']);\n\t\t\tform_selectable_cell($item['kind'], $item['oid']);\n\t\t\tform_selectable_cell($max_access, $item['oid']);\n\t\t\tform_selectable_ecell((in_array($item['kind'], array(__('Scalar'), __('Column Data'))) ? $item['value'] : __('N/A')), $item['oid']);\n\t\t\tform_end_row();\n\t\t}\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($snmp_cache)) {\n\t\tprint $nav;\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\t\t$('.tooltip').tooltip({\n\t\t\ttrack: true,\n\t\t\tshow: 250,\n\t\t\thide: 250,\n\t\t\tposition: { collision: \"flipfit\" },\n\t\t\tcontent: function() { return $(this).attr('title'); }\n\t\t});\n\t</script>\n\t<?php\n}\n\nfunction snmpagent_utilities_run_eventlog(){\n\tglobal $item_rows;\n\n\t$severity_levels = array(\n\t\tSNMPAGENT_EVENT_SEVERITY_LOW      => 'LOW',\n\t\tSNMPAGENT_EVENT_SEVERITY_MEDIUM   => 'MEDIUM',\n\t\tSNMPAGENT_EVENT_SEVERITY_HIGH     => 'HIGH',\n\t\tSNMPAGENT_EVENT_SEVERITY_CRITICAL => 'CRITICAL'\n\t);\n\n\t$severity_colors = array(\n\t\tSNMPAGENT_EVENT_SEVERITY_LOW      => '#00FF00',\n\t\tSNMPAGENT_EVENT_SEVERITY_MEDIUM   => '#FFFF00',\n\t\tSNMPAGENT_EVENT_SEVERITY_HIGH     => '#FF0000',\n\t\tSNMPAGENT_EVENT_SEVERITY_CRITICAL => '#FF00FF'\n\t);\n\n\t$receivers = db_fetch_assoc('SELECT DISTINCT manager_id, hostname\n\t\tFROM snmpagent_notifications_log\n\t\tINNER JOIN snmpagent_managers\n\t\tON snmpagent_managers.id = snmpagent_notifications_log.manager_id');\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('receiver');\n\n\tif(!in_array(get_request_var('severity'), array_keys($severity_levels)) && get_request_var('severity') != '-1' && get_request_var('severity') != '') {\n\t\tdie_html_input_error();\n\t}\n\t/* ==================================================== */\n\n\tif (isset_request_var('purge')) {\n\t\tdb_execute('TRUNCATE table snmpagent_notifications_log');\n\n\t\t/* reset filters */\n\t\tset_request_var('clear', true);\n\t}\n\n\t/* ================= input validation and session storage ================= */\n\t$filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'severity' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'receiver' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_snmpl');\n\t/* ================= input validation ================= */\n\n\tif (get_request_var('rows') == -1) {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t?>\n\t<script type='text/javascript'>\n\tfunction applyFilter() {\n\t\tstrURL  = 'utilities.php?action=view_snmpagent_events';\n\t\tstrURL += '&severity=' + $('#severity').val();\n\t\tstrURL += '&receiver=' + $('#receiver').val();\n\t\tstrURL += '&rows=' + $('#rows').val();\n\t\tstrURL += '&filter=' + $('#filter').val();\n\t\tstrURL += '&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction clearFilter() {\n\t\tstrURL = 'utilities.php?action=view_snmpagent_events&clear=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\tfunction purgeFilter() {\n\t\tstrURL = 'utilities.php?action=view_snmpagent_events&purge=1&header=false';\n\t\tloadPageNoHeader(strURL);\n\t}\n\n\t$(function() {\n\t\t$('#refresh').click(function() {\n\t\t\tapplyFilter();\n\t\t});\n\n\t\t$('#clear').click(function() {\n\t\t\tclearFilter();\n\t\t});\n\n\t\t$('#purge').click(function() {\n\t\t\tpurgeFilter();\n\t\t});\n\n\t\t$('#form_snmpagent_notifications').submit(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tapplyFilter();\n\t\t});\n\t});\n\t</script>\n\n\t<?php\n\thtml_start_box(__('SNMPAgent Notification Log'), '100%', '', '3', 'center', '');\n\n\t?>\n\t<tr class='even noprint'>\n\t\t<td>\n\t\t\t<form id='form_snmpagent_notifications' action='utilities.php'>\n\t\t\t\t<table class='filterTable'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Severity');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='severity' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('severity') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tforeach ($severity_levels as $level => $name) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $level . \"'\"; if (get_request_var('severity') == $level) { print ' selected'; } print '>' . html_escape($name) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Receiver');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='receiver' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('receiver') == '-1') {?> selected<?php }?>><?php print __('Any');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tforeach ($receivers as $receiver) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $receiver['manager_id'] . \"'\"; if (get_request_var('receiver') == $receiver['manager_id']) { print ' selected'; } print '>' . $receiver['hostname'] . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php print __('Entries');?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t\t<option value='-1'<?php if (get_request_var('rows') == '-1') {?> selected<?php }?>><?php print __('Default');?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . html_escape($value) . \"</option>\\n\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php print __esc_x('Button: use filter settings', 'Go');?>' title='<?php print __esc('Set/Refresh Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php print __esc_x('Button: reset filter settings', 'Clear');?>' title='<?php print __esc('Clear Filters');?>'>\n\t\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='purge' value='<?php print __esc_x('Button: delete all table entries', 'Purge');?>' title='<?php print __esc('Purge Notification Log');?>'>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</form>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\t$sql_where = ' 1';\n\n\t/* filter by severity */\n\tif(get_request_var('receiver') != '-1') {\n\t\t$sql_where .= \" AND snl.manager_id='\" . get_request_var('receiver') . \"'\";\n\t}\n\n\t/* filter by severity */\n\tif (get_request_var('severity') == '-1') {\n\t/* Show all items */\n\t} elseif (!isempty_request_var('severity')) {\n\t\t$sql_where .= \" AND snl.severity='\" . get_request_var('severity') . \"'\";\n\t}\n\n\t/* filter by search string */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where .= \" AND (`varbinds` LIKE '%\" . get_request_var('filter') . \"%')\";\n\t}\n\t$sql_where .= ' ORDER by `time` DESC';\n\t$sql_query  = \"SELECT snl.*, sm.hostname, sc.description\n\t\tFROM snmpagent_notifications_log AS snl\n\t\tINNER JOIN snmpagent_managers AS sm\n\t\tON sm.id = snl.manager_id\n\t\tLEFT JOIN snmpagent_cache AS sc\n\t\tON sc.name = snl.notification\n\t\tWHERE $sql_where\n\t\tLIMIT \" . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\t$total_rows = db_fetch_cell(\"SELECT COUNT(*)\n\t\tFROM snmpagent_notifications_log AS snl\n\t\tWHERE $sql_where\");\n\n\t$logs = db_fetch_assoc($sql_query);\n\n\t$nav = html_nav_bar('utilities.php?action=view_snmpagent_events&severity='. get_request_var('severity').'&receiver='. get_request_var('receiver').'&filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 11, __('Log Entries'), 'page', 'main');\n\n\tform_start('managers.php', 'chk');\n\n\tprint $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\thtml_header(array(' ', __('Time'), __('Receiver'), __('Notification'), __('Varbinds')));\n\n\tif (cacti_sizeof($logs)) {\n\t\tforeach ($logs as $item) {\n\t\t\t$varbinds = filter_value($item['varbinds'], get_request_var('filter'));\n\t\t\tform_alternate_row('line' . $item['id'], false);\n\n\t\t\tprint \"<td title='\" . __esc('Severity Level: %s', $severity_levels[$item['severity']]) . \"' style='width:10px;background-color: \" . $severity_colors[$item['severity']] . \";border-top:1px solid white;border-bottom:1px solid white;'></td>\";\n\t\t\tprint \"<td class='nowrap'>\" . date('Y-m-d H:i:s', $item['time']) . '</td>';\n\t\t\tprint '<td>' . html_escape($item['hostname']) . '</td>';\n\n\t\t\tif($item['description']) {\n\t\t\t\tprint '<td><a href=\"#\" title=\"<div class=\\'header\\'>' . html_escape($item['notification']) . '</div><div class=\\'content preformatted\\'>' . html_escape($item['description']) . '</div>\" class=\"tooltip\">' . html_escape($item['notification']) . '</a></td>';\n\t\t\t}else {\n\t\t\t\tprint '<td>' . html_escape($item['notification']) . '</td>';\n\t\t\t}\n\n\t\t\tprint \"<td>$varbinds</td>\";\n\n\t\t\tform_end_row();\n\t\t}\n\t} else {\n\t\tprint '<tr><td colspan=\"5\"><em>' . __('No SNMP Notification Log Entries') . '</em></td></tr>';\n\t}\n\n\thtml_end_box();\n\n\tif (cacti_sizeof($logs)) {\n\t\tprint $nav;\n\t}\n\n\t?>\n\n\t<script type='text/javascript' >\n\t$('.tooltip').tooltip({\n\t\ttrack: true,\n\t\tposition: { collision: 'flipfit' },\n\t\tcontent: function() { return $(this).attr('title'); }\n\t});\n\t</script>\n\t<?php\n}\n", "<?php\n/*\n +-------------------------------------------------------------------------+\n | Copyright (C) 2004-2018 The Cacti Group                                 |\n |                                                                         |\n | This program is free software; you can redistribute it and/or           |\n | modify it under the terms of the GNU General Public License             |\n | as published by the Free Software Foundation; either version 2          |\n | of the License, or (at your option) any later version.                  |\n |                                                                         |\n | This program is distributed in the hope that it will be useful,         |\n | but WITHOUT ANY WARRANTY; without even the implied warranty of          |\n | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           |\n | GNU General Public License for more details.                            |\n +-------------------------------------------------------------------------+\n | Cacti: The Complete RRDtool-based Graphing Solution                     |\n +-------------------------------------------------------------------------+\n | This code is designed, written, and maintained by the Cacti Group. See  |\n | about.php and/or the AUTHORS file for specific developer information.   |\n +-------------------------------------------------------------------------+\n | http://www.cacti.net/                                                   |\n +-------------------------------------------------------------------------+\n*/\n\ninclude('./include/auth.php');\ninclude_once('./lib/vdef.php');\n\n$vdef_actions = array(\n\t'1' => __('Delete'),\n\t'2' => __('Duplicate')\n);\n\nset_default_action();\n\nswitch (get_request_var('action')) {\n\tcase 'save':\n\t\tvdef_form_save();\n\n\t\tbreak;\n\tcase 'actions':\n\t\tvdef_form_actions();\n\n\t\tbreak;\n\tcase 'item_remove_confirm':\n\t\tvdef_item_remove_confirm();\n\n\t\tbreak;\n\tcase 'item_remove':\n\t\tvdef_item_remove();\n\n\t\tbreak;\n\tcase 'item_movedown':\n\t\tget_filter_request_var('vdef_id');\n\n\t\titem_movedown();\n\n\t\theader('Location: vdef.php?header=false&action=edit&id=' . get_request_var('vdef_id'));\n\t\tbreak;\n\tcase 'item_moveup':\n\t\tget_filter_request_var('vdef_id');\n\n\t\titem_moveup();\n\n\t\theader('Location: vdef.php?header=false&action=edit&id=' . get_request_var('vdef_id'));\n\t\tbreak;\n\tcase 'item_edit':\n\t\ttop_header();\n\t\tvdef_item_edit();\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'edit':\n\t\ttop_header();\n\n\t\tvdef_edit();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n\tcase 'ajax_dnd':\n\t\tvdef_item_dnd();\n\n\t\tbreak;\n\tdefault:\n\t\ttop_header();\n\n\t\tvdef();\n\n\t\tbottom_footer();\n\n\t\tbreak;\n}\n\n/* --------------------------\n    Global Form Functions\n   -------------------------- */\n\nfunction draw_vdef_preview($vdef_id) {\n\t?>\n\t<tr class='even'>\n\t\t<td style='padding:4px'>\n\t\t\t<pre>vdef=<?php print html_escape(get_vdef($vdef_id, true));?></pre>\n\t\t</td>\n\t</tr>\n\t<?php\n}\n\n/* --------------------------\n    The Save Function\n   -------------------------- */\n\nfunction vdef_form_save() {\n\tif (isset_request_var('save_component_vdef')) {\n\t\t$save['id']   = get_filter_request_var('id');\n\t\t$save['hash'] = get_hash_vdef(get_request_var('id'));\n\t\t$save['name'] = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);\n\n\t\tif (!is_error_message()) {\n\t\t\t$vdef_id = sql_save($save, 'vdef');\n\n\t\t\tif ($vdef_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\theader('Location: vdef.php?action=edit&header=false&id=' . (empty($vdef_id) ? get_request_var('id') : $vdef_id));\n\t} elseif (isset_request_var('save_component_item')) {\n\t\t$sequence = get_sequence(get_filter_request_var('id'), 'sequence', 'vdef_items', 'vdef_id=' . get_filter_request_var('vdef_id'));\n\n\t\t$save['id']       = get_filter_request_var('id');\n\t\t$save['hash']     = get_hash_vdef(get_request_var('id'), 'vdef_item');\n\t\t$save['vdef_id']  = get_filter_request_var('vdef_id');\n\t\t$save['sequence'] = $sequence;\n\t\t$save['type']     = get_nfilter_request_var('type');\n\t\t$save['value']    = get_nfilter_request_var('value');\n\n\t\tif (!is_error_message()) {\n\t\t\t$vdef_item_id = sql_save($save, 'vdef_items');\n\n\t\t\tif ($vdef_item_id) {\n\t\t\t\traise_message(1);\n\t\t\t} else {\n\t\t\t\traise_message(2);\n\t\t\t}\n\t\t}\n\n\t\tif (is_error_message()) {\n\t\t\theader('Location: vdef.php?action=item_edit&header=false&vdef_id=' . get_request_var('vdef_id') . '&id=' . (empty($vdef_item_id) ? get_request_var('id') : $vdef_item_id));\n\t\t} else {\n\t\t\theader('Location: vdef.php?action=edit&header=false&id=' . get_request_var('vdef_id'));\n\t\t}\n\t}\n}\n\nfunction duplicate_vdef($_vdef_id, $vdef_title) {\n\tglobal $fields_vdef_edit;\n\n\t$vdef       = db_fetch_row_prepared('SELECT * FROM vdef WHERE id = ?', array($_vdef_id));\n\t$vdef_items = db_fetch_assoc_prepared('SELECT * FROM vdef_items WHERE vdef_id = ?', array($_vdef_id));\n\n\t/* substitute the title variable */\n\t$vdef['name'] = str_replace('<vdef_title>', $vdef['name'], $vdef_title);\n\n\t/* create new entry: device_template */\n\t$save['id']   = 0;\n\t$save['hash'] = get_hash_vdef(0);\n\n\t$fields_vdef_edit = preset_vdef_form_list();\n\tforeach ($fields_vdef_edit as $field => $array) {\n\t\tif (!preg_match('/^hidden/', $array['method'])) {\n\t\t\t$save[$field] = $vdef[$field];\n\t\t}\n\t}\n\n\t$vdef_id = sql_save($save, 'vdef');\n\n\t/* create new entry(s): vdef_items */\n\tif (cacti_sizeof($vdef_items) > 0) {\n\t\tforeach ($vdef_items as $vdef_item) {\n\t\t\tunset($save);\n\n\t\t\t$save['id']       = 0;\n\t\t\t$save['hash']     = get_hash_vdef(0, 'vdef_item');\n\t\t\t$save['vdef_id']  = $vdef_id;\n\t\t\t$save['sequence'] = $vdef_item['sequence'];\n\t\t\t$save['type']     = $vdef_item['type'];\n\t\t\t$save['value']    = $vdef_item['value'];\n\n\t\t\tsql_save($save, 'vdef_items');\n\t\t}\n\t}\n}\n\n/* ------------------------\n    The 'actions' function\n   ------------------------ */\n\nfunction vdef_form_actions() {\n\tglobal $vdef_actions;\n\n\t/* if we are to save this form, instead of display it */\n\tif (isset_request_var('selected_items')) {\n\t\t$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));\n\n\t\tif ($selected_items != false) {\n\t\t\tif (get_nfilter_request_var('drp_action') === '1') { // delete\n\t\t\t\t/* do a referential integrity check */\n\t\t\t\tif (cacti_sizeof($selected_items)) {\n\t\t\t\tforeach($selected_items as $vdef_id) {\n\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\tinput_validate_input_number($vdef_id);\n\t\t\t\t\t/* ==================================================== */\n\n\t\t\t\t\t$vdef_ids[] = $vdef_id;\n\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isset($vdef_ids)) {\n\t\t\t\t\tdb_execute('DELETE FROM vdef WHERE ' . array_to_sql_or($vdef_ids, 'id'));\n\t\t\t\t\tdb_execute('DELETE FROM vdef_items WHERE ' . array_to_sql_or($vdef_ids, 'vdef_id'));\n\t\t\t\t}\n\t\t\t} elseif (get_nfilter_request_var('drp_action') === '2') { // duplicate\n\t\t\t\tfor ($i=0;($i<cacti_count($selected_items));$i++) {\n\t\t\t\t\t/* ================= input validation ================= */\n\t\t\t\t\tinput_validate_input_number($selected_items[$i]);\n\t\t\t\t\t/* ==================================================== */\n\n\t\t\t\t\tduplicate_vdef($selected_items[$i], get_nfilter_request_var('title_format'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\theader('Location: vdef.php?header=false');\n\n\t\texit;\n\t}\n\n\t/* setup some variables */\n\t$vdef_list = '';\n\n\t/* loop through each of the graphs selected on the previous page and get more info about them */\n\tforeach ($_POST as $var => $val) {\n\t\tif (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {\n\t\t\t/* ================= input validation ================= */\n\t\t\tinput_validate_input_number($matches[1]);\n\t\t\t/* ==================================================== */\n\n\t\t\t$vdef_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM vdef WHERE id = ?', array($matches[1]))) . '</li>';\n\t\t\t$vdef_array[] = $matches[1];\n\t\t}\n\t}\n\n\ttop_header();\n\n\tform_start('vdef.php', 'vdef_actions');\n\n\thtml_start_box($vdef_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');\n\n\tif (isset($vdef_array)) {\n\t\tif (get_nfilter_request_var('drp_action') === '1') { // delete\n\t\t\tprint \"\t<tr>\n\t\t\t\t\t<td class='topBoxAlt'>\n\t\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to delete the following VDEF.', 'Click \\'Continue\\' to delete following VDEFs.', cacti_sizeof($vdef_array)) . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$vdef_list</ul></div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc_n('Delete VDEF', 'Delete VDEFs', cacti_sizeof($vdef_array)) . \"'>\";\n\t\t} elseif (get_nfilter_request_var('drp_action') === '2') { // duplicate\n\t\t\tprint \"\t<tr>\n\t\t\t\t\t<td class='topBoxAlt'>\n\t\t\t\t\t\t<p>\" . __n('Click \\'Continue\\' to duplicate the following VDEF. You can optionally change the title format for the new VDEF.', 'Click \\'Continue\\' to duplicate following VDEFs. You can optionally change the title format for the new VDEFs.', cacti_sizeof($vdef_array)) . \"</p>\n\t\t\t\t\t\t<div class='itemlist'><ul>$vdef_list</ul></div>\n\t\t\t\t\t\t<p><strong>\" . __('Title Format:') . \"</strong><br>\"; form_text_box(\"title_format\", \"<vdef_title> (1)\", \"\", \"255\", \"30\", \"text\"); print \"</p>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\\n\";\n\n\t\t\t$save_html = \"<input type='button' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Cancel') . \"' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='\" . __esc('Continue') . \"' title='\" . __esc_n('Duplicate VDEF', 'Duplicate VDEFs', cacti_sizeof($vdef_array)) . \"'>\";\n\t\t}\n\t} else {\n\t\traise_message(40);\n\t\theader('Location: vdef.php?header=false');\n\t\texit;\n\t}\n\n    print \"<tr>\n        <td class='saveRow'>\n            <input type='hidden' name='action' value='actions'>\n            <input type='hidden' name='selected_items' value='\" . (isset($vdef_array) ? serialize($vdef_array) : '') . \"'>\n            <input type='hidden' name='drp_action' value='\" . html_escape(get_nfilter_request_var('drp_action')) . \"'>\n            $save_html\n        </td>\n    </tr>\\n\";\n\n\thtml_end_box();\n\n\tform_end();\n\n\tbottom_footer();\n}\n\n/* --------------------------\n    VDEF Item Functions\n   -------------------------- */\n\nfunction vdef_item_remove_confirm() {\n\tglobal $vdef_functions, $vdef_item_types, $custom_vdef_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('vdef_id');\n\t/* ==================================================== */\n\n\tform_start('vdef.php');\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n\t$vdef       = db_fetch_row_prepared('SELECT * FROM vdef WHERE id = ?', array(get_request_var('id')));\n\t$vdef_item  = db_fetch_row_prepared('SELECT * FROM vdef_items WHERE id = ?', array(get_request_var('vdef_id')));\n\n\t?>\n\t<tr>\n\t\t<td class='topBoxAlt'>\n\t\t\t<p><?php print __('Click \\'Continue\\' to delete the following VDEF\\'s.'); ?></p>\n\t\t\t<p>VDEF Name: '<?php print $vdef['name'];?>'<br>\n\t\t\t<em><?php $vdef_item_type = $vdef_item['type']; print $vdef_item_types[$vdef_item_type];?></em>: <strong><?php print get_vdef_item_name($vdef_item['id']);?></strong></p>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td class='right'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='cancel' value='<?php print __esc('Cancel');?>' onClick='$(\"#cdialog\").dialog(\"close\");' name='cancel'>\n\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' id='continue' value='<?php print __esc('Continue');?>' name='continue' title='<?php print __esc('Remove VDEF Item');?>'>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n\n\tform_end();\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#continue').click(function(data) {\n\t\t\t$.post('vdef.php?action=item_remove', {\n\t\t\t\t__csrf_magic: csrfMagicToken,\n\t\t\t\tvdef_id: <?php print get_request_var('vdef_id');?>,\n\t\t\t\tid: <?php print get_request_var('id');?>\n\t\t\t}, function(data) {\n\t\t\t\t$('#cdialog').dialog('close');\n\t\t\t\tloadPageNoHeader('vdef.php?action=edit&header=false&id=<?php print get_request_var('id');?>');\n\t\t\t});\n\t\t});\n\t});\n\t</script>\n\t<?php\n}\n\nfunction vdef_item_remove() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('vdef_id');\n\t/* ==================================================== */\n\n\tdb_execute_prepared('DELETE FROM vdef_items WHERE id = ?', array(get_request_var('vdef_id')));\n}\n\nfunction vdef_item_edit() {\n\tglobal $vdef_functions, $vdef_item_types, $custom_vdef_data_source_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('vdef_id');\n\tget_filter_request_var('type_select');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$vdef = db_fetch_row_prepared('SELECT *\n\t\t\tFROM vdef_items\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\tif (cacti_sizeof($vdef)) {\n\t\t\t$current_type = $vdef['type'];\n\t\t\t$values[$current_type] = $vdef['value'];\n\t\t}\n\t} else {\n\t\t$vdef = array();\n\t}\n\n\thtml_start_box(__('VDEF Preview'), '100%', '', '3', 'center', '');\n\tdraw_vdef_preview(get_request_var('vdef_id'));\n\thtml_end_box();\n\n\tif (!isempty_request_var('vdef_id')) {\n\t\t$name = db_fetch_cell_prepared('SELECT name\n\t\t\tFROM vdef\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('vdef_id')));\n\n\t\t$header_label = __('VDEF Items [edit: %s]', html_escape($name));\n\t}else {\n\t\t$header_label = __('VDEF Items [new]');\n\t}\n\n\tform_start('vdef.php', 'chk');\n\n\thtml_start_box($header_label, '100%', '', '3', 'center', '');\n\n\tif (isset_request_var('type_select')) {\n\t\t$current_type = get_request_var('type_select');\n\t} elseif (isset($vdef['type'])) {\n\t\t$current_type = $vdef['type'];\n\t} else {\n\t\t$current_type = CVDEF_ITEM_TYPE_FUNCTION;\n\t}\n\n\t$form_vdef = array(\n\t\t'type_select' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('VDEF Item Type'),\n\t\t\t'description'   => __('Choose what type of VDEF item this is.'),\n\t\t\t'value'         => $current_type,\n\t\t\t'array'         => $vdef_item_types\n\t\t),\n\t\t'value' => array(\n\t\t\t'method'        => 'drop_array',\n\t\t\t'friendly_name' => __('VDEF Item Value'),\n\t\t\t'description'   => __('Enter a value for this VDEF item.'),\n\t\t\t'value'         => (isset($vdef['value']) ? $vdef['value']:'')\n\t\t),\n\t\t'id' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => isset_request_var('id') ?  get_request_var('id') : '0',\n\t\t),\n\t\t'type' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => $current_type\n\t\t),\n\t\t'vdef_id' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => get_request_var('vdef_id')\n\t\t),\n\t\t'save_component_item' => array(\n\t\t\t'method'        => 'hidden',\n\t\t\t'value'         => '1'\n\t\t)\n\t);\n\n\tswitch ($current_type) {\n\tcase '1':\n\t\t$form_vdef['value']['array'] = $vdef_functions;\n\n\t\tbreak;\n\tcase '4':\n\t\t$form_vdef['value']['array'] = $custom_vdef_data_source_types;\n\n\t\tbreak;\n\tcase '6':\n\t\t$form_vdef['value']['method']     = 'textbox';\n\t\t$form_vdef['value']['max_length'] = '255';\n\t\t$form_vdef['value']['size']       = '30';\n\n\t\tbreak;\n\t}\n\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($form_vdef, $vdef)\n\t\t)\n\t);\n\n\t?>\n\t<script type='text/javascript'>\n\t$(function() {\n\t\t$('#type_select').unbind().change(function() {\n\t\t\tstrURL  = 'vdef.php?action=item_edit';\n\t\t\tstrURL += '&id=' + $('#id').val();\n\t\t\tstrURL += '&vdef_id=' + $('#vdef_id').val();\n\t\t\tstrURL += '&type_select=' + $('#type_select').val();\n\t\t\tstrURL += '&header=false';\n\t\t\tloadPageNoHeader(strURL);\n\t\t});\n\t});\n\t</script>\n\t<?php\n\n\thtml_end_box();\n\n\tform_save_button('vdef.php?action=edit&id=' . get_request_var('vdef_id'));\n}\n\n/* ---------------------\n    VDEF Functions\n   --------------------- */\n\nfunction item_movedown() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('vdef_id');\n\t/* ==================================================== */\n\n\tmove_item_down('vdef_items', get_request_var('id'), 'vdef_id=' . get_request_var('vdef_id'));\n}\n\nfunction item_moveup() {\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\tget_filter_request_var('vdef_id');\n\t/* ==================================================== */\n\n\tmove_item_up('vdef_items', get_request_var('id'), 'vdef_id=' . get_request_var('vdef_id'));\n}\n\nfunction vdef_item_dnd() {\n\t/* ================= Input validation ================= */\n\tget_filter_request_var('id');\n\t/* ================= Input validation ================= */\n\n\t$continue = true;\n\n\tif (isset_request_var('vdef_item') && is_array(get_nfilter_request_var('vdef_item'))) {\n\t\t$vdef_ids = get_nfilter_request_var('vdef_item');\n\n\t\tif (cacti_sizeof($vdef_ids)) {\n\t\t\t$sequence = 1;\n\t\t\tforeach($vdef_ids as $vdef_id) {\n\t\t\t\t$vdef_id = str_replace('line', '', $vdef_id);\n\t\t\t\tinput_validate_input_number($vdef_id);\n\n\t\t\t\tdb_execute_prepared('UPDATE vdef_items\n\t\t\t\t\tSET sequence = ?\n\t\t\t\t\tWHERE id = ?',\n\t\t\t\t\tarray($sequence, $vdef_id));\n\n\t\t\t\t$sequence++;\n\t\t\t}\n\t\t}\n\t}\n\n\theader('Location: vdef.php?action=edit&header=false&id=' . get_request_var('id'));\n}\n\nfunction vdef_edit() {\n\tglobal $vdef_item_types;\n\n\t/* ================= input validation ================= */\n\tget_filter_request_var('id');\n\t/* ==================================================== */\n\n\tif (!isempty_request_var('id')) {\n\t\t$vdef = db_fetch_row_prepared('SELECT *\n\t\t\tFROM vdef\n\t\t\tWHERE id = ?',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$header_label = __('VDEFs [edit: %s]', html_escape($vdef['name']));\n\t} else {\n\t\t$header_label = __('VDEFs [new]');\n\t}\n\n\tform_start('vdef.php', 'vdef_edit');\n\n\thtml_start_box($header_label, '100%', true, '3', 'center', '');\n\n\t$preset_vdef_form_list = preset_vdef_form_list();\n\tdraw_edit_form(\n\t\tarray(\n\t\t\t'config' => array('no_form_tag' => true),\n\t\t\t'fields' => inject_form_variables($preset_vdef_form_list, (isset($vdef) ? $vdef : array()))\n\t\t)\n\t);\n\n\thtml_end_box(true, true);\n\n\tform_hidden_box('id', (isset($vdef['id']) ? $vdef['id'] : '0'), '');\n\tform_hidden_box('save_component_vdef', '1', '');\n\n\tif (!isempty_request_var('id')) {\n\t\thtml_start_box('', '100%', '', '3', 'center', '');\n\t\tdraw_vdef_preview(get_request_var('id'));\n\t\thtml_end_box();\n\n\t\thtml_start_box(__('VDEF Items'), '100%', '', '3', 'center', 'vdef.php?action=item_edit&vdef_id=' . $vdef['id']);\n\n\t\t$header_items = array(\n\t\t\tarray('display' => __('Item'), 'align' => 'left'),\n\t\t\tarray('display' => __('Item Value'), 'align' => 'left')\n\t\t);\n\n\t\thtml_header($header_items, 2);\n\n\t\t$vdef_items = db_fetch_assoc_prepared('SELECT *\n\t\t\tFROM vdef_items\n\t\t\tWHERE vdef_id = ?\n\t\t\tORDER BY sequence',\n\t\t\tarray(get_request_var('id')));\n\n\t\t$i = 1;\n\t\t$total_items = cacti_sizeof($vdef_items);\n\n\t\tif (cacti_sizeof($vdef_items)) {\n\t\t\tforeach ($vdef_items as $vdef_item) {\n\t\t\t\tform_alternate_row('line' . $vdef_item['id'], true, true);\n\t\t\t\t?>\n\t\t\t\t<td>\n\t\t\t\t\t<a class='linkEditMain' href='<?php print html_escape('vdef.php?action=item_edit&id=' . $vdef_item['id'] . '&vdef_id=' . $vdef['id']);?>'><?php print __('Item #%d', $i);?></a>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<em><?php $vdef_item_type = $vdef_item['type']; print $vdef_item_types[$vdef_item_type];?></em>: <strong><?php print get_vdef_item_name($vdef_item['id']);?></strong>\n\t\t\t\t</td>\n\t\t\t\t<td class='right'>\n\t\t\t\t\t<?php\n\t\t\t\t\tif (read_config_option('drag_and_drop') == '') {\n\t\t\t\t\t\tif ($i < $total_items && $total_items > 1) {\n\t\t\t\t\t\t\techo '<a class=\"pic fa fa-caret-down moveArrow\" href=\"' . html_escape('vdef.php?action=item_movedown&id=' . $vdef_item['id'] . '&vdef_id=' . $vdef_item['vdef_id']) . '\" title=\"' . __esc('Move Down') . '\"></a>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\techo '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($i > 1 && $i <= $total_items) {\n\t\t\t\t\t\t\techo '<a class=\"pic fa fa-caret-up moveArrow\" href=\"' . html_escape('vdef.php?action=item_moveup&id=' . $vdef_item['id'] .\t'&vdef_id=' . $vdef_item['vdef_id']) . '\" title=\"' . __esc('Move Up') . '\"></a>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\techo '<span class=\"moveArrowNone\"></span>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t?>\n\t\t\t\t\t<a id='<?php print $vdef['id'] . '_' . $vdef_item['id'];?>' class='delete deleteMarker fa fa-times' title='<?php print __esc('Delete VDEF Item');?>'></a>\n\t\t\t\t</td>\n\t\t\t\t<?php\n\n\t\t\t\tform_end_row();\n\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\n\t\thtml_end_box();\n\t}\n\n\tform_save_button('vdef.php', 'return');\n\n\t?>\n\t<script type='text/javascript'>\n\n\t$(function() {\n\t\t$('#vdef_edit3').find('.cactiTable').attr('id', 'vdef_item');\n\t\t$('.cdialog').remove();\n\t\t$('body').append(\"<div class='cdialog' id='cdialog'></div>\");\n\n\t\t<?php if (read_config_option('drag_and_drop') == 'on') { ?>\n\t\t$('#vdef_item').unbind().tableDnD({\n\t\t\tonDrop: function(table, row) {\n\t\t\t\tloadPageNoHeader('vdef.php?action=ajax_dnd&id=<?php isset_request_var('id') ? print get_request_var('id') : print 0;?>&'+$.tableDnD.serialize());\n\t\t\t}\n\t\t});\n\t\t<?php } ?>\n\n\t\t$('.delete').unbind().click(function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tid = $(this).attr('id').split('_');\n\t\t\trequest = 'vdef.php?action=item_remove_confirm&id='+id[0]+'&vdef_id='+id[1];\n\t\t\t$.get(request)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t$('#cdialog').html(data);\n\t\t\t\t\tapplySkin();\n\t\t\t\t\t$('#cdialog').dialog({ title: '<?php print __esc('Delete VDEF Item');?>', minHeight: 80, minWidth: 500 });\n\t\t\t\t})\n\t\t\t\t.fail(function(data) {\n\t\t\t\t\tgetPresentHTTPError(data);\n\t\t\t\t});\n\t\t}).css('cursor', 'pointer');\n\t});\n\n\t</script>\n\t<?php\n}\n\nfunction vdef_filter() {\n\tglobal $item_rows;\n\n\thtml_start_box( __('VDEFs'), '100%', '', '3', 'center', 'vdef.php?action=edit');\n\t?>\n\t<tr class='even'>\n\t\t<td>\n\t\t\t<form id='form_vdef' action='vdef.php'>\n\t\t\t<table class='filterTable'>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('Search');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php print html_escape_request_var('filter');?>'>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php print __('VDEFs');?>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<select id='rows' onChange='applyFilter()'>\n\t\t\t\t\t\t\t<option value='-1'<?php print (get_request_var('rows') == '-1' ? ' selected>':'>') . __('Default');?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tif (cacti_sizeof($item_rows)) {\n\t\t\t\t\t\t\t\tforeach ($item_rows as $key => $value) {\n\t\t\t\t\t\t\t\t\tprint \"<option value='\" . $key . \"'\"; if (get_request_var('rows') == $key) { print ' selected'; } print '>' . $value . \"</option>\\n\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n                    <td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='checkbox' id='has_graphs' <?php print (get_request_var('has_graphs') == 'true' ? 'checked':'');?>>\n                        \t<label for='has_graphs'><?php print __('Has Graphs');?></label>\n\t\t\t\t\t\t</span>\n                    </td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc_x('Button: use filter settings', 'Go');?>' id='refresh'>\n\t\t\t\t\t\t\t<input type='button' class='ui-button ui-corner-all ui-widget' value='<?php print __esc_x('Button: reset filter settings', 'Clear');?>' id='clear'>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</form>\n\t\t\t<script type='text/javascript'>\n\n\t\t\tfunction applyFilter() {\n\t\t\t\tstrURL  = 'vdef.php?header=false';\n\t\t\t\tstrURL += '&filter='+$('#filter').val();\n\t\t\t\tstrURL += '&rows='+$('#rows').val();\n\t\t\t\tstrURL += '&has_graphs='+$('#has_graphs').is(':checked');\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\tfunction clearFilter() {\n\t\t\t\tstrURL = 'vdef.php?clear=1&header=false';\n\t\t\t\tloadPageNoHeader(strURL);\n\t\t\t}\n\n\t\t\t$(function() {\n\t\t\t\t$('#refresh').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#has_graphs').click(function() {\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#clear').click(function() {\n\t\t\t\t\tclearFilter();\n\t\t\t\t});\n\n\t\t\t\t$('#form_vdef').submit(function(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tapplyFilter();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t</script>\n\t\t</td>\n\t</tr>\n\t<?php\n\n\thtml_end_box();\n}\n\nfunction get_vdef_records(&$total_rows, &$rows) {\n\t/* form the 'where' clause for our main sql query */\n\tif (get_request_var('filter') != '') {\n\t\t$sql_where = \"WHERE (rs.name LIKE '%\" . get_request_var('filter') . \"%')\";\n\t} else {\n\t\t$sql_where = '';\n\t}\n\n\tif (get_request_var('has_graphs') == 'true') {\n\t\t$sql_having = 'HAVING graphs>0';\n\t} else {\n\t\t$sql_having = '';\n\t}\n\n\t$total_rows = db_fetch_cell(\"SELECT\n\t\tCOUNT(`rows`)\n        FROM (\n            SELECT vd.id AS `rows`, vd.name,\n            SUM(CASE WHEN local_graph_id>0 THEN 1 ELSE 0 END) AS graphs\n            FROM vdef AS vd\n            LEFT JOIN graph_templates_item AS gti\n            ON gti.vdef_id=vd.id\n            GROUP BY vd.id\n        ) AS rs\n        $sql_where\n\t\t$sql_having\n\t\");\n\n\t$sql_order = get_order_string();\n\t$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;\n\n\treturn db_fetch_assoc(\"SELECT rs.*,\n\t\tSUM(CASE WHEN local_graph_id=0 THEN 1 ELSE 0 END) AS templates,\n        SUM(CASE WHEN local_graph_id>0 THEN 1 ELSE 0 END) AS graphs\n        FROM (\n            SELECT vd.*, gti.local_graph_id\n            FROM vdef AS vd\n            LEFT JOIN graph_templates_item AS gti\n            ON gti.vdef_id=vd.id\n            GROUP BY vd.id, gti.graph_template_id, gti.local_graph_id\n        ) AS rs\n\t\t$sql_where\n\t\tGROUP BY rs.id\n\t\t$sql_having\n\t\t$sql_order\n\t\t$sql_limit\");\n}\n\nfunction vdef($refresh = true) {\n\tglobal $vdef_actions;\n\n    /* ================= input validation and session storage ================= */\n    $filters = array(\n\t\t'rows' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '-1'\n\t\t\t),\n\t\t'page' => array(\n\t\t\t'filter' => FILTER_VALIDATE_INT,\n\t\t\t'default' => '1'\n\t\t\t),\n\t\t'filter' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'pageset' => true,\n\t\t\t'default' => '',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_column' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'name',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'sort_direction' => array(\n\t\t\t'filter' => FILTER_CALLBACK,\n\t\t\t'default' => 'ASC',\n\t\t\t'options' => array('options' => 'sanitize_search_string')\n\t\t\t),\n\t\t'has_graphs' => array(\n\t\t\t'filter' => FILTER_VALIDATE_REGEXP,\n\t\t\t'options' => array('options' => array('regexp' => '(true|false)')),\n\t\t\t'pageset' => true,\n\t\t\t'default' => read_config_option('default_has') == 'on' ? 'true':'false'\n\t\t\t)\n\t);\n\n\tvalidate_store_request_vars($filters, 'sess_vdef');\n\t/* ================= input validation ================= */\n\n\tvdef_filter();\n\n\t$total_rows = 0;\n\t$vdefs = array();\n\n\tif (get_request_var('rows') == '-1') {\n\t\t$rows = read_config_option('num_rows_table');\n\t} else {\n\t\t$rows = get_request_var('rows');\n\t}\n\n\t$vdefs = get_vdef_records($total_rows, $rows);\n\n\t$nav = html_nav_bar('vdef.php?filter=' . get_request_var('filter'), MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('VDEFs'), 'page', 'main');\n\n\tform_start('vdef.php', 'chk');\n\n    print $nav;\n\n\thtml_start_box('', '100%', '', '3', 'center', '');\n\n    $display_text = array(\n        'name'      => array('display' => __('VDEF Name'), 'align' => 'left', 'sort' => 'ASC', 'tip' => __esc('The name of this VDEF.') ),\n        'nosort'    => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __esc('VDEFs that are in use cannot be Deleted. In use is defined as being referenced by a Graph or a Graph Template.') ),\n        'graphs'    => array('display' => __('Graphs Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __esc('The number of Graphs using this VDEF.') ),\n        'templates' => array('display' => __('Templates Using'), 'align' => 'right', 'sort' => 'DESC', 'tip' => __esc('The number of Graphs Templates using this VDEF.') )\n\t);\n\n    html_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);\n\n    $i = 0;\n    if (cacti_sizeof($vdefs)) {\n        foreach ($vdefs as $vdef) {\n            if ($vdef['graphs'] == 0 && $vdef['templates'] == 0) {\n                $disabled = false;\n            } else {\n                $disabled = true;\n            }\n\n            form_alternate_row('line' . $vdef['id'], false, $disabled);\n\t\t\tform_selectable_cell(filter_value($vdef['name'], get_request_var('filter'), 'vdef.php?action=edit&id=' . $vdef['id']), $vdef['id']);\n            form_selectable_cell($disabled ? __('No'):__('Yes'), $vdef['id'], '', 'right');\n            form_selectable_cell(number_format_i18n($vdef['graphs'], '-1'), $vdef['id'], '', 'right');\n            form_selectable_cell(number_format_i18n($vdef['templates'], '-1'), $vdef['id'], '', 'right');\n            form_checkbox_cell($vdef['name'], $vdef['id'], $disabled);\n            form_end_row();\n        }\n    } else {\n        print \"<tr class='tableRow'><td colspan='4'><em>\" . __('No VDEFs') . \"</em></td></tr>\\n\";\n    }\n\n    html_end_box(false);\n\n    if (cacti_sizeof($vdefs)) {\n        print $nav;\n\t}\n\n    /* draw the dropdown containing a list of available actions for this form */\n    draw_actions_dropdown($vdef_actions);\n\n    form_end();\n}\n"], "filenames": ["CHANGELOG", "aggregate_graphs.php", "aggregate_templates.php", "automation_networks.php", "automation_tree_rules.php", "cdef.php", "color_templates.php", "data_debug.php", "data_input.php", "data_queries.php", "data_source_profiles.php", "data_sources.php", "data_templates.php", "gprint_presets.php", "graph_templates.php", "graph_view.php", "graphs.php", "host_templates.php", "lib/html_reports.php", "lib/html_utility.php", "links.php", "managers.php", "sites.php", "tree.php", "user_admin.php", "user_domains.php", "user_group_admin.php", "utilities.php", "vdef.php"], "buggy_code_start_loc": [8, 1202, 661, 1136, 950, 109, 578, 262, 925, 1382, 1004, 1563, 1019, 413, 811, 724, 2046, 854, 1625, 151, 400, 69, 532, 2012, 1244, 763, 691, 2484, 102], "buggy_code_end_loc": [8, 1532, 663, 1147, 957, 903, 581, 389, 928, 1386, 1011, 1567, 1022, 417, 817, 727, 2050, 857, 1640, 151, 404, 599, 540, 2023, 1245, 766, 979, 2494, 903], "fixing_code_start_loc": [9, 1202, 661, 1136, 950, 109, 578, 262, 925, 1382, 1004, 1563, 1019, 413, 811, 724, 2046, 854, 1625, 152, 400, 69, 532, 2012, 1244, 763, 691, 2484, 102], "fixing_code_end_loc": [12, 1532, 663, 1147, 957, 903, 581, 379, 928, 1386, 1011, 1567, 1022, 417, 817, 727, 2050, 857, 1640, 162, 404, 599, 540, 2023, 1245, 766, 979, 2494, 903], "type": "CWE-79", "message": "A cross-site scripting (XSS) vulnerability exists in color_templates.php in Cacti before 1.2.0 due to lack of escaping of unintended characters in the Name field for a Color.", "other": {"cve": {"id": "CVE-2018-20723", "sourceIdentifier": "cve@mitre.org", "published": "2019-01-16T16:29:00.510", "lastModified": "2020-03-01T22:15:11.070", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "A cross-site scripting (XSS) vulnerability exists in color_templates.php in Cacti before 1.2.0 due to lack of escaping of unintended characters in the Name field for a Color."}, {"lang": "es", "value": "Existe una vulnerabilidad Cross-Site Scripting (XSS) en color_templates.php en Cacti, en versiones anteriores a la 1.2.0, debido a la falta de escapado de caracteres no planeados en el campo Name de un color."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:cacti:cacti:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.2.0", "matchCriteriaId": "1C7FEEA7-B141-4E6E-8B73-4DFF4844A341"}]}]}], "references": [{"url": "http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00001.html", "source": "cve@mitre.org"}, {"url": "http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00005.html", "source": "cve@mitre.org"}, {"url": "http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00042.html", "source": "cve@mitre.org"}, {"url": "http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00048.html", "source": "cve@mitre.org"}, {"url": "https://github.com/Cacti/cacti/blob/develop/CHANGELOG", "source": "cve@mitre.org", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/Cacti/cacti/commit/80c2a88fb2afb93f87703ba4641f9970478c102d", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/Cacti/cacti/issues/2215", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Cacti/cacti/commit/80c2a88fb2afb93f87703ba4641f9970478c102d"}}