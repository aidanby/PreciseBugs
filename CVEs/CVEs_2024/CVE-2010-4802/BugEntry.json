{"buggy_code": ["package Mojo::Commands;\n\nuse strict;\nuse warnings;\n\nuse base 'Mojo::Command';\n\nuse Mojo::ByteStream 'b';\nuse Mojo::Loader;\n\n__PACKAGE__->attr(hint => <<\"EOF\");\n\nSee '$0 help COMMAND' for more information on a specific command.\nEOF\n__PACKAGE__->attr(message => <<\"EOF\");\nusage: $0 COMMAND [OPTIONS]\n\nTip: CGI, FastCGI and PSGI environments can be automatically detected very\n     often and work without commands.\n\nThese commands are currently available:\nEOF\n__PACKAGE__->attr(namespaces => sub { ['Mojo::Command'] });\n\n# Aren't we forgetting the true meaning of Christmas?\n# You know, the birth of Santa.\nsub run {\n    my ($self, $name, @args) = @_;\n\n    # Try to detect environment\n    $name = $self->_detect($name) unless $ENV{MOJO_NO_DETECT};\n\n    # Run command\n    if ($name && $name =~ /^\\w+$/ && ($name ne 'help' || $args[0])) {\n\n        # Help\n        my $help = $name eq 'help' ? 1 : 0;\n        $name = shift @args if $help;\n\n        # Try all namespaces\n        my $module;\n        for my $namespace (@{$self->namespaces}) {\n\n            # Generate module\n            my $try = $namespace . '::' . b($name)->camelize;\n\n            # Load\n            if (my $e = Mojo::Loader->load($try)) {\n\n                # Module missing\n                next unless ref $e;\n\n                # Real error\n                die $e;\n            }\n\n            # Module is a command\n            next unless $try->can('new') && $try->can('run');\n\n            # Found\n            $module = $try;\n            last;\n        }\n\n        # Command missing\n        die qq/Command \"$name\" missing, maybe you need to install it?\\n/\n          unless $module;\n\n        # Run\n        my $command = $module->new;\n        return $help ? $command->help : $command->run(@args);\n    }\n\n    # Try all namespaces\n    my $commands = [];\n    my $seen     = {};\n    for my $namespace (@{$self->namespaces}) {\n\n        # Search\n        if (my $modules = Mojo::Loader->search($namespace)) {\n            for my $module (@$modules) {\n\n                # Load\n                if (my $e = Mojo::Loader->load($module)) { die $e }\n\n                # Seen\n                my $command = $module;\n                $command =~ s/^$namespace\\:://;\n                push @$commands, [$command => $module]\n                  unless $seen->{$command};\n                $seen->{$command} = 1;\n            }\n        }\n    }\n\n    # Print overview\n    print $self->message;\n\n    # Make list\n    my $list   = [];\n    my $length = 0;\n    foreach my $command (@$commands) {\n\n        # Generate name\n        my $name = $command->[0];\n        $name = b($name)->decamelize;\n\n        # Add to list\n        my $l = length $name;\n        $length = $l if $l > $length;\n        push @$list, [$name, $command->[1]->new->description];\n    }\n\n    # Print list\n    foreach my $command (@$list) {\n        my $name        = $command->[0];\n        my $description = $command->[1];\n        my $padding     = ' ' x ($length - length $name);\n        print \"  $name$padding   $description\";\n    }\n\n    # Hint\n    print $self->hint;\n\n    return $self;\n}\n\nsub start {\n    my $self = shift;\n\n    # Don't run commands if we are reloading\n    return $self if $ENV{MOJO_COMMANDS_DONE};\n    $ENV{MOJO_COMMANDS_DONE} ||= 1;\n\n    # Arguments\n    my @args = @_ ? @_ : @ARGV;\n\n    # Run\n    return ref $self ? $self->run(@args) : $self->new->run(@args);\n}\n\nsub _detect {\n    my ($self, $name) = @_;\n\n    # PSGI (Plack only for now)\n    return 'psgi' if defined $ENV{PLACK_ENV};\n\n    # CGI\n    return 'cgi'\n      if defined $ENV{PATH_INFO} || defined $ENV{GATEWAY_INTERFACE};\n\n    # FastCGI\n    return 'fastcgi' unless defined $ENV{PATH};\n\n    # Nothing\n    return $name;\n}\n\n1;\n__END__\n\n=head1 NAME\n\nMojo::Commands - Commands\n\n=head1 SYNOPSIS\n\n    use Mojo::Commands;\n\n    # Command line interface\n    my $commands = Mojo::Commands->new;\n    $commands->run(@ARGV);\n\n=head1 DESCRIPTION\n\nL<Mojo::Commands> is the interactive command line interface to the L<Mojo>\nframework.\nIt will automatically detect available commands in the L<Mojo::Command>\nnamespace.\nCommands are implemented by subclassing L<Mojo::Command>.\n\nThese commands are available by default.\n\n=over 4\n\n=item C<help>\n\n    mojo\n    mojo help\n\nList available commands with short descriptions.\n\n    mojo help <command>\n\nList available options for the command with short descriptions.\n\n=item C<generate>\n\n    mojo generate\n    mojo generate help\n\nList available generator commands with short descriptions.\n\n    mojo generate help <generator>\n\nList available options for generator command with short descriptions.\n\n=item C<generate app>\n\n    mojo generate app <AppName>\n\nGenerate application directory structure for a fully functional L<Mojo>\napplication.\n\n=item C<generate makefile>\n\n    script/myapp generate makefile\n\nGenerate C<Makefile.PL> file for application.\n\n=item C<generate psgi>\n\n    script/myapp generate psgi\n\nGenerate C<myapp.psgi> file for application.\n\n=item C<cgi>\n\n    mojo cgi\n    script/myapp cgi\n\nStart application with CGI backend.\n\n=item C<daemon>\n\n    mojo cgi\n    script/myapp daemon\n\nStart application with standalone HTTP 1.1 server backend.\n\n=item C<daemon_prefork>\n\n    mojo daemon_prefork\n    script/myapp daemon_prefork\n\nStart application with preforking standalone HTTP 1.1 server backend.\n\n=item C<fastcgi>\n\n    mojo fastcgi\n    script/myapp fastcgi\n\nStart application with FastCGI backend.\n\n=item C<get>\n\n   mojo get http://mojolicious.org\n   script/myapp get /foo\n\nPerform GET request to remote host or local application.\n\n=item C<test>\n\n   mojo test\n   script/myapp test\n   script/myapp test t/foo.t\n\nRuns application tests from the C<t> directory.\n\n=item C<version>\n\n    mojo version\n\nList version information for installed core and optional modules, very useful\nfor debugging.\n\n=back\n\n=head1 ATTRIBUTES\n\nL<Mojo::Commands> inherits all attributes from L<Mojo::Command> and\nimplements the following new ones.\n\n=head2 C<hint>\n\n    my $hint  = $commands->hint;\n    $commands = $commands->hint('Foo!');\n\nShort hint shown after listing available commands.\n\n=head2 C<message>\n\n    my $message  = $commands->message;\n    $commands    = $commands->message('Hello World!');\n\nShort usage message shown before listing available commands.\n\n=head2 C<namespaces>\n\n    my $namespaces = $commands->namespaces;\n    $commands      = $commands->namespaces(['Mojo::Command']);\n\nNamespaces to search for available commands, defaults to L<Mojo::Command>.\n\n=head1 METHODS\n\nL<Mojo::Commands> inherits all methods from L<Mojo::Command> and implements\nthe following new ones.\n\n=head2 C<run>\n\n    $commands->run;\n    $commands->run(@ARGV);\n\nLoad and run commands.\n\n=head2 C<start>\n\n    Mojo::Commands->start;\n    Mojo::Commands->start(@ARGV);\n\nStart the command line interface.\n\n=head1 SEE ALSO\n\nL<Mojolicious>, L<Mojolicious::Guides>, L<http://mojolicious.org>.\n\n=cut\n"], "fixing_code": ["package Mojo::Commands;\n\nuse strict;\nuse warnings;\n\nuse base 'Mojo::Command';\n\nuse Mojo::ByteStream 'b';\nuse Mojo::Loader;\n\n__PACKAGE__->attr(hint => <<\"EOF\");\n\nSee '$0 help COMMAND' for more information on a specific command.\nEOF\n__PACKAGE__->attr(message => <<\"EOF\");\nusage: $0 COMMAND [OPTIONS]\n\nTip: CGI, FastCGI and PSGI environments can be automatically detected very\n     often and work without commands.\n\nThese commands are currently available:\nEOF\n__PACKAGE__->attr(namespaces => sub { ['Mojo::Command'] });\n\n# Aren't we forgetting the true meaning of Christmas?\n# You know, the birth of Santa.\nsub run {\n    my ($self, $name, @args) = @_;\n\n    # Try to detect environment\n    $name = $self->_detect($name) unless $ENV{MOJO_NO_DETECT};\n\n    # Run command\n    if ($name && $name =~ /^\\w+$/ && ($name ne 'help' || $args[0])) {\n\n        # Help\n        my $help = $name eq 'help' ? 1 : 0;\n        $name = shift @args if $help;\n\n        # Try all namespaces\n        my $module;\n        for my $namespace (@{$self->namespaces}) {\n\n            # Generate module\n            my $try = $namespace . '::' . b($name)->camelize;\n\n            # Load\n            if (my $e = Mojo::Loader->load($try)) {\n\n                # Module missing\n                next unless ref $e;\n\n                # Real error\n                die $e;\n            }\n\n            # Module is a command\n            next unless $try->can('new') && $try->can('run');\n\n            # Found\n            $module = $try;\n            last;\n        }\n\n        # Command missing\n        die qq/Command \"$name\" missing, maybe you need to install it?\\n/\n          unless $module;\n\n        # Run\n        my $command = $module->new;\n        return $help ? $command->help : $command->run(@args);\n    }\n\n    # Try all namespaces\n    my $commands = [];\n    my $seen     = {};\n    for my $namespace (@{$self->namespaces}) {\n\n        # Search\n        if (my $modules = Mojo::Loader->search($namespace)) {\n            for my $module (@$modules) {\n\n                # Load\n                if (my $e = Mojo::Loader->load($module)) { die $e }\n\n                # Seen\n                my $command = $module;\n                $command =~ s/^$namespace\\:://;\n                push @$commands, [$command => $module]\n                  unless $seen->{$command};\n                $seen->{$command} = 1;\n            }\n        }\n    }\n\n    # Print overview\n    print $self->message;\n\n    # Make list\n    my $list   = [];\n    my $length = 0;\n    foreach my $command (@$commands) {\n\n        # Generate name\n        my $name = $command->[0];\n        $name = b($name)->decamelize;\n\n        # Add to list\n        my $l = length $name;\n        $length = $l if $l > $length;\n        push @$list, [$name, $command->[1]->new->description];\n    }\n\n    # Print list\n    foreach my $command (@$list) {\n        my $name        = $command->[0];\n        my $description = $command->[1];\n        my $padding     = ' ' x ($length - length $name);\n        print \"  $name$padding   $description\";\n    }\n\n    # Hint\n    print $self->hint;\n\n    return $self;\n}\n\nsub start {\n    my $self = shift;\n\n    # Don't run commands if we are reloading\n    return $self if $ENV{MOJO_COMMANDS_DONE};\n    $ENV{MOJO_COMMANDS_DONE} ||= 1;\n\n    # Arguments\n    my @args = @_ ? @_ : @ARGV;\n\n    # Run\n    return ref $self ? $self->run(@args) : $self->new->run(@args);\n}\n\nsub _detect {\n    my ($self, $name) = @_;\n\n    # PSGI (Plack only for now)\n    return 'psgi' if defined $ENV{PLACK_ENV};\n\n    # CGI\n    return 'cgi'\n      if defined $ENV{PATH_INFO} || defined $ENV{GATEWAY_INTERFACE};\n\n    # No further detection if we have a name\n    return $name if $name;\n\n    # FastCGI\n    return 'fastcgi' unless defined $ENV{PATH};\n\n    # Nothing\n    return;\n}\n\n1;\n__END__\n\n=head1 NAME\n\nMojo::Commands - Commands\n\n=head1 SYNOPSIS\n\n    use Mojo::Commands;\n\n    # Command line interface\n    my $commands = Mojo::Commands->new;\n    $commands->run(@ARGV);\n\n=head1 DESCRIPTION\n\nL<Mojo::Commands> is the interactive command line interface to the L<Mojo>\nframework.\nIt will automatically detect available commands in the L<Mojo::Command>\nnamespace.\nCommands are implemented by subclassing L<Mojo::Command>.\n\nThese commands are available by default.\n\n=over 4\n\n=item C<help>\n\n    mojo\n    mojo help\n\nList available commands with short descriptions.\n\n    mojo help <command>\n\nList available options for the command with short descriptions.\n\n=item C<generate>\n\n    mojo generate\n    mojo generate help\n\nList available generator commands with short descriptions.\n\n    mojo generate help <generator>\n\nList available options for generator command with short descriptions.\n\n=item C<generate app>\n\n    mojo generate app <AppName>\n\nGenerate application directory structure for a fully functional L<Mojo>\napplication.\n\n=item C<generate makefile>\n\n    script/myapp generate makefile\n\nGenerate C<Makefile.PL> file for application.\n\n=item C<generate psgi>\n\n    script/myapp generate psgi\n\nGenerate C<myapp.psgi> file for application.\n\n=item C<cgi>\n\n    mojo cgi\n    script/myapp cgi\n\nStart application with CGI backend.\n\n=item C<daemon>\n\n    mojo cgi\n    script/myapp daemon\n\nStart application with standalone HTTP 1.1 server backend.\n\n=item C<daemon_prefork>\n\n    mojo daemon_prefork\n    script/myapp daemon_prefork\n\nStart application with preforking standalone HTTP 1.1 server backend.\n\n=item C<fastcgi>\n\n    mojo fastcgi\n    script/myapp fastcgi\n\nStart application with FastCGI backend.\n\n=item C<get>\n\n   mojo get http://mojolicious.org\n   script/myapp get /foo\n\nPerform GET request to remote host or local application.\n\n=item C<test>\n\n   mojo test\n   script/myapp test\n   script/myapp test t/foo.t\n\nRuns application tests from the C<t> directory.\n\n=item C<version>\n\n    mojo version\n\nList version information for installed core and optional modules, very useful\nfor debugging.\n\n=back\n\n=head1 ATTRIBUTES\n\nL<Mojo::Commands> inherits all attributes from L<Mojo::Command> and\nimplements the following new ones.\n\n=head2 C<hint>\n\n    my $hint  = $commands->hint;\n    $commands = $commands->hint('Foo!');\n\nShort hint shown after listing available commands.\n\n=head2 C<message>\n\n    my $message  = $commands->message;\n    $commands    = $commands->message('Hello World!');\n\nShort usage message shown before listing available commands.\n\n=head2 C<namespaces>\n\n    my $namespaces = $commands->namespaces;\n    $commands      = $commands->namespaces(['Mojo::Command']);\n\nNamespaces to search for available commands, defaults to L<Mojo::Command>.\n\n=head1 METHODS\n\nL<Mojo::Commands> inherits all methods from L<Mojo::Command> and implements\nthe following new ones.\n\n=head2 C<run>\n\n    $commands->run;\n    $commands->run(@ARGV);\n\nLoad and run commands.\n\n=head2 C<start>\n\n    Mojo::Commands->start;\n    Mojo::Commands->start(@ARGV);\n\nStart the command line interface.\n\n=head1 SEE ALSO\n\nL<Mojolicious>, L<Mojolicious::Guides>, L<http://mojolicious.org>.\n\n=cut\n"], "filenames": ["lib/Mojo/Commands.pm"], "buggy_code_start_loc": [151], "buggy_code_end_loc": [157], "fixing_code_start_loc": [152], "fixing_code_end_loc": [160], "type": "CWE-20", "message": "Commands.pm in Mojolicious before 0.999928 does not properly perform CGI environment detection, which has unspecified impact and remote attack vectors.", "other": {"cve": {"id": "CVE-2010-4802", "sourceIdentifier": "cve@mitre.org", "published": "2011-05-03T00:55:00.950", "lastModified": "2011-08-27T03:46:21.873", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Commands.pm in Mojolicious before 0.999928 does not properly perform CGI environment detection, which has unspecified impact and remote attack vectors."}, {"lang": "es", "value": "Commands.pm en Mojolicious en versiones anteriores a v0.999928 no realiza una detecci\u00f3n adecuada de entornos CGI, lo cual tiene un impacto no especificado y vectores de ataque remoto."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": true, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:*:*:*:*:*:*:*:*", "versionEndIncluding": "0.999927", "matchCriteriaId": "F470698D-3499-4C75-B4CE-FAA0E7BCE5D7"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.2:*:*:*:*:*:*:*", "matchCriteriaId": "083A2DA9-38BB-4AF8-9FF0-41101E830A0D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.3:*:*:*:*:*:*:*", "matchCriteriaId": "C2C11EC7-D91E-4F65-9C8A-801C724EDBBF"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.4:*:*:*:*:*:*:*", "matchCriteriaId": "BC33620B-2B78-4221-8067-15E8BC56865A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.5:*:*:*:*:*:*:*", "matchCriteriaId": "69AC00B5-717B-4F7F-AD25-9754BEFD7221"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.6:*:*:*:*:*:*:*", "matchCriteriaId": "F2E2469A-BE25-4D18-8E7D-F709DCB86FCF"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.7:*:*:*:*:*:*:*", "matchCriteriaId": "02BB8742-9D5C-4831-BD2F-A24505B8E4C7"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.8:*:*:*:*:*:*:*", "matchCriteriaId": "82CA1476-123D-44D5-A1E8-D9C58F6D9949"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.8.1:*:*:*:*:*:*:*", "matchCriteriaId": "479781F2-9614-4552-AE39-12AC41ABB3AD"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.8.2:*:*:*:*:*:*:*", "matchCriteriaId": "78D1279D-333D-4338-B4ED-07BB1900FB0B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.8.3:*:*:*:*:*:*:*", "matchCriteriaId": "0D21184D-8823-4162-961D-8A7856557786"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.8.4:*:*:*:*:*:*:*", "matchCriteriaId": "538FC292-B6BF-4551-AE44-259E0B61B680"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.8.5:*:*:*:*:*:*:*", "matchCriteriaId": "574F7A7C-3986-401D-A58F-6C8F7D922002"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.9:*:*:*:*:*:*:*", "matchCriteriaId": "BDACD094-8117-460E-B7D1-E63EC00B97A5"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.8006:*:*:*:*:*:*:*", "matchCriteriaId": "6965DAA1-FDD8-484B-873A-F6D13227FAD0"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.8007:*:*:*:*:*:*:*", "matchCriteriaId": "9865E142-BB29-4718-BD85-F40E185BF31E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.8008:*:*:*:*:*:*:*", "matchCriteriaId": "9F667C15-3C89-49CD-800D-303A2677FC36"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.8009:*:*:*:*:*:*:*", "matchCriteriaId": "8B301544-A38F-417C-BB94-E7711F8ED7C2"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.9001:*:*:*:*:*:*:*", "matchCriteriaId": "ADEBDEB2-3070-4633-A934-DDF49CBD10C5"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.9002:*:*:*:*:*:*:*", "matchCriteriaId": "5875A25D-CC0E-43CF-B617-CEA99C65A52A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991231:*:*:*:*:*:*:*", "matchCriteriaId": "D8C04B9B-DEA3-4161-8E6C-BBBBE9AF5444"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991232:*:*:*:*:*:*:*", "matchCriteriaId": "EE5F9699-7B1B-4356-B0EB-C942888AFEE9"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991233:*:*:*:*:*:*:*", "matchCriteriaId": "A041B8EB-AD9E-452B-9A2E-22DBCD5CB091"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991234:*:*:*:*:*:*:*", "matchCriteriaId": "4BE7A136-3975-400A-AB77-4BCD4669553A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991235:*:*:*:*:*:*:*", "matchCriteriaId": "FE628F19-D7C9-4E6D-BDC4-5C82CDE540E3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991236:*:*:*:*:*:*:*", "matchCriteriaId": "26803A52-EAEC-4CD6-BB89-F1EF40B3021F"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991237:*:*:*:*:*:*:*", "matchCriteriaId": "B7BC4454-3168-420B-9136-21FD18571526"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991238:*:*:*:*:*:*:*", "matchCriteriaId": "A346280F-BA80-4FBA-BD15-6CA7A1ED8D8C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991239:*:*:*:*:*:*:*", "matchCriteriaId": "B0376F10-8493-498D-9B5D-76AFE0F4417A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991240:*:*:*:*:*:*:*", "matchCriteriaId": "69293BBF-7788-4462-AA6F-9D3A084D1B3A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991241:*:*:*:*:*:*:*", "matchCriteriaId": "31F30FA3-69EC-45B3-8AF5-852DB73756A7"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991242:*:*:*:*:*:*:*", "matchCriteriaId": "B88557E4-C793-4F6A-A3AE-07799B212ECB"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991243:*:*:*:*:*:*:*", "matchCriteriaId": "8F88C231-60FE-42F3-87E9-23E88ADC7650"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991244:*:*:*:*:*:*:*", "matchCriteriaId": "BD65F43C-98A9-46A1-BCC4-79ACB5F5C6B2"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991245:*:*:*:*:*:*:*", "matchCriteriaId": "B0A9F1C7-1C0A-42B1-91D3-676E03E64BB9"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991246:*:*:*:*:*:*:*", "matchCriteriaId": "A886B4DC-30E9-4C41-A79A-96F309F343F1"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991250:*:*:*:*:*:*:*", "matchCriteriaId": "C28AEC3C-20F0-4BFB-B7B6-30336C631400"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.991251:*:*:*:*:*:*:*", "matchCriteriaId": "7D0521BF-A66D-4663-83C6-49E650454ED5"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999901:*:*:*:*:*:*:*", "matchCriteriaId": "2C95BB3D-774C-4C71-9A3A-15938BA5CF6F"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999902:*:*:*:*:*:*:*", "matchCriteriaId": "B583B413-4B8E-4FA3-9CD1-A650CEAB9449"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999903:*:*:*:*:*:*:*", "matchCriteriaId": "CDC7A6F1-BD38-4119-B5A7-56A50EC6C9C7"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999904:*:*:*:*:*:*:*", "matchCriteriaId": "2DEFF843-57F4-4553-ABD3-7269A32A6DE4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999905:*:*:*:*:*:*:*", "matchCriteriaId": "E8A7C4E6-5E3E-43CB-8F54-4AA5563EA98C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999906:*:*:*:*:*:*:*", "matchCriteriaId": "C6CB9879-D8B4-45CA-BF63-D4681C403818"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999907:*:*:*:*:*:*:*", "matchCriteriaId": "66EE203A-CFB1-4317-879D-E6A44F063F66"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999908:*:*:*:*:*:*:*", "matchCriteriaId": "F7978FDA-7622-4041-BE9E-28F99A1FB16E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999909:*:*:*:*:*:*:*", "matchCriteriaId": "B0975B5B-5409-42F5-A50F-644A80F3E5F8"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999910:*:*:*:*:*:*:*", "matchCriteriaId": "69AB9069-49F9-43B5-9F0F-04BBB145FD7B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999911:*:*:*:*:*:*:*", "matchCriteriaId": "77CA7A3A-254D-4154-8AFB-FA7BC4EB286A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999912:*:*:*:*:*:*:*", "matchCriteriaId": "0FA8D9CE-BD9E-4BD2-B38C-909CCE0D3842"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999913:*:*:*:*:*:*:*", "matchCriteriaId": "6DABFC81-F44C-46AB-B9CD-D35624F5071A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999914:*:*:*:*:*:*:*", "matchCriteriaId": "DE8BDB83-641B-4858-B00A-EEFC9F583050"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999920:*:*:*:*:*:*:*", "matchCriteriaId": "D010713B-DE3E-4E76-8299-FF50D19ADA45"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999921:*:*:*:*:*:*:*", "matchCriteriaId": "92B83ECE-5D7C-417D-9957-976ECE8E2308"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999922:*:*:*:*:*:*:*", "matchCriteriaId": "59E2E6AF-11DD-4C51-A84F-129D160ACAFD"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999923:*:*:*:*:*:*:*", "matchCriteriaId": "E9590109-8DFC-4E78-B678-8456A0621C08"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999924:*:*:*:*:*:*:*", "matchCriteriaId": "03FD1031-0C3D-45F1-BFD9-823C6D4B69F9"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999925:*:*:*:*:*:*:*", "matchCriteriaId": "44059C1E-CDC6-4B75-92CC-CD45C5063F9D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mojolicious:mojolicious:0.999926:*:*:*:*:*:*:*", "matchCriteriaId": "6278FC7E-6852-46B1-9F38-58847391B2F9"}]}]}], "references": [{"url": "http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=622952", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "http://cpansearch.perl.org/src/KRAIH/Mojolicious-1.20/Changes", "source": "cve@mitre.org"}, {"url": "http://www.debian.org/security/2011/dsa-2239", "source": "cve@mitre.org"}, {"url": "https://github.com/kraih/mojo/commit/aa7c8da54b1ebd4ccb64aa66dede7b7cdb381c44", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://github.com/kraih/mojo/commit/b3a1fb453eda447c0bb082cd9eed81bb75a7564a", "source": "cve@mitre.org", "tags": ["Patch"]}]}, "github_commit_url": "https://github.com/kraih/mojo/commit/aa7c8da54b1ebd4ccb64aa66dede7b7cdb381c44"}}