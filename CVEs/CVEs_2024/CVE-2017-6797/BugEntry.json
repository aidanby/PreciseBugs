{"buggy_code": ["<?php\n# MantisBT - A PHP based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handling of Bug Status change\n * @package MantisBT\n * @copyright Copyright 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n * @copyright Copyright 2002  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n * @link http://www.mantisbt.org\n *\n * @uses core.php\n * @uses access_api.php\n * @uses authentication_api.php\n * @uses bug_api.php\n * @uses config_api.php\n * @uses constant_inc.php\n * @uses custom_field_api.php\n * @uses date_api.php\n * @uses event_api.php\n * @uses form_api.php\n * @uses gpc_api.php\n * @uses helper_api.php\n * @uses html_api.php\n * @uses lang_api.php\n * @uses print_api.php\n * @uses relationship_api.php\n * @uses sponsorship_api.php\n * @uses version_api.php\n */\n\n$g_allow_browser_cache = 1;\n\nrequire_once( 'core.php' );\nrequire_api( 'access_api.php' );\nrequire_api( 'authentication_api.php' );\nrequire_api( 'bug_api.php' );\nrequire_api( 'config_api.php' );\nrequire_api( 'constant_inc.php' );\nrequire_api( 'custom_field_api.php' );\nrequire_api( 'date_api.php' );\nrequire_api( 'event_api.php' );\nrequire_api( 'form_api.php' );\nrequire_api( 'gpc_api.php' );\nrequire_api( 'helper_api.php' );\nrequire_api( 'html_api.php' );\nrequire_api( 'lang_api.php' );\nrequire_api( 'print_api.php' );\nrequire_api( 'relationship_api.php' );\nrequire_api( 'sponsorship_api.php' );\nrequire_api( 'version_api.php' );\n\n$f_bug_id = gpc_get_int( 'id' );\n$t_bug = bug_get( $f_bug_id );\n\n$t_file = __FILE__;\n$t_mantis_dir = dirname( __FILE__ ) . DIRECTORY_SEPARATOR;\n$t_show_page_header = false;\n$t_force_readonly = true;\n$t_fields_config_option = 'bug_change_status_page_fields';\n\nif( $t_bug->project_id != helper_get_current_project() ) {\n\t# in case the current project is not the same project of the bug we are viewing...\n\t# ... override the current project. This to avoid problems with categories and handlers lists etc.\n\t$g_project_override = $t_bug->project_id;\n}\n\n$f_new_status = gpc_get_int( 'new_status' );\n$f_change_type = gpc_get_string( 'change_type', BUG_UPDATE_TYPE_CHANGE_STATUS );\n\n$t_reopen = config_get( 'bug_reopen_status', null, null, $t_bug->project_id );\n$t_resolved = config_get( 'bug_resolved_status_threshold', null, null, $t_bug->project_id );\n$t_closed = config_get( 'bug_closed_status_threshold', null, null, $t_bug->project_id );\n$t_current_user_id = auth_get_current_user_id();\n\n# Ensure user has proper access level before proceeding\nif( $f_new_status == $t_reopen && $f_change_type == BUG_UPDATE_TYPE_REOPEN ) {\n\taccess_ensure_can_reopen_bug( $t_bug, $t_current_user_id );\n} else if( $f_new_status == $t_closed ) {\n\taccess_ensure_can_close_bug( $t_bug, $t_current_user_id );\n} else if( bug_is_readonly( $f_bug_id )\n\t|| !access_has_bug_level( access_get_status_threshold( $f_new_status, $t_bug->project_id ), $f_bug_id, $t_current_user_id ) ) {\n\taccess_denied();\n}\n\n$t_can_update_due_date = access_has_bug_level( config_get( 'due_date_update_threshold' ), $f_bug_id );\nif( $t_can_update_due_date ) {\n\trequire_js( 'jscalendar/calendar.js' );\n\trequire_js( 'jscalendar/lang/calendar-en.js' );\n\trequire_js( 'jscalendar/calendar-setup.js' );\n\trequire_css( 'calendar-blue.css' );\n}\n\n# get new issue handler if set, otherwise default to original handler\n$f_handler_id = gpc_get_int( 'handler_id', $t_bug->handler_id );\n\nif( config_get( 'bug_assigned_status' ) == $f_new_status ) {\n\t$t_bug_sponsored = config_get( 'enable_sponsorship' )\n\t\t&& sponsorship_get_amount( sponsorship_get_all_ids( $f_bug_id ) ) > 0;\n\tif( $t_bug_sponsored && !access_has_bug_level( config_get( 'assign_sponsored_bugs_threshold' ), $f_bug_id ) ) {\n\t\ttrigger_error( ERROR_SPONSORSHIP_ASSIGNER_ACCESS_LEVEL_TOO_LOW, ERROR );\n\t}\n\n\tif( $f_handler_id != NO_USER ) {\n\t\tif( !access_has_bug_level( config_get( 'handle_bug_threshold' ), $f_bug_id, $f_handler_id ) ) {\n\t\t\ttrigger_error( ERROR_HANDLER_ACCESS_TOO_LOW, ERROR );\n\t\t}\n\n\t\tif( $t_bug_sponsored && !access_has_bug_level( config_get( 'handle_sponsored_bugs_threshold' ), $f_bug_id, $f_handler_id ) ) {\n\t\t\ttrigger_error( ERROR_SPONSORSHIP_HANDLER_ACCESS_LEVEL_TOO_LOW, ERROR );\n\t\t}\n\t}\n}\n\n$t_status_label = str_replace( ' ', '_', MantisEnum::getLabel( config_get( 'status_enum_string' ), $f_new_status ) );\n\nhtml_page_top( bug_format_summary( $f_bug_id, SUMMARY_CAPTION ) );\n\nprint_recently_visited();\n?>\n\n<br />\n<div id=\"bug-change-status-div\" class=\"form-container\">\n\n<h2><?php echo lang_get( $t_status_label . '_bug_title' ); ?></h2>\n<?php\n\tif( $f_new_status >= $t_resolved ) {\n\t\tif( relationship_can_resolve_bug( $f_bug_id ) == false ) {\n\t\t\techo '<div class=\"footer\">';\n\t\t\techo lang_get( 'relationship_warning_blocking_bugs_not_resolved_2' );\n\t\t\techo '</div>';\n\t\t}\n\t}\n?>\n\n<form id=\"bug-change-status-form\" name=\"bug_change_status_form\" method=\"post\" action=\"bug_update.php\">\n\n<fieldset>\n\n\t<?php echo form_security_field( 'bug_update' ) ?>\n\n\t<input type=\"hidden\" name=\"bug_id\" value=\"<?php echo $f_bug_id ?>\" />\n\t<input type=\"hidden\" name=\"status\" value=\"<?php echo $f_new_status ?>\" />\n\t<input type=\"hidden\" name=\"last_updated\" value=\"<?php echo $t_bug->last_updated ?>\" />\n\t<input type=\"hidden\" name=\"action_type\" value=\"<?php echo $f_change_type; ?>\" />\n\n<?php\n\t$t_current_resolution = $t_bug->resolution;\n\t$t_bug_is_open = $t_current_resolution < $t_resolved;\n\n\tif( $f_new_status >= $t_resolved && ( $f_new_status < $t_closed || $t_bug_is_open ) ) {\n?>\n\t<!-- Resolution -->\n\t<div class=\"field-container\">\n\t\t<label for=\"resolution\">\n\t\t\t<span><?php echo lang_get( 'resolution' ) ?></span>\n\t\t</label>\n\t\t<span class=\"select\">\n \t\t\t<select name=\"resolution\">\n<?php\n\t\t\t\t$t_resolution = $t_bug_is_open ? config_get( 'bug_resolution_fixed_threshold' ) : $t_current_resolution;\n\n\t\t\t\t$t_relationships = relationship_get_all_src( $f_bug_id );\n\t\t\t\tforeach( $t_relationships as $t_relationship ) {\n\t\t\t\t\tif( $t_relationship->type == BUG_DUPLICATE ) {\n\t\t\t\t\t\t$t_resolution = config_get( 'bug_duplicate_resolution' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprint_enum_string_option_list( 'resolution', $t_resolution );\n?>\n\t\t\t</select>\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n<?php\n\t\tif( $t_resolution != config_get( 'bug_duplicate_resolution' ) ) {\n?>\n\t<!-- Duplicate ID -->\n\t<div class=\"field-container\">\n\t\t<label for=\"duplicate_id\">\n\t\t\t<span><?php echo lang_get( 'duplicate_id' ) ?></span>\n\t\t</label>\n\t\t<span class=\"input\">\n \t\t\t<input type=\"text\" name=\"duplicate_id\" maxlength=\"10\" />\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n\n<?php\n\t\t}\n\t}\n\n\tif( access_has_bug_level( config_get( 'update_bug_assign_threshold', config_get( 'update_bug_threshold' ) ), $f_bug_id ) ) {\n\t\t$t_suggested_handler_id = $t_bug->handler_id;\n\n\t\tif( $t_suggested_handler_id == NO_USER && access_has_bug_level( config_get( 'handle_bug_threshold' ), $f_bug_id ) ) {\n\t\t\t$t_suggested_handler_id = $t_current_user_id;\n\t\t}\n\n?>\n\t<!-- Assigned To -->\n\t<div class=\"field-container\">\n\t\t<label for=\"handler_id\">\n\t\t\t<span><?php echo lang_get( 'assigned_to' ) ?></span>\n\t\t</label>\n\t\t<span class=\"select\">\n\t\t\t<select name=\"handler_id\">\n\t\t\t\t<option value=\"0\"></option>\n\t\t\t\t<?php print_assign_to_option_list( $t_suggested_handler_id, $t_bug->project_id ) ?>\n\t\t\t</select>\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n\n<?php\n\t}\n\n\tif( $t_can_update_due_date ) {\n\t\t$t_date_to_display = '';\n\n\t\tif( !date_is_null( $t_bug->due_date ) ) {\n\t\t\t$t_date_to_display = date( config_get( 'calendar_date_format' ), $t_bug->due_date );\n\t\t}\n?>\n\t<!-- Due date -->\n\t<div class=\"field-container\">\n\t\t<label for=\"due_date\">\n\t\t\t<span><?php echo lang_get( 'due_date' ) ?></span>\n\t\t</label>\n\t\t<span class=\"input\">\n \t\t\t<input type=\"text\" id=\"due_date\" name=\"due_date\"\n \t\t\t\tclass=\"datetime\" size=\"20\" maxlength=\"16\"\n \t\t\t\t<?php helper_get_tab_index() ?>\n \t\t\t\tvalue=\"<?php echo $t_date_to_display ?>\" />\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n\n<?php\n\t}\n?>\n\n\t<!-- Custom Fields -->\n<?php\n\t/**\n\t * @todo thraxisp - I undid part of the change for #5068 for #5527\n\t * We really need to say what fields are shown in which statusses. For now,\n\t * this page will show required custom fields in update mode, or\n\t * display or required fields on resolve or close\n\t */\n\t$t_custom_status_label = 'update'; # Don't show custom fields by default\n\tif( ( $f_new_status >= $t_resolved ) && ( $f_new_status < $t_closed ) ) {\n\t\t$t_custom_status_label = 'resolved';\n\t}\n\tif( $t_closed == $f_new_status ) {\n\t\t$t_custom_status_label = 'closed';\n\t}\n\n\t$t_related_custom_field_ids = custom_field_get_linked_ids( $t_bug->project_id );\n\n\tforeach( $t_related_custom_field_ids as $t_id ) {\n\t\t$t_def = custom_field_get_definition( $t_id );\n\t\t$t_display = $t_def['display_' . $t_custom_status_label];\n\t\t$t_require = $t_def['require_' . $t_custom_status_label];\n\n\t\tif( ( 'update' == $t_custom_status_label ) && ( !$t_require ) ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif( in_array( $t_custom_status_label, array( 'resolved', 'closed' ) ) && !( $t_display || $t_require ) ) {\n\t\t\tcontinue;\n\t\t}\n\t\t$t_has_write_access = custom_field_has_write_access( $t_id, $f_bug_id );\n\t\t$t_class_required = $t_require && $t_has_write_access ? 'class=\"required\"' : '';\n?>\n\t<div class=\"field-container\">\n\t\t<label <?php echo $t_class_required ?> for=\"due_date\">\n\t\t\t<span><?php echo lang_get_defaulted( $t_def['name'] ) ?></span>\n\t\t</label>\n\t\t<span class=\"input\">\n<?php\n\t\t\tif( $t_has_write_access ) {\n\t\t\t\tprint_custom_field_input( $t_def, $f_bug_id );\n\t\t\t} elseif( custom_field_has_read_access( $t_id, $f_bug_id ) ) {\n\t\t\t\tprint_custom_field_value( $t_def, $t_id, $f_bug_id );\n\t\t\t}\n?>\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n\n<?php\n\t} # foreach( $t_related_custom_field_ids as $t_id )\n\n\tif( ( $f_new_status >= $t_resolved ) ) {\n\t\tif( version_should_show_product_version( $t_bug->project_id )\n\t\t\t&& !bug_is_readonly( $f_bug_id )\n\t\t\t&& access_has_bug_level( config_get( 'update_bug_threshold' ), $f_bug_id )\n\t\t) {\n?>\n\t<!-- Fixed in Version -->\n\t<div class=\"field-container\">\n\t\t<label for=\"due_date\">\n\t\t\t<span><?php echo lang_get( 'fixed_in_version' ) ?></span>\n\t\t</label>\n\t\t<span class=\"select\">\n\t\t\t<select name=\"fixed_in_version\">\n\t\t\t\t<?php print_version_option_list( $t_bug->fixed_in_version, $t_bug->project_id, VERSION_ALL ) ?>\n\t\t\t</select>\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n<?php\n\t\t}\n\t}\n\n\tevent_signal( 'EVENT_UPDATE_BUG_STATUS_FORM', array( $f_bug_id, $f_new_status ) );\n\n\tif( $f_change_type == BUG_UPDATE_TYPE_REOPEN ) {\n?>\n\t<!-- Bug was re-opened -->\n<?php\n\t\tprintf( '\t<input type=\"hidden\" name=\"resolution\" value=\"%s\" />' . \"\\n\", config_get( 'bug_reopen_resolution' ) );\n\t}\n?>\n\n\t<!-- Bugnote -->\n\t<div class=\"field-container\">\n\t\t<label for=\"bugnote_text\">\n\t\t\t<span><?php echo lang_get( 'add_bugnote_title' ) ?></span>\n\t\t</label>\n\t\t<span class=\"textarea\">\n\t\t\t<textarea name=\"bugnote_text\" cols=\"80\" rows=\"10\"></textarea>\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n\n<?php\n\tif( access_has_bug_level( config_get( 'private_bugnote_threshold' ), $f_bug_id ) ) {\n\t\t$t_default_bugnote_view_status = config_get( 'default_bugnote_view_status' );\n?>\n\t<!-- View status -->\n\t<div class=\"field-container\">\n\t\t<label for=\"private\">\n\t\t\t<span><?php echo lang_get( 'view_status' ) ?></span>\n\t\t</label>\n\t\t<span class=\"checkbox\">\n<?php\n\t\tif( access_has_bug_level( config_get( 'set_view_status_threshold' ), $f_bug_id ) ) {\n?>\n\t\t\t<input type=\"checkbox\" name=\"private\"\n\t\t\t\t<?php check_checked( $t_default_bugnote_view_status, VS_PRIVATE ); ?> />\n<?php\n\t\t\techo lang_get( 'private' );\n\t\t} else {\n\t\t\techo get_enum_element( 'project_view_state', $t_default_bugnote_view_status );\n\t\t}\n?>\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n\n<?php\n\t}\n\n\tif(     config_get( 'time_tracking_enabled' )\n\t\t&& access_has_bug_level( config_get( 'private_bugnote_threshold' ), $f_bug_id )\n\t\t&& access_has_bug_level( config_get( 'time_tracking_edit_threshold' ), $f_bug_id )\n\t) {\n?>\n\t<!-- Time tracking -->\n\t<div class=\"field-container\">\n\t\t<label for=\"time_tracking\">\n\t\t\t<span><?php echo lang_get( 'time_tracking' ) ?></span>\n\t\t</label>\n\t\t<span class=\"input\">\n\t\t\t<input type=\"text\" name=\"time_tracking\" size=\"5\" placeholder=\"hh:mm\" />\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n<?php\n\t}\n\n\tevent_signal( 'EVENT_BUGNOTE_ADD_FORM', array( $f_bug_id ) );\n?>\n\n\t<!-- Submit Button -->\n\t<span class=\"submit-button\">\n\t\t<input type=\"submit\" class=\"button\" value=\"<?php echo lang_get( $t_status_label . '_bug_button' ) ?>\" />\n\t</span>\n\n</fieldset>\n</form>\n</div>\n\n<br>\n\n<?php\ndefine( 'BUG_VIEW_INC_ALLOW', true );\ninclude( dirname( __FILE__ ) . '/bug_view_inc.php' );\n"], "fixing_code": ["<?php\n# MantisBT - A PHP based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handling of Bug Status change\n * @package MantisBT\n * @copyright Copyright 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n * @copyright Copyright 2002  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n * @link http://www.mantisbt.org\n *\n * @uses core.php\n * @uses access_api.php\n * @uses authentication_api.php\n * @uses bug_api.php\n * @uses config_api.php\n * @uses constant_inc.php\n * @uses custom_field_api.php\n * @uses date_api.php\n * @uses event_api.php\n * @uses form_api.php\n * @uses gpc_api.php\n * @uses helper_api.php\n * @uses html_api.php\n * @uses lang_api.php\n * @uses print_api.php\n * @uses relationship_api.php\n * @uses sponsorship_api.php\n * @uses version_api.php\n */\n\n$g_allow_browser_cache = 1;\n\nrequire_once( 'core.php' );\nrequire_api( 'access_api.php' );\nrequire_api( 'authentication_api.php' );\nrequire_api( 'bug_api.php' );\nrequire_api( 'config_api.php' );\nrequire_api( 'constant_inc.php' );\nrequire_api( 'custom_field_api.php' );\nrequire_api( 'date_api.php' );\nrequire_api( 'event_api.php' );\nrequire_api( 'form_api.php' );\nrequire_api( 'gpc_api.php' );\nrequire_api( 'helper_api.php' );\nrequire_api( 'html_api.php' );\nrequire_api( 'lang_api.php' );\nrequire_api( 'print_api.php' );\nrequire_api( 'relationship_api.php' );\nrequire_api( 'sponsorship_api.php' );\nrequire_api( 'version_api.php' );\n\n$f_bug_id = gpc_get_int( 'id' );\n$t_bug = bug_get( $f_bug_id );\n\n$t_file = __FILE__;\n$t_mantis_dir = dirname( __FILE__ ) . DIRECTORY_SEPARATOR;\n$t_show_page_header = false;\n$t_force_readonly = true;\n$t_fields_config_option = 'bug_change_status_page_fields';\n\nif( $t_bug->project_id != helper_get_current_project() ) {\n\t# in case the current project is not the same project of the bug we are viewing...\n\t# ... override the current project. This to avoid problems with categories and handlers lists etc.\n\t$g_project_override = $t_bug->project_id;\n}\n\n$f_new_status = gpc_get_int( 'new_status' );\n$f_change_type = gpc_get_string( 'change_type', BUG_UPDATE_TYPE_CHANGE_STATUS );\n\n$t_reopen = config_get( 'bug_reopen_status', null, null, $t_bug->project_id );\n$t_resolved = config_get( 'bug_resolved_status_threshold', null, null, $t_bug->project_id );\n$t_closed = config_get( 'bug_closed_status_threshold', null, null, $t_bug->project_id );\n$t_current_user_id = auth_get_current_user_id();\n\n# Ensure user has proper access level before proceeding\nif( $f_new_status == $t_reopen && $f_change_type == BUG_UPDATE_TYPE_REOPEN ) {\n\taccess_ensure_can_reopen_bug( $t_bug, $t_current_user_id );\n} else if( $f_new_status == $t_closed ) {\n\taccess_ensure_can_close_bug( $t_bug, $t_current_user_id );\n} else if( bug_is_readonly( $f_bug_id )\n\t|| !access_has_bug_level( access_get_status_threshold( $f_new_status, $t_bug->project_id ), $f_bug_id, $t_current_user_id ) ) {\n\taccess_denied();\n}\n\n$t_can_update_due_date = access_has_bug_level( config_get( 'due_date_update_threshold' ), $f_bug_id );\nif( $t_can_update_due_date ) {\n\trequire_js( 'jscalendar/calendar.js' );\n\trequire_js( 'jscalendar/lang/calendar-en.js' );\n\trequire_js( 'jscalendar/calendar-setup.js' );\n\trequire_css( 'calendar-blue.css' );\n}\n\n# get new issue handler if set, otherwise default to original handler\n$f_handler_id = gpc_get_int( 'handler_id', $t_bug->handler_id );\n\nif( config_get( 'bug_assigned_status' ) == $f_new_status ) {\n\t$t_bug_sponsored = config_get( 'enable_sponsorship' )\n\t\t&& sponsorship_get_amount( sponsorship_get_all_ids( $f_bug_id ) ) > 0;\n\tif( $t_bug_sponsored && !access_has_bug_level( config_get( 'assign_sponsored_bugs_threshold' ), $f_bug_id ) ) {\n\t\ttrigger_error( ERROR_SPONSORSHIP_ASSIGNER_ACCESS_LEVEL_TOO_LOW, ERROR );\n\t}\n\n\tif( $f_handler_id != NO_USER ) {\n\t\tif( !access_has_bug_level( config_get( 'handle_bug_threshold' ), $f_bug_id, $f_handler_id ) ) {\n\t\t\ttrigger_error( ERROR_HANDLER_ACCESS_TOO_LOW, ERROR );\n\t\t}\n\n\t\tif( $t_bug_sponsored && !access_has_bug_level( config_get( 'handle_sponsored_bugs_threshold' ), $f_bug_id, $f_handler_id ) ) {\n\t\t\ttrigger_error( ERROR_SPONSORSHIP_HANDLER_ACCESS_LEVEL_TOO_LOW, ERROR );\n\t\t}\n\t}\n}\n\n$t_status_label = str_replace( ' ', '_', MantisEnum::getLabel( config_get( 'status_enum_string' ), $f_new_status ) );\n\nhtml_page_top( bug_format_summary( $f_bug_id, SUMMARY_CAPTION ) );\n\nprint_recently_visited();\n?>\n\n<br />\n<div id=\"bug-change-status-div\" class=\"form-container\">\n\n<h2><?php echo lang_get( $t_status_label . '_bug_title' ); ?></h2>\n<?php\n\tif( $f_new_status >= $t_resolved ) {\n\t\tif( relationship_can_resolve_bug( $f_bug_id ) == false ) {\n\t\t\techo '<div class=\"footer\">';\n\t\t\techo lang_get( 'relationship_warning_blocking_bugs_not_resolved_2' );\n\t\t\techo '</div>';\n\t\t}\n\t}\n?>\n\n<form id=\"bug-change-status-form\" name=\"bug_change_status_form\" method=\"post\" action=\"bug_update.php\">\n\n<fieldset>\n\n\t<?php echo form_security_field( 'bug_update' ) ?>\n\n\t<input type=\"hidden\" name=\"bug_id\" value=\"<?php echo $f_bug_id ?>\" />\n\t<input type=\"hidden\" name=\"status\" value=\"<?php echo $f_new_status ?>\" />\n\t<input type=\"hidden\" name=\"last_updated\" value=\"<?php echo $t_bug->last_updated ?>\" />\n\t<input type=\"hidden\" name=\"action_type\" value=\"<?php echo string_attribute( $f_change_type ); ?>\" />\n\n<?php\n\t$t_current_resolution = $t_bug->resolution;\n\t$t_bug_is_open = $t_current_resolution < $t_resolved;\n\n\tif( $f_new_status >= $t_resolved && ( $f_new_status < $t_closed || $t_bug_is_open ) ) {\n?>\n\t<!-- Resolution -->\n\t<div class=\"field-container\">\n\t\t<label for=\"resolution\">\n\t\t\t<span><?php echo lang_get( 'resolution' ) ?></span>\n\t\t</label>\n\t\t<span class=\"select\">\n \t\t\t<select name=\"resolution\">\n<?php\n\t\t\t\t$t_resolution = $t_bug_is_open ? config_get( 'bug_resolution_fixed_threshold' ) : $t_current_resolution;\n\n\t\t\t\t$t_relationships = relationship_get_all_src( $f_bug_id );\n\t\t\t\tforeach( $t_relationships as $t_relationship ) {\n\t\t\t\t\tif( $t_relationship->type == BUG_DUPLICATE ) {\n\t\t\t\t\t\t$t_resolution = config_get( 'bug_duplicate_resolution' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprint_enum_string_option_list( 'resolution', $t_resolution );\n?>\n\t\t\t</select>\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n<?php\n\t\tif( $t_resolution != config_get( 'bug_duplicate_resolution' ) ) {\n?>\n\t<!-- Duplicate ID -->\n\t<div class=\"field-container\">\n\t\t<label for=\"duplicate_id\">\n\t\t\t<span><?php echo lang_get( 'duplicate_id' ) ?></span>\n\t\t</label>\n\t\t<span class=\"input\">\n \t\t\t<input type=\"text\" name=\"duplicate_id\" maxlength=\"10\" />\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n\n<?php\n\t\t}\n\t}\n\n\tif( access_has_bug_level( config_get( 'update_bug_assign_threshold', config_get( 'update_bug_threshold' ) ), $f_bug_id ) ) {\n\t\t$t_suggested_handler_id = $t_bug->handler_id;\n\n\t\tif( $t_suggested_handler_id == NO_USER && access_has_bug_level( config_get( 'handle_bug_threshold' ), $f_bug_id ) ) {\n\t\t\t$t_suggested_handler_id = $t_current_user_id;\n\t\t}\n\n?>\n\t<!-- Assigned To -->\n\t<div class=\"field-container\">\n\t\t<label for=\"handler_id\">\n\t\t\t<span><?php echo lang_get( 'assigned_to' ) ?></span>\n\t\t</label>\n\t\t<span class=\"select\">\n\t\t\t<select name=\"handler_id\">\n\t\t\t\t<option value=\"0\"></option>\n\t\t\t\t<?php print_assign_to_option_list( $t_suggested_handler_id, $t_bug->project_id ) ?>\n\t\t\t</select>\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n\n<?php\n\t}\n\n\tif( $t_can_update_due_date ) {\n\t\t$t_date_to_display = '';\n\n\t\tif( !date_is_null( $t_bug->due_date ) ) {\n\t\t\t$t_date_to_display = date( config_get( 'calendar_date_format' ), $t_bug->due_date );\n\t\t}\n?>\n\t<!-- Due date -->\n\t<div class=\"field-container\">\n\t\t<label for=\"due_date\">\n\t\t\t<span><?php echo lang_get( 'due_date' ) ?></span>\n\t\t</label>\n\t\t<span class=\"input\">\n \t\t\t<input type=\"text\" id=\"due_date\" name=\"due_date\"\n \t\t\t\tclass=\"datetime\" size=\"20\" maxlength=\"16\"\n \t\t\t\t<?php helper_get_tab_index() ?>\n \t\t\t\tvalue=\"<?php echo $t_date_to_display ?>\" />\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n\n<?php\n\t}\n?>\n\n\t<!-- Custom Fields -->\n<?php\n\t/**\n\t * @todo thraxisp - I undid part of the change for #5068 for #5527\n\t * We really need to say what fields are shown in which statusses. For now,\n\t * this page will show required custom fields in update mode, or\n\t * display or required fields on resolve or close\n\t */\n\t$t_custom_status_label = 'update'; # Don't show custom fields by default\n\tif( ( $f_new_status >= $t_resolved ) && ( $f_new_status < $t_closed ) ) {\n\t\t$t_custom_status_label = 'resolved';\n\t}\n\tif( $t_closed == $f_new_status ) {\n\t\t$t_custom_status_label = 'closed';\n\t}\n\n\t$t_related_custom_field_ids = custom_field_get_linked_ids( $t_bug->project_id );\n\n\tforeach( $t_related_custom_field_ids as $t_id ) {\n\t\t$t_def = custom_field_get_definition( $t_id );\n\t\t$t_display = $t_def['display_' . $t_custom_status_label];\n\t\t$t_require = $t_def['require_' . $t_custom_status_label];\n\n\t\tif( ( 'update' == $t_custom_status_label ) && ( !$t_require ) ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif( in_array( $t_custom_status_label, array( 'resolved', 'closed' ) ) && !( $t_display || $t_require ) ) {\n\t\t\tcontinue;\n\t\t}\n\t\t$t_has_write_access = custom_field_has_write_access( $t_id, $f_bug_id );\n\t\t$t_class_required = $t_require && $t_has_write_access ? 'class=\"required\"' : '';\n?>\n\t<div class=\"field-container\">\n\t\t<label <?php echo $t_class_required ?> for=\"due_date\">\n\t\t\t<span><?php echo lang_get_defaulted( $t_def['name'] ) ?></span>\n\t\t</label>\n\t\t<span class=\"input\">\n<?php\n\t\t\tif( $t_has_write_access ) {\n\t\t\t\tprint_custom_field_input( $t_def, $f_bug_id );\n\t\t\t} elseif( custom_field_has_read_access( $t_id, $f_bug_id ) ) {\n\t\t\t\tprint_custom_field_value( $t_def, $t_id, $f_bug_id );\n\t\t\t}\n?>\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n\n<?php\n\t} # foreach( $t_related_custom_field_ids as $t_id )\n\n\tif( ( $f_new_status >= $t_resolved ) ) {\n\t\tif( version_should_show_product_version( $t_bug->project_id )\n\t\t\t&& !bug_is_readonly( $f_bug_id )\n\t\t\t&& access_has_bug_level( config_get( 'update_bug_threshold' ), $f_bug_id )\n\t\t) {\n?>\n\t<!-- Fixed in Version -->\n\t<div class=\"field-container\">\n\t\t<label for=\"due_date\">\n\t\t\t<span><?php echo lang_get( 'fixed_in_version' ) ?></span>\n\t\t</label>\n\t\t<span class=\"select\">\n\t\t\t<select name=\"fixed_in_version\">\n\t\t\t\t<?php print_version_option_list( $t_bug->fixed_in_version, $t_bug->project_id, VERSION_ALL ) ?>\n\t\t\t</select>\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n<?php\n\t\t}\n\t}\n\n\tevent_signal( 'EVENT_UPDATE_BUG_STATUS_FORM', array( $f_bug_id, $f_new_status ) );\n\n\tif( $f_change_type == BUG_UPDATE_TYPE_REOPEN ) {\n?>\n\t<!-- Bug was re-opened -->\n<?php\n\t\tprintf( '\t<input type=\"hidden\" name=\"resolution\" value=\"%s\" />' . \"\\n\", config_get( 'bug_reopen_resolution' ) );\n\t}\n?>\n\n\t<!-- Bugnote -->\n\t<div class=\"field-container\">\n\t\t<label for=\"bugnote_text\">\n\t\t\t<span><?php echo lang_get( 'add_bugnote_title' ) ?></span>\n\t\t</label>\n\t\t<span class=\"textarea\">\n\t\t\t<textarea name=\"bugnote_text\" cols=\"80\" rows=\"10\"></textarea>\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n\n<?php\n\tif( access_has_bug_level( config_get( 'private_bugnote_threshold' ), $f_bug_id ) ) {\n\t\t$t_default_bugnote_view_status = config_get( 'default_bugnote_view_status' );\n?>\n\t<!-- View status -->\n\t<div class=\"field-container\">\n\t\t<label for=\"private\">\n\t\t\t<span><?php echo lang_get( 'view_status' ) ?></span>\n\t\t</label>\n\t\t<span class=\"checkbox\">\n<?php\n\t\tif( access_has_bug_level( config_get( 'set_view_status_threshold' ), $f_bug_id ) ) {\n?>\n\t\t\t<input type=\"checkbox\" name=\"private\"\n\t\t\t\t<?php check_checked( $t_default_bugnote_view_status, VS_PRIVATE ); ?> />\n<?php\n\t\t\techo lang_get( 'private' );\n\t\t} else {\n\t\t\techo get_enum_element( 'project_view_state', $t_default_bugnote_view_status );\n\t\t}\n?>\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n\n<?php\n\t}\n\n\tif(     config_get( 'time_tracking_enabled' )\n\t\t&& access_has_bug_level( config_get( 'private_bugnote_threshold' ), $f_bug_id )\n\t\t&& access_has_bug_level( config_get( 'time_tracking_edit_threshold' ), $f_bug_id )\n\t) {\n?>\n\t<!-- Time tracking -->\n\t<div class=\"field-container\">\n\t\t<label for=\"time_tracking\">\n\t\t\t<span><?php echo lang_get( 'time_tracking' ) ?></span>\n\t\t</label>\n\t\t<span class=\"input\">\n\t\t\t<input type=\"text\" name=\"time_tracking\" size=\"5\" placeholder=\"hh:mm\" />\n\t\t</span>\n\t\t<span class=\"label-style\"></span>\n\t</div>\n<?php\n\t}\n\n\tevent_signal( 'EVENT_BUGNOTE_ADD_FORM', array( $f_bug_id ) );\n?>\n\n\t<!-- Submit Button -->\n\t<span class=\"submit-button\">\n\t\t<input type=\"submit\" class=\"button\" value=\"<?php echo lang_get( $t_status_label . '_bug_button' ) ?>\" />\n\t</span>\n\n</fieldset>\n</form>\n</div>\n\n<br>\n\n<?php\ndefine( 'BUG_VIEW_INC_ALLOW', true );\ninclude( dirname( __FILE__ ) . '/bug_view_inc.php' );\n"], "filenames": ["bug_change_status_page.php"], "buggy_code_start_loc": [157], "buggy_code_end_loc": [158], "fixing_code_start_loc": [157], "fixing_code_end_loc": [158], "type": "CWE-79", "message": "A cross-site scripting (XSS) vulnerability in bug_change_status_page.php in MantisBT before 1.3.7 and 2.x before 2.2.1 allows remote attackers to inject arbitrary JavaScript via the 'action_type' parameter.", "other": {"cve": {"id": "CVE-2017-6797", "sourceIdentifier": "cve@mitre.org", "published": "2017-03-10T00:59:00.170", "lastModified": "2019-03-19T00:35:48.457", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A cross-site scripting (XSS) vulnerability in bug_change_status_page.php in MantisBT before 1.3.7 and 2.x before 2.2.1 allows remote attackers to inject arbitrary JavaScript via the 'action_type' parameter."}, {"lang": "es", "value": "Una vulnerabilidad de XSS en bug_change_status_page.php en MantisBT en versiones anteriores a 1.3.7 y 2.x en versiones anteriores a 2.2.1 permite a atacantes remotos inyectar JavaScript arbitrario a trav\u00e9s del par\u00e1metro 'action_type'."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.3.7", "matchCriteriaId": "95C3C8D0-0C1F-45E3-88E0-2EB50F46E3F4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:*:*:*:*:*:*:*:*", "versionStartIncluding": "2.0.0", "versionEndExcluding": "2.2.1", "matchCriteriaId": "A657445A-49B4-46FB-ABF4-5672D4AE6CAD"}]}]}], "references": [{"url": "http://www.mantisbt.org/bugs/view.php?id=22486", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Vendor Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2017/03/10/1", "source": "cve@mitre.org", "tags": ["Exploit", "Mailing List", "Patch", "Third Party Advisory"]}, {"url": "http://www.securityfocus.com/bid/96818", "source": "cve@mitre.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "http://www.securitytracker.com/id/1037978", "source": "cve@mitre.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/mantisbt/mantisbt/commit/a2d90ecabf3bcf3aa22ed9dbbecfd3d37902956f", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://github.com/mantisbt/mantisbt/commit/c272c3f65da9677e505ff692b1f1e476b3afa56e", "source": "cve@mitre.org", "tags": ["Patch"]}]}, "github_commit_url": "https://github.com/mantisbt/mantisbt/commit/a2d90ecabf3bcf3aa22ed9dbbecfd3d37902956f"}}