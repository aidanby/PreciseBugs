{"buggy_code": ["<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/lib-maintenance-priority.inc.php';\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/lib/max/other/html.php';\nrequire_once MAX_PATH . '/lib/max/Plugin.php';\nrequire_once MAX_PATH . '/lib/max/other/lib-acl.inc.php';\nrequire_once MAX_PATH . '/lib/max/Delivery/cache.php';\nrequire_once MAX_PATH . '/lib/max/other/capping/lib-capping.inc.php';\n\n// Register input variables\nphpAds_registerGlobalUnslashed('acl', 'action', 'submit');\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('clients',   $clientid);\nOA_Permission::enforceAccessToObject('campaigns', $campaignid);\nOA_Permission::enforceAccessToObject('banners',   $bannerid);\n\n/*-------------------------------------------------------*/\n/* Store preferences\t\t\t\t\t\t\t\t\t */\n/*-------------------------------------------------------*/\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['clientid'] = $clientid;\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['campaignid'][$clientid] = $campaignid;\nphpAds_SessionDataStore();\n\n// Initialise some parameters\n$pageName = basename($_SERVER['SCRIPT_NAME']);\n$tabindex = 1;\n$aEntities = array('clientid' => $clientid, 'campaignid' => $campaignid, 'bannerid' => $bannerid);\n\nif (!empty($action)) {\n    $acl = MAX_AclAdjust($acl, $action);\n} elseif (!empty($submit)) {\n    $acl = (isset($acl)) ? $acl : array();\n\n    // Only save when inputs are valid\n    if (OX_AclCheckInputsFields($acl, $pageName) === true) {\n        $aBannerPrev = MAX_cacheGetAd($bannerid, false);\n        MAX_AclSave($acl, $aEntities);\n\n        $block = _initCappingVariables($time, $cap, $session_capping);\n\n        $values = array();\n        $acls_updated = false;\n        $now = OA::getNow();\n\n        if ($aBannerPrev['block_ad'] <> $block) {\n            $values['block'] = $block;\n            $acls_updated = ($block == 0) ? true : $acls_updated;\n        }\n        if ($aBannerPrev['cap_ad'] <> $cap) {\n            $values['capping'] = $cap;\n            $acls_updated = ($cap == 0) ? true : $acls_updated;\n        }\n        if ($aBannerPrev['session_cap_ad'] <> $session_capping) {\n            $values['session_capping'] = $session_capping;\n            $acls_updated = ($session_capping == 0) ? true : $acls_updated;\n        }\n        if ($acls_updated) {\n            $values['acls_updated'] = $now;\n        }\n\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        if (!empty($values)) {\n            $values['updated'] = $now;\n            $doBanners->setFrom($values);\n            $doBanners->update();\n\t\t\t\t}\n\n        // Queue confirmation message\n        $translation = new OX_Translation ();\n        $translated_message = $translation->translate ( $GLOBALS['strBannerAclHasBeenUpdated'], array(\n            MAX::constructURL(MAX_URL_ADMIN, 'banner-edit.php?clientid=' .  $clientid . '&campaignid=' . $campaignid . '&bannerid=' . $bannerid),\n            htmlspecialchars($doBanners->description)\n        ));\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        header(\"Location: banner-acl.php?clientid={$clientid}&campaignid={$campaignid}&bannerid={$bannerid}\");\n        exit;\n    }\n}\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n$entityId = OA_Permission::getEntityId();\nif (OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n    $entityType = 'advertiser_id';\n} else {\n    $entityType = 'agency_id';\n}\n\n// Display navigation\n$aOtherCampaigns = Admin_DA::getPlacements(array($entityType => $entityId));\n$aOtherBanners = Admin_DA::getAds(array('placement_id' => $campaignid), false);\n// Setup a fake record for the \"Apply to all\" entry\n$aOtherBanners[-1] = array('name' => '--' . $GLOBALS['strAllBannersInCampaign'] . '--', 'ad_id' => -1, 'placement_id' => $campaignid);\nMAX_displayNavigationBanner($pageName, $aOtherCampaigns, $aOtherBanners, $aEntities);\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n$aBanner = MAX_cacheGetAd($bannerid, false);\n\nif (!isset($acl)) {\n    $acl = Admin_DA::getDeliveryLimitations(array('ad_id' => $bannerid));\n    // This array needs to be sorted by executionorder, this should ideally be done in SQL\n    // When we move to DataObject this should be addressed\n    ksort($acl);\n}\n\n$aParams = array('clientid' => $clientid, 'campaignid' => $campaignid, 'bannerid' => $bannerid);\n\nMAX_displayAcls($acl, $aParams);\n\necho \"\n<table border='0' width='100%' cellpadding='0' cellspacing='0' bgcolor='#FFFFFF'>\";\n\n$aParams = array(\n    'title' => $GLOBALS['strCampaign'],\n    'titleLink' => \"campaign-edit.php?clientid=$clientid&campaignid=$campaignid\",\n    'aText' => $GLOBALS['strCappingCampaign'],\n    'aCappedObject' => $aBanner,\n    'type' => 'Campaign'\n);\n\n$tabindex = _echoDeliveryCappingHtml($tabindex, $GLOBALS['strCappingBanner'], $aBanner, 'Ad', $aParams);\n\necho \"\n<tr><td height='1' colspan='6' bgcolor='#888888'>\n<img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\n\n</table>\n<br /><br /><br />\n<input type='submit' name='submit' value='{$GLOBALS['strSaveChanges']}' tabindex='\".($tabindex++).\"'>\n\n</form>\";\n\n\n/*-------------------------------------------------------*/\n/* Form requirements                                     */\n/*-------------------------------------------------------*/\n?>\n<?php\n\n_echoDeliveryCappingJs();\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/lib/OA/Dll.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\nrequire_once MAX_PATH . '/lib/OA/Maintenance/Priority.php';\n\n// Register input variables\nphpAds_registerGlobal ('value');\n\nif ($value == OA_ENTITY_STATUS_RUNNING) {\n    $value = OA_ENTITY_STATUS_PAUSED;\n} else {\n    $value = OA_ENTITY_STATUS_RUNNING;\n}\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER, OA_ACCOUNT_ADVERTISER);\nOA_Permission::enforceAccessToObject('clients',   $clientid);\nOA_Permission::enforceAccessToObject('campaigns', $campaignid);\nOA_Permission::enforceAccessToObject('banners',   $bannerid, true);\n\nif (OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n    if ($value == OA_ENTITY_STATUS_RUNNING) {\n        OA_Permission::enforceAllowed(OA_PERM_BANNER_ACTIVATE);\n    } else {\n        OA_Permission::enforceAllowed(OA_PERM_BANNER_DEACTIVATE);\n    }\n}\n\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n\nif (!empty($bannerid))\n{\n    $doBanners = OA_Dal::factoryDO('banners');\n    $doBanners->get($bannerid);\n    $bannerName = $doBanners->description;\n\n    $translation = new OX_Translation();\n    $message = ($value == OA_ENTITY_STATUS_PAUSED) ? $GLOBALS ['strBannerHasBeenDeactivated'] : $GLOBALS ['strBannerHasBeenActivated'];\n    $translated_message = $translation->translate($message, array (\n        MAX::constructURL(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid&bannerid=$bannerid\"),\n        htmlspecialchars($bannerName)\n    ));\n    OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n    $doBanners->status = $value;\n    $doBanners->update();\n}\nelseif (!empty($campaignid))\n{\n    $doBanners = OA_Dal::factoryDO('banners');\n    $doBanners->status = $value;\n    $doBanners->whereAdd('campaignid = ' . $campaignid);\n\n    // Update all the banners\n    $doBanners->update(DB_DATAOBJECT_WHEREADD_ONLY);\n}\n\n// Run the Maintenance Priority Engine process\nOA_Maintenance_Priority::scheduleRun();\n\n// Rebuild cache\n// require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n// phpAds_cacheDelete();\nheader(\"Location: campaign-banners.php?clientid=\".$clientid.\"&campaignid=\".$campaignid);\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\n\n// Register input variables\nphpAds_registerGlobalUnslashed('prepend', 'append', 'submitbutton');\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('clients',   $clientid);\nOA_Permission::enforceAccessToObject('campaigns', $campaignid);\nOA_Permission::enforceAccessToObject('banners',   $bannerid);\n\n\n/*-------------------------------------------------------*/\n/* Store preferences\t\t\t\t\t\t\t\t\t */\n/*-------------------------------------------------------*/\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['clientid'] = $clientid;\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['campaignid'][$clientid] = $campaignid;\nphpAds_SessionDataStore();\n\n/*-------------------------------------------------------*/\n/* Process submitted form                                */\n/*-------------------------------------------------------*/\n\nif (isset($submitbutton)) {\n    if (isset($bannerid) && $bannerid != '') {\n        // Update banner\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        $doBanners->prepend = $prepend;\n        $doBanners->append  = $append;\n        $doBanners->update();\n\n        // Queue confirmation message\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate($GLOBALS['strBannerAdvancedHasBeenUpdated'], array(\n            MAX::constructURL(MAX_URL_ADMIN, 'banner-edit.php?clientid=' .  $clientid . '&campaignid=' . $campaignid . '&bannerid=' . $bannerid),\n            htmlspecialchars($doBanners->description)\n        ));\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n    }\n    header (\"Location: banner-advanced.php?clientid=\".$clientid.\"&campaignid=\".$campaignid.\"&bannerid=\".$bannerid);\n}\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\n// Initialise some parameters\n$pageName = basename($_SERVER['SCRIPT_NAME']);\n$tabindex = 1;\n$agencyId = OA_Permission::getAgencyId();\n$aEntities = array('clientid' => $clientid, 'campaignid' => $campaignid, 'bannerid' => $bannerid);\n\n// Display navigation\n$aOtherCampaigns = Admin_DA::getPlacements(array('agency_id' => $agencyId));\n$aOtherBanners = Admin_DA::getAds(array('placement_id' => $campaignid), false);\nMAX_displayNavigationBanner($pageName, $aOtherCampaigns, $aOtherBanners, $aEntities);\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n$doBanners = OA_Dal::factoryDO('banners');\n$doBanners->selectAdd('storagetype AS type');\n$doBanners->bannerid = $bannerid;\nif ($doBanners->find(true)) {\n    $banner = $doBanners->toArray();\n}\n\n$tabindex = 1;\n\n    echo \"<form name='appendform' method='post' action='banner-advanced.php' onSubmit='return phpAds_formSubmit() && max_formValidate(this);'>\";\n    echo \"<input type='hidden' name='clientid' value='\".(isset($clientid) && $clientid != '' ? $clientid : '').\"'>\";\n    echo \"<input type='hidden' name='campaignid' value='\".(isset($campaignid) && $campaignid != '' ? $campaignid : '').\"'>\";\n    echo \"<input type='hidden' name='bannerid' value='\".(isset($bannerid) && $bannerid != '' ? $bannerid : '').\"'>\";\n\n    echo \"<br /><table border='0' width='100%' cellpadding='0' cellspacing='0'>\";\n    echo \"<tr><td height='25' colspan='3'><b>\".$strAppendSettings.\"</b></td></tr>\";\n    echo \"<tr height='1'><td width='30'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='30'></td>\";\n    echo \"<td width='200'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='200'></td>\";\n    echo \"<td width='100%'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    echo \"<tr><td height='10' colspan='3'>&nbsp;</td></tr>\";\n\n    echo \"<tr><td width='30'>&nbsp;</td><td width='200' valign='top'>\".$strBannerPrependHTML.\"</td><td>\";\n    echo \"<textarea class='code' name='prepend' rows='6' cols='55' style='width: 100%;' tabindex='\".($tabindex++).\"'>\".htmlspecialchars($banner['prepend']).\"</textarea>\";\n    echo \"</td></tr>\";\n\n    echo \"<tr><td><img src='\" . OX::assetPath() . \"/images/spacer.gif' height='1' width='100%'></td>\";\n    echo \"<td colspan='2'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='200' vspace='6'></td>\";\n\n    echo \"<tr><td width='30'>&nbsp;</td><td width='200' valign='top'>\".$strBannerAppendHTML.\"</td><td>\";\n    echo \"<textarea class='code' name='append' rows='6' cols='55' style='width: 100%;' tabindex='\".($tabindex++).\"'>\".htmlspecialchars($banner['append']).\"</textarea>\";\n    echo \"</td></tr>\";\n\n    // Footer\n    echo \"<tr><td height='10' colspan='3'>&nbsp;</td></tr>\";\n    echo \"<tr height='1'><td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    echo \"</table><br />\";\n\n    echo \"<br /><input type='submit' name='submitbutton' value='\".$strSaveChanges.\"' tabindex='\".($tabindex++).\"'>\";\n    echo \"</form>\";\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-storage.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-banner.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/lib/OA/Maintenance/Priority.php';\n\n// Register input variables\n\n//phpAds_registerGlobal ('returnurl', 'duplicate', 'moveto_x', 'moveto', 'applyto_x', 'applyto');\nphpAds_registerGlobal('bannerid', 'campaignid', 'clientid', 'returnurl', 'duplicate', 'moveto', 'moveto_x', 'applyto', 'applyto_x');\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\n\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nif (!empty($bannerid)) {\n    OA_Permission::enforceAccessToObject('banners', $bannerid);\n\n    if (!empty($moveto) && isset($moveto_x)) {\n        if (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n            OA_Permission::enforceAccessToObject('campaigns', $moveto);\n        }\n\n        // Move the banner\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        $doBanners->campaignid = $moveto;\n        $doBanners->update();\n\n        // Increase the memory for running the maintenance\n        OX_increaseMemoryLimit(OX_getMinimumRequiredMemory('maintenance'));\n\n        // Run the Maintenance Priority Engine process\n        OA_Maintenance_Priority::scheduleRun();\n\n        // Rebuild cache\n        // require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n        // phpAds_cacheDelete();\n\n        // Get new clientid\n        $clientid = phpAds_getCampaignParentClientID($moveto);\n\n        //confirmation message\n        $bannerName = $doBanners->description;\n        $doCampaigns = OA_Dal::factoryDO('campaigns');\n        if ($doCampaigns->get($moveto)) {\n           $campaignName = $doCampaigns->campaignname;\n        }\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strBannerHasBeenMoved'],\n            array(htmlspecialchars($bannerName), htmlspecialchars($campaignName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$moveto}&bannerid={$bannerid}\");\n\n    } elseif (!empty($applyto) && isset($applyto_x)) {\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        $bannerName = $doBanners->description;\n\n        if ($applyto == -1) {\n            if (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n                OA_Permission::enforceAccessToObject('campaigns', $campaignid);\n            }\n            $appliedTo = 0;\n            $doBanners = OA_Dal::factoryDO('banners');\n            $doBanners->campaignid = $campaignid;\n            $doBanners->find();\n            while ($doBanners->fetch()) {\n                if (($doBanners->bannerid != $bannerid) && (MAX_AclCopy(basename($_SERVER['SCRIPT_NAME']), $bannerid, $doBanners->bannerid))) {\n                    $appliedTo++;\n                }\n            }\n            $applyto = $bannerid;\n        } else {\n            if (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n                OA_Permission::enforceAccessToObject('banners', $applyto);\n            }\n            if (MAX_AclCopy(basename($_SERVER['SCRIPT_NAME']), $bannerid, $applyto)) {\n                $appliedTo++;\n            }\n        }\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strBannerAclHasBeenAppliedTo'],\n            array(MAX::constructURL(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid&bannerid=$bannerid\"),\n                htmlspecialchars($bannerName),\n                $appliedTo\n            )\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$campaignid}&bannerid=\".$applyto);\n    } elseif (isset($duplicate) && $duplicate == 'true') {\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        $oldName = $doBanners->description;\n        $new_bannerid = $doBanners->duplicate();\n\n        // Run the Maintenance Priority Engine process\n        OA_Maintenance_Priority::scheduleRun();\n\n        // Rebuild cache\n        // require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n        // phpAds_cacheDelete();\n\n        //confirmation message\n        $newName = $doBanners->description;\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strBannerHasBeenDuplicated'],\n            array(MAX::constructURL(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid&bannerid=$bannerid\"),\n                htmlspecialchars($oldName),\n                MAX::constructURL(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid&bannerid=$new_bannerid\"),\n                htmlspecialchars($newName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$campaignid}&bannerid=\".$new_bannerid);\n    }\n    else {\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$campaignid}&bannerid=\".$bannerid);\n    }\n}\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/lib-maintenance-priority.inc.php';\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-storage.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-swf.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-banner.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\n\n// Register input variables\nphpAds_registerGlobalUnslashed('convert', 'cancel', 'compress', 'convert_links',\n                       'chosen_link', 'overwrite_link', 'overwrite_target',\n                       'overwrite_source');\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER, OA_ACCOUNT_ADVERTISER);\nOA_Permission::enforceAccessToObject('clients',   $clientid);\nOA_Permission::enforceAccessToObject('campaigns', $campaignid);\nOA_Permission::enforceAccessToObject('banners',   $bannerid);\n\nif (OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n    OA_Permission::enforceAllowed(OA_PERM_BANNER_EDIT);\n}\n\n/*-------------------------------------------------------*/\n/* Process submitted form                                */\n/*-------------------------------------------------------*/\n\nif (isset($convert)) {\n    $doBanners = OA_Dal::factoryDO('banners');\n    $doBanners->get($bannerid);\n    $row = $doBanners->toArray();\n\n    if ($row['storagetype'] == 'sql' || $row['storagetype'] == 'web') {\n        $swf_file = phpAds_ImageRetrieve ($row['storagetype'], $row['filename']);\n    }\n    if ($swf_file) {\n        if (phpAds_SWFVersion($swf_file) >= 3 && phpAds_SWFInfo($swf_file)) {\n            // SWF's requiring player version 6+ which are already compressed should stay compressed\n            if (phpAds_SWFVersion($swf_file) >= 6 && phpAds_SWFCompressed($swf_file)) {\n                $compress = true;\n            } elseif (isset($compress)) {\n                $compress = true;\n            } else {\n                $compress = false;\n            }\n\n            if (!isset($convert_links)) {\n                $convert_links = array();\n            }\n\n            list($result, $parameters) = phpAds_SWFConvert($swf_file, $compress, $convert_links);\n\n            if ($result != $swf_file) {\n                if (count($parameters) > 0) {\n                    // Set default link\n                    $row['url']    = $overwrite_link[$chosen_link];\n                    $row['target'] = $overwrite_target[$chosen_link];\n\n                    // Prepare the parameters\n                    $parameters_complete = array();\n\n                    foreach ($parameters as $key => $val) {\n                        if (isset($overwrite_source) && $overwrite_source[$val] != '') {\n                            $overwrite_link[$val] .= '|source:'.$overwrite_source[$val];\n                        }\n                        $parameters_complete[$key] = array(\n                            'link' => $overwrite_link[$val],\n                            'tar'  => $overwrite_target[$val]\n                        );\n                    }\n                    $parameters = array('swf' => $parameters_complete);\n                } else {\n                    $parameters = '';\n                }\n\n                $row['pluginversion'] = phpAds_SWFVersion($result);\n                $row['htmltemplate']  = $row['htmltemplate'];\n                $extension = substr($row['filename'], strrpos($row['filename'], \".\"));\n                $row['filename'] = phpAds_LocalUniqueName($result, $extension);\n\n                // Store the HTML Template\n                $doBanners = OA_Dal::factoryDO('banners');\n                $doBanners->get($bannerid);\n                $doBanners->filename = $row['filename'];\n                $doBanners->url = $row['url'];\n                $doBanners->target = $row['target'];\n                $doBanners->pluginversion = $row['pluginversion'];\n                $doBanners->htmltemplate = $row['htmltemplate'];\n                $doBanners->parameters = empty($parameters) ? null : serialize($parameters);\n                $doBanners->update();\n\n                // Store the banner\n                phpAds_ImageStore($row['storagetype'], $row['filename'], $result, true);\n\n                // Rebuild cache\n                // require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n                // phpAds_cacheDelete();\n            }\n        }\n    }\n\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n        header('Location: stats.php?entity=campaign&breakdown=banners&clientid='.$clientid.'&campaignid='.$campaignid);\n    } else {\n        header('Location: banner-acl.php?clientid='.$clientid.'&campaignid='.$campaignid.'&bannerid='.$bannerid);\n    }\n    exit;\n}\n\nif (isset($cancel)) {\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n        header('Location: stats.php?entity=campaign&breakdown=banners&clientid='.$clientid.'&campaignid='.$campaignid);\n    } else {\n        header('Location: banner-acl.php?clientid='.$clientid.'&campaignid='.$campaignid.'&bannerid='.$bannerid);\n    }\n    exit;\n}\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nif ($bannerid != '') {\n    // Get other banners\n    $doBanners = OA_Dal::factoryDO('banners');\n    $doBanners->campaignid = $campaignid;\n    $doBanners->addSessionListOrderBy('campaign-banners.php');\n    $doBanners->find();\n\n    while ($doBanners->fetch() && $row = $doBanners->toArray()) {\n        phpAds_PageContext(\n            phpAds_buildBannerName ($row['bannerid'], $row['description'], $row['alt']),\n            \"banner-edit.php?clientid=\".$clientid.\"&campaignid=\".$campaignid.\"&bannerid=\".$row['bannerid'],\n            $bannerid == $row['bannerid']\n        );\n    }\n\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADMIN) || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n        phpAds_PageShortcut($strClientProperties, 'advertiser-edit.php?clientid='.$clientid, 'images/icon-advertiser.gif');\n        phpAds_PageShortcut($strCampaignProperties, 'campaign-edit.php?clientid='.$clientid.'&campaignid='.$campaignid, 'images/icon-campaign.gif');\n        phpAds_PageShortcut($strBannerHistory, 'stats.php?entity=banner&breakdown=history&clientid='.$clientid.'&campaignid='.$campaignid.'&bannerid='.$bannerid, 'images/icon-statistics.gif');\n\n        phpAds_PageHeader(\"4.1.3.4.5\");\n        echo \"<img src='\" . OX::assetPath() . \"/images/icon-advertiser.gif' align='absmiddle'>&nbsp;\".phpAds_getParentClientName($campaignid);\n        echo \"&nbsp;<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/caret-rs.gif'>&nbsp;\";\n        echo \"<img src='\" . OX::assetPath() . \"/images/icon-campaign.gif' align='absmiddle'>&nbsp;\".phpAds_getCampaignName($campaignid);\n        echo \"&nbsp;<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/caret-rs.gif'>&nbsp;\";\n        echo \"<img src='\" . OX::assetPath() . \"/images/icon-banner-stored.gif' align='absmiddle'>&nbsp;<b>\".phpAds_getBannerName($bannerid).\"</b><br /><br />\";\n        phpAds_ShowSections(array(\"4.1.3.4.5\"));\n    } else {\n        phpAds_PageHeader(\"1.2.2.3\");\n        echo \"<img src='\" . OX::assetPath() . \"/images/icon-campaign.gif' align='absmiddle'>&nbsp;\".phpAds_getCampaignName($campaignid);\n        echo \"&nbsp;<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/caret-rs.gif'>&nbsp;\";\n        echo \"<img src='\" . OX::assetPath() . \"/images/icon-banner-stored.gif' align='absmiddle'>&nbsp;<b>\".phpAds_getBannerName($bannerid).\"</b><br /><br />\";\n        phpAds_ShowSections(array(\"1.2.2.3\"));\n    }\n\n    $doBanners = OA_Dal::factoryDO('banners');\n    $doBanners->get($bannerid);\n    $row = $doBanners->toArray();\n\n    if ($row['contenttype'] == 'swf') {\n        if ($row['storagetype'] == 'sql' || $row['storagetype'] == 'web') {\n            $swf_file = phpAds_ImageRetrieve ($row['storagetype'], $row['filename']);\n        }\n    } else {\n        // Banner is not a flash banner, return to banner-edit.php\n        header(\"Location: banner-edit.php?clientid=\".$clientid.\"&campaignid=\".$campaignid.\"&bannerid=\".$bannerid);\n        exit;\n    }\n} else {\n    // Banner does not exist, return to banner-edit.php\n    header(\"Location: banner-edit.php?clientid=\".$clientid.\"&campaignid=\".$campaignid);\n    exit;\n}\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n$result = phpAds_SWFInfo($swf_file);\n$version = phpAds_SWFVersion($swf_file);\n$compressed = phpAds_SWFCompressed($swf_file);\n\nif ($result) {\n    echo $strConvertSWF.'<br />';\n    echo \"<table border='0' width='100%' cellpadding='0' cellspacing='0' bgcolor='#F6F6F6'>\";\n    echo \"<form action='banner-swf.php' method='post'>\";\n    echo \"<input type='hidden' name='clientid' value='$clientid'>\";\n    echo \"<input type='hidden' name='campaignid' value='$campaignid'>\";\n    echo \"<input type='hidden' name='bannerid' value='$bannerid'>\";\n\n    echo \"<tr><td height='25' colspan='4' bgcolor='#FFFFFF'><img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' align='absmiddle'>&nbsp;<b>\".$strHardcodedLinks.\"</b></td></tr>\";\n    echo \"<tr><td height='1' colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    echo \"<tr><td height='10' colspan='4'>&nbsp;</td></tr>\";\n\n    $i=0;\n\n    foreach ($result as $key => $val) {\n        list ($url, $target) = $val;\n\n        if ($i > 0) {\n            echo \"<tr><td height='20' colspan='4'>&nbsp;</td></tr>\";\n            echo \"<tr><td height='1' colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n            echo \"<tr><td height='10' colspan='4'>&nbsp;</td></tr>\";\n        }\n\n        echo \"<tr><td width='30'>&nbsp;</td><td width='30'><input type='checkbox' id='convert_links\".$key.\"' name='convert_links[]' value='\".$key.\"' checked></td>\";\n        echo \"<td width='200'><label for='convert_links\".$key.\"'>\".$strURL.\"</label></td>\";\n        echo \"<td><input class='flat' size='35' type='text' name='overwrite_link[\".$key.\"]' style='width:300px;' dir='ltr' \";\n        echo \" value='\".phpAds_htmlQuotes($url).\"'>\";\n        echo \"<input type='radio' name='chosen_link' value='\".$key.\"'\".($i == 0 ? ' checked' : '').\"></td></tr>\";\n\n        echo \"<tr><td colspan='2'><img src='\" . OX::assetPath() . \"/images/spacer.gif' height='1' width='100%'></td>\";\n        echo \"<td colspan='2'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='200' vspace='6'></td></tr>\";\n\n        echo \"<tr><td width='30'>&nbsp;</td><td width='30'>&nbsp;</td>\";\n        echo \"<td width='200'>\".$strTarget.\"</td>\";\n        echo \"<td><input class='flat' size='16' type='text' name='overwrite_target[\".$key.\"]' style='width:150px;' dir='ltr' \";\n        echo \" value='\".phpAds_htmlQuotes($target).\"'>\";\n        echo \"</td></tr>\";\n\n        if (count($result) > 1) {\n            echo \"<tr><td colspan='2'><img src='\" . OX::assetPath() . \"/images/spacer.gif' height='1' width='100%'></td>\";\n            echo \"<td colspan='2'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='200' vspace='6'></td></tr>\";\n\n            echo \"<tr><td width='30'>&nbsp;</td><td width='30'>&nbsp;</td>\";\n            echo \"<td width='200'>\".$strOverwriteSource.\"</td>\";\n            echo \"<td><input class='flat' size='50' type='text' name='overwrite_source[\".$key.\"]' style='width:150px;' dir='ltr' value=''>\";\n            echo \"</td></tr>\";\n        }\n        $i++;\n    }\n\n    echo \"<tr><td height='20' colspan='4'>&nbsp;</td></tr>\";\n    echo \"<tr><td height='1' colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    echo \"</table>\";\n    echo \"<br /><br />\";\n\n    echo \"<input type='submit' name='cancel' value='\".$strCancel.\"'>&nbsp;&nbsp;\";\n    echo \"<input type='submit' name='convert' value='\".$strConvert.\"'>\";\n\n    if (function_exists('gzcompress')) {\n        echo \"&nbsp;&nbsp;<input type='checkbox' id='compress' name='compress' value='true'\".($compressed ? ' checked' : '').($version >= 6 && $compressed ? ' disabled' : '').\">\";\n        echo \"&nbsp;<label for='compress'>\".$strCompressSWF.\"</label>\";\n    }\n    echo \"</form>\";\n    echo \"<br /><br />\";\n}\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/lib-maintenance-priority.inc.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-size.inc.php';\nrequire_once MAX_PATH . '/lib/max/other/common.php';\nrequire_once MAX_PATH . '/lib/max/other/html.php';\nrequire_once MAX_PATH . '/lib/max/other/stats.php';\nrequire_once MAX_PATH . '/lib/max/Admin_DA.php';\nrequire_once MAX_PATH . '/lib/OA/Maintenance/Priority.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('clients',   $clientid);\nOA_Permission::enforceAccessToObject('campaigns', $campaignid);\nOA_Permission::enforceAccessToObject('banners',   $bannerid);\n\n/*-------------------------------------------------------*/\n/* Store preferences\t\t\t\t\t\t\t\t\t */\n/*-------------------------------------------------------*/\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['clientid'] = $clientid;\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['campaignid'][$clientid] = $campaignid;\nphpAds_SessionDataStore();\n\n\n    // Get input parameters\n    $advertiserId   = MAX_getValue('clientid');\n    $campaignId     = MAX_getValue('campaignid');\n    $bannerId       = MAX_getValue('bannerid');\n    $aCurrentZones  = MAX_getValue('includezone');\n    $listorder      = MAX_getStoredValue('listorder', 'name');\n    $orderdirection = MAX_getStoredValue('orderdirection', 'up');\n    $submit         = MAX_getValue('submit');\n\n    // Initialise some parameters\n    $pageName = basename($_SERVER['SCRIPT_NAME']);\n    $tabindex = 1;\n    $agencyId = OA_Permission::getAgencyId();\n    $aEntities = array('clientid' => $advertiserId, 'campaignid' => $campaignId, 'bannerid' => $bannerId);\n\n    // Process submitted form\n    if (isset($submit))\n    {\n        $dalZones       = OA_Dal::factoryDAL('zones');\n        $prioritise     = false;\n        $error          = false;\n        $aPreviousZones = Admin_DA::getAdZones(array('ad_id' => $bannerId));\n        $aDeleteZones   = array();\n\n        // First, remove any zones that should be deleted.\n        if (!empty($aPreviousZones)) {\n            $unlinked = 0;\n            foreach ($aPreviousZones as $aAdZone) {\n                $zoneId = $aAdZone['zone_id'];\n                if ((empty($aCurrentZones[$zoneId])) && ($zoneId > 0))  {\n                    // Schedule for deletion\n                    $aDeleteZones[] = $zoneId;\n                } else {\n                    // Remove this key, because it is already there and does not need to be added again.\n                    unset($aCurrentZones[$zoneId]);\n                }\n            }\n        }\n\n        // Unlink zones\n        if (count($aDeleteZones)) {\n            $unlinked = $dalZones->unlinkZonesFromBanner($aDeleteZones, $bannerId);\n            if ($unlinked > 0) {\n                $prioritise = true;\n            } elseif ($unlinked == -1) {\n                $error = true;\n            }\n        }\n\n        // Link zones\n        if (count($aCurrentZones)) {\n            $linked = $dalZones->linkZonesToBanner(array_keys($aCurrentZones), $bannerId);\n            if (PEAR::isError($linked)\n                || $linked == -1) {\n                $error = $linked;\n            } elseif($linked > 0) {\n                $prioritise = true;\n            }\n        }\n\n        if ($prioritise) {\n            // Run the Maintenance Priority Engine process\n            OA_Maintenance_Priority::scheduleRun();\n        }\n\n        // Move on to the next page\n        if (!$error) {\n            // Queue confirmation message\n            $translation = new OX_Translation ();\n            if ($linked > 0) {\n                $linked_message = $translation->translate ( $GLOBALS['strXZonesLinked'], array($linked));\n            }\n            if ($unlinked > 0) {\n                $unlinked_message = $translation->translate ( $GLOBALS['strXZonesUnlinked'], array($unlinked));\n            }\n            if ($linked > 0 || $unlinked > 0) {\n                $translated_message = $linked_message. ($linked_message != '' && $unlinked_message != '' ? ', ' : ' ').$unlinked_message;\n                OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n          \t}\n\n            Header(\"Location: banner-zone.php?clientid={$clientid}&campaignid={$campaignid}&bannerid={$bannerid}\");\n            exit;\n        }\n    }\n\n    // Display navigation\n    $aOtherCampaigns = Admin_DA::getPlacements(array('agency_id' => $agencyId));\n    $aOtherBanners = Admin_DA::getAds(array('placement_id' => $campaignId), false);\n    MAX_displayNavigationBanner($pageName, $aOtherCampaigns, $aOtherBanners, $aEntities);\n\n    // Main code\n    $aAd = Admin_DA::getAd($bannerId);\n    $aParams = array('agency_id' => $agencyId);\n    if ($aAd['type'] == 'txt') {\n        $aParams['zone_type'] = phpAds_ZoneText;\n    } else {\n        $aParams['zone_width'] = $aAd['width'] . ',-1';\n        $aParams['zone_height'] = $aAd['height'] . ',-1';\n    }\n    $aPublishers = Admin_DA::getPublishers($aParams, true);\n    $aLinkedZones = Admin_DA::getAdZones(array('ad_id' => $bannerId), false, 'zone_id');\n\n    echo \"\n<table border='0' width='100%' cellpadding='0' cellspacing='0'>\n<form name='zones' action='$pageName' method='post'>\n<input type='hidden' name='clientid' value='$advertiserId'>\n<input type='hidden' name='campaignid' value='$campaignId'>\n<input type='hidden' name='bannerid' value='$bannerId'>\";\n\n    MAX_displayZoneHeader($pageName, $listorder, $orderdirection, $aEntities);\n\n    if ($error) {\n        $errorMoreInformation = '';\n        if (PEAR::isError($error)) {\n            $errorMoreInformation = $error->getMessage();\n        }\n        // Message\n        echo \"<br>\";\n        echo \"<div class='errormessage'><img class='errormessage' src='\" . OX::assetPath() . \"/images/errormessage.gif' align='absmiddle'>\";\n        echo \"<span class='tab-r'> {$GLOBALS['strUnableToLinkBanner']}</span><br /><br />\";\n        echo \"{$GLOBALS['strErrorLinkingBanner']} <br />\" . $errorMoreInformation . \"</div><br />\";\n    } else {\n        echo \"<br /><br />\";\n    }\n\n    $zoneToSelect = false;\n    if (!empty($aPublishers)) {\n        MAX_sortArray($aPublishers, ($listorder == 'id' ? 'publisher_id' : $listorder), $orderdirection == 'up');\n        $i=0;\n\n        //select all checkboxes\n        $publisherIdList = '';\n        foreach ($aPublishers as $publisherId => $aPublisher) {\n            $publisherIdList .= $publisherId . '|';\n        }\n\n        echo\"<input type='checkbox' id='selectAllField' onClick='toggleAllZones(\\\"\".$publisherIdList.\"\\\");'><label for='selectAllField'>\".$strSelectUnselectAll.\"</label>\";\n\n        foreach ($aPublishers as $publisherId => $aPublisher) {\n            $publisherName = $aPublisher['name'];\n\t\t    $aZones = Admin_DA::getZones($aParams + array('publisher_id' => $publisherId), true);\n            if (!empty($aZones)) {\n\t\t        $zoneToSelect = true;\n                $bgcolor = ($i % 2 == 0) ? \" bgcolor='#F6F6F6'\" : '';\n                $bgcolorSave = $bgcolor;\n\n                $allchecked = true;\n                foreach ($aZones as $zoneId => $aZone) {\n                    if (!isset($aLinkedZones[$zoneId])) {\n                        $allchecked = false;\n                        break;\n                    }\n                }\n                $checked = $allchecked ? ' checked' : '';\n                if ($i > 0) echo \"\n<tr height='1'>\n    <td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\n</tr>\";\n                echo \"\n<tr height='25'$bgcolor>\n    <td>\n        <table>\n            <tr>\n                <td>&nbsp;</td>\n                <td valign='top'><input id='affiliate$publisherId' name='affiliate[$publisherId]' type='checkbox' value='t'$checked onClick='toggleZones($publisherId);' tabindex='$tabindex'>&nbsp;&nbsp;</td>\n                <td valign='top'><img src='\" . OX::assetPath() . \"/images/icon-affiliate.gif' align='absmiddle'>&nbsp;</td>\n                <td><a href='affiliate-edit.php?affiliateid=$publisherId'>\".htmlspecialchars($publisherName).\"</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n            </tr>\n        </table>\n    </td>\n    <td>$publisherId</td>\n    <td height='25'>&nbsp;</td>\n</tr>\";\n\n                $tabindex++;\n                if (!empty($aZones)) {\n                    MAX_sortArray($aZones, ($listorder == 'id' ? 'zone_id' : $listorder), $orderdirection == 'up');\n                    foreach($aZones as $zoneId => $aZone) {\n                        $zoneName = $aZone['name'];\n                        $zoneDescription = $aZone['description'];\n                        $zoneIsActive = (isset($aZone['active']) && $aZone['active'] == 't') ? true : false;\n                        $zoneIcon = MAX_getEntityIcon('zone', $zoneIsActive, $aZone['type']);\n                        $checked = isset($aLinkedZones[$zoneId]) ? ' checked' : '';\n                        $bgcolor = ($checked == ' checked') ? \" bgcolor='#d8d8ff'\" : $bgcolorSave;\n\n                        echo \"\n<tr height='25'$bgcolor>\n    <td>\n        <table>\n            <tr>\n                <td width='28'>&nbsp;</td>\n                <td valign='top'><input name='includezone[$zoneId]' id='a$publisherId' type='checkbox' value='t'$checked onClick='toggleAffiliate($publisherId);' tabindex='$tabindex'>&nbsp;&nbsp;</td>\n                <td valign='top'><img src='$zoneIcon' align='absmiddle'>&nbsp;</td>\n                <td><a href='zone-edit.php?affiliateid=$publisherId&zoneid=$zoneId'>\".htmlspecialchars($zoneName).\"</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n            </tr>\n        </table>\n    </td>\n    <td>$zoneId</td>\n    <td>\".htmlspecialchars($zoneDescription).\"</td>\n</tr>\";\n                    }\n                }\n                $i++;\n            }\n        }\n        echo \"\n<tr height='1'><td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    }\n    if (!$zoneToSelect) {\n        echo \"\n<tr height='25' bgcolor='#F6F6F6'>\n    <td colspan='4'>&nbsp;&nbsp;{$GLOBALS['strNoZonesToLinkToCampaign']}</td>\n</tr>\n<tr height='1'><td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    }\n\n    echo \"\n</table>\";\n\n        echo \"\n<br /><br />\n<input type='submit' name='submit' value='{$GLOBALS['strSaveChanges']}' tabindex='$tabindex'>\";\n        $tabindex++;\n\n    echo \"\n</form>\";\n\n    /*-------------------------------------------------------*/\n    /* Form requirements                                     */\n    /*-------------------------------------------------------*/\n\n    ?>\n\n    <script language='Javascript'>\n    <!--\n        affiliates = new Array();\n    <?php\n        if (!empty($aPublishersZones)) {\n            foreach ($aPublishersZones as $publisherId => $aPublishersZone) {\n                if (!empty($aPublishersZone['children'])) {\n                    $num = count($aPublishersZone['children']);\n                    echo \"\naffiliates[$publisherId] = $num;\";\n                }\n            }\n        }\n    ?>\n\n        function toggleAffiliate(affiliateid)\n        {\n            var count = 0;\n            var affiliate;\n\n            for (var i=0; i<document.zones.elements.length; i++)\n            {\n                if (document.zones.elements[i].name == 'affiliate[' + affiliateid + ']')\n                    affiliate = i;\n\n                if (document.zones.elements[i].id == 'a' + affiliateid + '' &&\n                    document.zones.elements[i].checked)\n                    count++;\n            }\n\n            document.zones.elements[affiliate].checked = (count == affiliates[affiliateid]);\n        }\n\n        function toggleZones(affiliateid)\n        {\n            var checked\n\n            for (var i=0; i<document.zones.elements.length; i++)\n            {\n                if (document.zones.elements[i].name == 'affiliate[' + affiliateid + ']')\n                    checked = document.zones.elements[i].checked;\n\n                if (document.zones.elements[i].id == 'a' + affiliateid + '')\n                    document.zones.elements[i].checked = checked;\n            }\n        }\n\n        function toggleAllZones(zonesList)\n        {\n            var zonesArray, checked, selectAllField;\n\n            selectAllField = document.getElementById('selectAllField');\n\n            zonesArray = zonesList.split('|');\n\n            for (var i=0; i<document.zones.elements.length; i++) {\n\n                if (selectAllField.checked == true) {\n                    document.zones.elements[i].checked = true;\n                } else {\n                    document.zones.elements[i].checked = false;\n                }\n            }\n        }\n\n    //-->\n    </script>\n\n<?php\n\n    /*-------------------------------------------------------*/\n    /* Store preferences                                     */\n    /*-------------------------------------------------------*/\n\n    $session['prefs'][$pageName]['listorder'] = $listorder;\n    $session['prefs'][$pageName]['orderdirection'] = $orderdirection;\n\n    phpAds_SessionDataStore();\n\n    /*-------------------------------------------------------*/\n    /* HTML framework                                        */\n    /*-------------------------------------------------------*/\n\n    phpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-storage.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\n\n// Register input variables\nphpAds_registerGlobal (\n     'duplicate'\n    ,'moveto'\n    ,'returnurl'\n);\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('clients', $clientid);\nOA_Permission::enforceAccessToObject('trackers', $trackerid);\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nif (!empty($trackerid))\n{\n    if (!empty($moveto))\n    {\n        // Delete any campaign-tracker links\n        $doCampaign_trackers = OA_Dal::factoryDO('campaigns_trackers');\n        $doCampaign_trackers->trackerid = $trackerid;\n        $doCampaign_trackers->delete();\n\n        // Move the tracker\n        $doTrackers = OA_Dal::factoryDO('trackers');\n        if ($doTrackers->get($trackerid)) {\n            $doTrackers->clientid = $moveto;\n            $doTrackers->update();\n\n            // Queue confirmation message\n            $trackerName = $doTrackers->trackername;\n            $doClients = OA_Dal::factoryDO('clients');\n            if ($doClients->get($moveto)) {\n                $advertiserName = $doClients->clientname;\n            }\n            $translation = new OX_Translation();\n            $translated_message = $translation->translate ( $GLOBALS['strTrackerHasBeenMoved'],\n                array(htmlspecialchars($trackerName), htmlspecialchars($advertiserName))\n            );\n            OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n        }\n\n        Header (\"Location: \".$returnurl.\"?clientid=\".$moveto.\"&trackerid=\".$trackerid);\n        exit;\n    }\n    elseif (isset($duplicate) && $duplicate == 'true')\n    {\n        $doTrackers = OA_Dal::factoryDO('trackers');\n        if ($doTrackers->get($trackerid))\n        {\n            $oldName = $doTrackers->trackername;\n            $new_trackerid = $doTrackers->duplicate();\n\n            if ($doTrackers->get($new_trackerid)) {\n                $newName = $doTrackers->trackername;\n            }\n\n            // Queue confirmation message\n            $translation = new OX_Translation();\n            $translated_message = $translation->translate ( $GLOBALS['strTrackerHasBeenDuplicated'],\n                array(MAX::constructURL(MAX_URL_ADMIN, \"tracker-edit.php?clientid=$clientid&trackerid=$trackerid\"),\n                    htmlspecialchars($oldName),\n                    MAX::constructURL(MAX_URL_ADMIN, \"tracker-edit.php?clientid=$clientid&trackerid=$new_trackerid\"),\n                    htmlspecialchars($newName))\n            );\n            OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n\n            Header (\"Location: \".$returnurl.\"?clientid=\".$clientid.\"&trackerid=\".$new_trackerid);\n            exit;\n        }\n    }\n}\n\nHeader (\"Location: \".$returnurl.\"?clientid=\".$clientid.\"&trackerid=\".$trackerid);\n\n?>"], "fixing_code": ["<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/lib-maintenance-priority.inc.php';\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/lib/max/other/html.php';\nrequire_once MAX_PATH . '/lib/max/Plugin.php';\nrequire_once MAX_PATH . '/lib/max/other/lib-acl.inc.php';\nrequire_once MAX_PATH . '/lib/max/Delivery/cache.php';\nrequire_once MAX_PATH . '/lib/max/other/capping/lib-capping.inc.php';\n\n// Register input variables\nphpAds_registerGlobalUnslashed('acl', 'action', 'submit');\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('clients',   $clientid);\nOA_Permission::enforceAccessToObject('campaigns', $campaignid);\nOA_Permission::enforceAccessToObject('banners',   $bannerid);\n\n/*-------------------------------------------------------*/\n/* Store preferences\t\t\t\t\t\t\t\t\t */\n/*-------------------------------------------------------*/\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['clientid'] = $clientid;\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['campaignid'][$clientid] = $campaignid;\nphpAds_SessionDataStore();\n\n// Initialise some parameters\n$pageName = basename($_SERVER['SCRIPT_NAME']);\n$tabindex = 1;\n$aEntities = array('clientid' => $clientid, 'campaignid' => $campaignid, 'bannerid' => $bannerid);\n\nif (!empty($action)) {\n    $acl = MAX_AclAdjust($acl, $action);\n} elseif (!empty($submit)) {\n    OA_Permission::checkSessionToken();\n\n    $acl = (isset($acl)) ? $acl : array();\n\n    // Only save when inputs are valid\n    if (OX_AclCheckInputsFields($acl, $pageName) === true) {\n        $aBannerPrev = MAX_cacheGetAd($bannerid, false);\n        MAX_AclSave($acl, $aEntities);\n\n        $block = _initCappingVariables($time, $cap, $session_capping);\n\n        $values = array();\n        $acls_updated = false;\n        $now = OA::getNow();\n\n        if ($aBannerPrev['block_ad'] <> $block) {\n            $values['block'] = $block;\n            $acls_updated = ($block == 0) ? true : $acls_updated;\n        }\n        if ($aBannerPrev['cap_ad'] <> $cap) {\n            $values['capping'] = $cap;\n            $acls_updated = ($cap == 0) ? true : $acls_updated;\n        }\n        if ($aBannerPrev['session_cap_ad'] <> $session_capping) {\n            $values['session_capping'] = $session_capping;\n            $acls_updated = ($session_capping == 0) ? true : $acls_updated;\n        }\n        if ($acls_updated) {\n            $values['acls_updated'] = $now;\n        }\n\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        if (!empty($values)) {\n            $values['updated'] = $now;\n            $doBanners->setFrom($values);\n            $doBanners->update();\n\t\t\t\t}\n\n        // Queue confirmation message\n        $translation = new OX_Translation ();\n        $translated_message = $translation->translate ( $GLOBALS['strBannerAclHasBeenUpdated'], array(\n            MAX::constructURL(MAX_URL_ADMIN, 'banner-edit.php?clientid=' .  $clientid . '&campaignid=' . $campaignid . '&bannerid=' . $bannerid),\n            htmlspecialchars($doBanners->description)\n        ));\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        header(\"Location: banner-acl.php?clientid={$clientid}&campaignid={$campaignid}&bannerid={$bannerid}\");\n        exit;\n    }\n}\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n$entityId = OA_Permission::getEntityId();\nif (OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n    $entityType = 'advertiser_id';\n} else {\n    $entityType = 'agency_id';\n}\n\n// Display navigation\n$aOtherCampaigns = Admin_DA::getPlacements(array($entityType => $entityId));\n$aOtherBanners = Admin_DA::getAds(array('placement_id' => $campaignid), false);\n// Setup a fake record for the \"Apply to all\" entry\n$aOtherBanners[-1] = array('name' => '--' . $GLOBALS['strAllBannersInCampaign'] . '--', 'ad_id' => -1, 'placement_id' => $campaignid);\nMAX_displayNavigationBanner($pageName, $aOtherCampaigns, $aOtherBanners, $aEntities);\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n$aBanner = MAX_cacheGetAd($bannerid, false);\n\nif (!isset($acl)) {\n    $acl = Admin_DA::getDeliveryLimitations(array('ad_id' => $bannerid));\n    // This array needs to be sorted by executionorder, this should ideally be done in SQL\n    // When we move to DataObject this should be addressed\n    ksort($acl);\n}\n\n$aParams = array('clientid' => $clientid, 'campaignid' => $campaignid, 'bannerid' => $bannerid);\n\nMAX_displayAcls($acl, $aParams);\n\necho \"\n<table border='0' width='100%' cellpadding='0' cellspacing='0' bgcolor='#FFFFFF'>\";\n\n$aParams = array(\n    'title' => $GLOBALS['strCampaign'],\n    'titleLink' => \"campaign-edit.php?clientid=$clientid&campaignid=$campaignid\",\n    'aText' => $GLOBALS['strCappingCampaign'],\n    'aCappedObject' => $aBanner,\n    'type' => 'Campaign'\n);\n\n$tabindex = _echoDeliveryCappingHtml($tabindex, $GLOBALS['strCappingBanner'], $aBanner, 'Ad', $aParams);\n\necho \"\n<tr><td height='1' colspan='6' bgcolor='#888888'>\n<img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\n\n</table>\n<br /><br /><br />\n<input type='submit' name='submit' value='{$GLOBALS['strSaveChanges']}' tabindex='\".($tabindex++).\"'>\n\n</form>\";\n\n\n/*-------------------------------------------------------*/\n/* Form requirements                                     */\n/*-------------------------------------------------------*/\n?>\n<?php\n\n_echoDeliveryCappingJs();\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/lib/OA/Dll.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\nrequire_once MAX_PATH . '/lib/OA/Maintenance/Priority.php';\n\n// Register input variables\nphpAds_registerGlobal ('value');\n\nif ($value == OA_ENTITY_STATUS_RUNNING) {\n    $value = OA_ENTITY_STATUS_PAUSED;\n} else {\n    $value = OA_ENTITY_STATUS_RUNNING;\n}\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER, OA_ACCOUNT_ADVERTISER);\nOA_Permission::enforceAccessToObject('clients',   $clientid);\nOA_Permission::enforceAccessToObject('campaigns', $campaignid);\nOA_Permission::enforceAccessToObject('banners',   $bannerid, true);\n\nOA_Permission::checkSessionToken();\n\nif (OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n    if ($value == OA_ENTITY_STATUS_RUNNING) {\n        OA_Permission::enforceAllowed(OA_PERM_BANNER_ACTIVATE);\n    } else {\n        OA_Permission::enforceAllowed(OA_PERM_BANNER_DEACTIVATE);\n    }\n}\n\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n\nif (!empty($bannerid))\n{\n    $doBanners = OA_Dal::factoryDO('banners');\n    $doBanners->get($bannerid);\n    $bannerName = $doBanners->description;\n\n    $translation = new OX_Translation();\n    $message = ($value == OA_ENTITY_STATUS_PAUSED) ? $GLOBALS ['strBannerHasBeenDeactivated'] : $GLOBALS ['strBannerHasBeenActivated'];\n    $translated_message = $translation->translate($message, array (\n        MAX::constructURL(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid&bannerid=$bannerid\"),\n        htmlspecialchars($bannerName)\n    ));\n    OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n    $doBanners->status = $value;\n    $doBanners->update();\n}\nelseif (!empty($campaignid))\n{\n    $doBanners = OA_Dal::factoryDO('banners');\n    $doBanners->status = $value;\n    $doBanners->whereAdd('campaignid = ' . $campaignid);\n\n    // Update all the banners\n    $doBanners->update(DB_DATAOBJECT_WHEREADD_ONLY);\n}\n\n// Run the Maintenance Priority Engine process\nOA_Maintenance_Priority::scheduleRun();\n\n// Rebuild cache\n// require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n// phpAds_cacheDelete();\nheader(\"Location: campaign-banners.php?clientid=\".$clientid.\"&campaignid=\".$campaignid);\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\n\n// Register input variables\nphpAds_registerGlobalUnslashed('prepend', 'append', 'submitbutton');\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('clients',   $clientid);\nOA_Permission::enforceAccessToObject('campaigns', $campaignid);\nOA_Permission::enforceAccessToObject('banners',   $bannerid);\n\n\n/*-------------------------------------------------------*/\n/* Store preferences\t\t\t\t\t\t\t\t\t */\n/*-------------------------------------------------------*/\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['clientid'] = $clientid;\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['campaignid'][$clientid] = $campaignid;\nphpAds_SessionDataStore();\n\n/*-------------------------------------------------------*/\n/* Process submitted form                                */\n/*-------------------------------------------------------*/\n\nif (isset($submitbutton)) {\n    OA_Permission::checkSessionToken();\n\n    // Update banner\n    $doBanners = OA_Dal::factoryDO('banners');\n    $doBanners->get($bannerid);\n    $doBanners->prepend = $prepend;\n    $doBanners->append  = $append;\n    $doBanners->update();\n\n    // Queue confirmation message\n    $translation = new OX_Translation();\n    $translated_message = $translation->translate($GLOBALS['strBannerAdvancedHasBeenUpdated'], array(\n        MAX::constructURL(MAX_URL_ADMIN, 'banner-edit.php?clientid=' .  $clientid . '&campaignid=' . $campaignid . '&bannerid=' . $bannerid),\n        htmlspecialchars($doBanners->description)\n    ));\n\n    OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n    header (\"Location: banner-advanced.php?clientid=\".$clientid.\"&campaignid=\".$campaignid.\"&bannerid=\".$bannerid);\n    exit;\n}\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\n// Initialise some parameters\n$pageName = basename($_SERVER['SCRIPT_NAME']);\n$tabindex = 1;\n$agencyId = OA_Permission::getAgencyId();\n$aEntities = array('clientid' => $clientid, 'campaignid' => $campaignid, 'bannerid' => $bannerid);\n\n// Display navigation\n$aOtherCampaigns = Admin_DA::getPlacements(array('agency_id' => $agencyId));\n$aOtherBanners = Admin_DA::getAds(array('placement_id' => $campaignid), false);\nMAX_displayNavigationBanner($pageName, $aOtherCampaigns, $aOtherBanners, $aEntities);\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n$doBanners = OA_Dal::factoryDO('banners');\n$doBanners->selectAdd('storagetype AS type');\n$doBanners->bannerid = $bannerid;\nif ($doBanners->find(true)) {\n    $banner = $doBanners->toArray();\n}\n\n$tabindex = 1;\n\n    echo \"<form name='appendform' method='post' action='banner-advanced.php' onSubmit='return phpAds_formSubmit() && max_formValidate(this);'>\";\n    echo \"<input type='hidden' name='clientid' value='\".(isset($clientid) && $clientid != '' ? $clientid : '').\"'>\";\n    echo \"<input type='hidden' name='campaignid' value='\".(isset($campaignid) && $campaignid != '' ? $campaignid : '').\"'>\";\n    echo \"<input type='hidden' name='bannerid' value='\".(isset($bannerid) && $bannerid != '' ? $bannerid : '').\"'>\";\n\n    echo \"<br /><table border='0' width='100%' cellpadding='0' cellspacing='0'>\";\n    echo \"<tr><td height='25' colspan='3'><b>\".$strAppendSettings.\"</b></td></tr>\";\n    echo \"<tr height='1'><td width='30'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='30'></td>\";\n    echo \"<td width='200'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='200'></td>\";\n    echo \"<td width='100%'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    echo \"<tr><td height='10' colspan='3'>&nbsp;</td></tr>\";\n\n    echo \"<tr><td width='30'>&nbsp;</td><td width='200' valign='top'>\".$strBannerPrependHTML.\"</td><td>\";\n    echo \"<textarea class='code' name='prepend' rows='6' cols='55' style='width: 100%;' tabindex='\".($tabindex++).\"'>\".htmlspecialchars($banner['prepend']).\"</textarea>\";\n    echo \"</td></tr>\";\n\n    echo \"<tr><td><img src='\" . OX::assetPath() . \"/images/spacer.gif' height='1' width='100%'></td>\";\n    echo \"<td colspan='2'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='200' vspace='6'></td>\";\n\n    echo \"<tr><td width='30'>&nbsp;</td><td width='200' valign='top'>\".$strBannerAppendHTML.\"</td><td>\";\n    echo \"<textarea class='code' name='append' rows='6' cols='55' style='width: 100%;' tabindex='\".($tabindex++).\"'>\".htmlspecialchars($banner['append']).\"</textarea>\";\n    echo \"</td></tr>\";\n\n    // Footer\n    echo \"<tr><td height='10' colspan='3'>&nbsp;</td></tr>\";\n    echo \"<tr height='1'><td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    echo \"</table><br />\";\n\n    echo \"<br /><input type='submit' name='submitbutton' value='\".$strSaveChanges.\"' tabindex='\".($tabindex++).\"'>\";\n    echo \"</form>\";\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-storage.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-banner.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/lib/OA/Maintenance/Priority.php';\n\n// Register input variables\n\n//phpAds_registerGlobal ('returnurl', 'duplicate', 'moveto_x', 'moveto', 'applyto_x', 'applyto');\nphpAds_registerGlobal('bannerid', 'campaignid', 'clientid', 'returnurl', 'duplicate', 'moveto', 'moveto_x', 'applyto', 'applyto_x');\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\n\nOA_Permission::checkSessionToken();\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nif (!empty($bannerid)) {\n    OA_Permission::enforceAccessToObject('banners', $bannerid);\n\n    if (!empty($moveto) && isset($moveto_x)) {\n        if (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n            OA_Permission::enforceAccessToObject('campaigns', $moveto);\n        }\n\n        // Move the banner\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        $doBanners->campaignid = $moveto;\n        $doBanners->update();\n\n        // Increase the memory for running the maintenance\n        OX_increaseMemoryLimit(OX_getMinimumRequiredMemory('maintenance'));\n\n        // Run the Maintenance Priority Engine process\n        OA_Maintenance_Priority::scheduleRun();\n\n        // Rebuild cache\n        // require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n        // phpAds_cacheDelete();\n\n        // Get new clientid\n        $clientid = phpAds_getCampaignParentClientID($moveto);\n\n        //confirmation message\n        $bannerName = $doBanners->description;\n        $doCampaigns = OA_Dal::factoryDO('campaigns');\n        if ($doCampaigns->get($moveto)) {\n           $campaignName = $doCampaigns->campaignname;\n        }\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strBannerHasBeenMoved'],\n            array(htmlspecialchars($bannerName), htmlspecialchars($campaignName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$moveto}&bannerid={$bannerid}\");\n\n    } elseif (!empty($applyto) && isset($applyto_x)) {\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        $bannerName = $doBanners->description;\n\n        if ($applyto == -1) {\n            if (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n                OA_Permission::enforceAccessToObject('campaigns', $campaignid);\n            }\n            $appliedTo = 0;\n            $doBanners = OA_Dal::factoryDO('banners');\n            $doBanners->campaignid = $campaignid;\n            $doBanners->find();\n            while ($doBanners->fetch()) {\n                if (($doBanners->bannerid != $bannerid) && (MAX_AclCopy(basename($_SERVER['SCRIPT_NAME']), $bannerid, $doBanners->bannerid))) {\n                    $appliedTo++;\n                }\n            }\n            $applyto = $bannerid;\n        } else {\n            if (OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n                OA_Permission::enforceAccessToObject('banners', $applyto);\n            }\n            if (MAX_AclCopy(basename($_SERVER['SCRIPT_NAME']), $bannerid, $applyto)) {\n                $appliedTo++;\n            }\n        }\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strBannerAclHasBeenAppliedTo'],\n            array(MAX::constructURL(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid&bannerid=$bannerid\"),\n                htmlspecialchars($bannerName),\n                $appliedTo\n            )\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$campaignid}&bannerid=\".$applyto);\n    } elseif (isset($duplicate) && $duplicate == 'true') {\n        $doBanners = OA_Dal::factoryDO('banners');\n        $doBanners->get($bannerid);\n        $oldName = $doBanners->description;\n        $new_bannerid = $doBanners->duplicate();\n\n        // Run the Maintenance Priority Engine process\n        OA_Maintenance_Priority::scheduleRun();\n\n        // Rebuild cache\n        // require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n        // phpAds_cacheDelete();\n\n        //confirmation message\n        $newName = $doBanners->description;\n        $translation = new OX_Translation();\n        $translated_message = $translation->translate ( $GLOBALS['strBannerHasBeenDuplicated'],\n            array(MAX::constructURL(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid&bannerid=$bannerid\"),\n                htmlspecialchars($oldName),\n                MAX::constructURL(MAX_URL_ADMIN, \"banner-edit.php?clientid=$clientid&campaignid=$campaignid&bannerid=$new_bannerid\"),\n                htmlspecialchars($newName))\n        );\n        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$campaignid}&bannerid=\".$new_bannerid);\n    }\n    else {\n        Header (\"Location: {$returnurl}?clientid={$clientid}&campaignid={$campaignid}&bannerid=\".$bannerid);\n    }\n}\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/lib-maintenance-priority.inc.php';\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-storage.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-swf.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-banner.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\n\n// Register input variables\nphpAds_registerGlobalUnslashed('convert', 'cancel', 'compress', 'convert_links',\n                       'chosen_link', 'overwrite_link', 'overwrite_target',\n                       'overwrite_source');\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER, OA_ACCOUNT_ADVERTISER);\nOA_Permission::enforceAccessToObject('clients',   $clientid);\nOA_Permission::enforceAccessToObject('campaigns', $campaignid);\nOA_Permission::enforceAccessToObject('banners',   $bannerid);\n\n    OA_Permission::checkSessionToken();\n\nif (OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n    OA_Permission::enforceAllowed(OA_PERM_BANNER_EDIT);\n}\n\n/*-------------------------------------------------------*/\n/* Process submitted form                                */\n/*-------------------------------------------------------*/\n\nif (isset($convert)) {\n    $doBanners = OA_Dal::factoryDO('banners');\n    $doBanners->get($bannerid);\n    $row = $doBanners->toArray();\n\n    if ($row['storagetype'] == 'sql' || $row['storagetype'] == 'web') {\n        $swf_file = phpAds_ImageRetrieve ($row['storagetype'], $row['filename']);\n    }\n    if ($swf_file) {\n        if (phpAds_SWFVersion($swf_file) >= 3 && phpAds_SWFInfo($swf_file)) {\n            // SWF's requiring player version 6+ which are already compressed should stay compressed\n            if (phpAds_SWFVersion($swf_file) >= 6 && phpAds_SWFCompressed($swf_file)) {\n                $compress = true;\n            } elseif (isset($compress)) {\n                $compress = true;\n            } else {\n                $compress = false;\n            }\n\n            if (!isset($convert_links)) {\n                $convert_links = array();\n            }\n\n            list($result, $parameters) = phpAds_SWFConvert($swf_file, $compress, $convert_links);\n\n            if ($result != $swf_file) {\n                if (count($parameters) > 0) {\n                    // Set default link\n                    $row['url']    = $overwrite_link[$chosen_link];\n                    $row['target'] = $overwrite_target[$chosen_link];\n\n                    // Prepare the parameters\n                    $parameters_complete = array();\n\n                    foreach ($parameters as $key => $val) {\n                        if (isset($overwrite_source) && $overwrite_source[$val] != '') {\n                            $overwrite_link[$val] .= '|source:'.$overwrite_source[$val];\n                        }\n                        $parameters_complete[$key] = array(\n                            'link' => $overwrite_link[$val],\n                            'tar'  => $overwrite_target[$val]\n                        );\n                    }\n                    $parameters = array('swf' => $parameters_complete);\n                } else {\n                    $parameters = '';\n                }\n\n                $row['pluginversion'] = phpAds_SWFVersion($result);\n                $row['htmltemplate']  = $row['htmltemplate'];\n                $extension = substr($row['filename'], strrpos($row['filename'], \".\"));\n                $row['filename'] = phpAds_LocalUniqueName($result, $extension);\n\n                // Store the HTML Template\n                $doBanners = OA_Dal::factoryDO('banners');\n                $doBanners->get($bannerid);\n                $doBanners->filename = $row['filename'];\n                $doBanners->url = $row['url'];\n                $doBanners->target = $row['target'];\n                $doBanners->pluginversion = $row['pluginversion'];\n                $doBanners->htmltemplate = $row['htmltemplate'];\n                $doBanners->parameters = empty($parameters) ? null : serialize($parameters);\n                $doBanners->update();\n\n                // Store the banner\n                phpAds_ImageStore($row['storagetype'], $row['filename'], $result, true);\n\n                // Rebuild cache\n                // require_once MAX_PATH . '/lib/max/deliverycache/cache-'.$conf['delivery']['cache'].'.inc.php';\n                // phpAds_cacheDelete();\n            }\n        }\n    }\n\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n        header('Location: stats.php?entity=campaign&breakdown=banners&clientid='.$clientid.'&campaignid='.$campaignid);\n    } else {\n        header('Location: banner-acl.php?clientid='.$clientid.'&campaignid='.$campaignid.'&bannerid='.$bannerid);\n    }\n    exit;\n}\n\nif (isset($cancel)) {\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {\n        header('Location: stats.php?entity=campaign&breakdown=banners&clientid='.$clientid.'&campaignid='.$campaignid);\n    } else {\n        header('Location: banner-acl.php?clientid='.$clientid.'&campaignid='.$campaignid.'&bannerid='.$bannerid);\n    }\n    exit;\n}\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nif ($bannerid != '') {\n    // Get other banners\n    $doBanners = OA_Dal::factoryDO('banners');\n    $doBanners->campaignid = $campaignid;\n    $doBanners->addSessionListOrderBy('campaign-banners.php');\n    $doBanners->find();\n\n    while ($doBanners->fetch() && $row = $doBanners->toArray()) {\n        phpAds_PageContext(\n            phpAds_buildBannerName ($row['bannerid'], $row['description'], $row['alt']),\n            \"banner-edit.php?clientid=\".$clientid.\"&campaignid=\".$campaignid.\"&bannerid=\".$row['bannerid'],\n            $bannerid == $row['bannerid']\n        );\n    }\n\n    if (OA_Permission::isAccount(OA_ACCOUNT_ADMIN) || OA_Permission::isAccount(OA_ACCOUNT_MANAGER)) {\n        phpAds_PageShortcut($strClientProperties, 'advertiser-edit.php?clientid='.$clientid, 'images/icon-advertiser.gif');\n        phpAds_PageShortcut($strCampaignProperties, 'campaign-edit.php?clientid='.$clientid.'&campaignid='.$campaignid, 'images/icon-campaign.gif');\n        phpAds_PageShortcut($strBannerHistory, 'stats.php?entity=banner&breakdown=history&clientid='.$clientid.'&campaignid='.$campaignid.'&bannerid='.$bannerid, 'images/icon-statistics.gif');\n\n        phpAds_PageHeader(\"4.1.3.4.5\");\n        echo \"<img src='\" . OX::assetPath() . \"/images/icon-advertiser.gif' align='absmiddle'>&nbsp;\".phpAds_getParentClientName($campaignid);\n        echo \"&nbsp;<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/caret-rs.gif'>&nbsp;\";\n        echo \"<img src='\" . OX::assetPath() . \"/images/icon-campaign.gif' align='absmiddle'>&nbsp;\".phpAds_getCampaignName($campaignid);\n        echo \"&nbsp;<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/caret-rs.gif'>&nbsp;\";\n        echo \"<img src='\" . OX::assetPath() . \"/images/icon-banner-stored.gif' align='absmiddle'>&nbsp;<b>\".phpAds_getBannerName($bannerid).\"</b><br /><br />\";\n        phpAds_ShowSections(array(\"4.1.3.4.5\"));\n    } else {\n        phpAds_PageHeader(\"1.2.2.3\");\n        echo \"<img src='\" . OX::assetPath() . \"/images/icon-campaign.gif' align='absmiddle'>&nbsp;\".phpAds_getCampaignName($campaignid);\n        echo \"&nbsp;<img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/caret-rs.gif'>&nbsp;\";\n        echo \"<img src='\" . OX::assetPath() . \"/images/icon-banner-stored.gif' align='absmiddle'>&nbsp;<b>\".phpAds_getBannerName($bannerid).\"</b><br /><br />\";\n        phpAds_ShowSections(array(\"1.2.2.3\"));\n    }\n\n    $doBanners = OA_Dal::factoryDO('banners');\n    $doBanners->get($bannerid);\n    $row = $doBanners->toArray();\n\n    if ($row['contenttype'] == 'swf') {\n        if ($row['storagetype'] == 'sql' || $row['storagetype'] == 'web') {\n            $swf_file = phpAds_ImageRetrieve ($row['storagetype'], $row['filename']);\n        }\n    } else {\n        // Banner is not a flash banner, return to banner-edit.php\n        header(\"Location: banner-edit.php?clientid=\".$clientid.\"&campaignid=\".$campaignid.\"&bannerid=\".$bannerid);\n        exit;\n    }\n} else {\n    // Banner does not exist, return to banner-edit.php\n    header(\"Location: banner-edit.php?clientid=\".$clientid.\"&campaignid=\".$campaignid);\n    exit;\n}\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\n$result = phpAds_SWFInfo($swf_file);\n$version = phpAds_SWFVersion($swf_file);\n$compressed = phpAds_SWFCompressed($swf_file);\n\nif ($result) {\n    echo $strConvertSWF.'<br />';\n    echo \"<table border='0' width='100%' cellpadding='0' cellspacing='0' bgcolor='#F6F6F6'>\";\n    echo \"<form action='banner-swf.php' method='post'>\";\n    echo \"<input type='hidden' name='clientid' value='$clientid'>\";\n    echo \"<input type='hidden' name='campaignid' value='$campaignid'>\";\n    echo \"<input type='hidden' name='bannerid' value='$bannerid'>\";\n\n    echo \"<tr><td height='25' colspan='4' bgcolor='#FFFFFF'><img src='\" . OX::assetPath() . \"/images/\".$phpAds_TextDirection.\"/icon-undo.gif' align='absmiddle'>&nbsp;<b>\".$strHardcodedLinks.\"</b></td></tr>\";\n    echo \"<tr><td height='1' colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    echo \"<tr><td height='10' colspan='4'>&nbsp;</td></tr>\";\n\n    $i=0;\n\n    foreach ($result as $key => $val) {\n        list ($url, $target) = $val;\n\n        if ($i > 0) {\n            echo \"<tr><td height='20' colspan='4'>&nbsp;</td></tr>\";\n            echo \"<tr><td height='1' colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n            echo \"<tr><td height='10' colspan='4'>&nbsp;</td></tr>\";\n        }\n\n        echo \"<tr><td width='30'>&nbsp;</td><td width='30'><input type='checkbox' id='convert_links\".$key.\"' name='convert_links[]' value='\".$key.\"' checked></td>\";\n        echo \"<td width='200'><label for='convert_links\".$key.\"'>\".$strURL.\"</label></td>\";\n        echo \"<td><input class='flat' size='35' type='text' name='overwrite_link[\".$key.\"]' style='width:300px;' dir='ltr' \";\n        echo \" value='\".phpAds_htmlQuotes($url).\"'>\";\n        echo \"<input type='radio' name='chosen_link' value='\".$key.\"'\".($i == 0 ? ' checked' : '').\"></td></tr>\";\n\n        echo \"<tr><td colspan='2'><img src='\" . OX::assetPath() . \"/images/spacer.gif' height='1' width='100%'></td>\";\n        echo \"<td colspan='2'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='200' vspace='6'></td></tr>\";\n\n        echo \"<tr><td width='30'>&nbsp;</td><td width='30'>&nbsp;</td>\";\n        echo \"<td width='200'>\".$strTarget.\"</td>\";\n        echo \"<td><input class='flat' size='16' type='text' name='overwrite_target[\".$key.\"]' style='width:150px;' dir='ltr' \";\n        echo \" value='\".phpAds_htmlQuotes($target).\"'>\";\n        echo \"</td></tr>\";\n\n        if (count($result) > 1) {\n            echo \"<tr><td colspan='2'><img src='\" . OX::assetPath() . \"/images/spacer.gif' height='1' width='100%'></td>\";\n            echo \"<td colspan='2'><img src='\" . OX::assetPath() . \"/images/break-l.gif' height='1' width='200' vspace='6'></td></tr>\";\n\n            echo \"<tr><td width='30'>&nbsp;</td><td width='30'>&nbsp;</td>\";\n            echo \"<td width='200'>\".$strOverwriteSource.\"</td>\";\n            echo \"<td><input class='flat' size='50' type='text' name='overwrite_source[\".$key.\"]' style='width:150px;' dir='ltr' value=''>\";\n            echo \"</td></tr>\";\n        }\n        $i++;\n    }\n\n    echo \"<tr><td height='20' colspan='4'>&nbsp;</td></tr>\";\n    echo \"<tr><td height='1' colspan='4' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    echo \"</table>\";\n    echo \"<br /><br />\";\n\n    echo \"<input type='submit' name='cancel' value='\".$strCancel.\"'>&nbsp;&nbsp;\";\n    echo \"<input type='submit' name='convert' value='\".$strConvert.\"'>\";\n\n    if (function_exists('gzcompress')) {\n        echo \"&nbsp;&nbsp;<input type='checkbox' id='compress' name='compress' value='true'\".($compressed ? ' checked' : '').($version >= 6 && $compressed ? ' disabled' : '').\">\";\n        echo \"&nbsp;<label for='compress'>\".$strCompressSWF.\"</label>\";\n    }\n    echo \"</form>\";\n    echo \"<br /><br />\";\n}\n\n/*-------------------------------------------------------*/\n/* HTML framework                                        */\n/*-------------------------------------------------------*/\n\nphpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/www/admin/lib-maintenance-priority.inc.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-statistics.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-size.inc.php';\nrequire_once MAX_PATH . '/lib/max/other/common.php';\nrequire_once MAX_PATH . '/lib/max/other/html.php';\nrequire_once MAX_PATH . '/lib/max/other/stats.php';\nrequire_once MAX_PATH . '/lib/max/Admin_DA.php';\nrequire_once MAX_PATH . '/lib/OA/Maintenance/Priority.php';\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('clients',   $clientid);\nOA_Permission::enforceAccessToObject('campaigns', $campaignid);\nOA_Permission::enforceAccessToObject('banners',   $bannerid);\n\nOA_Permission::checkSessionToken();\n\n/*-------------------------------------------------------*/\n/* Store preferences\t\t\t\t\t\t\t\t\t */\n/*-------------------------------------------------------*/\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['clientid'] = $clientid;\n$session['prefs']['inventory_entities'][OA_Permission::getEntityId()]['campaignid'][$clientid] = $campaignid;\nphpAds_SessionDataStore();\n\n\n    // Get input parameters\n    $advertiserId   = MAX_getValue('clientid');\n    $campaignId     = MAX_getValue('campaignid');\n    $bannerId       = MAX_getValue('bannerid');\n    $aCurrentZones  = MAX_getValue('includezone');\n    $listorder      = MAX_getStoredValue('listorder', 'name');\n    $orderdirection = MAX_getStoredValue('orderdirection', 'up');\n    $submit         = MAX_getValue('submit');\n\n    // Initialise some parameters\n    $pageName = basename($_SERVER['SCRIPT_NAME']);\n    $tabindex = 1;\n    $agencyId = OA_Permission::getAgencyId();\n    $aEntities = array('clientid' => $advertiserId, 'campaignid' => $campaignId, 'bannerid' => $bannerId);\n\n    // Process submitted form\n    if (isset($submit))\n    {\n        $dalZones       = OA_Dal::factoryDAL('zones');\n        $prioritise     = false;\n        $error          = false;\n        $aPreviousZones = Admin_DA::getAdZones(array('ad_id' => $bannerId));\n        $aDeleteZones   = array();\n\n        // First, remove any zones that should be deleted.\n        if (!empty($aPreviousZones)) {\n            $unlinked = 0;\n            foreach ($aPreviousZones as $aAdZone) {\n                $zoneId = $aAdZone['zone_id'];\n                if ((empty($aCurrentZones[$zoneId])) && ($zoneId > 0))  {\n                    // Schedule for deletion\n                    $aDeleteZones[] = $zoneId;\n                } else {\n                    // Remove this key, because it is already there and does not need to be added again.\n                    unset($aCurrentZones[$zoneId]);\n                }\n            }\n        }\n\n        // Unlink zones\n        if (count($aDeleteZones)) {\n            $unlinked = $dalZones->unlinkZonesFromBanner($aDeleteZones, $bannerId);\n            if ($unlinked > 0) {\n                $prioritise = true;\n            } elseif ($unlinked == -1) {\n                $error = true;\n            }\n        }\n\n        // Link zones\n        if (count($aCurrentZones)) {\n            $linked = $dalZones->linkZonesToBanner(array_keys($aCurrentZones), $bannerId);\n            if (PEAR::isError($linked)\n                || $linked == -1) {\n                $error = $linked;\n            } elseif($linked > 0) {\n                $prioritise = true;\n            }\n        }\n\n        if ($prioritise) {\n            // Run the Maintenance Priority Engine process\n            OA_Maintenance_Priority::scheduleRun();\n        }\n\n        // Move on to the next page\n        if (!$error) {\n            // Queue confirmation message\n            $translation = new OX_Translation ();\n            if ($linked > 0) {\n                $linked_message = $translation->translate ( $GLOBALS['strXZonesLinked'], array($linked));\n            }\n            if ($unlinked > 0) {\n                $unlinked_message = $translation->translate ( $GLOBALS['strXZonesUnlinked'], array($unlinked));\n            }\n            if ($linked > 0 || $unlinked > 0) {\n                $translated_message = $linked_message. ($linked_message != '' && $unlinked_message != '' ? ', ' : ' ').$unlinked_message;\n                OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n          \t}\n\n            Header(\"Location: banner-zone.php?clientid={$clientid}&campaignid={$campaignid}&bannerid={$bannerid}\");\n            exit;\n        }\n    }\n\n    // Display navigation\n    $aOtherCampaigns = Admin_DA::getPlacements(array('agency_id' => $agencyId));\n    $aOtherBanners = Admin_DA::getAds(array('placement_id' => $campaignId), false);\n    MAX_displayNavigationBanner($pageName, $aOtherCampaigns, $aOtherBanners, $aEntities);\n\n    // Main code\n    $aAd = Admin_DA::getAd($bannerId);\n    $aParams = array('agency_id' => $agencyId);\n    if ($aAd['type'] == 'txt') {\n        $aParams['zone_type'] = phpAds_ZoneText;\n    } else {\n        $aParams['zone_width'] = $aAd['width'] . ',-1';\n        $aParams['zone_height'] = $aAd['height'] . ',-1';\n    }\n    $aPublishers = Admin_DA::getPublishers($aParams, true);\n    $aLinkedZones = Admin_DA::getAdZones(array('ad_id' => $bannerId), false, 'zone_id');\n\n    echo \"\n<table border='0' width='100%' cellpadding='0' cellspacing='0'>\n<form name='zones' action='$pageName' method='post'>\n<input type='hidden' name='clientid' value='$advertiserId'>\n<input type='hidden' name='campaignid' value='$campaignId'>\n<input type='hidden' name='bannerid' value='$bannerId'>\";\n\n    MAX_displayZoneHeader($pageName, $listorder, $orderdirection, $aEntities);\n\n    if ($error) {\n        $errorMoreInformation = '';\n        if (PEAR::isError($error)) {\n            $errorMoreInformation = $error->getMessage();\n        }\n        // Message\n        echo \"<br>\";\n        echo \"<div class='errormessage'><img class='errormessage' src='\" . OX::assetPath() . \"/images/errormessage.gif' align='absmiddle'>\";\n        echo \"<span class='tab-r'> {$GLOBALS['strUnableToLinkBanner']}</span><br /><br />\";\n        echo \"{$GLOBALS['strErrorLinkingBanner']} <br />\" . $errorMoreInformation . \"</div><br />\";\n    } else {\n        echo \"<br /><br />\";\n    }\n\n    $zoneToSelect = false;\n    if (!empty($aPublishers)) {\n        MAX_sortArray($aPublishers, ($listorder == 'id' ? 'publisher_id' : $listorder), $orderdirection == 'up');\n        $i=0;\n\n        //select all checkboxes\n        $publisherIdList = '';\n        foreach ($aPublishers as $publisherId => $aPublisher) {\n            $publisherIdList .= $publisherId . '|';\n        }\n\n        echo\"<input type='checkbox' id='selectAllField' onClick='toggleAllZones(\\\"\".$publisherIdList.\"\\\");'><label for='selectAllField'>\".$strSelectUnselectAll.\"</label>\";\n\n        foreach ($aPublishers as $publisherId => $aPublisher) {\n            $publisherName = $aPublisher['name'];\n\t\t    $aZones = Admin_DA::getZones($aParams + array('publisher_id' => $publisherId), true);\n            if (!empty($aZones)) {\n\t\t        $zoneToSelect = true;\n                $bgcolor = ($i % 2 == 0) ? \" bgcolor='#F6F6F6'\" : '';\n                $bgcolorSave = $bgcolor;\n\n                $allchecked = true;\n                foreach ($aZones as $zoneId => $aZone) {\n                    if (!isset($aLinkedZones[$zoneId])) {\n                        $allchecked = false;\n                        break;\n                    }\n                }\n                $checked = $allchecked ? ' checked' : '';\n                if ($i > 0) echo \"\n<tr height='1'>\n    <td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td>\n</tr>\";\n                echo \"\n<tr height='25'$bgcolor>\n    <td>\n        <table>\n            <tr>\n                <td>&nbsp;</td>\n                <td valign='top'><input id='affiliate$publisherId' name='affiliate[$publisherId]' type='checkbox' value='t'$checked onClick='toggleZones($publisherId);' tabindex='$tabindex'>&nbsp;&nbsp;</td>\n                <td valign='top'><img src='\" . OX::assetPath() . \"/images/icon-affiliate.gif' align='absmiddle'>&nbsp;</td>\n                <td><a href='affiliate-edit.php?affiliateid=$publisherId'>\".htmlspecialchars($publisherName).\"</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n            </tr>\n        </table>\n    </td>\n    <td>$publisherId</td>\n    <td height='25'>&nbsp;</td>\n</tr>\";\n\n                $tabindex++;\n                if (!empty($aZones)) {\n                    MAX_sortArray($aZones, ($listorder == 'id' ? 'zone_id' : $listorder), $orderdirection == 'up');\n                    foreach($aZones as $zoneId => $aZone) {\n                        $zoneName = $aZone['name'];\n                        $zoneDescription = $aZone['description'];\n                        $zoneIsActive = (isset($aZone['active']) && $aZone['active'] == 't') ? true : false;\n                        $zoneIcon = MAX_getEntityIcon('zone', $zoneIsActive, $aZone['type']);\n                        $checked = isset($aLinkedZones[$zoneId]) ? ' checked' : '';\n                        $bgcolor = ($checked == ' checked') ? \" bgcolor='#d8d8ff'\" : $bgcolorSave;\n\n                        echo \"\n<tr height='25'$bgcolor>\n    <td>\n        <table>\n            <tr>\n                <td width='28'>&nbsp;</td>\n                <td valign='top'><input name='includezone[$zoneId]' id='a$publisherId' type='checkbox' value='t'$checked onClick='toggleAffiliate($publisherId);' tabindex='$tabindex'>&nbsp;&nbsp;</td>\n                <td valign='top'><img src='$zoneIcon' align='absmiddle'>&nbsp;</td>\n                <td><a href='zone-edit.php?affiliateid=$publisherId&zoneid=$zoneId'>\".htmlspecialchars($zoneName).\"</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n            </tr>\n        </table>\n    </td>\n    <td>$zoneId</td>\n    <td>\".htmlspecialchars($zoneDescription).\"</td>\n</tr>\";\n                    }\n                }\n                $i++;\n            }\n        }\n        echo \"\n<tr height='1'><td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    }\n    if (!$zoneToSelect) {\n        echo \"\n<tr height='25' bgcolor='#F6F6F6'>\n    <td colspan='4'>&nbsp;&nbsp;{$GLOBALS['strNoZonesToLinkToCampaign']}</td>\n</tr>\n<tr height='1'><td colspan='3' bgcolor='#888888'><img src='\" . OX::assetPath() . \"/images/break.gif' height='1' width='100%'></td></tr>\";\n    }\n\n    echo \"\n</table>\";\n\n        echo \"\n<br /><br />\n<input type='submit' name='submit' value='{$GLOBALS['strSaveChanges']}' tabindex='$tabindex'>\";\n        $tabindex++;\n\n    echo \"\n</form>\";\n\n    /*-------------------------------------------------------*/\n    /* Form requirements                                     */\n    /*-------------------------------------------------------*/\n\n    ?>\n\n    <script language='Javascript'>\n    <!--\n        affiliates = new Array();\n    <?php\n        if (!empty($aPublishersZones)) {\n            foreach ($aPublishersZones as $publisherId => $aPublishersZone) {\n                if (!empty($aPublishersZone['children'])) {\n                    $num = count($aPublishersZone['children']);\n                    echo \"\naffiliates[$publisherId] = $num;\";\n                }\n            }\n        }\n    ?>\n\n        function toggleAffiliate(affiliateid)\n        {\n            var count = 0;\n            var affiliate;\n\n            for (var i=0; i<document.zones.elements.length; i++)\n            {\n                if (document.zones.elements[i].name == 'affiliate[' + affiliateid + ']')\n                    affiliate = i;\n\n                if (document.zones.elements[i].id == 'a' + affiliateid + '' &&\n                    document.zones.elements[i].checked)\n                    count++;\n            }\n\n            document.zones.elements[affiliate].checked = (count == affiliates[affiliateid]);\n        }\n\n        function toggleZones(affiliateid)\n        {\n            var checked\n\n            for (var i=0; i<document.zones.elements.length; i++)\n            {\n                if (document.zones.elements[i].name == 'affiliate[' + affiliateid + ']')\n                    checked = document.zones.elements[i].checked;\n\n                if (document.zones.elements[i].id == 'a' + affiliateid + '')\n                    document.zones.elements[i].checked = checked;\n            }\n        }\n\n        function toggleAllZones(zonesList)\n        {\n            var zonesArray, checked, selectAllField;\n\n            selectAllField = document.getElementById('selectAllField');\n\n            zonesArray = zonesList.split('|');\n\n            for (var i=0; i<document.zones.elements.length; i++) {\n\n                if (selectAllField.checked == true) {\n                    document.zones.elements[i].checked = true;\n                } else {\n                    document.zones.elements[i].checked = false;\n                }\n            }\n        }\n\n    //-->\n    </script>\n\n<?php\n\n    /*-------------------------------------------------------*/\n    /* Store preferences                                     */\n    /*-------------------------------------------------------*/\n\n    $session['prefs'][$pageName]['listorder'] = $listorder;\n    $session['prefs'][$pageName]['orderdirection'] = $orderdirection;\n\n    phpAds_SessionDataStore();\n\n    /*-------------------------------------------------------*/\n    /* HTML framework                                        */\n    /*-------------------------------------------------------*/\n\n    phpAds_PageFooter();\n\n?>\n", "<?php\n\n/*\n+---------------------------------------------------------------------------+\n| Revive Adserver                                                           |\n| http://www.revive-adserver.com                                            |\n|                                                                           |\n| Copyright: See the COPYRIGHT.txt file.                                    |\n| License: GPLv2 or later, see the LICENSE.txt file.                        |\n+---------------------------------------------------------------------------+\n*/\n\n// Require the initialisation file\nrequire_once '../../init.php';\n\n// Required files\nrequire_once MAX_PATH . '/lib/OA/Dal.php';\nrequire_once MAX_PATH . '/www/admin/config.php';\nrequire_once MAX_PATH . '/www/admin/lib-storage.inc.php';\nrequire_once MAX_PATH . '/www/admin/lib-zones.inc.php';\n\n// Register input variables\nphpAds_registerGlobal (\n     'duplicate'\n    ,'moveto'\n    ,'returnurl'\n);\n\n\n// Security check\nOA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);\nOA_Permission::enforceAccessToObject('clients', $clientid);\nOA_Permission::enforceAccessToObject('trackers', $trackerid);\n\n/*-------------------------------------------------------*/\n/* Main code                                             */\n/*-------------------------------------------------------*/\n\nif (!empty($trackerid))\n{\n    OA_Permission::checkSessionToken();\n    \n    if (!empty($moveto))\n    {\n        // Delete any campaign-tracker links\n        $doCampaign_trackers = OA_Dal::factoryDO('campaigns_trackers');\n        $doCampaign_trackers->trackerid = $trackerid;\n        $doCampaign_trackers->delete();\n\n        // Move the tracker\n        $doTrackers = OA_Dal::factoryDO('trackers');\n        if ($doTrackers->get($trackerid)) {\n            $doTrackers->clientid = $moveto;\n            $doTrackers->update();\n\n            // Queue confirmation message\n            $trackerName = $doTrackers->trackername;\n            $doClients = OA_Dal::factoryDO('clients');\n            if ($doClients->get($moveto)) {\n                $advertiserName = $doClients->clientname;\n            }\n            $translation = new OX_Translation();\n            $translated_message = $translation->translate ( $GLOBALS['strTrackerHasBeenMoved'],\n                array(htmlspecialchars($trackerName), htmlspecialchars($advertiserName))\n            );\n            OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n        }\n\n        Header (\"Location: \".$returnurl.\"?clientid=\".$moveto.\"&trackerid=\".$trackerid);\n        exit;\n    }\n    elseif (isset($duplicate) && $duplicate == 'true')\n    {\n        $doTrackers = OA_Dal::factoryDO('trackers');\n        if ($doTrackers->get($trackerid))\n        {\n            $oldName = $doTrackers->trackername;\n            $new_trackerid = $doTrackers->duplicate();\n\n            if ($doTrackers->get($new_trackerid)) {\n                $newName = $doTrackers->trackername;\n            }\n\n            // Queue confirmation message\n            $translation = new OX_Translation();\n            $translated_message = $translation->translate ( $GLOBALS['strTrackerHasBeenDuplicated'],\n                array(MAX::constructURL(MAX_URL_ADMIN, \"tracker-edit.php?clientid=$clientid&trackerid=$trackerid\"),\n                    htmlspecialchars($oldName),\n                    MAX::constructURL(MAX_URL_ADMIN, \"tracker-edit.php?clientid=$clientid&trackerid=$new_trackerid\"),\n                    htmlspecialchars($newName))\n            );\n            OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);\n\n\n            Header (\"Location: \".$returnurl.\"?clientid=\".$clientid.\"&trackerid=\".$new_trackerid);\n            exit;\n        }\n    }\n}\n\nHeader (\"Location: \".$returnurl.\"?clientid=\".$clientid.\"&trackerid=\".$trackerid);\n\n?>"], "filenames": ["www/admin/banner-acl.php", "www/admin/banner-activate.php", "www/admin/banner-advanced.php", "www/admin/banner-modify.php", "www/admin/banner-swf.php", "www/admin/banner-zone.php", "www/admin/tracker-modify.php"], "buggy_code_start_loc": [50, 37, 42, 33, 36, 32, 40], "buggy_code_end_loc": [50, 37, 58, 33, 36, 32, 40], "fixing_code_start_loc": [51, 38, 42, 34, 37, 33, 41], "fixing_code_end_loc": [53, 40, 62, 35, 39, 35, 43], "type": "CWE-352", "message": "Revive Adserver before 3.2.3 suffers from Cross-Site Request Forgery (CSRF). A number of scripts in Revive Adserver's user interface are vulnerable to CSRF attacks: `www/admin/banner-acl.php`, `www/admin/banner-activate.php`, `www/admin/banner-advanced.php`, `www/admin/banner-modify.php`, `www/admin/banner-swf.php`, `www/admin/banner-zone.php`, `www/admin/tracker-modify.php`.", "other": {"cve": {"id": "CVE-2016-9455", "sourceIdentifier": "support@hackerone.com", "published": "2017-03-28T02:59:00.620", "lastModified": "2017-03-30T01:59:01.487", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Revive Adserver before 3.2.3 suffers from Cross-Site Request Forgery (CSRF). A number of scripts in Revive Adserver's user interface are vulnerable to CSRF attacks: `www/admin/banner-acl.php`, `www/admin/banner-activate.php`, `www/admin/banner-advanced.php`, `www/admin/banner-modify.php`, `www/admin/banner-swf.php`, `www/admin/banner-zone.php`, `www/admin/tracker-modify.php`."}, {"lang": "es", "value": "Revive Adserver en versiones anteriores a 3.2.3 sufre de solicitud de falsificaci\u00f3n en sitios cruzados (CSRF). Una serie de scripts en la interfaz de usuario de Revive Adserver son vulnerables a los ataques CSRF: `www/admin/banner-acl.php`, `www/admin/banner-activate.php`, `www/admin/banner-advanced.php`, `www/admin/banner-modify.php`, `www/admin/banner-swf.php`, `www/admin/banner-zone.php`, `www/admin/tracker-modify.php`."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}, {"source": "support@hackerone.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:revive-adserver:revive_adserver:*:*:*:*:*:*:*:*", "versionEndIncluding": "3.2.2", "matchCriteriaId": "94F64F5A-ACD3-4AED-82BE-832D7B4801DA"}]}]}], "references": [{"url": "http://www.securityfocus.com/bid/83964", "source": "support@hackerone.com"}, {"url": "https://github.com/revive-adserver/revive-adserver/commit/65a9c8119b4bc7493fd957e1a8d6f6f731298b45", "source": "support@hackerone.com", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://hackerone.com/reports/97123", "source": "support@hackerone.com", "tags": ["Permissions Required"]}, {"url": "https://www.revive-adserver.com/security/revive-sa-2016-001/", "source": "support@hackerone.com", "tags": ["Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/revive-adserver/revive-adserver/commit/65a9c8119b4bc7493fd957e1a8d6f6f731298b45"}}