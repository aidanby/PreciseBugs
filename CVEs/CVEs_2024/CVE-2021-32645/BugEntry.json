{"buggy_code": ["<?php\n\n/*\n * This file is part of the hyn/multi-tenant package.\n *\n * (c) Dani\u00ebl Klabbers <daniel@klabbers.email>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @see https://tenancy.dev\n * @see https://github.com/hyn/multi-tenant\n */\n\nnamespace Hyn\\Tenancy\\Middleware;\n\nuse Closure;\nuse Hyn\\Tenancy\\Contracts\\CurrentHostname;\nuse Hyn\\Tenancy\\Contracts\\Hostname;\nuse Hyn\\Tenancy\\Events\\Hostnames\\NoneFound;\nuse Hyn\\Tenancy\\Events\\Hostnames\\Redirected;\nuse Hyn\\Tenancy\\Events\\Hostnames\\Secured;\nuse Hyn\\Tenancy\\Events\\Hostnames\\UnderMaintenance;\nuse Hyn\\Tenancy\\Traits\\DispatchesEvents;\nuse Illuminate\\Foundation\\Http\\Exceptions\\MaintenanceModeException;\nuse Illuminate\\Http\\RedirectResponse;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Routing\\Redirector;\nuse Illuminate\\Support\\Facades\\URL;\n\nclass HostnameActions\n{\n    use DispatchesEvents;\n\n    /**\n     * @var Redirector\n     */\n    protected $redirect;\n\n    /**\n     * @param Redirector $redirect\n     */\n    public function __construct(Redirector $redirect)\n    {\n        $this->redirect = $redirect;\n    }\n\n    /**\n     * @param Request $request\n     * @param Closure $next\n     * @return RedirectResponse\n     */\n    public function handle(Request $request, Closure $next)\n    {\n        $hostname = config('tenancy.hostname.auto-identification')\n            ? app(CurrentHostname::class)\n            : null;\n\n        if ($hostname != null) {\n            if ($hostname->under_maintenance_since && $hostname->under_maintenance_since <= now()) {\n                return $this->maintenance($hostname);\n            }\n\n            if ($hostname->redirect_to) {\n                return $this->redirect($hostname);\n            }\n\n            if (!$request->secure() && $hostname->force_https) {\n                return $this->secure($hostname, $request);\n            }\n        } else {\n            $this->abort($request);\n        }\n\n        return $next($request);\n    }\n\n    /**\n     * @param Hostname $hostname\n     * @return RedirectResponse\n     */\n    protected function redirect(Hostname $hostname)\n    {\n        $this->emitEvent(new Redirected($hostname));\n\n        return $this->redirect->away($hostname->redirect_to);\n    }\n\n    /**\n     * @param Hostname $hostname\n     * @param Request $request\n     * @return RedirectResponse\n     */\n    protected function secure(Hostname $hostname, Request $request)\n    {\n        $this->emitEvent(new Secured($hostname));\n\n        return $this->redirect->secure($request->getRequestUri());\n    }\n\n    /**\n     * @param Hostname $hostname\n     */\n    protected function maintenance(Hostname $hostname)\n    {\n        $this->emitEvent(new UnderMaintenance($hostname));\n        throw new MaintenanceModeException($hostname->under_maintenance_since->timestamp);\n    }\n\n    /**\n     * Aborts the application.\n     * @param Request $request\n     */\n    protected function abort(Request $request)\n    {\n        if (config('tenancy.hostname.abort-without-identified-hostname')) {\n            $this->emitEvent(new NoneFound($request));\n            return abort(404);\n        }\n    }\n}\n"], "fixing_code": ["<?php\n\n/*\n * This file is part of the hyn/multi-tenant package.\n *\n * (c) Dani\u00ebl Klabbers <daniel@klabbers.email>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @see https://tenancy.dev\n * @see https://github.com/hyn/multi-tenant\n */\n\nnamespace Hyn\\Tenancy\\Middleware;\n\nuse Closure;\nuse Hyn\\Tenancy\\Contracts\\CurrentHostname;\nuse Hyn\\Tenancy\\Contracts\\Hostname;\nuse Hyn\\Tenancy\\Events\\Hostnames\\NoneFound;\nuse Hyn\\Tenancy\\Events\\Hostnames\\Redirected;\nuse Hyn\\Tenancy\\Events\\Hostnames\\Secured;\nuse Hyn\\Tenancy\\Events\\Hostnames\\UnderMaintenance;\nuse Hyn\\Tenancy\\Traits\\DispatchesEvents;\nuse Illuminate\\Foundation\\Http\\Exceptions\\MaintenanceModeException;\nuse Illuminate\\Http\\RedirectResponse;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Routing\\Redirector;\nuse Illuminate\\Support\\Facades\\URL;\n\nclass HostnameActions\n{\n    use DispatchesEvents;\n\n    /**\n     * @var Redirector\n     */\n    protected $redirect;\n\n    /**\n     * @param Redirector $redirect\n     */\n    public function __construct(Redirector $redirect)\n    {\n        $this->redirect = $redirect;\n    }\n\n    /**\n     * @param Request $request\n     * @param Closure $next\n     * @return RedirectResponse\n     */\n    public function handle(Request $request, Closure $next)\n    {\n        $hostname = config('tenancy.hostname.auto-identification')\n            ? app(CurrentHostname::class)\n            : null;\n\n        if ($hostname != null) {\n            if ($hostname->under_maintenance_since && $hostname->under_maintenance_since <= now()) {\n                return $this->maintenance($hostname);\n            }\n\n            if ($hostname->redirect_to) {\n                return $this->redirect($hostname);\n            }\n\n            if (!$request->secure() && $hostname->force_https) {\n                return $this->secure($hostname, $request);\n            }\n        } else {\n            $this->abort($request);\n        }\n\n        return $next($request);\n    }\n\n    /**\n     * @param Hostname $hostname\n     * @return RedirectResponse\n     */\n    protected function redirect(Hostname $hostname)\n    {\n        $this->emitEvent(new Redirected($hostname));\n\n        return $this->redirect->away($hostname->redirect_to);\n    }\n\n    /**\n     * @param Hostname $hostname\n     * @param Request $request\n     * @return RedirectResponse\n     */\n    protected function secure(Hostname $hostname, Request $request)\n    {\n        $this->emitEvent(new Secured($hostname));\n\n        return $this->redirect->secure(ltrim($request->getRequestUri(), '/'));\n    }\n\n    /**\n     * @param Hostname $hostname\n     */\n    protected function maintenance(Hostname $hostname)\n    {\n        $this->emitEvent(new UnderMaintenance($hostname));\n        throw new MaintenanceModeException($hostname->under_maintenance_since->timestamp);\n    }\n\n    /**\n     * Aborts the application.\n     * @param Request $request\n     */\n    protected function abort(Request $request)\n    {\n        if (config('tenancy.hostname.abort-without-identified-hostname')) {\n            $this->emitEvent(new NoneFound($request));\n            return abort(404);\n        }\n    }\n}\n"], "filenames": ["src/Middleware/HostnameActions.php"], "buggy_code_start_loc": [98], "buggy_code_end_loc": [99], "fixing_code_start_loc": [98], "fixing_code_end_loc": [99], "type": "CWE-601", "message": "Tenancy multi-tenant is an open source multi-domain controller for the Laravel web framework. In some situations, it is possible to have open redirects where users can be redirected from your site to any other site using a specially crafted URL. This is only the case for installations where the default Hostname Identification is used and the environment uses tenants that have `force_https` set to `true` (default: `false`). Version 5.7.2 contains the relevant patches to fix this bug. Stripping the URL from special characters to prevent specially crafted URL's from being redirected to. As a work around users can set the `force_https` to every tenant to `false`, however this may degrade connection security.", "other": {"cve": {"id": "CVE-2021-32645", "sourceIdentifier": "security-advisories@github.com", "published": "2021-05-27T17:15:08.127", "lastModified": "2021-06-08T16:26:35.413", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Tenancy multi-tenant is an open source multi-domain controller for the Laravel web framework. In some situations, it is possible to have open redirects where users can be redirected from your site to any other site using a specially crafted URL. This is only the case for installations where the default Hostname Identification is used and the environment uses tenants that have `force_https` set to `true` (default: `false`). Version 5.7.2 contains the relevant patches to fix this bug. Stripping the URL from special characters to prevent specially crafted URL's from being redirected to. As a work around users can set the `force_https` to every tenant to `false`, however this may degrade connection security."}, {"lang": "es", "value": "Tenancy multi-tenant es un controlador multidominio de c\u00f3digo abierto para el Laravel web framework.&#xa0;En algunas situaciones, es posible tener redireccionamientos abiertos donde los usuarios pueden ser redirigidos desde su sitio a cualquier otro sitio usando una URL especialmente dise\u00f1ada.&#xa0;Este es solo el caso de instalaciones donde es usado la Identificaci\u00f3n de Nombre de Host predeterminada y el entorno usa inquilinos que presentan la funci\u00f3n \"force_https\" ajustada en el par\u00e1metro \"true\" (por defecto: \"false\").&#xa0;La versi\u00f3n 5.7.2 contiene los parches relevantes para corregir este error.&#xa0;Eliminar la URL de los caracteres especiales para impedir que se redireccione a las URL especialmente dise\u00f1adas.&#xa0;Como soluci\u00f3n alternativa, los usuarios pueden ajustar la funci\u00f3n \"force_https\" para cada inquilino en el par\u00e1metro \"false\", sin embargo, esto puede degradar la seguridad de la conexi\u00f3n"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-601"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:tenancy:multi-tenant:*:*:*:*:*:*:*:*", "versionStartIncluding": "5.6.0", "versionEndExcluding": "5.7.2", "matchCriteriaId": "694DCF0D-2851-4E42-8F9C-A74FA84527D2"}]}]}], "references": [{"url": "https://github.com/tenancy/multi-tenant/commit/9c837a21bccce9bcaeb90033ef200d84f0d9e164", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/tenancy/multi-tenant/security/advisories/GHSA-4r8q-gv9j-3xx6", "source": "security-advisories@github.com", "tags": ["Mitigation", "Third Party Advisory"]}, {"url": "https://packagist.org/packages/hyn/multi-tenant", "source": "security-advisories@github.com", "tags": ["Product", "Third Party Advisory"]}, {"url": "https://webmasters.googleblog.com/2009/01/open-redirect-urls-is-your-site-being.html", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/tenancy/multi-tenant/commit/9c837a21bccce9bcaeb90033ef200d84f0d9e164"}}