{"buggy_code": ["<?php header('Content-Type: application/json');\n\n/* IMPORTANT:\n * change this to the main url of where you host the application, otherwise, every entry will be marked as a cheater\n*/\n$hostdomain = 'pacman.platzh1rsch.ch';\n\nif (isset($_POST['action'])) {\n\tswitch ($_POST['action']) {\n\t\tcase 'get':\n\t\t\tif(isset($_POST['page'])) {\n\t\t\t\techo getHighscore($_POST['page']);\t\n\t\t\t} else {\n\t\t\t\techo getHighscore();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'add':\n\t\t\tif(isset($_POST['name']) || isset($_POST['score']) || isset($_POST['level'])) \n\t\t\t\techo addHighscore($_POST['name'],$_POST['score'], $_POST['level']);\n\t\t\tbreak;\n\t\t}\n} else if (isset($_GET['action'])) {\n\tif ($_GET['action'] == 'get') {\n\t\tif(isset($_GET['page'])) {\n\t\t\techo getHighscore($_GET['page']);\t\n\t\t} else {\n\t\t\techo getHighscore();\n\t\t}\n\t} else if ($_GET['action'] == 'version') {\n\t\techo getVersionInfo();\n\t}\n} else echo \"define action to call\";\n\n\nfunction getVersionInfo() {\n\t$strJsonFileContents = file_get_contents(\"../package.json\");\n\t// Convert to array \n\t$array = json_decode($strJsonFileContents, true);\n\t\n\t$response[\"version\"] = $array[\"version\"];\n\n\tif (!isset($response) || is_null($response)) {\n\t\treturn \"[]\";\n\t} else {\n\t\treturn json_encode($response);\n\t}\n}\n\nfunction getHighscore($page = 1) {\n\n\t$db = new SQLite3('pacman.db');\n\tcreateDataBase($db);\n\t$results = $db->query('SELECT name, score FROM highscore WHERE cheater = 0 AND name != \"\" ORDER BY score DESC LIMIT 10 OFFSET ' . ($page-1)*10);\n\twhile ($row = $results->fetchArray()) {\n\t\t$tmp[\"name\"] = htmlspecialchars($row['name']);\n\t\t$tmp[\"score\"] = strval($row['score']);\n\t\t$response[] = $tmp;\t\t\n\t}\n\tif (!isset($response) || is_null($response)) {\n\t\treturn \"[]\";\n\t} else {\n\t\treturn json_encode($response);\n\t}\n}\n\nfunction addHighscore($name, $score, $level) {\n\n\t$db = new SQLite3('pacman.db');\n\t$date = date('Y-m-d h:i:s', time());\n\tcreateDataBase($db);\n\t$ref = isset($_SERVER[ 'HTTP_REFERER']) ? $_SERVER[ 'HTTP_REFERER'] : \"\";\n\t$ua = isset($_SERVER[ 'HTTP_USER_AGENT']) ? $_SERVER[ 'HTTP_USER_AGENT'] : \"\";\n\t$remA = isset($_SERVER[ 'REMOTE_ADDR']) ? $_SERVER[ 'REMOTE_ADDR'] : \"\";\n\t$remH = isset($_SERVER[ 'REMOTE_HOST']) ? $_SERVER[ 'REMOTE_HOST'] : \"\";\n\n\t// some simple checks to avoid cheaters\n\t$ref_assert = preg_match('/http(s)?:\\/\\/.*' . $hostdomain . '/', $ref) > 0;\n\t$ua_assert = ($ua != \"\");\n\t$cheater = 0;\n\tif (!$ref_assert || !$ua_assert) {\n\t\t$cheater = 1;\n\t}\n\n\t$maxlvlpoints_pills = 104 * 10;\n\t$maxlvlpoints_powerpills = 4 * 50;\n\t$maxlvlpoints_ghosts = 4 * 4 * 100;\n\t$maxlvlpoints = $maxlvlpoints_pills + $maxlvlpoints_powerpills + $maxlvlpoints_ghosts;\n\n\t// check if score is even possible\n\tif ($level < 1 || $level > 10) {\n\t\t$cheater = 1;\n\t} else if (($score / $level) > $maxlvlpoints) {\n\t\t$cheater = 1;\n\t}\n\n\t$name_clean = htmlspecialchars($name);\n\t$score_clean = htmlspecialchars($score);\n\n\t$db->exec('INSERT INTO highscore (name, score, level, date, log_referer, log_user_agent, log_remote_addr, log_remote_host, cheater) '\n\t\t. 'VALUES (\"' \n\t\t\t. $name . '\", ' \n\t\t\t. $score . ', ' \n\t\t\t. $level . ', \"' \n\t\t\t. $date . '\", \"' \n\t\t\t. $ref .'\", \"'\n\t\t\t. $ua . '\", \"'\n\t\t\t. $remA .'\", \"'\n\t\t\t. $remH . '\", \"'\n\t\t\t. $cheater\n\t\t.'\")'\n\t);\n\n\t$response['status'] = \"success\";\n\t$response['level'] = $level;\n\t$response['name'] = $name;\n\t$response['score'] = $score;\n\t$response['cheater'] = $cheater;\n\treturn json_encode($response);\n}\n\nfunction createDataBase($db) {\n\t$db->exec('CREATE TABLE IF NOT EXISTS highscore(name VARCHAR(60),score INT, level INT, date DATETIME, log_referer VARCHAR(200), log_user_agent VARCHAR(200), log_remote_addr VARCHAR(200), log_remote_host VARCHAR(200), cheater BOOLEAN)');\n}\n\n?>\n"], "fixing_code": ["<?php header('Content-Type: application/json');\n\n/* IMPORTANT:\n * change this to the main url of where you host the application, otherwise, every entry will be marked as a cheater\n*/\n$hostdomain = 'pacman.platzh1rsch.ch';\n\nif (isset($_POST['action'])) {\n\tswitch ($_POST['action']) {\n\t\tcase 'get':\n\t\t\tif(isset($_POST['page'])) {\n\t\t\t\techo getHighscore($_POST['page']);\t\n\t\t\t} else {\n\t\t\t\techo getHighscore();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'add':\n\t\t\tif(isset($_POST['name']) || isset($_POST['score']) || isset($_POST['level'])) \n\t\t\t\techo addHighscore($_POST['name'],$_POST['score'], $_POST['level']);\n\t\t\tbreak;\n\t\t}\n} else if (isset($_GET['action'])) {\n\tif ($_GET['action'] == 'get') {\n\t\tif(isset($_GET['page'])) {\n\t\t\techo getHighscore($_GET['page']);\t\n\t\t} else {\n\t\t\techo getHighscore();\n\t\t}\n\t} else if ($_GET['action'] == 'version') {\n\t\techo getVersionInfo();\n\t}\n} else echo \"define action to call\";\n\n\nfunction getVersionInfo() {\n\t$strJsonFileContents = file_get_contents(\"../package.json\");\n\t// Convert to array \n\t$array = json_decode($strJsonFileContents, true);\n\t\n\t$response[\"version\"] = $array[\"version\"];\n\n\tif (!isset($response) || is_null($response)) {\n\t\treturn \"[]\";\n\t} else {\n\t\treturn json_encode($response);\n\t}\n}\n\nfunction getHighscore($page = 1) {\n\n\t$db = new SQLite3('pacman.db');\n\tcreateDataBase($db);\n\t$results = $db->query('SELECT name, score FROM highscore WHERE cheater = 0 AND name != \"\" ORDER BY score DESC LIMIT 10 OFFSET ' . ($page-1)*10);\n\twhile ($row = $results->fetchArray()) {\n\t\t$tmp[\"name\"] = htmlspecialchars($row['name']);\n\t\t$tmp[\"score\"] = strval($row['score']);\n\t\t$response[] = $tmp;\t\t\n\t}\n\tif (!isset($response) || is_null($response)) {\n\t\treturn \"[]\";\n\t} else {\n\t\treturn json_encode($response);\n\t}\n}\n\nfunction addHighscore($name, $score, $level) {\n\n\t$db = new SQLite3('pacman.db');\n\t$date = date('Y-m-d h:i:s', time());\n\tcreateDataBase($db);\n\t$ref = isset($_SERVER[ 'HTTP_REFERER']) ? $_SERVER[ 'HTTP_REFERER'] : \"\";\n\t$ua = isset($_SERVER[ 'HTTP_USER_AGENT']) ? $_SERVER[ 'HTTP_USER_AGENT'] : \"\";\n\t$remA = isset($_SERVER[ 'REMOTE_ADDR']) ? $_SERVER[ 'REMOTE_ADDR'] : \"\";\n\t$remH = isset($_SERVER[ 'REMOTE_HOST']) ? $_SERVER[ 'REMOTE_HOST'] : \"\";\n\n\t// some simple checks to avoid cheaters\n\t$ref_assert = preg_match('/http(s)?:\\/\\/.*' . $hostdomain . '/', $ref) > 0;\n\t$ua_assert = ($ua != \"\");\n\t$cheater = 0;\n\tif (!$ref_assert || !$ua_assert) {\n\t\t$cheater = 1;\n\t}\n\n\t$maxlvlpoints_pills = 104 * 10;\n\t$maxlvlpoints_powerpills = 4 * 50;\n\t$maxlvlpoints_ghosts = 4 * 4 * 100;\n\t$maxlvlpoints = $maxlvlpoints_pills + $maxlvlpoints_powerpills + $maxlvlpoints_ghosts;\n\n\t// check if score is even possible\n\tif ($level < 1 || $level > 10) {\n\t\t$cheater = 1;\n\t} else if (($score / $level) > $maxlvlpoints) {\n\t\t$cheater = 1;\n\t}\n\n\t$name_clean = htmlspecialchars($name);\n\t$score_clean = htmlspecialchars($score);\n\n\t$db->exec('INSERT INTO highscore (name, score, level, date, log_referer, log_user_agent, log_remote_addr, log_remote_host, cheater)VALUES(?,?,?,?,?,?,?,?,?)',$name, $score,$level,$date,$ref,$ua,$remA,$remH,$cheater);\n\n\n\t$response['status'] = \"success\";\n\t$response['level'] = $level;\n\t$response['name'] = $name;\n\t$response['score'] = $score;\n\t$response['cheater'] = $cheater;\n\treturn json_encode($response);\n}\n\nfunction createDataBase($db) {\n\t$db->exec('CREATE TABLE IF NOT EXISTS highscore(name VARCHAR(60),score INT, level INT, date DATETIME, log_referer VARCHAR(200), log_user_agent VARCHAR(200), log_remote_addr VARCHAR(200), log_remote_host VARCHAR(200), cheater BOOLEAN)');\n}\n\n?>\n"], "filenames": ["data/db-handler.php"], "buggy_code_start_loc": [99], "buggy_code_end_loc": [112], "fixing_code_start_loc": [99], "fixing_code_end_loc": [101], "type": "CWE-89", "message": "A vulnerability classified as critical has been found in pacman-canvas up to 1.0.5. Affected is the function addHighscore of the file data/db-handler.php. The manipulation leads to sql injection. It is possible to launch the attack remotely. Upgrading to version 1.0.6 is able to address this issue. The name of the patch is 29522c90ca1cebfce6453a5af5a45281d99b0646. It is recommended to upgrade the affected component. VDB-216270 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2021-4261", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-19T14:15:10.700", "lastModified": "2022-12-27T20:41:43.317", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as critical has been found in pacman-canvas up to 1.0.5. Affected is the function addHighscore of the file data/db-handler.php. The manipulation leads to sql injection. It is possible to launch the attack remotely. Upgrading to version 1.0.6 is able to address this issue. The name of the patch is 29522c90ca1cebfce6453a5af5a45281d99b0646. It is recommended to upgrade the affected component. VDB-216270 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-707"}, {"lang": "en", "value": "CWE-74"}, {"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:pacman-canvas_project:pacman-canvas:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.0.6", "matchCriteriaId": "919B9945-E94B-4C44-AA58-B5951748D557"}]}]}], "references": [{"url": "https://github.com/platzhersh/pacman-canvas/commit/29522c90ca1cebfce6453a5af5a45281d99b0646", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/platzhersh/pacman-canvas/releases/tag/1.0.6", "source": "cna@vuldb.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.216270", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/platzhersh/pacman-canvas/commit/29522c90ca1cebfce6453a5af5a45281d99b0646"}}