{"buggy_code": ["<?php\r\n\r\nif ( !is_admin() )\r\n{\r\n    echo 'Direct access not allowed.';\r\n    exit;\r\n}\r\n\r\n$this->item = intval($_GET[\"cal\"]);\r\n\r\nglobal $wpdb;\r\n\r\n$message = \"\";\r\n\r\nif (isset($_GET['lu']) && $_GET['lu'] != '')\r\n{\r\n    $wpdb->query('UPDATE `'.$wpdb->prefix.$this->table_messages.'` SET paid='.esc_sql($_GET[\"status\"]).' WHERE id='.$_GET['lu']);           \r\n    $message = \"Item updated\";        \r\n}\r\nelse if (isset($_GET['ld']) && $_GET['ld'] != '')\r\n{\r\n    $wpdb->query('DELETE FROM `'.$wpdb->prefix.$this->table_messages.'` WHERE id='.$_GET['ld']);       \r\n    $message = \"Item deleted\";\r\n}\r\nelse if (isset($_GET['import']) && $_GET['import'] == '1')\r\n{    \r\n    $form = json_decode($this->cleanJSON($this->get_option('form_structure', CP_POLLS_DEFAULT_form_structure)));\r\n    $form = $form[0];    \r\n    \r\n    if (($handle = fopen($_FILES['importfile']['tmp_name'], \"r\")) !== FALSE) {\r\n        while (($data = fgetcsv($handle, 1000, \",\")) !== FALSE) {\r\n            $rowdata = array(); \r\n            $formatted_data = '';\r\n            $num = count($data);\r\n            $row++;\r\n            \r\n            $time  = $data[0];\r\n            $ip    = $data[1];\r\n            $email = $data[2];\r\n            \r\n            for ($c=3; $c < $num; $c++)\r\n                if (isset($form[$c-3]))\r\n                {\r\n                    $rowdata[$form[$c-3]->name] = $data[$c]; //echo $data[$c] . \"<br />\\n\";\r\n                    $formatted_data .= $form[$c-3]->title. \": \". $data[$c] . \"\\n\\n\";\r\n                }                    \r\n            $wpdb->insert($wpdb->prefix.$this->table_messages, array( \r\n                                   'formid' => $this->item,\r\n                                   'time' => $time,\r\n                                   'ipaddr' => $ip,\r\n                                   'notifyto' => $email,\r\n                                   'data' => $formatted_data,\r\n                                   'posted_data' => serialize($rowdata),\r\n                             ));            \r\n        }\r\n        fclose($handle);\r\n    }    \r\n    $message = \"CSV File Imported.\";\r\n}\r\n\r\nif ($this->item != 0)\r\n    $myform = $wpdb->get_results( 'SELECT * FROM '.$wpdb->prefix.$this->table_items .' WHERE id='.$this->item);\r\n\r\n\r\n$current_page = intval($_GET[\"p\"]);\r\nif (!$current_page) $current_page = 1;\r\n$records_per_page = 50;                                                                                  \r\n\r\n$cond = '';\r\nif ($_GET[\"search\"] != '') $cond .= \" AND (data like '%\".esc_sql($_GET[\"search\"]).\"%' OR posted_data LIKE '%\".esc_sql($_GET[\"search\"]).\"%')\";\r\nif ($_GET[\"dfrom\"] != '') $cond .= \" AND (`time` >= '\".esc_sql($_GET[\"dfrom\"]).\"')\";\r\nif ($_GET[\"dto\"] != '') $cond .= \" AND (`time` <= '\".esc_sql($_GET[\"dto\"]).\" 23:59:59')\";\r\nif ($this->item != 0) $cond .= \" AND formid=\".$this->item;\r\n\r\n$events = $wpdb->get_results( \"SELECT * FROM \".$wpdb->prefix.$this->table_messages.\" WHERE 1=1 \".$cond.\" ORDER BY `time` DESC\" );\r\n$total_pages = ceil(count($events) / $records_per_page);\r\n\r\nif ($message) echo \"<div id='setting-error-settings_updated' class='updated settings-error'><p><strong>\".$message.\"</strong></p></div>\";\r\n\r\n\r\n?>\r\n<script type=\"text/javascript\">\r\n function cp_updateMessageItem(id,status)\r\n {    \r\n    document.location = 'options-general.php?page=<?php echo $this->menu_parameter; ?>&cal=<?php echo $_GET[\"cal\"]; ?>&list=1&status='+status+'&lu='+id+'&r='+Math.random( );   \r\n } \r\n function cp_deleteMessageItem(id)\r\n {\r\n    if (confirm('Are you sure that you want to delete this item?'))\r\n    {        \r\n        document.location = 'options-general.php?page=<?php echo $this->menu_parameter; ?>&cal=<?php echo $_GET[\"cal\"]; ?>&list=1&ld='+id+'&r='+Math.random();\r\n    }\r\n }\r\n</script>\r\n<div class=\"wrap\">\r\n<h2><?php echo $this->plugin_name; ?> - Message List</h2>\r\n\r\n<input type=\"button\" name=\"backbtn\" value=\"Back to items list...\" onclick=\"document.location='admin.php?page=<?php echo $this->menu_parameter; ?>';\">\r\n\r\n\r\n<div id=\"normal-sortables\" class=\"meta-box-sortables\">\r\n <hr />\r\n <h3>This message list is from: <?php if ($this->item != 0) echo $myform[0]->form_name; else echo 'All forms'; ?></h3>\r\n</div>\r\n\r\n\r\n<form action=\"admin.php\" method=\"get\">\r\n <input type=\"hidden\" name=\"page\" value=\"<?php echo $this->menu_parameter; ?>\" />\r\n <input type=\"hidden\" name=\"cal\" value=\"<?php echo $this->item; ?>\" />\r\n <input type=\"hidden\" name=\"list\" value=\"1\" />\r\n <nobr>Search for: <input type=\"text\" name=\"search\" value=\"<?php echo esc_attr($_GET[\"search\"]); ?>\" /> &nbsp; &nbsp; &nbsp;</nobr> \r\n <nobr>From: <input type=\"text\" id=\"dfrom\" name=\"dfrom\" value=\"<?php echo esc_attr($_GET[\"dfrom\"]); ?>\" /> &nbsp; &nbsp; &nbsp; </nobr>\r\n <nobr>To: <input type=\"text\" id=\"dto\" name=\"dto\" value=\"<?php echo esc_attr($_GET[\"dto\"]); ?>\" /> &nbsp; &nbsp; &nbsp; </nobr>\r\n <nobr>Item: <select id=\"cal\" name=\"cal\">\r\n          <option value=\"0\">[All Items]</option>\r\n   <?php\r\n    $myrows = $wpdb->get_results( \"SELECT * FROM \".$wpdb->prefix.$this->table_items );                                                                     \r\n    foreach ($myrows as $item)  \r\n         echo '<option value=\"'.$item->id.'\"'.(intval($item->id)==intval($this->item)?\" selected\":\"\").'>'.$item->form_name.'</option>'; \r\n   ?>\r\n    </select></nobr>\r\n <nobr><span class=\"submit\"><input type=\"submit\" name=\"ds\" value=\"Filter\" /></span> &nbsp; &nbsp; &nbsp; \r\n <span class=\"submit\"><input type=\"submit\" name=\"<?php echo $this->prefix; ?>_csv\" value=\"Export to CSV\" /></span></nobr>\r\n</form>\r\n\r\n<br />\r\n                             \r\n<?php\r\n\r\n\r\necho paginate_links(  array(\r\n    'base'         => 'admin.php?page='.$this->menu_parameter.'&cal='.$this->item.'&list=1%_%&dfrom='.urlencode($_GET[\"dfrom\"]).'&dto='.urlencode($_GET[\"dto\"]).'&search='.urlencode($_GET[\"search\"]),\r\n    'format'       => '&p=%#%',\r\n    'total'        => $total_pages,\r\n    'current'      => $current_page,\r\n    'show_all'     => False,\r\n    'end_size'     => 1,\r\n    'mid_size'     => 2,\r\n    'prev_next'    => True,\r\n    'prev_text'    => __('&laquo; Previous'),\r\n    'next_text'    => __('Next &raquo;'),\r\n    'type'         => 'plain',\r\n    'add_args'     => False\r\n    ) );\r\n\r\n?>\r\n\r\n<div id=\"dex_printable_contents\">\r\n<table class=\"wp-list-table widefat fixed pages\" cellspacing=\"0\">\r\n\t<thead>\r\n\t<tr>\r\n\t  <th style=\"padding-left:7px;font-weight:bold;\">Date</th>\r\n\t  <th style=\"padding-left:7px;font-weight:bold;\">Email</th>\r\n\t  <th style=\"padding-left:7px;font-weight:bold;\">Message</th>\r\n\t  <th style=\"padding-left:7px;font-weight:bold;\"  class=\"cpnopr\">Options</th>\t\r\n\t</tr>\r\n\t</thead>\r\n\t<tbody id=\"the-list\">\r\n\t <?php for ($i=($current_page-1)*$records_per_page; $i<$current_page*$records_per_page; $i++) if (isset($events[$i])) { ?>\r\n\t  <tr class='<?php if (!($i%2)) { ?>alternate <?php } ?>author-self status-draft format-default iedit' valign=\"top\">\r\n\t\t<td><?php echo substr($events[$i]->time,0,16); ?></td>\r\n\t\t<td><?php echo $events[$i]->notifyto; ?></td>\r\n\t\t<td><?php \r\n\t\t       \r\n\t\t        $data = $events[$i]->data;\t\t        \r\n\t\t        $posted_data = unserialize($events[$i]->posted_data);\t\t        \r\n\t\t        foreach ($posted_data as $item => $value)\r\n\t\t            if (strpos($item,\"_url\") && $value != '')\t\t         \r\n\t\t            {\r\n\t\t                $data = str_replace ($posted_data[str_replace(\"_url\",\"\",$item)],'<a href=\"'.$value.'\" target=\"_blank\">'.$posted_data[str_replace(\"_url\",\"\",$item)].'</a><br />',$data);  \t\t                \r\n\t\t            }    \r\n\t\t        echo str_replace(\"\\n\",\"<br />\", str_replace('<','&lt;',$data) ); \r\n\t\t    ?></td>\r\n\t\t<td class=\"cpnopr\">\r\n\t\t  <input type=\"button\" name=\"caldelete_<?php echo $events[$i]->id; ?>\" value=\"Delete\" onclick=\"cp_deleteMessageItem(<?php echo $events[$i]->id; ?>);\" />                             \r\n\t\t</td>\r\n      </tr>\r\n     <?php } ?>\r\n\t</tbody>\r\n</table>\r\n</div>\r\n\r\n<p class=\"submit\"><input type=\"button\" name=\"pbutton\" value=\"Print\" onclick=\"do_dexapp_print();\" /></p>\r\n\r\n</div>\r\n\r\n<?php if ($this->item) { ?>\r\n<div id=\"normal-sortables\" class=\"meta-box-sortables\">\r\n\r\n <div id=\"metabox_basic_settings\" class=\"postbox\" >\r\n  <h3 class='hndle' style=\"padding:5px;\"><span>Import CSV File</span></h3>\r\n  <div class=\"inside\">\r\n  \r\n   <form name=\"CPImportForm\" action=\"admin.php?page=CP_Polls&cal=<?php echo $this->item; ?>&list=1&import=1\" method=\"post\" enctype=\"multipart/form-data\">\r\n   <input type=\"file\" name=\"importfile\" />\r\n   <input type=\"submit\" name=\"pbuttonimport\" value=\"Import\"/>\r\n   <p>Instructions: Comma separated CSV file. One record per line, one field per column. <strong>Don't use a header row with the field names</strong>.</p>\r\n   <p>The first 3 columns into the CSV file are the <strong>time, IP address and email address</strong>, if you don't have this information then leave the first three columns empty. \r\n      After those initial columns the fields (columns) must appear in the same order than in the form.</p>\r\n   <p>Sample format for the CSV file:</p>\r\n   <pre>\r\n    <span style=\"color:#009900;\">2013-04-21 18:50:00, 192.168.1.12, john@sample.com,</span> \"john@sample.com\", \"sample subject\", \"sample message text\"\r\n    <span style=\"color:#009900;\">2013-05-16 20:49:00, 192.168.1.24, jane.smith@sample.com,</span> \"jane.smith@sample.com\", \"other subject\", \"other message\"\r\n   </pre>\r\n   </form>\r\n  </div>\r\n</div>\r\n<?php } ?>\r\n\r\n<script type=\"text/javascript\">\r\n function do_dexapp_print()\r\n {\r\n      w=window.open();\r\n      w.document.write(\"<style>.cpnopr{display:none;};table{border:2px solid black;width:100%;}th{border-bottom:2px solid black;text-align:left}td{padding-left:10px;border-bottom:1px solid black;}</style>\"+document.getElementById('dex_printable_contents').innerHTML);\r\n      w.print();\r\n      w.close();    \r\n }\r\n \r\n var $j = jQuery.noConflict();\r\n $j(function() {\r\n \t$j(\"#dfrom\").datepicker({     \t                \r\n                    dateFormat: 'yy-mm-dd'\r\n                 });\r\n \t$j(\"#dto\").datepicker({     \t                \r\n                    dateFormat: 'yy-mm-dd'\r\n                 });\r\n });\r\n \r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"], "fixing_code": ["<?php\r\n\r\nif ( !is_admin() )\r\n{\r\n    echo 'Direct access not allowed.';\r\n    exit;\r\n}\r\n\r\n$this->item = intval($_GET[\"cal\"]);\r\n\r\nglobal $wpdb;\r\n\r\n$message = \"\";\r\n\r\nif (isset($_GET['lu']) && $_GET['lu'] != '')\r\n{\r\n    $wpdb->query('UPDATE `'.$wpdb->prefix.$this->table_messages.'` SET paid='.esc_sql($_GET[\"status\"]).' WHERE id='.intval($_GET['lu']));           \r\n    $message = \"Item updated\";        \r\n}\r\nelse if (isset($_GET['ld']) && $_GET['ld'] != '')\r\n{\r\n    $wpdb->query('DELETE FROM `'.$wpdb->prefix.$this->table_messages.'` WHERE id='.$_GET['ld']);       \r\n    $message = \"Item deleted\";\r\n}\r\nelse if (isset($_GET['import']) && $_GET['import'] == '1')\r\n{    \r\n    $form = json_decode($this->cleanJSON($this->get_option('form_structure', CP_POLLS_DEFAULT_form_structure)));\r\n    $form = $form[0];    \r\n    \r\n    if (($handle = fopen($_FILES['importfile']['tmp_name'], \"r\")) !== FALSE) {\r\n        while (($data = fgetcsv($handle, 1000, \",\")) !== FALSE) {\r\n            $rowdata = array(); \r\n            $formatted_data = '';\r\n            $num = count($data);\r\n            $row++;\r\n            \r\n            $time  = $data[0];\r\n            $ip    = $data[1];\r\n            $email = $data[2];\r\n            \r\n            for ($c=3; $c < $num; $c++)\r\n                if (isset($form[$c-3]))\r\n                {\r\n                    $rowdata[$form[$c-3]->name] = $data[$c]; //echo $data[$c] . \"<br />\\n\";\r\n                    $formatted_data .= $form[$c-3]->title. \": \". $data[$c] . \"\\n\\n\";\r\n                }                    \r\n            $wpdb->insert($wpdb->prefix.$this->table_messages, array( \r\n                                   'formid' => $this->item,\r\n                                   'time' => $time,\r\n                                   'ipaddr' => $ip,\r\n                                   'notifyto' => $email,\r\n                                   'data' => $formatted_data,\r\n                                   'posted_data' => serialize($rowdata),\r\n                             ));            \r\n        }\r\n        fclose($handle);\r\n    }    \r\n    $message = \"CSV File Imported.\";\r\n}\r\n\r\nif ($this->item != 0)\r\n    $myform = $wpdb->get_results( 'SELECT * FROM '.$wpdb->prefix.$this->table_items .' WHERE id='.$this->item);\r\n\r\n\r\n$current_page = intval($_GET[\"p\"]);\r\nif (!$current_page) $current_page = 1;\r\n$records_per_page = 50;                                                                                  \r\n\r\n$cond = '';\r\nif ($_GET[\"search\"] != '') $cond .= \" AND (data like '%\".esc_sql($_GET[\"search\"]).\"%' OR posted_data LIKE '%\".esc_sql($_GET[\"search\"]).\"%')\";\r\nif ($_GET[\"dfrom\"] != '') $cond .= \" AND (`time` >= '\".esc_sql($_GET[\"dfrom\"]).\"')\";\r\nif ($_GET[\"dto\"] != '') $cond .= \" AND (`time` <= '\".esc_sql($_GET[\"dto\"]).\" 23:59:59')\";\r\nif ($this->item != 0) $cond .= \" AND formid=\".$this->item;\r\n\r\n$events = $wpdb->get_results( \"SELECT * FROM \".$wpdb->prefix.$this->table_messages.\" WHERE 1=1 \".$cond.\" ORDER BY `time` DESC\" );\r\n$total_pages = ceil(count($events) / $records_per_page);\r\n\r\nif ($message) echo \"<div id='setting-error-settings_updated' class='updated settings-error'><p><strong>\".$message.\"</strong></p></div>\";\r\n\r\n\r\n?>\r\n<script type=\"text/javascript\">\r\n function cp_updateMessageItem(id,status)\r\n {    \r\n    document.location = 'options-general.php?page=<?php echo $this->menu_parameter; ?>&cal=<?php echo $_GET[\"cal\"]; ?>&list=1&status='+status+'&lu='+id+'&r='+Math.random( );   \r\n } \r\n function cp_deleteMessageItem(id)\r\n {\r\n    if (confirm('Are you sure that you want to delete this item?'))\r\n    {        \r\n        document.location = 'options-general.php?page=<?php echo $this->menu_parameter; ?>&cal=<?php echo $_GET[\"cal\"]; ?>&list=1&ld='+id+'&r='+Math.random();\r\n    }\r\n }\r\n</script>\r\n<div class=\"wrap\">\r\n<h2><?php echo $this->plugin_name; ?> - Message List</h2>\r\n\r\n<input type=\"button\" name=\"backbtn\" value=\"Back to items list...\" onclick=\"document.location='admin.php?page=<?php echo $this->menu_parameter; ?>';\">\r\n\r\n\r\n<div id=\"normal-sortables\" class=\"meta-box-sortables\">\r\n <hr />\r\n <h3>This message list is from: <?php if ($this->item != 0) echo $myform[0]->form_name; else echo 'All forms'; ?></h3>\r\n</div>\r\n\r\n\r\n<form action=\"admin.php\" method=\"get\">\r\n <input type=\"hidden\" name=\"page\" value=\"<?php echo $this->menu_parameter; ?>\" />\r\n <input type=\"hidden\" name=\"cal\" value=\"<?php echo $this->item; ?>\" />\r\n <input type=\"hidden\" name=\"list\" value=\"1\" />\r\n <nobr>Search for: <input type=\"text\" name=\"search\" value=\"<?php echo esc_attr($_GET[\"search\"]); ?>\" /> &nbsp; &nbsp; &nbsp;</nobr> \r\n <nobr>From: <input type=\"text\" id=\"dfrom\" name=\"dfrom\" value=\"<?php echo esc_attr($_GET[\"dfrom\"]); ?>\" /> &nbsp; &nbsp; &nbsp; </nobr>\r\n <nobr>To: <input type=\"text\" id=\"dto\" name=\"dto\" value=\"<?php echo esc_attr($_GET[\"dto\"]); ?>\" /> &nbsp; &nbsp; &nbsp; </nobr>\r\n <nobr>Item: <select id=\"cal\" name=\"cal\">\r\n          <option value=\"0\">[All Items]</option>\r\n   <?php\r\n    $myrows = $wpdb->get_results( \"SELECT * FROM \".$wpdb->prefix.$this->table_items );                                                                     \r\n    foreach ($myrows as $item)  \r\n         echo '<option value=\"'.$item->id.'\"'.(intval($item->id)==intval($this->item)?\" selected\":\"\").'>'.$item->form_name.'</option>'; \r\n   ?>\r\n    </select></nobr>\r\n <nobr><span class=\"submit\"><input type=\"submit\" name=\"ds\" value=\"Filter\" /></span> &nbsp; &nbsp; &nbsp; \r\n <span class=\"submit\"><input type=\"submit\" name=\"<?php echo $this->prefix; ?>_csv\" value=\"Export to CSV\" /></span></nobr>\r\n</form>\r\n\r\n<br />\r\n                             \r\n<?php\r\n\r\n\r\necho paginate_links(  array(\r\n    'base'         => 'admin.php?page='.$this->menu_parameter.'&cal='.$this->item.'&list=1%_%&dfrom='.urlencode($_GET[\"dfrom\"]).'&dto='.urlencode($_GET[\"dto\"]).'&search='.urlencode($_GET[\"search\"]),\r\n    'format'       => '&p=%#%',\r\n    'total'        => $total_pages,\r\n    'current'      => $current_page,\r\n    'show_all'     => False,\r\n    'end_size'     => 1,\r\n    'mid_size'     => 2,\r\n    'prev_next'    => True,\r\n    'prev_text'    => __('&laquo; Previous'),\r\n    'next_text'    => __('Next &raquo;'),\r\n    'type'         => 'plain',\r\n    'add_args'     => False\r\n    ) );\r\n\r\n?>\r\n\r\n<div id=\"dex_printable_contents\">\r\n<table class=\"wp-list-table widefat fixed pages\" cellspacing=\"0\">\r\n\t<thead>\r\n\t<tr>\r\n\t  <th style=\"padding-left:7px;font-weight:bold;\">Date</th>\r\n\t  <th style=\"padding-left:7px;font-weight:bold;\">Email</th>\r\n\t  <th style=\"padding-left:7px;font-weight:bold;\">Message</th>\r\n\t  <th style=\"padding-left:7px;font-weight:bold;\"  class=\"cpnopr\">Options</th>\t\r\n\t</tr>\r\n\t</thead>\r\n\t<tbody id=\"the-list\">\r\n\t <?php for ($i=($current_page-1)*$records_per_page; $i<$current_page*$records_per_page; $i++) if (isset($events[$i])) { ?>\r\n\t  <tr class='<?php if (!($i%2)) { ?>alternate <?php } ?>author-self status-draft format-default iedit' valign=\"top\">\r\n\t\t<td><?php echo substr($events[$i]->time,0,16); ?></td>\r\n\t\t<td><?php echo $events[$i]->notifyto; ?></td>\r\n\t\t<td><?php \r\n\t\t       \r\n\t\t        $data = $events[$i]->data;\t\t        \r\n\t\t        $posted_data = unserialize($events[$i]->posted_data);\t\t        \r\n\t\t        foreach ($posted_data as $item => $value)\r\n\t\t            if (strpos($item,\"_url\") && $value != '')\t\t         \r\n\t\t            {\r\n\t\t                $data = str_replace ($posted_data[str_replace(\"_url\",\"\",$item)],'<a href=\"'.$value.'\" target=\"_blank\">'.$posted_data[str_replace(\"_url\",\"\",$item)].'</a><br />',$data);  \t\t                \r\n\t\t            }    \r\n\t\t        echo str_replace(\"\\n\",\"<br />\", str_replace('<','&lt;',$data) ); \r\n\t\t    ?></td>\r\n\t\t<td class=\"cpnopr\">\r\n\t\t  <input type=\"button\" name=\"caldelete_<?php echo $events[$i]->id; ?>\" value=\"Delete\" onclick=\"cp_deleteMessageItem(<?php echo $events[$i]->id; ?>);\" />                             \r\n\t\t</td>\r\n      </tr>\r\n     <?php } ?>\r\n\t</tbody>\r\n</table>\r\n</div>\r\n\r\n<p class=\"submit\"><input type=\"button\" name=\"pbutton\" value=\"Print\" onclick=\"do_dexapp_print();\" /></p>\r\n\r\n</div>\r\n\r\n<?php if ($this->item) { ?>\r\n<div id=\"normal-sortables\" class=\"meta-box-sortables\">\r\n\r\n <div id=\"metabox_basic_settings\" class=\"postbox\" >\r\n  <h3 class='hndle' style=\"padding:5px;\"><span>Import CSV File</span></h3>\r\n  <div class=\"inside\">\r\n  \r\n   <form name=\"CPImportForm\" action=\"admin.php?page=CP_Polls&cal=<?php echo $this->item; ?>&list=1&import=1\" method=\"post\" enctype=\"multipart/form-data\">\r\n   <input type=\"file\" name=\"importfile\" />\r\n   <input type=\"submit\" name=\"pbuttonimport\" value=\"Import\"/>\r\n   <p>Instructions: Comma separated CSV file. One record per line, one field per column. <strong>Don't use a header row with the field names</strong>.</p>\r\n   <p>The first 3 columns into the CSV file are the <strong>time, IP address and email address</strong>, if you don't have this information then leave the first three columns empty. \r\n      After those initial columns the fields (columns) must appear in the same order than in the form.</p>\r\n   <p>Sample format for the CSV file:</p>\r\n   <pre>\r\n    <span style=\"color:#009900;\">2013-04-21 18:50:00, 192.168.1.12, john@sample.com,</span> \"john@sample.com\", \"sample subject\", \"sample message text\"\r\n    <span style=\"color:#009900;\">2013-05-16 20:49:00, 192.168.1.24, jane.smith@sample.com,</span> \"jane.smith@sample.com\", \"other subject\", \"other message\"\r\n   </pre>\r\n   </form>\r\n  </div>\r\n</div>\r\n<?php } ?>\r\n\r\n<script type=\"text/javascript\">\r\n function do_dexapp_print()\r\n {\r\n      w=window.open();\r\n      w.document.write(\"<style>.cpnopr{display:none;};table{border:2px solid black;width:100%;}th{border-bottom:2px solid black;text-align:left}td{padding-left:10px;border-bottom:1px solid black;}</style>\"+document.getElementById('dex_printable_contents').innerHTML);\r\n      w.print();\r\n      w.close();    \r\n }\r\n \r\n var $j = jQuery.noConflict();\r\n $j(function() {\r\n \t$j(\"#dfrom\").datepicker({     \t                \r\n                    dateFormat: 'yy-mm-dd'\r\n                 });\r\n \t$j(\"#dto\").datepicker({     \t                \r\n                    dateFormat: 'yy-mm-dd'\r\n                 });\r\n });\r\n \r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"], "filenames": ["cp-admin-int-message-list.inc.php"], "buggy_code_start_loc": [17], "buggy_code_end_loc": [18], "fixing_code_start_loc": [17], "fixing_code_end_loc": [18], "type": "CWE-89", "message": "A vulnerability has been found in codepeople cp-polls Plugin 1.0.1 and classified as critical. This vulnerability affects unknown code of the file cp-admin-int-message-list.inc.php. The manipulation of the argument lu leads to sql injection. The attack can be initiated remotely. Upgrading to version 1.0.2 is able to address this issue. The name of the patch is 6d7168cbf12d1c183bacc5cd5678f6f5b0d518d2. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-222268.", "other": {"cve": {"id": "CVE-2014-125091", "sourceIdentifier": "cna@vuldb.com", "published": "2023-03-04T22:15:09.510", "lastModified": "2023-03-09T20:48:50.627", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability has been found in codepeople cp-polls Plugin 1.0.1 and classified as critical. This vulnerability affects unknown code of the file cp-admin-int-message-list.inc.php. The manipulation of the argument lu leads to sql injection. The attack can be initiated remotely. Upgrading to version 1.0.2 is able to address this issue. The name of the patch is 6d7168cbf12d1c183bacc5cd5678f6f5b0d518d2. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-222268."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 4.7, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.2, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:M/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "MULTIPLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 6.4, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:codepeople:polls_cp:1.0.1:*:*:*:*:wordpress:*:*", "matchCriteriaId": "AE711840-C2F1-4212-B36A-D531277DAF25"}]}]}], "references": [{"url": "https://github.com/wp-plugins/cp-polls/commit/6d7168cbf12d1c183bacc5cd5678f6f5b0d518d2", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://github.com/wp-plugins/cp-polls/releases/tag/1.0.2", "source": "cna@vuldb.com", "tags": ["Release Notes"]}, {"url": "https://vuldb.com/?ctiid.222268", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory", "VDB Entry"]}, {"url": "https://vuldb.com/?id.222268", "source": "cna@vuldb.com", "tags": ["Third Party Advisory", "VDB Entry"]}]}, "github_commit_url": "https://github.com/wp-plugins/cp-polls/commit/6d7168cbf12d1c183bacc5cd5678f6f5b0d518d2"}}