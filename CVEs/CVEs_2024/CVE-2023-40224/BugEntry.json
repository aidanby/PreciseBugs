{"buggy_code": ["<div class=\"events <?php if (!$ajax) echo 'index'; ?>\">\n    <h2><?php echo __('Events');?></h2>\n    <div class=\"pagination\">\n        <ul>\n        <?php\n            $pagination = $this->Paginator->prev('&laquo; ' . __('previous'), array('tag' => 'li', 'escape' => false), null, array('tag' => 'li', 'class' => 'prev disabled', 'escape' => false, 'disabledTag' => 'span'));\n            $pagination .= $this->Paginator->numbers(array('modulus' => 20, 'separator' => '', 'tag' => 'li', 'currentClass' => 'active', 'currentTag' => 'span'));\n            $pagination .= $this->Paginator->next(__('next') . ' &raquo;', array('tag' => 'li', 'escape' => false), null, array('tag' => 'li', 'class' => 'next disabled', 'escape' => false, 'disabledTag' => 'span'));\n            echo $pagination;\n        ?>\n        </ul>\n    </div>\n    <?php\n        $searchScopes = [\n            'searcheventinfo' => __('Event info'),\n            'searchall' => __('All fields'),\n            'searcheventid' => __('ID / UUID'),\n            'searchtags' => __('Tag'),\n        ];\n        $searchKey = 'searcheventinfo';\n\n        $filterParamsString = [];\n        foreach ($passedArgsArray as $k => $v) {\n            if (isset($searchScopes[\"search$k\"])) {\n                $searchKey = \"search$k\";\n            }\n\n            $filterParamsString[] = sprintf(\n                '%s: %s',\n                h(ucfirst($k)),\n                h(is_array($v) ? http_build_query($v) : $v)\n            );\n        }\n        $filterParamsString = implode(' & ', $filterParamsString);\n\n        $columnsDescription = [\n            'owner_org' => __('Owner org'),\n            'attribute_count' => __('Attribute count'),\n            'creator_user' => __('Creator user'),\n            'tags' => __('Tags'),\n            'clusters' => __('Clusters'),\n            'correlations' => __('Correlations'),\n            'sightings' => __('Sightings'),\n            'proposals' => __('Proposals'),\n            'discussion' => __('Posts'),\n            'report_count' => __('Report count'),\n            'timestamp' => __('Last modified at'),\n            'publish_timestamp' => __('Published at')\n        ];\n\n        $columnsMenu = [];\n        foreach ($possibleColumns as $possibleColumn) {\n            $html = in_array($possibleColumn, $columns, true) ? '<i class=\"fa fa-check\"></i> ' : '<i class=\"fa fa-check\" style=\"visibility: hidden\"></i> ';\n            $html .= $columnsDescription[$possibleColumn];\n            $columnsMenu[] = [\n                'html' => $html,\n                'onClick' => 'eventIndexColumnsToggle',\n                'onClickParams' => [$possibleColumn],\n            ];\n        }\n\n        $data = array(\n            'children' => array(\n                array(\n                    'children' => array(\n                        array(\n                            'id' => 'create-button',\n                            'title' => __('Modify filters'),\n                            'fa-icon' => 'search',\n                            'onClick' => 'getPopup',\n                            'onClickParams' => array($urlparams, 'events', 'filterEventIndex')\n                        )\n                    )\n                ),\n                array(\n                    'children' => array(\n                        array(\n                            'id' => 'multi-delete-button',\n                            'title' => __('Delete selected events'),\n                            'fa-icon' => 'trash',\n                            'class' => 'hidden mass-delete',\n                            'onClick' => 'multiSelectDeleteEvents'\n                        ),\n                        array(\n                            'id' => 'multi-export-button',\n                            'title' => __('Export selected events'),\n                            'fa-icon' => 'file-export',\n                            'class' => 'hidden mass-export',\n                            'onClick' => 'multiSelectExportEvents'\n                        )\n                    )\n                ),\n                array(\n                    'children' => array(\n                        array(\n                            'requirement' => count($passedArgsArray) > 0,\n                            'html' => sprintf(\n                                '<span class=\"bold\">%s</span>: %s',\n                                __('Filters'),\n                                $filterParamsString\n                            )\n                        ),\n                        array(\n                            'requirement' => count($passedArgsArray) > 0,\n                            'url' => $baseurl . '/events/index',\n                            'title' => __('Remove filters'),\n                            'fa-icon' => 'times'\n                        )\n                    )\n                ),\n                array(\n                    'children' => array(\n                        array(\n                            'title' => __('My events only'),\n                            'text' => __('My Events'),\n                            'data' => array(\n                                'searchemail' => h($me['email'])\n                            ),\n                            'class' => 'searchFilterButton',\n                            'active' => isset($passedArgsArray['email']) && $passedArgsArray['email'] === $me['email']\n                        ),\n                        array(\n                            'title' => __('My organisation\\'s events only'),\n                            'text' => __('Org Events'),\n                            'data' => array(\n                                'searchorg' => h($me['org_id'])\n                            ),\n                            'class' => 'searchFilterButton',\n                            'active' => isset($passedArgsArray['org']) && $passedArgsArray['org'] === $me['org_id']\n                        )\n                    )\n                ),\n                array(\n                    'children' => array(\n                        array(\n                            'id' => 'simple_filter',\n                            'type' => 'group',\n                            'class' => 'last',\n                            'title' => __('Choose columns to show'),\n                            'fa-icon' => 'columns',\n                            'children' => $columnsMenu,\n                        ),\n                    ),\n                ),\n                array(\n                    'type' => 'search',\n                    'button' => __('Filter'),\n                    'placeholder' => __('Enter value to search'),\n                    'data' => '',\n                    'searchScopes' => $searchScopes,\n                    'searchKey' => $searchKey,\n                )\n            )\n        );\n        if (!$ajax) {\n            echo $this->element('/genericElements/ListTopBar/scaffold', array('data' => $data));\n        }\n        echo $this->element('Events/eventIndexTable');\n    ?>\n    <p>\n    <?php\n    echo $this->Paginator->counter(array(\n    'format' => __('Page {:page} of {:pages}, showing {:current} records out of {:count} total, starting on record {:start}, ending on {:end}')\n    ));\n    ?>\n    </p>\n    <div class=\"pagination\">\n        <ul>\n        <?= $pagination ?>\n        </ul>\n    </div>\n</div>\n<script>\n    var passedArgsArray = <?php echo $passedArgs; ?>;\n    $(function() {\n        $('.searchFilterButton').click(function() {\n            runIndexFilter(this);\n        });\n        $('#quickFilterScopeSelector').change(function() {\n            $('#quickFilterField').data('searchkey', this.value)\n        });\n        $('#quickFilterButton').click(function() {\n            runIndexQuickFilter();\n        });\n    });\n</script>\n<?php\necho $this->element('genericElements/assetLoader', [\n    'css' => ['vis', 'distribution-graph'],\n    'js' => ['vis', 'jquery-ui.min', 'network-distribution-graph'],\n]);\nif (!$ajax) {\n    echo $this->element('/genericElements/SideMenu/side_menu', array('menuList' => 'event-collection', 'menuItem' => 'index'));\n}\n"], "fixing_code": ["<div class=\"events <?php if (!$ajax) echo 'index'; ?>\">\n    <h2><?php echo __('Events');?></h2>\n    <div class=\"pagination\">\n        <ul>\n        <?php\n            $pagination = $this->Paginator->prev('&laquo; ' . __('previous'), array('tag' => 'li', 'escape' => false), null, array('tag' => 'li', 'class' => 'prev disabled', 'escape' => false, 'disabledTag' => 'span'));\n            $pagination .= $this->Paginator->numbers(array('modulus' => 20, 'separator' => '', 'tag' => 'li', 'currentClass' => 'active', 'currentTag' => 'span'));\n            $pagination .= $this->Paginator->next(__('next') . ' &raquo;', array('tag' => 'li', 'escape' => false), null, array('tag' => 'li', 'class' => 'next disabled', 'escape' => false, 'disabledTag' => 'span'));\n            echo $pagination;\n        ?>\n        </ul>\n    </div>\n    <?php\n        $searchScopes = [\n            'searcheventinfo' => __('Event info'),\n            'searchall' => __('All fields'),\n            'searcheventid' => __('ID / UUID'),\n            'searchtags' => __('Tag'),\n        ];\n        $searchKey = 'searcheventinfo';\n\n        $filterParamsString = [];\n        foreach ($passedArgsArray as $k => $v) {\n            if (isset($searchScopes[\"search$k\"])) {\n                $searchKey = \"search$k\";\n            }\n\n            $filterParamsString[] = sprintf(\n                '%s: %s',\n                h(ucfirst($k)),\n                h(is_array($v) ? http_build_query($v) : $v)\n            );\n        }\n        $filterParamsString = implode(' & ', $filterParamsString);\n\n        $columnsDescription = [\n            'owner_org' => __('Owner org'),\n            'attribute_count' => __('Attribute count'),\n            'creator_user' => __('Creator user'),\n            'tags' => __('Tags'),\n            'clusters' => __('Clusters'),\n            'correlations' => __('Correlations'),\n            'sightings' => __('Sightings'),\n            'proposals' => __('Proposals'),\n            'discussion' => __('Posts'),\n            'report_count' => __('Report count'),\n            'timestamp' => __('Last modified at'),\n            'publish_timestamp' => __('Published at')\n        ];\n\n        $columnsMenu = [];\n        foreach ($possibleColumns as $possibleColumn) {\n            $html = in_array($possibleColumn, $columns, true) ? '<i class=\"fa fa-check\"></i> ' : '<i class=\"fa fa-check\" style=\"visibility: hidden\"></i> ';\n            $html .= $columnsDescription[$possibleColumn];\n            $columnsMenu[] = [\n                'html' => $html,\n                'onClick' => 'eventIndexColumnsToggle',\n                'onClickParams' => [$possibleColumn],\n            ];\n        }\n\n        $data = array(\n            'children' => array(\n                array(\n                    'children' => array(\n                        array(\n                            'id' => 'create-button',\n                            'title' => __('Modify filters'),\n                            'fa-icon' => 'search',\n                            'onClick' => 'getPopup',\n                            'onClickParams' => array(h($urlparams), 'events', 'filterEventIndex')\n                        )\n                    )\n                ),\n                array(\n                    'children' => array(\n                        array(\n                            'id' => 'multi-delete-button',\n                            'title' => __('Delete selected events'),\n                            'fa-icon' => 'trash',\n                            'class' => 'hidden mass-delete',\n                            'onClick' => 'multiSelectDeleteEvents'\n                        ),\n                        array(\n                            'id' => 'multi-export-button',\n                            'title' => __('Export selected events'),\n                            'fa-icon' => 'file-export',\n                            'class' => 'hidden mass-export',\n                            'onClick' => 'multiSelectExportEvents'\n                        )\n                    )\n                ),\n                array(\n                    'children' => array(\n                        array(\n                            'requirement' => count($passedArgsArray) > 0,\n                            'html' => sprintf(\n                                '<span class=\"bold\">%s</span>: %s',\n                                __('Filters'),\n                                $filterParamsString\n                            )\n                        ),\n                        array(\n                            'requirement' => count($passedArgsArray) > 0,\n                            'url' => $baseurl . '/events/index',\n                            'title' => __('Remove filters'),\n                            'fa-icon' => 'times'\n                        )\n                    )\n                ),\n                array(\n                    'children' => array(\n                        array(\n                            'title' => __('My events only'),\n                            'text' => __('My Events'),\n                            'data' => array(\n                                'searchemail' => h($me['email'])\n                            ),\n                            'class' => 'searchFilterButton',\n                            'active' => isset($passedArgsArray['email']) && $passedArgsArray['email'] === $me['email']\n                        ),\n                        array(\n                            'title' => __('My organisation\\'s events only'),\n                            'text' => __('Org Events'),\n                            'data' => array(\n                                'searchorg' => h($me['org_id'])\n                            ),\n                            'class' => 'searchFilterButton',\n                            'active' => isset($passedArgsArray['org']) && $passedArgsArray['org'] === $me['org_id']\n                        )\n                    )\n                ),\n                array(\n                    'children' => array(\n                        array(\n                            'id' => 'simple_filter',\n                            'type' => 'group',\n                            'class' => 'last',\n                            'title' => __('Choose columns to show'),\n                            'fa-icon' => 'columns',\n                            'children' => $columnsMenu,\n                        ),\n                    ),\n                ),\n                array(\n                    'type' => 'search',\n                    'button' => __('Filter'),\n                    'placeholder' => __('Enter value to search'),\n                    'data' => '',\n                    'searchScopes' => $searchScopes,\n                    'searchKey' => $searchKey,\n                )\n            )\n        );\n        if (!$ajax) {\n            echo $this->element('/genericElements/ListTopBar/scaffold', array('data' => $data));\n        }\n        echo $this->element('Events/eventIndexTable');\n    ?>\n    <p>\n    <?php\n    echo $this->Paginator->counter(array(\n    'format' => __('Page {:page} of {:pages}, showing {:current} records out of {:count} total, starting on record {:start}, ending on {:end}')\n    ));\n    ?>\n    </p>\n    <div class=\"pagination\">\n        <ul>\n        <?= $pagination ?>\n        </ul>\n    </div>\n</div>\n<script>\n    var passedArgsArray = <?php echo $passedArgs; ?>;\n    $(function() {\n        $('.searchFilterButton').click(function() {\n            runIndexFilter(this);\n        });\n        $('#quickFilterScopeSelector').change(function() {\n            $('#quickFilterField').data('searchkey', this.value)\n        });\n        $('#quickFilterButton').click(function() {\n            runIndexQuickFilter();\n        });\n    });\n</script>\n<?php\necho $this->element('genericElements/assetLoader', [\n    'css' => ['vis', 'distribution-graph'],\n    'js' => ['vis', 'jquery-ui.min', 'network-distribution-graph'],\n]);\nif (!$ajax) {\n    echo $this->element('/genericElements/SideMenu/side_menu', array('menuList' => 'event-collection', 'menuItem' => 'index'));\n}\n"], "filenames": ["app/View/Events/index.ctp"], "buggy_code_start_loc": [71], "buggy_code_end_loc": [72], "fixing_code_start_loc": [71], "fixing_code_end_loc": [72], "type": "CWE-79", "message": "MISP 2.4.174 allows XSS in app/View/Events/index.ctp.", "other": {"cve": {"id": "CVE-2023-40224", "sourceIdentifier": "cve@mitre.org", "published": "2023-08-10T20:15:11.010", "lastModified": "2023-11-17T05:15:12.387", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "MISP 2.4.174 allows XSS in app/View/Events/index.ctp."}, {"lang": "es", "value": "La versi\u00f3n 2.4.174 de MISP permite un XSS en app/View/Events/index.ctp."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:misp:misp:2.4.174:*:*:*:*:*:*:*", "matchCriteriaId": "41B6B5F0-5F19-48A8-BD25-08E4D3FD7665"}]}]}], "references": [{"url": "https://github.com/MISP/MISP/commit/0274f8b6332e82317c9529b583d03897adf5883e", "source": "cve@mitre.org", "tags": ["Patch"]}]}, "github_commit_url": "https://github.com/MISP/MISP/commit/0274f8b6332e82317c9529b583d03897adf5883e"}}