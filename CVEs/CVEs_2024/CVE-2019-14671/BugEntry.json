{"buggy_code": ["<?php\n/**\n * NewFinTSJobHandler.php\n * Copyright (c) 2018 https://github.com/bnw\n *\n * This file is part of Firefly III.\n *\n * Firefly III is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Firefly III is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Firefly III. If not, see <http://www.gnu.org/licenses/>.\n */\ndeclare(strict_types=1);\n\n\nnamespace FireflyIII\\Support\\Import\\JobConfiguration\\FinTS;\n\n\nuse FireflyIII\\Import\\JobConfiguration\\FinTSConfigurationSteps;\nuse FireflyIII\\Models\\ImportJob;\nuse FireflyIII\\Repositories\\ImportJob\\ImportJobRepositoryInterface;\nuse FireflyIII\\Support\\FinTS\\FinTS;\nuse Illuminate\\Support\\Facades\\Crypt;\nuse Illuminate\\Support\\MessageBag;\n\n/**\n *\n * Class NewFinTSJobHandler\n */\nclass NewFinTSJobHandler implements FinTSConfigurationInterface\n{\n    /** @var ImportJob */\n    private $importJob;\n    /** @var ImportJobRepositoryInterface */\n    private $repository;\n\n    /**\n     * Store data associated with current stage.\n     *\n     * @param array $data\n     *\n     * @return MessageBag\n     */\n    public function configureJob(array $data): MessageBag\n    {\n        $config = [];\n\n        $config['fints_url']       = trim($data['fints_url'] ?? '');\n        $config['fints_port']      = (int)($data['fints_port'] ?? '');\n        $config['fints_bank_code'] = (string)($data['fints_bank_code'] ?? '');\n        $config['fints_username']  = (string)($data['fints_username'] ?? '');\n        $config['fints_password']  = (string)(Crypt::encrypt($data['fints_password']) ?? '');\n        $config['apply-rules']     = 1 === (int)$data['apply_rules'];\n\n        $this->repository->setConfiguration($this->importJob, $config);\n\n\n        $incomplete = false;\n        foreach ($config as $value) {\n            $incomplete = '' === $value or $incomplete;\n        }\n\n        if ($incomplete) {\n            return new MessageBag([trans('import.incomplete_fints_form')]);\n        }\n        $finTS = app(FinTS::class, ['config' => $this->importJob->configuration]);\n        if (true !== ($checkConnection = $finTS->checkConnection())) {\n            return new MessageBag([trans('import.fints_connection_failed', ['originalError' => $checkConnection])]);\n        }\n\n        $this->repository->setStage($this->importJob, FinTSConfigurationSteps::CHOOSE_ACCOUNT);\n\n        return new MessageBag();\n    }\n\n    /**\n     * Get the data necessary to show the configuration screen.\n     *\n     * @return array\n     */\n    public function getNextData(): array\n    {\n        $config = $this->importJob->configuration;\n\n        return [\n            'fints_url'       => $config['fints_url'] ?? '',\n            'fints_port'      => $config['fints_port'] ?? '443',\n            'fints_bank_code' => $config['fints_bank_code'] ?? '',\n            'fints_username'  => $config['fints_username'] ?? '',\n        ];\n    }\n\n    /**\n     * @param ImportJob $importJob\n     */\n    public function setImportJob(ImportJob $importJob): void\n    {\n        $this->importJob  = $importJob;\n        $this->repository = app(ImportJobRepositoryInterface::class);\n        $this->repository->setUser($importJob->user);\n    }\n\n}\n"], "fixing_code": ["<?php\n/**\n * NewFinTSJobHandler.php\n * Copyright (c) 2018 https://github.com/bnw\n *\n * This file is part of Firefly III.\n *\n * Firefly III is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Firefly III is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Firefly III. If not, see <http://www.gnu.org/licenses/>.\n */\ndeclare(strict_types=1);\n\n\nnamespace FireflyIII\\Support\\Import\\JobConfiguration\\FinTS;\n\n\nuse FireflyIII\\Import\\JobConfiguration\\FinTSConfigurationSteps;\nuse FireflyIII\\Models\\ImportJob;\nuse FireflyIII\\Repositories\\ImportJob\\ImportJobRepositoryInterface;\nuse FireflyIII\\Support\\FinTS\\FinTS;\nuse Illuminate\\Support\\Facades\\Crypt;\nuse Illuminate\\Support\\MessageBag;\n\n/**\n *\n * Class NewFinTSJobHandler\n */\nclass NewFinTSJobHandler implements FinTSConfigurationInterface\n{\n    /** @var ImportJob */\n    private $importJob;\n    /** @var ImportJobRepositoryInterface */\n    private $repository;\n\n    /**\n     * Store data associated with current stage.\n     *\n     * @param array $data\n     *\n     * @return MessageBag\n     */\n    public function configureJob(array $data): MessageBag\n    {\n        $config = [];\n\n        $config['fints_url']       = trim($data['fints_url'] ?? '');\n        $config['fints_port']      = (int)($data['fints_port'] ?? '');\n        $config['fints_bank_code'] = (string)($data['fints_bank_code'] ?? '');\n        $config['fints_username']  = (string)($data['fints_username'] ?? '');\n        $config['fints_password']  = (string)(Crypt::encrypt($data['fints_password']) ?? '');\n        $config['apply-rules']     = 1 === (int)$data['apply_rules'];\n\n        // sanitize FinTS URL.\n        $config['fints_url'] = $this->validURI($config['fints_url']) ? $config['fints_url'] : '';\n\n        $this->repository->setConfiguration($this->importJob, $config);\n\n\n        $incomplete = false;\n        foreach ($config as $value) {\n            $incomplete = '' === $value or $incomplete;\n        }\n\n        if ($incomplete) {\n            return new MessageBag([trans('import.incomplete_fints_form')]);\n        }\n        $finTS = app(FinTS::class, ['config' => $this->importJob->configuration]);\n        if (true !== ($checkConnection = $finTS->checkConnection())) {\n            return new MessageBag([trans('import.fints_connection_failed', ['originalError' => $checkConnection])]);\n        }\n\n        $this->repository->setStage($this->importJob, FinTSConfigurationSteps::CHOOSE_ACCOUNT);\n\n        return new MessageBag();\n    }\n\n    /**\n     * Get the data necessary to show the configuration screen.\n     *\n     * @return array\n     */\n    public function getNextData(): array\n    {\n        $config = $this->importJob->configuration;\n\n        return [\n            'fints_url'       => $config['fints_url'] ?? '',\n            'fints_port'      => $config['fints_port'] ?? '443',\n            'fints_bank_code' => $config['fints_bank_code'] ?? '',\n            'fints_username'  => $config['fints_username'] ?? '',\n        ];\n    }\n\n    /**\n     * @param ImportJob $importJob\n     */\n    public function setImportJob(ImportJob $importJob): void\n    {\n        $this->importJob  = $importJob;\n        $this->repository = app(ImportJobRepositoryInterface::class);\n        $this->repository->setUser($importJob->user);\n    }\n\n    /**\n     * @param string $fints_url\n     *\n     * @return bool\n     */\n    private function validURI(string $fintsUri): bool\n    {\n        $res = filter_var($fintsUri, FILTER_VALIDATE_URL);\n        if (false === $res) {\n            return false;\n        }\n        $scheme = parse_url($fintsUri, PHP_URL_SCHEME);\n\n        return 'https' === $scheme;\n    }\n\n\n}\n"], "filenames": ["app/Support/Import/JobConfiguration/FinTS/NewFinTSJobHandler.php"], "buggy_code_start_loc": [62], "buggy_code_end_loc": [110], "fixing_code_start_loc": [63], "fixing_code_end_loc": [131], "type": "CWE-20", "message": "Firefly III 4.7.17.3 is vulnerable to local file enumeration. An attacker can enumerate local files due to the lack of protocol scheme sanitization, such as for file:/// URLs. This is related to fints_url to import/job/configuration, and import/create/fints.", "other": {"cve": {"id": "CVE-2019-14671", "sourceIdentifier": "cve@mitre.org", "published": "2019-08-05T20:15:12.203", "lastModified": "2021-07-21T11:39:23.747", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Firefly III 4.7.17.3 is vulnerable to local file enumeration. An attacker can enumerate local files due to the lack of protocol scheme sanitization, such as for file:/// URLs. This is related to fints_url to import/job/configuration, and import/create/fints."}, {"lang": "es", "value": "Firefly III versi\u00f3n 4.7.17.3, es vulnerable a la enumeraci\u00f3n de archivos locales. Un atacante puede enumerar archivos locales debido a la falta de saneamiento del esquema de protocolo, tal y como para las URL file:///. Esto est\u00e1 relacionado con fints_url en import/job/configuration, y import/create/fints."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 3.3, "baseSeverity": "LOW"}, "exploitabilityScore": 1.8, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.1}, "baseSeverity": "LOW", "exploitabilityScore": 3.9, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:firefly-iii:firefly_iii:4.7.17.3:*:*:*:*:*:*:*", "matchCriteriaId": "07608727-1384-457D-A9E9-76A9DE166635"}]}]}], "references": [{"url": "https://github.com/firefly-iii/firefly-iii/commit/e80d616ef4397e6e764f6b7b7a5b30121244933c", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/firefly-iii/firefly-iii/issues/2367", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/firefly-iii/firefly-iii/commit/e80d616ef4397e6e764f6b7b7a5b30121244933c"}}