{"buggy_code": ["<?php\n/**\n * Copyright (c) STMicroelectronics, 2004-2009. All rights reserved\n * Copyright (c) Enalean, 2017-Present. All rights reserved\n *\n * This file is a part of Tuleap.\n *\n * Tuleap is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * Tuleap is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n* Docman_Widget_MyDocmanSearch\n*/\nclass Docman_Widget_MyDocmanSearch extends Widget\n{\n    public $pluginPath;\n\n    public function __construct($pluginPath)\n    {\n        parent::__construct('plugin_docman_mydocman_search');\n        $this->_pluginPath = $pluginPath;\n    }\n\n    public function getTitle()\n    {\n        return dgettext('tuleap-docman', 'Document Id Search');\n    }\n\n    public function getContent()\n    {\n        $html    = '';\n        $request = HTTPRequest::instance();\n        $um      = UserManager::instance();\n        $user    = $um->getCurrentUser();\n\n        $vFunc = new Valid_WhiteList('docman_func', ['show_docman']);\n        $vFunc->required();\n        if ($request->valid($vFunc)) {\n            $func = $request->get('docman_func');\n        } else {\n            $func = '';\n        }\n        $vDocmanId = new Valid_UInt('docman_id');\n        $vDocmanId->required();\n        if ($request->valid($vDocmanId)) {\n            $docman_id = $request->get('docman_id');\n        } else {\n            $docman_id = '';\n        }\n\n        $url = '';\n        if ($request->get('dashboard_id')) {\n            $url = '?dashboard_id=' . urlencode($request->get('dashboard_id'));\n        }\n\n        $html .= '<form method=\"post\" action=\"' . $url . '\">';\n        $html .= '<input type=\"hidden\" name=\"docman_func\" value=\"show_docman\" />';\n        $html .= '<div class=\"tlp-form-element\">\n                    <label class=\"tlp-label\" for=\"docman_id\">' .\n            dgettext('tuleap-docman', 'Search document id') .\n            '</label>\n                    <input type=\"text\" name=\"docman_id\" data-test=\"document-search-id\" value=\"' . $docman_id . '\" id=\"docman_id\" class=\"tlp-input\" placeholder=\"123\"/>\n                  </div>';\n        $html .= '<input type=\"submit\" data-test=\"document-button-search\" class=\"tlp-button-primary\" value=\"' . dgettext('tuleap-docman', 'Search') . '\"/>';\n        $html .= '</form>';\n\n        if (($func == 'show_docman') && $docman_id) {\n            $res = $this->returnAllowedGroupId($docman_id, $user);\n\n            if ($res) {\n                $dPm      = Docman_PermissionsManager::instance($res['group_id']);\n                $itemPerm = $dPm->userCanAccess($user, $docman_id);\n\n                if ($itemPerm) {\n                    $html .= '<p><a data-test=\"document-search-link\" href=\"/plugins/docman/?group_id=' . $res['group_id'] . '&action=details&id=' . $docman_id . '&section=properties\">Show &quot;' . $res['title'] . '&quot; Properties</a></p>';\n                    return $html;\n                }\n            }\n            $html .= '<p data-test=\"document-search-result\">' . dgettext('tuleap-docman', 'You do not have the permission to access the document') . '</p>';\n        }\n\n        return $html;\n    }\n\n    /**\n     * Check if given document is in a project readable by user.\n     *\n     * Returns project info if:\n     * * the document belongs to a public project\n     * ** And the user is active (not restricted)\n     * ** Or user is restricted but member of the project.\n     * * or a private one and the user is a member of it\n     * else 0\n     *\n     * @param $docman_id int  Document Id\n     * @param $user      User User Id\n     * @return array|0\n     * @psalm-return array{group_id: int, title:string}|0\n     **/\n    public function returnAllowedGroupId($docman_id, $user)\n    {\n        $sql_group = 'SELECT group_id,title FROM  plugin_docman_item WHERE' .\n                         ' item_id = ' . db_ei($docman_id);\n\n        $res_group = db_query($sql_group);\n\n        if ($res_group && db_numrows($res_group) == 1) {\n            $row = db_fetch_array($res_group);\n            $res = [\n                'group_id' => (int) $row['group_id'],\n                'title'    => (string) $row['title'],\n            ];\n\n            $project = ProjectManager::instance()->getProject($res['group_id']);\n            if ($project->isPublic()) {\n                // Check restricted user\n                if (($user->isRestricted() && $user->isMember($res['group_id'])) || ! $user->isRestricted()) {\n                    return $res;\n                }\n            } else {\n                if ($user->isMember($res['group_id'])) {\n                    return $res;\n                }\n            }\n        }\n        return 0;\n    }\n\n    public function getCategory()\n    {\n        return dgettext('tuleap-docman', 'Document manager');\n    }\n\n    public function getDescription()\n    {\n        return dgettext('tuleap-docman', 'Redirect to document with given id.');\n    }\n}\n", "<?php\n/**\n * Copyright (c) Enalean, 2019-Present. All Rights Reserved.\n * Copyright STMicroelectronics, 2009. All Rights Reserved.\n *\n * Originally written by Sabri LABBENE 2009.\n *\n * This file is a part of Tuleap.\n *\n * Tuleap is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * Tuleap is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.\n */\n\nclass Docman_View_Admin_LockInfos extends \\Tuleap\\Docman\\View\\Admin\\AdminView\n{\n    public const IDENTIFIER = 'admin_lock_infos';\n    public $defaultUrl;\n\n    protected function getIdentifier(): string\n    {\n        return self::IDENTIFIER;\n    }\n\n    protected function getTitle(array $params): string\n    {\n        return self::getTabTitle();\n    }\n\n    public static function getTabTitle(): string\n    {\n        return dgettext('tuleap-docman', 'Locked Documents');\n    }\n\n    public static function getTabDescription(): string\n    {\n        return dgettext('tuleap-docman', 'List of locked documents.');\n    }\n\n    protected function displayContent(\\TemplateRenderer $renderer, array $params): void\n    {\n        $html = '<div class=\"tlp-framed\">';\n\n        $html .= '<section class=\"tlp-pane\">\n            <div class=\"tlp-pane-container\">\n                <div class=\"tlp-pane-header\">\n                    <h1 class=\"tlp-pane-title\">' . dgettext('tuleap-docman', 'Locked Documents') . '</h1>\n                </div>\n                <section class=\"tlp-pane-section\">';\n\n        $html .= '<p>';\n        $html .= dgettext('tuleap-docman', 'This is the list of all locked documents in project.');\n        $html .= '</p>';\n\n        $html .= $this->getTable($params);\n\n        $html .= '</section>\n            </div>\n        </section>';\n\n        print($html);\n    }\n\n    private function getTable($params)\n    {\n        $this->defaultUrl = $params['default_url'];\n        $content          = '';\n\n        $content .= '<table class=\"tlp-table\">\n            <thead>\n                <tr>\n                    <th>' . dgettext('tuleap-docman', 'Title') . '</th>\n                    <th>' . dgettext('tuleap-docman', 'Location') . '</th>\n                    <th>' . dgettext('tuleap-docman', 'Who') . '</th>\n                    <th>' . dgettext('tuleap-docman', 'When') . '</th>\n                </tr>\n            </thead>\n            <tbody>\n        ';\n\n        // Get list of all locked documents in the project.\n        $dPM       = Docman_PermissionsManager::instance($params['group_id']);\n        $lockInfos = $dPM->getLockFactory()->getProjectLockInfos($params['group_id']);\n\n        $uH = UserHelper::instance();\n        $hp = Codendi_HTMLPurifier::instance();\n\n        $dIF = new Docman_ItemFactory($params['group_id']);\n\n        if ($lockInfos && count($lockInfos) === 0) {\n            $content .= '\n                <tr>\n                    <td colspan=\"4\" class=\"tlp-table-cell-empty\">\n                        ' . dgettext('tuleap-docman', 'Project has no locked documents') . '\n                    </td>\n                </tr>\n            ';\n        }\n\n        if ($lockInfos !== false) {\n            foreach ($lockInfos as $row) {\n                $item = $dIF->getItemFromDb($row['item_id']);\n                if ($item === null) {\n                    return '</tbody></table>';\n                }\n                $parent   = $dIF->getItemFromDb($item->getParentId());\n                $content .= '<tr>';\n                $content .= '<td>' . '<a href=\"/plugins/docman/?group_id=' . $params['group_id'] . '&action=details&id=' . $item->getId() . '\">' . $item->getTitle() . '</a></td>';\n                $content .= '<td>';\n                if ($parent === null || $dIF->isRoot($parent)) {\n                    $content .= '</td>';\n                } else {\n                    $content .=  '<a href=\"' . $this->defaultUrl . '&action=show&id=' . $parent->getId() . '\">' . $parent->getTitle() . '</a></td>';\n                }\n                $content .= '<td>' . $hp->purify($uH->getDisplayNameFromUserId($row['user_id'])) . '</td>';\n                $content .= '<td>' . format_date($GLOBALS['Language']->getText('system', 'datefmt'), $row['lock_date']) . '</td>';\n                $content .= '</tr>';\n            }\n        }\n\n        $content .= '</tbody></table>';\n\n        return $content;\n    }\n}\n"], "fixing_code": ["<?php\n/**\n * Copyright (c) STMicroelectronics, 2004-2009. All rights reserved\n * Copyright (c) Enalean, 2017-Present. All rights reserved\n *\n * This file is a part of Tuleap.\n *\n * Tuleap is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * Tuleap is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n* Docman_Widget_MyDocmanSearch\n*/\nclass Docman_Widget_MyDocmanSearch extends Widget\n{\n    public $pluginPath;\n\n    public function __construct($pluginPath)\n    {\n        parent::__construct('plugin_docman_mydocman_search');\n        $this->_pluginPath = $pluginPath;\n    }\n\n    public function getTitle()\n    {\n        return dgettext('tuleap-docman', 'Document Id Search');\n    }\n\n    public function getContent()\n    {\n        $html    = '';\n        $request = HTTPRequest::instance();\n        $um      = UserManager::instance();\n        $user    = $um->getCurrentUser();\n\n        $vFunc = new Valid_WhiteList('docman_func', ['show_docman']);\n        $vFunc->required();\n        if ($request->valid($vFunc)) {\n            $func = $request->get('docman_func');\n        } else {\n            $func = '';\n        }\n        $vDocmanId = new Valid_UInt('docman_id');\n        $vDocmanId->required();\n        if ($request->valid($vDocmanId)) {\n            $docman_id = $request->get('docman_id');\n        } else {\n            $docman_id = '';\n        }\n\n        $url = '';\n        if ($request->get('dashboard_id')) {\n            $url = '?dashboard_id=' . urlencode($request->get('dashboard_id'));\n        }\n\n        $html .= '<form method=\"post\" action=\"' . $url . '\">';\n        $html .= '<input type=\"hidden\" name=\"docman_func\" value=\"show_docman\" />';\n        $html .= '<div class=\"tlp-form-element\">\n                    <label class=\"tlp-label\" for=\"docman_id\">' .\n            dgettext('tuleap-docman', 'Search document id') .\n            '</label>\n                    <input type=\"text\" name=\"docman_id\" data-test=\"document-search-id\" value=\"' . $docman_id . '\" id=\"docman_id\" class=\"tlp-input\" placeholder=\"123\"/>\n                  </div>';\n        $html .= '<input type=\"submit\" data-test=\"document-button-search\" class=\"tlp-button-primary\" value=\"' . dgettext('tuleap-docman', 'Search') . '\"/>';\n        $html .= '</form>';\n\n        if (($func == 'show_docman') && $docman_id) {\n            $res = $this->returnAllowedGroupId($docman_id, $user);\n\n            if ($res) {\n                $dPm      = Docman_PermissionsManager::instance($res['group_id']);\n                $itemPerm = $dPm->userCanAccess($user, $docman_id);\n\n                if ($itemPerm) {\n                    $purifier = Codendi_HTMLPurifier::instance();\n                    $html    .= '<p><a data-test=\"document-search-link\" href=\"/plugins/docman/?group_id=' . urlencode((string) $res['group_id']) . '&action=details&id=' . urlencode((string) $docman_id) . '&section=properties\">Show &quot;';\n                    $html    .=  $purifier->purify($res['title']);\n                    $html    .= '&quot; Properties</a></p>';\n                    return $html;\n                }\n            }\n            $html .= '<p data-test=\"document-search-result\">' . dgettext('tuleap-docman', 'You do not have the permission to access the document') . '</p>';\n        }\n\n        return $html;\n    }\n\n    /**\n     * Check if given document is in a project readable by user.\n     *\n     * Returns project info if:\n     * * the document belongs to a public project\n     * ** And the user is active (not restricted)\n     * ** Or user is restricted but member of the project.\n     * * or a private one and the user is a member of it\n     * else 0\n     *\n     * @param $docman_id int  Document Id\n     * @param $user      User User Id\n     * @return array|0\n     * @psalm-return array{group_id: int, title:string}|0\n     **/\n    public function returnAllowedGroupId($docman_id, $user)\n    {\n        $sql_group = 'SELECT group_id,title FROM  plugin_docman_item WHERE' .\n                         ' item_id = ' . db_ei($docman_id);\n\n        $res_group = db_query($sql_group);\n\n        if ($res_group && db_numrows($res_group) == 1) {\n            $row = db_fetch_array($res_group);\n            $res = [\n                'group_id' => (int) $row['group_id'],\n                'title'    => (string) $row['title'],\n            ];\n\n            $project = ProjectManager::instance()->getProject($res['group_id']);\n            if ($project->isPublic()) {\n                // Check restricted user\n                if (($user->isRestricted() && $user->isMember($res['group_id'])) || ! $user->isRestricted()) {\n                    return $res;\n                }\n            } else {\n                if ($user->isMember($res['group_id'])) {\n                    return $res;\n                }\n            }\n        }\n        return 0;\n    }\n\n    public function getCategory()\n    {\n        return dgettext('tuleap-docman', 'Document manager');\n    }\n\n    public function getDescription()\n    {\n        return dgettext('tuleap-docman', 'Redirect to document with given id.');\n    }\n}\n", "<?php\n/**\n * Copyright (c) Enalean, 2019-Present. All Rights Reserved.\n * Copyright STMicroelectronics, 2009. All Rights Reserved.\n *\n * Originally written by Sabri LABBENE 2009.\n *\n * This file is a part of Tuleap.\n *\n * Tuleap is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * Tuleap is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.\n */\n\nclass Docman_View_Admin_LockInfos extends \\Tuleap\\Docman\\View\\Admin\\AdminView\n{\n    public const IDENTIFIER = 'admin_lock_infos';\n    public $defaultUrl;\n\n    protected function getIdentifier(): string\n    {\n        return self::IDENTIFIER;\n    }\n\n    protected function getTitle(array $params): string\n    {\n        return self::getTabTitle();\n    }\n\n    public static function getTabTitle(): string\n    {\n        return dgettext('tuleap-docman', 'Locked Documents');\n    }\n\n    public static function getTabDescription(): string\n    {\n        return dgettext('tuleap-docman', 'List of locked documents.');\n    }\n\n    protected function displayContent(\\TemplateRenderer $renderer, array $params): void\n    {\n        $html = '<div class=\"tlp-framed\">';\n\n        $html .= '<section class=\"tlp-pane\">\n            <div class=\"tlp-pane-container\">\n                <div class=\"tlp-pane-header\">\n                    <h1 class=\"tlp-pane-title\">' . dgettext('tuleap-docman', 'Locked Documents') . '</h1>\n                </div>\n                <section class=\"tlp-pane-section\">';\n\n        $html .= '<p>';\n        $html .= dgettext('tuleap-docman', 'This is the list of all locked documents in project.');\n        $html .= '</p>';\n\n        $html .= $this->getTable($params);\n\n        $html .= '</section>\n            </div>\n        </section>';\n\n        print($html);\n    }\n\n    private function getTable($params)\n    {\n        $this->defaultUrl = $params['default_url'];\n        $content          = '';\n\n        $content .= '<table class=\"tlp-table\">\n            <thead>\n                <tr>\n                    <th>' . dgettext('tuleap-docman', 'Title') . '</th>\n                    <th>' . dgettext('tuleap-docman', 'Location') . '</th>\n                    <th>' . dgettext('tuleap-docman', 'Who') . '</th>\n                    <th>' . dgettext('tuleap-docman', 'When') . '</th>\n                </tr>\n            </thead>\n            <tbody>\n        ';\n\n        // Get list of all locked documents in the project.\n        $dPM       = Docman_PermissionsManager::instance($params['group_id']);\n        $lockInfos = $dPM->getLockFactory()->getProjectLockInfos($params['group_id']);\n\n        $uH = UserHelper::instance();\n        $hp = Codendi_HTMLPurifier::instance();\n\n        $dIF = new Docman_ItemFactory($params['group_id']);\n\n        if ($lockInfos && count($lockInfos) === 0) {\n            $content .= '\n                <tr>\n                    <td colspan=\"4\" class=\"tlp-table-cell-empty\">\n                        ' . dgettext('tuleap-docman', 'Project has no locked documents') . '\n                    </td>\n                </tr>\n            ';\n        }\n\n        if ($lockInfos !== false) {\n            foreach ($lockInfos as $row) {\n                $item = $dIF->getItemFromDb($row['item_id']);\n                if ($item === null) {\n                    return '</tbody></table>';\n                }\n                $parent   = $dIF->getItemFromDb($item->getParentId());\n                $content .= '<tr>';\n                $content .= '<td>' . '<a href=\"/plugins/docman/?group_id=' . urlencode((string) $params['group_id']) . '&action=details&id=' . urlencode((string) $item->getId()) . '\">';\n                $content .= $hp->purify($item->getTitle());\n                $content .= '</a></td>';\n                $content .= '<td>';\n                if ($parent === null || $dIF->isRoot($parent)) {\n                    $content .= '</td>';\n                } else {\n                    $content .=  '<a href=\"' . $this->defaultUrl . '&action=show&id=' . urlencode((string) $parent->getId()) . '\">';\n                    $content .= $hp->purify($parent->getTitle());\n                    $content .= '</a></td>';\n                }\n                $content .= '<td>' . $hp->purify($uH->getDisplayNameFromUserId($row['user_id'])) . '</td>';\n                $content .= '<td>' . format_date($GLOBALS['Language']->getText('system', 'datefmt'), $row['lock_date']) . '</td>';\n                $content .= '</tr>';\n            }\n        }\n\n        $content .= '</tbody></table>';\n\n        return $content;\n    }\n}\n"], "filenames": ["plugins/docman/include/Docman_Widget_MyDocmanSearch.class.php", "plugins/docman/include/view/Docman_View_Admin_LockInfos.class.php"], "buggy_code_start_loc": [86, 117], "buggy_code_end_loc": [87, 123], "fixing_code_start_loc": [86, 117], "fixing_code_end_loc": [90, 127], "type": "CWE-79", "message": "Tuleap is a Free & Open Source Suite to improve management of software developments and collaboration. In versions prior to 13.9.99.111 the title of a document is not properly escaped in the search result of MyDocmanSearch widget and in the administration page of the locked documents. A malicious user with the capability to create a document could force victim to execute uncontrolled code. Users are advised to upgrade. There are no known workarounds for this issue.", "other": {"cve": {"id": "CVE-2022-31063", "sourceIdentifier": "security-advisories@github.com", "published": "2022-06-29T18:15:08.893", "lastModified": "2022-07-15T10:13:02.110", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Tuleap is a Free & Open Source Suite to improve management of software developments and collaboration. In versions prior to 13.9.99.111 the title of a document is not properly escaped in the search result of MyDocmanSearch widget and in the administration page of the locked documents. A malicious user with the capability to create a document could force victim to execute uncontrolled code. Users are advised to upgrade. There are no known workarounds for this issue."}, {"lang": "es", "value": "Tuleap es una suite libre y de c\u00f3digo abierto para mejorar la administraci\u00f3n de los desarrollos de software y la colaboraci\u00f3n. En versiones anteriores a 13.9.99.111, el t\u00edtulo de un documento no se escapa apropiadamente en el resultado de la b\u00fasqueda del widget MyDocmanSearch y en la p\u00e1gina de administraci\u00f3n de los documentos bloqueados. Un usuario malicioso con capacidad para crear un documento podr\u00eda forzar a la v\u00edctima a ejecutar c\u00f3digo no controlado. Es recomendado a usuarios actualizar. No se presentan mitigaciones conocidas para este problema"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 3.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:enalean:tuleap:*:*:*:*:community:*:*:*", "versionEndExcluding": "13.9.99.111", "matchCriteriaId": "290E08AF-5F26-4777-AD57-9343595B5B75"}, {"vulnerable": true, "criteria": "cpe:2.3:a:enalean:tuleap:*:*:*:*:enterprise:*:*:*", "versionStartIncluding": "13.8.0", "versionEndExcluding": "13.8.6", "matchCriteriaId": "94F599E8-A949-4624-94D8-2B1AE92AFE64"}, {"vulnerable": true, "criteria": "cpe:2.3:a:enalean:tuleap:*:*:*:*:enterprise:*:*:*", "versionStartIncluding": "13.9.0", "versionEndExcluding": "13.9.3", "matchCriteriaId": "196F5F96-ACA8-4072-A5D7-A54914138D64"}]}]}], "references": [{"url": "https://github.com/Enalean/tuleap/commit/c947975a4f1ff7bbfd7d5cd24a2e16bf12bd96d4", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/Enalean/tuleap/security/advisories/GHSA-4fx8-4ff3-96jf", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://tuleap.net/plugins/git/tuleap/tuleap/stable?a=commit&h=c947975a4f1ff7bbfd7d5cd24a2e16bf12bd96d4", "source": "security-advisories@github.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://tuleap.net/plugins/tracker/?aid=27173", "source": "security-advisories@github.com", "tags": ["Issue Tracking", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/Enalean/tuleap/commit/c947975a4f1ff7bbfd7d5cd24a2e16bf12bd96d4"}}