{"buggy_code": ["import os\nimport Bcfg2.Server.Plugin\n\n\ndef async_run(prog, args):\n    pid = os.fork()\n    if pid:\n        os.waitpid(pid, 0)\n    else:\n        dpid = os.fork()\n        if not dpid:\n            os.system(\" \".join([prog] + args))\n        os._exit(0)\n\n\nclass Trigger(Bcfg2.Server.Plugin.Plugin,\n              Bcfg2.Server.Plugin.Statistics):\n    \"\"\"Trigger is a plugin that calls external scripts (on the server).\"\"\"\n    name = 'Trigger'\n    __version__ = '$Id'\n    __author__ = 'bcfg-dev@mcs.anl.gov'\n\n    def __init__(self, core, datastore):\n        Bcfg2.Server.Plugin.Plugin.__init__(self, core, datastore)\n        Bcfg2.Server.Plugin.Statistics.__init__(self)\n        try:\n            os.stat(self.data)\n        except:\n            self.logger.error(\"Trigger: spool directory %s does not exist; \"\n                              \"unloading\" % self.data)\n            raise Bcfg2.Server.Plugin.PluginInitError\n\n    def process_statistics(self, metadata, _):\n        args = [metadata.hostname, '-p', metadata.profile, '-g',\n                ':'.join([g for g in metadata.groups])]\n        for notifier in os.listdir(self.data):\n            if ((notifier[-1] == '~') or\n                (notifier[:2] == '.#') or\n                (notifier[-4:] == '.swp') or\n                (notifier in ['SCCS', '.svn', '4913'])):\n                continue\n            npath = self.data + '/' + notifier\n            self.logger.debug(\"Running %s %s\" % (npath, \" \".join(args)))\n            async_run(npath, args)\n"], "fixing_code": ["import os\nimport pipes\nimport Bcfg2.Server.Plugin\nfrom subprocess import Popen, PIPE\n\nclass Trigger(Bcfg2.Server.Plugin.Plugin,\n              Bcfg2.Server.Plugin.Statistics):\n    \"\"\"Trigger is a plugin that calls external scripts (on the server).\"\"\"\n    name = 'Trigger'\n    __version__ = '$Id'\n    __author__ = 'bcfg-dev@mcs.anl.gov'\n\n    def __init__(self, core, datastore):\n        Bcfg2.Server.Plugin.Plugin.__init__(self, core, datastore)\n        Bcfg2.Server.Plugin.Statistics.__init__(self)\n        try:\n            os.stat(self.data)\n        except:\n            self.logger.error(\"Trigger: spool directory %s does not exist; \"\n                              \"unloading\" % self.data)\n            raise Bcfg2.Server.Plugin.PluginInitError\n\n    def async_run(self, args):\n        pid = os.fork()\n        if pid:\n            os.waitpid(pid, 0)\n        else:\n            dpid = os.fork()\n            if not dpid:\n                self.debug_log(\"Running %s\" % \" \".join(pipes.quote(a)\n                                                       for a in args))\n                proc = Popen(args, stdin=PIPE, stdout=PIPE, stderr=PIPE)\n                (out, err) = proc.communicate()\n                rv = proc.wait()\n                if rv != 0:\n                    self.logger.error(\"Trigger: Error running %s (%s): %s\" %\n                                      (args[0], rv, err))\n                elif err:\n                    self.debug_log(\"Trigger: Error: %s\" % err)\n            os._exit(0)\n\n    def process_statistics(self, metadata, _):\n        args = [metadata.hostname, '-p', metadata.profile, '-g',\n                ':'.join([g for g in metadata.groups])]\n        self.debug_log(\"running triggers\")\n        for notifier in os.listdir(self.data):\n            self.debug_log(\"running %s\" % notifier)\n            if ((notifier[-1] == '~') or\n                (notifier[:2] == '.#') or\n                (notifier[-4:] == '.swp') or\n                (notifier in ['SCCS', '.svn', '4913'])):\n                continue\n            npath = os.path.join(self.data, notifier)\n            self.async_run([npath] + args)\n"], "filenames": ["src/lib/Server/Plugins/Trigger.py"], "buggy_code_start_loc": [1], "buggy_code_end_loc": [45], "fixing_code_start_loc": [2], "fixing_code_end_loc": [55], "type": "CWE-78", "message": "The Trigger plugin in bcfg2 1.2.x before 1.2.3 allows remote attackers with root access to the client to execute arbitrary commands via shell metacharacters in the UUID field to the server process (bcfg2-server).", "other": {"cve": {"id": "CVE-2012-3366", "sourceIdentifier": "secalert@redhat.com", "published": "2012-07-03T16:40:35.007", "lastModified": "2017-08-29T01:31:54.507", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "The Trigger plugin in bcfg2 1.2.x before 1.2.3 allows remote attackers with root access to the client to execute arbitrary commands via shell metacharacters in the UUID field to the server process (bcfg2-server)."}, {"lang": "es", "value": "El 'plugin' Trigger en bcfg2 v1.2.x antes de v1.2.3 permite ejecutar comandos de su elecci\u00f3n a atacantes remotos con acceso de root v\u00eda \"metacaracteres shell\" en el campo UUID para el proceso de servidor (bcfg2-server)."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 9.0}, "baseSeverity": "HIGH", "exploitabilityScore": 8.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-78"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:anl:bcfg2:1.2.0:*:*:*:*:*:*:*", "matchCriteriaId": "BFEC6B25-9318-4304-B66D-B1C3E734A7ED"}, {"vulnerable": true, "criteria": "cpe:2.3:a:anl:bcfg2:1.2.0:rc2:*:*:*:*:*:*", "matchCriteriaId": "17868C9C-72E4-4BC2-BCEC-A97DD6CBFE08"}]}]}], "references": [{"url": "http://permalink.gmane.org/gmane.comp.sysutils.bcfg2.devel/4539", "source": "secalert@redhat.com"}, {"url": "http://www.debian.org/security/2012/dsa-2503", "source": "secalert@redhat.com"}, {"url": "http://www.securityfocus.com/bid/54217", "source": "secalert@redhat.com"}, {"url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/76616", "source": "secalert@redhat.com"}, {"url": "https://github.com/Bcfg2/bcfg2/commit/a524967e8d5c4c22e49cd619aed20c87a316c0be", "source": "secalert@redhat.com", "tags": ["Patch"]}]}, "github_commit_url": "https://github.com/Bcfg2/bcfg2/commit/a524967e8d5c4c22e49cd619aed20c87a316c0be"}}