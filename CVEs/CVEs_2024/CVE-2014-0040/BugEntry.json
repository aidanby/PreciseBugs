{"buggy_code": ["#!/bin/bash\n\nset -ex\n\n# The default version will be 1.2\nOSE_VERSION=${DIB_OSE_VERSION:=\"1.2\"}\n\nif [ \"${OSE_VERSION}\" == \"1.2\" ]; then\n  if [ -z \"${DIB_RHSM_OSE_POOL:-}\" ]; then\n  cat > /etc/yum.repos.d/openshift-client.repo <<YUM\n[openshift_client]\nname=OpenShift Client\nbaseurl=${DIB_CONF_REPO_BASE}/Client/x86_64/os/\nenabled=1\ngpgcheck=0\npriority=1\nsslverify=false\n\nYUM\n\n  cat > /etc/yum.repos.d/openshift-infrastructure.repo <<YUM\n[openshift_infrastructure]\nname=OpenShift Infrastructure\nbaseurl=${DIB_CONF_REPO_BASE}/Infrastructure/x86_64/os/\nenabled=1\ngpgcheck=0\npriority=1\nsslverify=false\n\nYUM\n  fi\nelse\n  if [ -n \"${DIB_CONF_REPO_BASE}\" ]; then\n      cat <<YUM > /etc/yum.repos.d/openshift.repo\n[openshift_client]\nname=OpenShift Client\nbaseurl=${DIB_CONF_REPO_BASE}/RHOSE-CLIENT-2.0/x86_64/os/\nenabled=1\ngpgcheck=0\npriority=10\nsslverify=false\n\n[openshift_infrastructure]\nname=OpenShift Infrastructure\nbaseurl=${DIB_CONF_REPO_BASE}/RHOSE-INFRA-2.0/x86_64/os/\nenabled=1\ngpgcheck=0\npriority=10\nsslverify=false\n\nYUM\n  fi\nfi\n\n# DIB_REG_TYPE of rhn or rhsm should be used if oo-admin-yum-validator is to be triggered\nyum install -y yum-plugin-priorities\nif [ -n \"${DIB_REG_TYPE}\" ]; then\n  # oo-admin-check-sources will ship with 2.0 however it is still compatible with OSE 1.2\n  curl -L https://api.github.com/repos/openshift/openshift-extras/tarball/master | tar -xvz\n  pushd openshift-openshift-extras*/admin/yum-validator\n    VALIDATOR_ARGS=\" --role=broker --fix-all\"\n    if [ -n ${DIB_YUM_VALIDATOR_VERSION} ]; then\n      VALIDATOR_ARGS+=\" --oo-version ${DIB_YUM_VALIDATOR_VERSION}\"\n    fi\n    ./oo-admin-yum-validator ${VALIDATOR_ARGS} || ./oo-admin-yum-validator ${VALIDATOR_ARGS}\n  popd\n  rm -rf openshift-openshift-extras*\nfi\n\nOSE_PACKAGES=\"yum-plugin-priorities openshift-origin-broker openshift-origin-broker-util rubygem-openshift-origin-msg-broker-mcollective rubygem-openshift-origin-auth-remote-user rubygem-openshift-origin-dns-nsupdate openshift-origin-console rhc activemq mongodb mongodb-server bind bind-utils mod_auth_kerb ntp ntpdate wget \"\n\n\nOSE_V1_PACKAGES=\"mcollective-client \"\n\nOSE_V2_PACKAGES=\"ruby193-mcollective-client rubygem-openshift-origin-admin-console \"\n\nif [ $OSE_VERSION == \"1.2\" ]; then\n  OSE_PACKAGES+=OSE_V1_PACKAGES\nelse\n  OSE_PACKAGES+=OSE_V2_PACKAGES\nfi\n\nyum update -y\ninstall-packages $OSE_PACKAGES --skip-broken\n", "#!/bin/bash\n\nset -ex\n\n# The default version will be 1.2\nOSE_VERSION=${DIB_OSE_VERSION:=\"1.2\"}\n\nif [ \"${OSE_VERSION}\" == \"1.2\" ]; then\n  if [ -z ${DIB_RHSM_OSE_POOL:-} ]; then\n  cat > /etc/yum.repos.d/openshift-node.repo <<YUM\n[openshift_node]\nname=OpenShift Node\nbaseurl=${DIB_CONF_REPO_BASE}/Node/x86_64/os/\nenabled=1\ngpgcheck=0\npriority=1\nsslverify=false\n\nYUM\n\n  cat > /etc/yum.repos.d/openshift-jboss.repo <<YUM\n[openshift_jbosseap]\nname=OpenShift JBossEAP\nbaseurl=${DIB_CONF_REPO_BASE}/JBoss_EAP6_Cartridge/x86_64/os/\nenabled=1\ngpgcheck=0\npriority=1\nsslverify=false\n\nYUM\n\n  cat <<YUM > /etc/yum.repos.d/jbosseap.repo\n[jbosseap]\nname=jbosseap\nbaseurl=${DIB_CONF_JBOSS_REPO_BASE}/jbeap/6/os\nenabled=1\npriority=3\ngpgcheck=0\n\nYUM\n\n  cat <<YUM > /etc/yum.repos.d/jbossews.repo\n[jbossews]\nname=jbossews\nbaseurl=${DIB_CONF_JBOSS_REPO_BASE}/jbews/2/os\nenabled=1\npriority=3\ngpgcheck=0\n\nYUM\n  fi\nelse\n  if [ -n \"${DIB_CONF_REPO_BASE}\" ]; then\n      cat <<YUM > /etc/yum.repos.d/openshift.repo\n[openshift_jbosseap]\nname=OpenShift JBossEAP\nbaseurl=${DIB_CONF_REPO_BASE}/RHOSE-JBOSSEAP-2.0/x86_64/os/\nenabled=1\ngpgcheck=0\npriority=10\nsslverify=false\n\n[openshift_node]\nname=OpenShift Node\nbaseurl=${DIB_CONF_REPO_BASE}/RHOSE-NODE-2.0/x86_64/os/\nenabled=1\ngpgcheck=0\npriority=10\nsslverify=false\nYUM\n    fi\n\n  if [ -n \"${DIB_CONF_JBOSS_REPO_BASE}\" ]; then\n      cat <<YUM > /etc/yum.repos.d/jbosseap62.repo\n[jbosseap62]\nname=jbosseap62\nbaseurl=${DIB_CONF_JBOSS_REPO_BASE}\nenabled=1\npriority=30\ngpgcheck=0\nYUM\n  fi\nfi\n\n# DIB_REG_TYPE of rhn or rhsm should be used if oo-admin-yum-validator is to be triggered\nif [ -n \"${DIB_REG_TYPE}\" ]; then\n  yum install -y yum-plugin-priorities\n  # oo-admin-check-sources will ship with 2.0 however it is still compatible with OSE 1.2\n  curl -L https://api.github.com/repos/openshift/openshift-extras/tarball/master | tar -xvz\n  pushd openshift-openshift-extras*/admin/yum-validator\n    VALIDATOR_ARGS=\" --role=node-eap --fix-all\"\n    if [[ -n \"${DIB_YUM_VALIDATOR_VERSION}\" ]]; then\n      VALIDATOR_ARGS+=\" --oo-version ${DIB_YUM_VALIDATOR_VERSION}\"\n    fi\n    ./oo-admin-yum-validator ${VALIDATOR_ARGS} || ./oo-admin-yum-validator ${VALIDATOR_ARGS}\n  popd\n  rm -rf openshift-openshift-extras*\nfi\nOSE_PACKAGES=\"yum-plugin-priorities rubygem-openshift-origin-node ruby193-rubygem-passenger-native openshift-origin-node-util policycoreutils-python openshift-origin-cartridge-cron openshift-origin-cartridge-diy openshift-origin-cartridge-haproxy openshift-origin-cartridge-jbossews openshift-origin-cartridge-jbosseap openshift-origin-cartridge-jenkins openshift-origin-cartridge-jenkins-client openshift-origin-cartridge-mysql openshift-origin-cartridge-nodejs openshift-origin-cartridge-perl openshift-origin-cartridge-php openshift-origin-cartridge-postgresql openshift-origin-cartridge-python openshift-origin-cartridge-ruby openshift-origin-msg-node-mcollective wget \"\nOSE_V1_PACKAGES=\"mcollective \"\n\n\nOSE_V2_PACKAGES=\"ruby193-mcollective rubygem-openshift-origin-container-selinux rubygem-openshift-origin-frontend-nodejs-websocket python \"\n\nif [ $OSE_VERSION == \"1.2\" ]; then\n  OSE_PACKAGES+=$OSE_V1_PACKAGES\nelse\n  OSE_PACKAGES+=$OSE_V2_PACKAGES\n  if [ -n \"${DIB_CONF_RHEL_REPO_BASE}\" ]; then\n    OSE_PACKAGES+=\"--disablerepo=rhel-6-server-rpms \"\n  fi\nfi\n\nyum update -y\ninstall-packages $OSE_PACKAGES --skip-broken\n# make sure not services were started that might hold on to mounts\nservice crond stop\n\n\n", "heat_template_version: 2013-05-23\ndescription: >\n  Nested HOT template for deploying a highly available OpenShift Enterprise\n  environment. Deploys 3 HA brokers, 3 nodes, with floating IPs, LBaaS, cinder\n  attached storage (nodes) and dynamic DNS on broker1\nparameter_groups:\n- label: General parameters\n  description: General OpenShift parameters\n  parameters:\n  - broker1_hostname\n  - broker2_hostname\n  - broker3_hostname\n  - node1_hostname\n  - node2_hostname\n  - node3_hostname\n  - load_bal_hostname\n  - broker_image\n  - node_image\n  - broker_server_flavor\n  - node_server_flavor\n- label: Red Hat subscription\n  description: >\n    Red Hat Subscription Manager (RHSM) or Red Hat Network (RHN) parameters\n  parameters:\n  - install_method\n  - rh_reg_user\n  - rh_reg_pass\n  - rh_reg_pool\n  - rh_reg_act_key\n  - rh_reg_opts\n- label: Networking parameters\n  description: Networking-related parameters\n  parameters:\n  - domain\n  - hosts_domain\n  - named_hostname\n  - named_ip\n  - upstream_dns_ip\n  - replicants\n  - cartridges\n  - public_net_id\n  - private_net_id\n  - private_subnet_id\n- label: Credentials\n  description: >\n    Username and password parameters for OpenShift and dependent service\n  parameters:\n  - openshift_user1\n  - openshift_pass1\n  - mongo_broker_user\n  - mongo_broker_pass\n  - mcollective_user\n  - mcollective_pass\n  - activemq_admin_pass\n  - activemq_user_pass\nparameters:\n  key_name:\n    description: Name of an existing keypair to enable SSH access to the instances\n    type: string\n  domain:\n    description: Your DNS domain\n    type: string\n  hosts_domain:\n    description: Openshift hosts domain\n    type: string\n  broker_server_flavor:\n    description: Flavor of broker server\n    type: string\n    default: m1.small\n  primary_avail_zone:\n    description: >\n      Primary availability zone to ensure distribution of brokers and nodes\n    type: string\n    default: nova\n  secondary_avail_zone:\n    description: >\n      Secondary availability zone to ensure distribution of brokers and nodes\n    type: string\n    default: nova\n  node_server_flavor:\n    description: Flavor of node servers\n    type: string\n    default: m1.medium\n  node_vol_size:\n    description: Node cinder volume size (GB)\n    type: number\n    default: 10\n  broker1_hostname:\n    description: Broker 1 hostname\n    type: string\n    default: broker1\n  broker2_hostname:\n    description: Broker 2 hostname\n    type: string\n    default: broker2\n  broker3_hostname:\n    description: Broker 3 hostname\n    type: string\n    default: broker3\n  node1_hostname:\n    description: Node 1 hostname\n    type: string\n    default: node1\n  node2_hostname:\n    description: Node 2 hostname\n    type: string\n    default: node2\n  node3_hostname:\n    description: Node 3 hostname\n    type: string\n    default: node3\n  load_bal_hostname:\n    description: Load balancer hostname\n    type: string\n    default: broker\n  broker_image:\n    description: Broker image name\n    type: string\n    default: RHEL65-x86_64-broker\n  node_image:\n    description: Node image name\n    type: string\n    default: RHEL65-x86_64-node\n  install_method:\n    description: Installation method (yum rhsm rhn)\n    type: string\n    default: rhsm\n    constraints:\n    - allowed_values: [yum, rhsm, rhn]\n  rh_reg_user:\n    description: Red Hat registration username\n    type: string\n    default: \"\"\n  rh_reg_pass:\n    description: Red Hat registration password\n    type: string\n    default: \"\"\n    hidden: true\n  rh_reg_pool:\n    description: Pool ID for OpenShift subscription\n    type: string\n    default: \"\"\n  rh_reg_act_key:\n    description: Optional RHN activation key for OpenShift subscription\n    type: string\n    default: \"\"\n  rh_reg_opts:\n    description: RHN options, e.g. --serverUrl=http://my.sat.server.com/XMLRPC\n    type: string\n    default: \"\"\n  rhel_repo_base:\n    description: RHEL Repository Base URL\n    type: string\n    default: \"\"\n  rhel_opt_repo_base:\n    description: RHEL Optional Repository Base URL\n    type: string\n    default: \"\"\n  rhscl_repo_base:\n    description: Red Hat Software Collections Repository Base URL\n    type: string\n    default: \"\"\n  openshift_repo_base:\n    description: OSE Repository Base URL\n    type: string\n    default: \"\"\n  openshift_extra_repo_base:\n    description: OSE Extra Repository Base URL\n    type: string\n    default: \"\"\n  jboss_repo_base:\n    description: JBoss Repository Base URL\n    type: string\n    default: \"\"\n  named_hostname:\n    description: named server hostname\n    type: string\n    default: broker1\n  named_ip:\n    description: named server IP address\n    type: string\n    default: \"\"\n  upstream_dns_ip:\n    description: Upstream DNS IP address for zone transfer\n    type: string\n    default: \"\"\n  replicants:\n    description: >\n      Comma-separated list (no spaces) of broker hosts (FQDN) running ActiveMQ and MongoDB\n    type: string\n  cartridges:\n    description: >\n      Cartridges to install. \"all\" for all cartridges; \"standard\" for all cartridges except for JBossEWS or JBossEAP\n    type: string\n    default: standard\n  public_net_id:\n    type: string\n    description: >\n      ID of public network for which floating IP addresses will be allocated\n  private_net_id:\n    type: string\n    description: ID of private network into which servers get deployed\n  private_subnet_id:\n    type: string\n    description: ID of private sub network into which servers get deployed\n  openshift_user1:\n    description: OpenShift username\n    type: string\n    default: user1\n  openshift_pass1:\n    description: OpenShift user password\n    type: string\n    hidden: true\n  mongo_broker_user:\n    description: MongoDB broker username\n    type: string\n    default: openshift\n  mongo_broker_pass:\n    description: MongoDB broker password\n    type: string\n    hidden: true\n  mcollective_user:\n    description: MCollective username\n    type: string\n    default: mcollective\n  mcollective_pass:\n    description: MCollective password\n    type: string\n    hidden: true\n  activemq_admin_pass:\n    description: ActiveMQ admin user password\n    type: string\n    hidden: true\n  activemq_user_pass:\n    description: ActiveMQ user password\n    type: string\n    hidden: true\n  ose_version:\n    description: The version of OpenShift Enterprise to install\n    type: string\n    default: \"2.0\"\n    constraints:\n    - allowed_values: [\"1.2\", \"2.0\"]\n\nresources:\n  ose_broker_sec_grp:\n    type: AWS::EC2::SecurityGroup\n    properties:\n      GroupDescription: broker firewall rules\n      SecurityGroupIngress:\n      - {IpProtocol: tcp, FromPort: '22', ToPort: '22', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: udp, FromPort: '53', ToPort: '53', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '53', ToPort: '53', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '80', ToPort: '80', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '443', ToPort: '443', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '27017', ToPort: '27017', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '61613', ToPort: '61613', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '61616', ToPort: '61616', CidrIp: 0.0.0.0/0}\n\n  broker1_port:\n    type: OS::Neutron::Port\n    properties:\n      security_groups: [{ get_resource: ose_broker_sec_grp }]\n      network_id: { get_param: private_net_id }\n      fixed_ips:\n        - subnet_id: { get_param: private_subnet_id }\n\n  broker1_floating_ip:\n    type: OS::Neutron::FloatingIP\n    properties:\n      floating_network_id: { get_param: public_net_id }\n      port_id: { get_resource: broker1_port }\n\n  broker2_port:\n    type: OS::Neutron::Port\n    properties:\n      security_groups: [{ get_resource: ose_broker_sec_grp }]\n      network_id: { get_param: private_net_id }\n      fixed_ips:\n        - subnet_id: { get_param: private_subnet_id }\n\n  broker2_floating_ip:\n    type: OS::Neutron::FloatingIP\n    properties:\n      floating_network_id: { get_param: public_net_id }\n      port_id: { get_resource: broker2_port }\n\n  broker3_port:\n    type: OS::Neutron::Port\n    properties:\n      security_groups: [{ get_resource: ose_broker_sec_grp }]\n      network_id: { get_param: private_net_id }\n      fixed_ips:\n        - subnet_id: { get_param: private_subnet_id }\n\n  broker3_floating_ip:\n    type: OS::Neutron::FloatingIP\n    properties:\n      floating_network_id: { get_param: public_net_id }\n      port_id: { get_resource: broker3_port }\n\n  broker_wait_handle:\n    type: AWS::CloudFormation::WaitConditionHandle\n\n  broker_wait_condition:\n    type: AWS::CloudFormation::WaitCondition\n    properties:\n      Count: 2\n      Handle:\n        Ref: broker_wait_handle\n      Timeout: '6000'\n\n  broker1_wait_handle:\n    type: AWS::CloudFormation::WaitConditionHandle\n\n  broker1_wait_condition:\n    type: AWS::CloudFormation::WaitCondition\n    properties:\n      Handle:\n        Ref: broker1_wait_handle\n      Timeout: '3600'\n\n###\n# load balancer\n###\n  lb_vip_port:\n    type: OS::Neutron::Port\n    properties:\n      security_groups: [{ get_resource: ose_broker_sec_grp }]\n      network_id: { get_param: private_net_id }\n      fixed_ips:\n        - subnet_id: { get_param: private_subnet_id }\n\n  lb_vip_floating_ip:\n    type: OS::Neutron::FloatingIP\n    properties:\n      floating_network_id: { get_param: public_net_id }\n      port_id: { get_resource: lb_vip_port }\n\n  lb_pool_vip:\n    type: OS::Neutron::FloatingIPAssociation\n    properties:\n      floatingip_id: { get_resource: lb_vip_floating_ip }\n      port_id: { 'Fn::Select': ['port_id', {'Fn::GetAtt': [pool, vip]}]}\n\n  monitor:\n    type: OS::Neutron::HealthMonitor\n    properties:\n      type: HTTPS\n      delay: 3\n      max_retries: 5\n      timeout: 10\n\n  pool:\n    type: OS::Neutron::Pool\n    properties:\n      name: ose_broker_lb_pool\n      description: Load balancer for OpenShift Enterprise broker hosts\n      protocol: HTTPS\n      subnet_id: { get_param: private_subnet_id }\n      lb_method: ROUND_ROBIN\n      monitors: [ { get_resource: monitor } ]\n      vip:\n        name: ose_broker_vip\n        description: broker virtual IP (VIP)\n        protocol_port: 443\n        session_persistence:\n          type: SOURCE_IP\n\n  mylb:\n    type: OS::Neutron::LoadBalancer\n    properties:\n    #  members: [ { get_resource: broker1_instance }, { get_resource: broker2_instance }, { get_resource: broker3_instance } ]\n      pool_id: { get_resource: pool }\n      protocol_port: 443\n\n###\n# Broker 1\n###\n  broker1_instance:\n    type: OS::Nova::Server\n    depends_on: broker_wait_condition\n    properties:\n      name: ose_broker1\n      image: { get_param: broker_image }\n      flavor: { get_param: broker_server_flavor }\n      availability_zone: { get_param: primary_avail_zone }\n      key_name: { get_param: key_name }\n      networks:\n        - port: { get_resource: broker1_port }\n      security_groups: [{ get_resource: ose_broker_sec_grp }]\n      user_data:\n        str_replace:\n          template: |\n            #!/bin/bash -x\n\n            export CONF_BROKER_IP_ADDR=P_BROKER_FLOATING_IP\n            export CONF_BROKER2_IP_ADDR=P_BROKER2_FLOATING_IP\n            export CONF_BROKER3_IP_ADDR=P_BROKER3_FLOATING_IP\n            export CONF_DOMAIN=P_DOMAIN\n            export CONF_BROKER_HOSTNAME=P_BROKER_HOSTNAME\n            export CONF_BROKER2_HOSTNAME=P_BROKER2_HOSTNAME\n            export CONF_BROKER3_HOSTNAME=P_BROKER3_HOSTNAME\n            export CONF_NAMED_HOSTNAME=P_NAMED_HOSTNAME\n            export CONF_NAMED_IP_ADDR=P_NAMED_IP\n            export CONF_NAMED_ENTRIES=P_BROKER2_HOSTNAME:P_BROKER2_FLOATING_IP,P_BROKER3_HOSTNAME:P_BROKER3_FLOATING_IP,P_NODE1_HOSTNAME:P_NODE1_FLOATING_IP,P_NODE2_HOSTNAME:P_NODE2_FLOATING_IP,P_NODE3_HOSTNAME:P_NODE3_FLOATING_IP,P_LOAD_BAL_HOSTNAME:P_LOAD_BAL_IP\n            export CONF_BIND_KEYALGORITHM=\"HMAC-MD5\"\n            export CONF_ACTIVEMQ_HOSTNAME=P_BROKER_HOSTNAME\n            export CONF_DATASTORE_HOSTNAME=P_BROKER_HOSTNAME\n            export CONF_DATASTORE_REPLICANTS=P_REPLICANTS\n            export CONF_ACTIVEMQ_REPLICANTS=P_REPLICANTS\n            export CONF_INSTALL_METHOD=P_CONF_INSTALL_METHOD\n            export CONF_RHN_USER=P_CONF_RH_USER\n            export CONF_RHN_PASS=P_CONF_RH_PASS\n            export CONF_SM_REG_POOL=P_CONF_RH_REG_POOL\n            export CONF_RHN_REG_ACTKEY=P_CONF_RH_REG_ACTKEY\n            export CONF_RHN_REG_OPTS=P_CONF_RHN_REG_OPTS\n            export CONF_OSE_REPOS_BASE=P_CONF_OSE_REPOS_BASE\n            export CONF_OSE_EXTRA_REPO_BASE=P_CONF_OSE_EXTRA_REPOS_BASE\n            export CONF_JBOSS_REPO_BASE=P_CONF_JBOSS_REPO_BASE\n            export CONF_RHEL_REPO=P_CONF_RHEL_REPO\n            export CONF_RHEL_OPTIONAL_REPO=P_CONF_RHEL_OPTIONAL_REPO\n            export CONF_INSTALL_COMPONENTS=broker,activemq,datastore,named\n            export CONF_ACTIONS=do_all_actions,configure_datastore_add_replicants\n            export CONF_OPENSHIFT_USER1=P_CONF_OPENSHIFT_USER1\n            export CONF_OPENSHIFT_PASSWORD1=P_CONF_OPENSHIFT_PASSWORD1\n            export CONF_MONGODB_BROKER_USER=P_CONF_MONGODB_BROKER_USER\n            export CONF_MONGODB_BROKER_PASSWORD=P_CONF_MONGODB_BROKER_PASSWORD\n            export CONF_MCOLLECTIVE_USER=P_CONF_MCOLLECTIVE_USER\n            export CONF_MCOLLECTIVE_PASSWORD=P_CONF_MCOLLECTIVE_PASSWORD\n            export CONF_ACTIVEMQ_ADMIN_PASSWORD=P_CONF_ACTIVEMQ_ADMIN_PASSWORD\n            export CONF_ACTIVEMQ_AMQ_USER_PASSWORD=P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD\n\n            curl -O https://raw.github.com/openshift/openshift-extras/enterprise-P_OSE_VERSION/enterprise/install-scripts/generic/openshift.sh -k\n            chmod +x ./openshift.sh\n            ./openshift.sh 2>&1 | tee /tmp/openshift.out\n            sed -i '/type master/a \\\n                    also-notify { P_UPSTREAM_DNS_IP; };\\n        notify yes;' /etc/named.conf\n            setenforce 1\n            cd /etc/init.d\n            for i in `ls cloud-*`; do chkconfig $i off; done\n            # FIXME: shouldn't need this. DIB step? selinux enabled when pkg instld? see rpm -q --scripts ruby193-rubygem-passenger-native\n            semodule -i /opt/rh/ruby193/root/usr/share/selinux/packages/ruby193-rubygem-passenger/ruby193-rubygem-passenger.pp 2>/dev/null\n            fixfiles -R ruby193-rubygem-passenger restore\n            fixfiles -R ruby193-rubygem-passenger-native restore\n            /usr/bin/cfn-signal -e 0 -s \"Broker 1 setup complete\" -i \"P_BROKER_HOSTNAME.P_DOMAIN\" \"P_BROKER_WAIT_HANDLE\"\n            reboot\n          params:\n            P_BROKER_FLOATING_IP: { get_attr: [ broker1_floating_ip, floating_ip_address ] }\n            P_NODE1_FLOATING_IP: { get_attr: [ node1_instance, node_floating_ip ] }\n            P_NODE2_FLOATING_IP: { get_attr: [ node2_instance, node_floating_ip ] }\n            P_NODE3_FLOATING_IP: { get_attr: [ node3_instance, node_floating_ip ] }\n            P_BROKER2_FLOATING_IP: { get_attr: [ broker2_floating_ip, floating_ip_address ] }\n            P_BROKER3_FLOATING_IP: { get_attr: [ broker3_floating_ip, floating_ip_address ] }\n            P_DOMAIN: { get_param: domain }\n            P_HOSTS_DOMAIN: { get_param: hosts_domain }\n            P_LOAD_BAL_HOSTNAME: { get_param: load_bal_hostname }\n            P_LOAD_BAL_IP: { get_attr: [ lb_vip_floating_ip, floating_ip_address ] }\n            P_BROKER_HOSTNAME: { get_param: broker1_hostname }\n            P_BROKER2_HOSTNAME: { get_param: broker2_hostname }\n            P_BROKER3_HOSTNAME: { get_param: broker3_hostname }\n            P_NODE1_HOSTNAME: { get_param: node1_hostname }\n            P_NODE2_HOSTNAME: { get_param: node2_hostname }\n            P_NODE3_HOSTNAME: { get_param: node3_hostname }\n            P_NAMED_HOSTNAME: { get_param: named_hostname }\n            P_NAMED_IP: { get_attr: [ broker1_floating_ip, floating_ip_address ] }\n            P_UPSTREAM_DNS_IP: { get_param: upstream_dns_ip }\n            P_REPLICANTS: { get_param: replicants }\n            P_CONF_INSTALL_METHOD: { get_param: install_method}\n            P_CONF_RH_USER: { get_param: rh_reg_user}\n            P_CONF_RH_PASS: { get_param: rh_reg_pass}\n            P_CONF_RH_REG_POOL: { get_param: rh_reg_pool}\n            P_CONF_RH_REG_ACTKEY: { get_param: rh_reg_act_key}\n            P_CONF_RHN_REG_OPTS: { get_param: rh_reg_opts}\n            P_CONF_OSE_REPOS_BASE: { get_param: openshift_repo_base}\n            P_CONF_OSE_EXTRA_REPOS_BASE: { get_param: openshift_extra_repo_base}\n            P_CONF_JBOSS_REPO_BASE: { get_param: jboss_repo_base}\n            P_CONF_RHEL_REPO: { get_param: rhel_repo_base}\n            P_CONF_RHEL_OPTIONAL_REPO: { get_param: rhel_opt_repo_base}\n            P_OSE_VERSION: { get_param: ose_version }\n            P_CONF_OPENSHIFT_USER1: { get_param: openshift_user1 }\n            P_CONF_OPENSHIFT_PASSWORD1: { get_param: openshift_pass1 }\n            P_CONF_MONGODB_BROKER_USER: { get_param: mongo_broker_user }\n            P_CONF_MONGODB_BROKER_PASSWORD: { get_param: mongo_broker_pass }\n            P_CONF_MCOLLECTIVE_USER: { get_param: mcollective_user }\n            P_CONF_MCOLLECTIVE_PASSWORD: { get_param: mcollective_pass }\n            P_CONF_ACTIVEMQ_ADMIN_PASSWORD: { get_param: activemq_admin_pass }\n            P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD: { get_param: activemq_user_pass }\n            P_BROKER_WAIT_HANDLE: { get_resource: broker1_wait_handle }\n\n###\n# Broker 2\n###\n  broker2_instance:\n    type: OS::Nova::Server\n    properties:\n      name: ose_broker2\n      image: { get_param: broker_image }\n      flavor: { get_param: broker_server_flavor }\n      availability_zone: { get_param: secondary_avail_zone }\n      key_name: { get_param: key_name }\n      networks:\n        - port: { get_resource: broker2_port }\n      security_groups: [{ get_resource: ose_broker_sec_grp }]\n      user_data:\n        str_replace:\n          template: |\n            #!/bin/bash -x\n\n            export CONF_BROKER_IP_ADDR=P_BROKER_FLOATING_IP\n            export CONF_DOMAIN=P_DOMAIN\n            export CONF_BROKER_HOSTNAME=P_BROKER_HOSTNAME\n            export CONF_NAMED_HOSTNAME=P_NAMED_HOSTNAME\n            export CONF_NAMED_IP_ADDR=P_NAMED_IP\n            export CONF_DATASTORE_REPLICANTS=P_REPLICANTS\n            export CONF_ACTIVEMQ_REPLICANTS=P_REPLICANTS\n            export CONF_INSTALL_METHOD=P_CONF_INSTALL_METHOD\n            export CONF_RHN_USER=P_CONF_RH_USER\n            export CONF_RHN_PASS=P_CONF_RH_PASS\n            export CONF_SM_REG_POOL=P_CONF_RH_REG_POOL\n            export CONF_RHN_REG_ACTKEY=P_CONF_RH_REG_ACTKEY\n            export CONF_RHN_REG_OPTS=P_CONF_RHN_REG_OPTS\n            export CONF_OSE_REPOS_BASE=P_CONF_OSE_REPOS_BASE\n            export CONF_OSE_EXTRA_REPO_BASE=P_CONF_OSE_EXTRA_REPOS_BASE\n            export CONF_JBOSS_REPO_BASE=P_CONF_JBOSS_REPO_BASE\n            export CONF_RHEL_REPO=P_CONF_RHEL_REPO\n            export CONF_RHEL_OPTIONAL_REPO=P_CONF_RHEL_OPTIONAL_REPO\n            export CONF_INSTALL_COMPONENTS=broker,activemq,datastore\n            export CONF_ACTIONS=do_all_actions\n            export CONF_OPENSHIFT_USER1=P_CONF_OPENSHIFT_USER1\n            export CONF_OPENSHIFT_PASSWORD1=P_CONF_OPENSHIFT_PASSWORD1\n            export CONF_MONGODB_BROKER_USER=P_CONF_MONGODB_BROKER_USER\n            export CONF_MONGODB_BROKER_PASSWORD=P_CONF_MONGODB_BROKER_PASSWORD\n            export CONF_MCOLLECTIVE_USER=P_CONF_MCOLLECTIVE_USER\n            export CONF_MCOLLECTIVE_PASSWORD=P_CONF_MCOLLECTIVE_PASSWORD\n            export CONF_ACTIVEMQ_ADMIN_PASSWORD=P_CONF_ACTIVEMQ_ADMIN_PASSWORD\n            export CONF_ACTIVEMQ_AMQ_USER_PASSWORD=P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD\n\n            curl -O https://raw.github.com/openshift/openshift-extras/enterprise-P_OSE_VERSION/enterprise/install-scripts/generic/openshift.sh -k\n            chmod +x ./openshift.sh\n            ./openshift.sh 2>&1 | tee /tmp/openshift.out\n            setenforce 1\n            cd /etc/init.d\n            for i in `ls cloud-*`; do chkconfig $i off; done\n            # FIXME: shouldn't need this. DIB step? selinux enabled when pkg instld? see rpm -q --scripts ruby193-rubygem-passenger-native\n            semodule -i /opt/rh/ruby193/root/usr/share/selinux/packages/ruby193-rubygem-passenger/ruby193-rubygem-passenger.pp 2>/dev/null\n            fixfiles -R ruby193-rubygem-passenger restore\n            fixfiles -R ruby193-rubygem-passenger-native restore\n            /usr/bin/cfn-signal -e 0 -s \"Broker 2 setup complete\" -i \"P_BROKER_HOSTNAME.P_DOMAIN\" \"P_BROKER_WAIT_HANDLE\"\n            reboot\n          params:\n            P_BROKER_FLOATING_IP: { get_attr: [ broker2_floating_ip, floating_ip_address ] }\n            P_DOMAIN: { get_param: domain }\n            P_HOSTS_DOMAIN: { get_param: hosts_domain }\n            P_BROKER_HOSTNAME: { get_param: broker2_hostname }\n            P_NAMED_HOSTNAME: { get_param: named_hostname }\n            P_NAMED_IP: { get_attr: [ broker1_floating_ip, floating_ip_address ] }\n            P_REPLICANTS: { get_param: replicants }\n            P_CONF_INSTALL_METHOD: { get_param: install_method}\n            P_CONF_RH_USER: { get_param: rh_reg_user}\n            P_CONF_RH_PASS: { get_param: rh_reg_pass}\n            P_CONF_RH_REG_POOL: { get_param: rh_reg_pool}\n            P_CONF_RH_REG_ACTKEY: { get_param: rh_reg_act_key}\n            P_CONF_RHN_REG_OPTS: { get_param: rh_reg_opts}\n            P_CONF_OSE_REPOS_BASE: { get_param: openshift_repo_base}\n            P_CONF_OSE_EXTRA_REPOS_BASE: { get_param: openshift_extra_repo_base}\n            P_CONF_JBOSS_REPO_BASE: { get_param: jboss_repo_base}\n            P_CONF_RHEL_REPO: { get_param: rhel_repo_base}\n            P_CONF_RHEL_OPTIONAL_REPO: { get_param: rhel_opt_repo_base}\n            P_OSE_VERSION: { get_param: ose_version }\n            P_CONF_OPENSHIFT_USER1: { get_param: openshift_user1 }\n            P_CONF_OPENSHIFT_PASSWORD1: { get_param: openshift_pass1 }\n            P_CONF_MONGODB_BROKER_USER: { get_param: mongo_broker_user }\n            P_CONF_MONGODB_BROKER_PASSWORD: { get_param: mongo_broker_pass }\n            P_CONF_MCOLLECTIVE_USER: { get_param: mcollective_user }\n            P_CONF_MCOLLECTIVE_PASSWORD: { get_param: mcollective_pass }\n            P_CONF_ACTIVEMQ_ADMIN_PASSWORD: { get_param: activemq_admin_pass }\n            P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD: { get_param: activemq_user_pass }\n            P_BROKER_WAIT_HANDLE: { get_resource: broker_wait_handle}\n\n###\n# Broker3\n###\n  broker3_instance:\n    type: OS::Nova::Server\n    properties:\n      name: ose_broker3\n      image: { get_param: broker_image }\n      flavor: { get_param: broker_server_flavor }\n      availability_zone: { get_param: primary_avail_zone }\n      key_name: { get_param: key_name }\n      networks:\n        - port: { get_resource: broker3_port }\n      security_groups: [{ get_resource: ose_broker_sec_grp }]\n      user_data:\n        str_replace:\n          template: |\n            #!/bin/bash -x\n\n            export CONF_BROKER_IP_ADDR=P_BROKER_FLOATING_IP\n            export CONF_DOMAIN=P_DOMAIN\n            export CONF_BROKER_HOSTNAME=P_BROKER_HOSTNAME\n            export CONF_NAMED_HOSTNAME=P_NAMED_HOSTNAME\n            export CONF_NAMED_IP_ADDR=P_NAMED_IP\n            export CONF_DATASTORE_REPLICANTS=P_REPLICANTS\n            export CONF_ACTIVEMQ_REPLICANTS=P_REPLICANTS\n            export CONF_INSTALL_METHOD=P_CONF_INSTALL_METHOD\n            export CONF_RHN_USER=P_CONF_RH_USER\n            export CONF_RHN_PASS=P_CONF_RH_PASS\n            export CONF_SM_REG_POOL=P_CONF_RH_REG_POOL\n            export CONF_RHN_REG_ACTKEY=P_CONF_RH_REG_ACTKEY\n            export CONF_RHN_REG_OPTS=P_CONF_RHN_REG_OPTS\n            export CONF_OSE_REPOS_BASE=P_CONF_OSE_REPOS_BASE\n            export CONF_OSE_EXTRA_REPO_BASE=P_CONF_OSE_EXTRA_REPOS_BASE\n            export CONF_JBOSS_REPO_BASE=P_CONF_JBOSS_REPO_BASE\n            export CONF_RHEL_REPO=P_CONF_RHEL_REPO\n            export CONF_RHEL_OPTIONAL_REPO=P_CONF_RHEL_OPTIONAL_REPO\n            export CONF_INSTALL_COMPONENTS=broker,activemq,datastore\n            export CONF_ACTIONS=do_all_actions\n            export CONF_OPENSHIFT_USER1=P_CONF_OPENSHIFT_USER1\n            export CONF_OPENSHIFT_PASSWORD1=P_CONF_OPENSHIFT_PASSWORD1\n            export CONF_MONGODB_BROKER_USER=P_CONF_MONGODB_BROKER_USER\n            export CONF_MONGODB_BROKER_PASSWORD=P_CONF_MONGODB_BROKER_PASSWORD\n            export CONF_MCOLLECTIVE_USER=P_CONF_MCOLLECTIVE_USER\n            export CONF_MCOLLECTIVE_PASSWORD=P_CONF_MCOLLECTIVE_PASSWORD\n            export CONF_ACTIVEMQ_ADMIN_PASSWORD=P_CONF_ACTIVEMQ_ADMIN_PASSWORD\n            export CONF_ACTIVEMQ_AMQ_USER_PASSWORD=P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD\n\n            curl -O https://raw.github.com/openshift/openshift-extras/enterprise-P_OSE_VERSION/enterprise/install-scripts/generic/openshift.sh -k\n            chmod +x ./openshift.sh\n            ./openshift.sh 2>&1 | tee /tmp/openshift.out\n            setenforce 1\n            cd /etc/init.d\n            for i in `ls cloud-*`; do chkconfig $i off; done\n            # FIXME: shouldn't need this. DIB step? selinux enabled when pkg instld? see rpm -q --scripts ruby193-rubygem-passenger-native\n            semodule -i /opt/rh/ruby193/root/usr/share/selinux/packages/ruby193-rubygem-passenger/ruby193-rubygem-passenger.pp 2>/dev/null\n            fixfiles -R ruby193-rubygem-passenger restore\n            fixfiles -R ruby193-rubygem-passenger-native restore\n            /usr/bin/cfn-signal -e 0 -s \"Broker 3 setup complete\" -i \"P_BROKER_HOSTNAME.P_DOMAIN\" \"P_BROKER_WAIT_HANDLE\"\n            reboot\n          params:\n            P_BROKER_FLOATING_IP: { get_attr: [ broker3_floating_ip, floating_ip_address ] }\n            P_DOMAIN: { get_param: domain }\n            P_HOSTS_DOMAIN: { get_param: hosts_domain }\n            P_BROKER_HOSTNAME: { get_param: broker3_hostname }\n            P_NAMED_HOSTNAME: { get_param: named_hostname }\n            P_NAMED_IP: { get_attr: [ broker1_floating_ip, floating_ip_address ] }\n            P_REPLICANTS: { get_param: replicants }\n            P_CONF_INSTALL_METHOD: { get_param: install_method}\n            P_CONF_RH_USER: { get_param: rh_reg_user}\n            P_CONF_RH_PASS: { get_param: rh_reg_pass}\n            P_CONF_RH_REG_POOL: { get_param: rh_reg_pool}\n            P_CONF_RH_REG_ACTKEY: { get_param: rh_reg_act_key}\n            P_CONF_RHN_REG_OPTS: { get_param: rh_reg_opts}\n            P_CONF_OSE_REPOS_BASE: { get_param: openshift_repo_base}\n            P_CONF_OSE_EXTRA_REPOS_BASE: { get_param: openshift_extra_repo_base}\n            P_CONF_JBOSS_REPO_BASE: { get_param: jboss_repo_base}\n            P_CONF_RHEL_REPO: { get_param: rhel_repo_base}\n            P_CONF_RHEL_OPTIONAL_REPO: { get_param: rhel_opt_repo_base}\n            P_OSE_VERSION: { get_param: ose_version }\n            P_CONF_OPENSHIFT_USER1: { get_param: openshift_user1 }\n            P_CONF_OPENSHIFT_PASSWORD1: { get_param: openshift_pass1 }\n            P_CONF_MONGODB_BROKER_USER: { get_param: mongo_broker_user }\n            P_CONF_MONGODB_BROKER_PASSWORD: { get_param: mongo_broker_pass }\n            P_CONF_MCOLLECTIVE_USER: { get_param: mcollective_user }\n            P_CONF_MCOLLECTIVE_PASSWORD: { get_param: mcollective_pass }\n            P_CONF_ACTIVEMQ_ADMIN_PASSWORD: { get_param: activemq_admin_pass }\n            P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD: { get_param: activemq_user_pass }\n            P_BROKER_WAIT_HANDLE: { get_resource: broker_wait_handle}\n\n###\n# Node\n###\n  node1_instance:\n    type: OpenShift::Node::Server\n    properties:\n      key_name: { get_param: key_name }\n      domain: { get_param: domain }\n      hosts_domain: { get_param: hosts_domain }\n      broker1_hostname: { get_param: broker1_hostname }\n      broker1_floating_ip: { get_attr: [ broker1_floating_ip, floating_ip_address ] }\n      node_hostname: { get_param: node1_hostname }\n      load_bal_hostname: { get_param: load_bal_hostname }\n      node_image: { get_param: node_image }\n      replicants: { get_param: replicants }\n      cartridges: { get_param: cartridges }\n      install_method: { get_param: install_method }\n      rh_reg_user: { get_param: rh_reg_user }\n      rh_reg_pass: { get_param: rh_reg_pass }\n      rh_reg_act_key: { get_param: rh_reg_act_key }\n      rh_reg_opts: { get_param: rh_reg_opts }\n      rhel_repo_base: { get_param: rhel_repo_base }\n      rhel_opt_repo_base: { get_param: rhel_opt_repo_base }\n      openshift_repo_base: { get_param: openshift_repo_base }\n      openshift_extra_repo_base: { get_param: openshift_extra_repo_base }\n      jboss_repo_base: { get_param: jboss_repo_base }\n      rhscl_repo_base: { get_param: rhscl_repo_base }\n      public_net_id: { get_param: public_net_id }\n      private_net_id: { get_param: private_net_id }\n      private_subnet_id: { get_param: private_subnet_id }\n      mcollective_user: { get_param: mcollective_user }\n      mcollective_pass: { get_param: mcollective_pass }\n      activemq_admin_pass: { get_param: activemq_admin_pass }\n      activemq_user_pass: { get_param: activemq_user_pass }\n      avail_zone: { get_param: primary_avail_zone }\n      node_server_flavor: { get_param: node_server_flavor }\n\n  node2_instance:\n    type: OpenShift::Node::Server\n    properties:\n      key_name: { get_param: key_name }\n      domain: { get_param: domain }\n      hosts_domain: { get_param: hosts_domain }\n      broker1_hostname: { get_param: broker1_hostname }\n      broker1_floating_ip: { get_attr: [ broker1_floating_ip, floating_ip_address ] }\n      node_hostname: { get_param: node2_hostname }\n      load_bal_hostname: { get_param: load_bal_hostname }\n      node_image: { get_param: node_image }\n      replicants: { get_param: replicants }\n      cartridges: { get_param: cartridges }\n      install_method: { get_param: install_method }\n      rh_reg_user: { get_param: rh_reg_user }\n      rh_reg_pass: { get_param: rh_reg_pass }\n      rh_reg_act_key: { get_param: rh_reg_act_key }\n      rh_reg_opts: { get_param: rh_reg_opts }\n      rhel_repo_base: { get_param: rhel_repo_base }\n      rhel_opt_repo_base: { get_param: rhel_opt_repo_base }\n      openshift_repo_base: { get_param: openshift_repo_base }\n      openshift_extra_repo_base: { get_param: openshift_extra_repo_base }\n      jboss_repo_base: { get_param: jboss_repo_base }\n      rhscl_repo_base: { get_param: rhscl_repo_base }\n      public_net_id: { get_param: public_net_id }\n      private_net_id: { get_param: private_net_id }\n      private_subnet_id: { get_param: private_subnet_id }\n      mcollective_user: { get_param: mcollective_user }\n      mcollective_pass: { get_param: mcollective_pass }\n      activemq_admin_pass: { get_param: activemq_admin_pass }\n      activemq_user_pass: { get_param: activemq_user_pass }\n      avail_zone: { get_param: secondary_avail_zone }\n      node_server_flavor: { get_param: node_server_flavor }\n\n  node3_instance:\n    type: OpenShift::Node::Server\n    properties:\n      key_name: { get_param: key_name }\n      domain: { get_param: domain }\n      hosts_domain: { get_param: hosts_domain }\n      broker1_hostname: { get_param: broker1_hostname }\n      broker1_floating_ip: { get_attr: [ broker1_floating_ip, floating_ip_address ] }\n      node_hostname: { get_param: node3_hostname }\n      load_bal_hostname: { get_param: load_bal_hostname }\n      node_image: { get_param: node_image }\n      replicants: { get_param: replicants }\n      cartridges: { get_param: cartridges }\n      install_method: { get_param: install_method }\n      rh_reg_user: { get_param: rh_reg_user }\n      rh_reg_pass: { get_param: rh_reg_pass }\n      rh_reg_act_key: { get_param: rh_reg_act_key }\n      rh_reg_opts: { get_param: rh_reg_opts }\n      rhel_repo_base: { get_param: rhel_repo_base }\n      rhel_opt_repo_base: { get_param: rhel_opt_repo_base }\n      openshift_repo_base: { get_param: openshift_repo_base }\n      openshift_extra_repo_base: { get_param: openshift_extra_repo_base }\n      jboss_repo_base: { get_param: jboss_repo_base }\n      rhscl_repo_base: { get_param: rhscl_repo_base }\n      public_net_id: { get_param: public_net_id }\n      private_net_id: { get_param: private_net_id }\n      private_subnet_id: { get_param: private_subnet_id }\n      mcollective_user: { get_param: mcollective_user }\n      mcollective_pass: { get_param: mcollective_pass }\n      activemq_admin_pass: { get_param: activemq_admin_pass }\n      activemq_user_pass: { get_param: activemq_user_pass }\n      avail_zone: { get_param: secondary_avail_zone }\n      node_server_flavor: { get_param: node_server_flavor }\n\noutputs:\n  console_url:\n    description: OpenShift Enterprise console URL\n    value:\n      str_replace:\n        template: |\n          https://host.domain/console\n        params:\n          host: { get_param: load_bal_hostname }\n          domain: { get_param: domain }\n  default_user:\n    description: OpenShift Enterprise default user\n    value: { get_param: openshift_user1 }\n  load_balancer_floating_ip:\n    description: load balancer floating IP address\n    value: { get_attr: [ lb_vip_floating_ip, floating_ip_address ] }\n", "heat_template_version: 2013-05-23\ndescription: >\n  Template (HOT) for deploying an OpenShift node with attached cinder volume\n  with floating IP. May be used stand-alone for scaling out nodes or as part of\n  the HA nested stack.\nparameter_groups:\n- label: General parameters\n  description: General OpenShift parameters\n  parameters:\n  - broker1_hostname\n  - broker1_floating_ip\n  - node_hostname\n  - load_bal_hostname\n  - node_image\n  - node_server_flavor\n- label: Red Hat subscription\n  description: >\n    Red Hat Subscription Manager (RHSM) or Red Hat Network (RHN) parameters\n  parameters:\n  - install_method\n  - rh_reg_user\n  - rh_reg_pass\n  - rh_reg_pool\n  - rh_reg_act_key\n  - rh_reg_opts\n- label: Networking parameters\n  description: Networking-related parameters\n  parameters:\n  - domain\n  - hosts_domain\n  - named_hostname\n  - named_ip\n  - replicants\n  - cartridges\n  - public_net_id\n  - private_net_id\n  - private_subnet_id\n- label: Credentials\n  description: >\n    Username and password parameters for OpenShift and dependent service\n  parameters:\n  - mcollective_user\n  - mcollective_pass\n  - activemq_admin_pass\n  - activemq_user_pass\nparameters:\n  key_name:\n    description: Name of an existing keypair to enable SSH access to the instances\n    type: string\n  domain:\n    description: Your DNS domain\n    type: string\n  hosts_domain:\n    description: Openshift hosts domain\n    type: string\n  avail_zone:\n    description: >\n      Availability zone to ensure distribution of brokers and nodes\n    type: string\n    default: nova\n  node_server_flavor:\n    description: Flavor of node servers\n    type: string\n    default: m1.medium\n  node_vol_size:\n    description: Node cinder volume size (GB)\n    type: number\n    default: 12\n  broker1_hostname:\n    description: Broker 1 hostname\n    type: string\n    default: broker1\n  broker1_floating_ip:\n    description: Broker 1 floating ip\n    type: string\n  node_hostname:\n    description: Node hostname\n    type: string\n    default: node\n  load_bal_hostname:\n    description: Load balancer hostname\n    type: string\n    default: broker\n  node_image:\n    description: Node image name\n    type: string\n    default: RHEL65-x86_64-node\n  install_method:\n    description: Installation method (yum rhsm rhn)\n    type: string\n    default: rhsm\n    constraints:\n    - allowed_values: [yum, rhsm, rhn]\n  rh_reg_user:\n    description: Red Hat registration username\n    type: string\n    default: \"\"\n  rh_reg_pass:\n    description: Red Hat registration password\n    type: string\n    default: \"\"\n    hidden: true\n  rh_reg_pool:\n    description: Pool ID for OpenShift subscription\n    type: string\n    default: \"\"\n  rh_reg_act_key:\n    description: Optional RHN activation key for OpenShift subscription\n    type: string\n    default: \"\"\n  rh_reg_opts:\n    description: RHN options, e.g. --serverUrl=http://my.sat.server.com/XMLRPC\n    type: string\n    default: \"\"\n  rhel_repo_base:\n    description: RHEL Repository Base URL\n    type: string\n    default: \"\"\n  openshift_extra_repo_base:\n    description: OSE Extra Repository Base URL\n    type: string\n    default: \"\"\n  rhscl_repo_base:\n    description: Red Hat Software Collections Repository Base URL\n    type: string\n    default: \"\"\n  rhel_opt_repo_base:\n    description: RHEL Optional Repository Base URL\n    type: string\n    default: \"\"\n  openshift_repo_base:\n    description: OSE Repository Base URL\n    type: string\n    default: \"\"\n  jboss_repo_base:\n    description: JBoss Repository Base URL\n    type: string\n    default: \"\"\n  named_hostname:\n    description: named server hostname\n    type: string\n    default: broker1\n  named_ip:\n    description: named server IP address\n    type: string\n    default: \"\"\n  upstream_dns_ip:\n    description: Upstream DNS IP address for zone transfer\n    type: string\n    default: \"\"\n  replicants:\n    description: >\n      Comma-separated list (no spaces) of broker hosts (FQDN) running ActiveMQ and MongoDB\n    type: string\n  cartridges:\n    description: >\n      Cartridges to install. \"all\" for all cartridges; \"standard\" for all cartridges except for JBossEWS or JBossEAP\n    type: string\n    default: standard\n  public_net_id:\n    type: string\n    description: >\n      ID of public network for which floating IP addresses will be allocated\n  private_net_id:\n    type: string\n    description: ID of private network into which servers get deployed\n  private_subnet_id:\n    type: string\n    description: ID of private sub network into which servers get deployed\n  mcollective_user:\n    description: MCollective username\n    type: string\n    default: mcollective\n  mcollective_pass:\n    description: MCollective password\n    type: string\n    hidden: true\n  activemq_admin_pass:\n    description: ActiveMQ admin user password\n    type: string\n    hidden: true\n  activemq_user_pass:\n    description: ActiveMQ user password\n    type: string\n    hidden: true\n  ose_version:\n    description: The version of OpenShift Enterprise to install\n    type: string\n    default: \"2.0\"\n    constraints:\n    - allowed_values: [\"1.2\", \"2.0\"]\n\nresources:\n  ose_node_sec_grp:\n    type: AWS::EC2::SecurityGroup\n    properties:\n      GroupDescription: Node firewall rules\n      SecurityGroupIngress:\n      - {IpProtocol: tcp, FromPort: '22', ToPort: '22', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: udp, FromPort: '53', ToPort: '53', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '53', ToPort: '53', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '80', ToPort: '80', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '443', ToPort: '443', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '8000', ToPort: '8000', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '8443', ToPort: '8443', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '2303', ToPort: '2308', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '35531', ToPort: '65535', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '27017', ToPort: '27017', CidrIp: 0.0.0.0/0}\n\n  node_port:\n    type: OS::Neutron::Port\n    properties:\n      security_groups: [{ get_resource: ose_node_sec_grp }]\n      network_id: { get_param: private_net_id }\n      fixed_ips:\n        - subnet_id: { get_param: private_subnet_id }\n\n  node_floating_ip:\n    type: OS::Neutron::FloatingIP\n    properties:\n      floating_network_id: { get_param: public_net_id }\n      port_id: { get_resource: node_port }\n\n###\n# cinder volume\n###\n  node_vol:\n    type: OS::Cinder::Volume\n    properties:\n      name: node_volume\n      description: persistent storage volume for node\n      size: { get_param: node_vol_size }\n\n  node_attach_vol:\n    type: OS::Cinder::VolumeAttachment\n    properties:\n      instance_uuid: { get_resource: node_instance }\n      mountpoint: \"/dev/vdb\"\n      volume_id: { get_resource: node_vol }\n\n###\n# Node\n###\n  node_instance:\n    type: OS::Nova::Server\n    properties:\n      name: ose_node\n      image: { get_param: node_image }\n      flavor: { get_param: node_server_flavor }\n      availability_zone: { get_param: avail_zone }\n      key_name: { get_param: key_name }\n      networks:\n        - port: { get_resource: node_port }\n      security_groups: [{ get_resource: ose_node_sec_grp }]\n      user_data:\n        str_replace:\n          template: |\n            #!/bin/bash -x\n\n            export CONF_BROKER_IP_ADDR=P_BROKER_FLOATING_IP\n            export CONF_NODE_IP_ADDR=P_NODE_FLOATING_IP\n            export CONF_DOMAIN=P_DOMAIN\n            export CONF_BROKER_HOSTNAME=P_LOAD_BAL_HOSTNAME\n            export CONF_NODE_HOSTNAME=P_NODE_HOSTNAME\n            export CONF_NAMED_HOSTNAME=P_NAMED_HOSTNAME\n            export CONF_NAMED_IP_ADDR=P_NAMED_IP\n            export CONF_DATASTORE_REPLICANTS=P_REPLICANTS\n            export CONF_ACTIVEMQ_REPLICANTS=P_REPLICANTS\n            export CONF_CARTRIDGES=P_CONF_CARTRIDGES\n            export CONF_INSTALL_METHOD=P_CONF_INSTALL_METHOD\n            export CONF_RHN_USER=P_CONF_RH_USER\n            export CONF_RHN_PASS=P_CONF_RH_PASS\n            export CONF_SM_REG_POOL=P_CONF_RH_REG_POOL\n            export CONF_RHN_REG_ACTKEY=P_CONF_RH_REG_ACTKEY\n            export CONF_RHN_REG_OPTS=P_CONF_RHN_REG_OPTS\n            export CONF_OSE_REPOS_BASE=P_CONF_OSE_REPOS_BASE\n            export CONF_OSE_EXTRA_REPO_BASE=P_CONF_OSE_EXTRA_REPOS_BASE\n            export CONF_JBOSS_REPO_BASE=P_CONF_JBOSS_REPO_BASE\n            export CONF_RHEL_REPO=P_CONF_RHEL_REPO\n            export CONF_RHSCL_REPO_BASE=P_CONF_RHSCL_REPO\n            export CONF_RHEL_OPTIONAL_REPO=P_CONF_RHEL_OPTIONAL_REPO\n            export CONF_INSTALL_COMPONENTS=node\n            export CONF_ACTIONS=do_all_actions\n            export CONF_MCOLLECTIVE_USER=P_CONF_MCOLLECTIVE_USER\n            export CONF_MCOLLECTIVE_PASSWORD=P_CONF_MCOLLECTIVE_PASSWORD\n            export CONF_ACTIVEMQ_ADMIN_PASSWORD=P_CONF_ACTIVEMQ_ADMIN_PASSWORD\n            export CONF_ACTIVEMQ_AMQ_USER_PASSWORD=P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD\n\n            # configure OSE\n            curl -O https://raw.github.com/openshift/openshift-extras/enterprise-P_OSE_VERSION/enterprise/install-scripts/generic/openshift.sh -k\n            chmod +x ./openshift.sh\n            ./openshift.sh 2>&1 | tee /tmp/openshift.out\n            setenforce 1\n            cd /etc/init.d\n            for i in `ls cloud-*`; do chkconfig $i off; done\n\n            # configure attached storage and move ose dirs\n            parted --script /dev/vdb -- mklabel msdos\n            parted --script /dev/vdb -- mkpart primary 1024 5G\n            parted --script /dev/vdb -- mkpart primary 5G -1s\n            partx -a /dev/vdb\n            mkfs.ext4 /dev/vdb1\n            mkfs.ext4 /dev/vdb2\n            mkdir /var/lib/node_share\n            mount /dev/vdb1 /var/lib/node_share\n            mkdir /var/lib/node_share/etc_openshift\n            service ruby193-mcollective stop\n            shopt -s dotglob\n            mv /etc/openshift/* /var/lib/node_share/etc_openshift\n            chcon --reference /etc/openshift /var/lib/node_share/etc_openshift\n            echo \"/dev/vdb1 /var/lib/node_share ext4 defaults\" >> /etc/fstab\n            echo \"/var/lib/node_share/etc_openshift /etc/openshift none bind,auto\" >> /etc/fstab\n            mount /etc/openshift\n            mount /dev/vdb2 /mnt\n            mv /var/lib/openshift/* /mnt\n            chcon --reference /var/lib/openshift /mnt\n            umount /mnt\n            echo \"/dev/vdb2 /var/lib/openshift ext4 usrquota,defaults\" >> /etc/fstab\n            mount /var/lib/openshift\n            quotacheck --create-files --no-remount --user --group /var/lib/openshift\n            restorecon /var/lib/openshift/aquota.user\n            quotaon /var/lib/openshift\n            service ruby193-mcollective start\n            reboot\n          params:\n            P_BROKER_FLOATING_IP: { get_param: broker1_floating_ip }\n            P_NODE_FLOATING_IP: { get_attr: [ node_floating_ip, floating_ip_address ] }\n            P_DOMAIN: { get_param: domain }\n            P_HOSTS_DOMAIN: { get_param: hosts_domain }\n            P_LOAD_BAL_HOSTNAME: { get_param: load_bal_hostname }\n            P_NODE_HOSTNAME: { get_param: node_hostname }\n            P_NAMED_HOSTNAME: { get_param: named_hostname }\n            P_NAMED_IP: { get_param: broker1_floating_ip }\n            P_REPLICANTS: { get_param: replicants }\n            P_CONF_CARTRIDGES: { get_param: cartridges }\n            P_CONF_INSTALL_METHOD: { get_param: install_method}\n            P_CONF_RH_USER: { get_param: rh_reg_user}\n            P_CONF_RH_PASS: { get_param: rh_reg_pass}\n            P_CONF_RH_REG_POOL: { get_param: rh_reg_pool}\n            P_CONF_RH_REG_ACTKEY: { get_param: rh_reg_act_key}\n            P_CONF_RHN_REG_OPTS: { get_param: rh_reg_opts}\n            P_CONF_OSE_REPOS_BASE: { get_param: openshift_repo_base}\n            P_CONF_OSE_EXTRA_REPOS_BASE: { get_param: openshift_extra_repo_base}\n            P_CONF_JBOSS_REPO_BASE: { get_param: jboss_repo_base}\n            P_CONF_RHEL_REPO: { get_param: rhel_repo_base}\n            P_CONF_RHSCL_REPO: { get_param: rhscl_repo_base}\n            P_CONF_RHEL_OPTIONAL_REPO: { get_param: rhel_opt_repo_base }\n            P_OSE_VERSION: { get_param: ose_version }\n            P_CONF_MCOLLECTIVE_USER: { get_param: mcollective_user }\n            P_CONF_MCOLLECTIVE_PASSWORD: { get_param: mcollective_pass }\n            P_CONF_ACTIVEMQ_ADMIN_PASSWORD: { get_param: activemq_admin_pass }\n            P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD: { get_param: activemq_user_pass }\n\noutputs:\n  node_floating_ip:\n    value: { get_attr: [ node_floating_ip, floating_ip_address ] }\n", "heat_template_version: 2013-05-23\ndescription: Template for setting up an OpenShift Origin environment\nparameters:\n  dns_prefix:\n    description: your DNS prefix\n    type: string\n    default: example.com\n  dns_server:\n    description: upstream DNS server\n    type: string\n    default: 8.8.8.8\n  key_name:\n    description: name of a key pair to enable SSH access to the instances\n    type: string\n  instance_type:\n    description: instance type for server\n    type: string\n    default: m1.small\n    constraints:\n      - allowed_values: [m1.tiny, m1.small, m1.medium, m1.large, m1.xlarge]\n        description: must be a valid instance type\n  user_name:\n    description: user name for OpenShift login\n    type: string\n    default: openshift\n  password:\n    description: password for OpenShift login\n    type: string\n    default: password\nresources:\n  broker_wait_handle:\n    type: AWS::CloudFormation::WaitConditionHandle\n\n  broker_wait_condition:\n    type: AWS::CloudFormation::WaitCondition\n    depends_on: OpenShiftBroker\n    properties:\n      Handle:\n        get_resource: broker_wait_handle\n      Timeout: 6000\n\n  OpenShiftSecurityGroup:\n    type: AWS::EC2::SecurityGroup\n    properties:\n      GroupDescription: Standard firewall rules\n      SecurityGroupIngress:\n      - {IpProtocol: udp, FromPort: '53', ToPort: '53', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '53', ToPort: '53', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '22', ToPort: '22', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '80', ToPort: '80', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '443', ToPort: '443', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '8000', ToPort: '8000', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '8443', ToPort: '8443', CidrIp: 0.0.0.0/0}\n\n  OpenShiftBroker:\n    type: OS::Nova::Server\n    properties:\n      image: centos-6.5-x86_64-cfntools\n      flavor: {get_param: instance_type}\n      key_name: {get_param: key_name}\n      security_groups: [ {get_resource: OpenShiftSecurityGroup} ]\n      user_data:\n        str_replace:\n          template: |\n            #!/bin/bash -v\n\n            yum -y install http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\n            yum -y install http://yum.puppetlabs.com/el/6/products/x86_64/puppetlabs-release-6-10.noarch.rpm\n            yum -y install augeas\n\n            augtool setm /files/etc/yum.repos.d/puppetlabs.repo/* exclude '*mcollective*\\ activemq'\n            augtool set /files/etc/sysconfig/network/HOSTNAME broker.$dns_prefix$\n\n            yum install -y puppet facter tar bind\n            mkdir -p /etc/puppet/modules && cd /etc/puppet/modules\n            puppet module install openshift/openshift_origin --version 3.0.1\n\n            /usr/sbin/dnssec-keygen -a HMAC-MD5 -b 512 -n USER -r /dev/urandom -K /var/named $dns_prefix$\n            export DNS_SEC_KEY=\"`cat /var/named/K$dns_prefix$.*.key  | awk '{print $8}'`\"\n\n            cat << EOF > configure_origin.pp\n            class { 'openshift_origin' :\n                roles => ['broker','named','activemq','datastore'],\n                broker_hostname => 'broker.$dns_prefix$',\n                named_hostname => 'broker.$dns_prefix$',\n                datastore_hostname => 'broker.$dns_prefix$',\n                activemq_hostname => 'broker.$dns_prefix$',\n                bind_key => '${DNS_SEC_KEY}',\n                domain => '$dns_prefix$',\n                register_host_with_named => true,\n                conf_named_upstream_dns => ['$dns_server$'],\n                broker_auth_plugin => 'htpasswd',\n                openshift_user1 => '$user_name$',\n                openshift_password1 => '$password$',\n                development_mode => true,\n            }\n            EOF\n\n            puppet apply --verbose configure_origin.pp | tee /var/log/configure_origin.log\n            /usr/bin/cfn-signal -e 0 --data \"${DNS_SEC_KEY}\" -r \"Broker setup complete\" \"$broker_wait_handle$\"\n            reboot\n          params:\n            $dns_prefix$: { get_param: dns_prefix }\n            $dns_server$: { get_param: dns_server }\n            $user_name$: { get_param: user_name }\n            $password$: { get_param: password }\n            $broker_wait_handle$: { get_resource: broker_wait_handle }\n\n  OpenShiftNode:\n    type: OS::Nova::Server\n    depends_on: broker_wait_condition\n    properties:\n      image: centos-6.5-x86_64-cfntools\n      flavor: {get_param: instance_type}\n      key_name: {get_param: key_name}\n      security_groups: [ {get_resource: OpenShiftSecurityGroup} ]\n      user_data:\n        str_replace:\n          template: |\n            #!/bin/bash -v\n\n            yum -y install http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\n            yum -y install http://yum.puppetlabs.com/el/6/products/x86_64/puppetlabs-release-6-10.noarch.rpm\n            yum -y install augeas\n\n            augtool setm /files/etc/yum.repos.d/puppetlabs.repo/* exclude '*mcollective*\\ activemq'\n            augtool set /files/etc/sysconfig/network/HOSTNAME node.$dns_prefix$\n\n            yum install -y puppet facter tar bind-utils\n            mkdir -p /etc/puppet/modules && cd /etc/puppet/modules\n            puppet module install openshift/openshift_origin --version 3.0.1\n\n            export DNS_SEC_KEY=\"`python -c 'print $dns_sec_key$.values().pop()'`\"\n            export BROKER_IP=\"$broker_ip$\"\n\n            cat << EOF > configure_origin.pp\n            class { 'openshift_origin' :\n                roles => ['node'],\n                named_ip_addr => '${BROKER_IP}',\n                bind_key => '${DNS_SEC_KEY}',\n                domain => '$dns_prefix$',\n                register_host_with_named => true,\n                broker_hostname => 'broker.$dns_prefix$',\n                activemq_hostname => 'broker.$dns_prefix$',\n                node_hostname => 'node.$dns_prefix$',\n                install_method => 'yum',\n                jenkins_repo_base => 'http://pkg.jenkins-ci.org/redhat',\n                development_mode => true,\n            }\n            EOF\n\n            puppet apply --verbose configure_origin.pp | tee /var/log/configure_origin.log\n            reboot\n          params:\n            $dns_prefix$: { get_param: dns_prefix }\n            $dns_server$: { get_param: dns_server }\n            $dns_sec_key$: { get_attr: [ broker_wait_condition, Data ] }\n            $broker_ip$: { get_attr: [ OpenShiftBroker, first_address ] }\n\n", "heat_template_version: 2013-05-23\ndescription: Template for setting up an OpenShift Origin environment\nparameters:\n  dns_prefix:\n    description: your DNS prefix\n    type: string\n    default: example.com\n  dns_server:\n    description: upstream DNS server\n    type: string\n    default: 8.8.8.8\n  key_name:\n    description: name of a key pair to enable SSH access to the instances\n    type: string\n  instance_type:\n    description: instance type for server\n    type: string\n    default: m1.small\n    constraints:\n      - allowed_values: [m1.tiny, m1.small, m1.medium, m1.large, m1.xlarge]\n        description: must be a valid instance type\n  user_name:\n    description: user name for OpenShift login\n    type: string\n    default: openshift\n  password:\n    description: password for OpenShift login\n    type: string\n    default: password\nresources:\n  OpenShift:\n    type: OS::Nova::Server\n    properties:\n      image: centos-6.5-x86_64-cfntools\n      flavor: {get_param: instance_type}\n      key_name: {get_param: key_name}\n      user_data:\n        str_replace:\n          template: |\n            #!/bin/bash -v\n\n            yum -y install http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\n            yum -y install http://yum.puppetlabs.com/el/6/products/x86_64/puppetlabs-release-6-10.noarch.rpm\n            yum -y install augeas\n\n            augtool setm /files/etc/yum.repos.d/puppetlabs.repo/* exclude '*mcollective*\\ activemq'\n            augtool set /files/etc/sysconfig/network/HOSTNAME broker.$dns_prefix$\n\n            yum install -y puppet facter tar bind\n            mkdir -p /etc/puppet/modules && cd /etc/puppet/modules\n            puppet module install openshift/openshift_origin --version 3.0.1\n\n            /usr/sbin/dnssec-keygen -a HMAC-MD5 -b 512 -n USER -r /dev/urandom -K /var/named $dns_prefix$\n            export DNS_SEC_KEY=\"`cat /var/named/K$dns_prefix$.*.key  | awk '{print $8}'`\"\n\n            cat << EOF > configure_origin.pp\n            class { 'openshift_origin' :\n                roles => ['broker','named','activemq','datastore','node'],\n                broker_hostname => 'broker.$dns_prefix$',\n                node_hostname => 'broker.$dns_prefix$',\n                named_hostname => 'broker.$dns_prefix$',\n                datastore_hostname => 'broker.$dns_prefix$',\n                activemq_hostname => 'broker.$dns_prefix$',\n                bind_key => '${DNS_SEC_KEY}',\n                domain => '$dns_prefix$',\n                register_host_with_named => true,\n                conf_named_upstream_dns => ['$dns_server$'],\n                broker_auth_plugin => 'htpasswd',\n                openshift_user1 => '$user_name$',\n                openshift_password1 => '$password$',\n                install_method => 'yum',\n                jenkins_repo_base => 'http://pkg.jenkins-ci.org/redhat',\n                development_mode => true,\n            }\n            EOF\n\n            puppet apply --verbose configure_origin.pp | tee /var/log/configure_origin.log\n            reboot\n          params:\n            $dns_prefix$: { get_param: dns_prefix }\n            $dns_server$: { get_param: dns_server }\n            $user_name$: { get_param: user_name }\n            $password$: { get_param: password }\n\n"], "fixing_code": ["#!/bin/bash\n\nset -ex\n\n# The default version will be 1.2\nOSE_VERSION=${DIB_OSE_VERSION:=\"1.2\"}\n\nif [ \"${OSE_VERSION}\" == \"1.2\" ]; then\n  if [ -z \"${DIB_RHSM_OSE_POOL:-}\" ]; then\n  cat > /etc/yum.repos.d/openshift-client.repo <<YUM\n[openshift_client]\nname=OpenShift Client\nbaseurl=${DIB_CONF_REPO_BASE}/Client/x86_64/os/\nenabled=1\ngpgcheck=1\npriority=1\n\nYUM\n\n  cat > /etc/yum.repos.d/openshift-infrastructure.repo <<YUM\n[openshift_infrastructure]\nname=OpenShift Infrastructure\nbaseurl=${DIB_CONF_REPO_BASE}/Infrastructure/x86_64/os/\nenabled=1\ngpgcheck=1\npriority=1\n\nYUM\n  fi\nelse\n  if [ -n \"${DIB_CONF_REPO_BASE}\" ]; then\n      cat <<YUM > /etc/yum.repos.d/openshift.repo\n[openshift_client]\nname=OpenShift Client\nbaseurl=${DIB_CONF_REPO_BASE}/RHOSE-CLIENT-2.0/x86_64/os/\nenabled=1\ngpgcheck=1\npriority=10\n\n[openshift_infrastructure]\nname=OpenShift Infrastructure\nbaseurl=${DIB_CONF_REPO_BASE}/RHOSE-INFRA-2.0/x86_64/os/\nenabled=1\ngpgcheck=1\npriority=10\n\nYUM\n  fi\nfi\n\n# DIB_REG_TYPE of rhn or rhsm should be used if oo-admin-yum-validator is to be triggered\nyum install -y yum-plugin-priorities\nif [ -n \"${DIB_REG_TYPE}\" ]; then\n  # oo-admin-check-sources will ship with 2.0 however it is still compatible with OSE 1.2\n  curl -L https://api.github.com/repos/openshift/openshift-extras/tarball/master | tar -xvz\n  pushd openshift-openshift-extras*/admin/yum-validator\n    VALIDATOR_ARGS=\" --role=broker --fix-all\"\n    if [ -n ${DIB_YUM_VALIDATOR_VERSION} ]; then\n      VALIDATOR_ARGS+=\" --oo-version ${DIB_YUM_VALIDATOR_VERSION}\"\n    fi\n    ./oo-admin-yum-validator ${VALIDATOR_ARGS} || ./oo-admin-yum-validator ${VALIDATOR_ARGS}\n  popd\n  rm -rf openshift-openshift-extras*\nfi\n\nOSE_PACKAGES=\"yum-plugin-priorities openshift-origin-broker openshift-origin-broker-util rubygem-openshift-origin-msg-broker-mcollective rubygem-openshift-origin-auth-remote-user rubygem-openshift-origin-dns-nsupdate openshift-origin-console rhc activemq mongodb mongodb-server bind bind-utils mod_auth_kerb ntp ntpdate wget \"\n\n\nOSE_V1_PACKAGES=\"mcollective-client \"\n\nOSE_V2_PACKAGES=\"ruby193-mcollective-client rubygem-openshift-origin-admin-console \"\n\nif [ $OSE_VERSION == \"1.2\" ]; then\n  OSE_PACKAGES+=OSE_V1_PACKAGES\nelse\n  OSE_PACKAGES+=OSE_V2_PACKAGES\nfi\n\nyum update -y\ninstall-packages $OSE_PACKAGES --skip-broken\n", "#!/bin/bash\n\nset -ex\n\n# The default version will be 1.2\nOSE_VERSION=${DIB_OSE_VERSION:=\"1.2\"}\n\nif [ \"${OSE_VERSION}\" == \"1.2\" ]; then\n  if [ -z ${DIB_RHSM_OSE_POOL:-} ]; then\n  cat > /etc/yum.repos.d/openshift-node.repo <<YUM\n[openshift_node]\nname=OpenShift Node\nbaseurl=${DIB_CONF_REPO_BASE}/Node/x86_64/os/\nenabled=1\ngpgcheck=1\npriority=1\n\nYUM\n\n  cat > /etc/yum.repos.d/openshift-jboss.repo <<YUM\n[openshift_jbosseap]\nname=OpenShift JBossEAP\nbaseurl=${DIB_CONF_REPO_BASE}/JBoss_EAP6_Cartridge/x86_64/os/\nenabled=1\ngpgcheck=1\npriority=1\n\nYUM\n\n  cat <<YUM > /etc/yum.repos.d/jbosseap.repo\n[jbosseap]\nname=jbosseap\nbaseurl=${DIB_CONF_JBOSS_REPO_BASE}/jbeap/6/os\nenabled=1\npriority=3\ngpgcheck=1\n\nYUM\n\n  cat <<YUM > /etc/yum.repos.d/jbossews.repo\n[jbossews]\nname=jbossews\nbaseurl=${DIB_CONF_JBOSS_REPO_BASE}/jbews/2/os\nenabled=1\npriority=3\ngpgcheck=1\n\nYUM\n  fi\nelse\n  if [ -n \"${DIB_CONF_REPO_BASE}\" ]; then\n      cat <<YUM > /etc/yum.repos.d/openshift.repo\n[openshift_jbosseap]\nname=OpenShift JBossEAP\nbaseurl=${DIB_CONF_REPO_BASE}/RHOSE-JBOSSEAP-2.0/x86_64/os/\nenabled=1\ngpgcheck=1\npriority=10\n\n[openshift_node]\nname=OpenShift Node\nbaseurl=${DIB_CONF_REPO_BASE}/RHOSE-NODE-2.0/x86_64/os/\nenabled=1\ngpgcheck=1\npriority=10\nYUM\n    fi\n\n  if [ -n \"${DIB_CONF_JBOSS_REPO_BASE}\" ]; then\n      cat <<YUM > /etc/yum.repos.d/jbosseap62.repo\n[jbosseap62]\nname=jbosseap62\nbaseurl=${DIB_CONF_JBOSS_REPO_BASE}\nenabled=1\npriority=30\ngpgcheck=1\nYUM\n  fi\nfi\n\n# DIB_REG_TYPE of rhn or rhsm should be used if oo-admin-yum-validator is to be triggered\nif [ -n \"${DIB_REG_TYPE}\" ]; then\n  yum install -y yum-plugin-priorities\n  # oo-admin-check-sources will ship with 2.0 however it is still compatible with OSE 1.2\n  curl -L https://api.github.com/repos/openshift/openshift-extras/tarball/master | tar -xvz\n  pushd openshift-openshift-extras*/admin/yum-validator\n    VALIDATOR_ARGS=\" --role=node-eap --fix-all\"\n    if [[ -n \"${DIB_YUM_VALIDATOR_VERSION}\" ]]; then\n      VALIDATOR_ARGS+=\" --oo-version ${DIB_YUM_VALIDATOR_VERSION}\"\n    fi\n    ./oo-admin-yum-validator ${VALIDATOR_ARGS} || ./oo-admin-yum-validator ${VALIDATOR_ARGS}\n  popd\n  rm -rf openshift-openshift-extras*\nfi\nOSE_PACKAGES=\"yum-plugin-priorities rubygem-openshift-origin-node ruby193-rubygem-passenger-native openshift-origin-node-util policycoreutils-python openshift-origin-cartridge-cron openshift-origin-cartridge-diy openshift-origin-cartridge-haproxy openshift-origin-cartridge-jbossews openshift-origin-cartridge-jbosseap openshift-origin-cartridge-jenkins openshift-origin-cartridge-jenkins-client openshift-origin-cartridge-mysql openshift-origin-cartridge-nodejs openshift-origin-cartridge-perl openshift-origin-cartridge-php openshift-origin-cartridge-postgresql openshift-origin-cartridge-python openshift-origin-cartridge-ruby openshift-origin-msg-node-mcollective wget \"\nOSE_V1_PACKAGES=\"mcollective \"\n\n\nOSE_V2_PACKAGES=\"ruby193-mcollective rubygem-openshift-origin-container-selinux rubygem-openshift-origin-frontend-nodejs-websocket python \"\n\nif [ $OSE_VERSION == \"1.2\" ]; then\n  OSE_PACKAGES+=$OSE_V1_PACKAGES\nelse\n  OSE_PACKAGES+=$OSE_V2_PACKAGES\n  if [ -n \"${DIB_CONF_RHEL_REPO_BASE}\" ]; then\n    OSE_PACKAGES+=\"--disablerepo=rhel-6-server-rpms \"\n  fi\nfi\n\nyum update -y\ninstall-packages $OSE_PACKAGES --skip-broken\n# make sure not services were started that might hold on to mounts\nservice crond stop\n\n\n", "heat_template_version: 2013-05-23\ndescription: >\n  Nested HOT template for deploying a highly available OpenShift Enterprise\n  environment. Deploys 3 HA brokers, 3 nodes, with floating IPs, LBaaS, cinder\n  attached storage (nodes) and dynamic DNS on broker1\nparameter_groups:\n- label: General parameters\n  description: General OpenShift parameters\n  parameters:\n  - broker1_hostname\n  - broker2_hostname\n  - broker3_hostname\n  - node1_hostname\n  - node2_hostname\n  - node3_hostname\n  - load_bal_hostname\n  - broker_image\n  - node_image\n  - broker_server_flavor\n  - node_server_flavor\n- label: Red Hat subscription\n  description: >\n    Red Hat Subscription Manager (RHSM) or Red Hat Network (RHN) parameters\n  parameters:\n  - install_method\n  - rh_reg_user\n  - rh_reg_pass\n  - rh_reg_pool\n  - rh_reg_act_key\n  - rh_reg_opts\n- label: Networking parameters\n  description: Networking-related parameters\n  parameters:\n  - domain\n  - hosts_domain\n  - named_hostname\n  - named_ip\n  - upstream_dns_ip\n  - replicants\n  - cartridges\n  - public_net_id\n  - private_net_id\n  - private_subnet_id\n- label: Credentials\n  description: >\n    Username and password parameters for OpenShift and dependent service\n  parameters:\n  - openshift_user1\n  - openshift_pass1\n  - mongo_broker_user\n  - mongo_broker_pass\n  - mcollective_user\n  - mcollective_pass\n  - activemq_admin_pass\n  - activemq_user_pass\nparameters:\n  key_name:\n    description: Name of an existing keypair to enable SSH access to the instances\n    type: string\n  domain:\n    description: Your DNS domain\n    type: string\n  hosts_domain:\n    description: Openshift hosts domain\n    type: string\n  broker_server_flavor:\n    description: Flavor of broker server\n    type: string\n    default: m1.small\n  primary_avail_zone:\n    description: >\n      Primary availability zone to ensure distribution of brokers and nodes\n    type: string\n    default: nova\n  secondary_avail_zone:\n    description: >\n      Secondary availability zone to ensure distribution of brokers and nodes\n    type: string\n    default: nova\n  node_server_flavor:\n    description: Flavor of node servers\n    type: string\n    default: m1.medium\n  node_vol_size:\n    description: Node cinder volume size (GB)\n    type: number\n    default: 10\n  broker1_hostname:\n    description: Broker 1 hostname\n    type: string\n    default: broker1\n  broker2_hostname:\n    description: Broker 2 hostname\n    type: string\n    default: broker2\n  broker3_hostname:\n    description: Broker 3 hostname\n    type: string\n    default: broker3\n  node1_hostname:\n    description: Node 1 hostname\n    type: string\n    default: node1\n  node2_hostname:\n    description: Node 2 hostname\n    type: string\n    default: node2\n  node3_hostname:\n    description: Node 3 hostname\n    type: string\n    default: node3\n  load_bal_hostname:\n    description: Load balancer hostname\n    type: string\n    default: broker\n  broker_image:\n    description: Broker image name\n    type: string\n    default: RHEL65-x86_64-broker\n  node_image:\n    description: Node image name\n    type: string\n    default: RHEL65-x86_64-node\n  install_method:\n    description: Installation method (yum rhsm rhn)\n    type: string\n    default: rhsm\n    constraints:\n    - allowed_values: [yum, rhsm, rhn]\n  rh_reg_user:\n    description: Red Hat registration username\n    type: string\n    default: \"\"\n  rh_reg_pass:\n    description: Red Hat registration password\n    type: string\n    default: \"\"\n    hidden: true\n  rh_reg_pool:\n    description: Pool ID for OpenShift subscription\n    type: string\n    default: \"\"\n  rh_reg_act_key:\n    description: Optional RHN activation key for OpenShift subscription\n    type: string\n    default: \"\"\n  rh_reg_opts:\n    description: RHN options, e.g. --serverUrl=https://my.sat.server.com/XMLRPC\n    type: string\n    default: \"\"\n  rhel_repo_base:\n    description: RHEL Repository Base URL\n    type: string\n    default: \"\"\n  rhel_opt_repo_base:\n    description: RHEL Optional Repository Base URL\n    type: string\n    default: \"\"\n  rhscl_repo_base:\n    description: Red Hat Software Collections Repository Base URL\n    type: string\n    default: \"\"\n  openshift_repo_base:\n    description: OSE Repository Base URL\n    type: string\n    default: \"\"\n  openshift_extra_repo_base:\n    description: OSE Extra Repository Base URL\n    type: string\n    default: \"\"\n  jboss_repo_base:\n    description: JBoss Repository Base URL\n    type: string\n    default: \"\"\n  named_hostname:\n    description: named server hostname\n    type: string\n    default: broker1\n  named_ip:\n    description: named server IP address\n    type: string\n    default: \"\"\n  upstream_dns_ip:\n    description: Upstream DNS IP address for zone transfer\n    type: string\n    default: \"\"\n  replicants:\n    description: >\n      Comma-separated list (no spaces) of broker hosts (FQDN) running ActiveMQ and MongoDB\n    type: string\n  cartridges:\n    description: >\n      Cartridges to install. \"all\" for all cartridges; \"standard\" for all cartridges except for JBossEWS or JBossEAP\n    type: string\n    default: standard\n  public_net_id:\n    type: string\n    description: >\n      ID of public network for which floating IP addresses will be allocated\n  private_net_id:\n    type: string\n    description: ID of private network into which servers get deployed\n  private_subnet_id:\n    type: string\n    description: ID of private sub network into which servers get deployed\n  openshift_user1:\n    description: OpenShift username\n    type: string\n    default: user1\n  openshift_pass1:\n    description: OpenShift user password\n    type: string\n    hidden: true\n  mongo_broker_user:\n    description: MongoDB broker username\n    type: string\n    default: openshift\n  mongo_broker_pass:\n    description: MongoDB broker password\n    type: string\n    hidden: true\n  mcollective_user:\n    description: MCollective username\n    type: string\n    default: mcollective\n  mcollective_pass:\n    description: MCollective password\n    type: string\n    hidden: true\n  activemq_admin_pass:\n    description: ActiveMQ admin user password\n    type: string\n    hidden: true\n  activemq_user_pass:\n    description: ActiveMQ user password\n    type: string\n    hidden: true\n  ose_version:\n    description: The version of OpenShift Enterprise to install\n    type: string\n    default: \"2.0\"\n    constraints:\n    - allowed_values: [\"1.2\", \"2.0\"]\n\nresources:\n  ose_broker_sec_grp:\n    type: AWS::EC2::SecurityGroup\n    properties:\n      GroupDescription: broker firewall rules\n      SecurityGroupIngress:\n      - {IpProtocol: tcp, FromPort: '22', ToPort: '22', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: udp, FromPort: '53', ToPort: '53', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '53', ToPort: '53', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '80', ToPort: '80', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '443', ToPort: '443', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '27017', ToPort: '27017', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '61613', ToPort: '61613', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '61616', ToPort: '61616', CidrIp: 0.0.0.0/0}\n\n  broker1_port:\n    type: OS::Neutron::Port\n    properties:\n      security_groups: [{ get_resource: ose_broker_sec_grp }]\n      network_id: { get_param: private_net_id }\n      fixed_ips:\n        - subnet_id: { get_param: private_subnet_id }\n\n  broker1_floating_ip:\n    type: OS::Neutron::FloatingIP\n    properties:\n      floating_network_id: { get_param: public_net_id }\n      port_id: { get_resource: broker1_port }\n\n  broker2_port:\n    type: OS::Neutron::Port\n    properties:\n      security_groups: [{ get_resource: ose_broker_sec_grp }]\n      network_id: { get_param: private_net_id }\n      fixed_ips:\n        - subnet_id: { get_param: private_subnet_id }\n\n  broker2_floating_ip:\n    type: OS::Neutron::FloatingIP\n    properties:\n      floating_network_id: { get_param: public_net_id }\n      port_id: { get_resource: broker2_port }\n\n  broker3_port:\n    type: OS::Neutron::Port\n    properties:\n      security_groups: [{ get_resource: ose_broker_sec_grp }]\n      network_id: { get_param: private_net_id }\n      fixed_ips:\n        - subnet_id: { get_param: private_subnet_id }\n\n  broker3_floating_ip:\n    type: OS::Neutron::FloatingIP\n    properties:\n      floating_network_id: { get_param: public_net_id }\n      port_id: { get_resource: broker3_port }\n\n  broker_wait_handle:\n    type: AWS::CloudFormation::WaitConditionHandle\n\n  broker_wait_condition:\n    type: AWS::CloudFormation::WaitCondition\n    properties:\n      Count: 2\n      Handle:\n        Ref: broker_wait_handle\n      Timeout: '6000'\n\n  broker1_wait_handle:\n    type: AWS::CloudFormation::WaitConditionHandle\n\n  broker1_wait_condition:\n    type: AWS::CloudFormation::WaitCondition\n    properties:\n      Handle:\n        Ref: broker1_wait_handle\n      Timeout: '3600'\n\n###\n# load balancer\n###\n  lb_vip_port:\n    type: OS::Neutron::Port\n    properties:\n      security_groups: [{ get_resource: ose_broker_sec_grp }]\n      network_id: { get_param: private_net_id }\n      fixed_ips:\n        - subnet_id: { get_param: private_subnet_id }\n\n  lb_vip_floating_ip:\n    type: OS::Neutron::FloatingIP\n    properties:\n      floating_network_id: { get_param: public_net_id }\n      port_id: { get_resource: lb_vip_port }\n\n  lb_pool_vip:\n    type: OS::Neutron::FloatingIPAssociation\n    properties:\n      floatingip_id: { get_resource: lb_vip_floating_ip }\n      port_id: { 'Fn::Select': ['port_id', {'Fn::GetAtt': [pool, vip]}]}\n\n  monitor:\n    type: OS::Neutron::HealthMonitor\n    properties:\n      type: HTTPS\n      delay: 3\n      max_retries: 5\n      timeout: 10\n\n  pool:\n    type: OS::Neutron::Pool\n    properties:\n      name: ose_broker_lb_pool\n      description: Load balancer for OpenShift Enterprise broker hosts\n      protocol: HTTPS\n      subnet_id: { get_param: private_subnet_id }\n      lb_method: ROUND_ROBIN\n      monitors: [ { get_resource: monitor } ]\n      vip:\n        name: ose_broker_vip\n        description: broker virtual IP (VIP)\n        protocol_port: 443\n        session_persistence:\n          type: SOURCE_IP\n\n  mylb:\n    type: OS::Neutron::LoadBalancer\n    properties:\n    #  members: [ { get_resource: broker1_instance }, { get_resource: broker2_instance }, { get_resource: broker3_instance } ]\n      pool_id: { get_resource: pool }\n      protocol_port: 443\n\n###\n# Broker 1\n###\n  broker1_instance:\n    type: OS::Nova::Server\n    depends_on: broker_wait_condition\n    properties:\n      name: ose_broker1\n      image: { get_param: broker_image }\n      flavor: { get_param: broker_server_flavor }\n      availability_zone: { get_param: primary_avail_zone }\n      key_name: { get_param: key_name }\n      networks:\n        - port: { get_resource: broker1_port }\n      security_groups: [{ get_resource: ose_broker_sec_grp }]\n      user_data:\n        str_replace:\n          template: |\n            #!/bin/bash -x\n\n            export CONF_BROKER_IP_ADDR=P_BROKER_FLOATING_IP\n            export CONF_BROKER2_IP_ADDR=P_BROKER2_FLOATING_IP\n            export CONF_BROKER3_IP_ADDR=P_BROKER3_FLOATING_IP\n            export CONF_DOMAIN=P_DOMAIN\n            export CONF_BROKER_HOSTNAME=P_BROKER_HOSTNAME\n            export CONF_BROKER2_HOSTNAME=P_BROKER2_HOSTNAME\n            export CONF_BROKER3_HOSTNAME=P_BROKER3_HOSTNAME\n            export CONF_NAMED_HOSTNAME=P_NAMED_HOSTNAME\n            export CONF_NAMED_IP_ADDR=P_NAMED_IP\n            export CONF_NAMED_ENTRIES=P_BROKER2_HOSTNAME:P_BROKER2_FLOATING_IP,P_BROKER3_HOSTNAME:P_BROKER3_FLOATING_IP,P_NODE1_HOSTNAME:P_NODE1_FLOATING_IP,P_NODE2_HOSTNAME:P_NODE2_FLOATING_IP,P_NODE3_HOSTNAME:P_NODE3_FLOATING_IP,P_LOAD_BAL_HOSTNAME:P_LOAD_BAL_IP\n            export CONF_BIND_KEYALGORITHM=\"HMAC-MD5\"\n            export CONF_ACTIVEMQ_HOSTNAME=P_BROKER_HOSTNAME\n            export CONF_DATASTORE_HOSTNAME=P_BROKER_HOSTNAME\n            export CONF_DATASTORE_REPLICANTS=P_REPLICANTS\n            export CONF_ACTIVEMQ_REPLICANTS=P_REPLICANTS\n            export CONF_INSTALL_METHOD=P_CONF_INSTALL_METHOD\n            export CONF_RHN_USER=P_CONF_RH_USER\n            export CONF_RHN_PASS=P_CONF_RH_PASS\n            export CONF_SM_REG_POOL=P_CONF_RH_REG_POOL\n            export CONF_RHN_REG_ACTKEY=P_CONF_RH_REG_ACTKEY\n            export CONF_RHN_REG_OPTS=P_CONF_RHN_REG_OPTS\n            export CONF_OSE_REPOS_BASE=P_CONF_OSE_REPOS_BASE\n            export CONF_OSE_EXTRA_REPO_BASE=P_CONF_OSE_EXTRA_REPOS_BASE\n            export CONF_JBOSS_REPO_BASE=P_CONF_JBOSS_REPO_BASE\n            export CONF_RHEL_REPO=P_CONF_RHEL_REPO\n            export CONF_RHEL_OPTIONAL_REPO=P_CONF_RHEL_OPTIONAL_REPO\n            export CONF_INSTALL_COMPONENTS=broker,activemq,datastore,named\n            export CONF_ACTIONS=do_all_actions,configure_datastore_add_replicants\n            export CONF_OPENSHIFT_USER1=P_CONF_OPENSHIFT_USER1\n            export CONF_OPENSHIFT_PASSWORD1=P_CONF_OPENSHIFT_PASSWORD1\n            export CONF_MONGODB_BROKER_USER=P_CONF_MONGODB_BROKER_USER\n            export CONF_MONGODB_BROKER_PASSWORD=P_CONF_MONGODB_BROKER_PASSWORD\n            export CONF_MCOLLECTIVE_USER=P_CONF_MCOLLECTIVE_USER\n            export CONF_MCOLLECTIVE_PASSWORD=P_CONF_MCOLLECTIVE_PASSWORD\n            export CONF_ACTIVEMQ_ADMIN_PASSWORD=P_CONF_ACTIVEMQ_ADMIN_PASSWORD\n            export CONF_ACTIVEMQ_AMQ_USER_PASSWORD=P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD\n\n            curl -O https://raw.github.com/openshift/openshift-extras/enterprise-P_OSE_VERSION/enterprise/install-scripts/generic/openshift.sh -k\n            chmod +x ./openshift.sh\n            ./openshift.sh 2>&1 | tee /tmp/openshift.out\n            sed -i '/type master/a \\\n                    also-notify { P_UPSTREAM_DNS_IP; };\\n        notify yes;' /etc/named.conf\n            setenforce 1\n            cd /etc/init.d\n            for i in `ls cloud-*`; do chkconfig $i off; done\n            # FIXME: shouldn't need this. DIB step? selinux enabled when pkg instld? see rpm -q --scripts ruby193-rubygem-passenger-native\n            semodule -i /opt/rh/ruby193/root/usr/share/selinux/packages/ruby193-rubygem-passenger/ruby193-rubygem-passenger.pp 2>/dev/null\n            fixfiles -R ruby193-rubygem-passenger restore\n            fixfiles -R ruby193-rubygem-passenger-native restore\n            /usr/bin/cfn-signal -e 0 -s \"Broker 1 setup complete\" -i \"P_BROKER_HOSTNAME.P_DOMAIN\" \"P_BROKER_WAIT_HANDLE\"\n            reboot\n          params:\n            P_BROKER_FLOATING_IP: { get_attr: [ broker1_floating_ip, floating_ip_address ] }\n            P_NODE1_FLOATING_IP: { get_attr: [ node1_instance, node_floating_ip ] }\n            P_NODE2_FLOATING_IP: { get_attr: [ node2_instance, node_floating_ip ] }\n            P_NODE3_FLOATING_IP: { get_attr: [ node3_instance, node_floating_ip ] }\n            P_BROKER2_FLOATING_IP: { get_attr: [ broker2_floating_ip, floating_ip_address ] }\n            P_BROKER3_FLOATING_IP: { get_attr: [ broker3_floating_ip, floating_ip_address ] }\n            P_DOMAIN: { get_param: domain }\n            P_HOSTS_DOMAIN: { get_param: hosts_domain }\n            P_LOAD_BAL_HOSTNAME: { get_param: load_bal_hostname }\n            P_LOAD_BAL_IP: { get_attr: [ lb_vip_floating_ip, floating_ip_address ] }\n            P_BROKER_HOSTNAME: { get_param: broker1_hostname }\n            P_BROKER2_HOSTNAME: { get_param: broker2_hostname }\n            P_BROKER3_HOSTNAME: { get_param: broker3_hostname }\n            P_NODE1_HOSTNAME: { get_param: node1_hostname }\n            P_NODE2_HOSTNAME: { get_param: node2_hostname }\n            P_NODE3_HOSTNAME: { get_param: node3_hostname }\n            P_NAMED_HOSTNAME: { get_param: named_hostname }\n            P_NAMED_IP: { get_attr: [ broker1_floating_ip, floating_ip_address ] }\n            P_UPSTREAM_DNS_IP: { get_param: upstream_dns_ip }\n            P_REPLICANTS: { get_param: replicants }\n            P_CONF_INSTALL_METHOD: { get_param: install_method}\n            P_CONF_RH_USER: { get_param: rh_reg_user}\n            P_CONF_RH_PASS: { get_param: rh_reg_pass}\n            P_CONF_RH_REG_POOL: { get_param: rh_reg_pool}\n            P_CONF_RH_REG_ACTKEY: { get_param: rh_reg_act_key}\n            P_CONF_RHN_REG_OPTS: { get_param: rh_reg_opts}\n            P_CONF_OSE_REPOS_BASE: { get_param: openshift_repo_base}\n            P_CONF_OSE_EXTRA_REPOS_BASE: { get_param: openshift_extra_repo_base}\n            P_CONF_JBOSS_REPO_BASE: { get_param: jboss_repo_base}\n            P_CONF_RHEL_REPO: { get_param: rhel_repo_base}\n            P_CONF_RHEL_OPTIONAL_REPO: { get_param: rhel_opt_repo_base}\n            P_OSE_VERSION: { get_param: ose_version }\n            P_CONF_OPENSHIFT_USER1: { get_param: openshift_user1 }\n            P_CONF_OPENSHIFT_PASSWORD1: { get_param: openshift_pass1 }\n            P_CONF_MONGODB_BROKER_USER: { get_param: mongo_broker_user }\n            P_CONF_MONGODB_BROKER_PASSWORD: { get_param: mongo_broker_pass }\n            P_CONF_MCOLLECTIVE_USER: { get_param: mcollective_user }\n            P_CONF_MCOLLECTIVE_PASSWORD: { get_param: mcollective_pass }\n            P_CONF_ACTIVEMQ_ADMIN_PASSWORD: { get_param: activemq_admin_pass }\n            P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD: { get_param: activemq_user_pass }\n            P_BROKER_WAIT_HANDLE: { get_resource: broker1_wait_handle }\n\n###\n# Broker 2\n###\n  broker2_instance:\n    type: OS::Nova::Server\n    properties:\n      name: ose_broker2\n      image: { get_param: broker_image }\n      flavor: { get_param: broker_server_flavor }\n      availability_zone: { get_param: secondary_avail_zone }\n      key_name: { get_param: key_name }\n      networks:\n        - port: { get_resource: broker2_port }\n      security_groups: [{ get_resource: ose_broker_sec_grp }]\n      user_data:\n        str_replace:\n          template: |\n            #!/bin/bash -x\n\n            export CONF_BROKER_IP_ADDR=P_BROKER_FLOATING_IP\n            export CONF_DOMAIN=P_DOMAIN\n            export CONF_BROKER_HOSTNAME=P_BROKER_HOSTNAME\n            export CONF_NAMED_HOSTNAME=P_NAMED_HOSTNAME\n            export CONF_NAMED_IP_ADDR=P_NAMED_IP\n            export CONF_DATASTORE_REPLICANTS=P_REPLICANTS\n            export CONF_ACTIVEMQ_REPLICANTS=P_REPLICANTS\n            export CONF_INSTALL_METHOD=P_CONF_INSTALL_METHOD\n            export CONF_RHN_USER=P_CONF_RH_USER\n            export CONF_RHN_PASS=P_CONF_RH_PASS\n            export CONF_SM_REG_POOL=P_CONF_RH_REG_POOL\n            export CONF_RHN_REG_ACTKEY=P_CONF_RH_REG_ACTKEY\n            export CONF_RHN_REG_OPTS=P_CONF_RHN_REG_OPTS\n            export CONF_OSE_REPOS_BASE=P_CONF_OSE_REPOS_BASE\n            export CONF_OSE_EXTRA_REPO_BASE=P_CONF_OSE_EXTRA_REPOS_BASE\n            export CONF_JBOSS_REPO_BASE=P_CONF_JBOSS_REPO_BASE\n            export CONF_RHEL_REPO=P_CONF_RHEL_REPO\n            export CONF_RHEL_OPTIONAL_REPO=P_CONF_RHEL_OPTIONAL_REPO\n            export CONF_INSTALL_COMPONENTS=broker,activemq,datastore\n            export CONF_ACTIONS=do_all_actions\n            export CONF_OPENSHIFT_USER1=P_CONF_OPENSHIFT_USER1\n            export CONF_OPENSHIFT_PASSWORD1=P_CONF_OPENSHIFT_PASSWORD1\n            export CONF_MONGODB_BROKER_USER=P_CONF_MONGODB_BROKER_USER\n            export CONF_MONGODB_BROKER_PASSWORD=P_CONF_MONGODB_BROKER_PASSWORD\n            export CONF_MCOLLECTIVE_USER=P_CONF_MCOLLECTIVE_USER\n            export CONF_MCOLLECTIVE_PASSWORD=P_CONF_MCOLLECTIVE_PASSWORD\n            export CONF_ACTIVEMQ_ADMIN_PASSWORD=P_CONF_ACTIVEMQ_ADMIN_PASSWORD\n            export CONF_ACTIVEMQ_AMQ_USER_PASSWORD=P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD\n\n            curl -O https://raw.github.com/openshift/openshift-extras/enterprise-P_OSE_VERSION/enterprise/install-scripts/generic/openshift.sh -k\n            chmod +x ./openshift.sh\n            ./openshift.sh 2>&1 | tee /tmp/openshift.out\n            setenforce 1\n            cd /etc/init.d\n            for i in `ls cloud-*`; do chkconfig $i off; done\n            # FIXME: shouldn't need this. DIB step? selinux enabled when pkg instld? see rpm -q --scripts ruby193-rubygem-passenger-native\n            semodule -i /opt/rh/ruby193/root/usr/share/selinux/packages/ruby193-rubygem-passenger/ruby193-rubygem-passenger.pp 2>/dev/null\n            fixfiles -R ruby193-rubygem-passenger restore\n            fixfiles -R ruby193-rubygem-passenger-native restore\n            /usr/bin/cfn-signal -e 0 -s \"Broker 2 setup complete\" -i \"P_BROKER_HOSTNAME.P_DOMAIN\" \"P_BROKER_WAIT_HANDLE\"\n            reboot\n          params:\n            P_BROKER_FLOATING_IP: { get_attr: [ broker2_floating_ip, floating_ip_address ] }\n            P_DOMAIN: { get_param: domain }\n            P_HOSTS_DOMAIN: { get_param: hosts_domain }\n            P_BROKER_HOSTNAME: { get_param: broker2_hostname }\n            P_NAMED_HOSTNAME: { get_param: named_hostname }\n            P_NAMED_IP: { get_attr: [ broker1_floating_ip, floating_ip_address ] }\n            P_REPLICANTS: { get_param: replicants }\n            P_CONF_INSTALL_METHOD: { get_param: install_method}\n            P_CONF_RH_USER: { get_param: rh_reg_user}\n            P_CONF_RH_PASS: { get_param: rh_reg_pass}\n            P_CONF_RH_REG_POOL: { get_param: rh_reg_pool}\n            P_CONF_RH_REG_ACTKEY: { get_param: rh_reg_act_key}\n            P_CONF_RHN_REG_OPTS: { get_param: rh_reg_opts}\n            P_CONF_OSE_REPOS_BASE: { get_param: openshift_repo_base}\n            P_CONF_OSE_EXTRA_REPOS_BASE: { get_param: openshift_extra_repo_base}\n            P_CONF_JBOSS_REPO_BASE: { get_param: jboss_repo_base}\n            P_CONF_RHEL_REPO: { get_param: rhel_repo_base}\n            P_CONF_RHEL_OPTIONAL_REPO: { get_param: rhel_opt_repo_base}\n            P_OSE_VERSION: { get_param: ose_version }\n            P_CONF_OPENSHIFT_USER1: { get_param: openshift_user1 }\n            P_CONF_OPENSHIFT_PASSWORD1: { get_param: openshift_pass1 }\n            P_CONF_MONGODB_BROKER_USER: { get_param: mongo_broker_user }\n            P_CONF_MONGODB_BROKER_PASSWORD: { get_param: mongo_broker_pass }\n            P_CONF_MCOLLECTIVE_USER: { get_param: mcollective_user }\n            P_CONF_MCOLLECTIVE_PASSWORD: { get_param: mcollective_pass }\n            P_CONF_ACTIVEMQ_ADMIN_PASSWORD: { get_param: activemq_admin_pass }\n            P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD: { get_param: activemq_user_pass }\n            P_BROKER_WAIT_HANDLE: { get_resource: broker_wait_handle}\n\n###\n# Broker3\n###\n  broker3_instance:\n    type: OS::Nova::Server\n    properties:\n      name: ose_broker3\n      image: { get_param: broker_image }\n      flavor: { get_param: broker_server_flavor }\n      availability_zone: { get_param: primary_avail_zone }\n      key_name: { get_param: key_name }\n      networks:\n        - port: { get_resource: broker3_port }\n      security_groups: [{ get_resource: ose_broker_sec_grp }]\n      user_data:\n        str_replace:\n          template: |\n            #!/bin/bash -x\n\n            export CONF_BROKER_IP_ADDR=P_BROKER_FLOATING_IP\n            export CONF_DOMAIN=P_DOMAIN\n            export CONF_BROKER_HOSTNAME=P_BROKER_HOSTNAME\n            export CONF_NAMED_HOSTNAME=P_NAMED_HOSTNAME\n            export CONF_NAMED_IP_ADDR=P_NAMED_IP\n            export CONF_DATASTORE_REPLICANTS=P_REPLICANTS\n            export CONF_ACTIVEMQ_REPLICANTS=P_REPLICANTS\n            export CONF_INSTALL_METHOD=P_CONF_INSTALL_METHOD\n            export CONF_RHN_USER=P_CONF_RH_USER\n            export CONF_RHN_PASS=P_CONF_RH_PASS\n            export CONF_SM_REG_POOL=P_CONF_RH_REG_POOL\n            export CONF_RHN_REG_ACTKEY=P_CONF_RH_REG_ACTKEY\n            export CONF_RHN_REG_OPTS=P_CONF_RHN_REG_OPTS\n            export CONF_OSE_REPOS_BASE=P_CONF_OSE_REPOS_BASE\n            export CONF_OSE_EXTRA_REPO_BASE=P_CONF_OSE_EXTRA_REPOS_BASE\n            export CONF_JBOSS_REPO_BASE=P_CONF_JBOSS_REPO_BASE\n            export CONF_RHEL_REPO=P_CONF_RHEL_REPO\n            export CONF_RHEL_OPTIONAL_REPO=P_CONF_RHEL_OPTIONAL_REPO\n            export CONF_INSTALL_COMPONENTS=broker,activemq,datastore\n            export CONF_ACTIONS=do_all_actions\n            export CONF_OPENSHIFT_USER1=P_CONF_OPENSHIFT_USER1\n            export CONF_OPENSHIFT_PASSWORD1=P_CONF_OPENSHIFT_PASSWORD1\n            export CONF_MONGODB_BROKER_USER=P_CONF_MONGODB_BROKER_USER\n            export CONF_MONGODB_BROKER_PASSWORD=P_CONF_MONGODB_BROKER_PASSWORD\n            export CONF_MCOLLECTIVE_USER=P_CONF_MCOLLECTIVE_USER\n            export CONF_MCOLLECTIVE_PASSWORD=P_CONF_MCOLLECTIVE_PASSWORD\n            export CONF_ACTIVEMQ_ADMIN_PASSWORD=P_CONF_ACTIVEMQ_ADMIN_PASSWORD\n            export CONF_ACTIVEMQ_AMQ_USER_PASSWORD=P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD\n\n            curl -O https://raw.github.com/openshift/openshift-extras/enterprise-P_OSE_VERSION/enterprise/install-scripts/generic/openshift.sh -k\n            chmod +x ./openshift.sh\n            ./openshift.sh 2>&1 | tee /tmp/openshift.out\n            setenforce 1\n            cd /etc/init.d\n            for i in `ls cloud-*`; do chkconfig $i off; done\n            # FIXME: shouldn't need this. DIB step? selinux enabled when pkg instld? see rpm -q --scripts ruby193-rubygem-passenger-native\n            semodule -i /opt/rh/ruby193/root/usr/share/selinux/packages/ruby193-rubygem-passenger/ruby193-rubygem-passenger.pp 2>/dev/null\n            fixfiles -R ruby193-rubygem-passenger restore\n            fixfiles -R ruby193-rubygem-passenger-native restore\n            /usr/bin/cfn-signal -e 0 -s \"Broker 3 setup complete\" -i \"P_BROKER_HOSTNAME.P_DOMAIN\" \"P_BROKER_WAIT_HANDLE\"\n            reboot\n          params:\n            P_BROKER_FLOATING_IP: { get_attr: [ broker3_floating_ip, floating_ip_address ] }\n            P_DOMAIN: { get_param: domain }\n            P_HOSTS_DOMAIN: { get_param: hosts_domain }\n            P_BROKER_HOSTNAME: { get_param: broker3_hostname }\n            P_NAMED_HOSTNAME: { get_param: named_hostname }\n            P_NAMED_IP: { get_attr: [ broker1_floating_ip, floating_ip_address ] }\n            P_REPLICANTS: { get_param: replicants }\n            P_CONF_INSTALL_METHOD: { get_param: install_method}\n            P_CONF_RH_USER: { get_param: rh_reg_user}\n            P_CONF_RH_PASS: { get_param: rh_reg_pass}\n            P_CONF_RH_REG_POOL: { get_param: rh_reg_pool}\n            P_CONF_RH_REG_ACTKEY: { get_param: rh_reg_act_key}\n            P_CONF_RHN_REG_OPTS: { get_param: rh_reg_opts}\n            P_CONF_OSE_REPOS_BASE: { get_param: openshift_repo_base}\n            P_CONF_OSE_EXTRA_REPOS_BASE: { get_param: openshift_extra_repo_base}\n            P_CONF_JBOSS_REPO_BASE: { get_param: jboss_repo_base}\n            P_CONF_RHEL_REPO: { get_param: rhel_repo_base}\n            P_CONF_RHEL_OPTIONAL_REPO: { get_param: rhel_opt_repo_base}\n            P_OSE_VERSION: { get_param: ose_version }\n            P_CONF_OPENSHIFT_USER1: { get_param: openshift_user1 }\n            P_CONF_OPENSHIFT_PASSWORD1: { get_param: openshift_pass1 }\n            P_CONF_MONGODB_BROKER_USER: { get_param: mongo_broker_user }\n            P_CONF_MONGODB_BROKER_PASSWORD: { get_param: mongo_broker_pass }\n            P_CONF_MCOLLECTIVE_USER: { get_param: mcollective_user }\n            P_CONF_MCOLLECTIVE_PASSWORD: { get_param: mcollective_pass }\n            P_CONF_ACTIVEMQ_ADMIN_PASSWORD: { get_param: activemq_admin_pass }\n            P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD: { get_param: activemq_user_pass }\n            P_BROKER_WAIT_HANDLE: { get_resource: broker_wait_handle}\n\n###\n# Node\n###\n  node1_instance:\n    type: OpenShift::Node::Server\n    properties:\n      key_name: { get_param: key_name }\n      domain: { get_param: domain }\n      hosts_domain: { get_param: hosts_domain }\n      broker1_hostname: { get_param: broker1_hostname }\n      broker1_floating_ip: { get_attr: [ broker1_floating_ip, floating_ip_address ] }\n      node_hostname: { get_param: node1_hostname }\n      load_bal_hostname: { get_param: load_bal_hostname }\n      node_image: { get_param: node_image }\n      replicants: { get_param: replicants }\n      cartridges: { get_param: cartridges }\n      install_method: { get_param: install_method }\n      rh_reg_user: { get_param: rh_reg_user }\n      rh_reg_pass: { get_param: rh_reg_pass }\n      rh_reg_act_key: { get_param: rh_reg_act_key }\n      rh_reg_opts: { get_param: rh_reg_opts }\n      rhel_repo_base: { get_param: rhel_repo_base }\n      rhel_opt_repo_base: { get_param: rhel_opt_repo_base }\n      openshift_repo_base: { get_param: openshift_repo_base }\n      openshift_extra_repo_base: { get_param: openshift_extra_repo_base }\n      jboss_repo_base: { get_param: jboss_repo_base }\n      rhscl_repo_base: { get_param: rhscl_repo_base }\n      public_net_id: { get_param: public_net_id }\n      private_net_id: { get_param: private_net_id }\n      private_subnet_id: { get_param: private_subnet_id }\n      mcollective_user: { get_param: mcollective_user }\n      mcollective_pass: { get_param: mcollective_pass }\n      activemq_admin_pass: { get_param: activemq_admin_pass }\n      activemq_user_pass: { get_param: activemq_user_pass }\n      avail_zone: { get_param: primary_avail_zone }\n      node_server_flavor: { get_param: node_server_flavor }\n\n  node2_instance:\n    type: OpenShift::Node::Server\n    properties:\n      key_name: { get_param: key_name }\n      domain: { get_param: domain }\n      hosts_domain: { get_param: hosts_domain }\n      broker1_hostname: { get_param: broker1_hostname }\n      broker1_floating_ip: { get_attr: [ broker1_floating_ip, floating_ip_address ] }\n      node_hostname: { get_param: node2_hostname }\n      load_bal_hostname: { get_param: load_bal_hostname }\n      node_image: { get_param: node_image }\n      replicants: { get_param: replicants }\n      cartridges: { get_param: cartridges }\n      install_method: { get_param: install_method }\n      rh_reg_user: { get_param: rh_reg_user }\n      rh_reg_pass: { get_param: rh_reg_pass }\n      rh_reg_act_key: { get_param: rh_reg_act_key }\n      rh_reg_opts: { get_param: rh_reg_opts }\n      rhel_repo_base: { get_param: rhel_repo_base }\n      rhel_opt_repo_base: { get_param: rhel_opt_repo_base }\n      openshift_repo_base: { get_param: openshift_repo_base }\n      openshift_extra_repo_base: { get_param: openshift_extra_repo_base }\n      jboss_repo_base: { get_param: jboss_repo_base }\n      rhscl_repo_base: { get_param: rhscl_repo_base }\n      public_net_id: { get_param: public_net_id }\n      private_net_id: { get_param: private_net_id }\n      private_subnet_id: { get_param: private_subnet_id }\n      mcollective_user: { get_param: mcollective_user }\n      mcollective_pass: { get_param: mcollective_pass }\n      activemq_admin_pass: { get_param: activemq_admin_pass }\n      activemq_user_pass: { get_param: activemq_user_pass }\n      avail_zone: { get_param: secondary_avail_zone }\n      node_server_flavor: { get_param: node_server_flavor }\n\n  node3_instance:\n    type: OpenShift::Node::Server\n    properties:\n      key_name: { get_param: key_name }\n      domain: { get_param: domain }\n      hosts_domain: { get_param: hosts_domain }\n      broker1_hostname: { get_param: broker1_hostname }\n      broker1_floating_ip: { get_attr: [ broker1_floating_ip, floating_ip_address ] }\n      node_hostname: { get_param: node3_hostname }\n      load_bal_hostname: { get_param: load_bal_hostname }\n      node_image: { get_param: node_image }\n      replicants: { get_param: replicants }\n      cartridges: { get_param: cartridges }\n      install_method: { get_param: install_method }\n      rh_reg_user: { get_param: rh_reg_user }\n      rh_reg_pass: { get_param: rh_reg_pass }\n      rh_reg_act_key: { get_param: rh_reg_act_key }\n      rh_reg_opts: { get_param: rh_reg_opts }\n      rhel_repo_base: { get_param: rhel_repo_base }\n      rhel_opt_repo_base: { get_param: rhel_opt_repo_base }\n      openshift_repo_base: { get_param: openshift_repo_base }\n      openshift_extra_repo_base: { get_param: openshift_extra_repo_base }\n      jboss_repo_base: { get_param: jboss_repo_base }\n      rhscl_repo_base: { get_param: rhscl_repo_base }\n      public_net_id: { get_param: public_net_id }\n      private_net_id: { get_param: private_net_id }\n      private_subnet_id: { get_param: private_subnet_id }\n      mcollective_user: { get_param: mcollective_user }\n      mcollective_pass: { get_param: mcollective_pass }\n      activemq_admin_pass: { get_param: activemq_admin_pass }\n      activemq_user_pass: { get_param: activemq_user_pass }\n      avail_zone: { get_param: secondary_avail_zone }\n      node_server_flavor: { get_param: node_server_flavor }\n\noutputs:\n  console_url:\n    description: OpenShift Enterprise console URL\n    value:\n      str_replace:\n        template: |\n          https://host.domain/console\n        params:\n          host: { get_param: load_bal_hostname }\n          domain: { get_param: domain }\n  default_user:\n    description: OpenShift Enterprise default user\n    value: { get_param: openshift_user1 }\n  load_balancer_floating_ip:\n    description: load balancer floating IP address\n    value: { get_attr: [ lb_vip_floating_ip, floating_ip_address ] }\n", "heat_template_version: 2013-05-23\ndescription: >\n  Template (HOT) for deploying an OpenShift node with attached cinder volume\n  with floating IP. May be used stand-alone for scaling out nodes or as part of\n  the HA nested stack.\nparameter_groups:\n- label: General parameters\n  description: General OpenShift parameters\n  parameters:\n  - broker1_hostname\n  - broker1_floating_ip\n  - node_hostname\n  - load_bal_hostname\n  - node_image\n  - node_server_flavor\n- label: Red Hat subscription\n  description: >\n    Red Hat Subscription Manager (RHSM) or Red Hat Network (RHN) parameters\n  parameters:\n  - install_method\n  - rh_reg_user\n  - rh_reg_pass\n  - rh_reg_pool\n  - rh_reg_act_key\n  - rh_reg_opts\n- label: Networking parameters\n  description: Networking-related parameters\n  parameters:\n  - domain\n  - hosts_domain\n  - named_hostname\n  - named_ip\n  - replicants\n  - cartridges\n  - public_net_id\n  - private_net_id\n  - private_subnet_id\n- label: Credentials\n  description: >\n    Username and password parameters for OpenShift and dependent service\n  parameters:\n  - mcollective_user\n  - mcollective_pass\n  - activemq_admin_pass\n  - activemq_user_pass\nparameters:\n  key_name:\n    description: Name of an existing keypair to enable SSH access to the instances\n    type: string\n  domain:\n    description: Your DNS domain\n    type: string\n  hosts_domain:\n    description: Openshift hosts domain\n    type: string\n  avail_zone:\n    description: >\n      Availability zone to ensure distribution of brokers and nodes\n    type: string\n    default: nova\n  node_server_flavor:\n    description: Flavor of node servers\n    type: string\n    default: m1.medium\n  node_vol_size:\n    description: Node cinder volume size (GB)\n    type: number\n    default: 12\n  broker1_hostname:\n    description: Broker 1 hostname\n    type: string\n    default: broker1\n  broker1_floating_ip:\n    description: Broker 1 floating ip\n    type: string\n  node_hostname:\n    description: Node hostname\n    type: string\n    default: node\n  load_bal_hostname:\n    description: Load balancer hostname\n    type: string\n    default: broker\n  node_image:\n    description: Node image name\n    type: string\n    default: RHEL65-x86_64-node\n  install_method:\n    description: Installation method (yum rhsm rhn)\n    type: string\n    default: rhsm\n    constraints:\n    - allowed_values: [yum, rhsm, rhn]\n  rh_reg_user:\n    description: Red Hat registration username\n    type: string\n    default: \"\"\n  rh_reg_pass:\n    description: Red Hat registration password\n    type: string\n    default: \"\"\n    hidden: true\n  rh_reg_pool:\n    description: Pool ID for OpenShift subscription\n    type: string\n    default: \"\"\n  rh_reg_act_key:\n    description: Optional RHN activation key for OpenShift subscription\n    type: string\n    default: \"\"\n  rh_reg_opts:\n    description: RHN options, e.g. --serverUrl=https://my.sat.server.com/XMLRPC\n    type: string\n    default: \"\"\n  rhel_repo_base:\n    description: RHEL Repository Base URL\n    type: string\n    default: \"\"\n  openshift_extra_repo_base:\n    description: OSE Extra Repository Base URL\n    type: string\n    default: \"\"\n  rhscl_repo_base:\n    description: Red Hat Software Collections Repository Base URL\n    type: string\n    default: \"\"\n  rhel_opt_repo_base:\n    description: RHEL Optional Repository Base URL\n    type: string\n    default: \"\"\n  openshift_repo_base:\n    description: OSE Repository Base URL\n    type: string\n    default: \"\"\n  jboss_repo_base:\n    description: JBoss Repository Base URL\n    type: string\n    default: \"\"\n  named_hostname:\n    description: named server hostname\n    type: string\n    default: broker1\n  named_ip:\n    description: named server IP address\n    type: string\n    default: \"\"\n  upstream_dns_ip:\n    description: Upstream DNS IP address for zone transfer\n    type: string\n    default: \"\"\n  replicants:\n    description: >\n      Comma-separated list (no spaces) of broker hosts (FQDN) running ActiveMQ and MongoDB\n    type: string\n  cartridges:\n    description: >\n      Cartridges to install. \"all\" for all cartridges; \"standard\" for all cartridges except for JBossEWS or JBossEAP\n    type: string\n    default: standard\n  public_net_id:\n    type: string\n    description: >\n      ID of public network for which floating IP addresses will be allocated\n  private_net_id:\n    type: string\n    description: ID of private network into which servers get deployed\n  private_subnet_id:\n    type: string\n    description: ID of private sub network into which servers get deployed\n  mcollective_user:\n    description: MCollective username\n    type: string\n    default: mcollective\n  mcollective_pass:\n    description: MCollective password\n    type: string\n    hidden: true\n  activemq_admin_pass:\n    description: ActiveMQ admin user password\n    type: string\n    hidden: true\n  activemq_user_pass:\n    description: ActiveMQ user password\n    type: string\n    hidden: true\n  ose_version:\n    description: The version of OpenShift Enterprise to install\n    type: string\n    default: \"2.0\"\n    constraints:\n    - allowed_values: [\"1.2\", \"2.0\"]\n\nresources:\n  ose_node_sec_grp:\n    type: AWS::EC2::SecurityGroup\n    properties:\n      GroupDescription: Node firewall rules\n      SecurityGroupIngress:\n      - {IpProtocol: tcp, FromPort: '22', ToPort: '22', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: udp, FromPort: '53', ToPort: '53', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '53', ToPort: '53', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '80', ToPort: '80', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '443', ToPort: '443', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '8000', ToPort: '8000', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '8443', ToPort: '8443', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '2303', ToPort: '2308', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '35531', ToPort: '65535', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '27017', ToPort: '27017', CidrIp: 0.0.0.0/0}\n\n  node_port:\n    type: OS::Neutron::Port\n    properties:\n      security_groups: [{ get_resource: ose_node_sec_grp }]\n      network_id: { get_param: private_net_id }\n      fixed_ips:\n        - subnet_id: { get_param: private_subnet_id }\n\n  node_floating_ip:\n    type: OS::Neutron::FloatingIP\n    properties:\n      floating_network_id: { get_param: public_net_id }\n      port_id: { get_resource: node_port }\n\n###\n# cinder volume\n###\n  node_vol:\n    type: OS::Cinder::Volume\n    properties:\n      name: node_volume\n      description: persistent storage volume for node\n      size: { get_param: node_vol_size }\n\n  node_attach_vol:\n    type: OS::Cinder::VolumeAttachment\n    properties:\n      instance_uuid: { get_resource: node_instance }\n      mountpoint: \"/dev/vdb\"\n      volume_id: { get_resource: node_vol }\n\n###\n# Node\n###\n  node_instance:\n    type: OS::Nova::Server\n    properties:\n      name: ose_node\n      image: { get_param: node_image }\n      flavor: { get_param: node_server_flavor }\n      availability_zone: { get_param: avail_zone }\n      key_name: { get_param: key_name }\n      networks:\n        - port: { get_resource: node_port }\n      security_groups: [{ get_resource: ose_node_sec_grp }]\n      user_data:\n        str_replace:\n          template: |\n            #!/bin/bash -x\n\n            export CONF_BROKER_IP_ADDR=P_BROKER_FLOATING_IP\n            export CONF_NODE_IP_ADDR=P_NODE_FLOATING_IP\n            export CONF_DOMAIN=P_DOMAIN\n            export CONF_BROKER_HOSTNAME=P_LOAD_BAL_HOSTNAME\n            export CONF_NODE_HOSTNAME=P_NODE_HOSTNAME\n            export CONF_NAMED_HOSTNAME=P_NAMED_HOSTNAME\n            export CONF_NAMED_IP_ADDR=P_NAMED_IP\n            export CONF_DATASTORE_REPLICANTS=P_REPLICANTS\n            export CONF_ACTIVEMQ_REPLICANTS=P_REPLICANTS\n            export CONF_CARTRIDGES=P_CONF_CARTRIDGES\n            export CONF_INSTALL_METHOD=P_CONF_INSTALL_METHOD\n            export CONF_RHN_USER=P_CONF_RH_USER\n            export CONF_RHN_PASS=P_CONF_RH_PASS\n            export CONF_SM_REG_POOL=P_CONF_RH_REG_POOL\n            export CONF_RHN_REG_ACTKEY=P_CONF_RH_REG_ACTKEY\n            export CONF_RHN_REG_OPTS=P_CONF_RHN_REG_OPTS\n            export CONF_OSE_REPOS_BASE=P_CONF_OSE_REPOS_BASE\n            export CONF_OSE_EXTRA_REPO_BASE=P_CONF_OSE_EXTRA_REPOS_BASE\n            export CONF_JBOSS_REPO_BASE=P_CONF_JBOSS_REPO_BASE\n            export CONF_RHEL_REPO=P_CONF_RHEL_REPO\n            export CONF_RHSCL_REPO_BASE=P_CONF_RHSCL_REPO\n            export CONF_RHEL_OPTIONAL_REPO=P_CONF_RHEL_OPTIONAL_REPO\n            export CONF_INSTALL_COMPONENTS=node\n            export CONF_ACTIONS=do_all_actions\n            export CONF_MCOLLECTIVE_USER=P_CONF_MCOLLECTIVE_USER\n            export CONF_MCOLLECTIVE_PASSWORD=P_CONF_MCOLLECTIVE_PASSWORD\n            export CONF_ACTIVEMQ_ADMIN_PASSWORD=P_CONF_ACTIVEMQ_ADMIN_PASSWORD\n            export CONF_ACTIVEMQ_AMQ_USER_PASSWORD=P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD\n\n            # configure OSE\n            curl -O https://raw.github.com/openshift/openshift-extras/enterprise-P_OSE_VERSION/enterprise/install-scripts/generic/openshift.sh -k\n            chmod +x ./openshift.sh\n            ./openshift.sh 2>&1 | tee /tmp/openshift.out\n            setenforce 1\n            cd /etc/init.d\n            for i in `ls cloud-*`; do chkconfig $i off; done\n\n            # configure attached storage and move ose dirs\n            parted --script /dev/vdb -- mklabel msdos\n            parted --script /dev/vdb -- mkpart primary 1024 5G\n            parted --script /dev/vdb -- mkpart primary 5G -1s\n            partx -a /dev/vdb\n            mkfs.ext4 /dev/vdb1\n            mkfs.ext4 /dev/vdb2\n            mkdir /var/lib/node_share\n            mount /dev/vdb1 /var/lib/node_share\n            mkdir /var/lib/node_share/etc_openshift\n            service ruby193-mcollective stop\n            shopt -s dotglob\n            mv /etc/openshift/* /var/lib/node_share/etc_openshift\n            chcon --reference /etc/openshift /var/lib/node_share/etc_openshift\n            echo \"/dev/vdb1 /var/lib/node_share ext4 defaults\" >> /etc/fstab\n            echo \"/var/lib/node_share/etc_openshift /etc/openshift none bind,auto\" >> /etc/fstab\n            mount /etc/openshift\n            mount /dev/vdb2 /mnt\n            mv /var/lib/openshift/* /mnt\n            chcon --reference /var/lib/openshift /mnt\n            umount /mnt\n            echo \"/dev/vdb2 /var/lib/openshift ext4 usrquota,defaults\" >> /etc/fstab\n            mount /var/lib/openshift\n            quotacheck --create-files --no-remount --user --group /var/lib/openshift\n            restorecon /var/lib/openshift/aquota.user\n            quotaon /var/lib/openshift\n            service ruby193-mcollective start\n            reboot\n          params:\n            P_BROKER_FLOATING_IP: { get_param: broker1_floating_ip }\n            P_NODE_FLOATING_IP: { get_attr: [ node_floating_ip, floating_ip_address ] }\n            P_DOMAIN: { get_param: domain }\n            P_HOSTS_DOMAIN: { get_param: hosts_domain }\n            P_LOAD_BAL_HOSTNAME: { get_param: load_bal_hostname }\n            P_NODE_HOSTNAME: { get_param: node_hostname }\n            P_NAMED_HOSTNAME: { get_param: named_hostname }\n            P_NAMED_IP: { get_param: broker1_floating_ip }\n            P_REPLICANTS: { get_param: replicants }\n            P_CONF_CARTRIDGES: { get_param: cartridges }\n            P_CONF_INSTALL_METHOD: { get_param: install_method}\n            P_CONF_RH_USER: { get_param: rh_reg_user}\n            P_CONF_RH_PASS: { get_param: rh_reg_pass}\n            P_CONF_RH_REG_POOL: { get_param: rh_reg_pool}\n            P_CONF_RH_REG_ACTKEY: { get_param: rh_reg_act_key}\n            P_CONF_RHN_REG_OPTS: { get_param: rh_reg_opts}\n            P_CONF_OSE_REPOS_BASE: { get_param: openshift_repo_base}\n            P_CONF_OSE_EXTRA_REPOS_BASE: { get_param: openshift_extra_repo_base}\n            P_CONF_JBOSS_REPO_BASE: { get_param: jboss_repo_base}\n            P_CONF_RHEL_REPO: { get_param: rhel_repo_base}\n            P_CONF_RHSCL_REPO: { get_param: rhscl_repo_base}\n            P_CONF_RHEL_OPTIONAL_REPO: { get_param: rhel_opt_repo_base }\n            P_OSE_VERSION: { get_param: ose_version }\n            P_CONF_MCOLLECTIVE_USER: { get_param: mcollective_user }\n            P_CONF_MCOLLECTIVE_PASSWORD: { get_param: mcollective_pass }\n            P_CONF_ACTIVEMQ_ADMIN_PASSWORD: { get_param: activemq_admin_pass }\n            P_CONF_ACTIVEMQ_AMQ_USER_PASSWORD: { get_param: activemq_user_pass }\n\noutputs:\n  node_floating_ip:\n    value: { get_attr: [ node_floating_ip, floating_ip_address ] }\n", "heat_template_version: 2013-05-23\ndescription: Template for setting up an OpenShift Origin environment\nparameters:\n  dns_prefix:\n    description: your DNS prefix\n    type: string\n    default: example.com\n  dns_server:\n    description: upstream DNS server\n    type: string\n    default: 8.8.8.8\n  key_name:\n    description: name of a key pair to enable SSH access to the instances\n    type: string\n  instance_type:\n    description: instance type for server\n    type: string\n    default: m1.small\n    constraints:\n      - allowed_values: [m1.tiny, m1.small, m1.medium, m1.large, m1.xlarge]\n        description: must be a valid instance type\n  user_name:\n    description: user name for OpenShift login\n    type: string\n    default: openshift\n  password:\n    description: password for OpenShift login\n    type: string\n    default: password\nresources:\n  broker_wait_handle:\n    type: AWS::CloudFormation::WaitConditionHandle\n\n  broker_wait_condition:\n    type: AWS::CloudFormation::WaitCondition\n    depends_on: OpenShiftBroker\n    properties:\n      Handle:\n        get_resource: broker_wait_handle\n      Timeout: 6000\n\n  OpenShiftSecurityGroup:\n    type: AWS::EC2::SecurityGroup\n    properties:\n      GroupDescription: Standard firewall rules\n      SecurityGroupIngress:\n      - {IpProtocol: udp, FromPort: '53', ToPort: '53', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '53', ToPort: '53', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '22', ToPort: '22', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '80', ToPort: '80', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '443', ToPort: '443', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '8000', ToPort: '8000', CidrIp: 0.0.0.0/0}\n      - {IpProtocol: tcp, FromPort: '8443', ToPort: '8443', CidrIp: 0.0.0.0/0}\n\n  OpenShiftBroker:\n    type: OS::Nova::Server\n    properties:\n      image: centos-6.5-x86_64-cfntools\n      flavor: {get_param: instance_type}\n      key_name: {get_param: key_name}\n      security_groups: [ {get_resource: OpenShiftSecurityGroup} ]\n      user_data:\n        str_replace:\n          template: |\n            #!/bin/bash -v\n\n            yum -y install https://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\n            yum -y install https://yum.puppetlabs.com/el/6/products/x86_64/puppetlabs-release-6-10.noarch.rpm\n            yum -y install augeas\n\n            augtool setm /files/etc/yum.repos.d/puppetlabs.repo/* exclude '*mcollective*\\ activemq'\n            augtool set /files/etc/sysconfig/network/HOSTNAME broker.$dns_prefix$\n\n            yum install -y puppet facter tar bind\n            mkdir -p /etc/puppet/modules && cd /etc/puppet/modules\n            puppet module install openshift/openshift_origin --version 3.0.1\n\n            /usr/sbin/dnssec-keygen -a HMAC-MD5 -b 512 -n USER -r /dev/urandom -K /var/named $dns_prefix$\n            export DNS_SEC_KEY=\"`cat /var/named/K$dns_prefix$.*.key  | awk '{print $8}'`\"\n\n            cat << EOF > configure_origin.pp\n            class { 'openshift_origin' :\n                roles => ['broker','named','activemq','datastore'],\n                broker_hostname => 'broker.$dns_prefix$',\n                named_hostname => 'broker.$dns_prefix$',\n                datastore_hostname => 'broker.$dns_prefix$',\n                activemq_hostname => 'broker.$dns_prefix$',\n                bind_key => '${DNS_SEC_KEY}',\n                domain => '$dns_prefix$',\n                register_host_with_named => true,\n                conf_named_upstream_dns => ['$dns_server$'],\n                broker_auth_plugin => 'htpasswd',\n                openshift_user1 => '$user_name$',\n                openshift_password1 => '$password$',\n                development_mode => true,\n            }\n            EOF\n\n            puppet apply --verbose configure_origin.pp | tee /var/log/configure_origin.log\n            /usr/bin/cfn-signal -e 0 --data \"${DNS_SEC_KEY}\" -r \"Broker setup complete\" \"$broker_wait_handle$\"\n            reboot\n          params:\n            $dns_prefix$: { get_param: dns_prefix }\n            $dns_server$: { get_param: dns_server }\n            $user_name$: { get_param: user_name }\n            $password$: { get_param: password }\n            $broker_wait_handle$: { get_resource: broker_wait_handle }\n\n  OpenShiftNode:\n    type: OS::Nova::Server\n    depends_on: broker_wait_condition\n    properties:\n      image: centos-6.5-x86_64-cfntools\n      flavor: {get_param: instance_type}\n      key_name: {get_param: key_name}\n      security_groups: [ {get_resource: OpenShiftSecurityGroup} ]\n      user_data:\n        str_replace:\n          template: |\n            #!/bin/bash -v\n\n            yum -y install https://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\n            yum -y install https://yum.puppetlabs.com/el/6/products/x86_64/puppetlabs-release-6-10.noarch.rpm\n            yum -y install augeas\n\n            augtool setm /files/etc/yum.repos.d/puppetlabs.repo/* exclude '*mcollective*\\ activemq'\n            augtool set /files/etc/sysconfig/network/HOSTNAME node.$dns_prefix$\n\n            yum install -y puppet facter tar bind-utils\n            mkdir -p /etc/puppet/modules && cd /etc/puppet/modules\n            puppet module install openshift/openshift_origin --version 3.0.1\n\n            export DNS_SEC_KEY=\"`python -c 'print $dns_sec_key$.values().pop()'`\"\n            export BROKER_IP=\"$broker_ip$\"\n\n            cat << EOF > configure_origin.pp\n            class { 'openshift_origin' :\n                roles => ['node'],\n                named_ip_addr => '${BROKER_IP}',\n                bind_key => '${DNS_SEC_KEY}',\n                domain => '$dns_prefix$',\n                register_host_with_named => true,\n                broker_hostname => 'broker.$dns_prefix$',\n                activemq_hostname => 'broker.$dns_prefix$',\n                node_hostname => 'node.$dns_prefix$',\n                install_method => 'yum',\n                jenkins_repo_base => 'http://pkg.jenkins-ci.org/redhat',\n                development_mode => true,\n            }\n            EOF\n\n            puppet apply --verbose configure_origin.pp | tee /var/log/configure_origin.log\n            reboot\n          params:\n            $dns_prefix$: { get_param: dns_prefix }\n            $dns_server$: { get_param: dns_server }\n            $dns_sec_key$: { get_attr: [ broker_wait_condition, Data ] }\n            $broker_ip$: { get_attr: [ OpenShiftBroker, first_address ] }\n\n", "heat_template_version: 2013-05-23\ndescription: Template for setting up an OpenShift Origin environment\nparameters:\n  dns_prefix:\n    description: your DNS prefix\n    type: string\n    default: example.com\n  dns_server:\n    description: upstream DNS server\n    type: string\n    default: 8.8.8.8\n  key_name:\n    description: name of a key pair to enable SSH access to the instances\n    type: string\n  instance_type:\n    description: instance type for server\n    type: string\n    default: m1.small\n    constraints:\n      - allowed_values: [m1.tiny, m1.small, m1.medium, m1.large, m1.xlarge]\n        description: must be a valid instance type\n  user_name:\n    description: user name for OpenShift login\n    type: string\n    default: openshift\n  password:\n    description: password for OpenShift login\n    type: string\n    default: password\nresources:\n  OpenShift:\n    type: OS::Nova::Server\n    properties:\n      image: centos-6.5-x86_64-cfntools\n      flavor: {get_param: instance_type}\n      key_name: {get_param: key_name}\n      user_data:\n        str_replace:\n          template: |\n            #!/bin/bash -v\n\n            yum -y install https://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\n            yum -y install https://yum.puppetlabs.com/el/6/products/x86_64/puppetlabs-release-6-10.noarch.rpm\n            yum -y install augeas\n\n            augtool setm /files/etc/yum.repos.d/puppetlabs.repo/* exclude '*mcollective*\\ activemq'\n            augtool set /files/etc/sysconfig/network/HOSTNAME broker.$dns_prefix$\n\n            yum install -y puppet facter tar bind\n            mkdir -p /etc/puppet/modules && cd /etc/puppet/modules\n            puppet module install openshift/openshift_origin --version 3.0.1\n\n            /usr/sbin/dnssec-keygen -a HMAC-MD5 -b 512 -n USER -r /dev/urandom -K /var/named $dns_prefix$\n            export DNS_SEC_KEY=\"`cat /var/named/K$dns_prefix$.*.key  | awk '{print $8}'`\"\n\n            cat << EOF > configure_origin.pp\n            class { 'openshift_origin' :\n                roles => ['broker','named','activemq','datastore','node'],\n                broker_hostname => 'broker.$dns_prefix$',\n                node_hostname => 'broker.$dns_prefix$',\n                named_hostname => 'broker.$dns_prefix$',\n                datastore_hostname => 'broker.$dns_prefix$',\n                activemq_hostname => 'broker.$dns_prefix$',\n                bind_key => '${DNS_SEC_KEY}',\n                domain => '$dns_prefix$',\n                register_host_with_named => true,\n                conf_named_upstream_dns => ['$dns_server$'],\n                broker_auth_plugin => 'htpasswd',\n                openshift_user1 => '$user_name$',\n                openshift_password1 => '$password$',\n                install_method => 'yum',\n                jenkins_repo_base => 'http://pkg.jenkins-ci.org/redhat',\n                development_mode => true,\n            }\n            EOF\n\n            puppet apply --verbose configure_origin.pp | tee /var/log/configure_origin.log\n            reboot\n          params:\n            $dns_prefix$: { get_param: dns_prefix }\n            $dns_server$: { get_param: dns_server }\n            $user_name$: { get_param: user_name }\n            $password$: { get_param: password }\n\n"], "filenames": ["openshift-enterprise/dib/elements/openshift-enterprise-broker/install.d/30-openshift-enterprise-broker", "openshift-enterprise/dib/elements/openshift-enterprise-node/install.d/30-openshift-enterprise-node", "openshift-enterprise/heat/neutron/highly-available/ose_ha_stack.yaml", "openshift-enterprise/heat/neutron/highly-available/ose_node_stack.yaml", "openshift-origin/centos65/OpenShift-1B1N.yaml", "openshift-origin/centos65/OpenShift.yaml"], "buggy_code_start_loc": [15, 15, 148, 112, 67, 42], "buggy_code_end_loc": [50, 81, 149, 113, 124, 44], "fixing_code_start_loc": [15, 15, 148, 112, 67, 42], "fixing_code_end_loc": [45, 77, 149, 113, 124, 44], "type": "NVD-CWE-noinfo", "message": "OpenStack Heat Templates (heat-templates), as used in Red Hat Enterprise Linux OpenStack Platform 4.0, uses an HTTP connection to download (1) packages and (2) signing keys from Yum repositories, which allows man-in-the-middle attackers to prevent updates via unspecified vectors.", "other": {"cve": {"id": "CVE-2014-0040", "sourceIdentifier": "secalert@redhat.com", "published": "2014-06-02T15:55:11.560", "lastModified": "2023-02-13T00:30:07.530", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "OpenStack Heat Templates (heat-templates), as used in Red Hat Enterprise Linux OpenStack Platform 4.0, uses an HTTP connection to download (1) packages and (2) signing keys from Yum repositories, which allows man-in-the-middle attackers to prevent updates via unspecified vectors."}, {"lang": "es", "value": "OpenStack Heat Templates (heat-templates), utilizado Red Hat Enterprise Linux OpenStack Platform 4.0, utiliza una conexi\u00f3n HTTP para descargar (1) paquetes y (2) claves de firmas de repositorios Yum, lo que permite a atacantes man-in-the-middle prevenir actualizaciones a trav\u00e9s de vectores no especificados."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:redhat:openstack:4.0:*:*:*:*:*:*:*", "matchCriteriaId": "1802FDB8-C919-4D5E-A8AD-4C5B72525090"}]}]}], "references": [{"url": "http://rhn.redhat.com/errata/RHSA-2014-0579.html", "source": "secalert@redhat.com", "tags": ["Vendor Advisory"]}, {"url": "https://bugs.launchpad.net/heat-templates/+bug/1267635", "source": "secalert@redhat.com"}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1059514", "source": "secalert@redhat.com"}, {"url": "https://github.com/openstack/heat-templates/commit/65a4f8bebc72da71c616e2e378b7b1ac354db1a3", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}]}, "github_commit_url": "https://github.com/openstack/heat-templates/commit/65a4f8bebc72da71c616e2e378b7b1ac354db1a3"}}