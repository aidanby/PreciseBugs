{"buggy_code": ["// Dependencies\nconst protocols = require(\"protocols\")\n    , isSsh = require(\"is-ssh\")\n    , qs = require(\"query-string\")\n    ;\n\n/**\n * parsePath\n * Parses the input url.\n *\n * @name parsePath\n * @function\n * @param {String} url The input url.\n * @return {Object} An object containing the following fields:\n *\n *  - `protocols` (Array): An array with the url protocols (usually it has one element).\n *  - `protocol` (String): The first protocol, `\"ssh\"` (if the url is a ssh url) or `\"file\"`.\n *  - `port` (null|Number): The domain port.\n *  - `resource` (String): The url domain (including subdomains).\n *  - `user` (String): The authentication user (usually for ssh urls).\n *  - `pathname` (String): The url pathname.\n *  - `hash` (String): The url hash.\n *  - `search` (String): The url querystring value.\n *  - `href` (String): The input url.\n *  - `query` (Object): The url querystring, parsed as object.\n */\nfunction parsePath(url) {\n    url = (url || \"\").trim().replace(/\\r?\\n|\\r/gm, \"\")\n    var output = {\n            protocols: protocols(url)\n          , protocol: null\n          , port: null\n          , resource: \"\"\n          , user: \"\"\n          , pathname: \"\"\n          , hash: \"\"\n          , search: \"\"\n          , href: url\n          , query: Object.create(null)\n        }\n      , protocolIndex = url.indexOf(\"://\")\n      , resourceIndex = -1\n      , splits = null\n      , parts = null\n      ;\n\n    if (url.startsWith(\".\")) {\n        if (url.startsWith(\"./\")) {\n            url = url.substring(2);\n        }\n        output.pathname = url;\n        output.protocol = \"file\";\n    }\n\n    const firstChar = url.charAt(1)\n    if (!output.protocol) {\n        output.protocol = output.protocols[0]\n        if (!output.protocol) {\n            if (isSsh(url)) {\n                output.protocol = \"ssh\"\n            } else if (firstChar === \"/\" || firstChar === \"~\") {\n                url = url.substring(2)\n                output.protocol = \"file\"\n            } else {\n                output.protocol = \"file\"\n            }\n        }\n    }\n\n    if (protocolIndex !== -1) {\n        url = url.substring(protocolIndex + 3);\n    }\n\n    parts = url.split(/\\/|\\\\/);\n    if (output.protocol !== \"file\") {\n        output.resource = parts.shift();\n    } else {\n        output.resource = \"\";\n    }\n\n    // user@domain\n    splits = output.resource.split(\"@\");\n    if (splits.length === 2) {\n        output.user = splits[0];\n        output.resource = splits[1];\n    }\n\n\n    // domain.com:port\n    splits = output.resource.split(\":\");\n    if (splits.length === 2) {\n        output.resource = splits[0];\n        const port = splits[1];\n        if (port) {\n            output.port = Number(port);\n            if (isNaN(output.port) || port.match(/^\\d+$/) === null) {\n                output.port = null;\n                parts.unshift(port);\n            }\n        } else {\n            output.port = null\n        }\n    }\n\n    // Remove empty elements\n    parts = parts.filter(Boolean);\n\n    // Stringify the pathname\n    if (output.protocol === \"file\") {\n        output.pathname = output.href\n    } else {\n      output.pathname = output.pathname || ((output.protocol !== \"file\" || output.href[0] === \"/\" ? \"/\" : \"\") + parts.join(\"/\"));\n    }\n\n    // #some-hash\n    splits = output.pathname.split(\"#\");\n    if (splits.length === 2) {\n        output.pathname = splits[0];\n        output.hash = splits[1];\n    }\n\n    // ?foo=bar\n    splits = output.pathname.split(\"?\");\n    if (splits.length === 2) {\n        output.pathname = splits[0];\n        output.search = splits[1];\n    }\n\n    output.query = qs.parse(output.search);\n    output.href = output.href.replace(/\\/$/, \"\")\n    output.pathname = output.pathname.replace(/\\/$/, \"\")\n    return output;\n}\n\nmodule.exports = parsePath;\n", "{\n  \"name\": \"parse-path\",\n  \"version\": \"4.0.4\",\n  \"description\": \"Parse paths (local paths, urls: ssh/git/etc)\",\n  \"main\": \"lib/index.js\",\n  \"directories\": {\n    \"example\": \"example\",\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"test\": \"node test\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/IonicaBizau/parse-path.git\"\n  },\n  \"keywords\": [\n    \"parse\",\n    \"path\",\n    \"url\",\n    \"node\",\n    \"git\",\n    \"advanced\"\n  ],\n  \"author\": \"Ionic\u0103 Biz\u0103u <bizauionica@gmail.com> (https://ionicabizau.net)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/IonicaBizau/parse-path/issues\"\n  },\n  \"homepage\": \"https://github.com/IonicaBizau/parse-path\",\n  \"devDependencies\": {\n    \"tester\": \"^1.3.1\"\n  },\n  \"dependencies\": {\n    \"is-ssh\": \"^1.3.0\",\n    \"protocols\": \"^1.4.0\",\n    \"qs\": \"^6.9.4\",\n    \"query-string\": \"^6.13.8\"\n  },\n  \"files\": [\n    \"bin/\",\n    \"app/\",\n    \"lib/\",\n    \"dist/\",\n    \"src/\",\n    \"scripts/\",\n    \"resources/\",\n    \"menu/\",\n    \"cli.js\",\n    \"index.js\",\n    \"bloggify.js\",\n    \"bloggify.json\",\n    \"bloggify/\"\n  ]\n}", "// Dependencies\nconst parseUrl = require(\"../lib\")\n    , tester = require(\"tester\")\n    , qs = require(\"querystring\")\n    ;\n\nconst INPUTS = [\n    [\n        \"http://ionicabizau.net/blog\"\n      , {\n            protocols: [ \"http\" ]\n          , protocol: \"http\"\n          , port: null\n          , resource: \"ionicabizau.net\"\n          , user: \"\"\n          , pathname: \"/blog\"\n          , hash: \"\"\n          , search: \"\"\n        }\n    ]\n  , [\n        \"    http://ionicabizau.net/blog   \"\n      , {\n            protocols: [ \"http\" ]\n          , protocol: \"http\"\n          , port: null\n          , resource: \"ionicabizau.net\"\n          , user: \"\"\n          , pathname: \"/blog\"\n          , hash: \"\"\n          , search: \"\"\n        }\n    ]\n  , [\n        \"http://domain.com/path/name?foo=bar&bar=42#some-hash\"\n      , {\n            protocols: [\"http\"]\n          , protocol: \"http\"\n          , port: null\n          , resource: \"domain.com\"\n          , user: \"\"\n          , pathname: \"/path/name\"\n          , hash: \"some-hash\"\n          , search: \"foo=bar&bar=42\"\n        }\n    ]\n  , [\n        \"http://domain.com/path/name#some-hash?foo=bar&bar=42\"\n      , {\n            protocols: [\"http\"]\n          , protocol: \"http\"\n          , port: null\n          , resource: \"domain.com\"\n          , user: \"\"\n          , pathname: \"/path/name\"\n          , hash: \"some-hash?foo=bar&bar=42\"\n          , search: \"\"\n        }\n    ]\n  , [\n        \"git+ssh://git@host.xz/path/name.git\"\n      , {\n            protocols: [\"git\", \"ssh\"]\n          , protocol: \"git\"\n          , port: null\n          , resource: \"host.xz\"\n          , user: \"git\"\n          , pathname: \"/path/name.git\"\n          , hash: \"\"\n          , search: \"\"\n        }\n    ]\n  , [\n        \"git@github.com:IonicaBizau/git-stats.git\"\n      , {\n            protocols: []\n          , protocol: \"ssh\"\n          , port: null\n          , resource: \"github.com\"\n          , user: \"git\"\n          , pathname: \"/IonicaBizau/git-stats.git\"\n          , hash: \"\"\n          , search: \"\"\n        }\n    ]\n  , [\n        \"/path/to/file.png\"\n      , {\n            protocols: []\n          , protocol: \"file\"\n          , port: null\n          , resource: \"\"\n          , user: \"\"\n          , pathname: \"/path/to/file.png\"\n          , hash: \"\"\n          , search: \"\"\n        }\n    ]\n  , [\n        \"./path/to/file.png\"\n      , {\n            protocols: []\n          , protocol: \"file\"\n          , port: null\n          , resource: \"\"\n          , user: \"\"\n          , pathname: \"./path/to/file.png\"\n          , hash: \"\"\n          , search: \"\"\n        }\n    ]\n  , [\n        \"./.path/to/file.png\"\n      , {\n            protocols: []\n          , protocol: \"file\"\n          , port: null\n          , resource: \"\"\n          , user: \"\"\n          , pathname: \"./.path/to/file.png\"\n          , hash: \"\"\n          , search: \"\"\n        }\n    ]\n  , [\n        \".path/to/file.png\"\n      , {\n            protocols: []\n          , protocol: \"file\"\n          , port: null\n          , resource: \"\"\n          , user: \"\"\n          , pathname: \".path/to/file.png\"\n          , hash: \"\"\n          , search: \"\"\n        }\n    ]\n  , [\n        \"path/to/file.png\"\n      , {\n            protocols: []\n          , protocol: \"file\"\n          , port: null\n          , resource: \"\"\n          , user: \"\"\n          , pathname: \"path/to/file.png\"\n          , hash: \"\"\n          , search: \"\"\n        }\n    ], [\n      \"git@github.com:9IonicaBizau/git-stats.git\"\n    , {\n          protocols: []\n        , protocol: \"ssh\"\n        , port: null\n        , resource: \"github.com\"\n        , user: \"git\"\n        , pathname: \"/9IonicaBizau/git-stats.git\"\n        , hash: \"\"\n        , search: \"\"\n      }\n    ], [\n      \"git@github.com:0xABC/git-stats.git\"\n    , {\n          protocols: []\n        , protocol: \"ssh\"\n        , port: null\n        , resource: \"github.com\"\n        , user: \"git\"\n        , pathname: \"/0xABC/git-stats.git\"\n        , hash: \"\"\n        , search: \"\"\n      }\n    ], [\n      \"https://attacker.com\\\\@example.com\"\n    , {\n          protocols: [\"https\"]\n        , protocol: \"https\"\n        , port: null\n        , resource: \"attacker.com\"\n        , user: \"\"\n        , pathname: \"/@example.com\"\n        , hash: \"\"\n        , search: \"\"\n      }\n  ], [\n      \"jav\\r\\nascript://%0aalert(1)\"\n    , {\n          protocols: [\"javascript\"]\n        , protocol: \"javascript\"\n        , port: null\n        , resource: \"%0aalert(1)\"\n        , user: \"\"\n        , pathname: \"\"\n        , hash: \"\"\n        , search: \"\"\n      }\n  ]\n];\n\ntester.describe(\"check urls\", test => {\n    INPUTS.forEach(function (c) {\n        test.should(\"support \" + c[0], () => {\n            c[1].href = c[0].trim().replace(/\\r?\\n|\\r/gm, \"\");\n            c[1].query = qs.parse(c[1].search)\n            test.expect(parseUrl(c[0])).toEqual(c[1]);\n        });\n    });\n});\n"], "fixing_code": ["const protocols = require(\"protocols\")\n\n/**\n * parsePath\n * Parses the input url.\n *\n * @name parsePath\n * @function\n * @param {String} url The input url.\n * @return {Object} An object containing the following fields:\n *\n *  - `protocols` (Array): An array with the url protocols (usually it has one element).\n *  - `protocol` (String): The first protocol, `\"ssh\"` (if the url is a ssh url) or `\"file\"`.\n *  - `port` (null|Number): The domain port.\n *  - `resource` (String): The url domain (including subdomains).\n *  - `user` (String): The authentication user (usually for ssh urls).\n *  - `pathname` (String): The url pathname.\n *  - `hash` (String): The url hash.\n *  - `search` (String): The url querystring value.\n *  - `href` (String): The input url.\n *  - `query` (Object): The url querystring, parsed as object.\n */\nfunction parsePath(url) {\n\n    const output = {\n        protocols: []\n      , protocol: null\n      , port: null\n      , resource: \"\"\n      , user: \"\"\n      , password: \"\"\n      , pathname: \"\"\n      , hash: \"\"\n      , search: \"\"\n      , href: url\n      , query: {}\n    }\n\n    try {\n        const parsed = new URL(url)\n        output.protocols = protocols(parsed)\n        output.protocol = output.protocols[0]\n        output.port = parsed.port\n        output.resource =  parsed.host\n        output.user = parsed.username || \"\"\n        output.password = parsed.password || \"\"\n        output.pathname = parsed.pathname\n        output.hash = parsed.hash.slice(1)\n        output.search = parsed.search.slice(1)\n        output.href = parsed.href\n        output.query = Object.fromEntries(parsed.searchParams)\n    } catch (e) {\n        // TODO Maybe check if it is a valid local file path\n        //      In any case, these will be parsed by higher\n        //      level parsers such as parse-url, git-url-parse, git-up\n        output.protocols = [\"file\"]\n        output.protocol = output.protocols[0]\n        output.port = \"\"\n        output.resource =  \"\"\n        output.user = \"\"\n        output.pathname = \"\"\n        output.hash = \"\"\n        output.search = \"\"\n        output.href = url\n        output.query = {}\n    }\n\n    return output;\n}\n\nmodule.exports = parsePath;\n", "{\n  \"name\": \"parse-path\",\n  \"version\": \"4.0.4\",\n  \"description\": \"Parse paths (local paths, urls: ssh/git/etc)\",\n  \"main\": \"lib/index.js\",\n  \"directories\": {\n    \"example\": \"example\",\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"test\": \"node test\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/IonicaBizau/parse-path.git\"\n  },\n  \"keywords\": [\n    \"parse\",\n    \"path\",\n    \"url\",\n    \"node\",\n    \"git\",\n    \"advanced\"\n  ],\n  \"author\": \"Ionic\u0103 Biz\u0103u <bizauionica@gmail.com> (https://ionicabizau.net)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/IonicaBizau/parse-path/issues\"\n  },\n  \"homepage\": \"https://github.com/IonicaBizau/parse-path\",\n  \"devDependencies\": {\n    \"tester\": \"^1.3.1\"\n  },\n  \"dependencies\": {\n    \"is-ssh\": \"^1.3.0\",\n    \"protocols\": \"^1.4.0\",\n    \"qs\": \"^6.9.4\",\n    \"query-string\": \"^6.13.8\"\n  },\n  \"files\": [\n    \"bin/\",\n    \"app/\",\n    \"lib/\",\n    \"dist/\",\n    \"src/\",\n    \"scripts/\",\n    \"resources/\",\n    \"menu/\",\n    \"cli.js\",\n    \"index.js\",\n    \"bloggify.js\",\n    \"bloggify.json\",\n    \"bloggify/\"\n  ]\n}\n", "// Dependencies\nconst parseUrl = require(\"../lib\")\n    , tester = require(\"tester\")\n    ;\n\nconst INPUTS = [\n    [\n        \"http://ionicabizau.net/blog\"\n      , {\n            protocols: [ \"http\" ]\n          , protocol: \"http\"\n          , port: \"\"\n          , resource: \"ionicabizau.net\"\n          , user: \"\"\n          , pathname: \"/blog\"\n          , hash: \"\"\n          , search: \"\"\n          , href: \"http://ionicabizau.net/blog\"\n          , query: {}\n        }\n    ]\n  , [\n        \"    http://ionicabizau.net/blog   \"\n      , {\n            protocols: [ \"http\" ]\n          , protocol: \"http\"\n          , port: \"\"\n          , resource: \"ionicabizau.net\"\n          , user: \"\"\n          , pathname: \"/blog\"\n          , hash: \"\"\n          , search: \"\"\n          , href: \"http://ionicabizau.net/blog\"\n          , query: {}\n        }\n    ]\n  , [\n        \"http://domain.com/path/name?foo=bar&bar=42#some-hash\"\n      , {\n            protocols: [\"http\"]\n          , protocol: \"http\"\n          , port: \"\"\n          , resource: \"domain.com\"\n          , user: \"\"\n          , pathname: \"/path/name\"\n          , hash: \"some-hash\"\n          , search: \"foo=bar&bar=42\"\n          , query: { foo: \"bar\", bar: \"42\" }\n          , href: \"http://domain.com/path/name?foo=bar&bar=42#some-hash\"\n        }\n    ]\n  , [\n        \"http://domain.com/path/name#some-hash?foo=bar&bar=42\"\n      , {\n            protocols: [\"http\"]\n          , protocol: \"http\"\n          , port: \"\"\n          , resource: \"domain.com\"\n          , user: \"\"\n          , pathname: \"/path/name\"\n          , hash: \"some-hash?foo=bar&bar=42\"\n          , search: \"\"\n          , query: {}\n          , href: \"http://domain.com/path/name#some-hash?foo=bar&bar=42\"\n        }\n    ]\n  , [\n        \"git+ssh://git@host.xz/path/name.git\"\n      , {\n            protocols: [\"git\", \"ssh\"]\n          , protocol: \"git\"\n          , port: \"\"\n          , resource: \"host.xz\"\n          , user: \"git\"\n          , pathname: \"/path/name.git\"\n          , hash: \"\"\n          , search: \"\"\n          , query: {}\n          , href: \"git+ssh://git@host.xz/path/name.git\"\n        }\n    ]\n  , [\n        // NOTE:parse-path will look at this as a local path\n        //      For parsing it as url, please use parse-url\n        \"git@github.com:IonicaBizau/git-stats.git\"\n      , {\n            protocols: [\"file\"]\n          , protocol: \"file\"\n          , port: \"\"\n          , resource: \"\"\n          , user: \"\"\n          , pathname: \"\"\n          , hash: \"\"\n          , search: \"\"\n          , query: {}\n          , href: \"git@github.com:IonicaBizau/git-stats.git\"\n        }\n    ]\n  , [\n        \"/path/to/file.png\"\n      , {\n            protocols: [\"file\"]\n          , protocol: \"file\"\n          , port: \"\"\n          , resource: \"\"\n          , user: \"\"\n          , pathname: \"\"\n          , hash: \"\"\n          , search: \"\"\n          , query: {}\n          , href: \"/path/to/file.png\"\n        }\n    ]\n  , [\n        \"./path/to/file.png\"\n      , {\n            protocols: [\"file\"]\n          , protocol: \"file\"\n          , port: \"\"\n          , resource: \"\"\n          , user: \"\"\n          , pathname: \"\"\n          , hash: \"\"\n          , search: \"\"\n          , query: {}\n          , href: \"./path/to/file.png\"\n        }\n    ]\n  , [\n        \"./.path/to/file.png\"\n      , {\n            protocols: [\"file\"]\n          , protocol: \"file\"\n          , port: \"\"\n          , resource: \"\"\n          , user: \"\"\n          , pathname: \"\"\n          , hash: \"\"\n          , search: \"\"\n          , query: {}\n          , href: \"./.path/to/file.png\"\n        }\n    ]\n  , [\n        \".path/to/file.png\"\n      , {\n            protocols: [\"file\"]\n          , protocol: \"file\"\n          , port: \"\"\n          , resource: \"\"\n          , user: \"\"\n          , pathname: \"\"\n          , hash: \"\"\n          , search: \"\"\n          , query: {}\n          , href: \".path/to/file.png\"\n        }\n    ]\n  , [\n        \"path/to/file.png\"\n      , {\n            protocols: [\"file\"]\n          , protocol: \"file\"\n          , port: \"\"\n          , resource: \"\"\n          , user: \"\"\n          , pathname: \"\"\n          , hash: \"\"\n          , search: \"\"\n          , query: {}\n          , href: \"path/to/file.png\"\n        }\n    ], [\n      \"git@github.com:9IonicaBizau/git-stats.git\"\n    , {\n          protocols: [\"file\"]\n        , protocol: \"file\"\n        , port: \"\"\n        , resource: \"\"\n        , user: \"\"\n        , pathname: \"\"\n        , hash: \"\"\n        , search: \"\"\n        , query: {}\n        , href: \"git@github.com:9IonicaBizau/git-stats.git\"\n      }\n    ], [\n      \"git@github.com:0xABC/git-stats.git\"\n    , {\n          protocols: [\"file\"]\n        , protocol: \"file\"\n        , port: \"\"\n        , resource: \"\"\n        , user: \"\"\n        , pathname: \"\"\n        , hash: \"\"\n        , search: \"\"\n        , query: {}\n        , href: \"git@github.com:0xABC/git-stats.git\"\n      }\n    ], [\n      \"https://attacker.com\\\\@example.com\"\n    , {\n          protocols: [\"https\"]\n        , protocol: \"https\"\n        , port: \"\"\n        , resource: \"attacker.com\"\n        , user: \"\"\n        , pathname: \"/@example.com\"\n        , hash: \"\"\n        , search: \"\"\n        , href: \"https://attacker.com/@example.com\"\n        , query: {}\n      }\n  ], [\n      \"jav\\r\\nascript://%0aalert(1)\"\n    , {\n          protocols: [\"javascript\"]\n        , protocol: \"javascript\"\n        , port: \"\"\n        , resource: \"%0aalert(1)\"\n        , user: \"\"\n        , pathname: \"\"\n        , hash: \"\"\n        , href: \"javascript://%0aalert(1)\"\n        , query: {}\n        , search: \"\"\n      }\n  ]\n];\n\ntester.describe(\"check urls\", test => {\n    INPUTS.forEach(function (c) {\n        test.should(\"support \" + c[0], () => {\n            const cParsed = parseUrl(c[0])\n            debugger\n            test.expect(cParsed).toEqual(c[1]);\n        });\n    });\n});\n"], "filenames": ["lib/index.js", "package.json", "test/index.js"], "buggy_code_start_loc": [1, 55, 4], "buggy_code_end_loc": [132, 56, 207], "fixing_code_start_loc": [0, 55, 3], "fixing_code_end_loc": [67, 56, 238], "type": "CWE-639", "message": "Authorization Bypass Through User-Controlled Key in GitHub repository ionicabizau/parse-path prior to 5.0.0.", "other": {"cve": {"id": "CVE-2022-0624", "sourceIdentifier": "security@huntr.dev", "published": "2022-06-28T09:15:08.343", "lastModified": "2022-07-07T16:10:49.897", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Authorization Bypass Through User-Controlled Key in GitHub repository ionicabizau/parse-path prior to 5.0.0."}, {"lang": "es", "value": "Una Omisi\u00f3n de Autorizaci\u00f3n Mediante la Clave Controlada por el Usuario en el repositorio de GitHub ionicabizau/parse-path versiones anteriores a 5.0.0"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 7.3, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.4}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 2.5}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-639"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:parse-path_project:parse-path:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "5.0.0", "matchCriteriaId": "92617745-DE52-49D3-BA3A-42687A1045A5"}]}]}], "references": [{"url": "https://github.com/ionicabizau/parse-path/commit/f9ad8856a3c8ae18e1cf4caef5edbabbc42840e8", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/afffb2bd-fb06-4144-829e-ecbbcbc85388", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/ionicabizau/parse-path/commit/f9ad8856a3c8ae18e1cf4caef5edbabbc42840e8"}}