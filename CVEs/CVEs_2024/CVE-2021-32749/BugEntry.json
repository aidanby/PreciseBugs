{"buggy_code": ["# Fail2Ban configuration file\n#\n# Author: Russell Odom <russ@gloomytrousers.co.uk>, Daniel Black\n# Sends a complaint e-mail to addresses listed in the whois record for an\n# offending IP address.\n# This uses the https://abusix.com/contactdb.html to lookup abuse contacts.\n#\n# DEPENDENCIES:\n# This requires the dig command from bind-utils\n#\n# You should provide the <logpath> in the jail config - lines from the log\n# matching the given IP address will be provided in the complaint as evidence.\n#\n# WARNING\n# -------\n#\n# Please do not use this action unless you are certain that fail2ban\n# does not result in \"false positives\" for your deployment.  False\n# positive reports could serve a mis-favor to the original cause by\n# flooding corresponding contact addresses, and complicating the work\n# of administration personnel responsible for handling (verified) legit\n# complains.\n#\n# Please consider using e.g. sendmail-whois-lines.conf action which\n# would send the reports with relevant information to you, so the\n# report could be first reviewed and then forwarded to a corresponding\n# contact if legit.\n#\n\n\n[Definition]\n\n# Option:  actionstart\n# Notes.:  command executed once at the start of Fail2Ban.\n# Values:  CMD\n#\nactionstart =\n\n# Option:  actionstop\n# Notes.:  command executed once at the end of Fail2Ban\n# Values:  CMD\n#\nactionstop =\n\n# Option:  actioncheck\n# Notes.:  command executed once before each actionban command\n# Values:  CMD\n#\nactioncheck =\n\n# Option:  actionban\n# Notes.:  command executed when banning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionban = oifs=${IFS}; IFS=.;SEP_IP=( <ip> ); set -- ${SEP_IP}; ADDRESSES=$(dig +short -t txt -q $4.$3.$2.$1.abuse-contacts.abusix.org); IFS=${oifs}\n\t    IP=<ip>\n            if [ ! -z \"$ADDRESSES\" ]; then\n                (printf %%b \"<message>\\n\"; date '+Note: Local timezone is %%z (%%Z)'; grep -E '(^|[^0-9])<ip>([^0-9]|$)' <logpath>) | <mailcmd> \"Abuse from <ip>\" <mailargs> ${ADDRESSES//,/\\\" \\\"}\n            fi\n\n# Option:  actionunban\n# Notes.:  command executed when unbanning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionunban =\n\n[Init]\nmessage = Dear Sir/Madam,\\n\\nWe have detected abuse from the IP address $IP, which according to a abusix.com is on your network. We would appreciate if you would investigate and take action as appropriate.\\n\\nLog lines are given below, but please ask if you require any further information.\\n\\n(If you are not the correct person to contact about this please accept our apologies - your e-mail address was extracted from the whois record by an automated process.)\\n\\n This mail was generated by Fail2Ban.\\nThe recipient address of this report was provided by the Abuse Contact DB by abusix.com. abusix.com does not maintain the content of the database. All information which we pass out, derives from the RIR databases and is processed for ease of use. If you want to change or report non working abuse contacts please contact the appropriate RIR. If you have any further question, contact abusix.com directly via email (info@abusix.com). Information about the Abuse Contact Database can be found here: https://abusix.com/global-reporting/abuse-contact-db\\nabusix.com is neither responsible nor liable for the content or accuracy of this message.\\n\n\n# Path to the log files which contain relevant lines for the abuser IP\n#\nlogpath = /dev/null\n\n# Option:  mailcmd\n# Notes.:  Your system mail command. Is passed 2 args: subject and recipient\n# Values:  CMD\n#\nmailcmd = mail -s\n\n# Option:  mailargs\n# Notes.:  Additional arguments to mail command. e.g. for standard Unix mail:\n#          CC reports to another address:\n#              -c me@example.com\n#          Appear to come from a different address - the '--' indicates\n#          arguments to be passed to Sendmail:\n#              -- -f me@example.com\n# Values:  [ STRING ]\n#\nmailargs =\n\n", "# Fail2Ban configuration file\n#\n# Author: Russell Odom <russ@gloomytrousers.co.uk>\n# Submits attack reports to DShield (http://www.dshield.org/)\n#\n# You MUST configure at least:\n# <port> (the port that's being attacked - use number not name).\n#\n# You SHOULD also provide:\n# <myip> (your public IP address, if it's not the address of eth0)\n# <userid> (your DShield userID, if you have one - recommended, but reports will\n# be used anonymously if not)\n# <protocol> (the protocol in use - defaults to tcp)\n#\n# Best practice is to provide <port> and <protocol> in jail.conf like this:\n# action = dshield[port=1234,protocol=tcp]\n#\n# ...and create \"dshield.local\" with contents something like this:\n# [Init]\n# myip = 10.0.0.1\n# userid = 12345\n#\n# Other useful configuration values are <mailargs> (you can use for specifying\n# a different sender address for the report e-mails, which should match what is\n# configured at DShield), and <lines>/<minreportinterval>/<maxbufferage> (to\n# configure how often the buffer is flushed).\n#\n\n[Definition]\n\n# Option:  actionstart\n# Notes.:  command executed once at the start of Fail2Ban.\n# Values:  CMD\n#\nactionstart =\n\n# Option:  actionstop\n# Notes.:  command executed once at the end of Fail2Ban\n# Values:  CMD\n#\nactionstop = if [ -f <tmpfile>.buffer ]; then\n                 cat <tmpfile>.buffer | <mailcmd> \"FORMAT DSHIELD USERID <userid> TZ `date +%%z | sed 's/\\([+-]..\\)\\(..\\)/\\1:\\2/'` Fail2Ban\" <mailargs> <dest>\n                 date +%%s > <tmpfile>.lastsent\n             fi\n             rm -f <tmpfile>.buffer <tmpfile>.first\n\n# Option:  actioncheck\n# Notes.:  command executed once before each actionban command\n# Values:  CMD\n#\nactioncheck =\n\n# Option:  actionban\n# Notes.:  command executed when banning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\n# See http://www.dshield.org/specs.html for more on report format/notes\n#\n# Note: We are currently using <time> for the timestamp because no tag is\n# available to indicate the timestamp of the log message(s) which triggered the\n# ban. Therefore the timestamps we are using in the report, whilst often only a\n# few seconds out, are incorrect. See\n# http://sourceforge.net/tracker/index.php?func=detail&aid=2017795&group_id=121032&atid=689047\n#\nactionban = TZONE=`date +%%z | sed 's/\\([+-]..\\)\\(..\\)/\\1:\\2/'`\n            DATETIME=\"`perl -e '@t=localtime(<time>);printf \"%%4d-%%02d-%%02d %%02d:%%02d:%%02d\",1900+$t[5],$t[4]+1,$t[3],$t[2],$t[1],$t[0]'` $TZONE\"\n\t    PROTOCOL=`awk '{IGNORECASE=1;if($1==\"<protocol>\"){print $2;exit}}' /etc/protocols`\n\t    if [ -z \"$PROTOCOL\" ]; then PROTOCOL=<protocol>; fi\n            printf %%b \"$DATETIME\\t<userid>\\t<failures>\\t<ip>\\t<srcport>\\t<myip>\\t<port>\\t$PROTOCOL\\t<tcpflags>\\n\" >> <tmpfile>.buffer\n            NOW=`date +%%s`\n            if [ ! -f <tmpfile>.first ]; then\n                echo <time> | cut -d. -f1 > <tmpfile>.first\n            fi\n            if [ ! -f <tmpfile>.lastsent ]; then\n                echo 0 > <tmpfile>.lastsent\n            fi\n            LOGAGE=$(($NOW - `cat <tmpfile>.first`))\n            LASTREPORT=$(($NOW - `cat <tmpfile>.lastsent`))\n            LINES=$( wc -l <tmpfile>.buffer | awk '{ print $1 }' )\n            if [ $LINES -ge <lines> && $LASTREPORT -gt <minreportinterval> ] || [ $LOGAGE -gt <maxbufferage> ]; then\n                cat <tmpfile>.buffer | <mailcmd> \"FORMAT DSHIELD USERID <userid> TZ $TZONE Fail2Ban\" <mailargs> <dest>\n                rm -f <tmpfile>.buffer <tmpfile>.first\n                echo $NOW > <tmpfile>.lastsent\n            fi\n\n# Option:  actionunban\n# Notes.:  command executed when unbanning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionunban = if [ -f <tmpfile>.first ]; then\n                  NOW=`date +%%s`\n                  LOGAGE=$(($NOW - `cat <tmpfile>.first`))\n                  if [ $LOGAGE -gt <maxbufferage> ]; then\n                      cat <tmpfile>.buffer | <mailcmd> \"FORMAT DSHIELD USERID <userid> TZ `date +%%z | sed 's/\\([+-]..\\)\\(..\\)/\\1:\\2/'` Fail2Ban\" <mailargs> <dest>\n                      rm -f <tmpfile>.buffer <tmpfile>.first\n                      echo $NOW > <tmpfile>.lastsent\n                  fi\n              fi\n\n\n[Init]\n# Option:  port\n# Notes.:  The target port for the attack (numerical). MUST be provided in the\n#          jail config, as it cannot be detected here.\n# Values:  [ NUM ]\n#\nport = ???\n\n# Option:  userid\n# Notes.:  Your DShield user ID. Should be provided either in the jail config or\n#          in a .local file.\n#          Register at https://secure.dshield.org/register.html\n# Values:  [ NUM ]\n#\nuserid = 0\n\n# Option:  myip\n# Notes.:  The target IP for the attack (your public IP). Should be provided\n#          either in the jail config or in a .local file unless your PUBLIC IP\n#          is the first IP assigned to eth0\n# Values:  [ an IP address ]  Default: Tries to find the IP address of eth0,\n#          which in most cases will be a private IP, and therefore incorrect\n#\nmyip = `ip -4 addr show dev eth0 | grep inet | head -n 1 | sed -r 's/.*inet ([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}).*/\\1/'`\n\n# Option:  protocol\n# Notes.:  The protocol over which the attack is happening\n# Values:  [ tcp | udp | icmp | (any other protocol name from /etc/protocols) | NUM ] Default: tcp\n#\nprotocol = tcp\n\n# Option:  lines\n# Notes.:  How many lines to buffer before making a report. Regardless of this,\n#          reports are sent a minimum of <minreportinterval> apart, or if the\n#          buffer contains an event over <maxbufferage> old, or on shutdown\n# Values:  [ NUM ]\n#\nlines = 50\n\n# Option:  minreportinterval\n# Notes.:  Minimum period (in seconds) that must elapse before we submit another\n#          batch of reports. DShield request a minimum of 1 hour (3600 secs)\n#          between reports.\n# Values:  [ NUM ]\n#\nminreportinterval = 3600\n\n# Option:  maxbufferage\n# Notes.:  Maximum age (in seconds) of the oldest report in the buffer before we\n#          submit the batch, even if we haven't reached <lines> yet. Note that\n#          this is only checked on each ban/unban, and that we always send\n#          anything in the buffer on shutdown. Must be greater than\n# Values:  [ NUM ]\n#\nmaxbufferage = 21600\n\n# Option:  srcport\n# Notes.:  The source port of the attack. You're unlikely to have this info, so\n#          you can leave the default\n# Values:  [ NUM ]\n#\nsrcport = ???\n\n# Option:  tcpflags\n# Notes.:  TCP flags on attack. You're unlikely to have this info, so you can\n#          leave empty\n# Values:  [ STRING ]\n#\ntcpflags =\n\n# Option:  mailcmd\n# Notes.:  Your system mail command. Is passed 2 args: subject and recipient\n# Values:  CMD\n#\nmailcmd = mail -s\n\n# Option:  mailargs\n# Notes.:  Additional arguments to mail command. e.g. for standard Unix mail:\n#          CC reports to another address:\n#              -c me@example.com\n#          Appear to come from a different address (the From address must match\n#          the one configured at DShield - the '--' indicates arguments to be\n#          passed to Sendmail):\n#              -- -f me@example.com\n# Values:  [ STRING ]\n#\nmailargs =\n\n# Option:  dest\n# Notes.:  Destination e-mail address for reports\n# Values:  [ STRING ]\n#\ndest = reports@dshield.org\n\n# Option:  tmpfile\n# Notes.:  Base name of temporary files used for buffering\n# Values:  [ STRING ]\n#\ntmpfile = /var/run/fail2ban/tmp-dshield\n\n", "# Fail2Ban configuration file\n#\n# Author: Cyril Jaquier\n#\n#\n\n[Definition]\n\n# Option:  actionstart\n# Notes.:  command executed once at the start of Fail2Ban.\n# Values:  CMD\n#\nactionstart = printf %%b \"Hi,\\n\n              The jail <name> has been started successfully.\\n\n              Output will be buffered until <lines> lines are available.\\n\n              Regards,\\n\n              Fail2Ban\"|mail -s \"[Fail2Ban] <name>: started on `uname -n`\" <dest>\n\n# Option:  actionstop\n# Notes.:  command executed once at the end of Fail2Ban\n# Values:  CMD\n#\nactionstop = if [ -f <tmpfile> ]; then\n                 printf %%b \"Hi,\\n\n                 These hosts have been banned by Fail2Ban.\\n\n                 `cat <tmpfile>`\n                 Regards,\\n\n                 Fail2Ban\"|mail -s \"[Fail2Ban] <name>: Summary from `uname -n`\" <dest>\n                 rm <tmpfile>\n             fi\n             printf %%b \"Hi,\\n\n             The jail <name> has been stopped.\\n\n             Regards,\\n\n             Fail2Ban\"|mail -s \"[Fail2Ban] <name>: stopped on `uname -n`\" <dest>\n\n# Option:  actioncheck\n# Notes.:  command executed once before each actionban command\n# Values:  CMD\n#\nactioncheck = \n\n# Option:  actionban\n# Notes.:  command executed when banning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionban = printf %%b \"`date`: <ip> (<failures> failures)\\n\" >> <tmpfile>\n            LINE=$( wc -l <tmpfile> | awk '{ print $1 }' )\n            if [ $LINE -ge <lines> ]; then\n                printf %%b \"Hi,\\n\n                These hosts have been banned by Fail2Ban.\\n\n                `cat <tmpfile>`\n                \\nRegards,\\n\n                Fail2Ban\"|mail -s \"[Fail2Ban] <name>: Summary\" <dest>\n                rm <tmpfile>\n            fi\n\n# Option:  actionunban\n# Notes.:  command executed when unbanning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionunban = \n\n[Init]\n\n# Default name of the chain\n#\nname = default\n\n# Default number of lines that are buffered\n#\nlines = 5\n\n# Default temporary file\n#\ntmpfile = /var/run/fail2ban/tmp-mail.txt\n\n# Destination/Addressee of the mail\n#\ndest = root\n", "# Fail2Ban configuration file\n#\n# Author: Cyril Jaquier\n# Modified-By: Yaroslav Halchenko to include grepping on IP over log files\n#\n\n[INCLUDES]\n\nbefore = mail-whois-common.conf\n\n[Definition]\n\n# Option:  actionstart\n# Notes.:  command executed once at the start of Fail2Ban.\n# Values:  CMD\n#\nactionstart = printf %%b \"Hi,\\n\n              The jail <name> has been started successfully.\\n\n              Regards,\\n\n              Fail2Ban\"|mail -s \"[Fail2Ban] <name>: started on `uname -n`\" <dest>\n\n# Option:  actionstop\n# Notes.:  command executed once at the end of Fail2Ban\n# Values:  CMD\n#\nactionstop = printf %%b \"Hi,\\n\n             The jail <name> has been stopped.\\n\n             Regards,\\n\n             Fail2Ban\"|mail -s \"[Fail2Ban] <name>: stopped on `uname -n`\" <dest>\n\n# Option:  actioncheck\n# Notes.:  command executed once before each actionban command\n# Values:  CMD\n#\nactioncheck = \n\n# Option:  actionban\n# Notes.:  command executed when banning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionban = printf %%b \"Hi,\\n\n            The IP <ip> has just been banned by Fail2Ban after\n            <failures> attempts against <name>.\\n\\n\n            Here is more information about <ip> :\\n\n            `%(_whois_command)s`\\n\\n\n            Lines containing IP:<ip> in <logpath>\\n\n            `grep -E <grepopts> '(^|[^0-9])<ip>([^0-9]|$)' <logpath>`\\n\\n\n            Regards,\\n\n            Fail2Ban\"|mail -s \"[Fail2Ban] <name>: banned <ip> from  `uname -n`\" <dest>\n\n# Option:  actionunban\n# Notes.:  command executed when unbanning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionunban = \n\n[Init]\n\n# Default name of the chain\n#\nname = default\n\n# Destinataire of the mail\n#\ndest = root\n\n# Path to the log files which contain relevant lines for the abuser IP\n#\nlogpath = /dev/null\n\n# Number of log lines to include in the email\n#\ngrepopts = -m 1000\n", "# Fail2Ban configuration file\n#\n# Author: Cyril Jaquier\n#\n#\n\n[INCLUDES]\n\nbefore = mail-whois-common.conf\n\n[Definition]\n\n# Option:  actionstart\n# Notes.:  command executed once at the start of Fail2Ban.\n# Values:  CMD\n#\nactionstart = printf %%b \"Hi,\\n\n              The jail <name> has been started successfully.\\n\n              Regards,\\n\n              Fail2Ban\"|mail -s \"[Fail2Ban] <name>: started on `uname -n`\" <dest>\n\n# Option:  actionstop\n# Notes.:  command executed once at the end of Fail2Ban\n# Values:  CMD\n#\nactionstop = printf %%b \"Hi,\\n\n             The jail <name> has been stopped.\\n\n             Regards,\\n\n             Fail2Ban\"|mail -s \"[Fail2Ban] <name>: stopped on `uname -n`\" <dest>\n\n# Option:  actioncheck\n# Notes.:  command executed once before each actionban command\n# Values:  CMD\n#\nactioncheck = \n\n# Option:  actionban\n# Notes.:  command executed when banning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionban = printf %%b \"Hi,\\n\n            The IP <ip> has just been banned by Fail2Ban after\n            <failures> attempts against <name>.\\n\\n\n            Here is more information about <ip> :\\n\n            `%(_whois_command)s`\\n\n            Regards,\\n\n            Fail2Ban\"|mail -s \"[Fail2Ban] <name>: banned <ip> from `uname -n`\" <dest>\n\n# Option:  actionunban\n# Notes.:  command executed when unbanning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionunban = \n\n[Init]\n\n# Default name of the chain\n#\nname = default\n\n# Destination/Addressee of the mail\n#\ndest = root\n\n", "# Fail2Ban configuration file\n#\n# Author: Cyril Jaquier\n#\n#\n\n[Definition]\n\n# Option:  actionstart\n# Notes.:  command executed once at the start of Fail2Ban.\n# Values:  CMD\n#\nactionstart = printf %%b \"Hi,\\n\n              The jail <name> has been started successfully.\\n\n              Regards,\\n\n              Fail2Ban\"|mail -s \"[Fail2Ban] <name>: started  on `uname -n`\" <dest>\n\n# Option:  actionstop\n# Notes.:  command executed once at the end of Fail2Ban\n# Values:  CMD\n#\nactionstop = printf %%b \"Hi,\\n\n             The jail <name> has been stopped.\\n\n             Regards,\\n\n             Fail2Ban\"|mail -s \"[Fail2Ban] <name>: stopped on `uname -n`\" <dest>\n\n# Option:  actioncheck\n# Notes.:  command executed once before each actionban command\n# Values:  CMD\n#\nactioncheck = \n\n# Option:  actionban\n# Notes.:  command executed when banning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionban = printf %%b \"Hi,\\n\n            The IP <ip> has just been banned by Fail2Ban after\n            <failures> attempts against <name>.\\n\n            Regards,\\n\n            Fail2Ban\"|mail -s \"[Fail2Ban] <name>: banned <ip> from `uname -n`\" <dest>\n\n# Option:  actionunban\n# Notes.:  command executed when unbanning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionunban = \n\n[Init]\n\n# Default name of the chain\n#\nname = default\n\n# Destination/Addressee of the mail\n#\ndest = root\n\n"], "fixing_code": ["# Fail2Ban configuration file\n#\n# Author: Russell Odom <russ@gloomytrousers.co.uk>, Daniel Black\n# Sends a complaint e-mail to addresses listed in the whois record for an\n# offending IP address.\n# This uses the https://abusix.com/contactdb.html to lookup abuse contacts.\n#\n# DEPENDENCIES:\n# This requires the dig command from bind-utils\n#\n# You should provide the <logpath> in the jail config - lines from the log\n# matching the given IP address will be provided in the complaint as evidence.\n#\n# WARNING\n# -------\n#\n# Please do not use this action unless you are certain that fail2ban\n# does not result in \"false positives\" for your deployment.  False\n# positive reports could serve a mis-favor to the original cause by\n# flooding corresponding contact addresses, and complicating the work\n# of administration personnel responsible for handling (verified) legit\n# complains.\n#\n# Please consider using e.g. sendmail-whois-lines.conf action which\n# would send the reports with relevant information to you, so the\n# report could be first reviewed and then forwarded to a corresponding\n# contact if legit.\n#\n\n\n[Definition]\n\n# Option:  actionstart\n# Notes.:  command executed once at the start of Fail2Ban.\n# Values:  CMD\n#\nactionstart =\n\n# Option:  actionstop\n# Notes.:  command executed once at the end of Fail2Ban\n# Values:  CMD\n#\nactionstop =\n\n# Option:  actioncheck\n# Notes.:  command executed once before each actionban command\n# Values:  CMD\n#\nactioncheck =\n\n# Option:  actionban\n# Notes.:  command executed when banning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionban = oifs=${IFS}; IFS=.;SEP_IP=( <ip> ); set -- ${SEP_IP}; ADDRESSES=$(dig +short -t txt -q $4.$3.$2.$1.abuse-contacts.abusix.org); IFS=${oifs}\n\t    IP=<ip>\n            if [ ! -z \"$ADDRESSES\" ]; then\n                (printf %%b \"<message>\\n\"; date '+Note: Local timezone is %%z (%%Z)'; grep -E '(^|[^0-9])<ip>([^0-9]|$)' <logpath>) | <mailcmd> \"Abuse from <ip>\" <mailargs> ${ADDRESSES//,/\\\" \\\"}\n            fi\n\n# Option:  actionunban\n# Notes.:  command executed when unbanning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionunban =\n\n[Init]\nmessage = Dear Sir/Madam,\\n\\nWe have detected abuse from the IP address $IP, which according to a abusix.com is on your network. We would appreciate if you would investigate and take action as appropriate.\\n\\nLog lines are given below, but please ask if you require any further information.\\n\\n(If you are not the correct person to contact about this please accept our apologies - your e-mail address was extracted from the whois record by an automated process.)\\n\\n This mail was generated by Fail2Ban.\\nThe recipient address of this report was provided by the Abuse Contact DB by abusix.com. abusix.com does not maintain the content of the database. All information which we pass out, derives from the RIR databases and is processed for ease of use. If you want to change or report non working abuse contacts please contact the appropriate RIR. If you have any further question, contact abusix.com directly via email (info@abusix.com). Information about the Abuse Contact Database can be found here: https://abusix.com/global-reporting/abuse-contact-db\\nabusix.com is neither responsible nor liable for the content or accuracy of this message.\\n\n\n# Path to the log files which contain relevant lines for the abuser IP\n#\nlogpath = /dev/null\n\n# Option:  mailcmd\n# Notes.:  Your system mail command. Is passed 2 args: subject and recipient\n# Values:  CMD\n#\nmailcmd = mail -E 'set escape' -s\n\n# Option:  mailargs\n# Notes.:  Additional arguments to mail command. e.g. for standard Unix mail:\n#          CC reports to another address:\n#              -c me@example.com\n#          Appear to come from a different address - the '--' indicates\n#          arguments to be passed to Sendmail:\n#              -- -f me@example.com\n# Values:  [ STRING ]\n#\nmailargs =\n\n", "# Fail2Ban configuration file\n#\n# Author: Russell Odom <russ@gloomytrousers.co.uk>\n# Submits attack reports to DShield (http://www.dshield.org/)\n#\n# You MUST configure at least:\n# <port> (the port that's being attacked - use number not name).\n#\n# You SHOULD also provide:\n# <myip> (your public IP address, if it's not the address of eth0)\n# <userid> (your DShield userID, if you have one - recommended, but reports will\n# be used anonymously if not)\n# <protocol> (the protocol in use - defaults to tcp)\n#\n# Best practice is to provide <port> and <protocol> in jail.conf like this:\n# action = dshield[port=1234,protocol=tcp]\n#\n# ...and create \"dshield.local\" with contents something like this:\n# [Init]\n# myip = 10.0.0.1\n# userid = 12345\n#\n# Other useful configuration values are <mailargs> (you can use for specifying\n# a different sender address for the report e-mails, which should match what is\n# configured at DShield), and <lines>/<minreportinterval>/<maxbufferage> (to\n# configure how often the buffer is flushed).\n#\n\n[Definition]\n\n# Option:  actionstart\n# Notes.:  command executed once at the start of Fail2Ban.\n# Values:  CMD\n#\nactionstart =\n\n# Option:  actionstop\n# Notes.:  command executed once at the end of Fail2Ban\n# Values:  CMD\n#\nactionstop = if [ -f <tmpfile>.buffer ]; then\n                 cat <tmpfile>.buffer | <mailcmd> \"FORMAT DSHIELD USERID <userid> TZ `date +%%z | sed 's/\\([+-]..\\)\\(..\\)/\\1:\\2/'` Fail2Ban\" <mailargs> <dest>\n                 date +%%s > <tmpfile>.lastsent\n             fi\n             rm -f <tmpfile>.buffer <tmpfile>.first\n\n# Option:  actioncheck\n# Notes.:  command executed once before each actionban command\n# Values:  CMD\n#\nactioncheck =\n\n# Option:  actionban\n# Notes.:  command executed when banning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\n# See http://www.dshield.org/specs.html for more on report format/notes\n#\n# Note: We are currently using <time> for the timestamp because no tag is\n# available to indicate the timestamp of the log message(s) which triggered the\n# ban. Therefore the timestamps we are using in the report, whilst often only a\n# few seconds out, are incorrect. See\n# http://sourceforge.net/tracker/index.php?func=detail&aid=2017795&group_id=121032&atid=689047\n#\nactionban = TZONE=`date +%%z | sed 's/\\([+-]..\\)\\(..\\)/\\1:\\2/'`\n            DATETIME=\"`perl -e '@t=localtime(<time>);printf \"%%4d-%%02d-%%02d %%02d:%%02d:%%02d\",1900+$t[5],$t[4]+1,$t[3],$t[2],$t[1],$t[0]'` $TZONE\"\n\t    PROTOCOL=`awk '{IGNORECASE=1;if($1==\"<protocol>\"){print $2;exit}}' /etc/protocols`\n\t    if [ -z \"$PROTOCOL\" ]; then PROTOCOL=<protocol>; fi\n            printf %%b \"$DATETIME\\t<userid>\\t<failures>\\t<ip>\\t<srcport>\\t<myip>\\t<port>\\t$PROTOCOL\\t<tcpflags>\\n\" >> <tmpfile>.buffer\n            NOW=`date +%%s`\n            if [ ! -f <tmpfile>.first ]; then\n                echo <time> | cut -d. -f1 > <tmpfile>.first\n            fi\n            if [ ! -f <tmpfile>.lastsent ]; then\n                echo 0 > <tmpfile>.lastsent\n            fi\n            LOGAGE=$(($NOW - `cat <tmpfile>.first`))\n            LASTREPORT=$(($NOW - `cat <tmpfile>.lastsent`))\n            LINES=$( wc -l <tmpfile>.buffer | awk '{ print $1 }' )\n            if [ $LINES -ge <lines> && $LASTREPORT -gt <minreportinterval> ] || [ $LOGAGE -gt <maxbufferage> ]; then\n                cat <tmpfile>.buffer | <mailcmd> \"FORMAT DSHIELD USERID <userid> TZ $TZONE Fail2Ban\" <mailargs> <dest>\n                rm -f <tmpfile>.buffer <tmpfile>.first\n                echo $NOW > <tmpfile>.lastsent\n            fi\n\n# Option:  actionunban\n# Notes.:  command executed when unbanning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionunban = if [ -f <tmpfile>.first ]; then\n                  NOW=`date +%%s`\n                  LOGAGE=$(($NOW - `cat <tmpfile>.first`))\n                  if [ $LOGAGE -gt <maxbufferage> ]; then\n                      cat <tmpfile>.buffer | <mailcmd> \"FORMAT DSHIELD USERID <userid> TZ `date +%%z | sed 's/\\([+-]..\\)\\(..\\)/\\1:\\2/'` Fail2Ban\" <mailargs> <dest>\n                      rm -f <tmpfile>.buffer <tmpfile>.first\n                      echo $NOW > <tmpfile>.lastsent\n                  fi\n              fi\n\n\n[Init]\n# Option:  port\n# Notes.:  The target port for the attack (numerical). MUST be provided in the\n#          jail config, as it cannot be detected here.\n# Values:  [ NUM ]\n#\nport = ???\n\n# Option:  userid\n# Notes.:  Your DShield user ID. Should be provided either in the jail config or\n#          in a .local file.\n#          Register at https://secure.dshield.org/register.html\n# Values:  [ NUM ]\n#\nuserid = 0\n\n# Option:  myip\n# Notes.:  The target IP for the attack (your public IP). Should be provided\n#          either in the jail config or in a .local file unless your PUBLIC IP\n#          is the first IP assigned to eth0\n# Values:  [ an IP address ]  Default: Tries to find the IP address of eth0,\n#          which in most cases will be a private IP, and therefore incorrect\n#\nmyip = `ip -4 addr show dev eth0 | grep inet | head -n 1 | sed -r 's/.*inet ([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}).*/\\1/'`\n\n# Option:  protocol\n# Notes.:  The protocol over which the attack is happening\n# Values:  [ tcp | udp | icmp | (any other protocol name from /etc/protocols) | NUM ] Default: tcp\n#\nprotocol = tcp\n\n# Option:  lines\n# Notes.:  How many lines to buffer before making a report. Regardless of this,\n#          reports are sent a minimum of <minreportinterval> apart, or if the\n#          buffer contains an event over <maxbufferage> old, or on shutdown\n# Values:  [ NUM ]\n#\nlines = 50\n\n# Option:  minreportinterval\n# Notes.:  Minimum period (in seconds) that must elapse before we submit another\n#          batch of reports. DShield request a minimum of 1 hour (3600 secs)\n#          between reports.\n# Values:  [ NUM ]\n#\nminreportinterval = 3600\n\n# Option:  maxbufferage\n# Notes.:  Maximum age (in seconds) of the oldest report in the buffer before we\n#          submit the batch, even if we haven't reached <lines> yet. Note that\n#          this is only checked on each ban/unban, and that we always send\n#          anything in the buffer on shutdown. Must be greater than\n# Values:  [ NUM ]\n#\nmaxbufferage = 21600\n\n# Option:  srcport\n# Notes.:  The source port of the attack. You're unlikely to have this info, so\n#          you can leave the default\n# Values:  [ NUM ]\n#\nsrcport = ???\n\n# Option:  tcpflags\n# Notes.:  TCP flags on attack. You're unlikely to have this info, so you can\n#          leave empty\n# Values:  [ STRING ]\n#\ntcpflags =\n\n# Option:  mailcmd\n# Notes.:  Your system mail command. Is passed 2 args: subject and recipient\n# Values:  CMD\n#\nmailcmd = mail -E 'set escape' -s\n\n# Option:  mailargs\n# Notes.:  Additional arguments to mail command. e.g. for standard Unix mail:\n#          CC reports to another address:\n#              -c me@example.com\n#          Appear to come from a different address (the From address must match\n#          the one configured at DShield - the '--' indicates arguments to be\n#          passed to Sendmail):\n#              -- -f me@example.com\n# Values:  [ STRING ]\n#\nmailargs =\n\n# Option:  dest\n# Notes.:  Destination e-mail address for reports\n# Values:  [ STRING ]\n#\ndest = reports@dshield.org\n\n# Option:  tmpfile\n# Notes.:  Base name of temporary files used for buffering\n# Values:  [ STRING ]\n#\ntmpfile = /var/run/fail2ban/tmp-dshield\n\n", "# Fail2Ban configuration file\n#\n# Author: Cyril Jaquier\n#\n#\n\n[Definition]\n\n# Option:  actionstart\n# Notes.:  command executed once at the start of Fail2Ban.\n# Values:  CMD\n#\nactionstart = printf %%b \"Hi,\\n\n              The jail <name> has been started successfully.\\n\n              Output will be buffered until <lines> lines are available.\\n\n              Regards,\\n\n              Fail2Ban\"|mail -E 'set escape' -s \"[Fail2Ban] <name>: started on `uname -n`\" <dest>\n\n# Option:  actionstop\n# Notes.:  command executed once at the end of Fail2Ban\n# Values:  CMD\n#\nactionstop = if [ -f <tmpfile> ]; then\n                 printf %%b \"Hi,\\n\n                 These hosts have been banned by Fail2Ban.\\n\n                 `cat <tmpfile>`\n                 Regards,\\n\n                 Fail2Ban\"|mail -E 'set escape' -s \"[Fail2Ban] <name>: Summary from `uname -n`\" <dest>\n                 rm <tmpfile>\n             fi\n             printf %%b \"Hi,\\n\n             The jail <name> has been stopped.\\n\n             Regards,\\n\n             Fail2Ban\"|mail -E 'set escape' -s \"[Fail2Ban] <name>: stopped on `uname -n`\" <dest>\n\n# Option:  actioncheck\n# Notes.:  command executed once before each actionban command\n# Values:  CMD\n#\nactioncheck = \n\n# Option:  actionban\n# Notes.:  command executed when banning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionban = printf %%b \"`date`: <ip> (<failures> failures)\\n\" >> <tmpfile>\n            LINE=$( wc -l <tmpfile> | awk '{ print $1 }' )\n            if [ $LINE -ge <lines> ]; then\n                printf %%b \"Hi,\\n\n                These hosts have been banned by Fail2Ban.\\n\n                `cat <tmpfile>`\n                \\nRegards,\\n\n                Fail2Ban\"|mail -E 'set escape' -s \"[Fail2Ban] <name>: Summary\" <dest>\n                rm <tmpfile>\n            fi\n\n# Option:  actionunban\n# Notes.:  command executed when unbanning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionunban = \n\n[Init]\n\n# Default name of the chain\n#\nname = default\n\n# Default number of lines that are buffered\n#\nlines = 5\n\n# Default temporary file\n#\ntmpfile = /var/run/fail2ban/tmp-mail.txt\n\n# Destination/Addressee of the mail\n#\ndest = root\n", "# Fail2Ban configuration file\n#\n# Author: Cyril Jaquier\n# Modified-By: Yaroslav Halchenko to include grepping on IP over log files\n#\n\n[INCLUDES]\n\nbefore = mail-whois-common.conf\n\n[Definition]\n\n# Option:  actionstart\n# Notes.:  command executed once at the start of Fail2Ban.\n# Values:  CMD\n#\nactionstart = printf %%b \"Hi,\\n\n              The jail <name> has been started successfully.\\n\n              Regards,\\n\n              Fail2Ban\" | <mailcmd> \"[Fail2Ban] <name>: started on `uname -n`\" <dest>\n\n# Option:  actionstop\n# Notes.:  command executed once at the end of Fail2Ban\n# Values:  CMD\n#\nactionstop = printf %%b \"Hi,\\n\n             The jail <name> has been stopped.\\n\n             Regards,\\n\n             Fail2Ban\" | <mailcmd> \"[Fail2Ban] <name>: stopped on `uname -n`\" <dest>\n\n# Option:  actioncheck\n# Notes.:  command executed once before each actionban command\n# Values:  CMD\n#\nactioncheck = \n\n# Option:  actionban\n# Notes.:  command executed when banning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionban = printf %%b \"Hi,\\n\n            The IP <ip> has just been banned by Fail2Ban after\n            <failures> attempts against <name>.\\n\\n\n            Here is more information about <ip> :\\n\n            `%(_whois_command)s`\\n\\n\n            Lines containing IP:<ip> in <logpath>\\n\n            `grep -E <grepopts> '(^|[^0-9])<ip>([^0-9]|$)' <logpath>`\\n\\n\n            Regards,\\n\n            Fail2Ban\" | <mailcmd> \"[Fail2Ban] <name>: banned <ip> from  `uname -n`\" <dest>\n\n# Option:  actionunban\n# Notes.:  command executed when unbanning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionunban = \n\n[Init]\n\n# Option:  mailcmd\n# Notes.:  Your system mail command. Is passed 2 args: subject and recipient\n# Values:  CMD\n#\nmailcmd = mail -E 'set escape' -s\n\n# Default name of the chain\n#\nname = default\n\n# Destinataire of the mail\n#\ndest = root\n\n# Path to the log files which contain relevant lines for the abuser IP\n#\nlogpath = /dev/null\n\n# Number of log lines to include in the email\n#\ngrepopts = -m 1000\n", "# Fail2Ban configuration file\n#\n# Author: Cyril Jaquier\n#\n#\n\n[INCLUDES]\n\nbefore = mail-whois-common.conf\n\n[Definition]\n\n# Option:  actionstart\n# Notes.:  command executed once at the start of Fail2Ban.\n# Values:  CMD\n#\nactionstart = printf %%b \"Hi,\\n\n              The jail <name> has been started successfully.\\n\n              Regards,\\n\n              Fail2Ban\"|mail -E 'set escape' -s \"[Fail2Ban] <name>: started on `uname -n`\" <dest>\n\n# Option:  actionstop\n# Notes.:  command executed once at the end of Fail2Ban\n# Values:  CMD\n#\nactionstop = printf %%b \"Hi,\\n\n             The jail <name> has been stopped.\\n\n             Regards,\\n\n             Fail2Ban\"|mail -E 'set escape' -s \"[Fail2Ban] <name>: stopped on `uname -n`\" <dest>\n\n# Option:  actioncheck\n# Notes.:  command executed once before each actionban command\n# Values:  CMD\n#\nactioncheck = \n\n# Option:  actionban\n# Notes.:  command executed when banning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionban = printf %%b \"Hi,\\n\n            The IP <ip> has just been banned by Fail2Ban after\n            <failures> attempts against <name>.\\n\\n\n            Here is more information about <ip> :\\n\n            `%(_whois_command)s`\\n\n            Regards,\\n\n            Fail2Ban\"|mail -E 'set escape' -s \"[Fail2Ban] <name>: banned <ip> from `uname -n`\" <dest>\n\n# Option:  actionunban\n# Notes.:  command executed when unbanning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionunban = \n\n[Init]\n\n# Default name of the chain\n#\nname = default\n\n# Destination/Addressee of the mail\n#\ndest = root\n\n", "# Fail2Ban configuration file\n#\n# Author: Cyril Jaquier\n#\n#\n\n[Definition]\n\n# Option:  actionstart\n# Notes.:  command executed once at the start of Fail2Ban.\n# Values:  CMD\n#\nactionstart = printf %%b \"Hi,\\n\n              The jail <name> has been started successfully.\\n\n              Regards,\\n\n              Fail2Ban\"|mail -E 'set escape' -s \"[Fail2Ban] <name>: started  on `uname -n`\" <dest>\n\n# Option:  actionstop\n# Notes.:  command executed once at the end of Fail2Ban\n# Values:  CMD\n#\nactionstop = printf %%b \"Hi,\\n\n             The jail <name> has been stopped.\\n\n             Regards,\\n\n             Fail2Ban\"|mail -E 'set escape' -s \"[Fail2Ban] <name>: stopped on `uname -n`\" <dest>\n\n# Option:  actioncheck\n# Notes.:  command executed once before each actionban command\n# Values:  CMD\n#\nactioncheck = \n\n# Option:  actionban\n# Notes.:  command executed when banning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionban = printf %%b \"Hi,\\n\n            The IP <ip> has just been banned by Fail2Ban after\n            <failures> attempts against <name>.\\n\n            Regards,\\n\n            Fail2Ban\"|mail -E 'set escape' -s \"[Fail2Ban] <name>: banned <ip> from `uname -n`\" <dest>\n\n# Option:  actionunban\n# Notes.:  command executed when unbanning an IP. Take care that the\n#          command is executed with Fail2Ban user rights.\n# Tags:    See jail.conf(5) man page\n# Values:  CMD\n#\nactionunban = \n\n[Init]\n\n# Default name of the chain\n#\nname = default\n\n# Destination/Addressee of the mail\n#\ndest = root\n\n"], "filenames": ["config/action.d/complain.conf", "config/action.d/dshield.conf", "config/action.d/mail-buffered.conf", "config/action.d/mail-whois-lines.conf", "config/action.d/mail-whois.conf", "config/action.d/mail.conf"], "buggy_code_start_loc": [82, 179, 17, 20, 20, 16], "buggy_code_end_loc": [83, 180, 56, 61, 50, 44], "fixing_code_start_loc": [82, 179, 17, 20, 20, 16], "fixing_code_end_loc": [83, 180, 56, 68, 50, 44], "type": "CWE-78", "message": "fail2ban is a daemon to ban hosts that cause multiple authentication errors. In versions 0.9.7 and prior, 0.10.0 through 0.10.6, and 0.11.0 through 0.11.2, there is a vulnerability that leads to possible remote code execution in the mailing action mail-whois. Command `mail` from mailutils package used in mail actions like `mail-whois` can execute command if unescaped sequences (`\\n~`) are available in \"foreign\" input (for instance in whois output). To exploit the vulnerability, an attacker would need to insert malicious characters into the response sent by the whois server, either via a MITM attack or by taking over a whois server. The issue is patched in versions 0.10.7 and 0.11.3. As a workaround, one may avoid the usage of action `mail-whois` or patch the vulnerability manually.", "other": {"cve": {"id": "CVE-2021-32749", "sourceIdentifier": "security-advisories@github.com", "published": "2021-07-16T18:15:08.270", "lastModified": "2021-11-28T23:18:14.820", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "fail2ban is a daemon to ban hosts that cause multiple authentication errors. In versions 0.9.7 and prior, 0.10.0 through 0.10.6, and 0.11.0 through 0.11.2, there is a vulnerability that leads to possible remote code execution in the mailing action mail-whois. Command `mail` from mailutils package used in mail actions like `mail-whois` can execute command if unescaped sequences (`\\n~`) are available in \"foreign\" input (for instance in whois output). To exploit the vulnerability, an attacker would need to insert malicious characters into the response sent by the whois server, either via a MITM attack or by taking over a whois server. The issue is patched in versions 0.10.7 and 0.11.3. As a workaround, one may avoid the usage of action `mail-whois` or patch the vulnerability manually."}, {"lang": "es", "value": "fail2ban es un demonio para banear hosts que causan m\u00faltiples errores de autenticaci\u00f3n. En versiones 0.9.7 y anteriores, versiones 0.10.0 hasta 0.10.6, y versiones 0.11.0 hasta 0.11.2, se presenta una vulnerabilidad que conlleva a una posible ejecuci\u00f3n de c\u00f3digo remota en la acci\u00f3n de correo mail-whois. El comando \"mail\" del paquete mailutils usado en acciones de correo como \"mail-whois\" puede ejecutar comando si se presentan secuencias sin may\u00fasculas (\"\\n~\") en la entrada \"foreign\" (por ejemplo, en la salida de whois). Para explotar la vulnerabilidad, un atacante necesitar\u00eda insertar caracteres maliciosos en la respuesta enviada por el servidor whois, ya sea por medio de un ataque MITM o al tomar el control de un servidor whois. El problema est\u00e1 parcheado en las versiones 0.10.7 y 0.11.3. Como soluci\u00f3n, se puede evitar el uso de la acci\u00f3n \"mail-whois\" o parchear la vulnerabilidad manualmente"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.2, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.6, "impactScore": 4.0}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-78"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:fail2ban:fail2ban:*:*:*:*:*:*:*:*", "versionEndIncluding": "0.9.7", "matchCriteriaId": "681DE71A-B67E-440C-8E94-BDD104CBEB5B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:fail2ban:fail2ban:*:*:*:*:*:*:*:*", "versionStartIncluding": "0.10.0", "versionEndExcluding": "0.10.7", "matchCriteriaId": "A9CD67F2-8F79-43DB-9E96-D2184A33D5E4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:fail2ban:fail2ban:*:*:*:*:*:*:*:*", "versionStartIncluding": "0.11.0", "versionEndExcluding": "0.11.3", "matchCriteriaId": "B1807742-38E3-4C0D-9857-2A70D1436681"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:34:*:*:*:*:*:*:*", "matchCriteriaId": "A930E247-0B43-43CB-98FF-6CE7B8189835"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:35:*:*:*:*:*:*:*", "matchCriteriaId": "80E516C0-98A4-4ADE-B69F-66A772E2BAAA"}]}]}], "references": [{"url": "https://github.com/fail2ban/fail2ban/commit/2ed414ed09b3bb4c478abc9366a1ff22024a33c9", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/fail2ban/fail2ban/commit/410a6ce5c80dd981c22752da034f2529b5eee844", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/fail2ban/fail2ban/security/advisories/GHSA-m985-3f3v-cwmm", "source": "security-advisories@github.com", "tags": ["Exploit", "Patch", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5WHJK2X2MR2WDYZMCW7COZXJDUSDYMY6/", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZRYQ77MTX5WSV33VCJLK4KBKR55QZ7ZA/", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/fail2ban/fail2ban/commit/2ed414ed09b3bb4c478abc9366a1ff22024a33c9"}}