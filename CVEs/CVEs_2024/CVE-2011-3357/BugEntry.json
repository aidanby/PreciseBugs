{"buggy_code": ["<?php\n# MantisBT - a php based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n\t/**\n\t * @package MantisBT\n\t * @copyright Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n\t * @copyright Copyright (C) 2002 - 2011  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n\t * @link http://www.mantisbt.org\n\t */\n\t /**\n\t  * MantisBT Core API's\n\t  */\n\trequire_once( 'core.php' );\n\n\trequire_once( 'bug_api.php' );\n\trequire_once( 'bug_group_action_api.php' );\n\n\tauth_ensure_user_authenticated();\n\n\thelper_begin_long_process();\n\n\t$f_action = gpc_get_string( 'action' );\n\t$f_bug_arr\t= gpc_get_int_array( 'bug_arr', array() );\n\n\t$t_action_include_file = 'bug_actiongroup_' . $f_action . '_inc.php';\n\t$t_form_name = 'bug_actiongroup_' . $f_action;\n\n\tform_security_validate( $t_form_name );\n\n\trequire_once( dirname( __FILE__ ) . DIRECTORY_SEPARATOR . $t_action_include_file );\n\n\t# group bugs by project\n\t$t_projects_bugs = array();\n\tforeach( $f_bug_arr as $t_bug_id ) {\n\t\tbug_ensure_exists( $t_bug_id );\n\t\t$t_bug = bug_get( $t_bug_id, true );\n\n\t\tif ( isset( $t_projects_bugs[$t_bug->project_id] ) ) {\n\t\t  $t_projects_bugs[$t_bug->project_id][] = $t_bug_id;\n        } else {\n\t\t  $t_projects_bugs[$t_bug->project_id] = array( $t_bug_id );\n        }\n    }\n\n\t$t_failed_ids = array();\n\n\tforeach( $t_projects_bugs as $t_project_id => $t_bugs ) {\n\t\t$g_project_override = $t_project_id;\n\t\tforeach( $t_bugs as $t_bug_id ) {\n\t\t\t$t_result = bug_group_action_validate( $f_action, $t_bug_id );\n\t\t\tif( $t_result !== true ) {\n\t\t\t\tforeach( $t_result as $t_key => $t_value ) {\n\t\t\t\t\t$t_failed_ids[$t_key] = $t_value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( !isset( $t_failed_ids[$t_bug_id] ) ) {\n\t\t\t\t$t_result = bug_group_action_process( $f_action, $t_bug_id );\n\t\t\t\tif( $t_result !== true ) {\n\t\t\t\t\t$t_failed_ids[] = $t_result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$g_project_override = null;\n\n\tform_security_purge( $t_form_name );\n\n\tif ( count( $t_failed_ids ) > 0 ) {\n\t\thtml_page_top();\n\n\t\techo '<div align=\"center\">';\n\t\tforeach( $t_failed_ids as $t_id => $t_reason ) {\n\t\t\tprintf(\"<p>%s: %s</p>\\n\", string_get_bug_view_link( $t_id ), $t_reason );\n\t\t}\n\n\t\tprint_bracket_link( 'view_all_bug_page.php', lang_get( 'proceed' ) );\n\t\techo '</div>';\n\n\t\thtml_page_bottom();\n\t} else {\n\t\tprint_header_redirect( 'view_all_bug_page.php' );\n\t}\n", "<?php\n# MantisBT - a php based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n\t/**\n\t * @package MantisBT\n\t * @copyright Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n\t * @copyright Copyright (C) 2002 - 2011  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n\t * @link http://www.mantisbt.org\n\t */\n\t /**\n\t  * MantisBT Core API's\n\t  */\n\trequire_once( 'core.php' );\n\n\trequire_once( 'bug_group_action_api.php' );\n\n\tauth_ensure_user_authenticated();\n\n\t$f_action = gpc_get_string( 'action' );\n\t$f_bug_arr = gpc_get_int_array( 'bug_arr', array() );\n\n\t# redirect to view issues if nothing is selected\n\tif ( is_blank( $f_action ) || ( 0 == count( $f_bug_arr ) ) ) {\n\t\tprint_header_redirect( 'view_all_bug_page.php' );\n\t}\n\n  # redirect to view issues page if action doesn't have ext_* prefix.\n  # This should only occur if this page is called directly.\n\t$t_external_action_prefix = 'EXT_';\n\tif ( strpos( $f_action, $t_external_action_prefix ) !== 0 ) {\n\t\tprint_header_redirect( 'view_all_bug_page.php' );\n  }\n\n\t$t_external_action = utf8_strtolower( utf8_substr( $f_action, utf8_strlen( $t_external_action_prefix ) ) );\n\t$t_form_fields_page = 'bug_actiongroup_' . $t_external_action . '_inc.php';\n\t$t_form_name = 'bug_actiongroup_' . $t_external_action;\n\n\tbug_group_action_print_top();\n?>\n\n\t<br />\n\n\t<div align=\"center\">\n\t<form method=\"post\" action=\"bug_actiongroup_ext.php\">\n<?php echo form_security_field( $t_form_name ); ?>\n\t\t<input type=\"hidden\" name=\"action\" value=\"<?php echo string_attribute( $t_external_action ) ?>\" />\n<table class=\"width75\" cellspacing=\"1\">\n\t<?php\n\t\tbug_group_action_print_title( $t_external_action );\n\t\tbug_group_action_print_hidden_fields( $f_bug_arr );\n\t\tbug_group_action_print_action_fields( $t_external_action );\n\t?>\n</table>\n\t</form>\n\t</div>\n\n\t<br />\n\n<?php\n\tbug_group_action_print_bug_list( $f_bug_arr );\n\tbug_group_action_print_bottom();\n", "<?php\n# MantisBT - a php based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n\t/**\n\t * This page allows actions to be performed on an array of bugs\n\t *\n\t * @package MantisBT\n\t * @copyright Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n\t * @copyright Copyright (C) 2002 - 2011  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n\t * @link http://www.mantisbt.org\n\t */\n\t /**\n\t  * MantisBT Core API's\n\t  */\n\trequire_once( 'core.php' );\n\n\trequire_once( 'bug_group_action_api.php' );\n\n\tauth_ensure_user_authenticated();\n\n\t$f_action = gpc_get_string( 'action', '' );\n\t$f_bug_arr = gpc_get_int_array( 'bug_arr', array() );\n\n\t# redirects to all_bug_page if nothing is selected\n\tif ( is_blank( $f_action ) || ( 0 == count( $f_bug_arr ) ) ) {\n\t\tprint_header_redirect( 'view_all_bug_page.php' );\n\t}\n\n\t# run through the issues to see if they are all from one project\n\t$t_project_id = ALL_PROJECTS;\n\t$t_multiple_projects = false;\n\n\tbug_cache_array_rows( $f_bug_arr );\n\n\tforeach( $f_bug_arr as $t_bug_id ) {\n\t\t$t_bug = bug_get( $t_bug_id );\n\t\tif ( $t_project_id != $t_bug->project_id ) {\n\t\t\tif ( ( $t_project_id != ALL_PROJECTS ) && !$t_multiple_projects ) {\n\t\t\t\t$t_multiple_projects = true;\n\t\t\t} else {\n\t\t\t\t$t_project_id = $t_bug->project_id;\n\t\t\t}\n\t\t}\n\t}\n\tif ( $t_multiple_projects ) {\n\t\t$t_project_id = ALL_PROJECTS;\n\t}\n\t# override the project if necessary\n\tif( $t_project_id != helper_get_current_project() ) {\n\t\t# in case the current project is not the same project of the bug we are viewing...\n\t\t# ... override the current project. This to avoid problems with categories and handlers lists etc.\n\t\t$g_project_override = $t_project_id;\n\t}\n\n\t$t_finished = false;\n\t$t_bugnote = false;\n\n\t$t_external_action_prefix = 'EXT_';\n\tif ( strpos( $f_action, $t_external_action_prefix ) === 0 ) {\n\t\t$t_form_page = 'bug_actiongroup_ext_page.php';\n\t\trequire_once( $t_form_page );\n\t\texit;\n\t}\n\n\t$t_custom_group_actions = config_get( 'custom_group_actions' );\n\n\tforeach( $t_custom_group_actions as $t_custom_group_action ) {\n\t\tif ( $f_action == $t_custom_group_action['action'] ) {\n\t\t\trequire_once( $t_custom_group_action['form_page'] );\n\t\t\texit;\n\t\t}\n\t}\n\n\t# Check if user selected to update a custom field.\n\t$t_custom_fields_prefix = 'custom_field_';\n\tif ( strpos( $f_action, $t_custom_fields_prefix ) === 0 ) {\n\t\t$t_custom_field_id = (int)substr( $f_action, utf8_strlen( $t_custom_fields_prefix ) );\n\t\t$f_action = 'CUSTOM';\n\t}\n\n\t# Form name\n\t$t_form_name = 'bug_actiongroup_' . $f_action;\n\n\tswitch ( $f_action )  {\n\t\t# Use a simple confirmation page, if close or delete...\n\t\tcase 'CLOSE' :\n\t\t\t$t_finished \t\t\t= true;\n\t\t\t$t_question_title \t\t= lang_get( 'close_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'close_group_bugs_button' );\n\t\t\t$t_bugnote\t\t\t\t= true;\n\t\t\tbreak;\n\n\t\tcase 'DELETE' :\n\t\t\t$t_finished \t\t\t= true;\n\t\t\t$t_question_title\t\t= lang_get( 'delete_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'delete_group_bugs_button' );\n\t\t\tbreak;\n\n\t\tcase 'SET_STICKY' :\n\t\t\t$t_finished \t\t\t= true;\n\t\t\t$t_question_title\t\t= lang_get( 'set_sticky_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'set_sticky_group_bugs_button' );\n\t\t\tbreak;\n\n\t\t# ...else we define the variables used in the form\n\t\tcase 'MOVE' :\n\t\t\t$t_question_title \t\t= lang_get( 'move_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'move_group_bugs_button' );\n\t\t\t$t_form\t\t\t\t\t= 'project_id';\n\t\t\tbreak;\n\n\t\tcase 'COPY' :\n\t\t\t$t_question_title \t\t= lang_get( 'copy_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'copy_group_bugs_button' );\n\t\t\t$t_form\t\t\t\t\t= 'project_id';\n\t\t\tbreak;\n\n\t\tcase 'ASSIGN' :\n\t\t\t$t_question_title \t\t= lang_get( 'assign_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'assign_group_bugs_button' );\n\t\t\t$t_form \t\t\t\t= 'assign';\n\t\t\tbreak;\n\n\t\tcase 'RESOLVE' :\n\t\t\t$t_question_title \t\t= lang_get( 'resolve_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'resolve_group_bugs_button' );\n\t\t\t$t_form \t\t\t\t= 'resolution';\n\t\t\tif ( ALL_PROJECTS != $t_project_id ) {\n\t\t\t\t$t_question_title2 = lang_get( 'fixed_in_version' );\n\t\t\t\t$t_form2 = 'fixed_in_version';\n\t\t\t}\n\t\t\t$t_bugnote\t\t\t\t= true;\n\t\t\tbreak;\n\n\t\tcase 'UP_PRIOR' :\n\t\t\t$t_question_title \t\t= lang_get( 'priority_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'priority_group_bugs_button' );\n\t\t\t$t_form \t\t\t\t= 'priority';\n\t\t\tbreak;\n\n\t\tcase 'UP_STATUS' :\n\t\t\t$t_question_title \t\t= lang_get( 'status_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'status_group_bugs_button' );\n\t\t\t$t_form \t\t\t\t= 'status';\n\t\t\t$t_bugnote\t\t\t\t= true;\n\t\t\tbreak;\n\n\t\tcase 'UP_CATEGORY' :\n\t\t\t$t_question_title\t\t= lang_get( 'category_bugs_conf_msg' );\n\t\t\t$t_button_title\t\t\t= lang_get( 'category_group_bugs_button' );\n\t\t\t$t_form\t\t\t\t\t= 'category';\n\t\t\tbreak;\n\n\t\tcase 'VIEW_STATUS' :\n\t\t\t$t_question_title\t\t= lang_get( 'view_status_bugs_conf_msg' );\n\t\t\t$t_button_title\t\t\t= lang_get( 'view_status_group_bugs_button' );\n\t\t\t$t_form\t\t\t\t\t= 'view_status';\n\t\t\tbreak;\n\n\t\tcase 'UP_FIXED_IN_VERSION':\n\t\t\t$t_question_title\t\t= lang_get( 'fixed_in_version_bugs_conf_msg' );\n\t\t\t$t_button_title\t\t\t= lang_get( 'fixed_in_version_group_bugs_button' );\n\t\t\t$t_form\t\t\t\t\t= 'fixed_in_version';\n\t\t\tbreak;\n\n\t\tcase 'UP_TARGET_VERSION':\n\t\t\t$t_question_title\t\t= lang_get( 'target_version_bugs_conf_msg' );\n\t\t\t$t_button_title\t\t\t= lang_get( 'target_version_group_bugs_button' );\n\t\t\t$t_form\t\t\t\t\t= 'target_version';\n\t\t\tbreak;\n\n\t\tcase 'CUSTOM' :\n\t\t\t$t_custom_field_def = custom_field_get_definition( $t_custom_field_id );\n\t\t\t$t_question_title = sprintf( lang_get( 'actiongroup_menu_update_field' ), lang_get_defaulted( $t_custom_field_def['name'] ) );\n\t\t\t$t_button_title = $t_question_title;\n\t\t\t$t_form = \"custom_field_$t_custom_field_id\";\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\ttrigger_error( ERROR_GENERIC, ERROR );\n\t}\n\n\tbug_group_action_print_top();\n\n\tif ( $t_multiple_projects ) {\n\t\techo '<p class=\"bold\">' . lang_get( 'multiple_projects' ) . '</p>';\n\t}\n?>\n\n<br />\n\n<div align=\"center\">\n<form method=\"post\" action=\"bug_actiongroup.php\">\n<?php echo form_security_field( $t_form_name ); ?>\n<input type=\"hidden\" name=\"action\" value=\"<?php echo string_attribute( $f_action ) ?>\" />\n<?php\n\tbug_group_action_print_hidden_fields( $f_bug_arr );\n\n\tif ( $f_action === 'CUSTOM' ) {\n\t\techo \"<input type=\\\"hidden\\\" name=\\\"custom_field_id\\\" value=\\\"$t_custom_field_id\\\" />\";\n\t}\n?>\n<table class=\"width75\" cellspacing=\"1\">\n<?php\nif ( !$t_finished ) {\n?>\n<tr class=\"row-1\">\n\t<td class=\"category\">\n\t\t<?php echo $t_question_title ?>\n\t</td>\n\t<td>\n\t<?php\n\t\tif ( $f_action === 'CUSTOM' ) {\n\t\t\t$t_custom_field_def = custom_field_get_definition( $t_custom_field_id );\n\n\t\t\t$t_bug_id = null;\n\n\t\t\t# if there is only one issue, use its current value as default, otherwise,\n\t\t\t# use the default value specified in custom field definition.\n\t\t\tif ( count( $f_bug_arr ) == 1 ) {\n\t\t\t\t$t_bug_id = $f_bug_arr[0];\n\t\t\t}\n\n\t\t\tprint_custom_field_input( $t_custom_field_def, $t_bug_id );\n\t\t} else {\n\t\t\techo \"<select name=\\\"$t_form\\\">\";\n\n\t\t\tswitch ( $f_action ) {\n\t\t\t\tcase 'COPY':\n\t\t\t\tcase 'MOVE':\n\t\t\t\t\tprint_project_option_list( null, false );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ASSIGN':\n\t\t\t\t\tprint_assign_to_option_list( 0, $t_project_id );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'RESOLVE':\n\t\t\t\t\tprint_enum_string_option_list( 'resolution', config_get( 'bug_resolution_fixed_threshold' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_PRIOR':\n\t\t\t\t\tprint_enum_string_option_list( 'priority', config_get( 'default_bug_priority' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_STATUS':\n\t\t\t\t\tprint_enum_string_option_list( 'status', config_get( 'bug_submit_status' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_CATEGORY':\n\t\t\t\t\tprint_category_option_list();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VIEW_STATUS':\n\t\t\t\t\tprint_enum_string_option_list( 'view_state', config_get( 'default_bug_view_status' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_TARGET_VERSION':\n\t\t\t\tcase 'UP_FIXED_IN_VERSION':\n\t\t\t\t\tprint_version_option_list( '', $t_project_id, VERSION_ALL );\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\techo '</select>';\n\t\t}\n\t\t?>\n\t</td>\n</tr>\n\t<?php\n\tif ( isset( $t_question_title2 ) ) {\n\t\tswitch ( $f_action ) {\n\t\t\tcase 'RESOLVE':\n\t\t\t\t$t_show_product_version = ( ON == config_get( 'show_product_version' ) )\n\t\t\t\t\t|| ( ( AUTO == config_get( 'show_product_version' ) )\n\t\t\t\t\t\t\t\t&& ( count( version_get_all_rows( $t_project_id ) ) > 0 ) );\n\t\t\t\tif ( $t_show_product_version ) {\n\t?>\n\t\t<tr class=\"row-2\">\n\t\t\t<td class=\"category\">\n\t\t\t\t<?php echo $t_question_title2 ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<select name=\"<?php echo $t_form2 ?>\">\n\t\t\t\t\t<?php print_version_option_list( '', null, VERSION_ALL );?>\n\t\t\t\t</select>\n\t\t\t</td>\n\t\t</tr>\n\t<?php\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t?>\n<?php\n} else {\n?>\n\n<tr class=\"row-1\">\n\t<td class=\"category\" colspan=\"2\">\n\t\t<?php echo $t_question_title; ?>\n\t</td>\n</tr>\n<?php\n}\n?>\n\n<?php\nif( $t_bugnote ) {\n?>\n<tr class=\"row-1\">\n\t<td class=\"category\">\n\t\t<?php echo lang_get( 'add_bugnote_title' ); ?>\n\t</td>\n\t<td>\n\t\t<textarea name=\"bugnote_text\" cols=\"80\" rows=\"10\"></textarea>\n\t</td>\n</tr>\n<?php if ( access_has_project_level( config_get( 'private_bugnote_threshold' ), $t_project_id ) ) { ?>\n<tr <?php echo helper_alternate_class() ?>>\n\t<td class=\"category\">\n\t\t<?php echo lang_get( 'view_status' ) ?>\n\t</td>\n\t<td>\n<?php\n\t\t$t_default_bugnote_view_status = config_get( 'default_bugnote_view_status' );\n\t\tif ( access_has_project_level( config_get( 'set_view_status_threshold' ), $t_project_id ) ) {\n?>\n\t\t\t<input type=\"checkbox\" name=\"private\" <?php check_checked( $t_default_bugnote_view_status, VS_PRIVATE ); ?> />\n<?php\n\t\t\techo lang_get( 'private' );\n\t\t} else {\n\t\t\techo get_enum_element( 'project_view_state', $t_default_bugnote_view_status );\n\t\t}\n?>\n\t</td>\n</tr>\n<?php } ?>\n\n<?php\n}\n?>\n<tr>\n\t<td class=\"center\" colspan=\"2\">\n\t\t<input type=\"submit\" class=\"button\" value=\"<?php echo $t_button_title ?>\" />\n\t</td>\n</tr>\n</table>\n<br />\n\n<?php\n\tbug_group_action_print_bug_list( $f_bug_arr );\n?>\n</form>\n</div>\n\n<?php\n\tbug_group_action_print_bottom();\n", "<?php\n# MantisBT - a php based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @copyright Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n * @copyright Copyright (C) 2002 - 2011  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n * @link http://www.mantisbt.org\n *\t@package CoreAPI\n *\t@subpackage BugGroupActionAPI\n */\n\n/**\n * Print the top part for the bug action group page.\n */\nfunction bug_group_action_print_top() {\n\thtml_page_top();\n}\n\n/**\n * Print the bottom part for the bug action group page.\n */\nfunction bug_group_action_print_bottom() {\n\thtml_page_bottom();\n}\n\n/**\n * Print the list of selected issues and the legend for the status colors.\n *\n * @param $p_bug_ids_array   An array of issue ids.\n */\nfunction bug_group_action_print_bug_list( $p_bug_ids_array ) {\n\t$t_legend_position = config_get( 'status_legend_position' );\n\n\tif( STATUS_LEGEND_POSITION_TOP == $t_legend_position ) {\n\t\thtml_status_legend();\n\t\techo '<br />';\n\t}\n\n\techo '<div align=\"center\">';\n\techo '<table class=\"width75\" cellspacing=\"1\">';\n\techo '<tr class=\"row-1\">';\n\techo '<td class=\"category\" colspan=\"2\">';\n\techo lang_get( 'actiongroup_bugs' );\n\techo '</td>';\n\techo '</tr>';\n\n\t$t_i = 1;\n\n\tforeach( $p_bug_ids_array as $t_bug_id ) {\n\t\t$t_class = sprintf( \"row-%d\", ( $t_i++ % 2 ) + 1 );\n\t\techo sprintf( \"<tr bgcolor=\\\"%s\\\"> <td>%s</td> <td>%s</td> </tr>\\n\", get_status_color( bug_get_field( $t_bug_id, 'status' ) ), string_get_bug_view_link( $t_bug_id ), string_attribute( bug_get_field( $t_bug_id, 'summary' ) ) );\n\t}\n\n\techo '</table>';\n\techo '</form>';\n\techo '</div>';\n\n\tif( STATUS_LEGEND_POSITION_BOTTOM == $t_legend_position ) {\n\t\techo '<br />';\n\t\thtml_status_legend();\n\t}\n}\n\n/**\n * Print the array of issue ids via hidden fields in the form to be passed on to\n * the bug action group action page.\n *\n * @param $p_bug_ids_array   An array of issue ids.\n */\nfunction bug_group_action_print_hidden_fields( $p_bug_ids_array ) {\n\tforeach( $p_bug_ids_array as $t_bug_id ) {\n\t\techo '<input type=\"hidden\" name=\"bug_arr[]\" value=\"' . $t_bug_id . '\" />' . \"\\n\";\n\t}\n}\n\n/**\n * Prints the list of fields in the custom action form.  These are the user inputs\n * and the submit button.  This ends up calling action_<action>_print_fields()\n * from bug_actiongroup_<action>_inc.php\n *\n * @param $p_action   The custom action name without the \"EXT_\" prefix.\n */\nfunction bug_group_action_print_action_fields( $p_action ) {\n\trequire_once( dirname( dirname( __FILE__ ) ) . DIRECTORY_SEPARATOR . 'bug_actiongroup_' . $p_action . '_inc.php' );\n\t$t_function_name = 'action_' . $p_action . '_print_fields';\n\t$t_function_name();\n}\n\n/**\n * Prints some title text for the custom action page.  This ends up calling\n * action_<action>_print_title() from bug_actiongroup_<action>_inc.php\n *\n * @param $p_action   The custom action name without the \"EXT_\" prefix.\n */\nfunction bug_group_action_print_title( $p_action ) {\n\trequire_once( dirname( dirname( __FILE__ ) ) . DIRECTORY_SEPARATOR . 'bug_actiongroup_' . $p_action . '_inc.php' );\n\t$t_function_name = 'action_' . $p_action . '_print_title';\n\t$t_function_name();\n}\n\n/**\n * Validates the combination of an action and a bug.  This ends up calling\n * action_<action>_validate() from bug_actiongroup_<action>_inc.php\n *\n * @param $p_action   The custom action name without the \"EXT_\" prefix.\n * @param $p_bug_id   The id of the bug to validate the action on.\n *\n * @returns true|array true if action can be applied or array of ( bug_id => reason for failure to validate )\n */\nfunction bug_group_action_validate( $p_action, $p_bug_id ) {\n\trequire_once( dirname( dirname( __FILE__ ) ) . DIRECTORY_SEPARATOR . 'bug_actiongroup_' . $p_action . '_inc.php' );\n\t$t_function_name = 'action_' . $p_action . '_validate';\n\treturn $t_function_name( $p_bug_id );\n}\n\n\n/**\n * Executes an action on a bug.  This ends up calling\n * action_<action>_process() from bug_actiongroup_<action>_inc.php\n *\n * @param $p_action   The custom action name without the \"EXT_\" prefix.\n * @param $p_bug_id   The id of the bug to validate the action on.\n * @returns true|array Action can be applied., ( bug_id => reason for failure to process )\n */\nfunction bug_group_action_process( $p_action, $p_bug_id ) {\n\trequire_once( dirname( dirname( __FILE__ ) ) . DIRECTORY_SEPARATOR . 'bug_actiongroup_' . $p_action . '_inc.php' );\n\t$t_function_name = 'action_' . $p_action . '_process';\n\treturn $t_function_name( $p_bug_id );\n}\n"], "fixing_code": ["<?php\n# MantisBT - a php based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n\t/**\n\t * @package MantisBT\n\t * @copyright Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n\t * @copyright Copyright (C) 2002 - 2011  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n\t * @link http://www.mantisbt.org\n\t */\n\t /**\n\t  * MantisBT Core API's\n\t  */\n\trequire_once( 'core.php' );\n\n\trequire_once( 'bug_api.php' );\n\trequire_once( 'bug_group_action_api.php' );\n\n\tauth_ensure_user_authenticated();\n\n\thelper_begin_long_process();\n\n\t$f_action = gpc_get_string( 'action' );\n\t$f_bug_arr\t= gpc_get_int_array( 'bug_arr', array() );\n\n\t$t_form_name = 'bug_actiongroup_' . $f_action;\n\n\tform_security_validate( $t_form_name );\n\n\tbug_group_action_init( $f_action );\n\n\t# group bugs by project\n\t$t_projects_bugs = array();\n\tforeach( $f_bug_arr as $t_bug_id ) {\n\t\tbug_ensure_exists( $t_bug_id );\n\t\t$t_bug = bug_get( $t_bug_id, true );\n\n\t\tif ( isset( $t_projects_bugs[$t_bug->project_id] ) ) {\n\t\t  $t_projects_bugs[$t_bug->project_id][] = $t_bug_id;\n        } else {\n\t\t  $t_projects_bugs[$t_bug->project_id] = array( $t_bug_id );\n        }\n    }\n\n\t$t_failed_ids = array();\n\n\tforeach( $t_projects_bugs as $t_project_id => $t_bugs ) {\n\t\t$g_project_override = $t_project_id;\n\t\tforeach( $t_bugs as $t_bug_id ) {\n\t\t\t$t_result = bug_group_action_validate( $f_action, $t_bug_id );\n\t\t\tif( $t_result !== true ) {\n\t\t\t\tforeach( $t_result as $t_key => $t_value ) {\n\t\t\t\t\t$t_failed_ids[$t_key] = $t_value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( !isset( $t_failed_ids[$t_bug_id] ) ) {\n\t\t\t\t$t_result = bug_group_action_process( $f_action, $t_bug_id );\n\t\t\t\tif( $t_result !== true ) {\n\t\t\t\t\t$t_failed_ids[] = $t_result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$g_project_override = null;\n\n\tform_security_purge( $t_form_name );\n\n\tif ( count( $t_failed_ids ) > 0 ) {\n\t\thtml_page_top();\n\n\t\techo '<div align=\"center\">';\n\t\tforeach( $t_failed_ids as $t_id => $t_reason ) {\n\t\t\tprintf(\"<p>%s: %s</p>\\n\", string_get_bug_view_link( $t_id ), $t_reason );\n\t\t}\n\n\t\tprint_bracket_link( 'view_all_bug_page.php', lang_get( 'proceed' ) );\n\t\techo '</div>';\n\n\t\thtml_page_bottom();\n\t} else {\n\t\tprint_header_redirect( 'view_all_bug_page.php' );\n\t}\n", "<?php\n# MantisBT - a php based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n\t/**\n\t * @package MantisBT\n\t * @copyright Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n\t * @copyright Copyright (C) 2002 - 2011  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n\t * @link http://www.mantisbt.org\n\t */\n\n\trequire_once( 'core.php' );\n\trequire_once( 'bug_group_action_api.php' );\n\n\t$t_external_action = utf8_strtolower( utf8_substr( $f_action, utf8_strlen( $t_external_action_prefix ) ) );\n\t$t_form_name = 'bug_actiongroup_' . $t_external_action;\n\n\tbug_group_action_init( $t_external_action );\n\n\tbug_group_action_print_top();\n?>\n\n\t<br />\n\n\t<div align=\"center\">\n\t<form method=\"post\" action=\"bug_actiongroup_ext.php\">\n<?php echo form_security_field( $t_form_name ); ?>\n\t\t<input type=\"hidden\" name=\"action\" value=\"<?php echo string_attribute( $t_external_action ) ?>\" />\n<table class=\"width75\" cellspacing=\"1\">\n\t<?php\n\t\tbug_group_action_print_title( $t_external_action );\n\t\tbug_group_action_print_hidden_fields( $f_bug_arr );\n\t\tbug_group_action_print_action_fields( $t_external_action );\n\t?>\n</table>\n\t</form>\n\t</div>\n\n\t<br />\n\n<?php\n\tbug_group_action_print_bug_list( $f_bug_arr );\n\tbug_group_action_print_bottom();\n", "<?php\n# MantisBT - a php based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n\t/**\n\t * This page allows actions to be performed on an array of bugs\n\t *\n\t * @package MantisBT\n\t * @copyright Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n\t * @copyright Copyright (C) 2002 - 2011  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n\t * @link http://www.mantisbt.org\n\t */\n\t /**\n\t  * MantisBT Core API's\n\t  */\n\trequire_once( 'core.php' );\n\n\trequire_once( 'bug_group_action_api.php' );\n\n\tauth_ensure_user_authenticated();\n\n\t$f_action = gpc_get_string( 'action', '' );\n\t$f_bug_arr = gpc_get_int_array( 'bug_arr', array() );\n\n\t# redirects to all_bug_page if nothing is selected\n\tif ( is_blank( $f_action ) || ( 0 == count( $f_bug_arr ) ) ) {\n\t\tprint_header_redirect( 'view_all_bug_page.php' );\n\t}\n\n\t# run through the issues to see if they are all from one project\n\t$t_project_id = ALL_PROJECTS;\n\t$t_multiple_projects = false;\n\t$t_projects = array();\n\n\tbug_cache_array_rows( $f_bug_arr );\n\n\tforeach( $f_bug_arr as $t_bug_id ) {\n\t\t$t_bug = bug_get( $t_bug_id );\n\t\tif ( $t_project_id != $t_bug->project_id ) {\n\t\t\tif ( ( $t_project_id != ALL_PROJECTS ) && !$t_multiple_projects ) {\n\t\t\t\t$t_multiple_projects = true;\n\t\t\t} else {\n\t\t\t\t$t_project_id = $t_bug->project_id;\n\t\t\t\t$t_projects[$t_project_id] = $t_project_id;\n\t\t\t}\n\t\t}\n\t}\n\tif ( $t_multiple_projects ) {\n\t\t$t_project_id = ALL_PROJECTS;\n\t\t$t_projects[ALL_PROJECTS] = ALL_PROJECTS;\n\t}\n\t# override the project if necessary\n\tif( $t_project_id != helper_get_current_project() ) {\n\t\t# in case the current project is not the same project of the bug we are viewing...\n\t\t# ... override the current project. This to avoid problems with categories and handlers lists etc.\n\t\t$g_project_override = $t_project_id;\n\t}\n\n\t$t_finished = false;\n\t$t_bugnote = false;\n\n\t$t_external_action_prefix = 'EXT_';\n\tif ( strpos( $f_action, $t_external_action_prefix ) === 0 ) {\n\t\t$t_form_page = 'bug_actiongroup_ext_page.php';\n\t\trequire_once( $t_form_page );\n\t\texit;\n\t}\n\n\t$t_custom_group_actions = config_get( 'custom_group_actions' );\n\n\tforeach( $t_custom_group_actions as $t_custom_group_action ) {\n\t\tif ( $f_action == $t_custom_group_action['action'] ) {\n\t\t\trequire_once( $t_custom_group_action['form_page'] );\n\t\t\texit;\n\t\t}\n\t}\n\n\t# Check if user selected to update a custom field.\n\t$t_custom_fields_prefix = 'custom_field_';\n\tif ( strpos( $f_action, $t_custom_fields_prefix ) === 0 ) {\n\t\t$t_custom_field_id = (int)substr( $f_action, utf8_strlen( $t_custom_fields_prefix ) );\n\t\t$f_action = 'CUSTOM';\n\t}\n\n\t# Form name\n\t$t_form_name = 'bug_actiongroup_' . $f_action;\n\n\tswitch ( $f_action )  {\n\t\t# Use a simple confirmation page, if close or delete...\n\t\tcase 'CLOSE' :\n\t\t\t$t_finished \t\t\t= true;\n\t\t\t$t_question_title \t\t= lang_get( 'close_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'close_group_bugs_button' );\n\t\t\t$t_bugnote\t\t\t\t= true;\n\t\t\tbreak;\n\n\t\tcase 'DELETE' :\n\t\t\t$t_finished \t\t\t= true;\n\t\t\t$t_question_title\t\t= lang_get( 'delete_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'delete_group_bugs_button' );\n\t\t\tbreak;\n\n\t\tcase 'SET_STICKY' :\n\t\t\t$t_finished \t\t\t= true;\n\t\t\t$t_question_title\t\t= lang_get( 'set_sticky_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'set_sticky_group_bugs_button' );\n\t\t\tbreak;\n\n\t\t# ...else we define the variables used in the form\n\t\tcase 'MOVE' :\n\t\t\t$t_question_title \t\t= lang_get( 'move_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'move_group_bugs_button' );\n\t\t\t$t_form\t\t\t\t\t= 'project_id';\n\t\t\tbreak;\n\n\t\tcase 'COPY' :\n\t\t\t$t_question_title \t\t= lang_get( 'copy_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'copy_group_bugs_button' );\n\t\t\t$t_form\t\t\t\t\t= 'project_id';\n\t\t\tbreak;\n\n\t\tcase 'ASSIGN' :\n\t\t\t$t_question_title \t\t= lang_get( 'assign_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'assign_group_bugs_button' );\n\t\t\t$t_form \t\t\t\t= 'assign';\n\t\t\tbreak;\n\n\t\tcase 'RESOLVE' :\n\t\t\t$t_question_title \t\t= lang_get( 'resolve_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'resolve_group_bugs_button' );\n\t\t\t$t_form \t\t\t\t= 'resolution';\n\t\t\tif ( ALL_PROJECTS != $t_project_id ) {\n\t\t\t\t$t_question_title2 = lang_get( 'fixed_in_version' );\n\t\t\t\t$t_form2 = 'fixed_in_version';\n\t\t\t}\n\t\t\t$t_bugnote\t\t\t\t= true;\n\t\t\tbreak;\n\n\t\tcase 'UP_PRIOR' :\n\t\t\t$t_question_title \t\t= lang_get( 'priority_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'priority_group_bugs_button' );\n\t\t\t$t_form \t\t\t\t= 'priority';\n\t\t\tbreak;\n\n\t\tcase 'UP_STATUS' :\n\t\t\t$t_question_title \t\t= lang_get( 'status_bugs_conf_msg' );\n\t\t\t$t_button_title \t\t= lang_get( 'status_group_bugs_button' );\n\t\t\t$t_form \t\t\t\t= 'status';\n\t\t\t$t_bugnote\t\t\t\t= true;\n\t\t\tbreak;\n\n\t\tcase 'UP_CATEGORY' :\n\t\t\t$t_question_title\t\t= lang_get( 'category_bugs_conf_msg' );\n\t\t\t$t_button_title\t\t\t= lang_get( 'category_group_bugs_button' );\n\t\t\t$t_form\t\t\t\t\t= 'category';\n\t\t\tbreak;\n\n\t\tcase 'VIEW_STATUS' :\n\t\t\t$t_question_title\t\t= lang_get( 'view_status_bugs_conf_msg' );\n\t\t\t$t_button_title\t\t\t= lang_get( 'view_status_group_bugs_button' );\n\t\t\t$t_form\t\t\t\t\t= 'view_status';\n\t\t\tbreak;\n\n\t\tcase 'UP_FIXED_IN_VERSION':\n\t\t\t$t_question_title\t\t= lang_get( 'fixed_in_version_bugs_conf_msg' );\n\t\t\t$t_button_title\t\t\t= lang_get( 'fixed_in_version_group_bugs_button' );\n\t\t\t$t_form\t\t\t\t\t= 'fixed_in_version';\n\t\t\tbreak;\n\n\t\tcase 'UP_TARGET_VERSION':\n\t\t\t$t_question_title\t\t= lang_get( 'target_version_bugs_conf_msg' );\n\t\t\t$t_button_title\t\t\t= lang_get( 'target_version_group_bugs_button' );\n\t\t\t$t_form\t\t\t\t\t= 'target_version';\n\t\t\tbreak;\n\n\t\tcase 'CUSTOM' :\n\t\t\t$t_custom_field_def = custom_field_get_definition( $t_custom_field_id );\n\t\t\t$t_question_title = sprintf( lang_get( 'actiongroup_menu_update_field' ), lang_get_defaulted( $t_custom_field_def['name'] ) );\n\t\t\t$t_button_title = $t_question_title;\n\t\t\t$t_form = \"custom_field_$t_custom_field_id\";\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\ttrigger_error( ERROR_GENERIC, ERROR );\n\t}\n\n\tbug_group_action_print_top();\n\n\tif ( $t_multiple_projects ) {\n\t\techo '<p class=\"bold\">' . lang_get( 'multiple_projects' ) . '</p>';\n\t}\n?>\n\n<br />\n\n<div align=\"center\">\n<form method=\"post\" action=\"bug_actiongroup.php\">\n<?php echo form_security_field( $t_form_name ); ?>\n<input type=\"hidden\" name=\"action\" value=\"<?php echo string_attribute( $f_action ) ?>\" />\n<?php\n\tbug_group_action_print_hidden_fields( $f_bug_arr );\n\n\tif ( $f_action === 'CUSTOM' ) {\n\t\techo \"<input type=\\\"hidden\\\" name=\\\"custom_field_id\\\" value=\\\"$t_custom_field_id\\\" />\";\n\t}\n?>\n<table class=\"width75\" cellspacing=\"1\">\n<?php\nif ( !$t_finished ) {\n?>\n<tr class=\"row-1\">\n\t<td class=\"category\">\n\t\t<?php echo $t_question_title ?>\n\t</td>\n\t<td>\n\t<?php\n\t\tif ( $f_action === 'CUSTOM' ) {\n\t\t\t$t_custom_field_def = custom_field_get_definition( $t_custom_field_id );\n\n\t\t\t$t_bug_id = null;\n\n\t\t\t# if there is only one issue, use its current value as default, otherwise,\n\t\t\t# use the default value specified in custom field definition.\n\t\t\tif ( count( $f_bug_arr ) == 1 ) {\n\t\t\t\t$t_bug_id = $f_bug_arr[0];\n\t\t\t}\n\n\t\t\tprint_custom_field_input( $t_custom_field_def, $t_bug_id );\n\t\t} else {\n\t\t\techo \"<select name=\\\"$t_form\\\">\";\n\n\t\t\tswitch ( $f_action ) {\n\t\t\t\tcase 'COPY':\n\t\t\t\tcase 'MOVE':\n\t\t\t\t\tprint_project_option_list( null, false );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ASSIGN':\n\t\t\t\t\tprint_assign_to_option_list( 0, $t_project_id );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'RESOLVE':\n\t\t\t\t\tprint_enum_string_option_list( 'resolution', config_get( 'bug_resolution_fixed_threshold' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_PRIOR':\n\t\t\t\t\tprint_enum_string_option_list( 'priority', config_get( 'default_bug_priority' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_STATUS':\n\t\t\t\t\tprint_enum_string_option_list( 'status', config_get( 'bug_submit_status' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_CATEGORY':\n\t\t\t\t\tprint_category_option_list();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VIEW_STATUS':\n\t\t\t\t\tprint_enum_string_option_list( 'view_state', config_get( 'default_bug_view_status' ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'UP_TARGET_VERSION':\n\t\t\t\tcase 'UP_FIXED_IN_VERSION':\n\t\t\t\t\tprint_version_option_list( '', $t_project_id, VERSION_ALL );\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\techo '</select>';\n\t\t}\n\t\t?>\n\t</td>\n</tr>\n\t<?php\n\tif ( isset( $t_question_title2 ) ) {\n\t\tswitch ( $f_action ) {\n\t\t\tcase 'RESOLVE':\n\t\t\t\t$t_show_product_version = ( ON == config_get( 'show_product_version' ) )\n\t\t\t\t\t|| ( ( AUTO == config_get( 'show_product_version' ) )\n\t\t\t\t\t\t\t\t&& ( count( version_get_all_rows( $t_project_id ) ) > 0 ) );\n\t\t\t\tif ( $t_show_product_version ) {\n\t?>\n\t\t<tr class=\"row-2\">\n\t\t\t<td class=\"category\">\n\t\t\t\t<?php echo $t_question_title2 ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<select name=\"<?php echo $t_form2 ?>\">\n\t\t\t\t\t<?php print_version_option_list( '', null, VERSION_ALL );?>\n\t\t\t\t</select>\n\t\t\t</td>\n\t\t</tr>\n\t<?php\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t?>\n<?php\n} else {\n?>\n\n<tr class=\"row-1\">\n\t<td class=\"category\" colspan=\"2\">\n\t\t<?php echo $t_question_title; ?>\n\t</td>\n</tr>\n<?php\n}\n?>\n\n<?php\nif( $t_bugnote ) {\n?>\n<tr class=\"row-1\">\n\t<td class=\"category\">\n\t\t<?php echo lang_get( 'add_bugnote_title' ); ?>\n\t</td>\n\t<td>\n\t\t<textarea name=\"bugnote_text\" cols=\"80\" rows=\"10\"></textarea>\n\t</td>\n</tr>\n<?php if ( access_has_project_level( config_get( 'private_bugnote_threshold' ), $t_project_id ) ) { ?>\n<tr <?php echo helper_alternate_class() ?>>\n\t<td class=\"category\">\n\t\t<?php echo lang_get( 'view_status' ) ?>\n\t</td>\n\t<td>\n<?php\n\t\t$t_default_bugnote_view_status = config_get( 'default_bugnote_view_status' );\n\t\tif ( access_has_project_level( config_get( 'set_view_status_threshold' ), $t_project_id ) ) {\n?>\n\t\t\t<input type=\"checkbox\" name=\"private\" <?php check_checked( $t_default_bugnote_view_status, VS_PRIVATE ); ?> />\n<?php\n\t\t\techo lang_get( 'private' );\n\t\t} else {\n\t\t\techo get_enum_element( 'project_view_state', $t_default_bugnote_view_status );\n\t\t}\n?>\n\t</td>\n</tr>\n<?php } ?>\n\n<?php\n}\n?>\n<tr>\n\t<td class=\"center\" colspan=\"2\">\n\t\t<input type=\"submit\" class=\"button\" value=\"<?php echo $t_button_title ?>\" />\n\t</td>\n</tr>\n</table>\n<br />\n\n<?php\n\tbug_group_action_print_bug_list( $f_bug_arr );\n?>\n</form>\n</div>\n\n<?php\n\tbug_group_action_print_bottom();\n", "<?php\n# MantisBT - a php based bugtracking system\n\n# MantisBT is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 2 of the License, or\n# (at your option) any later version.\n#\n# MantisBT is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @copyright Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org\n * @copyright Copyright (C) 2002 - 2011  MantisBT Team - mantisbt-dev@lists.sourceforge.net\n * @link http://www.mantisbt.org\n *\t@package CoreAPI\n *\t@subpackage BugGroupActionAPI\n */\n\n/**\n * Initialise bug action group api\n */\nfunction bug_group_action_init( $p_action ) {\n\t$t_valid_actions = bug_group_action_get_commands( current_user_get_accessible_projects() );\n\t$t_action = strtoupper( $p_action );\n\n\tif ( !isset( $t_valid_actions[$t_action] ) && !isset ( $t_valid_actions['EXT_' . $t_action] ) ) {\n\t\ttrigger_error( ERROR_GENERIC, ERROR );\n\t}\n\n\t$t_include_file = config_get_global( 'absolute_path' ) . 'bug_actiongroup_' . $p_action . '_inc.php';\n\tif ( !file_exists( $t_include_file ) ) {\n\t\ttrigger_error( ERROR_GENERIC, ERROR );\n\t} else {\n\t\trequire_once( $t_include_file );\n\t}\n}\n\n/**\n * Print the top part for the bug action group page.\n */\nfunction bug_group_action_print_top() {\n\thtml_page_top();\n}\n\n/**\n * Print the bottom part for the bug action group page.\n */\nfunction bug_group_action_print_bottom() {\n\thtml_page_bottom();\n}\n\n/**\n * Print the list of selected issues and the legend for the status colors.\n *\n * @param $p_bug_ids_array   An array of issue ids.\n */\nfunction bug_group_action_print_bug_list( $p_bug_ids_array ) {\n\t$t_legend_position = config_get( 'status_legend_position' );\n\n\tif( STATUS_LEGEND_POSITION_TOP == $t_legend_position ) {\n\t\thtml_status_legend();\n\t\techo '<br />';\n\t}\n\n\techo '<div align=\"center\">';\n\techo '<table class=\"width75\" cellspacing=\"1\">';\n\techo '<tr class=\"row-1\">';\n\techo '<td class=\"category\" colspan=\"2\">';\n\techo lang_get( 'actiongroup_bugs' );\n\techo '</td>';\n\techo '</tr>';\n\n\t$t_i = 1;\n\n\tforeach( $p_bug_ids_array as $t_bug_id ) {\n\t\t$t_class = sprintf( \"row-%d\", ( $t_i++ % 2 ) + 1 );\n\t\techo sprintf( \"<tr bgcolor=\\\"%s\\\"> <td>%s</td> <td>%s</td> </tr>\\n\", get_status_color( bug_get_field( $t_bug_id, 'status' ) ), string_get_bug_view_link( $t_bug_id ), string_attribute( bug_get_field( $t_bug_id, 'summary' ) ) );\n\t}\n\n\techo '</table>';\n\techo '</form>';\n\techo '</div>';\n\n\tif( STATUS_LEGEND_POSITION_BOTTOM == $t_legend_position ) {\n\t\techo '<br />';\n\t\thtml_status_legend();\n\t}\n}\n\n/**\n * Print the array of issue ids via hidden fields in the form to be passed on to\n * the bug action group action page.\n *\n * @param $p_bug_ids_array   An array of issue ids.\n */\nfunction bug_group_action_print_hidden_fields( $p_bug_ids_array ) {\n\tforeach( $p_bug_ids_array as $t_bug_id ) {\n\t\techo '<input type=\"hidden\" name=\"bug_arr[]\" value=\"' . $t_bug_id . '\" />' . \"\\n\";\n\t}\n}\n\n/**\n * Prints the list of fields in the custom action form.  These are the user inputs\n * and the submit button.  This ends up calling action_<action>_print_fields()\n * from bug_actiongroup_<action>_inc.php\n *\n * @param $p_action   The custom action name without the \"EXT_\" prefix.\n */\nfunction bug_group_action_print_action_fields( $p_action ) {\n\t$t_function_name = 'action_' . $p_action . '_print_fields';\n\t$t_function_name();\n}\n\n/**\n * Prints some title text for the custom action page.  This ends up calling\n * action_<action>_print_title() from bug_actiongroup_<action>_inc.php\n *\n * @param $p_action   The custom action name without the \"EXT_\" prefix.\n */\nfunction bug_group_action_print_title( $p_action ) {\n\t$t_function_name = 'action_' . $p_action . '_print_title';\n\t$t_function_name();\n}\n\n/**\n * Validates the combination of an action and a bug.  This ends up calling\n * action_<action>_validate() from bug_actiongroup_<action>_inc.php\n *\n * @param $p_action   The custom action name without the \"EXT_\" prefix.\n * @param $p_bug_id   The id of the bug to validate the action on.\n *\n * @returns true|array true if action can be applied or array of ( bug_id => reason for failure to validate )\n */\nfunction bug_group_action_validate( $p_action, $p_bug_id ) {\n\t$t_function_name = 'action_' . $p_action . '_validate';\n\treturn $t_function_name( $p_bug_id );\n}\n\n\n/**\n * Executes an action on a bug.  This ends up calling\n * action_<action>_process() from bug_actiongroup_<action>_inc.php\n *\n * @param $p_action   The custom action name without the \"EXT_\" prefix.\n * @param $p_bug_id   The id of the bug to validate the action on.\n * @returns true|array Action can be applied., ( bug_id => reason for failure to process )\n */\nfunction bug_group_action_process( $p_action, $p_bug_id ) {\n\t$t_function_name = 'action_' . $p_action . '_process';\n\treturn $t_function_name( $p_bug_id );\n}\n"], "filenames": ["bug_actiongroup_ext.php", "bug_actiongroup_ext_page.php", "bug_actiongroup_page.php", "core/bug_group_action_api.php"], "buggy_code_start_loc": [38, 23, 44, 23], "buggy_code_end_loc": [44, 50, 59, 140], "fixing_code_start_loc": [37, 23, 45, 24], "fixing_code_end_loc": [43, 31, 63, 154], "type": "CWE-22", "message": "Directory traversal vulnerability in bug_actiongroup_ext_page.php in MantisBT before 1.2.8 allows remote attackers to include and execute arbitrary local files via a .. (dot dot) in the action parameter, related to bug_actiongroup_page.php.", "other": {"cve": {"id": "CVE-2011-3357", "sourceIdentifier": "secalert@redhat.com", "published": "2011-09-21T16:55:05.117", "lastModified": "2018-10-09T19:33:18.310", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Directory traversal vulnerability in bug_actiongroup_ext_page.php in MantisBT before 1.2.8 allows remote attackers to include and execute arbitrary local files via a .. (dot dot) in the action parameter, related to bug_actiongroup_page.php."}, {"lang": "es", "value": "Vulnerabilidad de salto de directorio en bug_actiongroup_ext_page.php en MantisBT antes de v1.2.8, permite a atacantes remotos incluir y ejecutar archivos locales de su elecci\u00f3n a trav\u00e9s del par\u00e1metro .. (punto punto) en el par\u00e1metro action, relacionado con bug_actiongroup_page.php."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.2.7", "matchCriteriaId": "E421063A-47DD-4307-AB38-331301A1DC6C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:0.19.3:*:*:*:*:*:*:*", "matchCriteriaId": "85A3FBD5-163C-4990-B809-A5C9C81A3C6C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:0.19.4:*:*:*:*:*:*:*", "matchCriteriaId": "D3FDF456-9648-4A7C-B15A-2828A32D4962"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.0:*:*:*:*:*:*:*", "matchCriteriaId": "6B2602F7-2D93-4E1E-9425-4EDD23752029"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.1:*:*:*:*:*:*:*", "matchCriteriaId": "86DE3BE3-D6C9-4905-9E61-B70776460604"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.2:*:*:*:*:*:*:*", "matchCriteriaId": "F128A2E2-D509-4B50-95C2-1A31C5B3B31F"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.3:*:*:*:*:*:*:*", "matchCriteriaId": "140D5F68-1CAB-458C-BC8B-4F726D657FE8"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.4:*:*:*:*:*:*:*", "matchCriteriaId": "0D25F4F5-7678-41C1-93CB-305883A08527"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.5:*:*:*:*:*:*:*", "matchCriteriaId": "D1A1316D-314B-4740-A836-D5E6319F4B28"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.6:*:*:*:*:*:*:*", "matchCriteriaId": "DBD27CCE-28C4-43CC-8CBD-D7FFB46171AC"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.7:*:*:*:*:*:*:*", "matchCriteriaId": "97298C43-B881-4C11-ADB6-17A8E43EB84E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.0.8:*:*:*:*:*:*:*", "matchCriteriaId": "7257ADD7-C9B7-4F85-AA13-615DD033FD5C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.0:*:*:*:*:*:*:*", "matchCriteriaId": "02FE950B-5E29-4FAA-9BE5-79F38B4C38F7"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.1:*:*:*:*:*:*:*", "matchCriteriaId": "D6F2BA78-D054-4E49-ABCA-637922898BF7"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.2:*:*:*:*:*:*:*", "matchCriteriaId": "4595B1E3-25AB-489E-A847-FDBF2554DD6D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.4:*:*:*:*:*:*:*", "matchCriteriaId": "C11A8F17-5253-475B-89FF-A26EA7531E13"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.5:*:*:*:*:*:*:*", "matchCriteriaId": "4A88B09D-CDCF-45FD-B004-13B597DA4F48"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.6:*:*:*:*:*:*:*", "matchCriteriaId": "49583BE8-B832-4E9F-B154-47A26C72489D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.7:*:*:*:*:*:*:*", "matchCriteriaId": "E2501F40-3630-4528-BE0A-61D4BB6EC7FE"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.1.8:*:*:*:*:*:*:*", "matchCriteriaId": "9223DAF7-D03E-4A4E-8AB5-5CEB87DFF2C3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.2.0:*:*:*:*:*:*:*", "matchCriteriaId": "CFF77ABF-0A03-437A-B241-1EF2BBB83D24"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.2.1:*:*:*:*:*:*:*", "matchCriteriaId": "5F096CD6-534E-4ABF-B2DF-D4B55B8C5F6A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.2.2:*:*:*:*:*:*:*", "matchCriteriaId": "A66AB537-6FBA-4A51-B10C-BF61F54BC01B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.2.3:*:*:*:*:*:*:*", "matchCriteriaId": "A50835BF-D28B-47FF-81F0-C34D95D6F2E9"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.2.4:*:*:*:*:*:*:*", "matchCriteriaId": "BA0EB9A6-1DFD-4C17-A002-0899DA252A56"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.2.5:*:*:*:*:*:*:*", "matchCriteriaId": "BBA33285-3EE7-43FD-8347-E7D9A18DC134"}, {"vulnerable": true, "criteria": "cpe:2.3:a:mantisbt:mantisbt:1.2.6:*:*:*:*:*:*:*", "matchCriteriaId": "8827C2B4-EBEC-4D64-9AC8-07A048467F40"}]}]}], "references": [{"url": "http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=640297", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}, {"url": "http://lists.debian.org/debian-security-tracker/2011/09/msg00012.html", "source": "secalert@redhat.com", "tags": ["Exploit"]}, {"url": "http://lists.fedoraproject.org/pipermail/package-announce/2011-September/066061.html", "source": "secalert@redhat.com", "tags": ["Exploit"]}, {"url": "http://security.gentoo.org/glsa/glsa-201211-01.xml", "source": "secalert@redhat.com"}, {"url": "http://securityreason.com/securityalert/8392", "source": "secalert@redhat.com"}, {"url": "http://www.debian.org/security/2011/dsa-2308", "source": "secalert@redhat.com"}, {"url": "http://www.mantisbt.org/bugs/view.php?id=13281", "source": "secalert@redhat.com", "tags": ["Exploit"]}, {"url": "http://www.openwall.com/lists/oss-security/2011/09/04/1", "source": "secalert@redhat.com", "tags": ["Exploit"]}, {"url": "http://www.openwall.com/lists/oss-security/2011/09/04/2", "source": "secalert@redhat.com"}, {"url": "http://www.openwall.com/lists/oss-security/2011/09/09/9", "source": "secalert@redhat.com", "tags": ["Exploit"]}, {"url": "http://www.securityfocus.com/archive/1/519547/100/0/threaded", "source": "secalert@redhat.com"}, {"url": "http://www.securityfocus.com/bid/49448", "source": "secalert@redhat.com"}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=735514", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}, {"url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/69588", "source": "secalert@redhat.com"}, {"url": "https://github.com/mantisbt/mantisbt/commit/5b93161f3ece2f73410c296fed8522f6475d273d", "source": "secalert@redhat.com", "tags": ["Patch"]}, {"url": "https://github.com/mantisbt/mantisbt/commit/6ede60d3db9e202044f135001589cce941ff6f0f", "source": "secalert@redhat.com", "tags": ["Patch"]}, {"url": "https://www.htbridge.ch/advisory/multiple_vulnerabilities_in_mantisbt.html", "source": "secalert@redhat.com", "tags": ["Exploit"]}]}, "github_commit_url": "https://github.com/mantisbt/mantisbt/commit/5b93161f3ece2f73410c296fed8522f6475d273d"}}