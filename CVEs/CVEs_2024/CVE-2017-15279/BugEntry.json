{"buggy_code": ["using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Web;\r\nusing Umbraco.Web.UI.Pages;\r\n\r\nnamespace Umbraco.Web.UI.Umbraco.Dialogs\r\n{\r\n    public partial class Publish : UmbracoEnsuredPage\r\n    {\r\n     \r\n        protected string PageName { get; private set; }\r\n        protected int DocumentId { get; private set; }\r\n        protected string DocumentPath { get; private set; }\r\n\r\n        protected override void OnInit(EventArgs e)\r\n        {\r\n            base.OnInit(e);\r\n\r\n            int id;\r\n            if (!int.TryParse(Request.GetItemAsString(\"id\"), out id))\r\n            {\r\n                throw new InvalidOperationException(\"The id value must be an integer\");\r\n            }\r\n\r\n            var doc = Services.ContentService.GetById(id);\r\n            if (doc == null)\r\n            {\r\n                throw new InvalidOperationException(\"No document found with id \" + id);\r\n            }\r\n\r\n            DocumentId = doc.Id;\r\n            PageName = doc.Name;\r\n            DocumentPath = doc.Path;\r\n\r\n        }\r\n    }\r\n}", "using System;\r\nusing System.Collections;\r\nusing System.Globalization;\r\nusing System.Web.UI;\r\nusing System.Web.UI.HtmlControls;\r\nusing System.Web.UI.WebControls;\r\nusing umbraco.BasePages;\r\nusing umbraco.cms.businesslogic;\r\nusing umbraco.cms.businesslogic.workflow;\r\n\r\nnamespace umbraco.dialogs\r\n{\r\n    /// <summary>\r\n    /// Summary description for cruds.\r\n    /// </summary>\r\n    public partial class notifications : UmbracoEnsuredPage\r\n    {\r\n        private ArrayList actions = new ArrayList();\r\n        private CMSNode node;\r\n\r\n        public notifications()\r\n        {\r\n            CurrentApp = BusinessLogic.DefaultApps.content.ToString();\r\n\r\n        }\r\n\r\n        protected void Page_Load(object sender, EventArgs e)\r\n        {\r\n            Button1.Text = ui.Text(\"update\");\r\n            pane_form.Text = ui.Text(\"notifications\", \"editNotifications\", node.Text, base.getUser());\r\n        }\r\n\r\n        #region Web Form Designer generated code\r\n\r\n        protected override void OnInit(EventArgs e)\r\n        {\r\n            //\r\n            // CODEGEN: This call is required by the ASP.NET Web Form Designer.\r\n            //\r\n            InitializeComponent();\r\n            base.OnInit(e);\r\n\r\n            node = new cms.businesslogic.CMSNode(int.Parse(helper.Request(\"id\")));\r\n\r\n            ArrayList actionList = BusinessLogic.Actions.Action.GetAll();\r\n            \r\n            foreach (interfaces.IAction a in actionList)\r\n            {\r\n                if (a.ShowInNotifier)\r\n                {\r\n                   \r\n                    CheckBox c = new CheckBox();\r\n                    c.ID = a.Letter.ToString(CultureInfo.InvariantCulture);\r\n                    \r\n                    if (base.getUser().GetNotifications(node.Path).IndexOf(a.Letter) > -1)\r\n                        c.Checked = true;\r\n\r\n                    uicontrols.PropertyPanel pp = new umbraco.uicontrols.PropertyPanel();\r\n                    pp.CssClass = \"inline\";\r\n                    pp.Text = ui.Text(\"actions\", a.Alias);\r\n                    pp.Controls.Add(c);\r\n\r\n                    pane_form.Controls.Add(pp);\r\n                    \r\n                    actions.Add(c);\r\n                 \r\n                }\r\n            }\r\n          \r\n        }\r\n\r\n        /// <summary>\r\n        /// Required method for Designer support - do not modify\r\n        /// the contents of this method with the code editor.\r\n        /// </summary>\r\n        private void InitializeComponent()\r\n        {\r\n        }\r\n\r\n        #endregion\r\n\r\n        protected void Button1_Click(object sender, EventArgs e)\r\n        {\r\n            string notifications = \"\";\r\n\r\n            // First off - load all users\r\n            foreach (CheckBox c in actions)\r\n            {\r\n                // Update the user with the new permission\r\n                if (c.Checked)\r\n                    notifications += c.ID;\r\n            }\r\n            Notification.UpdateNotifications(base.getUser(), node, notifications);\r\n            getUser().resetNotificationCache();\r\n            base.getUser().initNotifications();\r\n\r\n            var feedback = new umbraco.uicontrols.Feedback();\r\n            feedback.Text = ui.Text(\"notifications\") + \" \" + ui.Text(\"ok\") + \"</p><p><a href='#' class='btn btn-primary' onclick='\" + ClientTools.Scripts.CloseModalWindow() + \"'>\" + ui.Text(\"closeThisWindow\") + \"</a>\";\r\n            feedback.type = umbraco.uicontrols.Feedback.feedbacktype.success;\r\n\r\n            pane_form.Controls.Clear();\r\n            pane_form.Controls.Add(feedback);\r\n\r\n            //pane_form.Visible = false;\r\n            pl_buttons.Visible = false;\r\n        }\r\n    }\r\n}"], "fixing_code": ["using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Web;\r\nusing Umbraco.Web.UI.Pages;\r\n\r\nnamespace Umbraco.Web.UI.Umbraco.Dialogs\r\n{\r\n    public partial class Publish : UmbracoEnsuredPage\r\n    {\r\n     \r\n        protected string PageName { get; private set; }\r\n        protected int DocumentId { get; private set; }\r\n        protected string DocumentPath { get; private set; }\r\n\r\n        protected override void OnInit(EventArgs e)\r\n        {\r\n            base.OnInit(e);\r\n\r\n            int id;\r\n            if (!int.TryParse(Request.GetItemAsString(\"id\"), out id))\r\n            {\r\n                throw new InvalidOperationException(\"The id value must be an integer\");\r\n            }\r\n\r\n            var doc = Services.ContentService.GetById(id);\r\n            if (doc == null)\r\n            {\r\n                throw new InvalidOperationException(\"No document found with id \" + id);\r\n            }\r\n\r\n            DocumentId = doc.Id;\r\n            PageName = Server.HtmlEncode(doc.Name);\r\n            DocumentPath = doc.Path;\r\n\r\n        }\r\n    }\r\n}", "using System;\r\nusing System.Collections;\r\nusing System.Globalization;\r\nusing System.Web.UI;\r\nusing System.Web.UI.HtmlControls;\r\nusing System.Web.UI.WebControls;\r\nusing umbraco.BasePages;\r\nusing umbraco.cms.businesslogic;\r\nusing umbraco.cms.businesslogic.workflow;\r\n\r\nnamespace umbraco.dialogs\r\n{\r\n    /// <summary>\r\n    /// Summary description for cruds.\r\n    /// </summary>\r\n    public partial class notifications : UmbracoEnsuredPage\r\n    {\r\n        private ArrayList actions = new ArrayList();\r\n        private CMSNode node;\r\n\r\n        public notifications()\r\n        {\r\n            CurrentApp = BusinessLogic.DefaultApps.content.ToString();\r\n\r\n        }\r\n\r\n        protected void Page_Load(object sender, EventArgs e)\r\n        {\r\n            Button1.Text = ui.Text(\"update\");\r\n            pane_form.Text = ui.Text(\"notifications\", \"editNotifications\", Server.HtmlEncode(node.Text), base.getUser());\r\n        }\r\n\r\n        #region Web Form Designer generated code\r\n\r\n        protected override void OnInit(EventArgs e)\r\n        {\r\n            //\r\n            // CODEGEN: This call is required by the ASP.NET Web Form Designer.\r\n            //\r\n            InitializeComponent();\r\n            base.OnInit(e);\r\n\r\n            node = new cms.businesslogic.CMSNode(int.Parse(helper.Request(\"id\")));\r\n\r\n            ArrayList actionList = BusinessLogic.Actions.Action.GetAll();\r\n            \r\n            foreach (interfaces.IAction a in actionList)\r\n            {\r\n                if (a.ShowInNotifier)\r\n                {\r\n                   \r\n                    CheckBox c = new CheckBox();\r\n                    c.ID = a.Letter.ToString(CultureInfo.InvariantCulture);\r\n                    \r\n                    if (base.getUser().GetNotifications(node.Path).IndexOf(a.Letter) > -1)\r\n                        c.Checked = true;\r\n\r\n                    uicontrols.PropertyPanel pp = new umbraco.uicontrols.PropertyPanel();\r\n                    pp.CssClass = \"inline\";\r\n                    pp.Text = ui.Text(\"actions\", a.Alias);\r\n                    pp.Controls.Add(c);\r\n\r\n                    pane_form.Controls.Add(pp);\r\n                    \r\n                    actions.Add(c);\r\n                 \r\n                }\r\n            }\r\n          \r\n        }\r\n\r\n        /// <summary>\r\n        /// Required method for Designer support - do not modify\r\n        /// the contents of this method with the code editor.\r\n        /// </summary>\r\n        private void InitializeComponent()\r\n        {\r\n        }\r\n\r\n        #endregion\r\n\r\n        protected void Button1_Click(object sender, EventArgs e)\r\n        {\r\n            string notifications = \"\";\r\n\r\n            // First off - load all users\r\n            foreach (CheckBox c in actions)\r\n            {\r\n                // Update the user with the new permission\r\n                if (c.Checked)\r\n                    notifications += c.ID;\r\n            }\r\n            Notification.UpdateNotifications(base.getUser(), node, notifications);\r\n            getUser().resetNotificationCache();\r\n            base.getUser().initNotifications();\r\n\r\n            var feedback = new umbraco.uicontrols.Feedback();\r\n            feedback.Text = ui.Text(\"notifications\") + \" \" + ui.Text(\"ok\") + \"</p><p><a href='#' class='btn btn-primary' onclick='\" + ClientTools.Scripts.CloseModalWindow() + \"'>\" + ui.Text(\"closeThisWindow\") + \"</a>\";\r\n            feedback.type = umbraco.uicontrols.Feedback.feedbacktype.success;\r\n\r\n            pane_form.Controls.Clear();\r\n            pane_form.Controls.Add(feedback);\r\n\r\n            //pane_form.Visible = false;\r\n            pl_buttons.Visible = false;\r\n        }\r\n    }\r\n}"], "filenames": ["src/Umbraco.Web.UI/umbraco/dialogs/Publish.aspx.cs", "src/Umbraco.Web/umbraco.presentation/umbraco/dialogs/notifications.aspx.cs"], "buggy_code_start_loc": [33, 30], "buggy_code_end_loc": [34, 31], "fixing_code_start_loc": [33, 30], "fixing_code_end_loc": [34, 31], "type": "CWE-79", "message": "Cross-site scripting (XSS) vulnerability in Umbraco CMS before 7.7.3 allows remote attackers to inject arbitrary web script or HTML via the \"page name\" (aka nodename) parameter during the creation of a new page, related to Umbraco.Web.UI/umbraco/dialogs/Publish.aspx.cs and Umbraco.Web/umbraco.presentation/umbraco/dialogs/notifications.aspx.cs.", "other": {"cve": {"id": "CVE-2017-15279", "sourceIdentifier": "cve@mitre.org", "published": "2017-10-12T08:29:00.430", "lastModified": "2017-10-25T12:53:55.703", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site scripting (XSS) vulnerability in Umbraco CMS before 7.7.3 allows remote attackers to inject arbitrary web script or HTML via the \"page name\" (aka nodename) parameter during the creation of a new page, related to Umbraco.Web.UI/umbraco/dialogs/Publish.aspx.cs and Umbraco.Web/umbraco.presentation/umbraco/dialogs/notifications.aspx.cs."}, {"lang": "es", "value": "Vulnerabilidad Cross-Site Scripting (XSS) en Umbraco CMS en versiones anteriores a la 7.7.3 permite que atacantes remotos inyecten scripts web o HTML arbitrarios mediante el par\u00e1metro \"page name\" (tambi\u00e9n conocido como nodename) durante la creaci\u00f3n de una nueva p\u00e1gina. Esto est\u00e1 relacionado con Umbraco.Web.UI/umbraco/dialogs/Publish.aspx.cs y Umbraco.Web/umbraco.presentation/umbraco/dialogs/notifications.aspx.cs."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:umbraco:umbraco_cms:*:*:*:*:*:*:*:*", "versionEndIncluding": "7.7.2", "matchCriteriaId": "ED6DB680-A447-45E3-9DA7-F1B4FB25C557"}]}]}], "references": [{"url": "http://issues.umbraco.org/issue/U4-10497", "source": "cve@mitre.org", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://github.com/umbraco/Umbraco-CMS/commit/fe2b86b681455ac975b294652064b2718d4e2ba2", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/umbraco/Umbraco-CMS/commit/fe2b86b681455ac975b294652064b2718d4e2ba2"}}