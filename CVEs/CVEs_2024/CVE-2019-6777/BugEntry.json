{"buggy_code": ["<?php\n//\n// ZoneMinder web zone view file, $Date$, $Revision$\n// Copyright (C) 2001-2008 Philip Coombes\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n//\n\n\nif ( !canView( 'Monitors' ) )\n{\n    $view = \"error\";\n    return;\n}\n\n$mid = validInt($_REQUEST['mid']);\n$zid = !empty($_REQUEST['zid'])?validInt($_REQUEST['zid']):0;\n\n\nif ( $zid > 0 ) {\n   $newZone = dbFetchOne( 'SELECT * FROM Zones WHERE MonitorId = ? AND Id = ?', NULL, array( $mid, $zid) );\n} else {\n   $view = \"error\";\n   return;\n}\n$monitor = dbFetchMonitor ( $mid );\n$plugin = $_REQUEST['pl'];\n\n$plugin_path = dirname(ZM_PLUGINS_CONFIG_PATH).\"/\".$plugin;\n\n$focusWindow = true;\n\nxhtmlHeaders(__FILE__, translate('Plugin') );\n\n\n$pluginOptions=array(\n    'Enabled'=>array(\n          'Type'=>'select',\n          'Name'=>'Enabled',\n          'Choices'=>'yes,no',\n          'Value'=>'no'\n          )\n     );\n\n$optionNames=array();\nif(file_exists($plugin_path.\"/config.php\"))\n{\n   include_once($plugin_path.\"/config.php\");\n} \n\n$sql='SELECT * FROM PluginsConfig WHERE MonitorId=? AND ZoneId=? AND pluginName=?';\nforeach( dbFetchAll( $sql, NULL, array( $mid, $zid, $plugin ) ) as $popt )\n{\n   if(array_key_exists($popt['Name'], $pluginOptions) \n      && $popt['Type']==$pluginOptions[$popt['Name']]['Type']\n      && $popt['Choices']==$pluginOptions[$popt['Name']]['Choices']\n      )\n   {\n      $pluginOptions[$popt['Name']]=$popt;\n      array_push($optionNames, $popt['Name']);\n   } else {\n      dbQuery('DELETE FROM PluginsConfig WHERE Id=?', array( $popt['Id'] ) );\n   }\n}\nforeach($pluginOptions as $name => $values)\n{\n   if(!in_array($name, $optionNames))\n   {\n      $popt=$pluginOptions[$name];\n      $sql=\"INSERT INTO PluginsConfig VALUES ('',?,?,?,?,?,?,?)\";\n      dbQuery($sql, array( $popt['Name'], $popt['Value'], $popt['Type'], $popt['Choices'], $mid, $zid, $plugin ) );\n   }\n}\n\n$PLANG=array();\nif(file_exists($plugin_path.\"/lang/\".$user['Language'].\".php\")) {\n   include_once($plugin_path.\"/lang/\".$user['Language'].\".php\");\n}\n\nfunction pLang($name)\n{\n   global $PLANG;\n   if(array_key_exists($name, $PLANG))\n      return $PLANG[$name];\n   else\n      return $name;\n}\n\n\n?>\n<body>\n  <div id=\"page\">\n    <div id=\"header\">\n      <h2><?php echo translate('Monitor') ?> <?php echo $monitor['Name'] ?> - <?php echo translate('Zone') ?> <?php echo $newZone['Name'] ?> - <?php echo translate('Plugin') ?> <?php echo $plugin ?></h2>\n    </div>\n    <div id=\"content\">\n      <form name=\"pluginForm\" id=\"pluginForm\" method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF'] ?>\">\n        <input type=\"hidden\" name=\"view\" value=\"<?php echo $view ?>\"/>\n        <input type=\"hidden\" name=\"action\" value=\"plugin\"/>\n        <input type=\"hidden\" name=\"mid\" value=\"<?php echo $mid ?>\"/>\n        <input type=\"hidden\" name=\"zid\" value=\"<?php echo $zid ?>\"/>\n        <input type=\"hidden\" name=\"pl\" value=\"<?php echo $plugin ?>\"/>\n\n        <div id=\"settingsPanel\">\n          <table id=\"pluginSettings\" cellspacing=\"0\">\n            <tbody>\n<?php\nforeach($pluginOptions as $name => $popt)\n{\n   ?>\n            <tr><th scope=\"row\"><?php echo pLang($name) ?></th>     \n   <?php\n   switch($popt['Type'])\n   {\n      case \"checkbox\":\n         echo \"CHECKBOX\";\n         break;\n      case \"select\":\n         $pchoices=explode(',',$popt['Choices']);\n            ?>\n               <td colspan=\"2\">\n                  <select name=\"pluginOpt[<?php echo $popt['Name'] ?>]\" id=\"pluginOpt[<?php echo $popt['Name'] ?>]\">\n            <?php\n            foreach($pchoices as $pchoice)\n            {\n               $psel=\"\";\n               if($popt['Value']==$pchoice)\n                  $psel=\"selected\";\n               ?>\n                     <option value=\"<?php echo $pchoice ?>\" <?php echo $psel ?>><?php echo pLang($pchoice) ?></option>\n               <?php\n            }\n            ?>\n               </td>\n                  </select>\n         <?php\n         break;\n      case \"text\":\n      default:\n         echo \"DEFAULT\";\n   }\n   ?>\n            </tr>\n   <?php\n}\n?>\n            </tbody>\n          </table>\n          <input type=\"submit\" id=\"submitBtn\" name=\"submitBtn\" value=\"<?php echo translate('Save') ?>\" onclick=\"return saveChanges( this )\"<?php if (!canEdit( 'Monitors' ) || (false && $selfIntersecting)) { ?> disabled=\"disabled\"<?php } ?>/>\n          <input type=\"button\" value=\"<?php echo translate('Cancel') ?>\" data-on-click=\"closeWindow\"/>\n        </div>\n      </form>\n    </div>\n  </div>\n</body>\n</html>\n"], "fixing_code": ["<?php\n//\n// ZoneMinder web zone view file, $Date$, $Revision$\n// Copyright (C) 2001-2008 Philip Coombes\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n//\n\n\nif ( !canView( 'Monitors' ) )\n{\n    $view = \"error\";\n    return;\n}\n\n$mid = validInt($_REQUEST['mid']);\n$zid = !empty($_REQUEST['zid'])?validInt($_REQUEST['zid']):0;\n\n\nif ( $zid > 0 ) {\n   $newZone = dbFetchOne( 'SELECT * FROM Zones WHERE MonitorId = ? AND Id = ?', NULL, array( $mid, $zid) );\n} else {\n   $view = \"error\";\n   return;\n}\n$monitor = dbFetchMonitor ( $mid );\n// Only allow certain filename characters (not including a period) to prevent directory traversal.\n$plugin = preg_replace('/[^-a-zA-Z0-9]/', '', $_REQUEST['pl']);\n\n$plugin_path = dirname(ZM_PLUGINS_CONFIG_PATH).\"/\".$plugin;\n\n$focusWindow = true;\n\nxhtmlHeaders(__FILE__, translate('Plugin') );\n\n\n$pluginOptions=array(\n    'Enabled'=>array(\n          'Type'=>'select',\n          'Name'=>'Enabled',\n          'Choices'=>'yes,no',\n          'Value'=>'no'\n          )\n     );\n\n$optionNames=array();\nif(file_exists($plugin_path.\"/config.php\"))\n{\n   include_once($plugin_path.\"/config.php\");\n} \n\n$sql='SELECT * FROM PluginsConfig WHERE MonitorId=? AND ZoneId=? AND pluginName=?';\nforeach( dbFetchAll( $sql, NULL, array( $mid, $zid, $plugin ) ) as $popt )\n{\n   if(array_key_exists($popt['Name'], $pluginOptions) \n      && $popt['Type']==$pluginOptions[$popt['Name']]['Type']\n      && $popt['Choices']==$pluginOptions[$popt['Name']]['Choices']\n      )\n   {\n      $pluginOptions[$popt['Name']]=$popt;\n      array_push($optionNames, $popt['Name']);\n   } else {\n      dbQuery('DELETE FROM PluginsConfig WHERE Id=?', array( $popt['Id'] ) );\n   }\n}\nforeach($pluginOptions as $name => $values)\n{\n   if(!in_array($name, $optionNames))\n   {\n      $popt=$pluginOptions[$name];\n      $sql=\"INSERT INTO PluginsConfig VALUES ('',?,?,?,?,?,?,?)\";\n      dbQuery($sql, array( $popt['Name'], $popt['Value'], $popt['Type'], $popt['Choices'], $mid, $zid, $plugin ) );\n   }\n}\n\n$PLANG=array();\nif(file_exists($plugin_path.\"/lang/\".$user['Language'].\".php\")) {\n   include_once($plugin_path.\"/lang/\".$user['Language'].\".php\");\n}\n\nfunction pLang($name)\n{\n   global $PLANG;\n   if(array_key_exists($name, $PLANG))\n      return $PLANG[$name];\n   else\n      return $name;\n}\n\n\n?>\n<body>\n  <div id=\"page\">\n    <div id=\"header\">\n      <h2><?php echo translate('Monitor') ?> <?php echo $monitor['Name'] ?> - <?php echo translate('Zone') ?> <?php echo $newZone['Name'] ?> - <?php echo translate('Plugin') ?> <?php echo validHtmlStr($plugin) ?></h2>\n    </div>\n    <div id=\"content\">\n      <form name=\"pluginForm\" id=\"pluginForm\" method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF'] ?>\">\n        <input type=\"hidden\" name=\"view\" value=\"<?php echo $view ?>\"/>\n        <input type=\"hidden\" name=\"action\" value=\"plugin\"/>\n        <input type=\"hidden\" name=\"mid\" value=\"<?php echo $mid ?>\"/>\n        <input type=\"hidden\" name=\"zid\" value=\"<?php echo $zid ?>\"/>\n        <input type=\"hidden\" name=\"pl\" value=\"<?php echo validHtmlStr($plugin) ?>\"/>\n\n        <div id=\"settingsPanel\">\n          <table id=\"pluginSettings\" cellspacing=\"0\">\n            <tbody>\n<?php\nforeach($pluginOptions as $name => $popt)\n{\n   ?>\n            <tr><th scope=\"row\"><?php echo pLang($name) ?></th>     \n   <?php\n   switch($popt['Type'])\n   {\n      case \"checkbox\":\n         echo \"CHECKBOX\";\n         break;\n      case \"select\":\n         $pchoices=explode(',',$popt['Choices']);\n            ?>\n               <td colspan=\"2\">\n                  <select name=\"pluginOpt[<?php echo $popt['Name'] ?>]\" id=\"pluginOpt[<?php echo $popt['Name'] ?>]\">\n            <?php\n            foreach($pchoices as $pchoice)\n            {\n               $psel=\"\";\n               if($popt['Value']==$pchoice)\n                  $psel=\"selected\";\n               ?>\n                     <option value=\"<?php echo $pchoice ?>\" <?php echo $psel ?>><?php echo pLang($pchoice) ?></option>\n               <?php\n            }\n            ?>\n               </td>\n                  </select>\n         <?php\n         break;\n      case \"text\":\n      default:\n         echo \"DEFAULT\";\n   }\n   ?>\n            </tr>\n   <?php\n}\n?>\n            </tbody>\n          </table>\n          <input type=\"submit\" id=\"submitBtn\" name=\"submitBtn\" value=\"<?php echo translate('Save') ?>\" onclick=\"return saveChanges( this )\"<?php if (!canEdit( 'Monitors' ) || (false && $selfIntersecting)) { ?> disabled=\"disabled\"<?php } ?>/>\n          <input type=\"button\" value=\"<?php echo translate('Cancel') ?>\" data-on-click=\"closeWindow\"/>\n        </div>\n      </form>\n    </div>\n  </div>\n</body>\n</html>\n"], "filenames": ["web/skins/classic/views/plugin.php"], "buggy_code_start_loc": [39], "buggy_code_end_loc": [115], "fixing_code_start_loc": [39], "fixing_code_end_loc": [116], "type": "CWE-79", "message": "An issue was discovered in ZoneMinder v1.32.3. Reflected XSS exists in web/skins/classic/views/plugin.php via the zm/index.php?view=plugin pl parameter.", "other": {"cve": {"id": "CVE-2019-6777", "sourceIdentifier": "cve@mitre.org", "published": "2019-01-24T15:29:01.017", "lastModified": "2019-01-24T20:14:50.837", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "An issue was discovered in ZoneMinder v1.32.3. Reflected XSS exists in web/skins/classic/views/plugin.php via the zm/index.php?view=plugin pl parameter."}, {"lang": "es", "value": "Se ha descubierto un problema en ZoneMinder v1.32.3. Existe Cross-Site Scripting (XSS) reflejado en web/skins/classic/views/plugin.php mediante el par\u00e1metro \"pl\" en zm/index.php?view=plugin."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:zoneminder:zoneminder:1.32.3:*:*:*:*:*:*:*", "matchCriteriaId": "E5A2481D-4A45-48A2-B7DE-86C7D161F6EA"}]}]}], "references": [{"url": "https://github.com/ZoneMinder/zoneminder/issues/2436", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Third Party Advisory"]}, {"url": "https://github.com/mnoorenberghe/ZoneMinder/commit/59cc65411f02c7e39a270fda3ecb4966d7b48d41", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/mnoorenberghe/ZoneMinder/commit/59cc65411f02c7e39a270fda3ecb4966d7b48d41"}}