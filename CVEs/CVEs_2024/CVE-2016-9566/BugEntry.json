{"buggy_code": ["########################\nNagios Core 4 Change Log\n########################\n\n\n4.2.3 - 2016-11-21\n-------------------\nSECURITY FIXES\n* Fixed a root privilege escalation (CVE-2016-8641) (John Frickson)\n\nFIXES\n* external command during reload doesn't work (John Frickson)\n* Nagios provides no error condition as to why it fails on the verify for serviceescalation (John Frickson)\n* No root group in FreeBSD and Apple OS X (John Frickson)\n* jsonquery.html doesn't display scheduled_time_ok correctly (John Frickson)\n* daemon_dumps_core=1 has no effect on Linux when Nagios started as root (John Frickson)\n* Configuration check in hostgroup - misspelled hostname does not error (John Frickson)\n* contacts or contact_groups directive with no value should not be allowed (John Frickson)\n* Compile 64-bit on SPARC produces LD error (John Frickson)\n* HOSTSTATEID returns 0 even if host does not exist (John Frickson)\n* Submitting UNREACHABLE passive result for host sets it as DOWN if the host has no parents (John Frickson)\n* nagios: job XX (pid=YY): read() returned error 11 (changed from LOG_ERR to LOG_NOTICE) (John Frickson)\n* Fix for quick search not showing services if wildcard used (John Frickson)\n\n\n4.2.2 - 2016-10-24\n------------------\nSECURITY FIXES\n* There was a fix to vulnerability CVE-2008-4796 in the 4.2.0 release on\n  August 1, 2016. The fix was apparently incomplete, as there was still a\n  problem. However, we are now getting all RSS feeds using AJAX calls\n  instead of the (outdated) MagpieRSS package. Thanks for bringing this to\n  our attention go to Dawid Golunski (http://legalhackers.com).\n\nENHANCEMENTS\n* Update status.c to display passive check icon for hosts when passive checks\n\tare enabled and actives disabled (John Frickson)\n\nFIXES\n* Fix permissions for Host Groups reports (status.cgi) (Patrik Halfar)\n* Service Parents does not appear to be functioning as intended (lev)\n* Availability report mixes up scheduled and unscheduled warning percentages (Helmut Mikulcik)\n* Invalid values for saved_stamp in comput_subject_downtime_times() (John Frickson)\n* Remove deprecated \"framespacing\" (John Frickson)\n* The nagios tarball contains two identical jquery copies (John Frickson)\n* extinfo.cgi does not set content-type (most cgi's don't) (John Frickson)\n* Timeperiods are corrupted by external command CHANGE_SVC_CHECK_TIMEPERIOD (xoubih)\n* Quick search doesn't show hosts without services (service status detail page) (John Frickson)\n* In host/services details view, if exactly 100 entries would not show last one (John Frickson)\n* nagios host URL parameter for NEW map doesn`t work - Network Map for All Hosts (John Frickson)\n* next_problem_id is improperly initialized (gherteg)\n* Passive problems not showing as \"unhandled\" (John Frickson)\n* September reported as Sept instead of Sep (Rostislav Opo\u010densk\u00fd)\n* Notifications are not sent for active alerts after scheduled downtime ends (John Frickson)\n* Nagios 4.2.0 not working on Solaris (John Frickson)\n* install-exfoliation and install-classicui don't work FreeBSD and Mac OS X (John Frickson)\n* Updated makefile to delete some no-longer-needed files (John Frickson)\n\n\n4.2.1 - 2016-09-06\n------------------\nFIXES\n* Fix undefined variable php error (John Frickson)\n* Links on the sidebar menu under 'Problems' are indented too far (John Frickson)\n* Using $ARGn$ Macros in perfdata (John Frickson)\n* using a wildcard in search returns service status total all zero's (John Frickson)\n* read_only does not take priority (deppy)\n* Running nagios -v on 4.2.0 takes 90+ seconds (John Frickson)\n* Bare \"make\" invoked in subtarget (mjo)\n* Theme images/stylesheets installed with inconsistent permissions (mjo / John Frickson)\n* Missing Image for Host and Service State Trends in Availability Report (nichokap / John Frickson)\n* Maintain non-persistent comments through reload (John Frickson)\n* Servicegroup availability report ignores includesoftstates in service report links (PriceChild)\n* error: format not a string literal and no format arguments (Karsten Weiss)\n* Synced config.guess and config.sub with GNU (Zakhar Kleyman)\n\n\n4.2.0 - 2016-08-01\n------------------\nSECURITY FIXES\n* Fixed vulnerability CVE-2008-4796 (John Frickson)\n* Fixed vulnerability CVE-2013-4214 (John Frickson)\n* web interface vulnerable to Cross-Site Request Forgery attacks (John Frickson)\n\nENHANCEMENTS\n* Increase socket queue length for listen()\n* Added host name to the website page title (leres / John Frickson)\n* Added additional icons for NetBSD and SuSE (John Frickson)\n* The new Status Map will now use cgi.cfg options (John Frickson)\n    default_statusmap_layout will default to \"6\" for the new map\n* The new Status Map will now show some valid values in the popup for \"Nagios Process\" (John Frickson)\n\nFIXES\n* Network outage view without access to all hosts (John Frickson)\n* Core workers looping (John Frickson)\n* service query returns duplicate host_name and description fields in the returned data (John Frickson)\n* HTML output of plug-ins is parsed in wrong way => webgui unusable (John Frickson)\n* Command worker fails to handle SIGPIPE\n* \"View Status\" links under \"Map\" broken in Nagios Core Version 4.1.1 (John Frickson)\n* Can't send big buffer - wproc: Core Worker seems to be choked (velripn / John Frickson)\n* Too big CPU load on FreeBSD and other systems using poll() interface (cejkar)\n* Flexible downtime recorded as unscheduled downtime (John Frickson)\n* Service Flexible downtimes produce 1 notification before entering (John Frickson)\n* Once you \"set flap_detection_enabled 0\" it should remove flapping state from the host/services page (John Frickson)\n* New map doesn't finish loading if a logo image is not found (John Frickson)\n* Extraneous Div end tag in map.html (Scott Wilkerson)\n* Issue with \"Problems\" section (John Frickson)\n* Status Map icons and online/offline status dots disappear in IE11 (John Frickson)\n* New network map overlays the nagios process with objects (John Frickson)\n* Added Default-Start and Default-Stop to the init script (John Frickson)\n* Compile / logging issues with BSD 6\n* Related to above, Fixed a lot of incorrectly handled time_t's in *printf's (John Frickson)\n* New map not working for RU locale (actually, most locales) (John Frickson)\n* Replaced all instances of signal() with sigaction() + blocking (John Frickson)\n* UTF-8 characters like german \u00e4 are not processed properly by function url_encode (John Frickson)\n* nagios worker processes can hog CPU (huxley / John Frickson)\n* custom time periods that include special characters were not being handled in reports (John Frickson)\n* Fixed init script to wait up to 90 seconds then kill the nagios process (John Frickson)\n* No Host Groups results in wrong error message (John Frickson)\n* Setup Nagios users to view specific host is not working in the new network map (John Frickson)\n* statusjson.cgi fails glibc realloc truncate response output (John Frickson)\n* Report Time Period does not work if an @ character is in the timeperiod name (John Frickson)\n* State History does not use actual plugin long_output (John Frickson)\n* Time period corruption (xoubih)\n* Tactical Overview - Disabled Flap Detection Link (John Frickson)\n\n4.1.1 - 08/19/2015\n------------------\nFIXES\n* CGI Could not read object configuration data (broken by error in 4.1.0)\n* exclude (!) not working (broken by mis-applied fix for 4.1.0)\n\n\n4.1.0 - 08/18/2015\n------------------\nENHANCEMENTS\n* Promoted JSON CGIs to released status (Eric Stanley)\n* New graphical CGI displays: statusmap, trends, histogram (Eric Stanley)\n* Make sticky status for acks and comments configurable enhancement #20 (Trevor McDonald / Scott Wilkerson)\n* Add host_down_disable_service_checks directive to nagios.cfg #44 (Trevor McDonald / Scott Wilkerson)\n* httpd.conf doesn't support Apache versions > 2.3 (DanielB / John Frickson)\n\nFIXES\n* Fix for not all service dependencies created (John Frickson)\n* Fix SIGSEGV with empty custom variable (orbis / John Frickson)\n* Fix contact macros in environment variables (dvoryanchikov)\n* Fixed host's current attempt goes to 1 after going to hard state (John Frickson)\n* Fixed two bugs/problems: Replace use of %zd in base/utils.c & incorrect va_start() in cgi/jsonutils.c (Peter Eriksson)\n* Fixed: Let remove_specialized actually remove all workers (Phil Mayers)\n* Fixed log file spam caused when using perfdata command directives in nagios.cfg (shashikanthbussa)\n* Fixed off-by-one error in bounds check leads to segfault (Phil Mayers)\n* Added links for legacy graphical displays (Eric Stanley)\n* Update embedded URL's to https versions of Nagios websites (scottwilkerson)\n* Fixed doxygen comments to work with latest doxygen 1.8.9.1 #30 (Trevor McDonald)\n* Fixed makefile target \"html\" to PHONY to fix GitHub issue #28 (Trevor McDonald)\n* Fixed typo as per GitHub issue #27 (Trevor McDonald)\n* Fixed jsonquery.php 404 not found error, and disabled Send Query button until form populates #43 (Scott Wilkerson)\n* Fixed linking in Tactical Overview for several of the Host entries in Featured section #48 (Scott Wilkerson)\n* Fixed passing limit and sort options to pagination and sort links #42 (Scott Wilkerson)\n* Added form field for icon URL and clean-up when it changes in CGI Status Map. (Eric Stanley)\n* Added options to cgi.cfg to uncheck sticky and send when acknowledging a problem (Trevor McDonald)\n* Low impact changes to automate the generation of RPMs from nagios.spec file. (T.J. Yang)\n* Update index.php (Trevor McDonald)\n* Fixed escaping of corewindow parameter to account for possible XSS injection (Scott Wilkerson)\n* Typo correction (T.J. Yang)\n* Make getCoreStatus respect cgi_base_url (Moritz Schlarb)\n* Adjusted map layout to work within frames (Eric Stanley)\n* Fixed map displays are now the full size of browser window (Eric Stanley)\n* Fixed labels and icons on circular markup no longer scale on zoom (Eric Stanley)\n* Got all maps except circular markup working with icons (Eric Stanley)\n* Fixes to make legacy CGIs work again. (Eric Stanley)\n* Fixes to make all/html target tolerant of being run multiple times (Eric Stanley)\n* For user-supplied maps, converted node group to have transform (Eric Stanley)\n* Fixed issue transitioning from circular markup map to other maps (Eric Stanley)\n* Fix displayForm to trigger on the buttom press (Scott Wilkerson)\n* Fix fo getBBox crash on Firefox (Eric Stanley)\n* Fixed map now resets zoom when form apply()'d (Eric Stanley)\n* Fixed so close box on dialogs actually closes dialog (Eric Stanley)\n* Corrected directive in trends display (Eric Stanley)\n* Fixed minor issue with link in trends linkes (Eric Stanley)\n* Fixed issue with map displaying on Firefox (Eric Stanley)\n* Added exclusions for ctags generation (Eric Stanley)\n* Update map-popup.html (Scott Wilkerson)\n* Initial commit of new graphical CGIs (Eric Stanley)\n* Fixed Github bug #18 - archivejson.cgi returns wrong host for state change query (Eric Stanley)\n* Status JSON: Added next_check to service details (Eric Stanley)\n* Fixed escaping of keys for scalar values in JSON CGIs (Eric Stanley)\n* build: Include <sys/loadavg.h> if it exists. (Eric J. Mislivec)\n* lib-tests: test-io{cache|broker} need -lsocket to link. (Eric J. Mislivec)\n* lib-tests: test-runcmd assumes GNU echo. (Eric J. Mislivec)\n* lib-tests: Signal handlers don't return int on most platforms, and using a cast was the wrong way to resolve this. (Eric J. Mislivec)\n* Fix some type/format mismatch warnings for pid_t. (Eric J. Mislivec)\n* Fix build on Solaris. (Eric J. Mislivec)\n* runcmd: Fix build when we don't HAVE_SETENV. (Eric J. Mislivec)\n* Fixed checkresult output processing (Eric Mislivec)\n* Corrected escaping of long output macros (Eric Mislivec)\n* Fixed null pointer dereferences in archive JSON (Eric Stanley)\n* Fixed memory overwrite issue in JSON string escaping (Eric Stanley)\n* JSON CGI: Now escaping object and array keys (Eric Stanley)\n\nKNOWN ISSUES\n* New map does not account for multiple parents, leaving \"legacy\" map as an option in the menu\n\n4.0.8 - 08/12/2014\n------------------\nENHANCEMENTS\n* Removed 8 kB string size limitation in JSON CGIs (Eric Stanley)\n* Re-implemented auto-rescheduling of checks (Eric Mislivec)\n* Avoid bunching of checks delayed due to timeperiod constraints (Eric Stanley)\n* Limit the number of autocalculated core workers to not spawn too many on large systems (Eric Mislivec, Janice Singh)\n\nFIXES\n* Removed quotes from numeric duration values in JSON CGIs (Eric Stanley)\n* Fixed escaping in JSON CGIs so all required characters are escaped, and in the correct order (Eric Stanley)\n* Fixed segfault in archive JSON CGI when plugin output was empty (Eric Stanley)\n* Fixed several possibilities for buffer overflow (Eric Mislivec, Dirkjan Bussink)\n* Fixed Tracker #582, #626: Handle VAR=VAL assignments at the start of simple commands (Eric Mislivec, Phil Randal)\n* Fixed Tracker #630: Recognize '<' and '>' as redirection operators (Eric Mislivec)\n* Corrected worker communication protocol documentation (Phil Mayers)\n* Fixed init script to leave config test log in a better location, let sysconfig override init script variables, and not remove nagios.cmd when attempting to start with another instance running (Eric Mislivec, Robin Kearney)\n* Fixed Tracker #361: Downtime notifications not displayed properly (Andrew Widdersheim)\n\n4.0.7 - 06/03/2014\n------------------\nENHANCEMENTS\n* Added value of custom variables to Object JSON output for hosts, services and contacts (Eric Stanley)\n\nFIXES\n* Fixed bug #616: Unescape plugin output read from checkresult files, fix multiline perf data concatenation, and avoid extra memory allocation and copies. (Eric Mislivec)\n* Fixed bug #609: Image on home page doesn't have correct image path prefix. (Derek Brewer)\n* Fixed bug #608: Extra newline in service check timeout output string. (Mauno Pihelgas)\n* Fixed bug #596: Crashes checking contact authorization for host escalations. (Alexey Dvoryanchikov - duplicates #590, #586)\n* Fixed bug #496: Syntax error in exfoliation's common.css. (Karsten Weiss)\n\n4.0.6 - 04/29/2014\n------------------\nENHANCEMENTS\n* Added name of authenticated user to JSON CGI results object (Eric Stanley)\n* Added Nagios Core version to the Status JSON CGI programstatus query (Eric Stanley)\n* Added daemon status to main page (Eric Mislivec)\n\nFIXES\n* Fixed bug #600: Service Check Timeout State always returns OK (0) status (Mauno Pihelgas, Eric Stanley)\n* Fixed bug #583: Status Check Output of (No output on stdout) stderr: (Eric\nStanley - duplicate of bug #573)\n* Fixed bug #573: Service checks returns (No output on stdout) stderr (Eric Stanley)\n* Fixed bug #438: Reloads during downtime causes wrong availability calculations (Eric Stanley)\n* Fixed feed updates when daemon can not access external networks (Eric Mislivec)\n* Archive JSON: Fixed bugs calculating availability (Eric Stanley)\n* Archive JSON: Allow missing logs to be skipped (Eric Stanley)\n\n4.0.5 - 04/11/2014\n------------------\n* Fixed bug #595: Nagios 4 security fix (Alexey Dvoryanchikov, Eric Stanley)\n* Fixed bug #594: Nagios 4 fix contactgroups parsing (Alexey Dvoryanchikov, Eric Stanley)\n* Fixed bug #577: Nagios 4 checks stalled when write to socket failed (Alexey Dvoryanchikov)\n* Fixed bug #580: Nagios 4 memory leak (Eric Stanley)\n* Fixed init script to remove the switching of users when performing configuration verification which was causing failures if nagios user was set to nologin (Scott Wilkerson)\n* Fixed auto creation of RAMDISK via environment variables in init script to properly check existence using $RAMDISK_DIR environment variable. (Scott Wilkerson)\n* Fixed unreferenced variable NagiosVarDir in daemon-init (Eric Mislivec)\n* Fixed bug where audio alerts wouldn't work with a 0 height and width - https://support.nagios.com/forum/viewtopic.php?t=26387 (Scott Wilkerson)\n\n4.0.4 - 03/14/2014\n------------------\nENHANCEMENTS\n* JSON CGIs moved to beta status (Eric Stanley)\n\nFIXES\n* Fixed bug #491,#553: Rebuilt the daemon-init scripts back to something that should work on all systems (Scott Wilkerson)\n\n\n4.0.3 - 02/28/2014\n------------------\nENHANCEMENTS\n* Aliased hourly_value to importance and minimum_value to minimum_importance and deprecated the former (Eric Stanley)\n* Added host and service importance macros (Eric Stanley)\n* Added notifications on flexible downtime expiration (Dan Wittenberg)\n\nFIXES\n* Bug #548: Temporary fix that rejects all external command during restart to prevent Core from crashing (Eric Stanley)\n* Corrected calculation of host importance and importance defaults (Eric Stanley)\n* Fixed bug #498: Nagios 4 enable_environment_macros=1 not working (Eric Stanley, Alexey Dvoryanchikov)\n* No longer checks whether logs can be written when verifying configuration (Eric Stanley)\n* Fixed CGI bug where the CGI could read past the end of the list of CGI variables, potentially crashing the CGI (Scott Wilkerson)\n* Fixed inheritance of hourly_value from host and service templates (Scott Wilkerson)\n* Fixed bug #502: 4.0.0: Configuration -> Service Escalations = incomplete list (Eric Stanley)\n* Fixed bug #523: quotes and double quotes in plugin message are converted to HTML escapes in Nagios 4.0 (duplicate of bug #524)\n* Fixed bug #524: URLs returned in plugin check results are not correctly displayed (Eric Stanley)\n* Fixed bug where passive service checks would return \"Service check timed out after 0.00 seconds\" (Scott Wilkerson)\n\n4.0.2 - 11/25/2013\n------------------\nFIXES\n* Fixed bug 528: Nagios 4.0.1: Logrotation: Only current host- and servicestates saved in rotated logfiles (duplicate of 507)\n* Fixed bug 507: Nagios 4.0.0 - Problem during log rotate (Stefano Ghelfi)\n* Fixed bug 530: RPM spec file sets wrong permissions on plugins directory (duplicate of bug 494)\n* Fixed bug 494: nagios.spec fixes (with patch) (Karsten Weiss)\n* Fixed bug 515: Segsegv after starting up nagios (duplicate of bug 526)\n* Fixed bug 513: Crash while entering downtime for service (duplicate of bug 526)\n* Fixed bug 529: Core Worker failed to reap child in 4.0.1 Description\n* Fixed bug 514: scheduled downtime not showing in web interface (Eric Stanley)\n* Fixed bug 526: sort_downtime() corrupts scheduled_downtime_list causing segfault (Adam James)\n* Fixed bug 492: Nagios 4 fails to remove/add checks upon reload (Eric Stanley)\n* Fixed Bug 484: Beta4.0.0b4 service checks returning (No output on stdout) (Eric Stanley)\n* Fixed Bug 470: statusmap doesn't display info (Cameron Moore)\n* Fixed Bug 499: Security issue in daemon-init.in, function check_config (T\u00f3mas Edwardsson)\n\n4.0.1 - 10/15/2013\n------------------\nENHANCEMENTS\n* Added compiler flags in RPM spec file to reduce compiler noise (Dan Wittenberg)\n* Added logging of failure in dlclose() call (Anton Lofgren)\n* Added a simple query handler interface, nagios-qh.rb (Dan Wittenberg)\n* Multiple code simplifications, additional error handling in downtime code (Andreas Ericsson)\n\nFIXES\n* Reverted commit f99a9a7b which set check_interval to 1 if it was configured as zero.\n* Corrected order of arguments when logging unknown hosts/services (Scott Wilkerson)\n* Downtime initialized before retention data read (Eric Stanley)\n* Patches to make RPM build again (Dan Wittenberg)\n* Ensure that scheduled_downtime_depth never drops below zero (Andreas Ericsson)\n\n4.0.0 - 09/20/2013\n------------------\nSee http://nagios.sourceforge.net/docs/nagioscore/4/en/whatsnew.html for a\nlist of the changes in Nagios Core 4\n", "=======\nTHANKS!\n=======\n\nThe success of Nagios has been due to the fantastic community members that\nsupport it and provide bug reports, patches, and great ideas.  Here are a\nfew of the many members that have contributed to Nagios in various ways\nsince 1999.  If I missed your name, misspelled it or otherwise got it\nwrong, please let me know.\n\n* Adam Bowen\n* Ahmon Dancy\n* Alain Radix\n* Albrecht Dress\n* Alessandro Ren\n* Alex Peeters\n* Alexios Chouhoulas\n* Allan Clark\n* Alok Dubey\n* Aman Gupta\n* Amir Rosenblatt\n* Anders K. Lindgren\n* Andreas Ericsson\n* Andreas Kirchwitz\n* Andrew Kaplan\n* Andrew Widdersheim\n* Andy Finkenstadt\n* Andy Shellam\n* Anton Lofgren\n* Ari Edelkind\n* Armin Wolfermann\n* Arne Hinrichsen\n* Badri Pillai\n* Bastian Friedrich\n* Ben Bell\n* Ben Heavner\n* Bernard Li\n* Bernd Arnold\n* Bill Pier\n* Bo Kersey\n* Bob (Netshell)\n* Bob Rentschler\n* Bogdan Sandu\n* Brad Werschler\n* Brandon Knitter\n* Brian Riggs\n* Brian Seklecki\n* Burkhard Klaus\n* Carlos Velasco\n* Cary Petterborg\n* Charlie Cook\n* Chris Bensend\n* Chris Kolquist\n* Chris Rothecker\n* Chris Witterholt\n* Christian Masopust\n* Christian Mies\n* Christoph Biedl\n* Christoph Kron\n* Christoph Maser\n* Cliff Woolley\n* Dan Gailey\n* Daniel Burke\n* Daniel Koffler\n* Daniel Pouzzner\n* Daniel Wittenberg\n* Darren Gamble\n* Dave Viner\n* David Allan\n* David Kmoch\n* David Schlecht\n* David Tilloy\n* Dean Lane\n* Denis Seleznyov\n* Dennis Biringer\n* Derrick Bennett\n* Devin Bayer\n* Dietmar Rieder\n* Dirkjan Bussink\n* Don Carroll\n* Duncan Ferguson\n* Eirik Robertstad\n* Emanuel Massano\n* Ernst-Deiter Martin\n* Erwan Arzur\n* Esteban Manchado Velazquez\n* Evan Winter\n* Felipe Almeida\n* Florian Weimer\n* Fran Boon\n* Franky Van Liedekerke\n* Frederic Schaer\n* Garry Cook\n* Gary Berger\n* Gary Miller\n* Gavin Adams\n* Geert Vanderkelen\n* Gennaro Tortone\n* Geoff Montee\n* Gerd Mueller\n* Gerhard Lausser\n* gherteg\n* Glenn Thompson\n* Gordon Messmer\n* Gordon Smith\n* Grant Byers\n* Greg Abrams\n* Greg Woods\n* Hayakawa Shinya\n* Helmut Mikulcik\n* Hendrik Baecker\n* Henning Brauer\n* Herbert Straub\n* Hiren Patel\n* Holger Weiss\n* Horvath Tamas\n* Hugo Gayosso\n* Hugo Hallqvist\n* Ian Blenke\n* Ian Cass\n* Igno Kley\n* Ingo Lantschner\n* Ivan Kuncl\n* Jacob Lundqvist\n* James \"Showkilr\" Peterson\n* James Maddison\n* James Moseley\n* Jan David\n* Jan Grant\n* Jan Vejvalka\n* Janet Post\n* Janice Singh\n* Jason Blakey\n* Jason Hedden\n* Jean Gabes\n* Jean-Eric Cuendet\n* Jeff Cours\n* Jeff Johnson\n* Jeffrey Blank\n* Jeffrey Goldschrafe\n* Jeremy Bouse\n* Jeremy Weatherford\n* Jim Crilley\n* Jim Dumser\n* Jim Popovitch\n* Jiri Kostern\n* Jochen Bern\n* Joel Berry\n* Joel Crisp\n* Joerg Linge\n* John Calcote\n* John Rouillard\n* Jon Andrews\n* Jonathan Clarke\n* Jonathan Kamens\n* Jonathan Saggau\n* Jorge Sanchez\n* Joseph Maiorana\n* Josh Thorstad\n* Justin Clarke\n* Kai Ung\n* Karel Salavec\n* Karl DeBisschop\n* Karl Hegbloom\n* Kenneth Ray\n* Kevin Benton\n* Kevin Stone\n* Larry Low\n* Lars Hansson\n* Lars Hecking\n* Lars Kellogg-Stedman\n* Lars Michelson\n* Lars Vogdt\n* lev\n* Lonny Selinger\n* Lou Sneddon\n* Ludo Bosmans\n* Luigi Balzano\n* Luiz Felipe R E\n* Luke Ross\n* Marc Powell\n* Marcus Fleige\n* Marcus Hildenbrand\n* Mark DeTrano\n* Mark Frost\n* Mark Goldfinch\n* Mark Schenker\n* Mark Spieth\n* Markus Almroth\n* Markus Baertschi\n* Marlo Bell\n* Martin Green\n* Martin Mielke\n* Mathieu Gagne\n* Matt Ezell\n* Matthew Grant\n* Matthew Richardson\n* Matthias Cramer\n* Matthias Eble\n* Matthias Eichler\n* Matthias Flacke\n* Matthias Flittner\n* Matthias Kerk\n* Matthieu Kermagoret\n* Matthieu Kermagoret\n* Mattias Ryrlen\n* Max Schubert\n* Max Sikstrom\n* Michael Anthon\n* Michael Bailey\n* Michael Bunk\n* Michael Little\n* Michael Lubben\n* Michael Marineau\n* Michael O'Reilly\n* Michael Smedius\n* Michal Zimen\n* Michelle Craft\n* Mika Fischer\n* Mike Bird\n* Mike Dorman\n* Mike McHenry\n* Mindaugas Riauba\n* Mitch Wright \n* Moshe Sharon\n* Nate Shafer\n* Nathan Grennan\n* Nicholas Tang\n* Nick Cleaton\n* Nick Reinking\n* Nick Shore\n* Nikola Vassilev\n* Olivier Beytrison\n* Olivier Jan\n* Patrick Proy\n* Patrik Halfar\n* Paul Kent\n* Paul Pot\n* Pavel Satrapa\n* Pawel Zuzelski\n* Pedro Leite\n* Percy Jahn\n* Perry Clarke\n* Peter Ringe\n* Peter Valdemar Morch\n* Peter Westlake\n* Petr Adamec\n* Petya Kohts\n* Phil Mayers\n* Phil Randal\n* Phil Walther\n* Ralph Rossner\n* Ray Bengen\n* Remi Paulmier\n* Rene Klootwijk\n* Ricardo Maraschini\n* Richard Mayhew\n* Rob Enders\n* Rob Patrick\n* Rob Remus\n* Robert August Vincent II\n* Robert Gash\n* Robert Thompson\n* Roberto Marrodan\n* Robin Kearney\n* Robin Sonefors\n* Ronald Ho\n* Rostislav Opo\u010densk\u00fd\n* Russell Scibetti\n* Ryan Skorstad\n* Ryoji Kobayashi\n* Sam Howard\n* Sean Finney\n* Sebastian Guarino\n* Sebastien Barbereau\n* Sergio Guzman\n* Shad Lords\n* Simon Beale\n* Stanley Hopcroft\n* Stefan Rompf\n* Stefan Schurtz\n* Stephane Urbanovski\n* Stephen Davies\n* Stephen Gran\n* Steve Underwood\n* Steven Pokrandt\n* Stewart James\n* Stig Jacobsen\n* Subhendu Ghosh\n* SUSE Linux Team\n* Sven Nierlein\n* Sven Strickroth\n* Sven-G\u00f6ran Bergh\n* Sylvain Falardeau\n* Szabo Gabor\n* Thomas Dohl\n* Thomas Dunkel\n* Thomas Guyot-Sionnest\n* Thomas Hepper\n* Thomas Sebastien\n* Thomas Stolle\n* Tim Starling\n* Tim Wilde\n* Time Niemueller\n* Tobias Klausmann\n* Tobias Mucke\n* Todd Green\n* Todd Wheeler\n* Tom Bertelson\n* Tom De Blende\n* Tom Welsh\n* Tomer Okavi\n* Ton Voon\n* Torsten Huebler\n* Tyler Lund\n* Uwe Knop\n* Uwe Knop\n* Vadim Okun\n* Volkan Yazici\n* Volker Aust\n* William Leibzon\n* William Preston\n* Wolfgang Barth\n* xoubih\n* Yves Rubin\n* Zakhar Kleyman\n", "/*****************************************************************************\n *\n * LOGGING.C - Log file functions for use with Nagios\n *\n *\n * License:\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 2 as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n *\n *****************************************************************************/\n\n#include \"../include/config.h\"\n#include \"../include/common.h\"\n#include \"../include/statusdata.h\"\n#include \"../include/macros.h\"\n#include \"../include/nagios.h\"\n#include \"../include/broker.h\"\n#include <fcntl.h>\n\n\nstatic FILE *debug_file_fp;\nstatic FILE *log_fp;\n\n/******************************************************************/\n/************************ LOGGING FUNCTIONS ***********************/\n/******************************************************************/\n\n/* write something to the console */\nstatic void write_to_console(char *buffer) {\n\t/* should we print to the console? */\n\tif(daemon_mode == FALSE)\n\t\tprintf(\"%s\\n\", buffer);\n\t}\n\n\n/* write something to the log file, syslog, and possibly the console */\nstatic void write_to_logs_and_console(char *buffer, unsigned long data_type, int display) {\n\tregister int len = 0;\n\tregister int x = 0;\n\n\t/* strip unnecessary newlines */\n\tlen = strlen(buffer);\n\tfor(x = len - 1; x >= 0; x--) {\n\t\tif(buffer[x] == '\\n')\n\t\t\tbuffer[x] = '\\x0';\n\t\telse\n\t\t\tbreak;\n\t\t}\n\n\t/* write messages to the logs */\n\twrite_to_all_logs(buffer, data_type);\n\n\t/* write message to the console */\n\tif(display == TRUE) {\n\n\t\t/* don't display warnings if we're just testing scheduling */\n\t\tif(test_scheduling == TRUE && data_type == NSLOG_VERIFICATION_WARNING)\n\t\t\treturn;\n\n\t\twrite_to_console(buffer);\n\t\t}\n\t}\n\n\n/* The main logging function */\nvoid logit(int data_type, int display, const char *fmt, ...) {\n\tva_list ap;\n\tchar *buffer = NULL;\n\n\tva_start(ap, fmt);\n\tif(vasprintf(&buffer, fmt, ap) > 0) {\n\t\twrite_to_logs_and_console(buffer, data_type, display);\n\t\tfree(buffer);\n\t\t}\n\tva_end(ap);\n\t}\n\n\n/* write something to the log file and syslog facility */\nint write_to_all_logs(char *buffer, unsigned long data_type) {\n\n\t/* write to syslog */\n\twrite_to_syslog(buffer, data_type);\n\n\t/* write to main log */\n\twrite_to_log(buffer, data_type, NULL);\n\n\treturn OK;\n\t}\n\n\n/* write something to the log file and syslog facility */\nstatic void write_to_all_logs_with_timestamp(char *buffer, unsigned long data_type, time_t *timestamp) {\n\t/* write to syslog */\n\twrite_to_syslog(buffer, data_type);\n\n\t/* write to main log */\n\twrite_to_log(buffer, data_type, timestamp);\n\t}\n\n\nstatic FILE *open_log_file(void)\n{\n\tif(log_fp) /* keep it open unless we rotate */\n\t\treturn log_fp;\n\n\tlog_fp = fopen(log_file, \"a+\");\n\tif(log_fp == NULL) {\n\t\tif (daemon_mode == FALSE) {\n\t\t\tprintf(\"Warning: Cannot open log file '%s' for writing\\n\", log_file);\n\t\t\t}\n\t\treturn NULL;\n\t\t}\n\n\t(void)fcntl(fileno(log_fp), F_SETFD, FD_CLOEXEC);\n\treturn log_fp;\n}\n\nint fix_log_file_owner(uid_t uid, gid_t gid)\n{\n\tint r1 = 0, r2 = 0;\n\n\tif (!(log_fp = open_log_file()))\n\t\treturn -1;\n\tr1 = fchown(fileno(log_fp), uid, gid);\n\n\tif (open_debug_log() != OK)\n\t\treturn -1;\n\tif (debug_file_fp)\n\t\tr2 = fchown(fileno(debug_file_fp), uid, gid);\n\n\t/* return 0 if both are 0 and otherwise < 0 */\n\treturn r1 < r2 ? r1 : r2;\n}\n\nint close_log_file(void)\n{\n\tif(!log_fp)\n\t\treturn 0;\n\n\tfflush(log_fp);\n\tfclose(log_fp);\n\tlog_fp = NULL;\n\treturn 0;\n}\n\n/* write something to the nagios log file */\nint write_to_log(char *buffer, unsigned long data_type, time_t *timestamp) {\n\tFILE *fp;\n\ttime_t log_time = 0L;\n\n\tif(buffer == NULL)\n\t\treturn ERROR;\n\n\t/* don't log anything if we're not actually running... */\n\tif(verify_config || test_scheduling == TRUE)\n\t\treturn OK;\n\n\t/* make sure we can log this type of entry */\n\tif(!(data_type & logging_options))\n\t\treturn OK;\n\n\tfp = open_log_file();\n\tif (fp == NULL)\n\t\treturn ERROR;\n\t/* what timestamp should we use? */\n\tif(timestamp == NULL)\n\t\ttime(&log_time);\n\telse\n\t\tlog_time = *timestamp;\n\n\t/* strip any newlines from the end of the buffer */\n\tstrip(buffer);\n\n\t/* write the buffer to the log file */\n\tfprintf(fp, \"[%llu] %s\\n\", (unsigned long long)log_time, buffer);\n\tfflush(fp);\n\n#ifdef USE_EVENT_BROKER\n\t/* send data to the event broker */\n\tbroker_log_data(NEBTYPE_LOG_DATA, NEBFLAG_NONE, NEBATTR_NONE, buffer, data_type, log_time, NULL);\n#endif\n\n\treturn OK;\n\t}\n\n\n/* write something to the syslog facility */\nint write_to_syslog(char *buffer, unsigned long data_type) {\n\n\tif(buffer == NULL)\n\t\treturn ERROR;\n\n\t/* don't log anything if we're not actually running... */\n\tif(verify_config || test_scheduling == TRUE)\n\t\treturn OK;\n\n\t/* bail out if we shouldn't write to syslog */\n\tif(use_syslog == FALSE)\n\t\treturn OK;\n\n\t/* make sure we should log this type of entry */\n\tif(!(data_type & syslog_options))\n\t\treturn OK;\n\n\t/* write the buffer to the syslog facility */\n\tsyslog(LOG_USER | LOG_INFO, \"%s\", buffer);\n\n\treturn OK;\n\t}\n\n\n/* write a service problem/recovery to the nagios log file */\nint log_service_event(service *svc) {\n\tchar *temp_buffer = NULL;\n\tunsigned long log_options = 0L;\n\thost *temp_host = NULL;\n\n\t/* don't log soft errors if the user doesn't want to */\n\tif(svc->state_type == SOFT_STATE && !log_service_retries)\n\t\treturn OK;\n\n\t/* get the log options */\n\tif(svc->current_state == STATE_UNKNOWN)\n\t\tlog_options = NSLOG_SERVICE_UNKNOWN;\n\telse if(svc->current_state == STATE_WARNING)\n\t\tlog_options = NSLOG_SERVICE_WARNING;\n\telse if(svc->current_state == STATE_CRITICAL)\n\t\tlog_options = NSLOG_SERVICE_CRITICAL;\n\telse\n\t\tlog_options = NSLOG_SERVICE_OK;\n\n\t/* find the associated host */\n\tif((temp_host = svc->host_ptr) == NULL)\n\t\treturn ERROR;\n\n\tasprintf(&temp_buffer, \"SERVICE ALERT: %s;%s;%s;%s;%d;%s\\n\",\n\t\t\t svc->host_name, svc->description,\n\t\t\t service_state_name(svc->current_state),\n\t\t\t state_type_name(svc->state_type),\n\t\t\t svc->current_attempt,\n\t\t\t (svc->plugin_output == NULL) ? \"\" : svc->plugin_output);\n\n\twrite_to_all_logs(temp_buffer, log_options);\n\tfree(temp_buffer);\n\n\treturn OK;\n\t}\n\n\n/* write a host problem/recovery to the log file */\nint log_host_event(host *hst) {\n\tchar *temp_buffer = NULL;\n\tunsigned long log_options = 0L;\n\n\t/* get the log options */\n\tif(hst->current_state == HOST_DOWN)\n\t\tlog_options = NSLOG_HOST_DOWN;\n\telse if(hst->current_state == HOST_UNREACHABLE)\n\t\tlog_options = NSLOG_HOST_UNREACHABLE;\n\telse\n\t\tlog_options = NSLOG_HOST_UP;\n\n\tasprintf(&temp_buffer, \"HOST ALERT: %s;%s;%s;%d;%s\\n\",\n\t\t\t hst->name,\n\t\t\t host_state_name(hst->current_state),\n\t\t\t state_type_name(hst->state_type),\n\t\t\t hst->current_attempt,\n\t\t\t (hst->plugin_output == NULL) ? \"\" : hst->plugin_output);\n\n\twrite_to_all_logs(temp_buffer, log_options);\n\n\tmy_free(temp_buffer);\n\n\treturn OK;\n\t}\n\n\n/* logs host states */\nint log_host_states(int type, time_t *timestamp) {\n\tchar *temp_buffer = NULL;\n\thost *temp_host = NULL;;\n\n\t/* bail if we shouldn't be logging initial states */\n\tif(type == INITIAL_STATES && log_initial_states == FALSE)\n\t\treturn OK;\n\n\tfor(temp_host = host_list; temp_host != NULL; temp_host = temp_host->next) {\n\n\t\tasprintf(&temp_buffer, \"%s HOST STATE: %s;%s;%s;%d;%s\\n\", (type == INITIAL_STATES) ? \"INITIAL\" : \"CURRENT\",\n\t\t\t\t temp_host->name,\n\t\t\t\t host_state_name(temp_host->current_state),\n\t\t\t\t state_type_name(temp_host->state_type),\n\t\t\t\t temp_host->current_attempt,\n\t\t\t\t (temp_host->plugin_output == NULL) ? \"\" : temp_host->plugin_output);\n\n\t\twrite_to_all_logs_with_timestamp(temp_buffer, NSLOG_INFO_MESSAGE, timestamp);\n\n\t\tmy_free(temp_buffer);\n\t\t}\n\n\treturn OK;\n\t}\n\n\n/* logs service states */\nint log_service_states(int type, time_t *timestamp) {\n\tchar *temp_buffer = NULL;\n\tservice *temp_service = NULL;\n\thost *temp_host = NULL;;\n\n\t/* bail if we shouldn't be logging initial states */\n\tif(type == INITIAL_STATES && log_initial_states == FALSE)\n\t\treturn OK;\n\n\tfor(temp_service = service_list; temp_service != NULL; temp_service = temp_service->next) {\n\n\t\t/* find the associated host */\n\t\tif((temp_host = temp_service->host_ptr) == NULL)\n\t\t\tcontinue;\n\n\t\tasprintf(&temp_buffer, \"%s SERVICE STATE: %s;%s;%s;%s;%d;%s\\n\",\n\t\t\t\t (type == INITIAL_STATES) ? \"INITIAL\" : \"CURRENT\",\n\t\t\t\t temp_service->host_name, temp_service->description,\n\t\t\t\t service_state_name(temp_service->current_state),\n\t\t\t\t state_type_name(temp_service->state_type),\n\t\t\t\t temp_service->current_attempt,\n\t\t\t\t temp_service->plugin_output);\n\n\t\twrite_to_all_logs_with_timestamp(temp_buffer, NSLOG_INFO_MESSAGE, timestamp);\n\n\t\tmy_free(temp_buffer);\n\t\t}\n\n\treturn OK;\n\t}\n\n\n/* rotates the main log file */\nint rotate_log_file(time_t rotation_time) {\n\tchar *temp_buffer = NULL;\n\tchar method_string[16] = \"\";\n\tchar *log_archive = NULL;\n\tstruct tm *t, tm_s;\n\tint rename_result = 0;\n\tint stat_result = -1;\n\tstruct stat log_file_stat;\n\tstruct stat archive_stat;\n\tint archive_stat_result;\n\n\tif(log_rotation_method == LOG_ROTATION_NONE) {\n\t\treturn OK;\n\t\t}\n\telse if(log_rotation_method == LOG_ROTATION_HOURLY)\n\t\tstrcpy(method_string, \"HOURLY\");\n\telse if(log_rotation_method == LOG_ROTATION_DAILY)\n\t\tstrcpy(method_string, \"DAILY\");\n\telse if(log_rotation_method == LOG_ROTATION_WEEKLY)\n\t\tstrcpy(method_string, \"WEEKLY\");\n\telse if(log_rotation_method == LOG_ROTATION_MONTHLY)\n\t\tstrcpy(method_string, \"MONTHLY\");\n\telse\n\t\treturn ERROR;\n\n\t/* update the last log rotation time and status log */\n\tlast_log_rotation = time(NULL);\n\tupdate_program_status(FALSE);\n\n\tt = localtime_r(&rotation_time, &tm_s);\n\n\tstat_result = stat(log_file, &log_file_stat);\n\n\tclose_log_file();\n\n\t/* get the archived filename to use */\n\tasprintf(&log_archive, \"%s%snagios-%02d-%02d-%d-%02d.log\", log_archive_path, (log_archive_path[strlen(log_archive_path) - 1] == '/') ? \"\" : \"/\", t->tm_mon + 1, t->tm_mday, t->tm_year + 1900, t->tm_hour);\n\n\t/* HACK: If the archive exists, don't overwrite it. This is a hack\n\t\tbecause the real problem is that some log rotations are executed\n\t\tearly and as a result the next log rotatation is scheduled for \n\t\tthe same time as the one that ran early */\n\tarchive_stat_result = stat(log_archive, &archive_stat);\n\tif((0 == archive_stat_result) || \n\t\t\t((-1 == archive_stat_result) && (ENOENT != errno))) {\n\t\treturn OK;\n\t}\n\n\t/* rotate the log file */\n\trename_result = my_rename(log_file, log_archive);\n\tlog_fp = open_log_file();\n\tif (log_fp == NULL)\n\t\treturn ERROR;\n\n\tif(rename_result) {\n\t\tmy_free(log_archive);\n\t\treturn ERROR;\n\t\t}\n\n\t/* record the log rotation after it has been done... */\n\tasprintf(&temp_buffer, \"LOG ROTATION: %s\\n\", method_string);\n\twrite_to_all_logs_with_timestamp(temp_buffer, NSLOG_PROCESS_INFO, &rotation_time);\n\tmy_free(temp_buffer);\n\n\t/* record log file version format */\n\twrite_log_file_info(&rotation_time);\n\n\tif(stat_result == 0) {\n\t\tchmod(log_file, log_file_stat.st_mode);\n\t\tchown(log_file, log_file_stat.st_uid, log_file_stat.st_gid);\n\t\t}\n\n\t/* log current host and service state if activated */\n\tif(log_current_states==TRUE) {\n\t\tlog_host_states(CURRENT_STATES, &rotation_time);\n\t\tlog_service_states(CURRENT_STATES, &rotation_time);\n\t}\n\n\t/* free memory */\n\tmy_free(log_archive);\n\n\treturn OK;\n\t}\n\n\n/* record log file version/info */\nint write_log_file_info(time_t *timestamp) {\n\tchar *temp_buffer = NULL;\n\n\t/* write log version */\n\tasprintf(&temp_buffer, \"LOG VERSION: %s\\n\", LOG_VERSION_2);\n\twrite_to_all_logs_with_timestamp(temp_buffer, NSLOG_PROCESS_INFO, timestamp);\n\tmy_free(temp_buffer);\n\n\treturn OK;\n\t}\n\n\n/* opens the debug log for writing */\nint open_debug_log(void) {\n\n\t/* don't do anything if we're not actually running... */\n\tif(verify_config || test_scheduling == TRUE)\n\t\treturn OK;\n\n\t/* don't do anything if we're not debugging */\n\tif(debug_level == DEBUGL_NONE)\n\t\treturn OK;\n\n\tif((debug_file_fp = fopen(debug_file, \"a+\")) == NULL)\n\t\treturn ERROR;\n\n\t(void)fcntl(fileno(debug_file_fp), F_SETFD, FD_CLOEXEC);\n\n\treturn OK;\n\t}\n\n\n/* closes the debug log */\nint close_debug_log(void) {\n\n\tif(debug_file_fp != NULL)\n\t\tfclose(debug_file_fp);\n\n\tdebug_file_fp = NULL;\n\n\treturn OK;\n\t}\n\n\n/* write to the debug log */\nint log_debug_info(int level, int verbosity, const char *fmt, ...) {\n\tva_list ap;\n\tchar *tmppath = NULL;\n\tstruct timeval current_time;\n\n\tif(!(debug_level == DEBUGL_ALL || (level & debug_level)))\n\t\treturn OK;\n\n\tif(verbosity > debug_verbosity)\n\t\treturn OK;\n\n\tif(debug_file_fp == NULL)\n\t\treturn ERROR;\n\n\t/* write the timestamp */\n\tgettimeofday(&current_time, NULL);\n\tfprintf(debug_file_fp, \"[%lu.%06lu] [%03d.%d] [pid=%lu] \", current_time.tv_sec, current_time.tv_usec, level, verbosity, (unsigned long)getpid());\n\n\t/* write the data */\n\tva_start(ap, fmt);\n\tvfprintf(debug_file_fp, fmt, ap);\n\tva_end(ap);\n\n\t/* flush, so we don't have problems tailing or when fork()ing */\n\tfflush(debug_file_fp);\n\n\t/* if file has grown beyond max, rotate it */\n\tif((unsigned long)ftell(debug_file_fp) > max_debug_file_size && max_debug_file_size > 0L) {\n\n\t\t/* close the file */\n\t\tclose_debug_log();\n\n\t\t/* rotate the log file */\n\t\tasprintf(&tmppath, \"%s.old\", debug_file);\n\t\tif(tmppath) {\n\n\t\t\t/* unlink the old debug file */\n\t\t\tunlink(tmppath);\n\n\t\t\t/* rotate the debug file */\n\t\t\tmy_rename(debug_file, tmppath);\n\n\t\t\t/* free memory */\n\t\t\tmy_free(tmppath);\n\t\t\t}\n\n\t\t/* open a new file */\n\t\topen_debug_log();\n\t\t}\n\n\treturn OK;\n\t}\n"], "fixing_code": ["########################\nNagios Core 4 Change Log\n########################\n\n4.2.x - xxxx-xx-xx\n------------------\nSECURITY FIXES\n* Fixed another root privilege escalation (CVE-2016-9566) Thanks for bringing this\n  to our attention go to Dawid Golunski (http://legalhackers.com).\n\n\n4.2.3 - 2016-11-21\n-------------------\nSECURITY FIXES\n* Fixed a root privilege escalation (CVE-2016-8641) (John Frickson)\n\nFIXES\n* external command during reload doesn't work (John Frickson)\n* Nagios provides no error condition as to why it fails on the verify for serviceescalation (John Frickson)\n* No root group in FreeBSD and Apple OS X (John Frickson)\n* jsonquery.html doesn't display scheduled_time_ok correctly (John Frickson)\n* daemon_dumps_core=1 has no effect on Linux when Nagios started as root (John Frickson)\n* Configuration check in hostgroup - misspelled hostname does not error (John Frickson)\n* contacts or contact_groups directive with no value should not be allowed (John Frickson)\n* Compile 64-bit on SPARC produces LD error (John Frickson)\n* HOSTSTATEID returns 0 even if host does not exist (John Frickson)\n* Submitting UNREACHABLE passive result for host sets it as DOWN if the host has no parents (John Frickson)\n* nagios: job XX (pid=YY): read() returned error 11 (changed from LOG_ERR to LOG_NOTICE) (John Frickson)\n* Fix for quick search not showing services if wildcard used (John Frickson)\n\n\n4.2.2 - 2016-10-24\n------------------\nSECURITY FIXES\n* There was a fix to vulnerability CVE-2008-4796 in the 4.2.0 release on\n  August 1, 2016. The fix was apparently incomplete, as there was still a\n  problem. However, we are now getting all RSS feeds using AJAX calls\n  instead of the (outdated) MagpieRSS package. Thanks for bringing this to\n  our attention go to Dawid Golunski (http://legalhackers.com).\n\nENHANCEMENTS\n* Update status.c to display passive check icon for hosts when passive checks\n\tare enabled and actives disabled (John Frickson)\n\nFIXES\n* Fix permissions for Host Groups reports (status.cgi) (Patrik Halfar)\n* Service Parents does not appear to be functioning as intended (lev)\n* Availability report mixes up scheduled and unscheduled warning percentages (Helmut Mikulcik)\n* Invalid values for saved_stamp in comput_subject_downtime_times() (John Frickson)\n* Remove deprecated \"framespacing\" (John Frickson)\n* The nagios tarball contains two identical jquery copies (John Frickson)\n* extinfo.cgi does not set content-type (most cgi's don't) (John Frickson)\n* Timeperiods are corrupted by external command CHANGE_SVC_CHECK_TIMEPERIOD (xoubih)\n* Quick search doesn't show hosts without services (service status detail page) (John Frickson)\n* In host/services details view, if exactly 100 entries would not show last one (John Frickson)\n* nagios host URL parameter for NEW map doesn`t work - Network Map for All Hosts (John Frickson)\n* next_problem_id is improperly initialized (gherteg)\n* Passive problems not showing as \"unhandled\" (John Frickson)\n* September reported as Sept instead of Sep (Rostislav Opo\u010densk\u00fd)\n* Notifications are not sent for active alerts after scheduled downtime ends (John Frickson)\n* Nagios 4.2.0 not working on Solaris (John Frickson)\n* install-exfoliation and install-classicui don't work FreeBSD and Mac OS X (John Frickson)\n* Updated makefile to delete some no-longer-needed files (John Frickson)\n\n\n4.2.1 - 2016-09-06\n------------------\nFIXES\n* Fix undefined variable php error (John Frickson)\n* Links on the sidebar menu under 'Problems' are indented too far (John Frickson)\n* Using $ARGn$ Macros in perfdata (John Frickson)\n* using a wildcard in search returns service status total all zero's (John Frickson)\n* read_only does not take priority (deppy)\n* Running nagios -v on 4.2.0 takes 90+ seconds (John Frickson)\n* Bare \"make\" invoked in subtarget (mjo)\n* Theme images/stylesheets installed with inconsistent permissions (mjo / John Frickson)\n* Missing Image for Host and Service State Trends in Availability Report (nichokap / John Frickson)\n* Maintain non-persistent comments through reload (John Frickson)\n* Servicegroup availability report ignores includesoftstates in service report links (PriceChild)\n* error: format not a string literal and no format arguments (Karsten Weiss)\n* Synced config.guess and config.sub with GNU (Zakhar Kleyman)\n\n\n4.2.0 - 2016-08-01\n------------------\nSECURITY FIXES\n* Fixed vulnerability CVE-2008-4796 (John Frickson)\n* Fixed vulnerability CVE-2013-4214 (John Frickson)\n* web interface vulnerable to Cross-Site Request Forgery attacks (John Frickson)\n\nENHANCEMENTS\n* Increase socket queue length for listen()\n* Added host name to the website page title (leres / John Frickson)\n* Added additional icons for NetBSD and SuSE (John Frickson)\n* The new Status Map will now use cgi.cfg options (John Frickson)\n    default_statusmap_layout will default to \"6\" for the new map\n* The new Status Map will now show some valid values in the popup for \"Nagios Process\" (John Frickson)\n\nFIXES\n* Network outage view without access to all hosts (John Frickson)\n* Core workers looping (John Frickson)\n* service query returns duplicate host_name and description fields in the returned data (John Frickson)\n* HTML output of plug-ins is parsed in wrong way => webgui unusable (John Frickson)\n* Command worker fails to handle SIGPIPE\n* \"View Status\" links under \"Map\" broken in Nagios Core Version 4.1.1 (John Frickson)\n* Can't send big buffer - wproc: Core Worker seems to be choked (velripn / John Frickson)\n* Too big CPU load on FreeBSD and other systems using poll() interface (cejkar)\n* Flexible downtime recorded as unscheduled downtime (John Frickson)\n* Service Flexible downtimes produce 1 notification before entering (John Frickson)\n* Once you \"set flap_detection_enabled 0\" it should remove flapping state from the host/services page (John Frickson)\n* New map doesn't finish loading if a logo image is not found (John Frickson)\n* Extraneous Div end tag in map.html (Scott Wilkerson)\n* Issue with \"Problems\" section (John Frickson)\n* Status Map icons and online/offline status dots disappear in IE11 (John Frickson)\n* New network map overlays the nagios process with objects (John Frickson)\n* Added Default-Start and Default-Stop to the init script (John Frickson)\n* Compile / logging issues with BSD 6\n* Related to above, Fixed a lot of incorrectly handled time_t's in *printf's (John Frickson)\n* New map not working for RU locale (actually, most locales) (John Frickson)\n* Replaced all instances of signal() with sigaction() + blocking (John Frickson)\n* UTF-8 characters like german \u00e4 are not processed properly by function url_encode (John Frickson)\n* nagios worker processes can hog CPU (huxley / John Frickson)\n* custom time periods that include special characters were not being handled in reports (John Frickson)\n* Fixed init script to wait up to 90 seconds then kill the nagios process (John Frickson)\n* No Host Groups results in wrong error message (John Frickson)\n* Setup Nagios users to view specific host is not working in the new network map (John Frickson)\n* statusjson.cgi fails glibc realloc truncate response output (John Frickson)\n* Report Time Period does not work if an @ character is in the timeperiod name (John Frickson)\n* State History does not use actual plugin long_output (John Frickson)\n* Time period corruption (xoubih)\n* Tactical Overview - Disabled Flap Detection Link (John Frickson)\n\n4.1.1 - 08/19/2015\n------------------\nFIXES\n* CGI Could not read object configuration data (broken by error in 4.1.0)\n* exclude (!) not working (broken by mis-applied fix for 4.1.0)\n\n\n4.1.0 - 08/18/2015\n------------------\nENHANCEMENTS\n* Promoted JSON CGIs to released status (Eric Stanley)\n* New graphical CGI displays: statusmap, trends, histogram (Eric Stanley)\n* Make sticky status for acks and comments configurable enhancement #20 (Trevor McDonald / Scott Wilkerson)\n* Add host_down_disable_service_checks directive to nagios.cfg #44 (Trevor McDonald / Scott Wilkerson)\n* httpd.conf doesn't support Apache versions > 2.3 (DanielB / John Frickson)\n\nFIXES\n* Fix for not all service dependencies created (John Frickson)\n* Fix SIGSEGV with empty custom variable (orbis / John Frickson)\n* Fix contact macros in environment variables (dvoryanchikov)\n* Fixed host's current attempt goes to 1 after going to hard state (John Frickson)\n* Fixed two bugs/problems: Replace use of %zd in base/utils.c & incorrect va_start() in cgi/jsonutils.c (Peter Eriksson)\n* Fixed: Let remove_specialized actually remove all workers (Phil Mayers)\n* Fixed log file spam caused when using perfdata command directives in nagios.cfg (shashikanthbussa)\n* Fixed off-by-one error in bounds check leads to segfault (Phil Mayers)\n* Added links for legacy graphical displays (Eric Stanley)\n* Update embedded URL's to https versions of Nagios websites (scottwilkerson)\n* Fixed doxygen comments to work with latest doxygen 1.8.9.1 #30 (Trevor McDonald)\n* Fixed makefile target \"html\" to PHONY to fix GitHub issue #28 (Trevor McDonald)\n* Fixed typo as per GitHub issue #27 (Trevor McDonald)\n* Fixed jsonquery.php 404 not found error, and disabled Send Query button until form populates #43 (Scott Wilkerson)\n* Fixed linking in Tactical Overview for several of the Host entries in Featured section #48 (Scott Wilkerson)\n* Fixed passing limit and sort options to pagination and sort links #42 (Scott Wilkerson)\n* Added form field for icon URL and clean-up when it changes in CGI Status Map. (Eric Stanley)\n* Added options to cgi.cfg to uncheck sticky and send when acknowledging a problem (Trevor McDonald)\n* Low impact changes to automate the generation of RPMs from nagios.spec file. (T.J. Yang)\n* Update index.php (Trevor McDonald)\n* Fixed escaping of corewindow parameter to account for possible XSS injection (Scott Wilkerson)\n* Typo correction (T.J. Yang)\n* Make getCoreStatus respect cgi_base_url (Moritz Schlarb)\n* Adjusted map layout to work within frames (Eric Stanley)\n* Fixed map displays are now the full size of browser window (Eric Stanley)\n* Fixed labels and icons on circular markup no longer scale on zoom (Eric Stanley)\n* Got all maps except circular markup working with icons (Eric Stanley)\n* Fixes to make legacy CGIs work again. (Eric Stanley)\n* Fixes to make all/html target tolerant of being run multiple times (Eric Stanley)\n* For user-supplied maps, converted node group to have transform (Eric Stanley)\n* Fixed issue transitioning from circular markup map to other maps (Eric Stanley)\n* Fix displayForm to trigger on the buttom press (Scott Wilkerson)\n* Fix fo getBBox crash on Firefox (Eric Stanley)\n* Fixed map now resets zoom when form apply()'d (Eric Stanley)\n* Fixed so close box on dialogs actually closes dialog (Eric Stanley)\n* Corrected directive in trends display (Eric Stanley)\n* Fixed minor issue with link in trends linkes (Eric Stanley)\n* Fixed issue with map displaying on Firefox (Eric Stanley)\n* Added exclusions for ctags generation (Eric Stanley)\n* Update map-popup.html (Scott Wilkerson)\n* Initial commit of new graphical CGIs (Eric Stanley)\n* Fixed Github bug #18 - archivejson.cgi returns wrong host for state change query (Eric Stanley)\n* Status JSON: Added next_check to service details (Eric Stanley)\n* Fixed escaping of keys for scalar values in JSON CGIs (Eric Stanley)\n* build: Include <sys/loadavg.h> if it exists. (Eric J. Mislivec)\n* lib-tests: test-io{cache|broker} need -lsocket to link. (Eric J. Mislivec)\n* lib-tests: test-runcmd assumes GNU echo. (Eric J. Mislivec)\n* lib-tests: Signal handlers don't return int on most platforms, and using a cast was the wrong way to resolve this. (Eric J. Mislivec)\n* Fix some type/format mismatch warnings for pid_t. (Eric J. Mislivec)\n* Fix build on Solaris. (Eric J. Mislivec)\n* runcmd: Fix build when we don't HAVE_SETENV. (Eric J. Mislivec)\n* Fixed checkresult output processing (Eric Mislivec)\n* Corrected escaping of long output macros (Eric Mislivec)\n* Fixed null pointer dereferences in archive JSON (Eric Stanley)\n* Fixed memory overwrite issue in JSON string escaping (Eric Stanley)\n* JSON CGI: Now escaping object and array keys (Eric Stanley)\n\nKNOWN ISSUES\n* New map does not account for multiple parents, leaving \"legacy\" map as an option in the menu\n\n4.0.8 - 08/12/2014\n------------------\nENHANCEMENTS\n* Removed 8 kB string size limitation in JSON CGIs (Eric Stanley)\n* Re-implemented auto-rescheduling of checks (Eric Mislivec)\n* Avoid bunching of checks delayed due to timeperiod constraints (Eric Stanley)\n* Limit the number of autocalculated core workers to not spawn too many on large systems (Eric Mislivec, Janice Singh)\n\nFIXES\n* Removed quotes from numeric duration values in JSON CGIs (Eric Stanley)\n* Fixed escaping in JSON CGIs so all required characters are escaped, and in the correct order (Eric Stanley)\n* Fixed segfault in archive JSON CGI when plugin output was empty (Eric Stanley)\n* Fixed several possibilities for buffer overflow (Eric Mislivec, Dirkjan Bussink)\n* Fixed Tracker #582, #626: Handle VAR=VAL assignments at the start of simple commands (Eric Mislivec, Phil Randal)\n* Fixed Tracker #630: Recognize '<' and '>' as redirection operators (Eric Mislivec)\n* Corrected worker communication protocol documentation (Phil Mayers)\n* Fixed init script to leave config test log in a better location, let sysconfig override init script variables, and not remove nagios.cmd when attempting to start with another instance running (Eric Mislivec, Robin Kearney)\n* Fixed Tracker #361: Downtime notifications not displayed properly (Andrew Widdersheim)\n\n4.0.7 - 06/03/2014\n------------------\nENHANCEMENTS\n* Added value of custom variables to Object JSON output for hosts, services and contacts (Eric Stanley)\n\nFIXES\n* Fixed bug #616: Unescape plugin output read from checkresult files, fix multiline perf data concatenation, and avoid extra memory allocation and copies. (Eric Mislivec)\n* Fixed bug #609: Image on home page doesn't have correct image path prefix. (Derek Brewer)\n* Fixed bug #608: Extra newline in service check timeout output string. (Mauno Pihelgas)\n* Fixed bug #596: Crashes checking contact authorization for host escalations. (Alexey Dvoryanchikov - duplicates #590, #586)\n* Fixed bug #496: Syntax error in exfoliation's common.css. (Karsten Weiss)\n\n4.0.6 - 04/29/2014\n------------------\nENHANCEMENTS\n* Added name of authenticated user to JSON CGI results object (Eric Stanley)\n* Added Nagios Core version to the Status JSON CGI programstatus query (Eric Stanley)\n* Added daemon status to main page (Eric Mislivec)\n\nFIXES\n* Fixed bug #600: Service Check Timeout State always returns OK (0) status (Mauno Pihelgas, Eric Stanley)\n* Fixed bug #583: Status Check Output of (No output on stdout) stderr: (Eric\nStanley - duplicate of bug #573)\n* Fixed bug #573: Service checks returns (No output on stdout) stderr (Eric Stanley)\n* Fixed bug #438: Reloads during downtime causes wrong availability calculations (Eric Stanley)\n* Fixed feed updates when daemon can not access external networks (Eric Mislivec)\n* Archive JSON: Fixed bugs calculating availability (Eric Stanley)\n* Archive JSON: Allow missing logs to be skipped (Eric Stanley)\n\n4.0.5 - 04/11/2014\n------------------\n* Fixed bug #595: Nagios 4 security fix (Alexey Dvoryanchikov, Eric Stanley)\n* Fixed bug #594: Nagios 4 fix contactgroups parsing (Alexey Dvoryanchikov, Eric Stanley)\n* Fixed bug #577: Nagios 4 checks stalled when write to socket failed (Alexey Dvoryanchikov)\n* Fixed bug #580: Nagios 4 memory leak (Eric Stanley)\n* Fixed init script to remove the switching of users when performing configuration verification which was causing failures if nagios user was set to nologin (Scott Wilkerson)\n* Fixed auto creation of RAMDISK via environment variables in init script to properly check existence using $RAMDISK_DIR environment variable. (Scott Wilkerson)\n* Fixed unreferenced variable NagiosVarDir in daemon-init (Eric Mislivec)\n* Fixed bug where audio alerts wouldn't work with a 0 height and width - https://support.nagios.com/forum/viewtopic.php?t=26387 (Scott Wilkerson)\n\n4.0.4 - 03/14/2014\n------------------\nENHANCEMENTS\n* JSON CGIs moved to beta status (Eric Stanley)\n\nFIXES\n* Fixed bug #491,#553: Rebuilt the daemon-init scripts back to something that should work on all systems (Scott Wilkerson)\n\n\n4.0.3 - 02/28/2014\n------------------\nENHANCEMENTS\n* Aliased hourly_value to importance and minimum_value to minimum_importance and deprecated the former (Eric Stanley)\n* Added host and service importance macros (Eric Stanley)\n* Added notifications on flexible downtime expiration (Dan Wittenberg)\n\nFIXES\n* Bug #548: Temporary fix that rejects all external command during restart to prevent Core from crashing (Eric Stanley)\n* Corrected calculation of host importance and importance defaults (Eric Stanley)\n* Fixed bug #498: Nagios 4 enable_environment_macros=1 not working (Eric Stanley, Alexey Dvoryanchikov)\n* No longer checks whether logs can be written when verifying configuration (Eric Stanley)\n* Fixed CGI bug where the CGI could read past the end of the list of CGI variables, potentially crashing the CGI (Scott Wilkerson)\n* Fixed inheritance of hourly_value from host and service templates (Scott Wilkerson)\n* Fixed bug #502: 4.0.0: Configuration -> Service Escalations = incomplete list (Eric Stanley)\n* Fixed bug #523: quotes and double quotes in plugin message are converted to HTML escapes in Nagios 4.0 (duplicate of bug #524)\n* Fixed bug #524: URLs returned in plugin check results are not correctly displayed (Eric Stanley)\n* Fixed bug where passive service checks would return \"Service check timed out after 0.00 seconds\" (Scott Wilkerson)\n\n4.0.2 - 11/25/2013\n------------------\nFIXES\n* Fixed bug 528: Nagios 4.0.1: Logrotation: Only current host- and servicestates saved in rotated logfiles (duplicate of 507)\n* Fixed bug 507: Nagios 4.0.0 - Problem during log rotate (Stefano Ghelfi)\n* Fixed bug 530: RPM spec file sets wrong permissions on plugins directory (duplicate of bug 494)\n* Fixed bug 494: nagios.spec fixes (with patch) (Karsten Weiss)\n* Fixed bug 515: Segsegv after starting up nagios (duplicate of bug 526)\n* Fixed bug 513: Crash while entering downtime for service (duplicate of bug 526)\n* Fixed bug 529: Core Worker failed to reap child in 4.0.1 Description\n* Fixed bug 514: scheduled downtime not showing in web interface (Eric Stanley)\n* Fixed bug 526: sort_downtime() corrupts scheduled_downtime_list causing segfault (Adam James)\n* Fixed bug 492: Nagios 4 fails to remove/add checks upon reload (Eric Stanley)\n* Fixed Bug 484: Beta4.0.0b4 service checks returning (No output on stdout) (Eric Stanley)\n* Fixed Bug 470: statusmap doesn't display info (Cameron Moore)\n* Fixed Bug 499: Security issue in daemon-init.in, function check_config (T\u00f3mas Edwardsson)\n\n4.0.1 - 10/15/2013\n------------------\nENHANCEMENTS\n* Added compiler flags in RPM spec file to reduce compiler noise (Dan Wittenberg)\n* Added logging of failure in dlclose() call (Anton Lofgren)\n* Added a simple query handler interface, nagios-qh.rb (Dan Wittenberg)\n* Multiple code simplifications, additional error handling in downtime code (Andreas Ericsson)\n\nFIXES\n* Reverted commit f99a9a7b which set check_interval to 1 if it was configured as zero.\n* Corrected order of arguments when logging unknown hosts/services (Scott Wilkerson)\n* Downtime initialized before retention data read (Eric Stanley)\n* Patches to make RPM build again (Dan Wittenberg)\n* Ensure that scheduled_downtime_depth never drops below zero (Andreas Ericsson)\n\n4.0.0 - 09/20/2013\n------------------\nSee http://nagios.sourceforge.net/docs/nagioscore/4/en/whatsnew.html for a\nlist of the changes in Nagios Core 4\n", "=======\nTHANKS!\n=======\n\nThe success of Nagios has been due to the fantastic community members that\nsupport it and provide bug reports, patches, and great ideas.  Here are a\nfew of the many members that have contributed to Nagios in various ways\nsince 1999.  If I missed your name, misspelled it or otherwise got it\nwrong, please let me know.\n\n* Adam Bowen\n* Ahmon Dancy\n* Alain Radix\n* Albrecht Dress\n* Alessandro Ren\n* Alex Peeters\n* Alexios Chouhoulas\n* Allan Clark\n* Alok Dubey\n* Aman Gupta\n* Amir Rosenblatt\n* Anders K. Lindgren\n* Andreas Ericsson\n* Andreas Kirchwitz\n* Andrew Kaplan\n* Andrew Widdersheim\n* Andy Finkenstadt\n* Andy Shellam\n* Anton Lofgren\n* Ari Edelkind\n* Armin Wolfermann\n* Arne Hinrichsen\n* Badri Pillai\n* Bastian Friedrich\n* Ben Bell\n* Ben Heavner\n* Bernard Li\n* Bernd Arnold\n* Bill Pier\n* Bo Kersey\n* Bob (Netshell)\n* Bob Rentschler\n* Bogdan Sandu\n* Brad Werschler\n* Brandon Knitter\n* Brian Riggs\n* Brian Seklecki\n* Burkhard Klaus\n* Carlos Velasco\n* Cary Petterborg\n* Charlie Cook\n* Chris Bensend\n* Chris Kolquist\n* Chris Rothecker\n* Chris Witterholt\n* Christian Masopust\n* Christian Mies\n* Christoph Biedl\n* Christoph Kron\n* Christoph Maser\n* Cliff Woolley\n* Dan Gailey\n* Daniel Burke\n* Daniel Koffler\n* Daniel Pouzzner\n* Daniel Wittenberg\n* Darren Gamble\n* Dave Viner\n* David Allan\n* David Kmoch\n* David Schlecht\n* David Tilloy\n* Dawid Golunski\n* Dean Lane\n* Denis Seleznyov\n* Dennis Biringer\n* Derrick Bennett\n* Devin Bayer\n* Dietmar Rieder\n* Dirkjan Bussink\n* Don Carroll\n* Duncan Ferguson\n* Eirik Robertstad\n* Emanuel Massano\n* Ernst-Deiter Martin\n* Erwan Arzur\n* Esteban Manchado Velazquez\n* Evan Winter\n* Felipe Almeida\n* Florian Weimer\n* Fran Boon\n* Franky Van Liedekerke\n* Frederic Schaer\n* Garry Cook\n* Gary Berger\n* Gary Miller\n* Gavin Adams\n* Geert Vanderkelen\n* Gennaro Tortone\n* Geoff Montee\n* Gerd Mueller\n* Gerhard Lausser\n* gherteg\n* Glenn Thompson\n* Gordon Messmer\n* Gordon Smith\n* Grant Byers\n* Greg Abrams\n* Greg Woods\n* Hayakawa Shinya\n* Helmut Mikulcik\n* Hendrik Baecker\n* Henning Brauer\n* Herbert Straub\n* Hiren Patel\n* Holger Weiss\n* Horvath Tamas\n* Hugo Gayosso\n* Hugo Hallqvist\n* Ian Blenke\n* Ian Cass\n* Igno Kley\n* Ingo Lantschner\n* Ivan Kuncl\n* Jacob Lundqvist\n* James \"Showkilr\" Peterson\n* James Maddison\n* James Moseley\n* Jan David\n* Jan Grant\n* Jan Vejvalka\n* Janet Post\n* Janice Singh\n* Jason Blakey\n* Jason Hedden\n* Jean Gabes\n* Jean-Eric Cuendet\n* Jeff Cours\n* Jeff Johnson\n* Jeffrey Blank\n* Jeffrey Goldschrafe\n* Jeremy Bouse\n* Jeremy Weatherford\n* Jim Crilley\n* Jim Dumser\n* Jim Popovitch\n* Jiri Kostern\n* Jochen Bern\n* Joel Berry\n* Joel Crisp\n* Joerg Linge\n* John Calcote\n* John Rouillard\n* Jon Andrews\n* Jonathan Clarke\n* Jonathan Kamens\n* Jonathan Saggau\n* Jorge Sanchez\n* Joseph Maiorana\n* Josh Thorstad\n* Justin Clarke\n* Kai Ung\n* Karel Salavec\n* Karl DeBisschop\n* Karl Hegbloom\n* Kenneth Ray\n* Kevin Benton\n* Kevin Stone\n* Larry Low\n* Lars Hansson\n* Lars Hecking\n* Lars Kellogg-Stedman\n* Lars Michelson\n* Lars Vogdt\n* lev\n* Lonny Selinger\n* Lou Sneddon\n* Ludo Bosmans\n* Luigi Balzano\n* Luiz Felipe R E\n* Luke Ross\n* Marc Powell\n* Marcus Fleige\n* Marcus Hildenbrand\n* Mark DeTrano\n* Mark Frost\n* Mark Goldfinch\n* Mark Schenker\n* Mark Spieth\n* Markus Almroth\n* Markus Baertschi\n* Marlo Bell\n* Martin Green\n* Martin Mielke\n* Mathieu Gagne\n* Matt Ezell\n* Matthew Grant\n* Matthew Richardson\n* Matthias Cramer\n* Matthias Eble\n* Matthias Eichler\n* Matthias Flacke\n* Matthias Flittner\n* Matthias Kerk\n* Matthieu Kermagoret\n* Matthieu Kermagoret\n* Mattias Ryrlen\n* Max Schubert\n* Max Sikstrom\n* Michael Anthon\n* Michael Bailey\n* Michael Bunk\n* Michael Little\n* Michael Lubben\n* Michael Marineau\n* Michael O'Reilly\n* Michael Smedius\n* Michal Zimen\n* Michelle Craft\n* Mika Fischer\n* Mike Bird\n* Mike Dorman\n* Mike McHenry\n* Mindaugas Riauba\n* Mitch Wright \n* Moshe Sharon\n* Nate Shafer\n* Nathan Grennan\n* Nicholas Tang\n* Nick Cleaton\n* Nick Reinking\n* Nick Shore\n* Nikola Vassilev\n* Olivier Beytrison\n* Olivier Jan\n* Patrick Proy\n* Patrik Halfar\n* Paul Kent\n* Paul Pot\n* Pavel Satrapa\n* Pawel Zuzelski\n* Pedro Leite\n* Percy Jahn\n* Perry Clarke\n* Peter Ringe\n* Peter Valdemar Morch\n* Peter Westlake\n* Petr Adamec\n* Petya Kohts\n* Phil Mayers\n* Phil Randal\n* Phil Walther\n* Ralph Rossner\n* Ray Bengen\n* Remi Paulmier\n* Rene Klootwijk\n* Ricardo Maraschini\n* Richard Mayhew\n* Rob Enders\n* Rob Patrick\n* Rob Remus\n* Robert August Vincent II\n* Robert Gash\n* Robert Thompson\n* Roberto Marrodan\n* Robin Kearney\n* Robin Sonefors\n* Ronald Ho\n* Rostislav Opo\u010densk\u00fd\n* Russell Scibetti\n* Ryan Skorstad\n* Ryoji Kobayashi\n* Sam Howard\n* Sean Finney\n* Sebastian Guarino\n* Sebastien Barbereau\n* Sergio Guzman\n* Shad Lords\n* Simon Beale\n* Stanley Hopcroft\n* Stefan Rompf\n* Stefan Schurtz\n* Stephane Urbanovski\n* Stephen Davies\n* Stephen Gran\n* Steve Underwood\n* Steven Pokrandt\n* Stewart James\n* Stig Jacobsen\n* Subhendu Ghosh\n* SUSE Linux Team\n* Sven Nierlein\n* Sven Strickroth\n* Sven-G\u00f6ran Bergh\n* Sylvain Falardeau\n* Szabo Gabor\n* Thomas Dohl\n* Thomas Dunkel\n* Thomas Guyot-Sionnest\n* Thomas Hepper\n* Thomas Sebastien\n* Thomas Stolle\n* Tim Starling\n* Tim Wilde\n* Time Niemueller\n* Tobias Klausmann\n* Tobias Mucke\n* Todd Green\n* Todd Wheeler\n* Tom Bertelson\n* Tom De Blende\n* Tom Welsh\n* Tomer Okavi\n* Ton Voon\n* Torsten Huebler\n* Tyler Lund\n* Uwe Knop\n* Uwe Knop\n* Vadim Okun\n* Volkan Yazici\n* Volker Aust\n* William Leibzon\n* William Preston\n* Wolfgang Barth\n* xoubih\n* Yves Rubin\n* Zakhar Kleyman\n", "/*****************************************************************************\n *\n * LOGGING.C - Log file functions for use with Nagios\n *\n *\n * License:\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 2 as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n *\n *****************************************************************************/\n\n#include \"../include/config.h\"\n#include \"../include/common.h\"\n#include \"../include/statusdata.h\"\n#include \"../include/macros.h\"\n#include \"../include/nagios.h\"\n#include \"../include/broker.h\"\n#include <fcntl.h>\n\n\nstatic FILE *debug_file_fp;\nstatic FILE *log_fp;\n\n/******************************************************************/\n/************************ LOGGING FUNCTIONS ***********************/\n/******************************************************************/\n\n/* write something to the console */\nstatic void write_to_console(char *buffer) {\n\t/* should we print to the console? */\n\tif(daemon_mode == FALSE)\n\t\tprintf(\"%s\\n\", buffer);\n\t}\n\n\n/* write something to the log file, syslog, and possibly the console */\nstatic void write_to_logs_and_console(char *buffer, unsigned long data_type, int display) {\n\tregister int len = 0;\n\tregister int x = 0;\n\n\t/* strip unnecessary newlines */\n\tlen = strlen(buffer);\n\tfor(x = len - 1; x >= 0; x--) {\n\t\tif(buffer[x] == '\\n')\n\t\t\tbuffer[x] = '\\x0';\n\t\telse\n\t\t\tbreak;\n\t\t}\n\n\t/* write messages to the logs */\n\twrite_to_all_logs(buffer, data_type);\n\n\t/* write message to the console */\n\tif(display == TRUE) {\n\n\t\t/* don't display warnings if we're just testing scheduling */\n\t\tif(test_scheduling == TRUE && data_type == NSLOG_VERIFICATION_WARNING)\n\t\t\treturn;\n\n\t\twrite_to_console(buffer);\n\t\t}\n\t}\n\n\n/* The main logging function */\nvoid logit(int data_type, int display, const char *fmt, ...) {\n\tva_list ap;\n\tchar *buffer = NULL;\n\n\tva_start(ap, fmt);\n\tif(vasprintf(&buffer, fmt, ap) > 0) {\n\t\twrite_to_logs_and_console(buffer, data_type, display);\n\t\tfree(buffer);\n\t\t}\n\tva_end(ap);\n\t}\n\n\n/* write something to the log file and syslog facility */\nint write_to_all_logs(char *buffer, unsigned long data_type) {\n\n\t/* write to syslog */\n\twrite_to_syslog(buffer, data_type);\n\n\t/* write to main log */\n\twrite_to_log(buffer, data_type, NULL);\n\n\treturn OK;\n\t}\n\n\n/* write something to the log file and syslog facility */\nstatic void write_to_all_logs_with_timestamp(char *buffer, unsigned long data_type, time_t *timestamp) {\n\t/* write to syslog */\n\twrite_to_syslog(buffer, data_type);\n\n\t/* write to main log */\n\twrite_to_log(buffer, data_type, timestamp);\n\t}\n\n\nstatic FILE *open_log_file(void)\n{\n\tint fh;\n\tstruct stat st;\n\n\tif(log_fp) /* keep it open unless we rotate */\n\t\treturn log_fp;\n\n\tif ((fh = open(log_file, O_RDWR|O_APPEND|O_CREAT|O_NOFOLLOW, S_IRUSR|S_IWUSR)) == -1) {\n\t\tif (daemon_mode == FALSE)\n\t\t\tprintf(\"Warning: Cannot open log file '%s' for writing\\n\", log_file);\n\t\treturn NULL;\n\t}\n\tlog_fp = fdopen(fh, \"a+\");\n\tif(log_fp == NULL) {\n\t\tif (daemon_mode == FALSE)\n\t\t\tprintf(\"Warning: Cannot open log file '%s' for writing\\n\", log_file);\n\t\treturn NULL;\n\t\t}\n\n\tif ((fstat(fh, &st)) == -1) {\n\t\tlog_fp = NULL;\n\t\tclose(fh);\n\t\tif (daemon_mode == FALSE)\n\t\t\tprintf(\"Warning: Cannot fstat log file '%s'\\n\", log_file);\n\t\treturn NULL;\n\t}\n\tif (st.st_nlink != 1 || (st.st_mode & S_IFMT) != S_IFREG) {\n\t\tlog_fp = NULL;\n\t\tclose(fh);\n\t\tif (daemon_mode == FALSE)\n\t\t\tprintf(\"Warning: log file '%s' has an invalid mode\\n\", log_file);\n\t\treturn NULL;\n\t}\n\n\t(void)fcntl(fileno(log_fp), F_SETFD, FD_CLOEXEC);\n\treturn log_fp;\n}\n\nint fix_log_file_owner(uid_t uid, gid_t gid)\n{\n\tint r1 = 0, r2 = 0;\n\n\tif (!(log_fp = open_log_file()))\n\t\treturn -1;\n\tr1 = fchown(fileno(log_fp), uid, gid);\n\n\tif (open_debug_log() != OK)\n\t\treturn -1;\n\tif (debug_file_fp)\n\t\tr2 = fchown(fileno(debug_file_fp), uid, gid);\n\n\t/* return 0 if both are 0 and otherwise < 0 */\n\treturn r1 < r2 ? r1 : r2;\n}\n\nint close_log_file(void)\n{\n\tif(!log_fp)\n\t\treturn 0;\n\n\tfflush(log_fp);\n\tfclose(log_fp);\n\tlog_fp = NULL;\n\treturn 0;\n}\n\n/* write something to the nagios log file */\nint write_to_log(char *buffer, unsigned long data_type, time_t *timestamp) {\n\tFILE *fp;\n\ttime_t log_time = 0L;\n\n\tif(buffer == NULL)\n\t\treturn ERROR;\n\n\t/* don't log anything if we're not actually running... */\n\tif(verify_config || test_scheduling == TRUE)\n\t\treturn OK;\n\n\t/* make sure we can log this type of entry */\n\tif(!(data_type & logging_options))\n\t\treturn OK;\n\n\tfp = open_log_file();\n\tif (fp == NULL)\n\t\treturn ERROR;\n\t/* what timestamp should we use? */\n\tif(timestamp == NULL)\n\t\ttime(&log_time);\n\telse\n\t\tlog_time = *timestamp;\n\n\t/* strip any newlines from the end of the buffer */\n\tstrip(buffer);\n\n\t/* write the buffer to the log file */\n\tfprintf(fp, \"[%llu] %s\\n\", (unsigned long long)log_time, buffer);\n\tfflush(fp);\n\n#ifdef USE_EVENT_BROKER\n\t/* send data to the event broker */\n\tbroker_log_data(NEBTYPE_LOG_DATA, NEBFLAG_NONE, NEBATTR_NONE, buffer, data_type, log_time, NULL);\n#endif\n\n\treturn OK;\n\t}\n\n\n/* write something to the syslog facility */\nint write_to_syslog(char *buffer, unsigned long data_type) {\n\n\tif(buffer == NULL)\n\t\treturn ERROR;\n\n\t/* don't log anything if we're not actually running... */\n\tif(verify_config || test_scheduling == TRUE)\n\t\treturn OK;\n\n\t/* bail out if we shouldn't write to syslog */\n\tif(use_syslog == FALSE)\n\t\treturn OK;\n\n\t/* make sure we should log this type of entry */\n\tif(!(data_type & syslog_options))\n\t\treturn OK;\n\n\t/* write the buffer to the syslog facility */\n\tsyslog(LOG_USER | LOG_INFO, \"%s\", buffer);\n\n\treturn OK;\n\t}\n\n\n/* write a service problem/recovery to the nagios log file */\nint log_service_event(service *svc) {\n\tchar *temp_buffer = NULL;\n\tunsigned long log_options = 0L;\n\thost *temp_host = NULL;\n\n\t/* don't log soft errors if the user doesn't want to */\n\tif(svc->state_type == SOFT_STATE && !log_service_retries)\n\t\treturn OK;\n\n\t/* get the log options */\n\tif(svc->current_state == STATE_UNKNOWN)\n\t\tlog_options = NSLOG_SERVICE_UNKNOWN;\n\telse if(svc->current_state == STATE_WARNING)\n\t\tlog_options = NSLOG_SERVICE_WARNING;\n\telse if(svc->current_state == STATE_CRITICAL)\n\t\tlog_options = NSLOG_SERVICE_CRITICAL;\n\telse\n\t\tlog_options = NSLOG_SERVICE_OK;\n\n\t/* find the associated host */\n\tif((temp_host = svc->host_ptr) == NULL)\n\t\treturn ERROR;\n\n\tasprintf(&temp_buffer, \"SERVICE ALERT: %s;%s;%s;%s;%d;%s\\n\",\n\t\t\t svc->host_name, svc->description,\n\t\t\t service_state_name(svc->current_state),\n\t\t\t state_type_name(svc->state_type),\n\t\t\t svc->current_attempt,\n\t\t\t (svc->plugin_output == NULL) ? \"\" : svc->plugin_output);\n\n\twrite_to_all_logs(temp_buffer, log_options);\n\tfree(temp_buffer);\n\n\treturn OK;\n\t}\n\n\n/* write a host problem/recovery to the log file */\nint log_host_event(host *hst) {\n\tchar *temp_buffer = NULL;\n\tunsigned long log_options = 0L;\n\n\t/* get the log options */\n\tif(hst->current_state == HOST_DOWN)\n\t\tlog_options = NSLOG_HOST_DOWN;\n\telse if(hst->current_state == HOST_UNREACHABLE)\n\t\tlog_options = NSLOG_HOST_UNREACHABLE;\n\telse\n\t\tlog_options = NSLOG_HOST_UP;\n\n\tasprintf(&temp_buffer, \"HOST ALERT: %s;%s;%s;%d;%s\\n\",\n\t\t\t hst->name,\n\t\t\t host_state_name(hst->current_state),\n\t\t\t state_type_name(hst->state_type),\n\t\t\t hst->current_attempt,\n\t\t\t (hst->plugin_output == NULL) ? \"\" : hst->plugin_output);\n\n\twrite_to_all_logs(temp_buffer, log_options);\n\n\tmy_free(temp_buffer);\n\n\treturn OK;\n\t}\n\n\n/* logs host states */\nint log_host_states(int type, time_t *timestamp) {\n\tchar *temp_buffer = NULL;\n\thost *temp_host = NULL;;\n\n\t/* bail if we shouldn't be logging initial states */\n\tif(type == INITIAL_STATES && log_initial_states == FALSE)\n\t\treturn OK;\n\n\tfor(temp_host = host_list; temp_host != NULL; temp_host = temp_host->next) {\n\n\t\tasprintf(&temp_buffer, \"%s HOST STATE: %s;%s;%s;%d;%s\\n\", (type == INITIAL_STATES) ? \"INITIAL\" : \"CURRENT\",\n\t\t\t\t temp_host->name,\n\t\t\t\t host_state_name(temp_host->current_state),\n\t\t\t\t state_type_name(temp_host->state_type),\n\t\t\t\t temp_host->current_attempt,\n\t\t\t\t (temp_host->plugin_output == NULL) ? \"\" : temp_host->plugin_output);\n\n\t\twrite_to_all_logs_with_timestamp(temp_buffer, NSLOG_INFO_MESSAGE, timestamp);\n\n\t\tmy_free(temp_buffer);\n\t\t}\n\n\treturn OK;\n\t}\n\n\n/* logs service states */\nint log_service_states(int type, time_t *timestamp) {\n\tchar *temp_buffer = NULL;\n\tservice *temp_service = NULL;\n\thost *temp_host = NULL;;\n\n\t/* bail if we shouldn't be logging initial states */\n\tif(type == INITIAL_STATES && log_initial_states == FALSE)\n\t\treturn OK;\n\n\tfor(temp_service = service_list; temp_service != NULL; temp_service = temp_service->next) {\n\n\t\t/* find the associated host */\n\t\tif((temp_host = temp_service->host_ptr) == NULL)\n\t\t\tcontinue;\n\n\t\tasprintf(&temp_buffer, \"%s SERVICE STATE: %s;%s;%s;%s;%d;%s\\n\",\n\t\t\t\t (type == INITIAL_STATES) ? \"INITIAL\" : \"CURRENT\",\n\t\t\t\t temp_service->host_name, temp_service->description,\n\t\t\t\t service_state_name(temp_service->current_state),\n\t\t\t\t state_type_name(temp_service->state_type),\n\t\t\t\t temp_service->current_attempt,\n\t\t\t\t temp_service->plugin_output);\n\n\t\twrite_to_all_logs_with_timestamp(temp_buffer, NSLOG_INFO_MESSAGE, timestamp);\n\n\t\tmy_free(temp_buffer);\n\t\t}\n\n\treturn OK;\n\t}\n\n\n/* rotates the main log file */\nint rotate_log_file(time_t rotation_time) {\n\tchar *temp_buffer = NULL;\n\tchar method_string[16] = \"\";\n\tchar *log_archive = NULL;\n\tstruct tm *t, tm_s;\n\tint rename_result = 0;\n\tint stat_result = -1;\n\tstruct stat log_file_stat;\n\tstruct stat archive_stat;\n\tint archive_stat_result;\n\n\tif(log_rotation_method == LOG_ROTATION_NONE) {\n\t\treturn OK;\n\t\t}\n\telse if(log_rotation_method == LOG_ROTATION_HOURLY)\n\t\tstrcpy(method_string, \"HOURLY\");\n\telse if(log_rotation_method == LOG_ROTATION_DAILY)\n\t\tstrcpy(method_string, \"DAILY\");\n\telse if(log_rotation_method == LOG_ROTATION_WEEKLY)\n\t\tstrcpy(method_string, \"WEEKLY\");\n\telse if(log_rotation_method == LOG_ROTATION_MONTHLY)\n\t\tstrcpy(method_string, \"MONTHLY\");\n\telse\n\t\treturn ERROR;\n\n\t/* update the last log rotation time and status log */\n\tlast_log_rotation = time(NULL);\n\tupdate_program_status(FALSE);\n\n\tt = localtime_r(&rotation_time, &tm_s);\n\n\tstat_result = stat(log_file, &log_file_stat);\n\n\tclose_log_file();\n\n\t/* get the archived filename to use */\n\tasprintf(&log_archive, \"%s%snagios-%02d-%02d-%d-%02d.log\", log_archive_path, (log_archive_path[strlen(log_archive_path) - 1] == '/') ? \"\" : \"/\", t->tm_mon + 1, t->tm_mday, t->tm_year + 1900, t->tm_hour);\n\n\t/* HACK: If the archive exists, don't overwrite it. This is a hack\n\t\tbecause the real problem is that some log rotations are executed\n\t\tearly and as a result the next log rotatation is scheduled for \n\t\tthe same time as the one that ran early */\n\tarchive_stat_result = stat(log_archive, &archive_stat);\n\tif((0 == archive_stat_result) || \n\t\t\t((-1 == archive_stat_result) && (ENOENT != errno))) {\n\t\treturn OK;\n\t}\n\n\t/* rotate the log file */\n\trename_result = my_rename(log_file, log_archive);\n\tlog_fp = open_log_file();\n\tif (log_fp == NULL)\n\t\treturn ERROR;\n\n\tif(rename_result) {\n\t\tmy_free(log_archive);\n\t\treturn ERROR;\n\t\t}\n\n\t/* record the log rotation after it has been done... */\n\tasprintf(&temp_buffer, \"LOG ROTATION: %s\\n\", method_string);\n\twrite_to_all_logs_with_timestamp(temp_buffer, NSLOG_PROCESS_INFO, &rotation_time);\n\tmy_free(temp_buffer);\n\n\t/* record log file version format */\n\twrite_log_file_info(&rotation_time);\n\n\tif(stat_result == 0) {\n\t\tchmod(log_file, log_file_stat.st_mode);\n\t\tchown(log_file, log_file_stat.st_uid, log_file_stat.st_gid);\n\t\t}\n\n\t/* log current host and service state if activated */\n\tif(log_current_states==TRUE) {\n\t\tlog_host_states(CURRENT_STATES, &rotation_time);\n\t\tlog_service_states(CURRENT_STATES, &rotation_time);\n\t}\n\n\t/* free memory */\n\tmy_free(log_archive);\n\n\treturn OK;\n\t}\n\n\n/* record log file version/info */\nint write_log_file_info(time_t *timestamp) {\n\tchar *temp_buffer = NULL;\n\n\t/* write log version */\n\tasprintf(&temp_buffer, \"LOG VERSION: %s\\n\", LOG_VERSION_2);\n\twrite_to_all_logs_with_timestamp(temp_buffer, NSLOG_PROCESS_INFO, timestamp);\n\tmy_free(temp_buffer);\n\n\treturn OK;\n\t}\n\n\n/* opens the debug log for writing */\nint open_debug_log(void)\n{\n\tint fh;\n\tstruct stat st;\n\n\t/* don't do anything if we're not actually running... */\n\tif(verify_config || test_scheduling == TRUE)\n\t\treturn OK;\n\n\t/* don't do anything if we're not debugging */\n\tif(debug_level == DEBUGL_NONE)\n\t\treturn OK;\n\n\tif ((fh = open(debug_file, O_RDWR|O_APPEND|O_CREAT|O_NOFOLLOW, S_IRUSR|S_IWUSR)) == -1)\n\t\treturn ERROR;\n\tif((debug_file_fp = fdopen(fh, \"a+\")) == NULL)\n\t\treturn ERROR;\n\n\tif ((fstat(fh, &st)) == -1) {\n\t\tdebug_file_fp = NULL;\n\t\tclose(fh);\n\t\treturn ERROR;\n\t}\n\tif (st.st_nlink != 1 || (st.st_mode & S_IFMT) != S_IFREG) {\n\t\tdebug_file_fp = NULL;\n\t\tclose(fh);\n\t\treturn ERROR;\n\t}\n\n\t(void)fcntl(fh, F_SETFD, FD_CLOEXEC);\n\n\treturn OK;\n\t}\n\n\n/* closes the debug log */\nint close_debug_log(void) {\n\n\tif(debug_file_fp != NULL)\n\t\tfclose(debug_file_fp);\n\n\tdebug_file_fp = NULL;\n\n\treturn OK;\n\t}\n\n\n/* write to the debug log */\nint log_debug_info(int level, int verbosity, const char *fmt, ...) {\n\tva_list ap;\n\tchar *tmppath = NULL;\n\tstruct timeval current_time;\n\n\tif(!(debug_level == DEBUGL_ALL || (level & debug_level)))\n\t\treturn OK;\n\n\tif(verbosity > debug_verbosity)\n\t\treturn OK;\n\n\tif(debug_file_fp == NULL)\n\t\treturn ERROR;\n\n\t/* write the timestamp */\n\tgettimeofday(&current_time, NULL);\n\tfprintf(debug_file_fp, \"[%lu.%06lu] [%03d.%d] [pid=%lu] \", current_time.tv_sec, current_time.tv_usec, level, verbosity, (unsigned long)getpid());\n\n\t/* write the data */\n\tva_start(ap, fmt);\n\tvfprintf(debug_file_fp, fmt, ap);\n\tva_end(ap);\n\n\t/* flush, so we don't have problems tailing or when fork()ing */\n\tfflush(debug_file_fp);\n\n\t/* if file has grown beyond max, rotate it */\n\tif((unsigned long)ftell(debug_file_fp) > max_debug_file_size && max_debug_file_size > 0L) {\n\n\t\t/* close the file */\n\t\tclose_debug_log();\n\n\t\t/* rotate the log file */\n\t\tasprintf(&tmppath, \"%s.old\", debug_file);\n\t\tif(tmppath) {\n\n\t\t\t/* unlink the old debug file */\n\t\t\tunlink(tmppath);\n\n\t\t\t/* rotate the debug file */\n\t\t\tmy_rename(debug_file, tmppath);\n\n\t\t\t/* free memory */\n\t\t\tmy_free(tmppath);\n\t\t\t}\n\n\t\t/* open a new file */\n\t\topen_debug_log();\n\t\t}\n\n\treturn OK;\n\t}\n"], "filenames": ["Changelog", "THANKS", "base/logging.c"], "buggy_code_start_loc": [3, 72, 114], "buggy_code_end_loc": [3, 72, 464], "fixing_code_start_loc": [4, 73, 115], "fixing_code_end_loc": [10, 74, 502], "type": "CWE-264", "message": "base/logging.c in Nagios Core before 4.2.4 allows local users with access to an account in the nagios group to gain root privileges via a symlink attack on the log file.  NOTE: this can be leveraged by remote attackers using CVE-2016-9565.", "other": {"cve": {"id": "CVE-2016-9566", "sourceIdentifier": "cve@mitre.org", "published": "2016-12-15T22:59:00.537", "lastModified": "2018-12-25T11:29:01.790", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "base/logging.c in Nagios Core before 4.2.4 allows local users with access to an account in the nagios group to gain root privileges via a symlink attack on the log file.  NOTE: this can be leveraged by remote attackers using CVE-2016-9565."}, {"lang": "es", "value": "base/logging.c en Nagios Core en versiones anteriores a 4.2.4 permite a usuarios locales con acceso a una cuenta en el grupo nagios obtener privilegios a trav\u00e9s de un ataque de symlink al archivo de inicio de sesi\u00f3n. NOTA: esto puede ser aprovechado por atacantes remotos usando CVE-2016-9565."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 7.2}, "baseSeverity": "HIGH", "exploitabilityScore": 3.9, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-264"}, {"lang": "en", "value": "CWE-59"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:nagios:nagios:*:*:*:*:*:*:*:*", "versionEndIncluding": "4.2.3", "matchCriteriaId": "2C4E32CA-1439-4B07-BBB2-38DCD001BD6A"}]}]}], "references": [{"url": "http://rhn.redhat.com/errata/RHSA-2017-0211.html", "source": "cve@mitre.org"}, {"url": "http://rhn.redhat.com/errata/RHSA-2017-0212.html", "source": "cve@mitre.org"}, {"url": "http://rhn.redhat.com/errata/RHSA-2017-0213.html", "source": "cve@mitre.org"}, {"url": "http://rhn.redhat.com/errata/RHSA-2017-0214.html", "source": "cve@mitre.org"}, {"url": "http://rhn.redhat.com/errata/RHSA-2017-0258.html", "source": "cve@mitre.org"}, {"url": "http://rhn.redhat.com/errata/RHSA-2017-0259.html", "source": "cve@mitre.org"}, {"url": "http://seclists.org/fulldisclosure/2016/Dec/58", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://www.securityfocus.com/bid/94919", "source": "cve@mitre.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "http://www.securitytracker.com/id/1037487", "source": "cve@mitre.org"}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1402869", "source": "cve@mitre.org", "tags": ["Issue Tracking"]}, {"url": "https://github.com/NagiosEnterprises/nagioscore/commit/c29557dec91eba2306f5fb11b8da4474ba63f8c4", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch"]}, {"url": "https://legalhackers.com/advisories/Nagios-Exploit-Root-PrivEsc-CVE-2016-9566.html", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2018/12/msg00014.html", "source": "cve@mitre.org"}, {"url": "https://security.gentoo.org/glsa/201612-51", "source": "cve@mitre.org"}, {"url": "https://security.gentoo.org/glsa/201702-26", "source": "cve@mitre.org"}, {"url": "https://security.gentoo.org/glsa/201710-20", "source": "cve@mitre.org"}, {"url": "https://www.exploit-db.com/exploits/40921/", "source": "cve@mitre.org"}, {"url": "https://www.nagios.org/projects/nagios-core/history/4x/", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}]}, "github_commit_url": "https://github.com/NagiosEnterprises/nagioscore/commit/c29557dec91eba2306f5fb11b8da4474ba63f8c4"}}