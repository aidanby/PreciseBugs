{"buggy_code": ["<?php\n\n/**\n * labyrinth.inc.php\n *\n * Functions for creating a web page with bogus links in order to entrap\n * web scanners.\n *\n * All code Copyright (c) 2010-2011, Ben Jackson and Mayhemic Labs - \n * bbj@mayhemiclabs.com. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code mustu retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of the author nor the names of contributors may be\n *       used to endorse or promote products derived from this software without\n *       specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n \nclass Labyrinth {\n\t\n\tvar $dbhandle;\n\tvar $crawler_info;\n\tvar $crawler_ip;\n\tvar $crawler_useragent;\n\n\tpublic $new;\n\n\tpublic function Labyrinth($ip,$useragent){\n\t\tglobal $config;\n\t\tmt_srand(Labyrinth::MakeSeed());\n\n\t\t$this->crawler_ip = $ip;\n\t\t$this->crawler_useragent = $useragent;\n\n\t\t$this->dbhandle = new SQLiteDatabase($config['tracking_db']);\n\t\t$this->crawler_info = $this->dbhandle->query(\"SELECT crawler_ip FROM crawlers WHERE crawler_ip='$ip' AND crawler_useragent='$useragent'\");\n\t}\n\n\tfunction CheckForSearchEngines(){\n\t\tswitch(true){\n\t\t\tcase preg_match(\"/Google/\",$this->crawler_useragent):\n\t\t\tcase preg_match(\"/Yandex/\",$this->crawler_useragent):\n\t\t\tcase preg_match(\"/Openfind/\",$this->crawler_useragent):\n\t\t\tcase preg_match(\"/msnbot/\",$this->crawler_useragent):\n\t\t\tcase preg_match(\"/bingbot/\",$this->crawler_useragent):\n\t\t\tcase preg_match(\"/Slurp/\",$this->crawler_useragent):\n\t\t\tcase preg_match(\"/Yahoo/\",$this->crawler_useragent):\n\t\t\tcase preg_match(\"/Architext/\",$this->crawler_useragent):\n\t\t\t\treturn true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction MakeSeed(){\n\t\tlist($usec, $sec) = explode(' ', microtime());\n\t\treturn (float) $sec + ((float) $usec * 123456);\n\t}\n\n\tfunction ProcessText($text, $directory){\n\n\t\tglobal $config;\n\n\t\t$link = mt_rand(0,100);\n\n\t\tif ($link < 10){\n\t\t\t$text = trim($text);\n\t\t\t$link = base64_encode(mt_rand(0,100000000));\n\t\t\t$link = str_replace('=','',$link);\n\n\t\t\tif ($config['bogus_email']['enabled']){\n\t\t\t\t$email_link = mt_rand(0,100);\n\t\t\t\tif ($email_link <= $config['bogus_email']['probability']){\n\t\t\t\t\treturn '<a href=\"mailto:' . $link . '@' . $config['bogus_email']['domain'] . '\">' . $text . '</a> ';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn '<a href=\"' . $directory . '/' . $link . '\">' . $text . '</a> ';\n\t\t}else{\n\t\t\treturn \"$text\";\n\t\t}\n\t}\n\n\tfunction SpinTheWheelOfErrors(){\n\t\t$error_chance = rand(0,100);\n\n\t\t$error_string = false;\n\n\t\tif ($error_chance == 16){\n\t\t\t$error_string = \"HTTP/1.1 404 Not Found\";\n\t\t}elseif ($error_chance == 23){\n\t\t\t$error_string = \"HTTP/1.1 403 Forbidden\";\n\t\t}elseif ($error_chance == 42){\n\t\t\t#Included just for the WTF Factor\n\t\t\t$error_string = \"HTTP/1.1 402 Payment Required\";\n\t\t}\n\n\t\tif ($error_string){\n\t\t\theader($error_string);\n\t\t\texit;\n\t\t}\n\t}\n\n\tfunction GenerateAlert($message=\"We got a live one!\"){\n\t\tglobal $config;\n\n\t\t//Have we seen this crawler recently?\t\t\n\t\t$last_seen_query = $this->dbhandle->query(\"SELECT strftime('%s',datetime('now','localtime')) - strftime('%s',last_alert) FROM crawlers WHERE crawler_ip='\" . $this->crawler_ip . \"' AND crawler_useragent='\" . $this->crawler_useragent . \"'\") or die(sqlite_error_string($this->dbhandle->lastError()));;\n\t\t\n\t\t$time = $last_seen_query->fetchSingle();\n\n\n\n\n\t\tif (($time == 0) || ($time > 3600)){\n\t\t\tif ($config['alert_ids']['enabled']){\n\t\t\t\tprint $config['alert_ids']['text'] . ' ';\n\t\t\t}\n\n\t\t\tif ($config['alert_email']['enabled']){\n\t\t\t\tmail($config['alert_email']['address'], \"WebLabyrinth Alert - \" . $this->crawler_ip, \"$message\\n\\nIP: \"  . $this->crawler_ip . \"\\nUser Agent: \" . $this->crawler_useragent);\n\t\t\t}\n\n\t\t\tif ($config['alert_syslog']['enabled']){\n\t\t\t\topenlog(\"weblabyrinth\", LOG_PID, LOG_LOCAL0);\n\t\t\t\tsyslog(LOG_WARNING, \"ALERT, message=[$message], src_ip=[{$_SERVER['REMOTE_ADDR']}], user_agent=[{$_SERVER['HTTP_USER_AGENT']}]\");\n\t\t\t\tcloselog();\n\t\t\t}\n\n\t\t\t$last_alert_query = $this->dbhandle->query(\"UPDATE crawlers SET last_alert=datetime('now','localtime') WHERE crawler_ip='\" . $this->crawler_ip . \"' AND crawler_useragent='\" . $this->crawler_useragent . \"'\");\n\t\t}\n\t}\n\n\tfunction LogCrawler(){\n\t\tglobal $config;\n\n\t\tif($this->crawler_info->numRows() > 0){\n\t\t\t$this->dbhandle->query(\"UPDATE crawlers SET last_seen = datetime('now','localtime'), num_hits=num_hits+1 WHERE crawler_ip='\" . $this->crawler_ip . \"' AND crawler_useragent='\" . $this->crawler_useragent . \"'\");\n\t\t}else{\n\t\t\t$crawler_rdns = gethostbyaddr($this->crawler_ip);\n\t\t\t$this->dbhandle->query(\"INSERT INTO crawlers(crawler_ip, crawler_rdns, crawler_useragent, first_seen, last_seen, num_hits) VALUES('\" . $this->crawler_ip . \"', '$crawler_rdns', '\" . $this->crawler_useragent . \"', datetime('now','localtime'), datetime('now','localtime'), 1)\");\n\n\t\t\t$this->new = true;\n\t\t\tif($config['alert_on_new']){\n\t\t\t\t$this->GenerateAlert(\"New host logged!\");\n\t\t\t}\n\n\t\t}\n\t}\n}\n?>\n\n\n"], "fixing_code": ["<?php\n\n/**\n * labyrinth.inc.php\n *\n * Functions for creating a web page with bogus links in order to entrap\n * web scanners.\n *\n * All code Copyright (c) 2010-2011, Ben Jackson and Mayhemic Labs - \n * bbj@mayhemiclabs.com. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code mustu retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of the author nor the names of contributors may be\n *       used to endorse or promote products derived from this software without\n *       specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n \nclass Labyrinth {\n\t\n\tvar $dbhandle;\n\tvar $crawler_info;\n\tvar $crawler_ip;\n\tvar $crawler_useragent;\n\n\tpublic $new;\n\n\tpublic function Labyrinth($ip,$useragent){\n\t\tglobal $config;\n\t\tmt_srand(Labyrinth::MakeSeed());\n\n\t\t$this->dbhandle = new SQLiteDatabase($config['tracking_db']);\n\n\t\t$this->crawler_ip = sqlite_escape_string($ip);\n\t\t$this->crawler_useragent = sqlite_escape_string($useragent);\n\n\t\t$this->crawler_info = $this->dbhandle->query(\"SELECT crawler_ip FROM crawlers WHERE crawler_ip='$this->ip' AND crawler_useragent='$this->useragent'\");\n\t}\n\n\tfunction CheckForSearchEngines(){\n\t\tswitch(true){\n\t\t\tcase preg_match(\"/Google/\",$this->crawler_useragent):\n\t\t\tcase preg_match(\"/Yandex/\",$this->crawler_useragent):\n\t\t\tcase preg_match(\"/Openfind/\",$this->crawler_useragent):\n\t\t\tcase preg_match(\"/msnbot/\",$this->crawler_useragent):\n\t\t\tcase preg_match(\"/bingbot/\",$this->crawler_useragent):\n\t\t\tcase preg_match(\"/Slurp/\",$this->crawler_useragent):\n\t\t\tcase preg_match(\"/Yahoo/\",$this->crawler_useragent):\n\t\t\tcase preg_match(\"/Architext/\",$this->crawler_useragent):\n\t\t\t\treturn true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction MakeSeed(){\n\t\tlist($usec, $sec) = explode(' ', microtime());\n\t\treturn (float) $sec + ((float) $usec * 123456);\n\t}\n\n\tfunction ProcessText($text, $directory){\n\n\t\tglobal $config;\n\n\t\t$link = mt_rand(0,100);\n\n\t\tif ($link < 10){\n\t\t\t$text = trim($text);\n\t\t\t$link = base64_encode(mt_rand(0,100000000));\n\t\t\t$link = str_replace('=','',$link);\n\n\t\t\tif ($config['bogus_email']['enabled']){\n\t\t\t\t$email_link = mt_rand(0,100);\n\t\t\t\tif ($email_link <= $config['bogus_email']['probability']){\n\t\t\t\t\treturn '<a href=\"mailto:' . $link . '@' . $config['bogus_email']['domain'] . '\">' . $text . '</a> ';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn '<a href=\"' . $directory . '/' . $link . '\">' . $text . '</a> ';\n\t\t}else{\n\t\t\treturn \"$text\";\n\t\t}\n\t}\n\n\tfunction SpinTheWheelOfErrors(){\n\t\t$error_chance = rand(0,100);\n\n\t\t$error_string = false;\n\n\t\tif ($error_chance == 16){\n\t\t\t$error_string = \"HTTP/1.1 404 Not Found\";\n\t\t}elseif ($error_chance == 23){\n\t\t\t$error_string = \"HTTP/1.1 403 Forbidden\";\n\t\t}elseif ($error_chance == 42){\n\t\t\t#Included just for the WTF Factor\n\t\t\t$error_string = \"HTTP/1.1 402 Payment Required\";\n\t\t}\n\n\t\tif ($error_string){\n\t\t\theader($error_string);\n\t\t\texit;\n\t\t}\n\t}\n\n\tfunction GenerateAlert($message=\"We got a live one!\"){\n\t\tglobal $config;\n\n\t\t//Have we seen this crawler recently?\t\t\n\t\t$last_seen_query = $this->dbhandle->query(\"SELECT strftime('%s',datetime('now','localtime')) - strftime('%s',last_alert) FROM crawlers WHERE crawler_ip='\" . $this->crawler_ip . \"' AND crawler_useragent='\" . $this->crawler_useragent . \"'\") or die(sqlite_error_string($this->dbhandle->lastError()));;\n\t\t\n\t\t$time = $last_seen_query->fetchSingle();\n\n\n\n\n\t\tif (($time == 0) || ($time > 3600)){\n\t\t\tif ($config['alert_ids']['enabled']){\n\t\t\t\tprint $config['alert_ids']['text'] . ' ';\n\t\t\t}\n\n\t\t\tif ($config['alert_email']['enabled']){\n\t\t\t\tmail($config['alert_email']['address'], \"WebLabyrinth Alert - \" . $this->crawler_ip, \"$message\\n\\nIP: \"  . $this->crawler_ip . \"\\nUser Agent: \" . $this->crawler_useragent);\n\t\t\t}\n\n\t\t\tif ($config['alert_syslog']['enabled']){\n\t\t\t\topenlog(\"weblabyrinth\", LOG_PID, LOG_LOCAL0);\n\t\t\t\tsyslog(LOG_WARNING, \"ALERT, message=[$message], src_ip=[{$_SERVER['REMOTE_ADDR']}], user_agent=[{$_SERVER['HTTP_USER_AGENT']}]\");\n\t\t\t\tcloselog();\n\t\t\t}\n\n\t\t\t$last_alert_query = $this->dbhandle->query(\"UPDATE crawlers SET last_alert=datetime('now','localtime') WHERE crawler_ip='\" . $this->crawler_ip . \"' AND crawler_useragent='\" . $this->crawler_useragent . \"'\");\n\t\t}\n\t}\n\n\tfunction LogCrawler(){\n\t\tglobal $config;\n\n\t\tif($this->crawler_info->numRows() > 0){\n\t\t\t$this->dbhandle->query(\"UPDATE crawlers SET last_seen = datetime('now','localtime'), num_hits=num_hits+1 WHERE crawler_ip='\" . $this->crawler_ip . \"' AND crawler_useragent='\" . $this->crawler_useragent . \"'\");\n\t\t}else{\n\t\t\t$crawler_rdns = gethostbyaddr($this->crawler_ip);\n\t\t\t$this->dbhandle->query(\"INSERT INTO crawlers(crawler_ip, crawler_rdns, crawler_useragent, first_seen, last_seen, num_hits) VALUES('\" . $this->crawler_ip . \"', '$crawler_rdns', '\" . $this->crawler_useragent . \"', datetime('now','localtime'), datetime('now','localtime'), 1)\");\n\n\t\t\t$this->new = true;\n\t\t\tif($config['alert_on_new']){\n\t\t\t\t$this->GenerateAlert(\"New host logged!\");\n\t\t\t}\n\n\t\t}\n\t}\n}\n?>\n\n\n"], "filenames": ["labyrinth.inc.php"], "buggy_code_start_loc": [48], "buggy_code_end_loc": [53], "fixing_code_start_loc": [48], "fixing_code_end_loc": [54], "type": "CWE-89", "message": "A vulnerability classified as critical has been found in weblabyrinth 0.3.1. This affects the function Labyrinth of the file labyrinth.inc.php. The manipulation leads to sql injection. Upgrading to version 0.3.2 is able to address this issue. The name of the patch is 60793fd8c8c4759596d3510641e96ea40e7f60e9. It is recommended to upgrade the affected component. The identifier VDB-220221 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2011-10002", "sourceIdentifier": "cna@vuldb.com", "published": "2023-02-07T17:15:09.180", "lastModified": "2023-02-15T17:15:16.007", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as critical has been found in weblabyrinth 0.3.1. This affects the function Labyrinth of the file labyrinth.inc.php. The manipulation leads to sql injection. Upgrading to version 0.3.2 is able to address this issue. The name of the patch is 60793fd8c8c4759596d3510641e96ea40e7f60e9. It is recommended to upgrade the affected component. The identifier VDB-220221 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.2}, "baseSeverity": "MEDIUM", "exploitabilityScore": 5.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:weblabyrinth_project:weblabyrinth:0.3.1:*:*:*:*:*:*:*", "matchCriteriaId": "E002B2CA-EFC2-4C8C-898F-824C23495DEC"}]}]}], "references": [{"url": "https://code.google.com/archive/p/weblabyrinth/issues/1", "source": "cna@vuldb.com", "tags": ["Exploit", "Issue Tracking"]}, {"url": "https://github.com/rotelok/weblabyrinth/commit/60793fd8c8c4759596d3510641e96ea40e7f60e9", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/weblabyrinth/weblabyrinth-0.3.2.tar.gz", "source": "cna@vuldb.com", "tags": ["Exploit"]}, {"url": "https://vuldb.com/?ctiid.220221", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.220221", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/rotelok/weblabyrinth/commit/60793fd8c8c4759596d3510641e96ea40e7f60e9"}}