{"buggy_code": ["<?php\r\n/*\r\nPlugin Name: IP Blacklist Cloud\r\nPlugin URI: http://wordpress.org/extend/plugins/ip-blacklist-cloud/\r\nDescription: Blacklist IP Addresses from visiting your WordPress website and block usernames from spamming. View details of all failed login attempts.\r\nVersion: 3.42\r\nAuthor: Adeel Ahmed\r\nAuthor URI: http://www.ip-finder.me/\r\n*/\r\n\r\n\r\n\r\n\r\nif ( !defined('ABSPATH') )\r\n\tdie ( 'No direct script access allowed' );\r\n\r\n\r\n\tglobal $check_all_url_open;\r\n\t$check_all_url_open = ini_get('allow_url_fopen');\r\n\r\n\t$this_plugin_url=plugins_url( '/', __FILE__ );\r\n\r\n\tglobal $this_plugin_url;\r\n\r\n\r\nfunction ip_added()\r\n{\r\n\tglobal $wpdb,$found,$IP_global, $IP_error;\r\n\r\n\t$IP=sanitize_text_field($_GET['blacklist']);\r\n\r\n\t//---check if IP is valid IPV4 or not before checking already added---\r\n\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t{\r\n  \r\n\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\r\n\t\t$found=false;\r\n\r\n\t\tif(!$IP_in_DP)\r\n\t\t{\r\n\r\n\t\t\t//---check if IP is valid IPV4 or not before adding to database---\r\n\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t{\r\n\r\n\t\t\t\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\t\t$time=time();\r\n\r\n\t\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) VALUES(%s,%d,%d,%d)\",\r\n\t\t\t\t\tarray($IP,$time,0,0)));\r\n\r\n\t\t\t\t//---post blacklist data to ip-finder.me\r\n\t\t\t\tpost_blacklist_add($IP);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$found=true;\r\n\t\t\t\t$IP_error=true;\r\n\t\t\t}\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$found=true;\r\n\t\t}\r\n\r\n\t\t$IP_global=$IP;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$found=true;\r\n\t\t$IP_error=true;\t\r\n\t}\r\n\r\n}\r\n\r\n\r\nfunction user_added()\r\n{\r\n\tglobal $wpdb,$found,$USER_global, $USER_error;\r\n\r\n\t$USER=$_POST['blacklistuser'];\r\n\t$USER=sanitize_text_field($USER);\r\n\r\n\t$USER_in_DB=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_usernames WHERE USERNAME=%s\",$USER));\r\n\r\n\t$found=false;\r\n\r\n\tif(!$USER_in_DB)\r\n\t{\r\n\r\n\t\tif($USER)\r\n\t\t{\r\n\t\t\t$table=$wpdb->prefix.\"IPBLC_usernames\";\r\n\t\t\t$time=time();\r\n\r\n\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table (USERNAME,timestamp,visits,lastvisit) VALUES(%s,%d,%d,%d)\",\r\n\t\t\tarray($USER,$time,0,0)));\r\n\r\n\t\t\t//---post blacklist data to ip-finder.me\r\n\t\t\t$USER2=urlencode($USER);\r\n\t\t\tpost_blacklist_add_user($USER2);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$found=true;\r\n\t\t\t$USER_error=true;\r\n\t\t}\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$found=true;\r\n\t}\r\n\r\n\t$USER_global=$USER;\r\n}\r\n\r\n\r\n\r\nfunction ip_added_message()\r\n{\r\n\r\n\tglobal $found,$IP_global,$IP_error;\r\n\t$IP=$IP_global;\r\n\r\n\r\n\tif(!$found)\r\n\t{\r\n\r\n?>\r\n<style>\r\n#IPBLC_message_blacklist\r\n{\r\n\r\n\tposition: fixed;\r\n\tbottom: 8px;\r\n\tfloat: right;\r\n\tright: 8px;\r\n\tborder:1px solid #99FF99;\r\n\tbackground-color: #DDFFDD;\r\n\tfont-size: 20px;\r\n\t//font-weight: bold;\r\n\tpadding: 12px;\r\n\tcolor: #000000;\r\n}\r\n</style>\r\n\r\n<?php\r\n\r\n\techo \"<div id=\\\"IPBLC_message_blacklist\\\">$IP added to blacklist. Please comment on <a href=\\\"http://www.ip-finder.me/$IP/\\\" target=\\\"_blank\\\">IP-FINDER.ME</a></div>\";\r\n\r\n\t}\r\n\telse\r\n\t{\r\n?>\r\n\r\n<style>\r\n#IPBLC_message_blacklist\r\n{\r\n\tposition: fixed;\r\n\tbottom: 8px;\r\n\tfloat: right;\r\n\tright: 8px;\r\n\tborder:1px solid #FF9999;\r\n\tbackground-color: #FFDDDD;\r\n\tfont-size: 20px;\r\n\t//font-weight: bold;\r\n\tpadding: 12px;\r\n\tcolor: #000000;\r\n}\r\n</style>\r\n\r\n<?php\r\n\r\n\t\tif(!$IP_error)\r\n\t\t{\r\n\t\t\techo \"<div id=\\\"IPBLC_message_blacklist\\\">$IP already added to blacklist.</div>\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\techo \"<div id=\\\"IPBLC_message_blacklist\\\">$IP is not valid IP Address.</div>\";\r\n\t\t}\r\n\r\n\t}\r\n\r\n\techo \"<script>jQuery('#IPBLC_message_blacklist').delay(8500).fadeOut(6000); jQuery('#IPBLC_message_blacklist').click(function(){ jQuery(this).hide(); });</script>\";\r\n\r\n}\r\n\r\n\r\nfunction user_added_message()\r\n{\r\n\r\n\tglobal $found,$USER_global,$USER_error;\r\n\t$USER=$USER_global;\r\n\r\n\r\n\t$USER=str_replace('\\\"','\"',$USER);\r\n\t$USER=str_replace(\"\\'\",\"'\",$USER);\r\n\t$USER=str_replace(\"\\\\\\'\",\"'\",$USER);\r\n\r\n\tif(!$found)\r\n\t{\r\n\r\n?>\r\n<style>\r\n#IPBLC_message_blacklist\r\n{\r\n\r\n\tposition: fixed;\r\n\tbottom: 8px;\r\n\tfloat: right;\r\n\tright: 8px;\r\n\tborder:1px solid #99FF99;\r\n\tbackground-color: #DDFFDD;\r\n\tfont-size: 20px;\r\n\t//font-weight: bold;\r\n\tpadding: 12px;\r\n\tcolor: #000000;\r\n}\r\n</style>\r\n\r\n<?php\r\n\r\n\techo \"<div id=\\\"IPBLC_message_blacklist\\\">$USER added to blacklist.</a></div>\";\r\n\r\n\t}\r\n\telse\r\n\t{\r\n?>\r\n\r\n<style>\r\n#IPBLC_message_blacklist\r\n{\r\n\tposition: fixed;\r\n\tbottom: 8px;\r\n\tfloat: right;\r\n\tright: 8px;\r\n\tborder:1px solid #FF9999;\r\n\tbackground-color: #FFDDDD;\r\n\tfont-size: 20px;\r\n\t//font-weight: bold;\r\n\tpadding: 12px;\r\n\tcolor: #000000;\r\n}\r\n</style>\r\n\r\n<?php\r\n\r\n\t\tif(!$USER_error)\r\n\t\t{\r\n\t\t\techo \"<div id=\\\"IPBLC_message_blacklist\\\">$USER already added to blacklist.</div>\";\r\n\t\t}\r\n\r\n\t}\r\n\r\n\techo \"<script>jQuery('#IPBLC_message_blacklist').delay(8500).fadeOut(6000); jQuery('#IPBLC_message_blacklist').click(function(){ jQuery(this).hide(); });</script>\";\r\n\r\n}\r\n\r\n\r\nfunction blacklist_failed_login()\r\n{\r\n\r\n\tinclude \"blacklist-failed-login.php\";\r\n}\r\n\r\nfunction page_IPBLC_actions() \r\n{  \r\n\r\n\r\n\tglobal $this_plugin_url;\r\n\r\n\tglobal $wpdb;\r\n\t$newFailed=0;\r\n\t$table1=$wpdb->prefix.\"IPBLC_login_failed\";\r\n\t$table2= $wpdb->prefix.\"IPBLC_blacklist\";\r\n\t$countMain=\"\";\r\n\t$countOld=\"\";\r\n\t$time=time();\r\n\t$days_90=$time-(90*24*60*60);\r\n\r\n\r\n\t$rr=$wpdb->get_results(\"SELECT * FROM $table1 t1 WHERE NOT EXISTS (SELECT 1 FROM $table2 t2 WHERE t1.IP = t2.IP)\");\r\n\t$old=$wpdb->get_results($wpdb->prepare(\"SELECT * FROM $table2 WHERE timestamp<=%d && lastvisit<=%d\",array($days_90,$days_90)));\r\n\r\n\t//print_r($rr);\r\n\r\n\tif($rr)\r\n\t{\r\n\t\t$newFailed=count($rr);\r\n\t\t$countMain='<span class=\"awaiting-mod count-'.$newFailed.'\"><span class=\"pending-count\">'.$newFailed.'</span></span>';\r\n\t}\r\n\r\n\tif($newFailed==0)\r\n\t{\r\n\t\t$newFailed=\"\";\r\n\t\t$countMain=\"\";\r\n\t}\r\n\r\n\tif($old)\r\n\t{\r\n\t\t$countOld='<span class=\"awaiting-mod count-'.count($old).'\"><span class=\"pending-count\">'.count($old).'</span></span>';\r\n\r\n\t}\r\n\r\n\tif($newFailed>0)\r\n\t{\r\n\tadd_menu_page( \"IP Blacklist\", \"IP Blacklist $countMain\", \"manage_options\", \"wp-IPBLC\",\"\",$this_plugin_url.\"icon.png\");\r\n\t}\r\n\telse\r\n\t{\r\n\tadd_menu_page( \"IP Blacklist\", \"IP Blacklist\", \"manage_options\", \"wp-IPBLC\",\"\",$this_plugin_url.\"icon.png\");\r\n\t}\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Settings\", \"Settings\", \"manage_options\", \"wp-IPBLC\", \"blacklist_settings\" );\r\n\r\n\tadd_submenu_page( \"wp-IPBLC\", \"IP Blacklist\", \"IP Blacklist\", \"manage_options\", \"wp-IPBLC-list\", \"blacklist_tool\" );\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Add IP to Blacklist\", \"Add IP to Blacklist\", \"manage_options\", \"wp-IPBLC-Add\", \"blacklist_add\" );\r\n\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Username Blacklist\", \"User Blacklist\", \"manage_options\", \"wp-IPBLC-list-user\", \"blacklist_tool_user\" );\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Add username to Blacklist\", \"Add User to Blacklist\", \"manage_options\", \"wp-IPBLC-Add-User\", \"blacklist_add_user\" );\r\n\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Auto Block\", \"Auto Block\", \"manage_options\", \"wp-IPBLC-auto-block\", \"auto_block\" );\r\n\tif($newFailed>0)\r\n\t{\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Failed Login\", \"<font color=red>Failed Login ($newFailed)</font>\", \"manage_options\", \"wp-IPBLC-failed-login\", \"blacklist_failed_login\" );\r\n\t}\r\n\telse\r\n\t{\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Failed Login\", \"Failed Login\", \"manage_options\", \"wp-IPBLC-failed-login\", \"blacklist_failed_login\" );\r\n\t}\r\n\t//add_submenu_page( \"wp-IPBLC\", \"Blacklist Statistics\", \"Blacklist Statistics\", \"manage_options\", \"wp-IPBLC-stats\", \"blacklist_stats\" );\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Whitelist\", \"Whitelist\", \"manage_options\", \"wp-IPBLC-whitelist\", \"blacklist_whitelist\" );\r\n\r\n\tadd_submenu_page( \"wp-IPBLC\", \"EXTRA SECURITY\", \"EXTRA SECURITY\", \"manage_options\", \"wp-IPBLC-extra\", \"blacklist_extra\" );\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Fixes\", \"Fixes\", \"manage_options\", \"wp-IPBLC-fixes\", \"blacklist_fixes\" );\r\n\r\n\tif($countOld)\r\n\t{\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Old IPs\", \"Old IPs $countOld\", \"manage_options\", \"wp-IPBLC-old-ip\", \"blacklist_old_ip\" );\r\n\r\n\t}\r\n\telse\r\n\t{\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Old IPs\", \"Old IPs\", \"manage_options\",\"wp-IPBLC-old-ip\", \"blacklist_old_ip\" );\r\n\t}\r\n\r\n\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Support\", \"Support\", \"manage_options\", \"wp-IPBLC-support\", \"blacklist_support\" );\r\n\r\n\r\n\r\n\t$IPBLC_cloud_email=get_option('IPBLC_cloud_email');\r\n\t$IPBLC_cloud_key=get_option('IPBLC_cloud_key');\r\n\r\n\tif($IPBLC_cloud_email && $IPBLC_cloud_key)\r\n\t{\r\n\t\t//---post blacklist data to ip-finder.me\r\n\r\n\t\t$data = array('test' => '1');\r\n\r\n\t\t$contextData = array ( \r\n                'method' => 'POST',\r\n\t\t'content' => http_build_query($data),\r\n\t\t'header' => \"Connection: close\\r\\n\". \r\n                        \"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\r\n\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n\t\t$context = stream_context_create (array ( 'http' => $contextData ));\r\n\r\n\r\n\t\t$email2=urlencode($IPBLC_cloud_email);\r\n\r\n$link=\"http://www.ip-finder.me/wp-content/themes/ipfinder/cloudaccount_status.php?email=$email2&website=\".urlencode(site_url()).\"&website_name=\".urlencode(get_bloginfo('name')).\"&cloudkey=\".$IPBLC_cloud_key;\r\n\r\n\t\t$post_to_cloud =  file_get_contents (\r\n\t\t$link,\r\n\t\tfalse,\r\n\t\t$context);\r\n\t\t//echo $post_to_cloud;\r\n\r\n\r\n\t\tif($post_to_cloud!=\"-1\" && $post_to_cloud!=\"-2\")\r\n\t\t{\r\n\t//add_submenu_page( \"wp-IPBLC\", \"Cloud Account Service\", \"Cloud Account Service\", \"manage_options\", \"wp-IPBLC-premium\", \"blacklist_premium\" );\r\n\r\n\t\t}\r\n\t}\r\n} \r\n\r\nfunction blacklist_premium()\r\n{\r\n\t//include \"blacklist-premium.php\";\r\n}\r\n\r\nfunction blacklist_support()\r\n{\r\n\tinclude \"blacklist-support.php\";\r\n}\r\n\r\nfunction blacklist_extra()\r\n{\r\n\tinclude \"blacklist-extra.php\";\r\n}\r\n\r\nfunction blacklist_fixes()\r\n{\r\n\tinclude \"blacklist-fixes.php\";\r\n}\r\n\r\n\r\nfunction blacklist_tool()\r\n{\r\n\tinclude \"blacklist-list.php\";\r\n}\r\n\r\nfunction blacklist_old_ip()\r\n{\r\n\tinclude \"blacklist-old-list.php\";\r\n}\r\n\r\nfunction blacklist_tool_user()\r\n{\r\n\tinclude \"blacklist-list-user.php\";\r\n}\r\n\r\n\r\nfunction blacklist_settings()\r\n{\r\n\r\n\tinclude \"blacklist-settings.php\";\r\n\r\n}\r\nfunction auto_block()\r\n{\r\n\tinclude \"auto-block.php\";\r\n}\r\n\r\n\r\nfunction blacklist_add()\r\n{\r\n\tinclude \"blacklist-add.php\";\r\n}\r\nfunction blacklist_add_user()\r\n{\r\n\tinclude \"blacklist-add-user.php\";\r\n}\r\n\r\nfunction blacklist_whitelist()\r\n{\r\n\tinclude \"whitelist.php\";\r\n}\r\n\r\nfunction blacklist_stats()\r\n{\r\n\t//---post data to ip-finder.me\r\n\r\n\r\n\t\t$data = array('test' => '1');\r\n\r\n\t\t$contextData = array ( \r\n                'method' => 'POST',\r\n\t\t'content' => http_build_query($data),\r\n\t\t'header' => \"Connection: close\\r\\n\". \r\n                        \"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\r\n\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n\t$context = stream_context_create (array ( 'http' => $contextData ));\r\n\r\n \t$link=\"http://www.ip-finder.me/analysis\";\r\n\t$analysis =  file_get_contents (\r\n\t$link,\r\n\tfalse,\r\n\t$context);\r\n\r\n\techo $analysis;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction IPBLC_IP_column( $columns )\r\n{\r\n\r\n\t$columns['IPBLC_IP'] = __( 'Details' );\r\n\t$columns['IPBLC_IP_status'] = __( 'Status' );\r\n\t$columns['IPBLC_IP_spam'] = __( 'Spam Percentage' );\r\n\treturn $columns;\r\n}\r\n\r\nfunction IPBLC_IP_value( $column, $comment_ID )\r\n{\r\n\r\n\tglobal $wpdb;\r\n\r\n\tif ( 'IPBLC_IP' == $column )\r\n\t{\r\n\r\n\t\t$IP=get_comment_author_IP($comment_ID);\r\n\t\t$authorName=get_comment_author($comment_ID);\r\n\r\n\t\techo '<a href=\"http://www.ip-finder.me/'.$IP.'/\" target=\"_blank\" title=\"IP Details on IP-Finder.me\">'.\"$IP</a>\";\r\n\r\n\t\techo '<div class=\"row-actions\">\r\n\t<span class=\"edit\">\r\n\t\t<a href=\"http://www.ip-finder.me/'.$IP.'/\" target=\"_blank\" title=\"IP Details on IP-Finder.me\">IP Details</a>\r\n\t</span> | \r\n\t<span class=\"edit\">';\r\n\r\n\t$my_IP=$_SERVER['REMOTE_ADDR'];\r\n\r\n\t\tif($my_IP!=$IP)\r\n\t\t{\r\n\t\techo '<a href=\"javascript: blacklist_IP(\\''.$IP.'\\','.$comment_ID.');\" title=\"Blacklist IP\">Blacklist IP</a>';\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t\techo \"<b style=\\\"color:#000099\\\"> YOUR IP</b>\";\r\n\t\t}\r\n\t\techo'\r\n\t</span> | \r\n\r\n\t<span class=\"edit\">';\r\n\r\n\r\n\t\tif($my_IP!=$IP)\r\n\t\t{\r\n\t\t\r\n\t\techo '<a href=\"javascript: blacklist_USER(\\''.urlencode($authorName).'\\','.$comment_ID.');\" title=\"Blacklist Username\">Blacklist Username</a>';\r\n\t\t}\r\n\t\t\r\n\r\n\t\techo '\r\n\t</span>\r\n\r\n\t\t</div>\r\n\t'; //---echo end----\r\n\r\n\t}\r\n\r\n\tif ( 'IPBLC_IP_status' == $column )\r\n\t{\r\n\r\n\t\t$IP=get_comment_author_IP($comment_ID);\r\n\t\t$authorName=get_comment_author($comment_ID);\r\n\r\n\r\n\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\r\n\t\tif($IP_in_DP)\r\n\t\t{\r\n\t\t\techo \"IP: <span id=\\\"IPBlack\".\"$comment_ID\\\"><b style=\\\"color:#FF0000\\\"> Blacklisted</b></span><BR>\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\techo \"IP: <span id=\\\"IPBlack\".\"$comment_ID\\\"><b style=\\\"color:#009900\\\"> Neutral</b></span><BR>\";\r\n\t\t}\r\n\r\n/*\r\n\t\t\t$authorName=str_replace(\"\\'\",\"'\",$authorName);\r\n\r\n\t\t\t$authorName=str_replace(\"\\\\\\'\",\"'\",$authorName);\r\n\t\t\t$authorName=str_replace(\"\\\\\\\"\",'\\\"',$authorName);\r\n\t\t\t$authorName=str_replace(\"\\\\\\\"\",'\"',$authorName);\r\n\t\t\t$authorName2=str_replace(\"\\\"\",\"&quot;\",$authorName);\r\n\r\n*/\r\n\t\t\t$authorName2=sanitize_text_field($authorName2);\r\n\r\n\t\t$USERNAME_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_usernames WHERE USERNAME=%s\",$authorName2));\r\n\r\n\t\tif($USERNAME_in_DP)\r\n\t\t{\r\n\t\t\techo \"Username: <span id=\\\"UserBlack\".\"$comment_ID\\\"><b style=\\\"color:#FF0000\\\"> Blacklisted</b></span>\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\techo \"Username: <span id=\\\"UserBlack\".\"$comment_ID\\\"><b style=\\\"color:#009900\\\"> Neutral</b></span>\";\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tif ( 'IPBLC_IP_spam' == $column )\r\n\t{\r\n\r\n\t\t\techo \"<div id=\\\"IPSpam-$comment_ID\\\" class=\\\"IPSpam\\\">N/A</div>\";\r\n\t\t\techo \"<a href=\\\"#\\\" id=\\\"IPSpamAction-$comment_ID\\\" class=\\\"IPSpamAction\\\" name=\\\"$comment_ID\\\">Calculate</a>\";\r\n\t}\r\n\r\n}\r\n\r\nfunction create_sql()\r\n{\r\n\r\n\tglobal $wpdb;\r\n\r\n\tif(!($wpdb->query(\"SELECT * FROM \".$wpdb->prefix.\"IPBLC_login_failed\"))) \r\n\t{\r\n\r\n\t\t$sql = \"CREATE TABLE \".$wpdb->prefix.\"IPBLC_login_failed (\r\n\t\tid INT(60) UNSIGNED NOT NULL AUTO_INCREMENT,\r\n\t\tIP VARCHAR(25) NOT NULL, \r\n\t\tuseragent VARCHAR( 225 ) NOT NULL, \r\n\t\tvariables TEXT NOT NULL, \r\n\t\ttimestamp INT(30) NOT NULL,\r\n\t\tUNIQUE KEY id (id)\r\n\t\t);\";\r\n\r\n\t\trequire_once(ABSPATH . 'wp-admin/includes/upgrade.php');\r\n\t\tdbDelta($sql);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tif(!($wpdb->query(\"SELECT * FROM \".$wpdb->prefix.\"IPBLC_blacklist\"))) \r\n\t{\r\n\r\n\t\t$sql = \"CREATE TABLE \".$wpdb->prefix.\"IPBLC_blacklist (\r\n\t\tid INT(60) UNSIGNED NOT NULL AUTO_INCREMENT,\r\n\t\tIP VARCHAR(25) NOT NULL, \r\n\t\ttimestamp INT( 30 ) NOT NULL,\r\n\t\tvisits INT(50) NOT NULL, \r\n\t\tlastvisit INT(50) NOT NULL, \r\n\t\tUNIQUE KEY id (id)\r\n\t\t);\";\r\n\r\n\t\trequire_once(ABSPATH . 'wp-admin/includes/upgrade.php');\r\n\t\tdbDelta($sql);\r\n\t}\r\n\r\n\tif(!($wpdb->query(\"SELECT * FROM \".$wpdb->prefix.\"IPBLC_usernames\"))) \r\n\t{\r\n\r\n\t\t$sql = \"CREATE TABLE \".$wpdb->prefix.\"IPBLC_usernames (\r\n\t\tid INT(60) UNSIGNED NOT NULL AUTO_INCREMENT,\r\n\t\tUSERNAME TEXT NOT NULL, \r\n\t\ttimestamp INT(30) NOT NULL,\r\n\t\tvisits INT(50) NOT NULL,  \r\n\t\tlastvisit INT(50) NOT NULL,  \r\n\t\tUNIQUE KEY id (id)\r\n\t\t);\";\r\n\r\n\t\trequire_once(ABSPATH . 'wp-admin/includes/upgrade.php');\r\n\t\tdbDelta($sql);\r\n\t}\r\n\r\n\r\n\tif(isset($_GET['blacklist']))\r\n\t{\r\n\r\n\r\n\t\t$referer=sanitize_text_field($_SERVER['HTTP_REFERER']);\r\n\t\tif(strpos($referer,\"edit-comments.php\")>0)\r\n\t\t{\r\n\t\t\tip_added();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tif(isset($_GET['blacklistuser']))\r\n\t{\r\n\r\n\t\t//print_r($_SERVER);\r\n\r\n\t\t$referer=sanitize_text_field($_SERVER['HTTP_REFERER']);\r\n\t\tif(strpos($referer,\"edit-comments.php\")>0)\r\n\t\t{\r\n\t\t\tuser_added();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t$IPBLC_auto_comments=get_option('IPBLC_auto_comments');\r\n\tif(!$IPBLC_auto_comments)\r\n\t{\r\n\t\tupdate_option('IPBLC_auto_comments','2');\r\n\t\t$IPBLC_auto_comments=get_option('IPBLC_auto_comments');\r\n\t}\r\n\r\n\r\n\t$IPBLC_protected=get_option('IPBLC_protected');\r\n\tif(!$IPBLC_protected)\r\n\t{\r\n\t\tupdate_option('IPBLC_protected','2');\r\n\t\t$IPBLC_protected=get_option('IPBLC_protected');\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction IPBLC_blockip()\r\n{\r\n\r\n\tglobal $wpdb;\r\n\r\n\t//---check last update with ip-finder.me site--\r\n\t$time=time();\r\n\t$lastU=get_option('IPBLC_last_update');\r\n\r\n\t$diff=$time-$lastU;\r\n\r\n\t//---send website link to ip-finder.me after every 2 days. (verification of data)\r\n\tif($diff>172800)\r\n\t{\r\n\t\tupdate_option('IPBLC_last_update',$time);\r\n\r\n\t\t$data = array('test' => '1');\r\n\r\n\r\n\t\t$contextData = array ( \r\n\t\t\t'method' => 'POST',\r\n\t\t\t'content' => http_build_query($data),\r\n\t\t\t'header' => \"Connection: close\\r\\n\". \r\n\t\t\t\"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\t\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n\t\t\t$context = stream_context_create(array( 'http' => $contextData ));\r\n$link=\"http://www.ip-finder.me/lastUpdate.php?website=\".urlencode(site_url());\r\n\t\t\t\t\t$post_to_cloud =  file_get_contents (\r\n\t\t\t                  $link,  // page url\r\n\t\t\t                  false,\r\n\t\t\t                  $context);\r\n\t}\r\n\t//--- END -- check last update with ip-finder.me site--\r\n\r\n\t$IP=\"\";\r\n\r\n\tif(isset($_SERVER['REMOTE_ADDR']))\r\n\t{\r\n\t\t$IP=sanitize_text_field($_SERVER['REMOTE_ADDR']);\r\n\t}\r\n\r\n\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t{\r\n\r\n\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\tif($IP_in_DP)\r\n\t\t{\r\n\t\t\t$visits=$wpdb->get_var($wpdb->prepare(\"SELECT visits FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE id=%d\",$IP_in_DP));\r\n\t\t\t$visits=$visits+1;\r\n\r\n\t\t\t$t=time();\r\n\r\n\t\t\t$wpdb->query($wpdb->prepare(\"UPDATE \".$wpdb->prefix.\"IPBLC_blacklist SET `visits`=%d WHERE id=%d\",array($visits,$IP_in_DP)));\r\n\t\t\t$wpdb->query($wpdb->prepare(\"UPDATE \".$wpdb->prefix.\"IPBLC_blacklist SET `lastvisit`=%d WHERE id=%d\",array($t,$IP_in_DP)));\r\n\t\t\r\n\r\n\t\t\t//show 404 error\r\n\t\t\theader(\"Status: 404 Not Found\");\r\n\t\t\theader(\"HTTP/1.0 404 Not Found\");\r\n\r\n\t?>\r\n\r\n\r\n\r\n<head><title><?php echo get_bloginfo('name'); ?></title></head>\r\n<style>\r\n#IPBLC_message_blacklist\r\n{\r\n\tborder:1px solid #FF9999;\r\n\tbackground-color: #FFDDDD;\r\n\tfont-size: 20px;\r\n\t//font-weight: bold;\r\n\tpadding: 12px;\r\n\tcolor: #000000;\r\n\tmargin-top: 50px;\r\n}\r\n\r\n</style>\r\n<center>\r\n<div id=\"IPBLC_message_blacklist\">Your IP <?php echo $IP; ?> has been blacklisted!</div><BR>\r\n</center>\r\n\t<?php\r\n\t\texit();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t$author=\"\";\r\n\tif(isset($_POST['author']))\r\n\t{\r\n\t\t$author=$_POST['author'];\r\n\t\t$USER=sanitize_text_field($author);\r\n\r\n\r\n\t\t$USER_in_DB=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_usernames WHERE USERNAME=%s\",$USER));\r\n\t\tif($USER_in_DB)\r\n\t\t{\r\n\r\n\t\t\t$author=str_replace('\\\"','\"',$author);\r\n\t\t\t$author=str_replace(\"\\'\",\"'\",$author);\r\n\t\t\t$author=str_replace(\"\\\\\\'\",\"'\",$author);\r\n\r\n\r\n\r\n\t\t$visits=$wpdb->get_var($wpdb->prepare(\"SELECT visits FROM \".$wpdb->prefix.\"IPBLC_usernames WHERE id=%d\",$USER_in_DB));\r\n\t\t$visits=$visits+1;\r\n\t\t$t=time();\r\n\r\n\t\t$wpdb->query($wpdb->prepare(\"UPDATE \".$wpdb->prefix.\"IPBLC_usernames SET `visits`=%d WHERE id=%d\",array($visits,$USER_in_DB)));\r\n\t\t$wpdb->query($wpdb->prepare(\"UPDATE \".$wpdb->prefix.\"IPBLC_usernames SET `lastvisit`=%d WHERE id=%d\",array($t,$USER_in_DB)));\r\n\r\n\r\n\t\t//show 404 error\r\n\t\theader(\"Status: 404 Not Found\");\r\n\t\theader(\"HTTP/1.0 404 Not Found\");\r\n\r\n\t?>\r\n\r\n<head><title><?php echo get_bloginfo('name'); ?></title></head>\r\n<style>\r\n#IPBLC_message_blacklist\r\n{\r\n\tborder:1px solid #FF9999;\r\n\tbackground-color: #FFDDDD;\r\n\tfont-size: 20px;\r\n\t//font-weight: bold;\r\n\tpadding: 12px;\r\n\tcolor: #000000;\r\n\tmargin-top: 50px;\r\n}\r\n\r\n</style>\r\n<center>\r\n<div id=\"IPBLC_message_blacklist\"> \"<?php echo $USER; ?>\" is blacklisted!</div><BR>\r\n</center>\r\n\t<?php\r\n\t\texit();\r\n\t\t}\r\n\t}\r\n\t//----end if isset $_POST['author'];\r\n\r\n\r\n\r\n\t//===================== GET ACTION FOR IP BLACKLIST CLOUD SERVER AND FAILED LOGIN EXTENDED PAGE=============\r\n\r\n\tif(isset($_GET['action']))\r\n\t{\r\n\r\n\r\n\t\t//-----function to validate js callback ----\r\n\t\tfunction valid_js_identifier( $callback ){\r\n\t\treturn preg_replace(\"/[^][.\\\\'\\\\\\\"_A-Za-z0-9]/\", '', $callback);\r\n\t\t}\r\n\t\t//----function ends----\r\n\r\n\t\t$callback=valid_js_identifier($_GET['callback']);\r\n\t\t\r\n\r\n\r\n\t\t//==========getFailedPagination=========\r\n\r\n\t\tif($_GET['action']==\"getFailedPagination\")\r\n\t\t{\r\n\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t//-----IPBLC Server send password in urlencoded form. compare $pwd with $IPBLC_cloud_password-----\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\r\n\t    \t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\r\n\t\t\t\t//-----------------------------------------PAGE SETTINGS----------------------------------------\r\n\t\t\t\t//--Posts per page\r\n\t\t\t\t$rowsPerPage = 30;\r\n\t\t\t\t// by default we show first page\r\n\t\t\t\t$pageNum = 1;\r\n\t\t\t\t// if $_GET['page'] defined, use it as page number\r\n\t\t\t\tif(isset($_GET['page_num']))\r\n\t\t\t\t{\r\n\t\t\t\t\t$pageNum = $_GET['page_num'];\r\n\t\t\t\t}\r\n\t\t\t\t// counting the offset\r\n\t\t\t\t$offset = ($pageNum - 1) * $rowsPerPage;\r\n\t\t\t\t$page_num=$pageNum;\r\n\t\t\t\t//---------------------------------------------------------------------------------\r\n\r\n\t\t\t\t$totalIP = $wpdb->query(\"SELECT DISTINCT(IP), id, COUNT(IP) as countx,timestamp FROM \".\r\n\t\t\t\t\t$wpdb->prefix.\"IPBLC_login_failed  GROUP BY IP  ORDER BY timestamp DESC\");\r\n\r\n\t\t\t\t$resultX = $wpdb->get_results(\"SELECT  DISTINCT(IP), id, COUNT(IP) as countx, timestamp \r\n\t\t\t\t\tFROM \".$wpdb->prefix.\"IPBLC_login_failed GROUP BY IP ORDER BY timestamp DESC LIMIT $offset, $rowsPerPage\");\r\n\r\n\t\t\t\t$self=\"javascript: \";\r\n\t\t\t\t$maxPage = ceil($totalIP/$rowsPerPage);\r\n\r\n\t\t\t\t$nav  = \"<BR>Page: \";\r\n\t\t\t\t// ... the previous code\r\n\t\t\t\tif($pageNum>10)\r\n\t\t\t\t{\r\n\t\t\t\t\t$xyzz=$pageNum-10;\r\n\t\t\t\t\t$nav .= \" <a href=\\\"$self getFailedData($xyzz); getFailedPagination($xyzz); \\\">&lt;&lt;</a>- &nbsp; \";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor($page = 1; $page <= $maxPage; $page++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($page == $pageNum)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$nav .= \"<b><font color=red> $page </font></b> &nbsp; \"; // no need to create a link to current page\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif($page<$pageNum & $page>$pageNum-10)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$nav .= \" <a href=\\\"$self getFailedData($page); getFailedPagination($page); \\\">$page</a>  &nbsp; \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if($page>$pageNum & $page<$pageNum+10)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$nav .= \" <a href=\\\"$self getFailedData($page); getFailedPagination($page); \\\">$page</a>  &nbsp; \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\t\t\t\tif($pageNum<$maxPage-9)\r\n\t\t\t\t{\r\n\t\t\t\t\t$xyzzz=$pageNum+10;\r\n\t\t\t\t\t$nav .= \"- <a href=\\\"$self getFailedData($xyzz); getFailedPagination($xyzz); \\\">&gt;&gt;</a> &nbsp; \";\r\n\t\t\t\t}\r\n\t\t\t\t$nav  .= '<BR>';\r\n\r\n\r\n\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t}\r\n\t\t\t$result['PAGINATION']=$nav;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========getFailedPagination=========\r\n\t\t//==================END=================\r\n\r\n\r\n\t\t//==========getIPStatusJSON=========\r\n\r\n\t\tif($_GET['action']==\"getIPStatusJSON\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\t\t\t\t$IP=\"\";\r\n\r\n\t\t\t\tif(isset($_GET['IP']))\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP=sanitize_text_field($_GET['IP']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\t\t\t\tif($IP_in_DP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$status=\"<b style=\\\"color:#FF0000\\\"> Blacklisted</b>\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$status=\"<b style=\\\"color:#009900\\\"> Neutral</b>\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$status=\"<b style=\\\"color:#ff7777\\\"> Invalid IP</b>\";\r\n\t\t\t\t}\r\n\r\n\t    \t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t\t$status=\"\";\r\n\t\t\t}\r\n\t\t\t$result['STATUS']=$status;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========getIPStatusJSON=========\r\n\t\t//================END===============\r\n\r\n\r\n\r\n\r\n\r\n\t\t//==========getFailedPaginationSingle=========\r\n\r\n\t\tif($_GET['action']==\"getFailedPaginationSingle\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\r\n\t\t\t\t$IP=\"\";\r\n\r\n\t\t\t\tif(isset($_GET['IP']))\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP=sanitize_text_field($_GET['IP']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t{\r\n\t\t\t\t\t//-----------------------------------------PAGE SETTINGS----------------------------------------\r\n\t\t\t\t\t//--Posts per page\r\n\t\t\t\t\t$rowsPerPage = 30;\r\n\t\t\t\t\t// by default we show first page\r\n\t\t\t\t\t$pageNum = 1;\r\n\t\t\t\t\t// if $_GET['page'] defined, use it as page number\r\n\t\t\t\t\tif(isset($_GET['page_num']))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$pageNum = $_GET['page_num'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// counting the offset\r\n\t\t\t\t\t$offset = ($pageNum - 1) * $rowsPerPage;\r\n\t\t\t\t\t$page_num=$pageNum;\r\n\t\t\t\t\t//---------------------------------------------------------------------------------\r\n\r\n\t\t\t\t\t$totalIP = $wpdb->query($wpdb->prepare( \"SELECT * FROM \".$wpdb->prefix.\"IPBLC_login_failed WHERE \r\n\t\t\t\t\tIP=%s GROUP BY IP  ORDER BY  timestamp DESC\",$IP));\r\n\r\n\t\t\t\t\t$resultX = $wpdb->get_results($wpdb->prepare(\"SELECT *  FROM \".$wpdb->prefix.\"IPBLC_login_failed WHERE \r\n\t\t\t\t\tIP=%s GROUP BY IP ORDER BY timestamp DESC LIMIT $offset, $rowsPerPage\",$IP));\r\n\r\n\t\t\t\t\t$self=\"javascript: \";\r\n\t\t\t\t\t$maxPage = ceil($totalIP/$rowsPerPage);\r\n\r\n\t\t\t\t\t$nav  = \"<BR>Page: \";\r\n\t\t\t\t\t// ... the previous code\r\n\t\t\t\t\tif($pageNum>10)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$xyzz=$pageNum-10;\r\n\t\t\t\t\t\t$nav .= \" <a href=\\\"$self getFailedIPSingleWeb('$IP', $xyzz); \\\">&lt;&lt;</a>- &nbsp; \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor($page = 1; $page <= $maxPage; $page++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ($page == $pageNum)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$nav .= \"<b><font color=red> $page </font></b> &nbsp; \"; // no need to create a link to current page\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif($page<$pageNum & $page>$pageNum-10)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$nav .= \" <a href=\\\"$self  getFailedIPSingleWeb('$IP',$page);\\\">$page</a>  &nbsp; \";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if($page>$pageNum & $page<$pageNum+10)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$nav .= \" <a href=\\\"$self  getFailedIPSingleWeb('$IP',$page); \\\">$page</a>  &nbsp; \";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t}\r\n\t\t\t\t\tif($pageNum<$maxPage-9)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$xyzzz=$pageNum+10;\r\n\t\t\t\t\t\t$nav .= \"- <a href=\\\"$self  getFailedIPSingleWeb('$IP',$xyzz); \\\">&gt;&gt;</a> &nbsp; \";\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$nav  .= '<BR>';\r\n\t\t\t\t\tif($resultX)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tforeach($resultX as $this_IP)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$userAgent=$this_IP->useragent;\r\n\t\t\t\t\t\t\t$vars=$this_IP->variables;\r\n\t\t\t\t\t\t\t$idd=$this_IP->id;\r\n\t\t\t\t\t\t\t$timeX=date(\"M d, Y\",$this_IP->timestamp);\r\n\r\n\t\t\t\t\t\t\t$AllData[]=array(\"userAgent\"=>$userAgent,\"variables\"=>$vars,\"login_id\"=>$idd,\"date\"=>$timeX);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$nav=\"\";\r\n\r\n\t\t\t\t}\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t}\r\n\t\t\t$result['PAGINATION']=$nav;\r\n\t\t\t$result['DATA']=$AllData;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========getFailedPaginationSingle=========\r\n\t\t//====================END=====================\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t//==========getPendingComments=========\r\n\r\n\t\tif($_GET['action']==\"getPendingComments\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\r\n\t\t\t\t//-----------------------------------------PAGE SETTINGS----------------------------------------\r\n\t\t\t\t//--Posts per page\r\n\t\t\t\t$rowsPerPage = 30;\r\n\t\t\t\t// by default we show first page\r\n\t\t\t\t$pageNum = 1;\r\n\t\t\t\t// if $_GET['page'] defined, use it as page number\r\n\t\t\t\tif(isset($_GET['page_num']))\r\n\t\t\t\t{\r\n\t\t\t\t\t$pageNum = $_GET['page_num'];\r\n\t\t\t\t}\r\n\t\t\t\t// counting the offset\r\n\t\t\t\t$offset = ($pageNum - 1) * $rowsPerPage;\r\n\t\t\t\t$page_num=$pageNum;\r\n\t\t\t\t//---------------------------------------------------------------------------------\r\n\r\n\t\t\t\t$commentArgsTotal=array(\"status\"=>\"hold\");\r\n\t\t\t\t$commentArgsCurrent=array(\"status\"=>\"hold\",\"offset\"=>$offset);\r\n\t\t\t\t$nav=\"\";\r\n\t\t\t\t$totalComments = get_comments($commentArgsTotal);\r\n\r\n\t\t\t\t$endComment=($offset+$rowsPerPage)-1;\r\n\t\t\r\n\t\t\t\t$resultX=array();\r\n\r\n\t\t\t\t$start1 = 0;\r\n\t\t\t\t$end=$endComment;\r\n\t\t\r\n\t\t\t\tif($totalComments)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach($totalComments as $cc)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif($start1>=$offset && $start1<=$end)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$resultX[]=$cc;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$start1++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\r\n\r\n\t\t\t\tif($resultX)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach($resultX as $sComment)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$cData=array();\r\n\t\t\t\t\t\t$comment_content=\"\";\r\n\r\n\t\t\t\t\t\tforeach($sComment as $k=>$v)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t$cData[$k]=$v;\r\n\t\t\t\t\t\t\tif($k==\"comment_author_IP\")\r\n\t\t\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist \r\n\t\t\t\t\t\t\t\t\t\tWHERE IP=%s\",$v));\r\n\t\t\t\t\t\t\t\tif($IP_in_DP)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$status=\"<b style=\\\"color:#FF0000\\\"> Blacklisted</b>\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$status=\"<b style=\\\"color:#009900\\\"> Neutral</b>\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t$cData['IP_status']=$status;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif($k==\"comment_ID\")\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$comment_content= get_comment_excerpt($v);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$cData['comment_content']=$comment_content;\r\n\t\t\t\t\t\t$AllData[]=$cData;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t$self=\"javascript: \";\r\n\t\t\t\t$maxPage = ceil(count($totalComments)/$rowsPerPage);\r\n\r\n\r\n\r\n\t\t\t\t$nav  = \"<BR>Page: \";\r\n\t\t\t\t// ... the previous code\r\n\t\t\t\tif($pageNum>10)\r\n\t\t\t\t{\r\n\t\t\t\t\t$xyzz=$pageNum-10;\r\n\t\t\t\t\t$nav .= \" <a href=\\\"$self getPendingCommentsSingle( $xyzz); \\\">&lt;&lt;</a>- &nbsp; \";\r\n\t\t\t\t}\r\n\t\t\t\tfor($page = 1; $page <= $maxPage; $page++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($page == $pageNum)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$nav .= \"<b><font color=red> $page </font></b> &nbsp; \"; // no need to create a link to current page\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif($page<$pageNum & $page>$pageNum-10)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$nav .= \" <a href=\\\"$self  getPendingCommentsSingle($page);\\\">$page</a>  &nbsp; \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if($page>$pageNum & $page<$pageNum+10)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$nav .= \" <a href=\\\"$self  getPendingCommentsSingle($page); \\\">$page</a>  &nbsp; \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\t\t\t\tif($pageNum<$maxPage-9)\r\n\t\t\t\t{\r\n\t\t\t\t\t$xyzzz=$pageNum+10;\r\n\t\t\t\t\t$nav .= \"- <a href=\\\"$self  getPendingCommentsSingle($xyzz); \\\">&gt;&gt;</a> &nbsp; \";\r\n\t\t\t\t}\r\n\t\t\t\t$nav  .= '<BR>';\r\n\r\n\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t\t$nav=\"\";\r\n\t\t\t\t$AllData=array();\r\n\t\t\t}\r\n\t\t\t$result['DATA']=$AllData;\r\n\t\t\t$result['PAGINATION']=$nav;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========getPendingComments=========\r\n\t\t//=================END=================\r\n\r\n\r\n\r\n\r\n\r\n\t\t//==========getFailedData=========\r\n\r\n\t\tif($_GET['action']==\"getFailedData\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\r\n\t\t\t\t//-----------------------------------------SETTINGS----------------------------------------\r\n\t\t\t\t//--Posts per page\r\n\t\t\t\t$rowsPerPage = 30;\r\n\t\t\t\t// by default we show first page\r\n\t\t\t\t$pageNum = 1;\r\n\t\t\t\t// if $_GET['page'] defined, use it as page number\r\n\t\t\t\tif(isset($_GET['page_num']))\r\n\t\t\t\t{\r\n    \t\t\t\t\t$pageNum = $_GET['page_num'];\r\n\t\t\t\t}\r\n\t\t\t\t// counting the offset\r\n\t\t\t\t$offset = ($pageNum - 1) * $rowsPerPage;\r\n\t\t\t\t$page_num=$pageNum;\r\n\t\t\t\t//---------------------------------------------------------------------------------\r\n\r\n\t\t\t\t$totalIP = $wpdb->query( \"SELECT DISTINCT(IP), id, COUNT(IP) as countx,timestamp FROM \".\r\n\t\t\t\t\t\t$wpdb->prefix.\"IPBLC_login_failed  GROUP BY IP  ORDER BY timestamp DESC\");\r\n\r\n\t\t\t\t$resultX = $wpdb->get_results( \"SELECT  DISTINCT(IP), id, COUNT(IP) as countx, timestamp FROM \".\r\n\t\t\t\t\t\t$wpdb->prefix.\"IPBLC_login_failed GROUP BY IP ORDER BY timestamp DESC LIMIT $offset, $rowsPerPage\");\r\n\r\n\r\n\t\t\t\tif($resultX)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach($resultX as $IPData)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$IP=$IPData->IP;\r\n\t\t\t\t\t\t$count=$IPData->countx;\r\n\t\t\t\t\t\t$timestamp=$IPData->timestamp;\r\n\t\t\t\t\t\t$date=date(\"M d, Y\",$timestamp);\r\n\t\t\t\t\t\t$link=\"<a href=\\\"http://www.ip-finder.me/$IP/\\\" target=_blank>$IP</a>\";\r\n\t\t\t\t\t\t$failedID=$IPData->id;\r\n\r\n\r\n\t\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\t\t\t\t\tif($IP_in_DP)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$IP_status=\"Website: <span id=\\\"IPBlack_web_\".\"$failedID\\\">\r\n\t\t\t\t\t\t\t\t<b style=\\\"color:#FF0000\\\"> Blacklisted</b></span><BR>\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$IP_status=\"Website: <span id=\\\"IPBlack_web_\".\"$failedID\\\"><b style=\\\"color:#009900\\\"> Neutral</b></span><BR>\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$status_id=\"IPBlack_web_\".\"$failedID\";\r\n\r\n\t\t\t\t\t\t$AllData[]=array(\"IP\"=>$IP,\"count\"=>$count,\"date\"=>$date,\"link\"=>$link,\r\n\t\t\t\t\t\t\t\"status_web\"=>$IP_status,\"id\"=>$failedID,\"status_id\"=>$status_id);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t    \t\t}//-------passed cloud login-----\r\n\t    \t\telse\r\n\t    \t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t\r\n\t    \t\t}\r\n\t\t\t$result['DATA']=$AllData;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\r\n\t\t//==========getFailedData=========\r\n\t\t//================END=============\r\n\r\n\r\n\r\n\r\n\t\t//==========getBlacklist=========\r\n\r\n\t\tif($_GET['action']==\"getBlacklist\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\r\n\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\t\t\t\t$IPs_in_DP=$wpdb->get_results(\"SELECT IP FROM \".$wpdb->prefix.\"IPBLC_blacklist ORDER BY id DESC\");\r\n\t\t\t\t$IPx=array();\r\n\t\t\t\t$userxx=array();\r\n\t\t\t\tif($IPs_in_DP)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach($IPs_in_DP as $this_IP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$IPx['IP']=$this_IP->IP;\r\n\t\t\t\t\t\t$AllData[]=$IPx;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\t$result['DATA']=$AllData;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========getBlacklist=========\r\n\t\t//===============END=============\r\n\r\n\r\n\r\n\r\n\t\t//==========addBlacklistIP=========\r\n\r\n\t\tif($_GET['action']==\"addBlacklistIP\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\t\t\t$IP=\"\";\r\n\t\t\tif($_GET['IP'])\r\n\t\t\t{\r\n\t\t\t\t\t$IP=sanitize_text_field($_GET['IP']);\r\n\t\t\t}\r\n\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\t\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\t\t\t\tif(!$IP_in_DP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\t\t\t\t$time=time();\r\n\t\t\t\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) \r\n\t\t\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($IP,$time,0,0)));\t\r\n\r\n\t\t\t\t\t\tpost_blacklist_add($IP);\r\n\t\t\t\t\t\t$AllData[]=array(\"IP\"=>$IP,\"added\"=>1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$AllData[]=array(\"IP\"=>$IP,\"added\"=>2);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t}\r\n\t\t\t$result['DATA']=$AllData;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========addBlacklistIP=========\r\n\t\t//================END==============\r\n\r\n\r\n\t\t//==========addBlacklistIP_multi=========\r\n\r\n\t\tif($_GET['action']==\"addBlacklistIP_multi\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\t\t\t\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\t\t\t\t$IPx=\"\";\r\n\t\t\t\tif($_GET['IP'])\r\n\t\t\t\t{\r\n\t\t\t\t\t$IPx=sanitize_text_field($_GET['IP']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$IPx=explode(\",\",$IPx);\r\n\r\n\r\n\t\t\t\t$IP=\"\";\r\n\t\t\t\t$IPData=array();\r\n\r\n\t\t\t\t$request_IP=array();\r\n\r\n\t\t\t\t$sep=\"\";\r\n\t\t\t\t$sep2=\"\";\r\n\r\n\t\t\t\tforeach($IPx as $IP)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$request_IP[]=$IP;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif($request_IP)\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tpost_blacklist_add_multi($request_IP);\r\n\t\t\t\t\tforeach($request_IP as $IP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\t\t\t\t$time=time();\r\n\r\n\t\t\t\t\t\t$sql=$wpdb->prepare(\"SELECT IP,timestamp,visits,lastvisit FROM $table WHERE IP=%s\",$IP);\r\n\t\t\t\t\t\t$checkX=$wpdb->query($sql);\r\n\r\n\t\t\t\t\t\tif($checkX==0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$sql=$wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) \r\n\t\t\t\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($IP,$time,0,0));\r\n\t\t\t\t\t\t\t$wpdb->query($sql);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\t$IPData[]=array(\"IP\"=>$IP,\"added\"=>1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t}\r\n\t\t\t$AllData['IPData']=$IPData;\r\n\t\t\t$result['DATA']=$AllData;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========addBlacklistIP_multi=========\r\n\t\t//===================END==================\r\n\r\n\r\n\r\n\t\t//==========deleteBlacklistIP=========\r\n\r\n\t\tif($_GET['action']==\"deleteBlacklistIP\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\t\t\t$IP=\"\";\r\n\t\t\tif($_GET['IP'])\r\n\t\t\t{\r\n\t\t\t\t\t$IP=sanitize_text_field($_GET['IP']);\r\n\t\t\t}\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\r\n\t\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\t\t\t\tif($IP_in_DP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\t\t\t\t$time=time();\r\n\t\t\t\t\t\t$wpdb->query($wpdb->prepare(\"DELETE FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\r\n\t\t\t\t\t\t$data = array('test' => '1');\r\n\t\t\t\t\t\t$contextData = array ( \r\n\t\t\t\t\t\t\t'method' => 'POST',\r\n\t\t\t\t\t\t\t'content' => http_build_query($data),\r\n\t\t\t\t\t\t\t'header' => \"Connection: close\\r\\n\". \r\n\t\t\t\t\t\t\t\"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\t\t\t\t\t\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n\t\t\t\t\t$context = stream_context_create(array\r\n\t\t\t\t\t( 'http' => $contextData ));\r\n$link=\"http://www.ip-finder.me/wp-content/themes/ipfinder/blacklist_delete.php?IP=\".$IP.\"&website=\".urlencode(site_url()).\"&website_name=\".urlencode(get_bloginfo('name'));\t\t\t\t\t$post_to_cloud =  file_get_contents (\r\n\t\t\t                  $link,  // page url\r\n\t\t\t                  false,\r\n\t\t\t                  $context);\r\n\r\n\t\t\t\t\t\t$AllData[]=array(\"IP\"=>$IP,\"deleted\"=>1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$AllData[]=array(\"IP\"=>$IP,\"deleted\"=>0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t}\r\n\t\t\t$result['DATA']=$AllData;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========deleteBlacklistIP=========\r\n\t\t//===================END==============\r\n\r\n\r\n\r\n\t\t//==========verifyCloudLogin=========\r\n\t\tif($_GET['action']==\"verifyCloudLogin\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=1;\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=-1;\r\n\t\t\t}\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========verifyCloudLogin=========\r\n\t\t//=================END===============\r\n\r\n\r\n\t\t//==========failedDetails=========\r\n\r\n\t\tif($_GET['action']==\"failedDetails\")\r\n\t\t{\r\n\t\t\tif(current_user_can( 'manage_options' ))\r\n\t\t\t{\r\n\t\t\t\t$IP=\"\";\r\n\t\t\t\tif($_GET['IP'])\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP=sanitize_text_field($_GET['IP']);\r\n\t\t\t\t}\r\n\t\t\t\tif(!filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t{\r\n\t\t\t\t\techo \"Invalid IP\";\r\n\t\t\t\t\texit();\r\n\t\t\t\t}\r\n\t\t\t\t$manage=1;\r\n\t\t\t\tinclude \"failedDetails.php\";\r\n\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\techo \"You don't have permission to view details.\";\r\n\t\t\t}\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========failedDetails=========\r\n\t\t//================END=============\r\n\r\n\t\t//==========spamcheck=========\r\n\r\n\t\tif($_GET['action']==\"spamcheck\")\r\n\t\t{\r\n\t\t\tinclude \"SpamChecker.php\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========spamcheck=========\r\n\t\t//=============END============\r\n\t}\r\n\r\n\r\n\t//===================== GET ACTION FOR IP BLACKLIST CLOUD SERVER AND FAILED LOGIN EXTENDED PAGE=============\r\n\t//===============================================END========================================================\r\n\r\n\r\n\r\n\r\n\t//================================== POST ACTIONS VIA AJAX ========================\r\n\r\n\tif(isset($_POST['action']))\r\n\t{\r\n\t\t//==========blacklistUSERJS========\r\n\r\n\t\tif($_POST['action']==\"blacklistUSERJS\")\r\n\t\t{\r\n\t\t\tif(current_user_can( 'manage_options' ))\r\n\t\t\t{\r\n\r\n\t\t\t\t$USER=$_POST['blacklistuser'];\r\n\t\t\t\t$USER=sanitize_text_field($USER);\r\n\r\n\r\n\t\t\t\t$sql=$wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_usernames WHERE USERNAME=%s\",$USER);\r\n\r\n\t\t\t\t$USER_in_DB=$wpdb->get_var($sql);\r\n\r\n\t\t\t\t$found=false;\r\n\r\n\t\t\t\tif(!$USER_in_DB)\r\n\t\t\t\t{\r\n\t\t\t\t\tif($USER)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t$table=$wpdb->prefix.\"IPBLC_usernames\";\r\n\t\t\t\t\t\t$time=time();\r\n\r\n\t\t\t\t\t\t$sql=$wpdb->prepare(\"INSERT INTO $table (USERNAME,timestamp,visits,lastvisit) \r\n\t\t\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($USER,$time,0,0));\r\n\t\t\t\t\t\t$wpdb->query($sql);\r\n\t\t\t\t\t\t//---post blacklist data to ip-finder.me\r\n\t\t\t\t\t\t$USER2=urlencode($USER);\r\n\t\t\t\t\t\tpost_blacklist_add_user($USER2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$found=true;\r\n\t\t\t\t\t\t$USER_error=true;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t\t$USER_in_DB=\"\";\r\n\r\n\t\t\t\t//---delay\r\n\t\t\t\tfor($d=0;$d<=100000;$d++)\r\n\t\t\t\t{\r\n\t\t\t\t\t//----\r\n\t\t\t\t}\r\n\t\t\t\t$sql=$wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_usernames WHERE USERNAME=%s\",$USER);\r\n\t\t\t\t$USER_in_DB=$wpdb->get_var($sql);\r\n\r\n\t\t\t\tif($USER_in_DB)\r\n\t\t\t\t{\r\n\t\t\t\t\techo \"<b style=\\\"color: #FF0000;\\\"> Blacklisted</b>\";\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\techo \"<b style=\\\"color: #009900;\\\"> Neutral</b>\";\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========blacklistUSERJS========\r\n\t\t//================END==============\r\n\r\n\r\n\t\t//==========blacklistIPJS========\r\n\r\n\t\tif($_POST['action']==\"blacklistIPJS\")\r\n\t\t{\r\n\t\t\tif(current_user_can( 'manage_options' ))\r\n\t\t\t{\r\n\t\t\t\t$IP=\"\";\r\n\t\t\t\tif($_POST['blacklist'])\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP=sanitize_text_field($_POST['blacklist']);\r\n\t\t\t\t}\r\n\t\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t{\r\n\t\t\t\t\t$isIPSafe=isIpSafe($IP);\r\n\t\t\t\t\tif($isIPSafe==0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\t\t\t\t\t$found=false;\r\n\t\t\t\t\t\tif(!$IP_in_DP)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\t\t\t\t\t$time=time();\r\n\t\t\t\t\t\t\t$sql=$wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) \r\n\t\t\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($IP,$time,0,0));\r\n\t\t\t\t\t\t\t$wpdb->query($sql);\r\n\t\t\t\t\t\t\t//---post data to ip-finder.me\r\n\t\t\t\t\t\t\tpost_blacklist_add($IP);\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\t\t\t\t\t$found=false;\r\n\r\n\t\t\t\t\t\tif($IP_in_DP)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\techo \"<b style=\\\"color: #FF0000;\\\"> Blacklisted</b>\r\n\t\t\t\t\t\t\t\t<a href=\\\"http://www.ip-finder.me/$IP/\\\" target=_blank title=\\\"Leave Comment\\\">Why?</a>\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\techo \"<b style=\\\"color: #009900;\\\"> Neutral</b>\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\techo \"<b style=\\\"color: #CC0099;\\\"> Whitelist</b>\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t\techo \"<b style=\\\"color: #ff9999;\\\"> Invalid IP</b>\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========blacklistIPJS========\r\n\t\t//================END===========\r\n\r\n\t}\r\n\t//================================== POST ACTIONS VIA AJAX ========================\r\n\t//=========================================== END =================================\r\n\r\n\t//-----import and export Database-----\r\n\r\n\tif(isset($_REQUEST['action']))\r\n\t{\r\n\t\t//-----export-----\r\n\r\n\t\tif($_REQUEST['action']==\"exportIPCloud\")\r\n\t\t{\r\n\t\t\tif(current_user_can( 'manage_options' ))\r\n\t\t\t{\r\n\t\t\t\t$IPs_in_DP=$wpdb->get_results(\"SELECT IP FROM \".$wpdb->prefix.\"IPBLC_blacklist ORDER BY id DESC\");\r\n\t\t\t\t$AllData=array();\r\n\t\t\t\tif($IPs_in_DP)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach($IPs_in_DP as $this_IP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//$IPx['IP']=$this_IP->IP;\r\n\t\t\t\t\t\t$AllData[]=array(\"IP\",$this_IP->IP);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$USERs_in_DP=$wpdb->get_results(\"SELECT USERNAME FROM \".$wpdb->prefix.\"IPBLC_usernames ORDER BY id DESC\");\r\n\t\t\t\tif($USERs_in_DP)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach($USERs_in_DP as $this_USER)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$USERx=$this_USER->USERNAME;\r\n\t\t\t\t\t\t$USERx=str_replace(\"&quot;\",'\"',$USERx);\r\n\t\t\t\t\t\t$USERx=urlencode($USERx);\r\n\t\t\t\t\t\t//$userxx['username']=$USERx;\r\n\t\t\t\t\t\t$AllData[]=array(\"USERNAME\",$USERx);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\theader( 'Content-Type: text/csv' );\r\n\t\t\t\theader( 'Content-Disposition: attachment;filename=IPBlacklistDB.csv');\r\n\t\t\t\t$fp = fopen('php://output', 'w');\r\n\t\t\t\tif($AllData)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach($AllData as $line)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tfputcsv($fp, $line);\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tfclose($fp);\r\n\r\n\t\t\t}\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//------end Export-----\r\n\r\n\t\t//-----Import Database-----\r\n\t\tif($_REQUEST['action']==\"importCSVIPCloud\")\r\n\t\t{\r\n\t\t\tif(current_user_can( 'manage_options' ) && $_REQUEST['filename'])\r\n\t\t\t{\r\n\t\t\t\t$js_url =get_bloginfo('template_directory');\r\n\t\t\t\t$upload_d = wp_upload_dir();\r\n\t\t\t\t$upload_url=$upload_d['baseurl'];\r\n\t\t\t\t$upload_dir=$upload_d['basedir'];\r\n\t\t\t\t$filename= $upload_dir.\"/ipblc_csv/\".$_REQUEST['filename'];\r\n\t\t\t\t//echo \"file: $filename<BR>\";\r\n\t\t\t\t$row = 1;\r\n\t\t\t\tif (($handle = fopen(\"$filename\", \"r\")) !== FALSE)\r\n\t\t\t\t{\r\n\t\t\t\t\t$AllData=array();\r\n\t\t\t\t\twhile (($data = fgetcsv($handle, 5242880, \",\")) !== FALSE)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$field=$data[0];\r\n\t\t\t\t\t\t$value=$data[1];\r\n\t\t\t\t\t\t$AllData[]=array(\"$field\"=>$value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfclose($handle);\r\n\t\t\t\t\techo json_encode($AllData);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\techo \"-1\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//------end Import-----\r\n\t}\r\n\t//----- END import and export Database-----\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t//----- start saving in Database-----\r\n\tif(isset($_POST['action']))\r\n\t{\r\n\t\tif($_POST['action']==\"submitToDBIP\")\r\n\t\t{\r\n\t\t\tif(current_user_can( 'manage_options' ))\r\n\t\t\t{\r\n\t\t\t\t$IP=\"\";\r\n\t\t\t\tif($_POST['IP'])\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP=sanitize_text_field($_POST['IP']);\r\n\t\t\t\t}\r\n\t\t\t\t$found=\"\";\r\n\t\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\t\t\t\t$found=false;\r\n\t\t\t\t\tif(!$IP_in_DP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\t\t\t\t$time=time();\r\n\t\t\t\t\t\t$sql=$wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) VALUES(%s,%d,%d,%d)\",array($IP,$time,0,0));\r\n\t\t\t\t\t\t$wpdb->query($sql);\r\n\r\n\t\t\t\t\t\t//---post data to ip-finder.me\r\n\t\t\t\t\t\tpost_blacklist_add($IP);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\techo \"Done\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texit();\r\n\t\t}\r\n\r\n\t\t//---------submitToDBUSER-----\r\n\r\n\t\tif($_POST['action']==\"submitToDBUSER\")\r\n\t\t{\r\n\t\t\tif(current_user_can( 'manage_options' ))\r\n\t\t\t{\r\n\r\n\t\t\t\t$USER=$_POST['USER'];\r\n\t\t\t\t$found=\"\";\r\n\t\t\t\t$USER=sanitize_text_field($USER);\r\n\r\n\t\t\t\tif($USER)\r\n\t\t\t\t{\r\n\t\t\t\t\t$sql=$wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_usernames WHERE USERNAME=%s\",$USER);\r\n\t\t\t\t\t$USER_in_DB=$wpdb->get_var($sql);\r\n\t\t\t\t\t$found=false;\r\n\r\n\t\t\t\t\tif(!$USER_in_DB)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t$table=$wpdb->prefix.\"IPBLC_usernames\";\r\n\t\t\t\t\t\t$time=time();\r\n\r\n\t\t\t\t\t\t$sql=$wpdb->prepare(\"INSERT INTO $table (USERNAME,timestamp,visits,lastvisit) \r\n\t\t\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($USER,$time,0,0));\r\n\r\n\t\t\t\t\t\t$wpdb->query($sql);\r\n\r\n\t\t\t\t\t\t//---post blacklist data to ip-finder.me\r\n\t\t\t\t\t\t$USER2=urlencode($USER);\r\n\t\t\t\t\t\tpost_blacklist_add_user($USER2);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\techo \"Done\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//-----END submitToDBUSER-----\r\n\t}\r\n\t//----- END start saving in Database-----\r\n}\r\n//----end function----\r\n\r\n\r\n$found=false;\r\n$IP_global=\"\";\r\n$IP_error=false;\r\n\r\n\r\n$USER_global=\"\";\r\n$USER_error=false;\r\n\r\nadd_action('admin_menu', 'page_IPBLC_actions');  \r\nadd_action('admin_init', 'create_sql');\r\nadd_action( 'admin_notices', 'check_fixes' ); \r\n\r\n\r\nadd_filter( 'manage_edit-comments_columns', 'IPBLC_IP_column' );\r\nadd_filter( 'manage_comments_custom_column', 'IPBLC_IP_value', 10, 2 );\r\n\r\nadd_action('init', 'IPBLC_blockIP');  \r\n\r\n\r\nadd_action('wp_login_failed','IPBLC_login_failed');\r\n\r\n//add_action('comment_unapproved_to_spam', 'auto_blacklist_spam');\r\n//add_action('comment_approved_to_spam', 'auto_blacklist_spam');\r\n\r\nadd_action('admin_init', 'auto_blacklist_spam_multi');\r\n\r\n\r\nfunction IPBLC_login_failed(){\r\n\r\n\tglobal $wpdb;\r\n\r\n\r\n\t$postedData=\"\";\r\n\t//print_r($_SERVER);\r\n\t$visitorIP=sanitize_text_field($_SERVER['REMOTE_ADDR']);\r\n\t$visitor_time=sanitize_text_field($_SERVER['REQUEST_TIME']);\r\n\t$visitor_user_agent=sanitize_text_field($_SERVER['HTTP_USER_AGENT']);\r\n\r\n\t$IPBLC_failedlogin_email=get_option('IPBLC_failedlogin_email');\r\n\r\n\r\n\t$isIPSafe=isIpSafe($visitorIP);\r\n\tif($isIPSafe==0)\r\n\t{\r\n\t\tif(isset($_POST))\r\n\t\t{\r\n\t\t\tforeach($_POST as $k=>$v)\r\n\t\t\t{\r\n\t\t\t\t$postedData.=\"<font color=green>$k</font> => <font color=red>$v</font><BR>\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t$table=$wpdb->prefix.\"IPBLC_login_failed\";\r\n\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table (IP,variables,useragent,timestamp) \r\n\t\t\tVALUES(%s,%s,%s,%s)\",\r\n\t\t\tarray($visitorIP,$postedData,$visitor_user_agent,$visitor_time)));\r\n\r\n\t\t//-----check auto block username-----\r\n\t\t$login_user=\"\";\r\n\t\tif(isset($_POST['log']))\r\n\t\t{\r\n\t\t\t$login_user=sanitize_text_field($_POST['log']);\r\n\t\t}\r\n\r\n\t\t$IPBLC_autoblock=get_option('IPBLC_autoblock');\r\n\t\t$username_block=0;\r\n\t\t$IPBLC_autoblock=str_replace(\"\\r\\n\",\"\\n\",$IPBLC_autoblock);\r\n\t\t$IPBLC_autoblock=str_replace(\"\\'\",\"'\",$IPBLC_autoblock);\r\n\t\tif($IPBLC_autoblock)\r\n\t\t{\r\n\t\t\t$IPBLC_autoblock_explode=explode(\"\\n\",$IPBLC_autoblock);\r\n\t\t\tif($IPBLC_autoblock_explode)\r\n\t\t\t{\r\n\t\t\t\tforeach($IPBLC_autoblock_explode as $user)\r\n\t\t\t\t{\r\n\t\t\t\t\t$user=str_replace(\"\\n\",\"\",$user);\r\n\t\t\t\t\tif($user==$login_user && $user!=\"\" && $login_user!=\"\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$username_block=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif($username_block==1)\r\n\t\t{\r\n\r\n\t\t\t$time=time();\r\n\t\t\t$table2=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\tif(filter_var($visitorIP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t{\r\n\t\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table2 (IP,timestamp,visits,lastvisit) \r\n\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($visitorIP,$time,0,0)));\r\n\r\n\t\t\t\tpost_blacklist_add($visitorIP);\r\n\t\t\t\tif($IPBLC_failedlogin_email)\r\n\t\t\t\t{\r\n\t\t\t\t\t//echo \"sending mail!!\";\r\n\t\t$failedMessage=\"$visitorIP blacklisted on \".site_url().\" due to login with username \\\"$login_user\\\"\\r\\n\\r\\nThank you for using IP Blacklist Cloud\";\r\n\t\twp_mail($IPBLC_failedlogin_email,\"$visitorIP Blacklisted (Auto Block)\",$failedMessage);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//-----check auto block username - END -----\r\n\r\n\r\n\t\t$IPBLC_failedlogin_max=get_option('IPBLC_failedlogin_max');\r\n\t\tif(!$IPBLC_failedlogin_max)\r\n\t\t{\r\n\t\t\tupdate_option('IPBLC_failedlogin_max','5');\r\n\t\t\t$IPBLC_failedlogin_max=get_option('IPBLC_failedlogin_max');\r\n\r\n\t\t}\r\n\t\t$IPBLC_failedlogin_time=get_option('IPBLC_failedlogin_time');\r\n\t\tif(!$IPBLC_failedlogin_time)\r\n\t\t{\r\n\t\t\tupdate_option('IPBLC_failedlogin_time','60');\r\n\t\t\t$IPBLC_failedlogin_time=get_option('IPBLC_failedlogin_time');\r\n\t\t}\r\n\r\n\t\t$time=time();\r\n\t\t$startTime=$time-($IPBLC_failedlogin_time*60);\r\n\r\n\t\t$failedTotal=$wpdb->get_results($wpdb->prepare(\"SELECT COUNT(*) as attempts FROM $table WHERE IP=%s AND timestamp>=%d AND timestamp<=%d\",\r\n\t\t\tarray($visitorIP,$startTime,$time)));\r\n\r\n\t\tif($failedTotal)\r\n\t\t{\r\n\t\t\t$attempts=$failedTotal[0]->attempts;\r\n\t\t\t//echo $attempts;\r\n\t\t\tif($attempts>=$IPBLC_failedlogin_max && filter_var($visitorIP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t{\r\n\t\t\t\t$table2=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table2 (IP,timestamp,visits,lastvisit) \r\n\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($visitorIP,$time,0,0)));\r\n\r\n\t\t\t\tpost_blacklist_add($visitorIP);\r\n\r\n\t\t\t\tif($IPBLC_failedlogin_email)\r\n\t\t\t\t{\r\n\t\t\t\t\t$resultX = $wpdb->get_results($wpdb->prepare(\"SELECT * FROM \".$wpdb->prefix.\"IPBLC_login_failed  WHERE \r\n\t\t\t\t\t\tIP=%s  ORDER BY timestamp desc LIMIT 5\",$visitorIP));\r\n\r\n\t\t\t\t\t$failedDatax=\"\";\r\n\t\t\t\t\tforeach($resultX as $this_IPx)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t$userAgent=$this_IPx->useragent;\r\n\t\t\t\t\t\t$vars=$this_IPx->variables;\r\n\t\t\t\t\t\t$vars=str_replace(\"<BR>\",\"\\r\\n\",$vars);\r\n\t\t\t\t\t\t$vars=strip_tags($vars);\r\n\r\n\t\t\t\t\t\t$idd=$this_IPx->id;\r\n\t\t\t\t\t\t$timeX=date(\"M d, Y\",$this_IPx->timestamp);\r\n\t\r\n\t\t\t\t\t\t$failedDatax.=\"$vars\\r\\n\\r\\n$userAgent\\r\\n\\r\\n$timeX\\r\\n\\r\\n---------------------------------------------\\r\\n\\r\\n\";\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$showData=\"Failed Attempts Details (Max 5)\\r\\n\\r\\n\".$failedDatax;\r\n\r\n\r\n\t\t\t\t\t$failedMessage=\"$visitorIP blacklisted on \".site_url().\" due to failed login attempts on following condition:\\n\\nAttempts: $IPBLC_failedlogin_max (max)\\nTime for max attempts: $IPBLC_failedlogin_time\".\"\\nTotal attempts made: $attempts\".\"\\r\\n\\r\\n\".$showData.\"\\r\\n\\r\\nThank you for using IP Blacklist Cloud\";\r\n\r\n\r\n\t\t\t\t\twp_mail($IPBLC_failedlogin_email,\"$visitorIP Blacklisted (Failed Login)\",$failedMessage);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\t//$isIPSafe==0\t\r\n\r\n}\r\n//----end function---\r\n\r\n\r\n\r\nfunction load_custom_IPBLC_admin_style()\r\n{\r\n\r\n        echo \"<style type=\\\"text/css\\\">\\n\r\n\t.IPSpam, .IPSpamAction{ display: inline; margin: 0px 10px;}\\n\t\t\r\n\t</style>\\n\r\n\t\";\r\n\r\n}\r\n\r\n\r\n\r\nfunction IPJS()\r\n{\r\n\tif(isset($_GET['blacklist']))\r\n\t{\r\n\t\t//print_r($_SERVER);\r\n\t\t$referer=sanitize_text_field($_SERVER['HTTP_REFERER']);\r\n\r\n\t\r\n\t\tif(strpos($referer,\"edit-comments.php\")>0)\r\n\t\t{\r\n\t\t\tip_added_message();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\telseif(isset($_GET['blacklistuser']))\r\n\t{\r\n\t\t//print_r($_SERVER);\r\n\t\t$referer=sanitize_text_field($_SERVER['HTTP_REFERER']);\r\n\t\tif(strpos($referer,\"edit-comments.php\")>0)\r\n\t\t{\r\n\t\t\tuser_added_message();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t$scriptname=\"\";\r\n\tif(isset($_SERVER['SCRIPT_NAME']))\r\n\t{\r\n\t\t$scriptname=$_SERVER['SCRIPT_NAME'];\r\n\t}\r\n\r\n\t$page=\"\";\r\n\tif(isset($_GET['page']))\r\n\t{\r\n\t\t$page=$_GET['page'];\r\n\t}\r\n\r\n?>\r\n<script type=\"text/javascript\">\r\njQuery(\".IPSpamAction\").click(function(){\r\n\r\n\tvar comment_ID=jQuery(this).attr('name');\r\n\tvar spamperc=jQuery(\"#IPSpam-\"+comment_ID);\r\n\tspamperc.css(\"color\",\"#000000\");\r\n\tspamperc.html(\"<img src=\\\"<?php echo site_url(); ?>/wp-admin/images/wpspin_light.gif\\\">\");\r\n<?php\r\n\r\n\t$SpamCheckerUrl=site_url().\"?action=spamcheck\";\r\n\r\n?>\r\n\r\n\r\n\r\n\t\tvar reRequest=jQuery.ajax({\r\n\t\t\t  type: \"POST\",\r\n\t\t\t  url: \"<?php echo $SpamCheckerUrl; ?>\",\r\n\t\t\t  data: {comment_ID: comment_ID},\r\n  \t\t\tdataType: \"html\"\r\n\r\n\t\t\t});\r\n\r\n\t\treRequest.done(function(msg,response) {\r\n\t\t\tif(msg)\r\n\t\t\t{\r\n\t\t\t\tspamperc.css(\"color\",\"#000000\");\r\n\t\t\t\tspamperc.html(msg);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treRequest.fail(function(jqXHR, textStatus) {\r\n\t\t\tspamperc.css(\"color\",\"#FF0000\");\r\n\t\t\tspamperc.html(\"<?php echo __(\"Error\"); ?>\");\r\n\t\t});\r\n\r\n\treturn false;\r\n\r\n});\r\n</script>\r\n<?php\r\n}\r\n\r\nfunction protected_comment_link()\r\n{\r\n\r\n\t$IPBLC_protected=get_option('IPBLC_protected');\r\n\tif($IPBLC_protected==\"2\")\r\n\t{\r\n\r\n\r\n\techo \"Protected with <a href=\\\"http://www.ip-finder.me\\\"><img src=\\\"\".plugins_url().\"/ip-blacklist-cloud/icon.png\\\" style=\\\"display: inline;\\\" alt=\\\"IP Blacklist Cloud\\\"></a><a href=\\\"http://www.ip-finder.me\\\" title=\\\"IP Blacklist Cloud\\\">IP Blacklist Cloud</a>\";\r\n\r\n\r\n\t}\r\n\telse\r\n\t{\r\n\t\t//echo \"<div style=\\\"display: none;\\\">Protected with <a href=\\\"http://www.ip-finder.me\\\" title=\\\"IP Blacklist Cloud\\\">IP Blacklist Cloud</a></div>\";\r\n\t}\r\n}\r\n\r\n\r\nfunction postToCloud($comment_id)\r\n{\r\n\r\n\t$IPBLC_auto_comments=get_option('IPBLC_auto_comments');\r\n\r\n\tif($IPBLC_auto_comments==\"2\")\r\n\t{\r\n\r\n\t\tif(is_numeric($comment_id))\r\n\t\t{\r\n\r\n\t\t\t//------plugin url---\r\n\t\t\t$plugin_dir_name=plugin_dir_url(__FILE__);\r\n\t\t\t//------SpamCheckerfile---\r\n\t\t\t$SpamCheckerUrl=$plugin_dir_name.\"SpamChecker.php\";\r\n\r\n\r\n\t\t\t//echo $SpamCheckerUrl;\r\n\r\n\t\t\t$handle = curl_init($SpamCheckerUrl);\r\n\t\t\t\r\n\t\t\tcurl_setopt($handle, CURLOPT_POSTFIELDS,\"comment_ID=$comment_id\");\r\n\t\t\tcurl_setopt($handle, CURLOPT_POST, 1);\r\n\t\t\tcurl_setopt($handle,  CURLOPT_RETURNTRANSFER, TRUE);\r\n\t\t\tcurl_setopt($handle, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']);\r\n\t\t\tcurl_setopt($handle, CURLOPT_REFERER, site_url());\r\n\t\t\tcurl_setopt( $handle, CURLOPT_FOLLOWLOCATION, true );\r\n\t\t\tcurl_setopt( $handle, CURLOPT_ENCODING, \"\" );\r\n\t\t\tcurl_setopt( $handle, CURLOPT_AUTOREFERER, true );\r\n\t\t\tcurl_setopt( $handle, CURLOPT_MAXREDIRS, 10 );\r\n\t\t\tcurl_setopt($handle,CURLOPT_TIMEOUT,15);\r\n\t\t\tcurl_setopt($handle,CURLOPT_CONNECTTIMEOUT,15);\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t$header_info = curl_getinfo( $handle );\r\n \r\n\t\t\t$httpCode = curl_getinfo($handle, CURLINFO_HTTP_CODE);\r\n\r\n\r\n\t\t\t$response = curl_exec($handle);\r\n\r\n\t\t\t$httpCode = curl_getinfo($handle, CURLINFO_HTTP_CODE);\r\n\t\t\tcurl_close($handle);\r\n\r\n\t\t\t//echo $response;\r\n\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//-----disable auto post to cloud-----------\r\n//add_action('comment_post','postToCloud');\r\n\r\n\r\nadd_action( 'admin_enqueue_scripts', 'load_custom_IPBLC_admin_style' );\r\nadd_action('admin_footer', 'IPJS');\r\nadd_action( 'comment_form', 'protected_comment_link' );\r\n\r\nadd_action('wp_ajax_verifyCloudAccount', 'verifyCloudAccount_callback');\r\n\r\n\r\n\r\nfunction verifyCloudAccount($echo=false)\r\n{\r\n\r\n\r\n\t$IPBLC_cloud_email=get_option('IPBLC_cloud_email');\r\n\t$IPBLC_cloud_key=get_option('IPBLC_cloud_key');\r\n\r\n\tif($IPBLC_cloud_email && $IPBLC_cloud_key)\r\n\t{\r\n\t\t//---post blacklist data to ip-finder.me\r\n\r\n\r\n$data = array('test' => '1');\r\n\r\n\r\n\r\n$contextData = array ( \r\n                'method' => 'POST',\r\n\t\t'content' => http_build_query($data),\r\n\t\t'header' => \"Connection: close\\r\\n\". \r\n                        \"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\r\n\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n \r\n\t\t$context = stream_context_create (array ( 'http' => $contextData ));\r\n\r\n\t\t$email2=urlencode($IPBLC_cloud_email);\r\n\r\n$link=\"http://www.ip-finder.me/wp-content/themes/ipfinder/cloudaccount_status.php?email=$email2&website=\".urlencode(site_url()).\"&website_name=\".urlencode(get_bloginfo('name')).\"&cloudkey=\".$IPBLC_cloud_key;\r\n\r\n\r\n\t\t$post_to_cloud =  file_get_contents (\r\n\t\t$link,\r\n\t\tfalse,\r\n\t\t$context);\r\n\r\n\t\tif($echo)\r\n\t\t{\r\n\t\t\techo $post_to_cloud;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn $post_to_cloud;\r\n\t\t}\r\n\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif($echo)\r\n\t\t{\r\n\t\t\techo \"-1\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn \"-1\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nadd_action('admin_footer', 'IPJS2');\r\n\r\n\r\nfunction IPJS2()\r\n{\r\n\r\n?>\r\n<script>\r\n\r\nvar ajaxloader=\"<img src=\\\"<?php echo site_url(); ?>/wp-admin/images/wpspin_light.gif\\\">\";\r\n\r\n\r\nfunction blacklist_IP(IP,commentID)\r\n{\r\n\tjQuery(\"#IPBlack\"+commentID).html(ajaxloader);\r\n\r\n\t\tvar reRequest=jQuery.ajax({\r\n\t\t\t  type: \"POST\",\r\n\t\t\t  url: \"<?php echo get_bloginfo('url'); ?>/\",\r\n\t\t\tdata: {blacklist: IP, action: \"blacklistIPJS\"},\r\n  \t\t\tdataType: \"html\"\r\n\t\t\t});\r\n\r\n\t\treRequest.done(function(msg) {\r\n\t\t\tresult=msg;\r\n\t\t\t//alert(result);\r\n\r\n\t\t\t\r\n\t\tif(result)\r\n\t\t{\r\n\t\t\tjQuery(\"#IPBlack\"+commentID).html(result);\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tjQuery(\"#IPBlack\"+commentID).html(\"<font color=red>Error! Try Again.</font>\");\r\n\t\t}\r\n\r\n\t\t});\r\n\r\n\t\treRequest.fail(function(jqXHR, textStatus) {\r\n\t\t\t//msg_box.show();\r\n\t\t\tjQuery(\"#IPBlack\"+commentID).html(\"<font color=red>Error! Try Again.</font>\");\r\n\t\t\tresult=false;\t\r\n\t\t});\r\n\r\n\r\n\r\n\t\r\n}\r\n\r\nfunction blacklist_USER(USER,commentID)\r\n{\r\n\tjQuery(\"#UserBlack\"+commentID).html(ajaxloader);\r\n\r\n\t\tvar reRequest=jQuery.ajax({\r\n\t\t\t  type: \"POST\",\r\n\t\t\t  url: \"<?php echo get_bloginfo('url'); ?>/\",\r\n\t\t\tdata: {blacklistuser: USER, action: \"blacklistUSERJS\"},\r\n  \t\t\tdataType: \"html\"\r\n\t\t\t});\r\n\r\n\t\treRequest.done(function(msg) {\r\n\t\t\tresult=msg;\r\n\t\t\t//alert(result);\r\n\r\n\t\t\t\r\n\t\tif(result)\r\n\t\t{\r\n\t\t\tjQuery(\"#UserBlack\"+commentID).html(result);\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tjQuery(\"#UserBlack\"+commentID).html(\"<font color=red>Error! Try Again.</font>\");\r\n\t\t}\r\n\r\n\t\t});\r\n\r\n\t\treRequest.fail(function(jqXHR, textStatus) {\r\n\t\t\t//msg_box.show();\r\n\t\t\tjQuery(\"#UserBlack\"+commentID).html(\"<font color=red>Error! Try Again.</font>\");\r\n\t\t\tresult=false;\t\r\n\t\t});\t\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<?php\r\n}\r\n\r\n\r\nfunction isIpSafe($checkIP)\r\n{\r\n\r\n\r\n\t$isIPSafe1=0;\r\n\t$IPBLC_whitelist=get_option('IPBLC_whitelist');\r\n\t$IPBLC_whitelist=str_replace('\\r\\n',\"\\r\\n\",$IPBLC_whitelist);\r\n\t$IPBLC_whitelist=str_replace(\"\\r\\n\",\"\\n\",$IPBLC_whitelist);\r\n\r\n\tif($IPBLC_whitelist)\r\n\t{\r\n\t\t$IPBLC_whitelist_explode=explode(\"\\n\",$IPBLC_whitelist);\r\n\r\n\r\n\t\tforeach($IPBLC_whitelist_explode as $wIP)\r\n\t\t{\r\n\t\t\t$wIP=str_replace(\"\\n\",\"\",$wIP);\r\n\t\t\t$wIP=str_replace(\" \",\"\",$wIP);\r\n\r\n\t\t\tif($wIP)\r\n\t\t\t{\r\n\t\t\t$wIP_range=explode(\"-\",$wIP);\r\n\t\t\t//print_r($wIP_range);\r\n\r\n\t\t\t$range=0;\r\n\t\t\tif(count($wIP_range)>1)\r\n\t\t\t{\r\n\t\t\t\t$range=1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif($range==0)\r\n\t\t\t{\r\n\r\n\t\t\t\t//echo \"no range...<BR>\";\r\n\r\n\t\t\t\t$wIP_explode=explode(\".\",$wIP);\r\n\t\t\t\t$wIP2=intval($wIP_explode[0]).\".\".intval($wIP_explode[1]).\".\".intval($wIP_explode[2]).\".\".intval($wIP_explode[3]);\r\n\r\n\t\t\t\t//echo \"$visitorIP==$wIP2 -- \".ip2long($visitorIP).\" -- \".ip2long($wIP2).\"<BR>\";\r\n\r\n\t\t\t\t//echo \"OK: \".filter_var($wIP2, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4).\"<BR>\";\r\n\r\n\t\t\t\tif(ip2long($checkIP)==ip2long($wIP2))\r\n\t\t\t\t{\r\n\t\t\t\t\t//echo \"SAFE<BR>\";\r\n\t\t\t\t\t$isIPSafe1=1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t//echo \"range...<BR>\";\r\n\r\n\r\n\t\t\t\t$wIP_explode1=explode(\".\",$wIP_range[0]);\r\n\t\t\t\t$wIP_explode2=explode(\".\",$wIP_range[1]);\r\n\t\t\t\t$wIP2_1=intval($wIP_explode1[0]).\".\".intval($wIP_explode1[1]).\".\".intval($wIP_explode1[2]).\".\".intval($wIP_explode1[3]);\r\n\t\t\t\t$wIP2_2=intval($wIP_explode2[0]).\".\".intval($wIP_explode2[1]).\".\".intval($wIP_explode2[2]).\".\".intval($wIP_explode2[3]);\r\n\r\n\t\t\t\t//echo \"$visitorIP==$wIP2 -- \".ip2long($visitorIP).\" -- \".ip2long($wIP2).\"<BR>\";\r\n\r\n\t\t\t\t//echo \"OK: \".filter_var($wIP2, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4).\"<BR>\";\r\n\t\t\t\t//\techo ip2long($checkIP).\">=\".ip2long($wIP2_1).\" && \".ip2long($checkIP).\"<=\".ip2long($wIP2_2).\"<BR>\";\r\n\r\n\t\t\t\tif(ip2long($checkIP)>=ip2long($wIP2_1) && ip2long($checkIP)<=ip2long($wIP2_2) )\r\n\t\t\t\t{\r\n\t\t\t\t//\techo ip2long($checkIP).\">=\".ip2long($wIP2_1).\" && \".ip2long($checkIP).\"<=\".ip2long($wIP2_2);\r\n\t\t\t\t//\techo \"SAFE\";\r\n\t\t\t\t\t$isIPSafe1=1;\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\treturn $isIPSafe1;\r\n\r\n}\r\n\r\n\r\n\r\nfunction post_blacklist_add($IP)\r\n{\r\n\r\n\r\n$data = array('test' => '1');\r\n\r\n\r\n\r\n$contextData = array ( \r\n                'method' => 'POST',\r\n\t\t'content' => http_build_query($data),\r\n\t\t'header' => \"Connection: close\\r\\n\". \r\n                        \"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\r\n\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n \r\n\r\n// Create context resource for our request\r\n\r\n$context = stream_context_create (array ( 'http' => $contextData ));\r\n$link=\"http://www.ip-finder.me/wp-content/themes/ipfinder/blacklist_add.php?IP=\".$IP.\"&website=\".urlencode(site_url()).\"&website_name=\".urlencode(get_bloginfo('name'));\r\n\r\n$post_to_cloud =  file_get_contents (\r\n                  $link,  // page url\r\n                  false,\r\n                  $context);\r\n\r\n\r\n//\techo \"return: $post_to_cloud\";\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction post_blacklist_add_multi($IPs)\r\n{\r\n\r\n\r\n$data = array('test' => '1');\r\n\r\n//print_r($IPs);\r\n\r\nif($IPs)\r\n{\r\n\r\n\t$IP_var=\"\";\r\n\t$sep=\"\";\r\n\t\r\n\tforeach($IPs as $IPx)\r\n\t{\r\n\t\t$IP_var.=$sep.$IPx;\r\n\t\t$sep=\",\";\r\n\t}\r\n\r\n\r\n$contextData = array ( \r\n                'method' => 'POST',\r\n\t\t'content' => http_build_query($data),\r\n\t\t'header' => \"Connection: close\\r\\n\". \r\n                        \"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\r\n\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n \r\n\r\n// Create context resource for our request\r\n\r\n$context = stream_context_create (array ( 'http' => $contextData ));\r\n$link=\"http://www.ip-finder.me/wp-content/themes/ipfinder/blacklist_add_multi.php?IP=\".$IP_var.\"&website=\".urlencode(site_url()).\"&website_name=\".urlencode(get_bloginfo('name'));\r\n\r\n\r\n$post_to_cloud =  file_get_contents (\r\n                  $link,  // page url\r\n                  false,\r\n                  $context);\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction post_blacklist_add_user($user)\r\n{\r\n\r\n\r\n$data = array('test' => '1');\r\n\r\n\r\n\r\n$contextData = array ( \r\n                'method' => 'POST',\r\n\t\t'content' => http_build_query($data),\r\n\t\t'header' => \"Connection: close\\r\\n\". \r\n                        \"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\r\n\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n \r\n\r\n// Create context resource for our request\r\n\r\n$context = stream_context_create (array ( 'http' => $contextData ));\r\n\r\n$link=\"http://www.ip-finder.me/wp-content/themes/ipfinder/blacklist_user_add.php?USER=\".$user.\"&website=\".\r\nurlencode(site_url()).\"&website_name=\".urlencode(get_bloginfo('name'));\r\n\r\n$post_to_cloud =  file_get_contents (\r\n                  $link,  // page url\r\n                  false,\r\n                  $context);\r\n\r\n}\r\n\r\n\r\nfunction check_fixes()\r\n{\r\n\t$IPBLC_fix=get_option('IPBLC_fixes');\r\n\r\n\tif($IPBLC_fix==\"\")\r\n\t{\r\n\r\n?>\r\n\t<div class=\"error\">\r\n\t\t<p><h4 style=\"color: #FF0000;\">Action Required by IP Blacklist Cloud Plugin!</h4>\r\n\t\t<b>Please check <a href=\"admin.php?page=wp-IPBLC-fixes\">fixes</a> page for database issues.</b></p>\r\n\t</div>\r\n<?php\r\n\t}\r\n\r\n}\r\n\r\n\r\nfunction auto_blacklist_spam($comment_object)\r\n{\r\n\tglobal $wpdb;\r\n\r\n\t$IP=$comment_object->comment_author_IP;\r\n\r\n\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t$time=time();\r\n\r\n\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\r\n\t$found=false;\r\n\r\n//\tprint_r($IP_in_DP);\r\n\r\n\tif(!$IP_in_DP)\r\n\t{\r\n\r\n\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t{\r\n//\t\t\techo \"$IP\".\"\\n\";\r\n\r\n\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) VALUES(%s,%d,%d,%d)\",array($IP,$time,0,0)));\r\n\t\t\tpost_blacklist_add($IP);\r\n\t\t}\r\n\t}\t\r\n}\r\n\r\nfunction auto_blacklist_spam_multi()\r\n{\r\n\tglobal $wpdb;\r\n\r\n\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t$time=time();\r\n\r\n\t$IPs=array();\r\n\r\n\r\n\t\t$action1=\"\";\r\n\t\t$action2=\"\";\r\n\t\t$sp=\"\";\r\n\t\t\r\n\t\tif(isset($_GET['action']))\r\n\t\t{\r\n\t\t\t$action1=$_GET['action'];\r\n\t\t}\r\n\t\t\r\n\t\tif(isset($_POST['action']))\r\n\t\t{\r\n\t\t\t$action1=$_POST['action'];\r\n\t\t}\r\n\t\t\r\n\t\tif(isset($_GET['action2']))\r\n\t\t{\r\n\t\t\t$action2=$_GET['action2'];\r\n\t\t}\r\n\t\tif(isset($_POST['action2']))\r\n\t\t{\r\n\t\t\t$action2=$_POST['action2'];\r\n\t\t}\r\n\t\tif(isset($_POST['spam']))\r\n\t\t{\r\n\t\t\t$sp=$_POST['spam'];\r\n\t\t}\r\n\r\n\r\n\r\n\tif($action1 || $action2)\r\n\t{\r\n\t\tif($action1==\"spam\" || $action2==\"spam\" || ($action1==\"delete-comment\" && $sp==1)  || ($action2==\"delete-comment\" && $sp==1) )\r\n\t\t{\r\n\r\n\t\t\tif(isset($_GET['delete_comments']))\r\n\t\t\t{\r\n\t\t\t\t$comments=$_GET['delete_comments'];\r\n\r\n\r\n\t\t\t\tforeach($comments as $commentID)\r\n\t\t\t\t{\r\n\t\t\t\t\t$commentX=get_comment(sanitize_text_field($commentID) );\r\n\t\t\t\t\t//print_r($commentX);\r\n\t\t\t\t\t$IP=$commentX->comment_author_IP;\r\n\r\n\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\r\n\t\t\t\t\tif(!$IP_in_DP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$IPs[]=$IP;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif($IPs)\r\n\t\t\t\t{\r\n\t\t\t\t\t$IPs=array_unique($IPs);\r\n\t\t\t\t\tforeach($IPs as $IP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) \r\n\t\t\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($IP,$time,0,0)));\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpost_blacklist_add_multi($IPs);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telseif(isset($_POST['id']))\r\n\t\t\t{\r\n\t\t\t\t\t$commentX=get_comment(sanitize_text_field($_POST['id']) );\r\n\t\t\t\t\t//print_r($commentX);\r\n\t\t\t\t\t$IP=$commentX->comment_author_IP;\r\n\r\n\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\r\n\t\t\t\t\tif(!$IP_in_DP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$IPs[]=$IP;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\tif($IPs)\r\n\t\t\t\t{\r\n\t\t\t\t\t$IPs=array_unique($IPs);\r\n\t\t\t\t\tforeach($IPs as $IP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) \r\n\t\t\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($IP,$time,0,0)));\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpost_blacklist_add_multi($IPs);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\nfunction ipblc_notice()\r\n{\r\n\tglobal $pagenow;\r\n\t$msg_array=array();\r\n\t$msg_array[]='Manage multiple WordPress sites with <a href=\"http://www.ip-finder.me/ipblc-server/\">IPBLC Cloud Server</a> premium tool.';\r\n\t$msg_array[]='Tired of blocking same IP on multiple sites? <a href=\"http://www.ip-finder.me/ipblc-server/\">IPBLC Cloud Server</a> is a solution.';\r\n\t$msg_array[]='<a href=\"http://www.ip-finder.me/ipblc-server/\">IPBLC Cloud Server</a> - Synchronize IP addresses on multiple sites.';\r\n\r\n\t$show=0;\r\n\tif($pagenow == 'edit-comments.php')\r\n\t{\r\n\t\t$show=1;\r\n\t\t\t//---set emptry array---\r\n\t\t\t$start=0;\r\n\t\t\t$end=15;\r\n\t\t\tfor($i=$start;$i<=$end;$i++)\r\n\t\t\t{\r\n\t\t\t\t$msg_array[]=\"\";\r\n\t\t\t}\r\n\r\n\t\t\techo '<div class=\"error mob_error\"><p><b>IP Blacklist</b> - Columns visibility problem on mobile.</p></div>';\r\n?>\r\n<style>\r\n@media screen and (min-width: 782px)\r\n{\r\n\t.mob_error\r\n\t{\r\n\t\tdisplay: none;\r\n\t}\r\n}\r\n</style>\r\n<?php\r\n\t}\r\n\telseif($pagenow == 'admin.php')\r\n\t{\r\n\t\tif(isset($_GET['page']))\r\n\t\t{\r\n\t\t\tif($_GET['page']==\"wp-IPBLC-list\" || $_GET['page']==\"wp-IPBLC-Add\")\r\n\t\t\t{\r\n\t\t\t\t$show=1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t$rand=array_rand($msg_array,2);\r\n\t$msg=$msg_array[$rand[0]];\r\n\r\n\tif($show==1 && $msg!=\"\")\r\n\t{\r\n\t\techo '<div class=\"updated\"><p><b>'.$msg.'</b></p></div>';\r\n\t}\r\n}\r\nadd_action('admin_notices', 'ipblc_notice');\r\n\r\n?>", "=== IP Blacklist Cloud ===\r\nContributors: ad33lx\r\nDonate link: \r\nTags: comments, spam, IP, blacklist, cloud, IP cloud, block, spamming, secure, failed login, hack attempt, auto block login\r\nRequires at least: 3.3\r\nTested up to: 4.1.1\r\nStable tag: 3.42\r\nLicense: GPLv2 or later\r\nLicense URI: http://www.gnu.org/licenses/gpl-2.0.html\r\n\r\n\r\n\r\nBlacklist IP Addresses from visiting your WordPress website and Usernames from spamming.  View details of all failed login attempts.\r\n\r\n\r\n== Description ==\r\n\r\nIP Blacklist Cloud plugin allows you to blacklist IP addresses from visiting your WordPress website. Also, it submits your website link to the blocked IP database on [http://ip-finder.me](http://ip-finder.me/) which gives the other users to view how many sites have blocked the specific IP and see their comments.\r\nNew feature has been added to plugin which allows you to block usernames from spamming (comments) on your website.\r\n\r\n\r\nPremium Software for managing multiple WordPress websites for synchronization: IP Blacklist Cloud Server - http://ip-finder.me/ipblc-server/\r\n\r\n\r\n== Installation ==\r\n\r\nNote: Before downloading and installing plugin, you must accept that plugin sends your website url (using site_url()), website name (using get_bloginfo(\ufffdname\ufffd)) automatically when you blacklist any IP to http://ip-finder.me and show this on relative blacklisted IP. (Example: http://ip-finder.me/wpip?IP=203.81.202.127)\r\n\r\nSpamChecker sends comments data (Name, Email, URL and Comment) to check Spam Percentages based on our database.\r\n\r\n\r\n1. Upload 'ip_blacklist_cloud' folder to the '/wp-content/plugins/' directory\r\n\r\n2. Activate the plugin through the 'Plugins' menu in WordPress\r\n\r\n== How Does it Work ==\r\n\r\n1. If you want to block an IP manually, you can do this by providing IP in admin menu \ufffdIP Blacklist->Add IP to Blacklist\ufffd.\r\n\r\n2. If any visitor or spamming bot post comment on your posts, by visiting \ufffdComments\ufffd menu you can view IP and details on ip-finder.me or blacklist the IP.\r\n\r\nFor example: http://ip-finder.me/wpip?IP=203.81.202.127\r\n\r\n3. Once you black list the IP address, the visitor will not be able to view any content of your website and also post your website link and name on IP Finder cloud.\r\n\r\n4. You can delete any IP from blacklist by visiting admin menu \ufffdIP Blacklist->Blacklist\ufffd and it will also remove your site link and name from the list of websites which have blocked that specific IP.\r\n\r\n5. You can leave comments on IP Cloud (example: http://ip-finder.me/wpip?IP=203.81.202.127 ) so that other users can get the idea why this IP have been blocked by your site.\r\n\r\n== Frequently asked questions ==\r\n\r\nQ1. What data does this plugin submits to http://ip-finder.me/\r\nAns: * This plugin submits your WordPress site url and site name.\r\n     * Version 1.1 sends pending comment to http://ip-finder.me/ and find the same comment if it was posted on any other WordPress websites who have installed this plugin.\r\n     * Sending comment details to cloud requires user action and it is not automatic.\r\n\r\nQ2. Why does it sends WordPress site url and site name?\r\nAns: In order to build this IP Cloud valuable to all the users, ip-finder.me save site name and site url only for specific IP (when you block it) so that it gives the attention to other users that this IP could be dangerous for their website.\r\n\r\nQ3. How and when does it sends data to ip-finder.me\r\nAns: Plugin sends the data only on two conditions:\r\n\r\n  1. When you blacklist any IP on your website, it saves the data on ip-finder.me and add your site to the list of websites who have blocked that specific IP.\r\n  2. When you delete any IP from blacklist, it sends request to ip-finder.me to remove your site from the list of websites who have blocked that specific IP.\r\n  3. When you request to check Spam Percentage of any comment.\r\n\r\n\r\nQ4. If we block any IP, can they access example.com/wp-admin or still post comments?\r\nAns: NO! This is the main reason why this plugin has been built to avoid spamming on WordPress based websites. you can test this on demo server (Please see Demo section below)\r\n\r\nQ6. What data does it sends for checking spam percentage of a comment?\r\nAns: It sends Name, Email, URL and the contents of the comments.\r\n\r\nQ7. What data do you keep in your database?\r\nAns: We keep details of \r\n\r\n\t* Blacklist IPs\r\n\t* Blacklisted Usernames\r\n\t* Websites' names and URLs who have blocked that specific IP address\r\n\t* Comments details on which users have doubt that they are SPAM.\r\n\r\n== Screenshots ==\r\n\r\n1. http://demo.ip-finder.me/wp-content/uploads/2012/08/ip_box.png\r\n\r\n== DEMO ==\r\n\r\nYou can test this plugin before downloading and installing on demo server.\r\nhttp://demo.ip-finder.me/demo-details/\r\n\r\n\r\n== Changelog ==\r\n\r\n= 3.42 =\r\n* Quick Fix - Fixed mysql_real_escape_string() warning\r\n\r\n= 3.4.1 =\r\n* Fixed security exploits found by Mika Epstein\r\n\r\n= 3.4 =\r\n* Fixed security exploits found by Mika Epstein\r\n\r\n= 3.3 =\r\n* Fixed minor PHP Errors\r\n* Fixed auto blacklist if \"spam\" link is clicked for single comment. \r\n* Protected with IP Blacklist Cloud will be displayed with comment form (no more ON / OFF settings).\r\n\r\n= 3.2 =\r\n* Automatically Blacklist mulitple IP addresses for spam comments (mark as spam from dropdown)\r\n* Fixed PHP and Database Errors.\r\n* Run fix on database for avoiding slow queries.\r\n* Faster Spam Calculator (cURL is required).\r\n\r\n= 3.1 =\r\n* Fixed Security Exploit in plugin.\r\n\r\n= 3.0 =\r\n* Fixes for small bugs.\r\n* Add a range of IP address for whitelist.\r\n* Auto Block any IP for specific user login (set list of usernames).\r\n* Check blacklisted IP addresses that did not attack in last 90 days.\r\n\r\n= 2.91 =\r\n* Quick Fix for 406 error while connecting to ip-finder.me\r\n\r\n= 2.9 =\r\n* Sub-menu added to fix tables (create indexes). NEW - IMPORTANT!\r\n* Blacklist IP now shows last attack (attack after blocking).\r\n* Sends Failed Login attempts details of last 5 attempts in email.\r\n* Blacklist IP page now shows 50 IP addresses per page.\r\n* Failed Login page now shows 50 IP addresses per page.\r\n\r\n= 2.8 =\r\n* Sub-menu added to fix tables (create indexes). IMPORTANT!\r\n\r\n= 2.7 =\r\n* Changed site_url() to get_bloginfo('url') for AJAX call. site_url() was having problem for those who set WordPress URL and Website URL different.\r\n\r\n= 2.6 =\r\n* Allow you to connect with IP Blacklist Cloud Server (Premium Software) http://ip-finder.me/ipblc-server/\r\n\r\n= 2.5 =\r\n* Shows details of Failed login attempts for single IP if attempts are less than or equals to 3. For 4 or above attempts, view details on each IP on separate page.\r\n* Check / Uncheck All failed login attempts and blacklist multiple IPs with one click.\r\n* Whitelist menu added for those who blacklist themselves by mistake. \r\n\r\n\r\n= 2.4 =\r\n* Fixed \"Warning: Cannot modify header information - headers already sent by....\" error.\r\n\r\n= 2.3 =\r\n* Throws 404 Response to blacklisted IP addresses.\r\n* Search option added for blacklisted IP addresses.\r\n* Delete Multiple blacklisted IP addresses by check/uncheck all option.\r\n* EXTRA SECURITY menu added.\r\n\r\n\r\n\r\n\r\n= 2.2 =\r\n* Settings to allow \"Sort by IP status\" in failed login page. By setting it to yes, you can sort Failed Login by IP Status (Neutral/Blacklisted).\r\n\r\n\r\n= 2.1 =\r\n* Fixes for \"Details Page\" of failed login IP.\r\n\r\n\r\n= 2.0 =\r\n* Failed login table shows each IP one time with number of attempts. Details of each IP are also available on single click.\r\n* Settings added for auto blacklisting IP for \"x\" number of failed attempts within given \"y\" time.\r\n* Receive email (optional) on auto blacklisting IP based on failed login attempts.\r\n\r\n\r\n= 1.9 =\r\n* Added \"Failed Logins\" sub-menu which shows details of IP, user agent and POST query variables.\r\n* Shows counter while importing CSV (Updating Database... x of xx).\r\n* Fixed Tables of Blacklisted IP addresses and Usernames.\r\n* Removed annoying \"Rate IP Blacklist\" message.\r\n\r\n= 1.8 =\r\n* Reduced server connection time.\r\n* Disabled auto submission of Comments for spam check. You must \"Calculate\" it manually from now.\r\n\r\n= 1.7 =\r\n* Cloud Account (Premium) function has been disabled due to problems in connecting with our server.\r\n* Import / Export option added in Settings page.\r\n* Ajax blacklist function for IP and Username added on Comments page. Page will not refresh anymore.\r\n* Sorting option added on IP Blacklist and Username Blacklist page. You can now check Blacklisted IP or Usernames visits after they are blocked. \r\n* Fixed Auto posting of comments to our server for spam check.\r\n\r\n= 1.6 =\r\n* Fixed Cloud Account functions for directory based WordPress websites.\r\n\r\n= 1.5 =\r\n* Fixed \"Delete IP\" function on IP Blacklist page.\r\n* Blacklist Usernames to avoid spamming from same user on your website.\r\n* Visit counter for both IP and Usernames has been added on their respective menu pages.\r\n* PREMIUM SERVICE option has been added on settings pages of IP Blacklist plugin. (See details at: http://ip-finder.me/cloudaccount/ )\r\n\r\n= 1.4 =\r\n* Spam Checker bugs fixed for posting comments to IP Blacklist Cloud.\r\n* Auto submit comment to IP Blacklist Cloud when visitor post any comment to your website (You can turn off this feature).\r\n\r\n= 1.3 =\r\n* Blacklist statistics page added in Admin Panel.\r\n\r\n= 1.2 =\r\n* Fixed Blacklist option on \"Comments\" Page for non-subdomain WordPress websites.\r\n\r\n= 1.1 =\r\n* Find Spam Pecentage of any pending comment by posting details to http://ip-finder.me/\r\n\r\n= 0.1 =\r\n* Initial Release\r\n\r\n\r\n== Upgrade Notice ==\r\n\r\n\r\n= 1.9 =\r\n* Added \"Failed Logins\" sub-menu which shows details of IP, user agent and POST query variables.\r\n* Shows counter while importing CSV (Updating Database... x of xx).\r\n* Fixed Tables of Blacklisted IP addresses and Usernames."], "fixing_code": ["<?php\r\n/*\r\nPlugin Name: IP Blacklist Cloud\r\nPlugin URI: http://wordpress.org/extend/plugins/ip-blacklist-cloud/\r\nDescription: Blacklist IP Addresses from visiting your WordPress website and block usernames from spamming. View details of all failed login attempts.\r\nVersion: 3.43\r\nAuthor: Adeel Ahmed\r\nAuthor URI: http://www.ip-finder.me/\r\n*/\r\n\r\n\r\n\r\n\r\nif ( !defined('ABSPATH') )\r\n\tdie ( 'No direct script access allowed' );\r\n\r\n\r\n\tglobal $check_all_url_open;\r\n\t$check_all_url_open = ini_get('allow_url_fopen');\r\n\r\n\t$this_plugin_url=plugins_url( '/', __FILE__ );\r\n\r\n\tglobal $this_plugin_url;\r\n\r\n\r\nfunction ip_added()\r\n{\r\n\tglobal $wpdb,$found,$IP_global, $IP_error;\r\n\r\n\t$IP=sanitize_text_field($_GET['blacklist']);\r\n\r\n\t//---check if IP is valid IPV4 or not before checking already added---\r\n\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t{\r\n  \r\n\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\r\n\t\t$found=false;\r\n\r\n\t\tif(!$IP_in_DP)\r\n\t\t{\r\n\r\n\t\t\t//---check if IP is valid IPV4 or not before adding to database---\r\n\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t{\r\n\r\n\t\t\t\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\t\t$time=time();\r\n\r\n\t\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) VALUES(%s,%d,%d,%d)\",\r\n\t\t\t\t\tarray($IP,$time,0,0)));\r\n\r\n\t\t\t\t//---post blacklist data to ip-finder.me\r\n\t\t\t\tpost_blacklist_add($IP);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$found=true;\r\n\t\t\t\t$IP_error=true;\r\n\t\t\t}\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$found=true;\r\n\t\t}\r\n\r\n\t\t$IP_global=$IP;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$found=true;\r\n\t\t$IP_error=true;\t\r\n\t}\r\n\r\n}\r\n\r\n\r\nfunction user_added()\r\n{\r\n\tglobal $wpdb,$found,$USER_global, $USER_error;\r\n\r\n\t$USER=$_POST['blacklistuser'];\r\n\t$USER=sanitize_text_field($USER);\r\n\r\n\t$USER_in_DB=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_usernames WHERE USERNAME=%s\",$USER));\r\n\r\n\t$found=false;\r\n\r\n\tif(!$USER_in_DB)\r\n\t{\r\n\r\n\t\tif($USER)\r\n\t\t{\r\n\t\t\t$table=$wpdb->prefix.\"IPBLC_usernames\";\r\n\t\t\t$time=time();\r\n\r\n\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table (USERNAME,timestamp,visits,lastvisit) VALUES(%s,%d,%d,%d)\",\r\n\t\t\tarray($USER,$time,0,0)));\r\n\r\n\t\t\t//---post blacklist data to ip-finder.me\r\n\t\t\t$USER2=urlencode($USER);\r\n\t\t\tpost_blacklist_add_user($USER2);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$found=true;\r\n\t\t\t$USER_error=true;\r\n\t\t}\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$found=true;\r\n\t}\r\n\r\n\t$USER_global=$USER;\r\n}\r\n\r\n\r\n\r\nfunction ip_added_message()\r\n{\r\n\r\n\tglobal $found,$IP_global,$IP_error;\r\n\t$IP=$IP_global;\r\n\r\n\r\n\tif(!$found)\r\n\t{\r\n\r\n?>\r\n<style>\r\n#IPBLC_message_blacklist\r\n{\r\n\r\n\tposition: fixed;\r\n\tbottom: 8px;\r\n\tfloat: right;\r\n\tright: 8px;\r\n\tborder:1px solid #99FF99;\r\n\tbackground-color: #DDFFDD;\r\n\tfont-size: 20px;\r\n\t//font-weight: bold;\r\n\tpadding: 12px;\r\n\tcolor: #000000;\r\n}\r\n</style>\r\n\r\n<?php\r\n\r\n\techo \"<div id=\\\"IPBLC_message_blacklist\\\">$IP added to blacklist. Please comment on <a href=\\\"http://www.ip-finder.me/$IP/\\\" target=\\\"_blank\\\">IP-FINDER.ME</a></div>\";\r\n\r\n\t}\r\n\telse\r\n\t{\r\n?>\r\n\r\n<style>\r\n#IPBLC_message_blacklist\r\n{\r\n\tposition: fixed;\r\n\tbottom: 8px;\r\n\tfloat: right;\r\n\tright: 8px;\r\n\tborder:1px solid #FF9999;\r\n\tbackground-color: #FFDDDD;\r\n\tfont-size: 20px;\r\n\t//font-weight: bold;\r\n\tpadding: 12px;\r\n\tcolor: #000000;\r\n}\r\n</style>\r\n\r\n<?php\r\n\r\n\t\tif(!$IP_error)\r\n\t\t{\r\n\t\t\techo \"<div id=\\\"IPBLC_message_blacklist\\\">$IP already added to blacklist.</div>\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\techo \"<div id=\\\"IPBLC_message_blacklist\\\">$IP is not valid IP Address.</div>\";\r\n\t\t}\r\n\r\n\t}\r\n\r\n\techo \"<script>jQuery('#IPBLC_message_blacklist').delay(8500).fadeOut(6000); jQuery('#IPBLC_message_blacklist').click(function(){ jQuery(this).hide(); });</script>\";\r\n\r\n}\r\n\r\n\r\nfunction user_added_message()\r\n{\r\n\r\n\tglobal $found,$USER_global,$USER_error;\r\n\t$USER=$USER_global;\r\n\r\n\r\n\t$USER=str_replace('\\\"','\"',$USER);\r\n\t$USER=str_replace(\"\\'\",\"'\",$USER);\r\n\t$USER=str_replace(\"\\\\\\'\",\"'\",$USER);\r\n\r\n\tif(!$found)\r\n\t{\r\n\r\n?>\r\n<style>\r\n#IPBLC_message_blacklist\r\n{\r\n\r\n\tposition: fixed;\r\n\tbottom: 8px;\r\n\tfloat: right;\r\n\tright: 8px;\r\n\tborder:1px solid #99FF99;\r\n\tbackground-color: #DDFFDD;\r\n\tfont-size: 20px;\r\n\t//font-weight: bold;\r\n\tpadding: 12px;\r\n\tcolor: #000000;\r\n}\r\n</style>\r\n\r\n<?php\r\n\r\n\techo \"<div id=\\\"IPBLC_message_blacklist\\\">$USER added to blacklist.</a></div>\";\r\n\r\n\t}\r\n\telse\r\n\t{\r\n?>\r\n\r\n<style>\r\n#IPBLC_message_blacklist\r\n{\r\n\tposition: fixed;\r\n\tbottom: 8px;\r\n\tfloat: right;\r\n\tright: 8px;\r\n\tborder:1px solid #FF9999;\r\n\tbackground-color: #FFDDDD;\r\n\tfont-size: 20px;\r\n\t//font-weight: bold;\r\n\tpadding: 12px;\r\n\tcolor: #000000;\r\n}\r\n</style>\r\n\r\n<?php\r\n\r\n\t\tif(!$USER_error)\r\n\t\t{\r\n\t\t\techo \"<div id=\\\"IPBLC_message_blacklist\\\">$USER already added to blacklist.</div>\";\r\n\t\t}\r\n\r\n\t}\r\n\r\n\techo \"<script>jQuery('#IPBLC_message_blacklist').delay(8500).fadeOut(6000); jQuery('#IPBLC_message_blacklist').click(function(){ jQuery(this).hide(); });</script>\";\r\n\r\n}\r\n\r\n\r\nfunction blacklist_failed_login()\r\n{\r\n\r\n\tinclude \"blacklist-failed-login.php\";\r\n}\r\n\r\nfunction page_IPBLC_actions() \r\n{  \r\n\r\n\r\n\tglobal $this_plugin_url;\r\n\r\n\tglobal $wpdb;\r\n\t$newFailed=0;\r\n\t$table1=$wpdb->prefix.\"IPBLC_login_failed\";\r\n\t$table2= $wpdb->prefix.\"IPBLC_blacklist\";\r\n\t$countMain=\"\";\r\n\t$countOld=\"\";\r\n\t$time=time();\r\n\t$days_90=$time-(90*24*60*60);\r\n\r\n\r\n\t$rr=$wpdb->get_results(\"SELECT * FROM $table1 t1 WHERE NOT EXISTS (SELECT 1 FROM $table2 t2 WHERE t1.IP = t2.IP)\");\r\n\t$old=$wpdb->get_results($wpdb->prepare(\"SELECT * FROM $table2 WHERE timestamp<=%d && lastvisit<=%d\",array($days_90,$days_90)));\r\n\r\n\t//print_r($rr);\r\n\r\n\tif($rr)\r\n\t{\r\n\t\t$newFailed=count($rr);\r\n\t\t$countMain='<span class=\"awaiting-mod count-'.$newFailed.'\"><span class=\"pending-count\">'.$newFailed.'</span></span>';\r\n\t}\r\n\r\n\tif($newFailed==0)\r\n\t{\r\n\t\t$newFailed=\"\";\r\n\t\t$countMain=\"\";\r\n\t}\r\n\r\n\tif($old)\r\n\t{\r\n\t\t$countOld='<span class=\"awaiting-mod count-'.count($old).'\"><span class=\"pending-count\">'.count($old).'</span></span>';\r\n\r\n\t}\r\n\r\n\tif($newFailed>0)\r\n\t{\r\n\tadd_menu_page( \"IP Blacklist\", \"IP Blacklist $countMain\", \"manage_options\", \"wp-IPBLC\",\"\",$this_plugin_url.\"icon.png\");\r\n\t}\r\n\telse\r\n\t{\r\n\tadd_menu_page( \"IP Blacklist\", \"IP Blacklist\", \"manage_options\", \"wp-IPBLC\",\"\",$this_plugin_url.\"icon.png\");\r\n\t}\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Settings\", \"Settings\", \"manage_options\", \"wp-IPBLC\", \"blacklist_settings\" );\r\n\r\n\tadd_submenu_page( \"wp-IPBLC\", \"IP Blacklist\", \"IP Blacklist\", \"manage_options\", \"wp-IPBLC-list\", \"blacklist_tool\" );\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Add IP to Blacklist\", \"Add IP to Blacklist\", \"manage_options\", \"wp-IPBLC-Add\", \"blacklist_add\" );\r\n\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Username Blacklist\", \"User Blacklist\", \"manage_options\", \"wp-IPBLC-list-user\", \"blacklist_tool_user\" );\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Add username to Blacklist\", \"Add User to Blacklist\", \"manage_options\", \"wp-IPBLC-Add-User\", \"blacklist_add_user\" );\r\n\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Auto Block\", \"Auto Block\", \"manage_options\", \"wp-IPBLC-auto-block\", \"auto_block\" );\r\n\tif($newFailed>0)\r\n\t{\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Failed Login\", \"<font color=red>Failed Login ($newFailed)</font>\", \"manage_options\", \"wp-IPBLC-failed-login\", \"blacklist_failed_login\" );\r\n\t}\r\n\telse\r\n\t{\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Failed Login\", \"Failed Login\", \"manage_options\", \"wp-IPBLC-failed-login\", \"blacklist_failed_login\" );\r\n\t}\r\n\t//add_submenu_page( \"wp-IPBLC\", \"Blacklist Statistics\", \"Blacklist Statistics\", \"manage_options\", \"wp-IPBLC-stats\", \"blacklist_stats\" );\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Whitelist\", \"Whitelist\", \"manage_options\", \"wp-IPBLC-whitelist\", \"blacklist_whitelist\" );\r\n\r\n\tadd_submenu_page( \"wp-IPBLC\", \"EXTRA SECURITY\", \"EXTRA SECURITY\", \"manage_options\", \"wp-IPBLC-extra\", \"blacklist_extra\" );\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Fixes\", \"Fixes\", \"manage_options\", \"wp-IPBLC-fixes\", \"blacklist_fixes\" );\r\n\r\n\tif($countOld)\r\n\t{\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Old IPs\", \"Old IPs $countOld\", \"manage_options\", \"wp-IPBLC-old-ip\", \"blacklist_old_ip\" );\r\n\r\n\t}\r\n\telse\r\n\t{\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Old IPs\", \"Old IPs\", \"manage_options\",\"wp-IPBLC-old-ip\", \"blacklist_old_ip\" );\r\n\t}\r\n\r\n\r\n\tadd_submenu_page( \"wp-IPBLC\", \"Support\", \"Support\", \"manage_options\", \"wp-IPBLC-support\", \"blacklist_support\" );\r\n\r\n\r\n\r\n\t$IPBLC_cloud_email=get_option('IPBLC_cloud_email');\r\n\t$IPBLC_cloud_key=get_option('IPBLC_cloud_key');\r\n\r\n\tif($IPBLC_cloud_email && $IPBLC_cloud_key)\r\n\t{\r\n\t\t//---post blacklist data to ip-finder.me\r\n\r\n\t\t$data = array('test' => '1');\r\n\r\n\t\t$contextData = array ( \r\n                'method' => 'POST',\r\n\t\t'content' => http_build_query($data),\r\n\t\t'header' => \"Connection: close\\r\\n\". \r\n                        \"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\r\n\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n\t\t$context = stream_context_create (array ( 'http' => $contextData ));\r\n\r\n\r\n\t\t$email2=urlencode($IPBLC_cloud_email);\r\n\r\n$link=\"http://www.ip-finder.me/wp-content/themes/ipfinder/cloudaccount_status.php?email=$email2&website=\".urlencode(site_url()).\"&website_name=\".urlencode(get_bloginfo('name')).\"&cloudkey=\".$IPBLC_cloud_key;\r\n\r\n\t\t$post_to_cloud =  file_get_contents (\r\n\t\t$link,\r\n\t\tfalse,\r\n\t\t$context);\r\n\t\t//echo $post_to_cloud;\r\n\r\n\r\n\t\tif($post_to_cloud!=\"-1\" && $post_to_cloud!=\"-2\")\r\n\t\t{\r\n\t//add_submenu_page( \"wp-IPBLC\", \"Cloud Account Service\", \"Cloud Account Service\", \"manage_options\", \"wp-IPBLC-premium\", \"blacklist_premium\" );\r\n\r\n\t\t}\r\n\t}\r\n} \r\n\r\nfunction blacklist_premium()\r\n{\r\n\t//include \"blacklist-premium.php\";\r\n}\r\n\r\nfunction blacklist_support()\r\n{\r\n\tinclude \"blacklist-support.php\";\r\n}\r\n\r\nfunction blacklist_extra()\r\n{\r\n\tinclude \"blacklist-extra.php\";\r\n}\r\n\r\nfunction blacklist_fixes()\r\n{\r\n\tinclude \"blacklist-fixes.php\";\r\n}\r\n\r\n\r\nfunction blacklist_tool()\r\n{\r\n\tinclude \"blacklist-list.php\";\r\n}\r\n\r\nfunction blacklist_old_ip()\r\n{\r\n\tinclude \"blacklist-old-list.php\";\r\n}\r\n\r\nfunction blacklist_tool_user()\r\n{\r\n\tinclude \"blacklist-list-user.php\";\r\n}\r\n\r\n\r\nfunction blacklist_settings()\r\n{\r\n\r\n\tinclude \"blacklist-settings.php\";\r\n\r\n}\r\nfunction auto_block()\r\n{\r\n\tinclude \"auto-block.php\";\r\n}\r\n\r\n\r\nfunction blacklist_add()\r\n{\r\n\tinclude \"blacklist-add.php\";\r\n}\r\nfunction blacklist_add_user()\r\n{\r\n\tinclude \"blacklist-add-user.php\";\r\n}\r\n\r\nfunction blacklist_whitelist()\r\n{\r\n\tinclude \"whitelist.php\";\r\n}\r\n\r\nfunction blacklist_stats()\r\n{\r\n\t//---post data to ip-finder.me\r\n\r\n\r\n\t\t$data = array('test' => '1');\r\n\r\n\t\t$contextData = array ( \r\n                'method' => 'POST',\r\n\t\t'content' => http_build_query($data),\r\n\t\t'header' => \"Connection: close\\r\\n\". \r\n                        \"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\r\n\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n\t$context = stream_context_create (array ( 'http' => $contextData ));\r\n\r\n \t$link=\"http://www.ip-finder.me/analysis\";\r\n\t$analysis =  file_get_contents (\r\n\t$link,\r\n\tfalse,\r\n\t$context);\r\n\r\n\techo $analysis;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction IPBLC_IP_column( $columns )\r\n{\r\n\r\n\t$columns['IPBLC_IP'] = __( 'Details' );\r\n\t$columns['IPBLC_IP_status'] = __( 'Status' );\r\n\t$columns['IPBLC_IP_spam'] = __( 'Spam Percentage' );\r\n\treturn $columns;\r\n}\r\n\r\nfunction IPBLC_IP_value( $column, $comment_ID )\r\n{\r\n\r\n\tglobal $wpdb;\r\n\r\n\tif ( 'IPBLC_IP' == $column )\r\n\t{\r\n\r\n\t\t$IP=get_comment_author_IP($comment_ID);\r\n\t\t$authorName=get_comment_author($comment_ID);\r\n\r\n\t\techo '<a href=\"http://www.ip-finder.me/'.$IP.'/\" target=\"_blank\" title=\"IP Details on IP-Finder.me\">'.\"$IP</a>\";\r\n\r\n\t\techo '<div class=\"row-actions\">\r\n\t<span class=\"edit\">\r\n\t\t<a href=\"http://www.ip-finder.me/'.$IP.'/\" target=\"_blank\" title=\"IP Details on IP-Finder.me\">IP Details</a>\r\n\t</span> | \r\n\t<span class=\"edit\">';\r\n\r\n\t$my_IP=$_SERVER['REMOTE_ADDR'];\r\n\r\n\t\tif($my_IP!=$IP)\r\n\t\t{\r\n\t\techo '<a href=\"javascript: blacklist_IP(\\''.$IP.'\\','.$comment_ID.');\" title=\"Blacklist IP\">Blacklist IP</a>';\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t\techo \"<b style=\\\"color:#000099\\\"> YOUR IP</b>\";\r\n\t\t}\r\n\t\techo'\r\n\t</span> | \r\n\r\n\t<span class=\"edit\">';\r\n\r\n\r\n\t\tif($my_IP!=$IP)\r\n\t\t{\r\n\t\t\r\n\t\techo '<a href=\"javascript: blacklist_USER(\\''.urlencode($authorName).'\\','.$comment_ID.');\" title=\"Blacklist Username\">Blacklist Username</a>';\r\n\t\t}\r\n\t\t\r\n\r\n\t\techo '\r\n\t</span>\r\n\r\n\t\t</div>\r\n\t'; //---echo end----\r\n\r\n\t}\r\n\r\n\tif ( 'IPBLC_IP_status' == $column )\r\n\t{\r\n\r\n\t\t$IP=get_comment_author_IP($comment_ID);\r\n\t\t$authorName=get_comment_author($comment_ID);\r\n\r\n\r\n\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\r\n\t\tif($IP_in_DP)\r\n\t\t{\r\n\t\t\techo \"IP: <span id=\\\"IPBlack\".\"$comment_ID\\\"><b style=\\\"color:#FF0000\\\"> Blacklisted</b></span><BR>\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\techo \"IP: <span id=\\\"IPBlack\".\"$comment_ID\\\"><b style=\\\"color:#009900\\\"> Neutral</b></span><BR>\";\r\n\t\t}\r\n\r\n/*\r\n\t\t\t$authorName=str_replace(\"\\'\",\"'\",$authorName);\r\n\r\n\t\t\t$authorName=str_replace(\"\\\\\\'\",\"'\",$authorName);\r\n\t\t\t$authorName=str_replace(\"\\\\\\\"\",'\\\"',$authorName);\r\n\t\t\t$authorName=str_replace(\"\\\\\\\"\",'\"',$authorName);\r\n\t\t\t$authorName2=str_replace(\"\\\"\",\"&quot;\",$authorName);\r\n\r\n*/\r\n\t\t\t$authorName2=sanitize_text_field($authorName2);\r\n\r\n\t\t$USERNAME_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_usernames WHERE USERNAME=%s\",$authorName2));\r\n\r\n\t\tif($USERNAME_in_DP)\r\n\t\t{\r\n\t\t\techo \"Username: <span id=\\\"UserBlack\".\"$comment_ID\\\"><b style=\\\"color:#FF0000\\\"> Blacklisted</b></span>\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\techo \"Username: <span id=\\\"UserBlack\".\"$comment_ID\\\"><b style=\\\"color:#009900\\\"> Neutral</b></span>\";\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tif ( 'IPBLC_IP_spam' == $column )\r\n\t{\r\n\r\n\t\t\techo \"<div id=\\\"IPSpam-$comment_ID\\\" class=\\\"IPSpam\\\">N/A</div>\";\r\n\t\t\techo \"<a href=\\\"#\\\" id=\\\"IPSpamAction-$comment_ID\\\" class=\\\"IPSpamAction\\\" name=\\\"$comment_ID\\\">Calculate</a>\";\r\n\t}\r\n\r\n}\r\n\r\nfunction create_sql()\r\n{\r\n\r\n\tglobal $wpdb;\r\n\r\n\tif(!($wpdb->query(\"SELECT * FROM \".$wpdb->prefix.\"IPBLC_login_failed\"))) \r\n\t{\r\n\r\n\t\t$sql = \"CREATE TABLE \".$wpdb->prefix.\"IPBLC_login_failed (\r\n\t\tid INT(60) UNSIGNED NOT NULL AUTO_INCREMENT,\r\n\t\tIP VARCHAR(25) NOT NULL, \r\n\t\tuseragent VARCHAR( 225 ) NOT NULL, \r\n\t\tvariables TEXT NOT NULL, \r\n\t\ttimestamp INT(30) NOT NULL,\r\n\t\tUNIQUE KEY id (id)\r\n\t\t);\";\r\n\r\n\t\trequire_once(ABSPATH . 'wp-admin/includes/upgrade.php');\r\n\t\tdbDelta($sql);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tif(!($wpdb->query(\"SELECT * FROM \".$wpdb->prefix.\"IPBLC_blacklist\"))) \r\n\t{\r\n\r\n\t\t$sql = \"CREATE TABLE \".$wpdb->prefix.\"IPBLC_blacklist (\r\n\t\tid INT(60) UNSIGNED NOT NULL AUTO_INCREMENT,\r\n\t\tIP VARCHAR(25) NOT NULL, \r\n\t\ttimestamp INT( 30 ) NOT NULL,\r\n\t\tvisits INT(50) NOT NULL, \r\n\t\tlastvisit INT(50) NOT NULL, \r\n\t\tUNIQUE KEY id (id)\r\n\t\t);\";\r\n\r\n\t\trequire_once(ABSPATH . 'wp-admin/includes/upgrade.php');\r\n\t\tdbDelta($sql);\r\n\t}\r\n\r\n\tif(!($wpdb->query(\"SELECT * FROM \".$wpdb->prefix.\"IPBLC_usernames\"))) \r\n\t{\r\n\r\n\t\t$sql = \"CREATE TABLE \".$wpdb->prefix.\"IPBLC_usernames (\r\n\t\tid INT(60) UNSIGNED NOT NULL AUTO_INCREMENT,\r\n\t\tUSERNAME TEXT NOT NULL, \r\n\t\ttimestamp INT(30) NOT NULL,\r\n\t\tvisits INT(50) NOT NULL,  \r\n\t\tlastvisit INT(50) NOT NULL,  \r\n\t\tUNIQUE KEY id (id)\r\n\t\t);\";\r\n\r\n\t\trequire_once(ABSPATH . 'wp-admin/includes/upgrade.php');\r\n\t\tdbDelta($sql);\r\n\t}\r\n\r\n\r\n\tif(isset($_GET['blacklist']))\r\n\t{\r\n\r\n\r\n\t\t$referer=sanitize_text_field($_SERVER['HTTP_REFERER']);\r\n\t\tif(strpos($referer,\"edit-comments.php\")>0)\r\n\t\t{\r\n\t\t\tip_added();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tif(isset($_GET['blacklistuser']))\r\n\t{\r\n\r\n\t\t//print_r($_SERVER);\r\n\r\n\t\t$referer=sanitize_text_field($_SERVER['HTTP_REFERER']);\r\n\t\tif(strpos($referer,\"edit-comments.php\")>0)\r\n\t\t{\r\n\t\t\tuser_added();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t$IPBLC_auto_comments=get_option('IPBLC_auto_comments');\r\n\tif(!$IPBLC_auto_comments)\r\n\t{\r\n\t\tupdate_option('IPBLC_auto_comments','2');\r\n\t\t$IPBLC_auto_comments=get_option('IPBLC_auto_comments');\r\n\t}\r\n\r\n\r\n\t$IPBLC_protected=get_option('IPBLC_protected');\r\n\tif(!$IPBLC_protected)\r\n\t{\r\n\t\tupdate_option('IPBLC_protected','2');\r\n\t\t$IPBLC_protected=get_option('IPBLC_protected');\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction IPBLC_blockip()\r\n{\r\n\r\n\tglobal $wpdb;\r\n\r\n\t//---check last update with ip-finder.me site--\r\n\t$time=time();\r\n\t$lastU=get_option('IPBLC_last_update');\r\n\r\n\t$diff=$time-$lastU;\r\n\r\n\t//---send website link to ip-finder.me after every 2 days. (verification of data)\r\n\tif($diff>172800)\r\n\t{\r\n\t\tupdate_option('IPBLC_last_update',$time);\r\n\r\n\t\t$data = array('test' => '1');\r\n\r\n\r\n\t\t$contextData = array ( \r\n\t\t\t'method' => 'POST',\r\n\t\t\t'content' => http_build_query($data),\r\n\t\t\t'header' => \"Connection: close\\r\\n\". \r\n\t\t\t\"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\t\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n\t\t\t$context = stream_context_create(array( 'http' => $contextData ));\r\n$link=\"http://www.ip-finder.me/lastUpdate.php?website=\".urlencode(site_url());\r\n\t\t\t\t\t$post_to_cloud =  file_get_contents (\r\n\t\t\t                  $link,  // page url\r\n\t\t\t                  false,\r\n\t\t\t                  $context);\r\n\t}\r\n\t//--- END -- check last update with ip-finder.me site--\r\n\r\n\t$IP=\"\";\r\n\r\n\tif(isset($_SERVER['REMOTE_ADDR']))\r\n\t{\r\n\t\t$IP=sanitize_text_field($_SERVER['REMOTE_ADDR']);\r\n\t}\r\n\r\n\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t{\r\n\r\n\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\tif($IP_in_DP)\r\n\t\t{\r\n\t\t\t$visits=$wpdb->get_var($wpdb->prepare(\"SELECT visits FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE id=%d\",$IP_in_DP));\r\n\t\t\t$visits=$visits+1;\r\n\r\n\t\t\t$t=time();\r\n\r\n\t\t\t$wpdb->query($wpdb->prepare(\"UPDATE \".$wpdb->prefix.\"IPBLC_blacklist SET `visits`=%d WHERE id=%d\",array($visits,$IP_in_DP)));\r\n\t\t\t$wpdb->query($wpdb->prepare(\"UPDATE \".$wpdb->prefix.\"IPBLC_blacklist SET `lastvisit`=%d WHERE id=%d\",array($t,$IP_in_DP)));\r\n\t\t\r\n\r\n\t\t\t//show 404 error\r\n\t\t\theader(\"Status: 404 Not Found\");\r\n\t\t\theader(\"HTTP/1.0 404 Not Found\");\r\n\r\n\t?>\r\n\r\n\r\n\r\n<head><title><?php echo get_bloginfo('name'); ?></title></head>\r\n<style>\r\n#IPBLC_message_blacklist\r\n{\r\n\tborder:1px solid #FF9999;\r\n\tbackground-color: #FFDDDD;\r\n\tfont-size: 20px;\r\n\t//font-weight: bold;\r\n\tpadding: 12px;\r\n\tcolor: #000000;\r\n\tmargin-top: 50px;\r\n}\r\n\r\n</style>\r\n<center>\r\n<div id=\"IPBLC_message_blacklist\">Your IP <?php echo $IP; ?> has been blacklisted!</div><BR>\r\n</center>\r\n\t<?php\r\n\t\texit();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t$author=\"\";\r\n\tif(isset($_POST['author']))\r\n\t{\r\n\t\t$author=$_POST['author'];\r\n\t\t$USER=sanitize_text_field($author);\r\n\r\n\r\n\t\t$USER_in_DB=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_usernames WHERE USERNAME=%s\",$USER));\r\n\t\tif($USER_in_DB)\r\n\t\t{\r\n\r\n\t\t\t$author=str_replace('\\\"','\"',$author);\r\n\t\t\t$author=str_replace(\"\\'\",\"'\",$author);\r\n\t\t\t$author=str_replace(\"\\\\\\'\",\"'\",$author);\r\n\r\n\r\n\r\n\t\t$visits=$wpdb->get_var($wpdb->prepare(\"SELECT visits FROM \".$wpdb->prefix.\"IPBLC_usernames WHERE id=%d\",$USER_in_DB));\r\n\t\t$visits=$visits+1;\r\n\t\t$t=time();\r\n\r\n\t\t$wpdb->query($wpdb->prepare(\"UPDATE \".$wpdb->prefix.\"IPBLC_usernames SET `visits`=%d WHERE id=%d\",array($visits,$USER_in_DB)));\r\n\t\t$wpdb->query($wpdb->prepare(\"UPDATE \".$wpdb->prefix.\"IPBLC_usernames SET `lastvisit`=%d WHERE id=%d\",array($t,$USER_in_DB)));\r\n\r\n\r\n\t\t//show 404 error\r\n\t\theader(\"Status: 404 Not Found\");\r\n\t\theader(\"HTTP/1.0 404 Not Found\");\r\n\r\n\t?>\r\n\r\n<head><title><?php echo get_bloginfo('name'); ?></title></head>\r\n<style>\r\n#IPBLC_message_blacklist\r\n{\r\n\tborder:1px solid #FF9999;\r\n\tbackground-color: #FFDDDD;\r\n\tfont-size: 20px;\r\n\t//font-weight: bold;\r\n\tpadding: 12px;\r\n\tcolor: #000000;\r\n\tmargin-top: 50px;\r\n}\r\n\r\n</style>\r\n<center>\r\n<div id=\"IPBLC_message_blacklist\"> \"<?php echo $USER; ?>\" is blacklisted!</div><BR>\r\n</center>\r\n\t<?php\r\n\t\texit();\r\n\t\t}\r\n\t}\r\n\t//----end if isset $_POST['author'];\r\n\r\n\r\n\r\n\t//===================== GET ACTION FOR IP BLACKLIST CLOUD SERVER AND FAILED LOGIN EXTENDED PAGE=============\r\n\r\n\tif(isset($_GET['action']))\r\n\t{\r\n\r\n\r\n\t\t//-----function to validate js callback ----\r\n\t\tfunction valid_js_identifier( $callback ){\r\n\t\treturn preg_replace(\"/[^][.\\\\'\\\\\\\"_A-Za-z0-9]/\", '', $callback);\r\n\t\t}\r\n\t\t//----function ends----\r\n\r\n\t\t$callback=valid_js_identifier($_GET['callback']);\r\n\t\t\r\n\r\n\r\n\t\t//==========getFailedPagination=========\r\n\r\n\t\tif($_GET['action']==\"getFailedPagination\")\r\n\t\t{\r\n\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t//-----IPBLC Server send password in urlencoded form. compare $pwd with $IPBLC_cloud_password-----\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\r\n\t    \t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\r\n\t\t\t\t//-----------------------------------------PAGE SETTINGS----------------------------------------\r\n\t\t\t\t//--Posts per page\r\n\t\t\t\t$rowsPerPage = 30;\r\n\t\t\t\t// by default we show first page\r\n\t\t\t\t$pageNum = 1;\r\n\t\t\t\t// if $_GET['page'] defined, use it as page number\r\n\t\t\t\tif(isset($_GET['page_num']))\r\n\t\t\t\t{\r\n\t\t\t\t\t$pageNum = $_GET['page_num'];\r\n\t\t\t\t}\r\n\t\t\t\t// counting the offset\r\n\t\t\t\t$offset = ($pageNum - 1) * $rowsPerPage;\r\n\t\t\t\t$page_num=$pageNum;\r\n\t\t\t\t//---------------------------------------------------------------------------------\r\n\r\n\t\t\t\t$totalIP = $wpdb->query(\"SELECT DISTINCT(IP), id, COUNT(IP) as countx,timestamp FROM \".\r\n\t\t\t\t\t$wpdb->prefix.\"IPBLC_login_failed  GROUP BY IP  ORDER BY timestamp DESC\");\r\n\r\n\t\t\t\t$resultX = $wpdb->get_results(\"SELECT  DISTINCT(IP), id, COUNT(IP) as countx, timestamp \r\n\t\t\t\t\tFROM \".$wpdb->prefix.\"IPBLC_login_failed GROUP BY IP ORDER BY timestamp DESC LIMIT $offset, $rowsPerPage\");\r\n\r\n\t\t\t\t$self=\"javascript: \";\r\n\t\t\t\t$maxPage = ceil($totalIP/$rowsPerPage);\r\n\r\n\t\t\t\t$nav  = \"<BR>Page: \";\r\n\t\t\t\t// ... the previous code\r\n\t\t\t\tif($pageNum>10)\r\n\t\t\t\t{\r\n\t\t\t\t\t$xyzz=$pageNum-10;\r\n\t\t\t\t\t$nav .= \" <a href=\\\"$self getFailedData($xyzz); getFailedPagination($xyzz); \\\">&lt;&lt;</a>- &nbsp; \";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor($page = 1; $page <= $maxPage; $page++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($page == $pageNum)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$nav .= \"<b><font color=red> $page </font></b> &nbsp; \"; // no need to create a link to current page\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif($page<$pageNum & $page>$pageNum-10)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$nav .= \" <a href=\\\"$self getFailedData($page); getFailedPagination($page); \\\">$page</a>  &nbsp; \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if($page>$pageNum & $page<$pageNum+10)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$nav .= \" <a href=\\\"$self getFailedData($page); getFailedPagination($page); \\\">$page</a>  &nbsp; \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\t\t\t\tif($pageNum<$maxPage-9)\r\n\t\t\t\t{\r\n\t\t\t\t\t$xyzzz=$pageNum+10;\r\n\t\t\t\t\t$nav .= \"- <a href=\\\"$self getFailedData($xyzz); getFailedPagination($xyzz); \\\">&gt;&gt;</a> &nbsp; \";\r\n\t\t\t\t}\r\n\t\t\t\t$nav  .= '<BR>';\r\n\r\n\r\n\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t}\r\n\t\t\t$result['PAGINATION']=$nav;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========getFailedPagination=========\r\n\t\t//==================END=================\r\n\r\n\r\n\t\t//==========getIPStatusJSON=========\r\n\r\n\t\tif($_GET['action']==\"getIPStatusJSON\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\t\t\t\t$IP=\"\";\r\n\r\n\t\t\t\tif(isset($_GET['IP']))\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP=sanitize_text_field($_GET['IP']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\t\t\t\tif($IP_in_DP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$status=\"<b style=\\\"color:#FF0000\\\"> Blacklisted</b>\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$status=\"<b style=\\\"color:#009900\\\"> Neutral</b>\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$status=\"<b style=\\\"color:#ff7777\\\"> Invalid IP</b>\";\r\n\t\t\t\t}\r\n\r\n\t    \t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t\t$status=\"\";\r\n\t\t\t}\r\n\t\t\t$result['STATUS']=$status;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========getIPStatusJSON=========\r\n\t\t//================END===============\r\n\r\n\r\n\r\n\r\n\r\n\t\t//==========getFailedPaginationSingle=========\r\n\r\n\t\tif($_GET['action']==\"getFailedPaginationSingle\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\r\n\t\t\t\t$IP=\"\";\r\n\r\n\t\t\t\tif(isset($_GET['IP']))\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP=sanitize_text_field($_GET['IP']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t{\r\n\t\t\t\t\t//-----------------------------------------PAGE SETTINGS----------------------------------------\r\n\t\t\t\t\t//--Posts per page\r\n\t\t\t\t\t$rowsPerPage = 30;\r\n\t\t\t\t\t// by default we show first page\r\n\t\t\t\t\t$pageNum = 1;\r\n\t\t\t\t\t// if $_GET['page'] defined, use it as page number\r\n\t\t\t\t\tif(isset($_GET['page_num']))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$pageNum = $_GET['page_num'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// counting the offset\r\n\t\t\t\t\t$offset = ($pageNum - 1) * $rowsPerPage;\r\n\t\t\t\t\t$page_num=$pageNum;\r\n\t\t\t\t\t//---------------------------------------------------------------------------------\r\n\r\n\t\t\t\t\t$totalIP = $wpdb->query($wpdb->prepare( \"SELECT * FROM \".$wpdb->prefix.\"IPBLC_login_failed WHERE \r\n\t\t\t\t\tIP=%s GROUP BY IP  ORDER BY  timestamp DESC\",$IP));\r\n\r\n\t\t\t\t\t$resultX = $wpdb->get_results($wpdb->prepare(\"SELECT *  FROM \".$wpdb->prefix.\"IPBLC_login_failed WHERE \r\n\t\t\t\t\tIP=%s GROUP BY IP ORDER BY timestamp DESC LIMIT $offset, $rowsPerPage\",$IP));\r\n\r\n\t\t\t\t\t$self=\"javascript: \";\r\n\t\t\t\t\t$maxPage = ceil($totalIP/$rowsPerPage);\r\n\r\n\t\t\t\t\t$nav  = \"<BR>Page: \";\r\n\t\t\t\t\t// ... the previous code\r\n\t\t\t\t\tif($pageNum>10)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$xyzz=$pageNum-10;\r\n\t\t\t\t\t\t$nav .= \" <a href=\\\"$self getFailedIPSingleWeb('$IP', $xyzz); \\\">&lt;&lt;</a>- &nbsp; \";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor($page = 1; $page <= $maxPage; $page++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ($page == $pageNum)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$nav .= \"<b><font color=red> $page </font></b> &nbsp; \"; // no need to create a link to current page\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif($page<$pageNum & $page>$pageNum-10)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$nav .= \" <a href=\\\"$self  getFailedIPSingleWeb('$IP',$page);\\\">$page</a>  &nbsp; \";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if($page>$pageNum & $page<$pageNum+10)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$nav .= \" <a href=\\\"$self  getFailedIPSingleWeb('$IP',$page); \\\">$page</a>  &nbsp; \";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t}\r\n\t\t\t\t\tif($pageNum<$maxPage-9)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$xyzzz=$pageNum+10;\r\n\t\t\t\t\t\t$nav .= \"- <a href=\\\"$self  getFailedIPSingleWeb('$IP',$xyzz); \\\">&gt;&gt;</a> &nbsp; \";\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$nav  .= '<BR>';\r\n\t\t\t\t\tif($resultX)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tforeach($resultX as $this_IP)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$userAgent=$this_IP->useragent;\r\n\t\t\t\t\t\t\t$vars=$this_IP->variables;\r\n\t\t\t\t\t\t\t$idd=$this_IP->id;\r\n\t\t\t\t\t\t\t$timeX=date(\"M d, Y\",$this_IP->timestamp);\r\n\r\n\t\t\t\t\t\t\t$AllData[]=array(\"userAgent\"=>$userAgent,\"variables\"=>$vars,\"login_id\"=>$idd,\"date\"=>$timeX);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$nav=\"\";\r\n\r\n\t\t\t\t}\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t}\r\n\t\t\t$result['PAGINATION']=$nav;\r\n\t\t\t$result['DATA']=$AllData;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========getFailedPaginationSingle=========\r\n\t\t//====================END=====================\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t//==========getPendingComments=========\r\n\r\n\t\tif($_GET['action']==\"getPendingComments\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\r\n\t\t\t\t//-----------------------------------------PAGE SETTINGS----------------------------------------\r\n\t\t\t\t//--Posts per page\r\n\t\t\t\t$rowsPerPage = 30;\r\n\t\t\t\t// by default we show first page\r\n\t\t\t\t$pageNum = 1;\r\n\t\t\t\t// if $_GET['page'] defined, use it as page number\r\n\t\t\t\tif(isset($_GET['page_num']))\r\n\t\t\t\t{\r\n\t\t\t\t\t$pageNum = $_GET['page_num'];\r\n\t\t\t\t}\r\n\t\t\t\t// counting the offset\r\n\t\t\t\t$offset = ($pageNum - 1) * $rowsPerPage;\r\n\t\t\t\t$page_num=$pageNum;\r\n\t\t\t\t//---------------------------------------------------------------------------------\r\n\r\n\t\t\t\t$commentArgsTotal=array(\"status\"=>\"hold\");\r\n\t\t\t\t$commentArgsCurrent=array(\"status\"=>\"hold\",\"offset\"=>$offset);\r\n\t\t\t\t$nav=\"\";\r\n\t\t\t\t$totalComments = get_comments($commentArgsTotal);\r\n\r\n\t\t\t\t$endComment=($offset+$rowsPerPage)-1;\r\n\t\t\r\n\t\t\t\t$resultX=array();\r\n\r\n\t\t\t\t$start1 = 0;\r\n\t\t\t\t$end=$endComment;\r\n\t\t\r\n\t\t\t\tif($totalComments)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach($totalComments as $cc)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif($start1>=$offset && $start1<=$end)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$resultX[]=$cc;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$start1++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\r\n\r\n\t\t\t\tif($resultX)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach($resultX as $sComment)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$cData=array();\r\n\t\t\t\t\t\t$comment_content=\"\";\r\n\r\n\t\t\t\t\t\tforeach($sComment as $k=>$v)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t$cData[$k]=$v;\r\n\t\t\t\t\t\t\tif($k==\"comment_author_IP\")\r\n\t\t\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist \r\n\t\t\t\t\t\t\t\t\t\tWHERE IP=%s\",$v));\r\n\t\t\t\t\t\t\t\tif($IP_in_DP)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$status=\"<b style=\\\"color:#FF0000\\\"> Blacklisted</b>\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$status=\"<b style=\\\"color:#009900\\\"> Neutral</b>\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t$cData['IP_status']=$status;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif($k==\"comment_ID\")\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$comment_content= get_comment_excerpt($v);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$cData['comment_content']=$comment_content;\r\n\t\t\t\t\t\t$AllData[]=$cData;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t$self=\"javascript: \";\r\n\t\t\t\t$maxPage = ceil(count($totalComments)/$rowsPerPage);\r\n\r\n\r\n\r\n\t\t\t\t$nav  = \"<BR>Page: \";\r\n\t\t\t\t// ... the previous code\r\n\t\t\t\tif($pageNum>10)\r\n\t\t\t\t{\r\n\t\t\t\t\t$xyzz=$pageNum-10;\r\n\t\t\t\t\t$nav .= \" <a href=\\\"$self getPendingCommentsSingle( $xyzz); \\\">&lt;&lt;</a>- &nbsp; \";\r\n\t\t\t\t}\r\n\t\t\t\tfor($page = 1; $page <= $maxPage; $page++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ($page == $pageNum)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$nav .= \"<b><font color=red> $page </font></b> &nbsp; \"; // no need to create a link to current page\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif($page<$pageNum & $page>$pageNum-10)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$nav .= \" <a href=\\\"$self  getPendingCommentsSingle($page);\\\">$page</a>  &nbsp; \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if($page>$pageNum & $page<$pageNum+10)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$nav .= \" <a href=\\\"$self  getPendingCommentsSingle($page); \\\">$page</a>  &nbsp; \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\t\t\t\tif($pageNum<$maxPage-9)\r\n\t\t\t\t{\r\n\t\t\t\t\t$xyzzz=$pageNum+10;\r\n\t\t\t\t\t$nav .= \"- <a href=\\\"$self  getPendingCommentsSingle($xyzz); \\\">&gt;&gt;</a> &nbsp; \";\r\n\t\t\t\t}\r\n\t\t\t\t$nav  .= '<BR>';\r\n\r\n\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t\t$nav=\"\";\r\n\t\t\t\t$AllData=array();\r\n\t\t\t}\r\n\t\t\t$result['DATA']=$AllData;\r\n\t\t\t$result['PAGINATION']=$nav;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========getPendingComments=========\r\n\t\t//=================END=================\r\n\r\n\r\n\r\n\r\n\r\n\t\t//==========getFailedData=========\r\n\r\n\t\tif($_GET['action']==\"getFailedData\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\r\n\t\t\t\t//-----------------------------------------SETTINGS----------------------------------------\r\n\t\t\t\t//--Posts per page\r\n\t\t\t\t$rowsPerPage = 30;\r\n\t\t\t\t// by default we show first page\r\n\t\t\t\t$pageNum = 1;\r\n\t\t\t\t// if $_GET['page'] defined, use it as page number\r\n\t\t\t\tif(isset($_GET['page_num']))\r\n\t\t\t\t{\r\n    \t\t\t\t\t$pageNum = $_GET['page_num'];\r\n\t\t\t\t}\r\n\t\t\t\t// counting the offset\r\n\t\t\t\t$offset = ($pageNum - 1) * $rowsPerPage;\r\n\t\t\t\t$page_num=$pageNum;\r\n\t\t\t\t//---------------------------------------------------------------------------------\r\n\r\n\t\t\t\t$totalIP = $wpdb->query( \"SELECT DISTINCT(IP), id, COUNT(IP) as countx,timestamp FROM \".\r\n\t\t\t\t\t\t$wpdb->prefix.\"IPBLC_login_failed  GROUP BY IP  ORDER BY timestamp DESC\");\r\n\r\n\t\t\t\t$resultX = $wpdb->get_results( \"SELECT  DISTINCT(IP), id, COUNT(IP) as countx, timestamp FROM \".\r\n\t\t\t\t\t\t$wpdb->prefix.\"IPBLC_login_failed GROUP BY IP ORDER BY timestamp DESC LIMIT $offset, $rowsPerPage\");\r\n\r\n\r\n\t\t\t\tif($resultX)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach($resultX as $IPData)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$IP=$IPData->IP;\r\n\t\t\t\t\t\t$count=$IPData->countx;\r\n\t\t\t\t\t\t$timestamp=$IPData->timestamp;\r\n\t\t\t\t\t\t$date=date(\"M d, Y\",$timestamp);\r\n\t\t\t\t\t\t$link=\"<a href=\\\"http://www.ip-finder.me/$IP/\\\" target=_blank>$IP</a>\";\r\n\t\t\t\t\t\t$failedID=$IPData->id;\r\n\r\n\r\n\t\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\t\t\t\t\tif($IP_in_DP)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$IP_status=\"Website: <span id=\\\"IPBlack_web_\".\"$failedID\\\">\r\n\t\t\t\t\t\t\t\t<b style=\\\"color:#FF0000\\\"> Blacklisted</b></span><BR>\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$IP_status=\"Website: <span id=\\\"IPBlack_web_\".\"$failedID\\\"><b style=\\\"color:#009900\\\"> Neutral</b></span><BR>\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$status_id=\"IPBlack_web_\".\"$failedID\";\r\n\r\n\t\t\t\t\t\t$AllData[]=array(\"IP\"=>$IP,\"count\"=>$count,\"date\"=>$date,\"link\"=>$link,\r\n\t\t\t\t\t\t\t\"status_web\"=>$IP_status,\"id\"=>$failedID,\"status_id\"=>$status_id);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t    \t\t}//-------passed cloud login-----\r\n\t    \t\telse\r\n\t    \t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t\r\n\t    \t\t}\r\n\t\t\t$result['DATA']=$AllData;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\r\n\t\t//==========getFailedData=========\r\n\t\t//================END=============\r\n\r\n\r\n\r\n\r\n\t\t//==========getBlacklist=========\r\n\r\n\t\tif($_GET['action']==\"getBlacklist\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\r\n\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\t\t\t\t$IPs_in_DP=$wpdb->get_results(\"SELECT IP FROM \".$wpdb->prefix.\"IPBLC_blacklist ORDER BY id DESC\");\r\n\t\t\t\t$IPx=array();\r\n\t\t\t\t$userxx=array();\r\n\t\t\t\tif($IPs_in_DP)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach($IPs_in_DP as $this_IP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$IPx['IP']=$this_IP->IP;\r\n\t\t\t\t\t\t$AllData[]=$IPx;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\t$result['DATA']=$AllData;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========getBlacklist=========\r\n\t\t//===============END=============\r\n\r\n\r\n\r\n\r\n\t\t//==========addBlacklistIP=========\r\n\r\n\t\tif($_GET['action']==\"addBlacklistIP\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\t\t\t$IP=\"\";\r\n\t\t\tif($_GET['IP'])\r\n\t\t\t{\r\n\t\t\t\t\t$IP=sanitize_text_field($_GET['IP']);\r\n\t\t\t}\r\n\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\t\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\t\t\t\tif(!$IP_in_DP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\t\t\t\t$time=time();\r\n\t\t\t\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) \r\n\t\t\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($IP,$time,0,0)));\t\r\n\r\n\t\t\t\t\t\tpost_blacklist_add($IP);\r\n\t\t\t\t\t\t$AllData[]=array(\"IP\"=>$IP,\"added\"=>1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$AllData[]=array(\"IP\"=>$IP,\"added\"=>2);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t}\r\n\t\t\t$result['DATA']=$AllData;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========addBlacklistIP=========\r\n\t\t//================END==============\r\n\r\n\r\n\t\t//==========addBlacklistIP_multi=========\r\n\r\n\t\tif($_GET['action']==\"addBlacklistIP_multi\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\t\t\t\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\t\t\t\t$IPx=\"\";\r\n\t\t\t\tif($_GET['IP'])\r\n\t\t\t\t{\r\n\t\t\t\t\t$IPx=sanitize_text_field($_GET['IP']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$IPx=explode(\",\",$IPx);\r\n\r\n\r\n\t\t\t\t$IP=\"\";\r\n\t\t\t\t$IPData=array();\r\n\r\n\t\t\t\t$request_IP=array();\r\n\r\n\t\t\t\t$sep=\"\";\r\n\t\t\t\t$sep2=\"\";\r\n\r\n\t\t\t\tforeach($IPx as $IP)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$request_IP[]=$IP;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif($request_IP)\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tpost_blacklist_add_multi($request_IP);\r\n\t\t\t\t\tforeach($request_IP as $IP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\t\t\t\t$time=time();\r\n\r\n\t\t\t\t\t\t$sql=$wpdb->prepare(\"SELECT IP,timestamp,visits,lastvisit FROM $table WHERE IP=%s\",$IP);\r\n\t\t\t\t\t\t$checkX=$wpdb->query($sql);\r\n\r\n\t\t\t\t\t\tif($checkX==0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$sql=$wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) \r\n\t\t\t\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($IP,$time,0,0));\r\n\t\t\t\t\t\t\t$wpdb->query($sql);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\t$IPData[]=array(\"IP\"=>$IP,\"added\"=>1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t}\r\n\t\t\t$AllData['IPData']=$IPData;\r\n\t\t\t$result['DATA']=$AllData;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========addBlacklistIP_multi=========\r\n\t\t//===================END==================\r\n\r\n\r\n\r\n\t\t//==========deleteBlacklistIP=========\r\n\r\n\t\tif($_GET['action']==\"deleteBlacklistIP\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\t\t\t$IP=\"\";\r\n\t\t\tif($_GET['IP'])\r\n\t\t\t{\r\n\t\t\t\t\t$IP=sanitize_text_field($_GET['IP']);\r\n\t\t\t}\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"1\";\r\n\r\n\t\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\t\t\t\tif($IP_in_DP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\t\t\t\t$time=time();\r\n\t\t\t\t\t\t$wpdb->query($wpdb->prepare(\"DELETE FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\r\n\t\t\t\t\t\t$data = array('test' => '1');\r\n\t\t\t\t\t\t$contextData = array ( \r\n\t\t\t\t\t\t\t'method' => 'POST',\r\n\t\t\t\t\t\t\t'content' => http_build_query($data),\r\n\t\t\t\t\t\t\t'header' => \"Connection: close\\r\\n\". \r\n\t\t\t\t\t\t\t\"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\t\t\t\t\t\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n\t\t\t\t\t$context = stream_context_create(array\r\n\t\t\t\t\t( 'http' => $contextData ));\r\n$link=\"http://www.ip-finder.me/wp-content/themes/ipfinder/blacklist_delete.php?IP=\".$IP.\"&website=\".urlencode(site_url()).\"&website_name=\".urlencode(get_bloginfo('name'));\t\t\t\t\t$post_to_cloud =  file_get_contents (\r\n\t\t\t                  $link,  // page url\r\n\t\t\t                  false,\r\n\t\t\t                  $context);\r\n\r\n\t\t\t\t\t\t$AllData[]=array(\"IP\"=>$IP,\"deleted\"=>1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$AllData[]=array(\"IP\"=>$IP,\"deleted\"=>0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=\"-1\";\r\n\t\t\t}\r\n\t\t\t$result['DATA']=$AllData;\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========deleteBlacklistIP=========\r\n\t\t//===================END==============\r\n\r\n\r\n\r\n\t\t//==========verifyCloudLogin=========\r\n\t\tif($_GET['action']==\"verifyCloudLogin\")\r\n\t\t{\r\n\t\t\t$IPBLC_cloud_password=get_option('IPBLC_cloud_password');\r\n\t\t\t$IPBLC_cloud_on=get_option('IPBLC_cloud_on');\r\n\r\n\t\t\t$pwd=urldecode($_GET['pwd']);\r\n\t\t\t$result=array();\r\n\r\n\t\t\theader('Content-Type: application/json');\r\n\t\t\t$AllData=array();\r\n\r\n\t\t\tif($IPBLC_cloud_password && $IPBLC_cloud_on==2 && $IPBLC_cloud_password==$pwd)\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=1;\r\n\t\t\t}//-------passed cloud login-----\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$result['verify']=-1;\r\n\t\t\t}\r\n\t\t\techo $callback.\"(\".json_encode($result).\")\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========verifyCloudLogin=========\r\n\t\t//=================END===============\r\n\r\n\r\n\t\t//==========failedDetails=========\r\n\r\n\t\tif($_GET['action']==\"failedDetails\")\r\n\t\t{\r\n\t\t\tif(current_user_can( 'manage_options' ))\r\n\t\t\t{\r\n\t\t\t\t$IP=\"\";\r\n\t\t\t\tif($_GET['IP'])\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP=sanitize_text_field($_GET['IP']);\r\n\t\t\t\t}\r\n\t\t\t\tif(!filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t{\r\n\t\t\t\t\techo \"Invalid IP\";\r\n\t\t\t\t\texit();\r\n\t\t\t\t}\r\n\t\t\t\t$manage=1;\r\n\t\t\t\tinclude \"failedDetails.php\";\r\n\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\techo \"You don't have permission to view details.\";\r\n\t\t\t}\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========failedDetails=========\r\n\t\t//================END=============\r\n\r\n\t\t//==========spamcheck=========\r\n\r\n\t\tif($_GET['action']==\"spamcheck\")\r\n\t\t{\r\n\t\t\tinclude \"SpamChecker.php\";\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========spamcheck=========\r\n\t\t//=============END============\r\n\t}\r\n\r\n\r\n\t//===================== GET ACTION FOR IP BLACKLIST CLOUD SERVER AND FAILED LOGIN EXTENDED PAGE=============\r\n\t//===============================================END========================================================\r\n\r\n\r\n\r\n\r\n\t//================================== POST ACTIONS VIA AJAX ========================\r\n\r\n\tif(isset($_POST['action']))\r\n\t{\r\n\t\t//==========blacklistUSERJS========\r\n\r\n\t\tif($_POST['action']==\"blacklistUSERJS\")\r\n\t\t{\r\n\t\t\tif(current_user_can( 'manage_options' ))\r\n\t\t\t{\r\n\r\n\t\t\t\t$USER=$_POST['blacklistuser'];\r\n\t\t\t\t$USER=sanitize_text_field($USER);\r\n\r\n\r\n\t\t\t\t$sql=$wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_usernames WHERE USERNAME=%s\",$USER);\r\n\r\n\t\t\t\t$USER_in_DB=$wpdb->get_var($sql);\r\n\r\n\t\t\t\t$found=false;\r\n\r\n\t\t\t\tif(!$USER_in_DB)\r\n\t\t\t\t{\r\n\t\t\t\t\tif($USER)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t$table=$wpdb->prefix.\"IPBLC_usernames\";\r\n\t\t\t\t\t\t$time=time();\r\n\r\n\t\t\t\t\t\t$sql=$wpdb->prepare(\"INSERT INTO $table (USERNAME,timestamp,visits,lastvisit) \r\n\t\t\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($USER,$time,0,0));\r\n\t\t\t\t\t\t$wpdb->query($sql);\r\n\t\t\t\t\t\t//---post blacklist data to ip-finder.me\r\n\t\t\t\t\t\t$USER2=urlencode($USER);\r\n\t\t\t\t\t\tpost_blacklist_add_user($USER2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$found=true;\r\n\t\t\t\t\t\t$USER_error=true;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t\t$USER_in_DB=\"\";\r\n\r\n\t\t\t\t//---delay\r\n\t\t\t\tfor($d=0;$d<=100000;$d++)\r\n\t\t\t\t{\r\n\t\t\t\t\t//----\r\n\t\t\t\t}\r\n\t\t\t\t$sql=$wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_usernames WHERE USERNAME=%s\",$USER);\r\n\t\t\t\t$USER_in_DB=$wpdb->get_var($sql);\r\n\r\n\t\t\t\tif($USER_in_DB)\r\n\t\t\t\t{\r\n\t\t\t\t\techo \"<b style=\\\"color: #FF0000;\\\"> Blacklisted</b>\";\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\techo \"<b style=\\\"color: #009900;\\\"> Neutral</b>\";\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========blacklistUSERJS========\r\n\t\t//================END==============\r\n\r\n\r\n\t\t//==========blacklistIPJS========\r\n\r\n\t\tif($_POST['action']==\"blacklistIPJS\")\r\n\t\t{\r\n\t\t\tif(current_user_can( 'manage_options' ))\r\n\t\t\t{\r\n\t\t\t\t$IP=\"\";\r\n\t\t\t\tif($_POST['blacklist'])\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP=sanitize_text_field($_POST['blacklist']);\r\n\t\t\t\t}\r\n\t\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t{\r\n\t\t\t\t\t$isIPSafe=isIpSafe($IP);\r\n\t\t\t\t\tif($isIPSafe==0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\t\t\t\t\t$found=false;\r\n\t\t\t\t\t\tif(!$IP_in_DP)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\t\t\t\t\t$time=time();\r\n\t\t\t\t\t\t\t$sql=$wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) \r\n\t\t\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($IP,$time,0,0));\r\n\t\t\t\t\t\t\t$wpdb->query($sql);\r\n\t\t\t\t\t\t\t//---post data to ip-finder.me\r\n\t\t\t\t\t\t\tpost_blacklist_add($IP);\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\t\t\t\t\t$found=false;\r\n\r\n\t\t\t\t\t\tif($IP_in_DP)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\techo \"<b style=\\\"color: #FF0000;\\\"> Blacklisted</b>\r\n\t\t\t\t\t\t\t\t<a href=\\\"http://www.ip-finder.me/$IP/\\\" target=_blank title=\\\"Leave Comment\\\">Why?</a>\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\techo \"<b style=\\\"color: #009900;\\\"> Neutral</b>\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\techo \"<b style=\\\"color: #CC0099;\\\"> Whitelist</b>\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t\techo \"<b style=\\\"color: #ff9999;\\\"> Invalid IP</b>\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//==========blacklistIPJS========\r\n\t\t//================END===========\r\n\r\n\t}\r\n\t//================================== POST ACTIONS VIA AJAX ========================\r\n\t//=========================================== END =================================\r\n\r\n\t//-----import and export Database-----\r\n\r\n\tif(isset($_REQUEST['action']))\r\n\t{\r\n\t\t//-----export-----\r\n\r\n\t\tif($_REQUEST['action']==\"exportIPCloud\")\r\n\t\t{\r\n\t\t\tif(current_user_can( 'manage_options' ))\r\n\t\t\t{\r\n\t\t\t\t$IPs_in_DP=$wpdb->get_results(\"SELECT IP FROM \".$wpdb->prefix.\"IPBLC_blacklist ORDER BY id DESC\");\r\n\t\t\t\t$AllData=array();\r\n\t\t\t\tif($IPs_in_DP)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach($IPs_in_DP as $this_IP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//$IPx['IP']=$this_IP->IP;\r\n\t\t\t\t\t\t$AllData[]=array(\"IP\",$this_IP->IP);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$USERs_in_DP=$wpdb->get_results(\"SELECT USERNAME FROM \".$wpdb->prefix.\"IPBLC_usernames ORDER BY id DESC\");\r\n\t\t\t\tif($USERs_in_DP)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach($USERs_in_DP as $this_USER)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$USERx=$this_USER->USERNAME;\r\n\t\t\t\t\t\t$USERx=str_replace(\"&quot;\",'\"',$USERx);\r\n\t\t\t\t\t\t$USERx=urlencode($USERx);\r\n\t\t\t\t\t\t//$userxx['username']=$USERx;\r\n\t\t\t\t\t\t$AllData[]=array(\"USERNAME\",$USERx);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\theader( 'Content-Type: text/csv' );\r\n\t\t\t\theader( 'Content-Disposition: attachment;filename=IPBlacklistDB.csv');\r\n\t\t\t\t$fp = fopen('php://output', 'w');\r\n\t\t\t\tif($AllData)\r\n\t\t\t\t{\r\n\t\t\t\t\tforeach($AllData as $line)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tfputcsv($fp, $line);\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tfclose($fp);\r\n\r\n\t\t\t}\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//------end Export-----\r\n\r\n\t\t//-----Import Database-----\r\n\t\tif($_REQUEST['action']==\"importCSVIPCloud\")\r\n\t\t{\r\n\t\t\tif(current_user_can( 'manage_options' ) && isset($_REQUEST['filename']))\r\n\t\t\t{\r\n\t\t\t\t$js_url =get_bloginfo('template_directory');\r\n\t\t\t\t$upload_d = wp_upload_dir();\r\n\t\t\t\t$upload_url=$upload_d['baseurl'];\r\n\t\t\t\t$upload_dir=$upload_d['basedir'];\r\n\t\t\t\t$file_req=$_REQUEST['filename'];\r\n\r\n\t\t\t\t//---remove ../ or ./ from direct access---\r\n\r\n\t\t\t\t$file_req=str_replace(\"../\",\"\",$file_req);\r\n\t\t\t\t$file_req=str_replace(\"./\",\"\",$file_req);\r\n\r\n\t\t\t\t$filename= $upload_dir.\"/ipblc_csv/\".$file_req;\r\n\r\n\r\n\t\t\t\t//echo \"file: $filename<BR>\";\r\n\r\n\t\t\t\t$exp=explode(\".\",$filename);\r\n\t\t\t\t$ext=strtolower($exp[count($exp)-1]);\r\n\t\t\t\t$row = 1;\r\n\t\t\t\t$file_type=filetype($filename);\r\n\t\t\t\t\r\n\t\t\t\tif($ext==\"csv\" && $file_type==\"file\")\r\n\t\t\t\t{ \r\n\t\t\t\t\tif (($handle = fopen(\"$filename\", \"r\")) !== FALSE)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$AllData=array();\r\n\t\t\t\t\t\twhile (($data = fgetcsv($handle, 5242880, \",\")) !== FALSE)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$field=$data[0];\r\n\t\t\t\t\t\t\t$value=$data[1];\r\n\t\t\t\t\t\t\t$AllData[]=array(\"$field\"=>$value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfclose($handle);\r\n\t\t\t\t\t\techo json_encode($AllData);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\techo \"-1\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\techo \"-1\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//------end Import-----\r\n\t}\r\n\t//----- END import and export Database-----\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t//----- start saving in Database-----\r\n\tif(isset($_POST['action']))\r\n\t{\r\n\t\tif($_POST['action']==\"submitToDBIP\")\r\n\t\t{\r\n\t\t\tif(current_user_can( 'manage_options' ))\r\n\t\t\t{\r\n\t\t\t\t$IP=\"\";\r\n\t\t\t\tif($_POST['IP'])\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP=sanitize_text_field($_POST['IP']);\r\n\t\t\t\t}\r\n\t\t\t\t$found=\"\";\r\n\t\t\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t\t{\r\n\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\t\t\t\t\t$found=false;\r\n\t\t\t\t\tif(!$IP_in_DP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\t\t\t\t$time=time();\r\n\t\t\t\t\t\t$sql=$wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) VALUES(%s,%d,%d,%d)\",array($IP,$time,0,0));\r\n\t\t\t\t\t\t$wpdb->query($sql);\r\n\r\n\t\t\t\t\t\t//---post data to ip-finder.me\r\n\t\t\t\t\t\tpost_blacklist_add($IP);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\techo \"Done\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texit();\r\n\t\t}\r\n\r\n\t\t//---------submitToDBUSER-----\r\n\r\n\t\tif($_POST['action']==\"submitToDBUSER\")\r\n\t\t{\r\n\t\t\tif(current_user_can( 'manage_options' ))\r\n\t\t\t{\r\n\r\n\t\t\t\t$USER=$_POST['USER'];\r\n\t\t\t\t$found=\"\";\r\n\t\t\t\t$USER=sanitize_text_field($USER);\r\n\r\n\t\t\t\tif($USER)\r\n\t\t\t\t{\r\n\t\t\t\t\t$sql=$wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_usernames WHERE USERNAME=%s\",$USER);\r\n\t\t\t\t\t$USER_in_DB=$wpdb->get_var($sql);\r\n\t\t\t\t\t$found=false;\r\n\r\n\t\t\t\t\tif(!$USER_in_DB)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t$table=$wpdb->prefix.\"IPBLC_usernames\";\r\n\t\t\t\t\t\t$time=time();\r\n\r\n\t\t\t\t\t\t$sql=$wpdb->prepare(\"INSERT INTO $table (USERNAME,timestamp,visits,lastvisit) \r\n\t\t\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($USER,$time,0,0));\r\n\r\n\t\t\t\t\t\t$wpdb->query($sql);\r\n\r\n\t\t\t\t\t\t//---post blacklist data to ip-finder.me\r\n\t\t\t\t\t\t$USER2=urlencode($USER);\r\n\t\t\t\t\t\tpost_blacklist_add_user($USER2);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\techo \"Done\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texit();\r\n\t\t}\r\n\t\t//-----END submitToDBUSER-----\r\n\t}\r\n\t//----- END start saving in Database-----\r\n}\r\n//----end function----\r\n\r\n\r\n$found=false;\r\n$IP_global=\"\";\r\n$IP_error=false;\r\n\r\n\r\n$USER_global=\"\";\r\n$USER_error=false;\r\n\r\nadd_action('admin_menu', 'page_IPBLC_actions');  \r\nadd_action('admin_init', 'create_sql');\r\nadd_action( 'admin_notices', 'check_fixes' ); \r\n\r\n\r\nadd_filter( 'manage_edit-comments_columns', 'IPBLC_IP_column' );\r\nadd_filter( 'manage_comments_custom_column', 'IPBLC_IP_value', 10, 2 );\r\n\r\nadd_action('init', 'IPBLC_blockIP');  \r\n\r\n\r\nadd_action('wp_login_failed','IPBLC_login_failed');\r\n\r\n//add_action('comment_unapproved_to_spam', 'auto_blacklist_spam');\r\n//add_action('comment_approved_to_spam', 'auto_blacklist_spam');\r\n\r\nadd_action('admin_init', 'auto_blacklist_spam_multi');\r\n\r\n\r\nfunction IPBLC_login_failed(){\r\n\r\n\tglobal $wpdb;\r\n\r\n\r\n\t$postedData=\"\";\r\n\t//print_r($_SERVER);\r\n\t$visitorIP=sanitize_text_field($_SERVER['REMOTE_ADDR']);\r\n\t$visitor_time=sanitize_text_field($_SERVER['REQUEST_TIME']);\r\n\t$visitor_user_agent=sanitize_text_field($_SERVER['HTTP_USER_AGENT']);\r\n\r\n\t$IPBLC_failedlogin_email=get_option('IPBLC_failedlogin_email');\r\n\r\n\r\n\t$isIPSafe=isIpSafe($visitorIP);\r\n\tif($isIPSafe==0)\r\n\t{\r\n\t\tif(isset($_POST))\r\n\t\t{\r\n\t\t\tforeach($_POST as $k=>$v)\r\n\t\t\t{\r\n\t\t\t\t$postedData.=\"<font color=green>$k</font> => <font color=red>$v</font><BR>\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t$table=$wpdb->prefix.\"IPBLC_login_failed\";\r\n\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table (IP,variables,useragent,timestamp) \r\n\t\t\tVALUES(%s,%s,%s,%s)\",\r\n\t\t\tarray($visitorIP,$postedData,$visitor_user_agent,$visitor_time)));\r\n\r\n\t\t//-----check auto block username-----\r\n\t\t$login_user=\"\";\r\n\t\tif(isset($_POST['log']))\r\n\t\t{\r\n\t\t\t$login_user=sanitize_text_field($_POST['log']);\r\n\t\t}\r\n\r\n\t\t$IPBLC_autoblock=get_option('IPBLC_autoblock');\r\n\t\t$username_block=0;\r\n\t\t$IPBLC_autoblock=str_replace(\"\\r\\n\",\"\\n\",$IPBLC_autoblock);\r\n\t\t$IPBLC_autoblock=str_replace(\"\\'\",\"'\",$IPBLC_autoblock);\r\n\t\tif($IPBLC_autoblock)\r\n\t\t{\r\n\t\t\t$IPBLC_autoblock_explode=explode(\"\\n\",$IPBLC_autoblock);\r\n\t\t\tif($IPBLC_autoblock_explode)\r\n\t\t\t{\r\n\t\t\t\tforeach($IPBLC_autoblock_explode as $user)\r\n\t\t\t\t{\r\n\t\t\t\t\t$user=str_replace(\"\\n\",\"\",$user);\r\n\t\t\t\t\tif($user==$login_user && $user!=\"\" && $login_user!=\"\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$username_block=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif($username_block==1)\r\n\t\t{\r\n\r\n\t\t\t$time=time();\r\n\t\t\t$table2=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\tif(filter_var($visitorIP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t{\r\n\t\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table2 (IP,timestamp,visits,lastvisit) \r\n\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($visitorIP,$time,0,0)));\r\n\r\n\t\t\t\tpost_blacklist_add($visitorIP);\r\n\t\t\t\tif($IPBLC_failedlogin_email)\r\n\t\t\t\t{\r\n\t\t\t\t\t//echo \"sending mail!!\";\r\n\t\t$failedMessage=\"$visitorIP blacklisted on \".site_url().\" due to login with username \\\"$login_user\\\"\\r\\n\\r\\nThank you for using IP Blacklist Cloud\";\r\n\t\twp_mail($IPBLC_failedlogin_email,\"$visitorIP Blacklisted (Auto Block)\",$failedMessage);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//-----check auto block username - END -----\r\n\r\n\r\n\t\t$IPBLC_failedlogin_max=get_option('IPBLC_failedlogin_max');\r\n\t\tif(!$IPBLC_failedlogin_max)\r\n\t\t{\r\n\t\t\tupdate_option('IPBLC_failedlogin_max','5');\r\n\t\t\t$IPBLC_failedlogin_max=get_option('IPBLC_failedlogin_max');\r\n\r\n\t\t}\r\n\t\t$IPBLC_failedlogin_time=get_option('IPBLC_failedlogin_time');\r\n\t\tif(!$IPBLC_failedlogin_time)\r\n\t\t{\r\n\t\t\tupdate_option('IPBLC_failedlogin_time','60');\r\n\t\t\t$IPBLC_failedlogin_time=get_option('IPBLC_failedlogin_time');\r\n\t\t}\r\n\r\n\t\t$time=time();\r\n\t\t$startTime=$time-($IPBLC_failedlogin_time*60);\r\n\r\n\t\t$failedTotal=$wpdb->get_results($wpdb->prepare(\"SELECT COUNT(*) as attempts FROM $table WHERE IP=%s AND timestamp>=%d AND timestamp<=%d\",\r\n\t\t\tarray($visitorIP,$startTime,$time)));\r\n\r\n\t\tif($failedTotal)\r\n\t\t{\r\n\t\t\t$attempts=$failedTotal[0]->attempts;\r\n\t\t\t//echo $attempts;\r\n\t\t\tif($attempts>=$IPBLC_failedlogin_max && filter_var($visitorIP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t\t{\r\n\t\t\t\t$table2=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table2 (IP,timestamp,visits,lastvisit) \r\n\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($visitorIP,$time,0,0)));\r\n\r\n\t\t\t\tpost_blacklist_add($visitorIP);\r\n\r\n\t\t\t\tif($IPBLC_failedlogin_email)\r\n\t\t\t\t{\r\n\t\t\t\t\t$resultX = $wpdb->get_results($wpdb->prepare(\"SELECT * FROM \".$wpdb->prefix.\"IPBLC_login_failed  WHERE \r\n\t\t\t\t\t\tIP=%s  ORDER BY timestamp desc LIMIT 5\",$visitorIP));\r\n\r\n\t\t\t\t\t$failedDatax=\"\";\r\n\t\t\t\t\tforeach($resultX as $this_IPx)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t$userAgent=$this_IPx->useragent;\r\n\t\t\t\t\t\t$vars=$this_IPx->variables;\r\n\t\t\t\t\t\t$vars=str_replace(\"<BR>\",\"\\r\\n\",$vars);\r\n\t\t\t\t\t\t$vars=strip_tags($vars);\r\n\r\n\t\t\t\t\t\t$idd=$this_IPx->id;\r\n\t\t\t\t\t\t$timeX=date(\"M d, Y\",$this_IPx->timestamp);\r\n\t\r\n\t\t\t\t\t\t$failedDatax.=\"$vars\\r\\n\\r\\n$userAgent\\r\\n\\r\\n$timeX\\r\\n\\r\\n---------------------------------------------\\r\\n\\r\\n\";\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$showData=\"Failed Attempts Details (Max 5)\\r\\n\\r\\n\".$failedDatax;\r\n\r\n\r\n\t\t\t\t\t$failedMessage=\"$visitorIP blacklisted on \".site_url().\" due to failed login attempts on following condition:\\n\\nAttempts: $IPBLC_failedlogin_max (max)\\nTime for max attempts: $IPBLC_failedlogin_time\".\"\\nTotal attempts made: $attempts\".\"\\r\\n\\r\\n\".$showData.\"\\r\\n\\r\\nThank you for using IP Blacklist Cloud\";\r\n\r\n\r\n\t\t\t\t\twp_mail($IPBLC_failedlogin_email,\"$visitorIP Blacklisted (Failed Login)\",$failedMessage);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\t//$isIPSafe==0\t\r\n\r\n}\r\n//----end function---\r\n\r\n\r\n\r\nfunction load_custom_IPBLC_admin_style()\r\n{\r\n\r\n        echo \"<style type=\\\"text/css\\\">\\n\r\n\t.IPSpam, .IPSpamAction{ display: inline; margin: 0px 10px;}\\n\t\t\r\n\t</style>\\n\r\n\t\";\r\n\r\n}\r\n\r\n\r\n\r\nfunction IPJS()\r\n{\r\n\tif(isset($_GET['blacklist']))\r\n\t{\r\n\t\t//print_r($_SERVER);\r\n\t\t$referer=sanitize_text_field($_SERVER['HTTP_REFERER']);\r\n\r\n\t\r\n\t\tif(strpos($referer,\"edit-comments.php\")>0)\r\n\t\t{\r\n\t\t\tip_added_message();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\telseif(isset($_GET['blacklistuser']))\r\n\t{\r\n\t\t//print_r($_SERVER);\r\n\t\t$referer=sanitize_text_field($_SERVER['HTTP_REFERER']);\r\n\t\tif(strpos($referer,\"edit-comments.php\")>0)\r\n\t\t{\r\n\t\t\tuser_added_message();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t$scriptname=\"\";\r\n\tif(isset($_SERVER['SCRIPT_NAME']))\r\n\t{\r\n\t\t$scriptname=$_SERVER['SCRIPT_NAME'];\r\n\t}\r\n\r\n\t$page=\"\";\r\n\tif(isset($_GET['page']))\r\n\t{\r\n\t\t$page=$_GET['page'];\r\n\t}\r\n\r\n?>\r\n<script type=\"text/javascript\">\r\njQuery(\".IPSpamAction\").click(function(){\r\n\r\n\tvar comment_ID=jQuery(this).attr('name');\r\n\tvar spamperc=jQuery(\"#IPSpam-\"+comment_ID);\r\n\tspamperc.css(\"color\",\"#000000\");\r\n\tspamperc.html(\"<img src=\\\"<?php echo site_url(); ?>/wp-admin/images/wpspin_light.gif\\\">\");\r\n<?php\r\n\r\n\t$SpamCheckerUrl=site_url().\"?action=spamcheck\";\r\n\r\n?>\r\n\r\n\r\n\r\n\t\tvar reRequest=jQuery.ajax({\r\n\t\t\t  type: \"POST\",\r\n\t\t\t  url: \"<?php echo $SpamCheckerUrl; ?>\",\r\n\t\t\t  data: {comment_ID: comment_ID},\r\n  \t\t\tdataType: \"html\"\r\n\r\n\t\t\t});\r\n\r\n\t\treRequest.done(function(msg,response) {\r\n\t\t\tif(msg)\r\n\t\t\t{\r\n\t\t\t\tspamperc.css(\"color\",\"#000000\");\r\n\t\t\t\tspamperc.html(msg);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treRequest.fail(function(jqXHR, textStatus) {\r\n\t\t\tspamperc.css(\"color\",\"#FF0000\");\r\n\t\t\tspamperc.html(\"<?php echo __(\"Error\"); ?>\");\r\n\t\t});\r\n\r\n\treturn false;\r\n\r\n});\r\n</script>\r\n<?php\r\n}\r\n\r\nfunction protected_comment_link()\r\n{\r\n\r\n\t$IPBLC_protected=get_option('IPBLC_protected');\r\n\tif($IPBLC_protected==\"2\")\r\n\t{\r\n\r\n\r\n\techo \"Protected with <a href=\\\"http://www.ip-finder.me\\\"><img src=\\\"\".plugins_url().\"/ip-blacklist-cloud/icon.png\\\" style=\\\"display: inline;\\\" alt=\\\"IP Blacklist Cloud\\\"></a><a href=\\\"http://www.ip-finder.me\\\" title=\\\"IP Blacklist Cloud\\\">IP Blacklist Cloud</a>\";\r\n\r\n\r\n\t}\r\n\telse\r\n\t{\r\n\t\t//echo \"<div style=\\\"display: none;\\\">Protected with <a href=\\\"http://www.ip-finder.me\\\" title=\\\"IP Blacklist Cloud\\\">IP Blacklist Cloud</a></div>\";\r\n\t}\r\n}\r\n\r\n\r\nfunction postToCloud($comment_id)\r\n{\r\n\r\n\t$IPBLC_auto_comments=get_option('IPBLC_auto_comments');\r\n\r\n\tif($IPBLC_auto_comments==\"2\")\r\n\t{\r\n\r\n\t\tif(is_numeric($comment_id))\r\n\t\t{\r\n\r\n\t\t\t//------plugin url---\r\n\t\t\t$plugin_dir_name=plugin_dir_url(__FILE__);\r\n\t\t\t//------SpamCheckerfile---\r\n\t\t\t$SpamCheckerUrl=$plugin_dir_name.\"SpamChecker.php\";\r\n\r\n\r\n\t\t\t//echo $SpamCheckerUrl;\r\n\r\n\t\t\t$handle = curl_init($SpamCheckerUrl);\r\n\t\t\t\r\n\t\t\tcurl_setopt($handle, CURLOPT_POSTFIELDS,\"comment_ID=$comment_id\");\r\n\t\t\tcurl_setopt($handle, CURLOPT_POST, 1);\r\n\t\t\tcurl_setopt($handle,  CURLOPT_RETURNTRANSFER, TRUE);\r\n\t\t\tcurl_setopt($handle, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']);\r\n\t\t\tcurl_setopt($handle, CURLOPT_REFERER, site_url());\r\n\t\t\tcurl_setopt( $handle, CURLOPT_FOLLOWLOCATION, true );\r\n\t\t\tcurl_setopt( $handle, CURLOPT_ENCODING, \"\" );\r\n\t\t\tcurl_setopt( $handle, CURLOPT_AUTOREFERER, true );\r\n\t\t\tcurl_setopt( $handle, CURLOPT_MAXREDIRS, 10 );\r\n\t\t\tcurl_setopt($handle,CURLOPT_TIMEOUT,15);\r\n\t\t\tcurl_setopt($handle,CURLOPT_CONNECTTIMEOUT,15);\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t$header_info = curl_getinfo( $handle );\r\n \r\n\t\t\t$httpCode = curl_getinfo($handle, CURLINFO_HTTP_CODE);\r\n\r\n\r\n\t\t\t$response = curl_exec($handle);\r\n\r\n\t\t\t$httpCode = curl_getinfo($handle, CURLINFO_HTTP_CODE);\r\n\t\t\tcurl_close($handle);\r\n\r\n\t\t\t//echo $response;\r\n\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//-----disable auto post to cloud-----------\r\n//add_action('comment_post','postToCloud');\r\n\r\n\r\nadd_action( 'admin_enqueue_scripts', 'load_custom_IPBLC_admin_style' );\r\nadd_action('admin_footer', 'IPJS');\r\nadd_action( 'comment_form', 'protected_comment_link' );\r\n\r\nadd_action('wp_ajax_verifyCloudAccount', 'verifyCloudAccount_callback');\r\n\r\n\r\n\r\nfunction verifyCloudAccount($echo=false)\r\n{\r\n\r\n\r\n\t$IPBLC_cloud_email=get_option('IPBLC_cloud_email');\r\n\t$IPBLC_cloud_key=get_option('IPBLC_cloud_key');\r\n\r\n\tif($IPBLC_cloud_email && $IPBLC_cloud_key)\r\n\t{\r\n\t\t//---post blacklist data to ip-finder.me\r\n\r\n\r\n$data = array('test' => '1');\r\n\r\n\r\n\r\n$contextData = array ( \r\n                'method' => 'POST',\r\n\t\t'content' => http_build_query($data),\r\n\t\t'header' => \"Connection: close\\r\\n\". \r\n                        \"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\r\n\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n \r\n\t\t$context = stream_context_create (array ( 'http' => $contextData ));\r\n\r\n\t\t$email2=urlencode($IPBLC_cloud_email);\r\n\r\n$link=\"http://www.ip-finder.me/wp-content/themes/ipfinder/cloudaccount_status.php?email=$email2&website=\".urlencode(site_url()).\"&website_name=\".urlencode(get_bloginfo('name')).\"&cloudkey=\".$IPBLC_cloud_key;\r\n\r\n\r\n\t\t$post_to_cloud =  file_get_contents (\r\n\t\t$link,\r\n\t\tfalse,\r\n\t\t$context);\r\n\r\n\t\tif($echo)\r\n\t\t{\r\n\t\t\techo $post_to_cloud;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn $post_to_cloud;\r\n\t\t}\r\n\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif($echo)\r\n\t\t{\r\n\t\t\techo \"-1\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn \"-1\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nadd_action('admin_footer', 'IPJS2');\r\n\r\n\r\nfunction IPJS2()\r\n{\r\n\r\n?>\r\n<script>\r\n\r\nvar ajaxloader=\"<img src=\\\"<?php echo site_url(); ?>/wp-admin/images/wpspin_light.gif\\\">\";\r\n\r\n\r\nfunction blacklist_IP(IP,commentID)\r\n{\r\n\tjQuery(\"#IPBlack\"+commentID).html(ajaxloader);\r\n\r\n\t\tvar reRequest=jQuery.ajax({\r\n\t\t\t  type: \"POST\",\r\n\t\t\t  url: \"<?php echo get_bloginfo('url'); ?>/\",\r\n\t\t\tdata: {blacklist: IP, action: \"blacklistIPJS\"},\r\n  \t\t\tdataType: \"html\"\r\n\t\t\t});\r\n\r\n\t\treRequest.done(function(msg) {\r\n\t\t\tresult=msg;\r\n\t\t\t//alert(result);\r\n\r\n\t\t\t\r\n\t\tif(result)\r\n\t\t{\r\n\t\t\tjQuery(\"#IPBlack\"+commentID).html(result);\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tjQuery(\"#IPBlack\"+commentID).html(\"<font color=red>Error! Try Again.</font>\");\r\n\t\t}\r\n\r\n\t\t});\r\n\r\n\t\treRequest.fail(function(jqXHR, textStatus) {\r\n\t\t\t//msg_box.show();\r\n\t\t\tjQuery(\"#IPBlack\"+commentID).html(\"<font color=red>Error! Try Again.</font>\");\r\n\t\t\tresult=false;\t\r\n\t\t});\r\n\r\n\r\n\r\n\t\r\n}\r\n\r\nfunction blacklist_USER(USER,commentID)\r\n{\r\n\tjQuery(\"#UserBlack\"+commentID).html(ajaxloader);\r\n\r\n\t\tvar reRequest=jQuery.ajax({\r\n\t\t\t  type: \"POST\",\r\n\t\t\t  url: \"<?php echo get_bloginfo('url'); ?>/\",\r\n\t\t\tdata: {blacklistuser: USER, action: \"blacklistUSERJS\"},\r\n  \t\t\tdataType: \"html\"\r\n\t\t\t});\r\n\r\n\t\treRequest.done(function(msg) {\r\n\t\t\tresult=msg;\r\n\t\t\t//alert(result);\r\n\r\n\t\t\t\r\n\t\tif(result)\r\n\t\t{\r\n\t\t\tjQuery(\"#UserBlack\"+commentID).html(result);\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tjQuery(\"#UserBlack\"+commentID).html(\"<font color=red>Error! Try Again.</font>\");\r\n\t\t}\r\n\r\n\t\t});\r\n\r\n\t\treRequest.fail(function(jqXHR, textStatus) {\r\n\t\t\t//msg_box.show();\r\n\t\t\tjQuery(\"#UserBlack\"+commentID).html(\"<font color=red>Error! Try Again.</font>\");\r\n\t\t\tresult=false;\t\r\n\t\t});\t\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<?php\r\n}\r\n\r\n\r\nfunction isIpSafe($checkIP)\r\n{\r\n\r\n\r\n\t$isIPSafe1=0;\r\n\t$IPBLC_whitelist=get_option('IPBLC_whitelist');\r\n\t$IPBLC_whitelist=str_replace('\\r\\n',\"\\r\\n\",$IPBLC_whitelist);\r\n\t$IPBLC_whitelist=str_replace(\"\\r\\n\",\"\\n\",$IPBLC_whitelist);\r\n\r\n\tif($IPBLC_whitelist)\r\n\t{\r\n\t\t$IPBLC_whitelist_explode=explode(\"\\n\",$IPBLC_whitelist);\r\n\r\n\r\n\t\tforeach($IPBLC_whitelist_explode as $wIP)\r\n\t\t{\r\n\t\t\t$wIP=str_replace(\"\\n\",\"\",$wIP);\r\n\t\t\t$wIP=str_replace(\" \",\"\",$wIP);\r\n\r\n\t\t\tif($wIP)\r\n\t\t\t{\r\n\t\t\t$wIP_range=explode(\"-\",$wIP);\r\n\t\t\t//print_r($wIP_range);\r\n\r\n\t\t\t$range=0;\r\n\t\t\tif(count($wIP_range)>1)\r\n\t\t\t{\r\n\t\t\t\t$range=1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif($range==0)\r\n\t\t\t{\r\n\r\n\t\t\t\t//echo \"no range...<BR>\";\r\n\r\n\t\t\t\t$wIP_explode=explode(\".\",$wIP);\r\n\t\t\t\t$wIP2=intval($wIP_explode[0]).\".\".intval($wIP_explode[1]).\".\".intval($wIP_explode[2]).\".\".intval($wIP_explode[3]);\r\n\r\n\t\t\t\t//echo \"$visitorIP==$wIP2 -- \".ip2long($visitorIP).\" -- \".ip2long($wIP2).\"<BR>\";\r\n\r\n\t\t\t\t//echo \"OK: \".filter_var($wIP2, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4).\"<BR>\";\r\n\r\n\t\t\t\tif(ip2long($checkIP)==ip2long($wIP2))\r\n\t\t\t\t{\r\n\t\t\t\t\t//echo \"SAFE<BR>\";\r\n\t\t\t\t\t$isIPSafe1=1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t//echo \"range...<BR>\";\r\n\r\n\r\n\t\t\t\t$wIP_explode1=explode(\".\",$wIP_range[0]);\r\n\t\t\t\t$wIP_explode2=explode(\".\",$wIP_range[1]);\r\n\t\t\t\t$wIP2_1=intval($wIP_explode1[0]).\".\".intval($wIP_explode1[1]).\".\".intval($wIP_explode1[2]).\".\".intval($wIP_explode1[3]);\r\n\t\t\t\t$wIP2_2=intval($wIP_explode2[0]).\".\".intval($wIP_explode2[1]).\".\".intval($wIP_explode2[2]).\".\".intval($wIP_explode2[3]);\r\n\r\n\t\t\t\t//echo \"$visitorIP==$wIP2 -- \".ip2long($visitorIP).\" -- \".ip2long($wIP2).\"<BR>\";\r\n\r\n\t\t\t\t//echo \"OK: \".filter_var($wIP2, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4).\"<BR>\";\r\n\t\t\t\t//\techo ip2long($checkIP).\">=\".ip2long($wIP2_1).\" && \".ip2long($checkIP).\"<=\".ip2long($wIP2_2).\"<BR>\";\r\n\r\n\t\t\t\tif(ip2long($checkIP)>=ip2long($wIP2_1) && ip2long($checkIP)<=ip2long($wIP2_2) )\r\n\t\t\t\t{\r\n\t\t\t\t//\techo ip2long($checkIP).\">=\".ip2long($wIP2_1).\" && \".ip2long($checkIP).\"<=\".ip2long($wIP2_2);\r\n\t\t\t\t//\techo \"SAFE\";\r\n\t\t\t\t\t$isIPSafe1=1;\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\treturn $isIPSafe1;\r\n\r\n}\r\n\r\n\r\n\r\nfunction post_blacklist_add($IP)\r\n{\r\n\r\n\r\n$data = array('test' => '1');\r\n\r\n\r\n\r\n$contextData = array ( \r\n                'method' => 'POST',\r\n\t\t'content' => http_build_query($data),\r\n\t\t'header' => \"Connection: close\\r\\n\". \r\n                        \"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\r\n\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n \r\n\r\n// Create context resource for our request\r\n\r\n$context = stream_context_create (array ( 'http' => $contextData ));\r\n$link=\"http://www.ip-finder.me/wp-content/themes/ipfinder/blacklist_add.php?IP=\".$IP.\"&website=\".urlencode(site_url()).\"&website_name=\".urlencode(get_bloginfo('name'));\r\n\r\n$post_to_cloud =  file_get_contents (\r\n                  $link,  // page url\r\n                  false,\r\n                  $context);\r\n\r\n\r\n//\techo \"return: $post_to_cloud\";\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction post_blacklist_add_multi($IPs)\r\n{\r\n\r\n\r\n$data = array('test' => '1');\r\n\r\n//print_r($IPs);\r\n\r\nif($IPs)\r\n{\r\n\r\n\t$IP_var=\"\";\r\n\t$sep=\"\";\r\n\t\r\n\tforeach($IPs as $IPx)\r\n\t{\r\n\t\t$IP_var.=$sep.$IPx;\r\n\t\t$sep=\",\";\r\n\t}\r\n\r\n\r\n$contextData = array ( \r\n                'method' => 'POST',\r\n\t\t'content' => http_build_query($data),\r\n\t\t'header' => \"Connection: close\\r\\n\". \r\n                        \"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\r\n\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n \r\n\r\n// Create context resource for our request\r\n\r\n$context = stream_context_create (array ( 'http' => $contextData ));\r\n$link=\"http://www.ip-finder.me/wp-content/themes/ipfinder/blacklist_add_multi.php?IP=\".$IP_var.\"&website=\".urlencode(site_url()).\"&website_name=\".urlencode(get_bloginfo('name'));\r\n\r\n\r\n$post_to_cloud =  file_get_contents (\r\n                  $link,  // page url\r\n                  false,\r\n                  $context);\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction post_blacklist_add_user($user)\r\n{\r\n\r\n\r\n$data = array('test' => '1');\r\n\r\n\r\n\r\n$contextData = array ( \r\n                'method' => 'POST',\r\n\t\t'content' => http_build_query($data),\r\n\t\t'header' => \"Connection: close\\r\\n\". \r\n                        \"Content-Type: application/x-www-form-urlencoded\\r\\n\".\r\n\r\n\t\t\"Referer: \".site_url().\"\\r\\n\");\r\n\r\n \r\n\r\n// Create context resource for our request\r\n\r\n$context = stream_context_create (array ( 'http' => $contextData ));\r\n\r\n$link=\"http://www.ip-finder.me/wp-content/themes/ipfinder/blacklist_user_add.php?USER=\".$user.\"&website=\".\r\nurlencode(site_url()).\"&website_name=\".urlencode(get_bloginfo('name'));\r\n\r\n$post_to_cloud =  file_get_contents (\r\n                  $link,  // page url\r\n                  false,\r\n                  $context);\r\n\r\n}\r\n\r\n\r\nfunction check_fixes()\r\n{\r\n\t$IPBLC_fix=get_option('IPBLC_fixes');\r\n\r\n\tif($IPBLC_fix==\"\")\r\n\t{\r\n\r\n?>\r\n\t<div class=\"error\">\r\n\t\t<p><h4 style=\"color: #FF0000;\">Action Required by IP Blacklist Cloud Plugin!</h4>\r\n\t\t<b>Please check <a href=\"admin.php?page=wp-IPBLC-fixes\">fixes</a> page for database issues.</b></p>\r\n\t</div>\r\n<?php\r\n\t}\r\n\r\n}\r\n\r\n\r\nfunction auto_blacklist_spam($comment_object)\r\n{\r\n\tglobal $wpdb;\r\n\r\n\t$IP=$comment_object->comment_author_IP;\r\n\r\n\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t$time=time();\r\n\r\n\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\r\n\t$found=false;\r\n\r\n//\tprint_r($IP_in_DP);\r\n\r\n\tif(!$IP_in_DP)\r\n\t{\r\n\r\n\t\tif(filter_var($IP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4))\r\n\t\t{\r\n//\t\t\techo \"$IP\".\"\\n\";\r\n\r\n\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) VALUES(%s,%d,%d,%d)\",array($IP,$time,0,0)));\r\n\t\t\tpost_blacklist_add($IP);\r\n\t\t}\r\n\t}\t\r\n}\r\n\r\nfunction auto_blacklist_spam_multi()\r\n{\r\n\tglobal $wpdb;\r\n\r\n\t$table=$wpdb->prefix.\"IPBLC_blacklist\";\r\n\t$time=time();\r\n\r\n\t$IPs=array();\r\n\r\n\r\n\t\t$action1=\"\";\r\n\t\t$action2=\"\";\r\n\t\t$sp=\"\";\r\n\t\t\r\n\t\tif(isset($_GET['action']))\r\n\t\t{\r\n\t\t\t$action1=$_GET['action'];\r\n\t\t}\r\n\t\t\r\n\t\tif(isset($_POST['action']))\r\n\t\t{\r\n\t\t\t$action1=$_POST['action'];\r\n\t\t}\r\n\t\t\r\n\t\tif(isset($_GET['action2']))\r\n\t\t{\r\n\t\t\t$action2=$_GET['action2'];\r\n\t\t}\r\n\t\tif(isset($_POST['action2']))\r\n\t\t{\r\n\t\t\t$action2=$_POST['action2'];\r\n\t\t}\r\n\t\tif(isset($_POST['spam']))\r\n\t\t{\r\n\t\t\t$sp=$_POST['spam'];\r\n\t\t}\r\n\r\n\r\n\r\n\tif($action1 || $action2)\r\n\t{\r\n\t\tif($action1==\"spam\" || $action2==\"spam\" || ($action1==\"delete-comment\" && $sp==1)  || ($action2==\"delete-comment\" && $sp==1) )\r\n\t\t{\r\n\r\n\t\t\tif(isset($_GET['delete_comments']))\r\n\t\t\t{\r\n\t\t\t\t$comments=$_GET['delete_comments'];\r\n\r\n\r\n\t\t\t\tforeach($comments as $commentID)\r\n\t\t\t\t{\r\n\t\t\t\t\t$commentX=get_comment(sanitize_text_field($commentID) );\r\n\t\t\t\t\t//print_r($commentX);\r\n\t\t\t\t\t$IP=$commentX->comment_author_IP;\r\n\r\n\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\r\n\t\t\t\t\tif(!$IP_in_DP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$IPs[]=$IP;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif($IPs)\r\n\t\t\t\t{\r\n\t\t\t\t\t$IPs=array_unique($IPs);\r\n\t\t\t\t\tforeach($IPs as $IP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) \r\n\t\t\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($IP,$time,0,0)));\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpost_blacklist_add_multi($IPs);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telseif(isset($_POST['id']))\r\n\t\t\t{\r\n\t\t\t\t\t$commentX=get_comment(sanitize_text_field($_POST['id']) );\r\n\t\t\t\t\t//print_r($commentX);\r\n\t\t\t\t\t$IP=$commentX->comment_author_IP;\r\n\r\n\t\t\t\t\t$IP_in_DP=$wpdb->get_var($wpdb->prepare(\"SELECT id FROM \".$wpdb->prefix.\"IPBLC_blacklist WHERE IP=%s\",$IP));\r\n\r\n\t\t\t\t\tif(!$IP_in_DP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$IPs[]=$IP;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\tif($IPs)\r\n\t\t\t\t{\r\n\t\t\t\t\t$IPs=array_unique($IPs);\r\n\t\t\t\t\tforeach($IPs as $IP)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $table (IP,timestamp,visits,lastvisit) \r\n\t\t\t\t\t\t\tVALUES(%s,%d,%d,%d)\",array($IP,$time,0,0)));\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpost_blacklist_add_multi($IPs);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\nfunction ipblc_notice()\r\n{\r\n\tglobal $pagenow;\r\n\t$msg_array=array();\r\n\t$msg_array[]='Manage multiple WordPress sites with <a href=\"http://www.ip-finder.me/ipblc-server/\">IPBLC Cloud Server</a> premium tool.';\r\n\t$msg_array[]='Tired of blocking same IP on multiple sites? <a href=\"http://www.ip-finder.me/ipblc-server/\">IPBLC Cloud Server</a> is a solution.';\r\n\t$msg_array[]='<a href=\"http://www.ip-finder.me/ipblc-server/\">IPBLC Cloud Server</a> - Synchronize IP addresses on multiple sites.';\r\n\r\n\t$show=0;\r\n\tif($pagenow == 'edit-comments.php')\r\n\t{\r\n\t\t$show=1;\r\n\t\t\t//---set emptry array---\r\n\t\t\t$start=0;\r\n\t\t\t$end=15;\r\n\t\t\tfor($i=$start;$i<=$end;$i++)\r\n\t\t\t{\r\n\t\t\t\t$msg_array[]=\"\";\r\n\t\t\t}\r\n\r\n\t\t\techo '<div class=\"error mob_error\"><p><b>IP Blacklist</b> - Columns visibility problem on mobile.</p></div>';\r\n?>\r\n<style>\r\n@media screen and (min-width: 782px)\r\n{\r\n\t.mob_error\r\n\t{\r\n\t\tdisplay: none;\r\n\t}\r\n}\r\n</style>\r\n<?php\r\n\t}\r\n\telseif($pagenow == 'admin.php')\r\n\t{\r\n\t\tif(isset($_GET['page']))\r\n\t\t{\r\n\t\t\tif($_GET['page']==\"wp-IPBLC-list\" || $_GET['page']==\"wp-IPBLC-Add\")\r\n\t\t\t{\r\n\t\t\t\t$show=1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t$rand=array_rand($msg_array,2);\r\n\t$msg=$msg_array[$rand[0]];\r\n\r\n\tif($show==1 && $msg!=\"\")\r\n\t{\r\n\t\techo '<div class=\"updated\"><p><b>'.$msg.'</b></p></div>';\r\n\t}\r\n}\r\nadd_action('admin_notices', 'ipblc_notice');\r\n\r\n?>", "=== IP Blacklist Cloud ===\r\nContributors: ad33lx\r\nDonate link: \r\nTags: comments, spam, IP, blacklist, cloud, IP cloud, block, spamming, secure, failed login, hack attempt, auto block login\r\nRequires at least: 3.3\r\nTested up to: 4.1.1\r\nStable tag: 3.43\r\nLicense: GPLv2 or later\r\nLicense URI: http://www.gnu.org/licenses/gpl-2.0.html\r\n\r\n\r\n\r\nBlacklist IP Addresses from visiting your WordPress website and Usernames from spamming.  View details of all failed login attempts.\r\n\r\n\r\n== Description ==\r\n\r\nIP Blacklist Cloud plugin allows you to blacklist IP addresses from visiting your WordPress website. Also, it submits your website link to the blocked IP database on [http://ip-finder.me](http://ip-finder.me/) which gives the other users to view how many sites have blocked the specific IP and see their comments.\r\nNew feature has been added to plugin which allows you to block usernames from spamming (comments) on your website.\r\n\r\n\r\nPremium Software for managing multiple WordPress websites for synchronization: IP Blacklist Cloud Server - http://ip-finder.me/ipblc-server/\r\n\r\n\r\n== Installation ==\r\n\r\nNote: Before downloading and installing plugin, you must accept that plugin sends your website url (using site_url()), website name (using get_bloginfo(\ufffdname\ufffd)) automatically when you blacklist any IP to http://ip-finder.me and show this on relative blacklisted IP. (Example: http://ip-finder.me/wpip?IP=203.81.202.127)\r\n\r\nSpamChecker sends comments data (Name, Email, URL and Comment) to check Spam Percentages based on our database.\r\n\r\n\r\n1. Upload 'ip_blacklist_cloud' folder to the '/wp-content/plugins/' directory\r\n\r\n2. Activate the plugin through the 'Plugins' menu in WordPress\r\n\r\n== How Does it Work ==\r\n\r\n1. If you want to block an IP manually, you can do this by providing IP in admin menu \ufffdIP Blacklist->Add IP to Blacklist\ufffd.\r\n\r\n2. If any visitor or spamming bot post comment on your posts, by visiting \ufffdComments\ufffd menu you can view IP and details on ip-finder.me or blacklist the IP.\r\n\r\nFor example: http://ip-finder.me/wpip?IP=203.81.202.127\r\n\r\n3. Once you black list the IP address, the visitor will not be able to view any content of your website and also post your website link and name on IP Finder cloud.\r\n\r\n4. You can delete any IP from blacklist by visiting admin menu \ufffdIP Blacklist->Blacklist\ufffd and it will also remove your site link and name from the list of websites which have blocked that specific IP.\r\n\r\n5. You can leave comments on IP Cloud (example: http://ip-finder.me/wpip?IP=203.81.202.127 ) so that other users can get the idea why this IP have been blocked by your site.\r\n\r\n== Frequently asked questions ==\r\n\r\nQ1. What data does this plugin submits to http://ip-finder.me/\r\nAns: * This plugin submits your WordPress site url and site name.\r\n     * Version 1.1 sends pending comment to http://ip-finder.me/ and find the same comment if it was posted on any other WordPress websites who have installed this plugin.\r\n     * Sending comment details to cloud requires user action and it is not automatic.\r\n\r\nQ2. Why does it sends WordPress site url and site name?\r\nAns: In order to build this IP Cloud valuable to all the users, ip-finder.me save site name and site url only for specific IP (when you block it) so that it gives the attention to other users that this IP could be dangerous for their website.\r\n\r\nQ3. How and when does it sends data to ip-finder.me\r\nAns: Plugin sends the data only on two conditions:\r\n\r\n  1. When you blacklist any IP on your website, it saves the data on ip-finder.me and add your site to the list of websites who have blocked that specific IP.\r\n  2. When you delete any IP from blacklist, it sends request to ip-finder.me to remove your site from the list of websites who have blocked that specific IP.\r\n  3. When you request to check Spam Percentage of any comment.\r\n\r\n\r\nQ4. If we block any IP, can they access example.com/wp-admin or still post comments?\r\nAns: NO! This is the main reason why this plugin has been built to avoid spamming on WordPress based websites. you can test this on demo server (Please see Demo section below)\r\n\r\nQ6. What data does it sends for checking spam percentage of a comment?\r\nAns: It sends Name, Email, URL and the contents of the comments.\r\n\r\nQ7. What data do you keep in your database?\r\nAns: We keep details of \r\n\r\n\t* Blacklist IPs\r\n\t* Blacklisted Usernames\r\n\t* Websites' names and URLs who have blocked that specific IP address\r\n\t* Comments details on which users have doubt that they are SPAM.\r\n\r\n== Screenshots ==\r\n\r\n1. http://demo.ip-finder.me/wp-content/uploads/2012/08/ip_box.png\r\n\r\n== DEMO ==\r\n\r\nYou can test this plugin before downloading and installing on demo server.\r\nhttp://demo.ip-finder.me/demo-details/\r\n\r\n\r\n== Changelog ==\r\n\r\n= 3.43 =\r\n* Quick Fix - Fixed CSV import vulnerability found by g0blin\r\n\r\n= 3.42 =\r\n* Quick Fix - Fixed mysql_real_escape_string() warning\r\n\r\n= 3.4.1 =\r\n* Fixed security exploits found by Mika Epstein\r\n\r\n= 3.4 =\r\n* Fixed security exploits found by Mika Epstein\r\n\r\n= 3.3 =\r\n* Fixed minor PHP Errors\r\n* Fixed auto blacklist if \"spam\" link is clicked for single comment. \r\n* Protected with IP Blacklist Cloud will be displayed with comment form (no more ON / OFF settings).\r\n\r\n= 3.2 =\r\n* Automatically Blacklist mulitple IP addresses for spam comments (mark as spam from dropdown)\r\n* Fixed PHP and Database Errors.\r\n* Run fix on database for avoiding slow queries.\r\n* Faster Spam Calculator (cURL is required).\r\n\r\n= 3.1 =\r\n* Fixed Security Exploit in plugin.\r\n\r\n= 3.0 =\r\n* Fixes for small bugs.\r\n* Add a range of IP address for whitelist.\r\n* Auto Block any IP for specific user login (set list of usernames).\r\n* Check blacklisted IP addresses that did not attack in last 90 days.\r\n\r\n= 2.91 =\r\n* Quick Fix for 406 error while connecting to ip-finder.me\r\n\r\n= 2.9 =\r\n* Sub-menu added to fix tables (create indexes). NEW - IMPORTANT!\r\n* Blacklist IP now shows last attack (attack after blocking).\r\n* Sends Failed Login attempts details of last 5 attempts in email.\r\n* Blacklist IP page now shows 50 IP addresses per page.\r\n* Failed Login page now shows 50 IP addresses per page.\r\n\r\n= 2.8 =\r\n* Sub-menu added to fix tables (create indexes). IMPORTANT!\r\n\r\n= 2.7 =\r\n* Changed site_url() to get_bloginfo('url') for AJAX call. site_url() was having problem for those who set WordPress URL and Website URL different.\r\n\r\n= 2.6 =\r\n* Allow you to connect with IP Blacklist Cloud Server (Premium Software) http://ip-finder.me/ipblc-server/\r\n\r\n= 2.5 =\r\n* Shows details of Failed login attempts for single IP if attempts are less than or equals to 3. For 4 or above attempts, view details on each IP on separate page.\r\n* Check / Uncheck All failed login attempts and blacklist multiple IPs with one click.\r\n* Whitelist menu added for those who blacklist themselves by mistake. \r\n\r\n\r\n= 2.4 =\r\n* Fixed \"Warning: Cannot modify header information - headers already sent by....\" error.\r\n\r\n= 2.3 =\r\n* Throws 404 Response to blacklisted IP addresses.\r\n* Search option added for blacklisted IP addresses.\r\n* Delete Multiple blacklisted IP addresses by check/uncheck all option.\r\n* EXTRA SECURITY menu added.\r\n\r\n\r\n\r\n\r\n= 2.2 =\r\n* Settings to allow \"Sort by IP status\" in failed login page. By setting it to yes, you can sort Failed Login by IP Status (Neutral/Blacklisted).\r\n\r\n\r\n= 2.1 =\r\n* Fixes for \"Details Page\" of failed login IP.\r\n\r\n\r\n= 2.0 =\r\n* Failed login table shows each IP one time with number of attempts. Details of each IP are also available on single click.\r\n* Settings added for auto blacklisting IP for \"x\" number of failed attempts within given \"y\" time.\r\n* Receive email (optional) on auto blacklisting IP based on failed login attempts.\r\n\r\n\r\n= 1.9 =\r\n* Added \"Failed Logins\" sub-menu which shows details of IP, user agent and POST query variables.\r\n* Shows counter while importing CSV (Updating Database... x of xx).\r\n* Fixed Tables of Blacklisted IP addresses and Usernames.\r\n* Removed annoying \"Rate IP Blacklist\" message.\r\n\r\n= 1.8 =\r\n* Reduced server connection time.\r\n* Disabled auto submission of Comments for spam check. You must \"Calculate\" it manually from now.\r\n\r\n= 1.7 =\r\n* Cloud Account (Premium) function has been disabled due to problems in connecting with our server.\r\n* Import / Export option added in Settings page.\r\n* Ajax blacklist function for IP and Username added on Comments page. Page will not refresh anymore.\r\n* Sorting option added on IP Blacklist and Username Blacklist page. You can now check Blacklisted IP or Usernames visits after they are blocked. \r\n* Fixed Auto posting of comments to our server for spam check.\r\n\r\n= 1.6 =\r\n* Fixed Cloud Account functions for directory based WordPress websites.\r\n\r\n= 1.5 =\r\n* Fixed \"Delete IP\" function on IP Blacklist page.\r\n* Blacklist Usernames to avoid spamming from same user on your website.\r\n* Visit counter for both IP and Usernames has been added on their respective menu pages.\r\n* PREMIUM SERVICE option has been added on settings pages of IP Blacklist plugin. (See details at: http://ip-finder.me/cloudaccount/ )\r\n\r\n= 1.4 =\r\n* Spam Checker bugs fixed for posting comments to IP Blacklist Cloud.\r\n* Auto submit comment to IP Blacklist Cloud when visitor post any comment to your website (You can turn off this feature).\r\n\r\n= 1.3 =\r\n* Blacklist statistics page added in Admin Panel.\r\n\r\n= 1.2 =\r\n* Fixed Blacklist option on \"Comments\" Page for non-subdomain WordPress websites.\r\n\r\n= 1.1 =\r\n* Find Spam Pecentage of any pending comment by posting details to http://ip-finder.me/\r\n\r\n= 0.1 =\r\n* Initial Release\r\n\r\n\r\n== Upgrade Notice ==\r\n\r\n\r\n= 1.9 =\r\n* Added \"Failed Logins\" sub-menu which shows details of IP, user agent and POST query variables.\r\n* Shows counter while importing CSV (Updating Database... x of xx).\r\n* Fixed Tables of Blacklisted IP addresses and Usernames."], "filenames": ["ip_blacklist_cloud.php", "readme.txt"], "buggy_code_start_loc": [6, 7], "buggy_code_end_loc": [1904, 92], "fixing_code_start_loc": [6, 7], "fixing_code_end_loc": [1925, 96], "type": "CWE-22", "message": "A vulnerability, which was classified as critical, was found in IP Blacklist Cloud Plugin up to 3.42 on WordPress. This affects the function valid_js_identifier of the file ip_blacklist_cloud.php of the component CSV File Import. The manipulation of the argument filename leads to path traversal. It is possible to initiate the attack remotely. Upgrading to version 3.43 is able to address this issue. The name of the patch is 6e6fe8c6fda7cbc252eef083105e08d759c07312. It is recommended to upgrade the affected component. The identifier VDB-227757 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2015-10105", "sourceIdentifier": "cna@vuldb.com", "published": "2023-05-01T02:15:39.197", "lastModified": "2023-05-06T03:15:43.640", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as critical, was found in IP Blacklist Cloud Plugin up to 3.42 on WordPress. This affects the function valid_js_identifier of the file ip_blacklist_cloud.php of the component CSV File Import. The manipulation of the argument filename leads to path traversal. It is possible to initiate the attack remotely. Upgrading to version 3.43 is able to address this issue. The name of the patch is 6e6fe8c6fda7cbc252eef083105e08d759c07312. It is recommended to upgrade the affected component. The identifier VDB-227757 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:ip-finder:ip_blacklist_cloud:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "3.42", "matchCriteriaId": "C911D631-8FCD-40EF-A49A-44934DA7E599"}]}]}], "references": [{"url": "https://github.com/wp-plugins/ip-blacklist-cloud/commit/6e6fe8c6fda7cbc252eef083105e08d759c07312", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://github.com/wp-plugins/ip-blacklist-cloud/releases/tag/3.43", "source": "cna@vuldb.com", "tags": ["Release Notes"]}, {"url": "https://vuldb.com/?ctiid.227757", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.227757", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/wp-plugins/ip-blacklist-cloud/commit/6e6fe8c6fda7cbc252eef083105e08d759c07312"}}