{"buggy_code": ["<?php\n/**\n * Update Core administration panel.\n *\n * @package WordPress\n * @subpackage Administration\n */\n\n/** WordPress Administration Bootstrap */\nrequire_once( dirname( __FILE__ ) . '/admin.php' );\n\nwp_enqueue_style( 'plugin-install' );\nwp_enqueue_script( 'plugin-install' );\nwp_enqueue_script( 'updates' );\nadd_thickbox();\n\nif ( is_multisite() && ! is_network_admin() ) {\n\twp_redirect( network_admin_url( 'update-core.php' ) );\n\texit();\n}\n\nif ( ! current_user_can( 'update_core' ) && ! current_user_can( 'update_themes' ) && ! current_user_can( 'update_plugins' ) )\n\twp_die( __( 'Sorry, you are not allowed to update this site.' ) );\n\n/**\n *\n * @global string $wp_local_package\n * @global wpdb   $wpdb\n *\n * @staticvar bool $first_pass\n *\n * @param object $update\n */\nfunction list_core_update( $update ) {\n \tglobal $wp_local_package, $wpdb;\n  \tstatic $first_pass = true;\n\n\t$wp_version = get_bloginfo( 'version' );\n\n \tif ( 'en_US' == $update->locale && 'en_US' == get_locale() )\n \t\t$version_string = $update->current;\n \t// If the only available update is a partial builds, it doesn't need a language-specific version string.\n \telseif ( 'en_US' == $update->locale && $update->packages->partial && $wp_version == $update->partial_version && ( $updates = get_core_updates() ) && 1 == count( $updates ) )\n \t\t$version_string = $update->current;\n \telse\n \t\t$version_string = sprintf( \"%s&ndash;<strong>%s</strong>\", $update->current, $update->locale );\n\n\t$current = false;\n\tif ( !isset($update->response) || 'latest' == $update->response )\n\t\t$current = true;\n\t$submit = __('Update Now');\n\t$form_action = 'update-core.php?action=do-core-upgrade';\n\t$php_version    = phpversion();\n\t$mysql_version  = $wpdb->db_version();\n\t$show_buttons = true;\n\tif ( 'development' == $update->response ) {\n\t\t$message = __('You are using a development version of WordPress. You can update to the latest nightly build automatically:');\n\t} else {\n\t\tif ( $current ) {\n\t\t\t$message = sprintf( __( 'If you need to re-install version %s, you can do so here:' ), $version_string );\n\t\t\t$submit = __('Re-install Now');\n\t\t\t$form_action = 'update-core.php?action=do-core-reinstall';\n\t\t} else {\n\t\t\t$php_compat     = version_compare( $php_version, $update->php_version, '>=' );\n\t\t\tif ( file_exists( WP_CONTENT_DIR . '/db.php' ) && empty( $wpdb->is_mysql ) )\n\t\t\t\t$mysql_compat = true;\n\t\t\telse\n\t\t\t\t$mysql_compat = version_compare( $mysql_version, $update->mysql_version, '>=' );\n\n\t\t\tif ( !$mysql_compat && !$php_compat )\n\t\t\t\t/* translators: 1: WordPress version number, 2: Minimum required PHP version number, 3: Minimum required MySQL version number, 4: Current PHP version number, 5: Current MySQL version number */\n\t\t\t\t$message = sprintf( __('You cannot update because <a href=\"https://codex.wordpress.org/Version_%1$s\">WordPress %1$s</a> requires PHP version %2$s or higher and MySQL version %3$s or higher. You are running PHP version %4$s and MySQL version %5$s.'), $update->current, $update->php_version, $update->mysql_version, $php_version, $mysql_version );\n\t\t\telseif ( !$php_compat )\n\t\t\t\t/* translators: 1: WordPress version number, 2: Minimum required PHP version number, 3: Current PHP version number */\n\t\t\t\t$message = sprintf( __('You cannot update because <a href=\"https://codex.wordpress.org/Version_%1$s\">WordPress %1$s</a> requires PHP version %2$s or higher. You are running version %3$s.'), $update->current, $update->php_version, $php_version );\n\t\t\telseif ( !$mysql_compat )\n\t\t\t\t/* translators: 1: WordPress version number, 2: Minimum required MySQL version number, 3: Current MySQL version number */\n\t\t\t\t$message = sprintf( __('You cannot update because <a href=\"https://codex.wordpress.org/Version_%1$s\">WordPress %1$s</a> requires MySQL version %2$s or higher. You are running version %3$s.'), $update->current, $update->mysql_version, $mysql_version );\n\t\t\telse\n\t\t\t\t/* translators: 1: WordPress version number, 2: WordPress version number including locale if necessary */\n\t\t\t\t$message = \tsprintf(__('You can update to <a href=\"https://codex.wordpress.org/Version_%1$s\">WordPress %2$s</a> automatically:'), $update->current, $version_string);\n\t\t\tif ( !$mysql_compat || !$php_compat )\n\t\t\t\t$show_buttons = false;\n\t\t}\n\t}\n\n\techo '<p>';\n\techo $message;\n\techo '</p>';\n\techo '<form method=\"post\" action=\"' . $form_action . '\" name=\"upgrade\" class=\"upgrade\">';\n\twp_nonce_field('upgrade-core');\n\techo '<p>';\n\techo '<input name=\"version\" value=\"'. esc_attr($update->current) .'\" type=\"hidden\"/>';\n\techo '<input name=\"locale\" value=\"'. esc_attr($update->locale) .'\" type=\"hidden\"/>';\n\tif ( $show_buttons ) {\n\t\tif ( $first_pass ) {\n\t\t\tsubmit_button( $submit, $current ? '' : 'primary regular', 'upgrade', false );\n\t\t\t$first_pass = false;\n\t\t} else {\n\t\t\tsubmit_button( $submit, '', 'upgrade', false );\n\t\t}\n\t}\n\tif ( 'en_US' != $update->locale )\n\t\tif ( !isset( $update->dismissed ) || !$update->dismissed )\n\t\t\tsubmit_button( __( 'Hide this update' ), '', 'dismiss', false );\n\t\telse\n\t\t\tsubmit_button( __( 'Bring back this update' ), '', 'undismiss', false );\n\techo '</p>';\n\tif ( 'en_US' != $update->locale && ( !isset($wp_local_package) || $wp_local_package != $update->locale ) )\n\t    echo '<p class=\"hint\">'.__('This localized version contains both the translation and various other localization fixes. You can skip upgrading if you want to keep your current translation.').'</p>';\n\t// Partial builds don't need language-specific warnings.\n\telseif ( 'en_US' == $update->locale && get_locale() != 'en_US' && ( ! $update->packages->partial && $wp_version == $update->partial_version ) ) {\n\t    echo '<p class=\"hint\">'.sprintf( __('You are about to install WordPress %s <strong>in English (US).</strong> There is a chance this update will break your translation. You may prefer to wait for the localized version to be released.'), $update->response != 'development' ? $update->current : '' ).'</p>';\n\t}\n\techo '</form>';\n\n}\n\n/**\n * @since 2.7.0\n */\nfunction dismissed_updates() {\n\t$dismissed = get_core_updates( array( 'dismissed' => true, 'available' => false ) );\n\tif ( $dismissed ) {\n\n\t\t$show_text = esc_js(__('Show hidden updates'));\n\t\t$hide_text = esc_js(__('Hide hidden updates'));\n\t?>\n\t<script type=\"text/javascript\">\n\n\t\tjQuery(function($) {\n\t\t\t$('dismissed-updates').show();\n\t\t\t$('#show-dismissed').toggle(function(){$(this).text('<?php echo $hide_text; ?>');}, function() {$(this).text('<?php echo $show_text; ?>')});\n\t\t\t$('#show-dismissed').click(function() { $('#dismissed-updates').toggle('slow');});\n\t\t});\n\t</script>\n\t<?php\n\t\techo '<p class=\"hide-if-no-js\"><a id=\"show-dismissed\" href=\"#\">'.__('Show hidden updates').'</a></p>';\n\t\techo '<ul id=\"dismissed-updates\" class=\"core-updates dismissed\">';\n\t\tforeach ( (array) $dismissed as $update) {\n\t\t\techo '<li>';\n\t\t\tlist_core_update( $update );\n\t\t\techo '</li>';\n\t\t}\n\t\techo '</ul>';\n\t}\n}\n\n/**\n * Display upgrade WordPress for downloading latest or upgrading automatically form.\n *\n * @since 2.7.0\n *\n * @global string $required_php_version\n * @global string $required_mysql_version\n */\nfunction core_upgrade_preamble() {\n\tglobal $required_php_version, $required_mysql_version;\n\n\t$wp_version = get_bloginfo( 'version' );\n\t$updates = get_core_updates();\n\n\tif ( !isset($updates[0]->response) || 'latest' == $updates[0]->response ) {\n\t\techo '<h2>';\n\t\t_e('You have the latest version of WordPress.');\n\n\t\tif ( wp_http_supports( array( 'ssl' ) ) ) {\n\t\t\trequire_once ABSPATH . 'wp-admin/includes/class-wp-upgrader.php';\n\t\t\t$upgrader = new WP_Automatic_Updater;\n\t\t\t$future_minor_update = (object) array(\n\t\t\t\t'current'       => $wp_version . '.1.next.minor',\n\t\t\t\t'version'       => $wp_version . '.1.next.minor',\n\t\t\t\t'php_version'   => $required_php_version,\n\t\t\t\t'mysql_version' => $required_mysql_version,\n\t\t\t);\n\t\t\t$should_auto_update = $upgrader->should_update( 'core', $future_minor_update, ABSPATH );\n\t\t\tif ( $should_auto_update )\n\t\t\t\techo ' ' . __( 'Future security updates will be applied automatically.' );\n\t\t}\n\t\techo '</h2>';\n\t} else {\n\t\techo '<div class=\"notice notice-warning\"><p>';\n\t\t_e('<strong>Important:</strong> before updating, please <a href=\"https://codex.wordpress.org/WordPress_Backups\">back up your database and files</a>. For help with updates, visit the <a href=\"https://codex.wordpress.org/Updating_WordPress\">Updating WordPress</a> Codex page.');\n\t\techo '</p></div>';\n\n\t\techo '<h2 class=\"response\">';\n\t\t_e( 'An updated version of WordPress is available.' );\n\t\techo '</h2>';\n\t}\n\n\tif ( isset( $updates[0] ) && $updates[0]->response == 'development' ) {\n\t\trequire_once ABSPATH . 'wp-admin/includes/class-wp-upgrader.php';\n\t\t$upgrader = new WP_Automatic_Updater;\n\t\tif ( wp_http_supports( 'ssl' ) && $upgrader->should_update( 'core', $updates[0], ABSPATH ) ) {\n\t\t\techo '<div class=\"updated inline\"><p>';\n\t\t\techo '<strong>' . __( 'BETA TESTERS:' ) . '</strong> ' . __( 'This site is set up to install updates of future beta versions automatically.' );\n\t\t\techo '</p></div>';\n\t\t}\n\t}\n\n\techo '<ul class=\"core-updates\">';\n\tforeach ( (array) $updates as $update ) {\n\t\techo '<li>';\n\t\tlist_core_update( $update );\n\t\techo '</li>';\n\t}\n\techo '</ul>';\n\t// Don't show the maintenance mode notice when we are only showing a single re-install option.\n\tif ( $updates && ( count( $updates ) > 1 || $updates[0]->response != 'latest' ) ) {\n\t\techo '<p>' . __( 'While your site is being updated, it will be in maintenance mode. As soon as your updates are complete, your site will return to normal.' ) . '</p>';\n\t} elseif ( ! $updates ) {\n\t\tlist( $normalized_version ) = explode( '-', $wp_version );\n\t\techo '<p>' . sprintf( __( '<a href=\"%s\">Learn more about WordPress %s</a>.' ), esc_url( self_admin_url( 'about.php' ) ), $normalized_version ) . '</p>';\n\t}\n\tdismissed_updates();\n}\n\nfunction list_plugin_updates() {\n\t$wp_version = get_bloginfo( 'version' );\n\t$cur_wp_version = preg_replace( '/-.*$/', '', $wp_version );\n\n\trequire_once(ABSPATH . 'wp-admin/includes/plugin-install.php');\n\t$plugins = get_plugin_updates();\n\tif ( empty( $plugins ) ) {\n\t\techo '<h2>' . __( 'Plugins' ) . '</h2>';\n\t\techo '<p>' . __( 'Your plugins are all up to date.' ) . '</p>';\n\t\treturn;\n\t}\n\t$form_action = 'update-core.php?action=do-plugin-upgrade';\n\n\t$core_updates = get_core_updates();\n\tif ( !isset($core_updates[0]->response) || 'latest' == $core_updates[0]->response || 'development' == $core_updates[0]->response || version_compare( $core_updates[0]->current, $cur_wp_version, '=') )\n\t\t$core_update_version = false;\n\telse\n\t\t$core_update_version = $core_updates[0]->current;\n\t?>\n<h2><?php _e( 'Plugins' ); ?></h2>\n<p><?php _e( 'The following plugins have new versions available. Check the ones you want to update and then click &#8220;Update Plugins&#8221;.' ); ?></p>\n<form method=\"post\" action=\"<?php echo esc_url( $form_action ); ?>\" name=\"upgrade-plugins\" class=\"upgrade\">\n<?php wp_nonce_field('upgrade-core'); ?>\n<p><input id=\"upgrade-plugins\" class=\"button\" type=\"submit\" value=\"<?php esc_attr_e('Update Plugins'); ?>\" name=\"upgrade\" /></p>\n<table class=\"widefat updates-table\" id=\"update-plugins-table\">\n\t<thead>\n\t<tr>\n\t\t<td class=\"manage-column check-column\"><input type=\"checkbox\" id=\"plugins-select-all\" /></td>\n\t\t<td class=\"manage-column\"><label for=\"plugins-select-all\"><?php _e( 'Select All' ); ?></label></td>\n\t</tr>\n\t</thead>\n\n\t<tbody class=\"plugins\">\n<?php\n\tforeach ( (array) $plugins as $plugin_file => $plugin_data ) {\n\t\t// Get plugin compat for running version of WordPress.\n\t\tif ( isset($plugin_data->update->tested) && version_compare($plugin_data->update->tested, $cur_wp_version, '>=') ) {\n\t\t\t$compat = '<br />' . sprintf(__('Compatibility with WordPress %1$s: 100%% (according to its author)'), $cur_wp_version);\n\t\t} elseif ( isset($plugin_data->update->compatibility->{$cur_wp_version}) ) {\n\t\t\t$compat = $plugin_data->update->compatibility->{$cur_wp_version};\n\t\t\t$compat = '<br />' . sprintf(__('Compatibility with WordPress %1$s: %2$d%% (%3$d \"works\" votes out of %4$d total)'), $cur_wp_version, $compat->percent, $compat->votes, $compat->total_votes);\n\t\t} else {\n\t\t\t$compat = '<br />' . sprintf(__('Compatibility with WordPress %1$s: Unknown'), $cur_wp_version);\n\t\t}\n\t\t// Get plugin compat for updated version of WordPress.\n\t\tif ( $core_update_version ) {\n\t\t\tif ( isset( $plugin_data->update->tested ) && version_compare( $plugin_data->update->tested, $core_update_version, '>=' ) ) {\n\t\t\t\t$compat .= '<br />' . sprintf( __( 'Compatibility with WordPress %1$s: 100%% (according to its author)' ), $core_update_version );\n\t\t\t} elseif ( isset( $plugin_data->update->compatibility->{$core_update_version} ) ) {\n\t\t\t\t$update_compat = $plugin_data->update->compatibility->{$core_update_version};\n\t\t\t\t$compat .= '<br />' . sprintf(__('Compatibility with WordPress %1$s: %2$d%% (%3$d \"works\" votes out of %4$d total)'), $core_update_version, $update_compat->percent, $update_compat->votes, $update_compat->total_votes);\n\t\t\t} else {\n\t\t\t\t$compat .= '<br />' . sprintf(__('Compatibility with WordPress %1$s: Unknown'), $core_update_version);\n\t\t\t}\n\t\t}\n\t\t// Get the upgrade notice for the new plugin version.\n\t\tif ( isset($plugin_data->update->upgrade_notice) ) {\n\t\t\t$upgrade_notice = '<br />' . strip_tags($plugin_data->update->upgrade_notice);\n\t\t} else {\n\t\t\t$upgrade_notice = '';\n\t\t}\n\n\t\t$details_url = self_admin_url('plugin-install.php?tab=plugin-information&plugin=' . $plugin_data->update->slug . '&section=changelog&TB_iframe=true&width=640&height=662');\n\t\t$details = sprintf(\n\t\t\t'<a href=\"%1$s\" class=\"thickbox open-plugin-details-modal\" aria-label=\"%2$s\">%3$s</a>',\n\t\t\tesc_url( $details_url ),\n\t\t\t/* translators: 1: plugin name, 2: version number */\n\t\t\tesc_attr( sprintf( __( 'View %1$s version %2$s details' ), $plugin_data->Name, $plugin_data->update->new_version ) ),\n\t\t\t/* translators: %s: plugin version */\n\t\t\tsprintf( __( 'View version %s details.' ), $plugin_data->update->new_version )\n\t\t);\n\n\t\t$checkbox_id = \"checkbox_\" . md5( $plugin_data->Name );\n\t\t?>\n\t\t<tr>\n\t\t\t<td class=\"check-column\">\n\t\t\t\t<input type=\"checkbox\" name=\"checked[]\" id=\"<?php echo $checkbox_id; ?>\" value=\"<?php echo esc_attr( $plugin_file ); ?>\" />\n\t\t\t\t<label for=\"<?php echo $checkbox_id; ?>\" class=\"screen-reader-text\"><?php\n\t\t\t\t\t/* translators: %s: plugin name */\n\t\t\t\t\tprintf( __( 'Select %s' ),\n\t\t\t\t\t\t$plugin_data->Name\n\t\t\t\t\t);\n\t\t\t\t?></label>\n\t\t\t</td>\n\t\t\t<td class=\"plugin-title\"><p>\n\t\t\t\t<strong><?php echo $plugin_data->Name; ?></strong>\n\t\t\t\t<?php\n\t\t\t\t\t/* translators: 1: plugin version, 2: new version */\n\t\t\t\t\tprintf( __( 'You have version %1$s installed. Update to %2$s.' ),\n\t\t\t\t\t\t$plugin_data->Version,\n\t\t\t\t\t\t$plugin_data->update->new_version\n\t\t\t\t\t);\n\t\t\t\t\techo ' ' . $details . $compat . $upgrade_notice;\n\t\t\t\t?>\n\t\t\t</p></td>\n\t\t</tr>\n\t\t<?php\n\t}\n?>\n\t</tbody>\n\n\t<tfoot>\n\t<tr>\n\t\t<td class=\"manage-column check-column\"><input type=\"checkbox\" id=\"plugins-select-all-2\" /></td>\n\t\t<td class=\"manage-column\"><label for=\"plugins-select-all-2\"><?php _e( 'Select All' ); ?></label></td>\n\t</tr>\n\t</tfoot>\n</table>\n<p><input id=\"upgrade-plugins-2\" class=\"button\" type=\"submit\" value=\"<?php esc_attr_e('Update Plugins'); ?>\" name=\"upgrade\" /></p>\n</form>\n<?php\n}\n\n/**\n * @since 2.9.0\n */\nfunction list_theme_updates() {\n\t$themes = get_theme_updates();\n\tif ( empty( $themes ) ) {\n\t\techo '<h2>' . __( 'Themes' ) . '</h2>';\n\t\techo '<p>' . __( 'Your themes are all up to date.' ) . '</p>';\n\t\treturn;\n\t}\n\n\t$form_action = 'update-core.php?action=do-theme-upgrade';\n?>\n<h2><?php _e( 'Themes' ); ?></h2>\n<p><?php _e( 'The following themes have new versions available. Check the ones you want to update and then click &#8220;Update Themes&#8221;.' ); ?></p>\n<p><?php printf( __( '<strong>Please Note:</strong> Any customizations you have made to theme files will be lost. Please consider using <a href=\"%s\">child themes</a> for modifications.' ), __( 'https://codex.wordpress.org/Child_Themes' ) ); ?></p>\n<form method=\"post\" action=\"<?php echo esc_url( $form_action ); ?>\" name=\"upgrade-themes\" class=\"upgrade\">\n<?php wp_nonce_field('upgrade-core'); ?>\n<p><input id=\"upgrade-themes\" class=\"button\" type=\"submit\" value=\"<?php esc_attr_e('Update Themes'); ?>\" name=\"upgrade\" /></p>\n<table class=\"widefat updates-table\" id=\"update-themes-table\">\n\t<thead>\n\t<tr>\n\t\t<td class=\"manage-column check-column\"><input type=\"checkbox\" id=\"themes-select-all\" /></td>\n\t\t<td class=\"manage-column\"><label for=\"themes-select-all\"><?php _e( 'Select All' ); ?></label></td>\n\t</tr>\n\t</thead>\n\n\t<tbody class=\"plugins\">\n<?php\n\tforeach ( $themes as $stylesheet => $theme ) {\n\t\t$checkbox_id = 'checkbox_' . md5( $theme->get( 'Name' ) );\n\t\t?>\n\t\t<tr>\n\t\t\t<td class=\"check-column\">\n\t\t\t\t<input type=\"checkbox\" name=\"checked[]\" id=\"<?php echo $checkbox_id; ?>\" value=\"<?php echo esc_attr( $stylesheet ); ?>\" />\n\t\t\t\t<label for=\"<?php echo $checkbox_id; ?>\" class=\"screen-reader-text\"><?php\n\t\t\t\t\t/* translators: %s: theme name */\n\t\t\t\t\tprintf( __( 'Select %s' ),\n\t\t\t\t\t\t$theme->display( 'Name' )\n\t\t\t\t\t);\n\t\t\t\t?></label>\n\t\t\t</td>\n\t\t\t<td class=\"plugin-title\"><p>\n\t\t\t\t<img src=\"<?php echo esc_url( $theme->get_screenshot() ); ?>\" width=\"85\" height=\"64\" class=\"updates-table-screenshot\" alt=\"\" />\n\t\t\t\t<strong><?php echo $theme->display( 'Name' ); ?></strong>\n\t\t\t\t<?php\n\t\t\t\t\t/* translators: 1: theme version, 2: new version */\n\t\t\t\t\tprintf( __( 'You have version %1$s installed. Update to %2$s.' ),\n\t\t\t\t\t\t$theme->display( 'Version' ),\n\t\t\t\t\t\t$theme->update['new_version']\n\t\t\t\t\t);\n\t\t\t\t?>\n\t\t\t</p></td>\n\t\t</tr>\n\t\t<?php\n\t}\n?>\n\t</tbody>\n\n\t<tfoot>\n\t<tr>\n\t\t<td class=\"manage-column check-column\"><input type=\"checkbox\" id=\"themes-select-all-2\" /></td>\n\t\t<td class=\"manage-column\"><label for=\"themes-select-all-2\"><?php _e( 'Select All' ); ?></label></td>\n\t</tr>\n\t</tfoot>\n</table>\n<p><input id=\"upgrade-themes-2\" class=\"button\" type=\"submit\" value=\"<?php esc_attr_e('Update Themes'); ?>\" name=\"upgrade\" /></p>\n</form>\n<?php\n}\n\n/**\n * @since 3.7.0\n */\nfunction list_translation_updates() {\n\t$updates = wp_get_translation_updates();\n\tif ( ! $updates ) {\n\t\tif ( 'en_US' != get_locale() ) {\n\t\t\techo '<h2>' . __( 'Translations' ) . '</h2>';\n\t\t\techo '<p>' . __( 'Your translations are all up to date.' ) . '</p>';\n\t\t}\n\t\treturn;\n\t}\n\n\t$form_action = 'update-core.php?action=do-translation-upgrade';\n\t?>\n\t<h2><?php _e( 'Translations' ); ?></h2>\n\t<form method=\"post\" action=\"<?php echo esc_url( $form_action ); ?>\" name=\"upgrade-translations\" class=\"upgrade\">\n\t\t<p><?php _e( 'New translations are available.' ); ?></p>\n\t\t<?php wp_nonce_field( 'upgrade-translations' ); ?>\n\t\t<p><input class=\"button\" type=\"submit\" value=\"<?php esc_attr_e( 'Update Translations' ); ?>\" name=\"upgrade\" /></p>\n\t</form>\n\t<?php\n}\n\n/**\n * Upgrade WordPress core display.\n *\n * @since 2.7.0\n *\n * @global WP_Filesystem_Base $wp_filesystem Subclass\n *\n * @param bool $reinstall\n */\nfunction do_core_upgrade( $reinstall = false ) {\n\tglobal $wp_filesystem;\n\n\tinclude_once( ABSPATH . 'wp-admin/includes/class-wp-upgrader.php' );\n\n\tif ( $reinstall )\n\t\t$url = 'update-core.php?action=do-core-reinstall';\n\telse\n\t\t$url = 'update-core.php?action=do-core-upgrade';\n\t$url = wp_nonce_url($url, 'upgrade-core');\n\n\t$version = isset( $_POST['version'] )? $_POST['version'] : false;\n\t$locale = isset( $_POST['locale'] )? $_POST['locale'] : 'en_US';\n\t$update = find_core_update( $version, $locale );\n\tif ( !$update )\n\t\treturn;\n\n\t// Allow relaxed file ownership writes for User-initiated upgrades when the API specifies\n\t// that it's safe to do so. This only happens when there are no new files to create.\n\t$allow_relaxed_file_ownership = ! $reinstall && isset( $update->new_files ) && ! $update->new_files;\n\n?>\n\t<div class=\"wrap\">\n\t<h1><?php _e( 'Update WordPress' ); ?></h1>\n<?php\n\n\tif ( false === ( $credentials = request_filesystem_credentials( $url, '', false, ABSPATH, array( 'version', 'locale' ), $allow_relaxed_file_ownership ) ) ) {\n\t\techo '</div>';\n\t\treturn;\n\t}\n\n\tif ( ! WP_Filesystem( $credentials, ABSPATH, $allow_relaxed_file_ownership ) ) {\n\t\t// Failed to connect, Error and request again\n\t\trequest_filesystem_credentials( $url, '', true, ABSPATH, array( 'version', 'locale' ), $allow_relaxed_file_ownership );\n\t\techo '</div>';\n\t\treturn;\n\t}\n\n\tif ( $wp_filesystem->errors->get_error_code() ) {\n\t\tforeach ( $wp_filesystem->errors->get_error_messages() as $message )\n\t\t\tshow_message($message);\n\t\techo '</div>';\n\t\treturn;\n\t}\n\n\tif ( $reinstall )\n\t\t$update->response = 'reinstall';\n\n\tadd_filter( 'update_feedback', 'show_message' );\n\n\t$upgrader = new Core_Upgrader();\n\t$result = $upgrader->upgrade( $update, array(\n\t\t'allow_relaxed_file_ownership' => $allow_relaxed_file_ownership\n\t) );\n\n\tif ( is_wp_error($result) ) {\n\t\tshow_message($result);\n\t\tif ( 'up_to_date' != $result->get_error_code() && 'locked' != $result->get_error_code() )\n\t\t\tshow_message( __('Installation Failed') );\n\t\techo '</div>';\n\t\treturn;\n\t}\n\n\tshow_message( __('WordPress updated successfully') );\n\tshow_message( '<span class=\"hide-if-no-js\">' . sprintf( __( 'Welcome to WordPress %1$s. You will be redirected to the About WordPress screen. If not, click <a href=\"%2$s\">here</a>.' ), $result, esc_url( self_admin_url( 'about.php?updated' ) ) ) . '</span>' );\n\tshow_message( '<span class=\"hide-if-js\">' . sprintf( __( 'Welcome to WordPress %1$s. <a href=\"%2$s\">Learn more</a>.' ), $result, esc_url( self_admin_url( 'about.php?updated' ) ) ) . '</span>' );\n\t?>\n\t</div>\n\t<script type=\"text/javascript\">\n\twindow.location = '<?php echo self_admin_url( 'about.php?updated' ); ?>';\n\t</script>\n\t<?php\n}\n\n/**\n * @since 2.7.0\n */\nfunction do_dismiss_core_update() {\n\t$version = isset( $_POST['version'] )? $_POST['version'] : false;\n\t$locale = isset( $_POST['locale'] )? $_POST['locale'] : 'en_US';\n\t$update = find_core_update( $version, $locale );\n\tif ( !$update )\n\t\treturn;\n\tdismiss_core_update( $update );\n\twp_redirect( wp_nonce_url('update-core.php?action=upgrade-core', 'upgrade-core') );\n\texit;\n}\n\n/**\n * @since 2.7.0\n */\nfunction do_undismiss_core_update() {\n\t$version = isset( $_POST['version'] )? $_POST['version'] : false;\n\t$locale = isset( $_POST['locale'] )? $_POST['locale'] : 'en_US';\n\t$update = find_core_update( $version, $locale );\n\tif ( !$update )\n\t\treturn;\n\tundismiss_core_update( $version, $locale );\n\twp_redirect( wp_nonce_url('update-core.php?action=upgrade-core', 'upgrade-core') );\n\texit;\n}\n\n$action = isset($_GET['action']) ? $_GET['action'] : 'upgrade-core';\n\n$upgrade_error = false;\nif ( ( 'do-theme-upgrade' == $action || ( 'do-plugin-upgrade' == $action && ! isset( $_GET['plugins'] ) ) )\n\t&& ! isset( $_POST['checked'] ) ) {\n\t$upgrade_error = $action == 'do-theme-upgrade' ? 'themes' : 'plugins';\n\t$action = 'upgrade-core';\n}\n\n$title = __('WordPress Updates');\n$parent_file = 'index.php';\n\n$updates_overview  = '<p>' . __( 'On this screen, you can update to the latest version of WordPress, as well as update your themes, plugins, and translations from the WordPress.org repositories.' ) . '</p>';\n$updates_overview .= '<p>' . __( 'If an update is available, you&#8127;ll see a notification appear in the Toolbar and navigation menu.' ) . ' ' . __( 'Keeping your site updated is important for security. It also makes the internet a safer place for you and your readers.' ) . '</p>';\n\nget_current_screen()->add_help_tab( array(\n\t'id'      => 'overview',\n\t'title'   => __( 'Overview' ),\n\t'content' => $updates_overview\n) );\n\n$updates_howto  = '<p>' . __( '<strong>WordPress</strong> &mdash; Updating your WordPress installation is a simple one-click procedure: just <strong>click on the &#8220;Update Now&#8221; button</strong> when you are notified that a new version is available.' ) . ' ' . __( 'In most cases, WordPress will automatically apply maintenance and security updates in the background for you.' ) . '</p>';\n$updates_howto .= '<p>' . __( '<strong>Themes and Plugins</strong> &mdash; To update individual themes or plugins from this screen, use the checkboxes to make your selection, then <strong>click on the appropriate &#8220;Update&#8221; button</strong>. To update all of your themes or plugins at once, you can check the box at the top of the section to select all before clicking the update button.' ) . '</p>';\n\nif ( 'en_US' != get_locale() ) {\n\t$updates_howto .= '<p>' . __( '<strong>Translations</strong> &mdash; The files translating WordPress into your language are updated for you whenever any other updates occur. But if these files are out of date, you can <strong>click the &#8220;Update Translations&#8221;</strong> button.' ) . '</p>';\n}\n\nget_current_screen()->add_help_tab( array(\n\t'id'      => 'how-to-update',\n\t'title'   => __( 'How to Update' ),\n\t'content' => $updates_howto\n) );\n\nget_current_screen()->set_help_sidebar(\n\t'<p><strong>' . __('For more information:') . '</strong></p>' .\n\t'<p>' . __( '<a href=\"https://codex.wordpress.org/Dashboard_Updates_Screen\">Documentation on Updating WordPress</a>' ) . '</p>' .\n\t'<p>' . __( '<a href=\"https://wordpress.org/support/\">Support Forums</a>' ) . '</p>'\n);\n\nif ( 'upgrade-core' == $action ) {\n\t// Force a update check when requested\n\t$force_check = ! empty( $_GET['force-check'] );\n\twp_version_check( array(), $force_check );\n\n\trequire_once(ABSPATH . 'wp-admin/admin-header.php');\n\t?>\n\t<div class=\"wrap\">\n\t<h1><?php _e( 'WordPress Updates' ); ?></h1>\n\t<?php\n\tif ( $upgrade_error ) {\n\t\techo '<div class=\"error\"><p>';\n\t\tif ( $upgrade_error == 'themes' )\n\t\t\t_e('Please select one or more themes to update.');\n\t\telse\n\t\t\t_e('Please select one or more plugins to update.');\n\t\techo '</p></div>';\n\t}\n\n\t$last_update_check = false;\n\t$current = get_site_transient( 'update_core' );\n\n\tif ( $current && isset ( $current->last_checked ) )\t{\n\t\t$last_update_check = $current->last_checked + get_option( 'gmt_offset' ) * HOUR_IN_SECONDS;\n\t}\n\n\techo '<p>';\n\t/* translators: %1 date, %2 time. */\n\tprintf( __( 'Last checked on %1$s at %2$s.' ), date_i18n( __( 'F j, Y' ), $last_update_check ), date_i18n( __( 'g:i a' ), $last_update_check ) );\n\techo ' &nbsp; <a class=\"button\" href=\"' . esc_url( self_admin_url('update-core.php?force-check=1') ) . '\">' . __( 'Check Again' ) . '</a>';\n\techo '</p>';\n\n\tif ( $core = current_user_can( 'update_core' ) )\n\t\tcore_upgrade_preamble();\n\tif ( $plugins = current_user_can( 'update_plugins' ) )\n\t\tlist_plugin_updates();\n\tif ( $themes = current_user_can( 'update_themes' ) )\n\t\tlist_theme_updates();\n\tif ( $core || $plugins || $themes )\n\t\tlist_translation_updates();\n\tunset( $core, $plugins, $themes );\n\t/**\n\t * Fires after the core, plugin, and theme update tables.\n\t *\n\t * @since 2.9.0\n\t */\n\tdo_action( 'core_upgrade_preamble' );\n\techo '</div>';\n\n\twp_localize_script( 'updates', '_wpUpdatesItemCounts', array(\n\t\t'totals'  => wp_get_update_data(),\n\t) );\n\n\tinclude(ABSPATH . 'wp-admin/admin-footer.php');\n\n} elseif ( 'do-core-upgrade' == $action || 'do-core-reinstall' == $action ) {\n\n\tif ( ! current_user_can( 'update_core' ) )\n\t\twp_die( __( 'Sorry, you are not allowed to update this site.' ) );\n\n\tcheck_admin_referer('upgrade-core');\n\n\t// Do the (un)dismiss actions before headers, so that they can redirect.\n\tif ( isset( $_POST['dismiss'] ) )\n\t\tdo_dismiss_core_update();\n\telseif ( isset( $_POST['undismiss'] ) )\n\t\tdo_undismiss_core_update();\n\n\trequire_once(ABSPATH . 'wp-admin/admin-header.php');\n\tif ( 'do-core-reinstall' == $action )\n\t\t$reinstall = true;\n\telse\n\t\t$reinstall = false;\n\n\tif ( isset( $_POST['upgrade'] ) )\n\t\tdo_core_upgrade($reinstall);\n\n\twp_localize_script( 'updates', '_wpUpdatesItemCounts', array(\n\t\t'totals'  => wp_get_update_data(),\n\t) );\n\n\tinclude(ABSPATH . 'wp-admin/admin-footer.php');\n\n} elseif ( 'do-plugin-upgrade' == $action ) {\n\n\tif ( ! current_user_can( 'update_plugins' ) )\n\t\twp_die( __( 'Sorry, you are not allowed to update this site.' ) );\n\n\tcheck_admin_referer('upgrade-core');\n\n\tif ( isset( $_GET['plugins'] ) ) {\n\t\t$plugins = explode( ',', $_GET['plugins'] );\n\t} elseif ( isset( $_POST['checked'] ) ) {\n\t\t$plugins = (array) $_POST['checked'];\n\t} else {\n\t\twp_redirect( admin_url('update-core.php') );\n\t\texit;\n\t}\n\n\t$url = 'update.php?action=update-selected&plugins=' . urlencode(implode(',', $plugins));\n\t$url = wp_nonce_url($url, 'bulk-update-plugins');\n\n\t$title = __('Update Plugins');\n\n\trequire_once(ABSPATH . 'wp-admin/admin-header.php');\n\techo '<div class=\"wrap\">';\n\techo '<h1>' . __( 'Update Plugins' ) . '</h1>';\n\techo '<iframe src=\"', $url, '\" style=\"width: 100%; height: 100%; min-height: 750px;\" frameborder=\"0\" title=\"' . esc_attr__( 'Update progress' ) . '\"></iframe>';\n\techo '</div>';\n\n\twp_localize_script( 'updates', '_wpUpdatesItemCounts', array(\n\t\t'totals'  => wp_get_update_data(),\n\t) );\n\n\tinclude(ABSPATH . 'wp-admin/admin-footer.php');\n\n} elseif ( 'do-theme-upgrade' == $action ) {\n\n\tif ( ! current_user_can( 'update_themes' ) )\n\t\twp_die( __( 'Sorry, you are not allowed to update this site.' ) );\n\n\tcheck_admin_referer('upgrade-core');\n\n\tif ( isset( $_GET['themes'] ) ) {\n\t\t$themes = explode( ',', $_GET['themes'] );\n\t} elseif ( isset( $_POST['checked'] ) ) {\n\t\t$themes = (array) $_POST['checked'];\n\t} else {\n\t\twp_redirect( admin_url('update-core.php') );\n\t\texit;\n\t}\n\n\t$url = 'update.php?action=update-selected-themes&themes=' . urlencode(implode(',', $themes));\n\t$url = wp_nonce_url($url, 'bulk-update-themes');\n\n\t$title = __('Update Themes');\n\n\trequire_once(ABSPATH . 'wp-admin/admin-header.php');\n\t?>\n\t<div class=\"wrap\">\n\t\t<h1><?php _e( 'Update Themes' ); ?></h1>\n\t\t<iframe src=\"<?php echo $url ?>\" style=\"width: 100%; height: 100%; min-height: 750px;\" frameborder=\"0\" title=\"<?php esc_attr_e( 'Update progress' ); ?>\"></iframe>\n\t</div>\n\t<?php\n\n\twp_localize_script( 'updates', '_wpUpdatesItemCounts', array(\n\t\t'totals'  => wp_get_update_data(),\n\t) );\n\n\tinclude(ABSPATH . 'wp-admin/admin-footer.php');\n\n} elseif ( 'do-translation-upgrade' == $action ) {\n\n\tif ( ! current_user_can( 'update_core' ) && ! current_user_can( 'update_plugins' ) && ! current_user_can( 'update_themes' ) )\n\t\twp_die( __( 'Sorry, you are not allowed to update this site.' ) );\n\n\tcheck_admin_referer( 'upgrade-translations' );\n\n\trequire_once( ABSPATH . 'wp-admin/admin-header.php' );\n\tinclude_once( ABSPATH . 'wp-admin/includes/class-wp-upgrader.php' );\n\n\t$url = 'update-core.php?action=do-translation-upgrade';\n\t$nonce = 'upgrade-translations';\n\t$title = __( 'Update Translations' );\n\t$context = WP_LANG_DIR;\n\n\t$upgrader = new Language_Pack_Upgrader( new Language_Pack_Upgrader_Skin( compact( 'url', 'nonce', 'title', 'context' ) ) );\n\t$result = $upgrader->bulk_upgrade();\n\n\twp_localize_script( 'updates', '_wpUpdatesItemCounts', array(\n\t\t'totals'  => wp_get_update_data(),\n\t) );\n\n\trequire_once( ABSPATH . 'wp-admin/admin-footer.php' );\n\n} else {\n\t/**\n\t * Fires for each custom update action on the WordPress Updates screen.\n\t *\n\t * The dynamic portion of the hook name, `$action`, refers to the\n\t * passed update action. The hook fires in lieu of all available\n\t * default update actions.\n\t *\n\t * @since 3.2.0\n\t */\n\tdo_action( \"update-core-custom_{$action}\" );\n}\n", "<?php\n/**\n * The WordPress version string\n *\n * @global string $wp_version\n */\n$wp_version = '4.8-alpha-39807';\n\n/**\n * Holds the WordPress DB revision, increments when changes are made to the WordPress DB schema.\n *\n * @global int $wp_db_version\n */\n$wp_db_version = 38590;\n\n/**\n * Holds the TinyMCE version\n *\n * @global string $tinymce_version\n */\n$tinymce_version = '4403-20160901';\n\n/**\n * Holds the required PHP version\n *\n * @global string $required_php_version\n */\n$required_php_version = '5.2.4';\n\n/**\n * Holds the required MySQL version\n *\n * @global string $required_mysql_version\n */\n$required_mysql_version = '5.0';\n"], "fixing_code": ["<?php\n/**\n * Update Core administration panel.\n *\n * @package WordPress\n * @subpackage Administration\n */\n\n/** WordPress Administration Bootstrap */\nrequire_once( dirname( __FILE__ ) . '/admin.php' );\n\nwp_enqueue_style( 'plugin-install' );\nwp_enqueue_script( 'plugin-install' );\nwp_enqueue_script( 'updates' );\nadd_thickbox();\n\nif ( is_multisite() && ! is_network_admin() ) {\n\twp_redirect( network_admin_url( 'update-core.php' ) );\n\texit();\n}\n\nif ( ! current_user_can( 'update_core' ) && ! current_user_can( 'update_themes' ) && ! current_user_can( 'update_plugins' ) )\n\twp_die( __( 'Sorry, you are not allowed to update this site.' ) );\n\n/**\n *\n * @global string $wp_local_package\n * @global wpdb   $wpdb\n *\n * @staticvar bool $first_pass\n *\n * @param object $update\n */\nfunction list_core_update( $update ) {\n \tglobal $wp_local_package, $wpdb;\n  \tstatic $first_pass = true;\n\n\t$wp_version = get_bloginfo( 'version' );\n\n \tif ( 'en_US' == $update->locale && 'en_US' == get_locale() )\n \t\t$version_string = $update->current;\n \t// If the only available update is a partial builds, it doesn't need a language-specific version string.\n \telseif ( 'en_US' == $update->locale && $update->packages->partial && $wp_version == $update->partial_version && ( $updates = get_core_updates() ) && 1 == count( $updates ) )\n \t\t$version_string = $update->current;\n \telse\n \t\t$version_string = sprintf( \"%s&ndash;<strong>%s</strong>\", $update->current, $update->locale );\n\n\t$current = false;\n\tif ( !isset($update->response) || 'latest' == $update->response )\n\t\t$current = true;\n\t$submit = __('Update Now');\n\t$form_action = 'update-core.php?action=do-core-upgrade';\n\t$php_version    = phpversion();\n\t$mysql_version  = $wpdb->db_version();\n\t$show_buttons = true;\n\tif ( 'development' == $update->response ) {\n\t\t$message = __('You are using a development version of WordPress. You can update to the latest nightly build automatically:');\n\t} else {\n\t\tif ( $current ) {\n\t\t\t$message = sprintf( __( 'If you need to re-install version %s, you can do so here:' ), $version_string );\n\t\t\t$submit = __('Re-install Now');\n\t\t\t$form_action = 'update-core.php?action=do-core-reinstall';\n\t\t} else {\n\t\t\t$php_compat     = version_compare( $php_version, $update->php_version, '>=' );\n\t\t\tif ( file_exists( WP_CONTENT_DIR . '/db.php' ) && empty( $wpdb->is_mysql ) )\n\t\t\t\t$mysql_compat = true;\n\t\t\telse\n\t\t\t\t$mysql_compat = version_compare( $mysql_version, $update->mysql_version, '>=' );\n\n\t\t\tif ( !$mysql_compat && !$php_compat )\n\t\t\t\t/* translators: 1: WordPress version number, 2: Minimum required PHP version number, 3: Minimum required MySQL version number, 4: Current PHP version number, 5: Current MySQL version number */\n\t\t\t\t$message = sprintf( __('You cannot update because <a href=\"https://codex.wordpress.org/Version_%1$s\">WordPress %1$s</a> requires PHP version %2$s or higher and MySQL version %3$s or higher. You are running PHP version %4$s and MySQL version %5$s.'), $update->current, $update->php_version, $update->mysql_version, $php_version, $mysql_version );\n\t\t\telseif ( !$php_compat )\n\t\t\t\t/* translators: 1: WordPress version number, 2: Minimum required PHP version number, 3: Current PHP version number */\n\t\t\t\t$message = sprintf( __('You cannot update because <a href=\"https://codex.wordpress.org/Version_%1$s\">WordPress %1$s</a> requires PHP version %2$s or higher. You are running version %3$s.'), $update->current, $update->php_version, $php_version );\n\t\t\telseif ( !$mysql_compat )\n\t\t\t\t/* translators: 1: WordPress version number, 2: Minimum required MySQL version number, 3: Current MySQL version number */\n\t\t\t\t$message = sprintf( __('You cannot update because <a href=\"https://codex.wordpress.org/Version_%1$s\">WordPress %1$s</a> requires MySQL version %2$s or higher. You are running version %3$s.'), $update->current, $update->mysql_version, $mysql_version );\n\t\t\telse\n\t\t\t\t/* translators: 1: WordPress version number, 2: WordPress version number including locale if necessary */\n\t\t\t\t$message = \tsprintf(__('You can update to <a href=\"https://codex.wordpress.org/Version_%1$s\">WordPress %2$s</a> automatically:'), $update->current, $version_string);\n\t\t\tif ( !$mysql_compat || !$php_compat )\n\t\t\t\t$show_buttons = false;\n\t\t}\n\t}\n\n\techo '<p>';\n\techo $message;\n\techo '</p>';\n\techo '<form method=\"post\" action=\"' . $form_action . '\" name=\"upgrade\" class=\"upgrade\">';\n\twp_nonce_field('upgrade-core');\n\techo '<p>';\n\techo '<input name=\"version\" value=\"'. esc_attr($update->current) .'\" type=\"hidden\"/>';\n\techo '<input name=\"locale\" value=\"'. esc_attr($update->locale) .'\" type=\"hidden\"/>';\n\tif ( $show_buttons ) {\n\t\tif ( $first_pass ) {\n\t\t\tsubmit_button( $submit, $current ? '' : 'primary regular', 'upgrade', false );\n\t\t\t$first_pass = false;\n\t\t} else {\n\t\t\tsubmit_button( $submit, '', 'upgrade', false );\n\t\t}\n\t}\n\tif ( 'en_US' != $update->locale )\n\t\tif ( !isset( $update->dismissed ) || !$update->dismissed )\n\t\t\tsubmit_button( __( 'Hide this update' ), '', 'dismiss', false );\n\t\telse\n\t\t\tsubmit_button( __( 'Bring back this update' ), '', 'undismiss', false );\n\techo '</p>';\n\tif ( 'en_US' != $update->locale && ( !isset($wp_local_package) || $wp_local_package != $update->locale ) )\n\t    echo '<p class=\"hint\">'.__('This localized version contains both the translation and various other localization fixes. You can skip upgrading if you want to keep your current translation.').'</p>';\n\t// Partial builds don't need language-specific warnings.\n\telseif ( 'en_US' == $update->locale && get_locale() != 'en_US' && ( ! $update->packages->partial && $wp_version == $update->partial_version ) ) {\n\t    echo '<p class=\"hint\">'.sprintf( __('You are about to install WordPress %s <strong>in English (US).</strong> There is a chance this update will break your translation. You may prefer to wait for the localized version to be released.'), $update->response != 'development' ? $update->current : '' ).'</p>';\n\t}\n\techo '</form>';\n\n}\n\n/**\n * @since 2.7.0\n */\nfunction dismissed_updates() {\n\t$dismissed = get_core_updates( array( 'dismissed' => true, 'available' => false ) );\n\tif ( $dismissed ) {\n\n\t\t$show_text = esc_js(__('Show hidden updates'));\n\t\t$hide_text = esc_js(__('Hide hidden updates'));\n\t?>\n\t<script type=\"text/javascript\">\n\n\t\tjQuery(function($) {\n\t\t\t$('dismissed-updates').show();\n\t\t\t$('#show-dismissed').toggle(function(){$(this).text('<?php echo $hide_text; ?>');}, function() {$(this).text('<?php echo $show_text; ?>')});\n\t\t\t$('#show-dismissed').click(function() { $('#dismissed-updates').toggle('slow');});\n\t\t});\n\t</script>\n\t<?php\n\t\techo '<p class=\"hide-if-no-js\"><a id=\"show-dismissed\" href=\"#\">'.__('Show hidden updates').'</a></p>';\n\t\techo '<ul id=\"dismissed-updates\" class=\"core-updates dismissed\">';\n\t\tforeach ( (array) $dismissed as $update) {\n\t\t\techo '<li>';\n\t\t\tlist_core_update( $update );\n\t\t\techo '</li>';\n\t\t}\n\t\techo '</ul>';\n\t}\n}\n\n/**\n * Display upgrade WordPress for downloading latest or upgrading automatically form.\n *\n * @since 2.7.0\n *\n * @global string $required_php_version\n * @global string $required_mysql_version\n */\nfunction core_upgrade_preamble() {\n\tglobal $required_php_version, $required_mysql_version;\n\n\t$wp_version = get_bloginfo( 'version' );\n\t$updates = get_core_updates();\n\n\tif ( !isset($updates[0]->response) || 'latest' == $updates[0]->response ) {\n\t\techo '<h2>';\n\t\t_e('You have the latest version of WordPress.');\n\n\t\tif ( wp_http_supports( array( 'ssl' ) ) ) {\n\t\t\trequire_once ABSPATH . 'wp-admin/includes/class-wp-upgrader.php';\n\t\t\t$upgrader = new WP_Automatic_Updater;\n\t\t\t$future_minor_update = (object) array(\n\t\t\t\t'current'       => $wp_version . '.1.next.minor',\n\t\t\t\t'version'       => $wp_version . '.1.next.minor',\n\t\t\t\t'php_version'   => $required_php_version,\n\t\t\t\t'mysql_version' => $required_mysql_version,\n\t\t\t);\n\t\t\t$should_auto_update = $upgrader->should_update( 'core', $future_minor_update, ABSPATH );\n\t\t\tif ( $should_auto_update )\n\t\t\t\techo ' ' . __( 'Future security updates will be applied automatically.' );\n\t\t}\n\t\techo '</h2>';\n\t} else {\n\t\techo '<div class=\"notice notice-warning\"><p>';\n\t\t_e('<strong>Important:</strong> before updating, please <a href=\"https://codex.wordpress.org/WordPress_Backups\">back up your database and files</a>. For help with updates, visit the <a href=\"https://codex.wordpress.org/Updating_WordPress\">Updating WordPress</a> Codex page.');\n\t\techo '</p></div>';\n\n\t\techo '<h2 class=\"response\">';\n\t\t_e( 'An updated version of WordPress is available.' );\n\t\techo '</h2>';\n\t}\n\n\tif ( isset( $updates[0] ) && $updates[0]->response == 'development' ) {\n\t\trequire_once ABSPATH . 'wp-admin/includes/class-wp-upgrader.php';\n\t\t$upgrader = new WP_Automatic_Updater;\n\t\tif ( wp_http_supports( 'ssl' ) && $upgrader->should_update( 'core', $updates[0], ABSPATH ) ) {\n\t\t\techo '<div class=\"updated inline\"><p>';\n\t\t\techo '<strong>' . __( 'BETA TESTERS:' ) . '</strong> ' . __( 'This site is set up to install updates of future beta versions automatically.' );\n\t\t\techo '</p></div>';\n\t\t}\n\t}\n\n\techo '<ul class=\"core-updates\">';\n\tforeach ( (array) $updates as $update ) {\n\t\techo '<li>';\n\t\tlist_core_update( $update );\n\t\techo '</li>';\n\t}\n\techo '</ul>';\n\t// Don't show the maintenance mode notice when we are only showing a single re-install option.\n\tif ( $updates && ( count( $updates ) > 1 || $updates[0]->response != 'latest' ) ) {\n\t\techo '<p>' . __( 'While your site is being updated, it will be in maintenance mode. As soon as your updates are complete, your site will return to normal.' ) . '</p>';\n\t} elseif ( ! $updates ) {\n\t\tlist( $normalized_version ) = explode( '-', $wp_version );\n\t\techo '<p>' . sprintf( __( '<a href=\"%s\">Learn more about WordPress %s</a>.' ), esc_url( self_admin_url( 'about.php' ) ), $normalized_version ) . '</p>';\n\t}\n\tdismissed_updates();\n}\n\nfunction list_plugin_updates() {\n\t$wp_version = get_bloginfo( 'version' );\n\t$cur_wp_version = preg_replace( '/-.*$/', '', $wp_version );\n\n\trequire_once(ABSPATH . 'wp-admin/includes/plugin-install.php');\n\t$plugins = get_plugin_updates();\n\tif ( empty( $plugins ) ) {\n\t\techo '<h2>' . __( 'Plugins' ) . '</h2>';\n\t\techo '<p>' . __( 'Your plugins are all up to date.' ) . '</p>';\n\t\treturn;\n\t}\n\t$form_action = 'update-core.php?action=do-plugin-upgrade';\n\n\t$core_updates = get_core_updates();\n\tif ( !isset($core_updates[0]->response) || 'latest' == $core_updates[0]->response || 'development' == $core_updates[0]->response || version_compare( $core_updates[0]->current, $cur_wp_version, '=') )\n\t\t$core_update_version = false;\n\telse\n\t\t$core_update_version = $core_updates[0]->current;\n\t?>\n<h2><?php _e( 'Plugins' ); ?></h2>\n<p><?php _e( 'The following plugins have new versions available. Check the ones you want to update and then click &#8220;Update Plugins&#8221;.' ); ?></p>\n<form method=\"post\" action=\"<?php echo esc_url( $form_action ); ?>\" name=\"upgrade-plugins\" class=\"upgrade\">\n<?php wp_nonce_field('upgrade-core'); ?>\n<p><input id=\"upgrade-plugins\" class=\"button\" type=\"submit\" value=\"<?php esc_attr_e('Update Plugins'); ?>\" name=\"upgrade\" /></p>\n<table class=\"widefat updates-table\" id=\"update-plugins-table\">\n\t<thead>\n\t<tr>\n\t\t<td class=\"manage-column check-column\"><input type=\"checkbox\" id=\"plugins-select-all\" /></td>\n\t\t<td class=\"manage-column\"><label for=\"plugins-select-all\"><?php _e( 'Select All' ); ?></label></td>\n\t</tr>\n\t</thead>\n\n\t<tbody class=\"plugins\">\n<?php\n\tforeach ( (array) $plugins as $plugin_file => $plugin_data ) {\n\t\t$plugin_data = (object) _get_plugin_data_markup_translate( $plugin_file, (array) $plugin_data, false, true );\n\n\t\t// Get plugin compat for running version of WordPress.\n\t\tif ( isset($plugin_data->update->tested) && version_compare($plugin_data->update->tested, $cur_wp_version, '>=') ) {\n\t\t\t$compat = '<br />' . sprintf(__('Compatibility with WordPress %1$s: 100%% (according to its author)'), $cur_wp_version);\n\t\t} elseif ( isset($plugin_data->update->compatibility->{$cur_wp_version}) ) {\n\t\t\t$compat = $plugin_data->update->compatibility->{$cur_wp_version};\n\t\t\t$compat = '<br />' . sprintf(__('Compatibility with WordPress %1$s: %2$d%% (%3$d \"works\" votes out of %4$d total)'), $cur_wp_version, $compat->percent, $compat->votes, $compat->total_votes);\n\t\t} else {\n\t\t\t$compat = '<br />' . sprintf(__('Compatibility with WordPress %1$s: Unknown'), $cur_wp_version);\n\t\t}\n\t\t// Get plugin compat for updated version of WordPress.\n\t\tif ( $core_update_version ) {\n\t\t\tif ( isset( $plugin_data->update->tested ) && version_compare( $plugin_data->update->tested, $core_update_version, '>=' ) ) {\n\t\t\t\t$compat .= '<br />' . sprintf( __( 'Compatibility with WordPress %1$s: 100%% (according to its author)' ), $core_update_version );\n\t\t\t} elseif ( isset( $plugin_data->update->compatibility->{$core_update_version} ) ) {\n\t\t\t\t$update_compat = $plugin_data->update->compatibility->{$core_update_version};\n\t\t\t\t$compat .= '<br />' . sprintf(__('Compatibility with WordPress %1$s: %2$d%% (%3$d \"works\" votes out of %4$d total)'), $core_update_version, $update_compat->percent, $update_compat->votes, $update_compat->total_votes);\n\t\t\t} else {\n\t\t\t\t$compat .= '<br />' . sprintf(__('Compatibility with WordPress %1$s: Unknown'), $core_update_version);\n\t\t\t}\n\t\t}\n\t\t// Get the upgrade notice for the new plugin version.\n\t\tif ( isset($plugin_data->update->upgrade_notice) ) {\n\t\t\t$upgrade_notice = '<br />' . strip_tags($plugin_data->update->upgrade_notice);\n\t\t} else {\n\t\t\t$upgrade_notice = '';\n\t\t}\n\n\t\t$details_url = self_admin_url('plugin-install.php?tab=plugin-information&plugin=' . $plugin_data->update->slug . '&section=changelog&TB_iframe=true&width=640&height=662');\n\t\t$details = sprintf(\n\t\t\t'<a href=\"%1$s\" class=\"thickbox open-plugin-details-modal\" aria-label=\"%2$s\">%3$s</a>',\n\t\t\tesc_url( $details_url ),\n\t\t\t/* translators: 1: plugin name, 2: version number */\n\t\t\tesc_attr( sprintf( __( 'View %1$s version %2$s details' ), $plugin_data->Name, $plugin_data->update->new_version ) ),\n\t\t\t/* translators: %s: plugin version */\n\t\t\tsprintf( __( 'View version %s details.' ), $plugin_data->update->new_version )\n\t\t);\n\n\t\t$checkbox_id = \"checkbox_\" . md5( $plugin_data->Name );\n\t\t?>\n\t\t<tr>\n\t\t\t<td class=\"check-column\">\n\t\t\t\t<input type=\"checkbox\" name=\"checked[]\" id=\"<?php echo $checkbox_id; ?>\" value=\"<?php echo esc_attr( $plugin_file ); ?>\" />\n\t\t\t\t<label for=\"<?php echo $checkbox_id; ?>\" class=\"screen-reader-text\"><?php\n\t\t\t\t\t/* translators: %s: plugin name */\n\t\t\t\t\tprintf( __( 'Select %s' ),\n\t\t\t\t\t\t$plugin_data->Name\n\t\t\t\t\t);\n\t\t\t\t?></label>\n\t\t\t</td>\n\t\t\t<td class=\"plugin-title\"><p>\n\t\t\t\t<strong><?php echo $plugin_data->Name; ?></strong>\n\t\t\t\t<?php\n\t\t\t\t\t/* translators: 1: plugin version, 2: new version */\n\t\t\t\t\tprintf( __( 'You have version %1$s installed. Update to %2$s.' ),\n\t\t\t\t\t\t$plugin_data->Version,\n\t\t\t\t\t\t$plugin_data->update->new_version\n\t\t\t\t\t);\n\t\t\t\t\techo ' ' . $details . $compat . $upgrade_notice;\n\t\t\t\t?>\n\t\t\t</p></td>\n\t\t</tr>\n\t\t<?php\n\t}\n?>\n\t</tbody>\n\n\t<tfoot>\n\t<tr>\n\t\t<td class=\"manage-column check-column\"><input type=\"checkbox\" id=\"plugins-select-all-2\" /></td>\n\t\t<td class=\"manage-column\"><label for=\"plugins-select-all-2\"><?php _e( 'Select All' ); ?></label></td>\n\t</tr>\n\t</tfoot>\n</table>\n<p><input id=\"upgrade-plugins-2\" class=\"button\" type=\"submit\" value=\"<?php esc_attr_e('Update Plugins'); ?>\" name=\"upgrade\" /></p>\n</form>\n<?php\n}\n\n/**\n * @since 2.9.0\n */\nfunction list_theme_updates() {\n\t$themes = get_theme_updates();\n\tif ( empty( $themes ) ) {\n\t\techo '<h2>' . __( 'Themes' ) . '</h2>';\n\t\techo '<p>' . __( 'Your themes are all up to date.' ) . '</p>';\n\t\treturn;\n\t}\n\n\t$form_action = 'update-core.php?action=do-theme-upgrade';\n?>\n<h2><?php _e( 'Themes' ); ?></h2>\n<p><?php _e( 'The following themes have new versions available. Check the ones you want to update and then click &#8220;Update Themes&#8221;.' ); ?></p>\n<p><?php printf( __( '<strong>Please Note:</strong> Any customizations you have made to theme files will be lost. Please consider using <a href=\"%s\">child themes</a> for modifications.' ), __( 'https://codex.wordpress.org/Child_Themes' ) ); ?></p>\n<form method=\"post\" action=\"<?php echo esc_url( $form_action ); ?>\" name=\"upgrade-themes\" class=\"upgrade\">\n<?php wp_nonce_field('upgrade-core'); ?>\n<p><input id=\"upgrade-themes\" class=\"button\" type=\"submit\" value=\"<?php esc_attr_e('Update Themes'); ?>\" name=\"upgrade\" /></p>\n<table class=\"widefat updates-table\" id=\"update-themes-table\">\n\t<thead>\n\t<tr>\n\t\t<td class=\"manage-column check-column\"><input type=\"checkbox\" id=\"themes-select-all\" /></td>\n\t\t<td class=\"manage-column\"><label for=\"themes-select-all\"><?php _e( 'Select All' ); ?></label></td>\n\t</tr>\n\t</thead>\n\n\t<tbody class=\"plugins\">\n<?php\n\tforeach ( $themes as $stylesheet => $theme ) {\n\t\t$checkbox_id = 'checkbox_' . md5( $theme->get( 'Name' ) );\n\t\t?>\n\t\t<tr>\n\t\t\t<td class=\"check-column\">\n\t\t\t\t<input type=\"checkbox\" name=\"checked[]\" id=\"<?php echo $checkbox_id; ?>\" value=\"<?php echo esc_attr( $stylesheet ); ?>\" />\n\t\t\t\t<label for=\"<?php echo $checkbox_id; ?>\" class=\"screen-reader-text\"><?php\n\t\t\t\t\t/* translators: %s: theme name */\n\t\t\t\t\tprintf( __( 'Select %s' ),\n\t\t\t\t\t\t$theme->display( 'Name' )\n\t\t\t\t\t);\n\t\t\t\t?></label>\n\t\t\t</td>\n\t\t\t<td class=\"plugin-title\"><p>\n\t\t\t\t<img src=\"<?php echo esc_url( $theme->get_screenshot() ); ?>\" width=\"85\" height=\"64\" class=\"updates-table-screenshot\" alt=\"\" />\n\t\t\t\t<strong><?php echo $theme->display( 'Name' ); ?></strong>\n\t\t\t\t<?php\n\t\t\t\t\t/* translators: 1: theme version, 2: new version */\n\t\t\t\t\tprintf( __( 'You have version %1$s installed. Update to %2$s.' ),\n\t\t\t\t\t\t$theme->display( 'Version' ),\n\t\t\t\t\t\t$theme->update['new_version']\n\t\t\t\t\t);\n\t\t\t\t?>\n\t\t\t</p></td>\n\t\t</tr>\n\t\t<?php\n\t}\n?>\n\t</tbody>\n\n\t<tfoot>\n\t<tr>\n\t\t<td class=\"manage-column check-column\"><input type=\"checkbox\" id=\"themes-select-all-2\" /></td>\n\t\t<td class=\"manage-column\"><label for=\"themes-select-all-2\"><?php _e( 'Select All' ); ?></label></td>\n\t</tr>\n\t</tfoot>\n</table>\n<p><input id=\"upgrade-themes-2\" class=\"button\" type=\"submit\" value=\"<?php esc_attr_e('Update Themes'); ?>\" name=\"upgrade\" /></p>\n</form>\n<?php\n}\n\n/**\n * @since 3.7.0\n */\nfunction list_translation_updates() {\n\t$updates = wp_get_translation_updates();\n\tif ( ! $updates ) {\n\t\tif ( 'en_US' != get_locale() ) {\n\t\t\techo '<h2>' . __( 'Translations' ) . '</h2>';\n\t\t\techo '<p>' . __( 'Your translations are all up to date.' ) . '</p>';\n\t\t}\n\t\treturn;\n\t}\n\n\t$form_action = 'update-core.php?action=do-translation-upgrade';\n\t?>\n\t<h2><?php _e( 'Translations' ); ?></h2>\n\t<form method=\"post\" action=\"<?php echo esc_url( $form_action ); ?>\" name=\"upgrade-translations\" class=\"upgrade\">\n\t\t<p><?php _e( 'New translations are available.' ); ?></p>\n\t\t<?php wp_nonce_field( 'upgrade-translations' ); ?>\n\t\t<p><input class=\"button\" type=\"submit\" value=\"<?php esc_attr_e( 'Update Translations' ); ?>\" name=\"upgrade\" /></p>\n\t</form>\n\t<?php\n}\n\n/**\n * Upgrade WordPress core display.\n *\n * @since 2.7.0\n *\n * @global WP_Filesystem_Base $wp_filesystem Subclass\n *\n * @param bool $reinstall\n */\nfunction do_core_upgrade( $reinstall = false ) {\n\tglobal $wp_filesystem;\n\n\tinclude_once( ABSPATH . 'wp-admin/includes/class-wp-upgrader.php' );\n\n\tif ( $reinstall )\n\t\t$url = 'update-core.php?action=do-core-reinstall';\n\telse\n\t\t$url = 'update-core.php?action=do-core-upgrade';\n\t$url = wp_nonce_url($url, 'upgrade-core');\n\n\t$version = isset( $_POST['version'] )? $_POST['version'] : false;\n\t$locale = isset( $_POST['locale'] )? $_POST['locale'] : 'en_US';\n\t$update = find_core_update( $version, $locale );\n\tif ( !$update )\n\t\treturn;\n\n\t// Allow relaxed file ownership writes for User-initiated upgrades when the API specifies\n\t// that it's safe to do so. This only happens when there are no new files to create.\n\t$allow_relaxed_file_ownership = ! $reinstall && isset( $update->new_files ) && ! $update->new_files;\n\n?>\n\t<div class=\"wrap\">\n\t<h1><?php _e( 'Update WordPress' ); ?></h1>\n<?php\n\n\tif ( false === ( $credentials = request_filesystem_credentials( $url, '', false, ABSPATH, array( 'version', 'locale' ), $allow_relaxed_file_ownership ) ) ) {\n\t\techo '</div>';\n\t\treturn;\n\t}\n\n\tif ( ! WP_Filesystem( $credentials, ABSPATH, $allow_relaxed_file_ownership ) ) {\n\t\t// Failed to connect, Error and request again\n\t\trequest_filesystem_credentials( $url, '', true, ABSPATH, array( 'version', 'locale' ), $allow_relaxed_file_ownership );\n\t\techo '</div>';\n\t\treturn;\n\t}\n\n\tif ( $wp_filesystem->errors->get_error_code() ) {\n\t\tforeach ( $wp_filesystem->errors->get_error_messages() as $message )\n\t\t\tshow_message($message);\n\t\techo '</div>';\n\t\treturn;\n\t}\n\n\tif ( $reinstall )\n\t\t$update->response = 'reinstall';\n\n\tadd_filter( 'update_feedback', 'show_message' );\n\n\t$upgrader = new Core_Upgrader();\n\t$result = $upgrader->upgrade( $update, array(\n\t\t'allow_relaxed_file_ownership' => $allow_relaxed_file_ownership\n\t) );\n\n\tif ( is_wp_error($result) ) {\n\t\tshow_message($result);\n\t\tif ( 'up_to_date' != $result->get_error_code() && 'locked' != $result->get_error_code() )\n\t\t\tshow_message( __('Installation Failed') );\n\t\techo '</div>';\n\t\treturn;\n\t}\n\n\tshow_message( __('WordPress updated successfully') );\n\tshow_message( '<span class=\"hide-if-no-js\">' . sprintf( __( 'Welcome to WordPress %1$s. You will be redirected to the About WordPress screen. If not, click <a href=\"%2$s\">here</a>.' ), $result, esc_url( self_admin_url( 'about.php?updated' ) ) ) . '</span>' );\n\tshow_message( '<span class=\"hide-if-js\">' . sprintf( __( 'Welcome to WordPress %1$s. <a href=\"%2$s\">Learn more</a>.' ), $result, esc_url( self_admin_url( 'about.php?updated' ) ) ) . '</span>' );\n\t?>\n\t</div>\n\t<script type=\"text/javascript\">\n\twindow.location = '<?php echo self_admin_url( 'about.php?updated' ); ?>';\n\t</script>\n\t<?php\n}\n\n/**\n * @since 2.7.0\n */\nfunction do_dismiss_core_update() {\n\t$version = isset( $_POST['version'] )? $_POST['version'] : false;\n\t$locale = isset( $_POST['locale'] )? $_POST['locale'] : 'en_US';\n\t$update = find_core_update( $version, $locale );\n\tif ( !$update )\n\t\treturn;\n\tdismiss_core_update( $update );\n\twp_redirect( wp_nonce_url('update-core.php?action=upgrade-core', 'upgrade-core') );\n\texit;\n}\n\n/**\n * @since 2.7.0\n */\nfunction do_undismiss_core_update() {\n\t$version = isset( $_POST['version'] )? $_POST['version'] : false;\n\t$locale = isset( $_POST['locale'] )? $_POST['locale'] : 'en_US';\n\t$update = find_core_update( $version, $locale );\n\tif ( !$update )\n\t\treturn;\n\tundismiss_core_update( $version, $locale );\n\twp_redirect( wp_nonce_url('update-core.php?action=upgrade-core', 'upgrade-core') );\n\texit;\n}\n\n$action = isset($_GET['action']) ? $_GET['action'] : 'upgrade-core';\n\n$upgrade_error = false;\nif ( ( 'do-theme-upgrade' == $action || ( 'do-plugin-upgrade' == $action && ! isset( $_GET['plugins'] ) ) )\n\t&& ! isset( $_POST['checked'] ) ) {\n\t$upgrade_error = $action == 'do-theme-upgrade' ? 'themes' : 'plugins';\n\t$action = 'upgrade-core';\n}\n\n$title = __('WordPress Updates');\n$parent_file = 'index.php';\n\n$updates_overview  = '<p>' . __( 'On this screen, you can update to the latest version of WordPress, as well as update your themes, plugins, and translations from the WordPress.org repositories.' ) . '</p>';\n$updates_overview .= '<p>' . __( 'If an update is available, you&#8127;ll see a notification appear in the Toolbar and navigation menu.' ) . ' ' . __( 'Keeping your site updated is important for security. It also makes the internet a safer place for you and your readers.' ) . '</p>';\n\nget_current_screen()->add_help_tab( array(\n\t'id'      => 'overview',\n\t'title'   => __( 'Overview' ),\n\t'content' => $updates_overview\n) );\n\n$updates_howto  = '<p>' . __( '<strong>WordPress</strong> &mdash; Updating your WordPress installation is a simple one-click procedure: just <strong>click on the &#8220;Update Now&#8221; button</strong> when you are notified that a new version is available.' ) . ' ' . __( 'In most cases, WordPress will automatically apply maintenance and security updates in the background for you.' ) . '</p>';\n$updates_howto .= '<p>' . __( '<strong>Themes and Plugins</strong> &mdash; To update individual themes or plugins from this screen, use the checkboxes to make your selection, then <strong>click on the appropriate &#8220;Update&#8221; button</strong>. To update all of your themes or plugins at once, you can check the box at the top of the section to select all before clicking the update button.' ) . '</p>';\n\nif ( 'en_US' != get_locale() ) {\n\t$updates_howto .= '<p>' . __( '<strong>Translations</strong> &mdash; The files translating WordPress into your language are updated for you whenever any other updates occur. But if these files are out of date, you can <strong>click the &#8220;Update Translations&#8221;</strong> button.' ) . '</p>';\n}\n\nget_current_screen()->add_help_tab( array(\n\t'id'      => 'how-to-update',\n\t'title'   => __( 'How to Update' ),\n\t'content' => $updates_howto\n) );\n\nget_current_screen()->set_help_sidebar(\n\t'<p><strong>' . __('For more information:') . '</strong></p>' .\n\t'<p>' . __( '<a href=\"https://codex.wordpress.org/Dashboard_Updates_Screen\">Documentation on Updating WordPress</a>' ) . '</p>' .\n\t'<p>' . __( '<a href=\"https://wordpress.org/support/\">Support Forums</a>' ) . '</p>'\n);\n\nif ( 'upgrade-core' == $action ) {\n\t// Force a update check when requested\n\t$force_check = ! empty( $_GET['force-check'] );\n\twp_version_check( array(), $force_check );\n\n\trequire_once(ABSPATH . 'wp-admin/admin-header.php');\n\t?>\n\t<div class=\"wrap\">\n\t<h1><?php _e( 'WordPress Updates' ); ?></h1>\n\t<?php\n\tif ( $upgrade_error ) {\n\t\techo '<div class=\"error\"><p>';\n\t\tif ( $upgrade_error == 'themes' )\n\t\t\t_e('Please select one or more themes to update.');\n\t\telse\n\t\t\t_e('Please select one or more plugins to update.');\n\t\techo '</p></div>';\n\t}\n\n\t$last_update_check = false;\n\t$current = get_site_transient( 'update_core' );\n\n\tif ( $current && isset ( $current->last_checked ) )\t{\n\t\t$last_update_check = $current->last_checked + get_option( 'gmt_offset' ) * HOUR_IN_SECONDS;\n\t}\n\n\techo '<p>';\n\t/* translators: %1 date, %2 time. */\n\tprintf( __( 'Last checked on %1$s at %2$s.' ), date_i18n( __( 'F j, Y' ), $last_update_check ), date_i18n( __( 'g:i a' ), $last_update_check ) );\n\techo ' &nbsp; <a class=\"button\" href=\"' . esc_url( self_admin_url('update-core.php?force-check=1') ) . '\">' . __( 'Check Again' ) . '</a>';\n\techo '</p>';\n\n\tif ( $core = current_user_can( 'update_core' ) )\n\t\tcore_upgrade_preamble();\n\tif ( $plugins = current_user_can( 'update_plugins' ) )\n\t\tlist_plugin_updates();\n\tif ( $themes = current_user_can( 'update_themes' ) )\n\t\tlist_theme_updates();\n\tif ( $core || $plugins || $themes )\n\t\tlist_translation_updates();\n\tunset( $core, $plugins, $themes );\n\t/**\n\t * Fires after the core, plugin, and theme update tables.\n\t *\n\t * @since 2.9.0\n\t */\n\tdo_action( 'core_upgrade_preamble' );\n\techo '</div>';\n\n\twp_localize_script( 'updates', '_wpUpdatesItemCounts', array(\n\t\t'totals'  => wp_get_update_data(),\n\t) );\n\n\tinclude(ABSPATH . 'wp-admin/admin-footer.php');\n\n} elseif ( 'do-core-upgrade' == $action || 'do-core-reinstall' == $action ) {\n\n\tif ( ! current_user_can( 'update_core' ) )\n\t\twp_die( __( 'Sorry, you are not allowed to update this site.' ) );\n\n\tcheck_admin_referer('upgrade-core');\n\n\t// Do the (un)dismiss actions before headers, so that they can redirect.\n\tif ( isset( $_POST['dismiss'] ) )\n\t\tdo_dismiss_core_update();\n\telseif ( isset( $_POST['undismiss'] ) )\n\t\tdo_undismiss_core_update();\n\n\trequire_once(ABSPATH . 'wp-admin/admin-header.php');\n\tif ( 'do-core-reinstall' == $action )\n\t\t$reinstall = true;\n\telse\n\t\t$reinstall = false;\n\n\tif ( isset( $_POST['upgrade'] ) )\n\t\tdo_core_upgrade($reinstall);\n\n\twp_localize_script( 'updates', '_wpUpdatesItemCounts', array(\n\t\t'totals'  => wp_get_update_data(),\n\t) );\n\n\tinclude(ABSPATH . 'wp-admin/admin-footer.php');\n\n} elseif ( 'do-plugin-upgrade' == $action ) {\n\n\tif ( ! current_user_can( 'update_plugins' ) )\n\t\twp_die( __( 'Sorry, you are not allowed to update this site.' ) );\n\n\tcheck_admin_referer('upgrade-core');\n\n\tif ( isset( $_GET['plugins'] ) ) {\n\t\t$plugins = explode( ',', $_GET['plugins'] );\n\t} elseif ( isset( $_POST['checked'] ) ) {\n\t\t$plugins = (array) $_POST['checked'];\n\t} else {\n\t\twp_redirect( admin_url('update-core.php') );\n\t\texit;\n\t}\n\n\t$url = 'update.php?action=update-selected&plugins=' . urlencode(implode(',', $plugins));\n\t$url = wp_nonce_url($url, 'bulk-update-plugins');\n\n\t$title = __('Update Plugins');\n\n\trequire_once(ABSPATH . 'wp-admin/admin-header.php');\n\techo '<div class=\"wrap\">';\n\techo '<h1>' . __( 'Update Plugins' ) . '</h1>';\n\techo '<iframe src=\"', $url, '\" style=\"width: 100%; height: 100%; min-height: 750px;\" frameborder=\"0\" title=\"' . esc_attr__( 'Update progress' ) . '\"></iframe>';\n\techo '</div>';\n\n\twp_localize_script( 'updates', '_wpUpdatesItemCounts', array(\n\t\t'totals'  => wp_get_update_data(),\n\t) );\n\n\tinclude(ABSPATH . 'wp-admin/admin-footer.php');\n\n} elseif ( 'do-theme-upgrade' == $action ) {\n\n\tif ( ! current_user_can( 'update_themes' ) )\n\t\twp_die( __( 'Sorry, you are not allowed to update this site.' ) );\n\n\tcheck_admin_referer('upgrade-core');\n\n\tif ( isset( $_GET['themes'] ) ) {\n\t\t$themes = explode( ',', $_GET['themes'] );\n\t} elseif ( isset( $_POST['checked'] ) ) {\n\t\t$themes = (array) $_POST['checked'];\n\t} else {\n\t\twp_redirect( admin_url('update-core.php') );\n\t\texit;\n\t}\n\n\t$url = 'update.php?action=update-selected-themes&themes=' . urlencode(implode(',', $themes));\n\t$url = wp_nonce_url($url, 'bulk-update-themes');\n\n\t$title = __('Update Themes');\n\n\trequire_once(ABSPATH . 'wp-admin/admin-header.php');\n\t?>\n\t<div class=\"wrap\">\n\t\t<h1><?php _e( 'Update Themes' ); ?></h1>\n\t\t<iframe src=\"<?php echo $url ?>\" style=\"width: 100%; height: 100%; min-height: 750px;\" frameborder=\"0\" title=\"<?php esc_attr_e( 'Update progress' ); ?>\"></iframe>\n\t</div>\n\t<?php\n\n\twp_localize_script( 'updates', '_wpUpdatesItemCounts', array(\n\t\t'totals'  => wp_get_update_data(),\n\t) );\n\n\tinclude(ABSPATH . 'wp-admin/admin-footer.php');\n\n} elseif ( 'do-translation-upgrade' == $action ) {\n\n\tif ( ! current_user_can( 'update_core' ) && ! current_user_can( 'update_plugins' ) && ! current_user_can( 'update_themes' ) )\n\t\twp_die( __( 'Sorry, you are not allowed to update this site.' ) );\n\n\tcheck_admin_referer( 'upgrade-translations' );\n\n\trequire_once( ABSPATH . 'wp-admin/admin-header.php' );\n\tinclude_once( ABSPATH . 'wp-admin/includes/class-wp-upgrader.php' );\n\n\t$url = 'update-core.php?action=do-translation-upgrade';\n\t$nonce = 'upgrade-translations';\n\t$title = __( 'Update Translations' );\n\t$context = WP_LANG_DIR;\n\n\t$upgrader = new Language_Pack_Upgrader( new Language_Pack_Upgrader_Skin( compact( 'url', 'nonce', 'title', 'context' ) ) );\n\t$result = $upgrader->bulk_upgrade();\n\n\twp_localize_script( 'updates', '_wpUpdatesItemCounts', array(\n\t\t'totals'  => wp_get_update_data(),\n\t) );\n\n\trequire_once( ABSPATH . 'wp-admin/admin-footer.php' );\n\n} else {\n\t/**\n\t * Fires for each custom update action on the WordPress Updates screen.\n\t *\n\t * The dynamic portion of the hook name, `$action`, refers to the\n\t * passed update action. The hook fires in lieu of all available\n\t * default update actions.\n\t *\n\t * @since 3.2.0\n\t */\n\tdo_action( \"update-core-custom_{$action}\" );\n}\n", "<?php\n/**\n * The WordPress version string\n *\n * @global string $wp_version\n */\n$wp_version = '4.8-alpha-39808';\n\n/**\n * Holds the WordPress DB revision, increments when changes are made to the WordPress DB schema.\n *\n * @global int $wp_db_version\n */\n$wp_db_version = 38590;\n\n/**\n * Holds the TinyMCE version\n *\n * @global string $tinymce_version\n */\n$tinymce_version = '4403-20160901';\n\n/**\n * Holds the required PHP version\n *\n * @global string $required_php_version\n */\n$required_php_version = '5.2.4';\n\n/**\n * Holds the required MySQL version\n *\n * @global string $required_mysql_version\n */\n$required_mysql_version = '5.0';\n"], "filenames": ["wp-admin/update-core.php", "wp-includes/version.php"], "buggy_code_start_loc": [252, 7], "buggy_code_end_loc": [252, 8], "fixing_code_start_loc": [253, 7], "fixing_code_end_loc": [255, 8], "type": "CWE-79", "message": "Multiple cross-site scripting (XSS) vulnerabilities in wp-admin/update-core.php in WordPress before 4.7.1 allow remote attackers to inject arbitrary web script or HTML via the (1) name or (2) version header of a plugin.", "other": {"cve": {"id": "CVE-2017-5488", "sourceIdentifier": "cve@mitre.org", "published": "2017-01-15T02:59:02.860", "lastModified": "2017-11-04T01:29:43.617", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Multiple cross-site scripting (XSS) vulnerabilities in wp-admin/update-core.php in WordPress before 4.7.1 allow remote attackers to inject arbitrary web script or HTML via the (1) name or (2) version header of a plugin."}, {"lang": "es", "value": "M\u00faltiples vulnerabilidades de XSS en wp-admin/update-core.php en WordPress en versiones anteriores a 4.7.1 permiten a atacantes remotos inyectar secuencias de comandos web o HTML arbitrarios a trav\u00e9s del (1) nombre o (2) encabezado de versi\u00f3n de un plugin."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wordpress:wordpress:*:*:*:*:*:*:*:*", "versionEndIncluding": "4.7", "matchCriteriaId": "5C55F44C-4A71-4C47-9908-071A23D46939"}]}]}], "references": [{"url": "http://www.debian.org/security/2017/dsa-3779", "source": "cve@mitre.org"}, {"url": "http://www.openwall.com/lists/oss-security/2017/01/14/6", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://www.securityfocus.com/bid/95397", "source": "cve@mitre.org"}, {"url": "http://www.securitytracker.com/id/1037591", "source": "cve@mitre.org"}, {"url": "https://codex.wordpress.org/Version_4.7.1", "source": "cve@mitre.org", "tags": ["Release Notes", "Vendor Advisory"]}, {"url": "https://github.com/WordPress/WordPress/commit/c9ea1de1441bb3bda133bf72d513ca9de66566c2", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://wordpress.org/news/2017/01/wordpress-4-7-1-security-and-maintenance-release/", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "https://wpvulndb.com/vulnerabilities/8716", "source": "cve@mitre.org"}]}, "github_commit_url": "https://github.com/WordPress/WordPress/commit/c9ea1de1441bb3bda133bf72d513ca9de66566c2"}}