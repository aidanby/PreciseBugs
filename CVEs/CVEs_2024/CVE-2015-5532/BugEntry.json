{"buggy_code": ["<?php\n\t//only admins can get this\n\tif(!function_exists(\"current_user_can\") || (!current_user_can(\"manage_options\") && !current_user_can(\"pmpro_advancedsettings\")))\n\t{\n\t\tdie(__(\"You do not have permissions to perform this action.\", \"pmpro\"));\n\t}\n\n\tglobal $wpdb, $msg, $msgt;\n\n\t//get/set settings\n\tif(!empty($_REQUEST['savesettings']))\n\t{\n\t\t//other settings\n\t\tpmpro_setOption(\"nonmembertext\");\n\t\tpmpro_setOption(\"notloggedintext\");\n\t\tpmpro_setOption(\"rsstext\");\n\t\tpmpro_setOption(\"filterqueries\");\n\t\tpmpro_setOption(\"showexcerpts\");\n\t\tpmpro_setOption(\"hideads\");\n\t\tpmpro_setOption(\"hideadslevels\");\n\t\tpmpro_setOption(\"redirecttosubscription\");\n\n\t\t//captcha\n\t\tpmpro_setOption(\"recaptcha\");\n\t\tpmpro_setOption(\"recaptcha_publickey\");\n\t\tpmpro_setOption(\"recaptcha_privatekey\");\n\n\t\t//tos\n\t\tpmpro_setOption(\"tospage\");\n\n\t\t//footer link\n\t\tpmpro_setOption(\"hide_footer_link\");\n\n        // custom settings (added with pmpro_custom_advanced_settings hook)\n        foreach($_REQUEST as $key => $value ) {\n            if (strpos($key, 'custom_') === 0) {\n                pmpro_setOption($key);\n            }\n        }\n\n\t\t//assume success\n\t\t$msg = true;\n\t\t$msgt = __(\"Your advanced settings have been updated.\", \"pmpro\");\n\t}\n\n\t$nonmembertext = pmpro_getOption(\"nonmembertext\");\n\t$notloggedintext = pmpro_getOption(\"notloggedintext\");\n\t$rsstext = pmpro_getOption(\"rsstext\");\n\t$hideads = pmpro_getOption(\"hideads\");\n    $filterqueries = pmpro_getOption('filterqueries');\n\t$showexcerpts = pmpro_getOption(\"showexcerpts\");\n\t$hideadslevels = pmpro_getOption(\"hideadslevels\");\n\n\tif(is_multisite())\n\t\t$redirecttosubscription = pmpro_getOption(\"redirecttosubscription\");\n\n\t$recaptcha = pmpro_getOption(\"recaptcha\");\n\t$recaptcha_publickey = pmpro_getOption(\"recaptcha_publickey\");\n\t$recaptcha_privatekey = pmpro_getOption(\"recaptcha_privatekey\");\n\n\t$tospage = pmpro_getOption(\"tospage\");\n\n\t$hide_footer_link = pmpro_getOption(\"hide_footer_link\");\n\n\t//default settings\n\tif(!$nonmembertext)\n\t{\n\t\t$nonmembertext = sprintf( __( 'This content is for !!levels!! members only. <a href=\"%s\">Register here</a>.', 'pmpro' ), wp_login_url() . \"?action=register\" );\n\t\tpmpro_setOption(\"nonmembertext\", $nonmembertext);\n\t}\n\tif(!$notloggedintext)\n\t{\n\t\t$notloggedintext = sprintf( __( 'Please <a href=\"%s\">login</a> to view this content. (<a href=\"%s\">Register here</a>.)', 'pmpro' ), wp_login_url( get_permalink() ), wp_login_url() . \"?action=register\" );\n\t\tpmpro_setOption(\"notloggedintext\", $notloggedintext);\n\t}\n\tif(!$rsstext)\n\t{\n\t\t$rsstext = __( 'This content is for members only. Visit the site and log in/register to read.', 'pmpro' );\n\t\tpmpro_setOption(\"rsstext\", $rsstext);\n\t}\n\n\t$levels = $wpdb->get_results( \"SELECT * FROM {$wpdb->pmpro_membership_levels}\", OBJECT );\n\n\trequire_once(dirname(__FILE__) . \"/admin_header.php\");\n?>\n\n\t<form action=\"\" method=\"post\" enctype=\"multipart/form-data\">\n\t\t<h2><?php _e('Advanced Settings', 'pmpro');?></h2>\n\n\t\t<table class=\"form-table\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"nonmembertext\"><?php _e('Message for Logged-in Non-members', 'pmpro');?>:</label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<textarea name=\"nonmembertext\" rows=\"3\" cols=\"80\"><?php echo stripslashes($nonmembertext)?></textarea><br />\n\t\t\t\t\t<small class=\"litegray\"><?php _e('This message replaces the post content for non-members. Available variables', 'pmpro');?>: !!levels!!, !!referrer!!</small>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"notloggedintext\"><?php _e('Message for Logged-out Users', 'pmpro');?>:</label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<textarea name=\"notloggedintext\" rows=\"3\" cols=\"80\"><?php echo stripslashes($notloggedintext)?></textarea><br />\n\t\t\t\t\t<small class=\"litegray\"><?php _e('This message replaces the post content for logged-out visitors.', 'pmpro');?></small>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"rsstext\"><?php _e('Message for RSS Feed', 'pmpro');?>:</label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<textarea name=\"rsstext\" rows=\"3\" cols=\"80\"><?php echo stripslashes($rsstext)?></textarea><br />\n\t\t\t\t\t<small class=\"litegray\"><?php _e('This message replaces the post content in RSS feeds.', 'pmpro');?></small>\n\t\t\t\t</td>\n\t\t\t</tr>\n\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"filterqueries\"><?php _e(\"Filter searches and archives?\", 'pmpro');?></label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<select id=\"filterqueries\" name=\"filterqueries\">\n\t\t\t\t\t\t<option value=\"0\" <?php if(!$filterqueries) { ?>selected=\"selected\"<?php } ?>><?php _e('No - Non-members will see restricted posts/pages in searches and archives.', 'pmpro');?></option>\n\t\t\t\t\t\t<option value=\"1\" <?php if($filterqueries == 1) { ?>selected=\"selected\"<?php } ?>><?php _e('Yes - Only members will see restricted posts/pages in searches and archives.', 'pmpro');?></option>\n\t\t\t\t\t</select>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"showexcerpts\"><?php _e('Show Excerpts to Non-Members?', 'pmpro');?></label>\n            </th>\n            <td>\n                <select id=\"showexcerpts\" name=\"showexcerpts\">\n                    <option value=\"0\" <?php if(!$showexcerpts) { ?>selected=\"selected\"<?php } ?>><?php _e('No - Hide excerpts.', 'pmpro');?></option>\n                    <option value=\"1\" <?php if($showexcerpts == 1) { ?>selected=\"selected\"<?php } ?>><?php _e('Yes - Show excerpts.', 'pmpro');?></option>\n                </select>\n            </td>\n            </tr>\n            <tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"hideads\"><?php _e(\"Hide Ads From Members?\", 'pmpro');?></label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<select id=\"hideads\" name=\"hideads\" onchange=\"pmpro_updateHideAdsTRs();\">\n\t\t\t\t\t\t<option value=\"0\" <?php if(!$hideads) { ?>selected=\"selected\"<?php } ?>><?php _e('No', 'pmpro');?></option>\n\t\t\t\t\t\t<option value=\"1\" <?php if($hideads == 1) { ?>selected=\"selected\"<?php } ?>><?php _e('Hide Ads From All Members', 'pmpro');?></option>\n\t\t\t\t\t\t<option value=\"2\" <?php if($hideads == 2) { ?>selected=\"selected\"<?php } ?>><?php _e('Hide Ads From Certain Members', 'pmpro');?></option>\n\t\t\t\t\t</select>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr id=\"hideads_explanation\" <?php if($hideads < 2) { ?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t<th scope=\"row\" valign=\"top\">&nbsp;</th>\n\t\t\t\t<td>\n\t\t\t\t\t<p class=\"top0em\"><?php _e('Ads from the following plugins will be automatically turned off', 'pmpro');?>: <em>Easy Adsense</em>, ...</p>\n\t\t\t\t\t<p><?php _e('To hide ads in your template code, use code like the following', 'pmpro');?>:</p>\n\t\t\t\t<pre lang=\"PHP\">\nif(pmpro_displayAds())\n{\n//insert ad code here\n}\n\t\t\t\t</pre>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr id=\"hideadslevels_tr\" <?php if($hideads != 2) { ?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"hideadslevels\"><?php _e('Choose Levels to Hide Ads From', 'pmpro');?>:</label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<div class=\"checkbox_box\" <?php if(count($levels) > 5) { ?>style=\"height: 100px; overflow: auto;\"<?php } ?>>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$hideadslevels = pmpro_getOption(\"hideadslevels\");\n\t\t\t\t\t\t\tif(!is_array($hideadslevels))\n\t\t\t\t\t\t\t\t$hideadslevels = explode(\",\", $hideadslevels);\n\n\t\t\t\t\t\t\t$sqlQuery = \"SELECT * FROM $wpdb->pmpro_membership_levels \";\n\t\t\t\t\t\t\t$levels = $wpdb->get_results($sqlQuery, OBJECT);\n\t\t\t\t\t\t\tforeach($levels as $level)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<div class=\"clickable\"><input type=\"checkbox\" id=\"hideadslevels_<?php echo $level->id?>\" name=\"hideadslevels[]\" value=\"<?php echo $level->id?>\" <?php if(in_array($level->id, $hideadslevels)) { ?>checked=\"checked\"<?php } ?>> <?php echo $level->name?></div>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t</div>\n\t\t\t\t\t<script>\n\t\t\t\t\t\tjQuery('.checkbox_box input').click(function(event) {\n\t\t\t\t\t\t\tevent.stopPropagation()\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tjQuery('.checkbox_box div.clickable').click(function() {\n\t\t\t\t\t\t\tvar checkbox = jQuery(this).find(':checkbox');\n\t\t\t\t\t\t\tcheckbox.attr('checked', !checkbox.attr('checked'));\n\t\t\t\t\t\t});\n\t\t\t\t\t</script>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<?php if(is_multisite()) { ?>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"redirecttosubscription\"><?php _e('Redirect all traffic from registration page to /susbcription/?', 'pmpro');?>: <em>(<?php _e('multisite only', 'pmpro');?>)</em></label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<select id=\"redirecttosubscription\" name=\"redirecttosubscription\">\n\t\t\t\t\t\t<option value=\"0\" <?php if(!$redirecttosubscription) { ?>selected=\"selected\"<?php } ?>><?php _e('No', 'pmpro');?></option>\n\t\t\t\t\t\t<option value=\"1\" <?php if($redirecttosubscription == 1) { ?>selected=\"selected\"<?php } ?>><?php _e('Yes', 'pmpro');?></option>\n\t\t\t\t\t</select>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<?php } ?>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"recaptcha\"><?php _e('Use reCAPTCHA?', 'pmpro');?>:</label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<select id=\"recaptcha\" name=\"recaptcha\" onchange=\"pmpro_updateRecaptchaTRs();\">\n\t\t\t\t\t\t<option value=\"0\" <?php if(!$recaptcha) { ?>selected=\"selected\"<?php } ?>><?php _e('No', 'pmpro');?></option>\n\t\t\t\t\t\t<option value=\"1\" <?php if($recaptcha == 1) { ?>selected=\"selected\"<?php } ?>><?php _e('Yes - Free memberships only.', 'pmpro');?></option>\n\t\t\t\t\t\t<option value=\"2\" <?php if($recaptcha == 2) { ?>selected=\"selected\"<?php } ?>><?php _e('Yes - All memberships.', 'pmpro');?></option>\n\t\t\t\t\t</select><br />\n\t\t\t\t\t<small><?php _e('A free reCAPTCHA key is required.', 'pmpro');?> <a href=\"https://www.google.com/recaptcha/admin/create\"><?php _e('Click here to signup for reCAPTCHA', 'pmpro');?></a>.</small>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr id=\"recaptcha_tr\" <?php if(!$recaptcha) { ?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t<th scope=\"row\" valign=\"top\">&nbsp;</th>\n\t\t\t\t<td>\n\t\t\t\t\t<label for=\"recaptcha_publickey\"><?php _e('reCAPTCHA Public Key', 'pmpro');?>:</label>\n\t\t\t\t\t<input type=\"text\" name=\"recaptcha_publickey\" size=\"60\" value=\"<?php echo $recaptcha_publickey?>\" />\n\t\t\t\t\t<br /><br />\n\t\t\t\t\t<label for=\"recaptcha_privatekey\"><?php _e('reCAPTCHA Private Key', 'pmpro');?>:</label>\n\t\t\t\t\t<input type=\"text\" name=\"recaptcha_privatekey\" size=\"60\" value=\"<?php echo $recaptcha_privatekey?>\" />\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"tospage\"><?php _e('Require Terms of Service on signups?', 'pmpro');?></label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<?php\n\t\t\t\t\t\twp_dropdown_pages(array(\"name\"=>\"tospage\", \"show_option_none\"=>\"No\", \"selected\"=>$tospage));\n\t\t\t\t\t?>\n\t\t\t\t\t<br />\n\t\t\t\t\t<small><?php _e('If yes, create a WordPress page containing your TOS agreement and assign it using the dropdown above.', 'pmpro');?></small>\n\t\t\t\t</td>\n\t\t\t</tr>\n\n\t\t\t<?php /*\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"hide_footer_link\">Hide the PMPro Link in the Footer?</label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<select id=\"hide_footer_link\" name=\"hide_footer_link\">\n\t\t\t\t\t\t<option value=\"0\" <?php if(!$hide_footer_link) { ?>selected=\"selected\"<?php } ?>>No - Leave the link. (Thanks!)</option>\n\t\t\t\t\t\t<option value=\"1\" <?php if($hide_footer_link == 1) { ?>selected=\"selected\"<?php } ?>>Yes - Hide the link.</option>\n\t\t\t\t\t</select>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t*/\n\n            // Filter to Add More Advanced Settings for Misc Plugin Options, etc.\n            if (has_action('pmpro_custom_advanced_settings')) {\n            $custom_fields = apply_filters('pmpro_custom_advanced_settings', array());\n            foreach ($custom_fields as $field) {\n            ?>\n            <tr>\n                <th valign=\"top\" scope=\"row\">\n                    <label\n                        for=\"<?php _e($field['field_name'], 'pmpro'); ?>\"><?php _e($field['label'], 'pmpro'); ?></label>\n                </th>\n                <td>\n                    <?php\n                    switch ($field['field_type']) {\n                        case 'select':\n                            ?>\n                            <select id=\"<?php _e($field['field_name'], 'pmpro'); ?>\"\n                                    name=\"<?php _e($field['field_name'], 'pmpro'); ?>\">\n                                <?php foreach ($field['options'] as $option) {\n                                    ?>\n                                    <option value=\"<?php _e($option, 'pmpro'); ?>\"\n                                        <?php\n                                        if ($option == pmpro_getOption($field['field_name'])) {\n                                            _e('selected', 'pmpro');\n                                        }\n                                        ?>\n                                        ><?php _e($option, 'pmpro'); ?></option>\n                                <?php\n                                } ?>\n                            </select>\n                            <?php\n                            break;\n                        case 'text':\n                            ?>\n                            <input id=\"<?php _e($field['field_name'], 'pmpro'); ?>\"\n                                   name=\"<?php _e($field['field_name'], 'pmpro'); ?>\"\n                                   type=\"<?php _e($field['field_type'], 'pmpro'); ?>\"\n                                   value=\"<?php echo pmpro_getOption($field['field_name']); ?> \">\n                            <?php\n                            break;\n                        case 'textarea':\n                            ?>\n                            <textarea id=\"<?php _e($field['field_name'], 'pmpro'); ?>\"\n                                      name=\"<?php _e($field['field_name'], 'pmpro'); ?>\">\n                                <?php echo pmpro_getOption($field['field_name']); ?>\n                            </textarea>\n                            <?php\n                            break;\n                        default:\n                            break;\n                    }\n                    if (!empty($field['description'])) {\n                        ?>\n                        <br>\n                        <small><?php _e($field['description'], 'pmpro'); ?></small>\n                    <?php\n                    }\n                    ?>\n                </td>\n                <?php\n                }\n                }\n                ?>\n            </tr>\n        </tbody>\n\t\t</table>\n\t\t<script>\n\t\t\tfunction pmpro_updateHideAdsTRs()\n\t\t\t{\n\t\t\t\tvar hideads = jQuery('#hideads').val();\n\t\t\t\tif(hideads == 2)\n\t\t\t\t{\n\t\t\t\t\tjQuery('#hideadslevels_tr').show();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tjQuery('#hideadslevels_tr').hide();\n\t\t\t\t}\n\n\t\t\t\tif(hideads > 0)\n\t\t\t\t{\n\t\t\t\t\tjQuery('#hideads_explanation').show();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tjQuery('#hideads_explanation').hide();\n\t\t\t\t}\n\t\t\t}\n\t\t\tpmpro_updateHideAdsTRs();\n\n\t\t\tfunction pmpro_updateRecaptchaTRs()\n\t\t\t{\n\t\t\t\tvar recaptcha = jQuery('#recaptcha').val();\n\t\t\t\tif(recaptcha > 0)\n\t\t\t\t{\n\t\t\t\t\tjQuery('#recaptcha_tr').show();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tjQuery('#recaptcha_tr').hide();\n\t\t\t\t}\n\t\t\t}\n\t\t\tpmpro_updateRecaptchaTRs();\n\t\t</script>\n\n\t\t<p class=\"submit\">\n\t\t\t<input name=\"savesettings\" type=\"submit\" class=\"button button-primary\" value=\"<?php _e('Save Settings', 'pmpro');?>\" />\n\t\t</p>\n\t</form>\n\n<?php\n\trequire_once(dirname(__FILE__) . \"/admin_footer.php\");\n?>\n", "<?php\n\t//only admins can get this\n\tif(!function_exists(\"current_user_can\") || (!current_user_can(\"manage_options\") && !current_user_can(\"pmpro_discountcodes\")))\n\t{\n\t\tdie(__(\"You do not have permissions to perform this action.\", \"pmpro\"));\n\t}\t\n\t\n\t//vars\n\tglobal $wpdb, $pmpro_currency_symbol;\n\t\n\tif(isset($_REQUEST['edit']))\t\n\t\t$edit = $_REQUEST['edit'];\n\telse\n\t\t$edit = false;\n\t\n\tif(isset($_REQUEST['delete']))\n\t\t$delete = $_REQUEST['delete'];\n\telse\n\t\t$delete = false;\n\t\t\n\tif(isset($_REQUEST['saveid']))\n\t\t$saveid = $_POST['saveid'];\n\telse\n\t\t$saveid = false;\t\t\t\n\t\n\tif($saveid)\n\t{\n\t\t//get vars\n\t\t$code = $_POST['code'];\n\t\t$starts_month = $_POST['starts_month'];\n\t\t$starts_day = $_POST['starts_day'];\n\t\t$starts_year = $_POST['starts_year'];\n\t\t$expires_month = $_POST['expires_month'];\n\t\t$expires_day = $_POST['expires_day'];\n\t\t$expires_year = $_POST['expires_year'];\n\t\t$uses = $_POST['uses'];\n\t\t\n\t\t//fix up dates\t\t\n\t\t$starts = date(\"Y-m-d\", strtotime($starts_month . \"/\" . $starts_day . \"/\" . $starts_year, current_time(\"timestamp\")));\n\t\t$expires = date(\"Y-m-d\", strtotime($expires_month . \"/\" . $expires_day . \"/\" . $expires_year, current_time(\"timestamp\")));\n\t\t\n\t\t//updating or new?\n\t\tif($saveid > 0)\n\t\t{\n\t\t\t$sqlQuery = \"UPDATE $wpdb->pmpro_discount_codes SET code = '\" . esc_sql($code) . \"', starts = '\" . $starts . \"', expires = '\" . $expires . \"', uses = '\" . intval($uses) . \"' WHERE id = '\" . $saveid . \"' LIMIT 1\";\n\t\t\tif($wpdb->query($sqlQuery) !== false)\n\t\t\t{\n\t\t\t\t$pmpro_msg = __(\"Discount code updated successfully.\", \"pmpro\");\n\t\t\t\t$pmpro_msgt = \"success\";\n\t\t\t\t$saved = true;\n\t\t\t\t$edit = $saveid;\t\t\t\t\t\t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$pmpro_msg = __(\"Error updating discount code. That code may already be in use.\", \"pmpro\");\n\t\t\t\t$pmpro_msgt = \"error\";\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$sqlQuery = \"INSERT INTO $wpdb->pmpro_discount_codes (code, starts, expires, uses) VALUES('\" . esc_sql($code) . \"', '\" . $starts . \"', '\" . $expires . \"', '\" . intval($uses) . \"')\";\n\t\t\tif($wpdb->query($sqlQuery) !== false)\n\t\t\t{\n\t\t\t\t$pmpro_msg = __(\"Discount code added successfully.\", \"pmpro\");\n\t\t\t\t$pmpro_msgt = \"success\";\n\t\t\t\t$saved = true;\n\t\t\t\t$edit = $wpdb->insert_id;\n\t\t\t\t//$saveid = $edit;\n\t\t\t}\n\t\t\telse\n\t\t\t{\t\t\t\t\n\t\t\t\t$pmpro_msg = __(\"Error adding discount code. That code may already be in use.\", \"pmpro\") . $wpdb->last_error;\t\t\t\t\n\t\t\t\t$pmpro_msgt = \"error\";\n\t\t\t}\n\t\t}\n\t\t\n\t\t//now add the membership level rows\t\t\n\t\tif($saved && $edit > 0)\n\t\t{\n\t\t\t//get the submitted values\n\t\t\t$all_levels_a = $_REQUEST['all_levels'];\n\t\t\tif(!empty($_REQUEST['levels']))\n\t\t\t\t$levels_a = $_REQUEST['levels'];\n\t\t\telse\n\t\t\t\t$levels_a = array();\n\t\t\t$initial_payment_a = $_REQUEST['initial_payment'];\n\t\t\tif(!empty($_REQUEST['recurring']))\n\t\t\t\t$recurring_a = $_REQUEST['recurring'];\n\t\t\t$billing_amount_a = $_REQUEST['billing_amount'];\n\t\t\t$cycle_number_a = $_REQUEST['cycle_number'];\n\t\t\t$cycle_period_a = $_REQUEST['cycle_period'];\n\t\t\t$billing_limit_a = $_REQUEST['billing_limit'];\n\t\t\tif(!empty($_REQUEST['custom_trial']))\n\t\t\t\t$custom_trial_a = $_REQUEST['custom_trial'];\n\t\t\t$trial_amount_a = $_REQUEST['trial_amount'];\n\t\t\t$trial_limit_a = $_REQUEST['trial_limit'];\t\t\t\t\t\t\n\t\t\tif(!empty($_REQUEST['expiration']))\n\t\t\t\t$expiration_a = $_REQUEST['expiration'];\n\t\t\t$expiration_number_a = $_REQUEST['expiration_number'];\n\t\t\t$expiration_period_a = $_REQUEST['expiration_period'];\n\t\t\t\n\t\t\t//clear the old rows\n\t\t\t$sqlQuery = \"DELETE FROM $wpdb->pmpro_discount_codes_levels WHERE code_id = '\" . $edit . \"'\";\n\t\t\t$wpdb->query($sqlQuery);\n\t\t\t\n\t\t\t//add a row for each checked level\n\t\t\tif(!empty($levels_a))\n\t\t\t{\n\t\t\t\tforeach($levels_a as $level_id)\n\t\t\t\t{\n\t\t\t\t\t//get the values ready\n\t\t\t\t\t$n = array_search($level_id, $all_levels_a); \t//this is the key location of this level's values\n\t\t\t\t\t$initial_payment = $initial_payment_a[$n];\n\t\t\t\t\t\n\t\t\t\t\t//is this recurring?\n\t\t\t\t\tif(!empty($recurring_a))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(in_array($level_id, $recurring_a))\n\t\t\t\t\t\t\t$recurring = 1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$recurring = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\t$recurring = 0;\n\t\t\t\t\t\t\t\n\t\t\t\t\tif(!empty($recurring))\n\t\t\t\t\t{\n\t\t\t\t\t\t$billing_amount = $billing_amount_a[$n];\n\t\t\t\t\t\t$cycle_number = $cycle_number_a[$n];\n\t\t\t\t\t\t$cycle_period = $cycle_period_a[$n];\n\t\t\t\t\t\t$billing_limit = $billing_limit_a[$n];\n\t\t\t\t\t\t\n\t\t\t\t\t\t//custom trial\n\t\t\t\t\t\tif(!empty($custom_trial_a))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(in_array($level_id, $custom_trial_a))\n\t\t\t\t\t\t\t\t$custom_trial = 1;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t$custom_trial = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$custom_trial = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!empty($custom_trial))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$trial_amount = $trial_amount_a[$n];\n\t\t\t\t\t\t\t$trial_limit = $trial_limit_a[$n];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$trial_amount = '';\n\t\t\t\t\t\t\t$trial_limit = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$billing_amount = '';\n\t\t\t\t\t\t$cycle_number = '';\n\t\t\t\t\t\t$cycle_period = 'Month';\n\t\t\t\t\t\t$billing_limit = '';\n\t\t\t\t\t\t$custom_trial = 0;\n\t\t\t\t\t\t$trial_amount = '';\n\t\t\t\t\t\t$trial_limit = '';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(!empty($expiration_a))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(in_array($level_id, $expiration_a))\n\t\t\t\t\t\t\t$expiration = 1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$expiration = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\t$expiration = 0;\n\t\t\t\t\t\n\t\t\t\t\tif(!empty($expiration))\n\t\t\t\t\t{\n\t\t\t\t\t\t$expiration_number = $expiration_number_a[$n];\n\t\t\t\t\t\t$expiration_period = $expiration_period_a[$n];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$expiration_number = '';\n\t\t\t\t\t\t$expiration_period = 'Month';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//okay, do the insert\n\t\t\t\t\t$sqlQuery = \"INSERT INTO $wpdb->pmpro_discount_codes_levels (code_id, level_id, initial_payment, billing_amount, cycle_number, cycle_period, billing_limit, trial_amount, trial_limit, expiration_number, expiration_period) VALUES('\" . esc_sql($edit) . \"', '\" . esc_sql($level_id) . \"', '\" . (double)esc_sql($initial_payment) . \"', '\" . (double)esc_sql($billing_amount) . \"', '\" . intval(esc_sql($cycle_number)) . \"', '\" . esc_sql($cycle_period) . \"', '\" . intval(esc_sql($billing_limit)) . \"', '\" . (double)esc_sql($trial_amount) . \"', '\" . intval(esc_sql($trial_limit)) . \"', '\" . intval(esc_sql($expiration_number)) . \"', '\" . esc_sql($expiration_period) . \"')\";\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif($wpdb->query($sqlQuery) !== false)\n\t\t\t\t\t{\n\t\t\t\t\t\t//okay\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tdo_action(\"pmpro_save_discount_code_level\", $edit, $level_id);\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\t\t\t\t\t\n\t\t\t\t\t\t$level_errors[] = sprintf(__(\"Error saving values for the %s level.\", \"pmpro\"), $wpdb->get_var(\"SELECT name FROM $wpdb->pmpro_membership_levels WHERE id = '\" . $level_id . \"' LIMIT 1\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//errors?\n\t\t\tif(!empty($level_errors))\n\t\t\t{\t\t\t\t\n\t\t\t\t$pmpro_msg = __(\"There were errors updating the level values: \", \"pmpro\") . implode(\" \", $level_errors);\n\t\t\t\t$pmpro_msgt = \"error\";\t\t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//all good. set edit = NULL so we go back to the overview page\n\t\t\t\t$edit = NULL;\n\t\t\t\t\n\t\t\t\tdo_action(\"pmpro_save_discount_code\", $saveid);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t//are we deleting?\n\tif(!empty($delete))\n\t{\n\t\t//is this a code?\n\t\t$code = $wpdb->get_var(\"SELECT code FROM $wpdb->pmpro_discount_codes WHERE id = '\" . $delete . \"' LIMIT 1\");\n\t\tif(!empty($code))\n\t\t{\n\t\t\t//action\n\t\t\tdo_action(\"pmpro_delete_discount_code\", $delete);\n\t\t\t\n\t\t\t//delete the code levels\n\t\t\t$r1 = $wpdb->query(\"DELETE FROM $wpdb->pmpro_discount_codes_levels WHERE code_id = '\" . $delete . \"'\");\n\t\t\t\n\t\t\tif($r1 !== false)\n\t\t\t{\n\t\t\t\t//delete the code\n\t\t\t\t$r2 = $wpdb->query(\"DELETE FROM $wpdb->pmpro_discount_codes WHERE id = '\" . $delete . \"' LIMIT 1\");\n\t\t\t\t\n\t\t\t\tif($r2 !== false)\n\t\t\t\t{\n\t\t\t\t\t$pmpro_msg = sprintf(__(\"Code %s deleted successfully.\", \"pmpro\"), $code);\n\t\t\t\t\t$pmpro_msgt = \"success\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$pmpro_msg = __(\"Error deleting discount code. The code was only partially deleted. Please try again.\", \"pmpro\");\n\t\t\t\t\t$pmpro_msgt = \"error\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$pmpro_msg = __(\"Error deleting code. Please try again.\", \"pmpro\");\n\t\t\t\t$pmpro_msgt = \"error\";\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$pmpro_msg = __(\"Code not found.\", \"pmpro\");\n\t\t\t$pmpro_msgt = \"error\";\n\t\t}\n\t}\n\t\n\trequire_once(dirname(__FILE__) . \"/admin_header.php\");\t\n?>\n\t\n\t<?php if($edit) { ?>\n\t\t\n\t\t<h2>\n\t\t\t<?php\n\t\t\t\tif($edit > 0)\n\t\t\t\t\techo __(\"Edit Discount Code\", \"pmpro\");\n\t\t\t\telse\n\t\t\t\t\techo __(\"Add New Discount Code\", \"pmpro\");\n\t\t\t?>\n\t\t</h2>\n\t\t\n\t\t<?php if(!empty($pmpro_msg)) { ?>\n\t\t\t<div id=\"message\" class=\"<?php if($pmpro_msgt == \"success\") echo \"updated fade\"; else echo \"error\"; ?>\"><p><?php echo $pmpro_msg?></p></div>\n\t\t<?php } ?>\n\t\t\n\t\t<div>\n\t\t\t<?php\n\t\t\t\t// get the code...\n\t\t\t\tif($edit > 0)\n\t\t\t\t{\n\t\t\t\t\t$code = $wpdb->get_row(\"SELECT *, UNIX_TIMESTAMP(starts) as starts, UNIX_TIMESTAMP(expires) as expires FROM $wpdb->pmpro_discount_codes WHERE id = '\" . $edit . \"' LIMIT 1\", OBJECT);\n\t\t\t\t\t$uses = $wpdb->get_var(\"SELECT COUNT(*) FROM $wpdb->pmpro_discount_codes_uses WHERE code_id = '\" . $code->id . \"'\");\n\t\t\t\t\t$levels = $wpdb->get_results(\"SELECT l.id, l.name, cl.initial_payment, cl.billing_amount, cl.cycle_number, cl.cycle_period, cl.billing_limit, cl.trial_amount, cl.trial_limit FROM $wpdb->pmpro_membership_levels l LEFT JOIN $wpdb->pmpro_discount_codes_levels cl ON l.id = cl.level_id WHERE cl.code_id = '\" . $code->code . \"'\");\n\t\t\t\t\t$temp_id = $code->id;\n\t\t\t\t}\n\t\t\t\telseif(!empty($copy) && $copy > 0)\t\t\n\t\t\t\t{\t\n\t\t\t\t\t$code = $wpdb->get_row(\"SELECT *, UNIX_TIMESTAMP(starts) as starts, UNIX_TIMESTAMP(expires) as expires FROM $wpdb->pmpro_discount_codes WHERE id = '\" . $copy . \"' LIMIT 1\", OBJECT);\t\t\t\t\t\n\t\t\t\t\t$temp_id = $level->id;\n\t\t\t\t\t$level->id = NULL;\n\t\t\t\t}\n\n\t\t\t\t// didn't find a discount code, let's add a new one...\n\t\t\t\tif(empty($code->id)) $edit = -1;\n\n\t\t\t\t//defaults for new codes\n\t\t\t\tif($edit == -1)\n\t\t\t\t{\n\t\t\t\t\t$code = new stdClass();\n\t\t\t\t\t$code->code = pmpro_getDiscountCode();\n\t\t\t\t}\t\t\t\t\t\t\t\t\n\t\t\t?>\n\t\t\t<form action=\"\" method=\"post\">\n\t\t\t\t<input name=\"saveid\" type=\"hidden\" value=\"<?php echo $edit?>\" />\n\t\t\t\t<table class=\"form-table\">\n                <tbody>\n                    <tr>\n                        <th scope=\"row\" valign=\"top\"><label><?php _e('ID', 'pmpro');?>:</label></th>\n                        <td class=\"pmpro_lite\"><?php if(!empty($code->id)) echo $code->id; else echo __(\"This will be generated when you save.\", \"pmpro\");?></td>\n                    </tr>\t\t\t\t\t\t\t\t                \n                    \n                    <tr>\n                        <th scope=\"row\" valign=\"top\"><label for=\"code\"><?php _e('Code', 'pmpro');?>:</label></th>\n                        <td><input name=\"code\" type=\"text\" size=\"20\" value=\"<?php echo str_replace(\"\\\"\", \"&quot;\", stripslashes($code->code))?>\" /></td>\n                    </tr>\n                    \n\t\t\t\t\t<?php\n\t\t\t\t\t\t//some vars for the dates\n\t\t\t\t\t\t$current_day = date(\"j\");\n\t\t\t\t\t\tif(!empty($code->starts))\n\t\t\t\t\t\t\t$selected_starts_day = date(\"j\", $code->starts);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$selected_starts_day = $current_day;\n\t\t\t\t\t\tif(!empty($code->expires))\n\t\t\t\t\t\t\t$selected_expires_day = date(\"j\", $code->expires);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$selected_expires_day = $current_day;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t$current_month = date(\"M\");\n\t\t\t\t\t\tif(!empty($code->starts))\n\t\t\t\t\t\t\t$selected_starts_month = date(\"m\", $code->starts);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$selected_starts_month = date(\"m\");\n\t\t\t\t\t\tif(!empty($code->expires))\n\t\t\t\t\t\t\t$selected_expires_month = date(\"m\", $code->expires);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$selected_expires_month = date(\"m\");\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t$current_year = date(\"Y\");\t\t\t\t\t\t\n\t\t\t\t\t\tif(!empty($code->starts))\n\t\t\t\t\t\t\t$selected_starts_year = date(\"Y\", $code->starts);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$selected_starts_year = $current_year;\n\t\t\t\t\t\tif(!empty($code->expires))\n\t\t\t\t\t\t\t$selected_expires_year = date(\"Y\", $code->expires);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$selected_expires_year = (int)$current_year + 1;\n\t\t\t\t\t?>\n\t\t\t\t\t\n\t\t\t\t\t<tr>\n                        <th scope=\"row\" valign=\"top\"><label for=\"starts\"><?php _e('Start Date', 'pmpro');?>:</label></th>\n                        <td>\n\t\t\t\t\t\t\t<select name=\"starts_month\">\n\t\t\t\t\t\t\t\t<?php\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tfor($i = 1; $i < 13; $i++)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<option value=\"<?php echo $i?>\" <?php if($i == $selected_starts_month) { ?>selected=\"selected\"<?php } ?>><?php echo date(\"M\", strtotime($i . \"/1/\" . $current_year, current_time(\"timestamp\")))?></option>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<input name=\"starts_day\" type=\"text\" size=\"2\" value=\"<?php echo $selected_starts_day?>\" />\n\t\t\t\t\t\t\t<input name=\"starts_year\" type=\"text\" size=\"4\" value=\"<?php echo $selected_starts_year?>\" />\n\t\t\t\t\t\t</td>\n                    </tr>\n\t\t\t\t\t\n\t\t\t\t\t<tr>\n                        <th scope=\"row\" valign=\"top\"><label for=\"expires\"><?php _e('Expiration Date', 'pmpro');?>:</label></th>\n                        <td>\n\t\t\t\t\t\t\t<select name=\"expires_month\">\n\t\t\t\t\t\t\t\t<?php\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tfor($i = 1; $i < 13; $i++)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<option value=\"<?php echo $i?>\" <?php if($i == $selected_expires_month) { ?>selected=\"selected\"<?php } ?>><?php echo date(\"M\", strtotime($i . \"/1/\" . $current_year, current_time(\"timestamp\")))?></option>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<input name=\"expires_day\" type=\"text\" size=\"2\" value=\"<?php echo $selected_expires_day?>\" />\n\t\t\t\t\t\t\t<input name=\"expires_year\" type=\"text\" size=\"4\" value=\"<?php echo $selected_expires_year?>\" />\n\t\t\t\t\t\t</td>\n                    </tr>\n\t\t\t\t\t\n\t\t\t\t\t<tr>\n                        <th scope=\"row\" valign=\"top\"><label for=\"uses\"><?php _e('Uses', 'pmpro');?>:</label></th>\n                        <td>\n\t\t\t\t\t\t\t<input name=\"uses\" type=\"text\" size=\"10\" value=\"<?php if(!empty($code->uses)) echo str_replace(\"\\\"\", \"&quot;\", stripslashes($code->uses));?>\" />\n\t\t\t\t\t\t\t<small class=\"pmpro_lite\"><?php _e('Leave blank for unlimited uses.', 'pmpro');?></small>\n\t\t\t\t\t\t</td>\n                    </tr>\n                    \t\t\t\t\t\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t\n\t\t\t<?php do_action(\"pmpro_discount_code_after_settings\"); ?>\n\t\t\t\n\t\t\t<h3><?php _e('Which Levels Will This Code Apply To?', 'pmpro'); ?></h3>\n\t\t\t\n\t\t\t<div class=\"pmpro_discount_levels\">\n\t\t\t<?php\n\t\t\t\t$levels = $wpdb->get_results(\"SELECT * FROM $wpdb->pmpro_membership_levels\");\n\t\t\t\tforeach($levels as $level)\n\t\t\t\t{\n\t\t\t\t\t//if this level is already managed for this discount code, use the code values\n\t\t\t\t\tif($edit > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$code_level = $wpdb->get_row(\"SELECT l.id, cl.*, l.name, l.description, l.allow_signups FROM $wpdb->pmpro_discount_codes_levels cl LEFT JOIN $wpdb->pmpro_membership_levels l ON cl.level_id = l.id WHERE cl.code_id = '\" . $edit . \"' AND cl.level_id = '\" . $level->id . \"' LIMIT 1\");\n\t\t\t\t\t\tif($code_level)\n\t\t\t\t\t\t{\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$level = $code_level;\n\t\t\t\t\t\t\t$level->checked = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$level_checked = false;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\t$level_checked = false;\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t?>\n\t\t\t\t<div>\n\t\t\t\t\t<input type=\"hidden\" name=\"all_levels[]\" value=\"<?php echo $level->id?>\" />\n\t\t\t\t\t<input type=\"checkbox\" id=\"levels_<?php echo $level->id;?>\" name=\"levels[]\" value=\"<?php echo $level->id?>\" <?php if(!empty($level->checked)) { ?>checked=\"checked\"<?php } ?> onclick=\"if(jQuery(this).is(':checked')) jQuery(this).next().next().show();\telse jQuery(this).next().next().hide();\" />\n\t\t\t\t\t<label for=\"levels_<?php echo $level->id;?>\"><?php echo $level->name?></label>\n\t\t\t\t\t<div class=\"pmpro_discount_levels_pricing level_<?php echo $level->id?>\" <?php if(empty($level->checked)) { ?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t\t\t<table class=\"form-table\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"initial_payment\"><?php _e('Initial Payment', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"left\")\n\t\t\t\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<input name=\"initial_payment[]\" type=\"text\" size=\"20\" value=\"<?php echo str_replace(\"\\\"\", \"&quot;\", stripslashes($level->initial_payment))?>\" /> \n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"right\")\n\t\t\t\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<small><?php _e('The initial amount collected at registration.', 'pmpro');?></small>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Recurring Subscription', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td><input class=\"recurring_checkbox\" id=\"recurring_<?php echo $level->id;?>\" name=\"recurring[]\" type=\"checkbox\" value=\"<?php echo $level->id?>\" <?php if(pmpro_isLevelRecurring($level)) { echo \"checked='checked'\"; } ?> onclick=\"if(jQuery(this).attr('checked')) {\t\t\t\t\tjQuery(this).parent().parent().siblings('.recurring_info').show(); if(!jQuery('#custom_trial_<?php echo $level->id?>').is(':checked')) jQuery(this).parent().parent().siblings('.trial_info').hide();} else\t\t\t\t\tjQuery(this).parent().parent().siblings('.recurring_info').hide();\" /> <label for=\"recurring_<?php echo $level->id;?>\"><?php _e('Check if this level has a recurring subscription payment.', 'pmpro');?></label></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<tr class=\"recurring_info\" <?php if(!pmpro_isLevelRecurring($level)) {?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_amount\"><?php _e('Billing Amount', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"left\")\n\t\t\t\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<input name=\"billing_amount[]\" type=\"text\" size=\"20\" value=\"<?php echo str_replace(\"\\\"\", \"&quot;\", stripslashes($level->billing_amount))?>\" /> \n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"right\")\n\t\t\t\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<small>per</small>\n\t\t\t\t\t\t\t\t\t<input name=\"cycle_number[]\" type=\"text\" size=\"10\" value=\"<?php echo str_replace(\"\\\"\", \"&quot;\", stripslashes($level->cycle_number))?>\" />\n\t\t\t\t\t\t\t\t\t<select name=\"cycle_period[]\" onchange=\"updateCyclePeriod();\">\n\t\t\t\t\t\t\t\t\t  <?php\n\t\t\t\t\t\t\t\t\t\t$cycles = array( __('Day(s)', 'pmpro') => 'Day', __('Week(s)', 'pmpro') => 'Week', __('Month(s)', 'pmpro') => 'Month', __('Year(s)', 'pmpro') => 'Year' );\n\t\t\t\t\t\t\t\t\t\tforeach ( $cycles as $name => $value ) {\n\t\t\t\t\t\t\t\t\t\t  echo \"<option value='$value'\";\n\t\t\t\t\t\t\t\t\t\t  if ( $level->cycle_period == $value ) echo \" selected='selected'\";\n\t\t\t\t\t\t\t\t\t\t  echo \">$name</option>\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t  ?>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<br /><small><?php _e('The amount to be billed one cycle after the initial payment.', 'pmpro');?></small>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>                                        \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<tr class=\"recurring_info\" <?php if(!pmpro_isLevelRecurring($level)) {?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_limit\"><?php _e('Billing Cycle Limit', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input name=\"billing_limit[]\" type=\"text\" size=\"20\" value=\"<?php echo $level->billing_limit?>\" />\n\t\t\t\t\t\t\t\t\t<br /><small><?php _e('The <strong>total</strong> number of recurring billing cycles for this level, including the trial period (if applicable) but not including the initial payment. Set to zero if membership is indefinite.', 'pmpro');?></small>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>            \t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\t\t\t\t\t<tr class=\"recurring_info\" <?php if (!pmpro_isLevelRecurring($level)) echo \"style='display:none;'\";?>>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Custom Trial', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td><input id=\"custom_trial_<?php echo $level->id?>\" id=\"custom_trial_<?php echo $level->id;?>\" name=\"custom_trial[]\" type=\"checkbox\" value=\"<?php echo $level->id?>\" <?php if ( pmpro_isLevelTrial($level) ) { echo \"checked='checked'\"; } ?> onclick=\"if(jQuery(this).attr('checked')) jQuery(this).parent().parent().siblings('.trial_info').show();\telse jQuery(this).parent().parent().siblings('.trial_info').hide();\" /> <label for=\"custom_trial_<?php echo $level->id;?>\"><?php _e('Check to add a custom trial period.', 'pmpro');?></label></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\n\t\t\t\t\t\t\t<tr class=\"trial_info recurring_info\" <?php if (!pmpro_isLevelTrial($level)) echo \"style='display:none;'\";?>>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"trial_amount\"><?php _e('Trial Billing Amount', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"left\")\n\t\t\t\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<input name=\"trial_amount[]\" type=\"text\" size=\"20\" value=\"<?php echo str_replace(\"\\\"\", \"&quot;\", stripslashes($level->trial_amount))?>\" />\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"right\")\n\t\t\t\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<small><?php _e('for the first', 'pmpro');?></small>\n\t\t\t\t\t\t\t\t\t<input name=\"trial_limit[]\" type=\"text\" size=\"10\" value=\"<?php echo str_replace(\"\\\"\", \"&quot;\", stripslashes($level->trial_limit))?>\" />\n\t\t\t\t\t\t\t\t\t<small><?php _e('subscription payments', 'pmpro');?>.</small>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Membership Expiration', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td><input id=\"expiration_<?php echo $level->id;?>\" name=\"expiration[]\" type=\"checkbox\" value=\"<?php echo $level->id?>\" <?php if(pmpro_isLevelExpiring($level)) { echo \"checked='checked'\"; } ?> onclick=\"if(jQuery(this).is(':checked')) { jQuery(this).parent().parent().siblings('.expiration_info').show(); } else { jQuery(this).parent().parent().siblings('.expiration_info').hide();}\" /> <label for=\"expiration_<?php echo $level->id;?>\"><?php _e('Check this to set when membership access expires.', 'pmpro');?></label></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<tr class=\"expiration_info\" <?php if(!pmpro_isLevelExpiring($level)) {?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_amount\"><?php _e('Expires In', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<input id=\"expiration_number\" name=\"expiration_number[]\" type=\"text\" size=\"10\" value=\"<?php echo str_replace(\"\\\"\", \"&quot;\", stripslashes($level->expiration_number))?>\" />\n\t\t\t\t\t\t\t\t\t<select id=\"expiration_period\" name=\"expiration_period[]\">\n\t\t\t\t\t\t\t\t\t  <?php\n\t\t\t\t\t\t\t\t\t\t$cycles = array( __('Day(s)', 'pmpro') => 'Day', __('Week(s)', 'pmpro') => 'Week', __('Month(s)', 'pmpro') => 'Month', __('Year(s)', 'pmpro') => 'Year' );\n\t\t\t\t\t\t\t\t\t\tforeach ( $cycles as $name => $value ) {\n\t\t\t\t\t\t\t\t\t\t  echo \"<option value='$value'\";\n\t\t\t\t\t\t\t\t\t\t  if ( $level->expiration_period == $value ) echo \" selected='selected'\";\n\t\t\t\t\t\t\t\t\t\t  echo \">$name</option>\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t  ?>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<br /><small><?php _e('Set the duration of membership access. Note that the any future payments (recurring subscription, if any) will be cancelled when the membership expires.', 'pmpro');?></small>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr> \n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t\n\t\t\t\t\t<?php do_action(\"pmpro_discount_code_after_level_settings\", $edit, $level); ?>\n\t\t\t\t\t\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<script>\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t</script>\n\t\t\t\t<?php\n\t\t\t\t}\n\t\t\t?>\n\t\t\t</div>\n\t\t\t\n\t\t\t<p class=\"submit topborder\">\n\t\t\t\t<input name=\"save\" type=\"submit\" class=\"button button-primary\" value=\"Save Code\" /> \t\t\t\t\t\n\t\t\t\t<input name=\"cancel\" type=\"button\" class=\"button button-secondary\" value=\"Cancel\" onclick=\"location.href='<?php echo get_admin_url(NULL, '/admin.php?page=pmpro-discountcodes')?>';\" />\n\t\t\t</p>\n\t\t\t</form>\n\t\t</div>\n\t\t\n\t<?php } else { ?>\t\n\t\n\t\t<h2>\n\t\t\t<?php _e('Memberships Discount Codes', 'pmpro');?>\n\t\t\t<a href=\"admin.php?page=pmpro-discountcodes&edit=-1\" class=\"add-new-h2\"><?php _e('Add New Discount Code', 'pmpro');?></a>\n\t\t</h2>\t\t\n\t\t\n\t\t<?php if(!empty($pmpro_msg)) { ?>\n\t\t\t<div id=\"message\" class=\"<?php if($pmpro_msgt == \"success\") echo \"updated fade\"; else echo \"error\"; ?>\"><p><?php echo $pmpro_msg?></p></div>\n\t\t<?php } ?>\n\t\t\n\t\t<form id=\"posts-filter\" method=\"get\" action=\"\">\t\t\t\n\t\t\t<p class=\"search-box\">\n\t\t\t\t<label class=\"screen-reader-text\" for=\"post-search-input\"><?php _e('Search Discount Codes', 'pmpro');?>:</label>\n\t\t\t\t<input type=\"hidden\" name=\"page\" value=\"pmpro-discountcodes\" />\n\t\t\t\t<input id=\"post-search-input\" type=\"text\" value=\"<?php if(!empty($s)) echo $s;?>\" name=\"s\" size=\"30\" />\n\t\t\t\t<input class=\"button\" type=\"submit\" value=\"<?php _e('Search', 'pmpro');?>\" id=\"search-submit \"/>\n\t\t\t</p>\t\t\n\t\t</form>\t\n\t\t\n\t\t<br class=\"clear\" />\n\t\t<?php\n\t\t\t$sqlQuery = \"SELECT *, UNIX_TIMESTAMP(starts) as starts, UNIX_TIMESTAMP(expires) as expires FROM $wpdb->pmpro_discount_codes \";\n\t\t\tif(!empty($s))\n\t\t\t\t$sqlQuery .= \"WHERE code LIKE '%$s%' \";\n\t\t\t$sqlQuery .= \"ORDER BY id ASC\";\n\t\t\t\n\t\t\t$codes = $wpdb->get_results($sqlQuery, OBJECT);\n\t\t?>\t\t\n\t\t<table class=\"widefat\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th><?php _e('ID', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Code', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Starts', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Expires', 'pmpro');?></th>        \n\t\t\t\t<th><?php _e('Uses', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Levels', 'pmpro');?></th>\n\t\t\t\t<?php do_action(\"pmpro_discountcodes_extra_cols_header\", $codes);?>\n\t\t\t\t<th></th>\t\t\n\t\t\t\t<th></th>\t\t\t\t\t\t\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<?php\n\t\t\t\tif(!$codes)\n\t\t\t\t{\n\t\t\t\t?>\n\t\t\t\t\t<tr><td colspan=\"7\" class=\"pmpro_pad20\">\t\t\t\t\t\n\t\t\t\t\t\t<p><?php _e('Discount codes allow you to offer your memberships at discounted prices to select customers.', 'pmpro');?> <a href=\"admin.php?page=pmpro-discountcodes&edit=-1\"><?php _e('Create your first discount code now', 'pmpro');?></a>.</p>\n\t\t\t\t\t</td></tr>\n\t\t\t\t<?php\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tforeach($codes as $code)\n\t\t\t\t\t{\n\t\t\t\t\t?>\n\t\t\t\t\t<tr<?php if($count++ % 2 == 1) { ?> class=\"alternate\"<?php } ?>>\n\t\t\t\t\t\t<td><?php echo $code->id?></td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<a href=\"?page=pmpro-discountcodes&edit=<?php echo $code->id?>\"><?php echo $code->code?></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php echo date(get_option('date_format'), $code->starts)?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php echo date(get_option('date_format'), $code->expires)?>\n\t\t\t\t\t\t</td>\t\t\t\t\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$uses = $wpdb->get_var(\"SELECT COUNT(*) FROM $wpdb->pmpro_discount_codes_uses WHERE code_id = '\" . $code->id . \"'\");\n\t\t\t\t\t\t\t\tif($code->uses > 0)\n\t\t\t\t\t\t\t\t\techo \"<strong>\" . (int)$uses . \"</strong>/\" . $code->uses;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\techo \"<strong>\" . (int)$uses . \"</strong>/unlimited\";\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$sqlQuery = \"SELECT l.id, l.name FROM $wpdb->pmpro_membership_levels l LEFT JOIN $wpdb->pmpro_discount_codes_levels cl ON l.id = cl.level_id WHERE cl.code_id = '\" . $code->id . \"'\";\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$levels = $wpdb->get_results($sqlQuery);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$level_names = array();\n\t\t\t\t\t\t\t\tforeach($levels as $level)\n\t\t\t\t\t\t\t\t\t$level_names[] = \"<a target=\\\"_blank\\\" href=\\\"\" . pmpro_url(\"checkout\", \"?level=\" . $level->id . \"&discount_code=\" . $code->code) . \"\\\">\" . $level->name . \"</a>\";\n\t\t\t\t\t\t\t\tif($level_names)\n\t\t\t\t\t\t\t\t\techo implode(\", \", $level_names);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\techo \"None\";\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<?php do_action(\"pmpro_discountcodes_extra_cols_body\", $code);?>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<a href=\"?page=pmpro-discountcodes&edit=<?php echo $code->id?>\"><?php _e('edit', 'pmpro');?></a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<a href=\"javascript:askfirst('<?php printf(__('Are you sure you want to delete the %s discount code? The subscriptions for existing users will not change, but new users will not be able to use this code anymore.', 'pmpro'), $code->code);?>', '?page=pmpro-discountcodes&delete=<?php echo $code->id?>'); void(0);\"><?php _e('delete', 'pmpro');?></a>\t\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<?php\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t?>\n\t\t</tbody>\n\t\t</table>\n\t\t\n\t<?php } ?>\n\t\n<?php\n\trequire_once(dirname(__FILE__) . \"/admin_footer.php\");\t\n?>\n", "<?php\n\t//only admins can get this\n\tif(!function_exists(\"current_user_can\") || (!current_user_can(\"manage_options\") && !current_user_can(\"pmpro_membershiplevels\")))\n\t{\n\t\tdie(__(\"You do not have permissions to perform this action.\", \"pmpro\"));\n\t}\t\n\t\n\tglobal $wpdb, $msg, $msgt, $pmpro_currency_symbol;\n\n\t//some vars\n\t$gateway = pmpro_getOption(\"gateway\");\n    $pmpro_level_order = pmpro_getOption('level_order');\n\n\tglobal $pmpro_stripe_error, $pmpro_braintree_error, $pmpro_payflow_error, $pmpro_twocheckout_error, $wp_version;\n\t\n\tif(isset($_REQUEST['edit']))\n\t\t$edit = $_REQUEST['edit'];\t\n\telse\n\t\t$edit = false;\n\tif(isset($_REQUEST['copy']))\n\t\t$copy = $_REQUEST['copy'];\n\tif(isset($_REQUEST['s']))\n\t\t$s = $_REQUEST['s'];\n\telse\n\t\t$s = \"\";\n\t\n\tif(isset($_REQUEST['action']))\n\t\t$action = $_REQUEST['action'];\n\telse\n\t\t$action = false;\n\t\t\n\tif(isset($_REQUEST['saveandnext']))\n\t\t$saveandnext = $_REQUEST['saveandnext'];\n\n\tif(isset($_REQUEST['saveid']))\n\t\t$saveid = $_REQUEST['saveid'];\n\tif(isset($_REQUEST['deleteid']))\n\t\t$deleteid = $_REQUEST['deleteid'];\n\n\tif($action == \"save_membershiplevel\")\n\t{\n\t\t$ml_name = stripslashes($_REQUEST['name']);\n\t\t$ml_description = stripslashes($_REQUEST['description']);\n\t\t$ml_confirmation = stripslashes($_REQUEST['confirmation']);\n\t\t$ml_initial_payment = stripslashes($_REQUEST['initial_payment']);\n\t\tif(!empty($_REQUEST['recurring']))\n\t\t\t$ml_recurring = 1;\n\t\telse\n\t\t\t$ml_recurring = 0;\n\t\t$ml_billing_amount = stripslashes($_REQUEST['billing_amount']);\n\t\t$ml_cycle_number = stripslashes($_REQUEST['cycle_number']);\n\t\t$ml_cycle_period = stripslashes($_REQUEST['cycle_period']);\t\t\n\t\t$ml_billing_limit = stripslashes($_REQUEST['billing_limit']);\n\t\tif(!empty($_REQUEST['custom_trial']))\n\t\t\t$ml_custom_trial = 1;\n\t\telse\n\t\t\t$ml_custom_trial = 0;\n\t\t$ml_trial_amount = stripslashes($_REQUEST['trial_amount']);\n\t\t$ml_trial_limit = stripslashes($_REQUEST['trial_limit']);  \n\t\tif(!empty($_REQUEST['expiration']))\n\t\t\t$ml_expiration = 1;\n\t\telse\n\t\t\t$ml_expiration = 0;\n\t\t$ml_expiration_number = stripslashes($_REQUEST['expiration_number']);\n\t\t$ml_expiration_period = stripslashes($_REQUEST['expiration_period']);\n\t\t$ml_categories = array();\n\t\t\n\t\t//reversing disable to allow here\n\t\tif(empty($_REQUEST['disable_signups']))\n\t\t\t$ml_allow_signups = 1;\n\t\telse\n\t\t\t$ml_allow_signups = 0;\n\n\t\tforeach ( $_REQUEST as $key => $value )\n\t\t{\n\t\t\tif ( $value == 'yes' && preg_match( '/^membershipcategory_(\\d+)$/i', $key, $matches ) )\n\t\t\t{\n\t\t\t\t$ml_categories[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t//clearing out values if checkboxes aren't checked\n\t\tif(empty($ml_recurring))\n\t\t{\n\t\t\t$ml_billing_amount = $ml_cycle_number = $ml_cycle_period = $ml_billing_limit = $ml_trial_amount = $ml_trial_limit = 0;\n\t\t}\n\t\telseif(empty($ml_custom_trial))\n\t\t{\n\t\t\t$ml_trial_amount = $ml_trial_limit = 0;\n\t\t}\n\t\tif(empty($ml_expiration))\n\t\t{\n\t\t\t$ml_expiration_number = $ml_expiration_period = 0;\n\t\t}\n\n\t\tif($saveid > 0)\n\t\t{\n\t\t\t$sqlQuery = \" UPDATE {$wpdb->pmpro_membership_levels}\n\t\t\t\t\t\tSET name = '\" . esc_sql($ml_name) . \"',\n\t\t\t\t\t\t  description = '\" . esc_sql($ml_description) . \"',\n\t\t\t\t\t\t  confirmation = '\" . esc_sql($ml_confirmation) . \"',\n\t\t\t\t\t\t  initial_payment = '\" . esc_sql($ml_initial_payment) . \"',\n\t\t\t\t\t\t  billing_amount = '\" . esc_sql($ml_billing_amount) . \"',\n\t\t\t\t\t\t  cycle_number = '\" . esc_sql($ml_cycle_number) . \"',\n\t\t\t\t\t\t  cycle_period = '\" . esc_sql($ml_cycle_period) . \"',\n\t\t\t\t\t\t  billing_limit = '\" . esc_sql($ml_billing_limit) . \"',\n\t\t\t\t\t\t  trial_amount = '\" . esc_sql($ml_trial_amount) . \"',\n\t\t\t\t\t\t  trial_limit = '\" . esc_sql($ml_trial_limit) . \"',                    \n\t\t\t\t\t\t  expiration_number = '\" . esc_sql($ml_expiration_number) . \"',\n\t\t\t\t\t\t  expiration_period = '\" . esc_sql($ml_expiration_period) . \"',\n\t\t\t\t\t\t  allow_signups = '\" . esc_sql($ml_allow_signups) . \"'\n\t\t\t\t\t\tWHERE id = '$saveid' LIMIT 1;\";\t \n\t\t\t$wpdb->query($sqlQuery);\n\t\t\t\n\t\t\tpmpro_updateMembershipCategories( $saveid, $ml_categories );\n\t\t\tif(!mysql_errno())\n\t\t\t{\n\t\t\t\t$edit = false;\n\t\t\t\t$msg = 2;\n\t\t\t\t$msgt = __(\"Membership level updated successfully.\", \"pmpro\");\n\t\t\t}\n\t\t\telse\n\t\t\t{     \n\t\t\t\t$msg = -2;\n\t\t\t\t$msg = true;\n\t\t\t\t$msgt = __(\"Error updating membership level.\", \"pmpro\");\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$sqlQuery = \" INSERT INTO {$wpdb->pmpro_membership_levels}\n\t\t\t\t\t\t( name, description, confirmation, initial_payment, billing_amount, cycle_number, cycle_period, billing_limit, trial_amount, trial_limit, expiration_number, expiration_period, allow_signups)\n\t\t\t\t\t\tVALUES\n\t\t\t\t\t\t( '\" . esc_sql($ml_name) . \"', '\" . esc_sql($ml_description) . \"', '\" . esc_sql($ml_confirmation) . \"', '\" . esc_sql($ml_initial_payment) . \"', '\" . esc_sql($ml_billing_amount) . \"', '\" . esc_sql($ml_cycle_number) . \"', '\" . esc_sql($ml_cycle_period) . \"', '\" . esc_sql($ml_billing_limit) . \"', '\" . esc_sql($ml_trial_amount) . \"', '\" . esc_sql($ml_trial_limit) . \"', '\" . esc_sql($ml_expiration_number) . \"', '\" . esc_sql($ml_expiration_period) . \"', '\" . esc_sql($ml_allow_signups) . \"' )\";\n\t\t\t$wpdb->query($sqlQuery);\n\t\t\tif(!mysql_errno())\n\t\t\t{\n\t\t\t\t$saveid = $wpdb->insert_id;\n\t\t\t\tpmpro_updateMembershipCategories( $saveid, $ml_categories );\n\t\t\t\t\n\t\t\t\t$edit = false;\n\t\t\t\t$msg = 1;\n\t\t\t\t$msgt = __(\"Membership level added successfully.\", \"pmpro\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$msg = -1;\t\t\t\t\n\t\t\t\t$msgt = __(\"Error adding membership level.\", \"pmpro\");\n\t\t\t}\n\t\t}\n\t\t\n\t\tdo_action(\"pmpro_save_membership_level\", $saveid);\n\t}\t\n\telseif($action == \"delete_membership_level\")\n\t{\n\t\tglobal $wpdb;\n\n\t\t$ml_id = $_REQUEST['deleteid'];\n\t  \n\t\tif($ml_id > 0)\n\t\t{\t  \n\t\t\tdo_action(\"pmpro_delete_membership_level\", $ml_id);\n\t\t\t\n\t\t\t//remove any categories from the ml\n\t\t\t$sqlQuery = \"DELETE FROM $wpdb->pmpro_memberships_categories WHERE membership_id = '$ml_id'\";\t  \t\t\t\n\t\t\t$r1 = $wpdb->query($sqlQuery);\n\t\t\t\t\t\t\t\n\t\t\t//cancel any subscriptions to the ml\n\t\t\t$r2 = true;\n\t\t\t$user_ids = $wpdb->get_col(\"SELECT user_id FROM $wpdb->pmpro_memberships_users WHERE membership_id = '$ml_id' AND status = 'active'\");\t\t\t\n\t\t\tforeach($user_ids as $user_id)\n\t\t\t{\n\t\t\t\t//change there membership level to none. that will handle the cancel\n\t\t\t\tif(pmpro_changeMembershipLevel(0, $user_id))\n\t\t\t\t{\n\t\t\t\t\t//okay\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//couldn't delete the subscription\n\t\t\t\t\t//we should probably notify the admin\t\n\t\t\t\t\t$pmproemail = new PMProEmail();\t\t\t\n\t\t\t\t\t$pmproemail->data = array(\"body\"=>\"<p>\" . sprintf(__(\"There was an error canceling the subscription for user with ID=%d. You will want to check your payment gateway to see if their subscription is still active.\", \"pmpro\"), $user_id) . \"</p>\");\n\t\t\t\t\t$last_order = $wpdb->get_row(\"SELECT * FROM $wpdb->pmpro_membership_orders WHERE user_id = '\" . $user_id . \"' ORDER BY timestamp DESC LIMIT 1\");\n\t\t\t\t\tif($last_order)\n\t\t\t\t\t\t$pmproemail->data[\"body\"] .= \"<p>\" . __(\"Last Invoice\", \"pmpro\") . \":<br />\" . nl2br(var_export($last_order, true)) . \"</p>\";\n\t\t\t\t\t$pmproemail->sendEmail(get_bloginfo(\"admin_email\"));\t\n\n\t\t\t\t\t$r2 = false;\n\t\t\t\t}\t\n\t\t\t}\t\t\t\t\t\n\t\t\t\n\t\t\t//delete the ml\n\t\t\t$sqlQuery = \"DELETE FROM $wpdb->pmpro_membership_levels WHERE id = '$ml_id' LIMIT 1\";\t  \t\t\t\n\t\t\t$r3 = $wpdb->query($sqlQuery);\n\t\t\t\t\t\n\t\t\tif($r1 !== FALSE && $r2 !== FALSE && $r3 !== FALSE)\n\t\t\t{\n\t\t\t\t$msg = 3;\n\t\t\t\t$msgt = __(\"Membership level deleted successfully.\", \"pmpro\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$msg = -3;\n\t\t\t\t$msgt = __(\"Error deleting membership level.\", \"pmpro\");\t\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$msg = -3;\n\t\t\t$msgt = __(\"Error deleting membership level.\", \"pmpro\");\n\t\t}\n\t}  \n\t\t\n\trequire_once(dirname(__FILE__) . \"/admin_header.php\");\t\t\n?>\n\n<?php\t\t\n\tif($edit)\n\t{\t\t\t\n\t?>\n\t\t\n\t<h2>\n\t\t<?php\n\t\t\tif($edit > 0)\n\t\t\t\techo __(\"Edit Membership Level\", \"pmpro\");\n\t\t\telse\n\t\t\t\techo __(\"Add New Membership Level\", \"pmpro\");\n\t\t?>\n\t</h2>\n\t\t\n\t<div>\n\t\t<?php\n\t\t\t// get the level...\n\t\t\tif(!empty($edit) && $edit > 0)\n\t\t\t{\n\t\t\t\t$level = $wpdb->get_row(\"SELECT * FROM $wpdb->pmpro_membership_levels WHERE id = '$edit' LIMIT 1\", OBJECT);\n\t\t\t\t$temp_id = $level->id;\n\t\t\t}\n\t\t\telseif(!empty($copy) && $copy > 0)\t\t\n\t\t\t{\t\n\t\t\t\t$level = $wpdb->get_row(\"SELECT * FROM $wpdb->pmpro_membership_levels WHERE id = '$copy' LIMIT 1\", OBJECT);\n\t\t\t\t$temp_id = $level->id;\n\t\t\t\t$level->id = NULL;\n\t\t\t}\n\t\t\telse\n\n\t\t\t// didn't find a membership level, let's add a new one...\n\t\t\tif(empty($level))\n\t\t\t{\n\t\t\t\t$level = new stdClass();\n\t\t\t\t$level->id = NULL;\n\t\t\t\t$level->name = NULL;\n\t\t\t\t$level->description = NULL;\n\t\t\t\t$level->confirmation = NULL;\n\t\t\t\t$level->billing_amount = NULL;\n\t\t\t\t$level->trial_amount = NULL;\n\t\t\t\t$level->initial_payment = NULL;\n\t\t\t\t$level->billing_limit = NULL;\n\t\t\t\t$level->trial_limit = NULL;\n\t\t\t\t$level->expiration_number = NULL;\n\t\t\t\t$level->expiration_period = NULL;\n\t\t\t\t$edit = -1;\n\t\t\t}\t\n\n\t\t\t//defaults for new levels\n\t\t\tif(empty($copy) && $edit == -1)\n\t\t\t{\t\t\t\n\t\t\t\t$level->cycle_number = 1;\n\t\t\t\t$level->cycle_period = \"Month\";\n\t\t\t}\n\t\t\t\n\t\t\t// grab the categories for the given level...\n\t\t\tif(!empty($temp_id))\n\t\t\t\t$level->categories = $wpdb->get_col(\"SELECT c.category_id\n\t\t\t\t\t\t\t\t\t\t\t\tFROM $wpdb->pmpro_memberships_categories c\n\t\t\t\t\t\t\t\t\t\t\t\tWHERE c.membership_id = '\" . $temp_id . \"'\");       \t\t\n\t\t\tif(empty($level->categories))\n\t\t\t\t$level->categories = array();\t\n\t\t\t\n\t\t?>\n\t\t<form action=\"\" method=\"post\" enctype=\"multipart/form-data\">\n\t\t\t<input name=\"saveid\" type=\"hidden\" value=\"<?php echo $edit?>\" />\n\t\t\t<input type=\"hidden\" name=\"action\" value=\"save_membershiplevel\" />\n\t\t\t<table class=\"form-table\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('ID', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php echo $level->id?>\t\t\t\t\t\t\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\t\t\t\t\t\t\t\t                \n\t\t\t\t\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"name\"><?php _e('Name', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td><input name=\"name\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($level->name);?>\" /></td>\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"description\"><?php _e('Description', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<div id=\"poststuff\" class=\"pmpro_description\">\t\t\t\t\t\t\n\t\t\t\t\t\t<?php \t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(version_compare($wp_version, \"3.3\") >= 0)\n\t\t\t\t\t\t\t\twp_editor($level->description, \"description\", array(\"textarea_rows\"=>5)); \n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<textarea rows=\"10\" cols=\"80\" name=\"description\" id=\"description\"><?php echo esc_textarea($level->description);?></textarea>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\t\n\t\t\t\t\t\t</div>    \n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"confirmation\"><?php _e('Confirmation Message', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<div class=\"pmpro_confirmation\">\t\t\t\t\t\n\t\t\t\t\t\t<?php \n\t\t\t\t\t\t\tif(version_compare($wp_version, \"3.3\") >= 0)\n\t\t\t\t\t\t\t\twp_editor($level->confirmation, \"confirmation\", array(\"textarea_rows\"=>5)); \n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<textarea rows=\"10\" cols=\"80\" name=\"confirmation\" id=\"confirmation\"><?php echo esc_textarea($level->confirmation);?></textarea>\t\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\t\n\t\t\t\t\t\t</div>    \n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t\n\t\t<h3 class=\"topborder\"><?php _e('Billing Details', 'pmpro');?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"initial_payment\"><?php _e('Initial Payment', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"left\")\n\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<input name=\"initial_payment\" type=\"text\" size=\"20\" value=\"<?php echo esc_attr($level->initial_payment);?>\" /> \n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"right\")\n\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<small><?php _e('The initial amount collected at registration.', 'pmpro');?></small></td>\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Recurring Subscription', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td><input id=\"recurring\" name=\"recurring\" type=\"checkbox\" value=\"yes\" <?php if(pmpro_isLevelRecurring($level)) { echo \"checked='checked'\"; } ?> onclick=\"if(jQuery('#recurring').is(':checked')) { jQuery('.recurring_info').show(); if(jQuery('#custom_trial').is(':checked')) {jQuery('.trial_info').show();} else {jQuery('.trial_info').hide();} } else { jQuery('.recurring_info').hide();}\" /> <label for=\"recurring\"><?php _e('Check if this level has a recurring subscription payment.', 'pmpro');?></label></td>\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t<tr class=\"recurring_info\" <?php if(!pmpro_isLevelRecurring($level)) {?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_amount\"><?php _e('Billing Amount', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"left\")\n\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<input name=\"billing_amount\" type=\"text\" size=\"20\" value=\"<?php echo esc_attr($level->billing_amount);?>\" /> \n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"right\")\n\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<small><?php _e('per', 'pmpro');?></small>\n\t\t\t\t\t\t<input id=\"cycle_number\" name=\"cycle_number\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($level->cycle_number);?>\" />\n\t\t\t\t\t\t<select id=\"cycle_period\" name=\"cycle_period\">\n\t\t\t\t\t\t  <?php\n\t\t\t\t\t\t\t$cycles = array( __('Day(s)', 'pmpro') => 'Day', __('Week(s)', 'pmpro') => 'Week', __('Month(s)', 'pmpro') => 'Month', __('Year(s)', 'pmpro') => 'Year' );\n\t\t\t\t\t\t\tforeach ( $cycles as $name => $value ) {\n\t\t\t\t\t\t\t  echo \"<option value='$value'\";\n\t\t\t\t\t\t\t  if ( $level->cycle_period == $value ) echo \" selected='selected'\";\n\t\t\t\t\t\t\t  echo \">$name</option>\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  ?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<br /><small>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<?php _e('The amount to be billed one cycle after the initial payment.', 'pmpro');?>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<?php if($gateway == \"stripe\") { ?>\n\t\t\t\t\t\t\t\t<br /><strong <?php if(!empty($pmpro_stripe_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('Stripe integration currently only supports billing periods of \"Week\", \"Month\" or \"Year\".', 'pmpro');?>\n\t\t\t\t\t\t\t<?php } elseif($gateway == \"braintree\") { ?>\n\t\t\t\t\t\t\t\t<br /><strong <?php if(!empty($pmpro_braintree_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('Braintree integration currently only supports billing periods of \"Month\" or \"Year\".', 'pmpro');?>\t\t\t\t\t\t\n\t\t\t\t\t\t\t<?php } elseif($gateway == \"payflowpro\") { ?>\n\t\t\t\t\t\t\t\t<br /><strong <?php if(!empty($pmpro_payflow_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('Payflow integration currently only supports billing frequencies of 1 and billing periods of \"Week\", \"Month\" or \"Year\".', 'pmpro');?>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</small>\t\n\t\t\t\t\t\t<?php if($gateway == \"braintree\" && $edit < 0) { ?>\n\t\t\t\t\t\t\t<p class=\"pmpro_message\"><strong><?php _e('Note', 'pmpro');?>:</strong> <?php _e('After saving this level, make note of the ID and create a \"Plan\" in your Braintree dashboard with the same settings and the \"Plan ID\" set to <em>pmpro_#</em>, where # is the level ID.', 'pmpro');?></p>\n\t\t\t\t\t\t<?php } elseif($gateway == \"braintree\") { ?>\n\t\t\t\t\t\t\t<p class=\"pmpro_message\"><strong><?php _e('Note', 'pmpro');?>:</strong> <?php _e('You will need to create a \"Plan\" in your Braintree dashboard with the same settings and the \"Plan ID\" set to', 'pmpro');?> <em>pmpro_<?php echo $level->id;?></em>.</p>\n\t\t\t\t\t\t<?php } ?>\t\t\t\t\t\t\n\t\t\t\t\t</td>\n\t\t\t\t</tr>                                        \n\t\t\t\t\n\t\t\t\t<tr class=\"recurring_info\" <?php if(!pmpro_isLevelRecurring($level)) {?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_limit\"><?php _e('Billing Cycle Limit', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input name=\"billing_limit\" type=\"text\" size=\"20\" value=\"<?php echo $level->billing_limit?>\" />\n\t\t\t\t\t\t<br /><small>\n\t\t\t\t\t\t\t<?php _e('The <strong>total</strong> number of recurring billing cycles for this level, including the trial period (if applicable) but not including the initial payment. Set to zero if membership is indefinite.', 'pmpro');?>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<?php if($gateway == \"stripe\") { ?>\n\t\t\t\t\t\t\t\t<br /><strong <?php if(!empty($pmpro_stripe_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('Stripe integration currently does not support billing limits. You can still set an expiration date below.', 'pmpro');?></strong>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>            \t\t\t\t\t\t\t\t\n\n\t\t\t\t<tr class=\"recurring_info\" <?php if (!pmpro_isLevelRecurring($level)) echo \"style='display:none;'\";?>>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Custom Trial', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input id=\"custom_trial\" name=\"custom_trial\" type=\"checkbox\" value=\"yes\" <?php if ( pmpro_isLevelTrial($level) ) { echo \"checked='checked'\"; } ?> onclick=\"jQuery('.trial_info').toggle();\" /> <label for=\"custom_trial\"><?php _e('Check to add a custom trial period.', 'pmpro');?></label>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t<?php if($gateway == \"twocheckout\") { ?>\n\t\t\t\t\t\t\t<br /><small><strong <?php if(!empty($pmpro_twocheckout_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('2Checkout integration does not support custom trials. You can do one period trials by setting an initial payment different from the billing amount.', 'pmpro');?></strong></small>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr class=\"trial_info recurring_info\" <?php if (!pmpro_isLevelTrial($level)) echo \"style='display:none;'\";?>>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"trial_amount\"><?php _e('Trial Billing Amount', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"left\")\n\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<input name=\"trial_amount\" type=\"text\" size=\"20\" value=\"<?php echo esc_attr($level->trial_amount);?>\" />\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"right\")\n\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<small><?php _e('for the first', 'pmpro');?></small>\n\t\t\t\t\t\t<input name=\"trial_limit\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($level->trial_limit);?>\" />\n\t\t\t\t\t\t<small><?php _e('subscription payments', 'pmpro');?>.</small>\t\n\t\t\t\t\t\t<?php if($gateway == \"stripe\") { ?>\n\t\t\t\t\t\t\t<br /><small>\n\t\t\t\t\t\t\t<strong <?php if(!empty($pmpro_stripe_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('Stripe integration currently does not support trial amounts greater than $0.', 'pmpro');?></strong>\n\t\t\t\t\t\t\t</small>\t\t\t\t\t\t\t\n\t\t\t\t\t\t<?php } elseif($gateway == \"braintree\") { ?>\n\t\t\t\t\t\t\t<br /><small>\n\t\t\t\t\t\t\t<strong <?php if(!empty($pmpro_braintree_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('Braintree integration currently does not support trial amounts greater than $0.', 'pmpro');?></strong>\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t<?php } elseif($gateway == \"payflowpro\") { ?>\n\t\t\t\t\t\t\t<br /><small>\n\t\t\t\t\t\t\t<strong <?php if(!empty($pmpro_payflow_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('Payflow integration currently does not support trial amounts greater than $0.', 'pmpro');?></strong>\n\t\t\t\t\t\t\t</small>\t\t\t\t\t\t\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t \n\t\t\t</tbody>\n\t\t</table>\n\t\t\t\t\n\t\t<h3 class=\"topborder\"><?php _e('Other Settings', 'pmpro');?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Disable New Signups', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td><input id=\"disable_signups\" name=\"disable_signups\" type=\"checkbox\" value=\"yes\" <?php if($level->id && !$level->allow_signups) { ?>checked=\"checked\"<?php } ?> /> <label for=\"disable_signups\"><?php _e('Check to hide this level from the membership levels page and disable registration.', 'pmpro');?></label></td>\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Membership Expiration', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td><input id=\"expiration\" name=\"expiration\" type=\"checkbox\" value=\"yes\" <?php if(pmpro_isLevelExpiring($level)) { echo \"checked='checked'\"; } ?> onclick=\"if(jQuery('#expiration').is(':checked')) { jQuery('.expiration_info').show(); } else { jQuery('.expiration_info').hide();}\" /> <label for=\"expiration\"><?php _e('Check this to set when membership access expires.', 'pmpro');?></a></td>\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t<tr class=\"expiration_info\" <?php if(!pmpro_isLevelExpiring($level)) {?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_amount\"><?php _e('Expires In', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\t\t\t\t\t\t\t\n\t\t\t\t\t\t<input id=\"expiration_number\" name=\"expiration_number\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($level->expiration_number);?>\" />\n\t\t\t\t\t\t<select id=\"expiration_period\" name=\"expiration_period\">\n\t\t\t\t\t\t  <?php\n\t\t\t\t\t\t\t$cycles = array( __('Day(s)', 'pmpro') => 'Day', __('Week(s)', 'pmpro') => 'Week', __('Month(s)', 'pmpro') => 'Month', __('Year(s)', 'pmpro') => 'Year' );\n\t\t\t\t\t\t\tforeach ( $cycles as $name => $value ) {\n\t\t\t\t\t\t\t  echo \"<option value='$value'\";\n\t\t\t\t\t\t\t  if ( $level->expiration_period == $value ) echo \" selected='selected'\";\n\t\t\t\t\t\t\t  echo \">$name</option>\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  ?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<br /><small><?php _e('Set the duration of membership access. Note that the any future payments (recurring subscription, if any) will be cancelled when the membership expires.', 'pmpro');?></small>\t\t\t\t\t\t\t\n\t\t\t\t\t</td>\n\t\t\t\t</tr> \t\t\t\t\t\t\t\t\n\t\t\t</tbody>\n\t\t</table>\n\t\t\n\t\t<?php do_action(\"pmpro_membership_level_after_other_settings\"); ?>\t\t\t\t\n\t\t\n\t\t<h3 class=\"topborder\"><?php _e('Content Settings', 'pmpro');?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Categories', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t$categories = get_categories( array( 'hide_empty' => 0 ) );\n\t\t\t\t\t\techo \"<ul>\";\n\t\t\t\t\t\tforeach ( $categories as $cat )\n\t\t\t\t\t\t{                               \t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$checked = in_array( $cat->term_id, $level->categories ) ? \"checked='checked'\" : '';\n\t\t\t\t\t\t\techo \"<li><input id='membershipcategory_{$cat->term_id}' name='membershipcategory_{$cat->term_id}' type='checkbox' value='yes' $checked /> <label for='membershipcategory_{$cat->term_id}'>{$cat->name}</label></li>\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\techo \"</ul>\";\n\t\t\t\t\t\t?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\t\t\t\t\n\t\t<p class=\"submit topborder\">\n\t\t\t<input name=\"save\" type=\"submit\" class=\"button-primary\" value=\"<?php _e('Save Level', 'pmpro'); ?>\" /> \t\t\t\t\t\n\t\t\t<input name=\"cancel\" type=\"button\" value=\"<?php _e('Cancel', 'pmpro'); ?>\" onclick=\"location.href='<?php echo get_admin_url(NULL, '/admin.php?page=pmpro-membershiplevels')?>';\" /> \t\t\t\t\t\n\t\t</p>\n\t</form>\n\t</div>\n\t\t\n\t<?php\n\t}\t\n\telse\n\t{\n\t?>\n        <script>\n            jQuery(document).ready(function($) {\n\n                // Return a helper with preserved width of cells\n                // from http://www.foliotek.com/devblog/make-table-rows-sortable-using-jquery-ui-sortable/\n                var fixHelper = function(e, ui) {\n                    ui.children().each(function() {\n                        $(this).width($(this).width());\n                    });\n                    return ui;\n                };\n\n                $(\"table.membership-levels tbody\").sortable({\n                    helper: fixHelper,\n                    placeholder: 'testclass',\n                    forcePlaceholderSize: true,\n                    update: update_level_order\n                });\n\n                function update_level_order(event, ui) {\n                    level_order = [];\n                    $(\"table.membership-levels tbody tr\").each(function() {\n                        $(this).removeClass('alternate');\n                        level_order.push(parseInt( $(\"td:first\", this).text()));\n                    });\n\n                    //update styles\n                    $(\"table.membership-levels tbody tr:odd\").each(function() {\n                        $(this).addClass('alternate');\n                    });\n\n                    data = {\n                        action: 'pmpro_update_level_order',\n                        level_order: level_order\n                    };\n\n                    $.post(ajaxurl, data, function(response) {\n                    });\n                }\n            });\n        </script>\n\t\t\t\t\n\t<h2 class=\"alignleft\"><?php _e('Membership Levels', 'pmpro');?> <a href=\"admin.php?page=pmpro-membershiplevels&edit=-1\" class=\"add-new-h2\"><?php _e('Add New Level', 'pmpro');?></a></h2>\n\t<form id=\"posts-filter\" method=\"get\" action=\"\">\t\t\t\n\t\t<p class=\"search-box\">\n\t\t\t<label class=\"screen-reader-text\" for=\"post-search-input\"><?php _e('Search Levels', 'pmpro');?>:</label>\n\t\t\t<input type=\"hidden\" name=\"page\" value=\"pmpro-membershiplevels\" />\n\t\t\t<input id=\"post-search-input\" type=\"text\" value=\"<?php echo $s?>\" name=\"s\" size=\"30\" />\n\t\t\t<input class=\"button\" type=\"submit\" value=\"<?php _e('Search Levels', 'pmpro');?>\" id=\"search-submit\" />\n\t\t</p>\n\t</form>\t\n\t<br class=\"clear\" />\n    <p><?php _e('Drag and drop membership levels to reorder them on the Levels page.', 'pmpro'); ?></p>\n    <table class=\"widefat membership-levels\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th><?php _e('ID', 'pmpro');?></th>\n\t\t\t<th><?php _e('Name', 'pmpro');?></th>\n\t\t\t<th><?php _e('Billing Details', 'pmpro');?></th>\n\t\t\t<th><?php _e('Expiration', 'pmpro');?></th>\n\t\t\t<th><?php _e('Allow Signups', 'pmpro');?></th>\n\t\t\t<th></th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<?php\n\t\t\t$sqlQuery = \"SELECT * FROM $wpdb->pmpro_membership_levels \";\n\t\t\tif($s)\n\t\t\t\t$sqlQuery .= \"WHERE name LIKE '%$s%' \";\n\t\t\t$sqlQuery .= \"ORDER BY id ASC\";\n\t\t\t\n\t\t\t$levels = $wpdb->get_results($sqlQuery, OBJECT);\t\t\t\t\t\t\n\t\t\t\n            if(!empty($pmpro_level_order)) {\n                //reorder levels\n                $order = explode(',', $pmpro_level_order);\n\t\t\t\t\n\t\t\t\t//put level ids in their own array\n\t\t\t\t$level_ids = array();\n\t\t\t\tforeach($levels as $level)\n\t\t\t\t\t$level_ids[] = $level->id;\n\t\t\t\t\n\t\t\t\t//remove levels from order if they are gone\n\t\t\t\tforeach($order as $key => $level_id)\n\t\t\t\t\tif(!in_array($level_id, $level_ids))\n\t\t\t\t\t\tunset($order[$key]);\n\t\t\t\t\t\t\n\t\t\t\t//add levels to the end if they aren't in the order array\n\t\t\t\tforeach($level_ids as $level_id)\n\t\t\t\t\tif(!in_array($level_id, $order))\n\t\t\t\t\t\t$order[] = $level_id;\n\t\t\t\t\n\t\t\t\t//remove dupes\n\t\t\t\t$order = array_unique($order);\n\t\t\t\t\n\t\t\t\t//save the level order\n\t\t\t\tpmpro_setOption('level_order', implode(',', $order));\n\n\t\t\t\t//reorder levels here\n                $reordered_levels = array();\n                foreach ($order as $level_id) {\n                    foreach ($levels as $level) {\n                        if ($level_id == $level->id)\n                            $reordered_levels[] = $level;\n                    }\n                }\t\t\t\t\t\t\t\t\n            }\n\t\t\telse\n\t\t\t\t$reordered_levels = $levels;\n\n\t\t\t$count = 0;\n\t\t\tforeach($reordered_levels as $level)\n\t\t\t{\n\t\t?>\n\t\t<tr class=\"<?php if($count++ % 2 == 1) { ?>alternate<?php } ?> <?php if(!$level->allow_signups) { ?>pmpro_gray<?php } ?> <?php if(!pmpro_checkLevelForStripeCompatibility($level) || !pmpro_checkLevelForBraintreeCompatibility($level) || !pmpro_checkLevelForPayflowCompatibility($level) || !pmpro_checkLevelForTwoCheckoutCompatibility($level)) { ?>pmpro_error<?php } ?>\">\t\t\t\n\t\t\t<td><?php echo $level->id?></td>\n\t\t\t<td class=\"level_name\"><a href=\"admin.php?page=pmpro-membershiplevels&edit=<?php echo $level->id?>\"><?php echo $level->name?></a></td>\n\t\t\t<td>\n\t\t\t\t<?php if(pmpro_isLevelFree($level)) { ?>\n\t\t\t\t\t<?php _e('FREE', 'pmpro');?>\n\t\t\t\t<?php } else { ?>\n\t\t\t\t\t<?php echo str_replace( 'The price for membership is', '', pmpro_getLevelCost($level)); ?>\n\t\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<?php if(!pmpro_isLevelExpiring($level)) { ?>\n\t\t\t\t\t--\n\t\t\t\t<?php } else { ?>\t\t\n\t\t\t\t\t<?php _e('After', 'pmpro');?> <?php echo $level->expiration_number?> <?php echo sornot($level->expiration_period,$level->expiration_number)?>\n\t\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<td><?php if($level->allow_signups) { ?><a href=\"<?php echo pmpro_url(\"checkout\", \"?level=\" . $level->id);?>\"><?php _e('Yes', 'pmpro');?></a><?php } else { ?><?php _e('No', 'pmpro');?><?php } ?></td>\n\n\t\t\t<td><a title=\"<?php _e('edit','pmpro'); ?>\" href=\"admin.php?page=pmpro-membershiplevels&edit=<?php echo $level->id?>\" class=\"button-primary\"><?php _e('edit','pmpro'); ?></a>&nbsp;<a title=\"<?php _e('copy','pmpro'); ?>\" href=\"admin.php?page=pmpro-membershiplevels&copy=<?php echo $level->id?>&edit=-1\" class=\"button-secondary\"><?php _e('copy','pmpro'); ?></a>&nbsp;<a title=\"<?php _e('delete','pmpro'); ?>\" href=\"javascript: askfirst('<?php printf(__(\"Are you sure you want to delete membership level %s? All subscriptions will be cancelled.\", \"pmpro\"), $level->name);?>','admin.php?page=pmpro-membershiplevels&action=delete_membership_level&deleteid=<?php echo $level->id?>'); void(0);\" class=\"button-secondary\"><?php _e('delete','pmpro'); ?></a></td>\n\t\t</tr>\n\t\t<?php\n\t\t\t}\n\t\t?>\n\t</tbody>\n\t</table>\t\n\t<?php\n\t}\n\t?>\t\t\n\t\n<?php\n\trequire_once(dirname(__FILE__) . \"/admin_footer.php\");\t\n?>", "<?php\n\t//only admins can get this\n\tif(!function_exists(\"current_user_can\") || (!current_user_can(\"manage_options\") && !current_user_can(\"pmpro_memberslistcsv\")))\n\t{\n\t\tdie(__(\"You do not have permissions to perform this action.\", \"pmpro\"));\n\t}\n\n\tglobal $wpdb;\n\n\t//get users\n\tif(isset($_REQUEST['s']))\n\t\t$s = $_REQUEST['s'];\n\telse\n\t\t$s = \"\";\n\n\tif(isset($_REQUEST['l']))\n\t\t$l = $_REQUEST['l'];\n\telse\n\t\t$l = false;\n\n\t//some vars for the search\n\tif(!empty($_REQUEST['pn']))\n\t\t$pn = intval($_REQUEST['pn']);\n\telse\n\t\t$pn = 1;\n\n\tif(!empty($_REQUEST['limit']))\n\t\t$limit = intval($_REQUEST['limit']);\n\telse\n\t\t$limit = false;\n\n\tif($limit)\n\t{\n\t\t$end = $pn * $limit;\n\t\t$start = $end - $limit;\n\t}\n\telse\n\t{\n\t\t$end = NULL;\n\t\t$start = NULL;\n\t}\n\n    if($s)\n    {\n        $sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS u.ID, u.user_login, u.user_email, UNIX_TIMESTAMP(u.user_registered) as joindate, mu.membership_id, mu.initial_payment, mu.billing_amount, mu.cycle_period, mu.cycle_number, mu.billing_limit, mu.trial_amount, mu.trial_limit, UNIX_TIMESTAMP(mu.startdate) as startdate, UNIX_TIMESTAMP(mu.enddate) as enddate, m.name as membership FROM $wpdb->users u LEFT JOIN $wpdb->usermeta um ON u.ID = um.user_id LEFT JOIN $wpdb->pmpro_memberships_users mu ON u.ID = mu.user_id LEFT JOIN $wpdb->pmpro_membership_levels m ON mu.membership_id = m.id \";\n\n        if($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n            $sqlQuery .= \" LEFT JOIN $wpdb->pmpro_memberships_users mu2 ON u.ID = mu2.user_id AND mu2.status = 'active' \";\n\n        $sqlQuery .= \" WHERE mu.membership_id > 0 AND (u.user_login LIKE '%\" . esc_sql($s) . \"%' OR u.user_email LIKE '%\" . esc_sql($s) . \"%' OR um.meta_value LIKE '%\" . esc_sql($s) . \"%') \";\n\n        if($l == \"oldmembers\")\n            $sqlQuery .= \" AND mu.status <> 'active' AND mu2.status IS NULL \";\n        elseif($l == \"expired\")\n            $sqlQuery .= \" AND mu.status = 'expired' AND mu2.status IS NULL \";\n        elseif($l == \"cancelled\")\n            $sqlQuery .= \" AND mu.status IN('cancelled', 'admin_cancelled') AND mu2.status IS NULL \";\n        elseif($l)\n            $sqlQuery .= \" AND mu.status = 'active' AND mu.membership_id = '\" . esc_sql($l) . \"' \";\n        else\n            $sqlQuery .= \" AND mu.status = 'active' \";\n\n        $sqlQuery .= \"GROUP BY u.ID \";\n\n        if($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n            $sqlQuery .= \"ORDER BY enddate DESC \";\n        else\n            $sqlQuery .= \"ORDER BY u.user_registered DESC \";\n\n        if(!empty($limit))\n            $sqlQuery .= \"LIMIT $start, $limit\";\n    }\n    else\n    {\n        $sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS u.ID, u.user_login, u.user_email, UNIX_TIMESTAMP(u.user_registered) as joindate, mu.membership_id, mu.initial_payment, mu.billing_amount, mu.cycle_period, mu.cycle_number, mu.billing_limit, mu.trial_amount, mu.trial_limit, UNIX_TIMESTAMP(mu.startdate) as startdate, UNIX_TIMESTAMP(mu.enddate) as enddate, m.name as membership FROM $wpdb->users u LEFT JOIN $wpdb->pmpro_memberships_users mu ON u.ID = mu.user_id LEFT JOIN $wpdb->pmpro_membership_levels m ON mu.membership_id = m.id\";\n\n        if($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n            $sqlQuery .= \" LEFT JOIN $wpdb->pmpro_memberships_users mu2 ON u.ID = mu2.user_id AND mu2.status = 'active' \";\n\n        $sqlQuery .= \" WHERE mu.membership_id > 0  \";\n\n        if($l == \"oldmembers\")\n            $sqlQuery .= \" AND mu.status <> 'active' AND mu2.status IS NULL \";\n        elseif($l == \"expired\")\n            $sqlQuery .= \" AND mu.status = 'expired' AND mu2.status IS NULL \";\n        elseif($l == \"cancelled\")\n            $sqlQuery .= \" AND mu.status IN('cancelled', 'admin_cancelled') AND mu2.status IS NULL \";\n        elseif($l)\n            $sqlQuery .= \" AND mu.status = 'active' AND mu.membership_id = '\" . esc_sql($l) . \"' \";\n        else\n            $sqlQuery .= \" AND mu.status = 'active' \";\n        $sqlQuery .= \"GROUP BY u.ID \";\n\n        if($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n            $sqlQuery .= \"ORDER BY enddate DESC \";\n        else\n            $sqlQuery .= \"ORDER BY u.user_registered DESC \";\n\n        if(!empty($limit))\n            $sqlQuery .= \"LIMIT $start, $limit\";\n    }\n\n\t//filter\n\t$sqlQuery = apply_filters(\"pmpro_members_list_sql\", $sqlQuery);\n\n\t//get users\n\t$theusers = $wpdb->get_col($sqlQuery);\n\n\t//begin output\n\theader(\"Content-type: text/csv\");\n\tif($s && $l == \"oldmembers\")\n\t\theader(\"Content-Disposition: attachment; filename=members_list_expired_\" . sanitize_file_name($s) . \".csv\");\n\telseif($s && $l)\n\t\theader(\"Content-Disposition: attachment; filename=members_list_\" . intval($l) . \"_level_\" . sanitize_file_name($s) . \".csv\");\n\telseif($s)\n\t\theader(\"Content-Disposition: attachment; filename=members_list_\" . sanitize_file_name($s) . \".csv\");\n\telseif($l == \"oldmembers\")\n\t\theader(\"Content-Disposition: attachment; filename=members_list_expired.csv\");\n\telse\n\t\theader(\"Content-Disposition: attachment; filename=members_list.csv\");\n\n\t$heading = \"id,username,firstname,lastname,email,billing firstname,billing lastname,address1,address2,city,state,zipcode,country,phone,membership,initial payment,fee,term,discount_code_id,discount_code,joined\";\n\n\tif($l == \"oldmembers\")\n\t\t$heading .= \",ended\";\n\telse\n\t\t$heading .= \",expires\";\n\n\t$heading = apply_filters(\"pmpro_members_list_csv_heading\", $heading);\n\t$csvoutput = $heading;\n\n\t//these are the meta_keys for the fields (arrays are object, property. so e.g. $theuser->ID)\n\t$default_columns = array(\n\t\tarray(\"theuser\", \"ID\"),\n\t\tarray(\"theuser\", \"user_login\"),\n\t\tarray(\"metavalues\", \"first_name\"),\n\t\tarray(\"metavalues\", \"last_name\"),\n\t\tarray(\"theuser\", \"user_email\"),\n\t\tarray(\"metavalues\", \"pmpro_bfirstname\"),\n\t\tarray(\"metavalues\", \"pmpro_blastname\"),\n\t\tarray(\"metavalues\", \"pmpro_baddress1\"),\n\t\tarray(\"metavalues\", \"pmpro_baddress2\"),\n\t\tarray(\"metavalues\", \"pmpro_bcity\"),\n\t\tarray(\"metavalues\", \"pmpro_bstate\"),\n\t\tarray(\"metavalues\", \"pmpro_bzipcode\"),\n\t\tarray(\"metavalues\", \"pmpro_bcountry\"),\n\t\tarray(\"metavalues\", \"pmpro_bphone\"),\n\t\tarray(\"theuser\", \"membership\"),\n\t\tarray(\"theuser\", \"initial_payment\"),\n\t\tarray(\"theuser\", \"billing_amount\"),\n\t\tarray(\"theuser\", \"cycle_period\"),\n\t\tarray(\"discount_code\", \"id\"),\n\t\tarray(\"discount_code\", \"code\")\n\t\t//joindate and enddate are handled specifically below\n\t);\n\n\t//filter\n\t$default_columns = apply_filters(\"pmpro_members_list_csv_default_columns\", $default_columns);\n\n\t//any extra columns\n\t$extra_columns = apply_filters(\"pmpro_members_list_csv_extra_columns\", array());\n\tif(!empty($extra_columns))\n\t{\n\t\tforeach($extra_columns as $heading => $callback)\n\t\t{\n\t\t\t$csvoutput .= \",\" . $heading;\n\t\t}\n\t}\n\n\t$csvoutput .= \"\\n\";\n\n\t//output\n\techo $csvoutput;\n\t$csvoutput = \"\";\n\n\tif($theusers)\n\t{\n\t\tforeach($theusers as $user_id)\n\t\t{\n\t\t\t//MULTI: This query will need to be updated to support multiple levels per user. Should probably just dump multiple rows for each membership.\n\t\t\t//get meta\n\n\t\t\tif($l == \"oldmembers\")\n\t\t\t\t$theuser = $wpdb->get_row(\"SELECT u.ID, u.user_login, u.user_email, UNIX_TIMESTAMP(u.user_registered) as joindate, u.user_login, u.user_nicename, u.user_url, u.user_registered, u.user_status, u.display_name, mu.membership_id, mu.initial_payment, mu.billing_amount, mu.cycle_period, UNIX_TIMESTAMP(mu.enddate) as enddate, m.name as membership FROM $wpdb->users u LEFT JOIN $wpdb->usermeta um ON u.ID = um.user_id LEFT JOIN $wpdb->pmpro_memberships_users mu ON u.ID = mu.user_id LEFT JOIN $wpdb->pmpro_membership_levels m ON mu.membership_id = m.id WHERE u.ID = '\" . $user_id . \"' ORDER BY mu.id DESC LIMIT 1\");\n\t\t\telse\n\t\t\t\t$theuser = $wpdb->get_row(\"SELECT u.ID, u.user_login, u.user_email, UNIX_TIMESTAMP(u.user_registered) as joindate, u.user_login, u.user_nicename, u.user_url, u.user_registered, u.user_status, u.display_name, mu.membership_id, mu.initial_payment, mu.billing_amount, mu.cycle_period, UNIX_TIMESTAMP(mu.enddate) as enddate, m.name as membership FROM $wpdb->users u LEFT JOIN $wpdb->usermeta um ON u.ID = um.user_id LEFT JOIN $wpdb->pmpro_memberships_users mu ON u.ID = mu.user_id AND mu.status = 'active' LEFT JOIN $wpdb->pmpro_membership_levels m ON mu.membership_id = m.id WHERE u.ID = '\" . $user_id . \"' LIMIT 1\");\n\n\t\t\t$sqlQuery = \"SELECT meta_key as `key`, meta_value as `value` FROM $wpdb->usermeta WHERE $wpdb->usermeta.user_id = '\" . $user_id . \"'\";\n\t\t\t$metavalues = pmpro_getMetavalues($sqlQuery);\n\t\t\t$theuser->metavalues = $metavalues;\n\t\t\t$sqlQuery = \"SELECT c.id, c.code FROM $wpdb->pmpro_discount_codes_uses cu LEFT JOIN $wpdb->pmpro_discount_codes c ON cu.code_id = c.id WHERE cu.user_id = '\" . $theuser->ID . \"' ORDER BY c.id DESC LIMIT 1\";\n\t\t\t$discount_code = $wpdb->get_row($sqlQuery);\n\n\t\t\t//default columns\n\t\t\tif(!empty($default_columns))\n\t\t\t{\n\t\t\t\t$count = 0;\n\t\t\t\tforeach($default_columns as $col)\n\t\t\t\t{\n\t\t\t\t\t//add comma after the first item\n\t\t\t\t\t$count++;\n\t\t\t\t\tif($count > 1)\n\t\t\t\t\t\t$csvoutput .= \",\";\n\n\t\t\t\t\t//checking $object->property. note the double $$\n\t\t\t\t\tif(!empty($$col[0]->$col[1]))\n\t\t\t\t\t\t$csvoutput .= pmpro_enclose($$col[0]->$col[1]);\t//output the value\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//joindate and enddate\n\t\t\t$csvoutput .= \",\" . pmpro_enclose(date(\"Y-m-d\", $theuser->joindate)) . \",\";\n\n\t\t\tif($theuser->membership_id)\n\t\t\t{\n\t\t\t\tif($theuser->enddate)\n\t\t\t\t\t$csvoutput .= pmpro_enclose(apply_filters(\"pmpro_memberslist_expires_column\", date(\"Y-m-d\", $theuser->enddate), $theuser));\n\t\t\t\telse\n\t\t\t\t\t$csvoutput .= pmpro_enclose(apply_filters(\"pmpro_memberslist_expires_column\", \"Never\", $theuser));\n\t\t\t}\n\t\t\telseif($l == \"oldmembers\" && $theuser->enddate)\n\t\t\t{\n\t\t\t\t$csvoutput .= pmpro_enclose(date(\"Y-m-d\", $theuser->enddate));\n\t\t\t}\n\t\t\telse\n\t\t\t\t$csvoutput .= \"N/A\";\n\n\t\t\t//any extra columns\n\t\t\tif(!empty($extra_columns))\n\t\t\t{\n\t\t\t\tforeach($extra_columns as $heading => $callback)\n\t\t\t\t{\n\t\t\t\t\t$csvoutput .= \",\" . pmpro_enclose(call_user_func($callback, $theuser, $heading));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$csvoutput .= \"\\n\";\n\n\t\t\t//output\n\t\t\techo $csvoutput;\n\t\t\t$csvoutput = \"\";\n\t\t}\n\t}\n\n\tprint $csvoutput;\n\n\tfunction pmpro_enclose($s)\n\t{\n\t\treturn \"\\\"\" . str_replace(\"\\\"\", \"\\\\\\\"\", $s) . \"\\\"\";\n\t}", "<?php\n\t//only admins can get this\n\tif(!function_exists(\"current_user_can\") || (!current_user_can(\"manage_options\") && !current_user_can(\"pmpro_memberslist\")))\n\t{\n\t\tdie(__(\"You do not have permissions to perform this action.\", \"pmpro\"));\n\t}\n\n\t//vars\n\tglobal $wpdb;\n\tif(isset($_REQUEST['s']))\n\t\t$s = trim($_REQUEST['s']);\n\telse\n\t\t$s = \"\";\n\n\tif(isset($_REQUEST['l']))\n\t\t$l = $_REQUEST['l'];\n\telse\n\t\t$l = false;\n\n\trequire_once(dirname(__FILE__) . \"/admin_header.php\");\n?>\n\n\t<form id=\"posts-filter\" method=\"get\" action=\"\">\n\t<h2>\n\t\t<?php _e('Members List', 'pmpro');?>\n\t\t<a target=\"_blank\" href=\"<?php echo admin_url('admin-ajax.php');?>?action=memberslist_csv&s=<?php echo $s?>&l=<?php echo $l?>\" class=\"add-new-h2\"><?php _e('Export to CSV', 'pmpro');?></a>\n\t</h2>\n\t<ul class=\"subsubsub\">\n\t\t<li>\n\t\t\t<?php _e('Show', 'pmpro');?>\n\t\t\t<select name=\"l\" onchange=\"jQuery('#posts-filter').submit();\">\n\t\t\t\t<option value=\"\" <?php if(!$l) { ?>selected=\"selected\"<?php } ?>><?php _e('All Levels', 'pmpro');?></option>\n\t\t\t\t<?php\n\t\t\t\t\t$levels = $wpdb->get_results(\"SELECT id, name FROM $wpdb->pmpro_membership_levels ORDER BY name\");\n\t\t\t\t\tforeach($levels as $level)\n\t\t\t\t\t{\n\t\t\t\t?>\n\t\t\t\t\t<option value=\"<?php echo $level->id?>\" <?php if($l == $level->id) { ?>selected=\"selected\"<?php } ?>><?php echo $level->name?></option>\n\t\t\t\t<?php\n\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t\t<option value=\"cancelled\" <?php if($l == \"cancelled\") { ?>selected=\"selected\"<?php } ?>><?php _e('Cancelled Members', 'pmpro');?></option>\n\t\t\t\t<option value=\"expired\" <?php if($l == \"expired\") { ?>selected=\"selected\"<?php } ?>><?php _e('Expired Members', 'pmpro');?></option>\n\t\t\t\t<option value=\"oldmembers\" <?php if($l == \"oldmembers\") { ?>selected=\"selected\"<?php } ?>><?php _e('Old Members', 'pmpro');?></option>\n\t\t\t</select>\n\t\t</li>\n\t</ul>\n\t<p class=\"search-box\">\n\t\t<label class=\"hidden\" for=\"post-search-input\"><?php _e('Search Members', 'pmpro');?>:</label>\n\t\t<input type=\"hidden\" name=\"page\" value=\"pmpro-memberslist\" />\n\t\t<input id=\"post-search-input\" type=\"text\" value=\"<?php echo $s?>\" name=\"s\"/>\n\t\t<input class=\"button\" type=\"submit\" value=\"<?php _e('Search Members', 'pmpro');?>\"/>\n\t</p>\n\t<?php\n\t\t//some vars for the search\n\t\tif(isset($_REQUEST['pn']))\n\t\t\t$pn = intval($_REQUEST['pn']);\n\t\telse\n\t\t\t$pn = 1;\n\n\t\tif(isset($_REQUEST['limit']))\n\t\t\t$limit = intval($_REQUEST['limit']);\n\t\telse\n\t\t\t$limit = 15;\n\n\t\t$end = $pn * $limit;\n\t\t$start = $end - $limit;\n\n\t\tif($s)\n\t\t{\n\t\t\t$sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS u.ID, u.user_login, u.user_email, UNIX_TIMESTAMP(u.user_registered) as joindate, mu.membership_id, mu.initial_payment, mu.billing_amount, mu.cycle_period, mu.cycle_number, mu.billing_limit, mu.trial_amount, mu.trial_limit, UNIX_TIMESTAMP(mu.startdate) as startdate, UNIX_TIMESTAMP(mu.enddate) as enddate, m.name as membership FROM $wpdb->users u LEFT JOIN $wpdb->usermeta um ON u.ID = um.user_id LEFT JOIN $wpdb->pmpro_memberships_users mu ON u.ID = mu.user_id LEFT JOIN $wpdb->pmpro_membership_levels m ON mu.membership_id = m.id \";\n\n\t\t\tif($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n\t\t\t\t$sqlQuery .= \" LEFT JOIN $wpdb->pmpro_memberships_users mu2 ON u.ID = mu2.user_id AND mu2.status = 'active' \";\n\n\t\t\t$sqlQuery .= \" WHERE mu.membership_id > 0 AND (u.user_login LIKE '%\" . esc_sql($s) . \"%' OR u.user_email LIKE '%\" . esc_sql($s) . \"%' OR um.meta_value LIKE '%\" . esc_sql($s) . \"%') \";\n\n\t\t\tif($l == \"oldmembers\")\n\t\t\t\t$sqlQuery .= \" AND mu.status <> 'active' AND mu2.status IS NULL \";\n\t\t\telseif($l == \"expired\")\n\t\t\t\t$sqlQuery .= \" AND mu.status = 'expired' AND mu2.status IS NULL \";\n\t\t\telseif($l == \"cancelled\")\n\t\t\t\t$sqlQuery .= \" AND mu.status IN('cancelled', 'admin_cancelled') AND mu2.status IS NULL \";\n\t\t\telseif($l)\n\t\t\t\t$sqlQuery .= \" AND mu.status = 'active' AND mu.membership_id = '\" . esc_sql($l) . \"' \";\n\t\t\telse\n\t\t\t\t$sqlQuery .= \" AND mu.status = 'active' \";\n\n\t\t\t$sqlQuery .= \"GROUP BY u.ID \";\n\n\t\t\tif($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n\t\t\t\t$sqlQuery .= \"ORDER BY enddate DESC \";\n\t\t\telse\n\t\t\t\t$sqlQuery .= \"ORDER BY u.user_registered DESC \";\n\n\t\t\t$sqlQuery .= \"LIMIT $start, $limit\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS u.ID, u.user_login, u.user_email, UNIX_TIMESTAMP(u.user_registered) as joindate, mu.membership_id, mu.initial_payment, mu.billing_amount, mu.cycle_period, mu.cycle_number, mu.billing_limit, mu.trial_amount, mu.trial_limit, UNIX_TIMESTAMP(mu.startdate) as startdate, UNIX_TIMESTAMP(mu.enddate) as enddate, m.name as membership FROM $wpdb->users u LEFT JOIN $wpdb->pmpro_memberships_users mu ON u.ID = mu.user_id LEFT JOIN $wpdb->pmpro_membership_levels m ON mu.membership_id = m.id\";\n\n\t\t\tif($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n\t\t\t\t$sqlQuery .= \" LEFT JOIN $wpdb->pmpro_memberships_users mu2 ON u.ID = mu2.user_id AND mu2.status = 'active' \";\n\n\t\t\t$sqlQuery .= \" WHERE mu.membership_id > 0  \";\n\n\t\t\tif($l == \"oldmembers\")\n\t\t\t\t$sqlQuery .= \" AND mu.status <> 'active' AND mu2.status IS NULL \";\n\t\t\telseif($l == \"expired\")\n\t\t\t\t$sqlQuery .= \" AND mu.status = 'expired' AND mu2.status IS NULL \";\n\t\t\telseif($l == \"cancelled\")\n\t\t\t\t$sqlQuery .= \" AND mu.status IN('cancelled', 'admin_cancelled') AND mu2.status IS NULL \";\n\t\t\telseif($l)\n\t\t\t\t$sqlQuery .= \" AND mu.status = 'active' AND mu.membership_id = '\" . esc_sql($l) . \"' \";\n\t\t\telse\n\t\t\t\t$sqlQuery .= \" AND mu.status = 'active' \";\n\t\t\t$sqlQuery .= \"GROUP BY u.ID \";\n\n\t\t\tif($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n\t\t\t\t$sqlQuery .= \"ORDER BY enddate DESC \";\n\t\t\telse\n\t\t\t\t$sqlQuery .= \"ORDER BY u.user_registered DESC \";\n\n\t\t\t$sqlQuery .= \"LIMIT $start, $limit\";\n\t\t}\n\n\t\t$sqlQuery = apply_filters(\"pmpro_members_list_sql\", $sqlQuery);\n\n\t\t$theusers = $wpdb->get_results($sqlQuery);\n\t\t$totalrows = $wpdb->get_var(\"SELECT FOUND_ROWS() as found_rows\");\n\n\t\tif($theusers)\n\t\t{\n\t\t\t$calculate_revenue = apply_filters(\"pmpro_memberslist_calculate_revenue\", false);\n\t\t\tif($calculate_revenue)\n\t\t\t{\n\t\t\t\t$initial_payments = pmpro_calculateInitialPaymentRevenue($s, $l);\n\t\t\t\t$recurring_payments = pmpro_calculateRecurringRevenue($s, $l);\n\t\t\t\t?>\n\t\t\t\t<p class=\"clear\"><?php echo strval($totalrows)?> members found. These members have paid <strong>$<?php echo number_format($initial_payments)?> in initial payments</strong> and will generate an estimated <strong>$<?php echo number_format($recurring_payments)?> in revenue over the next year</strong>, or <strong>$<?php echo number_format($recurring_payments/12)?>/month</strong>. <span class=\"pmpro_lite\">(This estimate does not take into account trial periods or billing limits.)</span></p>\n\t\t\t\t<?php\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t?>\n\t\t\t<p class=\"clear\"><?php printf(__(\"%d members found.\", \"pmpro\"), $totalrows);?></span></p>\n\t\t\t<?php\n\t\t\t}\n\t\t}\n\t?>\n\t<table class=\"widefat\">\n\t\t<thead>\n\t\t\t<tr class=\"thead\">\n\t\t\t\t<th><?php _e('ID', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Username', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('First&nbsp;Name', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Last&nbsp;Name', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Email', 'pmpro');?></th>\n\t\t\t\t<?php do_action(\"pmpro_memberslist_extra_cols_header\", $theusers);?>\n\t\t\t\t<th><?php _e('Billing Address', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Membership', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Fee', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Joined', 'pmpro');?></th>\n\t\t\t\t<th>\n\t\t\t\t\t<?php\n\t\t\t\t\t\tif($l == \"oldmembers\")\n\t\t\t\t\t\t\t_e('Ended', 'pmpro');\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t_e('Expires', 'pmpro');\n\t\t\t\t\t?>\n\t\t\t\t</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody id=\"users\" class=\"list:user user-list\">\n\t\t\t<?php\n\t\t\t\t$count = 0;\n\t\t\t\tforeach($theusers as $auser)\n\t\t\t\t{\n\t\t\t\t\t//get meta\n\t\t\t\t\t$theuser = get_userdata($auser->ID);\n\t\t\t\t\t?>\n\t\t\t\t\t\t<tr <?php if($count++ % 2 == 0) { ?>class=\"alternate\"<?php } ?>>\n\t\t\t\t\t\t\t<td><?php echo $theuser->ID?></td>\n\t\t\t\t\t\t\t<td class=\"username column-username\">\n\t\t\t\t\t\t\t\t<?php echo get_avatar($theuser->ID, 32)?>\n\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t\t$userlink = '<a href=\"user-edit.php?user_id=' . $theuser->ID . '\">' . $theuser->user_login . '</a>';\n\t\t\t\t\t\t\t\t\t\t$userlink = apply_filters(\"pmpro_members_list_user_link\", $userlink, $theuser);\n\t\t\t\t\t\t\t\t\t\techo $userlink;\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t// Set up the hover actions for this user\n\t\t\t\t\t\t\t\t\t$actions = apply_filters( 'pmpro_memberslist_user_row_actions', array(), $theuser );\n\t\t\t\t\t\t\t\t\t$action_count = count( $actions );\n\t\t\t\t\t\t\t\t\t$i = 0;\n\t\t\t\t\t\t\t\t\tif($action_count)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$out = '<div class=\"row-actions\">';\n\t\t\t\t\t\t\t\t\t\tforeach ( $actions as $action => $link ) {\n\t\t\t\t\t\t\t\t\t\t\t++$i;\n\t\t\t\t\t\t\t\t\t\t\t( $i == $action_count ) ? $sep = '' : $sep = ' | ';\n\t\t\t\t\t\t\t\t\t\t\t$out .= \"<span class='$action'>$link$sep</span>\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t$out .= '</div>';\n\t\t\t\t\t\t\t\t\t\techo $out;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td><?php echo $theuser->first_name?></td>\n\t\t\t\t\t\t\t<td><?php echo $theuser->last_name?></td>\n\t\t\t\t\t\t\t<td><a href=\"mailto:<?php echo $theuser->user_email?>\"><?php echo $theuser->user_email?></a></td>\n\t\t\t\t\t\t\t<?php do_action(\"pmpro_memberslist_extra_cols_body\", $theuser);?>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\techo pmpro_formatAddress(trim($theuser->pmpro_bfirstname . \" \" . $theuser->pmpro_blastname), $theuser->pmpro_baddress1, $theuser->pmpro_baddress2, $theuser->pmpro_bcity, $theuser->pmpro_bstate, $theuser->pmpro_bzipcode, $theuser->pmpro_bcountry, $theuser->pmpro_bphone);\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td><?php echo $auser->membership?></td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<?php if((float)$auser->initial_payment > 0) { ?>\n\t\t\t\t\t\t\t\t\t<?php echo pmpro_formatPrice($auser->initial_payment);?>\n\t\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t\t<?php if((float)$auser->initial_payment > 0 && (float)$auser->billing_amount > 0) { ?>+<br /><?php } ?>\n\t\t\t\t\t\t\t\t<?php if((float)$auser->billing_amount > 0) { ?>\n\t\t\t\t\t\t\t\t\t<?php echo pmpro_formatPrice($auser->billing_amount);?>/<?php if($auser->cycle_number > 1) { echo $auser->cycle_number . \" \" . $auser->cycle_period . \"s\"; } else { echo $auser->cycle_period; } ?>\n\t\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t\t<?php if((float)$auser->initial_payment <= 0 && (float)$auser->billing_amount <= 0) { ?>\n\t\t\t\t\t\t\t\t\t-\n\t\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td><?php echo date(get_option(\"date_format\"), strtotime($theuser->user_registered, current_time(\"timestamp\")))?></td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif($auser->enddate)\n\t\t\t\t\t\t\t\t\t\techo apply_filters(\"pmpro_memberslist_expires_column\", date(get_option('date_format'), $auser->enddate), $auser);\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\techo __(apply_filters(\"pmpro_memberslist_expires_column\", \"Never\", $auser), \"pmpro\");\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<?php\n\t\t\t\t}\n\n\t\t\t\tif(!$theusers)\n\t\t\t\t{\n\t\t\t\t?>\n\t\t\t\t<tr>\n\t\t\t\t\t<td colspan=\"9\"><p><?php _e(\"No members found.\", \"pmpro\");?> <?php if($l) { ?><a href=\"?page=pmpro-memberslist&s=<?php echo $s?>\"><?php _e(\"Search all levels\", \"pmpro\");?></a>.<?php } ?></p></td>\n\t\t\t\t</tr>\n\t\t\t\t<?php\n\t\t\t\t}\n\t\t\t?>\n\t\t</tbody>\n\t</table>\n\t</form>\n\n\t<?php\n\techo pmpro_getPaginationString($pn, $totalrows, $limit, 1, get_admin_url(NULL, \"/admin.php?page=pmpro-memberslist&s=\" . urlencode($s)), \"&l=$l&limit=$limit&pn=\");\n\t?>\n\n<?php\n\trequire_once(dirname(__FILE__) . \"/admin_footer.php\");\n?>\n", "<?php\n\t//only admins can get this\n\tif(!function_exists(\"current_user_can\") || (!current_user_can(\"manage_options\") && !current_user_can(\"pmpro_orderscsv\")))\n\t{\n\t\tdie(__(\"You do not have permissions to perform this action.\", \"pmpro\"));\n\t}\n\n\tglobal $wpdb;\n\n\t//get users\n\tif(isset($_REQUEST['s']))\n\t\t$s = $_REQUEST['s'];\n\telse\n\t\t$s = \"\";\n\n\tif(isset($_REQUEST['l']))\n\t\t$l = $_REQUEST['l'];\n\telse\n\t\t$l = false;\n\n\tif(isset($_REQUEST['start-month']))\n\t\t$start_month = $_REQUEST['start-month'];\n\telse\n\t\t$start_month = \"1\";\n\n\tif(isset($_REQUEST['start-day']))\n\t\t$start_day = $_REQUEST['start-day'];\n\telse\n\t\t$start_day = \"1\";\n\n\tif(isset($_REQUEST['start-year']))\n\t\t$start_year = $_REQUEST['start-year'];\n\telse\n\t\t$start_year = date(\"Y\");\n\n\tif(isset($_REQUEST['end-month']))\n\t\t$end_month = $_REQUEST['end-month'];\n\telse\n\t\t$end_month = date(\"n\");\n\n\tif(isset($_REQUEST['end-day']))\n\t\t$end_day = $_REQUEST['end-day'];\n\telse\n\t\t$end_day = date(\"j\");\n\n\tif(isset($_REQUEST['end-year']))\n\t\t$end_year = $_REQUEST['end-year'];\n\telse\n\t\t$end_year = date(\"Y\");\n\n\tif(isset($_REQUEST['predefined-date']))\n\t\t$predefined_date = $_REQUEST['predefined-date'];\n\telse\n\t\t$predefined_date = \"This Month\";\n\n\tif(isset($_REQUEST['status']))\n\t\t$status = $_REQUEST['status'];\n\telse\n\t\t$status = \"\";\n\n\tif(isset($_REQUEST['filter']))\n\t\t$filter = sanitize_text_field($_REQUEST['filter']);\n\telse\n\t\t$filter = \"all\";\n\n\t//some vars for the search\n\tif(!empty($_REQUEST['pn']))\n\t\t$pn = intval($_REQUEST['pn']);\n\telse\n\t\t$pn = 1;\n\n\tif(!empty($_REQUEST['limit']))\n\t\t$limit = intval($_REQUEST['limit']);\n\telse\n\t\t$limit = false;\n\n\tif($limit)\n\t{\n\t\t$end = $pn * $limit;\n\t\t$start = $end - $limit;\n\t}\n\telse\n\t{\n\t\t$end = NULL;\n\t\t$start = NULL;\n\t}\n\n\t//filters\n\tif($filter == \"all\" || !$filter)\n\t\t\t$condition = \"1=1\";\n\telseif($filter == \"within-a-date-range\")\n\t{\n\t\t$start_date = $start_year.\"-\".$start_month.\"-\".$start_day;\n\t\t$end_date = $end_year.\"-\".$end_month.\"-\".$end_day;\n\n\t\t//add times to dates\n\t\t$start_date =  $start_date . \" 00:00:00\";\n\t\t$end_date =  $end_date . \" 23:59:59\";\n\n\t\t$condition = \"timestamp BETWEEN '\".$start_date.\"' AND '\".$end_date.\"'\";\n\t}\n\telseif($filter == \"predefined-date-range\")\n\t{\n\t\tif($predefined_date == \"Last Month\")\n\t\t{\n\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of last month\", current_time(\"timestamp\")));\n\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of last month\", current_time(\"timestamp\")));\n\t\t}\n\t\telseif($predefined_date == \"This Month\")\n\t\t{\n\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of this month\", current_time(\"timestamp\")));\n\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of this month\", current_time(\"timestamp\")));\n\t\t}\n\t\telseif($predefined_date == \"This Year\")\n\t\t{\n\t\t\t$year = date('Y');\n\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of January $year\", current_time(\"timestamp\")));\n\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of December $year\", current_time(\"timestamp\")));\n\t\t}\n\n\t\telseif($predefined_date == \"Last Year\")\n\t\t{\n\t\t\t$year = date('Y') - 1;\n\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of January $year\", current_time(\"timestamp\")));\n\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of December $year\", current_time(\"timestamp\")));\n\t\t}\n\n\t\t//add times to dates\n\t\t$start_date =  $start_date . \" 00:00:00\";\n\t\t$end_date =  $end_date . \" 23:59:59\";\n\n\t\t$condition = \"timestamp BETWEEN '\".esc_sql($start_date).\"' AND '\".esc_sql($end_date).\"'\";\n\t}\n\telseif($filter == \"within-a-level\")\n\t{\n\t\t$condition = \"membership_id = \" . esc_sql($l);\n\t}\n\telseif($filter == \"within-a-status\")\n\t{\n\t\t$condition = \"status = '\" . esc_sql($status) . \"' \";\n\t}\n\n\t//string search\n\tif($s)\n\t{\n\t\t$sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS o.id FROM $wpdb->pmpro_membership_orders o LEFT JOIN $wpdb->users u ON o.user_id = u.ID LEFT JOIN $wpdb->pmpro_membership_levels l ON o.membership_id = l.id \";\n\n\t\t$join_with_usermeta = apply_filters(\"pmpro_orders_search_usermeta\", false);\n\t\tif($join_with_usermeta)\n\t\t\t$sqlQuery .= \"LEFT JOIN $wpdb->usermeta um ON o.user_id = um.user_id \";\n\n\t\t$sqlQuery .= \"WHERE (1=2 \";\n\n\t\t$fields = array(\"o.id\", \"o.code\", \"o.billing_name\", \"o.billing_street\", \"o.billing_city\", \"o.billing_state\", \"o.billing_zip\", \"o.billing_phone\", \"o.payment_type\", \"o.cardtype\", \"o.accountnumber\", \"o.status\", \"o.gateway\", \"o.gateway_environment\", \"o.payment_transaction_id\", \"o.subscription_transaction_id\", \"u.user_login\", \"u.user_email\", \"u.display_name\", \"l.name\");\n\n\t\tif($join_with_usermeta)\n\t\t\t$fields[] = \"um.meta_value\";\n\n\t\t$fields = apply_filters(\"pmpro_orders_search_fields\", $fields);\n\n\t\tforeach($fields as $field)\n\t\t\t$sqlQuery .= \" OR \" . $field . \" LIKE '%\" . esc_sql($s) . \"%' \";\n\t\t$sqlQuery .= \") \";\n\n\t\t$sqlQuery .= \"AND \" . $condition . \" \";\n\n\t\t$sqlQuery .= \"GROUP BY o.id ORDER BY o.id DESC, o.timestamp DESC \";\n\t}\n\telse\n\t{\n\t\t$sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS id FROM $wpdb->pmpro_membership_orders WHERE \".$condition.\" ORDER BY id DESC, timestamp DESC \";\n\t}\n\n\tif(!empty($start) && !empty($limit))\n\t\t$sqlQuery .= \"LIMIT $start, $limit\";\n\n\t$order_ids = $wpdb->get_col($sqlQuery);\n\n\t//begin output\n\theader(\"Content-type: text/csv\");\n\n\t$filename = \"orders.csv\";\n\t/*\n\t\tInsert logic here for building filename from $filter and other values.\n\t*/\n\theader(\"Content-Disposition: attachment; filename=$filename;\");\n\n\t$csvoutput = \"id,user_id,user_login,first_name,last_name,user_email,billing_name,billing_street,billing_city,billing_state,billing_zip,billing_country,billing_phone,membership_id,level_name,subtotal,tax,couponamount,total,payment_type,cardtype,accountnumber,expirationmonth,expirationyear,status,gateway,gateway_environment,payment_transaction_id,subscription_transaction_id,discount_code_id,discount_code,timestamp\";\n\n\t//these are the meta_keys for the fields (arrays are object, property. so e.g. $theuser->ID)\n\t$default_columns = array(\n\t\tarray(\"order\", \"id\"),\n\t\tarray(\"user\", \"ID\"),\n\t\tarray(\"user\", \"user_login\"),\n\t\tarray(\"user\", \"first_name\"),\n\t\tarray(\"user\", \"last_name\"),\n\t\tarray(\"user\", \"user_email\"),\n\t\tarray(\"order\", \"billing\", \"name\"),\n\t\tarray(\"order\", \"billing\", \"street\"),\n\t\tarray(\"order\", \"billing\", \"city\"),\n\t\tarray(\"order\", \"billing\", \"state\"),\n\t\tarray(\"order\", \"billing\", \"zip\"),\n\t\tarray(\"order\", \"billing\", \"country\"),\n\t\tarray(\"order\", \"billing\", \"phone\"),\n\t\tarray(\"order\", \"membership_id\"),\n\t\tarray(\"level\", \"name\"),\n\t\tarray(\"order\", \"subtotal\"),\n\t\tarray(\"order\", \"tax\"),\n\t\tarray(\"order\", \"couponamount\"),\n\t\tarray(\"order\", \"total\"),\n\t\tarray(\"order\", \"payment_type\"),\n\t\tarray(\"order\", \"cardtype\"),\n\t\tarray(\"order\", \"accountnumber\"),\n\t\tarray(\"order\", \"expirationmonth\"),\n\t\tarray(\"order\", \"expirationyear\"),\n\t\tarray(\"order\", \"status\"),\n\t\tarray(\"order\", \"gateway\"),\n\t\tarray(\"order\", \"gateway_environment\"),\n\t\tarray(\"order\", \"payment_transaction_id\"),\n\t\tarray(\"order\", \"subscription_transactiond_id\"),\n\t\tarray(\"discount_code\", \"id\"),\n\t\tarray(\"discount_code\", \"code\")\n\t);\n\n\t//any extra columns\n\t$extra_columns = apply_filters(\"pmpro_orders_csv_extra_columns\", array());\n\tif(!empty($extra_columns))\n\t{\n\t\tforeach($extra_columns as $heading => $callback)\n\t\t{\n\t\t\t$csvoutput .= \",\" . $heading;\n\t\t}\n\t}\n\n\t$csvoutput .= \"\\n\";\n\n\t//output\n\techo $csvoutput;\n\t$csvoutput = \"\";\n\n\tif($order_ids)\n\t{\n\t\tforeach($order_ids as $order_id)\n\t\t{\n\t\t\t$order = new MemberOrder();\n\t\t\t$order->nogateway = true;\n\t\t\t$order->getMemberOrderByID($order_id);\n\t\t\t$user = get_userdata($order->user_id);\n\t\t\t$level = $order->getMembershipLevel();\n\t\t\t$sqlQuery = \"SELECT c.id, c.code FROM $wpdb->pmpro_discount_codes_uses cu LEFT JOIN $wpdb->pmpro_discount_codes c ON cu.code_id = c.id WHERE cu.order_id = '\" . $order_id . \"' LIMIT 1\";\n\t\t\t$discount_code = $wpdb->get_row($sqlQuery);\n\n\t\t\t//default columns\n\t\t\tif(!empty($default_columns))\n\t\t\t{\n\t\t\t\t$count = 0;\n\t\t\t\tforeach($default_columns as $col)\n\t\t\t\t{\n\t\t\t\t\t//add comma after the first item\n\t\t\t\t\t$count++;\n\t\t\t\t\tif($count > 1)\n\t\t\t\t\t\t$csvoutput .= \",\";\n\n\t\t\t\t\t//checking $object->property. note the double $$\n\t\t\t\t\tif(!empty($col[2]) && isset($$col[0]->$col[1]->$col[2]))\n\t\t\t\t\t\t$csvoutput .= pmpro_enclose($$col[0]->$col[1]->$col[2]);\t//output the value\n\t\t\t\t\telseif(!empty($$col[0]->$col[1]))\n\t\t\t\t\t\t$csvoutput .= pmpro_enclose($$col[0]->$col[1]);\t//output the value\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//timestamp\n\t\t\t$csvoutput .= \",\" . pmpro_enclose(date(get_option(\"date_format\"), $order->timestamp));\n\n\t\t\t//any extra columns\n\t\t\tif(!empty($extra_columns))\n\t\t\t{\n\t\t\t\tforeach($extra_columns as $heading => $callback)\n\t\t\t\t{\n\t\t\t\t\t$csvoutput .= \",\" . pmpro_enclose(call_user_func($callback, $order));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$csvoutput .= \"\\n\";\n\n\t\t\t//output\n\t\t\techo $csvoutput;\n\t\t\t$csvoutput = \"\";\n\t\t}\n\t}\n\n\tprint $csvoutput;\n\n\tfunction pmpro_enclose($s)\n\t{\n\t\treturn \"\\\"\" . str_replace(\"\\\"\", \"\\\\\\\"\", $s) . \"\\\"\";\n\t}\n", "<?php\n\t//only admins can get this\n\tif(!function_exists(\"current_user_can\") || (!current_user_can(\"manage_options\") && !current_user_can(\"pmpro_orders\")))\n\t{\n\t\tdie(__(\"You do not have permissions to perform this action.\", \"pmpro\"));\n\t}\n\n\t//vars\n\tglobal $wpdb;\n\tif(isset($_REQUEST['s']))\n\t\t$s = trim($_REQUEST['s']);\n\telse\n\t\t$s = \"\";\n\n\tif(isset($_REQUEST['l']))\n\t\t$l = $_REQUEST['l'];\n\telse\n\t\t$l = false;\n\n\tif(isset($_REQUEST['start-month']))\n\t\t$start_month = $_REQUEST['start-month'];\n\telse\n\t\t$start_month = \"1\";\n\n\tif(isset($_REQUEST['start-day']))\n\t\t$start_day = $_REQUEST['start-day'];\n\telse\n\t\t$start_day = \"1\";\n\n\tif(isset($_REQUEST['start-year']))\n\t\t$start_year = $_REQUEST['start-year'];\n\telse\n\t\t$start_year = date(\"Y\");\n\n\tif(isset($_REQUEST['end-month']))\n\t\t$end_month = $_REQUEST['end-month'];\n\telse\n\t\t$end_month = date(\"n\");\n\n\tif(isset($_REQUEST['end-day']))\n\t\t$end_day = $_REQUEST['end-day'];\n\telse\n\t\t$end_day = date(\"j\");\n\n\tif(isset($_REQUEST['end-year']))\n\t\t$end_year = $_REQUEST['end-year'];\n\telse\n\t\t$end_year = date(\"Y\");\n\n\tif(isset($_REQUEST['predefined-date']))\n\t\t$predefined_date = $_REQUEST['predefined-date'];\n\telse\n\t\t$predefined_date = \"This Month\";\n\n\tif(isset($_REQUEST['status']))\n\t\t$status = $_REQUEST['status'];\n\telse\n\t\t$status = \"\";\n\n\n\t//deleting?\n\tif(!empty($_REQUEST['delete']))\n\t{\n\t\t$dorder = new MemberOrder(intval($_REQUEST['delete']));\n\t\tif($dorder->deleteMe())\n\t\t{\n\t\t\t$pmpro_msg = __(\"Order deleted successfully.\", \"pmpro\");\n\t\t\t$pmpro_msgt = \"success\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$pmpro_msg = __(\"Error deleting order.\", \"pmpro\");\n\t\t\t$pmpro_msgt = \"error\";\n\t\t}\n\t}\n\n\tif(isset($_REQUEST['filter']))\n\t\t$filter = sanitize_text_field($_REQUEST['filter']);\n\telse\n\t\t$filter = \"all\";\n\n\t$thisyear = date(\"Y\");\n\n\n\n\t//this array stores fields that should be read only\n\t$read_only_fields = apply_filters(\"pmpro_orders_read_only_fields\", array(\"code\", \"payment_transaction_id\", \"subscription_transaction_id\"));\n\n\t//saving?\n\tif(!empty($_REQUEST['save']))\n\t{\n\t\t//start with old order if applicable\n\t\t$order_id = intval($_REQUEST['order']);\n\t\tif($order_id > 0)\n\t\t\t$order = new MemberOrder($order_id);\n\t\telse\n\t\t\t$order = new MemberOrder();\n\n\t\t//update values\n\t\tif(!in_array(\"code\", $read_only_fields))\n\t\t\t$order->code = $_POST['code'];\n\t\tif(!in_array(\"user_id\", $read_only_fields))\n\t\t\t$order->user_id = intval($_POST['user_id']);\n\t\tif(!in_array(\"membership_id\", $read_only_fields))\n\t\t\t$order->membership_id = intval($_POST['membership_id']);\n\t\tif(!in_array(\"billing_name\", $read_only_fields))\n\t\t\t$order->billing->name = stripslashes($_POST['billing_name']);\n\t\tif(!in_array(\"billing_street\", $read_only_fields))\n\t\t\t$order->billing->street = stripslashes($_POST['billing_street']);\n\t\tif(!in_array(\"billing_city\", $read_only_fields))\n\t\t\t$order->billing->city = stripslashes($_POST['billing_city']);\n\t\tif(!in_array(\"billing_state\", $read_only_fields))\n\t\t\t$order->billing->state = stripslashes($_POST['billing_state']);\n\t\tif(!in_array(\"billing_zip\", $read_only_fields))\n\t\t\t$order->billing->zip = $_POST['billing_zip'];\n\t\tif(!in_array(\"billing_country\", $read_only_fields))\n\t\t\t$order->billing->country = stripslashes($_POST['billing_country']);\n\t\tif(!in_array(\"billing_phone\", $read_only_fields))\n\t\t\t$order->billing->phone = $_POST['billing_phone'];\n\t\tif(!in_array(\"subtotal\", $read_only_fields))\n\t\t\t$order->subtotal = $_POST['subtotal'];\n\t\tif(!in_array(\"tax\", $read_only_fields))\n\t\t\t$order->tax = $_POST['tax'];\n\t\tif(!in_array(\"couponamount\", $read_only_fields))\n\t\t\t$order->couponamount = $_POST['couponamount'];\n\t\tif(!in_array(\"total\", $read_only_fields))\n\t\t\t$order->total = $_POST['total'];\n\t\tif(!in_array(\"payment_type\", $read_only_fields))\n\t\t\t$order->payment_type = $_POST['payment_type'];\n\t\tif(!in_array(\"cardtype\", $read_only_fields))\n\t\t\t$order->cardtype = $_POST['cardtype'];\n\t\tif(!in_array(\"accountnumber\", $read_only_fields))\n\t\t\t$order->accountnumber = $_POST['accountnumber'];\n\t\tif(!in_array(\"expirationmonth\", $read_only_fields))\n\t\t\t$order->expirationmonth = $_POST['expirationmonth'];\n\t\tif(!in_array(\"expirationyear\", $read_only_fields))\n\t\t\t$order->expirationyear = $_POST['expirationyear'];\n\t\tif(!in_array(\"ExpirationDate\", $read_only_fields))\n\t\t\t$order->ExpirationDate = $order->expirationmonth . $order->expirationyear;\n\t\tif(!in_array(\"status\", $read_only_fields))\n\t\t\t$order->status = stripslashes($_POST['status']);\n\t\tif(!in_array(\"gateway\", $read_only_fields))\n\t\t\t$order->gateway = $_POST['gateway'];\n\t\tif(!in_array(\"gateway_environment\", $read_only_fields))\n\t\t\t$order->gateway_environment = $_POST['gateway_environment'];\n\t\tif(!in_array(\"payment_transaction_id\", $read_only_fields))\n\t\t\t$order->payment_transaction_id = $_POST['payment_transaction_id'];\n\t\tif(!in_array(\"subscription_transaction_id\", $read_only_fields))\n\t\t\t$order->subscription_transaction_id = $_POST['subscription_transaction_id'];\n\t\tif(!in_array(\"notes\", $read_only_fields))\n\t\t\t$order->notes = stripslashes($_POST['notes']);\n\n\t\t//affiliate stuff\n\t\t$affiliates = apply_filters(\"pmpro_orders_show_affiliate_ids\", false);\n\t\tif(!empty($affiliates))\n\t\t{\n\t\t\tif(!in_array(\"affiliate_id\", $read_only_fields))\n\t\t\t\t$order->affiliate_id = $_POST['affiliate_id'];\n\t\t\tif(!in_array(\"affiliate_subid\", $read_only_fields))\n\t\t\t\t$order->affiliate_subid = $_POST['affiliate_subid'];\n\t\t}\n\n\t\t//save\n\t\tif($order->saveOrder() !== false)\n\t\t{\n\t\t\t//handle timestamp\n\t\t\tif($order->updateTimestamp($_POST['ts_year'], $_POST['ts_month'], $_POST['ts_day']) !== false)\n\t\t\t{\n\t\t\t\t$pmpro_msg = __(\"Order saved successfully.\", \"pmpro\");\n\t\t\t\t$pmpro_msgt = \"success\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$pmpro_msg = __(\"Error updating order timestamp.\", \"pmpro\");\n\t\t\t\t$pmpro_msgt = \"error\";\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$pmpro_msg = __(\"Error saving order.\", \"pmpro\");\n\t\t\t$pmpro_msgt = \"error\";\n\t\t}\n\t}\n\telse\n\t{\n\t\t//order passed?\n\t\tif(!empty($_REQUEST['order']))\n\t\t{\n\t\t\t$order_id = intval($_REQUEST['order']);\n\t\t\tif($order_id > 0)\n\t\t\t\t$order = new MemberOrder($order_id);\n\t\t\telseif(!empty($_REQUEST['copy']))\n\t\t\t{\n\t\t\t\t$order = new MemberOrder(intval($_REQUEST['copy']));\n\n\t\t\t\t//new id\n\t\t\t\t$order->id = NULL;\n\n\t\t\t\t//new code\n\t\t\t\t$order->code = $order->getRandomCode();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$order = new MemberOrder();\t\t\t//new order\n\n\t\t\t\t//defaults\n\t\t\t\t$order->code = $order->getRandomCode();\n\t\t\t\t$order->user_id = \"\";\n\t\t\t\t$order->membership_id = \"\";\n\t\t\t\t$order->billing->name = \"\";\n\t\t\t\t$order->billing->street = \"\";\n\t\t\t\t$order->billing->city = \"\";\n\t\t\t\t$order->billing->state = \"\";\n\t\t\t\t$order->billing->zip = \"\";\n\t\t\t\t$order->billing->country = \"\";\n\t\t\t\t$order->billing->phone = \"\";\n\t\t\t\t$order->subtotal = \"\";\n\t\t\t\t$order->tax = \"\";\n\t\t\t\t$order->couponamount = \"\";\n\t\t\t\t$order->total = \"\";\n\t\t\t\t$order->payment_type = \"\";\n\t\t\t\t$order->cardtype = \"\";\n\t\t\t\t$order->accountnumber = \"\";\n\t\t\t\t$order->expirationmonth = \"\";\n\t\t\t\t$order->expirationyear = \"\";\n\t\t\t\t$order->status = \"success\";\n\t\t\t\t$order->gateway = pmpro_getOption(\"gateway\");\n\t\t\t\t$order->gateway_environment = pmpro_getOption(\"gateway_environment\");\n\t\t\t\t$order->payment_transaction_id = \"\";\n\t\t\t\t$order->subscription_transaction_id = \"\";\n\t\t\t\t$order->affiliate_id = \"\";\n\t\t\t\t$order->affiliate_subid = \"\";\n\t\t\t\t$order->notes = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\trequire_once(dirname(__FILE__) . \"/admin_header.php\");\n?>\n\n<?php if(!empty($order)) { ?>\n\n\t<h2>\n\t\t<?php if(!empty($order->id)) { ?>\n\t\t\t<?php _e('Order', 'pmpro');?> #<?php echo $order->id?>: <?php echo $order->code?>\n\t\t<?php } else { ?>\n\t\t\t<?php _e('New Order', 'pmpro');?>\n\t\t<?php } ?>\n\t</h2>\n\n\t<?php if(!empty($pmpro_msg)) { ?>\n\t\t<div id=\"message\" class=\"<?php if($pmpro_msgt == \"success\") echo \"updated fade\"; else echo \"error\"; ?>\"><p><?php echo $pmpro_msg?></p></div>\n\t<?php } ?>\n\n\t<form method=\"post\" action=\"\">\n\n\t\t<table class=\"form-table\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label>ID:</label></th>\n\t\t\t\t\t<td><?php if(!empty($order->id)) echo $order->id; else echo __(\"This will be generated when you save.\", \"pmpro\");?></td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"code\"><?php _e('Code', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"code\", $read_only_fields)) { echo $order->code; } else { ?>\n\t\t\t\t\t\t\t<input id=\"code\" name=\"code\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->code);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<?php if($order_id < 0) { ?><small class=\"pmpro_lite\"><?php _e('Randomly generated for you.', 'pmpro');?></small><?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"user_id\"><?php _e('User ID', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"user_id\", $read_only_fields) && $order_id > 0) { echo $order->user_id; } else { ?>\n\t\t\t\t\t\t\t<input id=\"user_id\" name=\"user_id\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->user_id);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"membership_id\"><?php _e('Membership Level ID', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"membership_id\", $read_only_fields) && $order_id > 0) { echo $order->membership_id; } else { ?>\n\t\t\t\t\t\t\t<input id=\"membership_id\" name=\"membership_id\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->membership_id);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_name\"><?php _e('Billing Name', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"billing_name\", $read_only_fields) && $order_id > 0) { echo $order->billing_name; } else { ?>\n\t\t\t\t\t\t\t<input id=\"billing_name\" name=\"billing_name\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->billing->name);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_street\"><?php _e('Billing Street', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"billing_street\", $read_only_fields) && $order_id > 0) { echo $order->billing_street; } else { ?>\n\t\t\t\t\t\t\t<input id=\"billing_street\" name=\"billing_street\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->billing->street);?>\" /></td>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_city\"><?php _e('Billing City', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"billing_city\", $read_only_fields) && $order_id > 0) { echo $order->billing_city; } else { ?>\n\t\t\t\t\t\t\t<input id=\"billing_city\" name=\"billing_city\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->billing->city);?>\" /></td>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_state\"><?php _e('Billing State', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"billing_state\", $read_only_fields) && $order_id > 0) { echo $order->billing_state; } else { ?>\n\t\t\t\t\t\t\t<input id=\"billing_state\" name=\"billing_state\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->billing->state);?>\" /></td>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_zip\"><?php _e('Billing Postal Code', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"billing_zip\", $read_only_fields) && $order_id > 0) { echo $order->billing_zip; } else { ?>\n\t\t\t\t\t\t\t<input id=\"billing_zip\" name=\"billing_zip\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->billing->zip);?>\" /></td>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_country\"><?php _e('Billing Country', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"billing_country\", $read_only_fields) && $order_id > 0) { echo $order->billing_country; } else { ?>\n\t\t\t\t\t\t\t<input id=\"billing_country\" name=\"billing_country\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->billing->country);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_phone\"><?php _e('Billing Phone', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"billing_phone\", $read_only_fields) && $order_id > 0) { echo $order->billing_phone; } else { ?>\n\t\t\t\t\t\t\t<input id=\"billing_phone\" name=\"billing_phone\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->billing->phone);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"subtotal\"><?php _e('Sub Total', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"subtotal\", $read_only_fields) && $order_id > 0) { echo $order->subtotal; } else { ?>\n\t\t\t\t\t\t\t<input id=\"subtotal\" name=\"subtotal\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($order->subtotal);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"tax\"><?php _e('Tax', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"tax\", $read_only_fields) && $order_id > 0) { echo $order->tax; } else { ?>\n\t\t\t\t\t\t\t<input id=\"tax\" name=\"tax\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($order->tax);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"couponamount\"><?php _e('Coupon Amount', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"couponamount\", $read_only_fields) && $order_id > 0) { echo $order->couponamount; } else { ?>\n\t\t\t\t\t\t\t<input id=\"couponamount\" name=\"couponamount\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($order->couponamount);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"total\"><?php _e('Total', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"total\", $read_only_fields) && $order_id > 0) { echo $order->total; } else { ?>\n\t\t\t\t\t\t\t<input id=\"total\" name=\"total\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($order->total);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<small class=\"pmpro_lite\"><?php _e('Should be subtotal + tax - couponamount.', 'pmpro');?></small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"payment_type\"><?php _e('Payment Type', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"payment_type\", $read_only_fields) && $order_id > 0) { echo $order->payment_type; } else { ?>\n\t\t\t\t\t\t\t<input id=\"payment_type\" name=\"payment_type\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->payment_type);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<small class=\"pmpro_lite\"><?php _e('e.g. PayPal Express, PayPal Standard, Credit Card.', 'pmpro');?></small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"cardtype\"><?php _e('Card Type', 'pmpro');?></label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"cardtype\", $read_only_fields) && $order_id > 0) { echo $order->cardtype; } else { ?>\n\t\t\t\t\t\t\t<input id=\"cardtype\" name=\"cardtype\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->cardtype);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<small class=\"pmpro_lite\"><?php _e('e.g. Visa, MasterCard, AMEX, etc', 'pmpro');?></small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"accountnumber\"><?php _e('Account Number', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"accountnumber\", $read_only_fields) && $order_id > 0) { echo $order->accountnumber; } else { ?>\n\t\t\t\t\t\t\t<input id=\"accountnumber\" name=\"accountnumber\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->accountnumber);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<small class=\"pmpro_lite\"><?php _e('Obscure all but last 4 digits.', 'pmpro');?></small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<?php if(in_array(\"ExpirationDate\", $read_only_fields) && $order_id > 0) { echo $order->ExpirationDate; } else { ?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"expirationmonth\"><?php _e('Expiration Month', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input id=\"expirationmonth\" name=\"expirationmonth\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($order->expirationmonth);?>\" />\n\t\t\t\t\t\t<small class=\"pmpro_lite\">MM</small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"expirationyear\"><?php _e('Expiration Year', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input id=\"expirationyear\" name=\"expirationyear\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($order->expirationyear);?>\" />\n\t\t\t\t\t\t<small class=\"pmpro_lite\">YYYY</small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<?php } ?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"status\"><?php _e('Status', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"status\", $read_only_fields) && $order_id > 0) { echo $order->status; } else { ?>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$statuses = array();\n\t\t\t\t\t\t\t$default_statuses = array(\"\", \"success\", \"cancelled\", \"review\", \"token\", \"refunded\", \"pending\");\n\t\t\t\t\t\t\t$used_statuses = $wpdb->get_col(\"SELECT DISTINCT(status) FROM $wpdb->pmpro_membership_orders\");\n\t\t\t\t\t\t\t$statuses = array_unique(array_merge($default_statuses, $used_statuses));\n\t\t\t\t\t\t\tasort($statuses);\n\t\t\t\t\t\t\t$statuses = apply_filters(\"pmpro_order_statuses\", $statuses);\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<select id=\"status\" name=\"status\">\n\t\t\t\t\t\t\t<?php foreach($statuses as $status) { ?>\n\t\t\t\t\t\t\t\t<option value=\"<?php echo esc_attr($status);?>\" <?php selected($order->status, $status);?>><?php echo $status;?></option>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"gateway\"><?php _e('Gateway', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"gateway\", $read_only_fields) && $order_id > 0) { echo $order->gateway; } else { ?>\n\t\t\t\t\t\t<select id=\"gateway\" name=\"gateway\" onchange=\"pmpro_changeGateway(jQuery(this).val());\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$pmpro_gateways = pmpro_gateways();\n\t\t\t\t\t\t\t\tforeach($pmpro_gateways as $pmpro_gateway_name => $pmpro_gateway_label)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t<option value=\"<?php echo esc_attr($pmpro_gateway_name);?>\" <?php selected($order->gateway, $pmpro_gateway_name);?>><?php echo $pmpro_gateway_label;?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"gateway_environment\"><?php _e('Gateway Environment', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"gateway_environment\", $read_only_fields) && $order_id > 0) { echo $order->gateway_environment; } else { ?>\n\t\t\t\t\t\t<select name=\"gateway_environment\">\n\t\t\t\t\t\t\t<option value=\"sandbox\" <?php if($order->gateway_environment == \"sandbox\") { ?>selected=\"selected\"<?php } ?>><?php _e('Sandbox/Testing', 'pmpro');?></option>\n\t\t\t\t\t\t\t<option value=\"live\" <?php if($order->gateway_environment == \"live\") { ?>selected=\"selected\"<?php } ?>><?php _e('Live/Production', 'pmpro');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"payment_transaction_id\"><?php _e('Payment Transaction ID', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"payment_transaction_id\", $read_only_fields) && $order_id > 0) { echo $order->payment_transaction_id; } else { ?>\n\t\t\t\t\t\t\t<input id=\"payment_transaction_id\" name=\"payment_transaction_id\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->payment_transaction_id);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<small class=\"pmpro_lite\"><?php _e('Generated by the gateway. Useful to cross reference orders.', 'pmpro');?></small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"subscription_transaction_id\"><?php _e('Subscription Transaction ID', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"subscription_transaction_id\", $read_only_fields) && $order_id > 0) { echo $order->subscription_transaction_id; } else { ?>\n\t\t\t\t\t\t\t<input id=\"subscription_transaction_id\" name=\"subscription_transaction_id\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->subscription_transaction_id);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<small class=\"pmpro_lite\"><?php _e('Generated by the gateway. Useful to cross reference subscriptions.', 'pmpro');?></small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"ts_month\"><?php _e('Date', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"timestamp\", $read_only_fields) && $order_id > 0) { echo date(option(\"date_format\"), $order->timestamp); } else { ?>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t//set up date vars\n\t\t\t\t\t\t\tif(!empty($order->timestamp))\n\t\t\t\t\t\t\t\t$timestamp = $order->timestamp;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t$timestamp = current_time('timestamp');\n\t\t\t\t\t\t\t$year = date(\"Y\", $timestamp);\n\t\t\t\t\t\t\t$month = date(\"n\", $timestamp);\n\t\t\t\t\t\t\t$day = date(\"j\", $timestamp);\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<select id=\"ts_month\" name=\"ts_month\">\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tfor($i = 1; $i < 13; $i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<option value=\"<?php echo $i?>\" <?php if($i == $month) { ?>selected=\"selected\"<?php } ?>><?php echo date(\"M\", strtotime($i . \"/1/\" . $year, current_time(\"timestamp\")))?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<input name=\"ts_day\" type=\"text\" size=\"2\" value=\"<?php echo $day?>\" />\n\t\t\t\t\t\t<input name=\"ts_year\" type=\"text\" size=\"4\" value=\"<?php echo $year?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<?php\n\t\t\t\t\t$affiliates = apply_filters(\"pmpro_orders_show_affiliate_ids\", false);\n\t\t\t\t\tif(!empty($affiliates)) {\n\t\t\t\t?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"affiliate_id\"><?php _e('Affiliate ID', 'pmpro');?>Affiliate ID:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"affiliate_id\", $read_only_fields) && $order_id > 0) { echo $order->affiliate_id; } else { ?>\n\t\t\t\t\t\t\t<input id=\"affiliate_id\" name=\"affiliate_id\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->affiliate_id);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"affiliate_subid\"><?php _e('Affiliate SubID', 'pmpro');?>Affiliate SubID:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"affiliate_subid\", $read_only_fields) && $order_id > 0) { echo $order->affiliate_subid; } else { ?>\n\t\t\t\t\t\t\t<input id=\"affiliate_subid\" name=\"affiliate_subid\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->affiliate_subid);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<?php } ?>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"notes\"><?php _e('Notes', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"notes\", $read_only_fields) && $order_id > 0) { echo $order->notes; } else { ?>\n\t\t\t\t\t\t\t<textarea id=\"notes\" name=\"notes\" rows=\"5\" cols=\"80\"><?php echo esc_textarea($order->notes);?></textarea>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<?php do_action(\"pmpro_after_order_settings\", $order); ?>\n\n\t\t\t</tbody>\n\t\t</table>\n\n\t\t<p class=\"submit topborder\">\n\t\t\t<input name=\"order\" type=\"hidden\" value=\"<?php if(!empty($order->id)) echo $order->id; else echo $order_id;?>\" />\n\t\t\t<input name=\"save\" type=\"submit\" class=\"button-primary\" value=\"<?php _e('Save Order', 'pmpro');?>\" />\n\t\t\t<input name=\"cancel\" type=\"button\" class=\"cancel button-secondary\" value=\"<?php _e('Cancel', 'pmpro');?>\" onclick=\"location.href='<?php echo get_admin_url(NULL, '/admin.php?page=pmpro-orders')?>';\" />\n\t\t</p>\n\n\t</form>\n\n<?php } else { ?>\n\n\t<form id=\"posts-filter\" method=\"get\" action=\"\">\n\t<h2>\n\t\t<?php _e('Orders', 'pmpro');?>\n\t\t<a href=\"admin.php?page=pmpro-orders&order=-1\" class=\"add-new-h2\">+ <?php _e('Add New Order', 'pmpro');?></a>\n\n\t\t<?php\n\t\t\t//build the export URL\n\t\t\t$export_url = admin_url('admin-ajax.php') . \"?action=orders_csv\";\n\t\t\t$url_params = array(\n\t\t\t\t\"filter\"=>$filter,\n\t\t\t\t\"s\"=>$s,\n\t\t\t\t\"l\"=>$l,\n\t\t\t\t\"start-month\"=>$start_month,\n\t\t\t\t\"start-day\"=>$start_day,\n\t\t\t\t\"start-year\"=>$start_year,\n\t\t\t\t\"end-month\"=>$end_month,\n\t\t\t\t\"end-day\"=>$end_day,\n\t\t\t\t\"end-year\"=>$end_year,\n\t\t\t\t\"predefined-date\"=>$predefined_date,\n\t\t\t\t\"status\"=>$status\n\t\t\t);\n\t\t\t$export_url = add_query_arg($url_params, $export_url);\n\t\t?>\n\t\t<a target=\"_blank\" href=\"<?php echo $export_url;?>\" class=\"add-new-h2\"><?php _e('Export to CSV', 'pmpro');?></a>\n\t</h2>\n\n\n\n\t<?php if(!empty($pmpro_msg)) { ?>\n\t\t<div id=\"message\" class=\"<?php if($pmpro_msgt == \"success\") echo \"updated fade\"; else echo \"error\"; ?>\"><p><?php echo $pmpro_msg?></p></div>\n\t<?php } ?>\n\n\n\t<ul class=\"subsubsub\">\n\t\t<li>\n\t\t\t<?php _ex('Show', 'Dropdown label, e.g. Show Daily Orders for January', 'pmpro')?>\n\t\t\t<select id=\"filter\" name=\"filter\">\n\t\t\t\t<option value=\"all\" <?php selected($filter, \"all\");?>><?php _e('All', 'pmpro');?></option>\n\t\t\t\t<option value=\"within-a-date-range\" <?php selected($filter, \"within-a-date-range\");?>><?php _e('Within a Date Range', 'pmpro');?></option>\n\t\t\t\t<option value=\"predefined-date-range\" <?php selected($filter, \"predefined-date-range\");?>><?php _e('Predefined Date Range', 'pmpro');?></option>\n\t\t\t\t<option value=\"within-a-level\" <?php selected($filter, \"within-a-level\");?>><?php _e('Within a Level', 'pmpro');?></option>\n\t\t\t\t<option value=\"within-a-status\" <?php selected($filter, \"within-a-status\");?>><?php _e('Within a Status', 'pmpro');?></option>\n\t\t\t</select>\n\n\t\t\t<span id=\"from\"><?php _ex('From', 'Dropdown label', 'pmpro')?></span>\n\n\t\t\t<select id=\"start-month\" name=\"start-month\">\n\t\t\t\t<?php for($i = 1; $i < 13; $i++) { ?>\n\t\t\t\t\t<option value=\"<?php echo $i;?>\" <?php selected($start_month, $i);?>><?php echo date(\"F\", mktime(0, 0, 0, $i, 2));?></option>\n\t\t\t\t<?php } ?>\n\t\t\t</select>\n\n\t\t\t<input id='start-day' name=\"start-day\" type=\"text\" size=\"2\" value=\"<?php echo $start_day?>\" />\n\t\t\t<input id='start-year' name=\"start-year\" type=\"text\" size=\"4\" value=\"<?php echo $start_year?>\" />\n\n\n\t\t\t<span id=\"to\"><?php _ex('To', 'Dropdown label', 'pmpro')?></span>\n\n\t\t\t<select id=\"end-month\" name=\"end-month\">\n\t\t\t\t<?php for($i = 1; $i < 13; $i++) { ?>\n\t\t\t\t\t<option value=\"<?php echo $i;?>\" <?php selected($end_month, $i);?>><?php echo date(\"F\", mktime(0, 0, 0, $i,2));?></option>\n\t\t\t\t<?php } ?>\n\t\t\t</select>\n\n\n\t\t\t<input id='end-day' name=\"end-day\" type=\"text\" size=\"2\" value=\"<?php echo $end_day?>\" />\n\t\t\t<input id='end-year' name=\"end-year\" type=\"text\" size=\"4\" value=\"<?php echo $end_year?>\" />\n\n\t\t\t<span id=\"filterby\"><?php _ex('filter by ', 'Dropdown label', 'pmpro')?></span>\n\n\t\t\t<select id=\"predefined-date\" name=\"predefined-date\">\n\n\t\t\t\t\t<option value=\"<?php echo \"This Month\";?>\" <?php selected($predefined_date, \"This Month\");?>><?php echo \"This Month\";?></option>\n\t\t\t\t\t<option value=\"<?php echo \"Last Month\";?>\" <?php selected($predefined_date, \"Last Month\");?>><?php echo \"Last Month\";?></option>\n\t\t\t\t\t<option value=\"<?php echo \"This Year\";?>\" <?php selected($predefined_date, \"This Year\");?>><?php echo \"This Year\";?></option>\n\t\t\t\t\t<option value=\"<?php echo \"Last Year\";?>\" <?php selected($predefined_date, \"Last Year\");?>><?php echo \"Last Year\";?></option>\n\n\t\t\t</select>\n\n\t\t\t<?php\n\t\t\t//Note: only orders belonging to current levels can be filtered. There is no option for orders belonging to deleted levels\n\t\t\t $levels = pmpro_getAllLevels();\n\n\t\t\t?>\n\t\t\t<select id=\"l\" name=\"l\">\n\t\t\t<?php foreach($levels as $level) { ?>\n\t\t\t\t<option value=\"<?php echo $level->id;?>\" <?php selected($l, $level->id);?>><?php echo $level->name;?></option>\n\t\t\t<?php } ?>\n\n\t\t\t</select>\n\n\t<?php\n\t$statuses = array();\n\t$default_statuses = array(\"\", \"success\", \"cancelled\", \"review\", \"token\", \"refunded\");\n\t$used_statuses = $wpdb->get_col(\"SELECT DISTINCT(status) FROM $wpdb->pmpro_membership_orders\");\n\t$statuses = array_unique(array_merge($default_statuses, $used_statuses));\n\tasort($statuses);\n\t$statuses = apply_filters(\"pmpro_order_statuses\", $statuses);\n\t?>\n\t<select id=\"status\" name=\"status\">\n\t\t<?php foreach($statuses as $the_status) { ?>\n\t\t<option value=\"<?php echo esc_attr($the_status);?>\" <?php selected($the_status, $status);?>><?php echo $the_status;?></option>\n\t\t<?php } ?>\n\t</select>\n\n\n\t\t<input id=\"submit\" type=\"submit\" value=\"<?php _ex('Filter', 'Submit button value.', 'pmpro');?>\" />\n\t\t</li>\n\t</ul>\n\n\t<script>\n\t\t//update month/year when period dropdown is changed\n\t\tjQuery(document).ready(function() {\n\t\t\tjQuery('#filter').change(function() {\n\t\t\t\tpmpro_ShowMonthOrYear();\n\t\t\t});\n\t\t});\n\n\t\tfunction pmpro_ShowMonthOrYear()\n\t\t{\n\t\t\tvar filter = jQuery('#filter').val();\n\t\t\tif(filter == 'all')\n\t\t\t{\n\t\t\t\tjQuery('#start-month').hide();\n\t\t\t\tjQuery('#start-day').hide();\n\t\t\t\tjQuery('#start-year').hide();\n\t\t\t\tjQuery('#end-month').hide();\n\t\t\t\tjQuery('#end-day').hide();\n\t\t\t\tjQuery('#end-year').hide();\n\t\t\t\tjQuery('#predefined-date').hide();\n\t\t\t\tjQuery('#status').hide();\n\t\t\t\tjQuery('#l').hide();\n\t\t\t\tjQuery('#from').hide();\n\t\t\t\tjQuery('#to').hide();\n\t\t\t\tjQuery('#submit').show();\n\t\t\t\tjQuery('#filterby').hide();\n\t\t\t}\n\t\t\telse if(filter == 'within-a-date-range')\n\t\t\t{\n\t\t\t\tjQuery('#start-month').show();\n\t\t\t\tjQuery('#start-day').show();\n\t\t\t\tjQuery('#start-year').show();\n\t\t\t\tjQuery('#end-month').show();\n\t\t\t\tjQuery('#end-day').show();\n\t\t\t\tjQuery('#end-year').show();\n\t\t\t\tjQuery('#predefined-date').hide();\n\t\t\t\tjQuery('#status').hide();\n\t\t\t\tjQuery('#l').hide();\n\t\t\t\tjQuery('#submit').show();\n\t\t\t\tjQuery('#from').show();\n\t\t\t\tjQuery('#to').show();\n\t\t\t\tjQuery('#filterby').hide();\n\t\t\t}\n\t\t\telse if(filter == 'predefined-date-range')\n\t\t\t{\n\t\t\t\tjQuery('#start-month').hide();\n\t\t\t\tjQuery('#start-day').hide();\n\t\t\t\tjQuery('#start-year').hide();\n\t\t\t\tjQuery('#end-month').hide();\n\t\t\t\tjQuery('#end-day').hide();\n\t\t\t\tjQuery('#end-year').hide();\n\t\t\t\tjQuery('#predefined-date').show();\n\t\t\t\tjQuery('#status').hide();\n\t\t\t\tjQuery('#l').hide();\n\t\t\t\tjQuery('#submit').show();\n\t\t\t\tjQuery('#from').hide();\n\t\t\t\tjQuery('#to').hide();\n\t\t\t\tjQuery('#filterby').show();\n\t\t\t}\n\t\t\telse if(filter == 'within-a-level')\n\t\t\t{\n\t\t\t\tjQuery('#start-month').hide();\n\t\t\t\tjQuery('#start-day').hide();\n\t\t\t\tjQuery('#start-year').hide();\n\t\t\t\tjQuery('#end-month').hide();\n\t\t\t\tjQuery('#end-day').hide();\n\t\t\t\tjQuery('#end-year').hide();\n\t\t\t\tjQuery('#predefined-date').hide();\n\t\t\t\tjQuery('#status').hide();\n\t\t\t\tjQuery('#l').show();\n\t\t\t\tjQuery('#submit').show();\n\t\t\t\tjQuery('#from').hide();\n\t\t\t\tjQuery('#to').hide();\n\t\t\t\tjQuery('#filterby').show();\n\t\t\t}\n\t\t\telse if(filter == 'within-a-status')\n\t\t\t{\n\t\t\t\tjQuery('#start-month').hide();\n\t\t\t\tjQuery('#start-day').hide();\n\t\t\t\tjQuery('#start-year').hide();\n\t\t\t\tjQuery('#end-month').hide();\n\t\t\t\tjQuery('#end-day').hide();\n\t\t\t\tjQuery('#end-year').hide();\n\t\t\t\tjQuery('#predefined-date').hide();\n\t\t\t\tjQuery('#status').show();\n\t\t\t\tjQuery('#l').hide();\n\t\t\t\tjQuery('#submit').show();\n\t\t\t\tjQuery('#from').hide();\n\t\t\t\tjQuery('#to').hide();\n\t\t\t\tjQuery('#filterby').show();\n\t\t\t}\n\t\t}\n\n\t\tpmpro_ShowMonthOrYear();\n\n\n\t</script>\n\n\t<p class=\"search-box\">\n\t\t<label class=\"hidden\" for=\"post-search-input\"><?php _e('Search Orders', 'pmpro');?>:</label>\n\t\t<input type=\"hidden\" name=\"page\" value=\"pmpro-orders\" />\n\t\t<input id=\"post-search-input\" type=\"text\" value=\"<?php echo $s?>\" name=\"s\"/>\n\t\t<input class=\"button\" type=\"submit\" value=\"<?php _e('Search Orders', 'pmpro');?>\"/>\n\t</p>\n\n\t<?php\n\t\t//some vars for the search\n\t\tif(isset($_REQUEST['pn']))\n\t\t\t$pn = intval($_REQUEST['pn']);\n\t\telse\n\t\t\t$pn = 1;\n\n\t\tif(isset($_REQUEST['limit']))\n\t\t\t$limit = intval($_REQUEST['limit']);\n\t\telse\n\t\t\t$limit = 15;\n\n\t\t$end = $pn * $limit;\n\t\t$start = $end - $limit;\n\n\t\t//filters\n\t\tif($filter == \"all\" || !$filter)\n\t\t\t\t$condition = \"1=1\";\n\t\telseif($filter == \"within-a-date-range\")\n\t\t{\n\t\t\t$start_date = $start_year.\"-\".$start_month.\"-\".$start_day;\n\t\t\t$end_date = $end_year.\"-\".$end_month.\"-\".$end_day;\n\n\t\t\t//add times to dates\n\t\t\t$start_date =  $start_date . \" 00:00:00\";\n\t\t\t$end_date =  $end_date . \" 23:59:59\";\n\n\t\t\t$condition = \"timestamp BETWEEN '\".esc_sql($start_date).\"' AND '\".esc_sql($end_date).\"'\";\n\t\t}\n\t\telseif($filter == \"predefined-date-range\")\n\t\t{\n\t\t\tif($predefined_date == \"Last Month\")\n\t\t\t{\n\t\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of last month\", current_time(\"timestamp\")));\n\t\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of last month\", current_time(\"timestamp\")));\n\t\t\t}\n\t\t\telseif($predefined_date == \"This Month\")\n\t\t\t{\n\t\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of this month\", current_time(\"timestamp\")));\n\t\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of this month\", current_time(\"timestamp\")));\n\t\t\t}\n\t\t\telseif($predefined_date == \"This Year\")\n\t\t\t{\n\t\t\t\t$year = date('Y');\n\t\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of January $year\", current_time(\"timestamp\")));\n\t\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of December $year\", current_time(\"timestamp\")));\n\t\t\t}\n\n\t\t\telseif($predefined_date == \"Last Year\")\n\t\t\t{\n\t\t\t\t$year = date('Y') - 1;\n\t\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of January $year\", current_time(\"timestamp\")));\n\t\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of December $year\", current_time(\"timestamp\")));\n\t\t\t}\n\n\t\t\t//add times to dates\n\t\t\t$start_date =  $start_date . \" 00:00:00\";\n\t\t\t$end_date =  $end_date . \" 23:59:59\";\n\n\t\t\t$condition = \"timestamp BETWEEN '\".esc_sql($start_date).\"' AND '\".esc_sql($end_date).\"'\";\n\t\t}\n\t\telseif($filter == \"within-a-level\")\n\t\t{\n\t\t\t$condition = \"membership_id = \" . esc_sql($l);\n\t\t}\n\t\telseif($filter == \"within-a-status\")\n\t\t{\n\t\t\t$condition = \"status = '\" . esc_sql($status) . \"' \";\n\t\t}\n\n\t\t//string search\n\t\tif($s)\n\t\t{\n\t\t\t$sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS o.id FROM $wpdb->pmpro_membership_orders o LEFT JOIN $wpdb->users u ON o.user_id = u.ID LEFT JOIN $wpdb->pmpro_membership_levels l ON o.membership_id = l.id \";\n\n\t\t\t$join_with_usermeta = apply_filters(\"pmpro_orders_search_usermeta\", false);\n\t\t\tif($join_with_usermeta)\n\t\t\t\t$sqlQuery .= \"LEFT JOIN $wpdb->usermeta um ON o.user_id = um.user_id \";\n\n\t\t\t$sqlQuery .= \"WHERE (1=2 \";\n\n\t\t\t$fields = array(\"o.id\", \"o.code\", \"o.billing_name\", \"o.billing_street\", \"o.billing_city\", \"o.billing_state\", \"o.billing_zip\", \"o.billing_phone\", \"o.payment_type\", \"o.cardtype\", \"o.accountnumber\", \"o.status\", \"o.gateway\", \"o.gateway_environment\", \"o.payment_transaction_id\", \"o.subscription_transaction_id\", \"u.user_login\", \"u.user_email\", \"u.display_name\", \"l.name\");\n\n\t\t\tif($join_with_usermeta)\n\t\t\t\t$fields[] = \"um.meta_value\";\n\n\t\t\t$fields = apply_filters(\"pmpro_orders_search_fields\", $fields);\n\n\t\t\tforeach($fields as $field)\n\t\t\t\t$sqlQuery .= \" OR \" . $field . \" LIKE '%\" . esc_sql($s) . \"%' \";\n\t\t\t$sqlQuery .= \") \";\n\n\t\t\t$sqlQuery .= \"AND \" . $condition . \" \";\n\n\t\t\t$sqlQuery .= \"GROUP BY o.id ORDER BY o.id DESC, o.timestamp DESC \";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS id FROM $wpdb->pmpro_membership_orders WHERE \".$condition.\" ORDER BY id DESC, timestamp DESC \";\n\t\t}\n\n\t\t$sqlQuery .= \"LIMIT $start, $limit\";\n\n\t\t$order_ids = $wpdb->get_col($sqlQuery);\n\n\t\t$totalrows = $wpdb->get_var(\"SELECT FOUND_ROWS() as found_rows\");\n\n\t\tif($order_ids)\n\t\t{\n\t\t?>\n\t\t<p class=\"clear\"><?php printf(__(\"%d orders found.\", \"pmpro\"), $totalrows);?></span></p>\n\t\t<?php\n\t\t}\n\t?>\n\t<table class=\"widefat\">\n\t\t<thead>\n\t\t\t<tr class=\"thead\">\n\t\t\t\t<th><?php _e('ID', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Code', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('User', 'pmpro');?></th>\n\t\t\t\t<?php do_action(\"pmpro_orders_extra_cols_header\", $order_ids);?>\n\t\t\t\t<th><?php _e('Membership Level', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Total', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Payment', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Gateway', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Transaction IDs', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Status', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Date', 'pmpro');?></th>\n\t\t\t\t<th></th>\n\t\t\t\t<th></th>\n\t\t\t\t<th></th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody id=\"orders\" class=\"list:order orders-list\">\n\t\t\t<?php\n\t\t\t\t$count = 0;\n\t\t\t\tforeach($order_ids as $order_id)\n\t\t\t\t{\n\t\t\t\t\t$order = new MemberOrder();\n\t\t\t\t\t$order->nogateway = true;\n\t\t\t\t\t$order->getMemberOrderByID($order_id);\n\t\t\t\t\t?>\n\t\t\t\t\t\t<tr <?php if($count++ % 2 == 0) { ?>class=\"alternate\"<?php } ?>>\n\t\t\t\t\t\t\t<td><a href=\"admin.php?page=pmpro-orders&order=<?php echo $order->id?>\"><?php echo $order->id;?></a></td>\n\t\t\t\t\t\t\t<td><a href=\"admin.php?page=pmpro-orders&order=<?php echo $order->id?>\"><?php echo $order->code;?></a></td>\n\t\t\t\t\t\t\t<td class=\"username column-username\">\n\t\t\t\t\t\t\t\t<?php $order->getUser(); ?>\n\t\t\t\t\t\t\t\t<?php if(!empty($order->user)) { ?>\n\t\t\t\t\t\t\t\t\t<a href=\"user-edit.php?user_id=<?php echo $order->user->ID?>\"><?php echo $order->user->user_login?></a>\n\t\t\t\t\t\t\t\t<?php } else { ?>\n\t\t\t\t\t\t\t\t\t[<?php _e('deleted', 'pmpro');?>]\n\t\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t// Set up the hover actions for this user\n\t\t\t\t\t\t\t\t\t$actions = apply_filters( 'pmpro_orders_user_row_actions', array(), $order->user );\n\t\t\t\t\t\t\t\t\t$action_count = count( $actions );\n\t\t\t\t\t\t\t\t\t$i = 0;\n\t\t\t\t\t\t\t\t\tif($action_count)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$out = '<div class=\"row-actions\">';\n\t\t\t\t\t\t\t\t\t\tforeach ( $actions as $action => $link ) {\n\t\t\t\t\t\t\t\t\t\t\t++$i;\n\t\t\t\t\t\t\t\t\t\t\t( $i == $action_count ) ? $sep = '' : $sep = ' | ';\n\t\t\t\t\t\t\t\t\t\t\t$out .= \"<span class='$action'>$link$sep</span>\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t$out .= '</div>';\n\t\t\t\t\t\t\t\t\t\techo $out;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<?php do_action(\"pmpro_orders_extra_cols_body\", $order);?>\n\t\t\t\t\t\t\t<td><?php echo $order->membership_id;?></td>\n\t\t\t\t\t\t\t<td><?php echo pmpro_formatPrice($order->total);?></td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<?php if(!empty($order->payment_type)) echo $order->payment_type . \"<br />\";?>\n\t\t\t\t\t\t\t\t<?php if(!empty($order->accountnumber)) { ?>\n\t\t\t\t\t\t\t\t\t<?php echo $order->cardtype;?>: x<?php echo last4($order->accountnumber);?><br />\n\t\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t\t<?php if(!empty($order->billing->street)) { ?>\n\t\t\t\t\t\t\t\t\t<?php echo $order->billing->street; ?><br />\n\t\t\t\t\t\t\t\t\t<?php if( $order->billing->city &&  $order->billing->state) { ?>\n\t\t\t\t\t\t\t\t\t\t<?php echo  $order->billing->city?>, <?php echo  $order->billing->state?> <?php echo  $order->billing->zip?>  <?php if(!empty( $order->billing->country)) echo  $order->billing->country?><br />\n\t\t\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t\t<?php if(!empty($order->billing->phone)) echo formatPhone($order->billing->phone);?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td><?php echo $order->gateway;?><?php if($order->gateway_environment == \"test\") echo \"(test)\";?></td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<?php _e('Payment', 'pmpro');?>: <?php if(!empty($order->payment_transaction_id)) echo $order->payment_transaction_id; else echo \"N/A\";?>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<?php _e('Subscription', 'pmpro');?>: <?php if(!empty($order->subscription_transaction_id)) echo $order->subscription_transaction_id; else echo \"N/A\";?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td><?php echo $order->status;?></td>\n\t\t\t\t\t\t\t<td><?php echo date(get_option('date_format'), $order->timestamp);?></td>\n\t\t\t\t\t\t\t<td align=\"center\">\n\t\t\t\t\t\t\t\t<a href=\"admin.php?page=pmpro-orders&order=<?php echo $order->id;?>\"><?php _e('edit', 'pmpro');?></a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td align=\"center\">\n\t\t\t\t\t\t\t\t<a href=\"admin.php?page=pmpro-orders&order=-1&copy=<?php echo $order->id;?>\"><?php _e('copy', 'pmpro');?></a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td align=\"center\">\n\t\t\t\t\t\t\t\t<a href=\"javascript:askfirst('<?php printf(__(\"Deleting orders is permanent and can affect active users. Are you sure you want to delete order %s?\", \"pmpro\"), str_replace(\"'\", \"\", $order->code));?>', 'admin.php?page=pmpro-orders&delete=<?php echo $order->id;?>'); void(0);\"><?php _e('delete', 'pmpro');?></a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<?php\n\t\t\t\t}\n\n\t\t\t\tif(!$order_ids)\n\t\t\t\t{\n\t\t\t\t?>\n\t\t\t\t<tr>\n\t\t\t\t\t<td colspan=\"9\"><p><?php _e('No orders found.', 'pmpro');?></p></td>\n\t\t\t\t</tr>\n\t\t\t\t<?php\n\t\t\t\t}\n\t\t\t?>\n\t\t</tbody>\n\t</table>\n\t</form>\n\n\t<?php\n\t\t//add normal args\n\t\t$pagination_url = add_query_arg($url_params, get_admin_url(NULL, \"/admin.php?page=pmpro-orders\"));\n\t\techo pmpro_getPaginationString($pn, $totalrows, $limit, 1, $pagination_url, \"&limit=$limit&pn=\");\n\t?>\n\n<?php } ?>\n\n<?php\n\trequire_once(dirname(__FILE__) . \"/admin_footer.php\");\n?>\n", "<?php\n\tglobal $pmpro_reports;\n\t\n\trequire_once(dirname(__FILE__) . \"/admin_header.php\");\n\t\n\t//default view, report widgets\n\tif(empty($_REQUEST['report']))\n\t{\t\t\t\t\n\t\t//wrapper\n\t\t?>\n\t\t<div id=\"dashboard-widgets-wrap\">\n\t\t\t<div id=\"dashboard-widgets\" class=\"metabox-holder pmpro_reports-holder columns-2\">\t\n\t\t\t<div id=\"postbox-container-1\" class=\"postbox-container\">\n\t\t\t\t<div id=\"normal-sortables\" class=\"meta-box-sortables ui-sortable\">\n\t\t<?php\n\t\t\n\t\t//report widgets\n\t\t$count = 0;\n\t\t$nreports = count($pmpro_reports);\n\t\t$split = false;\n\t\tforeach($pmpro_reports as $report => $title)\n\t\t{\n\t\t\t//make sure title is translated (since these are set before translations happen)\n\t\t\t$title = __($title, \"pmpro\");\n\t\t\t\n\t\t\t//put half of the report widgets in postbox-container-2\n\t\t\tif(!$split && $count++ > $nreports/2)\n\t\t\t{\n\t\t\t\t$split = true;\n\t\t\t\t?>\n\t\t\t\t</div></div><div id=\"postbox-container-2\" class=\"postbox-container\"><div id=\"side-sortables\" class=\"meta-box-sortables ui-sortable\">\n\t\t\t\t<?php\n\t\t\t}\n\t\t?>\n\t\t<div id=\"pmpro_report_<?php echo $report; ?>\" class=\"postbox pmpro_clickable\" onclick=\"location.href='<?php echo admin_url(\"admin.php?page=pmpro-reports&report=\" . $report);?>';\">\t\t\t\n\t\t\t<h3 class=\"hndle\"><span><?php echo $title; ?></span></h3>\n\t\t\t<div class=\"inside\">\n\t\t\t\t<?php call_user_func(\"pmpro_report_\" . $report . \"_widget\"); ?>\n\t\t\t\t<div style=\"margin-top:10px;border-top: 1px solid #ddd; padding-top: 10px; text-align:center;\">\n\t\t\t\t\t<a class=\"button button-primary\" href=\"<?php echo admin_url(\"admin.php?page=pmpro-reports&report=\" . $report);?>\"><?php _e('Details', 'pmpro');?></a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<?php\n\t\t}\n\t\t\n\t\t//end wrapper\n\t\t?>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<?php\n\t}\n\telse\n\t{\n\t\t//view a single report\n\t\t$report = $_REQUEST['report'];\n\t\tcall_user_func(\"pmpro_report_\" . $report . \"_page\");\n\t}\n\t\n\trequire_once(dirname(__FILE__) . \"/admin_footer.php\");\n?>", "=== Paid Memberships Pro ===\r\nContributors: strangerstudios\r\nTags: memberships, membership, authorize.net, ecommerce, paypal, stripe, braintree, restrict access, restrict content, directory site, payflow\r\nRequires at least: 3.5\r\nTested up to: 4.2.2\r\nStable tag: 1.8.4.2\r\n\r\nThe easiest way to GET PAID with your WordPress site. Flexible content control by Membership Level, Reports, Affiliates and Discounts\r\n\r\n== Description ==\r\nSet up unlimited membership levels and provide restricted access to pages, posts, categories, videos, forums, downloads, support, single \"a la carte\" page access, and more. Paid Memberships Pro is flexible enough to fit the needs of almost all online and offline businesses. It works great out of the box, but is easy for developers to customize to fit your needs.\r\n\r\n[youtube http://www.youtube.com/watch?v=33nORRIZaQk]\r\n\r\nPaid Memberships Pro is the community solution for adding paid memberships to your WordPress site. PMPro is 100% GPL. All code, including add-ons, is available for free from the WordPress repository here or on our site at http://www.paidmembershipspro.com. This version in the WordPress repository is the full version of the plugin with no restrictions or additional licenses required. Developers should get involved at [our GitHub page](https://github.com/strangerstudios/paid-memberships-pro/).\r\n\r\n= Integrate with The Most Popular Payment Gateways. =\r\nStripe, Authorize.net, Braintree Payments, and PayPal (Standard, Express, Website Payments Pro, and PayPal Payments Pro/Payflow)\r\n\r\n= Works with Any Theme You Want. =\r\nYour Existing Theme or a Popular Free or Premium Third-Party Theme.\r\n\r\n= Infinitely Configurable, Unlimited Membership Levels. =\r\nSet up the membership levels that best fit your business, whether they are Free, Paid, or Recurring Subscriptions (Annual, Monthly, Weekly, Daily). Offer Custom Trial Periods (Free Trial, Custom-length Trial, 'Introductory' Pricing)\r\n\r\n= Easy-to-Use Admin Pages and Settings. =\r\n1. Membership access by Page/Post/Category\r\n2. Members list with CSV export\r\n3. Easy payment gateway setup\r\n4. Ever expanding list of membership reports\r\n5. Membership discounts with customizable price rules\r\n\r\n= Control the User-Experience from Start to Finish. =\r\nYour members can update their billing information or cancel their account directly on your site. Any active subscription will be cancelled at the payment gateway for you.\r\n\r\n= Integrate with Top Third Party Tools. =\r\nPMPro integrates with Mailchimp, Constant Contact, AWeber, KISSMetrics, Infusionsoft, WP Courseware, LearnDash, Post Affiliate Pro, bbPress, WooCommerce, and many more popular third party tools.\r\n\r\n= Free Add-ons to Customize and Extend PMPro. =\r\nExtensions, sister plugins, and other bits of code to customize your implementation and help you integrate with 3rd party services or other plugins. All open source and available for free under the GPL v2 license.\r\n\r\n[View the PMPro Add-Ons](http://www.paidmembershipspro.com/add-ons/)\r\n\r\n== Installation ==\r\n\r\n= Download, Install and Activate! =\r\n1. Download the latest version of the plugin.\r\n2. Unzip the downloaded file to your computer.\r\n3. Upload the /paid-memberships-pro/ directory to the /wp-content/plugins/ directory of your site.\r\n4. Activate the plugin through the 'Plugins' menu in WordPress.\r\n\r\n= Complete the Initial Plugin Setup =\r\nThe plugin will walk you through initial setup - basic steps are outlined below.\r\n\r\n1. Add one or more Membership Levels\r\n2. Set up the PMPro Pages\r\n3. Configure your Payment Gateway and SSL\r\n4. Customize Email Settings\r\n5. Review Advanced Settings (best left untouched).\r\n\r\n[A tutorial video of the initial plugin setup is available here](http://www.paidmembershipspro.com/documentation/initial-plugin-setup/tutorial-video/).\r\n\r\n[Written instructions on initial plugin setup are available here](http://www.paidmembershipspro.com/documentation/initial-plugin-setup/).\r\n\r\n== Frequently Asked Questions ==\r\n\r\n= I need help installing, configuring, or customizing the plugin. =\r\nPlease visit [our premium support site at http://www.paidmembershipspro.com](http://www.paidmembershipspro.com) for more documentation and our support forums.\r\n\r\n= I found a bug in the plugin. =\r\nPlease post it in the [WordPress support forum](http://wordpress.org/tags/paid-memberships-pro?forum_id=10) and we'll fix it right away. Thanks for helping. \r\n\r\n= My site is broken or blank or not letting me log in after activating Paid Memberships Pro =\r\nThis is typically caused by a conflict with another plugin that is trying to redirect around the login/register pages or trying to redirect from HTTP to HTTPS, etc.\r\n\r\nTo regain access to your site, FTP to your site and rename the wp-content/plugins/paid-memberships-pro folder to wp-content/plugins/paid-memberhsips-pro-d (or anything different). Now WP will not be able to find PMPro, and you can gain access to /wp-admin/ again. From there, visit the plugins page to fully deactivate Paid Memberships Pro. (You'll want to rename the folder back to paid-memberhsips-pro again.)\r\n\r\nLong term, you will need to find and fix the conflict. We can usually do this for you very quickly if you sign up for support at http://www.paidmembershipspro.com/pricing/ and send us your WP admin and FTP credentials.\r\n\r\n= Does PMPro Support Multisite/Network Installs? =\r\n\"Supporting multisite\" means different things to different people.\r\n\r\nOut of the box PMPro will basically act as a stand alone plugin for each site. Each site has its own list of membership levels, members, payment settings, etc.\r\n\r\nI've written a plugin [PMPro-Network](http://www.paidmembershipspro.com/add-ons/plugins-on-github/pmpro-network-multisite-membership/) that shows the basics for allowing users who signs up for a membership at one site to be able to create or reclaim their own site under the multisite setup. It's powerful stuff.\r\n\r\nIf you would like more help using PMPro on a network install, sign up for support at http://www.paidmembershipspro.com.\r\n\r\n= Does PMPro Support X? =\r\nNot sure? You can find out by doing a bit a research.\r\n\r\n1. [Check our compatibility page](http://www.paidmembershipspro.com/compatibility/).\r\n2. [Check our add ons](http://www.paidmembershipspro.com/add-ons/).\r\n3. [Do a search on our site](http://www.paidmembershipspro.com/).\r\n4. [Ask in the forums here](http://wordpress.org/tags/paid-memberships-pro?forum_id=10).\r\n\r\n== Screenshots ==\r\n\r\n1. Set up the membership levels that best fit your business, whether they are Free, Paid, or Subscriptions (Annual, Monthly, Weekly, Daily). Offer Custom Trial Periods (Free Trial, Custom-length Trial, 'Introductory' Pricing)\r\n2. Easy to use Membership Access Settings by Page, Post, or Category. Shortcodes to display restricted content inline. Developer-friendly hooks to restrict access any way you need.\r\n3. Members are WordPress Users. PMPro provides a unique interface to view, filter and search Members or export your Members List.\r\n4. Offer Membership Discounts with specific price rules (restricted by level, unique pricing for each level, # of uses, expiration date.)\r\n\r\n== Changelog == \r\n= 1.8.4.2 =\r\n* BUG: Fixed bug where dropdown to set the account page in the page settings was showing up twice.\r\n* BUG: Fixed warning in pmpro_account shortcode.\r\n* BUG: Grammar fixes in admin pages. \"Setup\" changed to \"Set Up\" when used as a verb. (Thanks, sumobi on GitHub)\r\n* ENHANCEMENT: If the option is set, terms of service page embedded on the checkout page will not be passed through do_shortcode so shortcodes get processed in the text. (Thanks, cliffordp on GitHub)\r\n* ENHANCEMENT: The pmpro_account shortcode will now accept \"membership\" or \"memberships\" for the section name.\r\n\r\n= 1.8.4.1 =\r\n* BUG: Fixed issue introduced in 1.8.4 where levels wouldn't show up in the front end if they hadn't been reordered.\r\n\r\n= 1.8.4 =\r\n* BUG: Fixed the Stripe webhook to work on new orders that are storing the subscription id instead of the customer id in the subscription_transaction_id field. (Thanks, nickd32 on GitHub)\r\n* BUG: Fixed issue where the name and email address of customers was not being sent to Stripe if existing members checked out while the \"show billing address\" option was set to false.\r\n* BUG: Fixed bug where users who checked out with the Braintree Payments gateway could checkout again using their on file credit card if an invalid credit card was entered at checkout the second time. (Thanks, patternsinthecloud)\r\n* BUG: Updated the 2Checkout PHP API library and fixed some issues with 2Checkout integration.\r\n* BUG: Fixed issue where custom roles had to have pmpro_membershiplevels capability to view other PMPro-related dashboard pages. (Thanks, squarelines)\r\n* ENHANCEMENT: Added the ability to order levels on the Levels page by drag and drop in the WordPress admin.\r\n* ENHANCEMENT: Now hiding tabs in the PMPro settings if a user doesn't have access to that tab (but does have access to other tabs).\r\n* ENHANCEMENT: Converted all files to unix format and removed trailing whitespace. This has no functional change on the plugin, but helps developers who are contributing. (Thanks, meths on GitHub)\r\n* ENHANCEMENT: New Danish translation. (Thanks, Morten Stenb\u00e6k and Frederik Hermund)\r\n\r\n= 1.8.3.1 =\r\n* BUG: Changed some uses of $wpdb->base_prefix to $wpdb->prefix to fix multisite support.\r\n* BUG: Wrapped pmpro_isDateThisMonth in a function_exists check since some addons already have this defined.\r\n\r\n= 1.8.3 =\r\n* SECURITY PATCH: The pmpro_getOption function has been updated to not set values from $_REQUEST when available. This allowed malicious users to override PMPro settings on single page loads allowing them to inject text into pages and do other \"bad things\". (Thanks, Charles Hill)\r\n* SECURITY PATCH: Many calls to pmpro_getOption(\"gateway\") were changed to use pmpro_getGateway which specifically allowed for overriding that one value via a request parameter (the validity of the gateway is double checked).\r\n* BUG: No longer showing the number of visits/views/logins \"this month\" when the user hasn't visited in over a month. (Thanks, Kenneth)\r\n* BUG: Fix for email from names with apostrophes and quotes in them.\r\n* BUG: Using current_time() and escaping form values better in logins report.\r\n* BUG: Fixed issue in pmpro_generateUsername() when checking for duplicates. (Thanks, Ruslan)\r\n* BUG: Fixed issue where $user var wasn't set for emails sent out in the Braintree webhook script. (Thanks, Charles Hill)\r\n* ENHANCEMENT: Added pmpro_account_bullets_top and pmpro_account_bullets_bottom hooks to add content to the accounts page.\r\n* ENHANCEMENT: Added pmpro_get_recurring_payments_profile_details_nvpstr, pmpro_manage_recurring_payments_profile_status_nvpstr, pmpro_create_recurring_payments_profile_nvpstr, pmpro_do_express_checkout_payment_nvpstr, and pmpro_get_express_checkout_details_nvpstr hooks to filter specific nvp strings in the PayPal Express integration.\r\n* ENHANCEMENT: Added labels to checkboxes in the dashboard settings pages.\r\n* ENHANCEMENT: Can now use the [pmpro_account] shortcode on other pages/widgets/etc. Can also limit to specific sections [pmpro_account sections='membership,profile,invoices,links'] just remove sections from that list.\r\n* ENHANCEMENT: Changed all uses of the global $table_prefix to use $wpdb->base_prefix to aid in compatibility when loading WordPress with other PHP code (e.g. phpBB). (Thanks, Dion)\r\n* ENHANCEMENT: The notification script was updated to point to notifications.paidmembershipspro.com instead of www.paidmembershipspro.com/notifications/. This allows us to keep our notification script on a different server. This script is used to insert notifications into the PMPro admin pages when important updates are available.\r\n\r\n= 1.8.2.2 =\r\n* BUG: Fixed conflicts when other plugins with older Recaptcha libraries are also activated. Prefixed our copy of the Recaptcha library and functions with pmpro_ and added code to handle cases where an older version of recaptch is used at checkout.\r\n* BUG: Fixed warnings in pmpro_formatPrice. (Thanks, Andrea Carraro)\r\n\r\n= 1.8.2.1 =\r\n* BUG: Fixed issue where admins would get emails RE membership changes whenever a profile was updated even if the membership wasn't changed. (Thanks, chrisw123)\r\n\r\n= 1.8.2 =\r\n* BUG: Fixed issue where calls to pmpro_hasMembershipLevel() using level names wasn't working. (Thanks, Scott Slone)\r\n* BUG: Fixed issue with memberslistcsv capabilities. (Thanks, Arnaud Devic)\r\n* BUG: Fixed fatal error that could come up sometimes when PMPro could not find a subscription for a user in Stripe. (Thanks, Chris Eller)\r\n* ENHANCEMENT: Triming whitespace off of search text on members list and orders list searches.\r\n* ENHANCEMENT: Security hardening of SQL queries for members list, orders list, and some helper functions.\r\n\r\n= 1.8.1 =\r\n* BUG: Fixed typos in pmpro_memberslist_csv and pmpro_orderscsv capabilities. (Thanks, Arnaud Devic)\r\n* BUG: Only loading the Braintree API when using it now.\r\n* BUG: Fixed fatal error that would occur at checkout if PayPal Standard were used with a discount code. (Thanks, John Zeiger)\r\n* BUG: Fixed issue where discount codes would not work if billing address fields were hidden. (e.g. paying by PayPal or check)\r\n* BUG: Fixed issue with the logic around sending emails when admin's change a member's level or expiration date. Admins will always get an email. Members will only get an email if the checkbox is checked.\r\n* ENHANCEMENT: No longer showing check instructions at checkout if the level is free.\r\n* ENHANCEMENT: Added pmpro_stripe_create_subscription filter. (Thanks, nickd32 on GitHub)\r\n* ENHANCEMENT: Added Czech (cs_CZ) language files and support for using decimals as separators. (Thanks, Martin \"shr3k\" Koke\u0161 on GitHub)\r\n\r\n= 1.8 =\r\n* ENHANCEMENT: Payment gateway classes updated so all settings and checkout fields are processed via the gateway class file. This will make it easier to maintain, update, and add new gateways.\r\n* ENHANCEMENT: Added a pmpro_after_membership_level_profile_fields hook after the \"Membership Level\" field dropdown on the edit profile page.\r\n* ENHANCEMENT: Added new statuses for orders when cancelled. cancelled = cancelled by user on cancel page or via gateway, cancelled_admin = cancelled by an admin, expired = cancelled via expiration script, level_change = user upgraded/downgraded to a different level.\r\n* ENHANCEMENT: All gateways use the $pmpro_currency global instead of getting the value via pmpro_getOption.\r\n* ENHANCEMENT: Changing South African Rand (ZAR) to use the symbol R to the left of prices. (Thanks, Rasada)\r\n* BUG: Fixed some translation issues on the checkout page and in level cost text. (Thanks, Jenkisan)\r\n* ENHANCEMENT: Added plural forms of Day, Week, Month, Year to es_ES translation. Other translation files will need to as well.\r\n* BUG: Fixed bug where the $short parameter of pmpro_getLevelCost wasn't shortening the output in some cases. (Thanks, Kimberly Coleman)\r\n* BUG: Fixed warning in membership dropdown on edit user/profile page. (Thanks, Thomas Sjolshagen)\r\n* ENHANCEMENT: Added German (de_DE) translation files. (Thanks, Cedros)\r\n* ENHANCEMENT: Added Dutch (nl_NL) translation files. (Thanks, Het Verzamelteam)\r\n* ENHANCEMENT: Added settings links to plugins page.\r\n* BUG: Fixed bug in Safari for iOS where checkout submission would fail after choosing \"Not Now\" when prompted to save the card.\r\n* ENHANCEMENT: Added user row actions to the members list and orders list in the dashboard. Add actions using the pmpro_memberslist_user_row_actions and pmpro_orders_user_row_actions filters which work the same as the core WP user_row_actions filter.\r\n* BUG: Fixed issues with the membership shortcode and pmpro_hasMembershipLevel function.\r\n* ENHANCEMENT: Can now use L or -L to check if a user is logged in (L) or not (-L) in the membership shortcode or pmpro_hasMembershipLevel function.\r\n* ENHANCEMENT: Updated to the new version of Google's ReCaptcha.\r\n* BUG: Fixed issue with quotes and other special characters in membership level names, descriptions, and confirmations. (Thanks, Marcelo Hinojosa)\r\n\r\n= 1.7.15.3 = \r\n* BUG: Now correctly setting $saveid when a discount code is created so the pmpro_save_discount_code hook will have the correct id value when codes are created.\r\n* BUG: Using get_userdata in checkout code for better multisite support when setting default role of new users.\r\n\r\n= 1.7.15.2 =\r\n* BUG: Stripe JS looks for a field with id AND name = CardType now so the new checkout code is compatible with older checkout templates and will avoid \"complete all fields\" errors.\r\n* BUG: Removed the urlencode wrappers on the Payflow API calls. Payflow seems to expect the values to be NOT encoded.\r\n* BUG: No longer running email content through wpautop if there is already HTML in an included header or footer for the email. (Thanks, Erik Bertrand)\r\n\r\n= 1.7.15.1 =\r\n* BUG: Fixed issue where \"complete all required fields\" was being shown when using Stripe. They are calling the CardType \"brand\" in their return object, not \"type\".\r\n* BUG: Removed code from includes/notifications.php that was deleting the transient used to keep PMPro installs from hitting the PMPro server too often.\r\n* ENHANCEMENT: Added the \"pmpro_checkout_signon_secure\" filter so you can tell PMPro to login over http or https in case other plugins (like WordPress MU Domain Mapping) conflict with what should be chosen here.\r\n* Avoiding some warnings.\r\n\r\n= 1.7.15 =\r\n* SECURITY FIX: The /services/getfile.php script has been disabled by default. You must set the PMPRO_GETFILE_ENABLED constant to true or 1 to allow the script to run. Additionally, the script will strip ../ and /. type strings out of the URI when looking for files to get and will not read any files using the extensions set via the pmpro_getfile_extension_blacklist filter. By default inc, php, php3, php4, php5, phps, and phtml file types are not allowed. (Thanks, Kacper Szurek)\r\n* BUG: Fixed issue with Stripe integration where existing members checking out for new recurring subscriptions would receive extra charges. Now deleting the old Stripe subscription and any related open invoices and creating a new subscription instead of just updating the old subscription. (Thanks, Antonv and Thomas Sjolshagen)\r\n* BUG: Fixed issue with Braintree integration where the billing address associated with a credit card was not being updated via the update billing page. (Thanks, Keith Abramo)\r\n* BUG: Fixed issue where pmpro_next_payment() would return a 0 timestamp instead of false when there is no previous order. (Thanks, Thomas Sjolshagen)\r\n* ENHANCEMENT: Added pmpro_formatPrice() and pmpro_getCurrencyPosition() functions. Now using them to render prices with formatting. You can use the pmpro_format_price filter or pmpro_currecies filter to adjust the formatting of prices to support currency symbols after the price or to use commas instead of periods for separators.\r\n* ENAHNCEMENT: Added getSubscriptionStatus() to Authorize.net gateway class. Also fixed up some of the logic around checking the gateway environment.\r\n* BUG: Now urlencoding the API Username and Password sent through the PayPal APIs in case your values have + or other special characters in them. (Thanks, mrschmiddy)\r\n* BUG: Now showing cycle number in the Fee column of the members list. E.g. a level that is $10 every 3 months will now show up as $10.00 + $10.00/3 Months.\r\n* BUG: Fixed bug where user first_name and last_name were being overwritten by PayPal values when using PayPal Standard.\r\n* ENHANCEMENT: Added PMPRO_CRON_LIMIT constant, which can be used to limit the number of records processed by each scheduled cron job. This can for example, keep your server from going over PHP time limits or email limits. Use define('PMPRO_CRON_LIMIT', 100); to set the limit to 100.\r\n* BUG: Discount code AJAX calls now going through admin-ajax.php, fixing issues where the Themed Profiles module of Theme My Login would block those calls. (Thanks, Tony)\r\n* ENHANCEMENT: Removed the \"CardType\" field at checkout and now using the jquery.creditCardValidator script to determine the card type on form submit.\r\n* BUG: No longer setting $order->subtotal and invoice total to the billing amount (vs the initial price) for recurring payments with Cybersource, PayPal Standard, PayPal Express or Twocheckout. (Thanks, Joce Nunes)\r\n* ENHANCEMENT: The search filter will no longer filter out a post that is in a category blocked by one membership level if the user also has access to that content through another category.\r\n* BUG/ENHANCEMENT: Running email body through wpautop if it doesn't look like HTML.\r\n* ENHANCEMENT: Added pmpro_getfile_before_error hook in getfile.php.\r\n* ENHANCEMENT: Added pmpro_ipn_check_receiver_email filter if you want to change how the email is checked in the IPN log.\r\n* BUG: Fixed bug where reports would show duplicate month labels on the last day of the month.\r\n* BUG: Fixed some issues with logging in at checkout, especially when using FORCE_SSL_ADMIN. (Thanks, Wimans)\r\n* ENHANCEMENT: Added \"pending\" as a default status for orders available on the edit order page in the dashboard.\r\n\r\n= 1.7.14.2 =\r\n* BUG: Removed the debug call to d($...) that was left in preheaders/checkout.php and would show up when checkout forms were submitted with empty fields. (Thanks, Nicolas)\r\n\r\n= 1.7.14.1 =\r\n* BUG: Fixed warnings in PayPal Express class that could break redirects at checkout. (Thanks, Adam Warner)\r\n* BUG: Fixed issue where new users who checked out with Braintree weren't having their customerid's saved, which led to subscription syncronization issues if they checked out again or updated their billing.\r\n* BUG: Fixed warnings in the membership-billing page.\r\n* BUG: Fixed false positive \"There are JavaScript errors on the page. Please contact the webmaster.\" errors.\r\n* BUG: Fixed issue where users on some sites running 1.7.14 could not logout.\r\n* OTHER: Changed the CSS class of the checkout button generated via [checkout_button] shortcode or pmpro_getCheckoutButton() function from \"btn btn-primary\" to \"pmpro_btn\" to match other buttons generated with PMPro.\r\n\r\n= 1.7.14 =\r\n* BUG: Fixed bug where level cost would sometimes have incorrect pluralization of months/weeks/etc. (Thanks, Kevin Ackerman)\r\n* BUG/ENHANCEMENT: Now checking the child and parent theme for email_header.html and email_footer.html files to use for emails. The child theme is checked first.\r\n* ENHANCEMENT: Added pmpro_getfile_before_readfile hook (passes $filename and $mimetype params) in getfile.php\r\n* BUG/ENHANCEMENT: getMembershipLevel method of MemberOrder can now handle when discount_code property is an object. Also, the IPN Handler and 2Checkout handler will now try to get the discount code for the order to correctly update the users pmpro_memberships_users entry.\r\n* BUG: Removed extra class attribute from CVV field that interfered with the required * JS code and some other CSS/JS-related things. (Thanks, catapult)\r\n* ENHANCEMENT: Added code to redirect to the redirect_url if you pass a redirect_url to the login page and the user is already logged in. Updated the links in email confirmations to use login links with redirects instead of direct links.\r\n* EHANCEMENT: Added pmpro_email_attachments filter, which can be used to add attachments to PMPro emails that are sent out. E.g., https://gist.github.com/strangerstudios/c4e771dca8723613bce3\r\n\r\n= 1.7.13.1 =\r\n* Fixed bug introduced in 1.7.12 where discount code uses were not being tracked.\r\n* Added pmpro_check_discount_code filter so you can do your own checks on discount codes.\r\n\r\n= 1.7.13 =\r\n* Added Danish (da_DK) translation. (Thanks, Mikael)\r\n* Fixed bugs with timestamps in various places (especially around trial dates) introduced in 1.7.12\r\n* Another fix to keep PMPro from sending \"undefined undefined\" as the name to Stripe when the 'don't show billing fields' option is chosen.\r\n* $pmpro_stripe_verify_address flag defaults to same value of Stripe's showbillingaddress option now.\r\n* Changed the priority of pmpro_applydiscountcode_init hooking on init to 11 so pmpro_init() will run before and setup pmpro_currency_symbol among other things. (Thanks, semyou on GitHub.)\r\n* Explicitly setting $current_user->membership_level in a few places to avoid issues where current_user is overwritten between init and when we try to use it.\r\n* Avoiding a warning in pmpro_getMetavalues() function. (Thanks, Scott Sousa)\r\n* Added target=\"_blank\" to help links on admin pages. (Thanks, AntonVrba on GitHub)\r\n\r\n= 1.7.12 =\r\n* Now including expiration text in text that is updated when a discount code is used. (Thanks, John Zeiger)\r\n* Fixed check for subscription_transaction_id in readonly fields array.\r\n* Making sure that $myuser->membership_level is set in pmpro_has_membership_access().\r\n* Added Norwegian locale files. (Thanks, Maritk)\r\n* Added Turkish locale files. (Thanks, yasinkuyu on GitHub.)\r\n* Fixed error where \"undefined\" was being passed to Stripe for the name.\r\n* Fixed error with setting enddates on the edit user page for users with multiple \"active\" memberships.\r\n* \"Renew\" link will show up on levels page only if the user has the level and it is not recurring and has an enddate.\r\n* Stripe gateway is using $pmpro_currency global instead of getting value via pmpro_getOption, so it can be overridden via code like https://gist.github.com/strangerstudios/8806443\r\n* Payflow Pro gateway is now passing the currency code to the API for non-US currencies. (Thanks\r\n\r\n= 1.7.11 =\r\n* Added \"Filter searches and archives?\" setting to advanced settings tab. If you had \"Show excerpts to non-members?\" set to No before, then this will be set to Yes after upgrade. But now you can show excerpts on single post pages while still hiding restricted content from searches and archives.\r\n\r\n= 1.7.10.2 =\r\n* Fixed MySQL warning/error that was introduced in 1.7.10.1 and showing for some people who had \"hide excerpts\" enabled.\r\n\r\n= 1.7.10.1 =\r\n* Fixed bug where the $pmpro_levels global would sometimes not include all levels on the levels page. (A better fix for this is coming in v2.0.)\r\n* Fixed bug in pmpro_getMemberDays that sometimes reported more days than the user had really been a member. (Thanks, surefireweb)\r\n* Fixed bug where search results were being incorrectly filtered. The pmpro_search_filter() function in includes/content.php hides member content from non-members if the \"show exceprts\" setting is set to false.\r\n* Now checking specifically for payment_status = 'Failed' in the IPN handler before sending off the payment failed emails. (There may be other statuses we want to consider as \"failures\" as well, but we want to avoid failing on \"pending\" statuses/etc.)\r\n\r\n= 1.7.10 =\r\n* Added getGatewaySubscriptionStatus() and getGatewayTransactionStatus() methods to the MemberOrder class. These are implemented for PayPalExpress right now and will hit the gateway API to return information on a subscription or transaction.\r\n* Added pmpro_memberslist_expires_column filter to members list. $order is passed as second parameter. Use this to filter the date or \"Never\" shown in the Expires column.\r\n* No longer showing \"Membership Levels\" link in dashboard menu if a user has access to other PMPro settings pages, but not the membership levels page.\r\n* Added pmpro_applydiscountcode_return_js hook. http://www.paidmembershipspro.com/hook/pmpro_applydiscountcode_return_js/\r\n* Fixed formatting of the level cost when a discount code is applied via AJAX.\r\n* Removed extra $ in checkout_check.html email template.\r\n* Fixed bug where pmpro_setOption was not working for array values in $_POST, e.g. the hideadlevels setting on the Advanced Settings page.\r\n* pmpro_getMembershipCategories($level_id) now returns an array of category IDs instead of an array of arrays.\r\n* Swapped all _x function calls to use __ or _e so they are translated.\r\n* Initial Czech Republic (cs_CZ) translation files. (Thanks, Petr Hlav\u00e1\u010dek)\r\n\r\n= 1.7.9.1 =\r\n* Firing activation hook on upgrade so menu doesn't disappear.\r\n\r\n= 1.7.9 =\r\n* Updated PayPal Express/Standard/WPP gateways to throw an error when trying to cancel a subscription that is in pending or suspended status. A warning is shown to the user to contact the site owner or cancel the subscription through PayPal. The WP admin should also get an email about the failure. In the future, there may be a better way to handle these situations automatically, but PayPal doesn't advise how to \"cancel\" pending subscriptions.\r\n* Added optional $membership_id parameter to getLastMemberOrder() method of the MemberOrder class. So you can get the last member order of a specific level.\r\n* Added Slovakian translation. (Thanks, Peter Belko)\r\n* Added WP capabilities for each PMPro settings or report page. Admins are given these caps on plugin activation. Or you can set up other roles to use these caps. E.g. https://github.com/strangerstudios/pmpro-membership-manager-role/\r\n\r\n= 1.7.8.2 =\r\n* Updated the Stripe API library to version 1.11.0.\r\n* Fixed issues where users upgrading or downgrading would have their subscriptions cancelled at Stripe.\r\n* Fixed issues where extra emails were being sent out when users cancelled a membership when using Stripe.\r\n* Generally made the Stripe integration better and ready for version 2.0.\r\n* The Stripe webhook will now add a 5 second delay before processing most requests. This is to ensure that PMPro has time to update the order during checkout (Stripe can sometimes receive a charge or cancellation, then send the webhook, and WP can process that in the split second it takes PMPro to save an order during checkout.). This prevents duplicate orders in the PMPro DB on some charges and fixes some issues with cancellations.\r\n* Setting constant PMPRO_STRIPE_WEBHOOK_DEBUG to true will send an email to the WP admin every time the Stripe Webhook is hit. You can also set it to an alternative email address or \"log\" to have it added to ../paid-memberships-pro/logs/stripe-webhook.txt.\r\n* Setting constant PMPRO_IPN_DEBUG to true will send an email to the WP admin every time the IPN handler is hit. You can also set it to an alternative email address or \"log\" to have it added to ../paid-memberships-pro/logs/ipn.txt.\r\n* Now showing the PMPro order ID/code in INVOICE emails instead of the Stripe order id when using the Stripe gateway.\r\n\r\n= 1.7.8.1 =\r\n* Important fix for Braintree Payments users. Credit card information is now correctly updated in Braintree when users submit the form on the billing information page or checkout again on the site. (Thanks, Bryan Paronto and venrooy)\r\n* Updated Italian translation files. (Thanks, Angelo Giammarresi)\r\n* Fixed string wrapping in reports for translation.\r\n* Fixed PHP warning in membership stats report.\r\n\r\n= 1.7.8 =\r\n* Added various hooks.\r\n* Updated the expiration field dropdown on the edit levels page to use translation strings. (Thanks, 24uurdates)\r\n* Fixed other missing strings for translation. Added Right-to-Left support. (Thanks, louy on GitHub.)\r\n* Added the pmpro_member_startdate filter to filter the pmpro_getMemberStartdate function. Passes $user_id, and $level_id as parameters.\r\n* Added pmpro.getMembershipLevelForUser and pmpro.hasMembershipAccess XMLRPC methods. Example usage: https://gist.github.com/strangerstudios/9099164\r\n* Moved the Terms of Service page/etc to right above the checkout button.\r\n* Now caching the pmpro_getAllLevels() function.\r\n* Added HTML <!-- comment --> wrappers to the JS on checkout.php. Helps with validation and potentially really old browsers.\r\n* Fixed warnings in includes/login.php.\r\n* Added pmpro_delete_discount_code and pmpro_delete_membership_level actions which run just BEFORE a membership level is deleted. Both pass the discount code ID or level ID respectively.\r\n* Added a third \"short\" parameter to the pmpro_getLevelCost() function. If set to true the \"The price for membership is\" text is left off the beginning. The new levels page uses this param.\r\n* Updated the table on the levels page to have one \"Price\" column showing the cost and expiration text. The text is generated using pmpro_getLevelCost and pmpro_getLevelExpiration instead of its own rules.\r\n* Updated level cost text to say $1/mo instead of $1 now and then $1/mo, etc. (Thanks, louy on GitHub.)\r\n* Added a debug by email method for the Authorize.net Silent Post handler. Add define('PMPRO_AUTHNET_SILENT_POST_DEBUG', true); to your wp-config.php. We will probably move the other services to debug by email as well.\r\n* PMPro will now only filter the from name and email if the default values are detected (WordPress <wordpress@sitename.com>). This fixes issues where the from name and email on form emails or other plugin emails were being swapped out with the PMPro settings, which was not always desirable. (Thanks, Helen Hou-Sandi and others.)\r\n* Added an \"Only Filter PMPro Emails?\" option to the email settings. If checked, only emails sent through the PMProEmail class will have their from name and email adjusted to match the PMPro email settings.\r\n* Added filter options to orders page in admin and export. (Thanks, HTCIA and Harsha Venkatesh)\r\n* Added Brazilian Portuguese translation. (Thanks, dballona on GitHub.)\r\n* Fixed some warnings. (Thanks, AlexBiddle on GitHub.)\r\n* Added pmpro_custom_advanced_settings hook to add settings to advanced settings page. Details on usage here: https://github.com/strangerstudios/paid-memberships-pro/pull/86 (Thanks, Jess Oros)\r\n* Updated addon categorization to reflect a lot of addons which have moved into the WordPress.org repository as well as updated versions.\r\n\r\n= 1.7.7 =\r\n* Fixed bug where user_id = '' was breaking on some MySQL setups and keeping the pmpro_membership_orders table from being populated.\r\n* Updated \"Joined\" column in members list to use the WP date format setting.\r\n* Removed redundant phone number on checkout page if bphone is already set.\r\n* When adding extra columns to the Members List CSV export via pmpro_members_list_csv_extra_columns, we are now passing the original heading/field name to callback function. So you can use that in your callback functions. This generally means you can use one function that just dumps the meta value rather than requiring a separate function for each meta value.\r\n* Fixed bug where \"Show Billing Fields\" option was visible on the payment settings page for the testing gateway. (This option is only for Stripe.)\r\n* Fixed bug with choosing levels to hide ads from on advanced settings tab. (Thanks, Alain Fradette)\r\n* Fixed bug where PayPal Express was adding tax twice for subscription charges. (This does not fix existing subscriptions on the PayPal side.)\r\n* Fixed bug with the Stripe Webhook where non-PMPro orders were being added to PMPro via the webhook. If the customer_id cannot be found (i.e. it's a non-PMPro customer), the order is ignored. (Thanks, Jacob Glenn)\r\n* The getMemberOrderByPaymentTransactionID() function has been updated to return false if no payment_transaction_id is passed in (instead of finding the first order where the id is blank). This is inline with the getMemberOrderBySubscriptionTransactionID() function.\r\n* Fix to code that hides posts from search to NOT hide posts that a user has access to but might also be accessible by users of a different level. (Thanks, normanyung on GitHub)\r\n* Added a pmpro-en_GB translation that changes \"State\" to \"County\" on the billing address fields. (Thanks, alexbiddle on GitHub)\r\n\r\n= 1.7.6 =\r\n* Added \"Old Members\" option to the members list page to view members who don't have an active membership, but did in the past. (Note that we don't differentiate between members who expired and who cancelled.)\r\n* The PayPal IPN Handler has been updated to process \"subscr_cancel\" messages from PayPal. This should cancel memberships in WP/PMPro when users or PayPal admins cancel a subscription at PayPal when using PayPal Express or Website Payments Pro. There are still known issues with syncing cancellations with PayPal Standard.\r\n* Fixed bug where \"error cancelling subscription\" emails were being sent out erroneously. These should only go out now if PMPro has trouble cancelling a subscription. If you got a lot of these before, you should get less. If you never got this, you might start getting it sometimes.\r\n* Orders are now set to \"cancelled\" status whether any attached subscriptions were cancelled or not. (Keeps us from trying again.)\r\n* Fixed bug where All Pages view in WP dashboard would sometimes redirect to the registration page if you had Theme My Login installed.\r\n* Setting startdate to NOW() when a user's level is changed via pmpro_changeMembershipLevel() using a level ID... also when admin's manually change a user's level. This fixes issues with PMPro Series where users who were given a level this way appear to have a start date in 1970, etc.\r\n* Fixed bug with the pmpro_save_discount_code_level filter where -1 was being passed as the code_id for brand new codes.\r\n* Updated \"The ____ code has been applied to your order\" message to it is wrapped for localization.\r\n* Now checking ICL_LANGUAGE_CODE instead of $_REQUEST['lang'] to support WPML using different language URL formats.\r\n* Unsetting $all_membership_levels[$user_id] at the bottom of pmpro_changeMembershipLevel().\r\n* Added $force parameter to pmpro_getMembershipLevelForUser($user_id, $force). If set to true, it will ignore the cached value and pull the level from the DB.\r\n* Added autocomplete=\"off\" to credit card account number field on checkout and update billing pages.\r\n* Added an optional $seed parameter to pmpro_getDiscountCode() which will add $seed to the scrambled string. Useful when generating many discount codes quickly and time() might not have changed.\r\n* Now hiding \"Change Membership Level\" link from Member Links section of Membership Account page if PMPRO_DEFAULT_LEVEL is defined.\r\n* Clearing the AccountNumber value at checkout if it is XXXX..., e.g. when we mask the Stripe CC number. This way users will know they need to re-enter the credit card again. (Thanks, Gary)\r\n* Fixed bug on checkout page where html classes for the bstate field were being set based on the bcity value instead.\r\n* Fixed bug where there was no space after the \".\" in some level cost text. (Thanks, multiple observers ;)\r\n* Added some explanatory text to the payment settings page about taxes and SSL seals.\r\n* Added a pmpro_formatAddress() function to format billing addresses/etc.\r\n* Fixed bug where blank billing addresses were showing up in confirmation emails. If you use custom email templates, update them to use the !!billing_address!! variable instead of the full address section.\r\n* Design updates to checkout buttons, admin screens, etc, to work better with WP 3.8 and the TwentyFourteen theme.\r\n\r\n= 1.7.5 =\r\n* Fixed all open bugs with 2Checkout gateway. You can now use this gateway for one time and recurring levels. We're still keeping the beta message though until we have further live testing.\r\n* The shortcodes for the PMPro pages (e.g. pmpro_levels/etc) will now work on multiple pages. Things may still act funny if you put the shortcodes on pages other than those set in the page settings, but you can do so if you know what you are doing. One limitation still in place is that you can only have one PMPro page shortcode per page. Whichever comes first will be used.\r\n* Added support for WPML. Simply make a copy of each PMPro page for each language. Set the PMPro page settings to the default language pages.\r\n* Updated pmpro.pot template along with a script gettext.sh that will allow us to easily update the pmpro.pot file when we need to.\r\n* Updated the pmpro_url function, should work the same but if you use addons or customizations and notice bugs around URLs, let me know.\r\n* Fixed bug where old membership data was being included in the members list export instead of the latest active membership data.\r\n* Filtering $morder->membership_level at checkout as well as $pmpro_level global.\r\n* When loading bemail and bconfirm email from user meta for existing users, just setting them both to $bemail so different emails don't show up.\r\n* Now sending a member's email address to Stripe when customers are created/updated.\r\n* No longer running wpautop on email via pmpro_send_email filter.\r\n* If first_name and/or last_name are passed at checkout, these are used to create a new user instead of bfirstname and blastname.\r\n* Added \"view\" links to the page settings page.\r\n* Fixed some potential warnings in adminpages/reports/login.php.\r\n\r\n= 1.7.4 =\r\n* Updated PayPal IPN to use HTTP 1.1 and \"Connection: Close\" per recent PayPal IPN updates.\r\n* Fixed bug with slashes being added to the SSL Seal text when Payment Settings are saved.\r\n* Now applying the pmpro_checkout_level filter when a membership level is loaded from an order during the review step with PayPal Express checkouts. This will fix many customizations that might have not worked with PayPal Express.\r\n* Cleaned up PayPal Express API integration a bit. Fixes some bugs on sites with one-time payments and taxes calculated in.\r\n* Change the use_ssl payment setting. You can choose \"No\" now for gateways that require SSL. Just make sure you set it to Yes when going live or use another method to force SSL on your checkout page. You can also set it to Yes (use JavaScript redirect) to fix some issues that come up with infinite redirects on shared hosting with specific caching/proxy techniques.\r\n* Optimized the members list and orders CSV exports to run with less memory. Especially important for large sites.\r\n* Including Italian, French, Spanish/Peru, and Spanish/Chile language files contributed from the community. Thanks Mirco Babini (mirkolofio on GitHub) and Javier Monorov\u00e9 (zillionsk8 on GitHub)\r\n* Fixed the email template issue for admin emails as well. The email sent to admins for free checkouts won't include the empty billing address info anymore. (Thanks, inator on GitHub)\r\n* Now redirecting from /register/ to PMPro levels page when latest versions of Theme My Login are activated. Can still disable by returning false with the pmpro_register_redirect or pmpro_login_redirect filter.\r\n* Now showing a \"renew\" button for the current user's level on the levels page if their level is not recurring.\r\n* Fix in crons.php where in rare cases the pmpro_expiration_notice meta was not being set correctly for users, which might lead to multiple expiration warning emails.\r\n* Updated pmpro_next_payment to work for any cycle number or period. (Thanks, antonv and others.)\r\n* Now checking for a logged in user before trying to get a billing address to prepopulate at checkout.\r\n* Updated frontend.css to make sure that background gifs in error messages aren't repeated or applied to dropdowns.\r\n* Added some currencies: CNY, INR, IDR, KRW, TRY, VND, ZAR\r\n* All currencies now available to all gateways. You still need to make sure that your gateway supports the chosen currency.\r\n* Now sending all emails from the PMProEmail class from the pmpro_getOption(\"from_email\") setting. Some were sent from the get_option(\"admin_email\") setting before.\r\n\r\n= 1.7.3.1 =\r\n* Using MySQL to calculate months since first order instead of date_diff, which is only available in PHP 5.3+\r\n\r\n= 1.7.3 =\r\n* pmpro_longform_address and pmpro_international_addresses now default to true. See this gist to go back to US-specific address format: https://gist.github.com/strangerstudios/6478242\r\n* Added \"Show Billing Address Fields\" option for the Stripe payment gateway. Set to 'No' to hide billing address fields. Replaces the functionality of the \"Stripe Lite\" plugin.\r\n* Added language files for es_ES, es_CL, and es_PE. Thanks, Javier Monorov\u00e9 (zillionsk8 on GitHub).\r\n* Added language files for fr_FR. Thanks, J\u00e9r\u00e9my De la casa.\r\n* NOTE: Language files may not be complete. The get involved, join us on GitHub. \r\n* Added Cybersource and 2Checkout gateways in beta.\r\n* Added pmpro_paypal_button_image filter so you can override the URL of the PayPal button image.\r\n* Added a new report showing signups vs. cancellations, monthly recurring revenue, and lifetime value.\r\n* Fixed issue where the checkout_paid template was always being used for emails. It now checks if the level at checkout is free and sends either the checkout_free, checkout_paid, or checkout_trial templates accordingly. (Thanks, inator on GitHub)\r\n* Fixed sales report to not show $ when hovering over bars for \"sales\" vs. \"revenue\".\r\n* Fixed issue where PayPal Standard levels using a billing frequency > 1 (e.g. every 3 months) would have an extra payment charged after one period.\r\n* Fixed SQL error in discount code admin page that could result in cycle_periods of code levels saving incorrectly. (Thanks, Sam D'Amico)\r\n* Removed note that Payflow gateway doesn't support recurring payments. It does.\r\n* Now passing the membership level id in the $data var for checkout and cancellation emails. The key is \"membership_id\" so use $data['membership_id'] to check/access it.\r\n* No longer setting the subtotal property of orders when the \"subscribe\" method of the gateways is called. This will fix cases where an initial order or a subscription with a free trial showed a charge amount > $0.\r\n* Clicking enter in discount code box at checkout will no longer submit form and will click the \"apply\" button.\r\n* Hiding the \"Apply\" button on the checkout page if a discount code was passed in. Showing it if the text field is changed.\r\n* Authorize.net now supports CAD, GBP, and EUR currencies (for US merchants only) http://community.developer.authorize.net/t5/The-Authorize-Net-Developer-Blog/Authorize-Net-Expansion-into-Canada-the-United-Kingdom-and/ba-p/33690\r\n* Fixed notice in getfile.php\r\n* Fixed notices and expiration dates in login report.\r\n* Fixed notices in includes/notifications.php (Thanks, Nilesh)\r\n* Allowing dashes (-) in discount codes now.\r\n\r\n= 1.7.2.1 =\r\n* Fixed warning when trying to load the \"free\" gateway on free level checkouts.\r\n* Fixed warning coming from login report tracking.\r\n* Changed all $wpdb->escape() calls to esc_sql() to fix notice.\r\n* Fixed another bug in revenue/sales report for daily charts. (backported to 1.7.2, but a few people who upgraded missed it)\r\n* Fixed bug on add/edit level page that was causing issues in some versions of IE.\r\n* Fixed bug where links in the email_header.html and email_footer.html templates were not being converted to true links.\r\n* Removed an extra $ from the PayPal Express confirmation emails.\r\n* Fixed loading of local (in the paid-memberships-pro/languages directory) translation files. (Should have some bundled with the plugin soon.)\r\n\r\n= 1.7.2 =\r\n* Fixed the revenue/sales report to accurately track recurring sales and reports from earlier years.\r\n* Now trimming whitespace on any text field updated through the PMPro settings pages. This prevents issues like those that come up if you have whitespace in your Stripe API key, etc.  Thanks, Scott Sousa.\r\n* Added discount code use tracking for PayPal Standard. Saving the use before the user goes to PayPal to pay.\r\n* Added discount code id and code columns to orders and members list CSV exports.\r\n* Changed default capability check to 'manage_options' (administrator), and added a filter named 'pmpro_edit_member_capability' to allow dev's to change this capability. Thanks, Scott Sousa.\r\n* Now removing empty (only includes the PMPro shortcode) PMPro pages when uninstalling PMPro. Thanks, Scott Sousa.\r\n* Now adding classes to the body tag (if the theme supports it through the body_class() function) to aid in design. Classes are pmpro-account, pmpro-billing, pmpro-cancel, pmpro-checkout, pmpro-confirmation, pmpro-invoice.\r\n* Adding $0 orders for free level checkouts (will help reporting).\r\n* Added pmpro_invoice_bullets_top and pmpro_invoice_bullets_bottom hooks to confirmation and invoice pages. Passes $pmpro_invoice.\r\n* Fixed members list CSV export for lists with search queries.\r\n* Added is_ssl() check to pmpro_https_filter so PMPro will add HTTPS to URLs even if the $besecure global hasn't been set yet. Thanks, Andrew Calaio at wpcurve.com.\r\n* Removed the pmpro_cron_trial_ending_warnings daily cron so trial ending emails will no longer go out. The function pmpro_cron_trial_ending_warnings() is still there if you want to call it yourself. There were issues on some sites where these emails were going out erroneously and also many ways of doing \"custom trials\" including setting the subscription start date back a certain number of days was not picked up as a trial by this script anyway.\r\n* Added the pmpro_cron_credit_card_expiring daily cron to send out warnings a month or so before credit cards on record are set to expire.\r\n* Updated pmpro_has_membership_access to return true if the $post_id is empty or cannot be found. This fixes issues where member warnings were being added to non-pages, e.g. the bbPress forums archive. To lock down \"pages\" like this, you'll need to use custom coding, URL detection, etc. Thanks, Scott Sousa (scottsousa on GitHub and WP.org) from Slocum Studio.\r\n\r\n= 1.7.1 =\r\n* Design updates to frontend and backend pages.\r\n* Added Sales and Revenue Report.\r\n* Fix to Braintree webhook that should help get it verified by Braintree more easily.\r\n* Fix to PayPal IPNHandler to check both that either the primary or the business email address sent from PayPal matches the one stored in the payment settings.\r\n* Added pmpro_ajax_timeout hook to change the timeout limit from 2000 (2 seconds) to something else.\r\n* Fixed bug that occurred when the pmpro_register_redirect filter returned false or a blank link. Thanks, Vladimir Garagulya.\r\n* Added pmpro_paypal_standard_nvpstr and pmpro_set_express_checkout_nvpstr filters to change or add parameters to an name-value-pair string sent to PayPal in a couple cases.\r\n* Fixed checkout failure on Free level when in mySQL Strict Mode. (Thanks, inator on GitHub)\r\n* Only checking pmpro_checkForUpgrades in admin/dashboard now. (Thanks, topdown on GitHub)\r\n* No longer loading recaptcha library in the admin. Also wrapped the recaptchalib require in an init function to delay it a bit so we can check if other plugins have already loaded it.\r\n* PMPro-Mailchimp and WP-Bouncer have been moved into the WP repository. Other Add-on updates.\r\n* New users will now be set to the \"default role\" set in the General settings instead of spefically \"subscriber\". (Subscriber is the default default role though.) Thanks, Nabil Kadimi.\r\n* Wrapped strings in login report for translation.\r\n* Added indexes to the following columns in the pmpro_membership_orders table: status, payment_transaction_id, subscription_transaction_id, affiliate_id, affiliate_subid\r\n\r\n= 1.7.0.4 =\r\n* Another database fix for new installs.\r\n\r\n= 1.7.0.3 =\r\n* Fixed a performance issue added in 1.7.0.2.\r\n\r\n= 1.7.0.2 =\r\n* Fixed HUGE issue with the DB setup on fresh 1.7+ installs. If you installed version 1.7 or 1.7.0.1 fresh (not upgraded from earlier version) then PMPro will not work until you upgrade to version 1.7.0.2.\r\n* Removed from old PHP short tag use\r\n* Fixed generation of members only and non-logged in text on new installs.\r\n\r\n= 1.7.0.1 =\r\n* Added the redirect away from wp-login.php page (was accidentally removed in version 1.7).\r\n* Added support for Theme My Login versions 6.3+\r\n* Fixed CSV downloads.\r\n* Fixed some warnings.\r\n* Fixed generation of cost text when using built in tax.\r\n* Added \"pmpro_subscribe_order\" filter.\r\n* Added an index to the user_id column of pmpro_memberships_users table which will help with performance of the new logins report and other user search functions.\r\n\r\n= 1.7 =\r\n* Ready for localization efforts.\r\n* Addons tab in PMPro Settings in the dashboard.\r\n* Reports page in dashboard with login report.\r\n* Webhook code for Braintree Payments gateway.\r\n* If PayPal Standard is the active gateway, users without membership levels will be able to see the confirmation page with a message that PayPal is processing payment.\r\n* Fixed bug where PayPal recurring orders were being attributed to the wrong user (if no subscriber id was attached to the IPN message).\r\n* Fixed bug where users sometimes couldn't checkout with a discount code that made a level free.\r\n* Cleaned up code in base paid-memberships-pro.php file.\r\n* Updated the .pmpro_checkout tr.odd td line in frontend.css to use rgba with alpha transparency to work a bit better on dark background themes.\r\n* Fixed bug where a user's first_name and last_name meta fields might be overwritten by the billing name fields at checkout. It will still set them if the user's first and last name fields are blank. (Thanks, John Hamlin.)\r\n* Fixed bug where zipcode was shown instead of state in the members list CSV export. (Thanks, John Hamlin.)\r\n* Fix to show discount codes on free trial confirmation emails if one was used.\r\n* Added the pmpro_random_code filter so you can hook in and change invoice code/etc generation.\r\n* Correctly padding zeroes on credit card expiration dates like 09/2013 when using Stripe. This SQL statement should fix broken entries in your orders table: NOTE (1) Backup your database first. NOTE (2) Make sure you change the table name to match your WP prefix,etc. >>> UPDATE wp_pmpro_membership_orders SET expirationyear = CONCAT(SUBSTRING(expirationmonth,2,1), expirationyear), expirationmonth= CONCAT('0', SUBSTRING(expirationmonth,1,1)) WHERE expirationmonth > 12;\r\n* Wrapped some AJAX and service calls code in init() functions so they will more consistently work with hooks/filters. (Before if PMPro loaded before a plugin or bit of code that added filters/etc, the filters wouldn't get applied.)\r\n* Fixed Stripe JS to also send city to Stripe. (This is important because Stripe doesn't seem to show the address at all if the city is missing.)\r\n* Added 'pmpro_members_list_sql' hook to filter the SQL used on the members list page and CSV export.\r\n* Added 'pmpro_members_list_csv_heading' and 'pmpro_members_list_csv_default_columns' hooks to filter the default columns in the members list CSV. (e.g. to check role and remove columns)\r\n* Added 'pmpro_members_list_user_link' hook to filter the link and username displayed on the members list page. (e.g. to check role and remove link to edit user)\r\n* Checking that \"status='active'\" when finding subscriptions to cancel when deleting a level. This will keep PMPro from trying to cancel someone more than once... or trying to cancel inactive subscriptions.\r\n* Fixed bug where Sales Tax fields were hidden on the payment settings page if Stripe was chosen as the gateway.\r\n* No longer logging IPN activity to logs/ipn.txt by default. (Uncomment the lines at the bottom of services/ipnhandler.php to use the log to debug.)\r\n\r\n= 1.6.1 =\r\n* Added recurring billing support to Payflow integration.\r\n* Fixed bug where an order's code was shown instead of the subscription ID on the edit order page.\r\n* Fixed some logic with determining if level settings are not compatible with the current gateway.\r\n* On notice and one DB query fix in upgradecheck.php submitted by pranjithkumar on GitHub. Thanks!\r\n\r\n= 1.6.0.1 =\r\n* Fixed Braintree integration for production environments. Braintree needed to be told \"production\" instead of \"live\".\r\n* Removed !!field!! lines from a couple of admin emails.\r\n* Added login_link as data for the cancel_admin email template.\r\n\r\n= 1.6 =\r\n* Added Braintree payments as a gateway option. This should be considered in \"beta\". Please get in touch if you are using Braintree payments with PMPro. Everything should function except that we're still working out an issue with the webhook handler.\r\n* Added a new dashboard page Orders to view all orders processed by PMPro with an option to export to CSV.\r\n* Fixed bug where \"Your membership level has changed\" emails were being sent out the first time a user's profile was edited, even if the level wasn't changing.\r\n* Removed the revenue estimate from the members list page. This causes performance issues on sites with many members. A new reports dashboard page is coming soon.\r\n* Not showing payment settings warning now when Payflow is setup with all values filled in.\r\n* Updated preheaders/billing.php to get the most recent successful order from the DB to use when updating. (ORDER BY id DESC in the query)\r\n* Added pmpro_stripe_subscription_deleted hook in stripe-webhook.php for when subscriptions are cancelled on the Stripe side. Use this code to cancel on your site as well: https://gist.github.com/strangerstudios/5093710\r\n* Now using $pmpro_currency_symbol when membership price is shown on the edit profile page in the dashboard/etc.\r\n* Added pmpro_authorizenet_post_url filter to use Authorize.net gateway class with a different post url, e.g. if you have a gateway that offers an Authorize.net compatibility mode.\r\n* Added pmpro_check_status_after_checkout filter so you can e.g. set the status to \"pending\" instead of \"success\" when a user checks out with the check gateway. They will still have access to the membership level, but you can update the status via the orders dashboard later.\r\n* Added pmpro_confirmation_order_status filter so you change which status the confirmation page looks for. Can return an array as well since the getLastMemberOrder method call on MemberOrder has been updated to support $status as an array.\r\n* Orders made via the check gateway now have PaymentType = \"Check\" and CardType = \"\".\r\n* Added a notes column to orders.\r\n* Fixed bug where discount codes were not showing up in checkout emails if the level was free.\r\n* Added some wpdb->escape() wrappers to the saveOrder method of MemberOrder which will fix some bugs with orders with fields with apostrophe's in them, etc.\r\n* Added checks for custom capabilities to the PMPro admin pages in case you want to give non-admins access. Caps are: pmpro_discountcodes, pmpro_emailsettings, pmpro_membershiplevels, pmpro_memberslist, pmpro_memberslist_csv, pmpro_orders, pmpro_orders_csv, pmpro_pagesettings, pmpro_paymentsettings\r\n* Added pmpro_memberslist_extra_cols_header and pmpro_memberslist_extra_cols_body hooks to add extra columns to the members list page.\r\n* Fixed pmpro_paypal_express_return_url_parameters filter to properly encode & and = so the params are properly added to the ReturnURL instead of being seen as extra params to the full PayPal Express URL. The PMPro Addon Packages plugin has been updated to take advantage of this to make that plugin more compatible with PayPal Express.\r\n* Fixed bugs with Strip webook: now listening for charge.succeeded and charge.failed, other fixes.\r\n\r\n= 1.5.9.2 =\r\n* Fixed Members List bugs introduced in version 1.5.9.1.\r\n\r\n= 1.5.9.1 =\r\n* Revamped the ipnhandler code. It's much cleaner now and should be easier to support with all 3 PayPal APIs (Standard, Website Payments Pro, Express) working through the one handler.\r\n* Added Payflow Pro as a gateway option. Currently, only one-time charges is supported.\r\n* Added the pmpro_register_redirect filter to allow you to change the URL PMPro redirects wp-login.php?action=register to. Returning false or an empty string will result in no redirect from the register page.\r\n* Added pmpro_subscription_payment_failed hook that runs if a failed payment comes in through the IPN Handler, Authorize.net silent post, or Stripe web hook. do_action(\"pmpro_subscription_payment_failed\", $old_order); $old_order is a MemberOrder object.\r\n\r\n= 1.5.9 =\r\n* Fixed bug on Membership Billing page that was hiding the billing address fields.\r\n* Changed all of the instances of \"firstpayment\" order statuses to \"success\". Also running query to fix statues in the DB. This caused issues for levels with only a one-time payment, where the invoice wouldn't show up in their account page.\r\n* Fixed the PayPal Express gateway to correctly set the order transaction id to TRANSACTIONID instead of the PROFILEID.\r\n* Updated the IPN handlers to accept recurring_payment_id or subscr_id when checking for recurring payment orders.\r\n* Changed the site_url() in the javascript for discount codes on the checkout page to home_url(). home_url() is better to use in case users have their WP core files in a different directory.\r\n* You can now place email templates in a paid-memberships-pro/email folder in your theme and PMPro will use these before using the built in email templates. Just copy the file out of the wp-plugins/paid-memberships-pro/email folder, use the same filenames, and edit the file.\r\n* You can now place page templates in a paid-memberships-pro/pages folder in your theme and PMPro will use these before using the built in page templates. Just copy the file out of the wp-plugins/paid-memberships-pro/pages folder, use the same filename, and edit the file.\r\n* You can now place css templates in a paid-memberships-pro/css folder in your theme and PMPro will use these before using the built in page templates. Just copy the file out of the wp-plugins/paid-memberships-pro/css folder, use the same filename, and edit the file.\r\n* Fixed a bug where discount codes that reduced a level price to $0 were not being counted as \"uses\".\r\n* Added a pmpro_email_data filter to make it easier to add variables to edited email templates.\r\n* Added user_login to the data fields all of the emails for use by templates (use !!user_login!! in your template)\r\n* Added $wp_version to globals set in preheaders/checkout.php to properly compare versions later in the script and avoid a notice.\r\n* Added pmpro_email_filter hook to filter entire email object at once.\r\n* Warning fix: Updated email class to check if the template file exists before trying to load the template into the body. (Useful if you are using the PMProEmail class for your own emails.)\r\n\r\n= 1.5.8 =\r\n* Fixed bugs with the Membership Billing page. (Thanks, adambware)\r\n* The getMembershipLevelForUser function and getMembershipLevel method of the MemberOrders class will now include expiration_number and expiration_period properties on the returned level. These are needed to properly extend membership levels when checking out for the same level.\r\n* Added pmpro_before_send_to_paypal_standard hook. This is executed at checkout before calling the sendToPayPal method on the order. The register helper plugin has been updated to update user meta fields during this hook in addition to the pmpro_after_checkout hook. (Because for PayPal Standard, when pmpro_after_checkout is called, the $_SESSION vars are unavailable to it. So other plugins relying on the pmpro_after_checkout hook may have issues with PayPal Standard.)\r\n* Re-Added !class_exists(\"Stripe\") check before loading Stripe library. This assumes that other plugins using the Stripe lib are loading compatible versions and/or also checking first before loading the Stripe lib. (*It's important that you test things if you are using multiple plugins loading Stripe. If the other plugins are loading old Stripe APIs first, PMPro may not work correctly.*) The alternative is to namespace the Stripe library for PMPro which would take some more effort.\r\n* Now running email subject lines through html_entity_decode to avoid special characters for apostrophes/etc.\r\n* pmpro_is_login_page() now also checks if is_page(\"login\")\r\n* The pmpro_login_redirect and pmpro_besecure functions, which handle HTTP/HTTPS logic have been updated. pmpro_besecure is now running on login_init instead of login_head to avoid a \"cannot resend headers\" error. pmpro_login_redirect will strip https from the URL if FORCE_SSL_LOGIN is set but FORCE_SSL_ADMIN is not set to avoid \"need to login twice\" bugs.\r\n* Updated code to support auto-hiding ads with newer versions of Easy AdSense.\r\n* Updated how the members list CSV is generated to avoid PHP notices when meta values are not found/etc. Also added a prefix to the enclose function in memberslist-csv.php (enclose => pmpro_enclose).\r\n* Now using get_option(\"date_format\") when outputing a date in the admin, frontend, or in an email.\r\n* Proper trial support for Stripe. (We use the trial_period_days parameter of the Stripe plan object to push the first payment back - since the first payment is handled in its own transaction. We now also add days to this based on the # of trial subscriptions set for the level in the admin.\r\n* Added a pmpro_require_billing javascript variable when using Stripe. If a discount code changes the membership level to free, pmpro_require_billing will be set to false and the Stripe JS checks won't fire.\r\n\r\n= 1.5.7 =\r\n* Ready for WordPress 3.5\r\n* Fixed issues in the PayPal IPN Handler that were leading to errors when users would checkout using the PayPal standard gateway.\r\n\r\n= 1.5.6.1 =\r\n* Fixed \"invalid gateway\" bug when using PayPal Express option with the PayPal/PayPalExpress gateway.\r\n* Fixed some warnings.\r\n\r\n= 1.5.6 =\r\n* Fixes in the new pmpro_getMemberStartdate and pmpro_getMemberDays functions.\r\n* Fixes to SQL queries for the expiration and trial ending crons.\r\n* Added a pmpro_required_user_fields filter similar to the pmpro_required_billing_fields filter.\r\n* Added a function pmpro_setMessage($message, $type) that sets $pmpro_msg and $pmpro_msgt globals if they aren't set already.\r\n* Added a function pmpro_getClassForField($field) that will return a string including \"pmpro_error\" or \"pmpro_required\" if applicable. You can filter the classes added to the fields via the pmpro_field_classes filter.\r\n* Showing * on required fields via javascript on the checkout page.\r\n* Updated checkout page to highlight in red fields that are related to the error message shown.\r\n* Added headers property to the PMProEmail object. You can add headers (e.g. to add a cc or bcc) to PMPro emails using the pmpro_email_headers filter.\r\n* Updated Stripe library to version 1.7.10. Updated PMPro to take advantage of new \"interval_count\" parameter in subscriptions, so you can now have subscriptions setup for \"every 2 months\", etc.\r\n* Fix to pmpro_checkout_start_date_keep_startdate filter added in 1.5.5\r\n* Added \"Start Date\" and \"End Date\" to emails sent to admins when a membership is cancelled.\r\n* Now checks for CSS files in a paid-memberships-pro subfolder of your active theme and uses those admin.css, frontend.css, and print.css files instead if they exist. (Going to move email and page template checks to that subfolder in the future as well.)\r\n\r\n= 1.5.5 =\r\n* Updated pmpro_check_site_url_for_https function to cache the siteurl to limit DB queries.\r\n* Added includes/filters.php to store hacks/filters/actions that were originally developed outside of the PMPro core and brought in later... or just things that are cleaner/easier to impement via hooks and filters.\r\n* Added a \"delay\" property to the membership shortcode. E.g. [membership level=\"1\" delay=\"7\"]...[/membership] will show that content if a member has had level 1 for at least 7 days.\r\n* If a member checks out for the same level again (extending their membership), the startdate added to pmpro_memberships_users will be their old startdate.\r\n* If a member checks out for the same level again, the remaining days on their existing membership will be added to their new enddate. So e.g. if a user starts an annual membership in April 2013, then checks out again (extends) their membership in February 2014, their new enddate will be April 2015 instead of February 2015. (NOTE: if you were doing this through the custom code here - https://gist.github.com/3678054 - you should remove your custom code.)\r\n* Fixed bug where you couldn't remove all required membership levels from a page/post. (Thanks, lisaleague)\r\n* Updated the button CSS included in paid-memberships-pro/css/frontend.css. I added a pmpro_ prefix to these classes so they don't conflict with other .btn CSS rules. I also changed the rules a bit to show the buttons more consistently. If you relied on the old CSS rules, you may need to tweak your theme to get things looking right.\r\n\r\n= 1.5.4 =\r\n* Added a gateway check to preheaders/checkout.php. Mischivous users used to be able to bypass payment by passing &gateway=check or something similar to the checkout page. PMPro would then use the check gateway to checkout. Now only the active gateway option in the payments settings or gateways added via the new pmpro_valid_gateways filter (1 parameter is the array of gateways, add/edit the gateways and return the array). It is important that all PMPro users upgrade to keep mischivious users from accessing your site for free. Any site currently enabling multiple gateway options will need to add code to set the valid gateways. More info here: http://www.paidmembershipspro.com/2012/06/offering-multiple-gateway-options-at-checkout/\r\n* Fixed bug where level restrictions would be deleted if a page were updated via quick edit.\r\n* Added if(!class_exists(\"Stripe\")) to the Stripe class definition. This should help with some conflicts if other plugins have their own Stripe library. (Going to udate the Stripe library in the next version and work on supporting new Stripe functionality.)\r\n* Fixed a bug where copying a level didn't properly set recurring billing settings. (Thanks, AtheistsUnited)\r\n* Fixed some typos. (Thanks, AtheistsUnited)\r\n* Fixed some warnings.\r\n\r\n= 1.5.3.1 =\r\n* Fixed bug in expiration warning cron query. (Backported to 1.5.3)\r\n\r\n= 1.5.3 =\r\n* Added PayPal Standard Gateway\r\n* Added code to support using Stripe with the minimal billing fields. Use add_filter(\"pmpro_stripe_lite\", \"__return_true\"); to enable this\r\n* Added an Email setting to send the default WordPress new user email(wp_new_user_notification) or not. By default this was being sent along with the PMPro checkout confirmation email. Now only the checkout confirmation email will be sent unless you check the new setting. You can still override this with the pmpro_wp_new_user_notification filter.\r\n* Fixed bug: Now re-hiding the \"Processing...\" message if there is a Stripe javascript error at checkout.\r\n* Updated MemberOrder method saveOrder to check for gateway and gateway_environment properties when inserting. If none are found, it will use what is set in your payment settings. This allows you to set the gateway on a MemberOrder object and save the order with that gateway instead of the default.\r\n* Now only showing the check instructions if the gateway is \"check\" AND the level is not free.\r\n* Added a check to the notification code in the settings header so it wouldn't display NULL in the notification space if WP passes that back.\r\n* Some warning fixes.\r\n* Fixed a bug in the PayPal Express gateway class where the pre-tax amount was being passed to PayPal instead of the tax-computed amount.\r\n* Added Canadian Dollars as a currency option for Stripe.\r\n* Fixed typo/bug with saving trial amounts in the memberships_users table after checkout. (Thanks, Badfun)\r\n* Fixed bug in initial and recurring revenue calculation on members list page.\r\n* Fixed bug when setting membership_level of current user after checkout that could cause various issues. (Thanks, drrobotnik)\r\n* Fixed bug in Stripe webhook that resulting in cancelation emails being sent to the 1st user in the DB vs. the user who cancelled. (Thanks, Kunjan of QuarkStudios.com)\r\n* The getLastMemberOrder() method of the MemberOrder class now returns the last order with status = 'success' by deafult. You can override this via the second parameter of the function. So getLastMemberOrder($user_id, \"cancelled\") to get the last cancelled order or getLastMemberOrder($user_id, false) to get the last order no matter the status.\r\n* Added pmpro_authnet_silent_post_fields filter and pmpro_before_authnet_silent_post and pmpro_after_authnet_silent_post hooks to the Authorize.net silent post handler. All hooks are passed the $fields variable built at the top of the script that mirrors the $_REQUEST array.\r\n\r\n= 1.5.2.1 =\r\n* Fixed bugs with pmpro_hasMembershipLevel.\r\n* Added ability to use the 0 level (non-member) in arrays passed to pmpro_hasMembershipLevel. e.g. pmpro_hasMembershipLevel(0,1,2) = has no membership, level 1, or level 2.\r\n* Fixed bug with the pmpro_after_change_membership_level hook, where a level object was passed instead of the id. The object would be nice to have, but we've been passing the id in the past. I changed it back for reverse compatibility. (You can always look up the level by level_id and user_id.\r\n\r\n= 1.5.2 =\r\n* Added \"Pay by Check\" as a gateway option. Users gain immediate access. You can show instructions for who to write the check out to, where to mail it, etc.\r\n* Added uninstall.php script. (Thanks, badfun)\r\n* Fixed bug where the \"Use SSL\" option reverted to \"No\" for Testing, Stripe, and PayPal Express gateways whenever the payments settings page was loaded.\r\n* Fixed bug where the IPN Handler URL was not showing up when PayPal Express was selected.\r\n* Fixed bug where PMPro was not sending the proper trial amount to PayPal when using Website Payments Pro or PayPal Express.\r\n* Added id and status fields to the pmpro_memberships_users table and updated all code to use these fields. This is important for allowing multiple membership levels and tracking cancelled orders. (Thanks, Zookatron!)\r\n* Appending ?level=# to the confirmation page URL after checkout to aid in analytics tracking.\r\n* No longer filtering pages/posts from search results if \"show excerpts\" is set to YES.\r\n* Showing tax on invoices if applicable.\r\n* Sending tax amount to PayPal Express again.\r\n* Added code to force HTTPS if the siteurl option starts with https:\r\n* Hiding billing information box on Membership Account page if the last invoice was by check or paypal express.\r\n* Added pmpro_email_days_til_expiration and pmpro_email_days_til_trial_end to change how many days before expiration/etc to send an email. The default is 7.\r\n* Fixed typo/bug in preheader/checkout.php RE the pmpro_stripe_verify_address hook. (Thanks, Oniiru!)\r\n* Updated the_excerpt filters to prevent PMPro messages from being added to an excerpt twice in some setups.\r\n* the_content filter removes any class=\"more-link\" class from the content if showing an excerpt.\r\n\r\n= 1.5.1 =\r\n* Fixed bug in getfile.php introduced in 1.5.\r\n* Fixed bug in the saveOrder method of the Member Order class. When \"updating\" vs. \"inserting\" the $id property of the class was being wiped out. This sometimes caused problems if the id was needed later, e.g. with PayPal Express updating orders.\r\n* Now checking if(!defined(\"WP_USE_THEMES\")) instead of if(function_exists(\"get_userdata\")) to see if WP is already loaded.\r\n* Added initial payment to the fee column of the members list.\r\n* Added initial payment as a column in the members list CSV export.\r\n* Added the pmpro_members_list_csv_extra_columns filter to add columns to the Members List CSV export. Sample usage here: https://gist.github.com/3111715\r\n\r\n= 1.5 =\r\n* Very important security fix. Please upgrade to 1.5.\r\n* The Members List CSV export is now executed through admin-ajax.php and will only work if you are logged in as an admin (can manage options).\r\n* Fixed service scripts to work if logged in or logged out.\r\n* Changed the applydiscountcode service to going through the site_url() instead of admin-ajax.php to avoid HTTP/HTTPS issues.\r\n\r\n= 1.4.9 =\r\n* Important: Fixed handling of services sent through admin-ajax.php. Your silent post/ipnhandler URLs, etc, may have been updated.\r\n* Added stripslashes() to membership description output on the checkout page.\r\n* The pmpro_getLevel() function may return the wrong level on the levels, checkout, or account page where another $pmpro_levels array was setup. (The array pmpro_getLevel uses used the level id as the array keys. The older $pmpro_levels used 0-n.) To fix this, I added a pmpro_getAllLevels($include_hidden = false) function and now use that function on the levels, checkout, and account pages. The function queries the database for all levels and then puts them into an array where the level ids are the keys.\r\n* Fix for !!billing_country!! in emails. (Somehow a previous fix for this got overwritten. My bad.)\r\n* Settings $pmpro_level->code_id to $discount_code_id if a valid discount code is applied to a level at checkout. This is \r\nuseful for determining if/what discount code was applied to the level when processing it in hooks.\r\n* Added pmpro_getDomainFromURL() and using that to set PMPRO_URL.\r\n* New hooks when orders are added/updated: pmpro_update_order (before update), pmpro_updated_order (after update), pmpro_add_order (before add), pmpro_added_order (after add). (Thanks, zookatron!)\r\n\r\n= 1.4.8 =\r\n* Fixed !!siteemail!! values for email templates.\r\n* Adjusted display of \"processing\" message next to checkout button when clicked.\r\n* Added billing_country to orders table in DB and the memberorder class. Handling countries better through the code.\r\n* Removing closing ?> at the bottom of various files while working through. This can avoid errors on some setups.\r\n* Using wp_enqueue_style to load plugin stylesheets now.\r\n* Added the pmpro_getCheckoutButton($level_id, $button_text, $classes) function and [pmpro_button level=\"1\"] shortcode to add buttons with links to more easily level checkout pages into your pages and themes. Copied over btn and btn-primary styles from Member Lite theme.\r\n* Updated include/require statements to work if the wp-content folder has been renamed or moved.\r\n* Added code to load scripts in the services folder via admin-ajax.php. (Helps when the plugins folder is not where PMPro expects it to be.)\r\n* The discount code AJAX call is using the new service URL (/wp-admin/admin-ajax.php?action=applydiscountcode).\r\n* Added IPN/Silent Post/Webhook instructions to payment settings page.\r\n\r\n= 1.4.7 =\r\n* Fixed some notices in the PayPal gateway code.\r\n* No longer calling Stripe JS at checkout if the level is free.\r\n* Fixed some HTTPS handling for ISS hosting. (IIS sets $_SERVER['HTTPS'] to \"off\" or \"on\" instead of TRUE or FALSE.)\r\n* Added #pmpro_processing_message to checkout page which is shown when the submit button is clicked. You can override the message with the pmpro_processing_message filter. You can tweak the CSS to show this differently as well.\r\n\r\n= 1.4.6 =\r\n* No longer trying to setup a subscription with Stripe for levels with only an Initial Payment amount.\r\n* Updated recaptchalib.php, which fixes issues with using recaptcha.\r\n* Now setting the first_name and last_name meta fields at checkout to match the business first and last name. (Previous scripts to add additional first/last names to the checkout field should override these.)\r\n* Updated the save profile code to only null out the expiration date for a membership if a blank expiration is explicitly passed through the form. If you had other plugins allowing users to edit their profile, etc, it might not have been passing the expiration date and thus updating users expiration dates. Admins and users would have gotten emails.\r\n* Some updates to applydiscountcodes.php service to support plugging into how discount codes function. Added the pmpro_discount_code_level filter to applydiscountcodes.php.\r\n\r\n= 1.4.5.1 =\r\n* Removed debug calls to krumo() which would cause fatal errors in certain situations. Please upgrade. (Note that PMPro versions that go three dots deep are usually the most important ones :)\r\n\r\n= 1.4.5 =\r\n* Now setting a var \"code_level\" in javascript in applydiscountcode.php so it can be used to manipulate prices, etc after applying a discount code.\r\n* Added the pmpro_cancel_previous_subscriptions filter, which is set to false will skip cancelling the old membership level/subscription at checkout. This is dangerous, but is used by the pmpro-addon-packages plugin to have an addon charge without affecting the old subscription. This works because the user is checking out for the same membership level. (So they don't really have > 1 membership level.)\r\n* Trimming strings sent to the Authorize.net API in the subscribe and update calls.\r\n\r\n= 1.4.4 =\r\n* Using get_admin_url instead of home_url in various places so the links will work on sites installed in a subdirectory. (Notifications, admin bar, pagination in admin screens, etc.)\r\n* Wrapping some XML fields in Authorize.net API calls in <![CDATA[ ]]> to avoid issues when non-text characters (e.g. &) are included in the level name, etc.\r\n\r\n= 1.4.3 =\r\n* Fixed a bunch of notices and warnings on discount codes page in admin.\r\n* Added hooks for changing the discount code page: pmpro_save_discount_code_level, pmpro_save_discount_code, pmpro_discount_code_after_settings, pmpro_discount_code_after_level_settings. Look them up in discountcodes.php to see how they work.\r\n* Updated pmpro_send_html(), which filters emails, to use wpautop instead of nl2br. This will fix any extra double spacing you may have noticed in your emails.\r\n* Added a stripslashes around the membership level confirmation text on the confirmation page. Extra slashes were breaking links, etc.\r\n* Added membership level to subject of checkout confirmation email sent to admins.\r\n\r\n= 1.4.2 =\r\n* Fixed bug that was added slashes into a level's description and confirmation when saving.\r\n* Removed wp_editor use is the blog is running a version of WordPress < 3.3. (Note: We will only officially support the latest version of WordPress with each release.)\r\n* Added the pmpro_pages_shortcode_{membership page} filter. This can be used to filter the content output by the pmpro_checkout and other page shortcodes. e.g. use pmpro_pages_shortcode_checkout to tweak the HTML output of the pmpro_checkout shortcode. The pages are \"account\", \"billing\", \"cancel\", \"checkout\", \"confirmation\", and \"levels\".\r\n* Added a \"use_ssl\" option. For the PayPal Website Payments Pro and Authorize.net gateways, this must be on. For Stripe, this will default to on, but can be switched off. For PayPal Express and the test gateway, it will default to off but can be switched on. When on, the checkout and update billing pages will be forced to be served over SSL. If off, those pages will redirect to non-ssl versions. The previous hooks/filters for overriding this will still work.\r\n* Added pmpro_save_membership_level and pmpro_membership_level_after_other_settings hooks to be able to add fields to the new/edit membership level page.\r\n* Fixed some more warnings and notices.\r\n* Updated checkout page to use pmpro_isLevelFree() in logic to display recaptcha or not.\r\n\r\n= 1.4.1 =\r\n* Fixed critical bugs with PayPal Express.\r\n* When a PayPal cancellation returns error \"11556\" (The subscription must have status \"active\" or \"suspended\".) I am cancelling the membership without an error. Most likely the PayPal subscription was already cancelled on the PayPal side.\r\n* No longer trying to cancel a subscription with the gateway if a membership/order doesn't have a subscription_transaction_id. (It was a initial payment only membership probably.)\r\n\r\n= 1.4 =\r\n* Rewrote how gateways are handled to make it easier to add and manage new gateway options.\r\n* Added Stripe as a gateway option. (http://www.stripe.com)\r\n* Added a \"confirmation message\" field to the level editor that is shown on the confirmation page after checking out. The message is added to the text that can be filtered using the pmpro_confirmation_message hook.\r\n* Now applying \"the_content\" filters on the confirmation message on the confirmation page. e.g. wpautop will be run on the text to automatically add paragraphs.\r\n* Now showing the level description on the checkout page. You can use this code to remove the description from the checkout page: https://gist.github.com/2323424\r\n* The description and confirmation fields of the membership level editor now use WP Editor fields with full WYSIWYG support.\r\n* Fixed the logic around setting the $pmpro_display_ads global, used by the pmpro_displayAds() and pmpro_hideAds() functions.\r\n* Fixed bug with recaptcha logic.\r\n* Updated /pages/checkout.php to use wp_login_url function for login link.\r\n* Small changes to pmpro_changeMembershipLevel function to support deleting users when they cancel their account.\r\n* Added the pmpro_member_links_top and pmpro_member_links_bottom hooks so you can add links to the \"Member Links\" list of the account page. Just output an a tag wrapped in a li tag. (May tweak this to build an array of links that can be filters, but this is good for now.)\r\n* Fixed some more notices.\r\n\r\n= 1.3.19 =\r\n* Rewrote the pmpro_login_redirect function. It's cleaner now. Important: there was a pmpro_login_redirect hook in there that was fairly redundant with the core login_redirect hook. I've renamed the pmpro hook to pmpro_login_redirect_to because I had a hook with the same name (pmpro_login_redirect) used in a different place to control whether or not PMPro redirects the register page to the levels page. Having one hook for two things is a bad idea. It seems like more people were using the hook for controlling the registration redirect, so I left that one alone and renamed these.\r\n* Changed PMPro page creation to set all membership pages as subpages of the membership account page. This results in nicer menus for themes that add all top level pages to the menu.\r\n* Updated the checkout page to submit to \"\" (itself) instead of echoing the checkout page URL here. (Since we can have multiple checkout pages.) This also fixes from SSL conflicts that may crop up on the checkout page.\r\n* Updated the priority of a few actions/hooks so the \"besecure\" https stuff gets run as soon as possible. Before it was possible that some URLs could be written out with http: on an HTTPS page before PMPro had a chance to fix things. You should have fewer SSL errors on the checkout page to deal with now.\r\n* Added an option on the payment settings page to \"nuke\" http: links on all secure pages. This option can add time to your page loads, but will ensure that all http: links for your domain are replaced with https: links.\r\n* Allowing multiple pages to use the [pmpro_checkout] shortcode so you can create multiple checkout pages. This is good if you want a separate templated checkout page for each membership level or product you have.\r\n* You can now add a pmpro_default_level custom field, set to the id # of the level you want, that will be used if you navigate directly to a checkout page without setting a level.\r\n* Added some stuff to support adding shipping fields via hooks. Add this plugin to your site, edit, and activate to add shipping to your checkout: https://gist.github.com/1894897\r\n* Removed the price from the description sent to PayPal. The DESC field is limited to 127 characters and must match up across API calls. So there is a good chance the price would get truncated which could be confusing. This was a kind of hack anyway. PayPal should show the price data it has. Not sure why it won't. The price is still reviewed on the review page of your site though.\r\n* The recaptcha code now checks for a previous error before changing pmpro_msg to \"All Good\".\r\n* Fixed warning in pmpro_has_membership_access(). Fixed a bunch of other warnings here and there.\r\n* Rewrote pmpro_updateMembershipCategories() just to be cleaner\r\n* Added pmpro_state_dropdowns filter. If you return true, the state field will become a dropdown with US states. Use the pmpro_states and pmpro_states_abbreviations filters to change the array of states used.\r\n\r\n= 1.3.18.1 =\r\n* Added the new email .html templates to svn.\r\n\r\n= 1.3.18 =\r\n* Fixed some warnings: admin bar warning that showed up on admin pages; warning issued by pmpro_setOption(); warning in pmpro_hasMembershipLevel(); warning in billing update; warnings on the user edit page; warnings in the getTax method of the order class; warnings in save method of order class.\r\n* Added a pmpro_checkout_confirm_email filter that can return false to hide and not require the \"Confirm E-mail\" field at checkout.\r\n* Added a pmpro_checkout_confirm_password filter that can return false to hide and not require the \"Confirm Password\" field at checkout.\r\n* If the PMPRO_DEFAULT_LEVEL constant is set, traffic on the levels page is redirected to the checkout page. This redirect no longer forces HTTPS.\r\n* Moved the pmpro_paypalexpress_session_vars hook call so it will run even if existing users are checking out (upgrades, etc).\r\n* Added some confirmation emails for admins: (1) for new user signups, (2) when an admin changes a member's level, (3) when a user cancel's their membership, and (4) when a user update's their billing information. New email templates (ending with \"_admin.html\") have been added to the /email/ folder of the plugin.\r\n* Added new email settings to enable/disable the new admin emails. They will be enabled by default on install and upgrade to 1.3.18. The settings are on the email tab of the PMPro settings.\r\n* Added a couple hooks to the checkout page to have more control over where you add fields, etc. pmpro_checkout_before_submit_button and pmpro_checkout_after_billing_fields.\r\n\r\n= 1.3.17.1 =\r\n* Fixing activation bug from 1.3.17.\r\n\r\n= 1.3.17 =\r\n* Updated pmpro_hasMembershipLevel() and [membership] shortcode to allow passing a level like \"-5\" which will return true if the user does NOT have level #5.\r\n* Updated how PMPro notifications are retrieved and shown on the PMPro admin pages. We're using admin-ajax to call the pmpro_notifications function which uses WP's HTTP API to call the www.paidmembershipspro.com server. Only the PMPro version number is passed to check if a notification should be shown. This method shouldn't slow page load since the javascript is called using jQuery's ready function. If the PMPro server is unavailable, you'll get a JS error instead of a PHP one.\r\n* Fixed warning on discount codes page. Fixed some other warnings.\r\n* Updated expiration/trial crons to avoid blank ('') and zero ('0000-00-00 00:00:00') DB values in addition to NULLs. (Some backup programs will incorrectly export NULL dates as '' which could be interpretted as 1/1/1970... meaning the membership has expired.)\r\n* Fixed bug where \"Billing Information\" was shown on the account page for some free levels.\r\n\r\n= 1.3.16 =\r\n* Moved the SSL Seal box lower on the payment settings page.\r\n* Made dashboard menu and admin bar menus consistent. \r\n* Fixed bug with selecting categories when adding a new level.\r\n* Fixed bug where the user was sometimes redirected to the add level page after adding a level.\r\n\r\n= 1.3.15 =\r\n* Fixed SSL handling on the billing page for members without an order.\r\n* Removed single quotes from shortcode examples on page settings page. Doh! (Thanks, Caps)\r\n* Added Multisite/Network FAQ item.\r\n* Updated the payments settings page to convert tax rates like 7 into 0.07. (Tax rates > 1 are divided by 100.)\r\n\r\n= 1.3.14 =\r\n* Added pmpro_show_cvv filter to hide the CVV from the checkout and billing information pages.\r\n* Updated the billing page to use the pmpro_required_billing_fields like the checkout page does.\r\n* Updated the Authorize.net integration to not pass an empty CVV if the value is empty. Authorize.net will still throw an error if you require CVV via your gateway settings. If you update your settings and PMpro to not require a CVV, you won't get an error.\r\n* Passing the level cost to PayPal Express through the description.\r\n* The billing page doesn't require SSL now if the gateway for the order was PayPal Express. A link to PayPal is shown instead of the form. (Be sure to remove the \"becesure\" custom field from your billing page if it has one and you don't want this page served over SSL.)\r\n* Fixed bug where the membership level name wasn't being passed to Authorize.net in the description field for the order.\r\n* Added a second paramter ($tags = true) to the pmpro_getLevelCost function. If this is false, strip_tags is run on the cost before returning it. (By default we wrap the prices in <strong> tags which is not good for passing to PayPal for example.)\r\n* Some bug fixes for updating billing against Authorize.net.\r\n\r\n= 1.3.13 =\r\n* Fixed warning on checkout page. (Thanks Caps!)\r\n* Fixed bug in PayPal Express checkout that resulted in trying to load the confirmation page over SSL (which would break on some servers). (Thanks Caps!)\r\n* Updated getTaxFromPrice method of order class to allow for better filtering, by level, etc. The pmpro_tax filter now passes the $tax amount, $values (array with price passed and other values), and $this (the order object). It's a little clunky, but must be for backwards compatibility. Custom tax example here: http://www.paidmembershipspro.com/2012/02/custom-tax-structure-using-the-pmpro_tax-hook/\r\n* Removed all TAXAMT NVP parameters in PayPal Express calls. Including these would sometimes introduce errors during checkout. The tax amount is still included in the total amounts passed. Not sure what impact dropping the TAXAMT property will have on reporting in PayPal. I don't believe their tax reporting is the best anyway. Maybe we can build a tax report into PMPro.\r\n\r\n= 1.3.12 =\r\n* Fixed bug in members list pagination on sites installed in a subdirectory.\r\n* Now swapping out the PayPal Express checkout button if the level is free or becomes free with a discount code. (Thanks, Caps!)\r\n\r\n= 1.3.11 =\r\n* Fixed bug with cancelling a user's membership through the admin.\r\n\r\n= 1.3.10 =\r\n* Fixed the links in the discount code table.\r\n* pmpro_hasMembershipLevel(0) and [membership level=\"0\"] will once again return true for non-members. (This broke whent he pmpro_has_membership_level filter was added.)\r\n* WP 3.3.1 testing. (Looks good!)\r\n\r\n= 1.3.9 =\r\n* Added a \"pmpro_has_membership_level\" filter ($r = apply_filters(\"pmpro_has_membership_level\", $r, $user_id, $levels);) which can be used to override the default behavior here.\r\n* Fixed the pmpro shortcodes to allow content above and below the shortcodes on the membership pages. (Thanks, Bluewind!)\r\n* Now setting the user's first and last name to the billing first and last name after checkout.\r\n* Added billing first/last name, billing address, and phone number to the members list screen and CSV export.\r\n* Removed email header/footer code from email class because sometimes it was added twice. Now it is added by the pmpro_send_html function in paid-memberships-pro.php for all emails (WP or PMPro) if a header or footer file are found in your theme folder.\r\n* Added a pmpro_after_phpmailer_init. (The old hook pmpro_after_pmpmailer_init had a typo -- pmpmailer instead of phpmailer.) I left the old hook in for backwards compatibility.\r\n\r\n= 1.3.8 =\r\n* Fixed a bug with canceling memberships. Important Note: User requested cancellations were not being forwarded to PayPal and Authorize.net in the past couple updates. Please double check your members lists with your payment gateway subscriptions. Sorry for the inconvenience.\r\n* Fixed a bug in the billing update form.\r\n* Wrapped some output on the billing update form in esc_attr.\r\n* Now sorting countries alphabetically if international orders are turned on.\r\n* Updated the membership-billing page to show country and long form fields if enabled via the hooks pmpro_international_addresses and pmpro_longform_address. (These were only showing up on the checkout form before.)\r\n\r\n= 1.3.7 =\r\n* Added \"expiration\" field to user profile page. Updated the email class to include information on expiration dates in the admin change emails.\r\n* Added \"pmpro_profile_show_membership_level\" and \"pmpro_profile_show_expiration\" filters which will hide those fields from the edit profile screen if false is returned.\r\n* Added a pmpro_getMembershipLevelForUser($user_id) function and replaced some redundant code in a few places where we query the DB for this. Maybe we'll have a membership level class as some point. Makes sense now.\r\n* Fixed bug where the wrong price for levels was showing up on the edit profile page in the admin. (It would show the current user's level info instead of the edited user's info.)\r\n* Cleaned up a few more warnings, etc.\r\n\r\n= 1.3.6 =\r\n* Changed a few split() calls to explode() to avoid warnings.\r\n* Fixed a couple other warnings/notifices.\r\n* Updated account page to hide the change billing info link if the user doesn't have an active subscription or signed up with PayPal Express.\r\n* Added a filter pmpro_paypal_express_return_url_parameters which can be used to add parameters to the ReturnURL when checking out with PayPal Express. Return an array of key, value pairs. { return array(\"option\" => \"1\"); }\r\n\r\n= 1.3.5 =\r\n* Important update to Authorize.net processing code to account for the \"credit card expires before the start of this subscription\" error that comes up. For levels/discount codes with no trials or only free trials/initial payments, the subscription setup with Authorize.net starts the day of checkout and a free trial is tacked on for 1 period vs. setting up the subscription one period out. One period is added to the billing limit as well, if applicable. Check the blog for more information.\r\n* Important update for PayPal Website Payments Pro users. When using PayPal WPP, the user will have an option to checkout via PayPal Express as well. PayPal requires this and now we support it.\r\n\r\n= 1.3.4 =\r\n* Swapped the $ in the levels page code for $pmpro_currency_symbol.\r\n* Changed the membership shortcode to apply the_content filters to the return value instead of just wpautop. This allows shortcodes within that shortcode and other filters to be run on the content. (Let me know if issues arrise from this.)\r\n* Wrapped some post variables in checkout and billing preheaders with trim()\r\n* Now voiding authorizations with Authorize.net. (The plugin will authorize $1 before setting up a subscription without an initial payment.)\r\n* Now voiding an initial payment with Authorize.net if the subscription setup fails.\r\n* Now refunding an intial payment with PayPal if the subscription setup fails.\r\n* Added a \"pmpro_checkout_after_level_cost\" to add fields or arbitrary code after the level cost description on the checkout page.\r\n* Added Diner's Club, EnRoute, and JCB as credit card options. Make sure you congiture your Gateway/Merchant account to accept these card types as well.\r\n\r\n= 1.3.3 =\r\n* Fixed bug where country field was resetting to default when there were errors with the checkout form submission. (If you templatized your checkout page and have international addresses enabled, you will need to add $bcountry to the globals setup at the top of your checkout template .php)\r\n\r\n= 1.3.2 =\r\n* Fixed issue introduced in 1.3.1 where checkout page would not redirect to HTTPS when it should have.\r\n* Fixing issues with slashes in addresses/etc in the checkout form.\r\n* Updated the PMProEmail class to use the wp_mail function instead of use PHPMailer directly. (Thanks VadaPrime: http://wordpress.org/support/topic/plugin-paid-memberships-pro-wp_mail?replies=6#post-2449672)\r\n* Fixed some more notices and warnings.\r\n\r\n= 1.3.1 =\r\n* Fixed automatic page creation, which broke in the last update.\r\n* Added hook pmpro_checkout_level which allows you to tweak the $level object before checkout, e.g. to change pricing for upgrades.\r\n* Added hook pmpro_checkout_start_date which allows you to change the start date of a membership before checkout. (preheaders/checkout.php)\r\n* Added hook pmpro_profile_start_date which allows you to change the start date of a membership that is sent to the gateway. (classes/class.memberorder.php)\r\n* Cleaned up some notices and warnings. Will hopefully finish the remaining ones next update.\r\n* Removed some old tinyMCE code that wasn't in use anymore. FYI, WP 3.3 will have a way to include visual editors on other pages, so we may add it to the description field of the membership levels.\r\n* Updated order class to send phone and email to Authorize.net when creating subscriptions. The charge/authorize API support international phone numbers, but the ARB API does not. So if a customer enters an international phone number (or other phone number over 10 characters), the number will be sent for any initial payment/charge, but not for the subscription setup.\r\n* Fixed where !!discount_code!! was not being parsed out in emails.\r\n\r\n= 1.3 =\r\n* Added a filter pmpro_login_redirect. You can return false to allow users to signup via the default WP login page.\r\n* Member CSV export no longer limiting to 15 members.\r\n* Correctly adding code_id to the pmpro_memberships_users table on signup. View here for retroactively updating your users tables in case you intend to use that value for advanced functionality.\r\n* Changed URL to send IPN checks for live PayPal instances from www.live.paypal.com to www.paypal.com.\r\n* Updated getfile.php to work when WP is installed in a subdomain.\r\n* Added links to individual settings tabs in the WP menu.\r\n* Changed the architecture of the settings pages which used to all be coded in the membershiplevels.php page. Each settings page has its own script now. I removed the pmpro-data.php service and have the pages submit to themselves now. This won't impact how things work, but will make it easier for me to develop going forward.\r\n\r\n= 1.2.10 =\r\n* Added pmpro_confirmation_message hook to change the output on the confirmation page without having to templatize it. The filter passes the constructed html string with the confirmation message and a second parameter containing the order/invoice object if it is a paid membership.\r\n* Added a pmpro_checkout_boxes hook that can be used to output extra fields and other content in the middle of the checkout page.\r\n* Now showing 2 decimals places for the tax rate when showing a membership level's cost.\r\n\r\n= 1.2.9 =\r\n* IMPORTANT fix so new user email addresses are properly captured when using PayPal Express.\r\n* rewrote the IPN handler to use the WordPress HTTP API for better compatibility.\r\n* added extra id to tables and fields for easier styling. (let me know if you have suggestions for small changes like these that can save you from having to templatize a page)\r\n* fixed query in readiness check function.\r\n* Authorize.net doesn't support international phone numbers, so we're not sending them to Authorize.net anymore.\r\n\r\n= 1.2.8 =\r\n* Ordering levels by id (ascending) on the levels page now. Added a \"pmpro_levels_array\" filter that can be used to reorder the levels or alter the levels before displaying them on the levels page. The array of levels is the only parameter.\r\n* Added expiration date to the member list and export.\r\n* Showing a member count on the member list page.\r\n* Added filter to change subject lines for PMPro emails. (pmpro_email_subject) The filter's first paramter is the subject, the second parameter is an object containg all of the email information. There are also filters for pmpro_email_recipient, pmpro_email_sender, pmpro_email_sender_name, pmpro_email_template, amd pmpro_email_body.\r\n* Added an RSS feed from the PMPro blog to the dashboard.\r\n* Now only showing the discount code field at checkout if there are discount codes in the database. Can be overriden by the pmpro_show_discount_code filter.\r\n* Cancelling with PayPal now properly updates status to \"cancelled\".\r\n* No longer trying to unsubscribe from PayPal or Authorize.net if there is no subscription ID to check against (e.g. when the user was manually added to a membership level) or if the last order does not have \"success\" status (e.g. they already cancelled).\r\n* Removed PHP short tags (e.g., <?=$variable?>) for wider compatibility.\r\n\r\n= 1.2.7 =\r\n* Fixed bug with non-USD currencies.\r\n* Fixed bug with phone number formatting.\r\n\r\n= 1.2.6 =\r\n* Fixed bug with discount codes showing up in emails, confirmation pages, and invoices.\r\n* Added currency option to gateway settings.\r\n\r\n= 1.2.5 =\r\n* PayPal Express support! PayPal Express requires just a verified PayPal Business account (no monthly fees from PayPal).\r\n* Fixed a bug when plans with a \"cycle number\"/billing frequency that was greater than 1 (e.g. every 4 months). Before the first payment was being scheduled 1 day/month ext out instead of e.g. 4 months out... resulting in an extra payment.\r\n* Added some hooks to support international orders: pmpro_international_addresses, pmpro_default_country, pmpro_countries, pmpro_required_billing_fields. Example code to support international credit cards: https://gist.github.com/1212479\r\n\r\n= 1.2.4 =\r\n* VERY IMPORTANT BUG FIX: The getMembershipLevel function of the MemberOrder class had an error where the membership level object was not being created properly during signup and so * recurring subscriptions were not being created *. This update fixes the bug. Thanks to mvp29 for catching this.\r\n* Fixed another bug that was causing warnings on some setups, e.g. WAMP server for Windows.\r\n* Fixed a bug that would show warnings when visiting a login page over HTTPS.\r\n* Fixed membership pricing wording for certain cases, e.g. every 4 months for 4 more payments.\r\n* Fixed a bug in the email generation for order confirmations when discount codes were used. This will no longer freeze the screen.\r\n\r\n= 1.2.3 =\r\n* Fixed an error in the DB upgrade code that was keeping the \"enddate\" from being added to new members' records.\r\n\r\n= 1.2.2 =\r\n* Added pmpro_skip_account_fields hook. This value is used to determine if the username/password accounts fields should show up at checkout. By default, it is shown when the user is logged out and not shown when logged in. The hook allows you to return true or false to override this behavior. If the fields are skipped while no user is logged in a username and password will be automatically generated for the new user after checkout.\r\n* You can delete discount codes now from the admin.\r\n* Added a hook pmpro_level_cost_text to allow you to override how the cost is shown on the checkout page. Obviously don't abuse this by showing a different price than what will be charged. Be careful if you change your membership levels pricing to update your filter if needed. The hook passes the text generated by the pmpro_getLevelCost(&$level) function and also a level object which is prepopulated with levels pricing and expiration settings already adjusted for any discount codes that may be in affect.\r\n* Added expiration settings for levels. You can set an \"expiration number\" and \"expiration period\" for any level now. e.g. \"6 months\" or \"180 days\". You can also alter expiration settings via discount codes. Expirations will be useful for offering free trials which don't require a credit card... and other scenarios you guys have come up with. A script is run once a day using WP Cron that checks for any membership that has ended and then cancels that membership. The user will lose access and the subscription setup in your payment gateway will be canceled.\r\n* Users can \"extend\" a membership that is set to expire via the Membership Account page.\r\n* Added a hook pmpro_level_expiration_text to allow you to override how the expiration information is shown on the levels and checkout pages. Again don't abuse this by showing a different expiration than is real. Be careful if you change your expiration settings to update your filter if needed. The hook passes the text generated by the pmpro_getLevelExpiration(&$level) function and also a level object which is prepopulated with levels pricing and expiration settings already adjusted for any discount codes that may be in affect.\r\n* Added an error check if the MySQL insertion of the membership level fails. This happens after the user's credit card/etc has already been charged. The plugin tries to cancel the order just made, but might fail. The user is adviced to contact the site owner instead of trying again. I don't want to scare you. We test the checkout process a lot. So assuming that the code hasn't been tampered with and there isn't an internet outage in the microseconds between the order going through and the database being updates, you should never run into this. Still it's nice to have, just in case.\r\n* Fixed a bug that may have caused the billing amount to show up incorrectly on the Membership Account page.\r\n* Added the discount code used to the confirmation page, invoices, and invoice emails.\r\n* Now sending notification emails to members 1 week before their trial period ends (if applicable). A WP cron job is setup on plugin activation. You can disable the email via the pmpro_send_trial_ending_email hook.\r\n* Now sending notification emails to members 1 week before their membership expires (if applicable). A WP cron job is setup on plugin activation. You can disable the email via the pmpro_send_expiration_warning_email hook.\r\n* An email is sent when a membership expires. A WP cron job is setup on plugin activation. You can disable the email via the pmpro_send_expiration_email hook.\r\n* Note: Right now users cannot \"extend\" a membership that is about to expire without first canceling their current membership. I plan to add \"membership extensions\" for these cases, but it's a little complicated and I didn't want to hold up this release for them. So Real Soon Now.\r\n\r\n= 1.2.1 =\r\n* Fixed bug where non-member admins would be redirected away from the \"All Pages\" page in the admin.\r\n\r\n= 1.2 =\r\n* Fixing some wonkiness with the 1.1.15 update.\r\n* Fixed \"warning\" showing up on discount code pages.\r\n* Tweaked the admin pages a bit for consistency.\r\n* Added screenshots and FAQ to the readme.\r\n* Figured we were due for a bigger version step.\r\n\r\n= 1.1.15 =\r\n* Discount Codes Added!\r\n* Removed some redundant files that slipped into the services folder.\r\n* Fixed the !!levels!! variable for message settings of the advanced tab.\r\n* Changing some ids columns in tables to unsigned.\r\n\r\n= 1.1.14 =\r\n* Now encoding #'s when sending info via Authorize.net's API. This may prevent some address conflicts.\r\n\r\n= 1.1.13 =\r\n* No longer adding \"besecure\" custom field to the billing and checkout pages. You can still add this manually to selectively require SSL on a page. If you are trying to do a free membership without SSL, you will have to make sure the besecure custom field is deleted from the Membership-Checkout page, especially if you are upgrading from an older version of PMPro.\r\n* Added a filter before sending the default WP welcome notification email. Return false for the \"pmpro_wp_new_user_notification\" hook/filter to skip sending the WP default welcome email (because in many cases they are already getting an email from PMPro as well).\r\n\r\n= 1.1.12 =\r\n* Revenue report on members list page. (Rought estimate only that doesn't take into account trial periods and billing limits.)\r\n* Enabling weekly recurring payments for Authorize.net by converting week period to 7 days * # months.\r\n* Improved error handling on checkout page.\r\n* Now running \"pmpro_after_change_membership_level\" actions after the \"pmpro_after_checkout\" action. Previously this hook was only called when a membership level was changed via the WP admin.\r\n* Won't complain about setting up a Payment Gateway if you only have free membership levels.\r\n* The \"besecure\" custom field is not added to the billing or checkout by default anymore when you run the \"create the pages for me\" option in the settings. Whether or not to use HTTPS on a page is now handled in the preheader files for each page (see below).\r\n* The plugin won't force SSL on the checkout page anymore unless the membership level requires payment. If your checkout page is still running over HTTPS/SSL for free membership checkouts, make sure the \"besecure\" custom field has been deleted on your checkout page. You can use the \"besecure\" custom field or the \"pmpro_besecure\" filter to override the plugin's decision.\r\n* The plugin won't force SSL on the cancel page anymore. Again, you can override this using the \"besecure\" custom field or the \"pmpro_besecure\" filter.\r\n\r\n= 1.1.11 =\r\n* Removed some debug code from the invoice page that might have shown on error.\r\n* Added check to recaptcha library code incase it is already installed. (Let's hope other plugin developers are doing the same.)\r\n* Removed the TinyMCE editor from the description field on the edit membership level page. It was a little buggy. Might bring it back later.\r\n\r\n= 1.1.10 =\r\n* added a hook/filter \"pmpro_rss_text_filter\"\r\n* added a hook/filter \"pmpro_non_member_text_filter\"\r\n* added a hook/filter \"pmpro_not_logged_in_text_filter\"\r\n* adjusted the pmpro_has_membership_access() function\r\n* added a hook/filter \"pmpro_has_membership_access_filter\"\r\n* updated the hook/filter \"pmpro_has_membership_access_filter_{post-type}\"\r\n* removed the \"pmpro_has_membership_access_action_{post-type}\" hook/action\r\n* update invoice page to handle case where no invoice is found\r\n\r\n= 1.1.9 =\r\n* You can now set individual posts to require membership without assigning them to a category.\r\n* Fixed bug with the confirmation email during signup.\r\n* Fixed a CSS bug on the cancel membership page.\r\n\r\n= 1.1.8 =\r\n* Fix for login/registration URL rerouting.\r\n* Added members list to admin bar menu.\r\n* Added warning/error when trying to checkout before the payment gateway is setup.\r\n* Fixed some error handling in the order class.\r\n* Fixed a bug that occurred when processing amounts less than $1.\r\n\r\n= 1.1.7 =\r\n* Fixed bugs with http to https redirects and visa versa.\r\n* Fixed redirect bugs for sites installed in a subdomain.\r\n\r\n= 1.1.6 =\r\n* Fixed MySQL bug showing up on some users add membership level page.\r\n\r\n= 1.1.5 =\r\n* Required fix for PayPal Website Payments Pro processing. Please update.\r\n* Fixed bug with pagination on members list.\r\n* Fixed bugs with errors thrown by MemberOrder class.\r\n* Updated login/registration URL rerouting.\r\n\r\n= 1.1.4 =\r\n* Custom Post Types default to allowing access\r\n* Fixed login_redirect code.\r\n* Added pmpro_login_redirect filter for when members login.\r\n\r\n= 1.1.3 =\r\n* Getting ready for the WP plugin repository\r\n* License text update.\r\n\r\n= 1.1.2 =\r\n* Added hooks to checkout page for customizing registration fields.\r\n* Fixed bug in pmpro_getLevelCost();\r\n* Another CCV/CVV fix for Authorize.net.\r\n* License text update.\r\n* Admin notices are loaded via Ajax now.\r\n\r\n= 1.1.1 =\r\n* Added honeypot to signup page.\r\n* Updated pmpro_add_pages to use capabilities instead of user levels\r\n* Fixed checkboxes in admin screens.\r\n* Now checking that passwords match on signup.\r\n* Properly sending CCV/CVV codes to Authorize.net.\r\n\r\n= 1.0 =\r\n* This is the launch version. No changes yet.\r\n"], "fixing_code": ["<?php\n\t//only admins can get this\n\tif(!function_exists(\"current_user_can\") || (!current_user_can(\"manage_options\") && !current_user_can(\"pmpro_advancedsettings\")))\n\t{\n\t\tdie(__(\"You do not have permissions to perform this action.\", \"pmpro\"));\n\t}\n\n\tglobal $wpdb, $msg, $msgt;\n\n\t//get/set settings\n\tif(!empty($_REQUEST['savesettings']))\n\t{\n\t\t//other settings\n\t\tpmpro_setOption(\"nonmembertext\");\n\t\tpmpro_setOption(\"notloggedintext\");\n\t\tpmpro_setOption(\"rsstext\");\n\t\tpmpro_setOption(\"filterqueries\");\n\t\tpmpro_setOption(\"showexcerpts\");\n\t\tpmpro_setOption(\"hideads\");\n\t\tpmpro_setOption(\"hideadslevels\");\n\t\tpmpro_setOption(\"redirecttosubscription\");\n\n\t\t//captcha\n\t\tpmpro_setOption(\"recaptcha\");\n\t\tpmpro_setOption(\"recaptcha_publickey\");\n\t\tpmpro_setOption(\"recaptcha_privatekey\");\n\n\t\t//tos\n\t\tpmpro_setOption(\"tospage\");\n\n\t\t//footer link\n\t\tpmpro_setOption(\"hide_footer_link\");\n\n        // custom settings (added with pmpro_custom_advanced_settings hook)\n        foreach($_REQUEST as $key => $value ) {\n            if (strpos($key, 'custom_') === 0) {\n                pmpro_setOption($key);\n            }\n        }\n\n\t\t//assume success\n\t\t$msg = true;\n\t\t$msgt = __(\"Your advanced settings have been updated.\", \"pmpro\");\n\t}\n\n\t$nonmembertext = pmpro_getOption(\"nonmembertext\");\n\t$notloggedintext = pmpro_getOption(\"notloggedintext\");\n\t$rsstext = pmpro_getOption(\"rsstext\");\n\t$hideads = pmpro_getOption(\"hideads\");\n    $filterqueries = pmpro_getOption('filterqueries');\n\t$showexcerpts = pmpro_getOption(\"showexcerpts\");\n\t$hideadslevels = pmpro_getOption(\"hideadslevels\");\n\n\tif(is_multisite())\n\t\t$redirecttosubscription = pmpro_getOption(\"redirecttosubscription\");\n\n\t$recaptcha = pmpro_getOption(\"recaptcha\");\n\t$recaptcha_publickey = pmpro_getOption(\"recaptcha_publickey\");\n\t$recaptcha_privatekey = pmpro_getOption(\"recaptcha_privatekey\");\n\n\t$tospage = pmpro_getOption(\"tospage\");\n\n\t$hide_footer_link = pmpro_getOption(\"hide_footer_link\");\n\n\t//default settings\n\tif(!$nonmembertext)\n\t{\n\t\t$nonmembertext = sprintf( __( 'This content is for !!levels!! members only. <a href=\"%s\">Register here</a>.', 'pmpro' ), wp_login_url() . \"?action=register\" );\n\t\tpmpro_setOption(\"nonmembertext\", $nonmembertext);\n\t}\n\tif(!$notloggedintext)\n\t{\n\t\t$notloggedintext = sprintf( __( 'Please <a href=\"%s\">login</a> to view this content. (<a href=\"%s\">Register here</a>.)', 'pmpro' ), wp_login_url( get_permalink() ), wp_login_url() . \"?action=register\" );\n\t\tpmpro_setOption(\"notloggedintext\", $notloggedintext);\n\t}\n\tif(!$rsstext)\n\t{\n\t\t$rsstext = __( 'This content is for members only. Visit the site and log in/register to read.', 'pmpro' );\n\t\tpmpro_setOption(\"rsstext\", $rsstext);\n\t}\n\n\t$levels = $wpdb->get_results( \"SELECT * FROM {$wpdb->pmpro_membership_levels}\", OBJECT );\n\n\trequire_once(dirname(__FILE__) . \"/admin_header.php\");\n?>\n\n\t<form action=\"\" method=\"post\" enctype=\"multipart/form-data\">\n\t\t<h2><?php _e('Advanced Settings', 'pmpro');?></h2>\n\n\t\t<table class=\"form-table\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"nonmembertext\"><?php _e('Message for Logged-in Non-members', 'pmpro');?>:</label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<textarea name=\"nonmembertext\" rows=\"3\" cols=\"80\"><?php echo stripslashes($nonmembertext)?></textarea><br />\n\t\t\t\t\t<small class=\"litegray\"><?php _e('This message replaces the post content for non-members. Available variables', 'pmpro');?>: !!levels!!, !!referrer!!</small>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"notloggedintext\"><?php _e('Message for Logged-out Users', 'pmpro');?>:</label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<textarea name=\"notloggedintext\" rows=\"3\" cols=\"80\"><?php echo stripslashes($notloggedintext)?></textarea><br />\n\t\t\t\t\t<small class=\"litegray\"><?php _e('This message replaces the post content for logged-out visitors.', 'pmpro');?></small>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"rsstext\"><?php _e('Message for RSS Feed', 'pmpro');?>:</label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<textarea name=\"rsstext\" rows=\"3\" cols=\"80\"><?php echo stripslashes($rsstext)?></textarea><br />\n\t\t\t\t\t<small class=\"litegray\"><?php _e('This message replaces the post content in RSS feeds.', 'pmpro');?></small>\n\t\t\t\t</td>\n\t\t\t</tr>\n\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"filterqueries\"><?php _e(\"Filter searches and archives?\", 'pmpro');?></label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<select id=\"filterqueries\" name=\"filterqueries\">\n\t\t\t\t\t\t<option value=\"0\" <?php if(!$filterqueries) { ?>selected=\"selected\"<?php } ?>><?php _e('No - Non-members will see restricted posts/pages in searches and archives.', 'pmpro');?></option>\n\t\t\t\t\t\t<option value=\"1\" <?php if($filterqueries == 1) { ?>selected=\"selected\"<?php } ?>><?php _e('Yes - Only members will see restricted posts/pages in searches and archives.', 'pmpro');?></option>\n\t\t\t\t\t</select>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"showexcerpts\"><?php _e('Show Excerpts to Non-Members?', 'pmpro');?></label>\n            </th>\n            <td>\n                <select id=\"showexcerpts\" name=\"showexcerpts\">\n                    <option value=\"0\" <?php if(!$showexcerpts) { ?>selected=\"selected\"<?php } ?>><?php _e('No - Hide excerpts.', 'pmpro');?></option>\n                    <option value=\"1\" <?php if($showexcerpts == 1) { ?>selected=\"selected\"<?php } ?>><?php _e('Yes - Show excerpts.', 'pmpro');?></option>\n                </select>\n            </td>\n            </tr>\n            <tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"hideads\"><?php _e(\"Hide Ads From Members?\", 'pmpro');?></label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<select id=\"hideads\" name=\"hideads\" onchange=\"pmpro_updateHideAdsTRs();\">\n\t\t\t\t\t\t<option value=\"0\" <?php if(!$hideads) { ?>selected=\"selected\"<?php } ?>><?php _e('No', 'pmpro');?></option>\n\t\t\t\t\t\t<option value=\"1\" <?php if($hideads == 1) { ?>selected=\"selected\"<?php } ?>><?php _e('Hide Ads From All Members', 'pmpro');?></option>\n\t\t\t\t\t\t<option value=\"2\" <?php if($hideads == 2) { ?>selected=\"selected\"<?php } ?>><?php _e('Hide Ads From Certain Members', 'pmpro');?></option>\n\t\t\t\t\t</select>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr id=\"hideads_explanation\" <?php if($hideads < 2) { ?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t<th scope=\"row\" valign=\"top\">&nbsp;</th>\n\t\t\t\t<td>\n\t\t\t\t\t<p class=\"top0em\"><?php _e('Ads from the following plugins will be automatically turned off', 'pmpro');?>: <em>Easy Adsense</em>, ...</p>\n\t\t\t\t\t<p><?php _e('To hide ads in your template code, use code like the following', 'pmpro');?>:</p>\n\t\t\t\t<pre lang=\"PHP\">\nif(pmpro_displayAds())\n{\n//insert ad code here\n}\n\t\t\t\t</pre>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr id=\"hideadslevels_tr\" <?php if($hideads != 2) { ?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"hideadslevels\"><?php _e('Choose Levels to Hide Ads From', 'pmpro');?>:</label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<div class=\"checkbox_box\" <?php if(count($levels) > 5) { ?>style=\"height: 100px; overflow: auto;\"<?php } ?>>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$hideadslevels = pmpro_getOption(\"hideadslevels\");\n\t\t\t\t\t\t\tif(!is_array($hideadslevels))\n\t\t\t\t\t\t\t\t$hideadslevels = explode(\",\", $hideadslevels);\n\n\t\t\t\t\t\t\t$sqlQuery = \"SELECT * FROM $wpdb->pmpro_membership_levels \";\n\t\t\t\t\t\t\t$levels = $wpdb->get_results($sqlQuery, OBJECT);\n\t\t\t\t\t\t\tforeach($levels as $level)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<div class=\"clickable\"><input type=\"checkbox\" id=\"hideadslevels_<?php echo $level->id?>\" name=\"hideadslevels[]\" value=\"<?php echo $level->id?>\" <?php if(in_array($level->id, $hideadslevels)) { ?>checked=\"checked\"<?php } ?>> <?php echo $level->name?></div>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t</div>\n\t\t\t\t\t<script>\n\t\t\t\t\t\tjQuery('.checkbox_box input').click(function(event) {\n\t\t\t\t\t\t\tevent.stopPropagation()\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tjQuery('.checkbox_box div.clickable').click(function() {\n\t\t\t\t\t\t\tvar checkbox = jQuery(this).find(':checkbox');\n\t\t\t\t\t\t\tcheckbox.attr('checked', !checkbox.attr('checked'));\n\t\t\t\t\t\t});\n\t\t\t\t\t</script>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<?php if(is_multisite()) { ?>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"redirecttosubscription\"><?php _e('Redirect all traffic from registration page to /susbcription/?', 'pmpro');?>: <em>(<?php _e('multisite only', 'pmpro');?>)</em></label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<select id=\"redirecttosubscription\" name=\"redirecttosubscription\">\n\t\t\t\t\t\t<option value=\"0\" <?php if(!$redirecttosubscription) { ?>selected=\"selected\"<?php } ?>><?php _e('No', 'pmpro');?></option>\n\t\t\t\t\t\t<option value=\"1\" <?php if($redirecttosubscription == 1) { ?>selected=\"selected\"<?php } ?>><?php _e('Yes', 'pmpro');?></option>\n\t\t\t\t\t</select>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<?php } ?>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"recaptcha\"><?php _e('Use reCAPTCHA?', 'pmpro');?>:</label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<select id=\"recaptcha\" name=\"recaptcha\" onchange=\"pmpro_updateRecaptchaTRs();\">\n\t\t\t\t\t\t<option value=\"0\" <?php if(!$recaptcha) { ?>selected=\"selected\"<?php } ?>><?php _e('No', 'pmpro');?></option>\n\t\t\t\t\t\t<option value=\"1\" <?php if($recaptcha == 1) { ?>selected=\"selected\"<?php } ?>><?php _e('Yes - Free memberships only.', 'pmpro');?></option>\n\t\t\t\t\t\t<option value=\"2\" <?php if($recaptcha == 2) { ?>selected=\"selected\"<?php } ?>><?php _e('Yes - All memberships.', 'pmpro');?></option>\n\t\t\t\t\t</select><br />\n\t\t\t\t\t<small><?php _e('A free reCAPTCHA key is required.', 'pmpro');?> <a href=\"https://www.google.com/recaptcha/admin/create\"><?php _e('Click here to signup for reCAPTCHA', 'pmpro');?></a>.</small>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr id=\"recaptcha_tr\" <?php if(!$recaptcha) { ?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t<th scope=\"row\" valign=\"top\">&nbsp;</th>\n\t\t\t\t<td>\n\t\t\t\t\t<label for=\"recaptcha_publickey\"><?php _e('reCAPTCHA Public Key', 'pmpro');?>:</label>\n\t\t\t\t\t<input type=\"text\" name=\"recaptcha_publickey\" size=\"60\" value=\"<?php echo esc_attr($recaptcha_publickey);?>\" />\n\t\t\t\t\t<br /><br />\n\t\t\t\t\t<label for=\"recaptcha_privatekey\"><?php _e('reCAPTCHA Private Key', 'pmpro');?>:</label>\n\t\t\t\t\t<input type=\"text\" name=\"recaptcha_privatekey\" size=\"60\" value=\"<?php echo esc_attr($recaptcha_privatekey);?>\" />\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"tospage\"><?php _e('Require Terms of Service on signups?', 'pmpro');?></label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<?php\n\t\t\t\t\t\twp_dropdown_pages(array(\"name\"=>\"tospage\", \"show_option_none\"=>\"No\", \"selected\"=>$tospage));\n\t\t\t\t\t?>\n\t\t\t\t\t<br />\n\t\t\t\t\t<small><?php _e('If yes, create a WordPress page containing your TOS agreement and assign it using the dropdown above.', 'pmpro');?></small>\n\t\t\t\t</td>\n\t\t\t</tr>\n\n\t\t\t<?php /*\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" valign=\"top\">\n\t\t\t\t\t<label for=\"hide_footer_link\">Hide the PMPro Link in the Footer?</label>\n\t\t\t\t</th>\n\t\t\t\t<td>\n\t\t\t\t\t<select id=\"hide_footer_link\" name=\"hide_footer_link\">\n\t\t\t\t\t\t<option value=\"0\" <?php if(!$hide_footer_link) { ?>selected=\"selected\"<?php } ?>>No - Leave the link. (Thanks!)</option>\n\t\t\t\t\t\t<option value=\"1\" <?php if($hide_footer_link == 1) { ?>selected=\"selected\"<?php } ?>>Yes - Hide the link.</option>\n\t\t\t\t\t</select>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t*/\n\n            // Filter to Add More Advanced Settings for Misc Plugin Options, etc.\n            if (has_action('pmpro_custom_advanced_settings')) {\n            $custom_fields = apply_filters('pmpro_custom_advanced_settings', array());\n            foreach ($custom_fields as $field) {\n            ?>\n            <tr>\n                <th valign=\"top\" scope=\"row\">\n                    <label\n                        for=\"<?php _e($field['field_name'], 'pmpro'); ?>\"><?php _e($field['label'], 'pmpro'); ?></label>\n                </th>\n                <td>\n                    <?php\n                    switch ($field['field_type']) {\n                        case 'select':\n                            ?>\n                            <select id=\"<?php _e($field['field_name'], 'pmpro'); ?>\"\n                                    name=\"<?php _e($field['field_name'], 'pmpro'); ?>\">\n                                <?php foreach ($field['options'] as $option) {\n                                    ?>\n                                    <option value=\"<?php _e($option, 'pmpro'); ?>\"\n                                        <?php\n                                        if ($option == pmpro_getOption($field['field_name'])) {\n                                            _e('selected', 'pmpro');\n                                        }\n                                        ?>\n                                        ><?php _e($option, 'pmpro'); ?></option>\n                                <?php\n                                } ?>\n                            </select>\n                            <?php\n                            break;\n                        case 'text':\n                            ?>\n                            <input id=\"<?php _e($field['field_name'], 'pmpro'); ?>\"\n                                   name=\"<?php _e($field['field_name'], 'pmpro'); ?>\"\n                                   type=\"<?php _e($field['field_type'], 'pmpro'); ?>\"\n                                   value=\"<?php echo esc_attr(pmpro_getOption($field['field_name'])); ?> \">\n                            <?php\n                            break;\n                        case 'textarea':\n                            ?>\n                            <textarea id=\"<?php _e($field['field_name'], 'pmpro'); ?>\"\n                                      name=\"<?php _e($field['field_name'], 'pmpro'); ?>\">\n                                <?php echo esc_textarea(pmpro_getOption($field['field_name'])); ?>\n                            </textarea>\n                            <?php\n                            break;\n                        default:\n                            break;\n                    }\n                    if (!empty($field['description'])) {\n                        ?>\n                        <br>\n                        <small><?php _e($field['description'], 'pmpro'); ?></small>\n                    <?php\n                    }\n                    ?>\n                </td>\n                <?php\n                }\n                }\n                ?>\n            </tr>\n        </tbody>\n\t\t</table>\n\t\t<script>\n\t\t\tfunction pmpro_updateHideAdsTRs()\n\t\t\t{\n\t\t\t\tvar hideads = jQuery('#hideads').val();\n\t\t\t\tif(hideads == 2)\n\t\t\t\t{\n\t\t\t\t\tjQuery('#hideadslevels_tr').show();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tjQuery('#hideadslevels_tr').hide();\n\t\t\t\t}\n\n\t\t\t\tif(hideads > 0)\n\t\t\t\t{\n\t\t\t\t\tjQuery('#hideads_explanation').show();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tjQuery('#hideads_explanation').hide();\n\t\t\t\t}\n\t\t\t}\n\t\t\tpmpro_updateHideAdsTRs();\n\n\t\t\tfunction pmpro_updateRecaptchaTRs()\n\t\t\t{\n\t\t\t\tvar recaptcha = jQuery('#recaptcha').val();\n\t\t\t\tif(recaptcha > 0)\n\t\t\t\t{\n\t\t\t\t\tjQuery('#recaptcha_tr').show();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tjQuery('#recaptcha_tr').hide();\n\t\t\t\t}\n\t\t\t}\n\t\t\tpmpro_updateRecaptchaTRs();\n\t\t</script>\n\n\t\t<p class=\"submit\">\n\t\t\t<input name=\"savesettings\" type=\"submit\" class=\"button button-primary\" value=\"<?php _e('Save Settings', 'pmpro');?>\" />\n\t\t</p>\n\t</form>\n\n<?php\n\trequire_once(dirname(__FILE__) . \"/admin_footer.php\");\n?>\n", "<?php\n\t//only admins can get this\n\tif(!function_exists(\"current_user_can\") || (!current_user_can(\"manage_options\") && !current_user_can(\"pmpro_discountcodes\")))\n\t{\n\t\tdie(__(\"You do not have permissions to perform this action.\", \"pmpro\"));\n\t}\t\n\t\n\t//vars\n\tglobal $wpdb, $pmpro_currency_symbol;\n\t\n\tif(isset($_REQUEST['edit']))\t\n\t\t$edit = intval($_REQUEST['edit']);\n\telse\n\t\t$edit = false;\n\t\n\tif(isset($_REQUEST['delete']))\n\t\t$delete = intval($_REQUEST['delete']);\n\telse\n\t\t$delete = false;\n\t\t\n\tif(isset($_REQUEST['saveid']))\n\t\t$saveid = intval($_POST['saveid']);\n\telse\n\t\t$saveid = false;\t\t\t\n\t\n\tif($saveid)\n\t{\n\t\t//get vars\n\t\t$code = sanitize_text_field($_POST['code']);\n\t\t$starts_month = intval($_POST['starts_month']);\n\t\t$starts_day = intval($_POST['starts_day']);\n\t\t$starts_year = intval($_POST['starts_year']);\n\t\t$expires_month = intval($_POST['expires_month']);\n\t\t$expires_day = intval($_POST['expires_day']);\n\t\t$expires_year = intval($_POST['expires_year']);\n\t\t$uses = intval($_POST['uses']);\n\t\t\n\t\t//fix up dates\t\t\n\t\t$starts = date(\"Y-m-d\", strtotime($starts_month . \"/\" . $starts_day . \"/\" . $starts_year, current_time(\"timestamp\")));\n\t\t$expires = date(\"Y-m-d\", strtotime($expires_month . \"/\" . $expires_day . \"/\" . $expires_year, current_time(\"timestamp\")));\n\t\t\n\t\t//updating or new?\n\t\tif($saveid > 0)\n\t\t{\n\t\t\t$sqlQuery = \"UPDATE $wpdb->pmpro_discount_codes SET code = '\" . esc_sql($code) . \"', starts = '\" . $starts . \"', expires = '\" . $expires . \"', uses = '\" . intval($uses) . \"' WHERE id = '\" . $saveid . \"' LIMIT 1\";\n\t\t\tif($wpdb->query($sqlQuery) !== false)\n\t\t\t{\n\t\t\t\t$pmpro_msg = __(\"Discount code updated successfully.\", \"pmpro\");\n\t\t\t\t$pmpro_msgt = \"success\";\n\t\t\t\t$saved = true;\n\t\t\t\t$edit = $saveid;\t\t\t\t\t\t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$pmpro_msg = __(\"Error updating discount code. That code may already be in use.\", \"pmpro\");\n\t\t\t\t$pmpro_msgt = \"error\";\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$sqlQuery = \"INSERT INTO $wpdb->pmpro_discount_codes (code, starts, expires, uses) VALUES('\" . esc_sql($code) . \"', '\" . $starts . \"', '\" . $expires . \"', '\" . intval($uses) . \"')\";\n\t\t\tif($wpdb->query($sqlQuery) !== false)\n\t\t\t{\n\t\t\t\t$pmpro_msg = __(\"Discount code added successfully.\", \"pmpro\");\n\t\t\t\t$pmpro_msgt = \"success\";\n\t\t\t\t$saved = true;\n\t\t\t\t$edit = $wpdb->insert_id;\n\t\t\t\t//$saveid = $edit;\n\t\t\t}\n\t\t\telse\n\t\t\t{\t\t\t\t\n\t\t\t\t$pmpro_msg = __(\"Error adding discount code. That code may already be in use.\", \"pmpro\") . $wpdb->last_error;\t\t\t\t\n\t\t\t\t$pmpro_msgt = \"error\";\n\t\t\t}\n\t\t}\n\t\t\n\t\t//now add the membership level rows\t\t\n\t\tif($saved && $edit > 0)\n\t\t{\n\t\t\t//get the submitted values\n\t\t\t$all_levels_a = $_REQUEST['all_levels'];\n\t\t\tif(!empty($_REQUEST['levels']))\n\t\t\t\t$levels_a = $_REQUEST['levels'];\n\t\t\telse\n\t\t\t\t$levels_a = array();\n\t\t\t$initial_payment_a = $_REQUEST['initial_payment'];\n\t\t\tif(!empty($_REQUEST['recurring']))\n\t\t\t\t$recurring_a = $_REQUEST['recurring'];\n\t\t\t$billing_amount_a = $_REQUEST['billing_amount'];\n\t\t\t$cycle_number_a = $_REQUEST['cycle_number'];\n\t\t\t$cycle_period_a = $_REQUEST['cycle_period'];\n\t\t\t$billing_limit_a = $_REQUEST['billing_limit'];\n\t\t\tif(!empty($_REQUEST['custom_trial']))\n\t\t\t\t$custom_trial_a = $_REQUEST['custom_trial'];\n\t\t\t$trial_amount_a = $_REQUEST['trial_amount'];\n\t\t\t$trial_limit_a = $_REQUEST['trial_limit'];\t\t\t\t\t\t\n\t\t\tif(!empty($_REQUEST['expiration']))\n\t\t\t\t$expiration_a = $_REQUEST['expiration'];\n\t\t\t$expiration_number_a = $_REQUEST['expiration_number'];\n\t\t\t$expiration_period_a = $_REQUEST['expiration_period'];\n\t\t\t\n\t\t\t//clear the old rows\n\t\t\t$sqlQuery = \"DELETE FROM $wpdb->pmpro_discount_codes_levels WHERE code_id = '\" . $edit . \"'\";\n\t\t\t$wpdb->query($sqlQuery);\n\t\t\t\n\t\t\t//add a row for each checked level\n\t\t\tif(!empty($levels_a))\n\t\t\t{\n\t\t\t\tforeach($levels_a as $level_id)\n\t\t\t\t{\n\t\t\t\t\t//get the values ready\n\t\t\t\t\t$n = array_search($level_id, $all_levels_a); \t//this is the key location of this level's values\n\t\t\t\t\t$initial_payment = sanitize_text_field($initial_payment_a[$n]);\n\t\t\t\t\t\n\t\t\t\t\t//is this recurring?\n\t\t\t\t\tif(!empty($recurring_a))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(in_array($level_id, $recurring_a))\n\t\t\t\t\t\t\t$recurring = 1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$recurring = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\t$recurring = 0;\n\t\t\t\t\t\t\t\n\t\t\t\t\tif(!empty($recurring))\n\t\t\t\t\t{\n\t\t\t\t\t\t$billing_amount = sanitize_text_field($billing_amount_a[$n]);\n\t\t\t\t\t\t$cycle_number = intval($cycle_number_a[$n]);\n\t\t\t\t\t\t$cycle_period = sanitize_text_field($cycle_period_a[$n]);\n\t\t\t\t\t\t$billing_limit = intval($billing_limit_a[$n]);\n\t\t\t\t\t\t\n\t\t\t\t\t\t//custom trial\n\t\t\t\t\t\tif(!empty($custom_trial_a))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(in_array($level_id, $custom_trial_a))\n\t\t\t\t\t\t\t\t$custom_trial = 1;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t$custom_trial = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$custom_trial = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!empty($custom_trial))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$trial_amount = sanitize_text_field($trial_amount_a[$n]);\n\t\t\t\t\t\t\t$trial_limit = intval($trial_limit_a[$n]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$trial_amount = '';\n\t\t\t\t\t\t\t$trial_limit = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$billing_amount = '';\n\t\t\t\t\t\t$cycle_number = '';\n\t\t\t\t\t\t$cycle_period = 'Month';\n\t\t\t\t\t\t$billing_limit = '';\n\t\t\t\t\t\t$custom_trial = 0;\n\t\t\t\t\t\t$trial_amount = '';\n\t\t\t\t\t\t$trial_limit = '';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(!empty($expiration_a))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(in_array($level_id, $expiration_a))\n\t\t\t\t\t\t\t$expiration = 1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$expiration = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\t$expiration = 0;\n\t\t\t\t\t\n\t\t\t\t\tif(!empty($expiration))\n\t\t\t\t\t{\n\t\t\t\t\t\t$expiration_number = intval($expiration_number_a[$n]);\n\t\t\t\t\t\t$expiration_period = sanitize_text_field($expiration_period_a[$n]);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$expiration_number = '';\n\t\t\t\t\t\t$expiration_period = 'Month';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//okay, do the insert\n\t\t\t\t\t$sqlQuery = \"INSERT INTO $wpdb->pmpro_discount_codes_levels (code_id, level_id, initial_payment, billing_amount, cycle_number, cycle_period, billing_limit, trial_amount, trial_limit, expiration_number, expiration_period) VALUES('\" . esc_sql($edit) . \"', '\" . esc_sql($level_id) . \"', '\" . (double)esc_sql($initial_payment) . \"', '\" . (double)esc_sql($billing_amount) . \"', '\" . intval(esc_sql($cycle_number)) . \"', '\" . esc_sql($cycle_period) . \"', '\" . intval(esc_sql($billing_limit)) . \"', '\" . (double)esc_sql($trial_amount) . \"', '\" . intval(esc_sql($trial_limit)) . \"', '\" . intval(esc_sql($expiration_number)) . \"', '\" . esc_sql($expiration_period) . \"')\";\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif($wpdb->query($sqlQuery) !== false)\n\t\t\t\t\t{\n\t\t\t\t\t\t//okay\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tdo_action(\"pmpro_save_discount_code_level\", $edit, $level_id);\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\t\t\t\t\t\n\t\t\t\t\t\t$level_errors[] = sprintf(__(\"Error saving values for the %s level.\", \"pmpro\"), $wpdb->get_var(\"SELECT name FROM $wpdb->pmpro_membership_levels WHERE id = '\" . $level_id . \"' LIMIT 1\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//errors?\n\t\t\tif(!empty($level_errors))\n\t\t\t{\t\t\t\t\n\t\t\t\t$pmpro_msg = __(\"There were errors updating the level values: \", \"pmpro\") . implode(\" \", $level_errors);\n\t\t\t\t$pmpro_msgt = \"error\";\t\t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//all good. set edit = NULL so we go back to the overview page\n\t\t\t\t$edit = NULL;\n\t\t\t\t\n\t\t\t\tdo_action(\"pmpro_save_discount_code\", $saveid);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t//are we deleting?\n\tif(!empty($delete))\n\t{\n\t\t//is this a code?\n\t\t$code = $wpdb->get_var(\"SELECT code FROM $wpdb->pmpro_discount_codes WHERE id = '\" . $delete . \"' LIMIT 1\");\n\t\tif(!empty($code))\n\t\t{\n\t\t\t//action\n\t\t\tdo_action(\"pmpro_delete_discount_code\", $delete);\n\t\t\t\n\t\t\t//delete the code levels\n\t\t\t$r1 = $wpdb->query(\"DELETE FROM $wpdb->pmpro_discount_codes_levels WHERE code_id = '\" . $delete . \"'\");\n\t\t\t\n\t\t\tif($r1 !== false)\n\t\t\t{\n\t\t\t\t//delete the code\n\t\t\t\t$r2 = $wpdb->query(\"DELETE FROM $wpdb->pmpro_discount_codes WHERE id = '\" . $delete . \"' LIMIT 1\");\n\t\t\t\t\n\t\t\t\tif($r2 !== false)\n\t\t\t\t{\n\t\t\t\t\t$pmpro_msg = sprintf(__(\"Code %s deleted successfully.\", \"pmpro\"), $code);\n\t\t\t\t\t$pmpro_msgt = \"success\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$pmpro_msg = __(\"Error deleting discount code. The code was only partially deleted. Please try again.\", \"pmpro\");\n\t\t\t\t\t$pmpro_msgt = \"error\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$pmpro_msg = __(\"Error deleting code. Please try again.\", \"pmpro\");\n\t\t\t\t$pmpro_msgt = \"error\";\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$pmpro_msg = __(\"Code not found.\", \"pmpro\");\n\t\t\t$pmpro_msgt = \"error\";\n\t\t}\n\t}\n\t\n\trequire_once(dirname(__FILE__) . \"/admin_header.php\");\t\n?>\n\t\n\t<?php if($edit) { ?>\n\t\t\n\t\t<h2>\n\t\t\t<?php\n\t\t\t\tif($edit > 0)\n\t\t\t\t\techo __(\"Edit Discount Code\", \"pmpro\");\n\t\t\t\telse\n\t\t\t\t\techo __(\"Add New Discount Code\", \"pmpro\");\n\t\t\t?>\n\t\t</h2>\n\t\t\n\t\t<?php if(!empty($pmpro_msg)) { ?>\n\t\t\t<div id=\"message\" class=\"<?php if($pmpro_msgt == \"success\") echo \"updated fade\"; else echo \"error\"; ?>\"><p><?php echo $pmpro_msg?></p></div>\n\t\t<?php } ?>\n\t\t\n\t\t<div>\n\t\t\t<?php\n\t\t\t\t// get the code...\n\t\t\t\tif($edit > 0)\n\t\t\t\t{\n\t\t\t\t\t$code = $wpdb->get_row(\"SELECT *, UNIX_TIMESTAMP(starts) as starts, UNIX_TIMESTAMP(expires) as expires FROM $wpdb->pmpro_discount_codes WHERE id = '\" . $edit . \"' LIMIT 1\", OBJECT);\n\t\t\t\t\t$uses = $wpdb->get_var(\"SELECT COUNT(*) FROM $wpdb->pmpro_discount_codes_uses WHERE code_id = '\" . $code->id . \"'\");\n\t\t\t\t\t$levels = $wpdb->get_results(\"SELECT l.id, l.name, cl.initial_payment, cl.billing_amount, cl.cycle_number, cl.cycle_period, cl.billing_limit, cl.trial_amount, cl.trial_limit FROM $wpdb->pmpro_membership_levels l LEFT JOIN $wpdb->pmpro_discount_codes_levels cl ON l.id = cl.level_id WHERE cl.code_id = '\" . $code->code . \"'\");\n\t\t\t\t\t$temp_id = $code->id;\n\t\t\t\t}\n\t\t\t\telseif(!empty($copy) && $copy > 0)\t\t\n\t\t\t\t{\t\n\t\t\t\t\t$code = $wpdb->get_row(\"SELECT *, UNIX_TIMESTAMP(starts) as starts, UNIX_TIMESTAMP(expires) as expires FROM $wpdb->pmpro_discount_codes WHERE id = '\" . $copy . \"' LIMIT 1\", OBJECT);\t\t\t\t\t\n\t\t\t\t\t$temp_id = $level->id;\n\t\t\t\t\t$level->id = NULL;\n\t\t\t\t}\n\n\t\t\t\t// didn't find a discount code, let's add a new one...\n\t\t\t\tif(empty($code->id)) $edit = -1;\n\n\t\t\t\t//defaults for new codes\n\t\t\t\tif($edit == -1)\n\t\t\t\t{\n\t\t\t\t\t$code = new stdClass();\n\t\t\t\t\t$code->code = pmpro_getDiscountCode();\n\t\t\t\t}\t\t\t\t\t\t\t\t\n\t\t\t?>\n\t\t\t<form action=\"\" method=\"post\">\n\t\t\t\t<input name=\"saveid\" type=\"hidden\" value=\"<?php echo $edit?>\" />\n\t\t\t\t<table class=\"form-table\">\n                <tbody>\n                    <tr>\n                        <th scope=\"row\" valign=\"top\"><label><?php _e('ID', 'pmpro');?>:</label></th>\n                        <td class=\"pmpro_lite\"><?php if(!empty($code->id)) echo $code->id; else echo __(\"This will be generated when you save.\", \"pmpro\");?></td>\n                    </tr>\t\t\t\t\t\t\t\t                \n                    \n                    <tr>\n                        <th scope=\"row\" valign=\"top\"><label for=\"code\"><?php _e('Code', 'pmpro');?>:</label></th>\n                        <td><input name=\"code\" type=\"text\" size=\"20\" value=\"<?php echo str_replace(\"\\\"\", \"&quot;\", stripslashes($code->code))?>\" /></td>\n                    </tr>\n                    \n\t\t\t\t\t<?php\n\t\t\t\t\t\t//some vars for the dates\n\t\t\t\t\t\t$current_day = date(\"j\");\n\t\t\t\t\t\tif(!empty($code->starts))\n\t\t\t\t\t\t\t$selected_starts_day = date(\"j\", $code->starts);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$selected_starts_day = $current_day;\n\t\t\t\t\t\tif(!empty($code->expires))\n\t\t\t\t\t\t\t$selected_expires_day = date(\"j\", $code->expires);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$selected_expires_day = $current_day;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t$current_month = date(\"M\");\n\t\t\t\t\t\tif(!empty($code->starts))\n\t\t\t\t\t\t\t$selected_starts_month = date(\"m\", $code->starts);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$selected_starts_month = date(\"m\");\n\t\t\t\t\t\tif(!empty($code->expires))\n\t\t\t\t\t\t\t$selected_expires_month = date(\"m\", $code->expires);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$selected_expires_month = date(\"m\");\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t$current_year = date(\"Y\");\t\t\t\t\t\t\n\t\t\t\t\t\tif(!empty($code->starts))\n\t\t\t\t\t\t\t$selected_starts_year = date(\"Y\", $code->starts);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$selected_starts_year = $current_year;\n\t\t\t\t\t\tif(!empty($code->expires))\n\t\t\t\t\t\t\t$selected_expires_year = date(\"Y\", $code->expires);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$selected_expires_year = (int)$current_year + 1;\n\t\t\t\t\t?>\n\t\t\t\t\t\n\t\t\t\t\t<tr>\n                        <th scope=\"row\" valign=\"top\"><label for=\"starts\"><?php _e('Start Date', 'pmpro');?>:</label></th>\n                        <td>\n\t\t\t\t\t\t\t<select name=\"starts_month\">\n\t\t\t\t\t\t\t\t<?php\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tfor($i = 1; $i < 13; $i++)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<option value=\"<?php echo $i?>\" <?php if($i == $selected_starts_month) { ?>selected=\"selected\"<?php } ?>><?php echo date(\"M\", strtotime($i . \"/1/\" . $current_year, current_time(\"timestamp\")))?></option>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<input name=\"starts_day\" type=\"text\" size=\"2\" value=\"<?php echo $selected_starts_day?>\" />\n\t\t\t\t\t\t\t<input name=\"starts_year\" type=\"text\" size=\"4\" value=\"<?php echo $selected_starts_year?>\" />\n\t\t\t\t\t\t</td>\n                    </tr>\n\t\t\t\t\t\n\t\t\t\t\t<tr>\n                        <th scope=\"row\" valign=\"top\"><label for=\"expires\"><?php _e('Expiration Date', 'pmpro');?>:</label></th>\n                        <td>\n\t\t\t\t\t\t\t<select name=\"expires_month\">\n\t\t\t\t\t\t\t\t<?php\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tfor($i = 1; $i < 13; $i++)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<option value=\"<?php echo $i?>\" <?php if($i == $selected_expires_month) { ?>selected=\"selected\"<?php } ?>><?php echo date(\"M\", strtotime($i . \"/1/\" . $current_year, current_time(\"timestamp\")))?></option>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<input name=\"expires_day\" type=\"text\" size=\"2\" value=\"<?php echo $selected_expires_day?>\" />\n\t\t\t\t\t\t\t<input name=\"expires_year\" type=\"text\" size=\"4\" value=\"<?php echo $selected_expires_year?>\" />\n\t\t\t\t\t\t</td>\n                    </tr>\n\t\t\t\t\t\n\t\t\t\t\t<tr>\n                        <th scope=\"row\" valign=\"top\"><label for=\"uses\"><?php _e('Uses', 'pmpro');?>:</label></th>\n                        <td>\n\t\t\t\t\t\t\t<input name=\"uses\" type=\"text\" size=\"10\" value=\"<?php if(!empty($code->uses)) echo str_replace(\"\\\"\", \"&quot;\", stripslashes($code->uses));?>\" />\n\t\t\t\t\t\t\t<small class=\"pmpro_lite\"><?php _e('Leave blank for unlimited uses.', 'pmpro');?></small>\n\t\t\t\t\t\t</td>\n                    </tr>\n                    \t\t\t\t\t\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t\n\t\t\t<?php do_action(\"pmpro_discount_code_after_settings\"); ?>\n\t\t\t\n\t\t\t<h3><?php _e('Which Levels Will This Code Apply To?', 'pmpro'); ?></h3>\n\t\t\t\n\t\t\t<div class=\"pmpro_discount_levels\">\n\t\t\t<?php\n\t\t\t\t$levels = $wpdb->get_results(\"SELECT * FROM $wpdb->pmpro_membership_levels\");\n\t\t\t\tforeach($levels as $level)\n\t\t\t\t{\n\t\t\t\t\t//if this level is already managed for this discount code, use the code values\n\t\t\t\t\tif($edit > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$code_level = $wpdb->get_row(\"SELECT l.id, cl.*, l.name, l.description, l.allow_signups FROM $wpdb->pmpro_discount_codes_levels cl LEFT JOIN $wpdb->pmpro_membership_levels l ON cl.level_id = l.id WHERE cl.code_id = '\" . $edit . \"' AND cl.level_id = '\" . $level->id . \"' LIMIT 1\");\n\t\t\t\t\t\tif($code_level)\n\t\t\t\t\t\t{\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$level = $code_level;\n\t\t\t\t\t\t\t$level->checked = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$level_checked = false;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\t$level_checked = false;\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t?>\n\t\t\t\t<div>\n\t\t\t\t\t<input type=\"hidden\" name=\"all_levels[]\" value=\"<?php echo $level->id?>\" />\n\t\t\t\t\t<input type=\"checkbox\" id=\"levels_<?php echo $level->id;?>\" name=\"levels[]\" value=\"<?php echo $level->id?>\" <?php if(!empty($level->checked)) { ?>checked=\"checked\"<?php } ?> onclick=\"if(jQuery(this).is(':checked')) jQuery(this).next().next().show();\telse jQuery(this).next().next().hide();\" />\n\t\t\t\t\t<label for=\"levels_<?php echo $level->id;?>\"><?php echo $level->name?></label>\n\t\t\t\t\t<div class=\"pmpro_discount_levels_pricing level_<?php echo $level->id?>\" <?php if(empty($level->checked)) { ?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t\t\t<table class=\"form-table\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"initial_payment\"><?php _e('Initial Payment', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"left\")\n\t\t\t\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<input name=\"initial_payment[]\" type=\"text\" size=\"20\" value=\"<?php echo str_replace(\"\\\"\", \"&quot;\", stripslashes($level->initial_payment))?>\" /> \n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"right\")\n\t\t\t\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<small><?php _e('The initial amount collected at registration.', 'pmpro');?></small>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Recurring Subscription', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td><input class=\"recurring_checkbox\" id=\"recurring_<?php echo $level->id;?>\" name=\"recurring[]\" type=\"checkbox\" value=\"<?php echo $level->id?>\" <?php if(pmpro_isLevelRecurring($level)) { echo \"checked='checked'\"; } ?> onclick=\"if(jQuery(this).attr('checked')) {\t\t\t\t\tjQuery(this).parent().parent().siblings('.recurring_info').show(); if(!jQuery('#custom_trial_<?php echo $level->id?>').is(':checked')) jQuery(this).parent().parent().siblings('.trial_info').hide();} else\t\t\t\t\tjQuery(this).parent().parent().siblings('.recurring_info').hide();\" /> <label for=\"recurring_<?php echo $level->id;?>\"><?php _e('Check if this level has a recurring subscription payment.', 'pmpro');?></label></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<tr class=\"recurring_info\" <?php if(!pmpro_isLevelRecurring($level)) {?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_amount\"><?php _e('Billing Amount', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"left\")\n\t\t\t\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<input name=\"billing_amount[]\" type=\"text\" size=\"20\" value=\"<?php echo str_replace(\"\\\"\", \"&quot;\", stripslashes($level->billing_amount))?>\" /> \n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"right\")\n\t\t\t\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<small>per</small>\n\t\t\t\t\t\t\t\t\t<input name=\"cycle_number[]\" type=\"text\" size=\"10\" value=\"<?php echo str_replace(\"\\\"\", \"&quot;\", stripslashes($level->cycle_number))?>\" />\n\t\t\t\t\t\t\t\t\t<select name=\"cycle_period[]\" onchange=\"updateCyclePeriod();\">\n\t\t\t\t\t\t\t\t\t  <?php\n\t\t\t\t\t\t\t\t\t\t$cycles = array( __('Day(s)', 'pmpro') => 'Day', __('Week(s)', 'pmpro') => 'Week', __('Month(s)', 'pmpro') => 'Month', __('Year(s)', 'pmpro') => 'Year' );\n\t\t\t\t\t\t\t\t\t\tforeach ( $cycles as $name => $value ) {\n\t\t\t\t\t\t\t\t\t\t  echo \"<option value='$value'\";\n\t\t\t\t\t\t\t\t\t\t  if ( $level->cycle_period == $value ) echo \" selected='selected'\";\n\t\t\t\t\t\t\t\t\t\t  echo \">$name</option>\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t  ?>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<br /><small><?php _e('The amount to be billed one cycle after the initial payment.', 'pmpro');?></small>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>                                        \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<tr class=\"recurring_info\" <?php if(!pmpro_isLevelRecurring($level)) {?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_limit\"><?php _e('Billing Cycle Limit', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input name=\"billing_limit[]\" type=\"text\" size=\"20\" value=\"<?php echo $level->billing_limit?>\" />\n\t\t\t\t\t\t\t\t\t<br /><small><?php _e('The <strong>total</strong> number of recurring billing cycles for this level, including the trial period (if applicable) but not including the initial payment. Set to zero if membership is indefinite.', 'pmpro');?></small>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>            \t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\t\t\t\t\t<tr class=\"recurring_info\" <?php if (!pmpro_isLevelRecurring($level)) echo \"style='display:none;'\";?>>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Custom Trial', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td><input id=\"custom_trial_<?php echo $level->id?>\" id=\"custom_trial_<?php echo $level->id;?>\" name=\"custom_trial[]\" type=\"checkbox\" value=\"<?php echo $level->id?>\" <?php if ( pmpro_isLevelTrial($level) ) { echo \"checked='checked'\"; } ?> onclick=\"if(jQuery(this).attr('checked')) jQuery(this).parent().parent().siblings('.trial_info').show();\telse jQuery(this).parent().parent().siblings('.trial_info').hide();\" /> <label for=\"custom_trial_<?php echo $level->id;?>\"><?php _e('Check to add a custom trial period.', 'pmpro');?></label></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\n\t\t\t\t\t\t\t<tr class=\"trial_info recurring_info\" <?php if (!pmpro_isLevelTrial($level)) echo \"style='display:none;'\";?>>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"trial_amount\"><?php _e('Trial Billing Amount', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"left\")\n\t\t\t\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<input name=\"trial_amount[]\" type=\"text\" size=\"20\" value=\"<?php echo str_replace(\"\\\"\", \"&quot;\", stripslashes($level->trial_amount))?>\" />\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"right\")\n\t\t\t\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t<small><?php _e('for the first', 'pmpro');?></small>\n\t\t\t\t\t\t\t\t\t<input name=\"trial_limit[]\" type=\"text\" size=\"10\" value=\"<?php echo str_replace(\"\\\"\", \"&quot;\", stripslashes($level->trial_limit))?>\" />\n\t\t\t\t\t\t\t\t\t<small><?php _e('subscription payments', 'pmpro');?>.</small>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Membership Expiration', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td><input id=\"expiration_<?php echo $level->id;?>\" name=\"expiration[]\" type=\"checkbox\" value=\"<?php echo $level->id?>\" <?php if(pmpro_isLevelExpiring($level)) { echo \"checked='checked'\"; } ?> onclick=\"if(jQuery(this).is(':checked')) { jQuery(this).parent().parent().siblings('.expiration_info').show(); } else { jQuery(this).parent().parent().siblings('.expiration_info').hide();}\" /> <label for=\"expiration_<?php echo $level->id;?>\"><?php _e('Check this to set when membership access expires.', 'pmpro');?></label></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<tr class=\"expiration_info\" <?php if(!pmpro_isLevelExpiring($level)) {?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_amount\"><?php _e('Expires In', 'pmpro');?>:</label></th>\n\t\t\t\t\t\t\t\t<td>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<input id=\"expiration_number\" name=\"expiration_number[]\" type=\"text\" size=\"10\" value=\"<?php echo str_replace(\"\\\"\", \"&quot;\", stripslashes($level->expiration_number))?>\" />\n\t\t\t\t\t\t\t\t\t<select id=\"expiration_period\" name=\"expiration_period[]\">\n\t\t\t\t\t\t\t\t\t  <?php\n\t\t\t\t\t\t\t\t\t\t$cycles = array( __('Day(s)', 'pmpro') => 'Day', __('Week(s)', 'pmpro') => 'Week', __('Month(s)', 'pmpro') => 'Month', __('Year(s)', 'pmpro') => 'Year' );\n\t\t\t\t\t\t\t\t\t\tforeach ( $cycles as $name => $value ) {\n\t\t\t\t\t\t\t\t\t\t  echo \"<option value='$value'\";\n\t\t\t\t\t\t\t\t\t\t  if ( $level->expiration_period == $value ) echo \" selected='selected'\";\n\t\t\t\t\t\t\t\t\t\t  echo \">$name</option>\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t  ?>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<br /><small><?php _e('Set the duration of membership access. Note that the any future payments (recurring subscription, if any) will be cancelled when the membership expires.', 'pmpro');?></small>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr> \n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t\n\t\t\t\t\t<?php do_action(\"pmpro_discount_code_after_level_settings\", $edit, $level); ?>\n\t\t\t\t\t\n\t\t\t\t\t</div>\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<script>\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t</script>\n\t\t\t\t<?php\n\t\t\t\t}\n\t\t\t?>\n\t\t\t</div>\n\t\t\t\n\t\t\t<p class=\"submit topborder\">\n\t\t\t\t<input name=\"save\" type=\"submit\" class=\"button button-primary\" value=\"Save Code\" /> \t\t\t\t\t\n\t\t\t\t<input name=\"cancel\" type=\"button\" class=\"button button-secondary\" value=\"Cancel\" onclick=\"location.href='<?php echo get_admin_url(NULL, '/admin.php?page=pmpro-discountcodes')?>';\" />\n\t\t\t</p>\n\t\t\t</form>\n\t\t</div>\n\t\t\n\t<?php } else { ?>\t\n\t\n\t\t<h2>\n\t\t\t<?php _e('Memberships Discount Codes', 'pmpro');?>\n\t\t\t<a href=\"admin.php?page=pmpro-discountcodes&edit=-1\" class=\"add-new-h2\"><?php _e('Add New Discount Code', 'pmpro');?></a>\n\t\t</h2>\t\t\n\t\t\n\t\t<?php if(!empty($pmpro_msg)) { ?>\n\t\t\t<div id=\"message\" class=\"<?php if($pmpro_msgt == \"success\") echo \"updated fade\"; else echo \"error\"; ?>\"><p><?php echo $pmpro_msg?></p></div>\n\t\t<?php } ?>\n\t\t\n\t\t<form id=\"posts-filter\" method=\"get\" action=\"\">\t\t\t\n\t\t\t<p class=\"search-box\">\n\t\t\t\t<label class=\"screen-reader-text\" for=\"post-search-input\"><?php _e('Search Discount Codes', 'pmpro');?>:</label>\n\t\t\t\t<input type=\"hidden\" name=\"page\" value=\"pmpro-discountcodes\" />\n\t\t\t\t<input id=\"post-search-input\" type=\"text\" value=\"<?php if(!empty($s)) echo $s;?>\" name=\"s\" size=\"30\" />\n\t\t\t\t<input class=\"button\" type=\"submit\" value=\"<?php _e('Search', 'pmpro');?>\" id=\"search-submit \"/>\n\t\t\t</p>\t\t\n\t\t</form>\t\n\t\t\n\t\t<br class=\"clear\" />\n\t\t<?php\n\t\t\t$sqlQuery = \"SELECT *, UNIX_TIMESTAMP(starts) as starts, UNIX_TIMESTAMP(expires) as expires FROM $wpdb->pmpro_discount_codes \";\n\t\t\tif(!empty($s))\n\t\t\t\t$sqlQuery .= \"WHERE code LIKE '%$s%' \";\n\t\t\t$sqlQuery .= \"ORDER BY id ASC\";\n\t\t\t\n\t\t\t$codes = $wpdb->get_results($sqlQuery, OBJECT);\n\t\t?>\t\t\n\t\t<table class=\"widefat\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th><?php _e('ID', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Code', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Starts', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Expires', 'pmpro');?></th>        \n\t\t\t\t<th><?php _e('Uses', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Levels', 'pmpro');?></th>\n\t\t\t\t<?php do_action(\"pmpro_discountcodes_extra_cols_header\", $codes);?>\n\t\t\t\t<th></th>\t\t\n\t\t\t\t<th></th>\t\t\t\t\t\t\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<?php\n\t\t\t\tif(!$codes)\n\t\t\t\t{\n\t\t\t\t?>\n\t\t\t\t\t<tr><td colspan=\"7\" class=\"pmpro_pad20\">\t\t\t\t\t\n\t\t\t\t\t\t<p><?php _e('Discount codes allow you to offer your memberships at discounted prices to select customers.', 'pmpro');?> <a href=\"admin.php?page=pmpro-discountcodes&edit=-1\"><?php _e('Create your first discount code now', 'pmpro');?></a>.</p>\n\t\t\t\t\t</td></tr>\n\t\t\t\t<?php\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tforeach($codes as $code)\n\t\t\t\t\t{\n\t\t\t\t\t?>\n\t\t\t\t\t<tr<?php if($count++ % 2 == 1) { ?> class=\"alternate\"<?php } ?>>\n\t\t\t\t\t\t<td><?php echo $code->id?></td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<a href=\"?page=pmpro-discountcodes&edit=<?php echo $code->id?>\"><?php echo $code->code?></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php echo date(get_option('date_format'), $code->starts)?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php echo date(get_option('date_format'), $code->expires)?>\n\t\t\t\t\t\t</td>\t\t\t\t\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$uses = $wpdb->get_var(\"SELECT COUNT(*) FROM $wpdb->pmpro_discount_codes_uses WHERE code_id = '\" . $code->id . \"'\");\n\t\t\t\t\t\t\t\tif($code->uses > 0)\n\t\t\t\t\t\t\t\t\techo \"<strong>\" . (int)$uses . \"</strong>/\" . $code->uses;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\techo \"<strong>\" . (int)$uses . \"</strong>/unlimited\";\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<?php\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$sqlQuery = \"SELECT l.id, l.name FROM $wpdb->pmpro_membership_levels l LEFT JOIN $wpdb->pmpro_discount_codes_levels cl ON l.id = cl.level_id WHERE cl.code_id = '\" . $code->id . \"'\";\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$levels = $wpdb->get_results($sqlQuery);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$level_names = array();\n\t\t\t\t\t\t\t\tforeach($levels as $level)\n\t\t\t\t\t\t\t\t\t$level_names[] = \"<a target=\\\"_blank\\\" href=\\\"\" . pmpro_url(\"checkout\", \"?level=\" . $level->id . \"&discount_code=\" . $code->code) . \"\\\">\" . $level->name . \"</a>\";\n\t\t\t\t\t\t\t\tif($level_names)\n\t\t\t\t\t\t\t\t\techo implode(\", \", $level_names);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\techo \"None\";\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<?php do_action(\"pmpro_discountcodes_extra_cols_body\", $code);?>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<a href=\"?page=pmpro-discountcodes&edit=<?php echo $code->id?>\"><?php _e('edit', 'pmpro');?></a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<a href=\"javascript:askfirst('<?php printf(__('Are you sure you want to delete the %s discount code? The subscriptions for existing users will not change, but new users will not be able to use this code anymore.', 'pmpro'), $code->code);?>', '?page=pmpro-discountcodes&delete=<?php echo $code->id?>'); void(0);\"><?php _e('delete', 'pmpro');?></a>\t\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<?php\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t?>\n\t\t</tbody>\n\t\t</table>\n\t\t\n\t<?php } ?>\n\t\n<?php\n\trequire_once(dirname(__FILE__) . \"/admin_footer.php\");\t\n?>\n", "<?php\n\t//only admins can get this\n\tif(!function_exists(\"current_user_can\") || (!current_user_can(\"manage_options\") && !current_user_can(\"pmpro_membershiplevels\")))\n\t{\n\t\tdie(__(\"You do not have permissions to perform this action.\", \"pmpro\"));\n\t}\t\n\t\n\tglobal $wpdb, $msg, $msgt, $pmpro_currency_symbol;\n\n\t//some vars\n\t$gateway = pmpro_getOption(\"gateway\");\n    $pmpro_level_order = pmpro_getOption('level_order');\n\n\tglobal $pmpro_stripe_error, $pmpro_braintree_error, $pmpro_payflow_error, $pmpro_twocheckout_error, $wp_version;\n\t\n\tif(isset($_REQUEST['edit']))\n\t\t$edit = intval($_REQUEST['edit']);\n\telse\n\t\t$edit = false;\n\tif(isset($_REQUEST['copy']))\n\t\t$copy = intval($_REQUEST['copy']);\n\tif(isset($_REQUEST['s']))\n\t\t$s = sanitize_text_field($_REQUEST['s']);\n\telse\n\t\t$s = \"\";\n\t\n\tif(isset($_REQUEST['action']))\n\t\t$action = sanitize_text_field($_REQUEST['action']);\n\telse\n\t\t$action = false;\n\t\t\n\tif(isset($_REQUEST['saveandnext']))\n\t\t$saveandnext = intval($_REQUEST['saveandnext']);\n\n\tif(isset($_REQUEST['saveid']))\n\t\t$saveid = intval($_REQUEST['saveid']);\n\tif(isset($_REQUEST['deleteid']))\n\t\t$deleteid = intval($_REQUEST['deleteid']);\n\n\tif($action == \"save_membershiplevel\")\n\t{\n\t\t$ml_name = stripslashes($_REQUEST['name']);\n\t\t$ml_description = stripslashes($_REQUEST['description']);\n\t\t$ml_confirmation = stripslashes($_REQUEST['confirmation']);\n\t\t$ml_initial_payment = stripslashes($_REQUEST['initial_payment']);\n\t\tif(!empty($_REQUEST['recurring']))\n\t\t\t$ml_recurring = 1;\n\t\telse\n\t\t\t$ml_recurring = 0;\n\t\t$ml_billing_amount = stripslashes($_REQUEST['billing_amount']);\n\t\t$ml_cycle_number = stripslashes($_REQUEST['cycle_number']);\n\t\t$ml_cycle_period = stripslashes($_REQUEST['cycle_period']);\t\t\n\t\t$ml_billing_limit = stripslashes($_REQUEST['billing_limit']);\n\t\tif(!empty($_REQUEST['custom_trial']))\n\t\t\t$ml_custom_trial = 1;\n\t\telse\n\t\t\t$ml_custom_trial = 0;\n\t\t$ml_trial_amount = stripslashes($_REQUEST['trial_amount']);\n\t\t$ml_trial_limit = stripslashes($_REQUEST['trial_limit']);  \n\t\tif(!empty($_REQUEST['expiration']))\n\t\t\t$ml_expiration = 1;\n\t\telse\n\t\t\t$ml_expiration = 0;\n\t\t$ml_expiration_number = stripslashes($_REQUEST['expiration_number']);\n\t\t$ml_expiration_period = stripslashes($_REQUEST['expiration_period']);\n\t\t$ml_categories = array();\n\t\t\n\t\t//reversing disable to allow here\n\t\tif(empty($_REQUEST['disable_signups']))\n\t\t\t$ml_allow_signups = 1;\n\t\telse\n\t\t\t$ml_allow_signups = 0;\n\n\t\tforeach ( $_REQUEST as $key => $value )\n\t\t{\n\t\t\tif ( $value == 'yes' && preg_match( '/^membershipcategory_(\\d+)$/i', $key, $matches ) )\n\t\t\t{\n\t\t\t\t$ml_categories[] = $matches[1];\n\t\t\t}\n\t\t}\n\n\t\t//clearing out values if checkboxes aren't checked\n\t\tif(empty($ml_recurring))\n\t\t{\n\t\t\t$ml_billing_amount = $ml_cycle_number = $ml_cycle_period = $ml_billing_limit = $ml_trial_amount = $ml_trial_limit = 0;\n\t\t}\n\t\telseif(empty($ml_custom_trial))\n\t\t{\n\t\t\t$ml_trial_amount = $ml_trial_limit = 0;\n\t\t}\n\t\tif(empty($ml_expiration))\n\t\t{\n\t\t\t$ml_expiration_number = $ml_expiration_period = 0;\n\t\t}\n\n\t\tif($saveid > 0)\n\t\t{\n\t\t\t$sqlQuery = \" UPDATE {$wpdb->pmpro_membership_levels}\n\t\t\t\t\t\tSET name = '\" . esc_sql($ml_name) . \"',\n\t\t\t\t\t\t  description = '\" . esc_sql($ml_description) . \"',\n\t\t\t\t\t\t  confirmation = '\" . esc_sql($ml_confirmation) . \"',\n\t\t\t\t\t\t  initial_payment = '\" . esc_sql($ml_initial_payment) . \"',\n\t\t\t\t\t\t  billing_amount = '\" . esc_sql($ml_billing_amount) . \"',\n\t\t\t\t\t\t  cycle_number = '\" . esc_sql($ml_cycle_number) . \"',\n\t\t\t\t\t\t  cycle_period = '\" . esc_sql($ml_cycle_period) . \"',\n\t\t\t\t\t\t  billing_limit = '\" . esc_sql($ml_billing_limit) . \"',\n\t\t\t\t\t\t  trial_amount = '\" . esc_sql($ml_trial_amount) . \"',\n\t\t\t\t\t\t  trial_limit = '\" . esc_sql($ml_trial_limit) . \"',                    \n\t\t\t\t\t\t  expiration_number = '\" . esc_sql($ml_expiration_number) . \"',\n\t\t\t\t\t\t  expiration_period = '\" . esc_sql($ml_expiration_period) . \"',\n\t\t\t\t\t\t  allow_signups = '\" . esc_sql($ml_allow_signups) . \"'\n\t\t\t\t\t\tWHERE id = '$saveid' LIMIT 1;\";\t \n\t\t\t$wpdb->query($sqlQuery);\n\t\t\t\n\t\t\tpmpro_updateMembershipCategories( $saveid, $ml_categories );\n\t\t\tif(!mysql_errno())\n\t\t\t{\n\t\t\t\t$edit = false;\n\t\t\t\t$msg = 2;\n\t\t\t\t$msgt = __(\"Membership level updated successfully.\", \"pmpro\");\n\t\t\t}\n\t\t\telse\n\t\t\t{     \n\t\t\t\t$msg = -2;\n\t\t\t\t$msg = true;\n\t\t\t\t$msgt = __(\"Error updating membership level.\", \"pmpro\");\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$sqlQuery = \" INSERT INTO {$wpdb->pmpro_membership_levels}\n\t\t\t\t\t\t( name, description, confirmation, initial_payment, billing_amount, cycle_number, cycle_period, billing_limit, trial_amount, trial_limit, expiration_number, expiration_period, allow_signups)\n\t\t\t\t\t\tVALUES\n\t\t\t\t\t\t( '\" . esc_sql($ml_name) . \"', '\" . esc_sql($ml_description) . \"', '\" . esc_sql($ml_confirmation) . \"', '\" . esc_sql($ml_initial_payment) . \"', '\" . esc_sql($ml_billing_amount) . \"', '\" . esc_sql($ml_cycle_number) . \"', '\" . esc_sql($ml_cycle_period) . \"', '\" . esc_sql($ml_billing_limit) . \"', '\" . esc_sql($ml_trial_amount) . \"', '\" . esc_sql($ml_trial_limit) . \"', '\" . esc_sql($ml_expiration_number) . \"', '\" . esc_sql($ml_expiration_period) . \"', '\" . esc_sql($ml_allow_signups) . \"' )\";\n\t\t\t$wpdb->query($sqlQuery);\n\t\t\tif(!mysql_errno())\n\t\t\t{\n\t\t\t\t$saveid = $wpdb->insert_id;\n\t\t\t\tpmpro_updateMembershipCategories( $saveid, $ml_categories );\n\t\t\t\t\n\t\t\t\t$edit = false;\n\t\t\t\t$msg = 1;\n\t\t\t\t$msgt = __(\"Membership level added successfully.\", \"pmpro\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$msg = -1;\t\t\t\t\n\t\t\t\t$msgt = __(\"Error adding membership level.\", \"pmpro\");\n\t\t\t}\n\t\t}\n\t\t\n\t\tdo_action(\"pmpro_save_membership_level\", $saveid);\n\t}\t\n\telseif($action == \"delete_membership_level\")\n\t{\n\t\tglobal $wpdb;\n\n\t\t$ml_id = intval($_REQUEST['deleteid']);\n\t  \n\t\tif($ml_id > 0)\n\t\t{\t  \n\t\t\tdo_action(\"pmpro_delete_membership_level\", $ml_id);\n\t\t\t\n\t\t\t//remove any categories from the ml\n\t\t\t$sqlQuery = \"DELETE FROM $wpdb->pmpro_memberships_categories WHERE membership_id = '$ml_id'\";\t  \t\t\t\n\t\t\t$r1 = $wpdb->query($sqlQuery);\n\t\t\t\t\t\t\t\n\t\t\t//cancel any subscriptions to the ml\n\t\t\t$r2 = true;\n\t\t\t$user_ids = $wpdb->get_col(\"SELECT user_id FROM $wpdb->pmpro_memberships_users WHERE membership_id = '$ml_id' AND status = 'active'\");\t\t\t\n\t\t\tforeach($user_ids as $user_id)\n\t\t\t{\n\t\t\t\t//change there membership level to none. that will handle the cancel\n\t\t\t\tif(pmpro_changeMembershipLevel(0, $user_id))\n\t\t\t\t{\n\t\t\t\t\t//okay\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//couldn't delete the subscription\n\t\t\t\t\t//we should probably notify the admin\t\n\t\t\t\t\t$pmproemail = new PMProEmail();\t\t\t\n\t\t\t\t\t$pmproemail->data = array(\"body\"=>\"<p>\" . sprintf(__(\"There was an error canceling the subscription for user with ID=%d. You will want to check your payment gateway to see if their subscription is still active.\", \"pmpro\"), $user_id) . \"</p>\");\n\t\t\t\t\t$last_order = $wpdb->get_row(\"SELECT * FROM $wpdb->pmpro_membership_orders WHERE user_id = '\" . $user_id . \"' ORDER BY timestamp DESC LIMIT 1\");\n\t\t\t\t\tif($last_order)\n\t\t\t\t\t\t$pmproemail->data[\"body\"] .= \"<p>\" . __(\"Last Invoice\", \"pmpro\") . \":<br />\" . nl2br(var_export($last_order, true)) . \"</p>\";\n\t\t\t\t\t$pmproemail->sendEmail(get_bloginfo(\"admin_email\"));\t\n\n\t\t\t\t\t$r2 = false;\n\t\t\t\t}\t\n\t\t\t}\t\t\t\t\t\n\t\t\t\n\t\t\t//delete the ml\n\t\t\t$sqlQuery = \"DELETE FROM $wpdb->pmpro_membership_levels WHERE id = '$ml_id' LIMIT 1\";\t  \t\t\t\n\t\t\t$r3 = $wpdb->query($sqlQuery);\n\t\t\t\t\t\n\t\t\tif($r1 !== FALSE && $r2 !== FALSE && $r3 !== FALSE)\n\t\t\t{\n\t\t\t\t$msg = 3;\n\t\t\t\t$msgt = __(\"Membership level deleted successfully.\", \"pmpro\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$msg = -3;\n\t\t\t\t$msgt = __(\"Error deleting membership level.\", \"pmpro\");\t\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$msg = -3;\n\t\t\t$msgt = __(\"Error deleting membership level.\", \"pmpro\");\n\t\t}\n\t}  \n\t\t\n\trequire_once(dirname(__FILE__) . \"/admin_header.php\");\t\t\n?>\n\n<?php\t\t\n\tif($edit)\n\t{\t\t\t\n\t?>\n\t\t\n\t<h2>\n\t\t<?php\n\t\t\tif($edit > 0)\n\t\t\t\techo __(\"Edit Membership Level\", \"pmpro\");\n\t\t\telse\n\t\t\t\techo __(\"Add New Membership Level\", \"pmpro\");\n\t\t?>\n\t</h2>\n\t\t\n\t<div>\n\t\t<?php\n\t\t\t// get the level...\n\t\t\tif(!empty($edit) && $edit > 0)\n\t\t\t{\n\t\t\t\t$level = $wpdb->get_row(\"SELECT * FROM $wpdb->pmpro_membership_levels WHERE id = '$edit' LIMIT 1\", OBJECT);\n\t\t\t\t$temp_id = $level->id;\n\t\t\t}\n\t\t\telseif(!empty($copy) && $copy > 0)\t\t\n\t\t\t{\t\n\t\t\t\t$level = $wpdb->get_row(\"SELECT * FROM $wpdb->pmpro_membership_levels WHERE id = '$copy' LIMIT 1\", OBJECT);\n\t\t\t\t$temp_id = $level->id;\n\t\t\t\t$level->id = NULL;\n\t\t\t}\n\t\t\telse\n\n\t\t\t// didn't find a membership level, let's add a new one...\n\t\t\tif(empty($level))\n\t\t\t{\n\t\t\t\t$level = new stdClass();\n\t\t\t\t$level->id = NULL;\n\t\t\t\t$level->name = NULL;\n\t\t\t\t$level->description = NULL;\n\t\t\t\t$level->confirmation = NULL;\n\t\t\t\t$level->billing_amount = NULL;\n\t\t\t\t$level->trial_amount = NULL;\n\t\t\t\t$level->initial_payment = NULL;\n\t\t\t\t$level->billing_limit = NULL;\n\t\t\t\t$level->trial_limit = NULL;\n\t\t\t\t$level->expiration_number = NULL;\n\t\t\t\t$level->expiration_period = NULL;\n\t\t\t\t$edit = -1;\n\t\t\t}\t\n\n\t\t\t//defaults for new levels\n\t\t\tif(empty($copy) && $edit == -1)\n\t\t\t{\t\t\t\n\t\t\t\t$level->cycle_number = 1;\n\t\t\t\t$level->cycle_period = \"Month\";\n\t\t\t}\n\t\t\t\n\t\t\t// grab the categories for the given level...\n\t\t\tif(!empty($temp_id))\n\t\t\t\t$level->categories = $wpdb->get_col(\"SELECT c.category_id\n\t\t\t\t\t\t\t\t\t\t\t\tFROM $wpdb->pmpro_memberships_categories c\n\t\t\t\t\t\t\t\t\t\t\t\tWHERE c.membership_id = '\" . $temp_id . \"'\");       \t\t\n\t\t\tif(empty($level->categories))\n\t\t\t\t$level->categories = array();\t\n\t\t\t\n\t\t?>\n\t\t<form action=\"\" method=\"post\" enctype=\"multipart/form-data\">\n\t\t\t<input name=\"saveid\" type=\"hidden\" value=\"<?php echo esc_attr($edit); ?>\" />\n\t\t\t<input type=\"hidden\" name=\"action\" value=\"save_membershiplevel\" />\n\t\t\t<table class=\"form-table\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('ID', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php echo $level->id?>\t\t\t\t\t\t\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\t\t\t\t\t\t\t\t                \n\t\t\t\t\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"name\"><?php _e('Name', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td><input name=\"name\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($level->name);?>\" /></td>\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"description\"><?php _e('Description', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<div id=\"poststuff\" class=\"pmpro_description\">\t\t\t\t\t\t\n\t\t\t\t\t\t<?php \t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(version_compare($wp_version, \"3.3\") >= 0)\n\t\t\t\t\t\t\t\twp_editor($level->description, \"description\", array(\"textarea_rows\"=>5)); \n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<textarea rows=\"10\" cols=\"80\" name=\"description\" id=\"description\"><?php echo esc_textarea($level->description);?></textarea>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\t\n\t\t\t\t\t\t</div>    \n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"confirmation\"><?php _e('Confirmation Message', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<div class=\"pmpro_confirmation\">\t\t\t\t\t\n\t\t\t\t\t\t<?php \n\t\t\t\t\t\t\tif(version_compare($wp_version, \"3.3\") >= 0)\n\t\t\t\t\t\t\t\twp_editor($level->confirmation, \"confirmation\", array(\"textarea_rows\"=>5)); \n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<textarea rows=\"10\" cols=\"80\" name=\"confirmation\" id=\"confirmation\"><?php echo esc_textarea($level->confirmation);?></textarea>\t\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\t\n\t\t\t\t\t\t</div>    \n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t\n\t\t<h3 class=\"topborder\"><?php _e('Billing Details', 'pmpro');?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"initial_payment\"><?php _e('Initial Payment', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"left\")\n\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<input name=\"initial_payment\" type=\"text\" size=\"20\" value=\"<?php echo esc_attr($level->initial_payment);?>\" /> \n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"right\")\n\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<small><?php _e('The initial amount collected at registration.', 'pmpro');?></small></td>\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Recurring Subscription', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td><input id=\"recurring\" name=\"recurring\" type=\"checkbox\" value=\"yes\" <?php if(pmpro_isLevelRecurring($level)) { echo \"checked='checked'\"; } ?> onclick=\"if(jQuery('#recurring').is(':checked')) { jQuery('.recurring_info').show(); if(jQuery('#custom_trial').is(':checked')) {jQuery('.trial_info').show();} else {jQuery('.trial_info').hide();} } else { jQuery('.recurring_info').hide();}\" /> <label for=\"recurring\"><?php _e('Check if this level has a recurring subscription payment.', 'pmpro');?></label></td>\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t<tr class=\"recurring_info\" <?php if(!pmpro_isLevelRecurring($level)) {?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_amount\"><?php _e('Billing Amount', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"left\")\n\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<input name=\"billing_amount\" type=\"text\" size=\"20\" value=\"<?php echo esc_attr($level->billing_amount);?>\" /> \n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"right\")\n\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<small><?php _e('per', 'pmpro');?></small>\n\t\t\t\t\t\t<input id=\"cycle_number\" name=\"cycle_number\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($level->cycle_number);?>\" />\n\t\t\t\t\t\t<select id=\"cycle_period\" name=\"cycle_period\">\n\t\t\t\t\t\t  <?php\n\t\t\t\t\t\t\t$cycles = array( __('Day(s)', 'pmpro') => 'Day', __('Week(s)', 'pmpro') => 'Week', __('Month(s)', 'pmpro') => 'Month', __('Year(s)', 'pmpro') => 'Year' );\n\t\t\t\t\t\t\tforeach ( $cycles as $name => $value ) {\n\t\t\t\t\t\t\t  echo \"<option value='$value'\";\n\t\t\t\t\t\t\t  if ( $level->cycle_period == $value ) echo \" selected='selected'\";\n\t\t\t\t\t\t\t  echo \">$name</option>\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  ?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<br /><small>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<?php _e('The amount to be billed one cycle after the initial payment.', 'pmpro');?>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<?php if($gateway == \"stripe\") { ?>\n\t\t\t\t\t\t\t\t<br /><strong <?php if(!empty($pmpro_stripe_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('Stripe integration currently only supports billing periods of \"Week\", \"Month\" or \"Year\".', 'pmpro');?>\n\t\t\t\t\t\t\t<?php } elseif($gateway == \"braintree\") { ?>\n\t\t\t\t\t\t\t\t<br /><strong <?php if(!empty($pmpro_braintree_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('Braintree integration currently only supports billing periods of \"Month\" or \"Year\".', 'pmpro');?>\t\t\t\t\t\t\n\t\t\t\t\t\t\t<?php } elseif($gateway == \"payflowpro\") { ?>\n\t\t\t\t\t\t\t\t<br /><strong <?php if(!empty($pmpro_payflow_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('Payflow integration currently only supports billing frequencies of 1 and billing periods of \"Week\", \"Month\" or \"Year\".', 'pmpro');?>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</small>\t\n\t\t\t\t\t\t<?php if($gateway == \"braintree\" && $edit < 0) { ?>\n\t\t\t\t\t\t\t<p class=\"pmpro_message\"><strong><?php _e('Note', 'pmpro');?>:</strong> <?php _e('After saving this level, make note of the ID and create a \"Plan\" in your Braintree dashboard with the same settings and the \"Plan ID\" set to <em>pmpro_#</em>, where # is the level ID.', 'pmpro');?></p>\n\t\t\t\t\t\t<?php } elseif($gateway == \"braintree\") { ?>\n\t\t\t\t\t\t\t<p class=\"pmpro_message\"><strong><?php _e('Note', 'pmpro');?>:</strong> <?php _e('You will need to create a \"Plan\" in your Braintree dashboard with the same settings and the \"Plan ID\" set to', 'pmpro');?> <em>pmpro_<?php echo $level->id;?></em>.</p>\n\t\t\t\t\t\t<?php } ?>\t\t\t\t\t\t\n\t\t\t\t\t</td>\n\t\t\t\t</tr>                                        \n\t\t\t\t\n\t\t\t\t<tr class=\"recurring_info\" <?php if(!pmpro_isLevelRecurring($level)) {?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_limit\"><?php _e('Billing Cycle Limit', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input name=\"billing_limit\" type=\"text\" size=\"20\" value=\"<?php echo $level->billing_limit?>\" />\n\t\t\t\t\t\t<br /><small>\n\t\t\t\t\t\t\t<?php _e('The <strong>total</strong> number of recurring billing cycles for this level, including the trial period (if applicable) but not including the initial payment. Set to zero if membership is indefinite.', 'pmpro');?>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<?php if($gateway == \"stripe\") { ?>\n\t\t\t\t\t\t\t\t<br /><strong <?php if(!empty($pmpro_stripe_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('Stripe integration currently does not support billing limits. You can still set an expiration date below.', 'pmpro');?></strong>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>            \t\t\t\t\t\t\t\t\n\n\t\t\t\t<tr class=\"recurring_info\" <?php if (!pmpro_isLevelRecurring($level)) echo \"style='display:none;'\";?>>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Custom Trial', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input id=\"custom_trial\" name=\"custom_trial\" type=\"checkbox\" value=\"yes\" <?php if ( pmpro_isLevelTrial($level) ) { echo \"checked='checked'\"; } ?> onclick=\"jQuery('.trial_info').toggle();\" /> <label for=\"custom_trial\"><?php _e('Check to add a custom trial period.', 'pmpro');?></label>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t<?php if($gateway == \"twocheckout\") { ?>\n\t\t\t\t\t\t\t<br /><small><strong <?php if(!empty($pmpro_twocheckout_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('2Checkout integration does not support custom trials. You can do one period trials by setting an initial payment different from the billing amount.', 'pmpro');?></strong></small>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr class=\"trial_info recurring_info\" <?php if (!pmpro_isLevelTrial($level)) echo \"style='display:none;'\";?>>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"trial_amount\"><?php _e('Trial Billing Amount', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"left\")\n\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<input name=\"trial_amount\" type=\"text\" size=\"20\" value=\"<?php echo esc_attr($level->trial_amount);?>\" />\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif(pmpro_getCurrencyPosition() == \"right\")\n\t\t\t\t\t\t\techo $pmpro_currency_symbol;\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<small><?php _e('for the first', 'pmpro');?></small>\n\t\t\t\t\t\t<input name=\"trial_limit\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($level->trial_limit);?>\" />\n\t\t\t\t\t\t<small><?php _e('subscription payments', 'pmpro');?>.</small>\t\n\t\t\t\t\t\t<?php if($gateway == \"stripe\") { ?>\n\t\t\t\t\t\t\t<br /><small>\n\t\t\t\t\t\t\t<strong <?php if(!empty($pmpro_stripe_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('Stripe integration currently does not support trial amounts greater than $0.', 'pmpro');?></strong>\n\t\t\t\t\t\t\t</small>\t\t\t\t\t\t\t\n\t\t\t\t\t\t<?php } elseif($gateway == \"braintree\") { ?>\n\t\t\t\t\t\t\t<br /><small>\n\t\t\t\t\t\t\t<strong <?php if(!empty($pmpro_braintree_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('Braintree integration currently does not support trial amounts greater than $0.', 'pmpro');?></strong>\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t<?php } elseif($gateway == \"payflowpro\") { ?>\n\t\t\t\t\t\t\t<br /><small>\n\t\t\t\t\t\t\t<strong <?php if(!empty($pmpro_payflow_error)) { ?>class=\"pmpro_red\"<?php } ?>><?php _e('Payflow integration currently does not support trial amounts greater than $0.', 'pmpro');?></strong>\n\t\t\t\t\t\t\t</small>\t\t\t\t\t\t\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t \n\t\t\t</tbody>\n\t\t</table>\n\t\t\t\t\n\t\t<h3 class=\"topborder\"><?php _e('Other Settings', 'pmpro');?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Disable New Signups', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td><input id=\"disable_signups\" name=\"disable_signups\" type=\"checkbox\" value=\"yes\" <?php if($level->id && !$level->allow_signups) { ?>checked=\"checked\"<?php } ?> /> <label for=\"disable_signups\"><?php _e('Check to hide this level from the membership levels page and disable registration.', 'pmpro');?></label></td>\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Membership Expiration', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td><input id=\"expiration\" name=\"expiration\" type=\"checkbox\" value=\"yes\" <?php if(pmpro_isLevelExpiring($level)) { echo \"checked='checked'\"; } ?> onclick=\"if(jQuery('#expiration').is(':checked')) { jQuery('.expiration_info').show(); } else { jQuery('.expiration_info').hide();}\" /> <label for=\"expiration\"><?php _e('Check this to set when membership access expires.', 'pmpro');?></a></td>\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t<tr class=\"expiration_info\" <?php if(!pmpro_isLevelExpiring($level)) {?>style=\"display: none;\"<?php } ?>>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_amount\"><?php _e('Expires In', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\t\t\t\t\t\t\t\n\t\t\t\t\t\t<input id=\"expiration_number\" name=\"expiration_number\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($level->expiration_number);?>\" />\n\t\t\t\t\t\t<select id=\"expiration_period\" name=\"expiration_period\">\n\t\t\t\t\t\t  <?php\n\t\t\t\t\t\t\t$cycles = array( __('Day(s)', 'pmpro') => 'Day', __('Week(s)', 'pmpro') => 'Week', __('Month(s)', 'pmpro') => 'Month', __('Year(s)', 'pmpro') => 'Year' );\n\t\t\t\t\t\t\tforeach ( $cycles as $name => $value ) {\n\t\t\t\t\t\t\t  echo \"<option value='$value'\";\n\t\t\t\t\t\t\t  if ( $level->expiration_period == $value ) echo \" selected='selected'\";\n\t\t\t\t\t\t\t  echo \">$name</option>\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  ?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<br /><small><?php _e('Set the duration of membership access. Note that the any future payments (recurring subscription, if any) will be cancelled when the membership expires.', 'pmpro');?></small>\t\t\t\t\t\t\t\n\t\t\t\t\t</td>\n\t\t\t\t</tr> \t\t\t\t\t\t\t\t\n\t\t\t</tbody>\n\t\t</table>\n\t\t\n\t\t<?php do_action(\"pmpro_membership_level_after_other_settings\"); ?>\t\t\t\t\n\t\t\n\t\t<h3 class=\"topborder\"><?php _e('Content Settings', 'pmpro');?></h3>\n\t\t<table class=\"form-table\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label><?php _e('Categories', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t$categories = get_categories( array( 'hide_empty' => 0 ) );\n\t\t\t\t\t\techo \"<ul>\";\n\t\t\t\t\t\tforeach ( $categories as $cat )\n\t\t\t\t\t\t{                               \t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$checked = in_array( $cat->term_id, $level->categories ) ? \"checked='checked'\" : '';\n\t\t\t\t\t\t\techo \"<li><input id='membershipcategory_{$cat->term_id}' name='membershipcategory_{$cat->term_id}' type='checkbox' value='yes' $checked /> <label for='membershipcategory_{$cat->term_id}'>{$cat->name}</label></li>\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\techo \"</ul>\";\n\t\t\t\t\t\t?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\t\t\t\t\n\t\t<p class=\"submit topborder\">\n\t\t\t<input name=\"save\" type=\"submit\" class=\"button-primary\" value=\"<?php _e('Save Level', 'pmpro'); ?>\" /> \t\t\t\t\t\n\t\t\t<input name=\"cancel\" type=\"button\" value=\"<?php _e('Cancel', 'pmpro'); ?>\" onclick=\"location.href='<?php echo get_admin_url(NULL, '/admin.php?page=pmpro-membershiplevels')?>';\" /> \t\t\t\t\t\n\t\t</p>\n\t</form>\n\t</div>\n\t\t\n\t<?php\n\t}\t\n\telse\n\t{\n\t?>\n        <script>\n            jQuery(document).ready(function($) {\n\n                // Return a helper with preserved width of cells\n                // from http://www.foliotek.com/devblog/make-table-rows-sortable-using-jquery-ui-sortable/\n                var fixHelper = function(e, ui) {\n                    ui.children().each(function() {\n                        $(this).width($(this).width());\n                    });\n                    return ui;\n                };\n\n                $(\"table.membership-levels tbody\").sortable({\n                    helper: fixHelper,\n                    placeholder: 'testclass',\n                    forcePlaceholderSize: true,\n                    update: update_level_order\n                });\n\n                function update_level_order(event, ui) {\n                    level_order = [];\n                    $(\"table.membership-levels tbody tr\").each(function() {\n                        $(this).removeClass('alternate');\n                        level_order.push(parseInt( $(\"td:first\", this).text()));\n                    });\n\n                    //update styles\n                    $(\"table.membership-levels tbody tr:odd\").each(function() {\n                        $(this).addClass('alternate');\n                    });\n\n                    data = {\n                        action: 'pmpro_update_level_order',\n                        level_order: level_order\n                    };\n\n                    $.post(ajaxurl, data, function(response) {\n                    });\n                }\n            });\n        </script>\n\t\t\t\t\n\t<h2 class=\"alignleft\"><?php _e('Membership Levels', 'pmpro');?> <a href=\"admin.php?page=pmpro-membershiplevels&edit=-1\" class=\"add-new-h2\"><?php _e('Add New Level', 'pmpro');?></a></h2>\n\t<form id=\"posts-filter\" method=\"get\" action=\"\">\t\t\t\n\t\t<p class=\"search-box\">\n\t\t\t<label class=\"screen-reader-text\" for=\"post-search-input\"><?php _e('Search Levels', 'pmpro');?>:</label>\n\t\t\t<input type=\"hidden\" name=\"page\" value=\"pmpro-membershiplevels\" />\n\t\t\t<input id=\"post-search-input\" type=\"text\" value=\"<?php echo esc_attr($s); ?>\" name=\"s\" size=\"30\" />\n\t\t\t<input class=\"button\" type=\"submit\" value=\"<?php _e('Search Levels', 'pmpro');?>\" id=\"search-submit\" />\n\t\t</p>\n\t</form>\t\n\t<br class=\"clear\" />\n    <p><?php _e('Drag and drop membership levels to reorder them on the Levels page.', 'pmpro'); ?></p>\n    <table class=\"widefat membership-levels\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th><?php _e('ID', 'pmpro');?></th>\n\t\t\t<th><?php _e('Name', 'pmpro');?></th>\n\t\t\t<th><?php _e('Billing Details', 'pmpro');?></th>\n\t\t\t<th><?php _e('Expiration', 'pmpro');?></th>\n\t\t\t<th><?php _e('Allow Signups', 'pmpro');?></th>\n\t\t\t<th></th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<?php\n\t\t\t$sqlQuery = \"SELECT * FROM $wpdb->pmpro_membership_levels \";\n\t\t\tif($s)\n\t\t\t\t$sqlQuery .= \"WHERE name LIKE '%$s%' \";\n\t\t\t$sqlQuery .= \"ORDER BY id ASC\";\n\t\t\t\n\t\t\t$levels = $wpdb->get_results($sqlQuery, OBJECT);\t\t\t\t\t\t\n\t\t\t\n            if(!empty($pmpro_level_order)) {\n                //reorder levels\n                $order = explode(',', $pmpro_level_order);\n\t\t\t\t\n\t\t\t\t//put level ids in their own array\n\t\t\t\t$level_ids = array();\n\t\t\t\tforeach($levels as $level)\n\t\t\t\t\t$level_ids[] = $level->id;\n\t\t\t\t\n\t\t\t\t//remove levels from order if they are gone\n\t\t\t\tforeach($order as $key => $level_id)\n\t\t\t\t\tif(!in_array($level_id, $level_ids))\n\t\t\t\t\t\tunset($order[$key]);\n\t\t\t\t\t\t\n\t\t\t\t//add levels to the end if they aren't in the order array\n\t\t\t\tforeach($level_ids as $level_id)\n\t\t\t\t\tif(!in_array($level_id, $order))\n\t\t\t\t\t\t$order[] = $level_id;\n\t\t\t\t\n\t\t\t\t//remove dupes\n\t\t\t\t$order = array_unique($order);\n\t\t\t\t\n\t\t\t\t//save the level order\n\t\t\t\tpmpro_setOption('level_order', implode(',', $order));\n\n\t\t\t\t//reorder levels here\n                $reordered_levels = array();\n                foreach ($order as $level_id) {\n                    foreach ($levels as $level) {\n                        if ($level_id == $level->id)\n                            $reordered_levels[] = $level;\n                    }\n                }\t\t\t\t\t\t\t\t\n            }\n\t\t\telse\n\t\t\t\t$reordered_levels = $levels;\n\n\t\t\t$count = 0;\n\t\t\tforeach($reordered_levels as $level)\n\t\t\t{\n\t\t?>\n\t\t<tr class=\"<?php if($count++ % 2 == 1) { ?>alternate<?php } ?> <?php if(!$level->allow_signups) { ?>pmpro_gray<?php } ?> <?php if(!pmpro_checkLevelForStripeCompatibility($level) || !pmpro_checkLevelForBraintreeCompatibility($level) || !pmpro_checkLevelForPayflowCompatibility($level) || !pmpro_checkLevelForTwoCheckoutCompatibility($level)) { ?>pmpro_error<?php } ?>\">\t\t\t\n\t\t\t<td><?php echo $level->id?></td>\n\t\t\t<td class=\"level_name\"><a href=\"admin.php?page=pmpro-membershiplevels&edit=<?php echo $level->id?>\"><?php echo $level->name?></a></td>\n\t\t\t<td>\n\t\t\t\t<?php if(pmpro_isLevelFree($level)) { ?>\n\t\t\t\t\t<?php _e('FREE', 'pmpro');?>\n\t\t\t\t<?php } else { ?>\n\t\t\t\t\t<?php echo str_replace( 'The price for membership is', '', pmpro_getLevelCost($level)); ?>\n\t\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<?php if(!pmpro_isLevelExpiring($level)) { ?>\n\t\t\t\t\t--\n\t\t\t\t<?php } else { ?>\t\t\n\t\t\t\t\t<?php _e('After', 'pmpro');?> <?php echo $level->expiration_number?> <?php echo sornot($level->expiration_period,$level->expiration_number)?>\n\t\t\t\t<?php } ?>\n\t\t\t</td>\n\t\t\t<td><?php if($level->allow_signups) { ?><a href=\"<?php echo pmpro_url(\"checkout\", \"?level=\" . $level->id);?>\"><?php _e('Yes', 'pmpro');?></a><?php } else { ?><?php _e('No', 'pmpro');?><?php } ?></td>\n\n\t\t\t<td><a title=\"<?php _e('edit','pmpro'); ?>\" href=\"admin.php?page=pmpro-membershiplevels&edit=<?php echo $level->id?>\" class=\"button-primary\"><?php _e('edit','pmpro'); ?></a>&nbsp;<a title=\"<?php _e('copy','pmpro'); ?>\" href=\"admin.php?page=pmpro-membershiplevels&copy=<?php echo $level->id?>&edit=-1\" class=\"button-secondary\"><?php _e('copy','pmpro'); ?></a>&nbsp;<a title=\"<?php _e('delete','pmpro'); ?>\" href=\"javascript: askfirst('<?php printf(__(\"Are you sure you want to delete membership level %s? All subscriptions will be cancelled.\", \"pmpro\"), $level->name);?>','admin.php?page=pmpro-membershiplevels&action=delete_membership_level&deleteid=<?php echo $level->id?>'); void(0);\" class=\"button-secondary\"><?php _e('delete','pmpro'); ?></a></td>\n\t\t</tr>\n\t\t<?php\n\t\t\t}\n\t\t?>\n\t</tbody>\n\t</table>\t\n\t<?php\n\t}\n\t?>\t\t\n\t\n<?php\n\trequire_once(dirname(__FILE__) . \"/admin_footer.php\");\t\n?>", "<?php\n\t//only admins can get this\n\tif(!function_exists(\"current_user_can\") || (!current_user_can(\"manage_options\") && !current_user_can(\"pmpro_memberslistcsv\")))\n\t{\n\t\tdie(__(\"You do not have permissions to perform this action.\", \"pmpro\"));\n\t}\n\n\tglobal $wpdb;\n\n\t//get users\n\tif(isset($_REQUEST['s']))\n\t\t$s = sanitize_text_field($_REQUEST['s']);\n\telse\n\t\t$s = \"\";\n\n\tif(isset($_REQUEST['l']))\n\t\t$l = intval($_REQUEST['l']);\n\telse\n\t\t$l = false;\n\n\t//some vars for the search\n\tif(!empty($_REQUEST['pn']))\n\t\t$pn = intval($_REQUEST['pn']);\n\telse\n\t\t$pn = 1;\n\n\tif(!empty($_REQUEST['limit']))\n\t\t$limit = intval($_REQUEST['limit']);\n\telse\n\t\t$limit = false;\n\n\tif($limit)\n\t{\n\t\t$end = $pn * $limit;\n\t\t$start = $end - $limit;\n\t}\n\telse\n\t{\n\t\t$end = NULL;\n\t\t$start = NULL;\n\t}\n\n    if($s)\n    {\n        $sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS u.ID, u.user_login, u.user_email, UNIX_TIMESTAMP(u.user_registered) as joindate, mu.membership_id, mu.initial_payment, mu.billing_amount, mu.cycle_period, mu.cycle_number, mu.billing_limit, mu.trial_amount, mu.trial_limit, UNIX_TIMESTAMP(mu.startdate) as startdate, UNIX_TIMESTAMP(mu.enddate) as enddate, m.name as membership FROM $wpdb->users u LEFT JOIN $wpdb->usermeta um ON u.ID = um.user_id LEFT JOIN $wpdb->pmpro_memberships_users mu ON u.ID = mu.user_id LEFT JOIN $wpdb->pmpro_membership_levels m ON mu.membership_id = m.id \";\n\n        if($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n            $sqlQuery .= \" LEFT JOIN $wpdb->pmpro_memberships_users mu2 ON u.ID = mu2.user_id AND mu2.status = 'active' \";\n\n        $sqlQuery .= \" WHERE mu.membership_id > 0 AND (u.user_login LIKE '%\" . esc_sql($s) . \"%' OR u.user_email LIKE '%\" . esc_sql($s) . \"%' OR um.meta_value LIKE '%\" . esc_sql($s) . \"%') \";\n\n        if($l == \"oldmembers\")\n            $sqlQuery .= \" AND mu.status <> 'active' AND mu2.status IS NULL \";\n        elseif($l == \"expired\")\n            $sqlQuery .= \" AND mu.status = 'expired' AND mu2.status IS NULL \";\n        elseif($l == \"cancelled\")\n            $sqlQuery .= \" AND mu.status IN('cancelled', 'admin_cancelled') AND mu2.status IS NULL \";\n        elseif($l)\n            $sqlQuery .= \" AND mu.status = 'active' AND mu.membership_id = '\" . esc_sql($l) . \"' \";\n        else\n            $sqlQuery .= \" AND mu.status = 'active' \";\n\n        $sqlQuery .= \"GROUP BY u.ID \";\n\n        if($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n            $sqlQuery .= \"ORDER BY enddate DESC \";\n        else\n            $sqlQuery .= \"ORDER BY u.user_registered DESC \";\n\n        if(!empty($limit))\n            $sqlQuery .= \"LIMIT $start, $limit\";\n    }\n    else\n    {\n        $sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS u.ID, u.user_login, u.user_email, UNIX_TIMESTAMP(u.user_registered) as joindate, mu.membership_id, mu.initial_payment, mu.billing_amount, mu.cycle_period, mu.cycle_number, mu.billing_limit, mu.trial_amount, mu.trial_limit, UNIX_TIMESTAMP(mu.startdate) as startdate, UNIX_TIMESTAMP(mu.enddate) as enddate, m.name as membership FROM $wpdb->users u LEFT JOIN $wpdb->pmpro_memberships_users mu ON u.ID = mu.user_id LEFT JOIN $wpdb->pmpro_membership_levels m ON mu.membership_id = m.id\";\n\n        if($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n            $sqlQuery .= \" LEFT JOIN $wpdb->pmpro_memberships_users mu2 ON u.ID = mu2.user_id AND mu2.status = 'active' \";\n\n        $sqlQuery .= \" WHERE mu.membership_id > 0  \";\n\n        if($l == \"oldmembers\")\n            $sqlQuery .= \" AND mu.status <> 'active' AND mu2.status IS NULL \";\n        elseif($l == \"expired\")\n            $sqlQuery .= \" AND mu.status = 'expired' AND mu2.status IS NULL \";\n        elseif($l == \"cancelled\")\n            $sqlQuery .= \" AND mu.status IN('cancelled', 'admin_cancelled') AND mu2.status IS NULL \";\n        elseif($l)\n            $sqlQuery .= \" AND mu.status = 'active' AND mu.membership_id = '\" . esc_sql($l) . \"' \";\n        else\n            $sqlQuery .= \" AND mu.status = 'active' \";\n        $sqlQuery .= \"GROUP BY u.ID \";\n\n        if($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n            $sqlQuery .= \"ORDER BY enddate DESC \";\n        else\n            $sqlQuery .= \"ORDER BY u.user_registered DESC \";\n\n        if(!empty($limit))\n            $sqlQuery .= \"LIMIT $start, $limit\";\n    }\n\n\t//filter\n\t$sqlQuery = apply_filters(\"pmpro_members_list_sql\", $sqlQuery);\n\n\t//get users\n\t$theusers = $wpdb->get_col($sqlQuery);\n\n\t//begin output\n\theader(\"Content-type: text/csv\");\n\tif($s && $l == \"oldmembers\")\n\t\theader(\"Content-Disposition: attachment; filename=members_list_expired_\" . sanitize_file_name($s) . \".csv\");\n\telseif($s && $l)\n\t\theader(\"Content-Disposition: attachment; filename=members_list_\" . intval($l) . \"_level_\" . sanitize_file_name($s) . \".csv\");\n\telseif($s)\n\t\theader(\"Content-Disposition: attachment; filename=members_list_\" . sanitize_file_name($s) . \".csv\");\n\telseif($l == \"oldmembers\")\n\t\theader(\"Content-Disposition: attachment; filename=members_list_expired.csv\");\n\telse\n\t\theader(\"Content-Disposition: attachment; filename=members_list.csv\");\n\n\t$heading = \"id,username,firstname,lastname,email,billing firstname,billing lastname,address1,address2,city,state,zipcode,country,phone,membership,initial payment,fee,term,discount_code_id,discount_code,joined\";\n\n\tif($l == \"oldmembers\")\n\t\t$heading .= \",ended\";\n\telse\n\t\t$heading .= \",expires\";\n\n\t$heading = apply_filters(\"pmpro_members_list_csv_heading\", $heading);\n\t$csvoutput = $heading;\n\n\t//these are the meta_keys for the fields (arrays are object, property. so e.g. $theuser->ID)\n\t$default_columns = array(\n\t\tarray(\"theuser\", \"ID\"),\n\t\tarray(\"theuser\", \"user_login\"),\n\t\tarray(\"metavalues\", \"first_name\"),\n\t\tarray(\"metavalues\", \"last_name\"),\n\t\tarray(\"theuser\", \"user_email\"),\n\t\tarray(\"metavalues\", \"pmpro_bfirstname\"),\n\t\tarray(\"metavalues\", \"pmpro_blastname\"),\n\t\tarray(\"metavalues\", \"pmpro_baddress1\"),\n\t\tarray(\"metavalues\", \"pmpro_baddress2\"),\n\t\tarray(\"metavalues\", \"pmpro_bcity\"),\n\t\tarray(\"metavalues\", \"pmpro_bstate\"),\n\t\tarray(\"metavalues\", \"pmpro_bzipcode\"),\n\t\tarray(\"metavalues\", \"pmpro_bcountry\"),\n\t\tarray(\"metavalues\", \"pmpro_bphone\"),\n\t\tarray(\"theuser\", \"membership\"),\n\t\tarray(\"theuser\", \"initial_payment\"),\n\t\tarray(\"theuser\", \"billing_amount\"),\n\t\tarray(\"theuser\", \"cycle_period\"),\n\t\tarray(\"discount_code\", \"id\"),\n\t\tarray(\"discount_code\", \"code\")\n\t\t//joindate and enddate are handled specifically below\n\t);\n\n\t//filter\n\t$default_columns = apply_filters(\"pmpro_members_list_csv_default_columns\", $default_columns);\n\n\t//any extra columns\n\t$extra_columns = apply_filters(\"pmpro_members_list_csv_extra_columns\", array());\n\tif(!empty($extra_columns))\n\t{\n\t\tforeach($extra_columns as $heading => $callback)\n\t\t{\n\t\t\t$csvoutput .= \",\" . $heading;\n\t\t}\n\t}\n\n\t$csvoutput .= \"\\n\";\n\n\t//output\n\techo $csvoutput;\n\t$csvoutput = \"\";\n\n\tif($theusers)\n\t{\n\t\tforeach($theusers as $user_id)\n\t\t{\n\t\t\t//MULTI: This query will need to be updated to support multiple levels per user. Should probably just dump multiple rows for each membership.\n\t\t\t//get meta\n\n\t\t\tif($l == \"oldmembers\")\n\t\t\t\t$theuser = $wpdb->get_row(\"SELECT u.ID, u.user_login, u.user_email, UNIX_TIMESTAMP(u.user_registered) as joindate, u.user_login, u.user_nicename, u.user_url, u.user_registered, u.user_status, u.display_name, mu.membership_id, mu.initial_payment, mu.billing_amount, mu.cycle_period, UNIX_TIMESTAMP(mu.enddate) as enddate, m.name as membership FROM $wpdb->users u LEFT JOIN $wpdb->usermeta um ON u.ID = um.user_id LEFT JOIN $wpdb->pmpro_memberships_users mu ON u.ID = mu.user_id LEFT JOIN $wpdb->pmpro_membership_levels m ON mu.membership_id = m.id WHERE u.ID = '\" . $user_id . \"' ORDER BY mu.id DESC LIMIT 1\");\n\t\t\telse\n\t\t\t\t$theuser = $wpdb->get_row(\"SELECT u.ID, u.user_login, u.user_email, UNIX_TIMESTAMP(u.user_registered) as joindate, u.user_login, u.user_nicename, u.user_url, u.user_registered, u.user_status, u.display_name, mu.membership_id, mu.initial_payment, mu.billing_amount, mu.cycle_period, UNIX_TIMESTAMP(mu.enddate) as enddate, m.name as membership FROM $wpdb->users u LEFT JOIN $wpdb->usermeta um ON u.ID = um.user_id LEFT JOIN $wpdb->pmpro_memberships_users mu ON u.ID = mu.user_id AND mu.status = 'active' LEFT JOIN $wpdb->pmpro_membership_levels m ON mu.membership_id = m.id WHERE u.ID = '\" . $user_id . \"' LIMIT 1\");\n\n\t\t\t$sqlQuery = \"SELECT meta_key as `key`, meta_value as `value` FROM $wpdb->usermeta WHERE $wpdb->usermeta.user_id = '\" . $user_id . \"'\";\n\t\t\t$metavalues = pmpro_getMetavalues($sqlQuery);\n\t\t\t$theuser->metavalues = $metavalues;\n\t\t\t$sqlQuery = \"SELECT c.id, c.code FROM $wpdb->pmpro_discount_codes_uses cu LEFT JOIN $wpdb->pmpro_discount_codes c ON cu.code_id = c.id WHERE cu.user_id = '\" . $theuser->ID . \"' ORDER BY c.id DESC LIMIT 1\";\n\t\t\t$discount_code = $wpdb->get_row($sqlQuery);\n\n\t\t\t//default columns\n\t\t\tif(!empty($default_columns))\n\t\t\t{\n\t\t\t\t$count = 0;\n\t\t\t\tforeach($default_columns as $col)\n\t\t\t\t{\n\t\t\t\t\t//add comma after the first item\n\t\t\t\t\t$count++;\n\t\t\t\t\tif($count > 1)\n\t\t\t\t\t\t$csvoutput .= \",\";\n\n\t\t\t\t\t//checking $object->property. note the double $$\n\t\t\t\t\tif(!empty($$col[0]->$col[1]))\n\t\t\t\t\t\t$csvoutput .= pmpro_enclose($$col[0]->$col[1]);\t//output the value\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//joindate and enddate\n\t\t\t$csvoutput .= \",\" . pmpro_enclose(date(\"Y-m-d\", $theuser->joindate)) . \",\";\n\n\t\t\tif($theuser->membership_id)\n\t\t\t{\n\t\t\t\tif($theuser->enddate)\n\t\t\t\t\t$csvoutput .= pmpro_enclose(apply_filters(\"pmpro_memberslist_expires_column\", date(\"Y-m-d\", $theuser->enddate), $theuser));\n\t\t\t\telse\n\t\t\t\t\t$csvoutput .= pmpro_enclose(apply_filters(\"pmpro_memberslist_expires_column\", \"Never\", $theuser));\n\t\t\t}\n\t\t\telseif($l == \"oldmembers\" && $theuser->enddate)\n\t\t\t{\n\t\t\t\t$csvoutput .= pmpro_enclose(date(\"Y-m-d\", $theuser->enddate));\n\t\t\t}\n\t\t\telse\n\t\t\t\t$csvoutput .= \"N/A\";\n\n\t\t\t//any extra columns\n\t\t\tif(!empty($extra_columns))\n\t\t\t{\n\t\t\t\tforeach($extra_columns as $heading => $callback)\n\t\t\t\t{\n\t\t\t\t\t$csvoutput .= \",\" . pmpro_enclose(call_user_func($callback, $theuser, $heading));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$csvoutput .= \"\\n\";\n\n\t\t\t//output\n\t\t\techo $csvoutput;\n\t\t\t$csvoutput = \"\";\n\t\t}\n\t}\n\n\tprint $csvoutput;\n\n\tfunction pmpro_enclose($s)\n\t{\n\t\treturn \"\\\"\" . str_replace(\"\\\"\", \"\\\\\\\"\", $s) . \"\\\"\";\n\t}", "<?php\n\t//only admins can get this\n\tif(!function_exists(\"current_user_can\") || (!current_user_can(\"manage_options\") && !current_user_can(\"pmpro_memberslist\")))\n\t{\n\t\tdie(__(\"You do not have permissions to perform this action.\", \"pmpro\"));\n\t}\n\n\t//vars\n\tglobal $wpdb;\n\tif(isset($_REQUEST['s']))\n\t\t$s = sanitize_text_field(trim($_REQUEST['s']));\n\telse\n\t\t$s = \"\";\n\n\tif(isset($_REQUEST['l']))\n\t\t$l = intval($_REQUEST['l']);\n\telse\n\t\t$l = false;\n\n\trequire_once(dirname(__FILE__) . \"/admin_header.php\");\n?>\n\n\t<form id=\"posts-filter\" method=\"get\" action=\"\">\n\t<h2>\n\t\t<?php _e('Members List', 'pmpro');?>\n\t\t<a target=\"_blank\" href=\"<?php echo admin_url('admin-ajax.php');?>?action=memberslist_csv&s=<?php echo esc_attr($s);?>&l=<?php echo $l?>\" class=\"add-new-h2\"><?php _e('Export to CSV', 'pmpro');?></a>\n\t</h2>\n\t<ul class=\"subsubsub\">\n\t\t<li>\n\t\t\t<?php _e('Show', 'pmpro');?>\n\t\t\t<select name=\"l\" onchange=\"jQuery('#posts-filter').submit();\">\n\t\t\t\t<option value=\"\" <?php if(!$l) { ?>selected=\"selected\"<?php } ?>><?php _e('All Levels', 'pmpro');?></option>\n\t\t\t\t<?php\n\t\t\t\t\t$levels = $wpdb->get_results(\"SELECT id, name FROM $wpdb->pmpro_membership_levels ORDER BY name\");\n\t\t\t\t\tforeach($levels as $level)\n\t\t\t\t\t{\n\t\t\t\t?>\n\t\t\t\t\t<option value=\"<?php echo $level->id?>\" <?php if($l == $level->id) { ?>selected=\"selected\"<?php } ?>><?php echo $level->name?></option>\n\t\t\t\t<?php\n\t\t\t\t\t}\n\t\t\t\t?>\n\t\t\t\t<option value=\"cancelled\" <?php if($l == \"cancelled\") { ?>selected=\"selected\"<?php } ?>><?php _e('Cancelled Members', 'pmpro');?></option>\n\t\t\t\t<option value=\"expired\" <?php if($l == \"expired\") { ?>selected=\"selected\"<?php } ?>><?php _e('Expired Members', 'pmpro');?></option>\n\t\t\t\t<option value=\"oldmembers\" <?php if($l == \"oldmembers\") { ?>selected=\"selected\"<?php } ?>><?php _e('Old Members', 'pmpro');?></option>\n\t\t\t</select>\n\t\t</li>\n\t</ul>\n\t<p class=\"search-box\">\n\t\t<label class=\"hidden\" for=\"post-search-input\"><?php _e('Search Members', 'pmpro');?>:</label>\n\t\t<input type=\"hidden\" name=\"page\" value=\"pmpro-memberslist\" />\n\t\t<input id=\"post-search-input\" type=\"text\" value=\"<?php echo esc_attr($s);?>\" name=\"s\"/>\n\t\t<input class=\"button\" type=\"submit\" value=\"<?php _e('Search Members', 'pmpro');?>\"/>\n\t</p>\n\t<?php\n\t\t//some vars for the search\n\t\tif(isset($_REQUEST['pn']))\n\t\t\t$pn = intval($_REQUEST['pn']);\n\t\telse\n\t\t\t$pn = 1;\n\n\t\tif(isset($_REQUEST['limit']))\n\t\t\t$limit = intval($_REQUEST['limit']);\n\t\telse\n\t\t\t$limit = 15;\n\n\t\t$end = $pn * $limit;\n\t\t$start = $end - $limit;\n\n\t\tif($s)\n\t\t{\n\t\t\t$sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS u.ID, u.user_login, u.user_email, UNIX_TIMESTAMP(u.user_registered) as joindate, mu.membership_id, mu.initial_payment, mu.billing_amount, mu.cycle_period, mu.cycle_number, mu.billing_limit, mu.trial_amount, mu.trial_limit, UNIX_TIMESTAMP(mu.startdate) as startdate, UNIX_TIMESTAMP(mu.enddate) as enddate, m.name as membership FROM $wpdb->users u LEFT JOIN $wpdb->usermeta um ON u.ID = um.user_id LEFT JOIN $wpdb->pmpro_memberships_users mu ON u.ID = mu.user_id LEFT JOIN $wpdb->pmpro_membership_levels m ON mu.membership_id = m.id \";\n\n\t\t\tif($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n\t\t\t\t$sqlQuery .= \" LEFT JOIN $wpdb->pmpro_memberships_users mu2 ON u.ID = mu2.user_id AND mu2.status = 'active' \";\n\n\t\t\t$sqlQuery .= \" WHERE mu.membership_id > 0 AND (u.user_login LIKE '%\" . esc_sql($s) . \"%' OR u.user_email LIKE '%\" . esc_sql($s) . \"%' OR um.meta_value LIKE '%\" . esc_sql($s) . \"%') \";\n\n\t\t\tif($l == \"oldmembers\")\n\t\t\t\t$sqlQuery .= \" AND mu.status <> 'active' AND mu2.status IS NULL \";\n\t\t\telseif($l == \"expired\")\n\t\t\t\t$sqlQuery .= \" AND mu.status = 'expired' AND mu2.status IS NULL \";\n\t\t\telseif($l == \"cancelled\")\n\t\t\t\t$sqlQuery .= \" AND mu.status IN('cancelled', 'admin_cancelled') AND mu2.status IS NULL \";\n\t\t\telseif($l)\n\t\t\t\t$sqlQuery .= \" AND mu.status = 'active' AND mu.membership_id = '\" . esc_sql($l) . \"' \";\n\t\t\telse\n\t\t\t\t$sqlQuery .= \" AND mu.status = 'active' \";\n\n\t\t\t$sqlQuery .= \"GROUP BY u.ID \";\n\n\t\t\tif($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n\t\t\t\t$sqlQuery .= \"ORDER BY enddate DESC \";\n\t\t\telse\n\t\t\t\t$sqlQuery .= \"ORDER BY u.user_registered DESC \";\n\n\t\t\t$sqlQuery .= \"LIMIT $start, $limit\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS u.ID, u.user_login, u.user_email, UNIX_TIMESTAMP(u.user_registered) as joindate, mu.membership_id, mu.initial_payment, mu.billing_amount, mu.cycle_period, mu.cycle_number, mu.billing_limit, mu.trial_amount, mu.trial_limit, UNIX_TIMESTAMP(mu.startdate) as startdate, UNIX_TIMESTAMP(mu.enddate) as enddate, m.name as membership FROM $wpdb->users u LEFT JOIN $wpdb->pmpro_memberships_users mu ON u.ID = mu.user_id LEFT JOIN $wpdb->pmpro_membership_levels m ON mu.membership_id = m.id\";\n\n\t\t\tif($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n\t\t\t\t$sqlQuery .= \" LEFT JOIN $wpdb->pmpro_memberships_users mu2 ON u.ID = mu2.user_id AND mu2.status = 'active' \";\n\n\t\t\t$sqlQuery .= \" WHERE mu.membership_id > 0  \";\n\n\t\t\tif($l == \"oldmembers\")\n\t\t\t\t$sqlQuery .= \" AND mu.status <> 'active' AND mu2.status IS NULL \";\n\t\t\telseif($l == \"expired\")\n\t\t\t\t$sqlQuery .= \" AND mu.status = 'expired' AND mu2.status IS NULL \";\n\t\t\telseif($l == \"cancelled\")\n\t\t\t\t$sqlQuery .= \" AND mu.status IN('cancelled', 'admin_cancelled') AND mu2.status IS NULL \";\n\t\t\telseif($l)\n\t\t\t\t$sqlQuery .= \" AND mu.status = 'active' AND mu.membership_id = '\" . esc_sql($l) . \"' \";\n\t\t\telse\n\t\t\t\t$sqlQuery .= \" AND mu.status = 'active' \";\n\t\t\t$sqlQuery .= \"GROUP BY u.ID \";\n\n\t\t\tif($l == \"oldmembers\" || $l == \"expired\" || $l == \"cancelled\")\n\t\t\t\t$sqlQuery .= \"ORDER BY enddate DESC \";\n\t\t\telse\n\t\t\t\t$sqlQuery .= \"ORDER BY u.user_registered DESC \";\n\n\t\t\t$sqlQuery .= \"LIMIT $start, $limit\";\n\t\t}\n\n\t\t$sqlQuery = apply_filters(\"pmpro_members_list_sql\", $sqlQuery);\n\n\t\t$theusers = $wpdb->get_results($sqlQuery);\n\t\t$totalrows = $wpdb->get_var(\"SELECT FOUND_ROWS() as found_rows\");\n\n\t\tif($theusers)\n\t\t{\n\t\t\t$calculate_revenue = apply_filters(\"pmpro_memberslist_calculate_revenue\", false);\n\t\t\tif($calculate_revenue)\n\t\t\t{\n\t\t\t\t$initial_payments = pmpro_calculateInitialPaymentRevenue($s, $l);\n\t\t\t\t$recurring_payments = pmpro_calculateRecurringRevenue($s, $l);\n\t\t\t\t?>\n\t\t\t\t<p class=\"clear\"><?php echo strval($totalrows)?> members found. These members have paid <strong>$<?php echo number_format($initial_payments)?> in initial payments</strong> and will generate an estimated <strong>$<?php echo number_format($recurring_payments)?> in revenue over the next year</strong>, or <strong>$<?php echo number_format($recurring_payments/12)?>/month</strong>. <span class=\"pmpro_lite\">(This estimate does not take into account trial periods or billing limits.)</span></p>\n\t\t\t\t<?php\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t?>\n\t\t\t<p class=\"clear\"><?php printf(__(\"%d members found.\", \"pmpro\"), $totalrows);?></span></p>\n\t\t\t<?php\n\t\t\t}\n\t\t}\n\t?>\n\t<table class=\"widefat\">\n\t\t<thead>\n\t\t\t<tr class=\"thead\">\n\t\t\t\t<th><?php _e('ID', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Username', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('First&nbsp;Name', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Last&nbsp;Name', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Email', 'pmpro');?></th>\n\t\t\t\t<?php do_action(\"pmpro_memberslist_extra_cols_header\", $theusers);?>\n\t\t\t\t<th><?php _e('Billing Address', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Membership', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Fee', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Joined', 'pmpro');?></th>\n\t\t\t\t<th>\n\t\t\t\t\t<?php\n\t\t\t\t\t\tif($l == \"oldmembers\")\n\t\t\t\t\t\t\t_e('Ended', 'pmpro');\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t_e('Expires', 'pmpro');\n\t\t\t\t\t?>\n\t\t\t\t</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody id=\"users\" class=\"list:user user-list\">\n\t\t\t<?php\n\t\t\t\t$count = 0;\n\t\t\t\tforeach($theusers as $auser)\n\t\t\t\t{\n\t\t\t\t\t//get meta\n\t\t\t\t\t$theuser = get_userdata($auser->ID);\n\t\t\t\t\t?>\n\t\t\t\t\t\t<tr <?php if($count++ % 2 == 0) { ?>class=\"alternate\"<?php } ?>>\n\t\t\t\t\t\t\t<td><?php echo $theuser->ID?></td>\n\t\t\t\t\t\t\t<td class=\"username column-username\">\n\t\t\t\t\t\t\t\t<?php echo get_avatar($theuser->ID, 32)?>\n\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t\t$userlink = '<a href=\"user-edit.php?user_id=' . $theuser->ID . '\">' . $theuser->user_login . '</a>';\n\t\t\t\t\t\t\t\t\t\t$userlink = apply_filters(\"pmpro_members_list_user_link\", $userlink, $theuser);\n\t\t\t\t\t\t\t\t\t\techo $userlink;\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t// Set up the hover actions for this user\n\t\t\t\t\t\t\t\t\t$actions = apply_filters( 'pmpro_memberslist_user_row_actions', array(), $theuser );\n\t\t\t\t\t\t\t\t\t$action_count = count( $actions );\n\t\t\t\t\t\t\t\t\t$i = 0;\n\t\t\t\t\t\t\t\t\tif($action_count)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$out = '<div class=\"row-actions\">';\n\t\t\t\t\t\t\t\t\t\tforeach ( $actions as $action => $link ) {\n\t\t\t\t\t\t\t\t\t\t\t++$i;\n\t\t\t\t\t\t\t\t\t\t\t( $i == $action_count ) ? $sep = '' : $sep = ' | ';\n\t\t\t\t\t\t\t\t\t\t\t$out .= \"<span class='$action'>$link$sep</span>\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t$out .= '</div>';\n\t\t\t\t\t\t\t\t\t\techo $out;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td><?php echo $theuser->first_name?></td>\n\t\t\t\t\t\t\t<td><?php echo $theuser->last_name?></td>\n\t\t\t\t\t\t\t<td><a href=\"mailto:<?php echo esc_attr($theuser->user_email)?>\"><?php echo $theuser->user_email?></a></td>\n\t\t\t\t\t\t\t<?php do_action(\"pmpro_memberslist_extra_cols_body\", $theuser);?>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\techo pmpro_formatAddress(trim($theuser->pmpro_bfirstname . \" \" . $theuser->pmpro_blastname), $theuser->pmpro_baddress1, $theuser->pmpro_baddress2, $theuser->pmpro_bcity, $theuser->pmpro_bstate, $theuser->pmpro_bzipcode, $theuser->pmpro_bcountry, $theuser->pmpro_bphone);\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td><?php echo $auser->membership?></td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<?php if((float)$auser->initial_payment > 0) { ?>\n\t\t\t\t\t\t\t\t\t<?php echo pmpro_formatPrice($auser->initial_payment);?>\n\t\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t\t<?php if((float)$auser->initial_payment > 0 && (float)$auser->billing_amount > 0) { ?>+<br /><?php } ?>\n\t\t\t\t\t\t\t\t<?php if((float)$auser->billing_amount > 0) { ?>\n\t\t\t\t\t\t\t\t\t<?php echo pmpro_formatPrice($auser->billing_amount);?>/<?php if($auser->cycle_number > 1) { echo $auser->cycle_number . \" \" . $auser->cycle_period . \"s\"; } else { echo $auser->cycle_period; } ?>\n\t\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t\t<?php if((float)$auser->initial_payment <= 0 && (float)$auser->billing_amount <= 0) { ?>\n\t\t\t\t\t\t\t\t\t-\n\t\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td><?php echo date(get_option(\"date_format\"), strtotime($theuser->user_registered, current_time(\"timestamp\")))?></td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tif($auser->enddate)\n\t\t\t\t\t\t\t\t\t\techo apply_filters(\"pmpro_memberslist_expires_column\", date(get_option('date_format'), $auser->enddate), $auser);\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\techo __(apply_filters(\"pmpro_memberslist_expires_column\", \"Never\", $auser), \"pmpro\");\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<?php\n\t\t\t\t}\n\n\t\t\t\tif(!$theusers)\n\t\t\t\t{\n\t\t\t\t?>\n\t\t\t\t<tr>\n\t\t\t\t\t<td colspan=\"9\"><p><?php _e(\"No members found.\", \"pmpro\");?> <?php if($l) { ?><a href=\"?page=pmpro-memberslist&s=<?php echo esc_attr($s);?>\"><?php _e(\"Search all levels\", \"pmpro\");?></a>.<?php } ?></p></td>\n\t\t\t\t</tr>\n\t\t\t\t<?php\n\t\t\t\t}\n\t\t\t?>\n\t\t</tbody>\n\t</table>\n\t</form>\n\n\t<?php\n\techo pmpro_getPaginationString($pn, $totalrows, $limit, 1, get_admin_url(NULL, \"/admin.php?page=pmpro-memberslist&s=\" . urlencode($s)), \"&l=$l&limit=$limit&pn=\");\n\t?>\n\n<?php\n\trequire_once(dirname(__FILE__) . \"/admin_footer.php\");\n?>\n", "<?php\n\t//only admins can get this\n\tif(!function_exists(\"current_user_can\") || (!current_user_can(\"manage_options\") && !current_user_can(\"pmpro_orderscsv\")))\n\t{\n\t\tdie(__(\"You do not have permissions to perform this action.\", \"pmpro\"));\n\t}\n\n\tglobal $wpdb;\n\n\t//get users\n\tif(isset($_REQUEST['s']))\n\t\t$s = sanitize_text_field($_REQUEST['s']);\n\telse\n\t\t$s = \"\";\n\n\tif(isset($_REQUEST['l']))\n\t\t$l = intval($_REQUEST['l']);\n\telse\n\t\t$l = false;\n\n\tif(isset($_REQUEST['start-month']))\n\t\t$start_month = intval($_REQUEST['start-month']);\n\telse\n\t\t$start_month = \"1\";\n\n\tif(isset($_REQUEST['start-day']))\n\t\t$start_day = intval($_REQUEST['start-day']);\n\telse\n\t\t$start_day = \"1\";\n\n\tif(isset($_REQUEST['start-year']))\n\t\t$start_year = intval($_REQUEST['start-year']);\n\telse\n\t\t$start_year = date(\"Y\");\n\n\tif(isset($_REQUEST['end-month']))\n\t\t$end_month = intval($_REQUEST['end-month']);\n\telse\n\t\t$end_month = date(\"n\");\n\n\tif(isset($_REQUEST['end-day']))\n\t\t$end_day = intval($_REQUEST['end-day']);\n\telse\n\t\t$end_day = date(\"j\");\n\n\tif(isset($_REQUEST['end-year']))\n\t\t$end_year = intval($_REQUEST['end-year']);\n\telse\n\t\t$end_year = date(\"Y\");\n\n\tif(isset($_REQUEST['predefined-date']))\n\t\t$predefined_date = sanitize_text_field($_REQUEST['predefined-date']);\n\telse\n\t\t$predefined_date = \"This Month\";\n\n\tif(isset($_REQUEST['status']))\n\t\t$status = sanitize_text_field($_REQUEST['status']);\n\telse\n\t\t$status = \"\";\n\n\tif(isset($_REQUEST['filter']))\n\t\t$filter = sanitize_text_field($_REQUEST['filter']);\n\telse\n\t\t$filter = \"all\";\n\n\t//some vars for the search\n\tif(!empty($_REQUEST['pn']))\n\t\t$pn = intval($_REQUEST['pn']);\n\telse\n\t\t$pn = 1;\n\n\tif(!empty($_REQUEST['limit']))\n\t\t$limit = intval($_REQUEST['limit']);\n\telse\n\t\t$limit = false;\n\n\tif($limit)\n\t{\n\t\t$end = $pn * $limit;\n\t\t$start = $end - $limit;\n\t}\n\telse\n\t{\n\t\t$end = NULL;\n\t\t$start = NULL;\n\t}\n\n\t//filters\n\tif($filter == \"all\" || !$filter)\n\t\t\t$condition = \"1=1\";\n\telseif($filter == \"within-a-date-range\")\n\t{\n\t\t$start_date = $start_year.\"-\".$start_month.\"-\".$start_day;\n\t\t$end_date = $end_year.\"-\".$end_month.\"-\".$end_day;\n\n\t\t//add times to dates\n\t\t$start_date =  $start_date . \" 00:00:00\";\n\t\t$end_date =  $end_date . \" 23:59:59\";\n\n\t\t$condition = \"timestamp BETWEEN '\".$start_date.\"' AND '\".$end_date.\"'\";\n\t}\n\telseif($filter == \"predefined-date-range\")\n\t{\n\t\tif($predefined_date == \"Last Month\")\n\t\t{\n\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of last month\", current_time(\"timestamp\")));\n\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of last month\", current_time(\"timestamp\")));\n\t\t}\n\t\telseif($predefined_date == \"This Month\")\n\t\t{\n\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of this month\", current_time(\"timestamp\")));\n\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of this month\", current_time(\"timestamp\")));\n\t\t}\n\t\telseif($predefined_date == \"This Year\")\n\t\t{\n\t\t\t$year = date('Y');\n\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of January $year\", current_time(\"timestamp\")));\n\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of December $year\", current_time(\"timestamp\")));\n\t\t}\n\n\t\telseif($predefined_date == \"Last Year\")\n\t\t{\n\t\t\t$year = date('Y') - 1;\n\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of January $year\", current_time(\"timestamp\")));\n\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of December $year\", current_time(\"timestamp\")));\n\t\t}\n\n\t\t//add times to dates\n\t\t$start_date =  $start_date . \" 00:00:00\";\n\t\t$end_date =  $end_date . \" 23:59:59\";\n\n\t\t$condition = \"timestamp BETWEEN '\".esc_sql($start_date).\"' AND '\".esc_sql($end_date).\"'\";\n\t}\n\telseif($filter == \"within-a-level\")\n\t{\n\t\t$condition = \"membership_id = \" . esc_sql($l);\n\t}\n\telseif($filter == \"within-a-status\")\n\t{\n\t\t$condition = \"status = '\" . esc_sql($status) . \"' \";\n\t}\n\n\t//string search\n\tif($s)\n\t{\n\t\t$sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS o.id FROM $wpdb->pmpro_membership_orders o LEFT JOIN $wpdb->users u ON o.user_id = u.ID LEFT JOIN $wpdb->pmpro_membership_levels l ON o.membership_id = l.id \";\n\n\t\t$join_with_usermeta = apply_filters(\"pmpro_orders_search_usermeta\", false);\n\t\tif($join_with_usermeta)\n\t\t\t$sqlQuery .= \"LEFT JOIN $wpdb->usermeta um ON o.user_id = um.user_id \";\n\n\t\t$sqlQuery .= \"WHERE (1=2 \";\n\n\t\t$fields = array(\"o.id\", \"o.code\", \"o.billing_name\", \"o.billing_street\", \"o.billing_city\", \"o.billing_state\", \"o.billing_zip\", \"o.billing_phone\", \"o.payment_type\", \"o.cardtype\", \"o.accountnumber\", \"o.status\", \"o.gateway\", \"o.gateway_environment\", \"o.payment_transaction_id\", \"o.subscription_transaction_id\", \"u.user_login\", \"u.user_email\", \"u.display_name\", \"l.name\");\n\n\t\tif($join_with_usermeta)\n\t\t\t$fields[] = \"um.meta_value\";\n\n\t\t$fields = apply_filters(\"pmpro_orders_search_fields\", $fields);\n\n\t\tforeach($fields as $field)\n\t\t\t$sqlQuery .= \" OR \" . $field . \" LIKE '%\" . esc_sql($s) . \"%' \";\n\t\t$sqlQuery .= \") \";\n\n\t\t$sqlQuery .= \"AND \" . $condition . \" \";\n\n\t\t$sqlQuery .= \"GROUP BY o.id ORDER BY o.id DESC, o.timestamp DESC \";\n\t}\n\telse\n\t{\n\t\t$sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS id FROM $wpdb->pmpro_membership_orders WHERE \".$condition.\" ORDER BY id DESC, timestamp DESC \";\n\t}\n\n\tif(!empty($start) && !empty($limit))\n\t\t$sqlQuery .= \"LIMIT $start, $limit\";\n\n\t$order_ids = $wpdb->get_col($sqlQuery);\n\n\t//begin output\n\theader(\"Content-type: text/csv\");\n\n\t$filename = \"orders.csv\";\n\t/*\n\t\tInsert logic here for building filename from $filter and other values.\n\t*/\n\theader(\"Content-Disposition: attachment; filename=$filename;\");\n\n\t$csvoutput = \"id,user_id,user_login,first_name,last_name,user_email,billing_name,billing_street,billing_city,billing_state,billing_zip,billing_country,billing_phone,membership_id,level_name,subtotal,tax,couponamount,total,payment_type,cardtype,accountnumber,expirationmonth,expirationyear,status,gateway,gateway_environment,payment_transaction_id,subscription_transaction_id,discount_code_id,discount_code,timestamp\";\n\n\t//these are the meta_keys for the fields (arrays are object, property. so e.g. $theuser->ID)\n\t$default_columns = array(\n\t\tarray(\"order\", \"id\"),\n\t\tarray(\"user\", \"ID\"),\n\t\tarray(\"user\", \"user_login\"),\n\t\tarray(\"user\", \"first_name\"),\n\t\tarray(\"user\", \"last_name\"),\n\t\tarray(\"user\", \"user_email\"),\n\t\tarray(\"order\", \"billing\", \"name\"),\n\t\tarray(\"order\", \"billing\", \"street\"),\n\t\tarray(\"order\", \"billing\", \"city\"),\n\t\tarray(\"order\", \"billing\", \"state\"),\n\t\tarray(\"order\", \"billing\", \"zip\"),\n\t\tarray(\"order\", \"billing\", \"country\"),\n\t\tarray(\"order\", \"billing\", \"phone\"),\n\t\tarray(\"order\", \"membership_id\"),\n\t\tarray(\"level\", \"name\"),\n\t\tarray(\"order\", \"subtotal\"),\n\t\tarray(\"order\", \"tax\"),\n\t\tarray(\"order\", \"couponamount\"),\n\t\tarray(\"order\", \"total\"),\n\t\tarray(\"order\", \"payment_type\"),\n\t\tarray(\"order\", \"cardtype\"),\n\t\tarray(\"order\", \"accountnumber\"),\n\t\tarray(\"order\", \"expirationmonth\"),\n\t\tarray(\"order\", \"expirationyear\"),\n\t\tarray(\"order\", \"status\"),\n\t\tarray(\"order\", \"gateway\"),\n\t\tarray(\"order\", \"gateway_environment\"),\n\t\tarray(\"order\", \"payment_transaction_id\"),\n\t\tarray(\"order\", \"subscription_transactiond_id\"),\n\t\tarray(\"discount_code\", \"id\"),\n\t\tarray(\"discount_code\", \"code\")\n\t);\n\n\t//any extra columns\n\t$extra_columns = apply_filters(\"pmpro_orders_csv_extra_columns\", array());\n\tif(!empty($extra_columns))\n\t{\n\t\tforeach($extra_columns as $heading => $callback)\n\t\t{\n\t\t\t$csvoutput .= \",\" . $heading;\n\t\t}\n\t}\n\n\t$csvoutput .= \"\\n\";\n\n\t//output\n\techo $csvoutput;\n\t$csvoutput = \"\";\n\n\tif($order_ids)\n\t{\n\t\tforeach($order_ids as $order_id)\n\t\t{\n\t\t\t$order = new MemberOrder();\n\t\t\t$order->nogateway = true;\n\t\t\t$order->getMemberOrderByID($order_id);\n\t\t\t$user = get_userdata($order->user_id);\n\t\t\t$level = $order->getMembershipLevel();\n\t\t\t$sqlQuery = \"SELECT c.id, c.code FROM $wpdb->pmpro_discount_codes_uses cu LEFT JOIN $wpdb->pmpro_discount_codes c ON cu.code_id = c.id WHERE cu.order_id = '\" . $order_id . \"' LIMIT 1\";\n\t\t\t$discount_code = $wpdb->get_row($sqlQuery);\n\n\t\t\t//default columns\n\t\t\tif(!empty($default_columns))\n\t\t\t{\n\t\t\t\t$count = 0;\n\t\t\t\tforeach($default_columns as $col)\n\t\t\t\t{\n\t\t\t\t\t//add comma after the first item\n\t\t\t\t\t$count++;\n\t\t\t\t\tif($count > 1)\n\t\t\t\t\t\t$csvoutput .= \",\";\n\n\t\t\t\t\t//checking $object->property. note the double $$\n\t\t\t\t\tif(!empty($col[2]) && isset($$col[0]->$col[1]->$col[2]))\n\t\t\t\t\t\t$csvoutput .= pmpro_enclose($$col[0]->$col[1]->$col[2]);\t//output the value\n\t\t\t\t\telseif(!empty($$col[0]->$col[1]))\n\t\t\t\t\t\t$csvoutput .= pmpro_enclose($$col[0]->$col[1]);\t//output the value\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//timestamp\n\t\t\t$csvoutput .= \",\" . pmpro_enclose(date(get_option(\"date_format\"), $order->timestamp));\n\n\t\t\t//any extra columns\n\t\t\tif(!empty($extra_columns))\n\t\t\t{\n\t\t\t\tforeach($extra_columns as $heading => $callback)\n\t\t\t\t{\n\t\t\t\t\t$csvoutput .= \",\" . pmpro_enclose(call_user_func($callback, $order));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$csvoutput .= \"\\n\";\n\n\t\t\t//output\n\t\t\techo $csvoutput;\n\t\t\t$csvoutput = \"\";\n\t\t}\n\t}\n\n\tprint $csvoutput;\n\n\tfunction pmpro_enclose($s)\n\t{\n\t\treturn \"\\\"\" . str_replace(\"\\\"\", \"\\\\\\\"\", $s) . \"\\\"\";\n\t}\n", "<?php\n\t//only admins can get this\n\tif(!function_exists(\"current_user_can\") || (!current_user_can(\"manage_options\") && !current_user_can(\"pmpro_orders\")))\n\t{\n\t\tdie(__(\"You do not have permissions to perform this action.\", \"pmpro\"));\n\t}\n\n\t//vars\n\tglobal $wpdb;\n\tif(isset($_REQUEST['s']))\n\t\t$s = sanitize_text_field(trim($_REQUEST['s']));\n\telse\n\t\t$s = \"\";\n\n\tif(isset($_REQUEST['l']))\n\t\t$l = intval($_REQUEST['l']);\n\telse\n\t\t$l = false;\n\n\tif(isset($_REQUEST['start-month']))\n\t\t$start_month = intval($_REQUEST['start-month']);\n\telse\n\t\t$start_month = \"1\";\n\n\tif(isset($_REQUEST['start-day']))\n\t\t$start_day = intval($_REQUEST['start-day']);\n\telse\n\t\t$start_day = \"1\";\n\n\tif(isset($_REQUEST['start-year']))\n\t\t$start_year = intval($_REQUEST['start-year']);\n\telse\n\t\t$start_year = date(\"Y\");\n\n\tif(isset($_REQUEST['end-month']))\n\t\t$end_month = intval($_REQUEST['end-month']);\n\telse\n\t\t$end_month = date(\"n\");\n\n\tif(isset($_REQUEST['end-day']))\n\t\t$end_day = intval($_REQUEST['end-day']);\n\telse\n\t\t$end_day = date(\"j\");\n\n\tif(isset($_REQUEST['end-year']))\n\t\t$end_year = intval($_REQUEST['end-year']);\n\telse\n\t\t$end_year = date(\"Y\");\n\n\tif(isset($_REQUEST['predefined-date']))\n\t\t$predefined_date = sanitize_text_field($_REQUEST['predefined-date']);\n\telse\n\t\t$predefined_date = \"This Month\";\n\n\tif(isset($_REQUEST['status']))\n\t\t$status = sanitize_text_field($_REQUEST['status']);\n\telse\n\t\t$status = \"\";\n\n\n\t//deleting?\n\tif(!empty($_REQUEST['delete']))\n\t{\n\t\t$dorder = new MemberOrder(intval($_REQUEST['delete']));\n\t\tif($dorder->deleteMe())\n\t\t{\n\t\t\t$pmpro_msg = __(\"Order deleted successfully.\", \"pmpro\");\n\t\t\t$pmpro_msgt = \"success\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$pmpro_msg = __(\"Error deleting order.\", \"pmpro\");\n\t\t\t$pmpro_msgt = \"error\";\n\t\t}\n\t}\n\n\tif(isset($_REQUEST['filter']))\n\t\t$filter = sanitize_text_field($_REQUEST['filter']);\n\telse\n\t\t$filter = \"all\";\n\n\t$thisyear = date(\"Y\");\n\n\n\n\t//this array stores fields that should be read only\n\t$read_only_fields = apply_filters(\"pmpro_orders_read_only_fields\", array(\"code\", \"payment_transaction_id\", \"subscription_transaction_id\"));\n\n\t//saving?\n\tif(!empty($_REQUEST['save']))\n\t{\n\t\t//start with old order if applicable\n\t\t$order_id = intval($_REQUEST['order']);\n\t\tif($order_id > 0)\n\t\t\t$order = new MemberOrder($order_id);\n\t\telse\n\t\t\t$order = new MemberOrder();\n\n\t\t//update values\n\t\tif(!in_array(\"code\", $read_only_fields))\n\t\t\t$order->code = $_POST['code'];\n\t\tif(!in_array(\"user_id\", $read_only_fields))\n\t\t\t$order->user_id = intval($_POST['user_id']);\n\t\tif(!in_array(\"membership_id\", $read_only_fields))\n\t\t\t$order->membership_id = intval($_POST['membership_id']);\n\t\tif(!in_array(\"billing_name\", $read_only_fields))\n\t\t\t$order->billing->name = stripslashes($_POST['billing_name']);\n\t\tif(!in_array(\"billing_street\", $read_only_fields))\n\t\t\t$order->billing->street = stripslashes($_POST['billing_street']);\n\t\tif(!in_array(\"billing_city\", $read_only_fields))\n\t\t\t$order->billing->city = stripslashes($_POST['billing_city']);\n\t\tif(!in_array(\"billing_state\", $read_only_fields))\n\t\t\t$order->billing->state = stripslashes($_POST['billing_state']);\n\t\tif(!in_array(\"billing_zip\", $read_only_fields))\n\t\t\t$order->billing->zip = $_POST['billing_zip'];\n\t\tif(!in_array(\"billing_country\", $read_only_fields))\n\t\t\t$order->billing->country = stripslashes($_POST['billing_country']);\n\t\tif(!in_array(\"billing_phone\", $read_only_fields))\n\t\t\t$order->billing->phone = $_POST['billing_phone'];\n\t\tif(!in_array(\"subtotal\", $read_only_fields))\n\t\t\t$order->subtotal = $_POST['subtotal'];\n\t\tif(!in_array(\"tax\", $read_only_fields))\n\t\t\t$order->tax = $_POST['tax'];\n\t\tif(!in_array(\"couponamount\", $read_only_fields))\n\t\t\t$order->couponamount = $_POST['couponamount'];\n\t\tif(!in_array(\"total\", $read_only_fields))\n\t\t\t$order->total = $_POST['total'];\n\t\tif(!in_array(\"payment_type\", $read_only_fields))\n\t\t\t$order->payment_type = $_POST['payment_type'];\n\t\tif(!in_array(\"cardtype\", $read_only_fields))\n\t\t\t$order->cardtype = $_POST['cardtype'];\n\t\tif(!in_array(\"accountnumber\", $read_only_fields))\n\t\t\t$order->accountnumber = $_POST['accountnumber'];\n\t\tif(!in_array(\"expirationmonth\", $read_only_fields))\n\t\t\t$order->expirationmonth = $_POST['expirationmonth'];\n\t\tif(!in_array(\"expirationyear\", $read_only_fields))\n\t\t\t$order->expirationyear = $_POST['expirationyear'];\n\t\tif(!in_array(\"ExpirationDate\", $read_only_fields))\n\t\t\t$order->ExpirationDate = $order->expirationmonth . $order->expirationyear;\n\t\tif(!in_array(\"status\", $read_only_fields))\n\t\t\t$order->status = stripslashes($_POST['status']);\n\t\tif(!in_array(\"gateway\", $read_only_fields))\n\t\t\t$order->gateway = $_POST['gateway'];\n\t\tif(!in_array(\"gateway_environment\", $read_only_fields))\n\t\t\t$order->gateway_environment = $_POST['gateway_environment'];\n\t\tif(!in_array(\"payment_transaction_id\", $read_only_fields))\n\t\t\t$order->payment_transaction_id = $_POST['payment_transaction_id'];\n\t\tif(!in_array(\"subscription_transaction_id\", $read_only_fields))\n\t\t\t$order->subscription_transaction_id = $_POST['subscription_transaction_id'];\n\t\tif(!in_array(\"notes\", $read_only_fields))\n\t\t\t$order->notes = stripslashes($_POST['notes']);\n\n\t\t//affiliate stuff\n\t\t$affiliates = apply_filters(\"pmpro_orders_show_affiliate_ids\", false);\n\t\tif(!empty($affiliates))\n\t\t{\n\t\t\tif(!in_array(\"affiliate_id\", $read_only_fields))\n\t\t\t\t$order->affiliate_id = $_POST['affiliate_id'];\n\t\t\tif(!in_array(\"affiliate_subid\", $read_only_fields))\n\t\t\t\t$order->affiliate_subid = $_POST['affiliate_subid'];\n\t\t}\n\n\t\t//save\n\t\tif($order->saveOrder() !== false)\n\t\t{\n\t\t\t//handle timestamp\n\t\t\tif($order->updateTimestamp($_POST['ts_year'], $_POST['ts_month'], $_POST['ts_day']) !== false)\n\t\t\t{\n\t\t\t\t$pmpro_msg = __(\"Order saved successfully.\", \"pmpro\");\n\t\t\t\t$pmpro_msgt = \"success\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$pmpro_msg = __(\"Error updating order timestamp.\", \"pmpro\");\n\t\t\t\t$pmpro_msgt = \"error\";\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$pmpro_msg = __(\"Error saving order.\", \"pmpro\");\n\t\t\t$pmpro_msgt = \"error\";\n\t\t}\n\t}\n\telse\n\t{\n\t\t//order passed?\n\t\tif(!empty($_REQUEST['order']))\n\t\t{\n\t\t\t$order_id = intval($_REQUEST['order']);\n\t\t\tif($order_id > 0)\n\t\t\t\t$order = new MemberOrder($order_id);\n\t\t\telseif(!empty($_REQUEST['copy']))\n\t\t\t{\n\t\t\t\t$order = new MemberOrder(intval($_REQUEST['copy']));\n\n\t\t\t\t//new id\n\t\t\t\t$order->id = NULL;\n\n\t\t\t\t//new code\n\t\t\t\t$order->code = $order->getRandomCode();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$order = new MemberOrder();\t\t\t//new order\n\n\t\t\t\t//defaults\n\t\t\t\t$order->code = $order->getRandomCode();\n\t\t\t\t$order->user_id = \"\";\n\t\t\t\t$order->membership_id = \"\";\n\t\t\t\t$order->billing->name = \"\";\n\t\t\t\t$order->billing->street = \"\";\n\t\t\t\t$order->billing->city = \"\";\n\t\t\t\t$order->billing->state = \"\";\n\t\t\t\t$order->billing->zip = \"\";\n\t\t\t\t$order->billing->country = \"\";\n\t\t\t\t$order->billing->phone = \"\";\n\t\t\t\t$order->subtotal = \"\";\n\t\t\t\t$order->tax = \"\";\n\t\t\t\t$order->couponamount = \"\";\n\t\t\t\t$order->total = \"\";\n\t\t\t\t$order->payment_type = \"\";\n\t\t\t\t$order->cardtype = \"\";\n\t\t\t\t$order->accountnumber = \"\";\n\t\t\t\t$order->expirationmonth = \"\";\n\t\t\t\t$order->expirationyear = \"\";\n\t\t\t\t$order->status = \"success\";\n\t\t\t\t$order->gateway = pmpro_getOption(\"gateway\");\n\t\t\t\t$order->gateway_environment = pmpro_getOption(\"gateway_environment\");\n\t\t\t\t$order->payment_transaction_id = \"\";\n\t\t\t\t$order->subscription_transaction_id = \"\";\n\t\t\t\t$order->affiliate_id = \"\";\n\t\t\t\t$order->affiliate_subid = \"\";\n\t\t\t\t$order->notes = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\trequire_once(dirname(__FILE__) . \"/admin_header.php\");\n?>\n\n<?php if(!empty($order)) { ?>\n\n\t<h2>\n\t\t<?php if(!empty($order->id)) { ?>\n\t\t\t<?php _e('Order', 'pmpro');?> #<?php echo $order->id?>: <?php echo $order->code?>\n\t\t<?php } else { ?>\n\t\t\t<?php _e('New Order', 'pmpro');?>\n\t\t<?php } ?>\n\t</h2>\n\n\t<?php if(!empty($pmpro_msg)) { ?>\n\t\t<div id=\"message\" class=\"<?php if($pmpro_msgt == \"success\") echo \"updated fade\"; else echo \"error\"; ?>\"><p><?php echo $pmpro_msg?></p></div>\n\t<?php } ?>\n\n\t<form method=\"post\" action=\"\">\n\n\t\t<table class=\"form-table\">\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label>ID:</label></th>\n\t\t\t\t\t<td><?php if(!empty($order->id)) echo $order->id; else echo __(\"This will be generated when you save.\", \"pmpro\");?></td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"code\"><?php _e('Code', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"code\", $read_only_fields)) { echo $order->code; } else { ?>\n\t\t\t\t\t\t\t<input id=\"code\" name=\"code\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->code);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<?php if($order_id < 0) { ?><small class=\"pmpro_lite\"><?php _e('Randomly generated for you.', 'pmpro');?></small><?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"user_id\"><?php _e('User ID', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"user_id\", $read_only_fields) && $order_id > 0) { echo $order->user_id; } else { ?>\n\t\t\t\t\t\t\t<input id=\"user_id\" name=\"user_id\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->user_id);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"membership_id\"><?php _e('Membership Level ID', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"membership_id\", $read_only_fields) && $order_id > 0) { echo $order->membership_id; } else { ?>\n\t\t\t\t\t\t\t<input id=\"membership_id\" name=\"membership_id\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->membership_id);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_name\"><?php _e('Billing Name', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"billing_name\", $read_only_fields) && $order_id > 0) { echo $order->billing_name; } else { ?>\n\t\t\t\t\t\t\t<input id=\"billing_name\" name=\"billing_name\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->billing->name);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_street\"><?php _e('Billing Street', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"billing_street\", $read_only_fields) && $order_id > 0) { echo $order->billing_street; } else { ?>\n\t\t\t\t\t\t\t<input id=\"billing_street\" name=\"billing_street\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->billing->street);?>\" /></td>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_city\"><?php _e('Billing City', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"billing_city\", $read_only_fields) && $order_id > 0) { echo $order->billing_city; } else { ?>\n\t\t\t\t\t\t\t<input id=\"billing_city\" name=\"billing_city\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->billing->city);?>\" /></td>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_state\"><?php _e('Billing State', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"billing_state\", $read_only_fields) && $order_id > 0) { echo $order->billing_state; } else { ?>\n\t\t\t\t\t\t\t<input id=\"billing_state\" name=\"billing_state\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->billing->state);?>\" /></td>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_zip\"><?php _e('Billing Postal Code', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"billing_zip\", $read_only_fields) && $order_id > 0) { echo $order->billing_zip; } else { ?>\n\t\t\t\t\t\t\t<input id=\"billing_zip\" name=\"billing_zip\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->billing->zip);?>\" /></td>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_country\"><?php _e('Billing Country', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"billing_country\", $read_only_fields) && $order_id > 0) { echo $order->billing_country; } else { ?>\n\t\t\t\t\t\t\t<input id=\"billing_country\" name=\"billing_country\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->billing->country);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"billing_phone\"><?php _e('Billing Phone', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"billing_phone\", $read_only_fields) && $order_id > 0) { echo $order->billing_phone; } else { ?>\n\t\t\t\t\t\t\t<input id=\"billing_phone\" name=\"billing_phone\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->billing->phone);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"subtotal\"><?php _e('Sub Total', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"subtotal\", $read_only_fields) && $order_id > 0) { echo $order->subtotal; } else { ?>\n\t\t\t\t\t\t\t<input id=\"subtotal\" name=\"subtotal\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($order->subtotal);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"tax\"><?php _e('Tax', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"tax\", $read_only_fields) && $order_id > 0) { echo $order->tax; } else { ?>\n\t\t\t\t\t\t\t<input id=\"tax\" name=\"tax\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($order->tax);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"couponamount\"><?php _e('Coupon Amount', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"couponamount\", $read_only_fields) && $order_id > 0) { echo $order->couponamount; } else { ?>\n\t\t\t\t\t\t\t<input id=\"couponamount\" name=\"couponamount\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($order->couponamount);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"total\"><?php _e('Total', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"total\", $read_only_fields) && $order_id > 0) { echo $order->total; } else { ?>\n\t\t\t\t\t\t\t<input id=\"total\" name=\"total\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($order->total);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<small class=\"pmpro_lite\"><?php _e('Should be subtotal + tax - couponamount.', 'pmpro');?></small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"payment_type\"><?php _e('Payment Type', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"payment_type\", $read_only_fields) && $order_id > 0) { echo $order->payment_type; } else { ?>\n\t\t\t\t\t\t\t<input id=\"payment_type\" name=\"payment_type\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->payment_type);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<small class=\"pmpro_lite\"><?php _e('e.g. PayPal Express, PayPal Standard, Credit Card.', 'pmpro');?></small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"cardtype\"><?php _e('Card Type', 'pmpro');?></label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"cardtype\", $read_only_fields) && $order_id > 0) { echo $order->cardtype; } else { ?>\n\t\t\t\t\t\t\t<input id=\"cardtype\" name=\"cardtype\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->cardtype);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<small class=\"pmpro_lite\"><?php _e('e.g. Visa, MasterCard, AMEX, etc', 'pmpro');?></small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"accountnumber\"><?php _e('Account Number', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"accountnumber\", $read_only_fields) && $order_id > 0) { echo $order->accountnumber; } else { ?>\n\t\t\t\t\t\t\t<input id=\"accountnumber\" name=\"accountnumber\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->accountnumber);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<small class=\"pmpro_lite\"><?php _e('Obscure all but last 4 digits.', 'pmpro');?></small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<?php if(in_array(\"ExpirationDate\", $read_only_fields) && $order_id > 0) { echo $order->ExpirationDate; } else { ?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"expirationmonth\"><?php _e('Expiration Month', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input id=\"expirationmonth\" name=\"expirationmonth\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($order->expirationmonth);?>\" />\n\t\t\t\t\t\t<small class=\"pmpro_lite\">MM</small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"expirationyear\"><?php _e('Expiration Year', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input id=\"expirationyear\" name=\"expirationyear\" type=\"text\" size=\"10\" value=\"<?php echo esc_attr($order->expirationyear);?>\" />\n\t\t\t\t\t\t<small class=\"pmpro_lite\">YYYY</small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<?php } ?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"status\"><?php _e('Status', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"status\", $read_only_fields) && $order_id > 0) { echo $order->status; } else { ?>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$statuses = array();\n\t\t\t\t\t\t\t$default_statuses = array(\"\", \"success\", \"cancelled\", \"review\", \"token\", \"refunded\", \"pending\");\n\t\t\t\t\t\t\t$used_statuses = $wpdb->get_col(\"SELECT DISTINCT(status) FROM $wpdb->pmpro_membership_orders\");\n\t\t\t\t\t\t\t$statuses = array_unique(array_merge($default_statuses, $used_statuses));\n\t\t\t\t\t\t\tasort($statuses);\n\t\t\t\t\t\t\t$statuses = apply_filters(\"pmpro_order_statuses\", $statuses);\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<select id=\"status\" name=\"status\">\n\t\t\t\t\t\t\t<?php foreach($statuses as $status) { ?>\n\t\t\t\t\t\t\t\t<option value=\"<?php echo esc_attr($status);?>\" <?php selected($order->status, $status);?>><?php echo $status;?></option>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"gateway\"><?php _e('Gateway', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"gateway\", $read_only_fields) && $order_id > 0) { echo $order->gateway; } else { ?>\n\t\t\t\t\t\t<select id=\"gateway\" name=\"gateway\" onchange=\"pmpro_changeGateway(jQuery(this).val());\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t$pmpro_gateways = pmpro_gateways();\n\t\t\t\t\t\t\t\tforeach($pmpro_gateways as $pmpro_gateway_name => $pmpro_gateway_label)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t<option value=\"<?php echo esc_attr($pmpro_gateway_name);?>\" <?php selected($order->gateway, $pmpro_gateway_name);?>><?php echo $pmpro_gateway_label;?></option>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"gateway_environment\"><?php _e('Gateway Environment', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"gateway_environment\", $read_only_fields) && $order_id > 0) { echo $order->gateway_environment; } else { ?>\n\t\t\t\t\t\t<select name=\"gateway_environment\">\n\t\t\t\t\t\t\t<option value=\"sandbox\" <?php if($order->gateway_environment == \"sandbox\") { ?>selected=\"selected\"<?php } ?>><?php _e('Sandbox/Testing', 'pmpro');?></option>\n\t\t\t\t\t\t\t<option value=\"live\" <?php if($order->gateway_environment == \"live\") { ?>selected=\"selected\"<?php } ?>><?php _e('Live/Production', 'pmpro');?></option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"payment_transaction_id\"><?php _e('Payment Transaction ID', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"payment_transaction_id\", $read_only_fields) && $order_id > 0) { echo $order->payment_transaction_id; } else { ?>\n\t\t\t\t\t\t\t<input id=\"payment_transaction_id\" name=\"payment_transaction_id\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->payment_transaction_id);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<small class=\"pmpro_lite\"><?php _e('Generated by the gateway. Useful to cross reference orders.', 'pmpro');?></small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"subscription_transaction_id\"><?php _e('Subscription Transaction ID', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"subscription_transaction_id\", $read_only_fields) && $order_id > 0) { echo $order->subscription_transaction_id; } else { ?>\n\t\t\t\t\t\t\t<input id=\"subscription_transaction_id\" name=\"subscription_transaction_id\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->subscription_transaction_id);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<small class=\"pmpro_lite\"><?php _e('Generated by the gateway. Useful to cross reference subscriptions.', 'pmpro');?></small>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"ts_month\"><?php _e('Date', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"timestamp\", $read_only_fields) && $order_id > 0) { echo date(option(\"date_format\"), $order->timestamp); } else { ?>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t//set up date vars\n\t\t\t\t\t\t\tif(!empty($order->timestamp))\n\t\t\t\t\t\t\t\t$timestamp = $order->timestamp;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t$timestamp = current_time('timestamp');\n\t\t\t\t\t\t\t$year = date(\"Y\", $timestamp);\n\t\t\t\t\t\t\t$month = date(\"n\", $timestamp);\n\t\t\t\t\t\t\t$day = date(\"j\", $timestamp);\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<select id=\"ts_month\" name=\"ts_month\">\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tfor($i = 1; $i < 13; $i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<option value=\"<?php echo $i?>\" <?php if($i == $month) { ?>selected=\"selected\"<?php } ?>><?php echo date(\"M\", strtotime($i . \"/1/\" . $year, current_time(\"timestamp\")))?></option>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<input name=\"ts_day\" type=\"text\" size=\"2\" value=\"<?php echo esc_attr($day);?>\" />\n\t\t\t\t\t\t<input name=\"ts_year\" type=\"text\" size=\"4\" value=\"<?php echo esc_attr($year);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<?php\n\t\t\t\t\t$affiliates = apply_filters(\"pmpro_orders_show_affiliate_ids\", false);\n\t\t\t\t\tif(!empty($affiliates)) {\n\t\t\t\t?>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"affiliate_id\"><?php _e('Affiliate ID', 'pmpro');?>Affiliate ID:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"affiliate_id\", $read_only_fields) && $order_id > 0) { echo $order->affiliate_id; } else { ?>\n\t\t\t\t\t\t\t<input id=\"affiliate_id\" name=\"affiliate_id\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->affiliate_id);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"affiliate_subid\"><?php _e('Affiliate SubID', 'pmpro');?>Affiliate SubID:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"affiliate_subid\", $read_only_fields) && $order_id > 0) { echo $order->affiliate_subid; } else { ?>\n\t\t\t\t\t\t\t<input id=\"affiliate_subid\" name=\"affiliate_subid\" type=\"text\" size=\"50\" value=\"<?php echo esc_attr($order->affiliate_subid);?>\" />\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<?php } ?>\n\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"row\" valign=\"top\"><label for=\"notes\"><?php _e('Notes', 'pmpro');?>:</label></th>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<?php if(in_array(\"notes\", $read_only_fields) && $order_id > 0) { echo $order->notes; } else { ?>\n\t\t\t\t\t\t\t<textarea id=\"notes\" name=\"notes\" rows=\"5\" cols=\"80\"><?php echo esc_textarea($order->notes);?></textarea>\n\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t\t<?php do_action(\"pmpro_after_order_settings\", $order); ?>\n\n\t\t\t</tbody>\n\t\t</table>\n\n\t\t<p class=\"submit topborder\">\n\t\t\t<input name=\"order\" type=\"hidden\" value=\"<?php if(!empty($order->id)) echo $order->id; else echo $order_id;?>\" />\n\t\t\t<input name=\"save\" type=\"submit\" class=\"button-primary\" value=\"<?php _e('Save Order', 'pmpro');?>\" />\n\t\t\t<input name=\"cancel\" type=\"button\" class=\"cancel button-secondary\" value=\"<?php _e('Cancel', 'pmpro');?>\" onclick=\"location.href='<?php echo get_admin_url(NULL, '/admin.php?page=pmpro-orders')?>';\" />\n\t\t</p>\n\n\t</form>\n\n<?php } else { ?>\n\n\t<form id=\"posts-filter\" method=\"get\" action=\"\">\n\t<h2>\n\t\t<?php _e('Orders', 'pmpro');?>\n\t\t<a href=\"admin.php?page=pmpro-orders&order=-1\" class=\"add-new-h2\">+ <?php _e('Add New Order', 'pmpro');?></a>\n\n\t\t<?php\n\t\t\t//build the export URL\n\t\t\t$export_url = admin_url('admin-ajax.php') . \"?action=orders_csv\";\n\t\t\t$url_params = array(\n\t\t\t\t\"filter\"=>$filter,\n\t\t\t\t\"s\"=>$s,\n\t\t\t\t\"l\"=>$l,\n\t\t\t\t\"start-month\"=>$start_month,\n\t\t\t\t\"start-day\"=>$start_day,\n\t\t\t\t\"start-year\"=>$start_year,\n\t\t\t\t\"end-month\"=>$end_month,\n\t\t\t\t\"end-day\"=>$end_day,\n\t\t\t\t\"end-year\"=>$end_year,\n\t\t\t\t\"predefined-date\"=>$predefined_date,\n\t\t\t\t\"status\"=>$status\n\t\t\t);\n\t\t\t$export_url = add_query_arg($url_params, $export_url);\n\t\t?>\n\t\t<a target=\"_blank\" href=\"<?php echo $export_url;?>\" class=\"add-new-h2\"><?php _e('Export to CSV', 'pmpro');?></a>\n\t</h2>\n\n\n\n\t<?php if(!empty($pmpro_msg)) { ?>\n\t\t<div id=\"message\" class=\"<?php if($pmpro_msgt == \"success\") echo \"updated fade\"; else echo \"error\"; ?>\"><p><?php echo $pmpro_msg?></p></div>\n\t<?php } ?>\n\n\n\t<ul class=\"subsubsub\">\n\t\t<li>\n\t\t\t<?php _ex('Show', 'Dropdown label, e.g. Show Daily Orders for January', 'pmpro')?>\n\t\t\t<select id=\"filter\" name=\"filter\">\n\t\t\t\t<option value=\"all\" <?php selected($filter, \"all\");?>><?php _e('All', 'pmpro');?></option>\n\t\t\t\t<option value=\"within-a-date-range\" <?php selected($filter, \"within-a-date-range\");?>><?php _e('Within a Date Range', 'pmpro');?></option>\n\t\t\t\t<option value=\"predefined-date-range\" <?php selected($filter, \"predefined-date-range\");?>><?php _e('Predefined Date Range', 'pmpro');?></option>\n\t\t\t\t<option value=\"within-a-level\" <?php selected($filter, \"within-a-level\");?>><?php _e('Within a Level', 'pmpro');?></option>\n\t\t\t\t<option value=\"within-a-status\" <?php selected($filter, \"within-a-status\");?>><?php _e('Within a Status', 'pmpro');?></option>\n\t\t\t</select>\n\n\t\t\t<span id=\"from\"><?php _ex('From', 'Dropdown label', 'pmpro')?></span>\n\n\t\t\t<select id=\"start-month\" name=\"start-month\">\n\t\t\t\t<?php for($i = 1; $i < 13; $i++) { ?>\n\t\t\t\t\t<option value=\"<?php echo $i;?>\" <?php selected($start_month, $i);?>><?php echo date(\"F\", mktime(0, 0, 0, $i, 2));?></option>\n\t\t\t\t<?php } ?>\n\t\t\t</select>\n\n\t\t\t<input id='start-day' name=\"start-day\" type=\"text\" size=\"2\" value=\"<?php echo esc_attr($start_day);?>\" />\n\t\t\t<input id='start-year' name=\"start-year\" type=\"text\" size=\"4\" value=\"<?php echo esc_attr($start_year);?>\" />\n\n\n\t\t\t<span id=\"to\"><?php _ex('To', 'Dropdown label', 'pmpro')?></span>\n\n\t\t\t<select id=\"end-month\" name=\"end-month\">\n\t\t\t\t<?php for($i = 1; $i < 13; $i++) { ?>\n\t\t\t\t\t<option value=\"<?php echo $i;?>\" <?php selected($end_month, $i);?>><?php echo date(\"F\", mktime(0, 0, 0, $i,2));?></option>\n\t\t\t\t<?php } ?>\n\t\t\t</select>\n\n\n\t\t\t<input id='end-day' name=\"end-day\" type=\"text\" size=\"2\" value=\"<?php echo esc_attr($end_day);?>\" />\n\t\t\t<input id='end-year' name=\"end-year\" type=\"text\" size=\"4\" value=\"<?php echo esc_attr($end_year);?>\" />\n\n\t\t\t<span id=\"filterby\"><?php _ex('filter by ', 'Dropdown label', 'pmpro')?></span>\n\n\t\t\t<select id=\"predefined-date\" name=\"predefined-date\">\n\n\t\t\t\t\t<option value=\"<?php echo \"This Month\";?>\" <?php selected($predefined_date, \"This Month\");?>><?php echo \"This Month\";?></option>\n\t\t\t\t\t<option value=\"<?php echo \"Last Month\";?>\" <?php selected($predefined_date, \"Last Month\");?>><?php echo \"Last Month\";?></option>\n\t\t\t\t\t<option value=\"<?php echo \"This Year\";?>\" <?php selected($predefined_date, \"This Year\");?>><?php echo \"This Year\";?></option>\n\t\t\t\t\t<option value=\"<?php echo \"Last Year\";?>\" <?php selected($predefined_date, \"Last Year\");?>><?php echo \"Last Year\";?></option>\n\n\t\t\t</select>\n\n\t\t\t<?php\n\t\t\t//Note: only orders belonging to current levels can be filtered. There is no option for orders belonging to deleted levels\n\t\t\t $levels = pmpro_getAllLevels();\n\n\t\t\t?>\n\t\t\t<select id=\"l\" name=\"l\">\n\t\t\t<?php foreach($levels as $level) { ?>\n\t\t\t\t<option value=\"<?php echo $level->id;?>\" <?php selected($l, $level->id);?>><?php echo $level->name;?></option>\n\t\t\t<?php } ?>\n\n\t\t\t</select>\n\n\t<?php\n\t$statuses = array();\n\t$default_statuses = array(\"\", \"success\", \"cancelled\", \"review\", \"token\", \"refunded\");\n\t$used_statuses = $wpdb->get_col(\"SELECT DISTINCT(status) FROM $wpdb->pmpro_membership_orders\");\n\t$statuses = array_unique(array_merge($default_statuses, $used_statuses));\n\tasort($statuses);\n\t$statuses = apply_filters(\"pmpro_order_statuses\", $statuses);\n\t?>\n\t<select id=\"status\" name=\"status\">\n\t\t<?php foreach($statuses as $the_status) { ?>\n\t\t<option value=\"<?php echo esc_attr($the_status);?>\" <?php selected($the_status, $status);?>><?php echo $the_status;?></option>\n\t\t<?php } ?>\n\t</select>\n\n\n\t\t<input id=\"submit\" type=\"submit\" value=\"<?php _ex('Filter', 'Submit button value.', 'pmpro');?>\" />\n\t\t</li>\n\t</ul>\n\n\t<script>\n\t\t//update month/year when period dropdown is changed\n\t\tjQuery(document).ready(function() {\n\t\t\tjQuery('#filter').change(function() {\n\t\t\t\tpmpro_ShowMonthOrYear();\n\t\t\t});\n\t\t});\n\n\t\tfunction pmpro_ShowMonthOrYear()\n\t\t{\n\t\t\tvar filter = jQuery('#filter').val();\n\t\t\tif(filter == 'all')\n\t\t\t{\n\t\t\t\tjQuery('#start-month').hide();\n\t\t\t\tjQuery('#start-day').hide();\n\t\t\t\tjQuery('#start-year').hide();\n\t\t\t\tjQuery('#end-month').hide();\n\t\t\t\tjQuery('#end-day').hide();\n\t\t\t\tjQuery('#end-year').hide();\n\t\t\t\tjQuery('#predefined-date').hide();\n\t\t\t\tjQuery('#status').hide();\n\t\t\t\tjQuery('#l').hide();\n\t\t\t\tjQuery('#from').hide();\n\t\t\t\tjQuery('#to').hide();\n\t\t\t\tjQuery('#submit').show();\n\t\t\t\tjQuery('#filterby').hide();\n\t\t\t}\n\t\t\telse if(filter == 'within-a-date-range')\n\t\t\t{\n\t\t\t\tjQuery('#start-month').show();\n\t\t\t\tjQuery('#start-day').show();\n\t\t\t\tjQuery('#start-year').show();\n\t\t\t\tjQuery('#end-month').show();\n\t\t\t\tjQuery('#end-day').show();\n\t\t\t\tjQuery('#end-year').show();\n\t\t\t\tjQuery('#predefined-date').hide();\n\t\t\t\tjQuery('#status').hide();\n\t\t\t\tjQuery('#l').hide();\n\t\t\t\tjQuery('#submit').show();\n\t\t\t\tjQuery('#from').show();\n\t\t\t\tjQuery('#to').show();\n\t\t\t\tjQuery('#filterby').hide();\n\t\t\t}\n\t\t\telse if(filter == 'predefined-date-range')\n\t\t\t{\n\t\t\t\tjQuery('#start-month').hide();\n\t\t\t\tjQuery('#start-day').hide();\n\t\t\t\tjQuery('#start-year').hide();\n\t\t\t\tjQuery('#end-month').hide();\n\t\t\t\tjQuery('#end-day').hide();\n\t\t\t\tjQuery('#end-year').hide();\n\t\t\t\tjQuery('#predefined-date').show();\n\t\t\t\tjQuery('#status').hide();\n\t\t\t\tjQuery('#l').hide();\n\t\t\t\tjQuery('#submit').show();\n\t\t\t\tjQuery('#from').hide();\n\t\t\t\tjQuery('#to').hide();\n\t\t\t\tjQuery('#filterby').show();\n\t\t\t}\n\t\t\telse if(filter == 'within-a-level')\n\t\t\t{\n\t\t\t\tjQuery('#start-month').hide();\n\t\t\t\tjQuery('#start-day').hide();\n\t\t\t\tjQuery('#start-year').hide();\n\t\t\t\tjQuery('#end-month').hide();\n\t\t\t\tjQuery('#end-day').hide();\n\t\t\t\tjQuery('#end-year').hide();\n\t\t\t\tjQuery('#predefined-date').hide();\n\t\t\t\tjQuery('#status').hide();\n\t\t\t\tjQuery('#l').show();\n\t\t\t\tjQuery('#submit').show();\n\t\t\t\tjQuery('#from').hide();\n\t\t\t\tjQuery('#to').hide();\n\t\t\t\tjQuery('#filterby').show();\n\t\t\t}\n\t\t\telse if(filter == 'within-a-status')\n\t\t\t{\n\t\t\t\tjQuery('#start-month').hide();\n\t\t\t\tjQuery('#start-day').hide();\n\t\t\t\tjQuery('#start-year').hide();\n\t\t\t\tjQuery('#end-month').hide();\n\t\t\t\tjQuery('#end-day').hide();\n\t\t\t\tjQuery('#end-year').hide();\n\t\t\t\tjQuery('#predefined-date').hide();\n\t\t\t\tjQuery('#status').show();\n\t\t\t\tjQuery('#l').hide();\n\t\t\t\tjQuery('#submit').show();\n\t\t\t\tjQuery('#from').hide();\n\t\t\t\tjQuery('#to').hide();\n\t\t\t\tjQuery('#filterby').show();\n\t\t\t}\n\t\t}\n\n\t\tpmpro_ShowMonthOrYear();\n\n\n\t</script>\n\n\t<p class=\"search-box\">\n\t\t<label class=\"hidden\" for=\"post-search-input\"><?php _e('Search Orders', 'pmpro');?>:</label>\n\t\t<input type=\"hidden\" name=\"page\" value=\"pmpro-orders\" />\n\t\t<input id=\"post-search-input\" type=\"text\" value=\"<?php echo esc_attr($s);?>\" name=\"s\"/>\n\t\t<input class=\"button\" type=\"submit\" value=\"<?php _e('Search Orders', 'pmpro');?>\"/>\n\t</p>\n\n\t<?php\n\t\t//some vars for the search\n\t\tif(isset($_REQUEST['pn']))\n\t\t\t$pn = intval($_REQUEST['pn']);\n\t\telse\n\t\t\t$pn = 1;\n\n\t\tif(isset($_REQUEST['limit']))\n\t\t\t$limit = intval($_REQUEST['limit']);\n\t\telse\n\t\t\t$limit = 15;\n\n\t\t$end = $pn * $limit;\n\t\t$start = $end - $limit;\n\n\t\t//filters\n\t\tif($filter == \"all\" || !$filter)\n\t\t\t\t$condition = \"1=1\";\n\t\telseif($filter == \"within-a-date-range\")\n\t\t{\n\t\t\t$start_date = $start_year.\"-\".$start_month.\"-\".$start_day;\n\t\t\t$end_date = $end_year.\"-\".$end_month.\"-\".$end_day;\n\n\t\t\t//add times to dates\n\t\t\t$start_date =  $start_date . \" 00:00:00\";\n\t\t\t$end_date =  $end_date . \" 23:59:59\";\n\n\t\t\t$condition = \"timestamp BETWEEN '\".esc_sql($start_date).\"' AND '\".esc_sql($end_date).\"'\";\n\t\t}\n\t\telseif($filter == \"predefined-date-range\")\n\t\t{\n\t\t\tif($predefined_date == \"Last Month\")\n\t\t\t{\n\t\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of last month\", current_time(\"timestamp\")));\n\t\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of last month\", current_time(\"timestamp\")));\n\t\t\t}\n\t\t\telseif($predefined_date == \"This Month\")\n\t\t\t{\n\t\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of this month\", current_time(\"timestamp\")));\n\t\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of this month\", current_time(\"timestamp\")));\n\t\t\t}\n\t\t\telseif($predefined_date == \"This Year\")\n\t\t\t{\n\t\t\t\t$year = date('Y');\n\t\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of January $year\", current_time(\"timestamp\")));\n\t\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of December $year\", current_time(\"timestamp\")));\n\t\t\t}\n\n\t\t\telseif($predefined_date == \"Last Year\")\n\t\t\t{\n\t\t\t\t$year = date('Y') - 1;\n\t\t\t\t$start_date = date(\"Y-m-d\", strtotime(\"first day of January $year\", current_time(\"timestamp\")));\n\t\t\t\t$end_date   = date(\"Y-m-d\", strtotime(\"last day of December $year\", current_time(\"timestamp\")));\n\t\t\t}\n\n\t\t\t//add times to dates\n\t\t\t$start_date =  $start_date . \" 00:00:00\";\n\t\t\t$end_date =  $end_date . \" 23:59:59\";\n\n\t\t\t$condition = \"timestamp BETWEEN '\".esc_sql($start_date).\"' AND '\".esc_sql($end_date).\"'\";\n\t\t}\n\t\telseif($filter == \"within-a-level\")\n\t\t{\n\t\t\t$condition = \"membership_id = \" . esc_sql($l);\n\t\t}\n\t\telseif($filter == \"within-a-status\")\n\t\t{\n\t\t\t$condition = \"status = '\" . esc_sql($status) . \"' \";\n\t\t}\n\n\t\t//string search\n\t\tif($s)\n\t\t{\n\t\t\t$sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS o.id FROM $wpdb->pmpro_membership_orders o LEFT JOIN $wpdb->users u ON o.user_id = u.ID LEFT JOIN $wpdb->pmpro_membership_levels l ON o.membership_id = l.id \";\n\n\t\t\t$join_with_usermeta = apply_filters(\"pmpro_orders_search_usermeta\", false);\n\t\t\tif($join_with_usermeta)\n\t\t\t\t$sqlQuery .= \"LEFT JOIN $wpdb->usermeta um ON o.user_id = um.user_id \";\n\n\t\t\t$sqlQuery .= \"WHERE (1=2 \";\n\n\t\t\t$fields = array(\"o.id\", \"o.code\", \"o.billing_name\", \"o.billing_street\", \"o.billing_city\", \"o.billing_state\", \"o.billing_zip\", \"o.billing_phone\", \"o.payment_type\", \"o.cardtype\", \"o.accountnumber\", \"o.status\", \"o.gateway\", \"o.gateway_environment\", \"o.payment_transaction_id\", \"o.subscription_transaction_id\", \"u.user_login\", \"u.user_email\", \"u.display_name\", \"l.name\");\n\n\t\t\tif($join_with_usermeta)\n\t\t\t\t$fields[] = \"um.meta_value\";\n\n\t\t\t$fields = apply_filters(\"pmpro_orders_search_fields\", $fields);\n\n\t\t\tforeach($fields as $field)\n\t\t\t\t$sqlQuery .= \" OR \" . $field . \" LIKE '%\" . esc_sql($s) . \"%' \";\n\t\t\t$sqlQuery .= \") \";\n\n\t\t\t$sqlQuery .= \"AND \" . $condition . \" \";\n\n\t\t\t$sqlQuery .= \"GROUP BY o.id ORDER BY o.id DESC, o.timestamp DESC \";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$sqlQuery = \"SELECT SQL_CALC_FOUND_ROWS id FROM $wpdb->pmpro_membership_orders WHERE \".$condition.\" ORDER BY id DESC, timestamp DESC \";\n\t\t}\n\n\t\t$sqlQuery .= \"LIMIT $start, $limit\";\n\n\t\t$order_ids = $wpdb->get_col($sqlQuery);\n\n\t\t$totalrows = $wpdb->get_var(\"SELECT FOUND_ROWS() as found_rows\");\n\n\t\tif($order_ids)\n\t\t{\n\t\t?>\n\t\t<p class=\"clear\"><?php printf(__(\"%d orders found.\", \"pmpro\"), $totalrows);?></span></p>\n\t\t<?php\n\t\t}\n\t?>\n\t<table class=\"widefat\">\n\t\t<thead>\n\t\t\t<tr class=\"thead\">\n\t\t\t\t<th><?php _e('ID', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Code', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('User', 'pmpro');?></th>\n\t\t\t\t<?php do_action(\"pmpro_orders_extra_cols_header\", $order_ids);?>\n\t\t\t\t<th><?php _e('Membership Level', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Total', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Payment', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Gateway', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Transaction IDs', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Status', 'pmpro');?></th>\n\t\t\t\t<th><?php _e('Date', 'pmpro');?></th>\n\t\t\t\t<th></th>\n\t\t\t\t<th></th>\n\t\t\t\t<th></th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody id=\"orders\" class=\"list:order orders-list\">\n\t\t\t<?php\n\t\t\t\t$count = 0;\n\t\t\t\tforeach($order_ids as $order_id)\n\t\t\t\t{\n\t\t\t\t\t$order = new MemberOrder();\n\t\t\t\t\t$order->nogateway = true;\n\t\t\t\t\t$order->getMemberOrderByID($order_id);\n\t\t\t\t\t?>\n\t\t\t\t\t\t<tr <?php if($count++ % 2 == 0) { ?>class=\"alternate\"<?php } ?>>\n\t\t\t\t\t\t\t<td><a href=\"admin.php?page=pmpro-orders&order=<?php echo $order->id?>\"><?php echo $order->id;?></a></td>\n\t\t\t\t\t\t\t<td><a href=\"admin.php?page=pmpro-orders&order=<?php echo $order->id?>\"><?php echo $order->code;?></a></td>\n\t\t\t\t\t\t\t<td class=\"username column-username\">\n\t\t\t\t\t\t\t\t<?php $order->getUser(); ?>\n\t\t\t\t\t\t\t\t<?php if(!empty($order->user)) { ?>\n\t\t\t\t\t\t\t\t\t<a href=\"user-edit.php?user_id=<?php echo $order->user->ID?>\"><?php echo $order->user->user_login?></a>\n\t\t\t\t\t\t\t\t<?php } else { ?>\n\t\t\t\t\t\t\t\t\t[<?php _e('deleted', 'pmpro');?>]\n\t\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t// Set up the hover actions for this user\n\t\t\t\t\t\t\t\t\t$actions = apply_filters( 'pmpro_orders_user_row_actions', array(), $order->user );\n\t\t\t\t\t\t\t\t\t$action_count = count( $actions );\n\t\t\t\t\t\t\t\t\t$i = 0;\n\t\t\t\t\t\t\t\t\tif($action_count)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$out = '<div class=\"row-actions\">';\n\t\t\t\t\t\t\t\t\t\tforeach ( $actions as $action => $link ) {\n\t\t\t\t\t\t\t\t\t\t\t++$i;\n\t\t\t\t\t\t\t\t\t\t\t( $i == $action_count ) ? $sep = '' : $sep = ' | ';\n\t\t\t\t\t\t\t\t\t\t\t$out .= \"<span class='$action'>$link$sep</span>\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t$out .= '</div>';\n\t\t\t\t\t\t\t\t\t\techo $out;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<?php do_action(\"pmpro_orders_extra_cols_body\", $order);?>\n\t\t\t\t\t\t\t<td><?php echo $order->membership_id;?></td>\n\t\t\t\t\t\t\t<td><?php echo pmpro_formatPrice($order->total);?></td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<?php if(!empty($order->payment_type)) echo $order->payment_type . \"<br />\";?>\n\t\t\t\t\t\t\t\t<?php if(!empty($order->accountnumber)) { ?>\n\t\t\t\t\t\t\t\t\t<?php echo $order->cardtype;?>: x<?php echo last4($order->accountnumber);?><br />\n\t\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t\t<?php if(!empty($order->billing->street)) { ?>\n\t\t\t\t\t\t\t\t\t<?php echo $order->billing->street; ?><br />\n\t\t\t\t\t\t\t\t\t<?php if( $order->billing->city &&  $order->billing->state) { ?>\n\t\t\t\t\t\t\t\t\t\t<?php echo  $order->billing->city?>, <?php echo  $order->billing->state?> <?php echo  $order->billing->zip?>  <?php if(!empty( $order->billing->country)) echo  $order->billing->country?><br />\n\t\t\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t\t\t<?php if(!empty($order->billing->phone)) echo formatPhone($order->billing->phone);?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td><?php echo $order->gateway;?><?php if($order->gateway_environment == \"test\") echo \"(test)\";?></td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<?php _e('Payment', 'pmpro');?>: <?php if(!empty($order->payment_transaction_id)) echo $order->payment_transaction_id; else echo \"N/A\";?>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<?php _e('Subscription', 'pmpro');?>: <?php if(!empty($order->subscription_transaction_id)) echo $order->subscription_transaction_id; else echo \"N/A\";?>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td><?php echo $order->status;?></td>\n\t\t\t\t\t\t\t<td><?php echo date(get_option('date_format'), $order->timestamp);?></td>\n\t\t\t\t\t\t\t<td align=\"center\">\n\t\t\t\t\t\t\t\t<a href=\"admin.php?page=pmpro-orders&order=<?php echo $order->id;?>\"><?php _e('edit', 'pmpro');?></a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td align=\"center\">\n\t\t\t\t\t\t\t\t<a href=\"admin.php?page=pmpro-orders&order=-1&copy=<?php echo $order->id;?>\"><?php _e('copy', 'pmpro');?></a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td align=\"center\">\n\t\t\t\t\t\t\t\t<a href=\"javascript:askfirst('<?php printf(__(\"Deleting orders is permanent and can affect active users. Are you sure you want to delete order %s?\", \"pmpro\"), str_replace(\"'\", \"\", $order->code));?>', 'admin.php?page=pmpro-orders&delete=<?php echo $order->id;?>'); void(0);\"><?php _e('delete', 'pmpro');?></a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<?php\n\t\t\t\t}\n\n\t\t\t\tif(!$order_ids)\n\t\t\t\t{\n\t\t\t\t?>\n\t\t\t\t<tr>\n\t\t\t\t\t<td colspan=\"9\"><p><?php _e('No orders found.', 'pmpro');?></p></td>\n\t\t\t\t</tr>\n\t\t\t\t<?php\n\t\t\t\t}\n\t\t\t?>\n\t\t</tbody>\n\t</table>\n\t</form>\n\n\t<?php\n\t\t//add normal args\n\t\t$pagination_url = add_query_arg($url_params, get_admin_url(NULL, \"/admin.php?page=pmpro-orders\"));\n\t\techo pmpro_getPaginationString($pn, $totalrows, $limit, 1, $pagination_url, \"&limit=$limit&pn=\");\n\t?>\n\n<?php } ?>\n\n<?php\n\trequire_once(dirname(__FILE__) . \"/admin_footer.php\");\n?>\n", "<?php\n\tglobal $pmpro_reports;\n\t\n\trequire_once(dirname(__FILE__) . \"/admin_header.php\");\n\t\n\t//default view, report widgets\n\tif(empty($_REQUEST['report']))\n\t{\t\t\t\t\n\t\t//wrapper\n\t\t?>\n\t\t<div id=\"dashboard-widgets-wrap\">\n\t\t\t<div id=\"dashboard-widgets\" class=\"metabox-holder pmpro_reports-holder columns-2\">\t\n\t\t\t<div id=\"postbox-container-1\" class=\"postbox-container\">\n\t\t\t\t<div id=\"normal-sortables\" class=\"meta-box-sortables ui-sortable\">\n\t\t<?php\n\t\t\n\t\t//report widgets\n\t\t$count = 0;\n\t\t$nreports = count($pmpro_reports);\n\t\t$split = false;\n\t\tforeach($pmpro_reports as $report => $title)\n\t\t{\n\t\t\t//make sure title is translated (since these are set before translations happen)\n\t\t\t$title = __($title, \"pmpro\");\n\t\t\t\n\t\t\t//put half of the report widgets in postbox-container-2\n\t\t\tif(!$split && $count++ > $nreports/2)\n\t\t\t{\n\t\t\t\t$split = true;\n\t\t\t\t?>\n\t\t\t\t</div></div><div id=\"postbox-container-2\" class=\"postbox-container\"><div id=\"side-sortables\" class=\"meta-box-sortables ui-sortable\">\n\t\t\t\t<?php\n\t\t\t}\n\t\t?>\n\t\t<div id=\"pmpro_report_<?php echo $report; ?>\" class=\"postbox pmpro_clickable\" onclick=\"location.href='<?php echo admin_url(\"admin.php?page=pmpro-reports&report=\" . $report);?>';\">\t\t\t\n\t\t\t<h3 class=\"hndle\"><span><?php echo $title; ?></span></h3>\n\t\t\t<div class=\"inside\">\n\t\t\t\t<?php call_user_func(\"pmpro_report_\" . $report . \"_widget\"); ?>\n\t\t\t\t<div style=\"margin-top:10px;border-top: 1px solid #ddd; padding-top: 10px; text-align:center;\">\n\t\t\t\t\t<a class=\"button button-primary\" href=\"<?php echo admin_url(\"admin.php?page=pmpro-reports&report=\" . $report);?>\"><?php _e('Details', 'pmpro');?></a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<?php\n\t\t}\n\t\t\n\t\t//end wrapper\n\t\t?>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<?php\n\t}\n\telse\n\t{\n\t\t//view a single report\n\t\t$report = sanitize_text_field($_REQUEST['report']);\n\t\tcall_user_func(\"pmpro_report_\" . $report . \"_page\");\n\t}\n\t\n\trequire_once(dirname(__FILE__) . \"/admin_footer.php\");\n?>", "=== Paid Memberships Pro ===\r\nContributors: strangerstudios\r\nTags: memberships, membership, authorize.net, ecommerce, paypal, stripe, braintree, restrict access, restrict content, directory site, payflow\r\nRequires at least: 3.5\r\nTested up to: 4.2.2\r\nStable tag: 1.8.4.2\r\n\r\nThe easiest way to GET PAID with your WordPress site. Flexible content control by Membership Level, Reports, Affiliates and Discounts\r\n\r\n== Description ==\r\nSet up unlimited membership levels and provide restricted access to pages, posts, categories, videos, forums, downloads, support, single \"a la carte\" page access, and more. Paid Memberships Pro is flexible enough to fit the needs of almost all online and offline businesses. It works great out of the box, but is easy for developers to customize to fit your needs.\r\n\r\n[youtube http://www.youtube.com/watch?v=33nORRIZaQk]\r\n\r\nPaid Memberships Pro is the community solution for adding paid memberships to your WordPress site. PMPro is 100% GPL. All code, including add-ons, is available for free from the WordPress repository here or on our site at http://www.paidmembershipspro.com. This version in the WordPress repository is the full version of the plugin with no restrictions or additional licenses required. Developers should get involved at [our GitHub page](https://github.com/strangerstudios/paid-memberships-pro/).\r\n\r\n= Integrate with The Most Popular Payment Gateways. =\r\nStripe, Authorize.net, Braintree Payments, and PayPal (Standard, Express, Website Payments Pro, and PayPal Payments Pro/Payflow)\r\n\r\n= Works with Any Theme You Want. =\r\nYour Existing Theme or a Popular Free or Premium Third-Party Theme.\r\n\r\n= Infinitely Configurable, Unlimited Membership Levels. =\r\nSet up the membership levels that best fit your business, whether they are Free, Paid, or Recurring Subscriptions (Annual, Monthly, Weekly, Daily). Offer Custom Trial Periods (Free Trial, Custom-length Trial, 'Introductory' Pricing)\r\n\r\n= Easy-to-Use Admin Pages and Settings. =\r\n1. Membership access by Page/Post/Category\r\n2. Members list with CSV export\r\n3. Easy payment gateway setup\r\n4. Ever expanding list of membership reports\r\n5. Membership discounts with customizable price rules\r\n\r\n= Control the User-Experience from Start to Finish. =\r\nYour members can update their billing information or cancel their account directly on your site. Any active subscription will be cancelled at the payment gateway for you.\r\n\r\n= Integrate with Top Third Party Tools. =\r\nPMPro integrates with Mailchimp, Constant Contact, AWeber, KISSMetrics, Infusionsoft, WP Courseware, LearnDash, Post Affiliate Pro, bbPress, WooCommerce, and many more popular third party tools.\r\n\r\n= Free Add-ons to Customize and Extend PMPro. =\r\nExtensions, sister plugins, and other bits of code to customize your implementation and help you integrate with 3rd party services or other plugins. All open source and available for free under the GPL v2 license.\r\n\r\n[View the PMPro Add-Ons](http://www.paidmembershipspro.com/add-ons/)\r\n\r\n== Installation ==\r\n\r\n= Download, Install and Activate! =\r\n1. Download the latest version of the plugin.\r\n2. Unzip the downloaded file to your computer.\r\n3. Upload the /paid-memberships-pro/ directory to the /wp-content/plugins/ directory of your site.\r\n4. Activate the plugin through the 'Plugins' menu in WordPress.\r\n\r\n= Complete the Initial Plugin Setup =\r\nThe plugin will walk you through initial setup - basic steps are outlined below.\r\n\r\n1. Add one or more Membership Levels\r\n2. Set up the PMPro Pages\r\n3. Configure your Payment Gateway and SSL\r\n4. Customize Email Settings\r\n5. Review Advanced Settings (best left untouched).\r\n\r\n[A tutorial video of the initial plugin setup is available here](http://www.paidmembershipspro.com/documentation/initial-plugin-setup/tutorial-video/).\r\n\r\n[Written instructions on initial plugin setup are available here](http://www.paidmembershipspro.com/documentation/initial-plugin-setup/).\r\n\r\n== Frequently Asked Questions ==\r\n\r\n= I need help installing, configuring, or customizing the plugin. =\r\nPlease visit [our premium support site at http://www.paidmembershipspro.com](http://www.paidmembershipspro.com) for more documentation and our support forums.\r\n\r\n= I found a bug in the plugin. =\r\nPlease post it in the [WordPress support forum](http://wordpress.org/tags/paid-memberships-pro?forum_id=10) and we'll fix it right away. Thanks for helping. \r\n\r\n= My site is broken or blank or not letting me log in after activating Paid Memberships Pro =\r\nThis is typically caused by a conflict with another plugin that is trying to redirect around the login/register pages or trying to redirect from HTTP to HTTPS, etc.\r\n\r\nTo regain access to your site, FTP to your site and rename the wp-content/plugins/paid-memberships-pro folder to wp-content/plugins/paid-memberhsips-pro-d (or anything different). Now WP will not be able to find PMPro, and you can gain access to /wp-admin/ again. From there, visit the plugins page to fully deactivate Paid Memberships Pro. (You'll want to rename the folder back to paid-memberhsips-pro again.)\r\n\r\nLong term, you will need to find and fix the conflict. We can usually do this for you very quickly if you sign up for support at http://www.paidmembershipspro.com/pricing/ and send us your WP admin and FTP credentials.\r\n\r\n= Does PMPro Support Multisite/Network Installs? =\r\n\"Supporting multisite\" means different things to different people.\r\n\r\nOut of the box PMPro will basically act as a stand alone plugin for each site. Each site has its own list of membership levels, members, payment settings, etc.\r\n\r\nI've written a plugin [PMPro-Network](http://www.paidmembershipspro.com/add-ons/plugins-on-github/pmpro-network-multisite-membership/) that shows the basics for allowing users who signs up for a membership at one site to be able to create or reclaim their own site under the multisite setup. It's powerful stuff.\r\n\r\nIf you would like more help using PMPro on a network install, sign up for support at http://www.paidmembershipspro.com.\r\n\r\n= Does PMPro Support X? =\r\nNot sure? You can find out by doing a bit a research.\r\n\r\n1. [Check our compatibility page](http://www.paidmembershipspro.com/compatibility/).\r\n2. [Check our add ons](http://www.paidmembershipspro.com/add-ons/).\r\n3. [Do a search on our site](http://www.paidmembershipspro.com/).\r\n4. [Ask in the forums here](http://wordpress.org/tags/paid-memberships-pro?forum_id=10).\r\n\r\n== Screenshots ==\r\n\r\n1. Set up the membership levels that best fit your business, whether they are Free, Paid, or Subscriptions (Annual, Monthly, Weekly, Daily). Offer Custom Trial Periods (Free Trial, Custom-length Trial, 'Introductory' Pricing)\r\n2. Easy to use Membership Access Settings by Page, Post, or Category. Shortcodes to display restricted content inline. Developer-friendly hooks to restrict access any way you need.\r\n3. Members are WordPress Users. PMPro provides a unique interface to view, filter and search Members or export your Members List.\r\n4. Offer Membership Discounts with specific price rules (restricted by level, unique pricing for each level, # of uses, expiration date.)\r\n\r\n= 1.8.4.3 = \r\n* SECURITY PATCH: Fixes to Cross Site Scripting vulnerabilities in the PMPro settings pages in the WordPress dashboard. [Advisory ID HTB23264](https://www.htbridge.com/advisory/HTB23264). (Thanks, High-Tech Bridge Security Research Lab)\r\n\r\n== Changelog == \r\n= 1.8.4.2 =\r\n* BUG: Fixed bug where dropdown to set the account page in the page settings was showing up twice.\r\n* BUG: Fixed warning in pmpro_account shortcode.\r\n* BUG: Grammar fixes in admin pages. \"Setup\" changed to \"Set Up\" when used as a verb. (Thanks, sumobi on GitHub)\r\n* ENHANCEMENT: If the option is set, terms of service page embedded on the checkout page will not be passed through do_shortcode so shortcodes get processed in the text. (Thanks, cliffordp on GitHub)\r\n* ENHANCEMENT: The pmpro_account shortcode will now accept \"membership\" or \"memberships\" for the section name.\r\n\r\n= 1.8.4.1 =\r\n* BUG: Fixed issue introduced in 1.8.4 where levels wouldn't show up in the front end if they hadn't been reordered.\r\n\r\n= 1.8.4 =\r\n* BUG: Fixed the Stripe webhook to work on new orders that are storing the subscription id instead of the customer id in the subscription_transaction_id field. (Thanks, nickd32 on GitHub)\r\n* BUG: Fixed issue where the name and email address of customers was not being sent to Stripe if existing members checked out while the \"show billing address\" option was set to false.\r\n* BUG: Fixed bug where users who checked out with the Braintree Payments gateway could checkout again using their on file credit card if an invalid credit card was entered at checkout the second time. (Thanks, patternsinthecloud)\r\n* BUG: Updated the 2Checkout PHP API library and fixed some issues with 2Checkout integration.\r\n* BUG: Fixed issue where custom roles had to have pmpro_membershiplevels capability to view other PMPro-related dashboard pages. (Thanks, squarelines)\r\n* ENHANCEMENT: Added the ability to order levels on the Levels page by drag and drop in the WordPress admin.\r\n* ENHANCEMENT: Now hiding tabs in the PMPro settings if a user doesn't have access to that tab (but does have access to other tabs).\r\n* ENHANCEMENT: Converted all files to unix format and removed trailing whitespace. This has no functional change on the plugin, but helps developers who are contributing. (Thanks, meths on GitHub)\r\n* ENHANCEMENT: New Danish translation. (Thanks, Morten Stenb\u00e6k and Frederik Hermund)\r\n\r\n= 1.8.3.1 =\r\n* BUG: Changed some uses of $wpdb->base_prefix to $wpdb->prefix to fix multisite support.\r\n* BUG: Wrapped pmpro_isDateThisMonth in a function_exists check since some addons already have this defined.\r\n\r\n= 1.8.3 =\r\n* SECURITY PATCH: The pmpro_getOption function has been updated to not set values from $_REQUEST when available. This allowed malicious users to override PMPro settings on single page loads allowing them to inject text into pages and do other \"bad things\". (Thanks, Charles Hill)\r\n* SECURITY PATCH: Many calls to pmpro_getOption(\"gateway\") were changed to use pmpro_getGateway which specifically allowed for overriding that one value via a request parameter (the validity of the gateway is double checked).\r\n* BUG: No longer showing the number of visits/views/logins \"this month\" when the user hasn't visited in over a month. (Thanks, Kenneth)\r\n* BUG: Fix for email from names with apostrophes and quotes in them.\r\n* BUG: Using current_time() and escaping form values better in logins report.\r\n* BUG: Fixed issue in pmpro_generateUsername() when checking for duplicates. (Thanks, Ruslan)\r\n* BUG: Fixed issue where $user var wasn't set for emails sent out in the Braintree webhook script. (Thanks, Charles Hill)\r\n* ENHANCEMENT: Added pmpro_account_bullets_top and pmpro_account_bullets_bottom hooks to add content to the accounts page.\r\n* ENHANCEMENT: Added pmpro_get_recurring_payments_profile_details_nvpstr, pmpro_manage_recurring_payments_profile_status_nvpstr, pmpro_create_recurring_payments_profile_nvpstr, pmpro_do_express_checkout_payment_nvpstr, and pmpro_get_express_checkout_details_nvpstr hooks to filter specific nvp strings in the PayPal Express integration.\r\n* ENHANCEMENT: Added labels to checkboxes in the dashboard settings pages.\r\n* ENHANCEMENT: Can now use the [pmpro_account] shortcode on other pages/widgets/etc. Can also limit to specific sections [pmpro_account sections='membership,profile,invoices,links'] just remove sections from that list.\r\n* ENHANCEMENT: Changed all uses of the global $table_prefix to use $wpdb->base_prefix to aid in compatibility when loading WordPress with other PHP code (e.g. phpBB). (Thanks, Dion)\r\n* ENHANCEMENT: The notification script was updated to point to notifications.paidmembershipspro.com instead of www.paidmembershipspro.com/notifications/. This allows us to keep our notification script on a different server. This script is used to insert notifications into the PMPro admin pages when important updates are available.\r\n\r\n= 1.8.2.2 =\r\n* BUG: Fixed conflicts when other plugins with older Recaptcha libraries are also activated. Prefixed our copy of the Recaptcha library and functions with pmpro_ and added code to handle cases where an older version of recaptch is used at checkout.\r\n* BUG: Fixed warnings in pmpro_formatPrice. (Thanks, Andrea Carraro)\r\n\r\n= 1.8.2.1 =\r\n* BUG: Fixed issue where admins would get emails RE membership changes whenever a profile was updated even if the membership wasn't changed. (Thanks, chrisw123)\r\n\r\n= 1.8.2 =\r\n* BUG: Fixed issue where calls to pmpro_hasMembershipLevel() using level names wasn't working. (Thanks, Scott Slone)\r\n* BUG: Fixed issue with memberslistcsv capabilities. (Thanks, Arnaud Devic)\r\n* BUG: Fixed fatal error that could come up sometimes when PMPro could not find a subscription for a user in Stripe. (Thanks, Chris Eller)\r\n* ENHANCEMENT: Triming whitespace off of search text on members list and orders list searches.\r\n* ENHANCEMENT: Security hardening of SQL queries for members list, orders list, and some helper functions.\r\n\r\n= 1.8.1 =\r\n* BUG: Fixed typos in pmpro_memberslist_csv and pmpro_orderscsv capabilities. (Thanks, Arnaud Devic)\r\n* BUG: Only loading the Braintree API when using it now.\r\n* BUG: Fixed fatal error that would occur at checkout if PayPal Standard were used with a discount code. (Thanks, John Zeiger)\r\n* BUG: Fixed issue where discount codes would not work if billing address fields were hidden. (e.g. paying by PayPal or check)\r\n* BUG: Fixed issue with the logic around sending emails when admin's change a member's level or expiration date. Admins will always get an email. Members will only get an email if the checkbox is checked.\r\n* ENHANCEMENT: No longer showing check instructions at checkout if the level is free.\r\n* ENHANCEMENT: Added pmpro_stripe_create_subscription filter. (Thanks, nickd32 on GitHub)\r\n* ENHANCEMENT: Added Czech (cs_CZ) language files and support for using decimals as separators. (Thanks, Martin \"shr3k\" Koke\u0161 on GitHub)\r\n\r\n= 1.8 =\r\n* ENHANCEMENT: Payment gateway classes updated so all settings and checkout fields are processed via the gateway class file. This will make it easier to maintain, update, and add new gateways.\r\n* ENHANCEMENT: Added a pmpro_after_membership_level_profile_fields hook after the \"Membership Level\" field dropdown on the edit profile page.\r\n* ENHANCEMENT: Added new statuses for orders when cancelled. cancelled = cancelled by user on cancel page or via gateway, cancelled_admin = cancelled by an admin, expired = cancelled via expiration script, level_change = user upgraded/downgraded to a different level.\r\n* ENHANCEMENT: All gateways use the $pmpro_currency global instead of getting the value via pmpro_getOption.\r\n* ENHANCEMENT: Changing South African Rand (ZAR) to use the symbol R to the left of prices. (Thanks, Rasada)\r\n* BUG: Fixed some translation issues on the checkout page and in level cost text. (Thanks, Jenkisan)\r\n* ENHANCEMENT: Added plural forms of Day, Week, Month, Year to es_ES translation. Other translation files will need to as well.\r\n* BUG: Fixed bug where the $short parameter of pmpro_getLevelCost wasn't shortening the output in some cases. (Thanks, Kimberly Coleman)\r\n* BUG: Fixed warning in membership dropdown on edit user/profile page. (Thanks, Thomas Sjolshagen)\r\n* ENHANCEMENT: Added German (de_DE) translation files. (Thanks, Cedros)\r\n* ENHANCEMENT: Added Dutch (nl_NL) translation files. (Thanks, Het Verzamelteam)\r\n* ENHANCEMENT: Added settings links to plugins page.\r\n* BUG: Fixed bug in Safari for iOS where checkout submission would fail after choosing \"Not Now\" when prompted to save the card.\r\n* ENHANCEMENT: Added user row actions to the members list and orders list in the dashboard. Add actions using the pmpro_memberslist_user_row_actions and pmpro_orders_user_row_actions filters which work the same as the core WP user_row_actions filter.\r\n* BUG: Fixed issues with the membership shortcode and pmpro_hasMembershipLevel function.\r\n* ENHANCEMENT: Can now use L or -L to check if a user is logged in (L) or not (-L) in the membership shortcode or pmpro_hasMembershipLevel function.\r\n* ENHANCEMENT: Updated to the new version of Google's ReCaptcha.\r\n* BUG: Fixed issue with quotes and other special characters in membership level names, descriptions, and confirmations. (Thanks, Marcelo Hinojosa)\r\n\r\n= 1.7.15.3 = \r\n* BUG: Now correctly setting $saveid when a discount code is created so the pmpro_save_discount_code hook will have the correct id value when codes are created.\r\n* BUG: Using get_userdata in checkout code for better multisite support when setting default role of new users.\r\n\r\n= 1.7.15.2 =\r\n* BUG: Stripe JS looks for a field with id AND name = CardType now so the new checkout code is compatible with older checkout templates and will avoid \"complete all fields\" errors.\r\n* BUG: Removed the urlencode wrappers on the Payflow API calls. Payflow seems to expect the values to be NOT encoded.\r\n* BUG: No longer running email content through wpautop if there is already HTML in an included header or footer for the email. (Thanks, Erik Bertrand)\r\n\r\n= 1.7.15.1 =\r\n* BUG: Fixed issue where \"complete all required fields\" was being shown when using Stripe. They are calling the CardType \"brand\" in their return object, not \"type\".\r\n* BUG: Removed code from includes/notifications.php that was deleting the transient used to keep PMPro installs from hitting the PMPro server too often.\r\n* ENHANCEMENT: Added the \"pmpro_checkout_signon_secure\" filter so you can tell PMPro to login over http or https in case other plugins (like WordPress MU Domain Mapping) conflict with what should be chosen here.\r\n* Avoiding some warnings.\r\n\r\n= 1.7.15 =\r\n* SECURITY FIX: The /services/getfile.php script has been disabled by default. You must set the PMPRO_GETFILE_ENABLED constant to true or 1 to allow the script to run. Additionally, the script will strip ../ and /. type strings out of the URI when looking for files to get and will not read any files using the extensions set via the pmpro_getfile_extension_blacklist filter. By default inc, php, php3, php4, php5, phps, and phtml file types are not allowed. (Thanks, Kacper Szurek)\r\n* BUG: Fixed issue with Stripe integration where existing members checking out for new recurring subscriptions would receive extra charges. Now deleting the old Stripe subscription and any related open invoices and creating a new subscription instead of just updating the old subscription. (Thanks, Antonv and Thomas Sjolshagen)\r\n* BUG: Fixed issue with Braintree integration where the billing address associated with a credit card was not being updated via the update billing page. (Thanks, Keith Abramo)\r\n* BUG: Fixed issue where pmpro_next_payment() would return a 0 timestamp instead of false when there is no previous order. (Thanks, Thomas Sjolshagen)\r\n* ENHANCEMENT: Added pmpro_formatPrice() and pmpro_getCurrencyPosition() functions. Now using them to render prices with formatting. You can use the pmpro_format_price filter or pmpro_currecies filter to adjust the formatting of prices to support currency symbols after the price or to use commas instead of periods for separators.\r\n* ENAHNCEMENT: Added getSubscriptionStatus() to Authorize.net gateway class. Also fixed up some of the logic around checking the gateway environment.\r\n* BUG: Now urlencoding the API Username and Password sent through the PayPal APIs in case your values have + or other special characters in them. (Thanks, mrschmiddy)\r\n* BUG: Now showing cycle number in the Fee column of the members list. E.g. a level that is $10 every 3 months will now show up as $10.00 + $10.00/3 Months.\r\n* BUG: Fixed bug where user first_name and last_name were being overwritten by PayPal values when using PayPal Standard.\r\n* ENHANCEMENT: Added PMPRO_CRON_LIMIT constant, which can be used to limit the number of records processed by each scheduled cron job. This can for example, keep your server from going over PHP time limits or email limits. Use define('PMPRO_CRON_LIMIT', 100); to set the limit to 100.\r\n* BUG: Discount code AJAX calls now going through admin-ajax.php, fixing issues where the Themed Profiles module of Theme My Login would block those calls. (Thanks, Tony)\r\n* ENHANCEMENT: Removed the \"CardType\" field at checkout and now using the jquery.creditCardValidator script to determine the card type on form submit.\r\n* BUG: No longer setting $order->subtotal and invoice total to the billing amount (vs the initial price) for recurring payments with Cybersource, PayPal Standard, PayPal Express or Twocheckout. (Thanks, Joce Nunes)\r\n* ENHANCEMENT: The search filter will no longer filter out a post that is in a category blocked by one membership level if the user also has access to that content through another category.\r\n* BUG/ENHANCEMENT: Running email body through wpautop if it doesn't look like HTML.\r\n* ENHANCEMENT: Added pmpro_getfile_before_error hook in getfile.php.\r\n* ENHANCEMENT: Added pmpro_ipn_check_receiver_email filter if you want to change how the email is checked in the IPN log.\r\n* BUG: Fixed bug where reports would show duplicate month labels on the last day of the month.\r\n* BUG: Fixed some issues with logging in at checkout, especially when using FORCE_SSL_ADMIN. (Thanks, Wimans)\r\n* ENHANCEMENT: Added \"pending\" as a default status for orders available on the edit order page in the dashboard.\r\n\r\n= 1.7.14.2 =\r\n* BUG: Removed the debug call to d($...) that was left in preheaders/checkout.php and would show up when checkout forms were submitted with empty fields. (Thanks, Nicolas)\r\n\r\n= 1.7.14.1 =\r\n* BUG: Fixed warnings in PayPal Express class that could break redirects at checkout. (Thanks, Adam Warner)\r\n* BUG: Fixed issue where new users who checked out with Braintree weren't having their customerid's saved, which led to subscription syncronization issues if they checked out again or updated their billing.\r\n* BUG: Fixed warnings in the membership-billing page.\r\n* BUG: Fixed false positive \"There are JavaScript errors on the page. Please contact the webmaster.\" errors.\r\n* BUG: Fixed issue where users on some sites running 1.7.14 could not logout.\r\n* OTHER: Changed the CSS class of the checkout button generated via [checkout_button] shortcode or pmpro_getCheckoutButton() function from \"btn btn-primary\" to \"pmpro_btn\" to match other buttons generated with PMPro.\r\n\r\n= 1.7.14 =\r\n* BUG: Fixed bug where level cost would sometimes have incorrect pluralization of months/weeks/etc. (Thanks, Kevin Ackerman)\r\n* BUG/ENHANCEMENT: Now checking the child and parent theme for email_header.html and email_footer.html files to use for emails. The child theme is checked first.\r\n* ENHANCEMENT: Added pmpro_getfile_before_readfile hook (passes $filename and $mimetype params) in getfile.php\r\n* BUG/ENHANCEMENT: getMembershipLevel method of MemberOrder can now handle when discount_code property is an object. Also, the IPN Handler and 2Checkout handler will now try to get the discount code for the order to correctly update the users pmpro_memberships_users entry.\r\n* BUG: Removed extra class attribute from CVV field that interfered with the required * JS code and some other CSS/JS-related things. (Thanks, catapult)\r\n* ENHANCEMENT: Added code to redirect to the redirect_url if you pass a redirect_url to the login page and the user is already logged in. Updated the links in email confirmations to use login links with redirects instead of direct links.\r\n* EHANCEMENT: Added pmpro_email_attachments filter, which can be used to add attachments to PMPro emails that are sent out. E.g., https://gist.github.com/strangerstudios/c4e771dca8723613bce3\r\n\r\n= 1.7.13.1 =\r\n* Fixed bug introduced in 1.7.12 where discount code uses were not being tracked.\r\n* Added pmpro_check_discount_code filter so you can do your own checks on discount codes.\r\n\r\n= 1.7.13 =\r\n* Added Danish (da_DK) translation. (Thanks, Mikael)\r\n* Fixed bugs with timestamps in various places (especially around trial dates) introduced in 1.7.12\r\n* Another fix to keep PMPro from sending \"undefined undefined\" as the name to Stripe when the 'don't show billing fields' option is chosen.\r\n* $pmpro_stripe_verify_address flag defaults to same value of Stripe's showbillingaddress option now.\r\n* Changed the priority of pmpro_applydiscountcode_init hooking on init to 11 so pmpro_init() will run before and setup pmpro_currency_symbol among other things. (Thanks, semyou on GitHub.)\r\n* Explicitly setting $current_user->membership_level in a few places to avoid issues where current_user is overwritten between init and when we try to use it.\r\n* Avoiding a warning in pmpro_getMetavalues() function. (Thanks, Scott Sousa)\r\n* Added target=\"_blank\" to help links on admin pages. (Thanks, AntonVrba on GitHub)\r\n\r\n= 1.7.12 =\r\n* Now including expiration text in text that is updated when a discount code is used. (Thanks, John Zeiger)\r\n* Fixed check for subscription_transaction_id in readonly fields array.\r\n* Making sure that $myuser->membership_level is set in pmpro_has_membership_access().\r\n* Added Norwegian locale files. (Thanks, Maritk)\r\n* Added Turkish locale files. (Thanks, yasinkuyu on GitHub.)\r\n* Fixed error where \"undefined\" was being passed to Stripe for the name.\r\n* Fixed error with setting enddates on the edit user page for users with multiple \"active\" memberships.\r\n* \"Renew\" link will show up on levels page only if the user has the level and it is not recurring and has an enddate.\r\n* Stripe gateway is using $pmpro_currency global instead of getting value via pmpro_getOption, so it can be overridden via code like https://gist.github.com/strangerstudios/8806443\r\n* Payflow Pro gateway is now passing the currency code to the API for non-US currencies. (Thanks\r\n\r\n= 1.7.11 =\r\n* Added \"Filter searches and archives?\" setting to advanced settings tab. If you had \"Show excerpts to non-members?\" set to No before, then this will be set to Yes after upgrade. But now you can show excerpts on single post pages while still hiding restricted content from searches and archives.\r\n\r\n= 1.7.10.2 =\r\n* Fixed MySQL warning/error that was introduced in 1.7.10.1 and showing for some people who had \"hide excerpts\" enabled.\r\n\r\n= 1.7.10.1 =\r\n* Fixed bug where the $pmpro_levels global would sometimes not include all levels on the levels page. (A better fix for this is coming in v2.0.)\r\n* Fixed bug in pmpro_getMemberDays that sometimes reported more days than the user had really been a member. (Thanks, surefireweb)\r\n* Fixed bug where search results were being incorrectly filtered. The pmpro_search_filter() function in includes/content.php hides member content from non-members if the \"show exceprts\" setting is set to false.\r\n* Now checking specifically for payment_status = 'Failed' in the IPN handler before sending off the payment failed emails. (There may be other statuses we want to consider as \"failures\" as well, but we want to avoid failing on \"pending\" statuses/etc.)\r\n\r\n= 1.7.10 =\r\n* Added getGatewaySubscriptionStatus() and getGatewayTransactionStatus() methods to the MemberOrder class. These are implemented for PayPalExpress right now and will hit the gateway API to return information on a subscription or transaction.\r\n* Added pmpro_memberslist_expires_column filter to members list. $order is passed as second parameter. Use this to filter the date or \"Never\" shown in the Expires column.\r\n* No longer showing \"Membership Levels\" link in dashboard menu if a user has access to other PMPro settings pages, but not the membership levels page.\r\n* Added pmpro_applydiscountcode_return_js hook. http://www.paidmembershipspro.com/hook/pmpro_applydiscountcode_return_js/\r\n* Fixed formatting of the level cost when a discount code is applied via AJAX.\r\n* Removed extra $ in checkout_check.html email template.\r\n* Fixed bug where pmpro_setOption was not working for array values in $_POST, e.g. the hideadlevels setting on the Advanced Settings page.\r\n* pmpro_getMembershipCategories($level_id) now returns an array of category IDs instead of an array of arrays.\r\n* Swapped all _x function calls to use __ or _e so they are translated.\r\n* Initial Czech Republic (cs_CZ) translation files. (Thanks, Petr Hlav\u00e1\u010dek)\r\n\r\n= 1.7.9.1 =\r\n* Firing activation hook on upgrade so menu doesn't disappear.\r\n\r\n= 1.7.9 =\r\n* Updated PayPal Express/Standard/WPP gateways to throw an error when trying to cancel a subscription that is in pending or suspended status. A warning is shown to the user to contact the site owner or cancel the subscription through PayPal. The WP admin should also get an email about the failure. In the future, there may be a better way to handle these situations automatically, but PayPal doesn't advise how to \"cancel\" pending subscriptions.\r\n* Added optional $membership_id parameter to getLastMemberOrder() method of the MemberOrder class. So you can get the last member order of a specific level.\r\n* Added Slovakian translation. (Thanks, Peter Belko)\r\n* Added WP capabilities for each PMPro settings or report page. Admins are given these caps on plugin activation. Or you can set up other roles to use these caps. E.g. https://github.com/strangerstudios/pmpro-membership-manager-role/\r\n\r\n= 1.7.8.2 =\r\n* Updated the Stripe API library to version 1.11.0.\r\n* Fixed issues where users upgrading or downgrading would have their subscriptions cancelled at Stripe.\r\n* Fixed issues where extra emails were being sent out when users cancelled a membership when using Stripe.\r\n* Generally made the Stripe integration better and ready for version 2.0.\r\n* The Stripe webhook will now add a 5 second delay before processing most requests. This is to ensure that PMPro has time to update the order during checkout (Stripe can sometimes receive a charge or cancellation, then send the webhook, and WP can process that in the split second it takes PMPro to save an order during checkout.). This prevents duplicate orders in the PMPro DB on some charges and fixes some issues with cancellations.\r\n* Setting constant PMPRO_STRIPE_WEBHOOK_DEBUG to true will send an email to the WP admin every time the Stripe Webhook is hit. You can also set it to an alternative email address or \"log\" to have it added to ../paid-memberships-pro/logs/stripe-webhook.txt.\r\n* Setting constant PMPRO_IPN_DEBUG to true will send an email to the WP admin every time the IPN handler is hit. You can also set it to an alternative email address or \"log\" to have it added to ../paid-memberships-pro/logs/ipn.txt.\r\n* Now showing the PMPro order ID/code in INVOICE emails instead of the Stripe order id when using the Stripe gateway.\r\n\r\n= 1.7.8.1 =\r\n* Important fix for Braintree Payments users. Credit card information is now correctly updated in Braintree when users submit the form on the billing information page or checkout again on the site. (Thanks, Bryan Paronto and venrooy)\r\n* Updated Italian translation files. (Thanks, Angelo Giammarresi)\r\n* Fixed string wrapping in reports for translation.\r\n* Fixed PHP warning in membership stats report.\r\n\r\n= 1.7.8 =\r\n* Added various hooks.\r\n* Updated the expiration field dropdown on the edit levels page to use translation strings. (Thanks, 24uurdates)\r\n* Fixed other missing strings for translation. Added Right-to-Left support. (Thanks, louy on GitHub.)\r\n* Added the pmpro_member_startdate filter to filter the pmpro_getMemberStartdate function. Passes $user_id, and $level_id as parameters.\r\n* Added pmpro.getMembershipLevelForUser and pmpro.hasMembershipAccess XMLRPC methods. Example usage: https://gist.github.com/strangerstudios/9099164\r\n* Moved the Terms of Service page/etc to right above the checkout button.\r\n* Now caching the pmpro_getAllLevels() function.\r\n* Added HTML <!-- comment --> wrappers to the JS on checkout.php. Helps with validation and potentially really old browsers.\r\n* Fixed warnings in includes/login.php.\r\n* Added pmpro_delete_discount_code and pmpro_delete_membership_level actions which run just BEFORE a membership level is deleted. Both pass the discount code ID or level ID respectively.\r\n* Added a third \"short\" parameter to the pmpro_getLevelCost() function. If set to true the \"The price for membership is\" text is left off the beginning. The new levels page uses this param.\r\n* Updated the table on the levels page to have one \"Price\" column showing the cost and expiration text. The text is generated using pmpro_getLevelCost and pmpro_getLevelExpiration instead of its own rules.\r\n* Updated level cost text to say $1/mo instead of $1 now and then $1/mo, etc. (Thanks, louy on GitHub.)\r\n* Added a debug by email method for the Authorize.net Silent Post handler. Add define('PMPRO_AUTHNET_SILENT_POST_DEBUG', true); to your wp-config.php. We will probably move the other services to debug by email as well.\r\n* PMPro will now only filter the from name and email if the default values are detected (WordPress <wordpress@sitename.com>). This fixes issues where the from name and email on form emails or other plugin emails were being swapped out with the PMPro settings, which was not always desirable. (Thanks, Helen Hou-Sandi and others.)\r\n* Added an \"Only Filter PMPro Emails?\" option to the email settings. If checked, only emails sent through the PMProEmail class will have their from name and email adjusted to match the PMPro email settings.\r\n* Added filter options to orders page in admin and export. (Thanks, HTCIA and Harsha Venkatesh)\r\n* Added Brazilian Portuguese translation. (Thanks, dballona on GitHub.)\r\n* Fixed some warnings. (Thanks, AlexBiddle on GitHub.)\r\n* Added pmpro_custom_advanced_settings hook to add settings to advanced settings page. Details on usage here: https://github.com/strangerstudios/paid-memberships-pro/pull/86 (Thanks, Jess Oros)\r\n* Updated addon categorization to reflect a lot of addons which have moved into the WordPress.org repository as well as updated versions.\r\n\r\n= 1.7.7 =\r\n* Fixed bug where user_id = '' was breaking on some MySQL setups and keeping the pmpro_membership_orders table from being populated.\r\n* Updated \"Joined\" column in members list to use the WP date format setting.\r\n* Removed redundant phone number on checkout page if bphone is already set.\r\n* When adding extra columns to the Members List CSV export via pmpro_members_list_csv_extra_columns, we are now passing the original heading/field name to callback function. So you can use that in your callback functions. This generally means you can use one function that just dumps the meta value rather than requiring a separate function for each meta value.\r\n* Fixed bug where \"Show Billing Fields\" option was visible on the payment settings page for the testing gateway. (This option is only for Stripe.)\r\n* Fixed bug with choosing levels to hide ads from on advanced settings tab. (Thanks, Alain Fradette)\r\n* Fixed bug where PayPal Express was adding tax twice for subscription charges. (This does not fix existing subscriptions on the PayPal side.)\r\n* Fixed bug with the Stripe Webhook where non-PMPro orders were being added to PMPro via the webhook. If the customer_id cannot be found (i.e. it's a non-PMPro customer), the order is ignored. (Thanks, Jacob Glenn)\r\n* The getMemberOrderByPaymentTransactionID() function has been updated to return false if no payment_transaction_id is passed in (instead of finding the first order where the id is blank). This is inline with the getMemberOrderBySubscriptionTransactionID() function.\r\n* Fix to code that hides posts from search to NOT hide posts that a user has access to but might also be accessible by users of a different level. (Thanks, normanyung on GitHub)\r\n* Added a pmpro-en_GB translation that changes \"State\" to \"County\" on the billing address fields. (Thanks, alexbiddle on GitHub)\r\n\r\n= 1.7.6 =\r\n* Added \"Old Members\" option to the members list page to view members who don't have an active membership, but did in the past. (Note that we don't differentiate between members who expired and who cancelled.)\r\n* The PayPal IPN Handler has been updated to process \"subscr_cancel\" messages from PayPal. This should cancel memberships in WP/PMPro when users or PayPal admins cancel a subscription at PayPal when using PayPal Express or Website Payments Pro. There are still known issues with syncing cancellations with PayPal Standard.\r\n* Fixed bug where \"error cancelling subscription\" emails were being sent out erroneously. These should only go out now if PMPro has trouble cancelling a subscription. If you got a lot of these before, you should get less. If you never got this, you might start getting it sometimes.\r\n* Orders are now set to \"cancelled\" status whether any attached subscriptions were cancelled or not. (Keeps us from trying again.)\r\n* Fixed bug where All Pages view in WP dashboard would sometimes redirect to the registration page if you had Theme My Login installed.\r\n* Setting startdate to NOW() when a user's level is changed via pmpro_changeMembershipLevel() using a level ID... also when admin's manually change a user's level. This fixes issues with PMPro Series where users who were given a level this way appear to have a start date in 1970, etc.\r\n* Fixed bug with the pmpro_save_discount_code_level filter where -1 was being passed as the code_id for brand new codes.\r\n* Updated \"The ____ code has been applied to your order\" message to it is wrapped for localization.\r\n* Now checking ICL_LANGUAGE_CODE instead of $_REQUEST['lang'] to support WPML using different language URL formats.\r\n* Unsetting $all_membership_levels[$user_id] at the bottom of pmpro_changeMembershipLevel().\r\n* Added $force parameter to pmpro_getMembershipLevelForUser($user_id, $force). If set to true, it will ignore the cached value and pull the level from the DB.\r\n* Added autocomplete=\"off\" to credit card account number field on checkout and update billing pages.\r\n* Added an optional $seed parameter to pmpro_getDiscountCode() which will add $seed to the scrambled string. Useful when generating many discount codes quickly and time() might not have changed.\r\n* Now hiding \"Change Membership Level\" link from Member Links section of Membership Account page if PMPRO_DEFAULT_LEVEL is defined.\r\n* Clearing the AccountNumber value at checkout if it is XXXX..., e.g. when we mask the Stripe CC number. This way users will know they need to re-enter the credit card again. (Thanks, Gary)\r\n* Fixed bug on checkout page where html classes for the bstate field were being set based on the bcity value instead.\r\n* Fixed bug where there was no space after the \".\" in some level cost text. (Thanks, multiple observers ;)\r\n* Added some explanatory text to the payment settings page about taxes and SSL seals.\r\n* Added a pmpro_formatAddress() function to format billing addresses/etc.\r\n* Fixed bug where blank billing addresses were showing up in confirmation emails. If you use custom email templates, update them to use the !!billing_address!! variable instead of the full address section.\r\n* Design updates to checkout buttons, admin screens, etc, to work better with WP 3.8 and the TwentyFourteen theme.\r\n\r\n= 1.7.5 =\r\n* Fixed all open bugs with 2Checkout gateway. You can now use this gateway for one time and recurring levels. We're still keeping the beta message though until we have further live testing.\r\n* The shortcodes for the PMPro pages (e.g. pmpro_levels/etc) will now work on multiple pages. Things may still act funny if you put the shortcodes on pages other than those set in the page settings, but you can do so if you know what you are doing. One limitation still in place is that you can only have one PMPro page shortcode per page. Whichever comes first will be used.\r\n* Added support for WPML. Simply make a copy of each PMPro page for each language. Set the PMPro page settings to the default language pages.\r\n* Updated pmpro.pot template along with a script gettext.sh that will allow us to easily update the pmpro.pot file when we need to.\r\n* Updated the pmpro_url function, should work the same but if you use addons or customizations and notice bugs around URLs, let me know.\r\n* Fixed bug where old membership data was being included in the members list export instead of the latest active membership data.\r\n* Filtering $morder->membership_level at checkout as well as $pmpro_level global.\r\n* When loading bemail and bconfirm email from user meta for existing users, just setting them both to $bemail so different emails don't show up.\r\n* Now sending a member's email address to Stripe when customers are created/updated.\r\n* No longer running wpautop on email via pmpro_send_email filter.\r\n* If first_name and/or last_name are passed at checkout, these are used to create a new user instead of bfirstname and blastname.\r\n* Added \"view\" links to the page settings page.\r\n* Fixed some potential warnings in adminpages/reports/login.php.\r\n\r\n= 1.7.4 =\r\n* Updated PayPal IPN to use HTTP 1.1 and \"Connection: Close\" per recent PayPal IPN updates.\r\n* Fixed bug with slashes being added to the SSL Seal text when Payment Settings are saved.\r\n* Now applying the pmpro_checkout_level filter when a membership level is loaded from an order during the review step with PayPal Express checkouts. This will fix many customizations that might have not worked with PayPal Express.\r\n* Cleaned up PayPal Express API integration a bit. Fixes some bugs on sites with one-time payments and taxes calculated in.\r\n* Change the use_ssl payment setting. You can choose \"No\" now for gateways that require SSL. Just make sure you set it to Yes when going live or use another method to force SSL on your checkout page. You can also set it to Yes (use JavaScript redirect) to fix some issues that come up with infinite redirects on shared hosting with specific caching/proxy techniques.\r\n* Optimized the members list and orders CSV exports to run with less memory. Especially important for large sites.\r\n* Including Italian, French, Spanish/Peru, and Spanish/Chile language files contributed from the community. Thanks Mirco Babini (mirkolofio on GitHub) and Javier Monorov\u00e9 (zillionsk8 on GitHub)\r\n* Fixed the email template issue for admin emails as well. The email sent to admins for free checkouts won't include the empty billing address info anymore. (Thanks, inator on GitHub)\r\n* Now redirecting from /register/ to PMPro levels page when latest versions of Theme My Login are activated. Can still disable by returning false with the pmpro_register_redirect or pmpro_login_redirect filter.\r\n* Now showing a \"renew\" button for the current user's level on the levels page if their level is not recurring.\r\n* Fix in crons.php where in rare cases the pmpro_expiration_notice meta was not being set correctly for users, which might lead to multiple expiration warning emails.\r\n* Updated pmpro_next_payment to work for any cycle number or period. (Thanks, antonv and others.)\r\n* Now checking for a logged in user before trying to get a billing address to prepopulate at checkout.\r\n* Updated frontend.css to make sure that background gifs in error messages aren't repeated or applied to dropdowns.\r\n* Added some currencies: CNY, INR, IDR, KRW, TRY, VND, ZAR\r\n* All currencies now available to all gateways. You still need to make sure that your gateway supports the chosen currency.\r\n* Now sending all emails from the PMProEmail class from the pmpro_getOption(\"from_email\") setting. Some were sent from the get_option(\"admin_email\") setting before.\r\n\r\n= 1.7.3.1 =\r\n* Using MySQL to calculate months since first order instead of date_diff, which is only available in PHP 5.3+\r\n\r\n= 1.7.3 =\r\n* pmpro_longform_address and pmpro_international_addresses now default to true. See this gist to go back to US-specific address format: https://gist.github.com/strangerstudios/6478242\r\n* Added \"Show Billing Address Fields\" option for the Stripe payment gateway. Set to 'No' to hide billing address fields. Replaces the functionality of the \"Stripe Lite\" plugin.\r\n* Added language files for es_ES, es_CL, and es_PE. Thanks, Javier Monorov\u00e9 (zillionsk8 on GitHub).\r\n* Added language files for fr_FR. Thanks, J\u00e9r\u00e9my De la casa.\r\n* NOTE: Language files may not be complete. The get involved, join us on GitHub. \r\n* Added Cybersource and 2Checkout gateways in beta.\r\n* Added pmpro_paypal_button_image filter so you can override the URL of the PayPal button image.\r\n* Added a new report showing signups vs. cancellations, monthly recurring revenue, and lifetime value.\r\n* Fixed issue where the checkout_paid template was always being used for emails. It now checks if the level at checkout is free and sends either the checkout_free, checkout_paid, or checkout_trial templates accordingly. (Thanks, inator on GitHub)\r\n* Fixed sales report to not show $ when hovering over bars for \"sales\" vs. \"revenue\".\r\n* Fixed issue where PayPal Standard levels using a billing frequency > 1 (e.g. every 3 months) would have an extra payment charged after one period.\r\n* Fixed SQL error in discount code admin page that could result in cycle_periods of code levels saving incorrectly. (Thanks, Sam D'Amico)\r\n* Removed note that Payflow gateway doesn't support recurring payments. It does.\r\n* Now passing the membership level id in the $data var for checkout and cancellation emails. The key is \"membership_id\" so use $data['membership_id'] to check/access it.\r\n* No longer setting the subtotal property of orders when the \"subscribe\" method of the gateways is called. This will fix cases where an initial order or a subscription with a free trial showed a charge amount > $0.\r\n* Clicking enter in discount code box at checkout will no longer submit form and will click the \"apply\" button.\r\n* Hiding the \"Apply\" button on the checkout page if a discount code was passed in. Showing it if the text field is changed.\r\n* Authorize.net now supports CAD, GBP, and EUR currencies (for US merchants only) http://community.developer.authorize.net/t5/The-Authorize-Net-Developer-Blog/Authorize-Net-Expansion-into-Canada-the-United-Kingdom-and/ba-p/33690\r\n* Fixed notice in getfile.php\r\n* Fixed notices and expiration dates in login report.\r\n* Fixed notices in includes/notifications.php (Thanks, Nilesh)\r\n* Allowing dashes (-) in discount codes now.\r\n\r\n= 1.7.2.1 =\r\n* Fixed warning when trying to load the \"free\" gateway on free level checkouts.\r\n* Fixed warning coming from login report tracking.\r\n* Changed all $wpdb->escape() calls to esc_sql() to fix notice.\r\n* Fixed another bug in revenue/sales report for daily charts. (backported to 1.7.2, but a few people who upgraded missed it)\r\n* Fixed bug on add/edit level page that was causing issues in some versions of IE.\r\n* Fixed bug where links in the email_header.html and email_footer.html templates were not being converted to true links.\r\n* Removed an extra $ from the PayPal Express confirmation emails.\r\n* Fixed loading of local (in the paid-memberships-pro/languages directory) translation files. (Should have some bundled with the plugin soon.)\r\n\r\n= 1.7.2 =\r\n* Fixed the revenue/sales report to accurately track recurring sales and reports from earlier years.\r\n* Now trimming whitespace on any text field updated through the PMPro settings pages. This prevents issues like those that come up if you have whitespace in your Stripe API key, etc.  Thanks, Scott Sousa.\r\n* Added discount code use tracking for PayPal Standard. Saving the use before the user goes to PayPal to pay.\r\n* Added discount code id and code columns to orders and members list CSV exports.\r\n* Changed default capability check to 'manage_options' (administrator), and added a filter named 'pmpro_edit_member_capability' to allow dev's to change this capability. Thanks, Scott Sousa.\r\n* Now removing empty (only includes the PMPro shortcode) PMPro pages when uninstalling PMPro. Thanks, Scott Sousa.\r\n* Now adding classes to the body tag (if the theme supports it through the body_class() function) to aid in design. Classes are pmpro-account, pmpro-billing, pmpro-cancel, pmpro-checkout, pmpro-confirmation, pmpro-invoice.\r\n* Adding $0 orders for free level checkouts (will help reporting).\r\n* Added pmpro_invoice_bullets_top and pmpro_invoice_bullets_bottom hooks to confirmation and invoice pages. Passes $pmpro_invoice.\r\n* Fixed members list CSV export for lists with search queries.\r\n* Added is_ssl() check to pmpro_https_filter so PMPro will add HTTPS to URLs even if the $besecure global hasn't been set yet. Thanks, Andrew Calaio at wpcurve.com.\r\n* Removed the pmpro_cron_trial_ending_warnings daily cron so trial ending emails will no longer go out. The function pmpro_cron_trial_ending_warnings() is still there if you want to call it yourself. There were issues on some sites where these emails were going out erroneously and also many ways of doing \"custom trials\" including setting the subscription start date back a certain number of days was not picked up as a trial by this script anyway.\r\n* Added the pmpro_cron_credit_card_expiring daily cron to send out warnings a month or so before credit cards on record are set to expire.\r\n* Updated pmpro_has_membership_access to return true if the $post_id is empty or cannot be found. This fixes issues where member warnings were being added to non-pages, e.g. the bbPress forums archive. To lock down \"pages\" like this, you'll need to use custom coding, URL detection, etc. Thanks, Scott Sousa (scottsousa on GitHub and WP.org) from Slocum Studio.\r\n\r\n= 1.7.1 =\r\n* Design updates to frontend and backend pages.\r\n* Added Sales and Revenue Report.\r\n* Fix to Braintree webhook that should help get it verified by Braintree more easily.\r\n* Fix to PayPal IPNHandler to check both that either the primary or the business email address sent from PayPal matches the one stored in the payment settings.\r\n* Added pmpro_ajax_timeout hook to change the timeout limit from 2000 (2 seconds) to something else.\r\n* Fixed bug that occurred when the pmpro_register_redirect filter returned false or a blank link. Thanks, Vladimir Garagulya.\r\n* Added pmpro_paypal_standard_nvpstr and pmpro_set_express_checkout_nvpstr filters to change or add parameters to an name-value-pair string sent to PayPal in a couple cases.\r\n* Fixed checkout failure on Free level when in mySQL Strict Mode. (Thanks, inator on GitHub)\r\n* Only checking pmpro_checkForUpgrades in admin/dashboard now. (Thanks, topdown on GitHub)\r\n* No longer loading recaptcha library in the admin. Also wrapped the recaptchalib require in an init function to delay it a bit so we can check if other plugins have already loaded it.\r\n* PMPro-Mailchimp and WP-Bouncer have been moved into the WP repository. Other Add-on updates.\r\n* New users will now be set to the \"default role\" set in the General settings instead of spefically \"subscriber\". (Subscriber is the default default role though.) Thanks, Nabil Kadimi.\r\n* Wrapped strings in login report for translation.\r\n* Added indexes to the following columns in the pmpro_membership_orders table: status, payment_transaction_id, subscription_transaction_id, affiliate_id, affiliate_subid\r\n\r\n= 1.7.0.4 =\r\n* Another database fix for new installs.\r\n\r\n= 1.7.0.3 =\r\n* Fixed a performance issue added in 1.7.0.2.\r\n\r\n= 1.7.0.2 =\r\n* Fixed HUGE issue with the DB setup on fresh 1.7+ installs. If you installed version 1.7 or 1.7.0.1 fresh (not upgraded from earlier version) then PMPro will not work until you upgrade to version 1.7.0.2.\r\n* Removed from old PHP short tag use\r\n* Fixed generation of members only and non-logged in text on new installs.\r\n\r\n= 1.7.0.1 =\r\n* Added the redirect away from wp-login.php page (was accidentally removed in version 1.7).\r\n* Added support for Theme My Login versions 6.3+\r\n* Fixed CSV downloads.\r\n* Fixed some warnings.\r\n* Fixed generation of cost text when using built in tax.\r\n* Added \"pmpro_subscribe_order\" filter.\r\n* Added an index to the user_id column of pmpro_memberships_users table which will help with performance of the new logins report and other user search functions.\r\n\r\n= 1.7 =\r\n* Ready for localization efforts.\r\n* Addons tab in PMPro Settings in the dashboard.\r\n* Reports page in dashboard with login report.\r\n* Webhook code for Braintree Payments gateway.\r\n* If PayPal Standard is the active gateway, users without membership levels will be able to see the confirmation page with a message that PayPal is processing payment.\r\n* Fixed bug where PayPal recurring orders were being attributed to the wrong user (if no subscriber id was attached to the IPN message).\r\n* Fixed bug where users sometimes couldn't checkout with a discount code that made a level free.\r\n* Cleaned up code in base paid-memberships-pro.php file.\r\n* Updated the .pmpro_checkout tr.odd td line in frontend.css to use rgba with alpha transparency to work a bit better on dark background themes.\r\n* Fixed bug where a user's first_name and last_name meta fields might be overwritten by the billing name fields at checkout. It will still set them if the user's first and last name fields are blank. (Thanks, John Hamlin.)\r\n* Fixed bug where zipcode was shown instead of state in the members list CSV export. (Thanks, John Hamlin.)\r\n* Fix to show discount codes on free trial confirmation emails if one was used.\r\n* Added the pmpro_random_code filter so you can hook in and change invoice code/etc generation.\r\n* Correctly padding zeroes on credit card expiration dates like 09/2013 when using Stripe. This SQL statement should fix broken entries in your orders table: NOTE (1) Backup your database first. NOTE (2) Make sure you change the table name to match your WP prefix,etc. >>> UPDATE wp_pmpro_membership_orders SET expirationyear = CONCAT(SUBSTRING(expirationmonth,2,1), expirationyear), expirationmonth= CONCAT('0', SUBSTRING(expirationmonth,1,1)) WHERE expirationmonth > 12;\r\n* Wrapped some AJAX and service calls code in init() functions so they will more consistently work with hooks/filters. (Before if PMPro loaded before a plugin or bit of code that added filters/etc, the filters wouldn't get applied.)\r\n* Fixed Stripe JS to also send city to Stripe. (This is important because Stripe doesn't seem to show the address at all if the city is missing.)\r\n* Added 'pmpro_members_list_sql' hook to filter the SQL used on the members list page and CSV export.\r\n* Added 'pmpro_members_list_csv_heading' and 'pmpro_members_list_csv_default_columns' hooks to filter the default columns in the members list CSV. (e.g. to check role and remove columns)\r\n* Added 'pmpro_members_list_user_link' hook to filter the link and username displayed on the members list page. (e.g. to check role and remove link to edit user)\r\n* Checking that \"status='active'\" when finding subscriptions to cancel when deleting a level. This will keep PMPro from trying to cancel someone more than once... or trying to cancel inactive subscriptions.\r\n* Fixed bug where Sales Tax fields were hidden on the payment settings page if Stripe was chosen as the gateway.\r\n* No longer logging IPN activity to logs/ipn.txt by default. (Uncomment the lines at the bottom of services/ipnhandler.php to use the log to debug.)\r\n\r\n= 1.6.1 =\r\n* Added recurring billing support to Payflow integration.\r\n* Fixed bug where an order's code was shown instead of the subscription ID on the edit order page.\r\n* Fixed some logic with determining if level settings are not compatible with the current gateway.\r\n* On notice and one DB query fix in upgradecheck.php submitted by pranjithkumar on GitHub. Thanks!\r\n\r\n= 1.6.0.1 =\r\n* Fixed Braintree integration for production environments. Braintree needed to be told \"production\" instead of \"live\".\r\n* Removed !!field!! lines from a couple of admin emails.\r\n* Added login_link as data for the cancel_admin email template.\r\n\r\n= 1.6 =\r\n* Added Braintree payments as a gateway option. This should be considered in \"beta\". Please get in touch if you are using Braintree payments with PMPro. Everything should function except that we're still working out an issue with the webhook handler.\r\n* Added a new dashboard page Orders to view all orders processed by PMPro with an option to export to CSV.\r\n* Fixed bug where \"Your membership level has changed\" emails were being sent out the first time a user's profile was edited, even if the level wasn't changing.\r\n* Removed the revenue estimate from the members list page. This causes performance issues on sites with many members. A new reports dashboard page is coming soon.\r\n* Not showing payment settings warning now when Payflow is setup with all values filled in.\r\n* Updated preheaders/billing.php to get the most recent successful order from the DB to use when updating. (ORDER BY id DESC in the query)\r\n* Added pmpro_stripe_subscription_deleted hook in stripe-webhook.php for when subscriptions are cancelled on the Stripe side. Use this code to cancel on your site as well: https://gist.github.com/strangerstudios/5093710\r\n* Now using $pmpro_currency_symbol when membership price is shown on the edit profile page in the dashboard/etc.\r\n* Added pmpro_authorizenet_post_url filter to use Authorize.net gateway class with a different post url, e.g. if you have a gateway that offers an Authorize.net compatibility mode.\r\n* Added pmpro_check_status_after_checkout filter so you can e.g. set the status to \"pending\" instead of \"success\" when a user checks out with the check gateway. They will still have access to the membership level, but you can update the status via the orders dashboard later.\r\n* Added pmpro_confirmation_order_status filter so you change which status the confirmation page looks for. Can return an array as well since the getLastMemberOrder method call on MemberOrder has been updated to support $status as an array.\r\n* Orders made via the check gateway now have PaymentType = \"Check\" and CardType = \"\".\r\n* Added a notes column to orders.\r\n* Fixed bug where discount codes were not showing up in checkout emails if the level was free.\r\n* Added some wpdb->escape() wrappers to the saveOrder method of MemberOrder which will fix some bugs with orders with fields with apostrophe's in them, etc.\r\n* Added checks for custom capabilities to the PMPro admin pages in case you want to give non-admins access. Caps are: pmpro_discountcodes, pmpro_emailsettings, pmpro_membershiplevels, pmpro_memberslist, pmpro_memberslist_csv, pmpro_orders, pmpro_orders_csv, pmpro_pagesettings, pmpro_paymentsettings\r\n* Added pmpro_memberslist_extra_cols_header and pmpro_memberslist_extra_cols_body hooks to add extra columns to the members list page.\r\n* Fixed pmpro_paypal_express_return_url_parameters filter to properly encode & and = so the params are properly added to the ReturnURL instead of being seen as extra params to the full PayPal Express URL. The PMPro Addon Packages plugin has been updated to take advantage of this to make that plugin more compatible with PayPal Express.\r\n* Fixed bugs with Strip webook: now listening for charge.succeeded and charge.failed, other fixes.\r\n\r\n= 1.5.9.2 =\r\n* Fixed Members List bugs introduced in version 1.5.9.1.\r\n\r\n= 1.5.9.1 =\r\n* Revamped the ipnhandler code. It's much cleaner now and should be easier to support with all 3 PayPal APIs (Standard, Website Payments Pro, Express) working through the one handler.\r\n* Added Payflow Pro as a gateway option. Currently, only one-time charges is supported.\r\n* Added the pmpro_register_redirect filter to allow you to change the URL PMPro redirects wp-login.php?action=register to. Returning false or an empty string will result in no redirect from the register page.\r\n* Added pmpro_subscription_payment_failed hook that runs if a failed payment comes in through the IPN Handler, Authorize.net silent post, or Stripe web hook. do_action(\"pmpro_subscription_payment_failed\", $old_order); $old_order is a MemberOrder object.\r\n\r\n= 1.5.9 =\r\n* Fixed bug on Membership Billing page that was hiding the billing address fields.\r\n* Changed all of the instances of \"firstpayment\" order statuses to \"success\". Also running query to fix statues in the DB. This caused issues for levels with only a one-time payment, where the invoice wouldn't show up in their account page.\r\n* Fixed the PayPal Express gateway to correctly set the order transaction id to TRANSACTIONID instead of the PROFILEID.\r\n* Updated the IPN handlers to accept recurring_payment_id or subscr_id when checking for recurring payment orders.\r\n* Changed the site_url() in the javascript for discount codes on the checkout page to home_url(). home_url() is better to use in case users have their WP core files in a different directory.\r\n* You can now place email templates in a paid-memberships-pro/email folder in your theme and PMPro will use these before using the built in email templates. Just copy the file out of the wp-plugins/paid-memberships-pro/email folder, use the same filenames, and edit the file.\r\n* You can now place page templates in a paid-memberships-pro/pages folder in your theme and PMPro will use these before using the built in page templates. Just copy the file out of the wp-plugins/paid-memberships-pro/pages folder, use the same filename, and edit the file.\r\n* You can now place css templates in a paid-memberships-pro/css folder in your theme and PMPro will use these before using the built in page templates. Just copy the file out of the wp-plugins/paid-memberships-pro/css folder, use the same filename, and edit the file.\r\n* Fixed a bug where discount codes that reduced a level price to $0 were not being counted as \"uses\".\r\n* Added a pmpro_email_data filter to make it easier to add variables to edited email templates.\r\n* Added user_login to the data fields all of the emails for use by templates (use !!user_login!! in your template)\r\n* Added $wp_version to globals set in preheaders/checkout.php to properly compare versions later in the script and avoid a notice.\r\n* Added pmpro_email_filter hook to filter entire email object at once.\r\n* Warning fix: Updated email class to check if the template file exists before trying to load the template into the body. (Useful if you are using the PMProEmail class for your own emails.)\r\n\r\n= 1.5.8 =\r\n* Fixed bugs with the Membership Billing page. (Thanks, adambware)\r\n* The getMembershipLevelForUser function and getMembershipLevel method of the MemberOrders class will now include expiration_number and expiration_period properties on the returned level. These are needed to properly extend membership levels when checking out for the same level.\r\n* Added pmpro_before_send_to_paypal_standard hook. This is executed at checkout before calling the sendToPayPal method on the order. The register helper plugin has been updated to update user meta fields during this hook in addition to the pmpro_after_checkout hook. (Because for PayPal Standard, when pmpro_after_checkout is called, the $_SESSION vars are unavailable to it. So other plugins relying on the pmpro_after_checkout hook may have issues with PayPal Standard.)\r\n* Re-Added !class_exists(\"Stripe\") check before loading Stripe library. This assumes that other plugins using the Stripe lib are loading compatible versions and/or also checking first before loading the Stripe lib. (*It's important that you test things if you are using multiple plugins loading Stripe. If the other plugins are loading old Stripe APIs first, PMPro may not work correctly.*) The alternative is to namespace the Stripe library for PMPro which would take some more effort.\r\n* Now running email subject lines through html_entity_decode to avoid special characters for apostrophes/etc.\r\n* pmpro_is_login_page() now also checks if is_page(\"login\")\r\n* The pmpro_login_redirect and pmpro_besecure functions, which handle HTTP/HTTPS logic have been updated. pmpro_besecure is now running on login_init instead of login_head to avoid a \"cannot resend headers\" error. pmpro_login_redirect will strip https from the URL if FORCE_SSL_LOGIN is set but FORCE_SSL_ADMIN is not set to avoid \"need to login twice\" bugs.\r\n* Updated code to support auto-hiding ads with newer versions of Easy AdSense.\r\n* Updated how the members list CSV is generated to avoid PHP notices when meta values are not found/etc. Also added a prefix to the enclose function in memberslist-csv.php (enclose => pmpro_enclose).\r\n* Now using get_option(\"date_format\") when outputing a date in the admin, frontend, or in an email.\r\n* Proper trial support for Stripe. (We use the trial_period_days parameter of the Stripe plan object to push the first payment back - since the first payment is handled in its own transaction. We now also add days to this based on the # of trial subscriptions set for the level in the admin.\r\n* Added a pmpro_require_billing javascript variable when using Stripe. If a discount code changes the membership level to free, pmpro_require_billing will be set to false and the Stripe JS checks won't fire.\r\n\r\n= 1.5.7 =\r\n* Ready for WordPress 3.5\r\n* Fixed issues in the PayPal IPN Handler that were leading to errors when users would checkout using the PayPal standard gateway.\r\n\r\n= 1.5.6.1 =\r\n* Fixed \"invalid gateway\" bug when using PayPal Express option with the PayPal/PayPalExpress gateway.\r\n* Fixed some warnings.\r\n\r\n= 1.5.6 =\r\n* Fixes in the new pmpro_getMemberStartdate and pmpro_getMemberDays functions.\r\n* Fixes to SQL queries for the expiration and trial ending crons.\r\n* Added a pmpro_required_user_fields filter similar to the pmpro_required_billing_fields filter.\r\n* Added a function pmpro_setMessage($message, $type) that sets $pmpro_msg and $pmpro_msgt globals if they aren't set already.\r\n* Added a function pmpro_getClassForField($field) that will return a string including \"pmpro_error\" or \"pmpro_required\" if applicable. You can filter the classes added to the fields via the pmpro_field_classes filter.\r\n* Showing * on required fields via javascript on the checkout page.\r\n* Updated checkout page to highlight in red fields that are related to the error message shown.\r\n* Added headers property to the PMProEmail object. You can add headers (e.g. to add a cc or bcc) to PMPro emails using the pmpro_email_headers filter.\r\n* Updated Stripe library to version 1.7.10. Updated PMPro to take advantage of new \"interval_count\" parameter in subscriptions, so you can now have subscriptions setup for \"every 2 months\", etc.\r\n* Fix to pmpro_checkout_start_date_keep_startdate filter added in 1.5.5\r\n* Added \"Start Date\" and \"End Date\" to emails sent to admins when a membership is cancelled.\r\n* Now checks for CSS files in a paid-memberships-pro subfolder of your active theme and uses those admin.css, frontend.css, and print.css files instead if they exist. (Going to move email and page template checks to that subfolder in the future as well.)\r\n\r\n= 1.5.5 =\r\n* Updated pmpro_check_site_url_for_https function to cache the siteurl to limit DB queries.\r\n* Added includes/filters.php to store hacks/filters/actions that were originally developed outside of the PMPro core and brought in later... or just things that are cleaner/easier to impement via hooks and filters.\r\n* Added a \"delay\" property to the membership shortcode. E.g. [membership level=\"1\" delay=\"7\"]...[/membership] will show that content if a member has had level 1 for at least 7 days.\r\n* If a member checks out for the same level again (extending their membership), the startdate added to pmpro_memberships_users will be their old startdate.\r\n* If a member checks out for the same level again, the remaining days on their existing membership will be added to their new enddate. So e.g. if a user starts an annual membership in April 2013, then checks out again (extends) their membership in February 2014, their new enddate will be April 2015 instead of February 2015. (NOTE: if you were doing this through the custom code here - https://gist.github.com/3678054 - you should remove your custom code.)\r\n* Fixed bug where you couldn't remove all required membership levels from a page/post. (Thanks, lisaleague)\r\n* Updated the button CSS included in paid-memberships-pro/css/frontend.css. I added a pmpro_ prefix to these classes so they don't conflict with other .btn CSS rules. I also changed the rules a bit to show the buttons more consistently. If you relied on the old CSS rules, you may need to tweak your theme to get things looking right.\r\n\r\n= 1.5.4 =\r\n* Added a gateway check to preheaders/checkout.php. Mischivous users used to be able to bypass payment by passing &gateway=check or something similar to the checkout page. PMPro would then use the check gateway to checkout. Now only the active gateway option in the payments settings or gateways added via the new pmpro_valid_gateways filter (1 parameter is the array of gateways, add/edit the gateways and return the array). It is important that all PMPro users upgrade to keep mischivious users from accessing your site for free. Any site currently enabling multiple gateway options will need to add code to set the valid gateways. More info here: http://www.paidmembershipspro.com/2012/06/offering-multiple-gateway-options-at-checkout/\r\n* Fixed bug where level restrictions would be deleted if a page were updated via quick edit.\r\n* Added if(!class_exists(\"Stripe\")) to the Stripe class definition. This should help with some conflicts if other plugins have their own Stripe library. (Going to udate the Stripe library in the next version and work on supporting new Stripe functionality.)\r\n* Fixed a bug where copying a level didn't properly set recurring billing settings. (Thanks, AtheistsUnited)\r\n* Fixed some typos. (Thanks, AtheistsUnited)\r\n* Fixed some warnings.\r\n\r\n= 1.5.3.1 =\r\n* Fixed bug in expiration warning cron query. (Backported to 1.5.3)\r\n\r\n= 1.5.3 =\r\n* Added PayPal Standard Gateway\r\n* Added code to support using Stripe with the minimal billing fields. Use add_filter(\"pmpro_stripe_lite\", \"__return_true\"); to enable this\r\n* Added an Email setting to send the default WordPress new user email(wp_new_user_notification) or not. By default this was being sent along with the PMPro checkout confirmation email. Now only the checkout confirmation email will be sent unless you check the new setting. You can still override this with the pmpro_wp_new_user_notification filter.\r\n* Fixed bug: Now re-hiding the \"Processing...\" message if there is a Stripe javascript error at checkout.\r\n* Updated MemberOrder method saveOrder to check for gateway and gateway_environment properties when inserting. If none are found, it will use what is set in your payment settings. This allows you to set the gateway on a MemberOrder object and save the order with that gateway instead of the default.\r\n* Now only showing the check instructions if the gateway is \"check\" AND the level is not free.\r\n* Added a check to the notification code in the settings header so it wouldn't display NULL in the notification space if WP passes that back.\r\n* Some warning fixes.\r\n* Fixed a bug in the PayPal Express gateway class where the pre-tax amount was being passed to PayPal instead of the tax-computed amount.\r\n* Added Canadian Dollars as a currency option for Stripe.\r\n* Fixed typo/bug with saving trial amounts in the memberships_users table after checkout. (Thanks, Badfun)\r\n* Fixed bug in initial and recurring revenue calculation on members list page.\r\n* Fixed bug when setting membership_level of current user after checkout that could cause various issues. (Thanks, drrobotnik)\r\n* Fixed bug in Stripe webhook that resulting in cancelation emails being sent to the 1st user in the DB vs. the user who cancelled. (Thanks, Kunjan of QuarkStudios.com)\r\n* The getLastMemberOrder() method of the MemberOrder class now returns the last order with status = 'success' by deafult. You can override this via the second parameter of the function. So getLastMemberOrder($user_id, \"cancelled\") to get the last cancelled order or getLastMemberOrder($user_id, false) to get the last order no matter the status.\r\n* Added pmpro_authnet_silent_post_fields filter and pmpro_before_authnet_silent_post and pmpro_after_authnet_silent_post hooks to the Authorize.net silent post handler. All hooks are passed the $fields variable built at the top of the script that mirrors the $_REQUEST array.\r\n\r\n= 1.5.2.1 =\r\n* Fixed bugs with pmpro_hasMembershipLevel.\r\n* Added ability to use the 0 level (non-member) in arrays passed to pmpro_hasMembershipLevel. e.g. pmpro_hasMembershipLevel(0,1,2) = has no membership, level 1, or level 2.\r\n* Fixed bug with the pmpro_after_change_membership_level hook, where a level object was passed instead of the id. The object would be nice to have, but we've been passing the id in the past. I changed it back for reverse compatibility. (You can always look up the level by level_id and user_id.\r\n\r\n= 1.5.2 =\r\n* Added \"Pay by Check\" as a gateway option. Users gain immediate access. You can show instructions for who to write the check out to, where to mail it, etc.\r\n* Added uninstall.php script. (Thanks, badfun)\r\n* Fixed bug where the \"Use SSL\" option reverted to \"No\" for Testing, Stripe, and PayPal Express gateways whenever the payments settings page was loaded.\r\n* Fixed bug where the IPN Handler URL was not showing up when PayPal Express was selected.\r\n* Fixed bug where PMPro was not sending the proper trial amount to PayPal when using Website Payments Pro or PayPal Express.\r\n* Added id and status fields to the pmpro_memberships_users table and updated all code to use these fields. This is important for allowing multiple membership levels and tracking cancelled orders. (Thanks, Zookatron!)\r\n* Appending ?level=# to the confirmation page URL after checkout to aid in analytics tracking.\r\n* No longer filtering pages/posts from search results if \"show excerpts\" is set to YES.\r\n* Showing tax on invoices if applicable.\r\n* Sending tax amount to PayPal Express again.\r\n* Added code to force HTTPS if the siteurl option starts with https:\r\n* Hiding billing information box on Membership Account page if the last invoice was by check or paypal express.\r\n* Added pmpro_email_days_til_expiration and pmpro_email_days_til_trial_end to change how many days before expiration/etc to send an email. The default is 7.\r\n* Fixed typo/bug in preheader/checkout.php RE the pmpro_stripe_verify_address hook. (Thanks, Oniiru!)\r\n* Updated the_excerpt filters to prevent PMPro messages from being added to an excerpt twice in some setups.\r\n* the_content filter removes any class=\"more-link\" class from the content if showing an excerpt.\r\n\r\n= 1.5.1 =\r\n* Fixed bug in getfile.php introduced in 1.5.\r\n* Fixed bug in the saveOrder method of the Member Order class. When \"updating\" vs. \"inserting\" the $id property of the class was being wiped out. This sometimes caused problems if the id was needed later, e.g. with PayPal Express updating orders.\r\n* Now checking if(!defined(\"WP_USE_THEMES\")) instead of if(function_exists(\"get_userdata\")) to see if WP is already loaded.\r\n* Added initial payment to the fee column of the members list.\r\n* Added initial payment as a column in the members list CSV export.\r\n* Added the pmpro_members_list_csv_extra_columns filter to add columns to the Members List CSV export. Sample usage here: https://gist.github.com/3111715\r\n\r\n= 1.5 =\r\n* Very important security fix. Please upgrade to 1.5.\r\n* The Members List CSV export is now executed through admin-ajax.php and will only work if you are logged in as an admin (can manage options).\r\n* Fixed service scripts to work if logged in or logged out.\r\n* Changed the applydiscountcode service to going through the site_url() instead of admin-ajax.php to avoid HTTP/HTTPS issues.\r\n\r\n= 1.4.9 =\r\n* Important: Fixed handling of services sent through admin-ajax.php. Your silent post/ipnhandler URLs, etc, may have been updated.\r\n* Added stripslashes() to membership description output on the checkout page.\r\n* The pmpro_getLevel() function may return the wrong level on the levels, checkout, or account page where another $pmpro_levels array was setup. (The array pmpro_getLevel uses used the level id as the array keys. The older $pmpro_levels used 0-n.) To fix this, I added a pmpro_getAllLevels($include_hidden = false) function and now use that function on the levels, checkout, and account pages. The function queries the database for all levels and then puts them into an array where the level ids are the keys.\r\n* Fix for !!billing_country!! in emails. (Somehow a previous fix for this got overwritten. My bad.)\r\n* Settings $pmpro_level->code_id to $discount_code_id if a valid discount code is applied to a level at checkout. This is \r\nuseful for determining if/what discount code was applied to the level when processing it in hooks.\r\n* Added pmpro_getDomainFromURL() and using that to set PMPRO_URL.\r\n* New hooks when orders are added/updated: pmpro_update_order (before update), pmpro_updated_order (after update), pmpro_add_order (before add), pmpro_added_order (after add). (Thanks, zookatron!)\r\n\r\n= 1.4.8 =\r\n* Fixed !!siteemail!! values for email templates.\r\n* Adjusted display of \"processing\" message next to checkout button when clicked.\r\n* Added billing_country to orders table in DB and the memberorder class. Handling countries better through the code.\r\n* Removing closing ?> at the bottom of various files while working through. This can avoid errors on some setups.\r\n* Using wp_enqueue_style to load plugin stylesheets now.\r\n* Added the pmpro_getCheckoutButton($level_id, $button_text, $classes) function and [pmpro_button level=\"1\"] shortcode to add buttons with links to more easily level checkout pages into your pages and themes. Copied over btn and btn-primary styles from Member Lite theme.\r\n* Updated include/require statements to work if the wp-content folder has been renamed or moved.\r\n* Added code to load scripts in the services folder via admin-ajax.php. (Helps when the plugins folder is not where PMPro expects it to be.)\r\n* The discount code AJAX call is using the new service URL (/wp-admin/admin-ajax.php?action=applydiscountcode).\r\n* Added IPN/Silent Post/Webhook instructions to payment settings page.\r\n\r\n= 1.4.7 =\r\n* Fixed some notices in the PayPal gateway code.\r\n* No longer calling Stripe JS at checkout if the level is free.\r\n* Fixed some HTTPS handling for ISS hosting. (IIS sets $_SERVER['HTTPS'] to \"off\" or \"on\" instead of TRUE or FALSE.)\r\n* Added #pmpro_processing_message to checkout page which is shown when the submit button is clicked. You can override the message with the pmpro_processing_message filter. You can tweak the CSS to show this differently as well.\r\n\r\n= 1.4.6 =\r\n* No longer trying to setup a subscription with Stripe for levels with only an Initial Payment amount.\r\n* Updated recaptchalib.php, which fixes issues with using recaptcha.\r\n* Now setting the first_name and last_name meta fields at checkout to match the business first and last name. (Previous scripts to add additional first/last names to the checkout field should override these.)\r\n* Updated the save profile code to only null out the expiration date for a membership if a blank expiration is explicitly passed through the form. If you had other plugins allowing users to edit their profile, etc, it might not have been passing the expiration date and thus updating users expiration dates. Admins and users would have gotten emails.\r\n* Some updates to applydiscountcodes.php service to support plugging into how discount codes function. Added the pmpro_discount_code_level filter to applydiscountcodes.php.\r\n\r\n= 1.4.5.1 =\r\n* Removed debug calls to krumo() which would cause fatal errors in certain situations. Please upgrade. (Note that PMPro versions that go three dots deep are usually the most important ones :)\r\n\r\n= 1.4.5 =\r\n* Now setting a var \"code_level\" in javascript in applydiscountcode.php so it can be used to manipulate prices, etc after applying a discount code.\r\n* Added the pmpro_cancel_previous_subscriptions filter, which is set to false will skip cancelling the old membership level/subscription at checkout. This is dangerous, but is used by the pmpro-addon-packages plugin to have an addon charge without affecting the old subscription. This works because the user is checking out for the same membership level. (So they don't really have > 1 membership level.)\r\n* Trimming strings sent to the Authorize.net API in the subscribe and update calls.\r\n\r\n= 1.4.4 =\r\n* Using get_admin_url instead of home_url in various places so the links will work on sites installed in a subdirectory. (Notifications, admin bar, pagination in admin screens, etc.)\r\n* Wrapping some XML fields in Authorize.net API calls in <![CDATA[ ]]> to avoid issues when non-text characters (e.g. &) are included in the level name, etc.\r\n\r\n= 1.4.3 =\r\n* Fixed a bunch of notices and warnings on discount codes page in admin.\r\n* Added hooks for changing the discount code page: pmpro_save_discount_code_level, pmpro_save_discount_code, pmpro_discount_code_after_settings, pmpro_discount_code_after_level_settings. Look them up in discountcodes.php to see how they work.\r\n* Updated pmpro_send_html(), which filters emails, to use wpautop instead of nl2br. This will fix any extra double spacing you may have noticed in your emails.\r\n* Added a stripslashes around the membership level confirmation text on the confirmation page. Extra slashes were breaking links, etc.\r\n* Added membership level to subject of checkout confirmation email sent to admins.\r\n\r\n= 1.4.2 =\r\n* Fixed bug that was added slashes into a level's description and confirmation when saving.\r\n* Removed wp_editor use is the blog is running a version of WordPress < 3.3. (Note: We will only officially support the latest version of WordPress with each release.)\r\n* Added the pmpro_pages_shortcode_{membership page} filter. This can be used to filter the content output by the pmpro_checkout and other page shortcodes. e.g. use pmpro_pages_shortcode_checkout to tweak the HTML output of the pmpro_checkout shortcode. The pages are \"account\", \"billing\", \"cancel\", \"checkout\", \"confirmation\", and \"levels\".\r\n* Added a \"use_ssl\" option. For the PayPal Website Payments Pro and Authorize.net gateways, this must be on. For Stripe, this will default to on, but can be switched off. For PayPal Express and the test gateway, it will default to off but can be switched on. When on, the checkout and update billing pages will be forced to be served over SSL. If off, those pages will redirect to non-ssl versions. The previous hooks/filters for overriding this will still work.\r\n* Added pmpro_save_membership_level and pmpro_membership_level_after_other_settings hooks to be able to add fields to the new/edit membership level page.\r\n* Fixed some more warnings and notices.\r\n* Updated checkout page to use pmpro_isLevelFree() in logic to display recaptcha or not.\r\n\r\n= 1.4.1 =\r\n* Fixed critical bugs with PayPal Express.\r\n* When a PayPal cancellation returns error \"11556\" (The subscription must have status \"active\" or \"suspended\".) I am cancelling the membership without an error. Most likely the PayPal subscription was already cancelled on the PayPal side.\r\n* No longer trying to cancel a subscription with the gateway if a membership/order doesn't have a subscription_transaction_id. (It was a initial payment only membership probably.)\r\n\r\n= 1.4 =\r\n* Rewrote how gateways are handled to make it easier to add and manage new gateway options.\r\n* Added Stripe as a gateway option. (http://www.stripe.com)\r\n* Added a \"confirmation message\" field to the level editor that is shown on the confirmation page after checking out. The message is added to the text that can be filtered using the pmpro_confirmation_message hook.\r\n* Now applying \"the_content\" filters on the confirmation message on the confirmation page. e.g. wpautop will be run on the text to automatically add paragraphs.\r\n* Now showing the level description on the checkout page. You can use this code to remove the description from the checkout page: https://gist.github.com/2323424\r\n* The description and confirmation fields of the membership level editor now use WP Editor fields with full WYSIWYG support.\r\n* Fixed the logic around setting the $pmpro_display_ads global, used by the pmpro_displayAds() and pmpro_hideAds() functions.\r\n* Fixed bug with recaptcha logic.\r\n* Updated /pages/checkout.php to use wp_login_url function for login link.\r\n* Small changes to pmpro_changeMembershipLevel function to support deleting users when they cancel their account.\r\n* Added the pmpro_member_links_top and pmpro_member_links_bottom hooks so you can add links to the \"Member Links\" list of the account page. Just output an a tag wrapped in a li tag. (May tweak this to build an array of links that can be filters, but this is good for now.)\r\n* Fixed some more notices.\r\n\r\n= 1.3.19 =\r\n* Rewrote the pmpro_login_redirect function. It's cleaner now. Important: there was a pmpro_login_redirect hook in there that was fairly redundant with the core login_redirect hook. I've renamed the pmpro hook to pmpro_login_redirect_to because I had a hook with the same name (pmpro_login_redirect) used in a different place to control whether or not PMPro redirects the register page to the levels page. Having one hook for two things is a bad idea. It seems like more people were using the hook for controlling the registration redirect, so I left that one alone and renamed these.\r\n* Changed PMPro page creation to set all membership pages as subpages of the membership account page. This results in nicer menus for themes that add all top level pages to the menu.\r\n* Updated the checkout page to submit to \"\" (itself) instead of echoing the checkout page URL here. (Since we can have multiple checkout pages.) This also fixes from SSL conflicts that may crop up on the checkout page.\r\n* Updated the priority of a few actions/hooks so the \"besecure\" https stuff gets run as soon as possible. Before it was possible that some URLs could be written out with http: on an HTTPS page before PMPro had a chance to fix things. You should have fewer SSL errors on the checkout page to deal with now.\r\n* Added an option on the payment settings page to \"nuke\" http: links on all secure pages. This option can add time to your page loads, but will ensure that all http: links for your domain are replaced with https: links.\r\n* Allowing multiple pages to use the [pmpro_checkout] shortcode so you can create multiple checkout pages. This is good if you want a separate templated checkout page for each membership level or product you have.\r\n* You can now add a pmpro_default_level custom field, set to the id # of the level you want, that will be used if you navigate directly to a checkout page without setting a level.\r\n* Added some stuff to support adding shipping fields via hooks. Add this plugin to your site, edit, and activate to add shipping to your checkout: https://gist.github.com/1894897\r\n* Removed the price from the description sent to PayPal. The DESC field is limited to 127 characters and must match up across API calls. So there is a good chance the price would get truncated which could be confusing. This was a kind of hack anyway. PayPal should show the price data it has. Not sure why it won't. The price is still reviewed on the review page of your site though.\r\n* The recaptcha code now checks for a previous error before changing pmpro_msg to \"All Good\".\r\n* Fixed warning in pmpro_has_membership_access(). Fixed a bunch of other warnings here and there.\r\n* Rewrote pmpro_updateMembershipCategories() just to be cleaner\r\n* Added pmpro_state_dropdowns filter. If you return true, the state field will become a dropdown with US states. Use the pmpro_states and pmpro_states_abbreviations filters to change the array of states used.\r\n\r\n= 1.3.18.1 =\r\n* Added the new email .html templates to svn.\r\n\r\n= 1.3.18 =\r\n* Fixed some warnings: admin bar warning that showed up on admin pages; warning issued by pmpro_setOption(); warning in pmpro_hasMembershipLevel(); warning in billing update; warnings on the user edit page; warnings in the getTax method of the order class; warnings in save method of order class.\r\n* Added a pmpro_checkout_confirm_email filter that can return false to hide and not require the \"Confirm E-mail\" field at checkout.\r\n* Added a pmpro_checkout_confirm_password filter that can return false to hide and not require the \"Confirm Password\" field at checkout.\r\n* If the PMPRO_DEFAULT_LEVEL constant is set, traffic on the levels page is redirected to the checkout page. This redirect no longer forces HTTPS.\r\n* Moved the pmpro_paypalexpress_session_vars hook call so it will run even if existing users are checking out (upgrades, etc).\r\n* Added some confirmation emails for admins: (1) for new user signups, (2) when an admin changes a member's level, (3) when a user cancel's their membership, and (4) when a user update's their billing information. New email templates (ending with \"_admin.html\") have been added to the /email/ folder of the plugin.\r\n* Added new email settings to enable/disable the new admin emails. They will be enabled by default on install and upgrade to 1.3.18. The settings are on the email tab of the PMPro settings.\r\n* Added a couple hooks to the checkout page to have more control over where you add fields, etc. pmpro_checkout_before_submit_button and pmpro_checkout_after_billing_fields.\r\n\r\n= 1.3.17.1 =\r\n* Fixing activation bug from 1.3.17.\r\n\r\n= 1.3.17 =\r\n* Updated pmpro_hasMembershipLevel() and [membership] shortcode to allow passing a level like \"-5\" which will return true if the user does NOT have level #5.\r\n* Updated how PMPro notifications are retrieved and shown on the PMPro admin pages. We're using admin-ajax to call the pmpro_notifications function which uses WP's HTTP API to call the www.paidmembershipspro.com server. Only the PMPro version number is passed to check if a notification should be shown. This method shouldn't slow page load since the javascript is called using jQuery's ready function. If the PMPro server is unavailable, you'll get a JS error instead of a PHP one.\r\n* Fixed warning on discount codes page. Fixed some other warnings.\r\n* Updated expiration/trial crons to avoid blank ('') and zero ('0000-00-00 00:00:00') DB values in addition to NULLs. (Some backup programs will incorrectly export NULL dates as '' which could be interpretted as 1/1/1970... meaning the membership has expired.)\r\n* Fixed bug where \"Billing Information\" was shown on the account page for some free levels.\r\n\r\n= 1.3.16 =\r\n* Moved the SSL Seal box lower on the payment settings page.\r\n* Made dashboard menu and admin bar menus consistent. \r\n* Fixed bug with selecting categories when adding a new level.\r\n* Fixed bug where the user was sometimes redirected to the add level page after adding a level.\r\n\r\n= 1.3.15 =\r\n* Fixed SSL handling on the billing page for members without an order.\r\n* Removed single quotes from shortcode examples on page settings page. Doh! (Thanks, Caps)\r\n* Added Multisite/Network FAQ item.\r\n* Updated the payments settings page to convert tax rates like 7 into 0.07. (Tax rates > 1 are divided by 100.)\r\n\r\n= 1.3.14 =\r\n* Added pmpro_show_cvv filter to hide the CVV from the checkout and billing information pages.\r\n* Updated the billing page to use the pmpro_required_billing_fields like the checkout page does.\r\n* Updated the Authorize.net integration to not pass an empty CVV if the value is empty. Authorize.net will still throw an error if you require CVV via your gateway settings. If you update your settings and PMpro to not require a CVV, you won't get an error.\r\n* Passing the level cost to PayPal Express through the description.\r\n* The billing page doesn't require SSL now if the gateway for the order was PayPal Express. A link to PayPal is shown instead of the form. (Be sure to remove the \"becesure\" custom field from your billing page if it has one and you don't want this page served over SSL.)\r\n* Fixed bug where the membership level name wasn't being passed to Authorize.net in the description field for the order.\r\n* Added a second paramter ($tags = true) to the pmpro_getLevelCost function. If this is false, strip_tags is run on the cost before returning it. (By default we wrap the prices in <strong> tags which is not good for passing to PayPal for example.)\r\n* Some bug fixes for updating billing against Authorize.net.\r\n\r\n= 1.3.13 =\r\n* Fixed warning on checkout page. (Thanks Caps!)\r\n* Fixed bug in PayPal Express checkout that resulted in trying to load the confirmation page over SSL (which would break on some servers). (Thanks Caps!)\r\n* Updated getTaxFromPrice method of order class to allow for better filtering, by level, etc. The pmpro_tax filter now passes the $tax amount, $values (array with price passed and other values), and $this (the order object). It's a little clunky, but must be for backwards compatibility. Custom tax example here: http://www.paidmembershipspro.com/2012/02/custom-tax-structure-using-the-pmpro_tax-hook/\r\n* Removed all TAXAMT NVP parameters in PayPal Express calls. Including these would sometimes introduce errors during checkout. The tax amount is still included in the total amounts passed. Not sure what impact dropping the TAXAMT property will have on reporting in PayPal. I don't believe their tax reporting is the best anyway. Maybe we can build a tax report into PMPro.\r\n\r\n= 1.3.12 =\r\n* Fixed bug in members list pagination on sites installed in a subdirectory.\r\n* Now swapping out the PayPal Express checkout button if the level is free or becomes free with a discount code. (Thanks, Caps!)\r\n\r\n= 1.3.11 =\r\n* Fixed bug with cancelling a user's membership through the admin.\r\n\r\n= 1.3.10 =\r\n* Fixed the links in the discount code table.\r\n* pmpro_hasMembershipLevel(0) and [membership level=\"0\"] will once again return true for non-members. (This broke whent he pmpro_has_membership_level filter was added.)\r\n* WP 3.3.1 testing. (Looks good!)\r\n\r\n= 1.3.9 =\r\n* Added a \"pmpro_has_membership_level\" filter ($r = apply_filters(\"pmpro_has_membership_level\", $r, $user_id, $levels);) which can be used to override the default behavior here.\r\n* Fixed the pmpro shortcodes to allow content above and below the shortcodes on the membership pages. (Thanks, Bluewind!)\r\n* Now setting the user's first and last name to the billing first and last name after checkout.\r\n* Added billing first/last name, billing address, and phone number to the members list screen and CSV export.\r\n* Removed email header/footer code from email class because sometimes it was added twice. Now it is added by the pmpro_send_html function in paid-memberships-pro.php for all emails (WP or PMPro) if a header or footer file are found in your theme folder.\r\n* Added a pmpro_after_phpmailer_init. (The old hook pmpro_after_pmpmailer_init had a typo -- pmpmailer instead of phpmailer.) I left the old hook in for backwards compatibility.\r\n\r\n= 1.3.8 =\r\n* Fixed a bug with canceling memberships. Important Note: User requested cancellations were not being forwarded to PayPal and Authorize.net in the past couple updates. Please double check your members lists with your payment gateway subscriptions. Sorry for the inconvenience.\r\n* Fixed a bug in the billing update form.\r\n* Wrapped some output on the billing update form in esc_attr.\r\n* Now sorting countries alphabetically if international orders are turned on.\r\n* Updated the membership-billing page to show country and long form fields if enabled via the hooks pmpro_international_addresses and pmpro_longform_address. (These were only showing up on the checkout form before.)\r\n\r\n= 1.3.7 =\r\n* Added \"expiration\" field to user profile page. Updated the email class to include information on expiration dates in the admin change emails.\r\n* Added \"pmpro_profile_show_membership_level\" and \"pmpro_profile_show_expiration\" filters which will hide those fields from the edit profile screen if false is returned.\r\n* Added a pmpro_getMembershipLevelForUser($user_id) function and replaced some redundant code in a few places where we query the DB for this. Maybe we'll have a membership level class as some point. Makes sense now.\r\n* Fixed bug where the wrong price for levels was showing up on the edit profile page in the admin. (It would show the current user's level info instead of the edited user's info.)\r\n* Cleaned up a few more warnings, etc.\r\n\r\n= 1.3.6 =\r\n* Changed a few split() calls to explode() to avoid warnings.\r\n* Fixed a couple other warnings/notifices.\r\n* Updated account page to hide the change billing info link if the user doesn't have an active subscription or signed up with PayPal Express.\r\n* Added a filter pmpro_paypal_express_return_url_parameters which can be used to add parameters to the ReturnURL when checking out with PayPal Express. Return an array of key, value pairs. { return array(\"option\" => \"1\"); }\r\n\r\n= 1.3.5 =\r\n* Important update to Authorize.net processing code to account for the \"credit card expires before the start of this subscription\" error that comes up. For levels/discount codes with no trials or only free trials/initial payments, the subscription setup with Authorize.net starts the day of checkout and a free trial is tacked on for 1 period vs. setting up the subscription one period out. One period is added to the billing limit as well, if applicable. Check the blog for more information.\r\n* Important update for PayPal Website Payments Pro users. When using PayPal WPP, the user will have an option to checkout via PayPal Express as well. PayPal requires this and now we support it.\r\n\r\n= 1.3.4 =\r\n* Swapped the $ in the levels page code for $pmpro_currency_symbol.\r\n* Changed the membership shortcode to apply the_content filters to the return value instead of just wpautop. This allows shortcodes within that shortcode and other filters to be run on the content. (Let me know if issues arrise from this.)\r\n* Wrapped some post variables in checkout and billing preheaders with trim()\r\n* Now voiding authorizations with Authorize.net. (The plugin will authorize $1 before setting up a subscription without an initial payment.)\r\n* Now voiding an initial payment with Authorize.net if the subscription setup fails.\r\n* Now refunding an intial payment with PayPal if the subscription setup fails.\r\n* Added a \"pmpro_checkout_after_level_cost\" to add fields or arbitrary code after the level cost description on the checkout page.\r\n* Added Diner's Club, EnRoute, and JCB as credit card options. Make sure you congiture your Gateway/Merchant account to accept these card types as well.\r\n\r\n= 1.3.3 =\r\n* Fixed bug where country field was resetting to default when there were errors with the checkout form submission. (If you templatized your checkout page and have international addresses enabled, you will need to add $bcountry to the globals setup at the top of your checkout template .php)\r\n\r\n= 1.3.2 =\r\n* Fixed issue introduced in 1.3.1 where checkout page would not redirect to HTTPS when it should have.\r\n* Fixing issues with slashes in addresses/etc in the checkout form.\r\n* Updated the PMProEmail class to use the wp_mail function instead of use PHPMailer directly. (Thanks VadaPrime: http://wordpress.org/support/topic/plugin-paid-memberships-pro-wp_mail?replies=6#post-2449672)\r\n* Fixed some more notices and warnings.\r\n\r\n= 1.3.1 =\r\n* Fixed automatic page creation, which broke in the last update.\r\n* Added hook pmpro_checkout_level which allows you to tweak the $level object before checkout, e.g. to change pricing for upgrades.\r\n* Added hook pmpro_checkout_start_date which allows you to change the start date of a membership before checkout. (preheaders/checkout.php)\r\n* Added hook pmpro_profile_start_date which allows you to change the start date of a membership that is sent to the gateway. (classes/class.memberorder.php)\r\n* Cleaned up some notices and warnings. Will hopefully finish the remaining ones next update.\r\n* Removed some old tinyMCE code that wasn't in use anymore. FYI, WP 3.3 will have a way to include visual editors on other pages, so we may add it to the description field of the membership levels.\r\n* Updated order class to send phone and email to Authorize.net when creating subscriptions. The charge/authorize API support international phone numbers, but the ARB API does not. So if a customer enters an international phone number (or other phone number over 10 characters), the number will be sent for any initial payment/charge, but not for the subscription setup.\r\n* Fixed where !!discount_code!! was not being parsed out in emails.\r\n\r\n= 1.3 =\r\n* Added a filter pmpro_login_redirect. You can return false to allow users to signup via the default WP login page.\r\n* Member CSV export no longer limiting to 15 members.\r\n* Correctly adding code_id to the pmpro_memberships_users table on signup. View here for retroactively updating your users tables in case you intend to use that value for advanced functionality.\r\n* Changed URL to send IPN checks for live PayPal instances from www.live.paypal.com to www.paypal.com.\r\n* Updated getfile.php to work when WP is installed in a subdomain.\r\n* Added links to individual settings tabs in the WP menu.\r\n* Changed the architecture of the settings pages which used to all be coded in the membershiplevels.php page. Each settings page has its own script now. I removed the pmpro-data.php service and have the pages submit to themselves now. This won't impact how things work, but will make it easier for me to develop going forward.\r\n\r\n= 1.2.10 =\r\n* Added pmpro_confirmation_message hook to change the output on the confirmation page without having to templatize it. The filter passes the constructed html string with the confirmation message and a second parameter containing the order/invoice object if it is a paid membership.\r\n* Added a pmpro_checkout_boxes hook that can be used to output extra fields and other content in the middle of the checkout page.\r\n* Now showing 2 decimals places for the tax rate when showing a membership level's cost.\r\n\r\n= 1.2.9 =\r\n* IMPORTANT fix so new user email addresses are properly captured when using PayPal Express.\r\n* rewrote the IPN handler to use the WordPress HTTP API for better compatibility.\r\n* added extra id to tables and fields for easier styling. (let me know if you have suggestions for small changes like these that can save you from having to templatize a page)\r\n* fixed query in readiness check function.\r\n* Authorize.net doesn't support international phone numbers, so we're not sending them to Authorize.net anymore.\r\n\r\n= 1.2.8 =\r\n* Ordering levels by id (ascending) on the levels page now. Added a \"pmpro_levels_array\" filter that can be used to reorder the levels or alter the levels before displaying them on the levels page. The array of levels is the only parameter.\r\n* Added expiration date to the member list and export.\r\n* Showing a member count on the member list page.\r\n* Added filter to change subject lines for PMPro emails. (pmpro_email_subject) The filter's first paramter is the subject, the second parameter is an object containg all of the email information. There are also filters for pmpro_email_recipient, pmpro_email_sender, pmpro_email_sender_name, pmpro_email_template, amd pmpro_email_body.\r\n* Added an RSS feed from the PMPro blog to the dashboard.\r\n* Now only showing the discount code field at checkout if there are discount codes in the database. Can be overriden by the pmpro_show_discount_code filter.\r\n* Cancelling with PayPal now properly updates status to \"cancelled\".\r\n* No longer trying to unsubscribe from PayPal or Authorize.net if there is no subscription ID to check against (e.g. when the user was manually added to a membership level) or if the last order does not have \"success\" status (e.g. they already cancelled).\r\n* Removed PHP short tags (e.g., <?=$variable?>) for wider compatibility.\r\n\r\n= 1.2.7 =\r\n* Fixed bug with non-USD currencies.\r\n* Fixed bug with phone number formatting.\r\n\r\n= 1.2.6 =\r\n* Fixed bug with discount codes showing up in emails, confirmation pages, and invoices.\r\n* Added currency option to gateway settings.\r\n\r\n= 1.2.5 =\r\n* PayPal Express support! PayPal Express requires just a verified PayPal Business account (no monthly fees from PayPal).\r\n* Fixed a bug when plans with a \"cycle number\"/billing frequency that was greater than 1 (e.g. every 4 months). Before the first payment was being scheduled 1 day/month ext out instead of e.g. 4 months out... resulting in an extra payment.\r\n* Added some hooks to support international orders: pmpro_international_addresses, pmpro_default_country, pmpro_countries, pmpro_required_billing_fields. Example code to support international credit cards: https://gist.github.com/1212479\r\n\r\n= 1.2.4 =\r\n* VERY IMPORTANT BUG FIX: The getMembershipLevel function of the MemberOrder class had an error where the membership level object was not being created properly during signup and so * recurring subscriptions were not being created *. This update fixes the bug. Thanks to mvp29 for catching this.\r\n* Fixed another bug that was causing warnings on some setups, e.g. WAMP server for Windows.\r\n* Fixed a bug that would show warnings when visiting a login page over HTTPS.\r\n* Fixed membership pricing wording for certain cases, e.g. every 4 months for 4 more payments.\r\n* Fixed a bug in the email generation for order confirmations when discount codes were used. This will no longer freeze the screen.\r\n\r\n= 1.2.3 =\r\n* Fixed an error in the DB upgrade code that was keeping the \"enddate\" from being added to new members' records.\r\n\r\n= 1.2.2 =\r\n* Added pmpro_skip_account_fields hook. This value is used to determine if the username/password accounts fields should show up at checkout. By default, it is shown when the user is logged out and not shown when logged in. The hook allows you to return true or false to override this behavior. If the fields are skipped while no user is logged in a username and password will be automatically generated for the new user after checkout.\r\n* You can delete discount codes now from the admin.\r\n* Added a hook pmpro_level_cost_text to allow you to override how the cost is shown on the checkout page. Obviously don't abuse this by showing a different price than what will be charged. Be careful if you change your membership levels pricing to update your filter if needed. The hook passes the text generated by the pmpro_getLevelCost(&$level) function and also a level object which is prepopulated with levels pricing and expiration settings already adjusted for any discount codes that may be in affect.\r\n* Added expiration settings for levels. You can set an \"expiration number\" and \"expiration period\" for any level now. e.g. \"6 months\" or \"180 days\". You can also alter expiration settings via discount codes. Expirations will be useful for offering free trials which don't require a credit card... and other scenarios you guys have come up with. A script is run once a day using WP Cron that checks for any membership that has ended and then cancels that membership. The user will lose access and the subscription setup in your payment gateway will be canceled.\r\n* Users can \"extend\" a membership that is set to expire via the Membership Account page.\r\n* Added a hook pmpro_level_expiration_text to allow you to override how the expiration information is shown on the levels and checkout pages. Again don't abuse this by showing a different expiration than is real. Be careful if you change your expiration settings to update your filter if needed. The hook passes the text generated by the pmpro_getLevelExpiration(&$level) function and also a level object which is prepopulated with levels pricing and expiration settings already adjusted for any discount codes that may be in affect.\r\n* Added an error check if the MySQL insertion of the membership level fails. This happens after the user's credit card/etc has already been charged. The plugin tries to cancel the order just made, but might fail. The user is adviced to contact the site owner instead of trying again. I don't want to scare you. We test the checkout process a lot. So assuming that the code hasn't been tampered with and there isn't an internet outage in the microseconds between the order going through and the database being updates, you should never run into this. Still it's nice to have, just in case.\r\n* Fixed a bug that may have caused the billing amount to show up incorrectly on the Membership Account page.\r\n* Added the discount code used to the confirmation page, invoices, and invoice emails.\r\n* Now sending notification emails to members 1 week before their trial period ends (if applicable). A WP cron job is setup on plugin activation. You can disable the email via the pmpro_send_trial_ending_email hook.\r\n* Now sending notification emails to members 1 week before their membership expires (if applicable). A WP cron job is setup on plugin activation. You can disable the email via the pmpro_send_expiration_warning_email hook.\r\n* An email is sent when a membership expires. A WP cron job is setup on plugin activation. You can disable the email via the pmpro_send_expiration_email hook.\r\n* Note: Right now users cannot \"extend\" a membership that is about to expire without first canceling their current membership. I plan to add \"membership extensions\" for these cases, but it's a little complicated and I didn't want to hold up this release for them. So Real Soon Now.\r\n\r\n= 1.2.1 =\r\n* Fixed bug where non-member admins would be redirected away from the \"All Pages\" page in the admin.\r\n\r\n= 1.2 =\r\n* Fixing some wonkiness with the 1.1.15 update.\r\n* Fixed \"warning\" showing up on discount code pages.\r\n* Tweaked the admin pages a bit for consistency.\r\n* Added screenshots and FAQ to the readme.\r\n* Figured we were due for a bigger version step.\r\n\r\n= 1.1.15 =\r\n* Discount Codes Added!\r\n* Removed some redundant files that slipped into the services folder.\r\n* Fixed the !!levels!! variable for message settings of the advanced tab.\r\n* Changing some ids columns in tables to unsigned.\r\n\r\n= 1.1.14 =\r\n* Now encoding #'s when sending info via Authorize.net's API. This may prevent some address conflicts.\r\n\r\n= 1.1.13 =\r\n* No longer adding \"besecure\" custom field to the billing and checkout pages. You can still add this manually to selectively require SSL on a page. If you are trying to do a free membership without SSL, you will have to make sure the besecure custom field is deleted from the Membership-Checkout page, especially if you are upgrading from an older version of PMPro.\r\n* Added a filter before sending the default WP welcome notification email. Return false for the \"pmpro_wp_new_user_notification\" hook/filter to skip sending the WP default welcome email (because in many cases they are already getting an email from PMPro as well).\r\n\r\n= 1.1.12 =\r\n* Revenue report on members list page. (Rought estimate only that doesn't take into account trial periods and billing limits.)\r\n* Enabling weekly recurring payments for Authorize.net by converting week period to 7 days * # months.\r\n* Improved error handling on checkout page.\r\n* Now running \"pmpro_after_change_membership_level\" actions after the \"pmpro_after_checkout\" action. Previously this hook was only called when a membership level was changed via the WP admin.\r\n* Won't complain about setting up a Payment Gateway if you only have free membership levels.\r\n* The \"besecure\" custom field is not added to the billing or checkout by default anymore when you run the \"create the pages for me\" option in the settings. Whether or not to use HTTPS on a page is now handled in the preheader files for each page (see below).\r\n* The plugin won't force SSL on the checkout page anymore unless the membership level requires payment. If your checkout page is still running over HTTPS/SSL for free membership checkouts, make sure the \"besecure\" custom field has been deleted on your checkout page. You can use the \"besecure\" custom field or the \"pmpro_besecure\" filter to override the plugin's decision.\r\n* The plugin won't force SSL on the cancel page anymore. Again, you can override this using the \"besecure\" custom field or the \"pmpro_besecure\" filter.\r\n\r\n= 1.1.11 =\r\n* Removed some debug code from the invoice page that might have shown on error.\r\n* Added check to recaptcha library code incase it is already installed. (Let's hope other plugin developers are doing the same.)\r\n* Removed the TinyMCE editor from the description field on the edit membership level page. It was a little buggy. Might bring it back later.\r\n\r\n= 1.1.10 =\r\n* added a hook/filter \"pmpro_rss_text_filter\"\r\n* added a hook/filter \"pmpro_non_member_text_filter\"\r\n* added a hook/filter \"pmpro_not_logged_in_text_filter\"\r\n* adjusted the pmpro_has_membership_access() function\r\n* added a hook/filter \"pmpro_has_membership_access_filter\"\r\n* updated the hook/filter \"pmpro_has_membership_access_filter_{post-type}\"\r\n* removed the \"pmpro_has_membership_access_action_{post-type}\" hook/action\r\n* update invoice page to handle case where no invoice is found\r\n\r\n= 1.1.9 =\r\n* You can now set individual posts to require membership without assigning them to a category.\r\n* Fixed bug with the confirmation email during signup.\r\n* Fixed a CSS bug on the cancel membership page.\r\n\r\n= 1.1.8 =\r\n* Fix for login/registration URL rerouting.\r\n* Added members list to admin bar menu.\r\n* Added warning/error when trying to checkout before the payment gateway is setup.\r\n* Fixed some error handling in the order class.\r\n* Fixed a bug that occurred when processing amounts less than $1.\r\n\r\n= 1.1.7 =\r\n* Fixed bugs with http to https redirects and visa versa.\r\n* Fixed redirect bugs for sites installed in a subdomain.\r\n\r\n= 1.1.6 =\r\n* Fixed MySQL bug showing up on some users add membership level page.\r\n\r\n= 1.1.5 =\r\n* Required fix for PayPal Website Payments Pro processing. Please update.\r\n* Fixed bug with pagination on members list.\r\n* Fixed bugs with errors thrown by MemberOrder class.\r\n* Updated login/registration URL rerouting.\r\n\r\n= 1.1.4 =\r\n* Custom Post Types default to allowing access\r\n* Fixed login_redirect code.\r\n* Added pmpro_login_redirect filter for when members login.\r\n\r\n= 1.1.3 =\r\n* Getting ready for the WP plugin repository\r\n* License text update.\r\n\r\n= 1.1.2 =\r\n* Added hooks to checkout page for customizing registration fields.\r\n* Fixed bug in pmpro_getLevelCost();\r\n* Another CCV/CVV fix for Authorize.net.\r\n* License text update.\r\n* Admin notices are loaded via Ajax now.\r\n\r\n= 1.1.1 =\r\n* Added honeypot to signup page.\r\n* Updated pmpro_add_pages to use capabilities instead of user levels\r\n* Fixed checkboxes in admin screens.\r\n* Now checking that passwords match on signup.\r\n* Properly sending CCV/CVV codes to Authorize.net.\r\n\r\n= 1.0 =\r\n* This is the launch version. No changes yet.\r\n"], "filenames": ["adminpages/advancedsettings.php", "adminpages/discountcodes.php", "adminpages/membershiplevels.php", "adminpages/memberslist-csv.php", "adminpages/memberslist.php", "adminpages/orders-csv.php", "adminpages/orders.php", "adminpages/reports.php", "readme.txt"], "buggy_code_start_loc": [230, 12, 17, 12, 11, 12, 11, 57, 102], "buggy_code_end_loc": [307, 180, 575, 18, 252, 58, 780, 58, 102], "fixing_code_start_loc": [230, 12, 17, 12, 11, 12, 11, 57, 103], "fixing_code_end_loc": [307, 180, 575, 18, 252, 58, 780, 58, 106], "type": "CWE-79", "message": "Multiple cross-site scripting (XSS) vulnerabilities in the Paid Memberships Pro (PMPro) plugin before 1.8.4.3 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) s parameter to membershiplevels.php, (2) memberslist.php, or (3) orders.php in adminpages/ or the (4) edit parameter to adminpages/membershiplevels.php.", "other": {"cve": {"id": "CVE-2015-5532", "sourceIdentifier": "cve@mitre.org", "published": "2017-10-23T18:29:00.743", "lastModified": "2021-04-06T12:55:36.050", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Multiple cross-site scripting (XSS) vulnerabilities in the Paid Memberships Pro (PMPro) plugin before 1.8.4.3 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) s parameter to membershiplevels.php, (2) memberslist.php, or (3) orders.php in adminpages/ or the (4) edit parameter to adminpages/membershiplevels.php."}, {"lang": "es", "value": "M\u00c3\u00baltiples vulnerabilidades Cross-Site Scripting (XSS) en el plugin Paid Memberships Pro (PMPro) plugin en versiones anteriores a la 1.8.4.3 para WordPress permite que atacantes remotos inyecten scripts web o HTML arbitrarios mediante (1) el par\u00c3\u00a1metro s en membershiplevels.php, (2) memberslist.php o (3) orders.php en adminpages/ o (4) el par\u00c3\u00a1metro edit en adminpages/membershiplevels.php."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:strangerstudios:paid_memberships_pro:*:*:*:*:*:wordpress:*:*", "versionEndExcluding": "1.8.4.3", "matchCriteriaId": "806B9ED2-505F-410C-9D18-A92E99861FE6"}]}]}], "references": [{"url": "http://packetstormsecurity.com/files/132812/WordPress-Paid-Memberships-Pro-1.8.4.2-Cross-Site-Scripting.html", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}, {"url": "http://www.paidmembershipspro.com/2015/07/pmpro-updates-1-8-4-3-and-1-8-4-4/", "source": "cve@mitre.org", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "http://www.securityfocus.com/archive/1/536057/100/0/threaded", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/strangerstudios/paid-memberships-pro/commit/add03e3ed90e9163e5a46e20e6c371a87ff5a677", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://wordpress.org/plugins/paid-memberships-pro/#developers", "source": "cve@mitre.org", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://wpvulndb.com/vulnerabilities/8109", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.htbridge.com/advisory/HTB23264", "source": "cve@mitre.org", "tags": ["Broken Link"]}]}, "github_commit_url": "https://github.com/strangerstudios/paid-memberships-pro/commit/add03e3ed90e9163e5a46e20e6c371a87ff5a677"}}