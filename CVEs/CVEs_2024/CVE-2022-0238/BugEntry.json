{"buggy_code": ["<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2015 - 2022, Phoronix Media\n\tCopyright (C) 2015 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_benchmark implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'One-Time Benchmark Run';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\tif(PHOROMATIC_USER_IS_VIEWER)\n\t\t\treturn;\n\n\t\t$is_new = true;\n\t\t$e_schedule = false;\n\t\tif(!empty($PATH[0]) && $PATH[0] == 'all')\n\t\t{\n\t\t\t$main = '<h1>Past Benchmark Tickets</h1>';\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_benchmark_tickets WHERE AccountID = :account_id AND State >= 0 ORDER BY TicketIssueTime DESC');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$result = $stmt->execute();\n\t\t\t$main .= '<ol>';\n\n\t\t\tif($result)\n\t\t\t{\n\t\t\t\t$row = $result->fetchArray();\n\n\t\t\t\tif(!empty($row))\n\t\t\t\t{\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<li><a href=\"?benchmark/' . $row['TicketID'] . '\">' . $row['Title'] . '</a></li>';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$main .= '<li>No Benchmark Tickets Found</li>';\n\t\t\t}\n\n\t\t\t$main .= '</ol>';\n\t\t}\n\t\telse if(!empty($PATH[0]) && is_numeric($PATH[0]))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_benchmark_tickets WHERE AccountID = :account_id AND TicketID = :ticket_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':ticket_id', $PATH[0]);\n\t\t\t$result = $stmt->execute();\n\t\t\t$row = $result->fetchArray();\n\n\t\t\tif(!empty($row))\n\t\t\t{\n\t\t\t\tif(isset($_GET['remove']))\n\t\t\t\t{\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_benchmark_tickets WHERE AccountID = :account_id AND TicketID = :ticket_id');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$stmt->bindValue(':ticket_id', $PATH[0]);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\theader('Location: /?benchmark');\n\t\t\t\t}\n\t\t\t\telse if(isset($_GET['repeat']))\n\t\t\t\t{\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_benchmark_tickets SET TicketIssueTime = :new_ticket_time, State = 1 WHERE AccountID = :account_id AND TicketID = :ticket_id');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$stmt->bindValue(':ticket_id', $PATH[0]);\n\t\t\t\t\t$stmt->bindValue(':new_ticket_time', time());\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t}\n\t\t\t\telse if(isset($_GET['disable']))\n\t\t\t\t{\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_benchmark_tickets SET State = 0 WHERE AccountID = :account_id AND TicketID = :ticket_id');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$stmt->bindValue(':ticket_id', $PATH[0]);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t}\n\n\t\t\t\t$main = null;\n\t\t\t\t$main .= '<h1>' . $row['Title'] . '</h1>';\n\t\t\t\t$main .= '<h3>' . $row['Description'] . '</h3>';\n\t\t\t\t$main .= '<p>This benchmark ticket was created on <strong>' . date('j F Y \\a\\t H:i', strtotime($row['LastModifiedOn'])) . '</strong> by <strong>' . $row['LastModifiedBy'] . '. The ticket was last issued for testing at ' . date('j F Y \\a\\t H:i', $row['TicketIssueTime']) . '</strong>.';\n\t\t\t\t$main .= '<p> <a href=\"/?benchmark/' . $PATH[0] . '/&repeat\">Repeat Ticket</a> &nbsp; &nbsp; &nbsp; <a href=\"/?benchmark/' . $PATH[0] . '/&remove\">Remove Ticket</a>' . (!isset($_GET['disable']) && $row['State'] > 0 ? ' &nbsp; &nbsp; &nbsp; <a href=\"/?benchmark/' . $PATH[0] . '/&disable\">End Ticket</a>' : null) . '</p>';\n\n\t\t\t\tif(!empty($row['RunTargetSystems']))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h1>System Targets</h1><ol>';\n\t\t\t\t\tforeach(explode(',', $row['RunTargetSystems']) as $system_id)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<li><a href=\"?systems/' . $system_id . '\">' . phoromatic_server::system_id_to_name($system_id) . '</a></li>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!empty($row['RunTargetGroups']))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h1>Group Targets</h1><ol>';\n\t\t\t\t\tforeach(explode(',', $row['RunTargetGroups']) as $group)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(empty($group))\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t$main .= '<li><strong style=\"font-weight: 800;\">' . $group . '</strong></li>';\n\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT SystemID FROM phoromatic_systems WHERE AccountID = :account_id AND Groups LIKE :sgroup AND State > 0 ORDER BY Title ASC');\n\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':sgroup', '%#' . $group . '#%');\n\t\t\t\t\t\t$result = $stmt->execute();\n\n\t\t\t\t\t\twhile($result && $row = $result->fetchArray())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$main .= '<li><a href=\"?systems/' . $row['SystemID'] . '\">' . phoromatic_server::system_id_to_name($row['SystemID']) . '</a></li>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$main .= '</ol>';\n\t\t\t\tif(!empty($row['EnvironmentVariables']))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h1>Environment</h1><ol>';\n\n\t\t\t\t\tforeach(explode(';', $row['EnvironmentVariables']) as $env)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<li><strong>' . $env . '</strong></li>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</ol>';\n\t\t\t\t}\n\t\t\t\t$main .= '<hr /><h1>Ticket Payload</h1>';\n\t\t\t\t$main .= '<p>This ticket runs the <strong>' . $row['SuiteToRun'] . '</strong> test suite:</p>';\n\t\t\t\t$main .= '<div style=\"max-height: 400px; overflow-y: scroll;\">';\n\t\t\t\t$xml_path = phoromatic_server::find_suite_file($_SESSION['AccountID'], $row['SuiteToRun']);\n\t\t\t\tif(is_file($xml_path))\n\t\t\t\t{\n\t\t\t\t\t$test_suite = new pts_test_suite($xml_path);\n\n\t\t\t\t//\t$main .= '<h2>' . $test_suite->get_title() . '</h2>';\n\t\t\t\t//\t$main .= '<p><strong>' . $test_suite->get_maintainer() . '</strong></p>';\n\t\t\t\t//\t$main .= '<p><em>' . $test_suite->get_description() . '</em></p>';\n\n\t\t\t\t\tforeach($test_suite->get_contained_test_result_objects() as $tro)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<h3>' . $tro->test_profile->get_title() . ' [' . $tro->test_profile->get_identifier() . ']</h3>';\n\t\t\t\t\t\t$main .= '<p>' . $tro->get_arguments_description() . '</p>';\n\t\t\t\t\t}\n\n\t\t\t\t\t//$main .= '<hr />';\n\t\t\t\t}\n\n\t\t\t\t$main .= '</div><hr />';\n\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">';\n\t\t\t\tif(strpos($row['EnvironmentVariables'], 'PTS_CONCURRENT_TEST_RUNS') !== false)\n\t\t\t\t{\n\t\t\t\t\tif(isset($_REQUEST['view_log']) && is_file(phoromatic_server::phoromatic_account_stress_log_path($_SESSION['AccountID'], $PATH[0]) . $_REQUEST['view_log'] . '.log'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<hr /><h1>Stress Log For: ' . phoromatic_server::system_id_to_name($_REQUEST['view_log']) . '</h1>';\n\t\t\t\t\t\t$log_text = PHP_EOL . file_get_contents(phoromatic_server::phoromatic_account_stress_log_path($_SESSION['AccountID'], $PATH[0]) . $_REQUEST['view_log'] . '.log');\n\n\t\t\t\t\t\t$x = 0;\n\t\t\t\t\t\twhile(($x = strpos($log_text, \"\\n##\", $x)) !== false)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$log_text = substr($log_text, 0, $x) . \"\\n<strong style=\\\"font-weight: 800;\\\">\" . substr($log_text, $x + 1);\n\n\t\t\t\t\t\t\tif(($y = strpos($log_text, \"\\n\", $x + 2)) !== false)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$log_text = substr($log_text, 0, $y) . '</strong>' . substr($log_text, $y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$x = $y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$x = 0;\n\t\t\t\t\t\twhile(($x = strpos($log_text, \"\\n[\", $x)) !== false)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$log_text = substr($log_text, 0, $x) . \"\\n<strong style=\\\"font-weight: 800;\\\">\" . substr($log_text, $x + 1);\n\n\t\t\t\t\t\t\tif(($y = strpos($log_text, \"]\", $x + 2)) !== false)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$log_text = substr($log_text, 0, $y) . '</strong>' . substr($log_text, $y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$x = $y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '<blockquote>' . str_replace(\"\\n\", '<br />', $log_text) . '</blockquote>';\n\t\t\t\t\t\t$main .= '<p><a href=\"?benchmark/' . $PATH[0] . '#stress_logs\">View Other System Logs</a></p>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a name=\"stress_logs\"></a><hr /><h1>Stress Run Logs</h1><ol>';\n\t\t\t\t\t\t$count = 0;\n\t\t\t\t\t\tforeach(pts_file_io::glob(phoromatic_server::phoromatic_account_stress_log_path($_SESSION['AccountID'], $PATH[0]) . '*.log') as $log_file)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$sys_id = basename($log_file, '.log');\n\t\t\t\t\t\t\t$main .= '<li><a href=\"?benchmark/' . $PATH[0] . '/&view_log=' . $sys_id . '\">' . phoromatic_server::system_id_to_name($sys_id) . '</a></li>';\n\t\t\t\t\t\t\t$count++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif($count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$main .= '<li><em>No Logs Currently Available</em></li>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '</ol>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$main .= '<div style=\"margin: 0 5%;\"><ul style=\"max-height: 100%;\"><li><h1>Test Results</h1></li>';\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime, TimesViewed FROM phoromatic_results WHERE AccountID = :account_id AND BenchmarkTicketID = :ticket_id ORDER BY UploadTime DESC');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$stmt->bindValue(':ticket_id', $PATH[0]);\n\t\t\t\t\t$test_result_result = $stmt->execute();\n\t\t\t\t\t$results = 0;\n\t\t\t\t\twhile($test_result_row = $test_result_result->fetchArray())\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a onclick=\"\"><li id=\"result_select_' . $test_result_row['PPRID'] . '\"><input type=\"checkbox\" id=\"result_compare_checkbox_' . $test_result_row['PPRID'] . '\" onclick=\"javascript:phoromatic_checkbox_toggle_result_comparison(\\'' . $test_result_row['PPRID'] . '\\');\" onchange=\"return false;\"></input> <span onclick=\"javascript:phoromatic_window_redirect(\\'?result/' . $test_result_row['PPRID'] . '\\');\">' . $test_result_row['Title'] . '</span><br /><table><tr><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_server::user_friendly_timedate($test_result_row['UploadTime']) .  '</td><td>' . $test_result_row['TimesViewed'] . ' Times Viewed</td></table></li></a>';\n\t\t\t\t\t\t$results++;\n\n\t\t\t\t\t}\n\t\t\t\t\tif($results == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Results Found</li>';\n\t\t\t\t\t}\n\t\t\t\t\telse if($results > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a onclick=\"\"><li id=\"global_bottom_totals\"><input type=\"checkbox\" id=\"global_checkbox\" onclick=\"javascript:phoromatic_toggle_checkboxes_on_page(this);\" onchange=\"return false;\"></input> <strong>' . $results . ' Results</strong></li></a>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</ul></div>';\n\t\t\t\t\t$main .= '</div>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(isset($_POST['benchmark_title']) && !empty($_POST['benchmark_title']))\n\t\t\t{\n\t\t\t\t$title = phoromatic_get_posted_var('benchmark_title');\n\t\t\t\t$description = phoromatic_get_posted_var('benchmark_description');\n\t\t\t\t$result_identifier = phoromatic_get_posted_var('benchmark_identifier');\n\t\t\t\t$suite_to_run = phoromatic_get_posted_var('suite_to_run');\n\n\t\t\t\tif(strlen($title) < 3)\n\t\t\t\t{\n\t\t\t\t\techo '<h2>Title must be at least three characters.</h2>';\n\t\t\t\t\texit;\n\t\t\t\t}\n\t\t\t\tif(strlen($result_identifier) < 3)\n\t\t\t\t{\n\t\t\t\t\techo '<h2>Identifier must be at least three characters.</h2>';\n\t\t\t\t\texit;\n\t\t\t\t}\n\t\t\t\tif(strlen($suite_to_run) < 3)\n\t\t\t\t{\n\t\t\t\t\techo '<h2>You must specify a suite to run.</h2>';\n\t\t\t\t\texit;\n\t\t\t\t}\n\n\t\t\t\t$run_target_systems = phoromatic_get_posted_var('run_on_systems', array());\n\t\t\t\t$run_target_groups = phoromatic_get_posted_var('run_on_groups', array());\n\t\t\t\tif(!is_array($run_target_systems)) $run_target_systems = array();\n\t\t\t\tif(!is_array($run_target_groups)) $run_target_groups = array();\n\t\t\t\t$run_target_systems = implode(',', $run_target_systems);\n\t\t\t\t$run_target_groups = implode(',', $run_target_groups);\n\n\t\t\t\tif($is_new)\n\t\t\t\t{\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$ticket_id = rand(10, 999999);\n\t\t\t\t\t\t$matching_tickets = phoromatic_server::$db->querySingle('SELECT TicketID FROM phoromatic_benchmark_tickets WHERE TicketID = \\'' . $ticket_id . '\\'');\n\t\t\t\t\t}\n\t\t\t\t\twhile(!empty($matching_tickets));\n\t\t\t\t}\n\n\t\t\t\t$env_vars = array();\n\n\t\t\t\tif(is_numeric($_POST['PTS_CONCURRENT_TEST_RUNS']) && $_POST['PTS_CONCURRENT_TEST_RUNS'] > 0)\n\t\t\t\t{\n\t\t\t\t\tarray_push($env_vars, 'PTS_CONCURRENT_TEST_RUNS=' . $_POST['PTS_CONCURRENT_TEST_RUNS']);\n\t\t\t\t}\n\t\t\t\tif(is_numeric($_POST['TOTAL_LOOP_TIME']) && $_POST['TOTAL_LOOP_TIME'] > 0)\n\t\t\t\t{\n\t\t\t\t\tarray_push($env_vars, 'TOTAL_LOOP_TIME=' . $_POST['TOTAL_LOOP_TIME']);\n\t\t\t\t}\n\n\t\t\t\tforeach(pts_env::get_posted_options('phoromatic') as $ei => $ev)\n\t\t\t\t{\n\t\t\t\t\tarray_push($env_vars, $ei . '=' . $ev);\n\t\t\t\t}\n\n\t\t\t\t$env_vars = implode(';', $env_vars);\n\n\t\t\t\t// Add benchmark\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT OR REPLACE INTO phoromatic_benchmark_tickets (AccountID, TicketID, TicketIssueTime, Title, ResultIdentifier, SuiteToRun, Description, State, LastModifiedBy, LastModifiedOn, RunTargetGroups, RunTargetSystems, EnvironmentVariables) VALUES (:account_id, :ticket_id, :ticket_time, :title, :result_identifier, :suite_to_run, :description, :state, :modified_by, :modified_on, :run_target_groups, :run_target_systems, :environment_variables)');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':ticket_id', $ticket_id);\n\t\t\t\t$stmt->bindValue(':ticket_time', time());\n\t\t\t\t$stmt->bindValue(':title', $title);\n\t\t\t\t$stmt->bindValue(':result_identifier', $result_identifier);\n\t\t\t\t$stmt->bindValue(':suite_to_run', $suite_to_run);\n\t\t\t\t$stmt->bindValue(':description', $description);\n\t\t\t\t$stmt->bindValue(':state', 1);\n\t\t\t\t$stmt->bindValue(':modified_by', $_SESSION['UserName']);\n\t\t\t\t$stmt->bindValue(':modified_on', phoromatic_server::current_time());\n\t\t\t\t$stmt->bindValue(':public_key', null); //  isset($public_key) ? $public_key :\n\t\t\t\t$stmt->bindValue(':run_target_groups', $run_target_groups);\n\t\t\t\t$stmt->bindValue(':run_target_systems', $run_target_systems);\n\t\t\t\t$stmt->bindValue(':environment_variables', $env_vars);\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\tphoromatic_add_activity_stream_event('benchmark', $ticket_id, ($is_new ? 'added' : 'modified'));\n\n\t\t\t\tif($result)\n\t\t\t\t{\n\t\t\t\t\theader('Location: ?benchmark/' . $ticket_id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$main = '<h2>' . ($is_new ? 'Create' : 'Edit') . ' A Benchmark</h2>\n\t\t\t<p>This page allows you to run a test suite -- consisting of a single or multiple test suites -- on a given set/group of systems right away at their next earliest possibility. This benchmark mode is an alternative to the <a href=\"?schedules\">benchmark schedules</a> for reptitive/routine testing.</p>';\n\t\t\t$local_suites = array();\n\t\t\tforeach(pts_file_io::glob(phoromatic_server::phoromatic_account_suite_path($_SESSION['AccountID']) . '*/suite-definition.xml') as $xml_path)\n\t\t\t{\n\t\t\t\t\t$id = basename(dirname($xml_path));\n\t\t\t\t\t$test_suite = new pts_test_suite($xml_path);\n\t\t\t\t\t$local_suites[$test_suite->get_title() . ' - ' . $id] = $id;\n\t\t\t}\n\t\t\t$official_suites = pts_test_suites::suites_on_disk(false, true);\n\n\t\t\tif(empty($local_suites))\n\t\t\t{\n\t\t\t\t$main .= '<p><strong>Before you can create a benchmark ticket you must first <a href=\"?build_suite\">create a test suite</a> with the tests you wish to run.</strong></p>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$main .= '<form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"run_benchmark\" id=\"run_benchmark\" method=\"post\" enctype=\"multipart/form-data\" onsubmit=\"return validate_run_benchmark();\">\n\t\t\t\t<h3>Title:</h3>\n\t\t\t\t<p>The title is the name of the result file for this test run.</p>\n\t\t\t\t<p><input type=\"text\" name=\"benchmark_title\" value=\"' . (!$is_new ? $e_schedule['Title'] : null) . '\" /></p>\n\t\t\t\t<h3>Test Run Identifier:</h3>\n\t\t\t\t<p>The test run identifier is the per-system name for the system(s) being benchmarked. The following variables may be used: <strong>.SYSTEM</strong>, <strong>.GROUP</strong>. Any custom per-user system variables set via the individual system pages can also be used.</p>\n\t\t\t\t<p><input type=\"text\" name=\"benchmark_identifier\" value=\"' . (!$is_new ? $e_schedule['Identifier'] : null) . '\" /></p>\n\t\t\t\t<h3>Test Suite To Run:</h3>\n\t\t\t\t<p><a href=\"?build_suite\">Build a suite</a> to add/select more tests to run or <a href=\"?local_suites\">view local suites</a> for more information on a particular suite. A test suite is a set of test profiles to run in a pre-defined manner.</p>';\n\t\t\t\t$main .= '<p><select name=\"suite_to_run\" id=\"suite_to_run_identifier\" onchange=\"phoromatic_show_basic_suite_details(\\'\\');\">';\n\t\t\t\tforeach(array_merge($local_suites, $official_suites) as $title => $id)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<option value=\"' . $id . '\">' . $title . '</option>';\n\t\t\t\t}\n\t\t\t\t$main .= '</select></p>';\n\t\t\t\t$main .= '<p><div id=\"suite_details\" style=\"background: #efefef;\"></div></p>';\n\t\t\t\t$main .= '<h3>Description:</h3>\n\t\t\t\t<p>The description is an optional way to add more details about the intent or objective of this test run.</p>\n\t\t\t\t<p><textarea name=\"benchmark_description\" id=\"benchmark_description\" cols=\"50\" rows=\"3\">' . (!$is_new ? $e_schedule['Description'] : null) . '</textarea></p>\n\t\t\t\t<hr /><h3>System Targets:</h3>\n\t\t\t\t<p>Select the systems that should be benchmarked at their next earliest convenience.</p>\n\t\t\t\t<p style=\"white-space: nowrap;\">';\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0 ORDER BY Title ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$result = $stmt->execute();\n\n\t\t\t\tif(!$is_new)\n\t\t\t\t{\n\t\t\t\t\t$e_schedule['RunTargetSystems'] = explode(',', $e_schedule['RunTargetSystems']);\n\t\t\t\t\t$e_schedule['RunTargetGroups'] = explode(',', $e_schedule['RunTargetGroups']);\n\t\t\t\t}\n\n\t\t\t\tif($row = $result->fetchArray())\n\t\t\t\t{\n\t\t\t\t\t$main .= '<h4>Systems: ';\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<input type=\"checkbox\" name=\"run_on_systems[]\" value=\"' . $row['SystemID'] . '\" ' . (!$is_new && in_array($row['SystemID'], $e_schedule['RunTargetSystems']) ? 'checked=\"checked\" ' : null) . '/> ' . $row['Title'] . ' ';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t\t$main .= '</h4>';\n\t\t\t\t}\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT GroupName FROM phoromatic_groups WHERE AccountID = :account_id ORDER BY GroupName ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$result = $stmt->execute();\n\n\t\t\t\tif($row = $result->fetchArray())\n\t\t\t\t{\n\t\t\t\t\t$main .= '<h4>Groups: ';\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<input type=\"checkbox\" name=\"run_on_groups[]\" value=\"' . $row['GroupName'] . '\" ' . (!$is_new && in_array($row['GroupName'], $e_schedule['RunTargetGroups']) ? 'checked=\"checked\" ' : null) . '/> ' . $row['GroupName'] . ' ';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t\t$main .= '</h4>';\n\t\t\t\t}\n\n\t\t\t\t$main .= '</p>\n\t\t\t\t<hr /><h3>Environment Options</h3>\n\t\t\t\t<h4>Stress Testing</h4>\n\t\t\t\t<p>If you wish to test systems for stability/reliability rather than performance, use this option and specify the number of tests to run concurrently (two or more) and (optionally) for the total period of time to continue looping the benchmarks. These options are intended to just stress the system and will not record any benchmark results. From the command-line this testing mode can be used via the <em>phoronix-test-suite stress-run</em> sub-command.</p>\n\t\t\t\t<p><strong>Concurrent Number Of Test Processes:</strong> <select name=\"PTS_CONCURRENT_TEST_RUNS\"><option value=\"0\">Disabled</option>';\n\t\t\t\tfor($i = 2; $i <= 24; $i++)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<option value=\"' . $i . '\">' . $i . '</option>';\n\t\t\t\t}\n\t\t\t\t$main .= '</select></p>\n\t\t\t\t<p><strong>Force Loop Time:</strong> <select name=\"TOTAL_LOOP_TIME\"><option value=\"0\">Disabled</option>';\n\t\t\t\t$s = true;\n\t\t\t\tfor($i = 5; $i < 60; $i += 5)\n\t\t\t\t{\n\t\t\t\t\tif($i > 15 && $i % 10 != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '<option value=\"' . $i . '\">' . pts_strings::format_time($i, 'MINUTES') . '</option>';\n\t\t\t\t}\n\t\t\t\tfor($i = 60; $i <= (30 * 24 * 60); $i += 60)\n\t\t\t\t{\n\t\t\t\t\tif($i > 10080)\n\t\t\t\t\t{\n\t\t\t\t\t\t// 7 days\n\t\t\t\t\t\tif(($i % 1440) != 0)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if($i > 480)\n\t\t\t\t\t{\n\t\t\t\t\t\t$s = !$s;\n\t\t\t\t\t\tif(!$s)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '<option value=\"' . $i . '\">' . pts_strings::format_time($i, 'MINUTES') . '</option>';\n\t\t\t\t}\n\t\t\t\t$main .= '</select></p>';\n\t\t\t\t$main .= '<p><a id=\"env_var_options_show\" onclick=\"javascript:document.getElementById(\\'env_var_options\\').style.display = \\'block\\'; javascript:document.getElementById(\\'env_var_options_show\\').style.display = \\'none\\'; \">Advanced Options</a></p> <div id=\"env_var_options\" style=\"display: none;\"><p>The advanced options require the Phoromatic clients be on the latest Phoronix Test Suite (10.8 or newer / Git). See the Phoronix Test Suite documentation for more information on these environment variables / advanced options.</p>' . pts_env::get_html_options('phoromatic') . '</div>';\n\n\t\t\t\t$main .= '<hr /><p align=\"left\"><input name=\"submit\" value=\"' . ($is_new ? 'Run' : 'Edit') . ' Benchmark\" type=\"submit\" onclick=\"return pts_rmm_validate_schedule();\" /></p>\n\t\t\t\t\t</form>';\n\t\t\t}\n\t\t}\n\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_benchmark_tickets WHERE AccountID = :account_id AND State >= 0 AND TicketIssueTime > :time_cutoff ORDER BY TicketIssueTime DESC LIMIT 30');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$stmt->bindValue(':time_cutoff', (time() - (60 * 60 * 24 * 14)));\n\t\t$result = $stmt->execute();\n\t\t$right = '<ul><li>Benchmark Tickets</li>';\n\n\t\tif($result)\n\t\t{\n\t\t\t$row = $result->fetchArray();\n\n\t\t\tif(!empty($row))\n\t\t\t{\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\t$right .= '<li><a href=\"?benchmark/' . $row['TicketID'] . '\">' . $row['Title'] . '</a></li>';\n\t\t\t\t}\n\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t}\n\t\t}\n\t\t$right .= '<li><em><a href=\"?benchmark/all\">View All Past Tickets</a></em></li>';\n\t\t$right .= '</ul>';\n\n\t\techo phoromatic_webui_header_logged_in();\n\t\techo phoromatic_webui_main($main, phoromatic_webui_right_panel_logged_in($right));\n\t\techo phoromatic_webui_footer();\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2014 - 2021, Phoronix Media\n\tCopyright (C) 2014 - 2021, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nclass phoromatic_r_add_test_details implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn '';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\t$test_profile = new pts_test_profile($_GET['tp']);\n\t\t$name = $test_profile->get_title();\n\t\t$description = $test_profile->get_description();\n\n\t\techo '<h2>' . $name . ' [' . $test_profile->get_identifier() . '] </h2>';\n\t\techo '<p><em>' . $description . '</em></p>';\n\t\tif(!empty($supported_os = $test_profile->get_supported_platforms()))\n\t\t{\n\t\t\techo '<p>This test is supported on <strong>' . implode(', ', $supported_os) . '</strong>.</p>';\n\t\t}\n\t\techo '<p>More information on this test can be found via <a href=\"?tests/' . $test_profile->get_identifier() . '\">the test profile page</a> or <a target=\"_blank\" href=\"http://openbenchmarking.org/test/' . $test_profile->get_identifier() . '\">OpenBenchmarking.org</a>.</p>';\n\n\t\t$test_options = $test_profile->get_test_option_objects();\n\n\t\tif(count($test_options) == 0)\n\t\t{\n\t\t\techo '<p><strong>No configurable user options for this test.</strong></p>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor($i = 0; $i < count($test_options); $i++)\n\t\t\t{\n\t\t\t\t$o = $test_options[$i];\n\t\t\t\t$option_count = $o->option_count();\n\n\t\t\t\techo '<input type=\"hidden\" name=\"test_add[]\" value=\"' . $test_profile->get_identifier() . '\" />';\n\n\t\t\t\tif(isset($_GET['build_suite']))\n\t\t\t\t{\n\t\t\t\t\t$test_prefix = \"test_option_\" . microtime() . \"_\";\n\t\t\t\t\techo '<input type=\"hidden\" name=\"test_prefix[]\" value=\"' . $test_prefix . '\" />';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t$test_prefix = \"test_option_\" . $_GET['tp'] . \"_\";\n\n\t\t\t\techo '<p id=\"' . $test_prefix . $o->get_identifier() . '_name\">' . $o->get_name() . '</p>';\n\n\t\t\t\tif($option_count == 0)\n\t\t\t\t{\n\t\t\t\t\techo '<input name=\"' . $test_prefix . $o->get_identifier() . '_selected\" id=\"' . $test_prefix . $o->get_identifier() . '_selected\" type=\"hidden\" value=\"\" />';\n\t\t\t\t\techo '<p><input type=\"text\" name=\"' . $test_prefix . $o->get_identifier() . '\" id=\"' . $test_prefix . $o->get_identifier() . '\"  onChange=\"phoromatic_test_select_update_selected_name_custom_input(this);\" /></p>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\techo '<input name=\"' . $test_prefix . $o->get_identifier() . '_selected\" id=\"' . $test_prefix . $o->get_identifier() . '_selected\" type=\"hidden\" value=\"' . $o->get_name() . ': ' . $o->get_option_name(0) . '\" />';\n\t\t\t\t\techo '<p><select name=\"' . $test_prefix . $o->get_identifier() . '\" id=\"' . $test_prefix . $o->get_identifier() . '\" onChange=\"phoromatic_test_select_update_selected_name(this);\">';\n\n\t\t\t\t\tfor($j = 0; $j < $option_count; $j++)\n\t\t\t\t\t{\n\t\t\t\t\t\techo '<option value=\"' . $o->format_option_value_from_input($o->get_option_value($j)) . '\">' . $o->get_option_name($j) . '</option>';\n\t\t\t\t\t}\n\n\t\t\t\t\techo '</select></p>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\techo '<br /><br /><p><input name=\"submit\" value=\"Add\" type=\"submit\" onclick=\"\" /></p>';\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2021, Phoronix Media\n\tCopyright (C) 2021, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_r_basic_suite_details implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn '';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\t$ts = $_GET['ts'];\n\t\t$ts_file = phoromatic_server::find_suite_file($_SESSION['AccountID'], $ts);\n\t\t$test_suite = new pts_test_suite($ts_file);\n\t\t$name = $test_suite->get_title();\n\t\t$description = $test_suite->get_description();\n\n\t\techo '<h2>' . $name . '</h2>';\n\t\techo '<p><em>' . $description . '</em></p>';\n\t\t$test_suite->sort_contained_tests();\n\t\tforeach($test_suite->get_contained_test_result_objects() as $tro)\n\t\t{\n\t\t\techo '<p><strong>' . $tro->test_profile->get_title() . ' [' . $tro->test_profile->get_identifier() . ']</strong><br />';\n\t\t\techo $tro->get_arguments_description() . '</p>' . PHP_EOL;\n\t\t}\n\t\tif(stripos($_SERVER['HTTP_REFERER'], '?schedules') !== false)\n\t\t{\n\t\t\techo '<input type=\"hidden\" name=\"suite_add\" value=\"' . $ts . '\" />';\n\t\t\techo '<br /><br /><p><input name=\"submit\" value=\"Add\" type=\"submit\" onclick=\"\" /></p>';\n\t\t}\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2008 - 2022, Phoronix Media\n\tCopyright (C) 2008 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_schedules implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'Test Schedules';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\t$main = null;\n\t\techo phoromatic_webui_header_logged_in();\n\n\t\tif(!empty($PATH[0]) && is_numeric($PATH[0]))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_schedules WHERE AccountID = :account_id AND ScheduleID = :schedule_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t$result = $stmt->execute();\n\t\t\t$row = $result->fetchArray();\n\n\t\t\tif(empty($row))\n\t\t\t{\n\t\t\t\t$main = '<h1>Test Schedules</h1>';\n\t\t\t\t$main .= '<h3>No Resource Found</h3>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\n\t\t\t\t\tif(isset($_POST['add_to_schedule_select_test']))\n\t\t\t\t\t{\n\t\t\t\t\t\tphoromatic_quit_if_invalid_input_found(array('add_to_schedule_select_test'));\n\t\t\t\t\t\t$name = $_POST['add_to_schedule_select_test'];\n\t\t\t\t\t\t$args = array();\n\t\t\t\t\t\t$args_name = array();\n\n\t\t\t\t\t\tforeach($_POST as $i => $v)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(substr($i, 0, 12) == 'test_option_' && substr($i, -9) != '_selected')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tphoromatic_quit_if_invalid_input_found(array($i, $i . '_selected'));\n\t\t\t\t\t\t\t\tarray_push($args, $v);\n\t\t\t\t\t\t\t\tarray_push($args_name, $_POST[$i . '_selected']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$args_name = implode(' - ', $args_name);\n\t\t\t\t\t\t$args = implode(' ', $args);\n\n\t\t\t\t\t\tif(!empty($name))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_tests (AccountID, ScheduleID, TestProfile, TestArguments, TestDescription) VALUES (:account_id, :schedule_id, :test_profile, :test_arguments, :test_description)');\n\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t\t$stmt->bindValue(':test_profile', $name);\n\t\t\t\t\t\t\t$stmt->bindValue(':test_arguments', $args);\n\t\t\t\t\t\t\t$stmt->bindValue(':test_description', $args_name);\n\t\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\t\tphoromatic_add_activity_stream_event('tests_for_schedule', $PATH[0], 'added');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($_POST['suite_add']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$test_suite = phoromatic_server::find_suite_file($_SESSION['AccountID'], $_POST['suite_add']);\n\t\t\t\t\t\tif(is_file($test_suite))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$test_suite = new pts_test_suite($test_suite);\n\t\t\t\t\t\t\tforeach($test_suite->get_contained_test_result_objects() as $tro)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_tests (AccountID, ScheduleID, TestProfile, TestArguments, TestDescription) VALUES (:account_id, :schedule_id, :test_profile, :test_arguments, :test_description)');\n\t\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t\t\t$stmt->bindValue(':test_profile', $tro->test_profile->get_identifier());\n\t\t\t\t\t\t\t\t$stmt->bindValue(':test_arguments', $tro->get_arguments());\n\t\t\t\t\t\t\t\t$stmt->bindValue(':test_description', $tro->get_arguments_description());\n\t\t\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\t\t\tphoromatic_add_activity_stream_event('tests_for_schedule', $PATH[0], 'added');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($PATH[1]) && $PATH[1] == 'remove' && !empty($PATH[2]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// REMOVE TEST\n\t\t\t\t\t\t$to_remove = explode(PHP_EOL, base64_decode($PATH[2]));\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id AND TestProfile = :test AND TestArguments = :test_args');\n\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':test', $to_remove[0]);\n\t\t\t\t\t\t$stmt->bindValue(':test_args', $to_remove[1]);\n\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\tphoromatic_add_activity_stream_event('tests_for_schedule', $to_remove[0] . ' - ' . $to_remove[1], 'removed');\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($PATH[1]) && $PATH[1] == 'delete-trigger' && !empty($PATH[2]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// REMOVE TRIGGER\n\t\t\t\t\t\t$trigger = pts_strings::sanitize(base64_decode($PATH[2]));\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_schedules_triggers WHERE AccountID = :account_id AND Trigger = :trigger AND ScheduleID = :schedule_id');\n\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':trigger', $trigger);\n\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\tif($result)\n\t\t\t\t\t\t\t$main .= '<h2 style=\"color: red;\">Trigger Removed: ' . $trigger . '</h2>';\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($PATH[1]) && in_array($PATH[1], array('activate', 'deactivate')) && verify_submission_token())\n\t\t\t\t\t{\n\t\t\t\t\t\tswitch($PATH[1])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'deactivate':\n\t\t\t\t\t\t\t\t$new_state = 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'activate':\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t$new_state = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// REMOVE TEST\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_schedules SET State = :new_state WHERE AccountID = :account_id AND ScheduleID = :schedule_id');\n\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':new_state', $new_state);\n\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\t$row['State'] = $new_state;\n\t\t\t\t\t\tphoromatic_add_activity_stream_event('schedule', $PATH[0], $PATH[1]);\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($_POST['do_manual_test_run']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_triggers (AccountID, ScheduleID, Trigger, TriggeredOn) VALUES (:account_id, :schedule_id, :trigger, :triggered_on)');\n\t\t\t\t\t\t$stmt->bindValue(':account_id',\t$_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':trigger', $_SESSION['UserName'] . ' - Manual Test Run - ' . date('H:i j M Y'));\n\t\t\t\t\t\t$stmt->bindValue(':triggered_on', phoromatic_server::current_time());\n\t\t\t\t\t\t$stmt->execute();\n\t\t\t\t\t\t$main .= '<h2 style=\"color: red;\">Manual Test Run Triggered</h2>';\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($_POST['skip_current_ticket']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_trigger_skips (AccountID, ScheduleID, Trigger) VALUES (:account_id, :schedule_id, :trigger)');\n\t\t\t\t\t\t$stmt->bindValue(':account_id',\t$_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':trigger', date('Y-m-d'));\n\t\t\t\t\t\t$stmt->execute();\n\t\t\t\t\t\t$main .= '<h2 style=\"color: red;\">Current Trigger To Be Ignored</h2>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$main .= '<h1>' . $row['Title'] . '</h1>';\n\t\t\t\t$main .= '<h3>' . $row['Description'] . '</h3>';\n\t\t\t\tswitch($row['RunPriority'])\n\t\t\t\t{\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t$prio = 'Low Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 100:\n\t\t\t\t\t\t$prio = 'Default Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 200:\n\t\t\t\t\t\t$prio = 'High Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t$prio = $row['RunPriority'] . ' Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t$main .= '<p>Priority: ' . $prio . '</p><p>This schedule was last modified on <strong>' . date('j F Y \\a\\t H:i', strtotime($row['LastModifiedOn'])) . '</strong> by <strong>' . $row['LastModifiedBy'] . '</strong>.';\n\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<p><a href=\"?sched/' . $PATH[0] . '\">Edit Schedule</a> | ';\n\n\t\t\t\t\tif($row['State'] == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a href=\"?schedules/' . $PATH[0] . '/deactivate' . append_token_to_url()  . '\">Deactivate Schedule</a>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a href=\"?schedules/' . $PATH[0] . '/activate' . append_token_to_url()  . '\">Activate Schedule</a>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '</p>';\n\t\t\t\t}\n\n\t\t\t\t$main .= '<hr />';\n\t\t\t\t$main .= '<h2>Schedule</h2>';\n\t\t\t\tif(!empty($row['ActiveOn']))\n\t\t\t\t{\n\t\t\t\t\t$active_days = explode(',', $row['ActiveOn']);\n\t\t\t\t\t$week = array('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');\n\t\t\t\t\tforeach($active_days as $i => &$day)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!isset($week[$day]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tunset($active_days[$i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$day = $week[$day];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch(count($active_days))\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t$day_show = implode(' and ', $active_days);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t$day_show = implode(', ', $active_days);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '<p>This test is scheduled to run every <strong>' . $day_show . '</strong> at <strong>' . str_replace('.', ':', $row['RunAt']) . '</strong>.</p>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$main .= '<p>This test schedule is not currently set to run a pre-defined time-based schedule.</p>';\n\t\t\t\t}\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\t\t\t\t\t$trigger_url = 'http://' . phoromatic_web_socket_server_ip() . '/event.php?type=trigger&user=' . $_SESSION['UserName'] . '&public_key=' . $row['PublicKey'] . '&trigger=XXX';\n\t\t\t\t\t$main .= '<p>This test schedule can be manually triggered to run at any time by calling <strong>' . $trigger_url . '</strong> where <em>XXX</em> is the trigger value to be used (if relevant, such as a time-stamp, Git/SVN commit number or hash, etc). There\\'s also the option of sub-targeting system(s) part of this schedule. One option is appending <em>&sub_target_this_ip</em> if this URL is being called from one of the client test systems to only sub-target the triggered testing on that client, among other options.</p>';\n\t\t\t\t\t$main .= '<p>If you wish to run this test schedule now, click the following button and the schedule will be run on all intended systems at their next earliest possible convenience.</p>';\n\t\t\t\t\t$main .= '<p><form action=\"?schedules/' . $PATH[0] . '\" name=\"manual_run\" method=\"post\">';\n\t\t\t\t\t$main .= '<input type=\"hidden\" name=\"do_manual_test_run\" value=\"1\" /><input type=\"submit\" value=\"Run Test Schedule Now\" onclick=\"return confirm(\\'Run this test schedule now?\\');\" />';\n\t\t\t\t\t$main .= '</form></p>';\n\t\t\t\t\t$main .= '<p><form action=\"?schedules/' . $PATH[0] . '\" name=\"skip_run\" method=\"post\">';\n\t\t\t\t\t$main .= '<input type=\"hidden\" name=\"skip_current_ticket\" value=\"1\" /><input type=\"submit\" value=\"Skip Current Test Ticket\" onclick=\"return confirm(\\'Skip any currently active test ticket on all systems?\\');\" />';\n\t\t\t\t\t$main .= '</form></p>';\n\t\t\t\t}\n\n\t\t\t\t$main .= '<hr />';\n\n\t\t\t\t$contexts = array('SetContextPreInstall' => 'Pre-Install', 'SetContextPostInstall' => 'Post-Install', 'SetContextPreRun' => 'Pre-Test-Run', 'SetContextPostRun' => 'Post-Test-Run');\n\t\t\t\t$scripts = 0;\n\t\t\t\tforeach($contexts as $context => $v)\n\t\t\t\t{\n\t\t\t\t\tif(isset($row[$context]) && !empty($row[$context]) && is_file(phoromatic_server::phoromatic_account_path($_SESSION['AccountID']) . 'context_' . $row[$context]))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scripts++;\n\t\t\t\t\t\t$main .= '<h2>' . $v . ' Context Script</h2>';\n\t\t\t\t\t\t$main .= '<blockquote>' . str_replace(PHP_EOL, '<br />', htmlentities(file_get_contents(phoromatic_server::phoromatic_account_path($_SESSION['AccountID']) . 'context_' . $row[$context]))) . '</blockquote>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(!empty($row['EnvironmentVariables']))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h1>Environment Variables</h1><ol>';\n\n\t\t\t\t\tforeach(explode(';', $row['EnvironmentVariables']) as $env)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<li><strong>' . $env . '</strong></li>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</ol>';\n\t\t\t\t}\n\n\t\t\t\tif($scripts > 0)\n\t\t\t\t\t$main .= '<hr />';\n\n\t\t\t\t$main .= '<h2>Tests To Run</h2>';\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t$result = $stmt->execute();\n\n\t\t\t\t$test_count = 0;\n\t\t\t\t$main .= '<p>';\n\t\t\t\twhile($row = $result->fetchArray())\n\t\t\t\t{\n\t\t\t\t\t$test_count++;\n\t\t\t\t\t$main .= $row['TestProfile'] . ($row['TestDescription'] != null ? ' - <em>' . $row['TestDescription'] . '</em>' : '') . (!PHOROMATIC_USER_IS_VIEWER ? ' <a href=\"?schedules/' . $PATH[0] . '/remove/' . base64_encode(implode(PHP_EOL, array($row['TestProfile'], $row['TestArguments']))) . '\">Remove Test</a>' : null) . '<br />';\n\n\t\t\t\t\t/*\n\t\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER && isset($_REQUEST['make_version_lock_tests']))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(strpos($row['TestProfile'], '.') == false)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$test_profile = new pts_test_profile($row['TestProfile']);\n\t\t\t\t\t\t\t$full_identifier = $test_profile->get_identifier(true);\n\n\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_schedules_tests SET TestProfile = :version_locked_tp WHERE AccountID = :account_id AND ScheduleID = :schedule_id AND TestProfile = :test');\n\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t\t$stmt->bindValue(':test', $row['TestProfile']);\n\t\t\t\t\t\t\t$stmt->bindValue(':version_locked_tp', $full_identifier);\n\t\t\t\t\t\t\t$result2 = $stmt->execute();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t}\n\t\t\t\t$main .= '</p>';\n\n\t\t\t\tif($test_count == 0)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<h3 style=\"text-transform: uppercase;\">No tests have been added yet for this test schedule.</h3>';\n\t\t\t\t}\n\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Add A Test</h2>';\n\t\t\t\t\t$main .= '<form action=\"?schedules/' . $PATH[0] . '\" name=\"add_test\" id=\"add_test\" method=\"post\">';\n\t\t\t\t\t$main .= '<select name=\"add_to_schedule_select_test\" id=\"add_to_schedule_select_test\" onchange=\"phoromatic_schedule_test_details(\\'\\');\">';\n\t\t\t\t\t$dc = pts_client::download_cache_path();\n\t\t\t\t\t$dc_exists = is_file($dc . 'pts-download-cache.json');\n\t\t\t\t\tif($dc_exists)\n\t\t\t\t\t{\n\t\t\t\t\t\t$cache_json = file_get_contents($dc . 'pts-download-cache.json');\n\t\t\t\t\t\t$cache_json = json_decode($cache_json, true);\n\t\t\t\t\t}\n\t\t\t\t\tforeach(array_merge(pts_tests::local_tests(), pts_openbenchmarking::available_tests(false, isset($_COOKIE['list_show_all_test_versions']) && $_COOKIE['list_show_all_test_versions'])) as $test)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(phoromatic_server::read_setting('show_local_tests_only'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$cache_checked = false;\n\t\t\t\t\t\t\tif($dc_exists)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif($cache_json && isset($cache_json['phoronix-test-suite']['cached-tests']))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(in_array($test, $cache_json['phoronix-test-suite']['cached-tests']))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$cache_checked = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!$cache_checked && pts_test_install_request::test_files_available_on_local_system($test) == false)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$main .= '<option value=\"' . $test . '\">' . $test . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</select>';\n\t\t\t\t\t$main .= pts_web_embed::cookie_checkbox_option_helper('list_show_all_test_versions', 'Show all available test profile versions.');\n\t\t\t\t\t$main .= '<p><div id=\"test_details\"></div></p>';\n\t\t\t\t\t$main .= '</form>';\n\n\t\t\t\t\t$local_suites = array();\n\t\t\t\t\tforeach(pts_file_io::glob(phoromatic_server::phoromatic_account_suite_path($_SESSION['AccountID']) . '*/suite-definition.xml') as $xml_path)\n\t\t\t\t\t{\n\t\t\t\t\t\t$id = basename(dirname($xml_path));\n\t\t\t\t\t\t$test_suite = new pts_test_suite($xml_path);\n\t\t\t\t\t\t$local_suites[$test_suite->get_title() . ' - ' . $id] = $id;\n\t\t\t\t\t}\n\t\t\t\t\t$official_suites = pts_test_suites::suites_on_disk(false, true);\n\n\t\t\t\t\t$main .= '<hr /><h2>Add A Suite:</h2>';\n\t\t\t\t\t$main .= '<form action=\"?schedules/' . $PATH[0] . '\" name=\"add_suite\" id=\"add_suite\" method=\"post\">';\n\t\t\t\t\t$main .= '<p><select name=\"suite_to_run\" id=\"suite_to_run_identifier\" onchange=\"phoromatic_show_basic_suite_details(\\'\\');\">';\n\t\t\t\t\tforeach(array_merge($local_suites, $official_suites) as $title => $id)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<option value=\"' . $id . '\">' . $title . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</select></p>';\n\t\t\t\t\t$main .= '<p><div id=\"suite_details\"></div></p>';\n\t\t\t\t\t$main .= '</form>';\n\t\t\t\t}\n\n\t\t\t\t$systems_in_schedule = phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $PATH[0]);\n\t\t\t\tif(!empty($systems_in_schedule))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Systems In Schedule</h2>';\n\t\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<p>To run this schedule on more systems, <a href=\"?sched/' . $PATH[0] . '\">edit the schedule</a>.</p>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\"><ul><li><h1>Systems</h1></li>';\n\n\t\t\t\t\tforeach($systems_in_schedule as $system_id)\n\t\t\t\t\t{\n\t\t\t\t\t\t$row = phoromatic_server::get_system_details($_SESSION['AccountID'], $system_id);\n\t\t\t\t\t\t$main .= '<a href=\"?systems/' . $row['SystemID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . $row['LocalIP'] . '</td><td><strong>' . $row['CurrentTask'] . '</strong></td><td><strong>Last Communication:</strong> ' . date('j F Y H:i', strtotime($row['LastCommunication'])) . '</td></tr></table></li></a>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</ul></div><hr />';\n\t\t\t\t}\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Trigger, TriggeredOn FROM phoromatic_schedules_triggers WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TriggeredOn DESC LIMIT 10');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t$test_result_result = $stmt->execute();\n\t\t\t\t$test_result_row = $test_result_result->fetchArray();\n\n\t\t\t\tif($test_result_row)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\">';\n\t\t\t\t\t$main .= '<ul><li><h1>Recent Triggers For This Schedule</h1></li>';\n\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a onclick=\"\"><li>' . $test_result_row['Trigger'] . '<br /><table><tr><td>' . phoromatic_server::user_friendly_timedate($test_result_row['TriggeredOn']) . '</td><td><a href=\"?schedules/' . $PATH[0] . '/delete-trigger/' . base64_encode($test_result_row['Trigger']) . '\">Remove Trigger</a></td></tr></table></li></a>';\n\n\t\t\t\t\t}\n\t\t\t\t\twhile($test_result_row = $test_result_result->fetchArray());\n\t\t\t\t\t$main .= '</ul>';\n\t\t\t\t\t$main .= '</div>';\n\t\t\t\t}\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY UploadTime DESC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t$test_result_result = $stmt->execute();\n\t\t\t\t$test_result_row = $test_result_result->fetchArray();\n\t\t\t\t$oldest_upload_time = 0;\n\n\t\t\t\tif($test_result_row)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\">';\n\t\t\t\t\t$main .= '<ul><li><h1>Recent Test Results For This Schedule</h1></li>';\n\t\t\t\t\t$results = 0;\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$oldest_upload_time = $test_result_row['UploadTime'];\n\t\t\t\t\t\tif($results > 100)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '<a href=\"?result/' . $test_result_row['PPRID'] . '\"><li>' . $test_result_row['Title'] . '<br /><table><tr><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_server::user_friendly_timedate($test_result_row['UploadTime']) .  '</td></tr></table></li></a>';\n\t\t\t\t\t\t$results++;\n\n\t\t\t\t\t}\n\t\t\t\t\twhile($test_result_row = $test_result_result->fetchArray());\n\t\t\t\t\t$main .= '</ul>';\n\t\t\t\t\t$main .= '</div>';\n\t\t\t\t}\n\t\t\t\t$num_results = phoromatic_results_for_schedule($PATH[0]);\n\n\t\t\t\tif($num_results > 1)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<p>Jump to the latest results from the past: ';\n\t\t\t\t\t$main .= '<select name=\"view_results_from_past\" id=\"view_results_from_past\" onchange=\"phoromatic_jump_to_results_from(\\'' . $PATH[0] . '\\', \\'view_results_from_past\\');\">';\n\t\t\t\t\t$oldest_upload_time = !empty($oldest_upload_time) ? strtotime($oldest_upload_time) : 0;\n\t\t\t\t\t$opts = array(\n\t\t\t\t\t\t'Week' => 7,\n\t\t\t\t\t\t'Three Weeks' => 21,\n\t\t\t\t\t\t'Month' => 30,\n\t\t\t\t\t\t'Quarter' => 90,\n\t\t\t\t\t\t'Six Months' => 180,\n\t\t\t\t\t\t'Year' => 365,\n\t\t\t\t\t\t);\n\t\t\t\t\tforeach($opts as $str_name => $time_offset)\n\t\t\t\t\t{\n\t\t\t\t\t\tif($oldest_upload_time > (time() - (86400 * $time_offset)))\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t$main .= '<option value=\"' . $time_offset . '\">' . $str_name . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '<option value=\"all\">All Results</option>';\n\t\t\t\t\t$main .= '</select>';\n\t\t\t\t\t$main .= '</p><hr />';\n\t\t\t\t}\n\t\t\t\t$main .= '<p><strong>' . $num_results . ' Test Results Available For This Schedule.</strong></p>';\n\t\t\t}\n\n\t\t\techo phoromatic_webui_main($main, phoromatic_webui_right_panel_logged_in());\n\t\t\techo phoromatic_webui_footer();\n\t\t\treturn;\n\t\t}\n\n\n\t\t$main = '<h1>Test Schedules</h1>\n\t\t<p>Test schedules are used for tests that are intended to be run on a recurring basis -- either daily or other defined time period -- or whenever a trigger/event occurs, like a new Git commit to a software repository being tracked. Test schedules can be run on any given system(s)/group(s) and can be later edited.</p>';\n\n\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t{\n\t\t\t$main .= '\n\t\t\t<hr />\n\t\t\t<h2>Create A Schedule</h2>\n\t\t\t<p><a href=\"?sched\">Create a schedule</a> followed by adding tests/suites to run for that schedule on the selected systems.</p>';\n\t\t}\n\n\t\t$main .= '<hr /><h2>Current Schedules</h2>';\n\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n\t\t\t<ul>\n\t\t\t<li><h1>Active Test Schedules</h1></li>';\n\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, Description, RunTargetSystems, RunTargetGroups, RunAt, ActiveOn FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 ORDER BY Title ASC');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\n\t\tif($row == false)\n\t\t{\n\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Schedules Found</li>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\t$stmt_tests = phoromatic_server::$db->prepare('SELECT COUNT(*) AS TestCount FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n\t\t\t\t$stmt_tests->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt_tests->bindValue(':schedule_id', $row['ScheduleID']);\n\t\t\t\t$result_tests = $stmt_tests->execute();\n\t\t\t\t$row_tests = $result_tests->fetchArray();\n\t\t\t\t$test_count = !empty($row_tests) ? $row_tests['TestCount'] : 0;\n\n\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler($test_count, 'Test') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . ' Total</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID'], 'TODAY'), 'Result') . ' Today</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n\t\t\t}\n\t\t\twhile($row = $result->fetchArray());\n\t\t}\n\n\t\t$main .= '</ul>\n\t\t</div>';\n\n\t\t$main .= '<hr /><h2>Schedule Overview</h2>';\n\t\t$week = array('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');\n\n\t\tforeach($week as $i => $day)\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, RunAt, RunTargetGroups, RunTargetSystems FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 AND ActiveOn LIKE :active_on ORDER BY RunAt,ActiveOn,Title ASC');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':active_on', '%' . $i . '%');\n\t\t\t$result = $stmt->execute();\n\t\t\t$has_matched = false;\n\t\t\twhile($row = $result->fetchArray())\n\t\t\t{\n\t\t\t\tif(!$has_matched)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<h3>' . $day . '</h3>' . PHP_EOL . '<p>';\n\t\t\t\t\t$has_matched = true;\n\t\t\t\t}\n\t\t\t\t$main .= '<em>' . $row['RunAt'] . '</em> <a href=\"?schedules/' . $row['ScheduleID'] . '\">' . $row['Title'] . '</a>';\n\t\t\t\t//$main .= $row['RunTargetSystems'] . ' ' . $row['RunTargetGroups'];\n\t\t\t\t$main .= '<br />';\n\t\t\t}\n\n\t\t\tif($has_matched)\n\t\t\t\t$main .= '</p>' . PHP_EOL;\n\t\t}\n\n\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n\t\t\t\t<ul>\n\t\t\t\t<li><h1>Deactivated Test Schedules</h1></li>';\n\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, Description, RunTargetSystems, RunTargetGroups, RunAt, ActiveOn FROM phoromatic_schedules WHERE AccountID = :account_id AND State < 1 ORDER BY Title ASC');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\n\t\tif($row == false)\n\t\t{\n\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Schedules Found</li>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\t$stmt_tests = phoromatic_server::$db->prepare('SELECT COUNT(*) AS TestCount FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n\t\t\t\t$stmt_tests->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt_tests->bindValue(':schedule_id', $row['ScheduleID']);\n\t\t\t\t$result_tests = $stmt_tests->execute();\n\t\t\t\t$row_tests = $result_tests->fetchArray();\n\t\t\t\t$test_count = !empty($row_tests) ? $row_tests['TestCount'] : 0;\n\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler($test_count, 'Test') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . ' Total</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID'], 'TODAY'), 'Result') . ' Today</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n\t\t\t}\n\t\t\twhile($row = $result->fetchArray());\n\t\t}\n\n\t\t$main .= '</ul>\n\t\t</div>';\n\n\t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n\t\techo phoromatic_webui_footer();\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2008 - 2022, Phoronix Media\n\tCopyright (C) 2008 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_system_claim implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'Phoromatic Client System Claim';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\techo phoromatic_webui_header_logged_in();\n\t\t$main = null;\n\n\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t{\n\n\t\t\tif(function_exists('ssh2_connect') && isset($_POST['ip']) && isset($_POST['port']) && isset($_POST['password']) && isset($_POST['username']))\n\t\t\t{\n\t\t\t\t$connection = ssh2_connect($_POST['ip'], $_POST['port']);\n\n\t\t\t\tif(ssh2_auth_password($connection, $_POST['username'], $_POST['password']))\n\t\t\t\t{\n\t\t\t\t\t$tmp_local_file = tempnam('/tmp', 'pts-ssh');\n\t\t\t\t\t$tmp_remote_file = 'pts-ssh-' . rand(9999, 99999);\n\n\t\t\t\t\tfile_put_contents($tmp_local_file, '#!/bin/sh\n\t\t\tif [ -w /var/lib/phoronix-test-suite/ ]\n\t\t\tthen\n\t\t\t\tPHORO_FILE_PATH=/var/lib/phoronix-test-suite/\n\t\t\telif [ -w $HOME/.phoronix-test-suite/ ]\n\t\t\tthen\n\t\t\t\tPHORO_FILE_PATH=$HOME/.phoronix-test-suite/\n\t\t\tfi\n\n\t\t\techo \"' . phoromatic_web_socket_server_ip() . '\" >> $PHORO_FILE_PATH/phoromatic-servers\n\t\t\tmkdir -p $PHORO_FILE_PATH/modules-data/phoromatic\n\t\t\techo \"' . phoromatic_web_socket_server_addr() . '\" > $PHORO_FILE_PATH/modules-data/phoromatic/last-phoromatic-server\n\t\t\t');\n\n\t\t\t\t\tssh2_scp_send($connection, $tmp_local_file, $tmp_remote_file);\n\t\t\t\t\tunlink($tmp_local_file);\n\t\t\t\t\tssh2_exec($connection, 'chmod +x ' . $tmp_remote_file);\n\t\t\t\t\tssh2_exec($connection, './' . $tmp_remote_file);\n\t\t\t\t\tssh2_exec($connection, 'rm' . $tmp_remote_file);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif((isset($_POST['ip_claim']) && !empty($_POST['ip_claim'])) && isset($_POST['ping']))\n\t\t\t{\n\t\t\t\t$ip_ping = ip2long($_POST['ip_claim']) !== false ? $_POST['ip_claim'] : null;\n\t\t\t\tif($ip_ping)\n\t\t\t\t{\n\t\t\t\t\techo '<h3>Ping Test: ' . $ip_ping . '</h3>';\n\t\t\t\t\techo '<pre>';\n\t\t\t\t\techo shell_exec('ping -c 1 ' . $ip_ping);\n\t\t\t\t\techo '</pre>';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if((isset($_POST['ip_claim']) && !empty($_POST['ip_claim'])) || (isset($_POST['mac_claim']) && !empty($_POST['mac_claim'])))\n\t\t\t{\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_system_association_claims (AccountID, IPAddress, NetworkMAC, CreationTime) VALUES (:account_id, :ip_address, :mac_address, :creation_time)');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':ip_address', pts_strings::simple($_POST['ip_claim']));\n\t\t\t\t$stmt->bindValue(':mac_address', pts_strings::simple($_POST['mac_claim']));\n\t\t\t\t$stmt->bindValue(':creation_time', phoromatic_server::current_time());\n\t\t\t\t$result = $stmt->execute();\n\t\t\t}\n\t\t\tif(isset($_POST['remove_claim']) && !empty($_POST['remove_claim']))\n\t\t\t{\n\t\t\t\tlist($ipc, $macc) = explode(',', $_POST['remove_claim']);\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_system_association_claims WHERE AccountID = :account_id AND NetworkMAC = :mac_address AND IPAddress = :ip_address');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':ip_address', pts_strings::simple($ipc));\n\t\t\t\t$stmt->bindValue(':mac_address', pts_strings::simple($macc));\n\t\t\t\t$stmt->bindValue(':creation_time', phoromatic_server::current_time());\n\t\t\t\t$result = $stmt->execute();\n\t\t\t}\n\n\t\t\t$main .= '<h2>Add Phoromatic Server Info Via SSH</h2>\n\t\t\t<p>If your Phoromatic client systems are SSH-enabled, you can specify their SSH connection information below. In doing so, the Phoromatic Server will do a one-time connection to it immediately to pre-seed the system with the Phoromatic Server account information for this account. This should allow the client systems to then find the server automatically next time the phoronix-test-suite is run. This command assumes the Phoronix Test Suite is already pre-installed on the client system in your desired configuration.</p>';\n\n\t\t\tif(function_exists('ssh2_connect'))\n\t\t\t{\n\t\t\t\t$main .= '<h3>Phoromatic Client SSH Information:</h3>';\n\t\t\t\t$main .= '<form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"ssh_connect\" method=\"post\">\n\t\t\t\t<p><strong>IP Address:</strong> <input type=\"text\" name=\"ip\" /></p>\n\t\t\t\t<p><strong>SSH Port:</strong> <input type=\"text\" name=\"port\" value=\"22\" /></p>\n\t\t\t\t<p><strong>Username:</strong> <input type=\"text\" name=\"username\" /></p>\n\t\t\t\t<p><strong>Password:</strong> <input type=\"password\" name=\"password\" /></p>\n\t\t\t\t<p><input name=\"submit\" value=\"Seed Phoromatic Server Account Information\" type=\"submit\" /></p>\n\t\t\t\t</form>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$main .= '<h3>PHP SSH2 Must Be Installed For This Feature</h3>';\n\t\t\t}\n\t\t\t$main .= '<hr />';\n\t\t\t$main .= '<h2>Add Phoromatic Server Info Via IP/MAC</h2>\n\t\t\t<p>If deploying a Phoromatic Server within an organization, you can attempt for automatic configuration of Phoromatic clients if you know the system\\'s IP or MAC addresses. When specifying either of these fields, if a Phoromatic client attempts to connect to this Phoromatic system without being associated to an account, it will be claimed by this account as long as no other Phoromatic accounts are attempting to claim the IP/MAC. This method can be particularly useful if running the Phoromatic client as a systemd/Upstart service where it will continually poll every 90 seconds auto-detected Phoromatic Servers on the LAN via zero-conf networking. For this feature to work, the zero-conf networking (Avahi) support must be enabled and working.</p>';\n\t\t\t$main .= '<form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"auto_associate\" method=\"post\">\n\t\t\t<p><strong>IP Address Claim:</strong> <input type=\"text\" name=\"ip_claim\" /></p>\n\t\t\t<p><strong>MAC Address Claim:</strong> <input type=\"text\" name=\"mac_claim\" /></p>\n\t\t\t<p><input name=\"ping\" value=\"Ping Test\" type=\"submit\" /> &nbsp; <input name=\"submit\" value=\"Submit Claim\" type=\"submit\" /></p>\n\t\t\t</form>';\n\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_system_association_claims WHERE AccountID = :account_id ORDER BY IPAddress ASC');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$result = $stmt->execute();\n\t\t\t$claims = array();\n\t\t\t$main .= '<p style=\"max-height: 500px; overflow-y: auto; \">';\n\t\t\twhile($row = $result->fetchArray())\n\t\t\t{\n\t\t\t\t$ip = $row['IPAddress'] != null ? $row['IPAddress'] : '<em>' . pts_network::mac_to_ip($row['NetworkMAC']) . '</em>';\n\n\t\t\t\t$main .= $ip . ' ' . $row['NetworkMAC'] . '<br />';\n\t\t\t\tarray_push($claims, $row['IPAddress'] . ',' . $row['NetworkMAC']);\n\t\t\t}\n\t\t\t$main .= '</p>';\n\n\t\t\tif(!empty($claims))\n\t\t\t{\n\t\t\t\t$main .= '<hr /><h2>Remove Claim</h2><p>Removing a claimed IP / MAC address.</p>';\n\t\t\t\t$main .= '<p><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"remove_claim\" method=\"post\"><select name=\"remove_claim\" id=\"remove_claim\">';\n\n\t\t\t\tforeach($claims as $claim)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<option value=\"' . $claim . '\">' . str_replace(',', ' ', $claim) . '</option>';\n\t\t\t\t}\n\t\t\t\t$main .= '</select> <input name=\"submit\" value=\"Remove Claim\" type=\"submit\" /></form></p>';\n\t\t\t}\n\n\t\t\t$main .= '<hr />';\n\t\t}\n\n\t\t$right = null;\n\t\techo phoromatic_webui_main($main, phoromatic_webui_right_panel_logged_in($right));\n\t\techo phoromatic_webui_footer();\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2008 - 2022, Phoronix Media\n\tCopyright (C) 2008 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nclass phoromatic_systems implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'Systems';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\techo phoromatic_webui_header_logged_in();\n\t\t$main = null;\n\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_POST['system_title']) && !empty($_POST['system_title']) && isset($_POST['system_description']) && isset($_POST['system_state']))\n\t\t{\n\t\t\tphoromatic_quit_if_invalid_input_found(array('system_title', 'system_description', 'system_state'));\n\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET Title = :title, Description = :description, State = :state, CurrentTask = \\'Awaiting Task\\', BlockPowerOffs = :block_power_offs WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$stmt->bindValue(':title', pts_strings::simple($_POST['system_title']));\n\t\t\t$stmt->bindValue(':description', pts_strings::sanitize($_POST['system_description']));\n\t\t\t$stmt->bindValue(':state', $_POST['system_state']);\n\t\t\t$stmt->bindValue(':block_power_offs', $_POST['block_power_offs']);\n\t\t\t$stmt->execute();\n\t\t}\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_POST['maintenance_mode']))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET MaintenanceMode = :maintenance_mode WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$stmt->bindValue(':maintenance_mode', $_POST['maintenance_mode']);\n\t\t\t$stmt->execute();\n\t\t}\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_GET['clear_system_warnings']))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_system_client_errors WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$stmt->execute();\n\t\t}\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_POST['tick_thread_reboot']))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET TickThreadEvent = :event WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$stmt->bindValue(':event', time() . ':reboot');\n\t\t\t$stmt->execute();\n\t\t}\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_POST['tick_thread_halt']))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET TickThreadEvent = :event WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$stmt->bindValue(':event', time() . ':halt-testing');\n\t\t\t$stmt->execute();\n\t\t}\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_GET['really_delete_system']))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_systems WHERE AccountID = :account_id AND SystemID = :system_id LIMIT 1');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$stmt->execute();\n\t\t}\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_POST['system_var_names'])&& isset($_POST['system_var_values']))\n\t\t{\n\t\t\t$vars = array();\n\t\t\tforeach($_POST['system_var_names'] as $i => $name)\n\t\t\t{\n\t\t\t\tif(isset($_POST['system_var_values'][$i]))\n\t\t\t\t{\n\t\t\t\t\t$name = pts_strings::keep_in_string(strtoupper($name), pts_strings::CHAR_LETTER | pts_strings::CHAR_NUMERIC | pts_strings::CHAR_UNDERSCORE);\n\t\t\t\t\t$val = pts_strings::keep_in_string($_POST['system_var_values'][$i], pts_strings::CHAR_LETTER | pts_strings::CHAR_NUMERIC | pts_strings::CHAR_DASH | pts_strings::CHAR_UNDERSCORE | pts_strings::CHAR_COMMA | pts_strings::CHAR_SLASH | pts_strings::CHAR_SPACE | pts_strings::CHAR_DECIMAL | pts_strings::CHAR_PLUS | pts_strings::CHAR_EQUAL);\n\n\t\t\t\t\tif($name != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t$vars[$name] = $val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$var_string = null;\n\t\t\tforeach($vars as $name => $val)\n\t\t\t{\n\t\t\t\t$var_string .= $name . '=' . $val . ';';\n\t\t\t}\n\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET SystemVariables = :system_variables WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$stmt->bindValue(':system_variables', $var_string);\n\t\t\t$stmt->execute();\n\t\t}\n\n\t\tif(!empty($PATH[0]))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_systems WHERE AccountID = :account_id AND SystemID = :system_id ORDER BY LastCommunication DESC');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$result = $stmt->execute();\n\n\t\t\tif(!empty($result))\n\t\t\t{\n\t\t\t\t$row = $result->fetchArray();\n\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER && isset($PATH[1]) && $PATH[1] == 'edit')\n\t\t\t\t{\n\t\t\t\t\t$main = '<h1>' . $row['Title'] . '</h1>';\n\t\t\t\t\t$main .= '<form name=\"system_form\" id=\"system_form\" action=\"?systems/' . $PATH[0] . '\" method=\"post\" onsubmit=\"return phoromatic_system_edit(this);\">\n\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">System Title:</div> <input type=\"text\" style=\"width: 400px;\" name=\"system_title\" value=\"' . $row['Title'] . '\" /></p>\n\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">System Description:</div> <textarea style=\"width: 400px;\" name=\"system_description\">' . $row['Description'] . '</textarea></p>\n\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">System State:</div><select name=\"system_state\" style=\"width: 200px;\"><option value=\"-1\">Disabled</option><option value=\"1\" selected=\"selected\">Enabled</option></select></p>\n\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">Allow Phoromatic To Power Off System When Testing Complete:</div><select name=\"block_power_offs\" style=\"width: 200px;\"><option value=\"0\">Permitted</option><option value=\"1\">Block Power-Off Signaling For This System</option></select> <sup>Assuming the power-off setting is enabled from the account settings page.</sup></p>\n\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">&nbsp;</div> <input type=\"submit\" value=\"Submit\" /></p></form>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$main = '<h1>' . $row['Title'] . '</h1><p><em>' . ($row['Description'] != null ? $row['Description'] : 'No system description.') . '</em></p>';\n\n\t\t\t\t\tif(phoromatic_server::system_check_if_down($_SESSION['AccountID'], $row['SystemID'], $row['LastCommunication'], $row['CurrentTask']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<h3 style=\"text-align: center; color: red;\">This system appears to be offline or inactive and there are pending tests scheduled to be run on this system that have yet to be completed. This system has not communicated with the Phoromatic Server in ' . pts_strings::format_time((time() - strtotime($row['LastCommunication'])), 'SECONDS', true, 60) . '.</h3>';\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<p><a href=\"?systems/' . $PATH[0] . '/edit\">Edit Task & Enable/Disable System</a></p>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tswitch($row['State'])\n\t\t\t\t{\n\t\t\t\t\tcase -1:\n\t\t\t\t\t\t$state = 'Disabled';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\t$state = 'Connected; Awaiting Approval';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t$state = 'Active';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t$state = 'Unknown';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t$main .= '<hr />';\n\t\t\t\t$status_extra = null;\n\t\t\t\tif(!empty($row['CurrentProcessSchedule']))\n\t\t\t\t{\n\t\t\t\t\t$status_extra = ' - <a href=\"/?schedules/' . $row['CurrentProcessSchedule'] . '\">' . phoromatic_server::schedule_id_to_name($row['CurrentProcessSchedule']) . '</a>';\n\t\t\t\t}\n\t\t\t\telse if(!empty($row['CurrentProcessTicket']))\n\t\t\t\t{\n\t\t\t\t\t$status_extra = ' - <a href=\"/?benchmark/' . $row['CurrentProcessTicket'] . '\">' . phoromatic_server::ticket_id_to_name($row['CurrentProcessTicket']) . '</a>';\n\t\t\t\t}\n\t\t\t\t$info_table = array('Status:' => $row['CurrentTask'] . $status_extra, 'Last Communication:' => phoromatic_server::user_friendly_timedate($row['LastCommunication']), 'Estimated Time Left For Task: ' => phoromatic_server::estimated_time_remaining_string($row['EstimatedTimeForTask'], $row['LastCommunication']), 'State:' => $state, 'Phoronix Test Suite Client:' => $row['ClientVersion'], 'Initial Creation:' => phoromatic_server::user_friendly_timedate($row['CreatedOn']), 'System ID:' => $row['SystemID'], 'Last IP:' => $row['LastIP'], 'MAC Address:' => $row['NetworkMAC'], 'Wake-On-LAN Information:' => (empty($row['NetworkWakeOnLAN']) ? 'N/A' : $row['NetworkWakeOnLAN']), 'Power-Off Sequence Permitted: ' => ($row['BlockPowerOffs'] == 1 ? 'Blocked' : 'Permitted'));\n\t\t\t\t$main .= '<h2>System State</h2>' . pts_webui::r2d_array_to_table($info_table, 'auto');\n\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\t\t\t\t\tif($row['MaintenanceMode'] == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$mm_str = 'Disable Maintenance Mode';\n\t\t\t\t\t\t$mm_val = 0;\n\t\t\t\t\t\t$mm_onclick = 'return true;';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$mm_str = 'Enter Maintenance Mode';\n\t\t\t\t\t\t$mm_val = 1;\n\t\t\t\t\t\t$mm_onclick = 'return confirm(\\'Enter maintenance mode now?\\');';\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '<p><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"update_groups\" method=\"post\"><input type=\"hidden\" name=\"maintenance_mode\" value=\"' . $mm_val . '\" /><input type=\"submit\" value=\"' . $mm_str . '\" onclick=\"' . $mm_onclick . '\" style=\"float: left; margin: 0 20px 5px 0;\" /></form> Putting the system into maintenance mode will power up the system (if supported and applicable) and cause the Phoronix Test Suite Phoromatic client to idle and block all testing until the mode has been disabled. If a test is already running on the system, the maintenance mode will not be entered until after the testing has completed. The maintenance mode can be used if wishing to update the system software or carry out other tasks without interfering with the Phoromatic client process. Once disabled, the Phoronix Test Suite will continue to function as normal.</p>';\n\n\t\t\t\t\tif($row['CoreVersion'] >= 5730)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<p><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"update_groups\" method=\"post\"><input type=\"hidden\" name=\"tick_thread_reboot\" value=\"1\" /><input type=\"submit\" value=\"Reboot System\" style=\"float: left; margin: 0 20px 5px 0;\" /></form> If the system is currently powered up and connected to the Phoromatic Server, this will send a message to the system to issue a reboot -- in case the system is hung on a test or you wish to otherwise manually reboot the server.</p>';\n\n\t\t\t\t\t\t$main .= '<p><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"update_groups\" method=\"post\"><input type=\"hidden\" name=\"tick_thread_halt\" value=\"1\" /><input type=\"submit\" value=\"Halt Testing\" style=\"float: left; margin: 0 20px 5px 0;\" /></form> If the system is currently powered up and running a test/benchmark via the Phoromatic Server, this will tell the system to halt the testing prematurely as soon as the currently-active test has finished. The results successfully ran will then be uploaded to the Phoromatic Server.</p>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$main .= '<hr /><h2>System Variables</h2><p>System variables allow for providing per-system information in an easy-to-use manner for other parts of the Phoromatic system. Initially these named variables can be used for the results identifier when <a href=\"/?benchmark\">creating a benchmark ticket</a> and in the future the system variables may be used elsewhere. Examples of system variables could include providing a <em>.SERIAL</em> variable to acknowledge the system\\'s serial number that may not be presented elsewhere by the Phoronix Test Suite, <em>.ADMIN</em> for the system\\'s local administrator, etc. Variable names can only be alpha-numeric strings while their values are also alpha-numeric strings but with spaces allowed. System variables are always prefixed by a period. These system variables are also automatically transferred to the Phoromatic clients and set as environment variables prior to running any scheduled tests/process via Phoromatic.</p>';\n\n\t\t\t\t$system_variables = $row['SystemVariables'] != null ? explode(';', $row['SystemVariables']) : array();\n\n\t\t\t\t$main .= '<form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"update_system_variables\" method=\"post\">';\n\t\t\t\t$main .= '<table width=\"80%\"><tr><th>Variable Name</th><th>Value</th></tr>';\n\t\t\t\t$i = 0;\n\t\t\t\tforeach($system_variables as $i => $v_string)\n\t\t\t\t{\n\t\t\t\t\t$var = explode('=', $v_string);\n\t\t\t\t\tif(count($var) == 2)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<tr id=\"system_var_' . $i . '\">';\n\t\t\t\t\t\t$main .= '<td><span style=\"font-weight: 800; font-size: 16px;\">.</span><input name=\"system_var_names[]\" value=\"' . $var[0]. '\" readonly /></td>';\n\t\t\t\t\t\t$main .= '<td><input name=\"system_var_values[]\" value=\"' . $var[1]. '\" /></td>';\n\t\t\t\t\t\t$main .= '</tr>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$main .= '<tr id=\"system_var_' . ($i + 1) . '\">';\n\t\t\t\t$main .= '<td><span style=\"font-weight: 800; font-size: 16px;\">.</span><input name=\"system_var_names[]\" /></td>';\n\t\t\t\t$main .= '<td><input name=\"system_var_values[]\" /></td>';\n\t\t\t\t$main .= '</tr>';\n\t\t\t\t$main .= '</table>';\n\t\t\t\t$main .= '<p><input name=\"submit\" value=\"Update System Variables\" type=\"submit\" /></p></form>';\n\n\t\t\t\t$main .= '<hr /><h2>System Components</h2><div style=\"float: left; width: 50%;\">';\n\t\t\t\t$components = pts_result_file_analyzer::system_component_string_to_array($row['Hardware']);\n\t\t\t\t$main .= pts_webui::r2d_array_to_table($components) . '</div><div style=\"float: left; width: 50%;\">';\n\t\t\t\t$components = pts_result_file_analyzer::system_component_string_to_array($row['Software']);\n\t\t\t\t$main .= pts_webui::r2d_array_to_table($components) . '</div>';\n\n\t\t\t\tif(!empty($row['SystemProperties']))\n\t\t\t\t{\n\t\t\t\t\t$properties = json_decode($row['SystemProperties'], true);\n\t\t\t\t\t$main .= '<blockquote style=\"max-height: 440px; overflow: scroll; clear: both;\">';\n\t\t\t\t\tforeach($properties as $component => $component_properties)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<strong>' . strtoupper($component) . '</strong><br />';\n\t\t\t\t\t\tforeach($component_properties as $property => $value)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$main .= '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' . $property . ' = ';\n\n\t\t\t\t\t\t\tif(is_array($value))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tforeach($value as $si => $sv)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(is_array($sv))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tforeach($sv as $ssi => $ssv)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t$main .= '<br />' . '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' . $ssi . ' = ' . $ssv;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t$main .= '<br />';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$main .= '<br />' . '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' . $sv . ' = ' . $sv . PHP_EOL;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t//echo PHP_EOL;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$main .= $value . '<br />';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '<br />';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</blockquote>';\n\t\t\t\t}\n\n\t\t\t\t$system_path = phoromatic_server::phoromatic_account_system_path($_SESSION['AccountID'], $row['SystemID']);\n\t\t\t\t$main .= '<hr />';\n\t\t\t\tif(is_file($system_path . 'sensors-pool.json'))\n\t\t\t\t{\n\t\t\t\t\t$sensors = file_get_contents($system_path . 'sensors-pool.json');\n\t\t\t\t\t$sensors = json_decode($sensors, true);\n\n\t\t\t\t\tforeach($sensors as $title => $s)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!isset($s['values']) || count($s['values']) < 5 || max($s['values']) == min($s['values']))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$graph = new pts_sys_graph(array('title' => $title, 'x_scale' => 'm', 'y_scale' => $s['unit'], 'text_size' => 12, 'reverse_x_direction' => false, 'width' => 920, 'height' => 400));\n\t\t\t\t\t\t$graph->render_base();\n\t\t\t\t\t\t$svg_dom = $graph->render_graph_data($s['values']);\n\t\t\t\t\t\tif($svg_dom === false)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$output_type = 'SVG';\n\t\t\t\t\t\t$graph = $svg_dom->output(null, $output_type);\n\t\t\t\t\t\t$main .= '<p align=\"center\">' . substr($graph, strpos($graph, '<svg')) . '</p>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(is_file($system_path . 'sensors.json'))\n\t\t\t\t{\n\t\t\t\t\t$sensor_file = file_get_contents($system_path . 'sensors.json');\n\t\t\t\t\t$sensor_file = json_decode($sensor_file, true);\n\t\t\t\t\tif($sensor_file && isset($sensor_file['sensors']) && !empty($sensor_file['sensors']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$i = 0;\n\t\t\t\t\t\t$col = array(1 => array(), 2 => array(), 3 => array(), 0 => array());\n\t\t\t\t\t\tforeach($sensor_file['sensors'] as $name => $sensor)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tarray_push($col[($i % 4)], '<strong>' . $name . ':</strong> ' . $sensor['value'] . ' ' . $sensor['unit']);\n\t\t\t\t\t\t\t$i++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$main .= '<h2>System Sensors</h2>';\n\t\t\t\t\t\tforeach($col as $sensors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$main .= '<div style=\"float: left; width: 25%;\">';\n\t\t\t\t\t\t\tforeach($sensors as $sensor)\n\t\t\t\t\t\t\t\t$main .= '<p>' . $sensor . '</p>';\n\t\t\t\t\t\t\t$main .= '</div>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '<p><em><strong>Last Updated:</strong>' . date('d F H:i', filemtime(phoromatic_server::phoromatic_account_system_path($_SESSION['AccountID'], $row['SystemID']) . 'sensors.json')) . ' <strong>System Uptime:</strong> ' . $sensor_file['uptime'] . ' Minutes</em></p>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$log_file = phoromatic_server::phoromatic_account_system_path($_SESSION['AccountID'], $row['SystemID']) . 'phoronix-test-suite.log';\n\t\t\t\tif(is_file($log_file))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Phoronix Test Suite Client Log</h2>';\n\t\t\t\t\t$main .= '<p><textarea style=\"width: 100%; height: 300px;\">' . file_get_contents($log_file)  . '</textarea></p>';\n\t\t\t\t\t$main .= '<p><em><strong>Last Updated:</strong>' . date ('d F H:i', filemtime($log_file)) . '</em></p>';\n\t\t\t\t}\n\n\t\t\t\t$groups = $row['Groups'] != null ? explode('#', $row['Groups']) : array();\n\t\t\t\tforeach($groups as $i => $group)\n\t\t\t\t{\n\t\t\t\t\tif(empty($group))\n\t\t\t\t\t\tunset($groups[$i]);\n\t\t\t\t}\n\t\t\t\t$schedules = phoromatic_server::schedules_that_run_on_system($_SESSION['AccountID'], $row['SystemID']);\n\t\t\t\tif(!empty($groups) || !empty($schedules))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Schedules</h2>';\n\t\t\t\t\tif(!empty($groups))\n\t\t\t\t\t\t$group_msg = 'This system belongs to the following groups: <strong>' . implode(', ', $groups) . '</strong>.';\n\t\t\t\t\telse\n\t\t\t\t\t\t$group_msg = 'This system does not currently belong to any groups.';\n\n\t\t\t\t\t$main .= '<p>' . $group_msg . ' Manage groups via the <a href=\"?systems\">systems page</a>.</p>';\n\n\t\t\t\t\tif(!empty($schedules))\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\"><ul><li><h1>Schedules Running On This System</h1></li>';\n\t\t\t\t\t\tforeach($schedules as &$row)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n\t\t\t\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . '</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '</ul></div>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime FROM phoromatic_results WHERE AccountID = :account_id AND SystemID = :system_id ORDER BY UploadTime DESC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t\t$test_result_result = $stmt->execute();\n\t\t\t\t$test_result_row = $test_result_result->fetchArray();\n\t\t\t\t$results = 0;\n\n\t\t\t\tif($test_result_row != false)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Test Results</h2>';\n\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\">';\n\t\t\t\t\t$main .= '<ul><li><h1>Recent Test Results</h1></li>';\n\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\tif($results > 20)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$main .= '<a href=\"?result/' . $test_result_row['PPRID'] . '\"><li>' . $test_result_row['Title'] . '<br /><table><tr><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_server::user_friendly_timedate($test_result_row['UploadTime']) .  '</td></tr></table></li></a>';\n\t\t\t\t\t\t$results++;\n\n\t\t\t\t\t}\n\t\t\t\t\twhile($test_result_row = $test_result_result->fetchArray());\n\t\t\t\t}\n\n\t\t\t\tif($results > 0)\n\t\t\t\t{\n\t\t\t\t\t$main .= '</ul></div>';\n\t\t\t\t}\n\n\n\t\t\t\t// Any System Errors?\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT ErrorMessage, UploadTime, SystemID, TestIdentifier FROM phoromatic_system_client_errors WHERE AccountID = :account_id AND SystemID = :system_id AND UploadTime >= date(\"now\", \"-14 day\") ORDER BY UploadTime DESC LIMIT 300');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\t$row = $result->fetchArray();\n\t\t\t\tif($row != false)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Recent System Warnings &amp; Errors</h2>';\n\t\t\t\t\t$main .= '<div style=\"overflow: auto; max-height: 500px;\">';\n\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '[' . $row['UploadTime'] . '] <strong>' . $row['TestIdentifier'] . '</strong>: ' .$row['ErrorMessage'] . '<br />';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t\t$main .= '</div>';\n\t\t\t\t\t$main .= '<p align=\"center\"><a href=\"?systems/' . $PATH[0] . '/&clear_system_warnings\">Clear System Warnings/Errors</a></p>';\n\t\t\t\t}\n\n\t\t\t\t$test_install_json = phoromatic_server::phoromatic_account_system_path($_SESSION['AccountID'], $PATH[0]) . 'test-installations.json';\n\t\t\t\tif(is_file($test_install_json))\n\t\t\t\t{\n\t\t\t\t\t$test_install_json = json_decode(file_get_contents($test_install_json), true);\n\t\t\t\t\tif(!empty($test_install_json))\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<hr /><h2>Test Profile Installations</h2>';\n\t\t\t\t\t\tforeach($test_install_json as $test_profile => $ti_data)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$test_installation = new pts_installed_test($ti_data);\n\t\t\t\t\t\t\t$status = $test_installation->get_install_status();\n\t\t\t\t\t\t\tif($status == 'INSTALLED')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$status = '<span style=\"color: green;\">' . $status . '</span> ' . ($test_installation->get_run_count() > 0 ? '<strong>Times Run:</strong> ' . $test_installation->get_run_count() : '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if($status == 'INSTALL_FAILED')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$status = '<span style=\"color: red; font-weight: bold;\">INSTALL FAILED</span>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$error_output = '';\n\t\t\t\t\t\t\t$runtime_errors = $test_installation->get_runtime_errors();\n\t\t\t\t\t\t\t$install_errors = $test_installation->get_install_errors();\n\t\t\t\t\t\t\tif(!empty($runtime_errors))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tforeach($runtime_errors as $e)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$error_output .= '<br />' . trim((empty($e['description']) ? '' : '<em>' . $e['description'] . '</em> - ') . 'Last Attempted: ' . $e['date_time']);\n\t\t\t\t\t\t\t\t\tforeach($e['errors'] as $error)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$error_output .= '<br /> &nbsp; &nbsp; <span style=\"color: red; font-weight: bold;\">    ' . $error . '</span>';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!empty($install_errors))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tforeach($install_errors as $install_error)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$error_output .= '<br /><span style=\"color: red; font-weight: bold;\">    ' . $install_error . '</span>';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$main .= '<p><strong>' .  $test_profile . '</strong> ' .  $status . ' (Install Date: ' . $test_installation->get_install_date() . ')' . $error_output . '</p>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif($main == null)\n\t\t{\n\t\t\tif(!PHOROMATIC_USER_IS_VIEWER && isset($_POST['new_group']) && !empty($_POST['new_group']))\n\t\t\t{\n\t\t\t\t$group = trim($_POST['new_group']);\n\n\t\t\t\tif($group)\n\t\t\t\t{\n\t\t\t\t\tphoromatic_quit_if_invalid_input_found(array('new_group'));\n\t\t\t\t\t$group = pts_strings::simple($group);\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_groups (AccountID, GroupName) VALUES (:account_id, :group_name)');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$stmt->bindValue(':group_name', $group);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\tphoromatic_add_activity_stream_event('groups', $group, 'added');\n\n\t\t\t\t\tif(!empty($_POST['systems_for_group']) && is_array($_POST['systems_for_group']))\n\t\t\t\t\t{\n\t\t\t\t\t\tforeach($_POST['systems_for_group'] as $sid)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Find current groups\n\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Groups FROM phoromatic_systems WHERE AccountID = :account_id AND SystemID = :system_id ORDER BY LastCommunication DESC');\n\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t$stmt->bindValue(':system_id', $sid);\n\t\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\t\t$row = $result->fetchArray();\n\t\t\t\t\t\t\t$existing_groups = $row != false ? $row['Groups'] : null;\n\n\t\t\t\t\t\t\t// Append new Group\n\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET Groups = :new_group WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t$stmt->bindValue(':system_id', $sid);\n\t\t\t\t\t\t\t$stmt->bindValue(':new_group', $existing_groups . '#' . $group . '#');\n\t\t\t\t\t\t\t$stmt->execute();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(!PHOROMATIC_USER_IS_VIEWER && isset($_POST['system_group_update']))\n\t\t\t{\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT SystemID FROM phoromatic_systems WHERE AccountID = :account_id');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\tphoromatic_add_activity_stream_event('groups', null, 'modified');\n\n\t\t\t\twhile($row = $result->fetchArray())\n\t\t\t\t{\n\t\t\t\t\tif(isset($_POST['groups_' . $row['SystemID']]))\n\t\t\t\t\t{\n\t\t\t\t\t\t$group_string = null;\n\t\t\t\t\t\tforeach($_POST['groups_' . $row['SystemID']] as $group)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif($group != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$group_string .= '#' . $group . '#';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$stmt1 = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET Groups = :new_groups WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t\t\t\t\t$stmt1->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t$stmt1->bindValue(':system_id', $row['SystemID']);\n\t\t\t\t\t\t\t$stmt1->bindValue(':new_groups', $group_string);\n\t\t\t\t\t\t\t$stmt1->execute();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(!PHOROMATIC_USER_IS_VIEWER && isset($_POST['remove_group']))\n\t\t\t{\n\t\t\t\t$remove_group = pts_strings::sanitize($_POST['remove_group']);\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_groups WHERE AccountID = :account_id AND GroupName = :group_name');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':group_name', $remove_group);\n\t\t\t\t$stmt->execute();\n\t\t\t\tphoromatic_add_activity_stream_event('groups', $group, 'removed');\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT SystemID, Groups FROM phoromatic_systems WHERE AccountID = :account_id AND Groups LIKE \\'%#' . $remove_group . '#%\\'');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\twhile($row = $result->fetchArray())\n\t\t\t\t{\n\t\t\t\t\t$revised_groups = str_replace('#' . $remove_group . '#', '', $row['Groups']);\n\n\t\t\t\t\t$stmt1 = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET Groups = :new_groups WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t\t\t$stmt1->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$stmt1->bindValue(':system_id', $row['SystemID']);\n\t\t\t\t\t$stmt1->bindValue(':new_groups', $revised_groups);\n\t\t\t\t\t$stmt1->execute();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(!PHOROMATIC_USER_IS_VIEWER && isset($_POST['remove_inactive_systems']) && is_numeric($_POST['remove_inactive_systems']) && $_POST['remove_inactive_systems'] > 1)\n\t\t\t{\n\t\t\t\t// $_POST['remove_inactive_systems'] is number of days system is without activity before removing\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET State = :state WHERE AccountID = :account_id AND (julianday() - julianday(LastCommunication)) > :inactive_days_before_removal');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':state', -1);\n\t\t\t\t$stmt->bindValue(':inactive_days_before_removal', pts_strings::sanitize($_POST['remove_inactive_systems']));\n\t\t\t\t$stmt->execute();\n\t\t\t}\n\n\t\t\t$main = '<h1>Test Systems</h1>';\n\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t{\n\t\t\t\t$main .= phoromatic_systems_needing_attention();\n\t\t\t\t$main .= '<h2>Add A System</h2>\n\t\t\t\t<p>To connect a <a href=\"http://www.phoronix-test-suite.com/\">Phoronix Test Suite</a> test system to this account for remotely managing and/or carrying out routine automated benchmarking, follow these simple and quick steps:</p>\n\t\t\t\t<p>From a system with Phoronix Test Suite installed, run <strong>phoronix-test-suite phoromatic.connect ' . phoromatic_web_socket_server_addr() . '</strong>. (The test system must be able to access this server\\'s correct IP address / domain name.)</p><p>When you have run the command from the test system, you will need to log into this page on Phoromatic server again where you can approve the system and configure the system settings so you can begin using it as part of this Phoromatic account.</p><p>Repeat the two steps for as many systems as you would like. When you are all done -- if you haven\\'t done so already, you can start creating test schedules, groups, and other Phoromatic events.</p>\n\t\t\t\t<p>Those having to connect many Phoronix Test Suite Phoromatic clients can also attempt <a href=\"?system_claim\">adding the server configuration</a> via SSH or an IP/MAC address claim.</p>\n\t\t\t\t<p>The Phoronix Test Suite ships with a <em>phoromatic-client</em> systemd example service file for automatically starting the Phoromatic client process after the initial configuration process is complete.</p>\n\t\t\t\t<p><button onclick=\"javascript:window.location.replace(\\'?system_claim\\');\">Add Via SSH Or IP/MAC Claim</button></p>';\n\n\t\t\t}\n\n\t\t\t$main .= '<hr />\n\t\t\t<h2>Systems</h2>\n\t\t\t<div class=\"pts_phoromatic_info_box_area\">\n\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><h1>Active Systems</h1></li>';\n\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, LocalIP, CurrentTask, LastCommunication, EstimatedTimeForTask, TaskPercentComplete FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0 ORDER BY LastCommunication DESC');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t$row = $result->fetchArray();\n\t\t\t\t\t$active_system_count = 0;\n\n\t\t\t\t\tif($row == false)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Systems Found</li>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$acti = phoromatic_server::estimated_time_remaining_string($row['EstimatedTimeForTask'], $row['LastCommunication']) . ($row['TaskPercentComplete'] > 0 ? ' [' . $row['TaskPercentComplete'] . '% Complete]' : null);\n\t\t\t\t\t\t\tif(empty($acti))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$next_job_in = phoromatic_server::time_to_next_scheduled_job($_SESSION['AccountID'], $row['SystemID']);\n\t\t\t\t\t\t\t\tif($next_job_in > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif($next_job_in > 600)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$next_job_in = round($next_job_in / 60);\n\t\t\t\t\t\t\t\t\t\t$next_unit = 'hours';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$next_unit = 'minutes';\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t$acti = 'Next job in ' . $next_job_in . ' ' . $next_unit;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$main .= '<a href=\"?systems/' . $row['SystemID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . $row['LocalIP'] . '</td><td><strong>' . $row['CurrentTask'] . '</strong></td><td><strong>' . $acti . '</strong></td><td><strong>Last Communication:</strong> ' . date('j F Y H:i', strtotime($row['LastCommunication'])) . '</td></tr></table></li></a>';\n\t\t\t\t\t\t\t$active_system_count++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t\t}\n\n\n\t\t\t$main .= '</ul>';\n\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, LocalIP, CurrentTask, LastCommunication, EstimatedTimeForTask, TaskPercentComplete FROM phoromatic_systems WHERE AccountID = :account_id AND State < 0 ORDER BY LastCommunication DESC');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$result = $stmt->execute();\n\t\t\t$row = $result->fetchArray();\n\n\t\t\tif($row != false)\n\t\t\t{\n\t\t\t\t$main .= '<ul>\n\t\t\t\t<li><h1>Inactive Systems</h1></li>';\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\t$main .= '<a href=\"?systems/' . $row['SystemID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . $row['LocalIP'] . '</td><td><strong>' . $row['CurrentTask'] . '</strong></td><td><strong>Deactivated</strong></td><td><strong>Last Communication:</strong> ' . date('j F Y H:i', strtotime($row['LastCommunication'])) . '</td></tr></table></li></a>';\n\t\t\t\t}\n\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t$main .= '</ul>';\n\t\t\t}\n\n\t\t\t$main .= '</div>';\n\n\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t{\n\t\t\t\t$main .= '<hr />\n\t\t\t\t<h2>System Groups</h2>\n\t\t\t\t<p>System groups make it very easy to organize multiple test systems for targeting by test schedules. You can always add/remove systems to groups, create new groups, and add systems to multiple groups. After creating a group and adding systems to the group, you can begin targeting tests against a particular group of systems. Systems can always be added/removed from groups later and a system can belong to multiple groups.</p>';\n\n\n\t\t\t\t$main .= '<div style=\"float: left;\"><form name=\"new_group_form\" id=\"new_group_form\" action=\"?systems\" method=\"post\" onsubmit=\"return phoromatic_new_group(this);\">\n\t\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">New Group Name:</div> <input type=\"text\" style=\"width: 300px;\" name=\"new_group\" value=\"\" /></p>\n\t\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">Select System(s) To Add To Group:</div><select name=\"systems_for_group[]\" multiple=\"multiple\" style=\"width: 300px;\">';\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0 ORDER BY Title ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\t$row = $result->fetchArray();\n\n\t\t\t\tif($row != false)\n\t\t\t\t{\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<option value=\"' . $row['SystemID'] . '\">' . $row['Title'] . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t}\n\n\n\t\t\t\t$main .= '</select></p>\n\t\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">&nbsp;</div> <input type=\"submit\" value=\"Create Group\" /></p></form></div>';\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT GroupName FROM phoromatic_groups WHERE AccountID = :account_id ORDER BY GroupName ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\t$row = $result->fetchArray();\n\n\t\t\t\tif($row != false)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<div style=\"float: left; margin-left: 90px;\"><h3>Current System Groups</h3>';\n\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$stmt_count = phoromatic_server::$db->prepare('SELECT COUNT(SystemID) AS system_count FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0 AND Groups LIKE \\'%#' . $row['GroupName'] . '#%\\'');\n\t\t\t\t\t\t$stmt_count->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$result_count = $stmt_count->execute();\n\t\t\t\t\t\t$row_count = $result_count->fetchArray();\n\t\t\t\t\t\t$row_count['system_count'] = isset($row_count['system_count']) ? $row_count['system_count'] : 0;\n\n\t\t\t\t\t\t$main .= '<div style=\"clear: both;\"><div style=\"width: 200px; float: left; font-weight: bold;\">' . $row['GroupName'] . '</div> ' . $row_count['system_count'] . ' System' . ($row_count['system_count'] != 1 ? 's' : '') . '</div>';\n\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\n\t\t\t\t\t$main .= '</div>';\n\n\t\t\t\t\t$main .= '<hr /><a name=\"group_edit\"></a><h2>System Group Editing</h2><div style=\"text-align: center;\"><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"update_groups\" method=\"post\"><input type=\"hidden\" name=\"system_group_update\"  value=\"1\" />';\n\t\t\t\t\t$main .= '<table style=\"margin: 5px auto; overflow: auto;\">';\n\t\t\t\t\t$main .= '<tr>';\n\t\t\t\t\t$main .= '<th></th>';\n\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT GroupName FROM phoromatic_groups WHERE AccountID = :account_id ORDER BY GroupName ASC');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t$all_groups = array();\n\t\t\t\t\twhile($row = $result->fetchArray())\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<th>' . $row['GroupName'] . '</th>';\n\t\t\t\t\t\tarray_push($all_groups, $row['GroupName']);\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '</tr>';\n\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, Groups FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0 ORDER BY Title ASC');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\twhile($row = $result->fetchArray())\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<tr>';\n\t\t\t\t\t\t$main .= '<th>' . $row['Title'] . '</th>';\n\t\t\t\t\t\t$main .= '<input type=\"hidden\" name=\"groups_' . $row['SystemID'] . '[]\" value=\"\" />';\n\n\t\t\t\t\t\tforeach($all_groups as $group)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$checked = stripos($row['Groups'], '#' . $group . '#') !== false ? 'checked=\"checked\" ' : null;\n\t\t\t\t\t\t\t$main .= '<td><input type=\"checkbox\" name=\"groups_' . $row['SystemID'] . '[]\" value=\"' . $group . '\" ' . $checked . '/></td>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '</tr>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '</table><p><input name=\"submit\" value=\"Update Groups\" type=\"submit\" /></p></form></div>';\n\t\t\t\t\t$main .= '<hr /><h2>Remove A Group</h2><p>Removing a group is a permanent action that cannot be undone.</p>';\n\t\t\t\t\t$main .= '<p><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"remove_group\" method=\"post\"><select name=\"remove_group\" id=\"remove_group\">';\n\n\t\t\t\t\tforeach($all_groups as $group)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<option value=\"' . $group . '\">' . $group . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</select> <input name=\"submit\" value=\"Remove Group\" type=\"submit\" /></form></p>';\n\t\t\t\t\t$main .= '<hr /><h2>Retire Inactive Systems</h2><p>This option will soft-delete systems that have not communicated with this Phoromatic Server in more than one week (7 days).</p>';\n\t\t\t\t\t$main .= '<p><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"remove_inactive\" method=\"post\"><input type=\"hidden\" name=\"remove_inactive_systems\" value=\"7\" /><input name=\"submit\" value=\"Remove Inactive Systems\" type=\"submit\" /></form></p>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$right = '<ul><li>Active Systems</li>';\n\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID FROM phoromatic_systems WHERE AccountID = :account_id AND State > 0 ORDER BY Title ASC');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\n\t\tif($row == false)\n\t\t{\n\t\t\t$right .= '</ul><p style=\"text-align: left; margin: 6px 10px;\">No Systems Found</p>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\t$right .= '<li><a href=\"?systems/' . $row['SystemID'] . '\">' . $row['Title'] . '</a></li>';\n\t\t\t}\n\t\t\twhile($row = $result->fetchArray());\n\t\t\t$right .= '</ul>';\n\t\t}\n\t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n\t\techo phoromatic_webui_footer();\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2013 - 2022, Phoronix Media\n\tCopyright (C) 2013 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\ndefine('PHOROMATIC_SERVER_WEB_INTERFACE', true);\ndefine('PAGE_LOAD_START_TIME', microtime(true));\n\nfunction phoromatic_quit_if_invalid_input_found($input_keys = null)\n{\n\tif(empty($input_keys))\n\t{\n\t\t// Check them all if not being selective about what keys to check\n\t\t$input_keys = array_keys($_REQUEST);\n\t}\n\t// backup as to sanitization and stripping elsewhere, safeguard namely check for things like < for fields that shouldn't have it\n\t// plus a few simple backups as safeguards for words that really have no legit relevance within Phoromatic...\n\n\tforeach(array('<', 'document.write', '../', 'onerror', 'onload', 'alert(') as $invalid_string)\n\t{\n\t\tforeach($input_keys as $key)\n\t\t{\n\t\t\tif(isset($_REQUEST[$key]) && !empty($_REQUEST[$key]))\n\t\t\t{\n\t\t\t\tforeach(pts_arrays::to_array($_REQUEST[$key]) as $val_to_check)\n\t\t\t\t{\n\t\t\t\t\tif(stripos($val_to_check, $invalid_string) !== false)\n\t\t\t\t\t{\n\t\t\t\t\t\techo '<strong>Exited due to invalid input ( ' . $invalid_string . ') attempted:</strong> ' . htmlspecialchars($val_to_check);\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nfunction phoromatic_init_web_page_setup()\n{\n\tif(session_save_path() == null || !is_writable(session_save_path()))\n\t{\n\t\t// This is needed since on at least EL6 by default there is no session_save_path set\n\t\tif(is_writable('/var/lib/php') && is_dir('/var/lib/php'))\n\t\t{\n\t\t\tsession_save_path('/var/lib/php');\n\t\t}\n\t\telse if(is_writable('/var/lib/php5') && is_dir('/var/lib/php5'))\n\t\t{\n\t\t\tsession_save_path('/var/lib/php5');\n\t\t}\n\t\telse if(is_writable('/tmp'))\n\t\t{\n\t\t\tsession_save_path('/tmp');\n\t\t}\n\t\telse if(is_writable('.'))\n\t\t{\n\t\t\tsession_save_path('.');\n\t\t}\n\t}\n\n\tdefine('PHOROMATIC_SERVER', true);\n\tif(defined('PTS_IS_DEV_BUILD') && PTS_IS_DEV_BUILD)\n\t{\n\t\terror_reporting(E_ALL);\n\t}\n\tsession_start();\n\n\tdefine('PTS_MODE', 'WEB_CLIENT');\n\tdefine('PTS_AUTO_LOAD_OBJECTS', true);\n\tdefine('PHOROMATIC_USER_IS_VIEWER', !isset($_SESSION['AdminLevel']) || $_SESSION['AdminLevel'] >= 10 || $_SESSION['AdminLevel'] < 1 ? true : false);\n\n\tinclude('../../pts-core.php');\n\tpts_core::init();\n}\nfunction phoromatic_webui_header($left_items, $right = null)\n{\n\t$ret = PHP_EOL . '<div id=\"pts_phoromatic_top_header\">\n\t<ul>\n\t<li><a href=\"?\"><img style=\"vertical-align: middle;\" class=\"img_logo_pg\" src=\"images/phoromatic_logo.svg\" /></a>';\n\n\tif(isset($_SESSION['AdminLevel']) &&$_SESSION['AdminLevel'] > 0 && isset($_SESSION['AccountID']) && !empty($_SESSION['AccountID']))\n\t{\n\t\t$ret .= '<ul id=\"pts_phoromatic_info\">';\n\t\t$ret .= '<li><a class=\"ph_date\" href=\"#\">' . date('H:i T - j F') . '</a></li>';\n\t\t$group_name = phoromatic_server::account_id_to_group_name($_SESSION['AccountID']);\n\t\tif($group_name != null)\n\t\t{\n\t\t\t$ret .= '<li><a href=\"#\">' . $group_name . '</a></li>';\n\t\t}\n\t\t$ret .= '</ul>';\n\t}\n\t$ret .= '</li>';\n\n\t//$ret .= '<ul>';\n\tforeach($left_items as $i => $item)\n\t{\n\t\tif(is_array($item))\n\t\t{\n\t\t\t$ret .= '<li>' . $i;\n\n\t\t\tif(!empty($item))\n\t\t\t{\n\t\t\t\t$ret .= '<ul>';\n\t\t\t\tforeach($item as $sub_item)\n\t\t\t\t{\n\t\t\t\t\t$ret .= '<li>' . $sub_item . '</li>';\n\t\t\t\t}\n\t\t\t\t$ret .= '</ul>';\n\t\t\t}\n\t\t\t$ret .= '</li>' . PHP_EOL;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$ret .= '<li>' . $item . '</li>' . PHP_EOL;\n\t\t}\n\t}\n\t$ret .= '<li><div id=\"phoromatic_result_selected_info_box\"></div> <a href=\"#\" onclick=\"javascript:phoromatic_generate_comparison(\\'?result/\\');\"><div id=\"phoromatic_result_compare_info_box\">Compare</div></a> <a href=\"#\" onclick=\"javascript:phoromatic_delete_results(\\'?results/delete/\\'); return false;\"><div id=\"phoromatic_result_delete_box\">Delete</div></a></li>';\n\t$ret .= '</ul>';\n\n\tif($right != null)\n\t{\n\t\t$ret .= '<div id=\"pts_phoromatic_top_header_right\">' . $right .'</div>';\n\t}\n\n\t$ret .=' </div>';\n\n\treturn $ret;\n}\nfunction phoromatic_get_posted_var($name, $default_value = null)\n{\n\tif(isset($_POST[$name]))\n\t{\n\t\tphoromatic_quit_if_invalid_input_found(array($name));\n\t}\n\n\treturn isset($_POST[$name]) ? $_POST[$name] : null;\n}\nfunction phoromatic_webui_main($main, $right = null)\n{\n\treturn '<div id=\"pts_phoromatic_main\">' . ($right != null ? '<div id=\"pts_phoromatic_menu_right\">' . $right . '</div>' : null) . '<div id=\"pts_phoromatic_main_area\">' . $main . '</div><div style=\"clear: both;\"></div></div>';\n}\nfunction phoromatic_webui_box(&$box)\n{\n\treturn '<div id=\"pts_phoromatic_main_box\"><div id=\"pts_phoromatic_main_box_inside\">' . $box . '</div></div>';\n}\nfunction phoromatic_results_for_schedule($schedule_id, $limit_results = false)\n{\n\tswitch($limit_results)\n\t{\n\t\tcase 'TODAY':\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(UploadID) As UploadCount FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id AND UploadTime LIKE :today_date');\n\t\t\t$stmt->bindValue(':today_date', date('Y-m-d') . '%');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(UploadID) As UploadCount FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id');\n\t\t\tbreak;\n\t}\n\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$stmt->bindValue(':schedule_id', $schedule_id);\n\t$test_result_result = $stmt->execute();\n\t$row = $test_result_result->fetchArray();\n\n\treturn empty($row) ? 0 : $row['UploadCount'];\n}\nfunction phoromatic_schedule_activeon_string($active_on, $active_at = null)\n{\n\tif(!empty($active_on))\n\t{\n\t\t$active_days = explode(',', $active_on);\n\t\t$week = array('M', 'T', 'W', 'TH', 'F', 'S', 'SU');\n\t\tforeach($active_days as $i => &$day)\n\t\t{\n\t\t\tif(!isset($week[$day]))\n\t\t\t{\n\t\t\t\tunset($active_days[$i]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$day = $week[$day];\n\t\t\t}\n\t\t}\n\t\treturn implode(' ', $active_days) . (!empty($active_at) ? ' @ ' . str_replace('.', ':', $active_at) : null );\n\t}\n}\nfunction phoromatic_webui_footer()\n{\n\treturn '<div id=\"pts_phoromatic_bottom_footer\">\n\t<div style=\"float: left; padding: 5px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewbox=\"0 0 76 41\" width=\"76\" height=\"41\" preserveAspectRatio=\"xMinYMin meet\">\n  <path d=\"m74 22v9m-5-16v16m-5-28v28m-23-2h12.5c2.485281 0 4.5-2.014719 4.5-4.5s-2.014719-4.5-4.5-4.5h-8c-2.485281 0-4.5-2.014719-4.5-4.5s2.014719-4.5 4.5-4.5h12.5m-21 5h-11m11 13h-2c-4.970563 0-9-4.029437-9-9v-20m-24 40v-20c0-4.970563 4.0294373-9 9-9 4.970563 0 9 4.029437 9 9s-4.029437 9-9 9h-9\" stroke=\"#696969\" stroke-width=\"4\" fill=\"none\" />\n</svg> &nbsp;</div>\n<p style=\"margin: 6px 15px;\"><strong>' . date('H:i T - j F Y') . '</strong>' . (PTS_IS_DEV_BUILD ? ' &nbsp; [' . round(microtime(true) - PAGE_LOAD_START_TIME, 2) . 's Page Load Time]' : null) . '<br />Copyright &copy; 2008 - ' . date('Y') . ' by <a href=\"http://www.phoronix-media.com/\">Phoronix Media</a>. All rights reserved.<br />\nAll trademarks used are properties of their respective owners.<br />' . pts_core::program_title() . ' (PHP ' . PHP_VERSION . ')</p></div> <script type=\"text/javascript\"> phoromatic_checkbox_toggle_result_comparison(\\'\\'); </script>';\n}\nfunction phoromatic_add_activity_stream_event($activity_event, $activity_event_id, $activity_event_type)\n{\n\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_activity_stream (AccountID, ActivityTime, ActivityCreator, ActivityCreatorType, ActivityEvent, ActivityEventID, ActivityEventType) VALUES (:account_id, :activity_time, :activity_creator, :activity_creator_type, :activity_event, :activity_event_id, :activity_event_type)');\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$stmt->bindValue(':activity_time', phoromatic_server::current_time());\n\t$stmt->bindValue(':activity_creator', $_SESSION['UserName']);\n\t$stmt->bindValue(':activity_creator_type', 'USER');\n\t$stmt->bindValue(':activity_event', $activity_event);\n\t$stmt->bindValue(':activity_event_id', $activity_event_id);\n\t$stmt->bindValue(':activity_event_type', $activity_event_type);\n\treturn $stmt->execute();\n}\nfunction phoromatic_tracker_page_relevant()\n{\n\t$stmt = phoromatic_server::$db->prepare('SELECT RunTargetSystems, RunTargetGroups, (SELECT COUNT(*) FROM phoromatic_results WHERE ScheduleID = phoromatic_schedules.ScheduleID) AS UploadedResultCount FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 ORDER BY Title ASC');\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$result = $stmt->execute();\n\t$row = $result->fetchArray();\n\n\tif($row)\n\t{\n\t\tdo\n\t\t{\n\t\t\tif(is_numeric($row['RunTargetSystems']) && $row['UploadedResultCount'] > (($row['RunTargetSystems'] + $row['RunTargetGroups'] + 1) * 7))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\twhile($row = $result->fetchArray());\n\t}\n\n\treturn false;\n}\nfunction phoromatic_webui_header_logged_in()\n{\n\t$html_links = array();\n\tif($_SESSION['AdminLevel'] == -40)\n\t{\n\t\t$pages = array('Admin', 'Admin_Config', 'Admin_Data', 'Logout');\n\t}\n\telse if($_SESSION['AdminLevel'] > 0)\n\t{\n\t\t$sub_main_menu = array();\n\t\t$sub_tests_menu = array();\n\t\t$sub_systems_menu = array();\n\t\t$sub_testing_menu = array();\n\t\t$sub_results_menu = array();\n\n\t\tif(phoromatic_account_system_count() > 0)\n\t\t{\n\t\t\t$sub_systems_menu[] = 'Dashboard';\n\t\t\t$sub_systems_menu[] = 'Maintenance Table';\n\t\t\t$sub_systems_menu[] = 'Component Table';\n\t\t}\n\n\t\t//$sub_main_menu[] = '<a href=\"?tests\">Test Profiles</a>';\n\t\tif(isset($_SESSION['AdminLevel']) && $_SESSION['AdminLevel'] < 4)\n\t\t{\n\t\t\t$sub_main_menu[] = 'Users';\n\t\t}\n\n\t\tarray_push($sub_main_menu, 'Settings', '<a href=\"?account_activity\">Account Activity</a>', 'Logout');\n\t\t$sub_testing_menu[] = '<a href=\"?schedules\">Test Schedules</a>';\n\n\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t{\n\t\t\tif(phoromatic_server::read_setting('allow_test_profile_creation') == 1)\n\t\t\t{\n\t\t\t\tarray_push($sub_tests_menu, '<a href=\"?create_test\">Create New Test Profile</a>');\n\t\t\t}\n\t\t\tarray_push($sub_tests_menu, '<a href=\"?build_suite\">Build Test Suite</a>');\n\t\t\tarray_push($sub_testing_menu, '<a href=\"?sched\">Create A Schedule</a>', '<a href=\"?benchmark\">Run A Benchmark</a>');\n\t\t}\n\n\t\tif(phoromatic_tracker_page_relevant())\n\t\t{\n\t\t\t$sub_results_menu[] = 'Tracker';\n\t\t}\n\t\t$sub_results_menu[] = '<a href=\"/rss.php?user=' . $_SESSION['UserID'] . '&amp;v=' . sha1($_SESSION['CreatedOn']) . '\">Results Feed <img src=\"images/rss.svg\" width=\"16\" height=\"16\" /></a>';\n\n\t\t$pages = array('Main' => $sub_main_menu, 'Systems' => $sub_systems_menu, 'Tests' => $sub_tests_menu, '<a href=\"/?testing\">Testing</a>' => $sub_testing_menu, 'Results' => $sub_results_menu, '<form action=\"/?search\" method=\"post\" id=\"search\"><input type=\"search\" name=\"search\" id=\"seach_input\" size=\"16\" /> <input type=\"submit\" name=\"sa\" value=\"Search\" /><div class=\"search_expander\"></div></form>');\n\t}\n\n\tforeach($pages as $title => $page)\n\t{\n\t\tif(is_array($page) || empty($page))\n\t\t{\n\t\t\t$menu_row = array();\n\t\t\tforeach($page as $sub_page)\n\t\t\t{\n\t\t\t\t$menu_row[] = menu_item_to_html($sub_page);\n\t\t\t}\n\t\t\t$html_links[menu_item_to_html($title)] = $menu_row;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$html_links[] = menu_item_to_html($page);\n\t\t}\n\t}\n\n\treturn phoromatic_webui_header($html_links, null);\n}\nfunction menu_item_to_html($page)\n{\n\tif(strpos($page, '</') !== false)\n\t\treturn $page;\n\n\t$page_link = strtolower($page);\n\tif(($x = strpos($page_link, '<br />')) !== false)\n\t{\n\t\t$page_link = trim(substr($page_link, $x + 6));\n\t}\n\t$page_link = str_replace(' ', '_', $page_link);\n\n\tif(strtolower($page) == PAGE_REQUEST)\n\t{\n\t\treturn '<a href=\"?' . $page_link . '\"><u>' . str_replace('_', ' ', $page) . '</u></a>';\n\t}\n\telse\n\t{\n\t\treturn '<a href=\"?' . $page_link . '\">' . str_replace('_', ' ', $page) . '</a>';\n\t}\n}\nfunction phoromatic_webui_right_panel_logged_in($add = null)\n{\n\t$right = null;\n\tif($_SESSION['AdminLevel'] == -40)\n\t{\n\t\t$right .= '<h3>Phoromatic Server</h3><hr /><p><strong>' . date('H:i T - j F Y') . '</p>';\n\t}\n\telse if($_SESSION['AdminLevel'] > 0)\n\t{\n\t\t//$right .= '<a href=\"#\" onclick=\"javascript:phoromatic_generate_comparison(\\'?result/\\');\"><div id=\"phoromatic_result_compare_info_box\"></div></a> <a href=\"#\" onclick=\"javascript:phoromatic_delete_results(\\'?results/delete/\\'); return false;\"><div id=\"phoromatic_result_delete_box\">Delete Selected Results</div></a>';\n\t\tif(($bad_systems = phoromatic_server::systems_appearing_down()) != false)\n\t\t{\n\t\t\t$right .= '<ul><li><span class=\"alert\">Systems Needing Attention</span></li>';\n\t\t\tforeach($bad_systems as $system)\n\t\t\t{\n\t\t\t\t$right .= '<li><a href=\"?systems/' . $system . '\">' . phoromatic_server::system_id_to_name($system) . '</a></li>';\n\t\t\t}\n\t\t\t$right .= '</ul><hr />';\n\t\t}\n\n\t\t$right .= $add;\n\n\t\tif($add == null)\n\t\t{\n\t\t\t$recently_active_systems = phoromatic_server::recently_active_systems($_SESSION['AccountID']);\n\t\t\tif(!empty($recently_active_systems))\n\t\t\t{\n\t\t\t\t$right .= '<ul><li>Recently Active Systems</li>';\n\n\t\t\t\tforeach($recently_active_systems as &$row)\n\t\t\t\t{\n\t\t\t\t\t$right .= '<li><a href=\"?systems/' . $row['SystemID'] . '\">' . $row['Title'] . '</a></li>';\n\t\t\t\t}\n\n\t\t\t\t$right .= '</ul><hr />';\n\t\t\t}\n\n\t\t\t$right .= '\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Today\\'s Scheduled Events</li>';\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, RunAt FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1  AND ActiveOn LIKE :active_on ORDER BY RunAt,Title ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':active_on', '%' . (date('N') - 1) . '%');\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\t$row = $result->fetchArray();\n\n\t\t\t\tif($row == false)\n\t\t\t\t{\n\t\t\t\t\t$right .= '</ul><p style=\"text-align: left; margin: 6px 10px;\">No Events Found</p>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$right .= '<li>' . $row['RunAt'] . ' <a href=\"?schedules/' . $row['ScheduleID'] . '\">' . $row['Title'] . '</a></li>';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t\t$right .= '</ul>';\n\t\t\t\t}\n\t\t}\n\n\t\t$system_count = phoromatic_account_system_count();\n\t\t$schedule_count = phoromatic_account_schedule_count();\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(UploadID) AS ResultCount FROM phoromatic_results WHERE AccountID = :account_id');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$result_count = $row['ResultCount'];\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(ActivityTime) AS ActivityCount FROM phoromatic_activity_stream WHERE AccountID = :account_id AND ActivityTime LIKE :today_date');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$stmt->bindValue(':today_date', date('Y-m-d') . '%');\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$activity_count = $row['ActivityCount'];\n\n\t\t$group_name = phoromatic_server::account_id_to_group_name($_SESSION['AccountID']);\n\t\tif($group_name != null)\n\t\t{\n\t\t\t$group_name = '<strong>' . $group_name . '</strong><br />';\n\t\t}\n\n\t\t$right .= '<hr /><p><strong>' . date('H:i T - j F Y') . '</strong><br />' . $group_name . '<a href=\"?systems\">' . $system_count . ' System' . ($system_count == 1 ? '' : 's') . '</a><br /><a href=\"?schedules\">' . $schedule_count . ' Schedule' . ($schedule_count == 1 ? '' : 's') . '</a><br /><a href=\"?results\">' . $result_count . ' Result' . ($result_count == 1 ? '' : 's') . '</a>';\n\t\t$right .= ' <a href=\"/rss.php?user=' . $_SESSION['UserID'] . '&amp;v=' . sha1($_SESSION['CreatedOn']) . '\"><img src=\"images/rss.svg\" width=\"16\" height=\"16\" /></a>';\n\t\t$right .= '<br /><a href=\"?account_activity\">' . $activity_count . ' Activity Events Today</a></p>';\n\t}\n\n\treturn $right;\n}\nfunction phoromatic_account_schedule_count()\n{\n\tstatic $schedule_count = 0;\n\n\tif($schedule_count == 0)\n\t{\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(Title) AS ScheduleCount FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$schedule_count = $row['ScheduleCount'];\n\t}\n\treturn $schedule_count;\n}\nfunction phoromatic_account_system_count()\n{\n\tstatic $sys_count = 0;\n\n\tif($sys_count == 0)\n\t{\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(Title) AS SystemCount FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$sys_count = $row['SystemCount'];\n\t}\n\treturn $sys_count;\n}\nfunction phoromatic_web_socket_server_ip()\n{\n\t$server_ip = $_SERVER['HTTP_HOST'];\n\tif(($x = strpos($server_ip, ':')) !== false)\n\t{\n\t\t$server_ip = substr($server_ip, 0, $x);\n\t}\n\n\tif($server_ip == 'localhost' || $server_ip == '0.0.0.0')\n\t{\n\t\t$local_ip = phodevi::read_property('network', 'ip');\n\t\tif($local_ip)\n\t\t{\n\t\t\t$server_ip = $local_ip;\n\t\t}\n\t}\n\t// getenv('PTS_WEBSOCKET_PORT')\n\treturn $server_ip . ':' . $_SERVER['SERVER_PORT'];\n}\nfunction phoromatic_web_socket_server_addr()\n{\n\t// getenv('PTS_WEBSOCKET_PORT')\n\treturn phoromatic_web_socket_server_ip() . '/' . $_SESSION['AccountID'];\n}\nfunction phoromatic_error_page($title, $description)\n{\n\techo phoromatic_webui_header(array(''), '');\n\t$box = '<h1>' . $title . '</h1>\n\t\t<h2>' . $description . '</h2>';\n\techo phoromatic_webui_box($box);\n\techo phoromatic_webui_footer();\n}\nfunction phoromatic_systems_needing_attention()\n{\n\t$main = null;\n\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, State, LastIP, LocalIP, LastCommunication FROM phoromatic_systems WHERE AccountID = :account_id AND State = 0 ORDER BY LastCommunication DESC');\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$result = $stmt->execute();\n\tif($row = $result->fetchArray())\n\t{\n\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\"><div style=\"float: left; width: 100%;\"><ul><li><h1>Systems Needing Attention</h1></li><li class=\"light\" style=\"font-weight: normal;\">The following systems have attempted to sync with this Phoromatic account but have not been validated. When clicking on them you are able to approve or disable them from your account along with editing the system information.</li>';\n\n\t\tdo\n\t\t{\n\t\t\t$ip = $row['LocalIP'];\n\t\t\tif($row['LastIP'] != $row['LocalIP'])\n\t\t\t{\n\t\t\t\t$ip .= ' / ' . $row['LastIP'];\n\t\t\t}\n\n\t\t\t$main .= '<a href=\"?systems/' . $row['SystemID'] . '/edit\"><li>' . $row['Title'] . '<br /><em><strong>IP:</strong> ' . $ip . ' <strong>Last Communication:</strong> ' . $row['LastCommunication'] . '</em></li></a>';\n\t\t}\n\t\twhile($row = $result->fetchArray());\n\n\t\t$main .= '</ul></div></div>';\n\t}\n\n\treturn $main;\n}\nfunction phoromatic_oldest_result_for_schedule($schedule_id)\n{\n\tstatic $old_time;\n\n\tif(!isset($old_time[$schedule_id]))\n\t{\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT UploadTime FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY UploadTime ASC LIMIT 1');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$stmt->bindValue(':schedule_id', $schedule_id);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$old_time[$schedule_id] = $row['UploadTime'];\n\t}\n\n\treturn $old_time[$schedule_id];\n}\nfunction write_token_in_form()\n{\n\treturn '<input type=\"hidden\" name=\"token_submit\" value=\"' . $_SESSION['Token'] . '\" />';\n}\nfunction append_token_to_url()\n{\n\treturn '/&token_submit=' . $_SESSION['Token'];\n}\nfunction verify_submission_token()\n{\n\treturn isset($_REQUEST['token_submit']) && $_REQUEST['token_submit'] == $_SESSION['Token'];\n}\nfunction create_new_phoromatic_account($register_username, $register_password, $register_password_confirm, $register_email, $seed_accountid = null)\n{\n\t// REGISTER NEW USER\n\tif(strlen($register_username) < 4 || strpos($register_username, ' ') !== false)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied username is at least four characters long and contains no spaces.');\n\t\treturn false;\n\t}\n\tif(in_array(strtolower($register_username), array('admin', 'administrator', 'rootadmin')))\n\t{\n\t\tphoromatic_error_page('Oops!', $register_username . ' is a reserved and common username that may be used for other purposes, please make a different selection.');\n\t\treturn false;\n\t}\n\tif(strlen($register_password) < 6)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied password is at least six characters long.');\n\t\treturn false;\n\t}\n\tif($register_password != $register_password_confirm)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied password matches the password confirmation.');\n\t\treturn false;\n\t}\n\tif($register_email == null || filter_var($register_email, FILTER_VALIDATE_EMAIL) == false)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please enter a valid email address.');\n\t\treturn false;\n\t}\n\n\t$valid_user_name_chars = '1234567890-_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\tfor($i = 0; $i < strlen($register_username); $i++)\n\t{\n\t\tif(strpos($valid_user_name_chars, substr($register_username, $i, 1)) === false)\n\t\t{\n\t\t\tphoromatic_error_page('Oops!', 'Please go back and ensure a valid user-name. The character <em>' . substr($register_username, $i, 1) . '</em> is not allowed.');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t$matching_users = phoromatic_server::$db->querySingle('SELECT UserName FROM phoromatic_users WHERE UserName = \\'' . SQLite3::escapeString($register_username) . '\\'');\n\tif(!empty($matching_users))\n\t{\n\t\tphoromatic_error_page('Oops!', 'The user-name is already taken.');\n\t\treturn false;\n\t}\n\n\tif(phoromatic_server::read_setting('add_new_users_to_account') != null)\n\t{\n\t\t$account_id = phoromatic_server::read_setting('add_new_users_to_account');\n\t\t$is_new_account = false;\n\t}\n\telse\n\t{\n\t\t$id_tries = 0;\n\t\tdo\n\t\t{\n\t\t\tif($id_tries == 0 && $seed_accountid != null && isset($seed_accountid[5]))\n\t\t\t{\n\t\t\t\t$account_id = strtoupper(substr($seed_accountid, 0, 6));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$account_id = pts_strings::random_characters(6, true);\n\t\t\t}\n\t\t\t$matching_accounts = phoromatic_server::$db->querySingle('SELECT AccountID FROM phoromatic_accounts WHERE AccountID = \\'' . $account_id . '\\'');\n\t\t\t$id_tries++;\n\t\t}\n\t\twhile(!empty($matching_accounts));\n\t\t$is_new_account = true;\n\t}\n\n\t$user_id = pts_strings::random_characters(4, true);\n\n\tif($is_new_account)\n\t{\n\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' created a new account: ' . $user_id . ' - ' . $account_id);\n\t\t$account_salt = pts_strings::random_characters(12, true);\n\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_accounts (AccountID, ValidateID, CreatedOn, Salt) VALUES (:account_id, :validate_id, :current_time, :salt)');\n\t\t$stmt->bindValue(':account_id', $account_id);\n\t\t$stmt->bindValue(':validate_id', pts_strings::random_characters(4, true));\n\t\t$stmt->bindValue(':salt', $account_salt);\n\t\t$stmt->bindValue(':current_time', phoromatic_server::current_time());\n\t\t$result = $stmt->execute();\n\n\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_account_settings (AccountID) VALUES (:account_id)');\n\t\t$stmt->bindValue(':account_id', $account_id);\n\t\t$result = $stmt->execute();\n\n\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_user_settings (UserID, AccountID) VALUES (:user_id, :account_id)');\n\t\t$stmt->bindValue(':user_id', $user_id);\n\t\t$stmt->bindValue(':account_id', $account_id);\n\t\t$result = $stmt->execute();\n\t}\n\telse\n\t{\n\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' being added to an account: ' . $user_id . ' - ' . $account_id);\n\t\t$account_salt = phoromatic_server::$db->querySingle('SELECT Salt FROM phoromatic_accounts WHERE AccountID = \\'' . $account_id . '\\'');\n\t}\n\n\t$salted_password = hash('sha256', $account_salt . $register_password);\n\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_users (UserID, AccountID, UserName, Email, Password, CreatedOn, LastIP, AdminLevel) VALUES (:user_id, :account_id, :user_name, :email, :password, :current_time, :last_ip, :admin_level)');\n\t$stmt->bindValue(':user_id', $user_id);\n\t$stmt->bindValue(':account_id', $account_id);\n\t$stmt->bindValue(':user_name', $register_username);\n\t$stmt->bindValue(':email', $register_email);\n\t$stmt->bindValue(':password', $salted_password);\n\t$stmt->bindValue(':last_ip', $_SERVER['REMOTE_ADDR']);\n\t$stmt->bindValue(':current_time', phoromatic_server::current_time());\n\t$stmt->bindValue(':admin_level', ($is_new_account ? 1 : 10));\n\t$result = $stmt->execute();\n\n\tpts_file_io::mkdir(phoromatic_server::phoromatic_account_path($account_id));\n\tphoromatic_server::send_email($register_email, 'Phoromatic Account Registration', (($e = phoromatic_server::read_setting('admin_support_email')) != null ? $e : 'no-reply@phoromatic.com'), '<p><strong>' . $register_username . '</strong>:</p><p>Your Phoromatic account has been created and is now active.</p>');\n\treturn true;\n}\n\n?>\n"], "fixing_code": ["<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2015 - 2022, Phoronix Media\n\tCopyright (C) 2015 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_benchmark implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'One-Time Benchmark Run';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\tif(PHOROMATIC_USER_IS_VIEWER)\n\t\t\treturn;\n\n\t\t$is_new = true;\n\t\t$e_schedule = false;\n\t\tif(!empty($PATH[0]) && $PATH[0] == 'all')\n\t\t{\n\t\t\t$main = '<h1>Past Benchmark Tickets</h1>';\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_benchmark_tickets WHERE AccountID = :account_id AND State >= 0 ORDER BY TicketIssueTime DESC');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$result = $stmt->execute();\n\t\t\t$main .= '<ol>';\n\n\t\t\tif($result)\n\t\t\t{\n\t\t\t\t$row = $result->fetchArray();\n\n\t\t\t\tif(!empty($row))\n\t\t\t\t{\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<li><a href=\"?benchmark/' . $row['TicketID'] . '\">' . $row['Title'] . '</a></li>';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$main .= '<li>No Benchmark Tickets Found</li>';\n\t\t\t}\n\n\t\t\t$main .= '</ol>';\n\t\t}\n\t\telse if(!empty($PATH[0]) && is_numeric($PATH[0]))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_benchmark_tickets WHERE AccountID = :account_id AND TicketID = :ticket_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':ticket_id', $PATH[0]);\n\t\t\t$result = $stmt->execute();\n\t\t\t$row = $result->fetchArray();\n\n\t\t\tif(!empty($row))\n\t\t\t{\n\t\t\t\tif(isset($_GET['remove']) && verify_submission_token())\n\t\t\t\t{\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_benchmark_tickets WHERE AccountID = :account_id AND TicketID = :ticket_id');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$stmt->bindValue(':ticket_id', $PATH[0]);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\theader('Location: /?benchmark');\n\t\t\t\t}\n\t\t\t\telse if(isset($_GET['repeat']) && verify_submission_token())\n\t\t\t\t{\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_benchmark_tickets SET TicketIssueTime = :new_ticket_time, State = 1 WHERE AccountID = :account_id AND TicketID = :ticket_id');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$stmt->bindValue(':ticket_id', $PATH[0]);\n\t\t\t\t\t$stmt->bindValue(':new_ticket_time', time());\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t}\n\t\t\t\telse if(isset($_GET['disable']) && verify_submission_token())\n\t\t\t\t{\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_benchmark_tickets SET State = 0 WHERE AccountID = :account_id AND TicketID = :ticket_id');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$stmt->bindValue(':ticket_id', $PATH[0]);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t}\n\n\t\t\t\t$main = null;\n\t\t\t\t$main .= '<h1>' . $row['Title'] . '</h1>';\n\t\t\t\t$main .= '<h3>' . $row['Description'] . '</h3>';\n\t\t\t\t$main .= '<p>This benchmark ticket was created on <strong>' . date('j F Y \\a\\t H:i', strtotime($row['LastModifiedOn'])) . '</strong> by <strong>' . $row['LastModifiedBy'] . '. The ticket was last issued for testing at ' . date('j F Y \\a\\t H:i', $row['TicketIssueTime']) . '</strong>.';\n\t\t\t\t$main .= '<p> <a href=\"/?benchmark/' . $PATH[0] . '/&repeat' . append_token_to_url('') . '\">Repeat Ticket</a> &nbsp; &nbsp; &nbsp; <a href=\"/?benchmark/' . $PATH[0] . '/&remove' . append_token_to_url('') . '\">Remove Ticket</a>' . (!isset($_GET['disable']) && $row['State'] > 0 ? ' &nbsp; &nbsp; &nbsp; <a href=\"/?benchmark/' . $PATH[0] . '/&disable' . append_token_to_url('') . '\">End Ticket</a>' : null) . '</p>';\n\n\t\t\t\tif(!empty($row['RunTargetSystems']))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h1>System Targets</h1><ol>';\n\t\t\t\t\tforeach(explode(',', $row['RunTargetSystems']) as $system_id)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<li><a href=\"?systems/' . $system_id . '\">' . phoromatic_server::system_id_to_name($system_id) . '</a></li>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!empty($row['RunTargetGroups']))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h1>Group Targets</h1><ol>';\n\t\t\t\t\tforeach(explode(',', $row['RunTargetGroups']) as $group)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(empty($group))\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t$main .= '<li><strong style=\"font-weight: 800;\">' . $group . '</strong></li>';\n\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT SystemID FROM phoromatic_systems WHERE AccountID = :account_id AND Groups LIKE :sgroup AND State > 0 ORDER BY Title ASC');\n\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':sgroup', '%#' . $group . '#%');\n\t\t\t\t\t\t$result = $stmt->execute();\n\n\t\t\t\t\t\twhile($result && $row = $result->fetchArray())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$main .= '<li><a href=\"?systems/' . $row['SystemID'] . '\">' . phoromatic_server::system_id_to_name($row['SystemID']) . '</a></li>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$main .= '</ol>';\n\t\t\t\tif(!empty($row['EnvironmentVariables']))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h1>Environment</h1><ol>';\n\n\t\t\t\t\tforeach(explode(';', $row['EnvironmentVariables']) as $env)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<li><strong>' . $env . '</strong></li>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</ol>';\n\t\t\t\t}\n\t\t\t\t$main .= '<hr /><h1>Ticket Payload</h1>';\n\t\t\t\t$main .= '<p>This ticket runs the <strong>' . $row['SuiteToRun'] . '</strong> test suite:</p>';\n\t\t\t\t$main .= '<div style=\"max-height: 400px; overflow-y: scroll;\">';\n\t\t\t\t$xml_path = phoromatic_server::find_suite_file($_SESSION['AccountID'], $row['SuiteToRun']);\n\t\t\t\tif(is_file($xml_path))\n\t\t\t\t{\n\t\t\t\t\t$test_suite = new pts_test_suite($xml_path);\n\n\t\t\t\t//\t$main .= '<h2>' . $test_suite->get_title() . '</h2>';\n\t\t\t\t//\t$main .= '<p><strong>' . $test_suite->get_maintainer() . '</strong></p>';\n\t\t\t\t//\t$main .= '<p><em>' . $test_suite->get_description() . '</em></p>';\n\n\t\t\t\t\tforeach($test_suite->get_contained_test_result_objects() as $tro)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<h3>' . $tro->test_profile->get_title() . ' [' . $tro->test_profile->get_identifier() . ']</h3>';\n\t\t\t\t\t\t$main .= '<p>' . $tro->get_arguments_description() . '</p>';\n\t\t\t\t\t}\n\n\t\t\t\t\t//$main .= '<hr />';\n\t\t\t\t}\n\n\t\t\t\t$main .= '</div><hr />';\n\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">';\n\t\t\t\tif(strpos($row['EnvironmentVariables'], 'PTS_CONCURRENT_TEST_RUNS') !== false)\n\t\t\t\t{\n\t\t\t\t\tif(isset($_REQUEST['view_log']) && is_file(phoromatic_server::phoromatic_account_stress_log_path($_SESSION['AccountID'], $PATH[0]) . $_REQUEST['view_log'] . '.log'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<hr /><h1>Stress Log For: ' . phoromatic_server::system_id_to_name($_REQUEST['view_log']) . '</h1>';\n\t\t\t\t\t\t$log_text = PHP_EOL . file_get_contents(phoromatic_server::phoromatic_account_stress_log_path($_SESSION['AccountID'], $PATH[0]) . $_REQUEST['view_log'] . '.log');\n\n\t\t\t\t\t\t$x = 0;\n\t\t\t\t\t\twhile(($x = strpos($log_text, \"\\n##\", $x)) !== false)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$log_text = substr($log_text, 0, $x) . \"\\n<strong style=\\\"font-weight: 800;\\\">\" . substr($log_text, $x + 1);\n\n\t\t\t\t\t\t\tif(($y = strpos($log_text, \"\\n\", $x + 2)) !== false)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$log_text = substr($log_text, 0, $y) . '</strong>' . substr($log_text, $y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$x = $y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$x = 0;\n\t\t\t\t\t\twhile(($x = strpos($log_text, \"\\n[\", $x)) !== false)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$log_text = substr($log_text, 0, $x) . \"\\n<strong style=\\\"font-weight: 800;\\\">\" . substr($log_text, $x + 1);\n\n\t\t\t\t\t\t\tif(($y = strpos($log_text, \"]\", $x + 2)) !== false)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$log_text = substr($log_text, 0, $y) . '</strong>' . substr($log_text, $y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$x = $y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '<blockquote>' . str_replace(\"\\n\", '<br />', $log_text) . '</blockquote>';\n\t\t\t\t\t\t$main .= '<p><a href=\"?benchmark/' . $PATH[0] . '#stress_logs\">View Other System Logs</a></p>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a name=\"stress_logs\"></a><hr /><h1>Stress Run Logs</h1><ol>';\n\t\t\t\t\t\t$count = 0;\n\t\t\t\t\t\tforeach(pts_file_io::glob(phoromatic_server::phoromatic_account_stress_log_path($_SESSION['AccountID'], $PATH[0]) . '*.log') as $log_file)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$sys_id = basename($log_file, '.log');\n\t\t\t\t\t\t\t$main .= '<li><a href=\"?benchmark/' . $PATH[0] . '/&view_log=' . $sys_id . '\">' . phoromatic_server::system_id_to_name($sys_id) . '</a></li>';\n\t\t\t\t\t\t\t$count++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif($count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$main .= '<li><em>No Logs Currently Available</em></li>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '</ol>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$main .= '<div style=\"margin: 0 5%;\"><ul style=\"max-height: 100%;\"><li><h1>Test Results</h1></li>';\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime, TimesViewed FROM phoromatic_results WHERE AccountID = :account_id AND BenchmarkTicketID = :ticket_id ORDER BY UploadTime DESC');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$stmt->bindValue(':ticket_id', $PATH[0]);\n\t\t\t\t\t$test_result_result = $stmt->execute();\n\t\t\t\t\t$results = 0;\n\t\t\t\t\twhile($test_result_row = $test_result_result->fetchArray())\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a onclick=\"\"><li id=\"result_select_' . $test_result_row['PPRID'] . '\"><input type=\"checkbox\" id=\"result_compare_checkbox_' . $test_result_row['PPRID'] . '\" onclick=\"javascript:phoromatic_checkbox_toggle_result_comparison(\\'' . $test_result_row['PPRID'] . '\\');\" onchange=\"return false;\"></input> <span onclick=\"javascript:phoromatic_window_redirect(\\'?result/' . $test_result_row['PPRID'] . '\\');\">' . $test_result_row['Title'] . '</span><br /><table><tr><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_server::user_friendly_timedate($test_result_row['UploadTime']) .  '</td><td>' . $test_result_row['TimesViewed'] . ' Times Viewed</td></table></li></a>';\n\t\t\t\t\t\t$results++;\n\n\t\t\t\t\t}\n\t\t\t\t\tif($results == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Results Found</li>';\n\t\t\t\t\t}\n\t\t\t\t\telse if($results > 3)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a onclick=\"\"><li id=\"global_bottom_totals\"><input type=\"checkbox\" id=\"global_checkbox\" onclick=\"javascript:phoromatic_toggle_checkboxes_on_page(this);\" onchange=\"return false;\"></input> <strong>' . $results . ' Results</strong></li></a>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</ul></div>';\n\t\t\t\t\t$main .= '</div>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(isset($_POST['benchmark_title']) && !empty($_POST['benchmark_title']))\n\t\t\t{\n\t\t\t\t$title = phoromatic_get_posted_var('benchmark_title');\n\t\t\t\t$description = phoromatic_get_posted_var('benchmark_description');\n\t\t\t\t$result_identifier = phoromatic_get_posted_var('benchmark_identifier');\n\t\t\t\t$suite_to_run = phoromatic_get_posted_var('suite_to_run');\n\n\t\t\t\tif(strlen($title) < 3)\n\t\t\t\t{\n\t\t\t\t\techo '<h2>Title must be at least three characters.</h2>';\n\t\t\t\t\texit;\n\t\t\t\t}\n\t\t\t\tif(strlen($result_identifier) < 3)\n\t\t\t\t{\n\t\t\t\t\techo '<h2>Identifier must be at least three characters.</h2>';\n\t\t\t\t\texit;\n\t\t\t\t}\n\t\t\t\tif(strlen($suite_to_run) < 3)\n\t\t\t\t{\n\t\t\t\t\techo '<h2>You must specify a suite to run.</h2>';\n\t\t\t\t\texit;\n\t\t\t\t}\n\n\t\t\t\t$run_target_systems = phoromatic_get_posted_var('run_on_systems', array());\n\t\t\t\t$run_target_groups = phoromatic_get_posted_var('run_on_groups', array());\n\t\t\t\tif(!is_array($run_target_systems)) $run_target_systems = array();\n\t\t\t\tif(!is_array($run_target_groups)) $run_target_groups = array();\n\t\t\t\t$run_target_systems = implode(',', $run_target_systems);\n\t\t\t\t$run_target_groups = implode(',', $run_target_groups);\n\n\t\t\t\tif($is_new)\n\t\t\t\t{\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$ticket_id = rand(10, 999999);\n\t\t\t\t\t\t$matching_tickets = phoromatic_server::$db->querySingle('SELECT TicketID FROM phoromatic_benchmark_tickets WHERE TicketID = \\'' . $ticket_id . '\\'');\n\t\t\t\t\t}\n\t\t\t\t\twhile(!empty($matching_tickets));\n\t\t\t\t}\n\n\t\t\t\t$env_vars = array();\n\n\t\t\t\tif(is_numeric($_POST['PTS_CONCURRENT_TEST_RUNS']) && $_POST['PTS_CONCURRENT_TEST_RUNS'] > 0)\n\t\t\t\t{\n\t\t\t\t\tarray_push($env_vars, 'PTS_CONCURRENT_TEST_RUNS=' . $_POST['PTS_CONCURRENT_TEST_RUNS']);\n\t\t\t\t}\n\t\t\t\tif(is_numeric($_POST['TOTAL_LOOP_TIME']) && $_POST['TOTAL_LOOP_TIME'] > 0)\n\t\t\t\t{\n\t\t\t\t\tarray_push($env_vars, 'TOTAL_LOOP_TIME=' . $_POST['TOTAL_LOOP_TIME']);\n\t\t\t\t}\n\n\t\t\t\tforeach(pts_env::get_posted_options('phoromatic') as $ei => $ev)\n\t\t\t\t{\n\t\t\t\t\tarray_push($env_vars, $ei . '=' . $ev);\n\t\t\t\t}\n\n\t\t\t\t$env_vars = implode(';', $env_vars);\n\n\t\t\t\t// Add benchmark\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT OR REPLACE INTO phoromatic_benchmark_tickets (AccountID, TicketID, TicketIssueTime, Title, ResultIdentifier, SuiteToRun, Description, State, LastModifiedBy, LastModifiedOn, RunTargetGroups, RunTargetSystems, EnvironmentVariables) VALUES (:account_id, :ticket_id, :ticket_time, :title, :result_identifier, :suite_to_run, :description, :state, :modified_by, :modified_on, :run_target_groups, :run_target_systems, :environment_variables)');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':ticket_id', $ticket_id);\n\t\t\t\t$stmt->bindValue(':ticket_time', time());\n\t\t\t\t$stmt->bindValue(':title', $title);\n\t\t\t\t$stmt->bindValue(':result_identifier', $result_identifier);\n\t\t\t\t$stmt->bindValue(':suite_to_run', $suite_to_run);\n\t\t\t\t$stmt->bindValue(':description', $description);\n\t\t\t\t$stmt->bindValue(':state', 1);\n\t\t\t\t$stmt->bindValue(':modified_by', $_SESSION['UserName']);\n\t\t\t\t$stmt->bindValue(':modified_on', phoromatic_server::current_time());\n\t\t\t\t$stmt->bindValue(':public_key', null); //  isset($public_key) ? $public_key :\n\t\t\t\t$stmt->bindValue(':run_target_groups', $run_target_groups);\n\t\t\t\t$stmt->bindValue(':run_target_systems', $run_target_systems);\n\t\t\t\t$stmt->bindValue(':environment_variables', $env_vars);\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\tphoromatic_add_activity_stream_event('benchmark', $ticket_id, ($is_new ? 'added' : 'modified'));\n\n\t\t\t\tif($result)\n\t\t\t\t{\n\t\t\t\t\theader('Location: ?benchmark/' . $ticket_id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$main = '<h2>' . ($is_new ? 'Create' : 'Edit') . ' A Benchmark</h2>\n\t\t\t<p>This page allows you to run a test suite -- consisting of a single or multiple test suites -- on a given set/group of systems right away at their next earliest possibility. This benchmark mode is an alternative to the <a href=\"?schedules\">benchmark schedules</a> for reptitive/routine testing.</p>';\n\t\t\t$local_suites = array();\n\t\t\tforeach(pts_file_io::glob(phoromatic_server::phoromatic_account_suite_path($_SESSION['AccountID']) . '*/suite-definition.xml') as $xml_path)\n\t\t\t{\n\t\t\t\t\t$id = basename(dirname($xml_path));\n\t\t\t\t\t$test_suite = new pts_test_suite($xml_path);\n\t\t\t\t\t$local_suites[$test_suite->get_title() . ' - ' . $id] = $id;\n\t\t\t}\n\t\t\t$official_suites = pts_test_suites::suites_on_disk(false, true);\n\n\t\t\tif(empty($local_suites))\n\t\t\t{\n\t\t\t\t$main .= '<p><strong>Before you can create a benchmark ticket you must first <a href=\"?build_suite\">create a test suite</a> with the tests you wish to run.</strong></p>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$main .= '<form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"run_benchmark\" id=\"run_benchmark\" method=\"post\" enctype=\"multipart/form-data\" onsubmit=\"return validate_run_benchmark();\">\n\t\t\t\t<h3>Title:</h3>\n\t\t\t\t<p>The title is the name of the result file for this test run.</p>\n\t\t\t\t<p><input type=\"text\" name=\"benchmark_title\" value=\"' . (!$is_new ? $e_schedule['Title'] : null) . '\" /></p>\n\t\t\t\t<h3>Test Run Identifier:</h3>\n\t\t\t\t<p>The test run identifier is the per-system name for the system(s) being benchmarked. The following variables may be used: <strong>.SYSTEM</strong>, <strong>.GROUP</strong>. Any custom per-user system variables set via the individual system pages can also be used.</p>\n\t\t\t\t<p><input type=\"text\" name=\"benchmark_identifier\" value=\"' . (!$is_new ? $e_schedule['Identifier'] : null) . '\" /></p>\n\t\t\t\t<h3>Test Suite To Run:</h3>\n\t\t\t\t<p><a href=\"?build_suite\">Build a suite</a> to add/select more tests to run or <a href=\"?local_suites\">view local suites</a> for more information on a particular suite. A test suite is a set of test profiles to run in a pre-defined manner.</p>';\n\t\t\t\t$main .= '<p><select name=\"suite_to_run\" id=\"suite_to_run_identifier\" onchange=\"phoromatic_show_basic_suite_details(\\'\\');\">';\n\t\t\t\tforeach(array_merge($local_suites, $official_suites) as $title => $id)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<option value=\"' . $id . '\">' . $title . '</option>';\n\t\t\t\t}\n\t\t\t\t$main .= '</select></p>';\n\t\t\t\t$main .= '<p><div id=\"suite_details\" style=\"background: #efefef;\"></div></p>';\n\t\t\t\t$main .= '<h3>Description:</h3>\n\t\t\t\t<p>The description is an optional way to add more details about the intent or objective of this test run.</p>\n\t\t\t\t<p><textarea name=\"benchmark_description\" id=\"benchmark_description\" cols=\"50\" rows=\"3\">' . (!$is_new ? $e_schedule['Description'] : null) . '</textarea></p>\n\t\t\t\t<hr /><h3>System Targets:</h3>\n\t\t\t\t<p>Select the systems that should be benchmarked at their next earliest convenience.</p>\n\t\t\t\t<p style=\"white-space: nowrap;\">';\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0 ORDER BY Title ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$result = $stmt->execute();\n\n\t\t\t\tif(!$is_new)\n\t\t\t\t{\n\t\t\t\t\t$e_schedule['RunTargetSystems'] = explode(',', $e_schedule['RunTargetSystems']);\n\t\t\t\t\t$e_schedule['RunTargetGroups'] = explode(',', $e_schedule['RunTargetGroups']);\n\t\t\t\t}\n\n\t\t\t\tif($row = $result->fetchArray())\n\t\t\t\t{\n\t\t\t\t\t$main .= '<h4>Systems: ';\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<input type=\"checkbox\" name=\"run_on_systems[]\" value=\"' . $row['SystemID'] . '\" ' . (!$is_new && in_array($row['SystemID'], $e_schedule['RunTargetSystems']) ? 'checked=\"checked\" ' : null) . '/> ' . $row['Title'] . ' ';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t\t$main .= '</h4>';\n\t\t\t\t}\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT GroupName FROM phoromatic_groups WHERE AccountID = :account_id ORDER BY GroupName ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$result = $stmt->execute();\n\n\t\t\t\tif($row = $result->fetchArray())\n\t\t\t\t{\n\t\t\t\t\t$main .= '<h4>Groups: ';\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<input type=\"checkbox\" name=\"run_on_groups[]\" value=\"' . $row['GroupName'] . '\" ' . (!$is_new && in_array($row['GroupName'], $e_schedule['RunTargetGroups']) ? 'checked=\"checked\" ' : null) . '/> ' . $row['GroupName'] . ' ';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t\t$main .= '</h4>';\n\t\t\t\t}\n\n\t\t\t\t$main .= '</p>\n\t\t\t\t<hr /><h3>Environment Options</h3>\n\t\t\t\t<h4>Stress Testing</h4>\n\t\t\t\t<p>If you wish to test systems for stability/reliability rather than performance, use this option and specify the number of tests to run concurrently (two or more) and (optionally) for the total period of time to continue looping the benchmarks. These options are intended to just stress the system and will not record any benchmark results. From the command-line this testing mode can be used via the <em>phoronix-test-suite stress-run</em> sub-command.</p>\n\t\t\t\t<p><strong>Concurrent Number Of Test Processes:</strong> <select name=\"PTS_CONCURRENT_TEST_RUNS\"><option value=\"0\">Disabled</option>';\n\t\t\t\tfor($i = 2; $i <= 24; $i++)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<option value=\"' . $i . '\">' . $i . '</option>';\n\t\t\t\t}\n\t\t\t\t$main .= '</select></p>\n\t\t\t\t<p><strong>Force Loop Time:</strong> <select name=\"TOTAL_LOOP_TIME\"><option value=\"0\">Disabled</option>';\n\t\t\t\t$s = true;\n\t\t\t\tfor($i = 5; $i < 60; $i += 5)\n\t\t\t\t{\n\t\t\t\t\tif($i > 15 && $i % 10 != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '<option value=\"' . $i . '\">' . pts_strings::format_time($i, 'MINUTES') . '</option>';\n\t\t\t\t}\n\t\t\t\tfor($i = 60; $i <= (30 * 24 * 60); $i += 60)\n\t\t\t\t{\n\t\t\t\t\tif($i > 10080)\n\t\t\t\t\t{\n\t\t\t\t\t\t// 7 days\n\t\t\t\t\t\tif(($i % 1440) != 0)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if($i > 480)\n\t\t\t\t\t{\n\t\t\t\t\t\t$s = !$s;\n\t\t\t\t\t\tif(!$s)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '<option value=\"' . $i . '\">' . pts_strings::format_time($i, 'MINUTES') . '</option>';\n\t\t\t\t}\n\t\t\t\t$main .= '</select></p>';\n\t\t\t\t$main .= '<p><a id=\"env_var_options_show\" onclick=\"javascript:document.getElementById(\\'env_var_options\\').style.display = \\'block\\'; javascript:document.getElementById(\\'env_var_options_show\\').style.display = \\'none\\'; \">Advanced Options</a></p> <div id=\"env_var_options\" style=\"display: none;\"><p>The advanced options require the Phoromatic clients be on the latest Phoronix Test Suite (10.8 or newer / Git). See the Phoronix Test Suite documentation for more information on these environment variables / advanced options.</p>' . pts_env::get_html_options('phoromatic') . '</div>';\n\n\t\t\t\t$main .= '<hr /><p align=\"left\"><input name=\"submit\" value=\"' . ($is_new ? 'Run' : 'Edit') . ' Benchmark\" type=\"submit\" onclick=\"return pts_rmm_validate_schedule();\" /></p>\n\t\t\t\t\t</form>';\n\t\t\t}\n\t\t}\n\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_benchmark_tickets WHERE AccountID = :account_id AND State >= 0 AND TicketIssueTime > :time_cutoff ORDER BY TicketIssueTime DESC LIMIT 30');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$stmt->bindValue(':time_cutoff', (time() - (60 * 60 * 24 * 14)));\n\t\t$result = $stmt->execute();\n\t\t$right = '<ul><li>Benchmark Tickets</li>';\n\n\t\tif($result)\n\t\t{\n\t\t\t$row = $result->fetchArray();\n\n\t\t\tif(!empty($row))\n\t\t\t{\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\t$right .= '<li><a href=\"?benchmark/' . $row['TicketID'] . '\">' . $row['Title'] . '</a></li>';\n\t\t\t\t}\n\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t}\n\t\t}\n\t\t$right .= '<li><em><a href=\"?benchmark/all\">View All Past Tickets</a></em></li>';\n\t\t$right .= '</ul>';\n\n\t\techo phoromatic_webui_header_logged_in();\n\t\techo phoromatic_webui_main($main, phoromatic_webui_right_panel_logged_in($right));\n\t\techo phoromatic_webui_footer();\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2014 - 2021, Phoronix Media\n\tCopyright (C) 2014 - 2021, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nclass phoromatic_r_add_test_details implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn '';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\tphoromatic_quit_if_invalid_input_found(array('tp'));\n\t\t$test_profile = new pts_test_profile($_GET['tp']);\n\t\t$name = $test_profile->get_title();\n\t\t$description = $test_profile->get_description();\n\n\t\techo '<h2>' . $name . ' [' . $test_profile->get_identifier() . '] </h2>';\n\t\techo '<p><em>' . $description . '</em></p>';\n\t\tif(!empty($supported_os = $test_profile->get_supported_platforms()))\n\t\t{\n\t\t\techo '<p>This test is supported on <strong>' . implode(', ', $supported_os) . '</strong>.</p>';\n\t\t}\n\t\techo '<p>More information on this test can be found via <a href=\"?tests/' . $test_profile->get_identifier() . '\">the test profile page</a> or <a target=\"_blank\" href=\"http://openbenchmarking.org/test/' . $test_profile->get_identifier() . '\">OpenBenchmarking.org</a>.</p>';\n\n\t\t$test_options = $test_profile->get_test_option_objects();\n\n\t\tif(count($test_options) == 0)\n\t\t{\n\t\t\techo '<p><strong>No configurable user options for this test.</strong></p>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor($i = 0; $i < count($test_options); $i++)\n\t\t\t{\n\t\t\t\t$o = $test_options[$i];\n\t\t\t\t$option_count = $o->option_count();\n\n\t\t\t\techo '<input type=\"hidden\" name=\"test_add[]\" value=\"' . $test_profile->get_identifier() . '\" />';\n\n\t\t\t\tif(isset($_GET['build_suite']))\n\t\t\t\t{\n\t\t\t\t\t$test_prefix = \"test_option_\" . microtime() . \"_\";\n\t\t\t\t\techo '<input type=\"hidden\" name=\"test_prefix[]\" value=\"' . $test_prefix . '\" />';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t$test_prefix = \"test_option_\" . $_GET['tp'] . \"_\";\n\n\t\t\t\techo '<p id=\"' . $test_prefix . $o->get_identifier() . '_name\">' . $o->get_name() . '</p>';\n\n\t\t\t\tif($option_count == 0)\n\t\t\t\t{\n\t\t\t\t\techo '<input name=\"' . $test_prefix . $o->get_identifier() . '_selected\" id=\"' . $test_prefix . $o->get_identifier() . '_selected\" type=\"hidden\" value=\"\" />';\n\t\t\t\t\techo '<p><input type=\"text\" name=\"' . $test_prefix . $o->get_identifier() . '\" id=\"' . $test_prefix . $o->get_identifier() . '\"  onChange=\"phoromatic_test_select_update_selected_name_custom_input(this);\" /></p>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\techo '<input name=\"' . $test_prefix . $o->get_identifier() . '_selected\" id=\"' . $test_prefix . $o->get_identifier() . '_selected\" type=\"hidden\" value=\"' . $o->get_name() . ': ' . $o->get_option_name(0) . '\" />';\n\t\t\t\t\techo '<p><select name=\"' . $test_prefix . $o->get_identifier() . '\" id=\"' . $test_prefix . $o->get_identifier() . '\" onChange=\"phoromatic_test_select_update_selected_name(this);\">';\n\n\t\t\t\t\tfor($j = 0; $j < $option_count; $j++)\n\t\t\t\t\t{\n\t\t\t\t\t\techo '<option value=\"' . $o->format_option_value_from_input($o->get_option_value($j)) . '\">' . $o->get_option_name($j) . '</option>';\n\t\t\t\t\t}\n\n\t\t\t\t\techo '</select></p>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\techo '<br /><br /><p><input name=\"submit\" value=\"Add\" type=\"submit\" onclick=\"\" /></p>';\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2021, Phoronix Media\n\tCopyright (C) 2021, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_r_basic_suite_details implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn '';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\tphoromatic_quit_if_invalid_input_found(array('ts'));\n\t\t$ts = $_GET['ts'];\n\t\t$ts_file = phoromatic_server::find_suite_file($_SESSION['AccountID'], $ts);\n\t\t$test_suite = new pts_test_suite($ts_file);\n\t\t$name = $test_suite->get_title();\n\t\t$description = $test_suite->get_description();\n\n\t\techo '<h2>' . $name . '</h2>';\n\t\techo '<p><em>' . $description . '</em></p>';\n\t\t$test_suite->sort_contained_tests();\n\t\tforeach($test_suite->get_contained_test_result_objects() as $tro)\n\t\t{\n\t\t\techo '<p><strong>' . $tro->test_profile->get_title() . ' [' . $tro->test_profile->get_identifier() . ']</strong><br />';\n\t\t\techo $tro->get_arguments_description() . '</p>' . PHP_EOL;\n\t\t}\n\t\tif(stripos($_SERVER['HTTP_REFERER'], '?schedules') !== false)\n\t\t{\n\t\t\techo '<input type=\"hidden\" name=\"suite_add\" value=\"' . $ts . '\" />';\n\t\t\techo '<br /><br /><p><input name=\"submit\" value=\"Add\" type=\"submit\" onclick=\"\" /></p>';\n\t\t}\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2008 - 2022, Phoronix Media\n\tCopyright (C) 2008 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_schedules implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'Test Schedules';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\t$main = null;\n\t\techo phoromatic_webui_header_logged_in();\n\n\t\tif(!empty($PATH[0]) && is_numeric($PATH[0]))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_schedules WHERE AccountID = :account_id AND ScheduleID = :schedule_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t$result = $stmt->execute();\n\t\t\t$row = $result->fetchArray();\n\n\t\t\tif(empty($row))\n\t\t\t{\n\t\t\t\t$main = '<h1>Test Schedules</h1>';\n\t\t\t\t$main .= '<h3>No Resource Found</h3>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\n\t\t\t\t\tif(isset($_POST['add_to_schedule_select_test']) && verify_submission_token())\n\t\t\t\t\t{\n\t\t\t\t\t\tphoromatic_quit_if_invalid_input_found(array('add_to_schedule_select_test'));\n\t\t\t\t\t\t$name = $_POST['add_to_schedule_select_test'];\n\t\t\t\t\t\t$args = array();\n\t\t\t\t\t\t$args_name = array();\n\n\t\t\t\t\t\tforeach($_POST as $i => $v)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(substr($i, 0, 12) == 'test_option_' && substr($i, -9) != '_selected')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tphoromatic_quit_if_invalid_input_found(array($i, $i . '_selected'));\n\t\t\t\t\t\t\t\tarray_push($args, $v);\n\t\t\t\t\t\t\t\tarray_push($args_name, $_POST[$i . '_selected']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$args_name = implode(' - ', $args_name);\n\t\t\t\t\t\t$args = implode(' ', $args);\n\n\t\t\t\t\t\tif(!empty($name))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_tests (AccountID, ScheduleID, TestProfile, TestArguments, TestDescription) VALUES (:account_id, :schedule_id, :test_profile, :test_arguments, :test_description)');\n\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t\t$stmt->bindValue(':test_profile', $name);\n\t\t\t\t\t\t\t$stmt->bindValue(':test_arguments', $args);\n\t\t\t\t\t\t\t$stmt->bindValue(':test_description', $args_name);\n\t\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\t\tphoromatic_add_activity_stream_event('tests_for_schedule', $PATH[0], 'added');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($_POST['suite_add']) && verify_submission_token())\n\t\t\t\t\t{\n\t\t\t\t\t\t$test_suite = phoromatic_server::find_suite_file($_SESSION['AccountID'], $_POST['suite_add']);\n\t\t\t\t\t\tif(is_file($test_suite))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$test_suite = new pts_test_suite($test_suite);\n\t\t\t\t\t\t\tforeach($test_suite->get_contained_test_result_objects() as $tro)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_tests (AccountID, ScheduleID, TestProfile, TestArguments, TestDescription) VALUES (:account_id, :schedule_id, :test_profile, :test_arguments, :test_description)');\n\t\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t\t\t$stmt->bindValue(':test_profile', $tro->test_profile->get_identifier());\n\t\t\t\t\t\t\t\t$stmt->bindValue(':test_arguments', $tro->get_arguments());\n\t\t\t\t\t\t\t\t$stmt->bindValue(':test_description', $tro->get_arguments_description());\n\t\t\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\t\t\tphoromatic_add_activity_stream_event('tests_for_schedule', $PATH[0], 'added');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($PATH[1]) && $PATH[1] == 'remove' && !empty($PATH[2]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// REMOVE TEST\n\t\t\t\t\t\t$to_remove = explode(PHP_EOL, base64_decode($PATH[2]));\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id AND TestProfile = :test AND TestArguments = :test_args');\n\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':test', $to_remove[0]);\n\t\t\t\t\t\t$stmt->bindValue(':test_args', $to_remove[1]);\n\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\tphoromatic_add_activity_stream_event('tests_for_schedule', $to_remove[0] . ' - ' . $to_remove[1], 'removed');\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($PATH[1]) && $PATH[1] == 'delete-trigger' && !empty($PATH[2]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// REMOVE TRIGGER\n\t\t\t\t\t\t$trigger = pts_strings::sanitize(base64_decode($PATH[2]));\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_schedules_triggers WHERE AccountID = :account_id AND Trigger = :trigger AND ScheduleID = :schedule_id');\n\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':trigger', $trigger);\n\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\tif($result)\n\t\t\t\t\t\t\t$main .= '<h2 style=\"color: red;\">Trigger Removed: ' . $trigger . '</h2>';\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($PATH[1]) && in_array($PATH[1], array('activate', 'deactivate')) && verify_submission_token())\n\t\t\t\t\t{\n\t\t\t\t\t\tswitch($PATH[1])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'deactivate':\n\t\t\t\t\t\t\t\t$new_state = 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'activate':\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t$new_state = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// REMOVE TEST\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_schedules SET State = :new_state WHERE AccountID = :account_id AND ScheduleID = :schedule_id');\n\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':new_state', $new_state);\n\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\t$row['State'] = $new_state;\n\t\t\t\t\t\tphoromatic_add_activity_stream_event('schedule', $PATH[0], $PATH[1]);\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($_POST['do_manual_test_run']) && verify_submission_token())\n\t\t\t\t\t{\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_triggers (AccountID, ScheduleID, Trigger, TriggeredOn) VALUES (:account_id, :schedule_id, :trigger, :triggered_on)');\n\t\t\t\t\t\t$stmt->bindValue(':account_id',\t$_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':trigger', $_SESSION['UserName'] . ' - Manual Test Run - ' . date('H:i j M Y'));\n\t\t\t\t\t\t$stmt->bindValue(':triggered_on', phoromatic_server::current_time());\n\t\t\t\t\t\t$stmt->execute();\n\t\t\t\t\t\t$main .= '<h2 style=\"color: red;\">Manual Test Run Triggered</h2>';\n\t\t\t\t\t}\n\t\t\t\t\telse if(isset($_POST['skip_current_ticket']) && verify_submission_token())\n\t\t\t\t\t{\n\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_schedules_trigger_skips (AccountID, ScheduleID, Trigger) VALUES (:account_id, :schedule_id, :trigger)');\n\t\t\t\t\t\t$stmt->bindValue(':account_id',\t$_SESSION['AccountID']);\n\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t$stmt->bindValue(':trigger', date('Y-m-d'));\n\t\t\t\t\t\t$stmt->execute();\n\t\t\t\t\t\t$main .= '<h2 style=\"color: red;\">Current Trigger To Be Ignored</h2>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$main .= '<h1>' . $row['Title'] . '</h1>';\n\t\t\t\t$main .= '<h3>' . $row['Description'] . '</h3>';\n\t\t\t\tswitch($row['RunPriority'])\n\t\t\t\t{\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t$prio = 'Low Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 100:\n\t\t\t\t\t\t$prio = 'Default Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 200:\n\t\t\t\t\t\t$prio = 'High Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t$prio = $row['RunPriority'] . ' Priority';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t$main .= '<p>Priority: ' . $prio . '</p><p>This schedule was last modified on <strong>' . date('j F Y \\a\\t H:i', strtotime($row['LastModifiedOn'])) . '</strong> by <strong>' . $row['LastModifiedBy'] . '</strong>.';\n\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<p><a href=\"?sched/' . $PATH[0] . '\">Edit Schedule</a> | ';\n\n\t\t\t\t\tif($row['State'] == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a href=\"?schedules/' . $PATH[0] . '/deactivate' . append_token_to_url()  . '\">Deactivate Schedule</a>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a href=\"?schedules/' . $PATH[0] . '/activate' . append_token_to_url()  . '\">Activate Schedule</a>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '</p>';\n\t\t\t\t}\n\n\t\t\t\t$main .= '<hr />';\n\t\t\t\t$main .= '<h2>Schedule</h2>';\n\t\t\t\tif(!empty($row['ActiveOn']))\n\t\t\t\t{\n\t\t\t\t\t$active_days = explode(',', $row['ActiveOn']);\n\t\t\t\t\t$week = array('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');\n\t\t\t\t\tforeach($active_days as $i => &$day)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!isset($week[$day]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tunset($active_days[$i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$day = $week[$day];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch(count($active_days))\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t$day_show = implode(' and ', $active_days);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t$day_show = implode(', ', $active_days);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '<p>This test is scheduled to run every <strong>' . $day_show . '</strong> at <strong>' . str_replace('.', ':', $row['RunAt']) . '</strong>.</p>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$main .= '<p>This test schedule is not currently set to run a pre-defined time-based schedule.</p>';\n\t\t\t\t}\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\t\t\t\t\t$trigger_url = 'http://' . phoromatic_web_socket_server_ip() . '/event.php?type=trigger&user=' . $_SESSION['UserName'] . '&public_key=' . $row['PublicKey'] . '&trigger=XXX';\n\t\t\t\t\t$main .= '<p>This test schedule can be manually triggered to run at any time by calling <strong>' . $trigger_url . '</strong> where <em>XXX</em> is the trigger value to be used (if relevant, such as a time-stamp, Git/SVN commit number or hash, etc). There\\'s also the option of sub-targeting system(s) part of this schedule. One option is appending <em>&sub_target_this_ip</em> if this URL is being called from one of the client test systems to only sub-target the triggered testing on that client, among other options.</p>';\n\t\t\t\t\t$main .= '<p>If you wish to run this test schedule now, click the following button and the schedule will be run on all intended systems at their next earliest possible convenience.</p>';\n\t\t\t\t\t$main .= '<p><form action=\"?schedules/' . $PATH[0] . '\" name=\"manual_run\" method=\"post\">';\n\t\t\t\t\t$main .= write_token_in_form() . '<input type=\"hidden\" name=\"do_manual_test_run\" value=\"1\" /><input type=\"submit\" value=\"Run Test Schedule Now\" onclick=\"return confirm(\\'Run this test schedule now?\\');\" />';\n\t\t\t\t\t$main .= '</form></p>';\n\t\t\t\t\t$main .= '<p><form action=\"?schedules/' . $PATH[0] . '\" name=\"skip_run\" method=\"post\">';\n\t\t\t\t\t$main .= write_token_in_form() . '<input type=\"hidden\" name=\"skip_current_ticket\" value=\"1\" /><input type=\"submit\" value=\"Skip Current Test Ticket\" onclick=\"return confirm(\\'Skip any currently active test ticket on all systems?\\');\" />';\n\t\t\t\t\t$main .= '</form></p>';\n\t\t\t\t}\n\n\t\t\t\t$main .= '<hr />';\n\n\t\t\t\t$contexts = array('SetContextPreInstall' => 'Pre-Install', 'SetContextPostInstall' => 'Post-Install', 'SetContextPreRun' => 'Pre-Test-Run', 'SetContextPostRun' => 'Post-Test-Run');\n\t\t\t\t$scripts = 0;\n\t\t\t\tforeach($contexts as $context => $v)\n\t\t\t\t{\n\t\t\t\t\tif(isset($row[$context]) && !empty($row[$context]) && is_file(phoromatic_server::phoromatic_account_path($_SESSION['AccountID']) . 'context_' . $row[$context]))\n\t\t\t\t\t{\n\t\t\t\t\t\t$scripts++;\n\t\t\t\t\t\t$main .= '<h2>' . $v . ' Context Script</h2>';\n\t\t\t\t\t\t$main .= '<blockquote>' . str_replace(PHP_EOL, '<br />', htmlentities(file_get_contents(phoromatic_server::phoromatic_account_path($_SESSION['AccountID']) . 'context_' . $row[$context]))) . '</blockquote>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(!empty($row['EnvironmentVariables']))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h1>Environment Variables</h1><ol>';\n\n\t\t\t\t\tforeach(explode(';', $row['EnvironmentVariables']) as $env)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<li><strong>' . $env . '</strong></li>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</ol>';\n\t\t\t\t}\n\n\t\t\t\tif($scripts > 0)\n\t\t\t\t\t$main .= '<hr />';\n\n\t\t\t\t$main .= '<h2>Tests To Run</h2>';\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t$result = $stmt->execute();\n\n\t\t\t\t$test_count = 0;\n\t\t\t\t$main .= '<p>';\n\t\t\t\twhile($row = $result->fetchArray())\n\t\t\t\t{\n\t\t\t\t\t$test_count++;\n\t\t\t\t\t$main .= $row['TestProfile'] . ($row['TestDescription'] != null ? ' - <em>' . $row['TestDescription'] . '</em>' : '') . (!PHOROMATIC_USER_IS_VIEWER ? ' <a href=\"?schedules/' . $PATH[0] . '/remove/' . base64_encode(implode(PHP_EOL, array($row['TestProfile'], $row['TestArguments']))) . '\">Remove Test</a>' : null) . '<br />';\n\n\t\t\t\t\t/*\n\t\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER && isset($_REQUEST['make_version_lock_tests']))\n\t\t\t\t\t{\n\t\t\t\t\t\tif(strpos($row['TestProfile'], '.') == false)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$test_profile = new pts_test_profile($row['TestProfile']);\n\t\t\t\t\t\t\t$full_identifier = $test_profile->get_identifier(true);\n\n\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_schedules_tests SET TestProfile = :version_locked_tp WHERE AccountID = :account_id AND ScheduleID = :schedule_id AND TestProfile = :test');\n\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t\t\t\t$stmt->bindValue(':test', $row['TestProfile']);\n\t\t\t\t\t\t\t$stmt->bindValue(':version_locked_tp', $full_identifier);\n\t\t\t\t\t\t\t$result2 = $stmt->execute();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t}\n\t\t\t\t$main .= '</p>';\n\n\t\t\t\tif($test_count == 0)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<h3 style=\"text-transform: uppercase;\">No tests have been added yet for this test schedule.</h3>';\n\t\t\t\t}\n\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Add A Test</h2>';\n\t\t\t\t\t$main .= '<form action=\"?schedules/' . $PATH[0] . '\" name=\"add_test\" id=\"add_test\" method=\"post\">';\n\t\t\t\t\t$main .= write_token_in_form() . '<select name=\"add_to_schedule_select_test\" id=\"add_to_schedule_select_test\" onchange=\"phoromatic_schedule_test_details(\\'\\');\">';\n\t\t\t\t\t$dc = pts_client::download_cache_path();\n\t\t\t\t\t$dc_exists = is_file($dc . 'pts-download-cache.json');\n\t\t\t\t\tif($dc_exists)\n\t\t\t\t\t{\n\t\t\t\t\t\t$cache_json = file_get_contents($dc . 'pts-download-cache.json');\n\t\t\t\t\t\t$cache_json = json_decode($cache_json, true);\n\t\t\t\t\t}\n\t\t\t\t\tforeach(array_merge(pts_tests::local_tests(), pts_openbenchmarking::available_tests(false, isset($_COOKIE['list_show_all_test_versions']) && $_COOKIE['list_show_all_test_versions'])) as $test)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(phoromatic_server::read_setting('show_local_tests_only'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$cache_checked = false;\n\t\t\t\t\t\t\tif($dc_exists)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif($cache_json && isset($cache_json['phoronix-test-suite']['cached-tests']))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(in_array($test, $cache_json['phoronix-test-suite']['cached-tests']))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$cache_checked = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!$cache_checked && pts_test_install_request::test_files_available_on_local_system($test) == false)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$main .= '<option value=\"' . $test . '\">' . $test . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</select>';\n\t\t\t\t\t$main .= pts_web_embed::cookie_checkbox_option_helper('list_show_all_test_versions', 'Show all available test profile versions.');\n\t\t\t\t\t$main .= '<p><div id=\"test_details\"></div></p>';\n\t\t\t\t\t$main .= '</form>';\n\n\t\t\t\t\t$local_suites = array();\n\t\t\t\t\tforeach(pts_file_io::glob(phoromatic_server::phoromatic_account_suite_path($_SESSION['AccountID']) . '*/suite-definition.xml') as $xml_path)\n\t\t\t\t\t{\n\t\t\t\t\t\t$id = basename(dirname($xml_path));\n\t\t\t\t\t\t$test_suite = new pts_test_suite($xml_path);\n\t\t\t\t\t\t$local_suites[$test_suite->get_title() . ' - ' . $id] = $id;\n\t\t\t\t\t}\n\t\t\t\t\t$official_suites = pts_test_suites::suites_on_disk(false, true);\n\n\t\t\t\t\t$main .= '<hr /><h2>Add A Suite:</h2>';\n\t\t\t\t\t$main .= '<form action=\"?schedules/' . $PATH[0] . '\" name=\"add_suite\" id=\"add_suite\" method=\"post\">';\n\t\t\t\t\t$main .= write_token_in_form() . '<p><select name=\"suite_to_run\" id=\"suite_to_run_identifier\" onchange=\"phoromatic_show_basic_suite_details(\\'\\');\">';\n\t\t\t\t\tforeach(array_merge($local_suites, $official_suites) as $title => $id)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<option value=\"' . $id . '\">' . $title . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</select></p>';\n\t\t\t\t\t$main .= '<p><div id=\"suite_details\"></div></p>';\n\t\t\t\t\t$main .= '</form>';\n\t\t\t\t}\n\n\t\t\t\t$systems_in_schedule = phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $PATH[0]);\n\t\t\t\tif(!empty($systems_in_schedule))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Systems In Schedule</h2>';\n\t\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<p>To run this schedule on more systems, <a href=\"?sched/' . $PATH[0] . '\">edit the schedule</a>.</p>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\"><ul><li><h1>Systems</h1></li>';\n\n\t\t\t\t\tforeach($systems_in_schedule as $system_id)\n\t\t\t\t\t{\n\t\t\t\t\t\t$row = phoromatic_server::get_system_details($_SESSION['AccountID'], $system_id);\n\t\t\t\t\t\t$main .= '<a href=\"?systems/' . $row['SystemID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . $row['LocalIP'] . '</td><td><strong>' . $row['CurrentTask'] . '</strong></td><td><strong>Last Communication:</strong> ' . date('j F Y H:i', strtotime($row['LastCommunication'])) . '</td></tr></table></li></a>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</ul></div><hr />';\n\t\t\t\t}\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Trigger, TriggeredOn FROM phoromatic_schedules_triggers WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TriggeredOn DESC LIMIT 10');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t$test_result_result = $stmt->execute();\n\t\t\t\t$test_result_row = $test_result_result->fetchArray();\n\n\t\t\t\tif($test_result_row)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\">';\n\t\t\t\t\t$main .= '<ul><li><h1>Recent Triggers For This Schedule</h1></li>';\n\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<a onclick=\"\"><li>' . $test_result_row['Trigger'] . '<br /><table><tr><td>' . phoromatic_server::user_friendly_timedate($test_result_row['TriggeredOn']) . '</td><td><a href=\"?schedules/' . $PATH[0] . '/delete-trigger/' . base64_encode($test_result_row['Trigger']) . '\">Remove Trigger</a></td></tr></table></li></a>';\n\n\t\t\t\t\t}\n\t\t\t\t\twhile($test_result_row = $test_result_result->fetchArray());\n\t\t\t\t\t$main .= '</ul>';\n\t\t\t\t\t$main .= '</div>';\n\t\t\t\t}\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY UploadTime DESC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n\t\t\t\t$test_result_result = $stmt->execute();\n\t\t\t\t$test_result_row = $test_result_result->fetchArray();\n\t\t\t\t$oldest_upload_time = 0;\n\n\t\t\t\tif($test_result_row)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\">';\n\t\t\t\t\t$main .= '<ul><li><h1>Recent Test Results For This Schedule</h1></li>';\n\t\t\t\t\t$results = 0;\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$oldest_upload_time = $test_result_row['UploadTime'];\n\t\t\t\t\t\tif($results > 100)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '<a href=\"?result/' . $test_result_row['PPRID'] . '\"><li>' . $test_result_row['Title'] . '<br /><table><tr><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_server::user_friendly_timedate($test_result_row['UploadTime']) .  '</td></tr></table></li></a>';\n\t\t\t\t\t\t$results++;\n\n\t\t\t\t\t}\n\t\t\t\t\twhile($test_result_row = $test_result_result->fetchArray());\n\t\t\t\t\t$main .= '</ul>';\n\t\t\t\t\t$main .= '</div>';\n\t\t\t\t}\n\t\t\t\t$num_results = phoromatic_results_for_schedule($PATH[0]);\n\n\t\t\t\tif($num_results > 1)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<p>Jump to the latest results from the past: ';\n\t\t\t\t\t$main .= '<select name=\"view_results_from_past\" id=\"view_results_from_past\" onchange=\"phoromatic_jump_to_results_from(\\'' . $PATH[0] . '\\', \\'view_results_from_past\\');\">';\n\t\t\t\t\t$oldest_upload_time = !empty($oldest_upload_time) ? strtotime($oldest_upload_time) : 0;\n\t\t\t\t\t$opts = array(\n\t\t\t\t\t\t'Week' => 7,\n\t\t\t\t\t\t'Three Weeks' => 21,\n\t\t\t\t\t\t'Month' => 30,\n\t\t\t\t\t\t'Quarter' => 90,\n\t\t\t\t\t\t'Six Months' => 180,\n\t\t\t\t\t\t'Year' => 365,\n\t\t\t\t\t\t);\n\t\t\t\t\tforeach($opts as $str_name => $time_offset)\n\t\t\t\t\t{\n\t\t\t\t\t\tif($oldest_upload_time > (time() - (86400 * $time_offset)))\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t$main .= '<option value=\"' . $time_offset . '\">' . $str_name . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '<option value=\"all\">All Results</option>';\n\t\t\t\t\t$main .= '</select>';\n\t\t\t\t\t$main .= '</p><hr />';\n\t\t\t\t}\n\t\t\t\t$main .= '<p><strong>' . $num_results . ' Test Results Available For This Schedule.</strong></p>';\n\t\t\t}\n\n\t\t\techo phoromatic_webui_main($main, phoromatic_webui_right_panel_logged_in());\n\t\t\techo phoromatic_webui_footer();\n\t\t\treturn;\n\t\t}\n\n\n\t\t$main = '<h1>Test Schedules</h1>\n\t\t<p>Test schedules are used for tests that are intended to be run on a recurring basis -- either daily or other defined time period -- or whenever a trigger/event occurs, like a new Git commit to a software repository being tracked. Test schedules can be run on any given system(s)/group(s) and can be later edited.</p>';\n\n\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t{\n\t\t\t$main .= '\n\t\t\t<hr />\n\t\t\t<h2>Create A Schedule</h2>\n\t\t\t<p><a href=\"?sched\">Create a schedule</a> followed by adding tests/suites to run for that schedule on the selected systems.</p>';\n\t\t}\n\n\t\t$main .= '<hr /><h2>Current Schedules</h2>';\n\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n\t\t\t<ul>\n\t\t\t<li><h1>Active Test Schedules</h1></li>';\n\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, Description, RunTargetSystems, RunTargetGroups, RunAt, ActiveOn FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 ORDER BY Title ASC');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\n\t\tif($row == false)\n\t\t{\n\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Schedules Found</li>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\t$stmt_tests = phoromatic_server::$db->prepare('SELECT COUNT(*) AS TestCount FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n\t\t\t\t$stmt_tests->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt_tests->bindValue(':schedule_id', $row['ScheduleID']);\n\t\t\t\t$result_tests = $stmt_tests->execute();\n\t\t\t\t$row_tests = $result_tests->fetchArray();\n\t\t\t\t$test_count = !empty($row_tests) ? $row_tests['TestCount'] : 0;\n\n\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler($test_count, 'Test') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . ' Total</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID'], 'TODAY'), 'Result') . ' Today</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n\t\t\t}\n\t\t\twhile($row = $result->fetchArray());\n\t\t}\n\n\t\t$main .= '</ul>\n\t\t</div>';\n\n\t\t$main .= '<hr /><h2>Schedule Overview</h2>';\n\t\t$week = array('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');\n\n\t\tforeach($week as $i => $day)\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, RunAt, RunTargetGroups, RunTargetSystems FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 AND ActiveOn LIKE :active_on ORDER BY RunAt,ActiveOn,Title ASC');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':active_on', '%' . $i . '%');\n\t\t\t$result = $stmt->execute();\n\t\t\t$has_matched = false;\n\t\t\twhile($row = $result->fetchArray())\n\t\t\t{\n\t\t\t\tif(!$has_matched)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<h3>' . $day . '</h3>' . PHP_EOL . '<p>';\n\t\t\t\t\t$has_matched = true;\n\t\t\t\t}\n\t\t\t\t$main .= '<em>' . $row['RunAt'] . '</em> <a href=\"?schedules/' . $row['ScheduleID'] . '\">' . $row['Title'] . '</a>';\n\t\t\t\t//$main .= $row['RunTargetSystems'] . ' ' . $row['RunTargetGroups'];\n\t\t\t\t$main .= '<br />';\n\t\t\t}\n\n\t\t\tif($has_matched)\n\t\t\t\t$main .= '</p>' . PHP_EOL;\n\t\t}\n\n\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n\t\t\t\t<ul>\n\t\t\t\t<li><h1>Deactivated Test Schedules</h1></li>';\n\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, Description, RunTargetSystems, RunTargetGroups, RunAt, ActiveOn FROM phoromatic_schedules WHERE AccountID = :account_id AND State < 1 ORDER BY Title ASC');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\n\t\tif($row == false)\n\t\t{\n\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Schedules Found</li>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\t$stmt_tests = phoromatic_server::$db->prepare('SELECT COUNT(*) AS TestCount FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n\t\t\t\t$stmt_tests->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt_tests->bindValue(':schedule_id', $row['ScheduleID']);\n\t\t\t\t$result_tests = $stmt_tests->execute();\n\t\t\t\t$row_tests = $result_tests->fetchArray();\n\t\t\t\t$test_count = !empty($row_tests) ? $row_tests['TestCount'] : 0;\n\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler($test_count, 'Test') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . ' Total</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID'], 'TODAY'), 'Result') . ' Today</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n\t\t\t}\n\t\t\twhile($row = $result->fetchArray());\n\t\t}\n\n\t\t$main .= '</ul>\n\t\t</div>';\n\n\t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n\t\techo phoromatic_webui_footer();\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2008 - 2022, Phoronix Media\n\tCopyright (C) 2008 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nclass phoromatic_system_claim implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'Phoromatic Client System Claim';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\techo phoromatic_webui_header_logged_in();\n\t\t$main = null;\n\n\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t{\n\n\t\t\tif(function_exists('ssh2_connect') && isset($_POST['ip']) && isset($_POST['port']) && isset($_POST['password']) && isset($_POST['username']) && verify_submission_token())\n\t\t\t{\n\t\t\t\t$connection = ssh2_connect($_POST['ip'], $_POST['port']);\n\n\t\t\t\tif(ssh2_auth_password($connection, $_POST['username'], $_POST['password']))\n\t\t\t\t{\n\t\t\t\t\t$tmp_local_file = tempnam('/tmp', 'pts-ssh');\n\t\t\t\t\t$tmp_remote_file = 'pts-ssh-' . rand(9999, 99999);\n\n\t\t\t\t\tfile_put_contents($tmp_local_file, '#!/bin/sh\n\t\t\tif [ -w /var/lib/phoronix-test-suite/ ]\n\t\t\tthen\n\t\t\t\tPHORO_FILE_PATH=/var/lib/phoronix-test-suite/\n\t\t\telif [ -w $HOME/.phoronix-test-suite/ ]\n\t\t\tthen\n\t\t\t\tPHORO_FILE_PATH=$HOME/.phoronix-test-suite/\n\t\t\tfi\n\n\t\t\techo \"' . phoromatic_web_socket_server_ip() . '\" >> $PHORO_FILE_PATH/phoromatic-servers\n\t\t\tmkdir -p $PHORO_FILE_PATH/modules-data/phoromatic\n\t\t\techo \"' . phoromatic_web_socket_server_addr() . '\" > $PHORO_FILE_PATH/modules-data/phoromatic/last-phoromatic-server\n\t\t\t');\n\n\t\t\t\t\tssh2_scp_send($connection, $tmp_local_file, $tmp_remote_file);\n\t\t\t\t\tunlink($tmp_local_file);\n\t\t\t\t\tssh2_exec($connection, 'chmod +x ' . $tmp_remote_file);\n\t\t\t\t\tssh2_exec($connection, './' . $tmp_remote_file);\n\t\t\t\t\tssh2_exec($connection, 'rm' . $tmp_remote_file);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif((isset($_POST['ip_claim']) && !empty($_POST['ip_claim'])) && isset($_POST['ping']) && verify_submission_token())\n\t\t\t{\n\t\t\t\t$ip_ping = ip2long($_POST['ip_claim']) !== false ? $_POST['ip_claim'] : null;\n\t\t\t\tif($ip_ping)\n\t\t\t\t{\n\t\t\t\t\techo '<h3>Ping Test: ' . $ip_ping . '</h3>';\n\t\t\t\t\techo '<pre>';\n\t\t\t\t\techo shell_exec('ping -c 1 ' . $ip_ping);\n\t\t\t\t\techo '</pre>';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(((isset($_POST['ip_claim']) && !empty($_POST['ip_claim'])) || (isset($_POST['mac_claim']) && !empty($_POST['mac_claim']))) && verify_submission_token())\n\t\t\t{\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_system_association_claims (AccountID, IPAddress, NetworkMAC, CreationTime) VALUES (:account_id, :ip_address, :mac_address, :creation_time)');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':ip_address', pts_strings::simple($_POST['ip_claim']));\n\t\t\t\t$stmt->bindValue(':mac_address', pts_strings::simple($_POST['mac_claim']));\n\t\t\t\t$stmt->bindValue(':creation_time', phoromatic_server::current_time());\n\t\t\t\t$result = $stmt->execute();\n\t\t\t}\n\t\t\tif(isset($_POST['remove_claim']) && !empty($_POST['remove_claim']) && verify_submission_token())\n\t\t\t{\n\t\t\t\tlist($ipc, $macc) = explode(',', $_POST['remove_claim']);\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_system_association_claims WHERE AccountID = :account_id AND NetworkMAC = :mac_address AND IPAddress = :ip_address');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':ip_address', pts_strings::simple($ipc));\n\t\t\t\t$stmt->bindValue(':mac_address', pts_strings::simple($macc));\n\t\t\t\t$stmt->bindValue(':creation_time', phoromatic_server::current_time());\n\t\t\t\t$result = $stmt->execute();\n\t\t\t}\n\n\t\t\t$main .= '<h2>Add Phoromatic Server Info Via SSH</h2>\n\t\t\t<p>If your Phoromatic client systems are SSH-enabled, you can specify their SSH connection information below. In doing so, the Phoromatic Server will do a one-time connection to it immediately to pre-seed the system with the Phoromatic Server account information for this account. This should allow the client systems to then find the server automatically next time the phoronix-test-suite is run. This command assumes the Phoronix Test Suite is already pre-installed on the client system in your desired configuration.</p>';\n\n\t\t\tif(function_exists('ssh2_connect'))\n\t\t\t{\n\t\t\t\t$main .= '<h3>Phoromatic Client SSH Information:</h3>';\n\t\t\t\t$main .= '<form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"ssh_connect\" method=\"post\">' . write_token_in_form() . '\n\t\t\t\t<p><strong>IP Address:</strong> <input type=\"text\" name=\"ip\" /></p>\n\t\t\t\t<p><strong>SSH Port:</strong> <input type=\"text\" name=\"port\" value=\"22\" /></p>\n\t\t\t\t<p><strong>Username:</strong> <input type=\"text\" name=\"username\" /></p>\n\t\t\t\t<p><strong>Password:</strong> <input type=\"password\" name=\"password\" /></p>\n\t\t\t\t<p><input name=\"submit\" value=\"Seed Phoromatic Server Account Information\" type=\"submit\" /></p>\n\t\t\t\t</form>';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$main .= '<h3>PHP SSH2 Must Be Installed For This Feature</h3>';\n\t\t\t}\n\t\t\t$main .= '<hr />';\n\t\t\t$main .= '<h2>Add Phoromatic Server Info Via IP/MAC</h2>\n\t\t\t<p>If deploying a Phoromatic Server within an organization, you can attempt for automatic configuration of Phoromatic clients if you know the system\\'s IP or MAC addresses. When specifying either of these fields, if a Phoromatic client attempts to connect to this Phoromatic system without being associated to an account, it will be claimed by this account as long as no other Phoromatic accounts are attempting to claim the IP/MAC. This method can be particularly useful if running the Phoromatic client as a systemd/Upstart service where it will continually poll every 90 seconds auto-detected Phoromatic Servers on the LAN via zero-conf networking. For this feature to work, the zero-conf networking (Avahi) support must be enabled and working.</p>';\n\t\t\t$main .= '<form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"auto_associate\" method=\"post\">' . write_token_in_form() . '\n\t\t\t<p><strong>IP Address Claim:</strong> <input type=\"text\" name=\"ip_claim\" /></p>\n\t\t\t<p><strong>MAC Address Claim:</strong> <input type=\"text\" name=\"mac_claim\" /></p>\n\t\t\t<p><input name=\"ping\" value=\"Ping Test\" type=\"submit\" /> &nbsp; <input name=\"submit\" value=\"Submit Claim\" type=\"submit\" /></p>\n\t\t\t</form>';\n\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_system_association_claims WHERE AccountID = :account_id ORDER BY IPAddress ASC');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$result = $stmt->execute();\n\t\t\t$claims = array();\n\t\t\t$main .= '<p style=\"max-height: 500px; overflow-y: auto; \">';\n\t\t\twhile($row = $result->fetchArray())\n\t\t\t{\n\t\t\t\t$ip = $row['IPAddress'] != null ? $row['IPAddress'] : '<em>' . pts_network::mac_to_ip($row['NetworkMAC']) . '</em>';\n\n\t\t\t\t$main .= $ip . ' ' . $row['NetworkMAC'] . '<br />';\n\t\t\t\tarray_push($claims, $row['IPAddress'] . ',' . $row['NetworkMAC']);\n\t\t\t}\n\t\t\t$main .= '</p>';\n\n\t\t\tif(!empty($claims))\n\t\t\t{\n\t\t\t\t$main .= '<hr /><h2>Remove Claim</h2><p>Removing a claimed IP / MAC address.</p>';\n\t\t\t\t$main .= '<p><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"remove_claim\" method=\"post\"><select name=\"remove_claim\" id=\"remove_claim\">' . write_token_in_form();\n\n\t\t\t\tforeach($claims as $claim)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<option value=\"' . $claim . '\">' . str_replace(',', ' ', $claim) . '</option>';\n\t\t\t\t}\n\t\t\t\t$main .= '</select> <input name=\"submit\" value=\"Remove Claim\" type=\"submit\" /></form></p>';\n\t\t\t}\n\n\t\t\t$main .= '<hr />';\n\t\t}\n\n\t\t$right = null;\n\t\techo phoromatic_webui_main($main, phoromatic_webui_right_panel_logged_in($right));\n\t\techo phoromatic_webui_footer();\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2008 - 2022, Phoronix Media\n\tCopyright (C) 2008 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nclass phoromatic_systems implements pts_webui_interface\n{\n\tpublic static function page_title()\n\t{\n\t\treturn 'Systems';\n\t}\n\tpublic static function page_header()\n\t{\n\t\treturn null;\n\t}\n\tpublic static function preload($PAGE)\n\t{\n\t\treturn true;\n\t}\n\tpublic static function render_page_process($PATH)\n\t{\n\t\techo phoromatic_webui_header_logged_in();\n\t\t$main = null;\n\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_POST['system_title']) && !empty($_POST['system_title']) && isset($_POST['system_description']) && isset($_POST['system_state']))\n\t\t{\n\t\t\tphoromatic_quit_if_invalid_input_found(array('system_title', 'system_description', 'system_state'));\n\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET Title = :title, Description = :description, State = :state, CurrentTask = \\'Awaiting Task\\', BlockPowerOffs = :block_power_offs WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$stmt->bindValue(':title', pts_strings::simple($_POST['system_title']));\n\t\t\t$stmt->bindValue(':description', pts_strings::sanitize($_POST['system_description']));\n\t\t\t$stmt->bindValue(':state', $_POST['system_state']);\n\t\t\t$stmt->bindValue(':block_power_offs', $_POST['block_power_offs']);\n\t\t\t$stmt->execute();\n\t\t}\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_POST['maintenance_mode']) && verify_submission_token())\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET MaintenanceMode = :maintenance_mode WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$stmt->bindValue(':maintenance_mode', $_POST['maintenance_mode']);\n\t\t\t$stmt->execute();\n\t\t}\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_GET['clear_system_warnings']))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_system_client_errors WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$stmt->execute();\n\t\t}\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_POST['tick_thread_reboot']) && verify_submission_token())\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET TickThreadEvent = :event WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$stmt->bindValue(':event', time() . ':reboot');\n\t\t\t$stmt->execute();\n\t\t}\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_POST['tick_thread_halt']) && verify_submission_token())\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET TickThreadEvent = :event WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$stmt->bindValue(':event', time() . ':halt-testing');\n\t\t\t$stmt->execute();\n\t\t}\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_GET['really_delete_system']))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_systems WHERE AccountID = :account_id AND SystemID = :system_id LIMIT 1');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$stmt->execute();\n\t\t}\n\t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_POST['system_var_names'])&& isset($_POST['system_var_values']))\n\t\t{\n\t\t\tphoromatic_quit_if_invalid_input_found(array('system_var_names', 'system_var_values'));\n\t\t\t$vars = array();\n\t\t\tforeach($_POST['system_var_names'] as $i => $name)\n\t\t\t{\n\t\t\t\tif(isset($_POST['system_var_values'][$i]))\n\t\t\t\t{\n\t\t\t\t\t$name = pts_strings::keep_in_string(strtoupper($name), pts_strings::CHAR_LETTER | pts_strings::CHAR_NUMERIC | pts_strings::CHAR_UNDERSCORE);\n\t\t\t\t\t$val = pts_strings::keep_in_string($_POST['system_var_values'][$i], pts_strings::CHAR_LETTER | pts_strings::CHAR_NUMERIC | pts_strings::CHAR_DASH | pts_strings::CHAR_UNDERSCORE | pts_strings::CHAR_COMMA | pts_strings::CHAR_SLASH | pts_strings::CHAR_SPACE | pts_strings::CHAR_DECIMAL | pts_strings::CHAR_PLUS | pts_strings::CHAR_EQUAL);\n\n\t\t\t\t\tif($name != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t$vars[$name] = $val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$var_string = null;\n\t\t\tforeach($vars as $name => $val)\n\t\t\t{\n\t\t\t\t$var_string .= $name . '=' . $val . ';';\n\t\t\t}\n\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET SystemVariables = :system_variables WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$stmt->bindValue(':system_variables', $var_string);\n\t\t\t$stmt->execute();\n\t\t}\n\n\t\tif(!empty($PATH[0]))\n\t\t{\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_systems WHERE AccountID = :account_id AND SystemID = :system_id ORDER BY LastCommunication DESC');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t$result = $stmt->execute();\n\n\t\t\tif(!empty($result))\n\t\t\t{\n\t\t\t\t$row = $result->fetchArray();\n\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER && isset($PATH[1]) && $PATH[1] == 'edit')\n\t\t\t\t{\n\t\t\t\t\t$main = '<h1>' . $row['Title'] . '</h1>';\n\t\t\t\t\t$main .= '<form name=\"system_form\" id=\"system_form\" action=\"?systems/' . $PATH[0] . '\" method=\"post\" onsubmit=\"return phoromatic_system_edit(this);\">\n\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">System Title:</div> <input type=\"text\" style=\"width: 400px;\" name=\"system_title\" value=\"' . $row['Title'] . '\" /></p>\n\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">System Description:</div> <textarea style=\"width: 400px;\" name=\"system_description\">' . $row['Description'] . '</textarea></p>\n\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">System State:</div><select name=\"system_state\" style=\"width: 200px;\"><option value=\"-1\">Disabled</option><option value=\"1\" selected=\"selected\">Enabled</option></select></p>\n\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">Allow Phoromatic To Power Off System When Testing Complete:</div><select name=\"block_power_offs\" style=\"width: 200px;\"><option value=\"0\">Permitted</option><option value=\"1\">Block Power-Off Signaling For This System</option></select> <sup>Assuming the power-off setting is enabled from the account settings page.</sup></p>\n\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">&nbsp;</div> <input type=\"submit\" value=\"Submit\" /></p></form>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$main = '<h1>' . $row['Title'] . '</h1><p><em>' . ($row['Description'] != null ? $row['Description'] : 'No system description.') . '</em></p>';\n\n\t\t\t\t\tif(phoromatic_server::system_check_if_down($_SESSION['AccountID'], $row['SystemID'], $row['LastCommunication'], $row['CurrentTask']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<h3 style=\"text-align: center; color: red;\">This system appears to be offline or inactive and there are pending tests scheduled to be run on this system that have yet to be completed. This system has not communicated with the Phoromatic Server in ' . pts_strings::format_time((time() - strtotime($row['LastCommunication'])), 'SECONDS', true, 60) . '.</h3>';\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<p><a href=\"?systems/' . $PATH[0] . '/edit\">Edit Task & Enable/Disable System</a></p>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tswitch($row['State'])\n\t\t\t\t{\n\t\t\t\t\tcase -1:\n\t\t\t\t\t\t$state = 'Disabled';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\t$state = 'Connected; Awaiting Approval';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\t$state = 'Active';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t$state = 'Unknown';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t$main .= '<hr />';\n\t\t\t\t$status_extra = null;\n\t\t\t\tif(!empty($row['CurrentProcessSchedule']))\n\t\t\t\t{\n\t\t\t\t\t$status_extra = ' - <a href=\"/?schedules/' . $row['CurrentProcessSchedule'] . '\">' . phoromatic_server::schedule_id_to_name($row['CurrentProcessSchedule']) . '</a>';\n\t\t\t\t}\n\t\t\t\telse if(!empty($row['CurrentProcessTicket']))\n\t\t\t\t{\n\t\t\t\t\t$status_extra = ' - <a href=\"/?benchmark/' . $row['CurrentProcessTicket'] . '\">' . phoromatic_server::ticket_id_to_name($row['CurrentProcessTicket']) . '</a>';\n\t\t\t\t}\n\t\t\t\t$info_table = array('Status:' => $row['CurrentTask'] . $status_extra, 'Last Communication:' => phoromatic_server::user_friendly_timedate($row['LastCommunication']), 'Estimated Time Left For Task: ' => phoromatic_server::estimated_time_remaining_string($row['EstimatedTimeForTask'], $row['LastCommunication']), 'State:' => $state, 'Phoronix Test Suite Client:' => $row['ClientVersion'], 'Initial Creation:' => phoromatic_server::user_friendly_timedate($row['CreatedOn']), 'System ID:' => $row['SystemID'], 'Last IP:' => $row['LastIP'], 'MAC Address:' => $row['NetworkMAC'], 'Wake-On-LAN Information:' => (empty($row['NetworkWakeOnLAN']) ? 'N/A' : $row['NetworkWakeOnLAN']), 'Power-Off Sequence Permitted: ' => ($row['BlockPowerOffs'] == 1 ? 'Blocked' : 'Permitted'));\n\t\t\t\t$main .= '<h2>System State</h2>' . pts_webui::r2d_array_to_table($info_table, 'auto');\n\n\t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t\t{\n\t\t\t\t\tif($row['MaintenanceMode'] == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$mm_str = 'Disable Maintenance Mode';\n\t\t\t\t\t\t$mm_val = 0;\n\t\t\t\t\t\t$mm_onclick = 'return true;';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$mm_str = 'Enter Maintenance Mode';\n\t\t\t\t\t\t$mm_val = 1;\n\t\t\t\t\t\t$mm_onclick = 'return confirm(\\'Enter maintenance mode now?\\');';\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '<p><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"update_groups\" method=\"post\">' . write_token_in_form() . '<input type=\"hidden\" name=\"maintenance_mode\" value=\"' . $mm_val . '\" /><input type=\"submit\" value=\"' . $mm_str . '\" onclick=\"' . $mm_onclick . '\" style=\"float: left; margin: 0 20px 5px 0;\" /></form> Putting the system into maintenance mode will power up the system (if supported and applicable) and cause the Phoronix Test Suite Phoromatic client to idle and block all testing until the mode has been disabled. If a test is already running on the system, the maintenance mode will not be entered until after the testing has completed. The maintenance mode can be used if wishing to update the system software or carry out other tasks without interfering with the Phoromatic client process. Once disabled, the Phoronix Test Suite will continue to function as normal.</p>';\n\n\t\t\t\t\tif($row['CoreVersion'] >= 5730)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<p><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"update_groups\" method=\"post\">' . write_token_in_form() . '<input type=\"hidden\" name=\"tick_thread_reboot\" value=\"1\" /><input type=\"submit\" value=\"Reboot System\" style=\"float: left; margin: 0 20px 5px 0;\" /></form> If the system is currently powered up and connected to the Phoromatic Server, this will send a message to the system to issue a reboot -- in case the system is hung on a test or you wish to otherwise manually reboot the server.</p>';\n\n\t\t\t\t\t\t$main .= '<p><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"update_groups\" method=\"post\">' . write_token_in_form() . '<input type=\"hidden\" name=\"tick_thread_halt\" value=\"1\" /><input type=\"submit\" value=\"Halt Testing\" style=\"float: left; margin: 0 20px 5px 0;\" /></form> If the system is currently powered up and running a test/benchmark via the Phoromatic Server, this will tell the system to halt the testing prematurely as soon as the currently-active test has finished. The results successfully ran will then be uploaded to the Phoromatic Server.</p>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$main .= '<hr /><h2>System Variables</h2><p>System variables allow for providing per-system information in an easy-to-use manner for other parts of the Phoromatic system. Initially these named variables can be used for the results identifier when <a href=\"/?benchmark\">creating a benchmark ticket</a> and in the future the system variables may be used elsewhere. Examples of system variables could include providing a <em>.SERIAL</em> variable to acknowledge the system\\'s serial number that may not be presented elsewhere by the Phoronix Test Suite, <em>.ADMIN</em> for the system\\'s local administrator, etc. Variable names can only be alpha-numeric strings while their values are also alpha-numeric strings but with spaces allowed. System variables are always prefixed by a period. These system variables are also automatically transferred to the Phoromatic clients and set as environment variables prior to running any scheduled tests/process via Phoromatic.</p>';\n\n\t\t\t\t$system_variables = $row['SystemVariables'] != null ? explode(';', $row['SystemVariables']) : array();\n\n\t\t\t\t$main .= '<form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"update_system_variables\" method=\"post\">';\n\t\t\t\t$main .= '<table width=\"80%\"><tr><th>Variable Name</th><th>Value</th></tr>';\n\t\t\t\t$i = 0;\n\t\t\t\tforeach($system_variables as $i => $v_string)\n\t\t\t\t{\n\t\t\t\t\t$var = explode('=', $v_string);\n\t\t\t\t\tif(count($var) == 2)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<tr id=\"system_var_' . $i . '\">';\n\t\t\t\t\t\t$main .= '<td><span style=\"font-weight: 800; font-size: 16px;\">.</span><input name=\"system_var_names[]\" value=\"' . $var[0]. '\" readonly /></td>';\n\t\t\t\t\t\t$main .= '<td><input name=\"system_var_values[]\" value=\"' . $var[1]. '\" /></td>';\n\t\t\t\t\t\t$main .= '</tr>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$main .= '<tr id=\"system_var_' . ($i + 1) . '\">';\n\t\t\t\t$main .= '<td><span style=\"font-weight: 800; font-size: 16px;\">.</span><input name=\"system_var_names[]\" /></td>';\n\t\t\t\t$main .= '<td><input name=\"system_var_values[]\" /></td>';\n\t\t\t\t$main .= '</tr>';\n\t\t\t\t$main .= '</table>';\n\t\t\t\t$main .= '<p><input name=\"submit\" value=\"Update System Variables\" type=\"submit\" /></p></form>';\n\n\t\t\t\t$main .= '<hr /><h2>System Components</h2><div style=\"float: left; width: 50%;\">';\n\t\t\t\t$components = pts_result_file_analyzer::system_component_string_to_array($row['Hardware']);\n\t\t\t\t$main .= pts_webui::r2d_array_to_table($components) . '</div><div style=\"float: left; width: 50%;\">';\n\t\t\t\t$components = pts_result_file_analyzer::system_component_string_to_array($row['Software']);\n\t\t\t\t$main .= pts_webui::r2d_array_to_table($components) . '</div>';\n\n\t\t\t\tif(!empty($row['SystemProperties']))\n\t\t\t\t{\n\t\t\t\t\t$properties = json_decode($row['SystemProperties'], true);\n\t\t\t\t\t$main .= '<blockquote style=\"max-height: 440px; overflow: scroll; clear: both;\">';\n\t\t\t\t\tforeach($properties as $component => $component_properties)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<strong>' . strtoupper($component) . '</strong><br />';\n\t\t\t\t\t\tforeach($component_properties as $property => $value)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$main .= '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' . $property . ' = ';\n\n\t\t\t\t\t\t\tif(is_array($value))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tforeach($value as $si => $sv)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(is_array($sv))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tforeach($sv as $ssi => $ssv)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t$main .= '<br />' . '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' . $ssi . ' = ' . $ssv;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t$main .= '<br />';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$main .= '<br />' . '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' . $sv . ' = ' . $sv . PHP_EOL;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t//echo PHP_EOL;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$main .= $value . '<br />';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '<br />';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</blockquote>';\n\t\t\t\t}\n\n\t\t\t\t$system_path = phoromatic_server::phoromatic_account_system_path($_SESSION['AccountID'], $row['SystemID']);\n\t\t\t\t$main .= '<hr />';\n\t\t\t\tif(is_file($system_path . 'sensors-pool.json'))\n\t\t\t\t{\n\t\t\t\t\t$sensors = file_get_contents($system_path . 'sensors-pool.json');\n\t\t\t\t\t$sensors = json_decode($sensors, true);\n\n\t\t\t\t\tforeach($sensors as $title => $s)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!isset($s['values']) || count($s['values']) < 5 || max($s['values']) == min($s['values']))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$graph = new pts_sys_graph(array('title' => $title, 'x_scale' => 'm', 'y_scale' => $s['unit'], 'text_size' => 12, 'reverse_x_direction' => false, 'width' => 920, 'height' => 400));\n\t\t\t\t\t\t$graph->render_base();\n\t\t\t\t\t\t$svg_dom = $graph->render_graph_data($s['values']);\n\t\t\t\t\t\tif($svg_dom === false)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$output_type = 'SVG';\n\t\t\t\t\t\t$graph = $svg_dom->output(null, $output_type);\n\t\t\t\t\t\t$main .= '<p align=\"center\">' . substr($graph, strpos($graph, '<svg')) . '</p>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(is_file($system_path . 'sensors.json'))\n\t\t\t\t{\n\t\t\t\t\t$sensor_file = file_get_contents($system_path . 'sensors.json');\n\t\t\t\t\t$sensor_file = json_decode($sensor_file, true);\n\t\t\t\t\tif($sensor_file && isset($sensor_file['sensors']) && !empty($sensor_file['sensors']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$i = 0;\n\t\t\t\t\t\t$col = array(1 => array(), 2 => array(), 3 => array(), 0 => array());\n\t\t\t\t\t\tforeach($sensor_file['sensors'] as $name => $sensor)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tarray_push($col[($i % 4)], '<strong>' . $name . ':</strong> ' . $sensor['value'] . ' ' . $sensor['unit']);\n\t\t\t\t\t\t\t$i++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$main .= '<h2>System Sensors</h2>';\n\t\t\t\t\t\tforeach($col as $sensors)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$main .= '<div style=\"float: left; width: 25%;\">';\n\t\t\t\t\t\t\tforeach($sensors as $sensor)\n\t\t\t\t\t\t\t\t$main .= '<p>' . $sensor . '</p>';\n\t\t\t\t\t\t\t$main .= '</div>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '<p><em><strong>Last Updated:</strong>' . date('d F H:i', filemtime(phoromatic_server::phoromatic_account_system_path($_SESSION['AccountID'], $row['SystemID']) . 'sensors.json')) . ' <strong>System Uptime:</strong> ' . $sensor_file['uptime'] . ' Minutes</em></p>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$log_file = phoromatic_server::phoromatic_account_system_path($_SESSION['AccountID'], $row['SystemID']) . 'phoronix-test-suite.log';\n\t\t\t\tif(is_file($log_file))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Phoronix Test Suite Client Log</h2>';\n\t\t\t\t\t$main .= '<p><textarea style=\"width: 100%; height: 300px;\">' . file_get_contents($log_file)  . '</textarea></p>';\n\t\t\t\t\t$main .= '<p><em><strong>Last Updated:</strong>' . date ('d F H:i', filemtime($log_file)) . '</em></p>';\n\t\t\t\t}\n\n\t\t\t\t$groups = $row['Groups'] != null ? explode('#', $row['Groups']) : array();\n\t\t\t\tforeach($groups as $i => $group)\n\t\t\t\t{\n\t\t\t\t\tif(empty($group))\n\t\t\t\t\t\tunset($groups[$i]);\n\t\t\t\t}\n\t\t\t\t$schedules = phoromatic_server::schedules_that_run_on_system($_SESSION['AccountID'], $row['SystemID']);\n\t\t\t\tif(!empty($groups) || !empty($schedules))\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Schedules</h2>';\n\t\t\t\t\tif(!empty($groups))\n\t\t\t\t\t\t$group_msg = 'This system belongs to the following groups: <strong>' . implode(', ', $groups) . '</strong>.';\n\t\t\t\t\telse\n\t\t\t\t\t\t$group_msg = 'This system does not currently belong to any groups.';\n\n\t\t\t\t\t$main .= '<p>' . $group_msg . ' Manage groups via the <a href=\"?systems\">systems page</a>.</p>';\n\n\t\t\t\t\tif(!empty($schedules))\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\"><ul><li><h1>Schedules Running On This System</h1></li>';\n\t\t\t\t\t\tforeach($schedules as &$row)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n\t\t\t\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . '</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '</ul></div>';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime FROM phoromatic_results WHERE AccountID = :account_id AND SystemID = :system_id ORDER BY UploadTime DESC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t\t$test_result_result = $stmt->execute();\n\t\t\t\t$test_result_row = $test_result_result->fetchArray();\n\t\t\t\t$results = 0;\n\n\t\t\t\tif($test_result_row != false)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Test Results</h2>';\n\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\" style=\"margin: 0 10%;\">';\n\t\t\t\t\t$main .= '<ul><li><h1>Recent Test Results</h1></li>';\n\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\tif($results > 20)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$main .= '<a href=\"?result/' . $test_result_row['PPRID'] . '\"><li>' . $test_result_row['Title'] . '<br /><table><tr><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_server::user_friendly_timedate($test_result_row['UploadTime']) .  '</td></tr></table></li></a>';\n\t\t\t\t\t\t$results++;\n\n\t\t\t\t\t}\n\t\t\t\t\twhile($test_result_row = $test_result_result->fetchArray());\n\t\t\t\t}\n\n\t\t\t\tif($results > 0)\n\t\t\t\t{\n\t\t\t\t\t$main .= '</ul></div>';\n\t\t\t\t}\n\n\n\t\t\t\t// Any System Errors?\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT ErrorMessage, UploadTime, SystemID, TestIdentifier FROM phoromatic_system_client_errors WHERE AccountID = :account_id AND SystemID = :system_id AND UploadTime >= date(\"now\", \"-14 day\") ORDER BY UploadTime DESC LIMIT 300');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\t$row = $result->fetchArray();\n\t\t\t\tif($row != false)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<hr /><h2>Recent System Warnings &amp; Errors</h2>';\n\t\t\t\t\t$main .= '<div style=\"overflow: auto; max-height: 500px;\">';\n\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '[' . $row['UploadTime'] . '] <strong>' . $row['TestIdentifier'] . '</strong>: ' .$row['ErrorMessage'] . '<br />';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t\t$main .= '</div>';\n\t\t\t\t\t$main .= '<p align=\"center\"><a href=\"?systems/' . $PATH[0] . '/&clear_system_warnings\">Clear System Warnings/Errors</a></p>';\n\t\t\t\t}\n\n\t\t\t\t$test_install_json = phoromatic_server::phoromatic_account_system_path($_SESSION['AccountID'], $PATH[0]) . 'test-installations.json';\n\t\t\t\tif(is_file($test_install_json))\n\t\t\t\t{\n\t\t\t\t\t$test_install_json = json_decode(file_get_contents($test_install_json), true);\n\t\t\t\t\tif(!empty($test_install_json))\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<hr /><h2>Test Profile Installations</h2>';\n\t\t\t\t\t\tforeach($test_install_json as $test_profile => $ti_data)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$test_installation = new pts_installed_test($ti_data);\n\t\t\t\t\t\t\t$status = $test_installation->get_install_status();\n\t\t\t\t\t\t\tif($status == 'INSTALLED')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$status = '<span style=\"color: green;\">' . $status . '</span> ' . ($test_installation->get_run_count() > 0 ? '<strong>Times Run:</strong> ' . $test_installation->get_run_count() : '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if($status == 'INSTALL_FAILED')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$status = '<span style=\"color: red; font-weight: bold;\">INSTALL FAILED</span>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$error_output = '';\n\t\t\t\t\t\t\t$runtime_errors = $test_installation->get_runtime_errors();\n\t\t\t\t\t\t\t$install_errors = $test_installation->get_install_errors();\n\t\t\t\t\t\t\tif(!empty($runtime_errors))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tforeach($runtime_errors as $e)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$error_output .= '<br />' . trim((empty($e['description']) ? '' : '<em>' . $e['description'] . '</em> - ') . 'Last Attempted: ' . $e['date_time']);\n\t\t\t\t\t\t\t\t\tforeach($e['errors'] as $error)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$error_output .= '<br /> &nbsp; &nbsp; <span style=\"color: red; font-weight: bold;\">    ' . $error . '</span>';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!empty($install_errors))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tforeach($install_errors as $install_error)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$error_output .= '<br /><span style=\"color: red; font-weight: bold;\">    ' . $install_error . '</span>';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$main .= '<p><strong>' .  $test_profile . '</strong> ' .  $status . ' (Install Date: ' . $test_installation->get_install_date() . ')' . $error_output . '</p>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif($main == null)\n\t\t{\n\t\t\tif(!PHOROMATIC_USER_IS_VIEWER && isset($_POST['new_group']) && !empty($_POST['new_group']))\n\t\t\t{\n\t\t\t\t$group = trim($_POST['new_group']);\n\n\t\t\t\tif($group)\n\t\t\t\t{\n\t\t\t\t\tphoromatic_quit_if_invalid_input_found(array('new_group'));\n\t\t\t\t\t$group = pts_strings::simple($group);\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_groups (AccountID, GroupName) VALUES (:account_id, :group_name)');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$stmt->bindValue(':group_name', $group);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\tphoromatic_add_activity_stream_event('groups', $group, 'added');\n\n\t\t\t\t\tif(!empty($_POST['systems_for_group']) && is_array($_POST['systems_for_group']))\n\t\t\t\t\t{\n\t\t\t\t\t\tforeach($_POST['systems_for_group'] as $sid)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Find current groups\n\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Groups FROM phoromatic_systems WHERE AccountID = :account_id AND SystemID = :system_id ORDER BY LastCommunication DESC');\n\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t$stmt->bindValue(':system_id', $sid);\n\t\t\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t\t\t$row = $result->fetchArray();\n\t\t\t\t\t\t\t$existing_groups = $row != false ? $row['Groups'] : null;\n\n\t\t\t\t\t\t\t// Append new Group\n\t\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET Groups = :new_group WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t$stmt->bindValue(':system_id', $sid);\n\t\t\t\t\t\t\t$stmt->bindValue(':new_group', $existing_groups . '#' . $group . '#');\n\t\t\t\t\t\t\t$stmt->execute();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(!PHOROMATIC_USER_IS_VIEWER && isset($_POST['system_group_update']))\n\t\t\t{\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT SystemID FROM phoromatic_systems WHERE AccountID = :account_id');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\tphoromatic_add_activity_stream_event('groups', null, 'modified');\n\n\t\t\t\twhile($row = $result->fetchArray())\n\t\t\t\t{\n\t\t\t\t\tif(isset($_POST['groups_' . $row['SystemID']]))\n\t\t\t\t\t{\n\t\t\t\t\t\t$group_string = null;\n\t\t\t\t\t\tforeach($_POST['groups_' . $row['SystemID']] as $group)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif($group != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$group_string .= '#' . $group . '#';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$stmt1 = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET Groups = :new_groups WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t\t\t\t\t$stmt1->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t\t$stmt1->bindValue(':system_id', $row['SystemID']);\n\t\t\t\t\t\t\t$stmt1->bindValue(':new_groups', $group_string);\n\t\t\t\t\t\t\t$stmt1->execute();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(!PHOROMATIC_USER_IS_VIEWER && isset($_POST['remove_group']))\n\t\t\t{\n\t\t\t\t$remove_group = pts_strings::sanitize($_POST['remove_group']);\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_groups WHERE AccountID = :account_id AND GroupName = :group_name');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':group_name', $remove_group);\n\t\t\t\t$stmt->execute();\n\t\t\t\tphoromatic_add_activity_stream_event('groups', $group, 'removed');\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT SystemID, Groups FROM phoromatic_systems WHERE AccountID = :account_id AND Groups LIKE \\'%#' . $remove_group . '#%\\'');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\twhile($row = $result->fetchArray())\n\t\t\t\t{\n\t\t\t\t\t$revised_groups = str_replace('#' . $remove_group . '#', '', $row['Groups']);\n\n\t\t\t\t\t$stmt1 = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET Groups = :new_groups WHERE AccountID = :account_id AND SystemID = :system_id');\n\t\t\t\t\t$stmt1->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$stmt1->bindValue(':system_id', $row['SystemID']);\n\t\t\t\t\t$stmt1->bindValue(':new_groups', $revised_groups);\n\t\t\t\t\t$stmt1->execute();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(!PHOROMATIC_USER_IS_VIEWER && isset($_POST['remove_inactive_systems']) && is_numeric($_POST['remove_inactive_systems']) && $_POST['remove_inactive_systems'] > 1)\n\t\t\t{\n\t\t\t\t// $_POST['remove_inactive_systems'] is number of days system is without activity before removing\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET State = :state WHERE AccountID = :account_id AND (julianday() - julianday(LastCommunication)) > :inactive_days_before_removal');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':state', -1);\n\t\t\t\t$stmt->bindValue(':inactive_days_before_removal', pts_strings::sanitize($_POST['remove_inactive_systems']));\n\t\t\t\t$stmt->execute();\n\t\t\t}\n\n\t\t\t$main = '<h1>Test Systems</h1>';\n\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t{\n\t\t\t\t$main .= phoromatic_systems_needing_attention();\n\t\t\t\t$main .= '<h2>Add A System</h2>\n\t\t\t\t<p>To connect a <a href=\"http://www.phoronix-test-suite.com/\">Phoronix Test Suite</a> test system to this account for remotely managing and/or carrying out routine automated benchmarking, follow these simple and quick steps:</p>\n\t\t\t\t<p>From a system with Phoronix Test Suite installed, run <strong>phoronix-test-suite phoromatic.connect ' . phoromatic_web_socket_server_addr() . '</strong>. (The test system must be able to access this server\\'s correct IP address / domain name.)</p><p>When you have run the command from the test system, you will need to log into this page on Phoromatic server again where you can approve the system and configure the system settings so you can begin using it as part of this Phoromatic account.</p><p>Repeat the two steps for as many systems as you would like. When you are all done -- if you haven\\'t done so already, you can start creating test schedules, groups, and other Phoromatic events.</p>\n\t\t\t\t<p>Those having to connect many Phoronix Test Suite Phoromatic clients can also attempt <a href=\"?system_claim\">adding the server configuration</a> via SSH or an IP/MAC address claim.</p>\n\t\t\t\t<p>The Phoronix Test Suite ships with a <em>phoromatic-client</em> systemd example service file for automatically starting the Phoromatic client process after the initial configuration process is complete.</p>\n\t\t\t\t<p><button onclick=\"javascript:window.location.replace(\\'?system_claim\\');\">Add Via SSH Or IP/MAC Claim</button></p>';\n\n\t\t\t}\n\n\t\t\t$main .= '<hr />\n\t\t\t<h2>Systems</h2>\n\t\t\t<div class=\"pts_phoromatic_info_box_area\">\n\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><h1>Active Systems</h1></li>';\n\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, LocalIP, CurrentTask, LastCommunication, EstimatedTimeForTask, TaskPercentComplete FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0 ORDER BY LastCommunication DESC');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t$row = $result->fetchArray();\n\t\t\t\t\t$active_system_count = 0;\n\n\t\t\t\t\tif($row == false)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Systems Found</li>';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$acti = phoromatic_server::estimated_time_remaining_string($row['EstimatedTimeForTask'], $row['LastCommunication']) . ($row['TaskPercentComplete'] > 0 ? ' [' . $row['TaskPercentComplete'] . '% Complete]' : null);\n\t\t\t\t\t\t\tif(empty($acti))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$next_job_in = phoromatic_server::time_to_next_scheduled_job($_SESSION['AccountID'], $row['SystemID']);\n\t\t\t\t\t\t\t\tif($next_job_in > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif($next_job_in > 600)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$next_job_in = round($next_job_in / 60);\n\t\t\t\t\t\t\t\t\t\t$next_unit = 'hours';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$next_unit = 'minutes';\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t$acti = 'Next job in ' . $next_job_in . ' ' . $next_unit;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$main .= '<a href=\"?systems/' . $row['SystemID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . $row['LocalIP'] . '</td><td><strong>' . $row['CurrentTask'] . '</strong></td><td><strong>' . $acti . '</strong></td><td><strong>Last Communication:</strong> ' . date('j F Y H:i', strtotime($row['LastCommunication'])) . '</td></tr></table></li></a>';\n\t\t\t\t\t\t\t$active_system_count++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t\t}\n\n\n\t\t\t$main .= '</ul>';\n\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, LocalIP, CurrentTask, LastCommunication, EstimatedTimeForTask, TaskPercentComplete FROM phoromatic_systems WHERE AccountID = :account_id AND State < 0 ORDER BY LastCommunication DESC');\n\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t$result = $stmt->execute();\n\t\t\t$row = $result->fetchArray();\n\n\t\t\tif($row != false)\n\t\t\t{\n\t\t\t\t$main .= '<ul>\n\t\t\t\t<li><h1>Inactive Systems</h1></li>';\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\t$main .= '<a href=\"?systems/' . $row['SystemID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . $row['LocalIP'] . '</td><td><strong>' . $row['CurrentTask'] . '</strong></td><td><strong>Deactivated</strong></td><td><strong>Last Communication:</strong> ' . date('j F Y H:i', strtotime($row['LastCommunication'])) . '</td></tr></table></li></a>';\n\t\t\t\t}\n\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t$main .= '</ul>';\n\t\t\t}\n\n\t\t\t$main .= '</div>';\n\n\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t\t{\n\t\t\t\t$main .= '<hr />\n\t\t\t\t<h2>System Groups</h2>\n\t\t\t\t<p>System groups make it very easy to organize multiple test systems for targeting by test schedules. You can always add/remove systems to groups, create new groups, and add systems to multiple groups. After creating a group and adding systems to the group, you can begin targeting tests against a particular group of systems. Systems can always be added/removed from groups later and a system can belong to multiple groups.</p>';\n\n\n\t\t\t\t$main .= '<div style=\"float: left;\"><form name=\"new_group_form\" id=\"new_group_form\" action=\"?systems\" method=\"post\" onsubmit=\"return phoromatic_new_group(this);\">\n\t\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">New Group Name:</div> <input type=\"text\" style=\"width: 300px;\" name=\"new_group\" value=\"\" /></p>\n\t\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">Select System(s) To Add To Group:</div><select name=\"systems_for_group[]\" multiple=\"multiple\" style=\"width: 300px;\">';\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0 ORDER BY Title ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\t$row = $result->fetchArray();\n\n\t\t\t\tif($row != false)\n\t\t\t\t{\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<option value=\"' . $row['SystemID'] . '\">' . $row['Title'] . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t}\n\n\n\t\t\t\t$main .= '</select></p>\n\t\t\t\t<p><div style=\"width: 200px; font-weight: bold; float: left;\">&nbsp;</div> <input type=\"submit\" value=\"Create Group\" /></p></form></div>';\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT GroupName FROM phoromatic_groups WHERE AccountID = :account_id ORDER BY GroupName ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\t$row = $result->fetchArray();\n\n\t\t\t\tif($row != false)\n\t\t\t\t{\n\t\t\t\t\t$main .= '<div style=\"float: left; margin-left: 90px;\"><h3>Current System Groups</h3>';\n\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$stmt_count = phoromatic_server::$db->prepare('SELECT COUNT(SystemID) AS system_count FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0 AND Groups LIKE \\'%#' . $row['GroupName'] . '#%\\'');\n\t\t\t\t\t\t$stmt_count->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t\t$result_count = $stmt_count->execute();\n\t\t\t\t\t\t$row_count = $result_count->fetchArray();\n\t\t\t\t\t\t$row_count['system_count'] = isset($row_count['system_count']) ? $row_count['system_count'] : 0;\n\n\t\t\t\t\t\t$main .= '<div style=\"clear: both;\"><div style=\"width: 200px; float: left; font-weight: bold;\">' . $row['GroupName'] . '</div> ' . $row_count['system_count'] . ' System' . ($row_count['system_count'] != 1 ? 's' : '') . '</div>';\n\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\n\t\t\t\t\t$main .= '</div>';\n\n\t\t\t\t\t$main .= '<hr /><a name=\"group_edit\"></a><h2>System Group Editing</h2><div style=\"text-align: center;\"><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"update_groups\" method=\"post\"><input type=\"hidden\" name=\"system_group_update\"  value=\"1\" />';\n\t\t\t\t\t$main .= '<table style=\"margin: 5px auto; overflow: auto;\">';\n\t\t\t\t\t$main .= '<tr>';\n\t\t\t\t\t$main .= '<th></th>';\n\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT GroupName FROM phoromatic_groups WHERE AccountID = :account_id ORDER BY GroupName ASC');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\t$all_groups = array();\n\t\t\t\t\twhile($row = $result->fetchArray())\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<th>' . $row['GroupName'] . '</th>';\n\t\t\t\t\t\tarray_push($all_groups, $row['GroupName']);\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '</tr>';\n\n\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, Groups FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0 ORDER BY Title ASC');\n\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t\t$result = $stmt->execute();\n\t\t\t\t\twhile($row = $result->fetchArray())\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<tr>';\n\t\t\t\t\t\t$main .= '<th>' . $row['Title'] . '</th>';\n\t\t\t\t\t\t$main .= '<input type=\"hidden\" name=\"groups_' . $row['SystemID'] . '[]\" value=\"\" />';\n\n\t\t\t\t\t\tforeach($all_groups as $group)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$checked = stripos($row['Groups'], '#' . $group . '#') !== false ? 'checked=\"checked\" ' : null;\n\t\t\t\t\t\t\t$main .= '<td><input type=\"checkbox\" name=\"groups_' . $row['SystemID'] . '[]\" value=\"' . $group . '\" ' . $checked . '/></td>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$main .= '</tr>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$main .= '</table><p><input name=\"submit\" value=\"Update Groups\" type=\"submit\" /></p></form></div>';\n\t\t\t\t\t$main .= '<hr /><h2>Remove A Group</h2><p>Removing a group is a permanent action that cannot be undone.</p>';\n\t\t\t\t\t$main .= '<p><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"remove_group\" method=\"post\"><select name=\"remove_group\" id=\"remove_group\">';\n\n\t\t\t\t\tforeach($all_groups as $group)\n\t\t\t\t\t{\n\t\t\t\t\t\t$main .= '<option value=\"' . $group . '\">' . $group . '</option>';\n\t\t\t\t\t}\n\t\t\t\t\t$main .= '</select> <input name=\"submit\" value=\"Remove Group\" type=\"submit\" /></form></p>';\n\t\t\t\t\t$main .= '<hr /><h2>Retire Inactive Systems</h2><p>This option will soft-delete systems that have not communicated with this Phoromatic Server in more than one week (7 days).</p>';\n\t\t\t\t\t$main .= '<p><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"remove_inactive\" method=\"post\"><input type=\"hidden\" name=\"remove_inactive_systems\" value=\"7\" /><input name=\"submit\" value=\"Remove Inactive Systems\" type=\"submit\" /></form></p>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$right = '<ul><li>Active Systems</li>';\n\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID FROM phoromatic_systems WHERE AccountID = :account_id AND State > 0 ORDER BY Title ASC');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\n\t\tif($row == false)\n\t\t{\n\t\t\t$right .= '</ul><p style=\"text-align: left; margin: 6px 10px;\">No Systems Found</p>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\t$right .= '<li><a href=\"?systems/' . $row['SystemID'] . '\">' . $row['Title'] . '</a></li>';\n\t\t\t}\n\t\t\twhile($row = $result->fetchArray());\n\t\t\t$right .= '</ul>';\n\t\t}\n\t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n\t\techo phoromatic_webui_footer();\n\t}\n}\n\n?>\n", "<?php\n\n/*\n\tPhoronix Test Suite\n\tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n\tCopyright (C) 2013 - 2022, Phoronix Media\n\tCopyright (C) 2013 - 2022, Michael Larabel\n\n\tThis program is free software; you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation; either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n*/\n\ndefine('PHOROMATIC_SERVER_WEB_INTERFACE', true);\ndefine('PAGE_LOAD_START_TIME', microtime(true));\n\nfunction phoromatic_quit_if_invalid_input_found($input_keys = null)\n{\n\tif(empty($input_keys))\n\t{\n\t\t// Check them all if not being selective about what keys to check\n\t\t$input_keys = array_keys($_REQUEST);\n\t}\n\t// backup as to sanitization and stripping elsewhere, safeguard namely check for things like < for fields that shouldn't have it\n\t// plus a few simple backups as safeguards for words that really have no legit relevance within Phoromatic...\n\n\tforeach(array('<', 'document.write', '../', 'onerror', 'onload', 'alert(') as $invalid_string)\n\t{\n\t\tforeach($input_keys as $key)\n\t\t{\n\t\t\tif(isset($_REQUEST[$key]) && !empty($_REQUEST[$key]))\n\t\t\t{\n\t\t\t\tforeach(pts_arrays::to_array($_REQUEST[$key]) as $val_to_check)\n\t\t\t\t{\n\t\t\t\t\tif(stripos($val_to_check, $invalid_string) !== false)\n\t\t\t\t\t{\n\t\t\t\t\t\techo '<strong>Exited due to invalid input ( ' . $invalid_string . ') attempted:</strong> ' . htmlspecialchars($val_to_check);\n\t\t\t\t\t\texit;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nfunction phoromatic_init_web_page_setup()\n{\n\tif(session_save_path() == null || !is_writable(session_save_path()))\n\t{\n\t\t// This is needed since on at least EL6 by default there is no session_save_path set\n\t\tif(is_writable('/var/lib/php') && is_dir('/var/lib/php'))\n\t\t{\n\t\t\tsession_save_path('/var/lib/php');\n\t\t}\n\t\telse if(is_writable('/var/lib/php5') && is_dir('/var/lib/php5'))\n\t\t{\n\t\t\tsession_save_path('/var/lib/php5');\n\t\t}\n\t\telse if(is_writable('/tmp'))\n\t\t{\n\t\t\tsession_save_path('/tmp');\n\t\t}\n\t\telse if(is_writable('.'))\n\t\t{\n\t\t\tsession_save_path('.');\n\t\t}\n\t}\n\n\tdefine('PHOROMATIC_SERVER', true);\n\tif(defined('PTS_IS_DEV_BUILD') && PTS_IS_DEV_BUILD)\n\t{\n\t\terror_reporting(E_ALL);\n\t}\n\tsession_start();\n\n\tdefine('PTS_MODE', 'WEB_CLIENT');\n\tdefine('PTS_AUTO_LOAD_OBJECTS', true);\n\tdefine('PHOROMATIC_USER_IS_VIEWER', !isset($_SESSION['AdminLevel']) || $_SESSION['AdminLevel'] >= 10 || $_SESSION['AdminLevel'] < 1 ? true : false);\n\n\tinclude('../../pts-core.php');\n\tpts_core::init();\n}\nfunction phoromatic_webui_header($left_items, $right = null)\n{\n\t$ret = PHP_EOL . '<div id=\"pts_phoromatic_top_header\">\n\t<ul>\n\t<li><a href=\"?\"><img style=\"vertical-align: middle;\" class=\"img_logo_pg\" src=\"images/phoromatic_logo.svg\" /></a>';\n\n\tif(isset($_SESSION['AdminLevel']) &&$_SESSION['AdminLevel'] > 0 && isset($_SESSION['AccountID']) && !empty($_SESSION['AccountID']))\n\t{\n\t\t$ret .= '<ul id=\"pts_phoromatic_info\">';\n\t\t$ret .= '<li><a class=\"ph_date\" href=\"#\">' . date('H:i T - j F') . '</a></li>';\n\t\t$group_name = phoromatic_server::account_id_to_group_name($_SESSION['AccountID']);\n\t\tif($group_name != null)\n\t\t{\n\t\t\t$ret .= '<li><a href=\"#\">' . $group_name . '</a></li>';\n\t\t}\n\t\t$ret .= '</ul>';\n\t}\n\t$ret .= '</li>';\n\n\t//$ret .= '<ul>';\n\tforeach($left_items as $i => $item)\n\t{\n\t\tif(is_array($item))\n\t\t{\n\t\t\t$ret .= '<li>' . $i;\n\n\t\t\tif(!empty($item))\n\t\t\t{\n\t\t\t\t$ret .= '<ul>';\n\t\t\t\tforeach($item as $sub_item)\n\t\t\t\t{\n\t\t\t\t\t$ret .= '<li>' . $sub_item . '</li>';\n\t\t\t\t}\n\t\t\t\t$ret .= '</ul>';\n\t\t\t}\n\t\t\t$ret .= '</li>' . PHP_EOL;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$ret .= '<li>' . $item . '</li>' . PHP_EOL;\n\t\t}\n\t}\n\t$ret .= '<li><div id=\"phoromatic_result_selected_info_box\"></div> <a href=\"#\" onclick=\"javascript:phoromatic_generate_comparison(\\'?result/\\');\"><div id=\"phoromatic_result_compare_info_box\">Compare</div></a> <a href=\"#\" onclick=\"javascript:phoromatic_delete_results(\\'?results/delete/\\'); return false;\"><div id=\"phoromatic_result_delete_box\">Delete</div></a></li>';\n\t$ret .= '</ul>';\n\n\tif($right != null)\n\t{\n\t\t$ret .= '<div id=\"pts_phoromatic_top_header_right\">' . $right .'</div>';\n\t}\n\n\t$ret .=' </div>';\n\n\treturn $ret;\n}\nfunction phoromatic_get_posted_var($name, $default_value = null)\n{\n\tif(isset($_POST[$name]))\n\t{\n\t\tphoromatic_quit_if_invalid_input_found(array($name));\n\t}\n\n\treturn isset($_POST[$name]) ? $_POST[$name] : null;\n}\nfunction phoromatic_webui_main($main, $right = null)\n{\n\treturn '<div id=\"pts_phoromatic_main\">' . ($right != null ? '<div id=\"pts_phoromatic_menu_right\">' . $right . '</div>' : null) . '<div id=\"pts_phoromatic_main_area\">' . $main . '</div><div style=\"clear: both;\"></div></div>';\n}\nfunction phoromatic_webui_box(&$box)\n{\n\treturn '<div id=\"pts_phoromatic_main_box\"><div id=\"pts_phoromatic_main_box_inside\">' . $box . '</div></div>';\n}\nfunction phoromatic_results_for_schedule($schedule_id, $limit_results = false)\n{\n\tswitch($limit_results)\n\t{\n\t\tcase 'TODAY':\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(UploadID) As UploadCount FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id AND UploadTime LIKE :today_date');\n\t\t\t$stmt->bindValue(':today_date', date('Y-m-d') . '%');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(UploadID) As UploadCount FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id');\n\t\t\tbreak;\n\t}\n\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$stmt->bindValue(':schedule_id', $schedule_id);\n\t$test_result_result = $stmt->execute();\n\t$row = $test_result_result->fetchArray();\n\n\treturn empty($row) ? 0 : $row['UploadCount'];\n}\nfunction phoromatic_schedule_activeon_string($active_on, $active_at = null)\n{\n\tif(!empty($active_on))\n\t{\n\t\t$active_days = explode(',', $active_on);\n\t\t$week = array('M', 'T', 'W', 'TH', 'F', 'S', 'SU');\n\t\tforeach($active_days as $i => &$day)\n\t\t{\n\t\t\tif(!isset($week[$day]))\n\t\t\t{\n\t\t\t\tunset($active_days[$i]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$day = $week[$day];\n\t\t\t}\n\t\t}\n\t\treturn implode(' ', $active_days) . (!empty($active_at) ? ' @ ' . str_replace('.', ':', $active_at) : null );\n\t}\n}\nfunction phoromatic_webui_footer()\n{\n\treturn '<div id=\"pts_phoromatic_bottom_footer\">\n\t<div style=\"float: left; padding: 5px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewbox=\"0 0 76 41\" width=\"76\" height=\"41\" preserveAspectRatio=\"xMinYMin meet\">\n  <path d=\"m74 22v9m-5-16v16m-5-28v28m-23-2h12.5c2.485281 0 4.5-2.014719 4.5-4.5s-2.014719-4.5-4.5-4.5h-8c-2.485281 0-4.5-2.014719-4.5-4.5s2.014719-4.5 4.5-4.5h12.5m-21 5h-11m11 13h-2c-4.970563 0-9-4.029437-9-9v-20m-24 40v-20c0-4.970563 4.0294373-9 9-9 4.970563 0 9 4.029437 9 9s-4.029437 9-9 9h-9\" stroke=\"#696969\" stroke-width=\"4\" fill=\"none\" />\n</svg> &nbsp;</div>\n<p style=\"margin: 6px 15px;\"><strong>' . date('H:i T - j F Y') . '</strong>' . (PTS_IS_DEV_BUILD ? ' &nbsp; [' . round(microtime(true) - PAGE_LOAD_START_TIME, 2) . 's Page Load Time]' : null) . '<br />Copyright &copy; 2008 - ' . date('Y') . ' by <a href=\"http://www.phoronix-media.com/\">Phoronix Media</a>. All rights reserved.<br />\nAll trademarks used are properties of their respective owners.<br />' . pts_core::program_title() . ' (PHP ' . PHP_VERSION . ')</p></div> <script type=\"text/javascript\"> phoromatic_checkbox_toggle_result_comparison(\\'\\'); </script>';\n}\nfunction phoromatic_add_activity_stream_event($activity_event, $activity_event_id, $activity_event_type)\n{\n\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_activity_stream (AccountID, ActivityTime, ActivityCreator, ActivityCreatorType, ActivityEvent, ActivityEventID, ActivityEventType) VALUES (:account_id, :activity_time, :activity_creator, :activity_creator_type, :activity_event, :activity_event_id, :activity_event_type)');\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$stmt->bindValue(':activity_time', phoromatic_server::current_time());\n\t$stmt->bindValue(':activity_creator', $_SESSION['UserName']);\n\t$stmt->bindValue(':activity_creator_type', 'USER');\n\t$stmt->bindValue(':activity_event', $activity_event);\n\t$stmt->bindValue(':activity_event_id', $activity_event_id);\n\t$stmt->bindValue(':activity_event_type', $activity_event_type);\n\treturn $stmt->execute();\n}\nfunction phoromatic_tracker_page_relevant()\n{\n\t$stmt = phoromatic_server::$db->prepare('SELECT RunTargetSystems, RunTargetGroups, (SELECT COUNT(*) FROM phoromatic_results WHERE ScheduleID = phoromatic_schedules.ScheduleID) AS UploadedResultCount FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 ORDER BY Title ASC');\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$result = $stmt->execute();\n\t$row = $result->fetchArray();\n\n\tif($row)\n\t{\n\t\tdo\n\t\t{\n\t\t\tif(is_numeric($row['RunTargetSystems']) && $row['UploadedResultCount'] > (($row['RunTargetSystems'] + $row['RunTargetGroups'] + 1) * 7))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\twhile($row = $result->fetchArray());\n\t}\n\n\treturn false;\n}\nfunction phoromatic_webui_header_logged_in()\n{\n\t$html_links = array();\n\tif($_SESSION['AdminLevel'] == -40)\n\t{\n\t\t$pages = array('Admin', 'Admin_Config', 'Admin_Data', 'Logout');\n\t}\n\telse if($_SESSION['AdminLevel'] > 0)\n\t{\n\t\t$sub_main_menu = array();\n\t\t$sub_tests_menu = array();\n\t\t$sub_systems_menu = array();\n\t\t$sub_testing_menu = array();\n\t\t$sub_results_menu = array();\n\n\t\tif(phoromatic_account_system_count() > 0)\n\t\t{\n\t\t\t$sub_systems_menu[] = 'Dashboard';\n\t\t\t$sub_systems_menu[] = 'Maintenance Table';\n\t\t\t$sub_systems_menu[] = 'Component Table';\n\t\t}\n\n\t\t//$sub_main_menu[] = '<a href=\"?tests\">Test Profiles</a>';\n\t\tif(isset($_SESSION['AdminLevel']) && $_SESSION['AdminLevel'] < 4)\n\t\t{\n\t\t\t$sub_main_menu[] = 'Users';\n\t\t}\n\n\t\tarray_push($sub_main_menu, 'Settings', '<a href=\"?account_activity\">Account Activity</a>', 'Logout');\n\t\t$sub_testing_menu[] = '<a href=\"?schedules\">Test Schedules</a>';\n\n\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n\t\t{\n\t\t\tif(phoromatic_server::read_setting('allow_test_profile_creation') == 1)\n\t\t\t{\n\t\t\t\tarray_push($sub_tests_menu, '<a href=\"?create_test\">Create New Test Profile</a>');\n\t\t\t}\n\t\t\tarray_push($sub_tests_menu, '<a href=\"?build_suite\">Build Test Suite</a>');\n\t\t\tarray_push($sub_testing_menu, '<a href=\"?sched\">Create A Schedule</a>', '<a href=\"?benchmark\">Run A Benchmark</a>');\n\t\t}\n\n\t\tif(phoromatic_tracker_page_relevant())\n\t\t{\n\t\t\t$sub_results_menu[] = 'Tracker';\n\t\t}\n\t\t$sub_results_menu[] = '<a href=\"/rss.php?user=' . $_SESSION['UserID'] . '&amp;v=' . sha1($_SESSION['CreatedOn']) . '\">Results Feed <img src=\"images/rss.svg\" width=\"16\" height=\"16\" /></a>';\n\n\t\t$pages = array('Main' => $sub_main_menu, 'Systems' => $sub_systems_menu, 'Tests' => $sub_tests_menu, '<a href=\"/?testing\">Testing</a>' => $sub_testing_menu, 'Results' => $sub_results_menu, '<form action=\"/?search\" method=\"post\" id=\"search\"><input type=\"search\" name=\"search\" id=\"seach_input\" size=\"16\" /> <input type=\"submit\" name=\"sa\" value=\"Search\" /><div class=\"search_expander\"></div></form>');\n\t}\n\n\tforeach($pages as $title => $page)\n\t{\n\t\tif(is_array($page) || empty($page))\n\t\t{\n\t\t\t$menu_row = array();\n\t\t\tforeach($page as $sub_page)\n\t\t\t{\n\t\t\t\t$menu_row[] = menu_item_to_html($sub_page);\n\t\t\t}\n\t\t\t$html_links[menu_item_to_html($title)] = $menu_row;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$html_links[] = menu_item_to_html($page);\n\t\t}\n\t}\n\n\treturn phoromatic_webui_header($html_links, null);\n}\nfunction menu_item_to_html($page)\n{\n\tif(strpos($page, '</') !== false)\n\t\treturn $page;\n\n\t$page_link = strtolower($page);\n\tif(($x = strpos($page_link, '<br />')) !== false)\n\t{\n\t\t$page_link = trim(substr($page_link, $x + 6));\n\t}\n\t$page_link = str_replace(' ', '_', $page_link);\n\n\tif(strtolower($page) == PAGE_REQUEST)\n\t{\n\t\treturn '<a href=\"?' . $page_link . '\"><u>' . str_replace('_', ' ', $page) . '</u></a>';\n\t}\n\telse\n\t{\n\t\treturn '<a href=\"?' . $page_link . '\">' . str_replace('_', ' ', $page) . '</a>';\n\t}\n}\nfunction phoromatic_webui_right_panel_logged_in($add = null)\n{\n\t$right = null;\n\tif($_SESSION['AdminLevel'] == -40)\n\t{\n\t\t$right .= '<h3>Phoromatic Server</h3><hr /><p><strong>' . date('H:i T - j F Y') . '</p>';\n\t}\n\telse if($_SESSION['AdminLevel'] > 0)\n\t{\n\t\t//$right .= '<a href=\"#\" onclick=\"javascript:phoromatic_generate_comparison(\\'?result/\\');\"><div id=\"phoromatic_result_compare_info_box\"></div></a> <a href=\"#\" onclick=\"javascript:phoromatic_delete_results(\\'?results/delete/\\'); return false;\"><div id=\"phoromatic_result_delete_box\">Delete Selected Results</div></a>';\n\t\tif(($bad_systems = phoromatic_server::systems_appearing_down()) != false)\n\t\t{\n\t\t\t$right .= '<ul><li><span class=\"alert\">Systems Needing Attention</span></li>';\n\t\t\tforeach($bad_systems as $system)\n\t\t\t{\n\t\t\t\t$right .= '<li><a href=\"?systems/' . $system . '\">' . phoromatic_server::system_id_to_name($system) . '</a></li>';\n\t\t\t}\n\t\t\t$right .= '</ul><hr />';\n\t\t}\n\n\t\t$right .= $add;\n\n\t\tif($add == null)\n\t\t{\n\t\t\t$recently_active_systems = phoromatic_server::recently_active_systems($_SESSION['AccountID']);\n\t\t\tif(!empty($recently_active_systems))\n\t\t\t{\n\t\t\t\t$right .= '<ul><li>Recently Active Systems</li>';\n\n\t\t\t\tforeach($recently_active_systems as &$row)\n\t\t\t\t{\n\t\t\t\t\t$right .= '<li><a href=\"?systems/' . $row['SystemID'] . '\">' . $row['Title'] . '</a></li>';\n\t\t\t\t}\n\n\t\t\t\t$right .= '</ul><hr />';\n\t\t\t}\n\n\t\t\t$right .= '\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Today\\'s Scheduled Events</li>';\n\n\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, RunAt FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1  AND ActiveOn LIKE :active_on ORDER BY RunAt,Title ASC');\n\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t\t\t$stmt->bindValue(':active_on', '%' . (date('N') - 1) . '%');\n\t\t\t\t$result = $stmt->execute();\n\t\t\t\t$row = $result->fetchArray();\n\n\t\t\t\tif($row == false)\n\t\t\t\t{\n\t\t\t\t\t$right .= '</ul><p style=\"text-align: left; margin: 6px 10px;\">No Events Found</p>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdo\n\t\t\t\t\t{\n\t\t\t\t\t\t$right .= '<li>' . $row['RunAt'] . ' <a href=\"?schedules/' . $row['ScheduleID'] . '\">' . $row['Title'] . '</a></li>';\n\t\t\t\t\t}\n\t\t\t\t\twhile($row = $result->fetchArray());\n\t\t\t\t\t$right .= '</ul>';\n\t\t\t\t}\n\t\t}\n\n\t\t$system_count = phoromatic_account_system_count();\n\t\t$schedule_count = phoromatic_account_schedule_count();\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(UploadID) AS ResultCount FROM phoromatic_results WHERE AccountID = :account_id');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$result_count = $row['ResultCount'];\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(ActivityTime) AS ActivityCount FROM phoromatic_activity_stream WHERE AccountID = :account_id AND ActivityTime LIKE :today_date');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$stmt->bindValue(':today_date', date('Y-m-d') . '%');\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$activity_count = $row['ActivityCount'];\n\n\t\t$group_name = phoromatic_server::account_id_to_group_name($_SESSION['AccountID']);\n\t\tif($group_name != null)\n\t\t{\n\t\t\t$group_name = '<strong>' . $group_name . '</strong><br />';\n\t\t}\n\n\t\t$right .= '<hr /><p><strong>' . date('H:i T - j F Y') . '</strong><br />' . $group_name . '<a href=\"?systems\">' . $system_count . ' System' . ($system_count == 1 ? '' : 's') . '</a><br /><a href=\"?schedules\">' . $schedule_count . ' Schedule' . ($schedule_count == 1 ? '' : 's') . '</a><br /><a href=\"?results\">' . $result_count . ' Result' . ($result_count == 1 ? '' : 's') . '</a>';\n\t\t$right .= ' <a href=\"/rss.php?user=' . $_SESSION['UserID'] . '&amp;v=' . sha1($_SESSION['CreatedOn']) . '\"><img src=\"images/rss.svg\" width=\"16\" height=\"16\" /></a>';\n\t\t$right .= '<br /><a href=\"?account_activity\">' . $activity_count . ' Activity Events Today</a></p>';\n\t}\n\n\treturn $right;\n}\nfunction phoromatic_account_schedule_count()\n{\n\tstatic $schedule_count = 0;\n\n\tif($schedule_count == 0)\n\t{\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(Title) AS ScheduleCount FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$schedule_count = $row['ScheduleCount'];\n\t}\n\treturn $schedule_count;\n}\nfunction phoromatic_account_system_count()\n{\n\tstatic $sys_count = 0;\n\n\tif($sys_count == 0)\n\t{\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT COUNT(Title) AS SystemCount FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$sys_count = $row['SystemCount'];\n\t}\n\treturn $sys_count;\n}\nfunction phoromatic_web_socket_server_ip()\n{\n\t$server_ip = $_SERVER['HTTP_HOST'];\n\tif(($x = strpos($server_ip, ':')) !== false)\n\t{\n\t\t$server_ip = substr($server_ip, 0, $x);\n\t}\n\n\tif($server_ip == 'localhost' || $server_ip == '0.0.0.0')\n\t{\n\t\t$local_ip = phodevi::read_property('network', 'ip');\n\t\tif($local_ip)\n\t\t{\n\t\t\t$server_ip = $local_ip;\n\t\t}\n\t}\n\t// getenv('PTS_WEBSOCKET_PORT')\n\treturn $server_ip . ':' . $_SERVER['SERVER_PORT'];\n}\nfunction phoromatic_web_socket_server_addr()\n{\n\t// getenv('PTS_WEBSOCKET_PORT')\n\treturn phoromatic_web_socket_server_ip() . '/' . $_SESSION['AccountID'];\n}\nfunction phoromatic_error_page($title, $description)\n{\n\techo phoromatic_webui_header(array(''), '');\n\t$box = '<h1>' . $title . '</h1>\n\t\t<h2>' . $description . '</h2>';\n\techo phoromatic_webui_box($box);\n\techo phoromatic_webui_footer();\n}\nfunction phoromatic_systems_needing_attention()\n{\n\t$main = null;\n\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, State, LastIP, LocalIP, LastCommunication FROM phoromatic_systems WHERE AccountID = :account_id AND State = 0 ORDER BY LastCommunication DESC');\n\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t$result = $stmt->execute();\n\tif($row = $result->fetchArray())\n\t{\n\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\"><div style=\"float: left; width: 100%;\"><ul><li><h1>Systems Needing Attention</h1></li><li class=\"light\" style=\"font-weight: normal;\">The following systems have attempted to sync with this Phoromatic account but have not been validated. When clicking on them you are able to approve or disable them from your account along with editing the system information.</li>';\n\n\t\tdo\n\t\t{\n\t\t\t$ip = $row['LocalIP'];\n\t\t\tif($row['LastIP'] != $row['LocalIP'])\n\t\t\t{\n\t\t\t\t$ip .= ' / ' . $row['LastIP'];\n\t\t\t}\n\n\t\t\t$main .= '<a href=\"?systems/' . $row['SystemID'] . '/edit\"><li>' . $row['Title'] . '<br /><em><strong>IP:</strong> ' . $ip . ' <strong>Last Communication:</strong> ' . $row['LastCommunication'] . '</em></li></a>';\n\t\t}\n\t\twhile($row = $result->fetchArray());\n\n\t\t$main .= '</ul></div></div>';\n\t}\n\n\treturn $main;\n}\nfunction phoromatic_oldest_result_for_schedule($schedule_id)\n{\n\tstatic $old_time;\n\n\tif(!isset($old_time[$schedule_id]))\n\t{\n\t\t$stmt = phoromatic_server::$db->prepare('SELECT UploadTime FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY UploadTime ASC LIMIT 1');\n\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n\t\t$stmt->bindValue(':schedule_id', $schedule_id);\n\t\t$result = $stmt->execute();\n\t\t$row = $result->fetchArray();\n\t\t$old_time[$schedule_id] = $row['UploadTime'];\n\t}\n\n\treturn $old_time[$schedule_id];\n}\nfunction write_token_in_form()\n{\n\treturn '<input type=\"hidden\" name=\"token_submit\" value=\"' . $_SESSION['Token'] . '\" />';\n}\nfunction append_token_to_url($prefix = '/')\n{\n\treturn $prefix . '&token_submit=' . $_SESSION['Token'];\n}\nfunction verify_submission_token()\n{\n\treturn isset($_REQUEST['token_submit']) && $_REQUEST['token_submit'] == $_SESSION['Token'];\n}\nfunction create_new_phoromatic_account($register_username, $register_password, $register_password_confirm, $register_email, $seed_accountid = null)\n{\n\t// REGISTER NEW USER\n\tif(strlen($register_username) < 4 || strpos($register_username, ' ') !== false)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied username is at least four characters long and contains no spaces.');\n\t\treturn false;\n\t}\n\tif(in_array(strtolower($register_username), array('admin', 'administrator', 'rootadmin')))\n\t{\n\t\tphoromatic_error_page('Oops!', $register_username . ' is a reserved and common username that may be used for other purposes, please make a different selection.');\n\t\treturn false;\n\t}\n\tif(strlen($register_password) < 6)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied password is at least six characters long.');\n\t\treturn false;\n\t}\n\tif($register_password != $register_password_confirm)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please go back and ensure the supplied password matches the password confirmation.');\n\t\treturn false;\n\t}\n\tif($register_email == null || filter_var($register_email, FILTER_VALIDATE_EMAIL) == false)\n\t{\n\t\tphoromatic_error_page('Oops!', 'Please enter a valid email address.');\n\t\treturn false;\n\t}\n\n\t$valid_user_name_chars = '1234567890-_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\tfor($i = 0; $i < strlen($register_username); $i++)\n\t{\n\t\tif(strpos($valid_user_name_chars, substr($register_username, $i, 1)) === false)\n\t\t{\n\t\t\tphoromatic_error_page('Oops!', 'Please go back and ensure a valid user-name. The character <em>' . substr($register_username, $i, 1) . '</em> is not allowed.');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t$matching_users = phoromatic_server::$db->querySingle('SELECT UserName FROM phoromatic_users WHERE UserName = \\'' . SQLite3::escapeString($register_username) . '\\'');\n\tif(!empty($matching_users))\n\t{\n\t\tphoromatic_error_page('Oops!', 'The user-name is already taken.');\n\t\treturn false;\n\t}\n\n\tif(phoromatic_server::read_setting('add_new_users_to_account') != null)\n\t{\n\t\t$account_id = phoromatic_server::read_setting('add_new_users_to_account');\n\t\t$is_new_account = false;\n\t}\n\telse\n\t{\n\t\t$id_tries = 0;\n\t\tdo\n\t\t{\n\t\t\tif($id_tries == 0 && $seed_accountid != null && isset($seed_accountid[5]))\n\t\t\t{\n\t\t\t\t$account_id = strtoupper(substr($seed_accountid, 0, 6));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$account_id = pts_strings::random_characters(6, true);\n\t\t\t}\n\t\t\t$matching_accounts = phoromatic_server::$db->querySingle('SELECT AccountID FROM phoromatic_accounts WHERE AccountID = \\'' . $account_id . '\\'');\n\t\t\t$id_tries++;\n\t\t}\n\t\twhile(!empty($matching_accounts));\n\t\t$is_new_account = true;\n\t}\n\n\t$user_id = pts_strings::random_characters(4, true);\n\n\tif($is_new_account)\n\t{\n\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' created a new account: ' . $user_id . ' - ' . $account_id);\n\t\t$account_salt = pts_strings::random_characters(12, true);\n\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_accounts (AccountID, ValidateID, CreatedOn, Salt) VALUES (:account_id, :validate_id, :current_time, :salt)');\n\t\t$stmt->bindValue(':account_id', $account_id);\n\t\t$stmt->bindValue(':validate_id', pts_strings::random_characters(4, true));\n\t\t$stmt->bindValue(':salt', $account_salt);\n\t\t$stmt->bindValue(':current_time', phoromatic_server::current_time());\n\t\t$result = $stmt->execute();\n\n\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_account_settings (AccountID) VALUES (:account_id)');\n\t\t$stmt->bindValue(':account_id', $account_id);\n\t\t$result = $stmt->execute();\n\n\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_user_settings (UserID, AccountID) VALUES (:user_id, :account_id)');\n\t\t$stmt->bindValue(':user_id', $user_id);\n\t\t$stmt->bindValue(':account_id', $account_id);\n\t\t$result = $stmt->execute();\n\t}\n\telse\n\t{\n\t\tpts_logger::add_to_log($_SERVER['REMOTE_ADDR'] . ' being added to an account: ' . $user_id . ' - ' . $account_id);\n\t\t$account_salt = phoromatic_server::$db->querySingle('SELECT Salt FROM phoromatic_accounts WHERE AccountID = \\'' . $account_id . '\\'');\n\t}\n\n\t$salted_password = hash('sha256', $account_salt . $register_password);\n\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_users (UserID, AccountID, UserName, Email, Password, CreatedOn, LastIP, AdminLevel) VALUES (:user_id, :account_id, :user_name, :email, :password, :current_time, :last_ip, :admin_level)');\n\t$stmt->bindValue(':user_id', $user_id);\n\t$stmt->bindValue(':account_id', $account_id);\n\t$stmt->bindValue(':user_name', $register_username);\n\t$stmt->bindValue(':email', $register_email);\n\t$stmt->bindValue(':password', $salted_password);\n\t$stmt->bindValue(':last_ip', $_SERVER['REMOTE_ADDR']);\n\t$stmt->bindValue(':current_time', phoromatic_server::current_time());\n\t$stmt->bindValue(':admin_level', ($is_new_account ? 1 : 10));\n\t$result = $stmt->execute();\n\n\tpts_file_io::mkdir(phoromatic_server::phoromatic_account_path($account_id));\n\tphoromatic_server::send_email($register_email, 'Phoromatic Account Registration', (($e = phoromatic_server::read_setting('admin_support_email')) != null ? $e : 'no-reply@phoromatic.com'), '<p><strong>' . $register_username . '</strong>:</p><p>Your Phoromatic account has been created and is now active.</p>');\n\treturn true;\n}\n\n?>\n"], "filenames": ["pts-core/phoromatic/pages/phoromatic_benchmark.php", "pts-core/phoromatic/pages/phoromatic_r_add_test_details.php", "pts-core/phoromatic/pages/phoromatic_r_basic_suite_details.php", "pts-core/phoromatic/pages/phoromatic_schedules.php", "pts-core/phoromatic/pages/phoromatic_system_claim.php", "pts-core/phoromatic/pages/phoromatic_systems.php", "pts-core/phoromatic/phoromatic_functions.php"], "buggy_code_start_loc": [82, 39, 38, 60, 45, 55, 530], "buggy_code_end_loc": [111, 39, 38, 380, 151, 209, 533], "fixing_code_start_loc": [82, 40, 39, 60, 45, 55, 530], "fixing_code_end_loc": [111, 41, 40, 380, 151, 210, 533], "type": "CWE-352", "message": "phoronix-test-suite is vulnerable to Cross-Site Request Forgery (CSRF)", "other": {"cve": {"id": "CVE-2022-0238", "sourceIdentifier": "security@huntr.dev", "published": "2022-01-16T11:15:07.820", "lastModified": "2022-02-22T10:22:21.297", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "phoronix-test-suite is vulnerable to Cross-Site Request Forgery (CSRF)"}, {"lang": "es", "value": "phoronix-test-suite es vulnerable a un ataque de tipo Cross-Site Request Forgery (CSRF)"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 0.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phoronix-media:phoronix_test_suite:*:*:*:*:*:*:*:*", "versionEndIncluding": "10.8.0", "matchCriteriaId": "BDA5CBEF-8499-4240-ADFA-A990D1411BDC"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:34:*:*:*:*:*:*:*", "matchCriteriaId": "A930E247-0B43-43CB-98FF-6CE7B8189835"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:35:*:*:*:*:*:*:*", "matchCriteriaId": "80E516C0-98A4-4ADE-B69F-66A772E2BAAA"}]}]}], "references": [{"url": "https://github.com/phoronix-test-suite/phoronix-test-suite/commit/5755b3bf979cd04caa6feee07e403a5be5ac320e", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/63f24b24-4af2-47b8-baea-7ad5f4db3633", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/57V2CSFU5MKWKL6RJUKMXSD4PCRFTMMQ/", "source": "security@huntr.dev", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BU7E6OOZCXS3ZWHOQ2AR7MKM56IN2R6R/", "source": "security@huntr.dev", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/phoronix-test-suite/phoronix-test-suite/commit/5755b3bf979cd04caa6feee07e403a5be5ac320e"}}