{"buggy_code": ["# coding=utf-8\nimport praw\nimport sqlite3\nimport time\n\ncon = sqlite3.connect('estados_municipios.db')\ncursor = con.cursor()\n\ndef dbLookup(msg):\n    if len(msg.split(',')) != 2:\n        #procura na lista de paises\n        query = 'SELECT id FROM paises WHERE nome == \"%s\"' % (msg)\n        cursor.execute(query)\n        if cursor.fetchone():\n            return True\n        else:\n            return False\n    else:\n        cidade = msg.split(',')[0].strip()\n        estado = msg.split(',')[1].strip()\n        #check cidade pertence ao estado\n        query = 'SELECT estados.id FROM municipios JOIN estados ON municipios.estados_id == estados.id WHERE municipios.nome == \"%s\" AND estados.uf == \"%s\";' % (cidade, estado)\n        cursor.execute(query)\n        if not cursor.fetchone():\n            return False\n            \n    return True\n    \n\ndef main():\n    r = praw.Reddit(user_agent='flairbotbr')\n    r.login('botbr', 'apassword')\n    if r.is_logged_in():\n        print 'logged in'\n    else:\n        print 'failed to log in'\n        return\n    while True:\n        time.sleep(0.5)\n        for msg in r.get_unread(limit=None):\n            try:\n                print 'AUTHOR: %s - SUBJECT: %s - BODY: %s' % (msg.author, msg.subject, msg.body)\n            except UnicodeEncodeError:\n                print 'AUTHOR: %s - unprintable chars' % (msg.author)\n            sub = r.get_subreddit('brasil')\n            if msg.subject == 'flair':\n                if dbLookup(msg.body):\n                    estado = 'world' if len(msg.body.split(',')) < 2 else msg.body.split(',')[1].strip()\n                    sub.set_flair(msg.author,msg.body,estado)\n                    r.send_message(msg.author,'flair','Flair configurado.')\n                    print('flair ok')\n                else:\n                    r.send_message(msg.author,'flair','Configura\u00e7\u00e3o de flair falhou.')\n                    print('flair fail')\n            if msg.subject == 'remover flair':\n                sub.set_flair(msg.author,'','')\n                r.send_message(msg.author,'flair','Flair removido.')\n                print('remove flair ok')\n                \n            msg.mark_as_read()\n\nif __name__ == '__main__':\n    main()\n    "], "fixing_code": ["# coding=utf-8\nimport praw\nimport sqlite3\nimport time\n\ncon = sqlite3.connect('estados_municipios.db')\ncursor = con.cursor()\n\ndef dbLookup(msg):\n    if len(msg.split(',')) != 2:\n        #procura na lista de paises\n        query = 'SELECT id FROM paises WHERE nome == ?;'\n        cursor.execute(query,(msg,))\n        if cursor.fetchone():\n            return True\n        else:\n            return False\n    else:\n        cidade = msg.split(',')[0].strip()\n        estado = msg.split(',')[1].strip()\n        #check cidade pertence ao estado\n        query = 'SELECT estados.id FROM municipios JOIN estados ON municipios.estados_id == estados.id WHERE municipios.nome == ? AND estados.uf == ?;'\n        cursor.execute(query,(cidade,estado))\n        if not cursor.fetchone():\n            return False\n            \n    return True\n    \n\ndef main():\n    r = praw.Reddit(user_agent='flairbotbr')\n    r.login('botbr', 'apassword')\n    if r.is_logged_in():\n        print 'logged in'\n    else:\n        print 'failed to log in'\n        return\n    while True:\n        time.sleep(0.5)\n        try:\n            for msg in r.get_unread(limit=None):\n                try:\n                    print 'AUTHOR: %s - SUBJECT: %s - BODY: %s' % (msg.author, msg.subject, msg.body)\n                except UnicodeEncodeError:\n                    print 'AUTHOR: %s - unprintable chars' % (msg.author)\n                sub = r.get_subreddit('brasil')\n                if msg.subject == 'flair':\n                    if dbLookup(msg.body):\n                        estado = 'world' if len(msg.body.split(',')) < 2 else msg.body.split(',')[1].strip()\n                        sub.set_flair(msg.author,msg.body,estado)\n                        r.send_message(msg.author,'flair','Flair configurado.')\n                        print('flair ok')\n                    else:\n                        r.send_message(msg.author,'flair','Configura\u00e7\u00e3o de flair falhou.')\n                        print('flair fail')\n                if msg.subject == 'remover flair':\n                    sub.set_flair(msg.author,'','')\n                    r.send_message(msg.author,'flair','Flair removido.')\n                    print('remove flair ok')\n                \n                msg.mark_as_read()\n        except:\n            pass\n\nif __name__ == '__main__':\n    main()\n    \n"], "filenames": ["flair.py"], "buggy_code_start_loc": [12], "buggy_code_end_loc": [65], "fixing_code_start_loc": [12], "fixing_code_end_loc": [68], "type": "CWE-89", "message": "A vulnerability was found in tiredtyrant flairbot. It has been declared as critical. This vulnerability affects unknown code of the file flair.py. The manipulation leads to sql injection. The name of the patch is 5e112b68c6faad1d4699d02c1ebbb7daf48ef8fb. It is recommended to apply a patch to fix this issue. VDB-217618 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2015-10026", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-07T13:15:09.450", "lastModified": "2023-01-12T18:35:53.863", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in tiredtyrant flairbot. It has been declared as critical. This vulnerability affects unknown code of the file flair.py. The manipulation leads to sql injection. The name of the patch is 5e112b68c6faad1d4699d02c1ebbb7daf48ef8fb. It is recommended to apply a patch to fix this issue. VDB-217618 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.2}, "baseSeverity": "MEDIUM", "exploitabilityScore": 5.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:flairbot_project:flairbot:*:*:*:*:*:*:*:*", "versionEndExcluding": "2015-04-27", "matchCriteriaId": "35B14533-A0F4-404D-9AEB-95A2B5EFAB18"}]}]}], "references": [{"url": "https://github.com/tiredtyrant/flairbot/commit/5e112b68c6faad1d4699d02c1ebbb7daf48ef8fb", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217618", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217618", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/tiredtyrant/flairbot/commit/5e112b68c6faad1d4699d02c1ebbb7daf48ef8fb"}}