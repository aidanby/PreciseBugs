{"buggy_code": ["<?php\n\n/**\n * This file has only one real task, showing the calendar.\n * Original module by Aaron O'Neil - aaron@mud-master.com\n *\n * Simple Machines Forum (SMF)\n *\n * @package SMF\n * @author Simple Machines http://www.simplemachines.org\n * @copyright 2016 Simple Machines and individual contributors\n * @license http://www.simplemachines.org/about/smf/license.php BSD\n *\n * @version 2.1 Beta 3\n */\n\nif (!defined('SMF'))\n\tdie('No direct access...');\n\n/**\n * Show the calendar.\n * It loads the specified month's events, holidays, and birthdays.\n * It requires the calendar_view permission.\n * It depends on the cal_enabled setting, and many of the other cal_ settings.\n * It uses the calendar_start_day theme option. (Monday/Sunday)\n * It uses the main sub template in the Calendar template.\n * It goes to the month and year passed in 'month' and 'year' by get or post.\n * It is accessed through ?action=calendar.\n * @return void\n */\nfunction CalendarMain()\n{\n\tglobal $txt, $context, $modSettings, $scripturl, $options, $sourcedir, $user_info, $smcFunc;\n\n\t// Permissions, permissions, permissions.\n\tisAllowedTo('calendar_view');\n\n\t// Some global template resources.\n\t$context['calendar_resources'] = array(\n\t\t'min_year' => $modSettings['cal_minyear'],\n\t\t'max_year' => $modSettings['cal_maxyear'],\n\t);\n\n\t// Doing something other than calendar viewing?\n\t$subActions = array(\n\t\t'ical' => 'iCalDownload',\n\t\t'post' => 'CalendarPost',\n\t);\n\n\tif (isset($_GET['sa']) && isset($subActions[$_GET['sa']]))\n\t\treturn call_helper($subActions[$_GET['sa']]);\n\n\t// You can't do anything if the calendar is off.\n\tif (empty($modSettings['cal_enabled']))\n\t\tfatal_lang_error('calendar_off', false);\n\n\t// This is gonna be needed...\n\tloadTemplate('Calendar');\n\tloadCSSFile('calendar.css', array('force_current' => false, 'validate' => true, 'rtl' => 'calendar.rtl.css'), 'smf_calendar');\n\n\t// Did the specify an individual event ID? If so, let's splice the year/month in to what we would otherwise be doing.\n\tif (isset($_GET['event']))\n\t{\n\t\t$evid = (int) $_GET['event'];\n\t\tif ($evid > 0)\n\t\t{\n\t\t\t$request = $smcFunc['db_query']('', '\n\t\t\t\tSELECT start_date\n\t\t\t\tFROM {db_prefix}calendar\n\t\t\t\tWHERE id_event = {int:event_id}',\n\t\t\t\tarray(\n\t\t\t\t\t'event_id' => $evid,\n\t\t\t\t)\n\t\t\t);\n\t\t\tif ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t\t{\n\t\t\t\t// We know the format is going to be in yyyy-mm-dd from the database, so let's run with that.\n\t\t\t\tlist($_REQUEST['year'], $_REQUEST['month']) = explode('-', $row['start_date']);\n\t\t\t\t$_REQUEST['year'] = (int) $_REQUEST['year'];\n\t\t\t\t$_REQUEST['month'] = (int) $_REQUEST['month'];\n\n\t\t\t\t// And we definitely don't want weekly view.\n\t\t\t\tunset ($_GET['viewweek']);\n\n\t\t\t\t// We might use this later.\n\t\t\t\t$context['selected_event'] = $evid;\n\t\t\t}\n\t\t\t$smcFunc['db_free_result']($request);\n\t\t}\n\t\tunset ($_GET['event']);\n\t}\n\n\t// Set the page title to mention the calendar ;).\n\t$context['page_title'] = $txt['calendar'];\n\n\t// Is this a week view?\n\t$context['view_week'] = isset($_GET['viewweek']);\n\n\t// Don't let search engines index weekly calendar pages.\n\tif ($context['view_week'])\n\t\t$context['robot_no_index'] = true;\n\n\t// Get the current day of month...\n\trequire_once($sourcedir . '/Subs-Calendar.php');\n\t$today = getTodayInfo();\n\n\t// If the month and year are not passed in, use today's date as a starting point.\n\t$curPage = array(\n\t\t'day' => isset($_REQUEST['day']) ? (int) $_REQUEST['day'] : $today['day'],\n\t\t'month' => isset($_REQUEST['month']) ? (int) $_REQUEST['month'] : $today['month'],\n\t\t'year' => isset($_REQUEST['year']) ? (int) $_REQUEST['year'] : $today['year']\n\t);\n\n\t// Make sure the year and month are in valid ranges.\n\tif ($curPage['month'] < 1 || $curPage['month'] > 12)\n\t\tfatal_lang_error('invalid_month', false);\n\tif ($curPage['year'] < $modSettings['cal_minyear'] || $curPage['year'] > $modSettings['cal_maxyear'])\n\t\tfatal_lang_error('invalid_year', false);\n\t// If we have a day clean that too.\n\tif ($context['view_week'])\n\t{\n\t\t// Note $isValid is -1 < PHP 5.1\n\t\t$isValid = mktime(0, 0, 0, $curPage['month'], $curPage['day'], $curPage['year']);\n\t\tif ($curPage['day'] > 31 || !$isValid || $isValid == -1)\n\t\t\tfatal_lang_error('invalid_day', false);\n\t}\n\n\t// Load all the context information needed to show the calendar grid.\n\t$calendarOptions = array(\n\t\t'start_day' => !empty($options['calendar_start_day']) ? $options['calendar_start_day'] : 0,\n\t\t'show_birthdays' => in_array($modSettings['cal_showbdays'], array(1, 2)),\n\t\t'show_events' => in_array($modSettings['cal_showevents'], array(1, 2)),\n\t\t'show_holidays' => in_array($modSettings['cal_showholidays'], array(1, 2)),\n\t\t'highlight' => array(\n\t\t\t'events' => isset($modSettings['cal_highlight_events']) ? $modSettings['cal_highlight_events'] : 0,\n\t\t\t'holidays' => isset($modSettings['cal_highlight_holidays']) ? $modSettings['cal_highlight_holidays'] : 0,\n\t\t\t'birthdays' => isset($modSettings['cal_highlight_birthdays']) ? $modSettings['cal_highlight_birthdays'] : 0,\n\t\t),\n\t\t'show_week_num' => true,\n\t\t'short_day_titles' => !empty($modSettings['cal_short_days']),\n\t\t'short_month_titles' => !empty($modSettings['cal_short_months']),\n\t\t'show_next_prev' => !empty($modSettings['cal_prev_next_links']),\n\t\t'show_week_links' => isset($modSettings['cal_week_links']) ? $modSettings['cal_week_links'] : 0,\n\t);\n\n\t// Load up the main view.\n\tif ($context['view_week'])\n\t\t$context['calendar_grid_main'] = getCalendarWeek($curPage['month'], $curPage['year'], $curPage['day'], $calendarOptions);\n\telse\n\t\t$context['calendar_grid_main'] = getCalendarGrid($curPage['month'], $curPage['year'], $calendarOptions);\n\n\t// Load up the previous and next months.\n\t$context['calendar_grid_current'] = getCalendarGrid($curPage['month'], $curPage['year'], $calendarOptions);\n\n\t// Only show previous month if it isn't pre-January of the min-year\n\tif ($context['calendar_grid_current']['previous_calendar']['year'] > $modSettings['cal_minyear'] || $curPage['month'] != 1)\n\t\t$context['calendar_grid_prev'] = getCalendarGrid($context['calendar_grid_current']['previous_calendar']['month'], $context['calendar_grid_current']['previous_calendar']['year'], $calendarOptions, true);\n\n\t// Only show next month if it isn't post-December of the max-year\n\tif ($context['calendar_grid_current']['next_calendar']['year'] < $modSettings['cal_maxyear'] || $curPage['month'] != 12)\n\t\t$context['calendar_grid_next'] = getCalendarGrid($context['calendar_grid_current']['next_calendar']['month'], $context['calendar_grid_current']['next_calendar']['year'], $calendarOptions);\n\n\t// Basic template stuff.\n\t$context['allow_calendar_event'] = allowedTo('calendar_post');\n\n\t// If you don't allow events not linked to posts and you're not an admin, we have more work to do...\n\tif ($context['allow_calendar_event'] && empty($modSettings['cal_allow_unlinked']) && !$user_info['is_admin'])\n\t{\n\t\t$boards_can_post = boardsAllowedTo('post_new');\n\t\t$context['allow_calendar_event'] &= !empty($boards_can_post);\n\t}\n\n\t$context['can_post'] = $context['allow_calendar_event'];\n\t$context['current_day'] = $curPage['day'];\n\t$context['current_month'] = $curPage['month'];\n\t$context['current_year'] = $curPage['year'];\n\t$context['show_all_birthdays'] = isset($_GET['showbd']);\n\t$context['blocks_disabled'] = !empty($modSettings['cal_disable_prev_next']) ? 1 : 0;\n\n\t// Set the page title to mention the month or week, too\n\t$context['page_title'] .= ' - ' . ($context['view_week'] ? $context['calendar_grid_main']['week_title'] : $txt['months'][$context['current_month']] . ' ' . $context['current_year']);\n\n\t// Load up the linktree!\n\t$context['linktree'][] = array(\n\t\t'url' => $scripturl . '?action=calendar',\n\t\t'name' => $txt['calendar']\n\t);\n\t// Add the current month to the linktree.\n\t$context['linktree'][] = array(\n\t\t'url' => $scripturl . '?action=calendar;year=' . $context['current_year'] . ';month=' . $context['current_month'],\n\t\t'name' => $txt['months'][$context['current_month']] . ' ' . $context['current_year']\n\t);\n\t// If applicable, add the current week to the linktree.\n\tif ($context['view_week'])\n\t\t$context['linktree'][] = array(\n\t\t\t'url' => $scripturl . '?action=calendar;viewweek;year=' . $context['current_year'] . ';month=' . $context['current_month'] . ';day=' . $context['current_day'],\n\t\t\t'name' => $context['calendar_grid_main']['week_title'],\n\t\t);\n\n\t// Build the calendar button array.\n\t$context['calendar_buttons'] = array(\n\t\t'post_event' => array('test' => 'can_post', 'text' => 'calendar_post_event', 'image' => 'calendarpe.png', 'lang' => true, 'url' => $scripturl . '?action=calendar;sa=post;month=' . $context['current_month'] . ';year=' . $context['current_year'] . ';' . $context['session_var'] . '=' . $context['session_id']),\n\t);\n\n\t// Allow mods to add additional buttons here\n\tcall_integration_hook('integrate_calendar_buttons');\n}\n\n/**\n * This function processes posting/editing/deleting a calendar event.\n *\n * \t- calls {@link Post.php|Post() Post()} function if event is linked to a post.\n *  - calls {@link Subs-Calendar.php|insertEvent() insertEvent()} to insert the event if not linked to post.\n *\n * It requires the calendar_post permission to use.\n * It uses the event_post sub template in the Calendar template.\n * It is accessed with ?action=calendar;sa=post.\n */\nfunction CalendarPost()\n{\n\tglobal $context, $txt, $user_info, $sourcedir, $scripturl;\n\tglobal $modSettings, $topic, $smcFunc;\n\n\t// Well - can they?\n\tisAllowedTo('calendar_post');\n\n\t// We need this for all kinds of useful functions.\n\trequire_once($sourcedir . '/Subs-Calendar.php');\n\n\t// Cast this for safety...\n\tif (isset($_REQUEST['eventid']))\n\t\t$_REQUEST['eventid'] = (int) $_REQUEST['eventid'];\n\n\t// Submitting?\n\tif (isset($_POST[$context['session_var']], $_REQUEST['eventid']))\n\t{\n\t\tcheckSession();\n\n\t\t// Validate the post...\n\t\tif (!isset($_POST['link_to_board']))\n\t\t\tvalidateEventPost();\n\n\t\t// If you're not allowed to edit any events, you have to be the poster.\n\t\tif ($_REQUEST['eventid'] > 0 && !allowedTo('calendar_edit_any'))\n\t\t\tisAllowedTo('calendar_edit_' . (!empty($user_info['id']) && getEventPoster($_REQUEST['eventid']) == $user_info['id'] ? 'own' : 'any'));\n\n\t\t// New - and directing?\n\t\tif (isset($_POST['link_to_board']) || empty($modSettings['cal_allow_unlinked']))\n\t\t{\n\t\t\t$_REQUEST['calendar'] = 1;\n\t\t\trequire_once($sourcedir . '/Post.php');\n\t\t\treturn Post();\n\t\t}\n\t\t// New...\n\t\telseif ($_REQUEST['eventid'] == -1)\n\t\t{\n\t\t\t$eventOptions = array(\n\t\t\t\t'board' => 0,\n\t\t\t\t'topic' => 0,\n\t\t\t\t'title' => $smcFunc['substr']($_REQUEST['evtitle'], 0, 100),\n\t\t\t\t'member' => $user_info['id'],\n\t\t\t\t'start_date' => sprintf('%04d-%02d-%02d', $_POST['year'], $_POST['month'], $_POST['day']),\n\t\t\t\t'span' => isset($_POST['span']) && $_POST['span'] > 0 ? min((int) $modSettings['cal_maxspan'], (int) $_POST['span'] - 1) : 0,\n\t\t\t);\n\t\t\tinsertEvent($eventOptions);\n\t\t}\n\n\t\t// Deleting...\n\t\telseif (isset($_REQUEST['deleteevent']))\n\t\t\tremoveEvent($_REQUEST['eventid']);\n\n\t\t// ... or just update it?\n\t\telse\n\t\t{\n\t\t\t$eventOptions = array(\n\t\t\t\t'title' => $smcFunc['substr']($_REQUEST['evtitle'], 0, 100),\n\t\t\t\t'span' => empty($modSettings['cal_allowspan']) || empty($_POST['span']) || $_POST['span'] == 1 || empty($modSettings['cal_maxspan']) || $_POST['span'] > $modSettings['cal_maxspan'] ? 0 : min((int) $modSettings['cal_maxspan'], (int) $_POST['span'] - 1),\n\t\t\t\t'start_date' => strftime('%Y-%m-%d', mktime(0, 0, 0, (int) $_REQUEST['month'], (int) $_REQUEST['day'], (int) $_REQUEST['year'])),\n\t\t\t);\n\n\t\t\tmodifyEvent($_REQUEST['eventid'], $eventOptions);\n\t\t}\n\n\t\tupdateSettings(array(\n\t\t\t'calendar_updated' => time(),\n\t\t));\n\n\t\t// No point hanging around here now...\n\t\tredirectexit($scripturl . '?action=calendar;month=' . $_POST['month'] . ';year=' . $_POST['year']);\n\t}\n\n\t// If we are not enabled... we are not enabled.\n\tif (empty($modSettings['cal_allow_unlinked']) && empty($_REQUEST['eventid']))\n\t{\n\t\t$_REQUEST['calendar'] = 1;\n\t\trequire_once($sourcedir . '/Post.php');\n\t\treturn Post();\n\t}\n\n\t// New?\n\tif (!isset($_REQUEST['eventid']))\n\t{\n\t\t$today = getdate();\n\n\t\t$context['event'] = array(\n\t\t\t'boards' => array(),\n\t\t\t'board' => 0,\n\t\t\t'new' => 1,\n\t\t\t'eventid' => -1,\n\t\t\t'year' => isset($_REQUEST['year']) ? $_REQUEST['year'] : $today['year'],\n\t\t\t'month' => isset($_REQUEST['month']) ? $_REQUEST['month'] : $today['mon'],\n\t\t\t'day' => isset($_REQUEST['day']) ? $_REQUEST['day'] : $today['mday'],\n\t\t\t'title' => '',\n\t\t\t'span' => 1,\n\t\t);\n\t\t$context['event']['last_day'] = (int) strftime('%d', mktime(0, 0, 0, $context['event']['month'] == 12 ? 1 : $context['event']['month'] + 1, 0, $context['event']['month'] == 12 ? $context['event']['year'] + 1 : $context['event']['year']));\n\t}\n\telse\n\t{\n\t\t$context['event'] = getEventProperties($_REQUEST['eventid']);\n\n\t\tif ($context['event'] === false)\n\t\t\tfatal_lang_error('no_access', false);\n\n\t\t// If it has a board, then they should be editing it within the topic.\n\t\tif (!empty($context['event']['topic']['id']) && !empty($context['event']['topic']['first_msg']))\n\t\t{\n\t\t\t// We load the board up, for a check on the board access rights...\n\t\t\t$topic = $context['event']['topic']['id'];\n\t\t\tloadBoard();\n\t\t}\n\n\t\t// Make sure the user is allowed to edit this event.\n\t\tif ($context['event']['member'] != $user_info['id'])\n\t\t\tisAllowedTo('calendar_edit_any');\n\t\telseif (!allowedTo('calendar_edit_any'))\n\t\t\tisAllowedTo('calendar_edit_own');\n\t}\n\n\t// Get list of boards that can be posted in.\n\t$boards = boardsAllowedTo('post_new');\n\tif (empty($boards))\n\t{\n\t\t// You can post new events but can't link them to anything...\n\t\t$context['event']['categories'] = array();\n\t}\n\telse\n\t{\n\t\t// Load the list of boards and categories in the context.\n\t\trequire_once($sourcedir . '/Subs-MessageIndex.php');\n\t\t$boardListOptions = array(\n\t\t\t'included_boards' => in_array(0, $boards) ? null : $boards,\n\t\t\t'not_redirection' => true,\n\t\t\t'use_permissions' => true,\n\t\t\t'selected_board' => $modSettings['cal_defaultboard'],\n\t\t);\n\t\t$context['event']['categories'] = getBoardList($boardListOptions);\n\t}\n\n\t// Template, sub template, etc.\n\tloadTemplate('Calendar');\n\t$context['sub_template'] = 'event_post';\n\n\t$context['page_title'] = isset($_REQUEST['eventid']) ? $txt['calendar_edit'] : $txt['calendar_post_event'];\n\t$context['linktree'][] = array(\n\t\t'name' => $context['page_title'],\n\t);\n}\n\n/**\n * This function offers up a download of an event in iCal 2.0 format.\n *\n * Follows the conventions in {@link http://tools.ietf.org/html/rfc5546 RFC5546}\n * Sets events as all day events since we don't have hourly events\n * Will honor and set multi day events\n * Sets a sequence number if the event has been modified\n *\n * @todo .... allow for week or month export files as well?\n */\nfunction iCalDownload()\n{\n\tglobal $smcFunc, $sourcedir, $forum_version, $modSettings, $webmaster_email, $mbname;\n\n\t// You can't export if the calendar export feature is off.\n\tif (empty($modSettings['cal_export']))\n\t\tfatal_lang_error('calendar_export_off', false);\n\n\t// Goes without saying that this is required.\n\tif (!isset($_REQUEST['eventid']))\n\t\tfatal_lang_error('no_access', false);\n\n\t// This is kinda wanted.\n\trequire_once($sourcedir . '/Subs-Calendar.php');\n\n\t// Load up the event in question and check it exists.\n\t$event = getEventProperties($_REQUEST['eventid']);\n\n\tif ($event === false)\n\t\tfatal_lang_error('no_access', false);\n\n\t// Check the title isn't too long - iCal requires some formatting if so.\n\t$title = str_split($event['title'], 30);\n\tforeach ($title as $id => $line)\n\t{\n\t\tif ($id != 0)\n\t\t\t$title[$id] = ' ' . $title[$id];\n\t\t$title[$id] .= \"\\n\";\n\t}\n\n\t// Format the dates.\n\t$datestamp = date('Ymd\\THis\\Z', time());\n\t$datestart = $event['year'] . ($event['month'] < 10 ? '0' . $event['month'] : $event['month']) . ($event['day'] < 10 ? '0' . $event['day'] : $event['day']);\n\n\t// Do we have a event that spans several days?\n\tif ($event['span'] > 1)\n\t{\n\t\t$dateend = strtotime($event['year'] . '-' . ($event['month'] < 10 ? '0' . $event['month'] : $event['month']) . '-' . ($event['day'] < 10 ? '0' . $event['day'] : $event['day']));\n\t\t$dateend += ($event['span'] - 1) * 86400;\n\t\t$dateend = date('Ymd', $dateend);\n\t}\n\n\t// This is what we will be sending later\n\t$filecontents = '';\n\t$filecontents .= 'BEGIN:VCALENDAR' . \"\\n\";\n\t$filecontents .= 'METHOD:PUBLISH' . \"\\n\";\n\t$filecontents .= 'PRODID:-//SimpleMachines//SMF ' . (empty($forum_version) ? 2.0 : strtr($forum_version, array('SMF ' => ''))) . '//EN' . \"\\n\";\n\t$filecontents .= 'VERSION:2.0' . \"\\n\";\n\t$filecontents .= 'BEGIN:VEVENT' . \"\\n\";\n\t// @TODO - Should be the members email who created the event rather than $webmaster_email.\n\t$filecontents .= 'ORGANIZER;CN=\"' . $event['realname'] . '\":MAILTO:' . $webmaster_email . \"\\n\";\n\t$filecontents .= 'DTSTAMP:' . $datestamp . \"\\n\";\n\t$filecontents .= 'DTSTART;VALUE=DATE:' . $datestart . \"\\n\";\n\n\t// more than one day\n\tif ($event['span'] > 1)\n\t\t$filecontents .= 'DTEND;VALUE=DATE:' . $dateend . \"\\n\";\n\n\t// event has changed? advance the sequence for this UID\n\tif ($event['sequence'] > 0)\n\t\t$filecontents .= 'SEQUENCE:' . $event['sequence'] . \"\\n\";\n\n\t$filecontents .= 'SUMMARY:' . implode('', $title);\n\t$filecontents .= 'UID:' . $event['eventid'] . '@' . str_replace(' ', '-', $mbname) . \"\\n\";\n\t$filecontents .= 'END:VEVENT' . \"\\n\";\n\t$filecontents .= 'END:VCALENDAR';\n\n\t// Send some standard headers.\n\tob_end_clean();\n\tif (!empty($modSettings['enableCompressedOutput']))\n\t\t@ob_start('ob_gzhandler');\n\telse\n\t\tob_start();\n\n\t// Send the file headers\n\theader('Pragma: ');\n\theader('Cache-Control: no-cache');\n\tif (!isBrowser('gecko'))\n\t\theader('Content-Transfer-Encoding: binary');\n\theader('Expires: ' . gmdate('D, d M Y H:i:s', time() + 525600 * 60) . ' GMT');\n\theader('Last-Modified: ' . gmdate('D, d M Y H:i:s', time()) . 'GMT');\n\theader('Accept-Ranges: bytes');\n\theader('Connection: close');\n\theader('Content-Disposition: attachment; filename=\"' . $event['title'] . '.ics\"');\n\tif (empty($modSettings['enableCompressedOutput']))\n\t\theader('Content-Length: ' . $smcFunc['strlen']($filecontents));\n\n\t// This is a calendar item!\n\theader('Content-Type: text/calendar');\n\n\t// Chuck out the card.\n\techo $filecontents;\n\n\t// Off we pop - lovely!\n\tobExit(false);\n}\n\n/**\n * Nothing to see here. Move along.\n */\nfunction clock()\n{\n\tglobal $settings, $context, $scripturl;\n\n\t$context['onimg'] = $settings['images_url'] . '/bbc/bbc_bg.png';\n\t$context['offimg'] = $settings['images_url'] . '/bbc/bbc_hoverbg.png';\n\n\t$context['page_title'] = 'Anyone know what time it is?';\n\t$context['linktree'][] = array(\n\t\t\t'url' => $scripturl . '?action=clock',\n\t\t\t'name' => 'Clock',\n\t);\n\t$context['robot_no_index'] = true;\n\n\t$omfg = isset($_REQUEST['omfg']);\n\t$bcd = !isset($_REQUEST['rb']) && !isset($_REQUEST['omfg']) && !isset($_REQUEST['time']);\n\n\tloadTemplate('Calendar');\n\n\tif ($bcd)\n\t{\n\t\t$context['sub_template'] = 'bcd';\n\t\t$context['linktree'][] = array('url' => $scripturl . '?action=clock;bcd', 'name' => 'BCD');\n\t\t$context['clockicons'] = unserialize(base64_decode('YTo2OntzOjI6ImgxIjthOjI6e2k6MDtpOjI7aToxO2k6MTt9czoyOiJoMiI7YTo0OntpOjA7aTo4O2k6MTtpOjQ7aToyO2k6MjtpOjM7aToxO31zOjI6Im0xIjthOjM6e2k6MDtpOjQ7aToxO2k6MjtpOjI7aToxO31zOjI6Im0yIjthOjQ6e2k6MDtpOjg7aToxO2k6NDtpOjI7aToyO2k6MztpOjE7fXM6MjoiczEiO2E6Mzp7aTowO2k6NDtpOjE7aToyO2k6MjtpOjE7fXM6MjoiczIiO2E6NDp7aTowO2k6ODtpOjE7aTo0O2k6MjtpOjI7aTozO2k6MTt9fQ=='));\n\t}\n\telseif (!$omfg && !isset($_REQUEST['time']))\n\t{\n\t\t$context['sub_template'] = 'hms';\n\t\t$context['linktree'][] = array('url' => $scripturl . '?action=clock', 'name' => 'Binary');\n\t\t$context['clockicons'] = unserialize(base64_decode('YTozOntzOjE6ImgiO2E6NTp7aTowO2k6MTY7aToxO2k6ODtpOjI7aTo0O2k6MztpOjI7aTo0O2k6MTt9czoxOiJtIjthOjY6e2k6MDtpOjMyO2k6MTtpOjE2O2k6MjtpOjg7aTozO2k6NDtpOjQ7aToyO2k6NTtpOjE7fXM6MToicyI7YTo2OntpOjA7aTozMjtpOjE7aToxNjtpOjI7aTo4O2k6MztpOjQ7aTo0O2k6MjtpOjU7aToxO319'));\n\t}\n\telseif ($omfg)\n\t{\n\t\t$context['sub_template'] = 'omfg';\n\t\t$context['linktree'][] = array('url' => $scripturl . '?action=clock;omfg', 'name' => 'OMFG');\n\t\t$context['clockicons'] = unserialize(base64_decode('YTo2OntzOjQ6InllYXIiO2E6Nzp7aTowO2k6NjQ7aToxO2k6MzI7aToyO2k6MTY7aTozO2k6ODtpOjQ7aTo0O2k6NTtpOjI7aTo2O2k6MTt9czo1OiJtb250aCI7YTo0OntpOjA7aTo4O2k6MTtpOjQ7aToyO2k6MjtpOjM7aToxO31zOjM6ImRheSI7YTo1OntpOjA7aToxNjtpOjE7aTo4O2k6MjtpOjQ7aTozO2k6MjtpOjQ7aToxO31zOjQ6ImhvdXIiO2E6NTp7aTowO2k6MTY7aToxO2k6ODtpOjI7aTo0O2k6MztpOjI7aTo0O2k6MTt9czozOiJtaW4iO2E6Njp7aTowO2k6MzI7aToxO2k6MTY7aToyO2k6ODtpOjM7aTo0O2k6NDtpOjI7aTo1O2k6MTt9czozOiJzZWMiO2E6Njp7aTowO2k6MzI7aToxO2k6MTY7aToyO2k6ODtpOjM7aTo0O2k6NDtpOjI7aTo1O2k6MTt9fQ=='));\n\t}\n\telseif (isset($_REQUEST['time']))\n\t{\n\t\t$context['sub_template'] = 'thetime';\n\t\t$time = getdate($_REQUEST['time'] == 'now' ? time() : (int) $_REQUEST['time']);\n\t\t$year = $time['year'] % 100;\n\t\t$month = $time['mon'];\n\t\t$day = $time['mday'];\n\t\t$hour = $time['hours'];\n\t\t$min = $time['minutes'];\n\t\t$sec = $time['seconds'];\n\t\t$context['linktree'][] = array('url' => $scripturl . '?action=clock;time=' . $_REQUEST['time'], 'name' => 'Requested Time');\n\t\t$context['clockicons'] = array(\n\t\t\t'year' => array(\n\t\t\t\t64 => false,\n\t\t\t\t32 => false,\n\t\t\t\t16 => false,\n\t\t\t\t8  => false,\n\t\t\t\t4  => false,\n\t\t\t\t2  => false,\n\t\t\t\t1  => false\n\t\t\t),\n\t\t\t'month' => array(\n\t\t\t\t8  => false,\n\t\t\t\t4  => false,\n\t\t\t\t2  => false,\n\t\t\t\t1  => false\n\t\t\t),\n\t\t\t'day' => array(\n\t\t\t\t16 => false,\n\t\t\t\t4  => false,\n\t\t\t\t8  => false,\n\t\t\t\t2  => false,\n\t\t\t\t1  => false\n\t\t\t),\n\t\t\t'hour' => array(\n\t\t\t\t32 => false,\n\t\t\t\t16 => false,\n\t\t\t\t8  => false,\n\t\t\t\t4  => false,\n\t\t\t\t2  => false,\n\t\t\t\t1  => false\n\t\t\t),\n\t\t\t'min' => array(\n\t\t\t\t32 => false,\n\t\t\t\t16 => false,\n\t\t\t\t8  => false,\n\t\t\t\t4  => false,\n\t\t\t\t2  => false,\n\t\t\t\t1  => false\n\t\t\t),\n\t\t\t'sec' => array(\n\t\t\t\t32 => false,\n\t\t\t\t16 => false,\n\t\t\t\t8  => false,\n\t\t\t\t4  => false,\n\t\t\t\t2  => false,\n\t\t\t\t1  => false\n\t\t\t),\n\t\t);\n\n\t\tforeach ($context['clockicons'] as $t => $vs)\n\t\t\tforeach ($vs as $v => $dumb)\n\t\t\t{\n\t\t\t\tif ($$t >= $v)\n\t\t\t\t{\n\t\t\t\t\t$$t -= $v;\n\t\t\t\t\t$context['clockicons'][$t][$v] = true;\n\t\t\t\t}\n\t\t\t}\n\t}\n}\n\n?>", "<?php\n\n/**\n * This file has the hefty job of loading information for the forum.\n *\n * Simple Machines Forum (SMF)\n *\n * @package SMF\n * @author Simple Machines http://www.simplemachines.org\n * @copyright 2016 Simple Machines and individual contributors\n * @license http://www.simplemachines.org/about/smf/license.php BSD\n *\n * @version 2.1 Beta 3\n */\n\nif (!defined('SMF'))\n\tdie('No direct access...');\n\n/**\n * Load the $modSettings array.\n */\nfunction reloadSettings()\n{\n\tglobal $modSettings, $boarddir, $smcFunc, $txt, $db_character_set;\n\tglobal $cache_enable, $sourcedir, $context;\n\n\t// Most database systems have not set UTF-8 as their default input charset.\n\tif (!empty($db_character_set))\n\t\t$smcFunc['db_query']('set_character_set', '\n\t\t\tSET NAMES ' . $db_character_set,\n\t\t\tarray(\n\t\t\t)\n\t\t);\n\n\t// Try to load it from the cache first; it'll never get cached if the setting is off.\n\tif (($modSettings = cache_get_data('modSettings', 90)) == null)\n\t{\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT variable, value\n\t\t\tFROM {db_prefix}settings',\n\t\t\tarray(\n\t\t\t)\n\t\t);\n\t\t$modSettings = array();\n\t\tif (!$request)\n\t\t\tdisplay_db_error();\n\t\twhile ($row = $smcFunc['db_fetch_row']($request))\n\t\t\t$modSettings[$row[0]] = $row[1];\n\t\t$smcFunc['db_free_result']($request);\n\n\t\t// Do a few things to protect against missing settings or settings with invalid values...\n\t\tif (empty($modSettings['defaultMaxTopics']) || $modSettings['defaultMaxTopics'] <= 0 || $modSettings['defaultMaxTopics'] > 999)\n\t\t\t$modSettings['defaultMaxTopics'] = 20;\n\t\tif (empty($modSettings['defaultMaxMessages']) || $modSettings['defaultMaxMessages'] <= 0 || $modSettings['defaultMaxMessages'] > 999)\n\t\t\t$modSettings['defaultMaxMessages'] = 15;\n\t\tif (empty($modSettings['defaultMaxMembers']) || $modSettings['defaultMaxMembers'] <= 0 || $modSettings['defaultMaxMembers'] > 999)\n\t\t\t$modSettings['defaultMaxMembers'] = 30;\n\t\tif (empty($modSettings['defaultMaxListItems']) || $modSettings['defaultMaxListItems'] <= 0 || $modSettings['defaultMaxListItems'] > 999)\n\t\t\t$modSettings['defaultMaxListItems'] = 15;\n\n\t\tif (!empty($cache_enable))\n\t\t\tcache_put_data('modSettings', $modSettings, 90);\n\t}\n\n\t$modSettings['cache_enable'] = $cache_enable;\n\n\t// UTF-8 ?\n\t$utf8 = (empty($modSettings['global_character_set']) ? $txt['lang_character_set'] : $modSettings['global_character_set']) === 'UTF-8';\n\n\t// Set a list of common functions.\n\t$ent_list = empty($modSettings['disableEntityCheck']) ? '&(#\\d{1,7}|quot|amp|lt|gt|nbsp);' : '&(#021|quot|amp|lt|gt|nbsp);';\n\t$ent_check = empty($modSettings['disableEntityCheck']) ? function ($string)\n\t\t{\n\t\t\t$string = preg_replace_callback('~(&#(\\d{1,7}|x[0-9a-fA-F]{1,6});)~', 'entity_fix__callback', $string);\n\t\t\treturn $string;\n\t\t} : function ($string)\n\t\t{\n\t\t\treturn $string;\n\t\t};\n\t$fix_utf8mb4 = function ($string) use ($utf8)\n\t{\n\t\tif (!$utf8)\n\t\t\treturn $string;\n\n\t\t$i = 0;\n\t\t$len = strlen($string);\n\t\t$new_string = '';\n\t\twhile ($i < $len)\n\t\t{\n\t\t\t$ord = ord($string[$i]);\n\t\t\tif ($ord < 128)\n\t\t\t{\n\t\t\t\t$new_string .= $string[$i];\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\telseif ($ord < 224)\n\t\t\t{\n\t\t\t\t$new_string .= $string[$i] . $string[$i+1];\n\t\t\t\t$i += 2;\n\t\t\t}\n\t\t\telseif ($ord < 240)\n\t\t\t{\n\t\t\t\t$new_string .= $string[$i] . $string[$i+1] . $string[$i+2];\n\t\t\t\t$i += 3;\n\t\t\t}\n\t\t\telseif ($ord < 248)\n\t\t\t{\n\t\t\t\t// Magic happens.\n\t\t\t\t$val = (ord($string[$i]) & 0x07) << 18;\n\t\t\t\t$val += (ord($string[$i+1]) & 0x3F) << 12;\n\t\t\t\t$val += (ord($string[$i+2]) & 0x3F) << 6;\n\t\t\t\t$val += (ord($string[$i+3]) & 0x3F);\n\t\t\t\t$new_string .= '&#' . $val . ';';\n\t\t\t\t$i += 4;\n\t\t\t}\n\t\t}\n\t\treturn $new_string;\n\t};\n\n\t// Preg_replace space characters depend on the character set in use\n\t$space_chars = $utf8 ? '\\x{A0}\\x{AD}\\x{2000}-\\x{200F}\\x{201F}\\x{202F}\\x{3000}\\x{FEFF}' : '\\x00-\\x08\\x0B\\x0C\\x0E-\\x19\\xA0';\n\n\t// global array of anonymous helper functions, used mostly to properly handle multi byte strings\n\t$smcFunc += array(\n\t\t'entity_fix' => function ($string)\n\t\t{\n\t\t\t$num = $string[0] === 'x' ? hexdec(substr($string, 1)) : (int) $string;\n\t\t\treturn $num < 0x20 || $num > 0x10FFFF || ($num >= 0xD800 && $num <= 0xDFFF) || $num === 0x202E || $num === 0x202D ? '' : '&#' . $num . ';';\n\t\t},\n\t\t'htmlspecialchars' => function ($string, $quote_style = ENT_COMPAT, $charset = 'ISO-8859-1') use ($ent_check, $utf8, $fix_utf8mb4)\n\t\t{\n\t\t\treturn $fix_utf8mb4($ent_check(htmlspecialchars($string, $quote_style, $utf8 ? 'UTF-8' : $charset)));\n\t\t},\n\t\t'htmltrim' => function ($string) use ($utf8, $space_chars, $ent_check)\n\t\t{\n\t\t\treturn preg_replace('~^(?:[ \\t\\n\\r\\x0B\\x00' . $space_chars . ']|&nbsp;)+|(?:[ \\t\\n\\r\\x0B\\x00' . $space_chars . ']|&nbsp;)+$~' . ($utf8 ? 'u' : ''), '', $ent_check($string));\n\t\t},\n\t\t'strlen' => function ($string) use ($ent_list, $utf8, $ent_check)\n\t\t{\n\t\t\treturn strlen(preg_replace('~' . $ent_list . ($utf8 ? '|.~u' : '~'), '_', $ent_check($string)));\n\t\t},\n\t\t'strpos' => function ($haystack, $needle, $offset = 0) use ($utf8, $ent_check, $modSettings)\n\t\t{\n\t\t\t$haystack_arr = preg_split('~(&#' . (empty($modSettings['disableEntityCheck']) ? '\\d{1,7}' : '021') . ';|&quot;|&amp;|&lt;|&gt;|&nbsp;|.)~' . ($utf8 ? 'u' : ''), $ent_check($haystack), -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t\t\tif (strlen($needle) === 1)\n\t\t\t{\n\t\t\t\t$result = array_search($needle, array_slice($haystack_arr, $offset));\n\t\t\t\treturn is_int($result) ? $result + $offset : false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$needle_arr = preg_split('~(&#' . (empty($modSettings['disableEntityCheck']) ? '\\d{1,7}' : '021') . ';|&quot;|&amp;|&lt;|&gt;|&nbsp;|.)~' . ($utf8 ? 'u' : '') . '', $ent_check($needle), -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\t\t\t\t$needle_size = count($needle_arr);\n\n\t\t\t\t$result = array_search($needle_arr[0], array_slice($haystack_arr, $offset));\n\t\t\t\twhile ((int) $result === $result)\n\t\t\t\t{\n\t\t\t\t\t$offset += $result;\n\t\t\t\t\tif (array_slice($haystack_arr, $offset, $needle_size) === $needle_arr)\n\t\t\t\t\t\treturn $offset;\n\t\t\t\t\t$result = array_search($needle_arr[0], array_slice($haystack_arr, ++$offset));\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\t'substr' => function ($string, $start, $length = null) use ($utf8, $ent_check, $modSettings)\n\t\t{\n\t\t\t$ent_arr = preg_split('~(&#' . (empty($modSettings['disableEntityCheck']) ? '\\d{1,7}' : '021') . ';|&quot;|&amp;|&lt;|&gt;|&nbsp;|.)~' . ($utf8 ? 'u' : '') . '', $ent_check($string), -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\t\t\treturn $length === null ? implode('', array_slice($ent_arr, $start)) : implode('', array_slice($ent_arr, $start, $length));\n\t\t},\n\t\t'strtolower' => $utf8 ? function ($string) use ($sourcedir)\n\t\t{\n\t\t\tif (!function_exists('mb_strtolower'))\n\t\t\t{\n\t\t\t\trequire_once($sourcedir . '/Subs-Charset.php');\n\t\t\t\treturn utf8_strtolower($string);\n\t\t\t}\n\n\t\t\treturn mb_strtolower($string, 'UTF-8');\n\t\t} : 'strtolower',\n\t\t'strtoupper' => $utf8 ? function ($string)\n\t\t{\n\t\t\tglobal $sourcedir;\n\n\t\t\tif (!function_exists('mb_strtolower'))\n\t\t\t{\n\t\t\t\trequire_once($sourcedir . '/Subs-Charset.php');\n\t\t\t\treturn utf8_strtoupper($string);\n\t\t\t}\n\n\t\t\treturn mb_strtoupper($string, 'UTF-8');\n\t\t} : 'strtoupper',\n\t\t'truncate' => function($string, $length) use ($utf8, $ent_check, $ent_list, &$smcFunc)\n\t\t{\n\t\t\t$string = $ent_check($string);\n\t\t\tpreg_match('~^(' . $ent_list . '|.){' . $smcFunc['strlen'](substr($string, 0, $length)) . '}~'.  ($utf8 ? 'u' : ''), $string, $matches);\n\t\t\t$string = $matches[0];\n\t\t\twhile (strlen($string) > $length)\n\t\t\t\t$string = preg_replace('~(?:' . $ent_list . '|.)$~'.  ($utf8 ? 'u' : ''), '', $string);\n\t\t\treturn $string;\n\t\t},\n\t\t'ucfirst' => $utf8 ? function ($string) use (&$smcFunc)\n\t\t{\n\t\t\treturn $smcFunc['strtoupper']($smcFunc['substr']($string, 0, 1)) . $smcFunc['substr']($string, 1);\n\t\t} : 'ucfirst',\n\t\t'ucwords' => $utf8 ? function ($string) use (&$smcFunc)\n\t\t{\n\t\t\t$words = preg_split('~([\\s\\r\\n\\t]+)~', $string, -1, PREG_SPLIT_DELIM_CAPTURE);\n\t\t\tfor ($i = 0, $n = count($words); $i < $n; $i += 2)\n\t\t\t\t$words[$i] = $smcFunc['ucfirst']($words[$i]);\n\t\t\treturn implode('', $words);\n\t\t} : 'ucwords',\n\t);\n\n\t// Setting the timezone is a requirement for some functions.\n\tif (isset($modSettings['default_timezone']))\n\t\tdate_default_timezone_set($modSettings['default_timezone']);\n\n\t// Check the load averages?\n\tif (!empty($modSettings['loadavg_enable']))\n\t{\n\t\tif (($modSettings['load_average'] = cache_get_data('loadavg', 90)) == null)\n\t\t{\n\t\t\t$modSettings['load_average'] = @file_get_contents('/proc/loadavg');\n\t\t\tif (!empty($modSettings['load_average']) && preg_match('~^([^ ]+?) ([^ ]+?) ([^ ]+)~', $modSettings['load_average'], $matches) != 0)\n\t\t\t\t$modSettings['load_average'] = (float) $matches[1];\n\t\t\telseif (($modSettings['load_average'] = @`uptime`) != null && preg_match('~load average[s]?: (\\d+\\.\\d+), (\\d+\\.\\d+), (\\d+\\.\\d+)~i', $modSettings['load_average'], $matches) != 0)\n\t\t\t\t$modSettings['load_average'] = (float) $matches[1];\n\t\t\telse\n\t\t\t\tunset($modSettings['load_average']);\n\n\t\t\tif (!empty($modSettings['load_average']) || $modSettings['load_average'] === 0.0)\n\t\t\t\tcache_put_data('loadavg', $modSettings['load_average'], 90);\n\t\t}\n\n\t\tif (!empty($modSettings['load_average']) || $modSettings['load_average'] === 0.0)\n\t\t\tcall_integration_hook('integrate_load_average', array($modSettings['load_average']));\n\n\t\tif (!empty($modSettings['loadavg_forum']) && !empty($modSettings['load_average']) && $modSettings['load_average'] >= $modSettings['loadavg_forum'])\n\t\t\tdisplay_loadavg_error();\n\t}\n\n\t// Is post moderation alive and well? Everywhere else assumes this has been defined, so let's make sure it is.\n\t$modSettings['postmod_active'] = !empty($modSettings['postmod_active']);\n\n\t// Here to justify the name of this function. :P\n\t// It should be added to the install and upgrade scripts.\n\t// But since the converters need to be updated also. This is easier.\n\tif (empty($modSettings['currentAttachmentUploadDir']))\n\t{\n\t\tupdateSettings(array(\n\t\t\t'attachmentUploadDir' => json_encode(array(1 => $modSettings['attachmentUploadDir'])),\n\t\t\t'currentAttachmentUploadDir' => 1,\n\t\t));\n\t}\n\n\t// Integration is cool.\n\tif (defined('SMF_INTEGRATION_SETTINGS'))\n\t{\n\t\t$integration_settings = smf_json_decode(SMF_INTEGRATION_SETTINGS, true);\n\t\tforeach ($integration_settings as $hook => $function)\n\t\t\tadd_integration_function($hook, $function, '', false);\n\t}\n\n\t// Any files to pre include?\n\tif (!empty($modSettings['integrate_pre_include']))\n\t{\n\t\t$pre_includes = explode(',', $modSettings['integrate_pre_include']);\n\t\tforeach ($pre_includes as $include)\n\t\t{\n\t\t\t$include = strtr(trim($include), array('$boarddir' => $boarddir, '$sourcedir' => $sourcedir));\n\t\t\tif (file_exists($include))\n\t\t\t\trequire_once($include);\n\t\t}\n\t}\n\n\t// This determines the server... not used in many places, except for login fixing.\n\t$context['server'] = array(\n\t\t'is_iis' => isset($_SERVER['SERVER_SOFTWARE']) && strpos($_SERVER['SERVER_SOFTWARE'], 'Microsoft-IIS') !== false,\n\t\t'is_apache' => isset($_SERVER['SERVER_SOFTWARE']) && strpos($_SERVER['SERVER_SOFTWARE'], 'Apache') !== false,\n\t\t'is_litespeed' => isset($_SERVER['SERVER_SOFTWARE']) && strpos($_SERVER['SERVER_SOFTWARE'], 'LiteSpeed') !== false,\n\t\t'is_lighttpd' => isset($_SERVER['SERVER_SOFTWARE']) && strpos($_SERVER['SERVER_SOFTWARE'], 'lighttpd') !== false,\n\t\t'is_nginx' => isset($_SERVER['SERVER_SOFTWARE']) && strpos($_SERVER['SERVER_SOFTWARE'], 'nginx') !== false,\n\t\t'is_cgi' => isset($_SERVER['SERVER_SOFTWARE']) && strpos(php_sapi_name(), 'cgi') !== false,\n\t\t'is_windows' => strpos(PHP_OS, 'WIN') === 0,\n\t\t'iso_case_folding' => ord(strtolower(chr(138))) === 154,\n\t);\n\t// A bug in some versions of IIS under CGI (older ones) makes cookie setting not work with Location: headers.\n\t$context['server']['needs_login_fix'] = $context['server']['is_cgi'] && $context['server']['is_iis'];\n\n\t// Define a list of icons used across multiple places.\n\t$context['stable_icons'] = array('xx', 'thumbup', 'thumbdown', 'exclamation', 'question', 'lamp', 'smiley', 'angry', 'cheesy', 'grin', 'sad', 'wink', 'poll', 'moved', 'recycled', 'clip');\n\n\t// Define an array for custom profile fields placements.\n\t$context['cust_profile_fields_placement'] = array(\n\t\t'standard',\n\t\t'icons',\n\t\t'above_signature',\n\t\t'below_signature',\n\t\t'below_avatar',\n\t\t'above_member',\n\t\t'bottom_poster',\n\t);\n\n\t// Define an array of allowed HTML tags.\n\t$context['allowed_html_tags'] = array(\n\t\t'<img>',\n\t\t'<div>',\n\t);\n\n\t// These are the only valid image types for SMF, by default anyway.\n\t$context['validImageTypes'] = array(\n\t\t1 => 'gif',\n\t\t2 => 'jpeg',\n\t\t3 => 'png',\n\t\t5 => 'psd',\n\t\t6 => 'bmp',\n\t\t7 => 'tiff',\n\t\t8 => 'tiff',\n\t\t9 => 'jpeg',\n\t\t14 => 'iff'\n\t);\n\n\t// Define a list of allowed tags for descriptions.\n\t$context['description_allowed_tags'] = array('abbr', 'anchor', 'b', 'center', 'color', 'font', 'hr', 'i', 'img', 'iurl', 'left', 'li', 'list', 'ltr', 'pre', 'right', 's', 'sub', 'sup', 'table', 'td', 'tr', 'u', 'url',);\n\n\t// Get an error count, if necessary\n\tif (!isset($context['num_errors']))\n\t{\n\t\t$query = $smcFunc['db_query']('', '\n\t\t\tSELECT COUNT(id_error)\n\t\t\tFROM {db_prefix}log_errors',\n\t\t\tarray()\n\t\t);\n\n\t\tlist($context['num_errors']) = $smcFunc['db_fetch_row']($query);\n\t\t$smcFunc['db_free_result']($query);\n\t}\n\n\t// Call pre load integration functions.\n\tcall_integration_hook('integrate_pre_load');\n}\n\n/**\n * Load all the important user information.\n * What it does:\n * \t- sets up the $user_info array\n * \t- assigns $user_info['query_wanna_see_board'] for what boards the user can see.\n * \t- first checks for cookie or integration validation.\n * \t- uses the current session if no integration function or cookie is found.\n * \t- checks password length, if member is activated and the login span isn't over.\n * \t\t- if validation fails for the user, $id_member is set to 0.\n * \t\t- updates the last visit time when needed.\n */\nfunction loadUserSettings()\n{\n\tglobal $modSettings, $user_settings, $sourcedir, $smcFunc;\n\tglobal $cookiename, $user_info, $language, $context, $image_proxy_enabled, $image_proxy_secret, $boardurl;\n\n\t// Check first the integration, then the cookie, and last the session.\n\tif (count($integration_ids = call_integration_hook('integrate_verify_user')) > 0)\n\t{\n\t\t$id_member = 0;\n\t\tforeach ($integration_ids as $integration_id)\n\t\t{\n\t\t\t$integration_id = (int) $integration_id;\n\t\t\tif ($integration_id > 0)\n\t\t\t{\n\t\t\t\t$id_member = $integration_id;\n\t\t\t\t$already_verified = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t\t$id_member = 0;\n\n\tif (empty($id_member) && isset($_COOKIE[$cookiename]))\n\t{\n\t\t$cookie_data = smf_json_decode($_COOKIE[$cookiename], true);\n\n\t\tif (is_null($cookie_data))\n\t\t\t$cookie_data = @unserialize($_COOKIE[$cookiename]);\n\n\t\tlist ($id_member, $password) = $cookie_data;\n\t\t$id_member = !empty($id_member) && strlen($password) > 0 ? (int) $id_member : 0;\n\t}\n\telseif (empty($id_member) && isset($_SESSION['login_' . $cookiename]) && ($_SESSION['USER_AGENT'] == $_SERVER['HTTP_USER_AGENT'] || !empty($modSettings['disableCheckUA'])))\n\t{\n\t\t// @todo Perhaps we can do some more checking on this, such as on the first octet of the IP?\n\t\t$cookie_data = smf_json_decode($_SESSION['login_' . $cookiename]);\n\n\t\tif (is_null($cookie_data))\n\t\t\t$cookie_data = @unserialize($_SESSION['login_' . $cookiename]);\n\n\t\tlist ($id_member, $password, $login_span) = $cookie_data;\n\t\t$id_member = !empty($id_member) && strlen($password) == 128 && $login_span > time() ? (int) $id_member : 0;\n\t}\n\n\t// Only load this stuff if the user isn't a guest.\n\tif ($id_member != 0)\n\t{\n\t\t// Is the member data cached?\n\t\tif (empty($modSettings['cache_enable']) || $modSettings['cache_enable'] < 2 || ($user_settings = cache_get_data('user_settings-' . $id_member, 60)) == null)\n\t\t{\n\t\t\t$request = $smcFunc['db_query']('', '\n\t\t\t\tSELECT mem.*, COALESCE(a.id_attach, 0) AS id_attach, a.filename, a.attachment_type\n\t\t\t\tFROM {db_prefix}members AS mem\n\t\t\t\t\tLEFT JOIN {db_prefix}attachments AS a ON (a.id_member = {int:id_member})\n\t\t\t\tWHERE mem.id_member = {int:id_member}\n\t\t\t\tLIMIT 1',\n\t\t\t\tarray(\n\t\t\t\t\t'id_member' => $id_member,\n\t\t\t\t)\n\t\t\t);\n\t\t\t$user_settings = $smcFunc['db_fetch_assoc']($request);\n\t\t\t$smcFunc['db_free_result']($request);\n\n\t\t\tif (!empty($modSettings['force_ssl']) && $image_proxy_enabled && stripos($user_settings['avatar'], 'http://') !== false)\n\t\t\t\t$user_settings['avatar'] = strtr($boardurl, array('http://' => 'https://')) . '/proxy.php?request=' . urlencode($user_settings['avatar']) . '&hash=' . md5($user_settings['avatar'] . $image_proxy_secret);\n\n\t\t\tif (!empty($modSettings['cache_enable']) && $modSettings['cache_enable'] >= 2)\n\t\t\t\tcache_put_data('user_settings-' . $id_member, $user_settings, 60);\n\t\t}\n\n\t\t// Did we find 'im?  If not, junk it.\n\t\tif (!empty($user_settings))\n\t\t{\n\t\t\t// As much as the password should be right, we can assume the integration set things up.\n\t\t\tif (!empty($already_verified) && $already_verified === true)\n\t\t\t\t$check = true;\n\t\t\t// SHA-512 hash should be 128 characters long.\n\t\t\telseif (strlen($password) == 128)\n\t\t\t\t$check = hash_salt($user_settings['passwd'], $user_settings['password_salt']) == $password;\n\t\t\telse\n\t\t\t\t$check = false;\n\n\t\t\t// Wrong password or not activated - either way, you're going nowhere.\n\t\t\t$id_member = $check && ($user_settings['is_activated'] == 1 || $user_settings['is_activated'] == 11) ? (int) $user_settings['id_member'] : 0;\n\t\t}\n\t\telse\n\t\t\t$id_member = 0;\n\n\t\t// If we no longer have the member maybe they're being all hackey, stop brute force!\n\t\tif (!$id_member)\n\t\t{\n\t\t\trequire_once($sourcedir . '/LogInOut.php');\n\t\t\tvalidatePasswordFlood(!empty($user_settings['id_member']) ? $user_settings['id_member'] : $id_member, !empty($user_settings['passwd_flood']) ? $user_settings['passwd_flood'] : false, $id_member != 0);\n\t\t}\n\t\t// Validate for Two Factor Authentication\n\t\telseif (!empty($modSettings['tfa_mode']) && $id_member && !empty($user_settings['tfa_secret']) && (empty($_REQUEST['action']) || !in_array($_REQUEST['action'], array('login2', 'logintfa'))))\n\t\t{\n\t\t\t$tfacookie = $cookiename . '_tfa';\n\t\t\t$tfasecret = null;\n\n\t\t\t$verified = call_integration_hook('integrate_verify_tfa', array($id_member, $user_settings));\n\n\t\t\tif (empty($verified) || !in_array(true, $verified))\n\t\t\t{\n\t\t\t\tif (!empty($_COOKIE[$tfacookie]))\n\t\t\t\t{\n\t\t\t\t\t$tfa_data = smf_json_decode($_COOKIE[$tfacookie]);\n\n\t\t\t\t\tif (is_null($tfa_data))\n\t\t\t\t\t\t$tfa_data = @unserialize($_COOKIE[$tfacookie]);\n\n\t\t\t\t\tlist ($tfamember, $tfasecret) = $tfa_data;\n\n\t\t\t\t\tif ((int) $tfamember != $id_member)\n\t\t\t\t\t\t$tfasecret = null;\n\t\t\t\t}\n\n\t\t\t\tif (empty($tfasecret) || hash_salt($user_settings['tfa_backup'], $user_settings['password_salt']) != $tfasecret)\n\t\t\t\t{\n\t\t\t\t\t$id_member = 0;\n\t\t\t\t\tredirectexit('action=logintfa');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// When authenticating their two factor code, make sure to reset their ID for security\n\t\telseif (!empty($modSettings['tfa_mode']) && $id_member && !empty($user_settings['tfa_secret']) && $_REQUEST['action'] == 'logintfa')\n\t\t{\n\t\t\t$id_member = 0;\n\t\t\t$context['tfa_member'] = $user_settings;\n\t\t\t$user_settings = array();\n\t\t}\n\t\t// Are we forcing 2FA? Need to check if the user groups actually require 2FA\n\t\telseif (!empty($modSettings['tfa_mode']) && $modSettings['tfa_mode'] >= 2 && $id_member && empty($user_settings['tfa_secret']))\n\t\t{\n\t\t\tif ($modSettings['tfa_mode'] == 2) //only do this if we are just forcing SOME membergroups\n\t\t\t{\n\t\t\t\t//Build an array of ALL user membergroups.\n\t\t\t\t$full_groups = array($user_settings['id_group']);\n\t\t\t\tif (!empty($user_settings['additional_groups']))\n\t\t\t\t{\n\t\t\t\t\t$full_groups = array_merge($full_groups, explode(',', $user_settings['additional_groups']));\n\t\t\t\t\t$full_groups = array_unique($full_groups); //duplicates, maybe?\n\t\t\t\t}\n\n\t\t\t\t//Find out if any group requires 2FA\n\t\t\t\t$request = $smcFunc['db_query']('', '\n\t\t\t\t\tSELECT COUNT(id_group) AS total\n\t\t\t\t\tFROM {db_prefix}membergroups\n\t\t\t\t\tWHERE tfa_required = {int:tfa_required}\n\t\t\t\t\t\tAND id_group IN ({array_int:full_groups})',\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'tfa_required' => 1,\n\t\t\t\t\t\t'full_groups' => $full_groups,\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\t$row = $smcFunc['db_fetch_assoc']($request);\n\t\t\t\t$smcFunc['db_free_result']($request);\n\t\t\t}\n\t\t\telse\n\t\t\t\t$row['total'] = 1; //simplifies logics in the next \"if\"\n\n\t\t\t$area = !empty($_REQUEST['area']) ? $_REQUEST['area'] : '';\n\t\t\t$action = !empty($_REQUEST['action']) ? $_REQUEST['action'] : '';\n\n\t\t\tif ($row['total'] > 0 && !in_array($action, array('profile', 'logout')) || ($action == 'profile' && $area != 'tfasetup'))\n\t\t\t\tredirectexit('action=profile;area=tfasetup;forced');\n\t\t}\n\t}\n\n\t// Found 'im, let's set up the variables.\n\tif ($id_member != 0)\n\t{\n\t\t// Let's not update the last visit time in these cases...\n\t\t// 1. SSI doesn't count as visiting the forum.\n\t\t// 2. RSS feeds and XMLHTTP requests don't count either.\n\t\t// 3. If it was set within this session, no need to set it again.\n\t\t// 4. New session, yet updated < five hours ago? Maybe cache can help.\n\t\t// 5. We're still logging in or authenticating\n\t\tif (SMF != 'SSI' && !isset($_REQUEST['xml']) && (!isset($_REQUEST['action']) || !in_array($_REQUEST['action'], array('.xml', 'login2', 'logintfa'))) && empty($_SESSION['id_msg_last_visit']) && (empty($modSettings['cache_enable']) || ($_SESSION['id_msg_last_visit'] = cache_get_data('user_last_visit-' . $id_member, 5 * 3600)) === null))\n\t\t{\n\t\t\t// @todo can this be cached?\n\t\t\t// Do a quick query to make sure this isn't a mistake.\n\t\t\t$result = $smcFunc['db_query']('', '\n\t\t\t\tSELECT poster_time\n\t\t\t\tFROM {db_prefix}messages\n\t\t\t\tWHERE id_msg = {int:id_msg}\n\t\t\t\tLIMIT 1',\n\t\t\t\tarray(\n\t\t\t\t\t'id_msg' => $user_settings['id_msg_last_visit'],\n\t\t\t\t)\n\t\t\t);\n\t\t\tlist ($visitTime) = $smcFunc['db_fetch_row']($result);\n\t\t\t$smcFunc['db_free_result']($result);\n\n\t\t\t$_SESSION['id_msg_last_visit'] = $user_settings['id_msg_last_visit'];\n\n\t\t\t// If it was *at least* five hours ago...\n\t\t\tif ($visitTime < time() - 5 * 3600)\n\t\t\t{\n\t\t\t\tupdateMemberData($id_member, array('id_msg_last_visit' => (int) $modSettings['maxMsgID'], 'last_login' => time(), 'member_ip' => $_SERVER['REMOTE_ADDR'], 'member_ip2' => $_SERVER['BAN_CHECK_IP']));\n\t\t\t\t$user_settings['last_login'] = time();\n\n\t\t\t\tif (!empty($modSettings['cache_enable']) && $modSettings['cache_enable'] >= 2)\n\t\t\t\t\tcache_put_data('user_settings-' . $id_member, $user_settings, 60);\n\n\t\t\t\tif (!empty($modSettings['cache_enable']))\n\t\t\t\t\tcache_put_data('user_last_visit-' . $id_member, $_SESSION['id_msg_last_visit'], 5 * 3600);\n\t\t\t}\n\t\t}\n\t\telseif (empty($_SESSION['id_msg_last_visit']))\n\t\t\t$_SESSION['id_msg_last_visit'] = $user_settings['id_msg_last_visit'];\n\n\t\t$username = $user_settings['member_name'];\n\n\t\tif (empty($user_settings['additional_groups']))\n\t\t\t$user_info = array(\n\t\t\t\t'groups' => array($user_settings['id_group'], $user_settings['id_post_group'])\n\t\t\t);\n\t\telse\n\t\t\t$user_info = array(\n\t\t\t\t'groups' => array_merge(\n\t\t\t\t\tarray($user_settings['id_group'], $user_settings['id_post_group']),\n\t\t\t\t\texplode(',', $user_settings['additional_groups'])\n\t\t\t\t)\n\t\t\t);\n\n\t\t// Because history has proven that it is possible for groups to go bad - clean up in case.\n\t\tforeach ($user_info['groups'] as $k => $v)\n\t\t\t$user_info['groups'][$k] = (int) $v;\n\n\t\t// This is a logged in user, so definitely not a spider.\n\t\t$user_info['possibly_robot'] = false;\n\n\t\t// Figure out the new time offset.\n\t\tif (!empty($user_settings['timezone']))\n\t\t{\n\t\t\t// Get the offsets from UTC for the server, then for the user.\n\t\t\t$tz_system = new DateTimeZone(@date_default_timezone_get());\n\t\t\t$tz_user = new DateTimeZone($user_settings['timezone']);\n\t\t\t$time_system = new DateTime('now', $tz_system);\n\t\t\t$time_user = new DateTime('now', $tz_user);\n\t\t\t$user_info['time_offset'] = ($tz_user->getOffset($time_user) - $tz_system->getOffset($time_system)) / 3600;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// !!! Compatibility.\n\t\t\t$user_info['time_offset'] = empty($user_settings['time_offset']) ? 0 :$user_settings['time_offset'];\n\t\t}\n\t}\n\t// If the user is a guest, initialize all the critical user settings.\n\telse\n\t{\n\t\t// This is what a guest's variables should be.\n\t\t$username = '';\n\t\t$user_info = array('groups' => array(-1));\n\t\t$user_settings = array();\n\n\t\tif (isset($_COOKIE[$cookiename]) && empty($context['tfa_member']))\n\t\t\t$_COOKIE[$cookiename] = '';\n\n\t\t// Expire the 2FA cookie\n\t\tif (isset($_COOKIE[$cookiename . '_tfa']) && empty($context['tfa_member']))\n\t\t{\n\t\t\t$tfa_data = smf_json_decode($_COOKIE[$cookiename . '_tfa'], true);\n\n\t\t\tif (is_null($tfa_data))\n\t\t\t\t$tfa_data = @unserialize($_COOKIE[$cookiename . '_tfa']);\n\n\t\t\tlist ($id, $user, $exp, $state, $preserve) = $tfa_data;\n\n\t\t\tif (!$preserve || time() > $exp)\n\t\t\t{\n\t\t\t\t$_COOKIE[$cookiename . '_tfa'] = '';\n\t\t\t\tsetTFACookie(-3600, 0, '');\n\t\t\t}\n\t\t}\n\n\t\t// Create a login token if it doesn't exist yet.\n\t\tif (!isset($_SESSION['token']['post-login']))\n\t\t\tcreateToken('login');\n\t\telse\n\t\t\tlist ($context['login_token_var'],,, $context['login_token']) = $_SESSION['token']['post-login'];\n\n\t\t// Do we perhaps think this is a search robot? Check every five minutes just in case...\n\t\tif ((!empty($modSettings['spider_mode']) || !empty($modSettings['spider_group'])) && (!isset($_SESSION['robot_check']) || $_SESSION['robot_check'] < time() - 300))\n\t\t{\n\t\t\trequire_once($sourcedir . '/ManageSearchEngines.php');\n\t\t\t$user_info['possibly_robot'] = SpiderCheck();\n\t\t}\n\t\telseif (!empty($modSettings['spider_mode']))\n\t\t\t$user_info['possibly_robot'] = isset($_SESSION['id_robot']) ? $_SESSION['id_robot'] : 0;\n\t\t// If we haven't turned on proper spider hunts then have a guess!\n\t\telse\n\t\t{\n\t\t\t$ci_user_agent = strtolower($_SERVER['HTTP_USER_AGENT']);\n\t\t\t$user_info['possibly_robot'] = (strpos($_SERVER['HTTP_USER_AGENT'], 'Mozilla') === false && strpos($_SERVER['HTTP_USER_AGENT'], 'Opera') === false) || strpos($ci_user_agent, 'googlebot') !== false || strpos($ci_user_agent, 'slurp') !== false || strpos($ci_user_agent, 'crawl') !== false || strpos($ci_user_agent, 'msnbot') !== false;\n\t\t}\n\n\t\t// We don't know the offset...\n\t\t$user_info['time_offset'] = 0;\n\t}\n\n\t// Set up the $user_info array.\n\t$user_info += array(\n\t\t'id' => $id_member,\n\t\t'username' => $username,\n\t\t'name' => isset($user_settings['real_name']) ? $user_settings['real_name'] : '',\n\t\t'email' => isset($user_settings['email_address']) ? $user_settings['email_address'] : '',\n\t\t'passwd' => isset($user_settings['passwd']) ? $user_settings['passwd'] : '',\n\t\t'language' => empty($user_settings['lngfile']) || empty($modSettings['userLanguage']) ? $language : $user_settings['lngfile'],\n\t\t'is_guest' => $id_member == 0,\n\t\t'is_admin' => in_array(1, $user_info['groups']),\n\t\t'theme' => empty($user_settings['id_theme']) ? 0 : $user_settings['id_theme'],\n\t\t'last_login' => empty($user_settings['last_login']) ? 0 : $user_settings['last_login'],\n\t\t'ip' => $_SERVER['REMOTE_ADDR'],\n\t\t'ip2' => $_SERVER['BAN_CHECK_IP'],\n\t\t'posts' => empty($user_settings['posts']) ? 0 : $user_settings['posts'],\n\t\t'time_format' => empty($user_settings['time_format']) ? $modSettings['time_format'] : $user_settings['time_format'],\n\t\t'avatar' => array(\n\t\t\t'url' => isset($user_settings['avatar']) ? $user_settings['avatar'] : '',\n\t\t\t'filename' => empty($user_settings['filename']) ? '' : $user_settings['filename'],\n\t\t\t'custom_dir' => !empty($user_settings['attachment_type']) && $user_settings['attachment_type'] == 1,\n\t\t\t'id_attach' => isset($user_settings['id_attach']) ? $user_settings['id_attach'] : 0\n\t\t),\n\t\t'smiley_set' => isset($user_settings['smiley_set']) ? $user_settings['smiley_set'] : '',\n\t\t'messages' => empty($user_settings['instant_messages']) ? 0 : $user_settings['instant_messages'],\n\t\t'unread_messages' => empty($user_settings['unread_messages']) ? 0 : $user_settings['unread_messages'],\n\t\t'alerts' => empty($user_settings['alerts']) ? 0 : $user_settings['alerts'],\n\t\t'total_time_logged_in' => empty($user_settings['total_time_logged_in']) ? 0 : $user_settings['total_time_logged_in'],\n\t\t'buddies' => !empty($modSettings['enable_buddylist']) && !empty($user_settings['buddy_list']) ? explode(',', $user_settings['buddy_list']) : array(),\n\t\t'ignoreboards' => !empty($user_settings['ignore_boards']) && !empty($modSettings['allow_ignore_boards']) ? explode(',', $user_settings['ignore_boards']) : array(),\n\t\t'ignoreusers' => !empty($user_settings['pm_ignore_list']) ? explode(',', $user_settings['pm_ignore_list']) : array(),\n\t\t'warning' => isset($user_settings['warning']) ? $user_settings['warning'] : 0,\n\t\t'permissions' => array(),\n\t);\n\t$user_info['groups'] = array_unique($user_info['groups']);\n\n\t// Make sure that the last item in the ignore boards array is valid. If the list was too long it could have an ending comma that could cause problems.\n\tif (!empty($user_info['ignoreboards']) && empty($user_info['ignoreboards'][$tmp = count($user_info['ignoreboards']) - 1]))\n\t\tunset($user_info['ignoreboards'][$tmp]);\n\n\t// Allow the user to change their language.\n\tif (!empty($modSettings['userLanguage']))\n\t{\n\t\t$languages = getLanguages();\n\n\t\t// Is it valid?\n\t\tif (!empty($_GET['language']) && isset($languages[strtr($_GET['language'], './\\\\:', '____')]))\n\t\t{\n\t\t\t$user_info['language'] = strtr($_GET['language'], './\\\\:', '____');\n\n\t\t\t// Make it permanent for memmbers.\n\t\t\tif (!empty($user_info['id']))\n\t\t\t\tupdateMemberData($user_info['id'], array('lngfile' => $user_info['language']));\n\t\t\telse\n\t\t\t\t$_SESSION['language'] = $user_info['language'];\n\t\t}\n\t\telseif (!empty($_SESSION['language']) && isset($languages[strtr($_SESSION['language'], './\\\\:', '____')]))\n\t\t\t$user_info['language'] = strtr($_SESSION['language'], './\\\\:', '____');\n\t}\n\n\t// Just build this here, it makes it easier to change/use - administrators can see all boards.\n\tif ($user_info['is_admin'])\n\t\t$user_info['query_see_board'] = '1=1';\n\t// Otherwise just the groups in $user_info['groups'].\n\telse\n\t\t$user_info['query_see_board'] = '((FIND_IN_SET(' . implode(', b.member_groups) != 0 OR FIND_IN_SET(', $user_info['groups']) . ', b.member_groups) != 0)' . (!empty($modSettings['deny_boards_access']) ? ' AND (FIND_IN_SET(' . implode(', b.deny_member_groups) = 0 AND FIND_IN_SET(', $user_info['groups']) . ', b.deny_member_groups) = 0)' : '') . (isset($user_info['mod_cache']) ? ' OR ' . $user_info['mod_cache']['mq'] : '') . ')';\n\n\t// Build the list of boards they WANT to see.\n\t// This will take the place of query_see_boards in certain spots, so it better include the boards they can see also\n\n\t// If they aren't ignoring any boards then they want to see all the boards they can see\n\tif (empty($user_info['ignoreboards']))\n\t\t$user_info['query_wanna_see_board'] = $user_info['query_see_board'];\n\t// Ok I guess they don't want to see all the boards\n\telse\n\t\t$user_info['query_wanna_see_board'] = '(' . $user_info['query_see_board'] . ' AND b.id_board NOT IN (' . implode(',', $user_info['ignoreboards']) . '))';\n\n\tcall_integration_hook('integrate_user_info');\n}\n\n/**\n * Check for moderators and see if they have access to the board.\n * What it does:\n * - sets up the $board_info array for current board information.\n * - if cache is enabled, the $board_info array is stored in cache.\n * - redirects to appropriate post if only message id is requested.\n * - is only used when inside a topic or board.\n * - determines the local moderators for the board.\n * - adds group id 3 if the user is a local moderator for the board they are in.\n * - prevents access if user is not in proper group nor a local moderator of the board.\n */\nfunction loadBoard()\n{\n\tglobal $txt, $scripturl, $context, $modSettings;\n\tglobal $board_info, $board, $topic, $user_info, $smcFunc;\n\n\t// Assume they are not a moderator.\n\t$user_info['is_mod'] = false;\n\t$context['user']['is_mod'] = &$user_info['is_mod'];\n\n\t// Start the linktree off empty..\n\t$context['linktree'] = array();\n\n\t// Have they by chance specified a message id but nothing else?\n\tif (empty($_REQUEST['action']) && empty($topic) && empty($board) && !empty($_REQUEST['msg']))\n\t{\n\t\t// Make sure the message id is really an int.\n\t\t$_REQUEST['msg'] = (int) $_REQUEST['msg'];\n\n\t\t// Looking through the message table can be slow, so try using the cache first.\n\t\tif (($topic = cache_get_data('msg_topic-' . $_REQUEST['msg'], 120)) === null)\n\t\t{\n\t\t\t$request = $smcFunc['db_query']('', '\n\t\t\t\tSELECT id_topic\n\t\t\t\tFROM {db_prefix}messages\n\t\t\t\tWHERE id_msg = {int:id_msg}\n\t\t\t\tLIMIT 1',\n\t\t\t\tarray(\n\t\t\t\t\t'id_msg' => $_REQUEST['msg'],\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// So did it find anything?\n\t\t\tif ($smcFunc['db_num_rows']($request))\n\t\t\t{\n\t\t\t\tlist ($topic) = $smcFunc['db_fetch_row']($request);\n\t\t\t\t$smcFunc['db_free_result']($request);\n\t\t\t\t// Save save save.\n\t\t\t\tcache_put_data('msg_topic-' . $_REQUEST['msg'], $topic, 120);\n\t\t\t}\n\t\t}\n\n\t\t// Remember redirection is the key to avoiding fallout from your bosses.\n\t\tif (!empty($topic))\n\t\t\tredirectexit('topic=' . $topic . '.msg' . $_REQUEST['msg'] . '#msg' . $_REQUEST['msg']);\n\t\telse\n\t\t{\n\t\t\tloadPermissions();\n\t\t\tloadTheme();\n\t\t\tfatal_lang_error('topic_gone', false);\n\t\t}\n\t}\n\n\t// Load this board only if it is specified.\n\tif (empty($board) && empty($topic))\n\t{\n\t\t$board_info = array('moderators' => array(), 'moderator_groups' => array());\n\t\treturn;\n\t}\n\n\tif (!empty($modSettings['cache_enable']) && (empty($topic) || $modSettings['cache_enable'] >= 3))\n\t{\n\t\t// @todo SLOW?\n\t\tif (!empty($topic))\n\t\t\t$temp = cache_get_data('topic_board-' . $topic, 120);\n\t\telse\n\t\t\t$temp = cache_get_data('board-' . $board, 120);\n\n\t\tif (!empty($temp))\n\t\t{\n\t\t\t$board_info = $temp;\n\t\t\t$board = $board_info['id'];\n\t\t}\n\t}\n\n\tif (empty($temp))\n\t{\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT\n\t\t\t\tc.id_cat, b.name AS bname, b.description, b.num_topics, b.member_groups, b.deny_member_groups,\n\t\t\t\tb.id_parent, c.name AS cname, COALESCE(mg.id_group, 0) AS id_moderator_group, mg.group_name,\n\t\t\t\tCOALESCE(mem.id_member, 0) AS id_moderator,\n\t\t\t\tmem.real_name' . (!empty($topic) ? ', b.id_board' : '') . ', b.child_level,\n\t\t\t\tb.id_theme, b.override_theme, b.count_posts, b.id_profile, b.redirect,\n\t\t\t\tb.unapproved_topics, b.unapproved_posts' . (!empty($topic) ? ', t.approved, t.id_member_started' : '') . '\n\t\t\tFROM {db_prefix}boards AS b' . (!empty($topic) ? '\n\t\t\t\tINNER JOIN {db_prefix}topics AS t ON (t.id_topic = {int:current_topic})' : '') . '\n\t\t\t\tLEFT JOIN {db_prefix}categories AS c ON (c.id_cat = b.id_cat)\n\t\t\t\tLEFT JOIN {db_prefix}moderator_groups AS modgs ON (modgs.id_board = {raw:board_link})\n\t\t\t\tLEFT JOIN {db_prefix}membergroups AS mg ON (mg.id_group = modgs.id_group)\n\t\t\t\tLEFT JOIN {db_prefix}moderators AS mods ON (mods.id_board = {raw:board_link})\n\t\t\t\tLEFT JOIN {db_prefix}members AS mem ON (mem.id_member = mods.id_member)\n\t\t\tWHERE b.id_board = {raw:board_link}',\n\t\t\tarray(\n\t\t\t\t'current_topic' => $topic,\n\t\t\t\t'board_link' => empty($topic) ? $smcFunc['db_quote']('{int:current_board}', array('current_board' => $board)) : 't.id_board',\n\t\t\t)\n\t\t);\n\t\t// If there aren't any, skip.\n\t\tif ($smcFunc['db_num_rows']($request) > 0)\n\t\t{\n\t\t\t$row = $smcFunc['db_fetch_assoc']($request);\n\n\t\t\t// Set the current board.\n\t\t\tif (!empty($row['id_board']))\n\t\t\t\t$board = $row['id_board'];\n\n\t\t\t// Basic operating information. (globals... :/)\n\t\t\t$board_info = array(\n\t\t\t\t'id' => $board,\n\t\t\t\t'moderators' => array(),\n\t\t\t\t'moderator_groups' => array(),\n\t\t\t\t'cat' => array(\n\t\t\t\t\t'id' => $row['id_cat'],\n\t\t\t\t\t'name' => $row['cname']\n\t\t\t\t),\n\t\t\t\t'name' => $row['bname'],\n\t\t\t\t'description' => $row['description'],\n\t\t\t\t'num_topics' => $row['num_topics'],\n\t\t\t\t'unapproved_topics' => $row['unapproved_topics'],\n\t\t\t\t'unapproved_posts' => $row['unapproved_posts'],\n\t\t\t\t'unapproved_user_topics' => 0,\n\t\t\t\t'parent_boards' => getBoardParents($row['id_parent']),\n\t\t\t\t'parent' => $row['id_parent'],\n\t\t\t\t'child_level' => $row['child_level'],\n\t\t\t\t'theme' => $row['id_theme'],\n\t\t\t\t'override_theme' => !empty($row['override_theme']),\n\t\t\t\t'profile' => $row['id_profile'],\n\t\t\t\t'redirect' => $row['redirect'],\n\t\t\t\t'recycle' => !empty($modSettings['recycle_enable']) && !empty($modSettings['recycle_board']) && $modSettings['recycle_board'] == $board,\n\t\t\t\t'posts_count' => empty($row['count_posts']),\n\t\t\t\t'cur_topic_approved' => empty($topic) || $row['approved'],\n\t\t\t\t'cur_topic_starter' => empty($topic) ? 0 : $row['id_member_started'],\n\t\t\t);\n\n\t\t\t// Load the membergroups allowed, and check permissions.\n\t\t\t$board_info['groups'] = $row['member_groups'] == '' ? array() : explode(',', $row['member_groups']);\n\t\t\t$board_info['deny_groups'] = $row['deny_member_groups'] == '' ? array() : explode(',', $row['deny_member_groups']);\n\n\t\t\tdo\n\t\t\t{\n\t\t\t\tif (!empty($row['id_moderator']))\n\t\t\t\t\t$board_info['moderators'][$row['id_moderator']] = array(\n\t\t\t\t\t\t'id' => $row['id_moderator'],\n\t\t\t\t\t\t'name' => $row['real_name'],\n\t\t\t\t\t\t'href' => $scripturl . '?action=profile;u=' . $row['id_moderator'],\n\t\t\t\t\t\t'link' => '<a href=\"' . $scripturl . '?action=profile;u=' . $row['id_moderator'] . '\">' . $row['real_name'] . '</a>'\n\t\t\t\t\t);\n\n\t\t\t\tif (!empty($row['id_moderator_group']))\n\t\t\t\t\t$board_info['moderator_groups'][$row['id_moderator_group']] = array(\n\t\t\t\t\t\t'id' => $row['id_moderator_group'],\n\t\t\t\t\t\t'name' => $row['group_name'],\n\t\t\t\t\t\t'href' => $scripturl . '?action=groups;sa=members;group=' . $row['id_moderator_group'],\n\t\t\t\t\t\t'link' => '<a href=\"' . $scripturl . '?action=groups;sa=members;group=' . $row['id_moderator_group'] . '\">' . $row['group_name'] . '</a>'\n\t\t\t\t\t);\n\t\t\t}\n\t\t\twhile ($row = $smcFunc['db_fetch_assoc']($request));\n\n\t\t\t// If the board only contains unapproved posts and the user isn't an approver then they can't see any topics.\n\t\t\t// If that is the case do an additional check to see if they have any topics waiting to be approved.\n\t\t\tif ($board_info['num_topics'] == 0 && $modSettings['postmod_active'] && !allowedTo('approve_posts'))\n\t\t\t{\n\t\t\t\t// Free the previous result\n\t\t\t\t$smcFunc['db_free_result']($request);\n\n\t\t\t\t// @todo why is this using id_topic?\n\t\t\t\t// @todo Can this get cached?\n\t\t\t\t$request = $smcFunc['db_query']('', '\n\t\t\t\t\tSELECT COUNT(id_topic)\n\t\t\t\t\tFROM {db_prefix}topics\n\t\t\t\t\tWHERE id_member_started={int:id_member}\n\t\t\t\t\t\tAND approved = {int:unapproved}\n\t\t\t\t\t\tAND id_board = {int:board}',\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'id_member' => $user_info['id'],\n\t\t\t\t\t\t'unapproved' => 0,\n\t\t\t\t\t\t'board' => $board,\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tlist ($board_info['unapproved_user_topics']) = $smcFunc['db_fetch_row']($request);\n\t\t\t}\n\n\t\t\tif (!empty($modSettings['cache_enable']) && (empty($topic) || $modSettings['cache_enable'] >= 3))\n\t\t\t{\n\t\t\t\t// @todo SLOW?\n\t\t\t\tif (!empty($topic))\n\t\t\t\t\tcache_put_data('topic_board-' . $topic, $board_info, 120);\n\t\t\t\tcache_put_data('board-' . $board, $board_info, 120);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise the topic is invalid, there are no moderators, etc.\n\t\t\t$board_info = array(\n\t\t\t\t'moderators' => array(),\n\t\t\t\t'moderator_groups' => array(),\n\t\t\t\t'error' => 'exist'\n\t\t\t);\n\t\t\t$topic = null;\n\t\t\t$board = 0;\n\t\t}\n\t\t$smcFunc['db_free_result']($request);\n\t}\n\n\tif (!empty($topic))\n\t\t$_GET['board'] = (int) $board;\n\n\tif (!empty($board))\n\t{\n\t\t// Get this into an array of keys for array_intersect\n\t\t$moderator_groups = array_keys($board_info['moderator_groups']);\n\n\t\t// Now check if the user is a moderator.\n\t\t$user_info['is_mod'] = isset($board_info['moderators'][$user_info['id']]) || count(array_intersect($user_info['groups'], $moderator_groups)) != 0;\n\n\t\tif (count(array_intersect($user_info['groups'], $board_info['groups'])) == 0 && !$user_info['is_admin'])\n\t\t\t$board_info['error'] = 'access';\n\t\tif (!empty($modSettings['deny_boards_access']) && count(array_intersect($user_info['groups'], $board_info['deny_groups'])) != 0 && !$user_info['is_admin'])\n\t\t\t$board_info['error'] = 'access';\n\n\t\t// Build up the linktree.\n\t\t$context['linktree'] = array_merge(\n\t\t\t$context['linktree'],\n\t\t\tarray(array(\n\t\t\t\t'url' => $scripturl . '#c' . $board_info['cat']['id'],\n\t\t\t\t'name' => $board_info['cat']['name']\n\t\t\t)),\n\t\t\tarray_reverse($board_info['parent_boards']),\n\t\t\tarray(array(\n\t\t\t\t'url' => $scripturl . '?board=' . $board . '.0',\n\t\t\t\t'name' => $board_info['name']\n\t\t\t))\n\t\t);\n\t}\n\n\t// Set the template contextual information.\n\t$context['user']['is_mod'] = &$user_info['is_mod'];\n\t$context['current_topic'] = $topic;\n\t$context['current_board'] = $board;\n\n\t// No posting in redirection boards!\n\tif (!empty($_REQUEST['action']) && $_REQUEST['action'] == 'post' && !empty($board_info['redirect']))\n\t\t$board_info['error'] == 'post_in_redirect';\n\n\t// Hacker... you can't see this topic, I'll tell you that. (but moderators can!)\n\tif (!empty($board_info['error']) && (!empty($modSettings['deny_boards_access']) || $board_info['error'] != 'access' || !$user_info['is_mod']))\n\t{\n\t\t// The permissions and theme need loading, just to make sure everything goes smoothly.\n\t\tloadPermissions();\n\t\tloadTheme();\n\n\t\t$_GET['board'] = '';\n\t\t$_GET['topic'] = '';\n\n\t\t// The linktree should not give the game away mate!\n\t\t$context['linktree'] = array(\n\t\t\tarray(\n\t\t\t\t'url' => $scripturl,\n\t\t\t\t'name' => $context['forum_name_html_safe']\n\t\t\t)\n\t\t);\n\n\t\t// If it's a prefetching agent or we're requesting an attachment.\n\t\tif ((isset($_SERVER['HTTP_X_MOZ']) && $_SERVER['HTTP_X_MOZ'] == 'prefetch') || (!empty($_REQUEST['action']) && $_REQUEST['action'] === 'dlattach'))\n\t\t{\n\t\t\tob_end_clean();\n\t\t\theader('HTTP/1.1 403 Forbidden');\n\t\t\tdie;\n\t\t}\n\t\telseif ($board_info['error'] == 'post_in_redirect')\n\t\t{\n\t\t\t// Slightly different error message here...\n\t\t\tfatal_lang_error('cannot_post_redirect', false);\n\t\t}\n\t\telseif ($user_info['is_guest'])\n\t\t{\n\t\t\tloadLanguage('Errors');\n\t\t\tis_not_guest($txt['topic_gone']);\n\t\t}\n\t\telse\n\t\t\tfatal_lang_error('topic_gone', false);\n\t}\n\n\tif ($user_info['is_mod'])\n\t\t$user_info['groups'][] = 3;\n}\n\n/**\n * Load this user's permissions.\n */\nfunction loadPermissions()\n{\n\tglobal $user_info, $board, $board_info, $modSettings, $smcFunc, $sourcedir;\n\n\tif ($user_info['is_admin'])\n\t{\n\t\tbanPermissions();\n\t\treturn;\n\t}\n\n\tif (!empty($modSettings['cache_enable']))\n\t{\n\t\t$cache_groups = $user_info['groups'];\n\t\tasort($cache_groups);\n\t\t$cache_groups = implode(',', $cache_groups);\n\t\t// If it's a spider then cache it different.\n\t\tif ($user_info['possibly_robot'])\n\t\t\t$cache_groups .= '-spider';\n\n\t\tif ($modSettings['cache_enable'] >= 2 && !empty($board) && ($temp = cache_get_data('permissions:' . $cache_groups . ':' . $board, 240)) != null && time() - 240 > $modSettings['settings_updated'])\n\t\t{\n\t\t\tlist ($user_info['permissions']) = $temp;\n\t\t\tbanPermissions();\n\n\t\t\treturn;\n\t\t}\n\t\telseif (($temp = cache_get_data('permissions:' . $cache_groups, 240)) != null && time() - 240 > $modSettings['settings_updated'])\n\t\t\tlist ($user_info['permissions'], $removals) = $temp;\n\t}\n\n\t// If it is detected as a robot, and we are restricting permissions as a special group - then implement this.\n\t$spider_restrict = $user_info['possibly_robot'] && !empty($modSettings['spider_group']) ? ' OR (id_group = {int:spider_group} AND add_deny = 0)' : '';\n\n\tif (empty($user_info['permissions']))\n\t{\n\t\t// Get the general permissions.\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT permission, add_deny\n\t\t\tFROM {db_prefix}permissions\n\t\t\tWHERE id_group IN ({array_int:member_groups})\n\t\t\t\t' . $spider_restrict,\n\t\t\tarray(\n\t\t\t\t'member_groups' => $user_info['groups'],\n\t\t\t\t'spider_group' => !empty($modSettings['spider_group']) ? $modSettings['spider_group'] : 0,\n\t\t\t)\n\t\t);\n\t\t$removals = array();\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t{\n\t\t\tif (empty($row['add_deny']))\n\t\t\t\t$removals[] = $row['permission'];\n\t\t\telse\n\t\t\t\t$user_info['permissions'][] = $row['permission'];\n\t\t}\n\t\t$smcFunc['db_free_result']($request);\n\n\t\tif (isset($cache_groups))\n\t\t\tcache_put_data('permissions:' . $cache_groups, array($user_info['permissions'], $removals), 240);\n\t}\n\n\t// Get the board permissions.\n\tif (!empty($board))\n\t{\n\t\t// Make sure the board (if any) has been loaded by loadBoard().\n\t\tif (!isset($board_info['profile']))\n\t\t\tfatal_lang_error('no_board');\n\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT permission, add_deny\n\t\t\tFROM {db_prefix}board_permissions\n\t\t\tWHERE (id_group IN ({array_int:member_groups})\n\t\t\t\t' . $spider_restrict . ')\n\t\t\t\tAND id_profile = {int:id_profile}',\n\t\t\tarray(\n\t\t\t\t'member_groups' => $user_info['groups'],\n\t\t\t\t'id_profile' => $board_info['profile'],\n\t\t\t\t'spider_group' => !empty($modSettings['spider_group']) ? $modSettings['spider_group'] : 0,\n\t\t\t)\n\t\t);\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t{\n\t\t\tif (empty($row['add_deny']))\n\t\t\t\t$removals[] = $row['permission'];\n\t\t\telse\n\t\t\t\t$user_info['permissions'][] = $row['permission'];\n\t\t}\n\t\t$smcFunc['db_free_result']($request);\n\t}\n\n\t// Remove all the permissions they shouldn't have ;).\n\tif (!empty($modSettings['permission_enable_deny']))\n\t\t$user_info['permissions'] = array_diff($user_info['permissions'], $removals);\n\n\tif (isset($cache_groups) && !empty($board) && $modSettings['cache_enable'] >= 2)\n\t\tcache_put_data('permissions:' . $cache_groups . ':' . $board, array($user_info['permissions'], null), 240);\n\n\t// Banned?  Watch, don't touch..\n\tbanPermissions();\n\n\t// Load the mod cache so we can know what additional boards they should see, but no sense in doing it for guests\n\tif (!$user_info['is_guest'])\n\t{\n\t\tif (!isset($_SESSION['mc']) || $_SESSION['mc']['time'] <= $modSettings['settings_updated'])\n\t\t{\n\t\t\trequire_once($sourcedir . '/Subs-Auth.php');\n\t\t\trebuildModCache();\n\t\t}\n\t\telse\n\t\t\t$user_info['mod_cache'] = $_SESSION['mc'];\n\n\t\t// This is a useful phantom permission added to the current user, and only the current user while they are logged in.\n\t\t// For example this drastically simplifies certain changes to the profile area.\n\t\t$user_info['permissions'][] = 'is_not_guest';\n\t\t// And now some backwards compatibility stuff for mods and whatnot that aren't expecting the new permissions.\n\t\t$user_info['permissions'][] = 'profile_view_own';\n\t\tif (in_array('profile_view', $user_info['permissions']))\n\t\t\t$user_info['permissions'][] = 'profile_view_any';\n\t}\n}\n\n/**\n * Loads an array of users' data by ID or member_name.\n *\n * @param array|string $users An array of users by id or name or a single username/id\n * @param bool $is_name Whether $users contains names\n * @param string $set What kind of data to load (normal, profile, minimal)\n * @return array The ids of the members loaded\n */\nfunction loadMemberData($users, $is_name = false, $set = 'normal')\n{\n\tglobal $user_profile, $modSettings, $board_info, $smcFunc, $context;\n\tglobal $image_proxy_enabled, $image_proxy_secret, $boardurl;\n\n\t// Can't just look for no users :P.\n\tif (empty($users))\n\t\treturn array();\n\n\t// Pass the set value\n\t$context['loadMemberContext_set'] = $set;\n\n\t// Make sure it's an array.\n\t$users = !is_array($users) ? array($users) : array_unique($users);\n\t$loaded_ids = array();\n\n\tif (!$is_name && !empty($modSettings['cache_enable']) && $modSettings['cache_enable'] >= 3)\n\t{\n\t\t$users = array_values($users);\n\t\tfor ($i = 0, $n = count($users); $i < $n; $i++)\n\t\t{\n\t\t\t$data = cache_get_data('member_data-' . $set . '-' . $users[$i], 240);\n\t\t\tif ($data == null)\n\t\t\t\tcontinue;\n\n\t\t\t$loaded_ids[] = $data['id_member'];\n\t\t\t$user_profile[$data['id_member']] = $data;\n\t\t\tunset($users[$i]);\n\t\t}\n\t}\n\n\t// Used by default\n\t$select_columns = '\n\t\t\tCOALESCE(lo.log_time, 0) AS is_online, COALESCE(a.id_attach, 0) AS id_attach, a.filename, a.attachment_type,\n\t\t\tmem.signature, mem.personal_text, mem.avatar, mem.id_member, mem.member_name,\n\t\t\tmem.real_name, mem.email_address, mem.date_registered, mem.website_title, mem.website_url,\n\t\t\tmem.birthdate, mem.member_ip, mem.member_ip2, mem.posts, mem.last_login, mem.id_post_group, mem.lngfile, mem.id_group, mem.time_offset, mem.show_online,\n\t\t\tmg.online_color AS member_group_color, COALESCE(mg.group_name, {string:blank_string}) AS member_group,\n\t\t\tpg.online_color AS post_group_color, COALESCE(pg.group_name, {string:blank_string}) AS post_group,\n\t\t\tmem.is_activated, mem.warning, ' . (!empty($modSettings['titlesEnable']) ? 'mem.usertitle, ' : '') . '\n\t\t\tCASE WHEN mem.id_group = 0 OR mg.icons = {string:blank_string} THEN pg.icons ELSE mg.icons END AS icons';\n\t$select_tables = '\n\t\t\tLEFT JOIN {db_prefix}log_online AS lo ON (lo.id_member = mem.id_member)\n\t\t\tLEFT JOIN {db_prefix}attachments AS a ON (a.id_member = mem.id_member)\n\t\t\tLEFT JOIN {db_prefix}membergroups AS pg ON (pg.id_group = mem.id_post_group)\n\t\t\tLEFT JOIN {db_prefix}membergroups AS mg ON (mg.id_group = mem.id_group)';\n\n\t// We add or replace according the the set\n\tswitch ($set)\n\t{\n\t\tcase 'normal':\n\t\t\t$select_columns .= ', mem.buddy_list,  mem.additional_groups';\n\t\t\tbreak;\n\t\tcase 'profile':\n\t\t\t$select_columns .= ', mem.additional_groups, mem.id_theme, mem.pm_ignore_list, mem.pm_receive_from,\n\t\t\tmem.time_format, mem.timezone, mem.secret_question, mem.smiley_set, mem.tfa_secret,\n\t\t\tmem.total_time_logged_in, lo.url, mem.ignore_boards, mem.password_salt, mem.pm_prefs, mem.buddy_list, mem.alerts';\n\t\t\tbreak;\n\t\tcase 'minimal':\n\t\t\t$select_columns = '\n\t\t\tmem.id_member, mem.member_name, mem.real_name, mem.email_address, mem.date_registered,\n\t\t\tmem.posts, mem.last_login, mem.member_ip, mem.member_ip2, mem.lngfile, mem.id_group';\n\t\t\t$select_tables = '';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ttrigger_error('loadMemberData(): Invalid member data set \\'' . $set . '\\'', E_USER_WARNING);\n\t}\n\n\t// Allow mods to easily add to the selected member data\n\tcall_integration_hook('integrate_load_member_data', array(&$select_columns, &$select_tables, &$set));\n\n\tif (!empty($users))\n\t{\n\t\t// Load the member's data.\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT' . $select_columns . '\n\t\t\tFROM {db_prefix}members AS mem' . $select_tables . '\n\t\t\tWHERE mem.' . ($is_name ? 'member_name' : 'id_member') . ' IN ({' . ($is_name ? 'array_string' : 'array_int') . ':users})',\n\t\t\tarray(\n\t\t\t\t'blank_string' => '',\n\t\t\t\t'users' => $users,\n\t\t\t)\n\t\t);\n\t\t$new_loaded_ids = array();\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t{\n\t\t\t// Take care of proxying avatar if required, do this here for maximum reach\n\t\t\tif ($image_proxy_enabled && !empty($row['avatar']) && stripos($row['avatar'], 'http://') !== false)\n\t\t\t\t$row['avatar'] = $boardurl . '/proxy.php?request=' . urlencode($row['avatar']) . '&hash=' . md5($row['avatar'] . $image_proxy_secret);\n\n\t\t\tif ( isset($row['member_ip']) )\n\t\t\t\t$row['member_ip'] = inet_dtop($row['member_ip']);\n\t\t\tif ( isset($row['member_ip2']) )\n\t\t\t\t$row['member_ip2'] = inet_dtop($row['member_ip2']);\n\t\t\t$new_loaded_ids[] = $row['id_member'];\n\t\t\t$loaded_ids[] = $row['id_member'];\n\t\t\t$row['options'] = array();\n\t\t\t$user_profile[$row['id_member']] = $row;\n\t\t}\n\t\t$smcFunc['db_free_result']($request);\n\t}\n\n\tif (!empty($new_loaded_ids) && $set !== 'minimal')\n\t{\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT *\n\t\t\tFROM {db_prefix}themes\n\t\t\tWHERE id_member IN ({array_int:loaded_ids})',\n\t\t\tarray(\n\t\t\t\t'loaded_ids' => $new_loaded_ids,\n\t\t\t)\n\t\t);\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t\t$user_profile[$row['id_member']]['options'][$row['variable']] = $row['value'];\n\t\t$smcFunc['db_free_result']($request);\n\t}\n\n\t$additional_mods = array();\n\n\t// Are any of these users in groups assigned to moderate this board?\n\tif (!empty($loaded_ids) && !empty($board_info['moderator_groups']) && $set === 'normal')\n\t{\n\t\tforeach ($loaded_ids as $a_member)\n\t\t{\n\t\t\tif (!empty($user_profile[$a_member]['additional_groups']))\n\t\t\t\t$groups = array_merge(array($user_profile[$a_member]['id_group']), explode(',', $user_profile[$a_member]['additional_groups']));\n\t\t\telse\n\t\t\t\t$groups = array($user_profile[$a_member]['id_group']);\n\n\t\t\t$temp = array_intersect($groups, array_keys($board_info['moderator_groups']));\n\n\t\t\tif (!empty($temp))\n\t\t\t{\n\t\t\t\t$additional_mods[] = $a_member;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!empty($new_loaded_ids) && !empty($modSettings['cache_enable']) && $modSettings['cache_enable'] >= 3)\n\t{\n\t\tfor ($i = 0, $n = count($new_loaded_ids); $i < $n; $i++)\n\t\t\tcache_put_data('member_data-' . $set . '-' . $new_loaded_ids[$i], $user_profile[$new_loaded_ids[$i]], 240);\n\t}\n\n\t// Are we loading any moderators?  If so, fix their group data...\n\tif (!empty($loaded_ids) && (!empty($board_info['moderators']) || !empty($board_info['moderator_groups'])) && $set === 'normal' && count($temp_mods = array_merge(array_intersect($loaded_ids, array_keys($board_info['moderators'])), $additional_mods)) !== 0)\n\t{\n\t\tif (($row = cache_get_data('moderator_group_info', 480)) == null)\n\t\t{\n\t\t\t$request = $smcFunc['db_query']('', '\n\t\t\t\tSELECT group_name AS member_group, online_color AS member_group_color, icons\n\t\t\t\tFROM {db_prefix}membergroups\n\t\t\t\tWHERE id_group = {int:moderator_group}\n\t\t\t\tLIMIT 1',\n\t\t\t\tarray(\n\t\t\t\t\t'moderator_group' => 3,\n\t\t\t\t)\n\t\t\t);\n\t\t\t$row = $smcFunc['db_fetch_assoc']($request);\n\t\t\t$smcFunc['db_free_result']($request);\n\n\t\t\tcache_put_data('moderator_group_info', $row, 480);\n\t\t}\n\n\t\tforeach ($temp_mods as $id)\n\t\t{\n\t\t\t// By popular demand, don't show admins or global moderators as moderators.\n\t\t\tif ($user_profile[$id]['id_group'] != 1 && $user_profile[$id]['id_group'] != 2)\n\t\t\t\t$user_profile[$id]['member_group'] = $row['member_group'];\n\n\t\t\t// If the Moderator group has no color or icons, but their group does... don't overwrite.\n\t\t\tif (!empty($row['icons']))\n\t\t\t\t$user_profile[$id]['icons'] = $row['icons'];\n\t\t\tif (!empty($row['member_group_color']))\n\t\t\t\t$user_profile[$id]['member_group_color'] = $row['member_group_color'];\n\t\t}\n\t}\n\n\treturn $loaded_ids;\n}\n\n/**\n * Loads the user's basic values... meant for template/theme usage.\n *\n * @param int $user The ID of a user previously loaded by {@link loadMemberData()}\n * @param bool $display_custom_fields Whether or not to display custom profile fields\n * @return boolean Whether or not the data was loaded successfully\n */\nfunction loadMemberContext($user, $display_custom_fields = false)\n{\n\tglobal $memberContext, $user_profile, $txt, $scripturl, $user_info;\n\tglobal $context, $modSettings, $settings, $smcFunc;\n\tstatic $dataLoaded = array();\n\n\t// If this person's data is already loaded, skip it.\n\tif (isset($dataLoaded[$user]))\n\t\treturn true;\n\n\t// We can't load guests or members not loaded by loadMemberData()!\n\tif ($user == 0)\n\t\treturn false;\n\tif (!isset($user_profile[$user]))\n\t{\n\t\ttrigger_error('loadMemberContext(): member id ' . $user . ' not previously loaded by loadMemberData()', E_USER_WARNING);\n\t\treturn false;\n\t}\n\n\t// Well, it's loaded now anyhow.\n\t$dataLoaded[$user] = true;\n\t$profile = $user_profile[$user];\n\n\t// Censor everything.\n\tcensorText($profile['signature']);\n\tcensorText($profile['personal_text']);\n\n\t// Set things up to be used before hand.\n\t$profile['signature'] = str_replace(array(\"\\n\", \"\\r\"), array('<br>', ''), $profile['signature']);\n\t$profile['signature'] = parse_bbc($profile['signature'], true, 'sig' . $profile['id_member']);\n\n\t$profile['is_online'] = (!empty($profile['show_online']) || allowedTo('moderate_forum')) && $profile['is_online'] > 0;\n\t$profile['icons'] = empty($profile['icons']) ? array('', '') : explode('#', $profile['icons']);\n\t// Setup the buddy status here (One whole in_array call saved :P)\n\t$profile['buddy'] = in_array($profile['id_member'], $user_info['buddies']);\n\t$buddy_list = !empty($profile['buddy_list']) ? explode(',', $profile['buddy_list']) : array();\n\n\t//We need a little fallback for the membergroup icons. If it doesn't exist in the current theme, fallback to default theme\n\tif (isset($profile['icons'][1]) && file_exists($settings['actual_theme_dir'] . '/images/membericons/' . $profile['icons'][1])) //icon is set and exists\n\t\t$group_icon_url = $settings['images_url'] . '/membericons/' . $profile['icons'][1];\n\telseif (isset($profile['icons'][1])) //icon is set and doesn't exist, fallback to default\n\t\t$group_icon_url = $settings['default_images_url'] . '/membericons/' . $profile['icons'][1];\n\telse //not set, bye bye\n\t\t$group_icon_url = '';\n\n\t// These minimal values are always loaded\n\t$memberContext[$user] = array(\n\t\t'username' => $profile['member_name'],\n\t\t'name' => $profile['real_name'],\n\t\t'id' => $profile['id_member'],\n\t\t'href' => $scripturl . '?action=profile;u=' . $profile['id_member'],\n\t\t'link' => '<a href=\"' . $scripturl . '?action=profile;u=' . $profile['id_member'] . '\" title=\"' . $txt['profile_of'] . ' ' . $profile['real_name'] . '\" '. (!empty($modSettings['onlineEnable']) ? 'class=\"pm_icon\"' : '').'>' . $profile['real_name'] . '</a>',\n\t\t'email' => $profile['email_address'],\n\t\t'show_email' => !$user_info['is_guest'] && ($user_info['id'] == $profile['id_member'] || allowedTo('moderate_forum')),\n\t\t'registered' => empty($profile['date_registered']) ? $txt['not_applicable'] : timeformat($profile['date_registered']),\n\t\t'registered_timestamp' => empty($profile['date_registered']) ? 0 : forum_time(true, $profile['date_registered']),\n\t);\n\n\t// If the set isn't minimal then load the monstrous array.\n\tif ($context['loadMemberContext_set'] != 'minimal')\n\t\t$memberContext[$user] += array(\n\t\t\t'username_color' => '<span '. (!empty($profile['member_group_color']) ? 'style=\"color:'. $profile['member_group_color'] .';\"' : '') .'>'. $profile['member_name'] .'</span>',\n\t\t\t'name_color' => '<span '. (!empty($profile['member_group_color']) ? 'style=\"color:'. $profile['member_group_color'] .';\"' : '') .'>'. $profile['real_name'] .'</span>',\n\t\t\t'link_color' => '<a href=\"' . $scripturl . '?action=profile;u=' . $profile['id_member'] . '\" title=\"' . $txt['profile_of'] . ' ' . $profile['real_name'] . '\" '. (!empty($profile['member_group_color']) ? 'style=\"color:'. $profile['member_group_color'] .';\"' : '') .'>' . $profile['real_name'] . '</a>',\n\t\t\t'is_buddy' => $profile['buddy'],\n\t\t\t'is_reverse_buddy' => in_array($user_info['id'], $buddy_list),\n\t\t\t'buddies' => $buddy_list,\n\t\t\t'title' => !empty($modSettings['titlesEnable']) ? $profile['usertitle'] : '',\n\t\t\t'blurb' => $profile['personal_text'],\n\t\t\t'website' => array(\n\t\t\t\t'title' => $profile['website_title'],\n\t\t\t\t'url' => $profile['website_url'],\n\t\t\t),\n\t\t\t'birth_date' => empty($profile['birthdate']) || $profile['birthdate'] === '0001-01-01' ? '0000-00-00' : (substr($profile['birthdate'], 0, 4) === '0004' ? '0000' . substr($profile['birthdate'], 4) : $profile['birthdate']),\n\t\t\t'signature' => $profile['signature'],\n\t\t\t'real_posts' => $profile['posts'],\n\t\t\t'posts' => $profile['posts'] > 500000 ? $txt['geek'] : comma_format($profile['posts']),\n\t\t\t'last_login' => empty($profile['last_login']) ? $txt['never'] : timeformat($profile['last_login']),\n\t\t\t'last_login_timestamp' => empty($profile['last_login']) ? 0 : forum_time(0, $profile['last_login']),\n\t\t\t'ip' => $smcFunc['htmlspecialchars']($profile['member_ip']),\n\t\t\t'ip2' => $smcFunc['htmlspecialchars']($profile['member_ip2']),\n\t\t\t'online' => array(\n\t\t\t\t'is_online' => $profile['is_online'],\n\t\t\t\t'text' => $smcFunc['htmlspecialchars']($txt[$profile['is_online'] ? 'online' : 'offline']),\n\t\t\t\t'member_online_text' => sprintf($txt[$profile['is_online'] ? 'member_is_online' : 'member_is_offline'], $smcFunc['htmlspecialchars']($profile['real_name'])),\n\t\t\t\t'href' => $scripturl . '?action=pm;sa=send;u=' . $profile['id_member'],\n\t\t\t\t'link' => '<a href=\"' . $scripturl . '?action=pm;sa=send;u=' . $profile['id_member'] . '\">' . $txt[$profile['is_online'] ? 'online' : 'offline'] . '</a>',\n\t\t\t\t'label' => $txt[$profile['is_online'] ? 'online' : 'offline']\n\t\t\t),\n\t\t\t'language' => $smcFunc['ucwords'](strtr($profile['lngfile'], array('_' => ' ', '-utf8' => ''))),\n\t\t\t'is_activated' => isset($profile['is_activated']) ? $profile['is_activated'] : 1,\n\t\t\t'is_banned' => isset($profile['is_activated']) ? $profile['is_activated'] >= 10 : 0,\n\t\t\t'options' => $profile['options'],\n\t\t\t'is_guest' => false,\n\t\t\t'group' => $profile['member_group'],\n\t\t\t'group_color' => $profile['member_group_color'],\n\t\t\t'group_id' => $profile['id_group'],\n\t\t\t'post_group' => $profile['post_group'],\n\t\t\t'post_group_color' => $profile['post_group_color'],\n\t\t\t'group_icons' => str_repeat('<img src=\"' . str_replace('$language', $context['user']['language'], isset($profile['icons'][1]) ? $group_icon_url : '') . '\" alt=\"*\">', empty($profile['icons'][0]) || empty($profile['icons'][1]) ? 0 : $profile['icons'][0]),\n\t\t\t'warning' => $profile['warning'],\n\t\t\t'warning_status' => !empty($modSettings['warning_mute']) && $modSettings['warning_mute'] <= $profile['warning'] ? 'mute' : (!empty($modSettings['warning_moderate']) && $modSettings['warning_moderate'] <= $profile['warning'] ? 'moderate' : (!empty($modSettings['warning_watch']) && $modSettings['warning_watch'] <= $profile['warning'] ? 'watch' : (''))),\n\t\t\t'local_time' => timeformat(time() + ($profile['time_offset'] - $user_info['time_offset']) * 3600, false),\n\t\t\t'custom_fields' => array(),\n\t\t);\n\n\t// If the set isn't minimal then load their avatar as well.\n\tif ($context['loadMemberContext_set'] != 'minimal')\n\t{\n\t\tif (!empty($modSettings['gravatarOverride']) || (!empty($modSettings['gravatarEnabled']) && stristr($profile['avatar'], 'gravatar://')))\n\t\t{\n\t\t\tif (!empty($modSettings['gravatarAllowExtraEmail']) && stristr($profile['avatar'], 'gravatar://') && strlen($profile['avatar']) > 11)\n\t\t\t\t$image = get_gravatar_url($smcFunc['substr']($profile['avatar'], 11));\n\t\t\telse\n\t\t\t\t$image = get_gravatar_url($profile['email_address']);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// So it's stored in the member table?\n\t\t\tif (!empty($profile['avatar']))\n\t\t\t{\n\t\t\t\t$image = (stristr($profile['avatar'], 'http://') || stristr($profile['avatar'], 'https://')) ? $profile['avatar'] : $modSettings['avatar_url'] . '/' . $profile['avatar'];\n\t\t\t}\n\t\t\telseif (!empty($profile['filename']))\n\t\t\t\t$image = $modSettings['custom_avatar_url'] . '/' . $profile['filename'];\n\t\t\t// Right... no avatar...use the default one\n\t\t\telse\n\t\t\t\t$image = $modSettings['avatar_url'] . '/default.png';\n\t\t}\n\t\tif (!empty($image))\n\t\t\t$memberContext[$user]['avatar'] = array(\n\t\t\t\t'name' => $profile['avatar'],\n\t\t\t\t'image' => '<img class=\"avatar\" src=\"' . $image . '\" alt=\"avatar_'. $profile['member_name'].'\">',\n\t\t\t\t'href' => $image,\n\t\t\t\t'url' => $image,\n\t\t\t);\n\t}\n\n\t// Are we also loading the members custom fields into context?\n\tif ($display_custom_fields && !empty($modSettings['displayFields']))\n\t{\n\t\t$memberContext[$user]['custom_fields'] = array();\n\n\t\tif (!isset($context['display_fields']))\n\t\t\t$context['display_fields'] = smf_json_decode($modSettings['displayFields'], true);\n\n\t\tforeach ($context['display_fields'] as $custom)\n\t\t{\n\t\t\tif (!isset($custom['col_name']) || trim($custom['col_name']) == '' || empty($profile['options'][$custom['col_name']]))\n\t\t\t\tcontinue;\n\n\t\t\t$value = $profile['options'][$custom['col_name']];\n\n\t\t\t// Don't show the \"disabled\" option for the \"gender\" field.\n\t\t\tif ($custom['col_name'] == 'cust_gender' && $value == 'Disabled')\n\t\t\t\tcontinue;\n\n\t\t\t// BBC?\n\t\t\tif ($custom['bbc'])\n\t\t\t\t$value = parse_bbc($value);\n\t\t\t// ... or checkbox?\n\t\t\telseif (isset($custom['type']) && $custom['type'] == 'check')\n\t\t\t\t$value = $value ? $txt['yes'] : $txt['no'];\n\n\t\t\t// Enclosing the user input within some other text?\n\t\t\tif (!empty($custom['enclose']))\n\t\t\t\t$value = strtr($custom['enclose'], array(\n\t\t\t\t\t'{SCRIPTURL}' => $scripturl,\n\t\t\t\t\t'{IMAGES_URL}' => $settings['images_url'],\n\t\t\t\t\t'{DEFAULT_IMAGES_URL}' => $settings['default_images_url'],\n\t\t\t\t\t'{INPUT}' => $value,\n\t\t\t\t));\n\n\t\t\t$memberContext[$user]['custom_fields'][] = array(\n\t\t\t\t'title' => !empty($custom['title']) ? $custom['title'] : $custom['col_name'],\n\t\t\t\t'col_name' => $custom['col_name'],\n\t\t\t\t'value' => un_htmlspecialchars($value),\n\t\t\t\t'placement' => !empty($custom['placement']) ? $custom['placement'] : 0,\n\t\t\t);\n\t\t}\n\t}\n\n\tcall_integration_hook('integrate_member_context', array(&$memberContext[$user], $user, $display_custom_fields));\n\treturn true;\n}\n\n/**\n * Loads the user's custom profile fields\n *\n * @param integer|array $users A single user ID or an array of user IDs\n * @param string|array $params Either a string or an array of strings with profile field names\n * @return array|boolean An array of data about the fields and their values or false if nothing was loaded\n */\nfunction loadMemberCustomFields($users, $params)\n{\n\tglobal $smcFunc, $txt, $scripturl, $settings;\n\n\t// Do not waste my time...\n\tif (empty($users) || empty($params))\n\t\treturn false;\n\n\t// Make sure it's an array.\n\t$users = !is_array($users) ? array($users) : array_unique($users);\n\t$params = !is_array($params) ? array($params) : array_unique($params);\n\t$return = array();\n\n\t$request = $smcFunc['db_query']('', '\n\t\tSELECT c.id_field, c.col_name, c.field_name, c.field_desc, c.field_type, c.field_order, c.field_length, c.field_options, c.mask, show_reg,\n\t\tc.show_display, c.show_profile, c.private, c.active, c.bbc, c.can_search, c.default_value, c.enclose, c.placement, t.variable, t.value, t.id_member\n\t\tFROM {db_prefix}themes AS t\n\t\t\tLEFT JOIN {db_prefix}custom_fields AS c ON (c.col_name = t.variable)\n\t\tWHERE id_member IN ({array_int:loaded_ids})\n\t\t\tAND variable IN ({array_string:params})\n\t\tORDER BY field_order',\n\t\tarray(\n\t\t\t'loaded_ids' => $users,\n\t\t\t'params' => $params,\n\t\t)\n\t);\n\n\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t{\n\t\t// BBC?\n\t\tif (!empty($row['bbc']))\n\t\t\t$row['value'] = parse_bbc($row['value']);\n\n\t\t// ... or checkbox?\n\t\telseif (isset($row['type']) && $row['type'] == 'check')\n\t\t\t$row['value'] = !empty($row['value']) ? $txt['yes'] : $txt['no'];\n\n\t\t// Enclosing the user input within some other text?\n\t\tif (!empty($row['enclose']))\n\t\t\t$row['value'] = strtr($row['enclose'], array(\n\t\t\t\t'{SCRIPTURL}' => $scripturl,\n\t\t\t\t'{IMAGES_URL}' => $settings['images_url'],\n\t\t\t\t'{DEFAULT_IMAGES_URL}' => $settings['default_images_url'],\n\t\t\t\t'{INPUT}' => un_htmlspecialchars($row['value']),\n\t\t\t));\n\n\t\t// Send a simple array if there is just 1 param\n\t\tif (count($params) == 1)\n\t\t\t$return[$row['id_member']] = $row;\n\n\t\t// More than 1? knock yourself out...\n\t\telse\n\t\t{\n\t\t\tif (!isset($return[$row['id_member']]))\n\t\t\t\t$return[$row['id_member']] = array();\n\n\t\t\t$return[$row['id_member']][$row['variable']] = $row;\n\t\t}\n\t}\n\n\t$smcFunc['db_free_result']($request);\n\n\treturn !empty($return) ? $return : false;\n}\n\n/**\n * Loads information about what browser the user is viewing with and places it in $context\n *  - uses the class from {@link Class-BrowserDetect.php}\n */\nfunction detectBrowser()\n{\n\t// Load the current user's browser of choice\n\t$detector = new browser_detector;\n\t$detector->detectBrowser();\n}\n\n/**\n * Are we using this browser?\n *\n * Wrapper function for detectBrowser\n * @param string $browser The browser we are checking for.\n * @return bool Whether or not the current browser is what we're looking for\n*/\nfunction isBrowser($browser)\n{\n\tglobal $context;\n\n\t// Don't know any browser!\n\tif (empty($context['browser']))\n\t\tdetectBrowser();\n\n\treturn !empty($context['browser'][$browser]) || !empty($context['browser']['is_' . $browser]) ? true : false;\n}\n\n/**\n * Load a theme, by ID.\n *\n * @param int $id_theme The ID of the theme to load\n * @param bool $initialize Whether or not to initialize a bunch of theme-related variables/settings\n */\nfunction loadTheme($id_theme = 0, $initialize = true)\n{\n\tglobal $user_info, $user_settings, $board_info, $boarddir, $maintenance;\n\tglobal $txt, $boardurl, $scripturl, $mbname, $modSettings;\n\tglobal $context, $settings, $options, $sourcedir, $ssi_theme, $smcFunc, $language, $board, $image_proxy_enabled;\n\n\t// The theme was specified by parameter.\n\tif (!empty($id_theme))\n\t\t$id_theme = (int) $id_theme;\n\t// The theme was specified by REQUEST.\n\telseif (!empty($_REQUEST['theme']) && (!empty($modSettings['theme_allow']) || allowedTo('admin_forum')))\n\t{\n\t\t$id_theme = (int) $_REQUEST['theme'];\n\t\t$_SESSION['id_theme'] = $id_theme;\n\t}\n\t// The theme was specified by REQUEST... previously.\n\telseif (!empty($_SESSION['id_theme']) && (!empty($modSettings['theme_allow']) || allowedTo('admin_forum')))\n\t\t$id_theme = (int) $_SESSION['id_theme'];\n\t// The theme is just the user's choice. (might use ?board=1;theme=0 to force board theme.)\n\telseif (!empty($user_info['theme']) && !isset($_REQUEST['theme']))\n\t\t$id_theme = $user_info['theme'];\n\t// The theme was specified by the board.\n\telseif (!empty($board_info['theme']))\n\t\t$id_theme = $board_info['theme'];\n\t// The theme is the forum's default.\n\telse\n\t\t$id_theme = $modSettings['theme_guests'];\n\n\t// Verify the id_theme... no foul play.\n\t// Always allow the board specific theme, if they are overriding.\n\tif (!empty($board_info['theme']) && $board_info['override_theme'])\n\t\t$id_theme = $board_info['theme'];\n\t// If they have specified a particular theme to use with SSI allow it to be used.\n\telseif (!empty($ssi_theme) && $id_theme == $ssi_theme)\n\t\t$id_theme = (int) $id_theme;\n\telseif (!empty($modSettings['enableThemes']) && !allowedTo('admin_forum'))\n\t{\n\t\t$themes = explode(',', $modSettings['enableThemes']);\n\t\tif (!in_array($id_theme, $themes))\n\t\t\t$id_theme = $modSettings['theme_guests'];\n\t\telse\n\t\t\t$id_theme = (int) $id_theme;\n\t}\n\telse\n\t\t$id_theme = (int) $id_theme;\n\n\t$member = empty($user_info['id']) ? -1 : $user_info['id'];\n\n\t// Disable image proxy if we don't have SSL enabled\n\tif (empty($modSettings['force_ssl']) || $modSettings['force_ssl'] < 2)\n\t\t$image_proxy_enabled = false;\n\n\tif (!empty($modSettings['cache_enable']) && $modSettings['cache_enable'] >= 2 && ($temp = cache_get_data('theme_settings-' . $id_theme . ':' . $member, 60)) != null && time() - 60 > $modSettings['settings_updated'])\n\t{\n\t\t$themeData = $temp;\n\t\t$flag = true;\n\t}\n\telseif (($temp = cache_get_data('theme_settings-' . $id_theme, 90)) != null && time() - 60 > $modSettings['settings_updated'])\n\t\t$themeData = $temp + array($member => array());\n\telse\n\t\t$themeData = array(-1 => array(), 0 => array(), $member => array());\n\n\tif (empty($flag))\n\t{\n\t\t// Load variables from the current or default theme, global or this user's.\n\t\t$result = $smcFunc['db_query']('', '\n\t\t\tSELECT variable, value, id_member, id_theme\n\t\t\tFROM {db_prefix}themes\n\t\t\tWHERE id_member' . (empty($themeData[0]) ? ' IN (-1, 0, {int:id_member})' : ' = {int:id_member}') . '\n\t\t\t\tAND id_theme' . ($id_theme == 1 ? ' = {int:id_theme}' : ' IN ({int:id_theme}, 1)'),\n\t\t\tarray(\n\t\t\t\t'id_theme' => $id_theme,\n\t\t\t\t'id_member' => $member,\n\t\t\t)\n\t\t);\n\t\t// Pick between $settings and $options depending on whose data it is.\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($result))\n\t\t{\n\t\t\t// There are just things we shouldn't be able to change as members.\n\t\t\tif ($row['id_member'] != 0 && in_array($row['variable'], array('actual_theme_url', 'actual_images_url', 'base_theme_dir', 'base_theme_url', 'default_images_url', 'default_theme_dir', 'default_theme_url', 'default_template', 'images_url', 'number_recent_posts', 'smiley_sets_default', 'theme_dir', 'theme_id', 'theme_layers', 'theme_templates', 'theme_url')))\n\t\t\t\tcontinue;\n\n\t\t\t// If this is the theme_dir of the default theme, store it.\n\t\t\tif (in_array($row['variable'], array('theme_dir', 'theme_url', 'images_url')) && $row['id_theme'] == '1' && empty($row['id_member']))\n\t\t\t\t$themeData[0]['default_' . $row['variable']] = $row['value'];\n\n\t\t\t// If this isn't set yet, is a theme option, or is not the default theme..\n\t\t\tif (!isset($themeData[$row['id_member']][$row['variable']]) || $row['id_theme'] != '1')\n\t\t\t\t$themeData[$row['id_member']][$row['variable']] = substr($row['variable'], 0, 5) == 'show_' ? $row['value'] == '1' : $row['value'];\n\t\t}\n\t\t$smcFunc['db_free_result']($result);\n\n\t\tif (!empty($themeData[-1]))\n\t\t\tforeach ($themeData[-1] as $k => $v)\n\t\t\t{\n\t\t\t\tif (!isset($themeData[$member][$k]))\n\t\t\t\t\t$themeData[$member][$k] = $v;\n\t\t\t}\n\n\t\tif (!empty($modSettings['cache_enable']) && $modSettings['cache_enable'] >= 2)\n\t\t\tcache_put_data('theme_settings-' . $id_theme . ':' . $member, $themeData, 60);\n\t\t// Only if we didn't already load that part of the cache...\n\t\telseif (!isset($temp))\n\t\t\tcache_put_data('theme_settings-' . $id_theme, array(-1 => $themeData[-1], 0 => $themeData[0]), 90);\n\t}\n\n\t$settings = $themeData[0];\n\t$options = $themeData[$member];\n\n\t$settings['theme_id'] = $id_theme;\n\n\t$settings['actual_theme_url'] = $settings['theme_url'];\n\t$settings['actual_images_url'] = $settings['images_url'];\n\t$settings['actual_theme_dir'] = $settings['theme_dir'];\n\n\t$settings['template_dirs'] = array();\n\t// This theme first.\n\t$settings['template_dirs'][] = $settings['theme_dir'];\n\n\t// Based on theme (if there is one).\n\tif (!empty($settings['base_theme_dir']))\n\t\t$settings['template_dirs'][] = $settings['base_theme_dir'];\n\n\t// Lastly the default theme.\n\tif ($settings['theme_dir'] != $settings['default_theme_dir'])\n\t\t$settings['template_dirs'][] = $settings['default_theme_dir'];\n\n\tif (!$initialize)\n\t\treturn;\n\n\t// Check to see if we're forcing SSL\n\tif (!empty($modSettings['force_ssl']) && $modSettings['force_ssl'] == 2 && empty($maintenance) &&\n\t\t(!isset($_SERVER['HTTPS']) || $_SERVER['HTTPS'] == 'off') && SMF != 'SSI')\n\t\tredirectexit(strtr($_SERVER['REQUEST_URL'], array('http://' => 'https://')));\n\n\t// Check to see if they're accessing it from the wrong place.\n\tif (isset($_SERVER['HTTP_HOST']) || isset($_SERVER['SERVER_NAME']))\n\t{\n\t\t$detected_url = isset($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) == 'on' ? 'https://' : 'http://';\n\t\t$detected_url .= empty($_SERVER['HTTP_HOST']) ? $_SERVER['SERVER_NAME'] . (empty($_SERVER['SERVER_PORT']) || $_SERVER['SERVER_PORT'] == '80' ? '' : ':' . $_SERVER['SERVER_PORT']) : $_SERVER['HTTP_HOST'];\n\t\t$temp = preg_replace('~/' . basename($scripturl) . '(/.+)?$~', '', strtr(dirname($_SERVER['PHP_SELF']), '\\\\', '/'));\n\t\tif ($temp != '/')\n\t\t\t$detected_url .= $temp;\n\t}\n\tif (isset($detected_url) && $detected_url != $boardurl)\n\t{\n\t\t// Try #1 - check if it's in a list of alias addresses.\n\t\tif (!empty($modSettings['forum_alias_urls']))\n\t\t{\n\t\t\t$aliases = explode(',', $modSettings['forum_alias_urls']);\n\n\t\t\tforeach ($aliases as $alias)\n\t\t\t{\n\t\t\t\t// Rip off all the boring parts, spaces, etc.\n\t\t\t\tif ($detected_url == trim($alias) || strtr($detected_url, array('http://' => '', 'https://' => '')) == trim($alias))\n\t\t\t\t\t$do_fix = true;\n\t\t\t}\n\t\t}\n\n\t\t// Hmm... check #2 - is it just different by a www?  Send them to the correct place!!\n\t\tif (empty($do_fix) && strtr($detected_url, array('://' => '://www.')) == $boardurl && (empty($_GET) || count($_GET) == 1) && SMF != 'SSI')\n\t\t{\n\t\t\t// Okay, this seems weird, but we don't want an endless loop - this will make $_GET not empty ;).\n\t\t\tif (empty($_GET))\n\t\t\t\tredirectexit('wwwRedirect');\n\t\t\telse\n\t\t\t{\n\t\t\t\tlist ($k, $v) = each($_GET);\n\n\t\t\t\tif ($k != 'wwwRedirect')\n\t\t\t\t\tredirectexit('wwwRedirect;' . $k . '=' . $v);\n\t\t\t}\n\t\t}\n\n\t\t// #3 is just a check for SSL...\n\t\tif (strtr($detected_url, array('https://' => 'http://')) == $boardurl)\n\t\t\t$do_fix = true;\n\n\t\t// Okay, #4 - perhaps it's an IP address?  We're gonna want to use that one, then. (assuming it's the IP or something...)\n\t\tif (!empty($do_fix) || preg_match('~^http[s]?://(?:[\\d\\.:]+|\\[[\\d:]+\\](?::\\d+)?)(?:$|/)~', $detected_url) == 1)\n\t\t{\n\t\t\t// Caching is good ;).\n\t\t\t$oldurl = $boardurl;\n\n\t\t\t// Fix $boardurl and $scripturl.\n\t\t\t$boardurl = $detected_url;\n\t\t\t$scripturl = strtr($scripturl, array($oldurl => $boardurl));\n\t\t\t$_SERVER['REQUEST_URL'] = strtr($_SERVER['REQUEST_URL'], array($oldurl => $boardurl));\n\n\t\t\t// Fix the theme urls...\n\t\t\t$settings['theme_url'] = strtr($settings['theme_url'], array($oldurl => $boardurl));\n\t\t\t$settings['default_theme_url'] = strtr($settings['default_theme_url'], array($oldurl => $boardurl));\n\t\t\t$settings['actual_theme_url'] = strtr($settings['actual_theme_url'], array($oldurl => $boardurl));\n\t\t\t$settings['images_url'] = strtr($settings['images_url'], array($oldurl => $boardurl));\n\t\t\t$settings['default_images_url'] = strtr($settings['default_images_url'], array($oldurl => $boardurl));\n\t\t\t$settings['actual_images_url'] = strtr($settings['actual_images_url'], array($oldurl => $boardurl));\n\n\t\t\t// And just a few mod settings :).\n\t\t\t$modSettings['smileys_url'] = strtr($modSettings['smileys_url'], array($oldurl => $boardurl));\n\t\t\t$modSettings['avatar_url'] = strtr($modSettings['avatar_url'], array($oldurl => $boardurl));\n\n\t\t\t// Clean up after loadBoard().\n\t\t\tif (isset($board_info['moderators']))\n\t\t\t{\n\t\t\t\tforeach ($board_info['moderators'] as $k => $dummy)\n\t\t\t\t{\n\t\t\t\t\t$board_info['moderators'][$k]['href'] = strtr($dummy['href'], array($oldurl => $boardurl));\n\t\t\t\t\t$board_info['moderators'][$k]['link'] = strtr($dummy['link'], array('\"' . $oldurl => '\"' . $boardurl));\n\t\t\t\t}\n\t\t\t}\n\t\t\tforeach ($context['linktree'] as $k => $dummy)\n\t\t\t\t$context['linktree'][$k]['url'] = strtr($dummy['url'], array($oldurl => $boardurl));\n\t\t}\n\t}\n\t// Set up the contextual user array.\n\tif (!empty($user_info))\n\t{\n\t\t$context['user'] = array(\n\t\t\t'id' => $user_info['id'],\n\t\t\t'is_logged' => !$user_info['is_guest'],\n\t\t\t'is_guest' => &$user_info['is_guest'],\n\t\t\t'is_admin' => &$user_info['is_admin'],\n\t\t\t'is_mod' => &$user_info['is_mod'],\n\t\t\t// A user can mod if they have permission to see the mod center, or they are a board/group/approval moderator.\n\t\t\t'can_mod' => allowedTo('access_mod_center') || (!$user_info['is_guest'] && ($user_info['mod_cache']['gq'] != '0=1' || $user_info['mod_cache']['bq'] != '0=1' || ($modSettings['postmod_active'] && !empty($user_info['mod_cache']['ap'])))),\n\t\t\t'username' => $user_info['username'],\n\t\t\t'language' => $user_info['language'],\n\t\t\t'email' => $user_info['email'],\n\t\t\t'ignoreusers' => $user_info['ignoreusers'],\n\t\t);\n\t\tif (!$context['user']['is_guest'])\n\t\t\t$context['user']['name'] = $user_info['name'];\n\t\telseif ($context['user']['is_guest'] && !empty($txt['guest_title']))\n\t\t\t$context['user']['name'] = $txt['guest_title'];\n\n\t\t// Determine the current smiley set.\n\t\t$user_info['smiley_set'] = (!in_array($user_info['smiley_set'], explode(',', $modSettings['smiley_sets_known'])) && $user_info['smiley_set'] != 'none') || empty($modSettings['smiley_sets_enable']) ? (!empty($settings['smiley_sets_default']) ? $settings['smiley_sets_default'] : $modSettings['smiley_sets_default']) : $user_info['smiley_set'];\n\t\t$context['user']['smiley_set'] = $user_info['smiley_set'];\n\t}\n\telse\n\t{\n\t\t$context['user'] = array(\n\t\t\t'id' => -1,\n\t\t\t'is_logged' => false,\n\t\t\t'is_guest' => true,\n\t\t\t'is_mod' => false,\n\t\t\t'can_mod' => false,\n\t\t\t'name' => $txt['guest_title'],\n\t\t\t'language' => $language,\n\t\t\t'email' => '',\n\t\t\t'ignoreusers' => array(),\n\t\t);\n\t}\n\n\t// Some basic information...\n\tif (!isset($context['html_headers']))\n\t\t$context['html_headers'] = '';\n\tif (!isset($context['javascript_files']))\n\t\t$context['javascript_files'] = array();\n\tif (!isset($context['css_files']))\n\t\t$context['css_files'] = array();\n\tif (!isset($context['css_header']))\n\t\t$context['css_header'] = array();\n\tif (!isset($context['javascript_inline']))\n\t\t$context['javascript_inline'] = array('standard' => array(), 'defer' => array());\n\tif (!isset($context['javascript_vars']))\n\t\t$context['javascript_vars'] = array();\n\n\t$context['login_url'] = (!empty($modSettings['force_ssl']) && $modSettings['force_ssl'] < 2 ? strtr($scripturl, array('http://' => 'https://')) : $scripturl) . '?action=login2';\n\t$context['menu_separator'] = !empty($settings['use_image_buttons']) ? ' ' : ' | ';\n\t$context['session_var'] = $_SESSION['session_var'];\n\t$context['session_id'] = $_SESSION['session_value'];\n\t$context['forum_name'] = $mbname;\n\t$context['forum_name_html_safe'] = $smcFunc['htmlspecialchars']($context['forum_name']);\n\t$context['header_logo_url_html_safe'] = empty($settings['header_logo_url']) ? '' : $smcFunc['htmlspecialchars']($settings['header_logo_url']);\n\t$context['current_action'] = isset($_REQUEST['action']) ? $smcFunc['htmlspecialchars']($_REQUEST['action']) : null;\n\t$context['current_subaction'] = isset($_REQUEST['sa']) ? $_REQUEST['sa'] : null;\n\t$context['can_register'] = empty($modSettings['registration_method']) || $modSettings['registration_method'] != 3;\n\tif (isset($modSettings['load_average']))\n\t\t$context['load_average'] = $modSettings['load_average'];\n\n\t// Detect the browser. This is separated out because it's also used in attachment downloads\n\tdetectBrowser();\n\n\t// Set the top level linktree up.\n\tarray_unshift($context['linktree'], array(\n\t\t'url' => $scripturl,\n\t\t'name' => $context['forum_name_html_safe']\n\t));\n\n\t// This allows sticking some HTML on the page output - useful for controls.\n\t$context['insert_after_template'] = '';\n\n\tif (!isset($txt))\n\t\t$txt = array();\n\n\t$simpleActions = array(\n\t\t'findmember',\n\t\t'helpadmin',\n\t\t'printpage',\n\t\t'spellcheck',\n\t);\n\n\t// Parent action => array of areas\n\t$simpleAreas = array(\n\t\t'profile' => array('popup', 'alerts_popup',),\n\t);\n\n\t// Parent action => array of subactions\n\t$simpleSubActions = array(\n\t\t'pm' => array('popup',),\n\t);\n\n\t// Actions that specifically uses XML output.\n\t$xmlActions = array(\n\t\t'quotefast',\n\t\t'jsmodify',\n\t\t'xmlhttp',\n\t);\n\n\tcall_integration_hook('integrate_simple_actions', array(&$simpleActions, &$simpleAreas, &$simpleSubActions, &$xmlActions));\n\n\t$context['simple_action'] = in_array($context['current_action'], $simpleActions) ||\n\t(isset($simpleAreas[$context['current_action']]) && isset($_REQUEST['area']) && in_array($_REQUEST['area'], $simpleAreas[$context['current_action']])) ||\n\t(isset($simpleSubActions[$context['current_action']]) && in_array($context['current_subaction'], $simpleSubActions[$context['current_action']]));\n\n\t// Output is fully XML, so no need for the index template.\n\tif (isset($_REQUEST['xml']) && in_array($context['current_action'], $xmlActions))\n\t{\n\t\tloadLanguage('index+Modifications');\n\t\tloadTemplate('Xml');\n\t\t$context['template_layers'] = array();\n\t}\n\n\t// These actions don't require the index template at all.\n\telseif (!empty($context['simple_action']))\n\t{\n\t\tloadLanguage('index+Modifications');\n\t\t$context['template_layers'] = array();\n\t}\n\n\telse\n\t{\n\t\t// Custom templates to load, or just default?\n\t\tif (isset($settings['theme_templates']))\n\t\t\t$templates = explode(',', $settings['theme_templates']);\n\t\telse\n\t\t\t$templates = array('index');\n\n\t\t// Load each template...\n\t\tforeach ($templates as $template)\n\t\t\tloadTemplate($template);\n\n\t\t// ...and attempt to load their associated language files.\n\t\t$required_files = implode('+', array_merge($templates, array('Modifications')));\n\t\tloadLanguage($required_files, '', false);\n\n\t\t// Custom template layers?\n\t\tif (isset($settings['theme_layers']))\n\t\t\t$context['template_layers'] = explode(',', $settings['theme_layers']);\n\t\telse\n\t\t\t$context['template_layers'] = array('html', 'body');\n\t}\n\n\t// Initialize the theme.\n\tloadSubTemplate('init', 'ignore');\n\n\t// Allow overriding the board wide time/number formats.\n\tif (empty($user_settings['time_format']) && !empty($txt['time_format']))\n\t\t$user_info['time_format'] = $txt['time_format'];\n\n\t// Set the character set from the template.\n\t$context['character_set'] = empty($modSettings['global_character_set']) ? $txt['lang_character_set'] : $modSettings['global_character_set'];\n\t$context['utf8'] = $context['character_set'] === 'UTF-8';\n\t$context['right_to_left'] = !empty($txt['lang_rtl']);\n\n\t// Guests may still need a name.\n\tif ($context['user']['is_guest'] && empty($context['user']['name']))\n\t\t$context['user']['name'] = $txt['guest_title'];\n\n\t// Any theme-related strings that need to be loaded?\n\tif (!empty($settings['require_theme_strings']))\n\t\tloadLanguage('ThemeStrings', '', false);\n\n\t// Make a special URL for the language.\n\t$settings['lang_images_url'] = $settings['images_url'] . '/' . (!empty($txt['image_lang']) ? $txt['image_lang'] : $user_info['language']);\n\n\t// And of course, let's load the default CSS file.\n\tloadCSSFile('index.css', array('minimize' => true), 'smf_index');\n\n\t// Here is my luvly Responsive CSS\n\tloadCSSFile('responsive.css', array('force_current' => false, 'validate' => true, 'minimize' => true), 'smf_responsive');\n\n\tif ($context['right_to_left'])\n\t\tloadCSSFile('rtl.css', array(), 'smf_rtl');\n\n\t// We allow theme variants, because we're cool.\n\t$context['theme_variant'] = '';\n\t$context['theme_variant_url'] = '';\n\tif (!empty($settings['theme_variants']))\n\t{\n\t\t// Overriding - for previews and that ilk.\n\t\tif (!empty($_REQUEST['variant']))\n\t\t\t$_SESSION['id_variant'] = $_REQUEST['variant'];\n\t\t// User selection?\n\t\tif (empty($settings['disable_user_variant']) || allowedTo('admin_forum'))\n\t\t\t$context['theme_variant'] = !empty($_SESSION['id_variant']) ? $_SESSION['id_variant'] : (!empty($options['theme_variant']) ? $options['theme_variant'] : '');\n\t\t// If not a user variant, select the default.\n\t\tif ($context['theme_variant'] == '' || !in_array($context['theme_variant'], $settings['theme_variants']))\n\t\t\t$context['theme_variant'] = !empty($settings['default_variant']) && in_array($settings['default_variant'], $settings['theme_variants']) ? $settings['default_variant'] : $settings['theme_variants'][0];\n\n\t\t// Do this to keep things easier in the templates.\n\t\t$context['theme_variant'] = '_' . $context['theme_variant'];\n\t\t$context['theme_variant_url'] = $context['theme_variant'] . '/';\n\n\t\tif (!empty($context['theme_variant']))\n\t\t{\n\t\t\tloadCSSFile('index' . $context['theme_variant'] . '.css', array(), 'smf_index' . $context['theme_variant']);\n\t\t\tif ($context['right_to_left'])\n\t\t\t\tloadCSSFile('rtl' . $context['theme_variant'] . '.css', array(), 'smf_rtl' . $context['theme_variant']);\n\t\t}\n\t}\n\n\t// Let's be compatible with old themes!\n\tif (!function_exists('template_html_above') && in_array('html', $context['template_layers']))\n\t\t$context['template_layers'] = array('main');\n\n\t$context['tabindex'] = 1;\n\n\t// Compatibility.\n\tif (!isset($settings['theme_version']))\n\t\t$modSettings['memberCount'] = $modSettings['totalMembers'];\n\n\t// Default JS variables for use in every theme\n\t$context['javascript_vars'] = array(\n\t\t'smf_theme_url' => '\"' . $settings['theme_url'] . '\"',\n\t\t'smf_default_theme_url' => '\"' . $settings['default_theme_url'] . '\"',\n\t\t'smf_images_url' => '\"' . $settings['images_url'] . '\"',\n\t\t'smf_smileys_url' => '\"' . $modSettings['smileys_url'] . '\"',\n\t\t'smf_scripturl' => '\"' . $scripturl . '\"',\n\t\t'smf_iso_case_folding' => $context['server']['iso_case_folding'] ? 'true' : 'false',\n\t\t'smf_charset' => '\"' . $context['character_set'] . '\"',\n\t\t'smf_session_id' => '\"' . $context['session_id'] . '\"',\n\t\t'smf_session_var' => '\"' . $context['session_var'] . '\"',\n\t\t'smf_member_id' => $context['user']['id'],\n\t\t'ajax_notification_text' => JavaScriptEscape($txt['ajax_in_progress']),\n\t\t'help_popup_heading_text' => JavaScriptEscape($txt['help_popup']),\n\t);\n\n\t// Add the JQuery library to the list of files to load.\n\tif (isset($modSettings['jquery_source']) && $modSettings['jquery_source'] == 'cdn')\n\t\tloadJavascriptFile('https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js', array('external' => true), 'smf_jquery');\n\n\telseif (isset($modSettings['jquery_source']) && $modSettings['jquery_source'] == 'local')\n\t\tloadJavascriptFile('jquery-2.1.4.min.js', array('seed' => false), 'smf_jquery');\n\n\telseif (isset($modSettings['jquery_source'], $modSettings['jquery_custom']) && $modSettings['jquery_source'] == 'custom')\n\t\tloadJavascriptFile($modSettings['jquery_custom'], array(), 'smf_jquery');\n\n\t// Auto loading? template_javascript() will take care of the local half of this.\n\telse\n\t\tloadJavascriptFile('https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js', array('external' => true), 'smf_jquery');\n\n\t// Queue our JQuery plugins!\n\tloadJavascriptFile('smf_jquery_plugins.js', array('minimize' => true), 'smf_jquery_plugins');\n\tif (!$user_info['is_guest'])\n\t{\n\t\tloadJavascriptFile('jquery.custom-scrollbar.js', array(), 'smf_jquery_scrollbar');\n\t\tloadCSSFile('jquery.custom-scrollbar.css', array('force_current' => false, 'validate' => true), 'smf_scrollbar');\n\t}\n\n\t// script.js and theme.js, always required, so always add them! Makes index.template.php cleaner and all.\n\tloadJavascriptFile('script.js', array('defer' => false, 'minimize' => true), 'smf_script');\n\tloadJavascriptFile('theme.js', array('minimize' => true), 'smf_theme');\n\n\t// If we think we have mail to send, let's offer up some possibilities... robots get pain (Now with scheduled task support!)\n\tif ((!empty($modSettings['mail_next_send']) && $modSettings['mail_next_send'] < time() && empty($modSettings['mail_queue_use_cron'])) || empty($modSettings['next_task_time']) || $modSettings['next_task_time'] < time())\n\t{\n\t\tif (isBrowser('possibly_robot'))\n\t\t{\n\t\t\t// @todo Maybe move this somewhere better?!\n\t\t\trequire_once($sourcedir . '/ScheduledTasks.php');\n\n\t\t\t// What to do, what to do?!\n\t\t\tif (empty($modSettings['next_task_time']) || $modSettings['next_task_time'] < time())\n\t\t\t\tAutoTask();\n\t\t\telse\n\t\t\t\tReduceMailQueue();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$type = empty($modSettings['next_task_time']) || $modSettings['next_task_time'] < time() ? 'task' : 'mailq';\n\t\t\t$ts = $type == 'mailq' ? $modSettings['mail_next_send'] : $modSettings['next_task_time'];\n\n\t\t\taddInlineJavascript('\n\t\tfunction smfAutoTask()\n\t\t{\n\t\t\t$.get(smf_scripturl + \"?scheduled=' . $type . ';ts=' . $ts . '\");\n\t\t}\n\t\twindow.setTimeout(\"smfAutoTask();\", 1);');\n\t\t}\n\t}\n\n\t// And we should probably trigger the cron too.\n\tif (empty($modSettings['cron_is_real_cron']))\n\t{\n\t\t$ts = time();\n\t\t$ts -= $ts % 15;\n\t\taddInlineJavaScript('\n\tfunction triggerCron()\n\t{\n\t\t$.get(' . JavaScriptEscape($boardurl) . ' + \"/cron.php?ts=' . $ts . '\");\n\t}\n\twindow.setTimeout(triggerCron, 1);', true);\n\t}\n\n\t// Filter out the restricted boards from the linktree\n\tif (!$user_info['is_admin'] && !empty($board))\n\t{\n\t\tforeach ($context['linktree'] as $k => $element)\n\t\t{\n\t\t\tif (!empty($element['groups']) &&\n\t\t\t\t(count(array_intersect($user_info['groups'], $element['groups'])) == 0 ||\n\t\t\t\t(!empty($modSettings['deny_boards_access']) && count(array_intersect($user_info['groups'], $element['deny_groups'])) != 0)))\n\t\t\t{\n\t\t\t\t$context['linktree'][$k]['name'] = $txt['restricted_board'];\n\t\t\t\t$context['linktree'][$k]['extra_before'] = '<i>';\n\t\t\t\t$context['linktree'][$k]['extra_after'] = '</i>';\n\t\t\t\tunset($context['linktree'][$k]['url']);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Any files to include at this point?\n\tif (!empty($modSettings['integrate_theme_include']))\n\t{\n\t\t$theme_includes = explode(',', $modSettings['integrate_theme_include']);\n\t\tforeach ($theme_includes as $include)\n\t\t{\n\t\t\t$include = strtr(trim($include), array('$boarddir' => $boarddir, '$sourcedir' => $sourcedir, '$themedir' => $settings['theme_dir']));\n\t\t\tif (file_exists($include))\n\t\t\t\trequire_once($include);\n\t\t}\n\t}\n\n\t// Call load theme integration functions.\n\tcall_integration_hook('integrate_load_theme');\n\n\t// We are ready to go.\n\t$context['theme_loaded'] = true;\n}\n\n/**\n * Load a template - if the theme doesn't include it, use the default.\n * What this function does:\n *  - loads a template file with the name template_name from the current, default, or base theme.\n *  - detects a wrong default theme directory and tries to work around it.\n *\n * @uses the template_include() function to include the file.\n * @param string $template_name The name of the template to load\n * @param array|string $style_sheets The name of a single stylesheet or an array of names of stylesheets to load\n * @param bool $fatal If true, dies with an error message if the template cannot be found\n * @return boolean Whether or not the template was loaded\n */\nfunction loadTemplate($template_name, $style_sheets = array(), $fatal = true)\n{\n\tglobal $context, $settings, $txt, $scripturl, $boarddir, $db_show_debug;\n\n\t// Do any style sheets first, cause we're easy with those.\n\tif (!empty($style_sheets))\n\t{\n\t\tif (!is_array($style_sheets))\n\t\t\t$style_sheets = array($style_sheets);\n\n\t\tforeach ($style_sheets as $sheet)\n\t\t\tloadCSSFile($sheet . '.css', array(), $sheet);\n\t}\n\n\t// No template to load?\n\tif ($template_name === false)\n\t\treturn true;\n\n\t$loaded = false;\n\tforeach ($settings['template_dirs'] as $template_dir)\n\t{\n\t\tif (file_exists($template_dir . '/' . $template_name . '.template.php'))\n\t\t{\n\t\t\t$loaded = true;\n\t\t\ttemplate_include($template_dir . '/' . $template_name . '.template.php', true);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif ($loaded)\n\t{\n\t\t// For compatibility reasons, if this is the index template without new functions, include compatible stuff.\n\t\tif (substr($template_name, 0, 5) == 'index' && !function_exists('template_button_strip'))\n\t\t\tloadTemplate('Compat');\n\n\t\tif ($db_show_debug === true)\n\t\t\t$context['debug']['templates'][] = $template_name . ' (' . basename($template_dir) . ')';\n\n\t\t// If they have specified an initialization function for this template, go ahead and call it now.\n\t\tif (function_exists('template_' . $template_name . '_init'))\n\t\t\tcall_user_func('template_' . $template_name . '_init');\n\t}\n\t// Hmmm... doesn't exist?!  I don't suppose the directory is wrong, is it?\n\telseif (!file_exists($settings['default_theme_dir']) && file_exists($boarddir . '/Themes/default'))\n\t{\n\t\t$settings['default_theme_dir'] = $boarddir . '/Themes/default';\n\t\t$settings['template_dirs'][] = $settings['default_theme_dir'];\n\n\t\tif (!empty($context['user']['is_admin']) && !isset($_GET['th']))\n\t\t{\n\t\t\tloadLanguage('Errors');\n\t\t\techo '\n<div class=\"alert errorbox\">\n\t<a href=\"', $scripturl . '?action=admin;area=theme;sa=list;' . $context['session_var'] . '=' . $context['session_id'], '\" class=\"alert\">', $txt['theme_dir_wrong'], '</a>\n</div>';\n\t\t}\n\n\t\tloadTemplate($template_name);\n\t}\n\t// Cause an error otherwise.\n\telseif ($template_name != 'Errors' && $template_name != 'index' && $fatal)\n\t\tfatal_lang_error('theme_template_error', 'template', array((string) $template_name));\n\telseif ($fatal)\n\t\tdie(log_error(sprintf(isset($txt['theme_template_error']) ? $txt['theme_template_error'] : 'Unable to load Themes/default/%s.template.php!', (string) $template_name), 'template'));\n\telse\n\t\treturn false;\n}\n\n\n/**\n * Load a sub-template.\n * What it does:\n * \t- loads the sub template specified by sub_template_name, which must be in an already-loaded template.\n *  - if ?debug is in the query string, shows administrators a marker after every sub template\n *\tfor debugging purposes.\n *\n * @todo get rid of reading $_REQUEST directly\n *\n * @param string $sub_template_name The name of the sub-template to load\n * @param bool $fatal Whether to die with an error if the sub-template can't be loaded\n */\nfunction loadSubTemplate($sub_template_name, $fatal = false)\n{\n\tglobal $context, $txt, $db_show_debug;\n\n\tif ($db_show_debug === true)\n\t\t$context['debug']['sub_templates'][] = $sub_template_name;\n\n\t// Figure out what the template function is named.\n\t$theme_function = 'template_' . $sub_template_name;\n\tif (function_exists($theme_function))\n\t\t$theme_function();\n\telseif ($fatal === false)\n\t\tfatal_lang_error('theme_template_error', 'template', array((string) $sub_template_name));\n\telseif ($fatal !== 'ignore')\n\t\tdie(log_error(sprintf(isset($txt['theme_template_error']) ? $txt['theme_template_error'] : 'Unable to load the %s sub template!', (string) $sub_template_name), 'template'));\n\n\t// Are we showing debugging for templates?  Just make sure not to do it before the doctype...\n\tif (allowedTo('admin_forum') && isset($_REQUEST['debug']) && !in_array($sub_template_name, array('init', 'main_below')) && ob_get_length() > 0 && !isset($_REQUEST['xml']))\n\t{\n\t\techo '\n<div class=\"warningbox\">---- ', $sub_template_name, ' ends ----</div>';\n\t}\n}\n\n/**\n * Add a CSS file for output later\n *\n * @param string $fileName The name of the file to load\n * @param array $params An array of parameters\n * Keys are the following:\n * \t- ['external'] (true/false): define if the file is a externally located file. Needs to be set to true if you are loading an external file\n * \t- ['default_theme'] (true/false): force use of default theme url\n * \t- ['force_current'] (true/false): if this is false, we will attempt to load the file from the default theme if not found in the current theme\n *  - ['validate'] (true/false): if true script will validate the local file exists\n *  - ['rtl'] (string): additional file to load in RTL mode\n *  - ['seed'] (true/false/string): if true or null, use cache stale, false do not, or used a supplied string\n *  - ['minimize'] boolean to add your file to the main minimized file. Useful when you have a file thats loaded everywhere and for everyone.\n * @param string $id An ID to stick on the end of the filename for caching purposes\n */\nfunction loadCSSFile($fileName, $params = array(), $id = '')\n{\n\tglobal $settings, $context, $modSettings;\n\n\t$params['seed'] = (!array_key_exists('seed', $params) || (array_key_exists('seed', $params) && $params['seed'] === true)) ? (array_key_exists('browser_cache', $modSettings) ? $modSettings['browser_cache'] : '') : (is_string($params['seed']) ? ($params['seed'] = $params['seed'][0] === '?' ? $params['seed'] : '?' . $params['seed']) : '');\n\t$params['force_current'] = isset($params['force_current']) ? $params['force_current'] : false;\n\t$themeRef = !empty($params['default_theme']) ? 'default_theme' : 'theme';\n\t$params['minimize'] = isset($params['minimize']) ? $params['minimize'] : false;\n\t$params['external'] = isset($params['external']) ? $params['external'] : false;\n\t$params['validate'] = isset($params['validate']) ? $params['validate'] : true;\n\n\t// If this is an external file, automatically set this to false.\n\tif (!empty($params['external']))\n\t\t$params['minimize'] = false;\n\n\t// Account for shorthand like admin.css?alp21 filenames\n\t$has_seed = strpos($fileName, '.css?');\n\t$id = empty($id) ? strtr(basename(str_replace('.css', '', $fileName)), '?', '_') : $id;\n\n\t// Is this a local file?\n\tif (empty($params['external']))\n\t{\n\t\t// Are we validating the the file exists?\n\t\tif (!empty($params['validate']) && !file_exists($settings[$themeRef . '_dir'] . '/css/' . $fileName))\n\t\t{\n\t\t\t// Maybe the default theme has it?\n\t\t\tif ($themeRef === 'theme' && !$params['force_current'] && file_exists($settings['default_theme_dir'] . '/css/' . $fileName))\n\t\t\t{\n\t\t\t\t$fileUrl = $settings['default_theme_url'] . '/css/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t\t\t$filePath = $settings['default_theme_dir'] . '/css/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t\t}\n\n\t\t\telse\n\t\t\t\t$fileUrl = false;\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\t$fileUrl = $settings[$themeRef . '_url'] . '/css/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t\t$filePath = $settings[$themeRef . '_dir'] . '/css/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t}\n\t}\n\n\t// An external file doesn't have a filepath. Mock one for simplicity.\n\telse\n\t{\n\t\t$fileUrl = $fileName;\n\t\t$filePath = $fileName;\n\t}\n\n\t// Add it to the array for use in the template\n\tif (!empty($fileName))\n\t\t$context['css_files'][$id] = array('fileUrl' => $fileUrl, 'filePath' => $filePath, 'fileName' => $fileName, 'options' => $params);\n\n\tif (!empty($context['right_to_left']) && !empty($params['rtl']))\n\t\tloadCSSFile($params['rtl'], array_diff_key($params, array('rtl' => 0)));\n}\n\n/**\n * Add a block of inline css code to be executed later\n *\n * - only use this if you have to, generally external css files are better, but for very small changes\n *   or for scripts that require help from PHP/whatever, this can be useful.\n * - all code added with this function is added to the same <style> tag so do make sure your css is valid!\n *\n * @param string $css Some css code\n * @return void|bool Adds the CSS to the $context['css_header'] array or returns if no CSS is specified\n */\nfunction addInlineCss($css)\n{\n\tglobal $context;\n\n\t// Gotta add something...\n\tif (empty($css))\n\t\treturn false;\n\n\t$context['css_header'][] = $css;\n}\n\n/**\n * Add a Javascript file for output later\n\n * @param string $filename The name of the file to load\n * @param array $params An array of parameter info\n * Keys are the following:\n * \t- ['external'] (true/false): define if the file is a externally located file. Needs to be set to true if you are loading an external file\n * \t- ['default_theme'] (true/false): force use of default theme url\n * \t- ['defer'] (true/false): define if the file should load in <head> or before the closing <html> tag\n * \t- ['force_current'] (true/false): if this is false, we will attempt to load the file from the\n *\tdefault theme if not found in the current theme\n *\t- ['async'] (true/false): if the script should be loaded asynchronously (HTML5)\n *  - ['validate'] (true/false): if true script will validate the local file exists\n *  - ['seed'] (true/false/string): if true or null, use cache stale, false do not, or used a supplied string\n *  - ['minimize'] boolean to add your file to the main minimized file. Useful when you have a file thats loaded everywhere and for everyone.\n *\n * @param string $id An ID to stick on the end of the filename\n */\nfunction loadJavascriptFile($fileName, $params = array(), $id = '')\n{\n\tglobal $settings, $context, $modSettings;\n\n\t$params['seed'] = (!array_key_exists('seed', $params) || (array_key_exists('seed', $params) && $params['seed'] === true)) ? (array_key_exists('browser_cache', $modSettings) ? $modSettings['browser_cache'] : '') : (is_string($params['seed']) ? ($params['seed'] = $params['seed'][0] === '?' ? $params['seed'] : '?' . $params['seed']) : '');\n\t$params['force_current'] = isset($params['force_current']) ? $params['force_current'] : false;\n\t$themeRef = !empty($params['default_theme']) ? 'default_theme' : 'theme';\n\t$params['minimize'] = isset($params['minimize']) ? $params['minimize'] : false;\n\t$params['external'] = isset($params['external']) ? $params['external'] : false;\n\t$params['validate'] = isset($params['validate']) ? $params['validate'] : true;\n\n\t// If this is an external file, automatically set this to false.\n\tif (!empty($params['external']))\n\t\t$params['minimize'] = false;\n\n\t// Account for shorthand like admin.js?alp21 filenames\n\t$has_seed = strpos($fileName, '.js?');\n\t$id = empty($id) ? strtr(basename(str_replace('.js', '', $fileName)), '?', '_') : $id;\n\n\t// Is this a local file?\n\tif (empty($params['external']))\n\t{\n\t\t// Are we validating it exists on disk?\n\t\tif (!empty($params['validate']) && !file_exists($settings[$themeRef . '_dir'] . '/scripts/' . $fileName))\n\t\t{\n\t\t\t// Can't find it in this theme, how about the default?\n\t\t\tif ($themeRef === 'theme' && !$params['force_current'] && file_exists($settings['default_theme_dir'] . '/scripts/' . $fileName))\n\t\t\t{\n\t\t\t\t$fileUrl = $settings['default_theme_url'] . '/scripts/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t\t\t$filePath = $settings['default_theme_dir'] . '/scripts/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\t\t$fileUrl = false;\n\t\t\t\t$filePath = false;\n\t\t\t}\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\t$fileUrl = $settings[$themeRef . '_url'] . '/scripts/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t\t$filePath = $settings[$themeRef . '_dir'] . '/scripts/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t}\n\t}\n\n\t// An external file doesn't have a filepath. Mock one for simplicity.\n\telse\n\t{\n\t\t$fileUrl = $fileName;\n\t\t$filePath = $fileName;\n\t}\n\n\t// Add it to the array for use in the template\n\tif (!empty($fileName))\n\t\t$context['javascript_files'][$id] = array('fileUrl' => $fileUrl, 'filePath' => $filePath, 'fileName' => $fileName, 'options' => $params);\n}\n\n/**\n * Add a Javascript variable for output later (for feeding text strings and similar to JS)\n * Cleaner and easier (for modders) than to use the function below.\n *\n * @param string $key The key for this variable\n * @param string $value The value\n * @param bool $escape Whether or not to escape the value\n */\nfunction addJavascriptVar($key, $value, $escape = false)\n{\n\tglobal $context;\n\n\tif (!empty($key) && (!empty($value) || $value === '0'))\n\t\t$context['javascript_vars'][$key] = !empty($escape) ? JavaScriptEscape($value) : $value;\n}\n\n/**\n * Add a block of inline Javascript code to be executed later\n *\n * - only use this if you have to, generally external JS files are better, but for very small scripts\n *   or for scripts that require help from PHP/whatever, this can be useful.\n * - all code added with this function is added to the same <script> tag so do make sure your JS is clean!\n *\n * @param string $javascript Some JS code\n * @param bool $defer Whether the script should load in <head> or before the closing <html> tag\n * @return void|bool Adds the code to one of the $context['javascript_inline'] arrays or returns if no JS was specified\n */\nfunction addInlineJavascript($javascript, $defer = false)\n{\n\tglobal $context;\n\n\tif (empty($javascript))\n\t\treturn false;\n\n\t$context['javascript_inline'][($defer === true ? 'defer' : 'standard')][] = $javascript;\n}\n\n/**\n * Load a language file.  Tries the current and default themes as well as the user and global languages.\n *\n * @param string $template_name The name of a template file\n * @param string $lang A specific language to load this file from\n * @param bool $fatal Whether to die with an error if it can't be loaded\n * @param bool $force_reload Whether to load the file again if it's already loaded\n * @return string The language actually loaded.\n */\nfunction loadLanguage($template_name, $lang = '', $fatal = true, $force_reload = false)\n{\n\tglobal $user_info, $language, $settings, $context, $modSettings;\n\tglobal $db_show_debug, $sourcedir, $txt, $birthdayEmails, $txtBirthdayEmails;\n\tstatic $already_loaded = array();\n\n\t// Default to the user's language.\n\tif ($lang == '')\n\t\t$lang = isset($user_info['language']) ? $user_info['language'] : $language;\n\n\t// Do we want the English version of language file as fallback?\n\tif (empty($modSettings['disable_language_fallback']) && $lang != 'english')\n\t\tloadLanguage($template_name, 'english', false);\n\n\tif (!$force_reload && isset($already_loaded[$template_name]) && $already_loaded[$template_name] == $lang)\n\t\treturn $lang;\n\n\t// Make sure we have $settings - if not we're in trouble and need to find it!\n\tif (empty($settings['default_theme_dir']))\n\t{\n\t\trequire_once($sourcedir . '/ScheduledTasks.php');\n\t\tloadEssentialThemeData();\n\t}\n\n\t// What theme are we in?\n\t$theme_name = basename($settings['theme_url']);\n\tif (empty($theme_name))\n\t\t$theme_name = 'unknown';\n\n\t// For each file open it up and write it out!\n\tforeach (explode('+', $template_name) as $template)\n\t{\n\t\t// Obviously, the current theme is most important to check.\n\t\t$attempts = array(\n\t\t\tarray($settings['theme_dir'], $template, $lang, $settings['theme_url']),\n\t\t\tarray($settings['theme_dir'], $template, $language, $settings['theme_url']),\n\t\t);\n\n\t\t// Do we have a base theme to worry about?\n\t\tif (isset($settings['base_theme_dir']))\n\t\t{\n\t\t\t$attempts[] = array($settings['base_theme_dir'], $template, $lang, $settings['base_theme_url']);\n\t\t\t$attempts[] = array($settings['base_theme_dir'], $template, $language, $settings['base_theme_url']);\n\t\t}\n\n\t\t// Fall back on the default theme if necessary.\n\t\t$attempts[] = array($settings['default_theme_dir'], $template, $lang, $settings['default_theme_url']);\n\t\t$attempts[] = array($settings['default_theme_dir'], $template, $language, $settings['default_theme_url']);\n\n\t\t// Fall back on the English language if none of the preferred languages can be found.\n\t\tif (!in_array('english', array($lang, $language)))\n\t\t{\n\t\t\t$attempts[] = array($settings['theme_dir'], $template, 'english', $settings['theme_url']);\n\t\t\t$attempts[] = array($settings['default_theme_dir'], $template, 'english', $settings['default_theme_url']);\n\t\t}\n\n\t\t// Try to find the language file.\n\t\t$found = false;\n\t\tforeach ($attempts as $k => $file)\n\t\t{\n\t\t\tif (file_exists($file[0] . '/languages/' . $file[1] . '.' . $file[2] . '.php'))\n\t\t\t{\n\t\t\t\t// Include it!\n\t\t\t\ttemplate_include($file[0] . '/languages/' . $file[1] . '.' . $file[2] . '.php');\n\n\t\t\t\t// Note that we found it.\n\t\t\t\t$found = true;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// That couldn't be found!  Log the error, but *try* to continue normally.\n\t\tif (!$found && $fatal)\n\t\t{\n\t\t\tlog_error(sprintf($txt['theme_language_error'], $template_name . '.' . $lang, 'template'));\n\t\t\tbreak;\n\t\t}\n\n\t\t// For the sake of backward compatibility\n\t\tif (!empty($txt['emails']))\n\t\t{\n\t\t\tforeach ($txt['emails'] as $key => $value)\n\t\t\t{\n\t\t\t\t$txt[$key . '_subject'] = $value['subject'];\n\t\t\t\t$txt[$key . '_body'] = $value['body'];\n\t\t\t}\n\t\t\t$txt['emails'] = array();\n\t\t}\n\t\t// For sake of backward compatibility: $birthdayEmails is supposed to be\n\t\t// empty in a normal install. If it isn't it means the forum is using\n\t\t// something \"old\" (it may be the translation, it may be a mod) and this\n\t\t// code (like the piece above) takes care of converting it to the new format\n\t\tif (!empty($birthdayEmails))\n\t\t{\n\t\t\tforeach ($birthdayEmails as $key => $value)\n\t\t\t{\n\t\t\t\t$txtBirthdayEmails[$key . '_subject'] = $value['subject'];\n\t\t\t\t$txtBirthdayEmails[$key . '_body'] = $value['body'];\n\t\t\t\t$txtBirthdayEmails[$key . '_author'] = $value['author'];\n\t\t\t}\n\t\t\t$birthdayEmails = array();\n\t\t}\n\t}\n\n\t// Keep track of what we're up to soldier.\n\tif ($db_show_debug === true)\n\t\t$context['debug']['language_files'][] = $template_name . '.' . $lang . ' (' . $theme_name . ')';\n\n\t// Remember what we have loaded, and in which language.\n\t$already_loaded[$template_name] = $lang;\n\n\t// Return the language actually loaded.\n\treturn $lang;\n}\n\n/**\n * Get all parent boards (requires first parent as parameter)\n * It finds all the parents of id_parent, and that board itself.\n * Additionally, it detects the moderators of said boards.\n *\n * @param int $id_parent The ID of the parent board\n * @return array An array of information about the boards found.\n */\nfunction getBoardParents($id_parent)\n{\n\tglobal $scripturl, $smcFunc;\n\n\t// First check if we have this cached already.\n\tif (($boards = cache_get_data('board_parents-' . $id_parent, 480)) === null)\n\t{\n\t\t$boards = array();\n\t\t$original_parent = $id_parent;\n\n\t\t// Loop while the parent is non-zero.\n\t\twhile ($id_parent != 0)\n\t\t{\n\t\t\t$result = $smcFunc['db_query']('', '\n\t\t\t\tSELECT\n\t\t\t\t\tb.id_parent, b.name, {int:board_parent} AS id_board, b.member_groups, b.deny_member_groups,\n\t\t\t\t\tb.child_level, COALESCE(mem.id_member, 0) AS id_moderator, mem.real_name,\n\t\t\t\t\tCOALESCE(mg.id_group, 0) AS id_moderator_group, mg.group_name\n\t\t\t\tFROM {db_prefix}boards AS b\n\t\t\t\t\tLEFT JOIN {db_prefix}moderators AS mods ON (mods.id_board = b.id_board)\n\t\t\t\t\tLEFT JOIN {db_prefix}members AS mem ON (mem.id_member = mods.id_member)\n\t\t\t\t\tLEFT JOIN {db_prefix}moderator_groups AS modgs ON (modgs.id_board = b.id_board)\n\t\t\t\t\tLEFT JOIN {db_prefix}membergroups AS mg ON (mg.id_group = modgs.id_group)\n\t\t\t\tWHERE b.id_board = {int:board_parent}',\n\t\t\t\tarray(\n\t\t\t\t\t'board_parent' => $id_parent,\n\t\t\t\t)\n\t\t\t);\n\t\t\t// In the EXTREMELY unlikely event this happens, give an error message.\n\t\t\tif ($smcFunc['db_num_rows']($result) == 0)\n\t\t\t\tfatal_lang_error('parent_not_found', 'critical');\n\t\t\twhile ($row = $smcFunc['db_fetch_assoc']($result))\n\t\t\t{\n\t\t\t\tif (!isset($boards[$row['id_board']]))\n\t\t\t\t{\n\t\t\t\t\t$id_parent = $row['id_parent'];\n\t\t\t\t\t$boards[$row['id_board']] = array(\n\t\t\t\t\t\t'url' => $scripturl . '?board=' . $row['id_board'] . '.0',\n\t\t\t\t\t\t'name' => $row['name'],\n\t\t\t\t\t\t'level' => $row['child_level'],\n\t\t\t\t\t\t'groups' => explode(',', $row['member_groups']),\n\t\t\t\t\t\t'deny_groups' => explode(',', $row['deny_member_groups']),\n\t\t\t\t\t\t'moderators' => array(),\n\t\t\t\t\t\t'moderator_groups' => array()\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// If a moderator exists for this board, add that moderator for all children too.\n\t\t\t\tif (!empty($row['id_moderator']))\n\t\t\t\t\tforeach ($boards as $id => $dummy)\n\t\t\t\t\t{\n\t\t\t\t\t\t$boards[$id]['moderators'][$row['id_moderator']] = array(\n\t\t\t\t\t\t\t'id' => $row['id_moderator'],\n\t\t\t\t\t\t\t'name' => $row['real_name'],\n\t\t\t\t\t\t\t'href' => $scripturl . '?action=profile;u=' . $row['id_moderator'],\n\t\t\t\t\t\t\t'link' => '<a href=\"' . $scripturl . '?action=profile;u=' . $row['id_moderator'] . '\">' . $row['real_name'] . '</a>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t// If a moderator group exists for this board, add that moderator group for all children too\n\t\t\t\tif (!empty($row['id_moderator_group']))\n\t\t\t\t\tforeach ($boards as $id => $dummy)\n\t\t\t\t\t{\n\t\t\t\t\t\t$boards[$id]['moderator_groups'][$row['id_moderator_group']] = array(\n\t\t\t\t\t\t\t'id' => $row['id_moderator_group'],\n\t\t\t\t\t\t\t'name' => $row['group_name'],\n\t\t\t\t\t\t\t'href' => $scripturl . '?action=groups;sa=members;group=' . $row['id_moderator_group'],\n\t\t\t\t\t\t\t'link' => '<a href=\"' . $scripturl . '?action=groups;sa=members;group=' . $row['id_moderator_group'] . '\">' . $row['group_name'] . '</a>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t$smcFunc['db_free_result']($result);\n\t\t}\n\n\t\tcache_put_data('board_parents-' . $original_parent, $boards, 480);\n\t}\n\n\treturn $boards;\n}\n\n/**\n * Attempt to reload our known languages.\n * It will try to choose only utf8 or non-utf8 languages.\n *\n * @param bool $use_cache Whether or not to use the cache\n * @param bool $favor_utf8 Whether or not to favor UTF-8 files\n * @return array An array of information about available languages\n */\nfunction getLanguages($use_cache = true, $favor_utf8 = true)\n{\n\tglobal $context, $smcFunc, $settings, $modSettings;\n\n\t// Either we don't use the cache, or its expired.\n\tif (!$use_cache || ($context['languages'] = cache_get_data('known_languages' . ($favor_utf8 ? '' : '_all'), !empty($modSettings['cache_enable']) && $modSettings['cache_enable'] < 1 ? 86400 : 3600)) == null)\n\t{\n\t\t// If we don't have our ucwords function defined yet, let's load the settings data.\n\t\tif (empty($smcFunc['ucwords']))\n\t\t\treloadSettings();\n\n\t\t// If we don't have our theme information yet, let's get it.\n\t\tif (empty($settings['default_theme_dir']))\n\t\t\tloadTheme(0, false);\n\n\t\t// Default language directories to try.\n\t\t$language_directories = array(\n\t\t\t$settings['default_theme_dir'] . '/languages',\n\t\t);\n\t\tif (!empty($settings['actual_theme_dir']) && $settings['actual_theme_dir'] != $settings['default_theme_dir'])\n\t\t\t$language_directories[] = $settings['actual_theme_dir'] . '/languages';\n\n\t\t// We possibly have a base theme directory.\n\t\tif (!empty($settings['base_theme_dir']))\n\t\t\t$language_directories[] = $settings['base_theme_dir'] . '/languages';\n\n\t\t// Remove any duplicates.\n\t\t$language_directories = array_unique($language_directories);\n\n\t\tforeach ($language_directories as $language_dir)\n\t\t{\n\t\t\t// Can't look in here... doesn't exist!\n\t\t\tif (!file_exists($language_dir))\n\t\t\t\tcontinue;\n\n\t\t\t$dir = dir($language_dir);\n\t\t\twhile ($entry = $dir->read())\n\t\t\t{\n\t\t\t\t// Look for the index language file....\n\t\t\t\tif (!preg_match('~^index\\.(.+)\\.php$~', $entry, $matches))\n\t\t\t\t\tcontinue;\n\n\t\t\t\t$context['languages'][$matches[1]] = array(\n\t\t\t\t\t'name' => $smcFunc['ucwords'](strtr($matches[1], array('_' => ' '))),\n\t\t\t\t\t'selected' => false,\n\t\t\t\t\t'filename' => $matches[1],\n\t\t\t\t\t'location' => $language_dir . '/index.' . $matches[1] . '.php',\n\t\t\t\t);\n\n\t\t\t}\n\t\t\t$dir->close();\n\t\t}\n\n\t\t// Favoring UTF8? Then prevent us from selecting non-UTF8 versions.\n\t\tif ($favor_utf8)\n\t\t{\n\t\t\tforeach ($context['languages'] as $lang)\n\t\t\t\tif (substr($lang['filename'], strlen($lang['filename']) - 5, 5) != '-utf8' && isset($context['languages'][$lang['filename'] . '-utf8']))\n\t\t\t\t\tunset($context['languages'][$lang['filename']]);\n\t\t}\n\n\t\t// Let's cash in on this deal.\n\t\tif (!empty($modSettings['cache_enable']))\n\t\t\tcache_put_data('known_languages' . ($favor_utf8 ? '' : '_all'), $context['languages'], !empty($modSettings['cache_enable']) && $modSettings['cache_enable'] < 1 ? 86400 : 3600);\n\t}\n\n\treturn $context['languages'];\n}\n\n/**\n * Replace all vulgar words with respective proper words. (substring or whole words..)\n * What this function does:\n *  - it censors the passed string.\n *  - if the theme setting allow_no_censored is on, and the theme option\n *\tshow_no_censored is enabled, does not censor, unless force is also set.\n *  - it caches the list of censored words to reduce parsing.\n *\n * @param string &$text The text to censor\n * @param bool $force Whether to censor the text regardless of settings\n * @return string The censored text\n */\nfunction censorText(&$text, $force = false)\n{\n\tglobal $modSettings, $options, $txt;\n\tstatic $censor_vulgar = null, $censor_proper;\n\n\tif ((!empty($options['show_no_censored']) && !empty($modSettings['allow_no_censored']) && !$force) || empty($modSettings['censor_vulgar']) || trim($text) === '')\n\t\treturn $text;\n\n\t// If they haven't yet been loaded, load them.\n\tif ($censor_vulgar == null)\n\t{\n\t\t$censor_vulgar = explode(\"\\n\", $modSettings['censor_vulgar']);\n\t\t$censor_proper = explode(\"\\n\", $modSettings['censor_proper']);\n\n\t\t// Quote them for use in regular expressions.\n\t\tif (!empty($modSettings['censorWholeWord']))\n\t\t{\n\t\t\tfor ($i = 0, $n = count($censor_vulgar); $i < $n; $i++)\n\t\t\t{\n\t\t\t\t$censor_vulgar[$i] = str_replace(array('\\\\\\\\\\\\*', '\\\\*', '&', '\\''), array('[*]', '[^\\s]*?', '&amp;', '&#039;'), preg_quote($censor_vulgar[$i], '/'));\n\t\t\t\t$censor_vulgar[$i] = '/(?<=^|\\W)' . $censor_vulgar[$i] . '(?=$|\\W)/' . (empty($modSettings['censorIgnoreCase']) ? '' : 'i') . ((empty($modSettings['global_character_set']) ? $txt['lang_character_set'] : $modSettings['global_character_set']) === 'UTF-8' ? 'u' : '');\n\n\t\t\t\t// @todo I'm thinking the old way is some kind of bug and this is actually fixing it.\n\t\t\t\t//if (strpos($censor_vulgar[$i], '\\'') !== false)\n\t\t\t\t\t//$censor_vulgar[$i] = str_replace('\\'', '&#039;', $censor_vulgar[$i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Censoring isn't so very complicated :P.\n\tif (empty($modSettings['censorWholeWord']))\n\t{\n\t\t$func = !empty($modSettings['censorIgnoreCase']) ? 'str_ireplace' : 'str_replace';\n\t\t$text = $func($censor_vulgar, $censor_proper, $text);\n\t}\n\telse\n\t\t$text = preg_replace($censor_vulgar, $censor_proper, $text);\n\n\treturn $text;\n}\n\n/**\n * Load the template/language file using eval or require? (with eval we can show an error message!)\n * \t- loads the template or language file specified by filename.\n * \t- uses eval unless disableTemplateEval is enabled.\n * \t- outputs a parse error if the file did not exist or contained errors.\n * \t- attempts to detect the error and line, and show detailed information.\n *\n * @param string $filename The name of the file to include\n * @param bool $once If true only includes the file once (like include_once)\n */\nfunction template_include($filename, $once = false)\n{\n\tglobal $context, $settings, $txt, $scripturl, $modSettings;\n\tglobal $boardurl, $boarddir, $sourcedir;\n\tglobal $maintenance, $mtitle, $mmessage;\n\tstatic $templates = array();\n\n\t// We want to be able to figure out any errors...\n\t@ini_set('track_errors', '1');\n\n\t// Don't include the file more than once, if $once is true.\n\tif ($once && in_array($filename, $templates))\n\t\treturn;\n\t// Add this file to the include list, whether $once is true or not.\n\telse\n\t\t$templates[] = $filename;\n\n\t// Are we going to use eval?\n\tif (empty($modSettings['disableTemplateEval']))\n\t{\n\t\t$file_found = file_exists($filename) && eval('?' . '>' . rtrim(file_get_contents($filename))) !== false;\n\t\t$settings['current_include_filename'] = $filename;\n\t}\n\telse\n\t{\n\t\t$file_found = file_exists($filename);\n\n\t\tif ($once && $file_found)\n\t\t\trequire_once($filename);\n\t\telseif ($file_found)\n\t\t\trequire($filename);\n\t}\n\n\tif ($file_found !== true)\n\t{\n\t\tob_end_clean();\n\t\tif (!empty($modSettings['enableCompressedOutput']))\n\t\t\t@ob_start('ob_gzhandler');\n\t\telse\n\t\t\tob_start();\n\n\t\tif (isset($_GET['debug']))\n\t\t\theader('Content-Type: application/xhtml+xml; charset=' . (empty($context['character_set']) ? 'ISO-8859-1' : $context['character_set']));\n\n\t\t// Don't cache error pages!!\n\t\theader('Expires: Mon, 26 Jul 1997 05:00:00 GMT');\n\t\theader('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');\n\t\theader('Cache-Control: no-cache');\n\n\t\tif (!isset($txt['template_parse_error']))\n\t\t{\n\t\t\t$txt['template_parse_error'] = 'Template Parse Error!';\n\t\t\t$txt['template_parse_error_message'] = 'It seems something has gone sour on the forum with the template system.  This problem should only be temporary, so please come back later and try again.  If you continue to see this message, please contact the administrator.<br><br>You can also try <a href=\"javascript:location.reload();\">refreshing this page</a>.';\n\t\t\t$txt['template_parse_error_details'] = 'There was a problem loading the <pre><strong>%1$s</strong></pre> template or language file.  Please check the syntax and try again - remember, single quotes (<pre>\\'</pre>) often have to be escaped with a slash (<pre>\\\\</pre>).  To see more specific error information from PHP, try <a href=\"' . $boardurl . '%1$s\" class=\"extern\">accessing the file directly</a>.<br><br>You may want to try to <a href=\"javascript:location.reload();\">refresh this page</a> or <a href=\"' . $scripturl . '?theme=1\">use the default theme</a>.';\n\t\t\t$txt['template_parse_errmsg'] = 'Unfortunately more information is not available at this time as to exactly what is wrong.';\n\t\t}\n\n\t\t// First, let's get the doctype and language information out of the way.\n\t\techo '<!DOCTYPE html>\n<html', !empty($context['right_to_left']) ? ' dir=\"rtl\"' : '', '>\n\t<head>';\n\t\tif (isset($context['character_set']))\n\t\t\techo '\n\t\t<meta charset=\"', $context['character_set'], '\">';\n\n\t\tif (!empty($maintenance) && !allowedTo('admin_forum'))\n\t\t\techo '\n\t\t<title>', $mtitle, '</title>\n\t</head>\n\t<body>\n\t\t<h3>', $mtitle, '</h3>\n\t\t', $mmessage, '\n\t</body>\n</html>';\n\t\telseif (!allowedTo('admin_forum'))\n\t\t\techo '\n\t\t<title>', $txt['template_parse_error'], '</title>\n\t</head>\n\t<body>\n\t\t<h3>', $txt['template_parse_error'], '</h3>\n\t\t', $txt['template_parse_error_message'], '\n\t</body>\n</html>';\n\t\telse\n\t\t{\n\t\t\trequire_once($sourcedir . '/Subs-Package.php');\n\n\t\t\t$error = fetch_web_data($boardurl . strtr($filename, array($boarddir => '', strtr($boarddir, '\\\\', '/') => '')));\n\t\t\tif (empty($error) && ini_get('track_errors') && !empty($php_errormsg))\n\t\t\t\t$error = $php_errormsg;\n\t\t\tif (empty($error))\n\t\t\t\t$error = $txt['template_parse_errmsg'];\n\n\t\t\t$error = strtr($error, array('<b>' => '<strong>', '</b>' => '</strong>'));\n\n\t\t\techo '\n\t\t<title>', $txt['template_parse_error'], '</title>\n\t</head>\n\t<body>\n\t\t<h3>', $txt['template_parse_error'], '</h3>\n\t\t', sprintf($txt['template_parse_error_details'], strtr($filename, array($boarddir => '', strtr($boarddir, '\\\\', '/') => '')));\n\n\t\t\tif (!empty($error))\n\t\t\t\techo '\n\t\t<hr>\n\n\t\t<div style=\"margin: 0 20px;\"><pre>', strtr(strtr($error, array('<strong>' . $boarddir => '<strong>...', '<strong>' . strtr($boarddir, '\\\\', '/') => '<strong>...')), '\\\\', '/'), '</pre></div>';\n\n\t\t\t// I know, I know... this is VERY COMPLICATED.  Still, it's good.\n\t\t\tif (preg_match('~ <strong>(\\d+)</strong><br( /)?' . '>$~i', $error, $match) != 0)\n\t\t\t{\n\t\t\t\t$data = file($filename);\n\t\t\t\t$data2 = highlight_php_code(implode('', $data));\n\t\t\t\t$data2 = preg_split('~\\<br( /)?\\>~', $data2);\n\n\t\t\t\t// Fix the PHP code stuff...\n\t\t\t\tif (!isBrowser('gecko'))\n\t\t\t\t\t$data2 = str_replace(\"\\t\", '<span style=\"white-space: pre;\">' . \"\\t\" . '</span>', $data2);\n\t\t\t\telse\n\t\t\t\t\t$data2 = str_replace('<pre style=\"display: inline;\">' . \"\\t\" . '</pre>', \"\\t\", $data2);\n\n\t\t\t\t// Now we get to work around a bug in PHP where it doesn't escape <br>s!\n\t\t\t\t$j = -1;\n\t\t\t\tforeach ($data as $line)\n\t\t\t\t{\n\t\t\t\t\t$j++;\n\n\t\t\t\t\tif (substr_count($line, '<br>') == 0)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t$n = substr_count($line, '<br>');\n\t\t\t\t\tfor ($i = 0; $i < $n; $i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t$data2[$j] .= '&lt;br /&gt;' . $data2[$j + $i + 1];\n\t\t\t\t\t\tunset($data2[$j + $i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\t$j += $n;\n\t\t\t\t}\n\t\t\t\t$data2 = array_values($data2);\n\t\t\t\tarray_unshift($data2, '');\n\n\t\t\t\techo '\n\t\t<div style=\"margin: 2ex 20px; width: 96%; overflow: auto;\"><pre style=\"margin: 0;\">';\n\n\t\t\t\t// Figure out what the color coding was before...\n\t\t\t\t$line = max($match[1] - 9, 1);\n\t\t\t\t$last_line = '';\n\t\t\t\tfor ($line2 = $line - 1; $line2 > 1; $line2--)\n\t\t\t\t\tif (strpos($data2[$line2], '<') !== false)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (preg_match('~(<[^/>]+>)[^<]*$~', $data2[$line2], $color_match) != 0)\n\t\t\t\t\t\t\t$last_line = $color_match[1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t// Show the relevant lines...\n\t\t\t\tfor ($n = min($match[1] + 4, count($data2) + 1); $line <= $n; $line++)\n\t\t\t\t{\n\t\t\t\t\tif ($line == $match[1])\n\t\t\t\t\t\techo '</pre><div style=\"background-color: #ffb0b5;\"><pre style=\"margin: 0;\">';\n\n\t\t\t\t\techo '<span style=\"color: black;\">', sprintf('%' . strlen($n) . 's', $line), ':</span> ';\n\t\t\t\t\tif (isset($data2[$line]) && $data2[$line] != '')\n\t\t\t\t\t\techo substr($data2[$line], 0, 2) == '</' ? preg_replace('~^</[^>]+>~', '', $data2[$line]) : $last_line . $data2[$line];\n\n\t\t\t\t\tif (isset($data2[$line]) && preg_match('~(<[^/>]+>)[^<]*$~', $data2[$line], $color_match) != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$last_line = $color_match[1];\n\t\t\t\t\t\techo '</', substr($last_line, 1, 4), '>';\n\t\t\t\t\t}\n\t\t\t\t\telseif ($last_line != '' && strpos($data2[$line], '<') !== false)\n\t\t\t\t\t\t$last_line = '';\n\t\t\t\t\telseif ($last_line != '' && $data2[$line] != '')\n\t\t\t\t\t\techo '</', substr($last_line, 1, 4), '>';\n\n\t\t\t\t\tif ($line == $match[1])\n\t\t\t\t\t\techo '</pre></div><pre style=\"margin: 0;\">';\n\t\t\t\t\telse\n\t\t\t\t\t\techo \"\\n\";\n\t\t\t\t}\n\n\t\t\t\techo '</pre></div>';\n\t\t\t}\n\n\t\t\techo '\n\t</body>\n</html>';\n\t\t}\n\n\t\tdie;\n\t}\n}\n\n/**\n * Initialize a database connection.\n */\nfunction loadDatabase()\n{\n\tglobal $db_persist, $db_connection, $db_server, $db_user, $db_passwd;\n\tglobal $db_type, $db_name, $ssi_db_user, $ssi_db_passwd, $sourcedir, $db_prefix, $db_port;\n\n\t// Figure out what type of database we are using.\n\tif (empty($db_type) || !file_exists($sourcedir . '/Subs-Db-' . $db_type . '.php'))\n\t\t$db_type = 'mysql';\n\n\t// Load the file for the database.\n\trequire_once($sourcedir . '/Subs-Db-' . $db_type . '.php');\n\n\t$db_options = array();\n\n\t// Add in the port if needed\n\tif (!empty($db_port))\n\t\t$db_options['port'] = $db_port;\n\n\t// If we are in SSI try them first, but don't worry if it doesn't work, we have the normal username and password we can use.\n\tif (SMF == 'SSI' && !empty($ssi_db_user) && !empty($ssi_db_passwd))\n\t{\n\t\t$options = array_merge($db_options, array('persist' => $db_persist, 'non_fatal' => true, 'dont_select_db' => true));\n\n\t\t$db_connection = smf_db_initiate($db_server, $db_name, $ssi_db_user, $ssi_db_passwd, $db_prefix, $options);\n\t}\n\n\t// Either we aren't in SSI mode, or it failed.\n\tif (empty($db_connection))\n\t{\n\t\t$options = array_merge($db_options, array('persist' => $db_persist, 'dont_select_db' => SMF == 'SSI'));\n\n\t\t$db_connection = smf_db_initiate($db_server, $db_name, $db_user, $db_passwd, $db_prefix, $options);\n\t}\n\n\t// Safe guard here, if there isn't a valid connection lets put a stop to it.\n\tif (!$db_connection)\n\t\tdisplay_db_error();\n\n\t// If in SSI mode fix up the prefix.\n\tif (SMF == 'SSI')\n\t\tdb_fix_prefix($db_prefix, $db_name);\n}\n\n/**\n * Try to retrieve a cache entry. On failure, call the appropriate function.\n *\n * @param string $key The key for this entry\n * @param string $file The file associated with this entry\n * @param string $function The function to call\n * @param array $params Parameters to be passed to the specified function\n * @param int $level The cache level\n * @return string The cached data\n */\nfunction cache_quick_get($key, $file, $function, $params, $level = 1)\n{\n\tglobal $modSettings, $sourcedir;\n\n\t// @todo Why are we doing this if caching is disabled?\n\n\tif (function_exists('call_integration_hook'))\n\t\tcall_integration_hook('pre_cache_quick_get', array(&$key, &$file, &$function, &$params, &$level));\n\n\t/* Refresh the cache if either:\n\t\t1. Caching is disabled.\n\t\t2. The cache level isn't high enough.\n\t\t3. The item has not been cached or the cached item expired.\n\t\t4. The cached item has a custom expiration condition evaluating to true.\n\t\t5. The expire time set in the cache item has passed (needed for Zend).\n\t*/\n\tif (empty($modSettings['cache_enable']) || $modSettings['cache_enable'] < $level || !is_array($cache_block = cache_get_data($key, 3600)) || (!empty($cache_block['refresh_eval']) && eval($cache_block['refresh_eval'])) || (!empty($cache_block['expires']) && $cache_block['expires'] < time()))\n\t{\n\t\trequire_once($sourcedir . '/' . $file);\n\t\t$cache_block = call_user_func_array($function, $params);\n\n\t\tif (!empty($modSettings['cache_enable']) && $modSettings['cache_enable'] >= $level)\n\t\t\tcache_put_data($key, $cache_block, $cache_block['expires'] - time());\n\t}\n\n\t// Some cached data may need a freshening up after retrieval.\n\tif (!empty($cache_block['post_retri_eval']))\n\t\teval($cache_block['post_retri_eval']);\n\n\tif (function_exists('call_integration_hook'))\n\t\tcall_integration_hook('post_cache_quick_get', array(&$cache_block));\n\n\treturn $cache_block['data'];\n}\n\n/**\n * Puts value in the cache under key for ttl seconds.\n *\n * - It may \"miss\" so shouldn't be depended on\n * - Uses the cache engine chosen in the ACP and saved in settings.php\n * - It supports:\n *\t Xcache: http://xcache.lighttpd.net/wiki/XcacheApi\n *\t memcache: http://www.php.net/memcache\n *\t APC: http://www.php.net/apc\n *\t Zend: http://files.zend.com/help/Zend-Platform/output_cache_functions.htm\n *\t Zend: http://files.zend.com/help/Zend-Platform/zend_cache_functions.htm\n *\n * @param string $key A key for this value\n * @param mixed $value The data to cache\n * @param int $ttl How long (in seconds) the data should be cached for\n */\nfunction cache_put_data($key, $value, $ttl = 120)\n{\n\tglobal $boardurl, $modSettings, $memcached;\n\tglobal $cache_hits, $cache_count, $db_show_debug, $cachedir;\n\tglobal $cache_accelerator, $cache_enable;\n\n\tif (empty($cache_enable))\n\t\treturn;\n\n\t$cache_count = isset($cache_count) ? $cache_count + 1 : 1;\n\tif (isset($db_show_debug) && $db_show_debug === true)\n\t{\n\t\t$cache_hits[$cache_count] = array('k' => $key, 'd' => 'put', 's' => $value === null ? 0 : strlen(json_encode($value)));\n\t\t$st = microtime();\n\t}\n\n\t$key = md5($boardurl . filemtime($cachedir . '/' . 'index.php')) . '-SMF-' . strtr($key, ':/', '-_');\n\t$value = $value === null ? null : json_encode($value);\n\n\tswitch ($cache_accelerator)\n\t{\n\t\tcase 'memcached':\n\t\t\t// The simple yet efficient memcached.\n\t\t\tif (function_exists('memcached_set') || function_exists('memcache_set') && isset($modSettings['cache_memcached']) && trim($modSettings['cache_memcached']) != '')\n\t\t\t{\n\t\t\t\t// Not connected yet?\n\t\t\t\tif (empty($memcached))\n\t\t\t\t\tget_memcached_server();\n\t\t\t\tif (!$memcached)\n\t\t\t\t\treturn;\n\n\t\t\t\tmemcache_set($memcached, $key, $value, 0, $ttl);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'apc':\n\t\t\t// Alternative PHP Cache, ahoy!\n\t\t\tif (function_exists('apc_store'))\n\t\t\t{\n\t\t\t\t// An extended key is needed to counteract a bug in APC.\n\t\t\t\tif ($value === null)\n\t\t\t\t\tapc_delete($key . 'smf');\n\t\t\t\telse\n\t\t\t\t\tapc_store($key . 'smf', $value, $ttl);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'zend':\n\t\t\t// Zend Platform/ZPS/etc.\n\t\t\tif (function_exists('zend_shm_cache_store'))\n\t\t\t\tzend_shm_cache_store('SMF::' . $key, $value, $ttl);\n\t\t\telseif (function_exists('output_cache_put'))\n\t\t\t\toutput_cache_put($key, $value);\n\t\t\tbreak;\n\t\tcase 'xcache':\n\t\t\tif (function_exists('xcache_set') && ini_get('xcache.var_size') > 0)\n\t\t\t{\n\t\t\t\tif ($value === null)\n\t\t\t\t\txcache_unset($key);\n\t\t\t\telse\n\t\t\t\t\txcache_set($key, $value, $ttl);\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// Otherwise custom cache?\n\t\t\tif ($value === null)\n\t\t\t\t@unlink($cachedir . '/data_' . $key . '.php');\n\t\t\telse\n\t\t\t{\n\t\t\t\t$cache_data = '<' . '?' . 'php if (!defined(\\'SMF\\')) die; if (' . (time() + $ttl) . ' < time()) $expired = true; else{$expired = false; $value = \\'' . addcslashes($value, '\\\\\\'') . '\\';}' . '?' . '>';\n\n\t\t\t\t// Write out the cache file, check that the cache write was successful; all the data must be written\n\t\t\t\t// If it fails due to low diskspace, or other, remove the cache file\n\t\t\t\tif (file_put_contents($cachedir . '/data_' . $key . '.php', $cache_data, LOCK_EX) !== strlen($cache_data))\n\t\t\t\t\t@unlink($cachedir . '/data_' . $key . '.php');\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\tif (function_exists('call_integration_hook'))\n\t\tcall_integration_hook('cache_put_data', array(&$key, &$value, &$ttl));\n\n\tif (isset($db_show_debug) && $db_show_debug === true)\n\t\t$cache_hits[$cache_count]['t'] = array_sum(explode(' ', microtime())) - array_sum(explode(' ', $st));\n\n\t// Invalidate the opcode cache\n\tif (function_exists('opcache_invalidate'))\n   \t\topcache_invalidate($cachedir . '/data_' . $key . '.php', true);\n\n\tif (function_exists('apc_delete_file'))\n   \t\t@apc_delete_file($cachedir . '/data_' . $key . '.php');\n}\n\n/**\n * Gets the value from the cache specified by key, so long as it is not older than ttl seconds.\n * - It may often \"miss\", so shouldn't be depended on.\n * - It supports the same as cache_put_data().\n *\n * @param string $key The key for the value to retrieve\n * @param int $ttl The maximum age of the cached data\n * @return string The cached data or null if nothing was loaded\n */\nfunction cache_get_data($key, $ttl = 120)\n{\n\tglobal $boardurl, $modSettings, $memcached;\n\tglobal $cache_hits, $cache_count, $db_show_debug, $cachedir;\n\tglobal $cache_accelerator, $cache_enable;\n\n\tif (empty($cache_enable))\n\t\treturn;\n\n\t$cache_count = isset($cache_count) ? $cache_count + 1 : 1;\n\tif (isset($db_show_debug) && $db_show_debug === true)\n\t{\n\t\t$cache_hits[$cache_count] = array('k' => $key, 'd' => 'get');\n\t\t$st = microtime();\n\t}\n\n\t$key = md5($boardurl . filemtime($cachedir . '/' . 'index.php')) . '-SMF-' . strtr($key, ':/', '-_');\n\n\tswitch ($cache_accelerator)\n\t{\n\t\tcase 'memcache':\n\t\t\t// Okay, let's go for it memcached!\n\t\t\tif ((function_exists('memcache_get') || function_exists('memcached_get')) && isset($modSettings['cache_memcached']) && trim($modSettings['cache_memcached']) != '')\n\t\t\t{\n\t\t\t\t// Not connected yet?\n\t\t\t\tif (empty($memcached))\n\t\t\t\t\tget_memcached_server();\n\t\t\t\tif (!$memcached)\n\t\t\t\t\treturn null;\n\n\t\t\t\t$value = (function_exists('memcache_get')) ? memcache_get($cache['connection'], $key) : memcached_get($cache['connection'], $key);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'apc':\n\t\t\t// This is the free APC from PECL.\n\t\t\tif (function_exists('apc_fetch'))\n\t\t\t\t$value = apc_fetch($key . 'smf');\n\t\t\tbreak;\n\t\tcase 'zend':\n\t\t\t// Zend's pricey stuff.\n\t\t\tif (function_exists('zend_shm_cache_fetch'))\n\t\t\t\t$value = zend_shm_cache_fetch('SMF::' . $key);\n\t\t\telseif (function_exists('output_cache_get'))\n\t\t\t\t$value = output_cache_get($key, $ttl);\n\t\t\tbreak;\n\t\tcase 'xcache':\n\t\t\tif (function_exists('xcache_get') && ini_get('xcache.var_size') > 0)\n\t\t\t\t$value = xcache_get($key);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// Otherwise it's SMF data!\n\t\t\tif (file_exists($cachedir . '/data_' . $key . '.php') && filesize($cachedir . '/data_' . $key . '.php') > 10)\n\t\t\t{\n\t\t\t\t// Work around Zend's opcode caching (PHP 5.5+), they would cache older files for a couple of seconds\n\t\t\t\t// causing newer files to take effect a while later.\n\t\t\t\tif (function_exists('opcache_invalidate'))\n\t\t\t\t\topcache_invalidate($cachedir . '/data_' . $key . '.php', true);\n\n\t\t\t\t// php will cache file_exists et all, we can't 100% depend on its results so proceed with caution\n\t\t\t\t@include($cachedir . '/data_' . $key . '.php');\n\t\t\t\tif (!empty($expired) && isset($value))\n\t\t\t\t{\n\t\t\t\t\t@unlink($cachedir . '/data_' . $key . '.php');\n\t\t\t\t\tunset($value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\tif (isset($db_show_debug) && $db_show_debug === true)\n\t{\n\t\t$cache_hits[$cache_count]['t'] = array_sum(explode(' ', microtime())) - array_sum(explode(' ', $st));\n\t\t$cache_hits[$cache_count]['s'] = isset($value) ? strlen($value) : 0;\n\t}\n\n\tif (function_exists('call_integration_hook') && isset($value))\n\t\tcall_integration_hook('cache_get_data', array(&$key, &$ttl, &$value));\n\n\treturn empty($value) ? null : smf_json_decode($value, true);\n}\n\n/**\n * Get memcache servers.\n *\n * - This function is used by cache_get_data() and cache_put_data().\n * - It attempts to connect to a random server in the cache_memcached setting.\n * - It recursively calls itself up to $level times.\n *\n * @param int $level The maximum number of times to call this function recursively\n */\nfunction get_memcached_server($level = 3)\n{\n\tglobal $memcached, $db_persist, $cache_memcached;\n\n\t$servers = explode(',', $cache_memcached);\n\t$server = trim($servers[array_rand($servers)]);\n\n\t$port = 0;\n\n\t// Normal host names do not contain slashes, while e.g. unix sockets do. Assume alternative transport pipe with port 0.\n\tif(strpos($server,'/') !== false)\n\t\t$host = $server;\n\telse\n\t{\n\t\t$server = explode(':', $server);\n\t\t$host = $server[0];\n\t\t$port = isset($server[1]) ? $server[1] : 11211;\n\t}\n\n\t$cache = (function_exists('memcache_get')) ? 'memcache' : ((function_exists('memcached_get') ? 'memcached' : ''));\n\n\t// Don't try more times than we have servers!\n\t$level = min(count($servers), $level);\n\n\t// Don't wait too long: yes, we want the server, but we might be able to run the query faster!\n\tif (empty($db_persist))\n\t{\n\t\tif ($cache === 'memcached')\n\t\t\t$memcached = memcached_connect($host, $port);\n\t\tif ($cache === 'memcache')\n\t\t\t$memcached = memcache_connect($host, $port);\n\t}\n\telse\n\t{\n\t\tif ($cache === 'memcached')\n\t\t\t$memcached = memcached_pconnect($host, $port);\n\t\tif ($cache === 'memcache')\n\t\t\t$memcached = memcache_pconnect($host, $port);\n\t}\n\n\tif (!$memcached && $level > 0)\n\t\tget_memcached_server($level - 1);\n}\n\n/**\n * Helper function to set an array of data for an user's avatar.\n *\n * Makes assumptions based on the data provided, the following keys are required:\n * - avatar The raw \"avatar\" column in members table\n * - email The user's email. Used to get the gravatar info\n * - filename The attachment filename\n *\n * @param array $data An array of raw info\n * @return array An array of avatar data\n */\nfunction set_avatar_data($data = array())\n{\n\tglobal $modSettings, $boardurl, $smcFunc, $image_proxy_enabled, $image_proxy_secret;\n\n\t// Come on!\n\tif (empty($data))\n\t\treturn array();\n\n\t// Set a nice default var.\n\t$image = '';\n\n\t// Gravatar has been set as mandatory!\n\tif (!empty($modSettings['gravatarOverride']))\n\t{\n\t\tif (!empty($modSettings['gravatarAllowExtraEmail']) && !empty($data['avatar']) && stristr($data['avatar'], 'gravatar://'))\n\t\t\t$image = get_gravatar_url($smcFunc['substr']($data['avatar'], 11));\n\n\t\telse if (!empty($data['email']))\n\t\t\t$image = get_gravatar_url($data['email']);\n\t}\n\n\t// Look if the user has a gravatar field or has set an external url as avatar.\n\telse\n\t{\n\t\t// So it's stored in the member table?\n\t\tif (!empty($data['avatar']))\n\t\t{\n\t\t\t// Gravatar.\n\t\t\tif (stristr($data['avatar'], 'gravatar://'))\n\t\t\t{\n\t\t\t\tif ($data['avatar'] == 'gravatar://')\n\t\t\t\t\t$image = get_gravatar_url($data['email']);\n\n\t\t\t\telseif (!empty($modSettings['gravatarAllowExtraEmail']))\n\t\t\t\t\t$image = get_gravatar_url($smcFunc['substr']($data['avatar'], 11));\n\t\t\t}\n\n\t\t\t// External url.\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Using ssl?\n\t\t\t\tif (!empty($modSettings['force_ssl']) && $image_proxy_enabled && stripos($data['avatar'], 'http://') !== false)\n\t\t\t\t\t$image = strtr($boardurl, array('http://' => 'https://')) . '/proxy.php?request=' . urlencode($data['avatar']) . '&hash=' . md5($data['avatar'] . $image_proxy_secret);\n\n\t\t\t\t// Just a plain external url.\n\t\t\t\telse\n\t\t\t\t\t$image = (stristr($data['avatar'], 'http://') || stristr($data['avatar'], 'https://')) ? $data['avatar'] : $modSettings['avatar_url'] . '/' . $data['avatar'];\n\t\t\t}\n\t\t}\n\n\t\t// Perhaps this user has an attachment as avatar...\n\t\telse if (!empty($data['filename']))\n\t\t\t$image = $modSettings['custom_avatar_url'] . '/' . $data['filename'];\n\n\t\t// Right... no avatar... use our default image.\n\t\telse\n\t\t\t$image = $modSettings['avatar_url'] . '/default.png';\n\t}\n\n\tcall_integration_hook('integrate_set_avatar_data', array(&$image, &$data));\n\n\t// At this point in time $image has to be filled unless you chose to force gravatar and the user doesn't have the needed data to retrieve it... thus a check for !empty() is still needed.\n\tif (!empty($image))\n\t\treturn array(\n\t\t\t'name' => !empty($data['avatar']) ? $data['avatar'] : '',\n\t\t\t'image' => '<img class=\"avatar\" src=\"' . $image . '\" />',\n\t\t\t'href' => $image,\n\t\t\t'url' => $image,\n\t\t);\n\n\t// Fallback to make life easier for everyone...\n\telse\n\t\treturn array(\n\t\t\t'name' => '',\n\t\t\t'image' => '',\n\t\t\t'href' => '',\n\t\t\t'url' => '',\n\t\t);\n}\n\n?>\n", "<?php\n\n/**\n * This file is concerned pretty entirely, as you see from its name, with\n * logging in and out members, and the validation of that.\n *\n * Simple Machines Forum (SMF)\n *\n * @package SMF\n * @author Simple Machines http://www.simplemachines.org\n * @copyright 2016 Simple Machines and individual contributors\n * @license http://www.simplemachines.org/about/smf/license.php BSD\n *\n * @version 2.1 Beta 3\n */\n\nif (!defined('SMF'))\n\tdie('No direct access...');\n\n/**\n * Ask them for their login information. (shows a page for the user to type\n *  in their username and password.)\n *  It caches the referring URL in $_SESSION['login_url'].\n *  It is accessed from ?action=login.\n *  @uses Login template and language file with the login sub-template.\n */\nfunction Login()\n{\n\tglobal $txt, $context, $scripturl, $user_info;\n\n\t// You are already logged in, go take a tour of the boards\n\tif (!empty($user_info['id']))\n\t\tredirectexit();\n\n\t// We need to load the Login template/language file.\n\tloadLanguage('Login');\n\tloadTemplate('Login');\n\n\t$context['sub_template'] = 'login';\n\n\tif (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && $_SERVER['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest')\n\t{\n\t\t$context['from_ajax'] = true;\n\t\t$context['template_layers'] = array();\n\t}\n\n\t// Get the template ready.... not really much else to do.\n\t$context['page_title'] = $txt['login'];\n\t$context['default_username'] = &$_REQUEST['u'];\n\t$context['default_password'] = '';\n\t$context['never_expire'] = false;\n\n\t// Add the login chain to the link tree.\n\t$context['linktree'][] = array(\n\t\t'url' => $scripturl . '?action=login',\n\t\t'name' => $txt['login'],\n\t);\n\n\t// Set the login URL - will be used when the login process is done (but careful not to send us to an attachment).\n\tif (isset($_SESSION['old_url']) && strpos($_SESSION['old_url'], 'dlattach') === false && preg_match('~(board|topic)[=,]~', $_SESSION['old_url']) != 0)\n\t\t$_SESSION['login_url'] = $_SESSION['old_url'];\n\telseif (isset($_SESSION['login_url']) && strpos($_SESSION['login_url'], 'dlattach') !== false)\n\t\tunset($_SESSION['login_url']);\n\n\t// Create a one time token.\n\tcreateToken('login');\n}\n\n/**\n * Actually logs you in.\n * What it does:\n * - checks credentials and checks that login was successful.\n * - it employs protection against a specific IP or user trying to brute force\n *  a login to an account.\n * - upgrades password encryption on login, if necessary.\n * - after successful login, redirects you to $_SESSION['login_url'].\n * - accessed from ?action=login2, by forms.\n * On error, uses the same templates Login() uses.\n */\nfunction Login2()\n{\n\tglobal $txt, $scripturl, $user_info, $user_settings, $smcFunc;\n\tglobal $cookiename, $modSettings, $context, $sourcedir, $maintenance;\n\n\t// Check to ensure we're forcing SSL for authentication\n\tif (!empty($modSettings['force_ssl']) && empty($maintenance) && (!isset($_SERVER['HTTPS']) || $_SERVER['HTTPS'] != 'on'))\n\t\tfatal_lang_error('login_ssl_required');\n\n\t// Load cookie authentication stuff.\n\trequire_once($sourcedir . '/Subs-Auth.php');\n\n\tif (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && $_SERVER['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest')\n\t{\n\t\t$context['from_ajax'] = true;\n\t\t$context['template_layers'] = array();\n\t}\n\n\tif (isset($_GET['sa']) && $_GET['sa'] == 'salt' && !$user_info['is_guest'])\n\t{\n\t\tif (isset($_COOKIE[$cookiename]) && preg_match('~^a:[34]:\\{i:0;i:\\d{1,7};i:1;s:(0|128):\"([a-fA-F0-9]{128})?\";i:2;[id]:\\d{1,14};(i:3;i:\\d;)?\\}$~', $_COOKIE[$cookiename]) === 1)\n\t\t{\n\t\t\tlist (, , $timeout) = smf_json_decode($_COOKIE[$cookiename], true);\n\n\t\t\t// That didn't work... Maybe it's using serialize?\n\t\t\tif (is_null($timeout))\n\t\t\t\tlist (, , $timeout) = @unserialize($_COOKIE[$cookiename]);\n\t\t}\n\t\telseif (isset($_SESSION['login_' . $cookiename]))\n\t\t{\n\t\t\tlist (, , $timeout) = smf_json_decode($_SESSION['login_' . $cookiename]);\n\n\t\t\t// Try for old format\n\t\t\tif (is_null($timeout))\n\t\t\t\tlist (, , $timeout) = @unserialize($_SESSION['login_' . $cookiename]);\n\t\t}\n\t\telse\n\t\t\ttrigger_error('Login2(): Cannot be logged in without a session or cookie', E_USER_ERROR);\n\n\t\t$user_settings['password_salt'] = substr(md5(mt_rand()), 0, 4);\n\t\tupdateMemberData($user_info['id'], array('password_salt' => $user_settings['password_salt']));\n\n\t\t// Preserve the 2FA cookie?\n\t\tif (!empty($modSettings['tfa_mode']) && !empty($_COOKIE[$cookiename . '_tfa']))\n\t\t{\n\t\t\t$tfadata = smf_json_decode($_COOKIE[$cookiename . '_tfa'], true);\n\n\t\t\t// If that didn't work, try unserialize instead...\n\t\t\tif (is_null($tfadata))\n\t\t\t\t$tfadata = @unserialize($_COOKIE[$cookiename . '_tfa']);\n\n\t\t\tlist ($tfamember, $tfasecret, $exp, $state, $preserve) = $tfadata;\n\n\t\t\t// If we're preserving the cookie, reset it with updated salt\n\t\t\tif ($preserve && time() < $exp)\n\t\t\t\tsetTFACookie(3153600, $user_info['password_salt'], hash_salt($user_settings['tfa_backup'], $user_settings['password_salt']), true);\n\t\t\telse\n\t\t\t\tsetTFACookie(-3600, 0, '');\n\t\t}\n\n\t\tsetLoginCookie($timeout - time(), $user_info['id'], hash_salt($user_settings['passwd'], $user_settings['password_salt']));\n\n\t\tredirectexit('action=login2;sa=check;member=' . $user_info['id'], $context['server']['needs_login_fix']);\n\t}\n\t// Double check the cookie...\n\telseif (isset($_GET['sa']) && $_GET['sa'] == 'check')\n\t{\n\t\t// Strike!  You're outta there!\n\t\tif ($_GET['member'] != $user_info['id'])\n\t\t\tfatal_lang_error('login_cookie_error', false);\n\n\t\t$user_info['can_mod'] = allowedTo('access_mod_center') || (!$user_info['is_guest'] && ($user_info['mod_cache']['gq'] != '0=1' || $user_info['mod_cache']['bq'] != '0=1' || ($modSettings['postmod_active'] && !empty($user_info['mod_cache']['ap']))));\n\n\t\t// Some whitelisting for login_url...\n\t\tif (empty($_SESSION['login_url']))\n\t\t\tredirectexit(empty($user_settings['tfa_secret']) ? '' : 'action=logintfa');\n\t\telseif (!empty($_SESSION['login_url']) && (strpos($_SESSION['login_url'], 'http://') === false && strpos($_SESSION['login_url'], 'https://') === false))\n\t\t{\n\t\t\tunset ($_SESSION['login_url']);\n\t\t\tredirectexit(empty($user_settings['tfa_secret']) ? '' : 'action=logintfa');\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Best not to clutter the session data too much...\n\t\t\t$temp = $_SESSION['login_url'];\n\t\t\tunset($_SESSION['login_url']);\n\n\t\t\tredirectexit($temp);\n\t\t}\n\t}\n\n\t// Beyond this point you are assumed to be a guest trying to login.\n\tif (!$user_info['is_guest'])\n\t\tredirectexit();\n\n\t// Are you guessing with a script?\n\tcheckSession();\n\t$tk = validateToken('login');\n\tspamProtection('login');\n\n\t// Set the login_url if it's not already set (but careful not to send us to an attachment).\n\tif ((empty($_SESSION['login_url']) && isset($_SESSION['old_url']) && strpos($_SESSION['old_url'], 'dlattach') === false && preg_match('~(board|topic)[=,]~', $_SESSION['old_url']) != 0) || (isset($_GET['quicklogin']) && isset($_SESSION['old_url']) && strpos($_SESSION['old_url'], 'login') === false))\n\t\t$_SESSION['login_url'] = $_SESSION['old_url'];\n\n\t// Been guessing a lot, haven't we?\n\tif (isset($_SESSION['failed_login']) && $_SESSION['failed_login'] >= $modSettings['failed_login_threshold'] * 3)\n\t\tfatal_lang_error('login_threshold_fail', 'critical');\n\n\t// Set up the cookie length.  (if it's invalid, just fall through and use the default.)\n\tif (isset($_POST['cookieneverexp']) || (!empty($_POST['cookielength']) && $_POST['cookielength'] == -1))\n\t\t$modSettings['cookieTime'] = 3153600;\n\telseif (!empty($_POST['cookielength']) && ($_POST['cookielength'] >= 1 && $_POST['cookielength'] <= 525600))\n\t\t$modSettings['cookieTime'] = (int) $_POST['cookielength'];\n\n\tloadLanguage('Login');\n\t// Load the template stuff.\n\tloadTemplate('Login');\n\t$context['sub_template'] = 'login';\n\n\t// Set up the default/fallback stuff.\n\t$context['default_username'] = isset($_POST['user']) ? preg_replace('~&amp;#(\\\\d{1,7}|x[0-9a-fA-F]{1,6});~', '&#\\\\1;', $smcFunc['htmlspecialchars']($_POST['user'])) : '';\n\t$context['default_password'] = '';\n\t$context['never_expire'] = $modSettings['cookieTime'] == 525600 || $modSettings['cookieTime'] == 3153600;\n\t$context['login_errors'] = array($txt['error_occured']);\n\t$context['page_title'] = $txt['login'];\n\n\t// Add the login chain to the link tree.\n\t$context['linktree'][] = array(\n\t\t'url' => $scripturl . '?action=login',\n\t\t'name' => $txt['login'],\n\t);\n\n\t// You forgot to type your username, dummy!\n\tif (!isset($_POST['user']) || $_POST['user'] == '')\n\t{\n\t\t$context['login_errors'] = array($txt['need_username']);\n\t\treturn;\n\t}\n\n\t// Hmm... maybe 'admin' will login with no password. Uhh... NO!\n\tif (!isset($_POST['passwrd']) || $_POST['passwrd'] == '')\n\t{\n\t\t$context['login_errors'] = array($txt['no_password']);\n\t\treturn;\n\t}\n\n\t// No funky symbols either.\n\tif (preg_match('~[<>&\"\\'=\\\\\\]~', preg_replace('~(&#(\\\\d{1,7}|x[0-9a-fA-F]{1,6});)~', '', $_POST['user'])) != 0)\n\t{\n\t\t$context['login_errors'] = array($txt['error_invalid_characters_username']);\n\t\treturn;\n\t}\n\n\t// And if it's too long, trim it back.\n\tif ($smcFunc['strlen']($_POST['user']) > 80)\n\t{\n\t\t$_POST['user'] = $smcFunc['substr']($_POST['user'], 0, 79);\n\t\t$context['default_username'] = preg_replace('~&amp;#(\\\\d{1,7}|x[0-9a-fA-F]{1,6});~', '&#\\\\1;', $smcFunc['htmlspecialchars']($_POST['user']));\n\t}\n\n\t// Load the data up!\n\t$request = $smcFunc['db_query']('', '\n\t\tSELECT passwd, id_member, id_group, lngfile, is_activated, email_address, additional_groups, member_name, password_salt,\n\t\t\tpasswd_flood, tfa_secret\n\t\tFROM {db_prefix}members\n\t\tWHERE ' . ($smcFunc['db_case_sensitive'] ? 'LOWER(member_name) = LOWER({string:user_name})' : 'member_name = {string:user_name}') . '\n\t\tLIMIT 1',\n\t\tarray(\n\t\t\t'user_name' => $smcFunc['db_case_sensitive'] ? strtolower($_POST['user']) : $_POST['user'],\n\t\t)\n\t);\n\t// Probably mistyped or their email, try it as an email address. (member_name first, though!)\n\tif ($smcFunc['db_num_rows']($request) == 0 && strpos($_POST['user'], '@') !== false)\n\t{\n\t\t$smcFunc['db_free_result']($request);\n\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT passwd, id_member, id_group, lngfile, is_activated, email_address, additional_groups, member_name, password_salt,\n\t\t\tpasswd_flood, tfa_secret\n\t\t\tFROM {db_prefix}members\n\t\t\tWHERE email_address = {string:user_name}\n\t\t\tLIMIT 1',\n\t\t\tarray(\n\t\t\t\t'user_name' => $_POST['user'],\n\t\t\t)\n\t\t);\n\t}\n\n\t// Let them try again, it didn't match anything...\n\tif ($smcFunc['db_num_rows']($request) == 0)\n\t{\n\t\t$context['login_errors'] = array($txt['username_no_exist']);\n\t\treturn;\n\t}\n\n\t$user_settings = $smcFunc['db_fetch_assoc']($request);\n\t$smcFunc['db_free_result']($request);\n\n\t// Bad password!  Thought you could fool the database?!\n\tif (!hash_verify_password($user_settings['member_name'], un_htmlspecialchars($_POST['passwrd']), $user_settings['passwd']))\n\t{\n\t\t// Let's be cautious, no hacking please. thanx.\n\t\tvalidatePasswordFlood($user_settings['id_member'], $user_settings['passwd_flood']);\n\n\t\t// Maybe we were too hasty... let's try some other authentication methods.\n\t\t$other_passwords = array();\n\n\t\t// None of the below cases will be used most of the time (because the salt is normally set.)\n\t\tif (!empty($modSettings['enable_password_conversion']) && $user_settings['password_salt'] == '')\n\t\t{\n\t\t\t// YaBB SE, Discus, MD5 (used a lot), SHA-1 (used some), SMF 1.0.x, IkonBoard, and none at all.\n\t\t\t$other_passwords[] = crypt($_POST['passwrd'], substr($_POST['passwrd'], 0, 2));\n\t\t\t$other_passwords[] = crypt($_POST['passwrd'], substr($user_settings['passwd'], 0, 2));\n\t\t\t$other_passwords[] = md5($_POST['passwrd']);\n\t\t\t$other_passwords[] = sha1($_POST['passwrd']);\n\t\t\t$other_passwords[] = md5_hmac($_POST['passwrd'], strtolower($user_settings['member_name']));\n\t\t\t$other_passwords[] = md5($_POST['passwrd'] . strtolower($user_settings['member_name']));\n\t\t\t$other_passwords[] = md5(md5($_POST['passwrd']));\n\t\t\t$other_passwords[] = $_POST['passwrd'];\n\n\t\t\t// This one is a strange one... MyPHP, crypt() on the MD5 hash.\n\t\t\t$other_passwords[] = crypt(md5($_POST['passwrd']), md5($_POST['passwrd']));\n\n\t\t\t// Snitz style - SHA-256.  Technically, this is a downgrade, but most PHP configurations don't support sha256 anyway.\n\t\t\tif (strlen($user_settings['passwd']) == 64 && function_exists('mhash') && defined('MHASH_SHA256'))\n\t\t\t\t$other_passwords[] = bin2hex(mhash(MHASH_SHA256, $_POST['passwrd']));\n\n\t\t\t// phpBB3 users new hashing.  We now support it as well ;).\n\t\t\t$other_passwords[] = phpBB3_password_check($_POST['passwrd'], $user_settings['passwd']);\n\n\t\t\t// APBoard 2 Login Method.\n\t\t\t$other_passwords[] = md5(crypt($_POST['passwrd'], 'CRYPT_MD5'));\n\t\t}\n\t\t// The hash should be 40 if it's SHA-1, so we're safe with more here too.\n\t\telseif (!empty($modSettings['enable_password_conversion']) && strlen($user_settings['passwd']) == 32)\n\t\t{\n\t\t\t// vBulletin 3 style hashing?  Let's welcome them with open arms \\o/.\n\t\t\t$other_passwords[] = md5(md5($_POST['passwrd']) . stripslashes($user_settings['password_salt']));\n\n\t\t\t// Hmm.. p'raps it's Invision 2 style?\n\t\t\t$other_passwords[] = md5(md5($user_settings['password_salt']) . md5($_POST['passwrd']));\n\n\t\t\t// Some common md5 ones.\n\t\t\t$other_passwords[] = md5($user_settings['password_salt'] . $_POST['passwrd']);\n\t\t\t$other_passwords[] = md5($_POST['passwrd'] . $user_settings['password_salt']);\n\t\t}\n\t\telseif (strlen($user_settings['passwd']) == 40)\n\t\t{\n\t\t\t// Maybe they are using a hash from before the password fix.\n\t\t\t// This is also valid for SMF 1.1 to 2.0 style of hashing, changed to bcrypt in SMF 2.1\n\t\t\t$other_passwords[] = sha1(strtolower($user_settings['member_name']) . un_htmlspecialchars($_POST['passwrd']));\n\n\t\t\t// BurningBoard3 style of hashing.\n\t\t\tif (!empty($modSettings['enable_password_conversion']))\n\t\t\t\t$other_passwords[] = sha1($user_settings['password_salt'] . sha1($user_settings['password_salt'] . sha1($_POST['passwrd'])));\n\n\t\t\t// Perhaps we converted to UTF-8 and have a valid password being hashed differently.\n\t\t\tif ($context['character_set'] == 'utf8' && !empty($modSettings['previousCharacterSet']) && $modSettings['previousCharacterSet'] != 'utf8')\n\t\t\t{\n\t\t\t\t// Try iconv first, for no particular reason.\n\t\t\t\tif (function_exists('iconv'))\n\t\t\t\t\t$other_passwords['iconv'] = sha1(strtolower(iconv('UTF-8', $modSettings['previousCharacterSet'], $user_settings['member_name'])) . un_htmlspecialchars(iconv('UTF-8', $modSettings['previousCharacterSet'], $_POST['passwrd'])));\n\n\t\t\t\t// Say it aint so, iconv failed!\n\t\t\t\tif (empty($other_passwords['iconv']) && function_exists('mb_convert_encoding'))\n\t\t\t\t\t$other_passwords[] = sha1(strtolower(mb_convert_encoding($user_settings['member_name'], 'UTF-8', $modSettings['previousCharacterSet'])) . un_htmlspecialchars(mb_convert_encoding($_POST['passwrd'], 'UTF-8', $modSettings['previousCharacterSet'])));\n\t\t\t}\n\t\t}\n\n\t\t// SMF's sha1 function can give a funny result on Linux (Not our fault!). If we've now got the real one let the old one be valid!\n\t\tif (stripos(PHP_OS, 'win') !== 0 && strlen($user_settings['passwd']) < hash_length())\n\t\t{\n\t\t\trequire_once($sourcedir . '/Subs-Compat.php');\n\t\t\t$other_passwords[] = sha1_smf(strtolower($user_settings['member_name']) . un_htmlspecialchars($_POST['passwrd']));\n\t\t}\n\n\t\t// Allows mods to easily extend the $other_passwords array\n\t\tcall_integration_hook('integrate_other_passwords', array(&$other_passwords));\n\n\t\t// Whichever encryption it was using, let's make it use SMF's now ;).\n\t\tif (in_array($user_settings['passwd'], $other_passwords))\n\t\t{\n\t\t\t$user_settings['passwd'] = hash_password($user_settings['member_name'], un_htmlspecialchars($_POST['passwrd']));\n\t\t\t$user_settings['password_salt'] = substr(md5(mt_rand()), 0, 4);\n\n\t\t\t// Update the password and set up the hash.\n\t\t\tupdateMemberData($user_settings['id_member'], array('passwd' => $user_settings['passwd'], 'password_salt' => $user_settings['password_salt'], 'passwd_flood' => ''));\n\t\t}\n\t\t// Okay, they for sure didn't enter the password!\n\t\telse\n\t\t{\n\t\t\t// They've messed up again - keep a count to see if they need a hand.\n\t\t\t$_SESSION['failed_login'] = isset($_SESSION['failed_login']) ? ($_SESSION['failed_login'] + 1) : 1;\n\n\t\t\t// Hmm... don't remember it, do you?  Here, try the password reminder ;).\n\t\t\tif ($_SESSION['failed_login'] >= $modSettings['failed_login_threshold'])\n\t\t\t\tredirectexit('action=reminder');\n\t\t\t// We'll give you another chance...\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Log an error so we know that it didn't go well in the error log.\n\t\t\t\tlog_error($txt['incorrect_password'] . ' - <span class=\"remove\">' . $user_settings['member_name'] . '</span>', 'user');\n\n\t\t\t\t$context['login_errors'] = array($txt['incorrect_password']);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\telseif (!empty($user_settings['passwd_flood']))\n\t{\n\t\t// Let's be sure they weren't a little hacker.\n\t\tvalidatePasswordFlood($user_settings['id_member'], $user_settings['passwd_flood'], true);\n\n\t\t// If we got here then we can reset the flood counter.\n\t\tupdateMemberData($user_settings['id_member'], array('passwd_flood' => ''));\n\t}\n\n\t// Correct password, but they've got no salt; fix it!\n\tif ($user_settings['password_salt'] == '')\n\t{\n\t\t$user_settings['password_salt'] = substr(md5(mt_rand()), 0, 4);\n\t\tupdateMemberData($user_settings['id_member'], array('password_salt' => $user_settings['password_salt']));\n\t}\n\n\t// Check their activation status.\n\tif (!checkActivation())\n\t\treturn;\n\n\tDoLogin();\n}\n\n/**\n * Allows the user to enter their Two-Factor Authentication code\n */\nfunction LoginTFA()\n{\n\tglobal $sourcedir, $txt, $context, $user_info, $modSettings, $scripturl;\n\n\tif (!$user_info['is_guest'] || empty($context['tfa_member']) || empty($modSettings['tfa_mode']))\n\t\tfatal_lang_error('no_access', false);\n\n\tloadLanguage('Profile');\n\trequire_once($sourcedir . '/Class-TOTP.php');\n\n\t$member = $context['tfa_member'];\n\n\t// Prevent replay attacks by limiting at least 2 minutes before they can log in again via 2FA\n\tif (time() - $member['last_login'] < 120)\n\t\tfatal_lang_error('tfa_wait', false);\n\n\t$totp = new \\TOTP\\Auth($member['tfa_secret']);\n\t$totp->setRange(1);\n\n\tif (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && $_SERVER['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest')\n\t{\n\t\t$context['from_ajax'] = true;\n\t\t$context['template_layers'] = array();\n\t}\n\n\tif (!empty($_POST['tfa_code']) && empty($_POST['tfa_backup']))\n\t{\n\t\t// Check to ensure we're forcing SSL for authentication\n\t\tif (!empty($modSettings['force_ssl']) && empty($maintenance) && (!isset($_SERVER['HTTPS']) || $_SERVER['HTTPS'] != 'on'))\n\t\t\tfatal_lang_error('login_ssl_required');\n\n\t\t$code = $_POST['tfa_code'];\n\n\t\tif (strlen($code) == $totp->getCodeLength() && $totp->validateCode($code))\n\t\t{\n\t\t\tupdateMemberData($member['id_member'], array('last_login' => time()));\n\n\t\t\tsetTFACookie(3153600, $member['id_member'], hash_salt($member['tfa_backup'], $member['password_salt']), !empty($_POST['tfa_preserve']));\n\t\t\tredirectexit();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvalidatePasswordFlood($member['id_member'], $member['passwd_flood'], false, true);\n\n\t\t\t$context['tfa_error'] = true;\n\t\t\t$context['tfa_value'] = $_POST['tfa_code'];\n\t\t}\n\t}\n\telseif (!empty($_POST['tfa_backup']))\n\t{\n\t\t// Check to ensure we're forcing SSL for authentication\n\t\tif (!empty($modSettings['force_ssl']) && empty($maintenance) && (!isset($_SERVER['HTTPS']) || $_SERVER['HTTPS'] != 'on'))\n\t\t\tfatal_lang_error('login_ssl_required');\n\n\t\t$backup = $_POST['tfa_backup'];\n\n\t\tif (hash_verify_password($member['member_name'], $backup, $member['tfa_backup']))\n\t\t{\n\t\t\t// Get rid of their current TFA settings\n\t\t\tupdateMemberData($member['id_member'], array(\n\t\t\t\t'tfa_secret' => '',\n\t\t\t\t'tfa_backup' => '',\n\t\t\t\t'last_login' => time(),\n\t\t\t));\n\t\t\tsetTFACookie(3153600, $member['id_member'], hash_salt($member['tfa_backup'], $member['password_salt']));\n\t\t\tredirectexit('action=profile;area=tfasetup;backup');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvalidatePasswordFlood($member['id_member'], $member['passwd_flood'], false, true);\n\n\t\t\t$context['tfa_backup_error'] = true;\n\t\t\t$context['tfa_value'] = $_POST['tfa_code'];\n\t\t\t$context['tfa_backup_value'] = $_POST['tfa_backup'];\n\t\t}\n\t}\n\n\tloadTemplate('Login');\n\t$context['sub_template'] = 'login_tfa';\n\t$context['page_title'] = $txt['login'];\n\t$context['tfa_url'] = (!empty($modSettings['force_ssl']) && $modSettings['force_ssl'] < 2 ? strtr($scripturl, array('http://' => 'https://')) : $scripturl) . '?action=logintfa';\n}\n\n/**\n * Check activation status of the current user.\n */\nfunction checkActivation()\n{\n\tglobal $context, $txt, $scripturl, $user_settings, $modSettings;\n\n\tif (!isset($context['login_errors']))\n\t\t$context['login_errors'] = array();\n\n\t// What is the true activation status of this account?\n\t$activation_status = $user_settings['is_activated'] > 10 ? $user_settings['is_activated'] - 10 : $user_settings['is_activated'];\n\n\t// Check if the account is activated - COPPA first...\n\tif ($activation_status == 5)\n\t{\n\t\t$context['login_errors'][] = $txt['coppa_no_concent'] . ' <a href=\"' . $scripturl . '?action=coppa;member=' . $user_settings['id_member'] . '\">' . $txt['coppa_need_more_details'] . '</a>';\n\t\treturn false;\n\t}\n\t// Awaiting approval still?\n\telseif ($activation_status == 3)\n\t\tfatal_lang_error('still_awaiting_approval', 'user');\n\t// Awaiting deletion, changed their mind?\n\telseif ($activation_status == 4)\n\t{\n\t\tif (isset($_REQUEST['undelete']))\n\t\t{\n\t\t\tupdateMemberData($user_settings['id_member'], array('is_activated' => 1));\n\t\t\tupdateSettings(array('unapprovedMembers' => ($modSettings['unapprovedMembers'] > 0 ? $modSettings['unapprovedMembers'] - 1 : 0)));\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$context['disable_login_hashing'] = true;\n\t\t\t$context['login_errors'][] = $txt['awaiting_delete_account'];\n\t\t\t$context['login_show_undelete'] = true;\n\t\t\treturn false;\n\t\t}\n\t}\n\t// Standard activation?\n\telseif ($activation_status != 1)\n\t{\n\t\tlog_error($txt['activate_not_completed1'] . ' - <span class=\"remove\">' . $user_settings['member_name'] . '</span>', false);\n\n\t\t$context['login_errors'][] = $txt['activate_not_completed1'] . ' <a href=\"' . $scripturl . '?action=activate;sa=resend;u=' . $user_settings['id_member'] . '\">' . $txt['activate_not_completed2'] . '</a>';\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n/**\n * Perform the logging in. (set cookie, call hooks, etc)\n */\nfunction DoLogin()\n{\n\tglobal $user_info, $user_settings, $smcFunc;\n\tglobal $maintenance, $modSettings, $context, $sourcedir;\n\n\t// Load cookie authentication stuff.\n\trequire_once($sourcedir . '/Subs-Auth.php');\n\n\t// Call login integration functions.\n\tcall_integration_hook('integrate_login', array($user_settings['member_name'], null, $modSettings['cookieTime']));\n\n\t// Get ready to set the cookie...\n\t$username = $user_settings['member_name'];\n\t$user_info['id'] = $user_settings['id_member'];\n\n\t// Bam!  Cookie set.  A session too, just in case.\n\tsetLoginCookie(60 * $modSettings['cookieTime'], $user_settings['id_member'], hash_salt($user_settings['passwd'], $user_settings['password_salt']));\n\n\t// Reset the login threshold.\n\tif (isset($_SESSION['failed_login']))\n\t\tunset($_SESSION['failed_login']);\n\n\t$user_info['is_guest'] = false;\n\t$user_settings['additional_groups'] = explode(',', $user_settings['additional_groups']);\n\t$user_info['is_admin'] = $user_settings['id_group'] == 1 || in_array(1, $user_settings['additional_groups']);\n\n\t// Are you banned?\n\tis_not_banned(true);\n\n\t// Don't stick the language or theme after this point.\n\tunset($_SESSION['language'], $_SESSION['id_theme']);\n\n\t// First login?\n\t$request = $smcFunc['db_query']('', '\n\t\tSELECT last_login\n\t\tFROM {db_prefix}members\n\t\tWHERE id_member = {int:id_member}\n\t\t\tAND last_login = 0',\n\t\tarray(\n\t\t\t'id_member' => $user_info['id'],\n\t\t)\n\t);\n\tif ($smcFunc['db_num_rows']($request) == 1)\n\t\t$_SESSION['first_login'] = true;\n\telse\n\t\tunset($_SESSION['first_login']);\n\t$smcFunc['db_free_result']($request);\n\n\t// You've logged in, haven't you?\n\t$update = array('member_ip' => $user_info['ip'], 'member_ip2' => $_SERVER['BAN_CHECK_IP']);\n\tif (empty($user_settings['tfa_secret']))\n\t\t$update['last_login'] = time();\n\tupdateMemberData($user_info['id'], $update);\n\n\t// Get rid of the online entry for that old guest....\n\t$smcFunc['db_query']('', '\n\t\tDELETE FROM {db_prefix}log_online\n\t\tWHERE session = {string:session}',\n\t\tarray(\n\t\t\t'session' => 'ip' . $user_info['ip'],\n\t\t)\n\t);\n\t$_SESSION['log_time'] = 0;\n\n\t// Log this entry, only if we have it enabled.\n\tif (!empty($modSettings['loginHistoryDays']))\n\t\t$smcFunc['db_insert']('insert',\n\t\t\t'{db_prefix}member_logins',\n\t\t\tarray(\n\t\t\t\t'id_member' => 'int', 'time' => 'int', 'ip' => 'inet', 'ip2' => 'inet',\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t$user_info['id'], time(), $user_info['ip'], $user_info['ip2']\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'id_member', 'time'\n\t\t\t)\n\t\t);\n\n\t// Just log you back out if it's in maintenance mode and you AREN'T an admin.\n\tif (empty($maintenance) || allowedTo('admin_forum'))\n\t\tredirectexit('action=login2;sa=check;member=' . $user_info['id'], $context['server']['needs_login_fix']);\n\telse\n\t\tredirectexit('action=logout;' . $context['session_var'] . '=' . $context['session_id'], $context['server']['needs_login_fix']);\n}\n\n/**\n * Logs the current user out of their account.\n * It requires that the session hash is sent as well, to prevent automatic logouts by images or javascript.\n * It redirects back to $_SESSION['logout_url'], if it exists.\n * It is accessed via ?action=logout;session_var=...\n *\n * @param bool $internal If true, it doesn't check the session\n * @param bool $redirect Whether or not to redirect the user after they log out\n */\nfunction Logout($internal = false, $redirect = true)\n{\n\tglobal $sourcedir, $user_info, $user_settings, $context, $smcFunc, $cookiename, $modSettings;\n\n\t// Make sure they aren't being auto-logged out.\n\tif (!$internal)\n\t\tcheckSession('get');\n\n\trequire_once($sourcedir . '/Subs-Auth.php');\n\n\tif (isset($_SESSION['pack_ftp']))\n\t\t$_SESSION['pack_ftp'] = null;\n\n\t// It won't be first login anymore.\n\tunset($_SESSION['first_login']);\n\n\t// Just ensure they aren't a guest!\n\tif (!$user_info['is_guest'])\n\t{\n\t\t// Pass the logout information to integrations.\n\t\tcall_integration_hook('integrate_logout', array($user_settings['member_name']));\n\n\t\t// If you log out, you aren't online anymore :P.\n\t\t$smcFunc['db_query']('', '\n\t\t\tDELETE FROM {db_prefix}log_online\n\t\t\tWHERE id_member = {int:current_member}',\n\t\t\tarray(\n\t\t\t\t'current_member' => $user_info['id'],\n\t\t\t)\n\t\t);\n\t}\n\n\t$_SESSION['log_time'] = 0;\n\n\t// Empty the cookie! (set it in the past, and for id_member = 0)\n\tsetLoginCookie(-3600, 0);\n\n\t// And some other housekeeping while we're at it.\n\t$salt = substr(md5(mt_rand()), 0, 4);\n\tif (!empty($user_info['id']))\n\t\tupdateMemberData($user_info['id'], array('password_salt' => $salt));\n\n\tif (!empty($modSettings['tfa_mode']) && !empty($user_info['id']) && !empty($_COOKIE[$cookiename . '_tfa']))\n\t{\n\t\t$tfadata = smf_json_decode($_COOKIE[$cookiename . '_tfa'], true);\n\n\t\t// If that failed, try the old method\n\t\tif (is_null($tfadata))\n\t\t\t$tfadata = @unserialize($_COOKIE[$cookiename . '_tfa']);\n\n\t\tlist ($tfamember, $tfasecret, $exp, $state, $preserve) = $tfadata;\n\n\t\t// If we're preserving the cookie, reset it with updated salt\n\t\tif ($preserve && time() < $exp)\n\t\t\tsetTFACookie(3153600, $user_info['id'], hash_salt($user_settings['tfa_backup'], $salt), true);\n\t\telse\n\t\t\tsetTFACookie(-3600, 0, '');\n\t}\n\n\tsession_destroy();\n\n\t// Off to the merry board index we go!\n\tif ($redirect)\n\t{\n\t\tif (empty($_SESSION['logout_url']))\n\t\t\tredirectexit('', $context['server']['needs_login_fix']);\n\t\telseif (!empty($_SESSION['logout_url']) && (strpos($_SESSION['logout_url'], 'http://') === false && strpos($_SESSION['logout_url'], 'https://') === false))\n\t\t{\n\t\t\tunset ($_SESSION['logout_url']);\n\t\t\tredirectexit();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$temp = $_SESSION['logout_url'];\n\t\t\tunset($_SESSION['logout_url']);\n\n\t\t\tredirectexit($temp, $context['server']['needs_login_fix']);\n\t\t}\n\t}\n}\n\n/**\n * MD5 Encryption used for older passwords. (SMF 1.0.x/YaBB SE 1.5.x hashing)\n *\n * @param string $data The data\n * @param string $key The key\n * @return string The HMAC MD5 of data with key\n */\nfunction md5_hmac($data, $key)\n{\n\t$key = str_pad(strlen($key) <= 64 ? $key : pack('H*', md5($key)), 64, chr(0x00));\n\treturn md5(($key ^ str_repeat(chr(0x5c), 64)) . pack('H*', md5(($key ^ str_repeat(chr(0x36), 64)) . $data)));\n}\n\n/**\n * Custom encryption for phpBB3 based passwords.\n *\n * @param string $passwd The raw (unhashed) password\n * @param string $passwd_hash The hashed password\n * @return string The hashed version of $passwd\n */\nfunction phpBB3_password_check($passwd, $passwd_hash)\n{\n\t// Too long or too short?\n\tif (strlen($passwd_hash) != 34)\n\t\treturn;\n\n\t// Range of characters allowed.\n\t$range = './0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n\t// Tests\n\t$strpos = strpos($range, $passwd_hash[3]);\n\t$count = 1 << $strpos;\n\t$count2 = $count;\n\t$salt = substr($passwd_hash, 4, 8);\n\n\t$hash = md5($salt . $passwd, true);\n\tfor (; $count != 0; --$count)\n\t\t$hash = md5($hash . $passwd, true);\n\n\t$output = substr($passwd_hash, 0, 12);\n\t$i = 0;\n\twhile ($i < 16)\n\t{\n\t\t$value = ord($hash[$i++]);\n\t\t$output .= $range[$value & 0x3f];\n\n\t\tif ($i < 16)\n\t\t\t$value |= ord($hash[$i]) << 8;\n\n\t\t$output .= $range[($value >> 6) & 0x3f];\n\n\t\tif ($i++ >= 16)\n\t\t\tbreak;\n\n\t\tif ($i < 16)\n\t\t\t$value |= ord($hash[$i]) << 16;\n\n\t\t$output .= $range[($value >> 12) & 0x3f];\n\n\t\tif ($i++ >= 16)\n\t\t\tbreak;\n\n\t\t$output .= $range[($value >> 18) & 0x3f];\n\t}\n\n\t// Return now.\n\treturn $output;\n}\n\n/**\n * This protects against brute force attacks on a member's password.\n * Importantly, even if the password was right we DON'T TELL THEM!\n *\n * @param int $id_member The ID of the member\n * @param bool|string $password_flood_value False if we don't have a flood value, otherwise a string with a timestamp and number of tries separated by a |\n * @param bool $was_correct Whether or not the password was correct\n * @param bool $tfa Whether we're validating for two-factor authentication\n */\nfunction validatePasswordFlood($id_member, $password_flood_value = false, $was_correct = false, $tfa = false)\n{\n\tglobal $cookiename, $sourcedir;\n\n\t// As this is only brute protection, we allow 5 attempts every 10 seconds.\n\n\t// Destroy any session or cookie data about this member, as they validated wrong.\n\t// Only if they're not validating for 2FA\n\tif (!$tfa)\n\t{\n\t\trequire_once($sourcedir . '/Subs-Auth.php');\n\t\tsetLoginCookie(-3600, 0);\n\n\t\tif (isset($_SESSION['login_' . $cookiename]))\n\t\t\tunset($_SESSION['login_' . $cookiename]);\n\t}\n\n\t// We need a member!\n\tif (!$id_member)\n\t{\n\t\t// Redirect back!\n\t\tredirectexit();\n\n\t\t// Probably not needed, but still make sure...\n\t\tfatal_lang_error('no_access', false);\n\t}\n\n\t// Right, have we got a flood value?\n\tif ($password_flood_value !== false)\n\t\t@list ($time_stamp, $number_tries) = explode('|', $password_flood_value);\n\n\t// Timestamp or number of tries invalid?\n\tif (empty($number_tries) || empty($time_stamp))\n\t{\n\t\t$number_tries = 0;\n\t\t$time_stamp = time();\n\t}\n\n\t// They've failed logging in already\n\tif (!empty($number_tries))\n\t{\n\t\t// Give them less chances if they failed before\n\t\t$number_tries = $time_stamp < time() - 20 ? 2 : $number_tries;\n\n\t\t// They are trying too fast, make them wait longer\n\t\tif ($time_stamp < time() - 10)\n\t\t\t$time_stamp = time();\n\t}\n\n\t$number_tries++;\n\n\t// Broken the law?\n\tif ($number_tries > 5)\n\t\tfatal_lang_error('login_threshold_brute_fail', 'critical');\n\n\t// Otherwise set the members data. If they correct on their first attempt then we actually clear it, otherwise we set it!\n\tupdateMemberData($id_member, array('passwd_flood' => $was_correct && $number_tries == 1 ? '' : $time_stamp . '|' . $number_tries));\n\n}\n\n?>\n", "<?php\n\n/**\n * This file has functions in it to do with authentication, user handling, and the like.\n *\n * Simple Machines Forum (SMF)\n *\n * @package SMF\n * @author Simple Machines http://www.simplemachines.org\n * @copyright 2016 Simple Machines and individual contributors\n * @license http://www.simplemachines.org/about/smf/license.php BSD\n *\n * @version 2.1 Beta 3\n */\n\nif (!defined('SMF'))\n\tdie('No direct access...');\n\n/**\n * Sets the SMF-style login cookie and session based on the id_member and password passed.\n * - password should be already encrypted with the cookie salt.\n * - logs the user out if id_member is zero.\n * - sets the cookie and session to last the number of seconds specified by cookie_length.\n * - when logging out, if the globalCookies setting is enabled, attempts to clear the subdomain's cookie too.\n *\n * @param int $cookie_length How long the cookie should last (in minutes)\n * @param int $id The ID of the member to set the cookie for\n * @param string $password The hashed password\n */\nfunction setLoginCookie($cookie_length, $id, $password = '')\n{\n\tglobal $cookiename, $boardurl, $modSettings, $sourcedir;\n\n\t$id = (int) $id;\n\n\t// If changing state force them to re-address some permission caching.\n\t$_SESSION['mc']['time'] = 0;\n\n\t// The cookie may already exist, and have been set with different options.\n\t$cookie_state = (empty($modSettings['localCookies']) ? 0 : 1) | (empty($modSettings['globalCookies']) ? 0 : 2);\n\tif (isset($_COOKIE[$cookiename]) && preg_match('~^a:[34]:\\{i:0;i:\\d{1,7};i:1;s:(0|128):\"([a-fA-F0-9]{128})?\";i:2;[id]:\\d{1,14};(i:3;i:\\d;)?\\}$~', $_COOKIE[$cookiename]) === 1)\n\t{\n\t\t$array = smf_json_decode($_COOKIE[$cookiename], true);\n\n\t\t// Legacy format\n\t\tif (is_null($array))\n\t\t\t$array = @unserialize($_COOKIE[$cookiename]);\n\n\t\t// Out with the old, in with the new!\n\t\tif (isset($array[3]) && $array[3] != $cookie_state)\n\t\t{\n\t\t\t$cookie_url = url_parts($array[3] & 1 > 0, $array[3] & 2 > 0);\n\t\t\tsmf_setcookie($cookiename, json_encode(array(0, '', 0)), time() - 3600, $cookie_url[1], $cookie_url[0]);\n\t\t}\n\t}\n\n\t// Get the data and path to set it on.\n\t$data = json_encode(empty($id) ? array(0, '', 0) : array($id, $password, time() + $cookie_length, $cookie_state));\n\t$cookie_url = url_parts(!empty($modSettings['localCookies']), !empty($modSettings['globalCookies']));\n\n\t// Set the cookie, $_COOKIE, and session variable.\n\tsmf_setcookie($cookiename, $data, time() + $cookie_length, $cookie_url[1], $cookie_url[0]);\n\n\t// If subdomain-independent cookies are on, unset the subdomain-dependent cookie too.\n\tif (empty($id) && !empty($modSettings['globalCookies']))\n\t\tsmf_setcookie($cookiename, $data, time() + $cookie_length, $cookie_url[1], '');\n\n\t// Any alias URLs?  This is mainly for use with frames, etc.\n\tif (!empty($modSettings['forum_alias_urls']))\n\t{\n\t\t$aliases = explode(',', $modSettings['forum_alias_urls']);\n\n\t\t$temp = $boardurl;\n\t\tforeach ($aliases as $alias)\n\t\t{\n\t\t\t// Fake the $boardurl so we can set a different cookie.\n\t\t\t$alias = strtr(trim($alias), array('http://' => '', 'https://' => ''));\n\t\t\t$boardurl = 'http://' . $alias;\n\n\t\t\t$cookie_url = url_parts(!empty($modSettings['localCookies']), !empty($modSettings['globalCookies']));\n\n\t\t\tif ($cookie_url[0] == '')\n\t\t\t\t$cookie_url[0] = strtok($alias, '/');\n\n\t\t\tsmf_setcookie($cookiename, $data, time() + $cookie_length, $cookie_url[1], $cookie_url[0]);\n\t\t}\n\n\t\t$boardurl = $temp;\n\t}\n\n\t$_COOKIE[$cookiename] = $data;\n\n\t// Make sure the user logs in with a new session ID.\n\tif (!isset($_SESSION['login_' . $cookiename]) || $_SESSION['login_' . $cookiename] !== $data)\n\t{\n\t\t// We need to meddle with the session.\n\t\trequire_once($sourcedir . '/Session.php');\n\n\t\t// Backup and remove the old session.\n\t\t$oldSessionData = $_SESSION;\n\t\t$_SESSION = array();\n\t\tsession_destroy();\n\n\t\t// Recreate and restore the new session.\n\t\tloadSession();\n\t\t// @todo should we use session_regenerate_id(true); now that we are 5.1+\n\t\tsession_regenerate_id();\n\t\t$_SESSION = $oldSessionData;\n\n\t\t$_SESSION['login_' . $cookiename] = $data;\n\t}\n}\n\n/**\n * Sets Two Factor Auth cookie\n *\n * @param int $cookie_length How long the cookie should last, in minutes\n * @param int $id The ID of the member\n * @param string $secret Should be a salted secret using hash_salt\n * @param bool $preserve Whether to preserve the cookie for 30 days\n */\nfunction setTFACookie($cookie_length, $id, $secret, $preserve = false)\n{\n\tglobal $modSettings, $cookiename, $boardurl;\n\n\t$identifier = $cookiename . '_tfa';\n\t$cookie_state = (empty($modSettings['localCookies']) ? 0 : 1) | (empty($modSettings['globalCookies']) ? 0 : 2);\n\n\tif ($preserve)\n\t\t$cookie_length = 81600 * 30;\n\n\t// Get the data and path to set it on.\n\t$data = json_encode(empty($id) ? array(0, '', 0, $cookie_state, false) : array($id, $secret, time() + $cookie_length, $cookie_state, $preserve));\n\t$cookie_url = url_parts(!empty($modSettings['localCookies']), !empty($modSettings['globalCookies']));\n\n\t// Set the cookie, $_COOKIE, and session variable.\n\tsmf_setcookie($identifier, $data, time() + $cookie_length, $cookie_url[1], $cookie_url[0]);\n\n\t// If subdomain-independent cookies are on, unset the subdomain-dependent cookie too.\n\tif (empty($id) && !empty($modSettings['globalCookies']))\n\t\tsmf_setcookie($identifier, $data, time() + $cookie_length, $cookie_url[1], '');\n\n\t$_COOKIE[$identifier] = $data;\n}\n\n/**\n * Get the domain and path for the cookie\n * - normally, local and global should be the localCookies and globalCookies settings, respectively.\n * - uses boardurl to determine these two things.\n *\n * @param bool $local Whether we want local cookies\n * @param bool $global Whether we want global cookies\n * @return array An array to set the cookie on with domain and path in it, in that order\n */\nfunction url_parts($local, $global)\n{\n\tglobal $boardurl, $modSettings;\n\n\t// Parse the URL with PHP to make life easier.\n\t$parsed_url = parse_url($boardurl);\n\n\t// Is local cookies off?\n\tif (empty($parsed_url['path']) || !$local)\n\t\t$parsed_url['path'] = '';\n\n\tif (!empty($modSettings['globalCookiesDomain']) && strpos($boardurl, $modSettings['globalCookiesDomain']) !== false)\n\t\t$parsed_url['host'] = $modSettings['globalCookiesDomain'];\n\n\t// Globalize cookies across domains (filter out IP-addresses)?\n\telseif ($global && preg_match('~^\\d{1,3}(\\.\\d{1,3}){3}$~', $parsed_url['host']) == 0 && preg_match('~(?:[^\\.]+\\.)?([^\\.]{2,}\\..+)\\z~i', $parsed_url['host'], $parts) == 1)\n\t\t$parsed_url['host'] = '.' . $parts[1];\n\n\t// We shouldn't use a host at all if both options are off.\n\telseif (!$local && !$global)\n\t\t$parsed_url['host'] = '';\n\n\t// The host also shouldn't be set if there aren't any dots in it.\n\telseif (!isset($parsed_url['host']) || strpos($parsed_url['host'], '.') === false)\n\t\t$parsed_url['host'] = '';\n\n\treturn array($parsed_url['host'], $parsed_url['path'] . '/');\n}\n\n/**\n * Throws guests out to the login screen when guest access is off.\n * - sets $_SESSION['login_url'] to $_SERVER['REQUEST_URL'].\n * - uses the 'kick_guest' sub template found in Login.template.php.\n */\nfunction KickGuest()\n{\n\tglobal $txt, $context;\n\n\tloadLanguage('Login');\n\tloadTemplate('Login');\n\tcreateToken('login');\n\n\t// Never redirect to an attachment\n\tif (strpos($_SERVER['REQUEST_URL'], 'dlattach') === false)\n\t\t$_SESSION['login_url'] = $_SERVER['REQUEST_URL'];\n\n\t$context['sub_template'] = 'kick_guest';\n\t$context['page_title'] = $txt['login'];\n}\n\n/**\n * Display a message about the forum being in maintenance mode.\n * - display a login screen with sub template 'maintenance'.\n * - sends a 503 header, so search engines don't bother indexing while we're in maintenance mode.\n */\nfunction InMaintenance()\n{\n\tglobal $txt, $mtitle, $mmessage, $context, $smcFunc;\n\n\tloadLanguage('Login');\n\tloadTemplate('Login');\n\tcreateToken('login');\n\n\t// Send a 503 header, so search engines don't bother indexing while we're in maintenance mode.\n\theader('HTTP/1.1 503 Service Temporarily Unavailable');\n\n\t// Basic template stuff..\n\t$context['sub_template'] = 'maintenance';\n\t$context['title'] = $smcFunc['htmlspecialchars']($mtitle);\n\t$context['description'] = &$mmessage;\n\t$context['page_title'] = $txt['maintain_mode'];\n}\n\n/**\n * Question the verity of the admin by asking for his or her password.\n * - loads Login.template.php and uses the admin_login sub template.\n * - sends data to template so the admin is sent on to the page they\n *   wanted if their password is correct, otherwise they can try again.\n *\n * @param string $type What login type is this - can be 'admin' or 'moderate'\n */\nfunction adminLogin($type = 'admin')\n{\n\tglobal $context, $txt, $user_settings, $user_info;\n\n\tloadLanguage('Admin');\n\tloadTemplate('Login');\n\n\t// Validate what type of session check this is.\n\t$types = array();\n\tcall_integration_hook('integrate_validateSession', array(&$types));\n\t$type = in_array($type, $types) || $type == 'moderate' ? $type : 'admin';\n\n\t// They used a wrong password, log it and unset that.\n\tif (isset($_POST[$type . '_hash_pass']) || isset($_POST[$type . '_pass']))\n\t{\n\t\t$txt['security_wrong'] = sprintf($txt['security_wrong'], isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : $txt['unknown'], $_SERVER['HTTP_USER_AGENT'], $user_info['ip']);\n\t\tlog_error($txt['security_wrong'], 'critical');\n\n\t\tif (isset($_POST[$type . '_hash_pass']))\n\t\t\tunset($_POST[$type . '_hash_pass']);\n\t\tif (isset($_POST[$type . '_pass']))\n\t\t\tunset($_POST[$type . '_pass']);\n\n\t\t$context['incorrect_password'] = true;\n\t}\n\n\tcreateToken('admin-login');\n\n\t// Figure out the get data and post data.\n\t$context['get_data'] = '?' . construct_query_string($_GET);\n\t$context['post_data'] = '';\n\n\t// Now go through $_POST.  Make sure the session hash is sent.\n\t$_POST[$context['session_var']] = $context['session_id'];\n\tforeach ($_POST as $k => $v)\n\t\t$context['post_data'] .= adminLogin_outputPostVars($k, $v);\n\n\t// Now we'll use the admin_login sub template of the Login template.\n\t$context['sub_template'] = 'admin_login';\n\n\t// And title the page something like \"Login\".\n\tif (!isset($context['page_title']))\n\t\t$context['page_title'] = $txt['login'];\n\n\t// The type of action.\n\t$context['sessionCheckType'] = $type;\n\n\tobExit();\n\n\t// We MUST exit at this point, because otherwise we CANNOT KNOW that the user is privileged.\n\ttrigger_error('Hacking attempt...', E_USER_ERROR);\n}\n\n/**\n * Used by the adminLogin() function.\n * if 'value' is an array, the function is called recursively.\n *\n * @param string $k The keys\n * @param string $v The values\n * @return string 'hidden' HTML form fields, containing key-value-pairs\n */\nfunction adminLogin_outputPostVars($k, $v)\n{\n\tglobal $smcFunc;\n\n\tif (!is_array($v))\n\t\treturn '\n<input type=\"hidden\" name=\"' . $smcFunc['htmlspecialchars']($k) . '\" value=\"' . strtr($v, array('\"' => '&quot;', '<' => '&lt;', '>' => '&gt;')) . '\">';\n\telse\n\t{\n\t\t$ret = '';\n\t\tforeach ($v as $k2 => $v2)\n\t\t\t$ret .= adminLogin_outputPostVars($k . '[' . $k2 . ']', $v2);\n\n\t\treturn $ret;\n\t}\n}\n\n/**\n * Properly urlencodes a string to be used in a query\n *\n * @param string $get\n * @return string Our query string\n */\nfunction construct_query_string($get)\n{\n\tglobal $scripturl;\n\n\t$query_string = '';\n\n\t// Awww, darn.  The $scripturl contains GET stuff!\n\t$q = strpos($scripturl, '?');\n\tif ($q !== false)\n\t{\n\t\tparse_str(preg_replace('/&(\\w+)(?=&|$)/', '&$1=', strtr(substr($scripturl, $q + 1), ';', '&')), $temp);\n\n\t\tforeach ($get as $k => $v)\n\t\t{\n\t\t\t// Only if it's not already in the $scripturl!\n\t\t\tif (!isset($temp[$k]))\n\t\t\t\t$query_string .= urlencode($k) . '=' . urlencode($v) . ';';\n\t\t\t// If it changed, put it out there, but with an ampersand.\n\t\t\telseif ($temp[$k] != $get[$k])\n\t\t\t\t$query_string .= urlencode($k) . '=' . urlencode($v) . '&amp;';\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Add up all the data from $_GET into get_data.\n\t\tforeach ($get as $k => $v)\n\t\t\t$query_string .= urlencode($k) . '=' . urlencode($v) . ';';\n\t}\n\n\t$query_string = substr($query_string, 0, -1);\n\treturn $query_string;\n}\n\n/**\n * Finds members by email address, username, or real name.\n * - searches for members whose username, display name, or e-mail address match the given pattern of array names.\n * - searches only buddies if buddies_only is set.\n *\n * @param array $names The names of members to search for\n * @param bool $use_wildcards Whether to use wildcards. Accepts wildcards ? and * in the pattern if true\n * @param bool $buddies_only Whether to only search for the user's buddies\n * @param int $max The maximum number of results\n * @return array An array containing information about the matching members\n */\nfunction findMembers($names, $use_wildcards = false, $buddies_only = false, $max = 500)\n{\n\tglobal $scripturl, $user_info, $smcFunc;\n\n\t// If it's not already an array, make it one.\n\tif (!is_array($names))\n\t\t$names = explode(',', $names);\n\n\t$maybe_email = false;\n\tforeach ($names as $i => $name)\n\t{\n\t\t// Trim, and fix wildcards for each name.\n\t\t$names[$i] = trim($smcFunc['strtolower']($name));\n\n\t\t$maybe_email |= strpos($name, '@') !== false;\n\n\t\t// Make it so standard wildcards will work. (* and ?)\n\t\tif ($use_wildcards)\n\t\t\t$names[$i] = strtr($names[$i], array('%' => '\\%', '_' => '\\_', '*' => '%', '?' => '_', '\\'' => '&#039;'));\n\t\telse\n\t\t\t$names[$i] = strtr($names[$i], array('\\'' => '&#039;'));\n\t}\n\n\t// What are we using to compare?\n\t$comparison = $use_wildcards ? 'LIKE' : '=';\n\n\t// Nothing found yet.\n\t$results = array();\n\n\t// This ensures you can't search someones email address if you can't see it.\n\tif (($use_wildcards || $maybe_email) && allowedTo('moderate_forum'))\n\t\t$email_condition = '\n\t\t\tOR (email_address ' . $comparison . ' \\'' . implode( '\\') OR (email_address ' . $comparison . ' \\'', $names) . '\\')';\n\telse\n\t\t$email_condition = '';\n\n\t// Get the case of the columns right - but only if we need to as things like MySQL will go slow needlessly otherwise.\n\t$member_name = $smcFunc['db_case_sensitive'] ? 'LOWER(member_name)' : 'member_name';\n\t$real_name = $smcFunc['db_case_sensitive'] ? 'LOWER(real_name)' : 'real_name';\n\n\t// Search by username, display name, and email address.\n\t$request = $smcFunc['db_query']('', '\n\t\tSELECT id_member, member_name, real_name, email_address\n\t\tFROM {db_prefix}members\n\t\tWHERE ({raw:member_name_search}\n\t\t\tOR {raw:real_name_search} {raw:email_condition})\n\t\t\t' . ($buddies_only ? 'AND id_member IN ({array_int:buddy_list})' : '') . '\n\t\t\tAND is_activated IN (1, 11)\n\t\tLIMIT {int:limit}',\n\t\tarray(\n\t\t\t'buddy_list' => $user_info['buddies'],\n\t\t\t'member_name_search' => $member_name . ' ' . $comparison . ' \\'' . implode( '\\' OR ' . $member_name . ' ' . $comparison . ' \\'', $names) . '\\'',\n\t\t\t'real_name_search' => $real_name . ' ' . $comparison . ' \\'' . implode( '\\' OR ' . $real_name . ' ' . $comparison . ' \\'', $names) . '\\'',\n\t\t\t'email_condition' => $email_condition,\n\t\t\t'limit' => $max,\n\t\t)\n\t);\n\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t{\n\t\t$results[$row['id_member']] = array(\n\t\t\t'id' => $row['id_member'],\n\t\t\t'name' => $row['real_name'],\n\t\t\t'username' => $row['member_name'],\n\t\t\t'email' => allowedTo('moderate_forum') ? $row['email_address'] : '',\n\t\t\t'href' => $scripturl . '?action=profile;u=' . $row['id_member'],\n\t\t\t'link' => '<a href=\"' . $scripturl . '?action=profile;u=' . $row['id_member'] . '\">' . $row['real_name'] . '</a>'\n\t\t);\n\t}\n\t$smcFunc['db_free_result']($request);\n\n\t// Return all the results.\n\treturn $results;\n}\n\n/**\n * Called by index.php?action=findmember.\n * - is used as a popup for searching members.\n * - uses sub template find_members of the Help template.\n * - also used to add members for PM's sent using wap2/imode protocol.\n */\nfunction JSMembers()\n{\n\tglobal $context, $scripturl, $user_info, $smcFunc;\n\n\tcheckSession('get');\n\n\t// Why is this in the Help template, you ask?  Well, erm... it helps you.  Does that work?\n\tloadTemplate('Help');\n\n\t$context['template_layers'] = array();\n\t$context['sub_template'] = 'find_members';\n\n\tif (isset($_REQUEST['search']))\n\t\t$context['last_search'] = $smcFunc['htmlspecialchars']($_REQUEST['search'], ENT_QUOTES);\n\telse\n\t\t$_REQUEST['start'] = 0;\n\n\t// Allow the user to pass the input to be added to to the box.\n\t$context['input_box_name'] = isset($_REQUEST['input']) && preg_match('~^[\\w-]+$~', $_REQUEST['input']) === 1 ? $_REQUEST['input'] : 'to';\n\n\t// Take the delimiter over GET in case it's \\n or something.\n\t$context['delimiter'] = isset($_REQUEST['delim']) ? ($_REQUEST['delim'] == 'LB' ? \"\\n\" : $_REQUEST['delim']) : ', ';\n\t$context['quote_results'] = !empty($_REQUEST['quote']);\n\n\t// List all the results.\n\t$context['results'] = array();\n\n\t// Some buddy related settings ;)\n\t$context['show_buddies'] = !empty($user_info['buddies']);\n\t$context['buddy_search'] = isset($_REQUEST['buddies']);\n\n\t// If the user has done a search, well - search.\n\tif (isset($_REQUEST['search']))\n\t{\n\t\t$_REQUEST['search'] = $smcFunc['htmlspecialchars']($_REQUEST['search'], ENT_QUOTES);\n\n\t\t$context['results'] = findMembers(array($_REQUEST['search']), true, $context['buddy_search']);\n\t\t$total_results = count($context['results']);\n\n\t\t$context['page_index'] = constructPageIndex($scripturl . '?action=findmember;search=' . $context['last_search'] . ';' . $context['session_var'] . '=' . $context['session_id'] . ';input=' . $context['input_box_name'] . ($context['quote_results'] ? ';quote=1' : '') . ($context['buddy_search'] ? ';buddies' : ''), $_REQUEST['start'], $total_results, 7);\n\n\t\t// Determine the navigation context.\n\t\t$base_url = $scripturl . '?action=findmember;search=' . urlencode($context['last_search']) . (empty($_REQUEST['u']) ? '' : ';u=' . $_REQUEST['u']) . ';' . $context['session_var'] . '=' . $context['session_id'];\n\t\t$context['links'] = array(\n\t\t\t'first' => $_REQUEST['start'] >= 7 ? $base_url . ';start=0' : '',\n\t\t\t'prev' => $_REQUEST['start'] >= 7 ? $base_url . ';start=' . ($_REQUEST['start'] - 7) : '',\n\t\t\t'next' => $_REQUEST['start'] + 7 < $total_results ? $base_url . ';start=' . ($_REQUEST['start'] + 7) : '',\n\t\t\t'last' => $_REQUEST['start'] + 7 < $total_results ? $base_url . ';start=' . (floor(($total_results - 1) / 7) * 7) : '',\n\t\t\t'up' => $scripturl . '?action=pm;sa=send' . (empty($_REQUEST['u']) ? '' : ';u=' . $_REQUEST['u']),\n\t\t);\n\t\t$context['page_info'] = array(\n\t\t\t'current_page' => $_REQUEST['start'] / 7 + 1,\n\t\t\t'num_pages' => floor(($total_results - 1) / 7) + 1\n\t\t);\n\n\t\t$context['results'] = array_slice($context['results'], $_REQUEST['start'], 7);\n\t}\n\telse\n\t\t$context['links']['up'] = $scripturl . '?action=pm;sa=send' . (empty($_REQUEST['u']) ? '' : ';u=' . $_REQUEST['u']);\n}\n\n/**\n * Outputs each member name on its own line.\n * - used by javascript to find members matching the request.\n */\nfunction RequestMembers()\n{\n\tglobal $user_info, $txt, $smcFunc;\n\n\tcheckSession('get');\n\n\t$_REQUEST['search'] = $smcFunc['htmlspecialchars']($_REQUEST['search']) . '*';\n\t$_REQUEST['search'] = trim($smcFunc['strtolower']($_REQUEST['search']));\n\t$_REQUEST['search'] = strtr($_REQUEST['search'], array('%' => '\\%', '_' => '\\_', '*' => '%', '?' => '_', '&#038;' => '&amp;'));\n\n\tif (function_exists('iconv'))\n\t\theader('Content-Type: text/plain; charset=UTF-8');\n\n\t$request = $smcFunc['db_query']('', '\n\t\tSELECT real_name\n\t\tFROM {db_prefix}members\n\t\tWHERE {raw:real_name} LIKE {string:search}' . (isset($_REQUEST['buddies']) ? '\n\t\t\tAND id_member IN ({array_int:buddy_list})' : '') . '\n\t\t\tAND is_activated IN (1, 11)\n\t\tLIMIT ' . ($smcFunc['strlen']($_REQUEST['search']) <= 2 ? '100' : '800'),\n\t\tarray(\n\t\t\t'real_name' => $smcFunc['db_case_sensitive'] ? 'LOWER(real_name)' : 'real_name',\n\t\t\t'buddy_list' => $user_info['buddies'],\n\t\t\t'search' => $_REQUEST['search'],\n\t\t)\n\t);\n\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t{\n\t\tif (function_exists('iconv'))\n\t\t{\n\t\t\t$utf8 = iconv($txt['lang_character_set'], 'UTF-8', $row['real_name']);\n\t\t\tif ($utf8)\n\t\t\t\t$row['real_name'] = $utf8;\n\t\t}\n\n\t\t$row['real_name'] = strtr($row['real_name'], array('&amp;' => '&#038;', '&lt;' => '&#060;', '&gt;' => '&#062;', '&quot;' => '&#034;'));\n\n\t\tif (preg_match('~&#\\d+;~', $row['real_name']) != 0)\n\t\t\t$row['real_name'] = preg_replace_callback('~&#(\\d+);~', 'fixchar__callback', $row['real_name']);\n\n\t\techo $row['real_name'], \"\\n\";\n\t}\n\t$smcFunc['db_free_result']($request);\n\n\tobExit(false);\n}\n\n/**\n * Generates a random password for a user and emails it to them.\n * - called by Profile.php when changing someone's username.\n * - checks the validity of the new username.\n * - generates and sets a new password for the given user.\n * - mails the new password to the email address of the user.\n * - if username is not set, only a new password is generated and sent.\n *\n * @param int $memID The ID of the member\n * @param string $username The new username. If set, also checks the validity of the username\n */\nfunction resetPassword($memID, $username = null)\n{\n\tglobal $sourcedir, $modSettings, $smcFunc, $language;\n\n\t// Language... and a required file.\n\tloadLanguage('Login');\n\trequire_once($sourcedir . '/Subs-Post.php');\n\n\t// Get some important details.\n\t$request = $smcFunc['db_query']('', '\n\t\tSELECT member_name, email_address, lngfile\n\t\tFROM {db_prefix}members\n\t\tWHERE id_member = {int:id_member}',\n\t\tarray(\n\t\t\t'id_member' => $memID,\n\t\t)\n\t);\n\tlist ($user, $email, $lngfile) = $smcFunc['db_fetch_row']($request);\n\t$smcFunc['db_free_result']($request);\n\n\tif ($username !== null)\n\t{\n\t\t$old_user = $user;\n\t\t$user = trim($username);\n\t}\n\n\t// Generate a random password.\n\t$newPassword = substr(preg_replace('/\\W/', '', md5(mt_rand())), 0, 10);\n\t$newPassword_sha1 = hash_password($user, $newPassword);\n\n\t// Do some checks on the username if needed.\n\tif ($username !== null)\n\t{\n\t\tvalidateUsername($memID, $user);\n\n\t\t// Update the database...\n\t\tupdateMemberData($memID, array('member_name' => $user, 'passwd' => $newPassword_sha1));\n\t}\n\telse\n\t\tupdateMemberData($memID, array('passwd' => $newPassword_sha1));\n\n\tcall_integration_hook('integrate_reset_pass', array($old_user, $user, $newPassword));\n\n\t$replacements = array(\n\t\t'USERNAME' => $user,\n\t\t'PASSWORD' => $newPassword,\n\t);\n\n\t$emaildata = loadEmailTemplate('change_password', $replacements, empty($lngfile) || empty($modSettings['userLanguage']) ? $language : $lngfile);\n\n\t// Send them the email informing them of the change - then we're done!\n\tsendmail($email, $emaildata['subject'], $emaildata['body'], null, 'chgpass' . $memID, $emaildata['is_html'], 0);\n}\n\n/**\n * Checks a username obeys a load of rules\n *\n * @param int $memID The ID of the member\n * @param string $username The username to validate\n * @param boolean $return_error Whether to return errors\n * @param boolean $check_reserved_name Whether to check this against the list of reserved names\n * @return array|null Null if there are no errors, otherwise an array of errors if return_error is true\n */\nfunction validateUsername($memID, $username, $return_error = false, $check_reserved_name = true)\n{\n\tglobal $sourcedir, $txt, $smcFunc, $user_info;\n\n\t$errors = array();\n\n\t// Don't use too long a name.\n\tif ($smcFunc['strlen']($username) > 25)\n\t\t$errors[] = array('lang', 'error_long_name');\n\n\t// No name?!  How can you register with no name?\n\tif ($username == '')\n\t\t$errors[] = array('lang', 'need_username');\n\n\t// Only these characters are permitted.\n\tif (in_array($username, array('_', '|')) || preg_match('~[<>&\"\\'=\\\\\\\\]~', preg_replace('~&#(?:\\\\d{1,7}|x[0-9a-fA-F]{1,6});~', '', $username)) != 0 || strpos($username, '[code') !== false || strpos($username, '[/code') !== false)\n\t\t$errors[] = array('lang', 'error_invalid_characters_username');\n\n\tif (stristr($username, $txt['guest_title']) !== false)\n\t\t$errors[] = array('lang', 'username_reserved', 'general', array($txt['guest_title']));\n\n\tif ($check_reserved_name)\n\t{\n\t\trequire_once($sourcedir . '/Subs-Members.php');\n\t\tif (isReservedName($username, $memID, false))\n\t\t\t$errors[] = array('done', '(' . $smcFunc['htmlspecialchars']($username) . ') ' . $txt['name_in_use']);\n\t}\n\n\tif ($return_error)\n\t\treturn $errors;\n\telseif (empty($errors))\n\t\treturn null;\n\n\tloadLanguage('Errors');\n\t$error = $errors[0];\n\n\t$message = $error[0] == 'lang' ? (empty($error[3]) ? $txt[$error[1]] : vsprintf($txt[$error[1]], $error[3])) : $error[1];\n\tfatal_error($message, empty($error[2]) || $user_info['is_admin'] ? false : $error[2]);\n}\n\n/**\n * Checks whether a password meets the current forum rules\n * - called when registering/choosing a password.\n * - checks the password obeys the current forum settings for password strength.\n * - if password checking is enabled, will check that none of the words in restrict_in appear in the password.\n * - returns an error identifier if the password is invalid, or null.\n *\n * @param string $password The desired password\n * @param string $username The username\n * @param array $restrict_in An array of restricted strings that cannot be part of the password (email address, username, etc.)\n * @return null|string Null if valid or a string indicating what the problem was\n */\nfunction validatePassword($password, $username, $restrict_in = array())\n{\n\tglobal $modSettings, $smcFunc;\n\n\t// Perform basic requirements first.\n\tif ($smcFunc['strlen']($password) < (empty($modSettings['password_strength']) ? 4 : 8))\n\t\treturn 'short';\n\n\t// Is this enough?\n\tif (empty($modSettings['password_strength']))\n\t\treturn null;\n\n\t// Otherwise, perform the medium strength test - checking if password appears in the restricted string.\n\tif (preg_match('~\\b' . preg_quote($password, '~') . '\\b~', implode(' ', $restrict_in)) != 0)\n\t\treturn 'restricted_words';\n\telseif ($smcFunc['strpos']($password, $username) !== false)\n\t\treturn 'restricted_words';\n\n\t// If just medium, we're done.\n\tif ($modSettings['password_strength'] == 1)\n\t\treturn null;\n\n\t// Otherwise, hard test next, check for numbers and letters, uppercase too.\n\t$good = preg_match('~(\\D\\d|\\d\\D)~', $password) != 0;\n\t$good &= $smcFunc['strtolower']($password) != $password;\n\n\treturn $good ? null : 'chars';\n}\n\n/**\n * Quickly find out what moderation authority this user has\n * - builds the moderator, group and board level querys for the user\n * - stores the information on the current users moderation powers in $user_info['mod_cache'] and $_SESSION['mc']\n */\nfunction rebuildModCache()\n{\n\tglobal $user_info, $smcFunc;\n\n\t// What groups can they moderate?\n\t$group_query = allowedTo('manage_membergroups') ? '1=1' : '0=1';\n\n\tif ($group_query == '0=1' && !$user_info['is_guest'])\n\t{\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT id_group\n\t\t\tFROM {db_prefix}group_moderators\n\t\t\tWHERE id_member = {int:current_member}',\n\t\t\tarray(\n\t\t\t\t'current_member' => $user_info['id'],\n\t\t\t)\n\t\t);\n\t\t$groups = array();\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t\t$groups[] = $row['id_group'];\n\t\t$smcFunc['db_free_result']($request);\n\n\t\tif (empty($groups))\n\t\t\t$group_query = '0=1';\n\t\telse\n\t\t\t$group_query = 'id_group IN (' . implode(',', $groups) . ')';\n\t}\n\n\t// Then, same again, just the boards this time!\n\t$board_query = allowedTo('moderate_forum') ? '1=1' : '0=1';\n\n\tif ($board_query == '0=1' && !$user_info['is_guest'])\n\t{\n\t\t$boards = boardsAllowedTo('moderate_board', true);\n\n\t\tif (empty($boards))\n\t\t\t$board_query = '0=1';\n\t\telse\n\t\t\t$board_query = 'id_board IN (' . implode(',', $boards) . ')';\n\t}\n\n\t// What boards are they the moderator of?\n\t$boards_mod = array();\n\tif (!$user_info['is_guest'])\n\t{\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT id_board\n\t\t\tFROM {db_prefix}moderators\n\t\t\tWHERE id_member = {int:current_member}',\n\t\t\tarray(\n\t\t\t\t'current_member' => $user_info['id'],\n\t\t\t)\n\t\t);\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t\t$boards_mod[] = $row['id_board'];\n\t\t$smcFunc['db_free_result']($request);\n\n\t\t// Can any of the groups they're in moderate any of the boards?\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT id_board\n\t\t\tFROM {db_prefix}moderator_groups\n\t\t\tWHERE id_group IN({array_int:groups})',\n\t\t\tarray(\n\t\t\t\t'groups' => $user_info['groups'],\n\t\t\t)\n\t\t);\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t\t$boards_mod[] = $row['id_board'];\n\t\t$smcFunc['db_free_result']($request);\n\n\t\t// Just in case we've got duplicates here...\n\t\t$boards_mod = array_unique($boards_mod);\n\t}\n\n\t$mod_query = empty($boards_mod) ? '0=1' : 'b.id_board IN (' . implode(',', $boards_mod) . ')';\n\n\t$_SESSION['mc'] = array(\n\t\t'time' => time(),\n\t\t// This looks a bit funny but protects against the login redirect.\n\t\t'id' => $user_info['id'] && $user_info['name'] ? $user_info['id'] : 0,\n\t\t// If you change the format of 'gq' and/or 'bq' make sure to adjust 'can_mod' in Load.php.\n\t\t'gq' => $group_query,\n\t\t'bq' => $board_query,\n\t\t'ap' => boardsAllowedTo('approve_posts'),\n\t\t'mb' => $boards_mod,\n\t\t'mq' => $mod_query,\n\t);\n\tcall_integration_hook('integrate_mod_cache');\n\n\t$user_info['mod_cache'] = $_SESSION['mc'];\n\n\t// Might as well clean up some tokens while we are at it.\n\tcleanTokens();\n}\n\n/**\n * The same thing as setcookie but gives support for HTTP-Only cookies in PHP < 5.2\n * @todo We can remove this since SMF requires PHP >= 5.3.8 now\n *\n * @param string $name\n * @param string $value = ''\n * @param int $expire = 0\n * @param string $path = ''\n * @param string $domain = ''\n * @param bool $secure = false\n * @param bool $httponly = true\n */\nfunction smf_setcookie($name, $value = '', $expire = 0, $path = '', $domain = '', $secure = null, $httponly = true)\n{\n\tglobal $modSettings;\n\n\t// In case a customization wants to override the default settings\n\tif ($httponly === null)\n\t\t$httponly = !empty($modSettings['httponlyCookies']);\n\tif ($secure === null)\n\t\t$secure = !empty($modSettings['secureCookies']);\n\n\t// Intercept cookie?\n\tcall_integration_hook('integrate_cookie', array($name, $value, $expire, $path, $domain, $secure, $httponly));\n\n\t// This function is pointless if we have PHP >= 5.2.\n\treturn setcookie($name, $value, $expire, $path, $domain, $secure, $httponly);\n}\n\n/**\n * Hashes username with password\n *\n * @param string $username The username\n * @param string $password The unhashed password\n * @param int $cost The cost\n * @return string The hashed password\n */\nfunction hash_password($username, $password, $cost = null)\n{\n\tglobal $sourcedir, $smcFunc, $modSettings;\n\tif (!function_exists('password_hash'))\n\t\trequire_once($sourcedir . '/Subs-Password.php');\n\n\t$cost = empty($cost) ? (empty($modSettings['bcrypt_hash_cost']) ? 10 : $modSettings['bcrypt_hash_cost']) : $cost;\n\n\treturn password_hash($smcFunc['strtolower']($username) . $password, PASSWORD_BCRYPT, array(\n\t\t'cost' => $cost,\n\t));\n}\n\n/**\n * Hashes password with salt, this is solely used for cookies.\n *\n * @param string $password The password\n * @param string $salt The salt\n * @return string The hashed password\n */\nfunction hash_salt($password, $salt)\n{\n\treturn hash('sha512', $password . $salt);\n}\n\n/**\n * Verifies a raw SMF password against the bcrypt'd string\n *\n * @param string $username The username\n * @param string $password The password\n * @param string $hash The hashed string\n * @return bool Whether the hashed password matches the string\n */\nfunction hash_verify_password($username, $password, $hash)\n{\n\tglobal $sourcedir, $smcFunc;\n\tif (!function_exists('password_verify'))\n\t\trequire_once($sourcedir . '/Subs-Password.php');\n\n\treturn password_verify($smcFunc['strtolower']($username) . $password, $hash);\n}\n\n/**\n * Returns the length for current hash\n *\n * @return int The length for the current hash\n */\nfunction hash_length()\n{\n\treturn 60;\n}\n\n/**\n * Benchmarks the server to figure out an appropriate cost factor (minimum 9)\n *\n * @param float $hashTime Time to target, in seconds\n * @return int The cost\n */\nfunction hash_benchmark($hashTime = 0.2)\n{\n\t$cost = 9;\n\tdo {\n\t\t$timeStart = microtime(true);\n\t\thash_password('test', 'thisisatestpassword', $cost);\n\t\t$timeTaken = microtime(true) - $timeStart;\n\t\t$cost++;\n\t} while ($timeTaken < $hashTime);\n\n\treturn $cost;\n}\n\n?>", "<?php\n\n/**\n * Simple Machines Forum (SMF)\n *\n * @package SMF\n * @author Simple Machines http://www.simplemachines.org\n * @copyright 2016 Simple Machines and individual contributors\n * @license http://www.simplemachines.org/about/smf/license.php BSD\n *\n * @version 2.1 Beta 3\n */\n\nif (!defined('SMF'))\n\tdie('No direct access...');\n\n/**\n * Converts the given UTF-8 string into lowercase.\n * equivalent to mb_strtolower($string, 'UTF-8')\n *\n * @param string $string The string\n * @return string The lowercase version of $string\n */\nfunction utf8_strtolower($string)\n{\n\tstatic $case_folding = array(\n\t\t'A' => 'a',\t\t'B' => 'b',\t\t'C' => 'c',\t\t'D' => 'd',\n\t\t'E' => 'e',\t\t'F' => 'f',\t\t'G' => 'g',\t\t'H' => 'h',\n\t\t'I' => 'i',\t\t'J' => 'j',\t\t'K' => 'k',\t\t'L' => 'l',\n\t\t'M' => 'm',\t\t'N' => 'n',\t\t'O' => 'o',\t\t'P' => 'p',\n\t\t'Q' => 'q',\t\t'R' => 'r',\t\t'S' => 's',\t\t'T' => 't',\n\t\t'U' => 'u',\t\t'V' => 'v',\t\t'W' => 'w',\t\t'X' => 'x',\n\t\t'Y' => 'y',\t\t'Z' => 'z',\t\t\"\\xc2\\xb5\" => \"\\xce\\xbc\",\t\t\"\\xc3\\x80\" => \"\\xc3\\xa0\",\n\t\t\"\\xc3\\x81\" => \"\\xc3\\xa1\",\t\t\"\\xc3\\x82\" => \"\\xc3\\xa2\",\t\t\"\\xc3\\x83\" => \"\\xc3\\xa3\",\t\t\"\\xc3\\x84\" => \"\\xc3\\xa4\",\n\t\t\"\\xc3\\x85\" => \"\\xc3\\xa5\",\t\t\"\\xc3\\x86\" => \"\\xc3\\xa6\",\t\t\"\\xc3\\x87\" => \"\\xc3\\xa7\",\t\t\"\\xc3\\x88\" => \"\\xc3\\xa8\",\n\t\t\"\\xc3\\x89\" => \"\\xc3\\xa9\",\t\t\"\\xc3\\x8a\" => \"\\xc3\\xaa\",\t\t\"\\xc3\\x8b\" => \"\\xc3\\xab\",\t\t\"\\xc3\\x8c\" => \"\\xc3\\xac\",\n\t\t\"\\xc3\\x8d\" => \"\\xc3\\xad\",\t\t\"\\xc3\\x8e\" => \"\\xc3\\xae\",\t\t\"\\xc3\\x8f\" => \"\\xc3\\xaf\",\t\t\"\\xc3\\x90\" => \"\\xc3\\xb0\",\n\t\t\"\\xc3\\x91\" => \"\\xc3\\xb1\",\t\t\"\\xc3\\x92\" => \"\\xc3\\xb2\",\t\t\"\\xc3\\x93\" => \"\\xc3\\xb3\",\t\t\"\\xc3\\x94\" => \"\\xc3\\xb4\",\n\t\t\"\\xc3\\x95\" => \"\\xc3\\xb5\",\t\t\"\\xc3\\x96\" => \"\\xc3\\xb6\",\t\t\"\\xc3\\x98\" => \"\\xc3\\xb8\",\t\t\"\\xc3\\x99\" => \"\\xc3\\xb9\",\n\t\t\"\\xc3\\x9a\" => \"\\xc3\\xba\",\t\t\"\\xc3\\x9b\" => \"\\xc3\\xbb\",\t\t\"\\xc3\\x9c\" => \"\\xc3\\xbc\",\t\t\"\\xc3\\x9d\" => \"\\xc3\\xbd\",\n\t\t\"\\xc3\\x9e\" => \"\\xc3\\xbe\",\t\t\"\\xc3\\x9f\" => \"ss\",\t\"\\xc4\\x80\" => \"\\xc4\\x81\",\t\t\"\\xc4\\x82\" => \"\\xc4\\x83\",\n\t\t\"\\xc4\\x84\" => \"\\xc4\\x85\",\t\t\"\\xc4\\x86\" => \"\\xc4\\x87\",\t\t\"\\xc4\\x88\" => \"\\xc4\\x89\",\t\t\"\\xc4\\x8a\" => \"\\xc4\\x8b\",\n\t\t\"\\xc4\\x8c\" => \"\\xc4\\x8d\",\t\t\"\\xc4\\x8e\" => \"\\xc4\\x8f\",\t\t\"\\xc4\\x90\" => \"\\xc4\\x91\",\t\t\"\\xc4\\x92\" => \"\\xc4\\x93\",\n\t\t\"\\xc4\\x94\" => \"\\xc4\\x95\",\t\t\"\\xc4\\x96\" => \"\\xc4\\x97\",\t\t\"\\xc4\\x98\" => \"\\xc4\\x99\",\t\t\"\\xc4\\x9a\" => \"\\xc4\\x9b\",\n\t\t\"\\xc4\\x9c\" => \"\\xc4\\x9d\",\t\t\"\\xc4\\x9e\" => \"\\xc4\\x9f\",\t\t\"\\xc4\\xa0\" => \"\\xc4\\xa1\",\t\t\"\\xc4\\xa2\" => \"\\xc4\\xa3\",\n\t\t\"\\xc4\\xa4\" => \"\\xc4\\xa5\",\t\t\"\\xc4\\xa6\" => \"\\xc4\\xa7\",\t\t\"\\xc4\\xa8\" => \"\\xc4\\xa9\",\t\t\"\\xc4\\xaa\" => \"\\xc4\\xab\",\n\t\t\"\\xc4\\xac\" => \"\\xc4\\xad\",\t\t\"\\xc4\\xae\" => \"\\xc4\\xaf\",\t\t\"\\xc4\\xb0\" => \"i\\xcc\\x87\",\t\t\"\\xc4\\xb2\" => \"\\xc4\\xb3\",\n\t\t\"\\xc4\\xb4\" => \"\\xc4\\xb5\",\t\t\"\\xc4\\xb6\" => \"\\xc4\\xb7\",\t\t\"\\xc4\\xb9\" => \"\\xc4\\xba\",\t\t\"\\xc4\\xbb\" => \"\\xc4\\xbc\",\n\t\t\"\\xc4\\xbd\" => \"\\xc4\\xbe\",\t\t\"\\xc4\\xbf\" => \"\\xc5\\x80\",\t\t\"\\xc5\\x81\" => \"\\xc5\\x82\",\t\t\"\\xc5\\x83\" => \"\\xc5\\x84\",\n\t\t\"\\xc5\\x85\" => \"\\xc5\\x86\",\t\t\"\\xc5\\x87\" => \"\\xc5\\x88\",\t\t\"\\xc5\\x89\" => \"\\xca\\xbcn\",\t\"\\xc5\\x8a\" => \"\\xc5\\x8b\",\n\t\t\"\\xc5\\x8c\" => \"\\xc5\\x8d\",\t\t\"\\xc5\\x8e\" => \"\\xc5\\x8f\",\t\t\"\\xc5\\x90\" => \"\\xc5\\x91\",\t\t\"\\xc5\\x92\" => \"\\xc5\\x93\",\n\t\t\"\\xc5\\x94\" => \"\\xc5\\x95\",\t\t\"\\xc5\\x96\" => \"\\xc5\\x97\",\t\t\"\\xc5\\x98\" => \"\\xc5\\x99\",\t\t\"\\xc5\\x9a\" => \"\\xc5\\x9b\",\n\t\t\"\\xc5\\x9c\" => \"\\xc5\\x9d\",\t\t\"\\xc5\\x9e\" => \"\\xc5\\x9f\",\t\t\"\\xc5\\xa0\" => \"\\xc5\\xa1\",\t\t\"\\xc5\\xa2\" => \"\\xc5\\xa3\",\n\t\t\"\\xc5\\xa4\" => \"\\xc5\\xa5\",\t\t\"\\xc5\\xa6\" => \"\\xc5\\xa7\",\t\t\"\\xc5\\xa8\" => \"\\xc5\\xa9\",\t\t\"\\xc5\\xaa\" => \"\\xc5\\xab\",\n\t\t\"\\xc5\\xac\" => \"\\xc5\\xad\",\t\t\"\\xc5\\xae\" => \"\\xc5\\xaf\",\t\t\"\\xc5\\xb0\" => \"\\xc5\\xb1\",\t\t\"\\xc5\\xb2\" => \"\\xc5\\xb3\",\n\t\t\"\\xc5\\xb4\" => \"\\xc5\\xb5\",\t\t\"\\xc5\\xb6\" => \"\\xc5\\xb7\",\t\t\"\\xc5\\xb8\" => \"\\xc3\\xbf\",\t\t\"\\xc5\\xb9\" => \"\\xc5\\xba\",\n\t\t\"\\xc5\\xbb\" => \"\\xc5\\xbc\",\t\t\"\\xc5\\xbd\" => \"\\xc5\\xbe\",\t\t\"\\xc5\\xbf\" => \"s\",\t\t\"\\xc6\\x81\" => \"\\xc9\\x93\",\n\t\t\"\\xc6\\x82\" => \"\\xc6\\x83\",\t\t\"\\xc6\\x84\" => \"\\xc6\\x85\",\t\t\"\\xc6\\x86\" => \"\\xc9\\x94\",\t\t\"\\xc6\\x87\" => \"\\xc6\\x88\",\n\t\t\"\\xc6\\x89\" => \"\\xc9\\x96\",\t\t\"\\xc6\\x8a\" => \"\\xc9\\x97\",\t\t\"\\xc6\\x8b\" => \"\\xc6\\x8c\",\t\t\"\\xc6\\x8e\" => \"\\xc7\\x9d\",\n\t\t\"\\xc6\\x8f\" => \"\\xc9\\x99\",\t\t\"\\xc6\\x90\" => \"\\xc9\\x9b\",\t\t\"\\xc6\\x91\" => \"\\xc6\\x92\",\t\t\"\\xc6\\x93\" => \"\\xc9\\xa0\",\n\t\t\"\\xc6\\x94\" => \"\\xc9\\xa3\",\t\t\"\\xc6\\x96\" => \"\\xc9\\xa9\",\t\t\"\\xc6\\x97\" => \"\\xc9\\xa8\",\t\t\"\\xc6\\x98\" => \"\\xc6\\x99\",\n\t\t\"\\xc6\\x9c\" => \"\\xc9\\xaf\",\t\t\"\\xc6\\x9d\" => \"\\xc9\\xb2\",\t\t\"\\xc6\\x9f\" => \"\\xc9\\xb5\",\t\t\"\\xc6\\xa0\" => \"\\xc6\\xa1\",\n\t\t\"\\xc6\\xa2\" => \"\\xc6\\xa3\",\t\t\"\\xc6\\xa4\" => \"\\xc6\\xa5\",\t\t\"\\xc6\\xa6\" => \"\\xca\\x80\",\t\t\"\\xc6\\xa7\" => \"\\xc6\\xa8\",\n\t\t\"\\xc6\\xa9\" => \"\\xca\\x83\",\t\t\"\\xc6\\xac\" => \"\\xc6\\xad\",\t\t\"\\xc6\\xae\" => \"\\xca\\x88\",\t\t\"\\xc6\\xaf\" => \"\\xc6\\xb0\",\n\t\t\"\\xc6\\xb1\" => \"\\xca\\x8a\",\t\t\"\\xc6\\xb2\" => \"\\xca\\x8b\",\t\t\"\\xc6\\xb3\" => \"\\xc6\\xb4\",\t\t\"\\xc6\\xb5\" => \"\\xc6\\xb6\",\n\t\t\"\\xc6\\xb7\" => \"\\xca\\x92\",\t\t\"\\xc6\\xb8\" => \"\\xc6\\xb9\",\t\t\"\\xc6\\xbc\" => \"\\xc6\\xbd\",\t\t\"\\xc7\\x84\" => \"\\xc7\\x86\",\n\t\t\"\\xc7\\x85\" => \"\\xc7\\x86\",\t\t\"\\xc7\\x87\" => \"\\xc7\\x89\",\t\t\"\\xc7\\x88\" => \"\\xc7\\x89\",\t\t\"\\xc7\\x8a\" => \"\\xc7\\x8c\",\n\t\t\"\\xc7\\x8b\" => \"\\xc7\\x8c\",\t\t\"\\xc7\\x8d\" => \"\\xc7\\x8e\",\t\t\"\\xc7\\x8f\" => \"\\xc7\\x90\",\t\t\"\\xc7\\x91\" => \"\\xc7\\x92\",\n\t\t\"\\xc7\\x93\" => \"\\xc7\\x94\",\t\t\"\\xc7\\x95\" => \"\\xc7\\x96\",\t\t\"\\xc7\\x97\" => \"\\xc7\\x98\",\t\t\"\\xc7\\x99\" => \"\\xc7\\x9a\",\n\t\t\"\\xc7\\x9b\" => \"\\xc7\\x9c\",\t\t\"\\xc7\\x9e\" => \"\\xc7\\x9f\",\t\t\"\\xc7\\xa0\" => \"\\xc7\\xa1\",\t\t\"\\xc7\\xa2\" => \"\\xc7\\xa3\",\n\t\t\"\\xc7\\xa4\" => \"\\xc7\\xa5\",\t\t\"\\xc7\\xa6\" => \"\\xc7\\xa7\",\t\t\"\\xc7\\xa8\" => \"\\xc7\\xa9\",\t\t\"\\xc7\\xaa\" => \"\\xc7\\xab\",\n\t\t\"\\xc7\\xac\" => \"\\xc7\\xad\",\t\t\"\\xc7\\xae\" => \"\\xc7\\xaf\",\t\t\"\\xc7\\xb0\" => \"j\\xcc\\x8c\",\t\t\"\\xc7\\xb1\" => \"\\xc7\\xb3\",\n\t\t\"\\xc7\\xb2\" => \"\\xc7\\xb3\",\t\t\"\\xc7\\xb4\" => \"\\xc7\\xb5\",\t\t\"\\xc7\\xb6\" => \"\\xc6\\x95\",\t\t\"\\xc7\\xb7\" => \"\\xc6\\xbf\",\n\t\t\"\\xc7\\xb8\" => \"\\xc7\\xb9\",\t\t\"\\xc7\\xba\" => \"\\xc7\\xbb\",\t\t\"\\xc7\\xbc\" => \"\\xc7\\xbd\",\t\t\"\\xc7\\xbe\" => \"\\xc7\\xbf\",\n\t\t\"\\xc8\\x80\" => \"\\xc8\\x81\",\t\t\"\\xc8\\x82\" => \"\\xc8\\x83\",\t\t\"\\xc8\\x84\" => \"\\xc8\\x85\",\t\t\"\\xc8\\x86\" => \"\\xc8\\x87\",\n\t\t\"\\xc8\\x88\" => \"\\xc8\\x89\",\t\t\"\\xc8\\x8a\" => \"\\xc8\\x8b\",\t\t\"\\xc8\\x8c\" => \"\\xc8\\x8d\",\t\t\"\\xc8\\x8e\" => \"\\xc8\\x8f\",\n\t\t\"\\xc8\\x90\" => \"\\xc8\\x91\",\t\t\"\\xc8\\x92\" => \"\\xc8\\x93\",\t\t\"\\xc8\\x94\" => \"\\xc8\\x95\",\t\t\"\\xc8\\x96\" => \"\\xc8\\x97\",\n\t\t\"\\xc8\\x98\" => \"\\xc8\\x99\",\t\t\"\\xc8\\x9a\" => \"\\xc8\\x9b\",\t\t\"\\xc8\\x9c\" => \"\\xc8\\x9d\",\t\t\"\\xc8\\x9e\" => \"\\xc8\\x9f\",\n\t\t\"\\xc8\\xa0\" => \"\\xc6\\x9e\",\t\t\"\\xc8\\xa2\" => \"\\xc8\\xa3\",\t\t\"\\xc8\\xa4\" => \"\\xc8\\xa5\",\t\t\"\\xc8\\xa6\" => \"\\xc8\\xa7\",\n\t\t\"\\xc8\\xa8\" => \"\\xc8\\xa9\",\t\t\"\\xc8\\xaa\" => \"\\xc8\\xab\",\t\t\"\\xc8\\xac\" => \"\\xc8\\xad\",\t\t\"\\xc8\\xae\" => \"\\xc8\\xaf\",\n\t\t\"\\xc8\\xb0\" => \"\\xc8\\xb1\",\t\t\"\\xc8\\xb2\" => \"\\xc8\\xb3\",\t\t\"\\xc8\\xba\" => \"\\xe2\\xb1\\xa5\",\t\t\"\\xc8\\xbb\" => \"\\xc8\\xbc\",\n\t\t\"\\xc8\\xbd\" => \"\\xc6\\x9a\",\t\t\"\\xc8\\xbe\" => \"\\xe2\\xb1\\xa6\",\t\t\"\\xc9\\x81\" => \"\\xc9\\x82\",\t\t\"\\xc9\\x83\" => \"\\xc6\\x80\",\n\t\t\"\\xc9\\x84\" => \"\\xca\\x89\",\t\t\"\\xc9\\x85\" => \"\\xca\\x8c\",\t\t\"\\xc9\\x86\" => \"\\xc9\\x87\",\t\t\"\\xc9\\x88\" => \"\\xc9\\x89\",\n\t\t\"\\xc9\\x8a\" => \"\\xc9\\x8b\",\t\t\"\\xc9\\x8c\" => \"\\xc9\\x8d\",\t\t\"\\xc9\\x8e\" => \"\\xc9\\x8f\",\t\t\"\\xcd\\x85\" => \"\\xce\\xb9\",\n\t\t\"\\xce\\x86\" => \"\\xce\\xac\",\t\t\"\\xce\\x88\" => \"\\xce\\xad\",\t\t\"\\xce\\x89\" => \"\\xce\\xae\",\t\t\"\\xce\\x8a\" => \"\\xce\\xaf\",\n\t\t\"\\xce\\x8c\" => \"\\xcf\\x8c\",\t\t\"\\xce\\x8e\" => \"\\xcf\\x8d\",\t\t\"\\xce\\x8f\" => \"\\xcf\\x8e\",\t\t\"\\xce\\x90\" => \"\\xce\\xb9\\xcc\\x88\\xcc\\x81\",\n\t\t\"\\xce\\x91\" => \"\\xce\\xb1\",\t\t\"\\xce\\x92\" => \"\\xce\\xb2\",\t\t\"\\xce\\x93\" => \"\\xce\\xb3\",\t\t\"\\xce\\x94\" => \"\\xce\\xb4\",\n\t\t\"\\xce\\x95\" => \"\\xce\\xb5\",\t\t\"\\xce\\x96\" => \"\\xce\\xb6\",\t\t\"\\xce\\x97\" => \"\\xce\\xb7\",\t\t\"\\xce\\x98\" => \"\\xce\\xb8\",\n\t\t\"\\xce\\x99\" => \"\\xce\\xb9\",\t\t\"\\xce\\x9a\" => \"\\xce\\xba\",\t\t\"\\xce\\x9b\" => \"\\xce\\xbb\",\t\t\"\\xce\\x9c\" => \"\\xce\\xbc\",\n\t\t\"\\xce\\x9d\" => \"\\xce\\xbd\",\t\t\"\\xce\\x9e\" => \"\\xce\\xbe\",\t\t\"\\xce\\x9f\" => \"\\xce\\xbf\",\t\t\"\\xce\\xa0\" => \"\\xcf\\x80\",\n\t\t\"\\xce\\xa1\" => \"\\xcf\\x81\",\t\t\"\\xce\\xa3\" => \"\\xcf\\x83\",\t\t\"\\xce\\xa4\" => \"\\xcf\\x84\",\t\t\"\\xce\\xa5\" => \"\\xcf\\x85\",\n\t\t\"\\xce\\xa6\" => \"\\xcf\\x86\",\t\t\"\\xce\\xa7\" => \"\\xcf\\x87\",\t\t\"\\xce\\xa8\" => \"\\xcf\\x88\",\t\t\"\\xce\\xa9\" => \"\\xcf\\x89\",\n\t\t\"\\xce\\xaa\" => \"\\xcf\\x8a\",\t\t\"\\xce\\xab\" => \"\\xcf\\x8b\",\t\t\"\\xce\\xb0\" => \"\\xcf\\x85\\xcc\\x88\\xcc\\x81\",\t\"\\xcf\\x82\" => \"\\xcf\\x83\",\n\t\t\"\\xcf\\x90\" => \"\\xce\\xb2\",\t\t\"\\xcf\\x91\" => \"\\xce\\xb8\",\t\t\"\\xcf\\x95\" => \"\\xcf\\x86\",\t\t\"\\xcf\\x96\" => \"\\xcf\\x80\",\n\t\t\"\\xcf\\x98\" => \"\\xcf\\x99\",\t\t\"\\xcf\\x9a\" => \"\\xcf\\x9b\",\t\t\"\\xcf\\x9c\" => \"\\xcf\\x9d\",\t\t\"\\xcf\\x9e\" => \"\\xcf\\x9f\",\n\t\t\"\\xcf\\xa0\" => \"\\xcf\\xa1\",\t\t\"\\xcf\\xa2\" => \"\\xcf\\xa3\",\t\t\"\\xcf\\xa4\" => \"\\xcf\\xa5\",\t\t\"\\xcf\\xa6\" => \"\\xcf\\xa7\",\n\t\t\"\\xcf\\xa8\" => \"\\xcf\\xa9\",\t\t\"\\xcf\\xaa\" => \"\\xcf\\xab\",\t\t\"\\xcf\\xac\" => \"\\xcf\\xad\",\t\t\"\\xcf\\xae\" => \"\\xcf\\xaf\",\n\t\t\"\\xcf\\xb0\" => \"\\xce\\xba\",\t\t\"\\xcf\\xb1\" => \"\\xcf\\x81\",\t\t\"\\xcf\\xb4\" => \"\\xce\\xb8\",\t\t\"\\xcf\\xb5\" => \"\\xce\\xb5\",\n\t\t\"\\xcf\\xb7\" => \"\\xcf\\xb8\",\t\t\"\\xcf\\xb9\" => \"\\xcf\\xb2\",\t\t\"\\xcf\\xba\" => \"\\xcf\\xbb\",\t\t\"\\xcf\\xbd\" => \"\\xcd\\xbb\",\n\t\t\"\\xcf\\xbe\" => \"\\xcd\\xbc\",\t\t\"\\xcf\\xbf\" => \"\\xcd\\xbd\",\t\t\"\\xd0\\x80\" => \"\\xd1\\x90\",\t\t\"\\xd0\\x81\" => \"\\xd1\\x91\",\n\t\t\"\\xd0\\x82\" => \"\\xd1\\x92\",\t\t\"\\xd0\\x83\" => \"\\xd1\\x93\",\t\t\"\\xd0\\x84\" => \"\\xd1\\x94\",\t\t\"\\xd0\\x85\" => \"\\xd1\\x95\",\n\t\t\"\\xd0\\x86\" => \"\\xd1\\x96\",\t\t\"\\xd0\\x87\" => \"\\xd1\\x97\",\t\t\"\\xd0\\x88\" => \"\\xd1\\x98\",\t\t\"\\xd0\\x89\" => \"\\xd1\\x99\",\n\t\t\"\\xd0\\x8a\" => \"\\xd1\\x9a\",\t\t\"\\xd0\\x8b\" => \"\\xd1\\x9b\",\t\t\"\\xd0\\x8c\" => \"\\xd1\\x9c\",\t\t\"\\xd0\\x8d\" => \"\\xd1\\x9d\",\n\t\t\"\\xd0\\x8e\" => \"\\xd1\\x9e\",\t\t\"\\xd0\\x8f\" => \"\\xd1\\x9f\",\t\t\"\\xd0\\x90\" => \"\\xd0\\xb0\",\t\t\"\\xd0\\x91\" => \"\\xd0\\xb1\",\n\t\t\"\\xd0\\x92\" => \"\\xd0\\xb2\",\t\t\"\\xd0\\x93\" => \"\\xd0\\xb3\",\t\t\"\\xd0\\x94\" => \"\\xd0\\xb4\",\t\t\"\\xd0\\x95\" => \"\\xd0\\xb5\",\n\t\t\"\\xd0\\x96\" => \"\\xd0\\xb6\",\t\t\"\\xd0\\x97\" => \"\\xd0\\xb7\",\t\t\"\\xd0\\x98\" => \"\\xd0\\xb8\",\t\t\"\\xd0\\x99\" => \"\\xd0\\xb9\",\n\t\t\"\\xd0\\x9a\" => \"\\xd0\\xba\",\t\t\"\\xd0\\x9b\" => \"\\xd0\\xbb\",\t\t\"\\xd0\\x9c\" => \"\\xd0\\xbc\",\t\t\"\\xd0\\x9d\" => \"\\xd0\\xbd\",\n\t\t\"\\xd0\\x9e\" => \"\\xd0\\xbe\",\t\t\"\\xd0\\x9f\" => \"\\xd0\\xbf\",\t\t\"\\xd0\\xa0\" => \"\\xd1\\x80\",\t\t\"\\xd0\\xa1\" => \"\\xd1\\x81\",\n\t\t\"\\xd0\\xa2\" => \"\\xd1\\x82\",\t\t\"\\xd0\\xa3\" => \"\\xd1\\x83\",\t\t\"\\xd0\\xa4\" => \"\\xd1\\x84\",\t\t\"\\xd0\\xa5\" => \"\\xd1\\x85\",\n\t\t\"\\xd0\\xa6\" => \"\\xd1\\x86\",\t\t\"\\xd0\\xa7\" => \"\\xd1\\x87\",\t\t\"\\xd0\\xa8\" => \"\\xd1\\x88\",\t\t\"\\xd0\\xa9\" => \"\\xd1\\x89\",\n\t\t\"\\xd0\\xaa\" => \"\\xd1\\x8a\",\t\t\"\\xd0\\xab\" => \"\\xd1\\x8b\",\t\t\"\\xd0\\xac\" => \"\\xd1\\x8c\",\t\t\"\\xd0\\xad\" => \"\\xd1\\x8d\",\n\t\t\"\\xd0\\xae\" => \"\\xd1\\x8e\",\t\t\"\\xd0\\xaf\" => \"\\xd1\\x8f\",\t\t\"\\xd1\\xa0\" => \"\\xd1\\xa1\",\t\t\"\\xd1\\xa2\" => \"\\xd1\\xa3\",\n\t\t\"\\xd1\\xa4\" => \"\\xd1\\xa5\",\t\t\"\\xd1\\xa6\" => \"\\xd1\\xa7\",\t\t\"\\xd1\\xa8\" => \"\\xd1\\xa9\",\t\t\"\\xd1\\xaa\" => \"\\xd1\\xab\",\n\t\t\"\\xd1\\xac\" => \"\\xd1\\xad\",\t\t\"\\xd1\\xae\" => \"\\xd1\\xaf\",\t\t\"\\xd1\\xb0\" => \"\\xd1\\xb1\",\t\t\"\\xd1\\xb2\" => \"\\xd1\\xb3\",\n\t\t\"\\xd1\\xb4\" => \"\\xd1\\xb5\",\t\t\"\\xd1\\xb6\" => \"\\xd1\\xb7\",\t\t\"\\xd1\\xb8\" => \"\\xd1\\xb9\",\t\t\"\\xd1\\xba\" => \"\\xd1\\xbb\",\n\t\t\"\\xd1\\xbc\" => \"\\xd1\\xbd\",\t\t\"\\xd1\\xbe\" => \"\\xd1\\xbf\",\t\t\"\\xd2\\x80\" => \"\\xd2\\x81\",\t\t\"\\xd2\\x8a\" => \"\\xd2\\x8b\",\n\t\t\"\\xd2\\x8c\" => \"\\xd2\\x8d\",\t\t\"\\xd2\\x8e\" => \"\\xd2\\x8f\",\t\t\"\\xd2\\x90\" => \"\\xd2\\x91\",\t\t\"\\xd2\\x92\" => \"\\xd2\\x93\",\n\t\t\"\\xd2\\x94\" => \"\\xd2\\x95\",\t\t\"\\xd2\\x96\" => \"\\xd2\\x97\",\t\t\"\\xd2\\x98\" => \"\\xd2\\x99\",\t\t\"\\xd2\\x9a\" => \"\\xd2\\x9b\",\n\t\t\"\\xd2\\x9c\" => \"\\xd2\\x9d\",\t\t\"\\xd2\\x9e\" => \"\\xd2\\x9f\",\t\t\"\\xd2\\xa0\" => \"\\xd2\\xa1\",\t\t\"\\xd2\\xa2\" => \"\\xd2\\xa3\",\n\t\t\"\\xd2\\xa4\" => \"\\xd2\\xa5\",\t\t\"\\xd2\\xa6\" => \"\\xd2\\xa7\",\t\t\"\\xd2\\xa8\" => \"\\xd2\\xa9\",\t\t\"\\xd2\\xaa\" => \"\\xd2\\xab\",\n\t\t\"\\xd2\\xac\" => \"\\xd2\\xad\",\t\t\"\\xd2\\xae\" => \"\\xd2\\xaf\",\t\t\"\\xd2\\xb0\" => \"\\xd2\\xb1\",\t\t\"\\xd2\\xb2\" => \"\\xd2\\xb3\",\n\t\t\"\\xd2\\xb4\" => \"\\xd2\\xb5\",\t\t\"\\xd2\\xb6\" => \"\\xd2\\xb7\",\t\t\"\\xd2\\xb8\" => \"\\xd2\\xb9\",\t\t\"\\xd2\\xba\" => \"\\xd2\\xbb\",\n\t\t\"\\xd2\\xbc\" => \"\\xd2\\xbd\",\t\t\"\\xd2\\xbe\" => \"\\xd2\\xbf\",\t\t\"\\xd3\\x80\" => \"\\xd3\\x8f\",\t\t\"\\xd3\\x81\" => \"\\xd3\\x82\",\n\t\t\"\\xd3\\x83\" => \"\\xd3\\x84\",\t\t\"\\xd3\\x85\" => \"\\xd3\\x86\",\t\t\"\\xd3\\x87\" => \"\\xd3\\x88\",\t\t\"\\xd3\\x89\" => \"\\xd3\\x8a\",\n\t\t\"\\xd3\\x8b\" => \"\\xd3\\x8c\",\t\t\"\\xd3\\x8d\" => \"\\xd3\\x8e\",\t\t\"\\xd3\\x90\" => \"\\xd3\\x91\",\t\t\"\\xd3\\x92\" => \"\\xd3\\x93\",\n\t\t\"\\xd3\\x94\" => \"\\xd3\\x95\",\t\t\"\\xd3\\x96\" => \"\\xd3\\x97\",\t\t\"\\xd3\\x98\" => \"\\xd3\\x99\",\t\t\"\\xd3\\x9a\" => \"\\xd3\\x9b\",\n\t\t\"\\xd3\\x9c\" => \"\\xd3\\x9d\",\t\t\"\\xd3\\x9e\" => \"\\xd3\\x9f\",\t\t\"\\xd3\\xa0\" => \"\\xd3\\xa1\",\t\t\"\\xd3\\xa2\" => \"\\xd3\\xa3\",\n\t\t\"\\xd3\\xa4\" => \"\\xd3\\xa5\",\t\t\"\\xd3\\xa6\" => \"\\xd3\\xa7\",\t\t\"\\xd3\\xa8\" => \"\\xd3\\xa9\",\t\t\"\\xd3\\xaa\" => \"\\xd3\\xab\",\n\t\t\"\\xd3\\xac\" => \"\\xd3\\xad\",\t\t\"\\xd3\\xae\" => \"\\xd3\\xaf\",\t\t\"\\xd3\\xb0\" => \"\\xd3\\xb1\",\t\t\"\\xd3\\xb2\" => \"\\xd3\\xb3\",\n\t\t\"\\xd3\\xb4\" => \"\\xd3\\xb5\",\t\t\"\\xd3\\xb6\" => \"\\xd3\\xb7\",\t\t\"\\xd3\\xb8\" => \"\\xd3\\xb9\",\t\t\"\\xd3\\xba\" => \"\\xd3\\xbb\",\n\t\t\"\\xd3\\xbc\" => \"\\xd3\\xbd\",\t\t\"\\xd3\\xbe\" => \"\\xd3\\xbf\",\t\t\"\\xd4\\x80\" => \"\\xd4\\x81\",\t\t\"\\xd4\\x82\" => \"\\xd4\\x83\",\n\t\t\"\\xd4\\x84\" => \"\\xd4\\x85\",\t\t\"\\xd4\\x86\" => \"\\xd4\\x87\",\t\t\"\\xd4\\x88\" => \"\\xd4\\x89\",\t\t\"\\xd4\\x8a\" => \"\\xd4\\x8b\",\n\t\t\"\\xd4\\x8c\" => \"\\xd4\\x8d\",\t\t\"\\xd4\\x8e\" => \"\\xd4\\x8f\",\t\t\"\\xd4\\x90\" => \"\\xd4\\x91\",\t\t\"\\xd4\\x92\" => \"\\xd4\\x93\",\n\t\t\"\\xd4\\xb1\" => \"\\xd5\\xa1\",\t\t\"\\xd4\\xb2\" => \"\\xd5\\xa2\",\t\t\"\\xd4\\xb3\" => \"\\xd5\\xa3\",\t\t\"\\xd4\\xb4\" => \"\\xd5\\xa4\",\n\t\t\"\\xd4\\xb5\" => \"\\xd5\\xa5\",\t\t\"\\xd4\\xb6\" => \"\\xd5\\xa6\",\t\t\"\\xd4\\xb7\" => \"\\xd5\\xa7\",\t\t\"\\xd4\\xb8\" => \"\\xd5\\xa8\",\n\t\t\"\\xd4\\xb9\" => \"\\xd5\\xa9\",\t\t\"\\xd4\\xba\" => \"\\xd5\\xaa\",\t\t\"\\xd4\\xbb\" => \"\\xd5\\xab\",\t\t\"\\xd4\\xbc\" => \"\\xd5\\xac\",\n\t\t\"\\xd4\\xbd\" => \"\\xd5\\xad\",\t\t\"\\xd4\\xbe\" => \"\\xd5\\xae\",\t\t\"\\xd4\\xbf\" => \"\\xd5\\xaf\",\t\t\"\\xd5\\x80\" => \"\\xd5\\xb0\",\n\t\t\"\\xd5\\x81\" => \"\\xd5\\xb1\",\t\t\"\\xd5\\x82\" => \"\\xd5\\xb2\",\t\t\"\\xd5\\x83\" => \"\\xd5\\xb3\",\t\t\"\\xd5\\x84\" => \"\\xd5\\xb4\",\n\t\t\"\\xd5\\x85\" => \"\\xd5\\xb5\",\t\t\"\\xd5\\x86\" => \"\\xd5\\xb6\",\t\t\"\\xd5\\x87\" => \"\\xd5\\xb7\",\t\t\"\\xd5\\x88\" => \"\\xd5\\xb8\",\n\t\t\"\\xd5\\x89\" => \"\\xd5\\xb9\",\t\t\"\\xd5\\x8a\" => \"\\xd5\\xba\",\t\t\"\\xd5\\x8b\" => \"\\xd5\\xbb\",\t\t\"\\xd5\\x8c\" => \"\\xd5\\xbc\",\n\t\t\"\\xd5\\x8d\" => \"\\xd5\\xbd\",\t\t\"\\xd5\\x8e\" => \"\\xd5\\xbe\",\t\t\"\\xd5\\x8f\" => \"\\xd5\\xbf\",\t\t\"\\xd5\\x90\" => \"\\xd6\\x80\",\n\t\t\"\\xd5\\x91\" => \"\\xd6\\x81\",\t\t\"\\xd5\\x92\" => \"\\xd6\\x82\",\t\t\"\\xd5\\x93\" => \"\\xd6\\x83\",\t\t\"\\xd5\\x94\" => \"\\xd6\\x84\",\n\t\t\"\\xd5\\x95\" => \"\\xd6\\x85\",\t\t\"\\xd5\\x96\" => \"\\xd6\\x86\",\t\t\"\\xd6\\x87\" => \"\\xd5\\xa5\\xd6\\x82\",\t\t\"\\xe1\\x82\\xa0\" => \"\\xe2\\xb4\\x80\",\n\t\t\"\\xe1\\x82\\xa1\" => \"\\xe2\\xb4\\x81\",\t\t\"\\xe1\\x82\\xa2\" => \"\\xe2\\xb4\\x82\",\t\t\"\\xe1\\x82\\xa3\" => \"\\xe2\\xb4\\x83\",\t\t\"\\xe1\\x82\\xa4\" => \"\\xe2\\xb4\\x84\",\n\t\t\"\\xe1\\x82\\xa5\" => \"\\xe2\\xb4\\x85\",\t\t\"\\xe1\\x82\\xa6\" => \"\\xe2\\xb4\\x86\",\t\t\"\\xe1\\x82\\xa7\" => \"\\xe2\\xb4\\x87\",\t\t\"\\xe1\\x82\\xa8\" => \"\\xe2\\xb4\\x88\",\n\t\t\"\\xe1\\x82\\xa9\" => \"\\xe2\\xb4\\x89\",\t\t\"\\xe1\\x82\\xaa\" => \"\\xe2\\xb4\\x8a\",\t\t\"\\xe1\\x82\\xab\" => \"\\xe2\\xb4\\x8b\",\t\t\"\\xe1\\x82\\xac\" => \"\\xe2\\xb4\\x8c\",\n\t\t\"\\xe1\\x82\\xad\" => \"\\xe2\\xb4\\x8d\",\t\t\"\\xe1\\x82\\xae\" => \"\\xe2\\xb4\\x8e\",\t\t\"\\xe1\\x82\\xaf\" => \"\\xe2\\xb4\\x8f\",\t\t\"\\xe1\\x82\\xb0\" => \"\\xe2\\xb4\\x90\",\n\t\t\"\\xe1\\x82\\xb1\" => \"\\xe2\\xb4\\x91\",\t\t\"\\xe1\\x82\\xb2\" => \"\\xe2\\xb4\\x92\",\t\t\"\\xe1\\x82\\xb3\" => \"\\xe2\\xb4\\x93\",\t\t\"\\xe1\\x82\\xb4\" => \"\\xe2\\xb4\\x94\",\n\t\t\"\\xe1\\x82\\xb5\" => \"\\xe2\\xb4\\x95\",\t\t\"\\xe1\\x82\\xb6\" => \"\\xe2\\xb4\\x96\",\t\t\"\\xe1\\x82\\xb7\" => \"\\xe2\\xb4\\x97\",\t\t\"\\xe1\\x82\\xb8\" => \"\\xe2\\xb4\\x98\",\n\t\t\"\\xe1\\x82\\xb9\" => \"\\xe2\\xb4\\x99\",\t\t\"\\xe1\\x82\\xba\" => \"\\xe2\\xb4\\x9a\",\t\t\"\\xe1\\x82\\xbb\" => \"\\xe2\\xb4\\x9b\",\t\t\"\\xe1\\x82\\xbc\" => \"\\xe2\\xb4\\x9c\",\n\t\t\"\\xe1\\x82\\xbd\" => \"\\xe2\\xb4\\x9d\",\t\t\"\\xe1\\x82\\xbe\" => \"\\xe2\\xb4\\x9e\",\t\t\"\\xe1\\x82\\xbf\" => \"\\xe2\\xb4\\x9f\",\t\t\"\\xe1\\x83\\x80\" => \"\\xe2\\xb4\\xa0\",\n\t\t\"\\xe1\\x83\\x81\" => \"\\xe2\\xb4\\xa1\",\t\t\"\\xe1\\x83\\x82\" => \"\\xe2\\xb4\\xa2\",\t\t\"\\xe1\\x83\\x83\" => \"\\xe2\\xb4\\xa3\",\t\t\"\\xe1\\x83\\x84\" => \"\\xe2\\xb4\\xa4\",\n\t\t\"\\xe1\\x83\\x85\" => \"\\xe2\\xb4\\xa5\",\t\t\"\\xe1\\xb8\\x80\" => \"\\xe1\\xb8\\x81\",\t\t\"\\xe1\\xb8\\x82\" => \"\\xe1\\xb8\\x83\",\t\t\"\\xe1\\xb8\\x84\" => \"\\xe1\\xb8\\x85\",\n\t\t\"\\xe1\\xb8\\x86\" => \"\\xe1\\xb8\\x87\",\t\t\"\\xe1\\xb8\\x88\" => \"\\xe1\\xb8\\x89\",\t\t\"\\xe1\\xb8\\x8a\" => \"\\xe1\\xb8\\x8b\",\t\t\"\\xe1\\xb8\\x8c\" => \"\\xe1\\xb8\\x8d\",\n\t\t\"\\xe1\\xb8\\x8e\" => \"\\xe1\\xb8\\x8f\",\t\t\"\\xe1\\xb8\\x90\" => \"\\xe1\\xb8\\x91\",\t\t\"\\xe1\\xb8\\x92\" => \"\\xe1\\xb8\\x93\",\t\t\"\\xe1\\xb8\\x94\" => \"\\xe1\\xb8\\x95\",\n\t\t\"\\xe1\\xb8\\x96\" => \"\\xe1\\xb8\\x97\",\t\t\"\\xe1\\xb8\\x98\" => \"\\xe1\\xb8\\x99\",\t\t\"\\xe1\\xb8\\x9a\" => \"\\xe1\\xb8\\x9b\",\t\t\"\\xe1\\xb8\\x9c\" => \"\\xe1\\xb8\\x9d\",\n\t\t\"\\xe1\\xb8\\x9e\" => \"\\xe1\\xb8\\x9f\",\t\t\"\\xe1\\xb8\\xa0\" => \"\\xe1\\xb8\\xa1\",\t\t\"\\xe1\\xb8\\xa2\" => \"\\xe1\\xb8\\xa3\",\t\t\"\\xe1\\xb8\\xa4\" => \"\\xe1\\xb8\\xa5\",\n\t\t\"\\xe1\\xb8\\xa6\" => \"\\xe1\\xb8\\xa7\",\t\t\"\\xe1\\xb8\\xa8\" => \"\\xe1\\xb8\\xa9\",\t\t\"\\xe1\\xb8\\xaa\" => \"\\xe1\\xb8\\xab\",\t\t\"\\xe1\\xb8\\xac\" => \"\\xe1\\xb8\\xad\",\n\t\t\"\\xe1\\xb8\\xae\" => \"\\xe1\\xb8\\xaf\",\t\t\"\\xe1\\xb8\\xb0\" => \"\\xe1\\xb8\\xb1\",\t\t\"\\xe1\\xb8\\xb2\" => \"\\xe1\\xb8\\xb3\",\t\t\"\\xe1\\xb8\\xb4\" => \"\\xe1\\xb8\\xb5\",\n\t\t\"\\xe1\\xb8\\xb6\" => \"\\xe1\\xb8\\xb7\",\t\t\"\\xe1\\xb8\\xb8\" => \"\\xe1\\xb8\\xb9\",\t\t\"\\xe1\\xb8\\xba\" => \"\\xe1\\xb8\\xbb\",\t\t\"\\xe1\\xb8\\xbc\" => \"\\xe1\\xb8\\xbd\",\n\t\t\"\\xe1\\xb8\\xbe\" => \"\\xe1\\xb8\\xbf\",\t\t\"\\xe1\\xb9\\x80\" => \"\\xe1\\xb9\\x81\",\t\t\"\\xe1\\xb9\\x82\" => \"\\xe1\\xb9\\x83\",\t\t\"\\xe1\\xb9\\x84\" => \"\\xe1\\xb9\\x85\",\n\t\t\"\\xe1\\xb9\\x86\" => \"\\xe1\\xb9\\x87\",\t\t\"\\xe1\\xb9\\x88\" => \"\\xe1\\xb9\\x89\",\t\t\"\\xe1\\xb9\\x8a\" => \"\\xe1\\xb9\\x8b\",\t\t\"\\xe1\\xb9\\x8c\" => \"\\xe1\\xb9\\x8d\",\n\t\t\"\\xe1\\xb9\\x8e\" => \"\\xe1\\xb9\\x8f\",\t\t\"\\xe1\\xb9\\x90\" => \"\\xe1\\xb9\\x91\",\t\t\"\\xe1\\xb9\\x92\" => \"\\xe1\\xb9\\x93\",\t\t\"\\xe1\\xb9\\x94\" => \"\\xe1\\xb9\\x95\",\n\t\t\"\\xe1\\xb9\\x96\" => \"\\xe1\\xb9\\x97\",\t\t\"\\xe1\\xb9\\x98\" => \"\\xe1\\xb9\\x99\",\t\t\"\\xe1\\xb9\\x9a\" => \"\\xe1\\xb9\\x9b\",\t\t\"\\xe1\\xb9\\x9c\" => \"\\xe1\\xb9\\x9d\",\n\t\t\"\\xe1\\xb9\\x9e\" => \"\\xe1\\xb9\\x9f\",\t\t\"\\xe1\\xb9\\xa0\" => \"\\xe1\\xb9\\xa1\",\t\t\"\\xe1\\xb9\\xa2\" => \"\\xe1\\xb9\\xa3\",\t\t\"\\xe1\\xb9\\xa4\" => \"\\xe1\\xb9\\xa5\",\n\t\t\"\\xe1\\xb9\\xa6\" => \"\\xe1\\xb9\\xa7\",\t\t\"\\xe1\\xb9\\xa8\" => \"\\xe1\\xb9\\xa9\",\t\t\"\\xe1\\xb9\\xaa\" => \"\\xe1\\xb9\\xab\",\t\t\"\\xe1\\xb9\\xac\" => \"\\xe1\\xb9\\xad\",\n\t\t\"\\xe1\\xb9\\xae\" => \"\\xe1\\xb9\\xaf\",\t\t\"\\xe1\\xb9\\xb0\" => \"\\xe1\\xb9\\xb1\",\t\t\"\\xe1\\xb9\\xb2\" => \"\\xe1\\xb9\\xb3\",\t\t\"\\xe1\\xb9\\xb4\" => \"\\xe1\\xb9\\xb5\",\n\t\t\"\\xe1\\xb9\\xb6\" => \"\\xe1\\xb9\\xb7\",\t\t\"\\xe1\\xb9\\xb8\" => \"\\xe1\\xb9\\xb9\",\t\t\"\\xe1\\xb9\\xba\" => \"\\xe1\\xb9\\xbb\",\t\t\"\\xe1\\xb9\\xbc\" => \"\\xe1\\xb9\\xbd\",\n\t\t\"\\xe1\\xb9\\xbe\" => \"\\xe1\\xb9\\xbf\",\t\t\"\\xe1\\xba\\x80\" => \"\\xe1\\xba\\x81\",\t\t\"\\xe1\\xba\\x82\" => \"\\xe1\\xba\\x83\",\t\t\"\\xe1\\xba\\x84\" => \"\\xe1\\xba\\x85\",\n\t\t\"\\xe1\\xba\\x86\" => \"\\xe1\\xba\\x87\",\t\t\"\\xe1\\xba\\x88\" => \"\\xe1\\xba\\x89\",\t\t\"\\xe1\\xba\\x8a\" => \"\\xe1\\xba\\x8b\",\t\t\"\\xe1\\xba\\x8c\" => \"\\xe1\\xba\\x8d\",\n\t\t\"\\xe1\\xba\\x8e\" => \"\\xe1\\xba\\x8f\",\t\t\"\\xe1\\xba\\x90\" => \"\\xe1\\xba\\x91\",\t\t\"\\xe1\\xba\\x92\" => \"\\xe1\\xba\\x93\",\t\t\"\\xe1\\xba\\x94\" => \"\\xe1\\xba\\x95\",\n\t\t\"\\xe1\\xba\\x96\" => \"h\\xcc\\xb1\",\t\t\"\\xe1\\xba\\x97\" => \"t\\xcc\\x88\",\t\t\"\\xe1\\xba\\x98\" => \"w\\xcc\\x8a\",\t\t\"\\xe1\\xba\\x99\" => \"y\\xcc\\x8a\",\n\t\t\"\\xe1\\xba\\x9a\" => \"a\\xca\\xbe\",\t\"\\xe1\\xba\\x9b\" => \"\\xe1\\xb9\\xa1\",\t\t\"\\xe1\\xba\\xa0\" => \"\\xe1\\xba\\xa1\",\t\t\"\\xe1\\xba\\xa2\" => \"\\xe1\\xba\\xa3\",\n\t\t\"\\xe1\\xba\\xa4\" => \"\\xe1\\xba\\xa5\",\t\t\"\\xe1\\xba\\xa6\" => \"\\xe1\\xba\\xa7\",\t\t\"\\xe1\\xba\\xa8\" => \"\\xe1\\xba\\xa9\",\t\t\"\\xe1\\xba\\xaa\" => \"\\xe1\\xba\\xab\",\n\t\t\"\\xe1\\xba\\xac\" => \"\\xe1\\xba\\xad\",\t\t\"\\xe1\\xba\\xae\" => \"\\xe1\\xba\\xaf\",\t\t\"\\xe1\\xba\\xb0\" => \"\\xe1\\xba\\xb1\",\t\t\"\\xe1\\xba\\xb2\" => \"\\xe1\\xba\\xb3\",\n\t\t\"\\xe1\\xba\\xb4\" => \"\\xe1\\xba\\xb5\",\t\t\"\\xe1\\xba\\xb6\" => \"\\xe1\\xba\\xb7\",\t\t\"\\xe1\\xba\\xb8\" => \"\\xe1\\xba\\xb9\",\t\t\"\\xe1\\xba\\xba\" => \"\\xe1\\xba\\xbb\",\n\t\t\"\\xe1\\xba\\xbc\" => \"\\xe1\\xba\\xbd\",\t\t\"\\xe1\\xba\\xbe\" => \"\\xe1\\xba\\xbf\",\t\t\"\\xe1\\xbb\\x80\" => \"\\xe1\\xbb\\x81\",\t\t\"\\xe1\\xbb\\x82\" => \"\\xe1\\xbb\\x83\",\n\t\t\"\\xe1\\xbb\\x84\" => \"\\xe1\\xbb\\x85\",\t\t\"\\xe1\\xbb\\x86\" => \"\\xe1\\xbb\\x87\",\t\t\"\\xe1\\xbb\\x88\" => \"\\xe1\\xbb\\x89\",\t\t\"\\xe1\\xbb\\x8a\" => \"\\xe1\\xbb\\x8b\",\n\t\t\"\\xe1\\xbb\\x8c\" => \"\\xe1\\xbb\\x8d\",\t\t\"\\xe1\\xbb\\x8e\" => \"\\xe1\\xbb\\x8f\",\t\t\"\\xe1\\xbb\\x90\" => \"\\xe1\\xbb\\x91\",\t\t\"\\xe1\\xbb\\x92\" => \"\\xe1\\xbb\\x93\",\n\t\t\"\\xe1\\xbb\\x94\" => \"\\xe1\\xbb\\x95\",\t\t\"\\xe1\\xbb\\x96\" => \"\\xe1\\xbb\\x97\",\t\t\"\\xe1\\xbb\\x98\" => \"\\xe1\\xbb\\x99\",\t\t\"\\xe1\\xbb\\x9a\" => \"\\xe1\\xbb\\x9b\",\n\t\t\"\\xe1\\xbb\\x9c\" => \"\\xe1\\xbb\\x9d\",\t\t\"\\xe1\\xbb\\x9e\" => \"\\xe1\\xbb\\x9f\",\t\t\"\\xe1\\xbb\\xa0\" => \"\\xe1\\xbb\\xa1\",\t\t\"\\xe1\\xbb\\xa2\" => \"\\xe1\\xbb\\xa3\",\n\t\t\"\\xe1\\xbb\\xa4\" => \"\\xe1\\xbb\\xa5\",\t\t\"\\xe1\\xbb\\xa6\" => \"\\xe1\\xbb\\xa7\",\t\t\"\\xe1\\xbb\\xa8\" => \"\\xe1\\xbb\\xa9\",\t\t\"\\xe1\\xbb\\xaa\" => \"\\xe1\\xbb\\xab\",\n\t\t\"\\xe1\\xbb\\xac\" => \"\\xe1\\xbb\\xad\",\t\t\"\\xe1\\xbb\\xae\" => \"\\xe1\\xbb\\xaf\",\t\t\"\\xe1\\xbb\\xb0\" => \"\\xe1\\xbb\\xb1\",\t\t\"\\xe1\\xbb\\xb2\" => \"\\xe1\\xbb\\xb3\",\n\t\t\"\\xe1\\xbb\\xb4\" => \"\\xe1\\xbb\\xb5\",\t\t\"\\xe1\\xbb\\xb6\" => \"\\xe1\\xbb\\xb7\",\t\t\"\\xe1\\xbb\\xb8\" => \"\\xe1\\xbb\\xb9\",\t\t\"\\xe1\\xbc\\x88\" => \"\\xe1\\xbc\\x80\",\n\t\t\"\\xe1\\xbc\\x89\" => \"\\xe1\\xbc\\x81\",\t\t\"\\xe1\\xbc\\x8a\" => \"\\xe1\\xbc\\x82\",\t\t\"\\xe1\\xbc\\x8b\" => \"\\xe1\\xbc\\x83\",\t\t\"\\xe1\\xbc\\x8c\" => \"\\xe1\\xbc\\x84\",\n\t\t\"\\xe1\\xbc\\x8d\" => \"\\xe1\\xbc\\x85\",\t\t\"\\xe1\\xbc\\x8e\" => \"\\xe1\\xbc\\x86\",\t\t\"\\xe1\\xbc\\x8f\" => \"\\xe1\\xbc\\x87\",\t\t\"\\xe1\\xbc\\x98\" => \"\\xe1\\xbc\\x90\",\n\t\t\"\\xe1\\xbc\\x99\" => \"\\xe1\\xbc\\x91\",\t\t\"\\xe1\\xbc\\x9a\" => \"\\xe1\\xbc\\x92\",\t\t\"\\xe1\\xbc\\x9b\" => \"\\xe1\\xbc\\x93\",\t\t\"\\xe1\\xbc\\x9c\" => \"\\xe1\\xbc\\x94\",\n\t\t\"\\xe1\\xbc\\x9d\" => \"\\xe1\\xbc\\x95\",\t\t\"\\xe1\\xbc\\xa8\" => \"\\xe1\\xbc\\xa0\",\t\t\"\\xe1\\xbc\\xa9\" => \"\\xe1\\xbc\\xa1\",\t\t\"\\xe1\\xbc\\xaa\" => \"\\xe1\\xbc\\xa2\",\n\t\t\"\\xe1\\xbc\\xab\" => \"\\xe1\\xbc\\xa3\",\t\t\"\\xe1\\xbc\\xac\" => \"\\xe1\\xbc\\xa4\",\t\t\"\\xe1\\xbc\\xad\" => \"\\xe1\\xbc\\xa5\",\t\t\"\\xe1\\xbc\\xae\" => \"\\xe1\\xbc\\xa6\",\n\t\t\"\\xe1\\xbc\\xaf\" => \"\\xe1\\xbc\\xa7\",\t\t\"\\xe1\\xbc\\xb8\" => \"\\xe1\\xbc\\xb0\",\t\t\"\\xe1\\xbc\\xb9\" => \"\\xe1\\xbc\\xb1\",\t\t\"\\xe1\\xbc\\xba\" => \"\\xe1\\xbc\\xb2\",\n\t\t\"\\xe1\\xbc\\xbb\" => \"\\xe1\\xbc\\xb3\",\t\t\"\\xe1\\xbc\\xbc\" => \"\\xe1\\xbc\\xb4\",\t\t\"\\xe1\\xbc\\xbd\" => \"\\xe1\\xbc\\xb5\",\t\t\"\\xe1\\xbc\\xbe\" => \"\\xe1\\xbc\\xb6\",\n\t\t\"\\xe1\\xbc\\xbf\" => \"\\xe1\\xbc\\xb7\",\t\t\"\\xe1\\xbd\\x88\" => \"\\xe1\\xbd\\x80\",\t\t\"\\xe1\\xbd\\x89\" => \"\\xe1\\xbd\\x81\",\t\t\"\\xe1\\xbd\\x8a\" => \"\\xe1\\xbd\\x82\",\n\t\t\"\\xe1\\xbd\\x8b\" => \"\\xe1\\xbd\\x83\",\t\t\"\\xe1\\xbd\\x8c\" => \"\\xe1\\xbd\\x84\",\t\t\"\\xe1\\xbd\\x8d\" => \"\\xe1\\xbd\\x85\",\t\t\"\\xe1\\xbd\\x90\" => \"\\xcf\\x85\\xcc\\x93\",\n\t\t\"\\xe1\\xbd\\x92\" => \"\\xcf\\x85\\xcc\\x93\\xcc\\x80\",\t\"\\xe1\\xbd\\x94\" => \"\\xcf\\x85\\xcc\\x93\\xcc\\x81\",\t\"\\xe1\\xbd\\x96\" => \"\\xcf\\x85\\xcc\\x93\\xcd\\x82\",\t\t\"\\xe1\\xbd\\x99\" => \"\\xe1\\xbd\\x91\",\n\t\t\"\\xe1\\xbd\\x9b\" => \"\\xe1\\xbd\\x93\",\t\t\"\\xe1\\xbd\\x9d\" => \"\\xe1\\xbd\\x95\",\t\t\"\\xe1\\xbd\\x9f\" => \"\\xe1\\xbd\\x97\",\t\t\"\\xe1\\xbd\\xa8\" => \"\\xe1\\xbd\\xa0\",\n\t\t\"\\xe1\\xbd\\xa9\" => \"\\xe1\\xbd\\xa1\",\t\t\"\\xe1\\xbd\\xaa\" => \"\\xe1\\xbd\\xa2\",\t\t\"\\xe1\\xbd\\xab\" => \"\\xe1\\xbd\\xa3\",\t\t\"\\xe1\\xbd\\xac\" => \"\\xe1\\xbd\\xa4\",\n\t\t\"\\xe1\\xbd\\xad\" => \"\\xe1\\xbd\\xa5\",\t\t\"\\xe1\\xbd\\xae\" => \"\\xe1\\xbd\\xa6\",\t\t\"\\xe1\\xbd\\xaf\" => \"\\xe1\\xbd\\xa7\",\t\t\"\\xe1\\xbe\\x80\" => \"\\xe1\\xbc\\x80\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\x81\" => \"\\xe1\\xbc\\x81\\xce\\xb9\",\t\"\\xe1\\xbe\\x82\" => \"\\xe1\\xbc\\x82\\xce\\xb9\",\t\"\\xe1\\xbe\\x83\" => \"\\xe1\\xbc\\x83\\xce\\xb9\",\t\"\\xe1\\xbe\\x84\" => \"\\xe1\\xbc\\x84\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\x85\" => \"\\xe1\\xbc\\x85\\xce\\xb9\",\t\"\\xe1\\xbe\\x86\" => \"\\xe1\\xbc\\x86\\xce\\xb9\",\t\"\\xe1\\xbe\\x87\" => \"\\xe1\\xbc\\x87\\xce\\xb9\",\t\"\\xe1\\xbe\\x88\" => \"\\xe1\\xbe\\x80\",\n\t\t\"\\xe1\\xbe\\x89\" => \"\\xe1\\xbe\\x81\",\t\t\"\\xe1\\xbe\\x8a\" => \"\\xe1\\xbe\\x82\",\t\t\"\\xe1\\xbe\\x8b\" => \"\\xe1\\xbe\\x83\",\t\t\"\\xe1\\xbe\\x8c\" => \"\\xe1\\xbe\\x84\",\n\t\t\"\\xe1\\xbe\\x8d\" => \"\\xe1\\xbe\\x85\",\t\t\"\\xe1\\xbe\\x8e\" => \"\\xe1\\xbe\\x86\",\t\t\"\\xe1\\xbe\\x8f\" => \"\\xe1\\xbe\\x87\",\t\t\"\\xe1\\xbe\\x90\" => \"\\xe1\\xbc\\xa0\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\x91\" => \"\\xe1\\xbc\\xa1\\xce\\xb9\",\t\"\\xe1\\xbe\\x92\" => \"\\xe1\\xbc\\xa2\\xce\\xb9\",\t\"\\xe1\\xbe\\x93\" => \"\\xe1\\xbc\\xa3\\xce\\xb9\",\t\"\\xe1\\xbe\\x94\" => \"\\xe1\\xbc\\xa4\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\x95\" => \"\\xe1\\xbc\\xa5\\xce\\xb9\",\t\"\\xe1\\xbe\\x96\" => \"\\xe1\\xbc\\xa6\\xce\\xb9\",\t\"\\xe1\\xbe\\x97\" => \"\\xe1\\xbc\\xa7\\xce\\xb9\",\t\"\\xe1\\xbe\\x98\" => \"\\xe1\\xbe\\x90\",\n\t\t\"\\xe1\\xbe\\x99\" => \"\\xe1\\xbe\\x91\",\t\t\"\\xe1\\xbe\\x9a\" => \"\\xe1\\xbe\\x92\",\t\t\"\\xe1\\xbe\\x9b\" => \"\\xe1\\xbe\\x93\",\t\t\"\\xe1\\xbe\\x9c\" => \"\\xe1\\xbe\\x94\",\n\t\t\"\\xe1\\xbe\\x9d\" => \"\\xe1\\xbe\\x95\",\t\t\"\\xe1\\xbe\\x9e\" => \"\\xe1\\xbe\\x96\",\t\t\"\\xe1\\xbe\\x9f\" => \"\\xe1\\xbe\\x97\",\t\t\"\\xe1\\xbe\\xa0\" => \"\\xe1\\xbd\\xa0\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\xa1\" => \"\\xe1\\xbd\\xa1\\xce\\xb9\",\t\"\\xe1\\xbe\\xa2\" => \"\\xe1\\xbd\\xa2\\xce\\xb9\",\t\"\\xe1\\xbe\\xa3\" => \"\\xe1\\xbd\\xa3\\xce\\xb9\",\t\"\\xe1\\xbe\\xa4\" => \"\\xe1\\xbd\\xa4\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\xa5\" => \"\\xe1\\xbd\\xa5\\xce\\xb9\",\t\"\\xe1\\xbe\\xa6\" => \"\\xe1\\xbd\\xa6\\xce\\xb9\",\t\"\\xe1\\xbe\\xa7\" => \"\\xe1\\xbd\\xa7\\xce\\xb9\",\t\"\\xe1\\xbe\\xa8\" => \"\\xe1\\xbe\\xa0\",\n\t\t\"\\xe1\\xbe\\xa9\" => \"\\xe1\\xbe\\xa1\",\t\t\"\\xe1\\xbe\\xaa\" => \"\\xe1\\xbe\\xa2\",\t\t\"\\xe1\\xbe\\xab\" => \"\\xe1\\xbe\\xa3\",\t\t\"\\xe1\\xbe\\xac\" => \"\\xe1\\xbe\\xa4\",\n\t\t\"\\xe1\\xbe\\xad\" => \"\\xe1\\xbe\\xa5\",\t\t\"\\xe1\\xbe\\xae\" => \"\\xe1\\xbe\\xa6\",\t\t\"\\xe1\\xbe\\xaf\" => \"\\xe1\\xbe\\xa7\",\t\t\"\\xe1\\xbe\\xb2\" => \"\\xe1\\xbd\\xb0\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\xb3\" => \"\\xce\\xb1\\xce\\xb9\",\t\"\\xe1\\xbe\\xb4\" => \"\\xce\\xac\\xce\\xb9\",\t\"\\xe1\\xbe\\xb6\" => \"\\xce\\xb1\\xcd\\x82\",\t\t\"\\xe1\\xbe\\xb7\" => \"\\xce\\xb1\\xcd\\x82\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\xb8\" => \"\\xe1\\xbe\\xb0\",\t\t\"\\xe1\\xbe\\xb9\" => \"\\xe1\\xbe\\xb1\",\t\t\"\\xe1\\xbe\\xba\" => \"\\xe1\\xbd\\xb0\",\t\t\"\\xe1\\xbe\\xbb\" => \"\\xe1\\xbd\\xb1\",\n\t\t\"\\xe1\\xbe\\xbc\" => \"\\xe1\\xbe\\xb3\",\t\t\"\\xe1\\xbe\\xbe\" => \"\\xce\\xb9\",\t\t\"\\xe1\\xbf\\x82\" => \"\\xe1\\xbd\\xb4\\xce\\xb9\",\t\"\\xe1\\xbf\\x83\" => \"\\xce\\xb7\\xce\\xb9\",\n\t\t\"\\xe1\\xbf\\x84\" => \"\\xce\\xae\\xce\\xb9\",\t\"\\xe1\\xbf\\x86\" => \"\\xce\\xb7\\xcd\\x82\",\t\t\"\\xe1\\xbf\\x87\" => \"\\xce\\xb7\\xcd\\x82\\xce\\xb9\",\t\"\\xe1\\xbf\\x88\" => \"\\xe1\\xbd\\xb2\",\n\t\t\"\\xe1\\xbf\\x89\" => \"\\xe1\\xbd\\xb3\",\t\t\"\\xe1\\xbf\\x8a\" => \"\\xe1\\xbd\\xb4\",\t\t\"\\xe1\\xbf\\x8b\" => \"\\xe1\\xbd\\xb5\",\t\t\"\\xe1\\xbf\\x8c\" => \"\\xe1\\xbf\\x83\",\n\t\t\"\\xe1\\xbf\\x92\" => \"\\xce\\xb9\\xcc\\x88\\xcc\\x80\",\t\"\\xe1\\xbf\\x93\" => \"\\xce\\xb9\\xcc\\x88\\xcc\\x81\",\t\"\\xe1\\xbf\\x96\" => \"\\xce\\xb9\\xcd\\x82\",\t\t\"\\xe1\\xbf\\x97\" => \"\\xce\\xb9\\xcc\\x88\\xcd\\x82\",\n\t\t\"\\xe1\\xbf\\x98\" => \"\\xe1\\xbf\\x90\",\t\t\"\\xe1\\xbf\\x99\" => \"\\xe1\\xbf\\x91\",\t\t\"\\xe1\\xbf\\x9a\" => \"\\xe1\\xbd\\xb6\",\t\t\"\\xe1\\xbf\\x9b\" => \"\\xe1\\xbd\\xb7\",\n\t\t\"\\xe1\\xbf\\xa2\" => \"\\xcf\\x85\\xcc\\x88\\xcc\\x80\",\t\"\\xe1\\xbf\\xa3\" => \"\\xcf\\x85\\xcc\\x88\\xcc\\x81\",\t\"\\xe1\\xbf\\xa4\" => \"\\xcf\\x81\\xcc\\x93\",\t\t\"\\xe1\\xbf\\xa6\" => \"\\xcf\\x85\\xcd\\x82\",\n\t\t\"\\xe1\\xbf\\xa7\" => \"\\xcf\\x85\\xcc\\x88\\xcd\\x82\",\t\t\"\\xe1\\xbf\\xa8\" => \"\\xe1\\xbf\\xa0\",\t\t\"\\xe1\\xbf\\xa9\" => \"\\xe1\\xbf\\xa1\",\t\t\"\\xe1\\xbf\\xaa\" => \"\\xe1\\xbd\\xba\",\n\t\t\"\\xe1\\xbf\\xab\" => \"\\xe1\\xbd\\xbb\",\t\t\"\\xe1\\xbf\\xac\" => \"\\xe1\\xbf\\xa5\",\t\t\"\\xe1\\xbf\\xb2\" => \"\\xe1\\xbd\\xbc\\xce\\xb9\",\t\"\\xe1\\xbf\\xb3\" => \"\\xcf\\x89\\xce\\xb9\",\n\t\t\"\\xe1\\xbf\\xb4\" => \"\\xcf\\x8e\\xce\\xb9\",\t\"\\xe1\\xbf\\xb6\" => \"\\xcf\\x89\\xcd\\x82\",\t\t\"\\xe1\\xbf\\xb7\" => \"\\xcf\\x89\\xcd\\x82\\xce\\xb9\",\t\"\\xe1\\xbf\\xb8\" => \"\\xe1\\xbd\\xb8\",\n\t\t\"\\xe1\\xbf\\xb9\" => \"\\xe1\\xbd\\xb9\",\t\t\"\\xe1\\xbf\\xba\" => \"\\xe1\\xbd\\xbc\",\t\t\"\\xe1\\xbf\\xbb\" => \"\\xe1\\xbd\\xbd\",\t\t\"\\xe1\\xbf\\xbc\" => \"\\xe1\\xbf\\xb3\",\n\t\t\"\\xe2\\x84\\xa6\" => \"\\xcf\\x89\",\t\t\"\\xe2\\x84\\xaa\" => \"k\",\t\t\"\\xe2\\x84\\xab\" => \"\\xc3\\xa5\",\t\t\"\\xe2\\x84\\xb2\" => \"\\xe2\\x85\\x8e\",\n\t\t\"\\xe2\\x85\\xa0\" => \"\\xe2\\x85\\xb0\",\t\t\"\\xe2\\x85\\xa1\" => \"\\xe2\\x85\\xb1\",\t\t\"\\xe2\\x85\\xa2\" => \"\\xe2\\x85\\xb2\",\t\t\"\\xe2\\x85\\xa3\" => \"\\xe2\\x85\\xb3\",\n\t\t\"\\xe2\\x85\\xa4\" => \"\\xe2\\x85\\xb4\",\t\t\"\\xe2\\x85\\xa5\" => \"\\xe2\\x85\\xb5\",\t\t\"\\xe2\\x85\\xa6\" => \"\\xe2\\x85\\xb6\",\t\t\"\\xe2\\x85\\xa7\" => \"\\xe2\\x85\\xb7\",\n\t\t\"\\xe2\\x85\\xa8\" => \"\\xe2\\x85\\xb8\",\t\t\"\\xe2\\x85\\xa9\" => \"\\xe2\\x85\\xb9\",\t\t\"\\xe2\\x85\\xaa\" => \"\\xe2\\x85\\xba\",\t\t\"\\xe2\\x85\\xab\" => \"\\xe2\\x85\\xbb\",\n\t\t\"\\xe2\\x85\\xac\" => \"\\xe2\\x85\\xbc\",\t\t\"\\xe2\\x85\\xad\" => \"\\xe2\\x85\\xbd\",\t\t\"\\xe2\\x85\\xae\" => \"\\xe2\\x85\\xbe\",\t\t\"\\xe2\\x85\\xaf\" => \"\\xe2\\x85\\xbf\",\n\t\t\"\\xe2\\x86\\x83\" => \"\\xe2\\x86\\x84\",\t\t\"\\xe2\\x92\\xb6\" => \"\\xe2\\x93\\x90\",\t\t\"\\xe2\\x92\\xb7\" => \"\\xe2\\x93\\x91\",\t\t\"\\xe2\\x92\\xb8\" => \"\\xe2\\x93\\x92\",\n\t\t\"\\xe2\\x92\\xb9\" => \"\\xe2\\x93\\x93\",\t\t\"\\xe2\\x92\\xba\" => \"\\xe2\\x93\\x94\",\t\t\"\\xe2\\x92\\xbb\" => \"\\xe2\\x93\\x95\",\t\t\"\\xe2\\x92\\xbc\" => \"\\xe2\\x93\\x96\",\n\t\t\"\\xe2\\x92\\xbd\" => \"\\xe2\\x93\\x97\",\t\t\"\\xe2\\x92\\xbe\" => \"\\xe2\\x93\\x98\",\t\t\"\\xe2\\x92\\xbf\" => \"\\xe2\\x93\\x99\",\t\t\"\\xe2\\x93\\x80\" => \"\\xe2\\x93\\x9a\",\n\t\t\"\\xe2\\x93\\x81\" => \"\\xe2\\x93\\x9b\",\t\t\"\\xe2\\x93\\x82\" => \"\\xe2\\x93\\x9c\",\t\t\"\\xe2\\x93\\x83\" => \"\\xe2\\x93\\x9d\",\t\t\"\\xe2\\x93\\x84\" => \"\\xe2\\x93\\x9e\",\n\t\t\"\\xe2\\x93\\x85\" => \"\\xe2\\x93\\x9f\",\t\t\"\\xe2\\x93\\x86\" => \"\\xe2\\x93\\xa0\",\t\t\"\\xe2\\x93\\x87\" => \"\\xe2\\x93\\xa1\",\t\t\"\\xe2\\x93\\x88\" => \"\\xe2\\x93\\xa2\",\n\t\t\"\\xe2\\x93\\x89\" => \"\\xe2\\x93\\xa3\",\t\t\"\\xe2\\x93\\x8a\" => \"\\xe2\\x93\\xa4\",\t\t\"\\xe2\\x93\\x8b\" => \"\\xe2\\x93\\xa5\",\t\t\"\\xe2\\x93\\x8c\" => \"\\xe2\\x93\\xa6\",\n\t\t\"\\xe2\\x93\\x8d\" => \"\\xe2\\x93\\xa7\",\t\t\"\\xe2\\x93\\x8e\" => \"\\xe2\\x93\\xa8\",\t\t\"\\xe2\\x93\\x8f\" => \"\\xe2\\x93\\xa9\",\t\t\"\\xe2\\xb0\\x80\" => \"\\xe2\\xb0\\xb0\",\n\t\t\"\\xe2\\xb0\\x81\" => \"\\xe2\\xb0\\xb1\",\t\t\"\\xe2\\xb0\\x82\" => \"\\xe2\\xb0\\xb2\",\t\t\"\\xe2\\xb0\\x83\" => \"\\xe2\\xb0\\xb3\",\t\t\"\\xe2\\xb0\\x84\" => \"\\xe2\\xb0\\xb4\",\n\t\t\"\\xe2\\xb0\\x85\" => \"\\xe2\\xb0\\xb5\",\t\t\"\\xe2\\xb0\\x86\" => \"\\xe2\\xb0\\xb6\",\t\t\"\\xe2\\xb0\\x87\" => \"\\xe2\\xb0\\xb7\",\t\t\"\\xe2\\xb0\\x88\" => \"\\xe2\\xb0\\xb8\",\n\t\t\"\\xe2\\xb0\\x89\" => \"\\xe2\\xb0\\xb9\",\t\t\"\\xe2\\xb0\\x8a\" => \"\\xe2\\xb0\\xba\",\t\t\"\\xe2\\xb0\\x8b\" => \"\\xe2\\xb0\\xbb\",\t\t\"\\xe2\\xb0\\x8c\" => \"\\xe2\\xb0\\xbc\",\n\t\t\"\\xe2\\xb0\\x8d\" => \"\\xe2\\xb0\\xbd\",\t\t\"\\xe2\\xb0\\x8e\" => \"\\xe2\\xb0\\xbe\",\t\t\"\\xe2\\xb0\\x8f\" => \"\\xe2\\xb0\\xbf\",\t\t\"\\xe2\\xb0\\x90\" => \"\\xe2\\xb1\\x80\",\n\t\t\"\\xe2\\xb0\\x91\" => \"\\xe2\\xb1\\x81\",\t\t\"\\xe2\\xb0\\x92\" => \"\\xe2\\xb1\\x82\",\t\t\"\\xe2\\xb0\\x93\" => \"\\xe2\\xb1\\x83\",\t\t\"\\xe2\\xb0\\x94\" => \"\\xe2\\xb1\\x84\",\n\t\t\"\\xe2\\xb0\\x95\" => \"\\xe2\\xb1\\x85\",\t\t\"\\xe2\\xb0\\x96\" => \"\\xe2\\xb1\\x86\",\t\t\"\\xe2\\xb0\\x97\" => \"\\xe2\\xb1\\x87\",\t\t\"\\xe2\\xb0\\x98\" => \"\\xe2\\xb1\\x88\",\n\t\t\"\\xe2\\xb0\\x99\" => \"\\xe2\\xb1\\x89\",\t\t\"\\xe2\\xb0\\x9a\" => \"\\xe2\\xb1\\x8a\",\t\t\"\\xe2\\xb0\\x9b\" => \"\\xe2\\xb1\\x8b\",\t\t\"\\xe2\\xb0\\x9c\" => \"\\xe2\\xb1\\x8c\",\n\t\t\"\\xe2\\xb0\\x9d\" => \"\\xe2\\xb1\\x8d\",\t\t\"\\xe2\\xb0\\x9e\" => \"\\xe2\\xb1\\x8e\",\t\t\"\\xe2\\xb0\\x9f\" => \"\\xe2\\xb1\\x8f\",\t\t\"\\xe2\\xb0\\xa0\" => \"\\xe2\\xb1\\x90\",\n\t\t\"\\xe2\\xb0\\xa1\" => \"\\xe2\\xb1\\x91\",\t\t\"\\xe2\\xb0\\xa2\" => \"\\xe2\\xb1\\x92\",\t\t\"\\xe2\\xb0\\xa3\" => \"\\xe2\\xb1\\x93\",\t\t\"\\xe2\\xb0\\xa4\" => \"\\xe2\\xb1\\x94\",\n\t\t\"\\xe2\\xb0\\xa5\" => \"\\xe2\\xb1\\x95\",\t\t\"\\xe2\\xb0\\xa6\" => \"\\xe2\\xb1\\x96\",\t\t\"\\xe2\\xb0\\xa7\" => \"\\xe2\\xb1\\x97\",\t\t\"\\xe2\\xb0\\xa8\" => \"\\xe2\\xb1\\x98\",\n\t\t\"\\xe2\\xb0\\xa9\" => \"\\xe2\\xb1\\x99\",\t\t\"\\xe2\\xb0\\xaa\" => \"\\xe2\\xb1\\x9a\",\t\t\"\\xe2\\xb0\\xab\" => \"\\xe2\\xb1\\x9b\",\t\t\"\\xe2\\xb0\\xac\" => \"\\xe2\\xb1\\x9c\",\n\t\t\"\\xe2\\xb0\\xad\" => \"\\xe2\\xb1\\x9d\",\t\t\"\\xe2\\xb0\\xae\" => \"\\xe2\\xb1\\x9e\",\t\t\"\\xe2\\xb1\\xa0\" => \"\\xe2\\xb1\\xa1\",\t\t\"\\xe2\\xb1\\xa2\" => \"\\xc9\\xab\",\n\t\t\"\\xe2\\xb1\\xa3\" => \"\\xe1\\xb5\\xbd\",\t\t\"\\xe2\\xb1\\xa4\" => \"\\xc9\\xbd\",\t\t\"\\xe2\\xb1\\xa7\" => \"\\xe2\\xb1\\xa8\",\t\t\"\\xe2\\xb1\\xa9\" => \"\\xe2\\xb1\\xaa\",\n\t\t\"\\xe2\\xb1\\xab\" => \"\\xe2\\xb1\\xac\",\t\t\"\\xe2\\xb1\\xb5\" => \"\\xe2\\xb1\\xb6\",\t\t\"\\xe2\\xb2\\x80\" => \"\\xe2\\xb2\\x81\",\t\t\"\\xe2\\xb2\\x82\" => \"\\xe2\\xb2\\x83\",\n\t\t\"\\xe2\\xb2\\x84\" => \"\\xe2\\xb2\\x85\",\t\t\"\\xe2\\xb2\\x86\" => \"\\xe2\\xb2\\x87\",\t\t\"\\xe2\\xb2\\x88\" => \"\\xe2\\xb2\\x89\",\t\t\"\\xe2\\xb2\\x8a\" => \"\\xe2\\xb2\\x8b\",\n\t\t\"\\xe2\\xb2\\x8c\" => \"\\xe2\\xb2\\x8d\",\t\t\"\\xe2\\xb2\\x8e\" => \"\\xe2\\xb2\\x8f\",\t\t\"\\xe2\\xb2\\x90\" => \"\\xe2\\xb2\\x91\",\t\t\"\\xe2\\xb2\\x92\" => \"\\xe2\\xb2\\x93\",\n\t\t\"\\xe2\\xb2\\x94\" => \"\\xe2\\xb2\\x95\",\t\t\"\\xe2\\xb2\\x96\" => \"\\xe2\\xb2\\x97\",\t\t\"\\xe2\\xb2\\x98\" => \"\\xe2\\xb2\\x99\",\t\t\"\\xe2\\xb2\\x9a\" => \"\\xe2\\xb2\\x9b\",\n\t\t\"\\xe2\\xb2\\x9c\" => \"\\xe2\\xb2\\x9d\",\t\t\"\\xe2\\xb2\\x9e\" => \"\\xe2\\xb2\\x9f\",\t\t\"\\xe2\\xb2\\xa0\" => \"\\xe2\\xb2\\xa1\",\t\t\"\\xe2\\xb2\\xa2\" => \"\\xe2\\xb2\\xa3\",\n\t\t\"\\xe2\\xb2\\xa4\" => \"\\xe2\\xb2\\xa5\",\t\t\"\\xe2\\xb2\\xa6\" => \"\\xe2\\xb2\\xa7\",\t\t\"\\xe2\\xb2\\xa8\" => \"\\xe2\\xb2\\xa9\",\t\t\"\\xe2\\xb2\\xaa\" => \"\\xe2\\xb2\\xab\",\n\t\t\"\\xe2\\xb2\\xac\" => \"\\xe2\\xb2\\xad\",\t\t\"\\xe2\\xb2\\xae\" => \"\\xe2\\xb2\\xaf\",\t\t\"\\xe2\\xb2\\xb0\" => \"\\xe2\\xb2\\xb1\",\t\t\"\\xe2\\xb2\\xb2\" => \"\\xe2\\xb2\\xb3\",\n\t\t\"\\xe2\\xb2\\xb4\" => \"\\xe2\\xb2\\xb5\",\t\t\"\\xe2\\xb2\\xb6\" => \"\\xe2\\xb2\\xb7\",\t\t\"\\xe2\\xb2\\xb8\" => \"\\xe2\\xb2\\xb9\",\t\t\"\\xe2\\xb2\\xba\" => \"\\xe2\\xb2\\xbb\",\n\t\t\"\\xe2\\xb2\\xbc\" => \"\\xe2\\xb2\\xbd\",\t\t\"\\xe2\\xb2\\xbe\" => \"\\xe2\\xb2\\xbf\",\t\t\"\\xe2\\xb3\\x80\" => \"\\xe2\\xb3\\x81\",\t\t\"\\xe2\\xb3\\x82\" => \"\\xe2\\xb3\\x83\",\n\t\t\"\\xe2\\xb3\\x84\" => \"\\xe2\\xb3\\x85\",\t\t\"\\xe2\\xb3\\x86\" => \"\\xe2\\xb3\\x87\",\t\t\"\\xe2\\xb3\\x88\" => \"\\xe2\\xb3\\x89\",\t\t\"\\xe2\\xb3\\x8a\" => \"\\xe2\\xb3\\x8b\",\n\t\t\"\\xe2\\xb3\\x8c\" => \"\\xe2\\xb3\\x8d\",\t\t\"\\xe2\\xb3\\x8e\" => \"\\xe2\\xb3\\x8f\",\t\t\"\\xe2\\xb3\\x90\" => \"\\xe2\\xb3\\x91\",\t\t\"\\xe2\\xb3\\x92\" => \"\\xe2\\xb3\\x93\",\n\t\t\"\\xe2\\xb3\\x94\" => \"\\xe2\\xb3\\x95\",\t\t\"\\xe2\\xb3\\x96\" => \"\\xe2\\xb3\\x97\",\t\t\"\\xe2\\xb3\\x98\" => \"\\xe2\\xb3\\x99\",\t\t\"\\xe2\\xb3\\x9a\" => \"\\xe2\\xb3\\x9b\",\n\t\t\"\\xe2\\xb3\\x9c\" => \"\\xe2\\xb3\\x9d\",\t\t\"\\xe2\\xb3\\x9e\" => \"\\xe2\\xb3\\x9f\",\t\t\"\\xe2\\xb3\\xa0\" => \"\\xe2\\xb3\\xa1\",\t\t\"\\xe2\\xb3\\xa2\" => \"\\xe2\\xb3\\xa3\",\n\t\t\"\\xef\\xac\\x80\" => \"ff\",\t\"\\xef\\xac\\x81\" => \"fi\",\t\"\\xef\\xac\\x82\" => \"fl\",\t\"\\xef\\xac\\x83\" => \"ffi\",\n\t\t\"\\xef\\xac\\x84\" => \"ffl\",\t\"\\xef\\xac\\x85\" => \"st\",\t\"\\xef\\xac\\x86\" => \"st\",\t\"\\xef\\xac\\x93\" => \"\\xd5\\xb4\\xd5\\xb6\",\n\t\t\"\\xef\\xac\\x94\" => \"\\xd5\\xb4\\xd5\\xa5\",\t\"\\xef\\xac\\x95\" => \"\\xd5\\xb4\\xd5\\xab\",\t\"\\xef\\xac\\x96\" => \"\\xd5\\xbe\\xd5\\xb6\",\t\"\\xef\\xac\\x97\" => \"\\xd5\\xb4\\xd5\\xad\",\n\t\t\"\\xef\\xbc\\xa1\" => \"\\xef\\xbd\\x81\",\t\t\"\\xef\\xbc\\xa2\" => \"\\xef\\xbd\\x82\",\t\t\"\\xef\\xbc\\xa3\" => \"\\xef\\xbd\\x83\",\t\t\"\\xef\\xbc\\xa4\" => \"\\xef\\xbd\\x84\",\n\t\t\"\\xef\\xbc\\xa5\" => \"\\xef\\xbd\\x85\",\t\t\"\\xef\\xbc\\xa6\" => \"\\xef\\xbd\\x86\",\t\t\"\\xef\\xbc\\xa7\" => \"\\xef\\xbd\\x87\",\t\t\"\\xef\\xbc\\xa8\" => \"\\xef\\xbd\\x88\",\n\t\t\"\\xef\\xbc\\xa9\" => \"\\xef\\xbd\\x89\",\t\t\"\\xef\\xbc\\xaa\" => \"\\xef\\xbd\\x8a\",\t\t\"\\xef\\xbc\\xab\" => \"\\xef\\xbd\\x8b\",\t\t\"\\xef\\xbc\\xac\" => \"\\xef\\xbd\\x8c\",\n\t\t\"\\xef\\xbc\\xad\" => \"\\xef\\xbd\\x8d\",\t\"\\xef\\xbc\\xae\" => \"\\xef\\xbd\\x8e\",\t\t\"\\xef\\xbc\\xaf\" => \"\\xef\\xbd\\x8f\",\t\t\"\\xef\\xbc\\xb0\" => \"\\xef\\xbd\\x90\",\n\t\t\"\\xef\\xbc\\xb1\" => \"\\xef\\xbd\\x91\",\t\t\"\\xef\\xbc\\xb2\" => \"\\xef\\xbd\\x92\",\t\t\"\\xef\\xbc\\xb3\" => \"\\xef\\xbd\\x93\",\t\t\"\\xef\\xbc\\xb4\" => \"\\xef\\xbd\\x94\",\n\t\t\"\\xef\\xbc\\xb5\" => \"\\xef\\xbd\\x95\",\t\t\"\\xef\\xbc\\xb6\" => \"\\xef\\xbd\\x96\",\t\t\"\\xef\\xbc\\xb7\" => \"\\xef\\xbd\\x97\",\t\"\\xef\\xbc\\xb8\" => \"\\xef\\xbd\\x98\",\n\t\t\"\\xef\\xbc\\xb9\" => \"\\xef\\xbd\\x99\",\t\t\"\\xef\\xbc\\xba\" => \"\\xef\\xbd\\x9a\",\t\t\"\\xf0\\x90\\x90\\x80\" => \"\\xf0\\x90\\x90\\xa8\",\t\"\\xf0\\x90\\x90\\x81\" => \"\\xf0\\x90\\x90\\xa9\",\n\t\t\"\\xf0\\x90\\x90\\x82\" => \"\\xf0\\x90\\x90\\xaa\",\t\"\\xf0\\x90\\x90\\x83\" => \"\\xf0\\x90\\x90\\xab\",\t\"\\xf0\\x90\\x90\\x84\" => \"\\xf0\\x90\\x90\\xac\",\t\"\\xf0\\x90\\x90\\x85\" => \"\\xf0\\x90\\x90\\xad\",\n\t\t\"\\xf0\\x90\\x90\\x86\" => \"\\xf0\\x90\\x90\\xae\",\t\"\\xf0\\x90\\x90\\x87\" => \"\\xf0\\x90\\x90\\xaf\",\t\"\\xf0\\x90\\x90\\x88\" => \"\\xf0\\x90\\x90\\xb0\",\t\"\\xf0\\x90\\x90\\x89\" => \"\\xf0\\x90\\x90\\xb1\",\n\t\t\"\\xf0\\x90\\x90\\x8a\" => \"\\xf0\\x90\\x90\\xb2\",\t\"\\xf0\\x90\\x90\\x8b\" => \"\\xf0\\x90\\x90\\xb3\",\t\"\\xf0\\x90\\x90\\x8c\" => \"\\xf0\\x90\\x90\\xb4\",\t\"\\xf0\\x90\\x90\\x8d\" => \"\\xf0\\x90\\x90\\xb5\",\n\t\t\"\\xf0\\x90\\x90\\x8e\" => \"\\xf0\\x90\\x90\\xb6\",\t\"\\xf0\\x90\\x90\\x8f\" => \"\\xf0\\x90\\x90\\xb7\",\t\"\\xf0\\x90\\x90\\x90\" => \"\\xf0\\x90\\x90\\xb8\",\t\"\\xf0\\x90\\x90\\x91\" => \"\\xf0\\x90\\x90\\xb9\",\n\t\t\"\\xf0\\x90\\x90\\x92\" => \"\\xf0\\x90\\x90\\xba\",\t\"\\xf0\\x90\\x90\\x93\" => \"\\xf0\\x90\\x90\\xbb\",\t\"\\xf0\\x90\\x90\\x94\" => \"\\xf0\\x90\\x90\\xbc\",\t\"\\xf0\\x90\\x90\\x95\" => \"\\xf0\\x90\\x90\\xbd\",\n\t\t\"\\xf0\\x90\\x90\\x96\" => \"\\xf0\\x90\\x90\\xbe\",\t\"\\xf0\\x90\\x90\\x97\" => \"\\xf0\\x90\\x90\\xbf\",\t\"\\xf0\\x90\\x90\\x98\" => \"\\xf0\\x90\\x91\\x80\",\t\"\\xf0\\x90\\x90\\x99\" => \"\\xf0\\x90\\x91\\x81\",\n\t\t\"\\xf0\\x90\\x90\\x9a\" => \"\\xf0\\x90\\x91\\x82\",\t\"\\xf0\\x90\\x90\\x9b\" => \"\\xf0\\x90\\x91\\x83\",\t\"\\xf0\\x90\\x90\\x9c\" => \"\\xf0\\x90\\x91\\x84\",\t\"\\xf0\\x90\\x90\\x9d\" => \"\\xf0\\x90\\x91\\x85\",\n\t\t\"\\xf0\\x90\\x90\\x9e\" => \"\\xf0\\x90\\x91\\x86\",\t\"\\xf0\\x90\\x90\\x9f\" => \"\\xf0\\x90\\x91\\x87\",\t\"\\xf0\\x90\\x90\\xa0\" => \"\\xf0\\x90\\x91\\x88\",\t\"\\xf0\\x90\\x90\\xa1\" => \"\\xf0\\x90\\x91\\x89\",\n\t\t\"\\xf0\\x90\\x90\\xa2\" => \"\\xf0\\x90\\x91\\x8a\",\t\"\\xf0\\x90\\x90\\xa3\" => \"\\xf0\\x90\\x91\\x8b\",\t\"\\xf0\\x90\\x90\\xa4\" => \"\\xf0\\x90\\x91\\x8c\",\t\"\\xf0\\x90\\x90\\xa5\" => \"\\xf0\\x90\\x91\\x8d\",\n\t\t\"\\xf0\\x90\\x91\\x8e\" => \"\\xf0\\x90\\x90\\xa6\",\t\"\\xf0\\x90\\x91\\x8f\" => \"\\xf0\\x90\\x90\\xa7\",\n\t);\n\n\treturn strtr($string, $case_folding);\n}\n\n// Convert the given UTF-8 string to uppercase.\n/**\n * Convert the given UTF-8 string to uppercase.\n * equivalent to mb_strtoupper($string, 'UTF-8')\n *\n * @param string $string The string\n * @return string The uppercase version of $string\n */\nfunction utf8_strtoupper($string)\n{\n\tstatic $case_folding = array(\n\t\t'a' => 'A',\t\t'b' => 'B',\t\t'c' => 'C',\t\t'd' => 'D',\n\t\t'e' => 'E',\t\t'f' => 'F',\t\t'g' => 'G',\t\t'h' => 'H',\n\t\t'i' => 'I',\t\t'j' => 'J',\t\t'k' => 'K',\t\t'l' => 'L',\n\t\t'm' => 'M',\t\t'n' => 'N',\t\t'o' => 'O',\t\t'p' => 'P',\n\t\t'q' => 'Q',\t\t'r' => 'R',\t\t's' => 'S',\t\t't' => 'T',\n\t\t'u' => 'U',\t\t'v' => 'V',\t\t'w' => 'W',\t\t'x' => 'X',\n\t\t'y' => 'Y',\t\t'z' => 'Z',\t\t\"\\xce\\xbc\" => \"\\xc2\\xb5\",\t\t\"\\xc3\\xa0\" => \"\\xc3\\x80\",\n\t\t\"\\xc3\\xa1\" => \"\\xc3\\x81\",\t\t\"\\xc3\\xa2\" => \"\\xc3\\x82\",\t\t\"\\xc3\\xa3\" => \"\\xc3\\x83\",\t\t\"\\xc3\\xa4\" => \"\\xc3\\x84\",\n\t\t\"\\xc3\\xa5\" => \"\\xc3\\x85\",\t\t\"\\xc3\\xa6\" => \"\\xc3\\x86\",\t\t\"\\xc3\\xa7\" => \"\\xc3\\x87\",\t\t\"\\xc3\\xa8\" => \"\\xc3\\x88\",\n\t\t\"\\xc3\\xa9\" => \"\\xc3\\x89\",\t\t\"\\xc3\\xaa\" => \"\\xc3\\x8a\",\t\t\"\\xc3\\xab\" => \"\\xc3\\x8b\",\t\t\"\\xc3\\xac\" => \"\\xc3\\x8c\",\n\t\t\"\\xc3\\xad\" => \"\\xc3\\x8d\",\t\t\"\\xc3\\xae\" => \"\\xc3\\x8e\",\t\t\"\\xc3\\xaf\" => \"\\xc3\\x8f\",\t\t\"\\xc3\\xb0\" => \"\\xc3\\x90\",\n\t\t\"\\xc3\\xb1\" => \"\\xc3\\x91\",\t\t\"\\xc3\\xb2\" => \"\\xc3\\x92\",\t\t\"\\xc3\\xb3\" => \"\\xc3\\x93\",\t\t\"\\xc3\\xb4\" => \"\\xc3\\x94\",\n\t\t\"\\xc3\\xb5\" => \"\\xc3\\x95\",\t\t\"\\xc3\\xb6\" => \"\\xc3\\x96\",\t\t\"\\xc3\\xb8\" => \"\\xc3\\x98\",\t\t\"\\xc3\\xb9\" => \"\\xc3\\x99\",\n\t\t\"\\xc3\\xba\" => \"\\xc3\\x9a\",\t\t\"\\xc3\\xbb\" => \"\\xc3\\x9b\",\t\t\"\\xc3\\xbc\" => \"\\xc3\\x9c\",\t\t\"\\xc3\\xbd\" => \"\\xc3\\x9d\",\n\t\t\"\\xc3\\xbe\" => \"\\xc3\\x9e\",\t\t\"ss\" => \"\\xc3\\x9f\",\t\"\\xc4\\x81\" => \"\\xc4\\x80\",\t\t\"\\xc4\\x83\" => \"\\xc4\\x82\",\n\t\t\"\\xc4\\x85\" => \"\\xc4\\x84\",\t\t\"\\xc4\\x87\" => \"\\xc4\\x86\",\t\t\"\\xc4\\x89\" => \"\\xc4\\x88\",\t\t\"\\xc4\\x8b\" => \"\\xc4\\x8a\",\n\t\t\"\\xc4\\x8d\" => \"\\xc4\\x8c\",\t\t\"\\xc4\\x8f\" => \"\\xc4\\x8e\",\t\t\"\\xc4\\x91\" => \"\\xc4\\x90\",\t\t\"\\xc4\\x93\" => \"\\xc4\\x92\",\n\t\t\"\\xc4\\x95\" => \"\\xc4\\x94\",\t\t\"\\xc4\\x97\" => \"\\xc4\\x96\",\t\t\"\\xc4\\x99\" => \"\\xc4\\x98\",\t\t\"\\xc4\\x9b\" => \"\\xc4\\x9a\",\n\t\t\"\\xc4\\x9d\" => \"\\xc4\\x9c\",\t\t\"\\xc4\\x9f\" => \"\\xc4\\x9e\",\t\t\"\\xc4\\xa1\" => \"\\xc4\\xa0\",\t\t\"\\xc4\\xa3\" => \"\\xc4\\xa2\",\n\t\t\"\\xc4\\xa5\" => \"\\xc4\\xa4\",\t\t\"\\xc4\\xa7\" => \"\\xc4\\xa6\",\t\t\"\\xc4\\xa9\" => \"\\xc4\\xa8\",\t\t\"\\xc4\\xab\" => \"\\xc4\\xaa\",\n\t\t\"\\xc4\\xad\" => \"\\xc4\\xac\",\t\t\"\\xc4\\xaf\" => \"\\xc4\\xae\",\t\t\"i\\xcc\\x87\" => \"\\xc4\\xb0\",\t\t\"\\xc4\\xb3\" => \"\\xc4\\xb2\",\n\t\t\"\\xc4\\xb5\" => \"\\xc4\\xb4\",\t\t\"\\xc4\\xb7\" => \"\\xc4\\xb6\",\t\t\"\\xc4\\xba\" => \"\\xc4\\xb9\",\t\t\"\\xc4\\xbc\" => \"\\xc4\\xbb\",\n\t\t\"\\xc4\\xbe\" => \"\\xc4\\xbd\",\t\t\"\\xc5\\x80\" => \"\\xc4\\xbf\",\t\t\"\\xc5\\x82\" => \"\\xc5\\x81\",\t\t\"\\xc5\\x84\" => \"\\xc5\\x83\",\n\t\t\"\\xc5\\x86\" => \"\\xc5\\x85\",\t\t\"\\xc5\\x88\" => \"\\xc5\\x87\",\t\t\"\\xca\\xbcn\" => \"\\xc5\\x89\",\t\"\\xc5\\x8b\" => \"\\xc5\\x8a\",\n\t\t\"\\xc5\\x8d\" => \"\\xc5\\x8c\",\t\t\"\\xc5\\x8f\" => \"\\xc5\\x8e\",\t\t\"\\xc5\\x91\" => \"\\xc5\\x90\",\t\t\"\\xc5\\x93\" => \"\\xc5\\x92\",\n\t\t\"\\xc5\\x95\" => \"\\xc5\\x94\",\t\t\"\\xc5\\x97\" => \"\\xc5\\x96\",\t\t\"\\xc5\\x99\" => \"\\xc5\\x98\",\t\t\"\\xc5\\x9b\" => \"\\xc5\\x9a\",\n\t\t\"\\xc5\\x9d\" => \"\\xc5\\x9c\",\t\t\"\\xc5\\x9f\" => \"\\xc5\\x9e\",\t\t\"\\xc5\\xa1\" => \"\\xc5\\xa0\",\t\t\"\\xc5\\xa3\" => \"\\xc5\\xa2\",\n\t\t\"\\xc5\\xa5\" => \"\\xc5\\xa4\",\t\t\"\\xc5\\xa7\" => \"\\xc5\\xa6\",\t\t\"\\xc5\\xa9\" => \"\\xc5\\xa8\",\t\t\"\\xc5\\xab\" => \"\\xc5\\xaa\",\n\t\t\"\\xc5\\xad\" => \"\\xc5\\xac\",\t\t\"\\xc5\\xaf\" => \"\\xc5\\xae\",\t\t\"\\xc5\\xb1\" => \"\\xc5\\xb0\",\t\t\"\\xc5\\xb3\" => \"\\xc5\\xb2\",\n\t\t\"\\xc5\\xb5\" => \"\\xc5\\xb4\",\t\t\"\\xc5\\xb7\" => \"\\xc5\\xb6\",\t\t\"\\xc3\\xbf\" => \"\\xc5\\xb8\",\t\t\"\\xc5\\xba\" => \"\\xc5\\xb9\",\n\t\t\"\\xc5\\xbc\" => \"\\xc5\\xbb\",\t\t\"\\xc5\\xbe\" => \"\\xc5\\xbd\",\t\t\"\\xc9\\x93\" => \"\\xc6\\x81\",\n\t\t\"\\xc6\\x83\" => \"\\xc6\\x82\",\t\t\"\\xc6\\x85\" => \"\\xc6\\x84\",\t\t\"\\xc9\\x94\" => \"\\xc6\\x86\",\t\t\"\\xc6\\x88\" => \"\\xc6\\x87\",\n\t\t\"\\xc9\\x96\" => \"\\xc6\\x89\",\t\t\"\\xc9\\x97\" => \"\\xc6\\x8a\",\t\t\"\\xc6\\x8c\" => \"\\xc6\\x8b\",\t\t\"\\xc7\\x9d\" => \"\\xc6\\x8e\",\n\t\t\"\\xc9\\x99\" => \"\\xc6\\x8f\",\t\t\"\\xc9\\x9b\" => \"\\xc6\\x90\",\t\t\"\\xc6\\x92\" => \"\\xc6\\x91\",\t\t\"\\xc9\\xa0\" => \"\\xc6\\x93\",\n\t\t\"\\xc9\\xa3\" => \"\\xc6\\x94\",\t\t\"\\xc9\\xa9\" => \"\\xc6\\x96\",\t\t\"\\xc9\\xa8\" => \"\\xc6\\x97\",\t\t\"\\xc6\\x99\" => \"\\xc6\\x98\",\n\t\t\"\\xc9\\xaf\" => \"\\xc6\\x9c\",\t\t\"\\xc9\\xb2\" => \"\\xc6\\x9d\",\t\t\"\\xc9\\xb5\" => \"\\xc6\\x9f\",\t\t\"\\xc6\\xa1\" => \"\\xc6\\xa0\",\n\t\t\"\\xc6\\xa3\" => \"\\xc6\\xa2\",\t\t\"\\xc6\\xa5\" => \"\\xc6\\xa4\",\t\t\"\\xca\\x80\" => \"\\xc6\\xa6\",\t\t\"\\xc6\\xa8\" => \"\\xc6\\xa7\",\n\t\t\"\\xca\\x83\" => \"\\xc6\\xa9\",\t\t\"\\xc6\\xad\" => \"\\xc6\\xac\",\t\t\"\\xca\\x88\" => \"\\xc6\\xae\",\t\t\"\\xc6\\xb0\" => \"\\xc6\\xaf\",\n\t\t\"\\xca\\x8a\" => \"\\xc6\\xb1\",\t\t\"\\xca\\x8b\" => \"\\xc6\\xb2\",\t\t\"\\xc6\\xb4\" => \"\\xc6\\xb3\",\t\t\"\\xc6\\xb6\" => \"\\xc6\\xb5\",\n\t\t\"\\xca\\x92\" => \"\\xc6\\xb7\",\t\t\"\\xc6\\xb9\" => \"\\xc6\\xb8\",\t\t\"\\xc6\\xbd\" => \"\\xc6\\xbc\",\t\t\"\\xc7\\x86\" => \"\\xc7\\x84\",\n\t\t\"\\xc7\\x86\" => \"\\xc7\\x85\",\t\t\"\\xc7\\x89\" => \"\\xc7\\x87\",\t\t\"\\xc7\\x89\" => \"\\xc7\\x88\",\t\t\"\\xc7\\x8c\" => \"\\xc7\\x8a\",\n\t\t\"\\xc7\\x8c\" => \"\\xc7\\x8b\",\t\t\"\\xc7\\x8e\" => \"\\xc7\\x8d\",\t\t\"\\xc7\\x90\" => \"\\xc7\\x8f\",\t\t\"\\xc7\\x92\" => \"\\xc7\\x91\",\n\t\t\"\\xc7\\x94\" => \"\\xc7\\x93\",\t\t\"\\xc7\\x96\" => \"\\xc7\\x95\",\t\t\"\\xc7\\x98\" => \"\\xc7\\x97\",\t\t\"\\xc7\\x9a\" => \"\\xc7\\x99\",\n\t\t\"\\xc7\\x9c\" => \"\\xc7\\x9b\",\t\t\"\\xc7\\x9f\" => \"\\xc7\\x9e\",\t\t\"\\xc7\\xa1\" => \"\\xc7\\xa0\",\t\t\"\\xc7\\xa3\" => \"\\xc7\\xa2\",\n\t\t\"\\xc7\\xa5\" => \"\\xc7\\xa4\",\t\t\"\\xc7\\xa7\" => \"\\xc7\\xa6\",\t\t\"\\xc7\\xa9\" => \"\\xc7\\xa8\",\t\t\"\\xc7\\xab\" => \"\\xc7\\xaa\",\n\t\t\"\\xc7\\xad\" => \"\\xc7\\xac\",\t\t\"\\xc7\\xaf\" => \"\\xc7\\xae\",\t\t\"j\\xcc\\x8c\" => \"\\xc7\\xb0\",\t\t\"\\xc7\\xb3\" => \"\\xc7\\xb1\",\n\t\t\"\\xc7\\xb3\" => \"\\xc7\\xb2\",\t\t\"\\xc7\\xb5\" => \"\\xc7\\xb4\",\t\t\"\\xc6\\x95\" => \"\\xc7\\xb6\",\t\t\"\\xc6\\xbf\" => \"\\xc7\\xb7\",\n\t\t\"\\xc7\\xb9\" => \"\\xc7\\xb8\",\t\t\"\\xc7\\xbb\" => \"\\xc7\\xba\",\t\t\"\\xc7\\xbd\" => \"\\xc7\\xbc\",\t\t\"\\xc7\\xbf\" => \"\\xc7\\xbe\",\n\t\t\"\\xc8\\x81\" => \"\\xc8\\x80\",\t\t\"\\xc8\\x83\" => \"\\xc8\\x82\",\t\t\"\\xc8\\x85\" => \"\\xc8\\x84\",\t\t\"\\xc8\\x87\" => \"\\xc8\\x86\",\n\t\t\"\\xc8\\x89\" => \"\\xc8\\x88\",\t\t\"\\xc8\\x8b\" => \"\\xc8\\x8a\",\t\t\"\\xc8\\x8d\" => \"\\xc8\\x8c\",\t\t\"\\xc8\\x8f\" => \"\\xc8\\x8e\",\n\t\t\"\\xc8\\x91\" => \"\\xc8\\x90\",\t\t\"\\xc8\\x93\" => \"\\xc8\\x92\",\t\t\"\\xc8\\x95\" => \"\\xc8\\x94\",\t\t\"\\xc8\\x97\" => \"\\xc8\\x96\",\n\t\t\"\\xc8\\x99\" => \"\\xc8\\x98\",\t\t\"\\xc8\\x9b\" => \"\\xc8\\x9a\",\t\t\"\\xc8\\x9d\" => \"\\xc8\\x9c\",\t\t\"\\xc8\\x9f\" => \"\\xc8\\x9e\",\n\t\t\"\\xc6\\x9e\" => \"\\xc8\\xa0\",\t\t\"\\xc8\\xa3\" => \"\\xc8\\xa2\",\t\t\"\\xc8\\xa5\" => \"\\xc8\\xa4\",\t\t\"\\xc8\\xa7\" => \"\\xc8\\xa6\",\n\t\t\"\\xc8\\xa9\" => \"\\xc8\\xa8\",\t\t\"\\xc8\\xab\" => \"\\xc8\\xaa\",\t\t\"\\xc8\\xad\" => \"\\xc8\\xac\",\t\t\"\\xc8\\xaf\" => \"\\xc8\\xae\",\n\t\t\"\\xc8\\xb1\" => \"\\xc8\\xb0\",\t\t\"\\xc8\\xb3\" => \"\\xc8\\xb2\",\t\t\"\\xe2\\xb1\\xa5\" => \"\\xc8\\xba\",\t\t\"\\xc8\\xbc\" => \"\\xc8\\xbb\",\n\t\t\"\\xc6\\x9a\" => \"\\xc8\\xbd\",\t\t\"\\xe2\\xb1\\xa6\" => \"\\xc8\\xbe\",\t\t\"\\xc9\\x82\" => \"\\xc9\\x81\",\t\t\"\\xc6\\x80\" => \"\\xc9\\x83\",\n\t\t\"\\xca\\x89\" => \"\\xc9\\x84\",\t\t\"\\xca\\x8c\" => \"\\xc9\\x85\",\t\t\"\\xc9\\x87\" => \"\\xc9\\x86\",\t\t\"\\xc9\\x89\" => \"\\xc9\\x88\",\n\t\t\"\\xc9\\x8b\" => \"\\xc9\\x8a\",\t\t\"\\xc9\\x8d\" => \"\\xc9\\x8c\",\t\t\"\\xc9\\x8f\" => \"\\xc9\\x8e\",\t\t\"\\xce\\xb9\" => \"\\xcd\\x85\",\n\t\t\"\\xce\\xac\" => \"\\xce\\x86\",\t\t\"\\xce\\xad\" => \"\\xce\\x88\",\t\t\"\\xce\\xae\" => \"\\xce\\x89\",\t\t\"\\xce\\xaf\" => \"\\xce\\x8a\",\n\t\t\"\\xcf\\x8c\" => \"\\xce\\x8c\",\t\t\"\\xcf\\x8d\" => \"\\xce\\x8e\",\t\t\"\\xcf\\x8e\" => \"\\xce\\x8f\",\t\t\"\\xce\\xb9\\xcc\\x88\\xcc\\x81\" => \"\\xce\\x90\",\n\t\t\"\\xce\\xb1\" => \"\\xce\\x91\",\t\t\"\\xce\\xb2\" => \"\\xce\\x92\",\t\t\"\\xce\\xb3\" => \"\\xce\\x93\",\t\t\"\\xce\\xb4\" => \"\\xce\\x94\",\n\t\t\"\\xce\\xb5\" => \"\\xce\\x95\",\t\t\"\\xce\\xb6\" => \"\\xce\\x96\",\t\t\"\\xce\\xb7\" => \"\\xce\\x97\",\t\t\"\\xce\\xb8\" => \"\\xce\\x98\",\n\t\t\"\\xce\\xb9\" => \"\\xce\\x99\",\t\t\"\\xce\\xba\" => \"\\xce\\x9a\",\t\t\"\\xce\\xbb\" => \"\\xce\\x9b\",\t\t\"\\xce\\xbc\" => \"\\xce\\x9c\",\n\t\t\"\\xce\\xbd\" => \"\\xce\\x9d\",\t\t\"\\xce\\xbe\" => \"\\xce\\x9e\",\t\t\"\\xce\\xbf\" => \"\\xce\\x9f\",\t\t\"\\xcf\\x80\" => \"\\xce\\xa0\",\n\t\t\"\\xcf\\x81\" => \"\\xce\\xa1\",\t\t\"\\xcf\\x83\" => \"\\xce\\xa3\",\t\t\"\\xcf\\x84\" => \"\\xce\\xa4\",\t\t\"\\xcf\\x85\" => \"\\xce\\xa5\",\n\t\t\"\\xcf\\x86\" => \"\\xce\\xa6\",\t\t\"\\xcf\\x87\" => \"\\xce\\xa7\",\t\t\"\\xcf\\x88\" => \"\\xce\\xa8\",\t\t\"\\xcf\\x89\" => \"\\xce\\xa9\",\n\t\t\"\\xcf\\x8a\" => \"\\xce\\xaa\",\t\t\"\\xcf\\x8b\" => \"\\xce\\xab\",\t\t\"\\xcf\\x85\\xcc\\x88\\xcc\\x81\" => \"\\xce\\xb0\",\t\"\\xcf\\x83\" => \"\\xcf\\x82\",\n\t\t\"\\xce\\xb2\" => \"\\xcf\\x90\",\t\t\"\\xce\\xb8\" => \"\\xcf\\x91\",\t\t\"\\xcf\\x86\" => \"\\xcf\\x95\",\t\t\"\\xcf\\x80\" => \"\\xcf\\x96\",\n\t\t\"\\xcf\\x99\" => \"\\xcf\\x98\",\t\t\"\\xcf\\x9b\" => \"\\xcf\\x9a\",\t\t\"\\xcf\\x9d\" => \"\\xcf\\x9c\",\t\t\"\\xcf\\x9f\" => \"\\xcf\\x9e\",\n\t\t\"\\xcf\\xa1\" => \"\\xcf\\xa0\",\t\t\"\\xcf\\xa3\" => \"\\xcf\\xa2\",\t\t\"\\xcf\\xa5\" => \"\\xcf\\xa4\",\t\t\"\\xcf\\xa7\" => \"\\xcf\\xa6\",\n\t\t\"\\xcf\\xa9\" => \"\\xcf\\xa8\",\t\t\"\\xcf\\xab\" => \"\\xcf\\xaa\",\t\t\"\\xcf\\xad\" => \"\\xcf\\xac\",\t\t\"\\xcf\\xaf\" => \"\\xcf\\xae\",\n\t\t\"\\xce\\xba\" => \"\\xcf\\xb0\",\t\t\"\\xcf\\x81\" => \"\\xcf\\xb1\",\t\t\"\\xce\\xb8\" => \"\\xcf\\xb4\",\t\t\"\\xce\\xb5\" => \"\\xcf\\xb5\",\n\t\t\"\\xcf\\xb8\" => \"\\xcf\\xb7\",\t\t\"\\xcf\\xb2\" => \"\\xcf\\xb9\",\t\t\"\\xcf\\xbb\" => \"\\xcf\\xba\",\t\t\"\\xcd\\xbb\" => \"\\xcf\\xbd\",\n\t\t\"\\xcd\\xbc\" => \"\\xcf\\xbe\",\t\t\"\\xcd\\xbd\" => \"\\xcf\\xbf\",\t\t\"\\xd1\\x90\" => \"\\xd0\\x80\",\t\t\"\\xd1\\x91\" => \"\\xd0\\x81\",\n\t\t\"\\xd1\\x92\" => \"\\xd0\\x82\",\t\t\"\\xd1\\x93\" => \"\\xd0\\x83\",\t\t\"\\xd1\\x94\" => \"\\xd0\\x84\",\t\t\"\\xd1\\x95\" => \"\\xd0\\x85\",\n\t\t\"\\xd1\\x96\" => \"\\xd0\\x86\",\t\t\"\\xd1\\x97\" => \"\\xd0\\x87\",\t\t\"\\xd1\\x98\" => \"\\xd0\\x88\",\t\t\"\\xd1\\x99\" => \"\\xd0\\x89\",\n\t\t\"\\xd1\\x9a\" => \"\\xd0\\x8a\",\t\t\"\\xd1\\x9b\" => \"\\xd0\\x8b\",\t\t\"\\xd1\\x9c\" => \"\\xd0\\x8c\",\t\t\"\\xd1\\x9d\" => \"\\xd0\\x8d\",\n\t\t\"\\xd1\\x9e\" => \"\\xd0\\x8e\",\t\t\"\\xd1\\x9f\" => \"\\xd0\\x8f\",\t\t\"\\xd0\\xb0\" => \"\\xd0\\x90\",\t\t\"\\xd0\\xb1\" => \"\\xd0\\x91\",\n\t\t\"\\xd0\\xb2\" => \"\\xd0\\x92\",\t\t\"\\xd0\\xb3\" => \"\\xd0\\x93\",\t\t\"\\xd0\\xb4\" => \"\\xd0\\x94\",\t\t\"\\xd0\\xb5\" => \"\\xd0\\x95\",\n\t\t\"\\xd0\\xb6\" => \"\\xd0\\x96\",\t\t\"\\xd0\\xb7\" => \"\\xd0\\x97\",\t\t\"\\xd0\\xb8\" => \"\\xd0\\x98\",\t\t\"\\xd0\\xb9\" => \"\\xd0\\x99\",\n\t\t\"\\xd0\\xba\" => \"\\xd0\\x9a\",\t\t\"\\xd0\\xbb\" => \"\\xd0\\x9b\",\t\t\"\\xd0\\xbc\" => \"\\xd0\\x9c\",\t\t\"\\xd0\\xbd\" => \"\\xd0\\x9d\",\n\t\t\"\\xd0\\xbe\" => \"\\xd0\\x9e\",\t\t\"\\xd0\\xbf\" => \"\\xd0\\x9f\",\t\t\"\\xd1\\x80\" => \"\\xd0\\xa0\",\t\t\"\\xd1\\x81\" => \"\\xd0\\xa1\",\n\t\t\"\\xd1\\x82\" => \"\\xd0\\xa2\",\t\t\"\\xd1\\x83\" => \"\\xd0\\xa3\",\t\t\"\\xd1\\x84\" => \"\\xd0\\xa4\",\t\t\"\\xd1\\x85\" => \"\\xd0\\xa5\",\n\t\t\"\\xd1\\x86\" => \"\\xd0\\xa6\",\t\t\"\\xd1\\x87\" => \"\\xd0\\xa7\",\t\t\"\\xd1\\x88\" => \"\\xd0\\xa8\",\t\t\"\\xd1\\x89\" => \"\\xd0\\xa9\",\n\t\t\"\\xd1\\x8a\" => \"\\xd0\\xaa\",\t\t\"\\xd1\\x8b\" => \"\\xd0\\xab\",\t\t\"\\xd1\\x8c\" => \"\\xd0\\xac\",\t\t\"\\xd1\\x8d\" => \"\\xd0\\xad\",\n\t\t\"\\xd1\\x8e\" => \"\\xd0\\xae\",\t\t\"\\xd1\\x8f\" => \"\\xd0\\xaf\",\t\t\"\\xd1\\xa1\" => \"\\xd1\\xa0\",\t\t\"\\xd1\\xa3\" => \"\\xd1\\xa2\",\n\t\t\"\\xd1\\xa5\" => \"\\xd1\\xa4\",\t\t\"\\xd1\\xa7\" => \"\\xd1\\xa6\",\t\t\"\\xd1\\xa9\" => \"\\xd1\\xa8\",\t\t\"\\xd1\\xab\" => \"\\xd1\\xaa\",\n\t\t\"\\xd1\\xad\" => \"\\xd1\\xac\",\t\t\"\\xd1\\xaf\" => \"\\xd1\\xae\",\t\t\"\\xd1\\xb1\" => \"\\xd1\\xb0\",\t\t\"\\xd1\\xb3\" => \"\\xd1\\xb2\",\n\t\t\"\\xd1\\xb5\" => \"\\xd1\\xb4\",\t\t\"\\xd1\\xb7\" => \"\\xd1\\xb6\",\t\t\"\\xd1\\xb9\" => \"\\xd1\\xb8\",\t\t\"\\xd1\\xbb\" => \"\\xd1\\xba\",\n\t\t\"\\xd1\\xbd\" => \"\\xd1\\xbc\",\t\t\"\\xd1\\xbf\" => \"\\xd1\\xbe\",\t\t\"\\xd2\\x81\" => \"\\xd2\\x80\",\t\t\"\\xd2\\x8b\" => \"\\xd2\\x8a\",\n\t\t\"\\xd2\\x8d\" => \"\\xd2\\x8c\",\t\t\"\\xd2\\x8f\" => \"\\xd2\\x8e\",\t\t\"\\xd2\\x91\" => \"\\xd2\\x90\",\t\t\"\\xd2\\x93\" => \"\\xd2\\x92\",\n\t\t\"\\xd2\\x95\" => \"\\xd2\\x94\",\t\t\"\\xd2\\x97\" => \"\\xd2\\x96\",\t\t\"\\xd2\\x99\" => \"\\xd2\\x98\",\t\t\"\\xd2\\x9b\" => \"\\xd2\\x9a\",\n\t\t\"\\xd2\\x9d\" => \"\\xd2\\x9c\",\t\t\"\\xd2\\x9f\" => \"\\xd2\\x9e\",\t\t\"\\xd2\\xa1\" => \"\\xd2\\xa0\",\t\t\"\\xd2\\xa3\" => \"\\xd2\\xa2\",\n\t\t\"\\xd2\\xa5\" => \"\\xd2\\xa4\",\t\t\"\\xd2\\xa7\" => \"\\xd2\\xa6\",\t\t\"\\xd2\\xa9\" => \"\\xd2\\xa8\",\t\t\"\\xd2\\xab\" => \"\\xd2\\xaa\",\n\t\t\"\\xd2\\xad\" => \"\\xd2\\xac\",\t\t\"\\xd2\\xaf\" => \"\\xd2\\xae\",\t\t\"\\xd2\\xb1\" => \"\\xd2\\xb0\",\t\t\"\\xd2\\xb3\" => \"\\xd2\\xb2\",\n\t\t\"\\xd2\\xb5\" => \"\\xd2\\xb4\",\t\t\"\\xd2\\xb7\" => \"\\xd2\\xb6\",\t\t\"\\xd2\\xb9\" => \"\\xd2\\xb8\",\t\t\"\\xd2\\xbb\" => \"\\xd2\\xba\",\n\t\t\"\\xd2\\xbd\" => \"\\xd2\\xbc\",\t\t\"\\xd2\\xbf\" => \"\\xd2\\xbe\",\t\t\"\\xd3\\x8f\" => \"\\xd3\\x80\",\t\t\"\\xd3\\x82\" => \"\\xd3\\x81\",\n\t\t\"\\xd3\\x84\" => \"\\xd3\\x83\",\t\t\"\\xd3\\x86\" => \"\\xd3\\x85\",\t\t\"\\xd3\\x88\" => \"\\xd3\\x87\",\t\t\"\\xd3\\x8a\" => \"\\xd3\\x89\",\n\t\t\"\\xd3\\x8c\" => \"\\xd3\\x8b\",\t\t\"\\xd3\\x8e\" => \"\\xd3\\x8d\",\t\t\"\\xd3\\x91\" => \"\\xd3\\x90\",\t\t\"\\xd3\\x93\" => \"\\xd3\\x92\",\n\t\t\"\\xd3\\x95\" => \"\\xd3\\x94\",\t\t\"\\xd3\\x97\" => \"\\xd3\\x96\",\t\t\"\\xd3\\x99\" => \"\\xd3\\x98\",\t\t\"\\xd3\\x9b\" => \"\\xd3\\x9a\",\n\t\t\"\\xd3\\x9d\" => \"\\xd3\\x9c\",\t\t\"\\xd3\\x9f\" => \"\\xd3\\x9e\",\t\t\"\\xd3\\xa1\" => \"\\xd3\\xa0\",\t\t\"\\xd3\\xa3\" => \"\\xd3\\xa2\",\n\t\t\"\\xd3\\xa5\" => \"\\xd3\\xa4\",\t\t\"\\xd3\\xa7\" => \"\\xd3\\xa6\",\t\t\"\\xd3\\xa9\" => \"\\xd3\\xa8\",\t\t\"\\xd3\\xab\" => \"\\xd3\\xaa\",\n\t\t\"\\xd3\\xad\" => \"\\xd3\\xac\",\t\t\"\\xd3\\xaf\" => \"\\xd3\\xae\",\t\t\"\\xd3\\xb1\" => \"\\xd3\\xb0\",\t\t\"\\xd3\\xb3\" => \"\\xd3\\xb2\",\n\t\t\"\\xd3\\xb5\" => \"\\xd3\\xb4\",\t\t\"\\xd3\\xb7\" => \"\\xd3\\xb6\",\t\t\"\\xd3\\xb9\" => \"\\xd3\\xb8\",\t\t\"\\xd3\\xbb\" => \"\\xd3\\xba\",\n\t\t\"\\xd3\\xbd\" => \"\\xd3\\xbc\",\t\t\"\\xd3\\xbf\" => \"\\xd3\\xbe\",\t\t\"\\xd4\\x81\" => \"\\xd4\\x80\",\t\t\"\\xd4\\x83\" => \"\\xd4\\x82\",\n\t\t\"\\xd4\\x85\" => \"\\xd4\\x84\",\t\t\"\\xd4\\x87\" => \"\\xd4\\x86\",\t\t\"\\xd4\\x89\" => \"\\xd4\\x88\",\t\t\"\\xd4\\x8b\" => \"\\xd4\\x8a\",\n\t\t\"\\xd4\\x8d\" => \"\\xd4\\x8c\",\t\t\"\\xd4\\x8f\" => \"\\xd4\\x8e\",\t\t\"\\xd4\\x91\" => \"\\xd4\\x90\",\t\t\"\\xd4\\x93\" => \"\\xd4\\x92\",\n\t\t\"\\xd5\\xa1\" => \"\\xd4\\xb1\",\t\t\"\\xd5\\xa2\" => \"\\xd4\\xb2\",\t\t\"\\xd5\\xa3\" => \"\\xd4\\xb3\",\t\t\"\\xd5\\xa4\" => \"\\xd4\\xb4\",\n\t\t\"\\xd5\\xa5\" => \"\\xd4\\xb5\",\t\t\"\\xd5\\xa6\" => \"\\xd4\\xb6\",\t\t\"\\xd5\\xa7\" => \"\\xd4\\xb7\",\t\t\"\\xd5\\xa8\" => \"\\xd4\\xb8\",\n\t\t\"\\xd5\\xa9\" => \"\\xd4\\xb9\",\t\t\"\\xd5\\xaa\" => \"\\xd4\\xba\",\t\t\"\\xd5\\xab\" => \"\\xd4\\xbb\",\t\t\"\\xd5\\xac\" => \"\\xd4\\xbc\",\n\t\t\"\\xd5\\xad\" => \"\\xd4\\xbd\",\t\t\"\\xd5\\xae\" => \"\\xd4\\xbe\",\t\t\"\\xd5\\xaf\" => \"\\xd4\\xbf\",\t\t\"\\xd5\\xb0\" => \"\\xd5\\x80\",\n\t\t\"\\xd5\\xb1\" => \"\\xd5\\x81\",\t\t\"\\xd5\\xb2\" => \"\\xd5\\x82\",\t\t\"\\xd5\\xb3\" => \"\\xd5\\x83\",\t\t\"\\xd5\\xb4\" => \"\\xd5\\x84\",\n\t\t\"\\xd5\\xb5\" => \"\\xd5\\x85\",\t\t\"\\xd5\\xb6\" => \"\\xd5\\x86\",\t\t\"\\xd5\\xb7\" => \"\\xd5\\x87\",\t\t\"\\xd5\\xb8\" => \"\\xd5\\x88\",\n\t\t\"\\xd5\\xb9\" => \"\\xd5\\x89\",\t\t\"\\xd5\\xba\" => \"\\xd5\\x8a\",\t\t\"\\xd5\\xbb\" => \"\\xd5\\x8b\",\t\t\"\\xd5\\xbc\" => \"\\xd5\\x8c\",\n\t\t\"\\xd5\\xbd\" => \"\\xd5\\x8d\",\t\t\"\\xd5\\xbe\" => \"\\xd5\\x8e\",\t\t\"\\xd5\\xbf\" => \"\\xd5\\x8f\",\t\t\"\\xd6\\x80\" => \"\\xd5\\x90\",\n\t\t\"\\xd6\\x81\" => \"\\xd5\\x91\",\t\t\"\\xd6\\x82\" => \"\\xd5\\x92\",\t\t\"\\xd6\\x83\" => \"\\xd5\\x93\",\t\t\"\\xd6\\x84\" => \"\\xd5\\x94\",\n\t\t\"\\xd6\\x85\" => \"\\xd5\\x95\",\t\t\"\\xd6\\x86\" => \"\\xd5\\x96\",\t\t\"\\xd5\\xa5\\xd6\\x82\" => \"\\xd6\\x87\",\t\t\"\\xe2\\xb4\\x80\" => \"\\xe1\\x82\\xa0\",\n\t\t\"\\xe2\\xb4\\x81\" => \"\\xe1\\x82\\xa1\",\t\t\"\\xe2\\xb4\\x82\" => \"\\xe1\\x82\\xa2\",\t\t\"\\xe2\\xb4\\x83\" => \"\\xe1\\x82\\xa3\",\t\t\"\\xe2\\xb4\\x84\" => \"\\xe1\\x82\\xa4\",\n\t\t\"\\xe2\\xb4\\x85\" => \"\\xe1\\x82\\xa5\",\t\t\"\\xe2\\xb4\\x86\" => \"\\xe1\\x82\\xa6\",\t\t\"\\xe2\\xb4\\x87\" => \"\\xe1\\x82\\xa7\",\t\t\"\\xe2\\xb4\\x88\" => \"\\xe1\\x82\\xa8\",\n\t\t\"\\xe2\\xb4\\x89\" => \"\\xe1\\x82\\xa9\",\t\t\"\\xe2\\xb4\\x8a\" => \"\\xe1\\x82\\xaa\",\t\t\"\\xe2\\xb4\\x8b\" => \"\\xe1\\x82\\xab\",\t\t\"\\xe2\\xb4\\x8c\" => \"\\xe1\\x82\\xac\",\n\t\t\"\\xe2\\xb4\\x8d\" => \"\\xe1\\x82\\xad\",\t\t\"\\xe2\\xb4\\x8e\" => \"\\xe1\\x82\\xae\",\t\t\"\\xe2\\xb4\\x8f\" => \"\\xe1\\x82\\xaf\",\t\t\"\\xe2\\xb4\\x90\" => \"\\xe1\\x82\\xb0\",\n\t\t\"\\xe2\\xb4\\x91\" => \"\\xe1\\x82\\xb1\",\t\t\"\\xe2\\xb4\\x92\" => \"\\xe1\\x82\\xb2\",\t\t\"\\xe2\\xb4\\x93\" => \"\\xe1\\x82\\xb3\",\t\t\"\\xe2\\xb4\\x94\" => \"\\xe1\\x82\\xb4\",\n\t\t\"\\xe2\\xb4\\x95\" => \"\\xe1\\x82\\xb5\",\t\t\"\\xe2\\xb4\\x96\" => \"\\xe1\\x82\\xb6\",\t\t\"\\xe2\\xb4\\x97\" => \"\\xe1\\x82\\xb7\",\t\t\"\\xe2\\xb4\\x98\" => \"\\xe1\\x82\\xb8\",\n\t\t\"\\xe2\\xb4\\x99\" => \"\\xe1\\x82\\xb9\",\t\t\"\\xe2\\xb4\\x9a\" => \"\\xe1\\x82\\xba\",\t\t\"\\xe2\\xb4\\x9b\" => \"\\xe1\\x82\\xbb\",\t\t\"\\xe2\\xb4\\x9c\" => \"\\xe1\\x82\\xbc\",\n\t\t\"\\xe2\\xb4\\x9d\" => \"\\xe1\\x82\\xbd\",\t\t\"\\xe2\\xb4\\x9e\" => \"\\xe1\\x82\\xbe\",\t\t\"\\xe2\\xb4\\x9f\" => \"\\xe1\\x82\\xbf\",\t\t\"\\xe2\\xb4\\xa0\" => \"\\xe1\\x83\\x80\",\n\t\t\"\\xe2\\xb4\\xa1\" => \"\\xe1\\x83\\x81\",\t\t\"\\xe2\\xb4\\xa2\" => \"\\xe1\\x83\\x82\",\t\t\"\\xe2\\xb4\\xa3\" => \"\\xe1\\x83\\x83\",\t\t\"\\xe2\\xb4\\xa4\" => \"\\xe1\\x83\\x84\",\n\t\t\"\\xe2\\xb4\\xa5\" => \"\\xe1\\x83\\x85\",\t\t\"\\xe1\\xb8\\x81\" => \"\\xe1\\xb8\\x80\",\t\t\"\\xe1\\xb8\\x83\" => \"\\xe1\\xb8\\x82\",\t\t\"\\xe1\\xb8\\x85\" => \"\\xe1\\xb8\\x84\",\n\t\t\"\\xe1\\xb8\\x87\" => \"\\xe1\\xb8\\x86\",\t\t\"\\xe1\\xb8\\x89\" => \"\\xe1\\xb8\\x88\",\t\t\"\\xe1\\xb8\\x8b\" => \"\\xe1\\xb8\\x8a\",\t\t\"\\xe1\\xb8\\x8d\" => \"\\xe1\\xb8\\x8c\",\n\t\t\"\\xe1\\xb8\\x8f\" => \"\\xe1\\xb8\\x8e\",\t\t\"\\xe1\\xb8\\x91\" => \"\\xe1\\xb8\\x90\",\t\t\"\\xe1\\xb8\\x93\" => \"\\xe1\\xb8\\x92\",\t\t\"\\xe1\\xb8\\x95\" => \"\\xe1\\xb8\\x94\",\n\t\t\"\\xe1\\xb8\\x97\" => \"\\xe1\\xb8\\x96\",\t\t\"\\xe1\\xb8\\x99\" => \"\\xe1\\xb8\\x98\",\t\t\"\\xe1\\xb8\\x9b\" => \"\\xe1\\xb8\\x9a\",\t\t\"\\xe1\\xb8\\x9d\" => \"\\xe1\\xb8\\x9c\",\n\t\t\"\\xe1\\xb8\\x9f\" => \"\\xe1\\xb8\\x9e\",\t\t\"\\xe1\\xb8\\xa1\" => \"\\xe1\\xb8\\xa0\",\t\t\"\\xe1\\xb8\\xa3\" => \"\\xe1\\xb8\\xa2\",\t\t\"\\xe1\\xb8\\xa5\" => \"\\xe1\\xb8\\xa4\",\n\t\t\"\\xe1\\xb8\\xa7\" => \"\\xe1\\xb8\\xa6\",\t\t\"\\xe1\\xb8\\xa9\" => \"\\xe1\\xb8\\xa8\",\t\t\"\\xe1\\xb8\\xab\" => \"\\xe1\\xb8\\xaa\",\t\t\"\\xe1\\xb8\\xad\" => \"\\xe1\\xb8\\xac\",\n\t\t\"\\xe1\\xb8\\xaf\" => \"\\xe1\\xb8\\xae\",\t\t\"\\xe1\\xb8\\xb1\" => \"\\xe1\\xb8\\xb0\",\t\t\"\\xe1\\xb8\\xb3\" => \"\\xe1\\xb8\\xb2\",\t\t\"\\xe1\\xb8\\xb5\" => \"\\xe1\\xb8\\xb4\",\n\t\t\"\\xe1\\xb8\\xb7\" => \"\\xe1\\xb8\\xb6\",\t\t\"\\xe1\\xb8\\xb9\" => \"\\xe1\\xb8\\xb8\",\t\t\"\\xe1\\xb8\\xbb\" => \"\\xe1\\xb8\\xba\",\t\t\"\\xe1\\xb8\\xbd\" => \"\\xe1\\xb8\\xbc\",\n\t\t\"\\xe1\\xb8\\xbf\" => \"\\xe1\\xb8\\xbe\",\t\t\"\\xe1\\xb9\\x81\" => \"\\xe1\\xb9\\x80\",\t\t\"\\xe1\\xb9\\x83\" => \"\\xe1\\xb9\\x82\",\t\t\"\\xe1\\xb9\\x85\" => \"\\xe1\\xb9\\x84\",\n\t\t\"\\xe1\\xb9\\x87\" => \"\\xe1\\xb9\\x86\",\t\t\"\\xe1\\xb9\\x89\" => \"\\xe1\\xb9\\x88\",\t\t\"\\xe1\\xb9\\x8b\" => \"\\xe1\\xb9\\x8a\",\t\t\"\\xe1\\xb9\\x8d\" => \"\\xe1\\xb9\\x8c\",\n\t\t\"\\xe1\\xb9\\x8f\" => \"\\xe1\\xb9\\x8e\",\t\t\"\\xe1\\xb9\\x91\" => \"\\xe1\\xb9\\x90\",\t\t\"\\xe1\\xb9\\x93\" => \"\\xe1\\xb9\\x92\",\t\t\"\\xe1\\xb9\\x95\" => \"\\xe1\\xb9\\x94\",\n\t\t\"\\xe1\\xb9\\x97\" => \"\\xe1\\xb9\\x96\",\t\t\"\\xe1\\xb9\\x99\" => \"\\xe1\\xb9\\x98\",\t\t\"\\xe1\\xb9\\x9b\" => \"\\xe1\\xb9\\x9a\",\t\t\"\\xe1\\xb9\\x9d\" => \"\\xe1\\xb9\\x9c\",\n\t\t\"\\xe1\\xb9\\x9f\" => \"\\xe1\\xb9\\x9e\",\t\t\"\\xe1\\xb9\\xa1\" => \"\\xe1\\xb9\\xa0\",\t\t\"\\xe1\\xb9\\xa3\" => \"\\xe1\\xb9\\xa2\",\t\t\"\\xe1\\xb9\\xa5\" => \"\\xe1\\xb9\\xa4\",\n\t\t\"\\xe1\\xb9\\xa7\" => \"\\xe1\\xb9\\xa6\",\t\t\"\\xe1\\xb9\\xa9\" => \"\\xe1\\xb9\\xa8\",\t\t\"\\xe1\\xb9\\xab\" => \"\\xe1\\xb9\\xaa\",\t\t\"\\xe1\\xb9\\xad\" => \"\\xe1\\xb9\\xac\",\n\t\t\"\\xe1\\xb9\\xaf\" => \"\\xe1\\xb9\\xae\",\t\t\"\\xe1\\xb9\\xb1\" => \"\\xe1\\xb9\\xb0\",\t\t\"\\xe1\\xb9\\xb3\" => \"\\xe1\\xb9\\xb2\",\t\t\"\\xe1\\xb9\\xb5\" => \"\\xe1\\xb9\\xb4\",\n\t\t\"\\xe1\\xb9\\xb7\" => \"\\xe1\\xb9\\xb6\",\t\t\"\\xe1\\xb9\\xb9\" => \"\\xe1\\xb9\\xb8\",\t\t\"\\xe1\\xb9\\xbb\" => \"\\xe1\\xb9\\xba\",\t\t\"\\xe1\\xb9\\xbd\" => \"\\xe1\\xb9\\xbc\",\n\t\t\"\\xe1\\xb9\\xbf\" => \"\\xe1\\xb9\\xbe\",\t\t\"\\xe1\\xba\\x81\" => \"\\xe1\\xba\\x80\",\t\t\"\\xe1\\xba\\x83\" => \"\\xe1\\xba\\x82\",\t\t\"\\xe1\\xba\\x85\" => \"\\xe1\\xba\\x84\",\n\t\t\"\\xe1\\xba\\x87\" => \"\\xe1\\xba\\x86\",\t\t\"\\xe1\\xba\\x89\" => \"\\xe1\\xba\\x88\",\t\t\"\\xe1\\xba\\x8b\" => \"\\xe1\\xba\\x8a\",\t\t\"\\xe1\\xba\\x8d\" => \"\\xe1\\xba\\x8c\",\n\t\t\"\\xe1\\xba\\x8f\" => \"\\xe1\\xba\\x8e\",\t\t\"\\xe1\\xba\\x91\" => \"\\xe1\\xba\\x90\",\t\t\"\\xe1\\xba\\x93\" => \"\\xe1\\xba\\x92\",\t\t\"\\xe1\\xba\\x95\" => \"\\xe1\\xba\\x94\",\n\t\t\"h\\xcc\\xb1\" => \"\\xe1\\xba\\x96\",\t\t\"t\\xcc\\x88\" => \"\\xe1\\xba\\x97\",\t\t\"w\\xcc\\x8a\" => \"\\xe1\\xba\\x98\",\t\t\"y\\xcc\\x8a\" => \"\\xe1\\xba\\x99\",\n\t\t\"a\\xca\\xbe\" => \"\\xe1\\xba\\x9a\",\t\"\\xe1\\xb9\\xa1\" => \"\\xe1\\xba\\x9b\",\t\t\"\\xe1\\xba\\xa1\" => \"\\xe1\\xba\\xa0\",\t\t\"\\xe1\\xba\\xa3\" => \"\\xe1\\xba\\xa2\",\n\t\t\"\\xe1\\xba\\xa5\" => \"\\xe1\\xba\\xa4\",\t\t\"\\xe1\\xba\\xa7\" => \"\\xe1\\xba\\xa6\",\t\t\"\\xe1\\xba\\xa9\" => \"\\xe1\\xba\\xa8\",\t\t\"\\xe1\\xba\\xab\" => \"\\xe1\\xba\\xaa\",\n\t\t\"\\xe1\\xba\\xad\" => \"\\xe1\\xba\\xac\",\t\t\"\\xe1\\xba\\xaf\" => \"\\xe1\\xba\\xae\",\t\t\"\\xe1\\xba\\xb1\" => \"\\xe1\\xba\\xb0\",\t\t\"\\xe1\\xba\\xb3\" => \"\\xe1\\xba\\xb2\",\n\t\t\"\\xe1\\xba\\xb5\" => \"\\xe1\\xba\\xb4\",\t\t\"\\xe1\\xba\\xb7\" => \"\\xe1\\xba\\xb6\",\t\t\"\\xe1\\xba\\xb9\" => \"\\xe1\\xba\\xb8\",\t\t\"\\xe1\\xba\\xbb\" => \"\\xe1\\xba\\xba\",\n\t\t\"\\xe1\\xba\\xbd\" => \"\\xe1\\xba\\xbc\",\t\t\"\\xe1\\xba\\xbf\" => \"\\xe1\\xba\\xbe\",\t\t\"\\xe1\\xbb\\x81\" => \"\\xe1\\xbb\\x80\",\t\t\"\\xe1\\xbb\\x83\" => \"\\xe1\\xbb\\x82\",\n\t\t\"\\xe1\\xbb\\x85\" => \"\\xe1\\xbb\\x84\",\t\t\"\\xe1\\xbb\\x87\" => \"\\xe1\\xbb\\x86\",\t\t\"\\xe1\\xbb\\x89\" => \"\\xe1\\xbb\\x88\",\t\t\"\\xe1\\xbb\\x8b\" => \"\\xe1\\xbb\\x8a\",\n\t\t\"\\xe1\\xbb\\x8d\" => \"\\xe1\\xbb\\x8c\",\t\t\"\\xe1\\xbb\\x8f\" => \"\\xe1\\xbb\\x8e\",\t\t\"\\xe1\\xbb\\x91\" => \"\\xe1\\xbb\\x90\",\t\t\"\\xe1\\xbb\\x93\" => \"\\xe1\\xbb\\x92\",\n\t\t\"\\xe1\\xbb\\x95\" => \"\\xe1\\xbb\\x94\",\t\t\"\\xe1\\xbb\\x97\" => \"\\xe1\\xbb\\x96\",\t\t\"\\xe1\\xbb\\x99\" => \"\\xe1\\xbb\\x98\",\t\t\"\\xe1\\xbb\\x9b\" => \"\\xe1\\xbb\\x9a\",\n\t\t\"\\xe1\\xbb\\x9d\" => \"\\xe1\\xbb\\x9c\",\t\t\"\\xe1\\xbb\\x9f\" => \"\\xe1\\xbb\\x9e\",\t\t\"\\xe1\\xbb\\xa1\" => \"\\xe1\\xbb\\xa0\",\t\t\"\\xe1\\xbb\\xa3\" => \"\\xe1\\xbb\\xa2\",\n\t\t\"\\xe1\\xbb\\xa5\" => \"\\xe1\\xbb\\xa4\",\t\t\"\\xe1\\xbb\\xa7\" => \"\\xe1\\xbb\\xa6\",\t\t\"\\xe1\\xbb\\xa9\" => \"\\xe1\\xbb\\xa8\",\t\t\"\\xe1\\xbb\\xab\" => \"\\xe1\\xbb\\xaa\",\n\t\t\"\\xe1\\xbb\\xad\" => \"\\xe1\\xbb\\xac\",\t\t\"\\xe1\\xbb\\xaf\" => \"\\xe1\\xbb\\xae\",\t\t\"\\xe1\\xbb\\xb1\" => \"\\xe1\\xbb\\xb0\",\t\t\"\\xe1\\xbb\\xb3\" => \"\\xe1\\xbb\\xb2\",\n\t\t\"\\xe1\\xbb\\xb5\" => \"\\xe1\\xbb\\xb4\",\t\t\"\\xe1\\xbb\\xb7\" => \"\\xe1\\xbb\\xb6\",\t\t\"\\xe1\\xbb\\xb9\" => \"\\xe1\\xbb\\xb8\",\t\t\"\\xe1\\xbc\\x80\" => \"\\xe1\\xbc\\x88\",\n\t\t\"\\xe1\\xbc\\x81\" => \"\\xe1\\xbc\\x89\",\t\t\"\\xe1\\xbc\\x82\" => \"\\xe1\\xbc\\x8a\",\t\t\"\\xe1\\xbc\\x83\" => \"\\xe1\\xbc\\x8b\",\t\t\"\\xe1\\xbc\\x84\" => \"\\xe1\\xbc\\x8c\",\n\t\t\"\\xe1\\xbc\\x85\" => \"\\xe1\\xbc\\x8d\",\t\t\"\\xe1\\xbc\\x86\" => \"\\xe1\\xbc\\x8e\",\t\t\"\\xe1\\xbc\\x87\" => \"\\xe1\\xbc\\x8f\",\t\t\"\\xe1\\xbc\\x90\" => \"\\xe1\\xbc\\x98\",\n\t\t\"\\xe1\\xbc\\x91\" => \"\\xe1\\xbc\\x99\",\t\t\"\\xe1\\xbc\\x92\" => \"\\xe1\\xbc\\x9a\",\t\t\"\\xe1\\xbc\\x93\" => \"\\xe1\\xbc\\x9b\",\t\t\"\\xe1\\xbc\\x94\" => \"\\xe1\\xbc\\x9c\",\n\t\t\"\\xe1\\xbc\\x95\" => \"\\xe1\\xbc\\x9d\",\t\t\"\\xe1\\xbc\\xa0\" => \"\\xe1\\xbc\\xa8\",\t\t\"\\xe1\\xbc\\xa1\" => \"\\xe1\\xbc\\xa9\",\t\t\"\\xe1\\xbc\\xa2\" => \"\\xe1\\xbc\\xaa\",\n\t\t\"\\xe1\\xbc\\xa3\" => \"\\xe1\\xbc\\xab\",\t\t\"\\xe1\\xbc\\xa4\" => \"\\xe1\\xbc\\xac\",\t\t\"\\xe1\\xbc\\xa5\" => \"\\xe1\\xbc\\xad\",\t\t\"\\xe1\\xbc\\xa6\" => \"\\xe1\\xbc\\xae\",\n\t\t\"\\xe1\\xbc\\xa7\" => \"\\xe1\\xbc\\xaf\",\t\t\"\\xe1\\xbc\\xb0\" => \"\\xe1\\xbc\\xb8\",\t\t\"\\xe1\\xbc\\xb1\" => \"\\xe1\\xbc\\xb9\",\t\t\"\\xe1\\xbc\\xb2\" => \"\\xe1\\xbc\\xba\",\n\t\t\"\\xe1\\xbc\\xb3\" => \"\\xe1\\xbc\\xbb\",\t\t\"\\xe1\\xbc\\xb4\" => \"\\xe1\\xbc\\xbc\",\t\t\"\\xe1\\xbc\\xb5\" => \"\\xe1\\xbc\\xbd\",\t\t\"\\xe1\\xbc\\xb6\" => \"\\xe1\\xbc\\xbe\",\n\t\t\"\\xe1\\xbc\\xb7\" => \"\\xe1\\xbc\\xbf\",\t\t\"\\xe1\\xbd\\x80\" => \"\\xe1\\xbd\\x88\",\t\t\"\\xe1\\xbd\\x81\" => \"\\xe1\\xbd\\x89\",\t\t\"\\xe1\\xbd\\x82\" => \"\\xe1\\xbd\\x8a\",\n\t\t\"\\xe1\\xbd\\x83\" => \"\\xe1\\xbd\\x8b\",\t\t\"\\xe1\\xbd\\x84\" => \"\\xe1\\xbd\\x8c\",\t\t\"\\xe1\\xbd\\x85\" => \"\\xe1\\xbd\\x8d\",\t\t\"\\xcf\\x85\\xcc\\x93\" => \"\\xe1\\xbd\\x90\",\n\t\t\"\\xcf\\x85\\xcc\\x93\\xcc\\x80\" => \"\\xe1\\xbd\\x92\",\t\"\\xcf\\x85\\xcc\\x93\\xcc\\x81\" => \"\\xe1\\xbd\\x94\",\t\"\\xcf\\x85\\xcc\\x93\\xcd\\x82\" => \"\\xe1\\xbd\\x96\",\t\t\"\\xe1\\xbd\\x91\" => \"\\xe1\\xbd\\x99\",\n\t\t\"\\xe1\\xbd\\x93\" => \"\\xe1\\xbd\\x9b\",\t\t\"\\xe1\\xbd\\x95\" => \"\\xe1\\xbd\\x9d\",\t\t\"\\xe1\\xbd\\x97\" => \"\\xe1\\xbd\\x9f\",\t\t\"\\xe1\\xbd\\xa0\" => \"\\xe1\\xbd\\xa8\",\n\t\t\"\\xe1\\xbd\\xa1\" => \"\\xe1\\xbd\\xa9\",\t\t\"\\xe1\\xbd\\xa2\" => \"\\xe1\\xbd\\xaa\",\t\t\"\\xe1\\xbd\\xa3\" => \"\\xe1\\xbd\\xab\",\t\t\"\\xe1\\xbd\\xa4\" => \"\\xe1\\xbd\\xac\",\n\t\t\"\\xe1\\xbd\\xa5\" => \"\\xe1\\xbd\\xad\",\t\t\"\\xe1\\xbd\\xa6\" => \"\\xe1\\xbd\\xae\",\t\t\"\\xe1\\xbd\\xa7\" => \"\\xe1\\xbd\\xaf\",\t\t\"\\xe1\\xbc\\x80\\xce\\xb9\" => \"\\xe1\\xbe\\x80\",\n\t\t\"\\xe1\\xbc\\x81\\xce\\xb9\" => \"\\xe1\\xbe\\x81\",\t\"\\xe1\\xbc\\x82\\xce\\xb9\" => \"\\xe1\\xbe\\x82\",\t\"\\xe1\\xbc\\x83\\xce\\xb9\" => \"\\xe1\\xbe\\x83\",\t\"\\xe1\\xbc\\x84\\xce\\xb9\" => \"\\xe1\\xbe\\x84\",\n\t\t\"\\xe1\\xbc\\x85\\xce\\xb9\" => \"\\xe1\\xbe\\x85\",\t\"\\xe1\\xbc\\x86\\xce\\xb9\" => \"\\xe1\\xbe\\x86\",\t\"\\xe1\\xbc\\x87\\xce\\xb9\" => \"\\xe1\\xbe\\x87\",\t\"\\xe1\\xbe\\x80\" => \"\\xe1\\xbe\\x88\",\n\t\t\"\\xe1\\xbe\\x81\" => \"\\xe1\\xbe\\x89\",\t\t\"\\xe1\\xbe\\x82\" => \"\\xe1\\xbe\\x8a\",\t\t\"\\xe1\\xbe\\x83\" => \"\\xe1\\xbe\\x8b\",\t\t\"\\xe1\\xbe\\x84\" => \"\\xe1\\xbe\\x8c\",\n\t\t\"\\xe1\\xbe\\x85\" => \"\\xe1\\xbe\\x8d\",\t\t\"\\xe1\\xbe\\x86\" => \"\\xe1\\xbe\\x8e\",\t\t\"\\xe1\\xbe\\x87\" => \"\\xe1\\xbe\\x8f\",\t\t\"\\xe1\\xbc\\xa0\\xce\\xb9\" => \"\\xe1\\xbe\\x90\",\n\t\t\"\\xe1\\xbc\\xa1\\xce\\xb9\" => \"\\xe1\\xbe\\x91\",\t\"\\xe1\\xbc\\xa2\\xce\\xb9\" => \"\\xe1\\xbe\\x92\",\t\"\\xe1\\xbc\\xa3\\xce\\xb9\" => \"\\xe1\\xbe\\x93\",\t\"\\xe1\\xbc\\xa4\\xce\\xb9\" => \"\\xe1\\xbe\\x94\",\n\t\t\"\\xe1\\xbc\\xa5\\xce\\xb9\" => \"\\xe1\\xbe\\x95\",\t\"\\xe1\\xbc\\xa6\\xce\\xb9\" => \"\\xe1\\xbe\\x96\",\t\"\\xe1\\xbc\\xa7\\xce\\xb9\" => \"\\xe1\\xbe\\x97\",\t\"\\xe1\\xbe\\x90\" => \"\\xe1\\xbe\\x98\",\n\t\t\"\\xe1\\xbe\\x91\" => \"\\xe1\\xbe\\x99\",\t\t\"\\xe1\\xbe\\x92\" => \"\\xe1\\xbe\\x9a\",\t\t\"\\xe1\\xbe\\x93\" => \"\\xe1\\xbe\\x9b\",\t\t\"\\xe1\\xbe\\x94\" => \"\\xe1\\xbe\\x9c\",\n\t\t\"\\xe1\\xbe\\x95\" => \"\\xe1\\xbe\\x9d\",\t\t\"\\xe1\\xbe\\x96\" => \"\\xe1\\xbe\\x9e\",\t\t\"\\xe1\\xbe\\x97\" => \"\\xe1\\xbe\\x9f\",\t\t\"\\xe1\\xbd\\xa0\\xce\\xb9\" => \"\\xe1\\xbe\\xa0\",\n\t\t\"\\xe1\\xbd\\xa1\\xce\\xb9\" => \"\\xe1\\xbe\\xa1\",\t\"\\xe1\\xbd\\xa2\\xce\\xb9\" => \"\\xe1\\xbe\\xa2\",\t\"\\xe1\\xbd\\xa3\\xce\\xb9\" => \"\\xe1\\xbe\\xa3\",\t\"\\xe1\\xbd\\xa4\\xce\\xb9\" => \"\\xe1\\xbe\\xa4\",\n\t\t\"\\xe1\\xbd\\xa5\\xce\\xb9\" => \"\\xe1\\xbe\\xa5\",\t\"\\xe1\\xbd\\xa6\\xce\\xb9\" => \"\\xe1\\xbe\\xa6\",\t\"\\xe1\\xbd\\xa7\\xce\\xb9\" => \"\\xe1\\xbe\\xa7\",\t\"\\xe1\\xbe\\xa0\" => \"\\xe1\\xbe\\xa8\",\n\t\t\"\\xe1\\xbe\\xa1\" => \"\\xe1\\xbe\\xa9\",\t\t\"\\xe1\\xbe\\xa2\" => \"\\xe1\\xbe\\xaa\",\t\t\"\\xe1\\xbe\\xa3\" => \"\\xe1\\xbe\\xab\",\t\t\"\\xe1\\xbe\\xa4\" => \"\\xe1\\xbe\\xac\",\n\t\t\"\\xe1\\xbe\\xa5\" => \"\\xe1\\xbe\\xad\",\t\t\"\\xe1\\xbe\\xa6\" => \"\\xe1\\xbe\\xae\",\t\t\"\\xe1\\xbe\\xa7\" => \"\\xe1\\xbe\\xaf\",\t\t\"\\xe1\\xbd\\xb0\\xce\\xb9\" => \"\\xe1\\xbe\\xb2\",\n\t\t\"\\xce\\xb1\\xce\\xb9\" => \"\\xe1\\xbe\\xb3\",\t\"\\xce\\xac\\xce\\xb9\" => \"\\xe1\\xbe\\xb4\",\t\"\\xce\\xb1\\xcd\\x82\" => \"\\xe1\\xbe\\xb6\",\t\t\"\\xce\\xb1\\xcd\\x82\\xce\\xb9\" => \"\\xe1\\xbe\\xb7\",\n\t\t\"\\xe1\\xbe\\xb0\" => \"\\xe1\\xbe\\xb8\",\t\t\"\\xe1\\xbe\\xb1\" => \"\\xe1\\xbe\\xb9\",\t\t\"\\xe1\\xbd\\xb0\" => \"\\xe1\\xbe\\xba\",\t\t\"\\xe1\\xbd\\xb1\" => \"\\xe1\\xbe\\xbb\",\n\t\t\"\\xe1\\xbe\\xb3\" => \"\\xe1\\xbe\\xbc\",\t\t\"\\xce\\xb9\" => \"\\xe1\\xbe\\xbe\",\t\t\"\\xe1\\xbd\\xb4\\xce\\xb9\" => \"\\xe1\\xbf\\x82\",\t\"\\xce\\xb7\\xce\\xb9\" => \"\\xe1\\xbf\\x83\",\n\t\t\"\\xce\\xae\\xce\\xb9\" => \"\\xe1\\xbf\\x84\",\t\"\\xce\\xb7\\xcd\\x82\" => \"\\xe1\\xbf\\x86\",\t\t\"\\xce\\xb7\\xcd\\x82\\xce\\xb9\" => \"\\xe1\\xbf\\x87\",\t\"\\xe1\\xbd\\xb2\" => \"\\xe1\\xbf\\x88\",\n\t\t\"\\xe1\\xbd\\xb3\" => \"\\xe1\\xbf\\x89\",\t\t\"\\xe1\\xbd\\xb4\" => \"\\xe1\\xbf\\x8a\",\t\t\"\\xe1\\xbd\\xb5\" => \"\\xe1\\xbf\\x8b\",\t\t\"\\xe1\\xbf\\x83\" => \"\\xe1\\xbf\\x8c\",\n\t\t\"\\xce\\xb9\\xcc\\x88\\xcc\\x80\" => \"\\xe1\\xbf\\x92\",\t\"\\xce\\xb9\\xcc\\x88\\xcc\\x81\" => \"\\xe1\\xbf\\x93\",\t\"\\xce\\xb9\\xcd\\x82\" => \"\\xe1\\xbf\\x96\",\t\t\"\\xce\\xb9\\xcc\\x88\\xcd\\x82\" => \"\\xe1\\xbf\\x97\",\n\t\t\"\\xe1\\xbf\\x90\" => \"\\xe1\\xbf\\x98\",\t\t\"\\xe1\\xbf\\x91\" => \"\\xe1\\xbf\\x99\",\t\t\"\\xe1\\xbd\\xb6\" => \"\\xe1\\xbf\\x9a\",\t\t\"\\xe1\\xbd\\xb7\" => \"\\xe1\\xbf\\x9b\",\n\t\t\"\\xcf\\x85\\xcc\\x88\\xcc\\x80\" => \"\\xe1\\xbf\\xa2\",\t\"\\xcf\\x85\\xcc\\x88\\xcc\\x81\" => \"\\xe1\\xbf\\xa3\",\t\"\\xcf\\x81\\xcc\\x93\" => \"\\xe1\\xbf\\xa4\",\t\t\"\\xcf\\x85\\xcd\\x82\" => \"\\xe1\\xbf\\xa6\",\n\t\t\"\\xcf\\x85\\xcc\\x88\\xcd\\x82\" => \"\\xe1\\xbf\\xa7\",\t\t\"\\xe1\\xbf\\xa0\" => \"\\xe1\\xbf\\xa8\",\t\t\"\\xe1\\xbf\\xa1\" => \"\\xe1\\xbf\\xa9\",\t\t\"\\xe1\\xbd\\xba\" => \"\\xe1\\xbf\\xaa\",\n\t\t\"\\xe1\\xbd\\xbb\" => \"\\xe1\\xbf\\xab\",\t\t\"\\xe1\\xbf\\xa5\" => \"\\xe1\\xbf\\xac\",\t\t\"\\xe1\\xbd\\xbc\\xce\\xb9\" => \"\\xe1\\xbf\\xb2\",\t\"\\xcf\\x89\\xce\\xb9\" => \"\\xe1\\xbf\\xb3\",\n\t\t\"\\xcf\\x8e\\xce\\xb9\" => \"\\xe1\\xbf\\xb4\",\t\"\\xcf\\x89\\xcd\\x82\" => \"\\xe1\\xbf\\xb6\",\t\t\"\\xcf\\x89\\xcd\\x82\\xce\\xb9\" => \"\\xe1\\xbf\\xb7\",\t\"\\xe1\\xbd\\xb8\" => \"\\xe1\\xbf\\xb8\",\n\t\t\"\\xe1\\xbd\\xb9\" => \"\\xe1\\xbf\\xb9\",\t\t\"\\xe1\\xbd\\xbc\" => \"\\xe1\\xbf\\xba\",\t\t\"\\xe1\\xbd\\xbd\" => \"\\xe1\\xbf\\xbb\",\t\t\"\\xe1\\xbf\\xb3\" => \"\\xe1\\xbf\\xbc\",\n\t\t\"\\xcf\\x89\" => \"\\xe2\\x84\\xa6\",\t\t\"k\" => \"\\xe2\\x84\\xaa\",\t\t\"\\xc3\\xa5\" => \"\\xe2\\x84\\xab\",\t\t\"\\xe2\\x85\\x8e\" => \"\\xe2\\x84\\xb2\",\n\t\t\"\\xe2\\x85\\xb0\" => \"\\xe2\\x85\\xa0\",\t\t\"\\xe2\\x85\\xb1\" => \"\\xe2\\x85\\xa1\",\t\t\"\\xe2\\x85\\xb2\" => \"\\xe2\\x85\\xa2\",\t\t\"\\xe2\\x85\\xb3\" => \"\\xe2\\x85\\xa3\",\n\t\t\"\\xe2\\x85\\xb4\" => \"\\xe2\\x85\\xa4\",\t\t\"\\xe2\\x85\\xb5\" => \"\\xe2\\x85\\xa5\",\t\t\"\\xe2\\x85\\xb6\" => \"\\xe2\\x85\\xa6\",\t\t\"\\xe2\\x85\\xb7\" => \"\\xe2\\x85\\xa7\",\n\t\t\"\\xe2\\x85\\xb8\" => \"\\xe2\\x85\\xa8\",\t\t\"\\xe2\\x85\\xb9\" => \"\\xe2\\x85\\xa9\",\t\t\"\\xe2\\x85\\xba\" => \"\\xe2\\x85\\xaa\",\t\t\"\\xe2\\x85\\xbb\" => \"\\xe2\\x85\\xab\",\n\t\t\"\\xe2\\x85\\xbc\" => \"\\xe2\\x85\\xac\",\t\t\"\\xe2\\x85\\xbd\" => \"\\xe2\\x85\\xad\",\t\t\"\\xe2\\x85\\xbe\" => \"\\xe2\\x85\\xae\",\t\t\"\\xe2\\x85\\xbf\" => \"\\xe2\\x85\\xaf\",\n\t\t\"\\xe2\\x86\\x84\" => \"\\xe2\\x86\\x83\",\t\t\"\\xe2\\x93\\x90\" => \"\\xe2\\x92\\xb6\",\t\t\"\\xe2\\x93\\x91\" => \"\\xe2\\x92\\xb7\",\t\t\"\\xe2\\x93\\x92\" => \"\\xe2\\x92\\xb8\",\n\t\t\"\\xe2\\x93\\x93\" => \"\\xe2\\x92\\xb9\",\t\t\"\\xe2\\x93\\x94\" => \"\\xe2\\x92\\xba\",\t\t\"\\xe2\\x93\\x95\" => \"\\xe2\\x92\\xbb\",\t\t\"\\xe2\\x93\\x96\" => \"\\xe2\\x92\\xbc\",\n\t\t\"\\xe2\\x93\\x97\" => \"\\xe2\\x92\\xbd\",\t\t\"\\xe2\\x93\\x98\" => \"\\xe2\\x92\\xbe\",\t\t\"\\xe2\\x93\\x99\" => \"\\xe2\\x92\\xbf\",\t\t\"\\xe2\\x93\\x9a\" => \"\\xe2\\x93\\x80\",\n\t\t\"\\xe2\\x93\\x9b\" => \"\\xe2\\x93\\x81\",\t\t\"\\xe2\\x93\\x9c\" => \"\\xe2\\x93\\x82\",\t\t\"\\xe2\\x93\\x9d\" => \"\\xe2\\x93\\x83\",\t\t\"\\xe2\\x93\\x9e\" => \"\\xe2\\x93\\x84\",\n\t\t\"\\xe2\\x93\\x9f\" => \"\\xe2\\x93\\x85\",\t\t\"\\xe2\\x93\\xa0\" => \"\\xe2\\x93\\x86\",\t\t\"\\xe2\\x93\\xa1\" => \"\\xe2\\x93\\x87\",\t\t\"\\xe2\\x93\\xa2\" => \"\\xe2\\x93\\x88\",\n\t\t\"\\xe2\\x93\\xa3\" => \"\\xe2\\x93\\x89\",\t\t\"\\xe2\\x93\\xa4\" => \"\\xe2\\x93\\x8a\",\t\t\"\\xe2\\x93\\xa5\" => \"\\xe2\\x93\\x8b\",\t\t\"\\xe2\\x93\\xa6\" => \"\\xe2\\x93\\x8c\",\n\t\t\"\\xe2\\x93\\xa7\" => \"\\xe2\\x93\\x8d\",\t\t\"\\xe2\\x93\\xa8\" => \"\\xe2\\x93\\x8e\",\t\t\"\\xe2\\x93\\xa9\" => \"\\xe2\\x93\\x8f\",\t\t\"\\xe2\\xb0\\xb0\" => \"\\xe2\\xb0\\x80\",\n\t\t\"\\xe2\\xb0\\xb1\" => \"\\xe2\\xb0\\x81\",\t\t\"\\xe2\\xb0\\xb2\" => \"\\xe2\\xb0\\x82\",\t\t\"\\xe2\\xb0\\xb3\" => \"\\xe2\\xb0\\x83\",\t\t\"\\xe2\\xb0\\xb4\" => \"\\xe2\\xb0\\x84\",\n\t\t\"\\xe2\\xb0\\xb5\" => \"\\xe2\\xb0\\x85\",\t\t\"\\xe2\\xb0\\xb6\" => \"\\xe2\\xb0\\x86\",\t\t\"\\xe2\\xb0\\xb7\" => \"\\xe2\\xb0\\x87\",\t\t\"\\xe2\\xb0\\xb8\" => \"\\xe2\\xb0\\x88\",\n\t\t\"\\xe2\\xb0\\xb9\" => \"\\xe2\\xb0\\x89\",\t\t\"\\xe2\\xb0\\xba\" => \"\\xe2\\xb0\\x8a\",\t\t\"\\xe2\\xb0\\xbb\" => \"\\xe2\\xb0\\x8b\",\t\t\"\\xe2\\xb0\\xbc\" => \"\\xe2\\xb0\\x8c\",\n\t\t\"\\xe2\\xb0\\xbd\" => \"\\xe2\\xb0\\x8d\",\t\t\"\\xe2\\xb0\\xbe\" => \"\\xe2\\xb0\\x8e\",\t\t\"\\xe2\\xb0\\xbf\" => \"\\xe2\\xb0\\x8f\",\t\t\"\\xe2\\xb1\\x80\" => \"\\xe2\\xb0\\x90\",\n\t\t\"\\xe2\\xb1\\x81\" => \"\\xe2\\xb0\\x91\",\t\t\"\\xe2\\xb1\\x82\" => \"\\xe2\\xb0\\x92\",\t\t\"\\xe2\\xb1\\x83\" => \"\\xe2\\xb0\\x93\",\t\t\"\\xe2\\xb1\\x84\" => \"\\xe2\\xb0\\x94\",\n\t\t\"\\xe2\\xb1\\x85\" => \"\\xe2\\xb0\\x95\",\t\t\"\\xe2\\xb1\\x86\" => \"\\xe2\\xb0\\x96\",\t\t\"\\xe2\\xb1\\x87\" => \"\\xe2\\xb0\\x97\",\t\t\"\\xe2\\xb1\\x88\" => \"\\xe2\\xb0\\x98\",\n\t\t\"\\xe2\\xb1\\x89\" => \"\\xe2\\xb0\\x99\",\t\t\"\\xe2\\xb1\\x8a\" => \"\\xe2\\xb0\\x9a\",\t\t\"\\xe2\\xb1\\x8b\" => \"\\xe2\\xb0\\x9b\",\t\t\"\\xe2\\xb1\\x8c\" => \"\\xe2\\xb0\\x9c\",\n\t\t\"\\xe2\\xb1\\x8d\" => \"\\xe2\\xb0\\x9d\",\t\t\"\\xe2\\xb1\\x8e\" => \"\\xe2\\xb0\\x9e\",\t\t\"\\xe2\\xb1\\x8f\" => \"\\xe2\\xb0\\x9f\",\t\t\"\\xe2\\xb1\\x90\" => \"\\xe2\\xb0\\xa0\",\n\t\t\"\\xe2\\xb1\\x91\" => \"\\xe2\\xb0\\xa1\",\t\t\"\\xe2\\xb1\\x92\" => \"\\xe2\\xb0\\xa2\",\t\t\"\\xe2\\xb1\\x93\" => \"\\xe2\\xb0\\xa3\",\t\t\"\\xe2\\xb1\\x94\" => \"\\xe2\\xb0\\xa4\",\n\t\t\"\\xe2\\xb1\\x95\" => \"\\xe2\\xb0\\xa5\",\t\t\"\\xe2\\xb1\\x96\" => \"\\xe2\\xb0\\xa6\",\t\t\"\\xe2\\xb1\\x97\" => \"\\xe2\\xb0\\xa7\",\t\t\"\\xe2\\xb1\\x98\" => \"\\xe2\\xb0\\xa8\",\n\t\t\"\\xe2\\xb1\\x99\" => \"\\xe2\\xb0\\xa9\",\t\t\"\\xe2\\xb1\\x9a\" => \"\\xe2\\xb0\\xaa\",\t\t\"\\xe2\\xb1\\x9b\" => \"\\xe2\\xb0\\xab\",\t\t\"\\xe2\\xb1\\x9c\" => \"\\xe2\\xb0\\xac\",\n\t\t\"\\xe2\\xb1\\x9d\" => \"\\xe2\\xb0\\xad\",\t\t\"\\xe2\\xb1\\x9e\" => \"\\xe2\\xb0\\xae\",\t\t\"\\xe2\\xb1\\xa1\" => \"\\xe2\\xb1\\xa0\",\t\t\"\\xc9\\xab\" => \"\\xe2\\xb1\\xa2\",\n\t\t\"\\xe1\\xb5\\xbd\" => \"\\xe2\\xb1\\xa3\",\t\t\"\\xc9\\xbd\" => \"\\xe2\\xb1\\xa4\",\t\t\"\\xe2\\xb1\\xa8\" => \"\\xe2\\xb1\\xa7\",\t\t\"\\xe2\\xb1\\xaa\" => \"\\xe2\\xb1\\xa9\",\n\t\t\"\\xe2\\xb1\\xac\" => \"\\xe2\\xb1\\xab\",\t\t\"\\xe2\\xb1\\xb6\" => \"\\xe2\\xb1\\xb5\",\t\t\"\\xe2\\xb2\\x81\" => \"\\xe2\\xb2\\x80\",\t\t\"\\xe2\\xb2\\x83\" => \"\\xe2\\xb2\\x82\",\n\t\t\"\\xe2\\xb2\\x85\" => \"\\xe2\\xb2\\x84\",\t\t\"\\xe2\\xb2\\x87\" => \"\\xe2\\xb2\\x86\",\t\t\"\\xe2\\xb2\\x89\" => \"\\xe2\\xb2\\x88\",\t\t\"\\xe2\\xb2\\x8b\" => \"\\xe2\\xb2\\x8a\",\n\t\t\"\\xe2\\xb2\\x8d\" => \"\\xe2\\xb2\\x8c\",\t\t\"\\xe2\\xb2\\x8f\" => \"\\xe2\\xb2\\x8e\",\t\t\"\\xe2\\xb2\\x91\" => \"\\xe2\\xb2\\x90\",\t\t\"\\xe2\\xb2\\x93\" => \"\\xe2\\xb2\\x92\",\n\t\t\"\\xe2\\xb2\\x95\" => \"\\xe2\\xb2\\x94\",\t\t\"\\xe2\\xb2\\x97\" => \"\\xe2\\xb2\\x96\",\t\t\"\\xe2\\xb2\\x99\" => \"\\xe2\\xb2\\x98\",\t\t\"\\xe2\\xb2\\x9b\" => \"\\xe2\\xb2\\x9a\",\n\t\t\"\\xe2\\xb2\\x9d\" => \"\\xe2\\xb2\\x9c\",\t\t\"\\xe2\\xb2\\x9f\" => \"\\xe2\\xb2\\x9e\",\t\t\"\\xe2\\xb2\\xa1\" => \"\\xe2\\xb2\\xa0\",\t\t\"\\xe2\\xb2\\xa3\" => \"\\xe2\\xb2\\xa2\",\n\t\t\"\\xe2\\xb2\\xa5\" => \"\\xe2\\xb2\\xa4\",\t\t\"\\xe2\\xb2\\xa7\" => \"\\xe2\\xb2\\xa6\",\t\t\"\\xe2\\xb2\\xa9\" => \"\\xe2\\xb2\\xa8\",\t\t\"\\xe2\\xb2\\xab\" => \"\\xe2\\xb2\\xaa\",\n\t\t\"\\xe2\\xb2\\xad\" => \"\\xe2\\xb2\\xac\",\t\t\"\\xe2\\xb2\\xaf\" => \"\\xe2\\xb2\\xae\",\t\t\"\\xe2\\xb2\\xb1\" => \"\\xe2\\xb2\\xb0\",\t\t\"\\xe2\\xb2\\xb3\" => \"\\xe2\\xb2\\xb2\",\n\t\t\"\\xe2\\xb2\\xb5\" => \"\\xe2\\xb2\\xb4\",\t\t\"\\xe2\\xb2\\xb7\" => \"\\xe2\\xb2\\xb6\",\t\t\"\\xe2\\xb2\\xb9\" => \"\\xe2\\xb2\\xb8\",\t\t\"\\xe2\\xb2\\xbb\" => \"\\xe2\\xb2\\xba\",\n\t\t\"\\xe2\\xb2\\xbd\" => \"\\xe2\\xb2\\xbc\",\t\t\"\\xe2\\xb2\\xbf\" => \"\\xe2\\xb2\\xbe\",\t\t\"\\xe2\\xb3\\x81\" => \"\\xe2\\xb3\\x80\",\t\t\"\\xe2\\xb3\\x83\" => \"\\xe2\\xb3\\x82\",\n\t\t\"\\xe2\\xb3\\x85\" => \"\\xe2\\xb3\\x84\",\t\t\"\\xe2\\xb3\\x87\" => \"\\xe2\\xb3\\x86\",\t\t\"\\xe2\\xb3\\x89\" => \"\\xe2\\xb3\\x88\",\t\t\"\\xe2\\xb3\\x8b\" => \"\\xe2\\xb3\\x8a\",\n\t\t\"\\xe2\\xb3\\x8d\" => \"\\xe2\\xb3\\x8c\",\t\t\"\\xe2\\xb3\\x8f\" => \"\\xe2\\xb3\\x8e\",\t\t\"\\xe2\\xb3\\x91\" => \"\\xe2\\xb3\\x90\",\t\t\"\\xe2\\xb3\\x93\" => \"\\xe2\\xb3\\x92\",\n\t\t\"\\xe2\\xb3\\x95\" => \"\\xe2\\xb3\\x94\",\t\t\"\\xe2\\xb3\\x97\" => \"\\xe2\\xb3\\x96\",\t\t\"\\xe2\\xb3\\x99\" => \"\\xe2\\xb3\\x98\",\t\t\"\\xe2\\xb3\\x9b\" => \"\\xe2\\xb3\\x9a\",\n\t\t\"\\xe2\\xb3\\x9d\" => \"\\xe2\\xb3\\x9c\",\t\t\"\\xe2\\xb3\\x9f\" => \"\\xe2\\xb3\\x9e\",\t\t\"\\xe2\\xb3\\xa1\" => \"\\xe2\\xb3\\xa0\",\t\t\"\\xe2\\xb3\\xa3\" => \"\\xe2\\xb3\\xa2\",\n\t\t\"ff\" => \"\\xef\\xac\\x80\",\t\"fi\" => \"\\xef\\xac\\x81\",\t\"fl\" => \"\\xef\\xac\\x82\",\t\"ffi\" => \"\\xef\\xac\\x83\",\n\t\t\"ffl\" => \"\\xef\\xac\\x84\",\t\"st\" => \"\\xef\\xac\\x85\",\t\"st\" => \"\\xef\\xac\\x86\",\t\"\\xd5\\xb4\\xd5\\xb6\" => \"\\xef\\xac\\x93\",\n\t\t\"\\xd5\\xb4\\xd5\\xa5\" => \"\\xef\\xac\\x94\",\t\"\\xd5\\xb4\\xd5\\xab\" => \"\\xef\\xac\\x95\",\t\"\\xd5\\xbe\\xd5\\xb6\" => \"\\xef\\xac\\x96\",\t\"\\xd5\\xb4\\xd5\\xad\" => \"\\xef\\xac\\x97\",\n\t\t\"\\xef\\xbd\\x81\" => \"\\xef\\xbc\\xa1\",\t\t\"\\xef\\xbd\\x82\" => \"\\xef\\xbc\\xa2\",\t\t\"\\xef\\xbd\\x83\" => \"\\xef\\xbc\\xa3\",\t\t\"\\xef\\xbd\\x84\" => \"\\xef\\xbc\\xa4\",\n\t\t\"\\xef\\xbd\\x85\" => \"\\xef\\xbc\\xa5\",\t\t\"\\xef\\xbd\\x86\" => \"\\xef\\xbc\\xa6\",\t\t\"\\xef\\xbd\\x87\" => \"\\xef\\xbc\\xa7\",\t\t\"\\xef\\xbd\\x88\" => \"\\xef\\xbc\\xa8\",\n\t\t\"\\xef\\xbd\\x89\" => \"\\xef\\xbc\\xa9\",\t\t\"\\xef\\xbd\\x8a\" => \"\\xef\\xbc\\xaa\",\t\t\"\\xef\\xbd\\x8b\" => \"\\xef\\xbc\\xab\",\t\t\"\\xef\\xbd\\x8c\" => \"\\xef\\xbc\\xac\",\n\t\t\"\\xef\\xbd\\x8d\" => \"\\xef\\xbc\\xad\",\t\"\\xef\\xbd\\x8e\" => \"\\xef\\xbc\\xae\",\t\t\"\\xef\\xbd\\x8f\" => \"\\xef\\xbc\\xaf\",\t\t\"\\xef\\xbd\\x90\" => \"\\xef\\xbc\\xb0\",\n\t\t\"\\xef\\xbd\\x91\" => \"\\xef\\xbc\\xb1\",\t\t\"\\xef\\xbd\\x92\" => \"\\xef\\xbc\\xb2\",\t\t\"\\xef\\xbd\\x93\" => \"\\xef\\xbc\\xb3\",\t\t\"\\xef\\xbd\\x94\" => \"\\xef\\xbc\\xb4\",\n\t\t\"\\xef\\xbd\\x95\" => \"\\xef\\xbc\\xb5\",\t\t\"\\xef\\xbd\\x96\" => \"\\xef\\xbc\\xb6\",\t\t\"\\xef\\xbd\\x97\" => \"\\xef\\xbc\\xb7\",\t\"\\xef\\xbd\\x98\" => \"\\xef\\xbc\\xb8\",\n\t\t\"\\xef\\xbd\\x99\" => \"\\xef\\xbc\\xb9\",\t\t\"\\xef\\xbd\\x9a\" => \"\\xef\\xbc\\xba\",\t\t\"\\xf0\\x90\\x90\\xa8\" => \"\\xf0\\x90\\x90\\x80\",\t\"\\xf0\\x90\\x90\\xa9\" => \"\\xf0\\x90\\x90\\x81\",\n\t\t\"\\xf0\\x90\\x90\\xaa\" => \"\\xf0\\x90\\x90\\x82\",\t\"\\xf0\\x90\\x90\\xab\" => \"\\xf0\\x90\\x90\\x83\",\t\"\\xf0\\x90\\x90\\xac\" => \"\\xf0\\x90\\x90\\x84\",\t\"\\xf0\\x90\\x90\\xad\" => \"\\xf0\\x90\\x90\\x85\",\n\t\t\"\\xf0\\x90\\x90\\xae\" => \"\\xf0\\x90\\x90\\x86\",\t\"\\xf0\\x90\\x90\\xaf\" => \"\\xf0\\x90\\x90\\x87\",\t\"\\xf0\\x90\\x90\\xb0\" => \"\\xf0\\x90\\x90\\x88\",\t\"\\xf0\\x90\\x90\\xb1\" => \"\\xf0\\x90\\x90\\x89\",\n\t\t\"\\xf0\\x90\\x90\\xb2\" => \"\\xf0\\x90\\x90\\x8a\",\t\"\\xf0\\x90\\x90\\xb3\" => \"\\xf0\\x90\\x90\\x8b\",\t\"\\xf0\\x90\\x90\\xb4\" => \"\\xf0\\x90\\x90\\x8c\",\t\"\\xf0\\x90\\x90\\xb5\" => \"\\xf0\\x90\\x90\\x8d\",\n\t\t\"\\xf0\\x90\\x90\\xb6\" => \"\\xf0\\x90\\x90\\x8e\",\t\"\\xf0\\x90\\x90\\xb7\" => \"\\xf0\\x90\\x90\\x8f\",\t\"\\xf0\\x90\\x90\\xb8\" => \"\\xf0\\x90\\x90\\x90\",\t\"\\xf0\\x90\\x90\\xb9\" => \"\\xf0\\x90\\x90\\x91\",\n\t\t\"\\xf0\\x90\\x90\\xba\" => \"\\xf0\\x90\\x90\\x92\",\t\"\\xf0\\x90\\x90\\xbb\" => \"\\xf0\\x90\\x90\\x93\",\t\"\\xf0\\x90\\x90\\xbc\" => \"\\xf0\\x90\\x90\\x94\",\t\"\\xf0\\x90\\x90\\xbd\" => \"\\xf0\\x90\\x90\\x95\",\n\t\t\"\\xf0\\x90\\x90\\xbe\" => \"\\xf0\\x90\\x90\\x96\",\t\"\\xf0\\x90\\x90\\xbf\" => \"\\xf0\\x90\\x90\\x97\",\t\"\\xf0\\x90\\x91\\x80\" => \"\\xf0\\x90\\x90\\x98\",\t\"\\xf0\\x90\\x91\\x81\" => \"\\xf0\\x90\\x90\\x99\",\n\t\t\"\\xf0\\x90\\x91\\x82\" => \"\\xf0\\x90\\x90\\x9a\",\t\"\\xf0\\x90\\x91\\x83\" => \"\\xf0\\x90\\x90\\x9b\",\t\"\\xf0\\x90\\x91\\x84\" => \"\\xf0\\x90\\x90\\x9c\",\t\"\\xf0\\x90\\x91\\x85\" => \"\\xf0\\x90\\x90\\x9d\",\n\t\t\"\\xf0\\x90\\x91\\x86\" => \"\\xf0\\x90\\x90\\x9e\",\t\"\\xf0\\x90\\x91\\x87\" => \"\\xf0\\x90\\x90\\x9f\",\t\"\\xf0\\x90\\x91\\x88\" => \"\\xf0\\x90\\x90\\xa0\",\t\"\\xf0\\x90\\x91\\x89\" => \"\\xf0\\x90\\x90\\xa1\",\n\t\t\"\\xf0\\x90\\x91\\x8a\" => \"\\xf0\\x90\\x90\\xa2\",\t\"\\xf0\\x90\\x91\\x8b\" => \"\\xf0\\x90\\x90\\xa3\",\t\"\\xf0\\x90\\x91\\x8c\" => \"\\xf0\\x90\\x90\\xa4\",\t\"\\xf0\\x90\\x91\\x8d\" => \"\\xf0\\x90\\x90\\xa5\",\n\t\t\"\\xf0\\x90\\x90\\xa6\" => \"\\xf0\\x90\\x91\\x8e\",\t\"\\xf0\\x90\\x90\\xa7\" => \"\\xf0\\x90\\x91\\x8f\",\n\t);\n\n\treturn strtr($string, $case_folding);\n}\n\n/**\n * Fixes corrupted serialized strings after a character set conversion.\n */\nfunction fix_serialized_columns()\n{\n\tglobal $smcFunc;\n\n\t$request = $smcFunc['db_query']('', '\n\t\tSELECT id_action, extra\n\t\tFROM {db_prefix}log_actions\n\t\tWHERE action IN ({string:remove}, {string:delete})',\n\t\tarray(\n\t\t\t'remove' => 'remove',\n\t\t\t'delete' => 'delete',\n\t\t)\n\t);\n\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t{\n\t\tif (@unserialize($row['extra']) === false && preg_match('~^(a:3:{s:5:\"topic\";i:\\d+;s:7:\"subject\";s:)(\\d+):\"(.+)\"(;s:6:\"member\";s:5:\"\\d+\";})$~', $row['extra'], $matches) === 1)\n\t\t\t$smcFunc['db_query']('', '\n\t\t\t\tUPDATE {db_prefix}log_actions\n\t\t\t\tSET extra = {string:extra}\n\t\t\t\tWHERE id_action = {int:current_action}',\n\t\t\t\tarray(\n\t\t\t\t\t'current_action' => $row['id_action'],\n\t\t\t\t\t'extra' => $matches[1] . strlen($matches[3]) . ':\"' . $matches[3] . '\"' . $matches[4],\n\t\t\t\t)\n\t\t\t);\n\t}\n\t$smcFunc['db_free_result']($request);\n\n\t// Refresh some cached data.\n\tupdateSettings(array(\n\t\t'memberlist_updated' => time(),\n\t));\n\n}\n\n?>", "<?php\n\n/**\n * This file contains a standard way of displaying side/drop down menus for SMF.\n *\n * Simple Machines Forum (SMF)\n *\n * @package SMF\n * @author Simple Machines http://www.simplemachines.org\n * @copyright 2016 Simple Machines and individual contributors\n * @license http://www.simplemachines.org/about/smf/license.php BSD\n *\n * @version 2.1 Beta 3\n */\n\nif (!defined('SMF'))\n\tdie('No direct access...');\n\n/**\n * Create a menu.\n * @param array $menuData An array of menu data\n * @param array $menuOptions An array of menu options\n * @return boolean|array False if nothing to show or an array of info about the selected menu item\n */\nfunction createMenu($menuData, $menuOptions = array())\n{\n\tglobal $context, $settings, $txt, $scripturl, $user_info;\n\n\t/* Note menuData is array of form:\n\n\t\tPossible fields:\n\t\t\tFor Section:\n\t\t\t\tstring $title:\t\tSection title.\n\t\t\t\tbool $enabled:\t\tShould section be shown?\n\t\t\t\tarray $areas:\t\tArray of areas within this section.\n\t\t\t\tarray $permission:\tPermission required to access the whole section.\n\n\t\t\tFor Areas:\n\t\t\t\tarray $permission:\tArray of permissions to determine who can access this area.\n\t\t\t\tstring $label:\t\tOptional text string for link (Otherwise $txt[$index] will be used)\n\t\t\t\tstring $file:\t\tName of source file required for this area.\n\t\t\t\tstring $function:\tFunction to call when area is selected.\n\t\t\t\tstring $custom_url:\tURL to use for this menu item.\n\t\t\t\tbool $enabled:\t\tShould this area even be accessible?\n\t\t\t\tbool $hidden:\t\tShould this area be visible?\n\t\t\t\tstring $select:\t\tIf set this item will not be displayed - instead the item indexed here shall be.\n\t\t\t\tarray $subsections:\tArray of subsections from this area.\n\n\t\t\tFor Subsections:\n\t\t\t\tstring 0:\t\tText label for this subsection.\n\t\t\t\tarray 1:\t\tArray of permissions to check for this subsection.\n\t\t\t\tbool 2:\t\t\tIs this the default subaction - if not set for any will default to first...\n\t\t\t\tbool enabled:\t\tBool to say whether this should be enabled or not.\n\t*/\n\n\t// Every menu gets a unique ID, these are shown in first in, first out order.\n\t$context['max_menu_id'] = isset($context['max_menu_id']) ? $context['max_menu_id'] + 1 : 1;\n\n\t// This will be all the data for this menu - and we'll make a shortcut to it to aid readability here.\n\t$context['menu_data_' . $context['max_menu_id']] = array();\n\t$menu_context = &$context['menu_data_' . $context['max_menu_id']];\n\n\t// What is the general action of this menu (i.e. $scripturl?action=XXXX.\n\t$menu_context['current_action'] = isset($menuOptions['action']) ? $menuOptions['action'] : $context['current_action'];\n\n\t// Allow extend *any* menu with a single hook\n\tif (!empty($menu_context['current_action']))\n\t\tcall_integration_hook('integrate_' . $menu_context['current_action'] . '_areas', array(&$menuData));\n\n\t// What is the current area selected?\n\tif (isset($menuOptions['current_area']) || isset($_GET['area']))\n\t\t$menu_context['current_area'] = isset($menuOptions['current_area']) ? $menuOptions['current_area'] : $_GET['area'];\n\n\t// Build a list of additional parameters that should go in the URL.\n\t$menu_context['extra_parameters'] = '';\n\tif (!empty($menuOptions['extra_url_parameters']))\n\t\tforeach ($menuOptions['extra_url_parameters'] as $key => $value)\n\t\t\t$menu_context['extra_parameters'] .= ';' . $key . '=' . $value;\n\n\t// Only include the session ID in the URL if it's strictly necessary.\n\tif (empty($menuOptions['disable_url_session_check']))\n\t\t$menu_context['extra_parameters'] .= ';' . $context['session_var'] . '=' . $context['session_id'];\n\n\t$include_data = array();\n\n\t// Now setup the context correctly.\n\tforeach ($menuData as $section_id => $section)\n\t{\n\t\t// Is this enabled - or has as permission check - which fails?\n\t\tif ((isset($section['enabled']) && $section['enabled'] == false) || (isset($section['permission']) && !allowedTo($section['permission'])))\n\t\t\tcontinue;\n\n\t\t// Now we cycle through the sections to pick the right area.\n\t\tforeach ($section['areas'] as $area_id => $area)\n\t\t{\n\t\t\t// Can we do this?\n\t\t\tif ((!isset($area['enabled']) || $area['enabled'] != false) && (empty($area['permission']) || allowedTo($area['permission'])))\n\t\t\t{\n\t\t\t\t// Add it to the context... if it has some form of name!\n\t\t\t\tif (isset($area['label']) || (isset($txt[$area_id]) && !isset($area['select'])))\n\t\t\t\t{\n\t\t\t\t\t// If we haven't got an area then the first valid one is our choice.\n\t\t\t\t\tif (!isset($menu_context['current_area']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$menu_context['current_area'] = $area_id;\n\t\t\t\t\t\t$include_data = $area;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If this is hidden from view don't do the rest.\n\t\t\t\t\tif (empty($area['hidden']))\n\t\t\t\t\t{\n\t\t\t\t\t\t// First time this section?\n\t\t\t\t\t\tif (!isset($menu_context['sections'][$section_id]))\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['title'] = $section['title'];\n\n\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id] = array('label' => isset($area['label']) ? $area['label'] : $txt[$area_id]);\n\t\t\t\t\t\t// We'll need the ID as well...\n\t\t\t\t\t\t$menu_context['sections'][$section_id]['id'] = $section_id;\n\t\t\t\t\t\t// Does it have a custom URL?\n\t\t\t\t\t\tif (isset($area['custom_url']))\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['url'] = $area['custom_url'];\n\n\t\t\t\t\t\t// Does this area have its own icon?\n\t\t\t\t\t\tif (!isset($area['force_menu_into_arms_of_another_menu']) && $user_info['name'] == 'iamanoompaloompa')\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id] = unserialize(base64_decode('YTozOntzOjU6ImxhYmVsIjtzOjEyOiJPb21wYSBMb29tcGEiO3M6MzoidXJsIjtzOjQzOiJodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL09vbXBhX0xvb21wYXM/IjtzOjQ6Imljb24iO3M6ODY6IjxpbWcgc3JjPSJodHRwOi8vd3d3LnNpbXBsZW1hY2hpbmVzLm9yZy9pbWFnZXMvb29tcGEuZ2lmIiBhbHQ9IkknbSBhbiBPb21wYSBMb29tcGEiIC8+Ijt9'));\n\t\t\t\t\t\telseif (isset($area['icon']) && file_exists($settings['theme_dir'] . '/images/admin/' . $area['icon']))\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon'] = '<img src=\"' . $settings['images_url'] . '/admin/' . $area['icon'] . '\" alt=\"\">';\n\t\t\t\t\t\telseif (isset($area['icon']) && file_exists($settings['default_theme_dir'] . '/images/admin/' . $area['icon']))\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon'] = '<img src=\"' . $settings['default_images_url'] . '/admin/' . $area['icon'] . '\" alt=\"\">';\n\t\t\t\t\t\telseif (isset($area['icon']))\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon'] = '<span class=\"generic_icons ' . $area['icon'] . '\"></span>';\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon'] = '<span class=\"generic_icons ' . $area_id . '\"></span>';\n\n\t\t\t\t\t\tif (isset($area['icon_class']) && empty($menu_context['sections'][$section_id]['areas'][$area_id]['icon']))\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon_class'] = $menu_context['current_action'] . '_menu_icon ' . $area['icon_class'];\n\t\t\t\t\t\telseif (isset($area['icon']))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ((substr($area['icon'], -4) === '.png' || substr($area['icon'], -4) === '.gif') && file_exists($settings['theme_dir'] . '/images/admin/big/' . $area['icon']))\n\t\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon_file'] = $settings['theme_url'] . '/images/admin/big/' . $area['icon'];\n\t\t\t\t\t\t\telseif ((substr($area['icon'], -4) === '.png' || substr($area['icon'], -4) === '.gif') && file_exists($settings['default_theme_dir'] . '/images/admin/big/' . $area['icon']))\n\t\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon_file'] = $settings['default_theme_url'] . '/images/admin/big/' . $area['icon'];\n\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon_class'] = $menu_context['current_action'] . '_menu_icon ' . str_replace(array('.png', '.gif'), '', $area['icon']);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon_class'] = $menu_context['current_action'] . '_menu_icon ' . str_replace(array('.png', '.gif'), '', $area_id);\n\n\t\t\t\t\t\t// Some areas may be listed but not active, which we show as greyed out.\n\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['inactive'] = !empty($area['inactive']);\n\n\t\t\t\t\t\t// Did it have subsections?\n\t\t\t\t\t\tif (!empty($area['subsections']))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['subsections'] = array();\n\t\t\t\t\t\t\t$first_sa = $last_sa = null;\n\t\t\t\t\t\t\tforeach ($area['subsections'] as $sa => $sub)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif ((empty($sub[1]) || allowedTo($sub[1])) && (!isset($sub['enabled']) || !empty($sub['enabled'])))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif ($first_sa == null)\n\t\t\t\t\t\t\t\t\t\t$first_sa = $sa;\n\n\t\t\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['subsections'][$sa] = array('label' => $sub[0]);\n\t\t\t\t\t\t\t\t\t// Custom URL?\n\t\t\t\t\t\t\t\t\tif (isset($sub['url']))\n\t\t\t\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['subsections'][$sa]['url'] = $sub['url'];\n\n\t\t\t\t\t\t\t\t\t// A bit complicated - but is this set?\n\t\t\t\t\t\t\t\t\tif ($menu_context['current_area'] == $area_id)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t// Save which is the first...\n\t\t\t\t\t\t\t\t\t\tif (empty($first_sa))\n\t\t\t\t\t\t\t\t\t\t\t$first_sa = $sa;\n\n\t\t\t\t\t\t\t\t\t\t// Is this the current subsection?\n\t\t\t\t\t\t\t\t\t\tif (isset($_REQUEST['sa']) && $_REQUEST['sa'] == $sa)\n\t\t\t\t\t\t\t\t\t\t\t$menu_context['current_subsection'] = $sa;\n\t\t\t\t\t\t\t\t\t\t// Otherwise is it the default?\n\t\t\t\t\t\t\t\t\t\telseif (!isset($menu_context['current_subsection']) && !empty($sub[2]))\n\t\t\t\t\t\t\t\t\t\t\t$menu_context['current_subsection'] = $sa;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Let's assume this is the last, for now.\n\t\t\t\t\t\t\t\t\t$last_sa = $sa;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Mark it as disabled...\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['subsections'][$sa]['disabled'] = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Set which one is first, last and selected in the group.\n\t\t\t\t\t\t\tif (!empty($menu_context['sections'][$section_id]['areas'][$area_id]['subsections']))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['subsections'][$context['right_to_left'] ? $last_sa : $first_sa]['is_first'] = true;\n\t\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['subsections'][$context['right_to_left'] ? $first_sa : $last_sa]['is_last'] = true;\n\n\t\t\t\t\t\t\t\tif ($menu_context['current_area'] == $area_id && !isset($menu_context['current_subsection']))\n\t\t\t\t\t\t\t\t\t$menu_context['current_subsection'] = $first_sa;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Is this the current section?\n\t\t\t\tif ($menu_context['current_area'] == $area_id && empty($found_section))\n\t\t\t\t{\n\t\t\t\t\t// Only do this once?\n\t\t\t\t\t$found_section = true;\n\n\t\t\t\t\t// Update the context if required - as we can have areas pretending to be others. ;)\n\t\t\t\t\t$menu_context['current_section'] = $section_id;\n\t\t\t\t\t$menu_context['current_area'] = isset($area['select']) ? $area['select'] : $area_id;\n\n\t\t\t\t\t// This will be the data we return.\n\t\t\t\t\t$include_data = $area;\n\t\t\t\t}\n\t\t\t\t// Make sure we have something in case it's an invalid area.\n\t\t\t\telseif (empty($found_section) && empty($include_data))\n\t\t\t\t{\n\t\t\t\t\t$menu_context['current_section'] = $section_id;\n\t\t\t\t\t$backup_area = isset($area['select']) ? $area['select'] : $area_id;\n\t\t\t\t\t$include_data = $area;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Should we use a custom base url, or use the default?\n\t$menu_context['base_url'] = isset($menuOptions['base_url']) ? $menuOptions['base_url'] : $scripturl . '?action=' . $menu_context['current_action'];\n\n\t// If we didn't find the area we were looking for go to a default one.\n\tif (isset($backup_area) && empty($found_section))\n\t\t$menu_context['current_area'] = $backup_area;\n\n\t// If there are sections quickly goes through all the sections to check if the base menu has an url\n\tif (!empty($menu_context['current_section']))\n\t{\n\t\t$menu_context['sections'][$menu_context['current_section']]['selected'] = true;\n\t\t$menu_context['sections'][$menu_context['current_section']]['areas'][$menu_context['current_area']]['selected'] = true;\n\t\tif (!empty($menu_context['sections'][$menu_context['current_section']]['areas'][$menu_context['current_area']]['subsections'][$context['current_subaction']]))\n\t\t\t$menu_context['sections'][$menu_context['current_section']]['areas'][$menu_context['current_area']]['subsections'][$context['current_subaction']]['selected'] = true;\n\n\t\tforeach ($menu_context['sections'] as $section_id => $section)\n\t\t\tforeach ($section['areas'] as $area_id => $area)\n\t\t\t{\n\t\t\t\tif (!isset($menu_context['sections'][$section_id]['url']))\n\t\t\t\t{\n\t\t\t\t\t$menu_context['sections'][$section_id]['url'] = isset($area['url']) ? $area['url'] : $menu_context['base_url'] . ';area=' . $area_id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t}\n\n\t// If still no data then return - nothing to show!\n\tif (empty($menu_context['sections']))\n\t{\n\t\t// Never happened!\n\t\t$context['max_menu_id']--;\n\t\tif ($context['max_menu_id'] == 0)\n\t\t\tunset($context['max_menu_id']);\n\n\t\treturn false;\n\t}\n\n\t// Almost there - load the template and add to the template layers.\n\tloadTemplate(isset($menuOptions['template_name']) ? $menuOptions['template_name'] : 'GenericMenu');\n\t$menu_context['layer_name'] = (isset($menuOptions['layer_name']) ? $menuOptions['layer_name'] : 'generic_menu') . '_dropdown';\n\t$context['template_layers'][] = $menu_context['layer_name'];\n\n\t// Check we had something - for sanity sake.\n\tif (empty($include_data))\n\t\treturn false;\n\n\t// Finally - return information on the selected item.\n\t$include_data += array(\n\t\t'current_action' => $menu_context['current_action'],\n\t\t'current_area' => $menu_context['current_area'],\n\t\t'current_section' => $menu_context['current_section'],\n\t\t'current_subsection' => !empty($menu_context['current_subsection']) ? $menu_context['current_subsection'] : '',\n\t);\n\n\treturn $include_data;\n}\n\n/**\n * Delete a menu.\n * @param string $menu_id The ID of the menu to destroy or 'last' for the most recent one\n * @return bool|void False if the menu doesn't exist, nothing otherwise\n */\nfunction destroyMenu($menu_id = 'last')\n{\n\tglobal $context;\n\n\t$menu_name = $menu_id == 'last' && isset($context['max_menu_id']) && isset($context['menu_data_' . $context['max_menu_id']]) ? 'menu_data_' . $context['max_menu_id'] : 'menu_data_' . $menu_id;\n\tif (!isset($context[$menu_name]))\n\t\treturn false;\n\n\t$layer_index = array_search($context[$menu_name]['layer_name'], $context['template_layers']);\n\tif ($layer_index !== false)\n\t\tunset($context['template_layers'][$layer_index]);\n\n\tunset($context[$menu_name]);\n}\n\n?>"], "fixing_code": ["<?php\n\n/**\n * This file has only one real task, showing the calendar.\n * Original module by Aaron O'Neil - aaron@mud-master.com\n *\n * Simple Machines Forum (SMF)\n *\n * @package SMF\n * @author Simple Machines http://www.simplemachines.org\n * @copyright 2016 Simple Machines and individual contributors\n * @license http://www.simplemachines.org/about/smf/license.php BSD\n *\n * @version 2.1 Beta 3\n */\n\nif (!defined('SMF'))\n\tdie('No direct access...');\n\n/**\n * Show the calendar.\n * It loads the specified month's events, holidays, and birthdays.\n * It requires the calendar_view permission.\n * It depends on the cal_enabled setting, and many of the other cal_ settings.\n * It uses the calendar_start_day theme option. (Monday/Sunday)\n * It uses the main sub template in the Calendar template.\n * It goes to the month and year passed in 'month' and 'year' by get or post.\n * It is accessed through ?action=calendar.\n * @return void\n */\nfunction CalendarMain()\n{\n\tglobal $txt, $context, $modSettings, $scripturl, $options, $sourcedir, $user_info, $smcFunc;\n\n\t// Permissions, permissions, permissions.\n\tisAllowedTo('calendar_view');\n\n\t// Some global template resources.\n\t$context['calendar_resources'] = array(\n\t\t'min_year' => $modSettings['cal_minyear'],\n\t\t'max_year' => $modSettings['cal_maxyear'],\n\t);\n\n\t// Doing something other than calendar viewing?\n\t$subActions = array(\n\t\t'ical' => 'iCalDownload',\n\t\t'post' => 'CalendarPost',\n\t);\n\n\tif (isset($_GET['sa']) && isset($subActions[$_GET['sa']]))\n\t\treturn call_helper($subActions[$_GET['sa']]);\n\n\t// You can't do anything if the calendar is off.\n\tif (empty($modSettings['cal_enabled']))\n\t\tfatal_lang_error('calendar_off', false);\n\n\t// This is gonna be needed...\n\tloadTemplate('Calendar');\n\tloadCSSFile('calendar.css', array('force_current' => false, 'validate' => true, 'rtl' => 'calendar.rtl.css'), 'smf_calendar');\n\n\t// Did the specify an individual event ID? If so, let's splice the year/month in to what we would otherwise be doing.\n\tif (isset($_GET['event']))\n\t{\n\t\t$evid = (int) $_GET['event'];\n\t\tif ($evid > 0)\n\t\t{\n\t\t\t$request = $smcFunc['db_query']('', '\n\t\t\t\tSELECT start_date\n\t\t\t\tFROM {db_prefix}calendar\n\t\t\t\tWHERE id_event = {int:event_id}',\n\t\t\t\tarray(\n\t\t\t\t\t'event_id' => $evid,\n\t\t\t\t)\n\t\t\t);\n\t\t\tif ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t\t{\n\t\t\t\t// We know the format is going to be in yyyy-mm-dd from the database, so let's run with that.\n\t\t\t\tlist($_REQUEST['year'], $_REQUEST['month']) = explode('-', $row['start_date']);\n\t\t\t\t$_REQUEST['year'] = (int) $_REQUEST['year'];\n\t\t\t\t$_REQUEST['month'] = (int) $_REQUEST['month'];\n\n\t\t\t\t// And we definitely don't want weekly view.\n\t\t\t\tunset ($_GET['viewweek']);\n\n\t\t\t\t// We might use this later.\n\t\t\t\t$context['selected_event'] = $evid;\n\t\t\t}\n\t\t\t$smcFunc['db_free_result']($request);\n\t\t}\n\t\tunset ($_GET['event']);\n\t}\n\n\t// Set the page title to mention the calendar ;).\n\t$context['page_title'] = $txt['calendar'];\n\n\t// Is this a week view?\n\t$context['view_week'] = isset($_GET['viewweek']);\n\n\t// Don't let search engines index weekly calendar pages.\n\tif ($context['view_week'])\n\t\t$context['robot_no_index'] = true;\n\n\t// Get the current day of month...\n\trequire_once($sourcedir . '/Subs-Calendar.php');\n\t$today = getTodayInfo();\n\n\t// If the month and year are not passed in, use today's date as a starting point.\n\t$curPage = array(\n\t\t'day' => isset($_REQUEST['day']) ? (int) $_REQUEST['day'] : $today['day'],\n\t\t'month' => isset($_REQUEST['month']) ? (int) $_REQUEST['month'] : $today['month'],\n\t\t'year' => isset($_REQUEST['year']) ? (int) $_REQUEST['year'] : $today['year']\n\t);\n\n\t// Make sure the year and month are in valid ranges.\n\tif ($curPage['month'] < 1 || $curPage['month'] > 12)\n\t\tfatal_lang_error('invalid_month', false);\n\tif ($curPage['year'] < $modSettings['cal_minyear'] || $curPage['year'] > $modSettings['cal_maxyear'])\n\t\tfatal_lang_error('invalid_year', false);\n\t// If we have a day clean that too.\n\tif ($context['view_week'])\n\t{\n\t\t// Note $isValid is -1 < PHP 5.1\n\t\t$isValid = mktime(0, 0, 0, $curPage['month'], $curPage['day'], $curPage['year']);\n\t\tif ($curPage['day'] > 31 || !$isValid || $isValid == -1)\n\t\t\tfatal_lang_error('invalid_day', false);\n\t}\n\n\t// Load all the context information needed to show the calendar grid.\n\t$calendarOptions = array(\n\t\t'start_day' => !empty($options['calendar_start_day']) ? $options['calendar_start_day'] : 0,\n\t\t'show_birthdays' => in_array($modSettings['cal_showbdays'], array(1, 2)),\n\t\t'show_events' => in_array($modSettings['cal_showevents'], array(1, 2)),\n\t\t'show_holidays' => in_array($modSettings['cal_showholidays'], array(1, 2)),\n\t\t'highlight' => array(\n\t\t\t'events' => isset($modSettings['cal_highlight_events']) ? $modSettings['cal_highlight_events'] : 0,\n\t\t\t'holidays' => isset($modSettings['cal_highlight_holidays']) ? $modSettings['cal_highlight_holidays'] : 0,\n\t\t\t'birthdays' => isset($modSettings['cal_highlight_birthdays']) ? $modSettings['cal_highlight_birthdays'] : 0,\n\t\t),\n\t\t'show_week_num' => true,\n\t\t'short_day_titles' => !empty($modSettings['cal_short_days']),\n\t\t'short_month_titles' => !empty($modSettings['cal_short_months']),\n\t\t'show_next_prev' => !empty($modSettings['cal_prev_next_links']),\n\t\t'show_week_links' => isset($modSettings['cal_week_links']) ? $modSettings['cal_week_links'] : 0,\n\t);\n\n\t// Load up the main view.\n\tif ($context['view_week'])\n\t\t$context['calendar_grid_main'] = getCalendarWeek($curPage['month'], $curPage['year'], $curPage['day'], $calendarOptions);\n\telse\n\t\t$context['calendar_grid_main'] = getCalendarGrid($curPage['month'], $curPage['year'], $calendarOptions);\n\n\t// Load up the previous and next months.\n\t$context['calendar_grid_current'] = getCalendarGrid($curPage['month'], $curPage['year'], $calendarOptions);\n\n\t// Only show previous month if it isn't pre-January of the min-year\n\tif ($context['calendar_grid_current']['previous_calendar']['year'] > $modSettings['cal_minyear'] || $curPage['month'] != 1)\n\t\t$context['calendar_grid_prev'] = getCalendarGrid($context['calendar_grid_current']['previous_calendar']['month'], $context['calendar_grid_current']['previous_calendar']['year'], $calendarOptions, true);\n\n\t// Only show next month if it isn't post-December of the max-year\n\tif ($context['calendar_grid_current']['next_calendar']['year'] < $modSettings['cal_maxyear'] || $curPage['month'] != 12)\n\t\t$context['calendar_grid_next'] = getCalendarGrid($context['calendar_grid_current']['next_calendar']['month'], $context['calendar_grid_current']['next_calendar']['year'], $calendarOptions);\n\n\t// Basic template stuff.\n\t$context['allow_calendar_event'] = allowedTo('calendar_post');\n\n\t// If you don't allow events not linked to posts and you're not an admin, we have more work to do...\n\tif ($context['allow_calendar_event'] && empty($modSettings['cal_allow_unlinked']) && !$user_info['is_admin'])\n\t{\n\t\t$boards_can_post = boardsAllowedTo('post_new');\n\t\t$context['allow_calendar_event'] &= !empty($boards_can_post);\n\t}\n\n\t$context['can_post'] = $context['allow_calendar_event'];\n\t$context['current_day'] = $curPage['day'];\n\t$context['current_month'] = $curPage['month'];\n\t$context['current_year'] = $curPage['year'];\n\t$context['show_all_birthdays'] = isset($_GET['showbd']);\n\t$context['blocks_disabled'] = !empty($modSettings['cal_disable_prev_next']) ? 1 : 0;\n\n\t// Set the page title to mention the month or week, too\n\t$context['page_title'] .= ' - ' . ($context['view_week'] ? $context['calendar_grid_main']['week_title'] : $txt['months'][$context['current_month']] . ' ' . $context['current_year']);\n\n\t// Load up the linktree!\n\t$context['linktree'][] = array(\n\t\t'url' => $scripturl . '?action=calendar',\n\t\t'name' => $txt['calendar']\n\t);\n\t// Add the current month to the linktree.\n\t$context['linktree'][] = array(\n\t\t'url' => $scripturl . '?action=calendar;year=' . $context['current_year'] . ';month=' . $context['current_month'],\n\t\t'name' => $txt['months'][$context['current_month']] . ' ' . $context['current_year']\n\t);\n\t// If applicable, add the current week to the linktree.\n\tif ($context['view_week'])\n\t\t$context['linktree'][] = array(\n\t\t\t'url' => $scripturl . '?action=calendar;viewweek;year=' . $context['current_year'] . ';month=' . $context['current_month'] . ';day=' . $context['current_day'],\n\t\t\t'name' => $context['calendar_grid_main']['week_title'],\n\t\t);\n\n\t// Build the calendar button array.\n\t$context['calendar_buttons'] = array(\n\t\t'post_event' => array('test' => 'can_post', 'text' => 'calendar_post_event', 'image' => 'calendarpe.png', 'lang' => true, 'url' => $scripturl . '?action=calendar;sa=post;month=' . $context['current_month'] . ';year=' . $context['current_year'] . ';' . $context['session_var'] . '=' . $context['session_id']),\n\t);\n\n\t// Allow mods to add additional buttons here\n\tcall_integration_hook('integrate_calendar_buttons');\n}\n\n/**\n * This function processes posting/editing/deleting a calendar event.\n *\n * \t- calls {@link Post.php|Post() Post()} function if event is linked to a post.\n *  - calls {@link Subs-Calendar.php|insertEvent() insertEvent()} to insert the event if not linked to post.\n *\n * It requires the calendar_post permission to use.\n * It uses the event_post sub template in the Calendar template.\n * It is accessed with ?action=calendar;sa=post.\n */\nfunction CalendarPost()\n{\n\tglobal $context, $txt, $user_info, $sourcedir, $scripturl;\n\tglobal $modSettings, $topic, $smcFunc;\n\n\t// Well - can they?\n\tisAllowedTo('calendar_post');\n\n\t// We need this for all kinds of useful functions.\n\trequire_once($sourcedir . '/Subs-Calendar.php');\n\n\t// Cast this for safety...\n\tif (isset($_REQUEST['eventid']))\n\t\t$_REQUEST['eventid'] = (int) $_REQUEST['eventid'];\n\n\t// Submitting?\n\tif (isset($_POST[$context['session_var']], $_REQUEST['eventid']))\n\t{\n\t\tcheckSession();\n\n\t\t// Validate the post...\n\t\tif (!isset($_POST['link_to_board']))\n\t\t\tvalidateEventPost();\n\n\t\t// If you're not allowed to edit any events, you have to be the poster.\n\t\tif ($_REQUEST['eventid'] > 0 && !allowedTo('calendar_edit_any'))\n\t\t\tisAllowedTo('calendar_edit_' . (!empty($user_info['id']) && getEventPoster($_REQUEST['eventid']) == $user_info['id'] ? 'own' : 'any'));\n\n\t\t// New - and directing?\n\t\tif (isset($_POST['link_to_board']) || empty($modSettings['cal_allow_unlinked']))\n\t\t{\n\t\t\t$_REQUEST['calendar'] = 1;\n\t\t\trequire_once($sourcedir . '/Post.php');\n\t\t\treturn Post();\n\t\t}\n\t\t// New...\n\t\telseif ($_REQUEST['eventid'] == -1)\n\t\t{\n\t\t\t$eventOptions = array(\n\t\t\t\t'board' => 0,\n\t\t\t\t'topic' => 0,\n\t\t\t\t'title' => $smcFunc['substr']($_REQUEST['evtitle'], 0, 100),\n\t\t\t\t'member' => $user_info['id'],\n\t\t\t\t'start_date' => sprintf('%04d-%02d-%02d', $_POST['year'], $_POST['month'], $_POST['day']),\n\t\t\t\t'span' => isset($_POST['span']) && $_POST['span'] > 0 ? min((int) $modSettings['cal_maxspan'], (int) $_POST['span'] - 1) : 0,\n\t\t\t);\n\t\t\tinsertEvent($eventOptions);\n\t\t}\n\n\t\t// Deleting...\n\t\telseif (isset($_REQUEST['deleteevent']))\n\t\t\tremoveEvent($_REQUEST['eventid']);\n\n\t\t// ... or just update it?\n\t\telse\n\t\t{\n\t\t\t$eventOptions = array(\n\t\t\t\t'title' => $smcFunc['substr']($_REQUEST['evtitle'], 0, 100),\n\t\t\t\t'span' => empty($modSettings['cal_allowspan']) || empty($_POST['span']) || $_POST['span'] == 1 || empty($modSettings['cal_maxspan']) || $_POST['span'] > $modSettings['cal_maxspan'] ? 0 : min((int) $modSettings['cal_maxspan'], (int) $_POST['span'] - 1),\n\t\t\t\t'start_date' => strftime('%Y-%m-%d', mktime(0, 0, 0, (int) $_REQUEST['month'], (int) $_REQUEST['day'], (int) $_REQUEST['year'])),\n\t\t\t);\n\n\t\t\tmodifyEvent($_REQUEST['eventid'], $eventOptions);\n\t\t}\n\n\t\tupdateSettings(array(\n\t\t\t'calendar_updated' => time(),\n\t\t));\n\n\t\t// No point hanging around here now...\n\t\tredirectexit($scripturl . '?action=calendar;month=' . $_POST['month'] . ';year=' . $_POST['year']);\n\t}\n\n\t// If we are not enabled... we are not enabled.\n\tif (empty($modSettings['cal_allow_unlinked']) && empty($_REQUEST['eventid']))\n\t{\n\t\t$_REQUEST['calendar'] = 1;\n\t\trequire_once($sourcedir . '/Post.php');\n\t\treturn Post();\n\t}\n\n\t// New?\n\tif (!isset($_REQUEST['eventid']))\n\t{\n\t\t$today = getdate();\n\n\t\t$context['event'] = array(\n\t\t\t'boards' => array(),\n\t\t\t'board' => 0,\n\t\t\t'new' => 1,\n\t\t\t'eventid' => -1,\n\t\t\t'year' => isset($_REQUEST['year']) ? $_REQUEST['year'] : $today['year'],\n\t\t\t'month' => isset($_REQUEST['month']) ? $_REQUEST['month'] : $today['mon'],\n\t\t\t'day' => isset($_REQUEST['day']) ? $_REQUEST['day'] : $today['mday'],\n\t\t\t'title' => '',\n\t\t\t'span' => 1,\n\t\t);\n\t\t$context['event']['last_day'] = (int) strftime('%d', mktime(0, 0, 0, $context['event']['month'] == 12 ? 1 : $context['event']['month'] + 1, 0, $context['event']['month'] == 12 ? $context['event']['year'] + 1 : $context['event']['year']));\n\t}\n\telse\n\t{\n\t\t$context['event'] = getEventProperties($_REQUEST['eventid']);\n\n\t\tif ($context['event'] === false)\n\t\t\tfatal_lang_error('no_access', false);\n\n\t\t// If it has a board, then they should be editing it within the topic.\n\t\tif (!empty($context['event']['topic']['id']) && !empty($context['event']['topic']['first_msg']))\n\t\t{\n\t\t\t// We load the board up, for a check on the board access rights...\n\t\t\t$topic = $context['event']['topic']['id'];\n\t\t\tloadBoard();\n\t\t}\n\n\t\t// Make sure the user is allowed to edit this event.\n\t\tif ($context['event']['member'] != $user_info['id'])\n\t\t\tisAllowedTo('calendar_edit_any');\n\t\telseif (!allowedTo('calendar_edit_any'))\n\t\t\tisAllowedTo('calendar_edit_own');\n\t}\n\n\t// Get list of boards that can be posted in.\n\t$boards = boardsAllowedTo('post_new');\n\tif (empty($boards))\n\t{\n\t\t// You can post new events but can't link them to anything...\n\t\t$context['event']['categories'] = array();\n\t}\n\telse\n\t{\n\t\t// Load the list of boards and categories in the context.\n\t\trequire_once($sourcedir . '/Subs-MessageIndex.php');\n\t\t$boardListOptions = array(\n\t\t\t'included_boards' => in_array(0, $boards) ? null : $boards,\n\t\t\t'not_redirection' => true,\n\t\t\t'use_permissions' => true,\n\t\t\t'selected_board' => $modSettings['cal_defaultboard'],\n\t\t);\n\t\t$context['event']['categories'] = getBoardList($boardListOptions);\n\t}\n\n\t// Template, sub template, etc.\n\tloadTemplate('Calendar');\n\t$context['sub_template'] = 'event_post';\n\n\t$context['page_title'] = isset($_REQUEST['eventid']) ? $txt['calendar_edit'] : $txt['calendar_post_event'];\n\t$context['linktree'][] = array(\n\t\t'name' => $context['page_title'],\n\t);\n}\n\n/**\n * This function offers up a download of an event in iCal 2.0 format.\n *\n * Follows the conventions in {@link http://tools.ietf.org/html/rfc5546 RFC5546}\n * Sets events as all day events since we don't have hourly events\n * Will honor and set multi day events\n * Sets a sequence number if the event has been modified\n *\n * @todo .... allow for week or month export files as well?\n */\nfunction iCalDownload()\n{\n\tglobal $smcFunc, $sourcedir, $forum_version, $modSettings, $webmaster_email, $mbname;\n\n\t// You can't export if the calendar export feature is off.\n\tif (empty($modSettings['cal_export']))\n\t\tfatal_lang_error('calendar_export_off', false);\n\n\t// Goes without saying that this is required.\n\tif (!isset($_REQUEST['eventid']))\n\t\tfatal_lang_error('no_access', false);\n\n\t// This is kinda wanted.\n\trequire_once($sourcedir . '/Subs-Calendar.php');\n\n\t// Load up the event in question and check it exists.\n\t$event = getEventProperties($_REQUEST['eventid']);\n\n\tif ($event === false)\n\t\tfatal_lang_error('no_access', false);\n\n\t// Check the title isn't too long - iCal requires some formatting if so.\n\t$title = str_split($event['title'], 30);\n\tforeach ($title as $id => $line)\n\t{\n\t\tif ($id != 0)\n\t\t\t$title[$id] = ' ' . $title[$id];\n\t\t$title[$id] .= \"\\n\";\n\t}\n\n\t// Format the dates.\n\t$datestamp = date('Ymd\\THis\\Z', time());\n\t$datestart = $event['year'] . ($event['month'] < 10 ? '0' . $event['month'] : $event['month']) . ($event['day'] < 10 ? '0' . $event['day'] : $event['day']);\n\n\t// Do we have a event that spans several days?\n\tif ($event['span'] > 1)\n\t{\n\t\t$dateend = strtotime($event['year'] . '-' . ($event['month'] < 10 ? '0' . $event['month'] : $event['month']) . '-' . ($event['day'] < 10 ? '0' . $event['day'] : $event['day']));\n\t\t$dateend += ($event['span'] - 1) * 86400;\n\t\t$dateend = date('Ymd', $dateend);\n\t}\n\n\t// This is what we will be sending later\n\t$filecontents = '';\n\t$filecontents .= 'BEGIN:VCALENDAR' . \"\\n\";\n\t$filecontents .= 'METHOD:PUBLISH' . \"\\n\";\n\t$filecontents .= 'PRODID:-//SimpleMachines//SMF ' . (empty($forum_version) ? 2.0 : strtr($forum_version, array('SMF ' => ''))) . '//EN' . \"\\n\";\n\t$filecontents .= 'VERSION:2.0' . \"\\n\";\n\t$filecontents .= 'BEGIN:VEVENT' . \"\\n\";\n\t// @TODO - Should be the members email who created the event rather than $webmaster_email.\n\t$filecontents .= 'ORGANIZER;CN=\"' . $event['realname'] . '\":MAILTO:' . $webmaster_email . \"\\n\";\n\t$filecontents .= 'DTSTAMP:' . $datestamp . \"\\n\";\n\t$filecontents .= 'DTSTART;VALUE=DATE:' . $datestart . \"\\n\";\n\n\t// more than one day\n\tif ($event['span'] > 1)\n\t\t$filecontents .= 'DTEND;VALUE=DATE:' . $dateend . \"\\n\";\n\n\t// event has changed? advance the sequence for this UID\n\tif ($event['sequence'] > 0)\n\t\t$filecontents .= 'SEQUENCE:' . $event['sequence'] . \"\\n\";\n\n\t$filecontents .= 'SUMMARY:' . implode('', $title);\n\t$filecontents .= 'UID:' . $event['eventid'] . '@' . str_replace(' ', '-', $mbname) . \"\\n\";\n\t$filecontents .= 'END:VEVENT' . \"\\n\";\n\t$filecontents .= 'END:VCALENDAR';\n\n\t// Send some standard headers.\n\tob_end_clean();\n\tif (!empty($modSettings['enableCompressedOutput']))\n\t\t@ob_start('ob_gzhandler');\n\telse\n\t\tob_start();\n\n\t// Send the file headers\n\theader('Pragma: ');\n\theader('Cache-Control: no-cache');\n\tif (!isBrowser('gecko'))\n\t\theader('Content-Transfer-Encoding: binary');\n\theader('Expires: ' . gmdate('D, d M Y H:i:s', time() + 525600 * 60) . ' GMT');\n\theader('Last-Modified: ' . gmdate('D, d M Y H:i:s', time()) . 'GMT');\n\theader('Accept-Ranges: bytes');\n\theader('Connection: close');\n\theader('Content-Disposition: attachment; filename=\"' . $event['title'] . '.ics\"');\n\tif (empty($modSettings['enableCompressedOutput']))\n\t\theader('Content-Length: ' . $smcFunc['strlen']($filecontents));\n\n\t// This is a calendar item!\n\theader('Content-Type: text/calendar');\n\n\t// Chuck out the card.\n\techo $filecontents;\n\n\t// Off we pop - lovely!\n\tobExit(false);\n}\n\n/**\n * Nothing to see here. Move along.\n */\nfunction clock()\n{\n\tglobal $settings, $context, $scripturl;\n\n\t$context['onimg'] = $settings['images_url'] . '/bbc/bbc_bg.png';\n\t$context['offimg'] = $settings['images_url'] . '/bbc/bbc_hoverbg.png';\n\n\t$context['page_title'] = 'Anyone know what time it is?';\n\t$context['linktree'][] = array(\n\t\t\t'url' => $scripturl . '?action=clock',\n\t\t\t'name' => 'Clock',\n\t);\n\t$context['robot_no_index'] = true;\n\n\t$omfg = isset($_REQUEST['omfg']);\n\t$bcd = !isset($_REQUEST['rb']) && !isset($_REQUEST['omfg']) && !isset($_REQUEST['time']);\n\n\tloadTemplate('Calendar');\n\n\tif ($bcd)\n\t{\n\t\t$context['sub_template'] = 'bcd';\n\t\t$context['linktree'][] = array('url' => $scripturl . '?action=clock;bcd', 'name' => 'BCD');\n\t\t$context['clockicons'] = safe_unserialize(base64_decode('YTo2OntzOjI6ImgxIjthOjI6e2k6MDtpOjI7aToxO2k6MTt9czoyOiJoMiI7YTo0OntpOjA7aTo4O2k6MTtpOjQ7aToyO2k6MjtpOjM7aToxO31zOjI6Im0xIjthOjM6e2k6MDtpOjQ7aToxO2k6MjtpOjI7aToxO31zOjI6Im0yIjthOjQ6e2k6MDtpOjg7aToxO2k6NDtpOjI7aToyO2k6MztpOjE7fXM6MjoiczEiO2E6Mzp7aTowO2k6NDtpOjE7aToyO2k6MjtpOjE7fXM6MjoiczIiO2E6NDp7aTowO2k6ODtpOjE7aTo0O2k6MjtpOjI7aTozO2k6MTt9fQ=='));\n\t}\n\telseif (!$omfg && !isset($_REQUEST['time']))\n\t{\n\t\t$context['sub_template'] = 'hms';\n\t\t$context['linktree'][] = array('url' => $scripturl . '?action=clock', 'name' => 'Binary');\n\t\t$context['clockicons'] = safe_unserialize(base64_decode('YTozOntzOjE6ImgiO2E6NTp7aTowO2k6MTY7aToxO2k6ODtpOjI7aTo0O2k6MztpOjI7aTo0O2k6MTt9czoxOiJtIjthOjY6e2k6MDtpOjMyO2k6MTtpOjE2O2k6MjtpOjg7aTozO2k6NDtpOjQ7aToyO2k6NTtpOjE7fXM6MToicyI7YTo2OntpOjA7aTozMjtpOjE7aToxNjtpOjI7aTo4O2k6MztpOjQ7aTo0O2k6MjtpOjU7aToxO319'));\n\t}\n\telseif ($omfg)\n\t{\n\t\t$context['sub_template'] = 'omfg';\n\t\t$context['linktree'][] = array('url' => $scripturl . '?action=clock;omfg', 'name' => 'OMFG');\n\t\t$context['clockicons'] = safe_unserialize(base64_decode('YTo2OntzOjQ6InllYXIiO2E6Nzp7aTowO2k6NjQ7aToxO2k6MzI7aToyO2k6MTY7aTozO2k6ODtpOjQ7aTo0O2k6NTtpOjI7aTo2O2k6MTt9czo1OiJtb250aCI7YTo0OntpOjA7aTo4O2k6MTtpOjQ7aToyO2k6MjtpOjM7aToxO31zOjM6ImRheSI7YTo1OntpOjA7aToxNjtpOjE7aTo4O2k6MjtpOjQ7aTozO2k6MjtpOjQ7aToxO31zOjQ6ImhvdXIiO2E6NTp7aTowO2k6MTY7aToxO2k6ODtpOjI7aTo0O2k6MztpOjI7aTo0O2k6MTt9czozOiJtaW4iO2E6Njp7aTowO2k6MzI7aToxO2k6MTY7aToyO2k6ODtpOjM7aTo0O2k6NDtpOjI7aTo1O2k6MTt9czozOiJzZWMiO2E6Njp7aTowO2k6MzI7aToxO2k6MTY7aToyO2k6ODtpOjM7aTo0O2k6NDtpOjI7aTo1O2k6MTt9fQ=='));\n\t}\n\telseif (isset($_REQUEST['time']))\n\t{\n\t\t$context['sub_template'] = 'thetime';\n\t\t$time = getdate($_REQUEST['time'] == 'now' ? time() : (int) $_REQUEST['time']);\n\t\t$year = $time['year'] % 100;\n\t\t$month = $time['mon'];\n\t\t$day = $time['mday'];\n\t\t$hour = $time['hours'];\n\t\t$min = $time['minutes'];\n\t\t$sec = $time['seconds'];\n\t\t$context['linktree'][] = array('url' => $scripturl . '?action=clock;time=' . $_REQUEST['time'], 'name' => 'Requested Time');\n\t\t$context['clockicons'] = array(\n\t\t\t'year' => array(\n\t\t\t\t64 => false,\n\t\t\t\t32 => false,\n\t\t\t\t16 => false,\n\t\t\t\t8  => false,\n\t\t\t\t4  => false,\n\t\t\t\t2  => false,\n\t\t\t\t1  => false\n\t\t\t),\n\t\t\t'month' => array(\n\t\t\t\t8  => false,\n\t\t\t\t4  => false,\n\t\t\t\t2  => false,\n\t\t\t\t1  => false\n\t\t\t),\n\t\t\t'day' => array(\n\t\t\t\t16 => false,\n\t\t\t\t4  => false,\n\t\t\t\t8  => false,\n\t\t\t\t2  => false,\n\t\t\t\t1  => false\n\t\t\t),\n\t\t\t'hour' => array(\n\t\t\t\t32 => false,\n\t\t\t\t16 => false,\n\t\t\t\t8  => false,\n\t\t\t\t4  => false,\n\t\t\t\t2  => false,\n\t\t\t\t1  => false\n\t\t\t),\n\t\t\t'min' => array(\n\t\t\t\t32 => false,\n\t\t\t\t16 => false,\n\t\t\t\t8  => false,\n\t\t\t\t4  => false,\n\t\t\t\t2  => false,\n\t\t\t\t1  => false\n\t\t\t),\n\t\t\t'sec' => array(\n\t\t\t\t32 => false,\n\t\t\t\t16 => false,\n\t\t\t\t8  => false,\n\t\t\t\t4  => false,\n\t\t\t\t2  => false,\n\t\t\t\t1  => false\n\t\t\t),\n\t\t);\n\n\t\tforeach ($context['clockicons'] as $t => $vs)\n\t\t\tforeach ($vs as $v => $dumb)\n\t\t\t{\n\t\t\t\tif ($$t >= $v)\n\t\t\t\t{\n\t\t\t\t\t$$t -= $v;\n\t\t\t\t\t$context['clockicons'][$t][$v] = true;\n\t\t\t\t}\n\t\t\t}\n\t}\n}\n\n?>", "<?php\n\n/**\n * This file has the hefty job of loading information for the forum.\n *\n * Simple Machines Forum (SMF)\n *\n * @package SMF\n * @author Simple Machines http://www.simplemachines.org\n * @copyright 2016 Simple Machines and individual contributors\n * @license http://www.simplemachines.org/about/smf/license.php BSD\n *\n * @version 2.1 Beta 3\n */\n\nif (!defined('SMF'))\n\tdie('No direct access...');\n\n/**\n * Load the $modSettings array.\n */\nfunction reloadSettings()\n{\n\tglobal $modSettings, $boarddir, $smcFunc, $txt, $db_character_set;\n\tglobal $cache_enable, $sourcedir, $context;\n\n\t// Most database systems have not set UTF-8 as their default input charset.\n\tif (!empty($db_character_set))\n\t\t$smcFunc['db_query']('set_character_set', '\n\t\t\tSET NAMES ' . $db_character_set,\n\t\t\tarray(\n\t\t\t)\n\t\t);\n\n\t// Try to load it from the cache first; it'll never get cached if the setting is off.\n\tif (($modSettings = cache_get_data('modSettings', 90)) == null)\n\t{\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT variable, value\n\t\t\tFROM {db_prefix}settings',\n\t\t\tarray(\n\t\t\t)\n\t\t);\n\t\t$modSettings = array();\n\t\tif (!$request)\n\t\t\tdisplay_db_error();\n\t\twhile ($row = $smcFunc['db_fetch_row']($request))\n\t\t\t$modSettings[$row[0]] = $row[1];\n\t\t$smcFunc['db_free_result']($request);\n\n\t\t// Do a few things to protect against missing settings or settings with invalid values...\n\t\tif (empty($modSettings['defaultMaxTopics']) || $modSettings['defaultMaxTopics'] <= 0 || $modSettings['defaultMaxTopics'] > 999)\n\t\t\t$modSettings['defaultMaxTopics'] = 20;\n\t\tif (empty($modSettings['defaultMaxMessages']) || $modSettings['defaultMaxMessages'] <= 0 || $modSettings['defaultMaxMessages'] > 999)\n\t\t\t$modSettings['defaultMaxMessages'] = 15;\n\t\tif (empty($modSettings['defaultMaxMembers']) || $modSettings['defaultMaxMembers'] <= 0 || $modSettings['defaultMaxMembers'] > 999)\n\t\t\t$modSettings['defaultMaxMembers'] = 30;\n\t\tif (empty($modSettings['defaultMaxListItems']) || $modSettings['defaultMaxListItems'] <= 0 || $modSettings['defaultMaxListItems'] > 999)\n\t\t\t$modSettings['defaultMaxListItems'] = 15;\n\n\t\tif (!empty($cache_enable))\n\t\t\tcache_put_data('modSettings', $modSettings, 90);\n\t}\n\n\t$modSettings['cache_enable'] = $cache_enable;\n\n\t// UTF-8 ?\n\t$utf8 = (empty($modSettings['global_character_set']) ? $txt['lang_character_set'] : $modSettings['global_character_set']) === 'UTF-8';\n\n\t// Set a list of common functions.\n\t$ent_list = empty($modSettings['disableEntityCheck']) ? '&(#\\d{1,7}|quot|amp|lt|gt|nbsp);' : '&(#021|quot|amp|lt|gt|nbsp);';\n\t$ent_check = empty($modSettings['disableEntityCheck']) ? function ($string)\n\t\t{\n\t\t\t$string = preg_replace_callback('~(&#(\\d{1,7}|x[0-9a-fA-F]{1,6});)~', 'entity_fix__callback', $string);\n\t\t\treturn $string;\n\t\t} : function ($string)\n\t\t{\n\t\t\treturn $string;\n\t\t};\n\t$fix_utf8mb4 = function ($string) use ($utf8)\n\t{\n\t\tif (!$utf8)\n\t\t\treturn $string;\n\n\t\t$i = 0;\n\t\t$len = strlen($string);\n\t\t$new_string = '';\n\t\twhile ($i < $len)\n\t\t{\n\t\t\t$ord = ord($string[$i]);\n\t\t\tif ($ord < 128)\n\t\t\t{\n\t\t\t\t$new_string .= $string[$i];\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\telseif ($ord < 224)\n\t\t\t{\n\t\t\t\t$new_string .= $string[$i] . $string[$i+1];\n\t\t\t\t$i += 2;\n\t\t\t}\n\t\t\telseif ($ord < 240)\n\t\t\t{\n\t\t\t\t$new_string .= $string[$i] . $string[$i+1] . $string[$i+2];\n\t\t\t\t$i += 3;\n\t\t\t}\n\t\t\telseif ($ord < 248)\n\t\t\t{\n\t\t\t\t// Magic happens.\n\t\t\t\t$val = (ord($string[$i]) & 0x07) << 18;\n\t\t\t\t$val += (ord($string[$i+1]) & 0x3F) << 12;\n\t\t\t\t$val += (ord($string[$i+2]) & 0x3F) << 6;\n\t\t\t\t$val += (ord($string[$i+3]) & 0x3F);\n\t\t\t\t$new_string .= '&#' . $val . ';';\n\t\t\t\t$i += 4;\n\t\t\t}\n\t\t}\n\t\treturn $new_string;\n\t};\n\n\t// Preg_replace space characters depend on the character set in use\n\t$space_chars = $utf8 ? '\\x{A0}\\x{AD}\\x{2000}-\\x{200F}\\x{201F}\\x{202F}\\x{3000}\\x{FEFF}' : '\\x00-\\x08\\x0B\\x0C\\x0E-\\x19\\xA0';\n\n\t// global array of anonymous helper functions, used mostly to properly handle multi byte strings\n\t$smcFunc += array(\n\t\t'entity_fix' => function ($string)\n\t\t{\n\t\t\t$num = $string[0] === 'x' ? hexdec(substr($string, 1)) : (int) $string;\n\t\t\treturn $num < 0x20 || $num > 0x10FFFF || ($num >= 0xD800 && $num <= 0xDFFF) || $num === 0x202E || $num === 0x202D ? '' : '&#' . $num . ';';\n\t\t},\n\t\t'htmlspecialchars' => function ($string, $quote_style = ENT_COMPAT, $charset = 'ISO-8859-1') use ($ent_check, $utf8, $fix_utf8mb4)\n\t\t{\n\t\t\treturn $fix_utf8mb4($ent_check(htmlspecialchars($string, $quote_style, $utf8 ? 'UTF-8' : $charset)));\n\t\t},\n\t\t'htmltrim' => function ($string) use ($utf8, $space_chars, $ent_check)\n\t\t{\n\t\t\treturn preg_replace('~^(?:[ \\t\\n\\r\\x0B\\x00' . $space_chars . ']|&nbsp;)+|(?:[ \\t\\n\\r\\x0B\\x00' . $space_chars . ']|&nbsp;)+$~' . ($utf8 ? 'u' : ''), '', $ent_check($string));\n\t\t},\n\t\t'strlen' => function ($string) use ($ent_list, $utf8, $ent_check)\n\t\t{\n\t\t\treturn strlen(preg_replace('~' . $ent_list . ($utf8 ? '|.~u' : '~'), '_', $ent_check($string)));\n\t\t},\n\t\t'strpos' => function ($haystack, $needle, $offset = 0) use ($utf8, $ent_check, $modSettings)\n\t\t{\n\t\t\t$haystack_arr = preg_split('~(&#' . (empty($modSettings['disableEntityCheck']) ? '\\d{1,7}' : '021') . ';|&quot;|&amp;|&lt;|&gt;|&nbsp;|.)~' . ($utf8 ? 'u' : ''), $ent_check($haystack), -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t\t\tif (strlen($needle) === 1)\n\t\t\t{\n\t\t\t\t$result = array_search($needle, array_slice($haystack_arr, $offset));\n\t\t\t\treturn is_int($result) ? $result + $offset : false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$needle_arr = preg_split('~(&#' . (empty($modSettings['disableEntityCheck']) ? '\\d{1,7}' : '021') . ';|&quot;|&amp;|&lt;|&gt;|&nbsp;|.)~' . ($utf8 ? 'u' : '') . '', $ent_check($needle), -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\t\t\t\t$needle_size = count($needle_arr);\n\n\t\t\t\t$result = array_search($needle_arr[0], array_slice($haystack_arr, $offset));\n\t\t\t\twhile ((int) $result === $result)\n\t\t\t\t{\n\t\t\t\t\t$offset += $result;\n\t\t\t\t\tif (array_slice($haystack_arr, $offset, $needle_size) === $needle_arr)\n\t\t\t\t\t\treturn $offset;\n\t\t\t\t\t$result = array_search($needle_arr[0], array_slice($haystack_arr, ++$offset));\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\t'substr' => function ($string, $start, $length = null) use ($utf8, $ent_check, $modSettings)\n\t\t{\n\t\t\t$ent_arr = preg_split('~(&#' . (empty($modSettings['disableEntityCheck']) ? '\\d{1,7}' : '021') . ';|&quot;|&amp;|&lt;|&gt;|&nbsp;|.)~' . ($utf8 ? 'u' : '') . '', $ent_check($string), -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\t\t\treturn $length === null ? implode('', array_slice($ent_arr, $start)) : implode('', array_slice($ent_arr, $start, $length));\n\t\t},\n\t\t'strtolower' => $utf8 ? function ($string) use ($sourcedir)\n\t\t{\n\t\t\tif (!function_exists('mb_strtolower'))\n\t\t\t{\n\t\t\t\trequire_once($sourcedir . '/Subs-Charset.php');\n\t\t\t\treturn utf8_strtolower($string);\n\t\t\t}\n\n\t\t\treturn mb_strtolower($string, 'UTF-8');\n\t\t} : 'strtolower',\n\t\t'strtoupper' => $utf8 ? function ($string)\n\t\t{\n\t\t\tglobal $sourcedir;\n\n\t\t\tif (!function_exists('mb_strtolower'))\n\t\t\t{\n\t\t\t\trequire_once($sourcedir . '/Subs-Charset.php');\n\t\t\t\treturn utf8_strtoupper($string);\n\t\t\t}\n\n\t\t\treturn mb_strtoupper($string, 'UTF-8');\n\t\t} : 'strtoupper',\n\t\t'truncate' => function($string, $length) use ($utf8, $ent_check, $ent_list, &$smcFunc)\n\t\t{\n\t\t\t$string = $ent_check($string);\n\t\t\tpreg_match('~^(' . $ent_list . '|.){' . $smcFunc['strlen'](substr($string, 0, $length)) . '}~'.  ($utf8 ? 'u' : ''), $string, $matches);\n\t\t\t$string = $matches[0];\n\t\t\twhile (strlen($string) > $length)\n\t\t\t\t$string = preg_replace('~(?:' . $ent_list . '|.)$~'.  ($utf8 ? 'u' : ''), '', $string);\n\t\t\treturn $string;\n\t\t},\n\t\t'ucfirst' => $utf8 ? function ($string) use (&$smcFunc)\n\t\t{\n\t\t\treturn $smcFunc['strtoupper']($smcFunc['substr']($string, 0, 1)) . $smcFunc['substr']($string, 1);\n\t\t} : 'ucfirst',\n\t\t'ucwords' => $utf8 ? function ($string) use (&$smcFunc)\n\t\t{\n\t\t\t$words = preg_split('~([\\s\\r\\n\\t]+)~', $string, -1, PREG_SPLIT_DELIM_CAPTURE);\n\t\t\tfor ($i = 0, $n = count($words); $i < $n; $i += 2)\n\t\t\t\t$words[$i] = $smcFunc['ucfirst']($words[$i]);\n\t\t\treturn implode('', $words);\n\t\t} : 'ucwords',\n\t);\n\n\t// Setting the timezone is a requirement for some functions.\n\tif (isset($modSettings['default_timezone']))\n\t\tdate_default_timezone_set($modSettings['default_timezone']);\n\n\t// Check the load averages?\n\tif (!empty($modSettings['loadavg_enable']))\n\t{\n\t\tif (($modSettings['load_average'] = cache_get_data('loadavg', 90)) == null)\n\t\t{\n\t\t\t$modSettings['load_average'] = @file_get_contents('/proc/loadavg');\n\t\t\tif (!empty($modSettings['load_average']) && preg_match('~^([^ ]+?) ([^ ]+?) ([^ ]+)~', $modSettings['load_average'], $matches) != 0)\n\t\t\t\t$modSettings['load_average'] = (float) $matches[1];\n\t\t\telseif (($modSettings['load_average'] = @`uptime`) != null && preg_match('~load average[s]?: (\\d+\\.\\d+), (\\d+\\.\\d+), (\\d+\\.\\d+)~i', $modSettings['load_average'], $matches) != 0)\n\t\t\t\t$modSettings['load_average'] = (float) $matches[1];\n\t\t\telse\n\t\t\t\tunset($modSettings['load_average']);\n\n\t\t\tif (!empty($modSettings['load_average']) || $modSettings['load_average'] === 0.0)\n\t\t\t\tcache_put_data('loadavg', $modSettings['load_average'], 90);\n\t\t}\n\n\t\tif (!empty($modSettings['load_average']) || $modSettings['load_average'] === 0.0)\n\t\t\tcall_integration_hook('integrate_load_average', array($modSettings['load_average']));\n\n\t\tif (!empty($modSettings['loadavg_forum']) && !empty($modSettings['load_average']) && $modSettings['load_average'] >= $modSettings['loadavg_forum'])\n\t\t\tdisplay_loadavg_error();\n\t}\n\n\t// Is post moderation alive and well? Everywhere else assumes this has been defined, so let's make sure it is.\n\t$modSettings['postmod_active'] = !empty($modSettings['postmod_active']);\n\n\t// Here to justify the name of this function. :P\n\t// It should be added to the install and upgrade scripts.\n\t// But since the converters need to be updated also. This is easier.\n\tif (empty($modSettings['currentAttachmentUploadDir']))\n\t{\n\t\tupdateSettings(array(\n\t\t\t'attachmentUploadDir' => json_encode(array(1 => $modSettings['attachmentUploadDir'])),\n\t\t\t'currentAttachmentUploadDir' => 1,\n\t\t));\n\t}\n\n\t// Integration is cool.\n\tif (defined('SMF_INTEGRATION_SETTINGS'))\n\t{\n\t\t$integration_settings = smf_json_decode(SMF_INTEGRATION_SETTINGS, true);\n\t\tforeach ($integration_settings as $hook => $function)\n\t\t\tadd_integration_function($hook, $function, '', false);\n\t}\n\n\t// Any files to pre include?\n\tif (!empty($modSettings['integrate_pre_include']))\n\t{\n\t\t$pre_includes = explode(',', $modSettings['integrate_pre_include']);\n\t\tforeach ($pre_includes as $include)\n\t\t{\n\t\t\t$include = strtr(trim($include), array('$boarddir' => $boarddir, '$sourcedir' => $sourcedir));\n\t\t\tif (file_exists($include))\n\t\t\t\trequire_once($include);\n\t\t}\n\t}\n\n\t// This determines the server... not used in many places, except for login fixing.\n\t$context['server'] = array(\n\t\t'is_iis' => isset($_SERVER['SERVER_SOFTWARE']) && strpos($_SERVER['SERVER_SOFTWARE'], 'Microsoft-IIS') !== false,\n\t\t'is_apache' => isset($_SERVER['SERVER_SOFTWARE']) && strpos($_SERVER['SERVER_SOFTWARE'], 'Apache') !== false,\n\t\t'is_litespeed' => isset($_SERVER['SERVER_SOFTWARE']) && strpos($_SERVER['SERVER_SOFTWARE'], 'LiteSpeed') !== false,\n\t\t'is_lighttpd' => isset($_SERVER['SERVER_SOFTWARE']) && strpos($_SERVER['SERVER_SOFTWARE'], 'lighttpd') !== false,\n\t\t'is_nginx' => isset($_SERVER['SERVER_SOFTWARE']) && strpos($_SERVER['SERVER_SOFTWARE'], 'nginx') !== false,\n\t\t'is_cgi' => isset($_SERVER['SERVER_SOFTWARE']) && strpos(php_sapi_name(), 'cgi') !== false,\n\t\t'is_windows' => strpos(PHP_OS, 'WIN') === 0,\n\t\t'iso_case_folding' => ord(strtolower(chr(138))) === 154,\n\t);\n\t// A bug in some versions of IIS under CGI (older ones) makes cookie setting not work with Location: headers.\n\t$context['server']['needs_login_fix'] = $context['server']['is_cgi'] && $context['server']['is_iis'];\n\n\t// Define a list of icons used across multiple places.\n\t$context['stable_icons'] = array('xx', 'thumbup', 'thumbdown', 'exclamation', 'question', 'lamp', 'smiley', 'angry', 'cheesy', 'grin', 'sad', 'wink', 'poll', 'moved', 'recycled', 'clip');\n\n\t// Define an array for custom profile fields placements.\n\t$context['cust_profile_fields_placement'] = array(\n\t\t'standard',\n\t\t'icons',\n\t\t'above_signature',\n\t\t'below_signature',\n\t\t'below_avatar',\n\t\t'above_member',\n\t\t'bottom_poster',\n\t);\n\n\t// Define an array of allowed HTML tags.\n\t$context['allowed_html_tags'] = array(\n\t\t'<img>',\n\t\t'<div>',\n\t);\n\n\t// These are the only valid image types for SMF, by default anyway.\n\t$context['validImageTypes'] = array(\n\t\t1 => 'gif',\n\t\t2 => 'jpeg',\n\t\t3 => 'png',\n\t\t5 => 'psd',\n\t\t6 => 'bmp',\n\t\t7 => 'tiff',\n\t\t8 => 'tiff',\n\t\t9 => 'jpeg',\n\t\t14 => 'iff'\n\t);\n\n\t// Define a list of allowed tags for descriptions.\n\t$context['description_allowed_tags'] = array('abbr', 'anchor', 'b', 'center', 'color', 'font', 'hr', 'i', 'img', 'iurl', 'left', 'li', 'list', 'ltr', 'pre', 'right', 's', 'sub', 'sup', 'table', 'td', 'tr', 'u', 'url',);\n\n\t// Get an error count, if necessary\n\tif (!isset($context['num_errors']))\n\t{\n\t\t$query = $smcFunc['db_query']('', '\n\t\t\tSELECT COUNT(id_error)\n\t\t\tFROM {db_prefix}log_errors',\n\t\t\tarray()\n\t\t);\n\n\t\tlist($context['num_errors']) = $smcFunc['db_fetch_row']($query);\n\t\t$smcFunc['db_free_result']($query);\n\t}\n\n\t// Call pre load integration functions.\n\tcall_integration_hook('integrate_pre_load');\n}\n\n/**\n * Load all the important user information.\n * What it does:\n * \t- sets up the $user_info array\n * \t- assigns $user_info['query_wanna_see_board'] for what boards the user can see.\n * \t- first checks for cookie or integration validation.\n * \t- uses the current session if no integration function or cookie is found.\n * \t- checks password length, if member is activated and the login span isn't over.\n * \t\t- if validation fails for the user, $id_member is set to 0.\n * \t\t- updates the last visit time when needed.\n */\nfunction loadUserSettings()\n{\n\tglobal $modSettings, $user_settings, $sourcedir, $smcFunc;\n\tglobal $cookiename, $user_info, $language, $context, $image_proxy_enabled, $image_proxy_secret, $boardurl;\n\n\t// Check first the integration, then the cookie, and last the session.\n\tif (count($integration_ids = call_integration_hook('integrate_verify_user')) > 0)\n\t{\n\t\t$id_member = 0;\n\t\tforeach ($integration_ids as $integration_id)\n\t\t{\n\t\t\t$integration_id = (int) $integration_id;\n\t\t\tif ($integration_id > 0)\n\t\t\t{\n\t\t\t\t$id_member = $integration_id;\n\t\t\t\t$already_verified = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t\t$id_member = 0;\n\n\tif (empty($id_member) && isset($_COOKIE[$cookiename]))\n\t{\n\t\t$cookie_data = smf_json_decode($_COOKIE[$cookiename], true);\n\n\t\tif (is_null($cookie_data))\n\t\t\t$cookie_data = safe_unserialize($_COOKIE[$cookiename]);\n\n\t\tlist ($id_member, $password) = $cookie_data;\n\t\t$id_member = !empty($id_member) && strlen($password) > 0 ? (int) $id_member : 0;\n\t}\n\telseif (empty($id_member) && isset($_SESSION['login_' . $cookiename]) && ($_SESSION['USER_AGENT'] == $_SERVER['HTTP_USER_AGENT'] || !empty($modSettings['disableCheckUA'])))\n\t{\n\t\t// @todo Perhaps we can do some more checking on this, such as on the first octet of the IP?\n\t\t$cookie_data = smf_json_decode($_SESSION['login_' . $cookiename]);\n\n\t\tif (is_null($cookie_data))\n\t\t\t$cookie_data = safe_unserialize($_SESSION['login_' . $cookiename]);\n\n\t\tlist ($id_member, $password, $login_span) = $cookie_data;\n\t\t$id_member = !empty($id_member) && strlen($password) == 128 && $login_span > time() ? (int) $id_member : 0;\n\t}\n\n\t// Only load this stuff if the user isn't a guest.\n\tif ($id_member != 0)\n\t{\n\t\t// Is the member data cached?\n\t\tif (empty($modSettings['cache_enable']) || $modSettings['cache_enable'] < 2 || ($user_settings = cache_get_data('user_settings-' . $id_member, 60)) == null)\n\t\t{\n\t\t\t$request = $smcFunc['db_query']('', '\n\t\t\t\tSELECT mem.*, COALESCE(a.id_attach, 0) AS id_attach, a.filename, a.attachment_type\n\t\t\t\tFROM {db_prefix}members AS mem\n\t\t\t\t\tLEFT JOIN {db_prefix}attachments AS a ON (a.id_member = {int:id_member})\n\t\t\t\tWHERE mem.id_member = {int:id_member}\n\t\t\t\tLIMIT 1',\n\t\t\t\tarray(\n\t\t\t\t\t'id_member' => $id_member,\n\t\t\t\t)\n\t\t\t);\n\t\t\t$user_settings = $smcFunc['db_fetch_assoc']($request);\n\t\t\t$smcFunc['db_free_result']($request);\n\n\t\t\tif (!empty($modSettings['force_ssl']) && $image_proxy_enabled && stripos($user_settings['avatar'], 'http://') !== false)\n\t\t\t\t$user_settings['avatar'] = strtr($boardurl, array('http://' => 'https://')) . '/proxy.php?request=' . urlencode($user_settings['avatar']) . '&hash=' . md5($user_settings['avatar'] . $image_proxy_secret);\n\n\t\t\tif (!empty($modSettings['cache_enable']) && $modSettings['cache_enable'] >= 2)\n\t\t\t\tcache_put_data('user_settings-' . $id_member, $user_settings, 60);\n\t\t}\n\n\t\t// Did we find 'im?  If not, junk it.\n\t\tif (!empty($user_settings))\n\t\t{\n\t\t\t// As much as the password should be right, we can assume the integration set things up.\n\t\t\tif (!empty($already_verified) && $already_verified === true)\n\t\t\t\t$check = true;\n\t\t\t// SHA-512 hash should be 128 characters long.\n\t\t\telseif (strlen($password) == 128)\n\t\t\t\t$check = hash_salt($user_settings['passwd'], $user_settings['password_salt']) == $password;\n\t\t\telse\n\t\t\t\t$check = false;\n\n\t\t\t// Wrong password or not activated - either way, you're going nowhere.\n\t\t\t$id_member = $check && ($user_settings['is_activated'] == 1 || $user_settings['is_activated'] == 11) ? (int) $user_settings['id_member'] : 0;\n\t\t}\n\t\telse\n\t\t\t$id_member = 0;\n\n\t\t// If we no longer have the member maybe they're being all hackey, stop brute force!\n\t\tif (!$id_member)\n\t\t{\n\t\t\trequire_once($sourcedir . '/LogInOut.php');\n\t\t\tvalidatePasswordFlood(!empty($user_settings['id_member']) ? $user_settings['id_member'] : $id_member, !empty($user_settings['passwd_flood']) ? $user_settings['passwd_flood'] : false, $id_member != 0);\n\t\t}\n\t\t// Validate for Two Factor Authentication\n\t\telseif (!empty($modSettings['tfa_mode']) && $id_member && !empty($user_settings['tfa_secret']) && (empty($_REQUEST['action']) || !in_array($_REQUEST['action'], array('login2', 'logintfa'))))\n\t\t{\n\t\t\t$tfacookie = $cookiename . '_tfa';\n\t\t\t$tfasecret = null;\n\n\t\t\t$verified = call_integration_hook('integrate_verify_tfa', array($id_member, $user_settings));\n\n\t\t\tif (empty($verified) || !in_array(true, $verified))\n\t\t\t{\n\t\t\t\tif (!empty($_COOKIE[$tfacookie]))\n\t\t\t\t{\n\t\t\t\t\t$tfa_data = smf_json_decode($_COOKIE[$tfacookie]);\n\n\t\t\t\t\tif (is_null($tfa_data))\n\t\t\t\t\t\t$tfa_data = safe_unserialize($_COOKIE[$tfacookie]);\n\n\t\t\t\t\tlist ($tfamember, $tfasecret) = $tfa_data;\n\n\t\t\t\t\tif ((int) $tfamember != $id_member)\n\t\t\t\t\t\t$tfasecret = null;\n\t\t\t\t}\n\n\t\t\t\tif (empty($tfasecret) || hash_salt($user_settings['tfa_backup'], $user_settings['password_salt']) != $tfasecret)\n\t\t\t\t{\n\t\t\t\t\t$id_member = 0;\n\t\t\t\t\tredirectexit('action=logintfa');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// When authenticating their two factor code, make sure to reset their ID for security\n\t\telseif (!empty($modSettings['tfa_mode']) && $id_member && !empty($user_settings['tfa_secret']) && $_REQUEST['action'] == 'logintfa')\n\t\t{\n\t\t\t$id_member = 0;\n\t\t\t$context['tfa_member'] = $user_settings;\n\t\t\t$user_settings = array();\n\t\t}\n\t\t// Are we forcing 2FA? Need to check if the user groups actually require 2FA\n\t\telseif (!empty($modSettings['tfa_mode']) && $modSettings['tfa_mode'] >= 2 && $id_member && empty($user_settings['tfa_secret']))\n\t\t{\n\t\t\tif ($modSettings['tfa_mode'] == 2) //only do this if we are just forcing SOME membergroups\n\t\t\t{\n\t\t\t\t//Build an array of ALL user membergroups.\n\t\t\t\t$full_groups = array($user_settings['id_group']);\n\t\t\t\tif (!empty($user_settings['additional_groups']))\n\t\t\t\t{\n\t\t\t\t\t$full_groups = array_merge($full_groups, explode(',', $user_settings['additional_groups']));\n\t\t\t\t\t$full_groups = array_unique($full_groups); //duplicates, maybe?\n\t\t\t\t}\n\n\t\t\t\t//Find out if any group requires 2FA\n\t\t\t\t$request = $smcFunc['db_query']('', '\n\t\t\t\t\tSELECT COUNT(id_group) AS total\n\t\t\t\t\tFROM {db_prefix}membergroups\n\t\t\t\t\tWHERE tfa_required = {int:tfa_required}\n\t\t\t\t\t\tAND id_group IN ({array_int:full_groups})',\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'tfa_required' => 1,\n\t\t\t\t\t\t'full_groups' => $full_groups,\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\t$row = $smcFunc['db_fetch_assoc']($request);\n\t\t\t\t$smcFunc['db_free_result']($request);\n\t\t\t}\n\t\t\telse\n\t\t\t\t$row['total'] = 1; //simplifies logics in the next \"if\"\n\n\t\t\t$area = !empty($_REQUEST['area']) ? $_REQUEST['area'] : '';\n\t\t\t$action = !empty($_REQUEST['action']) ? $_REQUEST['action'] : '';\n\n\t\t\tif ($row['total'] > 0 && !in_array($action, array('profile', 'logout')) || ($action == 'profile' && $area != 'tfasetup'))\n\t\t\t\tredirectexit('action=profile;area=tfasetup;forced');\n\t\t}\n\t}\n\n\t// Found 'im, let's set up the variables.\n\tif ($id_member != 0)\n\t{\n\t\t// Let's not update the last visit time in these cases...\n\t\t// 1. SSI doesn't count as visiting the forum.\n\t\t// 2. RSS feeds and XMLHTTP requests don't count either.\n\t\t// 3. If it was set within this session, no need to set it again.\n\t\t// 4. New session, yet updated < five hours ago? Maybe cache can help.\n\t\t// 5. We're still logging in or authenticating\n\t\tif (SMF != 'SSI' && !isset($_REQUEST['xml']) && (!isset($_REQUEST['action']) || !in_array($_REQUEST['action'], array('.xml', 'login2', 'logintfa'))) && empty($_SESSION['id_msg_last_visit']) && (empty($modSettings['cache_enable']) || ($_SESSION['id_msg_last_visit'] = cache_get_data('user_last_visit-' . $id_member, 5 * 3600)) === null))\n\t\t{\n\t\t\t// @todo can this be cached?\n\t\t\t// Do a quick query to make sure this isn't a mistake.\n\t\t\t$result = $smcFunc['db_query']('', '\n\t\t\t\tSELECT poster_time\n\t\t\t\tFROM {db_prefix}messages\n\t\t\t\tWHERE id_msg = {int:id_msg}\n\t\t\t\tLIMIT 1',\n\t\t\t\tarray(\n\t\t\t\t\t'id_msg' => $user_settings['id_msg_last_visit'],\n\t\t\t\t)\n\t\t\t);\n\t\t\tlist ($visitTime) = $smcFunc['db_fetch_row']($result);\n\t\t\t$smcFunc['db_free_result']($result);\n\n\t\t\t$_SESSION['id_msg_last_visit'] = $user_settings['id_msg_last_visit'];\n\n\t\t\t// If it was *at least* five hours ago...\n\t\t\tif ($visitTime < time() - 5 * 3600)\n\t\t\t{\n\t\t\t\tupdateMemberData($id_member, array('id_msg_last_visit' => (int) $modSettings['maxMsgID'], 'last_login' => time(), 'member_ip' => $_SERVER['REMOTE_ADDR'], 'member_ip2' => $_SERVER['BAN_CHECK_IP']));\n\t\t\t\t$user_settings['last_login'] = time();\n\n\t\t\t\tif (!empty($modSettings['cache_enable']) && $modSettings['cache_enable'] >= 2)\n\t\t\t\t\tcache_put_data('user_settings-' . $id_member, $user_settings, 60);\n\n\t\t\t\tif (!empty($modSettings['cache_enable']))\n\t\t\t\t\tcache_put_data('user_last_visit-' . $id_member, $_SESSION['id_msg_last_visit'], 5 * 3600);\n\t\t\t}\n\t\t}\n\t\telseif (empty($_SESSION['id_msg_last_visit']))\n\t\t\t$_SESSION['id_msg_last_visit'] = $user_settings['id_msg_last_visit'];\n\n\t\t$username = $user_settings['member_name'];\n\n\t\tif (empty($user_settings['additional_groups']))\n\t\t\t$user_info = array(\n\t\t\t\t'groups' => array($user_settings['id_group'], $user_settings['id_post_group'])\n\t\t\t);\n\t\telse\n\t\t\t$user_info = array(\n\t\t\t\t'groups' => array_merge(\n\t\t\t\t\tarray($user_settings['id_group'], $user_settings['id_post_group']),\n\t\t\t\t\texplode(',', $user_settings['additional_groups'])\n\t\t\t\t)\n\t\t\t);\n\n\t\t// Because history has proven that it is possible for groups to go bad - clean up in case.\n\t\tforeach ($user_info['groups'] as $k => $v)\n\t\t\t$user_info['groups'][$k] = (int) $v;\n\n\t\t// This is a logged in user, so definitely not a spider.\n\t\t$user_info['possibly_robot'] = false;\n\n\t\t// Figure out the new time offset.\n\t\tif (!empty($user_settings['timezone']))\n\t\t{\n\t\t\t// Get the offsets from UTC for the server, then for the user.\n\t\t\t$tz_system = new DateTimeZone(@date_default_timezone_get());\n\t\t\t$tz_user = new DateTimeZone($user_settings['timezone']);\n\t\t\t$time_system = new DateTime('now', $tz_system);\n\t\t\t$time_user = new DateTime('now', $tz_user);\n\t\t\t$user_info['time_offset'] = ($tz_user->getOffset($time_user) - $tz_system->getOffset($time_system)) / 3600;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// !!! Compatibility.\n\t\t\t$user_info['time_offset'] = empty($user_settings['time_offset']) ? 0 :$user_settings['time_offset'];\n\t\t}\n\t}\n\t// If the user is a guest, initialize all the critical user settings.\n\telse\n\t{\n\t\t// This is what a guest's variables should be.\n\t\t$username = '';\n\t\t$user_info = array('groups' => array(-1));\n\t\t$user_settings = array();\n\n\t\tif (isset($_COOKIE[$cookiename]) && empty($context['tfa_member']))\n\t\t\t$_COOKIE[$cookiename] = '';\n\n\t\t// Expire the 2FA cookie\n\t\tif (isset($_COOKIE[$cookiename . '_tfa']) && empty($context['tfa_member']))\n\t\t{\n\t\t\t$tfa_data = smf_json_decode($_COOKIE[$cookiename . '_tfa'], true);\n\n\t\t\tif (is_null($tfa_data))\n\t\t\t\t$tfa_data = safe_unserialize($_COOKIE[$cookiename . '_tfa']);\n\n\t\t\tlist ($id, $user, $exp, $state, $preserve) = $tfa_data;\n\n\t\t\tif (!$preserve || time() > $exp)\n\t\t\t{\n\t\t\t\t$_COOKIE[$cookiename . '_tfa'] = '';\n\t\t\t\tsetTFACookie(-3600, 0, '');\n\t\t\t}\n\t\t}\n\n\t\t// Create a login token if it doesn't exist yet.\n\t\tif (!isset($_SESSION['token']['post-login']))\n\t\t\tcreateToken('login');\n\t\telse\n\t\t\tlist ($context['login_token_var'],,, $context['login_token']) = $_SESSION['token']['post-login'];\n\n\t\t// Do we perhaps think this is a search robot? Check every five minutes just in case...\n\t\tif ((!empty($modSettings['spider_mode']) || !empty($modSettings['spider_group'])) && (!isset($_SESSION['robot_check']) || $_SESSION['robot_check'] < time() - 300))\n\t\t{\n\t\t\trequire_once($sourcedir . '/ManageSearchEngines.php');\n\t\t\t$user_info['possibly_robot'] = SpiderCheck();\n\t\t}\n\t\telseif (!empty($modSettings['spider_mode']))\n\t\t\t$user_info['possibly_robot'] = isset($_SESSION['id_robot']) ? $_SESSION['id_robot'] : 0;\n\t\t// If we haven't turned on proper spider hunts then have a guess!\n\t\telse\n\t\t{\n\t\t\t$ci_user_agent = strtolower($_SERVER['HTTP_USER_AGENT']);\n\t\t\t$user_info['possibly_robot'] = (strpos($_SERVER['HTTP_USER_AGENT'], 'Mozilla') === false && strpos($_SERVER['HTTP_USER_AGENT'], 'Opera') === false) || strpos($ci_user_agent, 'googlebot') !== false || strpos($ci_user_agent, 'slurp') !== false || strpos($ci_user_agent, 'crawl') !== false || strpos($ci_user_agent, 'msnbot') !== false;\n\t\t}\n\n\t\t// We don't know the offset...\n\t\t$user_info['time_offset'] = 0;\n\t}\n\n\t// Set up the $user_info array.\n\t$user_info += array(\n\t\t'id' => $id_member,\n\t\t'username' => $username,\n\t\t'name' => isset($user_settings['real_name']) ? $user_settings['real_name'] : '',\n\t\t'email' => isset($user_settings['email_address']) ? $user_settings['email_address'] : '',\n\t\t'passwd' => isset($user_settings['passwd']) ? $user_settings['passwd'] : '',\n\t\t'language' => empty($user_settings['lngfile']) || empty($modSettings['userLanguage']) ? $language : $user_settings['lngfile'],\n\t\t'is_guest' => $id_member == 0,\n\t\t'is_admin' => in_array(1, $user_info['groups']),\n\t\t'theme' => empty($user_settings['id_theme']) ? 0 : $user_settings['id_theme'],\n\t\t'last_login' => empty($user_settings['last_login']) ? 0 : $user_settings['last_login'],\n\t\t'ip' => $_SERVER['REMOTE_ADDR'],\n\t\t'ip2' => $_SERVER['BAN_CHECK_IP'],\n\t\t'posts' => empty($user_settings['posts']) ? 0 : $user_settings['posts'],\n\t\t'time_format' => empty($user_settings['time_format']) ? $modSettings['time_format'] : $user_settings['time_format'],\n\t\t'avatar' => array(\n\t\t\t'url' => isset($user_settings['avatar']) ? $user_settings['avatar'] : '',\n\t\t\t'filename' => empty($user_settings['filename']) ? '' : $user_settings['filename'],\n\t\t\t'custom_dir' => !empty($user_settings['attachment_type']) && $user_settings['attachment_type'] == 1,\n\t\t\t'id_attach' => isset($user_settings['id_attach']) ? $user_settings['id_attach'] : 0\n\t\t),\n\t\t'smiley_set' => isset($user_settings['smiley_set']) ? $user_settings['smiley_set'] : '',\n\t\t'messages' => empty($user_settings['instant_messages']) ? 0 : $user_settings['instant_messages'],\n\t\t'unread_messages' => empty($user_settings['unread_messages']) ? 0 : $user_settings['unread_messages'],\n\t\t'alerts' => empty($user_settings['alerts']) ? 0 : $user_settings['alerts'],\n\t\t'total_time_logged_in' => empty($user_settings['total_time_logged_in']) ? 0 : $user_settings['total_time_logged_in'],\n\t\t'buddies' => !empty($modSettings['enable_buddylist']) && !empty($user_settings['buddy_list']) ? explode(',', $user_settings['buddy_list']) : array(),\n\t\t'ignoreboards' => !empty($user_settings['ignore_boards']) && !empty($modSettings['allow_ignore_boards']) ? explode(',', $user_settings['ignore_boards']) : array(),\n\t\t'ignoreusers' => !empty($user_settings['pm_ignore_list']) ? explode(',', $user_settings['pm_ignore_list']) : array(),\n\t\t'warning' => isset($user_settings['warning']) ? $user_settings['warning'] : 0,\n\t\t'permissions' => array(),\n\t);\n\t$user_info['groups'] = array_unique($user_info['groups']);\n\n\t// Make sure that the last item in the ignore boards array is valid. If the list was too long it could have an ending comma that could cause problems.\n\tif (!empty($user_info['ignoreboards']) && empty($user_info['ignoreboards'][$tmp = count($user_info['ignoreboards']) - 1]))\n\t\tunset($user_info['ignoreboards'][$tmp]);\n\n\t// Allow the user to change their language.\n\tif (!empty($modSettings['userLanguage']))\n\t{\n\t\t$languages = getLanguages();\n\n\t\t// Is it valid?\n\t\tif (!empty($_GET['language']) && isset($languages[strtr($_GET['language'], './\\\\:', '____')]))\n\t\t{\n\t\t\t$user_info['language'] = strtr($_GET['language'], './\\\\:', '____');\n\n\t\t\t// Make it permanent for memmbers.\n\t\t\tif (!empty($user_info['id']))\n\t\t\t\tupdateMemberData($user_info['id'], array('lngfile' => $user_info['language']));\n\t\t\telse\n\t\t\t\t$_SESSION['language'] = $user_info['language'];\n\t\t}\n\t\telseif (!empty($_SESSION['language']) && isset($languages[strtr($_SESSION['language'], './\\\\:', '____')]))\n\t\t\t$user_info['language'] = strtr($_SESSION['language'], './\\\\:', '____');\n\t}\n\n\t// Just build this here, it makes it easier to change/use - administrators can see all boards.\n\tif ($user_info['is_admin'])\n\t\t$user_info['query_see_board'] = '1=1';\n\t// Otherwise just the groups in $user_info['groups'].\n\telse\n\t\t$user_info['query_see_board'] = '((FIND_IN_SET(' . implode(', b.member_groups) != 0 OR FIND_IN_SET(', $user_info['groups']) . ', b.member_groups) != 0)' . (!empty($modSettings['deny_boards_access']) ? ' AND (FIND_IN_SET(' . implode(', b.deny_member_groups) = 0 AND FIND_IN_SET(', $user_info['groups']) . ', b.deny_member_groups) = 0)' : '') . (isset($user_info['mod_cache']) ? ' OR ' . $user_info['mod_cache']['mq'] : '') . ')';\n\n\t// Build the list of boards they WANT to see.\n\t// This will take the place of query_see_boards in certain spots, so it better include the boards they can see also\n\n\t// If they aren't ignoring any boards then they want to see all the boards they can see\n\tif (empty($user_info['ignoreboards']))\n\t\t$user_info['query_wanna_see_board'] = $user_info['query_see_board'];\n\t// Ok I guess they don't want to see all the boards\n\telse\n\t\t$user_info['query_wanna_see_board'] = '(' . $user_info['query_see_board'] . ' AND b.id_board NOT IN (' . implode(',', $user_info['ignoreboards']) . '))';\n\n\tcall_integration_hook('integrate_user_info');\n}\n\n/**\n * Check for moderators and see if they have access to the board.\n * What it does:\n * - sets up the $board_info array for current board information.\n * - if cache is enabled, the $board_info array is stored in cache.\n * - redirects to appropriate post if only message id is requested.\n * - is only used when inside a topic or board.\n * - determines the local moderators for the board.\n * - adds group id 3 if the user is a local moderator for the board they are in.\n * - prevents access if user is not in proper group nor a local moderator of the board.\n */\nfunction loadBoard()\n{\n\tglobal $txt, $scripturl, $context, $modSettings;\n\tglobal $board_info, $board, $topic, $user_info, $smcFunc;\n\n\t// Assume they are not a moderator.\n\t$user_info['is_mod'] = false;\n\t$context['user']['is_mod'] = &$user_info['is_mod'];\n\n\t// Start the linktree off empty..\n\t$context['linktree'] = array();\n\n\t// Have they by chance specified a message id but nothing else?\n\tif (empty($_REQUEST['action']) && empty($topic) && empty($board) && !empty($_REQUEST['msg']))\n\t{\n\t\t// Make sure the message id is really an int.\n\t\t$_REQUEST['msg'] = (int) $_REQUEST['msg'];\n\n\t\t// Looking through the message table can be slow, so try using the cache first.\n\t\tif (($topic = cache_get_data('msg_topic-' . $_REQUEST['msg'], 120)) === null)\n\t\t{\n\t\t\t$request = $smcFunc['db_query']('', '\n\t\t\t\tSELECT id_topic\n\t\t\t\tFROM {db_prefix}messages\n\t\t\t\tWHERE id_msg = {int:id_msg}\n\t\t\t\tLIMIT 1',\n\t\t\t\tarray(\n\t\t\t\t\t'id_msg' => $_REQUEST['msg'],\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// So did it find anything?\n\t\t\tif ($smcFunc['db_num_rows']($request))\n\t\t\t{\n\t\t\t\tlist ($topic) = $smcFunc['db_fetch_row']($request);\n\t\t\t\t$smcFunc['db_free_result']($request);\n\t\t\t\t// Save save save.\n\t\t\t\tcache_put_data('msg_topic-' . $_REQUEST['msg'], $topic, 120);\n\t\t\t}\n\t\t}\n\n\t\t// Remember redirection is the key to avoiding fallout from your bosses.\n\t\tif (!empty($topic))\n\t\t\tredirectexit('topic=' . $topic . '.msg' . $_REQUEST['msg'] . '#msg' . $_REQUEST['msg']);\n\t\telse\n\t\t{\n\t\t\tloadPermissions();\n\t\t\tloadTheme();\n\t\t\tfatal_lang_error('topic_gone', false);\n\t\t}\n\t}\n\n\t// Load this board only if it is specified.\n\tif (empty($board) && empty($topic))\n\t{\n\t\t$board_info = array('moderators' => array(), 'moderator_groups' => array());\n\t\treturn;\n\t}\n\n\tif (!empty($modSettings['cache_enable']) && (empty($topic) || $modSettings['cache_enable'] >= 3))\n\t{\n\t\t// @todo SLOW?\n\t\tif (!empty($topic))\n\t\t\t$temp = cache_get_data('topic_board-' . $topic, 120);\n\t\telse\n\t\t\t$temp = cache_get_data('board-' . $board, 120);\n\n\t\tif (!empty($temp))\n\t\t{\n\t\t\t$board_info = $temp;\n\t\t\t$board = $board_info['id'];\n\t\t}\n\t}\n\n\tif (empty($temp))\n\t{\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT\n\t\t\t\tc.id_cat, b.name AS bname, b.description, b.num_topics, b.member_groups, b.deny_member_groups,\n\t\t\t\tb.id_parent, c.name AS cname, COALESCE(mg.id_group, 0) AS id_moderator_group, mg.group_name,\n\t\t\t\tCOALESCE(mem.id_member, 0) AS id_moderator,\n\t\t\t\tmem.real_name' . (!empty($topic) ? ', b.id_board' : '') . ', b.child_level,\n\t\t\t\tb.id_theme, b.override_theme, b.count_posts, b.id_profile, b.redirect,\n\t\t\t\tb.unapproved_topics, b.unapproved_posts' . (!empty($topic) ? ', t.approved, t.id_member_started' : '') . '\n\t\t\tFROM {db_prefix}boards AS b' . (!empty($topic) ? '\n\t\t\t\tINNER JOIN {db_prefix}topics AS t ON (t.id_topic = {int:current_topic})' : '') . '\n\t\t\t\tLEFT JOIN {db_prefix}categories AS c ON (c.id_cat = b.id_cat)\n\t\t\t\tLEFT JOIN {db_prefix}moderator_groups AS modgs ON (modgs.id_board = {raw:board_link})\n\t\t\t\tLEFT JOIN {db_prefix}membergroups AS mg ON (mg.id_group = modgs.id_group)\n\t\t\t\tLEFT JOIN {db_prefix}moderators AS mods ON (mods.id_board = {raw:board_link})\n\t\t\t\tLEFT JOIN {db_prefix}members AS mem ON (mem.id_member = mods.id_member)\n\t\t\tWHERE b.id_board = {raw:board_link}',\n\t\t\tarray(\n\t\t\t\t'current_topic' => $topic,\n\t\t\t\t'board_link' => empty($topic) ? $smcFunc['db_quote']('{int:current_board}', array('current_board' => $board)) : 't.id_board',\n\t\t\t)\n\t\t);\n\t\t// If there aren't any, skip.\n\t\tif ($smcFunc['db_num_rows']($request) > 0)\n\t\t{\n\t\t\t$row = $smcFunc['db_fetch_assoc']($request);\n\n\t\t\t// Set the current board.\n\t\t\tif (!empty($row['id_board']))\n\t\t\t\t$board = $row['id_board'];\n\n\t\t\t// Basic operating information. (globals... :/)\n\t\t\t$board_info = array(\n\t\t\t\t'id' => $board,\n\t\t\t\t'moderators' => array(),\n\t\t\t\t'moderator_groups' => array(),\n\t\t\t\t'cat' => array(\n\t\t\t\t\t'id' => $row['id_cat'],\n\t\t\t\t\t'name' => $row['cname']\n\t\t\t\t),\n\t\t\t\t'name' => $row['bname'],\n\t\t\t\t'description' => $row['description'],\n\t\t\t\t'num_topics' => $row['num_topics'],\n\t\t\t\t'unapproved_topics' => $row['unapproved_topics'],\n\t\t\t\t'unapproved_posts' => $row['unapproved_posts'],\n\t\t\t\t'unapproved_user_topics' => 0,\n\t\t\t\t'parent_boards' => getBoardParents($row['id_parent']),\n\t\t\t\t'parent' => $row['id_parent'],\n\t\t\t\t'child_level' => $row['child_level'],\n\t\t\t\t'theme' => $row['id_theme'],\n\t\t\t\t'override_theme' => !empty($row['override_theme']),\n\t\t\t\t'profile' => $row['id_profile'],\n\t\t\t\t'redirect' => $row['redirect'],\n\t\t\t\t'recycle' => !empty($modSettings['recycle_enable']) && !empty($modSettings['recycle_board']) && $modSettings['recycle_board'] == $board,\n\t\t\t\t'posts_count' => empty($row['count_posts']),\n\t\t\t\t'cur_topic_approved' => empty($topic) || $row['approved'],\n\t\t\t\t'cur_topic_starter' => empty($topic) ? 0 : $row['id_member_started'],\n\t\t\t);\n\n\t\t\t// Load the membergroups allowed, and check permissions.\n\t\t\t$board_info['groups'] = $row['member_groups'] == '' ? array() : explode(',', $row['member_groups']);\n\t\t\t$board_info['deny_groups'] = $row['deny_member_groups'] == '' ? array() : explode(',', $row['deny_member_groups']);\n\n\t\t\tdo\n\t\t\t{\n\t\t\t\tif (!empty($row['id_moderator']))\n\t\t\t\t\t$board_info['moderators'][$row['id_moderator']] = array(\n\t\t\t\t\t\t'id' => $row['id_moderator'],\n\t\t\t\t\t\t'name' => $row['real_name'],\n\t\t\t\t\t\t'href' => $scripturl . '?action=profile;u=' . $row['id_moderator'],\n\t\t\t\t\t\t'link' => '<a href=\"' . $scripturl . '?action=profile;u=' . $row['id_moderator'] . '\">' . $row['real_name'] . '</a>'\n\t\t\t\t\t);\n\n\t\t\t\tif (!empty($row['id_moderator_group']))\n\t\t\t\t\t$board_info['moderator_groups'][$row['id_moderator_group']] = array(\n\t\t\t\t\t\t'id' => $row['id_moderator_group'],\n\t\t\t\t\t\t'name' => $row['group_name'],\n\t\t\t\t\t\t'href' => $scripturl . '?action=groups;sa=members;group=' . $row['id_moderator_group'],\n\t\t\t\t\t\t'link' => '<a href=\"' . $scripturl . '?action=groups;sa=members;group=' . $row['id_moderator_group'] . '\">' . $row['group_name'] . '</a>'\n\t\t\t\t\t);\n\t\t\t}\n\t\t\twhile ($row = $smcFunc['db_fetch_assoc']($request));\n\n\t\t\t// If the board only contains unapproved posts and the user isn't an approver then they can't see any topics.\n\t\t\t// If that is the case do an additional check to see if they have any topics waiting to be approved.\n\t\t\tif ($board_info['num_topics'] == 0 && $modSettings['postmod_active'] && !allowedTo('approve_posts'))\n\t\t\t{\n\t\t\t\t// Free the previous result\n\t\t\t\t$smcFunc['db_free_result']($request);\n\n\t\t\t\t// @todo why is this using id_topic?\n\t\t\t\t// @todo Can this get cached?\n\t\t\t\t$request = $smcFunc['db_query']('', '\n\t\t\t\t\tSELECT COUNT(id_topic)\n\t\t\t\t\tFROM {db_prefix}topics\n\t\t\t\t\tWHERE id_member_started={int:id_member}\n\t\t\t\t\t\tAND approved = {int:unapproved}\n\t\t\t\t\t\tAND id_board = {int:board}',\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'id_member' => $user_info['id'],\n\t\t\t\t\t\t'unapproved' => 0,\n\t\t\t\t\t\t'board' => $board,\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tlist ($board_info['unapproved_user_topics']) = $smcFunc['db_fetch_row']($request);\n\t\t\t}\n\n\t\t\tif (!empty($modSettings['cache_enable']) && (empty($topic) || $modSettings['cache_enable'] >= 3))\n\t\t\t{\n\t\t\t\t// @todo SLOW?\n\t\t\t\tif (!empty($topic))\n\t\t\t\t\tcache_put_data('topic_board-' . $topic, $board_info, 120);\n\t\t\t\tcache_put_data('board-' . $board, $board_info, 120);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise the topic is invalid, there are no moderators, etc.\n\t\t\t$board_info = array(\n\t\t\t\t'moderators' => array(),\n\t\t\t\t'moderator_groups' => array(),\n\t\t\t\t'error' => 'exist'\n\t\t\t);\n\t\t\t$topic = null;\n\t\t\t$board = 0;\n\t\t}\n\t\t$smcFunc['db_free_result']($request);\n\t}\n\n\tif (!empty($topic))\n\t\t$_GET['board'] = (int) $board;\n\n\tif (!empty($board))\n\t{\n\t\t// Get this into an array of keys for array_intersect\n\t\t$moderator_groups = array_keys($board_info['moderator_groups']);\n\n\t\t// Now check if the user is a moderator.\n\t\t$user_info['is_mod'] = isset($board_info['moderators'][$user_info['id']]) || count(array_intersect($user_info['groups'], $moderator_groups)) != 0;\n\n\t\tif (count(array_intersect($user_info['groups'], $board_info['groups'])) == 0 && !$user_info['is_admin'])\n\t\t\t$board_info['error'] = 'access';\n\t\tif (!empty($modSettings['deny_boards_access']) && count(array_intersect($user_info['groups'], $board_info['deny_groups'])) != 0 && !$user_info['is_admin'])\n\t\t\t$board_info['error'] = 'access';\n\n\t\t// Build up the linktree.\n\t\t$context['linktree'] = array_merge(\n\t\t\t$context['linktree'],\n\t\t\tarray(array(\n\t\t\t\t'url' => $scripturl . '#c' . $board_info['cat']['id'],\n\t\t\t\t'name' => $board_info['cat']['name']\n\t\t\t)),\n\t\t\tarray_reverse($board_info['parent_boards']),\n\t\t\tarray(array(\n\t\t\t\t'url' => $scripturl . '?board=' . $board . '.0',\n\t\t\t\t'name' => $board_info['name']\n\t\t\t))\n\t\t);\n\t}\n\n\t// Set the template contextual information.\n\t$context['user']['is_mod'] = &$user_info['is_mod'];\n\t$context['current_topic'] = $topic;\n\t$context['current_board'] = $board;\n\n\t// No posting in redirection boards!\n\tif (!empty($_REQUEST['action']) && $_REQUEST['action'] == 'post' && !empty($board_info['redirect']))\n\t\t$board_info['error'] == 'post_in_redirect';\n\n\t// Hacker... you can't see this topic, I'll tell you that. (but moderators can!)\n\tif (!empty($board_info['error']) && (!empty($modSettings['deny_boards_access']) || $board_info['error'] != 'access' || !$user_info['is_mod']))\n\t{\n\t\t// The permissions and theme need loading, just to make sure everything goes smoothly.\n\t\tloadPermissions();\n\t\tloadTheme();\n\n\t\t$_GET['board'] = '';\n\t\t$_GET['topic'] = '';\n\n\t\t// The linktree should not give the game away mate!\n\t\t$context['linktree'] = array(\n\t\t\tarray(\n\t\t\t\t'url' => $scripturl,\n\t\t\t\t'name' => $context['forum_name_html_safe']\n\t\t\t)\n\t\t);\n\n\t\t// If it's a prefetching agent or we're requesting an attachment.\n\t\tif ((isset($_SERVER['HTTP_X_MOZ']) && $_SERVER['HTTP_X_MOZ'] == 'prefetch') || (!empty($_REQUEST['action']) && $_REQUEST['action'] === 'dlattach'))\n\t\t{\n\t\t\tob_end_clean();\n\t\t\theader('HTTP/1.1 403 Forbidden');\n\t\t\tdie;\n\t\t}\n\t\telseif ($board_info['error'] == 'post_in_redirect')\n\t\t{\n\t\t\t// Slightly different error message here...\n\t\t\tfatal_lang_error('cannot_post_redirect', false);\n\t\t}\n\t\telseif ($user_info['is_guest'])\n\t\t{\n\t\t\tloadLanguage('Errors');\n\t\t\tis_not_guest($txt['topic_gone']);\n\t\t}\n\t\telse\n\t\t\tfatal_lang_error('topic_gone', false);\n\t}\n\n\tif ($user_info['is_mod'])\n\t\t$user_info['groups'][] = 3;\n}\n\n/**\n * Load this user's permissions.\n */\nfunction loadPermissions()\n{\n\tglobal $user_info, $board, $board_info, $modSettings, $smcFunc, $sourcedir;\n\n\tif ($user_info['is_admin'])\n\t{\n\t\tbanPermissions();\n\t\treturn;\n\t}\n\n\tif (!empty($modSettings['cache_enable']))\n\t{\n\t\t$cache_groups = $user_info['groups'];\n\t\tasort($cache_groups);\n\t\t$cache_groups = implode(',', $cache_groups);\n\t\t// If it's a spider then cache it different.\n\t\tif ($user_info['possibly_robot'])\n\t\t\t$cache_groups .= '-spider';\n\n\t\tif ($modSettings['cache_enable'] >= 2 && !empty($board) && ($temp = cache_get_data('permissions:' . $cache_groups . ':' . $board, 240)) != null && time() - 240 > $modSettings['settings_updated'])\n\t\t{\n\t\t\tlist ($user_info['permissions']) = $temp;\n\t\t\tbanPermissions();\n\n\t\t\treturn;\n\t\t}\n\t\telseif (($temp = cache_get_data('permissions:' . $cache_groups, 240)) != null && time() - 240 > $modSettings['settings_updated'])\n\t\t\tlist ($user_info['permissions'], $removals) = $temp;\n\t}\n\n\t// If it is detected as a robot, and we are restricting permissions as a special group - then implement this.\n\t$spider_restrict = $user_info['possibly_robot'] && !empty($modSettings['spider_group']) ? ' OR (id_group = {int:spider_group} AND add_deny = 0)' : '';\n\n\tif (empty($user_info['permissions']))\n\t{\n\t\t// Get the general permissions.\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT permission, add_deny\n\t\t\tFROM {db_prefix}permissions\n\t\t\tWHERE id_group IN ({array_int:member_groups})\n\t\t\t\t' . $spider_restrict,\n\t\t\tarray(\n\t\t\t\t'member_groups' => $user_info['groups'],\n\t\t\t\t'spider_group' => !empty($modSettings['spider_group']) ? $modSettings['spider_group'] : 0,\n\t\t\t)\n\t\t);\n\t\t$removals = array();\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t{\n\t\t\tif (empty($row['add_deny']))\n\t\t\t\t$removals[] = $row['permission'];\n\t\t\telse\n\t\t\t\t$user_info['permissions'][] = $row['permission'];\n\t\t}\n\t\t$smcFunc['db_free_result']($request);\n\n\t\tif (isset($cache_groups))\n\t\t\tcache_put_data('permissions:' . $cache_groups, array($user_info['permissions'], $removals), 240);\n\t}\n\n\t// Get the board permissions.\n\tif (!empty($board))\n\t{\n\t\t// Make sure the board (if any) has been loaded by loadBoard().\n\t\tif (!isset($board_info['profile']))\n\t\t\tfatal_lang_error('no_board');\n\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT permission, add_deny\n\t\t\tFROM {db_prefix}board_permissions\n\t\t\tWHERE (id_group IN ({array_int:member_groups})\n\t\t\t\t' . $spider_restrict . ')\n\t\t\t\tAND id_profile = {int:id_profile}',\n\t\t\tarray(\n\t\t\t\t'member_groups' => $user_info['groups'],\n\t\t\t\t'id_profile' => $board_info['profile'],\n\t\t\t\t'spider_group' => !empty($modSettings['spider_group']) ? $modSettings['spider_group'] : 0,\n\t\t\t)\n\t\t);\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t{\n\t\t\tif (empty($row['add_deny']))\n\t\t\t\t$removals[] = $row['permission'];\n\t\t\telse\n\t\t\t\t$user_info['permissions'][] = $row['permission'];\n\t\t}\n\t\t$smcFunc['db_free_result']($request);\n\t}\n\n\t// Remove all the permissions they shouldn't have ;).\n\tif (!empty($modSettings['permission_enable_deny']))\n\t\t$user_info['permissions'] = array_diff($user_info['permissions'], $removals);\n\n\tif (isset($cache_groups) && !empty($board) && $modSettings['cache_enable'] >= 2)\n\t\tcache_put_data('permissions:' . $cache_groups . ':' . $board, array($user_info['permissions'], null), 240);\n\n\t// Banned?  Watch, don't touch..\n\tbanPermissions();\n\n\t// Load the mod cache so we can know what additional boards they should see, but no sense in doing it for guests\n\tif (!$user_info['is_guest'])\n\t{\n\t\tif (!isset($_SESSION['mc']) || $_SESSION['mc']['time'] <= $modSettings['settings_updated'])\n\t\t{\n\t\t\trequire_once($sourcedir . '/Subs-Auth.php');\n\t\t\trebuildModCache();\n\t\t}\n\t\telse\n\t\t\t$user_info['mod_cache'] = $_SESSION['mc'];\n\n\t\t// This is a useful phantom permission added to the current user, and only the current user while they are logged in.\n\t\t// For example this drastically simplifies certain changes to the profile area.\n\t\t$user_info['permissions'][] = 'is_not_guest';\n\t\t// And now some backwards compatibility stuff for mods and whatnot that aren't expecting the new permissions.\n\t\t$user_info['permissions'][] = 'profile_view_own';\n\t\tif (in_array('profile_view', $user_info['permissions']))\n\t\t\t$user_info['permissions'][] = 'profile_view_any';\n\t}\n}\n\n/**\n * Loads an array of users' data by ID or member_name.\n *\n * @param array|string $users An array of users by id or name or a single username/id\n * @param bool $is_name Whether $users contains names\n * @param string $set What kind of data to load (normal, profile, minimal)\n * @return array The ids of the members loaded\n */\nfunction loadMemberData($users, $is_name = false, $set = 'normal')\n{\n\tglobal $user_profile, $modSettings, $board_info, $smcFunc, $context;\n\tglobal $image_proxy_enabled, $image_proxy_secret, $boardurl;\n\n\t// Can't just look for no users :P.\n\tif (empty($users))\n\t\treturn array();\n\n\t// Pass the set value\n\t$context['loadMemberContext_set'] = $set;\n\n\t// Make sure it's an array.\n\t$users = !is_array($users) ? array($users) : array_unique($users);\n\t$loaded_ids = array();\n\n\tif (!$is_name && !empty($modSettings['cache_enable']) && $modSettings['cache_enable'] >= 3)\n\t{\n\t\t$users = array_values($users);\n\t\tfor ($i = 0, $n = count($users); $i < $n; $i++)\n\t\t{\n\t\t\t$data = cache_get_data('member_data-' . $set . '-' . $users[$i], 240);\n\t\t\tif ($data == null)\n\t\t\t\tcontinue;\n\n\t\t\t$loaded_ids[] = $data['id_member'];\n\t\t\t$user_profile[$data['id_member']] = $data;\n\t\t\tunset($users[$i]);\n\t\t}\n\t}\n\n\t// Used by default\n\t$select_columns = '\n\t\t\tCOALESCE(lo.log_time, 0) AS is_online, COALESCE(a.id_attach, 0) AS id_attach, a.filename, a.attachment_type,\n\t\t\tmem.signature, mem.personal_text, mem.avatar, mem.id_member, mem.member_name,\n\t\t\tmem.real_name, mem.email_address, mem.date_registered, mem.website_title, mem.website_url,\n\t\t\tmem.birthdate, mem.member_ip, mem.member_ip2, mem.posts, mem.last_login, mem.id_post_group, mem.lngfile, mem.id_group, mem.time_offset, mem.show_online,\n\t\t\tmg.online_color AS member_group_color, COALESCE(mg.group_name, {string:blank_string}) AS member_group,\n\t\t\tpg.online_color AS post_group_color, COALESCE(pg.group_name, {string:blank_string}) AS post_group,\n\t\t\tmem.is_activated, mem.warning, ' . (!empty($modSettings['titlesEnable']) ? 'mem.usertitle, ' : '') . '\n\t\t\tCASE WHEN mem.id_group = 0 OR mg.icons = {string:blank_string} THEN pg.icons ELSE mg.icons END AS icons';\n\t$select_tables = '\n\t\t\tLEFT JOIN {db_prefix}log_online AS lo ON (lo.id_member = mem.id_member)\n\t\t\tLEFT JOIN {db_prefix}attachments AS a ON (a.id_member = mem.id_member)\n\t\t\tLEFT JOIN {db_prefix}membergroups AS pg ON (pg.id_group = mem.id_post_group)\n\t\t\tLEFT JOIN {db_prefix}membergroups AS mg ON (mg.id_group = mem.id_group)';\n\n\t// We add or replace according the the set\n\tswitch ($set)\n\t{\n\t\tcase 'normal':\n\t\t\t$select_columns .= ', mem.buddy_list,  mem.additional_groups';\n\t\t\tbreak;\n\t\tcase 'profile':\n\t\t\t$select_columns .= ', mem.additional_groups, mem.id_theme, mem.pm_ignore_list, mem.pm_receive_from,\n\t\t\tmem.time_format, mem.timezone, mem.secret_question, mem.smiley_set, mem.tfa_secret,\n\t\t\tmem.total_time_logged_in, lo.url, mem.ignore_boards, mem.password_salt, mem.pm_prefs, mem.buddy_list, mem.alerts';\n\t\t\tbreak;\n\t\tcase 'minimal':\n\t\t\t$select_columns = '\n\t\t\tmem.id_member, mem.member_name, mem.real_name, mem.email_address, mem.date_registered,\n\t\t\tmem.posts, mem.last_login, mem.member_ip, mem.member_ip2, mem.lngfile, mem.id_group';\n\t\t\t$select_tables = '';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ttrigger_error('loadMemberData(): Invalid member data set \\'' . $set . '\\'', E_USER_WARNING);\n\t}\n\n\t// Allow mods to easily add to the selected member data\n\tcall_integration_hook('integrate_load_member_data', array(&$select_columns, &$select_tables, &$set));\n\n\tif (!empty($users))\n\t{\n\t\t// Load the member's data.\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT' . $select_columns . '\n\t\t\tFROM {db_prefix}members AS mem' . $select_tables . '\n\t\t\tWHERE mem.' . ($is_name ? 'member_name' : 'id_member') . ' IN ({' . ($is_name ? 'array_string' : 'array_int') . ':users})',\n\t\t\tarray(\n\t\t\t\t'blank_string' => '',\n\t\t\t\t'users' => $users,\n\t\t\t)\n\t\t);\n\t\t$new_loaded_ids = array();\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t{\n\t\t\t// Take care of proxying avatar if required, do this here for maximum reach\n\t\t\tif ($image_proxy_enabled && !empty($row['avatar']) && stripos($row['avatar'], 'http://') !== false)\n\t\t\t\t$row['avatar'] = $boardurl . '/proxy.php?request=' . urlencode($row['avatar']) . '&hash=' . md5($row['avatar'] . $image_proxy_secret);\n\n\t\t\tif ( isset($row['member_ip']) )\n\t\t\t\t$row['member_ip'] = inet_dtop($row['member_ip']);\n\t\t\tif ( isset($row['member_ip2']) )\n\t\t\t\t$row['member_ip2'] = inet_dtop($row['member_ip2']);\n\t\t\t$new_loaded_ids[] = $row['id_member'];\n\t\t\t$loaded_ids[] = $row['id_member'];\n\t\t\t$row['options'] = array();\n\t\t\t$user_profile[$row['id_member']] = $row;\n\t\t}\n\t\t$smcFunc['db_free_result']($request);\n\t}\n\n\tif (!empty($new_loaded_ids) && $set !== 'minimal')\n\t{\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT *\n\t\t\tFROM {db_prefix}themes\n\t\t\tWHERE id_member IN ({array_int:loaded_ids})',\n\t\t\tarray(\n\t\t\t\t'loaded_ids' => $new_loaded_ids,\n\t\t\t)\n\t\t);\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t\t$user_profile[$row['id_member']]['options'][$row['variable']] = $row['value'];\n\t\t$smcFunc['db_free_result']($request);\n\t}\n\n\t$additional_mods = array();\n\n\t// Are any of these users in groups assigned to moderate this board?\n\tif (!empty($loaded_ids) && !empty($board_info['moderator_groups']) && $set === 'normal')\n\t{\n\t\tforeach ($loaded_ids as $a_member)\n\t\t{\n\t\t\tif (!empty($user_profile[$a_member]['additional_groups']))\n\t\t\t\t$groups = array_merge(array($user_profile[$a_member]['id_group']), explode(',', $user_profile[$a_member]['additional_groups']));\n\t\t\telse\n\t\t\t\t$groups = array($user_profile[$a_member]['id_group']);\n\n\t\t\t$temp = array_intersect($groups, array_keys($board_info['moderator_groups']));\n\n\t\t\tif (!empty($temp))\n\t\t\t{\n\t\t\t\t$additional_mods[] = $a_member;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!empty($new_loaded_ids) && !empty($modSettings['cache_enable']) && $modSettings['cache_enable'] >= 3)\n\t{\n\t\tfor ($i = 0, $n = count($new_loaded_ids); $i < $n; $i++)\n\t\t\tcache_put_data('member_data-' . $set . '-' . $new_loaded_ids[$i], $user_profile[$new_loaded_ids[$i]], 240);\n\t}\n\n\t// Are we loading any moderators?  If so, fix their group data...\n\tif (!empty($loaded_ids) && (!empty($board_info['moderators']) || !empty($board_info['moderator_groups'])) && $set === 'normal' && count($temp_mods = array_merge(array_intersect($loaded_ids, array_keys($board_info['moderators'])), $additional_mods)) !== 0)\n\t{\n\t\tif (($row = cache_get_data('moderator_group_info', 480)) == null)\n\t\t{\n\t\t\t$request = $smcFunc['db_query']('', '\n\t\t\t\tSELECT group_name AS member_group, online_color AS member_group_color, icons\n\t\t\t\tFROM {db_prefix}membergroups\n\t\t\t\tWHERE id_group = {int:moderator_group}\n\t\t\t\tLIMIT 1',\n\t\t\t\tarray(\n\t\t\t\t\t'moderator_group' => 3,\n\t\t\t\t)\n\t\t\t);\n\t\t\t$row = $smcFunc['db_fetch_assoc']($request);\n\t\t\t$smcFunc['db_free_result']($request);\n\n\t\t\tcache_put_data('moderator_group_info', $row, 480);\n\t\t}\n\n\t\tforeach ($temp_mods as $id)\n\t\t{\n\t\t\t// By popular demand, don't show admins or global moderators as moderators.\n\t\t\tif ($user_profile[$id]['id_group'] != 1 && $user_profile[$id]['id_group'] != 2)\n\t\t\t\t$user_profile[$id]['member_group'] = $row['member_group'];\n\n\t\t\t// If the Moderator group has no color or icons, but their group does... don't overwrite.\n\t\t\tif (!empty($row['icons']))\n\t\t\t\t$user_profile[$id]['icons'] = $row['icons'];\n\t\t\tif (!empty($row['member_group_color']))\n\t\t\t\t$user_profile[$id]['member_group_color'] = $row['member_group_color'];\n\t\t}\n\t}\n\n\treturn $loaded_ids;\n}\n\n/**\n * Loads the user's basic values... meant for template/theme usage.\n *\n * @param int $user The ID of a user previously loaded by {@link loadMemberData()}\n * @param bool $display_custom_fields Whether or not to display custom profile fields\n * @return boolean Whether or not the data was loaded successfully\n */\nfunction loadMemberContext($user, $display_custom_fields = false)\n{\n\tglobal $memberContext, $user_profile, $txt, $scripturl, $user_info;\n\tglobal $context, $modSettings, $settings, $smcFunc;\n\tstatic $dataLoaded = array();\n\n\t// If this person's data is already loaded, skip it.\n\tif (isset($dataLoaded[$user]))\n\t\treturn true;\n\n\t// We can't load guests or members not loaded by loadMemberData()!\n\tif ($user == 0)\n\t\treturn false;\n\tif (!isset($user_profile[$user]))\n\t{\n\t\ttrigger_error('loadMemberContext(): member id ' . $user . ' not previously loaded by loadMemberData()', E_USER_WARNING);\n\t\treturn false;\n\t}\n\n\t// Well, it's loaded now anyhow.\n\t$dataLoaded[$user] = true;\n\t$profile = $user_profile[$user];\n\n\t// Censor everything.\n\tcensorText($profile['signature']);\n\tcensorText($profile['personal_text']);\n\n\t// Set things up to be used before hand.\n\t$profile['signature'] = str_replace(array(\"\\n\", \"\\r\"), array('<br>', ''), $profile['signature']);\n\t$profile['signature'] = parse_bbc($profile['signature'], true, 'sig' . $profile['id_member']);\n\n\t$profile['is_online'] = (!empty($profile['show_online']) || allowedTo('moderate_forum')) && $profile['is_online'] > 0;\n\t$profile['icons'] = empty($profile['icons']) ? array('', '') : explode('#', $profile['icons']);\n\t// Setup the buddy status here (One whole in_array call saved :P)\n\t$profile['buddy'] = in_array($profile['id_member'], $user_info['buddies']);\n\t$buddy_list = !empty($profile['buddy_list']) ? explode(',', $profile['buddy_list']) : array();\n\n\t//We need a little fallback for the membergroup icons. If it doesn't exist in the current theme, fallback to default theme\n\tif (isset($profile['icons'][1]) && file_exists($settings['actual_theme_dir'] . '/images/membericons/' . $profile['icons'][1])) //icon is set and exists\n\t\t$group_icon_url = $settings['images_url'] . '/membericons/' . $profile['icons'][1];\n\telseif (isset($profile['icons'][1])) //icon is set and doesn't exist, fallback to default\n\t\t$group_icon_url = $settings['default_images_url'] . '/membericons/' . $profile['icons'][1];\n\telse //not set, bye bye\n\t\t$group_icon_url = '';\n\n\t// These minimal values are always loaded\n\t$memberContext[$user] = array(\n\t\t'username' => $profile['member_name'],\n\t\t'name' => $profile['real_name'],\n\t\t'id' => $profile['id_member'],\n\t\t'href' => $scripturl . '?action=profile;u=' . $profile['id_member'],\n\t\t'link' => '<a href=\"' . $scripturl . '?action=profile;u=' . $profile['id_member'] . '\" title=\"' . $txt['profile_of'] . ' ' . $profile['real_name'] . '\" '. (!empty($modSettings['onlineEnable']) ? 'class=\"pm_icon\"' : '').'>' . $profile['real_name'] . '</a>',\n\t\t'email' => $profile['email_address'],\n\t\t'show_email' => !$user_info['is_guest'] && ($user_info['id'] == $profile['id_member'] || allowedTo('moderate_forum')),\n\t\t'registered' => empty($profile['date_registered']) ? $txt['not_applicable'] : timeformat($profile['date_registered']),\n\t\t'registered_timestamp' => empty($profile['date_registered']) ? 0 : forum_time(true, $profile['date_registered']),\n\t);\n\n\t// If the set isn't minimal then load the monstrous array.\n\tif ($context['loadMemberContext_set'] != 'minimal')\n\t\t$memberContext[$user] += array(\n\t\t\t'username_color' => '<span '. (!empty($profile['member_group_color']) ? 'style=\"color:'. $profile['member_group_color'] .';\"' : '') .'>'. $profile['member_name'] .'</span>',\n\t\t\t'name_color' => '<span '. (!empty($profile['member_group_color']) ? 'style=\"color:'. $profile['member_group_color'] .';\"' : '') .'>'. $profile['real_name'] .'</span>',\n\t\t\t'link_color' => '<a href=\"' . $scripturl . '?action=profile;u=' . $profile['id_member'] . '\" title=\"' . $txt['profile_of'] . ' ' . $profile['real_name'] . '\" '. (!empty($profile['member_group_color']) ? 'style=\"color:'. $profile['member_group_color'] .';\"' : '') .'>' . $profile['real_name'] . '</a>',\n\t\t\t'is_buddy' => $profile['buddy'],\n\t\t\t'is_reverse_buddy' => in_array($user_info['id'], $buddy_list),\n\t\t\t'buddies' => $buddy_list,\n\t\t\t'title' => !empty($modSettings['titlesEnable']) ? $profile['usertitle'] : '',\n\t\t\t'blurb' => $profile['personal_text'],\n\t\t\t'website' => array(\n\t\t\t\t'title' => $profile['website_title'],\n\t\t\t\t'url' => $profile['website_url'],\n\t\t\t),\n\t\t\t'birth_date' => empty($profile['birthdate']) || $profile['birthdate'] === '0001-01-01' ? '0000-00-00' : (substr($profile['birthdate'], 0, 4) === '0004' ? '0000' . substr($profile['birthdate'], 4) : $profile['birthdate']),\n\t\t\t'signature' => $profile['signature'],\n\t\t\t'real_posts' => $profile['posts'],\n\t\t\t'posts' => $profile['posts'] > 500000 ? $txt['geek'] : comma_format($profile['posts']),\n\t\t\t'last_login' => empty($profile['last_login']) ? $txt['never'] : timeformat($profile['last_login']),\n\t\t\t'last_login_timestamp' => empty($profile['last_login']) ? 0 : forum_time(0, $profile['last_login']),\n\t\t\t'ip' => $smcFunc['htmlspecialchars']($profile['member_ip']),\n\t\t\t'ip2' => $smcFunc['htmlspecialchars']($profile['member_ip2']),\n\t\t\t'online' => array(\n\t\t\t\t'is_online' => $profile['is_online'],\n\t\t\t\t'text' => $smcFunc['htmlspecialchars']($txt[$profile['is_online'] ? 'online' : 'offline']),\n\t\t\t\t'member_online_text' => sprintf($txt[$profile['is_online'] ? 'member_is_online' : 'member_is_offline'], $smcFunc['htmlspecialchars']($profile['real_name'])),\n\t\t\t\t'href' => $scripturl . '?action=pm;sa=send;u=' . $profile['id_member'],\n\t\t\t\t'link' => '<a href=\"' . $scripturl . '?action=pm;sa=send;u=' . $profile['id_member'] . '\">' . $txt[$profile['is_online'] ? 'online' : 'offline'] . '</a>',\n\t\t\t\t'label' => $txt[$profile['is_online'] ? 'online' : 'offline']\n\t\t\t),\n\t\t\t'language' => $smcFunc['ucwords'](strtr($profile['lngfile'], array('_' => ' ', '-utf8' => ''))),\n\t\t\t'is_activated' => isset($profile['is_activated']) ? $profile['is_activated'] : 1,\n\t\t\t'is_banned' => isset($profile['is_activated']) ? $profile['is_activated'] >= 10 : 0,\n\t\t\t'options' => $profile['options'],\n\t\t\t'is_guest' => false,\n\t\t\t'group' => $profile['member_group'],\n\t\t\t'group_color' => $profile['member_group_color'],\n\t\t\t'group_id' => $profile['id_group'],\n\t\t\t'post_group' => $profile['post_group'],\n\t\t\t'post_group_color' => $profile['post_group_color'],\n\t\t\t'group_icons' => str_repeat('<img src=\"' . str_replace('$language', $context['user']['language'], isset($profile['icons'][1]) ? $group_icon_url : '') . '\" alt=\"*\">', empty($profile['icons'][0]) || empty($profile['icons'][1]) ? 0 : $profile['icons'][0]),\n\t\t\t'warning' => $profile['warning'],\n\t\t\t'warning_status' => !empty($modSettings['warning_mute']) && $modSettings['warning_mute'] <= $profile['warning'] ? 'mute' : (!empty($modSettings['warning_moderate']) && $modSettings['warning_moderate'] <= $profile['warning'] ? 'moderate' : (!empty($modSettings['warning_watch']) && $modSettings['warning_watch'] <= $profile['warning'] ? 'watch' : (''))),\n\t\t\t'local_time' => timeformat(time() + ($profile['time_offset'] - $user_info['time_offset']) * 3600, false),\n\t\t\t'custom_fields' => array(),\n\t\t);\n\n\t// If the set isn't minimal then load their avatar as well.\n\tif ($context['loadMemberContext_set'] != 'minimal')\n\t{\n\t\tif (!empty($modSettings['gravatarOverride']) || (!empty($modSettings['gravatarEnabled']) && stristr($profile['avatar'], 'gravatar://')))\n\t\t{\n\t\t\tif (!empty($modSettings['gravatarAllowExtraEmail']) && stristr($profile['avatar'], 'gravatar://') && strlen($profile['avatar']) > 11)\n\t\t\t\t$image = get_gravatar_url($smcFunc['substr']($profile['avatar'], 11));\n\t\t\telse\n\t\t\t\t$image = get_gravatar_url($profile['email_address']);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// So it's stored in the member table?\n\t\t\tif (!empty($profile['avatar']))\n\t\t\t{\n\t\t\t\t$image = (stristr($profile['avatar'], 'http://') || stristr($profile['avatar'], 'https://')) ? $profile['avatar'] : $modSettings['avatar_url'] . '/' . $profile['avatar'];\n\t\t\t}\n\t\t\telseif (!empty($profile['filename']))\n\t\t\t\t$image = $modSettings['custom_avatar_url'] . '/' . $profile['filename'];\n\t\t\t// Right... no avatar...use the default one\n\t\t\telse\n\t\t\t\t$image = $modSettings['avatar_url'] . '/default.png';\n\t\t}\n\t\tif (!empty($image))\n\t\t\t$memberContext[$user]['avatar'] = array(\n\t\t\t\t'name' => $profile['avatar'],\n\t\t\t\t'image' => '<img class=\"avatar\" src=\"' . $image . '\" alt=\"avatar_'. $profile['member_name'].'\">',\n\t\t\t\t'href' => $image,\n\t\t\t\t'url' => $image,\n\t\t\t);\n\t}\n\n\t// Are we also loading the members custom fields into context?\n\tif ($display_custom_fields && !empty($modSettings['displayFields']))\n\t{\n\t\t$memberContext[$user]['custom_fields'] = array();\n\n\t\tif (!isset($context['display_fields']))\n\t\t\t$context['display_fields'] = smf_json_decode($modSettings['displayFields'], true);\n\n\t\tforeach ($context['display_fields'] as $custom)\n\t\t{\n\t\t\tif (!isset($custom['col_name']) || trim($custom['col_name']) == '' || empty($profile['options'][$custom['col_name']]))\n\t\t\t\tcontinue;\n\n\t\t\t$value = $profile['options'][$custom['col_name']];\n\n\t\t\t// Don't show the \"disabled\" option for the \"gender\" field.\n\t\t\tif ($custom['col_name'] == 'cust_gender' && $value == 'Disabled')\n\t\t\t\tcontinue;\n\n\t\t\t// BBC?\n\t\t\tif ($custom['bbc'])\n\t\t\t\t$value = parse_bbc($value);\n\t\t\t// ... or checkbox?\n\t\t\telseif (isset($custom['type']) && $custom['type'] == 'check')\n\t\t\t\t$value = $value ? $txt['yes'] : $txt['no'];\n\n\t\t\t// Enclosing the user input within some other text?\n\t\t\tif (!empty($custom['enclose']))\n\t\t\t\t$value = strtr($custom['enclose'], array(\n\t\t\t\t\t'{SCRIPTURL}' => $scripturl,\n\t\t\t\t\t'{IMAGES_URL}' => $settings['images_url'],\n\t\t\t\t\t'{DEFAULT_IMAGES_URL}' => $settings['default_images_url'],\n\t\t\t\t\t'{INPUT}' => $value,\n\t\t\t\t));\n\n\t\t\t$memberContext[$user]['custom_fields'][] = array(\n\t\t\t\t'title' => !empty($custom['title']) ? $custom['title'] : $custom['col_name'],\n\t\t\t\t'col_name' => $custom['col_name'],\n\t\t\t\t'value' => un_htmlspecialchars($value),\n\t\t\t\t'placement' => !empty($custom['placement']) ? $custom['placement'] : 0,\n\t\t\t);\n\t\t}\n\t}\n\n\tcall_integration_hook('integrate_member_context', array(&$memberContext[$user], $user, $display_custom_fields));\n\treturn true;\n}\n\n/**\n * Loads the user's custom profile fields\n *\n * @param integer|array $users A single user ID or an array of user IDs\n * @param string|array $params Either a string or an array of strings with profile field names\n * @return array|boolean An array of data about the fields and their values or false if nothing was loaded\n */\nfunction loadMemberCustomFields($users, $params)\n{\n\tglobal $smcFunc, $txt, $scripturl, $settings;\n\n\t// Do not waste my time...\n\tif (empty($users) || empty($params))\n\t\treturn false;\n\n\t// Make sure it's an array.\n\t$users = !is_array($users) ? array($users) : array_unique($users);\n\t$params = !is_array($params) ? array($params) : array_unique($params);\n\t$return = array();\n\n\t$request = $smcFunc['db_query']('', '\n\t\tSELECT c.id_field, c.col_name, c.field_name, c.field_desc, c.field_type, c.field_order, c.field_length, c.field_options, c.mask, show_reg,\n\t\tc.show_display, c.show_profile, c.private, c.active, c.bbc, c.can_search, c.default_value, c.enclose, c.placement, t.variable, t.value, t.id_member\n\t\tFROM {db_prefix}themes AS t\n\t\t\tLEFT JOIN {db_prefix}custom_fields AS c ON (c.col_name = t.variable)\n\t\tWHERE id_member IN ({array_int:loaded_ids})\n\t\t\tAND variable IN ({array_string:params})\n\t\tORDER BY field_order',\n\t\tarray(\n\t\t\t'loaded_ids' => $users,\n\t\t\t'params' => $params,\n\t\t)\n\t);\n\n\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t{\n\t\t// BBC?\n\t\tif (!empty($row['bbc']))\n\t\t\t$row['value'] = parse_bbc($row['value']);\n\n\t\t// ... or checkbox?\n\t\telseif (isset($row['type']) && $row['type'] == 'check')\n\t\t\t$row['value'] = !empty($row['value']) ? $txt['yes'] : $txt['no'];\n\n\t\t// Enclosing the user input within some other text?\n\t\tif (!empty($row['enclose']))\n\t\t\t$row['value'] = strtr($row['enclose'], array(\n\t\t\t\t'{SCRIPTURL}' => $scripturl,\n\t\t\t\t'{IMAGES_URL}' => $settings['images_url'],\n\t\t\t\t'{DEFAULT_IMAGES_URL}' => $settings['default_images_url'],\n\t\t\t\t'{INPUT}' => un_htmlspecialchars($row['value']),\n\t\t\t));\n\n\t\t// Send a simple array if there is just 1 param\n\t\tif (count($params) == 1)\n\t\t\t$return[$row['id_member']] = $row;\n\n\t\t// More than 1? knock yourself out...\n\t\telse\n\t\t{\n\t\t\tif (!isset($return[$row['id_member']]))\n\t\t\t\t$return[$row['id_member']] = array();\n\n\t\t\t$return[$row['id_member']][$row['variable']] = $row;\n\t\t}\n\t}\n\n\t$smcFunc['db_free_result']($request);\n\n\treturn !empty($return) ? $return : false;\n}\n\n/**\n * Loads information about what browser the user is viewing with and places it in $context\n *  - uses the class from {@link Class-BrowserDetect.php}\n */\nfunction detectBrowser()\n{\n\t// Load the current user's browser of choice\n\t$detector = new browser_detector;\n\t$detector->detectBrowser();\n}\n\n/**\n * Are we using this browser?\n *\n * Wrapper function for detectBrowser\n * @param string $browser The browser we are checking for.\n * @return bool Whether or not the current browser is what we're looking for\n*/\nfunction isBrowser($browser)\n{\n\tglobal $context;\n\n\t// Don't know any browser!\n\tif (empty($context['browser']))\n\t\tdetectBrowser();\n\n\treturn !empty($context['browser'][$browser]) || !empty($context['browser']['is_' . $browser]) ? true : false;\n}\n\n/**\n * Load a theme, by ID.\n *\n * @param int $id_theme The ID of the theme to load\n * @param bool $initialize Whether or not to initialize a bunch of theme-related variables/settings\n */\nfunction loadTheme($id_theme = 0, $initialize = true)\n{\n\tglobal $user_info, $user_settings, $board_info, $boarddir, $maintenance;\n\tglobal $txt, $boardurl, $scripturl, $mbname, $modSettings;\n\tglobal $context, $settings, $options, $sourcedir, $ssi_theme, $smcFunc, $language, $board, $image_proxy_enabled;\n\n\t// The theme was specified by parameter.\n\tif (!empty($id_theme))\n\t\t$id_theme = (int) $id_theme;\n\t// The theme was specified by REQUEST.\n\telseif (!empty($_REQUEST['theme']) && (!empty($modSettings['theme_allow']) || allowedTo('admin_forum')))\n\t{\n\t\t$id_theme = (int) $_REQUEST['theme'];\n\t\t$_SESSION['id_theme'] = $id_theme;\n\t}\n\t// The theme was specified by REQUEST... previously.\n\telseif (!empty($_SESSION['id_theme']) && (!empty($modSettings['theme_allow']) || allowedTo('admin_forum')))\n\t\t$id_theme = (int) $_SESSION['id_theme'];\n\t// The theme is just the user's choice. (might use ?board=1;theme=0 to force board theme.)\n\telseif (!empty($user_info['theme']) && !isset($_REQUEST['theme']))\n\t\t$id_theme = $user_info['theme'];\n\t// The theme was specified by the board.\n\telseif (!empty($board_info['theme']))\n\t\t$id_theme = $board_info['theme'];\n\t// The theme is the forum's default.\n\telse\n\t\t$id_theme = $modSettings['theme_guests'];\n\n\t// Verify the id_theme... no foul play.\n\t// Always allow the board specific theme, if they are overriding.\n\tif (!empty($board_info['theme']) && $board_info['override_theme'])\n\t\t$id_theme = $board_info['theme'];\n\t// If they have specified a particular theme to use with SSI allow it to be used.\n\telseif (!empty($ssi_theme) && $id_theme == $ssi_theme)\n\t\t$id_theme = (int) $id_theme;\n\telseif (!empty($modSettings['enableThemes']) && !allowedTo('admin_forum'))\n\t{\n\t\t$themes = explode(',', $modSettings['enableThemes']);\n\t\tif (!in_array($id_theme, $themes))\n\t\t\t$id_theme = $modSettings['theme_guests'];\n\t\telse\n\t\t\t$id_theme = (int) $id_theme;\n\t}\n\telse\n\t\t$id_theme = (int) $id_theme;\n\n\t$member = empty($user_info['id']) ? -1 : $user_info['id'];\n\n\t// Disable image proxy if we don't have SSL enabled\n\tif (empty($modSettings['force_ssl']) || $modSettings['force_ssl'] < 2)\n\t\t$image_proxy_enabled = false;\n\n\tif (!empty($modSettings['cache_enable']) && $modSettings['cache_enable'] >= 2 && ($temp = cache_get_data('theme_settings-' . $id_theme . ':' . $member, 60)) != null && time() - 60 > $modSettings['settings_updated'])\n\t{\n\t\t$themeData = $temp;\n\t\t$flag = true;\n\t}\n\telseif (($temp = cache_get_data('theme_settings-' . $id_theme, 90)) != null && time() - 60 > $modSettings['settings_updated'])\n\t\t$themeData = $temp + array($member => array());\n\telse\n\t\t$themeData = array(-1 => array(), 0 => array(), $member => array());\n\n\tif (empty($flag))\n\t{\n\t\t// Load variables from the current or default theme, global or this user's.\n\t\t$result = $smcFunc['db_query']('', '\n\t\t\tSELECT variable, value, id_member, id_theme\n\t\t\tFROM {db_prefix}themes\n\t\t\tWHERE id_member' . (empty($themeData[0]) ? ' IN (-1, 0, {int:id_member})' : ' = {int:id_member}') . '\n\t\t\t\tAND id_theme' . ($id_theme == 1 ? ' = {int:id_theme}' : ' IN ({int:id_theme}, 1)'),\n\t\t\tarray(\n\t\t\t\t'id_theme' => $id_theme,\n\t\t\t\t'id_member' => $member,\n\t\t\t)\n\t\t);\n\t\t// Pick between $settings and $options depending on whose data it is.\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($result))\n\t\t{\n\t\t\t// There are just things we shouldn't be able to change as members.\n\t\t\tif ($row['id_member'] != 0 && in_array($row['variable'], array('actual_theme_url', 'actual_images_url', 'base_theme_dir', 'base_theme_url', 'default_images_url', 'default_theme_dir', 'default_theme_url', 'default_template', 'images_url', 'number_recent_posts', 'smiley_sets_default', 'theme_dir', 'theme_id', 'theme_layers', 'theme_templates', 'theme_url')))\n\t\t\t\tcontinue;\n\n\t\t\t// If this is the theme_dir of the default theme, store it.\n\t\t\tif (in_array($row['variable'], array('theme_dir', 'theme_url', 'images_url')) && $row['id_theme'] == '1' && empty($row['id_member']))\n\t\t\t\t$themeData[0]['default_' . $row['variable']] = $row['value'];\n\n\t\t\t// If this isn't set yet, is a theme option, or is not the default theme..\n\t\t\tif (!isset($themeData[$row['id_member']][$row['variable']]) || $row['id_theme'] != '1')\n\t\t\t\t$themeData[$row['id_member']][$row['variable']] = substr($row['variable'], 0, 5) == 'show_' ? $row['value'] == '1' : $row['value'];\n\t\t}\n\t\t$smcFunc['db_free_result']($result);\n\n\t\tif (!empty($themeData[-1]))\n\t\t\tforeach ($themeData[-1] as $k => $v)\n\t\t\t{\n\t\t\t\tif (!isset($themeData[$member][$k]))\n\t\t\t\t\t$themeData[$member][$k] = $v;\n\t\t\t}\n\n\t\tif (!empty($modSettings['cache_enable']) && $modSettings['cache_enable'] >= 2)\n\t\t\tcache_put_data('theme_settings-' . $id_theme . ':' . $member, $themeData, 60);\n\t\t// Only if we didn't already load that part of the cache...\n\t\telseif (!isset($temp))\n\t\t\tcache_put_data('theme_settings-' . $id_theme, array(-1 => $themeData[-1], 0 => $themeData[0]), 90);\n\t}\n\n\t$settings = $themeData[0];\n\t$options = $themeData[$member];\n\n\t$settings['theme_id'] = $id_theme;\n\n\t$settings['actual_theme_url'] = $settings['theme_url'];\n\t$settings['actual_images_url'] = $settings['images_url'];\n\t$settings['actual_theme_dir'] = $settings['theme_dir'];\n\n\t$settings['template_dirs'] = array();\n\t// This theme first.\n\t$settings['template_dirs'][] = $settings['theme_dir'];\n\n\t// Based on theme (if there is one).\n\tif (!empty($settings['base_theme_dir']))\n\t\t$settings['template_dirs'][] = $settings['base_theme_dir'];\n\n\t// Lastly the default theme.\n\tif ($settings['theme_dir'] != $settings['default_theme_dir'])\n\t\t$settings['template_dirs'][] = $settings['default_theme_dir'];\n\n\tif (!$initialize)\n\t\treturn;\n\n\t// Check to see if we're forcing SSL\n\tif (!empty($modSettings['force_ssl']) && $modSettings['force_ssl'] == 2 && empty($maintenance) &&\n\t\t(!isset($_SERVER['HTTPS']) || $_SERVER['HTTPS'] == 'off') && SMF != 'SSI')\n\t\tredirectexit(strtr($_SERVER['REQUEST_URL'], array('http://' => 'https://')));\n\n\t// Check to see if they're accessing it from the wrong place.\n\tif (isset($_SERVER['HTTP_HOST']) || isset($_SERVER['SERVER_NAME']))\n\t{\n\t\t$detected_url = isset($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) == 'on' ? 'https://' : 'http://';\n\t\t$detected_url .= empty($_SERVER['HTTP_HOST']) ? $_SERVER['SERVER_NAME'] . (empty($_SERVER['SERVER_PORT']) || $_SERVER['SERVER_PORT'] == '80' ? '' : ':' . $_SERVER['SERVER_PORT']) : $_SERVER['HTTP_HOST'];\n\t\t$temp = preg_replace('~/' . basename($scripturl) . '(/.+)?$~', '', strtr(dirname($_SERVER['PHP_SELF']), '\\\\', '/'));\n\t\tif ($temp != '/')\n\t\t\t$detected_url .= $temp;\n\t}\n\tif (isset($detected_url) && $detected_url != $boardurl)\n\t{\n\t\t// Try #1 - check if it's in a list of alias addresses.\n\t\tif (!empty($modSettings['forum_alias_urls']))\n\t\t{\n\t\t\t$aliases = explode(',', $modSettings['forum_alias_urls']);\n\n\t\t\tforeach ($aliases as $alias)\n\t\t\t{\n\t\t\t\t// Rip off all the boring parts, spaces, etc.\n\t\t\t\tif ($detected_url == trim($alias) || strtr($detected_url, array('http://' => '', 'https://' => '')) == trim($alias))\n\t\t\t\t\t$do_fix = true;\n\t\t\t}\n\t\t}\n\n\t\t// Hmm... check #2 - is it just different by a www?  Send them to the correct place!!\n\t\tif (empty($do_fix) && strtr($detected_url, array('://' => '://www.')) == $boardurl && (empty($_GET) || count($_GET) == 1) && SMF != 'SSI')\n\t\t{\n\t\t\t// Okay, this seems weird, but we don't want an endless loop - this will make $_GET not empty ;).\n\t\t\tif (empty($_GET))\n\t\t\t\tredirectexit('wwwRedirect');\n\t\t\telse\n\t\t\t{\n\t\t\t\tlist ($k, $v) = each($_GET);\n\n\t\t\t\tif ($k != 'wwwRedirect')\n\t\t\t\t\tredirectexit('wwwRedirect;' . $k . '=' . $v);\n\t\t\t}\n\t\t}\n\n\t\t// #3 is just a check for SSL...\n\t\tif (strtr($detected_url, array('https://' => 'http://')) == $boardurl)\n\t\t\t$do_fix = true;\n\n\t\t// Okay, #4 - perhaps it's an IP address?  We're gonna want to use that one, then. (assuming it's the IP or something...)\n\t\tif (!empty($do_fix) || preg_match('~^http[s]?://(?:[\\d\\.:]+|\\[[\\d:]+\\](?::\\d+)?)(?:$|/)~', $detected_url) == 1)\n\t\t{\n\t\t\t// Caching is good ;).\n\t\t\t$oldurl = $boardurl;\n\n\t\t\t// Fix $boardurl and $scripturl.\n\t\t\t$boardurl = $detected_url;\n\t\t\t$scripturl = strtr($scripturl, array($oldurl => $boardurl));\n\t\t\t$_SERVER['REQUEST_URL'] = strtr($_SERVER['REQUEST_URL'], array($oldurl => $boardurl));\n\n\t\t\t// Fix the theme urls...\n\t\t\t$settings['theme_url'] = strtr($settings['theme_url'], array($oldurl => $boardurl));\n\t\t\t$settings['default_theme_url'] = strtr($settings['default_theme_url'], array($oldurl => $boardurl));\n\t\t\t$settings['actual_theme_url'] = strtr($settings['actual_theme_url'], array($oldurl => $boardurl));\n\t\t\t$settings['images_url'] = strtr($settings['images_url'], array($oldurl => $boardurl));\n\t\t\t$settings['default_images_url'] = strtr($settings['default_images_url'], array($oldurl => $boardurl));\n\t\t\t$settings['actual_images_url'] = strtr($settings['actual_images_url'], array($oldurl => $boardurl));\n\n\t\t\t// And just a few mod settings :).\n\t\t\t$modSettings['smileys_url'] = strtr($modSettings['smileys_url'], array($oldurl => $boardurl));\n\t\t\t$modSettings['avatar_url'] = strtr($modSettings['avatar_url'], array($oldurl => $boardurl));\n\n\t\t\t// Clean up after loadBoard().\n\t\t\tif (isset($board_info['moderators']))\n\t\t\t{\n\t\t\t\tforeach ($board_info['moderators'] as $k => $dummy)\n\t\t\t\t{\n\t\t\t\t\t$board_info['moderators'][$k]['href'] = strtr($dummy['href'], array($oldurl => $boardurl));\n\t\t\t\t\t$board_info['moderators'][$k]['link'] = strtr($dummy['link'], array('\"' . $oldurl => '\"' . $boardurl));\n\t\t\t\t}\n\t\t\t}\n\t\t\tforeach ($context['linktree'] as $k => $dummy)\n\t\t\t\t$context['linktree'][$k]['url'] = strtr($dummy['url'], array($oldurl => $boardurl));\n\t\t}\n\t}\n\t// Set up the contextual user array.\n\tif (!empty($user_info))\n\t{\n\t\t$context['user'] = array(\n\t\t\t'id' => $user_info['id'],\n\t\t\t'is_logged' => !$user_info['is_guest'],\n\t\t\t'is_guest' => &$user_info['is_guest'],\n\t\t\t'is_admin' => &$user_info['is_admin'],\n\t\t\t'is_mod' => &$user_info['is_mod'],\n\t\t\t// A user can mod if they have permission to see the mod center, or they are a board/group/approval moderator.\n\t\t\t'can_mod' => allowedTo('access_mod_center') || (!$user_info['is_guest'] && ($user_info['mod_cache']['gq'] != '0=1' || $user_info['mod_cache']['bq'] != '0=1' || ($modSettings['postmod_active'] && !empty($user_info['mod_cache']['ap'])))),\n\t\t\t'username' => $user_info['username'],\n\t\t\t'language' => $user_info['language'],\n\t\t\t'email' => $user_info['email'],\n\t\t\t'ignoreusers' => $user_info['ignoreusers'],\n\t\t);\n\t\tif (!$context['user']['is_guest'])\n\t\t\t$context['user']['name'] = $user_info['name'];\n\t\telseif ($context['user']['is_guest'] && !empty($txt['guest_title']))\n\t\t\t$context['user']['name'] = $txt['guest_title'];\n\n\t\t// Determine the current smiley set.\n\t\t$user_info['smiley_set'] = (!in_array($user_info['smiley_set'], explode(',', $modSettings['smiley_sets_known'])) && $user_info['smiley_set'] != 'none') || empty($modSettings['smiley_sets_enable']) ? (!empty($settings['smiley_sets_default']) ? $settings['smiley_sets_default'] : $modSettings['smiley_sets_default']) : $user_info['smiley_set'];\n\t\t$context['user']['smiley_set'] = $user_info['smiley_set'];\n\t}\n\telse\n\t{\n\t\t$context['user'] = array(\n\t\t\t'id' => -1,\n\t\t\t'is_logged' => false,\n\t\t\t'is_guest' => true,\n\t\t\t'is_mod' => false,\n\t\t\t'can_mod' => false,\n\t\t\t'name' => $txt['guest_title'],\n\t\t\t'language' => $language,\n\t\t\t'email' => '',\n\t\t\t'ignoreusers' => array(),\n\t\t);\n\t}\n\n\t// Some basic information...\n\tif (!isset($context['html_headers']))\n\t\t$context['html_headers'] = '';\n\tif (!isset($context['javascript_files']))\n\t\t$context['javascript_files'] = array();\n\tif (!isset($context['css_files']))\n\t\t$context['css_files'] = array();\n\tif (!isset($context['css_header']))\n\t\t$context['css_header'] = array();\n\tif (!isset($context['javascript_inline']))\n\t\t$context['javascript_inline'] = array('standard' => array(), 'defer' => array());\n\tif (!isset($context['javascript_vars']))\n\t\t$context['javascript_vars'] = array();\n\n\t$context['login_url'] = (!empty($modSettings['force_ssl']) && $modSettings['force_ssl'] < 2 ? strtr($scripturl, array('http://' => 'https://')) : $scripturl) . '?action=login2';\n\t$context['menu_separator'] = !empty($settings['use_image_buttons']) ? ' ' : ' | ';\n\t$context['session_var'] = $_SESSION['session_var'];\n\t$context['session_id'] = $_SESSION['session_value'];\n\t$context['forum_name'] = $mbname;\n\t$context['forum_name_html_safe'] = $smcFunc['htmlspecialchars']($context['forum_name']);\n\t$context['header_logo_url_html_safe'] = empty($settings['header_logo_url']) ? '' : $smcFunc['htmlspecialchars']($settings['header_logo_url']);\n\t$context['current_action'] = isset($_REQUEST['action']) ? $smcFunc['htmlspecialchars']($_REQUEST['action']) : null;\n\t$context['current_subaction'] = isset($_REQUEST['sa']) ? $_REQUEST['sa'] : null;\n\t$context['can_register'] = empty($modSettings['registration_method']) || $modSettings['registration_method'] != 3;\n\tif (isset($modSettings['load_average']))\n\t\t$context['load_average'] = $modSettings['load_average'];\n\n\t// Detect the browser. This is separated out because it's also used in attachment downloads\n\tdetectBrowser();\n\n\t// Set the top level linktree up.\n\tarray_unshift($context['linktree'], array(\n\t\t'url' => $scripturl,\n\t\t'name' => $context['forum_name_html_safe']\n\t));\n\n\t// This allows sticking some HTML on the page output - useful for controls.\n\t$context['insert_after_template'] = '';\n\n\tif (!isset($txt))\n\t\t$txt = array();\n\n\t$simpleActions = array(\n\t\t'findmember',\n\t\t'helpadmin',\n\t\t'printpage',\n\t\t'spellcheck',\n\t);\n\n\t// Parent action => array of areas\n\t$simpleAreas = array(\n\t\t'profile' => array('popup', 'alerts_popup',),\n\t);\n\n\t// Parent action => array of subactions\n\t$simpleSubActions = array(\n\t\t'pm' => array('popup',),\n\t);\n\n\t// Actions that specifically uses XML output.\n\t$xmlActions = array(\n\t\t'quotefast',\n\t\t'jsmodify',\n\t\t'xmlhttp',\n\t);\n\n\tcall_integration_hook('integrate_simple_actions', array(&$simpleActions, &$simpleAreas, &$simpleSubActions, &$xmlActions));\n\n\t$context['simple_action'] = in_array($context['current_action'], $simpleActions) ||\n\t(isset($simpleAreas[$context['current_action']]) && isset($_REQUEST['area']) && in_array($_REQUEST['area'], $simpleAreas[$context['current_action']])) ||\n\t(isset($simpleSubActions[$context['current_action']]) && in_array($context['current_subaction'], $simpleSubActions[$context['current_action']]));\n\n\t// Output is fully XML, so no need for the index template.\n\tif (isset($_REQUEST['xml']) && in_array($context['current_action'], $xmlActions))\n\t{\n\t\tloadLanguage('index+Modifications');\n\t\tloadTemplate('Xml');\n\t\t$context['template_layers'] = array();\n\t}\n\n\t// These actions don't require the index template at all.\n\telseif (!empty($context['simple_action']))\n\t{\n\t\tloadLanguage('index+Modifications');\n\t\t$context['template_layers'] = array();\n\t}\n\n\telse\n\t{\n\t\t// Custom templates to load, or just default?\n\t\tif (isset($settings['theme_templates']))\n\t\t\t$templates = explode(',', $settings['theme_templates']);\n\t\telse\n\t\t\t$templates = array('index');\n\n\t\t// Load each template...\n\t\tforeach ($templates as $template)\n\t\t\tloadTemplate($template);\n\n\t\t// ...and attempt to load their associated language files.\n\t\t$required_files = implode('+', array_merge($templates, array('Modifications')));\n\t\tloadLanguage($required_files, '', false);\n\n\t\t// Custom template layers?\n\t\tif (isset($settings['theme_layers']))\n\t\t\t$context['template_layers'] = explode(',', $settings['theme_layers']);\n\t\telse\n\t\t\t$context['template_layers'] = array('html', 'body');\n\t}\n\n\t// Initialize the theme.\n\tloadSubTemplate('init', 'ignore');\n\n\t// Allow overriding the board wide time/number formats.\n\tif (empty($user_settings['time_format']) && !empty($txt['time_format']))\n\t\t$user_info['time_format'] = $txt['time_format'];\n\n\t// Set the character set from the template.\n\t$context['character_set'] = empty($modSettings['global_character_set']) ? $txt['lang_character_set'] : $modSettings['global_character_set'];\n\t$context['utf8'] = $context['character_set'] === 'UTF-8';\n\t$context['right_to_left'] = !empty($txt['lang_rtl']);\n\n\t// Guests may still need a name.\n\tif ($context['user']['is_guest'] && empty($context['user']['name']))\n\t\t$context['user']['name'] = $txt['guest_title'];\n\n\t// Any theme-related strings that need to be loaded?\n\tif (!empty($settings['require_theme_strings']))\n\t\tloadLanguage('ThemeStrings', '', false);\n\n\t// Make a special URL for the language.\n\t$settings['lang_images_url'] = $settings['images_url'] . '/' . (!empty($txt['image_lang']) ? $txt['image_lang'] : $user_info['language']);\n\n\t// And of course, let's load the default CSS file.\n\tloadCSSFile('index.css', array('minimize' => true), 'smf_index');\n\n\t// Here is my luvly Responsive CSS\n\tloadCSSFile('responsive.css', array('force_current' => false, 'validate' => true, 'minimize' => true), 'smf_responsive');\n\n\tif ($context['right_to_left'])\n\t\tloadCSSFile('rtl.css', array(), 'smf_rtl');\n\n\t// We allow theme variants, because we're cool.\n\t$context['theme_variant'] = '';\n\t$context['theme_variant_url'] = '';\n\tif (!empty($settings['theme_variants']))\n\t{\n\t\t// Overriding - for previews and that ilk.\n\t\tif (!empty($_REQUEST['variant']))\n\t\t\t$_SESSION['id_variant'] = $_REQUEST['variant'];\n\t\t// User selection?\n\t\tif (empty($settings['disable_user_variant']) || allowedTo('admin_forum'))\n\t\t\t$context['theme_variant'] = !empty($_SESSION['id_variant']) ? $_SESSION['id_variant'] : (!empty($options['theme_variant']) ? $options['theme_variant'] : '');\n\t\t// If not a user variant, select the default.\n\t\tif ($context['theme_variant'] == '' || !in_array($context['theme_variant'], $settings['theme_variants']))\n\t\t\t$context['theme_variant'] = !empty($settings['default_variant']) && in_array($settings['default_variant'], $settings['theme_variants']) ? $settings['default_variant'] : $settings['theme_variants'][0];\n\n\t\t// Do this to keep things easier in the templates.\n\t\t$context['theme_variant'] = '_' . $context['theme_variant'];\n\t\t$context['theme_variant_url'] = $context['theme_variant'] . '/';\n\n\t\tif (!empty($context['theme_variant']))\n\t\t{\n\t\t\tloadCSSFile('index' . $context['theme_variant'] . '.css', array(), 'smf_index' . $context['theme_variant']);\n\t\t\tif ($context['right_to_left'])\n\t\t\t\tloadCSSFile('rtl' . $context['theme_variant'] . '.css', array(), 'smf_rtl' . $context['theme_variant']);\n\t\t}\n\t}\n\n\t// Let's be compatible with old themes!\n\tif (!function_exists('template_html_above') && in_array('html', $context['template_layers']))\n\t\t$context['template_layers'] = array('main');\n\n\t$context['tabindex'] = 1;\n\n\t// Compatibility.\n\tif (!isset($settings['theme_version']))\n\t\t$modSettings['memberCount'] = $modSettings['totalMembers'];\n\n\t// Default JS variables for use in every theme\n\t$context['javascript_vars'] = array(\n\t\t'smf_theme_url' => '\"' . $settings['theme_url'] . '\"',\n\t\t'smf_default_theme_url' => '\"' . $settings['default_theme_url'] . '\"',\n\t\t'smf_images_url' => '\"' . $settings['images_url'] . '\"',\n\t\t'smf_smileys_url' => '\"' . $modSettings['smileys_url'] . '\"',\n\t\t'smf_scripturl' => '\"' . $scripturl . '\"',\n\t\t'smf_iso_case_folding' => $context['server']['iso_case_folding'] ? 'true' : 'false',\n\t\t'smf_charset' => '\"' . $context['character_set'] . '\"',\n\t\t'smf_session_id' => '\"' . $context['session_id'] . '\"',\n\t\t'smf_session_var' => '\"' . $context['session_var'] . '\"',\n\t\t'smf_member_id' => $context['user']['id'],\n\t\t'ajax_notification_text' => JavaScriptEscape($txt['ajax_in_progress']),\n\t\t'help_popup_heading_text' => JavaScriptEscape($txt['help_popup']),\n\t);\n\n\t// Add the JQuery library to the list of files to load.\n\tif (isset($modSettings['jquery_source']) && $modSettings['jquery_source'] == 'cdn')\n\t\tloadJavascriptFile('https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js', array('external' => true), 'smf_jquery');\n\n\telseif (isset($modSettings['jquery_source']) && $modSettings['jquery_source'] == 'local')\n\t\tloadJavascriptFile('jquery-2.1.4.min.js', array('seed' => false), 'smf_jquery');\n\n\telseif (isset($modSettings['jquery_source'], $modSettings['jquery_custom']) && $modSettings['jquery_source'] == 'custom')\n\t\tloadJavascriptFile($modSettings['jquery_custom'], array(), 'smf_jquery');\n\n\t// Auto loading? template_javascript() will take care of the local half of this.\n\telse\n\t\tloadJavascriptFile('https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js', array('external' => true), 'smf_jquery');\n\n\t// Queue our JQuery plugins!\n\tloadJavascriptFile('smf_jquery_plugins.js', array('minimize' => true), 'smf_jquery_plugins');\n\tif (!$user_info['is_guest'])\n\t{\n\t\tloadJavascriptFile('jquery.custom-scrollbar.js', array(), 'smf_jquery_scrollbar');\n\t\tloadCSSFile('jquery.custom-scrollbar.css', array('force_current' => false, 'validate' => true), 'smf_scrollbar');\n\t}\n\n\t// script.js and theme.js, always required, so always add them! Makes index.template.php cleaner and all.\n\tloadJavascriptFile('script.js', array('defer' => false, 'minimize' => true), 'smf_script');\n\tloadJavascriptFile('theme.js', array('minimize' => true), 'smf_theme');\n\n\t// If we think we have mail to send, let's offer up some possibilities... robots get pain (Now with scheduled task support!)\n\tif ((!empty($modSettings['mail_next_send']) && $modSettings['mail_next_send'] < time() && empty($modSettings['mail_queue_use_cron'])) || empty($modSettings['next_task_time']) || $modSettings['next_task_time'] < time())\n\t{\n\t\tif (isBrowser('possibly_robot'))\n\t\t{\n\t\t\t// @todo Maybe move this somewhere better?!\n\t\t\trequire_once($sourcedir . '/ScheduledTasks.php');\n\n\t\t\t// What to do, what to do?!\n\t\t\tif (empty($modSettings['next_task_time']) || $modSettings['next_task_time'] < time())\n\t\t\t\tAutoTask();\n\t\t\telse\n\t\t\t\tReduceMailQueue();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$type = empty($modSettings['next_task_time']) || $modSettings['next_task_time'] < time() ? 'task' : 'mailq';\n\t\t\t$ts = $type == 'mailq' ? $modSettings['mail_next_send'] : $modSettings['next_task_time'];\n\n\t\t\taddInlineJavascript('\n\t\tfunction smfAutoTask()\n\t\t{\n\t\t\t$.get(smf_scripturl + \"?scheduled=' . $type . ';ts=' . $ts . '\");\n\t\t}\n\t\twindow.setTimeout(\"smfAutoTask();\", 1);');\n\t\t}\n\t}\n\n\t// And we should probably trigger the cron too.\n\tif (empty($modSettings['cron_is_real_cron']))\n\t{\n\t\t$ts = time();\n\t\t$ts -= $ts % 15;\n\t\taddInlineJavaScript('\n\tfunction triggerCron()\n\t{\n\t\t$.get(' . JavaScriptEscape($boardurl) . ' + \"/cron.php?ts=' . $ts . '\");\n\t}\n\twindow.setTimeout(triggerCron, 1);', true);\n\t}\n\n\t// Filter out the restricted boards from the linktree\n\tif (!$user_info['is_admin'] && !empty($board))\n\t{\n\t\tforeach ($context['linktree'] as $k => $element)\n\t\t{\n\t\t\tif (!empty($element['groups']) &&\n\t\t\t\t(count(array_intersect($user_info['groups'], $element['groups'])) == 0 ||\n\t\t\t\t(!empty($modSettings['deny_boards_access']) && count(array_intersect($user_info['groups'], $element['deny_groups'])) != 0)))\n\t\t\t{\n\t\t\t\t$context['linktree'][$k]['name'] = $txt['restricted_board'];\n\t\t\t\t$context['linktree'][$k]['extra_before'] = '<i>';\n\t\t\t\t$context['linktree'][$k]['extra_after'] = '</i>';\n\t\t\t\tunset($context['linktree'][$k]['url']);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Any files to include at this point?\n\tif (!empty($modSettings['integrate_theme_include']))\n\t{\n\t\t$theme_includes = explode(',', $modSettings['integrate_theme_include']);\n\t\tforeach ($theme_includes as $include)\n\t\t{\n\t\t\t$include = strtr(trim($include), array('$boarddir' => $boarddir, '$sourcedir' => $sourcedir, '$themedir' => $settings['theme_dir']));\n\t\t\tif (file_exists($include))\n\t\t\t\trequire_once($include);\n\t\t}\n\t}\n\n\t// Call load theme integration functions.\n\tcall_integration_hook('integrate_load_theme');\n\n\t// We are ready to go.\n\t$context['theme_loaded'] = true;\n}\n\n/**\n * Load a template - if the theme doesn't include it, use the default.\n * What this function does:\n *  - loads a template file with the name template_name from the current, default, or base theme.\n *  - detects a wrong default theme directory and tries to work around it.\n *\n * @uses the template_include() function to include the file.\n * @param string $template_name The name of the template to load\n * @param array|string $style_sheets The name of a single stylesheet or an array of names of stylesheets to load\n * @param bool $fatal If true, dies with an error message if the template cannot be found\n * @return boolean Whether or not the template was loaded\n */\nfunction loadTemplate($template_name, $style_sheets = array(), $fatal = true)\n{\n\tglobal $context, $settings, $txt, $scripturl, $boarddir, $db_show_debug;\n\n\t// Do any style sheets first, cause we're easy with those.\n\tif (!empty($style_sheets))\n\t{\n\t\tif (!is_array($style_sheets))\n\t\t\t$style_sheets = array($style_sheets);\n\n\t\tforeach ($style_sheets as $sheet)\n\t\t\tloadCSSFile($sheet . '.css', array(), $sheet);\n\t}\n\n\t// No template to load?\n\tif ($template_name === false)\n\t\treturn true;\n\n\t$loaded = false;\n\tforeach ($settings['template_dirs'] as $template_dir)\n\t{\n\t\tif (file_exists($template_dir . '/' . $template_name . '.template.php'))\n\t\t{\n\t\t\t$loaded = true;\n\t\t\ttemplate_include($template_dir . '/' . $template_name . '.template.php', true);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif ($loaded)\n\t{\n\t\t// For compatibility reasons, if this is the index template without new functions, include compatible stuff.\n\t\tif (substr($template_name, 0, 5) == 'index' && !function_exists('template_button_strip'))\n\t\t\tloadTemplate('Compat');\n\n\t\tif ($db_show_debug === true)\n\t\t\t$context['debug']['templates'][] = $template_name . ' (' . basename($template_dir) . ')';\n\n\t\t// If they have specified an initialization function for this template, go ahead and call it now.\n\t\tif (function_exists('template_' . $template_name . '_init'))\n\t\t\tcall_user_func('template_' . $template_name . '_init');\n\t}\n\t// Hmmm... doesn't exist?!  I don't suppose the directory is wrong, is it?\n\telseif (!file_exists($settings['default_theme_dir']) && file_exists($boarddir . '/Themes/default'))\n\t{\n\t\t$settings['default_theme_dir'] = $boarddir . '/Themes/default';\n\t\t$settings['template_dirs'][] = $settings['default_theme_dir'];\n\n\t\tif (!empty($context['user']['is_admin']) && !isset($_GET['th']))\n\t\t{\n\t\t\tloadLanguage('Errors');\n\t\t\techo '\n<div class=\"alert errorbox\">\n\t<a href=\"', $scripturl . '?action=admin;area=theme;sa=list;' . $context['session_var'] . '=' . $context['session_id'], '\" class=\"alert\">', $txt['theme_dir_wrong'], '</a>\n</div>';\n\t\t}\n\n\t\tloadTemplate($template_name);\n\t}\n\t// Cause an error otherwise.\n\telseif ($template_name != 'Errors' && $template_name != 'index' && $fatal)\n\t\tfatal_lang_error('theme_template_error', 'template', array((string) $template_name));\n\telseif ($fatal)\n\t\tdie(log_error(sprintf(isset($txt['theme_template_error']) ? $txt['theme_template_error'] : 'Unable to load Themes/default/%s.template.php!', (string) $template_name), 'template'));\n\telse\n\t\treturn false;\n}\n\n\n/**\n * Load a sub-template.\n * What it does:\n * \t- loads the sub template specified by sub_template_name, which must be in an already-loaded template.\n *  - if ?debug is in the query string, shows administrators a marker after every sub template\n *\tfor debugging purposes.\n *\n * @todo get rid of reading $_REQUEST directly\n *\n * @param string $sub_template_name The name of the sub-template to load\n * @param bool $fatal Whether to die with an error if the sub-template can't be loaded\n */\nfunction loadSubTemplate($sub_template_name, $fatal = false)\n{\n\tglobal $context, $txt, $db_show_debug;\n\n\tif ($db_show_debug === true)\n\t\t$context['debug']['sub_templates'][] = $sub_template_name;\n\n\t// Figure out what the template function is named.\n\t$theme_function = 'template_' . $sub_template_name;\n\tif (function_exists($theme_function))\n\t\t$theme_function();\n\telseif ($fatal === false)\n\t\tfatal_lang_error('theme_template_error', 'template', array((string) $sub_template_name));\n\telseif ($fatal !== 'ignore')\n\t\tdie(log_error(sprintf(isset($txt['theme_template_error']) ? $txt['theme_template_error'] : 'Unable to load the %s sub template!', (string) $sub_template_name), 'template'));\n\n\t// Are we showing debugging for templates?  Just make sure not to do it before the doctype...\n\tif (allowedTo('admin_forum') && isset($_REQUEST['debug']) && !in_array($sub_template_name, array('init', 'main_below')) && ob_get_length() > 0 && !isset($_REQUEST['xml']))\n\t{\n\t\techo '\n<div class=\"warningbox\">---- ', $sub_template_name, ' ends ----</div>';\n\t}\n}\n\n/**\n * Add a CSS file for output later\n *\n * @param string $fileName The name of the file to load\n * @param array $params An array of parameters\n * Keys are the following:\n * \t- ['external'] (true/false): define if the file is a externally located file. Needs to be set to true if you are loading an external file\n * \t- ['default_theme'] (true/false): force use of default theme url\n * \t- ['force_current'] (true/false): if this is false, we will attempt to load the file from the default theme if not found in the current theme\n *  - ['validate'] (true/false): if true script will validate the local file exists\n *  - ['rtl'] (string): additional file to load in RTL mode\n *  - ['seed'] (true/false/string): if true or null, use cache stale, false do not, or used a supplied string\n *  - ['minimize'] boolean to add your file to the main minimized file. Useful when you have a file thats loaded everywhere and for everyone.\n * @param string $id An ID to stick on the end of the filename for caching purposes\n */\nfunction loadCSSFile($fileName, $params = array(), $id = '')\n{\n\tglobal $settings, $context, $modSettings;\n\n\t$params['seed'] = (!array_key_exists('seed', $params) || (array_key_exists('seed', $params) && $params['seed'] === true)) ? (array_key_exists('browser_cache', $modSettings) ? $modSettings['browser_cache'] : '') : (is_string($params['seed']) ? ($params['seed'] = $params['seed'][0] === '?' ? $params['seed'] : '?' . $params['seed']) : '');\n\t$params['force_current'] = isset($params['force_current']) ? $params['force_current'] : false;\n\t$themeRef = !empty($params['default_theme']) ? 'default_theme' : 'theme';\n\t$params['minimize'] = isset($params['minimize']) ? $params['minimize'] : false;\n\t$params['external'] = isset($params['external']) ? $params['external'] : false;\n\t$params['validate'] = isset($params['validate']) ? $params['validate'] : true;\n\n\t// If this is an external file, automatically set this to false.\n\tif (!empty($params['external']))\n\t\t$params['minimize'] = false;\n\n\t// Account for shorthand like admin.css?alp21 filenames\n\t$has_seed = strpos($fileName, '.css?');\n\t$id = empty($id) ? strtr(basename(str_replace('.css', '', $fileName)), '?', '_') : $id;\n\n\t// Is this a local file?\n\tif (empty($params['external']))\n\t{\n\t\t// Are we validating the the file exists?\n\t\tif (!empty($params['validate']) && !file_exists($settings[$themeRef . '_dir'] . '/css/' . $fileName))\n\t\t{\n\t\t\t// Maybe the default theme has it?\n\t\t\tif ($themeRef === 'theme' && !$params['force_current'] && file_exists($settings['default_theme_dir'] . '/css/' . $fileName))\n\t\t\t{\n\t\t\t\t$fileUrl = $settings['default_theme_url'] . '/css/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t\t\t$filePath = $settings['default_theme_dir'] . '/css/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t\t}\n\n\t\t\telse\n\t\t\t\t$fileUrl = false;\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\t$fileUrl = $settings[$themeRef . '_url'] . '/css/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t\t$filePath = $settings[$themeRef . '_dir'] . '/css/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t}\n\t}\n\n\t// An external file doesn't have a filepath. Mock one for simplicity.\n\telse\n\t{\n\t\t$fileUrl = $fileName;\n\t\t$filePath = $fileName;\n\t}\n\n\t// Add it to the array for use in the template\n\tif (!empty($fileName))\n\t\t$context['css_files'][$id] = array('fileUrl' => $fileUrl, 'filePath' => $filePath, 'fileName' => $fileName, 'options' => $params);\n\n\tif (!empty($context['right_to_left']) && !empty($params['rtl']))\n\t\tloadCSSFile($params['rtl'], array_diff_key($params, array('rtl' => 0)));\n}\n\n/**\n * Add a block of inline css code to be executed later\n *\n * - only use this if you have to, generally external css files are better, but for very small changes\n *   or for scripts that require help from PHP/whatever, this can be useful.\n * - all code added with this function is added to the same <style> tag so do make sure your css is valid!\n *\n * @param string $css Some css code\n * @return void|bool Adds the CSS to the $context['css_header'] array or returns if no CSS is specified\n */\nfunction addInlineCss($css)\n{\n\tglobal $context;\n\n\t// Gotta add something...\n\tif (empty($css))\n\t\treturn false;\n\n\t$context['css_header'][] = $css;\n}\n\n/**\n * Add a Javascript file for output later\n\n * @param string $filename The name of the file to load\n * @param array $params An array of parameter info\n * Keys are the following:\n * \t- ['external'] (true/false): define if the file is a externally located file. Needs to be set to true if you are loading an external file\n * \t- ['default_theme'] (true/false): force use of default theme url\n * \t- ['defer'] (true/false): define if the file should load in <head> or before the closing <html> tag\n * \t- ['force_current'] (true/false): if this is false, we will attempt to load the file from the\n *\tdefault theme if not found in the current theme\n *\t- ['async'] (true/false): if the script should be loaded asynchronously (HTML5)\n *  - ['validate'] (true/false): if true script will validate the local file exists\n *  - ['seed'] (true/false/string): if true or null, use cache stale, false do not, or used a supplied string\n *  - ['minimize'] boolean to add your file to the main minimized file. Useful when you have a file thats loaded everywhere and for everyone.\n *\n * @param string $id An ID to stick on the end of the filename\n */\nfunction loadJavascriptFile($fileName, $params = array(), $id = '')\n{\n\tglobal $settings, $context, $modSettings;\n\n\t$params['seed'] = (!array_key_exists('seed', $params) || (array_key_exists('seed', $params) && $params['seed'] === true)) ? (array_key_exists('browser_cache', $modSettings) ? $modSettings['browser_cache'] : '') : (is_string($params['seed']) ? ($params['seed'] = $params['seed'][0] === '?' ? $params['seed'] : '?' . $params['seed']) : '');\n\t$params['force_current'] = isset($params['force_current']) ? $params['force_current'] : false;\n\t$themeRef = !empty($params['default_theme']) ? 'default_theme' : 'theme';\n\t$params['minimize'] = isset($params['minimize']) ? $params['minimize'] : false;\n\t$params['external'] = isset($params['external']) ? $params['external'] : false;\n\t$params['validate'] = isset($params['validate']) ? $params['validate'] : true;\n\n\t// If this is an external file, automatically set this to false.\n\tif (!empty($params['external']))\n\t\t$params['minimize'] = false;\n\n\t// Account for shorthand like admin.js?alp21 filenames\n\t$has_seed = strpos($fileName, '.js?');\n\t$id = empty($id) ? strtr(basename(str_replace('.js', '', $fileName)), '?', '_') : $id;\n\n\t// Is this a local file?\n\tif (empty($params['external']))\n\t{\n\t\t// Are we validating it exists on disk?\n\t\tif (!empty($params['validate']) && !file_exists($settings[$themeRef . '_dir'] . '/scripts/' . $fileName))\n\t\t{\n\t\t\t// Can't find it in this theme, how about the default?\n\t\t\tif ($themeRef === 'theme' && !$params['force_current'] && file_exists($settings['default_theme_dir'] . '/scripts/' . $fileName))\n\t\t\t{\n\t\t\t\t$fileUrl = $settings['default_theme_url'] . '/scripts/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t\t\t$filePath = $settings['default_theme_dir'] . '/scripts/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\t\t$fileUrl = false;\n\t\t\t\t$filePath = false;\n\t\t\t}\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\t$fileUrl = $settings[$themeRef . '_url'] . '/scripts/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t\t$filePath = $settings[$themeRef . '_dir'] . '/scripts/' . $fileName . ($has_seed ? '' : $params['seed']);\n\t\t}\n\t}\n\n\t// An external file doesn't have a filepath. Mock one for simplicity.\n\telse\n\t{\n\t\t$fileUrl = $fileName;\n\t\t$filePath = $fileName;\n\t}\n\n\t// Add it to the array for use in the template\n\tif (!empty($fileName))\n\t\t$context['javascript_files'][$id] = array('fileUrl' => $fileUrl, 'filePath' => $filePath, 'fileName' => $fileName, 'options' => $params);\n}\n\n/**\n * Add a Javascript variable for output later (for feeding text strings and similar to JS)\n * Cleaner and easier (for modders) than to use the function below.\n *\n * @param string $key The key for this variable\n * @param string $value The value\n * @param bool $escape Whether or not to escape the value\n */\nfunction addJavascriptVar($key, $value, $escape = false)\n{\n\tglobal $context;\n\n\tif (!empty($key) && (!empty($value) || $value === '0'))\n\t\t$context['javascript_vars'][$key] = !empty($escape) ? JavaScriptEscape($value) : $value;\n}\n\n/**\n * Add a block of inline Javascript code to be executed later\n *\n * - only use this if you have to, generally external JS files are better, but for very small scripts\n *   or for scripts that require help from PHP/whatever, this can be useful.\n * - all code added with this function is added to the same <script> tag so do make sure your JS is clean!\n *\n * @param string $javascript Some JS code\n * @param bool $defer Whether the script should load in <head> or before the closing <html> tag\n * @return void|bool Adds the code to one of the $context['javascript_inline'] arrays or returns if no JS was specified\n */\nfunction addInlineJavascript($javascript, $defer = false)\n{\n\tglobal $context;\n\n\tif (empty($javascript))\n\t\treturn false;\n\n\t$context['javascript_inline'][($defer === true ? 'defer' : 'standard')][] = $javascript;\n}\n\n/**\n * Load a language file.  Tries the current and default themes as well as the user and global languages.\n *\n * @param string $template_name The name of a template file\n * @param string $lang A specific language to load this file from\n * @param bool $fatal Whether to die with an error if it can't be loaded\n * @param bool $force_reload Whether to load the file again if it's already loaded\n * @return string The language actually loaded.\n */\nfunction loadLanguage($template_name, $lang = '', $fatal = true, $force_reload = false)\n{\n\tglobal $user_info, $language, $settings, $context, $modSettings;\n\tglobal $db_show_debug, $sourcedir, $txt, $birthdayEmails, $txtBirthdayEmails;\n\tstatic $already_loaded = array();\n\n\t// Default to the user's language.\n\tif ($lang == '')\n\t\t$lang = isset($user_info['language']) ? $user_info['language'] : $language;\n\n\t// Do we want the English version of language file as fallback?\n\tif (empty($modSettings['disable_language_fallback']) && $lang != 'english')\n\t\tloadLanguage($template_name, 'english', false);\n\n\tif (!$force_reload && isset($already_loaded[$template_name]) && $already_loaded[$template_name] == $lang)\n\t\treturn $lang;\n\n\t// Make sure we have $settings - if not we're in trouble and need to find it!\n\tif (empty($settings['default_theme_dir']))\n\t{\n\t\trequire_once($sourcedir . '/ScheduledTasks.php');\n\t\tloadEssentialThemeData();\n\t}\n\n\t// What theme are we in?\n\t$theme_name = basename($settings['theme_url']);\n\tif (empty($theme_name))\n\t\t$theme_name = 'unknown';\n\n\t// For each file open it up and write it out!\n\tforeach (explode('+', $template_name) as $template)\n\t{\n\t\t// Obviously, the current theme is most important to check.\n\t\t$attempts = array(\n\t\t\tarray($settings['theme_dir'], $template, $lang, $settings['theme_url']),\n\t\t\tarray($settings['theme_dir'], $template, $language, $settings['theme_url']),\n\t\t);\n\n\t\t// Do we have a base theme to worry about?\n\t\tif (isset($settings['base_theme_dir']))\n\t\t{\n\t\t\t$attempts[] = array($settings['base_theme_dir'], $template, $lang, $settings['base_theme_url']);\n\t\t\t$attempts[] = array($settings['base_theme_dir'], $template, $language, $settings['base_theme_url']);\n\t\t}\n\n\t\t// Fall back on the default theme if necessary.\n\t\t$attempts[] = array($settings['default_theme_dir'], $template, $lang, $settings['default_theme_url']);\n\t\t$attempts[] = array($settings['default_theme_dir'], $template, $language, $settings['default_theme_url']);\n\n\t\t// Fall back on the English language if none of the preferred languages can be found.\n\t\tif (!in_array('english', array($lang, $language)))\n\t\t{\n\t\t\t$attempts[] = array($settings['theme_dir'], $template, 'english', $settings['theme_url']);\n\t\t\t$attempts[] = array($settings['default_theme_dir'], $template, 'english', $settings['default_theme_url']);\n\t\t}\n\n\t\t// Try to find the language file.\n\t\t$found = false;\n\t\tforeach ($attempts as $k => $file)\n\t\t{\n\t\t\tif (file_exists($file[0] . '/languages/' . $file[1] . '.' . $file[2] . '.php'))\n\t\t\t{\n\t\t\t\t// Include it!\n\t\t\t\ttemplate_include($file[0] . '/languages/' . $file[1] . '.' . $file[2] . '.php');\n\n\t\t\t\t// Note that we found it.\n\t\t\t\t$found = true;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// That couldn't be found!  Log the error, but *try* to continue normally.\n\t\tif (!$found && $fatal)\n\t\t{\n\t\t\tlog_error(sprintf($txt['theme_language_error'], $template_name . '.' . $lang, 'template'));\n\t\t\tbreak;\n\t\t}\n\n\t\t// For the sake of backward compatibility\n\t\tif (!empty($txt['emails']))\n\t\t{\n\t\t\tforeach ($txt['emails'] as $key => $value)\n\t\t\t{\n\t\t\t\t$txt[$key . '_subject'] = $value['subject'];\n\t\t\t\t$txt[$key . '_body'] = $value['body'];\n\t\t\t}\n\t\t\t$txt['emails'] = array();\n\t\t}\n\t\t// For sake of backward compatibility: $birthdayEmails is supposed to be\n\t\t// empty in a normal install. If it isn't it means the forum is using\n\t\t// something \"old\" (it may be the translation, it may be a mod) and this\n\t\t// code (like the piece above) takes care of converting it to the new format\n\t\tif (!empty($birthdayEmails))\n\t\t{\n\t\t\tforeach ($birthdayEmails as $key => $value)\n\t\t\t{\n\t\t\t\t$txtBirthdayEmails[$key . '_subject'] = $value['subject'];\n\t\t\t\t$txtBirthdayEmails[$key . '_body'] = $value['body'];\n\t\t\t\t$txtBirthdayEmails[$key . '_author'] = $value['author'];\n\t\t\t}\n\t\t\t$birthdayEmails = array();\n\t\t}\n\t}\n\n\t// Keep track of what we're up to soldier.\n\tif ($db_show_debug === true)\n\t\t$context['debug']['language_files'][] = $template_name . '.' . $lang . ' (' . $theme_name . ')';\n\n\t// Remember what we have loaded, and in which language.\n\t$already_loaded[$template_name] = $lang;\n\n\t// Return the language actually loaded.\n\treturn $lang;\n}\n\n/**\n * Get all parent boards (requires first parent as parameter)\n * It finds all the parents of id_parent, and that board itself.\n * Additionally, it detects the moderators of said boards.\n *\n * @param int $id_parent The ID of the parent board\n * @return array An array of information about the boards found.\n */\nfunction getBoardParents($id_parent)\n{\n\tglobal $scripturl, $smcFunc;\n\n\t// First check if we have this cached already.\n\tif (($boards = cache_get_data('board_parents-' . $id_parent, 480)) === null)\n\t{\n\t\t$boards = array();\n\t\t$original_parent = $id_parent;\n\n\t\t// Loop while the parent is non-zero.\n\t\twhile ($id_parent != 0)\n\t\t{\n\t\t\t$result = $smcFunc['db_query']('', '\n\t\t\t\tSELECT\n\t\t\t\t\tb.id_parent, b.name, {int:board_parent} AS id_board, b.member_groups, b.deny_member_groups,\n\t\t\t\t\tb.child_level, COALESCE(mem.id_member, 0) AS id_moderator, mem.real_name,\n\t\t\t\t\tCOALESCE(mg.id_group, 0) AS id_moderator_group, mg.group_name\n\t\t\t\tFROM {db_prefix}boards AS b\n\t\t\t\t\tLEFT JOIN {db_prefix}moderators AS mods ON (mods.id_board = b.id_board)\n\t\t\t\t\tLEFT JOIN {db_prefix}members AS mem ON (mem.id_member = mods.id_member)\n\t\t\t\t\tLEFT JOIN {db_prefix}moderator_groups AS modgs ON (modgs.id_board = b.id_board)\n\t\t\t\t\tLEFT JOIN {db_prefix}membergroups AS mg ON (mg.id_group = modgs.id_group)\n\t\t\t\tWHERE b.id_board = {int:board_parent}',\n\t\t\t\tarray(\n\t\t\t\t\t'board_parent' => $id_parent,\n\t\t\t\t)\n\t\t\t);\n\t\t\t// In the EXTREMELY unlikely event this happens, give an error message.\n\t\t\tif ($smcFunc['db_num_rows']($result) == 0)\n\t\t\t\tfatal_lang_error('parent_not_found', 'critical');\n\t\t\twhile ($row = $smcFunc['db_fetch_assoc']($result))\n\t\t\t{\n\t\t\t\tif (!isset($boards[$row['id_board']]))\n\t\t\t\t{\n\t\t\t\t\t$id_parent = $row['id_parent'];\n\t\t\t\t\t$boards[$row['id_board']] = array(\n\t\t\t\t\t\t'url' => $scripturl . '?board=' . $row['id_board'] . '.0',\n\t\t\t\t\t\t'name' => $row['name'],\n\t\t\t\t\t\t'level' => $row['child_level'],\n\t\t\t\t\t\t'groups' => explode(',', $row['member_groups']),\n\t\t\t\t\t\t'deny_groups' => explode(',', $row['deny_member_groups']),\n\t\t\t\t\t\t'moderators' => array(),\n\t\t\t\t\t\t'moderator_groups' => array()\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// If a moderator exists for this board, add that moderator for all children too.\n\t\t\t\tif (!empty($row['id_moderator']))\n\t\t\t\t\tforeach ($boards as $id => $dummy)\n\t\t\t\t\t{\n\t\t\t\t\t\t$boards[$id]['moderators'][$row['id_moderator']] = array(\n\t\t\t\t\t\t\t'id' => $row['id_moderator'],\n\t\t\t\t\t\t\t'name' => $row['real_name'],\n\t\t\t\t\t\t\t'href' => $scripturl . '?action=profile;u=' . $row['id_moderator'],\n\t\t\t\t\t\t\t'link' => '<a href=\"' . $scripturl . '?action=profile;u=' . $row['id_moderator'] . '\">' . $row['real_name'] . '</a>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t// If a moderator group exists for this board, add that moderator group for all children too\n\t\t\t\tif (!empty($row['id_moderator_group']))\n\t\t\t\t\tforeach ($boards as $id => $dummy)\n\t\t\t\t\t{\n\t\t\t\t\t\t$boards[$id]['moderator_groups'][$row['id_moderator_group']] = array(\n\t\t\t\t\t\t\t'id' => $row['id_moderator_group'],\n\t\t\t\t\t\t\t'name' => $row['group_name'],\n\t\t\t\t\t\t\t'href' => $scripturl . '?action=groups;sa=members;group=' . $row['id_moderator_group'],\n\t\t\t\t\t\t\t'link' => '<a href=\"' . $scripturl . '?action=groups;sa=members;group=' . $row['id_moderator_group'] . '\">' . $row['group_name'] . '</a>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t$smcFunc['db_free_result']($result);\n\t\t}\n\n\t\tcache_put_data('board_parents-' . $original_parent, $boards, 480);\n\t}\n\n\treturn $boards;\n}\n\n/**\n * Attempt to reload our known languages.\n * It will try to choose only utf8 or non-utf8 languages.\n *\n * @param bool $use_cache Whether or not to use the cache\n * @param bool $favor_utf8 Whether or not to favor UTF-8 files\n * @return array An array of information about available languages\n */\nfunction getLanguages($use_cache = true, $favor_utf8 = true)\n{\n\tglobal $context, $smcFunc, $settings, $modSettings;\n\n\t// Either we don't use the cache, or its expired.\n\tif (!$use_cache || ($context['languages'] = cache_get_data('known_languages' . ($favor_utf8 ? '' : '_all'), !empty($modSettings['cache_enable']) && $modSettings['cache_enable'] < 1 ? 86400 : 3600)) == null)\n\t{\n\t\t// If we don't have our ucwords function defined yet, let's load the settings data.\n\t\tif (empty($smcFunc['ucwords']))\n\t\t\treloadSettings();\n\n\t\t// If we don't have our theme information yet, let's get it.\n\t\tif (empty($settings['default_theme_dir']))\n\t\t\tloadTheme(0, false);\n\n\t\t// Default language directories to try.\n\t\t$language_directories = array(\n\t\t\t$settings['default_theme_dir'] . '/languages',\n\t\t);\n\t\tif (!empty($settings['actual_theme_dir']) && $settings['actual_theme_dir'] != $settings['default_theme_dir'])\n\t\t\t$language_directories[] = $settings['actual_theme_dir'] . '/languages';\n\n\t\t// We possibly have a base theme directory.\n\t\tif (!empty($settings['base_theme_dir']))\n\t\t\t$language_directories[] = $settings['base_theme_dir'] . '/languages';\n\n\t\t// Remove any duplicates.\n\t\t$language_directories = array_unique($language_directories);\n\n\t\tforeach ($language_directories as $language_dir)\n\t\t{\n\t\t\t// Can't look in here... doesn't exist!\n\t\t\tif (!file_exists($language_dir))\n\t\t\t\tcontinue;\n\n\t\t\t$dir = dir($language_dir);\n\t\t\twhile ($entry = $dir->read())\n\t\t\t{\n\t\t\t\t// Look for the index language file....\n\t\t\t\tif (!preg_match('~^index\\.(.+)\\.php$~', $entry, $matches))\n\t\t\t\t\tcontinue;\n\n\t\t\t\t$context['languages'][$matches[1]] = array(\n\t\t\t\t\t'name' => $smcFunc['ucwords'](strtr($matches[1], array('_' => ' '))),\n\t\t\t\t\t'selected' => false,\n\t\t\t\t\t'filename' => $matches[1],\n\t\t\t\t\t'location' => $language_dir . '/index.' . $matches[1] . '.php',\n\t\t\t\t);\n\n\t\t\t}\n\t\t\t$dir->close();\n\t\t}\n\n\t\t// Favoring UTF8? Then prevent us from selecting non-UTF8 versions.\n\t\tif ($favor_utf8)\n\t\t{\n\t\t\tforeach ($context['languages'] as $lang)\n\t\t\t\tif (substr($lang['filename'], strlen($lang['filename']) - 5, 5) != '-utf8' && isset($context['languages'][$lang['filename'] . '-utf8']))\n\t\t\t\t\tunset($context['languages'][$lang['filename']]);\n\t\t}\n\n\t\t// Let's cash in on this deal.\n\t\tif (!empty($modSettings['cache_enable']))\n\t\t\tcache_put_data('known_languages' . ($favor_utf8 ? '' : '_all'), $context['languages'], !empty($modSettings['cache_enable']) && $modSettings['cache_enable'] < 1 ? 86400 : 3600);\n\t}\n\n\treturn $context['languages'];\n}\n\n/**\n * Replace all vulgar words with respective proper words. (substring or whole words..)\n * What this function does:\n *  - it censors the passed string.\n *  - if the theme setting allow_no_censored is on, and the theme option\n *\tshow_no_censored is enabled, does not censor, unless force is also set.\n *  - it caches the list of censored words to reduce parsing.\n *\n * @param string &$text The text to censor\n * @param bool $force Whether to censor the text regardless of settings\n * @return string The censored text\n */\nfunction censorText(&$text, $force = false)\n{\n\tglobal $modSettings, $options, $txt;\n\tstatic $censor_vulgar = null, $censor_proper;\n\n\tif ((!empty($options['show_no_censored']) && !empty($modSettings['allow_no_censored']) && !$force) || empty($modSettings['censor_vulgar']) || trim($text) === '')\n\t\treturn $text;\n\n\t// If they haven't yet been loaded, load them.\n\tif ($censor_vulgar == null)\n\t{\n\t\t$censor_vulgar = explode(\"\\n\", $modSettings['censor_vulgar']);\n\t\t$censor_proper = explode(\"\\n\", $modSettings['censor_proper']);\n\n\t\t// Quote them for use in regular expressions.\n\t\tif (!empty($modSettings['censorWholeWord']))\n\t\t{\n\t\t\tfor ($i = 0, $n = count($censor_vulgar); $i < $n; $i++)\n\t\t\t{\n\t\t\t\t$censor_vulgar[$i] = str_replace(array('\\\\\\\\\\\\*', '\\\\*', '&', '\\''), array('[*]', '[^\\s]*?', '&amp;', '&#039;'), preg_quote($censor_vulgar[$i], '/'));\n\t\t\t\t$censor_vulgar[$i] = '/(?<=^|\\W)' . $censor_vulgar[$i] . '(?=$|\\W)/' . (empty($modSettings['censorIgnoreCase']) ? '' : 'i') . ((empty($modSettings['global_character_set']) ? $txt['lang_character_set'] : $modSettings['global_character_set']) === 'UTF-8' ? 'u' : '');\n\n\t\t\t\t// @todo I'm thinking the old way is some kind of bug and this is actually fixing it.\n\t\t\t\t//if (strpos($censor_vulgar[$i], '\\'') !== false)\n\t\t\t\t\t//$censor_vulgar[$i] = str_replace('\\'', '&#039;', $censor_vulgar[$i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Censoring isn't so very complicated :P.\n\tif (empty($modSettings['censorWholeWord']))\n\t{\n\t\t$func = !empty($modSettings['censorIgnoreCase']) ? 'str_ireplace' : 'str_replace';\n\t\t$text = $func($censor_vulgar, $censor_proper, $text);\n\t}\n\telse\n\t\t$text = preg_replace($censor_vulgar, $censor_proper, $text);\n\n\treturn $text;\n}\n\n/**\n * Load the template/language file using eval or require? (with eval we can show an error message!)\n * \t- loads the template or language file specified by filename.\n * \t- uses eval unless disableTemplateEval is enabled.\n * \t- outputs a parse error if the file did not exist or contained errors.\n * \t- attempts to detect the error and line, and show detailed information.\n *\n * @param string $filename The name of the file to include\n * @param bool $once If true only includes the file once (like include_once)\n */\nfunction template_include($filename, $once = false)\n{\n\tglobal $context, $settings, $txt, $scripturl, $modSettings;\n\tglobal $boardurl, $boarddir, $sourcedir;\n\tglobal $maintenance, $mtitle, $mmessage;\n\tstatic $templates = array();\n\n\t// We want to be able to figure out any errors...\n\t@ini_set('track_errors', '1');\n\n\t// Don't include the file more than once, if $once is true.\n\tif ($once && in_array($filename, $templates))\n\t\treturn;\n\t// Add this file to the include list, whether $once is true or not.\n\telse\n\t\t$templates[] = $filename;\n\n\t// Are we going to use eval?\n\tif (empty($modSettings['disableTemplateEval']))\n\t{\n\t\t$file_found = file_exists($filename) && eval('?' . '>' . rtrim(file_get_contents($filename))) !== false;\n\t\t$settings['current_include_filename'] = $filename;\n\t}\n\telse\n\t{\n\t\t$file_found = file_exists($filename);\n\n\t\tif ($once && $file_found)\n\t\t\trequire_once($filename);\n\t\telseif ($file_found)\n\t\t\trequire($filename);\n\t}\n\n\tif ($file_found !== true)\n\t{\n\t\tob_end_clean();\n\t\tif (!empty($modSettings['enableCompressedOutput']))\n\t\t\t@ob_start('ob_gzhandler');\n\t\telse\n\t\t\tob_start();\n\n\t\tif (isset($_GET['debug']))\n\t\t\theader('Content-Type: application/xhtml+xml; charset=' . (empty($context['character_set']) ? 'ISO-8859-1' : $context['character_set']));\n\n\t\t// Don't cache error pages!!\n\t\theader('Expires: Mon, 26 Jul 1997 05:00:00 GMT');\n\t\theader('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');\n\t\theader('Cache-Control: no-cache');\n\n\t\tif (!isset($txt['template_parse_error']))\n\t\t{\n\t\t\t$txt['template_parse_error'] = 'Template Parse Error!';\n\t\t\t$txt['template_parse_error_message'] = 'It seems something has gone sour on the forum with the template system.  This problem should only be temporary, so please come back later and try again.  If you continue to see this message, please contact the administrator.<br><br>You can also try <a href=\"javascript:location.reload();\">refreshing this page</a>.';\n\t\t\t$txt['template_parse_error_details'] = 'There was a problem loading the <pre><strong>%1$s</strong></pre> template or language file.  Please check the syntax and try again - remember, single quotes (<pre>\\'</pre>) often have to be escaped with a slash (<pre>\\\\</pre>).  To see more specific error information from PHP, try <a href=\"' . $boardurl . '%1$s\" class=\"extern\">accessing the file directly</a>.<br><br>You may want to try to <a href=\"javascript:location.reload();\">refresh this page</a> or <a href=\"' . $scripturl . '?theme=1\">use the default theme</a>.';\n\t\t\t$txt['template_parse_errmsg'] = 'Unfortunately more information is not available at this time as to exactly what is wrong.';\n\t\t}\n\n\t\t// First, let's get the doctype and language information out of the way.\n\t\techo '<!DOCTYPE html>\n<html', !empty($context['right_to_left']) ? ' dir=\"rtl\"' : '', '>\n\t<head>';\n\t\tif (isset($context['character_set']))\n\t\t\techo '\n\t\t<meta charset=\"', $context['character_set'], '\">';\n\n\t\tif (!empty($maintenance) && !allowedTo('admin_forum'))\n\t\t\techo '\n\t\t<title>', $mtitle, '</title>\n\t</head>\n\t<body>\n\t\t<h3>', $mtitle, '</h3>\n\t\t', $mmessage, '\n\t</body>\n</html>';\n\t\telseif (!allowedTo('admin_forum'))\n\t\t\techo '\n\t\t<title>', $txt['template_parse_error'], '</title>\n\t</head>\n\t<body>\n\t\t<h3>', $txt['template_parse_error'], '</h3>\n\t\t', $txt['template_parse_error_message'], '\n\t</body>\n</html>';\n\t\telse\n\t\t{\n\t\t\trequire_once($sourcedir . '/Subs-Package.php');\n\n\t\t\t$error = fetch_web_data($boardurl . strtr($filename, array($boarddir => '', strtr($boarddir, '\\\\', '/') => '')));\n\t\t\tif (empty($error) && ini_get('track_errors') && !empty($php_errormsg))\n\t\t\t\t$error = $php_errormsg;\n\t\t\tif (empty($error))\n\t\t\t\t$error = $txt['template_parse_errmsg'];\n\n\t\t\t$error = strtr($error, array('<b>' => '<strong>', '</b>' => '</strong>'));\n\n\t\t\techo '\n\t\t<title>', $txt['template_parse_error'], '</title>\n\t</head>\n\t<body>\n\t\t<h3>', $txt['template_parse_error'], '</h3>\n\t\t', sprintf($txt['template_parse_error_details'], strtr($filename, array($boarddir => '', strtr($boarddir, '\\\\', '/') => '')));\n\n\t\t\tif (!empty($error))\n\t\t\t\techo '\n\t\t<hr>\n\n\t\t<div style=\"margin: 0 20px;\"><pre>', strtr(strtr($error, array('<strong>' . $boarddir => '<strong>...', '<strong>' . strtr($boarddir, '\\\\', '/') => '<strong>...')), '\\\\', '/'), '</pre></div>';\n\n\t\t\t// I know, I know... this is VERY COMPLICATED.  Still, it's good.\n\t\t\tif (preg_match('~ <strong>(\\d+)</strong><br( /)?' . '>$~i', $error, $match) != 0)\n\t\t\t{\n\t\t\t\t$data = file($filename);\n\t\t\t\t$data2 = highlight_php_code(implode('', $data));\n\t\t\t\t$data2 = preg_split('~\\<br( /)?\\>~', $data2);\n\n\t\t\t\t// Fix the PHP code stuff...\n\t\t\t\tif (!isBrowser('gecko'))\n\t\t\t\t\t$data2 = str_replace(\"\\t\", '<span style=\"white-space: pre;\">' . \"\\t\" . '</span>', $data2);\n\t\t\t\telse\n\t\t\t\t\t$data2 = str_replace('<pre style=\"display: inline;\">' . \"\\t\" . '</pre>', \"\\t\", $data2);\n\n\t\t\t\t// Now we get to work around a bug in PHP where it doesn't escape <br>s!\n\t\t\t\t$j = -1;\n\t\t\t\tforeach ($data as $line)\n\t\t\t\t{\n\t\t\t\t\t$j++;\n\n\t\t\t\t\tif (substr_count($line, '<br>') == 0)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t$n = substr_count($line, '<br>');\n\t\t\t\t\tfor ($i = 0; $i < $n; $i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t$data2[$j] .= '&lt;br /&gt;' . $data2[$j + $i + 1];\n\t\t\t\t\t\tunset($data2[$j + $i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\t$j += $n;\n\t\t\t\t}\n\t\t\t\t$data2 = array_values($data2);\n\t\t\t\tarray_unshift($data2, '');\n\n\t\t\t\techo '\n\t\t<div style=\"margin: 2ex 20px; width: 96%; overflow: auto;\"><pre style=\"margin: 0;\">';\n\n\t\t\t\t// Figure out what the color coding was before...\n\t\t\t\t$line = max($match[1] - 9, 1);\n\t\t\t\t$last_line = '';\n\t\t\t\tfor ($line2 = $line - 1; $line2 > 1; $line2--)\n\t\t\t\t\tif (strpos($data2[$line2], '<') !== false)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (preg_match('~(<[^/>]+>)[^<]*$~', $data2[$line2], $color_match) != 0)\n\t\t\t\t\t\t\t$last_line = $color_match[1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t// Show the relevant lines...\n\t\t\t\tfor ($n = min($match[1] + 4, count($data2) + 1); $line <= $n; $line++)\n\t\t\t\t{\n\t\t\t\t\tif ($line == $match[1])\n\t\t\t\t\t\techo '</pre><div style=\"background-color: #ffb0b5;\"><pre style=\"margin: 0;\">';\n\n\t\t\t\t\techo '<span style=\"color: black;\">', sprintf('%' . strlen($n) . 's', $line), ':</span> ';\n\t\t\t\t\tif (isset($data2[$line]) && $data2[$line] != '')\n\t\t\t\t\t\techo substr($data2[$line], 0, 2) == '</' ? preg_replace('~^</[^>]+>~', '', $data2[$line]) : $last_line . $data2[$line];\n\n\t\t\t\t\tif (isset($data2[$line]) && preg_match('~(<[^/>]+>)[^<]*$~', $data2[$line], $color_match) != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$last_line = $color_match[1];\n\t\t\t\t\t\techo '</', substr($last_line, 1, 4), '>';\n\t\t\t\t\t}\n\t\t\t\t\telseif ($last_line != '' && strpos($data2[$line], '<') !== false)\n\t\t\t\t\t\t$last_line = '';\n\t\t\t\t\telseif ($last_line != '' && $data2[$line] != '')\n\t\t\t\t\t\techo '</', substr($last_line, 1, 4), '>';\n\n\t\t\t\t\tif ($line == $match[1])\n\t\t\t\t\t\techo '</pre></div><pre style=\"margin: 0;\">';\n\t\t\t\t\telse\n\t\t\t\t\t\techo \"\\n\";\n\t\t\t\t}\n\n\t\t\t\techo '</pre></div>';\n\t\t\t}\n\n\t\t\techo '\n\t</body>\n</html>';\n\t\t}\n\n\t\tdie;\n\t}\n}\n\n/**\n * Initialize a database connection.\n */\nfunction loadDatabase()\n{\n\tglobal $db_persist, $db_connection, $db_server, $db_user, $db_passwd;\n\tglobal $db_type, $db_name, $ssi_db_user, $ssi_db_passwd, $sourcedir, $db_prefix, $db_port;\n\n\t// Figure out what type of database we are using.\n\tif (empty($db_type) || !file_exists($sourcedir . '/Subs-Db-' . $db_type . '.php'))\n\t\t$db_type = 'mysql';\n\n\t// Load the file for the database.\n\trequire_once($sourcedir . '/Subs-Db-' . $db_type . '.php');\n\n\t$db_options = array();\n\n\t// Add in the port if needed\n\tif (!empty($db_port))\n\t\t$db_options['port'] = $db_port;\n\n\t// If we are in SSI try them first, but don't worry if it doesn't work, we have the normal username and password we can use.\n\tif (SMF == 'SSI' && !empty($ssi_db_user) && !empty($ssi_db_passwd))\n\t{\n\t\t$options = array_merge($db_options, array('persist' => $db_persist, 'non_fatal' => true, 'dont_select_db' => true));\n\n\t\t$db_connection = smf_db_initiate($db_server, $db_name, $ssi_db_user, $ssi_db_passwd, $db_prefix, $options);\n\t}\n\n\t// Either we aren't in SSI mode, or it failed.\n\tif (empty($db_connection))\n\t{\n\t\t$options = array_merge($db_options, array('persist' => $db_persist, 'dont_select_db' => SMF == 'SSI'));\n\n\t\t$db_connection = smf_db_initiate($db_server, $db_name, $db_user, $db_passwd, $db_prefix, $options);\n\t}\n\n\t// Safe guard here, if there isn't a valid connection lets put a stop to it.\n\tif (!$db_connection)\n\t\tdisplay_db_error();\n\n\t// If in SSI mode fix up the prefix.\n\tif (SMF == 'SSI')\n\t\tdb_fix_prefix($db_prefix, $db_name);\n}\n\n/**\n * Try to retrieve a cache entry. On failure, call the appropriate function.\n *\n * @param string $key The key for this entry\n * @param string $file The file associated with this entry\n * @param string $function The function to call\n * @param array $params Parameters to be passed to the specified function\n * @param int $level The cache level\n * @return string The cached data\n */\nfunction cache_quick_get($key, $file, $function, $params, $level = 1)\n{\n\tglobal $modSettings, $sourcedir;\n\n\t// @todo Why are we doing this if caching is disabled?\n\n\tif (function_exists('call_integration_hook'))\n\t\tcall_integration_hook('pre_cache_quick_get', array(&$key, &$file, &$function, &$params, &$level));\n\n\t/* Refresh the cache if either:\n\t\t1. Caching is disabled.\n\t\t2. The cache level isn't high enough.\n\t\t3. The item has not been cached or the cached item expired.\n\t\t4. The cached item has a custom expiration condition evaluating to true.\n\t\t5. The expire time set in the cache item has passed (needed for Zend).\n\t*/\n\tif (empty($modSettings['cache_enable']) || $modSettings['cache_enable'] < $level || !is_array($cache_block = cache_get_data($key, 3600)) || (!empty($cache_block['refresh_eval']) && eval($cache_block['refresh_eval'])) || (!empty($cache_block['expires']) && $cache_block['expires'] < time()))\n\t{\n\t\trequire_once($sourcedir . '/' . $file);\n\t\t$cache_block = call_user_func_array($function, $params);\n\n\t\tif (!empty($modSettings['cache_enable']) && $modSettings['cache_enable'] >= $level)\n\t\t\tcache_put_data($key, $cache_block, $cache_block['expires'] - time());\n\t}\n\n\t// Some cached data may need a freshening up after retrieval.\n\tif (!empty($cache_block['post_retri_eval']))\n\t\teval($cache_block['post_retri_eval']);\n\n\tif (function_exists('call_integration_hook'))\n\t\tcall_integration_hook('post_cache_quick_get', array(&$cache_block));\n\n\treturn $cache_block['data'];\n}\n\n/**\n * Puts value in the cache under key for ttl seconds.\n *\n * - It may \"miss\" so shouldn't be depended on\n * - Uses the cache engine chosen in the ACP and saved in settings.php\n * - It supports:\n *\t Xcache: http://xcache.lighttpd.net/wiki/XcacheApi\n *\t memcache: http://www.php.net/memcache\n *\t APC: http://www.php.net/apc\n *\t Zend: http://files.zend.com/help/Zend-Platform/output_cache_functions.htm\n *\t Zend: http://files.zend.com/help/Zend-Platform/zend_cache_functions.htm\n *\n * @param string $key A key for this value\n * @param mixed $value The data to cache\n * @param int $ttl How long (in seconds) the data should be cached for\n */\nfunction cache_put_data($key, $value, $ttl = 120)\n{\n\tglobal $boardurl, $modSettings, $memcached;\n\tglobal $cache_hits, $cache_count, $db_show_debug, $cachedir;\n\tglobal $cache_accelerator, $cache_enable;\n\n\tif (empty($cache_enable))\n\t\treturn;\n\n\t$cache_count = isset($cache_count) ? $cache_count + 1 : 1;\n\tif (isset($db_show_debug) && $db_show_debug === true)\n\t{\n\t\t$cache_hits[$cache_count] = array('k' => $key, 'd' => 'put', 's' => $value === null ? 0 : strlen(json_encode($value)));\n\t\t$st = microtime();\n\t}\n\n\t$key = md5($boardurl . filemtime($cachedir . '/' . 'index.php')) . '-SMF-' . strtr($key, ':/', '-_');\n\t$value = $value === null ? null : json_encode($value);\n\n\tswitch ($cache_accelerator)\n\t{\n\t\tcase 'memcached':\n\t\t\t// The simple yet efficient memcached.\n\t\t\tif (function_exists('memcached_set') || function_exists('memcache_set') && isset($modSettings['cache_memcached']) && trim($modSettings['cache_memcached']) != '')\n\t\t\t{\n\t\t\t\t// Not connected yet?\n\t\t\t\tif (empty($memcached))\n\t\t\t\t\tget_memcached_server();\n\t\t\t\tif (!$memcached)\n\t\t\t\t\treturn;\n\n\t\t\t\tmemcache_set($memcached, $key, $value, 0, $ttl);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'apc':\n\t\t\t// Alternative PHP Cache, ahoy!\n\t\t\tif (function_exists('apc_store'))\n\t\t\t{\n\t\t\t\t// An extended key is needed to counteract a bug in APC.\n\t\t\t\tif ($value === null)\n\t\t\t\t\tapc_delete($key . 'smf');\n\t\t\t\telse\n\t\t\t\t\tapc_store($key . 'smf', $value, $ttl);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'zend':\n\t\t\t// Zend Platform/ZPS/etc.\n\t\t\tif (function_exists('zend_shm_cache_store'))\n\t\t\t\tzend_shm_cache_store('SMF::' . $key, $value, $ttl);\n\t\t\telseif (function_exists('output_cache_put'))\n\t\t\t\toutput_cache_put($key, $value);\n\t\t\tbreak;\n\t\tcase 'xcache':\n\t\t\tif (function_exists('xcache_set') && ini_get('xcache.var_size') > 0)\n\t\t\t{\n\t\t\t\tif ($value === null)\n\t\t\t\t\txcache_unset($key);\n\t\t\t\telse\n\t\t\t\t\txcache_set($key, $value, $ttl);\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// Otherwise custom cache?\n\t\t\tif ($value === null)\n\t\t\t\t@unlink($cachedir . '/data_' . $key . '.php');\n\t\t\telse\n\t\t\t{\n\t\t\t\t$cache_data = '<' . '?' . 'php if (!defined(\\'SMF\\')) die; if (' . (time() + $ttl) . ' < time()) $expired = true; else{$expired = false; $value = \\'' . addcslashes($value, '\\\\\\'') . '\\';}' . '?' . '>';\n\n\t\t\t\t// Write out the cache file, check that the cache write was successful; all the data must be written\n\t\t\t\t// If it fails due to low diskspace, or other, remove the cache file\n\t\t\t\tif (file_put_contents($cachedir . '/data_' . $key . '.php', $cache_data, LOCK_EX) !== strlen($cache_data))\n\t\t\t\t\t@unlink($cachedir . '/data_' . $key . '.php');\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\tif (function_exists('call_integration_hook'))\n\t\tcall_integration_hook('cache_put_data', array(&$key, &$value, &$ttl));\n\n\tif (isset($db_show_debug) && $db_show_debug === true)\n\t\t$cache_hits[$cache_count]['t'] = array_sum(explode(' ', microtime())) - array_sum(explode(' ', $st));\n\n\t// Invalidate the opcode cache\n\tif (function_exists('opcache_invalidate'))\n   \t\topcache_invalidate($cachedir . '/data_' . $key . '.php', true);\n\n\tif (function_exists('apc_delete_file'))\n   \t\t@apc_delete_file($cachedir . '/data_' . $key . '.php');\n}\n\n/**\n * Gets the value from the cache specified by key, so long as it is not older than ttl seconds.\n * - It may often \"miss\", so shouldn't be depended on.\n * - It supports the same as cache_put_data().\n *\n * @param string $key The key for the value to retrieve\n * @param int $ttl The maximum age of the cached data\n * @return string The cached data or null if nothing was loaded\n */\nfunction cache_get_data($key, $ttl = 120)\n{\n\tglobal $boardurl, $modSettings, $memcached;\n\tglobal $cache_hits, $cache_count, $db_show_debug, $cachedir;\n\tglobal $cache_accelerator, $cache_enable;\n\n\tif (empty($cache_enable))\n\t\treturn;\n\n\t$cache_count = isset($cache_count) ? $cache_count + 1 : 1;\n\tif (isset($db_show_debug) && $db_show_debug === true)\n\t{\n\t\t$cache_hits[$cache_count] = array('k' => $key, 'd' => 'get');\n\t\t$st = microtime();\n\t}\n\n\t$key = md5($boardurl . filemtime($cachedir . '/' . 'index.php')) . '-SMF-' . strtr($key, ':/', '-_');\n\n\tswitch ($cache_accelerator)\n\t{\n\t\tcase 'memcache':\n\t\t\t// Okay, let's go for it memcached!\n\t\t\tif ((function_exists('memcache_get') || function_exists('memcached_get')) && isset($modSettings['cache_memcached']) && trim($modSettings['cache_memcached']) != '')\n\t\t\t{\n\t\t\t\t// Not connected yet?\n\t\t\t\tif (empty($memcached))\n\t\t\t\t\tget_memcached_server();\n\t\t\t\tif (!$memcached)\n\t\t\t\t\treturn null;\n\n\t\t\t\t$value = (function_exists('memcache_get')) ? memcache_get($cache['connection'], $key) : memcached_get($cache['connection'], $key);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'apc':\n\t\t\t// This is the free APC from PECL.\n\t\t\tif (function_exists('apc_fetch'))\n\t\t\t\t$value = apc_fetch($key . 'smf');\n\t\t\tbreak;\n\t\tcase 'zend':\n\t\t\t// Zend's pricey stuff.\n\t\t\tif (function_exists('zend_shm_cache_fetch'))\n\t\t\t\t$value = zend_shm_cache_fetch('SMF::' . $key);\n\t\t\telseif (function_exists('output_cache_get'))\n\t\t\t\t$value = output_cache_get($key, $ttl);\n\t\t\tbreak;\n\t\tcase 'xcache':\n\t\t\tif (function_exists('xcache_get') && ini_get('xcache.var_size') > 0)\n\t\t\t\t$value = xcache_get($key);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// Otherwise it's SMF data!\n\t\t\tif (file_exists($cachedir . '/data_' . $key . '.php') && filesize($cachedir . '/data_' . $key . '.php') > 10)\n\t\t\t{\n\t\t\t\t// Work around Zend's opcode caching (PHP 5.5+), they would cache older files for a couple of seconds\n\t\t\t\t// causing newer files to take effect a while later.\n\t\t\t\tif (function_exists('opcache_invalidate'))\n\t\t\t\t\topcache_invalidate($cachedir . '/data_' . $key . '.php', true);\n\n\t\t\t\t// php will cache file_exists et all, we can't 100% depend on its results so proceed with caution\n\t\t\t\t@include($cachedir . '/data_' . $key . '.php');\n\t\t\t\tif (!empty($expired) && isset($value))\n\t\t\t\t{\n\t\t\t\t\t@unlink($cachedir . '/data_' . $key . '.php');\n\t\t\t\t\tunset($value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\tif (isset($db_show_debug) && $db_show_debug === true)\n\t{\n\t\t$cache_hits[$cache_count]['t'] = array_sum(explode(' ', microtime())) - array_sum(explode(' ', $st));\n\t\t$cache_hits[$cache_count]['s'] = isset($value) ? strlen($value) : 0;\n\t}\n\n\tif (function_exists('call_integration_hook') && isset($value))\n\t\tcall_integration_hook('cache_get_data', array(&$key, &$ttl, &$value));\n\n\treturn empty($value) ? null : smf_json_decode($value, true);\n}\n\n/**\n * Get memcache servers.\n *\n * - This function is used by cache_get_data() and cache_put_data().\n * - It attempts to connect to a random server in the cache_memcached setting.\n * - It recursively calls itself up to $level times.\n *\n * @param int $level The maximum number of times to call this function recursively\n */\nfunction get_memcached_server($level = 3)\n{\n\tglobal $memcached, $db_persist, $cache_memcached;\n\n\t$servers = explode(',', $cache_memcached);\n\t$server = trim($servers[array_rand($servers)]);\n\n\t$port = 0;\n\n\t// Normal host names do not contain slashes, while e.g. unix sockets do. Assume alternative transport pipe with port 0.\n\tif(strpos($server,'/') !== false)\n\t\t$host = $server;\n\telse\n\t{\n\t\t$server = explode(':', $server);\n\t\t$host = $server[0];\n\t\t$port = isset($server[1]) ? $server[1] : 11211;\n\t}\n\n\t$cache = (function_exists('memcache_get')) ? 'memcache' : ((function_exists('memcached_get') ? 'memcached' : ''));\n\n\t// Don't try more times than we have servers!\n\t$level = min(count($servers), $level);\n\n\t// Don't wait too long: yes, we want the server, but we might be able to run the query faster!\n\tif (empty($db_persist))\n\t{\n\t\tif ($cache === 'memcached')\n\t\t\t$memcached = memcached_connect($host, $port);\n\t\tif ($cache === 'memcache')\n\t\t\t$memcached = memcache_connect($host, $port);\n\t}\n\telse\n\t{\n\t\tif ($cache === 'memcached')\n\t\t\t$memcached = memcached_pconnect($host, $port);\n\t\tif ($cache === 'memcache')\n\t\t\t$memcached = memcache_pconnect($host, $port);\n\t}\n\n\tif (!$memcached && $level > 0)\n\t\tget_memcached_server($level - 1);\n}\n\n/**\n * Helper function to set an array of data for an user's avatar.\n *\n * Makes assumptions based on the data provided, the following keys are required:\n * - avatar The raw \"avatar\" column in members table\n * - email The user's email. Used to get the gravatar info\n * - filename The attachment filename\n *\n * @param array $data An array of raw info\n * @return array An array of avatar data\n */\nfunction set_avatar_data($data = array())\n{\n\tglobal $modSettings, $boardurl, $smcFunc, $image_proxy_enabled, $image_proxy_secret;\n\n\t// Come on!\n\tif (empty($data))\n\t\treturn array();\n\n\t// Set a nice default var.\n\t$image = '';\n\n\t// Gravatar has been set as mandatory!\n\tif (!empty($modSettings['gravatarOverride']))\n\t{\n\t\tif (!empty($modSettings['gravatarAllowExtraEmail']) && !empty($data['avatar']) && stristr($data['avatar'], 'gravatar://'))\n\t\t\t$image = get_gravatar_url($smcFunc['substr']($data['avatar'], 11));\n\n\t\telse if (!empty($data['email']))\n\t\t\t$image = get_gravatar_url($data['email']);\n\t}\n\n\t// Look if the user has a gravatar field or has set an external url as avatar.\n\telse\n\t{\n\t\t// So it's stored in the member table?\n\t\tif (!empty($data['avatar']))\n\t\t{\n\t\t\t// Gravatar.\n\t\t\tif (stristr($data['avatar'], 'gravatar://'))\n\t\t\t{\n\t\t\t\tif ($data['avatar'] == 'gravatar://')\n\t\t\t\t\t$image = get_gravatar_url($data['email']);\n\n\t\t\t\telseif (!empty($modSettings['gravatarAllowExtraEmail']))\n\t\t\t\t\t$image = get_gravatar_url($smcFunc['substr']($data['avatar'], 11));\n\t\t\t}\n\n\t\t\t// External url.\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Using ssl?\n\t\t\t\tif (!empty($modSettings['force_ssl']) && $image_proxy_enabled && stripos($data['avatar'], 'http://') !== false)\n\t\t\t\t\t$image = strtr($boardurl, array('http://' => 'https://')) . '/proxy.php?request=' . urlencode($data['avatar']) . '&hash=' . md5($data['avatar'] . $image_proxy_secret);\n\n\t\t\t\t// Just a plain external url.\n\t\t\t\telse\n\t\t\t\t\t$image = (stristr($data['avatar'], 'http://') || stristr($data['avatar'], 'https://')) ? $data['avatar'] : $modSettings['avatar_url'] . '/' . $data['avatar'];\n\t\t\t}\n\t\t}\n\n\t\t// Perhaps this user has an attachment as avatar...\n\t\telse if (!empty($data['filename']))\n\t\t\t$image = $modSettings['custom_avatar_url'] . '/' . $data['filename'];\n\n\t\t// Right... no avatar... use our default image.\n\t\telse\n\t\t\t$image = $modSettings['avatar_url'] . '/default.png';\n\t}\n\n\tcall_integration_hook('integrate_set_avatar_data', array(&$image, &$data));\n\n\t// At this point in time $image has to be filled unless you chose to force gravatar and the user doesn't have the needed data to retrieve it... thus a check for !empty() is still needed.\n\tif (!empty($image))\n\t\treturn array(\n\t\t\t'name' => !empty($data['avatar']) ? $data['avatar'] : '',\n\t\t\t'image' => '<img class=\"avatar\" src=\"' . $image . '\" />',\n\t\t\t'href' => $image,\n\t\t\t'url' => $image,\n\t\t);\n\n\t// Fallback to make life easier for everyone...\n\telse\n\t\treturn array(\n\t\t\t'name' => '',\n\t\t\t'image' => '',\n\t\t\t'href' => '',\n\t\t\t'url' => '',\n\t\t);\n}\n\n?>\n", "<?php\n\n/**\n * This file is concerned pretty entirely, as you see from its name, with\n * logging in and out members, and the validation of that.\n *\n * Simple Machines Forum (SMF)\n *\n * @package SMF\n * @author Simple Machines http://www.simplemachines.org\n * @copyright 2016 Simple Machines and individual contributors\n * @license http://www.simplemachines.org/about/smf/license.php BSD\n *\n * @version 2.1 Beta 3\n */\n\nif (!defined('SMF'))\n\tdie('No direct access...');\n\n/**\n * Ask them for their login information. (shows a page for the user to type\n *  in their username and password.)\n *  It caches the referring URL in $_SESSION['login_url'].\n *  It is accessed from ?action=login.\n *  @uses Login template and language file with the login sub-template.\n */\nfunction Login()\n{\n\tglobal $txt, $context, $scripturl, $user_info;\n\n\t// You are already logged in, go take a tour of the boards\n\tif (!empty($user_info['id']))\n\t\tredirectexit();\n\n\t// We need to load the Login template/language file.\n\tloadLanguage('Login');\n\tloadTemplate('Login');\n\n\t$context['sub_template'] = 'login';\n\n\tif (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && $_SERVER['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest')\n\t{\n\t\t$context['from_ajax'] = true;\n\t\t$context['template_layers'] = array();\n\t}\n\n\t// Get the template ready.... not really much else to do.\n\t$context['page_title'] = $txt['login'];\n\t$context['default_username'] = &$_REQUEST['u'];\n\t$context['default_password'] = '';\n\t$context['never_expire'] = false;\n\n\t// Add the login chain to the link tree.\n\t$context['linktree'][] = array(\n\t\t'url' => $scripturl . '?action=login',\n\t\t'name' => $txt['login'],\n\t);\n\n\t// Set the login URL - will be used when the login process is done (but careful not to send us to an attachment).\n\tif (isset($_SESSION['old_url']) && strpos($_SESSION['old_url'], 'dlattach') === false && preg_match('~(board|topic)[=,]~', $_SESSION['old_url']) != 0)\n\t\t$_SESSION['login_url'] = $_SESSION['old_url'];\n\telseif (isset($_SESSION['login_url']) && strpos($_SESSION['login_url'], 'dlattach') !== false)\n\t\tunset($_SESSION['login_url']);\n\n\t// Create a one time token.\n\tcreateToken('login');\n}\n\n/**\n * Actually logs you in.\n * What it does:\n * - checks credentials and checks that login was successful.\n * - it employs protection against a specific IP or user trying to brute force\n *  a login to an account.\n * - upgrades password encryption on login, if necessary.\n * - after successful login, redirects you to $_SESSION['login_url'].\n * - accessed from ?action=login2, by forms.\n * On error, uses the same templates Login() uses.\n */\nfunction Login2()\n{\n\tglobal $txt, $scripturl, $user_info, $user_settings, $smcFunc;\n\tglobal $cookiename, $modSettings, $context, $sourcedir, $maintenance;\n\n\t// Check to ensure we're forcing SSL for authentication\n\tif (!empty($modSettings['force_ssl']) && empty($maintenance) && (!isset($_SERVER['HTTPS']) || $_SERVER['HTTPS'] != 'on'))\n\t\tfatal_lang_error('login_ssl_required');\n\n\t// Load cookie authentication stuff.\n\trequire_once($sourcedir . '/Subs-Auth.php');\n\n\tif (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && $_SERVER['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest')\n\t{\n\t\t$context['from_ajax'] = true;\n\t\t$context['template_layers'] = array();\n\t}\n\n\tif (isset($_GET['sa']) && $_GET['sa'] == 'salt' && !$user_info['is_guest'])\n\t{\n\t\tif (isset($_COOKIE[$cookiename]) && preg_match('~^a:[34]:\\{i:0;i:\\d{1,7};i:1;s:(0|128):\"([a-fA-F0-9]{128})?\";i:2;[id]:\\d{1,14};(i:3;i:\\d;)?\\}$~', $_COOKIE[$cookiename]) === 1)\n\t\t{\n\t\t\tlist (, , $timeout) = smf_json_decode($_COOKIE[$cookiename], true);\n\n\t\t\t// That didn't work... Maybe it's using serialize?\n\t\t\tif (is_null($timeout))\n\t\t\t\tlist (, , $timeout) = safe_unserialize($_COOKIE[$cookiename]);\n\t\t}\n\t\telseif (isset($_SESSION['login_' . $cookiename]))\n\t\t{\n\t\t\tlist (, , $timeout) = smf_json_decode($_SESSION['login_' . $cookiename]);\n\n\t\t\t// Try for old format\n\t\t\tif (is_null($timeout))\n\t\t\t\tlist (, , $timeout) = safe_unserialize($_SESSION['login_' . $cookiename]);\n\t\t}\n\t\telse\n\t\t\ttrigger_error('Login2(): Cannot be logged in without a session or cookie', E_USER_ERROR);\n\n\t\t$user_settings['password_salt'] = substr(md5(mt_rand()), 0, 4);\n\t\tupdateMemberData($user_info['id'], array('password_salt' => $user_settings['password_salt']));\n\n\t\t// Preserve the 2FA cookie?\n\t\tif (!empty($modSettings['tfa_mode']) && !empty($_COOKIE[$cookiename . '_tfa']))\n\t\t{\n\t\t\t$tfadata = smf_json_decode($_COOKIE[$cookiename . '_tfa'], true);\n\n\t\t\t// If that didn't work, try unserialize instead...\n\t\t\tif (is_null($tfadata))\n\t\t\t\t$tfadata = safe_unserialize($_COOKIE[$cookiename . '_tfa']);\n\n\t\t\tlist ($tfamember, $tfasecret, $exp, $state, $preserve) = $tfadata;\n\n\t\t\t// If we're preserving the cookie, reset it with updated salt\n\t\t\tif ($preserve && time() < $exp)\n\t\t\t\tsetTFACookie(3153600, $user_info['password_salt'], hash_salt($user_settings['tfa_backup'], $user_settings['password_salt']), true);\n\t\t\telse\n\t\t\t\tsetTFACookie(-3600, 0, '');\n\t\t}\n\n\t\tsetLoginCookie($timeout - time(), $user_info['id'], hash_salt($user_settings['passwd'], $user_settings['password_salt']));\n\n\t\tredirectexit('action=login2;sa=check;member=' . $user_info['id'], $context['server']['needs_login_fix']);\n\t}\n\t// Double check the cookie...\n\telseif (isset($_GET['sa']) && $_GET['sa'] == 'check')\n\t{\n\t\t// Strike!  You're outta there!\n\t\tif ($_GET['member'] != $user_info['id'])\n\t\t\tfatal_lang_error('login_cookie_error', false);\n\n\t\t$user_info['can_mod'] = allowedTo('access_mod_center') || (!$user_info['is_guest'] && ($user_info['mod_cache']['gq'] != '0=1' || $user_info['mod_cache']['bq'] != '0=1' || ($modSettings['postmod_active'] && !empty($user_info['mod_cache']['ap']))));\n\n\t\t// Some whitelisting for login_url...\n\t\tif (empty($_SESSION['login_url']))\n\t\t\tredirectexit(empty($user_settings['tfa_secret']) ? '' : 'action=logintfa');\n\t\telseif (!empty($_SESSION['login_url']) && (strpos($_SESSION['login_url'], 'http://') === false && strpos($_SESSION['login_url'], 'https://') === false))\n\t\t{\n\t\t\tunset ($_SESSION['login_url']);\n\t\t\tredirectexit(empty($user_settings['tfa_secret']) ? '' : 'action=logintfa');\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Best not to clutter the session data too much...\n\t\t\t$temp = $_SESSION['login_url'];\n\t\t\tunset($_SESSION['login_url']);\n\n\t\t\tredirectexit($temp);\n\t\t}\n\t}\n\n\t// Beyond this point you are assumed to be a guest trying to login.\n\tif (!$user_info['is_guest'])\n\t\tredirectexit();\n\n\t// Are you guessing with a script?\n\tcheckSession();\n\t$tk = validateToken('login');\n\tspamProtection('login');\n\n\t// Set the login_url if it's not already set (but careful not to send us to an attachment).\n\tif ((empty($_SESSION['login_url']) && isset($_SESSION['old_url']) && strpos($_SESSION['old_url'], 'dlattach') === false && preg_match('~(board|topic)[=,]~', $_SESSION['old_url']) != 0) || (isset($_GET['quicklogin']) && isset($_SESSION['old_url']) && strpos($_SESSION['old_url'], 'login') === false))\n\t\t$_SESSION['login_url'] = $_SESSION['old_url'];\n\n\t// Been guessing a lot, haven't we?\n\tif (isset($_SESSION['failed_login']) && $_SESSION['failed_login'] >= $modSettings['failed_login_threshold'] * 3)\n\t\tfatal_lang_error('login_threshold_fail', 'critical');\n\n\t// Set up the cookie length.  (if it's invalid, just fall through and use the default.)\n\tif (isset($_POST['cookieneverexp']) || (!empty($_POST['cookielength']) && $_POST['cookielength'] == -1))\n\t\t$modSettings['cookieTime'] = 3153600;\n\telseif (!empty($_POST['cookielength']) && ($_POST['cookielength'] >= 1 && $_POST['cookielength'] <= 525600))\n\t\t$modSettings['cookieTime'] = (int) $_POST['cookielength'];\n\n\tloadLanguage('Login');\n\t// Load the template stuff.\n\tloadTemplate('Login');\n\t$context['sub_template'] = 'login';\n\n\t// Set up the default/fallback stuff.\n\t$context['default_username'] = isset($_POST['user']) ? preg_replace('~&amp;#(\\\\d{1,7}|x[0-9a-fA-F]{1,6});~', '&#\\\\1;', $smcFunc['htmlspecialchars']($_POST['user'])) : '';\n\t$context['default_password'] = '';\n\t$context['never_expire'] = $modSettings['cookieTime'] == 525600 || $modSettings['cookieTime'] == 3153600;\n\t$context['login_errors'] = array($txt['error_occured']);\n\t$context['page_title'] = $txt['login'];\n\n\t// Add the login chain to the link tree.\n\t$context['linktree'][] = array(\n\t\t'url' => $scripturl . '?action=login',\n\t\t'name' => $txt['login'],\n\t);\n\n\t// You forgot to type your username, dummy!\n\tif (!isset($_POST['user']) || $_POST['user'] == '')\n\t{\n\t\t$context['login_errors'] = array($txt['need_username']);\n\t\treturn;\n\t}\n\n\t// Hmm... maybe 'admin' will login with no password. Uhh... NO!\n\tif (!isset($_POST['passwrd']) || $_POST['passwrd'] == '')\n\t{\n\t\t$context['login_errors'] = array($txt['no_password']);\n\t\treturn;\n\t}\n\n\t// No funky symbols either.\n\tif (preg_match('~[<>&\"\\'=\\\\\\]~', preg_replace('~(&#(\\\\d{1,7}|x[0-9a-fA-F]{1,6});)~', '', $_POST['user'])) != 0)\n\t{\n\t\t$context['login_errors'] = array($txt['error_invalid_characters_username']);\n\t\treturn;\n\t}\n\n\t// And if it's too long, trim it back.\n\tif ($smcFunc['strlen']($_POST['user']) > 80)\n\t{\n\t\t$_POST['user'] = $smcFunc['substr']($_POST['user'], 0, 79);\n\t\t$context['default_username'] = preg_replace('~&amp;#(\\\\d{1,7}|x[0-9a-fA-F]{1,6});~', '&#\\\\1;', $smcFunc['htmlspecialchars']($_POST['user']));\n\t}\n\n\t// Load the data up!\n\t$request = $smcFunc['db_query']('', '\n\t\tSELECT passwd, id_member, id_group, lngfile, is_activated, email_address, additional_groups, member_name, password_salt,\n\t\t\tpasswd_flood, tfa_secret\n\t\tFROM {db_prefix}members\n\t\tWHERE ' . ($smcFunc['db_case_sensitive'] ? 'LOWER(member_name) = LOWER({string:user_name})' : 'member_name = {string:user_name}') . '\n\t\tLIMIT 1',\n\t\tarray(\n\t\t\t'user_name' => $smcFunc['db_case_sensitive'] ? strtolower($_POST['user']) : $_POST['user'],\n\t\t)\n\t);\n\t// Probably mistyped or their email, try it as an email address. (member_name first, though!)\n\tif ($smcFunc['db_num_rows']($request) == 0 && strpos($_POST['user'], '@') !== false)\n\t{\n\t\t$smcFunc['db_free_result']($request);\n\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT passwd, id_member, id_group, lngfile, is_activated, email_address, additional_groups, member_name, password_salt,\n\t\t\tpasswd_flood, tfa_secret\n\t\t\tFROM {db_prefix}members\n\t\t\tWHERE email_address = {string:user_name}\n\t\t\tLIMIT 1',\n\t\t\tarray(\n\t\t\t\t'user_name' => $_POST['user'],\n\t\t\t)\n\t\t);\n\t}\n\n\t// Let them try again, it didn't match anything...\n\tif ($smcFunc['db_num_rows']($request) == 0)\n\t{\n\t\t$context['login_errors'] = array($txt['username_no_exist']);\n\t\treturn;\n\t}\n\n\t$user_settings = $smcFunc['db_fetch_assoc']($request);\n\t$smcFunc['db_free_result']($request);\n\n\t// Bad password!  Thought you could fool the database?!\n\tif (!hash_verify_password($user_settings['member_name'], un_htmlspecialchars($_POST['passwrd']), $user_settings['passwd']))\n\t{\n\t\t// Let's be cautious, no hacking please. thanx.\n\t\tvalidatePasswordFlood($user_settings['id_member'], $user_settings['passwd_flood']);\n\n\t\t// Maybe we were too hasty... let's try some other authentication methods.\n\t\t$other_passwords = array();\n\n\t\t// None of the below cases will be used most of the time (because the salt is normally set.)\n\t\tif (!empty($modSettings['enable_password_conversion']) && $user_settings['password_salt'] == '')\n\t\t{\n\t\t\t// YaBB SE, Discus, MD5 (used a lot), SHA-1 (used some), SMF 1.0.x, IkonBoard, and none at all.\n\t\t\t$other_passwords[] = crypt($_POST['passwrd'], substr($_POST['passwrd'], 0, 2));\n\t\t\t$other_passwords[] = crypt($_POST['passwrd'], substr($user_settings['passwd'], 0, 2));\n\t\t\t$other_passwords[] = md5($_POST['passwrd']);\n\t\t\t$other_passwords[] = sha1($_POST['passwrd']);\n\t\t\t$other_passwords[] = md5_hmac($_POST['passwrd'], strtolower($user_settings['member_name']));\n\t\t\t$other_passwords[] = md5($_POST['passwrd'] . strtolower($user_settings['member_name']));\n\t\t\t$other_passwords[] = md5(md5($_POST['passwrd']));\n\t\t\t$other_passwords[] = $_POST['passwrd'];\n\n\t\t\t// This one is a strange one... MyPHP, crypt() on the MD5 hash.\n\t\t\t$other_passwords[] = crypt(md5($_POST['passwrd']), md5($_POST['passwrd']));\n\n\t\t\t// Snitz style - SHA-256.  Technically, this is a downgrade, but most PHP configurations don't support sha256 anyway.\n\t\t\tif (strlen($user_settings['passwd']) == 64 && function_exists('mhash') && defined('MHASH_SHA256'))\n\t\t\t\t$other_passwords[] = bin2hex(mhash(MHASH_SHA256, $_POST['passwrd']));\n\n\t\t\t// phpBB3 users new hashing.  We now support it as well ;).\n\t\t\t$other_passwords[] = phpBB3_password_check($_POST['passwrd'], $user_settings['passwd']);\n\n\t\t\t// APBoard 2 Login Method.\n\t\t\t$other_passwords[] = md5(crypt($_POST['passwrd'], 'CRYPT_MD5'));\n\t\t}\n\t\t// The hash should be 40 if it's SHA-1, so we're safe with more here too.\n\t\telseif (!empty($modSettings['enable_password_conversion']) && strlen($user_settings['passwd']) == 32)\n\t\t{\n\t\t\t// vBulletin 3 style hashing?  Let's welcome them with open arms \\o/.\n\t\t\t$other_passwords[] = md5(md5($_POST['passwrd']) . stripslashes($user_settings['password_salt']));\n\n\t\t\t// Hmm.. p'raps it's Invision 2 style?\n\t\t\t$other_passwords[] = md5(md5($user_settings['password_salt']) . md5($_POST['passwrd']));\n\n\t\t\t// Some common md5 ones.\n\t\t\t$other_passwords[] = md5($user_settings['password_salt'] . $_POST['passwrd']);\n\t\t\t$other_passwords[] = md5($_POST['passwrd'] . $user_settings['password_salt']);\n\t\t}\n\t\telseif (strlen($user_settings['passwd']) == 40)\n\t\t{\n\t\t\t// Maybe they are using a hash from before the password fix.\n\t\t\t// This is also valid for SMF 1.1 to 2.0 style of hashing, changed to bcrypt in SMF 2.1\n\t\t\t$other_passwords[] = sha1(strtolower($user_settings['member_name']) . un_htmlspecialchars($_POST['passwrd']));\n\n\t\t\t// BurningBoard3 style of hashing.\n\t\t\tif (!empty($modSettings['enable_password_conversion']))\n\t\t\t\t$other_passwords[] = sha1($user_settings['password_salt'] . sha1($user_settings['password_salt'] . sha1($_POST['passwrd'])));\n\n\t\t\t// Perhaps we converted to UTF-8 and have a valid password being hashed differently.\n\t\t\tif ($context['character_set'] == 'utf8' && !empty($modSettings['previousCharacterSet']) && $modSettings['previousCharacterSet'] != 'utf8')\n\t\t\t{\n\t\t\t\t// Try iconv first, for no particular reason.\n\t\t\t\tif (function_exists('iconv'))\n\t\t\t\t\t$other_passwords['iconv'] = sha1(strtolower(iconv('UTF-8', $modSettings['previousCharacterSet'], $user_settings['member_name'])) . un_htmlspecialchars(iconv('UTF-8', $modSettings['previousCharacterSet'], $_POST['passwrd'])));\n\n\t\t\t\t// Say it aint so, iconv failed!\n\t\t\t\tif (empty($other_passwords['iconv']) && function_exists('mb_convert_encoding'))\n\t\t\t\t\t$other_passwords[] = sha1(strtolower(mb_convert_encoding($user_settings['member_name'], 'UTF-8', $modSettings['previousCharacterSet'])) . un_htmlspecialchars(mb_convert_encoding($_POST['passwrd'], 'UTF-8', $modSettings['previousCharacterSet'])));\n\t\t\t}\n\t\t}\n\n\t\t// SMF's sha1 function can give a funny result on Linux (Not our fault!). If we've now got the real one let the old one be valid!\n\t\tif (stripos(PHP_OS, 'win') !== 0 && strlen($user_settings['passwd']) < hash_length())\n\t\t{\n\t\t\trequire_once($sourcedir . '/Subs-Compat.php');\n\t\t\t$other_passwords[] = sha1_smf(strtolower($user_settings['member_name']) . un_htmlspecialchars($_POST['passwrd']));\n\t\t}\n\n\t\t// Allows mods to easily extend the $other_passwords array\n\t\tcall_integration_hook('integrate_other_passwords', array(&$other_passwords));\n\n\t\t// Whichever encryption it was using, let's make it use SMF's now ;).\n\t\tif (in_array($user_settings['passwd'], $other_passwords))\n\t\t{\n\t\t\t$user_settings['passwd'] = hash_password($user_settings['member_name'], un_htmlspecialchars($_POST['passwrd']));\n\t\t\t$user_settings['password_salt'] = substr(md5(mt_rand()), 0, 4);\n\n\t\t\t// Update the password and set up the hash.\n\t\t\tupdateMemberData($user_settings['id_member'], array('passwd' => $user_settings['passwd'], 'password_salt' => $user_settings['password_salt'], 'passwd_flood' => ''));\n\t\t}\n\t\t// Okay, they for sure didn't enter the password!\n\t\telse\n\t\t{\n\t\t\t// They've messed up again - keep a count to see if they need a hand.\n\t\t\t$_SESSION['failed_login'] = isset($_SESSION['failed_login']) ? ($_SESSION['failed_login'] + 1) : 1;\n\n\t\t\t// Hmm... don't remember it, do you?  Here, try the password reminder ;).\n\t\t\tif ($_SESSION['failed_login'] >= $modSettings['failed_login_threshold'])\n\t\t\t\tredirectexit('action=reminder');\n\t\t\t// We'll give you another chance...\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Log an error so we know that it didn't go well in the error log.\n\t\t\t\tlog_error($txt['incorrect_password'] . ' - <span class=\"remove\">' . $user_settings['member_name'] . '</span>', 'user');\n\n\t\t\t\t$context['login_errors'] = array($txt['incorrect_password']);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\telseif (!empty($user_settings['passwd_flood']))\n\t{\n\t\t// Let's be sure they weren't a little hacker.\n\t\tvalidatePasswordFlood($user_settings['id_member'], $user_settings['passwd_flood'], true);\n\n\t\t// If we got here then we can reset the flood counter.\n\t\tupdateMemberData($user_settings['id_member'], array('passwd_flood' => ''));\n\t}\n\n\t// Correct password, but they've got no salt; fix it!\n\tif ($user_settings['password_salt'] == '')\n\t{\n\t\t$user_settings['password_salt'] = substr(md5(mt_rand()), 0, 4);\n\t\tupdateMemberData($user_settings['id_member'], array('password_salt' => $user_settings['password_salt']));\n\t}\n\n\t// Check their activation status.\n\tif (!checkActivation())\n\t\treturn;\n\n\tDoLogin();\n}\n\n/**\n * Allows the user to enter their Two-Factor Authentication code\n */\nfunction LoginTFA()\n{\n\tglobal $sourcedir, $txt, $context, $user_info, $modSettings, $scripturl;\n\n\tif (!$user_info['is_guest'] || empty($context['tfa_member']) || empty($modSettings['tfa_mode']))\n\t\tfatal_lang_error('no_access', false);\n\n\tloadLanguage('Profile');\n\trequire_once($sourcedir . '/Class-TOTP.php');\n\n\t$member = $context['tfa_member'];\n\n\t// Prevent replay attacks by limiting at least 2 minutes before they can log in again via 2FA\n\tif (time() - $member['last_login'] < 120)\n\t\tfatal_lang_error('tfa_wait', false);\n\n\t$totp = new \\TOTP\\Auth($member['tfa_secret']);\n\t$totp->setRange(1);\n\n\tif (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && $_SERVER['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest')\n\t{\n\t\t$context['from_ajax'] = true;\n\t\t$context['template_layers'] = array();\n\t}\n\n\tif (!empty($_POST['tfa_code']) && empty($_POST['tfa_backup']))\n\t{\n\t\t// Check to ensure we're forcing SSL for authentication\n\t\tif (!empty($modSettings['force_ssl']) && empty($maintenance) && (!isset($_SERVER['HTTPS']) || $_SERVER['HTTPS'] != 'on'))\n\t\t\tfatal_lang_error('login_ssl_required');\n\n\t\t$code = $_POST['tfa_code'];\n\n\t\tif (strlen($code) == $totp->getCodeLength() && $totp->validateCode($code))\n\t\t{\n\t\t\tupdateMemberData($member['id_member'], array('last_login' => time()));\n\n\t\t\tsetTFACookie(3153600, $member['id_member'], hash_salt($member['tfa_backup'], $member['password_salt']), !empty($_POST['tfa_preserve']));\n\t\t\tredirectexit();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvalidatePasswordFlood($member['id_member'], $member['passwd_flood'], false, true);\n\n\t\t\t$context['tfa_error'] = true;\n\t\t\t$context['tfa_value'] = $_POST['tfa_code'];\n\t\t}\n\t}\n\telseif (!empty($_POST['tfa_backup']))\n\t{\n\t\t// Check to ensure we're forcing SSL for authentication\n\t\tif (!empty($modSettings['force_ssl']) && empty($maintenance) && (!isset($_SERVER['HTTPS']) || $_SERVER['HTTPS'] != 'on'))\n\t\t\tfatal_lang_error('login_ssl_required');\n\n\t\t$backup = $_POST['tfa_backup'];\n\n\t\tif (hash_verify_password($member['member_name'], $backup, $member['tfa_backup']))\n\t\t{\n\t\t\t// Get rid of their current TFA settings\n\t\t\tupdateMemberData($member['id_member'], array(\n\t\t\t\t'tfa_secret' => '',\n\t\t\t\t'tfa_backup' => '',\n\t\t\t\t'last_login' => time(),\n\t\t\t));\n\t\t\tsetTFACookie(3153600, $member['id_member'], hash_salt($member['tfa_backup'], $member['password_salt']));\n\t\t\tredirectexit('action=profile;area=tfasetup;backup');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvalidatePasswordFlood($member['id_member'], $member['passwd_flood'], false, true);\n\n\t\t\t$context['tfa_backup_error'] = true;\n\t\t\t$context['tfa_value'] = $_POST['tfa_code'];\n\t\t\t$context['tfa_backup_value'] = $_POST['tfa_backup'];\n\t\t}\n\t}\n\n\tloadTemplate('Login');\n\t$context['sub_template'] = 'login_tfa';\n\t$context['page_title'] = $txt['login'];\n\t$context['tfa_url'] = (!empty($modSettings['force_ssl']) && $modSettings['force_ssl'] < 2 ? strtr($scripturl, array('http://' => 'https://')) : $scripturl) . '?action=logintfa';\n}\n\n/**\n * Check activation status of the current user.\n */\nfunction checkActivation()\n{\n\tglobal $context, $txt, $scripturl, $user_settings, $modSettings;\n\n\tif (!isset($context['login_errors']))\n\t\t$context['login_errors'] = array();\n\n\t// What is the true activation status of this account?\n\t$activation_status = $user_settings['is_activated'] > 10 ? $user_settings['is_activated'] - 10 : $user_settings['is_activated'];\n\n\t// Check if the account is activated - COPPA first...\n\tif ($activation_status == 5)\n\t{\n\t\t$context['login_errors'][] = $txt['coppa_no_concent'] . ' <a href=\"' . $scripturl . '?action=coppa;member=' . $user_settings['id_member'] . '\">' . $txt['coppa_need_more_details'] . '</a>';\n\t\treturn false;\n\t}\n\t// Awaiting approval still?\n\telseif ($activation_status == 3)\n\t\tfatal_lang_error('still_awaiting_approval', 'user');\n\t// Awaiting deletion, changed their mind?\n\telseif ($activation_status == 4)\n\t{\n\t\tif (isset($_REQUEST['undelete']))\n\t\t{\n\t\t\tupdateMemberData($user_settings['id_member'], array('is_activated' => 1));\n\t\t\tupdateSettings(array('unapprovedMembers' => ($modSettings['unapprovedMembers'] > 0 ? $modSettings['unapprovedMembers'] - 1 : 0)));\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$context['disable_login_hashing'] = true;\n\t\t\t$context['login_errors'][] = $txt['awaiting_delete_account'];\n\t\t\t$context['login_show_undelete'] = true;\n\t\t\treturn false;\n\t\t}\n\t}\n\t// Standard activation?\n\telseif ($activation_status != 1)\n\t{\n\t\tlog_error($txt['activate_not_completed1'] . ' - <span class=\"remove\">' . $user_settings['member_name'] . '</span>', false);\n\n\t\t$context['login_errors'][] = $txt['activate_not_completed1'] . ' <a href=\"' . $scripturl . '?action=activate;sa=resend;u=' . $user_settings['id_member'] . '\">' . $txt['activate_not_completed2'] . '</a>';\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n/**\n * Perform the logging in. (set cookie, call hooks, etc)\n */\nfunction DoLogin()\n{\n\tglobal $user_info, $user_settings, $smcFunc;\n\tglobal $maintenance, $modSettings, $context, $sourcedir;\n\n\t// Load cookie authentication stuff.\n\trequire_once($sourcedir . '/Subs-Auth.php');\n\n\t// Call login integration functions.\n\tcall_integration_hook('integrate_login', array($user_settings['member_name'], null, $modSettings['cookieTime']));\n\n\t// Get ready to set the cookie...\n\t$username = $user_settings['member_name'];\n\t$user_info['id'] = $user_settings['id_member'];\n\n\t// Bam!  Cookie set.  A session too, just in case.\n\tsetLoginCookie(60 * $modSettings['cookieTime'], $user_settings['id_member'], hash_salt($user_settings['passwd'], $user_settings['password_salt']));\n\n\t// Reset the login threshold.\n\tif (isset($_SESSION['failed_login']))\n\t\tunset($_SESSION['failed_login']);\n\n\t$user_info['is_guest'] = false;\n\t$user_settings['additional_groups'] = explode(',', $user_settings['additional_groups']);\n\t$user_info['is_admin'] = $user_settings['id_group'] == 1 || in_array(1, $user_settings['additional_groups']);\n\n\t// Are you banned?\n\tis_not_banned(true);\n\n\t// Don't stick the language or theme after this point.\n\tunset($_SESSION['language'], $_SESSION['id_theme']);\n\n\t// First login?\n\t$request = $smcFunc['db_query']('', '\n\t\tSELECT last_login\n\t\tFROM {db_prefix}members\n\t\tWHERE id_member = {int:id_member}\n\t\t\tAND last_login = 0',\n\t\tarray(\n\t\t\t'id_member' => $user_info['id'],\n\t\t)\n\t);\n\tif ($smcFunc['db_num_rows']($request) == 1)\n\t\t$_SESSION['first_login'] = true;\n\telse\n\t\tunset($_SESSION['first_login']);\n\t$smcFunc['db_free_result']($request);\n\n\t// You've logged in, haven't you?\n\t$update = array('member_ip' => $user_info['ip'], 'member_ip2' => $_SERVER['BAN_CHECK_IP']);\n\tif (empty($user_settings['tfa_secret']))\n\t\t$update['last_login'] = time();\n\tupdateMemberData($user_info['id'], $update);\n\n\t// Get rid of the online entry for that old guest....\n\t$smcFunc['db_query']('', '\n\t\tDELETE FROM {db_prefix}log_online\n\t\tWHERE session = {string:session}',\n\t\tarray(\n\t\t\t'session' => 'ip' . $user_info['ip'],\n\t\t)\n\t);\n\t$_SESSION['log_time'] = 0;\n\n\t// Log this entry, only if we have it enabled.\n\tif (!empty($modSettings['loginHistoryDays']))\n\t\t$smcFunc['db_insert']('insert',\n\t\t\t'{db_prefix}member_logins',\n\t\t\tarray(\n\t\t\t\t'id_member' => 'int', 'time' => 'int', 'ip' => 'inet', 'ip2' => 'inet',\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t$user_info['id'], time(), $user_info['ip'], $user_info['ip2']\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'id_member', 'time'\n\t\t\t)\n\t\t);\n\n\t// Just log you back out if it's in maintenance mode and you AREN'T an admin.\n\tif (empty($maintenance) || allowedTo('admin_forum'))\n\t\tredirectexit('action=login2;sa=check;member=' . $user_info['id'], $context['server']['needs_login_fix']);\n\telse\n\t\tredirectexit('action=logout;' . $context['session_var'] . '=' . $context['session_id'], $context['server']['needs_login_fix']);\n}\n\n/**\n * Logs the current user out of their account.\n * It requires that the session hash is sent as well, to prevent automatic logouts by images or javascript.\n * It redirects back to $_SESSION['logout_url'], if it exists.\n * It is accessed via ?action=logout;session_var=...\n *\n * @param bool $internal If true, it doesn't check the session\n * @param bool $redirect Whether or not to redirect the user after they log out\n */\nfunction Logout($internal = false, $redirect = true)\n{\n\tglobal $sourcedir, $user_info, $user_settings, $context, $smcFunc, $cookiename, $modSettings;\n\n\t// Make sure they aren't being auto-logged out.\n\tif (!$internal)\n\t\tcheckSession('get');\n\n\trequire_once($sourcedir . '/Subs-Auth.php');\n\n\tif (isset($_SESSION['pack_ftp']))\n\t\t$_SESSION['pack_ftp'] = null;\n\n\t// It won't be first login anymore.\n\tunset($_SESSION['first_login']);\n\n\t// Just ensure they aren't a guest!\n\tif (!$user_info['is_guest'])\n\t{\n\t\t// Pass the logout information to integrations.\n\t\tcall_integration_hook('integrate_logout', array($user_settings['member_name']));\n\n\t\t// If you log out, you aren't online anymore :P.\n\t\t$smcFunc['db_query']('', '\n\t\t\tDELETE FROM {db_prefix}log_online\n\t\t\tWHERE id_member = {int:current_member}',\n\t\t\tarray(\n\t\t\t\t'current_member' => $user_info['id'],\n\t\t\t)\n\t\t);\n\t}\n\n\t$_SESSION['log_time'] = 0;\n\n\t// Empty the cookie! (set it in the past, and for id_member = 0)\n\tsetLoginCookie(-3600, 0);\n\n\t// And some other housekeeping while we're at it.\n\t$salt = substr(md5(mt_rand()), 0, 4);\n\tif (!empty($user_info['id']))\n\t\tupdateMemberData($user_info['id'], array('password_salt' => $salt));\n\n\tif (!empty($modSettings['tfa_mode']) && !empty($user_info['id']) && !empty($_COOKIE[$cookiename . '_tfa']))\n\t{\n\t\t$tfadata = smf_json_decode($_COOKIE[$cookiename . '_tfa'], true);\n\n\t\t// If that failed, try the old method\n\t\tif (is_null($tfadata))\n\t\t\t$tfadata = safe_unserialize($_COOKIE[$cookiename . '_tfa']);\n\n\t\tlist ($tfamember, $tfasecret, $exp, $state, $preserve) = $tfadata;\n\n\t\t// If we're preserving the cookie, reset it with updated salt\n\t\tif ($preserve && time() < $exp)\n\t\t\tsetTFACookie(3153600, $user_info['id'], hash_salt($user_settings['tfa_backup'], $salt), true);\n\t\telse\n\t\t\tsetTFACookie(-3600, 0, '');\n\t}\n\n\tsession_destroy();\n\n\t// Off to the merry board index we go!\n\tif ($redirect)\n\t{\n\t\tif (empty($_SESSION['logout_url']))\n\t\t\tredirectexit('', $context['server']['needs_login_fix']);\n\t\telseif (!empty($_SESSION['logout_url']) && (strpos($_SESSION['logout_url'], 'http://') === false && strpos($_SESSION['logout_url'], 'https://') === false))\n\t\t{\n\t\t\tunset ($_SESSION['logout_url']);\n\t\t\tredirectexit();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$temp = $_SESSION['logout_url'];\n\t\t\tunset($_SESSION['logout_url']);\n\n\t\t\tredirectexit($temp, $context['server']['needs_login_fix']);\n\t\t}\n\t}\n}\n\n/**\n * MD5 Encryption used for older passwords. (SMF 1.0.x/YaBB SE 1.5.x hashing)\n *\n * @param string $data The data\n * @param string $key The key\n * @return string The HMAC MD5 of data with key\n */\nfunction md5_hmac($data, $key)\n{\n\t$key = str_pad(strlen($key) <= 64 ? $key : pack('H*', md5($key)), 64, chr(0x00));\n\treturn md5(($key ^ str_repeat(chr(0x5c), 64)) . pack('H*', md5(($key ^ str_repeat(chr(0x36), 64)) . $data)));\n}\n\n/**\n * Custom encryption for phpBB3 based passwords.\n *\n * @param string $passwd The raw (unhashed) password\n * @param string $passwd_hash The hashed password\n * @return string The hashed version of $passwd\n */\nfunction phpBB3_password_check($passwd, $passwd_hash)\n{\n\t// Too long or too short?\n\tif (strlen($passwd_hash) != 34)\n\t\treturn;\n\n\t// Range of characters allowed.\n\t$range = './0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n\t// Tests\n\t$strpos = strpos($range, $passwd_hash[3]);\n\t$count = 1 << $strpos;\n\t$count2 = $count;\n\t$salt = substr($passwd_hash, 4, 8);\n\n\t$hash = md5($salt . $passwd, true);\n\tfor (; $count != 0; --$count)\n\t\t$hash = md5($hash . $passwd, true);\n\n\t$output = substr($passwd_hash, 0, 12);\n\t$i = 0;\n\twhile ($i < 16)\n\t{\n\t\t$value = ord($hash[$i++]);\n\t\t$output .= $range[$value & 0x3f];\n\n\t\tif ($i < 16)\n\t\t\t$value |= ord($hash[$i]) << 8;\n\n\t\t$output .= $range[($value >> 6) & 0x3f];\n\n\t\tif ($i++ >= 16)\n\t\t\tbreak;\n\n\t\tif ($i < 16)\n\t\t\t$value |= ord($hash[$i]) << 16;\n\n\t\t$output .= $range[($value >> 12) & 0x3f];\n\n\t\tif ($i++ >= 16)\n\t\t\tbreak;\n\n\t\t$output .= $range[($value >> 18) & 0x3f];\n\t}\n\n\t// Return now.\n\treturn $output;\n}\n\n/**\n * This protects against brute force attacks on a member's password.\n * Importantly, even if the password was right we DON'T TELL THEM!\n *\n * @param int $id_member The ID of the member\n * @param bool|string $password_flood_value False if we don't have a flood value, otherwise a string with a timestamp and number of tries separated by a |\n * @param bool $was_correct Whether or not the password was correct\n * @param bool $tfa Whether we're validating for two-factor authentication\n */\nfunction validatePasswordFlood($id_member, $password_flood_value = false, $was_correct = false, $tfa = false)\n{\n\tglobal $cookiename, $sourcedir;\n\n\t// As this is only brute protection, we allow 5 attempts every 10 seconds.\n\n\t// Destroy any session or cookie data about this member, as they validated wrong.\n\t// Only if they're not validating for 2FA\n\tif (!$tfa)\n\t{\n\t\trequire_once($sourcedir . '/Subs-Auth.php');\n\t\tsetLoginCookie(-3600, 0);\n\n\t\tif (isset($_SESSION['login_' . $cookiename]))\n\t\t\tunset($_SESSION['login_' . $cookiename]);\n\t}\n\n\t// We need a member!\n\tif (!$id_member)\n\t{\n\t\t// Redirect back!\n\t\tredirectexit();\n\n\t\t// Probably not needed, but still make sure...\n\t\tfatal_lang_error('no_access', false);\n\t}\n\n\t// Right, have we got a flood value?\n\tif ($password_flood_value !== false)\n\t\t@list ($time_stamp, $number_tries) = explode('|', $password_flood_value);\n\n\t// Timestamp or number of tries invalid?\n\tif (empty($number_tries) || empty($time_stamp))\n\t{\n\t\t$number_tries = 0;\n\t\t$time_stamp = time();\n\t}\n\n\t// They've failed logging in already\n\tif (!empty($number_tries))\n\t{\n\t\t// Give them less chances if they failed before\n\t\t$number_tries = $time_stamp < time() - 20 ? 2 : $number_tries;\n\n\t\t// They are trying too fast, make them wait longer\n\t\tif ($time_stamp < time() - 10)\n\t\t\t$time_stamp = time();\n\t}\n\n\t$number_tries++;\n\n\t// Broken the law?\n\tif ($number_tries > 5)\n\t\tfatal_lang_error('login_threshold_brute_fail', 'critical');\n\n\t// Otherwise set the members data. If they correct on their first attempt then we actually clear it, otherwise we set it!\n\tupdateMemberData($id_member, array('passwd_flood' => $was_correct && $number_tries == 1 ? '' : $time_stamp . '|' . $number_tries));\n\n}\n\n?>\n", "<?php\n\n/**\n * This file has functions in it to do with authentication, user handling, and the like.\n *\n * Simple Machines Forum (SMF)\n *\n * @package SMF\n * @author Simple Machines http://www.simplemachines.org\n * @copyright 2016 Simple Machines and individual contributors\n * @license http://www.simplemachines.org/about/smf/license.php BSD\n *\n * @version 2.1 Beta 3\n */\n\nif (!defined('SMF'))\n\tdie('No direct access...');\n\n/**\n * Sets the SMF-style login cookie and session based on the id_member and password passed.\n * - password should be already encrypted with the cookie salt.\n * - logs the user out if id_member is zero.\n * - sets the cookie and session to last the number of seconds specified by cookie_length.\n * - when logging out, if the globalCookies setting is enabled, attempts to clear the subdomain's cookie too.\n *\n * @param int $cookie_length How long the cookie should last (in minutes)\n * @param int $id The ID of the member to set the cookie for\n * @param string $password The hashed password\n */\nfunction setLoginCookie($cookie_length, $id, $password = '')\n{\n\tglobal $cookiename, $boardurl, $modSettings, $sourcedir;\n\n\t$id = (int) $id;\n\n\t// If changing state force them to re-address some permission caching.\n\t$_SESSION['mc']['time'] = 0;\n\n\t// The cookie may already exist, and have been set with different options.\n\t$cookie_state = (empty($modSettings['localCookies']) ? 0 : 1) | (empty($modSettings['globalCookies']) ? 0 : 2);\n\tif (isset($_COOKIE[$cookiename]) && preg_match('~^a:[34]:\\{i:0;i:\\d{1,7};i:1;s:(0|128):\"([a-fA-F0-9]{128})?\";i:2;[id]:\\d{1,14};(i:3;i:\\d;)?\\}$~', $_COOKIE[$cookiename]) === 1)\n\t{\n\t\t$array = smf_json_decode($_COOKIE[$cookiename], true);\n\n\t\t// Legacy format\n\t\tif (is_null($array))\n\t\t\t$array = safe_unserialize($_COOKIE[$cookiename]);\n\n\t\t// Out with the old, in with the new!\n\t\tif (isset($array[3]) && $array[3] != $cookie_state)\n\t\t{\n\t\t\t$cookie_url = url_parts($array[3] & 1 > 0, $array[3] & 2 > 0);\n\t\t\tsmf_setcookie($cookiename, json_encode(array(0, '', 0)), time() - 3600, $cookie_url[1], $cookie_url[0]);\n\t\t}\n\t}\n\n\t// Get the data and path to set it on.\n\t$data = json_encode(empty($id) ? array(0, '', 0) : array($id, $password, time() + $cookie_length, $cookie_state));\n\t$cookie_url = url_parts(!empty($modSettings['localCookies']), !empty($modSettings['globalCookies']));\n\n\t// Set the cookie, $_COOKIE, and session variable.\n\tsmf_setcookie($cookiename, $data, time() + $cookie_length, $cookie_url[1], $cookie_url[0]);\n\n\t// If subdomain-independent cookies are on, unset the subdomain-dependent cookie too.\n\tif (empty($id) && !empty($modSettings['globalCookies']))\n\t\tsmf_setcookie($cookiename, $data, time() + $cookie_length, $cookie_url[1], '');\n\n\t// Any alias URLs?  This is mainly for use with frames, etc.\n\tif (!empty($modSettings['forum_alias_urls']))\n\t{\n\t\t$aliases = explode(',', $modSettings['forum_alias_urls']);\n\n\t\t$temp = $boardurl;\n\t\tforeach ($aliases as $alias)\n\t\t{\n\t\t\t// Fake the $boardurl so we can set a different cookie.\n\t\t\t$alias = strtr(trim($alias), array('http://' => '', 'https://' => ''));\n\t\t\t$boardurl = 'http://' . $alias;\n\n\t\t\t$cookie_url = url_parts(!empty($modSettings['localCookies']), !empty($modSettings['globalCookies']));\n\n\t\t\tif ($cookie_url[0] == '')\n\t\t\t\t$cookie_url[0] = strtok($alias, '/');\n\n\t\t\tsmf_setcookie($cookiename, $data, time() + $cookie_length, $cookie_url[1], $cookie_url[0]);\n\t\t}\n\n\t\t$boardurl = $temp;\n\t}\n\n\t$_COOKIE[$cookiename] = $data;\n\n\t// Make sure the user logs in with a new session ID.\n\tif (!isset($_SESSION['login_' . $cookiename]) || $_SESSION['login_' . $cookiename] !== $data)\n\t{\n\t\t// We need to meddle with the session.\n\t\trequire_once($sourcedir . '/Session.php');\n\n\t\t// Backup and remove the old session.\n\t\t$oldSessionData = $_SESSION;\n\t\t$_SESSION = array();\n\t\tsession_destroy();\n\n\t\t// Recreate and restore the new session.\n\t\tloadSession();\n\t\t// @todo should we use session_regenerate_id(true); now that we are 5.1+\n\t\tsession_regenerate_id();\n\t\t$_SESSION = $oldSessionData;\n\n\t\t$_SESSION['login_' . $cookiename] = $data;\n\t}\n}\n\n/**\n * Sets Two Factor Auth cookie\n *\n * @param int $cookie_length How long the cookie should last, in minutes\n * @param int $id The ID of the member\n * @param string $secret Should be a salted secret using hash_salt\n * @param bool $preserve Whether to preserve the cookie for 30 days\n */\nfunction setTFACookie($cookie_length, $id, $secret, $preserve = false)\n{\n\tglobal $modSettings, $cookiename, $boardurl;\n\n\t$identifier = $cookiename . '_tfa';\n\t$cookie_state = (empty($modSettings['localCookies']) ? 0 : 1) | (empty($modSettings['globalCookies']) ? 0 : 2);\n\n\tif ($preserve)\n\t\t$cookie_length = 81600 * 30;\n\n\t// Get the data and path to set it on.\n\t$data = json_encode(empty($id) ? array(0, '', 0, $cookie_state, false) : array($id, $secret, time() + $cookie_length, $cookie_state, $preserve));\n\t$cookie_url = url_parts(!empty($modSettings['localCookies']), !empty($modSettings['globalCookies']));\n\n\t// Set the cookie, $_COOKIE, and session variable.\n\tsmf_setcookie($identifier, $data, time() + $cookie_length, $cookie_url[1], $cookie_url[0]);\n\n\t// If subdomain-independent cookies are on, unset the subdomain-dependent cookie too.\n\tif (empty($id) && !empty($modSettings['globalCookies']))\n\t\tsmf_setcookie($identifier, $data, time() + $cookie_length, $cookie_url[1], '');\n\n\t$_COOKIE[$identifier] = $data;\n}\n\n/**\n * Get the domain and path for the cookie\n * - normally, local and global should be the localCookies and globalCookies settings, respectively.\n * - uses boardurl to determine these two things.\n *\n * @param bool $local Whether we want local cookies\n * @param bool $global Whether we want global cookies\n * @return array An array to set the cookie on with domain and path in it, in that order\n */\nfunction url_parts($local, $global)\n{\n\tglobal $boardurl, $modSettings;\n\n\t// Parse the URL with PHP to make life easier.\n\t$parsed_url = parse_url($boardurl);\n\n\t// Is local cookies off?\n\tif (empty($parsed_url['path']) || !$local)\n\t\t$parsed_url['path'] = '';\n\n\tif (!empty($modSettings['globalCookiesDomain']) && strpos($boardurl, $modSettings['globalCookiesDomain']) !== false)\n\t\t$parsed_url['host'] = $modSettings['globalCookiesDomain'];\n\n\t// Globalize cookies across domains (filter out IP-addresses)?\n\telseif ($global && preg_match('~^\\d{1,3}(\\.\\d{1,3}){3}$~', $parsed_url['host']) == 0 && preg_match('~(?:[^\\.]+\\.)?([^\\.]{2,}\\..+)\\z~i', $parsed_url['host'], $parts) == 1)\n\t\t$parsed_url['host'] = '.' . $parts[1];\n\n\t// We shouldn't use a host at all if both options are off.\n\telseif (!$local && !$global)\n\t\t$parsed_url['host'] = '';\n\n\t// The host also shouldn't be set if there aren't any dots in it.\n\telseif (!isset($parsed_url['host']) || strpos($parsed_url['host'], '.') === false)\n\t\t$parsed_url['host'] = '';\n\n\treturn array($parsed_url['host'], $parsed_url['path'] . '/');\n}\n\n/**\n * Throws guests out to the login screen when guest access is off.\n * - sets $_SESSION['login_url'] to $_SERVER['REQUEST_URL'].\n * - uses the 'kick_guest' sub template found in Login.template.php.\n */\nfunction KickGuest()\n{\n\tglobal $txt, $context;\n\n\tloadLanguage('Login');\n\tloadTemplate('Login');\n\tcreateToken('login');\n\n\t// Never redirect to an attachment\n\tif (strpos($_SERVER['REQUEST_URL'], 'dlattach') === false)\n\t\t$_SESSION['login_url'] = $_SERVER['REQUEST_URL'];\n\n\t$context['sub_template'] = 'kick_guest';\n\t$context['page_title'] = $txt['login'];\n}\n\n/**\n * Display a message about the forum being in maintenance mode.\n * - display a login screen with sub template 'maintenance'.\n * - sends a 503 header, so search engines don't bother indexing while we're in maintenance mode.\n */\nfunction InMaintenance()\n{\n\tglobal $txt, $mtitle, $mmessage, $context, $smcFunc;\n\n\tloadLanguage('Login');\n\tloadTemplate('Login');\n\tcreateToken('login');\n\n\t// Send a 503 header, so search engines don't bother indexing while we're in maintenance mode.\n\theader('HTTP/1.1 503 Service Temporarily Unavailable');\n\n\t// Basic template stuff..\n\t$context['sub_template'] = 'maintenance';\n\t$context['title'] = $smcFunc['htmlspecialchars']($mtitle);\n\t$context['description'] = &$mmessage;\n\t$context['page_title'] = $txt['maintain_mode'];\n}\n\n/**\n * Question the verity of the admin by asking for his or her password.\n * - loads Login.template.php and uses the admin_login sub template.\n * - sends data to template so the admin is sent on to the page they\n *   wanted if their password is correct, otherwise they can try again.\n *\n * @param string $type What login type is this - can be 'admin' or 'moderate'\n */\nfunction adminLogin($type = 'admin')\n{\n\tglobal $context, $txt, $user_settings, $user_info;\n\n\tloadLanguage('Admin');\n\tloadTemplate('Login');\n\n\t// Validate what type of session check this is.\n\t$types = array();\n\tcall_integration_hook('integrate_validateSession', array(&$types));\n\t$type = in_array($type, $types) || $type == 'moderate' ? $type : 'admin';\n\n\t// They used a wrong password, log it and unset that.\n\tif (isset($_POST[$type . '_hash_pass']) || isset($_POST[$type . '_pass']))\n\t{\n\t\t$txt['security_wrong'] = sprintf($txt['security_wrong'], isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : $txt['unknown'], $_SERVER['HTTP_USER_AGENT'], $user_info['ip']);\n\t\tlog_error($txt['security_wrong'], 'critical');\n\n\t\tif (isset($_POST[$type . '_hash_pass']))\n\t\t\tunset($_POST[$type . '_hash_pass']);\n\t\tif (isset($_POST[$type . '_pass']))\n\t\t\tunset($_POST[$type . '_pass']);\n\n\t\t$context['incorrect_password'] = true;\n\t}\n\n\tcreateToken('admin-login');\n\n\t// Figure out the get data and post data.\n\t$context['get_data'] = '?' . construct_query_string($_GET);\n\t$context['post_data'] = '';\n\n\t// Now go through $_POST.  Make sure the session hash is sent.\n\t$_POST[$context['session_var']] = $context['session_id'];\n\tforeach ($_POST as $k => $v)\n\t\t$context['post_data'] .= adminLogin_outputPostVars($k, $v);\n\n\t// Now we'll use the admin_login sub template of the Login template.\n\t$context['sub_template'] = 'admin_login';\n\n\t// And title the page something like \"Login\".\n\tif (!isset($context['page_title']))\n\t\t$context['page_title'] = $txt['login'];\n\n\t// The type of action.\n\t$context['sessionCheckType'] = $type;\n\n\tobExit();\n\n\t// We MUST exit at this point, because otherwise we CANNOT KNOW that the user is privileged.\n\ttrigger_error('Hacking attempt...', E_USER_ERROR);\n}\n\n/**\n * Used by the adminLogin() function.\n * if 'value' is an array, the function is called recursively.\n *\n * @param string $k The keys\n * @param string $v The values\n * @return string 'hidden' HTML form fields, containing key-value-pairs\n */\nfunction adminLogin_outputPostVars($k, $v)\n{\n\tglobal $smcFunc;\n\n\tif (!is_array($v))\n\t\treturn '\n<input type=\"hidden\" name=\"' . $smcFunc['htmlspecialchars']($k) . '\" value=\"' . strtr($v, array('\"' => '&quot;', '<' => '&lt;', '>' => '&gt;')) . '\">';\n\telse\n\t{\n\t\t$ret = '';\n\t\tforeach ($v as $k2 => $v2)\n\t\t\t$ret .= adminLogin_outputPostVars($k . '[' . $k2 . ']', $v2);\n\n\t\treturn $ret;\n\t}\n}\n\n/**\n * Properly urlencodes a string to be used in a query\n *\n * @param string $get\n * @return string Our query string\n */\nfunction construct_query_string($get)\n{\n\tglobal $scripturl;\n\n\t$query_string = '';\n\n\t// Awww, darn.  The $scripturl contains GET stuff!\n\t$q = strpos($scripturl, '?');\n\tif ($q !== false)\n\t{\n\t\tparse_str(preg_replace('/&(\\w+)(?=&|$)/', '&$1=', strtr(substr($scripturl, $q + 1), ';', '&')), $temp);\n\n\t\tforeach ($get as $k => $v)\n\t\t{\n\t\t\t// Only if it's not already in the $scripturl!\n\t\t\tif (!isset($temp[$k]))\n\t\t\t\t$query_string .= urlencode($k) . '=' . urlencode($v) . ';';\n\t\t\t// If it changed, put it out there, but with an ampersand.\n\t\t\telseif ($temp[$k] != $get[$k])\n\t\t\t\t$query_string .= urlencode($k) . '=' . urlencode($v) . '&amp;';\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Add up all the data from $_GET into get_data.\n\t\tforeach ($get as $k => $v)\n\t\t\t$query_string .= urlencode($k) . '=' . urlencode($v) . ';';\n\t}\n\n\t$query_string = substr($query_string, 0, -1);\n\treturn $query_string;\n}\n\n/**\n * Finds members by email address, username, or real name.\n * - searches for members whose username, display name, or e-mail address match the given pattern of array names.\n * - searches only buddies if buddies_only is set.\n *\n * @param array $names The names of members to search for\n * @param bool $use_wildcards Whether to use wildcards. Accepts wildcards ? and * in the pattern if true\n * @param bool $buddies_only Whether to only search for the user's buddies\n * @param int $max The maximum number of results\n * @return array An array containing information about the matching members\n */\nfunction findMembers($names, $use_wildcards = false, $buddies_only = false, $max = 500)\n{\n\tglobal $scripturl, $user_info, $smcFunc;\n\n\t// If it's not already an array, make it one.\n\tif (!is_array($names))\n\t\t$names = explode(',', $names);\n\n\t$maybe_email = false;\n\tforeach ($names as $i => $name)\n\t{\n\t\t// Trim, and fix wildcards for each name.\n\t\t$names[$i] = trim($smcFunc['strtolower']($name));\n\n\t\t$maybe_email |= strpos($name, '@') !== false;\n\n\t\t// Make it so standard wildcards will work. (* and ?)\n\t\tif ($use_wildcards)\n\t\t\t$names[$i] = strtr($names[$i], array('%' => '\\%', '_' => '\\_', '*' => '%', '?' => '_', '\\'' => '&#039;'));\n\t\telse\n\t\t\t$names[$i] = strtr($names[$i], array('\\'' => '&#039;'));\n\t}\n\n\t// What are we using to compare?\n\t$comparison = $use_wildcards ? 'LIKE' : '=';\n\n\t// Nothing found yet.\n\t$results = array();\n\n\t// This ensures you can't search someones email address if you can't see it.\n\tif (($use_wildcards || $maybe_email) && allowedTo('moderate_forum'))\n\t\t$email_condition = '\n\t\t\tOR (email_address ' . $comparison . ' \\'' . implode( '\\') OR (email_address ' . $comparison . ' \\'', $names) . '\\')';\n\telse\n\t\t$email_condition = '';\n\n\t// Get the case of the columns right - but only if we need to as things like MySQL will go slow needlessly otherwise.\n\t$member_name = $smcFunc['db_case_sensitive'] ? 'LOWER(member_name)' : 'member_name';\n\t$real_name = $smcFunc['db_case_sensitive'] ? 'LOWER(real_name)' : 'real_name';\n\n\t// Search by username, display name, and email address.\n\t$request = $smcFunc['db_query']('', '\n\t\tSELECT id_member, member_name, real_name, email_address\n\t\tFROM {db_prefix}members\n\t\tWHERE ({raw:member_name_search}\n\t\t\tOR {raw:real_name_search} {raw:email_condition})\n\t\t\t' . ($buddies_only ? 'AND id_member IN ({array_int:buddy_list})' : '') . '\n\t\t\tAND is_activated IN (1, 11)\n\t\tLIMIT {int:limit}',\n\t\tarray(\n\t\t\t'buddy_list' => $user_info['buddies'],\n\t\t\t'member_name_search' => $member_name . ' ' . $comparison . ' \\'' . implode( '\\' OR ' . $member_name . ' ' . $comparison . ' \\'', $names) . '\\'',\n\t\t\t'real_name_search' => $real_name . ' ' . $comparison . ' \\'' . implode( '\\' OR ' . $real_name . ' ' . $comparison . ' \\'', $names) . '\\'',\n\t\t\t'email_condition' => $email_condition,\n\t\t\t'limit' => $max,\n\t\t)\n\t);\n\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t{\n\t\t$results[$row['id_member']] = array(\n\t\t\t'id' => $row['id_member'],\n\t\t\t'name' => $row['real_name'],\n\t\t\t'username' => $row['member_name'],\n\t\t\t'email' => allowedTo('moderate_forum') ? $row['email_address'] : '',\n\t\t\t'href' => $scripturl . '?action=profile;u=' . $row['id_member'],\n\t\t\t'link' => '<a href=\"' . $scripturl . '?action=profile;u=' . $row['id_member'] . '\">' . $row['real_name'] . '</a>'\n\t\t);\n\t}\n\t$smcFunc['db_free_result']($request);\n\n\t// Return all the results.\n\treturn $results;\n}\n\n/**\n * Called by index.php?action=findmember.\n * - is used as a popup for searching members.\n * - uses sub template find_members of the Help template.\n * - also used to add members for PM's sent using wap2/imode protocol.\n */\nfunction JSMembers()\n{\n\tglobal $context, $scripturl, $user_info, $smcFunc;\n\n\tcheckSession('get');\n\n\t// Why is this in the Help template, you ask?  Well, erm... it helps you.  Does that work?\n\tloadTemplate('Help');\n\n\t$context['template_layers'] = array();\n\t$context['sub_template'] = 'find_members';\n\n\tif (isset($_REQUEST['search']))\n\t\t$context['last_search'] = $smcFunc['htmlspecialchars']($_REQUEST['search'], ENT_QUOTES);\n\telse\n\t\t$_REQUEST['start'] = 0;\n\n\t// Allow the user to pass the input to be added to to the box.\n\t$context['input_box_name'] = isset($_REQUEST['input']) && preg_match('~^[\\w-]+$~', $_REQUEST['input']) === 1 ? $_REQUEST['input'] : 'to';\n\n\t// Take the delimiter over GET in case it's \\n or something.\n\t$context['delimiter'] = isset($_REQUEST['delim']) ? ($_REQUEST['delim'] == 'LB' ? \"\\n\" : $_REQUEST['delim']) : ', ';\n\t$context['quote_results'] = !empty($_REQUEST['quote']);\n\n\t// List all the results.\n\t$context['results'] = array();\n\n\t// Some buddy related settings ;)\n\t$context['show_buddies'] = !empty($user_info['buddies']);\n\t$context['buddy_search'] = isset($_REQUEST['buddies']);\n\n\t// If the user has done a search, well - search.\n\tif (isset($_REQUEST['search']))\n\t{\n\t\t$_REQUEST['search'] = $smcFunc['htmlspecialchars']($_REQUEST['search'], ENT_QUOTES);\n\n\t\t$context['results'] = findMembers(array($_REQUEST['search']), true, $context['buddy_search']);\n\t\t$total_results = count($context['results']);\n\n\t\t$context['page_index'] = constructPageIndex($scripturl . '?action=findmember;search=' . $context['last_search'] . ';' . $context['session_var'] . '=' . $context['session_id'] . ';input=' . $context['input_box_name'] . ($context['quote_results'] ? ';quote=1' : '') . ($context['buddy_search'] ? ';buddies' : ''), $_REQUEST['start'], $total_results, 7);\n\n\t\t// Determine the navigation context.\n\t\t$base_url = $scripturl . '?action=findmember;search=' . urlencode($context['last_search']) . (empty($_REQUEST['u']) ? '' : ';u=' . $_REQUEST['u']) . ';' . $context['session_var'] . '=' . $context['session_id'];\n\t\t$context['links'] = array(\n\t\t\t'first' => $_REQUEST['start'] >= 7 ? $base_url . ';start=0' : '',\n\t\t\t'prev' => $_REQUEST['start'] >= 7 ? $base_url . ';start=' . ($_REQUEST['start'] - 7) : '',\n\t\t\t'next' => $_REQUEST['start'] + 7 < $total_results ? $base_url . ';start=' . ($_REQUEST['start'] + 7) : '',\n\t\t\t'last' => $_REQUEST['start'] + 7 < $total_results ? $base_url . ';start=' . (floor(($total_results - 1) / 7) * 7) : '',\n\t\t\t'up' => $scripturl . '?action=pm;sa=send' . (empty($_REQUEST['u']) ? '' : ';u=' . $_REQUEST['u']),\n\t\t);\n\t\t$context['page_info'] = array(\n\t\t\t'current_page' => $_REQUEST['start'] / 7 + 1,\n\t\t\t'num_pages' => floor(($total_results - 1) / 7) + 1\n\t\t);\n\n\t\t$context['results'] = array_slice($context['results'], $_REQUEST['start'], 7);\n\t}\n\telse\n\t\t$context['links']['up'] = $scripturl . '?action=pm;sa=send' . (empty($_REQUEST['u']) ? '' : ';u=' . $_REQUEST['u']);\n}\n\n/**\n * Outputs each member name on its own line.\n * - used by javascript to find members matching the request.\n */\nfunction RequestMembers()\n{\n\tglobal $user_info, $txt, $smcFunc;\n\n\tcheckSession('get');\n\n\t$_REQUEST['search'] = $smcFunc['htmlspecialchars']($_REQUEST['search']) . '*';\n\t$_REQUEST['search'] = trim($smcFunc['strtolower']($_REQUEST['search']));\n\t$_REQUEST['search'] = strtr($_REQUEST['search'], array('%' => '\\%', '_' => '\\_', '*' => '%', '?' => '_', '&#038;' => '&amp;'));\n\n\tif (function_exists('iconv'))\n\t\theader('Content-Type: text/plain; charset=UTF-8');\n\n\t$request = $smcFunc['db_query']('', '\n\t\tSELECT real_name\n\t\tFROM {db_prefix}members\n\t\tWHERE {raw:real_name} LIKE {string:search}' . (isset($_REQUEST['buddies']) ? '\n\t\t\tAND id_member IN ({array_int:buddy_list})' : '') . '\n\t\t\tAND is_activated IN (1, 11)\n\t\tLIMIT ' . ($smcFunc['strlen']($_REQUEST['search']) <= 2 ? '100' : '800'),\n\t\tarray(\n\t\t\t'real_name' => $smcFunc['db_case_sensitive'] ? 'LOWER(real_name)' : 'real_name',\n\t\t\t'buddy_list' => $user_info['buddies'],\n\t\t\t'search' => $_REQUEST['search'],\n\t\t)\n\t);\n\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t{\n\t\tif (function_exists('iconv'))\n\t\t{\n\t\t\t$utf8 = iconv($txt['lang_character_set'], 'UTF-8', $row['real_name']);\n\t\t\tif ($utf8)\n\t\t\t\t$row['real_name'] = $utf8;\n\t\t}\n\n\t\t$row['real_name'] = strtr($row['real_name'], array('&amp;' => '&#038;', '&lt;' => '&#060;', '&gt;' => '&#062;', '&quot;' => '&#034;'));\n\n\t\tif (preg_match('~&#\\d+;~', $row['real_name']) != 0)\n\t\t\t$row['real_name'] = preg_replace_callback('~&#(\\d+);~', 'fixchar__callback', $row['real_name']);\n\n\t\techo $row['real_name'], \"\\n\";\n\t}\n\t$smcFunc['db_free_result']($request);\n\n\tobExit(false);\n}\n\n/**\n * Generates a random password for a user and emails it to them.\n * - called by Profile.php when changing someone's username.\n * - checks the validity of the new username.\n * - generates and sets a new password for the given user.\n * - mails the new password to the email address of the user.\n * - if username is not set, only a new password is generated and sent.\n *\n * @param int $memID The ID of the member\n * @param string $username The new username. If set, also checks the validity of the username\n */\nfunction resetPassword($memID, $username = null)\n{\n\tglobal $sourcedir, $modSettings, $smcFunc, $language;\n\n\t// Language... and a required file.\n\tloadLanguage('Login');\n\trequire_once($sourcedir . '/Subs-Post.php');\n\n\t// Get some important details.\n\t$request = $smcFunc['db_query']('', '\n\t\tSELECT member_name, email_address, lngfile\n\t\tFROM {db_prefix}members\n\t\tWHERE id_member = {int:id_member}',\n\t\tarray(\n\t\t\t'id_member' => $memID,\n\t\t)\n\t);\n\tlist ($user, $email, $lngfile) = $smcFunc['db_fetch_row']($request);\n\t$smcFunc['db_free_result']($request);\n\n\tif ($username !== null)\n\t{\n\t\t$old_user = $user;\n\t\t$user = trim($username);\n\t}\n\n\t// Generate a random password.\n\t$newPassword = substr(preg_replace('/\\W/', '', md5(mt_rand())), 0, 10);\n\t$newPassword_sha1 = hash_password($user, $newPassword);\n\n\t// Do some checks on the username if needed.\n\tif ($username !== null)\n\t{\n\t\tvalidateUsername($memID, $user);\n\n\t\t// Update the database...\n\t\tupdateMemberData($memID, array('member_name' => $user, 'passwd' => $newPassword_sha1));\n\t}\n\telse\n\t\tupdateMemberData($memID, array('passwd' => $newPassword_sha1));\n\n\tcall_integration_hook('integrate_reset_pass', array($old_user, $user, $newPassword));\n\n\t$replacements = array(\n\t\t'USERNAME' => $user,\n\t\t'PASSWORD' => $newPassword,\n\t);\n\n\t$emaildata = loadEmailTemplate('change_password', $replacements, empty($lngfile) || empty($modSettings['userLanguage']) ? $language : $lngfile);\n\n\t// Send them the email informing them of the change - then we're done!\n\tsendmail($email, $emaildata['subject'], $emaildata['body'], null, 'chgpass' . $memID, $emaildata['is_html'], 0);\n}\n\n/**\n * Checks a username obeys a load of rules\n *\n * @param int $memID The ID of the member\n * @param string $username The username to validate\n * @param boolean $return_error Whether to return errors\n * @param boolean $check_reserved_name Whether to check this against the list of reserved names\n * @return array|null Null if there are no errors, otherwise an array of errors if return_error is true\n */\nfunction validateUsername($memID, $username, $return_error = false, $check_reserved_name = true)\n{\n\tglobal $sourcedir, $txt, $smcFunc, $user_info;\n\n\t$errors = array();\n\n\t// Don't use too long a name.\n\tif ($smcFunc['strlen']($username) > 25)\n\t\t$errors[] = array('lang', 'error_long_name');\n\n\t// No name?!  How can you register with no name?\n\tif ($username == '')\n\t\t$errors[] = array('lang', 'need_username');\n\n\t// Only these characters are permitted.\n\tif (in_array($username, array('_', '|')) || preg_match('~[<>&\"\\'=\\\\\\\\]~', preg_replace('~&#(?:\\\\d{1,7}|x[0-9a-fA-F]{1,6});~', '', $username)) != 0 || strpos($username, '[code') !== false || strpos($username, '[/code') !== false)\n\t\t$errors[] = array('lang', 'error_invalid_characters_username');\n\n\tif (stristr($username, $txt['guest_title']) !== false)\n\t\t$errors[] = array('lang', 'username_reserved', 'general', array($txt['guest_title']));\n\n\tif ($check_reserved_name)\n\t{\n\t\trequire_once($sourcedir . '/Subs-Members.php');\n\t\tif (isReservedName($username, $memID, false))\n\t\t\t$errors[] = array('done', '(' . $smcFunc['htmlspecialchars']($username) . ') ' . $txt['name_in_use']);\n\t}\n\n\tif ($return_error)\n\t\treturn $errors;\n\telseif (empty($errors))\n\t\treturn null;\n\n\tloadLanguage('Errors');\n\t$error = $errors[0];\n\n\t$message = $error[0] == 'lang' ? (empty($error[3]) ? $txt[$error[1]] : vsprintf($txt[$error[1]], $error[3])) : $error[1];\n\tfatal_error($message, empty($error[2]) || $user_info['is_admin'] ? false : $error[2]);\n}\n\n/**\n * Checks whether a password meets the current forum rules\n * - called when registering/choosing a password.\n * - checks the password obeys the current forum settings for password strength.\n * - if password checking is enabled, will check that none of the words in restrict_in appear in the password.\n * - returns an error identifier if the password is invalid, or null.\n *\n * @param string $password The desired password\n * @param string $username The username\n * @param array $restrict_in An array of restricted strings that cannot be part of the password (email address, username, etc.)\n * @return null|string Null if valid or a string indicating what the problem was\n */\nfunction validatePassword($password, $username, $restrict_in = array())\n{\n\tglobal $modSettings, $smcFunc;\n\n\t// Perform basic requirements first.\n\tif ($smcFunc['strlen']($password) < (empty($modSettings['password_strength']) ? 4 : 8))\n\t\treturn 'short';\n\n\t// Is this enough?\n\tif (empty($modSettings['password_strength']))\n\t\treturn null;\n\n\t// Otherwise, perform the medium strength test - checking if password appears in the restricted string.\n\tif (preg_match('~\\b' . preg_quote($password, '~') . '\\b~', implode(' ', $restrict_in)) != 0)\n\t\treturn 'restricted_words';\n\telseif ($smcFunc['strpos']($password, $username) !== false)\n\t\treturn 'restricted_words';\n\n\t// If just medium, we're done.\n\tif ($modSettings['password_strength'] == 1)\n\t\treturn null;\n\n\t// Otherwise, hard test next, check for numbers and letters, uppercase too.\n\t$good = preg_match('~(\\D\\d|\\d\\D)~', $password) != 0;\n\t$good &= $smcFunc['strtolower']($password) != $password;\n\n\treturn $good ? null : 'chars';\n}\n\n/**\n * Quickly find out what moderation authority this user has\n * - builds the moderator, group and board level querys for the user\n * - stores the information on the current users moderation powers in $user_info['mod_cache'] and $_SESSION['mc']\n */\nfunction rebuildModCache()\n{\n\tglobal $user_info, $smcFunc;\n\n\t// What groups can they moderate?\n\t$group_query = allowedTo('manage_membergroups') ? '1=1' : '0=1';\n\n\tif ($group_query == '0=1' && !$user_info['is_guest'])\n\t{\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT id_group\n\t\t\tFROM {db_prefix}group_moderators\n\t\t\tWHERE id_member = {int:current_member}',\n\t\t\tarray(\n\t\t\t\t'current_member' => $user_info['id'],\n\t\t\t)\n\t\t);\n\t\t$groups = array();\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t\t$groups[] = $row['id_group'];\n\t\t$smcFunc['db_free_result']($request);\n\n\t\tif (empty($groups))\n\t\t\t$group_query = '0=1';\n\t\telse\n\t\t\t$group_query = 'id_group IN (' . implode(',', $groups) . ')';\n\t}\n\n\t// Then, same again, just the boards this time!\n\t$board_query = allowedTo('moderate_forum') ? '1=1' : '0=1';\n\n\tif ($board_query == '0=1' && !$user_info['is_guest'])\n\t{\n\t\t$boards = boardsAllowedTo('moderate_board', true);\n\n\t\tif (empty($boards))\n\t\t\t$board_query = '0=1';\n\t\telse\n\t\t\t$board_query = 'id_board IN (' . implode(',', $boards) . ')';\n\t}\n\n\t// What boards are they the moderator of?\n\t$boards_mod = array();\n\tif (!$user_info['is_guest'])\n\t{\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT id_board\n\t\t\tFROM {db_prefix}moderators\n\t\t\tWHERE id_member = {int:current_member}',\n\t\t\tarray(\n\t\t\t\t'current_member' => $user_info['id'],\n\t\t\t)\n\t\t);\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t\t$boards_mod[] = $row['id_board'];\n\t\t$smcFunc['db_free_result']($request);\n\n\t\t// Can any of the groups they're in moderate any of the boards?\n\t\t$request = $smcFunc['db_query']('', '\n\t\t\tSELECT id_board\n\t\t\tFROM {db_prefix}moderator_groups\n\t\t\tWHERE id_group IN({array_int:groups})',\n\t\t\tarray(\n\t\t\t\t'groups' => $user_info['groups'],\n\t\t\t)\n\t\t);\n\t\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t\t\t$boards_mod[] = $row['id_board'];\n\t\t$smcFunc['db_free_result']($request);\n\n\t\t// Just in case we've got duplicates here...\n\t\t$boards_mod = array_unique($boards_mod);\n\t}\n\n\t$mod_query = empty($boards_mod) ? '0=1' : 'b.id_board IN (' . implode(',', $boards_mod) . ')';\n\n\t$_SESSION['mc'] = array(\n\t\t'time' => time(),\n\t\t// This looks a bit funny but protects against the login redirect.\n\t\t'id' => $user_info['id'] && $user_info['name'] ? $user_info['id'] : 0,\n\t\t// If you change the format of 'gq' and/or 'bq' make sure to adjust 'can_mod' in Load.php.\n\t\t'gq' => $group_query,\n\t\t'bq' => $board_query,\n\t\t'ap' => boardsAllowedTo('approve_posts'),\n\t\t'mb' => $boards_mod,\n\t\t'mq' => $mod_query,\n\t);\n\tcall_integration_hook('integrate_mod_cache');\n\n\t$user_info['mod_cache'] = $_SESSION['mc'];\n\n\t// Might as well clean up some tokens while we are at it.\n\tcleanTokens();\n}\n\n/**\n * The same thing as setcookie but gives support for HTTP-Only cookies in PHP < 5.2\n * @todo We can remove this since SMF requires PHP >= 5.3.8 now\n *\n * @param string $name\n * @param string $value = ''\n * @param int $expire = 0\n * @param string $path = ''\n * @param string $domain = ''\n * @param bool $secure = false\n * @param bool $httponly = true\n */\nfunction smf_setcookie($name, $value = '', $expire = 0, $path = '', $domain = '', $secure = null, $httponly = true)\n{\n\tglobal $modSettings;\n\n\t// In case a customization wants to override the default settings\n\tif ($httponly === null)\n\t\t$httponly = !empty($modSettings['httponlyCookies']);\n\tif ($secure === null)\n\t\t$secure = !empty($modSettings['secureCookies']);\n\n\t// Intercept cookie?\n\tcall_integration_hook('integrate_cookie', array($name, $value, $expire, $path, $domain, $secure, $httponly));\n\n\t// This function is pointless if we have PHP >= 5.2.\n\treturn setcookie($name, $value, $expire, $path, $domain, $secure, $httponly);\n}\n\n/**\n * Hashes username with password\n *\n * @param string $username The username\n * @param string $password The unhashed password\n * @param int $cost The cost\n * @return string The hashed password\n */\nfunction hash_password($username, $password, $cost = null)\n{\n\tglobal $sourcedir, $smcFunc, $modSettings;\n\tif (!function_exists('password_hash'))\n\t\trequire_once($sourcedir . '/Subs-Password.php');\n\n\t$cost = empty($cost) ? (empty($modSettings['bcrypt_hash_cost']) ? 10 : $modSettings['bcrypt_hash_cost']) : $cost;\n\n\treturn password_hash($smcFunc['strtolower']($username) . $password, PASSWORD_BCRYPT, array(\n\t\t'cost' => $cost,\n\t));\n}\n\n/**\n * Hashes password with salt, this is solely used for cookies.\n *\n * @param string $password The password\n * @param string $salt The salt\n * @return string The hashed password\n */\nfunction hash_salt($password, $salt)\n{\n\treturn hash('sha512', $password . $salt);\n}\n\n/**\n * Verifies a raw SMF password against the bcrypt'd string\n *\n * @param string $username The username\n * @param string $password The password\n * @param string $hash The hashed string\n * @return bool Whether the hashed password matches the string\n */\nfunction hash_verify_password($username, $password, $hash)\n{\n\tglobal $sourcedir, $smcFunc;\n\tif (!function_exists('password_verify'))\n\t\trequire_once($sourcedir . '/Subs-Password.php');\n\n\treturn password_verify($smcFunc['strtolower']($username) . $password, $hash);\n}\n\n/**\n * Returns the length for current hash\n *\n * @return int The length for the current hash\n */\nfunction hash_length()\n{\n\treturn 60;\n}\n\n/**\n * Benchmarks the server to figure out an appropriate cost factor (minimum 9)\n *\n * @param float $hashTime Time to target, in seconds\n * @return int The cost\n */\nfunction hash_benchmark($hashTime = 0.2)\n{\n\t$cost = 9;\n\tdo {\n\t\t$timeStart = microtime(true);\n\t\thash_password('test', 'thisisatestpassword', $cost);\n\t\t$timeTaken = microtime(true) - $timeStart;\n\t\t$cost++;\n\t} while ($timeTaken < $hashTime);\n\n\treturn $cost;\n}\n\n?>", "<?php\n\n/**\n * Simple Machines Forum (SMF)\n *\n * @package SMF\n * @author Simple Machines http://www.simplemachines.org\n * @copyright 2016 Simple Machines and individual contributors\n * @license http://www.simplemachines.org/about/smf/license.php BSD\n *\n * @version 2.1 Beta 3\n */\n\nif (!defined('SMF'))\n\tdie('No direct access...');\n\n/**\n * Converts the given UTF-8 string into lowercase.\n * equivalent to mb_strtolower($string, 'UTF-8')\n *\n * @param string $string The string\n * @return string The lowercase version of $string\n */\nfunction utf8_strtolower($string)\n{\n\tstatic $case_folding = array(\n\t\t'A' => 'a',\t\t'B' => 'b',\t\t'C' => 'c',\t\t'D' => 'd',\n\t\t'E' => 'e',\t\t'F' => 'f',\t\t'G' => 'g',\t\t'H' => 'h',\n\t\t'I' => 'i',\t\t'J' => 'j',\t\t'K' => 'k',\t\t'L' => 'l',\n\t\t'M' => 'm',\t\t'N' => 'n',\t\t'O' => 'o',\t\t'P' => 'p',\n\t\t'Q' => 'q',\t\t'R' => 'r',\t\t'S' => 's',\t\t'T' => 't',\n\t\t'U' => 'u',\t\t'V' => 'v',\t\t'W' => 'w',\t\t'X' => 'x',\n\t\t'Y' => 'y',\t\t'Z' => 'z',\t\t\"\\xc2\\xb5\" => \"\\xce\\xbc\",\t\t\"\\xc3\\x80\" => \"\\xc3\\xa0\",\n\t\t\"\\xc3\\x81\" => \"\\xc3\\xa1\",\t\t\"\\xc3\\x82\" => \"\\xc3\\xa2\",\t\t\"\\xc3\\x83\" => \"\\xc3\\xa3\",\t\t\"\\xc3\\x84\" => \"\\xc3\\xa4\",\n\t\t\"\\xc3\\x85\" => \"\\xc3\\xa5\",\t\t\"\\xc3\\x86\" => \"\\xc3\\xa6\",\t\t\"\\xc3\\x87\" => \"\\xc3\\xa7\",\t\t\"\\xc3\\x88\" => \"\\xc3\\xa8\",\n\t\t\"\\xc3\\x89\" => \"\\xc3\\xa9\",\t\t\"\\xc3\\x8a\" => \"\\xc3\\xaa\",\t\t\"\\xc3\\x8b\" => \"\\xc3\\xab\",\t\t\"\\xc3\\x8c\" => \"\\xc3\\xac\",\n\t\t\"\\xc3\\x8d\" => \"\\xc3\\xad\",\t\t\"\\xc3\\x8e\" => \"\\xc3\\xae\",\t\t\"\\xc3\\x8f\" => \"\\xc3\\xaf\",\t\t\"\\xc3\\x90\" => \"\\xc3\\xb0\",\n\t\t\"\\xc3\\x91\" => \"\\xc3\\xb1\",\t\t\"\\xc3\\x92\" => \"\\xc3\\xb2\",\t\t\"\\xc3\\x93\" => \"\\xc3\\xb3\",\t\t\"\\xc3\\x94\" => \"\\xc3\\xb4\",\n\t\t\"\\xc3\\x95\" => \"\\xc3\\xb5\",\t\t\"\\xc3\\x96\" => \"\\xc3\\xb6\",\t\t\"\\xc3\\x98\" => \"\\xc3\\xb8\",\t\t\"\\xc3\\x99\" => \"\\xc3\\xb9\",\n\t\t\"\\xc3\\x9a\" => \"\\xc3\\xba\",\t\t\"\\xc3\\x9b\" => \"\\xc3\\xbb\",\t\t\"\\xc3\\x9c\" => \"\\xc3\\xbc\",\t\t\"\\xc3\\x9d\" => \"\\xc3\\xbd\",\n\t\t\"\\xc3\\x9e\" => \"\\xc3\\xbe\",\t\t\"\\xc3\\x9f\" => \"ss\",\t\"\\xc4\\x80\" => \"\\xc4\\x81\",\t\t\"\\xc4\\x82\" => \"\\xc4\\x83\",\n\t\t\"\\xc4\\x84\" => \"\\xc4\\x85\",\t\t\"\\xc4\\x86\" => \"\\xc4\\x87\",\t\t\"\\xc4\\x88\" => \"\\xc4\\x89\",\t\t\"\\xc4\\x8a\" => \"\\xc4\\x8b\",\n\t\t\"\\xc4\\x8c\" => \"\\xc4\\x8d\",\t\t\"\\xc4\\x8e\" => \"\\xc4\\x8f\",\t\t\"\\xc4\\x90\" => \"\\xc4\\x91\",\t\t\"\\xc4\\x92\" => \"\\xc4\\x93\",\n\t\t\"\\xc4\\x94\" => \"\\xc4\\x95\",\t\t\"\\xc4\\x96\" => \"\\xc4\\x97\",\t\t\"\\xc4\\x98\" => \"\\xc4\\x99\",\t\t\"\\xc4\\x9a\" => \"\\xc4\\x9b\",\n\t\t\"\\xc4\\x9c\" => \"\\xc4\\x9d\",\t\t\"\\xc4\\x9e\" => \"\\xc4\\x9f\",\t\t\"\\xc4\\xa0\" => \"\\xc4\\xa1\",\t\t\"\\xc4\\xa2\" => \"\\xc4\\xa3\",\n\t\t\"\\xc4\\xa4\" => \"\\xc4\\xa5\",\t\t\"\\xc4\\xa6\" => \"\\xc4\\xa7\",\t\t\"\\xc4\\xa8\" => \"\\xc4\\xa9\",\t\t\"\\xc4\\xaa\" => \"\\xc4\\xab\",\n\t\t\"\\xc4\\xac\" => \"\\xc4\\xad\",\t\t\"\\xc4\\xae\" => \"\\xc4\\xaf\",\t\t\"\\xc4\\xb0\" => \"i\\xcc\\x87\",\t\t\"\\xc4\\xb2\" => \"\\xc4\\xb3\",\n\t\t\"\\xc4\\xb4\" => \"\\xc4\\xb5\",\t\t\"\\xc4\\xb6\" => \"\\xc4\\xb7\",\t\t\"\\xc4\\xb9\" => \"\\xc4\\xba\",\t\t\"\\xc4\\xbb\" => \"\\xc4\\xbc\",\n\t\t\"\\xc4\\xbd\" => \"\\xc4\\xbe\",\t\t\"\\xc4\\xbf\" => \"\\xc5\\x80\",\t\t\"\\xc5\\x81\" => \"\\xc5\\x82\",\t\t\"\\xc5\\x83\" => \"\\xc5\\x84\",\n\t\t\"\\xc5\\x85\" => \"\\xc5\\x86\",\t\t\"\\xc5\\x87\" => \"\\xc5\\x88\",\t\t\"\\xc5\\x89\" => \"\\xca\\xbcn\",\t\"\\xc5\\x8a\" => \"\\xc5\\x8b\",\n\t\t\"\\xc5\\x8c\" => \"\\xc5\\x8d\",\t\t\"\\xc5\\x8e\" => \"\\xc5\\x8f\",\t\t\"\\xc5\\x90\" => \"\\xc5\\x91\",\t\t\"\\xc5\\x92\" => \"\\xc5\\x93\",\n\t\t\"\\xc5\\x94\" => \"\\xc5\\x95\",\t\t\"\\xc5\\x96\" => \"\\xc5\\x97\",\t\t\"\\xc5\\x98\" => \"\\xc5\\x99\",\t\t\"\\xc5\\x9a\" => \"\\xc5\\x9b\",\n\t\t\"\\xc5\\x9c\" => \"\\xc5\\x9d\",\t\t\"\\xc5\\x9e\" => \"\\xc5\\x9f\",\t\t\"\\xc5\\xa0\" => \"\\xc5\\xa1\",\t\t\"\\xc5\\xa2\" => \"\\xc5\\xa3\",\n\t\t\"\\xc5\\xa4\" => \"\\xc5\\xa5\",\t\t\"\\xc5\\xa6\" => \"\\xc5\\xa7\",\t\t\"\\xc5\\xa8\" => \"\\xc5\\xa9\",\t\t\"\\xc5\\xaa\" => \"\\xc5\\xab\",\n\t\t\"\\xc5\\xac\" => \"\\xc5\\xad\",\t\t\"\\xc5\\xae\" => \"\\xc5\\xaf\",\t\t\"\\xc5\\xb0\" => \"\\xc5\\xb1\",\t\t\"\\xc5\\xb2\" => \"\\xc5\\xb3\",\n\t\t\"\\xc5\\xb4\" => \"\\xc5\\xb5\",\t\t\"\\xc5\\xb6\" => \"\\xc5\\xb7\",\t\t\"\\xc5\\xb8\" => \"\\xc3\\xbf\",\t\t\"\\xc5\\xb9\" => \"\\xc5\\xba\",\n\t\t\"\\xc5\\xbb\" => \"\\xc5\\xbc\",\t\t\"\\xc5\\xbd\" => \"\\xc5\\xbe\",\t\t\"\\xc5\\xbf\" => \"s\",\t\t\"\\xc6\\x81\" => \"\\xc9\\x93\",\n\t\t\"\\xc6\\x82\" => \"\\xc6\\x83\",\t\t\"\\xc6\\x84\" => \"\\xc6\\x85\",\t\t\"\\xc6\\x86\" => \"\\xc9\\x94\",\t\t\"\\xc6\\x87\" => \"\\xc6\\x88\",\n\t\t\"\\xc6\\x89\" => \"\\xc9\\x96\",\t\t\"\\xc6\\x8a\" => \"\\xc9\\x97\",\t\t\"\\xc6\\x8b\" => \"\\xc6\\x8c\",\t\t\"\\xc6\\x8e\" => \"\\xc7\\x9d\",\n\t\t\"\\xc6\\x8f\" => \"\\xc9\\x99\",\t\t\"\\xc6\\x90\" => \"\\xc9\\x9b\",\t\t\"\\xc6\\x91\" => \"\\xc6\\x92\",\t\t\"\\xc6\\x93\" => \"\\xc9\\xa0\",\n\t\t\"\\xc6\\x94\" => \"\\xc9\\xa3\",\t\t\"\\xc6\\x96\" => \"\\xc9\\xa9\",\t\t\"\\xc6\\x97\" => \"\\xc9\\xa8\",\t\t\"\\xc6\\x98\" => \"\\xc6\\x99\",\n\t\t\"\\xc6\\x9c\" => \"\\xc9\\xaf\",\t\t\"\\xc6\\x9d\" => \"\\xc9\\xb2\",\t\t\"\\xc6\\x9f\" => \"\\xc9\\xb5\",\t\t\"\\xc6\\xa0\" => \"\\xc6\\xa1\",\n\t\t\"\\xc6\\xa2\" => \"\\xc6\\xa3\",\t\t\"\\xc6\\xa4\" => \"\\xc6\\xa5\",\t\t\"\\xc6\\xa6\" => \"\\xca\\x80\",\t\t\"\\xc6\\xa7\" => \"\\xc6\\xa8\",\n\t\t\"\\xc6\\xa9\" => \"\\xca\\x83\",\t\t\"\\xc6\\xac\" => \"\\xc6\\xad\",\t\t\"\\xc6\\xae\" => \"\\xca\\x88\",\t\t\"\\xc6\\xaf\" => \"\\xc6\\xb0\",\n\t\t\"\\xc6\\xb1\" => \"\\xca\\x8a\",\t\t\"\\xc6\\xb2\" => \"\\xca\\x8b\",\t\t\"\\xc6\\xb3\" => \"\\xc6\\xb4\",\t\t\"\\xc6\\xb5\" => \"\\xc6\\xb6\",\n\t\t\"\\xc6\\xb7\" => \"\\xca\\x92\",\t\t\"\\xc6\\xb8\" => \"\\xc6\\xb9\",\t\t\"\\xc6\\xbc\" => \"\\xc6\\xbd\",\t\t\"\\xc7\\x84\" => \"\\xc7\\x86\",\n\t\t\"\\xc7\\x85\" => \"\\xc7\\x86\",\t\t\"\\xc7\\x87\" => \"\\xc7\\x89\",\t\t\"\\xc7\\x88\" => \"\\xc7\\x89\",\t\t\"\\xc7\\x8a\" => \"\\xc7\\x8c\",\n\t\t\"\\xc7\\x8b\" => \"\\xc7\\x8c\",\t\t\"\\xc7\\x8d\" => \"\\xc7\\x8e\",\t\t\"\\xc7\\x8f\" => \"\\xc7\\x90\",\t\t\"\\xc7\\x91\" => \"\\xc7\\x92\",\n\t\t\"\\xc7\\x93\" => \"\\xc7\\x94\",\t\t\"\\xc7\\x95\" => \"\\xc7\\x96\",\t\t\"\\xc7\\x97\" => \"\\xc7\\x98\",\t\t\"\\xc7\\x99\" => \"\\xc7\\x9a\",\n\t\t\"\\xc7\\x9b\" => \"\\xc7\\x9c\",\t\t\"\\xc7\\x9e\" => \"\\xc7\\x9f\",\t\t\"\\xc7\\xa0\" => \"\\xc7\\xa1\",\t\t\"\\xc7\\xa2\" => \"\\xc7\\xa3\",\n\t\t\"\\xc7\\xa4\" => \"\\xc7\\xa5\",\t\t\"\\xc7\\xa6\" => \"\\xc7\\xa7\",\t\t\"\\xc7\\xa8\" => \"\\xc7\\xa9\",\t\t\"\\xc7\\xaa\" => \"\\xc7\\xab\",\n\t\t\"\\xc7\\xac\" => \"\\xc7\\xad\",\t\t\"\\xc7\\xae\" => \"\\xc7\\xaf\",\t\t\"\\xc7\\xb0\" => \"j\\xcc\\x8c\",\t\t\"\\xc7\\xb1\" => \"\\xc7\\xb3\",\n\t\t\"\\xc7\\xb2\" => \"\\xc7\\xb3\",\t\t\"\\xc7\\xb4\" => \"\\xc7\\xb5\",\t\t\"\\xc7\\xb6\" => \"\\xc6\\x95\",\t\t\"\\xc7\\xb7\" => \"\\xc6\\xbf\",\n\t\t\"\\xc7\\xb8\" => \"\\xc7\\xb9\",\t\t\"\\xc7\\xba\" => \"\\xc7\\xbb\",\t\t\"\\xc7\\xbc\" => \"\\xc7\\xbd\",\t\t\"\\xc7\\xbe\" => \"\\xc7\\xbf\",\n\t\t\"\\xc8\\x80\" => \"\\xc8\\x81\",\t\t\"\\xc8\\x82\" => \"\\xc8\\x83\",\t\t\"\\xc8\\x84\" => \"\\xc8\\x85\",\t\t\"\\xc8\\x86\" => \"\\xc8\\x87\",\n\t\t\"\\xc8\\x88\" => \"\\xc8\\x89\",\t\t\"\\xc8\\x8a\" => \"\\xc8\\x8b\",\t\t\"\\xc8\\x8c\" => \"\\xc8\\x8d\",\t\t\"\\xc8\\x8e\" => \"\\xc8\\x8f\",\n\t\t\"\\xc8\\x90\" => \"\\xc8\\x91\",\t\t\"\\xc8\\x92\" => \"\\xc8\\x93\",\t\t\"\\xc8\\x94\" => \"\\xc8\\x95\",\t\t\"\\xc8\\x96\" => \"\\xc8\\x97\",\n\t\t\"\\xc8\\x98\" => \"\\xc8\\x99\",\t\t\"\\xc8\\x9a\" => \"\\xc8\\x9b\",\t\t\"\\xc8\\x9c\" => \"\\xc8\\x9d\",\t\t\"\\xc8\\x9e\" => \"\\xc8\\x9f\",\n\t\t\"\\xc8\\xa0\" => \"\\xc6\\x9e\",\t\t\"\\xc8\\xa2\" => \"\\xc8\\xa3\",\t\t\"\\xc8\\xa4\" => \"\\xc8\\xa5\",\t\t\"\\xc8\\xa6\" => \"\\xc8\\xa7\",\n\t\t\"\\xc8\\xa8\" => \"\\xc8\\xa9\",\t\t\"\\xc8\\xaa\" => \"\\xc8\\xab\",\t\t\"\\xc8\\xac\" => \"\\xc8\\xad\",\t\t\"\\xc8\\xae\" => \"\\xc8\\xaf\",\n\t\t\"\\xc8\\xb0\" => \"\\xc8\\xb1\",\t\t\"\\xc8\\xb2\" => \"\\xc8\\xb3\",\t\t\"\\xc8\\xba\" => \"\\xe2\\xb1\\xa5\",\t\t\"\\xc8\\xbb\" => \"\\xc8\\xbc\",\n\t\t\"\\xc8\\xbd\" => \"\\xc6\\x9a\",\t\t\"\\xc8\\xbe\" => \"\\xe2\\xb1\\xa6\",\t\t\"\\xc9\\x81\" => \"\\xc9\\x82\",\t\t\"\\xc9\\x83\" => \"\\xc6\\x80\",\n\t\t\"\\xc9\\x84\" => \"\\xca\\x89\",\t\t\"\\xc9\\x85\" => \"\\xca\\x8c\",\t\t\"\\xc9\\x86\" => \"\\xc9\\x87\",\t\t\"\\xc9\\x88\" => \"\\xc9\\x89\",\n\t\t\"\\xc9\\x8a\" => \"\\xc9\\x8b\",\t\t\"\\xc9\\x8c\" => \"\\xc9\\x8d\",\t\t\"\\xc9\\x8e\" => \"\\xc9\\x8f\",\t\t\"\\xcd\\x85\" => \"\\xce\\xb9\",\n\t\t\"\\xce\\x86\" => \"\\xce\\xac\",\t\t\"\\xce\\x88\" => \"\\xce\\xad\",\t\t\"\\xce\\x89\" => \"\\xce\\xae\",\t\t\"\\xce\\x8a\" => \"\\xce\\xaf\",\n\t\t\"\\xce\\x8c\" => \"\\xcf\\x8c\",\t\t\"\\xce\\x8e\" => \"\\xcf\\x8d\",\t\t\"\\xce\\x8f\" => \"\\xcf\\x8e\",\t\t\"\\xce\\x90\" => \"\\xce\\xb9\\xcc\\x88\\xcc\\x81\",\n\t\t\"\\xce\\x91\" => \"\\xce\\xb1\",\t\t\"\\xce\\x92\" => \"\\xce\\xb2\",\t\t\"\\xce\\x93\" => \"\\xce\\xb3\",\t\t\"\\xce\\x94\" => \"\\xce\\xb4\",\n\t\t\"\\xce\\x95\" => \"\\xce\\xb5\",\t\t\"\\xce\\x96\" => \"\\xce\\xb6\",\t\t\"\\xce\\x97\" => \"\\xce\\xb7\",\t\t\"\\xce\\x98\" => \"\\xce\\xb8\",\n\t\t\"\\xce\\x99\" => \"\\xce\\xb9\",\t\t\"\\xce\\x9a\" => \"\\xce\\xba\",\t\t\"\\xce\\x9b\" => \"\\xce\\xbb\",\t\t\"\\xce\\x9c\" => \"\\xce\\xbc\",\n\t\t\"\\xce\\x9d\" => \"\\xce\\xbd\",\t\t\"\\xce\\x9e\" => \"\\xce\\xbe\",\t\t\"\\xce\\x9f\" => \"\\xce\\xbf\",\t\t\"\\xce\\xa0\" => \"\\xcf\\x80\",\n\t\t\"\\xce\\xa1\" => \"\\xcf\\x81\",\t\t\"\\xce\\xa3\" => \"\\xcf\\x83\",\t\t\"\\xce\\xa4\" => \"\\xcf\\x84\",\t\t\"\\xce\\xa5\" => \"\\xcf\\x85\",\n\t\t\"\\xce\\xa6\" => \"\\xcf\\x86\",\t\t\"\\xce\\xa7\" => \"\\xcf\\x87\",\t\t\"\\xce\\xa8\" => \"\\xcf\\x88\",\t\t\"\\xce\\xa9\" => \"\\xcf\\x89\",\n\t\t\"\\xce\\xaa\" => \"\\xcf\\x8a\",\t\t\"\\xce\\xab\" => \"\\xcf\\x8b\",\t\t\"\\xce\\xb0\" => \"\\xcf\\x85\\xcc\\x88\\xcc\\x81\",\t\"\\xcf\\x82\" => \"\\xcf\\x83\",\n\t\t\"\\xcf\\x90\" => \"\\xce\\xb2\",\t\t\"\\xcf\\x91\" => \"\\xce\\xb8\",\t\t\"\\xcf\\x95\" => \"\\xcf\\x86\",\t\t\"\\xcf\\x96\" => \"\\xcf\\x80\",\n\t\t\"\\xcf\\x98\" => \"\\xcf\\x99\",\t\t\"\\xcf\\x9a\" => \"\\xcf\\x9b\",\t\t\"\\xcf\\x9c\" => \"\\xcf\\x9d\",\t\t\"\\xcf\\x9e\" => \"\\xcf\\x9f\",\n\t\t\"\\xcf\\xa0\" => \"\\xcf\\xa1\",\t\t\"\\xcf\\xa2\" => \"\\xcf\\xa3\",\t\t\"\\xcf\\xa4\" => \"\\xcf\\xa5\",\t\t\"\\xcf\\xa6\" => \"\\xcf\\xa7\",\n\t\t\"\\xcf\\xa8\" => \"\\xcf\\xa9\",\t\t\"\\xcf\\xaa\" => \"\\xcf\\xab\",\t\t\"\\xcf\\xac\" => \"\\xcf\\xad\",\t\t\"\\xcf\\xae\" => \"\\xcf\\xaf\",\n\t\t\"\\xcf\\xb0\" => \"\\xce\\xba\",\t\t\"\\xcf\\xb1\" => \"\\xcf\\x81\",\t\t\"\\xcf\\xb4\" => \"\\xce\\xb8\",\t\t\"\\xcf\\xb5\" => \"\\xce\\xb5\",\n\t\t\"\\xcf\\xb7\" => \"\\xcf\\xb8\",\t\t\"\\xcf\\xb9\" => \"\\xcf\\xb2\",\t\t\"\\xcf\\xba\" => \"\\xcf\\xbb\",\t\t\"\\xcf\\xbd\" => \"\\xcd\\xbb\",\n\t\t\"\\xcf\\xbe\" => \"\\xcd\\xbc\",\t\t\"\\xcf\\xbf\" => \"\\xcd\\xbd\",\t\t\"\\xd0\\x80\" => \"\\xd1\\x90\",\t\t\"\\xd0\\x81\" => \"\\xd1\\x91\",\n\t\t\"\\xd0\\x82\" => \"\\xd1\\x92\",\t\t\"\\xd0\\x83\" => \"\\xd1\\x93\",\t\t\"\\xd0\\x84\" => \"\\xd1\\x94\",\t\t\"\\xd0\\x85\" => \"\\xd1\\x95\",\n\t\t\"\\xd0\\x86\" => \"\\xd1\\x96\",\t\t\"\\xd0\\x87\" => \"\\xd1\\x97\",\t\t\"\\xd0\\x88\" => \"\\xd1\\x98\",\t\t\"\\xd0\\x89\" => \"\\xd1\\x99\",\n\t\t\"\\xd0\\x8a\" => \"\\xd1\\x9a\",\t\t\"\\xd0\\x8b\" => \"\\xd1\\x9b\",\t\t\"\\xd0\\x8c\" => \"\\xd1\\x9c\",\t\t\"\\xd0\\x8d\" => \"\\xd1\\x9d\",\n\t\t\"\\xd0\\x8e\" => \"\\xd1\\x9e\",\t\t\"\\xd0\\x8f\" => \"\\xd1\\x9f\",\t\t\"\\xd0\\x90\" => \"\\xd0\\xb0\",\t\t\"\\xd0\\x91\" => \"\\xd0\\xb1\",\n\t\t\"\\xd0\\x92\" => \"\\xd0\\xb2\",\t\t\"\\xd0\\x93\" => \"\\xd0\\xb3\",\t\t\"\\xd0\\x94\" => \"\\xd0\\xb4\",\t\t\"\\xd0\\x95\" => \"\\xd0\\xb5\",\n\t\t\"\\xd0\\x96\" => \"\\xd0\\xb6\",\t\t\"\\xd0\\x97\" => \"\\xd0\\xb7\",\t\t\"\\xd0\\x98\" => \"\\xd0\\xb8\",\t\t\"\\xd0\\x99\" => \"\\xd0\\xb9\",\n\t\t\"\\xd0\\x9a\" => \"\\xd0\\xba\",\t\t\"\\xd0\\x9b\" => \"\\xd0\\xbb\",\t\t\"\\xd0\\x9c\" => \"\\xd0\\xbc\",\t\t\"\\xd0\\x9d\" => \"\\xd0\\xbd\",\n\t\t\"\\xd0\\x9e\" => \"\\xd0\\xbe\",\t\t\"\\xd0\\x9f\" => \"\\xd0\\xbf\",\t\t\"\\xd0\\xa0\" => \"\\xd1\\x80\",\t\t\"\\xd0\\xa1\" => \"\\xd1\\x81\",\n\t\t\"\\xd0\\xa2\" => \"\\xd1\\x82\",\t\t\"\\xd0\\xa3\" => \"\\xd1\\x83\",\t\t\"\\xd0\\xa4\" => \"\\xd1\\x84\",\t\t\"\\xd0\\xa5\" => \"\\xd1\\x85\",\n\t\t\"\\xd0\\xa6\" => \"\\xd1\\x86\",\t\t\"\\xd0\\xa7\" => \"\\xd1\\x87\",\t\t\"\\xd0\\xa8\" => \"\\xd1\\x88\",\t\t\"\\xd0\\xa9\" => \"\\xd1\\x89\",\n\t\t\"\\xd0\\xaa\" => \"\\xd1\\x8a\",\t\t\"\\xd0\\xab\" => \"\\xd1\\x8b\",\t\t\"\\xd0\\xac\" => \"\\xd1\\x8c\",\t\t\"\\xd0\\xad\" => \"\\xd1\\x8d\",\n\t\t\"\\xd0\\xae\" => \"\\xd1\\x8e\",\t\t\"\\xd0\\xaf\" => \"\\xd1\\x8f\",\t\t\"\\xd1\\xa0\" => \"\\xd1\\xa1\",\t\t\"\\xd1\\xa2\" => \"\\xd1\\xa3\",\n\t\t\"\\xd1\\xa4\" => \"\\xd1\\xa5\",\t\t\"\\xd1\\xa6\" => \"\\xd1\\xa7\",\t\t\"\\xd1\\xa8\" => \"\\xd1\\xa9\",\t\t\"\\xd1\\xaa\" => \"\\xd1\\xab\",\n\t\t\"\\xd1\\xac\" => \"\\xd1\\xad\",\t\t\"\\xd1\\xae\" => \"\\xd1\\xaf\",\t\t\"\\xd1\\xb0\" => \"\\xd1\\xb1\",\t\t\"\\xd1\\xb2\" => \"\\xd1\\xb3\",\n\t\t\"\\xd1\\xb4\" => \"\\xd1\\xb5\",\t\t\"\\xd1\\xb6\" => \"\\xd1\\xb7\",\t\t\"\\xd1\\xb8\" => \"\\xd1\\xb9\",\t\t\"\\xd1\\xba\" => \"\\xd1\\xbb\",\n\t\t\"\\xd1\\xbc\" => \"\\xd1\\xbd\",\t\t\"\\xd1\\xbe\" => \"\\xd1\\xbf\",\t\t\"\\xd2\\x80\" => \"\\xd2\\x81\",\t\t\"\\xd2\\x8a\" => \"\\xd2\\x8b\",\n\t\t\"\\xd2\\x8c\" => \"\\xd2\\x8d\",\t\t\"\\xd2\\x8e\" => \"\\xd2\\x8f\",\t\t\"\\xd2\\x90\" => \"\\xd2\\x91\",\t\t\"\\xd2\\x92\" => \"\\xd2\\x93\",\n\t\t\"\\xd2\\x94\" => \"\\xd2\\x95\",\t\t\"\\xd2\\x96\" => \"\\xd2\\x97\",\t\t\"\\xd2\\x98\" => \"\\xd2\\x99\",\t\t\"\\xd2\\x9a\" => \"\\xd2\\x9b\",\n\t\t\"\\xd2\\x9c\" => \"\\xd2\\x9d\",\t\t\"\\xd2\\x9e\" => \"\\xd2\\x9f\",\t\t\"\\xd2\\xa0\" => \"\\xd2\\xa1\",\t\t\"\\xd2\\xa2\" => \"\\xd2\\xa3\",\n\t\t\"\\xd2\\xa4\" => \"\\xd2\\xa5\",\t\t\"\\xd2\\xa6\" => \"\\xd2\\xa7\",\t\t\"\\xd2\\xa8\" => \"\\xd2\\xa9\",\t\t\"\\xd2\\xaa\" => \"\\xd2\\xab\",\n\t\t\"\\xd2\\xac\" => \"\\xd2\\xad\",\t\t\"\\xd2\\xae\" => \"\\xd2\\xaf\",\t\t\"\\xd2\\xb0\" => \"\\xd2\\xb1\",\t\t\"\\xd2\\xb2\" => \"\\xd2\\xb3\",\n\t\t\"\\xd2\\xb4\" => \"\\xd2\\xb5\",\t\t\"\\xd2\\xb6\" => \"\\xd2\\xb7\",\t\t\"\\xd2\\xb8\" => \"\\xd2\\xb9\",\t\t\"\\xd2\\xba\" => \"\\xd2\\xbb\",\n\t\t\"\\xd2\\xbc\" => \"\\xd2\\xbd\",\t\t\"\\xd2\\xbe\" => \"\\xd2\\xbf\",\t\t\"\\xd3\\x80\" => \"\\xd3\\x8f\",\t\t\"\\xd3\\x81\" => \"\\xd3\\x82\",\n\t\t\"\\xd3\\x83\" => \"\\xd3\\x84\",\t\t\"\\xd3\\x85\" => \"\\xd3\\x86\",\t\t\"\\xd3\\x87\" => \"\\xd3\\x88\",\t\t\"\\xd3\\x89\" => \"\\xd3\\x8a\",\n\t\t\"\\xd3\\x8b\" => \"\\xd3\\x8c\",\t\t\"\\xd3\\x8d\" => \"\\xd3\\x8e\",\t\t\"\\xd3\\x90\" => \"\\xd3\\x91\",\t\t\"\\xd3\\x92\" => \"\\xd3\\x93\",\n\t\t\"\\xd3\\x94\" => \"\\xd3\\x95\",\t\t\"\\xd3\\x96\" => \"\\xd3\\x97\",\t\t\"\\xd3\\x98\" => \"\\xd3\\x99\",\t\t\"\\xd3\\x9a\" => \"\\xd3\\x9b\",\n\t\t\"\\xd3\\x9c\" => \"\\xd3\\x9d\",\t\t\"\\xd3\\x9e\" => \"\\xd3\\x9f\",\t\t\"\\xd3\\xa0\" => \"\\xd3\\xa1\",\t\t\"\\xd3\\xa2\" => \"\\xd3\\xa3\",\n\t\t\"\\xd3\\xa4\" => \"\\xd3\\xa5\",\t\t\"\\xd3\\xa6\" => \"\\xd3\\xa7\",\t\t\"\\xd3\\xa8\" => \"\\xd3\\xa9\",\t\t\"\\xd3\\xaa\" => \"\\xd3\\xab\",\n\t\t\"\\xd3\\xac\" => \"\\xd3\\xad\",\t\t\"\\xd3\\xae\" => \"\\xd3\\xaf\",\t\t\"\\xd3\\xb0\" => \"\\xd3\\xb1\",\t\t\"\\xd3\\xb2\" => \"\\xd3\\xb3\",\n\t\t\"\\xd3\\xb4\" => \"\\xd3\\xb5\",\t\t\"\\xd3\\xb6\" => \"\\xd3\\xb7\",\t\t\"\\xd3\\xb8\" => \"\\xd3\\xb9\",\t\t\"\\xd3\\xba\" => \"\\xd3\\xbb\",\n\t\t\"\\xd3\\xbc\" => \"\\xd3\\xbd\",\t\t\"\\xd3\\xbe\" => \"\\xd3\\xbf\",\t\t\"\\xd4\\x80\" => \"\\xd4\\x81\",\t\t\"\\xd4\\x82\" => \"\\xd4\\x83\",\n\t\t\"\\xd4\\x84\" => \"\\xd4\\x85\",\t\t\"\\xd4\\x86\" => \"\\xd4\\x87\",\t\t\"\\xd4\\x88\" => \"\\xd4\\x89\",\t\t\"\\xd4\\x8a\" => \"\\xd4\\x8b\",\n\t\t\"\\xd4\\x8c\" => \"\\xd4\\x8d\",\t\t\"\\xd4\\x8e\" => \"\\xd4\\x8f\",\t\t\"\\xd4\\x90\" => \"\\xd4\\x91\",\t\t\"\\xd4\\x92\" => \"\\xd4\\x93\",\n\t\t\"\\xd4\\xb1\" => \"\\xd5\\xa1\",\t\t\"\\xd4\\xb2\" => \"\\xd5\\xa2\",\t\t\"\\xd4\\xb3\" => \"\\xd5\\xa3\",\t\t\"\\xd4\\xb4\" => \"\\xd5\\xa4\",\n\t\t\"\\xd4\\xb5\" => \"\\xd5\\xa5\",\t\t\"\\xd4\\xb6\" => \"\\xd5\\xa6\",\t\t\"\\xd4\\xb7\" => \"\\xd5\\xa7\",\t\t\"\\xd4\\xb8\" => \"\\xd5\\xa8\",\n\t\t\"\\xd4\\xb9\" => \"\\xd5\\xa9\",\t\t\"\\xd4\\xba\" => \"\\xd5\\xaa\",\t\t\"\\xd4\\xbb\" => \"\\xd5\\xab\",\t\t\"\\xd4\\xbc\" => \"\\xd5\\xac\",\n\t\t\"\\xd4\\xbd\" => \"\\xd5\\xad\",\t\t\"\\xd4\\xbe\" => \"\\xd5\\xae\",\t\t\"\\xd4\\xbf\" => \"\\xd5\\xaf\",\t\t\"\\xd5\\x80\" => \"\\xd5\\xb0\",\n\t\t\"\\xd5\\x81\" => \"\\xd5\\xb1\",\t\t\"\\xd5\\x82\" => \"\\xd5\\xb2\",\t\t\"\\xd5\\x83\" => \"\\xd5\\xb3\",\t\t\"\\xd5\\x84\" => \"\\xd5\\xb4\",\n\t\t\"\\xd5\\x85\" => \"\\xd5\\xb5\",\t\t\"\\xd5\\x86\" => \"\\xd5\\xb6\",\t\t\"\\xd5\\x87\" => \"\\xd5\\xb7\",\t\t\"\\xd5\\x88\" => \"\\xd5\\xb8\",\n\t\t\"\\xd5\\x89\" => \"\\xd5\\xb9\",\t\t\"\\xd5\\x8a\" => \"\\xd5\\xba\",\t\t\"\\xd5\\x8b\" => \"\\xd5\\xbb\",\t\t\"\\xd5\\x8c\" => \"\\xd5\\xbc\",\n\t\t\"\\xd5\\x8d\" => \"\\xd5\\xbd\",\t\t\"\\xd5\\x8e\" => \"\\xd5\\xbe\",\t\t\"\\xd5\\x8f\" => \"\\xd5\\xbf\",\t\t\"\\xd5\\x90\" => \"\\xd6\\x80\",\n\t\t\"\\xd5\\x91\" => \"\\xd6\\x81\",\t\t\"\\xd5\\x92\" => \"\\xd6\\x82\",\t\t\"\\xd5\\x93\" => \"\\xd6\\x83\",\t\t\"\\xd5\\x94\" => \"\\xd6\\x84\",\n\t\t\"\\xd5\\x95\" => \"\\xd6\\x85\",\t\t\"\\xd5\\x96\" => \"\\xd6\\x86\",\t\t\"\\xd6\\x87\" => \"\\xd5\\xa5\\xd6\\x82\",\t\t\"\\xe1\\x82\\xa0\" => \"\\xe2\\xb4\\x80\",\n\t\t\"\\xe1\\x82\\xa1\" => \"\\xe2\\xb4\\x81\",\t\t\"\\xe1\\x82\\xa2\" => \"\\xe2\\xb4\\x82\",\t\t\"\\xe1\\x82\\xa3\" => \"\\xe2\\xb4\\x83\",\t\t\"\\xe1\\x82\\xa4\" => \"\\xe2\\xb4\\x84\",\n\t\t\"\\xe1\\x82\\xa5\" => \"\\xe2\\xb4\\x85\",\t\t\"\\xe1\\x82\\xa6\" => \"\\xe2\\xb4\\x86\",\t\t\"\\xe1\\x82\\xa7\" => \"\\xe2\\xb4\\x87\",\t\t\"\\xe1\\x82\\xa8\" => \"\\xe2\\xb4\\x88\",\n\t\t\"\\xe1\\x82\\xa9\" => \"\\xe2\\xb4\\x89\",\t\t\"\\xe1\\x82\\xaa\" => \"\\xe2\\xb4\\x8a\",\t\t\"\\xe1\\x82\\xab\" => \"\\xe2\\xb4\\x8b\",\t\t\"\\xe1\\x82\\xac\" => \"\\xe2\\xb4\\x8c\",\n\t\t\"\\xe1\\x82\\xad\" => \"\\xe2\\xb4\\x8d\",\t\t\"\\xe1\\x82\\xae\" => \"\\xe2\\xb4\\x8e\",\t\t\"\\xe1\\x82\\xaf\" => \"\\xe2\\xb4\\x8f\",\t\t\"\\xe1\\x82\\xb0\" => \"\\xe2\\xb4\\x90\",\n\t\t\"\\xe1\\x82\\xb1\" => \"\\xe2\\xb4\\x91\",\t\t\"\\xe1\\x82\\xb2\" => \"\\xe2\\xb4\\x92\",\t\t\"\\xe1\\x82\\xb3\" => \"\\xe2\\xb4\\x93\",\t\t\"\\xe1\\x82\\xb4\" => \"\\xe2\\xb4\\x94\",\n\t\t\"\\xe1\\x82\\xb5\" => \"\\xe2\\xb4\\x95\",\t\t\"\\xe1\\x82\\xb6\" => \"\\xe2\\xb4\\x96\",\t\t\"\\xe1\\x82\\xb7\" => \"\\xe2\\xb4\\x97\",\t\t\"\\xe1\\x82\\xb8\" => \"\\xe2\\xb4\\x98\",\n\t\t\"\\xe1\\x82\\xb9\" => \"\\xe2\\xb4\\x99\",\t\t\"\\xe1\\x82\\xba\" => \"\\xe2\\xb4\\x9a\",\t\t\"\\xe1\\x82\\xbb\" => \"\\xe2\\xb4\\x9b\",\t\t\"\\xe1\\x82\\xbc\" => \"\\xe2\\xb4\\x9c\",\n\t\t\"\\xe1\\x82\\xbd\" => \"\\xe2\\xb4\\x9d\",\t\t\"\\xe1\\x82\\xbe\" => \"\\xe2\\xb4\\x9e\",\t\t\"\\xe1\\x82\\xbf\" => \"\\xe2\\xb4\\x9f\",\t\t\"\\xe1\\x83\\x80\" => \"\\xe2\\xb4\\xa0\",\n\t\t\"\\xe1\\x83\\x81\" => \"\\xe2\\xb4\\xa1\",\t\t\"\\xe1\\x83\\x82\" => \"\\xe2\\xb4\\xa2\",\t\t\"\\xe1\\x83\\x83\" => \"\\xe2\\xb4\\xa3\",\t\t\"\\xe1\\x83\\x84\" => \"\\xe2\\xb4\\xa4\",\n\t\t\"\\xe1\\x83\\x85\" => \"\\xe2\\xb4\\xa5\",\t\t\"\\xe1\\xb8\\x80\" => \"\\xe1\\xb8\\x81\",\t\t\"\\xe1\\xb8\\x82\" => \"\\xe1\\xb8\\x83\",\t\t\"\\xe1\\xb8\\x84\" => \"\\xe1\\xb8\\x85\",\n\t\t\"\\xe1\\xb8\\x86\" => \"\\xe1\\xb8\\x87\",\t\t\"\\xe1\\xb8\\x88\" => \"\\xe1\\xb8\\x89\",\t\t\"\\xe1\\xb8\\x8a\" => \"\\xe1\\xb8\\x8b\",\t\t\"\\xe1\\xb8\\x8c\" => \"\\xe1\\xb8\\x8d\",\n\t\t\"\\xe1\\xb8\\x8e\" => \"\\xe1\\xb8\\x8f\",\t\t\"\\xe1\\xb8\\x90\" => \"\\xe1\\xb8\\x91\",\t\t\"\\xe1\\xb8\\x92\" => \"\\xe1\\xb8\\x93\",\t\t\"\\xe1\\xb8\\x94\" => \"\\xe1\\xb8\\x95\",\n\t\t\"\\xe1\\xb8\\x96\" => \"\\xe1\\xb8\\x97\",\t\t\"\\xe1\\xb8\\x98\" => \"\\xe1\\xb8\\x99\",\t\t\"\\xe1\\xb8\\x9a\" => \"\\xe1\\xb8\\x9b\",\t\t\"\\xe1\\xb8\\x9c\" => \"\\xe1\\xb8\\x9d\",\n\t\t\"\\xe1\\xb8\\x9e\" => \"\\xe1\\xb8\\x9f\",\t\t\"\\xe1\\xb8\\xa0\" => \"\\xe1\\xb8\\xa1\",\t\t\"\\xe1\\xb8\\xa2\" => \"\\xe1\\xb8\\xa3\",\t\t\"\\xe1\\xb8\\xa4\" => \"\\xe1\\xb8\\xa5\",\n\t\t\"\\xe1\\xb8\\xa6\" => \"\\xe1\\xb8\\xa7\",\t\t\"\\xe1\\xb8\\xa8\" => \"\\xe1\\xb8\\xa9\",\t\t\"\\xe1\\xb8\\xaa\" => \"\\xe1\\xb8\\xab\",\t\t\"\\xe1\\xb8\\xac\" => \"\\xe1\\xb8\\xad\",\n\t\t\"\\xe1\\xb8\\xae\" => \"\\xe1\\xb8\\xaf\",\t\t\"\\xe1\\xb8\\xb0\" => \"\\xe1\\xb8\\xb1\",\t\t\"\\xe1\\xb8\\xb2\" => \"\\xe1\\xb8\\xb3\",\t\t\"\\xe1\\xb8\\xb4\" => \"\\xe1\\xb8\\xb5\",\n\t\t\"\\xe1\\xb8\\xb6\" => \"\\xe1\\xb8\\xb7\",\t\t\"\\xe1\\xb8\\xb8\" => \"\\xe1\\xb8\\xb9\",\t\t\"\\xe1\\xb8\\xba\" => \"\\xe1\\xb8\\xbb\",\t\t\"\\xe1\\xb8\\xbc\" => \"\\xe1\\xb8\\xbd\",\n\t\t\"\\xe1\\xb8\\xbe\" => \"\\xe1\\xb8\\xbf\",\t\t\"\\xe1\\xb9\\x80\" => \"\\xe1\\xb9\\x81\",\t\t\"\\xe1\\xb9\\x82\" => \"\\xe1\\xb9\\x83\",\t\t\"\\xe1\\xb9\\x84\" => \"\\xe1\\xb9\\x85\",\n\t\t\"\\xe1\\xb9\\x86\" => \"\\xe1\\xb9\\x87\",\t\t\"\\xe1\\xb9\\x88\" => \"\\xe1\\xb9\\x89\",\t\t\"\\xe1\\xb9\\x8a\" => \"\\xe1\\xb9\\x8b\",\t\t\"\\xe1\\xb9\\x8c\" => \"\\xe1\\xb9\\x8d\",\n\t\t\"\\xe1\\xb9\\x8e\" => \"\\xe1\\xb9\\x8f\",\t\t\"\\xe1\\xb9\\x90\" => \"\\xe1\\xb9\\x91\",\t\t\"\\xe1\\xb9\\x92\" => \"\\xe1\\xb9\\x93\",\t\t\"\\xe1\\xb9\\x94\" => \"\\xe1\\xb9\\x95\",\n\t\t\"\\xe1\\xb9\\x96\" => \"\\xe1\\xb9\\x97\",\t\t\"\\xe1\\xb9\\x98\" => \"\\xe1\\xb9\\x99\",\t\t\"\\xe1\\xb9\\x9a\" => \"\\xe1\\xb9\\x9b\",\t\t\"\\xe1\\xb9\\x9c\" => \"\\xe1\\xb9\\x9d\",\n\t\t\"\\xe1\\xb9\\x9e\" => \"\\xe1\\xb9\\x9f\",\t\t\"\\xe1\\xb9\\xa0\" => \"\\xe1\\xb9\\xa1\",\t\t\"\\xe1\\xb9\\xa2\" => \"\\xe1\\xb9\\xa3\",\t\t\"\\xe1\\xb9\\xa4\" => \"\\xe1\\xb9\\xa5\",\n\t\t\"\\xe1\\xb9\\xa6\" => \"\\xe1\\xb9\\xa7\",\t\t\"\\xe1\\xb9\\xa8\" => \"\\xe1\\xb9\\xa9\",\t\t\"\\xe1\\xb9\\xaa\" => \"\\xe1\\xb9\\xab\",\t\t\"\\xe1\\xb9\\xac\" => \"\\xe1\\xb9\\xad\",\n\t\t\"\\xe1\\xb9\\xae\" => \"\\xe1\\xb9\\xaf\",\t\t\"\\xe1\\xb9\\xb0\" => \"\\xe1\\xb9\\xb1\",\t\t\"\\xe1\\xb9\\xb2\" => \"\\xe1\\xb9\\xb3\",\t\t\"\\xe1\\xb9\\xb4\" => \"\\xe1\\xb9\\xb5\",\n\t\t\"\\xe1\\xb9\\xb6\" => \"\\xe1\\xb9\\xb7\",\t\t\"\\xe1\\xb9\\xb8\" => \"\\xe1\\xb9\\xb9\",\t\t\"\\xe1\\xb9\\xba\" => \"\\xe1\\xb9\\xbb\",\t\t\"\\xe1\\xb9\\xbc\" => \"\\xe1\\xb9\\xbd\",\n\t\t\"\\xe1\\xb9\\xbe\" => \"\\xe1\\xb9\\xbf\",\t\t\"\\xe1\\xba\\x80\" => \"\\xe1\\xba\\x81\",\t\t\"\\xe1\\xba\\x82\" => \"\\xe1\\xba\\x83\",\t\t\"\\xe1\\xba\\x84\" => \"\\xe1\\xba\\x85\",\n\t\t\"\\xe1\\xba\\x86\" => \"\\xe1\\xba\\x87\",\t\t\"\\xe1\\xba\\x88\" => \"\\xe1\\xba\\x89\",\t\t\"\\xe1\\xba\\x8a\" => \"\\xe1\\xba\\x8b\",\t\t\"\\xe1\\xba\\x8c\" => \"\\xe1\\xba\\x8d\",\n\t\t\"\\xe1\\xba\\x8e\" => \"\\xe1\\xba\\x8f\",\t\t\"\\xe1\\xba\\x90\" => \"\\xe1\\xba\\x91\",\t\t\"\\xe1\\xba\\x92\" => \"\\xe1\\xba\\x93\",\t\t\"\\xe1\\xba\\x94\" => \"\\xe1\\xba\\x95\",\n\t\t\"\\xe1\\xba\\x96\" => \"h\\xcc\\xb1\",\t\t\"\\xe1\\xba\\x97\" => \"t\\xcc\\x88\",\t\t\"\\xe1\\xba\\x98\" => \"w\\xcc\\x8a\",\t\t\"\\xe1\\xba\\x99\" => \"y\\xcc\\x8a\",\n\t\t\"\\xe1\\xba\\x9a\" => \"a\\xca\\xbe\",\t\"\\xe1\\xba\\x9b\" => \"\\xe1\\xb9\\xa1\",\t\t\"\\xe1\\xba\\xa0\" => \"\\xe1\\xba\\xa1\",\t\t\"\\xe1\\xba\\xa2\" => \"\\xe1\\xba\\xa3\",\n\t\t\"\\xe1\\xba\\xa4\" => \"\\xe1\\xba\\xa5\",\t\t\"\\xe1\\xba\\xa6\" => \"\\xe1\\xba\\xa7\",\t\t\"\\xe1\\xba\\xa8\" => \"\\xe1\\xba\\xa9\",\t\t\"\\xe1\\xba\\xaa\" => \"\\xe1\\xba\\xab\",\n\t\t\"\\xe1\\xba\\xac\" => \"\\xe1\\xba\\xad\",\t\t\"\\xe1\\xba\\xae\" => \"\\xe1\\xba\\xaf\",\t\t\"\\xe1\\xba\\xb0\" => \"\\xe1\\xba\\xb1\",\t\t\"\\xe1\\xba\\xb2\" => \"\\xe1\\xba\\xb3\",\n\t\t\"\\xe1\\xba\\xb4\" => \"\\xe1\\xba\\xb5\",\t\t\"\\xe1\\xba\\xb6\" => \"\\xe1\\xba\\xb7\",\t\t\"\\xe1\\xba\\xb8\" => \"\\xe1\\xba\\xb9\",\t\t\"\\xe1\\xba\\xba\" => \"\\xe1\\xba\\xbb\",\n\t\t\"\\xe1\\xba\\xbc\" => \"\\xe1\\xba\\xbd\",\t\t\"\\xe1\\xba\\xbe\" => \"\\xe1\\xba\\xbf\",\t\t\"\\xe1\\xbb\\x80\" => \"\\xe1\\xbb\\x81\",\t\t\"\\xe1\\xbb\\x82\" => \"\\xe1\\xbb\\x83\",\n\t\t\"\\xe1\\xbb\\x84\" => \"\\xe1\\xbb\\x85\",\t\t\"\\xe1\\xbb\\x86\" => \"\\xe1\\xbb\\x87\",\t\t\"\\xe1\\xbb\\x88\" => \"\\xe1\\xbb\\x89\",\t\t\"\\xe1\\xbb\\x8a\" => \"\\xe1\\xbb\\x8b\",\n\t\t\"\\xe1\\xbb\\x8c\" => \"\\xe1\\xbb\\x8d\",\t\t\"\\xe1\\xbb\\x8e\" => \"\\xe1\\xbb\\x8f\",\t\t\"\\xe1\\xbb\\x90\" => \"\\xe1\\xbb\\x91\",\t\t\"\\xe1\\xbb\\x92\" => \"\\xe1\\xbb\\x93\",\n\t\t\"\\xe1\\xbb\\x94\" => \"\\xe1\\xbb\\x95\",\t\t\"\\xe1\\xbb\\x96\" => \"\\xe1\\xbb\\x97\",\t\t\"\\xe1\\xbb\\x98\" => \"\\xe1\\xbb\\x99\",\t\t\"\\xe1\\xbb\\x9a\" => \"\\xe1\\xbb\\x9b\",\n\t\t\"\\xe1\\xbb\\x9c\" => \"\\xe1\\xbb\\x9d\",\t\t\"\\xe1\\xbb\\x9e\" => \"\\xe1\\xbb\\x9f\",\t\t\"\\xe1\\xbb\\xa0\" => \"\\xe1\\xbb\\xa1\",\t\t\"\\xe1\\xbb\\xa2\" => \"\\xe1\\xbb\\xa3\",\n\t\t\"\\xe1\\xbb\\xa4\" => \"\\xe1\\xbb\\xa5\",\t\t\"\\xe1\\xbb\\xa6\" => \"\\xe1\\xbb\\xa7\",\t\t\"\\xe1\\xbb\\xa8\" => \"\\xe1\\xbb\\xa9\",\t\t\"\\xe1\\xbb\\xaa\" => \"\\xe1\\xbb\\xab\",\n\t\t\"\\xe1\\xbb\\xac\" => \"\\xe1\\xbb\\xad\",\t\t\"\\xe1\\xbb\\xae\" => \"\\xe1\\xbb\\xaf\",\t\t\"\\xe1\\xbb\\xb0\" => \"\\xe1\\xbb\\xb1\",\t\t\"\\xe1\\xbb\\xb2\" => \"\\xe1\\xbb\\xb3\",\n\t\t\"\\xe1\\xbb\\xb4\" => \"\\xe1\\xbb\\xb5\",\t\t\"\\xe1\\xbb\\xb6\" => \"\\xe1\\xbb\\xb7\",\t\t\"\\xe1\\xbb\\xb8\" => \"\\xe1\\xbb\\xb9\",\t\t\"\\xe1\\xbc\\x88\" => \"\\xe1\\xbc\\x80\",\n\t\t\"\\xe1\\xbc\\x89\" => \"\\xe1\\xbc\\x81\",\t\t\"\\xe1\\xbc\\x8a\" => \"\\xe1\\xbc\\x82\",\t\t\"\\xe1\\xbc\\x8b\" => \"\\xe1\\xbc\\x83\",\t\t\"\\xe1\\xbc\\x8c\" => \"\\xe1\\xbc\\x84\",\n\t\t\"\\xe1\\xbc\\x8d\" => \"\\xe1\\xbc\\x85\",\t\t\"\\xe1\\xbc\\x8e\" => \"\\xe1\\xbc\\x86\",\t\t\"\\xe1\\xbc\\x8f\" => \"\\xe1\\xbc\\x87\",\t\t\"\\xe1\\xbc\\x98\" => \"\\xe1\\xbc\\x90\",\n\t\t\"\\xe1\\xbc\\x99\" => \"\\xe1\\xbc\\x91\",\t\t\"\\xe1\\xbc\\x9a\" => \"\\xe1\\xbc\\x92\",\t\t\"\\xe1\\xbc\\x9b\" => \"\\xe1\\xbc\\x93\",\t\t\"\\xe1\\xbc\\x9c\" => \"\\xe1\\xbc\\x94\",\n\t\t\"\\xe1\\xbc\\x9d\" => \"\\xe1\\xbc\\x95\",\t\t\"\\xe1\\xbc\\xa8\" => \"\\xe1\\xbc\\xa0\",\t\t\"\\xe1\\xbc\\xa9\" => \"\\xe1\\xbc\\xa1\",\t\t\"\\xe1\\xbc\\xaa\" => \"\\xe1\\xbc\\xa2\",\n\t\t\"\\xe1\\xbc\\xab\" => \"\\xe1\\xbc\\xa3\",\t\t\"\\xe1\\xbc\\xac\" => \"\\xe1\\xbc\\xa4\",\t\t\"\\xe1\\xbc\\xad\" => \"\\xe1\\xbc\\xa5\",\t\t\"\\xe1\\xbc\\xae\" => \"\\xe1\\xbc\\xa6\",\n\t\t\"\\xe1\\xbc\\xaf\" => \"\\xe1\\xbc\\xa7\",\t\t\"\\xe1\\xbc\\xb8\" => \"\\xe1\\xbc\\xb0\",\t\t\"\\xe1\\xbc\\xb9\" => \"\\xe1\\xbc\\xb1\",\t\t\"\\xe1\\xbc\\xba\" => \"\\xe1\\xbc\\xb2\",\n\t\t\"\\xe1\\xbc\\xbb\" => \"\\xe1\\xbc\\xb3\",\t\t\"\\xe1\\xbc\\xbc\" => \"\\xe1\\xbc\\xb4\",\t\t\"\\xe1\\xbc\\xbd\" => \"\\xe1\\xbc\\xb5\",\t\t\"\\xe1\\xbc\\xbe\" => \"\\xe1\\xbc\\xb6\",\n\t\t\"\\xe1\\xbc\\xbf\" => \"\\xe1\\xbc\\xb7\",\t\t\"\\xe1\\xbd\\x88\" => \"\\xe1\\xbd\\x80\",\t\t\"\\xe1\\xbd\\x89\" => \"\\xe1\\xbd\\x81\",\t\t\"\\xe1\\xbd\\x8a\" => \"\\xe1\\xbd\\x82\",\n\t\t\"\\xe1\\xbd\\x8b\" => \"\\xe1\\xbd\\x83\",\t\t\"\\xe1\\xbd\\x8c\" => \"\\xe1\\xbd\\x84\",\t\t\"\\xe1\\xbd\\x8d\" => \"\\xe1\\xbd\\x85\",\t\t\"\\xe1\\xbd\\x90\" => \"\\xcf\\x85\\xcc\\x93\",\n\t\t\"\\xe1\\xbd\\x92\" => \"\\xcf\\x85\\xcc\\x93\\xcc\\x80\",\t\"\\xe1\\xbd\\x94\" => \"\\xcf\\x85\\xcc\\x93\\xcc\\x81\",\t\"\\xe1\\xbd\\x96\" => \"\\xcf\\x85\\xcc\\x93\\xcd\\x82\",\t\t\"\\xe1\\xbd\\x99\" => \"\\xe1\\xbd\\x91\",\n\t\t\"\\xe1\\xbd\\x9b\" => \"\\xe1\\xbd\\x93\",\t\t\"\\xe1\\xbd\\x9d\" => \"\\xe1\\xbd\\x95\",\t\t\"\\xe1\\xbd\\x9f\" => \"\\xe1\\xbd\\x97\",\t\t\"\\xe1\\xbd\\xa8\" => \"\\xe1\\xbd\\xa0\",\n\t\t\"\\xe1\\xbd\\xa9\" => \"\\xe1\\xbd\\xa1\",\t\t\"\\xe1\\xbd\\xaa\" => \"\\xe1\\xbd\\xa2\",\t\t\"\\xe1\\xbd\\xab\" => \"\\xe1\\xbd\\xa3\",\t\t\"\\xe1\\xbd\\xac\" => \"\\xe1\\xbd\\xa4\",\n\t\t\"\\xe1\\xbd\\xad\" => \"\\xe1\\xbd\\xa5\",\t\t\"\\xe1\\xbd\\xae\" => \"\\xe1\\xbd\\xa6\",\t\t\"\\xe1\\xbd\\xaf\" => \"\\xe1\\xbd\\xa7\",\t\t\"\\xe1\\xbe\\x80\" => \"\\xe1\\xbc\\x80\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\x81\" => \"\\xe1\\xbc\\x81\\xce\\xb9\",\t\"\\xe1\\xbe\\x82\" => \"\\xe1\\xbc\\x82\\xce\\xb9\",\t\"\\xe1\\xbe\\x83\" => \"\\xe1\\xbc\\x83\\xce\\xb9\",\t\"\\xe1\\xbe\\x84\" => \"\\xe1\\xbc\\x84\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\x85\" => \"\\xe1\\xbc\\x85\\xce\\xb9\",\t\"\\xe1\\xbe\\x86\" => \"\\xe1\\xbc\\x86\\xce\\xb9\",\t\"\\xe1\\xbe\\x87\" => \"\\xe1\\xbc\\x87\\xce\\xb9\",\t\"\\xe1\\xbe\\x88\" => \"\\xe1\\xbe\\x80\",\n\t\t\"\\xe1\\xbe\\x89\" => \"\\xe1\\xbe\\x81\",\t\t\"\\xe1\\xbe\\x8a\" => \"\\xe1\\xbe\\x82\",\t\t\"\\xe1\\xbe\\x8b\" => \"\\xe1\\xbe\\x83\",\t\t\"\\xe1\\xbe\\x8c\" => \"\\xe1\\xbe\\x84\",\n\t\t\"\\xe1\\xbe\\x8d\" => \"\\xe1\\xbe\\x85\",\t\t\"\\xe1\\xbe\\x8e\" => \"\\xe1\\xbe\\x86\",\t\t\"\\xe1\\xbe\\x8f\" => \"\\xe1\\xbe\\x87\",\t\t\"\\xe1\\xbe\\x90\" => \"\\xe1\\xbc\\xa0\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\x91\" => \"\\xe1\\xbc\\xa1\\xce\\xb9\",\t\"\\xe1\\xbe\\x92\" => \"\\xe1\\xbc\\xa2\\xce\\xb9\",\t\"\\xe1\\xbe\\x93\" => \"\\xe1\\xbc\\xa3\\xce\\xb9\",\t\"\\xe1\\xbe\\x94\" => \"\\xe1\\xbc\\xa4\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\x95\" => \"\\xe1\\xbc\\xa5\\xce\\xb9\",\t\"\\xe1\\xbe\\x96\" => \"\\xe1\\xbc\\xa6\\xce\\xb9\",\t\"\\xe1\\xbe\\x97\" => \"\\xe1\\xbc\\xa7\\xce\\xb9\",\t\"\\xe1\\xbe\\x98\" => \"\\xe1\\xbe\\x90\",\n\t\t\"\\xe1\\xbe\\x99\" => \"\\xe1\\xbe\\x91\",\t\t\"\\xe1\\xbe\\x9a\" => \"\\xe1\\xbe\\x92\",\t\t\"\\xe1\\xbe\\x9b\" => \"\\xe1\\xbe\\x93\",\t\t\"\\xe1\\xbe\\x9c\" => \"\\xe1\\xbe\\x94\",\n\t\t\"\\xe1\\xbe\\x9d\" => \"\\xe1\\xbe\\x95\",\t\t\"\\xe1\\xbe\\x9e\" => \"\\xe1\\xbe\\x96\",\t\t\"\\xe1\\xbe\\x9f\" => \"\\xe1\\xbe\\x97\",\t\t\"\\xe1\\xbe\\xa0\" => \"\\xe1\\xbd\\xa0\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\xa1\" => \"\\xe1\\xbd\\xa1\\xce\\xb9\",\t\"\\xe1\\xbe\\xa2\" => \"\\xe1\\xbd\\xa2\\xce\\xb9\",\t\"\\xe1\\xbe\\xa3\" => \"\\xe1\\xbd\\xa3\\xce\\xb9\",\t\"\\xe1\\xbe\\xa4\" => \"\\xe1\\xbd\\xa4\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\xa5\" => \"\\xe1\\xbd\\xa5\\xce\\xb9\",\t\"\\xe1\\xbe\\xa6\" => \"\\xe1\\xbd\\xa6\\xce\\xb9\",\t\"\\xe1\\xbe\\xa7\" => \"\\xe1\\xbd\\xa7\\xce\\xb9\",\t\"\\xe1\\xbe\\xa8\" => \"\\xe1\\xbe\\xa0\",\n\t\t\"\\xe1\\xbe\\xa9\" => \"\\xe1\\xbe\\xa1\",\t\t\"\\xe1\\xbe\\xaa\" => \"\\xe1\\xbe\\xa2\",\t\t\"\\xe1\\xbe\\xab\" => \"\\xe1\\xbe\\xa3\",\t\t\"\\xe1\\xbe\\xac\" => \"\\xe1\\xbe\\xa4\",\n\t\t\"\\xe1\\xbe\\xad\" => \"\\xe1\\xbe\\xa5\",\t\t\"\\xe1\\xbe\\xae\" => \"\\xe1\\xbe\\xa6\",\t\t\"\\xe1\\xbe\\xaf\" => \"\\xe1\\xbe\\xa7\",\t\t\"\\xe1\\xbe\\xb2\" => \"\\xe1\\xbd\\xb0\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\xb3\" => \"\\xce\\xb1\\xce\\xb9\",\t\"\\xe1\\xbe\\xb4\" => \"\\xce\\xac\\xce\\xb9\",\t\"\\xe1\\xbe\\xb6\" => \"\\xce\\xb1\\xcd\\x82\",\t\t\"\\xe1\\xbe\\xb7\" => \"\\xce\\xb1\\xcd\\x82\\xce\\xb9\",\n\t\t\"\\xe1\\xbe\\xb8\" => \"\\xe1\\xbe\\xb0\",\t\t\"\\xe1\\xbe\\xb9\" => \"\\xe1\\xbe\\xb1\",\t\t\"\\xe1\\xbe\\xba\" => \"\\xe1\\xbd\\xb0\",\t\t\"\\xe1\\xbe\\xbb\" => \"\\xe1\\xbd\\xb1\",\n\t\t\"\\xe1\\xbe\\xbc\" => \"\\xe1\\xbe\\xb3\",\t\t\"\\xe1\\xbe\\xbe\" => \"\\xce\\xb9\",\t\t\"\\xe1\\xbf\\x82\" => \"\\xe1\\xbd\\xb4\\xce\\xb9\",\t\"\\xe1\\xbf\\x83\" => \"\\xce\\xb7\\xce\\xb9\",\n\t\t\"\\xe1\\xbf\\x84\" => \"\\xce\\xae\\xce\\xb9\",\t\"\\xe1\\xbf\\x86\" => \"\\xce\\xb7\\xcd\\x82\",\t\t\"\\xe1\\xbf\\x87\" => \"\\xce\\xb7\\xcd\\x82\\xce\\xb9\",\t\"\\xe1\\xbf\\x88\" => \"\\xe1\\xbd\\xb2\",\n\t\t\"\\xe1\\xbf\\x89\" => \"\\xe1\\xbd\\xb3\",\t\t\"\\xe1\\xbf\\x8a\" => \"\\xe1\\xbd\\xb4\",\t\t\"\\xe1\\xbf\\x8b\" => \"\\xe1\\xbd\\xb5\",\t\t\"\\xe1\\xbf\\x8c\" => \"\\xe1\\xbf\\x83\",\n\t\t\"\\xe1\\xbf\\x92\" => \"\\xce\\xb9\\xcc\\x88\\xcc\\x80\",\t\"\\xe1\\xbf\\x93\" => \"\\xce\\xb9\\xcc\\x88\\xcc\\x81\",\t\"\\xe1\\xbf\\x96\" => \"\\xce\\xb9\\xcd\\x82\",\t\t\"\\xe1\\xbf\\x97\" => \"\\xce\\xb9\\xcc\\x88\\xcd\\x82\",\n\t\t\"\\xe1\\xbf\\x98\" => \"\\xe1\\xbf\\x90\",\t\t\"\\xe1\\xbf\\x99\" => \"\\xe1\\xbf\\x91\",\t\t\"\\xe1\\xbf\\x9a\" => \"\\xe1\\xbd\\xb6\",\t\t\"\\xe1\\xbf\\x9b\" => \"\\xe1\\xbd\\xb7\",\n\t\t\"\\xe1\\xbf\\xa2\" => \"\\xcf\\x85\\xcc\\x88\\xcc\\x80\",\t\"\\xe1\\xbf\\xa3\" => \"\\xcf\\x85\\xcc\\x88\\xcc\\x81\",\t\"\\xe1\\xbf\\xa4\" => \"\\xcf\\x81\\xcc\\x93\",\t\t\"\\xe1\\xbf\\xa6\" => \"\\xcf\\x85\\xcd\\x82\",\n\t\t\"\\xe1\\xbf\\xa7\" => \"\\xcf\\x85\\xcc\\x88\\xcd\\x82\",\t\t\"\\xe1\\xbf\\xa8\" => \"\\xe1\\xbf\\xa0\",\t\t\"\\xe1\\xbf\\xa9\" => \"\\xe1\\xbf\\xa1\",\t\t\"\\xe1\\xbf\\xaa\" => \"\\xe1\\xbd\\xba\",\n\t\t\"\\xe1\\xbf\\xab\" => \"\\xe1\\xbd\\xbb\",\t\t\"\\xe1\\xbf\\xac\" => \"\\xe1\\xbf\\xa5\",\t\t\"\\xe1\\xbf\\xb2\" => \"\\xe1\\xbd\\xbc\\xce\\xb9\",\t\"\\xe1\\xbf\\xb3\" => \"\\xcf\\x89\\xce\\xb9\",\n\t\t\"\\xe1\\xbf\\xb4\" => \"\\xcf\\x8e\\xce\\xb9\",\t\"\\xe1\\xbf\\xb6\" => \"\\xcf\\x89\\xcd\\x82\",\t\t\"\\xe1\\xbf\\xb7\" => \"\\xcf\\x89\\xcd\\x82\\xce\\xb9\",\t\"\\xe1\\xbf\\xb8\" => \"\\xe1\\xbd\\xb8\",\n\t\t\"\\xe1\\xbf\\xb9\" => \"\\xe1\\xbd\\xb9\",\t\t\"\\xe1\\xbf\\xba\" => \"\\xe1\\xbd\\xbc\",\t\t\"\\xe1\\xbf\\xbb\" => \"\\xe1\\xbd\\xbd\",\t\t\"\\xe1\\xbf\\xbc\" => \"\\xe1\\xbf\\xb3\",\n\t\t\"\\xe2\\x84\\xa6\" => \"\\xcf\\x89\",\t\t\"\\xe2\\x84\\xaa\" => \"k\",\t\t\"\\xe2\\x84\\xab\" => \"\\xc3\\xa5\",\t\t\"\\xe2\\x84\\xb2\" => \"\\xe2\\x85\\x8e\",\n\t\t\"\\xe2\\x85\\xa0\" => \"\\xe2\\x85\\xb0\",\t\t\"\\xe2\\x85\\xa1\" => \"\\xe2\\x85\\xb1\",\t\t\"\\xe2\\x85\\xa2\" => \"\\xe2\\x85\\xb2\",\t\t\"\\xe2\\x85\\xa3\" => \"\\xe2\\x85\\xb3\",\n\t\t\"\\xe2\\x85\\xa4\" => \"\\xe2\\x85\\xb4\",\t\t\"\\xe2\\x85\\xa5\" => \"\\xe2\\x85\\xb5\",\t\t\"\\xe2\\x85\\xa6\" => \"\\xe2\\x85\\xb6\",\t\t\"\\xe2\\x85\\xa7\" => \"\\xe2\\x85\\xb7\",\n\t\t\"\\xe2\\x85\\xa8\" => \"\\xe2\\x85\\xb8\",\t\t\"\\xe2\\x85\\xa9\" => \"\\xe2\\x85\\xb9\",\t\t\"\\xe2\\x85\\xaa\" => \"\\xe2\\x85\\xba\",\t\t\"\\xe2\\x85\\xab\" => \"\\xe2\\x85\\xbb\",\n\t\t\"\\xe2\\x85\\xac\" => \"\\xe2\\x85\\xbc\",\t\t\"\\xe2\\x85\\xad\" => \"\\xe2\\x85\\xbd\",\t\t\"\\xe2\\x85\\xae\" => \"\\xe2\\x85\\xbe\",\t\t\"\\xe2\\x85\\xaf\" => \"\\xe2\\x85\\xbf\",\n\t\t\"\\xe2\\x86\\x83\" => \"\\xe2\\x86\\x84\",\t\t\"\\xe2\\x92\\xb6\" => \"\\xe2\\x93\\x90\",\t\t\"\\xe2\\x92\\xb7\" => \"\\xe2\\x93\\x91\",\t\t\"\\xe2\\x92\\xb8\" => \"\\xe2\\x93\\x92\",\n\t\t\"\\xe2\\x92\\xb9\" => \"\\xe2\\x93\\x93\",\t\t\"\\xe2\\x92\\xba\" => \"\\xe2\\x93\\x94\",\t\t\"\\xe2\\x92\\xbb\" => \"\\xe2\\x93\\x95\",\t\t\"\\xe2\\x92\\xbc\" => \"\\xe2\\x93\\x96\",\n\t\t\"\\xe2\\x92\\xbd\" => \"\\xe2\\x93\\x97\",\t\t\"\\xe2\\x92\\xbe\" => \"\\xe2\\x93\\x98\",\t\t\"\\xe2\\x92\\xbf\" => \"\\xe2\\x93\\x99\",\t\t\"\\xe2\\x93\\x80\" => \"\\xe2\\x93\\x9a\",\n\t\t\"\\xe2\\x93\\x81\" => \"\\xe2\\x93\\x9b\",\t\t\"\\xe2\\x93\\x82\" => \"\\xe2\\x93\\x9c\",\t\t\"\\xe2\\x93\\x83\" => \"\\xe2\\x93\\x9d\",\t\t\"\\xe2\\x93\\x84\" => \"\\xe2\\x93\\x9e\",\n\t\t\"\\xe2\\x93\\x85\" => \"\\xe2\\x93\\x9f\",\t\t\"\\xe2\\x93\\x86\" => \"\\xe2\\x93\\xa0\",\t\t\"\\xe2\\x93\\x87\" => \"\\xe2\\x93\\xa1\",\t\t\"\\xe2\\x93\\x88\" => \"\\xe2\\x93\\xa2\",\n\t\t\"\\xe2\\x93\\x89\" => \"\\xe2\\x93\\xa3\",\t\t\"\\xe2\\x93\\x8a\" => \"\\xe2\\x93\\xa4\",\t\t\"\\xe2\\x93\\x8b\" => \"\\xe2\\x93\\xa5\",\t\t\"\\xe2\\x93\\x8c\" => \"\\xe2\\x93\\xa6\",\n\t\t\"\\xe2\\x93\\x8d\" => \"\\xe2\\x93\\xa7\",\t\t\"\\xe2\\x93\\x8e\" => \"\\xe2\\x93\\xa8\",\t\t\"\\xe2\\x93\\x8f\" => \"\\xe2\\x93\\xa9\",\t\t\"\\xe2\\xb0\\x80\" => \"\\xe2\\xb0\\xb0\",\n\t\t\"\\xe2\\xb0\\x81\" => \"\\xe2\\xb0\\xb1\",\t\t\"\\xe2\\xb0\\x82\" => \"\\xe2\\xb0\\xb2\",\t\t\"\\xe2\\xb0\\x83\" => \"\\xe2\\xb0\\xb3\",\t\t\"\\xe2\\xb0\\x84\" => \"\\xe2\\xb0\\xb4\",\n\t\t\"\\xe2\\xb0\\x85\" => \"\\xe2\\xb0\\xb5\",\t\t\"\\xe2\\xb0\\x86\" => \"\\xe2\\xb0\\xb6\",\t\t\"\\xe2\\xb0\\x87\" => \"\\xe2\\xb0\\xb7\",\t\t\"\\xe2\\xb0\\x88\" => \"\\xe2\\xb0\\xb8\",\n\t\t\"\\xe2\\xb0\\x89\" => \"\\xe2\\xb0\\xb9\",\t\t\"\\xe2\\xb0\\x8a\" => \"\\xe2\\xb0\\xba\",\t\t\"\\xe2\\xb0\\x8b\" => \"\\xe2\\xb0\\xbb\",\t\t\"\\xe2\\xb0\\x8c\" => \"\\xe2\\xb0\\xbc\",\n\t\t\"\\xe2\\xb0\\x8d\" => \"\\xe2\\xb0\\xbd\",\t\t\"\\xe2\\xb0\\x8e\" => \"\\xe2\\xb0\\xbe\",\t\t\"\\xe2\\xb0\\x8f\" => \"\\xe2\\xb0\\xbf\",\t\t\"\\xe2\\xb0\\x90\" => \"\\xe2\\xb1\\x80\",\n\t\t\"\\xe2\\xb0\\x91\" => \"\\xe2\\xb1\\x81\",\t\t\"\\xe2\\xb0\\x92\" => \"\\xe2\\xb1\\x82\",\t\t\"\\xe2\\xb0\\x93\" => \"\\xe2\\xb1\\x83\",\t\t\"\\xe2\\xb0\\x94\" => \"\\xe2\\xb1\\x84\",\n\t\t\"\\xe2\\xb0\\x95\" => \"\\xe2\\xb1\\x85\",\t\t\"\\xe2\\xb0\\x96\" => \"\\xe2\\xb1\\x86\",\t\t\"\\xe2\\xb0\\x97\" => \"\\xe2\\xb1\\x87\",\t\t\"\\xe2\\xb0\\x98\" => \"\\xe2\\xb1\\x88\",\n\t\t\"\\xe2\\xb0\\x99\" => \"\\xe2\\xb1\\x89\",\t\t\"\\xe2\\xb0\\x9a\" => \"\\xe2\\xb1\\x8a\",\t\t\"\\xe2\\xb0\\x9b\" => \"\\xe2\\xb1\\x8b\",\t\t\"\\xe2\\xb0\\x9c\" => \"\\xe2\\xb1\\x8c\",\n\t\t\"\\xe2\\xb0\\x9d\" => \"\\xe2\\xb1\\x8d\",\t\t\"\\xe2\\xb0\\x9e\" => \"\\xe2\\xb1\\x8e\",\t\t\"\\xe2\\xb0\\x9f\" => \"\\xe2\\xb1\\x8f\",\t\t\"\\xe2\\xb0\\xa0\" => \"\\xe2\\xb1\\x90\",\n\t\t\"\\xe2\\xb0\\xa1\" => \"\\xe2\\xb1\\x91\",\t\t\"\\xe2\\xb0\\xa2\" => \"\\xe2\\xb1\\x92\",\t\t\"\\xe2\\xb0\\xa3\" => \"\\xe2\\xb1\\x93\",\t\t\"\\xe2\\xb0\\xa4\" => \"\\xe2\\xb1\\x94\",\n\t\t\"\\xe2\\xb0\\xa5\" => \"\\xe2\\xb1\\x95\",\t\t\"\\xe2\\xb0\\xa6\" => \"\\xe2\\xb1\\x96\",\t\t\"\\xe2\\xb0\\xa7\" => \"\\xe2\\xb1\\x97\",\t\t\"\\xe2\\xb0\\xa8\" => \"\\xe2\\xb1\\x98\",\n\t\t\"\\xe2\\xb0\\xa9\" => \"\\xe2\\xb1\\x99\",\t\t\"\\xe2\\xb0\\xaa\" => \"\\xe2\\xb1\\x9a\",\t\t\"\\xe2\\xb0\\xab\" => \"\\xe2\\xb1\\x9b\",\t\t\"\\xe2\\xb0\\xac\" => \"\\xe2\\xb1\\x9c\",\n\t\t\"\\xe2\\xb0\\xad\" => \"\\xe2\\xb1\\x9d\",\t\t\"\\xe2\\xb0\\xae\" => \"\\xe2\\xb1\\x9e\",\t\t\"\\xe2\\xb1\\xa0\" => \"\\xe2\\xb1\\xa1\",\t\t\"\\xe2\\xb1\\xa2\" => \"\\xc9\\xab\",\n\t\t\"\\xe2\\xb1\\xa3\" => \"\\xe1\\xb5\\xbd\",\t\t\"\\xe2\\xb1\\xa4\" => \"\\xc9\\xbd\",\t\t\"\\xe2\\xb1\\xa7\" => \"\\xe2\\xb1\\xa8\",\t\t\"\\xe2\\xb1\\xa9\" => \"\\xe2\\xb1\\xaa\",\n\t\t\"\\xe2\\xb1\\xab\" => \"\\xe2\\xb1\\xac\",\t\t\"\\xe2\\xb1\\xb5\" => \"\\xe2\\xb1\\xb6\",\t\t\"\\xe2\\xb2\\x80\" => \"\\xe2\\xb2\\x81\",\t\t\"\\xe2\\xb2\\x82\" => \"\\xe2\\xb2\\x83\",\n\t\t\"\\xe2\\xb2\\x84\" => \"\\xe2\\xb2\\x85\",\t\t\"\\xe2\\xb2\\x86\" => \"\\xe2\\xb2\\x87\",\t\t\"\\xe2\\xb2\\x88\" => \"\\xe2\\xb2\\x89\",\t\t\"\\xe2\\xb2\\x8a\" => \"\\xe2\\xb2\\x8b\",\n\t\t\"\\xe2\\xb2\\x8c\" => \"\\xe2\\xb2\\x8d\",\t\t\"\\xe2\\xb2\\x8e\" => \"\\xe2\\xb2\\x8f\",\t\t\"\\xe2\\xb2\\x90\" => \"\\xe2\\xb2\\x91\",\t\t\"\\xe2\\xb2\\x92\" => \"\\xe2\\xb2\\x93\",\n\t\t\"\\xe2\\xb2\\x94\" => \"\\xe2\\xb2\\x95\",\t\t\"\\xe2\\xb2\\x96\" => \"\\xe2\\xb2\\x97\",\t\t\"\\xe2\\xb2\\x98\" => \"\\xe2\\xb2\\x99\",\t\t\"\\xe2\\xb2\\x9a\" => \"\\xe2\\xb2\\x9b\",\n\t\t\"\\xe2\\xb2\\x9c\" => \"\\xe2\\xb2\\x9d\",\t\t\"\\xe2\\xb2\\x9e\" => \"\\xe2\\xb2\\x9f\",\t\t\"\\xe2\\xb2\\xa0\" => \"\\xe2\\xb2\\xa1\",\t\t\"\\xe2\\xb2\\xa2\" => \"\\xe2\\xb2\\xa3\",\n\t\t\"\\xe2\\xb2\\xa4\" => \"\\xe2\\xb2\\xa5\",\t\t\"\\xe2\\xb2\\xa6\" => \"\\xe2\\xb2\\xa7\",\t\t\"\\xe2\\xb2\\xa8\" => \"\\xe2\\xb2\\xa9\",\t\t\"\\xe2\\xb2\\xaa\" => \"\\xe2\\xb2\\xab\",\n\t\t\"\\xe2\\xb2\\xac\" => \"\\xe2\\xb2\\xad\",\t\t\"\\xe2\\xb2\\xae\" => \"\\xe2\\xb2\\xaf\",\t\t\"\\xe2\\xb2\\xb0\" => \"\\xe2\\xb2\\xb1\",\t\t\"\\xe2\\xb2\\xb2\" => \"\\xe2\\xb2\\xb3\",\n\t\t\"\\xe2\\xb2\\xb4\" => \"\\xe2\\xb2\\xb5\",\t\t\"\\xe2\\xb2\\xb6\" => \"\\xe2\\xb2\\xb7\",\t\t\"\\xe2\\xb2\\xb8\" => \"\\xe2\\xb2\\xb9\",\t\t\"\\xe2\\xb2\\xba\" => \"\\xe2\\xb2\\xbb\",\n\t\t\"\\xe2\\xb2\\xbc\" => \"\\xe2\\xb2\\xbd\",\t\t\"\\xe2\\xb2\\xbe\" => \"\\xe2\\xb2\\xbf\",\t\t\"\\xe2\\xb3\\x80\" => \"\\xe2\\xb3\\x81\",\t\t\"\\xe2\\xb3\\x82\" => \"\\xe2\\xb3\\x83\",\n\t\t\"\\xe2\\xb3\\x84\" => \"\\xe2\\xb3\\x85\",\t\t\"\\xe2\\xb3\\x86\" => \"\\xe2\\xb3\\x87\",\t\t\"\\xe2\\xb3\\x88\" => \"\\xe2\\xb3\\x89\",\t\t\"\\xe2\\xb3\\x8a\" => \"\\xe2\\xb3\\x8b\",\n\t\t\"\\xe2\\xb3\\x8c\" => \"\\xe2\\xb3\\x8d\",\t\t\"\\xe2\\xb3\\x8e\" => \"\\xe2\\xb3\\x8f\",\t\t\"\\xe2\\xb3\\x90\" => \"\\xe2\\xb3\\x91\",\t\t\"\\xe2\\xb3\\x92\" => \"\\xe2\\xb3\\x93\",\n\t\t\"\\xe2\\xb3\\x94\" => \"\\xe2\\xb3\\x95\",\t\t\"\\xe2\\xb3\\x96\" => \"\\xe2\\xb3\\x97\",\t\t\"\\xe2\\xb3\\x98\" => \"\\xe2\\xb3\\x99\",\t\t\"\\xe2\\xb3\\x9a\" => \"\\xe2\\xb3\\x9b\",\n\t\t\"\\xe2\\xb3\\x9c\" => \"\\xe2\\xb3\\x9d\",\t\t\"\\xe2\\xb3\\x9e\" => \"\\xe2\\xb3\\x9f\",\t\t\"\\xe2\\xb3\\xa0\" => \"\\xe2\\xb3\\xa1\",\t\t\"\\xe2\\xb3\\xa2\" => \"\\xe2\\xb3\\xa3\",\n\t\t\"\\xef\\xac\\x80\" => \"ff\",\t\"\\xef\\xac\\x81\" => \"fi\",\t\"\\xef\\xac\\x82\" => \"fl\",\t\"\\xef\\xac\\x83\" => \"ffi\",\n\t\t\"\\xef\\xac\\x84\" => \"ffl\",\t\"\\xef\\xac\\x85\" => \"st\",\t\"\\xef\\xac\\x86\" => \"st\",\t\"\\xef\\xac\\x93\" => \"\\xd5\\xb4\\xd5\\xb6\",\n\t\t\"\\xef\\xac\\x94\" => \"\\xd5\\xb4\\xd5\\xa5\",\t\"\\xef\\xac\\x95\" => \"\\xd5\\xb4\\xd5\\xab\",\t\"\\xef\\xac\\x96\" => \"\\xd5\\xbe\\xd5\\xb6\",\t\"\\xef\\xac\\x97\" => \"\\xd5\\xb4\\xd5\\xad\",\n\t\t\"\\xef\\xbc\\xa1\" => \"\\xef\\xbd\\x81\",\t\t\"\\xef\\xbc\\xa2\" => \"\\xef\\xbd\\x82\",\t\t\"\\xef\\xbc\\xa3\" => \"\\xef\\xbd\\x83\",\t\t\"\\xef\\xbc\\xa4\" => \"\\xef\\xbd\\x84\",\n\t\t\"\\xef\\xbc\\xa5\" => \"\\xef\\xbd\\x85\",\t\t\"\\xef\\xbc\\xa6\" => \"\\xef\\xbd\\x86\",\t\t\"\\xef\\xbc\\xa7\" => \"\\xef\\xbd\\x87\",\t\t\"\\xef\\xbc\\xa8\" => \"\\xef\\xbd\\x88\",\n\t\t\"\\xef\\xbc\\xa9\" => \"\\xef\\xbd\\x89\",\t\t\"\\xef\\xbc\\xaa\" => \"\\xef\\xbd\\x8a\",\t\t\"\\xef\\xbc\\xab\" => \"\\xef\\xbd\\x8b\",\t\t\"\\xef\\xbc\\xac\" => \"\\xef\\xbd\\x8c\",\n\t\t\"\\xef\\xbc\\xad\" => \"\\xef\\xbd\\x8d\",\t\"\\xef\\xbc\\xae\" => \"\\xef\\xbd\\x8e\",\t\t\"\\xef\\xbc\\xaf\" => \"\\xef\\xbd\\x8f\",\t\t\"\\xef\\xbc\\xb0\" => \"\\xef\\xbd\\x90\",\n\t\t\"\\xef\\xbc\\xb1\" => \"\\xef\\xbd\\x91\",\t\t\"\\xef\\xbc\\xb2\" => \"\\xef\\xbd\\x92\",\t\t\"\\xef\\xbc\\xb3\" => \"\\xef\\xbd\\x93\",\t\t\"\\xef\\xbc\\xb4\" => \"\\xef\\xbd\\x94\",\n\t\t\"\\xef\\xbc\\xb5\" => \"\\xef\\xbd\\x95\",\t\t\"\\xef\\xbc\\xb6\" => \"\\xef\\xbd\\x96\",\t\t\"\\xef\\xbc\\xb7\" => \"\\xef\\xbd\\x97\",\t\"\\xef\\xbc\\xb8\" => \"\\xef\\xbd\\x98\",\n\t\t\"\\xef\\xbc\\xb9\" => \"\\xef\\xbd\\x99\",\t\t\"\\xef\\xbc\\xba\" => \"\\xef\\xbd\\x9a\",\t\t\"\\xf0\\x90\\x90\\x80\" => \"\\xf0\\x90\\x90\\xa8\",\t\"\\xf0\\x90\\x90\\x81\" => \"\\xf0\\x90\\x90\\xa9\",\n\t\t\"\\xf0\\x90\\x90\\x82\" => \"\\xf0\\x90\\x90\\xaa\",\t\"\\xf0\\x90\\x90\\x83\" => \"\\xf0\\x90\\x90\\xab\",\t\"\\xf0\\x90\\x90\\x84\" => \"\\xf0\\x90\\x90\\xac\",\t\"\\xf0\\x90\\x90\\x85\" => \"\\xf0\\x90\\x90\\xad\",\n\t\t\"\\xf0\\x90\\x90\\x86\" => \"\\xf0\\x90\\x90\\xae\",\t\"\\xf0\\x90\\x90\\x87\" => \"\\xf0\\x90\\x90\\xaf\",\t\"\\xf0\\x90\\x90\\x88\" => \"\\xf0\\x90\\x90\\xb0\",\t\"\\xf0\\x90\\x90\\x89\" => \"\\xf0\\x90\\x90\\xb1\",\n\t\t\"\\xf0\\x90\\x90\\x8a\" => \"\\xf0\\x90\\x90\\xb2\",\t\"\\xf0\\x90\\x90\\x8b\" => \"\\xf0\\x90\\x90\\xb3\",\t\"\\xf0\\x90\\x90\\x8c\" => \"\\xf0\\x90\\x90\\xb4\",\t\"\\xf0\\x90\\x90\\x8d\" => \"\\xf0\\x90\\x90\\xb5\",\n\t\t\"\\xf0\\x90\\x90\\x8e\" => \"\\xf0\\x90\\x90\\xb6\",\t\"\\xf0\\x90\\x90\\x8f\" => \"\\xf0\\x90\\x90\\xb7\",\t\"\\xf0\\x90\\x90\\x90\" => \"\\xf0\\x90\\x90\\xb8\",\t\"\\xf0\\x90\\x90\\x91\" => \"\\xf0\\x90\\x90\\xb9\",\n\t\t\"\\xf0\\x90\\x90\\x92\" => \"\\xf0\\x90\\x90\\xba\",\t\"\\xf0\\x90\\x90\\x93\" => \"\\xf0\\x90\\x90\\xbb\",\t\"\\xf0\\x90\\x90\\x94\" => \"\\xf0\\x90\\x90\\xbc\",\t\"\\xf0\\x90\\x90\\x95\" => \"\\xf0\\x90\\x90\\xbd\",\n\t\t\"\\xf0\\x90\\x90\\x96\" => \"\\xf0\\x90\\x90\\xbe\",\t\"\\xf0\\x90\\x90\\x97\" => \"\\xf0\\x90\\x90\\xbf\",\t\"\\xf0\\x90\\x90\\x98\" => \"\\xf0\\x90\\x91\\x80\",\t\"\\xf0\\x90\\x90\\x99\" => \"\\xf0\\x90\\x91\\x81\",\n\t\t\"\\xf0\\x90\\x90\\x9a\" => \"\\xf0\\x90\\x91\\x82\",\t\"\\xf0\\x90\\x90\\x9b\" => \"\\xf0\\x90\\x91\\x83\",\t\"\\xf0\\x90\\x90\\x9c\" => \"\\xf0\\x90\\x91\\x84\",\t\"\\xf0\\x90\\x90\\x9d\" => \"\\xf0\\x90\\x91\\x85\",\n\t\t\"\\xf0\\x90\\x90\\x9e\" => \"\\xf0\\x90\\x91\\x86\",\t\"\\xf0\\x90\\x90\\x9f\" => \"\\xf0\\x90\\x91\\x87\",\t\"\\xf0\\x90\\x90\\xa0\" => \"\\xf0\\x90\\x91\\x88\",\t\"\\xf0\\x90\\x90\\xa1\" => \"\\xf0\\x90\\x91\\x89\",\n\t\t\"\\xf0\\x90\\x90\\xa2\" => \"\\xf0\\x90\\x91\\x8a\",\t\"\\xf0\\x90\\x90\\xa3\" => \"\\xf0\\x90\\x91\\x8b\",\t\"\\xf0\\x90\\x90\\xa4\" => \"\\xf0\\x90\\x91\\x8c\",\t\"\\xf0\\x90\\x90\\xa5\" => \"\\xf0\\x90\\x91\\x8d\",\n\t\t\"\\xf0\\x90\\x91\\x8e\" => \"\\xf0\\x90\\x90\\xa6\",\t\"\\xf0\\x90\\x91\\x8f\" => \"\\xf0\\x90\\x90\\xa7\",\n\t);\n\n\treturn strtr($string, $case_folding);\n}\n\n// Convert the given UTF-8 string to uppercase.\n/**\n * Convert the given UTF-8 string to uppercase.\n * equivalent to mb_strtoupper($string, 'UTF-8')\n *\n * @param string $string The string\n * @return string The uppercase version of $string\n */\nfunction utf8_strtoupper($string)\n{\n\tstatic $case_folding = array(\n\t\t'a' => 'A',\t\t'b' => 'B',\t\t'c' => 'C',\t\t'd' => 'D',\n\t\t'e' => 'E',\t\t'f' => 'F',\t\t'g' => 'G',\t\t'h' => 'H',\n\t\t'i' => 'I',\t\t'j' => 'J',\t\t'k' => 'K',\t\t'l' => 'L',\n\t\t'm' => 'M',\t\t'n' => 'N',\t\t'o' => 'O',\t\t'p' => 'P',\n\t\t'q' => 'Q',\t\t'r' => 'R',\t\t's' => 'S',\t\t't' => 'T',\n\t\t'u' => 'U',\t\t'v' => 'V',\t\t'w' => 'W',\t\t'x' => 'X',\n\t\t'y' => 'Y',\t\t'z' => 'Z',\t\t\"\\xce\\xbc\" => \"\\xc2\\xb5\",\t\t\"\\xc3\\xa0\" => \"\\xc3\\x80\",\n\t\t\"\\xc3\\xa1\" => \"\\xc3\\x81\",\t\t\"\\xc3\\xa2\" => \"\\xc3\\x82\",\t\t\"\\xc3\\xa3\" => \"\\xc3\\x83\",\t\t\"\\xc3\\xa4\" => \"\\xc3\\x84\",\n\t\t\"\\xc3\\xa5\" => \"\\xc3\\x85\",\t\t\"\\xc3\\xa6\" => \"\\xc3\\x86\",\t\t\"\\xc3\\xa7\" => \"\\xc3\\x87\",\t\t\"\\xc3\\xa8\" => \"\\xc3\\x88\",\n\t\t\"\\xc3\\xa9\" => \"\\xc3\\x89\",\t\t\"\\xc3\\xaa\" => \"\\xc3\\x8a\",\t\t\"\\xc3\\xab\" => \"\\xc3\\x8b\",\t\t\"\\xc3\\xac\" => \"\\xc3\\x8c\",\n\t\t\"\\xc3\\xad\" => \"\\xc3\\x8d\",\t\t\"\\xc3\\xae\" => \"\\xc3\\x8e\",\t\t\"\\xc3\\xaf\" => \"\\xc3\\x8f\",\t\t\"\\xc3\\xb0\" => \"\\xc3\\x90\",\n\t\t\"\\xc3\\xb1\" => \"\\xc3\\x91\",\t\t\"\\xc3\\xb2\" => \"\\xc3\\x92\",\t\t\"\\xc3\\xb3\" => \"\\xc3\\x93\",\t\t\"\\xc3\\xb4\" => \"\\xc3\\x94\",\n\t\t\"\\xc3\\xb5\" => \"\\xc3\\x95\",\t\t\"\\xc3\\xb6\" => \"\\xc3\\x96\",\t\t\"\\xc3\\xb8\" => \"\\xc3\\x98\",\t\t\"\\xc3\\xb9\" => \"\\xc3\\x99\",\n\t\t\"\\xc3\\xba\" => \"\\xc3\\x9a\",\t\t\"\\xc3\\xbb\" => \"\\xc3\\x9b\",\t\t\"\\xc3\\xbc\" => \"\\xc3\\x9c\",\t\t\"\\xc3\\xbd\" => \"\\xc3\\x9d\",\n\t\t\"\\xc3\\xbe\" => \"\\xc3\\x9e\",\t\t\"ss\" => \"\\xc3\\x9f\",\t\"\\xc4\\x81\" => \"\\xc4\\x80\",\t\t\"\\xc4\\x83\" => \"\\xc4\\x82\",\n\t\t\"\\xc4\\x85\" => \"\\xc4\\x84\",\t\t\"\\xc4\\x87\" => \"\\xc4\\x86\",\t\t\"\\xc4\\x89\" => \"\\xc4\\x88\",\t\t\"\\xc4\\x8b\" => \"\\xc4\\x8a\",\n\t\t\"\\xc4\\x8d\" => \"\\xc4\\x8c\",\t\t\"\\xc4\\x8f\" => \"\\xc4\\x8e\",\t\t\"\\xc4\\x91\" => \"\\xc4\\x90\",\t\t\"\\xc4\\x93\" => \"\\xc4\\x92\",\n\t\t\"\\xc4\\x95\" => \"\\xc4\\x94\",\t\t\"\\xc4\\x97\" => \"\\xc4\\x96\",\t\t\"\\xc4\\x99\" => \"\\xc4\\x98\",\t\t\"\\xc4\\x9b\" => \"\\xc4\\x9a\",\n\t\t\"\\xc4\\x9d\" => \"\\xc4\\x9c\",\t\t\"\\xc4\\x9f\" => \"\\xc4\\x9e\",\t\t\"\\xc4\\xa1\" => \"\\xc4\\xa0\",\t\t\"\\xc4\\xa3\" => \"\\xc4\\xa2\",\n\t\t\"\\xc4\\xa5\" => \"\\xc4\\xa4\",\t\t\"\\xc4\\xa7\" => \"\\xc4\\xa6\",\t\t\"\\xc4\\xa9\" => \"\\xc4\\xa8\",\t\t\"\\xc4\\xab\" => \"\\xc4\\xaa\",\n\t\t\"\\xc4\\xad\" => \"\\xc4\\xac\",\t\t\"\\xc4\\xaf\" => \"\\xc4\\xae\",\t\t\"i\\xcc\\x87\" => \"\\xc4\\xb0\",\t\t\"\\xc4\\xb3\" => \"\\xc4\\xb2\",\n\t\t\"\\xc4\\xb5\" => \"\\xc4\\xb4\",\t\t\"\\xc4\\xb7\" => \"\\xc4\\xb6\",\t\t\"\\xc4\\xba\" => \"\\xc4\\xb9\",\t\t\"\\xc4\\xbc\" => \"\\xc4\\xbb\",\n\t\t\"\\xc4\\xbe\" => \"\\xc4\\xbd\",\t\t\"\\xc5\\x80\" => \"\\xc4\\xbf\",\t\t\"\\xc5\\x82\" => \"\\xc5\\x81\",\t\t\"\\xc5\\x84\" => \"\\xc5\\x83\",\n\t\t\"\\xc5\\x86\" => \"\\xc5\\x85\",\t\t\"\\xc5\\x88\" => \"\\xc5\\x87\",\t\t\"\\xca\\xbcn\" => \"\\xc5\\x89\",\t\"\\xc5\\x8b\" => \"\\xc5\\x8a\",\n\t\t\"\\xc5\\x8d\" => \"\\xc5\\x8c\",\t\t\"\\xc5\\x8f\" => \"\\xc5\\x8e\",\t\t\"\\xc5\\x91\" => \"\\xc5\\x90\",\t\t\"\\xc5\\x93\" => \"\\xc5\\x92\",\n\t\t\"\\xc5\\x95\" => \"\\xc5\\x94\",\t\t\"\\xc5\\x97\" => \"\\xc5\\x96\",\t\t\"\\xc5\\x99\" => \"\\xc5\\x98\",\t\t\"\\xc5\\x9b\" => \"\\xc5\\x9a\",\n\t\t\"\\xc5\\x9d\" => \"\\xc5\\x9c\",\t\t\"\\xc5\\x9f\" => \"\\xc5\\x9e\",\t\t\"\\xc5\\xa1\" => \"\\xc5\\xa0\",\t\t\"\\xc5\\xa3\" => \"\\xc5\\xa2\",\n\t\t\"\\xc5\\xa5\" => \"\\xc5\\xa4\",\t\t\"\\xc5\\xa7\" => \"\\xc5\\xa6\",\t\t\"\\xc5\\xa9\" => \"\\xc5\\xa8\",\t\t\"\\xc5\\xab\" => \"\\xc5\\xaa\",\n\t\t\"\\xc5\\xad\" => \"\\xc5\\xac\",\t\t\"\\xc5\\xaf\" => \"\\xc5\\xae\",\t\t\"\\xc5\\xb1\" => \"\\xc5\\xb0\",\t\t\"\\xc5\\xb3\" => \"\\xc5\\xb2\",\n\t\t\"\\xc5\\xb5\" => \"\\xc5\\xb4\",\t\t\"\\xc5\\xb7\" => \"\\xc5\\xb6\",\t\t\"\\xc3\\xbf\" => \"\\xc5\\xb8\",\t\t\"\\xc5\\xba\" => \"\\xc5\\xb9\",\n\t\t\"\\xc5\\xbc\" => \"\\xc5\\xbb\",\t\t\"\\xc5\\xbe\" => \"\\xc5\\xbd\",\t\t\"\\xc9\\x93\" => \"\\xc6\\x81\",\n\t\t\"\\xc6\\x83\" => \"\\xc6\\x82\",\t\t\"\\xc6\\x85\" => \"\\xc6\\x84\",\t\t\"\\xc9\\x94\" => \"\\xc6\\x86\",\t\t\"\\xc6\\x88\" => \"\\xc6\\x87\",\n\t\t\"\\xc9\\x96\" => \"\\xc6\\x89\",\t\t\"\\xc9\\x97\" => \"\\xc6\\x8a\",\t\t\"\\xc6\\x8c\" => \"\\xc6\\x8b\",\t\t\"\\xc7\\x9d\" => \"\\xc6\\x8e\",\n\t\t\"\\xc9\\x99\" => \"\\xc6\\x8f\",\t\t\"\\xc9\\x9b\" => \"\\xc6\\x90\",\t\t\"\\xc6\\x92\" => \"\\xc6\\x91\",\t\t\"\\xc9\\xa0\" => \"\\xc6\\x93\",\n\t\t\"\\xc9\\xa3\" => \"\\xc6\\x94\",\t\t\"\\xc9\\xa9\" => \"\\xc6\\x96\",\t\t\"\\xc9\\xa8\" => \"\\xc6\\x97\",\t\t\"\\xc6\\x99\" => \"\\xc6\\x98\",\n\t\t\"\\xc9\\xaf\" => \"\\xc6\\x9c\",\t\t\"\\xc9\\xb2\" => \"\\xc6\\x9d\",\t\t\"\\xc9\\xb5\" => \"\\xc6\\x9f\",\t\t\"\\xc6\\xa1\" => \"\\xc6\\xa0\",\n\t\t\"\\xc6\\xa3\" => \"\\xc6\\xa2\",\t\t\"\\xc6\\xa5\" => \"\\xc6\\xa4\",\t\t\"\\xca\\x80\" => \"\\xc6\\xa6\",\t\t\"\\xc6\\xa8\" => \"\\xc6\\xa7\",\n\t\t\"\\xca\\x83\" => \"\\xc6\\xa9\",\t\t\"\\xc6\\xad\" => \"\\xc6\\xac\",\t\t\"\\xca\\x88\" => \"\\xc6\\xae\",\t\t\"\\xc6\\xb0\" => \"\\xc6\\xaf\",\n\t\t\"\\xca\\x8a\" => \"\\xc6\\xb1\",\t\t\"\\xca\\x8b\" => \"\\xc6\\xb2\",\t\t\"\\xc6\\xb4\" => \"\\xc6\\xb3\",\t\t\"\\xc6\\xb6\" => \"\\xc6\\xb5\",\n\t\t\"\\xca\\x92\" => \"\\xc6\\xb7\",\t\t\"\\xc6\\xb9\" => \"\\xc6\\xb8\",\t\t\"\\xc6\\xbd\" => \"\\xc6\\xbc\",\t\t\"\\xc7\\x86\" => \"\\xc7\\x84\",\n\t\t\"\\xc7\\x86\" => \"\\xc7\\x85\",\t\t\"\\xc7\\x89\" => \"\\xc7\\x87\",\t\t\"\\xc7\\x89\" => \"\\xc7\\x88\",\t\t\"\\xc7\\x8c\" => \"\\xc7\\x8a\",\n\t\t\"\\xc7\\x8c\" => \"\\xc7\\x8b\",\t\t\"\\xc7\\x8e\" => \"\\xc7\\x8d\",\t\t\"\\xc7\\x90\" => \"\\xc7\\x8f\",\t\t\"\\xc7\\x92\" => \"\\xc7\\x91\",\n\t\t\"\\xc7\\x94\" => \"\\xc7\\x93\",\t\t\"\\xc7\\x96\" => \"\\xc7\\x95\",\t\t\"\\xc7\\x98\" => \"\\xc7\\x97\",\t\t\"\\xc7\\x9a\" => \"\\xc7\\x99\",\n\t\t\"\\xc7\\x9c\" => \"\\xc7\\x9b\",\t\t\"\\xc7\\x9f\" => \"\\xc7\\x9e\",\t\t\"\\xc7\\xa1\" => \"\\xc7\\xa0\",\t\t\"\\xc7\\xa3\" => \"\\xc7\\xa2\",\n\t\t\"\\xc7\\xa5\" => \"\\xc7\\xa4\",\t\t\"\\xc7\\xa7\" => \"\\xc7\\xa6\",\t\t\"\\xc7\\xa9\" => \"\\xc7\\xa8\",\t\t\"\\xc7\\xab\" => \"\\xc7\\xaa\",\n\t\t\"\\xc7\\xad\" => \"\\xc7\\xac\",\t\t\"\\xc7\\xaf\" => \"\\xc7\\xae\",\t\t\"j\\xcc\\x8c\" => \"\\xc7\\xb0\",\t\t\"\\xc7\\xb3\" => \"\\xc7\\xb1\",\n\t\t\"\\xc7\\xb3\" => \"\\xc7\\xb2\",\t\t\"\\xc7\\xb5\" => \"\\xc7\\xb4\",\t\t\"\\xc6\\x95\" => \"\\xc7\\xb6\",\t\t\"\\xc6\\xbf\" => \"\\xc7\\xb7\",\n\t\t\"\\xc7\\xb9\" => \"\\xc7\\xb8\",\t\t\"\\xc7\\xbb\" => \"\\xc7\\xba\",\t\t\"\\xc7\\xbd\" => \"\\xc7\\xbc\",\t\t\"\\xc7\\xbf\" => \"\\xc7\\xbe\",\n\t\t\"\\xc8\\x81\" => \"\\xc8\\x80\",\t\t\"\\xc8\\x83\" => \"\\xc8\\x82\",\t\t\"\\xc8\\x85\" => \"\\xc8\\x84\",\t\t\"\\xc8\\x87\" => \"\\xc8\\x86\",\n\t\t\"\\xc8\\x89\" => \"\\xc8\\x88\",\t\t\"\\xc8\\x8b\" => \"\\xc8\\x8a\",\t\t\"\\xc8\\x8d\" => \"\\xc8\\x8c\",\t\t\"\\xc8\\x8f\" => \"\\xc8\\x8e\",\n\t\t\"\\xc8\\x91\" => \"\\xc8\\x90\",\t\t\"\\xc8\\x93\" => \"\\xc8\\x92\",\t\t\"\\xc8\\x95\" => \"\\xc8\\x94\",\t\t\"\\xc8\\x97\" => \"\\xc8\\x96\",\n\t\t\"\\xc8\\x99\" => \"\\xc8\\x98\",\t\t\"\\xc8\\x9b\" => \"\\xc8\\x9a\",\t\t\"\\xc8\\x9d\" => \"\\xc8\\x9c\",\t\t\"\\xc8\\x9f\" => \"\\xc8\\x9e\",\n\t\t\"\\xc6\\x9e\" => \"\\xc8\\xa0\",\t\t\"\\xc8\\xa3\" => \"\\xc8\\xa2\",\t\t\"\\xc8\\xa5\" => \"\\xc8\\xa4\",\t\t\"\\xc8\\xa7\" => \"\\xc8\\xa6\",\n\t\t\"\\xc8\\xa9\" => \"\\xc8\\xa8\",\t\t\"\\xc8\\xab\" => \"\\xc8\\xaa\",\t\t\"\\xc8\\xad\" => \"\\xc8\\xac\",\t\t\"\\xc8\\xaf\" => \"\\xc8\\xae\",\n\t\t\"\\xc8\\xb1\" => \"\\xc8\\xb0\",\t\t\"\\xc8\\xb3\" => \"\\xc8\\xb2\",\t\t\"\\xe2\\xb1\\xa5\" => \"\\xc8\\xba\",\t\t\"\\xc8\\xbc\" => \"\\xc8\\xbb\",\n\t\t\"\\xc6\\x9a\" => \"\\xc8\\xbd\",\t\t\"\\xe2\\xb1\\xa6\" => \"\\xc8\\xbe\",\t\t\"\\xc9\\x82\" => \"\\xc9\\x81\",\t\t\"\\xc6\\x80\" => \"\\xc9\\x83\",\n\t\t\"\\xca\\x89\" => \"\\xc9\\x84\",\t\t\"\\xca\\x8c\" => \"\\xc9\\x85\",\t\t\"\\xc9\\x87\" => \"\\xc9\\x86\",\t\t\"\\xc9\\x89\" => \"\\xc9\\x88\",\n\t\t\"\\xc9\\x8b\" => \"\\xc9\\x8a\",\t\t\"\\xc9\\x8d\" => \"\\xc9\\x8c\",\t\t\"\\xc9\\x8f\" => \"\\xc9\\x8e\",\t\t\"\\xce\\xb9\" => \"\\xcd\\x85\",\n\t\t\"\\xce\\xac\" => \"\\xce\\x86\",\t\t\"\\xce\\xad\" => \"\\xce\\x88\",\t\t\"\\xce\\xae\" => \"\\xce\\x89\",\t\t\"\\xce\\xaf\" => \"\\xce\\x8a\",\n\t\t\"\\xcf\\x8c\" => \"\\xce\\x8c\",\t\t\"\\xcf\\x8d\" => \"\\xce\\x8e\",\t\t\"\\xcf\\x8e\" => \"\\xce\\x8f\",\t\t\"\\xce\\xb9\\xcc\\x88\\xcc\\x81\" => \"\\xce\\x90\",\n\t\t\"\\xce\\xb1\" => \"\\xce\\x91\",\t\t\"\\xce\\xb2\" => \"\\xce\\x92\",\t\t\"\\xce\\xb3\" => \"\\xce\\x93\",\t\t\"\\xce\\xb4\" => \"\\xce\\x94\",\n\t\t\"\\xce\\xb5\" => \"\\xce\\x95\",\t\t\"\\xce\\xb6\" => \"\\xce\\x96\",\t\t\"\\xce\\xb7\" => \"\\xce\\x97\",\t\t\"\\xce\\xb8\" => \"\\xce\\x98\",\n\t\t\"\\xce\\xb9\" => \"\\xce\\x99\",\t\t\"\\xce\\xba\" => \"\\xce\\x9a\",\t\t\"\\xce\\xbb\" => \"\\xce\\x9b\",\t\t\"\\xce\\xbc\" => \"\\xce\\x9c\",\n\t\t\"\\xce\\xbd\" => \"\\xce\\x9d\",\t\t\"\\xce\\xbe\" => \"\\xce\\x9e\",\t\t\"\\xce\\xbf\" => \"\\xce\\x9f\",\t\t\"\\xcf\\x80\" => \"\\xce\\xa0\",\n\t\t\"\\xcf\\x81\" => \"\\xce\\xa1\",\t\t\"\\xcf\\x83\" => \"\\xce\\xa3\",\t\t\"\\xcf\\x84\" => \"\\xce\\xa4\",\t\t\"\\xcf\\x85\" => \"\\xce\\xa5\",\n\t\t\"\\xcf\\x86\" => \"\\xce\\xa6\",\t\t\"\\xcf\\x87\" => \"\\xce\\xa7\",\t\t\"\\xcf\\x88\" => \"\\xce\\xa8\",\t\t\"\\xcf\\x89\" => \"\\xce\\xa9\",\n\t\t\"\\xcf\\x8a\" => \"\\xce\\xaa\",\t\t\"\\xcf\\x8b\" => \"\\xce\\xab\",\t\t\"\\xcf\\x85\\xcc\\x88\\xcc\\x81\" => \"\\xce\\xb0\",\t\"\\xcf\\x83\" => \"\\xcf\\x82\",\n\t\t\"\\xce\\xb2\" => \"\\xcf\\x90\",\t\t\"\\xce\\xb8\" => \"\\xcf\\x91\",\t\t\"\\xcf\\x86\" => \"\\xcf\\x95\",\t\t\"\\xcf\\x80\" => \"\\xcf\\x96\",\n\t\t\"\\xcf\\x99\" => \"\\xcf\\x98\",\t\t\"\\xcf\\x9b\" => \"\\xcf\\x9a\",\t\t\"\\xcf\\x9d\" => \"\\xcf\\x9c\",\t\t\"\\xcf\\x9f\" => \"\\xcf\\x9e\",\n\t\t\"\\xcf\\xa1\" => \"\\xcf\\xa0\",\t\t\"\\xcf\\xa3\" => \"\\xcf\\xa2\",\t\t\"\\xcf\\xa5\" => \"\\xcf\\xa4\",\t\t\"\\xcf\\xa7\" => \"\\xcf\\xa6\",\n\t\t\"\\xcf\\xa9\" => \"\\xcf\\xa8\",\t\t\"\\xcf\\xab\" => \"\\xcf\\xaa\",\t\t\"\\xcf\\xad\" => \"\\xcf\\xac\",\t\t\"\\xcf\\xaf\" => \"\\xcf\\xae\",\n\t\t\"\\xce\\xba\" => \"\\xcf\\xb0\",\t\t\"\\xcf\\x81\" => \"\\xcf\\xb1\",\t\t\"\\xce\\xb8\" => \"\\xcf\\xb4\",\t\t\"\\xce\\xb5\" => \"\\xcf\\xb5\",\n\t\t\"\\xcf\\xb8\" => \"\\xcf\\xb7\",\t\t\"\\xcf\\xb2\" => \"\\xcf\\xb9\",\t\t\"\\xcf\\xbb\" => \"\\xcf\\xba\",\t\t\"\\xcd\\xbb\" => \"\\xcf\\xbd\",\n\t\t\"\\xcd\\xbc\" => \"\\xcf\\xbe\",\t\t\"\\xcd\\xbd\" => \"\\xcf\\xbf\",\t\t\"\\xd1\\x90\" => \"\\xd0\\x80\",\t\t\"\\xd1\\x91\" => \"\\xd0\\x81\",\n\t\t\"\\xd1\\x92\" => \"\\xd0\\x82\",\t\t\"\\xd1\\x93\" => \"\\xd0\\x83\",\t\t\"\\xd1\\x94\" => \"\\xd0\\x84\",\t\t\"\\xd1\\x95\" => \"\\xd0\\x85\",\n\t\t\"\\xd1\\x96\" => \"\\xd0\\x86\",\t\t\"\\xd1\\x97\" => \"\\xd0\\x87\",\t\t\"\\xd1\\x98\" => \"\\xd0\\x88\",\t\t\"\\xd1\\x99\" => \"\\xd0\\x89\",\n\t\t\"\\xd1\\x9a\" => \"\\xd0\\x8a\",\t\t\"\\xd1\\x9b\" => \"\\xd0\\x8b\",\t\t\"\\xd1\\x9c\" => \"\\xd0\\x8c\",\t\t\"\\xd1\\x9d\" => \"\\xd0\\x8d\",\n\t\t\"\\xd1\\x9e\" => \"\\xd0\\x8e\",\t\t\"\\xd1\\x9f\" => \"\\xd0\\x8f\",\t\t\"\\xd0\\xb0\" => \"\\xd0\\x90\",\t\t\"\\xd0\\xb1\" => \"\\xd0\\x91\",\n\t\t\"\\xd0\\xb2\" => \"\\xd0\\x92\",\t\t\"\\xd0\\xb3\" => \"\\xd0\\x93\",\t\t\"\\xd0\\xb4\" => \"\\xd0\\x94\",\t\t\"\\xd0\\xb5\" => \"\\xd0\\x95\",\n\t\t\"\\xd0\\xb6\" => \"\\xd0\\x96\",\t\t\"\\xd0\\xb7\" => \"\\xd0\\x97\",\t\t\"\\xd0\\xb8\" => \"\\xd0\\x98\",\t\t\"\\xd0\\xb9\" => \"\\xd0\\x99\",\n\t\t\"\\xd0\\xba\" => \"\\xd0\\x9a\",\t\t\"\\xd0\\xbb\" => \"\\xd0\\x9b\",\t\t\"\\xd0\\xbc\" => \"\\xd0\\x9c\",\t\t\"\\xd0\\xbd\" => \"\\xd0\\x9d\",\n\t\t\"\\xd0\\xbe\" => \"\\xd0\\x9e\",\t\t\"\\xd0\\xbf\" => \"\\xd0\\x9f\",\t\t\"\\xd1\\x80\" => \"\\xd0\\xa0\",\t\t\"\\xd1\\x81\" => \"\\xd0\\xa1\",\n\t\t\"\\xd1\\x82\" => \"\\xd0\\xa2\",\t\t\"\\xd1\\x83\" => \"\\xd0\\xa3\",\t\t\"\\xd1\\x84\" => \"\\xd0\\xa4\",\t\t\"\\xd1\\x85\" => \"\\xd0\\xa5\",\n\t\t\"\\xd1\\x86\" => \"\\xd0\\xa6\",\t\t\"\\xd1\\x87\" => \"\\xd0\\xa7\",\t\t\"\\xd1\\x88\" => \"\\xd0\\xa8\",\t\t\"\\xd1\\x89\" => \"\\xd0\\xa9\",\n\t\t\"\\xd1\\x8a\" => \"\\xd0\\xaa\",\t\t\"\\xd1\\x8b\" => \"\\xd0\\xab\",\t\t\"\\xd1\\x8c\" => \"\\xd0\\xac\",\t\t\"\\xd1\\x8d\" => \"\\xd0\\xad\",\n\t\t\"\\xd1\\x8e\" => \"\\xd0\\xae\",\t\t\"\\xd1\\x8f\" => \"\\xd0\\xaf\",\t\t\"\\xd1\\xa1\" => \"\\xd1\\xa0\",\t\t\"\\xd1\\xa3\" => \"\\xd1\\xa2\",\n\t\t\"\\xd1\\xa5\" => \"\\xd1\\xa4\",\t\t\"\\xd1\\xa7\" => \"\\xd1\\xa6\",\t\t\"\\xd1\\xa9\" => \"\\xd1\\xa8\",\t\t\"\\xd1\\xab\" => \"\\xd1\\xaa\",\n\t\t\"\\xd1\\xad\" => \"\\xd1\\xac\",\t\t\"\\xd1\\xaf\" => \"\\xd1\\xae\",\t\t\"\\xd1\\xb1\" => \"\\xd1\\xb0\",\t\t\"\\xd1\\xb3\" => \"\\xd1\\xb2\",\n\t\t\"\\xd1\\xb5\" => \"\\xd1\\xb4\",\t\t\"\\xd1\\xb7\" => \"\\xd1\\xb6\",\t\t\"\\xd1\\xb9\" => \"\\xd1\\xb8\",\t\t\"\\xd1\\xbb\" => \"\\xd1\\xba\",\n\t\t\"\\xd1\\xbd\" => \"\\xd1\\xbc\",\t\t\"\\xd1\\xbf\" => \"\\xd1\\xbe\",\t\t\"\\xd2\\x81\" => \"\\xd2\\x80\",\t\t\"\\xd2\\x8b\" => \"\\xd2\\x8a\",\n\t\t\"\\xd2\\x8d\" => \"\\xd2\\x8c\",\t\t\"\\xd2\\x8f\" => \"\\xd2\\x8e\",\t\t\"\\xd2\\x91\" => \"\\xd2\\x90\",\t\t\"\\xd2\\x93\" => \"\\xd2\\x92\",\n\t\t\"\\xd2\\x95\" => \"\\xd2\\x94\",\t\t\"\\xd2\\x97\" => \"\\xd2\\x96\",\t\t\"\\xd2\\x99\" => \"\\xd2\\x98\",\t\t\"\\xd2\\x9b\" => \"\\xd2\\x9a\",\n\t\t\"\\xd2\\x9d\" => \"\\xd2\\x9c\",\t\t\"\\xd2\\x9f\" => \"\\xd2\\x9e\",\t\t\"\\xd2\\xa1\" => \"\\xd2\\xa0\",\t\t\"\\xd2\\xa3\" => \"\\xd2\\xa2\",\n\t\t\"\\xd2\\xa5\" => \"\\xd2\\xa4\",\t\t\"\\xd2\\xa7\" => \"\\xd2\\xa6\",\t\t\"\\xd2\\xa9\" => \"\\xd2\\xa8\",\t\t\"\\xd2\\xab\" => \"\\xd2\\xaa\",\n\t\t\"\\xd2\\xad\" => \"\\xd2\\xac\",\t\t\"\\xd2\\xaf\" => \"\\xd2\\xae\",\t\t\"\\xd2\\xb1\" => \"\\xd2\\xb0\",\t\t\"\\xd2\\xb3\" => \"\\xd2\\xb2\",\n\t\t\"\\xd2\\xb5\" => \"\\xd2\\xb4\",\t\t\"\\xd2\\xb7\" => \"\\xd2\\xb6\",\t\t\"\\xd2\\xb9\" => \"\\xd2\\xb8\",\t\t\"\\xd2\\xbb\" => \"\\xd2\\xba\",\n\t\t\"\\xd2\\xbd\" => \"\\xd2\\xbc\",\t\t\"\\xd2\\xbf\" => \"\\xd2\\xbe\",\t\t\"\\xd3\\x8f\" => \"\\xd3\\x80\",\t\t\"\\xd3\\x82\" => \"\\xd3\\x81\",\n\t\t\"\\xd3\\x84\" => \"\\xd3\\x83\",\t\t\"\\xd3\\x86\" => \"\\xd3\\x85\",\t\t\"\\xd3\\x88\" => \"\\xd3\\x87\",\t\t\"\\xd3\\x8a\" => \"\\xd3\\x89\",\n\t\t\"\\xd3\\x8c\" => \"\\xd3\\x8b\",\t\t\"\\xd3\\x8e\" => \"\\xd3\\x8d\",\t\t\"\\xd3\\x91\" => \"\\xd3\\x90\",\t\t\"\\xd3\\x93\" => \"\\xd3\\x92\",\n\t\t\"\\xd3\\x95\" => \"\\xd3\\x94\",\t\t\"\\xd3\\x97\" => \"\\xd3\\x96\",\t\t\"\\xd3\\x99\" => \"\\xd3\\x98\",\t\t\"\\xd3\\x9b\" => \"\\xd3\\x9a\",\n\t\t\"\\xd3\\x9d\" => \"\\xd3\\x9c\",\t\t\"\\xd3\\x9f\" => \"\\xd3\\x9e\",\t\t\"\\xd3\\xa1\" => \"\\xd3\\xa0\",\t\t\"\\xd3\\xa3\" => \"\\xd3\\xa2\",\n\t\t\"\\xd3\\xa5\" => \"\\xd3\\xa4\",\t\t\"\\xd3\\xa7\" => \"\\xd3\\xa6\",\t\t\"\\xd3\\xa9\" => \"\\xd3\\xa8\",\t\t\"\\xd3\\xab\" => \"\\xd3\\xaa\",\n\t\t\"\\xd3\\xad\" => \"\\xd3\\xac\",\t\t\"\\xd3\\xaf\" => \"\\xd3\\xae\",\t\t\"\\xd3\\xb1\" => \"\\xd3\\xb0\",\t\t\"\\xd3\\xb3\" => \"\\xd3\\xb2\",\n\t\t\"\\xd3\\xb5\" => \"\\xd3\\xb4\",\t\t\"\\xd3\\xb7\" => \"\\xd3\\xb6\",\t\t\"\\xd3\\xb9\" => \"\\xd3\\xb8\",\t\t\"\\xd3\\xbb\" => \"\\xd3\\xba\",\n\t\t\"\\xd3\\xbd\" => \"\\xd3\\xbc\",\t\t\"\\xd3\\xbf\" => \"\\xd3\\xbe\",\t\t\"\\xd4\\x81\" => \"\\xd4\\x80\",\t\t\"\\xd4\\x83\" => \"\\xd4\\x82\",\n\t\t\"\\xd4\\x85\" => \"\\xd4\\x84\",\t\t\"\\xd4\\x87\" => \"\\xd4\\x86\",\t\t\"\\xd4\\x89\" => \"\\xd4\\x88\",\t\t\"\\xd4\\x8b\" => \"\\xd4\\x8a\",\n\t\t\"\\xd4\\x8d\" => \"\\xd4\\x8c\",\t\t\"\\xd4\\x8f\" => \"\\xd4\\x8e\",\t\t\"\\xd4\\x91\" => \"\\xd4\\x90\",\t\t\"\\xd4\\x93\" => \"\\xd4\\x92\",\n\t\t\"\\xd5\\xa1\" => \"\\xd4\\xb1\",\t\t\"\\xd5\\xa2\" => \"\\xd4\\xb2\",\t\t\"\\xd5\\xa3\" => \"\\xd4\\xb3\",\t\t\"\\xd5\\xa4\" => \"\\xd4\\xb4\",\n\t\t\"\\xd5\\xa5\" => \"\\xd4\\xb5\",\t\t\"\\xd5\\xa6\" => \"\\xd4\\xb6\",\t\t\"\\xd5\\xa7\" => \"\\xd4\\xb7\",\t\t\"\\xd5\\xa8\" => \"\\xd4\\xb8\",\n\t\t\"\\xd5\\xa9\" => \"\\xd4\\xb9\",\t\t\"\\xd5\\xaa\" => \"\\xd4\\xba\",\t\t\"\\xd5\\xab\" => \"\\xd4\\xbb\",\t\t\"\\xd5\\xac\" => \"\\xd4\\xbc\",\n\t\t\"\\xd5\\xad\" => \"\\xd4\\xbd\",\t\t\"\\xd5\\xae\" => \"\\xd4\\xbe\",\t\t\"\\xd5\\xaf\" => \"\\xd4\\xbf\",\t\t\"\\xd5\\xb0\" => \"\\xd5\\x80\",\n\t\t\"\\xd5\\xb1\" => \"\\xd5\\x81\",\t\t\"\\xd5\\xb2\" => \"\\xd5\\x82\",\t\t\"\\xd5\\xb3\" => \"\\xd5\\x83\",\t\t\"\\xd5\\xb4\" => \"\\xd5\\x84\",\n\t\t\"\\xd5\\xb5\" => \"\\xd5\\x85\",\t\t\"\\xd5\\xb6\" => \"\\xd5\\x86\",\t\t\"\\xd5\\xb7\" => \"\\xd5\\x87\",\t\t\"\\xd5\\xb8\" => \"\\xd5\\x88\",\n\t\t\"\\xd5\\xb9\" => \"\\xd5\\x89\",\t\t\"\\xd5\\xba\" => \"\\xd5\\x8a\",\t\t\"\\xd5\\xbb\" => \"\\xd5\\x8b\",\t\t\"\\xd5\\xbc\" => \"\\xd5\\x8c\",\n\t\t\"\\xd5\\xbd\" => \"\\xd5\\x8d\",\t\t\"\\xd5\\xbe\" => \"\\xd5\\x8e\",\t\t\"\\xd5\\xbf\" => \"\\xd5\\x8f\",\t\t\"\\xd6\\x80\" => \"\\xd5\\x90\",\n\t\t\"\\xd6\\x81\" => \"\\xd5\\x91\",\t\t\"\\xd6\\x82\" => \"\\xd5\\x92\",\t\t\"\\xd6\\x83\" => \"\\xd5\\x93\",\t\t\"\\xd6\\x84\" => \"\\xd5\\x94\",\n\t\t\"\\xd6\\x85\" => \"\\xd5\\x95\",\t\t\"\\xd6\\x86\" => \"\\xd5\\x96\",\t\t\"\\xd5\\xa5\\xd6\\x82\" => \"\\xd6\\x87\",\t\t\"\\xe2\\xb4\\x80\" => \"\\xe1\\x82\\xa0\",\n\t\t\"\\xe2\\xb4\\x81\" => \"\\xe1\\x82\\xa1\",\t\t\"\\xe2\\xb4\\x82\" => \"\\xe1\\x82\\xa2\",\t\t\"\\xe2\\xb4\\x83\" => \"\\xe1\\x82\\xa3\",\t\t\"\\xe2\\xb4\\x84\" => \"\\xe1\\x82\\xa4\",\n\t\t\"\\xe2\\xb4\\x85\" => \"\\xe1\\x82\\xa5\",\t\t\"\\xe2\\xb4\\x86\" => \"\\xe1\\x82\\xa6\",\t\t\"\\xe2\\xb4\\x87\" => \"\\xe1\\x82\\xa7\",\t\t\"\\xe2\\xb4\\x88\" => \"\\xe1\\x82\\xa8\",\n\t\t\"\\xe2\\xb4\\x89\" => \"\\xe1\\x82\\xa9\",\t\t\"\\xe2\\xb4\\x8a\" => \"\\xe1\\x82\\xaa\",\t\t\"\\xe2\\xb4\\x8b\" => \"\\xe1\\x82\\xab\",\t\t\"\\xe2\\xb4\\x8c\" => \"\\xe1\\x82\\xac\",\n\t\t\"\\xe2\\xb4\\x8d\" => \"\\xe1\\x82\\xad\",\t\t\"\\xe2\\xb4\\x8e\" => \"\\xe1\\x82\\xae\",\t\t\"\\xe2\\xb4\\x8f\" => \"\\xe1\\x82\\xaf\",\t\t\"\\xe2\\xb4\\x90\" => \"\\xe1\\x82\\xb0\",\n\t\t\"\\xe2\\xb4\\x91\" => \"\\xe1\\x82\\xb1\",\t\t\"\\xe2\\xb4\\x92\" => \"\\xe1\\x82\\xb2\",\t\t\"\\xe2\\xb4\\x93\" => \"\\xe1\\x82\\xb3\",\t\t\"\\xe2\\xb4\\x94\" => \"\\xe1\\x82\\xb4\",\n\t\t\"\\xe2\\xb4\\x95\" => \"\\xe1\\x82\\xb5\",\t\t\"\\xe2\\xb4\\x96\" => \"\\xe1\\x82\\xb6\",\t\t\"\\xe2\\xb4\\x97\" => \"\\xe1\\x82\\xb7\",\t\t\"\\xe2\\xb4\\x98\" => \"\\xe1\\x82\\xb8\",\n\t\t\"\\xe2\\xb4\\x99\" => \"\\xe1\\x82\\xb9\",\t\t\"\\xe2\\xb4\\x9a\" => \"\\xe1\\x82\\xba\",\t\t\"\\xe2\\xb4\\x9b\" => \"\\xe1\\x82\\xbb\",\t\t\"\\xe2\\xb4\\x9c\" => \"\\xe1\\x82\\xbc\",\n\t\t\"\\xe2\\xb4\\x9d\" => \"\\xe1\\x82\\xbd\",\t\t\"\\xe2\\xb4\\x9e\" => \"\\xe1\\x82\\xbe\",\t\t\"\\xe2\\xb4\\x9f\" => \"\\xe1\\x82\\xbf\",\t\t\"\\xe2\\xb4\\xa0\" => \"\\xe1\\x83\\x80\",\n\t\t\"\\xe2\\xb4\\xa1\" => \"\\xe1\\x83\\x81\",\t\t\"\\xe2\\xb4\\xa2\" => \"\\xe1\\x83\\x82\",\t\t\"\\xe2\\xb4\\xa3\" => \"\\xe1\\x83\\x83\",\t\t\"\\xe2\\xb4\\xa4\" => \"\\xe1\\x83\\x84\",\n\t\t\"\\xe2\\xb4\\xa5\" => \"\\xe1\\x83\\x85\",\t\t\"\\xe1\\xb8\\x81\" => \"\\xe1\\xb8\\x80\",\t\t\"\\xe1\\xb8\\x83\" => \"\\xe1\\xb8\\x82\",\t\t\"\\xe1\\xb8\\x85\" => \"\\xe1\\xb8\\x84\",\n\t\t\"\\xe1\\xb8\\x87\" => \"\\xe1\\xb8\\x86\",\t\t\"\\xe1\\xb8\\x89\" => \"\\xe1\\xb8\\x88\",\t\t\"\\xe1\\xb8\\x8b\" => \"\\xe1\\xb8\\x8a\",\t\t\"\\xe1\\xb8\\x8d\" => \"\\xe1\\xb8\\x8c\",\n\t\t\"\\xe1\\xb8\\x8f\" => \"\\xe1\\xb8\\x8e\",\t\t\"\\xe1\\xb8\\x91\" => \"\\xe1\\xb8\\x90\",\t\t\"\\xe1\\xb8\\x93\" => \"\\xe1\\xb8\\x92\",\t\t\"\\xe1\\xb8\\x95\" => \"\\xe1\\xb8\\x94\",\n\t\t\"\\xe1\\xb8\\x97\" => \"\\xe1\\xb8\\x96\",\t\t\"\\xe1\\xb8\\x99\" => \"\\xe1\\xb8\\x98\",\t\t\"\\xe1\\xb8\\x9b\" => \"\\xe1\\xb8\\x9a\",\t\t\"\\xe1\\xb8\\x9d\" => \"\\xe1\\xb8\\x9c\",\n\t\t\"\\xe1\\xb8\\x9f\" => \"\\xe1\\xb8\\x9e\",\t\t\"\\xe1\\xb8\\xa1\" => \"\\xe1\\xb8\\xa0\",\t\t\"\\xe1\\xb8\\xa3\" => \"\\xe1\\xb8\\xa2\",\t\t\"\\xe1\\xb8\\xa5\" => \"\\xe1\\xb8\\xa4\",\n\t\t\"\\xe1\\xb8\\xa7\" => \"\\xe1\\xb8\\xa6\",\t\t\"\\xe1\\xb8\\xa9\" => \"\\xe1\\xb8\\xa8\",\t\t\"\\xe1\\xb8\\xab\" => \"\\xe1\\xb8\\xaa\",\t\t\"\\xe1\\xb8\\xad\" => \"\\xe1\\xb8\\xac\",\n\t\t\"\\xe1\\xb8\\xaf\" => \"\\xe1\\xb8\\xae\",\t\t\"\\xe1\\xb8\\xb1\" => \"\\xe1\\xb8\\xb0\",\t\t\"\\xe1\\xb8\\xb3\" => \"\\xe1\\xb8\\xb2\",\t\t\"\\xe1\\xb8\\xb5\" => \"\\xe1\\xb8\\xb4\",\n\t\t\"\\xe1\\xb8\\xb7\" => \"\\xe1\\xb8\\xb6\",\t\t\"\\xe1\\xb8\\xb9\" => \"\\xe1\\xb8\\xb8\",\t\t\"\\xe1\\xb8\\xbb\" => \"\\xe1\\xb8\\xba\",\t\t\"\\xe1\\xb8\\xbd\" => \"\\xe1\\xb8\\xbc\",\n\t\t\"\\xe1\\xb8\\xbf\" => \"\\xe1\\xb8\\xbe\",\t\t\"\\xe1\\xb9\\x81\" => \"\\xe1\\xb9\\x80\",\t\t\"\\xe1\\xb9\\x83\" => \"\\xe1\\xb9\\x82\",\t\t\"\\xe1\\xb9\\x85\" => \"\\xe1\\xb9\\x84\",\n\t\t\"\\xe1\\xb9\\x87\" => \"\\xe1\\xb9\\x86\",\t\t\"\\xe1\\xb9\\x89\" => \"\\xe1\\xb9\\x88\",\t\t\"\\xe1\\xb9\\x8b\" => \"\\xe1\\xb9\\x8a\",\t\t\"\\xe1\\xb9\\x8d\" => \"\\xe1\\xb9\\x8c\",\n\t\t\"\\xe1\\xb9\\x8f\" => \"\\xe1\\xb9\\x8e\",\t\t\"\\xe1\\xb9\\x91\" => \"\\xe1\\xb9\\x90\",\t\t\"\\xe1\\xb9\\x93\" => \"\\xe1\\xb9\\x92\",\t\t\"\\xe1\\xb9\\x95\" => \"\\xe1\\xb9\\x94\",\n\t\t\"\\xe1\\xb9\\x97\" => \"\\xe1\\xb9\\x96\",\t\t\"\\xe1\\xb9\\x99\" => \"\\xe1\\xb9\\x98\",\t\t\"\\xe1\\xb9\\x9b\" => \"\\xe1\\xb9\\x9a\",\t\t\"\\xe1\\xb9\\x9d\" => \"\\xe1\\xb9\\x9c\",\n\t\t\"\\xe1\\xb9\\x9f\" => \"\\xe1\\xb9\\x9e\",\t\t\"\\xe1\\xb9\\xa1\" => \"\\xe1\\xb9\\xa0\",\t\t\"\\xe1\\xb9\\xa3\" => \"\\xe1\\xb9\\xa2\",\t\t\"\\xe1\\xb9\\xa5\" => \"\\xe1\\xb9\\xa4\",\n\t\t\"\\xe1\\xb9\\xa7\" => \"\\xe1\\xb9\\xa6\",\t\t\"\\xe1\\xb9\\xa9\" => \"\\xe1\\xb9\\xa8\",\t\t\"\\xe1\\xb9\\xab\" => \"\\xe1\\xb9\\xaa\",\t\t\"\\xe1\\xb9\\xad\" => \"\\xe1\\xb9\\xac\",\n\t\t\"\\xe1\\xb9\\xaf\" => \"\\xe1\\xb9\\xae\",\t\t\"\\xe1\\xb9\\xb1\" => \"\\xe1\\xb9\\xb0\",\t\t\"\\xe1\\xb9\\xb3\" => \"\\xe1\\xb9\\xb2\",\t\t\"\\xe1\\xb9\\xb5\" => \"\\xe1\\xb9\\xb4\",\n\t\t\"\\xe1\\xb9\\xb7\" => \"\\xe1\\xb9\\xb6\",\t\t\"\\xe1\\xb9\\xb9\" => \"\\xe1\\xb9\\xb8\",\t\t\"\\xe1\\xb9\\xbb\" => \"\\xe1\\xb9\\xba\",\t\t\"\\xe1\\xb9\\xbd\" => \"\\xe1\\xb9\\xbc\",\n\t\t\"\\xe1\\xb9\\xbf\" => \"\\xe1\\xb9\\xbe\",\t\t\"\\xe1\\xba\\x81\" => \"\\xe1\\xba\\x80\",\t\t\"\\xe1\\xba\\x83\" => \"\\xe1\\xba\\x82\",\t\t\"\\xe1\\xba\\x85\" => \"\\xe1\\xba\\x84\",\n\t\t\"\\xe1\\xba\\x87\" => \"\\xe1\\xba\\x86\",\t\t\"\\xe1\\xba\\x89\" => \"\\xe1\\xba\\x88\",\t\t\"\\xe1\\xba\\x8b\" => \"\\xe1\\xba\\x8a\",\t\t\"\\xe1\\xba\\x8d\" => \"\\xe1\\xba\\x8c\",\n\t\t\"\\xe1\\xba\\x8f\" => \"\\xe1\\xba\\x8e\",\t\t\"\\xe1\\xba\\x91\" => \"\\xe1\\xba\\x90\",\t\t\"\\xe1\\xba\\x93\" => \"\\xe1\\xba\\x92\",\t\t\"\\xe1\\xba\\x95\" => \"\\xe1\\xba\\x94\",\n\t\t\"h\\xcc\\xb1\" => \"\\xe1\\xba\\x96\",\t\t\"t\\xcc\\x88\" => \"\\xe1\\xba\\x97\",\t\t\"w\\xcc\\x8a\" => \"\\xe1\\xba\\x98\",\t\t\"y\\xcc\\x8a\" => \"\\xe1\\xba\\x99\",\n\t\t\"a\\xca\\xbe\" => \"\\xe1\\xba\\x9a\",\t\"\\xe1\\xb9\\xa1\" => \"\\xe1\\xba\\x9b\",\t\t\"\\xe1\\xba\\xa1\" => \"\\xe1\\xba\\xa0\",\t\t\"\\xe1\\xba\\xa3\" => \"\\xe1\\xba\\xa2\",\n\t\t\"\\xe1\\xba\\xa5\" => \"\\xe1\\xba\\xa4\",\t\t\"\\xe1\\xba\\xa7\" => \"\\xe1\\xba\\xa6\",\t\t\"\\xe1\\xba\\xa9\" => \"\\xe1\\xba\\xa8\",\t\t\"\\xe1\\xba\\xab\" => \"\\xe1\\xba\\xaa\",\n\t\t\"\\xe1\\xba\\xad\" => \"\\xe1\\xba\\xac\",\t\t\"\\xe1\\xba\\xaf\" => \"\\xe1\\xba\\xae\",\t\t\"\\xe1\\xba\\xb1\" => \"\\xe1\\xba\\xb0\",\t\t\"\\xe1\\xba\\xb3\" => \"\\xe1\\xba\\xb2\",\n\t\t\"\\xe1\\xba\\xb5\" => \"\\xe1\\xba\\xb4\",\t\t\"\\xe1\\xba\\xb7\" => \"\\xe1\\xba\\xb6\",\t\t\"\\xe1\\xba\\xb9\" => \"\\xe1\\xba\\xb8\",\t\t\"\\xe1\\xba\\xbb\" => \"\\xe1\\xba\\xba\",\n\t\t\"\\xe1\\xba\\xbd\" => \"\\xe1\\xba\\xbc\",\t\t\"\\xe1\\xba\\xbf\" => \"\\xe1\\xba\\xbe\",\t\t\"\\xe1\\xbb\\x81\" => \"\\xe1\\xbb\\x80\",\t\t\"\\xe1\\xbb\\x83\" => \"\\xe1\\xbb\\x82\",\n\t\t\"\\xe1\\xbb\\x85\" => \"\\xe1\\xbb\\x84\",\t\t\"\\xe1\\xbb\\x87\" => \"\\xe1\\xbb\\x86\",\t\t\"\\xe1\\xbb\\x89\" => \"\\xe1\\xbb\\x88\",\t\t\"\\xe1\\xbb\\x8b\" => \"\\xe1\\xbb\\x8a\",\n\t\t\"\\xe1\\xbb\\x8d\" => \"\\xe1\\xbb\\x8c\",\t\t\"\\xe1\\xbb\\x8f\" => \"\\xe1\\xbb\\x8e\",\t\t\"\\xe1\\xbb\\x91\" => \"\\xe1\\xbb\\x90\",\t\t\"\\xe1\\xbb\\x93\" => \"\\xe1\\xbb\\x92\",\n\t\t\"\\xe1\\xbb\\x95\" => \"\\xe1\\xbb\\x94\",\t\t\"\\xe1\\xbb\\x97\" => \"\\xe1\\xbb\\x96\",\t\t\"\\xe1\\xbb\\x99\" => \"\\xe1\\xbb\\x98\",\t\t\"\\xe1\\xbb\\x9b\" => \"\\xe1\\xbb\\x9a\",\n\t\t\"\\xe1\\xbb\\x9d\" => \"\\xe1\\xbb\\x9c\",\t\t\"\\xe1\\xbb\\x9f\" => \"\\xe1\\xbb\\x9e\",\t\t\"\\xe1\\xbb\\xa1\" => \"\\xe1\\xbb\\xa0\",\t\t\"\\xe1\\xbb\\xa3\" => \"\\xe1\\xbb\\xa2\",\n\t\t\"\\xe1\\xbb\\xa5\" => \"\\xe1\\xbb\\xa4\",\t\t\"\\xe1\\xbb\\xa7\" => \"\\xe1\\xbb\\xa6\",\t\t\"\\xe1\\xbb\\xa9\" => \"\\xe1\\xbb\\xa8\",\t\t\"\\xe1\\xbb\\xab\" => \"\\xe1\\xbb\\xaa\",\n\t\t\"\\xe1\\xbb\\xad\" => \"\\xe1\\xbb\\xac\",\t\t\"\\xe1\\xbb\\xaf\" => \"\\xe1\\xbb\\xae\",\t\t\"\\xe1\\xbb\\xb1\" => \"\\xe1\\xbb\\xb0\",\t\t\"\\xe1\\xbb\\xb3\" => \"\\xe1\\xbb\\xb2\",\n\t\t\"\\xe1\\xbb\\xb5\" => \"\\xe1\\xbb\\xb4\",\t\t\"\\xe1\\xbb\\xb7\" => \"\\xe1\\xbb\\xb6\",\t\t\"\\xe1\\xbb\\xb9\" => \"\\xe1\\xbb\\xb8\",\t\t\"\\xe1\\xbc\\x80\" => \"\\xe1\\xbc\\x88\",\n\t\t\"\\xe1\\xbc\\x81\" => \"\\xe1\\xbc\\x89\",\t\t\"\\xe1\\xbc\\x82\" => \"\\xe1\\xbc\\x8a\",\t\t\"\\xe1\\xbc\\x83\" => \"\\xe1\\xbc\\x8b\",\t\t\"\\xe1\\xbc\\x84\" => \"\\xe1\\xbc\\x8c\",\n\t\t\"\\xe1\\xbc\\x85\" => \"\\xe1\\xbc\\x8d\",\t\t\"\\xe1\\xbc\\x86\" => \"\\xe1\\xbc\\x8e\",\t\t\"\\xe1\\xbc\\x87\" => \"\\xe1\\xbc\\x8f\",\t\t\"\\xe1\\xbc\\x90\" => \"\\xe1\\xbc\\x98\",\n\t\t\"\\xe1\\xbc\\x91\" => \"\\xe1\\xbc\\x99\",\t\t\"\\xe1\\xbc\\x92\" => \"\\xe1\\xbc\\x9a\",\t\t\"\\xe1\\xbc\\x93\" => \"\\xe1\\xbc\\x9b\",\t\t\"\\xe1\\xbc\\x94\" => \"\\xe1\\xbc\\x9c\",\n\t\t\"\\xe1\\xbc\\x95\" => \"\\xe1\\xbc\\x9d\",\t\t\"\\xe1\\xbc\\xa0\" => \"\\xe1\\xbc\\xa8\",\t\t\"\\xe1\\xbc\\xa1\" => \"\\xe1\\xbc\\xa9\",\t\t\"\\xe1\\xbc\\xa2\" => \"\\xe1\\xbc\\xaa\",\n\t\t\"\\xe1\\xbc\\xa3\" => \"\\xe1\\xbc\\xab\",\t\t\"\\xe1\\xbc\\xa4\" => \"\\xe1\\xbc\\xac\",\t\t\"\\xe1\\xbc\\xa5\" => \"\\xe1\\xbc\\xad\",\t\t\"\\xe1\\xbc\\xa6\" => \"\\xe1\\xbc\\xae\",\n\t\t\"\\xe1\\xbc\\xa7\" => \"\\xe1\\xbc\\xaf\",\t\t\"\\xe1\\xbc\\xb0\" => \"\\xe1\\xbc\\xb8\",\t\t\"\\xe1\\xbc\\xb1\" => \"\\xe1\\xbc\\xb9\",\t\t\"\\xe1\\xbc\\xb2\" => \"\\xe1\\xbc\\xba\",\n\t\t\"\\xe1\\xbc\\xb3\" => \"\\xe1\\xbc\\xbb\",\t\t\"\\xe1\\xbc\\xb4\" => \"\\xe1\\xbc\\xbc\",\t\t\"\\xe1\\xbc\\xb5\" => \"\\xe1\\xbc\\xbd\",\t\t\"\\xe1\\xbc\\xb6\" => \"\\xe1\\xbc\\xbe\",\n\t\t\"\\xe1\\xbc\\xb7\" => \"\\xe1\\xbc\\xbf\",\t\t\"\\xe1\\xbd\\x80\" => \"\\xe1\\xbd\\x88\",\t\t\"\\xe1\\xbd\\x81\" => \"\\xe1\\xbd\\x89\",\t\t\"\\xe1\\xbd\\x82\" => \"\\xe1\\xbd\\x8a\",\n\t\t\"\\xe1\\xbd\\x83\" => \"\\xe1\\xbd\\x8b\",\t\t\"\\xe1\\xbd\\x84\" => \"\\xe1\\xbd\\x8c\",\t\t\"\\xe1\\xbd\\x85\" => \"\\xe1\\xbd\\x8d\",\t\t\"\\xcf\\x85\\xcc\\x93\" => \"\\xe1\\xbd\\x90\",\n\t\t\"\\xcf\\x85\\xcc\\x93\\xcc\\x80\" => \"\\xe1\\xbd\\x92\",\t\"\\xcf\\x85\\xcc\\x93\\xcc\\x81\" => \"\\xe1\\xbd\\x94\",\t\"\\xcf\\x85\\xcc\\x93\\xcd\\x82\" => \"\\xe1\\xbd\\x96\",\t\t\"\\xe1\\xbd\\x91\" => \"\\xe1\\xbd\\x99\",\n\t\t\"\\xe1\\xbd\\x93\" => \"\\xe1\\xbd\\x9b\",\t\t\"\\xe1\\xbd\\x95\" => \"\\xe1\\xbd\\x9d\",\t\t\"\\xe1\\xbd\\x97\" => \"\\xe1\\xbd\\x9f\",\t\t\"\\xe1\\xbd\\xa0\" => \"\\xe1\\xbd\\xa8\",\n\t\t\"\\xe1\\xbd\\xa1\" => \"\\xe1\\xbd\\xa9\",\t\t\"\\xe1\\xbd\\xa2\" => \"\\xe1\\xbd\\xaa\",\t\t\"\\xe1\\xbd\\xa3\" => \"\\xe1\\xbd\\xab\",\t\t\"\\xe1\\xbd\\xa4\" => \"\\xe1\\xbd\\xac\",\n\t\t\"\\xe1\\xbd\\xa5\" => \"\\xe1\\xbd\\xad\",\t\t\"\\xe1\\xbd\\xa6\" => \"\\xe1\\xbd\\xae\",\t\t\"\\xe1\\xbd\\xa7\" => \"\\xe1\\xbd\\xaf\",\t\t\"\\xe1\\xbc\\x80\\xce\\xb9\" => \"\\xe1\\xbe\\x80\",\n\t\t\"\\xe1\\xbc\\x81\\xce\\xb9\" => \"\\xe1\\xbe\\x81\",\t\"\\xe1\\xbc\\x82\\xce\\xb9\" => \"\\xe1\\xbe\\x82\",\t\"\\xe1\\xbc\\x83\\xce\\xb9\" => \"\\xe1\\xbe\\x83\",\t\"\\xe1\\xbc\\x84\\xce\\xb9\" => \"\\xe1\\xbe\\x84\",\n\t\t\"\\xe1\\xbc\\x85\\xce\\xb9\" => \"\\xe1\\xbe\\x85\",\t\"\\xe1\\xbc\\x86\\xce\\xb9\" => \"\\xe1\\xbe\\x86\",\t\"\\xe1\\xbc\\x87\\xce\\xb9\" => \"\\xe1\\xbe\\x87\",\t\"\\xe1\\xbe\\x80\" => \"\\xe1\\xbe\\x88\",\n\t\t\"\\xe1\\xbe\\x81\" => \"\\xe1\\xbe\\x89\",\t\t\"\\xe1\\xbe\\x82\" => \"\\xe1\\xbe\\x8a\",\t\t\"\\xe1\\xbe\\x83\" => \"\\xe1\\xbe\\x8b\",\t\t\"\\xe1\\xbe\\x84\" => \"\\xe1\\xbe\\x8c\",\n\t\t\"\\xe1\\xbe\\x85\" => \"\\xe1\\xbe\\x8d\",\t\t\"\\xe1\\xbe\\x86\" => \"\\xe1\\xbe\\x8e\",\t\t\"\\xe1\\xbe\\x87\" => \"\\xe1\\xbe\\x8f\",\t\t\"\\xe1\\xbc\\xa0\\xce\\xb9\" => \"\\xe1\\xbe\\x90\",\n\t\t\"\\xe1\\xbc\\xa1\\xce\\xb9\" => \"\\xe1\\xbe\\x91\",\t\"\\xe1\\xbc\\xa2\\xce\\xb9\" => \"\\xe1\\xbe\\x92\",\t\"\\xe1\\xbc\\xa3\\xce\\xb9\" => \"\\xe1\\xbe\\x93\",\t\"\\xe1\\xbc\\xa4\\xce\\xb9\" => \"\\xe1\\xbe\\x94\",\n\t\t\"\\xe1\\xbc\\xa5\\xce\\xb9\" => \"\\xe1\\xbe\\x95\",\t\"\\xe1\\xbc\\xa6\\xce\\xb9\" => \"\\xe1\\xbe\\x96\",\t\"\\xe1\\xbc\\xa7\\xce\\xb9\" => \"\\xe1\\xbe\\x97\",\t\"\\xe1\\xbe\\x90\" => \"\\xe1\\xbe\\x98\",\n\t\t\"\\xe1\\xbe\\x91\" => \"\\xe1\\xbe\\x99\",\t\t\"\\xe1\\xbe\\x92\" => \"\\xe1\\xbe\\x9a\",\t\t\"\\xe1\\xbe\\x93\" => \"\\xe1\\xbe\\x9b\",\t\t\"\\xe1\\xbe\\x94\" => \"\\xe1\\xbe\\x9c\",\n\t\t\"\\xe1\\xbe\\x95\" => \"\\xe1\\xbe\\x9d\",\t\t\"\\xe1\\xbe\\x96\" => \"\\xe1\\xbe\\x9e\",\t\t\"\\xe1\\xbe\\x97\" => \"\\xe1\\xbe\\x9f\",\t\t\"\\xe1\\xbd\\xa0\\xce\\xb9\" => \"\\xe1\\xbe\\xa0\",\n\t\t\"\\xe1\\xbd\\xa1\\xce\\xb9\" => \"\\xe1\\xbe\\xa1\",\t\"\\xe1\\xbd\\xa2\\xce\\xb9\" => \"\\xe1\\xbe\\xa2\",\t\"\\xe1\\xbd\\xa3\\xce\\xb9\" => \"\\xe1\\xbe\\xa3\",\t\"\\xe1\\xbd\\xa4\\xce\\xb9\" => \"\\xe1\\xbe\\xa4\",\n\t\t\"\\xe1\\xbd\\xa5\\xce\\xb9\" => \"\\xe1\\xbe\\xa5\",\t\"\\xe1\\xbd\\xa6\\xce\\xb9\" => \"\\xe1\\xbe\\xa6\",\t\"\\xe1\\xbd\\xa7\\xce\\xb9\" => \"\\xe1\\xbe\\xa7\",\t\"\\xe1\\xbe\\xa0\" => \"\\xe1\\xbe\\xa8\",\n\t\t\"\\xe1\\xbe\\xa1\" => \"\\xe1\\xbe\\xa9\",\t\t\"\\xe1\\xbe\\xa2\" => \"\\xe1\\xbe\\xaa\",\t\t\"\\xe1\\xbe\\xa3\" => \"\\xe1\\xbe\\xab\",\t\t\"\\xe1\\xbe\\xa4\" => \"\\xe1\\xbe\\xac\",\n\t\t\"\\xe1\\xbe\\xa5\" => \"\\xe1\\xbe\\xad\",\t\t\"\\xe1\\xbe\\xa6\" => \"\\xe1\\xbe\\xae\",\t\t\"\\xe1\\xbe\\xa7\" => \"\\xe1\\xbe\\xaf\",\t\t\"\\xe1\\xbd\\xb0\\xce\\xb9\" => \"\\xe1\\xbe\\xb2\",\n\t\t\"\\xce\\xb1\\xce\\xb9\" => \"\\xe1\\xbe\\xb3\",\t\"\\xce\\xac\\xce\\xb9\" => \"\\xe1\\xbe\\xb4\",\t\"\\xce\\xb1\\xcd\\x82\" => \"\\xe1\\xbe\\xb6\",\t\t\"\\xce\\xb1\\xcd\\x82\\xce\\xb9\" => \"\\xe1\\xbe\\xb7\",\n\t\t\"\\xe1\\xbe\\xb0\" => \"\\xe1\\xbe\\xb8\",\t\t\"\\xe1\\xbe\\xb1\" => \"\\xe1\\xbe\\xb9\",\t\t\"\\xe1\\xbd\\xb0\" => \"\\xe1\\xbe\\xba\",\t\t\"\\xe1\\xbd\\xb1\" => \"\\xe1\\xbe\\xbb\",\n\t\t\"\\xe1\\xbe\\xb3\" => \"\\xe1\\xbe\\xbc\",\t\t\"\\xce\\xb9\" => \"\\xe1\\xbe\\xbe\",\t\t\"\\xe1\\xbd\\xb4\\xce\\xb9\" => \"\\xe1\\xbf\\x82\",\t\"\\xce\\xb7\\xce\\xb9\" => \"\\xe1\\xbf\\x83\",\n\t\t\"\\xce\\xae\\xce\\xb9\" => \"\\xe1\\xbf\\x84\",\t\"\\xce\\xb7\\xcd\\x82\" => \"\\xe1\\xbf\\x86\",\t\t\"\\xce\\xb7\\xcd\\x82\\xce\\xb9\" => \"\\xe1\\xbf\\x87\",\t\"\\xe1\\xbd\\xb2\" => \"\\xe1\\xbf\\x88\",\n\t\t\"\\xe1\\xbd\\xb3\" => \"\\xe1\\xbf\\x89\",\t\t\"\\xe1\\xbd\\xb4\" => \"\\xe1\\xbf\\x8a\",\t\t\"\\xe1\\xbd\\xb5\" => \"\\xe1\\xbf\\x8b\",\t\t\"\\xe1\\xbf\\x83\" => \"\\xe1\\xbf\\x8c\",\n\t\t\"\\xce\\xb9\\xcc\\x88\\xcc\\x80\" => \"\\xe1\\xbf\\x92\",\t\"\\xce\\xb9\\xcc\\x88\\xcc\\x81\" => \"\\xe1\\xbf\\x93\",\t\"\\xce\\xb9\\xcd\\x82\" => \"\\xe1\\xbf\\x96\",\t\t\"\\xce\\xb9\\xcc\\x88\\xcd\\x82\" => \"\\xe1\\xbf\\x97\",\n\t\t\"\\xe1\\xbf\\x90\" => \"\\xe1\\xbf\\x98\",\t\t\"\\xe1\\xbf\\x91\" => \"\\xe1\\xbf\\x99\",\t\t\"\\xe1\\xbd\\xb6\" => \"\\xe1\\xbf\\x9a\",\t\t\"\\xe1\\xbd\\xb7\" => \"\\xe1\\xbf\\x9b\",\n\t\t\"\\xcf\\x85\\xcc\\x88\\xcc\\x80\" => \"\\xe1\\xbf\\xa2\",\t\"\\xcf\\x85\\xcc\\x88\\xcc\\x81\" => \"\\xe1\\xbf\\xa3\",\t\"\\xcf\\x81\\xcc\\x93\" => \"\\xe1\\xbf\\xa4\",\t\t\"\\xcf\\x85\\xcd\\x82\" => \"\\xe1\\xbf\\xa6\",\n\t\t\"\\xcf\\x85\\xcc\\x88\\xcd\\x82\" => \"\\xe1\\xbf\\xa7\",\t\t\"\\xe1\\xbf\\xa0\" => \"\\xe1\\xbf\\xa8\",\t\t\"\\xe1\\xbf\\xa1\" => \"\\xe1\\xbf\\xa9\",\t\t\"\\xe1\\xbd\\xba\" => \"\\xe1\\xbf\\xaa\",\n\t\t\"\\xe1\\xbd\\xbb\" => \"\\xe1\\xbf\\xab\",\t\t\"\\xe1\\xbf\\xa5\" => \"\\xe1\\xbf\\xac\",\t\t\"\\xe1\\xbd\\xbc\\xce\\xb9\" => \"\\xe1\\xbf\\xb2\",\t\"\\xcf\\x89\\xce\\xb9\" => \"\\xe1\\xbf\\xb3\",\n\t\t\"\\xcf\\x8e\\xce\\xb9\" => \"\\xe1\\xbf\\xb4\",\t\"\\xcf\\x89\\xcd\\x82\" => \"\\xe1\\xbf\\xb6\",\t\t\"\\xcf\\x89\\xcd\\x82\\xce\\xb9\" => \"\\xe1\\xbf\\xb7\",\t\"\\xe1\\xbd\\xb8\" => \"\\xe1\\xbf\\xb8\",\n\t\t\"\\xe1\\xbd\\xb9\" => \"\\xe1\\xbf\\xb9\",\t\t\"\\xe1\\xbd\\xbc\" => \"\\xe1\\xbf\\xba\",\t\t\"\\xe1\\xbd\\xbd\" => \"\\xe1\\xbf\\xbb\",\t\t\"\\xe1\\xbf\\xb3\" => \"\\xe1\\xbf\\xbc\",\n\t\t\"\\xcf\\x89\" => \"\\xe2\\x84\\xa6\",\t\t\"k\" => \"\\xe2\\x84\\xaa\",\t\t\"\\xc3\\xa5\" => \"\\xe2\\x84\\xab\",\t\t\"\\xe2\\x85\\x8e\" => \"\\xe2\\x84\\xb2\",\n\t\t\"\\xe2\\x85\\xb0\" => \"\\xe2\\x85\\xa0\",\t\t\"\\xe2\\x85\\xb1\" => \"\\xe2\\x85\\xa1\",\t\t\"\\xe2\\x85\\xb2\" => \"\\xe2\\x85\\xa2\",\t\t\"\\xe2\\x85\\xb3\" => \"\\xe2\\x85\\xa3\",\n\t\t\"\\xe2\\x85\\xb4\" => \"\\xe2\\x85\\xa4\",\t\t\"\\xe2\\x85\\xb5\" => \"\\xe2\\x85\\xa5\",\t\t\"\\xe2\\x85\\xb6\" => \"\\xe2\\x85\\xa6\",\t\t\"\\xe2\\x85\\xb7\" => \"\\xe2\\x85\\xa7\",\n\t\t\"\\xe2\\x85\\xb8\" => \"\\xe2\\x85\\xa8\",\t\t\"\\xe2\\x85\\xb9\" => \"\\xe2\\x85\\xa9\",\t\t\"\\xe2\\x85\\xba\" => \"\\xe2\\x85\\xaa\",\t\t\"\\xe2\\x85\\xbb\" => \"\\xe2\\x85\\xab\",\n\t\t\"\\xe2\\x85\\xbc\" => \"\\xe2\\x85\\xac\",\t\t\"\\xe2\\x85\\xbd\" => \"\\xe2\\x85\\xad\",\t\t\"\\xe2\\x85\\xbe\" => \"\\xe2\\x85\\xae\",\t\t\"\\xe2\\x85\\xbf\" => \"\\xe2\\x85\\xaf\",\n\t\t\"\\xe2\\x86\\x84\" => \"\\xe2\\x86\\x83\",\t\t\"\\xe2\\x93\\x90\" => \"\\xe2\\x92\\xb6\",\t\t\"\\xe2\\x93\\x91\" => \"\\xe2\\x92\\xb7\",\t\t\"\\xe2\\x93\\x92\" => \"\\xe2\\x92\\xb8\",\n\t\t\"\\xe2\\x93\\x93\" => \"\\xe2\\x92\\xb9\",\t\t\"\\xe2\\x93\\x94\" => \"\\xe2\\x92\\xba\",\t\t\"\\xe2\\x93\\x95\" => \"\\xe2\\x92\\xbb\",\t\t\"\\xe2\\x93\\x96\" => \"\\xe2\\x92\\xbc\",\n\t\t\"\\xe2\\x93\\x97\" => \"\\xe2\\x92\\xbd\",\t\t\"\\xe2\\x93\\x98\" => \"\\xe2\\x92\\xbe\",\t\t\"\\xe2\\x93\\x99\" => \"\\xe2\\x92\\xbf\",\t\t\"\\xe2\\x93\\x9a\" => \"\\xe2\\x93\\x80\",\n\t\t\"\\xe2\\x93\\x9b\" => \"\\xe2\\x93\\x81\",\t\t\"\\xe2\\x93\\x9c\" => \"\\xe2\\x93\\x82\",\t\t\"\\xe2\\x93\\x9d\" => \"\\xe2\\x93\\x83\",\t\t\"\\xe2\\x93\\x9e\" => \"\\xe2\\x93\\x84\",\n\t\t\"\\xe2\\x93\\x9f\" => \"\\xe2\\x93\\x85\",\t\t\"\\xe2\\x93\\xa0\" => \"\\xe2\\x93\\x86\",\t\t\"\\xe2\\x93\\xa1\" => \"\\xe2\\x93\\x87\",\t\t\"\\xe2\\x93\\xa2\" => \"\\xe2\\x93\\x88\",\n\t\t\"\\xe2\\x93\\xa3\" => \"\\xe2\\x93\\x89\",\t\t\"\\xe2\\x93\\xa4\" => \"\\xe2\\x93\\x8a\",\t\t\"\\xe2\\x93\\xa5\" => \"\\xe2\\x93\\x8b\",\t\t\"\\xe2\\x93\\xa6\" => \"\\xe2\\x93\\x8c\",\n\t\t\"\\xe2\\x93\\xa7\" => \"\\xe2\\x93\\x8d\",\t\t\"\\xe2\\x93\\xa8\" => \"\\xe2\\x93\\x8e\",\t\t\"\\xe2\\x93\\xa9\" => \"\\xe2\\x93\\x8f\",\t\t\"\\xe2\\xb0\\xb0\" => \"\\xe2\\xb0\\x80\",\n\t\t\"\\xe2\\xb0\\xb1\" => \"\\xe2\\xb0\\x81\",\t\t\"\\xe2\\xb0\\xb2\" => \"\\xe2\\xb0\\x82\",\t\t\"\\xe2\\xb0\\xb3\" => \"\\xe2\\xb0\\x83\",\t\t\"\\xe2\\xb0\\xb4\" => \"\\xe2\\xb0\\x84\",\n\t\t\"\\xe2\\xb0\\xb5\" => \"\\xe2\\xb0\\x85\",\t\t\"\\xe2\\xb0\\xb6\" => \"\\xe2\\xb0\\x86\",\t\t\"\\xe2\\xb0\\xb7\" => \"\\xe2\\xb0\\x87\",\t\t\"\\xe2\\xb0\\xb8\" => \"\\xe2\\xb0\\x88\",\n\t\t\"\\xe2\\xb0\\xb9\" => \"\\xe2\\xb0\\x89\",\t\t\"\\xe2\\xb0\\xba\" => \"\\xe2\\xb0\\x8a\",\t\t\"\\xe2\\xb0\\xbb\" => \"\\xe2\\xb0\\x8b\",\t\t\"\\xe2\\xb0\\xbc\" => \"\\xe2\\xb0\\x8c\",\n\t\t\"\\xe2\\xb0\\xbd\" => \"\\xe2\\xb0\\x8d\",\t\t\"\\xe2\\xb0\\xbe\" => \"\\xe2\\xb0\\x8e\",\t\t\"\\xe2\\xb0\\xbf\" => \"\\xe2\\xb0\\x8f\",\t\t\"\\xe2\\xb1\\x80\" => \"\\xe2\\xb0\\x90\",\n\t\t\"\\xe2\\xb1\\x81\" => \"\\xe2\\xb0\\x91\",\t\t\"\\xe2\\xb1\\x82\" => \"\\xe2\\xb0\\x92\",\t\t\"\\xe2\\xb1\\x83\" => \"\\xe2\\xb0\\x93\",\t\t\"\\xe2\\xb1\\x84\" => \"\\xe2\\xb0\\x94\",\n\t\t\"\\xe2\\xb1\\x85\" => \"\\xe2\\xb0\\x95\",\t\t\"\\xe2\\xb1\\x86\" => \"\\xe2\\xb0\\x96\",\t\t\"\\xe2\\xb1\\x87\" => \"\\xe2\\xb0\\x97\",\t\t\"\\xe2\\xb1\\x88\" => \"\\xe2\\xb0\\x98\",\n\t\t\"\\xe2\\xb1\\x89\" => \"\\xe2\\xb0\\x99\",\t\t\"\\xe2\\xb1\\x8a\" => \"\\xe2\\xb0\\x9a\",\t\t\"\\xe2\\xb1\\x8b\" => \"\\xe2\\xb0\\x9b\",\t\t\"\\xe2\\xb1\\x8c\" => \"\\xe2\\xb0\\x9c\",\n\t\t\"\\xe2\\xb1\\x8d\" => \"\\xe2\\xb0\\x9d\",\t\t\"\\xe2\\xb1\\x8e\" => \"\\xe2\\xb0\\x9e\",\t\t\"\\xe2\\xb1\\x8f\" => \"\\xe2\\xb0\\x9f\",\t\t\"\\xe2\\xb1\\x90\" => \"\\xe2\\xb0\\xa0\",\n\t\t\"\\xe2\\xb1\\x91\" => \"\\xe2\\xb0\\xa1\",\t\t\"\\xe2\\xb1\\x92\" => \"\\xe2\\xb0\\xa2\",\t\t\"\\xe2\\xb1\\x93\" => \"\\xe2\\xb0\\xa3\",\t\t\"\\xe2\\xb1\\x94\" => \"\\xe2\\xb0\\xa4\",\n\t\t\"\\xe2\\xb1\\x95\" => \"\\xe2\\xb0\\xa5\",\t\t\"\\xe2\\xb1\\x96\" => \"\\xe2\\xb0\\xa6\",\t\t\"\\xe2\\xb1\\x97\" => \"\\xe2\\xb0\\xa7\",\t\t\"\\xe2\\xb1\\x98\" => \"\\xe2\\xb0\\xa8\",\n\t\t\"\\xe2\\xb1\\x99\" => \"\\xe2\\xb0\\xa9\",\t\t\"\\xe2\\xb1\\x9a\" => \"\\xe2\\xb0\\xaa\",\t\t\"\\xe2\\xb1\\x9b\" => \"\\xe2\\xb0\\xab\",\t\t\"\\xe2\\xb1\\x9c\" => \"\\xe2\\xb0\\xac\",\n\t\t\"\\xe2\\xb1\\x9d\" => \"\\xe2\\xb0\\xad\",\t\t\"\\xe2\\xb1\\x9e\" => \"\\xe2\\xb0\\xae\",\t\t\"\\xe2\\xb1\\xa1\" => \"\\xe2\\xb1\\xa0\",\t\t\"\\xc9\\xab\" => \"\\xe2\\xb1\\xa2\",\n\t\t\"\\xe1\\xb5\\xbd\" => \"\\xe2\\xb1\\xa3\",\t\t\"\\xc9\\xbd\" => \"\\xe2\\xb1\\xa4\",\t\t\"\\xe2\\xb1\\xa8\" => \"\\xe2\\xb1\\xa7\",\t\t\"\\xe2\\xb1\\xaa\" => \"\\xe2\\xb1\\xa9\",\n\t\t\"\\xe2\\xb1\\xac\" => \"\\xe2\\xb1\\xab\",\t\t\"\\xe2\\xb1\\xb6\" => \"\\xe2\\xb1\\xb5\",\t\t\"\\xe2\\xb2\\x81\" => \"\\xe2\\xb2\\x80\",\t\t\"\\xe2\\xb2\\x83\" => \"\\xe2\\xb2\\x82\",\n\t\t\"\\xe2\\xb2\\x85\" => \"\\xe2\\xb2\\x84\",\t\t\"\\xe2\\xb2\\x87\" => \"\\xe2\\xb2\\x86\",\t\t\"\\xe2\\xb2\\x89\" => \"\\xe2\\xb2\\x88\",\t\t\"\\xe2\\xb2\\x8b\" => \"\\xe2\\xb2\\x8a\",\n\t\t\"\\xe2\\xb2\\x8d\" => \"\\xe2\\xb2\\x8c\",\t\t\"\\xe2\\xb2\\x8f\" => \"\\xe2\\xb2\\x8e\",\t\t\"\\xe2\\xb2\\x91\" => \"\\xe2\\xb2\\x90\",\t\t\"\\xe2\\xb2\\x93\" => \"\\xe2\\xb2\\x92\",\n\t\t\"\\xe2\\xb2\\x95\" => \"\\xe2\\xb2\\x94\",\t\t\"\\xe2\\xb2\\x97\" => \"\\xe2\\xb2\\x96\",\t\t\"\\xe2\\xb2\\x99\" => \"\\xe2\\xb2\\x98\",\t\t\"\\xe2\\xb2\\x9b\" => \"\\xe2\\xb2\\x9a\",\n\t\t\"\\xe2\\xb2\\x9d\" => \"\\xe2\\xb2\\x9c\",\t\t\"\\xe2\\xb2\\x9f\" => \"\\xe2\\xb2\\x9e\",\t\t\"\\xe2\\xb2\\xa1\" => \"\\xe2\\xb2\\xa0\",\t\t\"\\xe2\\xb2\\xa3\" => \"\\xe2\\xb2\\xa2\",\n\t\t\"\\xe2\\xb2\\xa5\" => \"\\xe2\\xb2\\xa4\",\t\t\"\\xe2\\xb2\\xa7\" => \"\\xe2\\xb2\\xa6\",\t\t\"\\xe2\\xb2\\xa9\" => \"\\xe2\\xb2\\xa8\",\t\t\"\\xe2\\xb2\\xab\" => \"\\xe2\\xb2\\xaa\",\n\t\t\"\\xe2\\xb2\\xad\" => \"\\xe2\\xb2\\xac\",\t\t\"\\xe2\\xb2\\xaf\" => \"\\xe2\\xb2\\xae\",\t\t\"\\xe2\\xb2\\xb1\" => \"\\xe2\\xb2\\xb0\",\t\t\"\\xe2\\xb2\\xb3\" => \"\\xe2\\xb2\\xb2\",\n\t\t\"\\xe2\\xb2\\xb5\" => \"\\xe2\\xb2\\xb4\",\t\t\"\\xe2\\xb2\\xb7\" => \"\\xe2\\xb2\\xb6\",\t\t\"\\xe2\\xb2\\xb9\" => \"\\xe2\\xb2\\xb8\",\t\t\"\\xe2\\xb2\\xbb\" => \"\\xe2\\xb2\\xba\",\n\t\t\"\\xe2\\xb2\\xbd\" => \"\\xe2\\xb2\\xbc\",\t\t\"\\xe2\\xb2\\xbf\" => \"\\xe2\\xb2\\xbe\",\t\t\"\\xe2\\xb3\\x81\" => \"\\xe2\\xb3\\x80\",\t\t\"\\xe2\\xb3\\x83\" => \"\\xe2\\xb3\\x82\",\n\t\t\"\\xe2\\xb3\\x85\" => \"\\xe2\\xb3\\x84\",\t\t\"\\xe2\\xb3\\x87\" => \"\\xe2\\xb3\\x86\",\t\t\"\\xe2\\xb3\\x89\" => \"\\xe2\\xb3\\x88\",\t\t\"\\xe2\\xb3\\x8b\" => \"\\xe2\\xb3\\x8a\",\n\t\t\"\\xe2\\xb3\\x8d\" => \"\\xe2\\xb3\\x8c\",\t\t\"\\xe2\\xb3\\x8f\" => \"\\xe2\\xb3\\x8e\",\t\t\"\\xe2\\xb3\\x91\" => \"\\xe2\\xb3\\x90\",\t\t\"\\xe2\\xb3\\x93\" => \"\\xe2\\xb3\\x92\",\n\t\t\"\\xe2\\xb3\\x95\" => \"\\xe2\\xb3\\x94\",\t\t\"\\xe2\\xb3\\x97\" => \"\\xe2\\xb3\\x96\",\t\t\"\\xe2\\xb3\\x99\" => \"\\xe2\\xb3\\x98\",\t\t\"\\xe2\\xb3\\x9b\" => \"\\xe2\\xb3\\x9a\",\n\t\t\"\\xe2\\xb3\\x9d\" => \"\\xe2\\xb3\\x9c\",\t\t\"\\xe2\\xb3\\x9f\" => \"\\xe2\\xb3\\x9e\",\t\t\"\\xe2\\xb3\\xa1\" => \"\\xe2\\xb3\\xa0\",\t\t\"\\xe2\\xb3\\xa3\" => \"\\xe2\\xb3\\xa2\",\n\t\t\"ff\" => \"\\xef\\xac\\x80\",\t\"fi\" => \"\\xef\\xac\\x81\",\t\"fl\" => \"\\xef\\xac\\x82\",\t\"ffi\" => \"\\xef\\xac\\x83\",\n\t\t\"ffl\" => \"\\xef\\xac\\x84\",\t\"st\" => \"\\xef\\xac\\x85\",\t\"st\" => \"\\xef\\xac\\x86\",\t\"\\xd5\\xb4\\xd5\\xb6\" => \"\\xef\\xac\\x93\",\n\t\t\"\\xd5\\xb4\\xd5\\xa5\" => \"\\xef\\xac\\x94\",\t\"\\xd5\\xb4\\xd5\\xab\" => \"\\xef\\xac\\x95\",\t\"\\xd5\\xbe\\xd5\\xb6\" => \"\\xef\\xac\\x96\",\t\"\\xd5\\xb4\\xd5\\xad\" => \"\\xef\\xac\\x97\",\n\t\t\"\\xef\\xbd\\x81\" => \"\\xef\\xbc\\xa1\",\t\t\"\\xef\\xbd\\x82\" => \"\\xef\\xbc\\xa2\",\t\t\"\\xef\\xbd\\x83\" => \"\\xef\\xbc\\xa3\",\t\t\"\\xef\\xbd\\x84\" => \"\\xef\\xbc\\xa4\",\n\t\t\"\\xef\\xbd\\x85\" => \"\\xef\\xbc\\xa5\",\t\t\"\\xef\\xbd\\x86\" => \"\\xef\\xbc\\xa6\",\t\t\"\\xef\\xbd\\x87\" => \"\\xef\\xbc\\xa7\",\t\t\"\\xef\\xbd\\x88\" => \"\\xef\\xbc\\xa8\",\n\t\t\"\\xef\\xbd\\x89\" => \"\\xef\\xbc\\xa9\",\t\t\"\\xef\\xbd\\x8a\" => \"\\xef\\xbc\\xaa\",\t\t\"\\xef\\xbd\\x8b\" => \"\\xef\\xbc\\xab\",\t\t\"\\xef\\xbd\\x8c\" => \"\\xef\\xbc\\xac\",\n\t\t\"\\xef\\xbd\\x8d\" => \"\\xef\\xbc\\xad\",\t\"\\xef\\xbd\\x8e\" => \"\\xef\\xbc\\xae\",\t\t\"\\xef\\xbd\\x8f\" => \"\\xef\\xbc\\xaf\",\t\t\"\\xef\\xbd\\x90\" => \"\\xef\\xbc\\xb0\",\n\t\t\"\\xef\\xbd\\x91\" => \"\\xef\\xbc\\xb1\",\t\t\"\\xef\\xbd\\x92\" => \"\\xef\\xbc\\xb2\",\t\t\"\\xef\\xbd\\x93\" => \"\\xef\\xbc\\xb3\",\t\t\"\\xef\\xbd\\x94\" => \"\\xef\\xbc\\xb4\",\n\t\t\"\\xef\\xbd\\x95\" => \"\\xef\\xbc\\xb5\",\t\t\"\\xef\\xbd\\x96\" => \"\\xef\\xbc\\xb6\",\t\t\"\\xef\\xbd\\x97\" => \"\\xef\\xbc\\xb7\",\t\"\\xef\\xbd\\x98\" => \"\\xef\\xbc\\xb8\",\n\t\t\"\\xef\\xbd\\x99\" => \"\\xef\\xbc\\xb9\",\t\t\"\\xef\\xbd\\x9a\" => \"\\xef\\xbc\\xba\",\t\t\"\\xf0\\x90\\x90\\xa8\" => \"\\xf0\\x90\\x90\\x80\",\t\"\\xf0\\x90\\x90\\xa9\" => \"\\xf0\\x90\\x90\\x81\",\n\t\t\"\\xf0\\x90\\x90\\xaa\" => \"\\xf0\\x90\\x90\\x82\",\t\"\\xf0\\x90\\x90\\xab\" => \"\\xf0\\x90\\x90\\x83\",\t\"\\xf0\\x90\\x90\\xac\" => \"\\xf0\\x90\\x90\\x84\",\t\"\\xf0\\x90\\x90\\xad\" => \"\\xf0\\x90\\x90\\x85\",\n\t\t\"\\xf0\\x90\\x90\\xae\" => \"\\xf0\\x90\\x90\\x86\",\t\"\\xf0\\x90\\x90\\xaf\" => \"\\xf0\\x90\\x90\\x87\",\t\"\\xf0\\x90\\x90\\xb0\" => \"\\xf0\\x90\\x90\\x88\",\t\"\\xf0\\x90\\x90\\xb1\" => \"\\xf0\\x90\\x90\\x89\",\n\t\t\"\\xf0\\x90\\x90\\xb2\" => \"\\xf0\\x90\\x90\\x8a\",\t\"\\xf0\\x90\\x90\\xb3\" => \"\\xf0\\x90\\x90\\x8b\",\t\"\\xf0\\x90\\x90\\xb4\" => \"\\xf0\\x90\\x90\\x8c\",\t\"\\xf0\\x90\\x90\\xb5\" => \"\\xf0\\x90\\x90\\x8d\",\n\t\t\"\\xf0\\x90\\x90\\xb6\" => \"\\xf0\\x90\\x90\\x8e\",\t\"\\xf0\\x90\\x90\\xb7\" => \"\\xf0\\x90\\x90\\x8f\",\t\"\\xf0\\x90\\x90\\xb8\" => \"\\xf0\\x90\\x90\\x90\",\t\"\\xf0\\x90\\x90\\xb9\" => \"\\xf0\\x90\\x90\\x91\",\n\t\t\"\\xf0\\x90\\x90\\xba\" => \"\\xf0\\x90\\x90\\x92\",\t\"\\xf0\\x90\\x90\\xbb\" => \"\\xf0\\x90\\x90\\x93\",\t\"\\xf0\\x90\\x90\\xbc\" => \"\\xf0\\x90\\x90\\x94\",\t\"\\xf0\\x90\\x90\\xbd\" => \"\\xf0\\x90\\x90\\x95\",\n\t\t\"\\xf0\\x90\\x90\\xbe\" => \"\\xf0\\x90\\x90\\x96\",\t\"\\xf0\\x90\\x90\\xbf\" => \"\\xf0\\x90\\x90\\x97\",\t\"\\xf0\\x90\\x91\\x80\" => \"\\xf0\\x90\\x90\\x98\",\t\"\\xf0\\x90\\x91\\x81\" => \"\\xf0\\x90\\x90\\x99\",\n\t\t\"\\xf0\\x90\\x91\\x82\" => \"\\xf0\\x90\\x90\\x9a\",\t\"\\xf0\\x90\\x91\\x83\" => \"\\xf0\\x90\\x90\\x9b\",\t\"\\xf0\\x90\\x91\\x84\" => \"\\xf0\\x90\\x90\\x9c\",\t\"\\xf0\\x90\\x91\\x85\" => \"\\xf0\\x90\\x90\\x9d\",\n\t\t\"\\xf0\\x90\\x91\\x86\" => \"\\xf0\\x90\\x90\\x9e\",\t\"\\xf0\\x90\\x91\\x87\" => \"\\xf0\\x90\\x90\\x9f\",\t\"\\xf0\\x90\\x91\\x88\" => \"\\xf0\\x90\\x90\\xa0\",\t\"\\xf0\\x90\\x91\\x89\" => \"\\xf0\\x90\\x90\\xa1\",\n\t\t\"\\xf0\\x90\\x91\\x8a\" => \"\\xf0\\x90\\x90\\xa2\",\t\"\\xf0\\x90\\x91\\x8b\" => \"\\xf0\\x90\\x90\\xa3\",\t\"\\xf0\\x90\\x91\\x8c\" => \"\\xf0\\x90\\x90\\xa4\",\t\"\\xf0\\x90\\x91\\x8d\" => \"\\xf0\\x90\\x90\\xa5\",\n\t\t\"\\xf0\\x90\\x90\\xa6\" => \"\\xf0\\x90\\x91\\x8e\",\t\"\\xf0\\x90\\x90\\xa7\" => \"\\xf0\\x90\\x91\\x8f\",\n\t);\n\n\treturn strtr($string, $case_folding);\n}\n\n/**\n * Fixes corrupted serialized strings after a character set conversion.\n */\nfunction fix_serialized_columns()\n{\n\tglobal $smcFunc;\n\n\t$request = $smcFunc['db_query']('', '\n\t\tSELECT id_action, extra\n\t\tFROM {db_prefix}log_actions\n\t\tWHERE action IN ({string:remove}, {string:delete})',\n\t\tarray(\n\t\t\t'remove' => 'remove',\n\t\t\t'delete' => 'delete',\n\t\t)\n\t);\n\twhile ($row = $smcFunc['db_fetch_assoc']($request))\n\t{\n\t\tif (safe_unserialize($row['extra']) === false && preg_match('~^(a:3:{s:5:\"topic\";i:\\d+;s:7:\"subject\";s:)(\\d+):\"(.+)\"(;s:6:\"member\";s:5:\"\\d+\";})$~', $row['extra'], $matches) === 1)\n\t\t\t$smcFunc['db_query']('', '\n\t\t\t\tUPDATE {db_prefix}log_actions\n\t\t\t\tSET extra = {string:extra}\n\t\t\t\tWHERE id_action = {int:current_action}',\n\t\t\t\tarray(\n\t\t\t\t\t'current_action' => $row['id_action'],\n\t\t\t\t\t'extra' => $matches[1] . strlen($matches[3]) . ':\"' . $matches[3] . '\"' . $matches[4],\n\t\t\t\t)\n\t\t\t);\n\t}\n\t$smcFunc['db_free_result']($request);\n\n\t// Refresh some cached data.\n\tupdateSettings(array(\n\t\t'memberlist_updated' => time(),\n\t));\n\n}\n\n?>", "<?php\n\n/**\n * This file contains a standard way of displaying side/drop down menus for SMF.\n *\n * Simple Machines Forum (SMF)\n *\n * @package SMF\n * @author Simple Machines http://www.simplemachines.org\n * @copyright 2016 Simple Machines and individual contributors\n * @license http://www.simplemachines.org/about/smf/license.php BSD\n *\n * @version 2.1 Beta 3\n */\n\nif (!defined('SMF'))\n\tdie('No direct access...');\n\n/**\n * Create a menu.\n * @param array $menuData An array of menu data\n * @param array $menuOptions An array of menu options\n * @return boolean|array False if nothing to show or an array of info about the selected menu item\n */\nfunction createMenu($menuData, $menuOptions = array())\n{\n\tglobal $context, $settings, $txt, $scripturl, $user_info;\n\n\t/* Note menuData is array of form:\n\n\t\tPossible fields:\n\t\t\tFor Section:\n\t\t\t\tstring $title:\t\tSection title.\n\t\t\t\tbool $enabled:\t\tShould section be shown?\n\t\t\t\tarray $areas:\t\tArray of areas within this section.\n\t\t\t\tarray $permission:\tPermission required to access the whole section.\n\n\t\t\tFor Areas:\n\t\t\t\tarray $permission:\tArray of permissions to determine who can access this area.\n\t\t\t\tstring $label:\t\tOptional text string for link (Otherwise $txt[$index] will be used)\n\t\t\t\tstring $file:\t\tName of source file required for this area.\n\t\t\t\tstring $function:\tFunction to call when area is selected.\n\t\t\t\tstring $custom_url:\tURL to use for this menu item.\n\t\t\t\tbool $enabled:\t\tShould this area even be accessible?\n\t\t\t\tbool $hidden:\t\tShould this area be visible?\n\t\t\t\tstring $select:\t\tIf set this item will not be displayed - instead the item indexed here shall be.\n\t\t\t\tarray $subsections:\tArray of subsections from this area.\n\n\t\t\tFor Subsections:\n\t\t\t\tstring 0:\t\tText label for this subsection.\n\t\t\t\tarray 1:\t\tArray of permissions to check for this subsection.\n\t\t\t\tbool 2:\t\t\tIs this the default subaction - if not set for any will default to first...\n\t\t\t\tbool enabled:\t\tBool to say whether this should be enabled or not.\n\t*/\n\n\t// Every menu gets a unique ID, these are shown in first in, first out order.\n\t$context['max_menu_id'] = isset($context['max_menu_id']) ? $context['max_menu_id'] + 1 : 1;\n\n\t// This will be all the data for this menu - and we'll make a shortcut to it to aid readability here.\n\t$context['menu_data_' . $context['max_menu_id']] = array();\n\t$menu_context = &$context['menu_data_' . $context['max_menu_id']];\n\n\t// What is the general action of this menu (i.e. $scripturl?action=XXXX.\n\t$menu_context['current_action'] = isset($menuOptions['action']) ? $menuOptions['action'] : $context['current_action'];\n\n\t// Allow extend *any* menu with a single hook\n\tif (!empty($menu_context['current_action']))\n\t\tcall_integration_hook('integrate_' . $menu_context['current_action'] . '_areas', array(&$menuData));\n\n\t// What is the current area selected?\n\tif (isset($menuOptions['current_area']) || isset($_GET['area']))\n\t\t$menu_context['current_area'] = isset($menuOptions['current_area']) ? $menuOptions['current_area'] : $_GET['area'];\n\n\t// Build a list of additional parameters that should go in the URL.\n\t$menu_context['extra_parameters'] = '';\n\tif (!empty($menuOptions['extra_url_parameters']))\n\t\tforeach ($menuOptions['extra_url_parameters'] as $key => $value)\n\t\t\t$menu_context['extra_parameters'] .= ';' . $key . '=' . $value;\n\n\t// Only include the session ID in the URL if it's strictly necessary.\n\tif (empty($menuOptions['disable_url_session_check']))\n\t\t$menu_context['extra_parameters'] .= ';' . $context['session_var'] . '=' . $context['session_id'];\n\n\t$include_data = array();\n\n\t// Now setup the context correctly.\n\tforeach ($menuData as $section_id => $section)\n\t{\n\t\t// Is this enabled - or has as permission check - which fails?\n\t\tif ((isset($section['enabled']) && $section['enabled'] == false) || (isset($section['permission']) && !allowedTo($section['permission'])))\n\t\t\tcontinue;\n\n\t\t// Now we cycle through the sections to pick the right area.\n\t\tforeach ($section['areas'] as $area_id => $area)\n\t\t{\n\t\t\t// Can we do this?\n\t\t\tif ((!isset($area['enabled']) || $area['enabled'] != false) && (empty($area['permission']) || allowedTo($area['permission'])))\n\t\t\t{\n\t\t\t\t// Add it to the context... if it has some form of name!\n\t\t\t\tif (isset($area['label']) || (isset($txt[$area_id]) && !isset($area['select'])))\n\t\t\t\t{\n\t\t\t\t\t// If we haven't got an area then the first valid one is our choice.\n\t\t\t\t\tif (!isset($menu_context['current_area']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$menu_context['current_area'] = $area_id;\n\t\t\t\t\t\t$include_data = $area;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If this is hidden from view don't do the rest.\n\t\t\t\t\tif (empty($area['hidden']))\n\t\t\t\t\t{\n\t\t\t\t\t\t// First time this section?\n\t\t\t\t\t\tif (!isset($menu_context['sections'][$section_id]))\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['title'] = $section['title'];\n\n\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id] = array('label' => isset($area['label']) ? $area['label'] : $txt[$area_id]);\n\t\t\t\t\t\t// We'll need the ID as well...\n\t\t\t\t\t\t$menu_context['sections'][$section_id]['id'] = $section_id;\n\t\t\t\t\t\t// Does it have a custom URL?\n\t\t\t\t\t\tif (isset($area['custom_url']))\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['url'] = $area['custom_url'];\n\n\t\t\t\t\t\t// Does this area have its own icon?\n\t\t\t\t\t\tif (!isset($area['force_menu_into_arms_of_another_menu']) && $user_info['name'] == 'iamanoompaloompa')\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id] = safe_unserialize(base64_decode('YTozOntzOjU6ImxhYmVsIjtzOjEyOiJPb21wYSBMb29tcGEiO3M6MzoidXJsIjtzOjQzOiJodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL09vbXBhX0xvb21wYXM/IjtzOjQ6Imljb24iO3M6ODY6IjxpbWcgc3JjPSJodHRwOi8vd3d3LnNpbXBsZW1hY2hpbmVzLm9yZy9pbWFnZXMvb29tcGEuZ2lmIiBhbHQ9IkknbSBhbiBPb21wYSBMb29tcGEiIC8+Ijt9'));\n\t\t\t\t\t\telseif (isset($area['icon']) && file_exists($settings['theme_dir'] . '/images/admin/' . $area['icon']))\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon'] = '<img src=\"' . $settings['images_url'] . '/admin/' . $area['icon'] . '\" alt=\"\">';\n\t\t\t\t\t\telseif (isset($area['icon']) && file_exists($settings['default_theme_dir'] . '/images/admin/' . $area['icon']))\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon'] = '<img src=\"' . $settings['default_images_url'] . '/admin/' . $area['icon'] . '\" alt=\"\">';\n\t\t\t\t\t\telseif (isset($area['icon']))\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon'] = '<span class=\"generic_icons ' . $area['icon'] . '\"></span>';\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon'] = '<span class=\"generic_icons ' . $area_id . '\"></span>';\n\n\t\t\t\t\t\tif (isset($area['icon_class']) && empty($menu_context['sections'][$section_id]['areas'][$area_id]['icon']))\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon_class'] = $menu_context['current_action'] . '_menu_icon ' . $area['icon_class'];\n\t\t\t\t\t\telseif (isset($area['icon']))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ((substr($area['icon'], -4) === '.png' || substr($area['icon'], -4) === '.gif') && file_exists($settings['theme_dir'] . '/images/admin/big/' . $area['icon']))\n\t\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon_file'] = $settings['theme_url'] . '/images/admin/big/' . $area['icon'];\n\t\t\t\t\t\t\telseif ((substr($area['icon'], -4) === '.png' || substr($area['icon'], -4) === '.gif') && file_exists($settings['default_theme_dir'] . '/images/admin/big/' . $area['icon']))\n\t\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon_file'] = $settings['default_theme_url'] . '/images/admin/big/' . $area['icon'];\n\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon_class'] = $menu_context['current_action'] . '_menu_icon ' . str_replace(array('.png', '.gif'), '', $area['icon']);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['icon_class'] = $menu_context['current_action'] . '_menu_icon ' . str_replace(array('.png', '.gif'), '', $area_id);\n\n\t\t\t\t\t\t// Some areas may be listed but not active, which we show as greyed out.\n\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['inactive'] = !empty($area['inactive']);\n\n\t\t\t\t\t\t// Did it have subsections?\n\t\t\t\t\t\tif (!empty($area['subsections']))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['subsections'] = array();\n\t\t\t\t\t\t\t$first_sa = $last_sa = null;\n\t\t\t\t\t\t\tforeach ($area['subsections'] as $sa => $sub)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif ((empty($sub[1]) || allowedTo($sub[1])) && (!isset($sub['enabled']) || !empty($sub['enabled'])))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif ($first_sa == null)\n\t\t\t\t\t\t\t\t\t\t$first_sa = $sa;\n\n\t\t\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['subsections'][$sa] = array('label' => $sub[0]);\n\t\t\t\t\t\t\t\t\t// Custom URL?\n\t\t\t\t\t\t\t\t\tif (isset($sub['url']))\n\t\t\t\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['subsections'][$sa]['url'] = $sub['url'];\n\n\t\t\t\t\t\t\t\t\t// A bit complicated - but is this set?\n\t\t\t\t\t\t\t\t\tif ($menu_context['current_area'] == $area_id)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t// Save which is the first...\n\t\t\t\t\t\t\t\t\t\tif (empty($first_sa))\n\t\t\t\t\t\t\t\t\t\t\t$first_sa = $sa;\n\n\t\t\t\t\t\t\t\t\t\t// Is this the current subsection?\n\t\t\t\t\t\t\t\t\t\tif (isset($_REQUEST['sa']) && $_REQUEST['sa'] == $sa)\n\t\t\t\t\t\t\t\t\t\t\t$menu_context['current_subsection'] = $sa;\n\t\t\t\t\t\t\t\t\t\t// Otherwise is it the default?\n\t\t\t\t\t\t\t\t\t\telseif (!isset($menu_context['current_subsection']) && !empty($sub[2]))\n\t\t\t\t\t\t\t\t\t\t\t$menu_context['current_subsection'] = $sa;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Let's assume this is the last, for now.\n\t\t\t\t\t\t\t\t\t$last_sa = $sa;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Mark it as disabled...\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['subsections'][$sa]['disabled'] = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Set which one is first, last and selected in the group.\n\t\t\t\t\t\t\tif (!empty($menu_context['sections'][$section_id]['areas'][$area_id]['subsections']))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['subsections'][$context['right_to_left'] ? $last_sa : $first_sa]['is_first'] = true;\n\t\t\t\t\t\t\t\t$menu_context['sections'][$section_id]['areas'][$area_id]['subsections'][$context['right_to_left'] ? $first_sa : $last_sa]['is_last'] = true;\n\n\t\t\t\t\t\t\t\tif ($menu_context['current_area'] == $area_id && !isset($menu_context['current_subsection']))\n\t\t\t\t\t\t\t\t\t$menu_context['current_subsection'] = $first_sa;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Is this the current section?\n\t\t\t\tif ($menu_context['current_area'] == $area_id && empty($found_section))\n\t\t\t\t{\n\t\t\t\t\t// Only do this once?\n\t\t\t\t\t$found_section = true;\n\n\t\t\t\t\t// Update the context if required - as we can have areas pretending to be others. ;)\n\t\t\t\t\t$menu_context['current_section'] = $section_id;\n\t\t\t\t\t$menu_context['current_area'] = isset($area['select']) ? $area['select'] : $area_id;\n\n\t\t\t\t\t// This will be the data we return.\n\t\t\t\t\t$include_data = $area;\n\t\t\t\t}\n\t\t\t\t// Make sure we have something in case it's an invalid area.\n\t\t\t\telseif (empty($found_section) && empty($include_data))\n\t\t\t\t{\n\t\t\t\t\t$menu_context['current_section'] = $section_id;\n\t\t\t\t\t$backup_area = isset($area['select']) ? $area['select'] : $area_id;\n\t\t\t\t\t$include_data = $area;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Should we use a custom base url, or use the default?\n\t$menu_context['base_url'] = isset($menuOptions['base_url']) ? $menuOptions['base_url'] : $scripturl . '?action=' . $menu_context['current_action'];\n\n\t// If we didn't find the area we were looking for go to a default one.\n\tif (isset($backup_area) && empty($found_section))\n\t\t$menu_context['current_area'] = $backup_area;\n\n\t// If there are sections quickly goes through all the sections to check if the base menu has an url\n\tif (!empty($menu_context['current_section']))\n\t{\n\t\t$menu_context['sections'][$menu_context['current_section']]['selected'] = true;\n\t\t$menu_context['sections'][$menu_context['current_section']]['areas'][$menu_context['current_area']]['selected'] = true;\n\t\tif (!empty($menu_context['sections'][$menu_context['current_section']]['areas'][$menu_context['current_area']]['subsections'][$context['current_subaction']]))\n\t\t\t$menu_context['sections'][$menu_context['current_section']]['areas'][$menu_context['current_area']]['subsections'][$context['current_subaction']]['selected'] = true;\n\n\t\tforeach ($menu_context['sections'] as $section_id => $section)\n\t\t\tforeach ($section['areas'] as $area_id => $area)\n\t\t\t{\n\t\t\t\tif (!isset($menu_context['sections'][$section_id]['url']))\n\t\t\t\t{\n\t\t\t\t\t$menu_context['sections'][$section_id]['url'] = isset($area['url']) ? $area['url'] : $menu_context['base_url'] . ';area=' . $area_id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t}\n\n\t// If still no data then return - nothing to show!\n\tif (empty($menu_context['sections']))\n\t{\n\t\t// Never happened!\n\t\t$context['max_menu_id']--;\n\t\tif ($context['max_menu_id'] == 0)\n\t\t\tunset($context['max_menu_id']);\n\n\t\treturn false;\n\t}\n\n\t// Almost there - load the template and add to the template layers.\n\tloadTemplate(isset($menuOptions['template_name']) ? $menuOptions['template_name'] : 'GenericMenu');\n\t$menu_context['layer_name'] = (isset($menuOptions['layer_name']) ? $menuOptions['layer_name'] : 'generic_menu') . '_dropdown';\n\t$context['template_layers'][] = $menu_context['layer_name'];\n\n\t// Check we had something - for sanity sake.\n\tif (empty($include_data))\n\t\treturn false;\n\n\t// Finally - return information on the selected item.\n\t$include_data += array(\n\t\t'current_action' => $menu_context['current_action'],\n\t\t'current_area' => $menu_context['current_area'],\n\t\t'current_section' => $menu_context['current_section'],\n\t\t'current_subsection' => !empty($menu_context['current_subsection']) ? $menu_context['current_subsection'] : '',\n\t);\n\n\treturn $include_data;\n}\n\n/**\n * Delete a menu.\n * @param string $menu_id The ID of the menu to destroy or 'last' for the most recent one\n * @return bool|void False if the menu doesn't exist, nothing otherwise\n */\nfunction destroyMenu($menu_id = 'last')\n{\n\tglobal $context;\n\n\t$menu_name = $menu_id == 'last' && isset($context['max_menu_id']) && isset($context['menu_data_' . $context['max_menu_id']]) ? 'menu_data_' . $context['max_menu_id'] : 'menu_data_' . $menu_id;\n\tif (!isset($context[$menu_name]))\n\t\treturn false;\n\n\t$layer_index = array_search($context[$menu_name]['layer_name'], $context['template_layers']);\n\tif ($layer_index !== false)\n\t\tunset($context['template_layers'][$layer_index]);\n\n\tunset($context[$menu_name]);\n}\n\n?>"], "filenames": ["Sources/Calendar.php", "Sources/Load.php", "Sources/LogInOut.php", "Sources/Subs-Auth.php", "Sources/Subs-Charset.php", "Sources/Subs-Menu.php"], "buggy_code_start_loc": [503, 384, 106, 47, 572, 125], "buggy_code_end_loc": [516, 624, 693, 48, 573, 126], "fixing_code_start_loc": [503, 384, 106, 47, 572, 125], "fixing_code_end_loc": [516, 624, 693, 48, 573, 126], "type": "CWE-94", "message": "LogInOut.php in Simple Machines Forum (SMF) 2.1 allows remote attackers to conduct PHP object injection attacks and execute arbitrary PHP code via vectors related to variables derived from user input in a foreach loop.", "other": {"cve": {"id": "CVE-2016-5727", "sourceIdentifier": "cve@mitre.org", "published": "2017-02-09T15:59:01.160", "lastModified": "2017-02-23T18:25:11.980", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "LogInOut.php in Simple Machines Forum (SMF) 2.1 allows remote attackers to conduct PHP object injection attacks and execute arbitrary PHP code via vectors related to variables derived from user input in a foreach loop."}, {"lang": "es", "value": "LogInOut.php en Simple Machines Forum (SMF) 2.1 permite a atacantes remotos llevar a cabo ataques de inyecci\u00f3n de objetos PHP y ejecutar c\u00f3digo PHP arbitrario a trav\u00e9s de vectores relacionados con las variables derivadas de la entrada del usuario en un bucle foreach."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:simplemachines:simple_machines_forum:2.1:*:*:*:*:*:*:*", "matchCriteriaId": "774F215A-067D-4597-9EA0-B5393F089062"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2016/06/10/7", "source": "cve@mitre.org", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2016/06/18/1", "source": "cve@mitre.org", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/SimpleMachines/SMF2.1/commit/19e560b9f3e8fc6d7d9d60c1ff617b5ed5c08008#diff-513c4f9c501cbefcc14420c01848f23c", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/SimpleMachines/SMF2.1/issues/3522", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/SimpleMachines/SMF2.1/commit/19e560b9f3e8fc6d7d9d60c1ff617b5ed5c08008#diff-513c4f9c501cbefcc14420c01848f23c"}}