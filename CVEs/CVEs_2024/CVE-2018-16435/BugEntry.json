{"buggy_code": ["<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{62812507-F926-4968-96A9-17678460AD90}</ProjectGuid>\n    <RootNamespace>jpegicc</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(IncludePath);;C:\\code\\jpeg-9a</IncludePath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(IncludePath);;C:\\code\\jpeg-9a</IncludePath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(LibraryPath);;C:\\code\\jpeg-9a</LibraryPath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(LibraryPath);;C:\\code\\jpeg-9a</LibraryPath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(IncludePath);;C:\\code\\jpeg-9a</IncludePath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(IncludePath);;C:\\code\\jpeg-9a</IncludePath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(LibraryPath);;C:\\code\\jpeg-9a</LibraryPath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(LibraryPath);;C:\\code\\jpeg-9a</LibraryPath>\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libjpeg.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libjpeg.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>Full</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libjpeg.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>Full</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libjpeg.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\vprf.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\xgetopt.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\jpgicc\\iccjpeg.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\jpgicc\\jpgicc.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ProjectReference Include=\"..\\lcms2_static\\lcms2_static.vcxproj\">\n      <Project>{71dede59-3f1e-486b-a899-4283000f76b5}</Project>\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n    </ProjectReference>\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{8C51BE48-ADB8-4089-A9EC-F6BF993A0548}</ProjectGuid>\n    <RootNamespace>lcms2_DLL</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>DynamicLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>DynamicLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>DynamicLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>DynamicLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <TargetName>lcms2</TargetName>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <TargetName>lcms2</TargetName>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <TargetName>lcms2</TargetName>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <TargetName>lcms2</TargetName>\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;_USRDLL;CMS_DLL_BUILD;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <StringPooling>false</StringPooling>\n    </ClCompile>\n    <Link>\n      <ModuleDefinitionFile>..\\..\\..\\src\\lcms2.def</ModuleDefinitionFile>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Windows</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;_USRDLL;CMS_DLL_BUILD;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <StringPooling>false</StringPooling>\n    </ClCompile>\n    <Link>\n      <ModuleDefinitionFile>\n      </ModuleDefinitionFile>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Windows</SubSystem>\n      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>Full</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>\n      <WholeProgramOptimization>true</WholeProgramOptimization>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;_USRDLL;CMS_DLL_BUILD;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <StringPooling>true</StringPooling>\n      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <ModuleDefinitionFile>..\\..\\..\\src\\lcms2.def</ModuleDefinitionFile>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Windows</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>Full</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>\n      <WholeProgramOptimization>true</WholeProgramOptimization>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;_USRDLL;CMS_DLL_BUILD;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <StringPooling>true</StringPooling>\n      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <ModuleDefinitionFile>\n      </ModuleDefinitionFile>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Windows</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\src\\cmsalpha.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmscam02.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmscgats.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmscnvrt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmserr.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsgamma.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsgmt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmshalf.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsintrp.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsio0.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsio1.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmslut.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsmd5.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsmtrx.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsnamed.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsopt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmspack.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmspcs.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsplugin.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsps2.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmssamp.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmssm.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmstypes.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsvirt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmswtpnt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsxform.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <CustomBuild Include=\"..\\..\\..\\src\\lcms2.def\">\n      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</ExcludedFromBuild>\n    </CustomBuild>\n  </ItemGroup>\n  <ItemGroup>\n    <ClInclude Include=\"..\\..\\..\\src\\lcms2_internal.h\" />\n    <ClInclude Include=\"..\\..\\..\\include\\lcms2.h\" />\n    <ClInclude Include=\"..\\..\\..\\include\\lcms2_plugin.h\" />\n    <ClInclude Include=\"..\\resource.h\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ResourceCompile Include=\"..\\lcms2.rc\" />\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{71DEDE59-3F1E-486B-A899-4283000F76B5}</ProjectGuid>\n    <RootNamespace>lcms2_static</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>StaticLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>StaticLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>StaticLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>StaticLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\Lib\\MS\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\Lib\\MS\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\Lib\\MS\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\Lib\\MS\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <FunctionLevelLinking>\n      </FunctionLevelLinking>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n    </ClCompile>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <FunctionLevelLinking>\n      </FunctionLevelLinking>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <CompileAs>Default</CompileAs>\n    </ClCompile>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>false</EnableFiberSafeOptimizations>\n      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n      <ExceptionHandling>false</ExceptionHandling>\n      <StringPooling>true</StringPooling>\n      <FloatingPointModel>Precise</FloatingPointModel>\n      <FloatingPointExceptions>false</FloatingPointExceptions>\n      <RuntimeTypeInfo>false</RuntimeTypeInfo>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>\n      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n      <ExceptionHandling>false</ExceptionHandling>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>\n      <StringPooling>true</StringPooling>\n    </ClCompile>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\src\\cmsalpha.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmscam02.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmscgats.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmscnvrt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmserr.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsgamma.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsgmt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmshalf.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsintrp.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsio0.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsio1.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmslut.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsmd5.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsmtrx.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsnamed.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsopt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmspack.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmspcs.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsplugin.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsps2.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmssamp.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmssm.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmstypes.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsvirt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmswtpnt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsxform.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ClInclude Include=\"..\\..\\..\\src\\lcms2_internal.h\" />\n    <ClInclude Include=\"..\\..\\..\\include\\lcms2.h\" />\n    <ClInclude Include=\"..\\..\\..\\include\\lcms2_plugin.h\" />\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{FBFBE1DC-DB84-4BA1-9552-B4780F457849}</ProjectGuid>\n    <RootNamespace>linkicc</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\utils\\linkicc\\linkicc.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\vprf.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\xgetopt.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ProjectReference Include=\"..\\lcms2_static\\lcms2_static.vcxproj\">\n      <Project>{71dede59-3f1e-486b-a899-4283000f76b5}</Project>\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n    </ProjectReference>\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{EF6A8851-65FE-46F5-B9EF-14F0B671F693}</ProjectGuid>\n    <RootNamespace>psicc</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\utils\\psicc\\psicc.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\vprf.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\xgetopt.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ProjectReference Include=\"..\\lcms2_static\\lcms2_static.vcxproj\">\n      <Project>{71dede59-3f1e-486b-a899-4283000f76b5}</Project>\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n    </ProjectReference>\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{928A3A2B-46EF-4279-959C-513B3652FF0E}</ProjectGuid>\n    <RootNamespace>testbed</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\testbed\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\testbed\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\testbed\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\testbed\\</OutDir>\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n      <Profile>false</Profile>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <Profile>false</Profile>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>Full</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>false</EnableFiberSafeOptimizations>\n      <AdditionalIncludeDirectories>../../../include;../../../src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <BufferSecurityCheck>false</BufferSecurityCheck>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <CallingConvention>Cdecl</CallingConvention>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n      <Profile>false</Profile>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>Full</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>\n      <AdditionalIncludeDirectories>../../../include;../../../src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n      <BufferSecurityCheck>false</BufferSecurityCheck>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <CallingConvention>Cdecl</CallingConvention>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <Profile>false</Profile>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ProjectReference Include=\"..\\lcms2_static\\lcms2_static.vcxproj\">\n      <Project>{71dede59-3f1e-486b-a899-4283000f76b5}</Project>\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n    </ProjectReference>\n  </ItemGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\testbed\\testcms2.c\" />\n    <ClCompile Include=\"..\\..\\..\\testbed\\testplugin.c\" />\n    <ClCompile Include=\"..\\..\\..\\testbed\\zoo_icc.c\" />\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{75B91835-CCD7-48BE-A606-A9C997D5DBEE}</ProjectGuid>\n    <RootNamespace>tiffdiff</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">C:\\jpeg-8d;c:\\tiff-4.0.2\\libtiff;$(IncludePath)</IncludePath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">C:\\jpeg-8d;c:\\tiff-4.0.2\\libtiff;$(IncludePath)</IncludePath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">C:\\jpeg-8d;C:\\tiff-4.0.2\\libtiff;$(LibraryPath)</LibraryPath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">C:\\jpeg-8d;C:\\tiff-4.0.2\\libtiff;$(LibraryPath)</LibraryPath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">C:\\jpeg-8d;c:\\tiff-4.0.2\\libtiff;$(IncludePath)</IncludePath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">C:\\jpeg-8d;c:\\tiff-4.0.2\\libtiff;$(IncludePath)</IncludePath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">C:\\jpeg-8d;C:\\tiff-4.0.2\\libtiff;$(LibraryPath)</LibraryPath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">C:\\jpeg-8d;C:\\tiff-4.0.2\\libtiff;$(LibraryPath)</LibraryPath>\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\vprf.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\xgetopt.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\tificc\\tifdiff.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ProjectReference Include=\"..\\lcms2_static\\lcms2_static.vcxproj\">\n      <Project>{71dede59-3f1e-486b-a899-4283000f76b5}</Project>\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n    </ProjectReference>\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{2256DE16-ED92-4A6F-9C54-F65BB61E64A2}</ProjectGuid>\n    <RootNamespace>tifficc</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(IncludePath);C:\\tiff-4.0.2\\libtiff</IncludePath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(IncludePath);C:\\tiff-4.0.2\\libtiff</IncludePath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(LibraryPath);C:\\tiff-4.0.2\\libtiff</LibraryPath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(LibraryPath);C:\\tiff-4.0.2\\libtiff</LibraryPath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(IncludePath);C:\\tiff-4.0.2\\libtiff</IncludePath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(IncludePath);C:\\tiff-4.0.2\\libtiff</IncludePath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(LibraryPath);C:\\tiff-4.0.2\\libtiff</LibraryPath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(LibraryPath);C:\\tiff-4.0.2\\libtiff</LibraryPath>\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\vprf.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\xgetopt.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\tificc\\tificc.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ClInclude Include=\"..\\..\\..\\utils\\common\\utils.h\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ProjectReference Include=\"..\\lcms2_static\\lcms2_static.vcxproj\">\n      <Project>{71dede59-3f1e-486b-a899-4283000f76b5}</Project>\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n    </ProjectReference>\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{9EE22D66-C849-474C-9ED5-C3E141DAB160}</ProjectGuid>\n    <RootNamespace>transicc</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\utils\\transicc\\transicc.c\">\n      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</ExcludedFromBuild>\n    </ClCompile>\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\vprf.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\xgetopt.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ClInclude Include=\"..\\..\\..\\utils\\common\\utils.h\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ProjectReference Include=\"..\\lcms2_static\\lcms2_static.vcxproj\">\n      <Project>{71dede59-3f1e-486b-a899-4283000f76b5}</Project>\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n    </ProjectReference>\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "//---------------------------------------------------------------------------------\n//\n//  Little Color Management System\n//  Copyright (c) 1998-2017 Marti Maria Saguer\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the \"Software\"),\n// to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense,\n// and/or sell copies of the Software, and to permit persons to whom the Software\n// is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n// THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n//---------------------------------------------------------------------------------\n//\n\n#include \"lcms2_internal.h\"\n\n\n// IT8.7 / CGATS.17-200x handling -----------------------------------------------------------------------------\n\n\n#define MAXID        128     // Max length of identifier\n#define MAXSTR      1024     // Max length of string\n#define MAXTABLES    255     // Max Number of tables in a single stream\n#define MAXINCLUDE    20     // Max number of nested includes\n\n#define DEFAULT_DBL_FORMAT  \"%.10g\" // Double formatting\n\n#ifdef CMS_IS_WINDOWS_\n#    include <io.h>\n#    define DIR_CHAR    '\\\\'\n#else\n#    define DIR_CHAR    '/'\n#endif\n\n\n// Symbols\ntypedef enum {\n\n        SUNDEFINED,\n        SINUM,      // Integer\n        SDNUM,      // Real\n        SIDENT,     // Identifier\n        SSTRING,    // string\n        SCOMMENT,   // comment\n        SEOLN,      // End of line\n        SEOF,       // End of stream\n        SSYNERROR,  // Syntax error found on stream\n\n        // Keywords\n\n        SBEGIN_DATA,\n        SBEGIN_DATA_FORMAT,\n        SEND_DATA,\n        SEND_DATA_FORMAT,\n        SKEYWORD,\n        SDATA_FORMAT_ID,\n        SINCLUDE\n\n    } SYMBOL;\n\n\n// How to write the value\ntypedef enum {\n\n        WRITE_UNCOOKED,\n        WRITE_STRINGIFY,\n        WRITE_HEXADECIMAL,\n        WRITE_BINARY,\n        WRITE_PAIR\n\n    } WRITEMODE;\n\n// Linked list of variable names\ntypedef struct _KeyVal {\n\n        struct _KeyVal*  Next;\n        char*            Keyword;       // Name of variable\n        struct _KeyVal*  NextSubkey;    // If key is a dictionary, points to the next item\n        char*            Subkey;        // If key is a dictionary, points to the subkey name\n        char*            Value;         // Points to value\n        WRITEMODE        WriteAs;       // How to write the value\n\n   } KEYVALUE;\n\n\n// Linked list of memory chunks (Memory sink)\ntypedef struct _OwnedMem {\n\n        struct _OwnedMem* Next;\n        void *            Ptr;          // Point to value\n\n   } OWNEDMEM;\n\n// Suballocator\ntypedef struct _SubAllocator {\n\n         cmsUInt8Number* Block;\n         cmsUInt32Number BlockSize;\n         cmsUInt32Number Used;\n\n    } SUBALLOCATOR;\n\n// Table. Each individual table can hold properties and rows & cols\ntypedef struct _Table {\n\n        char SheetType[MAXSTR];               // The first row of the IT8 (the type)\n\n        int            nSamples, nPatches;    // Cols, Rows\n        int            SampleID;              // Pos of ID\n\n        KEYVALUE*      HeaderList;            // The properties\n\n        char**         DataFormat;            // The binary stream descriptor\n        char**         Data;                  // The binary stream\n\n    } TABLE;\n\n// File stream being parsed\ntypedef struct _FileContext {\n        char           FileName[cmsMAX_PATH];    // File name if being read from file\n        FILE*          Stream;                   // File stream or NULL if holded in memory\n    } FILECTX;\n\n// This struct hold all information about an open IT8 handler.\ntypedef struct {\n\n\n        cmsUInt32Number  TablesCount;                     // How many tables in this stream\n        cmsUInt32Number  nTable;                          // The actual table\n\n        TABLE Tab[MAXTABLES];\n\n        // Memory management\n        OWNEDMEM*      MemorySink;            // The storage backend\n        SUBALLOCATOR   Allocator;             // String suballocator -- just to keep it fast\n\n        // Parser state machine\n        SYMBOL             sy;                // Current symbol\n        int                ch;                // Current character\n\n        cmsInt32Number     inum;              // integer value\n        cmsFloat64Number   dnum;              // real value\n\n        char           id[MAXID];             // identifier\n        char           str[MAXSTR];           // string\n\n        // Allowed keywords & datasets. They have visibility on whole stream\n        KEYVALUE*      ValidKeywords;\n        KEYVALUE*      ValidSampleID;\n\n        char*          Source;                // Points to loc. being parsed\n        cmsInt32Number lineno;                // line counter for error reporting\n\n        FILECTX*       FileStack[MAXINCLUDE]; // Stack of files being parsed\n        cmsInt32Number IncludeSP;             // Include Stack Pointer\n\n        char*          MemoryBlock;           // The stream if holded in memory\n\n        char           DoubleFormatter[MAXID];// Printf-like 'cmsFloat64Number' formatter\n\n        cmsContext    ContextID;              // The threading context\n\n   } cmsIT8;\n\n\n// The stream for save operations\ntypedef struct {\n\n        FILE* stream;   // For save-to-file behaviour\n\n        cmsUInt8Number* Base;\n        cmsUInt8Number* Ptr;        // For save-to-mem behaviour\n        cmsUInt32Number Used;\n        cmsUInt32Number Max;\n\n    } SAVESTREAM;\n\n\n// ------------------------------------------------------ cmsIT8 parsing routines\n\n\n// A keyword\ntypedef struct {\n\n        const char *id;\n        SYMBOL sy;\n\n   } KEYWORD;\n\n// The keyword->symbol translation table. Sorting is required.\nstatic const KEYWORD TabKeys[] = {\n\n        {\"$INCLUDE\",               SINCLUDE},   // This is an extension!\n        {\".INCLUDE\",               SINCLUDE},   // This is an extension!\n\n        {\"BEGIN_DATA\",             SBEGIN_DATA },\n        {\"BEGIN_DATA_FORMAT\",      SBEGIN_DATA_FORMAT },\n        {\"DATA_FORMAT_IDENTIFIER\", SDATA_FORMAT_ID},\n        {\"END_DATA\",               SEND_DATA},\n        {\"END_DATA_FORMAT\",        SEND_DATA_FORMAT},\n        {\"KEYWORD\",                SKEYWORD}\n        };\n\n#define NUMKEYS (sizeof(TabKeys)/sizeof(KEYWORD))\n\n// Predefined properties\n\n// A property\ntypedef struct {\n        const char *id;    // The identifier\n        WRITEMODE as;      // How is supposed to be written\n    } PROPERTY;\n\nstatic PROPERTY PredefinedProperties[] = {\n\n        {\"NUMBER_OF_FIELDS\", WRITE_UNCOOKED},    // Required - NUMBER OF FIELDS\n        {\"NUMBER_OF_SETS\",   WRITE_UNCOOKED},    // Required - NUMBER OF SETS\n        {\"ORIGINATOR\",       WRITE_STRINGIFY},   // Required - Identifies the specific system, organization or individual that created the data file.\n        {\"FILE_DESCRIPTOR\",  WRITE_STRINGIFY},   // Required - Describes the purpose or contents of the data file.\n        {\"CREATED\",          WRITE_STRINGIFY},   // Required - Indicates date of creation of the data file.\n        {\"DESCRIPTOR\",       WRITE_STRINGIFY},   // Required  - Describes the purpose or contents of the data file.\n        {\"DIFFUSE_GEOMETRY\", WRITE_STRINGIFY},   // The diffuse geometry used. Allowed values are \"sphere\" or \"opal\".\n        {\"MANUFACTURER\",     WRITE_STRINGIFY},\n        {\"MANUFACTURE\",      WRITE_STRINGIFY},   // Some broken Fuji targets does store this value\n        {\"PROD_DATE\",        WRITE_STRINGIFY},   // Identifies year and month of production of the target in the form yyyy:mm.\n        {\"SERIAL\",           WRITE_STRINGIFY},   // Uniquely identifies individual physical target.\n\n        {\"MATERIAL\",         WRITE_STRINGIFY},    // Identifies the material on which the target was produced using a code\n                                                  // uniquely identifying th e material. This is intend ed to be used for IT8.7\n                                                  // physical targets only (i.e . IT8.7/1 a nd IT8.7/2).\n\n        {\"INSTRUMENTATION\",  WRITE_STRINGIFY},    // Used to report the specific instrumentation used (manufacturer and\n                                                  // model number) to generate the data reported. This data will often\n                                                  // provide more information about the particular data collected than an\n                                                  // extensive list of specific details. This is particularly important for\n                                                  // spectral data or data derived from spectrophotometry.\n\n        {\"MEASUREMENT_SOURCE\", WRITE_STRINGIFY},  // Illumination used for spectral measurements. This data helps provide\n                                                  // a guide to the potential for issues of paper fluorescence, etc.\n\n        {\"PRINT_CONDITIONS\", WRITE_STRINGIFY},     // Used to define the characteristics of the printed sheet being reported.\n                                                   // Where standard conditions have been defined (e.g., SWOP at nominal)\n                                                   // named conditions may suffice. Otherwise, detailed information is\n                                                   // needed.\n\n        {\"SAMPLE_BACKING\",   WRITE_STRINGIFY},     // Identifies the backing material used behind the sample during\n                                                   // measurement. Allowed values are \"black\", \"white\", or {\"na\".\n                                                  \n        {\"CHISQ_DOF\",        WRITE_STRINGIFY},     // Degrees of freedom associated with the Chi squared statistic\n                                                   // below properties are new in recent specs:\n\n        {\"MEASUREMENT_GEOMETRY\", WRITE_STRINGIFY}, // The type of measurement, either reflection or transmission, should be indicated\n                                                   // along with details of the geometry and the aperture size and shape. For example,\n                                                   // for transmission measurements it is important to identify 0/diffuse, diffuse/0,\n                                                   // opal or integrating sphere, etc. For reflection it is important to identify 0/45,\n                                                   // 45/0, sphere (specular included or excluded), etc.\n\n       {\"FILTER\",            WRITE_STRINGIFY},     // Identifies the use of physical filter(s) during measurement. Typically used to\n                                                   // denote the use of filters such as none, D65, Red, Green or Blue.\n                                                  \n       {\"POLARIZATION\",      WRITE_STRINGIFY},     // Identifies the use of a physical polarization filter during measurement. Allowed\n                                                   // values are {\"yes\", \"white\", \"none\" or \"na\".\n\n       {\"WEIGHTING_FUNCTION\", WRITE_PAIR},         // Indicates such functions as: the CIE standard observer functions used in the\n                                                   // calculation of various data parameters (2 degree and 10 degree), CIE standard\n                                                   // illuminant functions used in the calculation of various data parameters (e.g., D50,\n                                                   // D65, etc.), density status response, etc. If used there shall be at least one\n                                                   // name-value pair following the WEIGHTING_FUNCTION tag/keyword. The first attribute\n                                                   // in the set shall be {\"name\" and shall identify the particular parameter used.\n                                                   // The second shall be {\"value\" and shall provide the value associated with that name.\n                                                   // For ASCII data, a string containing the Name and Value attribute pairs shall follow\n                                                   // the weighting function keyword. A semi-colon separates attribute pairs from each\n                                                   // other and within the attribute the name and value are separated by a comma.\n\n       {\"COMPUTATIONAL_PARAMETER\", WRITE_PAIR},    // Parameter that is used in computing a value from measured data. Name is the name\n                                                   // of the calculation, parameter is the name of the parameter used in the calculation\n                                                   // and value is the value of the parameter.\n                                                   \n       {\"TARGET_TYPE\",        WRITE_STRINGIFY},    // The type of target being measured, e.g. IT8.7/1, IT8.7/3, user defined, etc.\n                                                  \n       {\"COLORANT\",           WRITE_STRINGIFY},    // Identifies the colorant(s) used in creating the target.\n                                                  \n       {\"TABLE_DESCRIPTOR\",   WRITE_STRINGIFY},    // Describes the purpose or contents of a data table.\n                                                  \n       {\"TABLE_NAME\",         WRITE_STRINGIFY}     // Provides a short name for a data table.\n};\n\n#define NUMPREDEFINEDPROPS (sizeof(PredefinedProperties)/sizeof(PROPERTY))\n\n\n// Predefined sample types on dataset\nstatic const char* PredefinedSampleID[] = {\n        \"SAMPLE_ID\",      // Identifies sample that data represents\n        \"STRING\",         // Identifies label, or other non-machine readable value.\n                          // Value must begin and end with a \" symbol\n\n        \"CMYK_C\",         // Cyan component of CMYK data expressed as a percentage\n        \"CMYK_M\",         // Magenta component of CMYK data expressed as a percentage\n        \"CMYK_Y\",         // Yellow component of CMYK data expressed as a percentage\n        \"CMYK_K\",         // Black component of CMYK data expressed as a percentage\n        \"D_RED\",          // Red filter density\n        \"D_GREEN\",        // Green filter density\n        \"D_BLUE\",         // Blue filter density\n        \"D_VIS\",          // Visual filter density\n        \"D_MAJOR_FILTER\", // Major filter d ensity\n        \"RGB_R\",          // Red component of RGB data\n        \"RGB_G\",          // Green component of RGB data\n        \"RGB_B\",          // Blue com ponent of RGB data\n        \"SPECTRAL_NM\",    // Wavelength of measurement expressed in nanometers\n        \"SPECTRAL_PCT\",   // Percentage reflectance/transmittance\n        \"SPECTRAL_DEC\",   // Reflectance/transmittance\n        \"XYZ_X\",          // X component of tristimulus data\n        \"XYZ_Y\",          // Y component of tristimulus data\n        \"XYZ_Z\",          // Z component of tristimulus data\n        \"XYY_X\",          // x component of chromaticity data\n        \"XYY_Y\",          // y component of chromaticity data\n        \"XYY_CAPY\",       // Y component of tristimulus data\n        \"LAB_L\",          // L* component of Lab data\n        \"LAB_A\",          // a* component of Lab data\n        \"LAB_B\",          // b* component of Lab data\n        \"LAB_C\",          // C*ab component of Lab data\n        \"LAB_H\",          // hab component of Lab data\n        \"LAB_DE\",         // CIE dE\n        \"LAB_DE_94\",      // CIE dE using CIE 94\n        \"LAB_DE_CMC\",     // dE using CMC\n        \"LAB_DE_2000\",    // CIE dE using CIE DE 2000\n        \"MEAN_DE\",        // Mean Delta E (LAB_DE) of samples compared to batch average\n                          // (Used for data files for ANSI IT8.7/1 and IT8.7/2 targets)\n        \"STDEV_X\",        // Standard deviation of X (tristimulus data)\n        \"STDEV_Y\",        // Standard deviation of Y (tristimulus data)\n        \"STDEV_Z\",        // Standard deviation of Z (tristimulus data)\n        \"STDEV_L\",        // Standard deviation of L*\n        \"STDEV_A\",        // Standard deviation of a*\n        \"STDEV_B\",        // Standard deviation of b*\n        \"STDEV_DE\",       // Standard deviation of CIE dE\n        \"CHI_SQD_PAR\"};   // The average of the standard deviations of L*, a* and b*. It is\n                          // used to derive an estimate of the chi-squared parameter which is\n                          // recommended as the predictor of the variability of dE\n\n#define NUMPREDEFINEDSAMPLEID (sizeof(PredefinedSampleID)/sizeof(char *))\n\n//Forward declaration of some internal functions\nstatic void* AllocChunk(cmsIT8* it8, cmsUInt32Number size);\n\n// Checks whatever c is a separator\nstatic\ncmsBool isseparator(int c)\n{\n    return (c == ' ') || (c == '\\t') ; \n}\n\n// Checks whatever c is a valid identifier char\nstatic\ncmsBool ismiddle(int c)\n{\n   return (!isseparator(c) && (c != '#') && (c !='\\\"') && (c != '\\'') && (c > 32) && (c < 127));\n}\n\n// Checks whatsever c is a valid identifier middle char.\nstatic\ncmsBool isidchar(int c)\n{\n   return isalnum(c) || ismiddle(c);\n}\n\n// Checks whatsever c is a valid identifier first char.\nstatic\ncmsBool isfirstidchar(int c)\n{\n     return !isdigit(c) && ismiddle(c);\n}\n\n// Guess whether the supplied path looks like an absolute path\nstatic\ncmsBool isabsolutepath(const char *path)\n{\n    char ThreeChars[4];\n\n    if(path == NULL)\n        return FALSE;\n    if (path[0] == 0)\n        return FALSE;\n\n    strncpy(ThreeChars, path, 3);\n    ThreeChars[3] = 0;\n\n    if(ThreeChars[0] == DIR_CHAR)\n        return TRUE;\n\n#ifdef  CMS_IS_WINDOWS_\n    if (isalpha((int) ThreeChars[0]) && ThreeChars[1] == ':')\n        return TRUE;\n#endif\n    return FALSE;\n}\n\n\n// Makes a file path based on a given reference path\n// NOTE: this function doesn't check if the path exists or even if it's legal\nstatic\ncmsBool BuildAbsolutePath(const char *relPath, const char *basePath, char *buffer, cmsUInt32Number MaxLen)\n{\n    char *tail;\n    cmsUInt32Number len;\n\n    // Already absolute?\n    if (isabsolutepath(relPath)) {\n\n        strncpy(buffer, relPath, MaxLen);\n        buffer[MaxLen-1] = 0;\n        return TRUE;\n    }\n\n    // No, search for last\n    strncpy(buffer, basePath, MaxLen);\n    buffer[MaxLen-1] = 0;\n\n    tail = strrchr(buffer, DIR_CHAR);\n    if (tail == NULL) return FALSE;    // Is not absolute and has no separators??\n\n    len = (cmsUInt32Number) (tail - buffer);\n    if (len >= MaxLen) return FALSE;\n\n    // No need to assure zero terminator over here\n    strncpy(tail + 1, relPath, MaxLen - len);\n\n    return TRUE;\n}\n\n\n// Make sure no exploit is being even tried\nstatic\nconst char* NoMeta(const char* str)\n{\n    if (strchr(str, '%') != NULL)\n        return \"**** CORRUPTED FORMAT STRING ***\";\n\n    return str;\n}\n\n// Syntax error\nstatic\ncmsBool SynError(cmsIT8* it8, const char *Txt, ...)\n{\n    char Buffer[256], ErrMsg[1024];\n    va_list args;\n\n    va_start(args, Txt);\n    vsnprintf(Buffer, 255, Txt, args);\n    Buffer[255] = 0;\n    va_end(args);\n\n    snprintf(ErrMsg, 1023, \"%s: Line %d, %s\", it8->FileStack[it8 ->IncludeSP]->FileName, it8->lineno, Buffer);\n    ErrMsg[1023] = 0;\n    it8->sy = SSYNERROR;\n    cmsSignalError(it8 ->ContextID, cmsERROR_CORRUPTION_DETECTED, \"%s\", ErrMsg);\n    return FALSE;\n}\n\n// Check if current symbol is same as specified. issue an error else.\nstatic\ncmsBool Check(cmsIT8* it8, SYMBOL sy, const char* Err)\n{\n        if (it8 -> sy != sy)\n                return SynError(it8, NoMeta(Err));\n        return TRUE;\n}\n\n// Read Next character from stream\nstatic\nvoid NextCh(cmsIT8* it8)\n{\n    if (it8 -> FileStack[it8 ->IncludeSP]->Stream) {\n\n        it8 ->ch = fgetc(it8 ->FileStack[it8 ->IncludeSP]->Stream);\n\n        if (feof(it8 -> FileStack[it8 ->IncludeSP]->Stream))  {\n\n            if (it8 ->IncludeSP > 0) {\n\n                fclose(it8 ->FileStack[it8->IncludeSP--]->Stream);\n                it8 -> ch = ' ';                            // Whitespace to be ignored\n\n            } else\n                it8 ->ch = 0;   // EOF\n        }\n    }\n    else {\n        it8->ch = *it8->Source;\n        if (it8->ch) it8->Source++;\n    }\n}\n\n\n// Try to see if current identifier is a keyword, if so return the referred symbol\nstatic\nSYMBOL BinSrchKey(const char *id)\n{\n    int l = 1;\n    int r = NUMKEYS;\n    int x, res;\n\n    while (r >= l)\n    {\n        x = (l+r)/2;\n        res = cmsstrcasecmp(id, TabKeys[x-1].id);\n        if (res == 0) return TabKeys[x-1].sy;\n        if (res < 0) r = x - 1;\n        else l = x + 1;\n    }\n\n    return SUNDEFINED;\n}\n\n\n// 10 ^n\nstatic\ncmsFloat64Number xpow10(int n)\n{\n    return pow(10, (cmsFloat64Number) n);\n}\n\n\n//  Reads a Real number, tries to follow from integer number\nstatic\nvoid ReadReal(cmsIT8* it8, cmsInt32Number inum)\n{\n    it8->dnum = (cmsFloat64Number)inum;\n\n    while (isdigit(it8->ch)) {\n\n        it8->dnum = (cmsFloat64Number)it8->dnum * 10.0 + (cmsFloat64Number)(it8->ch - '0');\n        NextCh(it8);\n    }\n\n    if (it8->ch == '.') {        // Decimal point\n\n        cmsFloat64Number frac = 0.0;      // fraction\n        int prec = 0;                     // precision\n\n        NextCh(it8);               // Eats dec. point\n\n        while (isdigit(it8->ch)) {\n\n            frac = frac * 10.0 + (cmsFloat64Number)(it8->ch - '0');\n            prec++;\n            NextCh(it8);\n        }\n\n        it8->dnum = it8->dnum + (frac / xpow10(prec));\n    }\n\n    // Exponent, example 34.00E+20\n    if (toupper(it8->ch) == 'E') {\n\n        cmsInt32Number e;\n        cmsInt32Number sgn;\n\n        NextCh(it8); sgn = 1;\n\n        if (it8->ch == '-') {\n\n            sgn = -1; NextCh(it8);\n        }\n        else\n            if (it8->ch == '+') {\n\n                sgn = +1;\n                NextCh(it8);\n            }\n\n        e = 0;\n        while (isdigit(it8->ch)) {\n\n            cmsInt32Number digit = (it8->ch - '0');\n\n            if ((cmsFloat64Number)e * 10.0 + (cmsFloat64Number)digit < (cmsFloat64Number)+2147483647.0)\n                e = e * 10 + digit;\n\n            NextCh(it8);\n        }\n\n        e = sgn*e;\n        it8->dnum = it8->dnum * xpow10(e);\n    }\n}\n\n// Parses a float number\n// This can not call directly atof because it uses locale dependent\n// parsing, while CCMX files always use . as decimal separator\nstatic\ncmsFloat64Number ParseFloatNumber(const char *Buffer)\n{\n    cmsFloat64Number dnum = 0.0;\n    int sign = 1;\n\n    // keep safe\n    if (Buffer == NULL) return 0.0;\n\n    if (*Buffer == '-' || *Buffer == '+') {\n\n        sign = (*Buffer == '-') ? -1 : 1;\n        Buffer++;\n    }\n\n\n    while (*Buffer && isdigit((int)*Buffer)) {\n\n        dnum = dnum * 10.0 + (*Buffer - '0');\n        if (*Buffer) Buffer++;\n    }\n\n    if (*Buffer == '.') {\n\n        cmsFloat64Number frac = 0.0;      // fraction\n        int prec = 0;                     // precision\n\n        if (*Buffer) Buffer++;\n\n        while (*Buffer && isdigit((int)*Buffer)) {\n\n            frac = frac * 10.0 + (*Buffer - '0');\n            prec++;\n            if (*Buffer) Buffer++;\n        }\n\n        dnum = dnum + (frac / xpow10(prec));\n    }\n\n    // Exponent, example 34.00E+20\n    if (*Buffer && toupper(*Buffer) == 'E') {\n\n        int e;\n        int sgn;\n\n        if (*Buffer) Buffer++;\n        sgn = 1;\n\n        if (*Buffer == '-') {\n\n            sgn = -1;\n            if (*Buffer) Buffer++;\n        }\n        else\n            if (*Buffer == '+') {\n\n                sgn = +1;\n                if (*Buffer) Buffer++;\n            }\n\n        e = 0;\n        while (*Buffer && isdigit((int)*Buffer)) {\n\n            cmsInt32Number digit = (*Buffer - '0');\n\n            if ((cmsFloat64Number)e * 10.0 + digit < (cmsFloat64Number)+2147483647.0)\n                e = e * 10 + digit;\n\n            if (*Buffer) Buffer++;\n        }\n\n        e = sgn*e;\n        dnum = dnum * xpow10(e);\n    }\n\n    return sign * dnum;\n}\n\n\n// Reads next symbol\nstatic\nvoid InSymbol(cmsIT8* it8)\n{\n    register char *idptr;\n    register int k;\n    SYMBOL key;\n    int sng;\n    \n    do {\n\n        while (isseparator(it8->ch))\n            NextCh(it8);\n\n        if (isfirstidchar(it8->ch)) {          // Identifier\n\n            k = 0;\n            idptr = it8->id;\n\n            do {\n\n                if (++k < MAXID) *idptr++ = (char) it8->ch;\n\n                NextCh(it8);\n\n            } while (isidchar(it8->ch));\n\n            *idptr = '\\0';\n\n\n            key = BinSrchKey(it8->id);\n            if (key == SUNDEFINED) it8->sy = SIDENT;\n            else it8->sy = key;\n\n        }\n        else                         // Is a number?\n            if (isdigit(it8->ch) || it8->ch == '.' || it8->ch == '-' || it8->ch == '+')\n            {\n                int sign = 1;\n\n                if (it8->ch == '-') {\n                    sign = -1;\n                    NextCh(it8);\n                }\n\n                it8->inum = 0;\n                it8->sy   = SINUM;\n\n                if (it8->ch == '0') {          // 0xnnnn (Hexa) or 0bnnnn (Binary)\n\n                    NextCh(it8);\n                    if (toupper(it8->ch) == 'X') {\n\n                        int j;\n\n                        NextCh(it8);\n                        while (isxdigit(it8->ch))\n                        {\n                            it8->ch = toupper(it8->ch);\n                            if (it8->ch >= 'A' && it8->ch <= 'F')  j = it8->ch -'A'+10;\n                            else j = it8->ch - '0';\n\n                            if ((cmsFloat64Number) it8->inum * 16.0 + (cmsFloat64Number) j > (cmsFloat64Number)+2147483647.0)\n                            {\n                                SynError(it8, \"Invalid hexadecimal number\");\n                                return;\n                            }\n\n                            it8->inum = it8->inum * 16 + j;\n                            NextCh(it8);\n                        }\n                        return;\n                    }\n\n                    if (toupper(it8->ch) == 'B') {  // Binary\n\n                        int j;\n\n                        NextCh(it8);\n                        while (it8->ch == '0' || it8->ch == '1')\n                        {\n                            j = it8->ch - '0';\n\n                            if ((cmsFloat64Number) it8->inum * 2.0 + j > (cmsFloat64Number)+2147483647.0)\n                            {\n                                SynError(it8, \"Invalid binary number\");\n                                return;\n                            }\n\n                            it8->inum = it8->inum * 2 + j;\n                            NextCh(it8);\n                        }\n                        return;\n                    }\n                }\n\n\n                while (isdigit(it8->ch)) {\n\n                    cmsInt32Number digit = (it8->ch - '0');\n\n                    if ((cmsFloat64Number) it8->inum * 10.0 + (cmsFloat64Number) digit > (cmsFloat64Number) +2147483647.0) {\n                        ReadReal(it8, it8->inum);\n                        it8->sy = SDNUM;\n                        it8->dnum *= sign;\n                        return;\n                    }\n\n                    it8->inum = it8->inum * 10 + digit;\n                    NextCh(it8);\n                }\n\n                if (it8->ch == '.') {\n\n                    ReadReal(it8, it8->inum);\n                    it8->sy = SDNUM;\n                    it8->dnum *= sign;\n                    return;\n                }\n\n                it8 -> inum *= sign;\n\n                // Special case. Numbers followed by letters are taken as identifiers\n\n                if (isidchar(it8 ->ch)) {\n\n                    if (it8 ->sy == SINUM) {\n\n                        snprintf(it8->id, 127, \"%d\", it8->inum);\n                    }\n                    else {\n\n                        snprintf(it8->id, 127, it8 ->DoubleFormatter, it8->dnum);\n                    }\n\n                    k = (int) strlen(it8 ->id);\n                    idptr = it8 ->id + k;\n                    do {\n\n                        if (++k < MAXID) *idptr++ = (char) it8->ch;\n\n                        NextCh(it8);\n\n                    } while (isidchar(it8->ch));\n\n                    *idptr = '\\0';\n                    it8->sy = SIDENT;\n                }\n                return;\n\n            }\n            else\n                switch ((int) it8->ch) {\n\n        // EOF marker -- ignore it\n        case '\\x1a':\n            NextCh(it8);\n            break;\n\n        // Eof stream markers\n        case 0:\n        case -1:\n            it8->sy = SEOF;\n            break;\n\n\n        // Next line\n        case '\\r':\n            NextCh(it8);\n            if (it8 ->ch == '\\n') \n                NextCh(it8);\n            it8->sy = SEOLN;\n            it8->lineno++;\n            break;\n\n        case '\\n':\n            NextCh(it8);\n            it8->sy = SEOLN;\n            it8->lineno++;\n            break;\n\n        // Comment\n        case '#':\n            NextCh(it8);\n            while (it8->ch && it8->ch != '\\n' && it8->ch != '\\r')\n                NextCh(it8);\n\n            it8->sy = SCOMMENT;\n            break;\n\n        // String.\n        case '\\'':\n        case '\\\"':\n            idptr = it8->str;\n            sng = it8->ch;\n            k = 0;\n            NextCh(it8);\n\n            while (k < (MAXSTR-1) && it8->ch != sng) {\n\n                if (it8->ch == '\\n'|| it8->ch == '\\r') k = MAXSTR+1;\n                else {\n                    *idptr++ = (char) it8->ch;\n                    NextCh(it8);\n                    k++;\n                }\n            }\n\n            it8->sy = SSTRING;\n            *idptr = '\\0';\n            NextCh(it8);\n            break;\n\n\n        default:\n            SynError(it8, \"Unrecognized character: 0x%x\", it8 ->ch);\n            return;\n            }\n\n    } while (it8->sy == SCOMMENT);\n\n    // Handle the include special token\n\n    if (it8 -> sy == SINCLUDE) {\n\n                FILECTX* FileNest;\n\n                if(it8 -> IncludeSP >= (MAXINCLUDE-1)) {\n\n                    SynError(it8, \"Too many recursion levels\");\n                    return;\n                }\n\n                InSymbol(it8);\n                if (!Check(it8, SSTRING, \"Filename expected\")) return;\n\n                FileNest = it8 -> FileStack[it8 -> IncludeSP + 1];\n                if(FileNest == NULL) {\n\n                    FileNest = it8 ->FileStack[it8 -> IncludeSP + 1] = (FILECTX*)AllocChunk(it8, sizeof(FILECTX));\n                    //if(FileNest == NULL)\n                    //  TODO: how to manage out-of-memory conditions?\n                }\n\n                if (BuildAbsolutePath(it8->str,\n                                      it8->FileStack[it8->IncludeSP]->FileName,\n                                      FileNest->FileName, cmsMAX_PATH-1) == FALSE) {\n                    SynError(it8, \"File path too long\");\n                    return;\n                }\n\n                FileNest->Stream = fopen(FileNest->FileName, \"rt\");\n                if (FileNest->Stream == NULL) {\n\n                        SynError(it8, \"File %s not found\", FileNest->FileName);\n                        return;\n                }\n                it8->IncludeSP++;\n\n                it8 ->ch = ' ';\n                InSymbol(it8);\n    }\n\n}\n\n// Checks end of line separator\nstatic\ncmsBool CheckEOLN(cmsIT8* it8)\n{\n        if (!Check(it8, SEOLN, \"Expected separator\")) return FALSE;\n        while (it8 -> sy == SEOLN)\n                        InSymbol(it8);\n        return TRUE;\n\n}\n\n// Skip a symbol\n\nstatic\nvoid Skip(cmsIT8* it8, SYMBOL sy)\n{\n        if (it8->sy == sy && it8->sy != SEOF)\n                        InSymbol(it8);\n}\n\n\n// Skip multiple EOLN\nstatic\nvoid SkipEOLN(cmsIT8* it8)\n{\n    while (it8->sy == SEOLN) {\n             InSymbol(it8);\n    }\n}\n\n\n// Returns a string holding current value\nstatic\ncmsBool GetVal(cmsIT8* it8, char* Buffer, cmsUInt32Number max, const char* ErrorTitle)\n{\n    switch (it8->sy) {\n\n    case SEOLN:   // Empty value\n                  Buffer[0]=0;\n                  break;\n    case SIDENT:  strncpy(Buffer, it8->id, max);\n                  Buffer[max-1]=0;\n                  break;\n    case SINUM:   snprintf(Buffer, max, \"%d\", it8 -> inum); break;\n    case SDNUM:   snprintf(Buffer, max, it8->DoubleFormatter, it8 -> dnum); break;\n    case SSTRING: strncpy(Buffer, it8->str, max);\n                  Buffer[max-1] = 0;\n                  break;\n\n\n    default:\n         return SynError(it8, \"%s\", ErrorTitle);\n    }\n\n    Buffer[max] = 0;\n    return TRUE;\n}\n\n// ---------------------------------------------------------- Table\n\nstatic\nTABLE* GetTable(cmsIT8* it8)\n{\n   if ((it8 -> nTable >= it8 ->TablesCount)) {\n\n           SynError(it8, \"Table %d out of sequence\", it8 -> nTable);\n           return it8 -> Tab;\n   }\n\n   return it8 ->Tab + it8 ->nTable;\n}\n\n// ---------------------------------------------------------- Memory management\n\n\n// Frees an allocator and owned memory\nvoid CMSEXPORT cmsIT8Free(cmsHANDLE hIT8)\n{\n   cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    if (it8 == NULL)\n        return;\n\n    if (it8->MemorySink) {\n\n        OWNEDMEM* p;\n        OWNEDMEM* n;\n\n        for (p = it8->MemorySink; p != NULL; p = n) {\n\n            n = p->Next;\n            if (p->Ptr) _cmsFree(it8 ->ContextID, p->Ptr);\n            _cmsFree(it8 ->ContextID, p);\n        }\n    }\n\n    if (it8->MemoryBlock)\n        _cmsFree(it8 ->ContextID, it8->MemoryBlock);\n\n    _cmsFree(it8 ->ContextID, it8);\n}\n\n\n// Allocates a chunk of data, keep linked list\nstatic\nvoid* AllocBigBlock(cmsIT8* it8, cmsUInt32Number size)\n{\n    OWNEDMEM* ptr1;\n    void* ptr = _cmsMallocZero(it8->ContextID, size);\n\n    if (ptr != NULL) {\n\n        ptr1 = (OWNEDMEM*) _cmsMallocZero(it8 ->ContextID, sizeof(OWNEDMEM));\n\n        if (ptr1 == NULL) {\n\n            _cmsFree(it8 ->ContextID, ptr);\n            return NULL;\n        }\n\n        ptr1-> Ptr        = ptr;\n        ptr1-> Next       = it8 -> MemorySink;\n        it8 -> MemorySink = ptr1;\n    }\n\n    return ptr;\n}\n\n\n// Suballocator.\nstatic\nvoid* AllocChunk(cmsIT8* it8, cmsUInt32Number size)\n{\n    cmsUInt32Number Free = it8 ->Allocator.BlockSize - it8 ->Allocator.Used;\n    cmsUInt8Number* ptr;\n\n    size = _cmsALIGNMEM(size);\n\n    if (size > Free) {\n\n        if (it8 -> Allocator.BlockSize == 0)\n\n                it8 -> Allocator.BlockSize = 20*1024;\n        else\n                it8 ->Allocator.BlockSize *= 2;\n\n        if (it8 ->Allocator.BlockSize < size)\n                it8 ->Allocator.BlockSize = size;\n\n        it8 ->Allocator.Used = 0;\n        it8 ->Allocator.Block = (cmsUInt8Number*)  AllocBigBlock(it8, it8 ->Allocator.BlockSize);\n    }\n\n    ptr = it8 ->Allocator.Block + it8 ->Allocator.Used;\n    it8 ->Allocator.Used += size;\n\n    return (void*) ptr;\n\n}\n\n\n// Allocates a string\nstatic\nchar *AllocString(cmsIT8* it8, const char* str)\n{\n    cmsUInt32Number Size = (cmsUInt32Number) strlen(str)+1;\n    char *ptr;\n\n\n    ptr = (char *) AllocChunk(it8, Size);\n    if (ptr) strncpy (ptr, str, Size-1);\n\n    return ptr;\n}\n\n// Searches through linked list\n\nstatic\ncmsBool IsAvailableOnList(KEYVALUE* p, const char* Key, const char* Subkey, KEYVALUE** LastPtr)\n{\n    if (LastPtr) *LastPtr = p;\n\n    for (;  p != NULL; p = p->Next) {\n\n        if (LastPtr) *LastPtr = p;\n\n        if (*Key != '#') { // Comments are ignored\n\n            if (cmsstrcasecmp(Key, p->Keyword) == 0)\n                break;\n        }\n    }\n\n    if (p == NULL)\n        return FALSE;\n\n    if (Subkey == 0)\n        return TRUE;\n\n    for (; p != NULL; p = p->NextSubkey) {\n\n        if (p ->Subkey == NULL) continue;\n\n        if (LastPtr) *LastPtr = p;\n\n        if (cmsstrcasecmp(Subkey, p->Subkey) == 0)\n            return TRUE;\n    }\n\n    return FALSE;\n}\n\n\n\n// Add a property into a linked list\nstatic\nKEYVALUE* AddToList(cmsIT8* it8, KEYVALUE** Head, const char *Key, const char *Subkey, const char* xValue, WRITEMODE WriteAs)\n{\n    KEYVALUE* p;\n    KEYVALUE* last;\n\n\n    // Check if property is already in list\n\n    if (IsAvailableOnList(*Head, Key, Subkey, &p)) {\n\n        // This may work for editing properties\n\n        //     return SynError(it8, \"duplicate key <%s>\", Key);\n    }\n    else {\n\n        last = p;\n\n        // Allocate the container\n        p = (KEYVALUE*) AllocChunk(it8, sizeof(KEYVALUE));\n        if (p == NULL)\n        {\n            SynError(it8, \"AddToList: out of memory\");\n            return NULL;\n        }\n\n        // Store name and value\n        p->Keyword = AllocString(it8, Key);\n        p->Subkey = (Subkey == NULL) ? NULL : AllocString(it8, Subkey);\n\n        // Keep the container in our list\n        if (*Head == NULL) {\n            *Head = p;\n        }\n        else\n        {\n            if (Subkey != NULL && last != NULL) {\n\n                last->NextSubkey = p;\n\n                // If Subkey is not null, then last is the last property with the same key,\n                // but not necessarily is the last property in the list, so we need to move\n                // to the actual list end\n                while (last->Next != NULL)\n                         last = last->Next;\n            }\n\n            if (last != NULL) last->Next = p;\n        }\n\n        p->Next    = NULL;\n        p->NextSubkey = NULL;\n    }\n\n    p->WriteAs = WriteAs;\n\n    if (xValue != NULL) {\n\n        p->Value   = AllocString(it8, xValue);\n    }\n    else {\n        p->Value   = NULL;\n    }\n\n    return p;\n}\n\nstatic\nKEYVALUE* AddAvailableProperty(cmsIT8* it8, const char* Key, WRITEMODE as)\n{\n    return AddToList(it8, &it8->ValidKeywords, Key, NULL, NULL, as);\n}\n\n\nstatic\nKEYVALUE* AddAvailableSampleID(cmsIT8* it8, const char* Key)\n{\n    return AddToList(it8, &it8->ValidSampleID, Key, NULL, NULL, WRITE_UNCOOKED);\n}\n\n\nstatic\nvoid AllocTable(cmsIT8* it8)\n{\n    TABLE* t;\n\n    t = it8 ->Tab + it8 ->TablesCount;\n\n    t->HeaderList = NULL;\n    t->DataFormat = NULL;\n    t->Data       = NULL;\n\n    it8 ->TablesCount++;\n}\n\n\ncmsInt32Number CMSEXPORT cmsIT8SetTable(cmsHANDLE  IT8, cmsUInt32Number nTable)\n{\n     cmsIT8* it8 = (cmsIT8*) IT8;\n\n     if (nTable >= it8 ->TablesCount) {\n\n         if (nTable == it8 ->TablesCount) {\n\n             AllocTable(it8);\n         }\n         else {\n             SynError(it8, \"Table %d is out of sequence\", nTable);\n             return -1;\n         }\n     }\n\n     it8 ->nTable = nTable;\n\n     return (cmsInt32Number) nTable;\n}\n\n\n\n// Init an empty container\ncmsHANDLE  CMSEXPORT cmsIT8Alloc(cmsContext ContextID)\n{\n    cmsIT8* it8;\n    cmsUInt32Number i;\n\n    it8 = (cmsIT8*) _cmsMallocZero(ContextID, sizeof(cmsIT8));\n    if (it8 == NULL) return NULL;\n\n    AllocTable(it8);\n\n    it8->MemoryBlock = NULL;\n    it8->MemorySink  = NULL;\n\n    it8 ->nTable = 0;\n\n    it8->ContextID = ContextID;\n    it8->Allocator.Used = 0;\n    it8->Allocator.Block = NULL;\n    it8->Allocator.BlockSize = 0;\n\n    it8->ValidKeywords = NULL;\n    it8->ValidSampleID = NULL;\n\n    it8 -> sy = SUNDEFINED;\n    it8 -> ch = ' ';\n    it8 -> Source = NULL;\n    it8 -> inum = 0;\n    it8 -> dnum = 0.0;\n\n    it8->FileStack[0] = (FILECTX*)AllocChunk(it8, sizeof(FILECTX));\n    it8->IncludeSP   = 0;\n    it8 -> lineno = 1;\n\n    strcpy(it8->DoubleFormatter, DEFAULT_DBL_FORMAT);\n    cmsIT8SetSheetType((cmsHANDLE) it8, \"CGATS.17\");\n\n    // Initialize predefined properties & data\n\n    for (i=0; i < NUMPREDEFINEDPROPS; i++)\n            AddAvailableProperty(it8, PredefinedProperties[i].id, PredefinedProperties[i].as);\n\n    for (i=0; i < NUMPREDEFINEDSAMPLEID; i++)\n            AddAvailableSampleID(it8, PredefinedSampleID[i]);\n\n\n   return (cmsHANDLE) it8;\n}\n\n\nconst char* CMSEXPORT cmsIT8GetSheetType(cmsHANDLE hIT8)\n{\n        return GetTable((cmsIT8*) hIT8)->SheetType;\n}\n\ncmsBool CMSEXPORT cmsIT8SetSheetType(cmsHANDLE hIT8, const char* Type)\n{\n        TABLE* t = GetTable((cmsIT8*) hIT8);\n\n        strncpy(t ->SheetType, Type, MAXSTR-1);\n        t ->SheetType[MAXSTR-1] = 0;\n        return TRUE;\n}\n\ncmsBool CMSEXPORT cmsIT8SetComment(cmsHANDLE hIT8, const char* Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    if (!Val) return FALSE;\n    if (!*Val) return FALSE;\n\n    return AddToList(it8, &GetTable(it8)->HeaderList, \"# \", NULL, Val, WRITE_UNCOOKED) != NULL;\n}\n\n// Sets a property\ncmsBool CMSEXPORT cmsIT8SetPropertyStr(cmsHANDLE hIT8, const char* Key, const char *Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    if (!Val) return FALSE;\n    if (!*Val) return FALSE;\n\n    return AddToList(it8, &GetTable(it8)->HeaderList, Key, NULL, Val, WRITE_STRINGIFY) != NULL;\n}\n\ncmsBool CMSEXPORT cmsIT8SetPropertyDbl(cmsHANDLE hIT8, const char* cProp, cmsFloat64Number Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    char Buffer[1024];\n\n    snprintf(Buffer, 1023, it8->DoubleFormatter, Val);\n\n    return AddToList(it8, &GetTable(it8)->HeaderList, cProp, NULL, Buffer, WRITE_UNCOOKED) != NULL;\n}\n\ncmsBool CMSEXPORT cmsIT8SetPropertyHex(cmsHANDLE hIT8, const char* cProp, cmsUInt32Number Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    char Buffer[1024];\n\n    snprintf(Buffer, 1023, \"%u\", Val);\n\n    return AddToList(it8, &GetTable(it8)->HeaderList, cProp, NULL, Buffer, WRITE_HEXADECIMAL) != NULL;\n}\n\ncmsBool CMSEXPORT cmsIT8SetPropertyUncooked(cmsHANDLE hIT8, const char* Key, const char* Buffer)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    return AddToList(it8, &GetTable(it8)->HeaderList, Key, NULL, Buffer, WRITE_UNCOOKED) != NULL;\n}\n\ncmsBool CMSEXPORT cmsIT8SetPropertyMulti(cmsHANDLE hIT8, const char* Key, const char* SubKey, const char *Buffer)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    return AddToList(it8, &GetTable(it8)->HeaderList, Key, SubKey, Buffer, WRITE_PAIR) != NULL;\n}\n\n// Gets a property\nconst char* CMSEXPORT cmsIT8GetProperty(cmsHANDLE hIT8, const char* Key)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    KEYVALUE* p;\n\n    if (IsAvailableOnList(GetTable(it8) -> HeaderList, Key, NULL, &p))\n    {\n        return p -> Value;\n    }\n    return NULL;\n}\n\n\ncmsFloat64Number CMSEXPORT cmsIT8GetPropertyDbl(cmsHANDLE hIT8, const char* cProp)\n{\n    const char *v = cmsIT8GetProperty(hIT8, cProp);\n\n    if (v == NULL) return 0.0;\n\n    return ParseFloatNumber(v);\n}\n\nconst char* CMSEXPORT cmsIT8GetPropertyMulti(cmsHANDLE hIT8, const char* Key, const char *SubKey)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    KEYVALUE* p;\n\n    if (IsAvailableOnList(GetTable(it8) -> HeaderList, Key, SubKey, &p)) {\n        return p -> Value;\n    }\n    return NULL;\n}\n\n// ----------------------------------------------------------------- Datasets\n\n\nstatic\nvoid AllocateDataFormat(cmsIT8* it8)\n{\n    TABLE* t = GetTable(it8);\n\n    if (t -> DataFormat) return;    // Already allocated\n\n    t -> nSamples  = (int) cmsIT8GetPropertyDbl(it8, \"NUMBER_OF_FIELDS\");\n\n    if (t -> nSamples <= 0) {\n\n        SynError(it8, \"AllocateDataFormat: Unknown NUMBER_OF_FIELDS\");\n        t -> nSamples = 10;\n        }\n\n    t -> DataFormat = (char**) AllocChunk (it8, ((cmsUInt32Number) t->nSamples + 1) * sizeof(char *));\n    if (t->DataFormat == NULL) {\n\n        SynError(it8, \"AllocateDataFormat: Unable to allocate dataFormat array\");\n    }\n\n}\n\nstatic\nconst char *GetDataFormat(cmsIT8* it8, int n)\n{\n    TABLE* t = GetTable(it8);\n\n    if (t->DataFormat)\n        return t->DataFormat[n];\n\n    return NULL;\n}\n\nstatic\ncmsBool SetDataFormat(cmsIT8* it8, int n, const char *label)\n{\n    TABLE* t = GetTable(it8);\n\n    if (!t->DataFormat)\n        AllocateDataFormat(it8);\n\n    if (n > t -> nSamples) {\n        SynError(it8, \"More than NUMBER_OF_FIELDS fields.\");\n        return FALSE;\n    }\n\n    if (t->DataFormat) {\n        t->DataFormat[n] = AllocString(it8, label);\n    }\n\n    return TRUE;\n}\n\n\ncmsBool CMSEXPORT cmsIT8SetDataFormat(cmsHANDLE  h, int n, const char *Sample)\n{\n    cmsIT8* it8 = (cmsIT8*)h;\n    return SetDataFormat(it8, n, Sample);\n}\n\nstatic\nvoid AllocateDataSet(cmsIT8* it8)\n{\n    TABLE* t = GetTable(it8);\n\n    if (t -> Data) return;    // Already allocated\n\n    t-> nSamples   = atoi(cmsIT8GetProperty(it8, \"NUMBER_OF_FIELDS\"));\n    t-> nPatches   = atoi(cmsIT8GetProperty(it8, \"NUMBER_OF_SETS\"));\n\n    t-> Data = (char**)AllocChunk (it8, ((cmsUInt32Number) t->nSamples + 1) * ((cmsUInt32Number) t->nPatches + 1) *sizeof (char*));\n    if (t->Data == NULL) {\n\n        SynError(it8, \"AllocateDataSet: Unable to allocate data array\");\n    }\n\n}\n\nstatic\nchar* GetData(cmsIT8* it8, int nSet, int nField)\n{\n    TABLE* t = GetTable(it8);\n    int nSamples    = t -> nSamples;\n    int nPatches    = t -> nPatches;\n\n    if (nSet >= nPatches || nField >= nSamples)\n        return NULL;\n\n    if (!t->Data) return NULL;\n    return t->Data [nSet * nSamples + nField];\n}\n\nstatic\ncmsBool SetData(cmsIT8* it8, int nSet, int nField, const char *Val)\n{\n    TABLE* t = GetTable(it8);\n\n    if (!t->Data)\n        AllocateDataSet(it8);\n\n    if (!t->Data) return FALSE;\n\n    if (nSet > t -> nPatches || nSet < 0) {\n\n            return SynError(it8, \"Patch %d out of range, there are %d patches\", nSet, t -> nPatches);\n    }\n\n    if (nField > t ->nSamples || nField < 0) {\n            return SynError(it8, \"Sample %d out of range, there are %d samples\", nField, t ->nSamples);\n\n    }\n\n    t->Data [nSet * t -> nSamples + nField] = AllocString(it8, Val);\n    return TRUE;\n}\n\n\n// --------------------------------------------------------------- File I/O\n\n\n// Writes a string to file\nstatic\nvoid WriteStr(SAVESTREAM* f, const char *str)\n{\n    cmsUInt32Number len;\n\n    if (str == NULL)\n        str = \" \";\n\n    // Length to write\n    len = (cmsUInt32Number) strlen(str);\n    f ->Used += len;\n\n\n    if (f ->stream) {   // Should I write it to a file?\n\n        if (fwrite(str, 1, len, f->stream) != len) {\n            cmsSignalError(0, cmsERROR_WRITE, \"Write to file error in CGATS parser\");\n            return;\n        }\n\n    }\n    else {  // Or to a memory block?\n\n        if (f ->Base) {   // Am I just counting the bytes?\n\n            if (f ->Used > f ->Max) {\n\n                 cmsSignalError(0, cmsERROR_WRITE, \"Write to memory overflows in CGATS parser\");\n                 return;\n            }\n\n            memmove(f ->Ptr, str, len);\n            f->Ptr += len;\n        }\n\n    }\n}\n\n\n// Write formatted\n\nstatic\nvoid Writef(SAVESTREAM* f, const char* frm, ...)\n{\n    char Buffer[4096];\n    va_list args;\n\n    va_start(args, frm);\n    vsnprintf(Buffer, 4095, frm, args);\n    Buffer[4095] = 0;\n    WriteStr(f, Buffer);\n    va_end(args);\n\n}\n\n// Writes full header\nstatic\nvoid WriteHeader(cmsIT8* it8, SAVESTREAM* fp)\n{\n    KEYVALUE* p;\n    TABLE* t = GetTable(it8);\n\n    // Writes the type\n    WriteStr(fp, t->SheetType);\n    WriteStr(fp, \"\\n\");\n\n    for (p = t->HeaderList; (p != NULL); p = p->Next)\n    {\n        if (*p ->Keyword == '#') {\n\n            char* Pt;\n\n            WriteStr(fp, \"#\\n# \");\n            for (Pt = p ->Value; *Pt; Pt++) {\n\n\n                Writef(fp, \"%c\", *Pt);\n\n                if (*Pt == '\\n') {\n                    WriteStr(fp, \"# \");\n                }\n            }\n\n            WriteStr(fp, \"\\n#\\n\");\n            continue;\n        }\n\n\n        if (!IsAvailableOnList(it8-> ValidKeywords, p->Keyword, NULL, NULL)) {\n\n#ifdef CMS_STRICT_CGATS\n            WriteStr(fp, \"KEYWORD\\t\\\"\");\n            WriteStr(fp, p->Keyword);\n            WriteStr(fp, \"\\\"\\n\");\n#endif\n\n            AddAvailableProperty(it8, p->Keyword, WRITE_UNCOOKED);\n        }\n\n        WriteStr(fp, p->Keyword);\n        if (p->Value) {\n\n            switch (p ->WriteAs) {\n\n            case WRITE_UNCOOKED:\n                    Writef(fp, \"\\t%s\", p ->Value);\n                    break;\n\n            case WRITE_STRINGIFY:\n                    Writef(fp, \"\\t\\\"%s\\\"\", p->Value );\n                    break;\n\n            case WRITE_HEXADECIMAL:\n                    Writef(fp, \"\\t0x%X\", atoi(p ->Value));\n                    break;\n\n            case WRITE_BINARY:\n                    Writef(fp, \"\\t0x%B\", atoi(p ->Value));\n                    break;\n\n            case WRITE_PAIR:\n                    Writef(fp, \"\\t\\\"%s,%s\\\"\", p->Subkey, p->Value);\n                    break;\n\n            default: SynError(it8, \"Unknown write mode %d\", p ->WriteAs);\n                     return;\n            }\n        }\n\n        WriteStr (fp, \"\\n\");\n    }\n\n}\n\n\n// Writes the data format\nstatic\nvoid WriteDataFormat(SAVESTREAM* fp, cmsIT8* it8)\n{\n    int i, nSamples;\n    TABLE* t = GetTable(it8);\n\n    if (!t -> DataFormat) return;\n\n       WriteStr(fp, \"BEGIN_DATA_FORMAT\\n\");\n       WriteStr(fp, \" \");\n       nSamples = atoi(cmsIT8GetProperty(it8, \"NUMBER_OF_FIELDS\"));\n\n       for (i = 0; i < nSamples; i++) {\n\n              WriteStr(fp, t->DataFormat[i]);\n              WriteStr(fp, ((i == (nSamples-1)) ? \"\\n\" : \"\\t\"));\n          }\n\n       WriteStr (fp, \"END_DATA_FORMAT\\n\");\n}\n\n\n// Writes data array\nstatic\nvoid WriteData(SAVESTREAM* fp, cmsIT8* it8)\n{\n       int  i, j;\n       TABLE* t = GetTable(it8);\n\n       if (!t->Data) return;\n\n       WriteStr (fp, \"BEGIN_DATA\\n\");\n\n       t->nPatches = atoi(cmsIT8GetProperty(it8, \"NUMBER_OF_SETS\"));\n\n       for (i = 0; i < t-> nPatches; i++) {\n\n              WriteStr(fp, \" \");\n\n              for (j = 0; j < t->nSamples; j++) {\n\n                     char *ptr = t->Data[i*t->nSamples+j];\n\n                     if (ptr == NULL) WriteStr(fp, \"\\\"\\\"\");\n                     else {\n                         // If value contains whitespace, enclose within quote\n\n                         if (strchr(ptr, ' ') != NULL) {\n\n                             WriteStr(fp, \"\\\"\");\n                             WriteStr(fp, ptr);\n                             WriteStr(fp, \"\\\"\");\n                         }\n                         else\n                            WriteStr(fp, ptr);\n                     }\n\n                     WriteStr(fp, ((j == (t->nSamples-1)) ? \"\\n\" : \"\\t\"));\n              }\n       }\n       WriteStr (fp, \"END_DATA\\n\");\n}\n\n\n\n// Saves whole file\ncmsBool CMSEXPORT cmsIT8SaveToFile(cmsHANDLE hIT8, const char* cFileName)\n{\n    SAVESTREAM sd;\n    cmsUInt32Number i;\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    memset(&sd, 0, sizeof(sd));\n\n    sd.stream = fopen(cFileName, \"wt\");\n    if (!sd.stream) return FALSE;\n\n    for (i=0; i < it8 ->TablesCount; i++) {\n\n            cmsIT8SetTable(hIT8, i);\n            WriteHeader(it8, &sd);\n            WriteDataFormat(&sd, it8);\n            WriteData(&sd, it8);\n    }\n\n    if (fclose(sd.stream) != 0) return FALSE;\n\n    return TRUE;\n}\n\n\n// Saves to memory\ncmsBool CMSEXPORT cmsIT8SaveToMem(cmsHANDLE hIT8, void *MemPtr, cmsUInt32Number* BytesNeeded)\n{\n    SAVESTREAM sd;\n    cmsUInt32Number i;\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    memset(&sd, 0, sizeof(sd));\n\n    sd.stream = NULL;\n    sd.Base   = (cmsUInt8Number*)  MemPtr;\n    sd.Ptr    = sd.Base;\n\n    sd.Used = 0;\n\n    if (sd.Base)\n        sd.Max  = *BytesNeeded;     // Write to memory?\n    else\n        sd.Max  = 0;                // Just counting the needed bytes\n\n    for (i=0; i < it8 ->TablesCount; i++) {\n\n        cmsIT8SetTable(hIT8, i);\n        WriteHeader(it8, &sd);\n        WriteDataFormat(&sd, it8);\n        WriteData(&sd, it8);\n    }\n\n    sd.Used++;  // The \\0 at the very end\n\n    if (sd.Base)\n        *sd.Ptr = 0;\n\n    *BytesNeeded = sd.Used;\n\n    return TRUE;\n}\n\n\n// -------------------------------------------------------------- Higher level parsing\n\nstatic\ncmsBool DataFormatSection(cmsIT8* it8)\n{\n    int iField = 0;\n    TABLE* t = GetTable(it8);\n\n    InSymbol(it8);   // Eats \"BEGIN_DATA_FORMAT\"\n    CheckEOLN(it8);\n\n    while (it8->sy != SEND_DATA_FORMAT &&\n        it8->sy != SEOLN &&\n        it8->sy != SEOF &&\n        it8->sy != SSYNERROR)  {\n\n            if (it8->sy != SIDENT) {\n\n                return SynError(it8, \"Sample type expected\");\n            }\n\n            if (!SetDataFormat(it8, iField, it8->id)) return FALSE;\n            iField++;\n\n            InSymbol(it8);\n            SkipEOLN(it8);\n       }\n\n       SkipEOLN(it8);\n       Skip(it8, SEND_DATA_FORMAT);\n       SkipEOLN(it8);\n\n       if (iField != t ->nSamples) {\n           SynError(it8, \"Count mismatch. NUMBER_OF_FIELDS was %d, found %d\\n\", t ->nSamples, iField);\n\n\n       }\n\n       return TRUE;\n}\n\n\n\nstatic\ncmsBool DataSection (cmsIT8* it8)\n{\n    int  iField = 0;\n    int  iSet   = 0;\n    char Buffer[256];\n    TABLE* t = GetTable(it8);\n\n    InSymbol(it8);   // Eats \"BEGIN_DATA\"\n    CheckEOLN(it8);\n\n    if (!t->Data)\n        AllocateDataSet(it8);\n\n    while (it8->sy != SEND_DATA && it8->sy != SEOF)\n    {\n        if (iField >= t -> nSamples) {\n            iField = 0;\n            iSet++;\n\n        }\n\n        if (it8->sy != SEND_DATA && it8->sy != SEOF) {\n\n            if (!GetVal(it8, Buffer, 255, \"Sample data expected\"))\n                return FALSE;\n\n            if (!SetData(it8, iSet, iField, Buffer))\n                return FALSE;\n\n            iField++;\n\n            InSymbol(it8);\n            SkipEOLN(it8);\n        }\n    }\n\n    SkipEOLN(it8);\n    Skip(it8, SEND_DATA);\n    SkipEOLN(it8);\n\n    // Check for data completion.\n\n    if ((iSet+1) != t -> nPatches)\n        return SynError(it8, \"Count mismatch. NUMBER_OF_SETS was %d, found %d\\n\", t ->nPatches, iSet+1);\n\n    return TRUE;\n}\n\n\n\n\nstatic\ncmsBool HeaderSection(cmsIT8* it8)\n{\n    char VarName[MAXID];\n    char Buffer[MAXSTR];\n    KEYVALUE* Key;\n\n        while (it8->sy != SEOF &&\n               it8->sy != SSYNERROR &&\n               it8->sy != SBEGIN_DATA_FORMAT &&\n               it8->sy != SBEGIN_DATA) {\n\n\n        switch (it8 -> sy) {\n\n        case SKEYWORD:\n                InSymbol(it8);\n                if (!GetVal(it8, Buffer, MAXSTR-1, \"Keyword expected\")) return FALSE;\n                if (!AddAvailableProperty(it8, Buffer, WRITE_UNCOOKED)) return FALSE;\n                InSymbol(it8);\n                break;\n\n\n        case SDATA_FORMAT_ID:\n                InSymbol(it8);\n                if (!GetVal(it8, Buffer, MAXSTR-1, \"Keyword expected\")) return FALSE;\n                if (!AddAvailableSampleID(it8, Buffer)) return FALSE;\n                InSymbol(it8);\n                break;\n\n\n        case SIDENT:\n            strncpy(VarName, it8->id, MAXID - 1);\n            VarName[MAXID - 1] = 0;\n\n            if (!IsAvailableOnList(it8->ValidKeywords, VarName, NULL, &Key)) {\n\n#ifdef CMS_STRICT_CGATS\n                return SynError(it8, \"Undefined keyword '%s'\", VarName);\n#else\n                Key = AddAvailableProperty(it8, VarName, WRITE_UNCOOKED);\n                if (Key == NULL) return FALSE;\n#endif\n            }\n\n            InSymbol(it8);\n            if (!GetVal(it8, Buffer, MAXSTR - 1, \"Property data expected\")) return FALSE;\n\n            if (Key->WriteAs != WRITE_PAIR) {\n                AddToList(it8, &GetTable(it8)->HeaderList, VarName, NULL, Buffer,\n                    (it8->sy == SSTRING) ? WRITE_STRINGIFY : WRITE_UNCOOKED);\n            }\n            else {\n                const char *Subkey;\n                char *Nextkey;\n                if (it8->sy != SSTRING)\n                    return SynError(it8, \"Invalid value '%s' for property '%s'.\", Buffer, VarName);\n\n                // chop the string as a list of \"subkey, value\" pairs, using ';' as a separator\n                for (Subkey = Buffer; Subkey != NULL; Subkey = Nextkey)\n                {\n                    char *Value, *temp;\n\n                    //  identify token pair boundary\n                    Nextkey = (char*)strchr(Subkey, ';');\n                    if (Nextkey)\n                        *Nextkey++ = '\\0';\n\n                    // for each pair, split the subkey and the value\n                    Value = (char*)strrchr(Subkey, ',');\n                    if (Value == NULL)\n                        return SynError(it8, \"Invalid value for property '%s'.\", VarName);\n\n                    // gobble the spaces before the coma, and the coma itself\n                    temp = Value++;\n                    do *temp-- = '\\0'; while (temp >= Subkey && *temp == ' ');\n\n                    // gobble any space at the right\n                    temp = Value + strlen(Value) - 1;\n                    while (*temp == ' ') *temp-- = '\\0';\n\n                    // trim the strings from the left\n                    Subkey += strspn(Subkey, \" \");\n                    Value += strspn(Value, \" \");\n\n                    if (Subkey[0] == 0 || Value[0] == 0)\n                        return SynError(it8, \"Invalid value for property '%s'.\", VarName);\n                    AddToList(it8, &GetTable(it8)->HeaderList, VarName, Subkey, Value, WRITE_PAIR);\n                }\n            }\n\n            InSymbol(it8);\n            break;\n\n\n        case SEOLN: break;\n\n        default:\n                return SynError(it8, \"expected keyword or identifier\");\n        }\n\n    SkipEOLN(it8);\n    }\n\n    return TRUE;\n\n}\n\n\nstatic\nvoid ReadType(cmsIT8* it8, char* SheetTypePtr)\n{\n    cmsInt32Number cnt = 0;\n\n    // First line is a very special case.\n\n    while (isseparator(it8->ch))\n            NextCh(it8);\n\n    while (it8->ch != '\\r' && it8 ->ch != '\\n' && it8->ch != '\\t' && it8 -> ch != 0) {\n\n        if (cnt++ < MAXSTR) \n            *SheetTypePtr++= (char) it8 ->ch;\n        NextCh(it8);\n    }\n\n    *SheetTypePtr = 0;\n}\n\n\nstatic\ncmsBool ParseIT8(cmsIT8* it8, cmsBool nosheet)\n{\n    char* SheetTypePtr = it8 ->Tab[0].SheetType;\n\n    if (nosheet == 0) {\n        ReadType(it8, SheetTypePtr);\n    }\n\n    InSymbol(it8);\n\n    SkipEOLN(it8);\n\n    while (it8-> sy != SEOF &&\n           it8-> sy != SSYNERROR) {\n\n            switch (it8 -> sy) {\n\n            case SBEGIN_DATA_FORMAT:\n                    if (!DataFormatSection(it8)) return FALSE;\n                    break;\n\n            case SBEGIN_DATA:\n\n                    if (!DataSection(it8)) return FALSE;\n\n                    if (it8 -> sy != SEOF) {\n\n                            AllocTable(it8);\n                            it8 ->nTable = it8 ->TablesCount - 1;\n\n                            // Read sheet type if present. We only support identifier and string.\n                            // <ident> <eoln> is a type string\n                            // anything else, is not a type string\n                            if (nosheet == 0) {\n\n                                if (it8 ->sy == SIDENT) {\n\n                                    // May be a type sheet or may be a prop value statement. We cannot use insymbol in\n                                    // this special case...\n                                     while (isseparator(it8->ch))\n                                         NextCh(it8);\n\n                                     // If a newline is found, then this is a type string\n                                    if (it8 ->ch == '\\n' || it8->ch == '\\r') {\n\n                                         cmsIT8SetSheetType(it8, it8 ->id);\n                                         InSymbol(it8);\n                                    }\n                                    else\n                                    {\n                                        // It is not. Just continue\n                                        cmsIT8SetSheetType(it8, \"\");\n                                    }\n                                }\n                                else\n                                    // Validate quoted strings\n                                    if (it8 ->sy == SSTRING) {\n                                        cmsIT8SetSheetType(it8, it8 ->str);\n                                        InSymbol(it8);\n                                    }\n                           }\n\n                    }\n                    break;\n\n            case SEOLN:\n                    SkipEOLN(it8);\n                    break;\n\n            default:\n                    if (!HeaderSection(it8)) return FALSE;\n           }\n\n    }\n\n    return (it8 -> sy != SSYNERROR);\n}\n\n\n\n// Init useful pointers\n\nstatic\nvoid CookPointers(cmsIT8* it8)\n{\n    int idField, i;\n    char* Fld;\n    cmsUInt32Number j;\n    cmsUInt32Number nOldTable = it8 ->nTable;\n\n    for (j=0; j < it8 ->TablesCount; j++) {\n\n    TABLE* t = it8 ->Tab + j;\n\n    t -> SampleID = 0;\n    it8 ->nTable = j;\n\n    for (idField = 0; idField < t -> nSamples; idField++)\n    {\n        if (t ->DataFormat == NULL){\n            SynError(it8, \"Undefined DATA_FORMAT\");\n            return;\n        }\n\n        Fld = t->DataFormat[idField];\n        if (!Fld) continue;\n\n\n        if (cmsstrcasecmp(Fld, \"SAMPLE_ID\") == 0) {\n\n            t -> SampleID = idField;\n\n            for (i=0; i < t -> nPatches; i++) {\n\n                char *Data = GetData(it8, i, idField);\n                if (Data) {\n                    char Buffer[256];\n\n                    strncpy(Buffer, Data, 255);\n                    Buffer[255] = 0;\n\n                    if (strlen(Buffer) <= strlen(Data))\n                        strcpy(Data, Buffer);\n                    else\n                        SetData(it8, i, idField, Buffer);\n\n                }\n            }\n\n        }\n\n        // \"LABEL\" is an extension. It keeps references to forward tables\n\n        if ((cmsstrcasecmp(Fld, \"LABEL\") == 0) || Fld[0] == '$' ) {\n\n                    // Search for table references...\n                    for (i=0; i < t -> nPatches; i++) {\n\n                            char *Label = GetData(it8, i, idField);\n\n                            if (Label) {\n\n                                cmsUInt32Number k;\n\n                                // This is the label, search for a table containing\n                                // this property\n\n                                for (k=0; k < it8 ->TablesCount; k++) {\n\n                                    TABLE* Table = it8 ->Tab + k;\n                                    KEYVALUE* p;\n\n                                    if (IsAvailableOnList(Table->HeaderList, Label, NULL, &p)) {\n\n                                        // Available, keep type and table\n                                        char Buffer[256];\n\n                                        char *Type  = p ->Value;\n                                        int  nTable = (int) k;\n\n                                        snprintf(Buffer, 255, \"%s %d %s\", Label, nTable, Type );\n\n                                        SetData(it8, i, idField, Buffer);\n                                    }\n                                }\n\n\n                            }\n\n                    }\n\n\n        }\n\n    }\n    }\n\n    it8 ->nTable = nOldTable;\n}\n\n// Try to infere if the file is a CGATS/IT8 file at all. Read first line\n// that should be something like some printable characters plus a \\n\n// returns 0 if this is not like a CGATS, or an integer otherwise. This integer is the number of words in first line?\nstatic\nint IsMyBlock(const cmsUInt8Number* Buffer, cmsUInt32Number n)\n{\n    int words = 1, space = 0, quot = 0;\n    cmsUInt32Number i;\n\n    if (n < 10) return 0;   // Too small\n\n    if (n > 132)\n        n = 132;\n\n    for (i = 1; i < n; i++) {\n\n        switch(Buffer[i])\n        {\n        case '\\n':\n        case '\\r':\n            return ((quot == 1) || (words > 2)) ? 0 : words;\n        case '\\t':\n        case ' ':\n            if(!quot && !space)\n                space = 1;\n            break;\n        case '\\\"':\n            quot = !quot;\n            break;\n        default:\n            if (Buffer[i] < 32) return 0;\n            if (Buffer[i] > 127) return 0;\n            words += space;\n            space = 0;\n            break;\n        }\n    }\n\n    return 0;\n}\n\n\nstatic\ncmsBool IsMyFile(const char* FileName)\n{\n   FILE *fp;\n   cmsUInt32Number Size;\n   cmsUInt8Number Ptr[133];\n\n   fp = fopen(FileName, \"rt\");\n   if (!fp) {\n       cmsSignalError(0, cmsERROR_FILE, \"File '%s' not found\", FileName);\n       return FALSE;\n   }\n\n   Size = (cmsUInt32Number) fread(Ptr, 1, 132, fp);\n\n   if (fclose(fp) != 0)\n       return FALSE;\n\n   Ptr[Size] = '\\0';\n\n   return IsMyBlock(Ptr, Size);\n}\n\n// ---------------------------------------------------------- Exported routines\n\n\ncmsHANDLE  CMSEXPORT cmsIT8LoadFromMem(cmsContext ContextID, const void *Ptr, cmsUInt32Number len)\n{\n    cmsHANDLE hIT8;\n    cmsIT8*  it8;\n    int type;\n\n    _cmsAssert(Ptr != NULL);\n    _cmsAssert(len != 0);\n\n    type = IsMyBlock((const cmsUInt8Number*)Ptr, len);\n    if (type == 0) return NULL;\n\n    hIT8 = cmsIT8Alloc(ContextID);\n    if (!hIT8) return NULL;\n\n    it8 = (cmsIT8*) hIT8;\n    it8 ->MemoryBlock = (char*) _cmsMalloc(ContextID, len + 1);\n    if (it8->MemoryBlock == NULL)\n    {\n        cmsIT8Free(hIT8);\n        return FALSE;\n    }\n\n    strncpy(it8 ->MemoryBlock, (const char*) Ptr, len);\n    it8 ->MemoryBlock[len] = 0;\n\n    strncpy(it8->FileStack[0]->FileName, \"\", cmsMAX_PATH-1);\n    it8-> Source = it8 -> MemoryBlock;\n\n    if (!ParseIT8(it8, type-1)) {\n\n        cmsIT8Free(hIT8);\n        return FALSE;\n    }\n\n    CookPointers(it8);\n    it8 ->nTable = 0;\n\n    _cmsFree(ContextID, it8->MemoryBlock);\n    it8 -> MemoryBlock = NULL;\n\n    return hIT8;\n\n\n}\n\n\ncmsHANDLE  CMSEXPORT cmsIT8LoadFromFile(cmsContext ContextID, const char* cFileName)\n{\n\n     cmsHANDLE hIT8;\n     cmsIT8*  it8;\n     int type;\n\n     _cmsAssert(cFileName != NULL);\n\n     type = IsMyFile(cFileName);\n     if (type == 0) return NULL;\n\n     hIT8 = cmsIT8Alloc(ContextID);\n     it8 = (cmsIT8*) hIT8;\n     if (!hIT8) return NULL;\n\n\n     it8 ->FileStack[0]->Stream = fopen(cFileName, \"rt\");\n\n     if (!it8 ->FileStack[0]->Stream) {\n         cmsIT8Free(hIT8);\n         return NULL;\n     }\n\n\n    strncpy(it8->FileStack[0]->FileName, cFileName, cmsMAX_PATH-1);\n    it8->FileStack[0]->FileName[cmsMAX_PATH-1] = 0;\n\n    if (!ParseIT8(it8, type-1)) {\n\n            fclose(it8 ->FileStack[0]->Stream);\n            cmsIT8Free(hIT8);\n            return NULL;\n    }\n\n    CookPointers(it8);\n    it8 ->nTable = 0;\n\n    if (fclose(it8 ->FileStack[0]->Stream)!= 0) {\n            cmsIT8Free(hIT8);\n            return NULL;\n    }\n\n    return hIT8;\n\n}\n\nint CMSEXPORT cmsIT8EnumDataFormat(cmsHANDLE hIT8, char ***SampleNames)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    TABLE* t;\n\n    _cmsAssert(hIT8 != NULL);\n\n    t = GetTable(it8);\n\n    if (SampleNames)\n        *SampleNames = t -> DataFormat;\n    return t -> nSamples;\n}\n\n\ncmsUInt32Number CMSEXPORT cmsIT8EnumProperties(cmsHANDLE hIT8, char ***PropertyNames)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    KEYVALUE* p;\n    cmsUInt32Number n;\n    char **Props;\n    TABLE* t;\n\n    _cmsAssert(hIT8 != NULL);\n\n    t = GetTable(it8);\n\n    // Pass#1 - count properties\n\n    n = 0;\n    for (p = t -> HeaderList;  p != NULL; p = p->Next) {\n        n++;\n    }\n\n\n    Props = (char **) AllocChunk(it8, sizeof(char *) * n);\n\n    // Pass#2 - Fill pointers\n    n = 0;\n    for (p = t -> HeaderList;  p != NULL; p = p->Next) {\n        Props[n++] = p -> Keyword;\n    }\n\n    *PropertyNames = Props;\n    return n;\n}\n\ncmsUInt32Number CMSEXPORT cmsIT8EnumPropertyMulti(cmsHANDLE hIT8, const char* cProp, const char ***SubpropertyNames)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    KEYVALUE *p, *tmp;\n    cmsUInt32Number n;\n    const char **Props;\n    TABLE* t;\n\n    _cmsAssert(hIT8 != NULL);\n\n\n    t = GetTable(it8);\n\n    if(!IsAvailableOnList(t->HeaderList, cProp, NULL, &p)) {\n        *SubpropertyNames = 0;\n        return 0;\n    }\n\n    // Pass#1 - count properties\n\n    n = 0;\n    for (tmp = p;  tmp != NULL; tmp = tmp->NextSubkey) {\n        if(tmp->Subkey != NULL)\n            n++;\n    }\n\n\n    Props = (const char **) AllocChunk(it8, sizeof(char *) * n);\n\n    // Pass#2 - Fill pointers\n    n = 0;\n    for (tmp = p;  tmp != NULL; tmp = tmp->NextSubkey) {\n        if(tmp->Subkey != NULL)\n            Props[n++] = p ->Subkey;\n    }\n\n    *SubpropertyNames = Props;\n    return n;\n}\n\nstatic\nint LocatePatch(cmsIT8* it8, const char* cPatch)\n{\n    int i;\n    const char *data;\n    TABLE* t = GetTable(it8);\n\n    for (i=0; i < t-> nPatches; i++) {\n\n        data = GetData(it8, i, t->SampleID);\n\n        if (data != NULL) {\n\n                if (cmsstrcasecmp(data, cPatch) == 0)\n                        return i;\n                }\n        }\n\n        // SynError(it8, \"Couldn't find patch '%s'\\n\", cPatch);\n        return -1;\n}\n\n\nstatic\nint LocateEmptyPatch(cmsIT8* it8)\n{\n    int i;\n    const char *data;\n    TABLE* t = GetTable(it8);\n\n    for (i=0; i < t-> nPatches; i++) {\n\n        data = GetData(it8, i, t->SampleID);\n\n        if (data == NULL)\n            return i;\n\n    }\n\n    return -1;\n}\n\nstatic\nint LocateSample(cmsIT8* it8, const char* cSample)\n{\n    int i;\n    const char *fld;\n    TABLE* t = GetTable(it8);\n\n    for (i=0; i < t->nSamples; i++) {\n\n        fld = GetDataFormat(it8, i);\n        if (fld != NULL) {\n            if (cmsstrcasecmp(fld, cSample) == 0)\n                return i;\n        }\n    }\n\n    return -1;\n\n}\n\n\nint CMSEXPORT cmsIT8FindDataFormat(cmsHANDLE hIT8, const char* cSample)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    _cmsAssert(hIT8 != NULL);\n\n    return LocateSample(it8, cSample);\n}\n\n\n\nconst char* CMSEXPORT cmsIT8GetDataRowCol(cmsHANDLE hIT8, int row, int col)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    _cmsAssert(hIT8 != NULL);\n\n    return GetData(it8, row, col);\n}\n\n\ncmsFloat64Number CMSEXPORT cmsIT8GetDataRowColDbl(cmsHANDLE hIT8, int row, int col)\n{\n    const char* Buffer;\n\n    Buffer = cmsIT8GetDataRowCol(hIT8, row, col);\n\n    if (Buffer == NULL) return 0.0;\n\n    return ParseFloatNumber(Buffer);\n}\n\n\ncmsBool CMSEXPORT cmsIT8SetDataRowCol(cmsHANDLE hIT8, int row, int col, const char* Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    _cmsAssert(hIT8 != NULL);\n\n    return SetData(it8, row, col, Val);\n}\n\n\ncmsBool CMSEXPORT cmsIT8SetDataRowColDbl(cmsHANDLE hIT8, int row, int col, cmsFloat64Number Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    char Buff[256];\n\n    _cmsAssert(hIT8 != NULL);\n\n    snprintf(Buff, 255, it8->DoubleFormatter, Val);\n\n    return SetData(it8, row, col, Buff);\n}\n\n\n\nconst char* CMSEXPORT cmsIT8GetData(cmsHANDLE hIT8, const char* cPatch, const char* cSample)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    int iField, iSet;\n\n    _cmsAssert(hIT8 != NULL);\n\n    iField = LocateSample(it8, cSample);\n    if (iField < 0) {\n        return NULL;\n    }\n\n    iSet = LocatePatch(it8, cPatch);\n    if (iSet < 0) {\n            return NULL;\n    }\n\n    return GetData(it8, iSet, iField);\n}\n\n\ncmsFloat64Number CMSEXPORT cmsIT8GetDataDbl(cmsHANDLE  it8, const char* cPatch, const char* cSample)\n{\n    const char* Buffer;\n\n    Buffer = cmsIT8GetData(it8, cPatch, cSample);\n\n    return ParseFloatNumber(Buffer);\n}\n\n\n\ncmsBool CMSEXPORT cmsIT8SetData(cmsHANDLE hIT8, const char* cPatch, const char* cSample, const char *Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    int iField, iSet;\n    TABLE* t;\n\n    _cmsAssert(hIT8 != NULL);\n\n    t = GetTable(it8);\n\n    iField = LocateSample(it8, cSample);\n\n    if (iField < 0)\n        return FALSE;\n\n    if (t-> nPatches == 0) {\n\n        AllocateDataFormat(it8);\n        AllocateDataSet(it8);\n        CookPointers(it8);\n    }\n\n    if (cmsstrcasecmp(cSample, \"SAMPLE_ID\") == 0) {\n\n        iSet   = LocateEmptyPatch(it8);\n        if (iSet < 0) {\n            return SynError(it8, \"Couldn't add more patches '%s'\\n\", cPatch);\n        }\n\n        iField = t -> SampleID;\n    }\n    else {\n        iSet = LocatePatch(it8, cPatch);\n        if (iSet < 0) {\n            return FALSE;\n        }\n    }\n\n    return SetData(it8, iSet, iField, Val);\n}\n\n\ncmsBool CMSEXPORT cmsIT8SetDataDbl(cmsHANDLE hIT8, const char* cPatch,\n                                   const char* cSample,\n                                   cmsFloat64Number Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    char Buff[256];\n\n    _cmsAssert(hIT8 != NULL);\n\n    snprintf(Buff, 255, it8->DoubleFormatter, Val);\n    return cmsIT8SetData(hIT8, cPatch, cSample, Buff);\n}\n\n// Buffer should get MAXSTR at least\n\nconst char* CMSEXPORT cmsIT8GetPatchName(cmsHANDLE hIT8, int nPatch, char* buffer)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    TABLE* t;\n    char* Data;\n\n    _cmsAssert(hIT8 != NULL);\n\n    t = GetTable(it8);\n    Data = GetData(it8, nPatch, t->SampleID);\n\n    if (!Data) return NULL;\n    if (!buffer) return Data;\n\n    strncpy(buffer, Data, MAXSTR-1);\n    buffer[MAXSTR-1] = 0;\n    return buffer;\n}\n\nint CMSEXPORT cmsIT8GetPatchByName(cmsHANDLE hIT8, const char *cPatch)\n{\n    _cmsAssert(hIT8 != NULL);\n\n    return LocatePatch((cmsIT8*)hIT8, cPatch);\n}\n\ncmsUInt32Number CMSEXPORT cmsIT8TableCount(cmsHANDLE hIT8)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    _cmsAssert(hIT8 != NULL);\n\n    return it8 ->TablesCount;\n}\n\n// This handles the \"LABEL\" extension.\n// Label, nTable, Type\n\nint CMSEXPORT cmsIT8SetTableByLabel(cmsHANDLE hIT8, const char* cSet, const char* cField, const char* ExpectedType)\n{\n    const char* cLabelFld;\n    char Type[256], Label[256];\n    cmsUInt32Number nTable;\n\n    _cmsAssert(hIT8 != NULL);\n\n    if (cField != NULL && *cField == 0)\n            cField = \"LABEL\";\n\n    if (cField == NULL)\n            cField = \"LABEL\";\n\n    cLabelFld = cmsIT8GetData(hIT8, cSet, cField);\n    if (!cLabelFld) return -1;\n\n    if (sscanf(cLabelFld, \"%255s %u %255s\", Label, &nTable, Type) != 3)\n            return -1;\n\n    if (ExpectedType != NULL && *ExpectedType == 0)\n        ExpectedType = NULL;\n\n    if (ExpectedType) {\n\n        if (cmsstrcasecmp(Type, ExpectedType) != 0) return -1;\n    }\n\n    return cmsIT8SetTable(hIT8, nTable);\n}\n\n\ncmsBool CMSEXPORT cmsIT8SetIndexColumn(cmsHANDLE hIT8, const char* cSample)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    int pos;\n\n    _cmsAssert(hIT8 != NULL);\n\n    pos = LocateSample(it8, cSample);\n    if(pos == -1)\n        return FALSE;\n\n    it8->Tab[it8->nTable].SampleID = pos;\n    return TRUE;\n}\n\n\nvoid CMSEXPORT cmsIT8DefineDblFormat(cmsHANDLE hIT8, const char* Formatter)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    _cmsAssert(hIT8 != NULL);\n\n    if (Formatter == NULL)\n        strcpy(it8->DoubleFormatter, DEFAULT_DBL_FORMAT);\n    else\n        strncpy(it8->DoubleFormatter, Formatter, sizeof(it8->DoubleFormatter));\n\n    it8 ->DoubleFormatter[sizeof(it8 ->DoubleFormatter)-1] = 0;\n}\n\n"], "fixing_code": ["<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{62812507-F926-4968-96A9-17678460AD90}</ProjectGuid>\n    <RootNamespace>jpegicc</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(IncludePath);;C:\\code\\jpeg-9a</IncludePath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(IncludePath);;C:\\code\\jpeg-9a</IncludePath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(LibraryPath);;C:\\code\\jpeg-9a</LibraryPath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(LibraryPath);;C:\\code\\jpeg-9a</LibraryPath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(IncludePath);;C:\\code\\jpeg-9a</IncludePath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(IncludePath);;C:\\code\\jpeg-9a</IncludePath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(LibraryPath);;C:\\code\\jpeg-9a</LibraryPath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(LibraryPath);;C:\\code\\jpeg-9a</LibraryPath>\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libjpeg.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libjpeg.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>Full</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libjpeg.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>Full</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libjpeg.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\vprf.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\xgetopt.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\jpgicc\\iccjpeg.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\jpgicc\\jpgicc.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ProjectReference Include=\"..\\lcms2_static\\lcms2_static.vcxproj\">\n      <Project>{71dede59-3f1e-486b-a899-4283000f76b5}</Project>\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n    </ProjectReference>\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{8C51BE48-ADB8-4089-A9EC-F6BF993A0548}</ProjectGuid>\n    <RootNamespace>lcms2_DLL</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>DynamicLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>DynamicLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>DynamicLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>DynamicLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <TargetName>lcms2</TargetName>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <TargetName>lcms2</TargetName>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <TargetName>lcms2</TargetName>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <TargetName>lcms2</TargetName>\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;_USRDLL;CMS_DLL_BUILD;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <StringPooling>false</StringPooling>\n    </ClCompile>\n    <Link>\n      <ModuleDefinitionFile>..\\..\\..\\src\\lcms2.def</ModuleDefinitionFile>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Windows</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;_USRDLL;CMS_DLL_BUILD;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <StringPooling>false</StringPooling>\n    </ClCompile>\n    <Link>\n      <ModuleDefinitionFile>\n      </ModuleDefinitionFile>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Windows</SubSystem>\n      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>Full</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>\n      <WholeProgramOptimization>true</WholeProgramOptimization>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;_USRDLL;CMS_DLL_BUILD;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <StringPooling>true</StringPooling>\n      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <ModuleDefinitionFile>..\\..\\..\\src\\lcms2.def</ModuleDefinitionFile>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Windows</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>Full</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>\n      <WholeProgramOptimization>true</WholeProgramOptimization>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;_USRDLL;CMS_DLL_BUILD;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <StringPooling>true</StringPooling>\n      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <ModuleDefinitionFile>\n      </ModuleDefinitionFile>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Windows</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\src\\cmsalpha.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmscam02.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmscgats.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmscnvrt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmserr.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsgamma.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsgmt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmshalf.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsintrp.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsio0.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsio1.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmslut.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsmd5.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsmtrx.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsnamed.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsopt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmspack.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmspcs.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsplugin.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsps2.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmssamp.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmssm.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmstypes.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsvirt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmswtpnt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsxform.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <CustomBuild Include=\"..\\..\\..\\src\\lcms2.def\">\n      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</ExcludedFromBuild>\n    </CustomBuild>\n  </ItemGroup>\n  <ItemGroup>\n    <ClInclude Include=\"..\\..\\..\\src\\lcms2_internal.h\" />\n    <ClInclude Include=\"..\\..\\..\\include\\lcms2.h\" />\n    <ClInclude Include=\"..\\..\\..\\include\\lcms2_plugin.h\" />\n    <ClInclude Include=\"..\\resource.h\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ResourceCompile Include=\"..\\lcms2.rc\" />\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{71DEDE59-3F1E-486B-A899-4283000F76B5}</ProjectGuid>\n    <RootNamespace>lcms2_static</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>StaticLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>StaticLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>StaticLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>StaticLibrary</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\Lib\\MS\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\Lib\\MS\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\Lib\\MS\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\Lib\\MS\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <FunctionLevelLinking>\n      </FunctionLevelLinking>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n    </ClCompile>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <FunctionLevelLinking>\n      </FunctionLevelLinking>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <CompileAs>Default</CompileAs>\n    </ClCompile>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>false</EnableFiberSafeOptimizations>\n      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n      <ExceptionHandling>false</ExceptionHandling>\n      <StringPooling>true</StringPooling>\n      <FloatingPointModel>Precise</FloatingPointModel>\n      <FloatingPointExceptions>false</FloatingPointExceptions>\n      <RuntimeTypeInfo>false</RuntimeTypeInfo>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>\n      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n      <ExceptionHandling>false</ExceptionHandling>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>\n      <StringPooling>true</StringPooling>\n    </ClCompile>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\src\\cmsalpha.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmscam02.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmscgats.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmscnvrt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmserr.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsgamma.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsgmt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmshalf.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsintrp.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsio0.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsio1.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmslut.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsmd5.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsmtrx.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsnamed.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsopt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmspack.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmspcs.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsplugin.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsps2.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmssamp.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmssm.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmstypes.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsvirt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmswtpnt.c\" />\n    <ClCompile Include=\"..\\..\\..\\src\\cmsxform.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ClInclude Include=\"..\\..\\..\\src\\lcms2_internal.h\" />\n    <ClInclude Include=\"..\\..\\..\\include\\lcms2.h\" />\n    <ClInclude Include=\"..\\..\\..\\include\\lcms2_plugin.h\" />\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{FBFBE1DC-DB84-4BA1-9552-B4780F457849}</ProjectGuid>\n    <RootNamespace>linkicc</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\utils\\linkicc\\linkicc.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\vprf.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\xgetopt.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ProjectReference Include=\"..\\lcms2_static\\lcms2_static.vcxproj\">\n      <Project>{71dede59-3f1e-486b-a899-4283000f76b5}</Project>\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n    </ProjectReference>\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{EF6A8851-65FE-46F5-B9EF-14F0B671F693}</ProjectGuid>\n    <RootNamespace>psicc</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\utils\\psicc\\psicc.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\vprf.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\xgetopt.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ProjectReference Include=\"..\\lcms2_static\\lcms2_static.vcxproj\">\n      <Project>{71dede59-3f1e-486b-a899-4283000f76b5}</Project>\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n    </ProjectReference>\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{928A3A2B-46EF-4279-959C-513B3652FF0E}</ProjectGuid>\n    <RootNamespace>testbed</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\testbed\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\testbed\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\testbed\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\testbed\\</OutDir>\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n      <Profile>false</Profile>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <Profile>false</Profile>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>Full</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>false</EnableFiberSafeOptimizations>\n      <AdditionalIncludeDirectories>../../../include;../../../src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <BufferSecurityCheck>false</BufferSecurityCheck>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <CallingConvention>Cdecl</CallingConvention>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n      <Profile>false</Profile>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>Full</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>\n      <OmitFramePointers>true</OmitFramePointers>\n      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>\n      <AdditionalIncludeDirectories>../../../include;../../../src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n      <BufferSecurityCheck>false</BufferSecurityCheck>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <CallingConvention>Cdecl</CallingConvention>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <Profile>false</Profile>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ProjectReference Include=\"..\\lcms2_static\\lcms2_static.vcxproj\">\n      <Project>{71dede59-3f1e-486b-a899-4283000f76b5}</Project>\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n    </ProjectReference>\n  </ItemGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\testbed\\testcms2.c\" />\n    <ClCompile Include=\"..\\..\\..\\testbed\\testplugin.c\" />\n    <ClCompile Include=\"..\\..\\..\\testbed\\zoo_icc.c\" />\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{75B91835-CCD7-48BE-A606-A9C997D5DBEE}</ProjectGuid>\n    <RootNamespace>tiffdiff</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">C:\\jpeg-8d;c:\\tiff-4.0.2\\libtiff;$(IncludePath)</IncludePath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">C:\\jpeg-8d;c:\\tiff-4.0.2\\libtiff;$(IncludePath)</IncludePath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">C:\\jpeg-8d;C:\\tiff-4.0.2\\libtiff;$(LibraryPath)</LibraryPath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">C:\\jpeg-8d;C:\\tiff-4.0.2\\libtiff;$(LibraryPath)</LibraryPath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">C:\\jpeg-8d;c:\\tiff-4.0.2\\libtiff;$(IncludePath)</IncludePath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">C:\\jpeg-8d;c:\\tiff-4.0.2\\libtiff;$(IncludePath)</IncludePath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">C:\\jpeg-8d;C:\\tiff-4.0.2\\libtiff;$(LibraryPath)</LibraryPath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">C:\\jpeg-8d;C:\\tiff-4.0.2\\libtiff;$(LibraryPath)</LibraryPath>\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\vprf.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\xgetopt.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\tificc\\tifdiff.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ProjectReference Include=\"..\\lcms2_static\\lcms2_static.vcxproj\">\n      <Project>{71dede59-3f1e-486b-a899-4283000f76b5}</Project>\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n    </ProjectReference>\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{2256DE16-ED92-4A6F-9C54-F65BB61E64A2}</ProjectGuid>\n    <RootNamespace>tifficc</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(IncludePath);C:\\tiff-4.0.2\\libtiff</IncludePath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(IncludePath);C:\\tiff-4.0.2\\libtiff</IncludePath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(LibraryPath);C:\\tiff-4.0.2\\libtiff</LibraryPath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(LibraryPath);C:\\tiff-4.0.2\\libtiff</LibraryPath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(IncludePath);C:\\tiff-4.0.2\\libtiff</IncludePath>\n    <IncludePath Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(IncludePath);C:\\tiff-4.0.2\\libtiff</IncludePath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(LibraryPath);C:\\tiff-4.0.2\\libtiff</LibraryPath>\n    <LibraryPath Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(LibraryPath);C:\\tiff-4.0.2\\libtiff</LibraryPath>\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <AdditionalDependencies>libtiff.lib;%(AdditionalDependencies)</AdditionalDependencies>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\vprf.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\xgetopt.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\tificc\\tificc.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ClInclude Include=\"..\\..\\..\\utils\\common\\utils.h\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ProjectReference Include=\"..\\lcms2_static\\lcms2_static.vcxproj\">\n      <Project>{71dede59-3f1e-486b-a899-4283000f76b5}</Project>\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n    </ProjectReference>\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ItemGroup Label=\"ProjectConfigurations\">\n    <ProjectConfiguration Include=\"Debug|Win32\">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Debug|x64\">\n      <Configuration>Debug</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|Win32\">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include=\"Release|x64\">\n      <Configuration>Release</Configuration>\n      <Platform>x64</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label=\"Globals\">\n    <ProjectGuid>{9EE22D66-C849-474C-9ED5-C3E141DAB160}</ProjectGuid>\n    <RootNamespace>transicc</RootNamespace>\n    <Keyword>Win32Proj</Keyword>\n    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n    <PlatformToolset>v141</PlatformToolset>\n  </PropertyGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n  <ImportGroup Label=\"ExtensionSettings\">\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" />\n  </ImportGroup>\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n    <_ProjectFileVersion>10.0.21006.1</_ProjectFileVersion>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">..\\..\\..\\bin\\</OutDir>\n    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">..\\..\\..\\bin\\</OutDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)_$(Platform)\\</IntDir>\n    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(Configuration)_$(Platform)\\</IntDir>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <MinimalRebuild>true</MinimalRebuild>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n    <ClCompile>\n      <Optimization>Disabled</Optimization>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n      <BrowseInformation>true</BrowseInformation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <TargetMachine>MachineX86</TargetMachine>\n    </Link>\n    <Bscmake>\n      <PreserveSbr>true</PreserveSbr>\n    </Bscmake>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n    <ClCompile>\n      <Optimization>MaxSpeed</Optimization>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <AdditionalIncludeDirectories>../../../include;../../../utils/common;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <PrecompiledHeader>\n      </PrecompiledHeader>\n      <WarningLevel>Level4</WarningLevel>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <MultiProcessorCompilation>true</MultiProcessorCompilation>\n    </ClCompile>\n    <Link>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <SubSystem>Console</SubSystem>\n      <OptimizeReferences>true</OptimizeReferences>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <ClCompile Include=\"..\\..\\..\\utils\\transicc\\transicc.c\">\n      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</ExcludedFromBuild>\n    </ClCompile>\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\vprf.c\" />\n    <ClCompile Include=\"..\\..\\..\\utils\\common\\xgetopt.c\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ClInclude Include=\"..\\..\\..\\utils\\common\\utils.h\" />\n  </ItemGroup>\n  <ItemGroup>\n    <ProjectReference Include=\"..\\lcms2_static\\lcms2_static.vcxproj\">\n      <Project>{71dede59-3f1e-486b-a899-4283000f76b5}</Project>\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n    </ProjectReference>\n  </ItemGroup>\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n  <ImportGroup Label=\"ExtensionTargets\">\n  </ImportGroup>\n</Project>", "//---------------------------------------------------------------------------------\n//\n//  Little Color Management System\n//  Copyright (c) 1998-2018 Marti Maria Saguer\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the \"Software\"),\n// to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense,\n// and/or sell copies of the Software, and to permit persons to whom the Software\n// is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n// THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n//---------------------------------------------------------------------------------\n//\n\n#include \"lcms2_internal.h\"\n\n\n// IT8.7 / CGATS.17-200x handling -----------------------------------------------------------------------------\n\n\n#define MAXID        128     // Max length of identifier\n#define MAXSTR      1024     // Max length of string\n#define MAXTABLES    255     // Max Number of tables in a single stream\n#define MAXINCLUDE    20     // Max number of nested includes\n\n#define DEFAULT_DBL_FORMAT  \"%.10g\" // Double formatting\n\n#ifdef CMS_IS_WINDOWS_\n#    include <io.h>\n#    define DIR_CHAR    '\\\\'\n#else\n#    define DIR_CHAR    '/'\n#endif\n\n\n// Symbols\ntypedef enum {\n\n        SUNDEFINED,\n        SINUM,      // Integer\n        SDNUM,      // Real\n        SIDENT,     // Identifier\n        SSTRING,    // string\n        SCOMMENT,   // comment\n        SEOLN,      // End of line\n        SEOF,       // End of stream\n        SSYNERROR,  // Syntax error found on stream\n\n        // Keywords\n\n        SBEGIN_DATA,\n        SBEGIN_DATA_FORMAT,\n        SEND_DATA,\n        SEND_DATA_FORMAT,\n        SKEYWORD,\n        SDATA_FORMAT_ID,\n        SINCLUDE\n\n    } SYMBOL;\n\n\n// How to write the value\ntypedef enum {\n\n        WRITE_UNCOOKED,\n        WRITE_STRINGIFY,\n        WRITE_HEXADECIMAL,\n        WRITE_BINARY,\n        WRITE_PAIR\n\n    } WRITEMODE;\n\n// Linked list of variable names\ntypedef struct _KeyVal {\n\n        struct _KeyVal*  Next;\n        char*            Keyword;       // Name of variable\n        struct _KeyVal*  NextSubkey;    // If key is a dictionary, points to the next item\n        char*            Subkey;        // If key is a dictionary, points to the subkey name\n        char*            Value;         // Points to value\n        WRITEMODE        WriteAs;       // How to write the value\n\n   } KEYVALUE;\n\n\n// Linked list of memory chunks (Memory sink)\ntypedef struct _OwnedMem {\n\n        struct _OwnedMem* Next;\n        void *            Ptr;          // Point to value\n\n   } OWNEDMEM;\n\n// Suballocator\ntypedef struct _SubAllocator {\n\n         cmsUInt8Number* Block;\n         cmsUInt32Number BlockSize;\n         cmsUInt32Number Used;\n\n    } SUBALLOCATOR;\n\n// Table. Each individual table can hold properties and rows & cols\ntypedef struct _Table {\n\n        char SheetType[MAXSTR];               // The first row of the IT8 (the type)\n\n        int            nSamples, nPatches;    // Cols, Rows\n        int            SampleID;              // Pos of ID\n\n        KEYVALUE*      HeaderList;            // The properties\n\n        char**         DataFormat;            // The binary stream descriptor\n        char**         Data;                  // The binary stream\n\n    } TABLE;\n\n// File stream being parsed\ntypedef struct _FileContext {\n        char           FileName[cmsMAX_PATH];    // File name if being read from file\n        FILE*          Stream;                   // File stream or NULL if holded in memory\n    } FILECTX;\n\n// This struct hold all information about an open IT8 handler.\ntypedef struct {\n\n\n        cmsUInt32Number  TablesCount;                     // How many tables in this stream\n        cmsUInt32Number  nTable;                          // The actual table\n\n        TABLE Tab[MAXTABLES];\n\n        // Memory management\n        OWNEDMEM*      MemorySink;            // The storage backend\n        SUBALLOCATOR   Allocator;             // String suballocator -- just to keep it fast\n\n        // Parser state machine\n        SYMBOL             sy;                // Current symbol\n        int                ch;                // Current character\n\n        cmsInt32Number     inum;              // integer value\n        cmsFloat64Number   dnum;              // real value\n\n        char           id[MAXID];             // identifier\n        char           str[MAXSTR];           // string\n\n        // Allowed keywords & datasets. They have visibility on whole stream\n        KEYVALUE*      ValidKeywords;\n        KEYVALUE*      ValidSampleID;\n\n        char*          Source;                // Points to loc. being parsed\n        cmsInt32Number lineno;                // line counter for error reporting\n\n        FILECTX*       FileStack[MAXINCLUDE]; // Stack of files being parsed\n        cmsInt32Number IncludeSP;             // Include Stack Pointer\n\n        char*          MemoryBlock;           // The stream if holded in memory\n\n        char           DoubleFormatter[MAXID];// Printf-like 'cmsFloat64Number' formatter\n\n        cmsContext    ContextID;              // The threading context\n\n   } cmsIT8;\n\n\n// The stream for save operations\ntypedef struct {\n\n        FILE* stream;   // For save-to-file behaviour\n\n        cmsUInt8Number* Base;\n        cmsUInt8Number* Ptr;        // For save-to-mem behaviour\n        cmsUInt32Number Used;\n        cmsUInt32Number Max;\n\n    } SAVESTREAM;\n\n\n// ------------------------------------------------------ cmsIT8 parsing routines\n\n\n// A keyword\ntypedef struct {\n\n        const char *id;\n        SYMBOL sy;\n\n   } KEYWORD;\n\n// The keyword->symbol translation table. Sorting is required.\nstatic const KEYWORD TabKeys[] = {\n\n        {\"$INCLUDE\",               SINCLUDE},   // This is an extension!\n        {\".INCLUDE\",               SINCLUDE},   // This is an extension!\n\n        {\"BEGIN_DATA\",             SBEGIN_DATA },\n        {\"BEGIN_DATA_FORMAT\",      SBEGIN_DATA_FORMAT },\n        {\"DATA_FORMAT_IDENTIFIER\", SDATA_FORMAT_ID},\n        {\"END_DATA\",               SEND_DATA},\n        {\"END_DATA_FORMAT\",        SEND_DATA_FORMAT},\n        {\"KEYWORD\",                SKEYWORD}\n        };\n\n#define NUMKEYS (sizeof(TabKeys)/sizeof(KEYWORD))\n\n// Predefined properties\n\n// A property\ntypedef struct {\n        const char *id;    // The identifier\n        WRITEMODE as;      // How is supposed to be written\n    } PROPERTY;\n\nstatic PROPERTY PredefinedProperties[] = {\n\n        {\"NUMBER_OF_FIELDS\", WRITE_UNCOOKED},    // Required - NUMBER OF FIELDS\n        {\"NUMBER_OF_SETS\",   WRITE_UNCOOKED},    // Required - NUMBER OF SETS\n        {\"ORIGINATOR\",       WRITE_STRINGIFY},   // Required - Identifies the specific system, organization or individual that created the data file.\n        {\"FILE_DESCRIPTOR\",  WRITE_STRINGIFY},   // Required - Describes the purpose or contents of the data file.\n        {\"CREATED\",          WRITE_STRINGIFY},   // Required - Indicates date of creation of the data file.\n        {\"DESCRIPTOR\",       WRITE_STRINGIFY},   // Required  - Describes the purpose or contents of the data file.\n        {\"DIFFUSE_GEOMETRY\", WRITE_STRINGIFY},   // The diffuse geometry used. Allowed values are \"sphere\" or \"opal\".\n        {\"MANUFACTURER\",     WRITE_STRINGIFY},\n        {\"MANUFACTURE\",      WRITE_STRINGIFY},   // Some broken Fuji targets does store this value\n        {\"PROD_DATE\",        WRITE_STRINGIFY},   // Identifies year and month of production of the target in the form yyyy:mm.\n        {\"SERIAL\",           WRITE_STRINGIFY},   // Uniquely identifies individual physical target.\n\n        {\"MATERIAL\",         WRITE_STRINGIFY},    // Identifies the material on which the target was produced using a code\n                                                  // uniquely identifying th e material. This is intend ed to be used for IT8.7\n                                                  // physical targets only (i.e . IT8.7/1 a nd IT8.7/2).\n\n        {\"INSTRUMENTATION\",  WRITE_STRINGIFY},    // Used to report the specific instrumentation used (manufacturer and\n                                                  // model number) to generate the data reported. This data will often\n                                                  // provide more information about the particular data collected than an\n                                                  // extensive list of specific details. This is particularly important for\n                                                  // spectral data or data derived from spectrophotometry.\n\n        {\"MEASUREMENT_SOURCE\", WRITE_STRINGIFY},  // Illumination used for spectral measurements. This data helps provide\n                                                  // a guide to the potential for issues of paper fluorescence, etc.\n\n        {\"PRINT_CONDITIONS\", WRITE_STRINGIFY},     // Used to define the characteristics of the printed sheet being reported.\n                                                   // Where standard conditions have been defined (e.g., SWOP at nominal)\n                                                   // named conditions may suffice. Otherwise, detailed information is\n                                                   // needed.\n\n        {\"SAMPLE_BACKING\",   WRITE_STRINGIFY},     // Identifies the backing material used behind the sample during\n                                                   // measurement. Allowed values are \"black\", \"white\", or {\"na\".\n                                                  \n        {\"CHISQ_DOF\",        WRITE_STRINGIFY},     // Degrees of freedom associated with the Chi squared statistic\n                                                   // below properties are new in recent specs:\n\n        {\"MEASUREMENT_GEOMETRY\", WRITE_STRINGIFY}, // The type of measurement, either reflection or transmission, should be indicated\n                                                   // along with details of the geometry and the aperture size and shape. For example,\n                                                   // for transmission measurements it is important to identify 0/diffuse, diffuse/0,\n                                                   // opal or integrating sphere, etc. For reflection it is important to identify 0/45,\n                                                   // 45/0, sphere (specular included or excluded), etc.\n\n       {\"FILTER\",            WRITE_STRINGIFY},     // Identifies the use of physical filter(s) during measurement. Typically used to\n                                                   // denote the use of filters such as none, D65, Red, Green or Blue.\n                                                  \n       {\"POLARIZATION\",      WRITE_STRINGIFY},     // Identifies the use of a physical polarization filter during measurement. Allowed\n                                                   // values are {\"yes\", \"white\", \"none\" or \"na\".\n\n       {\"WEIGHTING_FUNCTION\", WRITE_PAIR},         // Indicates such functions as: the CIE standard observer functions used in the\n                                                   // calculation of various data parameters (2 degree and 10 degree), CIE standard\n                                                   // illuminant functions used in the calculation of various data parameters (e.g., D50,\n                                                   // D65, etc.), density status response, etc. If used there shall be at least one\n                                                   // name-value pair following the WEIGHTING_FUNCTION tag/keyword. The first attribute\n                                                   // in the set shall be {\"name\" and shall identify the particular parameter used.\n                                                   // The second shall be {\"value\" and shall provide the value associated with that name.\n                                                   // For ASCII data, a string containing the Name and Value attribute pairs shall follow\n                                                   // the weighting function keyword. A semi-colon separates attribute pairs from each\n                                                   // other and within the attribute the name and value are separated by a comma.\n\n       {\"COMPUTATIONAL_PARAMETER\", WRITE_PAIR},    // Parameter that is used in computing a value from measured data. Name is the name\n                                                   // of the calculation, parameter is the name of the parameter used in the calculation\n                                                   // and value is the value of the parameter.\n                                                   \n       {\"TARGET_TYPE\",        WRITE_STRINGIFY},    // The type of target being measured, e.g. IT8.7/1, IT8.7/3, user defined, etc.\n                                                  \n       {\"COLORANT\",           WRITE_STRINGIFY},    // Identifies the colorant(s) used in creating the target.\n                                                  \n       {\"TABLE_DESCRIPTOR\",   WRITE_STRINGIFY},    // Describes the purpose or contents of a data table.\n                                                  \n       {\"TABLE_NAME\",         WRITE_STRINGIFY}     // Provides a short name for a data table.\n};\n\n#define NUMPREDEFINEDPROPS (sizeof(PredefinedProperties)/sizeof(PROPERTY))\n\n\n// Predefined sample types on dataset\nstatic const char* PredefinedSampleID[] = {\n        \"SAMPLE_ID\",      // Identifies sample that data represents\n        \"STRING\",         // Identifies label, or other non-machine readable value.\n                          // Value must begin and end with a \" symbol\n\n        \"CMYK_C\",         // Cyan component of CMYK data expressed as a percentage\n        \"CMYK_M\",         // Magenta component of CMYK data expressed as a percentage\n        \"CMYK_Y\",         // Yellow component of CMYK data expressed as a percentage\n        \"CMYK_K\",         // Black component of CMYK data expressed as a percentage\n        \"D_RED\",          // Red filter density\n        \"D_GREEN\",        // Green filter density\n        \"D_BLUE\",         // Blue filter density\n        \"D_VIS\",          // Visual filter density\n        \"D_MAJOR_FILTER\", // Major filter d ensity\n        \"RGB_R\",          // Red component of RGB data\n        \"RGB_G\",          // Green component of RGB data\n        \"RGB_B\",          // Blue com ponent of RGB data\n        \"SPECTRAL_NM\",    // Wavelength of measurement expressed in nanometers\n        \"SPECTRAL_PCT\",   // Percentage reflectance/transmittance\n        \"SPECTRAL_DEC\",   // Reflectance/transmittance\n        \"XYZ_X\",          // X component of tristimulus data\n        \"XYZ_Y\",          // Y component of tristimulus data\n        \"XYZ_Z\",          // Z component of tristimulus data\n        \"XYY_X\",          // x component of chromaticity data\n        \"XYY_Y\",          // y component of chromaticity data\n        \"XYY_CAPY\",       // Y component of tristimulus data\n        \"LAB_L\",          // L* component of Lab data\n        \"LAB_A\",          // a* component of Lab data\n        \"LAB_B\",          // b* component of Lab data\n        \"LAB_C\",          // C*ab component of Lab data\n        \"LAB_H\",          // hab component of Lab data\n        \"LAB_DE\",         // CIE dE\n        \"LAB_DE_94\",      // CIE dE using CIE 94\n        \"LAB_DE_CMC\",     // dE using CMC\n        \"LAB_DE_2000\",    // CIE dE using CIE DE 2000\n        \"MEAN_DE\",        // Mean Delta E (LAB_DE) of samples compared to batch average\n                          // (Used for data files for ANSI IT8.7/1 and IT8.7/2 targets)\n        \"STDEV_X\",        // Standard deviation of X (tristimulus data)\n        \"STDEV_Y\",        // Standard deviation of Y (tristimulus data)\n        \"STDEV_Z\",        // Standard deviation of Z (tristimulus data)\n        \"STDEV_L\",        // Standard deviation of L*\n        \"STDEV_A\",        // Standard deviation of a*\n        \"STDEV_B\",        // Standard deviation of b*\n        \"STDEV_DE\",       // Standard deviation of CIE dE\n        \"CHI_SQD_PAR\"};   // The average of the standard deviations of L*, a* and b*. It is\n                          // used to derive an estimate of the chi-squared parameter which is\n                          // recommended as the predictor of the variability of dE\n\n#define NUMPREDEFINEDSAMPLEID (sizeof(PredefinedSampleID)/sizeof(char *))\n\n//Forward declaration of some internal functions\nstatic void* AllocChunk(cmsIT8* it8, cmsUInt32Number size);\n\n// Checks whatever c is a separator\nstatic\ncmsBool isseparator(int c)\n{\n    return (c == ' ') || (c == '\\t') ; \n}\n\n// Checks whatever c is a valid identifier char\nstatic\ncmsBool ismiddle(int c)\n{\n   return (!isseparator(c) && (c != '#') && (c !='\\\"') && (c != '\\'') && (c > 32) && (c < 127));\n}\n\n// Checks whatsever c is a valid identifier middle char.\nstatic\ncmsBool isidchar(int c)\n{\n   return isalnum(c) || ismiddle(c);\n}\n\n// Checks whatsever c is a valid identifier first char.\nstatic\ncmsBool isfirstidchar(int c)\n{\n     return !isdigit(c) && ismiddle(c);\n}\n\n// Guess whether the supplied path looks like an absolute path\nstatic\ncmsBool isabsolutepath(const char *path)\n{\n    char ThreeChars[4];\n\n    if(path == NULL)\n        return FALSE;\n    if (path[0] == 0)\n        return FALSE;\n\n    strncpy(ThreeChars, path, 3);\n    ThreeChars[3] = 0;\n\n    if(ThreeChars[0] == DIR_CHAR)\n        return TRUE;\n\n#ifdef  CMS_IS_WINDOWS_\n    if (isalpha((int) ThreeChars[0]) && ThreeChars[1] == ':')\n        return TRUE;\n#endif\n    return FALSE;\n}\n\n\n// Makes a file path based on a given reference path\n// NOTE: this function doesn't check if the path exists or even if it's legal\nstatic\ncmsBool BuildAbsolutePath(const char *relPath, const char *basePath, char *buffer, cmsUInt32Number MaxLen)\n{\n    char *tail;\n    cmsUInt32Number len;\n\n    // Already absolute?\n    if (isabsolutepath(relPath)) {\n\n        strncpy(buffer, relPath, MaxLen);\n        buffer[MaxLen-1] = 0;\n        return TRUE;\n    }\n\n    // No, search for last\n    strncpy(buffer, basePath, MaxLen);\n    buffer[MaxLen-1] = 0;\n\n    tail = strrchr(buffer, DIR_CHAR);\n    if (tail == NULL) return FALSE;    // Is not absolute and has no separators??\n\n    len = (cmsUInt32Number) (tail - buffer);\n    if (len >= MaxLen) return FALSE;\n\n    // No need to assure zero terminator over here\n    strncpy(tail + 1, relPath, MaxLen - len);\n\n    return TRUE;\n}\n\n\n// Make sure no exploit is being even tried\nstatic\nconst char* NoMeta(const char* str)\n{\n    if (strchr(str, '%') != NULL)\n        return \"**** CORRUPTED FORMAT STRING ***\";\n\n    return str;\n}\n\n// Syntax error\nstatic\ncmsBool SynError(cmsIT8* it8, const char *Txt, ...)\n{\n    char Buffer[256], ErrMsg[1024];\n    va_list args;\n\n    va_start(args, Txt);\n    vsnprintf(Buffer, 255, Txt, args);\n    Buffer[255] = 0;\n    va_end(args);\n\n    snprintf(ErrMsg, 1023, \"%s: Line %d, %s\", it8->FileStack[it8 ->IncludeSP]->FileName, it8->lineno, Buffer);\n    ErrMsg[1023] = 0;\n    it8->sy = SSYNERROR;\n    cmsSignalError(it8 ->ContextID, cmsERROR_CORRUPTION_DETECTED, \"%s\", ErrMsg);\n    return FALSE;\n}\n\n// Check if current symbol is same as specified. issue an error else.\nstatic\ncmsBool Check(cmsIT8* it8, SYMBOL sy, const char* Err)\n{\n        if (it8 -> sy != sy)\n                return SynError(it8, NoMeta(Err));\n        return TRUE;\n}\n\n// Read Next character from stream\nstatic\nvoid NextCh(cmsIT8* it8)\n{\n    if (it8 -> FileStack[it8 ->IncludeSP]->Stream) {\n\n        it8 ->ch = fgetc(it8 ->FileStack[it8 ->IncludeSP]->Stream);\n\n        if (feof(it8 -> FileStack[it8 ->IncludeSP]->Stream))  {\n\n            if (it8 ->IncludeSP > 0) {\n\n                fclose(it8 ->FileStack[it8->IncludeSP--]->Stream);\n                it8 -> ch = ' ';                            // Whitespace to be ignored\n\n            } else\n                it8 ->ch = 0;   // EOF\n        }\n    }\n    else {\n        it8->ch = *it8->Source;\n        if (it8->ch) it8->Source++;\n    }\n}\n\n\n// Try to see if current identifier is a keyword, if so return the referred symbol\nstatic\nSYMBOL BinSrchKey(const char *id)\n{\n    int l = 1;\n    int r = NUMKEYS;\n    int x, res;\n\n    while (r >= l)\n    {\n        x = (l+r)/2;\n        res = cmsstrcasecmp(id, TabKeys[x-1].id);\n        if (res == 0) return TabKeys[x-1].sy;\n        if (res < 0) r = x - 1;\n        else l = x + 1;\n    }\n\n    return SUNDEFINED;\n}\n\n\n// 10 ^n\nstatic\ncmsFloat64Number xpow10(int n)\n{\n    return pow(10, (cmsFloat64Number) n);\n}\n\n\n//  Reads a Real number, tries to follow from integer number\nstatic\nvoid ReadReal(cmsIT8* it8, cmsInt32Number inum)\n{\n    it8->dnum = (cmsFloat64Number)inum;\n\n    while (isdigit(it8->ch)) {\n\n        it8->dnum = (cmsFloat64Number)it8->dnum * 10.0 + (cmsFloat64Number)(it8->ch - '0');\n        NextCh(it8);\n    }\n\n    if (it8->ch == '.') {        // Decimal point\n\n        cmsFloat64Number frac = 0.0;      // fraction\n        int prec = 0;                     // precision\n\n        NextCh(it8);               // Eats dec. point\n\n        while (isdigit(it8->ch)) {\n\n            frac = frac * 10.0 + (cmsFloat64Number)(it8->ch - '0');\n            prec++;\n            NextCh(it8);\n        }\n\n        it8->dnum = it8->dnum + (frac / xpow10(prec));\n    }\n\n    // Exponent, example 34.00E+20\n    if (toupper(it8->ch) == 'E') {\n\n        cmsInt32Number e;\n        cmsInt32Number sgn;\n\n        NextCh(it8); sgn = 1;\n\n        if (it8->ch == '-') {\n\n            sgn = -1; NextCh(it8);\n        }\n        else\n            if (it8->ch == '+') {\n\n                sgn = +1;\n                NextCh(it8);\n            }\n\n        e = 0;\n        while (isdigit(it8->ch)) {\n\n            cmsInt32Number digit = (it8->ch - '0');\n\n            if ((cmsFloat64Number)e * 10.0 + (cmsFloat64Number)digit < (cmsFloat64Number)+2147483647.0)\n                e = e * 10 + digit;\n\n            NextCh(it8);\n        }\n\n        e = sgn*e;\n        it8->dnum = it8->dnum * xpow10(e);\n    }\n}\n\n// Parses a float number\n// This can not call directly atof because it uses locale dependent\n// parsing, while CCMX files always use . as decimal separator\nstatic\ncmsFloat64Number ParseFloatNumber(const char *Buffer)\n{\n    cmsFloat64Number dnum = 0.0;\n    int sign = 1;\n\n    // keep safe\n    if (Buffer == NULL) return 0.0;\n\n    if (*Buffer == '-' || *Buffer == '+') {\n\n        sign = (*Buffer == '-') ? -1 : 1;\n        Buffer++;\n    }\n\n\n    while (*Buffer && isdigit((int)*Buffer)) {\n\n        dnum = dnum * 10.0 + (*Buffer - '0');\n        if (*Buffer) Buffer++;\n    }\n\n    if (*Buffer == '.') {\n\n        cmsFloat64Number frac = 0.0;      // fraction\n        int prec = 0;                     // precision\n\n        if (*Buffer) Buffer++;\n\n        while (*Buffer && isdigit((int)*Buffer)) {\n\n            frac = frac * 10.0 + (*Buffer - '0');\n            prec++;\n            if (*Buffer) Buffer++;\n        }\n\n        dnum = dnum + (frac / xpow10(prec));\n    }\n\n    // Exponent, example 34.00E+20\n    if (*Buffer && toupper(*Buffer) == 'E') {\n\n        int e;\n        int sgn;\n\n        if (*Buffer) Buffer++;\n        sgn = 1;\n\n        if (*Buffer == '-') {\n\n            sgn = -1;\n            if (*Buffer) Buffer++;\n        }\n        else\n            if (*Buffer == '+') {\n\n                sgn = +1;\n                if (*Buffer) Buffer++;\n            }\n\n        e = 0;\n        while (*Buffer && isdigit((int)*Buffer)) {\n\n            cmsInt32Number digit = (*Buffer - '0');\n\n            if ((cmsFloat64Number)e * 10.0 + digit < (cmsFloat64Number)+2147483647.0)\n                e = e * 10 + digit;\n\n            if (*Buffer) Buffer++;\n        }\n\n        e = sgn*e;\n        dnum = dnum * xpow10(e);\n    }\n\n    return sign * dnum;\n}\n\n\n// Reads next symbol\nstatic\nvoid InSymbol(cmsIT8* it8)\n{\n    register char *idptr;\n    register int k;\n    SYMBOL key;\n    int sng;\n    \n    do {\n\n        while (isseparator(it8->ch))\n            NextCh(it8);\n\n        if (isfirstidchar(it8->ch)) {          // Identifier\n\n            k = 0;\n            idptr = it8->id;\n\n            do {\n\n                if (++k < MAXID) *idptr++ = (char) it8->ch;\n\n                NextCh(it8);\n\n            } while (isidchar(it8->ch));\n\n            *idptr = '\\0';\n\n\n            key = BinSrchKey(it8->id);\n            if (key == SUNDEFINED) it8->sy = SIDENT;\n            else it8->sy = key;\n\n        }\n        else                         // Is a number?\n            if (isdigit(it8->ch) || it8->ch == '.' || it8->ch == '-' || it8->ch == '+')\n            {\n                int sign = 1;\n\n                if (it8->ch == '-') {\n                    sign = -1;\n                    NextCh(it8);\n                }\n\n                it8->inum = 0;\n                it8->sy   = SINUM;\n\n                if (it8->ch == '0') {          // 0xnnnn (Hexa) or 0bnnnn (Binary)\n\n                    NextCh(it8);\n                    if (toupper(it8->ch) == 'X') {\n\n                        int j;\n\n                        NextCh(it8);\n                        while (isxdigit(it8->ch))\n                        {\n                            it8->ch = toupper(it8->ch);\n                            if (it8->ch >= 'A' && it8->ch <= 'F')  j = it8->ch -'A'+10;\n                            else j = it8->ch - '0';\n\n                            if ((cmsFloat64Number) it8->inum * 16.0 + (cmsFloat64Number) j > (cmsFloat64Number)+2147483647.0)\n                            {\n                                SynError(it8, \"Invalid hexadecimal number\");\n                                return;\n                            }\n\n                            it8->inum = it8->inum * 16 + j;\n                            NextCh(it8);\n                        }\n                        return;\n                    }\n\n                    if (toupper(it8->ch) == 'B') {  // Binary\n\n                        int j;\n\n                        NextCh(it8);\n                        while (it8->ch == '0' || it8->ch == '1')\n                        {\n                            j = it8->ch - '0';\n\n                            if ((cmsFloat64Number) it8->inum * 2.0 + j > (cmsFloat64Number)+2147483647.0)\n                            {\n                                SynError(it8, \"Invalid binary number\");\n                                return;\n                            }\n\n                            it8->inum = it8->inum * 2 + j;\n                            NextCh(it8);\n                        }\n                        return;\n                    }\n                }\n\n\n                while (isdigit(it8->ch)) {\n\n                    cmsInt32Number digit = (it8->ch - '0');\n\n                    if ((cmsFloat64Number) it8->inum * 10.0 + (cmsFloat64Number) digit > (cmsFloat64Number) +2147483647.0) {\n                        ReadReal(it8, it8->inum);\n                        it8->sy = SDNUM;\n                        it8->dnum *= sign;\n                        return;\n                    }\n\n                    it8->inum = it8->inum * 10 + digit;\n                    NextCh(it8);\n                }\n\n                if (it8->ch == '.') {\n\n                    ReadReal(it8, it8->inum);\n                    it8->sy = SDNUM;\n                    it8->dnum *= sign;\n                    return;\n                }\n\n                it8 -> inum *= sign;\n\n                // Special case. Numbers followed by letters are taken as identifiers\n\n                if (isidchar(it8 ->ch)) {\n\n                    if (it8 ->sy == SINUM) {\n\n                        snprintf(it8->id, 127, \"%d\", it8->inum);\n                    }\n                    else {\n\n                        snprintf(it8->id, 127, it8 ->DoubleFormatter, it8->dnum);\n                    }\n\n                    k = (int) strlen(it8 ->id);\n                    idptr = it8 ->id + k;\n                    do {\n\n                        if (++k < MAXID) *idptr++ = (char) it8->ch;\n\n                        NextCh(it8);\n\n                    } while (isidchar(it8->ch));\n\n                    *idptr = '\\0';\n                    it8->sy = SIDENT;\n                }\n                return;\n\n            }\n            else\n                switch ((int) it8->ch) {\n\n        // EOF marker -- ignore it\n        case '\\x1a':\n            NextCh(it8);\n            break;\n\n        // Eof stream markers\n        case 0:\n        case -1:\n            it8->sy = SEOF;\n            break;\n\n\n        // Next line\n        case '\\r':\n            NextCh(it8);\n            if (it8 ->ch == '\\n') \n                NextCh(it8);\n            it8->sy = SEOLN;\n            it8->lineno++;\n            break;\n\n        case '\\n':\n            NextCh(it8);\n            it8->sy = SEOLN;\n            it8->lineno++;\n            break;\n\n        // Comment\n        case '#':\n            NextCh(it8);\n            while (it8->ch && it8->ch != '\\n' && it8->ch != '\\r')\n                NextCh(it8);\n\n            it8->sy = SCOMMENT;\n            break;\n\n        // String.\n        case '\\'':\n        case '\\\"':\n            idptr = it8->str;\n            sng = it8->ch;\n            k = 0;\n            NextCh(it8);\n\n            while (k < (MAXSTR-1) && it8->ch != sng) {\n\n                if (it8->ch == '\\n'|| it8->ch == '\\r') k = MAXSTR+1;\n                else {\n                    *idptr++ = (char) it8->ch;\n                    NextCh(it8);\n                    k++;\n                }\n            }\n\n            it8->sy = SSTRING;\n            *idptr = '\\0';\n            NextCh(it8);\n            break;\n\n\n        default:\n            SynError(it8, \"Unrecognized character: 0x%x\", it8 ->ch);\n            return;\n            }\n\n    } while (it8->sy == SCOMMENT);\n\n    // Handle the include special token\n\n    if (it8 -> sy == SINCLUDE) {\n\n                FILECTX* FileNest;\n\n                if(it8 -> IncludeSP >= (MAXINCLUDE-1)) {\n\n                    SynError(it8, \"Too many recursion levels\");\n                    return;\n                }\n\n                InSymbol(it8);\n                if (!Check(it8, SSTRING, \"Filename expected\")) return;\n\n                FileNest = it8 -> FileStack[it8 -> IncludeSP + 1];\n                if(FileNest == NULL) {\n\n                    FileNest = it8 ->FileStack[it8 -> IncludeSP + 1] = (FILECTX*)AllocChunk(it8, sizeof(FILECTX));\n                    //if(FileNest == NULL)\n                    //  TODO: how to manage out-of-memory conditions?\n                }\n\n                if (BuildAbsolutePath(it8->str,\n                                      it8->FileStack[it8->IncludeSP]->FileName,\n                                      FileNest->FileName, cmsMAX_PATH-1) == FALSE) {\n                    SynError(it8, \"File path too long\");\n                    return;\n                }\n\n                FileNest->Stream = fopen(FileNest->FileName, \"rt\");\n                if (FileNest->Stream == NULL) {\n\n                        SynError(it8, \"File %s not found\", FileNest->FileName);\n                        return;\n                }\n                it8->IncludeSP++;\n\n                it8 ->ch = ' ';\n                InSymbol(it8);\n    }\n\n}\n\n// Checks end of line separator\nstatic\ncmsBool CheckEOLN(cmsIT8* it8)\n{\n        if (!Check(it8, SEOLN, \"Expected separator\")) return FALSE;\n        while (it8 -> sy == SEOLN)\n                        InSymbol(it8);\n        return TRUE;\n\n}\n\n// Skip a symbol\n\nstatic\nvoid Skip(cmsIT8* it8, SYMBOL sy)\n{\n        if (it8->sy == sy && it8->sy != SEOF)\n                        InSymbol(it8);\n}\n\n\n// Skip multiple EOLN\nstatic\nvoid SkipEOLN(cmsIT8* it8)\n{\n    while (it8->sy == SEOLN) {\n             InSymbol(it8);\n    }\n}\n\n\n// Returns a string holding current value\nstatic\ncmsBool GetVal(cmsIT8* it8, char* Buffer, cmsUInt32Number max, const char* ErrorTitle)\n{\n    switch (it8->sy) {\n\n    case SEOLN:   // Empty value\n                  Buffer[0]=0;\n                  break;\n    case SIDENT:  strncpy(Buffer, it8->id, max);\n                  Buffer[max-1]=0;\n                  break;\n    case SINUM:   snprintf(Buffer, max, \"%d\", it8 -> inum); break;\n    case SDNUM:   snprintf(Buffer, max, it8->DoubleFormatter, it8 -> dnum); break;\n    case SSTRING: strncpy(Buffer, it8->str, max);\n                  Buffer[max-1] = 0;\n                  break;\n\n\n    default:\n         return SynError(it8, \"%s\", ErrorTitle);\n    }\n\n    Buffer[max] = 0;\n    return TRUE;\n}\n\n// ---------------------------------------------------------- Table\n\nstatic\nTABLE* GetTable(cmsIT8* it8)\n{\n   if ((it8 -> nTable >= it8 ->TablesCount)) {\n\n           SynError(it8, \"Table %d out of sequence\", it8 -> nTable);\n           return it8 -> Tab;\n   }\n\n   return it8 ->Tab + it8 ->nTable;\n}\n\n// ---------------------------------------------------------- Memory management\n\n\n// Frees an allocator and owned memory\nvoid CMSEXPORT cmsIT8Free(cmsHANDLE hIT8)\n{\n   cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    if (it8 == NULL)\n        return;\n\n    if (it8->MemorySink) {\n\n        OWNEDMEM* p;\n        OWNEDMEM* n;\n\n        for (p = it8->MemorySink; p != NULL; p = n) {\n\n            n = p->Next;\n            if (p->Ptr) _cmsFree(it8 ->ContextID, p->Ptr);\n            _cmsFree(it8 ->ContextID, p);\n        }\n    }\n\n    if (it8->MemoryBlock)\n        _cmsFree(it8 ->ContextID, it8->MemoryBlock);\n\n    _cmsFree(it8 ->ContextID, it8);\n}\n\n\n// Allocates a chunk of data, keep linked list\nstatic\nvoid* AllocBigBlock(cmsIT8* it8, cmsUInt32Number size)\n{\n    OWNEDMEM* ptr1;\n    void* ptr = _cmsMallocZero(it8->ContextID, size);\n\n    if (ptr != NULL) {\n\n        ptr1 = (OWNEDMEM*) _cmsMallocZero(it8 ->ContextID, sizeof(OWNEDMEM));\n\n        if (ptr1 == NULL) {\n\n            _cmsFree(it8 ->ContextID, ptr);\n            return NULL;\n        }\n\n        ptr1-> Ptr        = ptr;\n        ptr1-> Next       = it8 -> MemorySink;\n        it8 -> MemorySink = ptr1;\n    }\n\n    return ptr;\n}\n\n\n// Suballocator.\nstatic\nvoid* AllocChunk(cmsIT8* it8, cmsUInt32Number size)\n{\n    cmsUInt32Number Free = it8 ->Allocator.BlockSize - it8 ->Allocator.Used;\n    cmsUInt8Number* ptr;\n\n    size = _cmsALIGNMEM(size);\n\n    if (size > Free) {\n\n        if (it8 -> Allocator.BlockSize == 0)\n\n                it8 -> Allocator.BlockSize = 20*1024;\n        else\n                it8 ->Allocator.BlockSize *= 2;\n\n        if (it8 ->Allocator.BlockSize < size)\n                it8 ->Allocator.BlockSize = size;\n\n        it8 ->Allocator.Used = 0;\n        it8 ->Allocator.Block = (cmsUInt8Number*)  AllocBigBlock(it8, it8 ->Allocator.BlockSize);\n    }\n\n    ptr = it8 ->Allocator.Block + it8 ->Allocator.Used;\n    it8 ->Allocator.Used += size;\n\n    return (void*) ptr;\n\n}\n\n\n// Allocates a string\nstatic\nchar *AllocString(cmsIT8* it8, const char* str)\n{\n    cmsUInt32Number Size = (cmsUInt32Number) strlen(str)+1;\n    char *ptr;\n\n\n    ptr = (char *) AllocChunk(it8, Size);\n    if (ptr) strncpy (ptr, str, Size-1);\n\n    return ptr;\n}\n\n// Searches through linked list\n\nstatic\ncmsBool IsAvailableOnList(KEYVALUE* p, const char* Key, const char* Subkey, KEYVALUE** LastPtr)\n{\n    if (LastPtr) *LastPtr = p;\n\n    for (;  p != NULL; p = p->Next) {\n\n        if (LastPtr) *LastPtr = p;\n\n        if (*Key != '#') { // Comments are ignored\n\n            if (cmsstrcasecmp(Key, p->Keyword) == 0)\n                break;\n        }\n    }\n\n    if (p == NULL)\n        return FALSE;\n\n    if (Subkey == 0)\n        return TRUE;\n\n    for (; p != NULL; p = p->NextSubkey) {\n\n        if (p ->Subkey == NULL) continue;\n\n        if (LastPtr) *LastPtr = p;\n\n        if (cmsstrcasecmp(Subkey, p->Subkey) == 0)\n            return TRUE;\n    }\n\n    return FALSE;\n}\n\n\n\n// Add a property into a linked list\nstatic\nKEYVALUE* AddToList(cmsIT8* it8, KEYVALUE** Head, const char *Key, const char *Subkey, const char* xValue, WRITEMODE WriteAs)\n{\n    KEYVALUE* p;\n    KEYVALUE* last;\n\n\n    // Check if property is already in list\n\n    if (IsAvailableOnList(*Head, Key, Subkey, &p)) {\n\n        // This may work for editing properties\n\n        //     return SynError(it8, \"duplicate key <%s>\", Key);\n    }\n    else {\n\n        last = p;\n\n        // Allocate the container\n        p = (KEYVALUE*) AllocChunk(it8, sizeof(KEYVALUE));\n        if (p == NULL)\n        {\n            SynError(it8, \"AddToList: out of memory\");\n            return NULL;\n        }\n\n        // Store name and value\n        p->Keyword = AllocString(it8, Key);\n        p->Subkey = (Subkey == NULL) ? NULL : AllocString(it8, Subkey);\n\n        // Keep the container in our list\n        if (*Head == NULL) {\n            *Head = p;\n        }\n        else\n        {\n            if (Subkey != NULL && last != NULL) {\n\n                last->NextSubkey = p;\n\n                // If Subkey is not null, then last is the last property with the same key,\n                // but not necessarily is the last property in the list, so we need to move\n                // to the actual list end\n                while (last->Next != NULL)\n                         last = last->Next;\n            }\n\n            if (last != NULL) last->Next = p;\n        }\n\n        p->Next    = NULL;\n        p->NextSubkey = NULL;\n    }\n\n    p->WriteAs = WriteAs;\n\n    if (xValue != NULL) {\n\n        p->Value   = AllocString(it8, xValue);\n    }\n    else {\n        p->Value   = NULL;\n    }\n\n    return p;\n}\n\nstatic\nKEYVALUE* AddAvailableProperty(cmsIT8* it8, const char* Key, WRITEMODE as)\n{\n    return AddToList(it8, &it8->ValidKeywords, Key, NULL, NULL, as);\n}\n\n\nstatic\nKEYVALUE* AddAvailableSampleID(cmsIT8* it8, const char* Key)\n{\n    return AddToList(it8, &it8->ValidSampleID, Key, NULL, NULL, WRITE_UNCOOKED);\n}\n\n\nstatic\nvoid AllocTable(cmsIT8* it8)\n{\n    TABLE* t;\n\n    t = it8 ->Tab + it8 ->TablesCount;\n\n    t->HeaderList = NULL;\n    t->DataFormat = NULL;\n    t->Data       = NULL;\n\n    it8 ->TablesCount++;\n}\n\n\ncmsInt32Number CMSEXPORT cmsIT8SetTable(cmsHANDLE  IT8, cmsUInt32Number nTable)\n{\n     cmsIT8* it8 = (cmsIT8*) IT8;\n\n     if (nTable >= it8 ->TablesCount) {\n\n         if (nTable == it8 ->TablesCount) {\n\n             AllocTable(it8);\n         }\n         else {\n             SynError(it8, \"Table %d is out of sequence\", nTable);\n             return -1;\n         }\n     }\n\n     it8 ->nTable = nTable;\n\n     return (cmsInt32Number) nTable;\n}\n\n\n\n// Init an empty container\ncmsHANDLE  CMSEXPORT cmsIT8Alloc(cmsContext ContextID)\n{\n    cmsIT8* it8;\n    cmsUInt32Number i;\n\n    it8 = (cmsIT8*) _cmsMallocZero(ContextID, sizeof(cmsIT8));\n    if (it8 == NULL) return NULL;\n\n    AllocTable(it8);\n\n    it8->MemoryBlock = NULL;\n    it8->MemorySink  = NULL;\n\n    it8 ->nTable = 0;\n\n    it8->ContextID = ContextID;\n    it8->Allocator.Used = 0;\n    it8->Allocator.Block = NULL;\n    it8->Allocator.BlockSize = 0;\n\n    it8->ValidKeywords = NULL;\n    it8->ValidSampleID = NULL;\n\n    it8 -> sy = SUNDEFINED;\n    it8 -> ch = ' ';\n    it8 -> Source = NULL;\n    it8 -> inum = 0;\n    it8 -> dnum = 0.0;\n\n    it8->FileStack[0] = (FILECTX*)AllocChunk(it8, sizeof(FILECTX));\n    it8->IncludeSP   = 0;\n    it8 -> lineno = 1;\n\n    strcpy(it8->DoubleFormatter, DEFAULT_DBL_FORMAT);\n    cmsIT8SetSheetType((cmsHANDLE) it8, \"CGATS.17\");\n\n    // Initialize predefined properties & data\n\n    for (i=0; i < NUMPREDEFINEDPROPS; i++)\n            AddAvailableProperty(it8, PredefinedProperties[i].id, PredefinedProperties[i].as);\n\n    for (i=0; i < NUMPREDEFINEDSAMPLEID; i++)\n            AddAvailableSampleID(it8, PredefinedSampleID[i]);\n\n\n   return (cmsHANDLE) it8;\n}\n\n\nconst char* CMSEXPORT cmsIT8GetSheetType(cmsHANDLE hIT8)\n{\n        return GetTable((cmsIT8*) hIT8)->SheetType;\n}\n\ncmsBool CMSEXPORT cmsIT8SetSheetType(cmsHANDLE hIT8, const char* Type)\n{\n        TABLE* t = GetTable((cmsIT8*) hIT8);\n\n        strncpy(t ->SheetType, Type, MAXSTR-1);\n        t ->SheetType[MAXSTR-1] = 0;\n        return TRUE;\n}\n\ncmsBool CMSEXPORT cmsIT8SetComment(cmsHANDLE hIT8, const char* Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    if (!Val) return FALSE;\n    if (!*Val) return FALSE;\n\n    return AddToList(it8, &GetTable(it8)->HeaderList, \"# \", NULL, Val, WRITE_UNCOOKED) != NULL;\n}\n\n// Sets a property\ncmsBool CMSEXPORT cmsIT8SetPropertyStr(cmsHANDLE hIT8, const char* Key, const char *Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    if (!Val) return FALSE;\n    if (!*Val) return FALSE;\n\n    return AddToList(it8, &GetTable(it8)->HeaderList, Key, NULL, Val, WRITE_STRINGIFY) != NULL;\n}\n\ncmsBool CMSEXPORT cmsIT8SetPropertyDbl(cmsHANDLE hIT8, const char* cProp, cmsFloat64Number Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    char Buffer[1024];\n\n    snprintf(Buffer, 1023, it8->DoubleFormatter, Val);\n\n    return AddToList(it8, &GetTable(it8)->HeaderList, cProp, NULL, Buffer, WRITE_UNCOOKED) != NULL;\n}\n\ncmsBool CMSEXPORT cmsIT8SetPropertyHex(cmsHANDLE hIT8, const char* cProp, cmsUInt32Number Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    char Buffer[1024];\n\n    snprintf(Buffer, 1023, \"%u\", Val);\n\n    return AddToList(it8, &GetTable(it8)->HeaderList, cProp, NULL, Buffer, WRITE_HEXADECIMAL) != NULL;\n}\n\ncmsBool CMSEXPORT cmsIT8SetPropertyUncooked(cmsHANDLE hIT8, const char* Key, const char* Buffer)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    return AddToList(it8, &GetTable(it8)->HeaderList, Key, NULL, Buffer, WRITE_UNCOOKED) != NULL;\n}\n\ncmsBool CMSEXPORT cmsIT8SetPropertyMulti(cmsHANDLE hIT8, const char* Key, const char* SubKey, const char *Buffer)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    return AddToList(it8, &GetTable(it8)->HeaderList, Key, SubKey, Buffer, WRITE_PAIR) != NULL;\n}\n\n// Gets a property\nconst char* CMSEXPORT cmsIT8GetProperty(cmsHANDLE hIT8, const char* Key)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    KEYVALUE* p;\n\n    if (IsAvailableOnList(GetTable(it8) -> HeaderList, Key, NULL, &p))\n    {\n        return p -> Value;\n    }\n    return NULL;\n}\n\n\ncmsFloat64Number CMSEXPORT cmsIT8GetPropertyDbl(cmsHANDLE hIT8, const char* cProp)\n{\n    const char *v = cmsIT8GetProperty(hIT8, cProp);\n\n    if (v == NULL) return 0.0;\n\n    return ParseFloatNumber(v);\n}\n\nconst char* CMSEXPORT cmsIT8GetPropertyMulti(cmsHANDLE hIT8, const char* Key, const char *SubKey)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    KEYVALUE* p;\n\n    if (IsAvailableOnList(GetTable(it8) -> HeaderList, Key, SubKey, &p)) {\n        return p -> Value;\n    }\n    return NULL;\n}\n\n// ----------------------------------------------------------------- Datasets\n\n\nstatic\nvoid AllocateDataFormat(cmsIT8* it8)\n{\n    TABLE* t = GetTable(it8);\n\n    if (t -> DataFormat) return;    // Already allocated\n\n    t -> nSamples  = (int) cmsIT8GetPropertyDbl(it8, \"NUMBER_OF_FIELDS\");\n\n    if (t -> nSamples <= 0) {\n\n        SynError(it8, \"AllocateDataFormat: Unknown NUMBER_OF_FIELDS\");\n        t -> nSamples = 10;\n        }\n\n    t -> DataFormat = (char**) AllocChunk (it8, ((cmsUInt32Number) t->nSamples + 1) * sizeof(char *));\n    if (t->DataFormat == NULL) {\n\n        SynError(it8, \"AllocateDataFormat: Unable to allocate dataFormat array\");\n    }\n\n}\n\nstatic\nconst char *GetDataFormat(cmsIT8* it8, int n)\n{\n    TABLE* t = GetTable(it8);\n\n    if (t->DataFormat)\n        return t->DataFormat[n];\n\n    return NULL;\n}\n\nstatic\ncmsBool SetDataFormat(cmsIT8* it8, int n, const char *label)\n{\n    TABLE* t = GetTable(it8);\n\n    if (!t->DataFormat)\n        AllocateDataFormat(it8);\n\n    if (n > t -> nSamples) {\n        SynError(it8, \"More than NUMBER_OF_FIELDS fields.\");\n        return FALSE;\n    }\n\n    if (t->DataFormat) {\n        t->DataFormat[n] = AllocString(it8, label);\n    }\n\n    return TRUE;\n}\n\n\ncmsBool CMSEXPORT cmsIT8SetDataFormat(cmsHANDLE  h, int n, const char *Sample)\n{\n    cmsIT8* it8 = (cmsIT8*)h;\n    return SetDataFormat(it8, n, Sample);\n}\n\nstatic\nvoid AllocateDataSet(cmsIT8* it8)\n{\n    TABLE* t = GetTable(it8);\n\n    if (t -> Data) return;    // Already allocated\n\n    t-> nSamples   = atoi(cmsIT8GetProperty(it8, \"NUMBER_OF_FIELDS\"));\n    t-> nPatches   = atoi(cmsIT8GetProperty(it8, \"NUMBER_OF_SETS\"));\n\n    if (t -> nSamples < 0 || t->nSamples > 0x7ffe || t->nPatches < 0 || t->nPatches > 0x7ffe)\n    {\n        SynError(it8, \"AllocateDataSet: too much data\");\n    }\n    else {\n        t->Data = (char**)AllocChunk(it8, ((cmsUInt32Number)t->nSamples + 1) * ((cmsUInt32Number)t->nPatches + 1) * sizeof(char*));\n        if (t->Data == NULL) {\n\n            SynError(it8, \"AllocateDataSet: Unable to allocate data array\");\n        }\n    }\n\n}\n\nstatic\nchar* GetData(cmsIT8* it8, int nSet, int nField)\n{\n    TABLE* t = GetTable(it8);\n    int nSamples    = t -> nSamples;\n    int nPatches    = t -> nPatches;\n\n    if (nSet >= nPatches || nField >= nSamples)\n        return NULL;\n\n    if (!t->Data) return NULL;\n    return t->Data [nSet * nSamples + nField];\n}\n\nstatic\ncmsBool SetData(cmsIT8* it8, int nSet, int nField, const char *Val)\n{\n    TABLE* t = GetTable(it8);\n\n    if (!t->Data)\n        AllocateDataSet(it8);\n\n    if (!t->Data) return FALSE;\n\n    if (nSet > t -> nPatches || nSet < 0) {\n\n            return SynError(it8, \"Patch %d out of range, there are %d patches\", nSet, t -> nPatches);\n    }\n\n    if (nField > t ->nSamples || nField < 0) {\n            return SynError(it8, \"Sample %d out of range, there are %d samples\", nField, t ->nSamples);\n\n    }\n\n    t->Data [nSet * t -> nSamples + nField] = AllocString(it8, Val);\n    return TRUE;\n}\n\n\n// --------------------------------------------------------------- File I/O\n\n\n// Writes a string to file\nstatic\nvoid WriteStr(SAVESTREAM* f, const char *str)\n{\n    cmsUInt32Number len;\n\n    if (str == NULL)\n        str = \" \";\n\n    // Length to write\n    len = (cmsUInt32Number) strlen(str);\n    f ->Used += len;\n\n\n    if (f ->stream) {   // Should I write it to a file?\n\n        if (fwrite(str, 1, len, f->stream) != len) {\n            cmsSignalError(0, cmsERROR_WRITE, \"Write to file error in CGATS parser\");\n            return;\n        }\n\n    }\n    else {  // Or to a memory block?\n\n        if (f ->Base) {   // Am I just counting the bytes?\n\n            if (f ->Used > f ->Max) {\n\n                 cmsSignalError(0, cmsERROR_WRITE, \"Write to memory overflows in CGATS parser\");\n                 return;\n            }\n\n            memmove(f ->Ptr, str, len);\n            f->Ptr += len;\n        }\n\n    }\n}\n\n\n// Write formatted\n\nstatic\nvoid Writef(SAVESTREAM* f, const char* frm, ...)\n{\n    char Buffer[4096];\n    va_list args;\n\n    va_start(args, frm);\n    vsnprintf(Buffer, 4095, frm, args);\n    Buffer[4095] = 0;\n    WriteStr(f, Buffer);\n    va_end(args);\n\n}\n\n// Writes full header\nstatic\nvoid WriteHeader(cmsIT8* it8, SAVESTREAM* fp)\n{\n    KEYVALUE* p;\n    TABLE* t = GetTable(it8);\n\n    // Writes the type\n    WriteStr(fp, t->SheetType);\n    WriteStr(fp, \"\\n\");\n\n    for (p = t->HeaderList; (p != NULL); p = p->Next)\n    {\n        if (*p ->Keyword == '#') {\n\n            char* Pt;\n\n            WriteStr(fp, \"#\\n# \");\n            for (Pt = p ->Value; *Pt; Pt++) {\n\n\n                Writef(fp, \"%c\", *Pt);\n\n                if (*Pt == '\\n') {\n                    WriteStr(fp, \"# \");\n                }\n            }\n\n            WriteStr(fp, \"\\n#\\n\");\n            continue;\n        }\n\n\n        if (!IsAvailableOnList(it8-> ValidKeywords, p->Keyword, NULL, NULL)) {\n\n#ifdef CMS_STRICT_CGATS\n            WriteStr(fp, \"KEYWORD\\t\\\"\");\n            WriteStr(fp, p->Keyword);\n            WriteStr(fp, \"\\\"\\n\");\n#endif\n\n            AddAvailableProperty(it8, p->Keyword, WRITE_UNCOOKED);\n        }\n\n        WriteStr(fp, p->Keyword);\n        if (p->Value) {\n\n            switch (p ->WriteAs) {\n\n            case WRITE_UNCOOKED:\n                    Writef(fp, \"\\t%s\", p ->Value);\n                    break;\n\n            case WRITE_STRINGIFY:\n                    Writef(fp, \"\\t\\\"%s\\\"\", p->Value );\n                    break;\n\n            case WRITE_HEXADECIMAL:\n                    Writef(fp, \"\\t0x%X\", atoi(p ->Value));\n                    break;\n\n            case WRITE_BINARY:\n                    Writef(fp, \"\\t0x%B\", atoi(p ->Value));\n                    break;\n\n            case WRITE_PAIR:\n                    Writef(fp, \"\\t\\\"%s,%s\\\"\", p->Subkey, p->Value);\n                    break;\n\n            default: SynError(it8, \"Unknown write mode %d\", p ->WriteAs);\n                     return;\n            }\n        }\n\n        WriteStr (fp, \"\\n\");\n    }\n\n}\n\n\n// Writes the data format\nstatic\nvoid WriteDataFormat(SAVESTREAM* fp, cmsIT8* it8)\n{\n    int i, nSamples;\n    TABLE* t = GetTable(it8);\n\n    if (!t -> DataFormat) return;\n\n       WriteStr(fp, \"BEGIN_DATA_FORMAT\\n\");\n       WriteStr(fp, \" \");\n       nSamples = atoi(cmsIT8GetProperty(it8, \"NUMBER_OF_FIELDS\"));\n\n       for (i = 0; i < nSamples; i++) {\n\n              WriteStr(fp, t->DataFormat[i]);\n              WriteStr(fp, ((i == (nSamples-1)) ? \"\\n\" : \"\\t\"));\n          }\n\n       WriteStr (fp, \"END_DATA_FORMAT\\n\");\n}\n\n\n// Writes data array\nstatic\nvoid WriteData(SAVESTREAM* fp, cmsIT8* it8)\n{\n       int  i, j;\n       TABLE* t = GetTable(it8);\n\n       if (!t->Data) return;\n\n       WriteStr (fp, \"BEGIN_DATA\\n\");\n\n       t->nPatches = atoi(cmsIT8GetProperty(it8, \"NUMBER_OF_SETS\"));\n\n       for (i = 0; i < t-> nPatches; i++) {\n\n              WriteStr(fp, \" \");\n\n              for (j = 0; j < t->nSamples; j++) {\n\n                     char *ptr = t->Data[i*t->nSamples+j];\n\n                     if (ptr == NULL) WriteStr(fp, \"\\\"\\\"\");\n                     else {\n                         // If value contains whitespace, enclose within quote\n\n                         if (strchr(ptr, ' ') != NULL) {\n\n                             WriteStr(fp, \"\\\"\");\n                             WriteStr(fp, ptr);\n                             WriteStr(fp, \"\\\"\");\n                         }\n                         else\n                            WriteStr(fp, ptr);\n                     }\n\n                     WriteStr(fp, ((j == (t->nSamples-1)) ? \"\\n\" : \"\\t\"));\n              }\n       }\n       WriteStr (fp, \"END_DATA\\n\");\n}\n\n\n\n// Saves whole file\ncmsBool CMSEXPORT cmsIT8SaveToFile(cmsHANDLE hIT8, const char* cFileName)\n{\n    SAVESTREAM sd;\n    cmsUInt32Number i;\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    memset(&sd, 0, sizeof(sd));\n\n    sd.stream = fopen(cFileName, \"wt\");\n    if (!sd.stream) return FALSE;\n\n    for (i=0; i < it8 ->TablesCount; i++) {\n\n            cmsIT8SetTable(hIT8, i);\n            WriteHeader(it8, &sd);\n            WriteDataFormat(&sd, it8);\n            WriteData(&sd, it8);\n    }\n\n    if (fclose(sd.stream) != 0) return FALSE;\n\n    return TRUE;\n}\n\n\n// Saves to memory\ncmsBool CMSEXPORT cmsIT8SaveToMem(cmsHANDLE hIT8, void *MemPtr, cmsUInt32Number* BytesNeeded)\n{\n    SAVESTREAM sd;\n    cmsUInt32Number i;\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    memset(&sd, 0, sizeof(sd));\n\n    sd.stream = NULL;\n    sd.Base   = (cmsUInt8Number*)  MemPtr;\n    sd.Ptr    = sd.Base;\n\n    sd.Used = 0;\n\n    if (sd.Base)\n        sd.Max  = *BytesNeeded;     // Write to memory?\n    else\n        sd.Max  = 0;                // Just counting the needed bytes\n\n    for (i=0; i < it8 ->TablesCount; i++) {\n\n        cmsIT8SetTable(hIT8, i);\n        WriteHeader(it8, &sd);\n        WriteDataFormat(&sd, it8);\n        WriteData(&sd, it8);\n    }\n\n    sd.Used++;  // The \\0 at the very end\n\n    if (sd.Base)\n        *sd.Ptr = 0;\n\n    *BytesNeeded = sd.Used;\n\n    return TRUE;\n}\n\n\n// -------------------------------------------------------------- Higher level parsing\n\nstatic\ncmsBool DataFormatSection(cmsIT8* it8)\n{\n    int iField = 0;\n    TABLE* t = GetTable(it8);\n\n    InSymbol(it8);   // Eats \"BEGIN_DATA_FORMAT\"\n    CheckEOLN(it8);\n\n    while (it8->sy != SEND_DATA_FORMAT &&\n        it8->sy != SEOLN &&\n        it8->sy != SEOF &&\n        it8->sy != SSYNERROR)  {\n\n            if (it8->sy != SIDENT) {\n\n                return SynError(it8, \"Sample type expected\");\n            }\n\n            if (!SetDataFormat(it8, iField, it8->id)) return FALSE;\n            iField++;\n\n            InSymbol(it8);\n            SkipEOLN(it8);\n       }\n\n       SkipEOLN(it8);\n       Skip(it8, SEND_DATA_FORMAT);\n       SkipEOLN(it8);\n\n       if (iField != t ->nSamples) {\n           SynError(it8, \"Count mismatch. NUMBER_OF_FIELDS was %d, found %d\\n\", t ->nSamples, iField);\n\n\n       }\n\n       return TRUE;\n}\n\n\n\nstatic\ncmsBool DataSection (cmsIT8* it8)\n{\n    int  iField = 0;\n    int  iSet   = 0;\n    char Buffer[256];\n    TABLE* t = GetTable(it8);\n\n    InSymbol(it8);   // Eats \"BEGIN_DATA\"\n    CheckEOLN(it8);\n\n    if (!t->Data)\n        AllocateDataSet(it8);\n\n    while (it8->sy != SEND_DATA && it8->sy != SEOF)\n    {\n        if (iField >= t -> nSamples) {\n            iField = 0;\n            iSet++;\n\n        }\n\n        if (it8->sy != SEND_DATA && it8->sy != SEOF) {\n\n            if (!GetVal(it8, Buffer, 255, \"Sample data expected\"))\n                return FALSE;\n\n            if (!SetData(it8, iSet, iField, Buffer))\n                return FALSE;\n\n            iField++;\n\n            InSymbol(it8);\n            SkipEOLN(it8);\n        }\n    }\n\n    SkipEOLN(it8);\n    Skip(it8, SEND_DATA);\n    SkipEOLN(it8);\n\n    // Check for data completion.\n\n    if ((iSet+1) != t -> nPatches)\n        return SynError(it8, \"Count mismatch. NUMBER_OF_SETS was %d, found %d\\n\", t ->nPatches, iSet+1);\n\n    return TRUE;\n}\n\n\n\n\nstatic\ncmsBool HeaderSection(cmsIT8* it8)\n{\n    char VarName[MAXID];\n    char Buffer[MAXSTR];\n    KEYVALUE* Key;\n\n        while (it8->sy != SEOF &&\n               it8->sy != SSYNERROR &&\n               it8->sy != SBEGIN_DATA_FORMAT &&\n               it8->sy != SBEGIN_DATA) {\n\n\n        switch (it8 -> sy) {\n\n        case SKEYWORD:\n                InSymbol(it8);\n                if (!GetVal(it8, Buffer, MAXSTR-1, \"Keyword expected\")) return FALSE;\n                if (!AddAvailableProperty(it8, Buffer, WRITE_UNCOOKED)) return FALSE;\n                InSymbol(it8);\n                break;\n\n\n        case SDATA_FORMAT_ID:\n                InSymbol(it8);\n                if (!GetVal(it8, Buffer, MAXSTR-1, \"Keyword expected\")) return FALSE;\n                if (!AddAvailableSampleID(it8, Buffer)) return FALSE;\n                InSymbol(it8);\n                break;\n\n\n        case SIDENT:\n            strncpy(VarName, it8->id, MAXID - 1);\n            VarName[MAXID - 1] = 0;\n\n            if (!IsAvailableOnList(it8->ValidKeywords, VarName, NULL, &Key)) {\n\n#ifdef CMS_STRICT_CGATS\n                return SynError(it8, \"Undefined keyword '%s'\", VarName);\n#else\n                Key = AddAvailableProperty(it8, VarName, WRITE_UNCOOKED);\n                if (Key == NULL) return FALSE;\n#endif\n            }\n\n            InSymbol(it8);\n            if (!GetVal(it8, Buffer, MAXSTR - 1, \"Property data expected\")) return FALSE;\n\n            if (Key->WriteAs != WRITE_PAIR) {\n                AddToList(it8, &GetTable(it8)->HeaderList, VarName, NULL, Buffer,\n                    (it8->sy == SSTRING) ? WRITE_STRINGIFY : WRITE_UNCOOKED);\n            }\n            else {\n                const char *Subkey;\n                char *Nextkey;\n                if (it8->sy != SSTRING)\n                    return SynError(it8, \"Invalid value '%s' for property '%s'.\", Buffer, VarName);\n\n                // chop the string as a list of \"subkey, value\" pairs, using ';' as a separator\n                for (Subkey = Buffer; Subkey != NULL; Subkey = Nextkey)\n                {\n                    char *Value, *temp;\n\n                    //  identify token pair boundary\n                    Nextkey = (char*)strchr(Subkey, ';');\n                    if (Nextkey)\n                        *Nextkey++ = '\\0';\n\n                    // for each pair, split the subkey and the value\n                    Value = (char*)strrchr(Subkey, ',');\n                    if (Value == NULL)\n                        return SynError(it8, \"Invalid value for property '%s'.\", VarName);\n\n                    // gobble the spaces before the coma, and the coma itself\n                    temp = Value++;\n                    do *temp-- = '\\0'; while (temp >= Subkey && *temp == ' ');\n\n                    // gobble any space at the right\n                    temp = Value + strlen(Value) - 1;\n                    while (*temp == ' ') *temp-- = '\\0';\n\n                    // trim the strings from the left\n                    Subkey += strspn(Subkey, \" \");\n                    Value += strspn(Value, \" \");\n\n                    if (Subkey[0] == 0 || Value[0] == 0)\n                        return SynError(it8, \"Invalid value for property '%s'.\", VarName);\n                    AddToList(it8, &GetTable(it8)->HeaderList, VarName, Subkey, Value, WRITE_PAIR);\n                }\n            }\n\n            InSymbol(it8);\n            break;\n\n\n        case SEOLN: break;\n\n        default:\n                return SynError(it8, \"expected keyword or identifier\");\n        }\n\n    SkipEOLN(it8);\n    }\n\n    return TRUE;\n\n}\n\n\nstatic\nvoid ReadType(cmsIT8* it8, char* SheetTypePtr)\n{\n    cmsInt32Number cnt = 0;\n\n    // First line is a very special case.\n\n    while (isseparator(it8->ch))\n            NextCh(it8);\n\n    while (it8->ch != '\\r' && it8 ->ch != '\\n' && it8->ch != '\\t' && it8 -> ch != 0) {\n\n        if (cnt++ < MAXSTR) \n            *SheetTypePtr++= (char) it8 ->ch;\n        NextCh(it8);\n    }\n\n    *SheetTypePtr = 0;\n}\n\n\nstatic\ncmsBool ParseIT8(cmsIT8* it8, cmsBool nosheet)\n{\n    char* SheetTypePtr = it8 ->Tab[0].SheetType;\n\n    if (nosheet == 0) {\n        ReadType(it8, SheetTypePtr);\n    }\n\n    InSymbol(it8);\n\n    SkipEOLN(it8);\n\n    while (it8-> sy != SEOF &&\n           it8-> sy != SSYNERROR) {\n\n            switch (it8 -> sy) {\n\n            case SBEGIN_DATA_FORMAT:\n                    if (!DataFormatSection(it8)) return FALSE;\n                    break;\n\n            case SBEGIN_DATA:\n\n                    if (!DataSection(it8)) return FALSE;\n\n                    if (it8 -> sy != SEOF) {\n\n                            AllocTable(it8);\n                            it8 ->nTable = it8 ->TablesCount - 1;\n\n                            // Read sheet type if present. We only support identifier and string.\n                            // <ident> <eoln> is a type string\n                            // anything else, is not a type string\n                            if (nosheet == 0) {\n\n                                if (it8 ->sy == SIDENT) {\n\n                                    // May be a type sheet or may be a prop value statement. We cannot use insymbol in\n                                    // this special case...\n                                     while (isseparator(it8->ch))\n                                         NextCh(it8);\n\n                                     // If a newline is found, then this is a type string\n                                    if (it8 ->ch == '\\n' || it8->ch == '\\r') {\n\n                                         cmsIT8SetSheetType(it8, it8 ->id);\n                                         InSymbol(it8);\n                                    }\n                                    else\n                                    {\n                                        // It is not. Just continue\n                                        cmsIT8SetSheetType(it8, \"\");\n                                    }\n                                }\n                                else\n                                    // Validate quoted strings\n                                    if (it8 ->sy == SSTRING) {\n                                        cmsIT8SetSheetType(it8, it8 ->str);\n                                        InSymbol(it8);\n                                    }\n                           }\n\n                    }\n                    break;\n\n            case SEOLN:\n                    SkipEOLN(it8);\n                    break;\n\n            default:\n                    if (!HeaderSection(it8)) return FALSE;\n           }\n\n    }\n\n    return (it8 -> sy != SSYNERROR);\n}\n\n\n\n// Init useful pointers\n\nstatic\nvoid CookPointers(cmsIT8* it8)\n{\n    int idField, i;\n    char* Fld;\n    cmsUInt32Number j;\n    cmsUInt32Number nOldTable = it8 ->nTable;\n\n    for (j=0; j < it8 ->TablesCount; j++) {\n\n    TABLE* t = it8 ->Tab + j;\n\n    t -> SampleID = 0;\n    it8 ->nTable = j;\n\n    for (idField = 0; idField < t -> nSamples; idField++)\n    {\n        if (t ->DataFormat == NULL){\n            SynError(it8, \"Undefined DATA_FORMAT\");\n            return;\n        }\n\n        Fld = t->DataFormat[idField];\n        if (!Fld) continue;\n\n\n        if (cmsstrcasecmp(Fld, \"SAMPLE_ID\") == 0) {\n\n            t -> SampleID = idField;\n\n            for (i=0; i < t -> nPatches; i++) {\n\n                char *Data = GetData(it8, i, idField);\n                if (Data) {\n                    char Buffer[256];\n\n                    strncpy(Buffer, Data, 255);\n                    Buffer[255] = 0;\n\n                    if (strlen(Buffer) <= strlen(Data))\n                        strcpy(Data, Buffer);\n                    else\n                        SetData(it8, i, idField, Buffer);\n\n                }\n            }\n\n        }\n\n        // \"LABEL\" is an extension. It keeps references to forward tables\n\n        if ((cmsstrcasecmp(Fld, \"LABEL\") == 0) || Fld[0] == '$' ) {\n\n                    // Search for table references...\n                    for (i=0; i < t -> nPatches; i++) {\n\n                            char *Label = GetData(it8, i, idField);\n\n                            if (Label) {\n\n                                cmsUInt32Number k;\n\n                                // This is the label, search for a table containing\n                                // this property\n\n                                for (k=0; k < it8 ->TablesCount; k++) {\n\n                                    TABLE* Table = it8 ->Tab + k;\n                                    KEYVALUE* p;\n\n                                    if (IsAvailableOnList(Table->HeaderList, Label, NULL, &p)) {\n\n                                        // Available, keep type and table\n                                        char Buffer[256];\n\n                                        char *Type  = p ->Value;\n                                        int  nTable = (int) k;\n\n                                        snprintf(Buffer, 255, \"%s %d %s\", Label, nTable, Type );\n\n                                        SetData(it8, i, idField, Buffer);\n                                    }\n                                }\n\n\n                            }\n\n                    }\n\n\n        }\n\n    }\n    }\n\n    it8 ->nTable = nOldTable;\n}\n\n// Try to infere if the file is a CGATS/IT8 file at all. Read first line\n// that should be something like some printable characters plus a \\n\n// returns 0 if this is not like a CGATS, or an integer otherwise. This integer is the number of words in first line?\nstatic\nint IsMyBlock(const cmsUInt8Number* Buffer, cmsUInt32Number n)\n{\n    int words = 1, space = 0, quot = 0;\n    cmsUInt32Number i;\n\n    if (n < 10) return 0;   // Too small\n\n    if (n > 132)\n        n = 132;\n\n    for (i = 1; i < n; i++) {\n\n        switch(Buffer[i])\n        {\n        case '\\n':\n        case '\\r':\n            return ((quot == 1) || (words > 2)) ? 0 : words;\n        case '\\t':\n        case ' ':\n            if(!quot && !space)\n                space = 1;\n            break;\n        case '\\\"':\n            quot = !quot;\n            break;\n        default:\n            if (Buffer[i] < 32) return 0;\n            if (Buffer[i] > 127) return 0;\n            words += space;\n            space = 0;\n            break;\n        }\n    }\n\n    return 0;\n}\n\n\nstatic\ncmsBool IsMyFile(const char* FileName)\n{\n   FILE *fp;\n   cmsUInt32Number Size;\n   cmsUInt8Number Ptr[133];\n\n   fp = fopen(FileName, \"rt\");\n   if (!fp) {\n       cmsSignalError(0, cmsERROR_FILE, \"File '%s' not found\", FileName);\n       return FALSE;\n   }\n\n   Size = (cmsUInt32Number) fread(Ptr, 1, 132, fp);\n\n   if (fclose(fp) != 0)\n       return FALSE;\n\n   Ptr[Size] = '\\0';\n\n   return IsMyBlock(Ptr, Size);\n}\n\n// ---------------------------------------------------------- Exported routines\n\n\ncmsHANDLE  CMSEXPORT cmsIT8LoadFromMem(cmsContext ContextID, const void *Ptr, cmsUInt32Number len)\n{\n    cmsHANDLE hIT8;\n    cmsIT8*  it8;\n    int type;\n\n    _cmsAssert(Ptr != NULL);\n    _cmsAssert(len != 0);\n\n    type = IsMyBlock((const cmsUInt8Number*)Ptr, len);\n    if (type == 0) return NULL;\n\n    hIT8 = cmsIT8Alloc(ContextID);\n    if (!hIT8) return NULL;\n\n    it8 = (cmsIT8*) hIT8;\n    it8 ->MemoryBlock = (char*) _cmsMalloc(ContextID, len + 1);\n    if (it8->MemoryBlock == NULL)\n    {\n        cmsIT8Free(hIT8);\n        return FALSE;\n    }\n\n    strncpy(it8 ->MemoryBlock, (const char*) Ptr, len);\n    it8 ->MemoryBlock[len] = 0;\n\n    strncpy(it8->FileStack[0]->FileName, \"\", cmsMAX_PATH-1);\n    it8-> Source = it8 -> MemoryBlock;\n\n    if (!ParseIT8(it8, type-1)) {\n\n        cmsIT8Free(hIT8);\n        return FALSE;\n    }\n\n    CookPointers(it8);\n    it8 ->nTable = 0;\n\n    _cmsFree(ContextID, it8->MemoryBlock);\n    it8 -> MemoryBlock = NULL;\n\n    return hIT8;\n\n\n}\n\n\ncmsHANDLE  CMSEXPORT cmsIT8LoadFromFile(cmsContext ContextID, const char* cFileName)\n{\n\n     cmsHANDLE hIT8;\n     cmsIT8*  it8;\n     int type;\n\n     _cmsAssert(cFileName != NULL);\n\n     type = IsMyFile(cFileName);\n     if (type == 0) return NULL;\n\n     hIT8 = cmsIT8Alloc(ContextID);\n     it8 = (cmsIT8*) hIT8;\n     if (!hIT8) return NULL;\n\n\n     it8 ->FileStack[0]->Stream = fopen(cFileName, \"rt\");\n\n     if (!it8 ->FileStack[0]->Stream) {\n         cmsIT8Free(hIT8);\n         return NULL;\n     }\n\n\n    strncpy(it8->FileStack[0]->FileName, cFileName, cmsMAX_PATH-1);\n    it8->FileStack[0]->FileName[cmsMAX_PATH-1] = 0;\n\n    if (!ParseIT8(it8, type-1)) {\n\n            fclose(it8 ->FileStack[0]->Stream);\n            cmsIT8Free(hIT8);\n            return NULL;\n    }\n\n    CookPointers(it8);\n    it8 ->nTable = 0;\n\n    if (fclose(it8 ->FileStack[0]->Stream)!= 0) {\n            cmsIT8Free(hIT8);\n            return NULL;\n    }\n\n    return hIT8;\n\n}\n\nint CMSEXPORT cmsIT8EnumDataFormat(cmsHANDLE hIT8, char ***SampleNames)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    TABLE* t;\n\n    _cmsAssert(hIT8 != NULL);\n\n    t = GetTable(it8);\n\n    if (SampleNames)\n        *SampleNames = t -> DataFormat;\n    return t -> nSamples;\n}\n\n\ncmsUInt32Number CMSEXPORT cmsIT8EnumProperties(cmsHANDLE hIT8, char ***PropertyNames)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    KEYVALUE* p;\n    cmsUInt32Number n;\n    char **Props;\n    TABLE* t;\n\n    _cmsAssert(hIT8 != NULL);\n\n    t = GetTable(it8);\n\n    // Pass#1 - count properties\n\n    n = 0;\n    for (p = t -> HeaderList;  p != NULL; p = p->Next) {\n        n++;\n    }\n\n\n    Props = (char **) AllocChunk(it8, sizeof(char *) * n);\n\n    // Pass#2 - Fill pointers\n    n = 0;\n    for (p = t -> HeaderList;  p != NULL; p = p->Next) {\n        Props[n++] = p -> Keyword;\n    }\n\n    *PropertyNames = Props;\n    return n;\n}\n\ncmsUInt32Number CMSEXPORT cmsIT8EnumPropertyMulti(cmsHANDLE hIT8, const char* cProp, const char ***SubpropertyNames)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    KEYVALUE *p, *tmp;\n    cmsUInt32Number n;\n    const char **Props;\n    TABLE* t;\n\n    _cmsAssert(hIT8 != NULL);\n\n\n    t = GetTable(it8);\n\n    if(!IsAvailableOnList(t->HeaderList, cProp, NULL, &p)) {\n        *SubpropertyNames = 0;\n        return 0;\n    }\n\n    // Pass#1 - count properties\n\n    n = 0;\n    for (tmp = p;  tmp != NULL; tmp = tmp->NextSubkey) {\n        if(tmp->Subkey != NULL)\n            n++;\n    }\n\n\n    Props = (const char **) AllocChunk(it8, sizeof(char *) * n);\n\n    // Pass#2 - Fill pointers\n    n = 0;\n    for (tmp = p;  tmp != NULL; tmp = tmp->NextSubkey) {\n        if(tmp->Subkey != NULL)\n            Props[n++] = p ->Subkey;\n    }\n\n    *SubpropertyNames = Props;\n    return n;\n}\n\nstatic\nint LocatePatch(cmsIT8* it8, const char* cPatch)\n{\n    int i;\n    const char *data;\n    TABLE* t = GetTable(it8);\n\n    for (i=0; i < t-> nPatches; i++) {\n\n        data = GetData(it8, i, t->SampleID);\n\n        if (data != NULL) {\n\n                if (cmsstrcasecmp(data, cPatch) == 0)\n                        return i;\n                }\n        }\n\n        // SynError(it8, \"Couldn't find patch '%s'\\n\", cPatch);\n        return -1;\n}\n\n\nstatic\nint LocateEmptyPatch(cmsIT8* it8)\n{\n    int i;\n    const char *data;\n    TABLE* t = GetTable(it8);\n\n    for (i=0; i < t-> nPatches; i++) {\n\n        data = GetData(it8, i, t->SampleID);\n\n        if (data == NULL)\n            return i;\n\n    }\n\n    return -1;\n}\n\nstatic\nint LocateSample(cmsIT8* it8, const char* cSample)\n{\n    int i;\n    const char *fld;\n    TABLE* t = GetTable(it8);\n\n    for (i=0; i < t->nSamples; i++) {\n\n        fld = GetDataFormat(it8, i);\n        if (fld != NULL) {\n            if (cmsstrcasecmp(fld, cSample) == 0)\n                return i;\n        }\n    }\n\n    return -1;\n\n}\n\n\nint CMSEXPORT cmsIT8FindDataFormat(cmsHANDLE hIT8, const char* cSample)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    _cmsAssert(hIT8 != NULL);\n\n    return LocateSample(it8, cSample);\n}\n\n\n\nconst char* CMSEXPORT cmsIT8GetDataRowCol(cmsHANDLE hIT8, int row, int col)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    _cmsAssert(hIT8 != NULL);\n\n    return GetData(it8, row, col);\n}\n\n\ncmsFloat64Number CMSEXPORT cmsIT8GetDataRowColDbl(cmsHANDLE hIT8, int row, int col)\n{\n    const char* Buffer;\n\n    Buffer = cmsIT8GetDataRowCol(hIT8, row, col);\n\n    if (Buffer == NULL) return 0.0;\n\n    return ParseFloatNumber(Buffer);\n}\n\n\ncmsBool CMSEXPORT cmsIT8SetDataRowCol(cmsHANDLE hIT8, int row, int col, const char* Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    _cmsAssert(hIT8 != NULL);\n\n    return SetData(it8, row, col, Val);\n}\n\n\ncmsBool CMSEXPORT cmsIT8SetDataRowColDbl(cmsHANDLE hIT8, int row, int col, cmsFloat64Number Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    char Buff[256];\n\n    _cmsAssert(hIT8 != NULL);\n\n    snprintf(Buff, 255, it8->DoubleFormatter, Val);\n\n    return SetData(it8, row, col, Buff);\n}\n\n\n\nconst char* CMSEXPORT cmsIT8GetData(cmsHANDLE hIT8, const char* cPatch, const char* cSample)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    int iField, iSet;\n\n    _cmsAssert(hIT8 != NULL);\n\n    iField = LocateSample(it8, cSample);\n    if (iField < 0) {\n        return NULL;\n    }\n\n    iSet = LocatePatch(it8, cPatch);\n    if (iSet < 0) {\n            return NULL;\n    }\n\n    return GetData(it8, iSet, iField);\n}\n\n\ncmsFloat64Number CMSEXPORT cmsIT8GetDataDbl(cmsHANDLE  it8, const char* cPatch, const char* cSample)\n{\n    const char* Buffer;\n\n    Buffer = cmsIT8GetData(it8, cPatch, cSample);\n\n    return ParseFloatNumber(Buffer);\n}\n\n\n\ncmsBool CMSEXPORT cmsIT8SetData(cmsHANDLE hIT8, const char* cPatch, const char* cSample, const char *Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    int iField, iSet;\n    TABLE* t;\n\n    _cmsAssert(hIT8 != NULL);\n\n    t = GetTable(it8);\n\n    iField = LocateSample(it8, cSample);\n\n    if (iField < 0)\n        return FALSE;\n\n    if (t-> nPatches == 0) {\n\n        AllocateDataFormat(it8);\n        AllocateDataSet(it8);\n        CookPointers(it8);\n    }\n\n    if (cmsstrcasecmp(cSample, \"SAMPLE_ID\") == 0) {\n\n        iSet   = LocateEmptyPatch(it8);\n        if (iSet < 0) {\n            return SynError(it8, \"Couldn't add more patches '%s'\\n\", cPatch);\n        }\n\n        iField = t -> SampleID;\n    }\n    else {\n        iSet = LocatePatch(it8, cPatch);\n        if (iSet < 0) {\n            return FALSE;\n        }\n    }\n\n    return SetData(it8, iSet, iField, Val);\n}\n\n\ncmsBool CMSEXPORT cmsIT8SetDataDbl(cmsHANDLE hIT8, const char* cPatch,\n                                   const char* cSample,\n                                   cmsFloat64Number Val)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    char Buff[256];\n\n    _cmsAssert(hIT8 != NULL);\n\n    snprintf(Buff, 255, it8->DoubleFormatter, Val);\n    return cmsIT8SetData(hIT8, cPatch, cSample, Buff);\n}\n\n// Buffer should get MAXSTR at least\n\nconst char* CMSEXPORT cmsIT8GetPatchName(cmsHANDLE hIT8, int nPatch, char* buffer)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    TABLE* t;\n    char* Data;\n\n    _cmsAssert(hIT8 != NULL);\n\n    t = GetTable(it8);\n    Data = GetData(it8, nPatch, t->SampleID);\n\n    if (!Data) return NULL;\n    if (!buffer) return Data;\n\n    strncpy(buffer, Data, MAXSTR-1);\n    buffer[MAXSTR-1] = 0;\n    return buffer;\n}\n\nint CMSEXPORT cmsIT8GetPatchByName(cmsHANDLE hIT8, const char *cPatch)\n{\n    _cmsAssert(hIT8 != NULL);\n\n    return LocatePatch((cmsIT8*)hIT8, cPatch);\n}\n\ncmsUInt32Number CMSEXPORT cmsIT8TableCount(cmsHANDLE hIT8)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    _cmsAssert(hIT8 != NULL);\n\n    return it8 ->TablesCount;\n}\n\n// This handles the \"LABEL\" extension.\n// Label, nTable, Type\n\nint CMSEXPORT cmsIT8SetTableByLabel(cmsHANDLE hIT8, const char* cSet, const char* cField, const char* ExpectedType)\n{\n    const char* cLabelFld;\n    char Type[256], Label[256];\n    cmsUInt32Number nTable;\n\n    _cmsAssert(hIT8 != NULL);\n\n    if (cField != NULL && *cField == 0)\n            cField = \"LABEL\";\n\n    if (cField == NULL)\n            cField = \"LABEL\";\n\n    cLabelFld = cmsIT8GetData(hIT8, cSet, cField);\n    if (!cLabelFld) return -1;\n\n    if (sscanf(cLabelFld, \"%255s %u %255s\", Label, &nTable, Type) != 3)\n            return -1;\n\n    if (ExpectedType != NULL && *ExpectedType == 0)\n        ExpectedType = NULL;\n\n    if (ExpectedType) {\n\n        if (cmsstrcasecmp(Type, ExpectedType) != 0) return -1;\n    }\n\n    return cmsIT8SetTable(hIT8, nTable);\n}\n\n\ncmsBool CMSEXPORT cmsIT8SetIndexColumn(cmsHANDLE hIT8, const char* cSample)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n    int pos;\n\n    _cmsAssert(hIT8 != NULL);\n\n    pos = LocateSample(it8, cSample);\n    if(pos == -1)\n        return FALSE;\n\n    it8->Tab[it8->nTable].SampleID = pos;\n    return TRUE;\n}\n\n\nvoid CMSEXPORT cmsIT8DefineDblFormat(cmsHANDLE hIT8, const char* Formatter)\n{\n    cmsIT8* it8 = (cmsIT8*) hIT8;\n\n    _cmsAssert(hIT8 != NULL);\n\n    if (Formatter == NULL)\n        strcpy(it8->DoubleFormatter, DEFAULT_DBL_FORMAT);\n    else\n        strncpy(it8->DoubleFormatter, Formatter, sizeof(it8->DoubleFormatter));\n\n    it8 ->DoubleFormatter[sizeof(it8 ->DoubleFormatter)-1] = 0;\n}\n\n"], "filenames": ["Projects/VC2017/jpegicc/jpegicc.vcxproj", "Projects/VC2017/lcms2_DLL/lcms2_DLL.vcxproj", "Projects/VC2017/lcms2_static/lcms2_static.vcxproj", "Projects/VC2017/linkicc/linkicc.vcxproj", "Projects/VC2017/psicc/psicc.vcxproj", "Projects/VC2017/testbed/testbed.vcxproj", "Projects/VC2017/tiffdiff/tiffdiff.vcxproj", "Projects/VC2017/tifficc/tifficc.vcxproj", "Projects/VC2017/transicc/transicc.vcxproj", "src/cmscgats.c"], "buggy_code_start_loc": [24, 25, 25, 25, 25, 25, 25, 25, 24, 4], "buggy_code_end_loc": [24, 26, 26, 26, 26, 26, 26, 26, 24, 1513], "fixing_code_start_loc": [25, 25, 25, 25, 25, 25, 25, 25, 25, 4], "fixing_code_end_loc": [26, 26, 26, 26, 26, 26, 26, 26, 26, 1519], "type": "CWE-190", "message": "Little CMS (aka Little Color Management System) 2.9 has an integer overflow in the AllocateDataSet function in cmscgats.c, leading to a heap-based buffer overflow in the SetData function via a crafted file in the second argument to cmsIT8LoadFromFile.", "other": {"cve": {"id": "CVE-2018-16435", "sourceIdentifier": "cve@mitre.org", "published": "2018-09-04T00:29:02.183", "lastModified": "2021-05-26T11:15:08.243", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Little CMS (aka Little Color Management System) 2.9 has an integer overflow in the AllocateDataSet function in cmscgats.c, leading to a heap-based buffer overflow in the SetData function via a crafted file in the second argument to cmsIT8LoadFromFile."}, {"lang": "es", "value": "Little CMS (tambi\u00e9n conocido como Little Color Management System) 2.9 tiene un desbordamiento de enteros en la funci\u00f3n AllocateDataSet en cmscgats.c que conduce a un desbordamiento de b\u00fafer basado en memoria din\u00e1mica (heap) en la funci\u00f3n SetData mediante un archivo manipulado en el segundo argumento en cmsIT8LoadFromFile."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-190"}, {"lang": "en", "value": "CWE-787"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:littlecms:little_cms_color_engine:2.9:*:*:*:*:*:*:*", "matchCriteriaId": "08FF7CFA-711D-4DF6-A628-388B9569063B"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:12.04:*:*:*:esm:*:*:*", "matchCriteriaId": "8D305F7A-D159-4716-AB26-5E38BB5CD991"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:14.04:*:*:*:lts:*:*:*", "matchCriteriaId": "B5A6F2F3-4894-4392-8296-3B8DD2679084"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:16.04:*:*:*:lts:*:*:*", "matchCriteriaId": "F7016A2A-8365-4F1A-89A2-7A19F2BCAE5B"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:18.04:*:*:*:lts:*:*:*", "matchCriteriaId": "23A7C53F-B80F-4E6A-AFA9-58EEA84BE11D"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_desktop:6.0:*:*:*:*:*:*:*", "matchCriteriaId": "EE249E1B-A1FD-4E08-AA71-A0E1F10FFE97"}, {"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_server:6.0:*:*:*:*:*:*:*", "matchCriteriaId": "9BBCD86A-E6C7-4444-9D74-F861084090F0"}, {"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_workstation:6.0:*:*:*:*:*:*:*", "matchCriteriaId": "E5ED5807-55B7-47C5-97A6-03233F4FBC3A"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*", "matchCriteriaId": "C11E6FB0-C8C0-4527-9AA0-CB9B316F8F43"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*", "matchCriteriaId": "DEECE5FC-CACF-4496-A3E7-164736409252"}]}]}], "references": [{"url": "https://access.redhat.com/errata/RHSA-2018:3004", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/mm2/Little-CMS/commit/768f70ca405cd3159d990e962d54456773bb8cf8", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/mm2/Little-CMS/issues/171", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2018/09/msg00005.html", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://security.gentoo.org/glsa/202105-18", "source": "cve@mitre.org"}, {"url": "https://usn.ubuntu.com/3770-1/", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://usn.ubuntu.com/3770-2/", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.debian.org/security/2018/dsa-4284", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/mm2/Little-CMS/commit/768f70ca405cd3159d990e962d54456773bb8cf8"}}