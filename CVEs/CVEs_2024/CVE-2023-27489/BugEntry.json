{"buggy_code": ["# For more information on configuration, see:\n#   * Official English Documentation: http://nginx.org/en/docs/\n\ndaemon on;\nworker_processes auto;\nerror_log /dev/stderr;\npid /tmp/nginx.pid;\n\n# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.\ninclude /usr/share/nginx/modules/*.conf;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /dev/stdout  main;\n\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 4096;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    gzip on;\n    gzip_disable \"msie6\";\n\n    # note: this should be bigger than\n    # FILE_UPLOAD_MAX_SIZE from Kiwi TCMS which defaults to 5M.\n    client_max_body_size 10m;\n\n    # limit URI size, see\n    # https://github.com/kiwitcms/Kiwi/issues/1054\n    large_client_header_buffers 4 10k;\n\n    ssl_certificate     /Kiwi/ssl/localhost.crt;\n    ssl_certificate_key /Kiwi/ssl/localhost.key;\n\n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_ciphers HIGH:!aNULL:!MD5;\n    ssl_prefer_server_ciphers off;\n\n    # default proxy settings\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n\n    map $request_uri $limit_key {\n        default \"\";\n        ~^/accounts/ $binary_remote_addr;\n    }\n    limit_req_zone $limit_key zone=ten-per-sec:10m rate=10r/s;\n    limit_req_status 429;\n\n    upstream kiwitcms {\n        server unix:///tmp/kiwitcms.sock;\n    }\n\n    add_header X-Frame-Options DENY;\n    add_header X-Content-Type-Options nosniff;\n\n    server {\n        listen       8080;\n        listen       [::]:8080;\n        server_name  _;\n\n        location / {\n                return 301 https://$host$request_uri;\n        }\n    }\n\n    server {\n        listen       8443 ssl;\n        listen       [::]:8443 ssl;\n        server_name  _;\n\n        location /uploads/  {\n            alias /Kiwi/uploads/;\n        }\n\n        location /static/ {\n            alias /Kiwi/static/;\n        }\n\n        location / {\n            include     /etc/nginx/uwsgi_params;\n            uwsgi_pass  kiwitcms;\n\n            limit_req zone=ten-per-sec burst=20 nodelay;\n        }\n    }\n}\n", "# pylint: disable=no-self-use, too-few-public-methods\n\nfrom django.conf import settings\nfrom django.contrib.sites.models import Site\nfrom django.db.utils import OperationalError, ProgrammingError\nfrom django.http import HttpResponseRedirect\nfrom django.urls import reverse\nfrom django.utils.deprecation import MiddlewareMixin\n\n\nclass CheckDBStructureExistsMiddleware(MiddlewareMixin):\n    def process_request(self, request):\n        if request.path == \"/init-db/\":\n            return None\n        try:\n            Site.objects.get(pk=settings.SITE_ID)\n        except (OperationalError, ProgrammingError):\n            # Redirect to Setup view\n            return HttpResponseRedirect(reverse(\"init-db\"))\n        return None\n", "# pylint: disable=wildcard-import, unused-wildcard-import\n\"\"\"\n    Django settings for devel env.\n\"\"\"\n\nimport os\n\nfrom .common import *  # noqa: F403\n\n# Debug settings\nDEBUG = True\n\n# Database settings\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": str(TEMP_DIR / \"kiwi.devel.sqlite\"),  # noqa: F405\n        \"USER\": \"root\",\n        \"PASSWORD\": \"\",\n        \"HOST\": \"\",\n        \"PORT\": \"\",\n    }\n}\n\n\nCACHES = {\n    \"default\": {\n        \"BACKEND\": \"django.core.cache.backends.dummy.DummyCache\",\n    }\n}\n# django-debug-toolbar settings\n\nMIDDLEWARE += [\"debug_toolbar.middleware.DebugToolbarMiddleware\"]  # noqa: F405\n\nINSTALLED_APPS += [\"debug_toolbar\"]  # noqa: F405\n\nMEDIA_ROOT = os.path.join(TCMS_ROOT_PATH, \"..\", \"uploads\")  # noqa: F405\n\n# Needed by django.template.context_processors.debug:\n# See:\n# http://docs.djangoproject.com/en/dev/ref/templates/api/#django-template-context-processors-debug\nINTERNAL_IPS = (\"127.0.0.1\",)\n\nSTATICFILES_STORAGE = \"tcms.tests.storage.RaiseWhenFileNotFound\"\n", "#!/bin/bash\n\n. /usr/share/beakerlib/beakerlib.sh\n\nassert_up_and_running() {\n    sleep 10\n    # HTTP redirects; HTTPS display the login page\n    rlRun -t -c \"curl       -o- http://localhost/  | grep '301 Moved Permanently'\"\n    rlRun -t -c \"curl -k -L -o- https://localhost/ | grep 'Welcome to Kiwi TCMS'\"\n}\n\nget_dashboard() {\n    rlRun -t -c \"curl -k -L -o- -c /tmp/testcookies.txt $1/\"\n    CSRF_TOKEN=$(grep csrftoken /tmp/testcookies.txt | cut -f 7)\n    rlRun -t -c \"curl -e $1/accounts/login/ -d username=testadmin -d password=password \\\n        -d csrfmiddlewaretoken=$CSRF_TOKEN -k -L -i -o /tmp/testdata.txt \\\n        -b /tmp/testcookies.txt -c /tmp/login-cookies.txt $1/accounts/login/\"\n    rlAssertGrep \"<title>Kiwi TCMS - Dashboard</title>\" /tmp/testdata.txt\n}\n\nexec_wrk() {\n    URL=$1\n    LOGS_DIR=$2\n    LOG_BASENAME=$3\n    EXTRA_HEADERS=${4:-\"X-Dummy-Header: 1\"}\n\n    WRK_FILE=\"$LOGS_DIR/$LOG_BASENAME.log\"\n\n    wrk -d10s -t4 -c4 -H \"$EXTRA_HEADERS\" \"$URL\" > \"$WRK_FILE\"\n\n    TOTAL_REQUESTS=$(grep 'requests in ' \"$WRK_FILE\" | tr -s ' ' | cut -f2 -d' ')\n    FAILED_REQUESTS=$(grep 'Non-2xx or 3xx responses:' \"$WRK_FILE\" | tr -d ' ' | cut -f2 -d:)\n    test -z \"$FAILED_REQUESTS\" && FAILED_REQUESTS=\"0\"\n    COMPLETED_REQUESTS=$((TOTAL_REQUESTS - FAILED_REQUESTS))\n\n    return \"$COMPLETED_REQUESTS\"\n}\n\nrlJournalStart\n    rlPhaseStartSetup\n        # wait for tear-down from previous script b/c\n        # in CI subsequent tests can't find the db host\n        sleep 5\n\n        WRK_DIR=$(mktemp -d ./wrk-logs-XXXX)\n        chmod go+rwx \"$WRK_DIR\"\n\n        rlRun -t -c \"docker-compose up -d\"\n        sleep 10\n        rlRun -t -c \"docker exec -i kiwi_web /Kiwi/manage.py migrate\"\n        assert_up_and_running\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Should not display SSL warning for HTTPS connection\"\n        rlRun -t -c \"docker exec -i kiwi_web /Kiwi/manage.py createsuperuser \\\n            --username testadmin --email testadmin@domain.com --noinput\"\n        rlRun -t -c \"cat tests/set_testadmin_pass.py | docker exec -i kiwi_web /Kiwi/manage.py shell\"\n\n        get_dashboard \"https://localhost\"\n        rlAssertNotGrep \"You are not using a secure connection.\" /tmp/testdata.txt\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Should allow file upload with UTF-8 filenames\"\n        cat > ~/.tcms.conf << _EOF_\n[tcms]\nurl = https://localhost/xml-rpc/\nusername = testadmin\npassword = password\n_EOF_\n\n        rlRun -t -c \"./tests/test_utf8_uploads.py -v\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Should send ETag header\"\n        rlRun -t -c \"curl -k -D- https://localhost/static/images/kiwi_h20.png 2>/dev/null | grep 'ETag'\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Should NOT send Cache-Control header\"\n        rlRun -t -c \"curl -k -D- https://localhost/static/images/kiwi_h20.png 2>/dev/null | grep 'Cache-Control'\" 1\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Should send X-Frame-Options header\"\n        rlRun -t -c \"curl -k -D- https://localhost 2>/dev/null | grep 'X-Frame-Options: DENY'\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Should send X-Content-Type-Options header\"\n        rlRun -t -c \"curl -k -D- https://localhost 2>/dev/null | grep 'X-Content-Type-Options: nosniff'\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Performance baseline for /accounts/register/\"\n        exec_wrk \"https://localhost/accounts/login/\" \"$WRK_DIR\" \"register-account-page\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Performance baseline for /accounts/login/\"\n        exec_wrk \"https://localhost/accounts/login/\" \"$WRK_DIR\" \"login-page\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Performance baseline for /accounts/passwordreset/\"\n        exec_wrk \"https://localhost/accounts/login/\" \"$WRK_DIR\" \"password-reset-page\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Performance baseline for static file\"\n        exec_wrk \"https://localhost/static/images/kiwi_h20.png\" \"$WRK_DIR\" \"static-image\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Performance baseline for / aka dashboard\"\n        # Note: the cookies file is created in get_dashboard() above\n        SESSION_ID=$(grep sessionid /tmp/login-cookies.txt | cut -f 7)\n        exec_wrk \"https://localhost/\" \"$WRK_DIR\" \"dashboard\" \"Cookie: sessionid=$SESSION_ID\"\n    rlPhaseEnd\n\n    rlPhaseStartCleanup\n        rlRun -t -c \"docker-compose down\"\n        rm -f /tmp/testcookies.txt\n        rm -f /tmp/testdata.txt\n        if [ -n \"$ImageOS\" ]; then\n            rlRun -t -c \"docker volume rm kiwi_db_data\"\n        fi\n    rlPhaseEnd\nrlJournalEnd\n\nrlJournalPrintText\n"], "fixing_code": ["# For more information on configuration, see:\n#   * Official English Documentation: http://nginx.org/en/docs/\n\ndaemon on;\nworker_processes auto;\nerror_log /dev/stderr;\npid /tmp/nginx.pid;\n\n# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.\ninclude /usr/share/nginx/modules/*.conf;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /dev/stdout  main;\n\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 4096;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    gzip on;\n    gzip_disable \"msie6\";\n\n    # note: this should be bigger than\n    # FILE_UPLOAD_MAX_SIZE from Kiwi TCMS which defaults to 5M.\n    client_max_body_size 10m;\n\n    # limit URI size, see\n    # https://github.com/kiwitcms/Kiwi/issues/1054\n    large_client_header_buffers 4 10k;\n\n    ssl_certificate     /Kiwi/ssl/localhost.crt;\n    ssl_certificate_key /Kiwi/ssl/localhost.key;\n\n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_ciphers HIGH:!aNULL:!MD5;\n    ssl_prefer_server_ciphers off;\n\n    # default proxy settings\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n\n    map $request_uri $limit_key {\n        default \"\";\n        ~^/accounts/ $binary_remote_addr;\n    }\n    limit_req_zone $limit_key zone=ten-per-sec:10m rate=10r/s;\n    limit_req_status 429;\n\n    upstream kiwitcms {\n        server unix:///tmp/kiwitcms.sock;\n    }\n\n    # WARNING: make sure these match tcms.core.middleware.ExtraHeadersMiddleware\n    add_header X-Frame-Options DENY;\n    add_header X-Content-Type-Options nosniff;\n    add_header Content-Security-Policy \"script-src 'self' cdn.crowdin.com;\";\n\n    server {\n        listen       8080;\n        listen       [::]:8080;\n        server_name  _;\n\n        location / {\n                return 301 https://$host$request_uri;\n        }\n    }\n\n    server {\n        listen       8443 ssl;\n        listen       [::]:8443 ssl;\n        server_name  _;\n\n        location /uploads/  {\n            alias /Kiwi/uploads/;\n        }\n\n        location /static/ {\n            alias /Kiwi/static/;\n        }\n\n        location / {\n            include     /etc/nginx/uwsgi_params;\n            uwsgi_pass  kiwitcms;\n\n            limit_req zone=ten-per-sec burst=20 nodelay;\n        }\n    }\n}\n", "# pylint: disable=no-self-use, too-few-public-methods\n\nfrom django.conf import settings\nfrom django.contrib.sites.models import Site\nfrom django.db.utils import OperationalError, ProgrammingError\nfrom django.http import HttpResponseRedirect\nfrom django.urls import reverse\nfrom django.utils.deprecation import MiddlewareMixin\n\n\nclass CheckDBStructureExistsMiddleware(MiddlewareMixin):\n    def process_request(self, request):\n        if request.path == \"/init-db/\":\n            return None\n        try:\n            Site.objects.get(pk=settings.SITE_ID)\n        except (OperationalError, ProgrammingError):\n            # Redirect to Setup view\n            return HttpResponseRedirect(reverse(\"init-db\"))\n        return None\n\n\nclass ExtraHeadersMiddleware(MiddlewareMixin):\n    \"\"\"\n    This is enabled only during testing and development. The actual headers\n    are configured in `etc/nginx.conf`!\n    \"\"\"\n\n    def process_response(self, request, response):\n        if settings.DEBUG:\n            response.headers[\"X-Frame-Options\"] = \"DENY\"\n            response.headers[\"X-Content-Type-Options\"] = \"nosniff\"\n            response.headers[\n                \"Content-Security-Policy\"\n            ] = \"script-src 'self' cdn.crowdin.com;\"\n\n        return response\n", "# pylint: disable=wildcard-import, unused-wildcard-import\n\"\"\"\n    Django settings for devel env.\n\"\"\"\n\nimport os\n\nfrom .common import *  # noqa: F403\n\n# Debug settings\nDEBUG = True\n\n# Database settings\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": str(TEMP_DIR / \"kiwi.devel.sqlite\"),  # noqa: F405\n        \"USER\": \"root\",\n        \"PASSWORD\": \"\",\n        \"HOST\": \"\",\n        \"PORT\": \"\",\n    }\n}\n\n\nCACHES = {\n    \"default\": {\n        \"BACKEND\": \"django.core.cache.backends.dummy.DummyCache\",\n    }\n}\n# django-debug-toolbar settings\n\nMIDDLEWARE += [  # noqa: F405\n    \"debug_toolbar.middleware.DebugToolbarMiddleware\",\n    \"tcms.core.middleware.ExtraHeadersMiddleware\",\n]\n\nINSTALLED_APPS += [\"debug_toolbar\"]  # noqa: F405\n\nMEDIA_ROOT = os.path.join(TCMS_ROOT_PATH, \"..\", \"uploads\")  # noqa: F405\n\n# Needed by django.template.context_processors.debug:\n# See:\n# http://docs.djangoproject.com/en/dev/ref/templates/api/#django-template-context-processors-debug\nINTERNAL_IPS = (\"127.0.0.1\",)\n\nSTATICFILES_STORAGE = \"tcms.tests.storage.RaiseWhenFileNotFound\"\n", "#!/bin/bash\n\n. /usr/share/beakerlib/beakerlib.sh\n\nassert_up_and_running() {\n    sleep 10\n    # HTTP redirects; HTTPS display the login page\n    rlRun -t -c \"curl       -o- http://localhost/  | grep '301 Moved Permanently'\"\n    rlRun -t -c \"curl -k -L -o- https://localhost/ | grep 'Welcome to Kiwi TCMS'\"\n}\n\nget_dashboard() {\n    rlRun -t -c \"curl -k -L -o- -c /tmp/testcookies.txt $1/\"\n    CSRF_TOKEN=$(grep csrftoken /tmp/testcookies.txt | cut -f 7)\n    rlRun -t -c \"curl -e $1/accounts/login/ -d username=testadmin -d password=password \\\n        -d csrfmiddlewaretoken=$CSRF_TOKEN -k -L -i -o /tmp/testdata.txt \\\n        -b /tmp/testcookies.txt -c /tmp/login-cookies.txt $1/accounts/login/\"\n    rlAssertGrep \"<title>Kiwi TCMS - Dashboard</title>\" /tmp/testdata.txt\n}\n\nexec_wrk() {\n    URL=$1\n    LOGS_DIR=$2\n    LOG_BASENAME=$3\n    EXTRA_HEADERS=${4:-\"X-Dummy-Header: 1\"}\n\n    WRK_FILE=\"$LOGS_DIR/$LOG_BASENAME.log\"\n\n    wrk -d10s -t4 -c4 -H \"$EXTRA_HEADERS\" \"$URL\" > \"$WRK_FILE\"\n\n    TOTAL_REQUESTS=$(grep 'requests in ' \"$WRK_FILE\" | tr -s ' ' | cut -f2 -d' ')\n    FAILED_REQUESTS=$(grep 'Non-2xx or 3xx responses:' \"$WRK_FILE\" | tr -d ' ' | cut -f2 -d:)\n    test -z \"$FAILED_REQUESTS\" && FAILED_REQUESTS=\"0\"\n    COMPLETED_REQUESTS=$((TOTAL_REQUESTS - FAILED_REQUESTS))\n\n    return \"$COMPLETED_REQUESTS\"\n}\n\nrlJournalStart\n    rlPhaseStartSetup\n        # wait for tear-down from previous script b/c\n        # in CI subsequent tests can't find the db host\n        sleep 5\n\n        WRK_DIR=$(mktemp -d ./wrk-logs-XXXX)\n        chmod go+rwx \"$WRK_DIR\"\n\n        rlRun -t -c \"docker-compose up -d\"\n        sleep 10\n        rlRun -t -c \"docker exec -i kiwi_web /Kiwi/manage.py migrate\"\n        assert_up_and_running\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Should not display SSL warning for HTTPS connection\"\n        rlRun -t -c \"docker exec -i kiwi_web /Kiwi/manage.py createsuperuser \\\n            --username testadmin --email testadmin@domain.com --noinput\"\n        rlRun -t -c \"cat tests/set_testadmin_pass.py | docker exec -i kiwi_web /Kiwi/manage.py shell\"\n\n        get_dashboard \"https://localhost\"\n        rlAssertNotGrep \"You are not using a secure connection.\" /tmp/testdata.txt\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Should allow file upload with UTF-8 filenames\"\n        cat > ~/.tcms.conf << _EOF_\n[tcms]\nurl = https://localhost/xml-rpc/\nusername = testadmin\npassword = password\n_EOF_\n\n        rlRun -t -c \"./tests/test_utf8_uploads.py -v\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Should send ETag header\"\n        rlRun -t -c \"curl -k -D- https://localhost/static/images/kiwi_h20.png 2>/dev/null | grep 'ETag'\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Should NOT send Cache-Control header\"\n        rlRun -t -c \"curl -k -D- https://localhost/static/images/kiwi_h20.png 2>/dev/null | grep 'Cache-Control'\" 1\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Should send X-Frame-Options header\"\n        rlRun -t -c \"curl -k -D- https://localhost 2>/dev/null | grep 'X-Frame-Options: DENY'\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Should send X-Content-Type-Options header\"\n        rlRun -t -c \"curl -k -D- https://localhost 2>/dev/null | grep 'X-Content-Type-Options: nosniff'\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Should send Content-Security-Policy header\"\n        rlRun -t -c \"curl -k -D- https://localhost 2>/dev/null | grep $'Content-Security-Policy: script-src \\'self\\' cdn.crowdin.com;'\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Performance baseline for /accounts/register/\"\n        exec_wrk \"https://localhost/accounts/login/\" \"$WRK_DIR\" \"register-account-page\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Performance baseline for /accounts/login/\"\n        exec_wrk \"https://localhost/accounts/login/\" \"$WRK_DIR\" \"login-page\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Performance baseline for /accounts/passwordreset/\"\n        exec_wrk \"https://localhost/accounts/login/\" \"$WRK_DIR\" \"password-reset-page\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Performance baseline for static file\"\n        exec_wrk \"https://localhost/static/images/kiwi_h20.png\" \"$WRK_DIR\" \"static-image\"\n    rlPhaseEnd\n\n    rlPhaseStartTest \"Performance baseline for / aka dashboard\"\n        # Note: the cookies file is created in get_dashboard() above\n        SESSION_ID=$(grep sessionid /tmp/login-cookies.txt | cut -f 7)\n        exec_wrk \"https://localhost/\" \"$WRK_DIR\" \"dashboard\" \"Cookie: sessionid=$SESSION_ID\"\n    rlPhaseEnd\n\n    rlPhaseStartCleanup\n        rlRun -t -c \"docker-compose down\"\n        rm -f /tmp/testcookies.txt\n        rm -f /tmp/testdata.txt\n        if [ -n \"$ImageOS\" ]; then\n            rlRun -t -c \"docker volume rm kiwi_db_data\"\n        fi\n    rlPhaseEnd\nrlJournalEnd\n\nrlJournalPrintText\n"], "filenames": ["etc/nginx.conf", "tcms/core/middleware.py", "tcms/settings/devel.py", "tests/test_http.sh"], "buggy_code_start_loc": [64, 20, 33, 89], "buggy_code_end_loc": [66, 20, 34, 89], "fixing_code_start_loc": [65, 21, 33, 90], "fixing_code_end_loc": [69, 38, 37, 94], "type": "CWE-79", "message": "Kiwi TCMS is an open source test management system for both manual and automated testing. Kiwi TCMS accepts SVG files uploaded by users which could potentially contain JavaScript code. If SVG images are viewed directly, i.e. not rendered in an HTML page, this JavaScript code could execute. This vulnerability has been fixed by configuring Kiwi TCMS to serve with the Content-Security-Policy HTTP header which blocks inline JavaScript in all modern browsers. This configuration change is provided in version 12.1 and users are advised to upgrade. Users unable to upgrade may set their Content-Security-Policy HTTP header manually.", "other": {"cve": {"id": "CVE-2023-27489", "sourceIdentifier": "security-advisories@github.com", "published": "2023-03-29T19:15:22.277", "lastModified": "2023-04-06T17:42:45.403", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Kiwi TCMS is an open source test management system for both manual and automated testing. Kiwi TCMS accepts SVG files uploaded by users which could potentially contain JavaScript code. If SVG images are viewed directly, i.e. not rendered in an HTML page, this JavaScript code could execute. This vulnerability has been fixed by configuring Kiwi TCMS to serve with the Content-Security-Policy HTTP header which blocks inline JavaScript in all modern browsers. This configuration change is provided in version 12.1 and users are advised to upgrade. Users unable to upgrade may set their Content-Security-Policy HTTP header manually."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "LOW", "baseScore": 7.6, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.1, "impactScore": 5.5}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:kiwitcms:kiwi_tcms:*:*:*:*:*:*:*:*", "versionEndExcluding": "12.1", "matchCriteriaId": "F4287F3C-2839-4274-8D5D-74C9143F1949"}]}]}], "references": [{"url": "https://github.com/kiwitcms/Kiwi/commit/6617cee0fb70cc394b7be6bbc86ef84e6e9de077", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/kiwitcms/Kiwi/security/advisories/GHSA-2wcr-87wf-cf9j", "source": "security-advisories@github.com", "tags": ["Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/kiwitcms/Kiwi/commit/6617cee0fb70cc394b7be6bbc86ef84e6e9de077"}}