{"buggy_code": ["<?php\nclass ApiQueryWikiConfig extends ApiQueryBase {\n\tpublic function __construct( $query, $moduleName ) {\n\t\tparent::__construct( $query, $moduleName, 'wcf' );\n\t}\n\n\tpublic function execute() {\n\t\t$params = $this->extractRequestParams();\n\t\t$result = $this->getResult();\n\t\t$prop = array_flip( $params['prop'] );\n\n\t\t$data = [];\n\n\t\tforeach ( $params['wikis'] as $wiki ) {\n\t\t\t$wikiObj = new RemoteWiki( $wiki );\n\n\t\t\tif ( is_null( $wikiObj ) ) {\n\t\t\t\t$this->addWarning( [ 'apiwarn-wikiconfig-wikidoesnotexist', $wiki ] );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$wikiData = [\n\t\t\t\t'name' => $wiki,\n\t\t\t\t'sitename' => $wikiObj->getSitename(),\n\t\t\t\t'closed' => (bool)$wikiObj->isClosed(),\n\t\t\t\t'inactive' => (bool)$wikiObj->isInactive(),\n\t\t\t\t'inactive-exempt' => (bool)$wikiObj->isInactiveExempt(),\n\t\t\t\t'private' => (bool)$wikiObj->isPrivate()\n\t\t\t];\n\n\t\t\t$mwSet = new ManageWikiSettings( $wiki );\n\t\t\tif ( isset( $prop['settings'] ) ) {\n\t\t\t\t$wikiData['settings'] = $mwSet->list();\n\t\t\t}\n\n\t\t\t$mwExt = new ManageWikiExtensions( $wiki );\n\t\t\tif ( isset( $prop['extensions'] ) ) {\n\t\t\t\t$wikiData['extensions'] = $mwExt->list();\n\t\t\t}\n\n\t\t\t$mwPerms = new ManageWikiPermissions( $wiki );\n\t\t\tif ( isset( $prop['permissions'] ) ) {\n\t\t\t\tforeach ( $mwPerms->list() as $group => $data ) {\n\t\t\t\t\t$wikiData['permissions'][$group] = $data['permissions'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$data[] = $wikiData;\n\t\t}\n\n\t\t$result->setIndexedTagName( $data, 'wikiconfig' );\n\t\t$result->addValue( 'query', $this->getModuleName(), $data );\n\t}\n\n\tprotected function getAllowedParams() {\n\t\treturn [\n\t\t\t'prop' => [\n\t\t\t\tApiBase::PARAM_ISMULTI => true,\n\t\t\t\tApiBase::PARAM_TYPE => [\n\t\t\t\t\t'sitename',\n\t\t\t\t\t'inactive',\n\t\t\t\t\t'inactive-exempt',\n\t\t\t\t\t'closed',\n\t\t\t\t\t'private',\n\t\t\t\t\t'extensions',\n\t\t\t\t\t'settings',\n\t\t\t\t\t'permissions'\n\t\t\t\t],\n\t\t\t\tApiBase::PARAM_DFLT => 'sitename|extensions|settings',\n\t\t\t\tApiBase::PARAM_HELP_MSG_PER_VALUE => [],\n\t\t\t],\n\t\t\t'wikis' => [\n\t\t\t\tApiBase::PARAM_ISMULTI => true,\n\t\t\t\tApiBase::PARAM_REQUIRED => true\n\t\t\t],\n\t\t];\n\t}\n\n\t/**\n\t * @see ApiBase::getExamplesMessages()\n\t * @return array\n\t */\n\tprotected function getExamplesMessages() {\n\t\treturn [\n\t\t\t'action=query&list=wikiconfig&wcfwikis=metawiki'\n\t\t\t\t=> 'apihelp-query+wikiconfig-example-1',\n\t\t];\n\t}\n}\n"], "fixing_code": ["<?php\n\nuse MediaWiki\\MediaWikiServices;\n\nclass ApiQueryWikiConfig extends ApiQueryBase {\n\tpublic function __construct( $query, $moduleName ) {\n\t\tparent::__construct( $query, $moduleName, 'wcf' );\n\t}\n\n\tpublic function execute() {\n\t\t$params = $this->extractRequestParams();\n\t\t$result = $this->getResult();\n\t\t$prop = array_flip( $params['prop'] );\n\n\t\t$data = [];\n\n\t\tforeach ( $params['wikis'] as $wiki ) {\n\t\t\t$wikiObj = new RemoteWiki( $wiki );\n\n\t\t\tif ( is_null( $wikiObj ) ) {\n\t\t\t\t$this->addWarning( [ 'apiwarn-wikiconfig-wikidoesnotexist', $wiki ] );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$wikiData = [\n\t\t\t\t'name' => $wiki,\n\t\t\t\t'sitename' => $wikiObj->getSitename(),\n\t\t\t\t'closed' => (bool)$wikiObj->isClosed(),\n\t\t\t\t'inactive' => (bool)$wikiObj->isInactive(),\n\t\t\t\t'inactive-exempt' => (bool)$wikiObj->isInactiveExempt(),\n\t\t\t\t'private' => (bool)$wikiObj->isPrivate()\n\t\t\t];\n\n\t\t\t$mwSet = new ManageWikiSettings( $wiki );\n\t\t\tif ( isset( $prop['settings'] ) ) {\n\t\t\t\t$wikiData['settings'] = $mwSet->list();\n\t\t\t\t\n\t\t\t\t$config = MediaWikiServices::getInstance()->getConfigFactory()->makeConfig( 'managewiki' );\n\t\n\t\t\t\tforeach ( $config->get( 'ManageWikiSettings' ) as $setting => $options ) {\n\t\t\t\t\tif ( isset( $options['requires']['visibility']['permissions'] ) ) {\n\t\t\t\t\t\tunset( $wikiData['settings'][$setting] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$mwExt = new ManageWikiExtensions( $wiki );\n\t\t\tif ( isset( $prop['extensions'] ) ) {\n\t\t\t\t$wikiData['extensions'] = $mwExt->list();\n\t\t\t}\n\n\t\t\t$mwPerms = new ManageWikiPermissions( $wiki );\n\t\t\tif ( isset( $prop['permissions'] ) ) {\n\t\t\t\tforeach ( $mwPerms->list() as $group => $data ) {\n\t\t\t\t\t$wikiData['permissions'][$group] = $data['permissions'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$data[] = $wikiData;\n\t\t}\n\n\t\t$result->setIndexedTagName( $data, 'wikiconfig' );\n\t\t$result->addValue( 'query', $this->getModuleName(), $data );\n\t}\n\n\tprotected function getAllowedParams() {\n\t\treturn [\n\t\t\t'prop' => [\n\t\t\t\tApiBase::PARAM_ISMULTI => true,\n\t\t\t\tApiBase::PARAM_TYPE => [\n\t\t\t\t\t'sitename',\n\t\t\t\t\t'inactive',\n\t\t\t\t\t'inactive-exempt',\n\t\t\t\t\t'closed',\n\t\t\t\t\t'private',\n\t\t\t\t\t'extensions',\n\t\t\t\t\t'settings',\n\t\t\t\t\t'permissions'\n\t\t\t\t],\n\t\t\t\tApiBase::PARAM_DFLT => 'sitename|extensions|settings',\n\t\t\t\tApiBase::PARAM_HELP_MSG_PER_VALUE => [],\n\t\t\t],\n\t\t\t'wikis' => [\n\t\t\t\tApiBase::PARAM_ISMULTI => true,\n\t\t\t\tApiBase::PARAM_REQUIRED => true\n\t\t\t],\n\t\t];\n\t}\n\n\t/**\n\t * @see ApiBase::getExamplesMessages()\n\t * @return array\n\t */\n\tprotected function getExamplesMessages() {\n\t\treturn [\n\t\t\t'action=query&list=wikiconfig&wcfwikis=metawiki'\n\t\t\t\t=> 'apihelp-query+wikiconfig-example-1',\n\t\t];\n\t}\n}\n"], "filenames": ["includes/api/ApiQueryWikiConfig.php"], "buggy_code_start_loc": [1], "buggy_code_end_loc": [33], "fixing_code_start_loc": [2], "fixing_code_end_loc": [45], "type": "CWE-200", "message": "ManageWiki is an extension to the MediaWiki project. The 'wikiconfig' API leaked the value of private configuration variables set through the ManageWiki variable to all users. This has been patched by https://github.com/miraheze/ManageWiki/compare/99f3b2c8af18...befb83c66f5b.patch. If you are unable to patch set `$wgAPIListModules['wikiconfig'] = 'ApiQueryDisabled';` or remove private config as a workaround.", "other": {"cve": {"id": "CVE-2021-29483", "sourceIdentifier": "security-advisories@github.com", "published": "2021-04-28T22:15:08.337", "lastModified": "2021-05-08T02:26:35.107", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "ManageWiki is an extension to the MediaWiki project. The 'wikiconfig' API leaked the value of private configuration variables set through the ManageWiki variable to all users. This has been patched by https://github.com/miraheze/ManageWiki/compare/99f3b2c8af18...befb83c66f5b.patch. If you are unable to patch set `$wgAPIListModules['wikiconfig'] = 'ApiQueryDisabled';` or remove private config as a workaround."}, {"lang": "es", "value": "ManageWiki es una extensi\u00f3n del proyecto MediaWiki.&#xa0;La API \"wikiconfig\" filtr\u00f3 el valor de las variables de configuraci\u00f3n privadas establecidas por medio de la variable ManageWiki a todos los usuarios.&#xa0;Esto ha sido parcheado por https://github.com/miraheze/ManageWiki/compare/99f3b2c8af18...befb83c66f5b.patch.&#xa0;Si no puede parchear, configure `$ wgAPIListModules ['wikiconfig'] = 'ApiQueryDisabled';` o elimine la configuraci\u00f3n privada como soluci\u00f3n alternativa"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "HIGH", "baseScore": 9.4, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.5}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-200"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:miraheze:managewiki:*:*:*:*:*:*:*:*", "versionEndExcluding": "2021-04-28", "matchCriteriaId": "07A8635C-1EE6-41CA-811E-99AFAE1D7F5F"}]}]}], "references": [{"url": "https://github.com/miraheze/ManageWiki/commit/befb83c66f5b643e174897ea41a8a46679b26304", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/miraheze/ManageWiki/security/advisories/GHSA-jmc9-rv2f-g8vv", "source": "security-advisories@github.com", "tags": ["Mitigation", "Patch", "Third Party Advisory"]}, {"url": "https://phabricator.miraheze.org/T7213", "source": "security-advisories@github.com", "tags": ["Issue Tracking", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/miraheze/ManageWiki/commit/befb83c66f5b643e174897ea41a8a46679b26304"}}