{"buggy_code": ["# Security Policy\n\n## Supported Versions\nThe following versions of Pterodactyl are receiving active support and maintenance. Any security vulnerabilities discovered must be reproducible in supported versions.\n\n| Panel | Daemon       | Supported          |\n| ----- | ------------ | ------------------ |\n| 1.6.x | wings@1.5.x  | :white_check_mark: |\n| 0.7.x | daemon@0.6.x | :x: |\n\n\n## Reporting a Vulnerability\n\nPlease reach out directly to any project team member on Discord when reporting a security vulnerability, or you can send an email to `dane [\u00e4t] pterodactyl.io`.\n\nWe make every effort to respond as soon as possible, although it may take a day or two for us to sync internally and determine the severity of the report and its impact. Please, _do not_ use a public facing channel or GitHub issues to report sensitive security issues.\n\nAs part of our process, we will create a security advisory for the affected versions and disclose it publicly, usually two to four weeks after a releasing a version that addresses it.\n", "import * as React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCogs, faLayerGroup, faSignOutAlt, faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { useStoreState } from 'easy-peasy';\nimport { ApplicationStore } from '@/state';\nimport SearchContainer from '@/components/dashboard/search/SearchContainer';\nimport tw, { theme } from 'twin.macro';\nimport styled from 'styled-components/macro';\n\nconst Navigation = styled.div`\n    ${tw`w-full bg-neutral-900 shadow-md overflow-x-auto`};\n    \n    & > div {\n        ${tw`mx-auto w-full flex items-center`};\n    }\n    \n    & #logo {\n        ${tw`flex-1`};\n        \n        & > a {\n            ${tw`text-2xl font-header px-4 no-underline text-neutral-200 hover:text-neutral-100 transition-colors duration-150`};\n        }\n    }\n`;\n\nconst RightNavigation = styled.div`\n    ${tw`flex h-full items-center justify-center`};\n    \n    & > a, & > .navigation-link {\n        ${tw`flex items-center h-full no-underline text-neutral-300 px-6 cursor-pointer transition-all duration-150`};\n        \n        &:active, &:hover {\n            ${tw`text-neutral-100 bg-black`};\n        }\n        \n        &:active, &:hover, &.active {\n            box-shadow: inset 0 -2px ${theme`colors.cyan.700`.toString()};\n        }\n    }\n`;\n\nexport default () => {\n    const name = useStoreState((state: ApplicationStore) => state.settings.data!.name);\n    const rootAdmin = useStoreState((state: ApplicationStore) => state.user.data!.rootAdmin);\n\n    return (\n        <Navigation>\n            <div css={tw`mx-auto w-full flex items-center`} style={{ maxWidth: '1200px', height: '3.5rem' }}>\n                <div id={'logo'}>\n                    <Link to={'/'}>\n                        {name}\n                    </Link>\n                </div>\n                <RightNavigation>\n                    <SearchContainer/>\n                    <NavLink to={'/'} exact>\n                        <FontAwesomeIcon icon={faLayerGroup}/>\n                    </NavLink>\n                    <NavLink to={'/account'}>\n                        <FontAwesomeIcon icon={faUserCircle}/>\n                    </NavLink>\n                    {rootAdmin &&\n                    <a href={'/admin'} rel={'noreferrer'}>\n                        <FontAwesomeIcon icon={faCogs}/>\n                    </a>\n                    }\n                    <a href={'/auth/logout'}>\n                        <FontAwesomeIcon icon={faSignOutAlt}/>\n                    </a>\n                </RightNavigation>\n            </div>\n        </Navigation>\n    );\n};\n", "<?php\n\n/*\n|--------------------------------------------------------------------------\n| Authentication Routes\n|--------------------------------------------------------------------------\n|\n| Endpoint: /auth\n|\n*/\nRoute::group(['middleware' => 'guest'], function () {\n    // These routes are defined so that we can continue to reference them programatically.\n    // They all route to the same controller function which passes off to Vuejs.\n    Route::get('/login', 'LoginController@index')->name('auth.login');\n    Route::get('/password', 'LoginController@index')->name('auth.forgot-password');\n    Route::get('/password/reset/{token}', 'LoginController@index')->name('auth.reset');\n\n    // Apply a throttle to authentication action endpoints, in addition to the\n    // recaptcha endpoints to slow down manual attack spammers even more. \ud83e\udd37\u200d\n    //\n    // @see \\Pterodactyl\\Providers\\RouteServiceProvider\n    Route::middleware(['throttle:authentication'])->group(function () {\n        // Login endpoints.\n        Route::post('/login', 'LoginController@login')->middleware('recaptcha');\n        Route::post('/login/checkpoint', 'LoginCheckpointController')->name('auth.login-checkpoint');\n\n        // Forgot password route. A post to this endpoint will trigger an\n        // email to be sent containing a reset token.\n        Route::post('/password', 'ForgotPasswordController@sendResetLinkEmail')\n            ->name('auth.post.forgot-password')\n            ->middleware('recaptcha');\n    });\n\n    // Password reset routes. This endpoint is hit after going through\n    // the forgot password routes to acquire a token (or after an account\n    // is created).\n    Route::post('/password/reset', 'ResetPasswordController')->name('auth.reset-password');\n\n    // Catch any other combinations of routes and pass them off to the Vuejs component.\n    Route::fallback('LoginController@index');\n});\n\n/*\n|--------------------------------------------------------------------------\n| Routes Accessible only when logged in\n|--------------------------------------------------------------------------\n|\n| Endpoint: /auth\n|\n*/\nRoute::get('/logout', 'LoginController@logout')->name('auth.logout')->middleware('auth');\n"], "fixing_code": ["# Security Policy\n\n## Supported Versions\nThe following versions of Pterodactyl are receiving active support and maintenance. Any security vulnerabilities discovered must be reproducible in supported versions.\n\n| Panel | Daemon       | Supported          |\n| ----- | ------------ | ------------------ |\n| 1.6.x | wings@1.5.x  | :white_check_mark: |\n| 0.7.x | daemon@0.6.x | :x: |\n\n\n## Reporting a Vulnerability\n\nPlease reach out directly to any project team member on Discord when reporting a security vulnerability, or you can send an email to `dane@pterodactyl.io`.\n\nWe make every effort to respond as soon as possible, although it may take a day or two for us to sync internally and determine the severity of the report and its impact. Please, _do not_ use a public facing channel or GitHub issues to report sensitive security issues.\n\nAs part of our process, we will create a security advisory for the affected versions and disclose it publicly, usually two to four weeks after a releasing a version that addresses it.\n", "import * as React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCogs, faLayerGroup, faSignOutAlt, faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { useStoreState } from 'easy-peasy';\nimport { ApplicationStore } from '@/state';\nimport SearchContainer from '@/components/dashboard/search/SearchContainer';\nimport tw, { theme } from 'twin.macro';\nimport styled from 'styled-components/macro';\nimport http from '@/api/http';\nimport SpinnerOverlay from '@/components/elements/SpinnerOverlay';\nimport { useState } from 'react';\n\nconst Navigation = styled.div`\n    ${tw`w-full bg-neutral-900 shadow-md overflow-x-auto`};\n    \n    & > div {\n        ${tw`mx-auto w-full flex items-center`};\n    }\n    \n    & #logo {\n        ${tw`flex-1`};\n        \n        & > a {\n            ${tw`text-2xl font-header px-4 no-underline text-neutral-200 hover:text-neutral-100 transition-colors duration-150`};\n        }\n    }\n`;\n\nconst RightNavigation = styled.div`\n    ${tw`flex h-full items-center justify-center`};\n    \n    & > a, & > button, & > .navigation-link {\n        ${tw`flex items-center h-full no-underline text-neutral-300 px-6 cursor-pointer transition-all duration-150`};\n        \n        &:active, &:hover {\n            ${tw`text-neutral-100 bg-black`};\n        }\n        \n        &:active, &:hover, &.active {\n            box-shadow: inset 0 -2px ${theme`colors.cyan.700`.toString()};\n        }\n    }\n`;\n\nexport default () => {\n    const name = useStoreState((state: ApplicationStore) => state.settings.data!.name);\n    const rootAdmin = useStoreState((state: ApplicationStore) => state.user.data!.rootAdmin);\n    const [ isLoggingOut, setIsLoggingOut ] = useState(false);\n\n    const onTriggerLogout = () => {\n        setIsLoggingOut(true);\n        http.post('/auth/logout').finally(() => {\n            // @ts-ignore\n            window.location = '/';\n        });\n    };\n\n    return (\n        <Navigation>\n            <SpinnerOverlay visible={isLoggingOut} />\n            <div css={tw`mx-auto w-full flex items-center`} style={{ maxWidth: '1200px', height: '3.5rem' }}>\n                <div id={'logo'}>\n                    <Link to={'/'}>\n                        {name}\n                    </Link>\n                </div>\n                <RightNavigation>\n                    <SearchContainer/>\n                    <NavLink to={'/'} exact>\n                        <FontAwesomeIcon icon={faLayerGroup}/>\n                    </NavLink>\n                    <NavLink to={'/account'}>\n                        <FontAwesomeIcon icon={faUserCircle}/>\n                    </NavLink>\n                    {rootAdmin &&\n                    <a href={'/admin'} rel={'noreferrer'}>\n                        <FontAwesomeIcon icon={faCogs}/>\n                    </a>\n                    }\n                    <button onClick={onTriggerLogout}>\n                        <FontAwesomeIcon icon={faSignOutAlt}/>\n                    </button>\n                </RightNavigation>\n            </div>\n        </Navigation>\n    );\n};\n", "<?php\n\n/*\n|--------------------------------------------------------------------------\n| Authentication Routes\n|--------------------------------------------------------------------------\n|\n| Endpoint: /auth\n|\n*/\nRoute::group(['middleware' => 'guest'], function () {\n    // These routes are defined so that we can continue to reference them programatically.\n    // They all route to the same controller function which passes off to Vuejs.\n    Route::get('/login', 'LoginController@index')->name('auth.login');\n    Route::get('/password', 'LoginController@index')->name('auth.forgot-password');\n    Route::get('/password/reset/{token}', 'LoginController@index')->name('auth.reset');\n\n    // Apply a throttle to authentication action endpoints, in addition to the\n    // recaptcha endpoints to slow down manual attack spammers even more. \ud83e\udd37\u200d\n    //\n    // @see \\Pterodactyl\\Providers\\RouteServiceProvider\n    Route::middleware(['throttle:authentication'])->group(function () {\n        // Login endpoints.\n        Route::post('/login', 'LoginController@login')->middleware('recaptcha');\n        Route::post('/login/checkpoint', 'LoginCheckpointController')->name('auth.login-checkpoint');\n\n        // Forgot password route. A post to this endpoint will trigger an\n        // email to be sent containing a reset token.\n        Route::post('/password', 'ForgotPasswordController@sendResetLinkEmail')\n            ->name('auth.post.forgot-password')\n            ->middleware('recaptcha');\n    });\n\n    // Password reset routes. This endpoint is hit after going through\n    // the forgot password routes to acquire a token (or after an account\n    // is created).\n    Route::post('/password/reset', 'ResetPasswordController')->name('auth.reset-password');\n\n    // Catch any other combinations of routes and pass them off to the Vuejs component.\n    Route::fallback('LoginController@index');\n});\n\n/*\n|--------------------------------------------------------------------------\n| Routes Accessible only when logged in\n|--------------------------------------------------------------------------\n|\n| Endpoint: /auth\n|\n*/\nRoute::post('/logout', 'LoginController@logout')->name('auth.logout')->middleware('auth', 'csrf');\n"], "filenames": ["SECURITY.md", "resources/scripts/components/NavigationBar.tsx", "routes/auth.php"], "buggy_code_start_loc": [14, 9, 51], "buggy_code_end_loc": [15, 71, 52], "fixing_code_start_loc": [14, 10, 51], "fixing_code_end_loc": [15, 84, 52], "type": "CWE-352", "message": "Pterodactyl is an open-source game server management panel built with PHP 7, React, and Go. In affected versions of Pterodactyl a malicious user can trigger a user logout if a signed in user visits a malicious website that makes a request to the Panel's sign-out endpoint. This requires a targeted attack against a specific Panel instance, and serves only to sign a user out. **No user details are leaked, nor is any user data affected, this is simply an annoyance at worst.** This is fixed in version 1.6.3.", "other": {"cve": {"id": "CVE-2021-41176", "sourceIdentifier": "security-advisories@github.com", "published": "2021-10-25T17:15:09.380", "lastModified": "2021-10-28T19:50:58.587", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Pterodactyl is an open-source game server management panel built with PHP 7, React, and Go. In affected versions of Pterodactyl a malicious user can trigger a user logout if a signed in user visits a malicious website that makes a request to the Panel's sign-out endpoint. This requires a targeted attack against a specific Panel instance, and serves only to sign a user out. **No user details are leaked, nor is any user data affected, this is simply an annoyance at worst.** This is fixed in version 1.6.3."}, {"lang": "es", "value": "Pterodactyl es un panel de administraci\u00f3n de servidores de juegos de c\u00f3digo abierto construido con PHP 7, React y Go. En las versiones afectadas de Pterodactyl, un usuario malicioso puede desencadenar un cierre de sesi\u00f3n si un usuario que ha iniciado sesi\u00f3n visita un sitio web malicioso que realiza una petici\u00f3n al endpoint de cierre de sesi\u00f3n del Panel. Esto requiere un ataque dirigido contra una instancia espec\u00edfica del Panel y s\u00f3lo sirve para cerrar la sesi\u00f3n del usuario. **No son filtrados los detalles del usuario ni est\u00e1n afectados los datos del usuario; en el peor de los casos se trata simplemente de una molestia.** Esto es corregido en la versi\u00f3n 1.6.3"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:pterodactyl:panel:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.6.3", "matchCriteriaId": "FF3386D3-613D-47C9-BE15-C5E744A36799"}]}]}], "references": [{"url": "https://github.com/pterodactyl/panel/commit/45999ba4ee1b2dcb12b4a2fa2cedfb6b5d66fac2", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/pterodactyl/panel/releases/tag/v1.6.3", "source": "security-advisories@github.com", "tags": ["Product", "Third Party Advisory"]}, {"url": "https://github.com/pterodactyl/panel/security/advisories/GHSA-m49f-hcxp-6hm6", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/pterodactyl/panel/commit/45999ba4ee1b2dcb12b4a2fa2cedfb6b5d66fac2"}}