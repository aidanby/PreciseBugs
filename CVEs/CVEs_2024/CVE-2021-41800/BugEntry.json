{"buggy_code": ["<?php\n/**\n * Implements Special:Contributions\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n * http://www.gnu.org/copyleft/gpl.html\n *\n * @file\n * @ingroup SpecialPage\n */\n\nuse MediaWiki\\Block\\DatabaseBlock;\nuse MediaWiki\\Cache\\LinkBatchFactory;\nuse MediaWiki\\CommentFormatter\\CommentFormatter;\nuse MediaWiki\\HookContainer\\HookRunner;\nuse MediaWiki\\MediaWikiServices;\nuse MediaWiki\\Permissions\\PermissionManager;\nuse MediaWiki\\Revision\\RevisionStore;\nuse MediaWiki\\User\\UserFactory;\nuse MediaWiki\\User\\UserNamePrefixSearch;\nuse MediaWiki\\User\\UserNameUtils;\nuse MediaWiki\\User\\UserOptionsLookup;\nuse Wikimedia\\IPUtils;\nuse Wikimedia\\Rdbms\\ILoadBalancer;\n\n/**\n * Special:Contributions, show user contributions in a paged list\n *\n * @ingroup SpecialPage\n */\nclass SpecialContributions extends IncludableSpecialPage {\n\tprotected $opts;\n\n\t/** @var LinkBatchFactory */\n\tprivate $linkBatchFactory;\n\n\t/** @var PermissionManager */\n\tprivate $permissionManager;\n\n\t/** @var ILoadBalancer */\n\tprivate $loadBalancer;\n\n\t/** @var ActorMigration */\n\tprivate $actorMigration;\n\n\t/** @var RevisionStore */\n\tprivate $revisionStore;\n\n\t/** @var NamespaceInfo */\n\tprivate $namespaceInfo;\n\n\t/** @var UserNameUtils */\n\tprivate $userNameUtils;\n\n\t/** @var UserNamePrefixSearch */\n\tprivate $userNamePrefixSearch;\n\n\t/** @var UserOptionsLookup */\n\tprivate $userOptionsLookup;\n\n\t/** @var CommentFormatter */\n\tprivate $commentFormatter;\n\n\t/** @var UserFactory */\n\tprivate $userFactory;\n\n\t/** @var ContribsPager|null */\n\tprivate $pager = null;\n\n\t/**\n\t * @param LinkBatchFactory|null $linkBatchFactory\n\t * @param PermissionManager|null $permissionManager\n\t * @param ILoadBalancer|null $loadBalancer\n\t * @param ActorMigration|null $actorMigration\n\t * @param RevisionStore|null $revisionStore\n\t * @param NamespaceInfo|null $namespaceInfo\n\t * @param UserNameUtils|null $userNameUtils\n\t * @param UserNamePrefixSearch|null $userNamePrefixSearch\n\t * @param UserOptionsLookup|null $userOptionsLookup\n\t * @param CommentFormatter|null $commentFormatter\n\t * @param UserFactory|null $userFactory\n\t */\n\tpublic function __construct(\n\t\tLinkBatchFactory $linkBatchFactory = null,\n\t\tPermissionManager $permissionManager = null,\n\t\tILoadBalancer $loadBalancer = null,\n\t\tActorMigration $actorMigration = null,\n\t\tRevisionStore $revisionStore = null,\n\t\tNamespaceInfo $namespaceInfo = null,\n\t\tUserNameUtils $userNameUtils = null,\n\t\tUserNamePrefixSearch $userNamePrefixSearch = null,\n\t\tUserOptionsLookup $userOptionsLookup = null,\n\t\tCommentFormatter $commentFormatter = null,\n\t\tUserFactory $userFactory = null\n\t) {\n\t\tparent::__construct( 'Contributions' );\n\t\t// This class is extended and therefore falls back to global state - T269521\n\t\t$services = MediaWikiServices::getInstance();\n\t\t$this->linkBatchFactory = $linkBatchFactory ?? $services->getLinkBatchFactory();\n\t\t$this->permissionManager = $permissionManager ?? $services->getPermissionManager();\n\t\t$this->loadBalancer = $loadBalancer ?? $services->getDBLoadBalancer();\n\t\t$this->actorMigration = $actorMigration ?? $services->getActorMigration();\n\t\t$this->revisionStore = $revisionStore ?? $services->getRevisionStore();\n\t\t$this->namespaceInfo = $namespaceInfo ?? $services->getNamespaceInfo();\n\t\t$this->userNameUtils = $userNameUtils ?? $services->getUserNameUtils();\n\t\t$this->userNamePrefixSearch = $userNamePrefixSearch ?? $services->getUserNamePrefixSearch();\n\t\t$this->userOptionsLookup = $userOptionsLookup ?? $services->getUserOptionsLookup();\n\t\t$this->commentFormatter = $commentFormatter ?? $services->getCommentFormatter();\n\t\t$this->userFactory = $userFactory ?? $services->getUserFactory();\n\t}\n\n\tpublic function execute( $par ) {\n\t\t$this->setHeaders();\n\t\t$this->outputHeader();\n\t\t$out = $this->getOutput();\n\t\t// Modules required for viewing the list of contributions (also when included on other pages)\n\t\t$out->addModuleStyles( [\n\t\t\t'jquery.makeCollapsible.styles',\n\t\t\t'mediawiki.interface.helpers.styles',\n\t\t\t'mediawiki.special',\n\t\t\t'mediawiki.special.changeslist',\n\t\t] );\n\t\t$out->addModules( [\n\t\t\t'mediawiki.special.recentchanges',\n\t\t\t// Certain skins e.g. Minerva might have disabled this module.\n\t\t\t'mediawiki.page.ready'\n\t\t] );\n\t\t$this->addHelpLink( 'Help:User contributions' );\n\n\t\t$this->opts = [];\n\t\t$request = $this->getRequest();\n\n\t\t$target = $par ?? $request->getVal( 'target' );\n\n\t\t$this->opts['deletedOnly'] = $request->getBool( 'deletedOnly' );\n\n\t\tif ( !strlen( $target ) ) {\n\t\t\tif ( !$this->including() ) {\n\t\t\t\t$out->addHTML( $this->getForm( $this->opts ) );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t$user = $this->getUser();\n\n\t\t$this->opts['limit'] = $request->getInt( 'limit', $this->userOptionsLookup->getIntOption( $user, 'rclimit' ) );\n\t\t$this->opts['target'] = $target;\n\t\t$this->opts['topOnly'] = $request->getBool( 'topOnly' );\n\t\t$this->opts['newOnly'] = $request->getBool( 'newOnly' );\n\t\t$this->opts['hideMinor'] = $request->getBool( 'hideMinor' );\n\n\t\t$ns = $request->getVal( 'namespace', null );\n\t\tif ( $ns !== null && $ns !== '' && $ns !== 'all' ) {\n\t\t\t$this->opts['namespace'] = intval( $ns );\n\t\t} else {\n\t\t\t$this->opts['namespace'] = '';\n\t\t}\n\n\t\t// Backwards compatibility: Before using OOUI form the old HTML form had\n\t\t// fields for nsInvert and associated. These have now been replaced with the\n\t\t// wpFilters query string parameters. These are retained to keep old URIs working.\n\t\t$this->opts['associated'] = $request->getBool( 'associated' );\n\t\t$this->opts['nsInvert'] = (bool)$request->getVal( 'nsInvert' );\n\t\t$nsFilters = $request->getArray( 'wpfilters', null );\n\t\tif ( $nsFilters !== null ) {\n\t\t\t$this->opts['associated'] = in_array( 'associated', $nsFilters );\n\t\t\t$this->opts['nsInvert'] = in_array( 'nsInvert', $nsFilters );\n\t\t}\n\n\t\t$this->opts['tagfilter'] = (string)$request->getVal( 'tagfilter' );\n\n\t\t// Allows reverts to have the bot flag in recent changes. It is just here to\n\t\t// be passed in the form at the top of the page\n\t\tif ( $this->permissionManager->userHasRight( $user, 'markbotedits' ) && $request->getBool( 'bot' ) ) {\n\t\t\t$this->opts['bot'] = '1';\n\t\t}\n\n\t\t$skip = $request->getText( 'offset' ) || $request->getText( 'dir' ) == 'prev';\n\t\t# Offset overrides year/month selection\n\t\tif ( !$skip ) {\n\t\t\t$this->opts['year'] = $request->getVal( 'year' );\n\t\t\t$this->opts['month'] = $request->getVal( 'month' );\n\n\t\t\t$this->opts['start'] = $request->getVal( 'start' );\n\t\t\t$this->opts['end'] = $request->getVal( 'end' );\n\t\t}\n\n\t\t$id = 0;\n\t\tif ( ExternalUserNames::isExternal( $target ) ) {\n\t\t\t$userObj = $this->userFactory->newFromName( $target, UserFactory::RIGOR_NONE );\n\t\t\tif ( !$userObj ) {\n\t\t\t\t$out->addHTML( $this->getForm( $this->opts ) );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$out->addSubtitle( $this->contributionsSub( $userObj, $target ) );\n\t\t\t$out->setPageTitle( $this->msg( 'contributions-title', $target ) );\n\t\t} else {\n\t\t\t$nt = Title::makeTitleSafe( NS_USER, $target );\n\t\t\tif ( !$nt ) {\n\t\t\t\t$out->addHTML( $this->getForm( $this->opts ) );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$userObj = $this->userFactory->newFromName( $nt->getText(), UserFactory::RIGOR_NONE );\n\t\t\tif ( !$userObj ) {\n\t\t\t\t$out->addHTML( $this->getForm( $this->opts ) );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$id = $userObj->getId();\n\n\t\t\t$target = $nt->getText();\n\t\t\t$out->addSubtitle( $this->contributionsSub( $userObj, $target ) );\n\t\t\t$out->setPageTitle( $this->msg( 'contributions-title', $target ) );\n\n\t\t\t# For IP ranges, we want the contributionsSub, but not the skin-dependent\n\t\t\t# links under 'Tools', which may include irrelevant links like 'Logs'.\n\t\t\tif ( !IPUtils::isValidRange( $target ) &&\n\t\t\t\t( $this->userNameUtils->isIP( $target ) || $userObj->isRegistered() )\n\t\t\t) {\n\t\t\t\t// Don't add non-existent users, because hidden users\n\t\t\t\t// that we add here will be removed later to pretend\n\t\t\t\t// that they don't exist, and if users that actually don't\n\t\t\t\t// exist are added here and then not removed, it exposes\n\t\t\t\t// which users exist and are hidden vs. which actually don't\n\t\t\t\t// exist. But, do set the relevant user for single IPs.\n\t\t\t\t$this->getSkin()->setRelevantUser( $userObj );\n\t\t\t}\n\t\t}\n\n\t\t$this->opts = ContribsPager::processDateFilter( $this->opts );\n\n\t\tif ( $this->opts['namespace'] !== '' && $this->opts['namespace'] < NS_MAIN ) {\n\t\t\t$this->getOutput()->wrapWikiMsg(\n\t\t\t\t\"<div class=\\\"mw-negative-namespace-not-supported error\\\">\\n\\$1\\n</div>\",\n\t\t\t\t[ 'negative-namespace-not-supported' ]\n\t\t\t);\n\t\t\t$out->addHTML( $this->getForm( $this->opts ) );\n\t\t\treturn;\n\t\t}\n\n\t\t$feedType = $request->getVal( 'feed' );\n\n\t\t$feedParams = [\n\t\t\t'action' => 'feedcontributions',\n\t\t\t'user' => $target,\n\t\t];\n\t\tif ( $this->opts['topOnly'] ) {\n\t\t\t$feedParams['toponly'] = true;\n\t\t}\n\t\tif ( $this->opts['newOnly'] ) {\n\t\t\t$feedParams['newonly'] = true;\n\t\t}\n\t\tif ( $this->opts['hideMinor'] ) {\n\t\t\t$feedParams['hideminor'] = true;\n\t\t}\n\t\tif ( $this->opts['deletedOnly'] ) {\n\t\t\t$feedParams['deletedonly'] = true;\n\t\t}\n\t\tif ( $this->opts['tagfilter'] !== '' ) {\n\t\t\t$feedParams['tagfilter'] = $this->opts['tagfilter'];\n\t\t}\n\t\tif ( $this->opts['namespace'] !== '' ) {\n\t\t\t$feedParams['namespace'] = $this->opts['namespace'];\n\t\t}\n\t\t// Don't use year and month for the feed URL, but pass them on if\n\t\t// we redirect to API (if $feedType is specified)\n\t\tif ( $feedType && isset( $this->opts['year'] ) ) {\n\t\t\t$feedParams['year'] = $this->opts['year'];\n\t\t}\n\t\tif ( $feedType && isset( $this->opts['month'] ) ) {\n\t\t\t$feedParams['month'] = $this->opts['month'];\n\t\t}\n\n\t\tif ( $feedType ) {\n\t\t\t// Maintain some level of backwards compatibility\n\t\t\t// If people request feeds using the old parameters, redirect to API\n\t\t\t$feedParams['feedformat'] = $feedType;\n\t\t\t$url = wfAppendQuery( wfScript( 'api' ), $feedParams );\n\n\t\t\t$out->redirect( $url, '301' );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Add RSS/atom links\n\t\t$this->addFeedLinks( $feedParams );\n\n\t\tif ( $this->getHookRunner()->onSpecialContributionsBeforeMainOutput(\n\t\t\t$id, $userObj, $this )\n\t\t) {\n\t\t\tif ( !$this->including() ) {\n\t\t\t\t$out->addHTML( $this->getForm( $this->opts ) );\n\t\t\t}\n\t\t\t$pager = $this->getPager( $userObj );\n\t\t\tif ( IPUtils::isValidRange( $target ) && !$pager->isQueryableRange( $target ) ) {\n\t\t\t\t// Valid range, but outside CIDR limit.\n\t\t\t\t$limits = $this->getConfig()->get( 'RangeContributionsCIDRLimit' );\n\t\t\t\t$limit = $limits[ IPUtils::isIPv4( $target ) ? 'IPv4' : 'IPv6' ];\n\t\t\t\t$out->addWikiMsg( 'sp-contributions-outofrange', $limit );\n\t\t\t} elseif ( !$pager->getNumRows() ) {\n\t\t\t\t$out->addWikiMsg( 'nocontribs', $target );\n\t\t\t} else {\n\t\t\t\t// @todo We just want a wiki ID here, not a \"DB domain\", but\n\t\t\t\t// current status of MediaWiki conflates the two. See T235955.\n\t\t\t\t$poolKey = $this->loadBalancer->getLocalDomainID() . ':SpecialContributions:';\n\t\t\t\tif ( $this->getUser()->isAnon() ) {\n\t\t\t\t\t$poolKey .= 'a:' . $this->getUser()->getName();\n\t\t\t\t} else {\n\t\t\t\t\t$poolKey .= 'u:' . $this->getUser()->getId();\n\t\t\t\t}\n\t\t\t\t$work = new PoolCounterWorkViaCallback( 'SpecialContributions', $poolKey, [\n\t\t\t\t\t'doWork' => function () use ( $pager, $out ) {\n\t\t\t\t\t\t# Show a message about replica DB lag, if applicable\n\t\t\t\t\t\t$lag = $pager->getDatabase()->getSessionLagStatus()['lag'];\n\t\t\t\t\t\tif ( $lag > 0 ) {\n\t\t\t\t\t\t\t$out->showLagWarning( $lag );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$output = $pager->getBody();\n\t\t\t\t\t\tif ( !$this->including() ) {\n\t\t\t\t\t\t\t$output = $pager->getNavigationBar() .\n\t\t\t\t\t\t\t\t$output .\n\t\t\t\t\t\t\t\t$pager->getNavigationBar();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$out->addHTML( $output );\n\t\t\t\t\t},\n\t\t\t\t\t'error' => function () use ( $out ) {\n\t\t\t\t\t\t$msg = $this->getUser()->isAnon()\n\t\t\t\t\t\t\t? 'sp-contributions-concurrency-ip'\n\t\t\t\t\t\t\t: 'sp-contributions-concurrency-user';\n\t\t\t\t\t\t$out->wrapWikiMsg( \"<div class='errorbox'>\\n$1\\n</div>\", $msg );\n\t\t\t\t\t}\n\t\t\t\t] );\n\t\t\t\t$work->execute();\n\t\t\t}\n\n\t\t\t$out->preventClickjacking( $pager->getPreventClickjacking() );\n\n\t\t\t# Show the appropriate \"footer\" message - WHOIS tools, etc.\n\t\t\tif ( IPUtils::isValidRange( $target ) && $pager->isQueryableRange( $target ) ) {\n\t\t\t\t$message = 'sp-contributions-footer-anon-range';\n\t\t\t} elseif ( IPUtils::isIPAddress( $target ) ) {\n\t\t\t\t$message = 'sp-contributions-footer-anon';\n\t\t\t} elseif ( $userObj->isAnon() ) {\n\t\t\t\t// No message for non-existing users\n\t\t\t\t$message = '';\n\t\t\t} elseif ( $userObj->isHidden() &&\n\t\t\t\t!$this->permissionManager->userHasRight( $this->getUser(), 'hideuser' )\n\t\t\t) {\n\t\t\t\t// User is registered, but make sure that the viewer can see them, to avoid\n\t\t\t\t// having different behavior for missing and hidden users; see T120883\n\t\t\t\t$message = '';\n\t\t\t} else {\n\t\t\t\t// Not hidden, or hidden but the viewer can still see it\n\t\t\t\t$message = 'sp-contributions-footer';\n\t\t\t}\n\n\t\t\tif ( $message && !$this->including() && !$this->msg( $message, $target )->isDisabled() ) {\n\t\t\t\t$out->wrapWikiMsg(\n\t\t\t\t\t\"<div class='mw-contributions-footer'>\\n$1\\n</div>\",\n\t\t\t\t\t[ $message, $target ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Generates the subheading with links\n\t * @param User $userObj User object for the target\n\t * @param string $targetName This mostly the same as $userObj->getName() but\n\t * normalization may make it differ. // T272225\n\t * @return string Appropriately-escaped HTML to be output literally\n\t * @todo FIXME: Almost the same as getSubTitle in SpecialDeletedContributions.php.\n\t * Could be combined.\n\t */\n\tprotected function contributionsSub( $userObj, $targetName ) {\n\t\t$isAnon = $userObj->isAnon();\n\t\tif ( !$isAnon && $userObj->isHidden() &&\n\t\t\t!$this->permissionManager->userHasRight( $this->getUser(), 'hideuser' )\n\t\t) {\n\t\t\t// T120883 if the user is hidden and the viewer cannot see hidden\n\t\t\t// users, pretend like it does not exist at all.\n\t\t\t$isAnon = true;\n\t\t}\n\n\t\tif ( $isAnon ) {\n\t\t\t// Show a warning message that the user being searched for doesn't exist.\n\t\t\t// UserNameUtils::isIP returns true for IP address and usemod IPs like '123.123.123.xxx',\n\t\t\t// but returns false for IP ranges. We don't want to suggest either of these are\n\t\t\t// valid usernames which we would with the 'contributions-userdoesnotexist' message.\n\t\t\tif ( !$this->userNameUtils->isIP( $userObj->getName() )\n\t\t\t\t&& !IPUtils::isValidRange( $userObj->getName() )\n\t\t\t) {\n\t\t\t\t$this->getOutput()->wrapWikiMsg(\n\t\t\t\t\t\"<div class=\\\"mw-userpage-userdoesnotexist error\\\">\\n\\$1\\n</div>\",\n\t\t\t\t\t[\n\t\t\t\t\t\t'contributions-userdoesnotexist',\n\t\t\t\t\t\twfEscapeWikiText( $userObj->getName() ),\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t\tif ( !$this->including() ) {\n\t\t\t\t\t$this->getOutput()->setStatusCode( 404 );\n\t\t\t\t}\n\t\t\t}\n\t\t\t$user = htmlspecialchars( $userObj->getName() );\n\t\t} else {\n\t\t\t$user = $this->getLinkRenderer()->makeLink( $userObj->getUserPage(), $userObj->getName() );\n\t\t}\n\t\t$nt = $userObj->getUserPage();\n\t\t$talk = $userObj->getTalkPage();\n\t\t$links = '';\n\n\t\t// T211910. Don't show action links if a range is outside block limit\n\t\t$showForIp = IPUtils::isValid( $userObj ) ||\n\t\t\t( IPUtils::isValidRange( $userObj ) && $this->getPager( $userObj )->isQueryableRange( $userObj ) );\n\n\t\t// T276306. if the user is hidden and the viewer cannot see hidden, pretend that it does not exist\n\t\t$registeredAndVisible = $userObj->isRegistered() && ( !$userObj->isHidden()\n\t\t\t\t|| $this->permissionManager->userHasRight( $this->getUser(), 'hideuser' ) );\n\n\t\tif ( $talk && ( $registeredAndVisible || $showForIp ) ) {\n\t\t\t$tools = self::getUserLinks(\n\t\t\t\t$this,\n\t\t\t\t$userObj,\n\t\t\t\t$this->permissionManager,\n\t\t\t\t$this->getHookRunner()\n\t\t\t);\n\t\t\t$links = Html::openElement( 'span', [ 'class' => 'mw-changeslist-links' ] );\n\t\t\tforeach ( $tools as $tool ) {\n\t\t\t\t$links .= Html::rawElement( 'span', [], $tool ) . ' ';\n\t\t\t}\n\t\t\t$links = trim( $links ) . Html::closeElement( 'span' );\n\n\t\t\t// Show a note if the user is blocked and display the last block log entry.\n\t\t\t// Do not expose the autoblocks, since that may lead to a leak of accounts' IPs,\n\t\t\t// and also this will display a totally irrelevant log entry as a current block.\n\t\t\tif ( !$this->including() ) {\n\t\t\t\t// For IP ranges you must give DatabaseBlock::newFromTarget the CIDR string\n\t\t\t\t// and not a user object.\n\t\t\t\tif ( IPUtils::isValidRange( $userObj->getName() ) ) {\n\t\t\t\t\t$block = DatabaseBlock::newFromTarget( $userObj->getName(), $userObj->getName() );\n\t\t\t\t} else {\n\t\t\t\t\t$block = DatabaseBlock::newFromTarget( $userObj, $userObj );\n\t\t\t\t}\n\n\t\t\t\tif ( $block !== null && $block->getType() != DatabaseBlock::TYPE_AUTO ) {\n\t\t\t\t\tif ( $block->getType() == DatabaseBlock::TYPE_RANGE ) {\n\t\t\t\t\t\t$nt = $this->namespaceInfo->getCanonicalName( NS_USER )\n\t\t\t\t\t\t\t. ':' . $block->getTargetName();\n\t\t\t\t\t}\n\n\t\t\t\t\t$out = $this->getOutput(); // showLogExtract() wants first parameter by reference\n\t\t\t\t\tif ( $userObj->isAnon() ) {\n\t\t\t\t\t\t$msgKey = $block->isSitewide() ?\n\t\t\t\t\t\t\t'sp-contributions-blocked-notice-anon' :\n\t\t\t\t\t\t\t'sp-contributions-blocked-notice-anon-partial';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$msgKey = $block->isSitewide() ?\n\t\t\t\t\t\t\t'sp-contributions-blocked-notice' :\n\t\t\t\t\t\t\t'sp-contributions-blocked-notice-partial';\n\t\t\t\t\t}\n\t\t\t\t\t// Allow local styling overrides for different types of block\n\t\t\t\t\t$class = $block->isSitewide() ?\n\t\t\t\t\t\t'mw-contributions-blocked-notice' :\n\t\t\t\t\t\t'mw-contributions-blocked-notice-partial';\n\t\t\t\t\tLogEventsList::showLogExtract(\n\t\t\t\t\t\t$out,\n\t\t\t\t\t\t'block',\n\t\t\t\t\t\t$nt,\n\t\t\t\t\t\t'',\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'lim' => 1,\n\t\t\t\t\t\t\t'showIfEmpty' => false,\n\t\t\t\t\t\t\t'msgKey' => [\n\t\t\t\t\t\t\t\t$msgKey,\n\t\t\t\t\t\t\t\t$userObj->getName() # Support GENDER in 'sp-contributions-blocked-notice'\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t'offset' => '', # don't use WebRequest parameter offset\n\t\t\t\t\t\t\t'wrap' => Html::rawElement(\n\t\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t\t[ 'class' => $class ],\n\t\t\t\t\t\t\t\t'$1'\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Html::rawElement( 'div', [ 'class' => 'mw-contributions-user-tools' ],\n\t\t\t$this->msg( 'contributions-subtitle' )->rawParams( $user )->params( $userObj->getName() )\n\t\t\t. ' ' . $links\n\t\t);\n\t}\n\n\t/**\n\t * Links to different places.\n\t *\n\t * @note This function is also called in DeletedContributionsPage\n\t * @param SpecialPage $sp SpecialPage instance, for context\n\t * @param User $target Target user object\n\t * @param PermissionManager|null $permissionManager (Since 1.36)\n\t * @param HookRunner|null $hookRunner (Since 1.36)\n\t * @return array\n\t */\n\tpublic static function getUserLinks(\n\t\tSpecialPage $sp,\n\t\tUser $target,\n\t\tPermissionManager $permissionManager = null,\n\t\tHookRunner $hookRunner = null\n\t) {\n\t\t// Fallback to global state, if not provided\n\t\t$permissionManager = $permissionManager ?? MediaWikiServices::getInstance()->getPermissionManager();\n\t\t$hookRunner = $hookRunner ?? Hooks::runner();\n\n\t\t$id = $target->getId();\n\t\t$username = $target->getName();\n\t\t$userpage = $target->getUserPage();\n\t\t$talkpage = $target->getTalkPage();\n\t\t$isIP = IPUtils::isValid( $username );\n\t\t$isRange = IPUtils::isValidRange( $username );\n\n\t\t$linkRenderer = $sp->getLinkRenderer();\n\n\t\t$tools = [];\n\t\t# No talk pages for IP ranges.\n\t\tif ( !$isRange ) {\n\t\t\t$tools['user-talk'] = $linkRenderer->makeLink(\n\t\t\t\t$talkpage,\n\t\t\t\t$sp->msg( 'sp-contributions-talk' )->text()\n\t\t\t);\n\t\t}\n\n\t\t# Block / Change block / Unblock links\n\t\tif ( $permissionManager->userHasRight( $sp->getUser(), 'block' ) ) {\n\t\t\tif ( $target->getBlock() && $target->getBlock()->getType() != DatabaseBlock::TYPE_AUTO ) {\n\t\t\t\t$tools['block'] = $linkRenderer->makeKnownLink( # Change block link\n\t\t\t\t\tSpecialPage::getTitleFor( 'Block', $username ),\n\t\t\t\t\t$sp->msg( 'change-blocklink' )->text()\n\t\t\t\t);\n\t\t\t\t$tools['unblock'] = $linkRenderer->makeKnownLink( # Unblock link\n\t\t\t\t\tSpecialPage::getTitleFor( 'Unblock', $username ),\n\t\t\t\t\t$sp->msg( 'unblocklink' )->text()\n\t\t\t\t);\n\t\t\t} else { # User is not blocked\n\t\t\t\t$tools['block'] = $linkRenderer->makeKnownLink( # Block link\n\t\t\t\t\tSpecialPage::getTitleFor( 'Block', $username ),\n\t\t\t\t\t$sp->msg( 'blocklink' )->text()\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t# Block log link\n\t\t$tools['log-block'] = $linkRenderer->makeKnownLink(\n\t\t\tSpecialPage::getTitleFor( 'Log', 'block' ),\n\t\t\t$sp->msg( 'sp-contributions-blocklog' )->text(),\n\t\t\t[],\n\t\t\t[ 'page' => $userpage->getPrefixedText() ]\n\t\t);\n\n\t\t# Suppression log link (T61120)\n\t\tif ( $permissionManager->userHasRight( $sp->getUser(), 'suppressionlog' ) ) {\n\t\t\t$tools['log-suppression'] = $linkRenderer->makeKnownLink(\n\t\t\t\tSpecialPage::getTitleFor( 'Log', 'suppress' ),\n\t\t\t\t$sp->msg( 'sp-contributions-suppresslog', $username )->text(),\n\t\t\t\t[],\n\t\t\t\t[ 'offender' => $username ]\n\t\t\t);\n\t\t}\n\n\t\t# Don't show some links for IP ranges\n\t\tif ( !$isRange ) {\n\t\t\t# Uploads: hide if IPs cannot upload (T220674)\n\t\t\tif ( !$isIP || $permissionManager->userHasRight( $target, 'upload' ) ) {\n\t\t\t\t$tools['uploads'] = $linkRenderer->makeKnownLink(\n\t\t\t\t\tSpecialPage::getTitleFor( 'Listfiles', $username ),\n\t\t\t\t\t$sp->msg( 'sp-contributions-uploads' )->text()\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t# Other logs link\n\t\t\t# Todo: T146628\n\t\t\t$tools['logs'] = $linkRenderer->makeKnownLink(\n\t\t\t\tSpecialPage::getTitleFor( 'Log', $username ),\n\t\t\t\t$sp->msg( 'sp-contributions-logs' )->text()\n\t\t\t);\n\n\t\t\t# Add link to deleted user contributions for priviledged users\n\t\t\t# Todo: T183457\n\t\t\tif ( $permissionManager->userHasRight( $sp->getUser(), 'deletedhistory' ) ) {\n\t\t\t\t$tools['deletedcontribs'] = $linkRenderer->makeKnownLink(\n\t\t\t\t\tSpecialPage::getTitleFor( 'DeletedContributions', $username ),\n\t\t\t\t\t$sp->msg( 'sp-contributions-deleted', $username )->text()\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t# Add a link to change user rights for privileged users\n\t\t$userrightsPage = new UserrightsPage();\n\t\t$userrightsPage->setContext( $sp->getContext() );\n\t\tif ( $userrightsPage->userCanChangeRights( $target ) ) {\n\t\t\t$tools['userrights'] = $linkRenderer->makeKnownLink(\n\t\t\t\tSpecialPage::getTitleFor( 'Userrights', $username ),\n\t\t\t\t$sp->msg( 'sp-contributions-userrights', $username )->text()\n\t\t\t);\n\t\t}\n\n\t\t$hookRunner->onContributionsToolLinks( $id, $userpage, $tools, $sp );\n\n\t\treturn $tools;\n\t}\n\n\t/**\n\t * Generates the namespace selector form with hidden attributes.\n\t * @param array $pagerOptions with keys contribs, user, deletedOnly, limit, target, topOnly,\n\t *  newOnly, hideMinor, namespace, associated, nsInvert, tagfilter, year, start, end\n\t * @return string HTML fragment\n\t */\n\tprotected function getForm( array $pagerOptions ) {\n\t\t$this->opts['title'] = $this->getPageTitle()->getPrefixedText();\n\t\t// Modules required only for the form\n\t\t$this->getOutput()->addModules( [\n\t\t\t'mediawiki.special.contributions',\n\t\t] );\n\t\t$this->getOutput()->addModuleStyles( 'mediawiki.widgets.DateInputWidget.styles' );\n\t\t$this->getOutput()->enableOOUI();\n\t\t$fields = [];\n\n\t\t# Add hidden params for tracking except for parameters in $skipParameters\n\t\t$skipParameters = [\n\t\t\t'namespace',\n\t\t\t'nsInvert',\n\t\t\t'deletedOnly',\n\t\t\t'target',\n\t\t\t'year',\n\t\t\t'month',\n\t\t\t'start',\n\t\t\t'end',\n\t\t\t'topOnly',\n\t\t\t'newOnly',\n\t\t\t'hideMinor',\n\t\t\t'associated',\n\t\t\t'tagfilter'\n\t\t];\n\n\t\tforeach ( $this->opts as $name => $value ) {\n\t\t\tif ( in_array( $name, $skipParameters ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$fields[$name] = [\n\t\t\t\t'name' => $name,\n\t\t\t\t'type' => 'hidden',\n\t\t\t\t'default' => $value,\n\t\t\t];\n\t\t}\n\n\t\t$target = $this->opts['target'] ?? null;\n\t\t$fields['target'] = [\n\t\t\t'type' => 'user',\n\t\t\t'default' => $target ?\n\t\t\t\tstr_replace( '_', ' ', $target ) : '' ,\n\t\t\t'label' => $this->msg( 'sp-contributions-username' )->text(),\n\t\t\t'name' => 'target',\n\t\t\t'id' => 'mw-target-user-or-ip',\n\t\t\t'size' => 40,\n\t\t\t'autofocus' => !$target,\n\t\t\t'section' => 'contribs-top',\n\t\t];\n\n\t\t$ns = $this->opts['namespace'] ?? null;\n\t\t$fields['namespace'] = [\n\t\t\t'type' => 'namespaceselect',\n\t\t\t'label' => $this->msg( 'namespace' )->text(),\n\t\t\t'name' => 'namespace',\n\t\t\t'cssclass' => 'namespaceselector',\n\t\t\t'default' => $ns,\n\t\t\t'id' => 'namespace',\n\t\t\t'section' => 'contribs-top',\n\t\t];\n\t\t$fields['nsFilters'] = [\n\t\t\t'class' => HTMLMultiSelectField::class,\n\t\t\t'label' => '',\n\t\t\t'name' => 'wpfilters',\n\t\t\t'flatlist' => true,\n\t\t\t// Only shown when namespaces are selected.\n\t\t\t'cssclass' => $ns === '' ?\n\t\t\t\t'contribs-ns-filters mw-input-with-label mw-input-hidden' :\n\t\t\t\t'contribs-ns-filters mw-input-with-label',\n\t\t\t// `contribs-ns-filters` class allows these fields to be toggled on/off by JavaScript.\n\t\t\t// See resources/src/mediawiki.special.recentchanges.js\n\t\t\t'infusable' => true,\n\t\t\t'options-messages' => [\n\t\t\t\t'invert' => 'nsInvert',\n\t\t\t\t'namespace_association' => 'associated',\n\t\t\t],\n\t\t\t'section' => 'contribs-top',\n\t\t];\n\t\t$fields['tagfilter'] = [\n\t\t\t'type' => 'tagfilter',\n\t\t\t'cssclass' => 'mw-tagfilter-input',\n\t\t\t'id' => 'tagfilter',\n\t\t\t'label-message' => [ 'tag-filter', 'parse' ],\n\t\t\t'name' => 'tagfilter',\n\t\t\t'size' => 20,\n\t\t\t'section' => 'contribs-top',\n\t\t];\n\n\t\tif ( $this->permissionManager->userHasRight( $this->getUser(), 'deletedhistory' ) ) {\n\t\t\t$fields['deletedOnly'] = [\n\t\t\t\t'type' => 'check',\n\t\t\t\t'id' => 'mw-show-deleted-only',\n\t\t\t\t'label' => $this->msg( 'history-show-deleted' )->text(),\n\t\t\t\t'name' => 'deletedOnly',\n\t\t\t\t'section' => 'contribs-top',\n\t\t\t];\n\t\t}\n\n\t\t$fields['topOnly'] = [\n\t\t\t'type' => 'check',\n\t\t\t'id' => 'mw-show-top-only',\n\t\t\t'label' => $this->msg( 'sp-contributions-toponly' )->text(),\n\t\t\t'name' => 'topOnly',\n\t\t\t'section' => 'contribs-top',\n\t\t];\n\t\t$fields['newOnly'] = [\n\t\t\t'type' => 'check',\n\t\t\t'id' => 'mw-show-new-only',\n\t\t\t'label' => $this->msg( 'sp-contributions-newonly' )->text(),\n\t\t\t'name' => 'newOnly',\n\t\t\t'section' => 'contribs-top',\n\t\t];\n\t\t$fields['hideMinor'] = [\n\t\t\t'type' => 'check',\n\t\t\t'cssclass' => 'mw-hide-minor-edits',\n\t\t\t'id' => 'mw-show-new-only',\n\t\t\t'label' => $this->msg( 'sp-contributions-hideminor' )->text(),\n\t\t\t'name' => 'hideMinor',\n\t\t\t'section' => 'contribs-top',\n\t\t];\n\n\t\t// Allow additions at this point to the filters.\n\t\t$rawFilters = [];\n\t\t$this->getHookRunner()->onSpecialContributions__getForm__filters(\n\t\t\t$this, $rawFilters );\n\t\tforeach ( $rawFilters as $filter ) {\n\t\t\t// Backwards compatibility support for previous hook function signature.\n\t\t\tif ( is_string( $filter ) ) {\n\t\t\t\t$fields[] = [\n\t\t\t\t\t'type' => 'info',\n\t\t\t\t\t'default' => $filter,\n\t\t\t\t\t'raw' => true,\n\t\t\t\t\t'section' => 'contribs-top',\n\t\t\t\t];\n\t\t\t\twfDeprecated(\n\t\t\t\t\t'A SpecialContributions::getForm::filters hook handler returned ' .\n\t\t\t\t\t'an array of strings, this is deprecated since MediaWiki 1.33',\n\t\t\t\t\t'1.33', false, false\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// Preferred append method.\n\t\t\t\t$fields[] = $filter;\n\t\t\t}\n\t\t}\n\n\t\t$fields['start'] = [\n\t\t\t'type' => 'date',\n\t\t\t'default' => '',\n\t\t\t'id' => 'mw-date-start',\n\t\t\t'label' => $this->msg( 'date-range-from' )->text(),\n\t\t\t'name' => 'start',\n\t\t\t'section' => 'contribs-date',\n\t\t];\n\t\t$fields['end'] = [\n\t\t\t'type' => 'date',\n\t\t\t'default' => '',\n\t\t\t'id' => 'mw-date-end',\n\t\t\t'label' => $this->msg( 'date-range-to' )->text(),\n\t\t\t'name' => 'end',\n\t\t\t'section' => 'contribs-date',\n\t\t];\n\n\t\t$htmlForm = HTMLForm::factory( 'ooui', $fields, $this->getContext() );\n\t\t$htmlForm\n\t\t\t->setMethod( 'get' )\n\t\t\t// When offset is defined, the user is paging through results\n\t\t\t// so we hide the form by default to allow users to focus on browsing\n\t\t\t// rather than defining search parameters\n\t\t\t->setCollapsibleOptions(\n\t\t\t\t( $pagerOptions['target'] ?? null ) ||\n\t\t\t\t( $pagerOptions['start'] ?? null ) ||\n\t\t\t\t( $pagerOptions['end'] ?? null )\n\t\t\t)\n\t\t\t->setAction( wfScript() )\n\t\t\t->setSubmitTextMsg( 'sp-contributions-submit' )\n\t\t\t->setWrapperLegendMsg( 'sp-contributions-search' );\n\n\t\t$explain = $this->msg( 'sp-contributions-explain' );\n\t\tif ( !$explain->isBlank() ) {\n\t\t\t$htmlForm->addFooterText( \"<p id='mw-sp-contributions-explain'>{$explain->parse()}</p>\" );\n\t\t}\n\n\t\t$htmlForm->loadData();\n\n\t\treturn $htmlForm->getHTML( false );\n\t}\n\n\t/**\n\t * Return an array of subpages beginning with $search that this special page will accept.\n\t *\n\t * @param string $search Prefix to search for\n\t * @param int $limit Maximum number of results to return (usually 10)\n\t * @param int $offset Number of results to skip (usually 0)\n\t * @return string[] Matching subpages\n\t */\n\tpublic function prefixSearchSubpages( $search, $limit, $offset ) {\n\t\t$search = $this->userNameUtils->getCanonical( $search );\n\t\tif ( !$search ) {\n\t\t\t// No prefix suggestion for invalid user\n\t\t\treturn [];\n\t\t}\n\t\t// Autocomplete subpage as user list - public to allow caching\n\t\treturn $this->userNamePrefixSearch\n\t\t\t->search( UserNamePrefixSearch::AUDIENCE_PUBLIC, $search, $limit, $offset );\n\t}\n\n\t/**\n\t * @param User $targetUser The normalized target user\n\t * @return ContribsPager\n\t */\n\tprivate function getPager( $targetUser ) {\n\t\tif ( $this->pager === null ) {\n\t\t\t$options = [\n\t\t\t\t'namespace' => $this->opts['namespace'],\n\t\t\t\t'tagfilter' => $this->opts['tagfilter'],\n\t\t\t\t'start' => $this->opts['start'] ?? '',\n\t\t\t\t'end' => $this->opts['end'] ?? '',\n\t\t\t\t'deletedOnly' => $this->opts['deletedOnly'],\n\t\t\t\t'topOnly' => $this->opts['topOnly'],\n\t\t\t\t'newOnly' => $this->opts['newOnly'],\n\t\t\t\t'hideMinor' => $this->opts['hideMinor'],\n\t\t\t\t'nsInvert' => $this->opts['nsInvert'],\n\t\t\t\t'associated' => $this->opts['associated'],\n\t\t\t];\n\n\t\t\t$this->pager = new ContribsPager(\n\t\t\t\t$this->getContext(),\n\t\t\t\t$options,\n\t\t\t\t$this->getLinkRenderer(),\n\t\t\t\t$this->linkBatchFactory,\n\t\t\t\t$this->getHookContainer(),\n\t\t\t\t$this->loadBalancer,\n\t\t\t\t$this->actorMigration,\n\t\t\t\t$this->revisionStore,\n\t\t\t\t$this->namespaceInfo,\n\t\t\t\t$targetUser,\n\t\t\t\t$this->commentFormatter\n\t\t\t);\n\t\t}\n\n\t\treturn $this->pager;\n\t}\n\n\tprotected function getGroupName() {\n\t\treturn 'users';\n\t}\n}\n"], "fixing_code": ["<?php\n/**\n * Implements Special:Contributions\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n * http://www.gnu.org/copyleft/gpl.html\n *\n * @file\n * @ingroup SpecialPage\n */\n\nuse MediaWiki\\Block\\DatabaseBlock;\nuse MediaWiki\\Cache\\LinkBatchFactory;\nuse MediaWiki\\CommentFormatter\\CommentFormatter;\nuse MediaWiki\\HookContainer\\HookRunner;\nuse MediaWiki\\MediaWikiServices;\nuse MediaWiki\\Permissions\\PermissionManager;\nuse MediaWiki\\Revision\\RevisionStore;\nuse MediaWiki\\User\\UserFactory;\nuse MediaWiki\\User\\UserNamePrefixSearch;\nuse MediaWiki\\User\\UserNameUtils;\nuse MediaWiki\\User\\UserOptionsLookup;\nuse Wikimedia\\IPUtils;\nuse Wikimedia\\Rdbms\\ILoadBalancer;\n\n/**\n * Special:Contributions, show user contributions in a paged list\n *\n * @ingroup SpecialPage\n */\nclass SpecialContributions extends IncludableSpecialPage {\n\tprotected $opts;\n\n\t/** @var LinkBatchFactory */\n\tprivate $linkBatchFactory;\n\n\t/** @var PermissionManager */\n\tprivate $permissionManager;\n\n\t/** @var ILoadBalancer */\n\tprivate $loadBalancer;\n\n\t/** @var ActorMigration */\n\tprivate $actorMigration;\n\n\t/** @var RevisionStore */\n\tprivate $revisionStore;\n\n\t/** @var NamespaceInfo */\n\tprivate $namespaceInfo;\n\n\t/** @var UserNameUtils */\n\tprivate $userNameUtils;\n\n\t/** @var UserNamePrefixSearch */\n\tprivate $userNamePrefixSearch;\n\n\t/** @var UserOptionsLookup */\n\tprivate $userOptionsLookup;\n\n\t/** @var CommentFormatter */\n\tprivate $commentFormatter;\n\n\t/** @var UserFactory */\n\tprivate $userFactory;\n\n\t/** @var ContribsPager|null */\n\tprivate $pager = null;\n\n\t/**\n\t * @param LinkBatchFactory|null $linkBatchFactory\n\t * @param PermissionManager|null $permissionManager\n\t * @param ILoadBalancer|null $loadBalancer\n\t * @param ActorMigration|null $actorMigration\n\t * @param RevisionStore|null $revisionStore\n\t * @param NamespaceInfo|null $namespaceInfo\n\t * @param UserNameUtils|null $userNameUtils\n\t * @param UserNamePrefixSearch|null $userNamePrefixSearch\n\t * @param UserOptionsLookup|null $userOptionsLookup\n\t * @param CommentFormatter|null $commentFormatter\n\t * @param UserFactory|null $userFactory\n\t */\n\tpublic function __construct(\n\t\tLinkBatchFactory $linkBatchFactory = null,\n\t\tPermissionManager $permissionManager = null,\n\t\tILoadBalancer $loadBalancer = null,\n\t\tActorMigration $actorMigration = null,\n\t\tRevisionStore $revisionStore = null,\n\t\tNamespaceInfo $namespaceInfo = null,\n\t\tUserNameUtils $userNameUtils = null,\n\t\tUserNamePrefixSearch $userNamePrefixSearch = null,\n\t\tUserOptionsLookup $userOptionsLookup = null,\n\t\tCommentFormatter $commentFormatter = null,\n\t\tUserFactory $userFactory = null\n\t) {\n\t\tparent::__construct( 'Contributions' );\n\t\t// This class is extended and therefore falls back to global state - T269521\n\t\t$services = MediaWikiServices::getInstance();\n\t\t$this->linkBatchFactory = $linkBatchFactory ?? $services->getLinkBatchFactory();\n\t\t$this->permissionManager = $permissionManager ?? $services->getPermissionManager();\n\t\t$this->loadBalancer = $loadBalancer ?? $services->getDBLoadBalancer();\n\t\t$this->actorMigration = $actorMigration ?? $services->getActorMigration();\n\t\t$this->revisionStore = $revisionStore ?? $services->getRevisionStore();\n\t\t$this->namespaceInfo = $namespaceInfo ?? $services->getNamespaceInfo();\n\t\t$this->userNameUtils = $userNameUtils ?? $services->getUserNameUtils();\n\t\t$this->userNamePrefixSearch = $userNamePrefixSearch ?? $services->getUserNamePrefixSearch();\n\t\t$this->userOptionsLookup = $userOptionsLookup ?? $services->getUserOptionsLookup();\n\t\t$this->commentFormatter = $commentFormatter ?? $services->getCommentFormatter();\n\t\t$this->userFactory = $userFactory ?? $services->getUserFactory();\n\t}\n\n\tpublic function execute( $par ) {\n\t\t$this->setHeaders();\n\t\t$this->outputHeader();\n\t\t$out = $this->getOutput();\n\t\t// Modules required for viewing the list of contributions (also when included on other pages)\n\t\t$out->addModuleStyles( [\n\t\t\t'jquery.makeCollapsible.styles',\n\t\t\t'mediawiki.interface.helpers.styles',\n\t\t\t'mediawiki.special',\n\t\t\t'mediawiki.special.changeslist',\n\t\t] );\n\t\t$out->addModules( [\n\t\t\t'mediawiki.special.recentchanges',\n\t\t\t// Certain skins e.g. Minerva might have disabled this module.\n\t\t\t'mediawiki.page.ready'\n\t\t] );\n\t\t$this->addHelpLink( 'Help:User contributions' );\n\n\t\t$this->opts = [];\n\t\t$request = $this->getRequest();\n\n\t\t$target = $par ?? $request->getVal( 'target' );\n\n\t\t$this->opts['deletedOnly'] = $request->getBool( 'deletedOnly' );\n\n\t\tif ( !strlen( $target ) ) {\n\t\t\tif ( !$this->including() ) {\n\t\t\t\t$out->addHTML( $this->getForm( $this->opts ) );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t$user = $this->getUser();\n\n\t\t$this->opts['limit'] = $request->getInt( 'limit', $this->userOptionsLookup->getIntOption( $user, 'rclimit' ) );\n\t\t$this->opts['target'] = $target;\n\t\t$this->opts['topOnly'] = $request->getBool( 'topOnly' );\n\t\t$this->opts['newOnly'] = $request->getBool( 'newOnly' );\n\t\t$this->opts['hideMinor'] = $request->getBool( 'hideMinor' );\n\n\t\t$ns = $request->getVal( 'namespace', null );\n\t\tif ( $ns !== null && $ns !== '' && $ns !== 'all' ) {\n\t\t\t$this->opts['namespace'] = intval( $ns );\n\t\t} else {\n\t\t\t$this->opts['namespace'] = '';\n\t\t}\n\n\t\t// Backwards compatibility: Before using OOUI form the old HTML form had\n\t\t// fields for nsInvert and associated. These have now been replaced with the\n\t\t// wpFilters query string parameters. These are retained to keep old URIs working.\n\t\t$this->opts['associated'] = $request->getBool( 'associated' );\n\t\t$this->opts['nsInvert'] = (bool)$request->getVal( 'nsInvert' );\n\t\t$nsFilters = $request->getArray( 'wpfilters', null );\n\t\tif ( $nsFilters !== null ) {\n\t\t\t$this->opts['associated'] = in_array( 'associated', $nsFilters );\n\t\t\t$this->opts['nsInvert'] = in_array( 'nsInvert', $nsFilters );\n\t\t}\n\n\t\t$this->opts['tagfilter'] = (string)$request->getVal( 'tagfilter' );\n\n\t\t// Allows reverts to have the bot flag in recent changes. It is just here to\n\t\t// be passed in the form at the top of the page\n\t\tif ( $this->permissionManager->userHasRight( $user, 'markbotedits' ) && $request->getBool( 'bot' ) ) {\n\t\t\t$this->opts['bot'] = '1';\n\t\t}\n\n\t\t$skip = $request->getText( 'offset' ) || $request->getText( 'dir' ) == 'prev';\n\t\t# Offset overrides year/month selection\n\t\tif ( !$skip ) {\n\t\t\t$this->opts['year'] = $request->getVal( 'year' );\n\t\t\t$this->opts['month'] = $request->getVal( 'month' );\n\n\t\t\t$this->opts['start'] = $request->getVal( 'start' );\n\t\t\t$this->opts['end'] = $request->getVal( 'end' );\n\t\t}\n\n\t\t$id = 0;\n\t\tif ( ExternalUserNames::isExternal( $target ) ) {\n\t\t\t$userObj = $this->userFactory->newFromName( $target, UserFactory::RIGOR_NONE );\n\t\t\tif ( !$userObj ) {\n\t\t\t\t$out->addHTML( $this->getForm( $this->opts ) );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$out->addSubtitle( $this->contributionsSub( $userObj, $target ) );\n\t\t\t$out->setPageTitle( $this->msg( 'contributions-title', $target ) );\n\t\t} else {\n\t\t\t$nt = Title::makeTitleSafe( NS_USER, $target );\n\t\t\tif ( !$nt ) {\n\t\t\t\t$out->addHTML( $this->getForm( $this->opts ) );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$userObj = $this->userFactory->newFromName( $nt->getText(), UserFactory::RIGOR_NONE );\n\t\t\tif ( !$userObj ) {\n\t\t\t\t$out->addHTML( $this->getForm( $this->opts ) );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$id = $userObj->getId();\n\n\t\t\t$target = $nt->getText();\n\t\t\t$out->addSubtitle( $this->contributionsSub( $userObj, $target ) );\n\t\t\t$out->setPageTitle( $this->msg( 'contributions-title', $target ) );\n\n\t\t\t# For IP ranges, we want the contributionsSub, but not the skin-dependent\n\t\t\t# links under 'Tools', which may include irrelevant links like 'Logs'.\n\t\t\tif ( !IPUtils::isValidRange( $target ) &&\n\t\t\t\t( $this->userNameUtils->isIP( $target ) || $userObj->isRegistered() )\n\t\t\t) {\n\t\t\t\t// Don't add non-existent users, because hidden users\n\t\t\t\t// that we add here will be removed later to pretend\n\t\t\t\t// that they don't exist, and if users that actually don't\n\t\t\t\t// exist are added here and then not removed, it exposes\n\t\t\t\t// which users exist and are hidden vs. which actually don't\n\t\t\t\t// exist. But, do set the relevant user for single IPs.\n\t\t\t\t$this->getSkin()->setRelevantUser( $userObj );\n\t\t\t}\n\t\t}\n\n\t\t$this->opts = ContribsPager::processDateFilter( $this->opts );\n\n\t\tif ( $this->opts['namespace'] !== '' && $this->opts['namespace'] < NS_MAIN ) {\n\t\t\t$this->getOutput()->wrapWikiMsg(\n\t\t\t\t\"<div class=\\\"mw-negative-namespace-not-supported error\\\">\\n\\$1\\n</div>\",\n\t\t\t\t[ 'negative-namespace-not-supported' ]\n\t\t\t);\n\t\t\t$out->addHTML( $this->getForm( $this->opts ) );\n\t\t\treturn;\n\t\t}\n\n\t\t$feedType = $request->getVal( 'feed' );\n\n\t\t$feedParams = [\n\t\t\t'action' => 'feedcontributions',\n\t\t\t'user' => $target,\n\t\t];\n\t\tif ( $this->opts['topOnly'] ) {\n\t\t\t$feedParams['toponly'] = true;\n\t\t}\n\t\tif ( $this->opts['newOnly'] ) {\n\t\t\t$feedParams['newonly'] = true;\n\t\t}\n\t\tif ( $this->opts['hideMinor'] ) {\n\t\t\t$feedParams['hideminor'] = true;\n\t\t}\n\t\tif ( $this->opts['deletedOnly'] ) {\n\t\t\t$feedParams['deletedonly'] = true;\n\t\t}\n\t\tif ( $this->opts['tagfilter'] !== '' ) {\n\t\t\t$feedParams['tagfilter'] = $this->opts['tagfilter'];\n\t\t}\n\t\tif ( $this->opts['namespace'] !== '' ) {\n\t\t\t$feedParams['namespace'] = $this->opts['namespace'];\n\t\t}\n\t\t// Don't use year and month for the feed URL, but pass them on if\n\t\t// we redirect to API (if $feedType is specified)\n\t\tif ( $feedType && isset( $this->opts['year'] ) ) {\n\t\t\t$feedParams['year'] = $this->opts['year'];\n\t\t}\n\t\tif ( $feedType && isset( $this->opts['month'] ) ) {\n\t\t\t$feedParams['month'] = $this->opts['month'];\n\t\t}\n\n\t\tif ( $feedType ) {\n\t\t\t// Maintain some level of backwards compatibility\n\t\t\t// If people request feeds using the old parameters, redirect to API\n\t\t\t$feedParams['feedformat'] = $feedType;\n\t\t\t$url = wfAppendQuery( wfScript( 'api' ), $feedParams );\n\n\t\t\t$out->redirect( $url, '301' );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Add RSS/atom links\n\t\t$this->addFeedLinks( $feedParams );\n\n\t\tif ( $this->getHookRunner()->onSpecialContributionsBeforeMainOutput(\n\t\t\t$id, $userObj, $this )\n\t\t) {\n\t\t\tif ( !$this->including() ) {\n\t\t\t\t$out->addHTML( $this->getForm( $this->opts ) );\n\t\t\t}\n\t\t\t$pager = $this->getPager( $userObj );\n\t\t\tif ( IPUtils::isValidRange( $target ) && !$pager->isQueryableRange( $target ) ) {\n\t\t\t\t// Valid range, but outside CIDR limit.\n\t\t\t\t$limits = $this->getConfig()->get( 'RangeContributionsCIDRLimit' );\n\t\t\t\t$limit = $limits[ IPUtils::isIPv4( $target ) ? 'IPv4' : 'IPv6' ];\n\t\t\t\t$out->addWikiMsg( 'sp-contributions-outofrange', $limit );\n\t\t\t} else {\n\t\t\t\t// @todo We just want a wiki ID here, not a \"DB domain\", but\n\t\t\t\t// current status of MediaWiki conflates the two. See T235955.\n\t\t\t\t$poolKey = $this->loadBalancer->getLocalDomainID() . ':SpecialContributions:';\n\t\t\t\tif ( $this->getUser()->isAnon() ) {\n\t\t\t\t\t$poolKey .= 'a:' . $this->getUser()->getName();\n\t\t\t\t} else {\n\t\t\t\t\t$poolKey .= 'u:' . $this->getUser()->getId();\n\t\t\t\t}\n\t\t\t\t$work = new PoolCounterWorkViaCallback( 'SpecialContributions', $poolKey, [\n\t\t\t\t\t'doWork' => function () use ( $pager, $out, $target ) {\n\t\t\t\t\t\tif ( !$pager->getNumRows() ) {\n\t\t\t\t\t\t\t$out->addWikiMsg( 'nocontribs', $target );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t# Show a message about replica DB lag, if applicable\n\t\t\t\t\t\t\t$lag = $pager->getDatabase()->getSessionLagStatus()['lag'];\n\t\t\t\t\t\t\tif ( $lag > 0 ) {\n\t\t\t\t\t\t\t\t$out->showLagWarning( $lag );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$output = $pager->getBody();\n\t\t\t\t\t\t\tif ( !$this->including() ) {\n\t\t\t\t\t\t\t\t$output = $pager->getNavigationBar() .\n\t\t\t\t\t\t\t\t\t$output .\n\t\t\t\t\t\t\t\t\t$pager->getNavigationBar();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$out->addHTML( $output );\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'error' => function () use ( $out ) {\n\t\t\t\t\t\t$msg = $this->getUser()->isAnon()\n\t\t\t\t\t\t\t? 'sp-contributions-concurrency-ip'\n\t\t\t\t\t\t\t: 'sp-contributions-concurrency-user';\n\t\t\t\t\t\t$out->wrapWikiMsg( \"<div class='errorbox'>\\n$1\\n</div>\", $msg );\n\t\t\t\t\t}\n\t\t\t\t] );\n\t\t\t\t$work->execute();\n\t\t\t}\n\n\t\t\t$out->preventClickjacking( $pager->getPreventClickjacking() );\n\n\t\t\t# Show the appropriate \"footer\" message - WHOIS tools, etc.\n\t\t\tif ( IPUtils::isValidRange( $target ) && $pager->isQueryableRange( $target ) ) {\n\t\t\t\t$message = 'sp-contributions-footer-anon-range';\n\t\t\t} elseif ( IPUtils::isIPAddress( $target ) ) {\n\t\t\t\t$message = 'sp-contributions-footer-anon';\n\t\t\t} elseif ( $userObj->isAnon() ) {\n\t\t\t\t// No message for non-existing users\n\t\t\t\t$message = '';\n\t\t\t} elseif ( $userObj->isHidden() &&\n\t\t\t\t!$this->permissionManager->userHasRight( $this->getUser(), 'hideuser' )\n\t\t\t) {\n\t\t\t\t// User is registered, but make sure that the viewer can see them, to avoid\n\t\t\t\t// having different behavior for missing and hidden users; see T120883\n\t\t\t\t$message = '';\n\t\t\t} else {\n\t\t\t\t// Not hidden, or hidden but the viewer can still see it\n\t\t\t\t$message = 'sp-contributions-footer';\n\t\t\t}\n\n\t\t\tif ( $message && !$this->including() && !$this->msg( $message, $target )->isDisabled() ) {\n\t\t\t\t$out->wrapWikiMsg(\n\t\t\t\t\t\"<div class='mw-contributions-footer'>\\n$1\\n</div>\",\n\t\t\t\t\t[ $message, $target ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Generates the subheading with links\n\t * @param User $userObj User object for the target\n\t * @param string $targetName This mostly the same as $userObj->getName() but\n\t * normalization may make it differ. // T272225\n\t * @return string Appropriately-escaped HTML to be output literally\n\t * @todo FIXME: Almost the same as getSubTitle in SpecialDeletedContributions.php.\n\t * Could be combined.\n\t */\n\tprotected function contributionsSub( $userObj, $targetName ) {\n\t\t$isAnon = $userObj->isAnon();\n\t\tif ( !$isAnon && $userObj->isHidden() &&\n\t\t\t!$this->permissionManager->userHasRight( $this->getUser(), 'hideuser' )\n\t\t) {\n\t\t\t// T120883 if the user is hidden and the viewer cannot see hidden\n\t\t\t// users, pretend like it does not exist at all.\n\t\t\t$isAnon = true;\n\t\t}\n\n\t\tif ( $isAnon ) {\n\t\t\t// Show a warning message that the user being searched for doesn't exist.\n\t\t\t// UserNameUtils::isIP returns true for IP address and usemod IPs like '123.123.123.xxx',\n\t\t\t// but returns false for IP ranges. We don't want to suggest either of these are\n\t\t\t// valid usernames which we would with the 'contributions-userdoesnotexist' message.\n\t\t\tif ( !$this->userNameUtils->isIP( $userObj->getName() )\n\t\t\t\t&& !IPUtils::isValidRange( $userObj->getName() )\n\t\t\t) {\n\t\t\t\t$this->getOutput()->wrapWikiMsg(\n\t\t\t\t\t\"<div class=\\\"mw-userpage-userdoesnotexist error\\\">\\n\\$1\\n</div>\",\n\t\t\t\t\t[\n\t\t\t\t\t\t'contributions-userdoesnotexist',\n\t\t\t\t\t\twfEscapeWikiText( $userObj->getName() ),\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t\tif ( !$this->including() ) {\n\t\t\t\t\t$this->getOutput()->setStatusCode( 404 );\n\t\t\t\t}\n\t\t\t}\n\t\t\t$user = htmlspecialchars( $userObj->getName() );\n\t\t} else {\n\t\t\t$user = $this->getLinkRenderer()->makeLink( $userObj->getUserPage(), $userObj->getName() );\n\t\t}\n\t\t$nt = $userObj->getUserPage();\n\t\t$talk = $userObj->getTalkPage();\n\t\t$links = '';\n\n\t\t// T211910. Don't show action links if a range is outside block limit\n\t\t$showForIp = IPUtils::isValid( $userObj ) ||\n\t\t\t( IPUtils::isValidRange( $userObj ) && $this->getPager( $userObj )->isQueryableRange( $userObj ) );\n\n\t\t// T276306. if the user is hidden and the viewer cannot see hidden, pretend that it does not exist\n\t\t$registeredAndVisible = $userObj->isRegistered() && ( !$userObj->isHidden()\n\t\t\t\t|| $this->permissionManager->userHasRight( $this->getUser(), 'hideuser' ) );\n\n\t\tif ( $talk && ( $registeredAndVisible || $showForIp ) ) {\n\t\t\t$tools = self::getUserLinks(\n\t\t\t\t$this,\n\t\t\t\t$userObj,\n\t\t\t\t$this->permissionManager,\n\t\t\t\t$this->getHookRunner()\n\t\t\t);\n\t\t\t$links = Html::openElement( 'span', [ 'class' => 'mw-changeslist-links' ] );\n\t\t\tforeach ( $tools as $tool ) {\n\t\t\t\t$links .= Html::rawElement( 'span', [], $tool ) . ' ';\n\t\t\t}\n\t\t\t$links = trim( $links ) . Html::closeElement( 'span' );\n\n\t\t\t// Show a note if the user is blocked and display the last block log entry.\n\t\t\t// Do not expose the autoblocks, since that may lead to a leak of accounts' IPs,\n\t\t\t// and also this will display a totally irrelevant log entry as a current block.\n\t\t\tif ( !$this->including() ) {\n\t\t\t\t// For IP ranges you must give DatabaseBlock::newFromTarget the CIDR string\n\t\t\t\t// and not a user object.\n\t\t\t\tif ( IPUtils::isValidRange( $userObj->getName() ) ) {\n\t\t\t\t\t$block = DatabaseBlock::newFromTarget( $userObj->getName(), $userObj->getName() );\n\t\t\t\t} else {\n\t\t\t\t\t$block = DatabaseBlock::newFromTarget( $userObj, $userObj );\n\t\t\t\t}\n\n\t\t\t\tif ( $block !== null && $block->getType() != DatabaseBlock::TYPE_AUTO ) {\n\t\t\t\t\tif ( $block->getType() == DatabaseBlock::TYPE_RANGE ) {\n\t\t\t\t\t\t$nt = $this->namespaceInfo->getCanonicalName( NS_USER )\n\t\t\t\t\t\t\t. ':' . $block->getTargetName();\n\t\t\t\t\t}\n\n\t\t\t\t\t$out = $this->getOutput(); // showLogExtract() wants first parameter by reference\n\t\t\t\t\tif ( $userObj->isAnon() ) {\n\t\t\t\t\t\t$msgKey = $block->isSitewide() ?\n\t\t\t\t\t\t\t'sp-contributions-blocked-notice-anon' :\n\t\t\t\t\t\t\t'sp-contributions-blocked-notice-anon-partial';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$msgKey = $block->isSitewide() ?\n\t\t\t\t\t\t\t'sp-contributions-blocked-notice' :\n\t\t\t\t\t\t\t'sp-contributions-blocked-notice-partial';\n\t\t\t\t\t}\n\t\t\t\t\t// Allow local styling overrides for different types of block\n\t\t\t\t\t$class = $block->isSitewide() ?\n\t\t\t\t\t\t'mw-contributions-blocked-notice' :\n\t\t\t\t\t\t'mw-contributions-blocked-notice-partial';\n\t\t\t\t\tLogEventsList::showLogExtract(\n\t\t\t\t\t\t$out,\n\t\t\t\t\t\t'block',\n\t\t\t\t\t\t$nt,\n\t\t\t\t\t\t'',\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'lim' => 1,\n\t\t\t\t\t\t\t'showIfEmpty' => false,\n\t\t\t\t\t\t\t'msgKey' => [\n\t\t\t\t\t\t\t\t$msgKey,\n\t\t\t\t\t\t\t\t$userObj->getName() # Support GENDER in 'sp-contributions-blocked-notice'\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t'offset' => '', # don't use WebRequest parameter offset\n\t\t\t\t\t\t\t'wrap' => Html::rawElement(\n\t\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t\t[ 'class' => $class ],\n\t\t\t\t\t\t\t\t'$1'\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Html::rawElement( 'div', [ 'class' => 'mw-contributions-user-tools' ],\n\t\t\t$this->msg( 'contributions-subtitle' )->rawParams( $user )->params( $userObj->getName() )\n\t\t\t. ' ' . $links\n\t\t);\n\t}\n\n\t/**\n\t * Links to different places.\n\t *\n\t * @note This function is also called in DeletedContributionsPage\n\t * @param SpecialPage $sp SpecialPage instance, for context\n\t * @param User $target Target user object\n\t * @param PermissionManager|null $permissionManager (Since 1.36)\n\t * @param HookRunner|null $hookRunner (Since 1.36)\n\t * @return array\n\t */\n\tpublic static function getUserLinks(\n\t\tSpecialPage $sp,\n\t\tUser $target,\n\t\tPermissionManager $permissionManager = null,\n\t\tHookRunner $hookRunner = null\n\t) {\n\t\t// Fallback to global state, if not provided\n\t\t$permissionManager = $permissionManager ?? MediaWikiServices::getInstance()->getPermissionManager();\n\t\t$hookRunner = $hookRunner ?? Hooks::runner();\n\n\t\t$id = $target->getId();\n\t\t$username = $target->getName();\n\t\t$userpage = $target->getUserPage();\n\t\t$talkpage = $target->getTalkPage();\n\t\t$isIP = IPUtils::isValid( $username );\n\t\t$isRange = IPUtils::isValidRange( $username );\n\n\t\t$linkRenderer = $sp->getLinkRenderer();\n\n\t\t$tools = [];\n\t\t# No talk pages for IP ranges.\n\t\tif ( !$isRange ) {\n\t\t\t$tools['user-talk'] = $linkRenderer->makeLink(\n\t\t\t\t$talkpage,\n\t\t\t\t$sp->msg( 'sp-contributions-talk' )->text()\n\t\t\t);\n\t\t}\n\n\t\t# Block / Change block / Unblock links\n\t\tif ( $permissionManager->userHasRight( $sp->getUser(), 'block' ) ) {\n\t\t\tif ( $target->getBlock() && $target->getBlock()->getType() != DatabaseBlock::TYPE_AUTO ) {\n\t\t\t\t$tools['block'] = $linkRenderer->makeKnownLink( # Change block link\n\t\t\t\t\tSpecialPage::getTitleFor( 'Block', $username ),\n\t\t\t\t\t$sp->msg( 'change-blocklink' )->text()\n\t\t\t\t);\n\t\t\t\t$tools['unblock'] = $linkRenderer->makeKnownLink( # Unblock link\n\t\t\t\t\tSpecialPage::getTitleFor( 'Unblock', $username ),\n\t\t\t\t\t$sp->msg( 'unblocklink' )->text()\n\t\t\t\t);\n\t\t\t} else { # User is not blocked\n\t\t\t\t$tools['block'] = $linkRenderer->makeKnownLink( # Block link\n\t\t\t\t\tSpecialPage::getTitleFor( 'Block', $username ),\n\t\t\t\t\t$sp->msg( 'blocklink' )->text()\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t# Block log link\n\t\t$tools['log-block'] = $linkRenderer->makeKnownLink(\n\t\t\tSpecialPage::getTitleFor( 'Log', 'block' ),\n\t\t\t$sp->msg( 'sp-contributions-blocklog' )->text(),\n\t\t\t[],\n\t\t\t[ 'page' => $userpage->getPrefixedText() ]\n\t\t);\n\n\t\t# Suppression log link (T61120)\n\t\tif ( $permissionManager->userHasRight( $sp->getUser(), 'suppressionlog' ) ) {\n\t\t\t$tools['log-suppression'] = $linkRenderer->makeKnownLink(\n\t\t\t\tSpecialPage::getTitleFor( 'Log', 'suppress' ),\n\t\t\t\t$sp->msg( 'sp-contributions-suppresslog', $username )->text(),\n\t\t\t\t[],\n\t\t\t\t[ 'offender' => $username ]\n\t\t\t);\n\t\t}\n\n\t\t# Don't show some links for IP ranges\n\t\tif ( !$isRange ) {\n\t\t\t# Uploads: hide if IPs cannot upload (T220674)\n\t\t\tif ( !$isIP || $permissionManager->userHasRight( $target, 'upload' ) ) {\n\t\t\t\t$tools['uploads'] = $linkRenderer->makeKnownLink(\n\t\t\t\t\tSpecialPage::getTitleFor( 'Listfiles', $username ),\n\t\t\t\t\t$sp->msg( 'sp-contributions-uploads' )->text()\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t# Other logs link\n\t\t\t# Todo: T146628\n\t\t\t$tools['logs'] = $linkRenderer->makeKnownLink(\n\t\t\t\tSpecialPage::getTitleFor( 'Log', $username ),\n\t\t\t\t$sp->msg( 'sp-contributions-logs' )->text()\n\t\t\t);\n\n\t\t\t# Add link to deleted user contributions for priviledged users\n\t\t\t# Todo: T183457\n\t\t\tif ( $permissionManager->userHasRight( $sp->getUser(), 'deletedhistory' ) ) {\n\t\t\t\t$tools['deletedcontribs'] = $linkRenderer->makeKnownLink(\n\t\t\t\t\tSpecialPage::getTitleFor( 'DeletedContributions', $username ),\n\t\t\t\t\t$sp->msg( 'sp-contributions-deleted', $username )->text()\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t# Add a link to change user rights for privileged users\n\t\t$userrightsPage = new UserrightsPage();\n\t\t$userrightsPage->setContext( $sp->getContext() );\n\t\tif ( $userrightsPage->userCanChangeRights( $target ) ) {\n\t\t\t$tools['userrights'] = $linkRenderer->makeKnownLink(\n\t\t\t\tSpecialPage::getTitleFor( 'Userrights', $username ),\n\t\t\t\t$sp->msg( 'sp-contributions-userrights', $username )->text()\n\t\t\t);\n\t\t}\n\n\t\t$hookRunner->onContributionsToolLinks( $id, $userpage, $tools, $sp );\n\n\t\treturn $tools;\n\t}\n\n\t/**\n\t * Generates the namespace selector form with hidden attributes.\n\t * @param array $pagerOptions with keys contribs, user, deletedOnly, limit, target, topOnly,\n\t *  newOnly, hideMinor, namespace, associated, nsInvert, tagfilter, year, start, end\n\t * @return string HTML fragment\n\t */\n\tprotected function getForm( array $pagerOptions ) {\n\t\t$this->opts['title'] = $this->getPageTitle()->getPrefixedText();\n\t\t// Modules required only for the form\n\t\t$this->getOutput()->addModules( [\n\t\t\t'mediawiki.special.contributions',\n\t\t] );\n\t\t$this->getOutput()->addModuleStyles( 'mediawiki.widgets.DateInputWidget.styles' );\n\t\t$this->getOutput()->enableOOUI();\n\t\t$fields = [];\n\n\t\t# Add hidden params for tracking except for parameters in $skipParameters\n\t\t$skipParameters = [\n\t\t\t'namespace',\n\t\t\t'nsInvert',\n\t\t\t'deletedOnly',\n\t\t\t'target',\n\t\t\t'year',\n\t\t\t'month',\n\t\t\t'start',\n\t\t\t'end',\n\t\t\t'topOnly',\n\t\t\t'newOnly',\n\t\t\t'hideMinor',\n\t\t\t'associated',\n\t\t\t'tagfilter'\n\t\t];\n\n\t\tforeach ( $this->opts as $name => $value ) {\n\t\t\tif ( in_array( $name, $skipParameters ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$fields[$name] = [\n\t\t\t\t'name' => $name,\n\t\t\t\t'type' => 'hidden',\n\t\t\t\t'default' => $value,\n\t\t\t];\n\t\t}\n\n\t\t$target = $this->opts['target'] ?? null;\n\t\t$fields['target'] = [\n\t\t\t'type' => 'user',\n\t\t\t'default' => $target ?\n\t\t\t\tstr_replace( '_', ' ', $target ) : '' ,\n\t\t\t'label' => $this->msg( 'sp-contributions-username' )->text(),\n\t\t\t'name' => 'target',\n\t\t\t'id' => 'mw-target-user-or-ip',\n\t\t\t'size' => 40,\n\t\t\t'autofocus' => !$target,\n\t\t\t'section' => 'contribs-top',\n\t\t];\n\n\t\t$ns = $this->opts['namespace'] ?? null;\n\t\t$fields['namespace'] = [\n\t\t\t'type' => 'namespaceselect',\n\t\t\t'label' => $this->msg( 'namespace' )->text(),\n\t\t\t'name' => 'namespace',\n\t\t\t'cssclass' => 'namespaceselector',\n\t\t\t'default' => $ns,\n\t\t\t'id' => 'namespace',\n\t\t\t'section' => 'contribs-top',\n\t\t];\n\t\t$fields['nsFilters'] = [\n\t\t\t'class' => HTMLMultiSelectField::class,\n\t\t\t'label' => '',\n\t\t\t'name' => 'wpfilters',\n\t\t\t'flatlist' => true,\n\t\t\t// Only shown when namespaces are selected.\n\t\t\t'cssclass' => $ns === '' ?\n\t\t\t\t'contribs-ns-filters mw-input-with-label mw-input-hidden' :\n\t\t\t\t'contribs-ns-filters mw-input-with-label',\n\t\t\t// `contribs-ns-filters` class allows these fields to be toggled on/off by JavaScript.\n\t\t\t// See resources/src/mediawiki.special.recentchanges.js\n\t\t\t'infusable' => true,\n\t\t\t'options-messages' => [\n\t\t\t\t'invert' => 'nsInvert',\n\t\t\t\t'namespace_association' => 'associated',\n\t\t\t],\n\t\t\t'section' => 'contribs-top',\n\t\t];\n\t\t$fields['tagfilter'] = [\n\t\t\t'type' => 'tagfilter',\n\t\t\t'cssclass' => 'mw-tagfilter-input',\n\t\t\t'id' => 'tagfilter',\n\t\t\t'label-message' => [ 'tag-filter', 'parse' ],\n\t\t\t'name' => 'tagfilter',\n\t\t\t'size' => 20,\n\t\t\t'section' => 'contribs-top',\n\t\t];\n\n\t\tif ( $this->permissionManager->userHasRight( $this->getUser(), 'deletedhistory' ) ) {\n\t\t\t$fields['deletedOnly'] = [\n\t\t\t\t'type' => 'check',\n\t\t\t\t'id' => 'mw-show-deleted-only',\n\t\t\t\t'label' => $this->msg( 'history-show-deleted' )->text(),\n\t\t\t\t'name' => 'deletedOnly',\n\t\t\t\t'section' => 'contribs-top',\n\t\t\t];\n\t\t}\n\n\t\t$fields['topOnly'] = [\n\t\t\t'type' => 'check',\n\t\t\t'id' => 'mw-show-top-only',\n\t\t\t'label' => $this->msg( 'sp-contributions-toponly' )->text(),\n\t\t\t'name' => 'topOnly',\n\t\t\t'section' => 'contribs-top',\n\t\t];\n\t\t$fields['newOnly'] = [\n\t\t\t'type' => 'check',\n\t\t\t'id' => 'mw-show-new-only',\n\t\t\t'label' => $this->msg( 'sp-contributions-newonly' )->text(),\n\t\t\t'name' => 'newOnly',\n\t\t\t'section' => 'contribs-top',\n\t\t];\n\t\t$fields['hideMinor'] = [\n\t\t\t'type' => 'check',\n\t\t\t'cssclass' => 'mw-hide-minor-edits',\n\t\t\t'id' => 'mw-show-new-only',\n\t\t\t'label' => $this->msg( 'sp-contributions-hideminor' )->text(),\n\t\t\t'name' => 'hideMinor',\n\t\t\t'section' => 'contribs-top',\n\t\t];\n\n\t\t// Allow additions at this point to the filters.\n\t\t$rawFilters = [];\n\t\t$this->getHookRunner()->onSpecialContributions__getForm__filters(\n\t\t\t$this, $rawFilters );\n\t\tforeach ( $rawFilters as $filter ) {\n\t\t\t// Backwards compatibility support for previous hook function signature.\n\t\t\tif ( is_string( $filter ) ) {\n\t\t\t\t$fields[] = [\n\t\t\t\t\t'type' => 'info',\n\t\t\t\t\t'default' => $filter,\n\t\t\t\t\t'raw' => true,\n\t\t\t\t\t'section' => 'contribs-top',\n\t\t\t\t];\n\t\t\t\twfDeprecated(\n\t\t\t\t\t'A SpecialContributions::getForm::filters hook handler returned ' .\n\t\t\t\t\t'an array of strings, this is deprecated since MediaWiki 1.33',\n\t\t\t\t\t'1.33', false, false\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// Preferred append method.\n\t\t\t\t$fields[] = $filter;\n\t\t\t}\n\t\t}\n\n\t\t$fields['start'] = [\n\t\t\t'type' => 'date',\n\t\t\t'default' => '',\n\t\t\t'id' => 'mw-date-start',\n\t\t\t'label' => $this->msg( 'date-range-from' )->text(),\n\t\t\t'name' => 'start',\n\t\t\t'section' => 'contribs-date',\n\t\t];\n\t\t$fields['end'] = [\n\t\t\t'type' => 'date',\n\t\t\t'default' => '',\n\t\t\t'id' => 'mw-date-end',\n\t\t\t'label' => $this->msg( 'date-range-to' )->text(),\n\t\t\t'name' => 'end',\n\t\t\t'section' => 'contribs-date',\n\t\t];\n\n\t\t$htmlForm = HTMLForm::factory( 'ooui', $fields, $this->getContext() );\n\t\t$htmlForm\n\t\t\t->setMethod( 'get' )\n\t\t\t// When offset is defined, the user is paging through results\n\t\t\t// so we hide the form by default to allow users to focus on browsing\n\t\t\t// rather than defining search parameters\n\t\t\t->setCollapsibleOptions(\n\t\t\t\t( $pagerOptions['target'] ?? null ) ||\n\t\t\t\t( $pagerOptions['start'] ?? null ) ||\n\t\t\t\t( $pagerOptions['end'] ?? null )\n\t\t\t)\n\t\t\t->setAction( wfScript() )\n\t\t\t->setSubmitTextMsg( 'sp-contributions-submit' )\n\t\t\t->setWrapperLegendMsg( 'sp-contributions-search' );\n\n\t\t$explain = $this->msg( 'sp-contributions-explain' );\n\t\tif ( !$explain->isBlank() ) {\n\t\t\t$htmlForm->addFooterText( \"<p id='mw-sp-contributions-explain'>{$explain->parse()}</p>\" );\n\t\t}\n\n\t\t$htmlForm->loadData();\n\n\t\treturn $htmlForm->getHTML( false );\n\t}\n\n\t/**\n\t * Return an array of subpages beginning with $search that this special page will accept.\n\t *\n\t * @param string $search Prefix to search for\n\t * @param int $limit Maximum number of results to return (usually 10)\n\t * @param int $offset Number of results to skip (usually 0)\n\t * @return string[] Matching subpages\n\t */\n\tpublic function prefixSearchSubpages( $search, $limit, $offset ) {\n\t\t$search = $this->userNameUtils->getCanonical( $search );\n\t\tif ( !$search ) {\n\t\t\t// No prefix suggestion for invalid user\n\t\t\treturn [];\n\t\t}\n\t\t// Autocomplete subpage as user list - public to allow caching\n\t\treturn $this->userNamePrefixSearch\n\t\t\t->search( UserNamePrefixSearch::AUDIENCE_PUBLIC, $search, $limit, $offset );\n\t}\n\n\t/**\n\t * @param User $targetUser The normalized target user\n\t * @return ContribsPager\n\t */\n\tprivate function getPager( $targetUser ) {\n\t\tif ( $this->pager === null ) {\n\t\t\t$options = [\n\t\t\t\t'namespace' => $this->opts['namespace'],\n\t\t\t\t'tagfilter' => $this->opts['tagfilter'],\n\t\t\t\t'start' => $this->opts['start'] ?? '',\n\t\t\t\t'end' => $this->opts['end'] ?? '',\n\t\t\t\t'deletedOnly' => $this->opts['deletedOnly'],\n\t\t\t\t'topOnly' => $this->opts['topOnly'],\n\t\t\t\t'newOnly' => $this->opts['newOnly'],\n\t\t\t\t'hideMinor' => $this->opts['hideMinor'],\n\t\t\t\t'nsInvert' => $this->opts['nsInvert'],\n\t\t\t\t'associated' => $this->opts['associated'],\n\t\t\t];\n\n\t\t\t$this->pager = new ContribsPager(\n\t\t\t\t$this->getContext(),\n\t\t\t\t$options,\n\t\t\t\t$this->getLinkRenderer(),\n\t\t\t\t$this->linkBatchFactory,\n\t\t\t\t$this->getHookContainer(),\n\t\t\t\t$this->loadBalancer,\n\t\t\t\t$this->actorMigration,\n\t\t\t\t$this->revisionStore,\n\t\t\t\t$this->namespaceInfo,\n\t\t\t\t$targetUser,\n\t\t\t\t$this->commentFormatter\n\t\t\t);\n\t\t}\n\n\t\treturn $this->pager;\n\t}\n\n\tprotected function getGroupName() {\n\t\treturn 'users';\n\t}\n}\n"], "filenames": ["includes/specials/SpecialContributions.php"], "buggy_code_start_loc": [313], "buggy_code_end_loc": [339], "fixing_code_start_loc": [312], "fixing_code_end_loc": [340], "type": "CWE-770", "message": "MediaWiki before 1.36.2 allows a denial of service (resource consumption because of lengthy query processing time). Visiting Special:Contributions can sometimes result in a long running SQL query because PoolCounter protection is mishandled.", "other": {"cve": {"id": "CVE-2021-41800", "sourceIdentifier": "cve@mitre.org", "published": "2021-10-11T08:15:06.813", "lastModified": "2023-05-21T22:15:10.940", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "MediaWiki before 1.36.2 allows a denial of service (resource consumption because of lengthy query processing time). Visiting Special:Contributions can sometimes result in a long running SQL query because PoolCounter protection is mishandled."}, {"lang": "es", "value": "MediaWiki versiones anteriores a 1.36.2, permite una denegaci\u00f3n de servicio (consumo de recursos debido a un largo tiempo de procesamiento de consultas). Visitando Special:Contributions puede resultar a veces en una consulta SQL de larga duraci\u00f3n porque la protecci\u00f3n de PoolCounter est\u00e1 manejada inapropiadamente"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "LOW", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-770"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:mediawiki:mediawiki:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.36.2", "matchCriteriaId": "E151A08F-6DFB-4D6E-82CD-000CCF6581F3"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:33:*:*:*:*:*:*:*", "matchCriteriaId": "E460AA51-FCDA-46B9-AE97-E6676AA5E194"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:34:*:*:*:*:*:*:*", "matchCriteriaId": "A930E247-0B43-43CB-98FF-6CE7B8189835"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:35:*:*:*:*:*:*:*", "matchCriteriaId": "80E516C0-98A4-4ADE-B69F-66A772E2BAAA"}]}]}], "references": [{"url": "https://github.com/wikimedia/mediawiki/commit/781caf83dba90c18349f930bbaaa0e89f003f874", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CJDYJQWT43GBD6GNQ4OW7JOZ6WQ6DZTN/", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MDBPECBWN6LWNSWIQMVXK6PP4YFEUYHA/", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QNEAI2T3Y65I55ZB6UE6RMC662RZTGRX/", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.wikimedia.org/hyperkitty/list/wikitech-l@lists.wikimedia.org/thread/2IFS5CM2YV4VMSODPX3J2LFHKSEWVFV5/", "source": "cve@mitre.org", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://phabricator.wikimedia.org/T284419", "source": "cve@mitre.org", "tags": ["Permissions Required"]}, {"url": "https://security.gentoo.org/glsa/202305-24", "source": "cve@mitre.org"}]}, "github_commit_url": "https://github.com/wikimedia/mediawiki/commit/781caf83dba90c18349f930bbaaa0e89f003f874"}}