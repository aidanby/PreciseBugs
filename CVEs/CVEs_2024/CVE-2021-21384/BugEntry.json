{"buggy_code": ["# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog], and this project adheres to [Semantic\nVersioning].\n\n## [Unreleased]\n\n- _No changes yet_\n\n## [1.1.2] - 2021-01-07\n\n- Add in-source JSDoc documentation.\n\n## [1.1.1] - 2020-12-30\n\n- Improve error message when a value is not stringable.\n\n## [1.1.0] - 2020-12-22\n\n- Add `escapeAll` function to escape an array of arguments.\n- Recommend usage of `escapeAll` when using `fork`/`spawn`/`execFile`.\n\n## [1.0.0] - 2020-12-10\n\n- (!) Remove ability to call `shescape()` directly.\n- (!) Automatically convert input to array in `quoteAll()`.\n- Fix numbering in documentation's \"Install\" section.\n\n## [0.4.1] - 2020-12-09\n\n- Support non-string values as arguments.\n\n## [0.4.0] - 2020-12-08\n\n- Add `quoteAll` function to quote and escape an array of arguments.\n- Create website with full documentation ([link](https://ericcornelissen.github.io/shescape/)).\n\n## [0.3.1] - 2020-12-07\n\n- Deprecate calling `shescape()` directly.\n\n## [0.3.0] - 2020-12-07\n\n- Add `escape` function to escape an argument (same as `shescape()`).\n- Add `quote` function to quote and escape an argument.\n\n## [0.2.1] - 2020-11-07\n\n- Fix missing released files.\n\n## [0.2.0] - 2020-11-07\n\n- Add support for escaping of double quotes on Windows.\n\n## [0.1.0] - 2020-11-06\n\n- Escape individual shell arguments.\n\n[keep a changelog]: https://keepachangelog.com/en/1.0.0/\n[semantic versioning]: https://semver.org/spec/v2.0.0.html\n", "/**\n * @overview Contains functionality specifically for Unix systems.\n * @license MPL-2.0\n * @author Eric Cornelissen <ericornelissen@gmail.com>\n */\n\n/**\n * Escape a shell argument.\n *\n * @param {string} arg The argument to escape.\n * @returns {string} The escaped argument.\n */\nfunction escapeShellArg(arg) {\n  return arg.replace(/'/g, `'\\\\''`);\n}\n\nmodule.exports.escapeShellArg = escapeShellArg;\n", "/**\n * @overview Contains functionality specifically for Windows systems.\n * @license MPL-2.0\n * @author Eric Cornelissen <ericornelissen@gmail.com>\n */\n\n/**\n * Escape a shell argument.\n *\n * @param {string} arg The argument to escape.\n * @returns {string} The escaped argument.\n */\nfunction escapeShellArg(arg) {\n  return arg.replace(/\"/g, `\"\"`);\n}\n\nmodule.exports.escapeShellArg = escapeShellArg;\n", "const assert = require(\"assert\");\n\nconst { escapeShellArg } = require(\"../src/unix.js\");\n\ndescribe(\"unix.js\", function () {\n  it(\"should return the input if nothing has to be escaped\", function () {\n    const input = `Hello world!`;\n    const output = escapeShellArg(input);\n    assert.strictEqual(output, input);\n  });\n\n  describe(\"escape single quotes\", function () {\n    it(\"escapes one single quote\", function () {\n      const input = `' & ls -al`;\n      const output = escapeShellArg(input);\n      assert.strictEqual(output, `'\\\\'' & ls -al`);\n    });\n\n    it(\"escapes two single quotes\", function () {\n      const input = `' & echo 'Hello world!'`;\n      const output = escapeShellArg(input);\n      assert.strictEqual(output, `'\\\\'' & echo '\\\\''Hello world!'\\\\''`);\n    });\n  });\n});\n", "const assert = require(\"assert\");\n\nconst { escapeShellArg } = require(\"../src/win.js\");\n\ndescribe(\"win.js\", function () {\n  it(\"should return the input if nothing has to be escaped\", function () {\n    const input = `Hello world!`;\n    const output = escapeShellArg(input);\n    assert.strictEqual(output, input);\n  });\n\n  describe(\"escape double quotes\", function () {\n    it(\"escapes one single quote\", function () {\n      const input = `\" & ls -al`;\n      const output = escapeShellArg(input);\n      assert.strictEqual(output, `\"\" & ls -al`);\n    });\n\n    it(\"escapes two single quotes\", function () {\n      const input = `\" & echo \"Hello world!`;\n      const output = escapeShellArg(input);\n      assert.strictEqual(output, `\"\" & echo \"\"Hello world!`);\n    });\n  });\n});\n"], "fixing_code": ["# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog], and this project adheres to [Semantic\nVersioning].\n\n## [Unreleased]\n\n- Strip null characters from arguments.\n\n## [1.1.2] - 2021-01-07\n\n- Add in-source JSDoc documentation.\n\n## [1.1.1] - 2020-12-30\n\n- Improve error message when a value is not stringable.\n\n## [1.1.0] - 2020-12-22\n\n- Add `escapeAll` function to escape an array of arguments.\n- Recommend usage of `escapeAll` when using `fork`/`spawn`/`execFile`.\n\n## [1.0.0] - 2020-12-10\n\n- (!) Remove ability to call `shescape()` directly.\n- (!) Automatically convert input to array in `quoteAll()`.\n- Fix numbering in documentation's \"Install\" section.\n\n## [0.4.1] - 2020-12-09\n\n- Support non-string values as arguments.\n\n## [0.4.0] - 2020-12-08\n\n- Add `quoteAll` function to quote and escape an array of arguments.\n- Create website with full documentation ([link](https://ericcornelissen.github.io/shescape/)).\n\n## [0.3.1] - 2020-12-07\n\n- Deprecate calling `shescape()` directly.\n\n## [0.3.0] - 2020-12-07\n\n- Add `escape` function to escape an argument (same as `shescape()`).\n- Add `quote` function to quote and escape an argument.\n\n## [0.2.1] - 2020-11-07\n\n- Fix missing released files.\n\n## [0.2.0] - 2020-11-07\n\n- Add support for escaping of double quotes on Windows.\n\n## [0.1.0] - 2020-11-06\n\n- Escape individual shell arguments.\n\n[keep a changelog]: https://keepachangelog.com/en/1.0.0/\n[semantic versioning]: https://semver.org/spec/v2.0.0.html\n", "/**\n * @overview Contains functionality specifically for Unix systems.\n * @license MPL-2.0\n * @author Eric Cornelissen <ericornelissen@gmail.com>\n */\n\n/**\n * Escape a shell argument.\n *\n * @param {string} arg The argument to escape.\n * @returns {string} The escaped argument.\n */\nfunction escapeShellArg(arg) {\n  return arg.replace(/\\u{0}/gu, \"\").replace(/'/g, `'\\\\''`);\n}\n\nmodule.exports.escapeShellArg = escapeShellArg;\n", "/**\n * @overview Contains functionality specifically for Windows systems.\n * @license MPL-2.0\n * @author Eric Cornelissen <ericornelissen@gmail.com>\n */\n\n/**\n * Escape a shell argument.\n *\n * @param {string} arg The argument to escape.\n * @returns {string} The escaped argument.\n */\nfunction escapeShellArg(arg) {\n  return arg.replace(/\\u{0}/gu, \"\").replace(/\"/g, `\"\"`);\n}\n\nmodule.exports.escapeShellArg = escapeShellArg;\n", "const assert = require(\"assert\");\n\nconst { escapeShellArg } = require(\"../src/unix.js\");\n\ndescribe(\"unix.js\", function () {\n  it(\"should return the input if nothing has to be escaped\", function () {\n    const input = `Hello world!`;\n    const output = escapeShellArg(input);\n    assert.strictEqual(output, input);\n  });\n\n  describe(\"escape single quotes\", function () {\n    it(\"escapes one single quote\", function () {\n      const input = `' & ls -al`;\n      const output = escapeShellArg(input);\n      assert.strictEqual(output, `'\\\\'' & ls -al`);\n    });\n\n    it(\"escapes two single quotes\", function () {\n      const input = `' & echo 'Hello world!'`;\n      const output = escapeShellArg(input);\n      assert.strictEqual(output, `'\\\\'' & echo '\\\\''Hello world!'\\\\''`);\n    });\n  });\n\n  describe(\"null characters\", function () {\n    const nullChar = String.fromCharCode(0);\n\n    it(\"removes one null character\", function () {\n      const input = `foo' && ls${nullChar} -al ; echo 'bar`;\n      const output = escapeShellArg(input);\n      assert.strictEqual(output, `foo'\\\\'' && ls -al ; echo '\\\\''bar`);\n    });\n\n    it(\"removes multiple null character\", function () {\n      const input = `foo'${nullChar}&&ls -al${nullChar};echo 'bar`;\n      const output = escapeShellArg(input);\n      assert.strictEqual(output, `foo'\\\\''&&ls -al;echo '\\\\''bar`);\n    });\n  });\n});\n", "const assert = require(\"assert\");\n\nconst { escapeShellArg } = require(\"../src/win.js\");\n\ndescribe(\"win.js\", function () {\n  it(\"should return the input if nothing has to be escaped\", function () {\n    const input = `Hello world!`;\n    const output = escapeShellArg(input);\n    assert.strictEqual(output, input);\n  });\n\n  describe(\"escape double quotes\", function () {\n    it(\"escapes one single quote\", function () {\n      const input = `\" & ls -al`;\n      const output = escapeShellArg(input);\n      assert.strictEqual(output, `\"\" & ls -al`);\n    });\n\n    it(\"escapes two single quotes\", function () {\n      const input = `\" & echo \"Hello world!`;\n      const output = escapeShellArg(input);\n      assert.strictEqual(output, `\"\" & echo \"\"Hello world!`);\n    });\n  });\n\n  describe(\"null characters\", function () {\n    const nullChar = String.fromCharCode(0);\n\n    it(\"removes one null character\", function () {\n      const input = `foo\" && ls${nullChar} -al ; echo \"bar`;\n      const output = escapeShellArg(input);\n      assert.strictEqual(output, `foo\"\" && ls -al ; echo \"\"bar`);\n    });\n\n    it(\"removes multiple null character\", function () {\n      const input = `foo\"${nullChar}&&ls -al${nullChar};echo \"bar`;\n      const output = escapeShellArg(input);\n      assert.strictEqual(output, `foo\"\"&&ls -al;echo \"\"bar`);\n    });\n  });\n});\n"], "filenames": ["CHANGELOG.md", "src/unix.js", "src/win.js", "test/unix.test.js", "test/win.test.js"], "buggy_code_start_loc": [10, 14, 14, 24, 24], "buggy_code_end_loc": [11, 15, 15, 24, 24], "fixing_code_start_loc": [10, 14, 14, 25, 25], "fixing_code_end_loc": [11, 15, 15, 41, 41], "type": "CWE-88", "message": "shescape is a simple shell escape package for JavaScript. In shescape before version 1.1.3, anyone using _Shescape_ to defend against shell injection may still be vulnerable against shell injection if the attacker manages to insert a into the payload. For an example see the referenced GitHub Security Advisory. The problem has been patched in version 1.1.3. No further changes are required.", "other": {"cve": {"id": "CVE-2021-21384", "sourceIdentifier": "security-advisories@github.com", "published": "2021-03-19T00:15:11.793", "lastModified": "2021-04-22T17:49:38.260", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "shescape is a simple shell escape package for JavaScript. In shescape before version 1.1.3, anyone using _Shescape_ to defend against shell injection may still be vulnerable against shell injection if the attacker manages to insert a into the payload. For an example see the referenced GitHub Security Advisory. The problem has been patched in version 1.1.3. No further changes are required."}, {"lang": "es", "value": "shescape es un paquete de escape de shell simple para JavaScript.&#xa0;En shescape versiones anteriores a 1.1.3, cualquiera que use _Shescape_ para defenderse de la inyecci\u00f3n de shell puede ser vulnerable frente a una inyecci\u00f3n shell si el atacante logra insertar en la carga \u00fatil.&#xa0;Para visualizar un ejemplo, consulte el Aviso de Seguridad de GitHub al que se hace referencia.&#xa0;El problema ha sido solucionado en la versi\u00f3n 1.1.3.&#xa0;No son requeridos m\u00e1s cambios"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.8, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:N", "attackVector": "LOCAL", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.0, "impactScore": 4.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.6}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.9, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-88"}]}], "configurations": [{"operator": "AND", "nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:shescape_project:shescape:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "1.1.3", "matchCriteriaId": "C88DEA52-C298-4E68-AA29-00122DE84930"}]}, {"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": false, "criteria": "cpe:2.3:o:microsoft:windows:-:*:*:*:*:*:*:*", "matchCriteriaId": "A2572D17-1DE6-457B-99CC-64AFD54487EA"}, {"vulnerable": false, "criteria": "cpe:2.3:o:opengroup:unix:-:*:*:*:*:*:*:*", "matchCriteriaId": "6A90CB3A-9BE7-475C-9E75-6ECAD2106302"}]}]}], "references": [{"url": "https://github.com/ericcornelissen/shescape/commit/07a069a66423809cbedd61d980c11ca44a29ea2b", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/ericcornelissen/shescape/releases/tag/v1.1.3", "source": "security-advisories@github.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/ericcornelissen/shescape/security/advisories/GHSA-f2rp-38vg-j3gh", "source": "security-advisories@github.com", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://www.npmjs.com/package/shescape", "source": "security-advisories@github.com", "tags": ["Product"]}]}, "github_commit_url": "https://github.com/ericcornelissen/shescape/commit/07a069a66423809cbedd61d980c11ca44a29ea2b"}}