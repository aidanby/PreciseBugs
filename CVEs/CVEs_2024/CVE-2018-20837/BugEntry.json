{"buggy_code": ["<?php\n\nnamespace gp\\admin\\Menu;\n\ndefined('is_running') or die('Not an entry point...');\n\nclass Ajax extends \\gp\\admin\\Menu{\n\n\tpublic function RunScript(){\n\n\t\tif( $this->cmd === 'return' ){\n\t\t\treturn;\n\t\t}\n\n\t\tswitch($this->cmd){\n\n\t\t\t//adding new files\n\t\t\tcase 'AddHidden':\n\t\t\t\t$this->AddHidden();\n\t\t\treturn;\n\n\t\t\tcase 'CopyForm':\n\t\t\t\t$this->CopyForm();\n\t\t\treturn;\n\n\t\t\tcase 'CopyPage':\n\t\t\t\t$this->CopyPage();\n\t\t\tbreak;\n\n\n\t\t\t// Page Insertion\n\t\t\tcase 'insert_before':\n\t\t\tcase 'insert_after':\n\t\t\tcase 'insert_child':\n\t\t\t\t$this->InsertDialog();\n\t\t\treturn;\n\n\t\t\tcase 'NewFile':\n\t\t\t\t$this->NewFile();\n\t\t\tbreak;\n\n\t\t\tcase 'InsertFromHidden';\n\t\t\t\t$this->InsertFromHidden();\n\t\t\tbreak;\n\n\t\t\tcase 'RestoreFromTrash':\n\t\t\t\t$this->RestoreFromTrash();\n\t\t\tbreak;\n\n\n\t\t\t//external links\n\t\t\tcase 'NewExternal':\n\t\t\t\t$this->NewExternal();\n\t\t\tbreak;\n\t\t\tcase 'EditExternal':\n\t\t\t\t$this->EditExternal();\n\t\t\treturn;\n\t\t\tcase 'SaveExternal':\n\t\t\t\t$this->SaveExternal();\n\t\t\tbreak;\n\n\n\t\t\t//extra area\n\t\t\tcase 'InsertExtra':\n\t\t\t\t$this->InsertExtra();\n\t\t\tbreak;\n\n\n\t\t\t//edit classes\n\t\t\tcase 'ClassesForm':\n\t\t\t\t$this->ClassesForm();\n\t\t\tbreak;\n\t\t\tcase 'SaveClasses':\n\t\t\t\t$this->SaveClasses();\n\t\t\tbreak;\n\n\n\t\t\t//menu editing\n\t\t\tcase 'hide':\n\t\t\t\t$this->Hide();\n\t\t\tbreak;\n\t\t\tcase 'MoveToTrash':\n\t\t\t\t$this->MoveToTrash();\n\t\t\tbreak;\n\n\n\t\t\t//rename\n\t\t\tcase 'renameform':\n\t\t\t\t$this->RenameForm(); //will die()\n\t\t\treturn;\n\t\t\tcase 'RenameFile':\n\t\t\t\t$this->RenameFile();\n\t\t\tbreak;\n\n\t\t\t//visibility\n\t\t\tcase 'ToggleVisibility':\n\t\t\t\t$this->ToggleVisibility();\n\t\t\tbreak;\n\n\t\t\t//homepage\n\t\t\tcase 'HomepageSelect':\n\t\t\t\t$this->HomepageSelect();\n\t\t\treturn;\n\t\t\tcase 'HomepageSave':\n\t\t\t\t$this->HomepageSave();\n\t\t\treturn;\n\t\t\tcase 'HomepageAuto':\n\t\t\t\t$this->HomepageAuto();\n\t\t\treturn;\n\t\t}\n\n\t\tparent::RunScript();\n\t}\n\n\n\t/**\n\t * Display a user form for adding a new page that won't be immediately added to a menu\n\t *\n\t */\n\tpublic function AddHidden(){\n\t\tglobal $langmessage, $gp_index;\n\n\t\t$_REQUEST += array('title'=>'');\n\t\t$_REQUEST['gpx_content'] = 'gpabox';\n\n\t\t//reusable format\n\t\tob_start();\n\t\techo '<p>';\n\t\techo '<button type=\"submit\" name=\"cmd\" value=\"%s\" class=\"gpsubmit gpvalidate\" data-cmd=\"gppost\">%s</button>';\n\t\techo '<button class=\"admin_box_close gpcancel\">'.$langmessage['cancel'].'</button>';\n\t\techo '</p>';\n\t\techo '</td></tr>';\n\t\techo '</tbody>';\n\t\t$format_bottom = ob_get_clean();\n\n\n\t\techo '<div class=\"inline_box\">';\n\n\t\techo '<div class=\"layout_links\" style=\"float:right\">';\n\t\techo '<a href=\"#gp_new_copy\" data-cmd=\"tabs\" class=\"selected\">'. $langmessage['Copy'] .'</a>';\n\t\techo '<a href=\"#gp_new_type\" data-cmd=\"tabs\">'. $langmessage['Content Type'] .'</a>';\n\t\techo '</div>';\n\n\n\t\techo '<h3>'.$langmessage['new_file'].'</h3>';\n\n\n\t\techo '<form action=\"'.$this->GetUrl('Admin/Menu/Ajax').'\" method=\"post\">';\n\t\tif( isset($_REQUEST['redir']) ){\n\t\t\techo '<input type=\"hidden\" name=\"redir\" value=\"redir\" />';\n\t\t}\n\n\n\t\techo '<table class=\"bordered full_width\">';\n\t\techo '<tr><th colspan=\"2\">'.$langmessage['options'].'</th></tr>';\n\n\t\t//title\n\t\techo '<tr><td>';\n\t\techo $langmessage['label'];\n\t\techo '</td><td>';\n\t\techo '<input type=\"text\" name=\"title\" maxlength=\"100\" size=\"50\" value=\"'.htmlspecialchars($_REQUEST['title']).'\" class=\"gpinput full_width\" required/>';\n\t\techo '</td></tr>';\n\n\t\t//copy\n\t\techo '<tbody id=\"gp_new_copy\">';\n\t\techo '<tr><td>';\n\t\techo $langmessage['Copy'];\n\t\techo '</td><td>';\n\t\t$gp_index_no_special = array();\n\t\tforeach( $gp_index as $title => $index ){\n\t\t\tif( strpos(strtolower($index),'special_') !== 0 ){\n\t\t\t\t$gp_index_no_special[$title] = $index;\n\t\t\t}\n\t\t}\n\t\t\\gp\\admin\\Menu\\Tools::ScrollList($gp_index_no_special);\n\t\techo sprintf($format_bottom,'CopyPage',$langmessage['create_new_file']);\n\n\n\t\t//content type\n\t\techo '<tr id=\"gp_new_type\" style=\"display:none\"><td>';\n\t\techo str_replace(' ','&nbsp;',$langmessage['Content Type']);\n\t\techo '</td><td>';\n\t\techo '<div id=\"new_section_links\">';\n\t\t\\gp\\Page\\Edit::NewSections(true);\n\t\techo '</div>';\n\n\t\techo sprintf($format_bottom,'NewFile',$langmessage['create_new_file']);\n\t\techo '</form>';\n\t\techo '</div>';\n\t}\n\n\n\t/**\n\t * Message or redirect when file is saved\n\t *\n\t */\n\tpublic function HiddenSaved($new_index){\n\t\tglobal $langmessage;\n\n\t\t$this->search_page = 0; //take user back to first page where the new page will be displayed\n\n\t\tif( isset($_REQUEST['redir']) ){\n\t\t\t$title\t= \\gp\\tool::IndexToTitle($new_index);\n\t\t\t$url\t= \\gp\\tool::AbsoluteUrl($title,'',true,false,true);\n\t\t\tmsg(sprintf($langmessage['will_redirect'],\\gp\\tool::Link_Page($title)));\n\t\t\t$this->page->ajaxReplace[] = array('location',$url,15000);\n\t\t}else{\n\t\t\tmsg($langmessage['SAVED']);\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Display a form for copying a page\n\t *\n\t */\n\tpublic function CopyForm(){\n\t\tglobal $langmessage, $gp_index;\n\n\n\t\t$index = $_REQUEST['index'];\n\t\t$from_title = \\gp\\tool::IndexToTitle($index);\n\n\t\tif( !$from_title ){\n\t\t\tmsg($langmessage['OOPS_TITLE']);\n\t\t\treturn false;\n\t\t}\n\n\t\t$from_label = \\gp\\tool::GetLabel($from_title);\n\t\t$from_label = \\gp\\tool::LabelSpecialChars($from_label);\n\n\t\techo '<div class=\"inline_box\">';\n\t\techo '<form method=\"post\" action=\"'.\\gp\\tool::GetUrl('Admin/Menu/Ajax').'\">';\n\t\tif( isset($_REQUEST['redir']) ){\n\t\t\techo '<input type=\"hidden\" name=\"redir\" value=\"redir\"/> ';\n\t\t}\n\t\techo '<input type=\"hidden\" name=\"from_title\" value=\"'.htmlspecialchars($from_title).'\"/> ';\n\t\techo '<table class=\"bordered full_width\" id=\"gp_rename_table\">';\n\n\t\techo '<thead><tr><th colspan=\"2\">';\n\t\techo $langmessage['Copy'];\n\t\techo '</th></tr></thead>';\n\n\t\techo '<tr class=\"line_row\"><td>';\n\t\techo $langmessage['from'];\n\t\techo '</td><td>';\n\t\techo $from_label;\n\t\techo '</td></tr>';\n\n\t\techo '<tr><td>';\n\t\techo $langmessage['to'];\n\t\techo '</td><td>';\n\t\techo '<input type=\"text\" name=\"title\" maxlength=\"100\" size=\"50\" value=\"'.$from_label.'\" class=\"gpinput\" />';\n\t\techo '</td></tr>';\n\n\t\techo '</table>';\n\n\t\techo '<p>';\n\t\techo '<input type=\"hidden\" name=\"cmd\" value=\"CopyPage\"/> ';\n\t\techo '<input type=\"submit\" name=\"\" value=\"'.$langmessage['continue'].'\" class=\"gpsubmit\" data-cmd=\"gppost\"/>';\n\t\techo '<input type=\"button\" class=\"admin_box_close gpcancel\" name=\"\" value=\"'.$langmessage['cancel'].'\" />';\n\t\techo '</p>';\n\n\t\techo '</form>';\n\t\techo '</div>';\n\t}\n\n\n\t/**\n\t * Perform a page copy\n\t *\n\t */\n\tpublic function CopyPage(){\n\t\tglobal $gp_index, $gp_titles, $langmessage, $users, $gpAdmin, $dataDir;\n\n\t\t$this->CacheSettings();\n\n\t\tif( !isset($_POST['from_title']) ){\n\t\t\tmsg($langmessage['OOPS'].' (Copy from not selected)');\n\n\t\t\tif( isset($_POST['insert_how']) ){\n\t\t\t\t$this->InsertDialog($_POST['insert_how']);\n\t\t\t}else{\n\t\t\t\t$this->AddHidden();\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t//existing page info\n\t\t$from_title = $_POST['from_title'];\n\t\tif( !isset($gp_index[$from_title]) ){\n\t\t\tmsg($langmessage['OOPS_TITLE']);\n\t\t\treturn false;\n\t\t}\n\t\t$from_index\t\t= $gp_index[$from_title];\n\t\t$info\t\t\t= $gp_titles[$from_index];\n\n\n\t\t//check the new title\n\t\t$title\t\t\t= $_POST['title'];\n\t\t$title\t\t\t= \\gp\\admin\\Tools::CheckPostedNewPage($title,$message);\n\t\tif( $title === false ){\n\t\t\tmsg($message);\n\t\t\treturn false;\n\t\t}\n\n\t\t//get the existing content\n\t\t$from_file\t\t= \\gp\\tool\\Files::PageFile($from_title);\n\t\t$contents\t\t= file_get_contents($from_file);\n\n\n\t\t//add to $gp_index first!\n\t\t$index\t\t\t\t= \\gp\\tool::NewFileIndex();\n\t\t$gp_index[$title]\t= $index;\n\t\t$file\t\t\t\t= \\gp\\tool\\Files::PageFile($title);\n\n\t\tif( !\\gp\\tool\\Files::Save($file,$contents) ){\n\t\t\tmsg($langmessage['OOPS'].' (File not saved)');\n\t\t\treturn false;\n\t\t}\n\n\t\t//set permissions for copied page\n\t\t// msg('gpAdmin = ' . pre($gpAdmin));\n\t\t$users = \\gp\\tool\\Files::Get('_site/users');\n\t\t$username = $gpAdmin['username'];\n\t\t$user_file = $dataDir . '/data/_sessions/' . $users[$username]['file_name'];\n\t\t$editing_values = $gpAdmin['editing'];\n\t\tif( $editing_values != 'all' && strpos($editing_values, ','.$index.',') === false ){\n\t\t\t$editing_values .= $index.',';\n\t\t\t$gpAdmin['editing'] = $editing_values;\n\t\t\t// save to user session file\n\t\t\t\\gp\\tool\\Files::SaveData($user_file, 'gpAdmin', $gpAdmin);\n\t\t\t// save to users.php\n\t\t\t$users[$username]['editing'] = $editing_values;\n\t\t\t\\gp\\tool\\Files::SaveData('_site/users', 'users', $users);\n\t\t}\n\n\t\t//add to gp_titles\n\t\t$new_titles\t\t\t\t\t\t= array();\n\t\t$new_titles[$index]['label']\t= \\gp\\admin\\Tools::PostedLabel($_POST['title']);\n\t\t$new_titles[$index]['type']\t\t= $info['type'];\n\t\t$gp_titles\t\t\t\t\t\t+= $new_titles;\n\n\n\t\t//add to menu\n\t\t$insert = array();\n\t\t$insert[$index] = array();\n\n\t\tif( !$this->SaveNew($insert) ){\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\n\t\t$this->HiddenSaved($index);\n\n\t\treturn true;\n\t}\n\n\n\n\t/**\n\t * Display the dialog for inserting pages into a menu\n\t *\n\t */\n\tpublic function InsertDialog($cmd = null){\n\t\tglobal $langmessage, $gp_index;\n\n\t\tif( is_null($cmd) ){\n\t\t\t$cmd = $this->cmd;\n\t\t}\n\n\t\t$_REQUEST['gpx_content'] = 'gpabox';\n\n\n\t\t//create format of each tab\n\t\tob_start();\n\t\techo '<div id=\"%s\" class=\"%s\">';\n\t\techo '<form action=\"'.\\gp\\tool::GetUrl('Admin/Menu/Ajax').'\" method=\"post\">';\n\t\techo '<input type=\"hidden\" name=\"insert_where\" value=\"'.htmlspecialchars($_REQUEST['insert_where']).'\" />';\n\t\techo '<input type=\"hidden\" name=\"insert_how\" value=\"'.htmlspecialchars($cmd).'\" />';\n\n\t\t// echo '<table class=\"bordered full_width\">';\n\t\t// echo '<thead><tr><th>&nbsp;</th></tr></thead>';\n\t\t// echo '</table>';\n\n\t\t$format_top = ob_get_clean();\n\n\t\tob_start();\n\t\techo '<p>';\n\t\techo '<button type=\"submit\" name=\"cmd\" value=\"%s\" class=\"gpsubmit\" data-cmd=\"gppost\">%s</button>';\n\t\techo '<button class=\"admin_box_close gpcancel\">'.$langmessage['cancel'].'</button>';\n\t\techo '</p>';\n\t\techo '</form>';\n\t\techo '</div>';\n\t\t$format_bottom = ob_get_clean();\n\n\n\n\t\techo '<div class=\"inline_box\">';\n\n\t\t\t//tabs\n\t\t\techo '<div class=\"layout_links\">';\n\t\t\techo   '<a href=\"#gp_Insert_Copy\" data-cmd=\"tabs\" class=\"selected\">'. $langmessage['Copy'] .'</a> ';\n\t\t\techo   '<a href=\"#gp_Insert_New\" data-cmd=\"tabs\">'. $langmessage['new_file'] .'</a> ';\n\t\t\techo   '<a href=\"#gp_Insert_Hidden\" data-cmd=\"tabs\">'. $langmessage['Available'] .'</a> ';\n\t\t\techo   '<a href=\"#gp_Insert_External\" data-cmd=\"tabs\">'. $langmessage['External Link'] .'</a> ';\n\t\t\techo   '<a href=\"#gp_Insert_Deleted\" data-cmd=\"tabs\">'. $langmessage['trash'] .'</a> ';\n\t\t\techo   '<a href=\"#gp_Insert_Extra\" data-cmd=\"tabs\">'. $langmessage['theme_content'] .'</a> ';\n\t\t\techo '</div>';\n\n\n\t\t\t// Copy\n\t\t\techo sprintf($format_top,'gp_Insert_Copy','');\n\t\t\techo '<table class=\"bordered full_width\">';\n\t\t\techo '<tr><td>';\n\t\t\techo $langmessage['label'];\n\t\t\techo '</td><td>';\n\t\t\techo '<input type=\"text\" name=\"title\" maxlength=\"100\" size=\"50\" value=\"\" class=\"gpinput full_width\" required/>';\n\t\t\techo '</td></tr>';\n\t\t\techo '<tr><td>';\n\t\t\techo $langmessage['Copy'];\n\t\t\techo '</td><td>';\n\t\t\t$copy_list = array();\n\t\t\tforeach($gp_index as $k => $v){\n\t\t\t\tif( strpos($v,'special_') === 0 ){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t$copy_list[$k] = $v;\n\t\t\t}\n\t\t\t\\gp\\admin\\Menu\\Tools::ScrollList($copy_list);\n\t\t\techo '</td></tr>';\n\t\t\techo '</table>';\n\t\t\techo sprintf($format_bottom,'CopyPage',$langmessage['Copy']);\n\n\n\t\t\t// Insert New\n\t\t\techo sprintf($format_top,'gp_Insert_New','nodisplay');\n\t\t\techo '<table class=\"bordered full_width\">';\n\t\t\techo '<tr><td>';\n\t\t\techo $langmessage['label'];\n\t\t\techo '</td><td>';\n\t\t\techo '<input type=\"text\" name=\"title\" maxlength=\"100\" value=\"\" size=\"50\" class=\"gpinput full_width\" required />';\n\t\t\techo '</td></tr>';\n\n\t\t\techo '<tr><td>';\n\t\t\techo $langmessage['Content Type'];\n\t\t\techo '</td><td>';\n\t\t\techo '<div id=\"new_section_links\">';\n\t\t\t\\gp\\Page\\Edit::NewSections(true);\n\t\t\techo '</div>';\n\t\t\techo '</td></tr>';\n\t\t\techo '</table>';\n\t\t\techo sprintf($format_bottom,'NewFile',$langmessage['create_new_file']);\n\n\n\t\t\t// Insert Hidden\n\t\t\t$avail = $this->GetAvail_Current();\n\n\t\t\tif( !empty($avail) ){\n\t\t\t\techo sprintf($format_top,'gp_Insert_Hidden','nodisplay');\n\t\t\t\t$avail = array_flip($avail);\n\t\t\t\t\\gp\\admin\\Menu\\Tools::ScrollList($avail,'keys[]','checkbox',true);\n\t\t\t\techo sprintf($format_bottom,'InsertFromHidden',$langmessage['insert_into_menu']);\n\t\t\t}\n\n\n\n\t\t\t// Insert Deleted / Restore from trash\n\t\t\t$scroll_list = $this->TrashScrolllist();\n\t\t\tif( !empty($scroll_list) ){\n\t\t\t\techo sprintf($format_top,'gp_Insert_Deleted','nodisplay');\n\t\t\t\techo $scroll_list;\n\t\t\t\techo sprintf($format_bottom,'RestoreFromTrash',$langmessage['restore_from_trash']);\n\t\t\t}\n\n\n\t\t\t//Insert External\n\t\t\techo '<div id=\"gp_Insert_External\" class=\"nodisplay\">';\n\t\t\t$args\t\t\t\t\t= array();\n\t\t\t$args['insert_how']\t\t= $cmd;\n\t\t\t$args['insert_where']\t= $_REQUEST['insert_where'];\n\t\t\t$this->ExternalForm('NewExternal',$langmessage['insert_into_menu'],$args);\n\t\t\techo '</div>';\n\n\n\t\t\t//Insert Extra\n\t\t\t$areas = $this->GetExtraAreas();\n\t\t\t// msg(\"Areas: \" . pre($areas));\n\t\t\tif( !empty($areas) ){\n\t\t\t\techo sprintf($format_top,'gp_Insert_Extra','nodisplay');\n\t\t\t\techo '<p style=\"padding:6px 10px; background:#f1f1f1;\">';\n\t\t\t\techo '<i class=\"fa fa-warning\" style=\"display:block; float:left; font-size:2em; line-height:1.33em; margin:0 0.5em 0 0.2em;\"></i>';\n\t\t\t\techo 'Outputs an Extra Content Area at the current position <strong>in the menu</strong>. ';\n\t\t\t\techo 'This way you may add anything from simple separators to subheads or even images or forms.<br/> ';\n\t\t\t\techo 'This is an advanced feature and requires specific custom CSS to be useful.</p>';\n\t\t\t\t\\gp\\admin\\Menu\\Tools::ScrollListExtra($areas);\n\t\t\t\techo sprintf($format_bottom, 'InsertExtra', $langmessage['insert']);\n\t\t\t}\n\n\n\t\techo '</div>';\n\n\t}\n\n\n\tfunction GetExtraAreas(){\n\t\tglobal $dataDir;\n\t\t$areas\t\t\t= array();\n\t\t$folder \t\t= $dataDir . '/data/_extra';\n\t\t$files\t\t\t= scandir($folder);\n\t\tforeach($files as $file){\n\t\t\t$title\t= \\gp\\admin\\Content\\Extra::AreaExists($file);\n\t\t\t// msg(\"file = \" . $file . \" -> title = \" . pre($title));\n\t\t\tif( $title == false ){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$areas[$title] = str_replace('_', ' ', $title);\n\t\t\t/* \n\t\t\tarray(\n\t\t\t\t'title'\t\t\t=> $title,\n\t\t\t\t'file_path'\t\t=> $folder . '/' . $title . '/page.php',\n\t\t\t\t'draft_path'\t=> $folder . '/' . $title . '/draft.php',\n\t\t\t\t'legacy_path'\t=> $folder . '/' . $title . '.php',\n\t\t\t);\n\t\t\t*/\n\t\t}\n\t\tuksort($areas,'strnatcasecmp');\n\t\treturn $areas;\n\t}\n\n\n\n\n\t/**\n\t * Generate a scroll list selector for trash titles\n\t *\n\t */\n\tfunction TrashScrolllist(){\n\t\tglobal $langmessage;\n\n\t\t$trashtitles = \\gp\\admin\\Content\\Trash::TrashFiles();\n\t\tif( empty($trashtitles) ){\n\t\t\treturn '';\n\t\t}\n\n\t\tob_start();\n\t\techo '<div class=\"gp_scrolllist\"><div>';\n\t\techo '<input type=\"text\" name=\"search\" value=\"\" class=\"gpsearch\" placeholder=\"'.$langmessage['Search'].'\" autocomplete=\"off\" />';\n\t\tforeach($trashtitles as $title => $info){\n\t\t\tif( empty($info['label']) ){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\techo '<label>';\n\t\t\techo '<input type=\"checkbox\" name=\"titles[]\" value=\"'.htmlspecialchars($title).'\" />';\n\t\t\techo '<span>';\n\t\t\techo $info['label'];\n\t\t\techo '<span class=\"slug\">';\n\t\t\tif( isset($info['title']) ){\n\t\t\t\techo '/'.$info['title'];\n\t\t\t}else{\n\t\t\t\techo '/'.$title;\n\t\t\t}\n\t\t\techo '</span>';\n\t\t\techo '</span>';\n\t\t\techo '</label>';\n\t\t}\n\t\techo '</div></div>';\n\n\t\treturn ob_get_clean();\n\t}\n\n\n\t/**\n\t * Create a new file\n\t *\n\t */\n\tpublic function NewFile(){\n\t\tglobal $langmessage;\n\t\t$this->CacheSettings();\n\n\t\t$new_index = \\gp\\admin\\Menu\\Tools::CreateNew();\n\t\tif( $new_index === false ){\n\t\t\treturn false;\n\t\t}\n\n\t\t$insert = array();\n\t\t$insert[$new_index] = array();\n\n\t\tif( !$this->SaveNew($insert) ){\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->HiddenSaved($new_index);\n\t}\n\n\n\t/**\n\t * Insert pages into the current menu from existing pages that aren't in the menu\n\t *\n\t */\n\tpublic function InsertFromHidden(){\n\t\tglobal $langmessage, $gp_index;\n\n\t\tif( is_null($this->curr_menu_array) ){\n\t\t\tmsg($langmessage['OOPS'].' (Menu not set)');\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->CacheSettings();\n\n\t\t//get list of titles from submitted indexes\n\t\t$titles = array();\n\t\tif( isset($_POST['keys']) ){\n\t\t\tforeach($_POST['keys'] as $index){\n\t\t\t\tif( \\gp\\tool::IndexToTitle($index) !== false ){\n\t\t\t\t\t$titles[$index]['level'] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( count($titles) == 0 ){\n\t\t\tmsg($langmessage['OOPS'].' (Nothing selected)');\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\t\tif( !$this->SaveNew($titles) ){\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Add titles to the current menu from the trash\n\t *\n\t */\n\tpublic function RestoreFromTrash(){\n\t\tglobal $langmessage, $gp_index;\n\n\n\t\tif( is_null($this->curr_menu_array) ){\n\t\t\tmsg($langmessage['OOPS']);\n\t\t\treturn false;\n\t\t}\n\n\t\tif( !isset($_POST['titles']) ){\n\t\t\tmsg($langmessage['OOPS'].' (Nothing Selected)');\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->CacheSettings();\n\n\t\t$titles\t\t\t= array();\n\t\t$menu\t\t\t= \\gp\\admin\\Content\\Trash::RestoreTitles($_POST['titles']);\n\n\n\t\tif( empty($menu) ){\n\t\t\tmsg($langmessage['OOPS']);\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\n\t\tif( !$this->SaveNew($menu) ){\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\t\t\\gp\\admin\\Content\\Trash::ModTrashData(null,$titles);\n\t}\n\n\n\t/**\n\t * Form for adding external link\n\t *\n\t */\n\tpublic function ExternalForm($cmd,$submit,$args){\n\t\tglobal $langmessage;\n\n\t\t//these aren't all required for each usage of ExternalForm()\n\t\t$args += array(\n\t\t\t\t\t'url'=>'http://',\n\t\t\t\t\t'label'=>'',\n\t\t\t\t\t'title_attr'=>'',\n\t\t\t\t\t'insert_how'=>'',\n\t\t\t\t\t'insert_where'=>'',\n\t\t\t\t\t'key'=>''\n\t\t\t\t\t);\n\n\n\t\techo '<form action=\"'.$this->GetUrl('Admin/Menu/Ajax').'\" method=\"post\">';\n\t\techo '<input type=\"hidden\" name=\"insert_how\" value=\"'.htmlspecialchars($args['insert_how']).'\" />';\n\t\techo '<input type=\"hidden\" name=\"insert_where\" value=\"'.htmlspecialchars($args['insert_where']).'\" />';\n\t\techo '<input type=\"hidden\" name=\"key\" value=\"'.htmlspecialchars($args['key']).'\" />';\n\n\t\techo '<table class=\"bordered full_width\">';\n\n\t\t// echo '<tr>';\n\t\t// echo '<th>&nbsp;</th>';\n\t\t// echo '<th>&nbsp;</th>';\n\t\t// echo '</tr>';\n\n\t\techo '<tr><td>';\n\t\techo $langmessage['Target URL'];\n\t\techo '</td><td>';\n\t\techo '<input type=\"text\" name=\"url\" value=\"'.$args['url'].'\" class=\"gpinput\" required />';\n\t\techo '</td></tr>';\n\n\t\techo '<tr><td>';\n\t\techo $langmessage['label'];\n\t\techo '</td><td>';\n\t\techo '<input type=\"text\" name=\"label\" value=\"'.\\gp\\tool::LabelSpecialChars($args['label']).'\" class=\"gpinput\" required />';\n\t\techo '</td></tr>';\n\n\t\techo '<tr><td>';\n\t\techo $langmessage['title attribute'];\n\t\techo '</td><td>';\n\t\techo '<input type=\"text\" name=\"title_attr\" value=\"'.$args['title_attr'].'\" class=\"gpinput\"/>';\n\t\techo '</td></tr>';\n\n\t\techo '<tr><td>';\n\t\techo $langmessage['New_Window'];\n\t\techo '</td><td>';\n\t\tif( isset($args['new_win']) ){\n\t\t\techo '<input type=\"checkbox\" name=\"new_win\" value=\"new_win\" checked=\"checked\" />';\n\t\t}else{\n\t\t\techo '<input type=\"checkbox\" name=\"new_win\" value=\"new_win\" />';\n\t\t}\n\t\techo '</td></tr>';\n\t\techo '</table>';\n\n\t\techo '<p>';\n\t\techo '<input type=\"hidden\" name=\"cmd\" value=\"'.htmlspecialchars($cmd).'\" />';\n\t\techo '<input type=\"submit\" name=\"\" value=\"'.$submit.'\" class=\"gpsubmit gpvalidate\" data-cmd=\"gppost\"/> ';\n\t\techo '<input type=\"submit\" value=\"'.$langmessage['cancel'].'\" class=\"admin_box_close gpcancel\" /> ';\n\t\techo '</p>';\n\n\t\techo '</form>';\n\t}\n\n\n\t/**\n\t * Form for adding/editing custom CSS class names a menu item\n\t *\n\t */\n\tpublic function ClassesForm(){\n\t\tglobal $langmessage; // msg('ma = ' .pre($this->curr_menu_array));\n\n\t\tif( !isset($_REQUEST['index']) || !isset($this->curr_menu_array[$_REQUEST['index']]) ){\n\t\t\tmsg($langmessage['OOPS'] . ' (Invalid request or menu key)');\n\t\t\treturn;\n\t\t}\n\n\t\t$key = $_REQUEST['index'];\n\n\t\t$classes_li = '';\n\t\tif( isset($this->curr_menu_array[$key]['classes_li']) ){\n\t\t\t$classes_li = $this->curr_menu_array[$key]['classes_li'];\n\t\t}\n\n\t\tif( !isset($_REQUEST['no_a_classes']) ){\n\t\t\t$classes_a = '';\n\t\t\tif( isset($this->curr_menu_array[$key]['classes_a']) ){\n\t\t\t\t$classes_a = $this->curr_menu_array[$key]['classes_a'];\n\t\t\t}\n\t\t}\n\n\t\t$classes_child_ul = '';\n\t\tif( isset($this->curr_menu_array[$key]['classes_child_ul']) ){\n\t\t\t$classes_child_ul = $this->curr_menu_array[$key]['classes_child_ul'];\n\t\t}\n\n\n\t\techo '<div class=\"inline_box\">';\n\t\techo '<form action=\"' . $this->GetUrl('Admin/Menu/Ajax') . '\" method=\"post\">';\n\t\techo '<input type=\"hidden\" name=\"key\" value=\"' . htmlspecialchars($key) . '\" />';\n\n\t\techo '<h2>' . $langmessage['Menu Output'] . ' - ' . $langmessage['Classes'] . '</h2>';\n\n\t\techo '<table class=\"bordered full_width\">';\n\t\techo '<tr><th style=\"width:20%;\">Menu Element</th><th>' . $langmessage['Classes'] . '</th></tr>';\n\n\t\techo '<tr>';\n\t\techo '<td><strong>li</strong></td>';\n\t\techo '<td><input type=\"text\" placeholder=\"some-custom-li-class another-custom-li-class\" ';\n\t\techo 'name=\"classes_li\" value=\"' . htmlspecialchars($classes_li) . '\" class=\"gpinput\" style=\"width:100%;\" /></td>';\n\t\techo '</tr>';\n\n\t\tif( !isset($_REQUEST['no_a_classes']) ){\n\t\t\techo '<tr>';\n\t\t\techo '<td>li &gt; <strong>a</strong></td>';\n\t\t\techo '<td><input type=\"text\" placeholder=\"custom-a-class another-a-class\" ';\n\t\t\techo 'name=\"classes_a\" value=\"' . htmlspecialchars($classes_a) . '\" class=\"gpinput\" style=\"width:100%;\" /></td>';\n\t\t\techo '</tr>';\n\t\t}\n\n\t\techo '<tr>';\n\t\techo '<td>li &gt; <strong>ul</strong></td>';\n\t\techo '<td><input type=\"text\" placeholder=\"custom-child-ul-class another-child-ul-class\" ';\n\t\techo 'name=\"classes_child_ul\" value=\"' . htmlspecialchars($classes_child_ul) . '\" class=\"gpinput\" style=\"width:100%;\" /></td>';\n\t\techo '</tr>';\n\n\t\techo '</table>';\n\n\t\techo '<p>';\n\t\techo '<input type=\"hidden\" name=\"cmd\" value=\"SaveClasses\" />';\n\t\techo '<input type=\"submit\" name=\"\" value=\"' . $langmessage['save'] . '\" class=\"gpsubmit\" data-cmd=\"gppost\"/> ';\n\t\techo '<input type=\"submit\" value=\"' . $langmessage['cancel'] . '\" class=\"admin_box_close gpcancel\" /> ';\n\t\techo '</p>';\n\n\t\techo '</form>';\n\t\techo '</div>';\n\t}\n\n\n\t/**\n\t * Save posted custom CSS class name(s) for menu item\n\t *\n\t */\n\tpublic function SaveClasses(){\n\t\tglobal $langmessage;\n\n\t\tif( !isset($_POST['key']) || !isset($_POST['classes_li']) || !isset($_POST['classes_a']) || !isset($_POST['classes_child_ul']) ){\n\t\t\tmsg($langmessage['OOPS'] . ' (Invalid request)');\n\t\t\treturn;\n\t\t}\n\n\t\t$key = $_POST['key'];\n\n\t\tif( !isset($this->curr_menu_array[$key]) ){\n\t\t\tmsg($langmessage['OOPS'] . ' (Invalid menu key)');\n\t\t\treturn;\n\t\t}\n\n\t\t$this->CacheSettings();\n\n\t\t$this->curr_menu_array[$key]['classes_li']\t\t\t= $this->ValidClasses($_POST['classes_li']);\n\t\t$this->curr_menu_array[$key]['classes_a']\t\t\t= $this->ValidClasses($_POST['classes_a']);\n\t\t$this->curr_menu_array[$key]['classes_child_ul']\t= $this->ValidClasses($_POST['classes_child_ul']);\n\n\t\tif( !$this->SaveMenu(false) ){\n\t\t\tmsg($langmessage['OOPS'].' (Menu Not Saved)');\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\n\n\t/**\n\t * Removes invalid CSS class names\n\t * Returns only valid CSS class names\n\t * Displays error/remove msg for invalid class names\n\t * @param classes (space separated string or array)\n\t * @return valid_classes (string or array, depending on passed argument type)\n\t *\n\t */\n\tpublic function ValidClasses($classes){\n\t\tglobal $langmessage;\n\n\t\t$arg_type = gettype($classes);\n\n\t\tif( $arg_type != 'string' && $arg_type != 'array' ){\n\t\t\tmsg($langmessage['OOPS'].' (Wrong type <em>' . $arg_type . '</em>, array or string expected)');\n\t\t\treturn false;\n\t\t}\n\t\tif( empty($classes) ){\n\t\t\treturn $classes;\n\t\t}\n\n\t\tif( $arg_type == 'string' ){\n\t\t\t$classes = explode(' ', $classes);\n\t\t}\n\n \t\t$valid_classes = array();\n\t\tforeach( $classes as $classname ){\n\t\t\tif( $classname == ' ' || empty($classname) ){\n\t\t\t\t// skip leftovers from multiple space chars\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// $classname = trim($classname);\n\t\t\tif( !preg_match(\"/^([a-z_]|-[a-z_-])[a-z\\d_-]*$/i\", $classname) ){\n\t\t\t\tmsg('<em>' . htmlspecialchars($classname) . '</em> is not a valid CSS class name and was removed.');\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$valid_classes[] = $classname;\n\t\t}\n\n\t\tif( $arg_type == 'string' ){\n\t\t\t$valid_classes = implode(' ', $valid_classes);\n\t\t}\n\n\t\treturn $valid_classes;\n\t}\n\n\n\n\t/**\n\t * Place an Extra Content Area inside the current menu\n\t *\n\t */\n\tpublic function InsertExtra(){\n\t\tglobal $gp_menu, $langmessage;\n\n\t\t$this->CacheSettings();\n\t\t$area = $_POST['from_extra'];\n\n\t\tif( !\\gp\\admin\\Content\\Extra::AreaExists($area) ){\n\t\t\tmsg($langmessage['OOPS'].' (Extra Area does not exist)');\n\t\t\treturn;\n\t\t}\n\n\t\t$key\t\t\t= $this->NewExtraKey();\n\t\t$insert\t\t\t= array();\n\t\t$insert[$key]\t= array(\n\t\t\t'area' \t=> $area,\n\t\t\t'label'\t=> str_replace('_', ' ', $area),\n\t\t);\n\n\t\tif( !$this->SaveNew($insert) ){ \n\t\t\tmsg($langmessage['OOPS'].' (Adding Extra Content Area failed)');\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tpublic function NewExtraKey(){\n\t\t$num_index = 0;\n\t\tdo{\n\t\t\t$new_key = '_extra_' . base_convert($num_index, 10, 36);\n\t\t\t$num_index++;\n\t\t}while( isset($this->curr_menu_array[$new_key]) );\n\n\t\treturn $new_key;\n\t}\n\n\n\t/**\n\t * Save a new external link in the current menu\n\t *\n\t */\n\tpublic function NewExternal(){\n\t\tglobal $langmessage;\n\n\t\t$this->CacheSettings();\n\t\t$array = $this->ExternalPost();\n\n\t\tif( !$array ){\n\t\t\tmsg($langmessage['OOPS'].' (Invalid Request)');\n\t\t\treturn;\n\t\t}\n\n\t\t$key\t\t\t= $this->NewExternalKey();\n\t\t$insert\t\t\t= array();\n\t\t$insert[$key]\t= $array;\n\n\t\tif( !$this->SaveNew($insert) ){ \n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\t/**\n\t * Edit an external link entry in the current menu\n\t *\n\t */\n\tpublic function EditExternal(){\n\t\tglobal $langmessage;\n\n\t\t$key =& $_REQUEST['key'];\n\t\tif( !isset($this->curr_menu_array[$key]) ){\n\t\t\tmsg($langmessage['OOPS'].' (Current menu not set)');\n\t\t\treturn false;\n\t\t}\n\n\t\t$info = $this->curr_menu_array[$key];\n\t\t$info['key'] = $key;\n\n\t\techo '<div class=\"inline_box\">';\n\n\t\techo '<h3>'.$langmessage['External Link'].'</h3>';\n\n\t\t$this->ExternalForm('SaveExternal',$langmessage['save'],$info);\n\n\t\techo '</div>';\n\t}\n\n\n\t/**\n\t * Save changes to an external link entry in the current menu\n\t *\n\t */\n\tpublic function SaveExternal(){\n\t\tglobal $langmessage;\n\n\t\t$key =& $_POST['key'];\n\t\tif( !isset($this->curr_menu_array[$key]) ){\n\t\t\tmsg($langmessage['OOPS'].' (Current menu not set)');\n\t\t\treturn false;\n\t\t}\n\t\t$level = $this->curr_menu_array[$key]['level'];\n\n\t\t$array = $this->ExternalPost();\n\t\tif( !$array ){\n\t\t\tmsg($langmessage['OOPS'].' (1)');\n\t\t\treturn;\n\t\t}\n\n\t\t$this->CacheSettings();\n\n\t\t$array['level'] = $level;\n\t\t$this->curr_menu_array[$key] = $array;\n\n\t\tif( !$this->SaveMenu(false) ){\n\t\t\tmsg($langmessage['OOPS'].' (Menu Not Saved)');\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Check the values of a post with external link values\n\t *\n\t */\n\tpublic function ExternalPost(){\n\n\t\t$array = array();\n\t\tif( empty($_POST['url']) || $_POST['url'] == 'http://' ){\n\t\t\treturn false;\n\t\t}\n\t\t$array['url']\t= htmlspecialchars($_POST['url']);\n\t\t$array['label'] = \\gp\\admin\\Tools::PostedLabel($_POST['label']);\n\n\t\tif( empty($array['label']) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( !empty($_POST['title_attr']) ){\n\t\t\t$array['title_attr'] = htmlspecialchars($_POST['title_attr']);\n\t\t}\n\t\tif( isset($_POST['new_win']) && $_POST['new_win'] == 'new_win' ){\n\t\t\t$array['new_win'] = true;\n\t\t}\n\t\treturn $array;\n\t}\n\n\tpublic function NewExternalKey(){\n\n\t\t$num_index = 0;\n\t\tdo{\n\t\t\t$new_key = '_'.base_convert($num_index,10,36);\n\t\t\t$num_index++;\n\t\t}while( isset($this->curr_menu_array[$new_key]) );\n\n\t\treturn $new_key;\n\t}\n\n\n\t/**\n\t * Save pages\n\t *\n\t * @param array $titles\n\t * @return bool\n\t */\n\tprotected function SaveNew($titles){\n\t\tglobal $langmessage;\n\n\t\t//menu modification\n\t\tif( isset($_POST['insert_where']) && isset($_POST['insert_how']) ){\n\n\t\t\tif( !$this->MenuInsert($titles, $_POST['insert_where'], $_POST['insert_how']) ){\n\t\t\t\tmsg($langmessage['OOPS'].' (Insert Failed)');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif( !$this->SaveMenu(true) ){\n\t\t\t\tmsg($langmessage['OOPS'].' (Menu Not Saved)');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\n\t\tif( !\\gp\\admin\\Tools::SavePagesPHP(true) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Insert titles into the current menu if needed\n\t *\n\t */\n\tpublic function MenuInsert($titles, $neighbor, $insert_how){\n\t\tswitch($insert_how){\n\t\t\tcase 'insert_before':\n\t\t\treturn $this->MenuInsert_Before($titles, $neighbor);\n\n\t\t\tcase 'insert_after':\n\t\t\treturn $this->MenuInsert_After($titles, $neighbor);\n\n\t\t\tcase 'insert_child':\n\t\t\treturn $this->MenuInsert_After($titles, $neighbor, 1);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * Remove from the menu\n\t *\n\t */\n\tpublic function Hide(){\n\t\tglobal $langmessage;\n\n\t\tif( is_null($this->curr_menu_array) ){\n\t\t\tmsg($langmessage['OOPS'].'(1)');\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->CacheSettings();\n\n\t\t$_POST\t\t+= array('index'=>'');\n\t\t$indexes \t= explode(',',$_POST['index']);\n\n\t\tforeach($indexes as $index ){\n\n\t\t\tif( count($this->curr_menu_array) == 1 ){\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif( !isset($this->curr_menu_array[$index]) ){\n\t\t\t\tmsg($langmessage['OOPS'].'(3)');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif( !$this->RmFromMenu($index) ){\n\t\t\t\tmsg($langmessage['OOPS'].'(4)');\n\t\t\t\t$this->RestoreSettings();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif( $this->SaveMenu(false) ){\n\t\t\treturn true;\n\t\t}\n\n\t\tmsg($langmessage['OOPS'].'(5)');\n\t\t$this->RestoreSettings();\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * Move To Trash\n\t * Hide special pages\n\t *\n\t */\n\tpublic function MoveToTrash(){\n\t\tglobal $gp_titles, $gp_index, $langmessage, $gp_menu, $config, $dataDir;\n\n\t\t$this->CacheSettings();\n\n\t\t$_POST\t\t\t+= array('index'=>'');\n\t\t$indexes\t\t= explode(',',$_POST['index']);\n\t\t$trash_data\t\t= array();\n\n\n\t\tforeach($indexes as $index){\n\n\t\t\t$title\t= \\gp\\tool::IndexToTitle($index);\n\n\t\t\t// Create file in trash\n\t\t\tif( $title ){\n\t\t\t\tif( !\\gp\\admin\\Content\\Trash::MoveToTrash_File($title,$index,$trash_data) ){\n\t\t\t\t\tmsg($langmessage['OOPS'].' (Not Moved)');\n\t\t\t\t\t$this->RestoreSettings();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// Remove from menu\n\t\t\tif( isset($gp_menu[$index]) ){\n\n\t\t\t\tif( count($gp_menu) == 1 ){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( !$this->RmFromMenu($index,false) ){\n\t\t\t\t\tmsg($langmessage['OOPS']);\n\t\t\t\t\t$this->RestoreSettings();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tunset($gp_titles[$index]);\n\t\t\tunset($gp_index[$title]);\n\t\t}\n\n\n\t\t\\gp\\admin\\Menu\\Tools::ResetHomepage();\n\n\n\t\tif( !\\gp\\admin\\Tools::SaveAllConfig() ){\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\t\t$link = \\gp\\tool::GetUrl('Admin/Trash');\n\t\tmsg(sprintf($langmessage['MOVED_TO_TRASH'],$link));\n\n\n\t\t\\gp\\tool\\Plugins::Action('MenuPageTrashed',array($indexes));\n\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Rename\n\t *\n\t */\n\tpublic function RenameForm(){\n\t\t\\gp\\Page\\Rename::RenameForm();\n\t}\n\n\tpublic function RenameFile(){\n\t\tglobal $langmessage, $gp_index;\n\n\t\t//prepare variables\n\t\t$title =& $_REQUEST['title'];\n\t\tif( !isset($gp_index[$title]) ){\n\t\t\tmsg($langmessage['OOPS'].' (R0)');\n\t\t\treturn false;\n\t\t}\n\n\t\t\\gp\\Page\\Rename::RenameFile($title);\n\t}\n\n\n\t/**\n\t * Toggle Page Visibility\n\t *\n\t */\n\tpublic function ToggleVisibility(){\n\t\t$_REQUEST += array('index'=>'','visibility'=>'');\n\t\t\\gp\\Page\\Visibility::Toggle($_REQUEST['index'], $_REQUEST['visibility']);\n\t}\n\n\n\t/**\n\t * Display a form for selecting the homepage\n\t *\n\t */\n\tpublic function HomepageSelect(){\n\t\tglobal $langmessage;\n\n\t\techo '<div class=\"inline_box\">';\n\t\techo '<form action=\"'.\\gp\\tool::GetUrl('Admin/Menu/Ajax').'\" method=\"post\">';\n\n\t\techo '<h3><i class=\"fa fa-home\"></i> ';\n\t\techo $langmessage['Homepage'];\n\t\techo '</h3>';\n\n\t\techo '<p class=\"homepage_setting\">';\n\t\techo '<input type=\"text\" class=\"title-autocomplete gpinput\" name=\"homepage\" />';\n\t\techo '</p>';\n\n\n\t\techo '<p>';\n\t\techo '<button type=\"submit\" name=\"cmd\" value=\"HomepageSave\" class=\"gpsubmit\" data-cmd=\"gppost\">'.htmlspecialchars($langmessage['save']).'</button> ';\n\t\techo '<button type=\"submit\" class=\"admin_box_close gpcancel\">'.htmlspecialchars($langmessage['cancel']).'</button>';\n\t\techo '</p>';\n\n\t\techo '</form>';\n\t\techo '</div>';\n\n\t}\n\n\n\t/**\n\t * Set homepage to auto mode\n\t * homepage will be first item in main menu\n\t *\n\t */\n\tpublic function HomepageAuto(){ \n\t\tglobal $config;\n\n\t\t$config['homepath_auto'] = true;\n\t\tif( !\\gp\\admin\\Tools::SaveConfig(true) ){\n\t\t\treturn;\n\t\t}\n\n\t\t//update the display\n\t\tob_start();\n\t\t$this->HomepageDisplay();\n\t\t$content = ob_get_clean();\n\n\t\t$this->page->ajaxReplace[] = array('inner', '.homepage_setting', $content);\n\n\t}\n\n\n\t/**\n\t * Save the posted page as the homepage\n\t *\n\t */\n\tpublic function HomepageSave(){\n\t\tglobal $langmessage, $config, $gp_index, $gp_titles;\n\n\t\t$homepage = $_POST['homepage'];\n\t\t$homepage_key = false;\n\t\tif( isset($gp_index[$homepage]) ){\n\t\t\t$homepage_key = $gp_index[$homepage];\n\t\t}else{\n\n\t\t\tforeach($gp_titles as $index => $title){\n\t\t\t\tif( $title['label'] === $homepage ){\n\t\t\t\t\t$homepage_key = $index;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( !$homepage_key ){\n\t\t\t\tmsg($langmessage['OOPS']);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t$config['homepath_key']\t\t= $homepage_key;\n\t\t$config['homepath']\t\t\t= \\gp\\tool::IndexToTitle($config['homepath_key']);\n\t\t// custom homepage from post --> disable auto mode\n\t\t$config['homepath_auto']\t= false;\n\t\tif( !\\gp\\admin\\Tools::SaveConfig(true) ){\n\t\t\treturn;\n\t\t}\n\n\t\t//update the display\n\t\tob_start();\n\t\t$this->HomepageDisplay();\n\t\t$content = ob_get_clean();\n\n\t\t$this->page->ajaxReplace[] = array('inner','.homepage_setting',$content);\n\t}\n\n\n\n\n}\n"], "fixing_code": ["<?php\n\nnamespace gp\\admin\\Menu;\n\ndefined('is_running') or die('Not an entry point...');\n\nclass Ajax extends \\gp\\admin\\Menu{\n\n\tpublic function RunScript(){\n\n\t\tif( $this->cmd === 'return' ){\n\t\t\treturn;\n\t\t}\n\n\t\tswitch($this->cmd){\n\n\t\t\t//adding new files\n\t\t\tcase 'AddHidden':\n\t\t\t\t$this->AddHidden();\n\t\t\treturn;\n\n\t\t\tcase 'CopyForm':\n\t\t\t\t$this->CopyForm();\n\t\t\treturn;\n\n\t\t\tcase 'CopyPage':\n\t\t\t\t$this->CopyPage();\n\t\t\tbreak;\n\n\n\t\t\t// Page Insertion\n\t\t\tcase 'insert_before':\n\t\t\tcase 'insert_after':\n\t\t\tcase 'insert_child':\n\t\t\t\t$this->InsertDialog();\n\t\t\treturn;\n\n\t\t\tcase 'NewFile':\n\t\t\t\t$this->NewFile();\n\t\t\tbreak;\n\n\t\t\tcase 'InsertFromHidden';\n\t\t\t\t$this->InsertFromHidden();\n\t\t\tbreak;\n\n\t\t\tcase 'RestoreFromTrash':\n\t\t\t\t$this->RestoreFromTrash();\n\t\t\tbreak;\n\n\n\t\t\t//external links\n\t\t\tcase 'NewExternal':\n\t\t\t\t$this->NewExternal();\n\t\t\tbreak;\n\t\t\tcase 'EditExternal':\n\t\t\t\t$this->EditExternal();\n\t\t\treturn;\n\t\t\tcase 'SaveExternal':\n\t\t\t\t$this->SaveExternal();\n\t\t\tbreak;\n\n\n\t\t\t//extra area\n\t\t\tcase 'InsertExtra':\n\t\t\t\t$this->InsertExtra();\n\t\t\tbreak;\n\n\n\t\t\t//edit classes\n\t\t\tcase 'ClassesForm':\n\t\t\t\t$this->ClassesForm();\n\t\t\tbreak;\n\t\t\tcase 'SaveClasses':\n\t\t\t\t$this->SaveClasses();\n\t\t\tbreak;\n\n\n\t\t\t//menu editing\n\t\t\tcase 'hide':\n\t\t\t\t$this->Hide();\n\t\t\tbreak;\n\t\t\tcase 'MoveToTrash':\n\t\t\t\t$this->MoveToTrash();\n\t\t\tbreak;\n\n\n\t\t\t//rename\n\t\t\tcase 'renameform':\n\t\t\t\t$this->RenameForm(); //will die()\n\t\t\treturn;\n\t\t\tcase 'RenameFile':\n\t\t\t\t$this->RenameFile();\n\t\t\tbreak;\n\n\t\t\t//visibility\n\t\t\tcase 'ToggleVisibility':\n\t\t\t\t$this->ToggleVisibility();\n\t\t\tbreak;\n\n\t\t\t//homepage\n\t\t\tcase 'HomepageSelect':\n\t\t\t\t$this->HomepageSelect();\n\t\t\treturn;\n\t\t\tcase 'HomepageSave':\n\t\t\t\t$this->HomepageSave();\n\t\t\treturn;\n\t\t\tcase 'HomepageAuto':\n\t\t\t\t$this->HomepageAuto();\n\t\t\treturn;\n\t\t}\n\n\t\tparent::RunScript();\n\t}\n\n\n\t/**\n\t * Display a user form for adding a new page that won't be immediately added to a menu\n\t *\n\t */\n\tpublic function AddHidden(){\n\t\tglobal $langmessage, $gp_index;\n\n\t\t$_REQUEST += array('title'=>'');\n\t\t$_REQUEST['gpx_content'] = 'gpabox';\n\n\t\t//reusable format\n\t\tob_start();\n\t\techo '<p>';\n\t\techo '<button type=\"submit\" name=\"cmd\" value=\"%s\" class=\"gpsubmit gpvalidate\" data-cmd=\"gppost\">%s</button>';\n\t\techo '<button class=\"admin_box_close gpcancel\">'.$langmessage['cancel'].'</button>';\n\t\techo '</p>';\n\t\techo '</td></tr>';\n\t\techo '</tbody>';\n\t\t$format_bottom = ob_get_clean();\n\n\n\t\techo '<div class=\"inline_box\">';\n\n\t\techo '<div class=\"layout_links\" style=\"float:right\">';\n\t\techo '<a href=\"#gp_new_copy\" data-cmd=\"tabs\" class=\"selected\">'. $langmessage['Copy'] .'</a>';\n\t\techo '<a href=\"#gp_new_type\" data-cmd=\"tabs\">'. $langmessage['Content Type'] .'</a>';\n\t\techo '</div>';\n\n\n\t\techo '<h3>'.$langmessage['new_file'].'</h3>';\n\n\n\t\techo '<form action=\"'.$this->GetUrl('Admin/Menu/Ajax').'\" method=\"post\">';\n\t\tif( isset($_REQUEST['redir']) ){\n\t\t\techo '<input type=\"hidden\" name=\"redir\" value=\"redir\" />';\n\t\t}\n\n\n\t\techo '<table class=\"bordered full_width\">';\n\t\techo '<tr><th colspan=\"2\">'.$langmessage['options'].'</th></tr>';\n\n\t\t//title\n\t\t$new_title = htmlspecialchars($_REQUEST['title']);\n\t\t// prevent code injections\n\t\t$new_title = str_replace(array('=', '/', '{', '}', ':', ',', ';'), '', $new_title);\n\t\techo '<tr><td>';\n\t\techo $langmessage['label'];\n\t\techo '</td><td>';\n\t\techo '<input type=\"text\" name=\"title\" maxlength=\"100\" size=\"50\" value=\"'. $new_title .'\" class=\"gpinput full_width\" required/>';\n\t\techo '</td></tr>';\n\n\t\t//copy\n\t\techo '<tbody id=\"gp_new_copy\">';\n\t\techo '<tr><td>';\n\t\techo $langmessage['Copy'];\n\t\techo '</td><td>';\n\t\t$gp_index_no_special = array();\n\t\tforeach( $gp_index as $title => $index ){\n\t\t\tif( strpos(strtolower($index),'special_') !== 0 ){\n\t\t\t\t$gp_index_no_special[$title] = $index;\n\t\t\t}\n\t\t}\n\t\t\\gp\\admin\\Menu\\Tools::ScrollList($gp_index_no_special);\n\t\techo sprintf($format_bottom,'CopyPage',$langmessage['create_new_file']);\n\n\n\t\t//content type\n\t\techo '<tr id=\"gp_new_type\" style=\"display:none\"><td>';\n\t\techo str_replace(' ','&nbsp;',$langmessage['Content Type']);\n\t\techo '</td><td>';\n\t\techo '<div id=\"new_section_links\">';\n\t\t\\gp\\Page\\Edit::NewSections(true);\n\t\techo '</div>';\n\n\t\techo sprintf($format_bottom,'NewFile',$langmessage['create_new_file']);\n\t\techo '</form>';\n\t\techo '</div>';\n\t}\n\n\n\t/**\n\t * Message or redirect when file is saved\n\t *\n\t */\n\tpublic function HiddenSaved($new_index){\n\t\tglobal $langmessage;\n\n\t\t$this->search_page = 0; //take user back to first page where the new page will be displayed\n\n\t\tif( isset($_REQUEST['redir']) ){\n\t\t\t$title\t= \\gp\\tool::IndexToTitle($new_index);\n\t\t\t$url\t= \\gp\\tool::AbsoluteUrl($title,'',true,false,true);\n\t\t\tmsg(sprintf($langmessage['will_redirect'],\\gp\\tool::Link_Page($title)));\n\t\t\t$this->page->ajaxReplace[] = array('location',$url,15000);\n\t\t}else{\n\t\t\tmsg($langmessage['SAVED']);\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Display a form for copying a page\n\t *\n\t */\n\tpublic function CopyForm(){\n\t\tglobal $langmessage, $gp_index;\n\n\n\t\t$index = $_REQUEST['index'];\n\t\t$from_title = \\gp\\tool::IndexToTitle($index);\n\n\t\tif( !$from_title ){\n\t\t\tmsg($langmessage['OOPS_TITLE']);\n\t\t\treturn false;\n\t\t}\n\n\t\t$from_label = \\gp\\tool::GetLabel($from_title);\n\t\t$from_label = \\gp\\tool::LabelSpecialChars($from_label);\n\n\t\techo '<div class=\"inline_box\">';\n\t\techo '<form method=\"post\" action=\"'.\\gp\\tool::GetUrl('Admin/Menu/Ajax').'\">';\n\t\tif( isset($_REQUEST['redir']) ){\n\t\t\techo '<input type=\"hidden\" name=\"redir\" value=\"redir\"/> ';\n\t\t}\n\t\techo '<input type=\"hidden\" name=\"from_title\" value=\"'.htmlspecialchars($from_title).'\"/> ';\n\t\techo '<table class=\"bordered full_width\" id=\"gp_rename_table\">';\n\n\t\techo '<thead><tr><th colspan=\"2\">';\n\t\techo $langmessage['Copy'];\n\t\techo '</th></tr></thead>';\n\n\t\techo '<tr class=\"line_row\"><td>';\n\t\techo $langmessage['from'];\n\t\techo '</td><td>';\n\t\techo $from_label;\n\t\techo '</td></tr>';\n\n\t\techo '<tr><td>';\n\t\techo $langmessage['to'];\n\t\techo '</td><td>';\n\t\techo '<input type=\"text\" name=\"title\" maxlength=\"100\" size=\"50\" value=\"'.$from_label.'\" class=\"gpinput\" />';\n\t\techo '</td></tr>';\n\n\t\techo '</table>';\n\n\t\techo '<p>';\n\t\techo '<input type=\"hidden\" name=\"cmd\" value=\"CopyPage\"/> ';\n\t\techo '<input type=\"submit\" name=\"\" value=\"'.$langmessage['continue'].'\" class=\"gpsubmit\" data-cmd=\"gppost\"/>';\n\t\techo '<input type=\"button\" class=\"admin_box_close gpcancel\" name=\"\" value=\"'.$langmessage['cancel'].'\" />';\n\t\techo '</p>';\n\n\t\techo '</form>';\n\t\techo '</div>';\n\t}\n\n\n\t/**\n\t * Perform a page copy\n\t *\n\t */\n\tpublic function CopyPage(){\n\t\tglobal $gp_index, $gp_titles, $langmessage, $users, $gpAdmin, $dataDir;\n\n\t\t$this->CacheSettings();\n\n\t\tif( !isset($_POST['from_title']) ){\n\t\t\tmsg($langmessage['OOPS'].' (Copy from not selected)');\n\n\t\t\tif( isset($_POST['insert_how']) ){\n\t\t\t\t$this->InsertDialog($_POST['insert_how']);\n\t\t\t}else{\n\t\t\t\t$this->AddHidden();\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t//existing page info\n\t\t$from_title = $_POST['from_title'];\n\t\tif( !isset($gp_index[$from_title]) ){\n\t\t\tmsg($langmessage['OOPS_TITLE']);\n\t\t\treturn false;\n\t\t}\n\t\t$from_index\t\t= $gp_index[$from_title];\n\t\t$info\t\t\t= $gp_titles[$from_index];\n\n\n\t\t//check the new title\n\t\t$title\t\t\t= $_POST['title'];\n\t\t$title\t\t\t= \\gp\\admin\\Tools::CheckPostedNewPage($title,$message);\n\t\tif( $title === false ){\n\t\t\tmsg($message);\n\t\t\treturn false;\n\t\t}\n\n\t\t//get the existing content\n\t\t$from_file\t\t= \\gp\\tool\\Files::PageFile($from_title);\n\t\t$contents\t\t= file_get_contents($from_file);\n\n\n\t\t//add to $gp_index first!\n\t\t$index\t\t\t\t= \\gp\\tool::NewFileIndex();\n\t\t$gp_index[$title]\t= $index;\n\t\t$file\t\t\t\t= \\gp\\tool\\Files::PageFile($title);\n\n\t\tif( !\\gp\\tool\\Files::Save($file,$contents) ){\n\t\t\tmsg($langmessage['OOPS'].' (File not saved)');\n\t\t\treturn false;\n\t\t}\n\n\t\t//set permissions for copied page\n\t\t// msg('gpAdmin = ' . pre($gpAdmin));\n\t\t$users = \\gp\\tool\\Files::Get('_site/users');\n\t\t$username = $gpAdmin['username'];\n\t\t$user_file = $dataDir . '/data/_sessions/' . $users[$username]['file_name'];\n\t\t$editing_values = $gpAdmin['editing'];\n\t\tif( $editing_values != 'all' && strpos($editing_values, ','.$index.',') === false ){\n\t\t\t$editing_values .= $index.',';\n\t\t\t$gpAdmin['editing'] = $editing_values;\n\t\t\t// save to user session file\n\t\t\t\\gp\\tool\\Files::SaveData($user_file, 'gpAdmin', $gpAdmin);\n\t\t\t// save to users.php\n\t\t\t$users[$username]['editing'] = $editing_values;\n\t\t\t\\gp\\tool\\Files::SaveData('_site/users', 'users', $users);\n\t\t}\n\n\t\t//add to gp_titles\n\t\t$new_titles\t\t\t\t\t\t= array();\n\t\t$new_titles[$index]['label']\t= \\gp\\admin\\Tools::PostedLabel($_POST['title']);\n\t\t$new_titles[$index]['type']\t\t= $info['type'];\n\t\t$gp_titles\t\t\t\t\t\t+= $new_titles;\n\n\n\t\t//add to menu\n\t\t$insert = array();\n\t\t$insert[$index] = array();\n\n\t\tif( !$this->SaveNew($insert) ){\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\n\t\t$this->HiddenSaved($index);\n\n\t\treturn true;\n\t}\n\n\n\n\t/**\n\t * Display the dialog for inserting pages into a menu\n\t *\n\t */\n\tpublic function InsertDialog($cmd = null){\n\t\tglobal $langmessage, $gp_index;\n\n\t\tif( is_null($cmd) ){\n\t\t\t$cmd = $this->cmd;\n\t\t}\n\n\t\t$_REQUEST['gpx_content'] = 'gpabox';\n\n\n\t\t//create format of each tab\n\t\tob_start();\n\t\techo '<div id=\"%s\" class=\"%s\">';\n\t\techo '<form action=\"'.\\gp\\tool::GetUrl('Admin/Menu/Ajax').'\" method=\"post\">';\n\t\techo '<input type=\"hidden\" name=\"insert_where\" value=\"'.htmlspecialchars($_REQUEST['insert_where']).'\" />';\n\t\techo '<input type=\"hidden\" name=\"insert_how\" value=\"'.htmlspecialchars($cmd).'\" />';\n\n\t\t// echo '<table class=\"bordered full_width\">';\n\t\t// echo '<thead><tr><th>&nbsp;</th></tr></thead>';\n\t\t// echo '</table>';\n\n\t\t$format_top = ob_get_clean();\n\n\t\tob_start();\n\t\techo '<p>';\n\t\techo '<button type=\"submit\" name=\"cmd\" value=\"%s\" class=\"gpsubmit\" data-cmd=\"gppost\">%s</button>';\n\t\techo '<button class=\"admin_box_close gpcancel\">'.$langmessage['cancel'].'</button>';\n\t\techo '</p>';\n\t\techo '</form>';\n\t\techo '</div>';\n\t\t$format_bottom = ob_get_clean();\n\n\n\n\t\techo '<div class=\"inline_box\">';\n\n\t\t\t//tabs\n\t\t\techo '<div class=\"layout_links\">';\n\t\t\techo   '<a href=\"#gp_Insert_Copy\" data-cmd=\"tabs\" class=\"selected\">'. $langmessage['Copy'] .'</a> ';\n\t\t\techo   '<a href=\"#gp_Insert_New\" data-cmd=\"tabs\">'. $langmessage['new_file'] .'</a> ';\n\t\t\techo   '<a href=\"#gp_Insert_Hidden\" data-cmd=\"tabs\">'. $langmessage['Available'] .'</a> ';\n\t\t\techo   '<a href=\"#gp_Insert_External\" data-cmd=\"tabs\">'. $langmessage['External Link'] .'</a> ';\n\t\t\techo   '<a href=\"#gp_Insert_Deleted\" data-cmd=\"tabs\">'. $langmessage['trash'] .'</a> ';\n\t\t\techo   '<a href=\"#gp_Insert_Extra\" data-cmd=\"tabs\">'. $langmessage['theme_content'] .'</a> ';\n\t\t\techo '</div>';\n\n\n\t\t\t// Copy\n\t\t\techo sprintf($format_top,'gp_Insert_Copy','');\n\t\t\techo '<table class=\"bordered full_width\">';\n\t\t\techo '<tr><td>';\n\t\t\techo $langmessage['label'];\n\t\t\techo '</td><td>';\n\t\t\techo '<input type=\"text\" name=\"title\" maxlength=\"100\" size=\"50\" value=\"\" class=\"gpinput full_width\" required/>';\n\t\t\techo '</td></tr>';\n\t\t\techo '<tr><td>';\n\t\t\techo $langmessage['Copy'];\n\t\t\techo '</td><td>';\n\t\t\t$copy_list = array();\n\t\t\tforeach($gp_index as $k => $v){\n\t\t\t\tif( strpos($v,'special_') === 0 ){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t$copy_list[$k] = $v;\n\t\t\t}\n\t\t\t\\gp\\admin\\Menu\\Tools::ScrollList($copy_list);\n\t\t\techo '</td></tr>';\n\t\t\techo '</table>';\n\t\t\techo sprintf($format_bottom,'CopyPage',$langmessage['Copy']);\n\n\n\t\t\t// Insert New\n\t\t\techo sprintf($format_top,'gp_Insert_New','nodisplay');\n\t\t\techo '<table class=\"bordered full_width\">';\n\t\t\techo '<tr><td>';\n\t\t\techo $langmessage['label'];\n\t\t\techo '</td><td>';\n\t\t\techo '<input type=\"text\" name=\"title\" maxlength=\"100\" value=\"\" size=\"50\" class=\"gpinput full_width\" required />';\n\t\t\techo '</td></tr>';\n\n\t\t\techo '<tr><td>';\n\t\t\techo $langmessage['Content Type'];\n\t\t\techo '</td><td>';\n\t\t\techo '<div id=\"new_section_links\">';\n\t\t\t\\gp\\Page\\Edit::NewSections(true);\n\t\t\techo '</div>';\n\t\t\techo '</td></tr>';\n\t\t\techo '</table>';\n\t\t\techo sprintf($format_bottom,'NewFile',$langmessage['create_new_file']);\n\n\n\t\t\t// Insert Hidden\n\t\t\t$avail = $this->GetAvail_Current();\n\n\t\t\tif( !empty($avail) ){\n\t\t\t\techo sprintf($format_top,'gp_Insert_Hidden','nodisplay');\n\t\t\t\t$avail = array_flip($avail);\n\t\t\t\t\\gp\\admin\\Menu\\Tools::ScrollList($avail,'keys[]','checkbox',true);\n\t\t\t\techo sprintf($format_bottom,'InsertFromHidden',$langmessage['insert_into_menu']);\n\t\t\t}\n\n\n\n\t\t\t// Insert Deleted / Restore from trash\n\t\t\t$scroll_list = $this->TrashScrolllist();\n\t\t\tif( !empty($scroll_list) ){\n\t\t\t\techo sprintf($format_top,'gp_Insert_Deleted','nodisplay');\n\t\t\t\techo $scroll_list;\n\t\t\t\techo sprintf($format_bottom,'RestoreFromTrash',$langmessage['restore_from_trash']);\n\t\t\t}\n\n\n\t\t\t//Insert External\n\t\t\techo '<div id=\"gp_Insert_External\" class=\"nodisplay\">';\n\t\t\t$args\t\t\t\t\t= array();\n\t\t\t$args['insert_how']\t\t= $cmd;\n\t\t\t$args['insert_where']\t= $_REQUEST['insert_where'];\n\t\t\t$this->ExternalForm('NewExternal',$langmessage['insert_into_menu'],$args);\n\t\t\techo '</div>';\n\n\n\t\t\t//Insert Extra\n\t\t\t$areas = $this->GetExtraAreas();\n\t\t\t// msg(\"Areas: \" . pre($areas));\n\t\t\tif( !empty($areas) ){\n\t\t\t\techo sprintf($format_top,'gp_Insert_Extra','nodisplay');\n\t\t\t\techo '<p style=\"padding:6px 10px; background:#f1f1f1;\">';\n\t\t\t\techo '<i class=\"fa fa-warning\" style=\"display:block; float:left; font-size:2em; line-height:1.33em; margin:0 0.5em 0 0.2em;\"></i>';\n\t\t\t\techo 'Outputs an Extra Content Area at the current position <strong>in the menu</strong>. ';\n\t\t\t\techo 'This way you may add anything from simple separators to subheads or even images or forms.<br/> ';\n\t\t\t\techo 'This is an advanced feature and requires specific custom CSS to be useful.</p>';\n\t\t\t\t\\gp\\admin\\Menu\\Tools::ScrollListExtra($areas);\n\t\t\t\techo sprintf($format_bottom, 'InsertExtra', $langmessage['insert']);\n\t\t\t}\n\n\n\t\techo '</div>';\n\n\t}\n\n\n\tfunction GetExtraAreas(){\n\t\tglobal $dataDir;\n\t\t$areas\t\t\t= array();\n\t\t$folder \t\t= $dataDir . '/data/_extra';\n\t\t$files\t\t\t= scandir($folder);\n\t\tforeach($files as $file){\n\t\t\t$title\t= \\gp\\admin\\Content\\Extra::AreaExists($file);\n\t\t\t// msg(\"file = \" . $file . \" -> title = \" . pre($title));\n\t\t\tif( $title == false ){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$areas[$title] = str_replace('_', ' ', $title);\n\t\t\t/* \n\t\t\tarray(\n\t\t\t\t'title'\t\t\t=> $title,\n\t\t\t\t'file_path'\t\t=> $folder . '/' . $title . '/page.php',\n\t\t\t\t'draft_path'\t=> $folder . '/' . $title . '/draft.php',\n\t\t\t\t'legacy_path'\t=> $folder . '/' . $title . '.php',\n\t\t\t);\n\t\t\t*/\n\t\t}\n\t\tuksort($areas,'strnatcasecmp');\n\t\treturn $areas;\n\t}\n\n\n\n\n\t/**\n\t * Generate a scroll list selector for trash titles\n\t *\n\t */\n\tfunction TrashScrolllist(){\n\t\tglobal $langmessage;\n\n\t\t$trashtitles = \\gp\\admin\\Content\\Trash::TrashFiles();\n\t\tif( empty($trashtitles) ){\n\t\t\treturn '';\n\t\t}\n\n\t\tob_start();\n\t\techo '<div class=\"gp_scrolllist\"><div>';\n\t\techo '<input type=\"text\" name=\"search\" value=\"\" class=\"gpsearch\" placeholder=\"'.$langmessage['Search'].'\" autocomplete=\"off\" />';\n\t\tforeach($trashtitles as $title => $info){\n\t\t\tif( empty($info['label']) ){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\techo '<label>';\n\t\t\techo '<input type=\"checkbox\" name=\"titles[]\" value=\"'.htmlspecialchars($title).'\" />';\n\t\t\techo '<span>';\n\t\t\techo $info['label'];\n\t\t\techo '<span class=\"slug\">';\n\t\t\tif( isset($info['title']) ){\n\t\t\t\techo '/'.$info['title'];\n\t\t\t}else{\n\t\t\t\techo '/'.$title;\n\t\t\t}\n\t\t\techo '</span>';\n\t\t\techo '</span>';\n\t\t\techo '</label>';\n\t\t}\n\t\techo '</div></div>';\n\n\t\treturn ob_get_clean();\n\t}\n\n\n\t/**\n\t * Create a new file\n\t *\n\t */\n\tpublic function NewFile(){\n\t\tglobal $langmessage;\n\t\t$this->CacheSettings();\n\n\t\t$new_index = \\gp\\admin\\Menu\\Tools::CreateNew();\n\t\tif( $new_index === false ){\n\t\t\treturn false;\n\t\t}\n\n\t\t$insert = array();\n\t\t$insert[$new_index] = array();\n\n\t\tif( !$this->SaveNew($insert) ){\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->HiddenSaved($new_index);\n\t}\n\n\n\t/**\n\t * Insert pages into the current menu from existing pages that aren't in the menu\n\t *\n\t */\n\tpublic function InsertFromHidden(){\n\t\tglobal $langmessage, $gp_index;\n\n\t\tif( is_null($this->curr_menu_array) ){\n\t\t\tmsg($langmessage['OOPS'].' (Menu not set)');\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->CacheSettings();\n\n\t\t//get list of titles from submitted indexes\n\t\t$titles = array();\n\t\tif( isset($_POST['keys']) ){\n\t\t\tforeach($_POST['keys'] as $index){\n\t\t\t\tif( \\gp\\tool::IndexToTitle($index) !== false ){\n\t\t\t\t\t$titles[$index]['level'] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( count($titles) == 0 ){\n\t\t\tmsg($langmessage['OOPS'].' (Nothing selected)');\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\t\tif( !$this->SaveNew($titles) ){\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Add titles to the current menu from the trash\n\t *\n\t */\n\tpublic function RestoreFromTrash(){\n\t\tglobal $langmessage, $gp_index;\n\n\n\t\tif( is_null($this->curr_menu_array) ){\n\t\t\tmsg($langmessage['OOPS']);\n\t\t\treturn false;\n\t\t}\n\n\t\tif( !isset($_POST['titles']) ){\n\t\t\tmsg($langmessage['OOPS'].' (Nothing Selected)');\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->CacheSettings();\n\n\t\t$titles\t\t\t= array();\n\t\t$menu\t\t\t= \\gp\\admin\\Content\\Trash::RestoreTitles($_POST['titles']);\n\n\n\t\tif( empty($menu) ){\n\t\t\tmsg($langmessage['OOPS']);\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\n\t\tif( !$this->SaveNew($menu) ){\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\t\t\\gp\\admin\\Content\\Trash::ModTrashData(null,$titles);\n\t}\n\n\n\t/**\n\t * Form for adding external link\n\t *\n\t */\n\tpublic function ExternalForm($cmd,$submit,$args){\n\t\tglobal $langmessage;\n\n\t\t//these aren't all required for each usage of ExternalForm()\n\t\t$args += array(\n\t\t\t\t\t'url'=>'http://',\n\t\t\t\t\t'label'=>'',\n\t\t\t\t\t'title_attr'=>'',\n\t\t\t\t\t'insert_how'=>'',\n\t\t\t\t\t'insert_where'=>'',\n\t\t\t\t\t'key'=>''\n\t\t\t\t\t);\n\n\n\t\techo '<form action=\"'.$this->GetUrl('Admin/Menu/Ajax').'\" method=\"post\">';\n\t\techo '<input type=\"hidden\" name=\"insert_how\" value=\"'.htmlspecialchars($args['insert_how']).'\" />';\n\t\techo '<input type=\"hidden\" name=\"insert_where\" value=\"'.htmlspecialchars($args['insert_where']).'\" />';\n\t\techo '<input type=\"hidden\" name=\"key\" value=\"'.htmlspecialchars($args['key']).'\" />';\n\n\t\techo '<table class=\"bordered full_width\">';\n\n\t\t// echo '<tr>';\n\t\t// echo '<th>&nbsp;</th>';\n\t\t// echo '<th>&nbsp;</th>';\n\t\t// echo '</tr>';\n\n\t\techo '<tr><td>';\n\t\techo $langmessage['Target URL'];\n\t\techo '</td><td>';\n\t\techo '<input type=\"text\" name=\"url\" value=\"'.$args['url'].'\" class=\"gpinput\" required />';\n\t\techo '</td></tr>';\n\n\t\techo '<tr><td>';\n\t\techo $langmessage['label'];\n\t\techo '</td><td>';\n\t\techo '<input type=\"text\" name=\"label\" value=\"'.\\gp\\tool::LabelSpecialChars($args['label']).'\" class=\"gpinput\" required />';\n\t\techo '</td></tr>';\n\n\t\techo '<tr><td>';\n\t\techo $langmessage['title attribute'];\n\t\techo '</td><td>';\n\t\techo '<input type=\"text\" name=\"title_attr\" value=\"'.$args['title_attr'].'\" class=\"gpinput\"/>';\n\t\techo '</td></tr>';\n\n\t\techo '<tr><td>';\n\t\techo $langmessage['New_Window'];\n\t\techo '</td><td>';\n\t\tif( isset($args['new_win']) ){\n\t\t\techo '<input type=\"checkbox\" name=\"new_win\" value=\"new_win\" checked=\"checked\" />';\n\t\t}else{\n\t\t\techo '<input type=\"checkbox\" name=\"new_win\" value=\"new_win\" />';\n\t\t}\n\t\techo '</td></tr>';\n\t\techo '</table>';\n\n\t\techo '<p>';\n\t\techo '<input type=\"hidden\" name=\"cmd\" value=\"'.htmlspecialchars($cmd).'\" />';\n\t\techo '<input type=\"submit\" name=\"\" value=\"'.$submit.'\" class=\"gpsubmit gpvalidate\" data-cmd=\"gppost\"/> ';\n\t\techo '<input type=\"submit\" value=\"'.$langmessage['cancel'].'\" class=\"admin_box_close gpcancel\" /> ';\n\t\techo '</p>';\n\n\t\techo '</form>';\n\t}\n\n\n\t/**\n\t * Form for adding/editing custom CSS class names a menu item\n\t *\n\t */\n\tpublic function ClassesForm(){\n\t\tglobal $langmessage; // msg('ma = ' .pre($this->curr_menu_array));\n\n\t\tif( !isset($_REQUEST['index']) || !isset($this->curr_menu_array[$_REQUEST['index']]) ){\n\t\t\tmsg($langmessage['OOPS'] . ' (Invalid request or menu key)');\n\t\t\treturn;\n\t\t}\n\n\t\t$key = $_REQUEST['index'];\n\n\t\t$classes_li = '';\n\t\tif( isset($this->curr_menu_array[$key]['classes_li']) ){\n\t\t\t$classes_li = $this->curr_menu_array[$key]['classes_li'];\n\t\t}\n\n\t\tif( !isset($_REQUEST['no_a_classes']) ){\n\t\t\t$classes_a = '';\n\t\t\tif( isset($this->curr_menu_array[$key]['classes_a']) ){\n\t\t\t\t$classes_a = $this->curr_menu_array[$key]['classes_a'];\n\t\t\t}\n\t\t}\n\n\t\t$classes_child_ul = '';\n\t\tif( isset($this->curr_menu_array[$key]['classes_child_ul']) ){\n\t\t\t$classes_child_ul = $this->curr_menu_array[$key]['classes_child_ul'];\n\t\t}\n\n\n\t\techo '<div class=\"inline_box\">';\n\t\techo '<form action=\"' . $this->GetUrl('Admin/Menu/Ajax') . '\" method=\"post\">';\n\t\techo '<input type=\"hidden\" name=\"key\" value=\"' . htmlspecialchars($key) . '\" />';\n\n\t\techo '<h2>' . $langmessage['Menu Output'] . ' - ' . $langmessage['Classes'] . '</h2>';\n\n\t\techo '<table class=\"bordered full_width\">';\n\t\techo '<tr><th style=\"width:20%;\">Menu Element</th><th>' . $langmessage['Classes'] . '</th></tr>';\n\n\t\techo '<tr>';\n\t\techo '<td><strong>li</strong></td>';\n\t\techo '<td><input type=\"text\" placeholder=\"some-custom-li-class another-custom-li-class\" ';\n\t\techo 'name=\"classes_li\" value=\"' . htmlspecialchars($classes_li) . '\" class=\"gpinput\" style=\"width:100%;\" /></td>';\n\t\techo '</tr>';\n\n\t\tif( !isset($_REQUEST['no_a_classes']) ){\n\t\t\techo '<tr>';\n\t\t\techo '<td>li &gt; <strong>a</strong></td>';\n\t\t\techo '<td><input type=\"text\" placeholder=\"custom-a-class another-a-class\" ';\n\t\t\techo 'name=\"classes_a\" value=\"' . htmlspecialchars($classes_a) . '\" class=\"gpinput\" style=\"width:100%;\" /></td>';\n\t\t\techo '</tr>';\n\t\t}\n\n\t\techo '<tr>';\n\t\techo '<td>li &gt; <strong>ul</strong></td>';\n\t\techo '<td><input type=\"text\" placeholder=\"custom-child-ul-class another-child-ul-class\" ';\n\t\techo 'name=\"classes_child_ul\" value=\"' . htmlspecialchars($classes_child_ul) . '\" class=\"gpinput\" style=\"width:100%;\" /></td>';\n\t\techo '</tr>';\n\n\t\techo '</table>';\n\n\t\techo '<p>';\n\t\techo '<input type=\"hidden\" name=\"cmd\" value=\"SaveClasses\" />';\n\t\techo '<input type=\"submit\" name=\"\" value=\"' . $langmessage['save'] . '\" class=\"gpsubmit\" data-cmd=\"gppost\"/> ';\n\t\techo '<input type=\"submit\" value=\"' . $langmessage['cancel'] . '\" class=\"admin_box_close gpcancel\" /> ';\n\t\techo '</p>';\n\n\t\techo '</form>';\n\t\techo '</div>';\n\t}\n\n\n\t/**\n\t * Save posted custom CSS class name(s) for menu item\n\t *\n\t */\n\tpublic function SaveClasses(){\n\t\tglobal $langmessage;\n\n\t\tif( !isset($_POST['key']) || !isset($_POST['classes_li']) || !isset($_POST['classes_a']) || !isset($_POST['classes_child_ul']) ){\n\t\t\tmsg($langmessage['OOPS'] . ' (Invalid request)');\n\t\t\treturn;\n\t\t}\n\n\t\t$key = $_POST['key'];\n\n\t\tif( !isset($this->curr_menu_array[$key]) ){\n\t\t\tmsg($langmessage['OOPS'] . ' (Invalid menu key)');\n\t\t\treturn;\n\t\t}\n\n\t\t$this->CacheSettings();\n\n\t\t$this->curr_menu_array[$key]['classes_li']\t\t\t= $this->ValidClasses($_POST['classes_li']);\n\t\t$this->curr_menu_array[$key]['classes_a']\t\t\t= $this->ValidClasses($_POST['classes_a']);\n\t\t$this->curr_menu_array[$key]['classes_child_ul']\t= $this->ValidClasses($_POST['classes_child_ul']);\n\n\t\tif( !$this->SaveMenu(false) ){\n\t\t\tmsg($langmessage['OOPS'].' (Menu Not Saved)');\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\n\n\t/**\n\t * Removes invalid CSS class names\n\t * Returns only valid CSS class names\n\t * Displays error/remove msg for invalid class names\n\t * @param classes (space separated string or array)\n\t * @return valid_classes (string or array, depending on passed argument type)\n\t *\n\t */\n\tpublic function ValidClasses($classes){\n\t\tglobal $langmessage;\n\n\t\t$arg_type = gettype($classes);\n\n\t\tif( $arg_type != 'string' && $arg_type != 'array' ){\n\t\t\tmsg($langmessage['OOPS'].' (Wrong type <em>' . $arg_type . '</em>, array or string expected)');\n\t\t\treturn false;\n\t\t}\n\t\tif( empty($classes) ){\n\t\t\treturn $classes;\n\t\t}\n\n\t\tif( $arg_type == 'string' ){\n\t\t\t$classes = explode(' ', $classes);\n\t\t}\n\n \t\t$valid_classes = array();\n\t\tforeach( $classes as $classname ){\n\t\t\tif( $classname == ' ' || empty($classname) ){\n\t\t\t\t// skip leftovers from multiple space chars\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// $classname = trim($classname);\n\t\t\tif( !preg_match(\"/^([a-z_]|-[a-z_-])[a-z\\d_-]*$/i\", $classname) ){\n\t\t\t\tmsg('<em>' . htmlspecialchars($classname) . '</em> is not a valid CSS class name and was removed.');\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$valid_classes[] = $classname;\n\t\t}\n\n\t\tif( $arg_type == 'string' ){\n\t\t\t$valid_classes = implode(' ', $valid_classes);\n\t\t}\n\n\t\treturn $valid_classes;\n\t}\n\n\n\n\t/**\n\t * Place an Extra Content Area inside the current menu\n\t *\n\t */\n\tpublic function InsertExtra(){\n\t\tglobal $gp_menu, $langmessage;\n\n\t\t$this->CacheSettings();\n\t\t$area = $_POST['from_extra'];\n\n\t\tif( !\\gp\\admin\\Content\\Extra::AreaExists($area) ){\n\t\t\tmsg($langmessage['OOPS'].' (Extra Area does not exist)');\n\t\t\treturn;\n\t\t}\n\n\t\t$key\t\t\t= $this->NewExtraKey();\n\t\t$insert\t\t\t= array();\n\t\t$insert[$key]\t= array(\n\t\t\t'area' \t=> $area,\n\t\t\t'label'\t=> str_replace('_', ' ', $area),\n\t\t);\n\n\t\tif( !$this->SaveNew($insert) ){ \n\t\t\tmsg($langmessage['OOPS'].' (Adding Extra Content Area failed)');\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tpublic function NewExtraKey(){\n\t\t$num_index = 0;\n\t\tdo{\n\t\t\t$new_key = '_extra_' . base_convert($num_index, 10, 36);\n\t\t\t$num_index++;\n\t\t}while( isset($this->curr_menu_array[$new_key]) );\n\n\t\treturn $new_key;\n\t}\n\n\n\t/**\n\t * Save a new external link in the current menu\n\t *\n\t */\n\tpublic function NewExternal(){\n\t\tglobal $langmessage;\n\n\t\t$this->CacheSettings();\n\t\t$array = $this->ExternalPost();\n\n\t\tif( !$array ){\n\t\t\tmsg($langmessage['OOPS'].' (Invalid Request)');\n\t\t\treturn;\n\t\t}\n\n\t\t$key\t\t\t= $this->NewExternalKey();\n\t\t$insert\t\t\t= array();\n\t\t$insert[$key]\t= $array;\n\n\t\tif( !$this->SaveNew($insert) ){ \n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\t/**\n\t * Edit an external link entry in the current menu\n\t *\n\t */\n\tpublic function EditExternal(){\n\t\tglobal $langmessage;\n\n\t\t$key =& $_REQUEST['key'];\n\t\tif( !isset($this->curr_menu_array[$key]) ){\n\t\t\tmsg($langmessage['OOPS'].' (Current menu not set)');\n\t\t\treturn false;\n\t\t}\n\n\t\t$info = $this->curr_menu_array[$key];\n\t\t$info['key'] = $key;\n\n\t\techo '<div class=\"inline_box\">';\n\n\t\techo '<h3>'.$langmessage['External Link'].'</h3>';\n\n\t\t$this->ExternalForm('SaveExternal',$langmessage['save'],$info);\n\n\t\techo '</div>';\n\t}\n\n\n\t/**\n\t * Save changes to an external link entry in the current menu\n\t *\n\t */\n\tpublic function SaveExternal(){\n\t\tglobal $langmessage;\n\n\t\t$key =& $_POST['key'];\n\t\tif( !isset($this->curr_menu_array[$key]) ){\n\t\t\tmsg($langmessage['OOPS'].' (Current menu not set)');\n\t\t\treturn false;\n\t\t}\n\t\t$level = $this->curr_menu_array[$key]['level'];\n\n\t\t$array = $this->ExternalPost();\n\t\tif( !$array ){\n\t\t\tmsg($langmessage['OOPS'].' (1)');\n\t\t\treturn;\n\t\t}\n\n\t\t$this->CacheSettings();\n\n\t\t$array['level'] = $level;\n\t\t$this->curr_menu_array[$key] = $array;\n\n\t\tif( !$this->SaveMenu(false) ){\n\t\t\tmsg($langmessage['OOPS'].' (Menu Not Saved)');\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Check the values of a post with external link values\n\t *\n\t */\n\tpublic function ExternalPost(){\n\n\t\t$array = array();\n\t\tif( empty($_POST['url']) || $_POST['url'] == 'http://' ){\n\t\t\treturn false;\n\t\t}\n\t\t$array['url']\t= htmlspecialchars($_POST['url']);\n\t\t$array['label'] = \\gp\\admin\\Tools::PostedLabel($_POST['label']);\n\n\t\tif( empty($array['label']) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( !empty($_POST['title_attr']) ){\n\t\t\t$array['title_attr'] = htmlspecialchars($_POST['title_attr']);\n\t\t}\n\t\tif( isset($_POST['new_win']) && $_POST['new_win'] == 'new_win' ){\n\t\t\t$array['new_win'] = true;\n\t\t}\n\t\treturn $array;\n\t}\n\n\tpublic function NewExternalKey(){\n\n\t\t$num_index = 0;\n\t\tdo{\n\t\t\t$new_key = '_'.base_convert($num_index,10,36);\n\t\t\t$num_index++;\n\t\t}while( isset($this->curr_menu_array[$new_key]) );\n\n\t\treturn $new_key;\n\t}\n\n\n\t/**\n\t * Save pages\n\t *\n\t * @param array $titles\n\t * @return bool\n\t */\n\tprotected function SaveNew($titles){\n\t\tglobal $langmessage;\n\n\t\t//menu modification\n\t\tif( isset($_POST['insert_where']) && isset($_POST['insert_how']) ){\n\n\t\t\tif( !$this->MenuInsert($titles, $_POST['insert_where'], $_POST['insert_how']) ){\n\t\t\t\tmsg($langmessage['OOPS'].' (Insert Failed)');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif( !$this->SaveMenu(true) ){\n\t\t\t\tmsg($langmessage['OOPS'].' (Menu Not Saved)');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\n\t\tif( !\\gp\\admin\\Tools::SavePagesPHP(true) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Insert titles into the current menu if needed\n\t *\n\t */\n\tpublic function MenuInsert($titles, $neighbor, $insert_how){\n\t\tswitch($insert_how){\n\t\t\tcase 'insert_before':\n\t\t\treturn $this->MenuInsert_Before($titles, $neighbor);\n\n\t\t\tcase 'insert_after':\n\t\t\treturn $this->MenuInsert_After($titles, $neighbor);\n\n\t\t\tcase 'insert_child':\n\t\t\treturn $this->MenuInsert_After($titles, $neighbor, 1);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * Remove from the menu\n\t *\n\t */\n\tpublic function Hide(){\n\t\tglobal $langmessage;\n\n\t\tif( is_null($this->curr_menu_array) ){\n\t\t\tmsg($langmessage['OOPS'].'(1)');\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->CacheSettings();\n\n\t\t$_POST\t\t+= array('index'=>'');\n\t\t$indexes \t= explode(',',$_POST['index']);\n\n\t\tforeach($indexes as $index ){\n\n\t\t\tif( count($this->curr_menu_array) == 1 ){\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif( !isset($this->curr_menu_array[$index]) ){\n\t\t\t\tmsg($langmessage['OOPS'].'(3)');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif( !$this->RmFromMenu($index) ){\n\t\t\t\tmsg($langmessage['OOPS'].'(4)');\n\t\t\t\t$this->RestoreSettings();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif( $this->SaveMenu(false) ){\n\t\t\treturn true;\n\t\t}\n\n\t\tmsg($langmessage['OOPS'].'(5)');\n\t\t$this->RestoreSettings();\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * Move To Trash\n\t * Hide special pages\n\t *\n\t */\n\tpublic function MoveToTrash(){\n\t\tglobal $gp_titles, $gp_index, $langmessage, $gp_menu, $config, $dataDir;\n\n\t\t$this->CacheSettings();\n\n\t\t$_POST\t\t\t+= array('index'=>'');\n\t\t$indexes\t\t= explode(',',$_POST['index']);\n\t\t$trash_data\t\t= array();\n\n\n\t\tforeach($indexes as $index){\n\n\t\t\t$title\t= \\gp\\tool::IndexToTitle($index);\n\n\t\t\t// Create file in trash\n\t\t\tif( $title ){\n\t\t\t\tif( !\\gp\\admin\\Content\\Trash::MoveToTrash_File($title,$index,$trash_data) ){\n\t\t\t\t\tmsg($langmessage['OOPS'].' (Not Moved)');\n\t\t\t\t\t$this->RestoreSettings();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// Remove from menu\n\t\t\tif( isset($gp_menu[$index]) ){\n\n\t\t\t\tif( count($gp_menu) == 1 ){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( !$this->RmFromMenu($index,false) ){\n\t\t\t\t\tmsg($langmessage['OOPS']);\n\t\t\t\t\t$this->RestoreSettings();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tunset($gp_titles[$index]);\n\t\t\tunset($gp_index[$title]);\n\t\t}\n\n\n\t\t\\gp\\admin\\Menu\\Tools::ResetHomepage();\n\n\n\t\tif( !\\gp\\admin\\Tools::SaveAllConfig() ){\n\t\t\t$this->RestoreSettings();\n\t\t\treturn false;\n\t\t}\n\n\t\t$link = \\gp\\tool::GetUrl('Admin/Trash');\n\t\tmsg(sprintf($langmessage['MOVED_TO_TRASH'],$link));\n\n\n\t\t\\gp\\tool\\Plugins::Action('MenuPageTrashed',array($indexes));\n\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Rename\n\t *\n\t */\n\tpublic function RenameForm(){\n\t\t\\gp\\Page\\Rename::RenameForm();\n\t}\n\n\tpublic function RenameFile(){\n\t\tglobal $langmessage, $gp_index;\n\n\t\t//prepare variables\n\t\t$title =& $_REQUEST['title'];\n\t\tif( !isset($gp_index[$title]) ){\n\t\t\tmsg($langmessage['OOPS'].' (R0)');\n\t\t\treturn false;\n\t\t}\n\n\t\t\\gp\\Page\\Rename::RenameFile($title);\n\t}\n\n\n\t/**\n\t * Toggle Page Visibility\n\t *\n\t */\n\tpublic function ToggleVisibility(){\n\t\t$_REQUEST += array('index'=>'','visibility'=>'');\n\t\t\\gp\\Page\\Visibility::Toggle($_REQUEST['index'], $_REQUEST['visibility']);\n\t}\n\n\n\t/**\n\t * Display a form for selecting the homepage\n\t *\n\t */\n\tpublic function HomepageSelect(){\n\t\tglobal $langmessage;\n\n\t\techo '<div class=\"inline_box\">';\n\t\techo '<form action=\"'.\\gp\\tool::GetUrl('Admin/Menu/Ajax').'\" method=\"post\">';\n\n\t\techo '<h3><i class=\"fa fa-home\"></i> ';\n\t\techo $langmessage['Homepage'];\n\t\techo '</h3>';\n\n\t\techo '<p class=\"homepage_setting\">';\n\t\techo '<input type=\"text\" class=\"title-autocomplete gpinput\" name=\"homepage\" />';\n\t\techo '</p>';\n\n\n\t\techo '<p>';\n\t\techo '<button type=\"submit\" name=\"cmd\" value=\"HomepageSave\" class=\"gpsubmit\" data-cmd=\"gppost\">'.htmlspecialchars($langmessage['save']).'</button> ';\n\t\techo '<button type=\"submit\" class=\"admin_box_close gpcancel\">'.htmlspecialchars($langmessage['cancel']).'</button>';\n\t\techo '</p>';\n\n\t\techo '</form>';\n\t\techo '</div>';\n\n\t}\n\n\n\t/**\n\t * Set homepage to auto mode\n\t * homepage will be first item in main menu\n\t *\n\t */\n\tpublic function HomepageAuto(){ \n\t\tglobal $config;\n\n\t\t$config['homepath_auto'] = true;\n\t\tif( !\\gp\\admin\\Tools::SaveConfig(true) ){\n\t\t\treturn;\n\t\t}\n\n\t\t//update the display\n\t\tob_start();\n\t\t$this->HomepageDisplay();\n\t\t$content = ob_get_clean();\n\n\t\t$this->page->ajaxReplace[] = array('inner', '.homepage_setting', $content);\n\n\t}\n\n\n\t/**\n\t * Save the posted page as the homepage\n\t *\n\t */\n\tpublic function HomepageSave(){\n\t\tglobal $langmessage, $config, $gp_index, $gp_titles;\n\n\t\t$homepage = $_POST['homepage'];\n\t\t$homepage_key = false;\n\t\tif( isset($gp_index[$homepage]) ){\n\t\t\t$homepage_key = $gp_index[$homepage];\n\t\t}else{\n\n\t\t\tforeach($gp_titles as $index => $title){\n\t\t\t\tif( $title['label'] === $homepage ){\n\t\t\t\t\t$homepage_key = $index;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( !$homepage_key ){\n\t\t\t\tmsg($langmessage['OOPS']);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t$config['homepath_key']\t\t= $homepage_key;\n\t\t$config['homepath']\t\t\t= \\gp\\tool::IndexToTitle($config['homepath_key']);\n\t\t// custom homepage from post --> disable auto mode\n\t\t$config['homepath_auto']\t= false;\n\t\tif( !\\gp\\admin\\Tools::SaveConfig(true) ){\n\t\t\treturn;\n\t\t}\n\n\t\t//update the display\n\t\tob_start();\n\t\t$this->HomepageDisplay();\n\t\t$content = ob_get_clean();\n\n\t\t$this->page->ajaxReplace[] = array('inner','.homepage_setting',$content);\n\t}\n\n\n\n\n}\n"], "filenames": ["include/admin/Menu/Ajax.php"], "buggy_code_start_loc": [157], "buggy_code_end_loc": [162], "fixing_code_start_loc": [158], "fixing_code_end_loc": [165], "type": "CWE-79", "message": "include/admin/Menu/Ajax.php in Typesetter 5.1 has index.php/Admin/Menu/Ajax?cmd=AddHidden title XSS.", "other": {"cve": {"id": "CVE-2018-20837", "sourceIdentifier": "cve@mitre.org", "published": "2019-05-09T22:29:00.230", "lastModified": "2019-05-10T13:19:38.630", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "include/admin/Menu/Ajax.php in Typesetter 5.1 has index.php/Admin/Menu/Ajax?cmd=AddHidden title XSS."}, {"lang": "es", "value": "include/admin/Menu/Ajax.php en Typesetter 5.1 tiene index.php/Admin/Menu/Ajax?cmd=AddHidden title XSS."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:typesettercms:typesetter:5.1:*:*:*:*:*:*:*", "matchCriteriaId": "8854262C-8117-46B1-89ED-6CCA36C0474A"}]}]}], "references": [{"url": "https://github.com/Typesetter/Typesetter/commit/fd637e2919e7f77c498a91a8e9d353f8e12afc9a", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.netsparker.com/web-applications-advisories/ns-18-026-reflected-cross-site-scripting-in-typesetter/", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Typesetter/Typesetter/commit/fd637e2919e7f77c498a91a8e9d353f8e12afc9a"}}