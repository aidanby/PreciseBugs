{"buggy_code": ["<?php\n\n/**\n* Filter the user views list for inactives\n*\t@params $views (string)\n*/\nif(!function_exists('simplr_views_users')):\n\tfunction simplr_views_users( $views ) {\n\t\t$class = (@$_GET['view_inactive'] == true) ? 'current':'';\n\t\t$views['view_inactive'] = '<a href=\"'.add_query_arg(array('view_inactive' => 'true')).'\" class=\"'.$class.'\" >'. __('Inactive Users','simplr-reg') . ' ('.simplr_count_inactive().')</a>';\n\t\treturn $views;\n\t}\nendif;\n\nif(!function_exists('simplr_count_inactive')):\n\tfunction simplr_count_inactive() {\n\t\tif( !$count = wp_cache_get('inactive_count','users') ) {\n\t\t\tglobal $wpdb;\n\t\t\t$count = $wpdb->get_var($wpdb->prepare(\"SELECT COUNT(ID) FROM $wpdb->users WHERE user_status = %d\", array(2)));\n\t\t\twp_cache_set('inactivate_count', $count,'users', 3600);\n\t\t}\n\t\treturn $count;\n\t}\nendif;\n\nif(!function_exists('simplr_inactive_query')):\n\tfunction simplr_inactive_query( &$query ) {\n\t\tif(@$_GET['view_inactive'] === 'true') {\n\t\t\t$query->query_where = $query->query_where.' AND user_status = 2';\n\t\t}\n\t\treturn $query;\n\t}\nendif;\n\nif(!function_exists(\"simplr_users_bulk_action\")):\n\tfunction simplr_users_bulk_action($actions) {\n\t\tif(@$_GET['view_inactive'] === 'true') {\n\t\t\t$actions['activate'] = __('Activate Users','simplr-reg');\n\t\t}\n\t\treturn $actions;\n\t}\nendif;\n\nif( !function_exists('simplr_resend_email') ) {\n\tfunction simplr_resend_email( $id ) {\n\t\tglobal $simplr_options,$blog_id;\n\t\t$data = (array) get_userdata( $id );\n\t\t$data = (array) $data['data'] ;\n\t\t$data['blogname'] = get_option('blogname');\n\t\t$subj = simplr_token_replace( $simplr_options->mod_email_subj, $data );\n\t\t$content = simplr_token_replace( $simplr_options->mod_email, $data );\n\t\t$content = simplr_token_replace( $content, array('link' => get_home_url( $blog_id, '/?activation_key='.$data['user_activation_key'] ) ) );\n\t\tif ( isset( $simplr_options->default_email ) ) {\n\t\t\t$from = $simplr_options->default_email;\n\t\t} else {\n\t\t\t$from = get_option('admin_email');\n\t\t}\n\t\t$headers = \"From: \".$data['blogname'].\" <\".$from.\"> \\r\\n\";\n\t\twp_mail( $data['user_email'], $subj, $content, $headers);\n\t}\n}\n", "=== Simplr Registration Form Plus+ ===\nContributors: mpvanwinkle77, mpol\nDonate link: http://www.mikevanwinkle.com/\nTags: registration, signup, profile, cms, users, user management, user profile\nRequires at least: 3.0\nTested up to: 4.2\nStable tag: 2.3.4\n\nThis plugin allows users to easily add a custom user registration form anywhere on their site using simple shortcode.\n\n== Description ==\n**NEW FEATURES**\nThe Plus version of this plugin is now free! It includes reCAPTCHA, Facebook Connect, Custom Field UI, Moderation, Custom Confirmation messages. More info at http://mikevanwinkle.com/simplr-registration-form-plus/\n\nThis plugin creates a user interface for adding custom registration forms to any post or page on your WordPress website. Simply navigate to the edit page for post or page on which you would like the form to appear and click the registration forms button. A popup menu will appear guiding you through the options.\n\nThe plugin also creates an interface for adding/removing fields to be used in the registration form.\n\n== Installation ==\n\n1. Download `simplr-registration-form-plus.zip` and upload contents to the `/wp-content/plugins/` directory\n1. Activate the plugin through the 'Plugins' menu in WordPress\n1. Insert forms using the TinyMCE registration button.\n\n== Frequently Asked Questions ==\n\nSee plugin settings page for detailed instructions.\n\n= When I click the Add Registration Form button, nothing happens. =\n\nIt is likely that you have Javascript errors in your website.\nYou can open the inspector of your browser, and check your messages in the console tab.\n\n= I added a Date field, but I don't see any years. =\n\nWhen you edit the field, you can give options along for the years, like '2000,2015'.\n\n= License =\n\nThis plugin is licensed under the GPL.\n\nFor the banners we credit:\n\n* Woman in black/yellow [Yoshiaka](http://www.freeimages.com/photo/1276430)\n* Sculptures [xxl7](http://www.freeimages.com/photo/1433708)\n* Toy Soldier [Zela](http://www.freeimages.com/photo/1418049)\n\n== Screenshots ==\n\n1. The page with the registration form on the frontend.\n2. The settings page with the first tab open.\n3. The modal where you can customize the shortcode that will be entered.\n\n== Changelog ==\n\n= 2.3.4 =\n* 2015-04-18\n* Really use the Email From address for emails.\n\n= 2.3.3 =\n* 2015-04-17\n* Don't include registration.php on current WordPress.\n* And even more fixes...\n\n= 2.3.2 =\n* 2015-04-17\n* Have defaults for years in date dropdown.\n* Fix even more notices (thanks dvdm).\n\n= 2.3.1 =\n* 2015-04-17\n* Fix more notices (thanks dvdm).\n\n= 2.3.0 =\n* 2015-04-07\n* Make notices (messages) dismissable in WP 4.2.\n* Fix PHP warnings and notices.\n\n= 2.2.9 =\n* 2015-03-27\n* Fix bug when no activeEditor, add to textarea#content instead.\n* Load js after html in simplr_reg_options.\n* Fix typo in MCE button.\n* Use different onclick listener, close.on() seems to break in IE11.\n* Use correct name attributes, Firefox prefers that.\n* Check capability in simplr_reg_options.\n* Add button doesn't need a href value.\n\n= 2.2.8 =\n* Add settings link to main plugin page.\n* Fix default field sort (first_name and last_name should be in it).\n* Add username to activation-succes email.\n* Add translation files and load them.\n* Add nl_NL.\n\n= 2.2.7 =\n* updated modal to work with WordPress version 4.1\n\n= 2.2.6 =\n* remove references to PluginUpdate class\n\n= 2.2.5 =\n* fix backward compatibility and sreg.class.php error\n\n= 2.2.4 =\n* Fix \"undefined\" notices\n* Fix incompatibility with login_message filter\n\n= 2.2.3 =\n* Fix moderation login bug\n* Add 'simplr_activated_user' action\n\n= 2.2.2 =\n* Fix moderation comments and default email.\n\n= 2.2.1 =\n* Fix for PHP 5.2 backward compatibility\n\n= 2.2.0 =\n* bugfix: namespace the form class\n* bugfix: silence some php undefined var errors\n* feature: add moderation\n* feature: allow user submitted vars in confirmation email\n* enhancement: use new wp*media*modal instead of thickbox\n* feature: integrate custom fields with admin tables\n\n= 2.1.11 =\n* bugfix: callback function bugfix\n\n= 2.1.10 =\n* bugfix: update tinymce button to accomodate wordpress 3.5\n\n= 2.1.8.4 =\n* bugfix: Thank you page routing\n* bugfix: Recaptcha save\n\n= 2.1.8.2 =\n* bugfix: Critical bug on network check\n\n= 2.1.8.1 =\n* bugfix: Critical fix on admin profile\n\n= 2.1.8 =\n* bugfix: Updated mutliuser check for 3.3\n* feature: Custom Thank You page\n* feature: Updated styles to fit better with WordPress 3.3+\n* feature: Add Chosen JS library for better UI on admin pages (plan to exten this to front end forms)\n* feature: Auto*registration for FB Connect users.\n* bugfix: login form on profile page if user is not logged in\n* codebase: Reorganized admin form saving functions\n\n= 2.1.7 =\n* bugfix: profile bugs, checkbox \"checked\" and hidden profiles on backend\n\n= 2.1.6 =\n* bugfix: non*required having asteriks other undefined index bugs\n\n= 2.1.5 =\n* bugfix: fixed bugs related to 3.3 and style fixes\n\n= 2.1.4 =\n* bugfix: reCaptcha api keys save error fixed.\n\n= 2.1.3 =\n* bugfix: activation error\n\n= 2.1.2 =\n* Bugfix:Added backward compatibility to field ordering.\n\n= 2.1.1 =\n* Bugfix:Turned Off Error Reporting.\n\n= 2.1 =\n* Feature: Profile page shortcode\n* Feature: Field types for checkbox and call back functions.\n* Feature: Profile page redirect\n* Bugfix: Fized Facebook classes to avoid conflict with other plugins\n\n= 2.0.6.2 =\n* Bugfix: FB conflicting with other plugins.\n\n= 2.0.6.1 =\n* Bugfix: old profile fields deleted on activation\n* Bugfix: FB connect footer error\n\n= 2.0.6 =\n* Feature: Adds Facebook Connect\n* Feature: Add error field hi*lighting\n* Feature: Adds custom registration fields to user profile\n* Bugfix: fixed issue with non*required custom fields\n* Bugfix: fixed tinyMCE button registration issue in WP 3.2+\n\n= 2.0.5.1 =\n* Fixed FB Login Bug\n\n= 2.0.5 =\n* Added Facebook Connect Integration.\n* Fixed validation bug.\n* Added instruction video.\n* Added Auto*Update.\n\n= 2.0.2 =\n* Fixed tinyMCE bug\n\n= 2.0.1 =\n* Premium version launch\n\n= 1.7 =\n* Added implementation button to WordPres TinyMCE Editor.\n* Add new filters and hooks.\n* Email validation.\n* Allows user to set their own password.\n* Additional security to prevent registering administrative role via plugin.\n\n= 1.5 =\n* Added filters for adding fields and validation.\n\n= 1.1 =\n* fixed stylesheet path\n\n= 1.0 =\n* Initial Version\n\n\n", "<?php\n/*\nPlugin Name: Simplr User Registration Form Plus\nVersion: 2.3.4\nDescription: This a simple plugin for adding a custom user registration form to any post or page using shortcode.\nAuthor: Mike Van Winkle\nAuthor URI: http://www.mikevanwinkle.com\nPlugin URI: http://www.mikevanwinkle.com/wordpress/how-to/custom-wordpress-registration-page/\nLicense: GPL\nText Domain: simplr-reg\nDomain Path: /lang/\n*/\n//constants\ndefine(\"SIMPLR_URL\", rtrim(WP_PLUGIN_URL,'/') . '/'.basename(dirname(__FILE__)) );\ndefine(\"SIMPLR_DIR\", rtrim(dirname(__FILE__), '/'));\n\n//setup options global\nglobal $simplr_options;\n$simplr_options = get_option('simplr_reg_options');\n\n//Includes\ninclude_once(SIMPLR_DIR.'/lib/fields.class.php');\ninclude_once(SIMPLR_DIR.'/lib/fields-table.class.php');\ninclude_once(SIMPLR_DIR.'/simplr_form_functions.php');\nrequire_once(SIMPLR_DIR.'/lib/profile.php');\n//require_once(SIMPLR_DIR.'/lib/login.php');\n\n//API\nadd_action('wp_print_styles','simplr_reg_styles');\nadd_action('admin_init','simplr_admin_style');\nadd_action('init','simplr_admin_scripts');\nadd_action('admin_menu','simplr_reg_menu');\nadd_shortcode('register', 'sreg_figure');\nadd_shortcode('Register', 'sreg_figure');\nadd_shortcode('login_page','simplr_login_page');\nadd_shortcode('profile_page','simplr_profile_page');\nadd_action('admin_init','simplr_action_admin_init');\nadd_action('admin_head','simplr_reg_scripts',100);\n//add_action('init','simplr_reg_default_fields');\nregister_activation_hook(__FILE__, 'simplr_reg_install');\nadd_action('wp','simplr_fb_auto_login',0);\nadd_action('login_head','simplr_fb_auto_login');\nadd_filter('login_message','get_fb_login_btn');\nadd_action('login_head','simplr_fb_login_style');\nadd_action('init','simplr_register_redirect');\n//add_action('template_redirect','simplr_includes');\nadd_action('login_footer','simplr_fb_login_footer_scripts');\nadd_action('wp','simplr_profile_redirect',10);\n\nif( is_admin() ) {\n\tadd_action( 'show_user_profile', 'simplr_reg_profile_form_fields' );\n\tadd_action( 'edit_user_profile', 'simplr_reg_profile_form_fields' );\n}\n\n//moderation related hooks\nif( @$simplr_options->mod_on == 'yes' ) {\n\tadd_action('admin_action_sreg-activate-selected', 'simplr_activate_users');\n\tadd_action('admin_action_sreg-resend-emails', 'simplr_resend_emails' );\n\tif( $simplr_options->mod_activation == 'auto' ) {\n\t\tadd_action('wp','simplr_activation_listen');\n\t}\n}\n\n/*\n**\n** Plugin Activation Hook\n**\n**/\n\nfunction simplr_reg_install() {\n\t\t//validate\n\tglobal $wp_version;\n\t$exit_msg = \"Dude, upgrade your stinkin Wordpress Installation.\";\n\n\tif(version_compare($wp_version, \"2.8\", \"<\"))\n\t\texit($exit_msg);\n\n\t//setup some default fields\n\tsimplr_reg_default_fields();\n}\n\n/**\n**\n** Load Settings Page\n**\n**/\n\nfunction simplr_reg_set() {\n\tinclude_once(SIMPLR_DIR.'/lib/form.class.php');\n\tinclude_once( SIMPLR_DIR . '/main_options_page.php' );\n} //End Function\n\n\n\n/**\n**\n** Add Settings page to admin menu\n**\n**/\n\nfunction simplr_reg_menu() {\n\t$page = add_submenu_page('options-general.php','Registration Forms', __('Registration Forms', 'simplr-reg'), 'manage_options','simplr_reg_set', 'simplr_reg_set');\n\tadd_action('admin_print_styles-' . $page, 'simplr_admin_style');\n\tregister_setting ('simplr_reg_options', 'sreg_admin_email', '');\n\tregister_setting ('simplr_reg_options', 'sreg_email', '');\n\tregister_setting ('simplr_reg_options', 'sreg_style', '');\n\tregister_setting ('simplr_reg_options', 'simplr_profile_fields', 'simplr_fields_settings_process');\n}\n\n\n/**\n**\n** Add Settings link to the main plugin page\n**/\n\nfunction simplr_plugin_link( $links, $file ) {\n\tif ( $file == plugin_basename( dirname(__FILE__).'/simplr_reg_page.php' ) ) {\n\t\t$links[] = '<a href=\"' . admin_url( 'options-general.php?page=simplr_reg_set' ) . '\">'.__( 'Settings' ).'</a>';\n\t}\n\treturn $links;\n}\nadd_filter( 'plugin_action_links', 'simplr_plugin_link', 10, 2 );\n\n\n/**\n**\n** Process Saved Settings (Deprecated)\n**\n**/\n\nfunction simplr_fields_settings_process($input) {\n\tif($input[aim][name] && $input[aim][label] == '') {$input[aim][label] = 'AIM';}\n\tif($input[yim][name] && $input[yim][label] == '') {$input[yim][label] = 'YIM';}\n\tif($input[website][name] && $input[website][label] == '') {$input[website][label] = __('Website', 'simplr-reg');}\n\tif($input[nickname][name] && $input[nickname][label] == '') {$input[nickname][label] = __('Nickname', 'simplr-reg');}\n\treturn $input;\n}\n\n/**\n**\n** Register and enqueue plugin styles\n**\n**/\n\nfunction simplr_reg_styles() {\n\t$options = get_option('simplr_reg_options');\n\tif( is_object($options) && isset($options->styles) && $options->styles != 'yes') {\n\t\tif( @$options->style_skin ) {\n\t\t\t$src = SIMPLR_URL .'/assets/skins/'.$options->style_skin;\n\t\t} else {\n\t\t\t$src = SIMPLR_URL .'/assets/skins/default.css';\n\t\t}\n\t\twp_register_style('simplr-forms-style',$src);\n\t\twp_enqueue_style('simplr-forms-style');\n\t} elseif(is_object($options) || !empty($options->stylesheet)) {\n\t\t$src = $options->stylesheet;\n\t\twp_register_style('simplr-forms-custom-style',$src);\n\t\twp_enqueue_style('simplr-forms-custom-style');\n\t} else {\n\t\twp_register_style('simplr-forms-style', SIMPLR_URL .'/assets/skins/default.css');\n\t\twp_enqueue_style('simplr-forms-style');\n\t}\n}\n\n/**\n * Handle admin styles and JS\n */\nfunction simplr_admin_style() {\n\t$src = SIMPLR_URL . '/assets/admin-style.css';\n\t$url = parse_url($_SERVER['REQUEST_URI']);\n\t$parts = explode('/', trim($url['path']));\n\tif(is_admin())\n\t{\n\t\tif( isset($_GET['page']) AND $_GET['page'] == 'simplr_reg_set' ) {\n\t\t\twp_register_style('chosen',SIMPLR_URL.'/assets/js/chosen/chosen/chosen.css');\n\t\t\twp_register_script('chosen',SIMPLR_URL.'/assets/js/chosen/chosen/chosen.jquery.js',array('jquery'));\n\t\t\tadd_action('admin_print_footer_scripts','simplr_footer_scripts');\n\t\t\twp_enqueue_style('chosen');\n\t\t\twp_enqueue_script('chosen');\n\n\t\t\twp_register_style('simplr-admin-style',$src);\n\t\t\twp_enqueue_style('simplr-admin-style');\n\t\t } elseif( end($parts) == 'users.php' ) {\n\t\t\tadd_action('admin_print_footer_scripts','simplr_footer_scripts');\n\t\t}\n\t}\n}\n\n/*\n * Print Admin Footer Scripts\n */\nfunction simplr_footer_scripts() {\n\t$screen = get_current_screen();\n\tif( $screen->id == 'users' AND @$_GET['view_inactive'] == 'true' ) {\n\t?>\n\t\t<script>\n\t\t\tjQuery(document).ready(function($) {\n\t\t\t\t//add bulk actions\n\t\t\t\t$('input[name=\"simplr_resend_activation\"]').click( function(e) { e.preventDefault(); });\n\t\t\t\t$('select[name=\"action\"]').append('<option value=\"sreg-activate-selected\"><?php _e('Activate', 'simplr-reg'); ?></option>\\n<option value=\"sreg-resend-emails\"><?php _e('Resend Email', 'simplr-reg'); ?></option>').after('<input name=\"view_inactive\" value=\"true\" type=\"hidden\" />');\n\t\t\t});\n\n\t\t</script>\n\t<?php\n\t} else {\n\t?>\n\t\t<script>\n\t\t\tjQuery(document).ready(function($) {\n\t\t\t\t$('.chzn').chosen();\n\t\t\t});\n\t\t</script>\n\t<?php\n\t}\n}\n\n/**\n**\n** Enqueue Scripts\n**\n**/\n\nfunction simplr_admin_scripts() {\n\tif(is_admin() AND @$_REQUEST['page'] == 'simplr_reg_set')\n\t{\n\t\twp_enqueue_script('jquery-ui-core');\n\t\twp_enqueue_script('jquery-ui-sortable');\n\t}\n}\n\n/**\n**\n** Load language files for frontend and backend\n**/\nfunction simplr_load_lang() {\n\tload_plugin_textdomain( 'simplr-reg', false, dirname( plugin_basename( __FILE__ ) ) . '/lang' );\n}\nadd_action('plugins_loaded', 'simplr_load_lang');\n\n\n/**\n**\n** Set plugin location for tinyMCE access\n**\n**/\n\nfunction simplr_reg_scripts() {\n\t?>\n\t<script type=\"text/javascript\">\n\t//<![CDATA[\n\t\tuserSettings.simplr_plugin_dir = '<?php echo SIMPLR_URL; ?>/';\n\t//]]>\n</script>\n\t<?php\n}\n\n/**\n * Media Buttons\n */\n\nadd_action('media_buttons', 'simplr_media_button', 100);\nfunction simplr_media_button() {\n\twp_enqueue_script('simplr-reg', plugins_url('assets/simplr_reg.js',__FILE__), array('jquery'));\n\t?>\n\t<a id=\"insert-registration-form\" class=\"button\" title=\"<?php esc_html_e( 'Add Registration Form', 'simplr-reg' ); ?>\" data-editor=\"content\" href=\"#\">\n\t\t<span class=\"jetpack-contact-form-icon\"></span> <?php esc_html_e( 'Add Registration Form', 'simplr-reg' ); ?>\n\t</a>\n\t<?php\n}\n\n\n/**\n**\n** Add TinyMCE Button\n**\n**/\nfunction simplr_action_admin_init() {\n\tglobal $simplr_options;\n\n\tif( @$simplr_options->mod_on == 'yes')\n\t{\n\t\t//only add these hooks if moderation is on\n\t\t$mod_access = false;\n\n\t\t//if roles haven't been saved use default\n\t\tif( empty($simplr_options->mod_roles) )\n\t\t\t$simplr_options->mod_roles = array('administrator');\n\n\t\tforeach( $simplr_options->mod_roles as $role ) {\n\t\t\tif( $mod_access) continue;\n\t\t\t$mod_access = current_user_can($role);\n\t\t}\n\n\t\tif( $mod_access ) {\n\t\t\trequire_once(SIMPLR_DIR.'/lib/mod.php');\n\t\t\tadd_action('views_users', 'simplr_views_users');\n\t\t\tadd_action('pre_user_query','simplr_inactive_query');\n\t\t\tadd_filter('bulk_actions-users','simplr_users_bulk_action');\n\t\t}\n\t}\n\n\tadd_filter('manage_users_columns', 'simplr_column');\n\tadd_filter('manage_users_custom_column','simplr_column_output',10,3);\n\tadd_filter('manage_users_sortable_columns','simplr_sortable_columns');\n\tadd_filter('pre_user_query','simplr_users_query');\n}\n\n/**\n * Adds default fields upon installation\n*/\n\nfunction simplr_reg_default_fields() {\n\tif(!get_option('simplr_reg_fields')) {\n\t\t$fields = new StdClass();\n\t\t$custom = array(\n\t\t\t'first_name'=>array('key'=>'first_name','label'=> __('First Name', 'simplr-reg'),'required'=>false,'type'=>'text'),\n\t\t\t'last_name'=>array('key'=>'last_name','label'=> __('Last Name', 'simplr-reg'),'last_name'=> __('Last Name', 'simplr-reg'),'required'=>false,'type'=>'text')\n\t\t);\n\t\t$fields->custom = $custom;\n\t\tupdate_option('simplr_reg_fields',$fields);\n\t}\n\n\t//unset profile from free version\n\tif(get_option('simplr_profile_fields')) {\n\t\tdelete_option('simplr_profile_fields');\n\t}\n\n}\n\n/*\n**\n** Facebook Autologin\n**\n*/\n\nfunction simplr_fb_auto_login() {\n\tglobal $simplr_options;\n\t//require_once(SIMPLR_DIR.'/lib/login.php');\n\tglobal $facebook;\n\tif( isset($simplr_options->fb_connect_on)\n\t\tAND $simplr_options->fb_connect_on == 'yes'\n\t\tAND !is_user_logged_in()\n\t\tAND !current_user_can('administrator')) {\n\t\trequire_once(SIMPLR_DIR .'/lib/facebook.php');\n\t\tinclude_once(SIMPLR_DIR .'/lib/fb.class.php');\n\t\t$facebook = new Facebook(Simplr_Facebook::get_fb_info());\n\t\ttry {\n\t\t\t$uid = $facebook->getUser();\n\t\t\t$user = $facebook->api('/me');\n\t\t} catch (FacebookApiException $e) {}\n\t\t$auth = (isset($user))?simplr_fb_find_user($user):false;\n\t\t$first_visit = get_user_meta($auth->ID,'first_visit',true);\n\t\tif(isset($user) && (@$_REQUEST['loggedout'] == 'true' OR @$_REQUEST['action'] == 'logout')) {\n\t\t\twp_redirect($facebook->getLogoutUrl(array('next'=>get_bloginfo('url'))));\n\t\t} elseif(isset($user) AND !is_wp_error($auth) ) {\n\t\t\twp_set_current_user($auth->ID, $auth->user_login);\n\t\t\twp_set_auth_cookie($auth->ID);\n\t\t\tif(isset($simplr_options->thank_you) AND !is_page($simplr_options->thank_you)  ) {\n\t\t\t\tupdate_user_meta($auth->ID,'first_visit',date('Y-m-d'));\n\t\t\t\t$redirect = $simplr_options->thank_you != ''?get_permalink($simplr_options->thank_you):home_url();\n\t\t\t\twp_redirect($redirect);\n\t\t\t} elseif(isset($simplr_options->thank_you) AND is_page($simplr_options->thank_you)) {\n\t\t\t\t//do nothing\n\t\t\t} elseif(isset($first_visit)) {\n\t\t\t\twp_redirect(!$simplr_options->fb_login_redirect?get_bloginfo('url'):$simplr_options->register_redirect);\n\t\t\t}\n\t\t} elseif(isset($user) AND is_wp_error($auth)) {\n\t\t\tglobal $error;\n\t\t\t$error = __($auth->get_error_message(),'simplr-reg');\n\t\t} else {\n\n\t\t\treturn;\n\t\t}\n\t} else {\n\t\treturn;\n\t}\n}\n\n\n/*\n**\n** Find Facebook User\n**\n*/\n\nfunction simplr_fb_find_user($fb_obj) {\n\tglobal $wpdb,$simplr_options;\n\t$query = $wpdb->prepare(\"SELECT user_id FROM $wpdb->usermeta WHERE meta_key = 'fbuser_id' AND meta_value = %d\", $fb_obj['id'] );\n\t$user_id = $wpdb->get_var($query);\n\n\tif(empty($user_id) AND isset($simplr_options->fb_auto_register)) {\n\t\t$user_id = simplr_fb_auto_register();\n\t}\n\n\t$user_obj = get_userdata($user_id);\n\tif(empty($user_obj)) {\n\t\treturn new WP_Error( 'login-error', __('No facebook account registered with this site', 'simplr-reg') );\n\t} else {\n\t\treturn $user_obj;\n\t}\n}\n\nfunction simplr_fb_auto_register() {\n\tglobal $simplr_options;\n\trequire_once(SIMPLR_DIR .'/lib/facebook.php');\n\tinclude_once(SIMPLR_DIR .'/lib/fb.class.php');\n\t$facebook = new Facebook(Simplr_Facebook::get_fb_info());\n\ttry {\n\t\t$uid = $facebook->getUser();\n\t\t$user = $facebook->api('/me');\n\t} catch (FacebookApiException $e) {}\n\n\tif(!empty($user)) {\n\t\t$userdata = array(\n\t\t\t'user_login' \t=> $user['username'],\n\t\t\t'first_name' \t=> $user['first_name'],\n\t\t\t'last_name' \t=> $user['last_name'],\n\t\t\t'user_pass' \t=> wp_generate_password( 12, false ),\n\t\t\t'user_email' \t=> 'fb-'.$user['id'].\"@website.com\",\n\t\t);\n\n\t\t// create user\n\t\t$user_id = wp_insert_user( $userdata );\n\t\tupdate_user_meta($user_id, 'fbuser_id', $user['id']);\n\t\tupdate_user_meta($user_id, 'fb_object', $user);\n\t\tif(!is_wp_error($user_id)) {\n\t\t\t//return the user\n\t\t\twp_redirect($simplr_options->fb_login_redirect?$simplr_options->fb_login_redirect:home_url());\n\t\t}\n\t}\n\n}\n\n/*\n**\n** Facebook Login Button\n**\n*/\n\nfunction get_fb_login_btn($content) {\n\t$option = get_option('simplr_reg_options');\n\tif( isset($option->fb_connect_on) AND $option->fb_connect_on == 'yes') {\n\t\t$out = '';\n\t\trequire_once(SIMPLR_DIR .'/lib/facebook.php');\n\t\tinclude_once(SIMPLR_DIR .'/lib/fb.class.php');\n\t\tglobal $facebook;\n\t\t$login_url = $facebook->getLoginUrl();\n\t\t$perms = implode(',',$option->fb_request_perms);\n\t\t$out .= '<fb:login-button scope=\"'.$perms.'\"></fb:login-button>';\n\t\t//$out = '<p><div id=\"fblogin\"><a href=\"'.$login_url.'\"><img src=\"'.plugin_dir_url(__FILE__).'assets/images/fb-login.png\" /></a></div></p>';\n\t\techo $out;\n\t}\n\treturn $content;\n}\n\n/*\n**\n** Facebook Login Button Styles\n**\n*/\n\nfunction simplr_fb_login_style() {\n\t?>\n\t<style>\n\ta.fb_button {\n\t\tmargin:10px 0px 10px 240px;\n\n\t}\n\t</style>\n\t<?php\n}\n\n/*\n**\n** Login Footer Script\n**\n*/\n\nfunction simplr_fb_login_footer_scripts() {\n\t$option = get_option('simplr_reg_options');\n\tif(isset($option->fb_connect_on) AND $option->fb_connect_on == 'yes') {\n\t\trequire_once(SIMPLR_DIR .'/lib/facebook.php');\n\t\tinclude_once(SIMPLR_DIR .'/lib/fb.class.php');\n\t\t$ap_info = Simplr_Facebook::get_fb_info();\n\t\t?>\n\t\t<div id=\"fb-root\"></div>\n\t\t<script>\n\t\twindow.fbAsyncInit = function() {\n\t\t\tFB.init({\n\t\t\t\tappId  : '<?php echo $ap_info['appId']; ?>',\n\t\t\t\tstatus : true, // check login status\n\t\t\t\tcookie : <?php echo $ap_info['cookie']; ?>, // enable cookies to allow the server to access the session\n\t\t\t\txfbml  : true,  // parse XFBML\n\t\t\t\toauth : true //enables OAuth 2.0\n\t\t\t});\n\n\t\t\tFB.Event.subscribe('auth.login', function(response) {\n\t\t\t\twindow.location.reload();\n\t\t\t});\n\t\t\tFB.Event.subscribe('auth.logout', function(response) {\n\t\t\t\twindow.location.reload();\n\t\t\t});\n\t\t};\n\t\t(function() {\n\t\t\tvar e = document.createElement('script');\n\t\t\te.src = document.location.protocol + '//connect.facebook.net/en_US/all.js';\n\t\t\te.async = true;\n\t\t\tdocument.getElementById('fb-root').appendChild(e);\n\t\t}());\n\t\t</script>\n\t<?php\n\t}\n}\n\n/*\n**\n** Add Fields to Profile Page\n**\n*/\nfunction simplr_reg_profile_form_fields($user) {\n\tif(!class_exists('Form')) {\n\t\tinclude_once(SIMPLR_DIR.'/lib/form.class.php');\n\t}\n\t$custom = new SREG_Fields();\n\tif(!current_user_can('promote_users')) {\n\t\t$fields = simplr_filter_profile_fields($custom->get_custom());\n\t} else {\n\t\t$fields = $custom->get_custom();\n\t}\n\t?>\n\t<link href=\"<?php echo SIMPLR_URL; ?>/assets/admin-style.css\" rel=\"stylesheet\" ></link>\n\t<h3><?php _e('Other Information', 'simplr-reg'); ?></h3>\n\t<?php\n\tforeach($fields as $field) {\n\t\tif(!in_array($field['key'] ,array('first_name','last_name', 'user_login','username'))) {\n\t\t\t$out = '';\n\t\t\tif($field['key'] != '') {\n\t\t\t\t$args = array(\n\t\t\t\t\t'name'\t\t=>$field['key'],\n\t\t\t\t\t'label'\t\t=>$field['label'],\n\t\t\t\t\t'required'\t=>$field['required']\n\t\t\t\t\t);\n\t\t\t\t//setup specific field values for date and callback\n\t\t\t\tif($field['type'] == 'callback') {\n\t\t\t\t\t$field['options_array'][1] = array( get_user_meta($user->ID,$field['key'],true) ) ;\n\t\t\t\t\tSREG_Form::$field['type']( $args, get_user_meta($user->ID,$field['key'],true), '', $field['options_array']);\n\t\t\t\t} elseif($field['type'] != '') {\n\t\t\t\t\tSREG_Form::$field['type']($args, get_user_meta($user->ID,$field['key'],true), '', $field['options_array']);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/*\n**\n** Save Fields in Profile Page\n**\n*/\nadd_action( 'personal_options_update', 'simplr_reg_profile_save_fields' );\nadd_action( 'edit_user_profile_update', 'simplr_reg_profile_save_fields' );\n\nfunction simplr_reg_profile_save_fields($user_id ) {\n\t$custom = new SREG_Fields();\n\t$data = $_POST;\n\t$fields = $custom->fields->custom;\n\tforeach($fields as $field):\n\t\tif(!in_array($field['key'] , simplr_get_excluded_profile_fields() )) {\n\t\t\tif($field['type'] == 'date')\n\t\t\t{\n\t\t\t\t$dy = $data[$field['key'].'-dy'];\n\t\t\t\t$mo = $data[$field['key'].'-mo'];\n\t\t\t\t$yr = $data[$field['key'].'-yr'];\n\t\t\t\t$dateinput = implode('-', array($yr,$mo,$dy));\n\t\t\t\tupdate_user_meta($user_id,$field['key'],$dateinput);\n\t\t\t} else {\n\t\t\t\tupdate_user_meta($user_id, $field['key'], $data[$field['key']]);\n\t\t\t}\n\t\t}\n\tendforeach;\n}\n\n\n/*\n**\n** Exclude Fields From Profile\n**\n*/\nfunction simplr_get_excluded_profile_fields() {\n\t$fields = array(\n\t\t'about_you','first_name','last_name','aim','yim','jabber','nickname','display_name','user_login','username','user_email',\n\t);\n\treturn apply_filters('simplr_excluded_profile_fields', $fields);\n}\n\n/*\n**\n** Register Redirect Function\n**\n*/\n\nfunction simplr_register_redirect() {\n\t$file = parse_url($_SERVER['REQUEST_URI']);\n\t$path = explode('/',@$file['path']);\n\tglobal $simplr_options;\n\tparse_str(@$file['query']);\n\tif( @$simplr_options->login_redirect ) {\n\t\t$post = get_post($simplr_options->login_redirect);\n\t\tset_transient('login_post_data',$post);\n\t}\n\tif( ((end($path) == 'wp-login.php' AND @$_GET['action'] == 'register') OR (end($path) == 'wp-signup.php')) AND $simplr_options->register_redirect != '' ) {\n\t\twp_redirect(get_permalink($simplr_options->register_redirect));\n\t} elseif(end($path) == 'profile.php' AND $simplr_options->profile_redirect != '') {\n\t\tif(!current_user_can('administrator')) {\n\t\t\twp_redirect(get_permalink($simplr_options->profile_redirect.'?'.$file['query']));\n\t\t}\n\t} else {\n\n\t}\n}\n\nfunction simplr_profile_redirect() {\n\tglobal $simplr_options,$wpdb;\n\tif ( is_object($simplr_options) &&  isset($simplr_options->profile_redirect) ) {\n\t\t$profile = $wpdb->get_var($wpdb->prepare(\"SELECT post_name FROM {$wpdb->prefix}posts WHERE ID = %d\",$simplr_options->profile_redirect));\n\t}\n\t$file = parse_url($_SERVER['REQUEST_URI']);\n\t$path = explode('/',@$file['path']);\n\tif(isset($profile) AND end($path) == $profile) {\n\t\tif(!is_user_logged_in()) {\n\t\t\twp_redirect(home_url('/wp-login.php?action=register'));\n\t\t}\n\t}\n\twp_deregister_script('password-strength-meter');\n\tdo_action('simplr_profile_actions');\n}\n\n\n/*\n**\n** Ajax save sort\n**\n*/\nadd_action('wp_ajax_simplr-save-sort','simplr_save_sort');\nfunction simplr_save_sort() {\n\textract($_REQUEST);\n\tif(isset($sort) and $page = 'simple_reg_set') {\n\t\tupdate_option('simplr_field_sort',$sort);\n\t}\n\t// debugging code as the response.\n\techo \"php sort: \";\n\tprint_r($sort);\n\tdie;\n}\n\n/*\n** Print admin messages\n**\n*/\n\nfunction simplr_print_message() {\n\t$simplr_messages = @$_COOKIE['simplr_messages'] ? $_COOKIE['simplr_messages'] : false;\n\t$messages = stripslashes($simplr_messages);\n\t$messages = str_replace('[','',str_replace(']','',$messages));\n\t$messages = json_decode($messages);\n\tif(!empty($messages)) {\n\t\tif(count($messages) > 1) {\n\t\t\tforeach($messages as $message) {\n\t\t\t\t?>\n\n\t\t\t\t<?php\n\t\t\t}\n\t\t} else {\n\t\t?>\n\t\t\t<div id=\"message\" class=\"<?php echo $messages->class; ?>\"><p><?php echo $messages->content; ?></p></div>\n\t\t<?php\n\t\t}\n\t}\n}\n\n\n/*\n** Set Admin Messages\n**\n*/\n\nfunction simplr_set_message($class,$message) {\n\tif(!session_id()) { session_start(); }\n\n\t$messages = $_COOKIE['simplr_messages'];\n\t$messages = stripslashes($simplr_messages);\n\t$messages = str_replace('[','',str_replace(']','',$messages));\n\t$messages = json_decode($messages);\n\t$new = array();\n\t$new['class'] = $class;\n\t$new['content'] = $message;\n\t$messages[] = $new;\n\tsetcookie('simplr_messages',json_encode($messages),time()+10,'/');\n\treturn true;\n}\n\n/*\n** Process admin forms\n**\t@TODO consolidate steps\n*/\nadd_action('admin_init','simplr_admin_actions');\nfunction simplr_admin_actions() {\n\tif(isset($_GET['page']) AND $_GET['page'] == 'simplr_reg_set') {\n\n\t\t$data = $_POST;\n\t\t$simplr_reg = get_option('simplr_reg_options');\n\n\t\t//\n\t\tif(isset($data['recaptcha-submit'])) {\n\n\t\t\tif(!wp_verify_nonce(-1, $data['reg-api']) && !current_user_can('manage_options')){ wp_die('Death to hackers!');}\n\t\t\t$simplr_reg->recap_public = $data['recap_public'];\n\t\t\t$simplr_reg->recap_private = $data['recap_private'];\n\t\t\t$simplr_reg->recap_on = $data['recap_on'];\n\t\t\tupdate_option('simplr_reg_options',$simplr_reg);\n\t\t} elseif(isset($data['fb-submit'])) {\n\t\t\tif(!wp_verify_nonce(-1, @$data['reg-fb']) && !current_user_can('manage_options')){ wp_die('Death to hackers!');}\n\t\t\t$simplr_reg->fb_connect_on = $data['fb_connect_on'];\n\t\t\t$simplr_reg->fb_app_id = @$data['fb_app_id'];\n\t\t\t$simplr_reg->fb_app_key = @$data['fb_app_key'];\n\t\t\t$simplr_reg->fb_app_secret = @$data['fb_app_secret'];\n\t\t\t$simplr_reg->fb_login_allow = @$data['fb_login_allow'];\n\t\t\t$simplr_reg->fb_login_redirect = @$data['fb_login_redirect'];\n\t\t\t$simplr_reg->fb_request_perms = @$data['fb_request_perms'];\n\t\t\t$simplr_reg->fb_auto_register = @$data['fb_auto_register'];\n\t\t\tupdate_option('simplr_reg_options',$simplr_reg);\n\t\t\tsimplr_set_message('updated notice is-dismissible', __(\"Your settings were saved.\", 'simplr-reg') );\n\t\t\twp_redirect($_SERVER['REQUEST_URI']);\n\t\t}\n\n\t\tif(isset($data['main-submit'])) {\n\t\t\t//security check\n\t\t\tif(!wp_verify_nonce(-1, $data['reg-main']) && !current_user_can('manage_options')){ wp_die('Death to hackers!');}\n\n\t\t\t$simplr_reg->email_message = $data['email_message'];\n\t\t\t$simplr_reg->default_email = $data['default_email'];\n\t\t\t$simplr_reg->stylesheet = $data['stylesheet'];\n\t\t\t$simplr_reg->styles = $data['styles'];\n\t\t\t$simplr_reg->style_skin = @$data['style_skin'] ? $data['style_skin'] : 'default.css';\n\t\t\t$simplr_reg->register_redirect = $data['register_redirect'];\n\t\t\t$simplr_reg->thank_you = $data['thank_you'];\n\t\t\t$simplr_reg->profile_redirect = $data['profile_redirect'];\n\t\t\tupdate_option('simplr_reg_options',$simplr_reg);\n\t\t\tsimplr_set_message('updated notice is-dismissible', __(\"Your settings were saved.\", 'simplr-reg') );\n\t\t\twp_redirect($_SERVER['REQUEST_URI']);\n\n\t\t}\n\n\t\tif(@$_GET['action'] == 'delete') {\n\n\t\t\t/*Security First*/\n\t\t\tif( !check_admin_referer('delete','_wpnonce') ) { wp_die('Death to hackers'); }\n\t\t\t$del = new SREG_Fields();\n\t\t\t$del->delete_field($_GET['key']);\n\t\t\tsimplr_set_message('updated notice is-dismissible', __(\"Field deleted.\", 'simplr-reg') );\n\t\t\twp_redirect(remove_query_arg('action'));\n\n\t\t} elseif(isset($_POST['mass-submit'])) {\n\n\t\t\tif(!check_admin_referer(-1,'_mass_edit')) { wp_die('Death to hackers'); }\n\t\t\tforeach($_POST['field_to_delete'] as $key):\n\t\t\t\t$del = new SREG_Fields();\n\t\t\t\t$del->delete_field($key);\n\t\t\tendforeach;\n\t\t\tsimplr_set_message('updated notice is-dismissible', __(\"Fields were deleted.\", 'simplr-reg') );\n\t\t\twp_redirect(remove_query_arg('action'));\n\n\t\t}\n\n\t\tif(isset($_POST['submit-field'])) {\n\t\t\tif( !check_admin_referer(-1, 'reg-field' ) ) wp_die(\"Death to Hackers\");\n\t\t\t$new = new SREG_Fields();\n\t\t\t$key = $_POST['key'];\n\t\t\t$response = $new->save_custom($_POST);\n\t\t\tsimplr_set_message('updated notice is-dismissible', __(\"Your Field was saved.\", 'simplr-reg') );\n\t\t\twp_redirect(remove_query_arg('action'));\n\n\t\t}\n\n\t\tadd_action('admin_notices','simplr_print_message');\n\t}\n\n}\n\n/*\n * Activate a user(s)\n * @params $ids (array) | an array of user_ids to activate.\n */\nfunction simplr_activate_users( $ids = false ) {\n\tif( !$ids ) {\n\t\tif( @$_REQUEST['action'] == 'sreg-activate-selected' AND !empty($_REQUEST['users']) ) {\n\t\t\tsimplr_activate_users( $_REQUEST['users'] );\n\t\t}\n\t}\n\telse {\n\t\tglobal $wpdb,$simplr_options;\n\t\tforeach( $ids as $id )  {\n\t\t\t$return = $wpdb->update( $wpdb->users, array( 'user_status'=> 0 ), array( 'ID' => $id ), array('%d'), array('%d') );\n\t\t\tif( !$return ) {\n\t\t\t\treturn new WP_Error( \"error\", __(\"Could not activate requested user.\", 'simplr-reg') );\n\t\t\t}\n\t\t\t$userdata = get_userdata( $id );\n\t\t\t$data = (array) $userdata;\n\t\t\t$data = (array) $data['data'];\n\t\t\t$data['blogname'] = get_option('blogname');\n\t\t\t$data['username'] = $userdata->user_login;\n\t\t\tdo_action('simplr_activated_user', $data);\n\t\t\t$subj = simplr_token_replace( $simplr_options->mod_email_activated_subj, $data );\n\t\t\t$content = simplr_token_replace( $simplr_options->mod_email_activated, $data );\n\t\t\tif ( isset( $simplr_options->default_email ) ) {\n\t\t\t\t$from = $simplr_options->default_email;\n\t\t\t} else {\n\t\t\t\t$from = get_option('admin_email');\n\t\t\t}\n\t\t\t$headers = \"From: \" . $data['blogname'] . \" <$from>\\r\\n\";\n\t\t\twp_mail( $data['user_email'], $subj, $content, $headers);\n\t\t\treturn $return;\n\t\t}\n\t}\n}\n\n/*\n * Sends user moderation emails to selected users\n */\nfunction simplr_resend_emails() {\n\tif( @$_REQUEST['action'] == 'sreg-resend-emails' AND !empty($_REQUEST['users']) ) {\n\t\tinclude_once(SIMPLR_DIR.'/lib/mod.php');\n\t\tforeach( $_REQUEST['users'] as $user ) {\n\t\t\tsimplr_resend_email($user);\n\t\t\tsimplr_set_notice('success', __(\"Emails resent\", 'simplr-reg') );\n\t\t}\n\t}\n}\n\n/*\n * Activation Listener\n */\nfunction simplr_activation_listen() {\n\tif( isset( $_REQUEST['activation_key'] ) ) {\n\t\twp_enqueue_script('simplr-mod', SIMPLR_URL.'/assets/mod.js', array('jquery') );\n\t\twp_enqueue_style('simplr-mod', SIMPLR_URL.'/assets/mod.css');\n\t\tglobal $wpdb,$sreg;\n\t\t$user_id = $wpdb->get_var($wpdb->prepare(\"SELECT ID from $wpdb->users WHERE `user_activation_key` = %s\", $_REQUEST['activation_key']));\n\t\t$done = simplr_activate_users( array($user_id) );\n\t\tif ( !$user_id OR is_wp_error($done) ) {\n\t\t\twp_localize_script('simplr-mod', 'sreg', array('state'=>'failure', 'message'=>__(\"Sorry, We could not find the requested account.\",'simplr-reg')) );\n\t\t} else {\n\t\t\twp_localize_script('simplr-mod', 'sreg', array('state'=>'success', 'message'=>__(\"Congratulations! Your Account was activated!\",'simplr-reg')) );\n\t\t}\n\t}\n}\n\n\nfunction simplr_set_notice( $class, $message ) {\n\tadd_action( \"admin_notices\" , create_function('',\"echo '<div class=\\\"updated notice is-dismissible $class\\\"><p>$message</p></div>';\") );\n}\n\n/**\n * Filter custom column output\n * @params $out string (optional) | received output from the wp hook\n * @params $column_name string (required) | unique column name corresponds to the field name\n * @params $user_id INT\n */\nif(!function_exists('simplr_column_output')):\n\tfunction simplr_column_output($out='',$column_name,$user_id) {\n\t\t$out = get_user_meta($user_id, $column_name,true);\n\t\treturn $out;\n\t}\nendif;\n\n/**\n * Add custom columns\n * @params $columns (array) | received from manage_users_columns hook\n */\nif(!function_exists('simplr_column')):\n\tfunction simplr_column($columns) {\n\t\t$cols = new SREG_Fields();\n\t\t$cols = $cols->fields->custom;\n\t\tforeach( $cols as $col ) {\n\t\t\tif( @$col['custom_column'] != 'yes' ) continue;\n\t\t\t$columns[$col['key']] = $col['label'];\n\t\t}\n\t\treturn $columns;\n\t}\nendif;\n\n/**\n * Filter sortable columns\n * @params $columns (array) | received from manage_users_sortable_columns hook\n*/\nif( !function_exists('simplr_sortable_columns') ) {\n\tfunction simplr_sortable_columns($columns) {\n\t\t$cols = new SREG_Fields();\n\t\t$cols = $cols->fields->custom;\n\t\tunset($columns['posts']);\n\t\tforeach( $cols as $col ) {\n\t\t\tif( @$col['custom_column'] != 'yes' ) continue;\n\t\t\t$columns[$col['key']] = $col['key'];\n\t\t}\n\t\t$columns['post'] = 'Posts';\n\t\treturn $columns;\n\t}\n}\n\n/**\n * Modify the users query to sort columns on custom fields\n * @params $query (array) | passed by pre_user_query hook\n*/\nif(!function_exists('simplr_users_query')):\n\tfunction simplr_users_query($query) {\n\t\t//if not on the user screen lets bail\n\t\t$screen = get_current_screen();\n\t\tif( !is_admin() ) return $query;\n\t\tif( $screen->base != 'users' ) return $query;\n\n\t\t$var = @$_REQUEST['orderby'] ? $_REQUEST['orderby'] : false;\n\t\tif( !$var ) return $query;\n\t\t//these fields are already sortable by wordpress\n\t\tif( in_array( $var, array('first_name','last_name','email','login','name') ) ) return $query;\n\t\t$order = @$_REQUEST['order'] ? esc_attr($_REQUEST['order']) : '';\n\t\t//get our custom fields\n\t\t$cols = new SREG_Fields();\n\t\t$cols = $cols->fields->custom;\n\t\tif( array_key_exists( $var, $cols ) ) {\n\t\t\tglobal $wpdb;\n\t\t\t$query->query_from .= $wpdb->prepare(\" LEFT JOIN {$wpdb->usermeta} um ON um.user_id = ID AND `meta_key` = %s\", $var);\n\t\t\t$query->query_orderby = \" ORDER BY um.meta_value $order\";\n\t\t}\n\t\treturn $query;\n\t}\nendif;\n\n//add_filter('query','simplr_log');\nfunction simplr_log($query) {\n\tif( @$_REQUEST['debug'] == 'true' )\n\t\tprint $query;\n\treturn $query;\n}\n\nadd_filter('wp_authenticate_user','simplr_disable_login_inactive', 0);\nfunction simplr_disable_login_inactive($user) {\n\n\tif( empty($user) || is_wp_error($user) )\n\t\treturn $user;\n\n\tif( $user->user_status == 2 )\n\t\treturn new WP_Error(\"error\", __(\"<strong>ERROR</strong>: This account has not yet been approved by the moderator\", 'simplr-reg') );\n\n\treturn $user;\n}\n", "<?php if(!isset($_GET['action']) || $_GET['action'] == 'delete') { ?>\n\t<div id=\"simplr-sub-nav\">\n\t\t<div class=\"add-field-button\">\n\t\t\t<a href=\"?page=simplr_reg_set&regview=fields&action=add\" class=\"button\"><?php _e('Add Field','simplr-reg'); ?></a>\n\t\t</div>\n\t</div>\n\t<?php $table = new SREG_Fields_Table(); ?>\n\t<form id=\"mass-edit\" action=\"?page=simplr_reg_set&regview=fields\" method=\"post\">\n\t\t<?php\n\t\techo $table->header();\n\t\techo $table->rows();\n\t\techo $table->footer();\n\t\t?>\n\t\t<p>\n\t\t\t<div class=\"ajaxloading\" ><?php _e('Saving sort','simplr-reg'); ?> <img class=\"waiting\" src=\"<?php echo admin_url('/images/wpspin_light.gif',__FILE__); ?>\" alt=\"\"></div>\n\t\t\t<?php wp_nonce_field(-1,'_mass_edit'); ?>\n\t\t\t<input type=\"submit\" class=\"button\" name=\"mass-submit\" value=\"<?php _e('Delete Selected','simplr-reg'); ?>\" onclick=\"return confirm('<?php _e('Are you sure you want to delete all the selected fields?','simplr-reg'); ?>')\">\n\t\t</p>\n\t</form>\n\t<script type=\"text/javascript\">\n\tjQuery(document).ready(function() {\n\n\t\tfunction update_field_sort(event,ui) {\n\t\t\tvar sort = {};\n\t\t\tjQuery('table#fields-table tbody#the-list tr').each(function(i) {\n\t\t\t\tsort[i] = jQuery(this).find('.key').text();\n\t\t\t});\n\t\t\tjQuery.post(ajaxurl,{action:'simplr-save-sort',sort:sort},function(response){\n\t\t\t\t//console.log('response: ' + response);\n\t\t\t}\n\t\t\t);\n\t\t\t//console.log(sort);\n\t\t\tjQuery('.ajaxloading').toggle();\n\t\t}\n\n\t\tjQuery('table#fields-table tbody#the-list').sortable({stop:function() {\n\t\t\tjQuery('.ajaxloading').toggle();\n\t\t\tupdate_field_sort(); }\n\t\t});\n\n\t});\n\t</script>\n\t<?php\n} else {\n\t?>\n\t<div id=\"simplr-sub-nav\">\n\t\t<div class=\"add-field-button\">\n\t\t\t<a href=\"?page=simplr_reg_set&regview=fields\" class=\"button\"><?php _e('Back to Field List','simplr-reg'); ?></a>\n\t\t</div>\n\t</div>\n\t<p><?php _e('Use the form below to add a registration field. These fields can then be selected on any registration form on the site.','simplr-reg'); ?></p>\n\t<?php\n}\n\nif(@$_GET['action'] == 'edit' OR @$_GET['action'] == 'add') {\n\tif($_GET['action'] == 'edit') {\n\t\t$field = new SREG_Fields();\n\t\t$field = (object) $field->custom_fields->{$_GET['key']};\n\t} else if($_GET['action'] == 'add') {\n\t\t$field = new SREG_Fields();\n\t}\n\t?>\n\t<script>\n\tjQuery.noConflict();\n\tjQuery(document).ready(function() {\n\t\tjQuery('#choices').find('.form-comment').each(function() {\n\t\t\tjQuery(this).hide();\n\t\t\tjQuery('input[name=\"options_array\"]').after('<div class=\"info\"><a id=\"show-info\"><?php _e('What are my options?','simplr-reg'); ?></a></div>');\n\t\t});\n\n\t\tjQuery('#show-info').live('click',function(e) {\n\t\t\te.preventDefault();\n\t\t\tjQuery('#choices').find('.form-comment').toggle();\n\t\t});\n\t});\n\t</script>\n\t<div class=\"inner\">\n\t\t<form action=\"<?php echo add_query_arg(array('action'=>'add')); ?>\" method=\"post\" id=\"add-field\">\n\t\t\t<?php SREG_Form::text(array('name'=>'label','label'=>__('Field Label','simplr-reg'),'required'=>true,'comment'=>__('Human readable name for display to users','simplr-reg')),esc_attr(@$field->label),'wide'); ?>\n\t\t\t<?php SREG_Form::text(array('name'=>'key','label'=>__('Field Key','simplr-reg'),'required'=>true,'comment'=>__('Machine readable name to represent this field in the Database','simplr-reg')),esc_attr(@$field->key),'wide'); ?>\n\n\t\t\t<?php SREG_Form::radio( array('name'=>'custom_column','label'=>__('Show this field on user admin screens?','simplr-reg'), 'default'=>'no') , @esc_attr($field->custom_column), 'wide', array('yes'=>'Yes','no'=>'No') ); ?>\n\n\t\t\t<?php SREG_Form::radio(array('name'=>'required','label'=>__('Is this field required?','simplr-reg'),'default'=>'yes'),esc_attr(@$field->required),'wide',array('yes'=>'Yes','no'=>'No')); ?>\n\t\t\t<?php SREG_Form::radio(array('name'=>'show_in_profile','label'=>__('Show this field in user profile?','simplr-reg'),'default'=>'yes'),esc_attr(@$field->show_in_profile),'wide',array('yes'=>'Yes','no'=>'No')); ?>\n\t\t\t<?php SREG_Form::select(array('name'=>'type','label'=>__('Type','simplr-reg'),'default'=>'text'),esc_attr($field->type?$field->type:'text'),'wide',array('text'=>__('Text Field','simplr-reg'),'textarea'=>__('Textarea','simplr-reg'),'select'=>__('Multiple Choice: Select Box','simplr-reg'), 'radio'=>__('Multiple Choice: Radio Buttons','simplr-reg'),'date'=>__('Date Field','simplr-reg'),'checkbox'=>__('Checkbox','simplr-reg'),'hidden'=>__('Hidden Field','simplr-reg'),'callback'=>__('Callback Function','simplr-reg')),'type-select'); ?>\n\n\t\t\t<div id=\"choices\">\n\t\t\t\t<?php $comment = __('<strong>Checkbox: </strong> Option not used.','simplr-reg') . '<br />' .\n\t\t\t\t\t__('<strong>Text Field:</strong> Option is not used.','simplr-reg') . '<br />' .\n\t\t\t\t\t__('<strong>Multiple Choice:</strong> Separate multiple options with a comma (i.e. yes,no).','simplr-reg') . '<br />' .\n\t\t\t\t\t__('<strong>Date:</strong> Option is used to determine range of available dates. Enter two years separated by commas. i.e. 2000,2015.','simplr-reg') . '<br />' .\n\t\t\t\t\t__('<strong>Textarea:</strong> Option is used to determine height and width of text box. Enter dimensions width them height, separated by a comma (i.e. <em>300px,100px</em> would generate a box that is 300 pixels wide and 100 pixels tall).','simplr-reg') . '<br />' .\n\t\t\t\t\t__('<strong>Hidden Field:</strong> Option determines the value that will be passed to the hidden field.','simplr-reg'); ?>\n\t\t\t\t<?php $values = (isset($field->options_array)) ? implode(',',@$field->options_array): null; ?>\n\t\t\t\t<?php SREG_Form::text(array('name'=>'options_array','label'=>__('Options','simplr-reg'),'comment'=>$comment), $values,''); ?>\n\t\t\t\t<br class=\"clear\" />\n\t\t\t</div>\n\n\n\t\t\t<?php echo wp_nonce_field(-1,\"reg-field\"); ?>\n\t\t\t<p>\n\t\t\t\t<?php $submit_value = ($_GET['action'] == 'edit') ? __('Save Changes','simplr-reg') : __('Add Field','simplr-reg'); ?>\n\t\t\t\t<input type=\"submit\" name=\"submit-field\" value=\"<?php echo $submit_value; ?>\" class=\"button-primary\"/>\n\t\t\t</p>\n\t\t</form>\n\t</div>\n<?php } ?>\n"], "fixing_code": ["<?php\n\n/**\n* Filter the user views list for inactives\n*\t@params $views (string)\n*/\nif(!function_exists('simplr_views_users')):\n\tfunction simplr_views_users( $views ) {\n\t\t$class = (@$_GET['view_inactive'] == true) ? 'current':'';\n\t\t$views['view_inactive'] = '<a href=\"'.esc_url(add_query_arg(array('view_inactive' => 'true'))).'\" class=\"'.$class.'\" >'. __('Inactive Users','simplr-reg') . ' ('.simplr_count_inactive().')</a>';\n\t\treturn $views;\n\t}\nendif;\n\nif(!function_exists('simplr_count_inactive')):\n\tfunction simplr_count_inactive() {\n\t\tif( !$count = wp_cache_get('inactive_count','users') ) {\n\t\t\tglobal $wpdb;\n\t\t\t$count = $wpdb->get_var($wpdb->prepare(\"SELECT COUNT(ID) FROM $wpdb->users WHERE user_status = %d\", array(2)));\n\t\t\twp_cache_set('inactivate_count', $count,'users', 3600);\n\t\t}\n\t\treturn $count;\n\t}\nendif;\n\nif(!function_exists('simplr_inactive_query')):\n\tfunction simplr_inactive_query( &$query ) {\n\t\tif(@$_GET['view_inactive'] === 'true') {\n\t\t\t$query->query_where = $query->query_where.' AND user_status = 2';\n\t\t}\n\t\treturn $query;\n\t}\nendif;\n\nif(!function_exists(\"simplr_users_bulk_action\")):\n\tfunction simplr_users_bulk_action($actions) {\n\t\tif(@$_GET['view_inactive'] === 'true') {\n\t\t\t$actions['activate'] = __('Activate Users','simplr-reg');\n\t\t}\n\t\treturn $actions;\n\t}\nendif;\n\nif( !function_exists('simplr_resend_email') ) {\n\tfunction simplr_resend_email( $id ) {\n\t\tglobal $simplr_options,$blog_id;\n\t\t$data = (array) get_userdata( $id );\n\t\t$data = (array) $data['data'] ;\n\t\t$data['blogname'] = get_option('blogname');\n\t\t$subj = simplr_token_replace( $simplr_options->mod_email_subj, $data );\n\t\t$content = simplr_token_replace( $simplr_options->mod_email, $data );\n\t\t$content = simplr_token_replace( $content, array('link' => get_home_url( $blog_id, '/?activation_key='.$data['user_activation_key'] ) ) );\n\t\tif ( isset( $simplr_options->default_email ) ) {\n\t\t\t$from = $simplr_options->default_email;\n\t\t} else {\n\t\t\t$from = get_option('admin_email');\n\t\t}\n\t\t$headers = \"From: \".$data['blogname'].\" <\".$from.\"> \\r\\n\";\n\t\twp_mail( $data['user_email'], $subj, $content, $headers);\n\t}\n}\n", "=== Simplr Registration Form Plus+ ===\nContributors: mpvanwinkle77, mpol\nDonate link: http://www.mikevanwinkle.com/\nTags: registration, signup, profile, cms, users, user management, user profile\nRequires at least: 3.0\nTested up to: 4.2.1\nStable tag: 2.3.5\n\nThis plugin allows users to easily add a custom user registration form anywhere on their site using simple shortcode.\n\n== Description ==\n**NEW FEATURES**\nThe Plus version of this plugin is now free! It includes reCAPTCHA, Facebook Connect, Custom Field UI, Moderation, Custom Confirmation messages. More info at http://mikevanwinkle.com/simplr-registration-form-plus/\n\nThis plugin creates a user interface for adding custom registration forms to any post or page on your WordPress website. Simply navigate to the edit page for post or page on which you would like the form to appear and click the registration forms button. A popup menu will appear guiding you through the options.\n\nThe plugin also creates an interface for adding/removing fields to be used in the registration form.\n\n== Installation ==\n\n1. Download `simplr-registration-form-plus.zip` and upload contents to the `/wp-content/plugins/` directory\n1. Activate the plugin through the 'Plugins' menu in WordPress\n1. Insert forms using the TinyMCE registration button.\n\n== Frequently Asked Questions ==\n\nSee plugin settings page for detailed instructions.\n\n= When I click the Add Registration Form button, nothing happens. =\n\nIt is likely that you have Javascript errors in your website.\nYou can open the inspector of your browser, and check your messages in the console tab.\n\n= I added a Date field, but I don't see any years. =\n\nWhen you edit the field, you can give options along for the years, like '2000,2015'.\n\n= License =\n\nThis plugin is licensed under the GPL.\n\nFor the banners we credit:\n\n* Woman in black/yellow [Yoshiaka](http://www.freeimages.com/photo/1276430)\n* Sculptures [xxl7](http://www.freeimages.com/photo/1433708)\n* Toy Soldier [Zela](http://www.freeimages.com/photo/1418049)\n\n== Screenshots ==\n\n1. The page with the registration form on the frontend.\n2. The settings page with the first tab open.\n3. The modal where you can customize the shortcode that will be entered.\n\n== Changelog ==\n\n= 2.3.5 =\n* properly escape add_query_arg inputs\n\n= 2.3.4 =\n* 2015-04-18\n* Really use the Email From address for emails.\n\n= 2.3.3 =\n* 2015-04-17\n* Don't include registration.php on current WordPress.\n* And even more fixes...\n\n= 2.3.2 =\n* 2015-04-17\n* Have defaults for years in date dropdown.\n* Fix even more notices (thanks dvdm).\n\n= 2.3.1 =\n* 2015-04-17\n* Fix more notices (thanks dvdm).\n\n= 2.3.0 =\n* 2015-04-07\n* Make notices (messages) dismissable in WP 4.2.\n* Fix PHP warnings and notices.\n\n= 2.2.9 =\n* 2015-03-27\n* Fix bug when no activeEditor, add to textarea#content instead.\n* Load js after html in simplr_reg_options.\n* Fix typo in MCE button.\n* Use different onclick listener, close.on() seems to break in IE11.\n* Use correct name attributes, Firefox prefers that.\n* Check capability in simplr_reg_options.\n* Add button doesn't need a href value.\n\n= 2.2.8 =\n* Add settings link to main plugin page.\n* Fix default field sort (first_name and last_name should be in it).\n* Add username to activation-succes email.\n* Add translation files and load them.\n* Add nl_NL.\n\n= 2.2.7 =\n* updated modal to work with WordPress version 4.1\n\n= 2.2.6 =\n* remove references to PluginUpdate class\n\n= 2.2.5 =\n* fix backward compatibility and sreg.class.php error\n\n= 2.2.4 =\n* Fix \"undefined\" notices\n* Fix incompatibility with login_message filter\n\n= 2.2.3 =\n* Fix moderation login bug\n* Add 'simplr_activated_user' action\n\n= 2.2.2 =\n* Fix moderation comments and default email.\n\n= 2.2.1 =\n* Fix for PHP 5.2 backward compatibility\n\n= 2.2.0 =\n* bugfix: namespace the form class\n* bugfix: silence some php undefined var errors\n* feature: add moderation\n* feature: allow user submitted vars in confirmation email\n* enhancement: use new wp*media*modal instead of thickbox\n* feature: integrate custom fields with admin tables\n\n= 2.1.11 =\n* bugfix: callback function bugfix\n\n= 2.1.10 =\n* bugfix: update tinymce button to accomodate wordpress 3.5\n\n= 2.1.8.4 =\n* bugfix: Thank you page routing\n* bugfix: Recaptcha save\n\n= 2.1.8.2 =\n* bugfix: Critical bug on network check\n\n= 2.1.8.1 =\n* bugfix: Critical fix on admin profile\n\n= 2.1.8 =\n* bugfix: Updated mutliuser check for 3.3\n* feature: Custom Thank You page\n* feature: Updated styles to fit better with WordPress 3.3+\n* feature: Add Chosen JS library for better UI on admin pages (plan to exten this to front end forms)\n* feature: Auto*registration for FB Connect users.\n* bugfix: login form on profile page if user is not logged in\n* codebase: Reorganized admin form saving functions\n\n= 2.1.7 =\n* bugfix: profile bugs, checkbox \"checked\" and hidden profiles on backend\n\n= 2.1.6 =\n* bugfix: non*required having asteriks other undefined index bugs\n\n= 2.1.5 =\n* bugfix: fixed bugs related to 3.3 and style fixes\n\n= 2.1.4 =\n* bugfix: reCaptcha api keys save error fixed.\n\n= 2.1.3 =\n* bugfix: activation error\n\n= 2.1.2 =\n* Bugfix:Added backward compatibility to field ordering.\n\n= 2.1.1 =\n* Bugfix:Turned Off Error Reporting.\n\n= 2.1 =\n* Feature: Profile page shortcode\n* Feature: Field types for checkbox and call back functions.\n* Feature: Profile page redirect\n* Bugfix: Fized Facebook classes to avoid conflict with other plugins\n\n= 2.0.6.2 =\n* Bugfix: FB conflicting with other plugins.\n\n= 2.0.6.1 =\n* Bugfix: old profile fields deleted on activation\n* Bugfix: FB connect footer error\n\n= 2.0.6 =\n* Feature: Adds Facebook Connect\n* Feature: Add error field hi*lighting\n* Feature: Adds custom registration fields to user profile\n* Bugfix: fixed issue with non*required custom fields\n* Bugfix: fixed tinyMCE button registration issue in WP 3.2+\n\n= 2.0.5.1 =\n* Fixed FB Login Bug\n\n= 2.0.5 =\n* Added Facebook Connect Integration.\n* Fixed validation bug.\n* Added instruction video.\n* Added Auto*Update.\n\n= 2.0.2 =\n* Fixed tinyMCE bug\n\n= 2.0.1 =\n* Premium version launch\n\n= 1.7 =\n* Added implementation button to WordPres TinyMCE Editor.\n* Add new filters and hooks.\n* Email validation.\n* Allows user to set their own password.\n* Additional security to prevent registering administrative role via plugin.\n\n= 1.5 =\n* Added filters for adding fields and validation.\n\n= 1.1 =\n* fixed stylesheet path\n\n= 1.0 =\n* Initial Version\n\n\n", "<?php\n/*\nPlugin Name: Simplr User Registration Form Plus\nVersion: 2.3.5\nDescription: This a simple plugin for adding a custom user registration form to any post or page using shortcode.\nAuthor: Mike Van Winkle\nAuthor URI: http://www.mikevanwinkle.com\nPlugin URI: http://www.mikevanwinkle.com/wordpress/how-to/custom-wordpress-registration-page/\nLicense: GPL\nText Domain: simplr-reg\nDomain Path: /lang/\n*/\n//constants\ndefine(\"SIMPLR_URL\", rtrim(WP_PLUGIN_URL,'/') . '/'.basename(dirname(__FILE__)) );\ndefine(\"SIMPLR_DIR\", rtrim(dirname(__FILE__), '/'));\n\n//setup options global\nglobal $simplr_options;\n$simplr_options = get_option('simplr_reg_options');\n\n//Includes\ninclude_once(SIMPLR_DIR.'/lib/fields.class.php');\ninclude_once(SIMPLR_DIR.'/lib/fields-table.class.php');\ninclude_once(SIMPLR_DIR.'/simplr_form_functions.php');\nrequire_once(SIMPLR_DIR.'/lib/profile.php');\n//require_once(SIMPLR_DIR.'/lib/login.php');\n\n//API\nadd_action('wp_print_styles','simplr_reg_styles');\nadd_action('admin_init','simplr_admin_style');\nadd_action('init','simplr_admin_scripts');\nadd_action('admin_menu','simplr_reg_menu');\nadd_shortcode('register', 'sreg_figure');\nadd_shortcode('Register', 'sreg_figure');\nadd_shortcode('login_page','simplr_login_page');\nadd_shortcode('profile_page','simplr_profile_page');\nadd_action('admin_init','simplr_action_admin_init');\nadd_action('admin_head','simplr_reg_scripts',100);\n//add_action('init','simplr_reg_default_fields');\nregister_activation_hook(__FILE__, 'simplr_reg_install');\nadd_action('wp','simplr_fb_auto_login',0);\nadd_action('login_head','simplr_fb_auto_login');\nadd_filter('login_message','get_fb_login_btn');\nadd_action('login_head','simplr_fb_login_style');\nadd_action('init','simplr_register_redirect');\n//add_action('template_redirect','simplr_includes');\nadd_action('login_footer','simplr_fb_login_footer_scripts');\nadd_action('wp','simplr_profile_redirect',10);\n\nif( is_admin() ) {\n\tadd_action( 'show_user_profile', 'simplr_reg_profile_form_fields' );\n\tadd_action( 'edit_user_profile', 'simplr_reg_profile_form_fields' );\n}\n\n//moderation related hooks\nif( @$simplr_options->mod_on == 'yes' ) {\n\tadd_action('admin_action_sreg-activate-selected', 'simplr_activate_users');\n\tadd_action('admin_action_sreg-resend-emails', 'simplr_resend_emails' );\n\tif( $simplr_options->mod_activation == 'auto' ) {\n\t\tadd_action('wp','simplr_activation_listen');\n\t}\n}\n\n/*\n**\n** Plugin Activation Hook\n**\n**/\n\nfunction simplr_reg_install() {\n\t\t//validate\n\tglobal $wp_version;\n\t$exit_msg = \"Dude, upgrade your stinkin Wordpress Installation.\";\n\n\tif(version_compare($wp_version, \"2.8\", \"<\"))\n\t\texit($exit_msg);\n\n\t//setup some default fields\n\tsimplr_reg_default_fields();\n}\n\n/**\n**\n** Load Settings Page\n**\n**/\n\nfunction simplr_reg_set() {\n\tinclude_once(SIMPLR_DIR.'/lib/form.class.php');\n\tinclude_once( SIMPLR_DIR . '/main_options_page.php' );\n} //End Function\n\n\n\n/**\n**\n** Add Settings page to admin menu\n**\n**/\n\nfunction simplr_reg_menu() {\n\t$page = add_submenu_page('options-general.php','Registration Forms', __('Registration Forms', 'simplr-reg'), 'manage_options','simplr_reg_set', 'simplr_reg_set');\n\tadd_action('admin_print_styles-' . $page, 'simplr_admin_style');\n\tregister_setting ('simplr_reg_options', 'sreg_admin_email', '');\n\tregister_setting ('simplr_reg_options', 'sreg_email', '');\n\tregister_setting ('simplr_reg_options', 'sreg_style', '');\n\tregister_setting ('simplr_reg_options', 'simplr_profile_fields', 'simplr_fields_settings_process');\n}\n\n\n/**\n**\n** Add Settings link to the main plugin page\n**/\n\nfunction simplr_plugin_link( $links, $file ) {\n\tif ( $file == plugin_basename( dirname(__FILE__).'/simplr_reg_page.php' ) ) {\n\t\t$links[] = '<a href=\"' . admin_url( 'options-general.php?page=simplr_reg_set' ) . '\">'.__( 'Settings' ).'</a>';\n\t}\n\treturn $links;\n}\nadd_filter( 'plugin_action_links', 'simplr_plugin_link', 10, 2 );\n\n\n/**\n**\n** Process Saved Settings (Deprecated)\n**\n**/\n\nfunction simplr_fields_settings_process($input) {\n\tif($input[aim][name] && $input[aim][label] == '') {$input[aim][label] = 'AIM';}\n\tif($input[yim][name] && $input[yim][label] == '') {$input[yim][label] = 'YIM';}\n\tif($input[website][name] && $input[website][label] == '') {$input[website][label] = __('Website', 'simplr-reg');}\n\tif($input[nickname][name] && $input[nickname][label] == '') {$input[nickname][label] = __('Nickname', 'simplr-reg');}\n\treturn $input;\n}\n\n/**\n**\n** Register and enqueue plugin styles\n**\n**/\n\nfunction simplr_reg_styles() {\n\t$options = get_option('simplr_reg_options');\n\tif( is_object($options) && isset($options->styles) && $options->styles != 'yes') {\n\t\tif( @$options->style_skin ) {\n\t\t\t$src = SIMPLR_URL .'/assets/skins/'.$options->style_skin;\n\t\t} else {\n\t\t\t$src = SIMPLR_URL .'/assets/skins/default.css';\n\t\t}\n\t\twp_register_style('simplr-forms-style',$src);\n\t\twp_enqueue_style('simplr-forms-style');\n\t} elseif(is_object($options) || !empty($options->stylesheet)) {\n\t\t$src = $options->stylesheet;\n\t\twp_register_style('simplr-forms-custom-style',$src);\n\t\twp_enqueue_style('simplr-forms-custom-style');\n\t} else {\n\t\twp_register_style('simplr-forms-style', SIMPLR_URL .'/assets/skins/default.css');\n\t\twp_enqueue_style('simplr-forms-style');\n\t}\n}\n\n/**\n * Handle admin styles and JS\n */\nfunction simplr_admin_style() {\n\t$src = SIMPLR_URL . '/assets/admin-style.css';\n\t$url = parse_url($_SERVER['REQUEST_URI']);\n\t$parts = explode('/', trim($url['path']));\n\tif(is_admin())\n\t{\n\t\tif( isset($_GET['page']) AND $_GET['page'] == 'simplr_reg_set' ) {\n\t\t\twp_register_style('chosen',SIMPLR_URL.'/assets/js/chosen/chosen/chosen.css');\n\t\t\twp_register_script('chosen',SIMPLR_URL.'/assets/js/chosen/chosen/chosen.jquery.js',array('jquery'));\n\t\t\tadd_action('admin_print_footer_scripts','simplr_footer_scripts');\n\t\t\twp_enqueue_style('chosen');\n\t\t\twp_enqueue_script('chosen');\n\n\t\t\twp_register_style('simplr-admin-style',$src);\n\t\t\twp_enqueue_style('simplr-admin-style');\n\t\t } elseif( end($parts) == 'users.php' ) {\n\t\t\tadd_action('admin_print_footer_scripts','simplr_footer_scripts');\n\t\t}\n\t}\n}\n\n/*\n * Print Admin Footer Scripts\n */\nfunction simplr_footer_scripts() {\n\t$screen = get_current_screen();\n\tif( $screen->id == 'users' AND @$_GET['view_inactive'] == 'true' ) {\n\t?>\n\t\t<script>\n\t\t\tjQuery(document).ready(function($) {\n\t\t\t\t//add bulk actions\n\t\t\t\t$('input[name=\"simplr_resend_activation\"]').click( function(e) { e.preventDefault(); });\n\t\t\t\t$('select[name=\"action\"]').append('<option value=\"sreg-activate-selected\"><?php _e('Activate', 'simplr-reg'); ?></option>\\n<option value=\"sreg-resend-emails\"><?php _e('Resend Email', 'simplr-reg'); ?></option>').after('<input name=\"view_inactive\" value=\"true\" type=\"hidden\" />');\n\t\t\t});\n\n\t\t</script>\n\t<?php\n\t} else {\n\t?>\n\t\t<script>\n\t\t\tjQuery(document).ready(function($) {\n\t\t\t\t$('.chzn').chosen();\n\t\t\t});\n\t\t</script>\n\t<?php\n\t}\n}\n\n/**\n**\n** Enqueue Scripts\n**\n**/\n\nfunction simplr_admin_scripts() {\n\tif(is_admin() AND @$_REQUEST['page'] == 'simplr_reg_set')\n\t{\n\t\twp_enqueue_script('jquery-ui-core');\n\t\twp_enqueue_script('jquery-ui-sortable');\n\t}\n}\n\n/**\n**\n** Load language files for frontend and backend\n**/\nfunction simplr_load_lang() {\n\tload_plugin_textdomain( 'simplr-reg', false, dirname( plugin_basename( __FILE__ ) ) . '/lang' );\n}\nadd_action('plugins_loaded', 'simplr_load_lang');\n\n\n/**\n**\n** Set plugin location for tinyMCE access\n**\n**/\n\nfunction simplr_reg_scripts() {\n\t?>\n\t<script type=\"text/javascript\">\n\t//<![CDATA[\n\t\tuserSettings.simplr_plugin_dir = '<?php echo SIMPLR_URL; ?>/';\n\t//]]>\n</script>\n\t<?php\n}\n\n/**\n * Media Buttons\n */\n\nadd_action('media_buttons', 'simplr_media_button', 100);\nfunction simplr_media_button() {\n\twp_enqueue_script('simplr-reg', plugins_url('assets/simplr_reg.js',__FILE__), array('jquery'));\n\t?>\n\t<a id=\"insert-registration-form\" class=\"button\" title=\"<?php esc_html_e( 'Add Registration Form', 'simplr-reg' ); ?>\" data-editor=\"content\" href=\"#\">\n\t\t<span class=\"jetpack-contact-form-icon\"></span> <?php esc_html_e( 'Add Registration Form', 'simplr-reg' ); ?>\n\t</a>\n\t<?php\n}\n\n\n/**\n**\n** Add TinyMCE Button\n**\n**/\nfunction simplr_action_admin_init() {\n\tglobal $simplr_options;\n\n\tif( @$simplr_options->mod_on == 'yes')\n\t{\n\t\t//only add these hooks if moderation is on\n\t\t$mod_access = false;\n\n\t\t//if roles haven't been saved use default\n\t\tif( empty($simplr_options->mod_roles) )\n\t\t\t$simplr_options->mod_roles = array('administrator');\n\n\t\tforeach( $simplr_options->mod_roles as $role ) {\n\t\t\tif( $mod_access) continue;\n\t\t\t$mod_access = current_user_can($role);\n\t\t}\n\n\t\tif( $mod_access ) {\n\t\t\trequire_once(SIMPLR_DIR.'/lib/mod.php');\n\t\t\tadd_action('views_users', 'simplr_views_users');\n\t\t\tadd_action('pre_user_query','simplr_inactive_query');\n\t\t\tadd_filter('bulk_actions-users','simplr_users_bulk_action');\n\t\t}\n\t}\n\n\tadd_filter('manage_users_columns', 'simplr_column');\n\tadd_filter('manage_users_custom_column','simplr_column_output',10,3);\n\tadd_filter('manage_users_sortable_columns','simplr_sortable_columns');\n\tadd_filter('pre_user_query','simplr_users_query');\n}\n\n/**\n * Adds default fields upon installation\n*/\n\nfunction simplr_reg_default_fields() {\n\tif(!get_option('simplr_reg_fields')) {\n\t\t$fields = new StdClass();\n\t\t$custom = array(\n\t\t\t'first_name'=>array('key'=>'first_name','label'=> __('First Name', 'simplr-reg'),'required'=>false,'type'=>'text'),\n\t\t\t'last_name'=>array('key'=>'last_name','label'=> __('Last Name', 'simplr-reg'),'last_name'=> __('Last Name', 'simplr-reg'),'required'=>false,'type'=>'text')\n\t\t);\n\t\t$fields->custom = $custom;\n\t\tupdate_option('simplr_reg_fields',$fields);\n\t}\n\n\t//unset profile from free version\n\tif(get_option('simplr_profile_fields')) {\n\t\tdelete_option('simplr_profile_fields');\n\t}\n\n}\n\n/*\n**\n** Facebook Autologin\n**\n*/\n\nfunction simplr_fb_auto_login() {\n\tglobal $simplr_options;\n\t//require_once(SIMPLR_DIR.'/lib/login.php');\n\tglobal $facebook;\n\tif( isset($simplr_options->fb_connect_on)\n\t\tAND $simplr_options->fb_connect_on == 'yes'\n\t\tAND !is_user_logged_in()\n\t\tAND !current_user_can('administrator')) {\n\t\trequire_once(SIMPLR_DIR .'/lib/facebook.php');\n\t\tinclude_once(SIMPLR_DIR .'/lib/fb.class.php');\n\t\t$facebook = new Facebook(Simplr_Facebook::get_fb_info());\n\t\ttry {\n\t\t\t$uid = $facebook->getUser();\n\t\t\t$user = $facebook->api('/me');\n\t\t} catch (FacebookApiException $e) {}\n\t\t$auth = (isset($user))?simplr_fb_find_user($user):false;\n\t\t$first_visit = get_user_meta($auth->ID,'first_visit',true);\n\t\tif(isset($user) && (@$_REQUEST['loggedout'] == 'true' OR @$_REQUEST['action'] == 'logout')) {\n\t\t\twp_redirect($facebook->getLogoutUrl(array('next'=>get_bloginfo('url'))));\n\t\t} elseif(isset($user) AND !is_wp_error($auth) ) {\n\t\t\twp_set_current_user($auth->ID, $auth->user_login);\n\t\t\twp_set_auth_cookie($auth->ID);\n\t\t\tif(isset($simplr_options->thank_you) AND !is_page($simplr_options->thank_you)  ) {\n\t\t\t\tupdate_user_meta($auth->ID,'first_visit',date('Y-m-d'));\n\t\t\t\t$redirect = $simplr_options->thank_you != ''?get_permalink($simplr_options->thank_you):home_url();\n\t\t\t\twp_redirect($redirect);\n\t\t\t} elseif(isset($simplr_options->thank_you) AND is_page($simplr_options->thank_you)) {\n\t\t\t\t//do nothing\n\t\t\t} elseif(isset($first_visit)) {\n\t\t\t\twp_redirect(!$simplr_options->fb_login_redirect?get_bloginfo('url'):$simplr_options->register_redirect);\n\t\t\t}\n\t\t} elseif(isset($user) AND is_wp_error($auth)) {\n\t\t\tglobal $error;\n\t\t\t$error = __($auth->get_error_message(),'simplr-reg');\n\t\t} else {\n\n\t\t\treturn;\n\t\t}\n\t} else {\n\t\treturn;\n\t}\n}\n\n\n/*\n**\n** Find Facebook User\n**\n*/\n\nfunction simplr_fb_find_user($fb_obj) {\n\tglobal $wpdb,$simplr_options;\n\t$query = $wpdb->prepare(\"SELECT user_id FROM $wpdb->usermeta WHERE meta_key = 'fbuser_id' AND meta_value = %d\", $fb_obj['id'] );\n\t$user_id = $wpdb->get_var($query);\n\n\tif(empty($user_id) AND isset($simplr_options->fb_auto_register)) {\n\t\t$user_id = simplr_fb_auto_register();\n\t}\n\n\t$user_obj = get_userdata($user_id);\n\tif(empty($user_obj)) {\n\t\treturn new WP_Error( 'login-error', __('No facebook account registered with this site', 'simplr-reg') );\n\t} else {\n\t\treturn $user_obj;\n\t}\n}\n\nfunction simplr_fb_auto_register() {\n\tglobal $simplr_options;\n\trequire_once(SIMPLR_DIR .'/lib/facebook.php');\n\tinclude_once(SIMPLR_DIR .'/lib/fb.class.php');\n\t$facebook = new Facebook(Simplr_Facebook::get_fb_info());\n\ttry {\n\t\t$uid = $facebook->getUser();\n\t\t$user = $facebook->api('/me');\n\t} catch (FacebookApiException $e) {}\n\n\tif(!empty($user)) {\n\t\t$userdata = array(\n\t\t\t'user_login' \t=> $user['username'],\n\t\t\t'first_name' \t=> $user['first_name'],\n\t\t\t'last_name' \t=> $user['last_name'],\n\t\t\t'user_pass' \t=> wp_generate_password( 12, false ),\n\t\t\t'user_email' \t=> 'fb-'.$user['id'].\"@website.com\",\n\t\t);\n\n\t\t// create user\n\t\t$user_id = wp_insert_user( $userdata );\n\t\tupdate_user_meta($user_id, 'fbuser_id', $user['id']);\n\t\tupdate_user_meta($user_id, 'fb_object', $user);\n\t\tif(!is_wp_error($user_id)) {\n\t\t\t//return the user\n\t\t\twp_redirect($simplr_options->fb_login_redirect?$simplr_options->fb_login_redirect:home_url());\n\t\t}\n\t}\n\n}\n\n/*\n**\n** Facebook Login Button\n**\n*/\n\nfunction get_fb_login_btn($content) {\n\t$option = get_option('simplr_reg_options');\n\tif( isset($option->fb_connect_on) AND $option->fb_connect_on == 'yes') {\n\t\t$out = '';\n\t\trequire_once(SIMPLR_DIR .'/lib/facebook.php');\n\t\tinclude_once(SIMPLR_DIR .'/lib/fb.class.php');\n\t\tglobal $facebook;\n\t\t$login_url = $facebook->getLoginUrl();\n\t\t$perms = implode(',',$option->fb_request_perms);\n\t\t$out .= '<fb:login-button scope=\"'.$perms.'\"></fb:login-button>';\n\t\t//$out = '<p><div id=\"fblogin\"><a href=\"'.$login_url.'\"><img src=\"'.plugin_dir_url(__FILE__).'assets/images/fb-login.png\" /></a></div></p>';\n\t\techo $out;\n\t}\n\treturn $content;\n}\n\n/*\n**\n** Facebook Login Button Styles\n**\n*/\n\nfunction simplr_fb_login_style() {\n\t?>\n\t<style>\n\ta.fb_button {\n\t\tmargin:10px 0px 10px 240px;\n\n\t}\n\t</style>\n\t<?php\n}\n\n/*\n**\n** Login Footer Script\n**\n*/\n\nfunction simplr_fb_login_footer_scripts() {\n\t$option = get_option('simplr_reg_options');\n\tif(isset($option->fb_connect_on) AND $option->fb_connect_on == 'yes') {\n\t\trequire_once(SIMPLR_DIR .'/lib/facebook.php');\n\t\tinclude_once(SIMPLR_DIR .'/lib/fb.class.php');\n\t\t$ap_info = Simplr_Facebook::get_fb_info();\n\t\t?>\n\t\t<div id=\"fb-root\"></div>\n\t\t<script>\n\t\twindow.fbAsyncInit = function() {\n\t\t\tFB.init({\n\t\t\t\tappId  : '<?php echo $ap_info['appId']; ?>',\n\t\t\t\tstatus : true, // check login status\n\t\t\t\tcookie : <?php echo $ap_info['cookie']; ?>, // enable cookies to allow the server to access the session\n\t\t\t\txfbml  : true,  // parse XFBML\n\t\t\t\toauth : true //enables OAuth 2.0\n\t\t\t});\n\n\t\t\tFB.Event.subscribe('auth.login', function(response) {\n\t\t\t\twindow.location.reload();\n\t\t\t});\n\t\t\tFB.Event.subscribe('auth.logout', function(response) {\n\t\t\t\twindow.location.reload();\n\t\t\t});\n\t\t};\n\t\t(function() {\n\t\t\tvar e = document.createElement('script');\n\t\t\te.src = document.location.protocol + '//connect.facebook.net/en_US/all.js';\n\t\t\te.async = true;\n\t\t\tdocument.getElementById('fb-root').appendChild(e);\n\t\t}());\n\t\t</script>\n\t<?php\n\t}\n}\n\n/*\n**\n** Add Fields to Profile Page\n**\n*/\nfunction simplr_reg_profile_form_fields($user) {\n\tif(!class_exists('Form')) {\n\t\tinclude_once(SIMPLR_DIR.'/lib/form.class.php');\n\t}\n\t$custom = new SREG_Fields();\n\tif(!current_user_can('promote_users')) {\n\t\t$fields = simplr_filter_profile_fields($custom->get_custom());\n\t} else {\n\t\t$fields = $custom->get_custom();\n\t}\n\t?>\n\t<link href=\"<?php echo SIMPLR_URL; ?>/assets/admin-style.css\" rel=\"stylesheet\" ></link>\n\t<h3><?php _e('Other Information', 'simplr-reg'); ?></h3>\n\t<?php\n\tforeach($fields as $field) {\n\t\tif(!in_array($field['key'] ,array('first_name','last_name', 'user_login','username'))) {\n\t\t\t$out = '';\n\t\t\tif($field['key'] != '') {\n\t\t\t\t$args = array(\n\t\t\t\t\t'name'\t\t=>$field['key'],\n\t\t\t\t\t'label'\t\t=>$field['label'],\n\t\t\t\t\t'required'\t=>$field['required']\n\t\t\t\t\t);\n\t\t\t\t//setup specific field values for date and callback\n\t\t\t\tif($field['type'] == 'callback') {\n\t\t\t\t\t$field['options_array'][1] = array( get_user_meta($user->ID,$field['key'],true) ) ;\n\t\t\t\t\tSREG_Form::$field['type']( $args, get_user_meta($user->ID,$field['key'],true), '', $field['options_array']);\n\t\t\t\t} elseif($field['type'] != '') {\n\t\t\t\t\tSREG_Form::$field['type']($args, get_user_meta($user->ID,$field['key'],true), '', $field['options_array']);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/*\n**\n** Save Fields in Profile Page\n**\n*/\nadd_action( 'personal_options_update', 'simplr_reg_profile_save_fields' );\nadd_action( 'edit_user_profile_update', 'simplr_reg_profile_save_fields' );\n\nfunction simplr_reg_profile_save_fields($user_id ) {\n\t$custom = new SREG_Fields();\n\t$data = $_POST;\n\t$fields = $custom->fields->custom;\n\tforeach($fields as $field):\n\t\tif(!in_array($field['key'] , simplr_get_excluded_profile_fields() )) {\n\t\t\tif($field['type'] == 'date')\n\t\t\t{\n\t\t\t\t$dy = $data[$field['key'].'-dy'];\n\t\t\t\t$mo = $data[$field['key'].'-mo'];\n\t\t\t\t$yr = $data[$field['key'].'-yr'];\n\t\t\t\t$dateinput = implode('-', array($yr,$mo,$dy));\n\t\t\t\tupdate_user_meta($user_id,$field['key'],$dateinput);\n\t\t\t} else {\n\t\t\t\tupdate_user_meta($user_id, $field['key'], $data[$field['key']]);\n\t\t\t}\n\t\t}\n\tendforeach;\n}\n\n\n/*\n**\n** Exclude Fields From Profile\n**\n*/\nfunction simplr_get_excluded_profile_fields() {\n\t$fields = array(\n\t\t'about_you','first_name','last_name','aim','yim','jabber','nickname','display_name','user_login','username','user_email',\n\t);\n\treturn apply_filters('simplr_excluded_profile_fields', $fields);\n}\n\n/*\n**\n** Register Redirect Function\n**\n*/\n\nfunction simplr_register_redirect() {\n\t$file = parse_url($_SERVER['REQUEST_URI']);\n\t$path = explode('/',@$file['path']);\n\tglobal $simplr_options;\n\tparse_str(@$file['query']);\n\tif( @$simplr_options->login_redirect ) {\n\t\t$post = get_post($simplr_options->login_redirect);\n\t\tset_transient('login_post_data',$post);\n\t}\n\tif( ((end($path) == 'wp-login.php' AND @$_GET['action'] == 'register') OR (end($path) == 'wp-signup.php')) AND $simplr_options->register_redirect != '' ) {\n\t\twp_redirect(get_permalink($simplr_options->register_redirect));\n\t} elseif(end($path) == 'profile.php' AND $simplr_options->profile_redirect != '') {\n\t\tif(!current_user_can('administrator')) {\n\t\t\twp_redirect(get_permalink($simplr_options->profile_redirect.'?'.$file['query']));\n\t\t}\n\t} else {\n\n\t}\n}\n\nfunction simplr_profile_redirect() {\n\tglobal $simplr_options,$wpdb;\n\tif ( is_object($simplr_options) &&  isset($simplr_options->profile_redirect) ) {\n\t\t$profile = $wpdb->get_var($wpdb->prepare(\"SELECT post_name FROM {$wpdb->prefix}posts WHERE ID = %d\",$simplr_options->profile_redirect));\n\t}\n\t$file = parse_url($_SERVER['REQUEST_URI']);\n\t$path = explode('/',@$file['path']);\n\tif(isset($profile) AND end($path) == $profile) {\n\t\tif(!is_user_logged_in()) {\n\t\t\twp_redirect(home_url('/wp-login.php?action=register'));\n\t\t}\n\t}\n\twp_deregister_script('password-strength-meter');\n\tdo_action('simplr_profile_actions');\n}\n\n\n/*\n**\n** Ajax save sort\n**\n*/\nadd_action('wp_ajax_simplr-save-sort','simplr_save_sort');\nfunction simplr_save_sort() {\n\textract($_REQUEST);\n\tif(isset($sort) and $page = 'simple_reg_set') {\n\t\tupdate_option('simplr_field_sort',$sort);\n\t}\n\t// debugging code as the response.\n\techo \"php sort: \";\n\tprint_r($sort);\n\tdie;\n}\n\n/*\n** Print admin messages\n**\n*/\n\nfunction simplr_print_message() {\n\t$simplr_messages = @$_COOKIE['simplr_messages'] ? $_COOKIE['simplr_messages'] : false;\n\t$messages = stripslashes($simplr_messages);\n\t$messages = str_replace('[','',str_replace(']','',$messages));\n\t$messages = json_decode($messages);\n\tif(!empty($messages)) {\n\t\tif(count($messages) > 1) {\n\t\t\tforeach($messages as $message) {\n\t\t\t\t?>\n\n\t\t\t\t<?php\n\t\t\t}\n\t\t} else {\n\t\t?>\n\t\t\t<div id=\"message\" class=\"<?php echo $messages->class; ?>\"><p><?php echo $messages->content; ?></p></div>\n\t\t<?php\n\t\t}\n\t}\n}\n\n\n/*\n** Set Admin Messages\n**\n*/\n\nfunction simplr_set_message($class,$message) {\n\tif(!session_id()) { session_start(); }\n\n\t$messages = $_COOKIE['simplr_messages'];\n\t$messages = stripslashes($simplr_messages);\n\t$messages = str_replace('[','',str_replace(']','',$messages));\n\t$messages = json_decode($messages);\n\t$new = array();\n\t$new['class'] = $class;\n\t$new['content'] = $message;\n\t$messages[] = $new;\n\tsetcookie('simplr_messages',json_encode($messages),time()+10,'/');\n\treturn true;\n}\n\n/*\n** Process admin forms\n**\t@TODO consolidate steps\n*/\nadd_action('admin_init','simplr_admin_actions');\nfunction simplr_admin_actions() {\n\tif(isset($_GET['page']) AND $_GET['page'] == 'simplr_reg_set') {\n\n\t\t$data = $_POST;\n\t\t$simplr_reg = get_option('simplr_reg_options');\n\n\t\t//\n\t\tif(isset($data['recaptcha-submit'])) {\n\n\t\t\tif(!wp_verify_nonce(-1, $data['reg-api']) && !current_user_can('manage_options')){ wp_die('Death to hackers!');}\n\t\t\t$simplr_reg->recap_public = $data['recap_public'];\n\t\t\t$simplr_reg->recap_private = $data['recap_private'];\n\t\t\t$simplr_reg->recap_on = $data['recap_on'];\n\t\t\tupdate_option('simplr_reg_options',$simplr_reg);\n\t\t} elseif(isset($data['fb-submit'])) {\n\t\t\tif(!wp_verify_nonce(-1, @$data['reg-fb']) && !current_user_can('manage_options')){ wp_die('Death to hackers!');}\n\t\t\t$simplr_reg->fb_connect_on = $data['fb_connect_on'];\n\t\t\t$simplr_reg->fb_app_id = @$data['fb_app_id'];\n\t\t\t$simplr_reg->fb_app_key = @$data['fb_app_key'];\n\t\t\t$simplr_reg->fb_app_secret = @$data['fb_app_secret'];\n\t\t\t$simplr_reg->fb_login_allow = @$data['fb_login_allow'];\n\t\t\t$simplr_reg->fb_login_redirect = @$data['fb_login_redirect'];\n\t\t\t$simplr_reg->fb_request_perms = @$data['fb_request_perms'];\n\t\t\t$simplr_reg->fb_auto_register = @$data['fb_auto_register'];\n\t\t\tupdate_option('simplr_reg_options',$simplr_reg);\n\t\t\tsimplr_set_message('updated notice is-dismissible', __(\"Your settings were saved.\", 'simplr-reg') );\n\t\t\twp_redirect($_SERVER['REQUEST_URI']);\n\t\t}\n\n\t\tif(isset($data['main-submit'])) {\n\t\t\t//security check\n\t\t\tif(!wp_verify_nonce(-1, $data['reg-main']) && !current_user_can('manage_options')){ wp_die('Death to hackers!');}\n\n\t\t\t$simplr_reg->email_message = $data['email_message'];\n\t\t\t$simplr_reg->default_email = $data['default_email'];\n\t\t\t$simplr_reg->stylesheet = $data['stylesheet'];\n\t\t\t$simplr_reg->styles = $data['styles'];\n\t\t\t$simplr_reg->style_skin = @$data['style_skin'] ? $data['style_skin'] : 'default.css';\n\t\t\t$simplr_reg->register_redirect = $data['register_redirect'];\n\t\t\t$simplr_reg->thank_you = $data['thank_you'];\n\t\t\t$simplr_reg->profile_redirect = $data['profile_redirect'];\n\t\t\tupdate_option('simplr_reg_options',$simplr_reg);\n\t\t\tsimplr_set_message('updated notice is-dismissible', __(\"Your settings were saved.\", 'simplr-reg') );\n\t\t\twp_redirect($_SERVER['REQUEST_URI']);\n\n\t\t}\n\n\t\tif(@$_GET['action'] == 'delete') {\n\n\t\t\t/*Security First*/\n\t\t\tif( !check_admin_referer('delete','_wpnonce') ) { wp_die('Death to hackers'); }\n\t\t\t$del = new SREG_Fields();\n\t\t\t$del->delete_field($_GET['key']);\n\t\t\tsimplr_set_message('updated notice is-dismissible', __(\"Field deleted.\", 'simplr-reg') );\n\t\t\twp_redirect(remove_query_arg('action'));\n\n\t\t} elseif(isset($_POST['mass-submit'])) {\n\n\t\t\tif(!check_admin_referer(-1,'_mass_edit')) { wp_die('Death to hackers'); }\n\t\t\tforeach($_POST['field_to_delete'] as $key):\n\t\t\t\t$del = new SREG_Fields();\n\t\t\t\t$del->delete_field($key);\n\t\t\tendforeach;\n\t\t\tsimplr_set_message('updated notice is-dismissible', __(\"Fields were deleted.\", 'simplr-reg') );\n\t\t\twp_redirect(remove_query_arg('action'));\n\n\t\t}\n\n\t\tif(isset($_POST['submit-field'])) {\n\t\t\tif( !check_admin_referer(-1, 'reg-field' ) ) wp_die(\"Death to Hackers\");\n\t\t\t$new = new SREG_Fields();\n\t\t\t$key = $_POST['key'];\n\t\t\t$response = $new->save_custom($_POST);\n\t\t\tsimplr_set_message('updated notice is-dismissible', __(\"Your Field was saved.\", 'simplr-reg') );\n\t\t\twp_redirect(remove_query_arg('action'));\n\n\t\t}\n\n\t\tadd_action('admin_notices','simplr_print_message');\n\t}\n\n}\n\n/*\n * Activate a user(s)\n * @params $ids (array) | an array of user_ids to activate.\n */\nfunction simplr_activate_users( $ids = false ) {\n\tif( !$ids ) {\n\t\tif( @$_REQUEST['action'] == 'sreg-activate-selected' AND !empty($_REQUEST['users']) ) {\n\t\t\tsimplr_activate_users( $_REQUEST['users'] );\n\t\t}\n\t}\n\telse {\n\t\tglobal $wpdb,$simplr_options;\n\t\tforeach( $ids as $id )  {\n\t\t\t$return = $wpdb->update( $wpdb->users, array( 'user_status'=> 0 ), array( 'ID' => $id ), array('%d'), array('%d') );\n\t\t\tif( !$return ) {\n\t\t\t\treturn new WP_Error( \"error\", __(\"Could not activate requested user.\", 'simplr-reg') );\n\t\t\t}\n\t\t\t$userdata = get_userdata( $id );\n\t\t\t$data = (array) $userdata;\n\t\t\t$data = (array) $data['data'];\n\t\t\t$data['blogname'] = get_option('blogname');\n\t\t\t$data['username'] = $userdata->user_login;\n\t\t\tdo_action('simplr_activated_user', $data);\n\t\t\t$subj = simplr_token_replace( $simplr_options->mod_email_activated_subj, $data );\n\t\t\t$content = simplr_token_replace( $simplr_options->mod_email_activated, $data );\n\t\t\tif ( isset( $simplr_options->default_email ) ) {\n\t\t\t\t$from = $simplr_options->default_email;\n\t\t\t} else {\n\t\t\t\t$from = get_option('admin_email');\n\t\t\t}\n\t\t\t$headers = \"From: \" . $data['blogname'] . \" <$from>\\r\\n\";\n\t\t\twp_mail( $data['user_email'], $subj, $content, $headers);\n\t\t\treturn $return;\n\t\t}\n\t}\n}\n\n/*\n * Sends user moderation emails to selected users\n */\nfunction simplr_resend_emails() {\n\tif( @$_REQUEST['action'] == 'sreg-resend-emails' AND !empty($_REQUEST['users']) ) {\n\t\tinclude_once(SIMPLR_DIR.'/lib/mod.php');\n\t\tforeach( $_REQUEST['users'] as $user ) {\n\t\t\tsimplr_resend_email($user);\n\t\t\tsimplr_set_notice('success', __(\"Emails resent\", 'simplr-reg') );\n\t\t}\n\t}\n}\n\n/*\n * Activation Listener\n */\nfunction simplr_activation_listen() {\n\tif( isset( $_REQUEST['activation_key'] ) ) {\n\t\twp_enqueue_script('simplr-mod', SIMPLR_URL.'/assets/mod.js', array('jquery') );\n\t\twp_enqueue_style('simplr-mod', SIMPLR_URL.'/assets/mod.css');\n\t\tglobal $wpdb,$sreg;\n\t\t$user_id = $wpdb->get_var($wpdb->prepare(\"SELECT ID from $wpdb->users WHERE `user_activation_key` = %s\", $_REQUEST['activation_key']));\n\t\t$done = simplr_activate_users( array($user_id) );\n\t\tif ( !$user_id OR is_wp_error($done) ) {\n\t\t\twp_localize_script('simplr-mod', 'sreg', array('state'=>'failure', 'message'=>__(\"Sorry, We could not find the requested account.\",'simplr-reg')) );\n\t\t} else {\n\t\t\twp_localize_script('simplr-mod', 'sreg', array('state'=>'success', 'message'=>__(\"Congratulations! Your Account was activated!\",'simplr-reg')) );\n\t\t}\n\t}\n}\n\n\nfunction simplr_set_notice( $class, $message ) {\n\tadd_action( \"admin_notices\" , create_function('',\"echo '<div class=\\\"updated notice is-dismissible $class\\\"><p>$message</p></div>';\") );\n}\n\n/**\n * Filter custom column output\n * @params $out string (optional) | received output from the wp hook\n * @params $column_name string (required) | unique column name corresponds to the field name\n * @params $user_id INT\n */\nif(!function_exists('simplr_column_output')):\n\tfunction simplr_column_output($out='',$column_name,$user_id) {\n\t\t$out = get_user_meta($user_id, $column_name,true);\n\t\treturn $out;\n\t}\nendif;\n\n/**\n * Add custom columns\n * @params $columns (array) | received from manage_users_columns hook\n */\nif(!function_exists('simplr_column')):\n\tfunction simplr_column($columns) {\n\t\t$cols = new SREG_Fields();\n\t\t$cols = $cols->fields->custom;\n\t\tforeach( $cols as $col ) {\n\t\t\tif( @$col['custom_column'] != 'yes' ) continue;\n\t\t\t$columns[$col['key']] = $col['label'];\n\t\t}\n\t\treturn $columns;\n\t}\nendif;\n\n/**\n * Filter sortable columns\n * @params $columns (array) | received from manage_users_sortable_columns hook\n*/\nif( !function_exists('simplr_sortable_columns') ) {\n\tfunction simplr_sortable_columns($columns) {\n\t\t$cols = new SREG_Fields();\n\t\t$cols = $cols->fields->custom;\n\t\tunset($columns['posts']);\n\t\tforeach( $cols as $col ) {\n\t\t\tif( @$col['custom_column'] != 'yes' ) continue;\n\t\t\t$columns[$col['key']] = $col['key'];\n\t\t}\n\t\t$columns['post'] = 'Posts';\n\t\treturn $columns;\n\t}\n}\n\n/**\n * Modify the users query to sort columns on custom fields\n * @params $query (array) | passed by pre_user_query hook\n*/\nif(!function_exists('simplr_users_query')):\n\tfunction simplr_users_query($query) {\n\t\t//if not on the user screen lets bail\n\t\t$screen = get_current_screen();\n\t\tif( !is_admin() ) return $query;\n\t\tif( $screen->base != 'users' ) return $query;\n\n\t\t$var = @$_REQUEST['orderby'] ? $_REQUEST['orderby'] : false;\n\t\tif( !$var ) return $query;\n\t\t//these fields are already sortable by wordpress\n\t\tif( in_array( $var, array('first_name','last_name','email','login','name') ) ) return $query;\n\t\t$order = @$_REQUEST['order'] ? esc_attr($_REQUEST['order']) : '';\n\t\t//get our custom fields\n\t\t$cols = new SREG_Fields();\n\t\t$cols = $cols->fields->custom;\n\t\tif( array_key_exists( $var, $cols ) ) {\n\t\t\tglobal $wpdb;\n\t\t\t$query->query_from .= $wpdb->prepare(\" LEFT JOIN {$wpdb->usermeta} um ON um.user_id = ID AND `meta_key` = %s\", $var);\n\t\t\t$query->query_orderby = \" ORDER BY um.meta_value $order\";\n\t\t}\n\t\treturn $query;\n\t}\nendif;\n\n//add_filter('query','simplr_log');\nfunction simplr_log($query) {\n\tif( @$_REQUEST['debug'] == 'true' )\n\t\tprint $query;\n\treturn $query;\n}\n\nadd_filter('wp_authenticate_user','simplr_disable_login_inactive', 0);\nfunction simplr_disable_login_inactive($user) {\n\n\tif( empty($user) || is_wp_error($user) )\n\t\treturn $user;\n\n\tif( $user->user_status == 2 )\n\t\treturn new WP_Error(\"error\", __(\"<strong>ERROR</strong>: This account has not yet been approved by the moderator\", 'simplr-reg') );\n\n\treturn $user;\n}\n", "<?php if(!isset($_GET['action']) || $_GET['action'] == 'delete') { ?>\n\t<div id=\"simplr-sub-nav\">\n\t\t<div class=\"add-field-button\">\n\t\t\t<a href=\"?page=simplr_reg_set&regview=fields&action=add\" class=\"button\"><?php _e('Add Field','simplr-reg'); ?></a>\n\t\t</div>\n\t</div>\n\t<?php $table = new SREG_Fields_Table(); ?>\n\t<form id=\"mass-edit\" action=\"?page=simplr_reg_set&regview=fields\" method=\"post\">\n\t\t<?php\n\t\techo $table->header();\n\t\techo $table->rows();\n\t\techo $table->footer();\n\t\t?>\n\t\t<p>\n\t\t\t<div class=\"ajaxloading\" ><?php _e('Saving sort','simplr-reg'); ?> <img class=\"waiting\" src=\"<?php echo admin_url('/images/wpspin_light.gif',__FILE__); ?>\" alt=\"\"></div>\n\t\t\t<?php wp_nonce_field(-1,'_mass_edit'); ?>\n\t\t\t<input type=\"submit\" class=\"button\" name=\"mass-submit\" value=\"<?php _e('Delete Selected','simplr-reg'); ?>\" onclick=\"return confirm('<?php _e('Are you sure you want to delete all the selected fields?','simplr-reg'); ?>')\">\n\t\t</p>\n\t</form>\n\t<script type=\"text/javascript\">\n\tjQuery(document).ready(function() {\n\n\t\tfunction update_field_sort(event,ui) {\n\t\t\tvar sort = {};\n\t\t\tjQuery('table#fields-table tbody#the-list tr').each(function(i) {\n\t\t\t\tsort[i] = jQuery(this).find('.key').text();\n\t\t\t});\n\t\t\tjQuery.post(ajaxurl,{action:'simplr-save-sort',sort:sort},function(response){\n\t\t\t\t//console.log('response: ' + response);\n\t\t\t}\n\t\t\t);\n\t\t\t//console.log(sort);\n\t\t\tjQuery('.ajaxloading').toggle();\n\t\t}\n\n\t\tjQuery('table#fields-table tbody#the-list').sortable({stop:function() {\n\t\t\tjQuery('.ajaxloading').toggle();\n\t\t\tupdate_field_sort(); }\n\t\t});\n\n\t});\n\t</script>\n\t<?php\n} else {\n\t?>\n\t<div id=\"simplr-sub-nav\">\n\t\t<div class=\"add-field-button\">\n\t\t\t<a href=\"?page=simplr_reg_set&regview=fields\" class=\"button\"><?php _e('Back to Field List','simplr-reg'); ?></a>\n\t\t</div>\n\t</div>\n\t<p><?php _e('Use the form below to add a registration field. These fields can then be selected on any registration form on the site.','simplr-reg'); ?></p>\n\t<?php\n}\n\nif(@$_GET['action'] == 'edit' OR @$_GET['action'] == 'add') {\n\tif($_GET['action'] == 'edit') {\n\t\t$field = new SREG_Fields();\n\t\t$field = (object) $field->custom_fields->{$_GET['key']};\n\t} else if($_GET['action'] == 'add') {\n\t\t$field = new SREG_Fields();\n\t}\n\t?>\n\t<script>\n\tjQuery.noConflict();\n\tjQuery(document).ready(function() {\n\t\tjQuery('#choices').find('.form-comment').each(function() {\n\t\t\tjQuery(this).hide();\n\t\t\tjQuery('input[name=\"options_array\"]').after('<div class=\"info\"><a id=\"show-info\"><?php _e('What are my options?','simplr-reg'); ?></a></div>');\n\t\t});\n\n\t\tjQuery('#show-info').live('click',function(e) {\n\t\t\te.preventDefault();\n\t\t\tjQuery('#choices').find('.form-comment').toggle();\n\t\t});\n\t});\n\t</script>\n\t<div class=\"inner\">\n\t\t<form action=\"<?php echo esc_url(add_query_arg(array('action'=>'add'))); ?>\" method=\"post\" id=\"add-field\">\n\t\t\t<?php SREG_Form::text(array('name'=>'label','label'=>__('Field Label','simplr-reg'),'required'=>true,'comment'=>__('Human readable name for display to users','simplr-reg')),esc_attr(@$field->label),'wide'); ?>\n\t\t\t<?php SREG_Form::text(array('name'=>'key','label'=>__('Field Key','simplr-reg'),'required'=>true,'comment'=>__('Machine readable name to represent this field in the Database','simplr-reg')),esc_attr(@$field->key),'wide'); ?>\n\n\t\t\t<?php SREG_Form::radio( array('name'=>'custom_column','label'=>__('Show this field on user admin screens?','simplr-reg'), 'default'=>'no') , @esc_attr($field->custom_column), 'wide', array('yes'=>'Yes','no'=>'No') ); ?>\n\n\t\t\t<?php SREG_Form::radio(array('name'=>'required','label'=>__('Is this field required?','simplr-reg'),'default'=>'yes'),esc_attr(@$field->required),'wide',array('yes'=>'Yes','no'=>'No')); ?>\n\t\t\t<?php SREG_Form::radio(array('name'=>'show_in_profile','label'=>__('Show this field in user profile?','simplr-reg'),'default'=>'yes'),esc_attr(@$field->show_in_profile),'wide',array('yes'=>'Yes','no'=>'No')); ?>\n\t\t\t<?php SREG_Form::select(array('name'=>'type','label'=>__('Type','simplr-reg'),'default'=>'text'),esc_attr($field->type?$field->type:'text'),'wide',array('text'=>__('Text Field','simplr-reg'),'textarea'=>__('Textarea','simplr-reg'),'select'=>__('Multiple Choice: Select Box','simplr-reg'), 'radio'=>__('Multiple Choice: Radio Buttons','simplr-reg'),'date'=>__('Date Field','simplr-reg'),'checkbox'=>__('Checkbox','simplr-reg'),'hidden'=>__('Hidden Field','simplr-reg'),'callback'=>__('Callback Function','simplr-reg')),'type-select'); ?>\n\n\t\t\t<div id=\"choices\">\n\t\t\t\t<?php $comment = __('<strong>Checkbox: </strong> Option not used.','simplr-reg') . '<br />' .\n\t\t\t\t\t__('<strong>Text Field:</strong> Option is not used.','simplr-reg') . '<br />' .\n\t\t\t\t\t__('<strong>Multiple Choice:</strong> Separate multiple options with a comma (i.e. yes,no).','simplr-reg') . '<br />' .\n\t\t\t\t\t__('<strong>Date:</strong> Option is used to determine range of available dates. Enter two years separated by commas. i.e. 2000,2015.','simplr-reg') . '<br />' .\n\t\t\t\t\t__('<strong>Textarea:</strong> Option is used to determine height and width of text box. Enter dimensions width them height, separated by a comma (i.e. <em>300px,100px</em> would generate a box that is 300 pixels wide and 100 pixels tall).','simplr-reg') . '<br />' .\n\t\t\t\t\t__('<strong>Hidden Field:</strong> Option determines the value that will be passed to the hidden field.','simplr-reg'); ?>\n\t\t\t\t<?php $values = (isset($field->options_array)) ? implode(',',@$field->options_array): null; ?>\n\t\t\t\t<?php SREG_Form::text(array('name'=>'options_array','label'=>__('Options','simplr-reg'),'comment'=>$comment), $values,''); ?>\n\t\t\t\t<br class=\"clear\" />\n\t\t\t</div>\n\n\n\t\t\t<?php echo wp_nonce_field(-1,\"reg-field\"); ?>\n\t\t\t<p>\n\t\t\t\t<?php $submit_value = ($_GET['action'] == 'edit') ? __('Save Changes','simplr-reg') : __('Add Field','simplr-reg'); ?>\n\t\t\t\t<input type=\"submit\" name=\"submit-field\" value=\"<?php echo $submit_value; ?>\" class=\"button-primary\"/>\n\t\t\t</p>\n\t\t</form>\n\t</div>\n<?php } ?>\n"], "filenames": ["lib/mod.php", "readme.txt", "simplr_reg_page.php", "views/fields.php"], "buggy_code_start_loc": [10, 6, 4, 78], "buggy_code_end_loc": [11, 54, 5, 79], "fixing_code_start_loc": [10, 6, 4, 78], "fixing_code_end_loc": [11, 58, 5, 79], "type": "CWE-79", "message": "A vulnerability was found in Simplr Registration Form Plus+ Plugin up to 2.3.4 on WordPress and classified as problematic. This issue affects some unknown processing. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 2.3.5 is able to address this issue. The name of the patch is d588446844dd49232ab400ef213ff5b92121c33e. It is recommended to upgrade the affected component. The identifier VDB-230153 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2015-10107", "sourceIdentifier": "cna@vuldb.com", "published": "2023-05-31T03:15:09.157", "lastModified": "2023-06-06T16:01:33.717", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in Simplr Registration Form Plus+ Plugin up to 2.3.4 on WordPress and classified as problematic. This issue affects some unknown processing. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 2.3.5 is able to address this issue. The name of the patch is d588446844dd49232ab400ef213ff5b92121c33e. It is recommended to upgrade the affected component. The identifier VDB-230153 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:simplr_registration_form_plus\\+_project:simplr_registration_form_plus\\+:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "2.3.4", "matchCriteriaId": "1D78C503-96F1-4EB4-9272-13ABE04A18C3"}]}]}], "references": [{"url": "https://github.com/wp-plugins/simplr-registration-form/commit/d588446844dd49232ab400ef213ff5b92121c33e", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://vuldb.com/?ctiid.230153", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory", "VDB Entry"]}, {"url": "https://vuldb.com/?id.230153", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory", "VDB Entry"]}]}, "github_commit_url": "https://github.com/wp-plugins/simplr-registration-form/commit/d588446844dd49232ab400ef213ff5b92121c33e"}}