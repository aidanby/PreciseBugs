{"buggy_code": ["<?php\n/**\n * WBCE CMS\n * Way Better Content Editing.\n * Visit https://wbce.org to learn more and to join the community.\n *\n * @copyright Ryan Djurovich (2004-2009)\n * @copyright WebsiteBaker Org. e.V. (2009-2015)\n * @copyright WBCE Project (2015-)\n * @license GNU GPL2 (or any later version)\n */\n\n// Include the configuration file\nrequire realpath('../../../config.php');\n// Include the language file\nrequire WB_PATH . '/languages/' . DEFAULT_LANGUAGE . '.php';\n// Include the database class file and initiate an object\nrequire WB_PATH . '/framework/class.admin.php';\n$admin = new admin('Start', 'start', false, false);\n\n$oMsgBox = new MessageBox();\n$oMsgBox->closeBtn = '';\n\n// Check if the user has already submitted the form, otherwise show it\nif (isset($_POST['email']) and $_POST['email'] != \"\") {\n    $email = strip_tags($wb->get_post('email'));\n    if ($admin->validate_email($email) == false) {\n        $oMsgBox->error($MESSAGE['USERS_INVALID_EMAIL']);\n        $email = '';\n    }\n\n    // Check if the email exists in the database\n    $sSql = \"SELECT * FROM `{TP}users` WHERE `email` = '\" . $email . \"'\";\n    $rRow = $database->query($sSql);\n    if ($rRow->numRows() > 0) {\n\n        // Get the id, username, email, and last_reset from the above db query\n        $aUser = $rRow->fetchRow();\n        if (strlen($aUser['signup_confirmcode']) > 25) {\n            header(\"Location: \" . WB_URL . \"/account/signup_continue_page.php?switch=wrong_inputs\");\n            exit(0); // break up the script here\n        }\n\n\n        // Check if the password has been reset in the last 2 hours\n        if ((time() - intval($aUser['last_reset'])) < (2 * 3600)) {\n            // Tell the user that their password cannot be reset more than once per hour\n            $oMsgBox->error($MESSAGE['FORGOT_PASS_ALREADY_RESET']);\n        } else {\n            $sCurrentPw = $aUser['password'];\n\n            // Generate a random password then update the database with it\n            $sNewPw = '';\n            $salt = \"abchefghjkmnpqrstuvwxyz0123456789\";\n            srand((double)microtime() * 1000000);\n            $i = 0;\n            while ($i <= 7) {\n                $num = rand() % 33;\n                $tmp = substr($salt, $num, 1);\n                $sNewPw = $sNewPw . $tmp;\n                $i++;\n            }\n\n            // update the new password in the database\n            $aUpdateUser = array(\n                'user_id' => $aUser['user_id'],\n                'password' => $wb->doPasswordEncode($sNewPw),\n                'last_reset' => time(),\n            );\n            $database->updateRow('{TP}users', 'user_id', $aUpdateUser);\n\n            if ($database->is_error()) {\n                // Error updating database\n                $oMsgBox->error($database->get_error());\n            } else {\n                // Setup email to send\n                $mail_to = $email;\n                $mail_subject = $MESSAGE['SIGNUP2_SUBJECT_LOGIN_INFO'];\n\n                // Replace placeholders from language variable with values\n                $search = array('{LOGIN_DISPLAY_NAME}', '{LOGIN_WEBSITE_TITLE}', '{LOGIN_NAME}', '{LOGIN_PASSWORD}');\n                $replace = array($aUser['display_name'], WEBSITE_TITLE, $aUser['username'], $sNewPw);\n\n                $aTokenReplace = array(\n                    '{LOGIN_DISPLAY_NAME}' => $aUser['display_name'],\n                    '{LOGIN_NAME}' => $aUser['username'],\n                    '{LOGIN_WEBSITE_TITLE}' => WEBSITE_TITLE,\n                    '{LOGIN_PASSWORD}' => $sNewPw\n                );\n\n\n                $mail_message = strtr($MESSAGE['SIGNUP2_BODY_LOGIN_FORGOT'], $aTokenReplace);\n\n                // Try sending the email\n                if ($admin->mail(SERVER_EMAIL, $mail_to, $mail_subject, $mail_message)) {\n                    $oMsgBox->error($MESSAGE['FORGOT_PASS_PASSWORD_RESET']);\n                    $display_form = false;\n                } else {\n                    $aUpdateUser = array(\n                        'user_id' => $aUser['user_id'],\n                        'password' => $sCurrentPw\n                    );\n                    $database->updateRow('{TP}users', 'user_id', $aUpdateUser);\n                    $oMsgBox->error($MESSAGE['FORGOT_PASS_CANNOT_EMAIL']);\n                }\n            }\n        }\n    } else {\n        // Email doesn't exist, so tell the user\n        $oMsgBox->error($MESSAGE['FORGOT_PASS_EMAIL_NOT_FOUND']);\n        // and delete the wrong Email\n        $email = '';\n    }\n} else {\n    $email = '';\n}\n\nif ($oMsgBox->hasErrors() == false) {\n    $oMsgBox->info($MESSAGE['FORGOT_PASS_NO_DATA'], 0, 1);\n}\n\n// Create new phpLib Template object\n$template = new Template(dirname($admin->correct_theme_source('login_forgot.htt')));\n$template->set_file('page', 'login_forgot.htt');\n$template->set_block('page', 'main_block', 'main');\n\n$aTemplateVars = array(\n    'SECTION_FORGOT' => $MENU['FORGOT'],\n    'MESSAGE_COLOR' => '', //$message_color,\n    'MESSAGE' => $oMsgBox->fetchDisplay(),\n    'WB_URL' => WB_URL,\n    'ADMIN_URL' => ADMIN_URL,\n    'THEME_URL' => THEME_URL,\n    'LANGUAGE' => strtolower(LANGUAGE),\n    'TEXT_EMAIL' => $TEXT['EMAIL'],\n    'TEXT_SEND_DETAILS' => $TEXT['SEND_DETAILS'],\n    'TEXT_HOME' => $TEXT['HOME'],\n    'TEXT_NEED_TO_LOGIN' => $TEXT['NEED_TO_LOGIN'],\n    'EMAIL' => $email,\n    'DISPLAY_FORM' => isset($display_form) ? 'display:none;' : '',\n    'ACTION_URL' => defined('FRONTEND') ? 'forgot.php' : 'index.php',\n    'LOGIN_URL' => defined('FRONTEND') ? WB_URL . '/account/login.php' : ADMIN_URL,\n    'INTERFACE_URL' => ADMIN_URL . '/interface',\n    'DEFAULT_CHARSET' => defined('DEFAULT_CHARSET') ? DEFAULT_CHARSET : 'utf-8',\n    'CHARSET' => isset($charset) ? $charset : 'utf-8',\n);\n$template->set_var($aTemplateVars);\n\n$template->parse('main', 'main_block', false);\n$template->pparse('output', 'page');\n", "<?php\n/**\n * WebsiteBaker Community Edition (WBCE)\n * Way Better Content Editing.\n * Visit http://wbce.org to learn more and to join the community.\n *\n * @copyright Ryan Djurovich (2004-2009)\n * @copyright WebsiteBaker Org. e.V. (2009-2015)\n * @copyright WBCE Project (since 2015)\n * @license GNU GPL2 (or any later version)\n */\n\ndefined('WB_PATH') or die(\"Cannot access this file directly\");\n\n$oAccounts = new Accounts();\n$oMsgBox   = new MessageBox();\n\n$sLC       = defined('LANGUAGE') ? LANGUAGE : (defined('DEFAULT_LANGUAGE') ? DEFAULT_LANGUAGE : 'EN');\n$sEmail    = '';\n\nif(isset($_POST['email']) && $_POST['email'] != \"\" ) {\n    $sEmail = strip_tags($oAccounts->get_post('email'));\n    if($admin->validate_email($sEmail) == false) {\n        $oMsgBox->error($MESSAGE['USERS_INVALID_EMAIL']);\n        $sEmail  = '';\n    } else {\n        // Check if the email exists in the database\n        $sSql  = \"SELECT * FROM `{TP}users` WHERE `email`='\".$sEmail.\"'\";\n\n        if(($rRow = $database->query($sSql))){\n            if($aUser = $rRow->fetchRow(MYSQLI_ASSOC)) {\n                if(strlen($aUser['signup_confirmcode']) > 25){\n                    header(\"Location: \".ACCOUNT_URL.\"/signup_continue_page.php?switch=wrong_inputs\");\n                    exit(0); // break up the script here\n                }\n                $iUserID = (int) $aUser['user_id'];\n                // Get the id, username, email, and last_reset from the above db query\n\n                // Check if the password has been reset in the last 2 hours\n                if( ( time() - intval($aUser['last_reset']) ) < (2 * 3600) ) {\n                    // Tell the user that their password cannot be reset more than once per hour\n                    $oMsgBox->error($MESSAGE['FORGOT_PASS_ALREADY_RESET']);\n                } else {\n                    // current password\n                    $sCurrentPw = $aUser['password'];\n\n                    // generate new password\n                    $sNewPasswordRaw = $oAccounts->GenerateRandomPassword();\n                    $sNewPasswordEnc = $oAccounts->doPasswordEncode($sNewPasswordRaw);\n\n                    // prepare E-Mail with login details to send to the user via email\n                    $aTokenReplace = array(\n                        'LOGIN_DISPLAY_NAME'  => $aUser['display_name'],\n                        'LOGIN_NAME'          => $aUser['username'],\n                        'LOGIN_WEBSITE_TITLE' => WEBSITE_TITLE,\n                        'LOGIN_PASSWORD'      => $sNewPasswordRaw,\n                        'LOGIN_URL'           => ACCOUNT_URL . '/login.php'\n                    );\n\n                    $sOnScreenSwitch    = 'forgot_login_details_sent';\n                    $sEmailTemplateName = 'password_recovery_mail';\n                    $sEmailSubject      = '';\n                    $sMailTo            = $sEmail;\n\n                    $checkSend = $oAccounts->sendEmail($sMailTo, $aTokenReplace, $sEmailTemplateName, $sEmailSubject);\n                    if ($checkSend === true) {\n                        // update the new password in the database\n                        $aUpdateUser = array(\n                            'user_id'    => $iUserID,\n                            'password'   => $sNewPasswordEnc,\n                            'last_reset' => time(),\n                        );\n\n                        if($database->updateRow('{TP}users', 'user_id', $aUpdateUser)){\n                            header(\"Location: \".ACCOUNT_URL.\"/signup_continue_page.php?lc=\".$sLC.\"&switch=\".$sOnScreenSwitch.\"&email=\".$sMailTo);\n                            exit(0);\n                        } else {\n                            // Error updating database\n                            $oMsgBox->error($MESSAGE['RECORD_MODIFIED_FAILED']);\n                            if(WB_DEBUG) {\n                                $oMsgBox->error($database->get_error().'<br />'.$sSql);\n                            }\n                        }\n\n                    } else {\n                        // tell user: WRONG INPUTS\n                        $aUpdateUser = array(\n                            'user_id'    => $aUser['user_id'],\n                            'password'   => $sCurrentPw\n                        );\n                        $database->updateRow('{TP}users', 'user_id', $aUpdateUser);\n                        header(\"Location: \".ACCOUNT_URL.\"/signup_continue_page.php?lc=\".$sLC.\"&switch=wrong_inputs&from=resend_forgot_pass&mail_err=\".$checkSend);\n                        exit(0);\n                    }\n                }\n            } else { // no record found - Email doesn't exist, so tell the user\n                $oMsgBox->error($MESSAGE['FORGOT_PASS_EMAIL_NOT_FOUND']);\n            }\n        } else {\n            // Query failed\n            if(WB_DEBUG) {\n                $oMsgBox->error('SystemError:: Database query failed!');\n                $oMsgBox->error($database->get_error().'<br />'.$sSql);\n            }\n        }\n    }\n}\nif($oMsgBox->hasErrors() == false ) {\n    $oMsgBox->info($MESSAGE['FORGOT_PASS_NO_DATA'], 0, 1);\n}\n$email = $sEmail;\n$sHttpReferer = isset($_SESSION['HTTP_REFERER']) ? $_SESSION['HTTP_REFERER'] : $_SERVER['SCRIPT_NAME'];\n\n// Get the template file for forgot_login_details\n$aToTwig = array(\n    'EMAIL'         => $email,\n    'MESSAGE_BOX'   => $oMsgBox->fetchDisplay(),\n);\n$oAccounts->useTwigTemplate('form_forgot.twig', $aToTwig);\n", "{{ insertCssFile( CURRENT_DIR ~ '/forms.css') }}\n{{ MESSAGE_BOX }}\n<h2>{{ L_('MENU:FORGOT') }}</h2>\n<br />\n\n<form  class=\"login-box\" name=\"forgot_pass\" action=\"{{ constant(\"FORGOT_URL\") }}\" method=\"post\">\n    <div class=\"cpForm\">\n        <div class=\"formRow\">\n            <label class=\"settingName\" for=\"display_name\">{{ L_('TEXT:EMAIL') }}</label>\n            <div class=\"settingValue\">\n                <input type=\"text\" maxlength=\"255\" name=\"email\" id=\"email\" value=\"{{ EMAIL }}\" />\n            </div>\n        </div>\n\n        <div class=\"buttonsRow\">\n            <button type=\"submit\" name=\"submit\" class=\"button pos-right\">{{ L_('TEXT:SEND_DETAILS') }}</button>\n        </div>\t\t\n    </div>\t\t\n</form>\n<script type=\"text/javascript\">\n\tvar ref = document.getElementById(\"email\");\n\tif (ref) ref.focus();\n</script>\n<p><a href=\"{{ constant(\"LOGIN_URL\") }}\">{{ L_('TEXT:NEED_TO_LOGIN') }}</a></p>\n\n\n", "@font-face {\n    font-family: 'Noto';\n    src: url('../fonts/NotoSans-Regular-webfont.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Noto';\n    src: url('../fonts/NotoSans-Bold-webfont.woff') format('woff');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Noto';\n    src: url('../fonts/NotoSans-Italic-webfont.woff') format('woff');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Noto';\n    src: url('../fonts/NotoSans-BoldItalic-webfont.woff') format('woff');\n    font-weight: bold;\n    font-style: italic;\n}\n\nhtml {\n    overflow: -moz-scrollbars-vertical;\n    /* Force firefox to always show room for a vertical scrollbar */\n}\n\nbody {\n    font-family: Noto, Arial, Helvetica, sans-serif;\n    font-size: 14px;\n    color: #333;\n    background: url(../images/background.png) #f3f3f3 0 0 repeat-x;\n    margin: 0;\n}\n\n#container {\n    margin: 0 auto;\n    max-width: 500px;\n}\n\nh1 {\n    font-size: 22px;\n    font-weight: bold;\n    color: #f9f9f9;\n    text-transform: uppercase;\n    height: 84px;\n    padding-top: 25px !important;\n}\n\n.content-box {\n    border: 1px solid #999;\n    background-color: #fdfdfd;\n    margin-top: 50px;\n}\n\n.label {\n    text-align: right;\n    padding-top: 7px;\n}\n\nspan {\n    display: inline-block;\n    padding-top: 7px;\n    padding-right: 3px;\n}\n\ninput {\n    border: 1px solid #999;\n    background-color: #eee;\n    height: 28px;\n    width: 150px;\n    padding: 4px;\n    margin-bottom: 10px;\n}\n\ninput:hover {\n    border: 1px solid #647086;\n}\n\nbutton {\n    border: 1px solid #999;\n    background-color: #647086;\n    color: #fff;\n    /*height: 28px;*/\n    width: 150px;\n    padding: 5px;\n    text-transform: uppercase;\n    margin-bottom: 15px;\n}\n\nbutton:hover {\n    opacity: 0.85;\n}\n\nhr {\n    height: 1px;\n    border: none;\n    border-bottom: 1px dotted #999;\n\n}\n\na {\n    color: #28609b;\n    text-decoration: none;\n    font-family: Noto, Arial, Helvetica, sans-serif;\n    /* Chromium */\n    font-size: 12px;\n}\n\na:hover {\n    text-decoration: underline;\n}\n\n.center {\n    text-align: center;\n}\n\n@media screen and (max-width: 36.5em) {\n    .label {\n        text-align: left;\n        padding-top: 0;\n    }\n}", "<?php\n/**\n * WBCE CMS\n * Way Better Content Editing.\n * Visit https://wbce.org to learn more and to join the community.\n *\n * @copyright Ryan Djurovich (2004-2009)\n * @copyright WebsiteBaker Org. e.V. (2009-2015)\n * @copyright WBCE Project (2015-)\n * @license GNU GPL2 (or any later version)\n */\n\n// OBLIGATORY WBCE VARIABLES\n$template_directory = 'argos_theme_reloaded';\n$template_name = 'Argos Theme Reloaded';\n$template_function = 'theme';\n$template_version = '2.1.3';\n$template_platform = '1.4.0';\n$template_author = 'Bernd Michna (BerndJM / WWnW) based on the work by Jurgen Nijhuis (Argos Media) & Ruud Eisinga';\n$template_license = '<a href=\"http://www.wtfpl.net/\">WTFPL</a>';\n$template_license_terms = '-';\n$template_description = 'Enhanced backend theme for WBCE 1.x';", "<!-- BEGIN mainBlock -->\n<!doctype html>\n<html lang=\"de\">\n<head>\n\t<title>{TEXT_LOGIN}</title>\n\t<meta charset=\"{CHARSET}\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n    <link href=\"{THEME_URL}/css/normalize.css\" rel=\"stylesheet\" type=\"text/css\">\n    <link href=\"{THEME_URL}/css/fitgrid.css\" rel=\"stylesheet\" type=\"text/css\">\n\t<link href=\"{THEME_URL}/css/login.css\" rel=\"stylesheet\" type=\"text/css\">\n</head>\n\n<body onload=\"document.forgot_pass.email.focus();\">\n\n\t<div id=\"container\">\n\t\t<header class=\"fg-center\">\n\t\t\t<div class=\"fg-row\">\n\t\t\t\t<h1 class=\"fg12 center\">{SECTION_FORGOT}</h1>\n\t\t\t</div>\n\t\t</header>\n\n\t\t<section class=\"fg-center\">\n\t\t\t<div class=\"fg-row\">\n\t\t\t\t<div class=\"fg12 content-box\">\n\t\t\t\t\t<form name=\"login\" class=\"login\" action=\"{ACTION_URL}\" method=\"post\" autocomplete=\"off\">\n\t\t\t\t\t\t<input type=\"hidden\" name=\"url\" value=\"{URL}\">\n\n\t\t\t\t\t\t<div class=\"fg12 center\">\n\t\t\t\t\t\t\t<p>{MESSAGE}:</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<hr class=\"fg12\" style=\"margin-bottom: 15px;\">\n\n\t\t\t\t\t\t<div class=\"fg12 center\">\n\t\t\t\t\t\t\t<span>{TEXT_EMAIL}:</span>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"email\" value=\"{EMAIL}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"fg12 center\">\n\t\t\t\t\t\t\t<button type=\"submit\" name=\"submit\" style=\"width:200px;\">{TEXT_SEND_DETAILS}</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\n\t\t\t\t\t<hr class=\"fg12\">\n\n\t\t\t\t\t<div class=\"fg12 center\">\n\t\t\t\t\t\t<p><a href=\"{LOGIN_URL}\">\n\t\t\t\t\t\t\t{TEXT_NEED_TO_LOGIN}\n\t\t\t\t\t\t</a></p>\n\n\t\t\t\t\t\t<p><a href=\"{WB_URL}/\">\n\t\t\t\t\t\t\t{TEXT_HOME}\n\t\t\t\t\t\t</a></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n\n</body>\n</html>\n<!-- END mainBlock -->\n", "@import url('font/opensans.css');\n\n*,\n*:before,\n*:after {\n    box-sizing: inherit;\n    font-family: open_sans, sans-serif !important;\n}\n\nhtml {\n    font-size: 16px;\n    height: 100%;\n    color: #f3f3f3;\n}\n\nbody {\n    height: 100%;\n    box-sizing: border-box;\n    background-color: #647087;\n}\n\na {\n    text-decoration: underline;\n    color: #f3f3f3;\n}\n\na:hover {\n    text-decoration: none;\n}\n\n.page_login_header {\n    height: 216px;\n    background-color: #323741;\n}\n\n.page_login_logo {\n    position: absolute;\n    right: 70px;\n    top: 90px;\n    height: 180px;\n    padding-right: 170px;\n    padding-top: 70px;\n    text-align: right;\n    font-size: 48px;\n    background: url(\"../images/logo.png\") no-repeat right top;\n}\n\n.page_login_slogan {\n    position: absolute;\n    right: 240px;\n    top: 220px;\n    font-size: 20px;\n    text-align: right;\n    font-weight: bold;\n    color: #323741;\n}\n\n.page_login_form {\n    margin: 180px auto 0;\n    max-width: 500px;\n    text-align: center;\n    padding: 16px;\n}\n\n.page_login_fieldelement {\n    display: inline-block;\n    width: 100%;\n}\n\n.page_login input {\n    width: 100%;\n    padding: 8px 5px;\n    margin-top: 3px;\n    text-align: center;\n}\n\n.page_login input[type='submit'] {\n    display: inline-block;\n    max-width: 300px;\n    border: none;\n    color: #f3f3f3;\n    background-color: #25588f;\n}\n\n.page_login input[type=\"submit\"]:hover {\n    background-color: #225183;\n}\n\n.page_login_link {\n    font-size: 13px;\n}\n\n.login_license {\n    font-size: 11px;\n}\n\n@media (max-width: 550px) {\n    .page_login_logo {\n        background: none;\n        padding-right: 0;\n        right: 10px;\n    }\n\n    .page_login_slogan {\n        position: relative;\n        right: auto;\n        text-align: center;\n    }\n\n    .page_login_form {\n        margin: 90px auto 0;\n    }\n}\n\n@media (max-width: 550px) and (max-height: 650px) {\n    .page_login_header {\n        height: 150px;\n    }\n\n    .page_login_logo {\n        top: 30px;\n    }\n\n    .page_login_slogan {\n        top: 150px;\n    }\n}", "<?php\n/**\n * WBCE CMS\n * Way Better Content Editing.\n * Visit https://wbce.org to learn more and to join the community.\n *\n * @copyright Ryan Djurovich (2004-2009)\n * @copyright WebsiteBaker Org. e.V. (2009-2015)\n * @copyright WBCE Project (2015-)\n * @license GNU GPL2 (or any later version)\n */\n\n// OBLIGATORY WBCE VARIABLES\n$template_directory = 'wbce_flat_theme';\n$template_name = 'WBCE Flat Theme';\n$template_function = 'theme';\n$template_version = '1.7.5';\n$template_platform = '1.4';\n$template_author = 'Colinax based on the work by Yetiie, BerndJM and rjgamer';\n$template_license = 'GNU General Public License';\n$template_license_terms = '-';\n$template_description = 'Flat theme for WBCE 1.x';\n", "<!-- BEGIN main_block -->\n\n<!DOCTYPE html>\n<html lang=\"{LANGUAGE}\">\n<head>\n<title>{SECTION_FORGOT}</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<meta http-equiv=\"content-type\" content=\"text/html; charset={CHARSET}\" />\n<meta http-equiv=\"content-language\" content=\"{LANGUAGE}\" />\n<meta name=\"description\" content=\"{TEXT_FORGOT}\" />\n<meta name=\"keywords\" content=\"{TEXT_FORGOT}\" />\n<link rel=\"stylesheet\" href=\"{THEME_URL}/css/normalize.css\" />\n<link rel=\"stylesheet\" href=\"{THEME_URL}/css/login.css\" />\n<script type=\"text/javascript\" src=\"{WB_URL}/include/jquery/jquery-min.js\"></script>\n</head>\n<body class=\"page_login\" onload=\"document.forgot_pass.email.focus();\">\n\n<div class=\"page_login_header\">\n    <div class=\"page_login_logo\">WBCE CMS</div>\n    <div class=\"page_login_slogan\">Way Better Content Editing.</div>\n</div>\n\n<!-- BEGIN forgot_pass -->\n<div class=\"page_login_form\" class=\"forgot-page\">\n    <p>{SECTION_FORGOT}</p>\n    <p>{MESSAGE}</p>\n    <form name=\"forgot_pass\" action=\"{ACTION_URL}\" method=\"post\">\n        <div class=\"page_login-fields\">\n            <span class=\"page_login_fieldelement\"><input placeholder=\"E-Mail\" type=\"text\" maxlength=\"255\" name=\"email\" value=\"{EMAIL}\" /></span>\n            <br/>\n            <p><input type=\"submit\" name=\"submit\" value=\"{TEXT_SEND_DETAILS}\" /></p>\n            <p><a class=\"page_login_link\" href=\"{LOGIN_URL}\">{TEXT_NEED_TO_LOGIN}</a></p>\n        </div>\n    </form>\n    <p class=\"login_license\"><!-- Please note: the below reference to the GNU GPL should not be removed, as it provides a link for users to read about warranty, etc. --><a href=\"http://www.wbce.org/\" title=\"Visit wbce.org\">WBCE</a> is released under the <a href=\"http://www.gnu.org/licenses/gpl.html\" title=\"GNU General Public License\">GNU General Public License</a></p>\n</div>\n<!-- ENDE forgot_pass -->\n\n</body>\n</html>\n\n<!-- END main_block -->\n"], "fixing_code": ["<?php\n/**\n * WBCE CMS\n * Way Better Content Editing.\n * Visit https://wbce.org to learn more and to join the community.\n *\n * @copyright Ryan Djurovich (2004-2009)\n * @copyright WebsiteBaker Org. e.V. (2009-2015)\n * @copyright WBCE Project (2015-)\n * @license GNU GPL2 (or any later version)\n */\n\n// Include the configuration file\nrequire realpath('../../../config.php');\n// Include the language file\nrequire WB_PATH . '/languages/' . DEFAULT_LANGUAGE . '.php';\n// Include the database class file and initiate an object\nrequire WB_PATH . '/framework/class.admin.php';\n$admin = new admin('Start', 'start', false, false);\nrequire_once(WB_PATH.'/include/captcha/captcha.php');\n\n$oMsgBox = new MessageBox();\n$oMsgBox->closeBtn = '';\n\n// Check if the user has already submitted the form, otherwise show it\nif (isset($_POST['email']) && $_POST['email'] != \"\" ) {\n    $email = strip_tags($wb->get_post('email'));\n    if(isset($_POST['captcha']) AND $_POST['captcha'] != ''){\n        $ccheck = time(); $ccheck1 = time();\n        if(isset($_SESSION['captchaloginforgot'])) $ccheck1 = $_SESSION['captchaloginforgot'];\n        if(isset($_SESSION['captcha'])) $ccheck = $_SESSION['captcha'];\n        if($_POST['captcha'] != $ccheck && $_POST['captcha'] != $ccheck1) {\n            $oMsgBox->error($MESSAGE['MOD_FORM_INCORRECT_CAPTCHA']);\n            $email = '';\n        }\n    } else {\n        $oMsgBox->error($MESSAGE['MOD_FORM_INCORRECT_CAPTCHA']);\n        $email = '';\n    }\n    \n   \n    \n    if ($email != '') {\n         \n            if ($admin->validate_email($email) == false) {\n                $oMsgBox->error($MESSAGE['USERS_INVALID_EMAIL']);\n            }\n        \n        // Check if the email exists in the database\n        $sSql = \"SELECT * FROM `{TP}users` WHERE `email`='\".$database->escapeString($email).\"'\";\n        $rRow = $database->query($sSql);\n        if ($rRow->numRows() > 0) {\n\n            // Get the id, username, email, and last_reset from the above db query\n            $aUser = $rRow->fetchRow();\n            if (strlen($aUser['signup_confirmcode']) > 25) {\n                header(\"Location: \" . WB_URL . \"/account/signup_continue_page.php?switch=wrong_inputs\");\n                exit(0); // break up the script here\n            }\n\n\n            // Check if the password has been reset in the last 2 hours\n            if ((time() - intval($aUser['last_reset'])) < (2 * 3600)) {\n                // Tell the user that their password cannot be reset more than once per hour\n                $oMsgBox->error($MESSAGE['FORGOT_PASS_ALREADY_RESET']);\n            } else {\n                $sCurrentPw = $aUser['password'];\n\n                // Generate a random password then update the database with it\n                $sNewPw = '';\n                $salt = \"abchefghjkmnpqrstuvwxyz0123456789\";\n                srand((double)microtime() * 1000000);\n                $i = 0;\n                while ($i <= 7) {\n                    $num = rand() % 33;\n                    $tmp = substr($salt, $num, 1);\n                    $sNewPw = $sNewPw . $tmp;\n                    $i++;\n                }\n\n                // update the new password in the database\n                $aUpdateUser = array(\n                    'user_id' => $aUser['user_id'],\n                    'password' => $wb->doPasswordEncode($sNewPw),\n                    'last_reset' => time(),\n                );\n                $database->updateRow('{TP}users', 'user_id', $aUpdateUser);\n\n                if ($database->is_error()) {\n                    // Error updating database\n                    $oMsgBox->error($database->get_error());\n                } else {\n                    // Setup email to send\n                    $mail_to = $email;\n                    $mail_subject = $MESSAGE['SIGNUP2_SUBJECT_LOGIN_INFO'];\n\n                    // Replace placeholders from language variable with values\n                    $search = array('{LOGIN_DISPLAY_NAME}', '{LOGIN_WEBSITE_TITLE}', '{LOGIN_NAME}', '{LOGIN_PASSWORD}');\n                    $replace = array($aUser['display_name'], WEBSITE_TITLE, $aUser['username'], $sNewPw);\n\n                    $aTokenReplace = array(\n                        '{LOGIN_DISPLAY_NAME}' => $aUser['display_name'],\n                        '{LOGIN_NAME}' => $aUser['username'],\n                        '{LOGIN_WEBSITE_TITLE}' => WEBSITE_TITLE,\n                        '{LOGIN_PASSWORD}' => $sNewPw\n                    );\n\n\n                    $mail_message = strtr($MESSAGE['SIGNUP2_BODY_LOGIN_FORGOT'], $aTokenReplace);\n\n                    // Try sending the email\n                    if ($admin->mail(SERVER_EMAIL, $mail_to, $mail_subject, $mail_message)) {\n                        $oMsgBox->error($MESSAGE['FORGOT_PASS_PASSWORD_RESET']);\n                        $display_form = false;\n                    } else {\n                        $aUpdateUser = array(\n                            'user_id' => $aUser['user_id'],\n                            'password' => $sCurrentPw\n                        );\n                        $database->updateRow('{TP}users', 'user_id', $aUpdateUser);\n                        $oMsgBox->error($MESSAGE['FORGOT_PASS_CANNOT_EMAIL']);\n                    }\n                }\n            }\n        } else {\n            // Email doesn't exist, so tell the user\n            $oMsgBox->error($MESSAGE['FORGOT_PASS_EMAIL_NOT_FOUND']);\n            // and delete the wrong Email\n            $email = '';\n        }\n    }\n} else {\n    $email = '';\n}\n\nif ($oMsgBox->hasErrors() == false) {\n    $oMsgBox->info($MESSAGE['FORGOT_PASS_NO_DATA'], 0, 1);\n}\n\n// Create new phpLib Template object\n$template = new Template(dirname($admin->correct_theme_source('login_forgot.htt')));\n$template->set_file('page', 'login_forgot.htt');\n$template->set_block('page', 'main_block', 'main');\n\nob_start();\ncall_captcha(\"all\",\"\",'loginforgot');\n$captcha = ob_get_contents();\nob_end_clean();\n\n\n\n$aTemplateVars = array(\n    'SECTION_FORGOT' => $MENU['FORGOT'],\n    'MESSAGE_COLOR' => '', //$message_color,\n    'MESSAGE' => $oMsgBox->fetchDisplay(),\n    'WB_URL' => WB_URL,\n    'ADMIN_URL' => ADMIN_URL,\n    'THEME_URL' => THEME_URL,\n    'LANGUAGE' => strtolower(LANGUAGE),\n    'TEXT_EMAIL' => $TEXT['EMAIL'],\n    'TEXT_SEND_DETAILS' => $TEXT['SEND_DETAILS'],\n    'TEXT_HOME' => $TEXT['HOME'],\n    'TEXT_NEED_TO_LOGIN' => $TEXT['NEED_TO_LOGIN'],\n    'EMAIL' => $email,\n    'DISPLAY_FORM' => isset($display_form) ? 'display:none;' : '',\n    'ACTION_URL' => defined('FRONTEND') ? 'forgot.php' : 'index.php',\n    'LOGIN_URL' => defined('FRONTEND') ? WB_URL . '/account/login.php' : ADMIN_URL,\n    'INTERFACE_URL' => ADMIN_URL . '/interface',\n    'DEFAULT_CHARSET' => defined('DEFAULT_CHARSET') ? DEFAULT_CHARSET : 'utf-8',\n    'CHARSET' => isset($charset) ? $charset : 'utf-8',\n    'CAPTCHA' => $captcha\n);\n$template->set_var($aTemplateVars);\n\n$template->parse('main', 'main_block', false);\n$template->pparse('output', 'page');\n", "<?php\n/**\n * WebsiteBaker Community Edition (WBCE)\n * Way Better Content Editing.\n * Visit http://wbce.org to learn more and to join the community.\n *\n * @copyright Ryan Djurovich (2004-2009)\n * @copyright WebsiteBaker Org. e.V. (2009-2015)\n * @copyright WBCE Project (since 2015)\n * @license GNU GPL2 (or any later version)\n */\n\ndefined('WB_PATH') or die(\"Cannot access this file directly\");\nrequire_once(WB_PATH.'/include/captcha/captcha.php');\n\n$oAccounts = new Accounts();\n$oMsgBox   = new MessageBox();\n\n$sLC       = defined('LANGUAGE') ? LANGUAGE : (defined('DEFAULT_LANGUAGE') ? DEFAULT_LANGUAGE : 'EN');\n$sEmail    = '';\n\nif(isset($_POST['email']) && $_POST['email'] != \"\" ) {\n    $sEmail = strip_tags($oAccounts->get_post('email'));\n    \n    if(isset($_POST['captcha']) AND $_POST['captcha'] != ''){\n        $ccheck = time(); $ccheck1 = time();\n        if(isset($_SESSION['captchaaccountforgot'])) $ccheck1 = $_SESSION['captchaaccountforgot'];\n        if(isset($_SESSION['captcha'])) $ccheck = $_SESSION['captcha'];\n        if($_POST['captcha'] != $ccheck && $_POST['captcha'] != $ccheck1) {\n            $oMsgBox->error($MESSAGE['MOD_FORM_INCORRECT_CAPTCHA']);\n            $sEmail = '';\n        }\n    } else {\n        $oMsgBox->error($MESSAGE['MOD_FORM_INCORRECT_CAPTCHA']);\n        $sEmail = '';\n    }\n    \n    if ($sEmail != '') {\n    \n        if($admin->validate_email($sEmail) == false) {\n            $oMsgBox->error($MESSAGE['USERS_INVALID_EMAIL']);\n            $sEmail  = '';\n        } else {\n            // Check if the email exists in the database\n            $sSql = \"SELECT * FROM `{TP}users` WHERE `email`='\".$database->escapeString($sEmail).\"'\";\n\n            if(($rRow = $database->query($sSql))){\n                if($aUser = $rRow->fetchRow(MYSQLI_ASSOC)) {\n                    if(strlen($aUser['signup_confirmcode']) > 25){\n                        header(\"Location: \".ACCOUNT_URL.\"/signup_continue_page.php?switch=wrong_inputs\");\n                        exit(0); // break up the script here\n                    }\n                    $iUserID = (int) $aUser['user_id'];\n                    // Get the id, username, email, and last_reset from the above db query\n\n                    // Check if the password has been reset in the last 2 hours\n                    if( ( time() - intval($aUser['last_reset']) ) < (2 * 3600) ) {\n                        // Tell the user that their password cannot be reset more than once per hour\n                        $oMsgBox->error($MESSAGE['FORGOT_PASS_ALREADY_RESET']);\n                    } else {\n                        // current password\n                        $sCurrentPw = $aUser['password'];\n\n                        // generate new password\n                        $sNewPasswordRaw = $oAccounts->GenerateRandomPassword();\n                        $sNewPasswordEnc = $oAccounts->doPasswordEncode($sNewPasswordRaw);\n\n                        // prepare E-Mail with login details to send to the user via email\n                        $aTokenReplace = array(\n                            'LOGIN_DISPLAY_NAME'  => $aUser['display_name'],\n                            'LOGIN_NAME'          => $aUser['username'],\n                            'LOGIN_WEBSITE_TITLE' => WEBSITE_TITLE,\n                            'LOGIN_PASSWORD'      => $sNewPasswordRaw,\n                            'LOGIN_URL'           => ACCOUNT_URL . '/login.php'\n                        );\n\n                        $sOnScreenSwitch    = 'forgot_login_details_sent';\n                        $sEmailTemplateName = 'password_recovery_mail';\n                        $sEmailSubject      = '';\n                        $sMailTo            = $sEmail;\n\n                        $checkSend = $oAccounts->sendEmail($sMailTo, $aTokenReplace, $sEmailTemplateName, $sEmailSubject);\n                        if ($checkSend === true) {\n                            // update the new password in the database\n                            $aUpdateUser = array(\n                                'user_id'    => $iUserID,\n                                'password'   => $sNewPasswordEnc,\n                                'last_reset' => time(),\n                            );\n\n                            if($database->updateRow('{TP}users', 'user_id', $aUpdateUser)){\n                                header(\"Location: \".ACCOUNT_URL.\"/signup_continue_page.php?lc=\".$sLC.\"&switch=\".$sOnScreenSwitch.\"&email=\".$sMailTo);\n                                exit(0);\n                            } else {\n                                // Error updating database\n                                $oMsgBox->error($MESSAGE['RECORD_MODIFIED_FAILED']);\n                                if(WB_DEBUG) {\n                                    $oMsgBox->error($database->get_error().'<br />'.$sSql);\n                                }\n                            }\n\n                        } else {\n                            // tell user: WRONG INPUTS\n                            $aUpdateUser = array(\n                                'user_id'    => $aUser['user_id'],\n                                'password'   => $sCurrentPw\n                            );\n                            $database->updateRow('{TP}users', 'user_id', $aUpdateUser);\n                            header(\"Location: \".ACCOUNT_URL.\"/signup_continue_page.php?lc=\".$sLC.\"&switch=wrong_inputs&from=resend_forgot_pass&mail_err=\".$checkSend);\n                            exit(0);\n                        }\n                    }\n                } else { // no record found - Email doesn't exist, so tell the user\n                    $oMsgBox->error($MESSAGE['FORGOT_PASS_EMAIL_NOT_FOUND']);\n                }\n            } else {\n                // Query failed\n                if(WB_DEBUG) {\n                    $oMsgBox->error('SystemError:: Database query failed!');\n                    $oMsgBox->error($database->get_error().'<br />'.$sSql);\n                }\n            }\n        }\n    }\n}\nif($oMsgBox->hasErrors() == false ) {\n    $oMsgBox->info($MESSAGE['FORGOT_PASS_NO_DATA'], 0, 1);\n}\n$email = $sEmail;\n$sHttpReferer = isset($_SESSION['HTTP_REFERER']) ? $_SESSION['HTTP_REFERER'] : $_SERVER['SCRIPT_NAME'];\nob_start();\ncall_captcha(\"all\",\"\",\"accountforgot\");\n$captcha = ob_get_contents();\nob_end_clean();\n\n// Get the template file for forgot_login_details\n$aToTwig = array(\n    'EMAIL'         => $email,\n    'CAPTCHA'       => $captcha,\n    'MESSAGE_BOX'   => $oMsgBox->fetchDisplay(),\n);\n$oAccounts->useTwigTemplate('form_forgot.twig', $aToTwig);\n", "{{ insertCssFile( CURRENT_DIR ~ '/forms.css') }}\n\n<p>{{ L_('MENU:FORGOT') }}</p>\n{{ MESSAGE_BOX }}\n\n<form  class=\"login-box\" name=\"forgot_pass\" action=\"{{ constant(\"FORGOT_URL\") }}\" method=\"post\">\n    <div class=\"cpForm\">\n        <div class=\"formRow\">\n            <label class=\"settingName\" for=\"display_name\">{{ L_('TEXT:EMAIL') }}</label>\n            <div class=\"settingValue\">\n                <input type=\"text\" maxlength=\"255\" name=\"email\" id=\"email\" value=\"{{ EMAIL }}\" />\n            </div>\n        </div>\n\t\t<div class=\"formRow\">\n\t\t{{CAPTCHA}}\n\t\t</div>\n        <div class=\"buttonsRow\">\n            <button type=\"submit\" name=\"submit\" class=\"button pos-right\">{{ L_('TEXT:SEND_DETAILS') }}</button>\n        </div>\t\t\n    </div>\t\t\n</form>\n<script type=\"text/javascript\">\n\tvar ref = document.getElementById(\"email\");\n\tif (ref) ref.focus();\n</script>\n<p><a href=\"{{ constant(\"LOGIN_URL\") }}\">{{ L_('TEXT:NEED_TO_LOGIN') }}</a></p>\n\n\n", "@font-face {\n    font-family: 'Noto';\n    src: url('../fonts/NotoSans-Regular-webfont.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Noto';\n    src: url('../fonts/NotoSans-Bold-webfont.woff') format('woff');\n    font-weight: bold;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Noto';\n    src: url('../fonts/NotoSans-Italic-webfont.woff') format('woff');\n    font-weight: normal;\n    font-style: italic;\n}\n\n@font-face {\n    font-family: 'Noto';\n    src: url('../fonts/NotoSans-BoldItalic-webfont.woff') format('woff');\n    font-weight: bold;\n    font-style: italic;\n}\n\nhtml {\n    overflow: -moz-scrollbars-vertical;\n    /* Force firefox to always show room for a vertical scrollbar */\n}\n\nbody {\n    font-family: Noto, Arial, Helvetica, sans-serif;\n    font-size: 14px;\n    color: #333;\n    background: url(../images/background.png) #f3f3f3 0 0 repeat-x;\n    margin: 0;\n}\n\n#container {\n    margin: 0 auto;\n    max-width: 500px;\n}\n\nh1 {\n    font-size: 22px;\n    font-weight: bold;\n    color: #f9f9f9;\n    text-transform: uppercase;\n    height: 84px;\n    padding-top: 25px !important;\n}\n\n.content-box {\n    border: 1px solid #999;\n    background-color: #fdfdfd;\n    margin-top: 50px;\n}\n\n.label {\n    text-align: right;\n    padding-top: 7px;\n}\n\nspan {\n    display: inline-block;\n    padding-top: 7px;\n    padding-right: 3px;\n}\n\ninput {\n    border: 1px solid #999;\n    background-color: #eee;\n    height: 28px;\n    width: 150px;\n    padding: 4px;\n    margin-bottom: 10px;\n}\n\ninput:hover {\n    border: 1px solid #647086;\n}\n\nbutton {\n    border: 1px solid #999;\n    background-color: #647086;\n    color: #fff;\n    /*height: 28px;*/\n    width: 150px;\n    padding: 5px;\n    text-transform: uppercase;\n    margin-bottom: 15px;\n}\n\nbutton:hover {\n    opacity: 0.85;\n}\n\nhr {\n    height: 1px;\n    border: none;\n    border-bottom: 1px dotted #999;\n\n}\n\na {\n    color: #28609b;\n    text-decoration: none;\n    font-family: Noto, Arial, Helvetica, sans-serif;\n    /* Chromium */\n    font-size: 12px;\n}\n\na:hover {\n    text-decoration: underline;\n}\n\n.center {\n    text-align: center;\n}\n\n.captcha_table {\n\tdisplay:inline-block;\n\tmargin:auto;\n}\n\n.error {\n\tcolor:firebrick;\n}\n\n@media screen and (max-width: 36.5em) {\n    .label {\n        text-align: left;\n        padding-top: 0;\n    }\n}", "<?php\n/**\n * WBCE CMS\n * Way Better Content Editing.\n * Visit https://wbce.org to learn more and to join the community.\n *\n * @copyright Ryan Djurovich (2004-2009)\n * @copyright WebsiteBaker Org. e.V. (2009-2015)\n * @copyright WBCE Project (2015-)\n * @license GNU GPL2 (or any later version)\n */\n\n// OBLIGATORY WBCE VARIABLES\n$template_directory = 'argos_theme_reloaded';\n$template_name = 'Argos Theme Reloaded';\n$template_function = 'theme';\n$template_version = '2.1.4';\n$template_platform = '1.5.0';\n$template_author = 'Bernd Michna (BerndJM / WWnW) based on the work by Jurgen Nijhuis (Argos Media) & Ruud Eisinga';\n$template_license = '<a href=\"http://www.wtfpl.net/\">WTFPL</a>';\n$template_license_terms = '-';\n$template_description = 'Enhanced backend theme for WBCE 1.x';", "<!-- BEGIN mainBlock -->\n<!doctype html>\n<html lang=\"de\">\n<head>\n\t<title>{TEXT_LOGIN}</title>\n\t<meta charset=\"{CHARSET}\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n    <link href=\"{THEME_URL}/css/normalize.css\" rel=\"stylesheet\" type=\"text/css\">\n    <link href=\"{THEME_URL}/css/fitgrid.css\" rel=\"stylesheet\" type=\"text/css\">\n\t<link href=\"{THEME_URL}/css/login.css\" rel=\"stylesheet\" type=\"text/css\">\n</head>\n\n<body onload=\"document.login.email.focus();\">\n\n\t<div id=\"container\">\n\t\t<header class=\"fg-center\">\n\t\t\t<div class=\"fg-row\">\n\t\t\t\t<h1 class=\"fg12 center\">{SECTION_FORGOT}</h1>\n\t\t\t</div>\n\t\t</header>\n\n\t\t<section class=\"fg-center\">\n\t\t\t<div class=\"fg-row\">\n\t\t\t\t<div class=\"fg12 content-box\">\n\t\t\t\t\t<form name=\"login\" class=\"login\" action=\"{ACTION_URL}\" method=\"post\" autocomplete=\"off\">\n\t\t\t\t\t\t<input type=\"hidden\" name=\"url\" value=\"{URL}\">\n\n\t\t\t\t\t\t<div class=\"fg12 center\">\n\t\t\t\t\t\t\t<div class=\"error\">{MESSAGE}</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<hr class=\"fg12\" style=\"margin-bottom: 15px;\">\n\n\t\t\t\t\t\t<div class=\"fg12 center\">\n\t\t\t\t\t\t\t<span>{TEXT_EMAIL}:</span>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"email\" value=\"{EMAIL}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"fg12 center\">\n\t\t\t\t\t\t\t{CAPTCHA}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"fg12 center\">\n\t\t\t\t\t\t\t<button type=\"submit\" name=\"submit\" style=\"width:200px;\">{TEXT_SEND_DETAILS}</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\n\t\t\t\t\t<hr class=\"fg12\">\n\n\t\t\t\t\t<div class=\"fg12 center\">\n\t\t\t\t\t\t<p><a href=\"{LOGIN_URL}\">\n\t\t\t\t\t\t\t{TEXT_NEED_TO_LOGIN}\n\t\t\t\t\t\t</a></p>\n\n\t\t\t\t\t\t<p><a href=\"{WB_URL}/\">\n\t\t\t\t\t\t\t{TEXT_HOME}\n\t\t\t\t\t\t</a></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n\n</body>\n</html>\n<!-- END mainBlock -->\n", "@import url('font/opensans.css');\n\n*,\n*:before,\n*:after {\n    box-sizing: inherit;\n    font-family: open_sans, sans-serif !important;\n}\n\nhtml {\n    font-size: 16px;\n    height: 100%;\n    color: #f3f3f3;\n}\n\nbody {\n    height: 100%;\n    box-sizing: border-box;\n    background-color: #647087;\n}\n\na {\n    text-decoration: underline;\n    color: #f3f3f3;\n}\n\na:hover {\n    text-decoration: none;\n}\n\n.page_login_header {\n    height: 216px;\n    background-color: #323741;\n}\n\n.page_login_logo {\n    position: absolute;\n    right: 70px;\n    top: 90px;\n    height: 180px;\n    padding-right: 170px;\n    padding-top: 70px;\n    text-align: right;\n    font-size: 48px;\n    background: url(\"../images/logo.png\") no-repeat right top;\n}\n\n.page_login_slogan {\n    position: absolute;\n    right: 240px;\n    top: 220px;\n    font-size: 20px;\n    text-align: right;\n    font-weight: bold;\n    color: #323741;\n}\n\n.page_login_form {\n    margin: 180px auto 0;\n    max-width: 500px;\n    text-align: center;\n    padding: 16px;\n}\n\n.page_login_fieldelement {\n    display: inline-block;\n    width: 100%;\n}\n\n.page_login input {\n    width: 100%;\n    padding: 8px 5px;\n    margin-top: 3px;\n    text-align: center;\n}\n\n.page_login input[type='submit'] {\n    display: inline-block;\n    max-width: 300px;\n    border: none;\n    color: #f3f3f3;\n    background-color: #25588f;\n}\n\n.page_login input[type=\"submit\"]:hover {\n    background-color: #225183;\n}\n\n.page_login_link {\n    display: block;\n    margin: 50px 0;\n}\n\n.login_license {\n    font-size: 11px;\n}\n\n.captcha_table {\n    display: inline-block;\n    margin: auto;\n}\n\n@media (max-width: 550px) {\n    .page_login_logo {\n        background: none;\n        padding-right: 0;\n        right: 10px;\n    }\n\n    .page_login_slogan {\n        position: relative;\n        right: auto;\n        text-align: center;\n    }\n\n    .page_login_form {\n        margin: 90px auto 0;\n    }\n}\n\n@media (max-width: 550px) and (max-height: 650px) {\n    .page_login_header {\n        height: 150px;\n    }\n\n    .page_login_logo {\n        top: 30px;\n    }\n\n    .page_login_slogan {\n        top: 150px;\n    }\n}", "<?php\n/**\n * WBCE CMS\n * Way Better Content Editing.\n * Visit https://wbce.org to learn more and to join the community.\n *\n * @copyright Ryan Djurovich (2004-2009)\n * @copyright WebsiteBaker Org. e.V. (2009-2015)\n * @copyright WBCE Project (2015-)\n * @license GNU GPL2 (or any later version)\n */\n\n// OBLIGATORY WBCE VARIABLES\n$template_directory = 'wbce_flat_theme';\n$template_name = 'WBCE Flat Theme';\n$template_function = 'theme';\n$template_version = '1.7.6';\n$template_platform = '1.5.0';\n$template_author = 'Colinax based on the work by Yetiie, BerndJM and rjgamer';\n$template_license = 'GNU General Public License';\n$template_license_terms = '-';\n$template_description = 'Flat theme for WBCE 1.x';\n", "<!-- BEGIN main_block -->\n\n<!DOCTYPE html>\n<html lang=\"{LANGUAGE}\">\n<head>\n<title>{SECTION_FORGOT}</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<meta http-equiv=\"content-type\" content=\"text/html; charset={CHARSET}\" />\n<meta http-equiv=\"content-language\" content=\"{LANGUAGE}\" />\n<meta name=\"description\" content=\"{TEXT_FORGOT}\" />\n<meta name=\"keywords\" content=\"{TEXT_FORGOT}\" />\n<link rel=\"stylesheet\" href=\"{THEME_URL}/css/normalize.css\" />\n<link rel=\"stylesheet\" href=\"{THEME_URL}/css/login.css\" />\n<script type=\"text/javascript\" src=\"{WB_URL}/include/jquery/jquery-min.js\"></script>\n</head>\n<body class=\"page_login\" onload=\"document.forgot_pass.email.focus();\">\n\n<div class=\"page_login_header\">\n    <div class=\"page_login_logo\">WBCE CMS</div>\n    <div class=\"page_login_slogan\">Way Better Content Editing.</div>\n</div>\n\n<!-- BEGIN forgot_pass -->\n<div class=\"page_login_form\" class=\"forgot-page\">\n    <p>{SECTION_FORGOT}</p>\n    <p>{MESSAGE}</p>\n    <form name=\"forgot_pass\" action=\"{ACTION_URL}\" method=\"post\">\n        <div class=\"page_login-fields\">\n            <span class=\"page_login_fieldelement\"><input placeholder=\"E-Mail\" type=\"text\" maxlength=\"255\" name=\"email\" value=\"{EMAIL}\" /></span>\n            <br/>\n            {CAPTCHA}\n            <p><input type=\"submit\" name=\"submit\" value=\"{TEXT_SEND_DETAILS}\" /></p>\n            <p><a class=\"page_login_link\" href=\"{LOGIN_URL}\">{TEXT_NEED_TO_LOGIN}</a></p>\n        </div>\n    </form>\n    <p class=\"login_license\"><!-- Please note: the below reference to the GNU GPL should not be removed, as it provides a link for users to read about warranty, etc. --><a href=\"http://www.wbce.org/\" title=\"Visit wbce.org\">WBCE</a> is released under the <a href=\"http://www.gnu.org/licenses/gpl.html\" title=\"GNU General Public License\">GNU General Public License</a></p>\n</div>\n<!-- ENDE forgot_pass -->\n\n</body>\n</html>\n\n<!-- END main_block -->\n"], "filenames": ["wbce/admin/login/forgot/index.php", "wbce/modules/tool_account_settings/account/form_forgot.php", "wbce/modules/tool_account_settings/templates/form_forgot.twig", "wbce/templates/argos_theme_reloaded/css/login.css", "wbce/templates/argos_theme_reloaded/info.php", "wbce/templates/argos_theme_reloaded/templates/login_forgot.htt", "wbce/templates/wbce_flat_theme/css/login.css", "wbce/templates/wbce_flat_theme/info.php", "wbce/templates/wbce_flat_theme/templates/login_forgot.htt"], "buggy_code_start_loc": [19, 13, 1, 123, 17, 14, 90, 17, 30], "buggy_code_end_loc": [145, 116, 15, 123, 19, 37, 94, 19, 30], "fixing_code_start_loc": [20, 14, 2, 124, 17, 14, 90, 17, 31], "fixing_code_end_loc": [172, 140, 17, 133, 19, 42, 101, 19, 32], "type": "CWE-89", "message": "wbce_cms is vulnerable to Improper Neutralization of Special Elements used in an SQL Command", "other": {"cve": {"id": "CVE-2021-3817", "sourceIdentifier": "security@huntr.dev", "published": "2021-12-09T11:15:09.507", "lastModified": "2022-01-04T16:08:52.470", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "wbce_cms is vulnerable to Improper Neutralization of Special Elements used in an SQL Command"}, {"lang": "es", "value": "wbce_cms es vulnerable a una Neutralizaci\u00f3n Inadecuada de Elementos Especiales usados en un Comando SQL"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:wbce:wbce_cms:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.5.2", "matchCriteriaId": "99AF3A6B-BFE5-4078-8B77-2218815B30CF"}]}]}], "references": [{"url": "http://packetstormsecurity.com/files/165377/WBCE-CMS-1.5.1-Admin-Password-Reset.html", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/wbce/wbce_cms/commit/6ca63f0cad5f0cd606fdb69a372f09b7d238f1d7", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/c330dc0d-220a-4b15-b785-5face4cf6ef7", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/wbce/wbce_cms/commit/6ca63f0cad5f0cd606fdb69a372f09b7d238f1d7"}}