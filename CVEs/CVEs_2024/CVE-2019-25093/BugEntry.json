{"buggy_code": ["<?php\nif(!defined(\"IN_MYBB\"))\n{\n    die(\"Direct access to this file is not allowed.\");\n}\n\n$plugins->add_hook(\"global_end\", \"recentthread_list_threads\");\n$plugins->add_hook(\"global_start\", \"recentthread_get_templates\");\n$plugins->add_hook(\"global_intermediate\", \"recentthread_global_intermediate\");\n$plugins->add_hook(\"xmlhttp\", \"recentthread_refresh_threads\");\n$plugins->add_hook(\"usercp_options_start\", \"recentthread_usercp_options_start\");\n$plugins->add_hook(\"usercp_do_options_start\", \"recentthread_usercp_do_options_end\");\n\nif(defined(\"IN_ADMINCP\"))\n{\n    // Due to the massive structural changes, no upgrade script from before version 16.\n    require_once \"update.php\";\n    $plugins->add_hook(\"admin_config_plugins_begin\", \"recentthread_update\");\n    $plugins->add_hook(\"admin_config_settings_begin\", \"recentthread_admin_config_settings_begin\");\n    $plugins->add_hook(\"admin_tools_adminlog_begin\", \"recentthread_admin_tools_adminlog_begin\");\n    $plugins->add_hook(\"admin_tools_get_admin_log_action\", \"recenttthread_admin_tools_get_admin_log_action\");\n    $plugins->add_hook(\"admin_style_templates\", \"recentthread_admin_style_templates\");\n}\n\nfunction recentthread_list_threads($return=false)\n{\n    global $mybb, $db, $templates, $recentthreadtable, $recentthreads, $settings, $canviewrecentthreads, $cache, $theme, $lang, $threadfields, $xthreadfields;\n    // First check permissions\n    if(!recentthread_can_view())\n    {\n        return false;\n    }\n    if($mybb->settings['recentthread_pages_shown'])\n    {\n        $allowed_pages = explode(\"\\n\", $mybb->settings['recentthread_pages_shown']);\n    }\n    else\n    {\n        $allowed_pages = array();\n    }\n    $allowed_pages = str_replace(array(\" \", \"\\n\", \"\\r\"), \"\", $allowed_pages);\n    $allowed_pages[] = \"xmlhttp.php\";\n    if(!in_array(THIS_SCRIPT, $allowed_pages))\n    {\n        return false;\n    }\n    $lang->load(\"recentthreads\");\n    $lang->load(\"forumdisplay\");\n    $icons = $cache->read(\"posticons\");\n    require_once MYBB_ROOT.\"inc/functions_search.php\";\n    $threadlimit = (int) $mybb->settings['recentthread_threadcount'];\n    if(!$threadlimit) // Provide a fallback\n    {\n        $threadlimit = 15;\n    }\n    $onlyusfids = array();\n    $onlycanview = array();\n    // Check group permissions if we can't view threads not started by us\n    $group_permissions = forum_permissions();\n    foreach($group_permissions as $fid => $forum_permissions)\n    {\n        if($forum_permissions['canonlyviewownthreads'] == 1)\n        {\n            $onlyusfids[] = $fid;\n        }\n        if ($forum_permissions['canview'] == 0)\n        {\n            $onlycanview[] = $fid;\n        }\n    }\n    $where = \"\";\n    if(!empty($onlyusfids))\n    {\n        $where .= \"AND ((t.fid IN(\".implode(',', $onlyusfids).\") AND t.uid='{$mybb->user['uid']}') OR t.fid NOT IN(\".implode(',', $onlyusfids).\"))\";\n    }\n    if (!empty($onlycanview))\n    {\n        $where .= \"AND (t.fid NOT IN(\".implode(',', $onlycanview).\"))\";\n    }\n    $approved = 0;\n\n    // Moderators can view unapproved threads\n    if($mybb->usergroup['canmodcp']==1) {\n        $approved = -1;\n    }\n    $unsearchableforums = get_unsearchable_forums();\n    $unviewableforums = get_unviewable_forums();\n    if($unsearchableforums && $unviewableforums)\n    {\n        $forumarray = explode(\",\", $unsearchableforums . \",\" . $unviewableforums);\n        $newarray = array_unique($forumarray);\n        $unsearchableforumssql = \" AND t.fid NOT IN(\" . implode(\",\", $newarray) . \") \";\n    }\n    // Take into account any ignored forums\n    if($mybb->settings['recentthread_forumskip'])\n    {\n        $ignoreforums = \" AND t.fid NOT IN(\" . $mybb->settings['recentthread_forumskip'] . \") \";\n    }\n    $forums = $cache->read(\"forums\");\n    $prefixes = $cache->read(\"threadprefixes\");\n\n    // Are we only using certain prefixes?\n    if($mybb->settings['recentthread_prefix_only'])\n    {\n        if(is_numeric($mybb->settings['recentthread_prefix_only']))\n        {\n            $prefixonly = \" AND t.prefix = \" . (int) $mybb->settings['recentthread_prefix_only'] . \" \";\n        }\n        else\n        {\n            $prefixlist = explode(\",\", $mybb->settings['recentthread_prefix_only']);\n            $newlist = array_map(\"intval\", $prefixlist); /* Use this to stop any funny business. */\n            $prefixonly = \" AND t.prefix IN(\" . implode(',', $newlist) . \") \";\n        }\n    }\n\n\n    // Take XThreads into account\n    if(function_exists(\"xthreads_get_threadfields\") && $mybb->settings['recentthread_xthreads'] == 1)\n    {\n        $quickquery = $db->query(\"SELECT t.tid as threadid, t.username, t.fid, tf.*\n                                    FROM \" . TABLE_PREFIX . \"threads t\n                                    LEFT JOIN \" . TABLE_PREFIX . \"threadfields_data tf ON(t.tid=tf.tid)\n                                    WHERE 1=1 $where $prefixonly AND t.visible > $approved $unsearchableforumssql $ignoreforums\n                                    ORDER BY t.lastpost DESC\n                                    LIMIT $threadlimit\");\n\n        while ($threadfields = $db->fetch_array($quickquery))\n        {\n            $threadfields_raw[$xthreadsfields['threadid']] = $xthreadsfields;\n            if ($threadfields['fid'] == $GLOBALS['fid'])\n            {\n                // use global cache if we're referring to current forum\n                $threadfield_cache =& $GLOBALS['threadfield_cache'];\n            }\n            if (!isset($threadfield_cache))\n            {\n                $threadfield_cache = xthreads_gettfcache((int)$threadfields['fid']);\n            }\n            if (!empty($threadfield_cache))\n            {\n                if (!isset($threadfields))\n                {\n                    $threadfields = array();\n                }\n                foreach ($threadfield_cache as $k => &$v)\n                {\n                    xthreads_get_xta_cache($v, $threadfields['threadid']);\n                    xthreads_sanitize_disp($threadfields[$k], $v, $threadfields['username'], true);\n                }\n                $threadfields_formatted[$threadfields['threadid']] = $threadfields;\n            }\n        }\n    }\n\n    // Get a thread read cache\n    $threadsread = array();\n    if($mybb->user['uid'] && $mybb->settings['threadreadcut'] > 0)\n    {\n        $query = $db->query(\"SELECT tr.*, t.closed\n                            FROM \" . TABLE_PREFIX . \"threadsread tr\n                            LEFT JOIN \" . TABLE_PREFIX . \"threads t ON(tr.tid=t.tid)\n                            WHERE tr.uid=\" . $mybb->user['uid'] . \" \" . $where . $prefixonly . \" AND t.visible > \" . $approved . $unsearchableforumssql . $ignoreforums .\n            \" ORDER BY t.lastpost DESC\n                            LIMIT $threadlimit\");\n        while($threadread = $db->fetch_array($query))\n        {\n            $threadsread[$threadread['tid']] = $threadread['dateline'];\n        }\n    }\n\n    $query = $db->query(\"\n\t\t\tSELECT t.*, u.username AS userusername, u.usergroup, u.displaygroup, u.avatar as threadavatar, u.avatardimensions as threaddimensions, lp.usergroup AS lastusergroup, lp.avatar as lastavatar, lp.avatardimensions as lastdimensions, lp.displaygroup as lastdisplaygroup, fr.dateline as forumlastread\n\t\t\tFROM \" . TABLE_PREFIX . \"threads t\n\t\t\tLEFT JOIN \" . TABLE_PREFIX . \"users u ON (u.uid=t.uid)\n\t\t\tLEFT JOIN \" . TABLE_PREFIX . \"users lp ON (t.lastposteruid=lp.uid)\n            LEFT JOIN \" . TABLE_PREFIX . \"forumsread fr ON (fr.fid = t.fid AND fr.uid = {$mybb->user['uid']})\n\t\t\tWHERE 1=1 $where $prefixonly AND t.visible > {$approved} {$unsearchableforumssql} {$ignoreforums}\n\t\t\tORDER BY t.lastpost DESC\n\t\t\tLIMIT $threadlimit\");\n\n    $listed_tids = array();\n    $forum_list = $cache->read(\"forums\");\n    while($thread = $db->fetch_array($query))\n    {\n        $parent = $forum_list[$thread['fid']]['parentlist'];\n        $recentthread_breadcrumbs = \"\";\n        if($mybb->settings['recentthread_use_breadcrumbs'])\n        {\n            if (strpos($parent, \",\"))\n            {\n                $parentlist = explode(\",\", $parent);\n                $separator = \"\";\n                foreach ($parentlist as $subforum)\n                {\n                    $recentthread_breadcrumbs .= $separator . \"<a href='\" . $mybb->settings['bburl'] . \"/forumdisplay.php?fid=\" . $subforum . \"'>\" . $forum_list[$subforum]['name'] . \"</a>\";\n                    $separator = $mybb->settings['recentthread_breadcrumb_separator'];\n                }\n            }\n            else\n            {\n                $recentthread_breadcrumbs = \"<a href=\\\"{$mybb->settings['bburl']}/forumdisplay.php?fid={$thread['fid']}\\\">{$thread['forum']}</a>\";\n            }\n        }\n        else\n        {\n            $recentthread_breadcrumbs = \"<a href=\\\"{$mybb->settings['bburl']}/forumdisplay.php?fid={$thread['fid']}\\\">{$thread['forum']}</a>\";\n        }\n        $folder = $folder_label = \"\";\n        $isnew = 0;\n        if(strpos($thread['closed'], \"moved|\") === 0)\n        {\n            $thread['tid'] = substr($thread['closed'], 6);\n            $folder = \"move\";\n        }\n        $tid = $thread['tid'];\n\n        // Figure out the read status and lock status\n        if($thread['sticky'] == 1)\n        {\n            $thread_type_class = \" forumdisplay_sticky\";\n        }\n        else\n        {\n            $thread_type_class = \" forumdisplay_regular\";\n        }\n\n        $lastread = 0;\n        if (array_key_exists($thread['tid'], $threadsread)) {\n            $lastread = $threadsread[$thread['tid']];\n        }\n        if (!is_null($thread['forumlastread']) && $thread['forumlastread'] > $lastread) {\n            $lastread = $thread['forumlastread'];\n        }\n        #global $header;\n        #if ($mybb->user['uid'] == 6) $header = ' - (' . $lastread . ', ' . $thread . ')' $header;\n        \n        if($thread['lastpost'] > $lastread)\n        {\n            $folder .= \"new\";\n            $folder_label .= $lang->icon_new;\n            $new_class = \"subject_new\";\n        }\n        else /*if(array_key_exists($thread['tid'], $threadsread) && $thread['lastpost'] <= $threadsread[$thread['tid']])*/\n        {\n            $folder_label = $lang->icon_no_new;\n            $new_class = \"subject_old\";\n        }\n        /*else\n        {\n            $folder .= \"new\";\n            $folder_label .= $lang->icon_new;\n            $new_class = \"subject_new\";\n        }*/\n        if($thread['replies'] >= $mybb->settings['hottopic'] || $thread['views'] >= $mybb->settings['hottopicviews'])\n        {\n            $folder .= \"hot\";\n            $folder_label .= $lang->icon_hot;\n        }\n        if($thread['closed'] == 1)\n        {\n            $folder .= \"lock\";\n            $folder_label .= $lang->icon_lock;\n        }\n        $folder .= \"folder\";\n\n        $trow = alt_trow();\n        if($thread['visible'] == 0)\n        {\n            $trow = \"trow_shaded\";\n        }\n        $thread['forum'] = $forums[$thread['fid']]['name'];\n        if($mybb->settings['recentthread_prefix'])\n        {\n            $recentprefix = $prefixes[$thread['prefix']]['displaystyle'];\n        }\n        if($thread['icon'])\n        {\n            $icon = \"<img src='\" . $icons[$thread['icon']]['path'] . \"' alt='\" . $icons[$thread['icon']]['name'] . \"' title='\" . $icons[$thread['icon']]['name'] . \"' />\";\n        }\n        $threadlink = $thread['newpostlink'] = get_thread_link($tid, \"\", \"newpost\"); // Maintain for template compatibility\n        eval(\"\\$arrow =\\\"\".$templates->get(\"forumdisplay_thread_gotounread\").\"\\\";\");\n        $lastpostlink = get_thread_link($tid, \"\", \"lastpost\");\n        $lastpostdate = my_date($mybb->settings['dateformat'], $thread['lastpost']);\n        $lastposttime = my_date($mybb->settings['timeformat'], $thread['lastpost']);\n        $lastposttimeago = my_date(\"relative\", $thread['lastpost']);\n        $lastposter = $thread['lastposter'];\n        $lastposteruid = $thread['lastposteruid'];\n        if($mybb->settings['recentthread_format_names'])\n        {\n            $thread['author'] = build_profile_link(format_name($thread['userusername'], $thread['usergroup'], $thread['displaygroup']), $thread['uid']);\n            // Don't link to guest's profiles (they have no profile).\n            if ($lastposteruid == 0)\n            {\n                $lastposterlink = $lastposter;\n            }\n            else\n            {\n                $lastposterlink = build_profile_link(format_name($lastposter, $thread['lastusergroup'], $thread['lastdisplaygroup']), $lastposteruid);\n            }\n        }\n        else\n        {\n            $thread['author'] = build_profile_link($thread['userusername'], $thread['uid']);\n            if($lastposteruid == 0)\n            {\n                $lastposterlink = $lastposter;\n            }\n            else\n            {\n                $lastposterlink = build_profile_link($lastposter, $lastposteruid);\n            }\n        }\n        if($mybb->settings['recentthread_show_create_date'])\n        {\n            $create_time = my_date($mybb->settings['timeformat'], $thread['dateline']);\n            $create_date = my_date($mybb->settings['dateformat'], $thread['dateline']);\n            $create_string = $lang->sprintf($lang->recentthread_create_date, $create_date, $create_time);\n        }\n        else\n        {\n            $lang->recentthread_create_date = \"\";\n            $create_string = \"\";\n        }\n        if($mybb->settings['recentthread_threadavatar'])\n        {\n            $threadavatar = format_avatar($thread['threadavatar'], $thread['threaddimensions']);\n            $avatarurl = $threadavatar['image'];\n            $dimensions = $threadavatar['width_height'];\n            eval(\"\\$posteravatar = \\\"\".$templates->get(\"recentthread_avatar\").\"\\\";\");\n        }\n        if($mybb->settings['recentthread_lastavatar'])\n        {\n            $lastposteravatar = format_avatar($thread['lastavatar'], $thread['lastdimensions']);\n            $avatarurl = $lastposteravatar['image'];\n            $dimensions = $lastposteravatar['width_height'];\n            eval(\"\\$lastavatar = \\\"\".$templates->get(\"recentthread_last_avatar\").\"\\\";\");\n        }\n        // Now check the length of subjects\n        $length = (int) $mybb->settings['recentthread_subject_length'];\n        if(strlen($thread['subject']) > $length && $length != 0)\n        {\n            // Figure out if we need to split it up.\n            $title = my_substr($thread['subject'], 0, $length);\n            if($mybb->settings['recentthread_subject_breaker'])\n            {\n                $words = explode(\" \", $title);\n                $count = count($words) -1;\n                $currenttitle = \"\";\n                for($x = 0; $x < $count; $x++)\n                {\n                    $currenttitle .= $words[$x] . \" \";\n                }\n                $thread['subject'] = $currenttitle . \" ...\";\n            }\n            if(!$mybb->settings['recentthread_subject_breaker'])\n            {\n                $thread['subject'] = $title . \"...\";\n            }\n        }\n        $thread['subject'] = htmlspecialchars_uni($thread['subject']);\n        // Moderator stuff baby!\n        if(is_moderator($thread['fid']))\n        {\n            $ismod = TRUE;\n            // fetch the inline mod column\n        }\n        else\n        {\n            $ismod = FALSE;\n        }\n        if(is_moderator($thread['fid'], \"caneditposts\") || $fpermissions['caneditposts'] == 1)\n        {\n            $can_edit_titles = 1;\n        }\n        else\n        {\n            $can_edit_titles = 0;\n        }\n        $inline_edit_class = '';\n        if(($thread['uid'] == $mybb->user['uid'] && $thread['closed'] != 1 && $mybb->user['uid'] != 0 && $can_edit_titles == 1) || $ismod == true)\n        {\n            $inline_edit_class = \"subject_editable\";\n        }\n\n        // Multipage.  Code from forumdisplay.php\n        $thread['posts'] = $thread['replies'] +1;\n        if($thread['unapprovedposts'] > 0 && $ismod)\n        {\n            $thread['posts'] += $thread['unapprovedposts'] + $thread['deletedposts'];\n        }\n        if($thread['posts'] > $mybb->settings['postsperpage'])\n        {\n            $thread['pages'] = ceil($thread['posts'] / $mybb->settings['postsperpage']);\n            if($thread['pages'] > $mybb->settings['maxmultipagelinks'])\n            {\n                $pagesstop = $mybb->settings['maxmultipagelinks'] - 1;\n                $page_link = get_thread_link($thread['tid'], $thread['pages']);\n                eval(\"\\$morelink = \\\"\".$templates->get(\"forumdisplay_thread_multipage_more\").\"\\\";\");\n            }\n            else\n            {\n                $pagesstop = $thread['pages'];\n            }\n            for($i = 1; $i <= $pagesstop; ++$i)\n            {\n                $page_link = get_thread_link($thread['tid'], $i);\n                eval(\"\\$threadpages .= \\\"\".$templates->get(\"forumdisplay_thread_multipage_page\").\"\\\";\");\n            }\n            eval(\"\\$thread['multipage'] = \\\"\".$templates->get(\"forumdisplay_thread_multipage\").\"\\\";\");\n        }\n        else\n        {\n            $threadpages = '';\n            $morelink = '';\n            $thread['multipage'] = '';\n        }\n        if(!in_array($thread['tid'], $listed_tids))\n        {\n            eval(\"\\$recentthreads .= \\\"\" . $templates->get(\"recentthread_thread\") . \"\\\";\");\n            $posteravatar = $lastavatar = $icon = $thread['multipage'] = $threadpages = $morelink = \"\";\n            array_push($listed_tids, $thread['tid']);\n        }\n    }\n    eval(\"\\$recentthreadtable = \\\"\".$templates->get(\"recentthread\").\"\\\";\");\n    if($return)\n    {\n        return $recentthreadtable;\n    }\n}\n\nfunction recentthread_get_templates()\n{\n    global $templatelist, $mybb;\n    if($mybb->settings['recentthread_pages_shown'])\n    {\n        $allowed_pages = explode(\"\\n\", $mybb->settings['recentthread_pages_shown']);\n    }\n    else\n    {\n        $allowed_pages = array();\n    }\n    $allowed_pages = str_replace(array(\" \", \"\\n\", \"\\r\"), \"\", $allowed_pages);\n    $allowed_pages[] = \"xmlhttp.php\";\n    if(in_array(THIS_SCRIPT, $allowed_pages))\n    {\n        $templatelist .= \",recentthread,recentthread_thread,recentthread_avatar,recentthread_last_avatar,recentthread_headerinclude,forumdisplay_thread_gotounread\";\n        $templatelist .= \",forumdisplay_thread_multipage,forumdisplay_thread_multipage_page,forumdisplay_thread_multipage_more\";\n    }\n    if(THIS_SCRIPT == \"usercp.php\")\n    {\n        $templatelist .= \",recentthread_usercp\";\n    }\n}\n\nfunction recentthread_global_intermediate()\n{\n    global $templates, $recentthread_headerinclude, $mybb;\n    if($mybb->settings['recentthread_pages_shown'])\n    {\n        $allowed_pages = explode(\"\\n\", $mybb->settings['recentthread_pages_shown']);\n    }\n    else\n    {\n        $allowed_pages = array();\n    }\n    $allowed_pages = str_replace(array(\" \", \"\\n\", \"\\r\"), \"\", $allowed_pages);\n    $allowed_pages[] = \"xmlhttp.php\";\n    if(in_array(THIS_SCRIPT, $allowed_pages) && recentthread_can_view())\n    {\n        eval(\"\\$recentthread_headerinclude = \\\"\".$templates->get(\"recentthread_headerinclude\").\"\\\";\");\n    }\n}\n\nfunction recentthread_refresh_threads()\n{\n    global $db, $mybb, $canviewrecentthreads;\n    if($mybb->input['action'] == \"recent_threads\")\n    {\n        require_once MYBB_ROOT . \"/inc/plugins/recentthreads/hooks.php\";\n        if(recentthread_can_view())\n        {\n            echo(recentthread_list_threads(true));\n        }\n        die;\n    }\n}\n\nfunction recentthread_can_view()\n{\n    global $mybb;\n    if($mybb->user['uid'] && $mybb->user['recentthread_show'] == 0)\n    {\n        return false;\n    }\n    if($mybb->settings['recentthread_which_groups'])\n    {\n        $disallowedgroups = explode(\",\", $mybb->settings['recentthread_which_groups']);\n        $mygroups = $mybb->user['usergroup'];\n        if($mybb->user['additionalgroups'])\n        {\n            $mygroups .= \",\" . $mybb->user['additionalgroups'];\n        }\n        $groups = explode(\",\", $mygroups);\n        foreach($groups as $group)\n        {\n            if(in_array($group, $disallowedgroups))\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n    else\n    {\n        return true;\n    }\n}\n\nfunction recentthread_admin_style_templates()\n{\n    global $lang;\n    $lang->load(\"recentthreads\");\n}\n\nfunction recentthread_admin_config_settings_begin()\n{\n    global $lang;\n    $lang->load(\"recentthreads\");\n}\n\nfunction recentthread_admin_tools_adminlog_begin()\n{\n    global $lang;\n    $lang->load(\"recentthreads\");\n}\n\nfunction recenttthread_admin_tools_get_admin_log_action(&$plugin_array)\n{\n    if($plugin_array['logitem']['module'] == \"config-plugins\"  && $plugin_array['logitem']['action'] == \"update_recentthreads\")\n    {\n        $plugin_array['lang_string'] = \"admin_log_config_plugins_update_recentthreads\";\n    }\n}\n\nfunction recentthread_usercp_options_start()\n{\n    global $mybb, $lang, $templates, $recentthreadcheck, $recentthread_option;\n    $lang->load(\"recentthreads\");\n    if($mybb->user['recentthread_show'] != 0)\n    {\n        $recentthreadcheck = \"checked=\\\"checked\\\"\";\n    }\n    eval(\"\\$recentthread_option =\\\"\".$templates->get(\"recentthread_usercp\").\"\\\";\");\n}\n\nfunction recentthread_usercp_do_options_end()\n{\n    global $mybb, $db;\n    $update_user['recentthread_show'] = (int) $mybb->input['recentthread_show'];\n    $db->update_query(\"users\", $update_user, \"uid=\" . $mybb->user['uid']);\n}\n"], "fixing_code": ["<?php\nif(!defined(\"IN_MYBB\"))\n{\n    die(\"Direct access to this file is not allowed.\");\n}\n\n$plugins->add_hook(\"global_end\", \"recentthread_list_threads\");\n$plugins->add_hook(\"global_start\", \"recentthread_get_templates\");\n$plugins->add_hook(\"global_intermediate\", \"recentthread_global_intermediate\");\n$plugins->add_hook(\"xmlhttp\", \"recentthread_refresh_threads\");\n$plugins->add_hook(\"usercp_options_start\", \"recentthread_usercp_options_start\");\n$plugins->add_hook(\"usercp_do_options_start\", \"recentthread_usercp_do_options_end\");\n\nif(defined(\"IN_ADMINCP\"))\n{\n    // Due to the massive structural changes, no upgrade script from before version 16.\n    require_once \"update.php\";\n    $plugins->add_hook(\"admin_config_plugins_begin\", \"recentthread_update\");\n    $plugins->add_hook(\"admin_config_settings_begin\", \"recentthread_admin_config_settings_begin\");\n    $plugins->add_hook(\"admin_tools_adminlog_begin\", \"recentthread_admin_tools_adminlog_begin\");\n    $plugins->add_hook(\"admin_tools_get_admin_log_action\", \"recenttthread_admin_tools_get_admin_log_action\");\n    $plugins->add_hook(\"admin_style_templates\", \"recentthread_admin_style_templates\");\n}\n\nfunction recentthread_list_threads($return=false)\n{\n    global $mybb, $db, $templates, $recentthreadtable, $recentthreads, $settings, $canviewrecentthreads, $cache, $theme, $lang, $threadfields, $xthreadfields;\n    // First check permissions\n    if(!recentthread_can_view())\n    {\n        return false;\n    }\n    if($mybb->settings['recentthread_pages_shown'])\n    {\n        $allowed_pages = explode(\"\\n\", $mybb->settings['recentthread_pages_shown']);\n    }\n    else\n    {\n        $allowed_pages = array();\n    }\n    $allowed_pages = str_replace(array(\" \", \"\\n\", \"\\r\"), \"\", $allowed_pages);\n    $allowed_pages[] = \"xmlhttp.php\";\n    if(!in_array(THIS_SCRIPT, $allowed_pages))\n    {\n        return false;\n    }\n    $lang->load(\"recentthreads\");\n    $lang->load(\"forumdisplay\");\n    $icons = $cache->read(\"posticons\");\n    require_once MYBB_ROOT.\"inc/functions_search.php\";\n    $threadlimit = (int) $mybb->settings['recentthread_threadcount'];\n    if(!$threadlimit) // Provide a fallback\n    {\n        $threadlimit = 15;\n    }\n    $onlyusfids = array();\n    $onlycanview = array();\n    // Check group permissions if we can't view threads not started by us\n    $group_permissions = forum_permissions();\n    foreach($group_permissions as $fid => $forum_permissions)\n    {\n        if($forum_permissions['canonlyviewownthreads'] == 1)\n        {\n            $onlyusfids[] = $fid;\n        }\n        if ($forum_permissions['canview'] == 0)\n        {\n            $onlycanview[] = $fid;\n        }\n    }\n    $where = \"\";\n    if(!empty($onlyusfids))\n    {\n        $where .= \"AND ((t.fid IN(\".implode(',', $onlyusfids).\") AND t.uid='{$mybb->user['uid']}') OR t.fid NOT IN(\".implode(',', $onlyusfids).\"))\";\n    }\n    if (!empty($onlycanview))\n    {\n        $where .= \"AND (t.fid NOT IN(\".implode(',', $onlycanview).\"))\";\n    }\n    $approved = 0;\n\n    // Moderators can view unapproved threads\n    if($mybb->usergroup['canmodcp']==1) {\n        $approved = -1;\n    }\n    $unsearchableforums = get_unsearchable_forums();\n    $unviewableforums = get_unviewable_forums();\n    if($unsearchableforums && $unviewableforums)\n    {\n        $forumarray = explode(\",\", $unsearchableforums . \",\" . $unviewableforums);\n        $newarray = array_unique($forumarray);\n        $unsearchableforumssql = \" AND t.fid NOT IN(\" . implode(\",\", $newarray) . \") \";\n    }\n    // Take into account any ignored forums\n    if($mybb->settings['recentthread_forumskip'])\n    {\n        $ignoreforums = \" AND t.fid NOT IN(\" . htmlspecialchars($mybb->settings['recentthread_forumskip']) . \") \";\n    }\n    $forums = $cache->read(\"forums\");\n    $prefixes = $cache->read(\"threadprefixes\");\n\n    // Are we only using certain prefixes?\n    if($mybb->settings['recentthread_prefix_only'])\n    {\n        if(is_numeric($mybb->settings['recentthread_prefix_only']))\n        {\n            $prefixonly = \" AND t.prefix = \" . (int) $mybb->settings['recentthread_prefix_only'] . \" \";\n        }\n        else\n        {\n            $prefixlist = explode(\",\", $mybb->settings['recentthread_prefix_only']);\n            $newlist = array_map(\"intval\", $prefixlist); /* Use this to stop any funny business. */\n            $prefixonly = \" AND t.prefix IN(\" . implode(',', $newlist) . \") \";\n        }\n    }\n\n\n    // Take XThreads into account\n    if(function_exists(\"xthreads_get_threadfields\") && $mybb->settings['recentthread_xthreads'] == 1)\n    {\n        $quickquery = $db->query(\"SELECT t.tid as threadid, t.username, t.fid, tf.*\n                                    FROM \" . TABLE_PREFIX . \"threads t\n                                    LEFT JOIN \" . TABLE_PREFIX . \"threadfields_data tf ON(t.tid=tf.tid)\n                                    WHERE 1=1 $where $prefixonly AND t.visible > $approved $unsearchableforumssql $ignoreforums\n                                    ORDER BY t.lastpost DESC\n                                    LIMIT $threadlimit\");\n\n        while ($threadfields = $db->fetch_array($quickquery))\n        {\n            $threadfields_raw[$xthreadsfields['threadid']] = $xthreadsfields;\n            if ($threadfields['fid'] == $GLOBALS['fid'])\n            {\n                // use global cache if we're referring to current forum\n                $threadfield_cache =& $GLOBALS['threadfield_cache'];\n            }\n            if (!isset($threadfield_cache))\n            {\n                $threadfield_cache = xthreads_gettfcache((int)$threadfields['fid']);\n            }\n            if (!empty($threadfield_cache))\n            {\n                if (!isset($threadfields))\n                {\n                    $threadfields = array();\n                }\n                foreach ($threadfield_cache as $k => &$v)\n                {\n                    xthreads_get_xta_cache($v, $threadfields['threadid']);\n                    xthreads_sanitize_disp($threadfields[$k], $v, $threadfields['username'], true);\n                }\n                $threadfields_formatted[$threadfields['threadid']] = $threadfields;\n            }\n        }\n    }\n\n    // Get a thread read cache\n    $threadsread = array();\n    if($mybb->user['uid'] && $mybb->settings['threadreadcut'] > 0)\n    {\n        $query = $db->query(\"SELECT tr.*, t.closed\n                            FROM \" . TABLE_PREFIX . \"threadsread tr\n                            LEFT JOIN \" . TABLE_PREFIX . \"threads t ON(tr.tid=t.tid)\n                            WHERE tr.uid=\" . $mybb->user['uid'] . \" \" . $where . $prefixonly . \" AND t.visible > \" . $approved . $unsearchableforumssql . $ignoreforums .\n            \" ORDER BY t.lastpost DESC\n                            LIMIT $threadlimit\");\n        while($threadread = $db->fetch_array($query))\n        {\n            $threadsread[$threadread['tid']] = $threadread['dateline'];\n        }\n    }\n\n    $query = $db->query(\"\n\t\t\tSELECT t.*, u.username AS userusername, u.usergroup, u.displaygroup, u.avatar as threadavatar, u.avatardimensions as threaddimensions, lp.usergroup AS lastusergroup, lp.avatar as lastavatar, lp.avatardimensions as lastdimensions, lp.displaygroup as lastdisplaygroup, fr.dateline as forumlastread\n\t\t\tFROM \" . TABLE_PREFIX . \"threads t\n\t\t\tLEFT JOIN \" . TABLE_PREFIX . \"users u ON (u.uid=t.uid)\n\t\t\tLEFT JOIN \" . TABLE_PREFIX . \"users lp ON (t.lastposteruid=lp.uid)\n            LEFT JOIN \" . TABLE_PREFIX . \"forumsread fr ON (fr.fid = t.fid AND fr.uid = {$mybb->user['uid']})\n\t\t\tWHERE 1=1 $where $prefixonly AND t.visible > {$approved} {$unsearchableforumssql} {$ignoreforums}\n\t\t\tORDER BY t.lastpost DESC\n\t\t\tLIMIT $threadlimit\");\n\n    $listed_tids = array();\n    $forum_list = $cache->read(\"forums\");\n    while($thread = $db->fetch_array($query))\n    {\n        $parent = $forum_list[$thread['fid']]['parentlist'];\n        $recentthread_breadcrumbs = \"\";\n        if($mybb->settings['recentthread_use_breadcrumbs'])\n        {\n            if (strpos($parent, \",\"))\n            {\n                $parentlist = explode(\",\", $parent);\n                $separator = \"\";\n                foreach ($parentlist as $subforum)\n                {\n                    $recentthread_breadcrumbs .= $separator . \"<a href='\" . $mybb->settings['bburl'] . \"/forumdisplay.php?fid=\" . $subforum . \"'>\" . $forum_list[$subforum]['name'] . \"</a>\";\n                    $separator = $mybb->settings['recentthread_breadcrumb_separator'];\n                }\n            }\n            else\n            {\n                $recentthread_breadcrumbs = \"<a href=\\\"{$mybb->settings['bburl']}/forumdisplay.php?fid={$thread['fid']}\\\">{$thread['forum']}</a>\";\n            }\n        }\n        else\n        {\n            $recentthread_breadcrumbs = \"<a href=\\\"{$mybb->settings['bburl']}/forumdisplay.php?fid={$thread['fid']}\\\">{$thread['forum']}</a>\";\n        }\n        $folder = $folder_label = \"\";\n        $isnew = 0;\n        if(strpos($thread['closed'], \"moved|\") === 0)\n        {\n            $thread['tid'] = substr($thread['closed'], 6);\n            $folder = \"move\";\n        }\n        $tid = $thread['tid'];\n\n        // Figure out the read status and lock status\n        if($thread['sticky'] == 1)\n        {\n            $thread_type_class = \" forumdisplay_sticky\";\n        }\n        else\n        {\n            $thread_type_class = \" forumdisplay_regular\";\n        }\n\n        $lastread = 0;\n        if (array_key_exists($thread['tid'], $threadsread)) {\n            $lastread = $threadsread[$thread['tid']];\n        }\n        if (!is_null($thread['forumlastread']) && $thread['forumlastread'] > $lastread) {\n            $lastread = $thread['forumlastread'];\n        }\n        #global $header;\n        #if ($mybb->user['uid'] == 6) $header = ' - (' . $lastread . ', ' . $thread . ')' $header;\n        \n        if($thread['lastpost'] > $lastread)\n        {\n            $folder .= \"new\";\n            $folder_label .= $lang->icon_new;\n            $new_class = \"subject_new\";\n        }\n        else /*if(array_key_exists($thread['tid'], $threadsread) && $thread['lastpost'] <= $threadsread[$thread['tid']])*/\n        {\n            $folder_label = $lang->icon_no_new;\n            $new_class = \"subject_old\";\n        }\n        /*else\n        {\n            $folder .= \"new\";\n            $folder_label .= $lang->icon_new;\n            $new_class = \"subject_new\";\n        }*/\n        if($thread['replies'] >= $mybb->settings['hottopic'] || $thread['views'] >= $mybb->settings['hottopicviews'])\n        {\n            $folder .= \"hot\";\n            $folder_label .= $lang->icon_hot;\n        }\n        if($thread['closed'] == 1)\n        {\n            $folder .= \"lock\";\n            $folder_label .= $lang->icon_lock;\n        }\n        $folder .= \"folder\";\n\n        $trow = alt_trow();\n        if($thread['visible'] == 0)\n        {\n            $trow = \"trow_shaded\";\n        }\n        $thread['forum'] = $forums[$thread['fid']]['name'];\n        if($mybb->settings['recentthread_prefix'])\n        {\n            $recentprefix = $prefixes[$thread['prefix']]['displaystyle'];\n        }\n        if($thread['icon'])\n        {\n            $icon = \"<img src='\" . $icons[$thread['icon']]['path'] . \"' alt='\" . $icons[$thread['icon']]['name'] . \"' title='\" . $icons[$thread['icon']]['name'] . \"' />\";\n        }\n        $threadlink = $thread['newpostlink'] = get_thread_link($tid, \"\", \"newpost\"); // Maintain for template compatibility\n        eval(\"\\$arrow =\\\"\".$templates->get(\"forumdisplay_thread_gotounread\").\"\\\";\");\n        $lastpostlink = get_thread_link($tid, \"\", \"lastpost\");\n        $lastpostdate = my_date($mybb->settings['dateformat'], $thread['lastpost']);\n        $lastposttime = my_date($mybb->settings['timeformat'], $thread['lastpost']);\n        $lastposttimeago = my_date(\"relative\", $thread['lastpost']);\n        $lastposter = $thread['lastposter'];\n        $lastposteruid = $thread['lastposteruid'];\n        if($mybb->settings['recentthread_format_names'])\n        {\n            $thread['author'] = build_profile_link(format_name($thread['userusername'], $thread['usergroup'], $thread['displaygroup']), $thread['uid']);\n            // Don't link to guest's profiles (they have no profile).\n            if ($lastposteruid == 0)\n            {\n                $lastposterlink = $lastposter;\n            }\n            else\n            {\n                $lastposterlink = build_profile_link(format_name($lastposter, $thread['lastusergroup'], $thread['lastdisplaygroup']), $lastposteruid);\n            }\n        }\n        else\n        {\n            $thread['author'] = build_profile_link($thread['userusername'], $thread['uid']);\n            if($lastposteruid == 0)\n            {\n                $lastposterlink = $lastposter;\n            }\n            else\n            {\n                $lastposterlink = build_profile_link($lastposter, $lastposteruid);\n            }\n        }\n        if($mybb->settings['recentthread_show_create_date'])\n        {\n            $create_time = my_date($mybb->settings['timeformat'], $thread['dateline']);\n            $create_date = my_date($mybb->settings['dateformat'], $thread['dateline']);\n            $create_string = $lang->sprintf($lang->recentthread_create_date, $create_date, $create_time);\n        }\n        else\n        {\n            $lang->recentthread_create_date = \"\";\n            $create_string = \"\";\n        }\n        if($mybb->settings['recentthread_threadavatar'])\n        {\n            $threadavatar = format_avatar($thread['threadavatar'], $thread['threaddimensions']);\n            $avatarurl = $threadavatar['image'];\n            $dimensions = $threadavatar['width_height'];\n            eval(\"\\$posteravatar = \\\"\".$templates->get(\"recentthread_avatar\").\"\\\";\");\n        }\n        if($mybb->settings['recentthread_lastavatar'])\n        {\n            $lastposteravatar = format_avatar($thread['lastavatar'], $thread['lastdimensions']);\n            $avatarurl = $lastposteravatar['image'];\n            $dimensions = $lastposteravatar['width_height'];\n            eval(\"\\$lastavatar = \\\"\".$templates->get(\"recentthread_last_avatar\").\"\\\";\");\n        }\n        // Now check the length of subjects\n        $length = (int) $mybb->settings['recentthread_subject_length'];\n        if(strlen($thread['subject']) > $length && $length != 0)\n        {\n            // Figure out if we need to split it up.\n            $title = my_substr($thread['subject'], 0, $length);\n            if($mybb->settings['recentthread_subject_breaker'])\n            {\n                $words = explode(\" \", $title);\n                $count = count($words) -1;\n                $currenttitle = \"\";\n                for($x = 0; $x < $count; $x++)\n                {\n                    $currenttitle .= $words[$x] . \" \";\n                }\n                $thread['subject'] = $currenttitle . \" ...\";\n            }\n            if(!$mybb->settings['recentthread_subject_breaker'])\n            {\n                $thread['subject'] = $title . \"...\";\n            }\n        }\n        $thread['subject'] = htmlspecialchars_uni($thread['subject']);\n        // Moderator stuff baby!\n        if(is_moderator($thread['fid']))\n        {\n            $ismod = TRUE;\n            // fetch the inline mod column\n        }\n        else\n        {\n            $ismod = FALSE;\n        }\n        if(is_moderator($thread['fid'], \"caneditposts\") || $fpermissions['caneditposts'] == 1)\n        {\n            $can_edit_titles = 1;\n        }\n        else\n        {\n            $can_edit_titles = 0;\n        }\n        $inline_edit_class = '';\n        if(($thread['uid'] == $mybb->user['uid'] && $thread['closed'] != 1 && $mybb->user['uid'] != 0 && $can_edit_titles == 1) || $ismod == true)\n        {\n            $inline_edit_class = \"subject_editable\";\n        }\n\n        // Multipage.  Code from forumdisplay.php\n        $thread['posts'] = $thread['replies'] +1;\n        if($thread['unapprovedposts'] > 0 && $ismod)\n        {\n            $thread['posts'] += $thread['unapprovedposts'] + $thread['deletedposts'];\n        }\n        if($thread['posts'] > $mybb->settings['postsperpage'])\n        {\n            $thread['pages'] = ceil($thread['posts'] / $mybb->settings['postsperpage']);\n            if($thread['pages'] > $mybb->settings['maxmultipagelinks'])\n            {\n                $pagesstop = $mybb->settings['maxmultipagelinks'] - 1;\n                $page_link = get_thread_link($thread['tid'], $thread['pages']);\n                eval(\"\\$morelink = \\\"\".$templates->get(\"forumdisplay_thread_multipage_more\").\"\\\";\");\n            }\n            else\n            {\n                $pagesstop = $thread['pages'];\n            }\n            for($i = 1; $i <= $pagesstop; ++$i)\n            {\n                $page_link = get_thread_link($thread['tid'], $i);\n                eval(\"\\$threadpages .= \\\"\".$templates->get(\"forumdisplay_thread_multipage_page\").\"\\\";\");\n            }\n            eval(\"\\$thread['multipage'] = \\\"\".$templates->get(\"forumdisplay_thread_multipage\").\"\\\";\");\n        }\n        else\n        {\n            $threadpages = '';\n            $morelink = '';\n            $thread['multipage'] = '';\n        }\n        if(!in_array($thread['tid'], $listed_tids))\n        {\n            eval(\"\\$recentthreads .= \\\"\" . $templates->get(\"recentthread_thread\") . \"\\\";\");\n            $posteravatar = $lastavatar = $icon = $thread['multipage'] = $threadpages = $morelink = \"\";\n            array_push($listed_tids, $thread['tid']);\n        }\n    }\n    eval(\"\\$recentthreadtable = \\\"\".$templates->get(\"recentthread\").\"\\\";\");\n    if($return)\n    {\n        return $recentthreadtable;\n    }\n}\n\nfunction recentthread_get_templates()\n{\n    global $templatelist, $mybb;\n    if($mybb->settings['recentthread_pages_shown'])\n    {\n        $allowed_pages = explode(\"\\n\", $mybb->settings['recentthread_pages_shown']);\n    }\n    else\n    {\n        $allowed_pages = array();\n    }\n    $allowed_pages = str_replace(array(\" \", \"\\n\", \"\\r\"), \"\", $allowed_pages);\n    $allowed_pages[] = \"xmlhttp.php\";\n    if(in_array(THIS_SCRIPT, $allowed_pages))\n    {\n        $templatelist .= \",recentthread,recentthread_thread,recentthread_avatar,recentthread_last_avatar,recentthread_headerinclude,forumdisplay_thread_gotounread\";\n        $templatelist .= \",forumdisplay_thread_multipage,forumdisplay_thread_multipage_page,forumdisplay_thread_multipage_more\";\n    }\n    if(THIS_SCRIPT == \"usercp.php\")\n    {\n        $templatelist .= \",recentthread_usercp\";\n    }\n}\n\nfunction recentthread_global_intermediate()\n{\n    global $templates, $recentthread_headerinclude, $mybb;\n    if($mybb->settings['recentthread_pages_shown'])\n    {\n        $allowed_pages = explode(\"\\n\", $mybb->settings['recentthread_pages_shown']);\n    }\n    else\n    {\n        $allowed_pages = array();\n    }\n    $allowed_pages = str_replace(array(\" \", \"\\n\", \"\\r\"), \"\", $allowed_pages);\n    $allowed_pages[] = \"xmlhttp.php\";\n    if(in_array(THIS_SCRIPT, $allowed_pages) && recentthread_can_view())\n    {\n        eval(\"\\$recentthread_headerinclude = \\\"\".$templates->get(\"recentthread_headerinclude\").\"\\\";\");\n    }\n}\n\nfunction recentthread_refresh_threads()\n{\n    global $db, $mybb, $canviewrecentthreads;\n    if($mybb->input['action'] == \"recent_threads\")\n    {\n        require_once MYBB_ROOT . \"/inc/plugins/recentthreads/hooks.php\";\n        if(recentthread_can_view())\n        {\n            echo(recentthread_list_threads(true));\n        }\n        die;\n    }\n}\n\nfunction recentthread_can_view()\n{\n    global $mybb;\n    if($mybb->user['uid'] && $mybb->user['recentthread_show'] == 0)\n    {\n        return false;\n    }\n    if($mybb->settings['recentthread_which_groups'])\n    {\n        $disallowedgroups = explode(\",\", $mybb->settings['recentthread_which_groups']);\n        $mygroups = $mybb->user['usergroup'];\n        if($mybb->user['additionalgroups'])\n        {\n            $mygroups .= \",\" . $mybb->user['additionalgroups'];\n        }\n        $groups = explode(\",\", $mygroups);\n        foreach($groups as $group)\n        {\n            if(in_array($group, $disallowedgroups))\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n    else\n    {\n        return true;\n    }\n}\n\nfunction recentthread_admin_style_templates()\n{\n    global $lang;\n    $lang->load(\"recentthreads\");\n}\n\nfunction recentthread_admin_config_settings_begin()\n{\n    global $lang;\n    $lang->load(\"recentthreads\");\n}\n\nfunction recentthread_admin_tools_adminlog_begin()\n{\n    global $lang;\n    $lang->load(\"recentthreads\");\n}\n\nfunction recenttthread_admin_tools_get_admin_log_action(&$plugin_array)\n{\n    if($plugin_array['logitem']['module'] == \"config-plugins\"  && $plugin_array['logitem']['action'] == \"update_recentthreads\")\n    {\n        $plugin_array['lang_string'] = \"admin_log_config_plugins_update_recentthreads\";\n    }\n}\n\nfunction recentthread_usercp_options_start()\n{\n    global $mybb, $lang, $templates, $recentthreadcheck, $recentthread_option;\n    $lang->load(\"recentthreads\");\n    if($mybb->user['recentthread_show'] != 0)\n    {\n        $recentthreadcheck = \"checked=\\\"checked\\\"\";\n    }\n    eval(\"\\$recentthread_option =\\\"\".$templates->get(\"recentthread_usercp\").\"\\\";\");\n}\n\nfunction recentthread_usercp_do_options_end()\n{\n    global $mybb, $db;\n    $update_user['recentthread_show'] = (int) $mybb->input['recentthread_show'];\n    $db->update_query(\"users\", $update_user, \"uid=\" . $mybb->user['uid']);\n}\n"], "filenames": ["inc/plugins/recentthreads/hooks.php"], "buggy_code_start_loc": [97], "buggy_code_end_loc": [98], "fixing_code_start_loc": [97], "fixing_code_end_loc": [98], "type": "CWE-79", "message": "A vulnerability, which was classified as problematic, was found in dragonexpert Recent Threads on Index. Affected is the function recentthread_list_threads of the file inc/plugins/recentthreads/hooks.php of the component Setting Handler. The manipulation of the argument recentthread_forumskip leads to cross site scripting. It is possible to launch the attack remotely. The name of the patch is 051465d807a8fcc6a8b0f4bcbb19299672399f48. It is recommended to apply a patch to fix this issue. VDB-217182 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2019-25093", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-02T11:15:10.760", "lastModified": "2023-01-09T18:25:03.190", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as problematic, was found in dragonexpert Recent Threads on Index. Affected is the function recentthread_list_threads of the file inc/plugins/recentthreads/hooks.php of the component Setting Handler. The manipulation of the argument recentthread_forumskip leads to cross site scripting. It is possible to launch the attack remotely. The name of the patch is 051465d807a8fcc6a8b0f4bcbb19299672399f48. It is recommended to apply a patch to fix this issue. VDB-217182 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 2.4, "baseSeverity": "LOW"}, "exploitabilityScore": 0.9, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:M/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "MULTIPLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.3}, "baseSeverity": "LOW", "exploitabilityScore": 6.4, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:recent_threads_on_index_project:recent_threads_on_index:*:*:*:*:*:*:*:*", "versionEndExcluding": "2019-02-06", "matchCriteriaId": "D2737647-6F8B-433F-AEA1-1102484AAF82"}]}]}], "references": [{"url": "https://github.com/dragonexpert/recentthreads/commit/051465d807a8fcc6a8b0f4bcbb19299672399f48", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217182", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217182", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/dragonexpert/recentthreads/commit/051465d807a8fcc6a8b0f4bcbb19299672399f48"}}