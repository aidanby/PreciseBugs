{"buggy_code": ["<?php\n\n    /************************************************************************\n     * CSS and Javascript Combinator 0.5\n     * Copyright 2006 by Niels Leenheer\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining\n     * a copy of this software and associated documentation files (the\n     * \"Software\"), to deal in the Software without restriction, including\n     * without limitation the rights to use, copy, modify, merge, publish,\n     * distribute, sublicense, and/or sell copies of the Software, and to\n     * permit persons to whom the Software is furnished to do so, subject to\n     * the following conditions:\n     * \n     * The above copyright notice and this permission notice shall be\n     * included in all copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n     * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n     * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n     * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n     * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n     * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n     * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n     */\n\n    $cache    = true;\n    $cachedir = '../../uploads';\n    $base     = dirname(__FILE__);\n\n    $type     = $_GET['type'];\n    $elements = explode(',', $_GET['files']);\n\n    // Determine last modification date of the files\n    $lastmodified = 0;\n    while( list(,$element) = each($elements) ) {\n        $path = realpath($base . '/' . $element) ;\n\n        if( ($type != 'js' && $type != 'css') || \n            ($type == 'js' && substr($path, -3) != '.js') || \n            ($type == 'css' && substr($path, -4) != '.css') ) {\n            header (\"HTTP/1.0 403 Forbidden\") ;\n            exit ;\n        }\n\n        if (substr($path, 0, strlen($base)) != $base || !file_exists($path)) {\n            header (\"HTTP/1.0 404 Not Found\");\n            exit;\n        }\n\n        $lastmodified = max($lastmodified, filemtime($path));\n    }\n\n    // Send Etag hash\n    $hash = $lastmodified . '-' . md5($_GET['files']);\n    header (\"Etag: \\\"\" . $hash . \"\\\"\");\n\n    if( isset($_SERVER['HTTP_IF_NONE_MATCH']) && \n        stripslashes($_SERVER['HTTP_IF_NONE_MATCH']) == '\"' . $hash . '\"' ) {\n        // Return visit and no modifications, so do not send anything\n        header (\"HTTP/1.0 304 Not Modified\") ;\n        header ('Content-Length: 0') ;\n    } else {\n        // First time visit or files were modified\n        if( $cache ) {\n            // Determine supported compression method\n            $gzip    = strstr($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') ;\n            $deflate = strstr($_SERVER['HTTP_ACCEPT_ENCODING'], 'deflate') ;\n\n            // Determine used compression method\n            $encoding = $gzip ? 'gzip' : ($deflate ? 'deflate' : 'none') ;\n\n            // Check for buggy versions of Internet Explorer\n            if( !strstr($_SERVER['HTTP_USER_AGENT'], 'Opera') && \n                preg_match('/^Mozilla\\/4\\.0 \\(compatible; MSIE ([0-9]\\.[0-9])/i', $_SERVER['HTTP_USER_AGENT'], $matches) ) {\n                $version = floatval($matches[1]) ;\n\n                if( $version < 6 ) {\n                    $encoding = 'none';\n                }\n                if( $version == 6 && !strstr($_SERVER['HTTP_USER_AGENT'], 'EV1') ) {\n                    $encoding = 'none';\n                }\n            }\n\n            // Try the cache first to see if the combined files were already generated\n            $cachefile = 'cache-' . $hash . '.' . $type . ($encoding != 'none' ? '.' . $encoding : '') ;\n\n            if( file_exists($cachedir . '/' . $cachefile) ) {\n                if( $fp = fopen($cachedir . '/' . $cachefile, 'rb') ) {\n                    if( $encoding != 'none' ) {\n                        header (\"Content-Encoding: \" . $encoding) ;\n                    }\n\n                    header( \"Content-Type: text/\" . $type) ;\n                    header( \"Content-Length: \" . filesize($cachedir . '/' . $cachefile) ) ;\n\n                    fpassthru($fp) ;\n                    fclose($fp) ;\n                    exit ;\n                }\n            }\n        }\n\n        // Get contents of the files\n        $contents = '' ;\n        reset($elements) ;\n        while( list(,$element) = each($elements) ) {\n            $path      = realpath($base . '/' . $element) ;\n            $contents .= \"\\n\\n\" . file_get_contents($path) ;\n        }\n\n        // Send Content-Type\n        header (\"Content-Type: text/\" . $type) ;\n\n        if (isset($encoding) && $encoding != 'none') {\n            // Send compressed contents\n            $contents = gzencode($contents, 9, $gzip ? FORCE_GZIP : FORCE_DEFLATE) ;\n            header( \"Content-Encoding: \" . $encoding ) ;\n            header( 'Content-Length: ' . strlen($contents) ) ;\n            echo $contents ;\n        } else {\n            // Send regular contents\n            header( 'Content-Length: ' . strlen($contents) ) ;\n            echo $contents ;\n        }\n\n        // Store cache\n        if( $cache ) {\n            if( $fp = fopen($cachedir . '/' . $cachefile, 'wb') ) {\n                fwrite($fp, $contents) ;\n                fclose($fp) ;\n            }\n        }\n    }\n\n?>", "<?php\n\n    /************************************************************************\n     * CSS and Javascript Combinator 0.5\n     * Copyright 2006 by Niels Leenheer\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining\n     * a copy of this software and associated documentation files (the\n     * \"Software\"), to deal in the Software without restriction, including\n     * without limitation the rights to use, copy, modify, merge, publish,\n     * distribute, sublicense, and/or sell copies of the Software, and to\n     * permit persons to whom the Software is furnished to do so, subject to\n     * the following conditions:\n     * \n     * The above copyright notice and this permission notice shall be\n     * included in all copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n     * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n     * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n     * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n     * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n     * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n     * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n     */\n\n    $cache    = true;\n    $cachedir = '../../uploads';\n    $base     = dirname(__FILE__);\n\n    $type     = $_GET['type'];\n    $elements = explode(',', $_GET['files']);\n\n    // Determine last modification date of the files\n    $lastmodified = 0;\n    while( list(,$element) = each($elements) ) {\n        $path = realpath($base . '/' . $element) ;\n\n        if( ($type != 'js' && $type != 'css') || \n            ($type == 'js' && substr($path, -3) != '.js') || \n            ($type == 'css' && substr($path, -4) != '.css') ) {\n            header (\"HTTP/1.0 403 Forbidden\") ;\n            exit ;\n        }\n\n        if (substr($path, 0, strlen($base)) != $base || !file_exists($path)) {\n            header (\"HTTP/1.0 404 Not Found\");\n            exit;\n        }\n\n        $lastmodified = max($lastmodified, filemtime($path));\n    }\n\n    // Send Etag hash\n    $hash = $lastmodified . '-' . md5($_GET['files']);\n    header (\"Etag: \\\"\" . $hash . \"\\\"\");\n\n    if( isset($_SERVER['HTTP_IF_NONE_MATCH']) && \n        stripslashes($_SERVER['HTTP_IF_NONE_MATCH']) == '\"' . $hash . '\"' ) {\n        // Return visit and no modifications, so do not send anything\n        header (\"HTTP/1.0 304 Not Modified\") ;\n        header ('Content-Length: 0') ;\n    } else {\n        // First time visit or files were modified\n        if( $cache ) {\n            // Determine supported compression method\n            $gzip    = strstr($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') ;\n            $deflate = strstr($_SERVER['HTTP_ACCEPT_ENCODING'], 'deflate') ;\n\n            // Determine used compression method\n            $encoding = $gzip ? 'gzip' : ($deflate ? 'deflate' : 'none') ;\n\n            // Check for buggy versions of Internet Explorer\n            if( !strstr($_SERVER['HTTP_USER_AGENT'], 'Opera') && \n                preg_match('/^Mozilla\\/4\\.0 \\(compatible; MSIE ([0-9]\\.[0-9])/i', $_SERVER['HTTP_USER_AGENT'], $matches) ) {\n                $version = floatval($matches[1]) ;\n\n                if( $version < 6 ) {\n                    $encoding = 'none';\n                }\n                if( $version == 6 && !strstr($_SERVER['HTTP_USER_AGENT'], 'EV1') ) {\n                    $encoding = 'none';\n                }\n            }\n\n            // Try the cache first to see if the combined files were already generated\n            $cachefile = 'cache-' . $hash . '.' . $type . ($encoding != 'none' ? '.' . $encoding : '') ;\n\n            if( file_exists($cachedir . '/' . $cachefile) ) {\n                if( $fp = fopen($cachedir . '/' . $cachefile, 'rb') ) {\n                    if( $encoding != 'none' ) {\n                        header (\"Content-Encoding: \" . $encoding) ;\n                    }\n\n                    header( \"Content-Type: text/\" . $type) ;\n                    header( \"Content-Length: \" . filesize($cachedir . '/' . $cachefile) ) ;\n\n                    fpassthru($fp) ;\n                    fclose($fp) ;\n                    exit ;\n                }\n            }\n        }\n\n        // Get contents of the files\n        $contents = '' ;\n        reset($elements) ;\n        while( list(,$element) = each($elements) ) {\n            $path      = realpath($base . '/' . $element) ;\n            $contents .= \"\\n\\n\" . file_get_contents($path) ;\n        }\n\n        // Send Content-Type\n        header (\"Content-Type: text/\" . $type) ;\n\n        if (isset($encoding) && $encoding != 'none') {\n            // Send compressed contents\n            $contents = gzencode($contents, 9, $gzip ? FORCE_GZIP : FORCE_DEFLATE) ;\n            header( \"Content-Encoding: \" . $encoding ) ;\n            header( 'Content-Length: ' . strlen($contents) ) ;\n            echo $contents ;\n        } else {\n            // Send regular contents\n            header( 'Content-Length: ' . strlen($contents) ) ;\n            echo $contents ;\n        }\n\n        // Store cache\n        if( $cache ) {\n            if( $fp = fopen($cachedir . '/' . $cachefile, 'wb') ) {\n                fwrite($fp, $contents) ;\n                fclose($fp) ;\n            }\n        }\n    }\n\n?>"], "fixing_code": ["<?php\n\n    /************************************************************************\n     * CSS and Javascript Combinator 0.5\n     * Copyright 2006 by Niels Leenheer\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining\n     * a copy of this software and associated documentation files (the\n     * \"Software\"), to deal in the Software without restriction, including\n     * without limitation the rights to use, copy, modify, merge, publish,\n     * distribute, sublicense, and/or sell copies of the Software, and to\n     * permit persons to whom the Software is furnished to do so, subject to\n     * the following conditions:\n     * \n     * The above copyright notice and this permission notice shall be\n     * included in all copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n     * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n     * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n     * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n     * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n     * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n     * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n     */\n\n    $cache    = true;\n    $cachedir = '../../uploads';\n    $base     = dirname(__FILE__);\n\n    $type     = $_GET['type'];\n    $elements = explode(',', $_GET['files']);\n\n    if( !in_array($type, array('css', 'js')) ) {\n        header (\"HTTP/1.0 403 Forbidden\") ;\n        exit ;\n    }\n\n    // Determine last modification date of the files\n    $lastmodified = 0;\n    while( list(,$element) = each($elements) ) {\n        $path = realpath($base . '/' . $element) ;\n\n        if( ($type != 'js' && $type != 'css') || \n            ($type == 'js' && substr($path, -3) != '.js') || \n            ($type == 'css' && substr($path, -4) != '.css') ) {\n            header (\"HTTP/1.0 403 Forbidden\") ;\n            exit ;\n        }\n\n        if (substr($path, 0, strlen($base)) != $base || !file_exists($path)) {\n            header (\"HTTP/1.0 404 Not Found\");\n            exit;\n        }\n\n        $lastmodified = max($lastmodified, filemtime($path));\n    }\n\n    // Send Etag hash\n    $hash = $lastmodified . '-' . md5($_GET['files']);\n    header (\"Etag: \\\"\" . $hash . \"\\\"\");\n\n    if( isset($_SERVER['HTTP_IF_NONE_MATCH']) && \n        stripslashes($_SERVER['HTTP_IF_NONE_MATCH']) == '\"' . $hash . '\"' ) {\n        // Return visit and no modifications, so do not send anything\n        header (\"HTTP/1.0 304 Not Modified\") ;\n        header ('Content-Length: 0') ;\n    } else {\n        // First time visit or files were modified\n        if( $cache ) {\n            // Determine supported compression method\n            $gzip    = strstr($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') ;\n            $deflate = strstr($_SERVER['HTTP_ACCEPT_ENCODING'], 'deflate') ;\n\n            // Determine used compression method\n            $encoding = $gzip ? 'gzip' : ($deflate ? 'deflate' : 'none') ;\n\n            // Check for buggy versions of Internet Explorer\n            if( !strstr($_SERVER['HTTP_USER_AGENT'], 'Opera') && \n                preg_match('/^Mozilla\\/4\\.0 \\(compatible; MSIE ([0-9]\\.[0-9])/i', $_SERVER['HTTP_USER_AGENT'], $matches) ) {\n                $version = floatval($matches[1]) ;\n\n                if( $version < 6 ) {\n                    $encoding = 'none';\n                }\n                if( $version == 6 && !strstr($_SERVER['HTTP_USER_AGENT'], 'EV1') ) {\n                    $encoding = 'none';\n                }\n            }\n\n            // Try the cache first to see if the combined files were already generated\n            $cachefile = 'cache-' . $hash . '.' . $type . ($encoding != 'none' ? '.' . $encoding : '') ;\n\n            if( file_exists($cachedir . '/' . $cachefile) ) {\n                if( $fp = fopen($cachedir . '/' . $cachefile, 'rb') ) {\n                    if( $encoding != 'none' ) {\n                        header (\"Content-Encoding: \" . $encoding) ;\n                    }\n\n                    header( \"Content-Type: text/\" . $type) ;\n                    header( \"Content-Length: \" . filesize($cachedir . '/' . $cachefile) ) ;\n\n                    fpassthru($fp) ;\n                    fclose($fp) ;\n                    exit ;\n                }\n            }\n        }\n\n        // Get contents of the files\n        $contents = '' ;\n        reset($elements) ;\n        while( list(,$element) = each($elements) ) {\n            $path      = realpath($base . '/' . $element) ;\n            $contents .= \"\\n\\n\" . file_get_contents($path) ;\n        }\n\n        // Send Content-Type\n        header (\"Content-Type: text/\" . $type) ;\n\n        if (isset($encoding) && $encoding != 'none') {\n            // Send compressed contents\n            $contents = gzencode($contents, 9, $gzip ? FORCE_GZIP : FORCE_DEFLATE) ;\n            header( \"Content-Encoding: \" . $encoding ) ;\n            header( 'Content-Length: ' . strlen($contents) ) ;\n            echo $contents ;\n        } else {\n            // Send regular contents\n            header( 'Content-Length: ' . strlen($contents) ) ;\n            echo $contents ;\n        }\n\n        // Store cache\n        if( $cache ) {\n            if( $fp = fopen($cachedir . '/' . $cachefile, 'wb') ) {\n                fwrite($fp, $contents) ;\n                fclose($fp) ;\n            }\n        }\n    }\n\n?>", "<?php\n\n    /************************************************************************\n     * CSS and Javascript Combinator 0.5\n     * Copyright 2006 by Niels Leenheer\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining\n     * a copy of this software and associated documentation files (the\n     * \"Software\"), to deal in the Software without restriction, including\n     * without limitation the rights to use, copy, modify, merge, publish,\n     * distribute, sublicense, and/or sell copies of the Software, and to\n     * permit persons to whom the Software is furnished to do so, subject to\n     * the following conditions:\n     * \n     * The above copyright notice and this permission notice shall be\n     * included in all copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n     * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n     * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n     * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n     * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n     * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n     * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n     */\n\n    $cache    = true;\n    $cachedir = '../../uploads';\n    $base     = dirname(__FILE__);\n\n    $type     = $_GET['type'];\n    $elements = explode(',', $_GET['files']);\n\n    if( !in_array($type, array('css', 'js')) ) {\n        header (\"HTTP/1.0 403 Forbidden\") ;\n        exit ;\n    }\n\n    // Determine last modification date of the files\n    $lastmodified = 0;\n    while( list(,$element) = each($elements) ) {\n        $path = realpath($base . '/' . $element) ;\n\n        if( ($type != 'js' && $type != 'css') || \n            ($type == 'js' && substr($path, -3) != '.js') || \n            ($type == 'css' && substr($path, -4) != '.css') ) {\n            header (\"HTTP/1.0 403 Forbidden\") ;\n            exit ;\n        }\n\n        if (substr($path, 0, strlen($base)) != $base || !file_exists($path)) {\n            header (\"HTTP/1.0 404 Not Found\");\n            exit;\n        }\n\n        $lastmodified = max($lastmodified, filemtime($path));\n    }\n\n    // Send Etag hash\n    $hash = $lastmodified . '-' . md5($_GET['files']);\n    header (\"Etag: \\\"\" . $hash . \"\\\"\");\n\n    if( isset($_SERVER['HTTP_IF_NONE_MATCH']) && \n        stripslashes($_SERVER['HTTP_IF_NONE_MATCH']) == '\"' . $hash . '\"' ) {\n        // Return visit and no modifications, so do not send anything\n        header (\"HTTP/1.0 304 Not Modified\") ;\n        header ('Content-Length: 0') ;\n    } else {\n        // First time visit or files were modified\n        if( $cache ) {\n            // Determine supported compression method\n            $gzip    = strstr($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') ;\n            $deflate = strstr($_SERVER['HTTP_ACCEPT_ENCODING'], 'deflate') ;\n\n            // Determine used compression method\n            $encoding = $gzip ? 'gzip' : ($deflate ? 'deflate' : 'none') ;\n\n            // Check for buggy versions of Internet Explorer\n            if( !strstr($_SERVER['HTTP_USER_AGENT'], 'Opera') && \n                preg_match('/^Mozilla\\/4\\.0 \\(compatible; MSIE ([0-9]\\.[0-9])/i', $_SERVER['HTTP_USER_AGENT'], $matches) ) {\n                $version = floatval($matches[1]) ;\n\n                if( $version < 6 ) {\n                    $encoding = 'none';\n                }\n                if( $version == 6 && !strstr($_SERVER['HTTP_USER_AGENT'], 'EV1') ) {\n                    $encoding = 'none';\n                }\n            }\n\n            // Try the cache first to see if the combined files were already generated\n            $cachefile = 'cache-' . $hash . '.' . $type . ($encoding != 'none' ? '.' . $encoding : '') ;\n\n            if( file_exists($cachedir . '/' . $cachefile) ) {\n                if( $fp = fopen($cachedir . '/' . $cachefile, 'rb') ) {\n                    if( $encoding != 'none' ) {\n                        header (\"Content-Encoding: \" . $encoding) ;\n                    }\n\n                    header( \"Content-Type: text/\" . $type) ;\n                    header( \"Content-Length: \" . filesize($cachedir . '/' . $cachefile) ) ;\n\n                    fpassthru($fp) ;\n                    fclose($fp) ;\n                    exit ;\n                }\n            }\n        }\n\n        // Get contents of the files\n        $contents = '' ;\n        reset($elements) ;\n        while( list(,$element) = each($elements) ) {\n            $path      = realpath($base . '/' . $element) ;\n            $contents .= \"\\n\\n\" . file_get_contents($path) ;\n        }\n\n        // Send Content-Type\n        header (\"Content-Type: text/\" . $type) ;\n\n        if (isset($encoding) && $encoding != 'none') {\n            // Send compressed contents\n            $contents = gzencode($contents, 9, $gzip ? FORCE_GZIP : FORCE_DEFLATE) ;\n            header( \"Content-Encoding: \" . $encoding ) ;\n            header( 'Content-Length: ' . strlen($contents) ) ;\n            echo $contents ;\n        } else {\n            // Send regular contents\n            header( 'Content-Length: ' . strlen($contents) ) ;\n            echo $contents ;\n        }\n\n        // Store cache\n        if( $cache ) {\n            if( $fp = fopen($cachedir . '/' . $cachefile, 'wb') ) {\n                fwrite($fp, $contents) ;\n                fclose($fp) ;\n            }\n        }\n    }\n\n?>"], "filenames": ["oc-content/themes/modern/combine.php", "oc-includes/osclass/gui/combine.php"], "buggy_code_start_loc": [32, 32], "buggy_code_end_loc": [32, 32], "fixing_code_start_loc": [33, 33], "fixing_code_end_loc": [38, 38], "type": "CWE-22", "message": "Directory traversal vulnerability in combine.php in OSClass before 2.3.6 allows remote attackers to read and write arbitrary files via a .. (dot dot) in the type parameter.  NOTE: this vulnerability can be leveraged to upload arbitrary files.", "other": {"cve": {"id": "CVE-2012-1617", "sourceIdentifier": "secalert@redhat.com", "published": "2012-09-26T00:55:01.097", "lastModified": "2017-08-29T01:31:19.757", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Directory traversal vulnerability in combine.php in OSClass before 2.3.6 allows remote attackers to read and write arbitrary files via a .. (dot dot) in the type parameter.  NOTE: this vulnerability can be leveraged to upload arbitrary files."}, {"lang": "es", "value": "Vulnerabilidad de salto de directorio en combine.php en OSClass antes de v2.3.6, permite a atacantes remotos leer y escribir archivos de su elecci\u00f3n a trav\u00e9s de un .. (punto punto) en el par\u00e1metro type. NOTA: esta vulnerabilidad se puede aprovechar para subir archivos arbitrarios."}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 6.4}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.3.5", "matchCriteriaId": "8A385C7F-A038-42A9-B9B1-C0EC78B005CF"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:1.1:*:*:*:*:*:*:*", "matchCriteriaId": "8A0C9D77-644D-4AE2-881E-6C14825886F5"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:1.1:rc:*:*:*:*:*:*", "matchCriteriaId": "EABC0861-6C9B-40B9-9871-2E158DC19CFA"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:1.2:alpha:*:*:*:*:*:*", "matchCriteriaId": "E4D7E60A-743A-4CC2-A3AC-09E7DE8115CB"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:1.2:beta:*:*:*:*:*:*", "matchCriteriaId": "99A04C8A-5E76-4FE6-B8CA-5FDD56912496"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:1.2:delta:*:*:*:*:*:*", "matchCriteriaId": "BD619E64-845F-40E2-A311-15DAEA693C66"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.0:*:*:*:*:*:*:*", "matchCriteriaId": "6E691EBA-D635-4C46-8F4C-14E3C653E190"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.0:rc:*:*:*:*:*:*", "matchCriteriaId": "5947B545-716D-4614-B7CE-197F13CDD11F"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.0.1:*:*:*:*:*:*:*", "matchCriteriaId": "C1B2493D-C760-4538-9842-4CF8E70DA0DA"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.0.2:*:*:*:*:*:*:*", "matchCriteriaId": "8CFE4EB5-F8D6-4A77-B3E4-188B8954EA23"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.0.3:*:*:*:*:*:*:*", "matchCriteriaId": "F7ACDE37-2C18-4FB5-943F-4F8A537F1CB1"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.1:*:*:*:*:*:*:*", "matchCriteriaId": "7E4443D3-EE5C-4AF7-8E18-A63DA8815E29"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.1.1:*:*:*:*:*:*:*", "matchCriteriaId": "6698BFB3-F335-4D0A-A8DC-BE21B3E8FBE8"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.2:*:*:*:*:*:*:*", "matchCriteriaId": "766E444D-A072-4E49-A4F2-6A5694AA9809"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.2.1:*:*:*:*:*:*:*", "matchCriteriaId": "BED47F6E-1F40-473F-AF7D-6EE8768092C3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.2.2:*:*:*:*:*:*:*", "matchCriteriaId": "34DB73BA-8CC6-4850-A17A-5E884D60E77E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.2.3:*:*:*:*:*:*:*", "matchCriteriaId": "CE27453E-19F6-4492-BF84-C9245A7BF57E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.3:*:*:*:*:*:*:*", "matchCriteriaId": "C6DC1AE9-D118-4E5A-BAD4-D3DC968E6B46"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.3.1:*:*:*:*:*:*:*", "matchCriteriaId": "087D8F16-EFC6-4064-8D03-95E6D8568794"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.3.2:*:*:*:*:*:*:*", "matchCriteriaId": "63D9548C-48EE-499A-9719-56EC25E8DC09"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.3.3:*:*:*:*:*:*:*", "matchCriteriaId": "B1BC833E-8126-42C5-B21A-A0065F58C11F"}, {"vulnerable": true, "criteria": "cpe:2.3:a:juan_ramon:osclass:2.3.4:*:*:*:*:*:*:*", "matchCriteriaId": "6712C780-3A74-4733-A453-A776244CA9A2"}]}]}], "references": [{"url": "http://archives.neohapsis.com/archives/bugtraq/2012-03/0024.html", "source": "secalert@redhat.com", "tags": ["Exploit"]}, {"url": "http://osclass.org/2012/03/05/osclass-2-3-6/", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}, {"url": "http://www.codseq.it/advisories/osclass_directory_traversal_vulnerability", "source": "secalert@redhat.com", "tags": ["Exploit"]}, {"url": "http://www.openwall.com/lists/oss-security/2012/04/02/1", "source": "secalert@redhat.com"}, {"url": "http://www.openwall.com/lists/oss-security/2012/04/02/6", "source": "secalert@redhat.com"}, {"url": "http://www.openwall.com/lists/oss-security/2012/04/03/1", "source": "secalert@redhat.com", "tags": ["Exploit"]}, {"url": "http://www.openwall.com/lists/oss-security/2012/04/04/7", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}, {"url": "http://www.securityfocus.com/bid/52336", "source": "secalert@redhat.com", "tags": ["Exploit"]}, {"url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/73754", "source": "secalert@redhat.com"}, {"url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/73755", "source": "secalert@redhat.com"}, {"url": "https://github.com/osclass/OSClass/commit/1e7626f4e1a26371480989c0b937f107ea9a6d4b", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}, {"url": "https://github.com/osclass/OSClass/commit/a40b76695994442644e46e1b776d79660500566a", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}, {"url": "https://github.com/osclass/OSClass/commit/ff7ef8a97301aaaf6a97fe46c2c27981a86b4e2f#diff-1", "source": "secalert@redhat.com", "tags": ["Exploit", "Patch"]}]}, "github_commit_url": "https://github.com/osclass/OSClass/commit/1e7626f4e1a26371480989c0b937f107ea9a6d4b"}}