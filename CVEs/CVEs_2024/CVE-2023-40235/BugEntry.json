{"buggy_code": ["/**\r\n * This program and the accompanying materials\r\n * are made available under the terms of the License\r\n * which accompanies this distribution in the file LICENSE.txt\r\n */\r\npackage com.archimatetool.model.util;\r\n\r\nimport java.io.File;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport org.eclipse.emf.common.util.URI;\r\nimport org.eclipse.emf.ecore.EObject;\r\nimport org.eclipse.emf.ecore.resource.Resource;\r\nimport org.eclipse.emf.ecore.resource.ResourceSet;\r\nimport org.eclipse.emf.ecore.resource.impl.ResourceFactoryImpl;\r\nimport org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;\r\nimport org.eclipse.emf.ecore.util.ExtendedMetaData;\r\nimport org.eclipse.emf.ecore.xmi.XMLResource;\r\n\r\n\r\n/**\r\n * <!-- begin-user-doc -->\r\n * The <b>Resource Factory</b> associated with the package.\r\n * <!-- end-user-doc -->\r\n * @see com.archimatetool.model.util.ArchimateResource\r\n * @generated\r\n */\r\npublic class ArchimateResourceFactory extends ResourceFactoryImpl {\r\n    \r\n    /**\r\n     * Creates an instance of the resource factory.\r\n     * <!-- begin-user-doc -->\r\n     * <!-- end-user-doc -->\r\n     * @generated\r\n     */\r\n    public ArchimateResourceFactory() {\r\n        super();\r\n    }\r\n    \r\n    /**\r\n     * @return a Resource that allows saving and loading files with any type of file extension\r\n     *          as registered in plugin.xml\r\n     */\r\n    public static Resource createNewResource(File file) {\r\n        return createNewResource(URI.createFileURI(file.getAbsolutePath()));\r\n    }\r\n\r\n    /**\r\n     * @return a Resource that allows saving and loading files with any type of file extension\r\n     *          as registered in plugin.xml\r\n     */\r\n    public static Resource createNewResource(URI uri) {\r\n        // This will return an ArchimateResource as registered in plugin.xml\r\n        ResourceSet resourceSet = createResourceSet();\r\n        return resourceSet.createResource(uri);\r\n    }\r\n\r\n    /**\r\n     * @return a ResourceSet that allows saving and loading files with any type of extension\r\n     */\r\n    public static ResourceSet createResourceSet() {\r\n        ResourceSet resourceSet = new ResourceSetImpl();\r\n        \r\n        /*\r\n         * Register the * extension on the ResourceSet to over-ride the ECore global one \r\n         * This is needed to create an ArchimateModel object from any file (thus pattern \"*\") without relying on its extension.\r\n         * Without this code it is impossible to load a model from file without extension (error \"Class 'model' is not found or is abstract\").\r\n         */\r\n        resourceSet.getResourceFactoryRegistry().getExtensionToFactoryMap().put(\"*\", new ArchimateResourceFactory());  //$NON-NLS-1$\r\n        \r\n        return resourceSet;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the resource.\r\n     * <!-- begin-user-doc -->\r\n     * <!-- end-user-doc -->\r\n     * @generated NOT\r\n     */\r\n    @Override\r\n    public Resource createResource(URI uri) {\r\n        ArchimateResource resource = new ArchimateResource(uri);\r\n        \r\n        // Ensure we have ExtendedMetaData for both Saving and Loading\r\n        ExtendedMetaData ext = new ConverterExtendedMetadata();\r\n\r\n        resource.getDefaultLoadOptions().put(XMLResource.OPTION_EXTENDED_META_DATA, ext);\r\n        resource.getDefaultSaveOptions().put(XMLResource.OPTION_EXTENDED_META_DATA, ext);\r\n\r\n        resource.getDefaultSaveOptions().put(XMLResource.OPTION_ENCODING, \"UTF-8\"); //$NON-NLS-1$\r\n        resource.getDefaultLoadOptions().put(XMLResource.OPTION_ENCODING, \"UTF-8\"); //$NON-NLS-1$\r\n        \r\n        resource.getDefaultLoadOptions().put(XMLResource.OPTION_DEFER_IDREF_RESOLUTION, Boolean.TRUE);\r\n        resource.setIntrinsicIDToEObjectMap(new HashMap<String, EObject>());\r\n        \r\n        \r\n        Map<String, Object> parserFeatures = new HashMap<String, Object>();\r\n        // Don't allow DTD loading in case of XSS exploits\r\n        parserFeatures.put(\"http://apache.org/xml/features/disallow-doctype-decl\", Boolean.TRUE); //$NON-NLS-1$\r\n        parserFeatures.put(\"http://apache.org/xml/features/nonvalidating/load-external-dtd\", Boolean.FALSE); //$NON-NLS-1$\r\n        parserFeatures.put(\"http://xml.org/sax/features/external-general-entities\", Boolean.FALSE); //$NON-NLS-1$\r\n        parserFeatures.put(\"http://xml.org/sax/features/external-parameter-entities\", Boolean.FALSE); //$NON-NLS-1$\r\n        resource.getDefaultLoadOptions().put(XMLResource.OPTION_PARSER_FEATURES, parserFeatures);\r\n        \r\n        // Not sure about this\r\n        // resource.getDefaultSaveOptions().put(XMLResource.OPTION_SCHEMA_LOCATION, Boolean.TRUE);\r\n\r\n        // Don't set this as it prefixes a hash # to ID references\r\n        // resource.getDefaultLoadOptions().put(XMLResource.OPTION_USE_ENCODED_ATTRIBUTE_STYLE, Boolean.TRUE);\r\n        // resource.getDefaultSaveOptions().put(XMLResource.OPTION_USE_ENCODED_ATTRIBUTE_STYLE, Boolean.TRUE);\r\n\r\n        // Not sure about this\r\n        // resource.getDefaultLoadOptions().put(XMLResource.OPTION_USE_LEXICAL_HANDLER, Boolean.TRUE);\r\n        \r\n        return resource;\r\n    }\r\n\r\n} //ArchimateResourceFactory\r\n"], "fixing_code": ["/**\r\n * This program and the accompanying materials\r\n * are made available under the terms of the License\r\n * which accompanies this distribution in the file LICENSE.txt\r\n */\r\npackage com.archimatetool.model.util;\r\n\r\nimport java.io.File;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport org.eclipse.emf.common.util.URI;\r\nimport org.eclipse.emf.ecore.EObject;\r\nimport org.eclipse.emf.ecore.resource.Resource;\r\nimport org.eclipse.emf.ecore.resource.ResourceSet;\r\nimport org.eclipse.emf.ecore.resource.impl.ResourceFactoryImpl;\r\nimport org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;\r\nimport org.eclipse.emf.ecore.util.ExtendedMetaData;\r\nimport org.eclipse.emf.ecore.xmi.XMLResource;\r\n\r\n\r\n/**\r\n * <!-- begin-user-doc -->\r\n * The <b>Resource Factory</b> associated with the package.\r\n * <!-- end-user-doc -->\r\n * @see com.archimatetool.model.util.ArchimateResource\r\n * @generated\r\n */\r\npublic class ArchimateResourceFactory extends ResourceFactoryImpl {\r\n    \r\n    /**\r\n     * Creates an instance of the resource factory.\r\n     * <!-- begin-user-doc -->\r\n     * <!-- end-user-doc -->\r\n     * @generated\r\n     */\r\n    public ArchimateResourceFactory() {\r\n        super();\r\n    }\r\n    \r\n    /**\r\n     * @return a Resource that allows saving and loading files with any type of file extension\r\n     *          as registered in plugin.xml\r\n     */\r\n    public static Resource createNewResource(File file) {\r\n        return createNewResource(URI.createFileURI(file.getAbsolutePath()));\r\n    }\r\n\r\n    /**\r\n     * @return a Resource that allows saving and loading files with any type of file extension\r\n     *          as registered in plugin.xml\r\n     */\r\n    public static Resource createNewResource(URI uri) {\r\n        // This will return an ArchimateResource as registered in plugin.xml\r\n        ResourceSet resourceSet = createResourceSet();\r\n        return resourceSet.createResource(uri);\r\n    }\r\n\r\n    /**\r\n     * @return a ResourceSet that allows saving and loading files with any type of extension\r\n     */\r\n    public static ResourceSet createResourceSet() {\r\n        ResourceSet resourceSet = new ResourceSetImpl();\r\n        \r\n        /*\r\n         * Register the * extension on the ResourceSet to over-ride the ECore global one \r\n         * This is needed to create an ArchimateModel object from any file (thus pattern \"*\") without relying on its extension.\r\n         * Without this code it is impossible to load a model from file without extension (error \"Class 'model' is not found or is abstract\").\r\n         */\r\n        resourceSet.getResourceFactoryRegistry().getExtensionToFactoryMap().put(\"*\", new ArchimateResourceFactory());  //$NON-NLS-1$\r\n        \r\n        return resourceSet;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the resource.\r\n     * <!-- begin-user-doc -->\r\n     * <!-- end-user-doc -->\r\n     * @generated NOT\r\n     */\r\n    @Override\r\n    public Resource createResource(URI uri) {\r\n        ArchimateResource resource = new ArchimateResource(uri);\r\n        \r\n        // Ensure we have ExtendedMetaData for both Saving and Loading\r\n        ExtendedMetaData ext = new ConverterExtendedMetadata();\r\n\r\n        resource.getDefaultLoadOptions().put(XMLResource.OPTION_EXTENDED_META_DATA, ext);\r\n        resource.getDefaultSaveOptions().put(XMLResource.OPTION_EXTENDED_META_DATA, ext);\r\n\r\n        resource.getDefaultSaveOptions().put(XMLResource.OPTION_ENCODING, \"UTF-8\"); //$NON-NLS-1$\r\n        resource.getDefaultLoadOptions().put(XMLResource.OPTION_ENCODING, \"UTF-8\"); //$NON-NLS-1$\r\n        \r\n        resource.getDefaultLoadOptions().put(XMLResource.OPTION_DEFER_IDREF_RESOLUTION, Boolean.TRUE);\r\n        resource.setIntrinsicIDToEObjectMap(new HashMap<String, EObject>());\r\n        \r\n        // Don't allow loading an unregistered URI in case of exploits\r\n        resource.getDefaultLoadOptions().put(XMLResource.OPTION_USE_PACKAGE_NS_URI_AS_LOCATION, false);\r\n        \r\n        Map<String, Object> parserFeatures = new HashMap<String, Object>();\r\n        // Don't allow DTD loading in case of XSS exploits\r\n        parserFeatures.put(\"http://apache.org/xml/features/disallow-doctype-decl\", Boolean.TRUE); //$NON-NLS-1$\r\n        parserFeatures.put(\"http://apache.org/xml/features/nonvalidating/load-external-dtd\", Boolean.FALSE); //$NON-NLS-1$\r\n        parserFeatures.put(\"http://xml.org/sax/features/external-general-entities\", Boolean.FALSE); //$NON-NLS-1$\r\n        parserFeatures.put(\"http://xml.org/sax/features/external-parameter-entities\", Boolean.FALSE); //$NON-NLS-1$\r\n        resource.getDefaultLoadOptions().put(XMLResource.OPTION_PARSER_FEATURES, parserFeatures);\r\n        \r\n        // Not sure about this\r\n        // resource.getDefaultSaveOptions().put(XMLResource.OPTION_SCHEMA_LOCATION, Boolean.TRUE);\r\n\r\n        // Don't set this as it prefixes a hash # to ID references\r\n        // resource.getDefaultLoadOptions().put(XMLResource.OPTION_USE_ENCODED_ATTRIBUTE_STYLE, Boolean.TRUE);\r\n        // resource.getDefaultSaveOptions().put(XMLResource.OPTION_USE_ENCODED_ATTRIBUTE_STYLE, Boolean.TRUE);\r\n\r\n        // Not sure about this\r\n        // resource.getDefaultLoadOptions().put(XMLResource.OPTION_USE_LEXICAL_HANDLER, Boolean.TRUE);\r\n        \r\n        return resource;\r\n    }\r\n\r\n} //ArchimateResourceFactory\r\n"], "filenames": ["com.archimatetool.model/src/com/archimatetool/model/util/ArchimateResourceFactory.java"], "buggy_code_start_loc": [96], "buggy_code_end_loc": [96], "fixing_code_start_loc": [97], "fixing_code_end_loc": [99], "type": "NVD-CWE-noinfo", "message": "An NTLM Hash Disclosure was discovered in ArchiMate Archi before 5.1.0. When parsing the XMLNS value of an ArchiMate project file, if the namespace does not match the expected ArchiMate URL, the parser will access the provided resource. If the provided resource is a UNC path pointing to a share server that does not accept a guest account, the host will try to authenticate on the share by using the current user's session. NOTE: this issue occurs because Archi uses an unsafe configuration of the Eclipse Modeling Framework.", "other": {"cve": {"id": "CVE-2023-40235", "sourceIdentifier": "cve@mitre.org", "published": "2023-08-10T23:15:09.957", "lastModified": "2023-08-21T14:38:48.630", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "An NTLM Hash Disclosure was discovered in ArchiMate Archi before 5.1.0. When parsing the XMLNS value of an ArchiMate project file, if the namespace does not match the expected ArchiMate URL, the parser will access the provided resource. If the provided resource is a UNC path pointing to a share server that does not accept a guest account, the host will try to authenticate on the share by using the current user's session. NOTE: this issue occurs because Archi uses an unsafe configuration of the Eclipse Modeling Framework."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:opengroup:archi:*:*:*:*:*:*:*:*", "versionEndExcluding": "5.1.0", "matchCriteriaId": "C770113C-74AA-4FDD-9AA4-CFC3FD4CEEC6"}]}]}], "references": [{"url": "https://github.com/archimatetool/archi/commit/bcab676beddfbeddffecacf755b6692f0b0151f1", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://github.com/archimatetool/archi/compare/release_5.0.2...release_5.1.0", "source": "cve@mitre.org", "tags": ["Release Notes"]}, {"url": "https://github.com/archimatetool/archi/issues/946", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Vendor Advisory"]}, {"url": "https://github.com/eclipse-emf/org.eclipse.emf/issues/8", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/archimatetool/archi/commit/bcab676beddfbeddffecacf755b6692f0b0151f1"}}