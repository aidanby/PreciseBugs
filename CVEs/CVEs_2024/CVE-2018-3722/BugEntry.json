{"buggy_code": ["/*!\n * merge-deep <https://github.com/jonschlinkert/merge-deep>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar utils = require('./utils');\n\nmodule.exports = function mergeDeep(orig, objects) {\n  if (!utils.isObject(orig) && !Array.isArray(orig)) {\n    orig = {};\n  }\n\n  var target = utils.clone(orig);\n  var len = arguments.length;\n  var idx = 0;\n\n  while (++idx < len) {\n    var val = arguments[idx];\n\n    if (utils.isObject(val) || Array.isArray(val)) {\n      merge(target, val);\n    }\n  }\n  return target;\n};\n\nfunction merge(target, obj) {\n  for (var key in obj) {\n    if (!hasOwn(obj, key)) {\n      continue;\n    }\n\n    var oldVal = obj[key];\n    var newVal = target[key];\n\n    if (utils.isObject(newVal) && utils.isObject(oldVal)) {\n      target[key] = merge(newVal, oldVal);\n    } else if (Array.isArray(newVal)) {\n      target[key] = utils.union([], newVal, oldVal);\n    } else {\n      target[key] = utils.clone(oldVal);\n    }\n  }\n  return target;\n}\n\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n"], "fixing_code": ["/*!\n * merge-deep <https://github.com/jonschlinkert/merge-deep>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar utils = require('./utils');\n\nmodule.exports = function mergeDeep(orig, objects) {\n  if (!utils.isObject(orig) && !Array.isArray(orig)) {\n    orig = {};\n  }\n\n  var target = utils.clone(orig);\n  var len = arguments.length;\n  var idx = 0;\n\n  while (++idx < len) {\n    var val = arguments[idx];\n\n    if (utils.isObject(val) || Array.isArray(val)) {\n      merge(target, val);\n    }\n  }\n  return target;\n};\n\nfunction merge(target, obj) {\n  for (var key in obj) {\n    if (key === '__proto__' || !hasOwn(obj, key)) {\n      continue;\n    }\n\n    var oldVal = obj[key];\n    var newVal = target[key];\n\n    if (utils.isObject(newVal) && utils.isObject(oldVal)) {\n      target[key] = merge(newVal, oldVal);\n    } else if (Array.isArray(newVal)) {\n      target[key] = utils.union([], newVal, oldVal);\n    } else {\n      target[key] = utils.clone(oldVal);\n    }\n  }\n  return target;\n}\n\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n"], "filenames": ["index.js"], "buggy_code_start_loc": [33], "buggy_code_end_loc": [34], "fixing_code_start_loc": [33], "fixing_code_end_loc": [34], "type": "NVD-CWE-noinfo", "message": "merge-deep node module before 3.0.1 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects.", "other": {"cve": {"id": "CVE-2018-3722", "sourceIdentifier": "support@hackerone.com", "published": "2018-06-07T02:29:08.363", "lastModified": "2019-10-09T23:40:32.530", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "merge-deep node module before 3.0.1 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects."}, {"lang": "es", "value": "El m\u00f3dulo de node merge-deep en versiones anteriores a la 3.0.1 se ve afectada por una vulnerabilidad MAID (modificaci\u00f3n de datos asumidos como asumible), lo que permite que un usuario malicioso modifique el prototipo de \"Object\" mediante __proto__, provocando la adici\u00f3n o modificaci\u00f3n de una propiedad existente que va a existir en todos los objetos."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}, {"source": "support@hackerone.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-471"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:merge-deep_project:merge-deep:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "3.0.1", "matchCriteriaId": "BA9436D1-5727-4298-BCF6-3ACF7E3EA676"}]}]}], "references": [{"url": "https://github.com/jonschlinkert/merge-deep/commit/2c33634da7129a5aefcc262d2fec2e72224404e5", "source": "support@hackerone.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://hackerone.com/reports/310708", "source": "support@hackerone.com", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/jonschlinkert/merge-deep/commit/2c33634da7129a5aefcc262d2fec2e72224404e5"}}