{"buggy_code": ["<?php\n\n/**\n * Contact page.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2002-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2002-09-16\n */\n\nuse phpMyFAQ\\Captcha;\nuse phpMyFAQ\\Core\\Exception;\nuse phpMyFAQ\\Helper\\CaptchaHelper;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\User\\CurrentUser;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\ntry {\n    $faqSession->userTracking('contact', 0);\n} catch (Exception $e) {\n    // @todo handle the exception\n}\n\n$captcha = new Captcha($faqConfig);\n$captcha->setSessionId($sids);\n\nif (!is_null($showCaptcha)) {\n    $captcha->drawCaptchaImage();\n    exit;\n}\n\n$captchaHelper = new CaptchaHelper($faqConfig);\n\n$template->parse(\n    'mainPageContent',\n    [\n        'pageHeader' => $PMF_LANG['msgContact'],\n        'msgContactOwnText' => nl2br(Strings::htmlspecialchars($faqConfig->get('main.contactInformations'))),\n        'msgContactEMail' => $PMF_LANG['msgContactEMail'],\n        'msgContactPrivacyNote' => $PMF_LANG['msgContactPrivacyNote'],\n        'privacyURL' => $faqConfig->get('main.privacyURL'),\n        'msgPrivacyNote' => $PMF_LANG['msgPrivacyNote'],\n        'msgNewContentName' => $PMF_LANG['msgNewContentName'],\n        'msgNewContentMail' => $PMF_LANG['msgNewContentMail'],\n        'lang' => $Language->getLanguage(),\n        'defaultContentMail' => ($user instanceof CurrentUser) ? $user->getUserData('email') : '',\n        'defaultContentName' => ($user instanceof CurrentUser) ? $user->getUserData('display_name') : '',\n        'msgMessage' => $PMF_LANG['msgMessage'],\n        'msgS2FButton' => $PMF_LANG['msgS2FButton'],\n        'version' => $faqConfig->getVersion(),\n        'captchaFieldset' => $captchaHelper->renderCaptcha($captcha, 'contact', $PMF_LANG['msgCaptcha'], $auth),\n    ]\n);\n", "<?php\n\n/**\n * This is the main public frontend page of phpMyFAQ. It detects the browser's\n * language, gets and sets all cookie, post and get information and includes\n * the templates we need and set all internal variables to the template\n * variables. That's all.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @author Lars Tiedemann <php@larstiedemann.de>\n * @author Matteo Scaramuccia <matteo@phpmyfaq.de>\n * @copyright 2001-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2001-02-12\n */\n\nuse phpMyFAQ\\Attachment\\AttachmentFactory;\nuse phpMyFAQ\\Auth\\AuthLdap as AuthLdap;\nuse phpMyFAQ\\Auth\\AuthSso as AuthSso;\nuse phpMyFAQ\\Category;\nuse phpMyFAQ\\Category\\CategoryRelation;\nuse phpMyFAQ\\Core\\Exception;\nuse phpMyFAQ\\Faq;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Helper\\CategoryHelper as HelperCategory;\nuse phpMyFAQ\\Helper\\HttpHelper as HelperHttp;\nuse phpMyFAQ\\Helper\\LanguageHelper;\nuse phpMyFAQ\\Language;\nuse phpMyFAQ\\Language\\Plurals;\nuse phpMyFAQ\\Link;\nuse phpMyFAQ\\Permission\\MediumPermission;\nuse phpMyFAQ\\Seo;\nuse phpMyFAQ\\Session;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\System;\nuse phpMyFAQ\\Tags;\nuse phpMyFAQ\\Template;\nuse phpMyFAQ\\Template\\TemplateHelper;\nuse phpMyFAQ\\User\\CurrentUser;\nuse phpMyFAQ\\Utils;\n\n//\n// Define the named constant used as a check by any included PHP file\n//\nconst IS_VALID_PHPMYFAQ = null;\n\n//\n// Bootstrapping\n//\nrequire __DIR__ . '/src/Bootstrap.php';\n\n//\n// HTTP Helper\n//\n$http = new HelperHttp();\n\n//\n// Get language (default: english)\n//\n$Language = new Language($faqConfig);\n$faqLangCode = $Language->setLanguage($faqConfig->get('main.languageDetection'), $faqConfig->get('main.language'));\n// Preload English strings\nrequire_once 'lang/language_en.php';\n$faqConfig->setLanguage($Language);\n\n$showCaptcha = Filter::filterInput(INPUT_GET, 'gen', FILTER_UNSAFE_RAW);\nif (isset($faqLangCode) && Language::isASupportedLanguage($faqLangCode) && is_null($showCaptcha)) {\n    // Overwrite English strings with the ones we have in the current language,\n    // but don't include UTF-8 encoded files, these will break the captcha images\n    if (!file_exists('lang/language_' . $faqLangCode . '.php')) {\n        $faqLangCode = 'en';\n    }\n    require_once 'lang/language_' . $faqLangCode . '.php';\n} else {\n    $faqLangCode = 'en';\n}\n\n//Load plurals support for selected language\n$plr = new Plurals($PMF_LANG);\n\n//\n// Initializing static string wrapper\n//\nStrings::init($faqLangCode);\n\n/*\n * Initialize attachment factory\n */\nAttachmentFactory::init(\n    $faqConfig->get('records.attachmentsStorageType'),\n    $faqConfig->get('records.defaultAttachmentEncKey'),\n    $faqConfig->get('records.enableAttachmentEncryption')\n);\n\n//\n// Get user action\n//\n$action = Filter::filterInput(INPUT_GET, 'action', FILTER_UNSAFE_RAW);\n\n//\n// Authenticate current user\n//\n$auth = $error = null;\n$loginVisibility = 'hidden';\n\n$faqusername = Filter::filterInput(INPUT_POST, 'faqusername', FILTER_UNSAFE_RAW);\n$faqpassword = Filter::filterInput(INPUT_POST, 'faqpassword', FILTER_UNSAFE_RAW, FILTER_FLAG_NO_ENCODE_QUOTES);\n$faqaction = Filter::filterInput(INPUT_POST, 'faqloginaction', FILTER_UNSAFE_RAW);\n$rememberMe = Filter::filterInput(INPUT_POST, 'faqrememberme', FILTER_UNSAFE_RAW);\n\n// Set username via SSO\nif ($faqConfig->get('security.ssoSupport') && isset($_SERVER['REMOTE_USER'])) {\n    $faqusername = trim($_SERVER['REMOTE_USER']);\n    $faqpassword = '';\n}\n\n//\n// Get CSRF Token\n//\n$csrfToken = Filter::filterInput(INPUT_GET, 'csrf', FILTER_UNSAFE_RAW);\nif (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n    $csrfChecked = false;\n} else {\n    $csrfChecked = true;\n}\n\n// Login via local DB or LDAP or SSO\nif (!is_null($faqusername) && !is_null($faqpassword)) {\n    $user = new CurrentUser($faqConfig);\n    if (!is_null($rememberMe) && 'rememberMe' === $rememberMe) {\n        $user->enableRememberMe();\n    }\n    if ($faqConfig->isLdapActive() && function_exists('ldap_connect')) {\n        try {\n            $authLdap = new AuthLdap($faqConfig);\n            $user->addAuth($authLdap, 'ldap');\n        } catch (Exception $e) {\n            $error = $e->getMessage() . '<br>';\n        }\n    }\n    if ($faqConfig->get('security.ssoSupport')) {\n        $authSso = new AuthSso($faqConfig);\n        $user->addAuth($authSso, 'sso');\n    }\n\n    if ($user->login($faqusername, $faqpassword)) {\n        if ($user->getStatus() != 'blocked') {\n            $auth = true;\n            if (empty($action)) {\n                $action = $faqaction; // SSO logins don't have $faqaction\n            }\n        } else {\n            $error = $error . $PMF_LANG['ad_auth_fail'] . ' (' . $faqusername . ')';\n            $loginVisibility = '';\n            $action = 'password' === $action ? 'password' : 'login';\n        }\n    } else {\n        // error\n        $error = $error . $PMF_LANG['ad_auth_fail'];\n        $loginVisibility = '';\n        $action = 'password' === $action ? 'password' : 'login';\n    }\n} else {\n    // Try to authenticate with cookie information\n    $user = CurrentUser::getFromCookie($faqConfig);\n\n    // authenticate with session information\n    if (!$user instanceof CurrentUser) {\n        $user = CurrentUser::getFromSession($faqConfig);\n    }\n\n    if ($user instanceof CurrentUser) {\n        $auth = true;\n    } else {\n        $user = new CurrentUser($faqConfig);\n    }\n}\n\n//\n// Logout\n//\nif ($csrfChecked && 'logout' === $action && isset($auth)) {\n    $user->deleteFromSession(true);\n    $auth = null;\n    $action = 'main';\n    $ssoLogout = $faqConfig->get('security.ssoLogoutRedirect');\n    if ($faqConfig->get('security.ssoSupport') && !empty($ssoLogout)) {\n        header('Location: ' . $ssoLogout);\n    } else {\n        header('Location: ' . $faqConfig->getDefaultUrl());\n    }\n}\n\n//\n// Get current user and group id - default: -1\n//\nif (!is_null($user) && $user instanceof CurrentUser) {\n    $currentUser = $user->getUserId();\n    if ($user->perm instanceof MediumPermission) {\n        $currentGroups = $user->perm->getUserGroups($currentUser);\n    } else {\n        $currentGroups = [-1];\n    }\n    if (0 == count($currentGroups)) {\n        $currentGroups = [-1];\n    }\n} else {\n    $currentUser = -1;\n    $currentGroups = [-1];\n}\n\n//\n// Use mbstring extension if available and when possible\n//\n$validMbStrings = ['ja', 'en', 'uni'];\n$mbLanguage = ($PMF_LANG['metaLanguage'] != 'ja') ? 'uni' : $PMF_LANG['metaLanguage'];\nif (function_exists('mb_language') && in_array($mbLanguage, $validMbStrings)) {\n    mb_language($mbLanguage);\n    mb_internal_encoding('utf-8');\n}\n\n//\n// Found a session ID in _GET or _COOKIE?\n//\n$sidGet = Filter::filterInput(INPUT_GET, PMF_GET_KEY_NAME_SESSIONID, FILTER_VALIDATE_INT);\n$sidCookie = Filter::filterInput(INPUT_COOKIE, Session::PMF_COOKIE_NAME_SESSIONID, FILTER_VALIDATE_INT);\n$faqSession = new Session($faqConfig);\n$faqSession->setCurrentUser($user);\n\n// Note: do not track internal calls\n$internal = false;\nif (isset($_SERVER['HTTP_USER_AGENT'])) {\n    $internal = (strpos($_SERVER['HTTP_USER_AGENT'], 'phpMyFAQ%2F') === 0);\n}\nif (!$internal) {\n    if (is_null($sidGet) && is_null($sidCookie)) {\n        // Create a per-site unique SID\n        try {\n            $faqSession->userTracking('new_session', 0);\n        } catch (Exception $e) {\n            $pmfExceptions[] = $e->getMessage();\n        }\n    } elseif (!is_null($sidCookie)) {\n        try {\n            $faqSession->checkSessionId($sidCookie, $_SERVER['REMOTE_ADDR']);\n        } catch (Exception $e) {\n            $pmfExceptions[] = $e->getMessage();\n        }\n    } else {\n        try {\n            $faqSession->checkSessionId($sidGet, $_SERVER['REMOTE_ADDR']);\n        } catch (Exception $e) {\n            $pmfExceptions[] = $e->getMessage();\n        }\n    }\n}\n\n//\n// Is user tracking activated?\n//\n$sids = '';\nif ($faqConfig->get('main.enableUserTracking')) {\n    if ($faqSession->getCurrentSessionId() > 0) {\n        $faqSession->setCookie(Session::PMF_COOKIE_NAME_SESSIONID, $faqSession->getCurrentSessionId());\n        if (is_null($sidCookie)) {\n            $sids = sprintf('sid=%d&amp;lang=%s&amp;', $faqSession->getCurrentSessionId(), $faqLangCode);\n        }\n    } elseif (is_null($sidGet) || is_null($sidCookie)) {\n        if (is_null($sidCookie)) {\n            if (!is_null($sidGet)) {\n                $sids = sprintf('sid=%d&amp;lang=%s&amp;', $sidGet, $faqLangCode);\n            }\n        }\n    }\n} elseif (\n    !$faqSession->setCookie(\n        Session::PMF_COOKIE_NAME_SESSIONID,\n        $faqSession->getCurrentSessionId(),\n        $_SERVER['REQUEST_TIME'] + PMF_LANGUAGE_EXPIRED_TIME\n    )\n) {\n    $sids = sprintf('lang=%s&amp;', $faqLangCode);\n}\n\n//\n// Found a article language?\n//\n$lang = Filter::filterInput(INPUT_POST, 'artlang', FILTER_UNSAFE_RAW);\nif (is_null($lang) && !Language::isASupportedLanguage($lang)) {\n    $lang = Filter::filterInput(INPUT_GET, 'artlang', FILTER_UNSAFE_RAW);\n    if (is_null($lang) && !Language::isASupportedLanguage($lang)) {\n        $lang = $faqLangCode;\n    }\n}\n\n//\n// Sanitize language string\n//\nif (!Language::isASupportedLanguage($lang)) {\n    $lang = $faqConfig->getDefaultLanguage();\n}\n\n//\n// Found a search string?\n//\n$searchTerm = Filter::filterInput(INPUT_GET, 'search', FILTER_UNSAFE_RAW, '');\n\n//\n// Create a new FAQ object\n//\n$faq = new Faq($faqConfig);\n$faq->setUser($currentUser)\n    ->setGroups($currentGroups);\n\n//\n// Create a new Category object\n//\n$category = new Category($faqConfig, $currentGroups, true);\n$category->setUser($currentUser)\n    ->setGroups($currentGroups);\n\n//\n// Create a new Tags object\n//\n$oTag = new Tags($faqConfig);\n\n//\n// Create URL\n//\n$faqSystem = new System();\n$faqLink = new Link($faqSystem->getSystemUri($faqConfig), $faqConfig);\n$currentPageUrl = Strings::htmlentities($faqLink->getCurrentUrl());\n\n//\n// Found a record ID?\n//\n$id = Filter::filterInput(INPUT_GET, 'id', FILTER_VALIDATE_INT);\nif (!is_null($id)) {\n    $faq->getRecord($id);\n    $title = ' - ' . $faq->faqRecord['title'];\n    $keywords = ',' . $faq->faqRecord['keywords'];\n    $metaDescription = str_replace('\"', '', strip_tags($faq->getRecordPreview($id)));\n    $url = sprintf(\n        '%sindex.php?%saction=faq&cat=%d&id=%d&artlang=%s',\n        Strings::htmlentities($faqConfig->getDefaultUrl()),\n        $sids,\n        $category->getCategoryIdFromFaq($id),\n        $id,\n        $lang\n    );\n    $faqLink = new Link($url, $faqConfig);\n    $faqLink->itemTitle = $faq->faqRecord['title'];\n    $currentPageUrl = $faqLink->toString(true);\n} else {\n    $id = '';\n    $title = ' - powered by phpMyFAQ ' . $faqConfig->getVersion();\n    $keywords = '';\n    $metaDescription = str_replace('\"', '', $faqConfig->get('main.metaDescription'));\n}\n\n//\n// found a solution ID?\n//\n$solutionId = Filter::filterInput(INPUT_GET, 'solution_id', FILTER_VALIDATE_INT);\nif (!is_null($solutionId)) {\n    $title = ' -  powered by phpMyFAQ ' . $faqConfig->getVersion();\n    $keywords = '';\n    $faqData = $faq->getIdFromSolutionId($solutionId);\n    if (is_array($faqData)) {\n        $id = $faqData['id'];\n        $lang = $faqData['lang'];\n        $title = ' - ' . $faq->getRecordTitle($id);\n        $keywords = ',' . $faq->getRecordKeywords($id);\n        $metaDescription = str_replace('\"', '', Utils::makeShorterText(strip_tags($faqData['content']), 12));\n        $url = sprintf(\n            '%sindex.php?%saction=faq&cat=%d&id=%d&artlang=%s',\n            Strings::htmlentities($faqConfig->getDefaultUrl()),\n            $sids,\n            $faqData['category_id'],\n            $id,\n            $lang\n        );\n        $faqLink = new Link($url, $faqConfig);\n        $faqLink->itemTitle = $faqData['question'];\n        $currentPageUrl = $faqLink->toString(true);\n    }\n}\n\n//\n// Handle the Tagging ID\n//\n$tag_id = Filter::filterInput(INPUT_GET, 'tagging_id', FILTER_VALIDATE_INT);\nif (!is_null($tag_id)) {\n    $title = ' - ' . $oTag->getTagNameById($tag_id);\n    $keywords = '';\n}\n\n//\n// Handle the SiteMap\n//\n$letter = Filter::filterInput(INPUT_GET, 'letter', FILTER_UNSAFE_RAW);\nif (!is_null($letter) && (1 == Strings::strlen($letter))) {\n    $title = ' - ' . $letter . '...';\n    $keywords = $letter;\n}\n\n//\n// Found a category ID?\n//\n$cat = Filter::filterInput(INPUT_GET, 'cat', FILTER_VALIDATE_INT, 0);\n$categoryFromId = -1;\nif (is_numeric($id) && $id > 0) {\n    $categoryFromId = $category->getCategoryIdFromFaq($id);\n}\nif ($categoryFromId != -1 && $cat == 0) {\n    $cat = $categoryFromId;\n}\n$category->transform(0);\n$category->collapseAll();\nif ($cat != 0) {\n    $category->expandTo($cat);\n}\nif (isset($cat) && ($cat != 0) && ($id == '') && isset($category->categoryName[$cat]['name'])) {\n    $title = ' - ' . $category->categoryName[$cat]['name'];\n    $metaDescription = $category->categoryName[$cat]['description'];\n}\n\n//\n// Found an action request?\n//\nif (!isset(Link::$allowedActionParameters[$action])) {\n    $action = 'main';\n}\n\n//\n// Select the template for the requested page\n//\nif ($action !== 'main') {\n    $includeTemplate = $action . '.html';\n    $includePhp = $action . '.php';\n    $renderUri = '?sid=' . $faqSession->getCurrentSessionId();\n} else {\n    if (isset($solutionId) && is_numeric($solutionId)) {\n        // show the record with the solution ID\n        $includeTemplate = 'faq.html';\n        $includePhp = 'faq.php';\n    } else {\n        $includeTemplate = 'startpage.html';\n        $includePhp = 'startpage.php';\n    }\n    $renderUri = '?sid=' . $faqSession->getCurrentSessionId();\n}\n\n//\n// Set sidebar column\n//\nif (($action === 'faq') || ($action === 'show') || ($action === 'main')) {\n    $sidebarTemplate = 'sidebar-tagcloud.html';\n} else {\n    $sidebarTemplate = 'sidebar-empty.html';\n}\n\n//\n// Check if FAQ should be secured\n//\nif ($faqConfig->get('security.enableLoginOnly')) {\n    if ($auth) {\n        $indexSet = 'index.html';\n    } else {\n        switch ($action) {\n            case 'register':\n            case 'thankyou':\n                $indexSet = 'new-user.page.html';\n                break;\n            case 'password':\n                $indexSet = 'password.page.html';\n                break;\n            default:\n                $indexSet = 'login.page.html';\n                break;\n        }\n    }\n} else {\n    $indexSet = 'index.html';\n}\n\n//\n// phpMyFAQ installation is in maintenance mode\n//\nif ($faqConfig->get('main.maintenanceMode')) {\n    $indexSet = 'maintenance.page.html';\n}\n\n//\n// Load template files and set template variables\n//\n$template = new Template(\n    [\n        'index' => $indexSet,\n        'sidebar' => $sidebarTemplate,\n        'mainPageContent' => $includeTemplate,\n    ],\n    new TemplateHelper($faqConfig),\n    $faqConfig->get('main.templateSet')\n);\n\n$categoryRelation = new CategoryRelation($faqConfig);\n\n$categoryHelper = new HelperCategory();\n$categoryHelper->setCategory($category);\n$categoryHelper->setConfiguration($faqConfig);\n$categoryHelper->setCategoryRelation($categoryRelation);\n\n$keywordsArray = array_merge(explode(',', $keywords), explode(',', $faqConfig->get('main.metaKeywords')));\n$keywordsArray = array_filter($keywordsArray, 'strlen');\nshuffle($keywordsArray);\n$keywords = implode(',', $keywordsArray);\n\nif (!is_null($error)) {\n    $loginMessage = '<p class=\"error\">' . $error . '</p>';\n} else {\n    $loginMessage = '';\n}\n\n$faqSeo = new Seo($faqConfig);\n\n$tplMainPage = [\n    'msgLoginUser' => $user->isLoggedIn() ? $user->getUserData('display_name') : $PMF_LANG['msgLoginUser'],\n    'title' => Strings::htmlspecialchars($faqConfig->getTitle() . $title),\n    'baseHref' => Strings::htmlentities($faqSystem->getSystemUri($faqConfig)),\n    'version' => $faqConfig->getVersion(),\n    'header' => Strings::htmlentities(str_replace('\"', '', $faqConfig->getTitle())),\n    'metaTitle' => Strings::htmlentities(str_replace('\"', '', $faqConfig->getTitle() . $title)),\n    'metaDescription' => Strings::htmlentities($metaDescription ?? ''),\n    'metaKeywords' => Strings::htmlentities($keywords),\n    'metaPublisher' => Strings::htmlentities($faqConfig->get('main.metaPublisher')),\n    'metaLanguage' => $PMF_LANG['metaLanguage'],\n    'metaRobots' => $faqSeo->getMetaRobots($action),\n    'phpmyfaqversion' => $faqConfig->getVersion(),\n    'stylesheet' => $PMF_LANG['dir'] == 'rtl' ? 'style.rtl' : 'style',\n    'currentPageUrl' => $currentPageUrl,\n    'action' => $action,\n    'dir' => $PMF_LANG['dir'],\n    'writeSendAdress' => '?' . $sids . 'action=search',\n    'searchBox' => $PMF_LANG['msgSearch'],\n    'searchTerm' => Strings::htmlentities($searchTerm, ENT_QUOTES),\n    'categoryId' => ($cat === 0) ? '%' : (int)$cat,\n    'headerCategories' => $PMF_LANG['msgFullCategories'],\n    'msgCategory' => $PMF_LANG['msgCategory'],\n    'showCategories' => $categoryHelper->renderNavigation($cat),\n    'topCategories' => $categoryHelper->renderMainCategories(),\n    'msgExportAllFaqs' => $PMF_LANG['msgExportAllFaqs'],\n    'languageBox' => $PMF_LANG['msgLanguageSubmit'],\n    'renderUri' => $renderUri,\n    'switchLanguages' => LanguageHelper::renderSelectLanguage($faqLangCode, true),\n    'copyright' => 'powered with \u2764\ufe0f and \u2615\ufe0f by <a href=\"https://www.phpmyfaq.de\" target=\"_blank\">phpMyFAQ</a> ' .\n        $faqConfig->getVersion(),\n    'registerUser' => $faqConfig->get('security.enableRegistration') ? '<a href=\"?action=register\">' .\n        $PMF_LANG['msgRegistration'] . '</a>' : '',\n    'sendPassword' => '<a href=\"?action=password\">' . $PMF_LANG['lostPassword'] . '</a>',\n    'msgFullName' => $PMF_LANG['ad_user_loggedin'] . $user->getLogin(),\n    'msgLoginName' => Strings::htmlentities($user->getUserData('display_name')),\n    'loginHeader' => $PMF_LANG['msgLoginUser'],\n    'loginMessage' => $loginMessage,\n    'writeLoginPath' => Strings::htmlentities($faqSystem->getSystemUri($faqConfig)) . '?' . Filter::getFilteredQueryString(),\n    'faqloginaction' => $action,\n    'login' => $PMF_LANG['ad_auth_ok'],\n    'username' => $PMF_LANG['ad_auth_user'],\n    'password' => $PMF_LANG['ad_auth_passwd'],\n    'rememberMe' => $PMF_LANG['rememberMe'],\n    'headerChangePassword' => $PMF_LANG['ad_passwd_cop'],\n    'msgUsername' => $PMF_LANG['ad_auth_user'],\n    'msgEmail' => $PMF_LANG['ad_entry_email'],\n    'msgSubmit' => $PMF_LANG['msgNewContentSubmit'],\n    'loginPageMessage' => $PMF_LANG['loginPageMessage'],\n    'msgAdvancedSearch' => $PMF_LANG['msgAdvancedSearch']\n];\n\n$template->parseBlock(\n    'index',\n    'categoryListSection',\n    [\n        'showCategories' => $categoryHelper->renderNavigation($cat),\n        'categoryDropDown' => $categoryHelper->renderCategoryDropDown(),\n    ]\n);\n\nif ('main' == $action || 'show' == $action) {\n    $template->parseBlock(\n        'index',\n        'globalSearchBox',\n        [\n            'writeSendAdress' => '?' . $sids . 'action=search',\n            'searchBox' => $PMF_LANG['msgSearch'],\n            'categoryId' => ($cat === 0) ? '%' : (int)$cat,\n            'msgSearch' => sprintf(\n                '<a class=\"help\" href=\"./index.php?action=search\">%s</a>',\n                $PMF_LANG['msgAdvancedSearch']\n            ),\n        ]\n    );\n}\n\nif ($faqConfig->get('main.enableRewriteRules')) {\n    $tplNavigation = [\n        'msgSearch' => '<a class=\"nav-link\" href=\"./search.html\">' . $PMF_LANG['msgAdvancedSearch'] . '</a>',\n        'msgAddContent' => '<a class=\"nav-link\" href=\"./addcontent.html\">' .\n            $PMF_LANG['msgAddContent'] . '</a>',\n        'msgQuestion' => '<a class=\"nav-link\" href=\"./ask.html\">' . $PMF_LANG['msgQuestion'] . '</a>',\n        'msgOpenQuestions' => '<a class=\"nav-link\" href=\"./open-questions.html\">' . $PMF_LANG['msgOpenQuestions'] .\n            '</a>',\n        'msgContact' => '<a href=\"./contact.html\">' . $PMF_LANG['msgContact'] . '</a>',\n        'msgGlossary' => '<a href=\"./glossary.html\">' . $PMF_LANG['ad_menu_glossary'] . '</a>',\n        'privacyLink' => sprintf(\n            '<a target=\"_blank\" href=\"%s\">%s</a>',\n            $faqConfig->get('main.privacyURL'),\n            $PMF_LANG['msgPrivacyNote']\n        ),\n        'backToHome' => '<a href=\"./index.html\">' . $PMF_LANG['msgHome'] . '</a>',\n        'allCategories' => '<a class=\"nav-link\" href=\"./showcat.html\">' . $PMF_LANG['msgShowAllCategories'] . '</a>',\n        'faqOverview' => '<a href=\"./overview.html\">' . $PMF_LANG['faqOverview'] . '</a>',\n        'showSitemap' => '<a href=\"./sitemap/A/' . $faqLangCode . '.html\">' . $PMF_LANG['msgSitemap'] . '</a>',\n        'msgUserRemoval' => '<a href=\"./request-removal.html\">' . $PMF_LANG['msgUserRemoval'] . '</a>'\n    ];\n} else {\n    $tplNavigation = [\n        'msgSearch' => '<a class=\"nav-link\" href=\"index.php?' . $sids . 'action=search\">' .\n            $PMF_LANG['msgAdvancedSearch'] . '</a>',\n        'msgAddContent' => '<a class=\"nav-link\" href=\"index.php?' . $sids . 'action=add&cat=' . $cat . '\">' .\n            $PMF_LANG['msgAddContent'] . '</a>',\n        'msgQuestion' => '<a class=\"nav-link\" href=\"index.php?' . $sids . 'action=ask&category_id=' . $cat . '\">' .\n            $PMF_LANG['msgQuestion'] . '</a>',\n        'msgOpenQuestions' => '<a class=\"nav-link\" href=\"index.php?' . $sids . 'action=open-questions\">' .\n            $PMF_LANG['msgOpenQuestions'] . '</a>',\n        'msgContact' => '<a href=\"index.php?' . $sids . 'action=contact\">' . $PMF_LANG['msgContact'] . '</a>',\n        'msgGlossary' => '<a href=\"index.php?' . $sids . 'action=glossary\">' . $PMF_LANG['ad_menu_glossary'] . '</a>',\n        'privacyLink' => sprintf(\n            '<a target=\"_blank\" href=\"%s\">%s</a>',\n            $faqConfig->get('main.privacyURL'),\n            $PMF_LANG['msgPrivacyNote']\n        ),\n        'allCategories' => '<a class=\"nav-link\" href=\"index.php?' . $sids . 'action=show\">' .\n            $PMF_LANG['msgShowAllCategories'] . '</a>',\n        'faqOverview' => '<a href=\"index.php?' . $sids . 'action=overview\">' . $PMF_LANG['faqOverview'] . '</a>',\n        'backToHome' => '<a href=\"index.php?' . $sids . '\">' . $PMF_LANG['msgHome'] . '</a>',\n        'showSitemap' => '<a href=\"index.php?' . $sids . 'action=sitemap&amp;lang=' . $faqLangCode . '\">' .\n            $PMF_LANG['msgSitemap'] . '</a>',\n        'msgUserRemoval' => '<a href=\"index.php?' . $sids . 'action=request-removal\">' . $PMF_LANG['msgUserRemoval'] .\n            '</a>',\n    ];\n}\n\n$tplNavigation['faqHome'] = Strings::htmlentities($faqConfig->getDefaultUrl());\n$tplNavigation['activeSearch'] = ('search' == $action) ? 'active' : '';\n$tplNavigation['activeAllCategories'] = ('show' == $action) ? 'active' : '';\n$tplNavigation['activeAddContent'] = ('add' == $action) ? 'active' : '';\n$tplNavigation['activeAddQuestion'] = ('ask' == $action) ? 'active' : '';\n$tplNavigation['activeOpenQuestions'] = ('open-questions' == $action) ? 'active' : '';\n$tplNavigation['activeLogin'] = ('login' == $action) ? 'active' : '';\n\n//\n// Show login box or logged-in user information\n//\nif (isset($auth)) {\n    if ($user->perm->hasPermission($user->getUserId(), 'viewadminlink') || $user->isSuperAdmin()) {\n        $adminSection = sprintf(\n            '<a class=\"dropdown-item\" href=\"./admin/index.php\">%s</a>',\n            $PMF_LANG['adminSection']\n        );\n    } else {\n        $adminSection = '';\n    }\n\n    $template->parseBlock(\n        'index',\n        'userloggedIn',\n        [\n            'msgUserControl' => $adminSection,\n            'msgLoginName' => $user->getUserData('display_name'), // @deprecated\n            'msgUserControlDropDown' => '<a class=\"dropdown-item\" href=\"?action=ucp\">' .\n                $PMF_LANG['headerUserControlPanel'] . '</a>',\n            'msgUserRemoval' => '<a class=\"dropdown-item\" href=\"?action=request-removal\">' .\n                $PMF_LANG['ad_menu_RequestRemove'] . '</a>',\n            'msgLogoutUser' => sprintf(\n                '<a class=\"dropdown-item\" href=\"?action=logout&csrf=%s\">%s</a>',\n                $user->getCsrfTokenFromSession(),\n                $PMF_LANG['ad_menu_logout'],\n            ),\n            'activeUserControl' => ('ucp' == $action) ? 'active' : ''\n        ]\n    );\n} else {\n    if ($faqConfig->get('main.maintenanceMode')) {\n        $msgLoginUser = '<a class=\"dropdown-item\" href=\"./admin/\">%s</a>';\n    } else {\n        $msgLoginUser = '<a class=\"dropdown-item\" href=\"?action=login\">%s</a>';\n    }\n    $template->parseBlock(\n        'index',\n        'notLoggedIn',\n        [\n            'msgRegisterUser' => $faqConfig->get('security.enableRegistration')\n                ?\n                '<a class=\"dropdown-item\" href=\"?action=register\">' . $PMF_LANG['msgRegisterUser'] . '</a>'\n                :\n                '',\n            'msgLoginUser' => sprintf($msgLoginUser, $PMF_LANG['msgLoginUser']),\n            'activeRegister' => ('register' == $action) ? 'active' : '',\n            'activeLogin' => ('login' == $action) ? 'active' : '',\n        ]\n    );\n}\n\n$template->parse(\n    'sidebar',\n    [\n        'writeTagCloudHeader' => $PMF_LANG['msg_tags'],\n        'writeTags' => $oTag->renderTagCloud(),\n        'msgAllCatArticles' => $PMF_LANG['msgAllCatArticles'],\n        'allCatArticles' => $faq->getRecordsWithoutPagingByCategoryId($cat)\n    ]\n);\n\nif (DEBUG) {\n    $template->parseBlock(\n        'index',\n        'debugMode',\n        [\n            'debugQueries' => $faqConfig->getDb()->log(),\n        ]\n    );\n}\n\n//\n// Redirect old \"action=artikel\" URLs via 301 to new location\n//\nif ('artikel' === $action) {\n    $url = sprintf(\n        '%sindex.php?action=faq&cat=%d&id=%d&artlang=%s',\n        Strings::htmlspecialchars($faqConfig->getDefaultUrl()),\n        $category->getCategoryIdFromFaq($id),\n        $id,\n        $lang\n    );\n    $link = new Link($url, $faqConfig);\n    $http->setStatus(301);\n    $http->redirect($link->toString());\n    exit();\n}\n\n//\n// Include requested PHP file\n//\nrequire $includePhp;\n\n//\n// Get main template, set main variables\n//\n$template->parse('index', array_merge($tplMainPage, $tplNavigation));\n$template->merge('sidebar', 'index');\n$template->merge('mainPageContent', 'index');\n\n//\n// Send headers and print template\n//\n$http->setConfiguration($faqConfig);\n$http->setContentType('text/html');\n$http->addHeader();\n$http->startCompression();\n\n//\n// Check for 404 HTTP status code\n//\nif ($http->getStatusCode() === 404 || $action === '404') {\n    $template = new Template(\n        [\n            'index' => '404.html',\n            'mainPageContent' => ''\n        ],\n        new TemplateHelper($faqConfig),\n        $faqConfig->get('main.templateSet')\n    );\n    $template->parse('index', array_merge($tplMainPage, $tplNavigation));\n}\n\n$template->render();\n\n$faqConfig->getDb()->close();\n", "<?php\n\n/**\n * Request removal page.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2018-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2018-02-03\n */\n\nuse phpMyFAQ\\Captcha;\nuse phpMyFAQ\\Core\\Exception;\nuse phpMyFAQ\\Helper\\CaptchaHelper;\nuse phpMyFAQ\\User\\CurrentUser;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\ntry {\n    $faqSession->userTracking('request_removal', 0);\n} catch (Exception $e) {\n    // @todo handle the exception\n}\n\n$captcha = new Captcha($faqConfig);\n$captcha->setSessionId($sids);\n\nif (!is_null($showCaptcha)) {\n    $captcha->drawCaptchaImage();\n    exit;\n}\n\n$captchaHelper = new CaptchaHelper($faqConfig);\n\n$template->parse(\n    'mainPageContent',\n    [\n        'pageHeader' => $PMF_LANG['msgUserRemoval'],\n        'msgContact' => $PMF_LANG['msgContact'],\n        'msgUserRemovalText' => $PMF_LANG['msgUserRemovalText'],\n        'msgContactRemove' => $PMF_LANG['msgContactRemove'],\n        'msgContactPrivacyNote' => $PMF_LANG['msgContactPrivacyNote'],\n        'msgPrivacyNote' => $PMF_LANG['msgPrivacyNote'],\n        'privacyURL' => $faqConfig->get('main.privacyURL'),\n        'msgNewContentName' => $PMF_LANG['msgNewContentName'],\n        'msgNewContentMail' => $PMF_LANG['msgNewContentMail'],\n        'ad_user_loginname' => $PMF_LANG['ad_user_loginname'],\n        'lang' => $Language->getLanguage(),\n        'defaultContentMail' => ($user instanceof CurrentUser) ? $user->getUserData('email') : '',\n        'defaultContentName' => ($user instanceof CurrentUser) ? $user->getUserData('display_name') : '',\n        'defaultLoginName' => ($user instanceof CurrentUser) ? $user->getLogin() : '',\n        'msgMessage' => $PMF_LANG['msgMessage'],\n        'msgS2FButton' => $PMF_LANG['msgS2FButton'],\n        'version' => $faqConfig->getVersion(),\n        'captchaFieldset' => $captchaHelper->renderCaptcha($captcha, 'contact', $PMF_LANG['msgCaptcha'], $auth),\n    ]\n);\n"], "fixing_code": ["<?php\n\n/**\n * Contact page.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2002-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2002-09-16\n */\n\nuse phpMyFAQ\\Captcha;\nuse phpMyFAQ\\Core\\Exception;\nuse phpMyFAQ\\Helper\\CaptchaHelper;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\User\\CurrentUser;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\ntry {\n    $faqSession->userTracking('contact', 0);\n} catch (Exception $e) {\n    // @todo handle the exception\n}\n\n$captcha = new Captcha($faqConfig);\n$captcha->setSessionId($sids);\n\nif (!is_null($showCaptcha)) {\n    $captcha->drawCaptchaImage();\n    exit;\n}\n\n$captchaHelper = new CaptchaHelper($faqConfig);\n\n$template->parse(\n    'mainPageContent',\n    [\n        'pageHeader' => $PMF_LANG['msgContact'],\n        'msgContactOwnText' => nl2br(Strings::htmlspecialchars($faqConfig->get('main.contactInformations'))),\n        'msgContactEMail' => $PMF_LANG['msgContactEMail'],\n        'msgContactPrivacyNote' => $PMF_LANG['msgContactPrivacyNote'],\n        'privacyURL' => Strings::htmlentities($faqConfig->get('main.privacyURL')),\n        'msgPrivacyNote' => $PMF_LANG['msgPrivacyNote'],\n        'msgNewContentName' => $PMF_LANG['msgNewContentName'],\n        'msgNewContentMail' => $PMF_LANG['msgNewContentMail'],\n        'lang' => $Language->getLanguage(),\n        'defaultContentMail' => ($user instanceof CurrentUser) ? $user->getUserData('email') : '',\n        'defaultContentName' => ($user instanceof CurrentUser) ? $user->getUserData('display_name') : '',\n        'msgMessage' => $PMF_LANG['msgMessage'],\n        'msgS2FButton' => $PMF_LANG['msgS2FButton'],\n        'version' => $faqConfig->getVersion(),\n        'captchaFieldset' => $captchaHelper->renderCaptcha($captcha, 'contact', $PMF_LANG['msgCaptcha'], $auth),\n    ]\n);\n", "<?php\n\n/**\n * This is the main public frontend page of phpMyFAQ. It detects the browser's\n * language, gets and sets all cookie, post and get information and includes\n * the templates we need and set all internal variables to the template\n * variables. That's all.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @author Lars Tiedemann <php@larstiedemann.de>\n * @author Matteo Scaramuccia <matteo@phpmyfaq.de>\n * @copyright 2001-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2001-02-12\n */\n\nuse phpMyFAQ\\Attachment\\AttachmentFactory;\nuse phpMyFAQ\\Auth\\AuthLdap as AuthLdap;\nuse phpMyFAQ\\Auth\\AuthSso as AuthSso;\nuse phpMyFAQ\\Category;\nuse phpMyFAQ\\Category\\CategoryRelation;\nuse phpMyFAQ\\Core\\Exception;\nuse phpMyFAQ\\Faq;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Helper\\CategoryHelper as HelperCategory;\nuse phpMyFAQ\\Helper\\HttpHelper as HelperHttp;\nuse phpMyFAQ\\Helper\\LanguageHelper;\nuse phpMyFAQ\\Language;\nuse phpMyFAQ\\Language\\Plurals;\nuse phpMyFAQ\\Link;\nuse phpMyFAQ\\Permission\\MediumPermission;\nuse phpMyFAQ\\Seo;\nuse phpMyFAQ\\Session;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\System;\nuse phpMyFAQ\\Tags;\nuse phpMyFAQ\\Template;\nuse phpMyFAQ\\Template\\TemplateHelper;\nuse phpMyFAQ\\User\\CurrentUser;\nuse phpMyFAQ\\Utils;\n\n//\n// Define the named constant used as a check by any included PHP file\n//\nconst IS_VALID_PHPMYFAQ = null;\n\n//\n// Bootstrapping\n//\nrequire __DIR__ . '/src/Bootstrap.php';\n\n//\n// HTTP Helper\n//\n$http = new HelperHttp();\n\n//\n// Get language (default: english)\n//\n$Language = new Language($faqConfig);\n$faqLangCode = $Language->setLanguage($faqConfig->get('main.languageDetection'), $faqConfig->get('main.language'));\n// Preload English strings\nrequire_once 'lang/language_en.php';\n$faqConfig->setLanguage($Language);\n\n$showCaptcha = Filter::filterInput(INPUT_GET, 'gen', FILTER_UNSAFE_RAW);\nif (isset($faqLangCode) && Language::isASupportedLanguage($faqLangCode) && is_null($showCaptcha)) {\n    // Overwrite English strings with the ones we have in the current language,\n    // but don't include UTF-8 encoded files, these will break the captcha images\n    if (!file_exists('lang/language_' . $faqLangCode . '.php')) {\n        $faqLangCode = 'en';\n    }\n    require_once 'lang/language_' . $faqLangCode . '.php';\n} else {\n    $faqLangCode = 'en';\n}\n\n//Load plurals support for selected language\n$plr = new Plurals($PMF_LANG);\n\n//\n// Initializing static string wrapper\n//\nStrings::init($faqLangCode);\n\n/*\n * Initialize attachment factory\n */\nAttachmentFactory::init(\n    $faqConfig->get('records.attachmentsStorageType'),\n    $faqConfig->get('records.defaultAttachmentEncKey'),\n    $faqConfig->get('records.enableAttachmentEncryption')\n);\n\n//\n// Get user action\n//\n$action = Filter::filterInput(INPUT_GET, 'action', FILTER_UNSAFE_RAW);\n\n//\n// Authenticate current user\n//\n$auth = $error = null;\n$loginVisibility = 'hidden';\n\n$faqusername = Filter::filterInput(INPUT_POST, 'faqusername', FILTER_UNSAFE_RAW);\n$faqpassword = Filter::filterInput(INPUT_POST, 'faqpassword', FILTER_UNSAFE_RAW, FILTER_FLAG_NO_ENCODE_QUOTES);\n$faqaction = Filter::filterInput(INPUT_POST, 'faqloginaction', FILTER_UNSAFE_RAW);\n$rememberMe = Filter::filterInput(INPUT_POST, 'faqrememberme', FILTER_UNSAFE_RAW);\n\n// Set username via SSO\nif ($faqConfig->get('security.ssoSupport') && isset($_SERVER['REMOTE_USER'])) {\n    $faqusername = trim($_SERVER['REMOTE_USER']);\n    $faqpassword = '';\n}\n\n//\n// Get CSRF Token\n//\n$csrfToken = Filter::filterInput(INPUT_GET, 'csrf', FILTER_UNSAFE_RAW);\nif (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n    $csrfChecked = false;\n} else {\n    $csrfChecked = true;\n}\n\n// Login via local DB or LDAP or SSO\nif (!is_null($faqusername) && !is_null($faqpassword)) {\n    $user = new CurrentUser($faqConfig);\n    if (!is_null($rememberMe) && 'rememberMe' === $rememberMe) {\n        $user->enableRememberMe();\n    }\n    if ($faqConfig->isLdapActive() && function_exists('ldap_connect')) {\n        try {\n            $authLdap = new AuthLdap($faqConfig);\n            $user->addAuth($authLdap, 'ldap');\n        } catch (Exception $e) {\n            $error = $e->getMessage() . '<br>';\n        }\n    }\n    if ($faqConfig->get('security.ssoSupport')) {\n        $authSso = new AuthSso($faqConfig);\n        $user->addAuth($authSso, 'sso');\n    }\n\n    if ($user->login($faqusername, $faqpassword)) {\n        if ($user->getStatus() != 'blocked') {\n            $auth = true;\n            if (empty($action)) {\n                $action = $faqaction; // SSO logins don't have $faqaction\n            }\n        } else {\n            $error = $error . $PMF_LANG['ad_auth_fail'] . ' (' . $faqusername . ')';\n            $loginVisibility = '';\n            $action = 'password' === $action ? 'password' : 'login';\n        }\n    } else {\n        // error\n        $error = $error . $PMF_LANG['ad_auth_fail'];\n        $loginVisibility = '';\n        $action = 'password' === $action ? 'password' : 'login';\n    }\n} else {\n    // Try to authenticate with cookie information\n    $user = CurrentUser::getFromCookie($faqConfig);\n\n    // authenticate with session information\n    if (!$user instanceof CurrentUser) {\n        $user = CurrentUser::getFromSession($faqConfig);\n    }\n\n    if ($user instanceof CurrentUser) {\n        $auth = true;\n    } else {\n        $user = new CurrentUser($faqConfig);\n    }\n}\n\n//\n// Logout\n//\nif ($csrfChecked && 'logout' === $action && isset($auth)) {\n    $user->deleteFromSession(true);\n    $auth = null;\n    $action = 'main';\n    $ssoLogout = $faqConfig->get('security.ssoLogoutRedirect');\n    if ($faqConfig->get('security.ssoSupport') && !empty($ssoLogout)) {\n        header('Location: ' . $ssoLogout);\n    } else {\n        header('Location: ' . $faqConfig->getDefaultUrl());\n    }\n}\n\n//\n// Get current user and group id - default: -1\n//\nif (!is_null($user) && $user instanceof CurrentUser) {\n    $currentUser = $user->getUserId();\n    if ($user->perm instanceof MediumPermission) {\n        $currentGroups = $user->perm->getUserGroups($currentUser);\n    } else {\n        $currentGroups = [-1];\n    }\n    if (0 == count($currentGroups)) {\n        $currentGroups = [-1];\n    }\n} else {\n    $currentUser = -1;\n    $currentGroups = [-1];\n}\n\n//\n// Use mbstring extension if available and when possible\n//\n$validMbStrings = ['ja', 'en', 'uni'];\n$mbLanguage = ($PMF_LANG['metaLanguage'] != 'ja') ? 'uni' : $PMF_LANG['metaLanguage'];\nif (function_exists('mb_language') && in_array($mbLanguage, $validMbStrings)) {\n    mb_language($mbLanguage);\n    mb_internal_encoding('utf-8');\n}\n\n//\n// Found a session ID in _GET or _COOKIE?\n//\n$sidGet = Filter::filterInput(INPUT_GET, PMF_GET_KEY_NAME_SESSIONID, FILTER_VALIDATE_INT);\n$sidCookie = Filter::filterInput(INPUT_COOKIE, Session::PMF_COOKIE_NAME_SESSIONID, FILTER_VALIDATE_INT);\n$faqSession = new Session($faqConfig);\n$faqSession->setCurrentUser($user);\n\n// Note: do not track internal calls\n$internal = false;\nif (isset($_SERVER['HTTP_USER_AGENT'])) {\n    $internal = (strpos($_SERVER['HTTP_USER_AGENT'], 'phpMyFAQ%2F') === 0);\n}\nif (!$internal) {\n    if (is_null($sidGet) && is_null($sidCookie)) {\n        // Create a per-site unique SID\n        try {\n            $faqSession->userTracking('new_session', 0);\n        } catch (Exception $e) {\n            $pmfExceptions[] = $e->getMessage();\n        }\n    } elseif (!is_null($sidCookie)) {\n        try {\n            $faqSession->checkSessionId($sidCookie, $_SERVER['REMOTE_ADDR']);\n        } catch (Exception $e) {\n            $pmfExceptions[] = $e->getMessage();\n        }\n    } else {\n        try {\n            $faqSession->checkSessionId($sidGet, $_SERVER['REMOTE_ADDR']);\n        } catch (Exception $e) {\n            $pmfExceptions[] = $e->getMessage();\n        }\n    }\n}\n\n//\n// Is user tracking activated?\n//\n$sids = '';\nif ($faqConfig->get('main.enableUserTracking')) {\n    if ($faqSession->getCurrentSessionId() > 0) {\n        $faqSession->setCookie(Session::PMF_COOKIE_NAME_SESSIONID, $faqSession->getCurrentSessionId());\n        if (is_null($sidCookie)) {\n            $sids = sprintf('sid=%d&amp;lang=%s&amp;', $faqSession->getCurrentSessionId(), $faqLangCode);\n        }\n    } elseif (is_null($sidGet) || is_null($sidCookie)) {\n        if (is_null($sidCookie)) {\n            if (!is_null($sidGet)) {\n                $sids = sprintf('sid=%d&amp;lang=%s&amp;', $sidGet, $faqLangCode);\n            }\n        }\n    }\n} elseif (\n    !$faqSession->setCookie(\n        Session::PMF_COOKIE_NAME_SESSIONID,\n        $faqSession->getCurrentSessionId(),\n        $_SERVER['REQUEST_TIME'] + PMF_LANGUAGE_EXPIRED_TIME\n    )\n) {\n    $sids = sprintf('lang=%s&amp;', $faqLangCode);\n}\n\n//\n// Found a article language?\n//\n$lang = Filter::filterInput(INPUT_POST, 'artlang', FILTER_UNSAFE_RAW);\nif (is_null($lang) && !Language::isASupportedLanguage($lang)) {\n    $lang = Filter::filterInput(INPUT_GET, 'artlang', FILTER_UNSAFE_RAW);\n    if (is_null($lang) && !Language::isASupportedLanguage($lang)) {\n        $lang = $faqLangCode;\n    }\n}\n\n//\n// Sanitize language string\n//\nif (!Language::isASupportedLanguage($lang)) {\n    $lang = $faqConfig->getDefaultLanguage();\n}\n\n//\n// Found a search string?\n//\n$searchTerm = Filter::filterInput(INPUT_GET, 'search', FILTER_UNSAFE_RAW, '');\n\n//\n// Create a new FAQ object\n//\n$faq = new Faq($faqConfig);\n$faq->setUser($currentUser)\n    ->setGroups($currentGroups);\n\n//\n// Create a new Category object\n//\n$category = new Category($faqConfig, $currentGroups, true);\n$category->setUser($currentUser)\n    ->setGroups($currentGroups);\n\n//\n// Create a new Tags object\n//\n$oTag = new Tags($faqConfig);\n\n//\n// Create URL\n//\n$faqSystem = new System();\n$faqLink = new Link($faqSystem->getSystemUri($faqConfig), $faqConfig);\n$currentPageUrl = Strings::htmlentities($faqLink->getCurrentUrl());\n\n//\n// Found a record ID?\n//\n$id = Filter::filterInput(INPUT_GET, 'id', FILTER_VALIDATE_INT);\nif (!is_null($id)) {\n    $faq->getRecord($id);\n    $title = ' - ' . $faq->faqRecord['title'];\n    $keywords = ',' . $faq->faqRecord['keywords'];\n    $metaDescription = str_replace('\"', '', strip_tags($faq->getRecordPreview($id)));\n    $url = sprintf(\n        '%sindex.php?%saction=faq&cat=%d&id=%d&artlang=%s',\n        Strings::htmlentities($faqConfig->getDefaultUrl()),\n        $sids,\n        $category->getCategoryIdFromFaq($id),\n        $id,\n        $lang\n    );\n    $faqLink = new Link($url, $faqConfig);\n    $faqLink->itemTitle = $faq->faqRecord['title'];\n    $currentPageUrl = $faqLink->toString(true);\n} else {\n    $id = '';\n    $title = ' - powered by phpMyFAQ ' . $faqConfig->getVersion();\n    $keywords = '';\n    $metaDescription = str_replace('\"', '', $faqConfig->get('main.metaDescription'));\n}\n\n//\n// found a solution ID?\n//\n$solutionId = Filter::filterInput(INPUT_GET, 'solution_id', FILTER_VALIDATE_INT);\nif (!is_null($solutionId)) {\n    $title = ' -  powered by phpMyFAQ ' . $faqConfig->getVersion();\n    $keywords = '';\n    $faqData = $faq->getIdFromSolutionId($solutionId);\n    if (is_array($faqData)) {\n        $id = $faqData['id'];\n        $lang = $faqData['lang'];\n        $title = ' - ' . $faq->getRecordTitle($id);\n        $keywords = ',' . $faq->getRecordKeywords($id);\n        $metaDescription = str_replace('\"', '', Utils::makeShorterText(strip_tags($faqData['content']), 12));\n        $url = sprintf(\n            '%sindex.php?%saction=faq&cat=%d&id=%d&artlang=%s',\n            Strings::htmlentities($faqConfig->getDefaultUrl()),\n            $sids,\n            $faqData['category_id'],\n            $id,\n            $lang\n        );\n        $faqLink = new Link($url, $faqConfig);\n        $faqLink->itemTitle = $faqData['question'];\n        $currentPageUrl = $faqLink->toString(true);\n    }\n}\n\n//\n// Handle the Tagging ID\n//\n$tag_id = Filter::filterInput(INPUT_GET, 'tagging_id', FILTER_VALIDATE_INT);\nif (!is_null($tag_id)) {\n    $title = ' - ' . $oTag->getTagNameById($tag_id);\n    $keywords = '';\n}\n\n//\n// Handle the SiteMap\n//\n$letter = Filter::filterInput(INPUT_GET, 'letter', FILTER_UNSAFE_RAW);\nif (!is_null($letter) && (1 == Strings::strlen($letter))) {\n    $title = ' - ' . $letter . '...';\n    $keywords = $letter;\n}\n\n//\n// Found a category ID?\n//\n$cat = Filter::filterInput(INPUT_GET, 'cat', FILTER_VALIDATE_INT, 0);\n$categoryFromId = -1;\nif (is_numeric($id) && $id > 0) {\n    $categoryFromId = $category->getCategoryIdFromFaq($id);\n}\nif ($categoryFromId != -1 && $cat == 0) {\n    $cat = $categoryFromId;\n}\n$category->transform(0);\n$category->collapseAll();\nif ($cat != 0) {\n    $category->expandTo($cat);\n}\nif (isset($cat) && ($cat != 0) && ($id == '') && isset($category->categoryName[$cat]['name'])) {\n    $title = ' - ' . $category->categoryName[$cat]['name'];\n    $metaDescription = $category->categoryName[$cat]['description'];\n}\n\n//\n// Found an action request?\n//\nif (!isset(Link::$allowedActionParameters[$action])) {\n    $action = 'main';\n}\n\n//\n// Select the template for the requested page\n//\nif ($action !== 'main') {\n    $includeTemplate = $action . '.html';\n    $includePhp = $action . '.php';\n    $renderUri = '?sid=' . $faqSession->getCurrentSessionId();\n} else {\n    if (isset($solutionId) && is_numeric($solutionId)) {\n        // show the record with the solution ID\n        $includeTemplate = 'faq.html';\n        $includePhp = 'faq.php';\n    } else {\n        $includeTemplate = 'startpage.html';\n        $includePhp = 'startpage.php';\n    }\n    $renderUri = '?sid=' . $faqSession->getCurrentSessionId();\n}\n\n//\n// Set sidebar column\n//\nif (($action === 'faq') || ($action === 'show') || ($action === 'main')) {\n    $sidebarTemplate = 'sidebar-tagcloud.html';\n} else {\n    $sidebarTemplate = 'sidebar-empty.html';\n}\n\n//\n// Check if FAQ should be secured\n//\nif ($faqConfig->get('security.enableLoginOnly')) {\n    if ($auth) {\n        $indexSet = 'index.html';\n    } else {\n        switch ($action) {\n            case 'register':\n            case 'thankyou':\n                $indexSet = 'new-user.page.html';\n                break;\n            case 'password':\n                $indexSet = 'password.page.html';\n                break;\n            default:\n                $indexSet = 'login.page.html';\n                break;\n        }\n    }\n} else {\n    $indexSet = 'index.html';\n}\n\n//\n// phpMyFAQ installation is in maintenance mode\n//\nif ($faqConfig->get('main.maintenanceMode')) {\n    $indexSet = 'maintenance.page.html';\n}\n\n//\n// Load template files and set template variables\n//\n$template = new Template(\n    [\n        'index' => $indexSet,\n        'sidebar' => $sidebarTemplate,\n        'mainPageContent' => $includeTemplate,\n    ],\n    new TemplateHelper($faqConfig),\n    $faqConfig->get('main.templateSet')\n);\n\n$categoryRelation = new CategoryRelation($faqConfig);\n\n$categoryHelper = new HelperCategory();\n$categoryHelper->setCategory($category);\n$categoryHelper->setConfiguration($faqConfig);\n$categoryHelper->setCategoryRelation($categoryRelation);\n\n$keywordsArray = array_merge(explode(',', $keywords), explode(',', $faqConfig->get('main.metaKeywords')));\n$keywordsArray = array_filter($keywordsArray, 'strlen');\nshuffle($keywordsArray);\n$keywords = implode(',', $keywordsArray);\n\nif (!is_null($error)) {\n    $loginMessage = '<p class=\"error\">' . $error . '</p>';\n} else {\n    $loginMessage = '';\n}\n\n$faqSeo = new Seo($faqConfig);\n\n$tplMainPage = [\n    'msgLoginUser' => $user->isLoggedIn() ? $user->getUserData('display_name') : $PMF_LANG['msgLoginUser'],\n    'title' => Strings::htmlspecialchars($faqConfig->getTitle() . $title),\n    'baseHref' => Strings::htmlentities($faqSystem->getSystemUri($faqConfig)),\n    'version' => $faqConfig->getVersion(),\n    'header' => Strings::htmlentities(str_replace('\"', '', $faqConfig->getTitle())),\n    'metaTitle' => Strings::htmlentities(str_replace('\"', '', $faqConfig->getTitle() . $title)),\n    'metaDescription' => Strings::htmlentities($metaDescription ?? ''),\n    'metaKeywords' => Strings::htmlentities($keywords),\n    'metaPublisher' => Strings::htmlentities($faqConfig->get('main.metaPublisher')),\n    'metaLanguage' => $PMF_LANG['metaLanguage'],\n    'metaRobots' => $faqSeo->getMetaRobots($action),\n    'phpmyfaqversion' => $faqConfig->getVersion(),\n    'stylesheet' => $PMF_LANG['dir'] == 'rtl' ? 'style.rtl' : 'style',\n    'currentPageUrl' => $currentPageUrl,\n    'action' => $action,\n    'dir' => $PMF_LANG['dir'],\n    'writeSendAdress' => '?' . $sids . 'action=search',\n    'searchBox' => $PMF_LANG['msgSearch'],\n    'searchTerm' => Strings::htmlentities($searchTerm, ENT_QUOTES),\n    'categoryId' => ($cat === 0) ? '%' : (int)$cat,\n    'headerCategories' => $PMF_LANG['msgFullCategories'],\n    'msgCategory' => $PMF_LANG['msgCategory'],\n    'showCategories' => $categoryHelper->renderNavigation($cat),\n    'topCategories' => $categoryHelper->renderMainCategories(),\n    'msgExportAllFaqs' => $PMF_LANG['msgExportAllFaqs'],\n    'languageBox' => $PMF_LANG['msgLanguageSubmit'],\n    'renderUri' => $renderUri,\n    'switchLanguages' => LanguageHelper::renderSelectLanguage($faqLangCode, true),\n    'copyright' => 'powered with \u2764\ufe0f and \u2615\ufe0f by <a href=\"https://www.phpmyfaq.de\" target=\"_blank\">phpMyFAQ</a> ' .\n        $faqConfig->getVersion(),\n    'registerUser' => $faqConfig->get('security.enableRegistration') ? '<a href=\"?action=register\">' .\n        $PMF_LANG['msgRegistration'] . '</a>' : '',\n    'sendPassword' => '<a href=\"?action=password\">' . $PMF_LANG['lostPassword'] . '</a>',\n    'msgFullName' => $PMF_LANG['ad_user_loggedin'] . $user->getLogin(),\n    'msgLoginName' => Strings::htmlentities($user->getUserData('display_name')),\n    'loginHeader' => $PMF_LANG['msgLoginUser'],\n    'loginMessage' => $loginMessage,\n    'writeLoginPath' => Strings::htmlentities($faqSystem->getSystemUri($faqConfig)) . '?' . Filter::getFilteredQueryString(),\n    'faqloginaction' => $action,\n    'login' => $PMF_LANG['ad_auth_ok'],\n    'username' => $PMF_LANG['ad_auth_user'],\n    'password' => $PMF_LANG['ad_auth_passwd'],\n    'rememberMe' => $PMF_LANG['rememberMe'],\n    'headerChangePassword' => $PMF_LANG['ad_passwd_cop'],\n    'msgUsername' => $PMF_LANG['ad_auth_user'],\n    'msgEmail' => $PMF_LANG['ad_entry_email'],\n    'msgSubmit' => $PMF_LANG['msgNewContentSubmit'],\n    'loginPageMessage' => $PMF_LANG['loginPageMessage'],\n    'msgAdvancedSearch' => $PMF_LANG['msgAdvancedSearch']\n];\n\n$template->parseBlock(\n    'index',\n    'categoryListSection',\n    [\n        'showCategories' => $categoryHelper->renderNavigation($cat),\n        'categoryDropDown' => $categoryHelper->renderCategoryDropDown(),\n    ]\n);\n\nif ('main' == $action || 'show' == $action) {\n    $template->parseBlock(\n        'index',\n        'globalSearchBox',\n        [\n            'writeSendAdress' => '?' . $sids . 'action=search',\n            'searchBox' => $PMF_LANG['msgSearch'],\n            'categoryId' => ($cat === 0) ? '%' : (int)$cat,\n            'msgSearch' => sprintf(\n                '<a class=\"help\" href=\"./index.php?action=search\">%s</a>',\n                $PMF_LANG['msgAdvancedSearch']\n            ),\n        ]\n    );\n}\n\nif ($faqConfig->get('main.enableRewriteRules')) {\n    $tplNavigation = [\n        'msgSearch' => '<a class=\"nav-link\" href=\"./search.html\">' . $PMF_LANG['msgAdvancedSearch'] . '</a>',\n        'msgAddContent' => '<a class=\"nav-link\" href=\"./addcontent.html\">' .\n            $PMF_LANG['msgAddContent'] . '</a>',\n        'msgQuestion' => '<a class=\"nav-link\" href=\"./ask.html\">' . $PMF_LANG['msgQuestion'] . '</a>',\n        'msgOpenQuestions' => '<a class=\"nav-link\" href=\"./open-questions.html\">' . $PMF_LANG['msgOpenQuestions'] .\n            '</a>',\n        'msgContact' => '<a href=\"./contact.html\">' . $PMF_LANG['msgContact'] . '</a>',\n        'msgGlossary' => '<a href=\"./glossary.html\">' . $PMF_LANG['ad_menu_glossary'] . '</a>',\n        'privacyLink' => sprintf(\n            '<a target=\"_blank\" href=\"%s\">%s</a>',\n            Strings::htmlentities($faqConfig->get('main.privacyURL')),\n            $PMF_LANG['msgPrivacyNote']\n        ),\n        'backToHome' => '<a href=\"./index.html\">' . $PMF_LANG['msgHome'] . '</a>',\n        'allCategories' => '<a class=\"nav-link\" href=\"./showcat.html\">' . $PMF_LANG['msgShowAllCategories'] . '</a>',\n        'faqOverview' => '<a href=\"./overview.html\">' . $PMF_LANG['faqOverview'] . '</a>',\n        'showSitemap' => '<a href=\"./sitemap/A/' . $faqLangCode . '.html\">' . $PMF_LANG['msgSitemap'] . '</a>',\n        'msgUserRemoval' => '<a href=\"./request-removal.html\">' . $PMF_LANG['msgUserRemoval'] . '</a>'\n    ];\n} else {\n    $tplNavigation = [\n        'msgSearch' => '<a class=\"nav-link\" href=\"index.php?' . $sids . 'action=search\">' .\n            $PMF_LANG['msgAdvancedSearch'] . '</a>',\n        'msgAddContent' => '<a class=\"nav-link\" href=\"index.php?' . $sids . 'action=add&cat=' . $cat . '\">' .\n            $PMF_LANG['msgAddContent'] . '</a>',\n        'msgQuestion' => '<a class=\"nav-link\" href=\"index.php?' . $sids . 'action=ask&category_id=' . $cat . '\">' .\n            $PMF_LANG['msgQuestion'] . '</a>',\n        'msgOpenQuestions' => '<a class=\"nav-link\" href=\"index.php?' . $sids . 'action=open-questions\">' .\n            $PMF_LANG['msgOpenQuestions'] . '</a>',\n        'msgContact' => '<a href=\"index.php?' . $sids . 'action=contact\">' . $PMF_LANG['msgContact'] . '</a>',\n        'msgGlossary' => '<a href=\"index.php?' . $sids . 'action=glossary\">' . $PMF_LANG['ad_menu_glossary'] . '</a>',\n        'privacyLink' => sprintf(\n            '<a target=\"_blank\" href=\"%s\">%s</a>',\n            Strings::htmlentities($faqConfig->get('main.privacyURL')),\n            $PMF_LANG['msgPrivacyNote']\n        ),\n        'allCategories' => '<a class=\"nav-link\" href=\"index.php?' . $sids . 'action=show\">' .\n            $PMF_LANG['msgShowAllCategories'] . '</a>',\n        'faqOverview' => '<a href=\"index.php?' . $sids . 'action=overview\">' . $PMF_LANG['faqOverview'] . '</a>',\n        'backToHome' => '<a href=\"index.php?' . $sids . '\">' . $PMF_LANG['msgHome'] . '</a>',\n        'showSitemap' => '<a href=\"index.php?' . $sids . 'action=sitemap&amp;lang=' . $faqLangCode . '\">' .\n            $PMF_LANG['msgSitemap'] . '</a>',\n        'msgUserRemoval' => '<a href=\"index.php?' . $sids . 'action=request-removal\">' . $PMF_LANG['msgUserRemoval'] .\n            '</a>',\n    ];\n}\n\n$tplNavigation['faqHome'] = Strings::htmlentities($faqConfig->getDefaultUrl());\n$tplNavigation['activeSearch'] = ('search' == $action) ? 'active' : '';\n$tplNavigation['activeAllCategories'] = ('show' == $action) ? 'active' : '';\n$tplNavigation['activeAddContent'] = ('add' == $action) ? 'active' : '';\n$tplNavigation['activeAddQuestion'] = ('ask' == $action) ? 'active' : '';\n$tplNavigation['activeOpenQuestions'] = ('open-questions' == $action) ? 'active' : '';\n$tplNavigation['activeLogin'] = ('login' == $action) ? 'active' : '';\n\n//\n// Show login box or logged-in user information\n//\nif (isset($auth)) {\n    if ($user->perm->hasPermission($user->getUserId(), 'viewadminlink') || $user->isSuperAdmin()) {\n        $adminSection = sprintf(\n            '<a class=\"dropdown-item\" href=\"./admin/index.php\">%s</a>',\n            $PMF_LANG['adminSection']\n        );\n    } else {\n        $adminSection = '';\n    }\n\n    $template->parseBlock(\n        'index',\n        'userloggedIn',\n        [\n            'msgUserControl' => $adminSection,\n            'msgLoginName' => $user->getUserData('display_name'), // @deprecated\n            'msgUserControlDropDown' => '<a class=\"dropdown-item\" href=\"?action=ucp\">' .\n                $PMF_LANG['headerUserControlPanel'] . '</a>',\n            'msgUserRemoval' => '<a class=\"dropdown-item\" href=\"?action=request-removal\">' .\n                $PMF_LANG['ad_menu_RequestRemove'] . '</a>',\n            'msgLogoutUser' => sprintf(\n                '<a class=\"dropdown-item\" href=\"?action=logout&csrf=%s\">%s</a>',\n                $user->getCsrfTokenFromSession(),\n                $PMF_LANG['ad_menu_logout'],\n            ),\n            'activeUserControl' => ('ucp' == $action) ? 'active' : ''\n        ]\n    );\n} else {\n    if ($faqConfig->get('main.maintenanceMode')) {\n        $msgLoginUser = '<a class=\"dropdown-item\" href=\"./admin/\">%s</a>';\n    } else {\n        $msgLoginUser = '<a class=\"dropdown-item\" href=\"?action=login\">%s</a>';\n    }\n    $template->parseBlock(\n        'index',\n        'notLoggedIn',\n        [\n            'msgRegisterUser' => $faqConfig->get('security.enableRegistration')\n                ?\n                '<a class=\"dropdown-item\" href=\"?action=register\">' . $PMF_LANG['msgRegisterUser'] . '</a>'\n                :\n                '',\n            'msgLoginUser' => sprintf($msgLoginUser, $PMF_LANG['msgLoginUser']),\n            'activeRegister' => ('register' == $action) ? 'active' : '',\n            'activeLogin' => ('login' == $action) ? 'active' : '',\n        ]\n    );\n}\n\n$template->parse(\n    'sidebar',\n    [\n        'writeTagCloudHeader' => $PMF_LANG['msg_tags'],\n        'writeTags' => $oTag->renderTagCloud(),\n        'msgAllCatArticles' => $PMF_LANG['msgAllCatArticles'],\n        'allCatArticles' => $faq->getRecordsWithoutPagingByCategoryId($cat)\n    ]\n);\n\nif (DEBUG) {\n    $template->parseBlock(\n        'index',\n        'debugMode',\n        [\n            'debugQueries' => $faqConfig->getDb()->log(),\n        ]\n    );\n}\n\n//\n// Redirect old \"action=artikel\" URLs via 301 to new location\n//\nif ('artikel' === $action) {\n    $url = sprintf(\n        '%sindex.php?action=faq&cat=%d&id=%d&artlang=%s',\n        Strings::htmlspecialchars($faqConfig->getDefaultUrl()),\n        $category->getCategoryIdFromFaq($id),\n        $id,\n        $lang\n    );\n    $link = new Link($url, $faqConfig);\n    $http->setStatus(301);\n    $http->redirect($link->toString());\n    exit();\n}\n\n//\n// Include requested PHP file\n//\nrequire $includePhp;\n\n//\n// Get main template, set main variables\n//\n$template->parse('index', array_merge($tplMainPage, $tplNavigation));\n$template->merge('sidebar', 'index');\n$template->merge('mainPageContent', 'index');\n\n//\n// Send headers and print template\n//\n$http->setConfiguration($faqConfig);\n$http->setContentType('text/html');\n$http->addHeader();\n$http->startCompression();\n\n//\n// Check for 404 HTTP status code\n//\nif ($http->getStatusCode() === 404 || $action === '404') {\n    $template = new Template(\n        [\n            'index' => '404.html',\n            'mainPageContent' => ''\n        ],\n        new TemplateHelper($faqConfig),\n        $faqConfig->get('main.templateSet')\n    );\n    $template->parse('index', array_merge($tplMainPage, $tplNavigation));\n}\n\n$template->render();\n\n$faqConfig->getDb()->close();\n", "<?php\n\n/**\n * Request removal page.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2018-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2018-02-03\n */\n\nuse phpMyFAQ\\Captcha;\nuse phpMyFAQ\\Core\\Exception;\nuse phpMyFAQ\\Helper\\CaptchaHelper;\nuse phpMyFAQ\\Strings;\nuse phpMyFAQ\\User\\CurrentUser;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\ntry {\n    $faqSession->userTracking('request_removal', 0);\n} catch (Exception $e) {\n    // @todo handle the exception\n}\n\n$captcha = new Captcha($faqConfig);\n$captcha->setSessionId($sids);\n\nif (!is_null($showCaptcha)) {\n    $captcha->drawCaptchaImage();\n    exit;\n}\n\n$captchaHelper = new CaptchaHelper($faqConfig);\n\n$template->parse(\n    'mainPageContent',\n    [\n        'pageHeader' => $PMF_LANG['msgUserRemoval'],\n        'msgContact' => $PMF_LANG['msgContact'],\n        'msgUserRemovalText' => $PMF_LANG['msgUserRemovalText'],\n        'msgContactRemove' => $PMF_LANG['msgContactRemove'],\n        'msgContactPrivacyNote' => $PMF_LANG['msgContactPrivacyNote'],\n        'msgPrivacyNote' => $PMF_LANG['msgPrivacyNote'],\n        'privacyURL' => Strings::htmlentities($faqConfig->get('main.privacyURL')),\n        'msgNewContentName' => $PMF_LANG['msgNewContentName'],\n        'msgNewContentMail' => $PMF_LANG['msgNewContentMail'],\n        'ad_user_loginname' => $PMF_LANG['ad_user_loginname'],\n        'lang' => $Language->getLanguage(),\n        'defaultContentMail' => ($user instanceof CurrentUser) ? $user->getUserData('email') : '',\n        'defaultContentName' => ($user instanceof CurrentUser) ? $user->getUserData('display_name') : '',\n        'defaultLoginName' => ($user instanceof CurrentUser) ? $user->getLogin() : '',\n        'msgMessage' => $PMF_LANG['msgMessage'],\n        'msgS2FButton' => $PMF_LANG['msgS2FButton'],\n        'version' => $faqConfig->getVersion(),\n        'captchaFieldset' => $captchaHelper->renderCaptcha($captcha, 'contact', $PMF_LANG['msgCaptcha'], $auth),\n    ]\n);\n"], "filenames": ["phpmyfaq/contact.php", "phpmyfaq/index.php", "phpmyfaq/request-removal.php"], "buggy_code_start_loc": [52, 622, 20], "buggy_code_end_loc": [53, 646, 54], "fixing_code_start_loc": [52, 622, 21], "fixing_code_end_loc": [53, 646, 55], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - DOM in GitHub repository thorsten/phpmyfaq prior to 3.1.12.", "other": {"cve": {"id": "CVE-2023-1882", "sourceIdentifier": "security@huntr.dev", "published": "2023-04-05T17:15:07.227", "lastModified": "2023-04-11T17:38:23.210", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - DOM in GitHub repository thorsten/phpmyfaq prior to 3.1.12."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:C/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.7, "impactScore": 5.8}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpmyfaq:phpmyfaq:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.1.12", "matchCriteriaId": "653EC167-06FC-4D30-AAF8-B75F596519AE"}]}]}], "references": [{"url": "https://github.com/thorsten/phpmyfaq/commit/49db615c300ae0f87795f20570f6f5bdccb1d2f2", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/8ab09a1c-cfd5-4ce0-aae3-d33c93318957", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/thorsten/phpmyfaq/commit/49db615c300ae0f87795f20570f6f5bdccb1d2f2"}}