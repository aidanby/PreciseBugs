{"buggy_code": ["# Release Notes\n\n\n## WIP\n\n- Add `./tower app:update` cli command to update Cockpit to the latest or specific version\n\n## 2.2.1 (2022-08-10)\n\n- Fix linked tree content item display resolver\n- Refactor content models index page\n\n## 2.2.0 (2022-08-08)\n\n- Add create|update|delete endpoints content item to REST API\n- Add GraphQL mutation saveContentItem to create|update content items\n- Add GraphQL mutation deleteContentItem to delete content items\n- Add app side panel (admin layout)\n- Stop execution of code after redirecting\n\n## 2.1.2 (2022-08-04)\n\n- \ud83d\udea8 Fix typo field-contentItemtLink -> Need to re-assign field type contentItemLink \ud83d\udea8\n- General cleanup + fix typos\n- Add content tree items reorder permission\n- Refactor app layout header\n- Show more detailed error message if saving user settings fail\n- Hide publish state configuration ui if missing permission to mange publish state\n- Fix selected item link of tree model\n- Fix missing assets folders permission checks\n\n## 2.1.1 (2022-08-02)\n\n- Fix tree model route in app search results\n- Fix loosing nested level on saving tree item\n\n## 2.1.0 (2022-08-01)\n\n- Add initial global app search implementation (alt|option + f)\n- Minor fixes on closing html tag + uninitialized variable #11 @remluben\n- Update lib/vendor\n- Update vendor assets sortablejs v1.15, uppy v2.13.1, tinyMCE v6.1.2\n- Add model type tree - organize content items as tree\n\n## 2.0.2 (2022-07-20)\n\n- Fix select boxes in dark theme (chrome on windows) #8\n- Change login (noun) to log in (verb)\n- Fix required field check on nested repeatable items\n- Enable picking item by clicking on empty placeholder area (Asset + Content Link field)\n- Open api playground with preselected api key\n- Enable clear field function also in nested fields\n- Make fields-manger + fields-renderer component available by default\n- Set content model icon\n\n## 2.0.1 (2022-07-17)\n\n- Refactor admin ui localization\n- Object.freeze App._vars + App._paths\n- Make logged in user information available on the client side (App.user)\n- Update .htaccess file to deny public access to php files except router entry index.php\n- Add visual hover state to content item tables\n\n## 2.0.0 (2022-07-13)\n\n- Initial release \ud83c\udf7e\ud83e\udd73", "<?php\n\nnamespace App\\Controller;\n\n/**\n * Class Controller\n * @package App\n */\nclass Auth extends Base {\n\n    protected $layout = 'app:layouts/canvas.php';\n\n    public function login() {\n\n        if ($this->helper('auth')->getUser()) {\n            $this->app->reroute('/');\n        }\n\n        $this->app->response->nocache = true;\n\n        $redirectTo = $this->param('to', '/');\n\n        if (\\substr($redirectTo, 0, 1) !== '/') {\n            $redirectTo = '/';\n        }\n\n        $redirectTo = htmlspecialchars($this->routeUrl($redirectTo), ENT_QUOTES, 'UTF-8');\n\n        $this->helper('theme')->pageClass('login-page');\n\n        return $this->render('app:views/auth/login.php', \\compact('redirectTo'));\n    }\n\n    public function logout() {\n\n        $this->helper('auth')->logout();\n\n        if ($this->app->request->is('ajax')) {\n            return ['logout' => true];\n        } else {\n            $this->app->reroute('/auth/login?logout=1');\n        }\n    }\n\n    public function check() {\n\n        if ($this->helper('auth')->getUser()) {\n            return false;\n        }\n\n        $auth = $this->param('auth');\n\n        if (!$auth || !isset($auth['user'], $auth['password']) || !\\is_string($auth['user']) || !\\is_string($auth['password'])) {\n            return $this->stop(412);\n        }\n\n        if (!$this->helper('csrf')->isValid('login', $this->param('csrf'), true)) {\n            return $this->stop(412);\n        }\n\n        $auth = [\n            'user' => $auth['user'],\n            'password' => $auth['password'],\n        ];\n\n        if (isset($auth['user']) && $this->helper('utils')->isEmail($auth['user'])) {\n            $auth['email'] = $auth['user'];\n            $auth['user']  = '';\n        }\n\n        $user = $this->helper('auth')->authenticate($auth);\n\n        if ($user && $user['role'] == 'public') {\n            return $this->stop(412);\n        }\n\n        if ($user) {\n\n            if (isset($user['twofa']['enabled']) && $user['twofa']['enabled']) {\n\n                return [\n                    'success' => true,\n                    'user' => [\n                        'name' => $user['name'],\n                        'user' => $user['user'],\n                        'email' => $user['email'],\n                        'twofa' => $this->helper('jwt')->create($user)\n                    ]\n                ];\n\n            } else {\n                // remove twofa settings\n                unset($user['twofa']);\n            }\n\n            $this->app->trigger('app.user.disguise', [&$user]);\n\n            $this->helper('auth')->setUser($user);\n            $this->helper('session')->write('app.session.start', time());\n\n            $this->app->trigger('app.user.login', [$user]);\n\n            return ['success' => true, 'user' => $user];\n        }\n\n        return ['success' => false];\n    }\n\n    public function validate2FA() {\n\n        $code = $this->param('code', null);\n        $token = $this->param('token', null);\n\n        try {\n            $user = (array) $this->app->helper('jwt')->decode($token);\n        } catch(\\Exception $e) {\n            return $this->stop(412);\n        }\n\n        if (!$code || !isset($user['_id'])) {\n            return $this->stop(412);\n        }\n\n        $user = $this->app->dataStorage->findOne('system/users', ['_id' => $user['_id']]);\n\n        if ($user && $this->helper('twfa')->verifyCode($user['twofa']['secret'], $code)) {\n\n            unset($user['twofa']);\n\n            $this->app->trigger('app.user.disguise', [&$user]);\n\n            $this->helper('auth')->setUser($user);\n            $this->helper('session')->write('app.session.start', time());\n\n            $this->trigger('app.user.login', [&$user]);\n\n            return ['success' => true, 'user' => $user];\n        }\n\n        return $this->stop(412);\n\n    }\n}"], "fixing_code": ["# Release Notes\n\n\n## WIP\n\n- Add `./tower app:update` cli command to update Cockpit to the latest or specific version\n- Fix exposing 2FA secret in JWT token on login\n\n## 2.2.1 (2022-08-10)\n\n- Fix linked tree content item display resolver\n- Refactor content models index page\n\n## 2.2.0 (2022-08-08)\n\n- Add create|update|delete endpoints content item to REST API\n- Add GraphQL mutation saveContentItem to create|update content items\n- Add GraphQL mutation deleteContentItem to delete content items\n- Add app side panel (admin layout)\n- Stop execution of code after redirecting\n\n## 2.1.2 (2022-08-04)\n\n- \ud83d\udea8 Fix typo field-contentItemtLink -> Need to re-assign field type contentItemLink \ud83d\udea8\n- General cleanup + fix typos\n- Add content tree items reorder permission\n- Refactor app layout header\n- Show more detailed error message if saving user settings fail\n- Hide publish state configuration ui if missing permission to mange publish state\n- Fix selected item link of tree model\n- Fix missing assets folders permission checks\n\n## 2.1.1 (2022-08-02)\n\n- Fix tree model route in app search results\n- Fix loosing nested level on saving tree item\n\n## 2.1.0 (2022-08-01)\n\n- Add initial global app search implementation (alt|option + f)\n- Minor fixes on closing html tag + uninitialized variable #11 @remluben\n- Update lib/vendor\n- Update vendor assets sortablejs v1.15, uppy v2.13.1, tinyMCE v6.1.2\n- Add model type tree - organize content items as tree\n\n## 2.0.2 (2022-07-20)\n\n- Fix select boxes in dark theme (chrome on windows) #8\n- Change login (noun) to log in (verb)\n- Fix required field check on nested repeatable items\n- Enable picking item by clicking on empty placeholder area (Asset + Content Link field)\n- Open api playground with preselected api key\n- Enable clear field function also in nested fields\n- Make fields-manger + fields-renderer component available by default\n- Set content model icon\n\n## 2.0.1 (2022-07-17)\n\n- Refactor admin ui localization\n- Object.freeze App._vars + App._paths\n- Make logged in user information available on the client side (App.user)\n- Update .htaccess file to deny public access to php files except router entry index.php\n- Add visual hover state to content item tables\n\n## 2.0.0 (2022-07-13)\n\n- Initial release \ud83c\udf7e\ud83e\udd73", "<?php\n\nnamespace App\\Controller;\n\n/**\n * Class Controller\n * @package App\n */\nclass Auth extends Base {\n\n    protected $layout = 'app:layouts/canvas.php';\n\n    public function login() {\n\n        if ($this->helper('auth')->getUser()) {\n            $this->app->reroute('/');\n        }\n\n        $this->app->response->nocache = true;\n\n        $redirectTo = $this->param('to', '/');\n\n        if (\\substr($redirectTo, 0, 1) !== '/') {\n            $redirectTo = '/';\n        }\n\n        $redirectTo = htmlspecialchars($this->routeUrl($redirectTo), ENT_QUOTES, 'UTF-8');\n\n        $this->helper('theme')->pageClass('login-page');\n\n        return $this->render('app:views/auth/login.php', \\compact('redirectTo'));\n    }\n\n    public function logout() {\n\n        $this->helper('auth')->logout();\n\n        if ($this->app->request->is('ajax')) {\n            return ['logout' => true];\n        } else {\n            $this->app->reroute('/auth/login?logout=1');\n        }\n    }\n\n    public function check() {\n\n        if ($this->helper('auth')->getUser()) {\n            return false;\n        }\n\n        $auth = $this->param('auth');\n\n        if (!$auth || !isset($auth['user'], $auth['password']) || !\\is_string($auth['user']) || !\\is_string($auth['password'])) {\n            return $this->stop(412);\n        }\n\n        if (!$this->helper('csrf')->isValid('login', $this->param('csrf'), true)) {\n            return $this->stop(412);\n        }\n\n        $auth = [\n            'user' => $auth['user'],\n            'password' => $auth['password'],\n        ];\n\n        if (isset($auth['user']) && $this->helper('utils')->isEmail($auth['user'])) {\n            $auth['email'] = $auth['user'];\n            $auth['user']  = '';\n        }\n\n        $user = $this->helper('auth')->authenticate($auth);\n\n        if ($user && $user['role'] == 'public') {\n            return $this->stop(412);\n        }\n\n        if ($user) {\n\n            if (isset($user['twofa']['enabled']) && $user['twofa']['enabled']) {\n\n                unset($user['twofa']);\n\n                return [\n                    'success' => true,\n                    'user' => [\n                        'name' => $user['name'],\n                        'user' => $user['user'],\n                        'email' => $user['email'],\n                        'twofa' => $this->helper('jwt')->create([\n                            '_id'   => $user['_id'],\n                            'user'  => $user['user'],\n                            'name'  => $user['name'],\n                            'email' => $user['email'],\n                            'role'  => $user['role'],\n                        ])\n                    ]\n                ];\n\n            }\n\n            // remove 2FA settings from user session\n            unset($user['twofa']);\n\n            $this->app->trigger('app.user.disguise', [&$user]);\n\n            $this->helper('auth')->setUser($user);\n            $this->helper('session')->write('app.session.start', time());\n\n            $this->app->trigger('app.user.login', [$user]);\n\n            return ['success' => true, 'user' => $user];\n        }\n\n        return ['success' => false];\n    }\n\n    public function validate2FA() {\n\n        $code = $this->param('code', null);\n        $token = $this->param('token', null);\n\n        try {\n            $user = (array) $this->app->helper('jwt')->decode($token);\n        } catch(\\Exception $e) {\n            return $this->stop(412);\n        }\n\n        if (!$code || !isset($user['_id'])) {\n            return $this->stop(412);\n        }\n\n        $user = $this->app->dataStorage->findOne('system/users', ['_id' => $user['_id']]);\n\n        if ($user && $this->helper('twfa')->verifyCode($user['twofa']['secret'], $code)) {\n\n            unset($user['twofa']);\n\n            $this->app->trigger('app.user.disguise', [&$user]);\n\n            $this->helper('auth')->setUser($user);\n            $this->helper('session')->write('app.session.start', time());\n\n            $this->trigger('app.user.login', [&$user]);\n\n            return ['success' => true, 'user' => $user];\n        }\n\n        return $this->stop(412);\n\n    }\n}\n"], "filenames": ["CHANGELOG.md", "modules/App/Controller/Auth.php"], "buggy_code_start_loc": [6, 80], "buggy_code_end_loc": [6, 144], "fixing_code_start_loc": [7, 81], "fixing_code_end_loc": [8, 152], "type": "CWE-287", "message": "Authentication Bypass by Primary Weakness in GitHub repository cockpit-hq/cockpit prior to 2.2.2.", "other": {"cve": {"id": "CVE-2022-2818", "sourceIdentifier": "security@huntr.dev", "published": "2022-08-15T11:21:31.053", "lastModified": "2022-10-26T16:59:45.777", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Authentication Bypass by Primary Weakness in GitHub repository cockpit-hq/cockpit prior to 2.2.2."}, {"lang": "es", "value": "Una Omisi\u00f3n de Autenticaci\u00f3n por Debilidad Primaria en el repositorio de GitHub cockpit-hq/cockpit versiones anteriores a 2.2.2."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-287"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-305"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:agentejo:cockpit:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.2.2", "matchCriteriaId": "BABCAF08-54A2-4734-BBE9-309F4B36D560"}]}]}], "references": [{"url": "https://github.com/cockpit-hq/cockpit/commit/4bee1b903ee20818f4a8ecb9d974b9536cc54cb4", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/ee27e5df-516b-4cf4-9f28-346d907b5491", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/cockpit-hq/cockpit/commit/4bee1b903ee20818f4a8ecb9d974b9536cc54cb4"}}