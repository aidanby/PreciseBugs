{"buggy_code": ["03/27/2023\n- fix code scanning alerts:\n- bump to 2.4.13.2rc2\n  \n03/24/2023\n- add support for Elliptic Curve signing/encryption keys in addtion to RSA keys,\n  i.e. client keys configured in OIDCPrivateKeyFiles/OIDCPublicKeyFiles, published on OIDCClientJwksUri\n  and used in private_key_jwt authentication, encrypted id_token's, request objects/uri's,\n  but also statically configured provider keys in OIDCOAuthVerifyCertFiles and OIDCProviderVerifyCertFiles\n- refactor Docker tests make targets; add test/Makefile\n- bump to 2.4.13.2rc1\n\n03/24/2023\n- record authorization errors in environment variable OIDC_AUTHZ_ERROR\n  so its value can be used in logs e.g. with HTTP 401 responses:\n    LogFormat \"%h %l %u %t %U %401{OIDC_AUTHZ_ERROR}e %>s %b\" combined\n- log authorization errors with oidc_debug instead of oidc_info\n- bump to 2.4.13.2rc0\n\n03/10/2023\n- fix oidc_jwk_list_copy and usage of OIDCProviderVerifyCertFiles\n- release 2.4.13.1\n\n03/10/2023\n- shm cache: increase default maximum number of active sessions from 500 to 2000\n- shm cache: allow configuration of max 1Mb of session data for a single session\n- use deep-copy and cleanup functions for server and provider configs; fixes overriding server-level keys in vhost configs\n- release 2.4.13\n\n03/09/2023\n- add support for OP \"signed_jwks_uri\" with \"OIDCProviderSignedJwksUri <uri> <jwk>\"\n- don't pull JWKs when the id_token was signed with a symmetric key\n- don't immediately refresh of JWKs from (signed)_jwks_uri if \"kid\" was not set in JWT, but try the cache first\n- warn about incorrect configurations not setting OIDCCryptoPassphrase; see https://github.com/OpenIDC/mod_auth_openidc/discussions/1030\n- bump to 2.4.13rc5\n\n03/08/2023\n- move repo to OpenIDC github organization\n\n03/02/2023\n- allow setting minumum and maximum versions of TLS used in HTTPs calls via libcurl environment\n  variable CURLOPT_SSL_OPTIONS e.g.:\n  SetEnvIfExpr true \"CURLOPT_SSL_OPTIONS=CURL_SSLVERSION_TLSv1_3 CURL_SSLVERSION_MAX_TLSv1_3\" ; bump to 2.4.13rc3\n- bump to 2.4.13rc3\n\n03/01/2023\n- revert accidentally removed libbrotli code in jose.c\n- bump to 2.4.13rc2\n\n02/19/2023\n- add optional - compilation time support - for brotli compression of session and state cookies\n\n02/17/2023\n- avoid (small) memory leak when using OpenSSL 3.x when setting public/private keys\n  (over graceful restarts) in the config and/or importing JWKs with x5c specs\n- compress session and state cookies; add zlib as a dependency\n- bump to 2.4.13rc0\n\n01/27/2023\n- increase maximum allowed size of HTTP responses (e.g. from token endpoint) to 10Mb; see #998; thanks @mikehearn\n- do a sanity check on the individual size of claim values stored in the session, warn about blacklisting if > 8Kb\n- bump to 2.4.12.4rc2\n\n01/23/2023\n- release 2.4.12.3\n\n01/20/2023\n- add OIDCProviderVerifyCertFiles option to statically configure ID token validation keys; see #989; thanks @madsfreek\n- fix bug in OIDCOAuthVerifyCertFiles where cert(s) would be cast to apr_hash_t instead of apr_array_header_t; see #990; thanks @bommo1\n- bump to 2.4.12.3rc0\n\n12/28/2022\n- update sample/test Dockerfile to Ubuntu Jammy\n\n12/13/2022\n- CVE-2022-23527: prevent open redirect in default setup when OIDCRedirectURLsAllowed is not configured\n  see: https://github.com/zmartzone/mod_auth_openidc/security/advisories/GHSA-q6f2-285m-gr53\n- release 2.4.12.2\n\n12/08/2022\n- simplify redis context code\n- bump to 2.4.12.2rc1\n\n11/18/2022\n- allow overriding the type of lock used at compile time with OIDC_LOCK\n- bump to 2.4.12.2rc0\n\n11/15/2022\n- release 2.4.12.1\n\n11/13/2022\n- switch to using apr_generate_random_bytes instead of apr_uuid_get to generate session identifiers\n  so there's no longer a (rather implicit) dependency on a libapr that is compiled againt libuuid\n  on Linux platforms; see #431, #603 and #694; thanks @amitnarang28\n- cache file backend fix: delete the correct file upon logout; closes #955; thanks @damisanet\n- bump to 2.4.12.1rc5\n\n11/08/2022\n- add option to use ISO-8859-1 encoding for propagated claim values by adding\n  \"latin1\" option to OIDCPassClaimsAs <> latin1; see #957; thanks @nvchaudhari1991\n  Note that the encoding - including the existing \"base64url\" - apply to both header and\n  environment variables as well now.\n- bump to 2.4.12.1rc4\n\n10/26/2022\n- OIDCProviderMetadataRefreshInterval was interpreted in microseconds instead\n  of the documented and intended seconds; setting in to seconds would effectively\n  turn of caching and pull the configuration document on each request\n- bump to 2.4.12.1rc3\n\n10/25/2022\n- define APLOG_TRACE1 if it does not exist\n- bump to 2.4.12.1rc2\n\n10/20/2022\n- CI: add memory and semaphore checks on various distro's\n- correct ap_hook_insert_filter function signature in stub.c, part 3; see #784\n- fix printout of cache mutex errors in cache/common.c\n- prefer APR_LOCK_POSIXSEM over APR_LOCK_DEFAULT in apr_global_mutex_create\n  which is apparently required for (some) ARM based builds (and CI)\n- bump to 2.4.12.1rc1\n- fix potential memory leak in proto.c when oidc_util_create_symmetric_key fails\n- fix potential memory leak in proto.c when oidc_proto_validate_access_token fails (at_hash validation)\n\n10/19/2022\n- fix cleanup of semaphores on graceful restarts; see #522, closes #458\n  simplify mutex/shm cleanup without semaphores because we track the parent process anyway; \n- bump to 2.4.12.1rc0\n\n10/17/2022\n- release 2.4.12\n\n10/15/2022\n- add option to set a username for Redis authentication via OIDCRedisCacheUsername\n- bump to 2.4.11.4rc7\n\n10/14/2022\n- set minimum number of default memcache threads to 0 to retain backwards compatibility\n  see #916\n- support OIDCSessionInactivityTimeout values greater than 30 days when using Memcache\n  see #936, thanks @takesson\n- bump to 2.4.11.4rc6\n\n10/03/2022\n- add -fPIC to test and test-cmd compilation; see #925\n- bump to 2.4.11.4rc5\n\n09/23/2022\n- allow for step-up discovery with an external URL using HTML refresh \n  fixes behaviour on CentOS 7/8 when combined with ProxyPass\n- bump to 2.4.11.4rc4\n\n09/12/2022\n- add options to retrieve the configuration document only or pull keys from the JWKS URI;\n  for certification purposes\n- check ID token signed response algorithm on backchannel logout_token and retrieve its\n  configuration value from the client metadata file; for certification purposes\n- register request_object_signing_alg in dynamic client registration when using request_uri;\n  for certification purposes\n- bump to 2.4.11.4rc3\n\n09/08/2022\n- store access token obtained from backchannel in session over the one returned\n  in the frontchannel for \"code token\" and \"code id_token token\" flows; for \n  certification purposes\n- apply exact length matching for at_hash and c_hash validation; for certification purposes\n- increase size of the output buffer when using libpcre2 for substitution; closes #915\n- bump to 2.4.11.4rc2\n- allow setting connection pool parameters for Memcache server connections;\n  see #916; thanks @rpluem-vf\n\n08/24/2022\n- avoid using $< in Makefile\n- allow storing the id_token in a client-cookie based session; see #812 and #888\n- bump to 2.4.11.4rc1\n\n08/22/2022\n- add oidc_util_strcasestr\n- bump to 2.4.11.4rc0\n\n08/22/2022\n- release 2.4.11.3\n\n08/15/2022\n- avoid memory leak when using PCRE2 regular expressions with array matching; closes #902; thanks @smanolache\n- avoid memory leak when cjose_jws_get_plaintext fails; closes #903; thanks @smanolache\n- bump to 2.4.11.3rc4\n\n05/20/2022\n- fix handling of IPv6 based logout URLs; thanks @@codemaker219\n- bump to 2.4.11.3rc1\n\n05/16/2022\n- Use optionally provided sid and iss request parameters during front channel\n  logout; see #855; thanks @rpluem-vf\n\n05/06/2022\n- support Forwarded header in addition to X-Forwarded-*; see #853; thanks @studersi\n- bump to 2.4.11.3rc0\n\n05/05/2022\n- release 2.4.11.2\n\n05/04/2022\n- add support for Apache expressions in OIDCPathAuthRequestParams and OIDCPathScope; see #594\n- bump to 2.4.11.2rc2\n\n04/22/2022\n- add no Cache-Control headers to logout request response; see #846; thanks @blackwhiser1\n- bump to 2.4.11.2rc1\n\n04/06/2022\n- don't strip the header from encrypted JWTs as future versions of cjose may use compact\n  encoding for JWEs; this slightly increases state cookie size, by-value session cookies\n  and encrypted cache contents again at the benefit of forward cjose compatibility\n- bump to 2.4.11.2rc0\n\n03/29/2022\n- release 2.4.11.1\n\n03/28/2022\n- correct registration_endpoint_json naming in auth_openidc.conf documentation \n\n03/21/2022\n- fix OIDCUnAuthAction pass, see #790\n- bump to 2.4.11.1rc5\n\n03/18/2022\n- fix make check; add @smanolache to the AUTHORS file\n- bump to 2.4.11.1rc4\n\n03/17/2022\n- fix memory leaks over graceful restarts: use s->process->pconf pool instead of\n  the s->process->pool in oidc_slog and oidc_cache_shm_cfg_create\n  closes #823 and #824; thanks @smanolache\n\n03/14/2022\n- fix temporary cache file naming; see #777\n\n03/08/2022\n- fix a 2nd race condition in the file cache backend; see #777; thanks @dbakker and @blackwhiser1\n- bump to 2.4.11.1rc3\n\n03/04/2022\n- add support for OpenSSL 3.0\n- remove test-cmd jwk2cert command\n- bump to 2.4.11.1rc2\n\n02/28/2022\n- add a check to make sure URLs do not contain unencoded Unicode characters; see #796; thanks @cnico\n- bump to 2.4.11.1rc1\n\n02/27/2022\n- document Apache 2.4 behavior on OIDCUnAuthzAction 403; see #795; thanks @candlerb\n\n02/04/2022\n- correct ap_hook_insert_filter function signature in stub.c, part 2; closes #784; thanks @stroeder\n\n02/03/2022\n- add Valgrind Github action\n- warn about mismatch between incoming X-Forwarded-* headers and OIDCXForwardedHeaders configuration\n- avoid using %llu print formatter and switch to %lu for unsigned long so it works cross platform\n- bump to 2.4.11.1rc0\n\n01/26/2022\n- improve handling session duration expiry when combined with OIDCUnAuthAction or Discovery\n  also clear r->user in oidc_session_kill for such cases; see #778\n- release 2.4.11\n\n01/24/2022\n- fix race condition in file cache backend reading truncated files under load; see #777; thanks @dbakker\n- bump to 2.4.11rc7\n\n01/23/2022\n- fix regular expressions in Require statements\n- bump to 2.4.11rc6\n\n01/22/2022\n- no longer defer Discovery to the content handler to allow RequireAll and Require not directives\n  see #770; closes #775; thanks @rajeevn1\n- bump to 2.4.11rc5\n\n01/17/2022\n- terminate on startup when the crypto passphrase generated by \"exec:\" is empty; see #767\n- bump to 2.4.11rc4\n\n01/15/2022\n- correct printout of session id and remote user tuple for new sessions\n- avoid debug printout of payload as header when the latter is stripped\n\n01/14/2022\n- fix: avoid crash when using pcre2 for claims matching: don't pass NULL for errorstr\n- add administrative session revocation capability <redirect_uri>?revoke_session=<uuid>\n- bump to 2.4.11rc3\n\n01/12/2022\n- add AM_PROG_CC_C_O to configure.ac (at least for RHEL 7.7); see #765; thanks @bitmagewb\n- include <openssl/bn.h> in jose.c to compile with OpenSSL 1.0.x\n- fix parameters to get_current_url in oidc_handle_unauthorized_user22\n- bump to 2.4.11rc2\n\n01/06/2022\n- improve detection of suspicious redirect URLs; add test list\n- bump to 2.4.11rc1\n\n12/24/2021\n- make interpretation of X-Forwarded-* headers configurable, defaulting to none\n  so mod_auth_openidc running behind a reverse proxy that sets X-Forwarded-* headers\n  needs explicit configuration of OIDCXForwardedHeaders\n- bump to 2.4.11rc0\n\n12/21/2021\n- add \"x5t\" to JWT header in private_key_jwt client assertions; for interop with Azure AD\n- add CI Github workflow over Travis\n- bump to 2.4.10.1rc4\n\n12/16/2021\n- make X-Frame-Options header returned on OIDC front-channel logout requests configurable\n  through OIDCLogoutXFrameOptions; closes #464\n- bump to 2.4.10.1rc3\n\n12/15/2021\n- remove typedef for oidc_pcre to avoid compiler errors\n\n12/02/2021\n- add support for libpcre2; see #740\n- bump to 2.4.10.1rc2\n\n12/01/2021\n- allow authorization on info requests, see #746\n- bump to 2.4.10rc1\n\n11/28/2021\n- install taking into account DESTDIR; see #674; thanks @alerque\n\n11/11/2021\n- correct ap_hook_insert_filter function signature in stub.c; closes #732; thanks @stroeder\n- bump to 2.4.10.1rc0\n\n11/10/2021\n- release 2.4.10\n\n11/03/2021\n- add redirect/text options to OIDCUnAutzAction; see #715; thanks @chrisinmtown\n- bump to 2.4.10rc1\n\n11/02/2021\n- add check for Sec-Fetch-Dest header != \"document\" value to auto-detect requests that are not\n  capable of handling an authentication round trip to the Provider;\n  see https://github.com/zmartzone/mod_auth_openidc/discussions/714; thanks @studersi\n- bump to 2.4.10rc0\n\n10/28/2021\n- use apxs to link the module in Makefile.am\n- bump to 2.4.9.5rc8\n\n10/27/2021\n- fix regexp substition crash using OIDCRemoteUserClaim; thanks @nneul; closes #720\n- backport ap_get_exec_line, supporting the \"exec:\" option in OIDCCryptoPassphrase\n- add check for Sec-Fetch-Mode header != \"navigate\" value to auto-detect XML HTTP Requests\n- bump to 2.4.9.5rc7\n\n10/22/2021\n- complete usage of autoconf/automake; see #674\n- bump to 2.4.9.5rc4\n\n10/20/2021\n- fix parallel builds (on Debian) for now\n- bump to 2.4.9.5rc1\n\n10/19/2021\n- log require claims failure on info level\n- bump to 2.4.9.5rc0\n\n09/09/2021\n- fix memory leak when parsing JWT access token fails (in RS mode)\n\n09/07/2021\n- reorganize Redis code for extensibility\n\n09/03/2021\n- return HTTP 200 for OPTIONS requests in auth-openidc mixed mode\n- don't apply claims based authorization for OPTIONS requests\n  so paths protected with Require claim directives will now also\n  return HTTP 200 for OPTIONS requests\n- fix typo in 2.2 authorization routine\n\n09/03/2021\n- don't apply authz in discovery process; fixes 2.4.9.3\n- apply OIDCRedirectURLsAllowed setting to target_link_uri; closes #672; thanks @Meheni\n- release 2.4.9.4\n\n08/26/2021\n- don't apply authz to the redirect URI; fixes ac5686495a51bc93e257e42bfdc9c9c46252feb1\n- bump to 2.4.9.3\n\n08/20/2021\n- fix graceful restart (regression); see #458; thanks @Foxite\n- bump to 2.4.9.2\n\n08/18/2021\n- preserve session cookie in the event of a cache backend failure\n- update the id_token in the session cache if one is provided while refreshing the access token\n\n08/13/2021\n- fix retried Redis commands after a reconnect; thanks @iainh\n- release 2.4.9.1\n\n07/22/2021\n- use redisvCommand to avoid crash with crafted key when using Redis without encryption; thanks @thomas-chauchefoin-sonarsource\n- replace potentially harmful backslashes with forward slashes when validating redirection URLs; thanks @thomas-chauchefoin-sonarsource\n- release 2.4.9\n- don't use DEFAULT_LIMIT_REQUEST_LINE constant; since it does not exist in Apache 2.2.x\n\n07/15/2021\n- verify that \"alg\" is not none in logout_token explicitly\n- make session not found on backchannel logout produce a log warning instead of error\n- don't clear POST params authn on token revocation; thanks @iainh\n- bump to 2.4.9rc0\n\n07/02/2021\n- handle discovery in the content handler\n- return OK in the content handler for calls to the redirect URI and when preserving POST data\n\n06/25/2021\n- avoid XSS vulnerability when using OIDCPreservePost On and supplying URLs that contain single quotes\n  thanks @oss-aimoto\n\n06/21/2021\n- strip A256GCM JWT header from encrypted JWTS used for state cookies, cache encryption and by-value session cookies\n  resulting in smaller cookies and reduced cache content size\n\n06/10/2021\n- use encrypted JWTs for storing encrypted cache contents and avoid using static AAD/IV; thanks @niebardzo\n- bump to 2.4.9-dev\n\n06/04/2021\n- fix a problem where the host and port are calculated incorrectly, when you use literal ipv6 address.\n\n06/02/2021\n- do not send state timeout HTML document when OIDCDefaultURL is set; this can be overridden by using e.g.:\n  SetEnvIfExpr true OIDC_NO_DEFAULT_URL_ON_STATE_TIMEOUT=true \n- release 2.4.8.4\n\n06/01/2021\n- avoid Apache 2.4 appending 400/302(200/404) HTML document text to state timeout HTML info page\n  see also f5959d767b0eec4856d561cbaa6d2262a52da551 and #484; at least Debian Buster was affected\n- release 2.4.8.3\n\n05/18/2021\n- make error \"session corrupted: no issuer found in session\" a warning only so a logout call for a\n  non-existing session no longer produces error messages\n\n05/08/2021\n- store timestamps in session in seconds to avoid string conversion problems on some (libapr-1)\n  platform build/run combinations, causing \"maximum session duration exceeded\" errors\n- bump to 2.4.8.2\n\n05/07/2021\n- add OIDCClientTokenEndpointKeyPassword option to allow the use of an encrypted private key\n- release 2.4.8.1\n\n04/30/2021\n- fix potential crash when Content-Type is not set in POST requests; thanks Tatsuhiko Yasumatsu of JPCERT/CC\n- release 2.4.8\n\n04/21/2021\n- on OAuth 2.0 RS token scope/claim 401 error, add environment variable for usage with mod_headers,\n  instead of adding a header ourselves; see #572; usage, e.g;\n    Header always append WWW-Authenticate %{OIDC_OAUTH_BEARER_SCOPE_ERROR}e \"expr=(%{REQUEST_STATUS} == 401) && (-n reqenv('OIDC_OAUTH_BEARER_SCOPE_ERROR'))\"\n- bump to 2.4.8-dev\n\n04/13/2021\n- add OIDCRedisCacheConnectTimeout and OIDCRedisCacheTimeout options to configure Redis timeouts\n- bump to 2.4.7.2\n\n04/12/2021\n- fix memory leaks when caching fails\n- bump to 2.4.7.1\n\n04/04/2021\n- improve documentation on OIDCPreservePost\n- release 2.4.7\n\n04/01/2021\n- bump to 2.4.7rc1\n\n02/16/2021\n- remove session from cache before clearing it.\n\n02/12/2021\n- add maximum session lifetime (exp), inactivity timeout (timeout) and remote_user to OIDCInfoHook\n- bump to 2.4.7-dev\n\n02/08/2021\n- return 400 instead of 500 when state cookie matching fails\n- release 2.4.6\n\n02/03/2021\n- avoid displaying the client_secret in debug logs\n\n01/28/2021\n- avoid segmentation fault when hitting an endpoint configured with AuthType openid-connect\n  in an OAuth 2.0 only setup; see #529\n\n01/23/2021\n- fix semaphore cleanup on graceful restarts; see #522\n\n01/12/2021\n- fix inconsistent public/private keys loading order; closes #515\n\n12/17/2020\n- remove support for https://tools.ietf.org/html/draft-bradley-oauth-jwt-encoded-state\n\n12/10/2020\n- add \"base64url\" option to OIDCPassClaimsAs primitive; closes #417\n\n12/09/2020\n- add Redis database selection option with OIDCRedisCacheDatabase; closes #423\n- optimize Redis AUTH execution once per connection\n\n12/07/2020\n- don't set SameSite=None on cookies when on plain http\n\n12/03/2020\n- add environment variable to control libcURL CURLOPT_SSL_OPTIONS behaviors\n  e.g.: SetEnvIfExpr true CURLOPT_SSL_OPTIONS=CURLSSLOPT_NO_REVOKE\n\n11/23/2020\n- release 2.4.5\n- make sure the module compiles with Apache 2.2 for passphrase exec:\n- bump to 2.4.6-dev\n\n11/19/2020\n- ensure that \"sub\" is returned from the userinfo endpoint following https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse\n  prevents potential ID spoofing; thanks Christian Fries of Ruhr-University Bochum\n- don't printout JSON errors about NULL characters in error log; thanks Christian Fries of Ruhr-University Bochum\n- restrict printout of JSON parsing errors to 4096 bytes; thanks Christian Fries of Ruhr-University Bochum\n- bump to 2.4.5rc6\n\n11/5/2020\n- fix content processing for info and JWKs handler so mod_headers etc. works; closes #497\n- bump to 2.4.5rc5\n\n11/2/2020\n- improve sanity checking on Redis reply\n- bump to 2.4.5rc4\n\n10/30/2020\n- disable caching token introspection results by setting OIDCOAuthTokenIntrospectionInterval to -1; thanks @wadahiro\n- bump to 2.4.5rc3\n\n10/27/2020\n- config check on OIDCCryptoPassphrase in OAuth 2.0 RS setup with cache encryption enabled\n- bump to 2.4.5rc2\n\n10/22/2020\n- hash define expression option to OIDCUnAuthAction so it compiles for Apache 2.2; fixes 1461634\n- bump to 2.4.5rc1\n- add exec support to OIDCCryptoPassphrase\n \n10/19/2020\n- delete stale session cookies that aren't in the cache\n- allow OIDCDiscoverURL to be a relative URL\n\n10/08/2020\n- add OIDCCABundlePath for configuring path to curl CA bundle\n\n09/22/2020\n- avoid Apache 2.4 appending 401 HTML document text to step-up authentication HTML refresh page; closes #484\n- bump to 2.4.5rc0\n\n09/21/2020\n- populate AUTH_TYPE when performing authentication; thanks @spanglerco\n\n09/19/2020\n- enable authentication of sub-requests when the main request doesn't require\n  authentication; thanks @spanglerco\n\n09/03/2020\n- add SameSite attribute on cookie clearance / logout; thanks @v0gler\n- bump to 2.4.4.1\n\n09/01/2020\n- forward port Tufin patches\n- always set session cookie same site policy to Lax\n- disable cookie domain check\n- unset host headers for metadata URL retrieval\n- bump to 2.4.4-tufin\n\n09/01/2020\n- avoid GCC 9 compiler warnings\n- release 2.4.4\n\n08/28/2020\n- allow Content-Type check on backchannel logout to have postfixes (utf-8 etc)\n- terminate backchannel logout with DONE instead of OK to avoid authz error 500\n- bump to 2.4.4rc8\n\n08/18/2020\n- add recommended cache headers on backchannel logout response\n  https://openid.net/specs/openid-connect-backchannel-1_0.html#rfc.section.2.8\n- bump to 2.4.4rc7\n\n08/10/2020\n- add new OIDCStateCookiePrefix primitive for the state cookie prefix\n\n08/01/2020\n- add conditional expression to OIDCUnAuthAction; see #479; thanks @raro42 and @marcstern\n- bump to 2.4.4rc6\n\n07/31/2020\n- reverse order of creating HTML response and adding session cookie; thanks @deisser\n- bump to 2.4.4rc5\n\n07/30/2020\n- fix doubled Set-Cookie behaviour when using `client-cookie`, calling the session info hook\n  and writing out a session update (twice); thanks @deisser\n- bump to 2.4.4rc4\n\n07/27/2020\n- prevent XSS and open redirect on OIDC session managemement OP iframe with OIDCRedirectURLsAllowed\n  thanks Andrew Brady\n- bump to 2.4.4rc3\n\n07/22/2020\n- delete state cookie when it cannot be decoded/decrypted\n- bump to 2.4.4rc2\n\n07/03/2020\n- fix for loop initial declarations to not require c99 for compilation (RHEL 6)\n- add ap_expr.h include in stub.c (RHEL 6)\n- bump to 2.4.4rc1\n\n06/30/2020\n- add grant_types to dynamic client registration request\n- don't send access_token in user info request when method is set to POST; conform OIDC test suite 4.0.5\n- bump to 2.4.4rc0\n\n06/10/2020\n- prevent open redirect on refresh token requests\n  add new OIDCRedirectURLsAllowed primitive to handle post logout and refresh-return-to validation\n  addresses #453; closes #466\n- release 2.4.3\n\n06/09/2020\n- fix complex expressions crash when compiled from source with libjq; closes #472\n  thanks vincentscharf0803\n  introduced by OIDCStateInputHeaders addition in 2.4.3rc0\n- bump to 2.4.3rc1\n\n05/11/2020\n- added OIDCValidateIssuer to allow for disabling of issuer matching.  helps to support multi-tenant applications.\n\n05/02/2020\n- when stripping cookies, add a space between cookies in the resulting header (required by RFC 6265)\n- move oidc_parse_config inside MODULE_MAGIC_NUMBER_MAJOR to make sure the module compiles with Apache 2.0\n\n04/25/2020\n- add OIDCStateInputHeaders that allows configuring the header values used to calculate the fingerprint of the state during authentication\n- bump to 2.4.3rc0\n\n03/25/2020\n- oops: fix json_deep_copy of claims\n- release 2.4.2.1\n\n03/24/2020\n- fix memory leak in OAuth 2.0 JWT validation; closes #470; thanks Conrad Thukral\n- fix configured private/public key cleanup on process exit\n\n03/21/2020\n- allow for expressions in Require statements, see #469; thanks @wwaaron\n  also see: https://github.com/zmartzone/mod_auth_openidc/wiki/Authorization#expressions-in-require-statements\n- bump to 2.4.2rc5\n\n03/19/2020\n- always refresh keys from jwks_uri when there is no kid in the JWT header\n- bump to 2.4.2rc4\n\n03/15/2020\n- destroy shared memory segments only in parent process; see #458\n- bump to 2.4.2rc3\n\n03/10/2020\n- fix memory leaks introduced by #457\n- bump to 2.4.2rc2\n\n02/19/2020\n- if content was already returned via html/http send then don't return 500\n  but send 200 to avoid extraneous internal error document text to be sent\n  on some Apache 2.4.x versions e.g. CentOS 7\n- bump to 2.4.2rc1\n\n02/03/2020\n- if OIDCPublicKeyFiles contains a certificate, the corresponding x5c, x5t and x5t#256 \n  parameters will be added to the generated jwkset available at \"<redirect_uri>?jwks=rsa\"\n  thanks @absynth76\n- fix: also add SameSite=None to by-value session cookies\n- bump to 2.4.2rc0\n\n01/30/2020\n- try to fix graceful restart crash; see #458\n- release 2.4.1\n\n01/29/2020\n- always add a SameSite value to the Set-Cookie header to satisfy upcoming Chrome/Firefox changes\n  this can be overridden by using, e.g.:\n    SetEnvIf User-Agent \".*IOS.*\" OIDC_SET_COOKIE_APPEND=;\n- release 2.4.1rc6\n\n01/22/2020\n- URL encode logout url in session management JS; thanks Paolo Battino\n- bump to 2.4.1rc5\n\n01/15/2020\n- add value of OIDC_SET_COOKIE_APPEND env var to Set-Cookie headers\n  useful for handling changing/upcoming SameSite behaviors across different browsers, e.g.:\n    SetEnvIf User-Agent \".*IOS.*\" OIDC_SET_COOKIE_APPEND=SameSite=None\n- bump to 2.4.1rc4\n\n01/08/2020\n- support 407 option on OIDCUnAuthAction\n\n12/09/2019\n- fix parsing of values from metadata files when the default is non-NULL (e.g. UNSET)\n- enforce OIDCIDTokenSignedResponseAlg and OIDCUserInfoSignedResponseAlg; see #435\n- bump to 2.4.1rc2\n- support login with OIDC session management; address #456\n- bump to 2.4.1rc3\n\n12/05/2019\n- add the possibility to use a public key instead of a certificate for OIDCPublicKeyFiles parameter\n- added an alpine dockerfile =~ 20MB container size\n\n12/04/2019\n- return 200 OK for backchannel logout if session not found\n- bump to 2.4.1rc1\n\n11/19/2019\n- make cleaning of expired state cookies log with a warning rather than an error; thanks Pavel Drobov\n- bump to 2.4.1rc0\n\n10/03/2019\n- improve validation of the post-logout URL parameter on logout; thanks AIMOTO Norihito; closes #449\n- release 2.4.0.3\n- clear any existing chunked cookies when setting a non-chunked cookie; prevents login loops in some scenarios\n\n08/28/2019\n- fixes #447 #441 : changed storing POST params from localStorage to\n  sessionStorage due to some issue of losing data in localStorage in Firefox\n  (private mode) \n\n08/22/2019\n- release 2.4.0\n\n08/16/2019\n- revert 3d95b4a3fbc493c6acc745626ac33143eb4968bf: don't return early from the content handler\n\n08/15/2019\n- be smart about picking the token endpoint authentication method when not configured explicitly:\n  don't choose the first one published by the OP but prefer client_secret_basic if that is listed as well\n  see: panva/node-oidc-provider#514; thanks @richard-drummond and @panva\n- bump to 2.4.0rc24\n\n08/12/2019\n- fix not clearing claims in session when setting claims to null; closes #445; thanks @FilipVujicic\n\n08/12/2019\n- fix JWT decryption crashing on non-null terminated input\n- bump to 2.4.0rc23\n\n08/09/2019\n- add logout_on_error option to OIDCRefreshAccessTokenBeforeExpiry to kill the session when\n  refreshing an access token fails; thanks @rickyepoderi\n- bump to 2.4.0rc22\n\n08/08/2019\n- no longer use the fixup handler for environment variable setting but do it as part of the authn handler\n- bump to 2.4.0rc21\n\n08/04/2019\n- avoid decoding non-form-encoded POST data; closes #443\n- bump to 2.4.0rc20\n\n08/02/2019\n- return DONE from the content handler early to prevent triggering other content handlers\n- fix `OIDCOAuthAcceptTokenAs post` so POST data is propagated and not lost; see #443\n- bump to 2.4.0rc19\n\n07/10/2019\n- fix RSA JWK \"x5c\" parsing issue (e.g. when parsing \"n\" fails): explicitly set the \"kid\" into to JWK\n- bump to 2.4.0rc18\n\n06/19/2019\n- fix regression bug that includes a HTTP 500 message after rendering content\n- bump to 2.4.0rc17\n\n06/14/2019\n- fix regression bug when no per-provider keys have been configured and private_key_jwt is used\n- bump to 2.4.0rc15\n\n06/06/2019\n- use per-provider signing keys in private_key_jwt authentication towards token endpoint\n- bump to 2.4.0rc14\n\n06/05/2019\n- avoid passing empty key set for JWT decryption (solve but introduced in 2.4.0rc12)\n- bump to 2.4.0rc13\n\n06/03/2019\n- enable per-provider signing and encryption keys; limitations:\n  - for request object signing and id_token decryption only\n  - take the first configured key, no kid specification\n  - no publishing of key information on client endpoints\n  - no userinfo JWT decryption\n  - no composite claims decryption\n  - no backchannel logout with encrypted logout token (inherent)\n- bump to 2.4.0rc12\n\n05/31/2019\n- make sure the content handler is called for every request to the configured Redirect URI so all\n  Apache processing is executed (e.g. setting headers with mod_headers) before returning the response\n  thanks Don Sengpiehl (NB: this may affect browser behavior and backwards compatibility)\n- add ability to view session info in HTML via the session info hook: <redirect_uri)?info=html\n- bump to 2.4.0rc11\n\n05/24/2019\n- fix oidc_proto_html_post auto-post-submit so it no longer results in duplicate parentheses\n  closes #440; thanks @gobreak\n- bump to 2.4.0rc10\n\n05/21/2019\n- log the original URL for expired state cookies, useful for debugging SPA/JS issues\n\n05/17/2019\n- allow removing an access token from the cache (\"remove_at_cache\") when running in OAuth 2.0 RS mode only\n- support refresh and access tokens revocation from an RFC 7009 endpoint upon OIDC session logout\n- bump to 2.4.0rc9\n\n05/03/2019\n- fix (cached) parsing of OIDCOAuthServerMetadataURL; thanks Lance Fannin\n- bump to 2.4.0rc5\n\n05/02/2019\n- correct caching for OIDCOAuthServerMetadataURL\n- bump to 2.4.0rc4\n\n04/21/2019\n- remove option to skip scrubbing request headers (thus avoiding potentionally insecure setups)\n- bump to 2.4.0rc3\n\n04/19/2019\n- add USE_URANDOM compile time option to use /dev/urandom explicitly for non-blocking random number generation\n  configure with APXS2_OPTS=\"-DUSE_URANDOM\"\n- bump to 2.4.0rc2\n\n04/15/2019\n- add debug logs in oidc_proto_generate_random_string\n- URL-encode client_id/client_secret when using client_secret_basic according to: https://tools.ietf.org/html/rfc6749#section-2.3.1\n- bump to 2.4.0rc1\n\n04/09/2019\n- deprecate the OAuth 2.0 Resource Server functionality\n- bump to 2.4.0rc0\n\n03/13/2019\n- release 2.3.11\n\n02/26/2019\n- add session expiry to session info hook response (and change inactivity timeout key)\n- bump to 2.3.11rc2\n\n02/25/2019\n- add option to dynamically pass query parameters to the authorization request; closes #401\n- bump to 2.3.11rc1\n\n01/31/2019\n- support conditional compilation of memcache support\n- bump to 2.3.11rc0\n\n01/22/2019\n- fix XSS vulnerability CSNC-2019-001 wrt. poll parameter in OIDC Session Management RP iframe; thanks Mischa Bachmann\n- release 2.3.10.2\n\n01/16/2019\n- fix bug in current URL detection where query parameters would be duplicated; see #420; thanks @jreynaert\n- release 2.3.10.1\n\n12/31/2018\n- fix warning printout in oidc_delete_oldest_state_cookies\n- release 2.3.10\n\n12/16/2018\n- fix encryption buffer tag length mismatch\n\n12/06/2018\n- retain the unparsed URL path in current/original URL determination, and thereby preserve\n  and support URL-encoded characters in paths when redirecting back to the original URL\n- add state to code exchange token requests only in multi-provider setups; see #402\n- optionally delete the oldest state cookie(s); see #399\n- bump to 2.3.10rc3\n\n11/29/2018\n- add support for refreshing an access token associated with an OIDC session using OIDCRefreshAccessTokenBeforeExpiry\n- bump to 2.3.10rc0\n\n11/15/2018\n- release 2.3.9\n\n11/13/2018\n- fix parsing of cookie name in OIDCOAuthAcceptTokenAs when the cookie option is not listed last \n- bump to 2.3.9rc7\n\n11/12/2018\n- fix OAuth 2.0 RS config check when OIDCOAuthServerMetadataURL is set; thanks @psteniusubi\n- bump to 2.3.9rc6\n\n10/24/2018\n- add support for draft https://www.ietf.org/id/draft-ietf-oauth-mtls-12.txt:\n  OAuth 2.0 Mutual TLS Client Certificate Bound Access Tokens\n  when running as an OAuth 2.0 RS, validating cnf[\"x5t#S256\"] claims.\n- bump to 2.3.9rc5\n\n10/17/2018\n- ignore/trim spaces in X-Forwarded-* headers\n- deal with forwarding proxy setups; see #395 ; thanks @archzone\n- bump to 2.3.9rc4\n\n10/02/2018\n- improve OIDC backchannel logout based on config/Discover\n  - add OIDCProviderBackChannelLogoutSupported config primitive\n  - parse/interpret `backchannel_logout_supported` in Discovery document\n- add `id_token_token_binding_cnf`: `tbh` to dynamic client registration metadata\n- bump to 2.3.9rc3\n\n10/01/2018\n- support backchannel logout according to: https://openid.net/specs/openid-connect-backchannel-1_0.html\n- bump to 2.3.9rc2\n\n10/01/2018\n- add test-cmd command to generate hashes base64urlencoded inputs (cnf/tbh claims)\n\n09/30/2018\n- support Token Binding for Access Tokens according to: https://tools.ietf.org/html/draft-ietf-oauth-token-binding\n- bump to 2.3.9rc1\n\n09/16/2018\n- support nested arrays in Require claim authorization evaluation; see #392; thanks @hpbieker\n- bump to 2.3.9rc0\n\n09/12/2018\n- fix return result FALSE when JWT payload parsing fails; see #389; thanks @amdonov\n- release 2.3.8\n\n08/30/2018\n- add LGTM code quality badges, see #385; thanks @xcorail\n- fix 3 LGTM alerts\n\n08/23/2018\n- improve auto-detection of XMLHttpRequests via Accept header; see #331\n- bump to 2.3.8rc5\n\n08/15/2018\n- initialize test_proto_authorization_request properly; see #382; thanks @jdennis\n- add sanity check on provider->auth_request_method; closes #382; thanks @jdennis\n- bump to 2.3.8rc4\n\n08/14/2018\n- allow usage with LibreSSL; closes #380; thanks @hihellobolke\n- bump to 2.3.8rc3\n\n08/04/2018\n- don't return content with 503 since it will turn the HTTP status code into a 200; see #331\n- bump to 2.3.8rc2\n\n08/03/2018\n- add option to set an upper limit to the number of concurrent state cookies via OIDCStateMaxNumberOfCookies; see #331\n- make the default maximum number of parallel state cookies 7 instead of unlimited; see #331\n- bump to 2.3.8rc1\n\n07/30/2018\n- fix using access token as endpoint auth method in introspection calls; closes #377; thanks @skauffmann\n\n07/25/2018\n- fix reading access_token form POST parameters when combined with `AuthType auth-openidc`; see #376; thanks Nicolas Salerno\n- bump to 2.3.8rc0\n\n07/06/2018\n- abort when string length for remote user name substitution is larger than 255 characters\n- release 2.3.7\n\n07/04/2018\n- fix Redis concurrency issue when used with multiple vhosts\n- bump to 2.3.7rc4 and 2.3.7rc5\n\n06/29/2018\n- add support for authorization server metadata with OIDCOAuthServerMetadataURL as in RFC 8414\n- bump to 2.3.7rc3\n\n06/23/2018\n- refactor session object creation\n- bump to 2.3.7rc2\n\n06/22/2018\n- clear session cookie and contents if cache corruption is detected\n- bump to 2.3.7rc0\n- use apr_pstrdup when setting r->user\n- reserve 255 characters in remote username substition instead of 50\n- bump to 2.3.7rc1\n\n06/15/2018\n- add check to detect session cache corruption for server-based caches and cached static metadata\n- release 2.3.6\n\n05/29/2018\n- avoid using pipelining for Redis\n- bump to 2.3.6rc4\n\n05/28/2018\n- send Basic header in OAuth www-authenticate response if that's the only accepted method; thanks @puiterwijk\n\n05/28/2018\n- refactor Redis cache backend to solve issues on AUTH errors: a) memory leak and b) redisGetReply lagging behind\n- adjust copyright year/org\n- bump to 2.3.6rc3\n\n05/23/2018\n- fix buffer overflow in shm cache key set strcpy; thanks @kyprizel\n- bump to 2.3.6rc2\n\n05/22/2018\n- turn missing session_state from warning into a debug statement\n- fix missing \"return\" on error return from the OP; see #345; thanks @gergan\n- bump to 2.3.6rc1\n\n05/19/2018\n- explicitly set encryption kid so we're compatible with cjose >= 0.6.0\n- bump to 2.3.6rc0\n\n05/18/2018\n- fix encoding of preserved POST data; see #338; thanks @timpuri\n- avoid buffer overflow in shm cache key construction; thanks @kyprizel\n- release 2.3.5\n\n05/08/2018\n- compile with with Libressl; closes #358; thanks @hihellobolke\n- bump to 2.3.5rc0\n\n04/27/2018\n- avoid crash when a relative logout URL parameter is passed in; thanks Vivien Delenne \n- release 2.3.4\n\n03/22/2018\n- interpret X-Forwarded-Host when doing XSRF protection on the after-logout URL; see #341; thanks @pepe79\n- bump to 2.3.4rc4\n\n02/06/2018\n- add support for passing an access token in a HTTP Basic authentication password; thanks @puiterwijk\n- bump to 2.3.4rc3\n\n01/26/2018\n- send session management Javascript logging to debug; thanks @kerrermanisNL\n\n01/25/2018\n- add Cache-Control no-cache header to authorization requests to avoid replays of state/nonce; see #321\n- bump to 2.3.4rc2\n\n01/23/2018\n- add explicit endpoint authentication method \"bearer_access_token\"\n\n12/29/2017\n- correct documentation on kid usage for OIDCOAuthVerifyCertFiles; closes #318\n\n12/21/2017\n- fix compiler warnings for OpenSSL 1.1.x\n- bump to 2.3.4rc1\n\n11/21/2017\n- fix bug where endpoint authentication method \"private_key_jwt\" would not co-exist with \"none\"\n- bump to 2.3.4rc0\n\n11/16/2017\n- add support for passing userinfo as a JSON object or JWT; see #311\n- release 2.3.3\n\n11/13/2017\n- add support for authentication to the introspection endpoint with a bearer token using OIDCOAuthIntrospectionClientAuthBearerToken; thanks @cristichiru\n- bump to 2.3.3rc3\n\n11/08/2017\n- address a number of static code analysis issues\n- bump to 2.3.3rc2\n\n10/10/2017\n- avoid crash when no scheme is set on OIDCProviderMetadataURL; closes #303; thanks @iconoeugen\n- bump to 2.3.3rc1\n\n10/6/2017\n- avoid crash when no OIDCOAuthClientID is set for remote access token validation\n- don't enforce \"iat\" slack checks on locally validaed JWT access tokens\n- bump to 2.3.3rc0\n\n09/18/2017\n- release 2.3.2\n\n09/11/2017\n- fix \"graceful\" restart for shm/redis cache backends; see #296\n- bump to 2.3.2rc8\n\n09/05/2017\n- optionally remove request object parameters from the authorization request URL with \"copy_and_remove_from_request\"; see #294\n- bump to 2.3.2rc7\n\n08/29/2017\n- properly support JSON boolean values in metadata .conf files\n- add regex substitution for *RemoteUserClaim; thanks @hihellobolke\n- bump to 2.3.2rc6\n\n08/27/2017\n- add issuer specific redirect URI option (\"issuer_specific_redirect_uri\") for multi-provider setups to mitigate IDP mixup\n- bump to 2.3.2rc5\n\n08/20/2017\n- fix public clients; add endpoint authentication method \"none\"\n- bump to 2.3.2rc4\n\n08/02/2017\n- update experimental token binding support to https://tools.ietf.org/html/draft-ietf-tokbind-ttrp-01\n  and use header names prefixed with \"Sec-\"; depends on mod_token_binding >= 0.3.4 now\n- bump to 2.3.2rc3\n\n08/01/2017\n- don't abort when mutex operations fail\n- printout textual descriptions of errors returned by mutex operations\n- bump to 2.3.2rc2\n\n07/28/2017\n- fix issue with the combination of shared memory (shm) cache and using encryption (OIDCCacheEncrypt On)\n  where the cache value would be corrupted after the first (successful) retrieval\n- bump to 2.3.2rc1\n\n07/27/2017\n- support paths that are relative to the Apache root dir for:\n  OIDCHTMLErrorTemplate, OIDCPublicKeyFiles, OIDCPrivateKeyFiles,\n  OIDCOAuthVerifyCertFiles, OIDCClientTokenEndpointCert, OIDCClientTokenEndpointKey,\n  OIDCOAuthIntrospectionEndpointCert and OIDCOAuthIntrospectionEndpointKey\n- bump to 2.3.2rc0\n\n07/19/2017\n- handle multiple values in X-Forwarded-* headers as to better support chains of reverse proxies in front of mod_auth_openidc\n- log request headers in oidc_util_hdr_in_get\n- release 2.3.1\n\n07/13/2017\n- remove A128GCM/A192GCM from the supported algorithms in docs/auth_openidc.conf\n  because cjose doesn't support A128GCM and A192GCM (yet)\n- bump to 2.3.1rc5\n\n07/09/2017\n- refactor oidc_get_current_url_port so that it assumes the default port when\n  X-Forwarded-Proto has been set; closes #282 and may address #278\n- bump to 2.3.1rc4\n\n07/07/2017\n- use the defined name (`Provided-Token-Binding-ID`) for the provided token binding ID HTTP header\n  see: https://tools.ietf.org/html/draft-campbell-tokbind-ttrp-00#section-2.1\n  depends on mod_token_binding >= 0.3.0 now\n- bump to 2.3.1rc3\n\n06/29/2017\n- support sending the authentication request via HTTP POST through HTML/Javascript autosubmit\n- bump to 2.3.1rc2\n\n06/28/2017\n- support private_key_jwt and client_secret_jwt as client authentication methods for token introspection\n- bump to 2.3.1rc1\n\n06/22/2017\n- fix bug where token_endpoint_auth set to private_key_jwt would fail to provide the credential if client_secret wasn't set\n- bump to 2.3.1rc0\n\n06/13/2017\n- release 2.3.0\n\n06/07/2017\n- fix file cache backend: allow caching of non-filename friendly keys such as configuration URLs and JWKs URIs\n- enable JQ-based claims expression matching when compiled from source with --with-jq=<dir>, e.g.:\n  Require claims_expr '.aud == \"ac_oic_client\" and (.scope | index(\"profile\") != null)'\n- normalize cache backend logging\n- bump to 2.3.0rc3\n\n06/06/2017\n- avoid cleaning our own state cookie twice when it is expired\n- bump to 2.3.0rc2\n\n06/02/2017\n- refactor remote user handling so it allows for postfixing with the issuer value after applying the regex\n- bump to 2.3.0rc1\n\n05/31/2017\n- add support for custom actions to take after authorization fails with OIDCUnAutzAction\n  this enables stepup authentication scenarios when combined with the following:\n- add OIDCPathAuthRequestParams that is configurable on a per-path basis and use OIDCAuthRequestParams for the static per-provider value\n- add OIDCPathScope that is configurable on a per-path basis and concatenate with OIDCScope as static per-provider value\n- support 3rd-party-init-SSO with additional authentication request params when a single static provider has been configured\n- add support for an empty OIDCClaimPrefix; can be used with OIDCWhiteListedClaims to protect selected headers\n- bump to 2.3.0rc0\n\n05/30/2017\n- support sending Authorization Request as \"request\" object in addition to \"request_uri\"; thanks @suttod\n- support nested claim matching in Require directives; thanks @suttod\n- support explicitly setting the \"kid\" of the private key in OIDCPrivateKeyFiles; thanks @suttod\n\n05/25/2017\n- fix cache fallback so it happens (when enabled) only after failure\n\n05/19/2017\n- make OIDCStripCookies work on AuthType oauth20 paths; closes #273; thanks Michele Danieli\n- bump to 2.2.1rc6\n\n05/18/2017\n- fix parse function of OIDCRequestObject configuration option; thanks @suttod \n\n05/17/2017\n- avoid crash when the X-Forwarded-Proto header is not correctly set by a reverse proxy in front of mod_auth_openidc\n\n05/14/2017\n- support JWT verification against multiple keys with no provided kid by looping over the provided keys with cjose 0.5.0\n- remove OIDC RP certification files; moved to separate repository\n\n05/04/2017\n- improve documentation for OIDCCryptoPassphrase; closes #268\n\n04/30/2017\n- fix wrong return value for cache_file_set in the file cache backend (OIDCCacheType file); thanks Ernani Joppert Pontes Martins\n- bump to 2.2.1rc5\n\n04/29/2017\n- correctly log success/failure in cache_file_set\n- avoid decoding a JSON object and logging an error when the input is NULL\n  e.g. when claims have not been resolved because userinfo endpoint is not set\n\n04/20/2017\n- support relative RedirectURIs; closes #200; thanks @moschlar\n- don't assume that having OIDCCryptPassphrase set means we should validate the config for\n  openid-connect since it can now also be used to encrypt (auth20) cache entries\n- bump to 2.2.1rc4\n\n04/08/2017\n- fix potential crash on prefork process exit when used with Redis cache backend (3x)\n- bump to 2.2.1rc3\n\n04/06/2017\n- change warn log about missing token binding ID to debug log\n\n04/05/2017\n- allow for high session inactivity timeout max value\n- improve error message in oidc_util_http_send when ap_pass_brigade fails and mention possible interference with mod_deflate\n- bump to 2.2.1rc0\n\n03/30/2017\n- merge feature branch back to master:\n  - better support for Single Page Applications, see:\n    https://github.com/zmartzone/mod_auth_openidc/wiki/Single-Page-Applications\n    - add session info hook that is configurable through OIDCInfoHook\n    - add \"AuthType auth-openidc\" option that allows both \"oauth20\" and \"openid-connect\" on the same path\n  - add encryption for all cache entries instead of just session data through OIDCCacheEncrypt\n  - add cookie SameSite flag/policy through OIDCCookieSameSite\n  - return HTTP 200 on OPTIONS requests to (unauthenticated) \"oauth20\" paths\n  - add fallback to a by-value session cookie if the primary session cache fails with OIDCSessionCacheFallbackToCookie\n  - add support for black- and/or white-listing claims with OIDCBlackListedClaims and OIDCWhiteListedClaims\n  - add prototype token binding support in conjunction with:\n    https://github.com/zmartzone/mod_token_binding:\n    - for state & session cookies, see:\n      https://github.com/TokenBinding/Internet-Drafts\n    - for ID tokens with OpenID Connect Token Bound Authentication support, see:\n      http://openid.net/specs/openid-connect-token-bound-authentication-1_0.html\n    - for Authorization Codes with OAuth 2.0 Token Binding for Authorization Codes, see:\n       https://tools.ietf.org/html/draft-ietf-oauth-token-binding\n  - refactoring:\n    - refactor session state, proto state and headers into getters/setters functions\n    - refactor PKCE support\n  - fix removing session state from cache on logout\n  - fix clearing chunked session cookies on logout; closes #246; thanks @Jharmuth\n- release 2.2.0\n\n02/20/2017\n- security fix: scrub headers for \"AuthType oauth20\"\n- release 2.1.6 \n\n02/15/2017\n- improve logging of session max duration and session inactivity timeout\n- refactor so that the call to the refresh hook also resets the session inactivity timeout and passes tokens down\n\n02/14/2017\n- treat only \"X-Requested-With: XMLHttpRequest\" header as a non-browser client; closes #228 ; thanks @mguillem\n- improve error message on state timeout; closes #226; thanks @security4java\n\n02/09/2017\n- correctly parse \"kid\" in OIDCPublicKeyFiles and OIDCOAuthVerifyCertFiles; thanks Alessandro Papacci\n- bump to 2.1.6rc2\n\n02/07/2017\n- fix parsing of mandatory/optional attribute in OIDCOAuthTokenExpiryClaim; closes #225; thanks Alessandro Papacci\n- bump to 2.1.6rc1\n\n02/06/2017\n- improve logging around the availability of session management; closes #223\n\n02/02/2017\n- interpret OIDCUnAuthAction also when the maximum session duration has been exceeded; see #220\n- bump to 2.1.6rc0\n\n01/30/2017\n- security fix: scrub headers when `OIDCUnAuthAction pass` is used for an unauthenticated user\n- release 2.1.5\n\n01/29/2017\n- fix error message about passing id_token with session type client-cookie; mentioned in #220\n- bump to 2.1.5rc0\n\n01/25/2017\n- release 2.1.4\n\n01/18/2017\n- don't echo the query parameters on the error page when an invalid request is made to the Redirect URI; closes #212; thanks @LukasReschke\n\n01/14/2017\n- use dynamic memory buffer for writing HTTP call responses; solves curl/mpm-event interference; see #207\n- bump to 2.1.4rc1\n\n01/10/2017\n- don't crash when data is POST-ed to the redirect URL, it has just 1 POST parameter and it is not \"response_mode\"\n\n01/2/2017\n- remove trailing linebreaks from input in test-cmd tool\n- bump copyright year to 2017\n\n12/14/2016\n- support Libre SSL, see #205, thanks @AliceWonderMiscreations\n- update OIDC logout support to Front-Channel Logout 1.0 draft 01: http://openid.net/specs/openid-connect-frontchannel-1_0.html\n- bump to 2.1.4rc0\n\n12/13/2016\n- release 2.1.3\n\n12/12/2016\n- don't rollover session id's and keep the same session cookie name for cache storage over session updates\n- bump to 2.1.3rc0\n\n11/19/2016\n- release 2.1.2\n\n11/18/2016\n- fix crash when searching for keys with a kid, there's no initial match and x5t values exist for the non-matching keys; closes #196\n\n11/9/2016\n- remove stale claims from session when refreshing them from the userinfo endpoint fails; addresses #194\n- release 2.1.1\n\n11/8/2016\n- log readable error messages when memcache operations fail\n\n11/6/2016\n- fix memory leak when skipping jwks_uri keys with a non-matching \"use\" value\n\n11/4/2016\n- always restore id_token/claims on sub-requests so e.g. listing claims-protected subdirectories will work\n- remove obsolete functions for storing the session in the request state\n- bump to 2.1.1rc0\n\n11/3/2016\n- remove obsolete sessions from session cache; thanks @stevedave\n\n11/1/2016\n- release version 2.1.0\n\n10/28/2016\n- don't include encryption keys from the jwks_uri when verifying a JWT and no kid has been specified\n- fix memory leaks in composite claim handling\n\n10/27/2016\n- handle aggregated and distributed claims from the userinfo endpoint\n- only pick private_key_jwt token endpoint authentication if a private key is configured; closes #189\n- bump to 2.0.1rc7\n\n10/24/2016\n- add OpenID Connect RP certification test script\n- handle non-integer exp/iat timestamps; closes #187; thanks @drdivano\n\n10/21/2016\n- bugfix: first truncate files before writing them\n- support refreshing provider metadata based on timestamp and OIDCProviderMetadataRefreshInterval\n\n10/20/2016\n- bugfix: correctly truncate encryption keys derived from client secret for algorithms that require a key size < 256 bits\n- add test/test-cmd tool\n- bugfix: return error on session cache failures; closes #185; thanks @solsson\n- bump to 2.0.1rc6\n\n10/18/2016\n- bugfix: JWTs with a header that doesn't specify a `kid` that would not validate when used with more than 1 key; closes #184; thanks @solsson\n- bump to 2.0.1rc5\n\n10/13/2016\n- urlencode provider URL cache key to fix file cache backend issue; closes #179, thanks @djahandarie\n\n10/9/2016\n- fix null pointer segfault in debug printout in oidc_util_read_form_encoded_params\n- fix OIDCOAuthAcceptTokenAs parsing flaw introduced in 2.0.0rc5\n- bump to 2.0.1rc4\n\n10/2/2016\n- support presenting the access token to the userinfo endpoint in a POST parameter\n- bump to 2.0.1rc3\n\n9/30/2016\n- support WebFinger Discovery with URL-style user identifiers\n\n9/28/2016\n- fix memory leak in oidc_jwk_to_json\n- add \"remove_at_cache\" hook; addresses #177\n- bump to 2.0.1rc2\n\n9/27/2016\n- add support for Request URI with signed and/or encrypted Request Objects\n- bump to 2.0.1rc1\n\n9/22/2016\n- refuse webfinger responses with an href value that is not on secure https\n- add userinfo JWT response verification and decryption\n\n9/20/2016\n- log the JWT header before optional decryption is applied\n\n9/19/2016\n- check that a sub claim returned from the userinfo endpoint matches the one in the id_token\n- fix issue in oidc_metadata_parse_url so that static default would not be honored\n  - this only affected server-wide OIDCClientJwksUri usage in dynamic client registration\n- non-functional changes for OIDC RP certification:\n  - explicitly log the client authentication method when calling the token endpoint\n  - log the keys that are included for token verification\n- bump to 2.0.1rc0\n\n9/9/2016\n- fix overriding provider token endpoint auth with static config when not set in .conf file\n- don't add our own cookies to the incoming headers\n- allow stripping cookies from the Cookie header sent to the application/backend with OIDCStripCookies\n- release 2.0.0\n\n9/5/2016\n- encapsulate (sub-)directory config handling and fix merging so values can be set back to default values in subdirs\n- bump to 2.0.0rc5\n\n9/2/2016\n- fix JWK creation when no client secret is set e.g. in Implicit flows; closes #168; thanks @asc1\n- bump to 2.0.0rc4\n\n9/1/2016\n- fix HTML decoding of OIDCPreservePost data; closes #165\n- limit max POST data size to 1Mb\n- allow chunked data in POST handling; revise handler\n- change preserve POST JSON data format to urlencoded for performance reasons\n\n8/31/2016\n- allow setting the token endpoint authentication method in the .conf file (for dynamic client registration that sets the .client)\n\n8/30/2016\n- pass refresh token in header/environment variable with OIDCPassRefreshToken; thanks Amit Joshi\n- fix front-channel img-style logout with newer versions of PingFederate that don't send an Accept: image/png header\n\n8/29/2016\n- preserve POST data across authentication requests and discovery with OIDCPreservePost\n- bump to 2.0.0rc3\n\n8/24/2016\n- fix parsing of OIDCOAuthAcceptTokenAs to accept options following \":\"\n- bump to 2.0.0rc2\n\n8/5/2016\n- delete the debian directory\n- rename OIDCOAuthTokenEndpointCert/Key to OIDCOAuthIntrospectionEndpointCert/Key\n- pre-release 2.0.0rc1\n\n7/30/2016\n- encrypt state/session JWT cookies and session JWT cache values for non-shm storages\n\n7/29/2016\n- use cjose - https://github.com/cisco/cjose (master) - for JOSE functions\n- use stricter input parsing functions for configuration values\n- bump to 2.0.0rc0\n\n7/21/2016\n- support TLS client authentication to token and introspection endpoints\n- bump to 1.9.0rc3\n\n7/19/2016\n- add support for chunked session cookies; closes #153; thanks @glatzert \n- bump to 1.9.0rc2\n\n7/9/2016\n- fix Elliptic Curve signature verification for corrupted input\n- support OpenSSL 1.1.x\n- bump to 1.9.0rc1\n\n7/5/2016\n- use AUTHZ_DENIED instead of HTTP_UNAUTHORIZED in oidc_authz_checker; closes #151; thanks @gwollman\n- use signed JWTs for state/session cookies\n- achieve smaller client-cookie sizes for regular cases; no id_token is stored in the session:\n  - (optional) id_token_hint no longer available in session management calls (logout/prompt=none) with \"OIDCSessionType client-cookie\"\n  - \"OIDCPassIDTokenAs serialized\" is not available with \"OIDCSessionType client-cookie\"\n- bump to 1.9.0rc0\n\n6/27/2016\n- use EVP_CIPHER_CTX_new to avoid compilation errors with OpenSSL 1.1.0\n- release 1.8.10\n\n6/22/2016\n- don't use local port setting for current URL determination when X-Forwarded-Host has been set\n- bump to 1.8.10rc4\n\n6/20/2016\n- fix memory leak in OAuth access token introspection result caching (introduced only in 1.8.10rc0)\n- fix setting private_key_jwt or client_secret_jwt with OIDCProviderTokenEndpointAuth\n- bump to 1.8.10rc3\n\n6/19/2016\n- allow setting OIDCRemoteUserClaim with values obtained from the userinfo endpoint; thanks @steve-dave\n- fix OIDCUnAuthAction pass mode for Apache 2.4 and in case `Require claim` primitives used for 2.4 and 2.2; thanks @steve-dave\n- bump to 1.8.10rc2\n\n6/15/2016\n- add support for JWT based client authentication to the token endpoint (client_secret_jwt, private_key_jwt)\n- bump to 1.8.10rc1\n\n6/9/2016\n- add per-path configurable token introspection result cache expiry with OIDCOAuthTokenIntrospectionInterval\n- bump to 1.8.10rc0\n\n6/5/2016\n- release 1.8.9\n\n5/9/2016\n- support 410 option on OIDCUnAuthAction; closes #141\n- bump to 1.8.9rc6\n\n5/1/2016\n- avoid segmentation fault on invalid OIDC configuration when OIDCRedirectURI is not set; fixes #138; thanks @brianwcook\n- bump to 1.8.9rc5\n\n4/18/2016\n- fix get_current_url (proxy) case where r->parsed_uri.path would be null\n\n4/13/2016\n- improve X-Forwarded-Host handling over Host in a) port detection and b) remove port from host value\n- bump to 1.8.9rc4\n\n4/10/2016\n- do not require OIDCClientSecret in configs; allows for Implicit grant without setting a dummy client secret; closes #130\n- allow for public clients calling the token endpoint\n- bump to 1.8.9rc3\n\n4/9/2016\n- ensure that claims from id_token are available for authz also when OIDCPassIDTokenAs does not contain \"claims\"; closes #129\n- bump to 1.8.9rc2\n\n4/3/2016\n- return WWW-Authenticate header and error messages on OAuth paths where access is not granted; closes #124; thanks @spinto\n- bump to 1.8.9rc1\n\n4/1/2016\n- apr_jwe_decrypt_content_aesgcm() null terminate string, #128, thanks @jdennis\n- bump to 1.8.9rc0\n\n3/10/2016\n- release 1.8.8\n\n3/7/2016\n- issue a warning if the \"openid\" scope is not requested\n\n3/6/2016\n- sanitize the OIDCAuthNHeader value before setting the header; thanks @rfk\n- bump to 1.8.8rc7\n\n3/5/2016\n- log exact version of OpenSSL and EC/GCM/Redis support\n- tidy up auth_openidc.conf docs\n- bump to 1.8.8rc6\n\n2/26/2016\n- add option to refresh claims from the userinfo endpoint using OIDCUserInfoRefreshInterval; see #119\n- merge id_token claims in to the set of claims used for authorization for Apache >=2.4; see #120\n- bump to 1.8.8rc5\n\n2/23/2016\n- make state cookie a session cookie and clean expired cookies on entry (merge of fix-firefox-cookie-storage)\n- fix HTML error template initialization in vhosts\n- bump to 1.8.8rc4\n\n2/22/2016\n- don't authenticate (redirect/state) when X-Requested-With header exists; as suggested in #113\n- bump to 1.8.8rc3\n\n2/18/2016\n- pass plain state to the token endpoint on code flows: https://tools.ietf.org/html/draft-jones-oauth-mix-up-mitigation-01\n- fix loose (prefix-only) matching of cookie names\n- allow passing OAuth bearer token as a cookie (OIDCOAuthAcceptTokenAs extension for PingAccess)\n- bump to 1.8.8rc2\n\n2/11/2016\n- include token_endpoint_auth_method in dynamic client registration request, set to selected method from provider\n\n2/10/2016\n- Elliptic Curve support now requires OpenSSL 1.0.1 detection\n- bump to 1.8.8rc1\n\n1/14/2016\n- add support for passing in OAuth bearer tokens as one or more of: header, post param or query param (OIDCOAuthAcceptTokenAs)\n- bump to 1.8.8rc0\n\n1/8/2016\n- release 1.8.7\n\n1/7/2016\n- update copyright year\n\n12/17/2015\n- enforce strict matching of issuer in Discovery document against the originally requested issuer\n- check iss/client_id if present in an authentication response\n- push a hash of state to the token endpoint on code flows\n- bump to 1.8.7rc4\n\n12/9/2015\n- improve debug logging around session management capabilities (i.e. enabled/disabled)\n- return 404 for op/rp iframes if session management is not enabled\n- bump to 1.8.7rc3\n\n12/4/2015\n- add support for RFC 7636 PKCE plain & S256 https://tools.ietf.org/html/rfc7636\n- bump to 1.8.7rc2\n\n12/3/2015\n- fix crash when using a custom error template and the error description is NULL\n- fix crash when target_link_uri is not a valid URI or parts are empty\n- fix memory corruption when using custom html template across different server requests; closes #106\n- bump to 1.8.7rc1\n\n11/18/2015\n- fix compiler warning on double sizeof call; close #103; thanks to @dcb314\n- bump to 1.8.7rc0\n\n10/26/2015\n- add option to make session cookie persistent; closes #97\n- release 1.8.6\n\n10/19/2015\n- add support for applying a custom HTML error template with OIDCHTMLErrorTemplate\n- bump to 1.8.6rc3\n\n10/12/2015\n- check the cookie domain that the session was created for against the configured domain\n- log a warning if the Set-Cookie value length is greater than 4093 bytes\n- include and prioritize the X-Forwarded-Host header in hostname determination\n- allow for missing Host header i.e. HTTP 1.0\n- return DONE instead of HTTP_UNAUTHORIZED with Discovery page (prevent double HTML in HTTP 1.0)\n- use apr_strnatcmp instead of strcmp in util.c and mod_auth_openidc.c\n- bump to 1.8.6rc2\n\n10/9/2015\n- support subdomain cookies in OIDCCookieDomain checks; PR #96, thanks @pfiled\n- bump to 1.8.6rc1\n\n10/6/2015\n- add key identifier (\"kid\") option to `OIDCOAuthVerifySharedKeys`, `OIDCOAuthVerifyCertFiles` and `OIDCPublicKeyFiles` configs\n- bump to 1.8.6rc0\n\n9/21/2015\n- support (non-sid-based) HTTP logout: http://openid.net/specs/openid-connect-logout-1_0.html\n- release 1.8.5\n\n9/16/2015\n- improve logging on provider/client/conf metadata parsing failures; closes #94\n- bump to 1.8.5rc7\n\n9/9/2015\n- fix parsing of OIDCOAuthTokenExpiryClaim, thanks to @bester #90\n- bump to 1.8.5rc6\n\n9/4/2015\n- add CSRF protection to external Discovery as well\n- allow browser back after authorization response, see #89\n- handle invalid (expired) authorization response state by sending the user to OIDCDefaultURL, see #86\n- bump to 1.8.5rc5\n\n8/26/2015\n- add CSRF protection to Discovery\n- bump to 1.8.5rc4\n\n8/19/2015\n- support encrypted JWTs using A192KW for key encryption and A192CBC-HS384 for content encryption\n- bump to 1.8.5rc3\n\n8/15/2015\n- support encrypted JWTs using RSA-OAEP for key encryption and A128GCM,A192GCM,A256GCM for content encryption\n- bump to 1.8.5rc2\n\n8/4/2015\n- support for OIDCUnAuthAction: how to act on unauthenticated requests (OIDCReturn401 is deprecated)\n- bump to 1.8.5rc1\n\n7/15/2015\n- add authentication option for Redis server with OIDCRedisCachePassword\n- bump to 1.8.5rc0\n\n7/3/2015\n- allow for compilation on Windows using VS 2013\n- bump to 1.8.4\n\n6/30/2015\n- improve memcache logging: don't report cache misses as an error, thanks to @scottdear\n- work around JSON timestamp print modifier issue (%lld) on some platforms, thanks to @ralphvanetten\n- bump to 1.8.4rc3\n\n6/24/2015\n- support passing claims as environment variables (OIDCPassClaimsAs)\n- bump to 1.8.4rc1\n\n6/22/2015\n- correct debug printout in oidc_util_read_form_encoded_params\n\n6/20/2015\n- avoid double free of JWT after parsing errors have been encountered\n- bump to 1.8.4rc0\n\n6/19/2015\n- make public keys for encrypted access tokens available in OAuth-only configurations; fixes #74\n- remove exceptions for accounts.google.com since Google is OpenID Connect compliant now\n- release 1.8.3\n\n6/15/2015\n- add a complete JWT sample that includes validation of \"exp\" and \"iat\" to the test suite\n\n6/10/2015\n- allow JSON string values for the \"active\" claim in access token validation responses\n- bump to 1.8.3rc4\n\n6/7/2015\n- improve error logging on non-supported JWT signing/encryption algorithms\n- bump to 1.8.3rc3\n\n5/31/2015\n- merge id_token (\"iss\"!) and user info claims for authz processing\n- bump to 1.8.3rc2\n\n5/29/2015\n- fix hash comparison when padded, thanks to @steverc as mentioned in #65\n- fix post-logout URL being set to SSO URL\n- add post-logout URL validation, thanks to @davidbernick\n- bump to 1.8.3rc1\n\n5/18/2015\n- fix OpenSSL version detection for Elliptic Curve support in apr_jwt_signature_to_jwk_type: include opensslv.h\n- fix hash length calculation for Elliptic Curve algorithms\n- release 1.8.2\n\n5/5/2015\n- release 1.8.1\n\n4/21/2015\n- allow setting OIDCDiscoverURL inside of Directory and Location directives as well\n- bump to 1.8.1rc5\n\n4/20/2015\n- allow setting OIDCCookie outside of Directory and Location directives as well\n- bump to 1.8.1rc4\n\n4/17/2015\n- add support for applying regular expressions to OIDCRemoteUserClaim and OIDCOAuthRemoteUserClaim\n- bump to 1.8.1rc3\n\n4/12/2015\n- make token expiry parsing of introspection result configurable (OIDCOAuthTokenExpiryClaim)\n- increase SHM cache key size from 255 to 512 (allows for JWT access tokens cache keys for introspection result)\n- bump to 1.8.1rc2\n\n4/1/2015\n- avoid timing attacks on symmetric key signature/hash comparisons as pointed out by @timmclean\n- bump to 1.8.1rc1\n\n3/19/2015\n- merge #57: fix build with OpenSSL <1.0 re. apr_jws_signature_is_ec (thanks to @szakharchenko)\n\n2/26/2015\n- release 1.8.0\n\n2/23/2015\n- avoid including line feeds in header values (thanks to @forkbomber and @ekanthi)\n- bump to 1.8.0rc5\n\n2/16/2015\n- fix free() crash on simple-valued error printouts\n- fix returning keys without a \"kid\"\n- fix searching for keys with a \"x5t\" thumbprint\n- refactor response type handling; more strict matching of requested response type\n- make compiled in Redis support optional\n- fix oauth.introspection_endpoint_method in initialization\n- bump to 1.8.0rc4\n\n2/15/2015\n- add support for configurable introspection HTTP method (OIDCOAuthIntrospectionEndpointMethod)\n- add preliminary support for GET-style logout\n- bump to 1.8.0rc2\n\n2/12/2015\n- add support for configuration of maximum session duration\n- bump to 1.8.0rc1\n\n2/9/2015\n- check JWT signature against all configured keys (jwks_uri) if no \"kid\" is provided, not just the first one\n- revise JOSE JWS handling part 2\n- complete support for local JWT access token validation\n- bump to 1.8.0rc0\n\n2/5/2015\n- fix symmetric key decryption of JWTs (A128CBC-HS256/A256CBC-HS512)\n- sha256 client secrets before using them as symmetric keys for decryption\n- extended decryption test coverage; avoid double printouts on error\n- refactor JWT header parsing\n- simplify JWK URI refresh handling\n- release 1.7.3\n\n2/4/2015\n- revise JOSE JWK handling part 1\n- change change target_uri parameter name to target_link_uri following draft-bradley-oauth-jwt-encoded-state-03\n- extended tests with stubs\n- refactor JWT validation (iss, exp, iat)\n- fix memory leak with RSA key conversion in apr_jwk.c - apr_jwk_rsa_bio_to_key\n- bump to 1.7.3rc4\n\n1/25/2015\n- Allow {... \"error\": null ...} in JSON responses. (@fatlotus)\n\n1/22/2015\n- fix configuration validation check where no config would be checked if OIDCProviderIssuer is set\n  but both OIDRedirectURI and OIDCCryptoPassphrase are not set\n- add preliminary support for local JWT access token validation\n- bump to 1.7.3rc1\n- sanitize set cookie syntax (get rid of extraneous \";\")\n\n1/21/2015\n- add support for OIDCOAuthIntrospectionTokenParamName (incl. Google OAuth 2.0 access token validation)\n- add a sample OAuth 2.0 config for Google access tokens to README.md\n- release 1.7.2\n\n- add APXS2_OPTS to configure.ac to accommodate RPM builds\n- bump to 1.7.3rc0\n- fix JWT timestamp (iat/exp) initialization issue\n- fix README.md on Google's scope required for returning the \"hd\" claim\n\n1/14/2015\n- add Apache function stubs to enable extending the scope of tests\n- add tests for oidc_proto_validate_access_token and oidc_proto_validate_code\n- bump to 1.7.2rc3\n\n1/12/2015\n- improve accuracy of expired/invalid session handling\n\n1/11/2015\n- add error type and return values to JOSE functions\n- fix return result on error in function that decrypts CEK\n- bump to 1.7.2rc2\n\n1/1/2015\n- update copyright to 2015\n- use json_int_t (seconds) for \"exp\" and \"iat\" fields, instead of apr_time_t (microseconds) \n- correct expiry debug printout\n- bump to 1.7.2rc1\n\n12/15/2014\n- fix Redis reconnect behavior: avoid keep reconnecting after first failure\n- bump to 1.7.2rc0\n\n12/12/2014\n- support passing cookies specified in OIDCPassCookies from browser on to OP/AS calls (for loadbalancing purposes)\n- release 1.7.1\n- document OIDCPassCookies in auth_openidc.conf\n\n12/10/2014\n- reconnect to the Redis server after I/O failure as raised in #43\n- bump to 1.7.1rc4\n\n12/8/2014\n- return http 500 when detecting requests that will loop on return\n- bump to 1.7.1rc3\n\n12/3/2014\n- require the expiring access_token on the refresh hook for XSRF protection\n- pass error codes back to the caller when the refresh hook fails\n- bump to 1.7.1rc2\n\n12/2/2014\n- improve handling of non-string (=non-compliant) error responses\n\n11/26/2014\n- make shared memory cache entry max size configurable through OIDCCacheShmEntrySizeMax\n- add OIDCReturn401 configuration primitive\n- bump to 1.7.1rc1\n\n11/11/2014\n- allow OIDCRedirectURI's with an empty path and fix crash; thanks to @CedricCabessa\n\n11/9/2014\n- support for adding configurable JSON parameters to Dynamic Client Registration requests\n\n11/5/2014\n- release 1.7.0\n\n10/30/2014\n- correct expires_in conversion\n- first stab at HTML templating and make all html HTML 4.01 Strict compliant\n- bump to 1.7.0rc4\n\n10/29/2014\n- document refresh flow\n\n10/28/2014\n- scrub all OIDC_ headers\n- add support for the refresh_token flow + hook\n- pass the expires_in as an absolute timestamp in OIDC_access_token_expires\n- use a global mutex for the Redis cache\n- bump to 1.7.0rc3\n\n10/27/2014\n- generalize support for OAuth 2.0 token introspection and conform to:\n  https://tools.ietf.org/html/draft-ietf-oauth-introspection-00\n\n10/26/2014\n- support regular expressions in Require statements\n\n10/24/2014\n- add support for Redis cache backend; there's a dependency on hiredis headers/library now\n\n10/21/2014\n- refactor nonce generation and remove base64url padding from value\n\n10/13/2014\n- add libssl-dev to Debian control build dependencies\n- release 1.6.0\n\n10/6/2014\n- apply html encoding to error display\n- bump version number to 1.6.0rc4\n\n10/2/2014\n- avoid crash when downloading metadata from OIDCProviderMetadataURL fails\n- set OIDCProviderMetadataURL retrieval interval to 24 hours\n- return error on configurations mixing OIDCProviderMetadataURL and OIDCMetadataDir\n- bump version number to 1.6.0rc3\n\n10/1/2014\n- support provider configuration from a metadata URL (OIDCProviderMetadataURL)\n- bump version number to 1.6.0rc2\n\n9/30/2014\n- be less strict about issuer validation in metadata\n- refactor metadata.c\n- improve logging about userinfo endpoint\n\n9/29/2014\n- refactor cache so it is partitioned in to sections (i.e. avoid future key collisions)\n\n9/25/2014\n- add support for \"x5c\" JWK representation\n- return JWKS on jwks_uri with content-type \"application/json\"\n\n9/17/2014\n- remove support for the X-Frame-Options as it is not needed in 302s\n- create and use log macros that printout function name\n\n9/16/2014\n- support for passing runtime determined authentication request parameters in the discovery response\n- include name/version in logs and bump to 1.6.0rc1\n- don't use the X-Frame-Options by default\n\n9/13/2014\n- add support for the X-Frame-Options header as recommended by the spec\n\n9/12/2014\n- set expiry on state cookies; don't clear session cookie after cache miss or corruption\n- fix JSON array memory leak in oauth.c\n\n9/10/2014\n- merge #34 (g10f), fix session management Javascript bug\n\n9/3/2014\n- improve error handling on hitting the redirect URI directly\n- fix set_slot functions for algorithm/url used as default for dynamic registration\n- rewording of auth_openidc.conf docs on JWK settings\n\n9/1/2014\n- add session management based on http://openid.net/specs/openid-connect-session-1_0.html (draft 21)\n\n8/29/2014\n- add configuration option to POST extra parameters to the token endpoint\n\n8/26/2014\n- correct cookie_path comparison\n- release 1.5.5\n\n8/20/2014\n- correctly error out on flows where no id_token was provided (\"token\")\n\n8/19/2014\n- fix debug printout on open redirect prevention\n- cleanup in-memory crypto context on shutdown\n- use default of \"/\" for OIDCCookiePath to simplify quickstart/simple deployments\n- disable OIDCMetadataDir in sample/default config file\n- clear session cookie after cache miss or corruption\n\n8/18/2014\n- add HttpOnly flag to cookies by default; can be disabled by config\n\n8/14/2014\n- support for passing the id_token in multiple formats (claims|payload|serialized)\n- release 1.5.4\n\n8/13/2014\n- pass the access_token in OIDC_access_token header to the application\n\n8/9/2014\n- merge #21 (Latinovic) to close #18 (big endian JWE issue)\n- merge #20 (wadahiro), support for \"none\" JWT signing algorithm\n\n8/1/2014\n- fix cache initialization/destroy leak\n- release 1.5.3\n\n7/26/2014\n- refactor http code; cleanup JSON encoding in client registration\n- refactor padding handling in base64url encoding/decoding\n\n7/20/2014\n- check for open redirect on passed target_link_uri\n- prevent JWE timing attacks on CEK; add JWE test\n- include client_id and scope values in resolved access_token\n\n7/1/2014\n- pass JSON objects in app HTTP headers as plain JSON\n- correct printout in id_token hash comparisons\n- add more tests\n- release 1.5.2\n\n6/12/2014\n- support third-party-initiated login as defined in the spec\n- release 1.5.1\n- fix PF OAuth 2.0 RS functionality after upgrading to jansson\n\n6/6/2014\n- more changes for Debian packaging (1.5-3)\n\n6/5/2014\n- do not set Secure cookies for plain HTTP\n- add warning/errors when configured hosts/domains do not match\n- release 1.5\n- changes for Debian packaging\n\n6/4/2014\n- fix passing integer claims on non-Mac OS X systems\n- fix claims-based authorization with integer values (@martinsrom)\n- fix getting the id_token from request state and error logging\n- add AUTHORS file with credits\n- migrate README to Markdown README.md\n\n6/3/2014\n- change JSON parser from https://github.com/moriyoshi/apr-json to http://www.digip.org/jansson/\n\n6/2/2014\n- handle X-Forwarded-Proto/X-Forwarded-Port when running behind a proxy/load-balancer\n- release version 1.4\n\n6/1/2014\n- compile with OpenSSL <1.0 and but then disable Elliptic Curve verification\n- fix jwks_uri setting in nested vhosts\n- use OpenSSL_add_all_digests in initialization and EVP_cleanup on shutdown\n\n5/31/2014\n- README additions/improvements\n\n5/29/2014\n- correct big endian detection\n- allow for key identification in JWKs based on thumbprint (x5t)\n\n5/24/2014\n- add cache destroy function and destroy shm cache resources on shutdown\n\n5/23/2014\n- doc corrections to auth_openidc.conf\n\n5/22/2014\n- add implementation of OP-initiated-SSO based on:\n  http://tools.ietf.org/html/draft-bradley-oauth-jwt-encoded-state-01\n- fix nonce caching for replay prevention\n\n5/21/2014\n- correct README on enabling Google+ APIs before applying the sample Google configs\n- fix AuthNHeader setting and allow server-wide config too\n- avoid segfault on corrupted/non- JSON/JWT input\n\n5/20/2014\n- fix URL assembly when running on non-standard port\n- release 1.3\n\n5/17/2014\n- support outgoing proxy using OIDCOutgoingProxy\n- correct sample configs in documentation for missing OIDCCookiePath\n- support OIDCCookiePath in server-wide config as well\n\n5/13/2014\n- support configurable (custom) query parameters in the authorization request\n\n5/12/2014\n- support encrypted JWTs using A128KW and A256KW for the Content Encryption Key\n- support A256CBC-HS512 encrypted JWTs\n- support custom client JWKs URI\n\n5/8/2014\n- support encrypted JWTs using RSA1_5 and A128CBC-HS256\n\n5/2/2014\n- do not use ap_get_remote_host for browser fingerprinting\n\n5/1/2014\n- split out custom client config into separate <issuer>.conf file\n- allow to override client_contact, client_name and registration_token in .conf file\n- remove OIDCRegistrationToken command for the static OP config\n\n4/29/2014\n- support JWT verification of ES256, ES384 and ES512 algorithms\n\n4/28/2014\n- support configurable response_mode (fragment, query or form_post)\n- use nonce in all flows except for OP Google and flows \"code\" or \"code token\"\n\n4/26/2014\n- make client secret optional (support self-issued OP)\n\n4/25/2014\n- support Hybrid flows\n\n4/24/2014\n- fix using Bearer token Authorization header on JSON POST calls\n- support using a Bearer token on client registration calls\n\n4/22/2014\n- match request and response type \n- check at_hash value on \"token id_token\" implicit flow\n- use shared memory caching by default\n- release 1.2\n\n4/19/2014\n- store response_type in state and make state a JSON object\n\n4/18/2014\n- support RSASSA-PSS token signing algorithms (PS256,PS384,PS512)\n\n4/17/2014\n- improve session inactivity timeout handling\n\n4/16/2014\n- set REMOTE_USER and HTTP headers on OAuth 2.0 protected paths\n\n4/15/2014\n- add session inactivity timeout\n- register all supported response_types during client registration and try\n  to pick the one that matches the configured default\n- use long timeouts on JWK retrieval calls\n- allow for non-null but empty query parameters on implicit authorization response\n- simplify azp/aud and nonce handling\n- change session_type naming (to \"server-cache\"/\"client-cookie\")\n\n4/14/2014\n- factor out JOSE related code\n\n4/3/2014\n- add configurable claim name for the REMOTE_USER variable, optionally postfixed with the  url-encoded\n  issuer value; the default for the remote username is \"sub@\" now, makeing it unique across OPs\n- some refactoring of id_token validation functions\n- add INSTALL, move auth_openidc.conf to main directory\n- release 1.1\n\n3/28/2014\n- fix Require claim name mismatch for Apache 2.4\n- fix hmac method/printout naming artifacts from earlier\nauto-search-and-replace\n- release v1.0.1\n\n3/27/2014\n- initial import named mod_auth_openidc\n- updated README\n- fix debian/changelog\n", "AC_INIT([mod_auth_openidc],[2.4.13.2rc2],[hans.zandbelt@openidc.com])\n\nAC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())\n\nAM_INIT_AUTOMAKE([-Wall -Werror foreign subdir-objects])\n\nAC_CONFIG_HEADERS([src/config.h])\nAC_CONFIG_MACRO_DIR([m4])\n\nAC_PROG_CC\nAM_PROG_CC_C_O\nAM_PROG_AR\nLT_INIT([dlopen])\n\n# Checks for apxs.\nAC_ARG_WITH([apxs],\n\t[AS_HELP_STRING([--with-apxs=PATH/NAME],[path to the apxs binary for Apache [[apxs]]])],\n\t[AC_SUBST(APXS, $with_apxs)],\n\t[AC_PATH_PROGS(APXS, [apxs apxs2],,)])\n\nif test ! -x \"$APXS\"; then\n\t# $APXS isn't a executable file.\n\tAC_MSG_ERROR([\nCould not find apxs. Please specify the path to apxs\nusing the --with-apxs=/full/path/to/apxs option.\nThe executable may also be named 'apxs2'.\n])\nfi\n\nAPXS_CFLAGS=`${APXS} -q CFLAGS 2> /dev/null`\nAPXS_CPPFLAGS=`${APXS} -q CPPFLAGS 2> /dev/null`\nAPXS_LDFLAGS=`${APXS} -q LDFLAGS 2> /dev/null`\nAPXS_LIBS=`${APXS} -q LIBS 2> /dev/null`\nAPXS_LIBEXECDIR=`${APXS} -q LIBEXECDIR 2> /dev/null`\nAPXS_INCLUDEDIR=`${APXS} -q INCLUDEDIR 2> /dev/null`\nAPXS_INCLUDES=\"-I${APXS_INCLUDEDIR}\"\n\nPKG_CHECK_MODULES(APR, [apr-1, apr-util-1])\n\n# Apache libraries.\nAPACHE_MODULEDIR=\"${APXS_LIBEXECDIR}\"\nAPACHE_INCLUDES=\"${APXS_INCLUDES} ${APR_INCLUDES}\"\nAPACHE_CFLAGS=\"${APXS_CFLAGS} ${APR_CFLAGS} ${APACHE_INCLUDES}\"\nAPACHE_CPPFLAGS=\"${APXS_CPPFLAGS} ${APR_CPPFLAGS} ${APACHE_INCLUDES}\"\nAPACHE_LDFLAGS=\"${APXS_LDFLAGS} ${APR_LDFLAGS}\"\nAPACHE_LIBS=\"${APXS_LIBS} ${APR_LIBS}\"\n\nAC_SUBST(APACHE_MODULEDIR)\nAC_SUBST(APACHE_INCLUDES)\nAC_SUBST(APACHE_CFLAGS)\nAC_SUBST(APACHE_CPPFLAGS)\nAC_SUBST(APACHE_LDFLAGS)\nAC_SUBST(APACHE_LIBS)\n\n# We need the curl library for HTTP callouts.\nPKG_CHECK_MODULES(CURL, libcurl)\nAC_SUBST(CURL_CFLAGS)\nAC_SUBST(CURL_LIBS)\n\n# We need OpenSSL for crypto and HTTPS callouts.\nPKG_CHECK_MODULES(OPENSSL, openssl)\nAC_SUBST(OPENSSL_CFLAGS)\nAC_SUBST(OPENSSL_LIBS)\n\n# older versions of libapr may not have memcache support\nold_CPPFLAGS=$CPPFLAGS\nCPPFLAGS=\"${APACHE_CPPFLAGS} ${APACHE_CFLAGS} $CPPFLAGS\"\nAC_CHECK_HEADER([apr_memcache.h], [HAVE_MEMCACHE=1], [HAVE_MEMCACHE=0])\nAM_CONDITIONAL(HAVE_MEMCACHE,[test x\"$HAVE_MEMCACHE\" = \"x1\"])\nCPPFLAGS=$old_CPPFLAGS\n\n# We need Jansson for JSON parsing.\nPKG_CHECK_MODULES(JANSSON, jansson)\nAC_SUBST(JANSSON_CFLAGS)\nAC_SUBST(JANSSON_LIBS)\n\n# cjose\nPKG_CHECK_MODULES(CJOSE, cjose)\nAC_SUBST(CJOSE_CFLAGS)\nAC_SUBST(CJOSE_LIBS)\n\n# PCRE\nPKG_CHECK_MODULES([PCRE2], libpcre2-8, [\n  PCRE_CFLAGS=\"$PCRE2_CFLAGS\"\n  PCRE_LIBS=\"$PCRE2_LIBS\"\n  AC_DEFINE([HAVE_LIBPCRE2], [1], [Define if libpcre2 is available.])\n  enable_pcre2=yes\n], [\n  AC_CHECK_HEADER(pcre2.h, [\n    AC_CHECK_LIB(pcre2-8, pcre2_compile_8, [\n      PCRE_LIBS=\"-lpcre2-8\"\n      AC_DEFINE([HAVE_LIBPCRE2], 1, [Define if libpcre2 is available.])\n      enable_pcre2=yes\n    ])\n  ])\n])\n\nAS_IF([test \"X$enable_pcre2\" != \"Xyes\"],[\n  PKG_CHECK_MODULES([PCRE], libpcre, [\n    CFLAGS=\"$PCRE_CFLAGS $CFLAGS\"\n    AC_CHECK_HEADER(pcre.h, [\n      LIBS=\"$PCRE_LIBS $LIBS\"\n      AC_DEFINE([HAVE_LIBPCRE], [1], [Define if libpcre is available.])\n      enable_pcre=yes\n    ])\n  ], [\n    AC_CHECK_HEADER(pcre.h, [\n      AC_CHECK_LIB(pcre, pcre_compile, [\n        PCRE_LIBS=\"-lpcre\"\n        AC_DEFINE([HAVE_LIBPCRE], 1, [Define if libpcre is available.])\n      ])\n    ])\n  ])\n])\n\nAS_IF([test \"X$enable_pcre2\" = Xyes], [PCRE_INFO=\"yes, via libpcre2\"], [test \"X$enable_pcre\" = Xyes], [PCRE_INFO=\"yes, via libpcre\"], [PCRE_INFO=no])\n\nAC_SUBST(PCRE_CFLAGS)\nAC_SUBST(PCRE_LIBS)\n\nAC_ARG_WITH(brotli,\n\tAS_HELP_STRING([--with-brotli], [enable brotli compression support]),\n\tac_brotli=$withval, ac_brotli=no)\nif test x$ac_brotli != xno; then\n\tPKG_CHECK_MODULES(LIBBROTLIENC, [libbrotlienc >= 1.0.0], [with_libbrotlienc=yes], [with_libbrotlienc=no])\n\tPKG_CHECK_MODULES(LIBBROTLIDEC, [libbrotlidec >= 1.0.0], [with_libbrotlidec=yes], [with_libbrotlidec=no])\nfi\nAM_CONDITIONAL(HAVE_LIBBROTLI, [test \"${with_libbrotlienc}\" == \"yes\" && test \"${with_libbrotlidec}\" == \"yes\"])\nAC_SUBST([LIBBROTLIENC_CFLAGS])\nAC_SUBST([LIBBROTLIDEC_CFLAGS])\nAC_SUBST([LIBBROTLIENC_LIBS])\nAC_SUBST([LIBBROTLIDEC_LIBS])\n\nif test \"${with_libbrotlienc}\" != \"yes\" || test \"${with_libbrotlidec}\" != \"yes\"; then\n\tPKG_CHECK_MODULES([ZLIB], [zlib], [HAVE_LIBZ=1], [HAVE_LIBZ=0])\nfi\nAM_CONDITIONAL(HAVE_LIBZ, [test x\"$HAVE_LIBZ\" = \"x1\"])\nAC_SUBST([ZLIB_CFLAGS])\nAC_SUBST([ZLIB_LIBS])\n    \n# Redis\nAC_ARG_WITH([hiredis],\n\t[AS_HELP_STRING([--with-hiredis],\n\t[support Redis @<:@default=check@:>@])],\n\t[],\n\t[with_hiredis=yes])\nAS_CASE([\"$with_hiredis\"],\n\t[yes], [\n\t\tif test \"$HIREDIS_LIBS\" == \"\"; then PKG_CHECK_MODULES([HIREDIS], [hiredis], [HAVE_LIBHIREDIS=1], [HAVE_LIBHIREDIS=0]) ; else [HAVE_LIBHIREDIS=1] ; fi\n\t],\n\t[no], [HAVE_LIBHIREDIS=0],\n\t[PKG_CHECK_MODULES([HIREDIS], [hiredis], [HAVE_LIBHIREDIS=1], [HAVE_LIBHIREDIS=0])])\nAM_CONDITIONAL(HAVE_LIBHIREDIS, [test x\"$HAVE_LIBHIREDIS\" = \"x1\"])\nAC_SUBST(HIREDIS_CFLAGS)\nAC_SUBST(HIREDIS_LIBS)\n\n# JQ\nHAVE_LIBJQ=0\n\nAC_ARG_WITH([jq],\n\tAS_HELP_STRING([--with-jq=PATH], [location of your libjq installation])])\n\nif test -n \"$with_jq\"\nthen\n\tif test \"$JQ_CFLAGS\" == \"\"; then\n\t\tJQ_CFLAGS=\"-I$with_jq/include\"\n\tfi\n\tif test \"$JQ_LIBS\" == \"\"; then\n\t\tJQ_LIBS=\"-L$with_jq/lib -ljq\"\n\tfi\n\n\tCPPFLAGS=\"$JQ_CFLAGS $CPPFLAGS\"\n\tAC_CHECK_HEADER([jq.h], [HAVE_LIBJQ=1], [HAVE_LIBJQ=0])\n\n\tLDFLAGS=\"$JQ_LIBS $LDFLAGS\"\n\tAC_CHECK_LIB([jq], [jq_init], [HAVE_LIBJQ=1], [HAVE_LIBJQ=0])\n\tif test \"x$have_jq\" = \"x0\" ; then\n\t\tAC_MSG_WARN(\"cannot find library for -ljq.\")\n\tfi\nfi\n\nAM_CONDITIONAL(HAVE_LIBJQ, [test x\"$HAVE_LIBJQ\" = \"x1\"])\nAC_SUBST(JQ_CFLAGS)\nAC_SUBST(JQ_LIBS)\n\n# Create Makefile from Makefile.in\nAC_CONFIG_FILES([Makefile])\nAC_OUTPUT\n"], "fixing_code": ["03/28/2023\n- CVE-2023-28625: prevent core dump when OIDCStripCookies is set and a crafted Cookie header is supplied\n  https://github.com/OpenIDC/mod_auth_openidc/security/advisories/GHSA-f5xw-rvfr-24qr\n- release 2.4.13.2\n\n03/27/2023\n- fix code scanning alerts\n- bump to 2.4.13.2rc2\n  \n03/24/2023\n- add support for Elliptic Curve signing/encryption keys in addtion to RSA keys,\n  i.e. client keys configured in OIDCPrivateKeyFiles/OIDCPublicKeyFiles, published on OIDCClientJwksUri\n  and used in private_key_jwt authentication, encrypted id_token's, request objects/uri's,\n  but also statically configured provider keys in OIDCOAuthVerifyCertFiles and OIDCProviderVerifyCertFiles\n- refactor Docker tests make targets; add test/Makefile\n- bump to 2.4.13.2rc1\n\n03/24/2023\n- record authorization errors in environment variable OIDC_AUTHZ_ERROR\n  so its value can be used in logs e.g. with HTTP 401 responses:\n    LogFormat \"%h %l %u %t %U %401{OIDC_AUTHZ_ERROR}e %>s %b\" combined\n- log authorization errors with oidc_debug instead of oidc_info\n- bump to 2.4.13.2rc0\n\n03/10/2023\n- fix oidc_jwk_list_copy and usage of OIDCProviderVerifyCertFiles\n- release 2.4.13.1\n\n03/10/2023\n- shm cache: increase default maximum number of active sessions from 500 to 2000\n- shm cache: allow configuration of max 1Mb of session data for a single session\n- use deep-copy and cleanup functions for server and provider configs; fixes overriding server-level keys in vhost configs\n- release 2.4.13\n\n03/09/2023\n- add support for OP \"signed_jwks_uri\" with \"OIDCProviderSignedJwksUri <uri> <jwk>\"\n- don't pull JWKs when the id_token was signed with a symmetric key\n- don't immediately refresh of JWKs from (signed)_jwks_uri if \"kid\" was not set in JWT, but try the cache first\n- warn about incorrect configurations not setting OIDCCryptoPassphrase; see https://github.com/OpenIDC/mod_auth_openidc/discussions/1030\n- bump to 2.4.13rc5\n\n03/08/2023\n- move repo to OpenIDC github organization\n\n03/02/2023\n- allow setting minumum and maximum versions of TLS used in HTTPs calls via libcurl environment\n  variable CURLOPT_SSL_OPTIONS e.g.:\n  SetEnvIfExpr true \"CURLOPT_SSL_OPTIONS=CURL_SSLVERSION_TLSv1_3 CURL_SSLVERSION_MAX_TLSv1_3\" ; bump to 2.4.13rc3\n- bump to 2.4.13rc3\n\n03/01/2023\n- revert accidentally removed libbrotli code in jose.c\n- bump to 2.4.13rc2\n\n02/19/2023\n- add optional - compilation time support - for brotli compression of session and state cookies\n\n02/17/2023\n- avoid (small) memory leak when using OpenSSL 3.x when setting public/private keys\n  (over graceful restarts) in the config and/or importing JWKs with x5c specs\n- compress session and state cookies; add zlib as a dependency\n- bump to 2.4.13rc0\n\n01/27/2023\n- increase maximum allowed size of HTTP responses (e.g. from token endpoint) to 10Mb; see #998; thanks @mikehearn\n- do a sanity check on the individual size of claim values stored in the session, warn about blacklisting if > 8Kb\n- bump to 2.4.12.4rc2\n\n01/23/2023\n- release 2.4.12.3\n\n01/20/2023\n- add OIDCProviderVerifyCertFiles option to statically configure ID token validation keys; see #989; thanks @madsfreek\n- fix bug in OIDCOAuthVerifyCertFiles where cert(s) would be cast to apr_hash_t instead of apr_array_header_t; see #990; thanks @bommo1\n- bump to 2.4.12.3rc0\n\n12/28/2022\n- update sample/test Dockerfile to Ubuntu Jammy\n\n12/13/2022\n- CVE-2022-23527: prevent open redirect in default setup when OIDCRedirectURLsAllowed is not configured\n  see: https://github.com/zmartzone/mod_auth_openidc/security/advisories/GHSA-q6f2-285m-gr53\n- release 2.4.12.2\n\n12/08/2022\n- simplify redis context code\n- bump to 2.4.12.2rc1\n\n11/18/2022\n- allow overriding the type of lock used at compile time with OIDC_LOCK\n- bump to 2.4.12.2rc0\n\n11/15/2022\n- release 2.4.12.1\n\n11/13/2022\n- switch to using apr_generate_random_bytes instead of apr_uuid_get to generate session identifiers\n  so there's no longer a (rather implicit) dependency on a libapr that is compiled againt libuuid\n  on Linux platforms; see #431, #603 and #694; thanks @amitnarang28\n- cache file backend fix: delete the correct file upon logout; closes #955; thanks @damisanet\n- bump to 2.4.12.1rc5\n\n11/08/2022\n- add option to use ISO-8859-1 encoding for propagated claim values by adding\n  \"latin1\" option to OIDCPassClaimsAs <> latin1; see #957; thanks @nvchaudhari1991\n  Note that the encoding - including the existing \"base64url\" - apply to both header and\n  environment variables as well now.\n- bump to 2.4.12.1rc4\n\n10/26/2022\n- OIDCProviderMetadataRefreshInterval was interpreted in microseconds instead\n  of the documented and intended seconds; setting in to seconds would effectively\n  turn of caching and pull the configuration document on each request\n- bump to 2.4.12.1rc3\n\n10/25/2022\n- define APLOG_TRACE1 if it does not exist\n- bump to 2.4.12.1rc2\n\n10/20/2022\n- CI: add memory and semaphore checks on various distro's\n- correct ap_hook_insert_filter function signature in stub.c, part 3; see #784\n- fix printout of cache mutex errors in cache/common.c\n- prefer APR_LOCK_POSIXSEM over APR_LOCK_DEFAULT in apr_global_mutex_create\n  which is apparently required for (some) ARM based builds (and CI)\n- bump to 2.4.12.1rc1\n- fix potential memory leak in proto.c when oidc_util_create_symmetric_key fails\n- fix potential memory leak in proto.c when oidc_proto_validate_access_token fails (at_hash validation)\n\n10/19/2022\n- fix cleanup of semaphores on graceful restarts; see #522, closes #458\n  simplify mutex/shm cleanup without semaphores because we track the parent process anyway; \n- bump to 2.4.12.1rc0\n\n10/17/2022\n- release 2.4.12\n\n10/15/2022\n- add option to set a username for Redis authentication via OIDCRedisCacheUsername\n- bump to 2.4.11.4rc7\n\n10/14/2022\n- set minimum number of default memcache threads to 0 to retain backwards compatibility\n  see #916\n- support OIDCSessionInactivityTimeout values greater than 30 days when using Memcache\n  see #936, thanks @takesson\n- bump to 2.4.11.4rc6\n\n10/03/2022\n- add -fPIC to test and test-cmd compilation; see #925\n- bump to 2.4.11.4rc5\n\n09/23/2022\n- allow for step-up discovery with an external URL using HTML refresh \n  fixes behaviour on CentOS 7/8 when combined with ProxyPass\n- bump to 2.4.11.4rc4\n\n09/12/2022\n- add options to retrieve the configuration document only or pull keys from the JWKS URI;\n  for certification purposes\n- check ID token signed response algorithm on backchannel logout_token and retrieve its\n  configuration value from the client metadata file; for certification purposes\n- register request_object_signing_alg in dynamic client registration when using request_uri;\n  for certification purposes\n- bump to 2.4.11.4rc3\n\n09/08/2022\n- store access token obtained from backchannel in session over the one returned\n  in the frontchannel for \"code token\" and \"code id_token token\" flows; for \n  certification purposes\n- apply exact length matching for at_hash and c_hash validation; for certification purposes\n- increase size of the output buffer when using libpcre2 for substitution; closes #915\n- bump to 2.4.11.4rc2\n- allow setting connection pool parameters for Memcache server connections;\n  see #916; thanks @rpluem-vf\n\n08/24/2022\n- avoid using $< in Makefile\n- allow storing the id_token in a client-cookie based session; see #812 and #888\n- bump to 2.4.11.4rc1\n\n08/22/2022\n- add oidc_util_strcasestr\n- bump to 2.4.11.4rc0\n\n08/22/2022\n- release 2.4.11.3\n\n08/15/2022\n- avoid memory leak when using PCRE2 regular expressions with array matching; closes #902; thanks @smanolache\n- avoid memory leak when cjose_jws_get_plaintext fails; closes #903; thanks @smanolache\n- bump to 2.4.11.3rc4\n\n05/20/2022\n- fix handling of IPv6 based logout URLs; thanks @@codemaker219\n- bump to 2.4.11.3rc1\n\n05/16/2022\n- Use optionally provided sid and iss request parameters during front channel\n  logout; see #855; thanks @rpluem-vf\n\n05/06/2022\n- support Forwarded header in addition to X-Forwarded-*; see #853; thanks @studersi\n- bump to 2.4.11.3rc0\n\n05/05/2022\n- release 2.4.11.2\n\n05/04/2022\n- add support for Apache expressions in OIDCPathAuthRequestParams and OIDCPathScope; see #594\n- bump to 2.4.11.2rc2\n\n04/22/2022\n- add no Cache-Control headers to logout request response; see #846; thanks @blackwhiser1\n- bump to 2.4.11.2rc1\n\n04/06/2022\n- don't strip the header from encrypted JWTs as future versions of cjose may use compact\n  encoding for JWEs; this slightly increases state cookie size, by-value session cookies\n  and encrypted cache contents again at the benefit of forward cjose compatibility\n- bump to 2.4.11.2rc0\n\n03/29/2022\n- release 2.4.11.1\n\n03/28/2022\n- correct registration_endpoint_json naming in auth_openidc.conf documentation \n\n03/21/2022\n- fix OIDCUnAuthAction pass, see #790\n- bump to 2.4.11.1rc5\n\n03/18/2022\n- fix make check; add @smanolache to the AUTHORS file\n- bump to 2.4.11.1rc4\n\n03/17/2022\n- fix memory leaks over graceful restarts: use s->process->pconf pool instead of\n  the s->process->pool in oidc_slog and oidc_cache_shm_cfg_create\n  closes #823 and #824; thanks @smanolache\n\n03/14/2022\n- fix temporary cache file naming; see #777\n\n03/08/2022\n- fix a 2nd race condition in the file cache backend; see #777; thanks @dbakker and @blackwhiser1\n- bump to 2.4.11.1rc3\n\n03/04/2022\n- add support for OpenSSL 3.0\n- remove test-cmd jwk2cert command\n- bump to 2.4.11.1rc2\n\n02/28/2022\n- add a check to make sure URLs do not contain unencoded Unicode characters; see #796; thanks @cnico\n- bump to 2.4.11.1rc1\n\n02/27/2022\n- document Apache 2.4 behavior on OIDCUnAuthzAction 403; see #795; thanks @candlerb\n\n02/04/2022\n- correct ap_hook_insert_filter function signature in stub.c, part 2; closes #784; thanks @stroeder\n\n02/03/2022\n- add Valgrind Github action\n- warn about mismatch between incoming X-Forwarded-* headers and OIDCXForwardedHeaders configuration\n- avoid using %llu print formatter and switch to %lu for unsigned long so it works cross platform\n- bump to 2.4.11.1rc0\n\n01/26/2022\n- improve handling session duration expiry when combined with OIDCUnAuthAction or Discovery\n  also clear r->user in oidc_session_kill for such cases; see #778\n- release 2.4.11\n\n01/24/2022\n- fix race condition in file cache backend reading truncated files under load; see #777; thanks @dbakker\n- bump to 2.4.11rc7\n\n01/23/2022\n- fix regular expressions in Require statements\n- bump to 2.4.11rc6\n\n01/22/2022\n- no longer defer Discovery to the content handler to allow RequireAll and Require not directives\n  see #770; closes #775; thanks @rajeevn1\n- bump to 2.4.11rc5\n\n01/17/2022\n- terminate on startup when the crypto passphrase generated by \"exec:\" is empty; see #767\n- bump to 2.4.11rc4\n\n01/15/2022\n- correct printout of session id and remote user tuple for new sessions\n- avoid debug printout of payload as header when the latter is stripped\n\n01/14/2022\n- fix: avoid crash when using pcre2 for claims matching: don't pass NULL for errorstr\n- add administrative session revocation capability <redirect_uri>?revoke_session=<uuid>\n- bump to 2.4.11rc3\n\n01/12/2022\n- add AM_PROG_CC_C_O to configure.ac (at least for RHEL 7.7); see #765; thanks @bitmagewb\n- include <openssl/bn.h> in jose.c to compile with OpenSSL 1.0.x\n- fix parameters to get_current_url in oidc_handle_unauthorized_user22\n- bump to 2.4.11rc2\n\n01/06/2022\n- improve detection of suspicious redirect URLs; add test list\n- bump to 2.4.11rc1\n\n12/24/2021\n- make interpretation of X-Forwarded-* headers configurable, defaulting to none\n  so mod_auth_openidc running behind a reverse proxy that sets X-Forwarded-* headers\n  needs explicit configuration of OIDCXForwardedHeaders\n- bump to 2.4.11rc0\n\n12/21/2021\n- add \"x5t\" to JWT header in private_key_jwt client assertions; for interop with Azure AD\n- add CI Github workflow over Travis\n- bump to 2.4.10.1rc4\n\n12/16/2021\n- make X-Frame-Options header returned on OIDC front-channel logout requests configurable\n  through OIDCLogoutXFrameOptions; closes #464\n- bump to 2.4.10.1rc3\n\n12/15/2021\n- remove typedef for oidc_pcre to avoid compiler errors\n\n12/02/2021\n- add support for libpcre2; see #740\n- bump to 2.4.10.1rc2\n\n12/01/2021\n- allow authorization on info requests, see #746\n- bump to 2.4.10rc1\n\n11/28/2021\n- install taking into account DESTDIR; see #674; thanks @alerque\n\n11/11/2021\n- correct ap_hook_insert_filter function signature in stub.c; closes #732; thanks @stroeder\n- bump to 2.4.10.1rc0\n\n11/10/2021\n- release 2.4.10\n\n11/03/2021\n- add redirect/text options to OIDCUnAutzAction; see #715; thanks @chrisinmtown\n- bump to 2.4.10rc1\n\n11/02/2021\n- add check for Sec-Fetch-Dest header != \"document\" value to auto-detect requests that are not\n  capable of handling an authentication round trip to the Provider;\n  see https://github.com/zmartzone/mod_auth_openidc/discussions/714; thanks @studersi\n- bump to 2.4.10rc0\n\n10/28/2021\n- use apxs to link the module in Makefile.am\n- bump to 2.4.9.5rc8\n\n10/27/2021\n- fix regexp substition crash using OIDCRemoteUserClaim; thanks @nneul; closes #720\n- backport ap_get_exec_line, supporting the \"exec:\" option in OIDCCryptoPassphrase\n- add check for Sec-Fetch-Mode header != \"navigate\" value to auto-detect XML HTTP Requests\n- bump to 2.4.9.5rc7\n\n10/22/2021\n- complete usage of autoconf/automake; see #674\n- bump to 2.4.9.5rc4\n\n10/20/2021\n- fix parallel builds (on Debian) for now\n- bump to 2.4.9.5rc1\n\n10/19/2021\n- log require claims failure on info level\n- bump to 2.4.9.5rc0\n\n09/09/2021\n- fix memory leak when parsing JWT access token fails (in RS mode)\n\n09/07/2021\n- reorganize Redis code for extensibility\n\n09/03/2021\n- return HTTP 200 for OPTIONS requests in auth-openidc mixed mode\n- don't apply claims based authorization for OPTIONS requests\n  so paths protected with Require claim directives will now also\n  return HTTP 200 for OPTIONS requests\n- fix typo in 2.2 authorization routine\n\n09/03/2021\n- don't apply authz in discovery process; fixes 2.4.9.3\n- apply OIDCRedirectURLsAllowed setting to target_link_uri; closes #672; thanks @Meheni\n- release 2.4.9.4\n\n08/26/2021\n- don't apply authz to the redirect URI; fixes ac5686495a51bc93e257e42bfdc9c9c46252feb1\n- bump to 2.4.9.3\n\n08/20/2021\n- fix graceful restart (regression); see #458; thanks @Foxite\n- bump to 2.4.9.2\n\n08/18/2021\n- preserve session cookie in the event of a cache backend failure\n- update the id_token in the session cache if one is provided while refreshing the access token\n\n08/13/2021\n- fix retried Redis commands after a reconnect; thanks @iainh\n- release 2.4.9.1\n\n07/22/2021\n- use redisvCommand to avoid crash with crafted key when using Redis without encryption; thanks @thomas-chauchefoin-sonarsource\n- replace potentially harmful backslashes with forward slashes when validating redirection URLs; thanks @thomas-chauchefoin-sonarsource\n- release 2.4.9\n- don't use DEFAULT_LIMIT_REQUEST_LINE constant; since it does not exist in Apache 2.2.x\n\n07/15/2021\n- verify that \"alg\" is not none in logout_token explicitly\n- make session not found on backchannel logout produce a log warning instead of error\n- don't clear POST params authn on token revocation; thanks @iainh\n- bump to 2.4.9rc0\n\n07/02/2021\n- handle discovery in the content handler\n- return OK in the content handler for calls to the redirect URI and when preserving POST data\n\n06/25/2021\n- avoid XSS vulnerability when using OIDCPreservePost On and supplying URLs that contain single quotes\n  thanks @oss-aimoto\n\n06/21/2021\n- strip A256GCM JWT header from encrypted JWTS used for state cookies, cache encryption and by-value session cookies\n  resulting in smaller cookies and reduced cache content size\n\n06/10/2021\n- use encrypted JWTs for storing encrypted cache contents and avoid using static AAD/IV; thanks @niebardzo\n- bump to 2.4.9-dev\n\n06/04/2021\n- fix a problem where the host and port are calculated incorrectly, when you use literal ipv6 address.\n\n06/02/2021\n- do not send state timeout HTML document when OIDCDefaultURL is set; this can be overridden by using e.g.:\n  SetEnvIfExpr true OIDC_NO_DEFAULT_URL_ON_STATE_TIMEOUT=true \n- release 2.4.8.4\n\n06/01/2021\n- avoid Apache 2.4 appending 400/302(200/404) HTML document text to state timeout HTML info page\n  see also f5959d767b0eec4856d561cbaa6d2262a52da551 and #484; at least Debian Buster was affected\n- release 2.4.8.3\n\n05/18/2021\n- make error \"session corrupted: no issuer found in session\" a warning only so a logout call for a\n  non-existing session no longer produces error messages\n\n05/08/2021\n- store timestamps in session in seconds to avoid string conversion problems on some (libapr-1)\n  platform build/run combinations, causing \"maximum session duration exceeded\" errors\n- bump to 2.4.8.2\n\n05/07/2021\n- add OIDCClientTokenEndpointKeyPassword option to allow the use of an encrypted private key\n- release 2.4.8.1\n\n04/30/2021\n- fix potential crash when Content-Type is not set in POST requests; thanks Tatsuhiko Yasumatsu of JPCERT/CC\n- release 2.4.8\n\n04/21/2021\n- on OAuth 2.0 RS token scope/claim 401 error, add environment variable for usage with mod_headers,\n  instead of adding a header ourselves; see #572; usage, e.g;\n    Header always append WWW-Authenticate %{OIDC_OAUTH_BEARER_SCOPE_ERROR}e \"expr=(%{REQUEST_STATUS} == 401) && (-n reqenv('OIDC_OAUTH_BEARER_SCOPE_ERROR'))\"\n- bump to 2.4.8-dev\n\n04/13/2021\n- add OIDCRedisCacheConnectTimeout and OIDCRedisCacheTimeout options to configure Redis timeouts\n- bump to 2.4.7.2\n\n04/12/2021\n- fix memory leaks when caching fails\n- bump to 2.4.7.1\n\n04/04/2021\n- improve documentation on OIDCPreservePost\n- release 2.4.7\n\n04/01/2021\n- bump to 2.4.7rc1\n\n02/16/2021\n- remove session from cache before clearing it.\n\n02/12/2021\n- add maximum session lifetime (exp), inactivity timeout (timeout) and remote_user to OIDCInfoHook\n- bump to 2.4.7-dev\n\n02/08/2021\n- return 400 instead of 500 when state cookie matching fails\n- release 2.4.6\n\n02/03/2021\n- avoid displaying the client_secret in debug logs\n\n01/28/2021\n- avoid segmentation fault when hitting an endpoint configured with AuthType openid-connect\n  in an OAuth 2.0 only setup; see #529\n\n01/23/2021\n- fix semaphore cleanup on graceful restarts; see #522\n\n01/12/2021\n- fix inconsistent public/private keys loading order; closes #515\n\n12/17/2020\n- remove support for https://tools.ietf.org/html/draft-bradley-oauth-jwt-encoded-state\n\n12/10/2020\n- add \"base64url\" option to OIDCPassClaimsAs primitive; closes #417\n\n12/09/2020\n- add Redis database selection option with OIDCRedisCacheDatabase; closes #423\n- optimize Redis AUTH execution once per connection\n\n12/07/2020\n- don't set SameSite=None on cookies when on plain http\n\n12/03/2020\n- add environment variable to control libcURL CURLOPT_SSL_OPTIONS behaviors\n  e.g.: SetEnvIfExpr true CURLOPT_SSL_OPTIONS=CURLSSLOPT_NO_REVOKE\n\n11/23/2020\n- release 2.4.5\n- make sure the module compiles with Apache 2.2 for passphrase exec:\n- bump to 2.4.6-dev\n\n11/19/2020\n- ensure that \"sub\" is returned from the userinfo endpoint following https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse\n  prevents potential ID spoofing; thanks Christian Fries of Ruhr-University Bochum\n- don't printout JSON errors about NULL characters in error log; thanks Christian Fries of Ruhr-University Bochum\n- restrict printout of JSON parsing errors to 4096 bytes; thanks Christian Fries of Ruhr-University Bochum\n- bump to 2.4.5rc6\n\n11/5/2020\n- fix content processing for info and JWKs handler so mod_headers etc. works; closes #497\n- bump to 2.4.5rc5\n\n11/2/2020\n- improve sanity checking on Redis reply\n- bump to 2.4.5rc4\n\n10/30/2020\n- disable caching token introspection results by setting OIDCOAuthTokenIntrospectionInterval to -1; thanks @wadahiro\n- bump to 2.4.5rc3\n\n10/27/2020\n- config check on OIDCCryptoPassphrase in OAuth 2.0 RS setup with cache encryption enabled\n- bump to 2.4.5rc2\n\n10/22/2020\n- hash define expression option to OIDCUnAuthAction so it compiles for Apache 2.2; fixes 1461634\n- bump to 2.4.5rc1\n- add exec support to OIDCCryptoPassphrase\n \n10/19/2020\n- delete stale session cookies that aren't in the cache\n- allow OIDCDiscoverURL to be a relative URL\n\n10/08/2020\n- add OIDCCABundlePath for configuring path to curl CA bundle\n\n09/22/2020\n- avoid Apache 2.4 appending 401 HTML document text to step-up authentication HTML refresh page; closes #484\n- bump to 2.4.5rc0\n\n09/21/2020\n- populate AUTH_TYPE when performing authentication; thanks @spanglerco\n\n09/19/2020\n- enable authentication of sub-requests when the main request doesn't require\n  authentication; thanks @spanglerco\n\n09/03/2020\n- add SameSite attribute on cookie clearance / logout; thanks @v0gler\n- bump to 2.4.4.1\n\n09/01/2020\n- forward port Tufin patches\n- always set session cookie same site policy to Lax\n- disable cookie domain check\n- unset host headers for metadata URL retrieval\n- bump to 2.4.4-tufin\n\n09/01/2020\n- avoid GCC 9 compiler warnings\n- release 2.4.4\n\n08/28/2020\n- allow Content-Type check on backchannel logout to have postfixes (utf-8 etc)\n- terminate backchannel logout with DONE instead of OK to avoid authz error 500\n- bump to 2.4.4rc8\n\n08/18/2020\n- add recommended cache headers on backchannel logout response\n  https://openid.net/specs/openid-connect-backchannel-1_0.html#rfc.section.2.8\n- bump to 2.4.4rc7\n\n08/10/2020\n- add new OIDCStateCookiePrefix primitive for the state cookie prefix\n\n08/01/2020\n- add conditional expression to OIDCUnAuthAction; see #479; thanks @raro42 and @marcstern\n- bump to 2.4.4rc6\n\n07/31/2020\n- reverse order of creating HTML response and adding session cookie; thanks @deisser\n- bump to 2.4.4rc5\n\n07/30/2020\n- fix doubled Set-Cookie behaviour when using `client-cookie`, calling the session info hook\n  and writing out a session update (twice); thanks @deisser\n- bump to 2.4.4rc4\n\n07/27/2020\n- prevent XSS and open redirect on OIDC session managemement OP iframe with OIDCRedirectURLsAllowed\n  thanks Andrew Brady\n- bump to 2.4.4rc3\n\n07/22/2020\n- delete state cookie when it cannot be decoded/decrypted\n- bump to 2.4.4rc2\n\n07/03/2020\n- fix for loop initial declarations to not require c99 for compilation (RHEL 6)\n- add ap_expr.h include in stub.c (RHEL 6)\n- bump to 2.4.4rc1\n\n06/30/2020\n- add grant_types to dynamic client registration request\n- don't send access_token in user info request when method is set to POST; conform OIDC test suite 4.0.5\n- bump to 2.4.4rc0\n\n06/10/2020\n- prevent open redirect on refresh token requests\n  add new OIDCRedirectURLsAllowed primitive to handle post logout and refresh-return-to validation\n  addresses #453; closes #466\n- release 2.4.3\n\n06/09/2020\n- fix complex expressions crash when compiled from source with libjq; closes #472\n  thanks vincentscharf0803\n  introduced by OIDCStateInputHeaders addition in 2.4.3rc0\n- bump to 2.4.3rc1\n\n05/11/2020\n- added OIDCValidateIssuer to allow for disabling of issuer matching.  helps to support multi-tenant applications.\n\n05/02/2020\n- when stripping cookies, add a space between cookies in the resulting header (required by RFC 6265)\n- move oidc_parse_config inside MODULE_MAGIC_NUMBER_MAJOR to make sure the module compiles with Apache 2.0\n\n04/25/2020\n- add OIDCStateInputHeaders that allows configuring the header values used to calculate the fingerprint of the state during authentication\n- bump to 2.4.3rc0\n\n03/25/2020\n- oops: fix json_deep_copy of claims\n- release 2.4.2.1\n\n03/24/2020\n- fix memory leak in OAuth 2.0 JWT validation; closes #470; thanks Conrad Thukral\n- fix configured private/public key cleanup on process exit\n\n03/21/2020\n- allow for expressions in Require statements, see #469; thanks @wwaaron\n  also see: https://github.com/zmartzone/mod_auth_openidc/wiki/Authorization#expressions-in-require-statements\n- bump to 2.4.2rc5\n\n03/19/2020\n- always refresh keys from jwks_uri when there is no kid in the JWT header\n- bump to 2.4.2rc4\n\n03/15/2020\n- destroy shared memory segments only in parent process; see #458\n- bump to 2.4.2rc3\n\n03/10/2020\n- fix memory leaks introduced by #457\n- bump to 2.4.2rc2\n\n02/19/2020\n- if content was already returned via html/http send then don't return 500\n  but send 200 to avoid extraneous internal error document text to be sent\n  on some Apache 2.4.x versions e.g. CentOS 7\n- bump to 2.4.2rc1\n\n02/03/2020\n- if OIDCPublicKeyFiles contains a certificate, the corresponding x5c, x5t and x5t#256 \n  parameters will be added to the generated jwkset available at \"<redirect_uri>?jwks=rsa\"\n  thanks @absynth76\n- fix: also add SameSite=None to by-value session cookies\n- bump to 2.4.2rc0\n\n01/30/2020\n- try to fix graceful restart crash; see #458\n- release 2.4.1\n\n01/29/2020\n- always add a SameSite value to the Set-Cookie header to satisfy upcoming Chrome/Firefox changes\n  this can be overridden by using, e.g.:\n    SetEnvIf User-Agent \".*IOS.*\" OIDC_SET_COOKIE_APPEND=;\n- release 2.4.1rc6\n\n01/22/2020\n- URL encode logout url in session management JS; thanks Paolo Battino\n- bump to 2.4.1rc5\n\n01/15/2020\n- add value of OIDC_SET_COOKIE_APPEND env var to Set-Cookie headers\n  useful for handling changing/upcoming SameSite behaviors across different browsers, e.g.:\n    SetEnvIf User-Agent \".*IOS.*\" OIDC_SET_COOKIE_APPEND=SameSite=None\n- bump to 2.4.1rc4\n\n01/08/2020\n- support 407 option on OIDCUnAuthAction\n\n12/09/2019\n- fix parsing of values from metadata files when the default is non-NULL (e.g. UNSET)\n- enforce OIDCIDTokenSignedResponseAlg and OIDCUserInfoSignedResponseAlg; see #435\n- bump to 2.4.1rc2\n- support login with OIDC session management; address #456\n- bump to 2.4.1rc3\n\n12/05/2019\n- add the possibility to use a public key instead of a certificate for OIDCPublicKeyFiles parameter\n- added an alpine dockerfile =~ 20MB container size\n\n12/04/2019\n- return 200 OK for backchannel logout if session not found\n- bump to 2.4.1rc1\n\n11/19/2019\n- make cleaning of expired state cookies log with a warning rather than an error; thanks Pavel Drobov\n- bump to 2.4.1rc0\n\n10/03/2019\n- improve validation of the post-logout URL parameter on logout; thanks AIMOTO Norihito; closes #449\n- release 2.4.0.3\n- clear any existing chunked cookies when setting a non-chunked cookie; prevents login loops in some scenarios\n\n08/28/2019\n- fixes #447 #441 : changed storing POST params from localStorage to\n  sessionStorage due to some issue of losing data in localStorage in Firefox\n  (private mode) \n\n08/22/2019\n- release 2.4.0\n\n08/16/2019\n- revert 3d95b4a3fbc493c6acc745626ac33143eb4968bf: don't return early from the content handler\n\n08/15/2019\n- be smart about picking the token endpoint authentication method when not configured explicitly:\n  don't choose the first one published by the OP but prefer client_secret_basic if that is listed as well\n  see: panva/node-oidc-provider#514; thanks @richard-drummond and @panva\n- bump to 2.4.0rc24\n\n08/12/2019\n- fix not clearing claims in session when setting claims to null; closes #445; thanks @FilipVujicic\n\n08/12/2019\n- fix JWT decryption crashing on non-null terminated input\n- bump to 2.4.0rc23\n\n08/09/2019\n- add logout_on_error option to OIDCRefreshAccessTokenBeforeExpiry to kill the session when\n  refreshing an access token fails; thanks @rickyepoderi\n- bump to 2.4.0rc22\n\n08/08/2019\n- no longer use the fixup handler for environment variable setting but do it as part of the authn handler\n- bump to 2.4.0rc21\n\n08/04/2019\n- avoid decoding non-form-encoded POST data; closes #443\n- bump to 2.4.0rc20\n\n08/02/2019\n- return DONE from the content handler early to prevent triggering other content handlers\n- fix `OIDCOAuthAcceptTokenAs post` so POST data is propagated and not lost; see #443\n- bump to 2.4.0rc19\n\n07/10/2019\n- fix RSA JWK \"x5c\" parsing issue (e.g. when parsing \"n\" fails): explicitly set the \"kid\" into to JWK\n- bump to 2.4.0rc18\n\n06/19/2019\n- fix regression bug that includes a HTTP 500 message after rendering content\n- bump to 2.4.0rc17\n\n06/14/2019\n- fix regression bug when no per-provider keys have been configured and private_key_jwt is used\n- bump to 2.4.0rc15\n\n06/06/2019\n- use per-provider signing keys in private_key_jwt authentication towards token endpoint\n- bump to 2.4.0rc14\n\n06/05/2019\n- avoid passing empty key set for JWT decryption (solve but introduced in 2.4.0rc12)\n- bump to 2.4.0rc13\n\n06/03/2019\n- enable per-provider signing and encryption keys; limitations:\n  - for request object signing and id_token decryption only\n  - take the first configured key, no kid specification\n  - no publishing of key information on client endpoints\n  - no userinfo JWT decryption\n  - no composite claims decryption\n  - no backchannel logout with encrypted logout token (inherent)\n- bump to 2.4.0rc12\n\n05/31/2019\n- make sure the content handler is called for every request to the configured Redirect URI so all\n  Apache processing is executed (e.g. setting headers with mod_headers) before returning the response\n  thanks Don Sengpiehl (NB: this may affect browser behavior and backwards compatibility)\n- add ability to view session info in HTML via the session info hook: <redirect_uri)?info=html\n- bump to 2.4.0rc11\n\n05/24/2019\n- fix oidc_proto_html_post auto-post-submit so it no longer results in duplicate parentheses\n  closes #440; thanks @gobreak\n- bump to 2.4.0rc10\n\n05/21/2019\n- log the original URL for expired state cookies, useful for debugging SPA/JS issues\n\n05/17/2019\n- allow removing an access token from the cache (\"remove_at_cache\") when running in OAuth 2.0 RS mode only\n- support refresh and access tokens revocation from an RFC 7009 endpoint upon OIDC session logout\n- bump to 2.4.0rc9\n\n05/03/2019\n- fix (cached) parsing of OIDCOAuthServerMetadataURL; thanks Lance Fannin\n- bump to 2.4.0rc5\n\n05/02/2019\n- correct caching for OIDCOAuthServerMetadataURL\n- bump to 2.4.0rc4\n\n04/21/2019\n- remove option to skip scrubbing request headers (thus avoiding potentionally insecure setups)\n- bump to 2.4.0rc3\n\n04/19/2019\n- add USE_URANDOM compile time option to use /dev/urandom explicitly for non-blocking random number generation\n  configure with APXS2_OPTS=\"-DUSE_URANDOM\"\n- bump to 2.4.0rc2\n\n04/15/2019\n- add debug logs in oidc_proto_generate_random_string\n- URL-encode client_id/client_secret when using client_secret_basic according to: https://tools.ietf.org/html/rfc6749#section-2.3.1\n- bump to 2.4.0rc1\n\n04/09/2019\n- deprecate the OAuth 2.0 Resource Server functionality\n- bump to 2.4.0rc0\n\n03/13/2019\n- release 2.3.11\n\n02/26/2019\n- add session expiry to session info hook response (and change inactivity timeout key)\n- bump to 2.3.11rc2\n\n02/25/2019\n- add option to dynamically pass query parameters to the authorization request; closes #401\n- bump to 2.3.11rc1\n\n01/31/2019\n- support conditional compilation of memcache support\n- bump to 2.3.11rc0\n\n01/22/2019\n- fix XSS vulnerability CSNC-2019-001 wrt. poll parameter in OIDC Session Management RP iframe; thanks Mischa Bachmann\n- release 2.3.10.2\n\n01/16/2019\n- fix bug in current URL detection where query parameters would be duplicated; see #420; thanks @jreynaert\n- release 2.3.10.1\n\n12/31/2018\n- fix warning printout in oidc_delete_oldest_state_cookies\n- release 2.3.10\n\n12/16/2018\n- fix encryption buffer tag length mismatch\n\n12/06/2018\n- retain the unparsed URL path in current/original URL determination, and thereby preserve\n  and support URL-encoded characters in paths when redirecting back to the original URL\n- add state to code exchange token requests only in multi-provider setups; see #402\n- optionally delete the oldest state cookie(s); see #399\n- bump to 2.3.10rc3\n\n11/29/2018\n- add support for refreshing an access token associated with an OIDC session using OIDCRefreshAccessTokenBeforeExpiry\n- bump to 2.3.10rc0\n\n11/15/2018\n- release 2.3.9\n\n11/13/2018\n- fix parsing of cookie name in OIDCOAuthAcceptTokenAs when the cookie option is not listed last \n- bump to 2.3.9rc7\n\n11/12/2018\n- fix OAuth 2.0 RS config check when OIDCOAuthServerMetadataURL is set; thanks @psteniusubi\n- bump to 2.3.9rc6\n\n10/24/2018\n- add support for draft https://www.ietf.org/id/draft-ietf-oauth-mtls-12.txt:\n  OAuth 2.0 Mutual TLS Client Certificate Bound Access Tokens\n  when running as an OAuth 2.0 RS, validating cnf[\"x5t#S256\"] claims.\n- bump to 2.3.9rc5\n\n10/17/2018\n- ignore/trim spaces in X-Forwarded-* headers\n- deal with forwarding proxy setups; see #395 ; thanks @archzone\n- bump to 2.3.9rc4\n\n10/02/2018\n- improve OIDC backchannel logout based on config/Discover\n  - add OIDCProviderBackChannelLogoutSupported config primitive\n  - parse/interpret `backchannel_logout_supported` in Discovery document\n- add `id_token_token_binding_cnf`: `tbh` to dynamic client registration metadata\n- bump to 2.3.9rc3\n\n10/01/2018\n- support backchannel logout according to: https://openid.net/specs/openid-connect-backchannel-1_0.html\n- bump to 2.3.9rc2\n\n10/01/2018\n- add test-cmd command to generate hashes base64urlencoded inputs (cnf/tbh claims)\n\n09/30/2018\n- support Token Binding for Access Tokens according to: https://tools.ietf.org/html/draft-ietf-oauth-token-binding\n- bump to 2.3.9rc1\n\n09/16/2018\n- support nested arrays in Require claim authorization evaluation; see #392; thanks @hpbieker\n- bump to 2.3.9rc0\n\n09/12/2018\n- fix return result FALSE when JWT payload parsing fails; see #389; thanks @amdonov\n- release 2.3.8\n\n08/30/2018\n- add LGTM code quality badges, see #385; thanks @xcorail\n- fix 3 LGTM alerts\n\n08/23/2018\n- improve auto-detection of XMLHttpRequests via Accept header; see #331\n- bump to 2.3.8rc5\n\n08/15/2018\n- initialize test_proto_authorization_request properly; see #382; thanks @jdennis\n- add sanity check on provider->auth_request_method; closes #382; thanks @jdennis\n- bump to 2.3.8rc4\n\n08/14/2018\n- allow usage with LibreSSL; closes #380; thanks @hihellobolke\n- bump to 2.3.8rc3\n\n08/04/2018\n- don't return content with 503 since it will turn the HTTP status code into a 200; see #331\n- bump to 2.3.8rc2\n\n08/03/2018\n- add option to set an upper limit to the number of concurrent state cookies via OIDCStateMaxNumberOfCookies; see #331\n- make the default maximum number of parallel state cookies 7 instead of unlimited; see #331\n- bump to 2.3.8rc1\n\n07/30/2018\n- fix using access token as endpoint auth method in introspection calls; closes #377; thanks @skauffmann\n\n07/25/2018\n- fix reading access_token form POST parameters when combined with `AuthType auth-openidc`; see #376; thanks Nicolas Salerno\n- bump to 2.3.8rc0\n\n07/06/2018\n- abort when string length for remote user name substitution is larger than 255 characters\n- release 2.3.7\n\n07/04/2018\n- fix Redis concurrency issue when used with multiple vhosts\n- bump to 2.3.7rc4 and 2.3.7rc5\n\n06/29/2018\n- add support for authorization server metadata with OIDCOAuthServerMetadataURL as in RFC 8414\n- bump to 2.3.7rc3\n\n06/23/2018\n- refactor session object creation\n- bump to 2.3.7rc2\n\n06/22/2018\n- clear session cookie and contents if cache corruption is detected\n- bump to 2.3.7rc0\n- use apr_pstrdup when setting r->user\n- reserve 255 characters in remote username substition instead of 50\n- bump to 2.3.7rc1\n\n06/15/2018\n- add check to detect session cache corruption for server-based caches and cached static metadata\n- release 2.3.6\n\n05/29/2018\n- avoid using pipelining for Redis\n- bump to 2.3.6rc4\n\n05/28/2018\n- send Basic header in OAuth www-authenticate response if that's the only accepted method; thanks @puiterwijk\n\n05/28/2018\n- refactor Redis cache backend to solve issues on AUTH errors: a) memory leak and b) redisGetReply lagging behind\n- adjust copyright year/org\n- bump to 2.3.6rc3\n\n05/23/2018\n- fix buffer overflow in shm cache key set strcpy; thanks @kyprizel\n- bump to 2.3.6rc2\n\n05/22/2018\n- turn missing session_state from warning into a debug statement\n- fix missing \"return\" on error return from the OP; see #345; thanks @gergan\n- bump to 2.3.6rc1\n\n05/19/2018\n- explicitly set encryption kid so we're compatible with cjose >= 0.6.0\n- bump to 2.3.6rc0\n\n05/18/2018\n- fix encoding of preserved POST data; see #338; thanks @timpuri\n- avoid buffer overflow in shm cache key construction; thanks @kyprizel\n- release 2.3.5\n\n05/08/2018\n- compile with with Libressl; closes #358; thanks @hihellobolke\n- bump to 2.3.5rc0\n\n04/27/2018\n- avoid crash when a relative logout URL parameter is passed in; thanks Vivien Delenne \n- release 2.3.4\n\n03/22/2018\n- interpret X-Forwarded-Host when doing XSRF protection on the after-logout URL; see #341; thanks @pepe79\n- bump to 2.3.4rc4\n\n02/06/2018\n- add support for passing an access token in a HTTP Basic authentication password; thanks @puiterwijk\n- bump to 2.3.4rc3\n\n01/26/2018\n- send session management Javascript logging to debug; thanks @kerrermanisNL\n\n01/25/2018\n- add Cache-Control no-cache header to authorization requests to avoid replays of state/nonce; see #321\n- bump to 2.3.4rc2\n\n01/23/2018\n- add explicit endpoint authentication method \"bearer_access_token\"\n\n12/29/2017\n- correct documentation on kid usage for OIDCOAuthVerifyCertFiles; closes #318\n\n12/21/2017\n- fix compiler warnings for OpenSSL 1.1.x\n- bump to 2.3.4rc1\n\n11/21/2017\n- fix bug where endpoint authentication method \"private_key_jwt\" would not co-exist with \"none\"\n- bump to 2.3.4rc0\n\n11/16/2017\n- add support for passing userinfo as a JSON object or JWT; see #311\n- release 2.3.3\n\n11/13/2017\n- add support for authentication to the introspection endpoint with a bearer token using OIDCOAuthIntrospectionClientAuthBearerToken; thanks @cristichiru\n- bump to 2.3.3rc3\n\n11/08/2017\n- address a number of static code analysis issues\n- bump to 2.3.3rc2\n\n10/10/2017\n- avoid crash when no scheme is set on OIDCProviderMetadataURL; closes #303; thanks @iconoeugen\n- bump to 2.3.3rc1\n\n10/6/2017\n- avoid crash when no OIDCOAuthClientID is set for remote access token validation\n- don't enforce \"iat\" slack checks on locally validaed JWT access tokens\n- bump to 2.3.3rc0\n\n09/18/2017\n- release 2.3.2\n\n09/11/2017\n- fix \"graceful\" restart for shm/redis cache backends; see #296\n- bump to 2.3.2rc8\n\n09/05/2017\n- optionally remove request object parameters from the authorization request URL with \"copy_and_remove_from_request\"; see #294\n- bump to 2.3.2rc7\n\n08/29/2017\n- properly support JSON boolean values in metadata .conf files\n- add regex substitution for *RemoteUserClaim; thanks @hihellobolke\n- bump to 2.3.2rc6\n\n08/27/2017\n- add issuer specific redirect URI option (\"issuer_specific_redirect_uri\") for multi-provider setups to mitigate IDP mixup\n- bump to 2.3.2rc5\n\n08/20/2017\n- fix public clients; add endpoint authentication method \"none\"\n- bump to 2.3.2rc4\n\n08/02/2017\n- update experimental token binding support to https://tools.ietf.org/html/draft-ietf-tokbind-ttrp-01\n  and use header names prefixed with \"Sec-\"; depends on mod_token_binding >= 0.3.4 now\n- bump to 2.3.2rc3\n\n08/01/2017\n- don't abort when mutex operations fail\n- printout textual descriptions of errors returned by mutex operations\n- bump to 2.3.2rc2\n\n07/28/2017\n- fix issue with the combination of shared memory (shm) cache and using encryption (OIDCCacheEncrypt On)\n  where the cache value would be corrupted after the first (successful) retrieval\n- bump to 2.3.2rc1\n\n07/27/2017\n- support paths that are relative to the Apache root dir for:\n  OIDCHTMLErrorTemplate, OIDCPublicKeyFiles, OIDCPrivateKeyFiles,\n  OIDCOAuthVerifyCertFiles, OIDCClientTokenEndpointCert, OIDCClientTokenEndpointKey,\n  OIDCOAuthIntrospectionEndpointCert and OIDCOAuthIntrospectionEndpointKey\n- bump to 2.3.2rc0\n\n07/19/2017\n- handle multiple values in X-Forwarded-* headers as to better support chains of reverse proxies in front of mod_auth_openidc\n- log request headers in oidc_util_hdr_in_get\n- release 2.3.1\n\n07/13/2017\n- remove A128GCM/A192GCM from the supported algorithms in docs/auth_openidc.conf\n  because cjose doesn't support A128GCM and A192GCM (yet)\n- bump to 2.3.1rc5\n\n07/09/2017\n- refactor oidc_get_current_url_port so that it assumes the default port when\n  X-Forwarded-Proto has been set; closes #282 and may address #278\n- bump to 2.3.1rc4\n\n07/07/2017\n- use the defined name (`Provided-Token-Binding-ID`) for the provided token binding ID HTTP header\n  see: https://tools.ietf.org/html/draft-campbell-tokbind-ttrp-00#section-2.1\n  depends on mod_token_binding >= 0.3.0 now\n- bump to 2.3.1rc3\n\n06/29/2017\n- support sending the authentication request via HTTP POST through HTML/Javascript autosubmit\n- bump to 2.3.1rc2\n\n06/28/2017\n- support private_key_jwt and client_secret_jwt as client authentication methods for token introspection\n- bump to 2.3.1rc1\n\n06/22/2017\n- fix bug where token_endpoint_auth set to private_key_jwt would fail to provide the credential if client_secret wasn't set\n- bump to 2.3.1rc0\n\n06/13/2017\n- release 2.3.0\n\n06/07/2017\n- fix file cache backend: allow caching of non-filename friendly keys such as configuration URLs and JWKs URIs\n- enable JQ-based claims expression matching when compiled from source with --with-jq=<dir>, e.g.:\n  Require claims_expr '.aud == \"ac_oic_client\" and (.scope | index(\"profile\") != null)'\n- normalize cache backend logging\n- bump to 2.3.0rc3\n\n06/06/2017\n- avoid cleaning our own state cookie twice when it is expired\n- bump to 2.3.0rc2\n\n06/02/2017\n- refactor remote user handling so it allows for postfixing with the issuer value after applying the regex\n- bump to 2.3.0rc1\n\n05/31/2017\n- add support for custom actions to take after authorization fails with OIDCUnAutzAction\n  this enables stepup authentication scenarios when combined with the following:\n- add OIDCPathAuthRequestParams that is configurable on a per-path basis and use OIDCAuthRequestParams for the static per-provider value\n- add OIDCPathScope that is configurable on a per-path basis and concatenate with OIDCScope as static per-provider value\n- support 3rd-party-init-SSO with additional authentication request params when a single static provider has been configured\n- add support for an empty OIDCClaimPrefix; can be used with OIDCWhiteListedClaims to protect selected headers\n- bump to 2.3.0rc0\n\n05/30/2017\n- support sending Authorization Request as \"request\" object in addition to \"request_uri\"; thanks @suttod\n- support nested claim matching in Require directives; thanks @suttod\n- support explicitly setting the \"kid\" of the private key in OIDCPrivateKeyFiles; thanks @suttod\n\n05/25/2017\n- fix cache fallback so it happens (when enabled) only after failure\n\n05/19/2017\n- make OIDCStripCookies work on AuthType oauth20 paths; closes #273; thanks Michele Danieli\n- bump to 2.2.1rc6\n\n05/18/2017\n- fix parse function of OIDCRequestObject configuration option; thanks @suttod \n\n05/17/2017\n- avoid crash when the X-Forwarded-Proto header is not correctly set by a reverse proxy in front of mod_auth_openidc\n\n05/14/2017\n- support JWT verification against multiple keys with no provided kid by looping over the provided keys with cjose 0.5.0\n- remove OIDC RP certification files; moved to separate repository\n\n05/04/2017\n- improve documentation for OIDCCryptoPassphrase; closes #268\n\n04/30/2017\n- fix wrong return value for cache_file_set in the file cache backend (OIDCCacheType file); thanks Ernani Joppert Pontes Martins\n- bump to 2.2.1rc5\n\n04/29/2017\n- correctly log success/failure in cache_file_set\n- avoid decoding a JSON object and logging an error when the input is NULL\n  e.g. when claims have not been resolved because userinfo endpoint is not set\n\n04/20/2017\n- support relative RedirectURIs; closes #200; thanks @moschlar\n- don't assume that having OIDCCryptPassphrase set means we should validate the config for\n  openid-connect since it can now also be used to encrypt (auth20) cache entries\n- bump to 2.2.1rc4\n\n04/08/2017\n- fix potential crash on prefork process exit when used with Redis cache backend (3x)\n- bump to 2.2.1rc3\n\n04/06/2017\n- change warn log about missing token binding ID to debug log\n\n04/05/2017\n- allow for high session inactivity timeout max value\n- improve error message in oidc_util_http_send when ap_pass_brigade fails and mention possible interference with mod_deflate\n- bump to 2.2.1rc0\n\n03/30/2017\n- merge feature branch back to master:\n  - better support for Single Page Applications, see:\n    https://github.com/zmartzone/mod_auth_openidc/wiki/Single-Page-Applications\n    - add session info hook that is configurable through OIDCInfoHook\n    - add \"AuthType auth-openidc\" option that allows both \"oauth20\" and \"openid-connect\" on the same path\n  - add encryption for all cache entries instead of just session data through OIDCCacheEncrypt\n  - add cookie SameSite flag/policy through OIDCCookieSameSite\n  - return HTTP 200 on OPTIONS requests to (unauthenticated) \"oauth20\" paths\n  - add fallback to a by-value session cookie if the primary session cache fails with OIDCSessionCacheFallbackToCookie\n  - add support for black- and/or white-listing claims with OIDCBlackListedClaims and OIDCWhiteListedClaims\n  - add prototype token binding support in conjunction with:\n    https://github.com/zmartzone/mod_token_binding:\n    - for state & session cookies, see:\n      https://github.com/TokenBinding/Internet-Drafts\n    - for ID tokens with OpenID Connect Token Bound Authentication support, see:\n      http://openid.net/specs/openid-connect-token-bound-authentication-1_0.html\n    - for Authorization Codes with OAuth 2.0 Token Binding for Authorization Codes, see:\n       https://tools.ietf.org/html/draft-ietf-oauth-token-binding\n  - refactoring:\n    - refactor session state, proto state and headers into getters/setters functions\n    - refactor PKCE support\n  - fix removing session state from cache on logout\n  - fix clearing chunked session cookies on logout; closes #246; thanks @Jharmuth\n- release 2.2.0\n\n02/20/2017\n- security fix: scrub headers for \"AuthType oauth20\"\n- release 2.1.6 \n\n02/15/2017\n- improve logging of session max duration and session inactivity timeout\n- refactor so that the call to the refresh hook also resets the session inactivity timeout and passes tokens down\n\n02/14/2017\n- treat only \"X-Requested-With: XMLHttpRequest\" header as a non-browser client; closes #228 ; thanks @mguillem\n- improve error message on state timeout; closes #226; thanks @security4java\n\n02/09/2017\n- correctly parse \"kid\" in OIDCPublicKeyFiles and OIDCOAuthVerifyCertFiles; thanks Alessandro Papacci\n- bump to 2.1.6rc2\n\n02/07/2017\n- fix parsing of mandatory/optional attribute in OIDCOAuthTokenExpiryClaim; closes #225; thanks Alessandro Papacci\n- bump to 2.1.6rc1\n\n02/06/2017\n- improve logging around the availability of session management; closes #223\n\n02/02/2017\n- interpret OIDCUnAuthAction also when the maximum session duration has been exceeded; see #220\n- bump to 2.1.6rc0\n\n01/30/2017\n- security fix: scrub headers when `OIDCUnAuthAction pass` is used for an unauthenticated user\n- release 2.1.5\n\n01/29/2017\n- fix error message about passing id_token with session type client-cookie; mentioned in #220\n- bump to 2.1.5rc0\n\n01/25/2017\n- release 2.1.4\n\n01/18/2017\n- don't echo the query parameters on the error page when an invalid request is made to the Redirect URI; closes #212; thanks @LukasReschke\n\n01/14/2017\n- use dynamic memory buffer for writing HTTP call responses; solves curl/mpm-event interference; see #207\n- bump to 2.1.4rc1\n\n01/10/2017\n- don't crash when data is POST-ed to the redirect URL, it has just 1 POST parameter and it is not \"response_mode\"\n\n01/2/2017\n- remove trailing linebreaks from input in test-cmd tool\n- bump copyright year to 2017\n\n12/14/2016\n- support Libre SSL, see #205, thanks @AliceWonderMiscreations\n- update OIDC logout support to Front-Channel Logout 1.0 draft 01: http://openid.net/specs/openid-connect-frontchannel-1_0.html\n- bump to 2.1.4rc0\n\n12/13/2016\n- release 2.1.3\n\n12/12/2016\n- don't rollover session id's and keep the same session cookie name for cache storage over session updates\n- bump to 2.1.3rc0\n\n11/19/2016\n- release 2.1.2\n\n11/18/2016\n- fix crash when searching for keys with a kid, there's no initial match and x5t values exist for the non-matching keys; closes #196\n\n11/9/2016\n- remove stale claims from session when refreshing them from the userinfo endpoint fails; addresses #194\n- release 2.1.1\n\n11/8/2016\n- log readable error messages when memcache operations fail\n\n11/6/2016\n- fix memory leak when skipping jwks_uri keys with a non-matching \"use\" value\n\n11/4/2016\n- always restore id_token/claims on sub-requests so e.g. listing claims-protected subdirectories will work\n- remove obsolete functions for storing the session in the request state\n- bump to 2.1.1rc0\n\n11/3/2016\n- remove obsolete sessions from session cache; thanks @stevedave\n\n11/1/2016\n- release version 2.1.0\n\n10/28/2016\n- don't include encryption keys from the jwks_uri when verifying a JWT and no kid has been specified\n- fix memory leaks in composite claim handling\n\n10/27/2016\n- handle aggregated and distributed claims from the userinfo endpoint\n- only pick private_key_jwt token endpoint authentication if a private key is configured; closes #189\n- bump to 2.0.1rc7\n\n10/24/2016\n- add OpenID Connect RP certification test script\n- handle non-integer exp/iat timestamps; closes #187; thanks @drdivano\n\n10/21/2016\n- bugfix: first truncate files before writing them\n- support refreshing provider metadata based on timestamp and OIDCProviderMetadataRefreshInterval\n\n10/20/2016\n- bugfix: correctly truncate encryption keys derived from client secret for algorithms that require a key size < 256 bits\n- add test/test-cmd tool\n- bugfix: return error on session cache failures; closes #185; thanks @solsson\n- bump to 2.0.1rc6\n\n10/18/2016\n- bugfix: JWTs with a header that doesn't specify a `kid` that would not validate when used with more than 1 key; closes #184; thanks @solsson\n- bump to 2.0.1rc5\n\n10/13/2016\n- urlencode provider URL cache key to fix file cache backend issue; closes #179, thanks @djahandarie\n\n10/9/2016\n- fix null pointer segfault in debug printout in oidc_util_read_form_encoded_params\n- fix OIDCOAuthAcceptTokenAs parsing flaw introduced in 2.0.0rc5\n- bump to 2.0.1rc4\n\n10/2/2016\n- support presenting the access token to the userinfo endpoint in a POST parameter\n- bump to 2.0.1rc3\n\n9/30/2016\n- support WebFinger Discovery with URL-style user identifiers\n\n9/28/2016\n- fix memory leak in oidc_jwk_to_json\n- add \"remove_at_cache\" hook; addresses #177\n- bump to 2.0.1rc2\n\n9/27/2016\n- add support for Request URI with signed and/or encrypted Request Objects\n- bump to 2.0.1rc1\n\n9/22/2016\n- refuse webfinger responses with an href value that is not on secure https\n- add userinfo JWT response verification and decryption\n\n9/20/2016\n- log the JWT header before optional decryption is applied\n\n9/19/2016\n- check that a sub claim returned from the userinfo endpoint matches the one in the id_token\n- fix issue in oidc_metadata_parse_url so that static default would not be honored\n  - this only affected server-wide OIDCClientJwksUri usage in dynamic client registration\n- non-functional changes for OIDC RP certification:\n  - explicitly log the client authentication method when calling the token endpoint\n  - log the keys that are included for token verification\n- bump to 2.0.1rc0\n\n9/9/2016\n- fix overriding provider token endpoint auth with static config when not set in .conf file\n- don't add our own cookies to the incoming headers\n- allow stripping cookies from the Cookie header sent to the application/backend with OIDCStripCookies\n- release 2.0.0\n\n9/5/2016\n- encapsulate (sub-)directory config handling and fix merging so values can be set back to default values in subdirs\n- bump to 2.0.0rc5\n\n9/2/2016\n- fix JWK creation when no client secret is set e.g. in Implicit flows; closes #168; thanks @asc1\n- bump to 2.0.0rc4\n\n9/1/2016\n- fix HTML decoding of OIDCPreservePost data; closes #165\n- limit max POST data size to 1Mb\n- allow chunked data in POST handling; revise handler\n- change preserve POST JSON data format to urlencoded for performance reasons\n\n8/31/2016\n- allow setting the token endpoint authentication method in the .conf file (for dynamic client registration that sets the .client)\n\n8/30/2016\n- pass refresh token in header/environment variable with OIDCPassRefreshToken; thanks Amit Joshi\n- fix front-channel img-style logout with newer versions of PingFederate that don't send an Accept: image/png header\n\n8/29/2016\n- preserve POST data across authentication requests and discovery with OIDCPreservePost\n- bump to 2.0.0rc3\n\n8/24/2016\n- fix parsing of OIDCOAuthAcceptTokenAs to accept options following \":\"\n- bump to 2.0.0rc2\n\n8/5/2016\n- delete the debian directory\n- rename OIDCOAuthTokenEndpointCert/Key to OIDCOAuthIntrospectionEndpointCert/Key\n- pre-release 2.0.0rc1\n\n7/30/2016\n- encrypt state/session JWT cookies and session JWT cache values for non-shm storages\n\n7/29/2016\n- use cjose - https://github.com/cisco/cjose (master) - for JOSE functions\n- use stricter input parsing functions for configuration values\n- bump to 2.0.0rc0\n\n7/21/2016\n- support TLS client authentication to token and introspection endpoints\n- bump to 1.9.0rc3\n\n7/19/2016\n- add support for chunked session cookies; closes #153; thanks @glatzert \n- bump to 1.9.0rc2\n\n7/9/2016\n- fix Elliptic Curve signature verification for corrupted input\n- support OpenSSL 1.1.x\n- bump to 1.9.0rc1\n\n7/5/2016\n- use AUTHZ_DENIED instead of HTTP_UNAUTHORIZED in oidc_authz_checker; closes #151; thanks @gwollman\n- use signed JWTs for state/session cookies\n- achieve smaller client-cookie sizes for regular cases; no id_token is stored in the session:\n  - (optional) id_token_hint no longer available in session management calls (logout/prompt=none) with \"OIDCSessionType client-cookie\"\n  - \"OIDCPassIDTokenAs serialized\" is not available with \"OIDCSessionType client-cookie\"\n- bump to 1.9.0rc0\n\n6/27/2016\n- use EVP_CIPHER_CTX_new to avoid compilation errors with OpenSSL 1.1.0\n- release 1.8.10\n\n6/22/2016\n- don't use local port setting for current URL determination when X-Forwarded-Host has been set\n- bump to 1.8.10rc4\n\n6/20/2016\n- fix memory leak in OAuth access token introspection result caching (introduced only in 1.8.10rc0)\n- fix setting private_key_jwt or client_secret_jwt with OIDCProviderTokenEndpointAuth\n- bump to 1.8.10rc3\n\n6/19/2016\n- allow setting OIDCRemoteUserClaim with values obtained from the userinfo endpoint; thanks @steve-dave\n- fix OIDCUnAuthAction pass mode for Apache 2.4 and in case `Require claim` primitives used for 2.4 and 2.2; thanks @steve-dave\n- bump to 1.8.10rc2\n\n6/15/2016\n- add support for JWT based client authentication to the token endpoint (client_secret_jwt, private_key_jwt)\n- bump to 1.8.10rc1\n\n6/9/2016\n- add per-path configurable token introspection result cache expiry with OIDCOAuthTokenIntrospectionInterval\n- bump to 1.8.10rc0\n\n6/5/2016\n- release 1.8.9\n\n5/9/2016\n- support 410 option on OIDCUnAuthAction; closes #141\n- bump to 1.8.9rc6\n\n5/1/2016\n- avoid segmentation fault on invalid OIDC configuration when OIDCRedirectURI is not set; fixes #138; thanks @brianwcook\n- bump to 1.8.9rc5\n\n4/18/2016\n- fix get_current_url (proxy) case where r->parsed_uri.path would be null\n\n4/13/2016\n- improve X-Forwarded-Host handling over Host in a) port detection and b) remove port from host value\n- bump to 1.8.9rc4\n\n4/10/2016\n- do not require OIDCClientSecret in configs; allows for Implicit grant without setting a dummy client secret; closes #130\n- allow for public clients calling the token endpoint\n- bump to 1.8.9rc3\n\n4/9/2016\n- ensure that claims from id_token are available for authz also when OIDCPassIDTokenAs does not contain \"claims\"; closes #129\n- bump to 1.8.9rc2\n\n4/3/2016\n- return WWW-Authenticate header and error messages on OAuth paths where access is not granted; closes #124; thanks @spinto\n- bump to 1.8.9rc1\n\n4/1/2016\n- apr_jwe_decrypt_content_aesgcm() null terminate string, #128, thanks @jdennis\n- bump to 1.8.9rc0\n\n3/10/2016\n- release 1.8.8\n\n3/7/2016\n- issue a warning if the \"openid\" scope is not requested\n\n3/6/2016\n- sanitize the OIDCAuthNHeader value before setting the header; thanks @rfk\n- bump to 1.8.8rc7\n\n3/5/2016\n- log exact version of OpenSSL and EC/GCM/Redis support\n- tidy up auth_openidc.conf docs\n- bump to 1.8.8rc6\n\n2/26/2016\n- add option to refresh claims from the userinfo endpoint using OIDCUserInfoRefreshInterval; see #119\n- merge id_token claims in to the set of claims used for authorization for Apache >=2.4; see #120\n- bump to 1.8.8rc5\n\n2/23/2016\n- make state cookie a session cookie and clean expired cookies on entry (merge of fix-firefox-cookie-storage)\n- fix HTML error template initialization in vhosts\n- bump to 1.8.8rc4\n\n2/22/2016\n- don't authenticate (redirect/state) when X-Requested-With header exists; as suggested in #113\n- bump to 1.8.8rc3\n\n2/18/2016\n- pass plain state to the token endpoint on code flows: https://tools.ietf.org/html/draft-jones-oauth-mix-up-mitigation-01\n- fix loose (prefix-only) matching of cookie names\n- allow passing OAuth bearer token as a cookie (OIDCOAuthAcceptTokenAs extension for PingAccess)\n- bump to 1.8.8rc2\n\n2/11/2016\n- include token_endpoint_auth_method in dynamic client registration request, set to selected method from provider\n\n2/10/2016\n- Elliptic Curve support now requires OpenSSL 1.0.1 detection\n- bump to 1.8.8rc1\n\n1/14/2016\n- add support for passing in OAuth bearer tokens as one or more of: header, post param or query param (OIDCOAuthAcceptTokenAs)\n- bump to 1.8.8rc0\n\n1/8/2016\n- release 1.8.7\n\n1/7/2016\n- update copyright year\n\n12/17/2015\n- enforce strict matching of issuer in Discovery document against the originally requested issuer\n- check iss/client_id if present in an authentication response\n- push a hash of state to the token endpoint on code flows\n- bump to 1.8.7rc4\n\n12/9/2015\n- improve debug logging around session management capabilities (i.e. enabled/disabled)\n- return 404 for op/rp iframes if session management is not enabled\n- bump to 1.8.7rc3\n\n12/4/2015\n- add support for RFC 7636 PKCE plain & S256 https://tools.ietf.org/html/rfc7636\n- bump to 1.8.7rc2\n\n12/3/2015\n- fix crash when using a custom error template and the error description is NULL\n- fix crash when target_link_uri is not a valid URI or parts are empty\n- fix memory corruption when using custom html template across different server requests; closes #106\n- bump to 1.8.7rc1\n\n11/18/2015\n- fix compiler warning on double sizeof call; close #103; thanks to @dcb314\n- bump to 1.8.7rc0\n\n10/26/2015\n- add option to make session cookie persistent; closes #97\n- release 1.8.6\n\n10/19/2015\n- add support for applying a custom HTML error template with OIDCHTMLErrorTemplate\n- bump to 1.8.6rc3\n\n10/12/2015\n- check the cookie domain that the session was created for against the configured domain\n- log a warning if the Set-Cookie value length is greater than 4093 bytes\n- include and prioritize the X-Forwarded-Host header in hostname determination\n- allow for missing Host header i.e. HTTP 1.0\n- return DONE instead of HTTP_UNAUTHORIZED with Discovery page (prevent double HTML in HTTP 1.0)\n- use apr_strnatcmp instead of strcmp in util.c and mod_auth_openidc.c\n- bump to 1.8.6rc2\n\n10/9/2015\n- support subdomain cookies in OIDCCookieDomain checks; PR #96, thanks @pfiled\n- bump to 1.8.6rc1\n\n10/6/2015\n- add key identifier (\"kid\") option to `OIDCOAuthVerifySharedKeys`, `OIDCOAuthVerifyCertFiles` and `OIDCPublicKeyFiles` configs\n- bump to 1.8.6rc0\n\n9/21/2015\n- support (non-sid-based) HTTP logout: http://openid.net/specs/openid-connect-logout-1_0.html\n- release 1.8.5\n\n9/16/2015\n- improve logging on provider/client/conf metadata parsing failures; closes #94\n- bump to 1.8.5rc7\n\n9/9/2015\n- fix parsing of OIDCOAuthTokenExpiryClaim, thanks to @bester #90\n- bump to 1.8.5rc6\n\n9/4/2015\n- add CSRF protection to external Discovery as well\n- allow browser back after authorization response, see #89\n- handle invalid (expired) authorization response state by sending the user to OIDCDefaultURL, see #86\n- bump to 1.8.5rc5\n\n8/26/2015\n- add CSRF protection to Discovery\n- bump to 1.8.5rc4\n\n8/19/2015\n- support encrypted JWTs using A192KW for key encryption and A192CBC-HS384 for content encryption\n- bump to 1.8.5rc3\n\n8/15/2015\n- support encrypted JWTs using RSA-OAEP for key encryption and A128GCM,A192GCM,A256GCM for content encryption\n- bump to 1.8.5rc2\n\n8/4/2015\n- support for OIDCUnAuthAction: how to act on unauthenticated requests (OIDCReturn401 is deprecated)\n- bump to 1.8.5rc1\n\n7/15/2015\n- add authentication option for Redis server with OIDCRedisCachePassword\n- bump to 1.8.5rc0\n\n7/3/2015\n- allow for compilation on Windows using VS 2013\n- bump to 1.8.4\n\n6/30/2015\n- improve memcache logging: don't report cache misses as an error, thanks to @scottdear\n- work around JSON timestamp print modifier issue (%lld) on some platforms, thanks to @ralphvanetten\n- bump to 1.8.4rc3\n\n6/24/2015\n- support passing claims as environment variables (OIDCPassClaimsAs)\n- bump to 1.8.4rc1\n\n6/22/2015\n- correct debug printout in oidc_util_read_form_encoded_params\n\n6/20/2015\n- avoid double free of JWT after parsing errors have been encountered\n- bump to 1.8.4rc0\n\n6/19/2015\n- make public keys for encrypted access tokens available in OAuth-only configurations; fixes #74\n- remove exceptions for accounts.google.com since Google is OpenID Connect compliant now\n- release 1.8.3\n\n6/15/2015\n- add a complete JWT sample that includes validation of \"exp\" and \"iat\" to the test suite\n\n6/10/2015\n- allow JSON string values for the \"active\" claim in access token validation responses\n- bump to 1.8.3rc4\n\n6/7/2015\n- improve error logging on non-supported JWT signing/encryption algorithms\n- bump to 1.8.3rc3\n\n5/31/2015\n- merge id_token (\"iss\"!) and user info claims for authz processing\n- bump to 1.8.3rc2\n\n5/29/2015\n- fix hash comparison when padded, thanks to @steverc as mentioned in #65\n- fix post-logout URL being set to SSO URL\n- add post-logout URL validation, thanks to @davidbernick\n- bump to 1.8.3rc1\n\n5/18/2015\n- fix OpenSSL version detection for Elliptic Curve support in apr_jwt_signature_to_jwk_type: include opensslv.h\n- fix hash length calculation for Elliptic Curve algorithms\n- release 1.8.2\n\n5/5/2015\n- release 1.8.1\n\n4/21/2015\n- allow setting OIDCDiscoverURL inside of Directory and Location directives as well\n- bump to 1.8.1rc5\n\n4/20/2015\n- allow setting OIDCCookie outside of Directory and Location directives as well\n- bump to 1.8.1rc4\n\n4/17/2015\n- add support for applying regular expressions to OIDCRemoteUserClaim and OIDCOAuthRemoteUserClaim\n- bump to 1.8.1rc3\n\n4/12/2015\n- make token expiry parsing of introspection result configurable (OIDCOAuthTokenExpiryClaim)\n- increase SHM cache key size from 255 to 512 (allows for JWT access tokens cache keys for introspection result)\n- bump to 1.8.1rc2\n\n4/1/2015\n- avoid timing attacks on symmetric key signature/hash comparisons as pointed out by @timmclean\n- bump to 1.8.1rc1\n\n3/19/2015\n- merge #57: fix build with OpenSSL <1.0 re. apr_jws_signature_is_ec (thanks to @szakharchenko)\n\n2/26/2015\n- release 1.8.0\n\n2/23/2015\n- avoid including line feeds in header values (thanks to @forkbomber and @ekanthi)\n- bump to 1.8.0rc5\n\n2/16/2015\n- fix free() crash on simple-valued error printouts\n- fix returning keys without a \"kid\"\n- fix searching for keys with a \"x5t\" thumbprint\n- refactor response type handling; more strict matching of requested response type\n- make compiled in Redis support optional\n- fix oauth.introspection_endpoint_method in initialization\n- bump to 1.8.0rc4\n\n2/15/2015\n- add support for configurable introspection HTTP method (OIDCOAuthIntrospectionEndpointMethod)\n- add preliminary support for GET-style logout\n- bump to 1.8.0rc2\n\n2/12/2015\n- add support for configuration of maximum session duration\n- bump to 1.8.0rc1\n\n2/9/2015\n- check JWT signature against all configured keys (jwks_uri) if no \"kid\" is provided, not just the first one\n- revise JOSE JWS handling part 2\n- complete support for local JWT access token validation\n- bump to 1.8.0rc0\n\n2/5/2015\n- fix symmetric key decryption of JWTs (A128CBC-HS256/A256CBC-HS512)\n- sha256 client secrets before using them as symmetric keys for decryption\n- extended decryption test coverage; avoid double printouts on error\n- refactor JWT header parsing\n- simplify JWK URI refresh handling\n- release 1.7.3\n\n2/4/2015\n- revise JOSE JWK handling part 1\n- change change target_uri parameter name to target_link_uri following draft-bradley-oauth-jwt-encoded-state-03\n- extended tests with stubs\n- refactor JWT validation (iss, exp, iat)\n- fix memory leak with RSA key conversion in apr_jwk.c - apr_jwk_rsa_bio_to_key\n- bump to 1.7.3rc4\n\n1/25/2015\n- Allow {... \"error\": null ...} in JSON responses. (@fatlotus)\n\n1/22/2015\n- fix configuration validation check where no config would be checked if OIDCProviderIssuer is set\n  but both OIDRedirectURI and OIDCCryptoPassphrase are not set\n- add preliminary support for local JWT access token validation\n- bump to 1.7.3rc1\n- sanitize set cookie syntax (get rid of extraneous \";\")\n\n1/21/2015\n- add support for OIDCOAuthIntrospectionTokenParamName (incl. Google OAuth 2.0 access token validation)\n- add a sample OAuth 2.0 config for Google access tokens to README.md\n- release 1.7.2\n\n- add APXS2_OPTS to configure.ac to accommodate RPM builds\n- bump to 1.7.3rc0\n- fix JWT timestamp (iat/exp) initialization issue\n- fix README.md on Google's scope required for returning the \"hd\" claim\n\n1/14/2015\n- add Apache function stubs to enable extending the scope of tests\n- add tests for oidc_proto_validate_access_token and oidc_proto_validate_code\n- bump to 1.7.2rc3\n\n1/12/2015\n- improve accuracy of expired/invalid session handling\n\n1/11/2015\n- add error type and return values to JOSE functions\n- fix return result on error in function that decrypts CEK\n- bump to 1.7.2rc2\n\n1/1/2015\n- update copyright to 2015\n- use json_int_t (seconds) for \"exp\" and \"iat\" fields, instead of apr_time_t (microseconds) \n- correct expiry debug printout\n- bump to 1.7.2rc1\n\n12/15/2014\n- fix Redis reconnect behavior: avoid keep reconnecting after first failure\n- bump to 1.7.2rc0\n\n12/12/2014\n- support passing cookies specified in OIDCPassCookies from browser on to OP/AS calls (for loadbalancing purposes)\n- release 1.7.1\n- document OIDCPassCookies in auth_openidc.conf\n\n12/10/2014\n- reconnect to the Redis server after I/O failure as raised in #43\n- bump to 1.7.1rc4\n\n12/8/2014\n- return http 500 when detecting requests that will loop on return\n- bump to 1.7.1rc3\n\n12/3/2014\n- require the expiring access_token on the refresh hook for XSRF protection\n- pass error codes back to the caller when the refresh hook fails\n- bump to 1.7.1rc2\n\n12/2/2014\n- improve handling of non-string (=non-compliant) error responses\n\n11/26/2014\n- make shared memory cache entry max size configurable through OIDCCacheShmEntrySizeMax\n- add OIDCReturn401 configuration primitive\n- bump to 1.7.1rc1\n\n11/11/2014\n- allow OIDCRedirectURI's with an empty path and fix crash; thanks to @CedricCabessa\n\n11/9/2014\n- support for adding configurable JSON parameters to Dynamic Client Registration requests\n\n11/5/2014\n- release 1.7.0\n\n10/30/2014\n- correct expires_in conversion\n- first stab at HTML templating and make all html HTML 4.01 Strict compliant\n- bump to 1.7.0rc4\n\n10/29/2014\n- document refresh flow\n\n10/28/2014\n- scrub all OIDC_ headers\n- add support for the refresh_token flow + hook\n- pass the expires_in as an absolute timestamp in OIDC_access_token_expires\n- use a global mutex for the Redis cache\n- bump to 1.7.0rc3\n\n10/27/2014\n- generalize support for OAuth 2.0 token introspection and conform to:\n  https://tools.ietf.org/html/draft-ietf-oauth-introspection-00\n\n10/26/2014\n- support regular expressions in Require statements\n\n10/24/2014\n- add support for Redis cache backend; there's a dependency on hiredis headers/library now\n\n10/21/2014\n- refactor nonce generation and remove base64url padding from value\n\n10/13/2014\n- add libssl-dev to Debian control build dependencies\n- release 1.6.0\n\n10/6/2014\n- apply html encoding to error display\n- bump version number to 1.6.0rc4\n\n10/2/2014\n- avoid crash when downloading metadata from OIDCProviderMetadataURL fails\n- set OIDCProviderMetadataURL retrieval interval to 24 hours\n- return error on configurations mixing OIDCProviderMetadataURL and OIDCMetadataDir\n- bump version number to 1.6.0rc3\n\n10/1/2014\n- support provider configuration from a metadata URL (OIDCProviderMetadataURL)\n- bump version number to 1.6.0rc2\n\n9/30/2014\n- be less strict about issuer validation in metadata\n- refactor metadata.c\n- improve logging about userinfo endpoint\n\n9/29/2014\n- refactor cache so it is partitioned in to sections (i.e. avoid future key collisions)\n\n9/25/2014\n- add support for \"x5c\" JWK representation\n- return JWKS on jwks_uri with content-type \"application/json\"\n\n9/17/2014\n- remove support for the X-Frame-Options as it is not needed in 302s\n- create and use log macros that printout function name\n\n9/16/2014\n- support for passing runtime determined authentication request parameters in the discovery response\n- include name/version in logs and bump to 1.6.0rc1\n- don't use the X-Frame-Options by default\n\n9/13/2014\n- add support for the X-Frame-Options header as recommended by the spec\n\n9/12/2014\n- set expiry on state cookies; don't clear session cookie after cache miss or corruption\n- fix JSON array memory leak in oauth.c\n\n9/10/2014\n- merge #34 (g10f), fix session management Javascript bug\n\n9/3/2014\n- improve error handling on hitting the redirect URI directly\n- fix set_slot functions for algorithm/url used as default for dynamic registration\n- rewording of auth_openidc.conf docs on JWK settings\n\n9/1/2014\n- add session management based on http://openid.net/specs/openid-connect-session-1_0.html (draft 21)\n\n8/29/2014\n- add configuration option to POST extra parameters to the token endpoint\n\n8/26/2014\n- correct cookie_path comparison\n- release 1.5.5\n\n8/20/2014\n- correctly error out on flows where no id_token was provided (\"token\")\n\n8/19/2014\n- fix debug printout on open redirect prevention\n- cleanup in-memory crypto context on shutdown\n- use default of \"/\" for OIDCCookiePath to simplify quickstart/simple deployments\n- disable OIDCMetadataDir in sample/default config file\n- clear session cookie after cache miss or corruption\n\n8/18/2014\n- add HttpOnly flag to cookies by default; can be disabled by config\n\n8/14/2014\n- support for passing the id_token in multiple formats (claims|payload|serialized)\n- release 1.5.4\n\n8/13/2014\n- pass the access_token in OIDC_access_token header to the application\n\n8/9/2014\n- merge #21 (Latinovic) to close #18 (big endian JWE issue)\n- merge #20 (wadahiro), support for \"none\" JWT signing algorithm\n\n8/1/2014\n- fix cache initialization/destroy leak\n- release 1.5.3\n\n7/26/2014\n- refactor http code; cleanup JSON encoding in client registration\n- refactor padding handling in base64url encoding/decoding\n\n7/20/2014\n- check for open redirect on passed target_link_uri\n- prevent JWE timing attacks on CEK; add JWE test\n- include client_id and scope values in resolved access_token\n\n7/1/2014\n- pass JSON objects in app HTTP headers as plain JSON\n- correct printout in id_token hash comparisons\n- add more tests\n- release 1.5.2\n\n6/12/2014\n- support third-party-initiated login as defined in the spec\n- release 1.5.1\n- fix PF OAuth 2.0 RS functionality after upgrading to jansson\n\n6/6/2014\n- more changes for Debian packaging (1.5-3)\n\n6/5/2014\n- do not set Secure cookies for plain HTTP\n- add warning/errors when configured hosts/domains do not match\n- release 1.5\n- changes for Debian packaging\n\n6/4/2014\n- fix passing integer claims on non-Mac OS X systems\n- fix claims-based authorization with integer values (@martinsrom)\n- fix getting the id_token from request state and error logging\n- add AUTHORS file with credits\n- migrate README to Markdown README.md\n\n6/3/2014\n- change JSON parser from https://github.com/moriyoshi/apr-json to http://www.digip.org/jansson/\n\n6/2/2014\n- handle X-Forwarded-Proto/X-Forwarded-Port when running behind a proxy/load-balancer\n- release version 1.4\n\n6/1/2014\n- compile with OpenSSL <1.0 and but then disable Elliptic Curve verification\n- fix jwks_uri setting in nested vhosts\n- use OpenSSL_add_all_digests in initialization and EVP_cleanup on shutdown\n\n5/31/2014\n- README additions/improvements\n\n5/29/2014\n- correct big endian detection\n- allow for key identification in JWKs based on thumbprint (x5t)\n\n5/24/2014\n- add cache destroy function and destroy shm cache resources on shutdown\n\n5/23/2014\n- doc corrections to auth_openidc.conf\n\n5/22/2014\n- add implementation of OP-initiated-SSO based on:\n  http://tools.ietf.org/html/draft-bradley-oauth-jwt-encoded-state-01\n- fix nonce caching for replay prevention\n\n5/21/2014\n- correct README on enabling Google+ APIs before applying the sample Google configs\n- fix AuthNHeader setting and allow server-wide config too\n- avoid segfault on corrupted/non- JSON/JWT input\n\n5/20/2014\n- fix URL assembly when running on non-standard port\n- release 1.3\n\n5/17/2014\n- support outgoing proxy using OIDCOutgoingProxy\n- correct sample configs in documentation for missing OIDCCookiePath\n- support OIDCCookiePath in server-wide config as well\n\n5/13/2014\n- support configurable (custom) query parameters in the authorization request\n\n5/12/2014\n- support encrypted JWTs using A128KW and A256KW for the Content Encryption Key\n- support A256CBC-HS512 encrypted JWTs\n- support custom client JWKs URI\n\n5/8/2014\n- support encrypted JWTs using RSA1_5 and A128CBC-HS256\n\n5/2/2014\n- do not use ap_get_remote_host for browser fingerprinting\n\n5/1/2014\n- split out custom client config into separate <issuer>.conf file\n- allow to override client_contact, client_name and registration_token in .conf file\n- remove OIDCRegistrationToken command for the static OP config\n\n4/29/2014\n- support JWT verification of ES256, ES384 and ES512 algorithms\n\n4/28/2014\n- support configurable response_mode (fragment, query or form_post)\n- use nonce in all flows except for OP Google and flows \"code\" or \"code token\"\n\n4/26/2014\n- make client secret optional (support self-issued OP)\n\n4/25/2014\n- support Hybrid flows\n\n4/24/2014\n- fix using Bearer token Authorization header on JSON POST calls\n- support using a Bearer token on client registration calls\n\n4/22/2014\n- match request and response type \n- check at_hash value on \"token id_token\" implicit flow\n- use shared memory caching by default\n- release 1.2\n\n4/19/2014\n- store response_type in state and make state a JSON object\n\n4/18/2014\n- support RSASSA-PSS token signing algorithms (PS256,PS384,PS512)\n\n4/17/2014\n- improve session inactivity timeout handling\n\n4/16/2014\n- set REMOTE_USER and HTTP headers on OAuth 2.0 protected paths\n\n4/15/2014\n- add session inactivity timeout\n- register all supported response_types during client registration and try\n  to pick the one that matches the configured default\n- use long timeouts on JWK retrieval calls\n- allow for non-null but empty query parameters on implicit authorization response\n- simplify azp/aud and nonce handling\n- change session_type naming (to \"server-cache\"/\"client-cookie\")\n\n4/14/2014\n- factor out JOSE related code\n\n4/3/2014\n- add configurable claim name for the REMOTE_USER variable, optionally postfixed with the  url-encoded\n  issuer value; the default for the remote username is \"sub@\" now, makeing it unique across OPs\n- some refactoring of id_token validation functions\n- add INSTALL, move auth_openidc.conf to main directory\n- release 1.1\n\n3/28/2014\n- fix Require claim name mismatch for Apache 2.4\n- fix hmac method/printout naming artifacts from earlier\nauto-search-and-replace\n- release v1.0.1\n\n3/27/2014\n- initial import named mod_auth_openidc\n- updated README\n- fix debian/changelog\n", "AC_INIT([mod_auth_openidc],[2.4.13.2],[hans.zandbelt@openidc.com])\n\nAC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())\n\nAM_INIT_AUTOMAKE([-Wall -Werror foreign subdir-objects])\n\nAC_CONFIG_HEADERS([src/config.h])\nAC_CONFIG_MACRO_DIR([m4])\n\nAC_PROG_CC\nAM_PROG_CC_C_O\nAM_PROG_AR\nLT_INIT([dlopen])\n\n# Checks for apxs.\nAC_ARG_WITH([apxs],\n\t[AS_HELP_STRING([--with-apxs=PATH/NAME],[path to the apxs binary for Apache [[apxs]]])],\n\t[AC_SUBST(APXS, $with_apxs)],\n\t[AC_PATH_PROGS(APXS, [apxs apxs2],,)])\n\nif test ! -x \"$APXS\"; then\n\t# $APXS isn't a executable file.\n\tAC_MSG_ERROR([\nCould not find apxs. Please specify the path to apxs\nusing the --with-apxs=/full/path/to/apxs option.\nThe executable may also be named 'apxs2'.\n])\nfi\n\nAPXS_CFLAGS=`${APXS} -q CFLAGS 2> /dev/null`\nAPXS_CPPFLAGS=`${APXS} -q CPPFLAGS 2> /dev/null`\nAPXS_LDFLAGS=`${APXS} -q LDFLAGS 2> /dev/null`\nAPXS_LIBS=`${APXS} -q LIBS 2> /dev/null`\nAPXS_LIBEXECDIR=`${APXS} -q LIBEXECDIR 2> /dev/null`\nAPXS_INCLUDEDIR=`${APXS} -q INCLUDEDIR 2> /dev/null`\nAPXS_INCLUDES=\"-I${APXS_INCLUDEDIR}\"\n\nPKG_CHECK_MODULES(APR, [apr-1, apr-util-1])\n\n# Apache libraries.\nAPACHE_MODULEDIR=\"${APXS_LIBEXECDIR}\"\nAPACHE_INCLUDES=\"${APXS_INCLUDES} ${APR_INCLUDES}\"\nAPACHE_CFLAGS=\"${APXS_CFLAGS} ${APR_CFLAGS} ${APACHE_INCLUDES}\"\nAPACHE_CPPFLAGS=\"${APXS_CPPFLAGS} ${APR_CPPFLAGS} ${APACHE_INCLUDES}\"\nAPACHE_LDFLAGS=\"${APXS_LDFLAGS} ${APR_LDFLAGS}\"\nAPACHE_LIBS=\"${APXS_LIBS} ${APR_LIBS}\"\n\nAC_SUBST(APACHE_MODULEDIR)\nAC_SUBST(APACHE_INCLUDES)\nAC_SUBST(APACHE_CFLAGS)\nAC_SUBST(APACHE_CPPFLAGS)\nAC_SUBST(APACHE_LDFLAGS)\nAC_SUBST(APACHE_LIBS)\n\n# We need the curl library for HTTP callouts.\nPKG_CHECK_MODULES(CURL, libcurl)\nAC_SUBST(CURL_CFLAGS)\nAC_SUBST(CURL_LIBS)\n\n# We need OpenSSL for crypto and HTTPS callouts.\nPKG_CHECK_MODULES(OPENSSL, openssl)\nAC_SUBST(OPENSSL_CFLAGS)\nAC_SUBST(OPENSSL_LIBS)\n\n# older versions of libapr may not have memcache support\nold_CPPFLAGS=$CPPFLAGS\nCPPFLAGS=\"${APACHE_CPPFLAGS} ${APACHE_CFLAGS} $CPPFLAGS\"\nAC_CHECK_HEADER([apr_memcache.h], [HAVE_MEMCACHE=1], [HAVE_MEMCACHE=0])\nAM_CONDITIONAL(HAVE_MEMCACHE,[test x\"$HAVE_MEMCACHE\" = \"x1\"])\nCPPFLAGS=$old_CPPFLAGS\n\n# We need Jansson for JSON parsing.\nPKG_CHECK_MODULES(JANSSON, jansson)\nAC_SUBST(JANSSON_CFLAGS)\nAC_SUBST(JANSSON_LIBS)\n\n# cjose\nPKG_CHECK_MODULES(CJOSE, cjose)\nAC_SUBST(CJOSE_CFLAGS)\nAC_SUBST(CJOSE_LIBS)\n\n# PCRE\nPKG_CHECK_MODULES([PCRE2], libpcre2-8, [\n  PCRE_CFLAGS=\"$PCRE2_CFLAGS\"\n  PCRE_LIBS=\"$PCRE2_LIBS\"\n  AC_DEFINE([HAVE_LIBPCRE2], [1], [Define if libpcre2 is available.])\n  enable_pcre2=yes\n], [\n  AC_CHECK_HEADER(pcre2.h, [\n    AC_CHECK_LIB(pcre2-8, pcre2_compile_8, [\n      PCRE_LIBS=\"-lpcre2-8\"\n      AC_DEFINE([HAVE_LIBPCRE2], 1, [Define if libpcre2 is available.])\n      enable_pcre2=yes\n    ])\n  ])\n])\n\nAS_IF([test \"X$enable_pcre2\" != \"Xyes\"],[\n  PKG_CHECK_MODULES([PCRE], libpcre, [\n    CFLAGS=\"$PCRE_CFLAGS $CFLAGS\"\n    AC_CHECK_HEADER(pcre.h, [\n      LIBS=\"$PCRE_LIBS $LIBS\"\n      AC_DEFINE([HAVE_LIBPCRE], [1], [Define if libpcre is available.])\n      enable_pcre=yes\n    ])\n  ], [\n    AC_CHECK_HEADER(pcre.h, [\n      AC_CHECK_LIB(pcre, pcre_compile, [\n        PCRE_LIBS=\"-lpcre\"\n        AC_DEFINE([HAVE_LIBPCRE], 1, [Define if libpcre is available.])\n      ])\n    ])\n  ])\n])\n\nAS_IF([test \"X$enable_pcre2\" = Xyes], [PCRE_INFO=\"yes, via libpcre2\"], [test \"X$enable_pcre\" = Xyes], [PCRE_INFO=\"yes, via libpcre\"], [PCRE_INFO=no])\n\nAC_SUBST(PCRE_CFLAGS)\nAC_SUBST(PCRE_LIBS)\n\nAC_ARG_WITH(brotli,\n\tAS_HELP_STRING([--with-brotli], [enable brotli compression support]),\n\tac_brotli=$withval, ac_brotli=no)\nif test x$ac_brotli != xno; then\n\tPKG_CHECK_MODULES(LIBBROTLIENC, [libbrotlienc >= 1.0.0], [with_libbrotlienc=yes], [with_libbrotlienc=no])\n\tPKG_CHECK_MODULES(LIBBROTLIDEC, [libbrotlidec >= 1.0.0], [with_libbrotlidec=yes], [with_libbrotlidec=no])\nfi\nAM_CONDITIONAL(HAVE_LIBBROTLI, [test \"${with_libbrotlienc}\" == \"yes\" && test \"${with_libbrotlidec}\" == \"yes\"])\nAC_SUBST([LIBBROTLIENC_CFLAGS])\nAC_SUBST([LIBBROTLIDEC_CFLAGS])\nAC_SUBST([LIBBROTLIENC_LIBS])\nAC_SUBST([LIBBROTLIDEC_LIBS])\n\nif test \"${with_libbrotlienc}\" != \"yes\" || test \"${with_libbrotlidec}\" != \"yes\"; then\n\tPKG_CHECK_MODULES([ZLIB], [zlib], [HAVE_LIBZ=1], [HAVE_LIBZ=0])\nfi\nAM_CONDITIONAL(HAVE_LIBZ, [test x\"$HAVE_LIBZ\" = \"x1\"])\nAC_SUBST([ZLIB_CFLAGS])\nAC_SUBST([ZLIB_LIBS])\n    \n# Redis\nAC_ARG_WITH([hiredis],\n\t[AS_HELP_STRING([--with-hiredis],\n\t[support Redis @<:@default=check@:>@])],\n\t[],\n\t[with_hiredis=yes])\nAS_CASE([\"$with_hiredis\"],\n\t[yes], [\n\t\tif test \"$HIREDIS_LIBS\" == \"\"; then PKG_CHECK_MODULES([HIREDIS], [hiredis], [HAVE_LIBHIREDIS=1], [HAVE_LIBHIREDIS=0]) ; else [HAVE_LIBHIREDIS=1] ; fi\n\t],\n\t[no], [HAVE_LIBHIREDIS=0],\n\t[PKG_CHECK_MODULES([HIREDIS], [hiredis], [HAVE_LIBHIREDIS=1], [HAVE_LIBHIREDIS=0])])\nAM_CONDITIONAL(HAVE_LIBHIREDIS, [test x\"$HAVE_LIBHIREDIS\" = \"x1\"])\nAC_SUBST(HIREDIS_CFLAGS)\nAC_SUBST(HIREDIS_LIBS)\n\n# JQ\nHAVE_LIBJQ=0\n\nAC_ARG_WITH([jq],\n\tAS_HELP_STRING([--with-jq=PATH], [location of your libjq installation])])\n\nif test -n \"$with_jq\"\nthen\n\tif test \"$JQ_CFLAGS\" == \"\"; then\n\t\tJQ_CFLAGS=\"-I$with_jq/include\"\n\tfi\n\tif test \"$JQ_LIBS\" == \"\"; then\n\t\tJQ_LIBS=\"-L$with_jq/lib -ljq\"\n\tfi\n\n\tCPPFLAGS=\"$JQ_CFLAGS $CPPFLAGS\"\n\tAC_CHECK_HEADER([jq.h], [HAVE_LIBJQ=1], [HAVE_LIBJQ=0])\n\n\tLDFLAGS=\"$JQ_LIBS $LDFLAGS\"\n\tAC_CHECK_LIB([jq], [jq_init], [HAVE_LIBJQ=1], [HAVE_LIBJQ=0])\n\tif test \"x$have_jq\" = \"x0\" ; then\n\t\tAC_MSG_WARN(\"cannot find library for -ljq.\")\n\tfi\nfi\n\nAM_CONDITIONAL(HAVE_LIBJQ, [test x\"$HAVE_LIBJQ\" = \"x1\"])\nAC_SUBST(JQ_CFLAGS)\nAC_SUBST(JQ_LIBS)\n\n# Create Makefile from Makefile.in\nAC_CONFIG_FILES([Makefile])\nAC_OUTPUT\n"], "filenames": ["ChangeLog", "configure.ac"], "buggy_code_start_loc": [0, 1], "buggy_code_end_loc": [3, 2], "fixing_code_start_loc": [1, 1], "fixing_code_end_loc": [8, 2], "type": "CWE-476", "message": "mod_auth_openidc is an authentication and authorization module for the Apache 2.x HTTP server that implements the OpenID Connect Relying Party functionality. In versions 2.0.0 through 2.4.13.1, when `OIDCStripCookies` is set and a crafted cookie supplied, a NULL pointer dereference would occur, resulting in a segmentation fault. This could be used in a Denial-of-Service attack and thus presents an availability risk. Version 2.4.13.2 contains a patch for this issue. As a workaround, avoid using `OIDCStripCookies`.\n", "other": {"cve": {"id": "CVE-2023-28625", "sourceIdentifier": "security-advisories@github.com", "published": "2023-04-03T14:15:07.507", "lastModified": "2023-05-31T20:15:10.493", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "mod_auth_openidc is an authentication and authorization module for the Apache 2.x HTTP server that implements the OpenID Connect Relying Party functionality. In versions 2.0.0 through 2.4.13.1, when `OIDCStripCookies` is set and a crafted cookie supplied, a NULL pointer dereference would occur, resulting in a segmentation fault. This could be used in a Denial-of-Service attack and thus presents an availability risk. Version 2.4.13.2 contains a patch for this issue. As a workaround, avoid using `OIDCStripCookies`.\n"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-476"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:openidc:mod_auth_openidc:*:*:*:*:*:*:*:*", "versionStartIncluding": "2.0.0", "versionEndExcluding": "2.4.13.2", "matchCriteriaId": "F0E563D6-BFEA-48EF-ACFA-D746A2E78902"}]}]}], "references": [{"url": "https://github.com/OpenIDC/mod_auth_openidc/blame/3f11976dab56af0a46a7dddb7a275cc16d6eb726/src/mod_auth_openidc.c#L178-L179", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/OpenIDC/mod_auth_openidc/commit/c0e1edac3c4c19988ccdc7713d7aebfce6ff916a", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/OpenIDC/mod_auth_openidc/releases/tag/v2.4.13.2", "source": "security-advisories@github.com", "tags": ["Release Notes"]}, {"url": "https://github.com/OpenIDC/mod_auth_openidc/security/advisories/GHSA-f5xw-rvfr-24qr", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2023/04/msg00034.html", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WIBKFC22PDH6UXMSZ23PHTD7736ZC7BB/", "source": "security-advisories@github.com"}, {"url": "https://www.debian.org/security/2023/dsa-5405", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/OpenIDC/mod_auth_openidc/commit/c0e1edac3c4c19988ccdc7713d7aebfce6ff916a"}}