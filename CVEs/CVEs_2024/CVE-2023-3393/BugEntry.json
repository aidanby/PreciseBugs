{"buggy_code": ["<?php\n/**\n * Copyright 2022-2023 FOSSBilling\n * Copyright 2011-2021 BoxBilling, Inc.\n * SPDX-License-Identifier: Apache-2.0\n *\n * @copyright FOSSBilling (https://www.fossbilling.org)\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache-2.0\n */\n\nuse \\FOSSBilling\\InjectionAwareInterface;\nuse Twig\\Extension\\AbstractExtension;\nuse Twig\\TwigFilter;\nuse League\\CommonMark\\GithubFlavoredMarkdownConverter;\n\nclass Box_TwigExtensions extends AbstractExtension implements InjectionAwareInterface\n{\n    protected ?\\Pimple\\Container $di;\n\n    public function setDi(\\Pimple\\Container $di): void\n    {\n        $this->di = $di;\n    }\n\n    public function getDi(): ?\\Pimple\\Container\n    {\n        return $this->di;\n    }\n\n    /**\n     * Returns a list of filters to add to the existing list.\n     *\n     * @return array An array of filters\n     */\n    public function getFilters()\n    {\n        return [\n            /**\n             * 'trans' filter rewrite same filter from Symfony\\Bridge\\Twig\\Extension\\TranslationExtension\n             * for compatible with outdated php-gettext library.\n             *\n             * TODO: Use Symfony\\Component\\Translation\\Loader\\MoFileLoader and remove php-gettext hardcoded library.\n             */\n            'trans' => new TwigFilter('trans', '__trans'),\n\n            'alink' => new TwigFilter('alink', [$this, 'twig_bb_admin_link_filter'], ['is_safe' => ['html']]),\n\n            'link' => new TwigFilter('link', [$this, 'twig_bb_client_link_filter'], ['is_safe' => ['html']]),\n\n            'gravatar' => new TwigFilter('gravatar', [$this, 'twig_gravatar_filter']),\n\n            'markdown' => new TwigFilter('markdown', [$this, 'twig_markdown_filter'], ['needs_environment' => true, 'is_safe' => ['html']]),\n\n            'truncate' => new TwigFilter('truncate', [$this, 'twig_truncate_filter'], ['needs_environment' => true]),\n\n            'timeago' => new TwigFilter('timeago', [$this, 'twig_timeago_filter']),\n\n            'daysleft' => new TwigFilter('daysleft', [$this, 'twig_daysleft_filter']),\n\n            'size' => new TwigFilter('size', [$this, 'twig_size_filter']),\n\n            'ipcountryname' => new TwigFilter('ipcountryname', [$this, 'twig_ipcountryname_filter']),\n\n            'number' => new TwigFilter('number', [$this, 'twig_number_filter']),\n\n            'period_title' => new TwigFilter('period_title', [$this, 'twig_period_title'], ['needs_environment' => true, 'is_safe' => ['html']]),\n\n            'autolink' => new TwigFilter('autolink', [$this, 'twig_autolink_filter']),\n\n            'img_tag' => new TwigFilter('img_tag', [$this, 'twig_img_tag'], ['needs_environment' => false, 'is_safe' => ['html']]),\n\n            'script_tag' => new TwigFilter('script_tag', [$this, 'twig_script_tag'], ['needs_environment' => false, 'is_safe' => ['html']]),\n\n            'stylesheet_tag' => new TwigFilter('stylesheet_tag', [$this, 'twig_stylesheet_tag'], ['needs_environment' => false, 'is_safe' => ['html']]),\n\n            'mod_asset_url' => new TwigFilter('mod_asset_url', [$this, 'twig_mod_asset_url']),\n\n            'asset_url' => new TwigFilter('asset_url', [$this, 'twig_asset_url'], ['needs_environment' => true, 'is_safe' => ['html']]),\n\n            'library_url' => new TwigFilter('library_url', [$this, 'twig_library_url'], ['is_safe' => ['html']]),\n\n            'money' => new TwigFilter('money', [$this, 'twig_money'], ['needs_environment' => true, 'is_safe' => ['html']]),\n\n            'money_without_currency' => new TwigFilter('money_without_currency', [$this, 'twig_money_without_currency'], ['needs_environment' => true, 'is_safe' => ['html']]),\n\n            'money_convert' => new TwigFilter('money_convert', [$this, 'twig_money_convert'], ['needs_environment' => true, 'is_safe' => ['html']]),\n\n            'money_convert_without_currency' => new TwigFilter('money_convert_without_currency', [$this, 'money_convert_without_currency'], ['needs_environment' => true, 'is_safe' => ['html']]),\n        ];\n    }\n\n    /**\n     * Returns the name of the extension.\n     *\n     * @return string The extension name\n     */\n    public function getName()\n    {\n        return 'bb';\n    }\n\n    public function twig_ipcountryname_filter($value)\n    {\n        if (empty($value)) {\n            return '';\n        }\n\n        try {\n            $record = $this->di['geoip']->country($value);\n\n            return $record->country->name;\n        } catch (Exception $e) {\n            return '';\n        }\n    }\n\n    public function twig_bb_client_link_filter($link, $params = null)\n    {\n        if (null === $this->di['url']) {\n            return null;\n        }\n\n        return $this->di['url']->link($link, $params);\n    }\n\n    public function twig_bb_admin_link_filter($link, $params = null)\n    {\n        return $this->di['url']->adminLink($link, $params);\n    }\n\n    function twig_period_title(Twig\\Environment $env, $period)\n    {\n        $globals = $env->getGlobals();\n        $api_guest = $globals['guest'];\n\n        return $api_guest->system_period_title(['code' => $period]);\n    }\n\n    public function twig_money_convert(Twig\\Environment $env, $price, $currency = null)\n    {\n        $globals = $env->getGlobals();\n        $api_guest = $globals['guest'];\n        if (is_null($currency)) {\n            $c = $api_guest->cart_get_currency();\n            $currency = $c['code'];\n        }\n\n        return $api_guest->currency_format(['price' => $price, 'code' => $currency, 'convert' => true]);\n    }\n\n    public function money_convert_without_currency(Twig\\Environment $env, $price, $currency = null, $without_currency = false)\n    {\n        $globals = $env->getGlobals();\n        $api_guest = $globals['guest'];\n        if (is_null($currency)) {\n            $c = $api_guest->cart_get_currency();\n            $currency = $c['code'];\n        }\n\n        return $api_guest->currency_format(['price' => $price, 'code' => $currency, 'convert' => true, 'without_currency' => true]);\n    }\n\n    public function twig_money(Twig\\Environment $env, $price, $currency = null)\n    {\n        $globals = $env->getGlobals();\n        $api_guest = $globals['guest'];\n\n        return $api_guest->currency_format(['price' => $price, 'code' => $currency, 'convert' => false]);\n    }\n\n    public function twig_money_without_currency(Twig\\Environment $env, $price, $currency = null)\n    {\n        $globals = $env->getGlobals();\n        $api_guest = $globals['guest'];\n\n        return $api_guest->currency_format(['price' => $price, 'code' => $currency, 'convert' => false, 'without_currency' => true]);\n    }\n\n    public function twig_mod_asset_url($asset, $mod)\n    {\n        return BB_URL . 'modules/' . ucfirst($mod) . '/assets/' . $asset;\n    }\n\n    public function twig_asset_url(Twig\\Environment $env, $asset)\n    {\n        $globals = $env->getGlobals();\n\n        return BB_URL . 'themes/' . $globals['current_theme'] . '/assets/' . $asset;\n    }\n\n    public function twig_library_url($path)\n    {\n        return BB_URL . 'library/' . $path;\n    }\n\n    public function twig_img_tag($path, $alt = null)\n    {\n        $alt = is_null($alt) ? pathinfo($path, PATHINFO_BASENAME) : $alt;\n\n        return sprintf('<img src=\"%s\" alt=\"%s\" title=\"%s\"/>', htmlspecialchars($path), htmlspecialchars($alt), htmlspecialchars($alt));\n    }\n\n    public function twig_script_tag($path)\n    {\n        return sprintf('<script type=\"text/javascript\" src=\"%s?%s\"></script>', $path, \\FOSSBilling\\Version::VERSION);\n    }\n\n    public function twig_stylesheet_tag($path, $media = 'screen')\n    {\n        return sprintf('<link rel=\"stylesheet\" type=\"text/css\" href=\"%s?v=%s\" media=\"%s\" />', $path, \\FOSSBilling\\Version::VERSION, $media);\n    }\n\n    public function twig_gravatar_filter($email, $size = 20)\n    {\n        $url = 'https://www.gravatar.com/avatar/';\n        $url .= md5(strtolower(trim($email)));\n        $url .= \"?s=$size&d=mp&r=g\";\n        return $url;\n    }\n\n    public function twig_autolink_filter($text)\n    {\n        $pattern = '#\\b(([\\w-]+://?|www[.])[^\\s()<>]+(?:\\([\\w\\d]+\\)|([^[:punct:]\\s]|/)))#';\n\n        $callback = function ($matches) {\n            $url = array_shift($matches);\n            $url_parts = parse_url($url);\n\n            if (!isset($url_parts['scheme'])) {\n                $url = 'http://' . $url;\n            }\n\n            return sprintf('<a target=\"_blank\" href=\"%s\">%s</a>', $url, $url);\n        };\n\n        return preg_replace_callback($pattern, $callback, $text);\n    }\n\n    public function twig_number_filter($number, $decimals = 2, $dec_point = '.', $thousands_sep = '')\n    {\n        if (is_null($number)) {\n            $number = '0';\n        }\n        return number_format(floatval($number), $decimals, $dec_point, $thousands_sep);\n    }\n\n    public function twig_daysleft_filter($iso8601)\n    {\n        $timediff = strtotime($iso8601) - time();\n\n        return intval($timediff / 86400);\n    }\n\n    public function twig_timeago_filter($iso8601)\n    {\n        $cur_tm = time();\n        $dif = $cur_tm - strtotime($iso8601);\n        $pds = [__trans('second'), __trans('minute'), __trans('hour'), __trans('day'), __trans('week'), __trans('month'), __trans('year'), __trans('decade')];\n        $lngh = [1, 60, 3600, 86400, 604800, 2630880, 31570560, 315705600];\n        $no = 0;\n\n        for ($v = sizeof($lngh) - 1; ($v >= 0) && (($no = $dif / $lngh[$v]) <= 1); --$v) {\n        }\n\n        if ($v < 0) {\n            $v = 0;\n        }\n\n        $_tm = $cur_tm - ($dif % $lngh[$v]);\n\n        $no = floor($no);\n\n        if (1 != $no) {\n            $pds[$v] .= 's';\n        }\n        $x = sprintf('%d %s ', $no, $pds[$v]);\n\n        return $x;\n    }\n\n    public function twig_size_filter($value)\n    {\n        $precision = 2;\n        $units = ['B', 'KB', 'MB', 'GB', 'TB'];\n\n        $bytes = max($value, 0);\n        $pow = floor(($bytes ? log($bytes) : 0) / log(1024));\n        $pow = min($pow, count($units) - 1);\n\n        $bytes /= pow(1024, $pow);\n\n        return round($bytes, $precision) . ' ' . $units[$pow];\n    }\n\n    public function twig_markdown_filter(Twig\\Environment $env, $value)\n    {\n        $content = $value ?? '';\n        $markdownParser = new GithubFlavoredMarkdownConverter(['html_input' => 'escape', 'allow_unsafe_links' => false, 'max_nesting_level' => 50]);\n        return $markdownParser->convert($content);\n    }\n\n    public function twig_truncate_filter(Twig\\Environment $env, $value, $length = 30, $preserve = false, $separator = '...')\n    {\n        mb_internal_encoding('UTF-8');\n\n        if (is_null($value)) {\n            $value = '';\n        }\n        if (mb_strlen($value) > $length) {\n            if ($preserve) {\n                if (false !== ($breakpoint = mb_strpos($value, ' ', $length))) {\n                    $length = $breakpoint;\n                }\n            }\n\n            return mb_substr($value, 0, $length) . $separator;\n        }\n\n        return $value;\n    }\n}\n"], "fixing_code": ["<?php\n/**\n * Copyright 2022-2023 FOSSBilling\n * Copyright 2011-2021 BoxBilling, Inc.\n * SPDX-License-Identifier: Apache-2.0\n *\n * @copyright FOSSBilling (https://www.fossbilling.org)\n * @license http://www.apache.org/licenses/LICENSE-2.0 Apache-2.0\n */\n\nuse \\FOSSBilling\\InjectionAwareInterface;\nuse Twig\\Extension\\AbstractExtension;\nuse Twig\\TwigFilter;\nuse League\\CommonMark\\GithubFlavoredMarkdownConverter;\n\nclass Box_TwigExtensions extends AbstractExtension implements InjectionAwareInterface\n{\n    protected ?\\Pimple\\Container $di;\n\n    public function setDi(\\Pimple\\Container $di): void\n    {\n        $this->di = $di;\n    }\n\n    public function getDi(): ?\\Pimple\\Container\n    {\n        return $this->di;\n    }\n\n    /**\n     * Returns a list of filters to add to the existing list.\n     *\n     * @return array An array of filters\n     */\n    public function getFilters()\n    {\n        return [\n            'trans' => new TwigFilter('trans', '__trans'),\n\n            'alink' => new TwigFilter('alink', [$this, 'twig_bb_admin_link_filter'], ['is_safe' => ['html']]),\n            'link' => new TwigFilter('link', [$this, 'twig_bb_client_link_filter'], ['is_safe' => ['html']]),\n            'autolink' => new TwigFilter('autolink', [$this, 'twig_autolink_filter']),\n\n            'gravatar' => new TwigFilter('gravatar', [$this, 'twig_gravatar_filter']),\n\n            'markdown' => new TwigFilter('markdown', [$this, 'twig_markdown_filter'], ['needs_environment' => true, 'is_safe' => ['html']]),\n\n            'truncate' => new TwigFilter('truncate', [$this, 'twig_truncate_filter'], ['needs_environment' => true]),\n\n            'timeago' => new TwigFilter('timeago', [$this, 'twig_timeago_filter']),\n            'daysleft' => new TwigFilter('daysleft', [$this, 'twig_daysleft_filter']),\n\n            'size' => new TwigFilter('size', [$this, 'twig_size_filter']),\n\n            'ipcountryname' => new TwigFilter('ipcountryname', [$this, 'twig_ipcountryname_filter']),\n\n            'number' => new TwigFilter('number', [$this, 'twig_number_filter']),\n\n            'period_title' => new TwigFilter('period_title', [$this, 'twig_period_title'], ['needs_environment' => true, 'is_safe' => ['html']]),\n\n            'img_tag' => new TwigFilter('img_tag', [$this, 'twig_img_tag'], ['needs_environment' => false, 'is_safe' => ['html']]),\n            'script_tag' => new TwigFilter('script_tag', [$this, 'twig_script_tag'], ['needs_environment' => false, 'is_safe' => ['html']]),\n            'stylesheet_tag' => new TwigFilter('stylesheet_tag', [$this, 'twig_stylesheet_tag'], ['needs_environment' => false, 'is_safe' => ['html']]),\n            'mod_asset_url' => new TwigFilter('mod_asset_url', [$this, 'twig_mod_asset_url']),\n            'asset_url' => new TwigFilter('asset_url', [$this, 'twig_asset_url'], ['needs_environment' => true, 'is_safe' => ['html']]),\n            'library_url' => new TwigFilter('library_url', [$this, 'twig_library_url'], ['is_safe' => ['html']]),\n\n            'money' => new TwigFilter('money', [$this, 'twig_money'], ['needs_environment' => true, 'is_safe' => ['html']]),\n            'money_without_currency' => new TwigFilter('money_without_currency', [$this, 'twig_money_without_currency'], ['needs_environment' => true, 'is_safe' => ['html']]),\n            'money_convert' => new TwigFilter('money_convert', [$this, 'twig_money_convert'], ['needs_environment' => true, 'is_safe' => ['html']]),\n            'money_convert_without_currency' => new TwigFilter('money_convert_without_currency', [$this, 'money_convert_without_currency'], ['needs_environment' => true, 'is_safe' => ['html']]),\n\n            // We override these default twig filters so we can explicitly disable it from calling certain functions that may leak data or allow commands to be executed on the system.\n            'filter' => new TwigFilter('filter', [$this, 'filteredFilter']),\n            'map' => new TwigFilter('map', [$this, 'filteredMap']),\n            'reduce' => new TwigFilter('reduce', [$this, 'filteredReduce']),\n            'sort' => new TwigFilter('sort', [$this, 'filteredSort']),\n        ];\n    }\n\n    /**\n     * Returns the name of the extension.\n     *\n     * @return string The extension name\n     */\n    public function getName()\n    {\n        return 'bb';\n    }\n\n    public function twig_ipcountryname_filter($value)\n    {\n        if (empty($value)) {\n            return '';\n        }\n\n        try {\n            $record = $this->di['geoip']->country($value);\n\n            return $record->country->name;\n        } catch (Exception $e) {\n            return '';\n        }\n    }\n\n    public function twig_bb_client_link_filter($link, $params = null)\n    {\n        if (null === $this->di['url']) {\n            return null;\n        }\n\n        return $this->di['url']->link($link, $params);\n    }\n\n    public function twig_bb_admin_link_filter($link, $params = null)\n    {\n        return $this->di['url']->adminLink($link, $params);\n    }\n\n    function twig_period_title(Twig\\Environment $env, $period)\n    {\n        $globals = $env->getGlobals();\n        $api_guest = $globals['guest'];\n\n        return $api_guest->system_period_title(['code' => $period]);\n    }\n\n    public function twig_money_convert(Twig\\Environment $env, $price, $currency = null)\n    {\n        $globals = $env->getGlobals();\n        $api_guest = $globals['guest'];\n        if (is_null($currency)) {\n            $c = $api_guest->cart_get_currency();\n            $currency = $c['code'];\n        }\n\n        return $api_guest->currency_format(['price' => $price, 'code' => $currency, 'convert' => true]);\n    }\n\n    public function money_convert_without_currency(Twig\\Environment $env, $price, $currency = null, $without_currency = false)\n    {\n        $globals = $env->getGlobals();\n        $api_guest = $globals['guest'];\n        if (is_null($currency)) {\n            $c = $api_guest->cart_get_currency();\n            $currency = $c['code'];\n        }\n\n        return $api_guest->currency_format(['price' => $price, 'code' => $currency, 'convert' => true, 'without_currency' => true]);\n    }\n\n    public function twig_money(Twig\\Environment $env, $price, $currency = null)\n    {\n        $globals = $env->getGlobals();\n        $api_guest = $globals['guest'];\n\n        return $api_guest->currency_format(['price' => $price, 'code' => $currency, 'convert' => false]);\n    }\n\n    public function twig_money_without_currency(Twig\\Environment $env, $price, $currency = null)\n    {\n        $globals = $env->getGlobals();\n        $api_guest = $globals['guest'];\n\n        return $api_guest->currency_format(['price' => $price, 'code' => $currency, 'convert' => false, 'without_currency' => true]);\n    }\n\n    public function twig_mod_asset_url($asset, $mod)\n    {\n        return BB_URL . 'modules/' . ucfirst($mod) . '/assets/' . $asset;\n    }\n\n    public function twig_asset_url(Twig\\Environment $env, $asset)\n    {\n        $globals = $env->getGlobals();\n\n        return BB_URL . 'themes/' . $globals['current_theme'] . '/assets/' . $asset;\n    }\n\n    public function twig_library_url($path)\n    {\n        return BB_URL . 'library/' . $path;\n    }\n\n    public function twig_img_tag($path, $alt = null)\n    {\n        $alt = is_null($alt) ? pathinfo($path, PATHINFO_BASENAME) : $alt;\n\n        return sprintf('<img src=\"%s\" alt=\"%s\" title=\"%s\"/>', htmlspecialchars($path), htmlspecialchars($alt), htmlspecialchars($alt));\n    }\n\n    public function twig_script_tag($path)\n    {\n        return sprintf('<script type=\"text/javascript\" src=\"%s?%s\"></script>', $path, \\FOSSBilling\\Version::VERSION);\n    }\n\n    public function twig_stylesheet_tag($path, $media = 'screen')\n    {\n        return sprintf('<link rel=\"stylesheet\" type=\"text/css\" href=\"%s?v=%s\" media=\"%s\" />', $path, \\FOSSBilling\\Version::VERSION, $media);\n    }\n\n    public function twig_gravatar_filter($email, $size = 20)\n    {\n        $url = 'https://www.gravatar.com/avatar/';\n        $url .= md5(strtolower(trim($email)));\n        $url .= \"?s=$size&d=mp&r=g\";\n        return $url;\n    }\n\n    public function twig_autolink_filter($text)\n    {\n        $pattern = '#\\b(([\\w-]+://?|www[.])[^\\s()<>]+(?:\\([\\w\\d]+\\)|([^[:punct:]\\s]|/)))#';\n\n        $callback = function ($matches) {\n            $url = array_shift($matches);\n            $url_parts = parse_url($url);\n\n            if (!isset($url_parts['scheme'])) {\n                $url = 'http://' . $url;\n            }\n\n            return sprintf('<a target=\"_blank\" href=\"%s\">%s</a>', $url, $url);\n        };\n\n        return preg_replace_callback($pattern, $callback, $text);\n    }\n\n    public function twig_number_filter($number, $decimals = 2, $dec_point = '.', $thousands_sep = '')\n    {\n        if (is_null($number)) {\n            $number = '0';\n        }\n        return number_format(floatval($number), $decimals, $dec_point, $thousands_sep);\n    }\n\n    public function twig_daysleft_filter($iso8601)\n    {\n        $timediff = strtotime($iso8601) - time();\n\n        return intval($timediff / 86400);\n    }\n\n    public function twig_timeago_filter($iso8601)\n    {\n        $cur_tm = time();\n        $dif = $cur_tm - strtotime($iso8601);\n        $pds = [__trans('second'), __trans('minute'), __trans('hour'), __trans('day'), __trans('week'), __trans('month'), __trans('year'), __trans('decade')];\n        $lngh = [1, 60, 3600, 86400, 604800, 2630880, 31570560, 315705600];\n        $no = 0;\n\n        for ($v = sizeof($lngh) - 1; ($v >= 0) && (($no = $dif / $lngh[$v]) <= 1); --$v) {\n        }\n\n        if ($v < 0) {\n            $v = 0;\n        }\n\n        $_tm = $cur_tm - ($dif % $lngh[$v]);\n\n        $no = floor($no);\n\n        if (1 != $no) {\n            $pds[$v] .= 's';\n        }\n        $x = sprintf('%d %s ', $no, $pds[$v]);\n\n        return $x;\n    }\n\n    public function twig_size_filter($value)\n    {\n        $precision = 2;\n        $units = ['B', 'KB', 'MB', 'GB', 'TB'];\n\n        $bytes = max($value, 0);\n        $pow = floor(($bytes ? log($bytes) : 0) / log(1024));\n        $pow = min($pow, count($units) - 1);\n\n        $bytes /= pow(1024, $pow);\n\n        return round($bytes, $precision) . ' ' . $units[$pow];\n    }\n\n    public function twig_markdown_filter(Twig\\Environment $env, $value)\n    {\n        $content = $value ?? '';\n        $markdownParser = new GithubFlavoredMarkdownConverter(['html_input' => 'escape', 'allow_unsafe_links' => false, 'max_nesting_level' => 50]);\n        return $markdownParser->convert($content);\n    }\n\n    public function twig_truncate_filter(Twig\\Environment $env, $value, $length = 30, $preserve = false, $separator = '...')\n    {\n        mb_internal_encoding('UTF-8');\n\n        if (is_null($value)) {\n            $value = '';\n        }\n        if (mb_strlen($value) > $length) {\n            if ($preserve) {\n                if (false !== ($breakpoint = mb_strpos($value, ' ', $length))) {\n                    $length = $breakpoint;\n                }\n            }\n\n            return mb_substr($value, 0, $length) . $separator;\n        }\n\n        return $value;\n    }\n\n    public function filteredFilter($array, $arrow)\n    {\n        if (!$arrow instanceof Closure) {\n            return;\n        }\n\n        return array_filter($array, $arrow, \\ARRAY_FILTER_USE_BOTH);\n    }\n\n    public function filteredMap($array, $arrow)\n    {\n        if (!$arrow instanceof Closure) {\n            return;\n        }\n\n        $r = [];\n        foreach ($array as $k => $v) {\n            $r[$k] = $arrow($v, $k);\n        }\n\n        return $r;\n    }\n\n    public function filteredReduce($array, $arrow, $initial = null)\n    {\n        if (!$arrow instanceof Closure) {\n            return;\n        }\n\n        $accumulator = $initial;\n        foreach ($array as $key => $value) {\n            $accumulator = $arrow($accumulator, $value, $key);\n        }\n\n        return $accumulator;\n    }\n\n    public function filteredSort($array, $arrow)\n    {\n        if (!$arrow instanceof Closure) {\n            return;\n        }\n\n        if ($array instanceof \\Traversable) {\n            $array = iterator_to_array($array);\n        } elseif (!\\is_array($array)) {\n            return $array;\n        }\n\n        if (null !== $arrow) {\n            uasort($array, $arrow);\n        } else {\n            asort($array);\n        }\n\n        return $array;\n    }\n}\n"], "filenames": ["src/library/Box/TwigExtensions.php"], "buggy_code_start_loc": [38], "buggy_code_end_loc": [320], "fixing_code_start_loc": [37], "fixing_code_end_loc": [368], "type": "CWE-94", "message": " Code Injection in GitHub repository fossbilling/fossbilling prior to 0.5.1.", "other": {"cve": {"id": "CVE-2023-3393", "sourceIdentifier": "security@huntr.dev", "published": "2023-06-23T19:15:09.793", "lastModified": "2023-06-30T07:33:35.807", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": " Code Injection in GitHub repository fossbilling/fossbilling prior to 0.5.1."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.2, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.2, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:H/PR:H/UI:N/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.0, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.3, "impactScore": 6.0}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:fossbilling:fossbilling:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.5.1", "matchCriteriaId": "308FAB82-AE79-4B96-B839-105B4B3ED66E"}]}]}], "references": [{"url": "https://github.com/fossbilling/fossbilling/commit/47343fb58db5c17c14bc6941dacbeb9c96957351", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/e4df9280-900a-407a-a07e-e7fef3345914", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/fossbilling/fossbilling/commit/47343fb58db5c17c14bc6941dacbeb9c96957351"}}