{"buggy_code": ["name: \"Combine PRs\"\n\n# Controls when the action will run - in this case triggered manually\non:\n  workflow_dispatch:\n    inputs:\n      branchPrefix:\n        description: \"Branch prefix to find combinable PRs based on\"\n        required: true\n        default: \"dependabot\"\n      mustBeGreen:\n        description: \"Only combine PRs that are green (status is success)\"\n        required: true\n        default: true\n      combineBranchName:\n        description: \"Name of the branch to combine PRs into\"\n        required: true\n        default: \"combine-prs-branch\"\n      ignoreLabel:\n        description: \"Exclude PRs with this label\"\n        required: true\n        default: \"nocombine\"\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"combine-prs\"\n  combine-prs:\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n      - uses: actions/github-script@v3\n        id: fetch-branch-names\n        name: Fetch branch names\n        with:\n          github-token: ${{secrets.GITHUB_TOKEN}}\n          script: |\n            const pulls = await github.paginate('GET /repos/:owner/:repo/pulls', {\n              owner: context.repo.owner,\n              repo: context.repo.repo\n            });\n            branches = [];\n            prs = [];\n            base_branch = null;\n            for (const pull of pulls) {\n              const branch = pull['head']['ref'];\n              console.log('Pull for branch: ' + branch);\n              if (branch.startsWith('${{ github.event.inputs.branchPrefix }}')) {\n                console.log('Branch matched: ' + branch);\n                statusOK = true;\n                if(${{ github.event.inputs.mustBeGreen }}) {\n                  console.log('Checking green status: ' + branch);\n                  const statuses = await github.paginate('GET /repos/{owner}/{repo}/commits/{ref}/status', {\n                    owner: context.repo.owner,\n                    repo: context.repo.repo,\n                    ref: branch\n                  });\n                  if(statuses.length > 0) {\n                    const latest_status = statuses[0]['state'];\n                    console.log('Validating status: ' + latest_status);\n                    if(latest_status != 'success') {\n                      console.log('Discarding ' + branch + ' with status ' + latest_status);\n                      statusOK = false;\n                    }\n                  }\n                }\n                console.log('Checking labels: ' + branch);\n                const labels = pull['labels'];\n                for(const label of labels) {\n                  const labelName = label['name'];\n                  console.log('Checking label: ' + labelName);\n                  if(labelName == '${{ github.event.inputs.ignoreLabel }}') {\n                    console.log('Discarding ' + branch + ' with label ' + labelName);\n                    statusOK = false;\n                  }\n                }\n                if (statusOK) {\n                  console.log('Adding branch to array: ' + branch);\n                  branches.push(branch);\n                  prs.push('#' + pull['number'] + ' ' + pull['title']);\n                  base_branch = pull['base']['ref'];\n                }\n              }\n            }\n\n            if (branches.length == 0) {\n              core.setFailed('No PRs/branches matched criteria');\n              return;\n            }\n\n            core.setOutput('base-branch', base_branch);\n            core.setOutput('prs-string', prs.join('\\n'));\n\n            combined = branches.join(' ')\n            console.log('Combined: ' + combined);\n            return combined\n      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\n      - uses: actions/checkout@v2.3.3\n        with:\n          fetch-depth: 0\n      # Creates a branch with other PR branches merged together\n      - name: Created combined branch\n        env:\n          BASE_BRANCH: ${{ steps.fetch-branch-names.outputs.base-branch }}\n          BRANCHES_TO_COMBINE: ${{ steps.fetch-branch-names.outputs.result }}\n          COMBINE_BRANCH_NAME: ${{ github.event.inputs.combineBranchName }}\n        run: |\n          echo \"${{steps.fetch-branch-names.outputs.result}}\"\n          sourcebranches=\"${BRANCHES_TO_COMBINE%\\\"}\"\n          sourcebranches=\"${sourcebranches#\\\"}\"\n\n          basebranch=\"${BASE_BRANCH%\\\"}\"\n          basebranch=\"${basebranch#\\\"}\"\n\n          git config pull.rebase false\n          git config user.name github-actions\n          git config user.email github-actions@github.com\n\n          git branch $COMBINE_BRANCH_NAME $basebranch\n          git checkout $COMBINE_BRANCH_NAME\n          git pull origin $sourcebranches --no-edit\n          git push origin $COMBINE_BRANCH_NAME\n      # Creates a PR with the new combined branch\n      - uses: actions/github-script@v3\n        name: Create Combined Pull Request\n        with:\n          github-token: ${{secrets.GITHUB_TOKEN}}\n          script: |\n            const prString = `${{ steps.fetch-branch-names.outputs.prs-string }}`;\n            const body = 'This PR was created by the Combine PRs action by combining the following PRs:\\n' + prString;\n            await github.pulls.create({\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              title: 'Combined PR',\n              head: '${{ github.event.inputs.combineBranchName }}',\n              base: '${{ steps.fetch-branch-names.outputs.base-branch }}',\n              body: body\n            });\n"], "fixing_code": ["name: \"Combine PRs\"\n\n# Controls when the action will run - in this case triggered manually\non:\n  workflow_dispatch:\n    inputs:\n      branchPrefix:\n        description: \"Branch prefix to find combinable PRs based on\"\n        required: true\n        default: \"dependabot\"\n      mustBeGreen:\n        description: \"Only combine PRs that are green (status is success)\"\n        required: true\n        default: true\n      combineBranchName:\n        description: \"Name of the branch to combine PRs into\"\n        required: true\n        default: \"combine-prs-branch\"\n      ignoreLabel:\n        description: \"Exclude PRs with this label\"\n        required: true\n        default: \"nocombine\"\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"combine-prs\"\n  combine-prs:\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n      - uses: actions/github-script@v3\n        id: fetch-branch-names\n        name: Fetch branch names\n        with:\n          github-token: ${{secrets.GITHUB_TOKEN}}\n          script: |\n            const pulls = await github.paginate('GET /repos/:owner/:repo/pulls', {\n              owner: context.repo.owner,\n              repo: context.repo.repo\n            });\n            branches = [];\n            prs = [];\n            base_branch = null;\n            for (const pull of pulls) {\n              const branch = pull['head']['ref'];\n              console.log('Pull for branch: ' + branch);\n              if (branch.startsWith('${{ github.event.inputs.branchPrefix }}')) {\n                console.log('Branch matched: ' + branch);\n                statusOK = true;\n                if(${{ github.event.inputs.mustBeGreen }}) {\n                  console.log('Checking green status: ' + branch);\n                  const statuses = await github.paginate('GET /repos/{owner}/{repo}/commits/{ref}/status', {\n                    owner: context.repo.owner,\n                    repo: context.repo.repo,\n                    ref: branch\n                  });\n                  if(statuses.length > 0) {\n                    const latest_status = statuses[0]['state'];\n                    console.log('Validating status: ' + latest_status);\n                    if(latest_status != 'success') {\n                      console.log('Discarding ' + branch + ' with status ' + latest_status);\n                      statusOK = false;\n                    }\n                  }\n                }\n                console.log('Checking labels: ' + branch);\n                const labels = pull['labels'];\n                for(const label of labels) {\n                  const labelName = label['name'];\n                  console.log('Checking label: ' + labelName);\n                  if(labelName == '${{ github.event.inputs.ignoreLabel }}') {\n                    console.log('Discarding ' + branch + ' with label ' + labelName);\n                    statusOK = false;\n                  }\n                }\n                if (statusOK) {\n                  console.log('Adding branch to array: ' + branch);\n                  branches.push(branch);\n                  prs.push('#' + pull['number'] + ' ' + pull['title']);\n                  base_branch = pull['base']['ref'];\n                }\n              }\n            }\n\n            if (branches.length == 0) {\n              core.setFailed('No PRs/branches matched criteria');\n              return;\n            }\n\n            core.setOutput('base-branch', base_branch);\n            core.setOutput('prs-string', prs.join('\\n'));\n\n            combined = branches.join(' ')\n            console.log('Combined: ' + combined);\n            return combined\n      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\n      - uses: actions/checkout@v2.3.3\n        with:\n          fetch-depth: 0\n      # Creates a branch with other PR branches merged together\n      - name: Created combined branch\n        env:\n          BASE_BRANCH: ${{ steps.fetch-branch-names.outputs.base-branch }}\n          BRANCHES_TO_COMBINE: ${{ steps.fetch-branch-names.outputs.result }}\n          COMBINE_BRANCH_NAME: ${{ github.event.inputs.combineBranchName }}\n        run: |\n          echo \"$BRANCHES_TO_COMBINE\"\n          sourcebranches=\"${BRANCHES_TO_COMBINE%\\\"}\"\n          sourcebranches=\"${sourcebranches#\\\"}\"\n\n          basebranch=\"${BASE_BRANCH%\\\"}\"\n          basebranch=\"${basebranch#\\\"}\"\n\n          git config pull.rebase false\n          git config user.name github-actions\n          git config user.email github-actions@github.com\n\n          git branch $COMBINE_BRANCH_NAME $basebranch\n          git checkout $COMBINE_BRANCH_NAME\n          git pull origin $sourcebranches --no-edit\n          git push origin $COMBINE_BRANCH_NAME\n      # Creates a PR with the new combined branch\n      - uses: actions/github-script@v3\n        name: Create Combined Pull Request\n        env:\n          PRS_STRING: ${{ steps.fetch-branch-names.outputs.prs-string }}\n        with:\n          github-token: ${{secrets.GITHUB_TOKEN}}\n          script: |\n            const prString = process.env.PRS_STRING;\n            const body = 'This PR was created by the Combine PRs action by combining the following PRs:\\n' + prString;\n            await github.pulls.create({\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              title: 'Combined PR',\n              head: '${{ github.event.inputs.combineBranchName }}',\n              base: '${{ steps.fetch-branch-names.outputs.base-branch }}',\n              body: body\n            });\n"], "filenames": [".github/workflows/combine-prs.yml"], "buggy_code_start_loc": [109], "buggy_code_end_loc": [131], "fixing_code_start_loc": [109], "fixing_code_end_loc": [133], "type": "CWE-78", "message": "A vulnerability was found in Brave UX for-the-badge and classified as critical. Affected by this issue is some unknown functionality of the file .github/workflows/combine-prs.yml. The manipulation leads to os command injection. The name of the patch is 55b5a234c0fab935df5fb08365bc8fe9c37cf46b. It is recommended to apply a patch to fix this issue. VDB-216842 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2021-4281", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-26T20:15:10.580", "lastModified": "2023-01-05T16:38:18.490", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in Brave UX for-the-badge and classified as critical. Affected by this issue is some unknown functionality of the file .github/workflows/combine-prs.yml. The manipulation leads to os command injection. The name of the patch is 55b5a234c0fab935df5fb08365bc8fe9c37cf46b. It is recommended to apply a patch to fix this issue. VDB-216842 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 4.6, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.2, "impactScore": 3.4}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-78"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:forthebadge:for_the_badge:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.2.0", "matchCriteriaId": "EBDF360C-7DF2-4EC5-9A44-15C905B61FE0"}]}]}], "references": [{"url": "https://github.com/BraveUX/for-the-badge/commit/55b5a234c0fab935df5fb08365bc8fe9c37cf46b", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/BraveUX/for-the-badge/pull/165", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.216842", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.216842", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/BraveUX/for-the-badge/commit/55b5a234c0fab935df5fb08365bc8fe9c37cf46b"}}