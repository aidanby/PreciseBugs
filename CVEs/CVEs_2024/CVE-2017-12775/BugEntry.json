{"buggy_code": ["<?php\n/*\n\tQuestion2Answer by Gideon Greenspan and contributors\n\thttp://www.question2answer.org/\n\n\tFile: qa-include/qa-install.php\n\tDescription: User interface for installing, upgrading and fixing the database\n\n\n\tThis program is free software; you can redistribute it and/or\n\tmodify it under the terms of the GNU General Public License\n\tas published by the Free Software Foundation; either version 2\n\tof the License, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tMore about this license: http://www.question2answer.org/license.php\n*/\n\nif (!defined('QA_VERSION')) { // don't allow this page to be requested directly from browser\n\theader('Location: ../');\n\texit;\n}\n\nrequire_once QA_INCLUDE_DIR.'db/install.php';\n\nqa_report_process_stage('init_install');\n\n\n// Define database failure handler for install process, if not defined already (file could be included more than once)\n\nif (!function_exists('qa_install_db_fail_handler')) {\n\t/**\n\t * Handler function for database failures during the installation process\n\t */\n\tfunction qa_install_db_fail_handler($type, $errno=null, $error=null, $query=null)\n\t{\n\t\tglobal $pass_failure_from_install;\n\n\t\t$pass_failure_type = $type;\n\t\t$pass_failure_errno = $errno;\n\t\t$pass_failure_error = $error;\n\t\t$pass_failure_query = $query;\n\t\t$pass_failure_from_install = true;\n\n\t\trequire QA_INCLUDE_DIR.'qa-install.php';\n\n\t\tqa_exit('error');\n\t}\n}\n\n\n$success = '';\n$errorhtml = '';\n$suggest = '';\n$buttons = array();\n$fields = array();\n$fielderrors = array();\n$hidden = array();\n\n\n// Process user handling higher up to avoid 'headers already sent' warning\n\nif (!isset($pass_failure_type) && qa_clicked('super')) {\n\trequire_once QA_INCLUDE_DIR.'db/users.php';\n\trequire_once QA_INCLUDE_DIR.'app/users-edit.php';\n\n\t$inemail = qa_post_text('email');\n\t$inpassword = qa_post_text('password');\n\t$inhandle = qa_post_text('handle');\n\n\t$fielderrors = array_merge(\n\t\tqa_handle_email_filter($inhandle, $inemail),\n\t\tqa_password_validate($inpassword)\n\t);\n\n\tif (empty($fielderrors)) {\n\t\trequire_once QA_INCLUDE_DIR.'app/users.php';\n\n\t\t$userid = qa_create_new_user($inemail, $inpassword, $inhandle, QA_USER_LEVEL_SUPER);\n\t\tqa_set_logged_in_user($userid, $inhandle);\n\n\t\tqa_set_option('feedback_email', $inemail);\n\n\t\t$success .= \"Congratulations - Your Question2Answer site is ready to go!\\n\\nYou are logged in as the super administrator and can start changing settings.\\n\\nThank you for installing Question2Answer.\";\n\t}\n}\n\n\n//\tOutput start of HTML early, so we can see a nicely-formatted list of database queries when upgrading\n\n?><!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<style>\n\t\t\tbody, input { font: 16px Verdana, Arial, Helvetica, sans-serif; }\n\t\t\tbody { text-align: center; width: 640px; margin: 64px auto; }\n\t\t\ttable { margin: 16px auto; }\n\t\t\tth, td { padding: 2px; }\n\t\t\tth { text-align: right; font-weight: normal; }\n\t\t\ttd { text-align: left; }\n\t\t\t.msg-success { color: #090; }\n\t\t\t.msg-error { color: #b00; }\n\t\t</style>\n\t</head>\n\t<body>\n<?php\n\n\nif (isset($pass_failure_type)) {\n\t// this page was requested due to query failure, via the fail handler\n\tswitch ($pass_failure_type) {\n\t\tcase 'connect':\n\t\t\t$errorhtml .= 'Could not establish database connection. Please check the username, password and hostname in the config file, and if necessary set up the appropriate MySQL user and privileges.';\n\t\t\tbreak;\n\n\t\tcase 'select':\n\t\t\t$errorhtml .= 'Could not switch to the Question2Answer database. Please check the database name in the config file, and if necessary create the database in MySQL and grant appropriate user privileges.';\n\t\t\tbreak;\n\n\t\tcase 'query':\n\t\t\tglobal $pass_failure_from_install;\n\n\t\t\tif (@$pass_failure_from_install)\n\t\t\t\t$errorhtml .= \"Question2Answer was unable to perform the installation query below. Please check the user in the config file has CREATE and ALTER permissions:\\n\\n\".qa_html($pass_failure_query.\"\\n\\nError \".$pass_failure_errno.\": \".$pass_failure_error.\"\\n\\n\");\n\t\t\telse\n\t\t\t\t$errorhtml .= \"A Question2Answer database query failed when generating this page.\\n\\nA full description of the failure is available in the web server's error log file.\";\n\t\t\tbreak;\n\t}\n}\nelse {\n\t// this page was requested by user GET/POST, so handle any incoming clicks on buttons\n\tqa_db_connect('qa_install_db_fail_handler');\n\n\tif (qa_clicked('create')) {\n\t\tqa_db_install_tables();\n\n\t\tif (QA_FINAL_EXTERNAL_USERS) {\n\t\t\tif (defined('QA_FINAL_WORDPRESS_INTEGRATE_PATH')) {\n\t\t\t\trequire_once QA_INCLUDE_DIR.'db/admin.php';\n\t\t\t\trequire_once QA_INCLUDE_DIR.'app/format.php';\n\n\t\t\t\t// create link back to WordPress home page\n\t\t\t\tqa_db_page_move(qa_db_page_create(get_option('blogname'), QA_PAGE_FLAGS_EXTERNAL, get_option('home'), null, null, null), 'O', 1);\n\n\t\t\t\t$success .= 'Your Question2Answer database has been created and integrated with your WordPress site.';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$success .= 'Your Question2Answer database has been created for external user identity management. Please read the online documentation to complete integration.';\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t$success .= 'Your Question2Answer database has been created.';\n\t\t}\n\t}\n\n\tif (qa_clicked('nonuser')) {\n\t\tqa_db_install_tables();\n\t\t$success .= 'The additional Question2Answer database tables have been created.';\n\t}\n\n\tif (qa_clicked('upgrade')) {\n\t\tqa_db_upgrade_tables();\n\t\t$success .= 'Your Question2Answer database has been updated.';\n\t}\n\n\tif (qa_clicked('repair')) {\n\t\tqa_db_install_tables();\n\t\t$success .= 'The Question2Answer database tables have been repaired.';\n\t}\n\n\tif (qa_clicked('module')) {\n\t\t$moduletype = qa_post_text('moduletype');\n\t\t$modulename = qa_post_text('modulename');\n\n\t\t$module = qa_load_module($moduletype, $modulename);\n\n\t\t$queries = $module->init_queries(qa_db_list_tables());\n\n\t\tif (!empty($queries)) {\n\t\t\tif (!is_array($queries))\n\t\t\t\t$queries = array($queries);\n\n\t\t\tforeach ($queries as $query)\n\t\t\t\tqa_db_upgrade_query($query);\n\t\t}\n\n\t\t$success .= 'The '.$modulename.' '.$moduletype.' module has completed database initialization.';\n\t}\n\n}\n\nif (qa_db_connection(false) !== null && !@$pass_failure_from_install) {\n\t$check = qa_db_check_tables(); // see where the database is at\n\n\tswitch ($check) {\n\t\tcase 'none':\n\t\t\tif (@$pass_failure_errno == 1146) // don't show error if we're in installation process\n\t\t\t\t$errorhtml = '';\n\n\t\t\t$errorhtml .= 'Welcome to Question2Answer. It\\'s time to set up your database!';\n\n\t\t\tif (QA_FINAL_EXTERNAL_USERS) {\n\t\t\t\tif (defined('QA_FINAL_WORDPRESS_INTEGRATE_PATH')) {\n\t\t\t\t\t$errorhtml .= \"\\n\\nWhen you click below, your Question2Answer site will be set up to integrate with the users of your WordPress site <a href=\\\"\".qa_html(get_option('home')).\"\\\" target=\\\"_blank\\\">\".qa_html(get_option('blogname')).\"</a>. Please consult the online documentation for more information.\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$errorhtml .= \"\\n\\nWhen you click below, your Question2Answer site will be set up to integrate with your existing user database and management. Users will be referenced with database column type \".qa_html(qa_get_mysql_user_column_type()).\". Please consult the online documentation for more information.\";\n\t\t\t\t}\n\n\t\t\t\t$buttons = array('create' => 'Set up the Database');\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$errorhtml .= \"\\n\\nWhen you click below, your Question2Answer database will be set up to manage user identities and logins internally.\\n\\nIf you want to offer a single sign-on for an existing user base or website, please consult the online documentation before proceeding.\";\n\t\t\t\t$buttons = array('create' => 'Set up the Database including User Management');\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'old-version':\n\t\t\t// don't show error if we need to upgrade\n\t\t\tif (!@$pass_failure_from_install)\n\t\t\t\t$errorhtml = '';\n\n\t\t\t// don't show error before this\n\t\t\t$errorhtml .= 'Your Question2Answer database needs to be upgraded for this version of the software.';\n\t\t\t$buttons = array('upgrade' => 'Upgrade the Database');\n\t\t\tbreak;\n\n\t\tcase 'non-users-missing':\n\t\t\t$errorhtml = 'This Question2Answer site is sharing its users with another Q2A site, but it needs some additional database tables for its own content. Please click below to create them.';\n\t\t\t$buttons = array('nonuser' => 'Set up the Tables');\n\t\t\tbreak;\n\n\t\tcase 'table-missing':\n\t\t\t$errorhtml .= 'One or more tables are missing from your Question2Answer database.';\n\t\t\t$buttons = array('repair' => 'Repair the Database');\n\t\t\tbreak;\n\n\t\tcase 'column-missing':\n\t\t\t$errorhtml .= 'One or more Question2Answer database tables are missing a column.';\n\t\t\t$buttons = array('repair' => 'Repair the Database');\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\trequire_once QA_INCLUDE_DIR.'db/admin.php';\n\n\t\t\tif (!QA_FINAL_EXTERNAL_USERS && qa_db_count_users() == 0) {\n\t\t\t\t$errorhtml .= \"There are currently no users in the Question2Answer database.\\n\\nPlease enter your details below to create the super administrator:\";\n\t\t\t\t$fields = array(\n\t\t\t\t\t'handle' => array('label' => 'Username:', 'type' => 'text'),\n\t\t\t\t\t'password' => array('label' => 'Password:', 'type' => 'password'),\n\t\t\t\t\t'email' => array('label' => 'Email address:', 'type' => 'text'),\n\t\t\t\t);\n\t\t\t\t$buttons = array('super' => 'Set up the Super Administrator');\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$tables = qa_db_list_tables();\n\n\t\t\t\t$moduletypes = qa_list_module_types();\n\n\t\t\t\tforeach ($moduletypes as $moduletype) {\n\t\t\t\t\t$modules = qa_load_modules_with($moduletype, 'init_queries');\n\n\t\t\t\t\tforeach ($modules as $modulename => $module) {\n\t\t\t\t\t\t$queries = $module->init_queries($tables);\n\t\t\t\t\t\tif (!empty($queries)) {\n\t\t\t\t\t\t\t// also allows single query to be returned\n\t\t\t\t\t\t\t$errorhtml = strtr(qa_lang_html('admin/module_x_database_init'), array(\n\t\t\t\t\t\t\t\t'^1' => qa_html($modulename),\n\t\t\t\t\t\t\t\t'^2' => qa_html($moduletype),\n\t\t\t\t\t\t\t\t'^3' => '',\n\t\t\t\t\t\t\t\t'^4' => '',\n\t\t\t\t\t\t\t));\n\n\t\t\t\t\t\t\t$buttons = array('module' => 'Initialize the Database');\n\n\t\t\t\t\t\t\t$hidden['moduletype'] = $moduletype;\n\t\t\t\t\t\t\t$hidden['modulename'] = $modulename;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n}\n\nif (empty($errorhtml)) {\n\tif (empty($success))\n\t\t$success = 'Your Question2Answer database has been checked with no problems.';\n\n\t$suggest = '<a href=\"'.qa_path_html('admin', null, null, QA_URL_FORMAT_SAFEST).'\">Go to admin center</a>';\n}\n\n?>\n\n\t\t<form method=\"post\" action=\"<?php echo qa_path_html('install', null, null, QA_URL_FORMAT_SAFEST)?>\">\n\n<?php\n\nif (strlen($success))\n\techo '<p class=\"msg-success\">'.nl2br(qa_html($success)).'</p>';\n\nif (strlen($errorhtml))\n\techo '<p class=\"msg-error\">'.nl2br($errorhtml).'</p>';\n\nif (strlen($suggest))\n\techo '<p>'.$suggest.'</p>';\n\n\n//\tVery simple general form display logic (we don't use theme since it depends on tons of DB options)\n\nif (count($fields)) {\n\techo '<table>';\n\n\tforeach ($fields as $name => $field) {\n\t\techo '<tr>';\n\t\techo '<th>'.qa_html($field['label']).'</th>';\n\t\techo '<td><input type=\"'.qa_html($field['type']).'\" size=\"24\" name=\"'.qa_html($name).'\" value=\"'.qa_html(@${'in'.$name}).'\"></td>';\n\t\tif (isset($fielderrors[$name]))\n\t\t\techo '<td class=\"msg-error\"><small>'.qa_html($fielderrors[$name]).'</small></td>';\n\t\telse\n\t\t\techo '<td></td>';\n\t\techo '</tr>';\n\t}\n\n\techo '</table>';\n}\n\nforeach ($buttons as $name => $value)\n\techo '<input type=\"submit\" name=\"'.qa_html($name).'\" value=\"'.qa_html($value).'\">';\n\nforeach ($hidden as $name => $value)\n\techo '<input type=\"hidden\" name=\"'.qa_html($name).'\" value=\"'.qa_html($value).'\">';\n\nqa_db_disconnect();\n\n?>\n\n\t\t</form>\n\t</body>\n</html>\n"], "fixing_code": ["<?php\n/*\n\tQuestion2Answer by Gideon Greenspan and contributors\n\thttp://www.question2answer.org/\n\n\tFile: qa-include/qa-install.php\n\tDescription: User interface for installing, upgrading and fixing the database\n\n\n\tThis program is free software; you can redistribute it and/or\n\tmodify it under the terms of the GNU General Public License\n\tas published by the Free Software Foundation; either version 2\n\tof the License, or (at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tMore about this license: http://www.question2answer.org/license.php\n*/\n\nif (!defined('QA_VERSION')) { // don't allow this page to be requested directly from browser\n\theader('Location: ../');\n\texit;\n}\n\nrequire_once QA_INCLUDE_DIR.'db/install.php';\n\nqa_report_process_stage('init_install');\n\n\n// Define database failure handler for install process, if not defined already (file could be included more than once)\n\nif (!function_exists('qa_install_db_fail_handler')) {\n\t/**\n\t * Handler function for database failures during the installation process\n\t */\n\tfunction qa_install_db_fail_handler($type, $errno=null, $error=null, $query=null)\n\t{\n\t\tglobal $pass_failure_from_install;\n\n\t\t$pass_failure_type = $type;\n\t\t$pass_failure_errno = $errno;\n\t\t$pass_failure_error = $error;\n\t\t$pass_failure_query = $query;\n\t\t$pass_failure_from_install = true;\n\n\t\trequire QA_INCLUDE_DIR.'qa-install.php';\n\n\t\tqa_exit('error');\n\t}\n}\n\n\n$success = '';\n$errorhtml = '';\n$suggest = '';\n$buttons = array();\n$fields = array();\n$fielderrors = array();\n$hidden = array();\n\n\n// Process user handling higher up to avoid 'headers already sent' warning\n\nif (!isset($pass_failure_type) && qa_clicked('super')) {\n\trequire_once QA_INCLUDE_DIR.'db/admin.php';\n\trequire_once QA_INCLUDE_DIR.'db/users.php';\n\trequire_once QA_INCLUDE_DIR.'app/users-edit.php';\n\n\tif (qa_db_count_users() == 0) { // prevent creating multiple accounts\n\t\t$inemail = qa_post_text('email');\n\t\t$inpassword = qa_post_text('password');\n\t\t$inhandle = qa_post_text('handle');\n\n\t\t$fielderrors = array_merge(\n\t\t\tqa_handle_email_filter($inhandle, $inemail),\n\t\t\tqa_password_validate($inpassword)\n\t\t);\n\n\t\tif (empty($fielderrors)) {\n\t\t\trequire_once QA_INCLUDE_DIR.'app/users.php';\n\n\t\t\t$userid = qa_create_new_user($inemail, $inpassword, $inhandle, QA_USER_LEVEL_SUPER);\n\t\t\tqa_set_logged_in_user($userid, $inhandle);\n\n\t\t\tqa_set_option('feedback_email', $inemail);\n\n\t\t\t$success .= \"Congratulations - Your Question2Answer site is ready to go!\\n\\nYou are logged in as the super administrator and can start changing settings.\\n\\nThank you for installing Question2Answer.\";\n\t\t}\n\t}\n}\n\n\n//\tOutput start of HTML early, so we can see a nicely-formatted list of database queries when upgrading\n\n?><!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<style>\n\t\t\tbody, input { font: 16px Verdana, Arial, Helvetica, sans-serif; }\n\t\t\tbody { text-align: center; width: 640px; margin: 64px auto; }\n\t\t\ttable { margin: 16px auto; }\n\t\t\tth, td { padding: 2px; }\n\t\t\tth { text-align: right; font-weight: normal; }\n\t\t\ttd { text-align: left; }\n\t\t\t.msg-success { color: #090; }\n\t\t\t.msg-error { color: #b00; }\n\t\t</style>\n\t</head>\n\t<body>\n<?php\n\n\nif (isset($pass_failure_type)) {\n\t// this page was requested due to query failure, via the fail handler\n\tswitch ($pass_failure_type) {\n\t\tcase 'connect':\n\t\t\t$errorhtml .= 'Could not establish database connection. Please check the username, password and hostname in the config file, and if necessary set up the appropriate MySQL user and privileges.';\n\t\t\tbreak;\n\n\t\tcase 'select':\n\t\t\t$errorhtml .= 'Could not switch to the Question2Answer database. Please check the database name in the config file, and if necessary create the database in MySQL and grant appropriate user privileges.';\n\t\t\tbreak;\n\n\t\tcase 'query':\n\t\t\tglobal $pass_failure_from_install;\n\n\t\t\tif (@$pass_failure_from_install)\n\t\t\t\t$errorhtml .= \"Question2Answer was unable to perform the installation query below. Please check the user in the config file has CREATE and ALTER permissions:\\n\\n\".qa_html($pass_failure_query.\"\\n\\nError \".$pass_failure_errno.\": \".$pass_failure_error.\"\\n\\n\");\n\t\t\telse\n\t\t\t\t$errorhtml .= \"A Question2Answer database query failed when generating this page.\\n\\nA full description of the failure is available in the web server's error log file.\";\n\t\t\tbreak;\n\t}\n}\nelse {\n\t// this page was requested by user GET/POST, so handle any incoming clicks on buttons\n\tqa_db_connect('qa_install_db_fail_handler');\n\n\tif (qa_clicked('create')) {\n\t\tqa_db_install_tables();\n\n\t\tif (QA_FINAL_EXTERNAL_USERS) {\n\t\t\tif (defined('QA_FINAL_WORDPRESS_INTEGRATE_PATH')) {\n\t\t\t\trequire_once QA_INCLUDE_DIR.'db/admin.php';\n\t\t\t\trequire_once QA_INCLUDE_DIR.'app/format.php';\n\n\t\t\t\t// create link back to WordPress home page\n\t\t\t\tqa_db_page_move(qa_db_page_create(get_option('blogname'), QA_PAGE_FLAGS_EXTERNAL, get_option('home'), null, null, null), 'O', 1);\n\n\t\t\t\t$success .= 'Your Question2Answer database has been created and integrated with your WordPress site.';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$success .= 'Your Question2Answer database has been created for external user identity management. Please read the online documentation to complete integration.';\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t$success .= 'Your Question2Answer database has been created.';\n\t\t}\n\t}\n\n\tif (qa_clicked('nonuser')) {\n\t\tqa_db_install_tables();\n\t\t$success .= 'The additional Question2Answer database tables have been created.';\n\t}\n\n\tif (qa_clicked('upgrade')) {\n\t\tqa_db_upgrade_tables();\n\t\t$success .= 'Your Question2Answer database has been updated.';\n\t}\n\n\tif (qa_clicked('repair')) {\n\t\tqa_db_install_tables();\n\t\t$success .= 'The Question2Answer database tables have been repaired.';\n\t}\n\n\tif (qa_clicked('module')) {\n\t\t$moduletype = qa_post_text('moduletype');\n\t\t$modulename = qa_post_text('modulename');\n\n\t\t$module = qa_load_module($moduletype, $modulename);\n\n\t\t$queries = $module->init_queries(qa_db_list_tables());\n\n\t\tif (!empty($queries)) {\n\t\t\tif (!is_array($queries))\n\t\t\t\t$queries = array($queries);\n\n\t\t\tforeach ($queries as $query)\n\t\t\t\tqa_db_upgrade_query($query);\n\t\t}\n\n\t\t$success .= 'The '.$modulename.' '.$moduletype.' module has completed database initialization.';\n\t}\n\n}\n\nif (qa_db_connection(false) !== null && !@$pass_failure_from_install) {\n\t$check = qa_db_check_tables(); // see where the database is at\n\n\tswitch ($check) {\n\t\tcase 'none':\n\t\t\tif (@$pass_failure_errno == 1146) // don't show error if we're in installation process\n\t\t\t\t$errorhtml = '';\n\n\t\t\t$errorhtml .= 'Welcome to Question2Answer. It\\'s time to set up your database!';\n\n\t\t\tif (QA_FINAL_EXTERNAL_USERS) {\n\t\t\t\tif (defined('QA_FINAL_WORDPRESS_INTEGRATE_PATH')) {\n\t\t\t\t\t$errorhtml .= \"\\n\\nWhen you click below, your Question2Answer site will be set up to integrate with the users of your WordPress site <a href=\\\"\".qa_html(get_option('home')).\"\\\" target=\\\"_blank\\\">\".qa_html(get_option('blogname')).\"</a>. Please consult the online documentation for more information.\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$errorhtml .= \"\\n\\nWhen you click below, your Question2Answer site will be set up to integrate with your existing user database and management. Users will be referenced with database column type \".qa_html(qa_get_mysql_user_column_type()).\". Please consult the online documentation for more information.\";\n\t\t\t\t}\n\n\t\t\t\t$buttons = array('create' => 'Set up the Database');\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$errorhtml .= \"\\n\\nWhen you click below, your Question2Answer database will be set up to manage user identities and logins internally.\\n\\nIf you want to offer a single sign-on for an existing user base or website, please consult the online documentation before proceeding.\";\n\t\t\t\t$buttons = array('create' => 'Set up the Database including User Management');\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'old-version':\n\t\t\t// don't show error if we need to upgrade\n\t\t\tif (!@$pass_failure_from_install)\n\t\t\t\t$errorhtml = '';\n\n\t\t\t// don't show error before this\n\t\t\t$errorhtml .= 'Your Question2Answer database needs to be upgraded for this version of the software.';\n\t\t\t$buttons = array('upgrade' => 'Upgrade the Database');\n\t\t\tbreak;\n\n\t\tcase 'non-users-missing':\n\t\t\t$errorhtml = 'This Question2Answer site is sharing its users with another Q2A site, but it needs some additional database tables for its own content. Please click below to create them.';\n\t\t\t$buttons = array('nonuser' => 'Set up the Tables');\n\t\t\tbreak;\n\n\t\tcase 'table-missing':\n\t\t\t$errorhtml .= 'One or more tables are missing from your Question2Answer database.';\n\t\t\t$buttons = array('repair' => 'Repair the Database');\n\t\t\tbreak;\n\n\t\tcase 'column-missing':\n\t\t\t$errorhtml .= 'One or more Question2Answer database tables are missing a column.';\n\t\t\t$buttons = array('repair' => 'Repair the Database');\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\trequire_once QA_INCLUDE_DIR.'db/admin.php';\n\n\t\t\tif (!QA_FINAL_EXTERNAL_USERS && qa_db_count_users() == 0) {\n\t\t\t\t$errorhtml .= \"There are currently no users in the Question2Answer database.\\n\\nPlease enter your details below to create the super administrator:\";\n\t\t\t\t$fields = array(\n\t\t\t\t\t'handle' => array('label' => 'Username:', 'type' => 'text'),\n\t\t\t\t\t'password' => array('label' => 'Password:', 'type' => 'password'),\n\t\t\t\t\t'email' => array('label' => 'Email address:', 'type' => 'text'),\n\t\t\t\t);\n\t\t\t\t$buttons = array('super' => 'Set up the Super Administrator');\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$tables = qa_db_list_tables();\n\n\t\t\t\t$moduletypes = qa_list_module_types();\n\n\t\t\t\tforeach ($moduletypes as $moduletype) {\n\t\t\t\t\t$modules = qa_load_modules_with($moduletype, 'init_queries');\n\n\t\t\t\t\tforeach ($modules as $modulename => $module) {\n\t\t\t\t\t\t$queries = $module->init_queries($tables);\n\t\t\t\t\t\tif (!empty($queries)) {\n\t\t\t\t\t\t\t// also allows single query to be returned\n\t\t\t\t\t\t\t$errorhtml = strtr(qa_lang_html('admin/module_x_database_init'), array(\n\t\t\t\t\t\t\t\t'^1' => qa_html($modulename),\n\t\t\t\t\t\t\t\t'^2' => qa_html($moduletype),\n\t\t\t\t\t\t\t\t'^3' => '',\n\t\t\t\t\t\t\t\t'^4' => '',\n\t\t\t\t\t\t\t));\n\n\t\t\t\t\t\t\t$buttons = array('module' => 'Initialize the Database');\n\n\t\t\t\t\t\t\t$hidden['moduletype'] = $moduletype;\n\t\t\t\t\t\t\t$hidden['modulename'] = $modulename;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n}\n\nif (empty($errorhtml)) {\n\tif (empty($success))\n\t\t$success = 'Your Question2Answer database has been checked with no problems.';\n\n\t$suggest = '<a href=\"'.qa_path_html('admin', null, null, QA_URL_FORMAT_SAFEST).'\">Go to admin center</a>';\n}\n\n?>\n\n\t\t<form method=\"post\" action=\"<?php echo qa_path_html('install', null, null, QA_URL_FORMAT_SAFEST)?>\">\n\n<?php\n\nif (strlen($success))\n\techo '<p class=\"msg-success\">'.nl2br(qa_html($success)).'</p>';\n\nif (strlen($errorhtml))\n\techo '<p class=\"msg-error\">'.nl2br($errorhtml).'</p>';\n\nif (strlen($suggest))\n\techo '<p>'.$suggest.'</p>';\n\n\n//\tVery simple general form display logic (we don't use theme since it depends on tons of DB options)\n\nif (count($fields)) {\n\techo '<table>';\n\n\tforeach ($fields as $name => $field) {\n\t\techo '<tr>';\n\t\techo '<th>'.qa_html($field['label']).'</th>';\n\t\techo '<td><input type=\"'.qa_html($field['type']).'\" size=\"24\" name=\"'.qa_html($name).'\" value=\"'.qa_html(@${'in'.$name}).'\"></td>';\n\t\tif (isset($fielderrors[$name]))\n\t\t\techo '<td class=\"msg-error\"><small>'.qa_html($fielderrors[$name]).'</small></td>';\n\t\telse\n\t\t\techo '<td></td>';\n\t\techo '</tr>';\n\t}\n\n\techo '</table>';\n}\n\nforeach ($buttons as $name => $value)\n\techo '<input type=\"submit\" name=\"'.qa_html($name).'\" value=\"'.qa_html($value).'\">';\n\nforeach ($hidden as $name => $value)\n\techo '<input type=\"hidden\" name=\"'.qa_html($name).'\" value=\"'.qa_html($value).'\">';\n\nqa_db_disconnect();\n\n?>\n\n\t\t</form>\n\t</body>\n</html>\n"], "filenames": ["qa-include/qa-install.php"], "buggy_code_start_loc": [67], "buggy_code_end_loc": [89], "fixing_code_start_loc": [68], "fixing_code_end_loc": [92], "type": "CWE-20", "message": "qa-include/qa-install.php in Question2Answer before 1.7.5 allows remote attackers to create multiple user accounts.", "other": {"cve": {"id": "CVE-2017-12775", "sourceIdentifier": "cve@mitre.org", "published": "2017-08-29T15:29:00.767", "lastModified": "2017-09-05T17:42:13.780", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "qa-include/qa-install.php in Question2Answer before 1.7.5 allows remote attackers to create multiple user accounts."}, {"lang": "es", "value": "qa-include/qa-install.php en Question2Answer en versiones anteriores a la 1.7.5 permite que atacantes remotos creen m\u00faltiples cuentas de usuario."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:question2answer:question2answer:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.7.4", "matchCriteriaId": "CA539195-06BF-4F80-A6FD-45B7314C36D7"}]}]}], "references": [{"url": "http://www.question2answer.org/versions.php", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "https://github.com/q2a/question2answer/commit/6013ca1c83bf232008f7be815c0e4821fb6b120a", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/q2a/question2answer/commit/6013ca1c83bf232008f7be815c0e4821fb6b120a"}}