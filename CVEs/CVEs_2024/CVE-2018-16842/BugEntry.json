{"buggy_code": ["/***************************************************************************\n *                                  _   _ ____  _\n *  Project                     ___| | | |  _ \\| |\n *                             / __| | | | |_) | |\n *                            | (__| |_| |  _ <| |___\n *                             \\___|\\___/|_| \\_\\_____|\n *\n * Copyright (C) 1998 - 2015, 2017, Daniel Stenberg, <daniel@haxx.se>, et al.\n *\n * This software is licensed as described in the file COPYING, which\n * you should have received as part of this distribution. The terms\n * are also available at https://curl.haxx.se/docs/copyright.html.\n *\n * You may opt to use, copy, modify, merge, publish, distribute and/or sell\n * copies of the Software, and permit persons to whom the Software is\n * furnished to do so, under the terms of the COPYING file.\n *\n * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n * KIND, either express or implied.\n *\n ***************************************************************************/\n#include \"tool_setup.h\"\n\n#define ENABLE_CURLX_PRINTF\n/* use our own printf() functions */\n#include \"curlx.h\"\n\n#include \"tool_cfgable.h\"\n#include \"tool_msgs.h\"\n\n#include \"memdebug.h\" /* keep this as LAST include */\n\n#define WARN_PREFIX \"Warning: \"\n#define NOTE_PREFIX \"Note: \"\n\nstatic void voutf(struct GlobalConfig *config,\n                  const char *prefix,\n                  const char *fmt,\n                  va_list ap)\n{\n  size_t width = (79 - strlen(prefix));\n  if(!config->mute) {\n    size_t len;\n    char *ptr;\n    char *print_buffer;\n\n    print_buffer = curlx_mvaprintf(fmt, ap);\n    if(!print_buffer)\n      return;\n    len = strlen(print_buffer);\n\n    ptr = print_buffer;\n    while(len > 0) {\n      fputs(prefix, config->errors);\n\n      if(len > width) {\n        size_t cut = width-1;\n\n        while(!ISSPACE(ptr[cut]) && cut) {\n          cut--;\n        }\n        if(0 == cut)\n          /* not a single cutting position was found, just cut it at the\n             max text width then! */\n          cut = width-1;\n\n        (void)fwrite(ptr, cut + 1, 1, config->errors);\n        fputs(\"\\n\", config->errors);\n        ptr += cut + 1; /* skip the space too */\n        len -= cut;\n      }\n      else {\n        fputs(ptr, config->errors);\n        len = 0;\n      }\n    }\n    curl_free(print_buffer);\n  }\n}\n\n/*\n * Emit 'note' formatted message on configured 'errors' stream, if verbose was\n * selected.\n */\nvoid notef(struct GlobalConfig *config, const char *fmt, ...)\n{\n  va_list ap;\n  va_start(ap, fmt);\n  if(config->tracetype)\n    voutf(config, NOTE_PREFIX, fmt, ap);\n  va_end(ap);\n}\n\n/*\n * Emit warning formatted message on configured 'errors' stream unless\n * mute (--silent) was selected.\n */\n\nvoid warnf(struct GlobalConfig *config, const char *fmt, ...)\n{\n  va_list ap;\n  va_start(ap, fmt);\n  voutf(config, WARN_PREFIX, fmt, ap);\n  va_end(ap);\n}\n/*\n * Emit help formatted message on given stream.\n */\n\nvoid helpf(FILE *errors, const char *fmt, ...)\n{\n  if(fmt) {\n    va_list ap;\n    va_start(ap, fmt);\n    fputs(\"curl: \", errors); /* prefix it */\n    vfprintf(errors, fmt, ap);\n    va_end(ap);\n  }\n  fprintf(errors, \"curl: try 'curl --help' \"\n#ifdef USE_MANUAL\n          \"or 'curl --manual' \"\n#endif\n          \"for more information\\n\");\n}\n"], "fixing_code": ["/***************************************************************************\n *                                  _   _ ____  _\n *  Project                     ___| | | |  _ \\| |\n *                             / __| | | | |_) | |\n *                            | (__| |_| |  _ <| |___\n *                             \\___|\\___/|_| \\_\\_____|\n *\n * Copyright (C) 1998 - 2015, 2017, Daniel Stenberg, <daniel@haxx.se>, et al.\n *\n * This software is licensed as described in the file COPYING, which\n * you should have received as part of this distribution. The terms\n * are also available at https://curl.haxx.se/docs/copyright.html.\n *\n * You may opt to use, copy, modify, merge, publish, distribute and/or sell\n * copies of the Software, and permit persons to whom the Software is\n * furnished to do so, under the terms of the COPYING file.\n *\n * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n * KIND, either express or implied.\n *\n ***************************************************************************/\n#include \"tool_setup.h\"\n\n#define ENABLE_CURLX_PRINTF\n/* use our own printf() functions */\n#include \"curlx.h\"\n\n#include \"tool_cfgable.h\"\n#include \"tool_msgs.h\"\n\n#include \"memdebug.h\" /* keep this as LAST include */\n\n#define WARN_PREFIX \"Warning: \"\n#define NOTE_PREFIX \"Note: \"\n\nstatic void voutf(struct GlobalConfig *config,\n                  const char *prefix,\n                  const char *fmt,\n                  va_list ap)\n{\n  size_t width = (79 - strlen(prefix));\n  if(!config->mute) {\n    size_t len;\n    char *ptr;\n    char *print_buffer;\n\n    print_buffer = curlx_mvaprintf(fmt, ap);\n    if(!print_buffer)\n      return;\n    len = strlen(print_buffer);\n\n    ptr = print_buffer;\n    while(len > 0) {\n      fputs(prefix, config->errors);\n\n      if(len > width) {\n        size_t cut = width-1;\n\n        while(!ISSPACE(ptr[cut]) && cut) {\n          cut--;\n        }\n        if(0 == cut)\n          /* not a single cutting position was found, just cut it at the\n             max text width then! */\n          cut = width-1;\n\n        (void)fwrite(ptr, cut + 1, 1, config->errors);\n        fputs(\"\\n\", config->errors);\n        ptr += cut + 1; /* skip the space too */\n        len -= cut + 1;\n      }\n      else {\n        fputs(ptr, config->errors);\n        len = 0;\n      }\n    }\n    curl_free(print_buffer);\n  }\n}\n\n/*\n * Emit 'note' formatted message on configured 'errors' stream, if verbose was\n * selected.\n */\nvoid notef(struct GlobalConfig *config, const char *fmt, ...)\n{\n  va_list ap;\n  va_start(ap, fmt);\n  if(config->tracetype)\n    voutf(config, NOTE_PREFIX, fmt, ap);\n  va_end(ap);\n}\n\n/*\n * Emit warning formatted message on configured 'errors' stream unless\n * mute (--silent) was selected.\n */\n\nvoid warnf(struct GlobalConfig *config, const char *fmt, ...)\n{\n  va_list ap;\n  va_start(ap, fmt);\n  voutf(config, WARN_PREFIX, fmt, ap);\n  va_end(ap);\n}\n/*\n * Emit help formatted message on given stream.\n */\n\nvoid helpf(FILE *errors, const char *fmt, ...)\n{\n  if(fmt) {\n    va_list ap;\n    va_start(ap, fmt);\n    fputs(\"curl: \", errors); /* prefix it */\n    vfprintf(errors, fmt, ap);\n    va_end(ap);\n  }\n  fprintf(errors, \"curl: try 'curl --help' \"\n#ifdef USE_MANUAL\n          \"or 'curl --manual' \"\n#endif\n          \"for more information\\n\");\n}\n"], "filenames": ["src/tool_msgs.c"], "buggy_code_start_loc": [70], "buggy_code_end_loc": [71], "fixing_code_start_loc": [70], "fixing_code_end_loc": [71], "type": "CWE-125", "message": "Curl versions 7.14.1 through 7.61.1 are vulnerable to a heap-based buffer over-read in the tool_msgs.c:voutf() function that may result in information exposure and denial of service.", "other": {"cve": {"id": "CVE-2018-16842", "sourceIdentifier": "secalert@redhat.com", "published": "2018-10-31T19:29:00.690", "lastModified": "2019-08-06T17:15:28.757", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Curl versions 7.14.1 through 7.61.1 are vulnerable to a heap-based buffer over-read in the tool_msgs.c:voutf() function that may result in information exposure and denial of service."}, {"lang": "es", "value": "Curl, desde la versi\u00f3n 7.14.1 hasta la 7.61.1, es vulnerable a una sobrelectura de b\u00fafer basada en memoria din\u00e1mica (heap) en la funci\u00f3n tool_msgs.c:voutf() que podr\u00eda resultar en una exposici\u00f3n de informaci\u00f3n y una denegaci\u00f3n de servicio (DoS)."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 9.1, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.2}, {"source": "secalert@redhat.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:L", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "LOW", "baseScore": 4.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 2.5}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 6.4}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-125"}]}, {"source": "secalert@redhat.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-125"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:haxx:curl:*:*:*:*:*:*:*:*", "versionStartIncluding": "7.14.1", "versionEndIncluding": "7.61.1", "matchCriteriaId": "770B33FC-61E9-43CF-AFBF-46DBBD8608CF"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:12.04:*:*:*:esm:*:*:*", "matchCriteriaId": "8D305F7A-D159-4716-AB26-5E38BB5CD991"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:14.04:*:*:*:lts:*:*:*", "matchCriteriaId": "B5A6F2F3-4894-4392-8296-3B8DD2679084"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:16.04:*:*:*:lts:*:*:*", "matchCriteriaId": "F7016A2A-8365-4F1A-89A2-7A19F2BCAE5B"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:18.04:*:*:*:lts:*:*:*", "matchCriteriaId": "23A7C53F-B80F-4E6A-AFA9-58EEA84BE11D"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:18.10:*:*:*:*:*:*:*", "matchCriteriaId": "07C312A0-CD2C-4B9C-B064-6409B25C278F"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*", "matchCriteriaId": "C11E6FB0-C8C0-4527-9AA0-CB9B316F8F43"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*", "matchCriteriaId": "DEECE5FC-CACF-4496-A3E7-164736409252"}]}]}], "references": [{"url": "http://www.securitytracker.com/id/1042014", "source": "secalert@redhat.com", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://access.redhat.com/errata/RHSA-2019:2181", "source": "secalert@redhat.com"}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-16842", "source": "secalert@redhat.com", "tags": ["Issue Tracking", "Third Party Advisory"]}, {"url": "https://curl.haxx.se/docs/CVE-2018-16842.html", "source": "secalert@redhat.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://github.com/curl/curl/commit/d530e92f59ae9bb2d47066c3c460b25d2ffeb211", "source": "secalert@redhat.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2018/11/msg00005.html", "source": "secalert@redhat.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://security.gentoo.org/glsa/201903-03", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://usn.ubuntu.com/3805-1/", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://usn.ubuntu.com/3805-2/", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://www.debian.org/security/2018/dsa-4331", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html", "source": "secalert@redhat.com"}]}, "github_commit_url": "https://github.com/curl/curl/commit/d530e92f59ae9bb2d47066c3c460b25d2ffeb211"}}