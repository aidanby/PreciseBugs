{"buggy_code": ["<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    include_once(\"include/management/functions.php\");\n\n    $file = (array_key_exists('file', $_POST) && isset($_POST['file'])) ? $_POST['file'] : \"\";\n\n    $backupAction = (array_key_exists('action', $_POST) && isset($_POST['action']) &&\n                     in_array($_POST['action'], array_keys($valid_backupActions))) ? $_POST['action'] : \"\";\n\n    $cols = array(\n                    t('all', 'CreationDate'),\n                    \"filename\" => t('all', 'Name'),\n                    \"Size\",\n                    t('all', 'Action'),\n                 );\n    $colspan = count($cols);\n    $half_colspan = intval($colspan / 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n\n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n    // init backup paths\n    $filePath = $configValues['CONFIG_PATH_DALO_VARIABLE_DATA'] . \"/backup\";\n    $fileName = sprintf(\"%s/%s\", $filePath, $file);\n    $baseFile = basename($fileName);\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        \n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n            \n            if (!empty($file) && !empty($backupAction) && is_dir($filePath) && is_readable($fileName)) {\n        \n                $fileContents = file_get_contents($fileName);\n                $fileLen = strlen($fileContents);\n                \n                if (!empty($fileContents)) {\n                \n                    switch($backupAction) {\n                    \n                        default:\n                        case \"download\":\n                        \n                            header(\"Content-type: application/sql\");\n                            header(sprintf(\"Content-Disposition: attachment; filename=%s; size=%d\", $baseFile, $fileLen));\n                            print $fileContents;\n\n                            exit; //~ break;\n                    \n                        case \"delete\":\n                            unlink($fileName);\n                            $successMsg = sprintf(\"Successfully performed %s action on backup file %s\",\n                                                  $backupAction, $baseFile);\n                            $logAction .= \"$successMsg on page: \";\n                            \n                            break;\n                    \n                        case \"rollback\":\n                        \n                            include('library/opendb.php');\n\n                            $rollBackQuery = explode(\"\\n\\n\\n\", $fileContents);\n                            \n                            $isError = 0;\n                            $tables = array();\n                            \n                            foreach ($rollBackQuery as $query) {\n                                $query = trim($query);\n                                \n                                // no need to use the full query, we do some check only on the first 200 chars\n                                $query200 = substr($query, 0, 200);\n                                \n                                if (!preg_match('/^INSERT\\s+INTO\\s+.*$/', $query200)) {\n                                    continue;\n                                }\n                                \n                                // we extract the <table> from the string: INSERT INTO <table>\n                                $table = trim(preg_split('/\\s+/', $query200)[2], '`');\n                                \n                                if (empty($table)) {\n                                    continue;\n                                }\n                                \n                                $queries = array(\n                                                    sprintf(\"DELETE FROM `%s`\", $table),\n                                                    \n                                                    // this is a large SQL query, hopefully database can handle it without overflowing\n                                                    $query\n                                                );\n                                \n                                // executing delete/insert queries\n                                foreach ($queries as $sql) {\n                                    $res = $dbSocket->query($sql);\n                                    if (DB::isError($res)) {\n                                        $isError++;\n                                        break;\n                                    }\n                                }\n                                \n                                $tables[] = $table;\n                            }\n                            \n                            include('library/closedb.php');\n\n                            if ($isError > 0) {\n                                $failureMsg = sprintf(\"Cannot %s backup file %s, please check file availability and permissions\",\n                                                      $backupAction, $baseFile);\n                                $logAction .= \"$failureMsg on page: \";\n                            } else {\n                                $successMsg = sprintf(\"Successfully performed %s of table(s) [%s] from source file %s\",\n                                                      $backupAction, implode(\", \", $tables), $baseFile);\n                                $logAction .= \"$successMsg on page: \";\n                            }\n                            \n                            break;\n                    }\n                    \n                } else {\n                    $failureMsg = sprintf(\"Cannot %s backup file %s, please check file availability and permissions\",\n                                          $backupAction, $baseFile);\n                    $logAction .= \"$failureMsg on page: \";\n                }\n\n            }\n\n\n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n    \n    // print HTML prologue\n    $title = t('Intro','configbackupmanagebackups.php');\n    $help = t('helpPage','configbackupmanagebackups');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-config-backup.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    include('include/management/pages_common.php');\n    \n    // get backup info\n    $backupInfo = array();\n    \n    if (is_dir($filePath)) {\n        $files = scandir($filePath);\n        if ($orderType == \"desc\") {\n            rsort($files);\n        }\n    \n        $skipList = array( \".\", \"..\", \".svn\", \".git\" );\n        foreach ($files as $file) {\n            \n            if (in_array($file, $skipList)) {\n                continue;\n            }\n\n            list($junk, $date, $time) = explode(\"-\", $file);\n            \n            $fileDate = substr($date, 0, 4) . \"-\" . substr($date, 4, 2) . \"-\" . substr($date, 6, 2);\n            $fileTime = substr($time, 0, 2) . \":\" . substr($time, 2, 2) . \":\" . substr($time, 4, 2);\n\n            $fileSize = filesize($filePath.\"/\".$file);\n            \n            $backupInfo[] = array(\n                                    sprintf(\"%s, %s\", $fileDate, $fileTime),\n                                    $file,\n                                    toxbyte($fileSize),\n                                 );\n            \n        }\n    }\n    \n    $numrows = count($backupInfo);\n    \n    if ($numrows > 0) {\n\n        $csrf_token = dalo_csrf_token();\n        $token = array( \"type\" => \"hidden\", \"name\" => \"csrf_token\", \"value\" => $csrf_token );\n\n        echo '<table border=\"0\" class=\"table1\">';\n\n        echo \"<tr>\";\n        printTableHead($cols, $orderBy, $orderType);\n        echo \"</tr>\";\n\n        $count = 0;\n        \n        foreach ($backupInfo as $row) {\n            $rowlen = count($row);\n            \n            echo \"<tr>\";\n            \n            // print escaped row elements\n            for ($i = 0; $i < $rowlen; $i++) {\n                printf(\"<td>%s</td>\", htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8'));\n            }\n            \n            // actions\n            echo \"<td>\";\n            \n            // create form for actions\n            $components = array( $token );\n            $components[] = array( \"type\" => \"hidden\", \"name\" => \"action\", \"value\" => \"\" );\n            $components[] = array( \"type\" => \"hidden\", \"name\" => \"file\", \"value\" => $row[1] );\n            \n            $form = array( \"name\" => sprintf(\"form-%d\", $count), \"hidden\" => true );\n            \n            open_form($form);\n            \n            foreach ($components as $component) {\n                print_form_component($component);\n            }\n            \n            close_form();\n            \n            // print actions\n            $actions = array();\n            \n            foreach ($valid_backupActions as $action => $label) {\n                $onclick = sprintf(\"performAction('form-%s', '%s')\", $count, $action);\n                $actions[] = sprintf('<a class=\"tablenovisit\" href=\"#\" onclick=\"%s\">%s</a>', $onclick, $label);\n            }\n\n            echo implode(\", \", $actions);\n            \n            echo \"</td>\";\n            echo \"</tr>\";\n\n            $count++;\n        }\n\n        echo '</table>';\n\n    } else {\n        // no backup file(s)\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('include/config/logging.php');\n    \n        $inline_extra_js = \"\nfunction performAction(formId, action) {\n    var f = document.getElementById(formId);\n    f.elements['action'].value = action;\n    \n    var m = 'Do you really want to ' + action + ' ' + f.elements['file'].value + '?';\n    if (confirm(m)) {\n        f.submit();\n        return false;\n    }\n}\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n    \n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    $param_label = array(\n                            'CONFIG_LOG_PAGES' => t('all','PagesLogging'),\n                            'CONFIG_LOG_QUERIES' => t('all','QueriesLogging'),\n                            'CONFIG_LOG_ACTIONS' => t('all','ActionsLogging'),\n                            'CONFIG_DEBUG_SQL' => t('all','LoggingDebugInfo'),\n                            'CONFIG_DEBUG_SQL_ONPAGE' => t('all','LoggingDebugOnPages')\n                        );\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n            \n            $isError = false;\n            \n            // validate yes/no params\n            foreach ($param_label as $param => $label) {\n                if (array_key_exists($param, $_POST) && !empty(strtolower(trim($_POST[$param]))) &&\n                    in_array(strtolower(trim($_POST[$param])), array(\"yes\", \"no\"))) {\n                    $configValues[$param] = $_POST[$param];\n                }\n            }\n            \n            // validate path\n            $log_path_prefix = $configValues['CONFIG_PATH_DALO_VARIABLE_DATA'] . \"/log\";\n            $log_file_suffix = \".log\";\n            \n            if (array_key_exists('CONFIG_LOG_FILE', $_POST) && !empty(trim($_POST['CONFIG_LOG_FILE']))) {\n                $candidate_log_file = trim($_POST['CONFIG_LOG_FILE']);\n                \n                if (\n                        // this ensure that the log_path_prefix is a directory\n                        is_dir($log_path_prefix) &&\n\n                        // this ensures that candidate_log_file starts with the log_path_prefix\n                        substr($candidate_log_file, 0, strlen($log_path_prefix)) === $log_path_prefix &&\n                        \n                        // this ensures that candidate_log_file does not contain \"..\"\n                        strpos($candidate_log_file, \"..\") === false &&\n                        \n                        // this ensures that candidate_log_file ends with the log_file_suffix\n                        substr($candidate_log_file, -strlen($log_file_suffix)) === $log_file_suffix &&\n                        \n                        // this ensures that candidate_log_file is at a writable location\n                        // or that at least it can be written inside the parent directory\n                        (is_writable($candidate_log_file) || is_writable(dirname($candidate_log_file)))\n                    ) {\n                    \n                    $configValues['CONFIG_LOG_FILE'] = $candidate_log_file;\n                    \n                } else {\n                    $isError = true;\n                }\n            } else {\n                $isError = true;\n            }\n            \n            // we write ONLY IF isError is false\n            if (!$isError) {\n                include(\"library/config_write.php\");\n            } else {\n                $failureMsg = sprintf(\"Log path not allowed. Ensure that log file name locates a writable %s file contained in %s\",\n                                      $log_file_suffix, $log_path_prefix);\n                $logAction .= \"$failureMsg on page: \";\n            }\n            \n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n        \n\n    // print HTML prologue\n    $title = t('Intro','configlogging.php');\n    $help = t('helpPage','configlogging');\n    \n    print_html_prologue($title, $langCode);\n\n    include (\"menu-config.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include_once('include/management/actionMessages.php');\n    \n    $fieldset0_descriptor = array(\n                                    \"title\" => t('title','Settings')\n                                 );\n    \n    \n    $input_descriptors0 = array();\n    \n    foreach ($param_label as $name => $label) {\n        $input_descriptors0[] = array(\n                                        \"type\" => \"select\",\n                                        \"options\" => array( \"yes\", \"no\" ),\n                                        \"caption\" => $label,\n                                        \"name\" => $name,\n                                        \"selected_value\" => $configValues[$name]\n                                     );\n    }\n    \n    $input_descriptors0[] = array(\n                                        \"type\" => \"text\",\n                                        \"caption\" => t('all','FilenameLogging'),\n                                        \"name\" => 'CONFIG_LOG_FILE',\n                                        \"value\" => $configValues['CONFIG_LOG_FILE']\n                                     );\n    \n    $input_descriptors0[] = array(\n                                    \"name\" => \"csrf_token\",\n                                    \"type\" => \"hidden\",\n                                    \"value\" => dalo_csrf_token(),\n                                 );\n\n    $input_descriptors0[] = array(\n                                    'type' => 'submit',\n                                    'name' => 'submit',\n                                    'value' => t('buttons','apply')\n                                 );\n    \n    open_form();\n    \n    // open 0-th fieldset\n    open_fieldset($fieldset0_descriptor);\n    \n    foreach ($input_descriptors0 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    close_fieldset();\n    \n    close_form();\n    \n    include('include/config/logging.php');\n    \n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n\n    if (isset($_REQUEST['submit'])) {\n\n        if (isset($_REQUEST['config_mail_smtpaddr']))\n            $configValues['CONFIG_MAIL_SMTPADDR'] = $_REQUEST['config_mail_smtpaddr'];\n        \n        if (isset($_REQUEST['config_mail_smtpport']))\n            $configValues['CONFIG_MAIL_SMTPPORT'] = $_REQUEST['config_mail_smtpport'];\n            \n        if (isset($_REQUEST['config_mail_smtp_fromemail']))\n            $configValues['CONFIG_MAIL_SMTPFROM'] = $_REQUEST['config_mail_smtp_fromemail'];\n        \n        include (\"library/config_write.php\");\n    }    \n\n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','configmail.php');\n    $help = t('helpPage','configmail');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-config.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n\n?>\n\n<form name=\"mailsettings\" method=\"POST\">\n    <fieldset>\n        <h302><?= t('title','Settings'); ?></h302>\n        \n        <br/>\n\n        <ul>\n\n            <li class=\"fieldset\">\n                <label for=\"config_mail_smtpaddr\" class=\"form\"><?= t('all','SMTPServerAddress') ?></label>\n                <input type=\"text\" value=\"<?= $configValues['CONFIG_MAIL_SMTPADDR'] ?>\" name=\"config_mail_smtpaddr\">\n            </li>\n\n            <li class=\"fieldset\">\n                <label for=\"config_mail_smtpport\" class=\"form\"><?= t('all','SMTPServerPort') ?></label>\n                <input type=\"number\" min=\"0\" max=\"65535\" value=\"<?= $configValues['CONFIG_MAIL_SMTPPORT'] ?>\" name=\"config_mail_smtpport\">\n            </li>\n\n            <li class=\"fieldset\">\n                <label for=\"config_mail_smtp_fromemail\" class=\"form\"><?= t('all','SMTPServerFromEmail') ?></label>\n                <input type=\"text\" value=\"<?= $configValues['CONFIG_MAIL_SMTPFROM'] ?>\" name=\"config_mail_smtp_fromemail\">\n            </li>\n\n\n            <li class=\"fieldset\">\n                <br/><hr><br/>\n                <input type=\"submit\" name=\"submit\" value=\"<?= t('buttons','apply') ?>\" class=\"button\">\n            </li>\n        </ul>\n    </fieldset>\n</form>\n\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n", ":root {\n    --rich-black-fogra: #001011ff;\n    --rich-black: #093a3eff;\n    --verdigris: #3aafb9ff;\n    --electric-blue: #64e9eeff;\n    --pale-cerulean: #97c8ebff;\n}\n\n /* Style the buttons that are used to open and close the accordion panel */\n.accordion {\n  background-color: #f1f1f1;\n\u00a0\u00a0color: black;\n  cursor: pointer;\n  padding: 18px;\n  width: 100%;\n  text-align: left;\n  border: 0;\n\u00a0\u00a0outline: none;\n}\n\n/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n.accordion-active, .accordion:hover {\n  background-color: #ddd;\n  border: 0;\n}\n\n.panel {\n  padding: 0;\n  margin-bottom: 10px;\n\u00a0\u00a0background-color: white;\n\u00a0\u00a0display: none;\n\u00a0\u00a0overflow: hidden;\n} \n\n.accordion:after {\n\u00a0\u00a0content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\u00a0\u00a0font-size: 13px;\n  color: black;\n  float: right;\n\u00a0\u00a0margin-left: 5px;\n}\n\n.accordion-active:after {\n\u00a0\u00a0content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n}\n\n.panel table {\n    margin-bottom: 5px;\n}\n\n.badge {\n    color: white;\n    padding: 2px 4px;\n    text-align: center;\n    border-radius: 5px;\n    font-size: 10px;\n    user-select: none;\n}\n\n.badge-mac, .badge-pin {\n    background-color: #008cba;\n}\n\n.badge-user {\n    background-color: #4CAF50;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    font-family: Geneva, Verdana, sans-serif;\n}\n\n#header {\n    width: 100%;\n    height: 140px;\n    \n}\n\n#sidebar {\n    float: left;\n    width: 16%;\n    height: 100%;\n    min-height: 640px;\n    background-color: var(--rich-black-fogra);\n    padding: 1%;\n}\n\n#contentnorightbar {\n    float: left;\n    width: 80%;\n    height: 100%;\n    min-height: 640px;\n    padding: 1%;\n}\n\n#footer {\n    clear: both;\n    padding: 1%;\n    background-color: var(--rich-black);\n    color: white;\n    margin-bottom: 0 !important;\n}\n\n#footer a {\n    color: lightgray;\n}\n\nbody {\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    font-family: Geneva, Verdana, sans-serif;\n}\n\n#wrapper {\n    background: white;\n    max-width: 100%;\n    min-width: 800px;\n    margin: 0 auto;\n}\n\n#innerwrapper {\n    width: 100%;\n}\n\n#header input {\n    width: 240px;\n    margin: 12px;\n    padding: 7px;\n    border: 1px solid lightgray;\n    border-radius: 3px;\n    resize: vertical;\n}\n\n#header input:focus, #header input:hover {\n    border: 1px solid darkgray;\n    background-color: ghostwhite;\n}\n\n#header form {\n    float: right;\n    width: 320px;\n    border: none;\n}\n\n#header h1 {\n    float: left;\n    font-size: 250%;\n    padding: 5px 20px;\n    border-right: 1px solid #ccc;\n    margin: 0 20px 0 0;\n}\n\n#header h2 {\n    font-weight: normal;\n    font-size: 125%;\n    color: var(--rich-black);\n    padding: 0;\n    padding-top: 16px;\n    border: none;\n}\n\n#header h2 a {\n    color: var(--rich-black-fogra);\n    text-decoration: none;\n}\n\n#header h2 a:hover {\n    color: var(--rich-black);\n}\n\n#header #login_data {\n    float: right;\n    margin: 10px;\n}\n\n#header #login_data a {\n    color:#f00;\n    text-decoration:none;\n}\n\n#header .sep {\n    float:right;\n    border-right:1px solid #ccc;\n    margin: 0;\n    padding: 0;\n    font-size: 46px;\n}\n\n#header #nav {\n    background-color: var(--rich-black-fogra);\n    padding: 10px;\n    margin-top: 20px;\n}\n\n#header a em {\n    font-style: normal;\n    text-decoration: underline;\n}\n\n#header #nav a {\n    color: white;\n    font-size: 120%;\n    text-decoration: none;\n    padding: 10px;\n}\n\n#header #nav a:hover, #header #nav a.active {\n    background-color: var(--verdigris);\n}\n\n#header #nav li, #header #subnav li {\n    display: inline;\n    list-style: none;\n    margin: auto 1px;\n}\n\n#header #subnav {\n    background-color: var(--verdigris);\n    padding: 0;\n    font-size: 90%;\n    color: white;\n    padding: 10px 25px;\n}\n\n#header #subnav a {\n    color: white;\n    text-decoration: none;\n    padding: 10px 10px;\n    \n}\n\n#header #subnav a:hover, #header #subnav a.active {\n    background-color: var(--electric-blue);\n}\n\n#sidebar h2 {\n    color: var(--electric-blue);\n    font-size: 110%;\n    font-weight: bold;\n\n    margin: 5px 0;\n    border: 0;\n}\n\n#sidebar h3 {\n    color: var(--verdigris);\n    font-size: 90%;\n    font-weight: bold;\n\n    margin-top: 30px;\n}\n\n#sidebar p {\n    margin:15px 0;\n}\n\n#sidebar p.news {\n    padding: 7px;\n    margin: 5px auto;\n    border: 1px solid var(--pale-cerulean);\n    border-radius: 3px;\n    resize: vertical;\n    \n    font-size: 14px;\n    color: var(--pale-cerulean);\n    background-color: var(--rich-black-fogra);\n    \n    -ms-box-sizing: content-box;\n    -moz-box-sizing: content-box;\n    -webkit-box-sizing: content-box; \n    box-sizing: content-box;\n}\n\n#sidebar p.news a.more {\n    color: #eeeeee;\n    display: block;\n    text-align: right;\n    font-size: 80%;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    text-decoration: none;\n    padding: 10px 0;\n}\n\n#sidebar p.news a:hover {\n    color: var(--electric-blue);\n}\n\n#sidebar .subnav {\n    border-top: 1px solid var(--pale-cerulean);\n}\n\n#sidebar .subnav li {\n    list-style: none;\n    padding: 5px;\n    border-bottom: 1px solid var(--pale-cerulean);\n}\n\n#sidebar .subnav li a {    \n    color: white;\n    text-decoration: none;\n    display: block;\n}\n\n#sidebar .subnav li a:hover {\n    color: var(--pale-cerulean);\n}\n\n#sidebar .subnav li a b {\n    float: right;\n    display: none;\n    color: var(--pale-cerulean);\n}\n\n#sidebar .subnav li a:hover b {\n    display: inline;\n}\n\n#sidebar input, #sidebar select {\n    width: 100%;\n    padding: 7px;\n    margin: 5px auto;\n    border: 1px solid var(--pale-cerulean);\n    border-radius: 3px;\n    resize: vertical;\n    \n    font-size: 14px;\n    color: var(--rich-black-fogra);\n    background-color: white;\n    \n    -ms-box-sizing: content-box;\n    -moz-box-sizing: content-box;\n    -webkit-box-sizing: content-box; \n    box-sizing: content-box;\n}\n\nh3.form {\n    font-weight: bold;\n    margin: auto 20px;\n}\n\nfieldset textarea {\n    padding: 5px;\n    margin: 4px;\n    border: 1px solid var(--rich-black);\n    border-radius: 3px;\n    resize: vertical;\n    \n    min-width: 200px;\n    \n    font-size: 12px;\n    color: var(--rich-black-fogra);\n    background-color: white;\n    \n    -ms-box-sizing: content-box;\n    -moz-box-sizing: content-box;\n    -webkit-box-sizing: content-box; \n    box-sizing: content-box;\n}\n\nfieldset input[type=text], fieldset input[type=number],\nfieldset input[type=date], fieldset input[type=password],\nfieldset select {\n    padding: 5px;\n    margin: 4px;\n    border: 1px solid var(--rich-black);\n    border-radius: 3px;\n    resize: vertical;\n    \n    min-width: 200px;\n    \n    font-size: 12px;\n    color: var(--rich-black-fogra);\n    background-color: white;\n    \n    -ms-box-sizing: content-box;\n    -moz-box-sizing: content-box;\n    -webkit-box-sizing: content-box; \n    box-sizing: content-box;\n}\n\nfieldset input[type=text]:disabled, fieldset input[type=numer]:disabled,\nfieldset input[type=date]:disabled, fieldset input[type=password]:disabled,\nfieldset select:disabled {\n    background-color: #eeeeee;\n    border: 1px solid gray;\n}\n\n#sidebar select:hover, #sidebar select:focus, #sidebar input:hover, #sidebar input:focus {\n    border: 1px solid var(--electric-blue);\n}\n\n#sidebar label {\n    color: white;\n    font-size: 14px;\n    display: block;\n    width: 100%;\n}\n\n#sidebarright {\n    width:170px;\n    float:right;\n    padding:10px 0 0 20px;\n    background:url(../images/sidebarright.jpg) top left no-repeat;\n}\n\n#sidebarright p {\n    font:90% sans-serif;\n    color:#777;\n    line-height:20px;\n    margin:10px 0;\n}\n\n#sidebarright h2 {\n    font:140% sans-serif;\n    color:#333;\n    margin:10px 0;\n    border:none;\n}\n\n#sidebarright ul {\n    margin:10px 0 10px 15px;\n    font:90% sans-serif;\n}\n\n#sidebarright ul li {\n    margin:5px 0;\n}\n\n#sidebarright a {\n    border-bottom:1px dotted #eee;\n    color:#444;\n    text-decoration:none;\n}\n\n#sidebarright a:hover {\n    border-bottom:1px solid #ccc;\n}\n\n\n#content {\n    margin:0 210px 0 240px;\n    background:url(../images/content.jpg) top left no-repeat;\n    padding:20px 0 0 20px;\n}\n\n#content ul {      \n             margin:15px 0 15px 0;      \n             line-height:25px;      \n             padding:15px 0 15px 15px;      \n             border-top:1px solid #eee;      \n             border-bottom:1px solid #eee;      \n             color:#79B933;      \n}\n\n#content ul span {      \n         color:#444;      \n}\n\n/*\n#contentnorightbar {\n    margin:0 0 0 240px;\n    padding:20px 0 0 20px;\n}\n*/\n\np {\n    margin:15px 0;\n    line-height:22px;\n}\n\nh2 {\n    font-size: 190%;\n    color: var(--pale-cerulean);\n    border-bottom: 2px solid #eeeeee;\n}\n\nh2 a {\n    color: var(--pale-cerulean);\n    text-decoration: none;\n}\n\nh2 a:hover {\n    color: var(--pale-cerulean);\n}\n\n/*\n#footer {\n    clear:both;\n    border-top:1px solid #eee;\n    padding:10px;\n    margin:30px 0 0;\n}\n*/\n\na {\n    color:#222;\n}\n\nth a.table {\n    background-color: #008CBA;\n    color: white;\n    padding: 4px 8px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font: 14px;\n    line-height: normal;\n    font-weight: normal;\n    float: left;\n    opacity: 1;\n\n}\n\na.table:focus, a.table:hover {\n    opacity: 0.8;\n}\n\na.toolTip {\n    color: var(--pale-cerulean);\n}\n\n/*\n    --rich-black-fogra: #001011ff;\n    --rich-black: #093a3eff;\n    --verdigris: #3aafb9ff;\n    --electric-blue: #64e9eeff;\n    --pale-cerulean: #97c8ebff;\n*/\n\na:hover {\n    text-decoration: none;\n}\n\nh3 {\n    font:140% sans-serif;\n    margin:10px 0;\n}\n\n#contentnorightbar ul {\n    margin:15px 0 15px 20px;\n    text-align:left;\n    list-style-type: none;\n    border:    0px;\n    padding-bottom:    2px;\n    color:#79B933;\n}\n\nli.fieldset {\n    clear: left;\n    padding-top: 1px;\n}\n\n#contentnorightbar ul span {\n    color:#444; \n}\n\n#contentnorightbar h9 {\n        font:150% sans-serif;\n        color:#0066CC;\n        padding:16px 0 0 0;\n        border:none;\n}\n\n#contentnorightbar h8 {\n        font:150% sans-serif;\n        color:#FF0000;\n        padding:16px 0 0 0;\n        border:none;\n}\n\n\n#contentnorightbar h7 {\n        font:150% sans-serif;\n        color:#666;\n        padding:16px 0 0 0;\n        border:none;\n}\n\nform.sidebar {\n    padding:10px;\n    border:0px solid #f6f6f6;\n}\n\n\n/***********************************************\n* Forms With Style -  Design Melt Down (www.designmeltdown.com)\n* This notice MUST stay intact for legal use\n* Visit Design Melt Down at http://www.designmeltdown.com/ \n***********************************************/\n\nform input[type=\"submit\"].button {\n    background-color: #4CAF50;\n    border: none;\n    border-radius: 4px;\n    color: white;\n    padding: 10px 16px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 14px;\n    margin: 8px auto;\n    opacity: 1;\n}\n\nform input[type=\"submit\"].button:hover {\n    opacity: 0.7;\n}\n\n#contentnorightbar form fieldset hr {\n  border-top: 1px solid white;\n}\n\n#contentnorightbar form {\n    background-color: #fafafa;\n    padding-bottom: 4px;\n}\n\n#contentnorightbar form fieldset {\n    color: var(--rich-black);\n    font-size: 12px;\n    border: none;\n    padding: 10px;\n    margin: 2px auto;\n}\n\n#contentnorightbar form fieldset:disabled {\n    opacity: 0.25;\n}\n\nlabel.form {\n    display: inline;\n    vertical-align: baseline;\n    font-weight: bold;\n    color: var(--rich-black-fogra);\n    float: left;\n    min-width: 220px;\n    margin: auto 8px;\n    clear: left;\n}\n\nlabel.dorm {\n    background-position:left;\n\n    color:#646729;\n    font-size:90%;\n    font-weight:bold;\n    \n    border-width: 0px;\n    \n    display:block;\n    float:left;\n    width:160px;\n    height:1px;\n    text-align:left;\n    margin:4px 0px 0px 0px;\n    padding:0px 0px 0px 8px;\n    clear:left;\n}\n\nlabel.attributes {\n    background-position:left;\n\n    color:#646729;\n    font-size:90%;\n    font-weight:bold;\n    \n    border-width: 0px;\n    \n    display:block;\n    float:left;\n    min-width:280px;\n    height:1px;\n    text-align:left;\n    margin:4px 0px 0px 0px;\n    padding:0px 0px 0px 8px;\n    clear:left;\n}\n\ninput.sidebutton {\n    height:25px;\n    width:180px;\n    padding:1px;\n    border:1;\n    font:100% sans-serif;\n    color:#000000;\n    margin: 2px;\n}\n\ninput[type=\"button\"], input[type=\"submit\"] {\n    border: none;\n    border-radius: 4px;\n    padding: 4px 8px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 14px;\n    margin-left: 4px;\n    opacity: 1;\n}\n\n#contentnorightbar form .tabcontent input[type=\"submit\"],\n#contentnorightbar form input[type=\"submit\"]\n {\n    display: block;\n    width: 30%;\n}\n\n/*\nth .button {\n    border: none;\n    border-radius: 4px;\n    padding: 4px 8px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 14px;\n    margin-left: 4px;\n    opacity: 1;\n}\n*/\n\nth .button:focus, th .button:hover {\n    opacity: 0.8;\n}\n\nth .delete {\n    background-color: #eb4746;\n    color: white;\n}\n\nth .delete:focus, th .delete:hover {\n    background-color: #f56d6d;\n    color: #eeeeee;\n}\n\ninput.integer5len {\n        width:54px;\n}\n\ninput.integerLarge {\n        width:34px;\n}\n\ninput.integer {\n        width:19px;\n}\n\ninput.money {\n    text-align:right;\n}\n\ninput[type=\"radio\"] {\n        width:13px;\n}\n\ninput[type=checkbox] {\n    width:15px;\n    padding:1px,10px,10px,10px;\n    margin: 2px,10px,10px,10px;\n}\n\ninput[type='checkbox'].form {\n    width:15px;\n    margin-top: 7px;\n}\n\n/*\nselect.form {\n    width:185px;\n    height:22px;\n    padding:1px;\n    border:1;\n    font:100% sans-serif;\n    color:#000000;\n    margin: 2px;\n}\n*/\n\nselect.long {\n    width:185px;\n    height:20px;\n    padding:1px;\n    border:1;\n    font:100% sans-serif;\n    color:#000000;\n    margin: 2px;\n}\n\n\ndiv.ToolTip {\n    font:88% sans-serif;\n    padding-top: 1px;\n    padding-bottom: 8px;\n    padding-right: 8px;\n    float:right; \n/*    color:#E8A417; */\n    color:#646729; \n    background-color: #FFF;\n    margin-right:32px;\n    border: 1px solid #C0C0C0;\n    border-radius: 4px;\n    box-shadow: 4px 4px #000;\n}\n\n\ndiv.ToolTip2 {\n    font:88% sans-serif;\n    padding-top: 1px;\n    padding-bottom: 1px;\n    color:#646729;\n}\n\n\noption {\n        padding:2px;\n}\n\n\ntextarea.form {\n    padding:4px;\n    margin:2px;\n    background:#ffffff;\n    color:#000000;\n    font:90% sans-serif;\n    width:175px;\n    height:60px;\n}\n\ntextarea.form_fileimport {\n    padding:4px;\n    margin:2px;\n    background:#ffffff;\n    color:#000000;\n    font:90% sans-serif;\n    width:575px;\n    height:400px;\n}\n\np img {\n    float:left;\n    margin:0 10px 0 0;\n}\n\na.helper {\n    color: green;\n        font: 9px sans-serif;\n    padding: 2px;\n    text-decoration:none;\n}\n\n\nblockquote p {\n    font:160% sans-serif;\n    color:#aaa;\n    padding:0 10% 0 0;\n    line-height:30px;\n}\n\ntable {\n    width: 100%;\n    color: #000000;\n    font: 0.9em/1.6em sans-serif;\n/*\n    border-collapse: collapse;\n*/\n    margin-left: auto;\n    margin-right: auto;\n    border: 0px solid #CCC;\n}\n\ntable,caption {\n    margin: 0 auto;\n/*    border-right: 1px solid #CCC; */\n/*    border-left: 1px solid #CCC; */\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n}\n\ntd, th {\n  border: 1px solid #cccccc;\n  text-align: left;\n  padding: 8px;\n}\n\nthead tr:first-child td {\n    border: none;\n}\n\ntfoot tr:last-child th {\n    border: none;\n    color: var(--rich-black);\n}\n\ntr:nth-child(even) {\n  background-color: #dddddd;\n}\n\ntbody a.novisit {\n    border: none;\n}\n\ntd input[type=\"checkbox\"] {\n    margin: auto 8px;\n}\n\n/*\n:root {\n    --rich-black-fogra: #001011ff;\n    --rich-black: #093a3eff;\n    --verdigris: #3aafb9ff;\n    --electric-blue: #64e9eeff;\n    --pale-cerulean: #97c8ebff;\n}\n*/\n\ntbody a.tablenovisit {\n    color: var(--rich-black);\n}\n\ntd.money {\n    text-align:right;\n}\n\n/* the color red used on acct-active.php to highlight overdue accounts */\nh100 {\n    color: red;\n}\n\nh109 {\n    color: white;\n}\n\n/* the <h144> header tag is used to display the ? char for page's helpPage information */\nh144 {\n    margin-left: 5px;\n    padding-left: 5px;\n    font-size: 0.75em;\n    border-left: 1px solid #eeeeee;\n}\n\n/* used in language files to highlight sections */\nh200 {\n    color: #FF8040;\n}\n\n/* header used in fieldset */\nh301 {\n    font-size: 110%;\n    font-weight: bold;\n    color: var(--verdigris);\n}\n\n/* header used in fieldset */\nfieldset h302 {\n    display: block;\n    float: right;\n    text-decoration: none;\n    font-weight: bold;\n    color: var(--pale-cerulean);\n\n    user-select: none;\n}\n\n\n\n/********************* BEGIN Carlos Changes ************************/\n\n.summarySection {\n    width: 70%;\n    margin: 10px auto;\n}\n\n.summarySection tr {\n    vertical-align: center;\n}\n\n.summaryValue {\n    padding-left: 15px;\n    padding-top: 2px;\n    padding-bottom: 2px;\n    background-color: #eeeeee;\n}\n\n.summaryKey {\n    width: 35%;\n    background-color: white;\n    text-align: right;\n    vertical-align: top;\n}\n\n.sleft { float: left; }\n\n/********************* END Carlos Changes ************************/\n\n\n\n\n\n\n\n/********************* BEGIN Carlos box containers ***************/\n\n\n\n.failure {\n    border: 1px solid #fa601d;\n    padding: 9pt 9pt 9pt 33pt;\n    margin: 12px auto;\n    color: #484554;\n    font-family: sans-serif;\n    background: #FDDDD9 url(\"../images/icons/action-error.gif\") 6pt 6pt no-repeat;\n    \n}\n\n.warning {\n    background: #F8FEA5 url(../images/icons/action-warning.gif) no-repeat scroll 6pt;\n    border: 1px solid #EBFA1D;\n    color: #484554;\n    margin: 12px;\n    padding:9pt 9pt 9pt 33pt;\n}\n\n.success {\n    background: #DFEF7A url(../images/icons/action-success.gif) no-repeat scroll 6pt;\n    border: 1px solid #A9C500;\n    color: #484554;\n    padding: 9pt 9pt 9pt 33pt;\n    margin: 12px auto;\n}\n\n\n.help {\n    border-bottom: 1px solid #1d4efa;\n    padding: 9pt 9pt 9pt 33pt;\n    color: #484554;\n    font-size: 8pt;\n    background: #DFF5FE url(\"../images/icons/action-help.gif\") 6pt 6pt no-repeat;\n    margin: 1em 0px 1em 0px;\n}\n\n\n/********************* END Carlos box containers *****************/\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n * Description:\n * \t\treads configuration file from daloradius.conf and appends it to the $configValues associated array\n *\n * Authors:\tLiran Tal <liran@enginx.com>\n *\n *********************************************************************************************************\n */\n \n$_configFile = dirname(__FILE__).'/daloradius.conf.php';\ninclude($_configFile);\n\n/*\n****************************************************************************************************\n* deprecated for handling the configuration variables as a PHP page for the sake of security\n****************************************************************************************************\n$_configCommentChar = \"#\";\n\n$_configFp = fopen($_configFile, \"r\");\nif ($_configFp) {\n\twhile (!feof($_configFp)) {\n\t\t$_configLine = trim(fgets($_configFp));\n\t\tif ($_configLine && !ereg(\"^$_configCommentChar\", $_configLine)) {\n\t\t\t$_configPieces = explode(\"=\", $_configLine);\n\t\t\t$_configOption = trim($_configPieces[0]);\n\t\t\t$_configValue = trim($_configPieces[1]);\n\t\t\t$configValues[$_configOption] = $_configValue;\n\t\t}\n\t}\n\tfclose($_configFp);\n} else {\n\t$failureMsg = \"Could not open the file for reading:<b> $_configFile </b>\n\t<br/>Check file permissions. The file should be readable by the webserver's user/group\";\n}\n****************************************************************************************************\n*/\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n * Description:\n * \t\twrites configuration information from the $configValues array to daloradius.conf\n *\n * Authors:\tLiran Tal <liran@enginx.com>\n *\n *********************************************************************************************************\n */\n\n$configFile = dirname(__FILE__).'/daloradius.conf.php';\n$date = date(\"D M j G:i:s T Y\");\n\n$fp = fopen($configFile, \"w\");\nif ($fp) {\n\tfwrite($fp, \n\t\t\"<?php\\n\".\n\t\t\"/*\\n\".\n\t\t\" *********************************************************************************************************\\n\".\n\t\t\" * daloRADIUS - RADIUS Web Platform\\n\".\n\t\t\" * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\\n\".\n\t\t\" *\\n\".\n\t\t\" * This program is free software; you can redistribute it and/or\\n\".\n\t\t\" * modify it under the terms of the GNU General Public License\\n\".\n\t\t\" * as published by the Free Software Foundation; either version 2\\n\".\n\t\t\" * of the License, or (at your option) any later version.\\n\".\n\t\t\" *\\n\".\n\t\t\" * You should have received a copy of the GNU General Public License\\n\".\n\t\t\" * along with this program; if not, write to the Free Software\\n\".\n\t\t\" * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\\n\".\n\t\t\" *\\n\".\n\t\t\" *********************************************************************************************************\\n\".\n\t\t\" * Description:\\n\".\n\t\t\" *              daloRADIUS Configuration File\\n\".\n\t\t\" *\\n\".\n\t\t\" * Modification Date:\\n\".\n\t\t\" *              $date\\n\".\n\t\t\" *********************************************************************************************************\\n\".\n\t\t\" */\\n\".\n\t\t\"\\n\\n\");\n\tforeach ($configValues as $_configOption => $_configElem) {\n\t\tif (is_array($configValues[$_configOption])) {\n\t\t\t$var = \"\\$configValues['\" . $_configOption . \"'] = \\t\\t\";\n\t\t\t$var .= var_export($configValues[$_configOption], true);\n\t\t\t$var .= \";\\n\";\n\t\t\tfwrite($fp, $var);\n\t\t} else\n\t        fwrite($fp, \"\\$configValues['\" . $_configOption . \"'] = '\" . $configValues[$_configOption] . \"';\\n\");\n\t}\n\tfwrite($fp, \"\\n\\n?>\");\n\tfclose($fp);\n\t$successMsg = \"Updated database settings for configuration file\";\n} else {\n\t$failureMsg = \"Could not open the file for writing: <b>$configFile</b>\n\t<br/>Check file permissions. The file should be writable by the webserver's user/group\";\n}\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n * \n * Authors:        Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/library/validation.php') !== false) {\n    header('Location: ../index.php');\n    exit;\n}\n\n// commonly used regexes collection\ndefine(\"DATE_REGEX\", '/^([0-9]{4})-([0-9]{2})-([0-9]{2})$/');\ndefine(\"ORDER_TYPE_REGEX\", '/^(de|a)sc$/');\ndefine(\"IP_REGEX\", '/^(((2(5[0-5]|[0-4][0-9]))|1[0-9]{2}|[1-9]?[0-9]).){3}((2(5[0-5]|[0-4][0-9]))|1[0-9]{2}|[1-9]?[0-9])$/');\ndefine(\"NETMASK_LENGTH_REGEX\", '/^3[0-2]|[1-2][0-9]|[1-9]$/');\ndefine(\"MACADDR_REGEX\", '/^(?:[0-9A-Fa-f]{2}([-:]))(?:[0-9A-Fa-f]{2}\\1){4}[0-9A-Fa-f]{2}$/');\ndefine(\"PINCODE_REGEX\", '/^[a-zA-Z0-9]+$/');\n\n// this regex allows input like (e.g.) 127, 127., 127.0, 127.0., 127.0.0, 127.0.0 and 127.0.0.1\ndefine(\"LOOSE_IP_REGEX\", '/^(((2(5[0-5]|[0-4][0-9]))|1[0-9]{2}|[1-9]?[0-9])\\.?){1,4}$/');\n\ndefine(\"ALL_PRINTABLE_CHARS_REGEX\", '/^[ -~]+$/');\n\ndefine(\"DB_TABLE_NAME_REGEX\", '/^[a-zA-Z0-9_]+$/');\n\n// some parameters can be validated using a whitelist.\n// here we collect some useful whitelist.\n// this lists can be also used for presentation purpose.\n// whitelists naming convention:\n// $valid_ [param_name] s\n$valid_backupActions = array( \"download\" => t('all','Download'), \"rollback\" => t('all','Rollback'), \"delete\" => \"Delete\");\n\n$valid_authTypes = array( \n                            \"userAuth\" => \"Based on username and password\",\n                            \"macAuth\" => \"Based on MAC address\",\n                            \"pincodeAuth\" => \"Based on PIN code\"\n                        );\n\n$valid_passwordTypes = array(\n                                \"Cleartext-Password\",\n                                \"NT-Password\",\n                                \"MD5-Password\",\n                                \"SHA1-Password\",\n                                \"User-Password\",\n                                \"Crypt-Password\",\n                                //~ \"CHAP-Password\"\n                             );\n\n$valid_ops = array(\n                    \"=\", \":=\", \":=\", \"==\", \"+=\", \"!=\", \">\",\n                    \">=\", \"<\", \"<=\", \"=~\", \"!~\", \"=*\", \"!*\"\n                  );\n\n$valid_recommendedHelpers = array(\n                                    \"date\", \"datetime\", \"authtype\", \"framedprotocol\", \"servicetype\",\n                                    \"kbitspersecond\", \"bitspersecond\", \"volumebytes\", \"mikrotikRateLimit\",\n                                 );\n\n$valid_attributeTypes = array(\n                                \"string\",\n                                \"integer\",\n                                \"ipaddr\",\n                                \"date\",\n                                \"octets\",\n                                \"ipv6addr\",\n                                \"ifid\",\n                                \"abinary\",\n                             );\n\n$valid_db_engines = array(\n                            \"mysql\" => \"MySQL\",\n                            \"pgsql\" => \"PostgreSQL\",\n                            \"odbc\" => \"ODBC\",\n                            \"mssql\" => \"MsSQL\",\n                            \"mysqli\" => \"MySQLi\",\n                            \"msql\" => \"MsQL\",\n                            \"sybase\" => \"Sybase\",\n                            \"sqlite\" => \"Sqlite\",\n                            \"oci8\" => \"Oci8 \",\n                            \"ibase\" => \"ibase\",\n                            \"fbsql\" => \"fbsql\",\n                            \"informix\" => \"informix\"\n                         );\n\n// values taken from an instance of freeradius 3.0.21\n$valid_nastypes = array(\n                         \"other\", \"cisco\", \"computone\", \"livingston\", \"juniper\", \"max40xx\", \"multitech\",\n                         \"netserver\", \"pathras\", \"patton\", \"portslave\", \"tc\", \"usrhiper\"\n                       );\n\n// accounting custom-query options list\n$acct_custom_query_options_all = array(\n                                        \"RadAcctId\",\n                                        \"AcctSessionId\",\n                                        \"AcctUniqueId\",\n                                        \"UserName\",\n                                        \"Realm\",\n                                        \"NASIPAddress\",\n                                        \"NASPortId\",\n                                        \"NASPortType\",\n                                        \"AcctStartTime\",\n                                        \"AcctStopTime\",\n                                        \"AcctSessionTime\",\n                                        \"AcctAuthentic\",\n                                        \"ConnectInfo_start\",\n                                        \"ConnectInfo_stop\",\n                                        \"AcctInputOctets\",\n                                        \"AcctOutputOctets\",\n                                        \"CalledStationId\",\n                                        \"CallingStationId\",\n                                        \"AcctTerminateCause\",\n                                        \"ServiceType\",\n                                        \"FramedProtocol\",\n                                        \"FramedIPAddress\",\n                                        \"AcctStartDelay\",\n                                        \"AcctStopDelay\"\n                                    );\n\n// accounting custom-query options selected by default\n$acct_custom_query_options_default = array(\n                                            \"UserName\", \"Realm\", \"NASIPAddress\", \"AcctStartTime\", \"AcctStopTime\",\n                                            \"AcctSessionTime\", \"AcctInputOctets\", \"AcctOutputOctets\", \"CalledStationId\",\n                                            \"CallingStationId\", \"AcctTerminateCause\", \"FramedIPAddress\"\n                                          );\n\n// billing history query options list\n$bill_history_query_options_all = array(\n                                            \"id\" => t('all','ID'),\n                                            \"username\" => t('all','Username'),\n                                            \"planId\" => t('all','PlanId'),\n\n                                            \"billAmount\" => t('all','BillAmount'),\n                                            \"billAction\" => t('all','BillAction'),\n                                            \"billPerformer\" => t('all','BillPerformer'),\n                                            \"billReason\" => t('all','BillReason'),\n\n                                            \"paymentmethod\" => t('ContactInfo','PaymentMethod'),\n                                            \"cash\" => t('ContactInfo','Cash'),\n\n                                            \"creditcardname\" => t('ContactInfo','CreditCardName'),\n                                            \"creditcardnumber\" => t('ContactInfo','CreditCardNumber'),\n                                            \"creditcardverification\" => t('ContactInfo','CreditCardVerificationNumber'),\n                                            \"creditcardtype\" => t('ContactInfo','CreditCardType'),\n                                            \"creditcardexp\" => t('ContactInfo','CreditCardExpiration'),\n                                            \"coupon\" => t('all','Coupon'),\n                                            \"discount\" => t('all','Discount'),\n                                            \"notes\" => t('ContactInfo','Notes'),\n                                            \"creationdate\" => t('all','CreationDate'),\n                                            \"creationby\" => t('all','CreationBy'),\n                                            \"updatedate\" => t('all','UpdateDate'),\n                                            \"updateby\" => t('all','UpdateBy')\n                                       );\n\n// billing history query options selected by default\n$bill_history_query_options_default = array(\n                                                \"username\",\n                                                \"planId\",\n                                                \"billAmount\",\n                                                \"billAction\",\n                                                \"billPerformer\",\n                                                \"paymentmethod\"\n                                           );\n\n$bill_merchant_transactions_options_all = array(\n                                                    \"id\" => t('all','ID'),\n                                                    \"username\" => t('all','Username'),\n                                                    \"password\"  => t('all','Password'),\n                                                    \"txnId\"  => t('all','TxnId'),\n                                                    \"planName\" => t('all','PlanName'),\n                                                    \"planId\"  => t('all','PlanId'),\n                                                    \"quantity\"  => t('all','Quantity'),\n                                                    \"business_email\"  => t('all','ReceiverEmail'),\n                                                    \"business_id\"  => t('all','Business'),\n                                                    \"payment_tax\" => t('all','Tax'),\n                                                    \"payment_cost\"  => t('all','Cost'),\n                                                    \"payment_fee\" => t('all','TransactionFee'),\n                                                    \"payment_total\" => t('all','TotalCost'),\n                                                    \"payment_currency\" => t('all','PaymentCurrency'),\n                                                    \"first_name\" => t('all','FirstName'),\n                                                    \"last_name\" => t('all','LastName'),\n                                                    \"payer_email\" => t('all','PayerEmail'),\n                                                    \"payer_address_name\"  => t('all','AddressRecipient'),\n                                                    \"payer_address_street\"  => t('all','Street'),\n                                                    \"payer_address_country\" => t('all','Country'),\n                                                    \"payer_address_country_code\"  => t('all','CountryCode'),\n                                                    \"payer_address_city\" => t('all','City'),\n                                                    \"payer_address_state\" => t('all','State'),\n                                                    \"payer_address_zip\"  => t('all','Zip'),\n                                                    \"payment_date\" => t('all','PaymentDate'),\n                                                    \"payment_status\" => t('all','PaymentStatus'),\n                                                    \"payer_status\" => t('all','PayerStatus'),\n                                                    \"payment_address_status\" => t('all','PaymentAddressStatus'),\n                                                    \"vendor_type\" => t('all','VendorType')\n                                               );\n                                               \n$bill_merchant_transactions_options_default = array(\n                                                        \"username\",\n                                                        \"planName\",\n                                                        \"payment_fee\",\n                                                        \"payment_total\",\n                                                        \"payment_currency\",\n                                                        \"first_name\",\n                                                        \"last_name\",\n                                                        \"payer_email\",\n                                                        \"payer_address_country\",\n                                                        \"payer_address_city\",\n                                                        \"payer_address_state\",\n                                                        \"payment_date\",\n                                                        \"payment_status\",\n                                                        \"vendor_type\"\n                                                   );\n\n// validating values\n\n$valid_paymentStatus = array(\n                              \"Any\", \"Completed\",  \"Denied\",  \"Expired\",  \"Failed\",  \"In-Progress\",  \"Pending\", \n                              \"Processed\",  \"Refunded\",  \"Reversed\",  \"Canceled-Reversal\",  \"Voided\", \n                            );\n$valid_vendorTypes = array( \"Any\", \"2Checkout\", \"PayPal\" );\n$valid_billactions = array( \"Any\", \"Refill Session Time\", \"Refill Session Traffic\" );\n\n$valid_languages = array(\n                            \"en\" => \"English\", \n                            \"it\" => \"Italian\", \n                            \"hu\" => \"Hungarian\", \n                            \"ro\" => \"Romanian\",\n                            \"tr\" => \"Turkish\",\n                            \"ru\" => \"Russian\", \n                            \"ja\" => \"Japanese\",\n                            \"zh\" => \"Chinese\",\n                            \"es_ve\" => \"Spanish - Venezuelan\", \n                            \"pt_br\" => \"Portuguese - Brazilian\",\n                        );\n\n?>\n"], "fixing_code": ["<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    include_once(\"include/management/functions.php\");\n\n    // validate path\n    $backup_path_prefix = $configValues['CONFIG_PATH_DALO_VARIABLE_DATA'] . \"/backup\";\n    $backup_file_suffix = \".sql\";\n\n    $file = \"\";\n    if (array_key_exists('file', $_POST) && !empty(trim($_POST['file']))) {\n        $candidate_backup_file = trim($_POST['file']);\n        \n        if (\n                // this ensures that candidate_backup_file does not contain any \"..\" sequence\n                strpos($candidate_backup_file, \"..\") === false &&\n                \n                // this ensures that candidate_backup_file does not contain any \"/\" char\n                strpos($candidate_backup_file, \"/\") === false &&\n                \n                // this ensures that candidate_backup_file ends with the backup_file_suffix\n                substr($candidate_backup_file, -strlen($backup_file_suffix)) === $backup_file_suffix\n           ) {\n            \n            $file = $candidate_backup_file;\n        }\n        \n    }\n\n    $backupAction = (array_key_exists('action', $_POST) && isset($_POST['action']) &&\n                     in_array($_POST['action'], array_keys($valid_backupActions))) ? $_POST['action'] : \"\";\n\n    $cols = array(\n                    t('all', 'CreationDate'),\n                    \"filename\" => t('all', 'Name'),\n                    \"Size\",\n                    t('all', 'Action'),\n                 );\n    $colspan = count($cols);\n    $half_colspan = intval($colspan / 2);\n                 \n    $param_cols = array();\n    foreach ($cols as $k => $v) { if (!is_int($k)) { $param_cols[$k] = $v; } }\n\n    // whenever possible we use a whitelist approach\n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($param_cols)))\n             ? $_GET['orderBy'] : array_keys($param_cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  in_array(strtolower($_GET['orderType']), array( \"desc\", \"asc\" )))\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n    // init backup paths\n    $fileName = sprintf(\"%s/%s\", $backup_path_prefix, $file);\n    $baseFile = basename($fileName);\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        \n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n            \n            if (!empty($file) && !empty($backupAction) && is_dir($backup_path_prefix) && is_readable($fileName)) {\n        \n                $fileContents = file_get_contents($fileName);\n                $fileLen = strlen($fileContents);\n                \n                if (!empty($fileContents)) {\n                \n                    switch($backupAction) {\n                    \n                        default:\n                        case \"download\":\n                        \n                            header(\"Content-type: application/sql\");\n                            header(sprintf(\"Content-Disposition: attachment; filename=%s; size=%d\", $baseFile, $fileLen));\n                            print $fileContents;\n\n                            exit; //~ break;\n                    \n                        case \"delete\":\n                            unlink($fileName);\n                            $successMsg = sprintf(\"Successfully performed %s action on backup file %s\",\n                                                  $backupAction, $baseFile);\n                            $logAction .= \"$successMsg on page: \";\n                            \n                            break;\n                    \n                        case \"rollback\":\n                        \n                            include('library/opendb.php');\n\n                            $rollBackQuery = explode(\"\\n\\n\\n\", $fileContents);\n                            \n                            $isError = 0;\n                            $tables = array();\n                            \n                            foreach ($rollBackQuery as $query) {\n                                $query = trim($query);\n                                \n                                // no need to use the full query, we do some check only on the first 200 chars\n                                $query200 = substr($query, 0, 200);\n                                \n                                if (!preg_match('/^INSERT\\s+INTO\\s+.*$/', $query200)) {\n                                    continue;\n                                }\n                                \n                                // we extract the <table> from the string: INSERT INTO <table>\n                                $table = trim(preg_split('/\\s+/', $query200)[2], '`');\n                                \n                                if (empty($table)) {\n                                    continue;\n                                }\n                                \n                                $queries = array(\n                                                    sprintf(\"DELETE FROM `%s`\", $table),\n                                                    \n                                                    // this is a large SQL query, hopefully database can handle it without overflowing\n                                                    $query\n                                                );\n                                \n                                // executing delete/insert queries\n                                foreach ($queries as $sql) {\n                                    $res = $dbSocket->query($sql);\n                                    if (DB::isError($res)) {\n                                        $isError++;\n                                        break;\n                                    }\n                                }\n                                \n                                $tables[] = $table;\n                            }\n                            \n                            include('library/closedb.php');\n\n                            if ($isError > 0) {\n                                $failureMsg = sprintf(\"Cannot %s backup file %s, please check file availability and permissions\",\n                                                      $backupAction, $baseFile);\n                                $logAction .= \"$failureMsg on page: \";\n                            } else {\n                                $successMsg = sprintf(\"Successfully performed %s of table(s) [%s] from source file %s\",\n                                                      $backupAction, implode(\", \", $tables), $baseFile);\n                                $logAction .= \"$successMsg on page: \";\n                            }\n                            \n                            break;\n                    }\n                    \n                } else {\n                    $failureMsg = sprintf(\"Cannot %s backup file %s, please check file availability and permissions\",\n                                          $backupAction, $baseFile);\n                    $logAction .= \"$failureMsg on page: \";\n                }\n\n            } else {\n                $failureMsg = sprintf(\"The requested action cannot be performed\");\n                $logAction .= \"$failureMsg on page: \";\n            }\n\n\n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n    \n    // print HTML prologue\n    $title = t('Intro','configbackupmanagebackups.php');\n    $help = t('helpPage','configbackupmanagebackups');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-config-backup.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    include('include/management/pages_common.php');\n    \n    // get backup info\n    $backupInfo = array();\n    \n    if (is_dir($backup_path_prefix)) {\n        $files = scandir($backup_path_prefix);\n        if ($orderType == \"desc\") {\n            rsort($files);\n        }\n    \n        $skipList = array( \".\", \"..\", \".svn\", \".git\" );\n        foreach ($files as $this_file) {\n            \n            if (in_array($this_file, $skipList)) {\n                continue;\n            }\n\n            list($junk, $date, $time) = explode(\"-\", $this_file);\n            \n            $fileDate = substr($date, 0, 4) . \"-\" . substr($date, 4, 2) . \"-\" . substr($date, 6, 2);\n            $fileTime = substr($time, 0, 2) . \":\" . substr($time, 2, 2) . \":\" . substr($time, 4, 2);\n\n            $fileSize = filesize(sprintf(\"%s/%s\", $backup_path_prefix, $this_file));\n            \n            $backupInfo[] = array(\n                                    sprintf(\"%s, %s\", $fileDate, $fileTime),\n                                    $this_file,\n                                    toxbyte($fileSize),\n                                 );\n            \n        }\n    }\n    \n    $numrows = count($backupInfo);\n    \n    if ($numrows > 0) {\n\n        $csrf_token = dalo_csrf_token();\n        $token = array( \"type\" => \"hidden\", \"name\" => \"csrf_token\", \"value\" => $csrf_token );\n\n        echo '<table border=\"0\" class=\"table1\">';\n\n        echo \"<tr>\";\n        printTableHead($cols, $orderBy, $orderType);\n        echo \"</tr>\";\n\n        $count = 0;\n        \n        foreach ($backupInfo as $row) {\n            $rowlen = count($row);\n            \n            echo \"<tr>\";\n            \n            // print escaped row elements\n            for ($i = 0; $i < $rowlen; $i++) {\n                printf(\"<td>%s</td>\", htmlspecialchars($row[$i], ENT_QUOTES, 'UTF-8'));\n            }\n            \n            // actions\n            echo \"<td>\";\n            \n            // create form for actions\n            $components = array( $token );\n            $components[] = array( \"type\" => \"hidden\", \"name\" => \"action\", \"value\" => \"\" );\n            $components[] = array( \"type\" => \"hidden\", \"name\" => \"file\", \"value\" => $row[1] );\n            \n            $form = array( \"name\" => sprintf(\"form-%d\", $count), \"hidden\" => true );\n            \n            open_form($form);\n            \n            foreach ($components as $component) {\n                print_form_component($component);\n            }\n            \n            close_form();\n            \n            // print actions\n            $actions = array();\n            \n            foreach ($valid_backupActions as $action => $label) {\n                $onclick = sprintf(\"performAction('form-%s', '%s')\", $count, $action);\n                $actions[] = sprintf('<a class=\"tablenovisit\" href=\"#\" onclick=\"%s\">%s</a>', $onclick, $label);\n            }\n\n            echo implode(\", \", $actions);\n            \n            echo \"</td>\";\n            echo \"</tr>\";\n\n            $count++;\n        }\n\n        echo '</table>';\n\n    } else {\n        // no backup file(s)\n        $failureMsg = \"Nothing to display\";\n        include_once(\"include/management/actionMessages.php\");\n    }\n    \n    include('include/config/logging.php');\n    \n        $inline_extra_js = \"\nfunction performAction(formId, action) {\n    var f = document.getElementById(formId);\n    f.elements['action'].value = action;\n    \n    var m = 'Do you really want to ' + action + ' ' + f.elements['file'].value + '?';\n    if (confirm(m)) {\n        f.submit();\n        return false;\n    }\n}\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n    \n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    $param_label = array(\n                            'CONFIG_LOG_PAGES' => t('all','PagesLogging'),\n                            'CONFIG_LOG_QUERIES' => t('all','QueriesLogging'),\n                            'CONFIG_LOG_ACTIONS' => t('all','ActionsLogging'),\n                            'CONFIG_DEBUG_SQL' => t('all','LoggingDebugInfo'),\n                            'CONFIG_DEBUG_SQL_ONPAGE' => t('all','LoggingDebugOnPages')\n                        );\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n            \n            $isError = false;\n            \n            // validate yes/no params\n            foreach ($param_label as $param => $label) {\n                if (array_key_exists($param, $_POST) && !empty(strtolower(trim($_POST[$param]))) &&\n                    in_array(strtolower(trim($_POST[$param])), array(\"yes\", \"no\"))) {\n                    $configValues[$param] = $_POST[$param];\n                }\n            }\n            \n            // validate path\n            $log_path_prefix = $configValues['CONFIG_PATH_DALO_VARIABLE_DATA'] . \"/log\";\n            $log_file_suffix = \".log\";\n            \n            if (array_key_exists('CONFIG_LOG_FILE', $_POST) && !empty(trim($_POST['CONFIG_LOG_FILE']))) {\n                $candidate_log_file = trim($_POST['CONFIG_LOG_FILE']);\n                \n                if (\n                        // this ensure that the log_path_prefix is a directory\n                        is_dir($log_path_prefix) &&\n\n                        // this ensures that candidate_log_file starts with the log_path_prefix\n                        substr($candidate_log_file, 0, strlen($log_path_prefix)) === $log_path_prefix &&\n                        \n                        // this ensures that candidate_backup_file does not contain any \"..\" sequence\n                        strpos($candidate_log_file, \"..\") === false &&\n                        \n                        // this ensures that candidate_log_file ends with the log_file_suffix\n                        substr($candidate_log_file, -strlen($log_file_suffix)) === $log_file_suffix &&\n                        \n                        // this ensures that candidate_log_file is at a writable location\n                        // or that at least it can be written inside the parent directory\n                        (is_writable($candidate_log_file) || is_writable(dirname($candidate_log_file)))\n                    ) {\n                    \n                    $configValues['CONFIG_LOG_FILE'] = $candidate_log_file;\n                    \n                } else {\n                    $isError = true;\n                }\n            } else {\n                $isError = true;\n            }\n            \n            // we write ONLY IF isError is false\n            if (!$isError) {\n                include(\"library/config_write.php\");\n            } else {\n                $failureMsg = sprintf(\"Log path not allowed. Ensure that log file name locates a writable %s file contained in %s\",\n                                      $log_file_suffix, $log_path_prefix);\n                $logAction .= \"$failureMsg on page: \";\n            }\n            \n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n        \n\n    // print HTML prologue\n    $title = t('Intro','configlogging.php');\n    $help = t('helpPage','configlogging');\n    \n    print_html_prologue($title, $langCode);\n\n    include (\"menu-config.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    include_once('include/management/actionMessages.php');\n    \n    $fieldset0_descriptor = array(\n                                    \"title\" => t('title','Settings')\n                                 );\n    \n    \n    $input_descriptors0 = array();\n    \n    foreach ($param_label as $name => $label) {\n        $input_descriptors0[] = array(\n                                        \"type\" => \"select\",\n                                        \"options\" => array( \"yes\", \"no\" ),\n                                        \"caption\" => $label,\n                                        \"name\" => $name,\n                                        \"selected_value\" => $configValues[$name]\n                                     );\n    }\n    \n    $input_descriptors0[] = array(\n                                        \"type\" => \"text\",\n                                        \"caption\" => t('all','FilenameLogging'),\n                                        \"name\" => 'CONFIG_LOG_FILE',\n                                        \"value\" => $configValues['CONFIG_LOG_FILE']\n                                     );\n    \n    $input_descriptors0[] = array(\n                                    \"name\" => \"csrf_token\",\n                                    \"type\" => \"hidden\",\n                                    \"value\" => dalo_csrf_token(),\n                                 );\n\n    $input_descriptors0[] = array(\n                                    'type' => 'submit',\n                                    'name' => 'submit',\n                                    'value' => t('buttons','apply')\n                                 );\n    \n    open_form();\n    \n    // open 0-th fieldset\n    open_fieldset($fieldset0_descriptor);\n    \n    foreach ($input_descriptors0 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    close_fieldset();\n    \n    close_form();\n    \n    include('include/config/logging.php');\n    \n    print_footer_and_html_epilogue();\n\n?>\n", "<?php \n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n    \n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n    $param_label = array(\n                            'CONFIG_MAIL_SMTPADDR' => t('all','SMTPServerAddress'),\n                            'CONFIG_MAIL_SMTPPORT' => t('all','SMTPServerPort'),\n                            'CONFIG_MAIL_SMTPFROM' => t('all','SMTPServerFromEmail'),\n                        );\n\n    $invalid_input = array();\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n            \n            // validate email\n            if (\n                    array_key_exists('CONFIG_MAIL_SMTPFROM', $_POST) &&\n                    !empty(trim($_POST['CONFIG_MAIL_SMTPFROM'])) &&\n                    filter_var(trim($_POST['CONFIG_MAIL_SMTPFROM']), FILTER_VALIDATE_EMAIL)\n               ) {\n                $configValues['CONFIG_MAIL_SMTPFROM'] = trim($_POST['CONFIG_MAIL_SMTPFROM']);\n            } else {\n                $invalid_input['CONFIG_MAIL_SMTPFROM'] = $param_label['CONFIG_MAIL_SMTPFROM'];\n            }\n            \n            // validate port\n            if (\n                    array_key_exists('CONFIG_MAIL_SMTPPORT', $_POST) &&\n                    !empty(trim($_POST['CONFIG_MAIL_SMTPPORT'])) &&\n                    intval(trim($_POST['CONFIG_MAIL_SMTPPORT'])) >= 0 &&\n                    intval(trim($_POST['CONFIG_MAIL_SMTPPORT'])) <= 65535\n               ) {\n                $configValues['CONFIG_MAIL_SMTPPORT'] = intval(trim($_POST['CONFIG_MAIL_SMTPPORT']));\n            } else {\n                $invalid_input['CONFIG_MAIL_SMTPPORT'] = $param_label['CONFIG_MAIL_SMTPPORT'];\n            }\n            \n            // validate ip address/hostname\n            if (\n                    array_key_exists('CONFIG_MAIL_SMTPADDR', $_POST) &&\n                    !empty(trim($_POST['CONFIG_MAIL_SMTPADDR'])) &&\n                    (\n                        preg_match(HOSTNAME_REGEX, trim($_POST['CONFIG_MAIL_SMTPADDR'])) ||\n                        preg_match(IP_REGEX, trim($_POST['CONFIG_MAIL_SMTPADDR']))\n                    )\n               ) {\n                $configValues['CONFIG_MAIL_SMTPADDR'] = trim($_POST['CONFIG_MAIL_SMTPADDR']);\n            } else {\n                $invalid_input['CONFIG_MAIL_SMTPADDR'] = $param_label['CONFIG_MAIL_SMTPADDR'];\n            }\n            \n            if (count($invalid_input) > 0) {\n                $failureMsg = sprintf(\"Invalid input: [%s]\", implode(\", \", array_values($invalid_input)));\n                $logAction .= \"$failureMsg on page: \";\n            } else {\n                include(\"library/config_write.php\");\n            }\n            \n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n\n    \n    // print HTML prologue\n    $title = t('Intro','configmail.php');\n    $help = t('helpPage','configmail');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-config.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n\n    $fieldset0_descriptor = array(\n                                    \"title\" => t('title','Settings')\n                                 );\n\n    $input_descriptors0 = array();\n    \n    \n    $input_descriptors0[] = array(\n                                        \"type\" => \"text\",\n                                        \"caption\" => t('all','SMTPServerAddress'),\n                                        \"name\" => 'CONFIG_MAIL_SMTPADDR',\n                                        \"value\" => (!array_key_exists('CONFIG_MAIL_SMTPADDR', $invalid_input)\n                                                    ? $configValues['CONFIG_MAIL_SMTPADDR'] : \"\")\n                                     );\n    \n    $input_descriptors0[] = array(\n                                        \"type\" => \"number\",\n                                        \"caption\" => t('all','SMTPServerPort'),\n                                        \"name\" => 'CONFIG_MAIL_SMTPPORT',\n                                        \"value\" => (!array_key_exists('CONFIG_MAIL_SMTPPORT', $invalid_input)\n                                                    ? $configValues['CONFIG_MAIL_SMTPPORT'] : \"\"),\n                                        \"min\" => 0,\n                                        \"max\" => 65535\n                                 );\n    \n    $input_descriptors0[] = array(\n                                        \"type\" => \"email\",\n                                        \"caption\" => t('all','SMTPServerFromEmail'),\n                                        \"name\" => 'CONFIG_MAIL_SMTPFROM',\n                                        \"value\" => (!array_key_exists('CONFIG_MAIL_SMTPFROM', $invalid_input)\n                                                    ? $configValues['CONFIG_MAIL_SMTPFROM'] : \"\"),\n                                     );\n    \n    $input_descriptors0[] = array(\n                                    \"name\" => \"csrf_token\",\n                                    \"type\" => \"hidden\",\n                                    \"value\" => dalo_csrf_token(),\n                                 );\n\n    $input_descriptors0[] = array(\n                                    'type' => 'submit',\n                                    'name' => 'submit',\n                                    'value' => t('buttons','apply')\n                                 );\n\n    open_form();\n    \n    // open 0-th fieldset\n    open_fieldset($fieldset0_descriptor);\n    \n    foreach ($input_descriptors0 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    close_fieldset();\n    \n    close_form();\n    \n    include('include/config/logging.php');\n    \n    print_footer_and_html_epilogue();\n\n?>\n", ":root {\n    --rich-black-fogra: #001011ff;\n    --rich-black: #093a3eff;\n    --verdigris: #3aafb9ff;\n    --electric-blue: #64e9eeff;\n    --pale-cerulean: #97c8ebff;\n}\n\n /* Style the buttons that are used to open and close the accordion panel */\n.accordion {\n  background-color: #f1f1f1;\n\u00a0\u00a0color: black;\n  cursor: pointer;\n  padding: 18px;\n  width: 100%;\n  text-align: left;\n  border: 0;\n\u00a0\u00a0outline: none;\n}\n\n/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n.accordion-active, .accordion:hover {\n  background-color: #ddd;\n  border: 0;\n}\n\n.panel {\n  padding: 0;\n  margin-bottom: 10px;\n\u00a0\u00a0background-color: white;\n\u00a0\u00a0display: none;\n\u00a0\u00a0overflow: hidden;\n} \n\n.accordion:after {\n\u00a0\u00a0content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\u00a0\u00a0font-size: 13px;\n  color: black;\n  float: right;\n\u00a0\u00a0margin-left: 5px;\n}\n\n.accordion-active:after {\n\u00a0\u00a0content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n}\n\n.panel table {\n    margin-bottom: 5px;\n}\n\n.badge {\n    color: white;\n    padding: 2px 4px;\n    text-align: center;\n    border-radius: 5px;\n    font-size: 10px;\n    user-select: none;\n}\n\n.badge-mac, .badge-pin {\n    background-color: #008cba;\n}\n\n.badge-user {\n    background-color: #4CAF50;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    font-family: Geneva, Verdana, sans-serif;\n}\n\n#header {\n    width: 100%;\n    height: 140px;\n    \n}\n\n#sidebar {\n    float: left;\n    width: 16%;\n    height: 100%;\n    min-height: 640px;\n    background-color: var(--rich-black-fogra);\n    padding: 1%;\n}\n\n#contentnorightbar {\n    float: left;\n    width: 80%;\n    height: 100%;\n    min-height: 640px;\n    padding: 1%;\n}\n\n#footer {\n    clear: both;\n    padding: 1%;\n    background-color: var(--rich-black);\n    color: white;\n    margin-bottom: 0 !important;\n}\n\n#footer a {\n    color: lightgray;\n}\n\nbody {\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    font-family: Geneva, Verdana, sans-serif;\n}\n\n#wrapper {\n    background: white;\n    max-width: 100%;\n    min-width: 800px;\n    margin: 0 auto;\n}\n\n#innerwrapper {\n    width: 100%;\n}\n\n#header input {\n    width: 240px;\n    margin: 12px;\n    padding: 7px;\n    border: 1px solid lightgray;\n    border-radius: 3px;\n    resize: vertical;\n}\n\n#header input:focus, #header input:hover {\n    border: 1px solid darkgray;\n    background-color: ghostwhite;\n}\n\n#header form {\n    float: right;\n    width: 320px;\n    border: none;\n}\n\n#header h1 {\n    float: left;\n    font-size: 250%;\n    padding: 5px 20px;\n    border-right: 1px solid #ccc;\n    margin: 0 20px 0 0;\n}\n\n#header h2 {\n    font-weight: normal;\n    font-size: 125%;\n    color: var(--rich-black);\n    padding: 0;\n    padding-top: 16px;\n    border: none;\n}\n\n#header h2 a {\n    color: var(--rich-black-fogra);\n    text-decoration: none;\n}\n\n#header h2 a:hover {\n    color: var(--rich-black);\n}\n\n#header #login_data {\n    float: right;\n    margin: 10px;\n}\n\n#header #login_data a {\n    color:#f00;\n    text-decoration:none;\n}\n\n#header .sep {\n    float:right;\n    border-right:1px solid #ccc;\n    margin: 0;\n    padding: 0;\n    font-size: 46px;\n}\n\n#header #nav {\n    background-color: var(--rich-black-fogra);\n    padding: 10px;\n    margin-top: 20px;\n}\n\n#header a em {\n    font-style: normal;\n    text-decoration: underline;\n}\n\n#header #nav a {\n    color: white;\n    font-size: 120%;\n    text-decoration: none;\n    padding: 10px;\n}\n\n#header #nav a:hover, #header #nav a.active {\n    background-color: var(--verdigris);\n}\n\n#header #nav li, #header #subnav li {\n    display: inline;\n    list-style: none;\n    margin: auto 1px;\n}\n\n#header #subnav {\n    background-color: var(--verdigris);\n    padding: 0;\n    font-size: 90%;\n    color: white;\n    padding: 10px 25px;\n}\n\n#header #subnav a {\n    color: white;\n    text-decoration: none;\n    padding: 10px 10px;\n    \n}\n\n#header #subnav a:hover, #header #subnav a.active {\n    background-color: var(--electric-blue);\n}\n\n#sidebar h2 {\n    color: var(--electric-blue);\n    font-size: 110%;\n    font-weight: bold;\n\n    margin: 5px 0;\n    border: 0;\n}\n\n#sidebar h3 {\n    color: var(--verdigris);\n    font-size: 90%;\n    font-weight: bold;\n\n    margin-top: 30px;\n}\n\n#sidebar p {\n    margin:15px 0;\n}\n\n#sidebar p.news {\n    padding: 7px;\n    margin: 5px auto;\n    border: 1px solid var(--pale-cerulean);\n    border-radius: 3px;\n    resize: vertical;\n    \n    font-size: 14px;\n    color: var(--pale-cerulean);\n    background-color: var(--rich-black-fogra);\n    \n    -ms-box-sizing: content-box;\n    -moz-box-sizing: content-box;\n    -webkit-box-sizing: content-box; \n    box-sizing: content-box;\n}\n\n#sidebar p.news a.more {\n    color: #eeeeee;\n    display: block;\n    text-align: right;\n    font-size: 80%;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    text-decoration: none;\n    padding: 10px 0;\n}\n\n#sidebar p.news a:hover {\n    color: var(--electric-blue);\n}\n\n#sidebar .subnav {\n    border-top: 1px solid var(--pale-cerulean);\n}\n\n#sidebar .subnav li {\n    list-style: none;\n    padding: 5px;\n    border-bottom: 1px solid var(--pale-cerulean);\n}\n\n#sidebar .subnav li a {    \n    color: white;\n    text-decoration: none;\n    display: block;\n}\n\n#sidebar .subnav li a:hover {\n    color: var(--pale-cerulean);\n}\n\n#sidebar .subnav li a b {\n    float: right;\n    display: none;\n    color: var(--pale-cerulean);\n}\n\n#sidebar .subnav li a:hover b {\n    display: inline;\n}\n\n#sidebar input, #sidebar select {\n    width: 100%;\n    padding: 7px;\n    margin: 5px auto;\n    border: 1px solid var(--pale-cerulean);\n    border-radius: 3px;\n    resize: vertical;\n    \n    font-size: 14px;\n    color: var(--rich-black-fogra);\n    background-color: white;\n    \n    -ms-box-sizing: content-box;\n    -moz-box-sizing: content-box;\n    -webkit-box-sizing: content-box; \n    box-sizing: content-box;\n}\n\nh3.form {\n    font-weight: bold;\n    margin: auto 20px;\n}\n\nfieldset textarea {\n    padding: 5px;\n    margin: 4px;\n    border: 1px solid var(--rich-black);\n    border-radius: 3px;\n    resize: vertical;\n    \n    min-width: 200px;\n    \n    font-size: 12px;\n    color: var(--rich-black-fogra);\n    background-color: white;\n    \n    -ms-box-sizing: content-box;\n    -moz-box-sizing: content-box;\n    -webkit-box-sizing: content-box; \n    box-sizing: content-box;\n}\n\nfieldset input[type=text], fieldset input[type=number],\nfieldset input[type=date], fieldset input[type=password],\nfieldset input[type=email], fieldset select {\n    padding: 5px;\n    margin: 4px;\n    border: 1px solid var(--rich-black);\n    border-radius: 3px;\n    resize: vertical;\n    \n    min-width: 200px;\n    \n    font-size: 12px;\n    color: var(--rich-black-fogra);\n    background-color: white;\n    \n    -ms-box-sizing: content-box;\n    -moz-box-sizing: content-box;\n    -webkit-box-sizing: content-box; \n    box-sizing: content-box;\n}\n\nfieldset input[type=text]:disabled, fieldset input[type=numer]:disabled,\nfieldset input[type=date]:disabled, fieldset input[type=password]:disabled,\nfieldset input[type=email]:disabled, fieldset select:disabled {\n    background-color: #eeeeee;\n    border: 1px solid gray;\n}\n\n#sidebar select:hover, #sidebar select:focus, #sidebar input:hover, #sidebar input:focus {\n    border: 1px solid var(--electric-blue);\n}\n\n#sidebar label {\n    color: white;\n    font-size: 14px;\n    display: block;\n    width: 100%;\n}\n\n#sidebarright {\n    width:170px;\n    float:right;\n    padding:10px 0 0 20px;\n    background:url(../images/sidebarright.jpg) top left no-repeat;\n}\n\n#sidebarright p {\n    font:90% sans-serif;\n    color:#777;\n    line-height:20px;\n    margin:10px 0;\n}\n\n#sidebarright h2 {\n    font:140% sans-serif;\n    color:#333;\n    margin:10px 0;\n    border:none;\n}\n\n#sidebarright ul {\n    margin:10px 0 10px 15px;\n    font:90% sans-serif;\n}\n\n#sidebarright ul li {\n    margin:5px 0;\n}\n\n#sidebarright a {\n    border-bottom:1px dotted #eee;\n    color:#444;\n    text-decoration:none;\n}\n\n#sidebarright a:hover {\n    border-bottom:1px solid #ccc;\n}\n\n\n#content {\n    margin:0 210px 0 240px;\n    background:url(../images/content.jpg) top left no-repeat;\n    padding:20px 0 0 20px;\n}\n\n#content ul {      \n             margin:15px 0 15px 0;      \n             line-height:25px;      \n             padding:15px 0 15px 15px;      \n             border-top:1px solid #eee;      \n             border-bottom:1px solid #eee;      \n             color:#79B933;      \n}\n\n#content ul span {      \n         color:#444;      \n}\n\n/*\n#contentnorightbar {\n    margin:0 0 0 240px;\n    padding:20px 0 0 20px;\n}\n*/\n\np {\n    margin:15px 0;\n    line-height:22px;\n}\n\nh2 {\n    font-size: 190%;\n    color: var(--pale-cerulean);\n    border-bottom: 2px solid #eeeeee;\n}\n\nh2 a {\n    color: var(--pale-cerulean);\n    text-decoration: none;\n}\n\nh2 a:hover {\n    color: var(--pale-cerulean);\n}\n\n/*\n#footer {\n    clear:both;\n    border-top:1px solid #eee;\n    padding:10px;\n    margin:30px 0 0;\n}\n*/\n\na {\n    color:#222;\n}\n\nth a.table {\n    background-color: #008CBA;\n    color: white;\n    padding: 4px 8px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font: 14px;\n    line-height: normal;\n    font-weight: normal;\n    float: left;\n    opacity: 1;\n\n}\n\na.table:focus, a.table:hover {\n    opacity: 0.8;\n}\n\na.toolTip {\n    color: var(--pale-cerulean);\n}\n\n/*\n    --rich-black-fogra: #001011ff;\n    --rich-black: #093a3eff;\n    --verdigris: #3aafb9ff;\n    --electric-blue: #64e9eeff;\n    --pale-cerulean: #97c8ebff;\n*/\n\na:hover {\n    text-decoration: none;\n}\n\nh3 {\n    font:140% sans-serif;\n    margin:10px 0;\n}\n\n#contentnorightbar ul {\n    margin:15px 0 15px 20px;\n    text-align:left;\n    list-style-type: none;\n    border:    0px;\n    padding-bottom:    2px;\n    color:#79B933;\n}\n\nli.fieldset {\n    clear: left;\n    padding-top: 1px;\n}\n\n#contentnorightbar ul span {\n    color:#444; \n}\n\n#contentnorightbar h9 {\n        font:150% sans-serif;\n        color:#0066CC;\n        padding:16px 0 0 0;\n        border:none;\n}\n\n#contentnorightbar h8 {\n        font:150% sans-serif;\n        color:#FF0000;\n        padding:16px 0 0 0;\n        border:none;\n}\n\n\n#contentnorightbar h7 {\n        font:150% sans-serif;\n        color:#666;\n        padding:16px 0 0 0;\n        border:none;\n}\n\nform.sidebar {\n    padding:10px;\n    border:0px solid #f6f6f6;\n}\n\n\n/***********************************************\n* Forms With Style -  Design Melt Down (www.designmeltdown.com)\n* This notice MUST stay intact for legal use\n* Visit Design Melt Down at http://www.designmeltdown.com/ \n***********************************************/\n\nform input[type=\"submit\"].button {\n    background-color: #4CAF50;\n    border: none;\n    border-radius: 4px;\n    color: white;\n    padding: 10px 16px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 14px;\n    margin: 8px auto;\n    opacity: 1;\n}\n\nform input[type=\"submit\"].button:hover {\n    opacity: 0.7;\n}\n\n#contentnorightbar form fieldset hr {\n  border-top: 1px solid white;\n}\n\n#contentnorightbar form {\n    background-color: #fafafa;\n    padding-bottom: 4px;\n}\n\n#contentnorightbar form fieldset {\n    color: var(--rich-black);\n    font-size: 12px;\n    border: none;\n    padding: 10px;\n    margin: 2px auto;\n}\n\n#contentnorightbar form fieldset:disabled {\n    opacity: 0.25;\n}\n\nlabel.form {\n    display: inline;\n    vertical-align: baseline;\n    font-weight: bold;\n    color: var(--rich-black-fogra);\n    float: left;\n    min-width: 220px;\n    margin: auto 8px;\n    clear: left;\n}\n\nlabel.dorm {\n    background-position:left;\n\n    color:#646729;\n    font-size:90%;\n    font-weight:bold;\n    \n    border-width: 0px;\n    \n    display:block;\n    float:left;\n    width:160px;\n    height:1px;\n    text-align:left;\n    margin:4px 0px 0px 0px;\n    padding:0px 0px 0px 8px;\n    clear:left;\n}\n\nlabel.attributes {\n    background-position:left;\n\n    color:#646729;\n    font-size:90%;\n    font-weight:bold;\n    \n    border-width: 0px;\n    \n    display:block;\n    float:left;\n    min-width:280px;\n    height:1px;\n    text-align:left;\n    margin:4px 0px 0px 0px;\n    padding:0px 0px 0px 8px;\n    clear:left;\n}\n\ninput.sidebutton {\n    height:25px;\n    width:180px;\n    padding:1px;\n    border:1;\n    font:100% sans-serif;\n    color:#000000;\n    margin: 2px;\n}\n\ninput[type=\"button\"], input[type=\"submit\"] {\n    border: none;\n    border-radius: 4px;\n    padding: 4px 8px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 14px;\n    margin-left: 4px;\n    opacity: 1;\n}\n\n#contentnorightbar form .tabcontent input[type=\"submit\"],\n#contentnorightbar form input[type=\"submit\"]\n {\n    display: block;\n    width: 30%;\n}\n\n/*\nth .button {\n    border: none;\n    border-radius: 4px;\n    padding: 4px 8px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 14px;\n    margin-left: 4px;\n    opacity: 1;\n}\n*/\n\nth .button:focus, th .button:hover {\n    opacity: 0.8;\n}\n\nth .delete {\n    background-color: #eb4746;\n    color: white;\n}\n\nth .delete:focus, th .delete:hover {\n    background-color: #f56d6d;\n    color: #eeeeee;\n}\n\ninput.integer5len {\n        width:54px;\n}\n\ninput.integerLarge {\n        width:34px;\n}\n\ninput.integer {\n        width:19px;\n}\n\ninput.money {\n    text-align:right;\n}\n\ninput[type=\"radio\"] {\n        width:13px;\n}\n\ninput[type=checkbox] {\n    width:15px;\n    padding:1px,10px,10px,10px;\n    margin: 2px,10px,10px,10px;\n}\n\ninput[type='checkbox'].form {\n    width:15px;\n    margin-top: 7px;\n}\n\n/*\nselect.form {\n    width:185px;\n    height:22px;\n    padding:1px;\n    border:1;\n    font:100% sans-serif;\n    color:#000000;\n    margin: 2px;\n}\n*/\n\nselect.long {\n    width:185px;\n    height:20px;\n    padding:1px;\n    border:1;\n    font:100% sans-serif;\n    color:#000000;\n    margin: 2px;\n}\n\n\ndiv.ToolTip {\n    font:88% sans-serif;\n    padding-top: 1px;\n    padding-bottom: 8px;\n    padding-right: 8px;\n    float:right; \n/*    color:#E8A417; */\n    color:#646729; \n    background-color: #FFF;\n    margin-right:32px;\n    border: 1px solid #C0C0C0;\n    border-radius: 4px;\n    box-shadow: 4px 4px #000;\n}\n\n\ndiv.ToolTip2 {\n    font:88% sans-serif;\n    padding-top: 1px;\n    padding-bottom: 1px;\n    color:#646729;\n}\n\n\noption {\n        padding:2px;\n}\n\n\ntextarea.form {\n    padding:4px;\n    margin:2px;\n    background:#ffffff;\n    color:#000000;\n    font:90% sans-serif;\n    width:175px;\n    height:60px;\n}\n\ntextarea.form_fileimport {\n    padding:4px;\n    margin:2px;\n    background:#ffffff;\n    color:#000000;\n    font:90% sans-serif;\n    width:575px;\n    height:400px;\n}\n\np img {\n    float:left;\n    margin:0 10px 0 0;\n}\n\na.helper {\n    color: green;\n        font: 9px sans-serif;\n    padding: 2px;\n    text-decoration:none;\n}\n\n\nblockquote p {\n    font:160% sans-serif;\n    color:#aaa;\n    padding:0 10% 0 0;\n    line-height:30px;\n}\n\ntable {\n    width: 100%;\n    color: #000000;\n    font: 0.9em/1.6em sans-serif;\n/*\n    border-collapse: collapse;\n*/\n    margin-left: auto;\n    margin-right: auto;\n    border: 0px solid #CCC;\n}\n\ntable,caption {\n    margin: 0 auto;\n/*    border-right: 1px solid #CCC; */\n/*    border-left: 1px solid #CCC; */\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n}\n\ntd, th {\n  border: 1px solid #cccccc;\n  text-align: left;\n  padding: 8px;\n}\n\nthead tr:first-child td {\n    border: none;\n}\n\ntfoot tr:last-child th {\n    border: none;\n    color: var(--rich-black);\n}\n\ntr:nth-child(even) {\n  background-color: #dddddd;\n}\n\ntbody a.novisit {\n    border: none;\n}\n\ntd input[type=\"checkbox\"] {\n    margin: auto 8px;\n}\n\n/*\n:root {\n    --rich-black-fogra: #001011ff;\n    --rich-black: #093a3eff;\n    --verdigris: #3aafb9ff;\n    --electric-blue: #64e9eeff;\n    --pale-cerulean: #97c8ebff;\n}\n*/\n\ntbody a.tablenovisit {\n    color: var(--rich-black);\n}\n\ntd.money {\n    text-align:right;\n}\n\n/* the color red used on acct-active.php to highlight overdue accounts */\nh100 {\n    color: red;\n}\n\nh109 {\n    color: white;\n}\n\n/* the <h144> header tag is used to display the ? char for page's helpPage information */\nh144 {\n    margin-left: 5px;\n    padding-left: 5px;\n    font-size: 0.75em;\n    border-left: 1px solid #eeeeee;\n}\n\n/* used in language files to highlight sections */\nh200 {\n    color: #FF8040;\n}\n\n/* header used in fieldset */\nh301 {\n    font-size: 110%;\n    font-weight: bold;\n    color: var(--verdigris);\n}\n\n/* header used in fieldset */\nfieldset h302 {\n    display: block;\n    float: right;\n    text-decoration: none;\n    font-weight: bold;\n    color: var(--pale-cerulean);\n\n    user-select: none;\n}\n\n\n\n/********************* BEGIN Carlos Changes ************************/\n\n.summarySection {\n    width: 70%;\n    margin: 10px auto;\n}\n\n.summarySection tr {\n    vertical-align: center;\n}\n\n.summaryValue {\n    padding-left: 15px;\n    padding-top: 2px;\n    padding-bottom: 2px;\n    background-color: #eeeeee;\n}\n\n.summaryKey {\n    width: 35%;\n    background-color: white;\n    text-align: right;\n    vertical-align: top;\n}\n\n.sleft { float: left; }\n\n/********************* END Carlos Changes ************************/\n\n\n\n\n\n\n\n/********************* BEGIN Carlos box containers ***************/\n\n\n\n.failure {\n    border: 1px solid #fa601d;\n    padding: 9pt 9pt 9pt 33pt;\n    margin: 12px auto;\n    color: #484554;\n    font-family: sans-serif;\n    background: #FDDDD9 url(\"../images/icons/action-error.gif\") 6pt 6pt no-repeat;\n    \n}\n\n.warning {\n    background: #F8FEA5 url(../images/icons/action-warning.gif) no-repeat scroll 6pt;\n    border: 1px solid #EBFA1D;\n    color: #484554;\n    margin: 12px;\n    padding:9pt 9pt 9pt 33pt;\n}\n\n.success {\n    background: #DFEF7A url(../images/icons/action-success.gif) no-repeat scroll 6pt;\n    border: 1px solid #A9C500;\n    color: #484554;\n    padding: 9pt 9pt 9pt 33pt;\n    margin: 12px auto;\n}\n\n\n.help {\n    border-bottom: 1px solid #1d4efa;\n    padding: 9pt 9pt 9pt 33pt;\n    color: #484554;\n    font-size: 8pt;\n    background: #DFF5FE url(\"../images/icons/action-help.gif\") 6pt 6pt no-repeat;\n    margin: 1em 0px 1em 0px;\n}\n\n\n/********************* END Carlos box containers *****************/\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Description:    reads configuration file from daloradius.conf.php and\n *                 loads its contents to the $configValues associated array\n *\n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/library/config_read.php') !== false) {\n    header(\"Location: ../index.php\");\n    exit;\n}\n\n$_configFile = dirname(__FILE__) . '/daloradius.conf.php';\ninclude($_configFile);\n\n// strip slashes (if any)\nforeach ($configValues as $_configOption => $_configElem) {\n    if (is_array($_configElem)) {\n        continue;\n    }\n    \n    $configValues[$_configOption] = stripslashes($_configElem);\n}\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Description:    writes configuration information from the $configValues array\n *                 to the daloradius.conf.php configuration file\n * \n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/library/config_write.php') !== false) {\n    header(\"Location: ../index.php\");\n    exit;\n}\n\n// useful variables\n$configFile = dirname(__FILE__) . '/daloradius.conf.php';\n$date = date(\"D M j G:i:s T Y\");\n\n//\n// generating file contents\n//\n\n// 1. open\n$fileContents = <<<EOL\n<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n * \n * Description:          daloRADIUS Configuration File\n *\n * Modification Date:    {$date}\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos(\\$_SERVER['PHP_SELF'], '/library/daloradius.conf.php') !== false) {\n    header(\"Location: ../index.php\");\n    exit;\n}\n\n\nEOL;\n\n// 2. body\nforeach ($configValues as $_configOption => $_configElem) {\n    $fileContents .= sprintf(\"\\$configValues['%s'] =\", $_configOption);\n    \n    if (is_array($configValues[$_configOption])) {\n        $fileContents .= str_repeat(\" \", 8) . sprintf(\"%s;\\n\", var_export($configValues[$_configOption], true));\n    } else {\n        $fileContents .= sprintf(\" '%s';\\n\", addslashes($configValues[$_configOption]));\n    }\n}\n\n// 3. close\n$fileContents .= <<<EOL\n\n?>\n\nEOL;\n\n//\n// putting contents into file\n//\n$writtenBytes = intval(file_put_contents($configFile, $fileContents));\n\nif ($writtenBytes > 0) {\n    $successMsg = \"Configuration file has been successfully updated\";\n} else {\n    $failureMsg = sprintf(\"Could not open the file for writing: <strong>%s</strong>\", $configFile)\n                . \"<br>Check file permissions. The file should be writable by the webserver's user/group\";\n} \n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n * \n * Authors:        Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/library/validation.php') !== false) {\n    header('Location: ../index.php');\n    exit;\n}\n\n// commonly used regexes collection\ndefine(\"DATE_REGEX\", '/^([0-9]{4})-([0-9]{2})-([0-9]{2})$/');\ndefine(\"ORDER_TYPE_REGEX\", '/^(de|a)sc$/');\ndefine(\"HOSTNAME_REGEX\", '/^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$/');\ndefine(\"IP_REGEX\", '/^(((2(5[0-5]|[0-4][0-9]))|1[0-9]{2}|[1-9]?[0-9]).){3}((2(5[0-5]|[0-4][0-9]))|1[0-9]{2}|[1-9]?[0-9])$/');\ndefine(\"NETMASK_LENGTH_REGEX\", '/^3[0-2]|[1-2][0-9]|[1-9]$/');\ndefine(\"MACADDR_REGEX\", '/^(?:[0-9A-Fa-f]{2}([-:]))(?:[0-9A-Fa-f]{2}\\1){4}[0-9A-Fa-f]{2}$/');\ndefine(\"PINCODE_REGEX\", '/^[a-zA-Z0-9]+$/');\n\n// this regex allows input like (e.g.) 127, 127., 127.0, 127.0., 127.0.0, 127.0.0 and 127.0.0.1\ndefine(\"LOOSE_IP_REGEX\", '/^(((2(5[0-5]|[0-4][0-9]))|1[0-9]{2}|[1-9]?[0-9])\\.?){1,4}$/');\n\ndefine(\"ALL_PRINTABLE_CHARS_REGEX\", '/^[ -~]+$/');\n\ndefine(\"DB_TABLE_NAME_REGEX\", '/^[a-zA-Z0-9_]+$/');\n\n// some parameters can be validated using a whitelist.\n// here we collect some useful whitelist.\n// this lists can be also used for presentation purpose.\n// whitelists naming convention:\n// $valid_ [param_name] s\n$valid_backupActions = array( \"download\" => t('all','Download'), \"rollback\" => t('all','Rollback'), \"delete\" => \"Delete\");\n\n$valid_authTypes = array( \n                            \"userAuth\" => \"Based on username and password\",\n                            \"macAuth\" => \"Based on MAC address\",\n                            \"pincodeAuth\" => \"Based on PIN code\"\n                        );\n\n$valid_passwordTypes = array(\n                                \"Cleartext-Password\",\n                                \"NT-Password\",\n                                \"MD5-Password\",\n                                \"SHA1-Password\",\n                                \"User-Password\",\n                                \"Crypt-Password\",\n                                //~ \"CHAP-Password\"\n                             );\n\n$valid_ops = array(\n                    \"=\", \":=\", \":=\", \"==\", \"+=\", \"!=\", \">\",\n                    \">=\", \"<\", \"<=\", \"=~\", \"!~\", \"=*\", \"!*\"\n                  );\n\n$valid_recommendedHelpers = array(\n                                    \"date\", \"datetime\", \"authtype\", \"framedprotocol\", \"servicetype\",\n                                    \"kbitspersecond\", \"bitspersecond\", \"volumebytes\", \"mikrotikRateLimit\",\n                                 );\n\n$valid_attributeTypes = array(\n                                \"string\",\n                                \"integer\",\n                                \"ipaddr\",\n                                \"date\",\n                                \"octets\",\n                                \"ipv6addr\",\n                                \"ifid\",\n                                \"abinary\",\n                             );\n\n$valid_db_engines = array(\n                            \"mysql\" => \"MySQL\",\n                            \"pgsql\" => \"PostgreSQL\",\n                            \"odbc\" => \"ODBC\",\n                            \"mssql\" => \"MsSQL\",\n                            \"mysqli\" => \"MySQLi\",\n                            \"msql\" => \"MsQL\",\n                            \"sybase\" => \"Sybase\",\n                            \"sqlite\" => \"Sqlite\",\n                            \"oci8\" => \"Oci8 \",\n                            \"ibase\" => \"ibase\",\n                            \"fbsql\" => \"fbsql\",\n                            \"informix\" => \"informix\"\n                         );\n\n// values taken from an instance of freeradius 3.0.21\n$valid_nastypes = array(\n                         \"other\", \"cisco\", \"computone\", \"livingston\", \"juniper\", \"max40xx\", \"multitech\",\n                         \"netserver\", \"pathras\", \"patton\", \"portslave\", \"tc\", \"usrhiper\"\n                       );\n\n// accounting custom-query options list\n$acct_custom_query_options_all = array(\n                                        \"RadAcctId\",\n                                        \"AcctSessionId\",\n                                        \"AcctUniqueId\",\n                                        \"UserName\",\n                                        \"Realm\",\n                                        \"NASIPAddress\",\n                                        \"NASPortId\",\n                                        \"NASPortType\",\n                                        \"AcctStartTime\",\n                                        \"AcctStopTime\",\n                                        \"AcctSessionTime\",\n                                        \"AcctAuthentic\",\n                                        \"ConnectInfo_start\",\n                                        \"ConnectInfo_stop\",\n                                        \"AcctInputOctets\",\n                                        \"AcctOutputOctets\",\n                                        \"CalledStationId\",\n                                        \"CallingStationId\",\n                                        \"AcctTerminateCause\",\n                                        \"ServiceType\",\n                                        \"FramedProtocol\",\n                                        \"FramedIPAddress\",\n                                        \"AcctStartDelay\",\n                                        \"AcctStopDelay\"\n                                    );\n\n// accounting custom-query options selected by default\n$acct_custom_query_options_default = array(\n                                            \"UserName\", \"Realm\", \"NASIPAddress\", \"AcctStartTime\", \"AcctStopTime\",\n                                            \"AcctSessionTime\", \"AcctInputOctets\", \"AcctOutputOctets\", \"CalledStationId\",\n                                            \"CallingStationId\", \"AcctTerminateCause\", \"FramedIPAddress\"\n                                          );\n\n// billing history query options list\n$bill_history_query_options_all = array(\n                                            \"id\" => t('all','ID'),\n                                            \"username\" => t('all','Username'),\n                                            \"planId\" => t('all','PlanId'),\n\n                                            \"billAmount\" => t('all','BillAmount'),\n                                            \"billAction\" => t('all','BillAction'),\n                                            \"billPerformer\" => t('all','BillPerformer'),\n                                            \"billReason\" => t('all','BillReason'),\n\n                                            \"paymentmethod\" => t('ContactInfo','PaymentMethod'),\n                                            \"cash\" => t('ContactInfo','Cash'),\n\n                                            \"creditcardname\" => t('ContactInfo','CreditCardName'),\n                                            \"creditcardnumber\" => t('ContactInfo','CreditCardNumber'),\n                                            \"creditcardverification\" => t('ContactInfo','CreditCardVerificationNumber'),\n                                            \"creditcardtype\" => t('ContactInfo','CreditCardType'),\n                                            \"creditcardexp\" => t('ContactInfo','CreditCardExpiration'),\n                                            \"coupon\" => t('all','Coupon'),\n                                            \"discount\" => t('all','Discount'),\n                                            \"notes\" => t('ContactInfo','Notes'),\n                                            \"creationdate\" => t('all','CreationDate'),\n                                            \"creationby\" => t('all','CreationBy'),\n                                            \"updatedate\" => t('all','UpdateDate'),\n                                            \"updateby\" => t('all','UpdateBy')\n                                       );\n\n// billing history query options selected by default\n$bill_history_query_options_default = array(\n                                                \"username\",\n                                                \"planId\",\n                                                \"billAmount\",\n                                                \"billAction\",\n                                                \"billPerformer\",\n                                                \"paymentmethod\"\n                                           );\n\n$bill_merchant_transactions_options_all = array(\n                                                    \"id\" => t('all','ID'),\n                                                    \"username\" => t('all','Username'),\n                                                    \"password\"  => t('all','Password'),\n                                                    \"txnId\"  => t('all','TxnId'),\n                                                    \"planName\" => t('all','PlanName'),\n                                                    \"planId\"  => t('all','PlanId'),\n                                                    \"quantity\"  => t('all','Quantity'),\n                                                    \"business_email\"  => t('all','ReceiverEmail'),\n                                                    \"business_id\"  => t('all','Business'),\n                                                    \"payment_tax\" => t('all','Tax'),\n                                                    \"payment_cost\"  => t('all','Cost'),\n                                                    \"payment_fee\" => t('all','TransactionFee'),\n                                                    \"payment_total\" => t('all','TotalCost'),\n                                                    \"payment_currency\" => t('all','PaymentCurrency'),\n                                                    \"first_name\" => t('all','FirstName'),\n                                                    \"last_name\" => t('all','LastName'),\n                                                    \"payer_email\" => t('all','PayerEmail'),\n                                                    \"payer_address_name\"  => t('all','AddressRecipient'),\n                                                    \"payer_address_street\"  => t('all','Street'),\n                                                    \"payer_address_country\" => t('all','Country'),\n                                                    \"payer_address_country_code\"  => t('all','CountryCode'),\n                                                    \"payer_address_city\" => t('all','City'),\n                                                    \"payer_address_state\" => t('all','State'),\n                                                    \"payer_address_zip\"  => t('all','Zip'),\n                                                    \"payment_date\" => t('all','PaymentDate'),\n                                                    \"payment_status\" => t('all','PaymentStatus'),\n                                                    \"payer_status\" => t('all','PayerStatus'),\n                                                    \"payment_address_status\" => t('all','PaymentAddressStatus'),\n                                                    \"vendor_type\" => t('all','VendorType')\n                                               );\n                                               \n$bill_merchant_transactions_options_default = array(\n                                                        \"username\",\n                                                        \"planName\",\n                                                        \"payment_fee\",\n                                                        \"payment_total\",\n                                                        \"payment_currency\",\n                                                        \"first_name\",\n                                                        \"last_name\",\n                                                        \"payer_email\",\n                                                        \"payer_address_country\",\n                                                        \"payer_address_city\",\n                                                        \"payer_address_state\",\n                                                        \"payment_date\",\n                                                        \"payment_status\",\n                                                        \"vendor_type\"\n                                                   );\n\n// validating values\n\n$valid_paymentStatus = array(\n                              \"Any\", \"Completed\",  \"Denied\",  \"Expired\",  \"Failed\",  \"In-Progress\",  \"Pending\", \n                              \"Processed\",  \"Refunded\",  \"Reversed\",  \"Canceled-Reversal\",  \"Voided\", \n                            );\n$valid_vendorTypes = array( \"Any\", \"2Checkout\", \"PayPal\" );\n$valid_billactions = array( \"Any\", \"Refill Session Time\", \"Refill Session Traffic\" );\n\n$valid_languages = array(\n                            \"en\" => \"English\", \n                            \"it\" => \"Italian\", \n                            \"hu\" => \"Hungarian\", \n                            \"ro\" => \"Romanian\",\n                            \"tr\" => \"Turkish\",\n                            \"ru\" => \"Russian\", \n                            \"ja\" => \"Japanese\",\n                            \"zh\" => \"Chinese\",\n                            \"es_ve\" => \"Spanish - Venezuelan\", \n                            \"pt_br\" => \"Portuguese - Brazilian\",\n                        );\n\n?>\n"], "filenames": ["config-backup-managebackups.php", "config-logging.php", "config-mail.php", "css/2.css", "library/config_read.php", "library/config_write.php", "library/validation.php"], "buggy_code_start_loc": [39, 74, 28, 365, 17, 17, 31], "buggy_code_end_loc": [217, 75, 110, 387, 52, 72, 31], "fixing_code_start_loc": [39, 74, 27, 365, 16, 16, 32], "fixing_code_end_loc": [241, 75, 177, 387, 43, 107, 33], "type": "CWE-94", "message": "Code Injection in GitHub repository lirantal/daloradius prior to master-branch.", "other": {"cve": {"id": "CVE-2023-0048", "sourceIdentifier": "security@huntr.dev", "published": "2023-01-04T14:15:10.117", "lastModified": "2023-01-10T18:19:26.570", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Code Injection in GitHub repository lirantal/daloradius prior to master-branch."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.2, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.2, "impactScore": 5.9}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:daloradius:daloradius:*:*:*:*:*:*:*:*", "versionEndExcluding": "2023-01-04", "matchCriteriaId": "7DD76224-4B00-4D98-80C7-66C46785EB22"}]}]}], "references": [{"url": "https://github.com/lirantal/daloradius/commit/3650eea7277a5c278063214a5b71dbd7d77fc5aa", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/57abd666-4b9c-4f59-825d-1ec832153e79", "source": "security@huntr.dev", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/lirantal/daloradius/commit/3650eea7277a5c278063214a5b71dbd7d77fc5aa"}}