{"buggy_code": ["using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing NBitcoin.Crypto;\n\nnamespace BTCPayServer.Security\n{\n    public class ConsentSecurityPolicy\n    {\n        public ConsentSecurityPolicy(string name, string value)\n        {\n            if (value.Contains(';', StringComparison.OrdinalIgnoreCase))\n                throw new FormatException();\n            _Value = value;\n            _Name = name;\n        }\n\n\n        private readonly string _Name;\n        public string Name\n        {\n            get\n            {\n                return _Name;\n            }\n        }\n\n        private readonly string _Value;\n        public string Value\n        {\n            get\n            {\n                return _Value;\n            }\n        }\n\n\n        public override bool Equals(object obj)\n        {\n            ConsentSecurityPolicy item = obj as ConsentSecurityPolicy;\n            if (item == null)\n                return false;\n            return GetHashCode().Equals(item.GetHashCode());\n        }\n        public static bool operator ==(ConsentSecurityPolicy a, ConsentSecurityPolicy b)\n        {\n            if (System.Object.ReferenceEquals(a, b))\n                return true;\n            if (((object)a == null) || ((object)b == null))\n                return false;\n            return a.GetHashCode() == b.GetHashCode();\n        }\n\n        public static bool operator !=(ConsentSecurityPolicy a, ConsentSecurityPolicy b)\n        {\n            return !(a == b);\n        }\n\n        public override int GetHashCode()\n        {\n            return HashCode.Combine(Name, Value);\n        }\n    }\n    public class ContentSecurityPolicies\n    {\n        public ContentSecurityPolicies()\n        {\n\n        }\n\n        readonly HashSet<ConsentSecurityPolicy> _Policies = new HashSet<ConsentSecurityPolicy>();\n\n        /// <summary>\n        /// Allow a specific script as event handler\n        /// </summary>\n        /// <param name=\"script\"></param>\n        public void AllowUnsafeHashes(string script = null)\n        {\n            if (!allowUnsafeHashes)\n            {\n                Add(\"script-src\", $\"'unsafe-hashes'\");\n                allowUnsafeHashes = true;\n            }\n            if (script != null)\n            {\n                var sha = GetSha256(script);\n                Add(\"script-src\", $\"'sha256-{sha}'\");\n            }\n        }\n\n        bool allowUnsafeHashes = false;\n        /// <summary>\n        /// Allow the injection of script tag with the following script\n        /// </summary>\n        /// <param name=\"script\"></param>\n        public void AllowInline(string script)\n        {\n            ArgumentNullException.ThrowIfNull(script);\n            var sha = GetSha256(script);\n            Add(\"script-src\", $\"'sha256-{sha}'\");\n        }\n        static string GetSha256(string script)\n        {\n            return Convert.ToBase64String(Hashes.SHA256(Encoding.UTF8.GetBytes(script.Replace(\"\\r\\n\", \"\\n\", StringComparison.Ordinal))));\n        }\n\n        public void Add(string name, string value)\n        {\n            Add(new ConsentSecurityPolicy(name, value));\n        }\n        public void Add(ConsentSecurityPolicy policy)\n        {\n            _Policies.Add(policy);\n        }\n\n        public IEnumerable<ConsentSecurityPolicy> Rules => _Policies;\n        public bool HasRules => _Policies.Count != 0;\n\n        public override string ToString()\n        {\n            StringBuilder value = new StringBuilder();\n            bool firstGroup = true;\n            foreach (var group in Rules.GroupBy(r => r.Name))\n            {\n                if (!firstGroup)\n                {\n                    value.Append(';');\n                }\n                HashSet<string> values = new HashSet<string>();\n                List<string> valuesList = new List<string>();\n                values.Add(group.Key);\n                valuesList.Add(group.Key);\n                foreach (var v in group)\n                {\n                    if (values.Add(v.Value))\n                        valuesList.Add(v.Value);\n                }\n                value.Append(String.Join(\" \", valuesList.OfType<object>().ToArray()));\n                firstGroup = false;\n            }\n            return value.ToString();\n        }\n    }\n}\n", "using System;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing BTCPayServer.Security;\nusing Microsoft.AspNetCore.Mvc.Filters;\n\nnamespace BTCPayServer.Filters\n{\n    public interface IContentSecurityPolicy : IFilterMetadata { }\n    public enum CSPTemplate\n    {\n        AntiXSS\n    }\n    public class ContentSecurityPolicyAttribute : Attribute, IActionFilter, IContentSecurityPolicy\n    {\n        public ContentSecurityPolicyAttribute()\n        {\n\n        }\n        public ContentSecurityPolicyAttribute(CSPTemplate template)\n        {\n            if (template == CSPTemplate.AntiXSS)\n            {\n                AutoSelf = false;\n                FixWebsocket = false;\n                UnsafeInline = false;\n                ScriptSrc = \"'self' 'unsafe-eval'\"; // unsafe-eval needed for vue\n            }\n        }\n\n        public void OnActionExecuted(ActionExecutedContext context)\n        {\n\n        }\n        public bool Enabled { get; set; } = true;\n        public bool AutoSelf { get; set; } = true;\n        public bool UnsafeInline { get; set; } = true;\n        public bool FixWebsocket { get; set; } = true;\n        public string FontSrc { get; set; } = null;\n        public string ImgSrc { get; set; } = null;\n        public string DefaultSrc { get; set; }\n        public string StyleSrc { get; set; }\n        public string ScriptSrc { get; set; }\n        public string ManifestSrc { get; set; }\n\n        public void OnActionExecuting(ActionExecutingContext context)\n        {\n            if (!context.IsEffectivePolicy<IContentSecurityPolicy>(this) || !Enabled)\n                return;\n            var policies = context.HttpContext.RequestServices.GetService(typeof(ContentSecurityPolicies)) as ContentSecurityPolicies;\n            if (policies == null)\n                return;\n            if (DefaultSrc != null)\n            {\n                policies.Add(new ConsentSecurityPolicy(\"default-src\", DefaultSrc));\n            }\n            if (UnsafeInline)\n            {\n                policies.Add(new ConsentSecurityPolicy(\"script-src\", \"'unsafe-inline'\"));\n            }\n            if (!string.IsNullOrEmpty(FontSrc))\n            {\n                policies.Add(new ConsentSecurityPolicy(\"font-src\", FontSrc));\n            }\n            if (!string.IsNullOrEmpty(ManifestSrc))\n            {\n                policies.Add(new ConsentSecurityPolicy(\"manifest-src\", FontSrc));\n            }\n\n            if (!string.IsNullOrEmpty(ImgSrc))\n            {\n                policies.Add(new ConsentSecurityPolicy(\"img-src\", ImgSrc));\n            }\n\n            if (!string.IsNullOrEmpty(StyleSrc))\n            {\n                policies.Add(new ConsentSecurityPolicy(\"style-src\", StyleSrc));\n            }\n\n            if (!string.IsNullOrEmpty(ScriptSrc))\n            {\n                policies.Add(new ConsentSecurityPolicy(\"script-src\", ScriptSrc));\n            }\n\n            if (FixWebsocket && AutoSelf) // Self does not match wss:// and ws:// :(\n            {\n                var request = context.HttpContext.Request;\n\n                var url = string.Concat(\n                        request.Scheme.Equals(\"http\", StringComparison.OrdinalIgnoreCase) ? \"ws\" : \"wss\",\n                        \"://\",\n                        request.Host.ToUriComponent(),\n                        request.PathBase.ToUriComponent());\n                policies.Add(new ConsentSecurityPolicy(\"connect-src\", url));\n            }\n\n            context.HttpContext.Response.OnStarting(() =>\n            {\n                if (!policies.HasRules)\n                    return Task.CompletedTask;\n                if (AutoSelf)\n                {\n                    bool hasSelf = false;\n                    foreach (var group in policies.Rules.GroupBy(p => p.Name))\n                    {\n                        hasSelf = group.Any(g => g.Value.Contains(\"'self'\", StringComparison.OrdinalIgnoreCase));\n                        if (!hasSelf && !group.Any(g => g.Value.Contains(\"'none'\", StringComparison.OrdinalIgnoreCase) ||\n                                           g.Value.Contains('*', StringComparison.OrdinalIgnoreCase)))\n                        {\n                            policies.Add(new ConsentSecurityPolicy(group.Key, \"'self'\"));\n                        }\n                    }\n                }\n                context.HttpContext.Response.SetHeader(\"Content-Security-Policy\", policies.ToString());\n                return Task.CompletedTask;\n            });\n        }\n    }\n}\n", "@model BTCPayServer.Plugins.Crowdfund.Models.ViewCrowdfundViewModel\n@using BTCPayServer.Plugins.Crowdfund.Models\n@inject BTCPayServer.Services.BTCPayServerEnvironment Env\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@{\n    ViewData[\"Title\"] = Model.Title;\n    Layout = null;\n    if (!string.IsNullOrEmpty(Model.DisqusShortname))\n    {\n        Csp.Add(\"script-src\", $\"https://{Model.DisqusShortname}.disqus.com\");\n        Csp.Add(\"script-src\", \"https://c.disquscdn.com\");\n    }\n}\n<!DOCTYPE html>\n<html class=\"h-100\" @(Env.IsDeveloping ? \" data-devenv\" : \"\")>\n<head>\n    <partial name=\"LayoutHead\"/>\n    <partial name=\"LayoutHeadStoreBranding\" model=\"@(Model.BrandColor, Model.CssFileId, Model.CustomCSSLink, Model.EmbeddedCSS)\" />\n    <link href=\"~/vendor/bootstrap-vue/bootstrap-vue.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/crowdfund/styles/main.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n\n    @if (!string.IsNullOrEmpty(Model.CustomCSSLink))\n    {\n        <link href=\"@Model.CustomCSSLink\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n    }\n    @if (!string.IsNullOrEmpty(Model.EmbeddedCSS))\n    {\n        @Safe.Raw($\"<style>{Model.EmbeddedCSS}</style>\")\n    }\n    <style>\n        #crowdfund-main-image {\n            border-radius: var(--btcpay-border-radius);\n            object-fit: cover;\n            max-width: 100%;\n            max-height: 40vh;\n        }\n        #crowdfund-body-description {\n            font-size: 16px;\n        }\n    </style>\n    <vc:ui-extension-point location=\"crowdfund-head\" model=\"@Model\"></vc:ui-extension-point>\n</head>\n<body class=\"min-vh-100 p-2\">\n@if (!Model.Enabled)\n{\n    <div class=\"alert alert-warning text-center sticky-top mb-0 rounded-0\" role=\"alert\">\n        This crowdfund page is not publically viewable!\n    </div>\n}\n@if (Model.AnimationsEnabled)\n{\n    <canvas id=\"fireworks\" class=\"d-none\"></canvas>\n}\n\n<div class=\"public-page-wrap flex-column container\" id=\"app\" @(Model.SimpleDisplay ? \"\" : \"v-cloak\")>\n    @if (!string.IsNullOrEmpty(Model.MainImageUrl))\n    {\n        <img v-if=\"srvModel.mainImageUrl\" src=\"@Model.MainImageUrl\" :src=\"srvModel.mainImageUrl\" alt=\"@Model.Title\" :alt=\"srvModel.title\" id=\"crowdfund-main-image\" asp-append-version=\"true\"/>\n    }\n    <div class=\"d-flex flex-column justify-content-between p-3 text-center\" id=\"crowdfund-header-container\">\n        <h1 class=\"mb-3\">@Model.Title</h1>\n        @if (!string.IsNullOrEmpty(Model.Tagline))\n        {\n            <h2 class=\"h3 mb-3 fw-semibold\" v-if=\"srvModel.tagline\" v-text=\"srvModel.tagline\">@Model.Tagline</h2>\n        }\n        @if (Model.TargetAmount.HasValue)\n        {\n            <span v-if=\"srvModel.targetAmount\" class=\"mt-3\" id=\"crowdfund-header-target\">\n                <h3 class=\"d-inline-block\">\n                    <span class=\"badge bg-info px-3\" v-text=\"`${targetAmount} ${targetCurrency}`\">@Math.Round(Model.TargetAmount.GetValueOrDefault(0)) @Model.TargetCurrency</span>\n                </h3>\n                @if (Model.ResetEveryAmount > 0 && !Model.NeverReset)\n                {\n                    <span v-if=\"srvModel.resetEvery !== 'Never'\"\n                          class=\"h5 ms-2\"\n                          v-b-tooltip\n                          :title=\"'Goal resets every ' + srvModel.resetEveryAmount + ' ' + srvModel.resetEvery + ((srvModel.resetEveryAmount>1)?'s': '')\">\n                        Dynamic\n                    </span>\n                }\n                @if (Model.EnforceTargetAmount)\n                {\n                    <span v-if=\"srvModel.enforceTargetAmount\" class=\"h5 ms-2\">\n                        Hardcap Goal\n                        <span v-b-tooltip title=\"No contributions allowed after the goal has been reached\"><vc:icon symbol=\"info\" /></span>\n                    </span>\n                }\n                else\n                {\n                    <span v-if=\"!srvModel.enforceTargetAmount\" class=\"h5 ms-2\">\n                        Softcap Goal\n                        <span v-b-tooltip title=\"Contributions allowed even after goal is reached\"><vc:icon symbol=\"info\" /></span>\n                    </span>\n                }\n            </span>\n        }\n        @if (!Model.Started && Model.StartDate.HasValue)\n        {\n            <h6 class=\"text-muted fst-italic mt-3\" v-if=\"!started && srvModel.startDate\" v-b-tooltip :title=\"startDate\" v-text=\"`Starts in ${startDiff}`\" data-test=\"time-state\">\n                Starts @TimeZoneInfo.ConvertTimeFromUtc(Model.StartDate.Value, TimeZoneInfo.Local)\n            </h6>\n        }\n        else if (Model.Started && !Model.Ended && Model.EndDate.HasValue)\n        {\n            <h6 class=\"text-muted fst-italic mt-3\" v-if=\"started && !ended && srvModel.endDate\" v-b-tooltip :title=\"endDate\" v-text=\"`Ends in ${endDiff}`\" data-test=\"time-state\">\n                Ends @TimeZoneInfo.ConvertTimeFromUtc(Model.EndDate.Value, TimeZoneInfo.Local)\n            </h6>\n        }\n        else if (Model.Started && !Model.Ended && !Model.EndDate.HasValue)\n        {\n            <h6 class=\"text-muted fst-italic mt-3\" v-if=\"started && !ended && !srvModel.endDate\" v-b-tooltip title=\"No set end date\" data-test=\"time-state\">\n                Currently active!\n            </h6>\n        }\n    </div>\n\n    @if (Model.TargetAmount.HasValue)\n    {\n        <div class=\"progress rounded-pill\" v-if=\"srvModel.targetAmount\" id=\"crowdfund-progress-bar\">\n            <div class=\"progress-bar bg-primary\"\n                 role=\"progressbar\"\n                 style=\"width:@(Model.Info.ProgressPercentage + \"%\")\"\n                 :aria-valuenow=\"srvModel.info.progressPercentage\"\n                 v-bind:style=\"{ width: srvModel.info.progressPercentage + '%' }\"\n                 aria-valuemin=\"0\"\n                 id=\"crowdfund-progress-bar-confirmed-bar\"\n                 v-b-tooltip\n                 :title=\"parseFloat(srvModel.info.progressPercentage).toFixed(2) + '% contributions'\"\n                 aria-valuemax=\"100\">\n            </div>\n            <div class=\"progress-bar bg-warning\"\n                 role=\"progressbar\"\n                 id=\"crowdfund-progress-bar-pending-bar\"\n                 style=\"width:@(Model.Info.PendingProgressPercentage + \"%\")\"\n                 :aria-valuenow=\"srvModel.info.pendingProgressPercentage\"\n                 v-bind:style=\"{ width: srvModel.info.pendingProgressPercentage + '%' }\"\n                 v-b-tooltip\n                 :title=\"parseFloat(srvModel.info.pendingProgressPercentage).toFixed(2) + '% contributions pending confirmation'\"\n                 aria-valuemin=\"0\"\n                 aria-valuemax=\"100\">\n            </div>\n        </div>\n    }\n\n    <div class=\"row py-2 text-center crowdfund-stats\">\n        <div class=\"col-sm border-end p-3 text-center\" id=\"crowdfund-body-raised-amount\">\n            <h3 v-text=\"`${raisedAmount} ${targetCurrency}`\">@Math.Round(Model.Info.CurrentAmount + Model.Info.CurrentPendingAmount, Model.CurrencyData.Divisibility) @Model.TargetCurrency</h3>\n            <h5 class=\"text-muted fst-italic mb-0\">Raised</h5>\n            <b-tooltip target=\"crowdfund-body-raised-amount\" v-if=\"paymentStats && paymentStats.length > 0\" class=\"only-for-js\">\n                <ul class=\"p-0 text-uppercase\">\n                    <li v-for=\"stat of paymentStats\" class=\"list-unstyled\">\n                        {{stat.label}} <span v-if=\"stat.lightning\" class=\"fa fa-bolt\"></span> {{stat.value}}\n                    </li>\n                </ul>\n            </b-tooltip>\n        </div>\n\n        <div class=\"col-sm border-end p-3 text-center\" id=\"crowdfund-body-goal-raised\">\n            <h3 v-text=\"`${percentageRaisedAmount}%`\">@Math.Round(Model.Info.PendingProgressPercentage.GetValueOrDefault(0) + Model.Info.ProgressPercentage.GetValueOrDefault(0))%</h3>\n            <h5 class=\"text-muted fst-italic mb-0\">Of Goal</h5>\n            <b-tooltip target=\"crowdfund-body-goal-raised\" v-if=\"srvModel.resetEvery !== 'Never'\" class=\"only-for-js\">\n                Goal resets every {{srvModel.resetEveryAmount}} {{srvModel.resetEvery}} {{srvModel.resetEveryAmount>1?'s': ''}}\n            </b-tooltip>\n        </div>\n\n        <div class=\"col-sm border-end p-3 text-center\" id=\"crowdfund-body-total-contributors\">\n            <h3 v-text=\"new Intl.NumberFormat().format(srvModel.info.totalContributors)\">@Model.Info.TotalContributors</h3>\n            <h5 class=\"text-muted fst-italic mb-0\">Contributors</h5>\n        </div>\n        \n        @if (Model.StartDate.HasValue || Model.EndDate.HasValue)\n        {\n            <div class=\"col-sm border-end p-3 text-center\" id=\"crowdfund-body-campaign-dates\">\n                @if (!Model.Started && Model.StartDate.HasValue)\n                {\n                    <div v-if=\"startDiff\">\n                        <h3 v-text=\"startDiff\">@TimeZoneInfo.ConvertTimeFromUtc(Model.StartDate.Value, TimeZoneInfo.Local)</h3>\n                        <h5 class=\"text-muted fst-italic mb-0\" v-text=\"'Left to start'\">Start Date</h5>\n                    </div>\n                }\n                else if (Model.Started && !Model.Ended && Model.EndDate.HasValue)\n                {\n                    <div v-if=\"!startDiff && endDiff\">\n                        <h3 v-text=\"endDiff\">@TimeZoneInfo.ConvertTimeFromUtc(Model.EndDate.Value, TimeZoneInfo.Local)</h3>\n                        <h5 class=\"text-muted fst-italic mb-0\" v-text=\"'Left'\">End Date</h5>\n                    </div>\n                }\n                else if (Model.Ended)\n                {\n                    <div v-if=\"ended\">\n                        <h3 class=\"mb-0\">Campaign not active</h3>\n                    </div>\n                }\n                <b-tooltip v-if=\"startDate || endDate\" target=\"crowdfund-body-campaign-dates\" class=\"only-for-js\">\n                    <ul class=\"p-0\">\n                        @if (Model.StartDate.HasValue)\n                        {\n                            <li v-if=\"startDate\" class=\"list-unstyled\">\n                                {{started? \"Started\" : \"Starts\"}} {{startDate}}\n                            </li>\n                        }\n                        @if (Model.EndDate.HasValue)\n                        {\n                            <li v-if=\"endDate\" class=\"list-unstyled\">\n                                {{ended? \"Ended\" : \"Ends\"}} {{endDate}}\n                            </li>\n                        }\n                    </ul>\n                </b-tooltip>\n            </div>\n        }\n    </div>\n\n    <div class=\"text-center mb-4\" id=\"crowdfund-body-header\">\n        <button v-if=\"active\" id=\"crowdfund-body-header-cta\" class=\"btn btn-lg btn-primary py-2 px-5 only-for-js\" v-on:click=\"contributeModalOpen = true\">Contribute</button>\n    </div>\n\n    <div class=\"row mt-4 justify-content-between gap-5\">\n        <div class=\"col-lg-7 col-sm-12\" id=\"crowdfund-body-description-container\">\n            <template v-if=\"srvModel.disqusEnabled && srvModel.disqusShortname\">\n                <b-tabs>\n                    <b-tab title=\"Details\" active>\n                        <div class=\"overflow-hidden pt-3\" v-html=\"srvModel.description\" id=\"crowdfund-body-description\">\n                            @Safe.Raw(Model.Description)\n                        </div>\n                    </b-tab>\n                    <b-tab title=\"Discussion\">\n                        <div id=\"disqus_thread\" class=\"mt-4\"></div>\n                    </b-tab>\n                </b-tabs>\n            </template>\n            <template v-else>\n                <div class=\"overflow-hidden\" v-html=\"srvModel.description\" id=\"crowdfund-body-description\">\n                    @Safe.Raw(Model.Description)\n                </div>\n            </template>\n        </div>\n        <div class=\"col-lg-4 col-sm-12\" id=\"crowdfund-body-contribution-container\">\n            <contribute :target-currency=\"srvModel.targetCurrency\"\n                        :loading=\"loading\"\n                        :display-perks-ranking=\"srvModel.displayPerksRanking\"\n                        :perks-value=\"srvModel.perksValue\"\n                        :active=\"active\"\n                        :in-modal=\"false\"\n                        :perks=\"perks\">\n            </contribute>\n        </div>\n    </div>\n    <noscript>\n        <div class=\"row justify-content-between\">\n            <div class=\"col-md-7  col-sm-12\">\n                <div class=\"overflow-hidden\">@Safe.Raw(Model.Description)</div>\n            </div>\n            <div class=\"col-md-4 col-sm-12\">\n                <partial\n                    name=\"Crowdfund/Public/ContributeForm\"\n                    model=\"@(new ContributeToCrowdfund { ViewCrowdfundViewModel = Model, RedirectToCheckout = true })\">\n                </partial>\n            </div>\n        </div>\n    </noscript>\n    <div class=\"text-center text-muted mt-4\" v-text=\"`Updated ${lastUpdated}`\">Updated @Model.Info.LastUpdated</div>\n    <b-modal title=\"Contribute\" v-model=\"contributeModalOpen\" size=\"lg\" ok-only=\"true\" ok-variant=\"secondary\" ok-title=\"Close\" ref=\"modalContribute\">\n        <contribute v-if=\"contributeModalOpen\"\n                    :target-currency=\"srvModel.targetCurrency\"\n                    :active=\"active\"\n                    :perks=\"srvModel.perks\"\n                    :loading=\"loading\"\n                    :in-modal=\"true\">\n        </contribute>\n    </b-modal>\n\n    <footer class=\"store-footer\">\n        <a href=\"https://btcpayserver.org\" target=\"_blank\" rel=\"noreferrer noopener\">\n            Powered by <partial name=\"_StoreFooterLogo\" />\n        </a>\n    </footer>\n</div>\n\n<template id=\"perks-template\">\n    <div class=\"perks-container\">\n        <perk v-if=\"!perks || perks.length === 0\"\n              :perk=\"{title: 'Donate Custom Amount', price: { type: 0, value: null }}\"\n              :target-currency=\"targetCurrency\"\n              :active=\"active\"\n              :loading=\"loading\"\n              :in-modal=\"inModal\">\n        </perk>\n        <perk v-for=\"(perk, index) in perks\"\n              :key=\"perk.id\"\n              :perk=\"perk\"\n              :target-currency=\"targetCurrency\"\n              :active=\"active\"\n              :display-perks-ranking=\"displayPerksRanking\"\n              :perks-value=\"perksValue\"\n              :index=\"index\"\n              :loading=\"loading\"\n              :in-modal=\"inModal\">\n        </perk>\n    </div>\n</template>\n<template id=\"perk-template\">\n    <div class=\"card perk\" v-bind:class=\"{ 'expanded': expanded, 'unexpanded': !expanded, 'mb-4':!inModal }\" v-on:click=\"expand\" :id=\"perk.id\">\n        <span v-if=\"displayPerksRanking && perk.sold\"\n              class=\"btn btn-sm rounded-circle px-0 perk-badge\"\n              v-bind:class=\"{ 'btn-primary': index==0, 'btn-light': index!=0}\">\n            #{{index+1}}\n        </span>\n        <div class=\"perk-zoom\" v-if=\"canExpand\">\n            <div class=\"perk-zoom-bg\"></div>\n            <div class=\"perk-zoom-text w-100 py-2 px-4 text-center text-primary fw-semibold fs-5 lh-sm\">\n                Select this contribution perk\n            </div>\n        </div>\n        <form v-on:submit=\"onContributeFormSubmit\" class=\"mb-0\">\n            <input type=\"hidden\" :value=\"perk.id\" id=\"choiceKey\"/>\n            <img v-if=\"perk.image && perk.image != 'null'\" class=\"card-img-top\" :src=\"perk.image\"/>\n            <div class=\"card-body\">\n                <div class=\"card-title d-flex justify-content-between\" :class=\"{ 'mb-0': !perk.description }\">\n                    <span class=\"h5\" :class=\"{ 'mb-0': !perk.description }\">{{perk.title ? perk.title : perk.id}}</span>\n                    <span class=\"text-muted\">\n                        <template v-if=\"perk.price && perk.price.value\">\n                            {{formatAmount(perk.price.value.noExponents(), srvModel.currencyData.divisibility)}}\n                            {{targetCurrency}}\n                            <template v-if=\"perk.price.type == 1\">or more</template>\n                        </template>\n                        <template v-else-if=\"perk.price.type === 2 && !perk.price.value\">\n                            Free\n                        </template>\n                        <template v-else-if=\"perk.price.type === 0 || (!perk.price.value && perk.price.type === 1)\">\n                            Any amount\n                        </template>\n                    </span>\n                </div>\n                <p class=\"card-text overflow-hidden\" v-if=\"perk.description\" v-html=\"perk.description\"></p>\n\n                <div class=\"input-group\" style=\"max-width:500px;\" v-if=\"expanded\" :id=\"'perk-form'+ perk.id\">\n                    <template v-if=\"perk.price.type !== 0 && !(perk.price.type === 2 && !perk.price.value)\"> \n                        <input\n                            \n                            :disabled=\"!active\"\n                            :readonly=\"perk.price.type !== 1\"\n                            class=\"form-control hide-number-spin\"\n                            type=\"number\"\n                            v-model=\"amount\"\n                            :min=\"perk.price.value\"\n                            step=\"any\"\n                            placeholder=\"Contribution Amount\"\n                            required>\n                        <span class=\"input-group-text\" >{{targetCurrency}}</span>\n                    </template>\n                    <button\n                        class=\"btn btn-primary d-flex align-items-center \"\n                        v-bind:class=\"{ 'btn-disabled': loading}\"\n                        :disabled=\"!active || loading\"\n                        type=\"submit\">\n                        <div v-if=\"loading\" class=\"spinner-grow spinner-grow-sm me-2\" role=\"status\">\n                            <span class=\"visually-hidden\">Loading...</span>\n                        </div>\n                        {{perk.buyButtonText || 'Continue'}}\n                    </button>\n                </div>\n            </div>\n            <div class=\"card-footer d-flex justify-content-between\" v-if=\"perk.sold || perk.inventory != null\">\n                <span v-if=\"perk.inventory != null && perk.inventory > 0\" class=\"text-center text-muted\">{{new Intl.NumberFormat().format(perk.inventory)}} left</span>\n                <span v-if=\"perk.inventory != null && perk.inventory <= 0\" class=\"text-center text-muted\">Sold out</span>\n                <span v-if=\"perk.sold\">{{new Intl.NumberFormat().format(perk.sold)}} Contributor{{perk.sold === 1 ? \"\": \"s\"}}</span>\n                <span v-if=\"perk.value\">{{formatAmount(perk.value, srvModel.currencyData.divisibility)}} {{targetCurrency}} total</span>\n            </div>\n        </form>\n    </div>\n</template>\n\n<template id=\"contribute-template\">\n    <div>\n        <h3 v-if=\"!inModal\" class=\"mb-3\">Contribute</h3>\n        <perks\n            :perks=\"perks\"\n            :loading=\"loading\"\n            :in-modal=\"inModal\"\n            :display-perks-ranking=\"displayPerksRanking\"\n            :perks-value=\"perksValue\"\n            :target-currency=\"targetCurrency\"\n            :active=\"active\">\n        </perks>\n    </div>\n</template>\n\n@if (!Model.SimpleDisplay)\n{\n    <script>var srvModel = @Safe.Json(Model);</script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/moment/moment.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-toasted/vue-toasted.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/bootstrap-vue/bootstrap-vue.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/signalr/signalr.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/animejs/anime.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/crowdfund/app.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/crowdfund/helpers/math.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/crowdfund/services/audioplayer.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/crowdfund/services/fireworks.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/crowdfund/services/listener.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/modal/btcpay.js\" asp-append-version=\"true\"></script>\n}\n<partial name=\"LayoutFoot\"/>\n</body>\n</html>\n", "@using System.Globalization\n@using BTCPayServer.Abstractions.Extensions\n@using BTCPayServer.Abstractions.Models\n@using BTCPayServer.TagHelpers\n@using BTCPayServer.Views.Apps\n@using Microsoft.AspNetCore.Mvc.TagHelpers\n@model BTCPayServer.Plugins.Crowdfund.Models.UpdateCrowdfundViewModel\n@{\n    ViewData.SetActivePage(AppsNavPages.Update, \"Update Crowdfund\", Model.AppId);\n}\n\n@section PageHeadContent {\n    <link href=\"~/vendor/summernote/summernote-bs5.css\" rel=\"stylesheet\" asp-append-version=\"true\" />\n    <link href=\"~/main/template-editor.css\" rel=\"stylesheet\" asp-append-version=\"true\" />\n    <style>\n        .flatpickr-wrapper { flex-grow: 1; }\n    </style>\n}\n\n@section PageFootContent {\n    <partial name=\"_ValidationScriptsPartial\" />\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/summernote/summernote-bs5.js\" asp-append-version=\"true\"></script>\n}\n\n<form method=\"post\">\n    <div class=\"sticky-header-setup\"></div>\n    <div class=\"sticky-header d-sm-flex align-items-center justify-content-between\">\n        <h2 class=\"mb-0\">@ViewData[\"Title\"]</h2>\n        <div class=\"d-flex gap-3 mt-3 mt-sm-0\">\n            <button type=\"submit\" class=\"btn btn-primary order-sm-1\" id=\"SaveSettings\">Save</button>   \n            @if (Model.ModelWithMinimumData)\n            {\n                <a class=\"btn btn-secondary\" asp-action=\"ViewCrowdfund\" asp-route-appId=\"@Model.AppId\" id=\"ViewApp\" target=\"_blank\">View</a>\n            }\n        </div>\n    </div>\n\n    <partial name=\"_StatusMessage\" />\n\n    <input type=\"hidden\" asp-for=\"StoreId\" />\n    <div asp-validation-summary=\"ModelOnly\" class=\"text-danger\"></div>\n\n    <div class=\"row\">\n        <div class=\"col-sm-10 col-md-9 col-xl-7 col-xxl-6\">\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        <label asp-for=\"AppName\" class=\"form-label\" data-required></label>\n                        <input asp-for=\"AppName\" class=\"form-control\" required />\n                        <span asp-validation-for=\"AppName\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        <label asp-for=\"Title\" class=\"form-label\" data-required></label>\n                        <input asp-for=\"Title\" class=\"form-control\" required />\n                        <span asp-validation-for=\"Title\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label asp-for=\"Tagline\" class=\"form-label\"></label>\n                <input asp-for=\"Tagline\" class=\"form-control\" />\n                <span asp-validation-for=\"Tagline\" class=\"text-danger\"></span>\n            </div>\n            <div class=\"form-group\">\n                <label asp-for=\"MainImageUrl\" class=\"form-label\"></label>\n                <input asp-for=\"MainImageUrl\" class=\"form-control\" />\n                <span asp-validation-for=\"MainImageUrl\" class=\"text-danger\"></span>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"d-flex align-items-center\">\n                    <input asp-for=\"Enabled\" type=\"checkbox\" class=\"btcpay-toggle me-3\"/>\n                    <div>\n                        <label asp-for=\"Enabled\" class=\"form-label mb-0\"></label>\n                        <span asp-validation-for=\"Enabled\" class=\"text-danger\"></span>\n                        <div class=\"text-muted\">The crowdfund will be visible to anyone.</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-xl-10 col-xxl-constrain\">\n            <div class=\"form-group\">\n                <label asp-for=\"Description\" class=\"form-label\" data-required></label>\n                <textarea asp-for=\"Description\" rows=\"20\" cols=\"40\" class=\"form-control richtext\"></textarea>\n                <span asp-validation-for=\"Description\" class=\"text-danger\"></span>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-xl-10 col-xxl-constrain\">\n            <h3 class=\"mt-5 mb-4\">Goal</h3>\n            <div class=\"d-flex flex-wrap gap-3 mb-3\">\n                <div class=\"form-group w-250px mb-0\">\n                    <label asp-for=\"TargetAmount\" class=\"form-label\"></label>\n                    <input inputmode=\"decimal\" asp-for=\"TargetAmount\" class=\"form-control\" />\n                    <span asp-validation-for=\"TargetAmount\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"form-group\">\n                    <label asp-for=\"TargetCurrency\" class=\"form-label\"></label>\n                    <input asp-for=\"TargetCurrency\" class=\"form-control w-auto\" currency-selection />\n                    <div class=\"form-text\">Uses the store's default currency (@Model.StoreDefaultCurrency) if empty.</div>\n                    <span asp-validation-for=\"TargetCurrency\" class=\"text-danger\"></span>\n                </div>\n            </div>\n            <div class=\"d-flex flex-wrap gap-3 align-items-center mb-4\">\n                <div class=\"form-group mb-0 w-250px\">\n                    <label asp-for=\"StartDate\" class=\"form-label\"></label>\n                    <div class=\"input-group flex-nowrap\">\n                        <input type=\"datetime-local\" asp-for=\"StartDate\"\n                               value=\"@(Model.StartDate?.ToString(\"u\", CultureInfo.InvariantCulture))\"\n                               class=\"form-control flatdtpicker\"\n                               placeholder=\"No start date has been set\" />\n                        <button class=\"btn btn-secondary input-group-clear px-3\" type=\"button\" title=\"Clear\">\n                            <vc:icon symbol=\"close\"/>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"form-group mb-0 w-250px\">\n                    <label asp-for=\"EndDate\" class=\"form-label\"></label>\n                    <div class=\"input-group flex-nowrap\">\n                        <input type=\"datetime-local\" asp-for=\"EndDate\"\n                               value=\"@(Model.EndDate?.ToString(\"u\", CultureInfo.InvariantCulture))\"\n                               class=\"form-control flatdtpicker\"\n                               placeholder=\"No end date has been set\" />\n                        <button class=\"btn btn-secondary input-group-clear px-3\" type=\"button\" title=\"Clear\">\n                            <vc:icon symbol=\"close\"/>\n                        </button>\n                    </div>\n                </div>\n                <span asp-validation-for=\"StartDate\" class=\"text-danger\"></span>\n                <span asp-validation-for=\"EndDate\" class=\"text-danger\"></span>\n            </div>\n            \n            <div class=\"form-group mt-4\" id=\"ResetRow\" hidden=\"@(Model.StartDate == null)\">\n                <div class=\"d-flex align-items-center mb-3\">\n                    <input asp-for=\"IsRecurring\" type=\"checkbox\" class=\"btcpay-toggle me-3\" data-bs-toggle=\"collapse\" data-bs-target=\"#ResetEverySettings\" aria-expanded=\"@(Model.IsRecurring)\" aria-controls=\"ResetEverySettings\" />\n                    <div>\n                        <label asp-for=\"IsRecurring\" class=\"form-label mb-0\">Recurring Goal</label>\n                        <span asp-validation-for=\"IsRecurring\" class=\"text-danger\"></span>\n                        <div class=\"text-muted\">Reset goal after a specific period of time, based on your crowdfund's start date.</div>\n                    </div>\n                </div>\n                \n                <div class=\"collapse @(Model.IsRecurring ? \"show\" : \"\")\" id=\"ResetEverySettings\">\n                    <div class=\"form-group mb-0 pt-2 w-250px\">\n                        <label asp-for=\"ResetEveryAmount\" class=\"form-label\"></label>\n                        <div class=\"d-flex align-items-center\">\n                            <input type=\"number\" inputmode=\"numeric\" asp-for=\"ResetEveryAmount\" placeholder=\"Amount\" class=\"form-control me-3\" min=\"0\">\n                            <select class=\"form-select w-auto\" asp-for=\"ResetEvery\">\n                                @foreach (var opt in Model.ResetEveryValues)\n                                {\n                                    <option value=\"@opt\">@opt</option>\n                                }\n                            </select>\n                        </div>\n                        <span asp-validation-for=\"ResetEveryAmount\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-xl-10 col-xxl-constrain\">\n            <partial name=\"TemplateEditor\" model=\"@(nameof(Model.PerksTemplate), \"Perks\", Model.TargetCurrency ?? Model.StoreDefaultCurrency)\" />\n        </div>\n    </div>\n    <div class=\"row collapse\" id=\"RawEditor\">\n        <div class=\"col-xl-10 col-xxl-constrain\">\n            <div class=\"form-group pt-3\">\n                <label asp-for=\"PerksTemplate\" class=\"form-label\"></label>\n                <textarea asp-for=\"PerksTemplate\" rows=\"10\" cols=\"40\" class=\"form-control\"></textarea>\n                <span asp-validation-for=\"PerksTemplate\" class=\"text-danger\"></span>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-xl-8 col-xxl-constrain\">\n            <h3 class=\"mt-5 mb-4\">Contributions</h3>\n            <div class=\"form-check mb-3\">\n                <input asp-for=\"SortPerksByPopularity\" type=\"checkbox\" class=\"form-check-input\" />\n                <label asp-for=\"SortPerksByPopularity\" class=\"form-check-label\"></label>\n                <span asp-validation-for=\"SortPerksByPopularity\" class=\"text-danger\"></span>\n            </div>\n            <div class=\"form-check mb-3\">\n                <input asp-for=\"DisplayPerksRanking\" type=\"checkbox\" class=\"form-check-input\" />\n                <label asp-for=\"DisplayPerksRanking\" class=\"form-check-label\"></label>\n                <span asp-validation-for=\"DisplayPerksRanking\" class=\"text-danger\"></span>\n            </div>\n            <div class=\"form-check mb-3\">\n                <input asp-for=\"DisplayPerksValue\" type=\"checkbox\" class=\"form-check-input\" />\n                <label asp-for=\"DisplayPerksValue\" class=\"form-check-label\"></label>\n                <span asp-validation-for=\"DisplayPerksValue\" class=\"text-danger\"></span>\n            </div>\n            <div class=\"form-check mb-3\">\n                <input asp-for=\"EnforceTargetAmount\" type=\"checkbox\" class=\"form-check-input\" />\n                <label asp-for=\"EnforceTargetAmount\" class=\"form-check-label\"></label>\n                <span asp-validation-for=\"EnforceTargetAmount\" class=\"text-danger\"></span>\n            </div>\n            \n            <h3 class=\"mt-5 mb-4\">Crowdfund Behavior</h3>\n            <div class=\"form-check\">\n                <input asp-for=\"UseAllStoreInvoices\" type=\"checkbox\" class=\"form-check-input\" />\n                <label asp-for=\"UseAllStoreInvoices\" class=\"form-check-label\"></label>\n                <span asp-validation-for=\"UseAllStoreInvoices\" class=\"text-danger\"></span>\n            </div>\n\n            <h3 class=\"mt-5 mb-2\">Additional Options</h3>\n            <div class=\"form-group\">\n                <div class=\"accordion\" id=\"additional\">\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-sound-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-sound\" aria-expanded=\"false\" aria-controls=\"additional-sound\">\n                                Sound\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-sound\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-sound-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group mb-0\">\n                                    <div class=\"d-flex align-items-center\">\n                                        <input asp-for=\"SoundsEnabled\" type=\"checkbox\" class=\"btcpay-toggle me-3\" data-bs-toggle=\"collapse\" data-bs-target=\"#SoundsEnabledSettings\" aria-expanded=\"@Model.SoundsEnabled\" aria-controls=\"SoundsEnabledSettings\"/>\n                                        <label asp-for=\"SoundsEnabled\" class=\"form-label mb-0\"></label>\n                                        <span asp-validation-for=\"SoundsEnabled\" class=\"text-danger\"></span>\n                                    </div>\n                                </div>\n                                <div class=\"collapse @(Model.SoundsEnabled ? \"show\" : \"\")\" id=\"SoundsEnabledSettings\">\n                                    <div class=\"form-group mb-0 pt-3\">\n                                        <label asp-for=\"Sounds\" class=\"form-label\"></label>\n                                        <textarea asp-for=\"Sounds\" class=\"form-control\" rows=\"5\"></textarea>\n                                        <span asp-validation-for=\"Sounds\" class=\"text-danger\"></span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-animation-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-animation\" aria-expanded=\"false\" aria-controls=\"additional-animation\">\n                                Animation\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-animation\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-animation-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group mb-0\">\n                                    <div class=\"d-flex align-items-center\">\n                                        <input asp-for=\"AnimationsEnabled\" type=\"checkbox\" class=\"btcpay-toggle me-3\" data-bs-toggle=\"collapse\" data-bs-target=\"#AnimationsEnabledSettings\" aria-expanded=\"@Model.AnimationsEnabled\" aria-controls=\"AnimationsEnabledSettings\"/>\n                                        <label asp-for=\"AnimationsEnabled\" class=\"form-label mb-0\"></label>\n                                        <span asp-validation-for=\"AnimationsEnabled\" class=\"text-danger\"></span>\n                                    </div>\n                                </div>\n                                <div class=\"collapse @(Model.AnimationsEnabled ? \"show\" : \"\")\" id=\"AnimationsEnabledSettings\">\n                                    <div class=\"form-group mb-0 pt-3\">\n                                        <label asp-for=\"AnimationColors\" class=\"form-label\"></label>\n                                        <textarea asp-for=\"AnimationColors\" class=\"form-control\" rows=\"5\"></textarea>\n                                        <span asp-validation-for=\"AnimationColors\" class=\"text-danger\"></span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-discussion-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-discussion\" aria-expanded=\"false\" aria-controls=\"additional-discussion\">\n                                Discussion\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-discussion\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-discussion-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group mb-0\">\n                                    <div class=\"d-flex align-items-center\">\n                                        <input asp-for=\"DisqusEnabled\" type=\"checkbox\" class=\"btcpay-toggle me-3\" data-bs-toggle=\"collapse\" data-bs-target=\"#DisqusEnabledSettings\" aria-expanded=\"@Model.DisqusEnabled\" aria-controls=\"DisqusEnabledSettings\"/>\n                                        <label asp-for=\"DisqusEnabled\" class=\"form-label mb-0\"></label>\n                                        <span asp-validation-for=\"DisqusEnabled\" class=\"text-danger\"></span>\n                                    </div>\n                                </div>\n                                <div class=\"collapse @(Model.DisqusEnabled ? \"show\" : \"\")\" id=\"DisqusEnabledSettings\">\n                                    <div class=\"form-group mb-0 pt-3\">\n                                        <label asp-for=\"DisqusShortname\" class=\"form-label\"></label>\n                                        <input asp-for=\"DisqusShortname\" class=\"form-control\" />\n                                        <span asp-validation-for=\"DisqusShortname\" class=\"text-danger\"></span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-custom-css-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-custom-css\" aria-expanded=\"false\" aria-controls=\"additional-custom-css\">\n                                Custom CSS\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-custom-css\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-custom-css-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group\">\n                                    <label asp-for=\"CustomCSSLink\" class=\"form-label\"></label>\n                                    <a href=\"https://docs.btcpayserver.org/Development/Theme/#2-bootstrap-themes\" target=\"_blank\" rel=\"noreferrer noopener\" title=\"More information...\">\n                                        <vc:icon symbol=\"info\" />\n                                    </a>\n                                    <input asp-for=\"CustomCSSLink\" class=\"form-control\" />\n                                    <span asp-validation-for=\"CustomCSSLink\" class=\"text-danger\"></span>\n                                </div>\n                                <div class=\"form-group mb-4\">\n                                    <label asp-for=\"EmbeddedCSS\" class=\"form-label\"></label>\n                                    <textarea asp-for=\"EmbeddedCSS\" rows=\"10\" cols=\"40\" class=\"form-control\"></textarea>\n                                    <span asp-validation-for=\"EmbeddedCSS\" class=\"text-danger\"></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-notification-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-notification\" aria-expanded=\"false\" aria-controls=\"additional-notification\">\n                                Notification URL Callbacks\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-notification\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-notification-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group\">\n                                    <label asp-for=\"NotificationUrl\" class=\"form-label\"></label>\n                                    <input asp-for=\"NotificationUrl\" class=\"form-control\" />\n                                    <span asp-validation-for=\"NotificationUrl\" class=\"text-danger\"></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n<div class=\"d-flex gap-3 mt-3\">\n    <a class=\"btn btn-secondary\" asp-action=\"ListInvoices\" asp-controller=\"UIInvoice\" asp-route-storeId=\"@Model.StoreId\" asp-route-searchterm=\"@Model.SearchTerm\">Invoices</a>\n    <a id=\"DeleteApp\" class=\"btn btn-outline-danger\" asp-controller=\"UIApps\" asp-action=\"DeleteApp\" asp-route-appId=\"@Model.AppId\" data-bs-toggle=\"modal\" data-bs-target=\"#ConfirmModal\" data-description=\"The app <strong>@Html.Encode(Model.AppName)</strong> and its settings will be permanently deleted.\" data-confirm-input=\"DELETE\">Delete this app</a>\n</div>\n\n<partial name=\"_Confirm\" model=\"@(new ConfirmModel(\"Delete app\", \"This app will be removed from this store.\", \"Delete\"))\" />\n\n<script>\n    const resetRow = document.getElementById('ResetRow');\n    const startDateInputId = \"StartDate\";\n\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        setTimeout(() => {\n            flatpickrInstances.forEach((instance) => {\n                if (instance.element.id === startDateInputId) {\n                    instance.config.onChange.push((selectedDates) => {\n                        if (selectedDates.length) {\n                            // Show the reset row if start date is selected.\n                            // Since start date must be selected in order for the reset options to be set\n                            // we don't need to show it by default and can show it only when start date is selected\n                                resetRow.removeAttribute('hidden');\n                        }\n                    });\n                }\n            });\n        }, 0);\n\n        document.addEventListener('input-group-clear-input-value-cleared', ({ detail }) => {\n            const input = detail[0];\n            if (input.id === startDateInputId) {\n                resetRow.setAttribute('hidden', 'hidden');\n            }\n        });\n    });\n</script>\n", "@using BTCPayServer.Views.Stores\n@model BTCPayServer.Plugins.PayButton.Models.PayButtonViewModel\n@{\n    ViewData.SetActivePage(StoreNavPages.PayButton, \"Pay Button\", Context.GetStoreData().Id);\n}\n\n@section PageHeadContent {\n    <link rel=\"stylesheet\" href=\"~/vendor/highlightjs/default.min.css\" asp-append-version=\"true\">\n}\n\n@section PageFootContent {\n    <script src=\"~/vendor/highlightjs/highlight.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vuejs-vee-validate/vee-validate.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/paybutton/paybutton.js\" asp-append-version=\"true\"></script>\n    <template id=\"template-modal\" csp-allow>\n    if (!window.btcpay) {\n        var script = document.createElement('script');\n        script.src = @(Safe.Json(Model.UrlRoot + \"modal/btcpay.js\"));\n        document.getElementsByTagName('head')[0].append(script);\n    }\n    function handleFormSubmit(event) {\n        event.preventDefault();\n        var xhttp = new XMLHttpRequest();\n        xhttp.onreadystatechange = function() {\n            if (this.readyState == 4 && this.status == 200 && this.responseText) {\n                window.btcpay.appendInvoiceFrame(JSON.parse(this.responseText).invoiceId);\n            }\n        };\n        xhttp.open('POST', event.target.getAttribute('action'), true);\n        xhttp.send(new FormData(event.target));\n    }\n    document.querySelectorAll(\".btcpay-form\").forEach(function(el) {\n        if (!el.dataset.initialized) {\n            el.addEventListener('submit', handleFormSubmit);\n            el.dataset.initialized = true;\n        }\n    });\n    </template>\n    <template id=\"template-price-buttons\" csp-allow>\n    function handlePlusMinus(event) {\n        event.preventDefault();\n        const root = event.target.closest('.btcpay-form');\n        const el = root.querySelector('.btcpay-input-price');\n        const step = parseInt(event.target.dataset.step) || 1;\n        const min = parseInt(event.target.dataset.min) || 1;\n        const max = parseInt(event.target.dataset.max);\n        const type = event.target.dataset.type;\n        const price = parseInt(el.value) || min;\n        if (type === '-') {\n            el.value = price - step < min ? min : price - step;\n        } else if (type === '+') {\n            el.value = price + step > max ? max : price + step;\n        }\n    }\n    document.querySelectorAll(\".btcpay-form .plus-minus\").forEach(function(el) {\n        if (!el.dataset.initialized) {\n            el.addEventListener('click', handlePlusMinus);\n            el.dataset.initialized = true;\n        }\n    });\n    </template>\n    <template id=\"template-price-input\" csp-allow>\n    function handlePriceInput(event) {\n        event.preventDefault();\n        const root = event.target.closest('.btcpay-form');\n        const price = parseInt(event.target.dataset.price);\n        if (isNaN(event.target.value)) root.querySelector('.btcpay-input-price').value = price;\n        const min = parseInt(event.target.getAttribute('min')) || 1;\n        const max = parseInt(event.target.getAttribute('max'));\n        if (event.target.value < min) {\n            event.target.value = min;\n        } else if (event.target.value > max) { \n            event.target.value = max;\n        }\n    }\n    document.querySelectorAll(\".btcpay-form .btcpay-input-price\").forEach(function(el) {\n        if (!el.dataset.initialized) {\n            el.addEventListener('input', handlePriceInput);\n            el.dataset.initialized = true;\n        }\n    });\n    </template>\n    <template id=\"template-price-slider\" csp-allow>\n    function handleSliderChange(event) {\n        event.preventDefault();\n        const root = event.target.closest('.btcpay-form');\n        const el = root.querySelector('.btcpay-input-price');\n        const price = parseInt(el.value);\n        const min = parseInt(event.target.getAttribute('min')) || 1;\n        const max = parseInt(event.target.getAttribute('max'));\n        if (price < min) { \n            el.value = min;\n        } else if (price > max) {\n            el.value = max;\n        } \n        root.querySelector('.btcpay-input-range').value = el.value;\n    }\n    function handleSliderInput(event) {\n        event.target.closest('.btcpay-form').querySelector('.btcpay-input-price').value = event.target.value;\n    }\n    document.querySelectorAll(\".btcpay-form .btcpay-input-range\").forEach(function(el) {\n        if (!el.dataset.initialized) {\n            el.addEventListener('input', handleSliderInput);\n            el.dataset.initialized = true;\n        }\n    });\n    document.querySelectorAll(\".btcpay-form .btcpay-input-price\").forEach(function(el) {\n        if (!el.dataset.initialized) {\n            el.addEventListener('change', handleSliderChange);\n            el.dataset.initialized = true;\n        }\n    });\n    </template>\n    \n    <script>\n        const srvModel = @Safe.Json(Model);\n        const payButtonCtrl = new Vue({\n            el: '#payButtonCtrl',\n            data: {\n                srvModel: srvModel,\n                originalButtonImageUrl: srvModel.payButtonImageUrl,\n                buttonInlineTextMode: false\n            },\n            computed: {\n                imageUrlRequired() {\n                    return !this.buttonInlineTextMode;\n                }\n            },\n            methods: {\n                inputChanges(event, buttonSize) {\n                    inputChanges(event, buttonSize);\n                }\n            },\n            watch: {\n                buttonInlineTextMode(checked) {\n                    if (!checked) {\n                        this.srvModel.payButtonText = '';\n                        this.srvModel.payButtonImageUrl = this.originalButtonImageUrl;\n                    } else {\n                        this.srvModel.payButtonText = 'Pay with';\n                        this.srvModel.payButtonImageUrl = `${this.srvModel.urlRoot}img/paybutton/logo.svg`;\n                    }\n                    this.inputChanges();\n                }\n            }\n        });\n    </script>\n}\n\n<partial name=\"_StatusMessage\" />\n\n<h2 class=\"mt-1 mb-4\">@ViewData[\"Title\"]</h2>\n<div id=\"payButtonCtrl\">\n    <div class=\"row\">\n        <div class=\"col-xl-8\">\n            <div class=\"alert alert-warning alert-dismissible mb-4\" role=\"alert\">\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">\n                    <vc:icon symbol=\"close\" />\n                </button>\n                <h5 class=\"alert-heading\">Warning: Payment button should only be used for tips and donations</h5>\n                <p>\n                    Using the payment button for e-commerce integrations is not recommended since order relevant information can be modified by the user.\n                    For e-commerce, you should use our \n                    <a href=\"https://docs.btcpayserver.org/API/Greenfield/v1/\" class=\"alert-link\" target=\"_blank\" rel=\"noreferrer noopener\">Greenfield API</a>.\n                    If this store process commercial transactions, we advise you to \n                    <a asp-controller=\"UIUserStores\" asp-action=\"CreateStore\" class=\"alert-link\">create a separate store</a> before using the payment button.\n                </p>\n                <form asp-action=\"DisableAnyoneCanCreateInvoice\" asp-route-storeId=\"@Context.GetRouteValue(\"storeId\")\" method=\"post\">\n                    <button name=\"command\" id=\"disable-pay-button\" type=\"submit\" class=\"btn btn-danger mt-0\" value=\"Save\">Disable payment button</button>\n                </form>\n            </div>\n            <p>Configure your Pay Button, and the generated code will be displayed at the bottom of the page to copy into your project.</p>\n            <h4 class=\"mt-3 mb-3\">General Settings</h4>\n            <div class=\"form-group col-md-8\">\n                <label class=\"form-label\" for=\"price\">Price</label>\n                <input name=\"price\" type=\"text\" class=\"form-control\" id=\"price\" inputmode=\"decimal\"\n                       v-model=\"srvModel.price\" v-on:change=\"inputChanges\"\n                       v-validate=\"'decimal|min_value:0'\" :class=\"{'is-invalid': errors.has('price') }\">\n                <small class=\"text-danger\">{{ errors.first('price') }}</small>\n            </div>\n            <div class=\"form-group col-md-4\" v-if=\"!srvModel.appIdEndpoint\">\n                <label class=\"form-label\" for=\"Currency\">Currency</label>\n                <input asp-for=\"Currency\" name=\"currency\" class=\"form-control w-auto\" currency-selection\n                       v-model=\"srvModel.currency\" v-on:change=\"inputChanges\"\n                       :class=\"{'is-invalid': errors.has('currency') }\" />\n            </div>\n            <div class=\"form-group col-md-4\" v-if=\"!srvModel.appIdEndpoint\">\n                <label class=\"form-label\" for=\"defaultPaymentMethod\">Default Payment Method</label>\n                <select v-model=\"srvModel.defaultPaymentMethod\" v-on:change=\"inputChanges\" class=\"form-select\" id=\"default-payment-method\">\n                    <option value=\"\" selected>Use the store\u2019s default</option>\n                    <option  v-for=\"pm in srvModel.paymentMethods\" v-bind:value=\"pm.value\">{{pm.name}}</option>\n                </select>\n            </div>\n            <div class=\"form-group\" v-if=\"!srvModel.appIdEndpoint\">\n                <label class=\"form-label\" for=\"description\">Checkout Description</label>\n                <input name=\"checkoutDesc\" type=\"text\" class=\"form-control\" id=\"description\"\n                       v-model=\"srvModel.checkoutDesc\" v-on:change=\"inputChanges\">\n            </div>\n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"order-id\">Order ID</label>\n                <input name=\"orderId\" type=\"text\" class=\"form-control\" id=\"order-id\"\n                       v-model=\"srvModel.orderId\" v-on:change=\"inputChanges\">\n            </div>\n        </div>\n    </div>\n\n    <h4 class=\"mt-5 mb-3\">Display Options</h4>\n    <div class=\"row\">\n        <div class=\"col-xl-8 col-xxl-constrain\">\n            <div class=\"form-group\">\n                <div class=\"form-check\" v-if=\"!srvModel.appIdEndpoint\">\n                    <input id=\"useModal\" type=\"checkbox\" v-model=\"srvModel.useModal\" v-on:change=\"inputChanges\" class=\"form-check-input\"/>\n                    <label for=\"useModal\" class=\"form-check-label\">Use Modal</label>\n                </div>\n                <div class=\"form-check\">\n                    <input id=\"buttonInlineTextMode\" type=\"checkbox\" v-model=\"buttonInlineTextMode\" v-on:change=\"inputChanges\" class=\"form-check-input\"/>\n                    <label for=\"buttonInlineTextMode\" class=\"form-check-label\">Customize Pay Button Text</label>\n                </div>\n            </div>\n            \n            <div class=\"form-group\" v-show=\"buttonInlineTextMode\">\n                <label class=\"form-label\" for=\"pb-text\">Pay Button Text</label>\n                <input name=\"payButtonText\" type=\"text\" class=\"form-control\" id=\"pb-text\"\n                       v-model=\"srvModel.payButtonText\" v-on:change=\"inputChanges\">\n            </div>\n            <div class=\"form-group mb-4\">\n                <label class=\"form-label\" for=\"pb-image-url\">Pay Button Image Url</label>\n                <input name=\"payButtonImageUrl\" type=\"text\" class=\"form-control\" id=\"pb-image-url\"\n                       v-model=\"srvModel.payButtonImageUrl\" v-on:change=\"inputChanges\"\n                       v-validate=\"{ required: this.imageUrlRequired, url: {require_tld:false} }\"\n                       :class=\"{'is-invalid': errors.has('payButtonImageUrl') }\">\n                <small class=\"text-danger\">{{ errors.first('payButtonImageUrl') }}</small>\n            </div>\n            <div class=\"form-group mb-4\">\n                <label class=\"form-label\">Image Size</label>\n                <div class=\"btn-group d-flex\" role=\"group\">\n                    <button type=\"button\" class=\"btn btn-outline-secondary\" \n                            v-on:click=\"inputChanges($event, 0)\">146 x 40 px</button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                            v-on:click=\"inputChanges($event, 1)\">168 x 46 px</button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                            v-on:click=\"inputChanges($event, 2)\">209 x 57 px</button>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"form-label\">Button Type</label>\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"button-type\" id=\"btn-fixed\" value=\"0\" v-model=\"srvModel.buttonType\" v-on:change=\"inputChanges\" checked/>\n                    <label for=\"btn-fixed\" class=\"form-check-label\">Fixed amount</label>\n                </div>\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"button-type\" id=\"btn-custom\" value=\"1\" v-model=\"srvModel.buttonType\" v-on:change=\"inputChanges\"/>\n                    <label for=\"btn-custom\" class=\"form-check-label\">Custom amount</label>\n                </div>\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"button-type\" id=\"btn-slider\" value=\"2\" v-model=\"srvModel.buttonType\" v-on:change=\"inputChanges\"/>\n                    <label for=\"btn-slider\" class=\"form-check-label\">Slider</label>\n                </div>\n            </div>\n            <div class=\"row\" v-if=\"srvModel.buttonType === '1' ||srvModel.buttonType === '2'\">\n                <div class=\"form-group col-md-4\">\n                    <label class=\"form-label\" for=\"pb-min\">Min</label>\n                    <input name=\"min\" type=\"text\" class=\"form-control\" id=\"pb-min\"\n                           v-model=\"srvModel.min\" v-on:change=\"inputChanges\"\n                           v-validate=\"'required|decimal|min_value:0'\" :class=\"{'is-invalid': errors.has('min') }\">\n                    <small class=\"text-danger\">{{ errors.first('min') }}</small>\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label class=\"form-label\" for=\"pb-max\">Max</label>\n                    <input name=\"max\" type=\"text\" class=\"form-control\" id=\"pb-max\"\n                           v-model=\"srvModel.max\" v-on:change=\"inputChanges\"\n                           v-validate=\"'required|decimal'\" :class=\"{'is-invalid': errors.has('max') }\">\n                    <small class=\"text-danger\">{{ errors.first('max') }}</small>\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label class=\"form-label\" for=\"pb-step\">Step</label>\n                    <input name=\"step\" type=\"text\" class=\"form-control\" id=\"pb-step\"\n                           v-model=\"srvModel.step\" v-on:change=\"inputChanges\"\n                           v-validate=\"'required'\" :class=\"{'is-invalid': errors.has('step') }\">\n                    <small class=\"text-danger\">{{ errors.first('step') }}</small>\n                </div>\n            </div>\n            <template v-if=\"srvModel.buttonType === '1'\">\n                <div class=\"form-check\">\n                    <input name=\"simpleInput\"\n                           id=\"simpleInput\"\n                           type=\"checkbox\"\n                           class=\"form-check-input\"\n                           v-model=\"srvModel.simpleInput\"\n                           v-on:change=\"inputChanges\"\n                           :class=\"{'is-invalid': errors.has('simpleInput') }\">\n                    <label class=\"form-check-label\" for=\"simpleInput\">Use a simple input style</label>\n                    <small class=\"text-danger\">{{ errors.first('simpleInput') }}</small>\n                </div>\n                <div class=\"form-check\">\n                    <input name=\"fitButtonInline\"\n                           id=\"fitButtonInline\"\n                           type=\"checkbox\"\n                           class=\"form-check-input\"\n                           v-model=\"srvModel.fitButtonInline\"\n                           v-on:change=\"inputChanges\"\n                           :class=\"{'is-invalid': errors.has('fitButtonInline') }\">\n                    <label class=\"form-check-label\" for=\"fitButtonInline\">Fit button inline</label>\n                    <small class=\"text-danger\">{{ errors.first('fitButtonInline') }}</small>\n                </div>\n            </template>\n        </div>\n        <div class=\"col-xl-4 mt-4 mt-xl-0\">\n            <h5 class=\"mb-3\">Preview</h5>\n            <div id=\"preview\"></div>\n            <div v-show=\"!srvModel.appIdEndpoint\">\n                <h5 class=\"mt-4 mb-3\">Link</h5>\n                <span>Alternatively, you can share <a id=\"preview-link\" href=\"#\">this link</a> or encode it in a QR code.</span>\n            </div>\n        </div>\n    </div>\n\n    <h4 class=\"mt-5 mb-3\">Payment Notifications</h4>\n    <div class=\"row\">\n        <div class=\"col-xl-8 col-xxl-constrain\">\n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"server-ipn\">Server IPN</label>\n                <input name=\"serverIpn\" type=\"text\" class=\"form-control\" id=\"server-ipn\"\n                       v-model=\"srvModel.serverIpn\" v-on:change=\"inputChanges\"\n                       v-validate=\"'url'\" :class=\"{'is-invalid': errors.has('serverIpn') }\">\n                <small class=\"text-danger\">{{ errors.first('serverIpn') }}</small>\n                <div class=\"form-text\">The URL to post purchase data.</div>\n            </div>\n            <div class=\"form-group\" v-if=\"!srvModel.appIdEndpoint\">\n                <label class=\"form-label\" for=\"email-notifications\">Email Notifications</label>\n                <input name=\"notifyEmail\" type=\"text\" class=\"form-control\" id=\"email-notifications\"\n                       placeholder=\"name@domain.com\"\n                       v-model=\"srvModel.notifyEmail\" v-on:change=\"inputChanges\"\n                       v-validate=\"'email'\" :class=\"{'is-invalid': errors.has('notifyEmail') }\">\n                <small class=\"text-danger\">{{ errors.first('notifyEmail') }}</small>\n                <div class=\"form-text\">Receive email notification updates.</div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"browser-redirect\">Browser Redirect</label>\n                <input name=\"browserRedirect\" type=\"text\" class=\"form-control\" id=\"browser-redirect\"\n                       v-model=\"srvModel.browserRedirect\" v-on:change=\"inputChanges\"\n                       v-validate=\"'url'\" :class=\"{'is-invalid': errors.has('browserRedirect') }\">\n                <small class=\"text-danger\">{{ errors.first('browserRedirect') }}</small>\n                <div class=\"form-text\">Where to redirect the customer after payment is complete</div>\n            </div>\n        </div>\n    </div>\n\n    <h4 class=\"mt-5 mb-3\">Advanced Options</h4>\n    <div class=\"row\" v-if=\"!srvModel.appIdEndpoint\">\n        <div class=\"col-xl-8 col-xxl-constrain\">\n            <p>\n                Specify additional query string parameters that should be appended to the checkout page once the invoice is created.\n                For example, <code>lang=da-DK</code> would load the checkout page in Danish by default.\n            </p>\n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"query-string\">Checkout Additional Query String</label>\n                <input name=\"checkoutQueryString\" type=\"text\" class=\"form-control\" id=\"query-string\"\n                       v-model=\"srvModel.checkoutQueryString\" v-on:change=\"inputChanges\"\n                       :class=\"{'is-invalid': errors.has('checkoutQueryString') }\">\n                <small class=\"text-danger\">{{ errors.first('checkoutQueryString') }}</small>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-xl-8 col-xxl-constrain\">\n            <p>Link this Pay Button to an app instead. Some features are disabled due to the different endpoint capabilities. You can set which perk/item this button should be targeting.</p>\n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"app-as-endpoint\">Use App As Endpoint</label>\n                <select v-model=\"srvModel.appIdEndpoint\" v-on:change=\"inputChanges\" class=\"form-select\" id=\"app-as-endpoint\">\n                    <option value=\"\">Use default pay button endpoint</option>\n                    <option  v-for=\"app in srvModel.apps\" v-bind:value=\"app.id\" >{{app.appName}} ({{app.appType}})</option>\n                </select>\n                <small class=\"text-danger\">{{ errors.first('appIdEndpoint') }}</small>\n            </div>\n            <div class=\"form-group\" v-if=\"srvModel.appIdEndpoint\">\n                <label class=\"form-label\" for=\"app-item\">App Item/Perk</label>\n                <input name=\"appChoiceKey\" type=\"text\" class=\"form-control\" id=\"app-item\"\n                       v-model=\"srvModel.appChoiceKey\" v-on:change=\"inputChanges\"\n                       :class=\"{'is-invalid': errors.has('appChoiceKey') }\">\n                <small class=\"text-danger\">{{ errors.first('appChoiceKey') }}</small>\n            </div>\n        </div>\n    </div>\n\n    <h4 class=\"mt-5 mb-3\">Generated Code</h4>\n\n    <div class=\"row\" v-show=\"!errors.any()\">\n        <div class=\"col-xxl-8\">\n            <pre><code id=\"mainCode\" class=\"html\"></code></pre>\n            <button class=\"btn btn-primary\" data-clipboard-target=\"#mainCode\">\n                <vc:icon symbol=\"copy\"/>\n                Copy Code\n            </button>\n        </div>\n    </div>\n    <div class=\"row\" v-show=\"errors.any()\">\n        <div class=\"col-xl-8 col-xxl-constrain text-danger\">\n            Please fix errors shown in order for code generation to successfully execute.\n        </div>\n    </div>\n</div>\n\n<script id=\"template-paybutton-styles\" type=\"text/template\">\n    <style>\n        .btcpay-form {\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n        }\n        .btcpay-form--inline {\n            flex-direction: row;\n        }\n        .btcpay-form--block {\n            flex-direction: column;\n        }\n        .btcpay-form--inline .submit {\n            margin-left: 15px;\n        }\n        .btcpay-form--block select {\n            margin-bottom: 10px;\n        }\n        .btcpay-form .btcpay-custom-container{\n            text-align: center;\n        }\n         .btcpay-custom {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        .btcpay-form .plus-minus {\n            cursor:pointer;\n            font-size:25px;\n            line-height: 25px;\n            background: #DFE0E1;\n            height: 30px;\n            width: 45px;\n            border:none;\n            border-radius: 60px;\n            margin: auto 5px;\n            display: inline-flex;\n            justify-content: center;\n        }\n        .btcpay-form select {\n            -moz-appearance: none;\n            -webkit-appearance: none;\n            appearance: none;\n            color: currentColor;\n            background: transparent;\n            border:1px solid transparent;\n            display: block;\n            padding: 1px;\n            margin-left: auto;\n            margin-right: auto;\n            font-size: 11px;\n            cursor: pointer;\n        }\n        .btcpay-form select:hover {\n            border-color: #ccc;\n        }\n        .btcpay-form option {\n            color: #000;\n            background: rgba(0,0,0,.1);\n        }\n        .btcpay-input-price {\n            -moz-appearance: textfield;\n            border: none;\n            box-shadow: none;\n            text-align: center;\n            font-size: 25px;\n            margin: auto;\n            border-radius: 5px;\n            line-height: 35px;\n            background: #fff;\n        }\n        \n        .btcpay-input-price::-webkit-outer-spin-button,\n        .btcpay-input-price::-webkit-inner-spin-button {\n          -webkit-appearance: none;\n          margin: 0;\n        }\n    </style>\n</script>\n\n<script id=\"template-slider-styles\" type=\"text/template\">\n    <style>\n        input[type=range].btcpay-input-range {\n            -webkit-appearance:none;\n            width:100%;\n            background: transparent;\n        }\n        input[type=range].btcpay-input-range:focus {\n            outline:0;\n        }\n        input[type=range].btcpay-input-range::-webkit-slider-runnable-track {\n            width:100%;\n            height:3.1px;\n            cursor:pointer;\n            box-shadow:0 0 1.7px #020,0 0 0 #003c00;\n            background:#f3f3f3;\n            border-radius:1px;\n            border:0;\n        }\n        input[type=range].btcpay-input-range::-webkit-slider-thumb {\n            box-shadow:none;\n            border:2.5px solid #cedc21;\n            height:22px;\n            width:22px;\n            border-radius:50%;\n            background:#0f3723;\n            cursor:pointer;\n            -webkit-appearance:none;\n            margin-top:-9.45px\n        }\n        input[type=range].btcpay-input-range:focus::-webkit-slider-runnable-track {\n            background:#fff;\n        }\n        input[type=range].btcpay-input-range::-moz-range-track {\n            width:100%;\n            height:3.1px;\n            cursor:pointer;\n            box-shadow:0 0 1.7px #020,0 0 0 #003c00;\n            background:#f3f3f3;\n            border-radius:1px;\n            border:0;\n        }\n        input[type=range].btcpay-input-range::-moz-range-thumb {\n            box-shadow:none;\n            border:2.5px solid #cedc21;\n            height:22px;\n            width:22px;\n            border-radius:50%;\n            background:#0f3723;\n            cursor:pointer;\n        }\n        input[type=range].btcpay-input-range::-ms-track {\n            width:100%;\n            height:3.1px;\n            cursor:pointer;\n            background:0 0;\n            border-color:transparent;\n            color:transparent;\n        }\n        input[type=range].btcpay-input-range::-ms-fill-lower {\n            background:#e6e6e6;\n            border:0;\n            border-radius:2px;\n            box-shadow:0 0 1.7px #020,0 0 0 #003c00;\n        }\n        input[type=range].btcpay-input-range::-ms-fill-upper {\n            background:#f3f3f3;\n            border:0;\n            border-radius:2px;\n            box-shadow:0 0 1.7px #020,0 0 0 #003c00;\n        }\n        input[type=range].btcpay-input-range::-ms-thumb {\n            box-shadow:none;\n            border:2.5px solid #cedc21;\n            height:22px;\n            width:22px;\n            border-radius:50%;\n            background:#0f3723;\n            cursor:pointer;\n            height:3.1px;\n        }\n        input[type=range].btcpay-input-range:focus::-ms-fill-lower {\n            background:#f3f3f3;\n        }\n        input[type=range].btcpay-input-range:focus::-ms-fill-upper {\n            background:#fff;\n        }\n    </style>\n</script>\n", "@model BTCPayServer.Plugins.PointOfSale.Models.ViewPointOfSaleViewModel\n@{\n    Layout = \"PointOfSale/Public/_Layout\";\n}\n@section PageHeadContent {\n    <style>\n        .public-page-wrap {\n            max-width: 560px;\n            overflow: hidden;\n        }\n        \n        /* modes */\n        #ModeTabs {\n            min-height: 2.75rem;\n        }\n        \n        /* keypad */\n        .keypad {\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n        }\n        .keypad .btn {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 0;\n            position: relative;\n            border-radius: 0;\n            font-weight: var(--btcpay-font-weight-semibold);\n            font-size: 24px;\n            min-height: 3.5rem;\n            height: 8vh;\n            max-height: 6rem;\n            color: var(--btcpay-body-text);\n        }\n        .keypad .btn[data-key=\"del\"] svg {\n            --btn-icon-size: 2.25rem;\n            transform: rotate(180deg);\n        }\n        .btcpay-pills label,\n        .btn-secondary.rounded-pill {\n            padding-left: 1rem;\n            padding-right: 1rem;\n        }\n        \n        /* make borders collapse by shifting rows and columns by 1px */\n        /* second column */\n        .keypad .btn:nth-child(3n-1) {\n            margin-left: -1px;\n        }\n        /* third column */\n        .keypad .btn:nth-child(3n) {\n            margin-left: -1px;\n        }\n        /* from second row downwards */\n        .keypad .btn:nth-child(n+4) {\n            margin-top: -1px;\n        }\n        /* ensure highlighted button is topmost */\n        .keypad .btn:hover,\n        .keypad .btn:focus,\n        .keypad .btn:active {\n            z-index: 1;\n        }\n        \n        .actions {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        .actions .btn {\n            flex:  1 1 50%;\n        }\n        \n        #Calculation {\n            min-height: 1.5rem;\n        }\n\n        @@media (max-height: 700px) {\n            .store-header {\n                display: none !important;\n            }\n        }\n        @@media (max-width: 575px) {\n            .public-page-wrap {\n                padding-right: 0;\n                padding-left: 0;\n            }\n            .keypad {\n                margin-left: -1px;\n                margin-right: -1px;\n            }\n            .store-footer {\n                display: none !important;\n            }\n        }\n        /* fix sticky hover effect on mobile browsers */\n        @@media (hover: none) {\n            .keypad .btn-secondary:hover,\n            .actions .btn-secondary:hover {\n                border-color: var(--btcpay-secondary-border-active) !important;\n            }\n        }\n    </style>\n}\n@section PageFootContent {\n    <script>var srvModel = @Safe.Json(Model);</script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/light-pos/app.js\" asp-append-version=\"true\"></script>\n}\n<div class=\"public-page-wrap flex-column\">\n    <partial name=\"_StatusMessage\" />\n    <partial name=\"_StoreHeader\" model=\"(string.IsNullOrEmpty(Model.Title) ? Model.StoreName : Model.Title, Model.LogoFileId)\" />\n    @if (Context.Request.Query.ContainsKey(\"simple\"))\n    {\n        <partial name=\"PointOfSale/Public/MinimalLight\" model=\"Model\" />\n    }\n    else\n    {\n        <noscript>\n            <partial name=\"PointOfSale/Public/MinimalLight\" model=\"Model\" />\n        </noscript>\n        <partial name=\"PointOfSale/Public/VueLight\" model=\"Model\" />\n    }\n    <footer class=\"store-footer\">\n        <a href=\"https://btcpayserver.org\" target=\"_blank\" rel=\"noreferrer noopener\">\n            Powered by <partial name=\"_StoreFooterLogo\" />\n        </a>\n    </footer>\n</div>\n", "@using BTCPayServer.Services.Apps\n@using BTCPayServer.Abstractions.Models\n@using BTCPayServer.Views.Apps\n@using BTCPayServer.Abstractions.Extensions\n@using BTCPayServer.Forms\n@using BTCPayServer.Services.Stores\n@inject FormDataService FormDataService\n@model BTCPayServer.Plugins.PointOfSale.Models.UpdatePointOfSaleViewModel\n@{\n    ViewData.SetActivePage(AppsNavPages.Update, \"Update Point of Sale\", Model.Id);\n\n    var checkoutFormOptions = await FormDataService.GetSelect(Model.StoreId, Model.FormId);\n}\n\n<form method=\"post\">\n    <div class=\"sticky-header-setup\"></div>\n    <div class=\"sticky-header d-sm-flex align-items-center justify-content-between\">\n        <h2 class=\"mb-0\">@ViewData[\"Title\"]</h2>\n        <div class=\"d-flex gap-3 mt-3 mt-sm-0\">\n            <button type=\"submit\" class=\"btn btn-primary order-sm-1\" id=\"SaveSettings\">Save</button>\n            <a class=\"btn btn-secondary\" asp-action=\"ViewPointOfSale\" asp-route-appId=\"@Model.Id\" id=\"ViewApp\" target=\"_blank\">View</a>\n        </div>\n    </div>\n\n    <partial name=\"_StatusMessage\" />\n\n    <input type=\"hidden\" asp-for=\"StoreId\" />\n    <div asp-validation-summary=\"ModelOnly\" class=\"text-danger\"></div>\n\n    <div class=\"row\">\n        <div class=\"col-sm-10 col-md-9 col-xl-7 col-xxl-6\">\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        <label asp-for=\"AppName\" class=\"form-label\" data-required></label>\n                        <input asp-for=\"AppName\" class=\"form-control\" required />\n                        <span asp-validation-for=\"AppName\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        <label asp-for=\"Title\" class=\"form-label\" data-required></label>\n                        <input asp-for=\"Title\" class=\"form-control\" required />\n                        <span asp-validation-for=\"Title\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label asp-for=\"DefaultView\" class=\"form-label\" data-required>Choose Point of Sale Style</label>\n                <div class=\"btcpay-list-select\">\n                    @foreach (var type in Enum.GetValues<PosViewType>())\n                    {\n                        <input type=\"radio\" asp-for=\"DefaultView\" value=\"@type\" id=\"DefaultView_@type\">\n                        <label for=\"DefaultView_@type\" class=\"btcpay-list-select-item\">\n                            <vc:icon symbol=\"pos-@type.ToString().ToLowerInvariant()\" />\n                            @typeof(PosViewType).DisplayName(type.ToString())\n                        </label>\n                    }\n                </div>\n            </div>\n            <div class=\"form-group mb-0\">\n                <label asp-for=\"Currency\" class=\"form-label\"></label>\n                <input asp-for=\"Currency\" class=\"form-control w-auto\" currency-selection />\n                <div class=\"form-text\">Uses the store's default currency (@Model.StoreDefaultCurrency) if empty.</div>\n                <span asp-validation-for=\"Currency\" class=\"text-danger\"></span>\n            </div>\n        </div>\n    </div>\n    <div id=\"description\" class=\"row mt-4\">\n        <div class=\"col-xl-10 col-xxl-constrain\">\n            <div class=\"form-group mb-0\">\n                <label asp-for=\"Description\" class=\"form-label\"></label>\n                <textarea asp-for=\"Description\" rows=\"10\" cols=\"40\" class=\"form-control richtext\"></textarea>\n                <span asp-validation-for=\"Description\" class=\"text-danger\"></span>\n            </div>\n        </div>\n    </div>\n    <div id=\"products\">\n        <div class=\"row\">\n            <div class=\"col-xxl-constrain\">\n                <partial name=\"TemplateEditor\" model=\"@(nameof(Model.Template), \"Products\", Model.Currency ?? Model.StoreDefaultCurrency)\" />\n            </div>\n        </div>\n        <div class=\"row collapse\" id=\"RawEditor\">\n            <div class=\"col-xxl-constrain\">\n                <div class=\"form-group pt-3\">\n                    <label asp-for=\"Template\" class=\"form-label\"></label>\n                    <textarea asp-for=\"Template\" rows=\"10\" cols=\"40\" class=\"form-control\"></textarea>\n                    <span asp-validation-for=\"Template\" class=\"text-danger\"></span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row mt-5\">\n        <div class=\"col-sm-10 col-md-9 col-xl-7 col-xxl-6\">\n            <h3 class=\"mb-4\">Checkout</h3>\n            <fieldset>\n                <div class=\"form-group\" id=\"button-price-text\">\n                    <label asp-for=\"ButtonText\" class=\"form-label\" data-required></label>\n                    <input asp-for=\"ButtonText\" class=\"form-control\" required />\n                    <span asp-validation-for=\"ButtonText\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"form-group\">\n                    <label asp-for=\"FormId\" class=\"form-label\"></label>\n                    <select asp-for=\"FormId\" class=\"form-select w-auto\" asp-items=\"@checkoutFormOptions\"></select>\n                    <span asp-validation-for=\"FormId\" class=\"text-danger\"></span>\n                </div>\n            </fieldset>\n            <fieldset id=\"tips\" class=\"mt-2\">\n                <legend class=\"h5 mb-3 fw-semibold\">Tips</legend>\n                <div class=\"form-group d-flex align-items-center pt-2\">\n                    <input asp-for=\"EnableTips\" type=\"checkbox\" class=\"btcpay-toggle me-3\" data-bs-toggle=\"collapse\" data-bs-target=\"#CustomTipsSettings\" aria-expanded=\"@Model.EnableTips\" aria-controls=\"CustomTipsSettings\" />\n                    <label asp-for=\"EnableTips\" class=\"form-label mb-0\"></label>\n                    <span asp-validation-for=\"EnableTips\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"collapse @(Model.EnableTips ? \"show\" : \"\")\" id=\"CustomTipsSettings\">\n                    <div class=\"form-group\">\n                        <label asp-for=\"CustomTipText\" class=\"form-label\" data-required></label>\n                        <input asp-for=\"CustomTipText\" class=\"form-control\" required />\n                        <span asp-validation-for=\"CustomTipText\" class=\"text-danger\"></span>\n                    </div>\n                    <div class=\"form-group\">\n                        <label asp-for=\"CustomTipPercentages\" class=\"form-label\"></label>\n                        <input asp-for=\"CustomTipPercentages\" class=\"form-control\" />\n                        <span asp-validation-for=\"CustomTipPercentages\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n            </fieldset>\n            <fieldset id=\"discounts\" class=\"mt-2\">\n                <legend class=\"h5 mb-3 fw-semibold\">Discounts</legend>\n                <div class=\"form-group d-flex align-items-center\">\n                    <input asp-for=\"ShowDiscount\" type=\"checkbox\" class=\"btcpay-toggle me-3\" />\n                    <div>\n                        <label asp-for=\"ShowDiscount\" class=\"form-label mb-0\"></label>\n                        <div class=\"text-muted\">Not recommended for customer self-checkout.</div>\n                    </div>\n                    <span asp-validation-for=\"ShowDiscount\" class=\"text-danger\"></span>\n                </div>\n            </fieldset>\n            <fieldset id=\"custom-payments\" class=\"mt-2\">\n                <legend class=\"h5 mb-3 fw-semibold\">Custom Payments</legend>\n                <div class=\"form-group mb-4 d-flex align-items-center\">\n                    <input asp-for=\"ShowCustomAmount\" type=\"checkbox\" class=\"btcpay-toggle me-3\" data-bs-toggle=\"collapse\" data-bs-target=\"#CustomAmountSettings\" aria-expanded=\"@Model.ShowCustomAmount\" aria-controls=\"CustomAmountSettings\"/>\n                    <label asp-for=\"ShowCustomAmount\" class=\"form-label mb-0\"></label>\n                    <span asp-validation-for=\"ShowCustomAmount\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"collapse @(Model.ShowCustomAmount ? \"show\" : \"\")\" id=\"CustomAmountSettings\">\n                    <div class=\"form-group\">\n                        <label asp-for=\"CustomButtonText\" class=\"form-label\" data-required></label>\n                        <input asp-for=\"CustomButtonText\" class=\"form-control\" required />\n                        <span asp-validation-for=\"CustomButtonText\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n            </fieldset>\n        </div>\n    </div>\n    <div class=\"row\" style=\"margin-top:2.25rem;\">\n        <div class=\"col-xl-8 col-xxl-constrain\">\n            <h3 class=\"mb-2\">Additional Options</h3>\n            <div class=\"form-group\">\n                <div class=\"accordion\" id=\"additional\">\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-embed-payment-button-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-embed-payment-button\" aria-expanded=\"false\" aria-controls=\"additional-embed-payment-button\">\n                                Embed a payment button linking to POS item\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-embed-payment-button\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-embed-payment-button-header\">\n                            <div class=\"accordion-body\">\n                                <p>You can host point of sale buttons in an external website with the following code.</p>\n                                @if (Model.Example1 != null)\n                                {\n                                    <span>For anything with a custom amount</span>\n                                    <pre class=\"p-3\">@Model.Example1</pre>\n                                }\n                                @if (Model.Example2 != null)\n                                {\n                                    <span>For a specific item of your template</span>\n                                    <pre class=\"p-3\">@Model.Example2</pre>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-embed-pos-iframe-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-embed-pos-iframe\" aria-expanded=\"false\" aria-controls=\"additional-embed-pos-iframe\">\n                                Embed Point of Sale via Iframe\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-embed-pos-iframe\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-embed-pos-iframe-header\">\n                            <div class=\"accordion-body\">\n                                You can embed this POS via an iframe.\n                                @{\n                                    var iframe = $\"<iframe src='{Url.Action(\"ViewPointOfSale\", \"UIPointOfSale\", new { appId = Model.Id }, Context.Request.Scheme)}' style='max-width: 100%; border: 0;'></iframe>\";\n                                }\n                                <pre class=\"p-3\">@iframe</pre>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-redirect-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-redirect\" aria-expanded=\"false\" aria-controls=\"additional-redirect\">\n                                Redirects\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-redirect\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-redirect-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group\">\n                                    <label asp-for=\"RedirectUrl\" class=\"form-label\"></label>\n                                    <input asp-for=\"RedirectUrl\" class=\"form-control\" />\n                                    <span asp-validation-for=\"RedirectUrl\" class=\"text-danger\"></span>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label asp-for=\"RedirectAutomatically\" class=\"form-label\"></label>\n                                    <select asp-for=\"RedirectAutomatically\" asp-items=\"Model.RedirectAutomaticallySelectList\" class=\"form-select\"></select>\n                                    <span asp-validation-for=\"RedirectAutomatically\" class=\"text-danger\"></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-notification-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-notification\" aria-expanded=\"false\" aria-controls=\"additional-notification\">\n                                Notification URL Callbacks\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-notification\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-notification-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group\">\n                                    <label asp-for=\"NotificationUrl\" class=\"form-label\"></label>\n                                    <input asp-for=\"NotificationUrl\" class=\"form-control\" />\n                                    <span asp-validation-for=\"NotificationUrl\" class=\"text-danger\"></span>\n                                </div>\n                                <p>A <code>POST</code> callback will be sent to the specified <code>notificationUrl</code> (for on-chain transactions when there are sufficient confirmations):</p>\n                                <pre class=\"p-3\">@Model.ExampleCallback</pre>\n                                <p><strong>Never</strong> trust anything but <code>id</code>, <strong>ignore</strong> the other fields completely, an attacker can spoof those, they are present only for backward compatibility reason:</p>\n                                <ul>\n                                    <li>Send a <code>GET</code> request to <code>https://btcpay.example.com/invoices/{invoiceId}</code> with <code>Content-Type: application/json; Authorization: Basic YourLegacyAPIkey\"</code>, Legacy API key can be created with Access Tokens in Store settings</li>\n                                    <li>Verify that the <code>orderId</code> is from your backend, that the <code>price</code> is correct and that <code>status</code> is <code>settled</code></li>\n                                    <li>You can then ship your order</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-custom-css-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-custom-css\" aria-expanded=\"false\" aria-controls=\"additional-custom-css\">\n                                Custom CSS\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-custom-css\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-custom-css-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group\">\n                                    <label asp-for=\"CustomCSSLink\" class=\"form-label\"></label>\n                                    <a href=\"https://docs.btcpayserver.org/Development/Theme/#2-bootstrap-themes\" target=\"_blank\" rel=\"noreferrer noopener\" title=\"More information...\">\n                                        <vc:icon symbol=\"info\" />\n                                    </a>\n                                    <input asp-for=\"CustomCSSLink\" class=\"form-control\" />\n                                    <span asp-validation-for=\"CustomCSSLink\" class=\"text-danger\"></span>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label asp-for=\"EmbeddedCSS\" class=\"form-label\"></label>\n                                    <textarea asp-for=\"EmbeddedCSS\" rows=\"10\" cols=\"40\" class=\"form-control\"></textarea>\n                                    <span asp-validation-for=\"EmbeddedCSS\" class=\"text-danger\"></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n<div class=\"d-flex gap-3 mt-3\">\n    <a class=\"btn btn-secondary\" asp-action=\"ListInvoices\" asp-controller=\"UIInvoice\" asp-route-storeId=\"@Model.StoreId\" asp-route-searchterm=\"@Model.SearchTerm\">Invoices</a>\n  <a id=\"DeleteApp\" class=\"btn btn-outline-danger\" asp-controller=\"UIApps\" asp-action=\"DeleteApp\" asp-route-appId=\"@Model.Id\" data-bs-toggle=\"modal\" data-bs-target=\"#ConfirmModal\" data-description=\"The app <strong>@Html.Encode(Model.AppName)</strong> and its settings will be permanently deleted.\" data-confirm-input=\"DELETE\">Delete this app</a>\n</div>\n\n<partial name=\"_Confirm\" model=\"@(new ConfirmModel(\"Delete app\", \"This app will be removed from this store.\", \"Delete\"))\" />\n\n@section PageHeadContent {\n    <link href=\"~/vendor/highlightjs/default.min.css\" rel=\"stylesheet\" asp-append-version=\"true\">\n    <link href=\"~/vendor/summernote/summernote-bs5.css\" rel=\"stylesheet\" asp-append-version=\"true\" />\n    <link href=\"~/main/template-editor.css\" rel=\"stylesheet\" asp-append-version=\"true\" />\n}\n\n@section PageFootContent {\n    <partial name=\"_ValidationScriptsPartial\" />\n    <script id=\"template-product-item\" type=\"text/template\">\n        <div class=\"col-sm-4 col-md-3 mb-3\">\n            <div class=\"card\">\n                {image}\n                <div class=\"card-body\">\n                    <h6 class=\"card-title\">{title}</h6>\n                    <a href=\"#\" class=\"js-product-edit btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#product-modal\">Edit</a>\n                    <a href=\"#\" class=\"js-product-remove btn btn-danger\"><i class=\"fa fa-trash\"></i></a>\n                </div>\n            </div>\n        </div>\n    </script>\n    <script id=\"template-product-content\" type=\"text/template\">\n        <div class=\"mb-3\">\n            <input class=\"js-product-id\" type=\"hidden\" name=\"id\" value=\"{id}\">\n            <input class=\"js-product-index\" type=\"hidden\" name=\"index\" value=\"{index}\">\n            <div class=\"form-group row\">\n                <div class=\"col-sm-6\">\n                    <label class=\"form-label\" data-required>Title</label>\n                    <input type=\"text\" class=\"js-product-title form-control mb-2\" value=\"{title}\" autofocus required />\n                </div>\n                <div class=\"col-sm-3\">\n                    <label class=\"form-label\" data-required>Price</label>\n                    <input class=\"js-product-price form-control mb-2\"\n                           inputmode=\"decimal\"\n                           pattern=\"\\d*\"\n                           type=\"number\"\n                           value=\"{price}\"\n                           required />\n                </div>\n                <div class=\"col-sm-3\">\n                    <label class=\"form-label\">Custom price</label>\n                    <select class=\"js-product-custom form-select\">\n                        {custom}\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"form-label\">Image</label>\n                <input type=\"text\" class=\"js-product-image form-control mb-2\" value=\"{image}\" />\n            </div>\n            <div class=\"form-group\">\n                <label class=\"form-label\">Description</label>\n                <textarea rows=\"3\" cols=\"40\" class=\"js-product-description form-control mb-2\">{description}</textarea>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"form-label\">Inventory (leave blank to not use inventory feature)</label>\n                <input type=\"number\" inputmode=\"numeric\" step=\"1\" class=\"js-product-inventory form-control mb-2\" value=\"{inventory}\" />\n            </div>\n            <div class=\"form-group d-flex align-items-center\">\n                <input type=\"checkbox\" class=\"btcpay-toggle me-2\" value=\"{disabled}\" />\n                <label class=\"form-label mb-0\">Disabled</label>\n            </div>\n        </div>\n    </script>\n    <script>\n        const description = document.getElementById('description');\n        const products = document.getElementById('products');\n        const tips = document.getElementById('tips');\n        const discounts = document.getElementById('discounts');\n        const buttonPriceText = document.getElementById('button-price-text');\n        const customPayments = document.getElementById('custom-payments');\n        \n        function hide(el) {\n            el.setAttribute('hidden', true);\n        }\n        function show(el) {\n            el.removeAttribute('hidden');\n        }\n        function updateFormForDefaultView(type) {\n            console.log(type)\n            switch (type) {\n                case 'Static':\n                case 'Print':\n                    hide(tips);\n                    hide(discounts);\n                    hide(buttonPriceText);\n                    show(description);\n                    show(products);\n                    show(customPayments);\n                    break;\n                case 'Cart':\n                    show(tips);\n                    show(products);\n                    show(discounts);\n                    show(description);\n                    show(buttonPriceText);\n                    show(customPayments);\n                    break;\n                case 'Light':\n                    show(tips);\n                    show(discounts);\n                    hide(products);\n                    hide(description);\n                    hide(buttonPriceText);\n                    hide(customPayments);\n                    break;\n            }\n        }\n\n        document.addEventListener('DOMContentLoaded', () => {\n            const defaultView = document.querySelector('input[name=\"DefaultView\"]:checked'); \n            if (defaultView) {\n                updateFormForDefaultView(defaultView.value);\n            }\n        });\n        \n        delegate('change', 'input[name=\"DefaultView\"]', e => {\n            updateFormForDefaultView(e.target.value);\n        });\n    </script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/summernote/summernote-bs5.js\" asp-append-version=\"true\"></script>\n}\n", "@model (Dictionary<string, object> Items, int Level)\n\n@functions {\n    private bool IsValidURL(string source)\n    {\n        return Uri.TryCreate(source, UriKind.Absolute, out var uriResult) && \n            (uriResult.Scheme == Uri.UriSchemeHttp || uriResult.Scheme == Uri.UriSchemeHttps);\n    }\n}\n\n<table class=\"table my-0\">\n    @foreach (var (key, value) in Model.Items)\n    {\n        <tr>\n            @if (value is string str)\n            {\n                if (!string.IsNullOrEmpty(key))\n                {\n                    <th class=\"w-150px\">@key</th>\n                }\n                <td>\n                    @if (IsValidURL(str))\n                    {\n                        <a href=\"@str\" target=\"_blank\" rel=\"noreferrer noopener\">@str</a>\n                    }\n                    else\n                    {\n                        @value?.ToString()\n                    }\n                </td>\n            }\n            else if (value is Dictionary<string, object>subItems)\n            {\n                @* This is the array case *@\n                if (subItems.Count == 1 && subItems.First().Value is string str2)\n                {\n                    <th class=\"w-150px\">@key</th>\n                    <td>\n                        @if (IsValidURL(str2))\n                        {\n                            <a href=\"@str2\" target=\"_blank\" rel=\"noreferrer noopener\">@str2</a>\n                        }\n                        else\n                        {\n                            @subItems.First().Value?.ToString()\n                        }\n\t\t\t\t\t</td>\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t<td colspan=\"2\" >\n\t\t\t\t\t\t@{\n\t\t\t\t\t\t\tWrite(Html.Raw($\"<h{Model.Level + 3} class=\\\"mt-4 mb-3\\\">\"));\n\t\t\t\t\t\t\tWrite(key);\n\t\t\t\t\t\t\tWrite(Html.Raw($\"</h{Model.Level + 3}>\"));\n\t\t\t\t\t\t}\n                        <partial name=\"PosData\" model=\"(subItems, Model.Level + 1)\"/>\n                    </td>\n                }\n            }\n        </tr>\n    }\n</table>\n\n", "@model (string templateId, string title, string currency)\n\n<div id=\"template-editor-app\" v-cloak>\n    <div class=\"form-group mb-0\">\n        <h3 class=\"mt-5 mb-4\">@Model.title</h3>\n        @if (ViewContext.ViewData.ModelState.TryGetValue(Model.templateId, out var errors))\n        {\n            foreach (var error in errors.Errors)\n            {\n                <br/>\n                <span class=\"text-danger\">@error.ErrorMessage</span>\n            }\n        }\n\n        <div class=\"bg-light card\">\n            <div class=\"card-body \" v-bind:class=\"{ 'card-deck': items.length > 0}\">\n                <div v-for=\"(item, index) of items\" class=\"card my-2 card-wrapper template-item me-0 ms-0\" v-bind:key=\"item.id\">\n                    <div v-if=\"anyImages\" class=\"card-img-top border-bottom\" v-bind:style=\"getImage(item)\"></div>\n                    <div class=\"card-body\">\n                        <h6 class=\"card-title\" v-html=\"item.title\"></h6>\n                        <div class=\"gap-3 d-flex\">\n                            <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"editItem(index)\">Edit</button>\n                            <button type=\"button\" class=\"btn btn-danger\" v-on:click=\"removeItem(index)\">\n                                <i class=\"fa fa-trash\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div v-if=\"!items || items.length === 0\" class=\"col-12 text-center\">\n                    No items.<br/>\n                    <button type=\"button\" class=\"btn btn-link\" v-on:click=\"editItem(-1)\" id=\"btn-add-first\">\n                        Add your first item\n                    </button>\n                </div>\n            </div>\n            <div class=\"card-footer text-start p-3 gap-3 d-flex\">\n                <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"editItem(-1)\" id=\"btn-add\">\n                    <i class=\"fa fa-plus fa-fw\"></i> Add\n                </button>\n                <button type=\"button\" class=\"btn btn-secondary\" id=\"ToggleRawEditor\" data-bs-toggle=\"collapse\" data-bs-target=\"#RawEditor\" aria-expanded=\"false\" aria-controls=\"RawEditor\">\n                    Toggle raw editor\n                </button>\n            </div>\n        </div>\n        <div class=\"modal\" id=\"product-modal\" tabindex=\"-1\" role=\"dialog\">\n            <div class=\"modal-dialog\" role=\"document\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" v-if=\"editingItem\">{{editingItem.index>=0? \"Edit\" : \"Add\"}} Item</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" ref=\"close\">\n                            <vc:icon symbol=\"close\"/>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\" v-if=\"editingItem\">\n                        <div class=\"mb-3\">\n                            <span class=\"text-danger row m-2\" v-for=\"error of errors\">{{error}}</span>\n                            <div class=\"form-group\">\n                                <label class=\"form-label\" data-required>Title</label>\n                                <input type=\"text\" required pattern=\"[^\\*#]+\" class=\"form-control mb-2\" v-model=\"editingItem.title\" autofocus ref=\"txtTitle\" />\n                            </div>\n                            <div class=\"form-group row\">\n                                <div class=\"col-sm-6\">\n                                    <label class=\"form-label\">Price</label>\n                                    <select class=\"form-select\" v-model=\"editingItem.custom\">\n                                        <option v-for=\"option in customPriceOptions\" :value=\"option.value\">{{option.text}}</option>\n                                    </select>\n                                </div>\n                                <div class=\"col-sm-6\" v-show=\"editingItem.custom !== 'topup'\">\n                                    <label class=\"form-label\">&nbsp;</label>\n                                    <div class=\"input-group mb-2\">\n                                        <input class=\"form-control\"\n                                               inputmode=\"decimal\"\n                                               pattern=\"\\d*\"\n                                               step=\"any\"\n                                               min=\"0\"\n                                               type=\"number\"\n                                               required\n                                               v-model=\"editingItem.price\"\n                                               ref=\"txtPrice\"\n                                               aria-describedby=\"currency-addon\"/>\n                                        <span class=\"input-group-text\" id=\"currency-addon\">@Model.currency</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Image Url</label>\n                                <input type=\"text\" class=\"form-control mb-2\" pattern=\"[^\\*#]+\" v-model=\"editingItem.image\" ref=\"txtImage\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Description</label>\n                                <textarea rows=\"3\" cols=\"40\" class=\"form-control mb-2\" v-model=\"editingItem.description\" ref=\"txtDescription\"></textarea>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Inventory</label>\n                                <input type=\"number\" inputmode=\"numeric\" min=\"0\" step=\"1\" class=\"form-control mb-2\" v-model=\"editingItem.inventory\" ref=\"txtInventory\" />\n                                <div class=\"form-text\">Leave blank to not use this feature.</div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">ID</label>\n                                <input type=\"text\" required pattern=\"[^\\*#]+\" class=\"form-control mb-2\" v-model=\"editingItem.id\" ref=\"txtId\" />\n                                <div class=\"form-text\">Leave blank to generate ID from title.</div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Buy Button Text</label>\n                                <input type=\"text\" id=\"BuyButtonText\" class=\"form-control mb-2\" v-model=\"editingItem.buyButtonText\" ref=\"txtBuyButtonText\" />\n                            </div>\n                            <div class=\"form-group d-flex align-items-center\">\n                                <input type=\"checkbox\" id=\"Disabled\" class=\"btcpay-toggle me-3\" v-model=\"editingItem.disabled\" />\n                                <label class=\"form-label mb-0\">Disabled</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" v-on:click=\"clearEditingItem()\">Close</button>\n                        <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"saveEditingItem()\" id=\"SaveItemChanges\">Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    new Vue({\n        el: '#template-editor-app',\n        data: {\n            errors: [],\n            items: [],\n            editingItem: null,\n            customPriceOptions: [\n                { text: 'Fixed', value: \"fixed\" },\n                { text: 'Minimum', value: \"minimum\" },\n                { text: 'Custom', value: 'topup' },\n            ],\n            elementId: \"@Model.templateId\"\n        },\n        computed: {\n            anyImages: function(){\n                return !!this.items.find(function(i){ return !!i.image;});\n            }\n        },\n        mounted: function() {\n            this.loadYml();\n            this.getInputElement().on(\"input change\", this.loadYml.bind(this));            \n            this.getModalElement().on(\"hide.bs.modal\", this.clearEditingItem.bind(this));\n        },\n        methods: {\n            getImage: function(item){\n                var image = this.unEscapeKey(item.image) || \"~/img/img-placeholder.svg\";\n                var url = image.startsWith(\"~\") ? image.replace('~', window.location.pathname.substring(0, image.indexOf('/apps'))) : image;\n                return {\n                    \"background-image\" : \"url('\" + url +\"')\",\n                    \"opacity\": item.image? 1: 0.5\n                }\n            },\n            getInputElement : function(){ return $(\"#\" + this.elementId); },\n            getModalElement : function(){ return $(\"#product-modal\"); },\n            loadYml: function(){\n                var result = [];\n                var template = this.getInputElement().val().trim();\n                var lines = [];\n                var items = template.split(\"\\n\");\n\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i] === \"\"){\n                        continue;\n                    }\n                    if (items[i].startsWith(\"  \")){\n                        lines[lines.length-1]+=items[i] + \"\\n\";\n                    } else {\n                        lines.push(items[i] + \"\\n\");\n                    }\n                }\n\n                // Split products from the template\n                for (var kl in lines) {\n                    var line = lines[kl], product = line.split(\"\\n\"), goingThroughMethods = false,\n                        id = null, price = null, title = null, description = null, image = null,\n                        custom = null, buyButtonText = null, inventory = null, paymentMethods = [],\n                        disabled = false;\n\n                    for (var kp in product) {\n                        var productProperty = product[kp].trim();\n            \n                        if (kp == 0) {\n                            id = productProperty.replace(\":\", \"\");\n                        }\n                        if (productProperty.startsWith(\"-\") && goingThroughMethods) {\n                            paymentMethods.push(productProperty.substr(1));\n                        } else {\n                            goingThroughMethods = false;\n                        }\n            \n                        if (productProperty.indexOf('price:') !== -1) {\n                            price = parseFloat(productProperty.replace('price:', '').trim()).noExponents();\n                        }\n                        if (productProperty.indexOf('title:') !== -1) {\n                            title = productProperty.replace('title:', '').trim();\n                        }\n                        if (productProperty.indexOf('description:') !== -1) {\n                            description =productProperty.replace('description:', '').trim();\n                            if (description.startsWith('\"') && description.endsWith('\"')){\n                                description = description.substr(1, description.length-2);\n                            }\n                            description = description\n                            .replaceAll(\"<br>\", \"\\n\")\n                            .replaceAll(\"<br/>\", \"\\n\")\n                            .replaceAll('\\\\\"', '\"')\n                        }\n                        if (productProperty.indexOf('image:') !== -1) {\n                            image = productProperty.replace('image:', '').trim();\n                        }\n                        if (productProperty.indexOf('price_type:') !== -1) {\n                            custom = productProperty.replace('price_type:', '').trim();\n                        }\n                        if (productProperty.indexOf('buyButtonText:') !== -1) {\n                            buyButtonText = productProperty.replace('buyButtonText:', '').trim();\n                        }\n                        if (productProperty.indexOf('inventory:') !== -1) {\n                            inventory = parseInt(productProperty.replace('inventory:', '').trim(),10);\n                        }\n                        if (productProperty.indexOf('payment_methods:') !== -1) {\n                            goingThroughMethods = true;\n                        }\n                        if (productProperty.indexOf('disabled:') !== -1) {\n                            disabled = productProperty.replace('disabled:', '').trim() === \"true\";\n                        }\n                    }\n            \n                    if (title != null) {\n                        // Add product to the list\n                        result.push({\n                            id: id,\n                            title: title,\n                            price: price,\n                            image: image || null,\n                            description:  description || '',\n                            custom: custom || \"fixed\",\n                            buyButtonText: buyButtonText,\n                            inventory: isNaN(inventory)? null: inventory,\n                            paymentMethods: paymentMethods,\n                            disabled: disabled\n                        });\n                    }                    \n                }\n                this.items = result;\n            },\n            toYml: function(){\n                    let template = '';\n                    // Construct template from the product list\n                    for (const key in this.items) {\n                        const product = this.items[key],\n                            id = product.id,\n                            title = product.title,\n                            price = product.custom === 'topup'? null : product.price??0,\n                            image = product.image,\n                            description = product.description,\n                            custom = product.custom,\n                            buyButtonText = product.buyButtonText,\n                            inventory = product.inventory,\n                            paymentMethods = product.paymentMethods,\n                            disabled = product.disabled;\n                        let itemTemplate = id+\":\\n\";                        \n                       itemTemplate += ( product.custom === 'topup'? '' : ('  price: ' + parseFloat(price).noExponents() + '\\n'));\n                        itemTemplate+= '  title: ' + title + '\\n';\n\n                        if (description) {\n                            itemTemplate += '  description: \"' + description.replaceAll(\"\\n\", \"<br/>\").replaceAll('\"', '\\\\\"') + '\"\\n';\n                        }\n                        if (image) {\n                            itemTemplate += '  image: ' + image + '\\n';\n                        }\n                        if (inventory) {\n                            itemTemplate += '  inventory: ' + inventory + '\\n';\n                        }\n                        if (custom != null) {\n                            itemTemplate += '  price_type: \"' + custom + '\" \\n';\n                        }\n                        if (buyButtonText != null && buyButtonText.length > 0) {\n                            itemTemplate += '  buyButtonText: ' + buyButtonText + '\\n';\n                        }\n                        if (disabled != null) {\n                            itemTemplate += '  disabled: ' + disabled.toString() + '\\n';\n                        }\n                        if(paymentMethods != null && paymentMethods.length > 0){\n                            itemTemplate+= '  payment_methods:\\n';\n                            for (var method of paymentMethods){\n                                itemTemplate+= '    - '+method+'\\n';\n                            }\n                        }                       \n                        itemTemplate += '\\n';\n                        template+=itemTemplate;\n                    }\n                    this.getInputElement().val(template);\n            },\n            editItem: function(index){\n                this.errors = [];\n                if(index < 0){\n                    this.editingItem = {index:-1, id:\"\", title: \"\", price: 0, image: \"\", description: \"\", custom: \"fixed\", inventory: null, paymentMethods: [], disabled: false};\n                }else{\n                    this.editingItem = {...this.items[index], index};\n                }\n                \n                this.editingItem = this.unEscape(this.editingItem);\n                this.getModalElement().modal(\"show\");\n            },\n            removeItem: function(index){\n                this.items.splice(index,1);\n                this.toYml();\n            },\n            clearEditingItem: function(){\n                this.editingItem = null;\n                this.errors = [];\n            },\n            validate: function(){\n                this.errors = [];\n                if (this.editingItem.id) {\n                    var matchedId = this.items.findIndex((x)=> { return this.unEscapeKey(x.id) === this.editingItem.id;});\n                    if( matchedId>= 0 && matchedId != this.editingItem.index)\n                        this.errors.push(\"You cannot have multiple items with the same id\");\n                    \n                    if (!this.$refs.txtId.checkValidity()) {\n                        this.errors.push(\"Id is required and cannot have * or #\");\n                    }\n                    if(this.editingItem.id.startsWith(\"- \")){\n                        this.errors.push(\"Id cannot start with \\\"- \\\"\");\n                    }else if(this.editingItem.id.trim() == \"\"){\n                        this.errors.push(\"Id is required\");\n                    }                   \n                }   \n                \n                if (this.editingItem.description.indexOf(\"*\") >= 0 || this.editingItem.description.indexOf(\"#\") >= 0) {\n                    this.errors.push(\"Description cannot have * or #\");\n                }\n                if(this.editingItem.description.startsWith(\"- \")){\n                    this.errors.push(\"Description cannot start with \\\"- \\\"\");\n                }\n                if (!this.$refs.txtImage.checkValidity()) {\n                    this.errors.push(\"Image cannot have * or #\");\n                }\n                if(this.editingItem.image.startsWith(\"- \")){\n                    this.errors.push(\"Image cannot start with \\\"- \\\"\");\n                }\n                \n                if (this.editingItem.custom !== \"topup\" && !this.$refs.txtPrice.checkValidity()) {\n                    this.errors.push(\"Price must be a valid number\");\n                }\n                if (!this.$refs.txtTitle.checkValidity()) {\n                    this.errors.push(\"Title is required and cannot have * or #\");\n                }else if(this.editingItem.title.startsWith(\"- \")){\n                    this.errors.push(\"Title cannot start with \\\"- \\\"\");\n                }else if(this.editingItem.title.trim() == \"\"){\n                    this.errors.push(\"Title is required\");\n                }                \n                if (!this.$refs.txtInventory.checkValidity()) {\n                    this.errors.push(\"Inventory must be blank or a a valid number (>=0)\");\n                }\n                return this.errors.length === 0;\n            },\n            saveEditingItem: function(){\n                const fallbackId = this.editingItem.title.toLowerCase().trim();\n                if(!this.editingItem.id && fallbackId){\n                    this.editingItem.id = fallbackId;\n                    this.$nextTick(this.saveEditingItem.bind(this));\n                    return;\n                }\n                if(!this.validate()){\n                    return;\n                }\n                this.editingItem = this.escape(this.editingItem);\n                \n                if(this.editingItem.index < 0){\n                    this.items.push(this.editingItem);\n                }else{\n                    this.items.splice(this.editingItem.index,1,this.editingItem);\n                }\n                this.toYml();\n                this.getModalElement().modal(\"hide\");\n            },\n            escape: function(item) {\n                for(var k in item){\n                    if(k !== \"paymentMethods\" && k!==\"id\"){\n                        item[k] = $('<div/>').text(item[k]).html();\n                    }\n                }\n                return item;\n            },\n            unEscape: function(item){\n                for(var k in item){\n                    if(k !== \"paymentMethods\" && k!==\"id\" && k !== \"disabled\"){\n                        item[k] = this.unEscapeKey(item[k]);\n                    }\n                }\n                return item;\n            },\n            unEscapeKey : function(k){\n                // Without this check a `false` boolean value will always be returned as an empty string\n                if (k === false) {\n                    return \"false\";\n                }\n\n                return $('<div/>').html(k).text();\n            }\n        }\n    });\n});\n\nNumber.prototype.noExponents= function(){\n    var data= String(this).split(/[eE]/);\n    if(data.length== 1) return data[0];\n\n    var  z= '', sign= this<0? '-':'',\n        str= data[0].replace('.', ''),\n        mag= Number(data[1])+ 1;\n\n    if(mag<0){\n        z= sign + '0.';\n        while(mag++) z += '0';\n        return z + str.replace(/^\\-/,'');\n    }\n    mag -= str.length;\n    while(mag--) z += '0';\n    return str + z;\n};\n\n</script>\n", "@using BTCPayServer.Abstractions.Extensions\n@using BTCPayServer.Components.StoreSelector\n@using BTCPayServer.Components.MainNav\n@inject Microsoft.AspNetCore.Http.IHttpContextAccessor _context;\n@inject BTCPayServer.Services.BTCPayServerEnvironment _env\n@inject SignInManager<ApplicationUser> _signInManager\n@inject UserManager<ApplicationUser> _userManager\n@inject LinkGenerator _linkGenerator\n@inject BTCPayServer.Services.PoliciesSettings PoliciesSettings\n\n@{\n    var notificationsReturnUrl = Context.Request.GetCurrentPathWithQueryString();\n    var notificationDisabled = PoliciesSettings.DisableInstantNotifications;\n    if (!notificationDisabled)\n    {\n        var user = await _userManager.GetUserAsync(User);\n        notificationDisabled = user?.DisabledNotifications == \"all\";\n    }\n\tvar expectedScheme = _context.HttpContext.Request.Scheme;\n\tvar expectedHost = _context.HttpContext.Request.Host.ToString();\n}\n\n<!DOCTYPE html>\n<html lang=\"en\"@(_env.IsDeveloping ? \" data-devenv\" : \"\")>\n<head>\n    <partial name=\"LayoutHead\" />\n    @await RenderSectionAsync(\"PageHeadContent\", false)\n</head>\n<body class=\"d-flex flex-column flex-lg-row min-vh-100\">\n<header id=\"mainMenu\" class=\"btcpay-header d-flex flex-column\">\n    <div id=\"mainMenuHead\">\n        <button id=\"mainMenuToggle\" class=\"mainMenuButton\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#mainNav\" aria-controls=\"mainNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span>Menu</span>\n        </button>\n        <vc:store-selector />\n        @if (_signInManager.IsSignedIn(User))\n        {\n            <vc:notifications appearance=\"Dropdown\" return-url=\"@notificationsReturnUrl\" />\n        }\n    </div>\n    <vc:main-nav />\n</header>\n<template id=\"badUrl\">\n\t<div class=\"alert alert-danger alert-dismissible m-3\" role=\"alert\">\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">\n            <vc:icon symbol=\"close\"/>\n        </button>\n        <span>\n            BTCPay is expecting you to access this website from <strong>@(expectedScheme)://@(expectedHost)/</strong>.\n            If you use a reverse proxy, please set the <strong>X-Forwarded-Proto</strong> header to <strong id=\"browserScheme\">@(expectedScheme)</strong>\n            (<a href=\"https://docs.btcpayserver.org/FAQ/Deployment/#cause-3-btcpay-is-expecting-you-to-access-this-website-from\" target=\"_blank\" class=\"alert-link\" rel=\"noreferrer noopener\">More information</a>)\n        </span>\n    </div>\n</template>\n<main id=\"mainContent\">\n    @if (!_env.IsSecure(_context.HttpContext))\n    {\n        <div id=\"insecureEnv\" class=\"alert alert-danger alert-dismissible\" style=\"position:absolute; top:75px;\" role=\"alert\">\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">\n                <vc:icon symbol=\"close\"/>\n            </button>\n            <span>\n                Your access to BTCPay Server is over an unsecured network. If you are using the docker deployment method with NGINX and HTTPS is not available, you probably did not configure your DNS settings correctly. <br/>\n                We disabled the register and login link so you don't leak your credentials.\n            </span>\n        </div>\n    }\n    <section>\n        @RenderBody()\n    </section>\n    \n    <partial name=\"_Footer\"/>\n    <partial name=\"LayoutFoot\"/>\n\n    @await RenderSectionAsync(\"PageFootContent\", false)\n    <partial name=\"LayoutPartials/SyncModal\"/>\n\n    @if (!notificationDisabled)\n    {\n        <script>\n\t\t\tvar mainContent = document.getElementById(\"mainContent\");\n\t\t\tif (window.location.protocol != \"@(expectedScheme):\" || window.location.host != \"@expectedHost\")\n\t\t\t{\n\t\t\t\tvar tmpl = document.getElementById(\"badUrl\");\n\t\t\t\tmainContent.prepend(tmpl.content.cloneNode(true));\n\t\t\t}\n            if ('WebSocket' in window && window.WebSocket.CLOSING === 2) {\n                const { host, protocol } = window.location;\n                var wsUri = \"@_linkGenerator.GetPathByAction(\"SubscribeUpdates\", \"UINotifications\", pathBase: Context.Request.PathBase)\";\n\t\t\t\twsUri = (protocol === \"https:\" ? \"wss:\" : \"ws:\") + \"//\" + host + wsUri;\n                const newDataEndpoint = \"@_linkGenerator.GetPathByAction(\"GetNotificationDropdownUI\", \"UINotifications\", pathBase: Context.Request.PathBase, values: new { returnUrl = notificationsReturnUrl })\";\n                try {\n                    socket = new WebSocket(wsUri);\n                    socket.onmessage = e => {\n                        if (e.data === \"ping\") return;\n                        $.get(newDataEndpoint, data => {\n                            $(\"#Notifications\").replaceWith($(data));\n                        });\n                    };\n                    socket.onerror = e => {\n                        console.error(\"Error while connecting to websocket for notifications (callback)\", e);\n                    };\n                }\n                catch (e) {\n                    console.error(\"Error while connecting to websocket for notifications\", e);\n                }\n            }\n        </script>\n    }\n</main>\n</body>\n</html>\n", "@{\n    Layout = \"_LayoutSimple\";\n    ViewBag.ShowTitle ??= true;\n    ViewBag.ShowLeadText ??= false;\n}\n\n@section PageHeadContent {\n    <style>\n        .account-form {\n            max-width: 35em;\n            margin: 0 auto var(--btcpay-space-xl);\n            padding: 2rem;\n            background: var(--btcpay-bg-tile);\n            border-radius: var(--btcpay-border-radius);\n        }\n        .account-form h4 {\n            margin-bottom: 1.5rem;\n        }\n        .main-logo { height: 4rem; width: 18rem; }\n        .main-logo.main-logo-btcpay { height: 4.5rem; width: 2.5rem; }\n        .main-logo-btcpay .main-logo-btcpay--large { display: none; }\n    </style>\n    @await RenderSectionAsync(\"PageHeadContent\", false)\n}\n\n@section PageFootContent {\n    <partial name=\"_ValidationScriptsPartial\" />\n    @await RenderSectionAsync(\"PageFootContent\", false)\n}\n\n<div class=\"row justify-content-center mb-2\">\n    <div class=\"col text-center\">\n        <a asp-controller=\"UIHome\" asp-action=\"Index\" tabindex=\"-1\" class=\"d-inline-block navbar-brand mx-0 mb-4\">\n            <vc:main-logo />\n        </a>\n\n        <h1 class=\"h2 mb-3\">Welcome to your BTCPay&nbsp;Server</h1>\n        @if (ViewBag.ShowLeadText)\n        {\n            <p class=\"lead\">\n                <span class=\"d-sm-block\">A self-hosted, open-source bitcoin payment processor.</span>\n                <span class=\"d-sm-block\">It is secure, private, censorship-resistant and free.</span>\n            </p>\n        }\n\n        <partial name=\"_StatusMessage\"/>\n    </div>\n</div>\n\n<div class=\"account-form\">\n    @if (ViewBag.ShowTitle)\n    {\n        <h4>@ViewData[\"Title\"]</h4>\n    }\n    @RenderBody()\n</div>\n\n<div class=\"row justify-content-center mt-5\">\n    <div class=\"col\">\n        <partial name=\"_BTCPaySupporters\"/>\n    </div>\n</div>\n\n\n\n", "@using BTCPayServer.Abstractions.Extensions\n@{\n    var parsedModel = TempData.GetStatusMessageModel();\n}\n\n@if (parsedModel != null)\n{\n    <div class=\"alert alert-@parsedModel.SeverityCSS @(parsedModel.AllowDismiss? \"alert-dismissible\":\"\" ) @(ViewData[\"Margin\"] ?? \"mb-4\") text-break\" role=\"alert\">\n        @if (parsedModel.AllowDismiss)\n        {\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">\n                <vc:icon symbol=\"close\" />\n            </button>\n        }\n        @if (!string.IsNullOrEmpty(parsedModel.Message))\n        {\n            <span style=\"white-space: pre-wrap;\">@parsedModel.Message</span>\n        }\n        @if (!string.IsNullOrEmpty(parsedModel.Html))\n        {\n            @Safe.Raw(parsedModel.Html)\n        }\n    </div>\n}\n", "@inject IFileService FileService\n@using BTCPayServer.Abstractions.Contracts\n@using BTCPayServer.Abstractions.Extensions\n@model (string Title, string LogoFileId)\n@{\n    var logoUrl = !string.IsNullOrEmpty(Model.LogoFileId)\n        ? await FileService.GetFileUrl(Context.Request.GetAbsoluteRootUri(), Model.LogoFileId)\n        : null;\n}\n<header class=\"store-header\">\n    @if (!string.IsNullOrEmpty(logoUrl))\n    {\n        <img src=\"@logoUrl\" alt=\"@Model.Title\" class=\"store-logo\"/>\n    }\n    <h1 class=\"store-name\">@Model.Title</h1>\n</header>\n", "@model LoginViewModel\n@inject BTCPayServer.Services.PoliciesSettings PoliciesSettings\n@{\n    ViewData[\"Title\"] = \"Sign in\";\n    Layout = \"_LayoutSignedOut\";\n}\n\n<form asp-route-returnurl=\"@ViewData[\"ReturnUrl\"]\" method=\"post\" id=\"login-form\" asp-action=\"Login\">\n    <fieldset disabled=\"@(ViewData.ContainsKey(\"disabled\") ? \"disabled\" : null)\">\n        <div asp-validation-summary=\"ModelOnly\" class=\"text-danger\"></div>\n        <div class=\"form-group\">\n            <label asp-for=\"Email\" class=\"form-label\"></label>\n            <input asp-for=\"Email\" class=\"form-control\" required tabindex=\"1\" autofocus/>\n            <span asp-validation-for=\"Email\" class=\"text-danger\"></span>\n        </div>\n        <div class=\"form-group\">\n            <div class=\"d-flex justify-content-between\">\n                <label asp-for=\"Password\" class=\"form-label\"></label>\n                <a asp-action=\"ForgotPassword\" tabindex=\"5\">Forgot password?</a>\n            </div>\n            <div class=\"input-group  d-flex\">\n                <input asp-for=\"Password\" class=\"form-control\" required tabindex=\"2\"/>\n            </div>\n            <span asp-validation-for=\"Password\" class=\"text-danger\"></span>\n        </div>\n        <div class=\"form-group mt-4\">\n            <div class=\"btn-group w-100\">\n                <button type=\"submit\" class=\"btn btn-primary btn-lg w-100\" id=\"LoginButton\" tabindex=\"3\"><span class=\"ps-3\">Sign in</span></button>\n                <button type=\"button\" class=\"btn btn-outline-primary btn-lg w-auto only-for-js\" data-bs-toggle=\"modal\" data-bs-target=\"#scanModal\" title=\"Scan Login code with camera\" tabindex=\"4\"><i class=\"fa fa-camera\"></i></button>\n            </div>\n        </div>\n    </fieldset>\n</form>\n<form asp-action=\"LoginWithCode\" asp-route-returnurl=\"@ViewData[\"ReturnUrl\"]\" method=\"post\" id=\"logincode-form\">\n    <input asp-for=\"LoginCode\" type=\"hidden\" class=\"form-control\"/>\n</form>\n@if (!PoliciesSettings.LockSubscription)\n{\n    <p class=\"text-center mt-2 mb-0\">\n        <a id=\"Register\" style=\"font-size:1.15rem\" asp-action=\"Register\" asp-route-returnurl=\"@ViewData[\"ReturnUrl\"]\" tabindex=\"4\">Create your account</a>\n    </p>\n}\n\n@section PageFootContent {\n    <partial name=\"CameraScanner\"/>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/ur-registry/urlib.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode-reader/VueQrcodeReader.umd.min.js\" asp-append-version=\"true\"></script>\n\n    <link href=\"~/vendor/vue-qrcode-reader/vue-qrcode-reader.css\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n\n    <script type=\"text/javascript\">\n        window.addEventListener(\"load\", async () => {\n            initCameraScanningApp(\"Scan login code\", data => {\n                document.getElementById(\"LoginCode\").value = data;\n                document.getElementById(\"logincode-form\").submit();\n            }, \"scanModal\", true);\n        });\n    </script>\n}\n", "@using BTCPayServer.Views.Apps\n@using BTCPayServer.Abstractions.Extensions\n@using BTCPayServer.Abstractions.Custodians\n@model BTCPayServer.Models.CustodianAccountViewModels.ViewCustodianAccountViewModel\n@{\n    ViewData.SetActivePage(AppsNavPages.Create, \"Custodian account: \" + @Model?.CustodianAccount.Name);\n}\n\n@section PageHeadContent\n{\n    <link href=\"~/main/qrcode.css\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n}\n\n@section PageFootContent {\n    <partial name=\"_ValidationScriptsPartial\"/>\n}\n\n<style>\n    .trade-qty label{display: block; }\n</style>\n\n<div id=\"custodianAccountView\" v-cloak>\n<div class=\"sticky-header-setup\"></div>\n<div class=\"sticky-header d-flex flex-wrap gap-3 align-items-center justify-content-between\">\n    <h2 class=\"mb-0\">\n        @ViewData[\"Title\"]\n    </h2>\n    <div class=\"d-flex flex-wrap gap-3\">\n        <a class=\"btn btn-primary\" role=\"button\" v-if=\"account?.depositablePaymentMethods?.length > 0\" v-on:click=\"openDepositModal()\" href=\"#\">\n            <span class=\"fa fa-download\"></span> Deposit\n        </a>\n        <a asp-action=\"EditCustodianAccount\" asp-route-storeId=\"@Model.CustodianAccount.StoreId\" asp-route-accountId=\"@Model.CustodianAccount.Id\" class=\"btn btn-primary\" role=\"button\" id=\"EditCustodianAccountConfig\">\n            <span class=\"fa fa-gear\"></span> Configure\n        </a>\n        <!--\n        <button type=\"submit\" class=\"btn btn-primary order-sm-1\" id=\"SaveSettings\">Save</button>\n        <a class=\"btn btn-secondary\" id=\"ViewApp\" target=\"app_\" href=\"/apps/MQ2sCVsmQ95JBZ4aZDtoSwMAnBY/pos\">View</a>\n        -->\n    </div>\n</div>\n\n<partial name=\"_StatusMessage\"/>\n\n<div class=\"row\">\n    <div class=\"col-xl-12\">\n        <div v-if=\"!account\" class=\"loading d-flex justify-content-center p-3\">\n            <div class=\"spinner-border text-light\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n        </div>\n\n        <div v-if=\"account\">\n            <p class=\"alert alert-danger\" v-if=\"account.assetBalanceExceptionMessage\">\n                {{ account.assetBalanceExceptionMessage }}\n            </p>\n\n            <h2>Balances</h2>\n\n            <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"checkbox\" v-model=\"hideDustAmounts\" id=\"flexCheckDefault\">\n                <label class=\"form-check-label\" for=\"flexCheckDefault\">\n                    Hide holdings worth less than {{ account.dustThresholdInFiat }} {{ account.storeDefaultFiat }}.\n                </label>\n            </div>\n\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-hover table-responsive-md\">\n                    <thead>\n                    <tr>\n                        <th>Asset</th>\n                        <th class=\"text-end\">Balance</th>\n                        <th class=\"text-end\">Unit Price (Bid)</th>\n                        <th class=\"text-end\">Unit Price (Ask)</th>\n                        <th class=\"text-end\">Fiat Value</th>\n                        <th class=\"text-end\">Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr v-for=\"row in sortedAssetRows\" :key=\"row.asset\">\n                        <td>{{ row.asset }}</td>\n                        <!-- TODO format as number? How? -->\n                        <th class=\"text-end\">{{ row.formattedQty }}</th>\n                        <th class=\"text-end\">\n                            {{ row.formattedBid }}\n                        </th>\n                        <th class=\"text-end\">\n                            {{ row.formattedAsk }}\n                        </th>\n                        <th class=\"text-end\">\n                            {{ row.formattedFiatValue }}\n                        </th>\n                        <th class=\"text-end\">\n                            <a v-if=\"row.tradableAssetPairs\" v-on:click=\"openTradeModal(row)\" href=\"#\">Trade</a>\n                            <a v-if=\"canDepositAsset(row.asset)\" v-on:click=\"openDepositModal(row)\" href=\"#\">Deposit</a>\n                            <a v-if=\"row.canWithdraw\" v-on:click=\"openWithdrawModal(row)\" href=\"#\">Withdraw</a>\n                        </th>\n                    </tr>\n                    <tr v-if=\"account.assetBalances.length === 0\">\n                        <td colspan=\"999\" class=\"text-center\">No assets are stored with this custodian (yet).</td>\n                    </tr>\n                    <tr v-if=\"account.assetBalanceExceptionMessage !== null\">\n                        <td colspan=\"999\" class=\"text-center\">An error occured while loading assets and balances.</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n\n\n            <h2>Features</h2>\n            <p>The @Model?.Custodian.Name custodian supports:</p>\n            <ul>\n                <li>Viewing asset account</li>\n                @if (Model?.Custodian is ICanTrade)\n                {\n                    <li>Trading</li>\n                }\n                @if (Model?.Custodian is ICanDeposit)\n                {\n                    <li>Depositing</li>\n                }\n                @if (Model?.Custodian is ICanWithdraw)\n                {\n                    <li>Withdrawing (Greenfield API only, for now)</li>\n                }\n            </ul>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id=\"withdrawModal\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Withdraw</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n                    <vc:icon symbol=\"close\"/>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>Withdrawals are coming soon, but if you need this today, you can use our <a rel=\"noopener noreferrer\" href=\"https://docs.btcpayserver.org/API/Greenfield/v1/\" target=\"_blank\">Greenfield API \"Withdraw to store wallet\" endpoint</a> to execute a withdrawal.</p>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id=\"depositModal\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Deposit</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n                    <vc:icon symbol=\"close\"/>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p v-if=\"deposit.errorMsg\" class=\"alert alert-danger\">{{ deposit.errorMsg }}</p>\n                <div class=\"form-group\">\n                    <label class=\"form-label\" for=\"DepositAsset\">Asset to Deposit</label>\n                    <select class=\"form-select\" v-model=\"deposit.asset\" name=\"DepositAsset\">\n                        <option v-for=\"option in availableAssetsToDeposit\" v-bind:value=\"option\">\n                            {{ option }}\n                        </option>\n                    </select>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-label\" for=\"DepositPaymentNetwork\">Payment Method</label>\n                    <select class=\"form-select\" v-model=\"deposit.paymentMethod\" name=\"DepositPaymentNetwork\">\n                        <option v-for=\"option in availablePaymentMethodsToDeposit\" v-bind:value=\"option\">\n                            {{ option }}\n                        </option>\n                    </select>\n                </div>\n                \n                <div class=\"loading d-flex justify-content-center p-3\" v-if=\"deposit.isLoading\">\n                    <div class=\"spinner-border text-light\" role=\"status\">\n                        <span class=\"visually-hidden\">Loading...</span>\n                    </div>\n                </div>\n                \n                <div v-if=\"!deposit.isLoading && (deposit.link || deposit.address)\">\n                    <div class=\"tab-content text-center\">\n                        <div v-if=\"deposit.link\" class=\"tab-pane\" id=\"link-tab\" role=\"tabpanel\">\n                            <div class=\"qr-container mb-3\">\n                                <img :src=\"deposit.cryptoImageUrl\" class=\"qr-icon\" :alt=\"deposit.asset\"/>\n                                <qrcode v-bind:value=\"deposit.link\" :options=\"{ width: 256, margin: 1, color: {dark:'#000', light:'#f5f5f7'} }\" tag=\"svg\"></qrcode>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"input-group\" :data-clipboard=\"deposit.link\">\n                                    <input type=\"text\" class=\"form-control\" style=\"cursor:copy\" readonly=\"readonly\" :value=\"deposit.link\" id=\"payment-link\"/>\n                                    <button type=\"button\" class=\"btn btn-outline-secondary p-2\" style=\"width:7em;\" data-clipboard-confirm>\n                                        <vc:icon symbol=\"copy\"/>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div v-if=\"deposit.address\" class=\"tab-pane show active\" id=\"address-tab\" role=\"tabpanel\">\n                            <div class=\"qr-container mb-3\">\n                                <img v-bind:src=\"deposit.cryptoImageUrl\" class=\"qr-icon\" :alt=\"deposit.asset\"/>\n                                <qrcode v-bind:value=\"deposit.address\" :options=\"{ width: 256, margin: 1, color: {dark:'#000', light:'#f5f5f7'} }\" tag=\"svg\"></qrcode>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"input-group\" :data-clipboard=\"deposit.address\">\n                                    <input type=\"text\" class=\"form-control\" style=\"cursor:copy\" readonly=\"readonly\" :value=\"deposit.address\" id=\"address\"/>\n                                    <button type=\"button\" class=\"input-group-text btn btn-outline-secondary p-2\" style=\"width:7em;\" data-clipboard-confirm>\n                                        <vc:icon symbol=\"copy\"/>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"nav justify-content-center\">\n                        <a v-if=\"deposit.address\" :class=\"{active: deposit.tab === 'address' }\" class=\"btcpay-pill\" data-bs-toggle=\"tab\" href=\"#address-tab\">Address</a>\n                        <a v-if=\"deposit.link\" :class=\"{active: deposit.tab === 'link' }\" class=\"btcpay-pill\" data-bs-toggle=\"tab\" href=\"#link-tab\">Link</a>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                <a v-if=\"deposit.createTransactionUrl\" class=\"btn btn-primary\" :href=\"deposit.createTransactionUrl\">\n                    Create Transaction\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id=\"tradeModal\" :data-bs-keyboard=\"!trade.isExecuting\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" v-on:submit=\"onTradeSubmit\" method=\"post\" asp-action=\"Trade\" asp-route-accountId=\"@Model?.CustodianAccount?.Id\" asp-route-storeId=\"@Model?.CustodianAccount?.StoreId\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Trade {{ trade.qty }} {{ trade.assetToTrade }} into {{ trade.assetToTradeInto }}</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" v-if=\"!trade.isExecuting\">\n                    <vc:icon symbol=\"close\"/>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"loading d-flex justify-content-center p-3\" v-if=\"trade.isExecuting\">\n                    <div class=\"spinner-border text-light\" role=\"status\">\n                        <span class=\"visually-hidden\">Loading...</span>\n                    </div>\n                </div>\n\n                <div v-if=\"!trade.isExecuting && trade.results === null\">\n                    <p v-if=\"trade.errorMsg\" class=\"alert alert-danger\">{{ trade.errorMsg }}</p>\n\n                    <div class=\"row mb-2 trade-qty\">\n                        <div class=\"col-side\">\n                            <label class=\"form-label\">\n                                Convert\n                                <div class=\"input-group has-validation\">\n                                    <!--\n                                    getMinQtyToTrade() = {{ getMinQtyToTrade(this.trade.assetToTradeInto, this.trade.assetToTrade) }}\n                                    <br/>\n                                    Max Qty to Trade = {{ trade.maxQtyToTrade }}\n                                    -->\n                                    <input name=\"Qty\" type=\"number\" min=\"0\" step=\"any\" :max=\"trade.maxQtyToTrade\" :min=\"getMinQtyToTrade()\" class=\"form-control qty\" v-bind:class=\"{ 'is-invalid': trade.qty < getMinQtyToTrade() || trade.qty > trade.maxQtyToTrade }\" v-model=\"trade.qty\"/>\n                                    <select name=\"FromAsset\" v-model=\"trade.assetToTrade\" class=\"form-select\">\n                                        <option v-for=\"option in availableAssetsToTrade\" v-bind:value=\"option\">\n                                            {{ option }}\n                                        </option>\n                                    </select>\n                                </div>\n                            </label>\n                        </div>\n                        <div class=\"col-center text-center\">\n                            &nbsp;\n                            <br/>\n                            <button v-if=\"canSwapTradeAssets()\" type=\"button\" class=\"btn btn-secondary btn-square\" v-on:click=\"swapTradeAssets()\" aria-label=\"Swap assets\">\n                                <i class=\"fa fa-arrows-h\" aria-hidden=\"true\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-side\">\n                            <label class=\"form-label\">\n                                Into\n                                <div class=\"input-group\">\n                                    <input disabled=\"disabled\" type=\"number\" class=\"form-control qty\" v-model=\"tradeQtyToReceive\"/>\n                                    <select name=\"ToAsset\" v-model=\"trade.assetToTradeInto\" class=\"form-select\">\n                                        <option v-for=\"option in availableAssetsToTradeInto\" v-bind:value=\"option\">\n                                            {{ option }}\n                                        </option>\n                                    </select>\n                                </div>\n                            </label>\n                        </div>\n                    </div>\n                    <div>\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"Set qty to a percentage of holdings\">\n                            <button v-on:click=\"setTradeQtyPercent(10)\" class=\"btn btn-secondary\" type=\"button\">10%</button>\n                            <button v-on:click=\"setTradeQtyPercent(25)\" class=\"btn btn-secondary\" type=\"button\">25%</button>\n                            <button v-on:click=\"setTradeQtyPercent(50)\" class=\"btn btn-secondary\" type=\"button\">50%</button>\n                            <button v-on:click=\"setTradeQtyPercent(75)\" class=\"btn btn-secondary\" type=\"button\">75%</button>\n                            <button v-on:click=\"setTradeQtyPercent(90)\" class=\"btn btn-secondary\" type=\"button\">90%</button>\n                            <button v-on:click=\"setTradeQtyPercent(100)\" class=\"btn btn-secondary\" type=\"button\">100%</button>\n                        </div>\n                    </div>\n\n                    <p v-if=\"trade.price\">\n                        <br/>\n                        1 {{ trade.assetToTradeInto }} = {{ trade.price }} {{ trade.assetToTrade }}\n                        <br/>\n                        1 {{ trade.assetToTrade }} = {{ 1 / trade.price }} {{ trade.assetToTradeInto }}\n                    </p>\n                    <p v-if=\"canExecuteTrade\">\n                        After the trade\n                        {{ trade.maxQtyToTrade - trade.qty }} {{ trade.assetToTrade }} will remain in your account.\n                    </p>\n\n                    <!--\n                    <p>\n                        trade.priceForPair = {{ trade.priceForPair }}\n                    </p>\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>From</th>\n                            <th>To</th>\n                            <th>Min Qty to Trade</th>\n                            <th>Price</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>EUR</td>\n                            <td>BTC</td>\n                            <td>{{getMinQtyToTrade('EUR', 'BTC')}}</td>\n                            <td>{{trade.priceForPair['EUR/BTC']}}</td>\n                        </tr>\n                        <tr>\n                            <td>BTC</td>\n                            <td>EUR</td>\n                            <td>{{getMinQtyToTrade('BTC', 'EUR')}}</td>\n                            <td>{{trade.priceForPair['BTC/EUR']}}</td>\n                        </tr>\n                        <tr>\n                            <td>EUR</td>\n                            <td>LTC</td>\n                            <td>{{getMinQtyToTrade('EUR', 'LTC')}}</td>\n                            <td>{{trade.priceForPair['EUR/LTC']}}</td>\n                        </tr>\n                        <tr>\n                            <td>LTC</td>\n                            <td>EUR</td>\n                            <td>{{getMinQtyToTrade('LTC', 'EUR')}}</td>\n                            <td>{{trade.priceForPair['LTC/EUR']}}</td>\n                        </tr>\n                        <tr>\n                            <td>BTC</td>\n                            <td>LTC</td>\n                            <td>{{getMinQtyToTrade('BTC', 'LTC')}}</td>\n                            <td>{{trade.priceForPair['BTC/LTC']}}</td>\n                        </tr>\n                        <tr>\n                            <td>LTC</td>\n                            <td>BTC</td>\n                            <td>{{getMinQtyToTrade('LTC', 'BTC')}}</td>\n                            <td>{{trade.priceForPair['LTC/BTC']}}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    -->\n                    <div class=\"form-text\">Final results may vary due to trading fees and slippage.</div>\n                </div>\n                <div v-if=\"trade.results !== null\">\n                    <p class=\"alert alert-success\">Successfully traded {{ trade.results.fromAsset}} into {{ trade.results.toAsset}}.</p>\n                    <table class=\"table table-striped\">\n                        <thead>\n                        <tr>\n                            <th colspan=\"2\">Asset</th>\n                            <th>Comment</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr v-for=\"entry in trade.results.ledgerEntries\">\n                            <td class=\"text-end\" v-bind:class=\"{ 'text-success': entry.qty > 0, 'text-danger': entry.qty < 0 }\"><span v-if=\"entry.qty > 0\">+</span>{{ entry.qty }}</td>\n                            <td v-bind:class=\"{ 'text-success': entry.qty > 0, 'text-danger': entry.qty < 0 }\">{{ entry.asset }}</td>\n                            <td v-bind:class=\"{ 'text-success': entry.qty > 0, 'text-danger': entry.qty < 0 }\">\n                                <span v-if=\"entry.type !== 'Trade'\">{{ entry.type}}</span>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <p>Trade ID: {{ trade.results.tradeId }}</p>\n                </div>\n            </div>\n            <div class=\"modal-footer\" v-if=\"!trade.isExecuting\">\n\n                <div class=\"modal-footer-left\">\n                    <span v-if=\"trade.isUpdating\">\n                        Updating quote...\n                    </span>\n                </div>\n\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n                    <span v-if=\"trade.results\">Close</span>\n                    <span v-if=\"!trade.results\">Cancel</span>\n                </button>\n                <button v-if=\"canExecuteTrade\" type=\"submit\" class=\"btn btn-primary\">Execute</button>\n            </div>\n        </form>\n    </div>\n</div>\n</div>\n\n<script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n<script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n<script type=\"text/javascript\">\nvar ajaxBalanceUrl = \"@Url.Action(\"ViewCustodianAccountJson\", \"UICustodianAccounts\", new { storeId = Model?.CustodianAccount.StoreId, accountId = Model?.CustodianAccount.Id })\";\nvar ajaxTradePrepareUrl = \"@Url.Action(\"GetTradePrepareJson\", \"UICustodianAccounts\", new { storeId = Model?.CustodianAccount.StoreId, accountId = Model?.CustodianAccount.Id })\";\nvar ajaxDepositUrl = \"@Url.Action(\"GetDepositPrepareJson\", \"UICustodianAccounts\", new { storeId = Model?.CustodianAccount.StoreId, accountId = Model?.CustodianAccount.Id })\";\n</script>\n<script src=\"~/js/custodian-account.js\" asp-append-version=\"true\"></script>\n", "@inject BTCPayServer.Services.LanguageService langService\n@inject BTCPayServer.Services.BTCPayServerEnvironment env\n@inject PaymentMethodHandlerDictionary PaymentMethodHandlerDictionary\n@model PaymentModel\n@{\n    Layout = null;\n}\n\n<!DOCTYPE html>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n    <META NAME=\"robots\" CONTENT=\"noindex,nofollow\">\n    <title>@Model.HtmlTitle</title>\n    <link href=\"~/vendor/font-awesome/css/font-awesome.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/vendor/vex/css/vex.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/main/fonts/Roboto.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/main/fonts/RobotoMono.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/checkout/css/default.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/checkout/css/vex-extrastyles.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/checkout/css/vex-theme-btcpay.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/vendor/jquery-prettydropdowns/prettydropdowns.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n\n    <script>\n        var initialSrvModel = @Safe.Json(Model);\n    </script>\n    <script src=\"~/vendor/jquery/jquery.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/bootstrap/bootstrap.bundle.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/clipboard.js/clipboard.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/i18next/i18next.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/i18next/i18nextHttpBackend.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/i18next/vue-i18next.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/jquery-prettydropdowns/jquery.prettydropdowns.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vex/js/vex.combined.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/main/utils.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/checkout/js/checkout.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/checkout/js/querystring.js\" asp-append-version=\"true\"></script>\n\n    <script>vex.defaultOptions.className = 'vex-theme-btcpay'</script>\n\n    @if (!string.IsNullOrEmpty(Model.CustomCSSLink))\n    {\n        <link href=\"@Model.CustomCSSLink\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n    }\n\n    @if (Model.IsModal)\n    {\n        <style type=\"text/css\">\n            body {\n                background: rgba(25, 25, 25, 0.9);\n            }\n\n            .close-icon {\n                display: flex;\n            }\n        </style>\n    }\n</head>\n<body>\n    <noscript>\n        <div style=\"padding:2em;text-align:center;\">\n            <h2>Javascript is currently disabled in your browser.</h2>\n            <h5>Please enable Javascript and refresh this page for the best experience.</h5>\n\n            <p>Alternatively, click below to continue to our HTML-only invoice.</p>\n\n            <a asp-action=\"CheckoutNoScript\" asp-route-invoiceId=\"@Model.InvoiceId\" style=\"text-decoration:underline;color:blue\">\n                Continue to javascript-disabled invoice &gt;\n            </a>\n        </div>\n    </noscript>\n\n    <!--[if lte IE 8]>\n    <div style=\"padding:2em;text-align:center;\">\n      <form asp-action=\"CheckoutNoScript\" method=\"GET\">\n        <button style=\"text-decoration: underline; color: blue\">Continue to legacy browser compatible invoice page\n        </button>\n      </form>\n    </div>\n    <![endif]-->\n\n    <invoice>\n        <div class=\"no-bounce\" id=\"checkoutCtrl\" v-cloak>\n            <div class=\"modal page\" style=\"min-height:100vh\">\n                <div class=\"modal-dialog open opened\" role=\"document\" v-bind:class=\"{ 'expired': invoiceUnpayable, 'paid': invoicePaid, 'enter-purchaser-email': showEmailForm}\">\n                    <div class=\"modal-content long\">\n                        <div class=\"content\">\n                            <div class=\"invoice\">\n                                <partial name=\"Checkout-Body\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style=\"margin-top: 10px; text-align: center;\">\n                        @* Not working because of nsSeparator: false, keySeparator: false,\n                            {{$t(\"nested.lang\")}} >>\n                        *@\n\n                        <select asp-for=\"DefaultLang\"\n                                class=\"cmblang reverse invisible\"\n                                asp-items=\"@langService.GetLanguageSelectListItems()\"></select>\n\n                        <script>\n                            $(function () {\n                                // REVIEW: don't use initDropdown method but rather directly initialize select whenever you are using it\n                                $(\"#DefaultLang\").val(startingLanguage);\n                                var languageSelectorPrettyDropdown = initDropdown(\"#DefaultLang\");\n\n                                languageSelectorPrettyDropdown.change(function () {\n                                    changeLanguage(languageSelectorPrettyDropdown.val());\n                                });\n\n                                languageSelectorPrettyDropdown.keypress(function (event) {\n                                    if (event.keyCode == 13) {\n                                        languageSelectorPrettyDropdown.click();\n                                    }\n                                });\n                            });\n\n                            function initDropdown(selector) {\n                                return $(selector).prettyDropdown({\n                                    classic: true,\n                                    height: 32,\n                                    reverse: true,\n                                    hoverIntent: -1\n                                });\n                            }\n                        </script>\n                    </div>\n                    <div class=\"powered__by__btcpayserver\">\n                        Powered by <a target=\"_blank\" href=\"https://github.com/btcpayserver/btcpayserver\" rel=\"noreferrer noopener\">BTCPay Server</a>\n                    </div>\n                    @if (env.CheatMode)\n                    {\n                        <partial name=\"Checkout-Testing\" />\n                    }\n                </div>\n            </div>\n        </div>\n    </invoice>\n    <script>\n    var availableLanguages = @Safe.Json(langService.GetLanguages().Select((language) => language.Code));\n    var defaultLang = @Safe.Json(Model.DefaultLang);\n    var fallbackLanguage = \"en\";\n    startingLanguage = computeStartingLanguage();\n    i18next\n        .use(window.i18nextHttpBackend)\n        .init({\n            backend: {\n                loadPath: @Safe.Json($\"{Model.RootPath}misc/translations/checkout-v1/{{{{lng}}}}?v={env.Version}\")\n            },\n            lng: startingLanguage,\n            fallbackLng: fallbackLanguage,\n            nsSeparator: false,\n            keySeparator: false\n        });\n\n    function computeStartingLanguage() {\n        if (urlParams.lang && isLanguageAvailable(urlParams.lang)) {\n            return urlParams.lang;\n        }\n        else if (isLanguageAvailable(defaultLang)) {\n            return defaultLang;\n        } else {\n            return fallbackLanguage;\n        }\n    }\n\n    function changeLanguage(lang) {\n        if (isLanguageAvailable(lang)) {\n            i18next.changeLanguage(lang);\n        }\n    }\n\n    function isLanguageAvailable(languageCode) {\n        return availableLanguages.indexOf(languageCode) >= 0;\n    }\n\n    var i18n = new VueI18next(i18next);\n    Vue.config.ignoredElements = [\n        'line-items',\n        'low-fee-timeline',\n        // Ignoring custom HTML5 elements, eg: bp-spinner\n        /^bp-/\n    ];\n    var eventBus = new Vue();\n    var checkoutCtrl = new Vue({\n        i18n: i18n,\n        el: '#checkoutCtrl',\n        data: {\n            srvModel: initialSrvModel,\n            end: new Date(),\n            expirationPercentage: 0,\n            timerText: \"@Model.TimeLeft\",\n            emailAddressInput: \"\",\n            emailAddressInputDirty: false,\n            emailAddressInputInvalid: false,\n            emailAddressFormSubmitting: false,\n            lineItemsExpanded: false,\n            changingCurrencies: false,\n            loading: true,\n            isModal: initialSrvModel.isModal\n        },\n        computed: {\n            expiringSoon: function(){\n                return this.expirationPercentage >= 75 && !this.invoiceUnpayable && !this.invoicePaid;\n            },\n            showPaymentUI: function(){\n                return !this.showEmailForm && !this.invoiceUnpayable && !this.invoicePaid;\n            },\n            showEmailForm: function(){\n                return this.srvModel.requiresRefundEmail && (!this.srvModel.customerEmail || !this.validateEmail(this.srvModel.customerEmail)) && !this.invoiceUnpayable;\n            },\n            showRecommendedFee: function(){\n                return  this.srvModel.showRecommendedFee && this.srvModel.feeRate != 0;\n            },\n            invoiceUnpayable: function(){\n                return  [\"expired\", \"invalid\"].indexOf(this.srvModel.status) >= 0;\n            },\n            invoicePaid: function(){\n                return  [\"complete\", \"confirmed\", \"paid\"].indexOf(this.srvModel.status) >= 0;\n            },\n            storeLink () {\n                return this.srvModel.merchantRefLink && this.srvModel.merchantRefLink !== this.srvModel.receiptLink\n                    ? this.srvModel.merchantRefLink\n                    : null;\n            }\n        },\n        mounted: function(){\n            this.startProgressTimer();\n            this.listenIn();\n            this.onDataCallback(this.srvModel);\n            if (this.srvModel.status === \"new\" && this.srvModel.txCount > 1) {\n                this.onlyExpandLineItems();\n            }\n            window.parent.postMessage(\"loaded\", \"*\");\n            jQuery(\"invoice\").fadeOut(0).fadeIn(300);\n            window.closePaymentMethodDialog = this.closePaymentMethodDialog.bind(this);\n            this.loading = false;\n        },\n        methods: {\n            onlyExpandLineItems: function() {\n                if (!this.lineItemsExpanded) {\n                    this.toggleLineItems();\n                }},\n            toggleLineItems: function() {\n                this.lineItemsExpanded ? $(\"line-items\").slideUp() : $(\"line-items\").slideDown();\n                this.lineItemsExpanded = !this.lineItemsExpanded;\n            },\n            openPaymentMethodDialog: function() {\n                var content = $(\"#vexPopupDialog\").html();\n                vex.open({\n                    unsafeContent: content\n                });\n            },\n            closePaymentMethodDialog: function(currencyId) {\n                vex.closeAll();\n                this.changeCurrency(currencyId);\n            },\n            changeCurrency: function (currency) {\n                if (currency !== null && this.srvModel.paymentMethodId !== currency) {\n                    this.changingCurrencies = true;\n                    this.srvModel.paymentMethodId = currency;\n                    this.fetchData();\n                    this.closePaymentMethodDialog(null);\n                }\n            },\n            close: function(){\n                $(\"invoice\").fadeOut(300, function () {\n                    window.parent.postMessage(\"close\", \"*\");\n                });\n            },\n            validateEmail: function (email) {\n                var re = /^(([^<>()\\[\\]\\\\.,;:\\s@@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@@\"]+)*)|(\".+\"))@@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                return re.test(email);\n            },\n            startProgressTimer: function(){\n                var timeLeftS = this.endDate? (this.endDate.getTime() - new Date().getTime())/1000 : this.srvModel.expirationSeconds;\n                this.expirationPercentage = 100 - ((timeLeftS / this.srvModel.maxTimeSeconds) * 100);\n                this.timerText = this.updateTimerText(timeLeftS);\n                if( this.expirationPercentage < 100 &&  (this.srvModel.status === \"paidPartial\" || this.srvModel.status === \"new\")){\n                    setTimeout(this.startProgressTimer, 500);\n                }\n            },\n            updateTimerText: function (timer) {\n                if (timer >= 0) {\n                    var minutes = parseInt(timer / 60, 10);\n                    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n                    var seconds = parseInt(timer % 60, 10);\n                    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n                    return minutes + \":\" + seconds;\n                } else {\n                    return \"00:00\";\n                }\n            },\n            listenIn: function(){\n                var self = this;\n                var socket = null;\n                var supportsWebSockets = 'WebSocket' in window && window.WebSocket.CLOSING === 2;\n                if (supportsWebSockets) {\n                    var loc = window.location, ws_uri;\n                    if (loc.protocol === \"https:\") {\n                        ws_uri = \"wss:\";\n                    } else {\n                        ws_uri = \"ws:\";\n                    }\n                    ws_uri += \"//\" + loc.host;\n                    ws_uri += loc.pathname + \"/status/ws?invoiceId=\" + this.srvModel.invoiceId;\n\n                    try {\n                        socket = new WebSocket(ws_uri);\n                        socket.onmessage = function (e) {\n                            if (e.data === \"ping\")\n                                return;\n                            self.fetchData();\n                        };\n                        socket.onerror = function (e) {\n                            console.error(\"Error while connecting to websocket for invoice notifications (callback)\");\n                        };\n                    }\n                    catch (e) {\n                        console.error(\"Error while connecting to websocket for invoice notifications\");\n                    }\n                }\n                var self = this;\n                function watcher(){\n                    setTimeout(function(){\n                        if (socket === null || socket.readyState !== 1) {\n                            self.fetchData();\n                        }\n                        watcher();\n                    }, 2000);\n                }\n                watcher();\n            },\n            fetchData: function(){\n                var self = this;\n                $.ajax({\n                    url: window.location.pathname + \"/status?invoiceId=\" + this.srvModel.invoiceId + \"&paymentMethodId=\" + this.srvModel.paymentMethodId,\n                    type: \"GET\",\n                    cache: false\n                })\n                .done(function (data) {\n                    self.onDataCallback.bind(self)(data);\n                })\n            },\n            onDataCallback : function(jsonData){\n                if (this.srvModel.status !== jsonData.status) {\n                    window.parent.postMessage({ \"invoiceId\": this.srvModel.invoiceId, \"status\": jsonData.status }, \"*\");\n                }\n                if (jsonData.paymentMethodId === this.srvModel.paymentMethodId) {\n                    this.changingCurrencies = false;\n                }\n                // displaying satoshis for lightning payments\n                jsonData.cryptoCodeSrv = jsonData.cryptoCode;\n                // expand line items to show details on amount due for multi-transaction payment\n                if (this.srvModel.txCount === 1 && jsonData.txCount > 1) {\n                    this.onlyExpandLineItems();\n                }\n                var newEnd = new Date();\n                newEnd.setSeconds(newEnd.getSeconds()+ jsonData.expirationSeconds);\n                this.endDate = newEnd;\n                // updating ui\n                this.srvModel = jsonData;\n\n                eventBus.$emit(\"data-fetched\", this.srvModel);\n                if (this.invoicePaid && jsonData.redirectAutomatically && jsonData.merchantRefLink) {\n                    this.loading = true;\n                    setTimeout(function () {\n                        if (this.isModal && window.top.location == jsonData.merchantRefLink){\n                            this.close();\n                        } else {\n                            window.top.location = jsonData.merchantRefLink;\n                        }\n                    }.bind(this), 2000);\n                }\n            },\n            onEmailChange: function(){\n                this.emailAddressInputDirty = true;\n                this.emailAddressInputInvalid = false;\n            },\n            onEmailSubmit : function(){\n                var self = this;\n                if (this.validateEmail(this.emailAddressInput)) {\n                    this.emailAddressFormSubmitting = true;\n                    // Push the email to a server, once the reception is confirmed move on\n                    $.ajax({\n                        url: window.location.pathname + \"/UpdateCustomer?invoiceId=\" +this.srvModel.invoiceId,\n                        type: \"POST\",\n                        data: JSON.stringify({ Email: this.emailAddressInput }),\n                        contentType: \"application/json; charset=utf-8\"\n                    })\n                    .done(function () {\n                        self.srvModel.customerEmail = self.emailAddressInput;\n                    }).always(function () {\n                        self.emailAddressFormSubmitting = false;\n                    });\n                } else {\n                    this.emailAddressInputInvalid = true;\n                }\n            }\n        }\n    });\n    </script>\n\n    @foreach (var paymentMethodHandler in PaymentMethodHandlerDictionary.Select(handler => handler.GetCheckoutUISettings()).Where(settings => settings != null))\n    {\n        <partial name=\"@paymentMethodHandler.ExtensionPartial\" model=\"@Model\" />\n    }\n    @await Component.InvokeAsync(\"UiExtensionPoint\", new { location = \"checkout-end\", model = Model })\n</body>\n</html>\n", "@using BTCPayServer.Services\n@using BTCPayServer.Abstractions.Contracts\n@using Microsoft.AspNetCore.Mvc.TagHelpers\n@inject LanguageService LangService\n@inject BTCPayServerEnvironment Env\n@inject IEnumerable<IUIExtension> UiExtensions \n@inject PaymentMethodHandlerDictionary PaymentMethodHandlerDictionary\n@model PaymentModel\n@{\n    Layout = null;\n    ViewData[\"Title\"] = Model.HtmlTitle;\n\n    var hasPaymentPlugins = UiExtensions.Any(extension => extension.Location == \"checkout-payment-method\");\n    // Show LNURL as selectable payment method only for top up invoices + non-BIP21 case\n    var displayedPaymentMethods = Model.IsUnsetTopUp && !Model.OnChainWithLnInvoiceFallback\n        ? Model.AvailableCryptos\n        : Model.AvailableCryptos.Where(c => c.PaymentMethodId != \"BTC_LNURLPAY\").ToList();\n}\n@functions {\n    private string PaymentMethodName(PaymentModel.AvailableCrypto pm)\n    {\n        return Model.AltcoinsBuild\n            ? pm.PaymentMethodName\n            : pm.PaymentMethodName.Replace(\"Bitcoin (\", \"\").Replace(\")\", \"\").Replace(\"Lightning \", \"\");\n    }\n\n    private string ToJsValue(object value)\n    {\n        return Safe.Json(value).ToString()?.Replace(\"\\\"\", \"'\");\n    }\n}\n<!DOCTYPE html>\n<html lang=\"@Model.DefaultLang\" class=\"@(Model.IsModal ? \"checkout-modal\" : \"\")\"@(Env.IsDeveloping ? \" data-devenv\" : \"\")>\n<head>\n    <partial name=\"LayoutHead\"/>\n    <meta name=\"robots\" content=\"noindex,nofollow\">\n    <link href=\"~/checkout-v2/checkout.css\" asp-append-version=\"true\" rel=\"stylesheet\" />\n    <partial name=\"LayoutHeadStoreBranding\" model=\"@(Model.BrandColor, Model.CssFileId, \"\", \"\")\" />\n</head>\n<body class=\"min-vh-100\">\n    <div id=\"Checkout-v2\" class=\"public-page-wrap\" v-cloak>\n        <partial name=\"_StoreHeader\" model=\"(Model.StoreName, Model.LogoFileId)\" />\n        <main class=\"shadow-lg\">\n            <nav v-if=\"isModal\">\n                <button type=\"button\" v-if=\"isModal\" id=\"close\" v-on:click=\"close\">\n                    <vc:icon symbol=\"close\"/>\n                </button>\n            </nav>\n            <section id=\"payment\" v-if=\"isActive\">\n                @if (!string.IsNullOrEmpty(Model.ItemDesc) && Model.ItemDesc != Model.StoreName)\n                {\n                    <h5 class=\"text-center mt-1 mb-3 fw-semibold\" v-if=\"srvModel.itemDesc\" v-text=\"srvModel.itemDesc\">@Model.ItemDesc</h5>\n                }\n                @if (Model.IsUnsetTopUp)\n                {\n                    <h2 id=\"AmountDue\" class=\"mt-1 text-center\" v-t=\"'any_amount'\"></h2>\n                }\n                else\n                {\n                    <h2 id=\"AmountDue\" class=\"mt-1 text-center\" v-text=\"`${srvModel.btcDue} ${srvModel.cryptoCode}`\" :data-clipboard=\"srvModel.btcDue\" :data-clipboard-confirm=\"$t('copy_confirm')\" :data-amount-due=\"srvModel.btcDue\">@Model.BtcDue @Model.CryptoCode</h2>\n                }\n                <div id=\"PaymentInfo\" class=\"info mt-3 mb-2\" v-collapsible=\"showInfo\">\n                    <div>\n                        <div class=\"timer\" v-if=\"showTimer\">\n                            <span class=\"spinner-border spinner-border-sm\" role=\"status\"><span class=\"visually-hidden\"></span></span>\n                            <span v-t=\"'expiry_info'\"></span> <span class=\"expiryTime\">{{timeText}}</span>\n                        </div>\n                        <div class=\"payment-due\" v-if=\"showPaymentDueInfo\">\n                            <vc:icon symbol=\"info\"/>\n                            <span v-t=\"'partial_payment_info'\"></span>\n                        </div>\n                        <div v-if=\"showPaymentDueInfo\" v-html=\"replaceNewlines($t('still_due', { amount: `${srvModel.btcDue} ${srvModel.cryptoCode}` }))\"></div>\n                    </div>\n                </div>\n                <button id=\"DetailsToggle\" class=\"d-flex align-items-center gap-1 btn btn-link payment-details-button mb-2\" type=\"button\" :aria-expanded=\"displayPaymentDetails ? 'true' : 'false'\" v-on:click=\"displayPaymentDetails = !displayPaymentDetails\">\n                    <span class=\"fw-semibold\" v-t=\"'view_details'\"></span>\n                    <vc:icon symbol=\"caret-down\"/>\n                </button>\n                <div id=\"PaymentDetails\" class=\"payment-details\" v-collapsible=\"displayPaymentDetails\">\n                    <payment-details :srv-model=\"srvModel\" :is-active=\"isActive\" class=\"pb-4\"></payment-details>\n                </div>\n                @if (displayedPaymentMethods.Count > 1 || hasPaymentPlugins)\n                {\n                    <div class=\"mt-3 mb-2\">\n                        <h6 class=\"text-center mb-3\" v-t=\"'pay_with'\"></h6>\n                        <div class=\"btcpay-pills d-flex flex-wrap align-items-center justify-content-center gap-2 pb-2\">\n                            @foreach (var crypto in displayedPaymentMethods)\n                            {\n                                <a asp-action=\"Checkout\" asp-route-invoiceId=\"@Model.InvoiceId\" asp-route-paymentMethodId=\"@crypto.PaymentMethodId\"\n                                   class=\"btcpay-pill m-0 payment-method\"\n                                   :class=\"{ active: pmId === @ToJsValue(crypto.PaymentMethodId) }\"\n                                   v-on:click.prevent=\"changePaymentMethod(@ToJsValue(crypto.PaymentMethodId))\">\n                                    @PaymentMethodName(crypto)\n                                </a>\n                            }\n                            @await Component.InvokeAsync(\"UiExtensionPoint\", new { location = \"checkout-payment-method\", model = Model })\n                        </div>\n                    </div>\n                }\n                <component v-if=\"paymentMethodComponent\" :is=\"paymentMethodComponent\" :model=\"srvModel\" />\n            </section>\n            <section id=\"result\" v-else>\n                <div id=\"paid\" v-if=\"isPaid\">\n                    <div class=\"top\">\n                        <span class=\"icn\">\n                            <vc:icon symbol=\"payment-complete\"/>\n                        </span>\n                        <h4 v-t=\"'invoice_paid'\"></h4>\n                        <dl class=\"mb-0\">\n                            <div>\n                                <dt v-t=\"'invoice_id'\"></dt>\n                                <dd v-text=\"srvModel.invoiceId\"></dd>\n                            </div>\n                            <div v-if=\"srvModel.orderId\">\n                                <dt v-t=\"'order_id'\"></dt>\n                                <dd v-text=\"srvModel.orderId\"></dd>\n                            </div>\n                        </dl>\n                        <payment-details :srv-model=\"srvModel\" :is-active=\"isActive\" class=\"mb-5\"></payment-details>\n                    </div>\n                    <div class=\"buttons\">\n                        <a v-if=\"srvModel.receiptLink\" class=\"btn btn-primary rounded-pill w-100\" :href=\"srvModel.receiptLink\" :target=\"isModal ? '_top' : null\" v-t=\"'view_receipt'\" id=\"ReceiptLink\"></a>\n                        <a v-if=\"storeLink\" class=\"btn btn-secondary rounded-pill w-100\" :href=\"storeLink\" :target=\"isModal ? '_top' : null\"  v-html=\"$t('return_to_store', { storeName: srvModel.storeName })\" id=\"StoreLink\"></a>\n                        <button v-else-if=\"isModal\" class=\"btn btn-secondary rounded-pill w-100\" v-on:click=\"close\" v-t=\"'Close'\"></button>\n                    </div>\n                </div>\n                <div id=\"expired\" v-if=\"isUnpayable\">\n                    <div class=\"top\">\n                        <span class=\"icn\">\n                            <vc:icon symbol=\"invoice-expired\"/>\n                        </span>\n                        <h4 v-t=\"'invoice_expired'\"></h4>\n                        <dl class=\"mb-0\">\n                            <div>\n                                <dt v-t=\"'invoice_id'\"></dt>\n                                <dd v-text=\"srvModel.invoiceId\"></dd>\n                            </div>\n                            <div v-if=\"srvModel.orderId\">\n                                <dt v-t=\"'order_id'\"></dt>\n                                <dd v-text=\"srvModel.orderId\"></dd>\n                            </div>\n                        </dl>\n                        <div id=\"PaymentDetails\" class=\"payment-details\" v-collapsible=\"displayPaymentDetails\">\n                            <payment-details :srv-model=\"srvModel\" :is-active=\"isActive\"></payment-details>\n                        </div>\n                        <button class=\"d-flex align-items-center gap-1 btn btn-link payment-details-button\" type=\"button\" :aria-expanded=\"displayPaymentDetails ? 'true' : 'false'\" v-on:click=\"displayPaymentDetails = !displayPaymentDetails\">\n                            <span class=\"fw-semibold\" v-t=\"'view_details'\"></span>\n                            <vc:icon symbol=\"caret-down\"/>\n                        </button>\n                        <p class=\"text-center mt-3\" v-html=\"replaceNewlines($t('invoice_expired_body', { storeName: srvModel.storeName, minutes: @Model.MaxTimeMinutes }))\"></p>\n                    </div>\n                    <div class=\"buttons\">\n                        <a v-if=\"storeLink\" class=\"btn btn-primary rounded-pill w-100\" :href=\"storeLink\" :target=\"isModal ? '_top' : null\" v-html=\"$t('return_to_store', { storeName: srvModel.storeName })\" id=\"StoreLink\"></a>\n                        <button v-else-if=\"isModal\" class=\"btn btn-primary rounded-pill w-100\" v-on:click=\"close\" v-t=\"'Close'\"></button>\n                    </div>\n                </div>\n            </section>\n        </main>\n        @if (Env.CheatMode)\n        {\n            <checkout-cheating invoice-id=\"@Model.InvoiceId\" :btc-due=\"srvModel.btcDue\" :is-paid=\"isPaid\" :payment-method-id=\"pmId\"></checkout-cheating>\n        }\n        <footer class=\"store-footer\">\n            <a class=\"store-powered-by\" href=\"https://btcpayserver.org\" target=\"_blank\" rel=\"noreferrer noopener\">\n                {{$t(\"powered_by\")}} <partial name=\"_StoreFooterLogo\" />\n            </a>\n            <select asp-for=\"DefaultLang\" asp-items=\"@LangService.GetLanguageSelectListItems()\" class=\"form-select\" v-on:change=\"changeLanguage\"></select>\n        </footer>\n    </div>\n    <noscript>\n        <div class=\"p-5 text-center\">\n            <h2>Javascript is currently disabled in your browser.</h2>\n            <h5>Please enable Javascript and refresh this page for the best experience.</h5>\n            <p>\n                Alternatively, click below to continue to our\n                <a asp-action=\"CheckoutNoScript\" asp-route-invoiceId=\"@Model.InvoiceId\">HTML-only invoice</a>.\n            </p>\n        </div>\n    </noscript>\n    <script type=\"text/x-template\" id=\"payment-details\">\n        <dl>\n            <div v-if=\"orderAmount > 0\">\n                <dt v-t=\"'total_price'\"></dt>\n                <dd :data-clipboard=\"srvModel.orderAmount\" :data-clipboard-confirm=\"$t('copy_confirm')\">{{srvModel.orderAmount}} {{ srvModel.cryptoCode }}</dd>\n            </div>\n            <div v-if=\"orderAmount > 0 && srvModel.orderAmountFiat\">\n                <dt v-t=\"'total_fiat'\"></dt>\n                <dd :data-clipboard=\"srvModel.orderAmountFiat\" :data-clipboard-confirm=\"$t('copy_confirm')\">{{srvModel.orderAmountFiat}}</dd>\n            </div>\n            <div v-if=\"srvModel.rate && srvModel.cryptoCode\">\n                <dt v-t=\"'exchange_rate'\"></dt>\n                <dd :data-clipboard=\"srvModel.rate\" :data-clipboard-confirm=\"$t('copy_confirm')\">\n                    <template v-if=\"srvModel.cryptoCodeSrv === 'Sats'\">1 Sat = {{ srvModel.rate }}</template>\n                    <template v-else>1 {{ srvModel.cryptoCodeSrv }} = {{ srvModel.rate }}</template>\n                </dd>\n            </div>\n            <div v-if=\"srvModel.networkFee\">\n                <dt v-t=\"'network_cost'\"></dt>\n                <dd :data-clipboard=\"srvModel.networkFee\" :data-clipboard-confirm=\"$t('copy_confirm')\">\n                    <div v-if=\"srvModel.txCountForFee > 0\" v-t=\"{ path: 'tx_count', args: { count: srvModel.txCount } }\"></div>\n                    <div v-text=\"`${srvModel.networkFee} ${srvModel.cryptoCode}`\"></div>\n                </dd>\n            </div>\n            <div v-if=\"btcPaid > 0\">\n                <dt v-t=\"'amount_paid'\"></dt>\n                <dd :data-clipboard=\"srvModel.btcPaid\" :data-clipboard-confirm=\"$t('copy_confirm')\" v-text=\"`${srvModel.btcPaid} ${srvModel.cryptoCode}`\"></dd>\n            </div>\n            <div v-if=\"btcDue > 0\">\n                <dt v-t=\"'amount_due'\"></dt>\n                <dd :data-clipboard=\"srvModel.btcDue\" :data-clipboard-confirm=\"$t('copy_confirm')\" v-text=\"`${srvModel.btcDue} ${srvModel.cryptoCode}`\"></dd>\n            </div>\n            <div v-if=\"showRecommendedFee\">\n                <dt v-t=\"'recommended_fee'\"></dt>\n                <dd :data-clipboard=\"srvModel.feeRate\" :data-clipboard-confirm=\"$t('copy_confirm')\" v-t=\"{ path: 'fee_rate', args: { feeRate: srvModel.feeRate } }\"></dd>\n            </div>\n        </dl>\n    </script>\n    <script>\n\tconst i18nUrl = @Safe.Json($\"{Model.RootPath}misc/translations/checkout-v2/{{{{lng}}}}?v={Env.Version}\");\n        const statusUrl = @Safe.Json(Url.Action(\"GetStatus\", new { invoiceId = Model.InvoiceId }));\n        const statusWsUrl = @Safe.Json(Url.Action(\"GetStatusWebSocket\", new { invoiceId = Model.InvoiceId }));\n        const availableLanguages = @Safe.Json(LangService.GetLanguages().Select(language => language.Code));\n        const initialSrvModel = @Safe.Json(Model);\n        const qrOptions = { margin: 0, type: 'svg', color: { dark: '#000', light: '#fff' } };\n    </script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/i18next/i18next.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/i18next/i18nextHttpBackend.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/i18next/vue-i18next.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/js/copy-to-clipboard.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/main/utils.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/checkout-v2/checkout.js\" asp-append-version=\"true\"></script>\n    @if (Env.CheatMode)\n    {\n        <partial name=\"Checkout-Cheating\" model=\"@Model\" />\n    }\n    @foreach (var paymentMethodHandler in PaymentMethodHandlerDictionary\n        .Select(handler => handler.GetCheckoutUISettings())\n        .Where(settings => settings != null)\n        .DistinctBy(pm => pm.ExtensionPartial))\n    {\n        <partial name=\"@paymentMethodHandler.ExtensionPartial-v2\" model=\"@Model\"/>\n    }\n    @await Component.InvokeAsync(\"UiExtensionPoint\", new { location = \"checkout-payment\", model = Model })\n    @await Component.InvokeAsync(\"UiExtensionPoint\", new { location = \"checkout-v2-end\", model = Model })\n</body>\n</html>\n", "@namespace BTCPayServer.Client\n@using BTCPayServer.Abstractions.Models\n@model BTCPayServer.Controllers.UIManageController.ApiKeysViewModel\n@{\n    ViewData.SetActivePage(ManageNavPages.APIKeys, \"API Keys\");\n}\n\n<div class=\"row\">\n    <div class=\"col-xl-10 col-xxl-constrain\">\n        <div class=\"d-flex align-items-center justify-content-between mb-3\">\n            <h3 class=\"mb-0\">@ViewData[\"Title\"]</h3>\n            <a class=\"btn btn-primary\" asp-action=\"AddApiKey\" id=\"AddApiKey\">\n                <span class=\"fa fa-plus\"></span>\n                Generate Key\n            </a>\n        </div>\n        <p>\n            The <a asp-controller=\"UIHome\" asp-action=\"SwaggerDocs\" target=\"_blank\">BTCPay Server Greenfield API</a> offers programmatic access to your instance. You can manage your BTCPay\n            Server (e.g. stores, invoices, users) as well as automate workflows and integrations (see <a href=\"https://docs.btcpayserver.org/Development/GreenFieldExample/\" rel=\"noreferrer noopener\">use case examples</a>).\n            For that you need the API keys, which can be generated here. Find more information in the <a href=\"@Url.Action(\"SwaggerDocs\", \"UIHome\")#section/Authentication\" target=\"_blank\" rel=\"noreferrer noopener\">API authentication docs</a>.\n        </p>\n\n        @if (Model.ApiKeyDatas.Any())\n        {\n            <table class=\"table table-lg\">\n                <thead>\n                    <tr>\n                        <th>Label</th>\n                        <th class=\"w-125px\">Key</th>\n                        <th>Permissions</th>\n                        <th class=\"text-end\">Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    @{\n                        var index = 0;\n                    }\n                    @foreach (var keyData in Model.ApiKeyDatas)\n                    {\n                        <tr>\n                            <td>@keyData.Label</td>\n                            <td>\n                                <code class=\"hide-when-js\">@keyData.Id</code>\n                                <a class=\"only-for-js\" data-reveal-btn>Click to reveal</a>\n                                <div hidden>\n                                    <code data-api-key>@keyData.Id</code>\n                                    <a class=\"mt-2\" data-clipboard-confirm>\n                                        Copy to clipboard\n                                    </a>\n                                </div>\n                            </td>\n                            <td>\n                                @{\n                                    var permissions = keyData.GetBlob().Permissions;\n                                }\n                                @if (!permissions.Any())\n                                {\n                                    <span class=\"text-warning\">No permissions</span>\n                                }\n                                else\n                                {\n                                    <ul>\n                                        @foreach (var permission in Permission.ToPermissions(permissions).Select(c => c.ToString()).Distinct().ToArray())\n                                        {\n                                            <li>\n                                                <code class=\"text-break\">@permission</code>\n                                            </li>\n                                        }\n                                    </ul>\n                                }\n                            </td>\n                            <td class=\"text-end\">\n\t\t\t\t\t\t\t\t<a asp-action=\"DeleteAPIKey\" asp-route-id=\"@keyData.Id\" asp-controller=\"UIManage\" data-bs-toggle=\"modal\" data-bs-target=\"#ConfirmModal\" data-description=\"Any application using the API key <strong>@Html.Encode(keyData.Label ?? keyData.Id)</strong> will immediately lose access.\" data-confirm-input=\"DELETE\">Delete</a>\n                                <span>-</span>\n                                <button type=\"button\" class=\"btn btn-link only-for-js p-0\" data-qr=\"@index\">Show QR</button>\n                            </td>\n                        </tr>\n                        index++;\n                    }\n                </tbody>\n            </table>\n        }\n    </div>\n</div>\n\n<partial name=\"_Confirm\" model=\"@(new ConfirmModel(\"Delete API key\", \"Any application using the API key will immediately lose access.\", \"Delete\"))\" />\n\n<partial name=\"ShowQR\" />\n\n@section PageHeadContent {\n    <link href=\"~/vendor/vue-qrcode-reader/vue-qrcode-reader.css\" rel=\"stylesheet\" asp-append-version=\"true\" />\n}\n@section PageFootContent {\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/ur-registry/urlib.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode-reader/VueQrcodeReader.umd.min.js\" asp-append-version=\"true\"></script>\n\n    <script>\n        document.addEventListener(\"DOMContentLoaded\", function () {\n            $(\"[data-reveal-btn]\").on(\"click\", function (){\n                var $revealButton = $(this);\n                $revealButton.attr(\"hidden\", \"true\");\n\n                var $apiKeyContainer = $revealButton.next(\"[hidden]\");\n                $apiKeyContainer.removeAttr(\"hidden\");\n\n                (function setupCopyToClipboardButton() {\n                    var $clipboardBtn = $apiKeyContainer.children(\"[data-clipboard-confirm]\");\n                    var apiKey = $apiKeyContainer.children(\"[data-api-key]\").text().trim();\n                    $clipboardBtn.attr(\"data-clipboard\", apiKey);\n                    $clipboardBtn.click(window.copyToClipboard);\n                })();\n            });\n\n            const apiKeys = @Safe.Json(Model.ApiKeyDatas.Select(data => new\n                          {\n                              ApiKey = data.Id,\n                              Host = Context.Request.GetAbsoluteRoot()\n                          }));\n            const qrApp = initQRShow({ title: \"API Key QR\" });\n            delegate(\"click\", \"button[data-qr]\", e => {\n                e.preventDefault();\n                const { qr } = e.target.dataset;\n                const data = apiKeys[qr];\n                qrApp.showData(JSON.stringify(data));\n            });\n        });\n    </script>\n}\n", "@using BTCPayServer.Services.Invoices\n@using BTCPayServer.Client.Models\n@using BTCPayServer.Client\n@model BTCPayServer.Models.PaymentRequestViewModels.ViewPaymentRequestViewModel\n@inject BTCPayServer.Services.BTCPayServerEnvironment Env\n@{\n    ViewData[\"Title\"] = Model.Title;\n    Layout = null;\n    string StatusClass(InvoiceState state)\n    {\n        switch (state.Status.ToModernStatus())\n        {\n            case InvoiceStatus.Settled:\n            case InvoiceStatus.Processing:\n                return \"success\";\n            case InvoiceStatus.Expired:\n                switch (state.ExceptionStatus)\n                {\n                    case InvoiceExceptionStatus.PaidLate:\n                    case InvoiceExceptionStatus.PaidPartial:\n                    case InvoiceExceptionStatus.PaidOver:\n                        return \"warning\";\n                    default:\n                        return \"danger\";\n                }\n            case InvoiceStatus.Invalid:\n                return \"danger\";\n            default:\n                return \"warning\";\n        }\n    }\n}\n\n<!DOCTYPE html>\n<html lang=\"en\" @(Env.IsDeveloping ? \" data-devenv\" : \"\")>\n<head>\n    <partial name=\"LayoutHead\" />\n    <partial name=\"LayoutHeadStoreBranding\" model=\"@(Model.BrandColor, Model.CssFileId, Model.CustomCSSLink, Model.EmbeddedCSS)\" />\n    <link href=\"~/vendor/bootstrap-vue/bootstrap-vue.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <script type=\"text/javascript\">\n        var srvModel = @Safe.Json(Model);\n    </script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-toasted/vue-toasted.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/bootstrap-vue/bootstrap-vue.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/signalr/signalr.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/animejs/anime.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/payment-request/app.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/payment-request/helpers/math.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/payment-request/services/listener.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/modal/btcpay.js\" asp-append-version=\"true\"></script>\n    <style>\n        .invoice { margin-top: var(--btcpay-space-s); }\n        .invoice + .invoice { margin-top: var(--btcpay-space-m); }\n        .invoice .badge { font-size: var(--btcpay-font-size-s); }\n\n        @@media print {\n            @* This is to avoid table header showing up twice: https://github.com/btcpayserver/btcpayserver/issues/4341 *@\n            thead { display: table-row-group; }\n        }\n    </style>\n</head>\n<body class=\"min-vh-100\">\n    <div id=\"app\" class=\"d-flex flex-column min-vh-100 pb-l\">\n        <nav class=\"btcpay-header navbar sticky-top py-3 py-lg-4 d-print-block\">\n            <div class=\"container\">\n                <div class=\"row align-items-center\" style=\"width:calc(100% + 30px)\">\n                    <div class=\"col-12 col-md-8 col-lg-9\">\n                        <div class=\"row\">\n                            <div class=\"col col-12 col-lg-8\">\n                                <h1 class=\"h3\" v-text=\"srvModel.title\">@Model.Title</h1>\n                            </div>\n                            <div class=\"col col-12 col-sm-6 col-lg-8 d-flex align-items-center\">\n                                <span class=\"text-muted text-nowrap\">Last Updated</span>\n                                &nbsp;\n                                <span class=\"text-nowrap d-print-none\" v-text=\"lastUpdated\" v-cloak>@Model.LastUpdated.ToString(\"g\")</span>\n                                <span class=\"text-nowrap d-none d-print-block\" v-text=\"lastUpdatedDate\">@Model.LastUpdated.ToString(\"g\")</span>\n                                <button type=\"button\" class=\"btn btn-link fw-semibold d-none d-lg-inline-block d-print-none border-0 p-0 ms-4 only-for-js\" v-on:click=\"window.print\" v-cloak>\n                                    Print\n                                </button>\n                                <button type=\"button\" class=\"btn btn-link fw-semibold d-none d-lg-inline-block d-print-none border-0 p-0 ms-4 only-for-js\" v-on:click=\"window.copyUrlToClipboard\" v-cloak>\n                                    Copy Link\n                                </button>\n                            </div>\n                            <div class=\"col col-12 col-sm-6 text-sm-end col-lg-4 mt-lg-n4 pt-lg-1 d-print-none\">\n                                @if (Model.IsPending && !Model.Archived && Model.ExpiryDate.HasValue)\n                                {\n                                    <noscript>@Model.Status</noscript>\n                                }\n                                <template v-if=\"srvModel.isPending && !srvModel.archived && endDiff\">\n                                    <span class=\"text-muted\">Expires in</span> {{endDiff}}\n                                </template>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-12 pt-3 pb-2 col-md-4 py-md-0 col-lg-3\">\n                        <noscript>\n                            @if (Model.IsPending && !Model.Archived)\n                            {\n                                @if (Model.AllowCustomPaymentAmounts && !Model.AnyPendingInvoice)\n                                {\n                                    <form method=\"get\" asp-action=\"PayPaymentRequest\" asp-route-payReqId=\"@Model.Id\" class=\"d-print-none\">\n                                        <div class=\"row\">\n                                            <div class=\"col col-12 col-sm-6 col-md-12\">\n                                                <div class=\"input-group\">\n                                                    <input type=\"number\" inputmode=\"decimal\" class=\"form-control text-end hide-number-spin\" name=\"amount\" value=\"@Model.AmountDue\" @if (!Model.AllowCustomPaymentAmounts) { @(\"readonly\") } max=\"@Model.AmountDue\" step=\"any\" placeholder=\"Amount\" required />\n                                                    <span class=\"input-group-text\">@Model.Currency.ToUpper()</span>\n                                                </div>\n                                            </div>\n                                            <div class=\"col mt-2 col-12 col-sm-6 mt-sm-0 col-md-12 mt-md-2\">\n                                                <button class=\"btn btn-primary w-100 text-nowrap\" type=\"submit\" data-test=\"pay-button\">Pay Invoice</button>\n                                            </div>\n                                        </div>\n                                    </form>\n                                }\n                                else\n                                {\n                                    <a class=\"btn btn-primary d-inline-block d-print-none w-100 text-nowrap @if (!(Model.AnyPendingInvoice && !Model.PendingInvoiceHasPayments)) { @(\"btn-lg\") }\" asp-action=\"PayPaymentRequest\" asp-route-payReqId=\"@Model.Id\" data-test=\"pay-button\">\n                                        Pay Invoice\n                                    </a>\n                                    if (Model.AnyPendingInvoice && !Model.PendingInvoiceHasPayments && Model.AllowCustomPaymentAmounts)\n                                    {\n                                        <form method=\"get\" asp-action=\"CancelUnpaidPendingInvoice\" asp-route-payReqId=\"@Model.Id\" class=\"mt-2 d-print-none\">\n                                            <button class=\"btn btn-outline-secondary w-100 text-nowrap\" type=\"submit\">Cancel Invoice</button>\n                                        </form>\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                <div class=\"h2 text-md-end\">\n                                    <span class=\"badge @if (Model.Status == \"Settled\") { @(\"bg-primary\") } else if (Model.Status == \"Expired\") { @(\"bg-danger\") } else { @(\"bg-info\") }\" data-test=\"status\">\n                                        @Model.Status\n                                        @if (Model.Archived)\n                                        {\n                                            <span>(archived)</span>\n                                        }\n                                    </span>\n                                </div>\n                            }\n                        </noscript>\n                        <template v-if=\"srvModel.formId && srvModel.formId != 'None' && !srvModel.formSubmitted\">\n                            <a asp-action=\"ViewPaymentRequestForm\" asp-route-payReqId=\"@Model.Id\" class=\"btn btn-primary w-100 d-flex d-print-none align-items-center justify-content-center text-nowrap btn-lg\" data-test=\"form-button\">\n                                Pay Invoice\n                            </a>\n                        </template>\n                        <template v-else-if=\"srvModel.isPending && !srvModel.archived\">\n                            <template v-if=\"srvModel.allowCustomPaymentAmounts && !srvModel.anyPendingInvoice\">\n                                <form v-on:submit=\"submitCustomAmountForm\" class=\"d-print-none\">\n                                    <div class=\"row\">\n                                        <div class=\"col col-12 col-sm-6 col-md-12\">\n                                            <div class=\"input-group\">\n                                                <input type=\"number\" inputmode=\"decimal\" class=\"form-control text-end hide-number-spin\" v-model=\"customAmount\" :readonly=\"!srvModel.allowCustomPaymentAmounts\" :max=\"srvModel.amountDue\" placeholder=\"Amount\" step=\"any\" required />\n                                                <span class=\"input-group-text\">{{currency}}</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"col mt-2 col-12 col-sm-6 mt-sm-0 col-md-12 mt-md-2\">\n                                            <button class=\"btn btn-primary w-100 d-flex d-print-none align-items-center justify-content-center text-nowrap\" v-bind:class=\"{ 'btn-disabled': loading}\" :disabled=\"loading\" type=\"submit\" data-test=\"pay-button\">\n                                                <div v-if=\"loading\" class=\"spinner-grow spinner-grow-sm me-2\" role=\"status\">\n                                                    <span class=\"visually-hidden\">Loading...</span>\n                                                </div>\n                                                Pay Invoice\n                                            </button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </template>\n                            <template v-else>\n                                <button class=\"btn btn-primary w-100 d-flex d-print-none align-items-center justify-content-center text-nowrap\" :class=\"{ 'btn-lg': !(srvModel.anyPendingInvoice && !srvModel.pendingInvoiceHasPayments) || !srvModel.allowCustomPaymentAmounts}\" v-on:click=\"pay(null)\" :disabled=\"loading\" data-test=\"pay-button\">\n                                    <div v-if=\"loading\" class=\"spinner-grow spinner-grow-sm me-2\" role=\"status\">\n                                        <span class=\"visually-hidden\">Loading...</span>\n                                    </div>\n                                    <span>Pay Invoice</span>\n                                </button>\n                                @if (Model.AllowCustomPaymentAmounts) {\n                                    <button class=\"btn btn-outline-secondary mt-2 w-100 d-flex d-print-none align-items-center justify-content-center text-nowrap\" v-if=\"srvModel.anyPendingInvoice && !srvModel.pendingInvoiceHasPayments\" v-on:click=\"cancelPayment()\" :disabled=\"loading\">\n                                        <span v-if=\"loading\" class=\"spinner-grow spinner-grow-sm me-2\" role=\"status\">\n                                            <span class=\"visually-hidden\">Loading...</span>\n                                        </span>\n                                        <span>Cancel Invoice</span>\n                                    </button>\n                                }\n                            </template>\n                        </template>\n                        <template v-else>\n                            <div class=\"h2 text-md-end\">\n                                <span class=\"badge\" :class=\"{ 'bg-primary': srvModel.status === 'Settled', 'bg-danger': srvModel.status === 'Expired', 'bg-info': (srvModel.status !== 'Settled' && srvModel.status !== 'Expired') }\" data-test=\"status\">\n                                    {{srvModel.status}}\n                                    <span v-if=\"srvModel.archived\">(archived)</span>\n                                </span>\n                            </div>\n                        </template>\n                    </div>\n                </div>\n            </div>\n        </nav>\n\n        <main class=\"flex-grow-1 py-4\">\n            <div class=\"container\">\n                <partial name=\"_StatusMessage\" model=\"@(new ViewDataDictionary(ViewData){ { \"Margin\", \"mb-4\" } })\" />\n                <div class=\"row\">\n                    <div class=\"col col-12 col-lg-6 mb-4\">\n                        <div class=\"bg-tile h-100 m-0 p-3 p-sm-5 rounded\">\n                            <h2 class=\"h4 mb-3\">Invoice Summary</h2>\n                            @if (!string.IsNullOrEmpty(Model.Description) && Model.Description != \"<br>\")\n                            {\n                                <div v-html=\"srvModel.description\">\n                                    @Safe.Raw(Model.Description)\n                                </div>\n                            }\n                            else\n                            {\n                                <p class=\"text-muted mt-3 mb-0\">No details provided.</p>\n                            }\n                        </div>\n                    </div>\n                    <div class=\"col col-12 col-lg-6 mb-4\">\n                        <div class=\"bg-tile h-100 m-0 p-3 p-sm-5 rounded\">\n                            <h2 class=\"h4 mb-3\">Payment Details</h2>\n                            <dl class=\"mb-0 mt-md-4\">\n                                <div class=\"d-flex d-print-inline-block flex-column mb-4 me-5\">\n                                    <dt class=\"h4 fw-semibold text-nowrap text-primary text-print-default order-2 order-sm-1 mb-1\" v-text=\"srvModel.amountDueFormatted\">@Model.AmountDueFormatted</dt>\n                                    <dd class=\"order-1 order-sm-2 mb-1\" data-test=\"amount-due-title\">Amount due</dd>\n                                </div>\n                                <div class=\"progress bg-light d-none d-sm-flex mb-sm-4 d-print-none\" style=\"height:5px\">\n                                  <div class=\"progress-bar bg-primary\" role=\"progressbar\" style=\"width:@((Model.AmountCollected/Model.Amount)*100)%\" v-bind:style=\"{ width: (srvModel.amountCollected/srvModel.amount*100) + '%' }\"></div>\n                                </div>\n                                <div class=\"d-flex d-print-inline-block flex-column mb-4 me-5 d-sm-inline-flex mb-sm-0\">\n                                    <dt class=\"h4 fw-semibold text-nowrap order-2 order-sm-1 mb-1\" v-text=\"srvModel.amountCollectedFormatted\">@Model.AmountCollectedFormatted</dt>\n                                    <dd class=\"order-1 order-sm-2 mb-1\">Amount paid</dd>\n                                </div>\n                                <div class=\"d-flex d-print-inline-block flex-column mb-0 d-sm-inline-flex float-sm-end\">\n                                    <dt class=\"h4 text-sm-end fw-semibold text-nowrap order-2 order-sm-1 mb-1\" v-text=\"srvModel.amountFormatted\">@Model.AmountFormatted</dt>\n                                    <dd class=\"text-sm-end order-1 order-sm-2 mb-1\">Total requested</dd>\n                                </div>\n                            </dl>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"bg-tile h-100 m-0 p-3 p-sm-5 rounded\">\n                            <h2 class=\"h4 mb-0\">Payment History</h2>\n                            <noscript>\n                                @if (Model.Invoices == null || !Model.Invoices.Any())\n                                {\n                                    <p class=\"text-muted mt-3 mb-0\">No payments made yet.</p>\n                                }\n                                else\n                                {\n                                    @foreach (var invoice in Model.Invoices)\n                                    {\n                                        <div class=\"table-responsive\">\n                                            <table class=\"invoice table\">\n                                                <thead>\n                                                <tr class=\"table-borderless\">\n                                                    <th class=\"fw-normal text-secondary w-350px\" scope=\"col\">Invoice Id</th>\n                                                    <th class=\"fw-normal text-secondary w-175px\">Expiry</th>\n                                                    <th class=\"fw-normal text-secondary text-end w-125px\">Amount</th>\n                                                    <th class=\"fw-normal text-secondary text-end w-125px\"></th>\n                                                    <th class=\"fw-normal text-secondary text-end\">Status</th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                <tr class=\"table-borderless table-light\">\n                                                    <td>@invoice.Id</td>\n                                                    <td>@invoice.ExpiryDate.ToString(\"g\")</td>\n                                                    <td class=\"text-end\">@invoice.AmountFormatted</td>\n                                                    <td class=\"text-end\"></td>\n                                                    <td class=\"text-end text-print-default\">\n                                                        <span class=\"badge bg-@StatusClass(invoice.State)\">@invoice.StateFormatted</span>\n                                                    </td>\n                                                </tr>\n                                                @if (invoice.Payments != null && invoice.Payments.Any())\n                                                {\n                                                    <tr class=\"table-borderless table-light\">\n                                                        <th class=\"fw-normal text-secondary\">Destination</th>\n                                                        <th class=\"fw-normal text-secondary\">Received</th>\n                                                        <th class=\"fw-normal text-secondary text-end\">Paid</th>\n                                                        <th class=\"fw-normal text-secondary text-end\">Rate</th>\n                                                        <th class=\"fw-normal text-secondary text-end\">Payment</th>\n                                                    </tr>\n                                                    @foreach (var payment in invoice.Payments)\n                                                    {\n                                                        <tr class=\"table-borderless table-light\">\n                                                            <td class=\"text-break\"><code>@payment.Destination</code></td>\n                                                            <td>@payment.ReceivedDate.ToString(\"g\")</td>\n                                                            <td class=\"text-end\">@payment.PaidFormatted</td>\n                                                            <td class=\"text-end\">@payment.RateFormatted</td>\n                                                            <td class=\"text-end text-nowrap\">@payment.Amount @payment.PaymentMethod</td>\n                                                        </tr>\n                                                        <tr class=\"table-borderless table-light\">\n                                                            <td class=\"fw-normal\" colspan=\"5\">\n                                                                <span class=\"text-secondary\">Transaction Id:</span> \n                                                                @if (!string.IsNullOrEmpty(payment.Link))\n                                                                {\n                                                                    <a href=\"@payment.Link\" class=\"text-print-default text-break\" rel=\"noreferrer noopener\" target=\"_blank\">@payment.Id</a>\n                                                                }\n                                                                else\n                                                                {\n                                                                    <span class=\"text-break\">@payment.Id</span>\n                                                                }\n                                                            </td>\n                                                        </tr>\n                                                    }\n                                                }\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    }\n                                }\n                            </noscript>\n                            <template v-if=\"!srvModel.invoices || srvModel.invoices.length == 0\">\n                                <p class=\"text-muted mt-3 mb-0\">No payments made yet.</p>\n                            </template>\n                            <template v-else>\n                                <div class=\"table-responsive\">\n                                    <table v-for=\"invoice of srvModel.invoices\" :key=\"invoice.id\" class=\"invoice table\">\n                                        <thead>\n                                        <tr class=\"table-borderless\">\n                                            <th class=\"fw-normal text-secondary w-350px\" scope=\"col\">Invoice Id</th>\n                                            <th class=\"fw-normal text-secondary w-175px\">Expiry</th>\n                                            <th class=\"fw-normal text-secondary text-end w-125px\">Amount</th>\n                                            <th class=\"fw-normal text-secondary text-end w-125px\"></th>\n                                            <th class=\"fw-normal text-secondary text-end\">Status</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        <tr class=\"table-borderless table-light\">\n                                            <td>{{invoice.id}}</td>\n                                            <td v-text=\"formatDate(invoice.expiryDate)\"></td>\n                                            <td class=\"text-end\">{{invoice.amountFormatted}}</td>\n                                            <td class=\"text-end\"></td>\n                                            <td class=\"text-end text-print-default\">\n                                                <span class=\"badge\" :class=\"`bg-${statusClass(invoice.stateFormatted)}`\">{{invoice.stateFormatted}}</span>\n                                            </td>\n                                        </tr>\n                                        <template v-if=\"invoice.payments && invoice.payments.length > 0\">\n                                            <tr class=\"table-borderless table-light\">\n                                                <th class=\"fw-normal text-secondary\">Destination</th>\n                                                <th class=\"fw-normal text-secondary\">Received</th>\n                                                <th class=\"fw-normal text-secondary text-end\">Paid</th>\n                                                <th class=\"fw-normal text-secondary text-end\">Rate</th>\n                                                <th class=\"fw-normal text-secondary text-end\">Payment</th>\n                                            </tr>\n                                            <template v-for=\"payment of invoice.payments\">\n                                                <tr class=\"table-borderless table-light\">\n                                                    <td class=\"text-break\"><code>{{payment.destination}}</code></td>\n                                                    <td v-text=\"formatDate(payment.receivedDate)\"></td>\n                                                    <td class=\"text-end\">{{payment.paidFormatted}}</td>\n                                                    <td class=\"text-end\">{{payment.rateFormatted}}</td>\n                                                    <td class=\"text-end text-nowrap\">{{payment.amount.noExponents()}} {{payment.paymentMethod}}</td>\n                                                </tr>\n                                                <tr class=\"table-borderless table-light\">\n                                                    <td class=\"fw-normal\" colspan=\"5\">\n                                                        <span class=\"text-secondary\">Transaction Id:</span> \n                                                        <a v-if=\"payment.link\" :href=\"payment.link\" class=\"text-print-default\" target=\"_blank\" rel=\"noreferrer noopener\">{{payment.id}}</a>\n                                                        <span v-else>{{payment.id}}</span>\n                                                    </td>\n                                                </tr>\n                                            </template>\n                                        </template>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </template>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer class=\"store-footer\">\n            <p permission=\"@Policies.CanModifyStoreSettings\">\n                <a asp-controller=\"UIPaymentRequest\" asp-action=\"EditPaymentRequest\" asp-route-storeId=\"@Model.StoreId\" asp-route-payReqId=\"@Model.Id\">\n                    Edit payment request\n                </a>\n            </p>\n            <a href=\"https://btcpayserver.org\" target=\"_blank\" rel=\"noreferrer noopener\">\n                Powered by <partial name=\"_StoreFooterLogo\" />\n            </a>\n        </footer>\n    </div>\n    <partial name=\"LayoutFoot\"/>\n</body>\n</html>\n", "@inject BTCPayServer.Services.BTCPayServerEnvironment Env\n@inject BTCPayNetworkProvider BtcPayNetworkProvider\n@using BTCPayServer.Client\n@using BTCPayServer.Components.ThemeSwitch\n@using BTCPayServer.Payments\n@model BTCPayServer.Models.ViewPullPaymentModel\n\n@{\n    ViewData[\"Title\"] = Model.Title;\n    Layout = null;\n    string StatusTextClass(string status)\n    {\n        switch (status)\n        {\n            case \"Completed\":\n            case \"In Progress\":\n                return \"bg-success\";\n            case \"Cancelled\":\n                return \"bg-danger\";\n            default:\n                return \"bg-warning\";\n        }\n    }\n    \n    \n    string lnurl = null;\n    string lnurlUri = null;\n\n    var pms = Model.PaymentMethods.FirstOrDefault(id => id.PaymentType == LightningPaymentType.Instance && BtcPayNetworkProvider.DefaultNetwork.CryptoCode == id.CryptoCode);\n    if (pms is not null && Model.Currency.Equals(pms.CryptoCode, StringComparison.InvariantCultureIgnoreCase))\n    {\n        var lnurlEndpoint = new Uri(Url.Action(\"GetLNURLForPullPayment\", \"UILNURL\", new\n        {\n            cryptoCode = pms.CryptoCode,\n            pullPaymentId = Model.Id\n        }, Context.Request.Scheme, Context.Request.Host.ToString()));\n        lnurl = LNURL.LNURL.EncodeUri(lnurlEndpoint, \"withdrawRequest\", true).ToString();\n        lnurlUri = LNURL.LNURL.EncodeUri(lnurlEndpoint, \"withdrawRequest\", false).ToString();\n    }\n}\n<!DOCTYPE html>\n<html lang=\"en\" @(Env.IsDeveloping ? \" data-devenv\" : \"\")>\n<head>\n    <partial name=\"LayoutHead\" />\n    <partial name=\"LayoutHeadStoreBranding\" model=\"@(Model.BrandColor, Model.CssFileId, Model.CustomCSSLink, Model.EmbeddedCSS)\" />\n    <link href=\"~/vendor/bootstrap-vue/bootstrap-vue.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <style>\n        .no-marker > ul { list-style-type: none; }\n    </style>\n</head>\n<body class=\"min-vh-100\">\n    <div id=\"app\" class=\"d-flex flex-column min-vh-100 pb-l\">\n        @if (Model.IsPending)\n        {\n            <nav class=\"btcpay-header navbar sticky-top py-3 py-lg-4 d-print-none\">\n                <div class=\"container gap-3\">\n                    <form asp-action=\"ClaimPullPayment\" asp-route-pullPaymentId=\"@Model.Id\" class=\"flex-fill\">\n                        <div class=\"row align-items-center\" style=\"width:calc(100% + 30px)\">\n                            <div class=\"col-12 mb-3 col-lg-6 mb-lg-0\">\n                                <div class=\"input-group\">\n                                    @if (lnurl is not null)\n                                    {\n                                        <button type=\"button\" class=\"input-group-prepend btn btn-outline-secondary\" id=\"lnurlwithdraw-button\" data-bs-toggle=\"modal\" data-bs-target=\"#scan-qr-modal\">\n                                            <span class=\"fa fa-qrcode  fa-2x\" title=\"LNURL-Withdraw\"></span>\n                                        </button>\n                                    }\n                                    <input class=\"form-control form-control-lg font-monospace\" asp-for=\"Destination\" placeholder=\"Enter destination to claim funds\" required style=\"font-size:.9rem;height:42px;\">\n                                    @if (Model.PaymentMethods.Length == 1)\n                                    {\n                                        <input type=\"hidden\" asp-for=\"SelectedPaymentMethod\">\n                                        <span class=\"input-group-text\">@Model.PaymentMethods.First().ToPrettyString()</span>\n                                    }\n                                    else\n                                    {\n                                        <select class=\"form-select w-auto\" asp-for=\"SelectedPaymentMethod\" asp-items=\"Model.PaymentMethods.Select(id => new SelectListItem(id.ToPrettyString(), id.ToString()))\"></select>\n                                    }\n                                </div>\n                            </div>\n\n                            <div class=\"col-12 mb-3 col-sm-6 mb-sm-0 col-lg-3\">\n                                <div class=\"input-group\">\n                                    <input type=\"number\" inputmode=\"decimal\" class=\"form-control form-control-lg text-end hide-number-spin\" asp-for=\"ClaimedAmount\" max=\"@Model.AmountDue\" min=\"@Model.MinimumClaim\" step=\"any\" placeholder=\"Amount\" required>\n                                    <span class=\"input-group-text px-3\">@Model.Currency.ToUpper()</span>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-6 col-lg-3\">\n                                <button class=\"btn btn-lg btn-primary w-100 text-nowrap\" type=\"submit\">Claim Funds</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </nav>\n        }\n\n        <main class=\"flex-grow-1 py-4\">\n            <div class=\"container\">\n                <partial name=\"_StatusMessage\" model=\"@(new ViewDataDictionary(ViewData){ { \"Margin\", \"mb-4\" } })\" />\n                @if (!ViewContext.ModelState.IsValid)\n                {\n                    @Html.ValidationSummary(string.Empty, new { @class = $\"alert alert-danger mb-4 pb-0 {(ViewContext.ModelState.ErrorCount.Equals(1) ? \"no-marker\" : \"\")}\" })\n                }\n\n                <div class=\"row\">\n                    <div class=\"col col-12 col-lg-6 mb-4\">\n                        <div class=\"bg-tile h-100 m-0 p-3 p-sm-5 rounded\">\n                            @if (!string.IsNullOrWhiteSpace(Model.Title))\n                            {\n                                <h2 class=\"h4 mb-3\">@Model.Title</h2>\n                            }\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"text-muted text-nowrap\">Start Date</span>\n                                &nbsp;\n                                <span class=\"text-nowrap\">@Model.StartDate.ToString(\"g\")</span>\n                            </div>\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"text-muted text-nowrap\">Last Updated</span>\n                                &nbsp;\n                                <span class=\"text-nowrap\">@Model.LastRefreshed.ToString(\"g\")</span>\n                                <button type=\"button\" class=\"btn btn-link fw-semibold d-none d-lg-inline-block d-print-none border-0 p-0 ms-4 only-for-js\" id=\"copyLink\">\n                                    Copy Link\n                                </button>\n                            </div>\n                            @if (!string.IsNullOrEmpty(Model.ResetIn))\n                            {\n                                <p>\n                                    <span class=\"text-muted text-nowrap\">Reset in</span>\n                                    &nbsp;\n                                    <span class=\"text-nowrap\">@Model.ResetIn</span>\n                                </p>\n                            }\n                            @if (!string.IsNullOrEmpty(Model.Description))\n                            {\n                                <div class=\"mt-4\">@Safe.Raw(Model.Description)</div>\n                            }\n                        </div>\n                    </div>\n                    <div class=\"col col-12 col-lg-6 mb-4\">\n                        <div class=\"bg-tile h-100 m-0 p-3 p-sm-5 rounded\">\n                            <h2 class=\"h4 mb-3\">Payment Details</h2>\n                            <dl class=\"mb-0 mt-md-4\">\n                                <div class=\"d-flex d-print-inline-block flex-column mb-4 me-5\">\n                                    <dt class=\"h4 fw-semibold text-nowrap text-primary text-print-default order-2 order-sm-1 mb-1\">@Model.AmountDueFormatted</dt>\n                                    <dd class=\"order-1 order-sm-2 mb-1\">Available claim</dd>\n                                </div>\n                                <div class=\"progress bg-light d-none d-sm-flex mb-sm-4 d-print-none\" style=\"height:5px\">\n                                    <div class=\"progress-bar bg-primary\" role=\"progressbar\" style=\"width:@((Model.AmountCollected / Model.Amount) * 100)%\"></div>\n                                </div>\n                                <div class=\"d-flex d-print-inline-block flex-column mb-4 me-5 d-sm-inline-flex mb-sm-0\">\n                                    <dt class=\"h4 fw-semibold text-nowrap order-2 order-sm-1 mb-1\">@Model.AmountCollectedFormatted</dt>\n                                    <dd class=\"order-1 order-sm-2 mb-1\">Already claimed</dd>\n                                </div>\n                                <div class=\"d-flex d-print-inline-block flex-column mb-0 d-sm-inline-flex float-sm-end\">\n                                    <dt class=\"h4 text-sm-end fw-semibold text-nowrap order-2 order-sm-1 mb-1\">@Model.AmountFormatted</dt>\n                                    <dd class=\"text-sm-end order-1 order-sm-2 mb-1\">Claim limit</dd>\n                                </div>\n                            </dl>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"bg-tile h-100 m-0 p-3 p-sm-5 rounded\">\n                            <h2 class=\"h4 mb-0\">Claims</h2>\n                            @if (Model.Payouts.Any())\n                            {\n                                <div class=\"table-responsive\">\n                                    <table class=\"table my-0\">\n                                        <thead>\n                                        <tr class=\"table-borderless\">\n                                            <th class=\"fw-normal text-secondary\" scope=\"col\">Destination</th>\n                                            <th class=\"fw-normal text-secondary\" scope=\"col\">Method</th>\n                                            <th class=\"fw-normal text-secondary text-end text-nowrap\">Amount requested</th>\n                                            <th class=\"fw-normal text-secondary text-end\">Status</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        @foreach (var invoice in Model.Payouts)\n                                        {\n                                            <tr>\n                                                <td class=\"text-break\">\n                                                    @invoice.Destination\n                                                </td>\n                                                <td class=\"text-nowrap\">@invoice.PaymentMethod.ToPrettyString()</td>\n                                                <td class=\"text-end text-nowrap\">@invoice.AmountFormatted</td>\n                                                <td class=\"text-end text-nowrap\">\n                                                    @if (!string.IsNullOrEmpty(invoice.Link))\n                                                    {\n                                                        <a class=\"transaction-link text-white badge @StatusTextClass(invoice.Status.ToString())\" href=\"@invoice.Link\" rel=\"noreferrer noopener\">@invoice.Status.GetStateString()</a>\n                                                    }\n                                                    else\n                                                    {\n                                                        <span class=\"text-white badge @StatusTextClass(invoice.Status.ToString())\">@invoice.Status.GetStateString()</span>\n                                                    }\n                                                </td>\n                                            </tr>\n                                        }\n                                        </tbody>\n                                    </table>\n                                </div>\n                            }\n                            else\n                            {\n                                <p class=\"text-muted mt-3 mb-0\">No claim made yet.</p>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer class=\"store-footer\">\n            <p permission=\"@Policies.CanViewStoreSettings\">\n                <a asp-action=\"EditPullPayment\" asp-controller=\"UIPullPayment\" asp-route-storeId=\"@Model.StoreId\" asp-route-pullPaymentId=\"@Model.Id\">\n                    Edit pull payment\n                </a>\n            </p>\n            <a href=\"https://btcpayserver.org\" target=\"_blank\" rel=\"noreferrer noopener\">\n                Powered by <partial name=\"_StoreFooterLogo\" />\n            </a>\n        </footer>\n    </div>\n    <partial name=\"LayoutFoot\" />\n  @if (lnurl is not null)\n  {\n      var note = \"You can scan or open this link with a <a href='https://github.com/fiatjaf/lnurl-rfc#lnurl-documents' target='_blank' rel='noreferrer noopener'>LNURL-Withdraw</a> enabled wallet.\";\n      if (!Model.AutoApprove)\n      {\n          note += \"<br/><span class='fw-bold'>Please note that this pull payment does not automatically send out funds, and so will process payment after LNURL-withdraw flow is completed.</span>\";\n      }\n      <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n      <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n      <partial name=\"ShowQR\"/>\n      <script>\n        document.addEventListener(\"DOMContentLoaded\", () => {\n            const modes = {\n                uri: { title: \"URI\", fragments: [@Safe.Json(lnurlUri)], showData: true, href: @Safe.Json(lnurlUri) },\n                bech32: { title: \"Bech32\", fragments: [@Safe.Json(lnurl)], showData: true, href: @Safe.Json(lnurl) }\n            };\n            initQRShow({ title: \"LNURL Withdraw\", note: @Safe.Json(note), modes })\n    });\n    </script>\n  }\n    <script>\n        document.addEventListener(\"DOMContentLoaded\", () => {\n            document.getElementById(\"copyLink\").addEventListener(\"click\", window.copyUrlToClipboard);\n        });\n</script>\n</body>\n</html>\n", "@model WalletSetupViewModel\n@{\n    Layout = \"_LayoutWalletSetup\";\n    ViewData.SetActivePage(StoreNavPages.OnchainSettings, \"Scan QR code\", Context.GetStoreData().Id);\n}\n\n@section Navbar {\n    <a asp-controller=\"UIStores\" asp-action=\"ImportWallet\" asp-route-storeId=\"@Model.StoreId\" asp-route-cryptoCode=\"@Model.CryptoCode\" asp-route-method=\"\">\n        <vc:icon symbol=\"back\" />\n    </a>\n}\n\n<header class=\"text-center\">\n    <h1>@ViewData[\"Title\"]</h1>\n    <p class=\"lead text-secondary mt-3\">Scan the extended public key, also called \"xpub\", shown on your wallet's display.</p>\n</header>\n\n@if (!ViewContext.ModelState.IsValid)\n{\n    <div asp-validation-summary=\"All\" class=\"text-danger\"></div>\n}\n\n<div class=\"my-5\">\n    <partial name=\"CameraScanner\"/>\n    <form id=\"qr-import-form\" method=\"post\">\n        <input asp-for=\"WalletFileContent\" type=\"hidden\" />\n    </form>\n</div>\n\n<p class=\"mt-5\">\n    Generate a QR code of the extended public key in your wallet (see instructions for supported wallets below).\n    Allow the browser access to your camera and hold the code to the camera when the scan prompt appears.\n</p>\n\n<table class=\"table table-hover\">\n    <thead>\n    <tr>\n        <th>Wallet</th>\n        <th>Instructions</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n        <td>BlueWallet</td>\n        <td>Open Wallet Settings \u276f Show Wallet XPUB</td>\n    </tr>\n    <tr>\n        <td class=\"text-nowrap\">Cobo Vault</td>\n        <td>Open Wallet Settings \u276f Show/Export XPUB</td>\n    </tr>\n    <tr>\n        <td class=\"text-nowrap\">Keystone Vault</td>\n        <td>Open Wallet Settings \u276f Show/Export XPUB</td>\n    </tr>\n    <tr>\n        <td>Passport</td>\n        <td>Pair Wallet \u276f BTCPay \u276f QR Code</td>\n    </tr>\n    <tr>\n        <td>Specter DIY</td>\n        <td>Master public keys \u276f Select key</td>\n    </tr>\n    <tr>\n        <td>SeedSigner</td>\n        <td>Seeds \u276f Select seed \u276f Export XPUB \u276f BlueWallet</td>\n    </tr>\n    </tbody>\n</table>\n\n@section PageHeadContent {\n    <link href=\"~/vendor/vue-qrcode-reader/vue-qrcode-reader.css\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n}\n\n@section PageFootContent {\n    <partial name=\"_ValidationScriptsPartial\"/>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/ur-registry/urlib.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode-reader/VueQrcodeReader.umd.min.js\" asp-append-version=\"true\"></script>\n\n    <script>\n        window.coinName = \"@Model.Network.DisplayName.ToLowerInvariant()\";\n        document.addEventListener(\"DOMContentLoaded\", function () {\n            initCameraScanningApp(\"Scan wallet QR\", data => {\n                let xpub = \"\";\n                if (typeof(data) === \"object\") {\n                    if (data.type === \"crypto-account\") {\n                        const account = window.URlib.CryptoAccount.fromCBOR(data.cbor);\n                        const [descriptor] = account.getOutputDescriptors();\n                        xpub = descriptor.getHDKey().getBip32Key();\n                    } else {\n                        console.error('Unexpected UR type', data.type)\n                    }\n                } else if (typeof(data) === 'string') {\n                    xpub = data;\n                }\n                // remove potentially leading derivation path\n                xpub = xpub.replace(/^\\[.*?\\]/, '');\n                // submit\n                document.getElementById(\"WalletFileContent\").value = xpub;\n                document.getElementById(\"qr-import-form\").submit();\n            });\n        });\n    </script>\n}\n", "@using NBitcoin.DataEncoders\n@using Newtonsoft.Json\n@using System.Text\n@using BTCPayServer.Abstractions.Models\n@model WalletSettingsViewModel\n@{\n    Layout = \"../Shared/_NavLayout.cshtml\";\n    ViewData[\"NavPartialName\"] = \"../UIWallets/_Nav\";\n    ViewData.SetActivePage(StoreNavPages.OnchainSettings, $\"{Model.CryptoCode} Wallet Settings\", Context.GetStoreData().Id);\n}\n\n@section PageHeadContent {\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/ur-registry/urlib.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode-reader/VueQrcodeReader.umd.min.js\" asp-append-version=\"true\"></script>\n\n    <link href=\"~/vendor/vue-qrcode-reader/vue-qrcode-reader.css\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n}\n\n<div class=\"row\">\n    <div class=\"col-xl-8 col-xxl-constrain\">\n        <div class=\"mb-5\">\n            <h3 class=\"mb-3\">@ViewData[\"Title\"]</h3>\n            <div class=\"mb-3 d-flex align-items-center\">\n                <span title=\"@Model.Source\" data-bs-toggle=\"tooltip\" class=\"me-3\">@(Model.IsHotWallet ? \"Hot wallet\" : \"Watch-only wallet\")</span>\n                <div class=\"dropdown\">\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"ActionsDropdownToggle\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Actions\n                    </button>\n                    <div class=\"dropdown-menu\" aria-labelledby=\"ActionsDropdownToggle\">\n                        <a class=\"dropdown-item\" asp-controller=\"UIWallets\" asp-action=\"WalletRescan\" asp-route-walletId=\"@Model.WalletId\" id=\"Rescan\">Rescan wallet for missing transactions</a>\n                        <form method=\"post\" asp-controller=\"UIWallets\" asp-action=\"WalletActions\" asp-route-walletId=\"@Model.WalletId\">\n                            <button name=\"command\" type=\"submit\" class=\"dropdown-item\" value=\"prune\">Prune old transactions from history</button>\n                            @if (User.IsInRole(Roles.ServerAdmin))\n                            {\n                                <button name=\"command\" type=\"submit\" class=\"dropdown-item\" value=\"clear\">Clear all transactions from history</button>\n                            }\n                        </form>\n                        @if (Model.UriScheme == \"bitcoin\")\n                        {\n                            <button type=\"button\" class=\"dropdown-item\" id=\"RegisterWallet\" data-store=\"@Model.StoreName\" data-scheme=\"@Model.UriScheme\" data-url=\"@Url.Action(\"WalletSend\", \"UIWallets\", new {walletId = Model.WalletId, bip21 = \"%s\"})\" hidden>Register wallet for payment links</button>\n                        }\n                        <div class=\"dropdown-divider\"></div>\n                        @if (Model.NBXSeedAvailable)\n                        {\n                            <a asp-action=\"WalletSeed\" asp-route-storeId=\"@Model.StoreId\" asp-route-cryptoCode=\"@Model.CryptoCode\" class=\"dropdown-item\" id=\"ViewSeed\">View seed</a>\n                        }\n                        <a asp-controller=\"UIStores\" asp-action=\"ReplaceWallet\" asp-route-storeId=\"@Model.StoreId\" asp-route-cryptoCode=\"@Model.CryptoCode\"\n                           id=\"ChangeWalletLink\"\n                           class=\"dropdown-item\"\n                           data-bs-toggle=\"modal\"\n                           data-bs-target=\"#ConfirmModal\"\n                           data-title=\"Replace @Model.CryptoCode wallet\"\n                           data-description=\"@ViewData[\"ReplaceDescription\"]\"\n                           data-confirm=\"Setup new wallet\"\n                           data-confirm-input=\"REPLACE\">\n                            Replace wallet\n                        </a>\n                        <form method=\"get\" asp-action=\"DeleteWallet\" asp-route-storeId=\"@Model.StoreId\" asp-route-cryptoCode=\"@Model.CryptoCode\" class=\"d-inline\">\n                            <button type=\"submit\"\n                                    id=\"Delete\"\n                                    class=\"dropdown-item\"\n                                    data-bs-toggle=\"modal\"\n                                    data-bs-target=\"#ConfirmModal\"\n                                    data-title=\"Remove @Model.CryptoCode wallet\"\n                                    data-description=\"@ViewData[\"RemoveDescription\"]\"\n                                    data-confirm=\"Remove\"\n                                    data-confirm-input=\"REMOVE\">Remove wallet</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            \n            <form method=\"post\" asp-action=\"UpdateWalletSettings\" asp-route-storeId=\"@Model.StoreId\" asp-route-cryptoCode=\"@Model.CryptoCode\">\n                <div class=\"form-group my-4\">\n                    <div class=\"d-flex align-items-center\">\n                        <input asp-for=\"Enabled\" type=\"checkbox\" class=\"btcpay-toggle me-2\"/>\n                        <label asp-for=\"Enabled\" class=\"form-label mb-0 me-1\"></label>\n                    </div>\n                    <span asp-validation-for=\"PayJoinEnabled\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"form-group\">\n                    <label asp-for=\"Label\" class=\"form-label\"></label>\n                    <input asp-for=\"Label\" class=\"form-control\" style=\"max-width:24em;\" />\n                    <span asp-validation-for=\"Label\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"form-group\">\n                    <label asp-for=\"DerivationScheme\" class=\"form-label\"></label>\n                    <div class=\"input-group\" data-clipboard=\"@Model.DerivationScheme\">\n                        <input asp-for=\"DerivationScheme\" class=\"form-control\" style=\"cursor:copy\" readonly />\n                        <button type=\"button\" class=\"input-group-text btn btn-outline-secondary\" data-clipboard-confirm style=\"min-width:8em;\">Copy</button>\n                    </div>\n                </div>\n                @if (!string.IsNullOrEmpty(Model.DerivationSchemeInput) && Model.DerivationSchemeInput != Model.DerivationScheme)\n                {\n                    <div class=\"form-group\">\n                        <label asp-for=\"DerivationSchemeInput\" class=\"form-label\"></label>\n                        <div class=\"input-group\" data-clipboard=\"@Model.DerivationSchemeInput\">\n                            <input asp-for=\"DerivationSchemeInput\" class=\"form-control\" style=\"cursor:copy\" readonly/>\n                            <button type=\"button\" class=\"input-group-text btn btn-outline-secondary\" data-clipboard-confirm style=\"min-width:8em;\">Copy</button>\n                        </div>\n                    </div>\n                }\n                @for (var i = 0; i < Model.AccountKeys.Count; i++)\n                {\n                    <h4 class=\"mt-5 mb-3\">Account Key @i</h4>\n                    <div class=\"form-group\">\n                        <div class=\"d-flex align-items-center justify-content-between\">\n                            <label asp-for=\"@Model.AccountKeys[i].AccountKey\" class=\"form-label\"></label>\n                            <button type=\"button\" class=\"d-inline-block ms-2 btn text-primary btn-link p-0 mb-2\" data-account-key=\"@i\" title=\"\">\n                                <span class=\"fa fa-qrcode\"></span> Show export QR\n                            </button>\n                        </div>\n                        <div class=\"input-group\" data-clipboard=\"@Model.AccountKeys[i].AccountKey\">\n                            <input asp-for=\"@Model.AccountKeys[i].AccountKey\" class=\"form-control\" style=\"cursor:copy\" readonly/>\n                            <button type=\"button\" class=\"input-group-text btn btn-outline-secondary\" data-clipboard-confirm style=\"min-width:8em;\">Copy</button>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group col-auto\">\n                            <label asp-for=\"@Model.AccountKeys[i].MasterFingerprint\" class=\"form-label\"></label>\n                            <input asp-for=\"@Model.AccountKeys[i].MasterFingerprint\" class=\"form-control\" style=\"max-width:16ch;\" />\n                        </div>\n                        <div class=\"form-group col-auto\">\n                            <label asp-for=\"@Model.AccountKeys[i].AccountKeyPath\" class=\"form-label\"></label>\n                            <input asp-for=\"@Model.AccountKeys[i].AccountKeyPath\" class=\"form-control\" style=\"max-width:16ch;\" />\n                        </div>\n                    </div>\n                    @if (Model.IsMultiSig)\n                    {\n                        <div class=\"form-check\">\n                            <input asp-for=\"SelectedSigningKey\" class=\"form-check-input\" type=\"radio\" value=\"@Model.AccountKeys[i].AccountKey\"/>\n                            <label asp-for=\"SelectedSigningKey\" class=\"form-check-label\"></label>\n                        </div>\n                    }\n                }\n                <button type=\"submit\" class=\"btn btn-primary mt-2\" id=\"SaveWalletSettings\">Save Wallet Settings</button>\n            </form>\n            \n            <h3 class=\"mt-5 mb-4\">Payment</h3>\n            <form method=\"post\" asp-action=\"UpdatePaymentSettings\" asp-route-storeId=\"@Model.StoreId\" asp-route-cryptoCode=\"@Model.CryptoCode\">\n                @if (Model.CanUsePayJoin)\n                {\n                    <div class=\"form-group\">\n                        <div class=\"d-flex align-items-center\">\n                            <input asp-for=\"PayJoinEnabled\" type=\"checkbox\" class=\"btcpay-toggle me-2\"/>\n                            <label asp-for=\"PayJoinEnabled\" class=\"form-label mb-0 me-1\"></label>\n                            <a href=\"https://docs.btcpayserver.org/Payjoin/\" target=\"_blank\" rel=\"noreferrer noopener\" title=\"More information...\">\n                                <vc:icon symbol=\"info\"/>\n                            </a>\n                        </div>\n                        <span asp-validation-for=\"PayJoinEnabled\" class=\"text-danger\"></span>\n                    </div>\n                }\n                <div class=\"form-group\">\n                    <label asp-for=\"MonitoringExpiration\" class=\"form-label\"></label>\n                    <a href=\"https://docs.btcpayserver.org/FAQ/Stores/#payment-invalid-if-transactions-fails-to-confirm-minutes-after-invoice-expiration\" target=\"_blank\" rel=\"noreferrer noopener\" title=\"More information...\">\n                        <vc:icon symbol=\"info\"/>\n                    </a>\n                    <div class=\"input-group\">\n                        <input inputmode=\"numeric\" asp-for=\"MonitoringExpiration\" class=\"form-control\" style=\"max-width:10ch;\"/>\n                        <span class=\"input-group-text\">minutes</span>\n                    </div>\n                    <span asp-validation-for=\"MonitoringExpiration\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"form-group\">\n                    <label asp-for=\"SpeedPolicy\" class=\"form-label\"></label>\n                    <a href=\"https://docs.btcpayserver.org/FAQ/Stores/#consider-the-invoice-confirmed-when-the-payment-transaction\" target=\"_blank\" rel=\"noreferrer noopener\" title=\"More information...\">\n                        <vc:icon symbol=\"info\"/>\n                    </a>\n                    <select asp-for=\"SpeedPolicy\" class=\"form-select w-auto\" onchange=\"document.getElementById('unconfirmed-warning').hidden = this.value !== '0';\">\n                        <option value=\"0\">Is unconfirmed</option>\n                        <option value=\"1\">Has at least 1 confirmation</option>\n                        <option value=\"3\">Has at least 2 confirmations</option>\n                        <option value=\"2\">Has at least 6 confirmations</option>\n                    </select>\n                    <div class=\"alert alert-warning my-2\" hidden=\"@(Model.SpeedPolicy != 0)\" id=\"unconfirmed-warning\" role=\"alert\">\n                        Choosing to accept an unconfirmed invoice can lead to double-spending and is strongly discouraged.\n                    </div>\n                    <span asp-validation-for=\"SpeedPolicy\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"form-check my-1\">\n                    <input asp-for=\"ShowRecommendedFee\" type=\"checkbox\" class=\"form-check-input\"/>\n                    <label asp-for=\"ShowRecommendedFee\" class=\"form-check-label\"></label>\n                    <div class=\"form-text\">Fee will be shown for BTC and LTC onchain payments only.</div>\n                </div>\n                <div class=\"form-group mt-2\">\n                    <label asp-for=\"RecommendedFeeBlockTarget\" class=\"form-label\"></label>\n                    <input inputmode=\"numeric\" asp-for=\"RecommendedFeeBlockTarget\" class=\"form-control\" min=\"1\" style=\"width:8ch\" />\n                    <span asp-validation-for=\"RecommendedFeeBlockTarget\" class=\"text-danger\"></span>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary mt-2\" id=\"SavePaymentSettings\">Save Payment Settings</button>\n            </form>\n        </div>\n    </div>\n</div>\n\n<partial name=\"_Confirm\" model=\"@(new ConfirmModel($\"{Model.CryptoCode} wallet\", \"Change\", \"Update\"))\" />\n<partial name=\"ShowQR\"/>\n\n@section PageFootContent {\n    <script>\n        const wallets = @Safe.Json(Model.AccountKeys.Select(model => Encoders.Hex.EncodeData(Encoding.UTF8.GetBytes(JsonConvert.SerializeObject(model, Formatting.None)))))\n        const qrApp = initQRShow({ title: \"Wallet QR\" })\n        \n        delegate('click', '#Delete', event => { event.preventDefault() })\n        \n        delegate('click', 'button[data-account-key]', event => {\n            const { accountKey } = event.target.dataset;\n            qrApp.showData(wallets[parseInt(accountKey)]);\n        })\n        \n        if (navigator.registerProtocolHandler) {\n            document.getElementById('RegisterWallet').removeAttribute('hidden');\n            delegate('click', '#RegisterWallet', event => {\n               const { store, scheme, url } = event.target.dataset\n               const uri = decodeURIComponent(url)\n               navigator.registerProtocolHandler(scheme, uri, `BTCPay Wallet: ${store}`)\n            })\n        } \n    </script>\n    <partial name=\"_ValidationScriptsPartial\"/>\n}\n", "@using BTCPayServer.Controllers\n@model WalletPSBTViewModel\n@{\n    var walletId = Context.GetRouteValue(\"walletId\").ToString();\n    var cancelUrl = Model.ReturnUrl ?? Url.Action(nameof(UIWalletsController.WalletTransactions), new { walletId });\n    var backUrl = Model.BackUrl != null ? $\"{Model.BackUrl}?returnUrl={Model.ReturnUrl}\" : null;\n    Layout = \"_LayoutWizard\";\n    ViewData.SetActivePage(WalletsNavPages.PSBT, \"Decode PSBT\", walletId);\n}\n\n@section Navbar {\n    @if (backUrl != null)\n    {\n        <a href=\"@Url.EnsureLocal(backUrl)\" id=\"GoBack\">\n            <vc:icon symbol=\"back\" />\n        </a>\n    }\n    <a href=\"@Url.EnsureLocal(cancelUrl)\" id=\"CancelWizard\" class=\"cancel\">\n        <vc:icon symbol=\"close\" />\n    </a>\n}\n\n@section PageHeadContent {\n    <link href=\"~/vendor/vue-qrcode-reader/vue-qrcode-reader.css\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n}\n\n@section PageFootContent {\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/ur-registry/urlib.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode-reader/VueQrcodeReader.umd.min.js\" asp-append-version=\"true\"></script>\n\n    <script>\n        document.addEventListener(\"DOMContentLoaded\", function () {\n            const psbtHex = @Json.Serialize(Model.PSBTHex);\n            if (psbtHex) {\n                const buffer = new window.URlib.Buffer.from(psbtHex, \"hex\");\n                const cryptoPSBT = new window.URlib.CryptoPSBT(buffer);\n                const encoder = cryptoPSBT.toUREncoder();\n                const modes = {\n                    ur: { title: \"UR\", fragments: encoder.encodeWhole() },\n                    static: { title: \"Static\", fragments: [psbtHex] }\n                };\n                initQRShow({ title: \"Scan the PSBT\", modes });\n            }\n            initCameraScanningApp(\"Scan PSBT\", data => {\n                let hex = data;\n                if (typeof(data) === \"object\") {\n                    if (data.type === \"crypto-psbt\") {\n                        const psbt = window.URlib.CryptoPSBT.fromCBOR(data.cbor);\n                        hex = psbt.getPSBT().toString('hex');\n                    } else {\n                        console.error('Unexpected UR type', data.type)\n                    }\n                } else if (typeof(data) === 'string') {\n                    hex = data;\n                }\n                document.getElementById(\"PSBT\").value = hex;\n                document.getElementById(\"Decode\").click();\n            }, \"scanModal\");\n        });\n    </script>\n}\n\n<header class=\"text-center\">\n    <h1>@ViewData[\"Title\"]</h1>\n    <p class=\"lead text-secondary mt-3 mx-md-5\">You can decode a PSBT by either pasting its content, uploading the file or scanning the wallet QR code.</p>\n</header>\n\n<div class=\"my-5\">\n    @if (Model.Errors != null && Model.Errors.Count != 0)\n    {\n        <div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">\n                <vc:icon symbol=\"close\" />\n            </button>\n            @foreach (var error in Model.Errors)\n            {\n                <span>@error</span>\n                <br/>\n            }\n        </div>\n    }\n\n    <form class=\"form-group\" method=\"post\" asp-action=\"WalletPSBT\" asp-route-walletId=\"@walletId\" enctype=\"multipart/form-data\">\n        <input type=\"hidden\" asp-for=\"ReturnUrl\" />\n        <input type=\"hidden\" asp-for=\"BackUrl\" />\n        <div class=\"form-group\">\n            <label asp-for=\"PSBT\" class=\"form-label\"></label>\n            <textarea class=\"form-control\" rows=\"5\" asp-for=\"PSBT\"></textarea>\n            <span asp-validation-for=\"PSBT\" class=\"text-danger\"></span>\n        </div>\n        <div class=\"form-group\">\n            <label asp-for=\"UploadedPSBTFile\" class=\"form-label\"></label>\n            <input asp-for=\"UploadedPSBTFile\" type=\"file\" class=\"form-control\">\n        </div>\n        <div class=\"d-flex\">\n            <button type=\"submit\" name=\"command\" value=\"decode\" class=\"btn btn-primary mt-2\" id=\"Decode\">Decode PSBT</button>\n            <button type=\"button\" id=\"scanqrcode\" class=\"btn btn-secondary only-for-js ms-3 mt-2\" data-bs-toggle=\"modal\" data-bs-target=\"#scanModal\">Scan wallet QR with camera</button>\n        </div>\n    </form>\n</div>\n<partial name=\"ShowQR\"/>\n<partial name=\"CameraScanner\"/>\n", "@using BTCPayServer.Controllers\n@model WalletPSBTViewModel\n@{\n\tvar walletId = Context.GetRouteValue(\"walletId\").ToString();\n    var cancelUrl = Model.ReturnUrl ?? Url.Action(nameof(UIWalletsController.WalletTransactions), new { walletId });\n    var backUrl = Model.BackUrl != null ? $\"{Model.BackUrl}?returnUrl={Model.ReturnUrl}\" : null;\n\tvar isReady = !Model.HasErrors;\n\tvar isSignable = !isReady;\n\tvar needsExport = !isSignable && !isReady;\n\tLayout = \"_LayoutWizard\";\n\tViewData.SetActivePage(WalletsNavPages.PSBT, isReady ? \"Confirm broadcasting this transaction\" : \"Transaction Details\", walletId);\n}\n\n@section PageHeadContent {\n    <link rel=\"stylesheet\" href=\"~/vendor/highlightjs/default.min.css\" asp-append-version=\"true\">\n    <link href=\"~/vendor/vue-qrcode-reader/vue-qrcode-reader.css\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n    <style>\n        .nav-pills .nav-link.active {\n            color: var(--btcpay-secondary-text-active);\n            background-color: var(--btcpay-secondary-bg-active);\n        }\n    </style>\n}\n\n@section PageFootContent {\n    <script src=\"~/vendor/highlightjs/highlight.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/ur-registry/urlib.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode-reader/VueQrcodeReader.umd.min.js\" asp-append-version=\"true\"></script>\n\n    <script>\n        hljs.initHighlightingOnLoad();\n        \n        document.addEventListener(\"DOMContentLoaded\", () => {\n            const psbtHex = @Json.Serialize(Model.PSBTHex);\n            const buffer = new window.URlib.Buffer.from(psbtHex, \"hex\");\n            const cryptoPSBT = new window.URlib.CryptoPSBT(buffer);\n            const encoder = cryptoPSBT.toUREncoder();\n            const modes = {\n                ur: { title: \"UR\", fragments: encoder.encodeWhole() },\n                static: { title: \"Static\", fragments: [psbtHex] }\n            };\n            const continueCallback = () => {\n                document.querySelector(\"#PSBTOptionsImportHeader button\").click()\n                document.getElementById(\"scanqrcode\").click()\n            };\n            \n            initQRShow({\n                title: \"Scan the PSBT with your wallet\",\n                modes,\n                continueTitle: \"Continue with signed PSBT\",\n                continueCallback\n            });\n            \n            initCameraScanningApp(\"Scan the PSBT from your wallet\", data => {\n                let hex = data;\n                if (typeof(data) === \"object\") {\n                    if (data.type === \"crypto-psbt\") {\n                        const psbt = window.URlib.CryptoPSBT.fromCBOR(data.cbor);\n                        hex = psbt.getPSBT().toString('hex');\n                    } else {\n                        console.error('Unexpected UR type', data.type)\n                    }\n                } else if (typeof(data) === 'string') {\n                    hex = data;\n                }\n                document.getElementById(\"ImportedPSBT\").value = hex;\n                document.getElementById(\"Decode\").click();\n            }, \"scanModal\");\n        });\n    </script>\n}\n\n@section Navbar {\n    @if (backUrl != null)\n    {\n        <a href=\"@Url.EnsureLocal(backUrl)\" id=\"GoBack\">\n            <vc:icon symbol=\"back\" />\n        </a>\n    }\n    <a href=\"@Url.EnsureLocal(cancelUrl)\" id=\"CancelWizard\" class=\"cancel\">\n        <vc:icon symbol=\"close\" />\n    </a>\n}\n\n<header class=\"text-center mb-3\">\n    <h1>@ViewData[\"Title\"]</h1>\n</header>\n\n<partial name=\"_PSBTInfo\" model=\"Model\" />\n\n@if (isSignable)\n{\n    <form method=\"post\" asp-action=\"WalletPSBT\" asp-route-walletId=\"@walletId\" class=\"my-5\">\n        <input type=\"hidden\" asp-for=\"CryptoCode\"/>\n        <input type=\"hidden\" asp-for=\"NBXSeedAvailable\"/>\n        <input type=\"hidden\" asp-for=\"PSBT\"/>\n        <input type=\"hidden\" asp-for=\"FileName\"/>\n        <input type=\"hidden\" asp-for=\"ReturnUrl\" />\n        <input type=\"hidden\" asp-for=\"BackUrl\" />\n        <div class=\"d-flex flex-column flex-sm-row flex-wrap justify-content-center align-items-sm-center\">\n            <button type=\"submit\" id=\"SignTransaction\" name=\"command\" value=\"sign\" class=\"btn btn-primary\">Sign transaction</button>\n        </div>\n    </form>\n} \nelse if (isReady)\n{\n    <form method=\"post\" asp-action=\"WalletPSBTReady\" asp-route-walletId=\"@walletId\" class=\"my-5\">\n        <input type=\"hidden\" asp-for=\"SigningKey\" />\n        <input type=\"hidden\" asp-for=\"SigningKeyPath\" />\n        <partial name=\"SigningContext\" for=\"SigningContext\" />\n        <input type=\"hidden\" asp-for=\"ReturnUrl\" />\n        <input type=\"hidden\" asp-for=\"BackUrl\" />\n        <div class=\"d-flex flex-column flex-sm-row flex-wrap justify-content-center align-items-sm-center\">\n            @if (!string.IsNullOrEmpty(Model.SigningContext?.PayJoinBIP21))\n            {\n                <button type=\"submit\" class=\"btn btn-primary mb-3 mb-sm-0 me-sm-2\" name=\"command\" value=\"payjoin\">Broadcast (Payjoin)</button>\n                <span class=\"mx-2\">or</span>\n                <button type=\"submit\" class=\"btn btn-secondary\" name=\"command\" value=\"broadcast\">Broadcast (Simple)</button>\n            }\n            else\n            {\n                <button id=\"BroadcastTransaction\" type=\"submit\" class=\"btn btn-primary\" name=\"command\" value=\"broadcast\">Broadcast transaction</button>\n            }\n        </div>\n    </form>\n}\nelse\n{\n    <p class=\"lead text-secondary mt-5\">\n        Export the PSBT for your wallet. Sign it with your wallet and \n        import the signed PSBT version here for finalization and broadcasting.\n    </p>\n}\n\n<div class=\"accordion\" id=\"PSBTOptions\">\n    <div class=\"accordion-item\">\n        <h2 class=\"accordion-header\" id=\"PSBTOptionsExportHeader\">\n            <button type=\"button\" class=\"accordion-button @(needsExport ? \"\" : \"collapsed\")\" data-bs-toggle=\"collapse\" data-bs-target=\"#PSBTOptionsExportContent\" aria-controls=\"PSBTOptionsExportContent\" aria-expanded=\"@(needsExport ? \"true\" : \"false\")\">\n                <span class=\"h5\">Export PSBT @(isReady ? \"\" : \"for signing\")</span>\n                <vc:icon symbol=\"caret-down\"/>\n            </button>\n        </h2>\n        <div id=\"PSBTOptionsExportContent\" class=\"accordion-collapse collapse @(needsExport ? \"show\" : \"\")\" aria-labelledby=\"PSBTOptionsExportHeader\" data-bs-parent=\"#PSBTOptions\">\n            <div class=\"accordion-body\">\n                <form method=\"post\" asp-action=\"WalletPSBT\" asp-route-walletId=\"@walletId\" class=\"mb-2\">\n                    <input type=\"hidden\" asp-for=\"CryptoCode\"/>\n                    <input type=\"hidden\" asp-for=\"PSBT\"/>\n                    <input type=\"hidden\" asp-for=\"ReturnUrl\" />\n                    <input type=\"hidden\" asp-for=\"BackUrl\" />\n                    <div class=\"d-flex flex-column flex-sm-row flex-wrap align-items-sm-center\">\n                        <button name=\"command\" type=\"submit\" class=\"btn btn-primary mb-3 mb-sm-0 me-sm-2\" value=\"save-psbt\">Download PSBT file</button>\n                        <button name=\"command\" type=\"button\" class=\"btn btn-primary mb-3 mb-sm-0 me-sm-2 only-for-js\" data-bs-toggle=\"modal\" data-bs-target=\"#scan-qr-modal\">Show QR for wallet camera</button>\n                        <a id=\"ShowRawVersion\" href=\"#ExportOptions\" data-bs-toggle=\"collapse\" class=\"btn btn-link text-secondary\">Show raw versions</a>\n                    </div>\n                </form>\n                <div id=\"ExportOptions\" class=\"collapse\">\n                    <div class=\"pt-4\">\n                        <ul class=\"nav mb-3\" id=\"export-tab\" role=\"tablist\">\n                            <li class=\"nav-item\" role=\"presentation\">\n                                <button class=\"btcpay-pill active\" id=\"export-base64-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#export-base64\" type=\"button\" role=\"tab\" aria-controls=\"export-base64\" aria-selected=\"true\">Base64</button>\n                            </li>\n                            <li class=\"nav-item\" role=\"presentation\">\n                                <button class=\"btcpay-pill\" id=\"export-hex-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#export-hex\" type=\"button\" role=\"tab\" aria-controls=\"export-hex\" aria-selected=\"false\">HEX</button>\n                            </li>\n                            <li class=\"nav-item\" role=\"presentation\">\n                                <button class=\"btcpay-pill\" id=\"export-json-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#export-json\" type=\"button\" role=\"tab\" aria-controls=\"export-json\" aria-selected=\"false\">JSON</button>\n                            </li>\n                        </ul>\n                        <div class=\"tab-content\" id=\"export-tabContent\">\n                            <div class=\"tab-pane fade show active\" id=\"export-base64\" role=\"tabpanel\" aria-labelledby=\"export-base64-tab\">\n                                <pre class=\"mb-4 text-wrap\"><code class=\"text\" id=\"psbt-base64\">@Model.PSBT</code></pre>\n                            </div>\n                            <div class=\"tab-pane fade\" id=\"export-hex\" role=\"tabpanel\" aria-labelledby=\"export-hex-tab\">\n                                <pre class=\"mb-4 text-wrap\"><code class=\"text\">@Model.PSBTHex</code></pre>\n                            </div>\n                            <div class=\"tab-pane fade\" id=\"export-json\" role=\"tabpanel\" aria-labelledby=\"export-json-tab\">\n                                <pre class=\"mb-0\"><code class=\"json\">@Model.Decoded</code></pre>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    @if (!isReady)\n    {\n        <div class=\"accordion-item\">\n            <h2 class=\"accordion-header\" id=\"PSBTOptionsImportHeader\">\n                <button type=\"button\" class=\"accordion-button collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#PSBTOptionsImportContent\" aria-controls=\"PSBTOptionsImportContent\" aria-expanded=\"false\">\n                    <span class=\"h5\">Provide updated PSBT</span>\n                    <vc:icon symbol=\"caret-down\"/>\n                </button>\n            </h2>\n            <div id=\"PSBTOptionsImportContent\" class=\"accordion-collapse collapse\" aria-labelledby=\"PSBTOptionsImportHeader\" data-bs-parent=\"#PSBTOptions\">\n                <div class=\"accordion-body\">\n                    <form method=\"post\" asp-action=\"WalletPSBT\" asp-route-walletId=\"@walletId\" enctype=\"multipart/form-data\" class=\"mb-2\">\n                        <input type=\"hidden\" asp-for=\"ReturnUrl\" />\n                        <input type=\"hidden\" asp-for=\"BackUrl\" />\n                        <div class=\"form-group\">\n                            <label for=\"ImportedPSBT\" class=\"form-label\">PSBT content</label>\n                            <textarea id=\"ImportedPSBT\" name=\"PSBT\" class=\"form-control\" rows=\"5\"></textarea>\n                        </div>\n                        <div class=\"form-group\">\n                            <label asp-for=\"UploadedPSBTFile\" class=\"form-label\"></label>\n                            <input asp-for=\"UploadedPSBTFile\" type=\"file\" class=\"form-control\">\n                        </div>\n                        <div class=\"d-flex flex-column flex-sm-row flex-wrap align-items-sm-center\">\n                            <button type=\"submit\" name=\"command\" value=\"decode\" class=\"btn btn-primary mb-3 mb-sm-0 me-sm-2\" id=\"Decode\">Decode PSBT</button>\n                            <button type=\"button\" id=\"scanqrcode\" class=\"btn btn-primary only-for-js\" data-bs-toggle=\"modal\" data-bs-target=\"#scanModal\">Scan wallet QR with camera</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    }\n    <div class=\"accordion-item\">\n        <h2 class=\"accordion-header\" id=\"PSBTOptionsAdvancedHeader\">\n            <button type=\"button\" class=\"accordion-button collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#PSBTOptionsAdvancedContent\" aria-controls=\"PSBTOptionsAdvancedContent\" aria-expanded=\"false\">\n                <span class=\"h5\">Add metadata to PSBT (advanced)</span>\n                <vc:icon symbol=\"caret-down\"/>\n            </button>\n        </h2>\n        <div id=\"PSBTOptionsAdvancedContent\" class=\"accordion-collapse collapse\" aria-labelledby=\"PSBTOptionsAdvancedHeader\" data-bs-parent=\"#PSBTOptions\">\n            <div class=\"accordion-body\">\n                <form method=\"post\" asp-action=\"WalletPSBT\" asp-route-walletId=\"@walletId\" class=\"mb-2\">\n                    <input type=\"hidden\" asp-for=\"PSBT\"/>\n                    <input type=\"hidden\" asp-for=\"ReturnUrl\" />\n                    <input type=\"hidden\" asp-for=\"BackUrl\" />\n                    <p class=\"mb-2\">For exporting the signed PSBT and transaction information to a wallet, update the PSBT.</p>\n                    <button id=\"update-psbt\" type=\"submit\" name=\"command\" value=\"update\" class=\"btn btn-secondary\">Update PSBT</button>\n                    <p class=\"mt-4 mb-2\">For batching transactions, you can combine this PSBT with another one.</p>\n                    <button id=\"combine-psbt\" type=\"submit\" name=\"command\" value=\"combine\" class=\"btn btn-secondary\">Combine PSBT</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n<partial name=\"ShowQR\"/>\n<partial name=\"CameraScanner\"/>\n", "@inject BTCPayServer.Security.ContentSecurityPolicies csp\n@using Microsoft.AspNetCore.Mvc.ModelBinding\n@using BTCPayServer.Controllers\n@model WalletSendModel\n@{\n    var walletId = Context.GetRouteValue(\"walletId\").ToString();\n    var cancelUrl = Model.ReturnUrl ?? Url.Action(nameof(UIWalletsController.WalletTransactions), new { walletId });\n    var backUrl = Model.BackUrl != null ? $\"{Model.BackUrl}?returnUrl={Model.ReturnUrl}\" : null;\n    Layout = \"_LayoutWizard\";\n    ViewData.SetActivePage(WalletsNavPages.Send, $\"Send {Model.CryptoCode}\", walletId);\n    csp.Add(\"worker-src\", \"blob:\");\n}\n\n@section Navbar {\n    @if (backUrl != null)\n    {\n        <a href=\"@Url.EnsureLocal(backUrl)\" id=\"GoBack\">\n            <vc:icon symbol=\"back\" />\n        </a>\n    }\n    <a href=\"@Url.EnsureLocal(cancelUrl)\" id=\"CancelWizard\" class=\"cancel\">\n        <vc:icon symbol=\"close\" />\n    </a>\n}\n\n@section PageHeadContent\n{\n    <link href=\"~/vendor/vue-qrcode-reader/vue-qrcode-reader.css\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n    <style>\n        .crypto-fee-link { padding-left: 1rem; padding-right: 1rem; }\n        .btn-group > .crypto-fee-link:last-of-type {\n            border-top-right-radius: .2rem  !important;\n            border-bottom-right-radius: .2rem !important;\n        }\n    </style>\n}\n\n@section PageFootContent\n{\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/ur-registry/urlib.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode-reader/VueQrcodeReader.umd.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/js/wallet/wallet-camera-scanner.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/js/wallet/WalletSend.js\" asp-append-version=\"true\"></script>\n\n}\n\n<partial name=\"CameraScanner\"/>\n\n<header class=\"text-center\">\n    <h1>@ViewData[\"Title\"]</h1>\n</header>\n\n<form method=\"post\" asp-action=\"WalletSend\" asp-route-walletId=\"@walletId\" class=\"my-5\">\n    <input type=\"hidden\" asp-for=\"InputSelection\" />\n    <input type=\"hidden\" asp-for=\"FiatDivisibility\" />\n    <input type=\"hidden\" asp-for=\"CryptoDivisibility\" />\n    <input type=\"hidden\" asp-for=\"NBXSeedAvailable\" />\n    <input type=\"hidden\" asp-for=\"Fiat\" />\n    <input type=\"hidden\" asp-for=\"Rate\" />\n    <input type=\"hidden\" asp-for=\"CurrentBalance\" />\n    <input type=\"hidden\" asp-for=\"ImmatureBalance\" />\n    <input type=\"hidden\" asp-for=\"CryptoCode\" />\n    <input type=\"hidden\" asp-for=\"BackUrl\" />\n    <input type=\"hidden\" asp-for=\"ReturnUrl\" />\n    <input type=\"hidden\" name=\"BIP21\" id=\"BIP21\" />\n\n    @if (!ViewContext.ModelState.IsValid)\n    {\n        <ul class=\"text-danger\">\n            @foreach (var errors in ViewData.ModelState.Where(pair => pair.Key == string.Empty && pair.Value.ValidationState == ModelValidationState.Invalid))\n            {\n                foreach (var error in errors.Value.Errors)\n                {\n                    <li>@error.ErrorMessage</li>\n                }\n            }\n        </ul>\n    }\n\n    @if (Model.Outputs.Count == 1)\n    {\n        <div class=\"form-group\">\n            <div class=\"d-flex align-items-center justify-content-between\">\n                <label asp-for=\"Outputs[0].DestinationAddress\" class=\"form-label\"></label>\n                <button type=\"submit\" name=\"command\" value=\"add-output\" class=\"d-inline-block ms-2 btn text-primary btn-link p-0 mb-2\">\n                    <span class=\"fa fa-plus\"></span> Add another destination\n                </button>\n            </div>\n            <input asp-for=\"Outputs[0].DestinationAddress\" class=\"form-control font-monospace\" autofocus autocomplete=\"off\" />\n            <span asp-validation-for=\"Outputs[0].DestinationAddress\" class=\"text-danger\"></span>\n        </div>\n        <div class=\"form-group\">\n            <div class=\"d-flex align-items-center justify-content-between\">\n                <label asp-for=\"Outputs[0].Amount\" class=\"form-label\"></label>\n                <button type=\"submit\" name=\"command\" value=\"toggle-input-selection\" class=\"d-inline-block ms-2 btn text-primary btn-link p-0 mb-2\" id=\"toggleInputSelection\"><span class=\"fa fa-@(Model.InputSelection ? \"eye-slash\" : \"eye\") \"></span> @(Model.InputSelection ? \"Hide\" : \"Show\") coin selection</button>\n            </div>\n            <div class=\"input-group\">\n                <input asp-for=\"Outputs[0].Amount\" type=\"number\" inputmode=\"decimal\" step=\"any\" min=\"0\" asp-format=\"{0}\" class=\"form-control output-amount hide-number-spin\" />\n                <div class=\"input-group-text fiat-value\" style=\"display:none;\">\n                    <span class=\"input-group-text p-0 border-0\">=</span>\n                    <input type=\"number\" inputmode=\"decimal\" class=\"input-group-text fiat-value-edit-input py-0 border-0 hide-number-spin\" min=\"0\" step=\"any\" style=\"max-width:100px\" />\n                    <span class=\"input-group-text p-0 border-0\">@Model.Fiat</span>\n                </div>\n            </div>\n            <span asp-validation-for=\"Outputs[0].Amount\" class=\"text-danger\"></span>\n            <div class=\"form-text crypto-info\">\n                Your available balance is\n                <button type=\"button\" class=\"crypto-balance-link btn btn-link p-0 align-baseline\">@Model.CurrentBalance</button> <span>@Model.CryptoCode</span>.\n                @if (Model.ImmatureBalance > 0)\n                {\n                    <span><br><span class=\"text-warning\">\u26a0</span> @Model.ImmatureBalance @Model.CryptoCode are still immature and require additional confirmations.</span>\n                }\n            </div>\n        </div>\n    }\n    else\n    {\n        <div class=\"list-group list-group-flush\">\n            @for (var index = 0; index < Model.Outputs.Count; index++)\n            {\n                <input type=\"hidden\" asp-for=\"Outputs[index].PayoutId\" />\n                <div class=\"list-group-item d-block px-0 pt-0 pb-3 mb-3\">\n                    <div class=\"form-group\">\n                        <div class=\"d-flex align-items-center justify-content-between\">\n                            <label asp-for=\"Outputs[index].DestinationAddress\" class=\"form-label\"></label>\n                            <button type=\"submit\" name=\"command\" value=\"@($\"remove-output:{index}\")\" class=\"d-inline-block ms-2 btn text-danger btn-link p-0 mb-2\">\n                                <span class=\"fa fa-times\"></span> Remove Destination\n                            </button>\n                        </div>\n                        <input asp-for=\"Outputs[index].DestinationAddress\" class=\"form-control\" autocomplete=\"off\"/>\n                        <span asp-validation-for=\"Outputs[index].DestinationAddress\" class=\"text-danger\"></span>\n                    </div>\n                    <div class=\"form-group\">\n                        <label asp-for=\"Outputs[index].Amount\" class=\"form-label\"></label>\n                        <div class=\"input-group\">\n                            <input asp-for=\"Outputs[index].Amount\" type=\"number\" min=\"0\" step=\"any\" asp-format=\"{0}\" class=\"form-control output-amount hide-number-spin\" />\n                            <div class=\"input-group-text fiat-value\" style=\"display:none;\">\n                                <span class=\"input-group-text p-0 border-0\">=</span>\n                                <input type=\"number\" inputmode=\"decimal\" class=\"input-group-text fiat-value-edit-input py-0 border-0 hide-number-spin\" min=\"0\" step=\"any\" style=\"max-width:100px\" />\n                                <span class=\"input-group-text p-0 border-0\">@Model.Fiat</span>\n                            </div>\n                        </div>\n                        <div class=\"form-text crypto-info\">\n                            Your available balance is\n                            <button type=\"button\" class=\"crypto-balance-link btn btn-link p-0 align-baseline\">@Model.CurrentBalance</button> <span>@Model.CryptoCode</span>.\n                            @if (Model.ImmatureBalance > 0)\n                            {\n                                <span><br>Note: @Model.ImmatureBalance @Model.CryptoCode are still immature and require additional confirmations.</span>\n                            }\n                        </div>\n                        <span asp-validation-for=\"Outputs[index].Amount\" class=\"text-danger\"></span>\n                    </div>\n                    <div class=\"form-check\">\n                        <input type=\"checkbox\" asp-for=\"Outputs[index].SubtractFeesFromOutput\" class=\"form-check-input subtract-fees\" />\n                        <label asp-for=\"Outputs[index].SubtractFeesFromOutput\" class=\"form-check-label\"></label>\n                        <span asp-validation-for=\"Outputs[index].SubtractFeesFromOutput\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n            }\n        </div>\n        <div class=\"d-grid gap-3 d-md-block mt-n2\">\n            <button type=\"submit\" name=\"command\" value=\"add-output\" class=\"btn btn-secondary me-md-1\"><span class=\"fa fa-plus\"></span> Add another destination</button>\n            <button type=\"submit\" name=\"command\" value=\"toggle-input-selection\" class=\"btn btn-secondary\" id=\"toggleInputSelection\"><span class=\"fa fa-@(Model.InputSelection ? \"eye-slash\" : \"eye\") \"></span> @(Model.InputSelection ? \"Hide\" : \"Show\") coin selection</button>\n        </div>\n    }\n\n    @if (Model.InputSelection)\n    {\n        <partial name=\"CoinSelection\" />\n    }\n\n    <div class=\"form-group my-4\">\n        <label asp-for=\"FeeSatoshiPerByte\" class=\"form-label\"></label>\n        <input asp-for=\"FeeSatoshiPerByte\" type=\"number\" inputmode=\"numeric\" min=\"0\" step=\"any\" class=\"form-control\" style=\"max-width:14ch;\" />\n        <span asp-validation-for=\"FeeSatoshiPerByte\" class=\"text-danger\"></span>\n        <span id=\"FeeRate-Error\" class=\"text-danger\"></span>\n        @if (Model.RecommendedSatoshiPerByte.Any())\n        {\n            <div class=\"text-start mt-4 d-flex align-items-sm-center flex-column flex-sm-row\">\n                <span class=\"text-secondary me-3\">\n                    Confirm in the next\n                </span>\n                <div class=\"btn-group btn-group-toggle feerate-options mt-2 mt-sm-0\" role=\"group\" data-bs-toggle=\"buttons\">\n                    @for (var index = 0; index < Model.RecommendedSatoshiPerByte.Count; index++)\n                    {\n                        var feeRateOption = Model.RecommendedSatoshiPerByte[index];\n                        <button type=\"button\" class=\"btn btn-sm btn-secondary crypto-fee-link\" value=\"@feeRateOption.FeeRate\" data-bs-toggle=\"tooltip\" title=\"@feeRateOption.FeeRate sat/b\">\n                            @feeRateOption.Target.TimeString()\n                        </button>\n                        <input type=\"hidden\" asp-for=\"RecommendedSatoshiPerByte[index].Target\" />\n                        <input type=\"hidden\" asp-for=\"RecommendedSatoshiPerByte[index].FeeRate\" />\n                    }\n                </div>\n            </div>\n        }\n    </div>\n    @if (Model.Outputs.Count == 1)\n    {\n        <div class=\"form-group\">\n            <div class=\"form-check\">\n                <input type=\"checkbox\" asp-for=\"Outputs[0].SubtractFeesFromOutput\" class=\"form-check-input subtract-fees\" />\n                <label asp-for=\"Outputs[0].SubtractFeesFromOutput\" class=\"form-check-label\"></label>\n                <span asp-validation-for=\"Outputs[0].SubtractFeesFromOutput\" class=\"text-danger\"></span>\n            </div>\n        </div>\n    }\n\n    <div class=\"my-4\">\n        <button class=\"d-inline-flex align-items-center btn btn-link text-primary fw-semibold p-0\" type=\"button\" id=\"AdvancedSettingsButton\" data-bs-toggle=\"collapse\" data-bs-target=\"#AdvancedSettings\" aria-expanded=\"false\" aria-controls=\"AdvancedSettings\">\n            <vc:icon symbol=\"caret-down\"/>\n            <span class=\"ms-1\">Advanced settings</span>\n        </button>\n        <div id=\"AdvancedSettings\" class=\"collapse\">\n            <div class=\"pt-3 pb-1\">\n                <div class=\"form-group\">\n                    <div class=\"form-check\">\n                        <input asp-for=\"NoChange\" class=\"form-check-input\" />\n                        <label asp-for=\"NoChange\" class=\"form-check-label\"></label>\n                        <a href=\"https://docs.btcpayserver.org/Wallet/#dont-create-utxo-change\" target=\"_blank\" rel=\"noreferrer noopener\">\n                            <vc:icon symbol=\"info\" />\n                        </a>\n                    </div>\n                </div>                        \n                <div class=\"form-group\">\n                    <div class=\"form-check\">\n                        <input asp-for=\"AlwaysIncludeNonWitnessUTXO\" class=\"form-check-input\"/>\n                        <label asp-for=\"AlwaysIncludeNonWitnessUTXO\" class=\"form-check-label\"></label>\n                    </div>\n                </div>    \n                @if (Model.SupportRBF)\n                {\n                    <div class=\"form-group\">\n                        <label asp-for=\"AllowFeeBump\" class=\"form-label\"></label>\n                        <a href=\"https://docs.btcpayserver.org/Wallet/#rbf-replace-by-fee\" target=\"_blank\" rel=\"noreferrer noopener\">\n                            <vc:icon symbol=\"info\" />\n                        </a>\n                        <select asp-for=\"AllowFeeBump\" class=\"form-select w-auto\">\n                            <option value=\"Maybe\">Randomize for higher privacy</option>\n                            <option value=\"Yes\">Yes</option>\n                            <option value=\"No\">No</option>\n                        </select>\n                    </div>\n                }\n                @if (!string.IsNullOrEmpty(Model.PayJoinBIP21))\n                {\n                    <div class=\"form-group\">\n                        <label asp-for=\"PayJoinBIP21\" class=\"form-label\"></label>\n                        <input asp-for=\"PayJoinBIP21\" class=\"form-control\" />\n                        <span asp-validation-for=\"PayJoinBIP21\" class=\"text-danger\"></span>\n                    </div>\n                }\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group d-grid d-sm-flex flex-wrap gap-3 mt-2\">\n        <button type=\"submit\" id=\"SignTransaction\" name=\"command\" value=\"sign\" class=\"btn btn-primary\">Sign transaction</button>\n        <button type=\"submit\" id=\"ScheduleTransaction\" name=\"command\" value=\"schedule\" class=\"btn btn-secondary\">Schedule transaction</button>\n        <a class=\"btn btn-secondary\" asp-controller=\"UIWallets\" asp-action=\"WalletPSBT\" asp-route-walletId=\"@walletId\" asp-route-returnUrl=\"@Model.ReturnUrl\" id=\"PSBT\">PSBT</a>\n        <button type=\"button\" id=\"bip21parse\" class=\"btn btn-secondary\" title=\"Paste BIP21/Address\"><i class=\"fa fa-paste\"></i></button>\n        <button type=\"button\" id=\"scanqrcode\" class=\"btn btn-secondary only-for-js\" data-bs-toggle=\"modal\" data-bs-target=\"#scanModal\" title=\"Scan BIP21/Address with camera\"><i class=\"fa fa-camera\"></i></button>\n    </div>\n\n<vc:ui-extension-point location=\"onchain-wallet-send\" model=\"@Model\"/>\n</form>\n"], "fixing_code": ["using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing NBitcoin.Crypto;\n\nnamespace BTCPayServer.Security\n{\n    public class ConsentSecurityPolicy\n    {\n        public ConsentSecurityPolicy(string name, string value)\n        {\n            if (value.Contains(';', StringComparison.OrdinalIgnoreCase))\n                throw new FormatException();\n            _Value = value;\n            _Name = name;\n        }\n\n\n        private readonly string _Name;\n        public string Name\n        {\n            get\n            {\n                return _Name;\n            }\n        }\n\n        private readonly string _Value;\n        public string Value\n        {\n            get\n            {\n                return _Value;\n            }\n        }\n\n\n        public override bool Equals(object obj)\n        {\n            ConsentSecurityPolicy item = obj as ConsentSecurityPolicy;\n            if (item == null)\n                return false;\n            return GetHashCode().Equals(item.GetHashCode());\n        }\n        public static bool operator ==(ConsentSecurityPolicy a, ConsentSecurityPolicy b)\n        {\n            if (System.Object.ReferenceEquals(a, b))\n                return true;\n            if (((object)a == null) || ((object)b == null))\n                return false;\n            return a.GetHashCode() == b.GetHashCode();\n        }\n\n        public static bool operator !=(ConsentSecurityPolicy a, ConsentSecurityPolicy b)\n        {\n            return !(a == b);\n        }\n\n        public override int GetHashCode()\n        {\n            return HashCode.Combine(Name, Value);\n        }\n    }\n    public class ContentSecurityPolicies\n    {\n        public ContentSecurityPolicies()\n        {\n\n        }\n\n        readonly HashSet<ConsentSecurityPolicy> _Policies = new HashSet<ConsentSecurityPolicy>();\n\n        /// <summary>\n        /// Allow a specific script as event handler\n        /// </summary>\n        /// <param name=\"script\"></param>\n        public void AllowUnsafeHashes(string script = null)\n        {\n            if (!allowUnsafeHashes)\n            {\n                Add(\"script-src\", $\"'unsafe-hashes'\");\n                allowUnsafeHashes = true;\n            }\n            if (script != null)\n            {\n                var sha = GetSha256(script);\n                Add(\"script-src\", $\"'sha256-{sha}'\");\n            }\n        }\n\n        bool allowUnsafeHashes = false;\n        /// <summary>\n        /// Allow the injection of script tag with the following script\n        /// </summary>\n        /// <param name=\"script\"></param>\n        public void AllowInline(string script)\n        {\n            ArgumentNullException.ThrowIfNull(script);\n            var sha = GetSha256(script);\n            Add(\"script-src\", $\"'sha256-{sha}'\");\n        }\n        static string GetSha256(string script)\n        {\n            return Convert.ToBase64String(Hashes.SHA256(Encoding.UTF8.GetBytes(script.Replace(\"\\r\\n\", \"\\n\", StringComparison.Ordinal))));\n        }\n\n        public void Add(string name, string value)\n        {\n            Add(new ConsentSecurityPolicy(name, value));\n        }\n        public void Add(ConsentSecurityPolicy policy)\n        {\n            _Policies.Add(policy);\n        }\n\n        public void UnsafeEval()\n        {\n            Add(\"script-src\", \"'unsafe-eval'\");\n        }\n\n        public IEnumerable<ConsentSecurityPolicy> Rules => _Policies;\n        public bool HasRules => _Policies.Count != 0;\n\n        public override string ToString()\n        {\n            StringBuilder value = new StringBuilder();\n            bool firstGroup = true;\n            foreach (var group in Rules.GroupBy(r => r.Name))\n            {\n                if (!firstGroup)\n                {\n                    value.Append(';');\n                }\n                HashSet<string> values = new HashSet<string>();\n                List<string> valuesList = new List<string>();\n                values.Add(group.Key);\n                valuesList.Add(group.Key);\n                foreach (var v in group)\n                {\n                    if (values.Add(v.Value))\n                        valuesList.Add(v.Value);\n                }\n                value.Append(String.Join(\" \", valuesList.OfType<object>().ToArray()));\n                firstGroup = false;\n            }\n            return value.ToString();\n        }\n    }\n}\n", "using System;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing BTCPayServer.Security;\nusing Microsoft.AspNetCore.Mvc.Filters;\n\nnamespace BTCPayServer.Filters\n{\n    public interface IContentSecurityPolicy : IFilterMetadata { }\n    public enum CSPTemplate\n    {\n        AntiXSS\n    }\n    public class ContentSecurityPolicyAttribute : Attribute, IActionFilter, IContentSecurityPolicy\n    {\n        public ContentSecurityPolicyAttribute()\n        {\n\n        }\n        public ContentSecurityPolicyAttribute(CSPTemplate template)\n        {\n            if (template == CSPTemplate.AntiXSS)\n            {\n                AutoSelf = false;\n                FixWebsocket = false;\n                UnsafeInline = false;\n                ScriptSrc = \"'self'\";\n            }\n        }\n\n        public void OnActionExecuted(ActionExecutedContext context)\n        {\n\n        }\n        public bool Enabled { get; set; } = true;\n        public bool AutoSelf { get; set; } = true;\n        public bool UnsafeInline { get; set; } = true;\n        public bool FixWebsocket { get; set; } = true;\n        public string FontSrc { get; set; } = null;\n        public string ImgSrc { get; set; } = null;\n        public string DefaultSrc { get; set; }\n        public string StyleSrc { get; set; }\n        public string ScriptSrc { get; set; }\n        public string ManifestSrc { get; set; }\n\n        public void OnActionExecuting(ActionExecutingContext context)\n        {\n            if (!context.IsEffectivePolicy<IContentSecurityPolicy>(this) || !Enabled)\n                return;\n            var policies = context.HttpContext.RequestServices.GetService(typeof(ContentSecurityPolicies)) as ContentSecurityPolicies;\n            if (policies == null)\n                return;\n            if (DefaultSrc != null)\n            {\n                policies.Add(new ConsentSecurityPolicy(\"default-src\", DefaultSrc));\n            }\n            if (UnsafeInline)\n            {\n                policies.Add(new ConsentSecurityPolicy(\"script-src\", \"'unsafe-inline'\"));\n            }\n            if (!string.IsNullOrEmpty(FontSrc))\n            {\n                policies.Add(new ConsentSecurityPolicy(\"font-src\", FontSrc));\n            }\n            if (!string.IsNullOrEmpty(ManifestSrc))\n            {\n                policies.Add(new ConsentSecurityPolicy(\"manifest-src\", FontSrc));\n            }\n\n            if (!string.IsNullOrEmpty(ImgSrc))\n            {\n                policies.Add(new ConsentSecurityPolicy(\"img-src\", ImgSrc));\n            }\n\n            if (!string.IsNullOrEmpty(StyleSrc))\n            {\n                policies.Add(new ConsentSecurityPolicy(\"style-src\", StyleSrc));\n            }\n\n            if (!string.IsNullOrEmpty(ScriptSrc))\n            {\n                policies.Add(new ConsentSecurityPolicy(\"script-src\", ScriptSrc));\n            }\n\n            if (FixWebsocket && AutoSelf) // Self does not match wss:// and ws:// :(\n            {\n                var request = context.HttpContext.Request;\n\n                var url = string.Concat(\n                        request.Scheme.Equals(\"http\", StringComparison.OrdinalIgnoreCase) ? \"ws\" : \"wss\",\n                        \"://\",\n                        request.Host.ToUriComponent(),\n                        request.PathBase.ToUriComponent());\n                policies.Add(new ConsentSecurityPolicy(\"connect-src\", url));\n            }\n\n            context.HttpContext.Response.OnStarting(() =>\n            {\n                if (!policies.HasRules)\n                    return Task.CompletedTask;\n                if (AutoSelf)\n                {\n                    bool hasSelf = false;\n                    foreach (var group in policies.Rules.GroupBy(p => p.Name))\n                    {\n                        hasSelf = group.Any(g => g.Value.Contains(\"'self'\", StringComparison.OrdinalIgnoreCase));\n                        if (!hasSelf && !group.Any(g => g.Value.Contains(\"'none'\", StringComparison.OrdinalIgnoreCase) ||\n                                           g.Value.Contains('*', StringComparison.OrdinalIgnoreCase)))\n                        {\n                            policies.Add(new ConsentSecurityPolicy(group.Key, \"'self'\"));\n                        }\n                    }\n                }\n                context.HttpContext.Response.SetHeader(\"Content-Security-Policy\", policies.ToString());\n                return Task.CompletedTask;\n            });\n        }\n    }\n}\n", "@model BTCPayServer.Plugins.Crowdfund.Models.ViewCrowdfundViewModel\n@using BTCPayServer.Plugins.Crowdfund.Models\n@inject BTCPayServer.Services.BTCPayServerEnvironment Env\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@{\n\tViewData[\"Title\"] = Model.Title;\n\tLayout = null;\n\tCsp.UnsafeEval();\n\tif (!string.IsNullOrEmpty(Model.DisqusShortname))\n\t{\n\t\tCsp.Add(\"script-src\", $\"https://{Model.DisqusShortname}.disqus.com\");\n\t\tCsp.Add(\"script-src\", \"https://c.disquscdn.com\");\n\t}\n}\n<!DOCTYPE html>\n<html class=\"h-100\" @(Env.IsDeveloping ? \" data-devenv\" : \"\")>\n<head>\n    <partial name=\"LayoutHead\"/>\n    <partial name=\"LayoutHeadStoreBranding\" model=\"@(Model.BrandColor, Model.CssFileId, Model.CustomCSSLink, Model.EmbeddedCSS)\" />\n    <link href=\"~/vendor/bootstrap-vue/bootstrap-vue.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/crowdfund/styles/main.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n\n    @if (!string.IsNullOrEmpty(Model.CustomCSSLink))\n    {\n        <link href=\"@Model.CustomCSSLink\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n    }\n    @if (!string.IsNullOrEmpty(Model.EmbeddedCSS))\n    {\n        @Safe.Raw($\"<style>{Model.EmbeddedCSS}</style>\")\n    }\n    <style>\n        #crowdfund-main-image {\n            border-radius: var(--btcpay-border-radius);\n            object-fit: cover;\n            max-width: 100%;\n            max-height: 40vh;\n        }\n        #crowdfund-body-description {\n            font-size: 16px;\n        }\n    </style>\n    <vc:ui-extension-point location=\"crowdfund-head\" model=\"@Model\"></vc:ui-extension-point>\n</head>\n<body class=\"min-vh-100 p-2\">\n@if (!Model.Enabled)\n{\n    <div class=\"alert alert-warning text-center sticky-top mb-0 rounded-0\" role=\"alert\">\n        This crowdfund page is not publically viewable!\n    </div>\n}\n@if (Model.AnimationsEnabled)\n{\n    <canvas id=\"fireworks\" class=\"d-none\"></canvas>\n}\n\n<div class=\"public-page-wrap flex-column container\" id=\"app\" @(Model.SimpleDisplay ? \"\" : \"v-cloak\")>\n    @if (!string.IsNullOrEmpty(Model.MainImageUrl))\n    {\n        <img v-if=\"srvModel.mainImageUrl\" :src=\"srvModel.mainImageUrl\" :alt=\"srvModel.title\" id=\"crowdfund-main-image\" asp-append-version=\"true\"/>\n    }\n    <div class=\"d-flex flex-column justify-content-between p-3 text-center\" id=\"crowdfund-header-container\">\n\t  <h1 class=\"mb-3\">{{ srvModel.title }}</h1>\n        @if (!string.IsNullOrEmpty(Model.Tagline))\n        {\n            <h2 class=\"h3 mb-3 fw-semibold\" v-if=\"srvModel.tagline\" v-text=\"srvModel.tagline\"></h2>\n        }\n        @if (Model.TargetAmount.HasValue)\n        {\n            <span v-if=\"srvModel.targetAmount\" class=\"mt-3\" id=\"crowdfund-header-target\">\n                <h3 class=\"d-inline-block\">\n                    <span class=\"badge bg-info px-3\" v-text=\"`${targetAmount} ${targetCurrency}`\">@Math.Round(Model.TargetAmount.GetValueOrDefault(0)) @Model.TargetCurrency</span>\n                </h3>\n                @if (Model.ResetEveryAmount > 0 && !Model.NeverReset)\n                {\n                    <span v-if=\"srvModel.resetEvery !== 'Never'\"\n                          class=\"h5 ms-2\"\n                          v-b-tooltip\n                          :title=\"'Goal resets every ' + srvModel.resetEveryAmount + ' ' + srvModel.resetEvery + ((srvModel.resetEveryAmount>1)?'s': '')\">\n                        Dynamic\n                    </span>\n                }\n                @if (Model.EnforceTargetAmount)\n                {\n                    <span v-if=\"srvModel.enforceTargetAmount\" class=\"h5 ms-2\">\n                        Hardcap Goal\n                        <span v-b-tooltip title=\"No contributions allowed after the goal has been reached\"><vc:icon symbol=\"info\" /></span>\n                    </span>\n                }\n                else\n                {\n                    <span v-if=\"!srvModel.enforceTargetAmount\" class=\"h5 ms-2\">\n                        Softcap Goal\n                        <span v-b-tooltip title=\"Contributions allowed even after goal is reached\"><vc:icon symbol=\"info\" /></span>\n                    </span>\n                }\n            </span>\n        }\n        @if (!Model.Started && Model.StartDate.HasValue)\n        {\n            <h6 class=\"text-muted fst-italic mt-3\" v-if=\"!started && srvModel.startDate\" v-b-tooltip :title=\"startDate\" v-text=\"`Starts in ${startDiff}`\" data-test=\"time-state\">\n                Starts @TimeZoneInfo.ConvertTimeFromUtc(Model.StartDate.Value, TimeZoneInfo.Local)\n            </h6>\n        }\n        else if (Model.Started && !Model.Ended && Model.EndDate.HasValue)\n        {\n            <h6 class=\"text-muted fst-italic mt-3\" v-if=\"started && !ended && srvModel.endDate\" v-b-tooltip :title=\"endDate\" v-text=\"`Ends in ${endDiff}`\" data-test=\"time-state\">\n                Ends @TimeZoneInfo.ConvertTimeFromUtc(Model.EndDate.Value, TimeZoneInfo.Local)\n            </h6>\n        }\n        else if (Model.Started && !Model.Ended && !Model.EndDate.HasValue)\n        {\n            <h6 class=\"text-muted fst-italic mt-3\" v-if=\"started && !ended && !srvModel.endDate\" v-b-tooltip title=\"No set end date\" data-test=\"time-state\">\n                Currently active!\n            </h6>\n        }\n    </div>\n\n    @if (Model.TargetAmount.HasValue)\n    {\n        <div class=\"progress rounded-pill\" v-if=\"srvModel.targetAmount\" id=\"crowdfund-progress-bar\">\n            <div class=\"progress-bar bg-primary\"\n                 role=\"progressbar\"\n                 style=\"width:@(Model.Info.ProgressPercentage + \"%\")\"\n                 :aria-valuenow=\"srvModel.info.progressPercentage\"\n                 v-bind:style=\"{ width: srvModel.info.progressPercentage + '%' }\"\n                 aria-valuemin=\"0\"\n                 id=\"crowdfund-progress-bar-confirmed-bar\"\n                 v-b-tooltip\n                 :title=\"parseFloat(srvModel.info.progressPercentage).toFixed(2) + '% contributions'\"\n                 aria-valuemax=\"100\">\n            </div>\n            <div class=\"progress-bar bg-warning\"\n                 role=\"progressbar\"\n                 id=\"crowdfund-progress-bar-pending-bar\"\n                 style=\"width:@(Model.Info.PendingProgressPercentage + \"%\")\"\n                 :aria-valuenow=\"srvModel.info.pendingProgressPercentage\"\n                 v-bind:style=\"{ width: srvModel.info.pendingProgressPercentage + '%' }\"\n                 v-b-tooltip\n                 :title=\"parseFloat(srvModel.info.pendingProgressPercentage).toFixed(2) + '% contributions pending confirmation'\"\n                 aria-valuemin=\"0\"\n                 aria-valuemax=\"100\">\n            </div>\n        </div>\n    }\n\n    <div class=\"row py-2 text-center crowdfund-stats\">\n        <div class=\"col-sm border-end p-3 text-center\" id=\"crowdfund-body-raised-amount\">\n            <h3 v-text=\"`${raisedAmount} ${targetCurrency}`\">@Math.Round(Model.Info.CurrentAmount + Model.Info.CurrentPendingAmount, Model.CurrencyData.Divisibility) @Model.TargetCurrency</h3>\n            <h5 class=\"text-muted fst-italic mb-0\">Raised</h5>\n            <b-tooltip target=\"crowdfund-body-raised-amount\" v-if=\"paymentStats && paymentStats.length > 0\" class=\"only-for-js\">\n                <ul class=\"p-0 text-uppercase\">\n                    <li v-for=\"stat of paymentStats\" class=\"list-unstyled\">\n                        {{stat.label}} <span v-if=\"stat.lightning\" class=\"fa fa-bolt\"></span> {{stat.value}}\n                    </li>\n                </ul>\n            </b-tooltip>\n        </div>\n\n        <div class=\"col-sm border-end p-3 text-center\" id=\"crowdfund-body-goal-raised\">\n            <h3 v-text=\"`${percentageRaisedAmount}%`\">@Math.Round(Model.Info.PendingProgressPercentage.GetValueOrDefault(0) + Model.Info.ProgressPercentage.GetValueOrDefault(0))%</h3>\n            <h5 class=\"text-muted fst-italic mb-0\">Of Goal</h5>\n            <b-tooltip target=\"crowdfund-body-goal-raised\" v-if=\"srvModel.resetEvery !== 'Never'\" class=\"only-for-js\">\n                Goal resets every {{srvModel.resetEveryAmount}} {{srvModel.resetEvery}} {{srvModel.resetEveryAmount>1?'s': ''}}\n            </b-tooltip>\n        </div>\n\n        <div class=\"col-sm border-end p-3 text-center\" id=\"crowdfund-body-total-contributors\">\n            <h3 v-text=\"new Intl.NumberFormat().format(srvModel.info.totalContributors)\">@Model.Info.TotalContributors</h3>\n            <h5 class=\"text-muted fst-italic mb-0\">Contributors</h5>\n        </div>\n        \n        @if (Model.StartDate.HasValue || Model.EndDate.HasValue)\n        {\n            <div class=\"col-sm border-end p-3 text-center\" id=\"crowdfund-body-campaign-dates\">\n                @if (!Model.Started && Model.StartDate.HasValue)\n                {\n                    <div v-if=\"startDiff\">\n                        <h3 v-text=\"startDiff\">@TimeZoneInfo.ConvertTimeFromUtc(Model.StartDate.Value, TimeZoneInfo.Local)</h3>\n                        <h5 class=\"text-muted fst-italic mb-0\" v-text=\"'Left to start'\">Start Date</h5>\n                    </div>\n                }\n                else if (Model.Started && !Model.Ended && Model.EndDate.HasValue)\n                {\n                    <div v-if=\"!startDiff && endDiff\">\n                        <h3 v-text=\"endDiff\">@TimeZoneInfo.ConvertTimeFromUtc(Model.EndDate.Value, TimeZoneInfo.Local)</h3>\n                        <h5 class=\"text-muted fst-italic mb-0\" v-text=\"'Left'\">End Date</h5>\n                    </div>\n                }\n                else if (Model.Ended)\n                {\n                    <div v-if=\"ended\">\n                        <h3 class=\"mb-0\">Campaign not active</h3>\n                    </div>\n                }\n                <b-tooltip v-if=\"startDate || endDate\" target=\"crowdfund-body-campaign-dates\" class=\"only-for-js\">\n                    <ul class=\"p-0\">\n                        @if (Model.StartDate.HasValue)\n                        {\n                            <li v-if=\"startDate\" class=\"list-unstyled\">\n                                {{started? \"Started\" : \"Starts\"}} {{startDate}}\n                            </li>\n                        }\n                        @if (Model.EndDate.HasValue)\n                        {\n                            <li v-if=\"endDate\" class=\"list-unstyled\">\n                                {{ended? \"Ended\" : \"Ends\"}} {{endDate}}\n                            </li>\n                        }\n                    </ul>\n                </b-tooltip>\n            </div>\n        }\n    </div>\n\n    <div class=\"text-center mb-4\" id=\"crowdfund-body-header\">\n        <button v-if=\"active\" id=\"crowdfund-body-header-cta\" class=\"btn btn-lg btn-primary py-2 px-5 only-for-js\" v-on:click=\"contributeModalOpen = true\">Contribute</button>\n    </div>\n\n    <div class=\"row mt-4 justify-content-between gap-5\">\n        <div class=\"col-lg-7 col-sm-12\" id=\"crowdfund-body-description-container\">\n            <template v-if=\"srvModel.disqusEnabled && srvModel.disqusShortname\">\n                <b-tabs>\n                    <b-tab title=\"Details\" active>\n                        <div class=\"overflow-hidden pt-3\" v-html=\"srvModel.description\" id=\"crowdfund-body-description\">\n                        </div>\n                    </b-tab>\n                    <b-tab title=\"Discussion\">\n                        <div id=\"disqus_thread\" class=\"mt-4\"></div>\n                    </b-tab>\n                </b-tabs>\n            </template>\n            <template v-else>\n                <div class=\"overflow-hidden\" v-html=\"srvModel.description\" id=\"crowdfund-body-description\">\n                </div>\n            </template>\n        </div>\n        <div class=\"col-lg-4 col-sm-12\" id=\"crowdfund-body-contribution-container\">\n            <contribute :target-currency=\"srvModel.targetCurrency\"\n                        :loading=\"loading\"\n                        :display-perks-ranking=\"srvModel.displayPerksRanking\"\n                        :perks-value=\"srvModel.perksValue\"\n                        :active=\"active\"\n                        :in-modal=\"false\"\n                        :perks=\"perks\">\n            </contribute>\n        </div>\n    </div>\n\t<noscript v-pre>\n        <div class=\"row justify-content-between\">\n            <div class=\"col-md-7  col-sm-12\">\n                <div class=\"overflow-hidden\">@Safe.Raw(Model.Description)</div>\n            </div>\n            <div class=\"col-md-4 col-sm-12\">\n                <partial\n                    name=\"Crowdfund/Public/ContributeForm\"\n                    model=\"@(new ContributeToCrowdfund { ViewCrowdfundViewModel = Model, RedirectToCheckout = true })\">\n                </partial>\n            </div>\n        </div>\n    </noscript>\n    <div class=\"text-center text-muted mt-4\" v-text=\"`Updated ${lastUpdated}`\">Updated @Model.Info.LastUpdated</div>\n    <b-modal title=\"Contribute\" v-model=\"contributeModalOpen\" size=\"lg\" ok-only=\"true\" ok-variant=\"secondary\" ok-title=\"Close\" ref=\"modalContribute\">\n        <contribute v-if=\"contributeModalOpen\"\n                    :target-currency=\"srvModel.targetCurrency\"\n                    :active=\"active\"\n                    :perks=\"srvModel.perks\"\n                    :loading=\"loading\"\n                    :in-modal=\"true\">\n        </contribute>\n    </b-modal>\n\n    <footer class=\"store-footer\">\n        <a href=\"https://btcpayserver.org\" target=\"_blank\" rel=\"noreferrer noopener\">\n            Powered by <partial name=\"_StoreFooterLogo\" />\n        </a>\n    </footer>\n</div>\n\n<template id=\"perks-template\">\n    <div class=\"perks-container\">\n        <perk v-if=\"!perks || perks.length === 0\"\n              :perk=\"{title: 'Donate Custom Amount', price: { type: 0, value: null }}\"\n              :target-currency=\"targetCurrency\"\n              :active=\"active\"\n              :loading=\"loading\"\n              :in-modal=\"inModal\">\n        </perk>\n        <perk v-for=\"(perk, index) in perks\"\n              :key=\"perk.id\"\n              :perk=\"perk\"\n              :target-currency=\"targetCurrency\"\n              :active=\"active\"\n              :display-perks-ranking=\"displayPerksRanking\"\n              :perks-value=\"perksValue\"\n              :index=\"index\"\n              :loading=\"loading\"\n              :in-modal=\"inModal\">\n        </perk>\n    </div>\n</template>\n<template id=\"perk-template\">\n    <div class=\"card perk\" v-bind:class=\"{ 'expanded': expanded, 'unexpanded': !expanded, 'mb-4':!inModal }\" v-on:click=\"expand\" :id=\"perk.id\">\n        <span v-if=\"displayPerksRanking && perk.sold\"\n              class=\"btn btn-sm rounded-circle px-0 perk-badge\"\n              v-bind:class=\"{ 'btn-primary': index==0, 'btn-light': index!=0}\">\n            #{{index+1}}\n        </span>\n        <div class=\"perk-zoom\" v-if=\"canExpand\">\n            <div class=\"perk-zoom-bg\"></div>\n            <div class=\"perk-zoom-text w-100 py-2 px-4 text-center text-primary fw-semibold fs-5 lh-sm\">\n                Select this contribution perk\n            </div>\n        </div>\n        <form v-on:submit=\"onContributeFormSubmit\" class=\"mb-0\">\n            <input type=\"hidden\" :value=\"perk.id\" id=\"choiceKey\"/>\n            <img v-if=\"perk.image && perk.image != 'null'\" class=\"card-img-top\" :src=\"perk.image\"/>\n            <div class=\"card-body\">\n                <div class=\"card-title d-flex justify-content-between\" :class=\"{ 'mb-0': !perk.description }\">\n                    <span class=\"h5\" :class=\"{ 'mb-0': !perk.description }\">{{perk.title ? perk.title : perk.id}}</span>\n                    <span class=\"text-muted\">\n                        <template v-if=\"perk.price && perk.price.value\">\n                            {{formatAmount(perk.price.value.noExponents(), srvModel.currencyData.divisibility)}}\n                            {{targetCurrency}}\n                            <template v-if=\"perk.price.type == 1\">or more</template>\n                        </template>\n                        <template v-else-if=\"perk.price.type === 2 && !perk.price.value\">\n                            Free\n                        </template>\n                        <template v-else-if=\"perk.price.type === 0 || (!perk.price.value && perk.price.type === 1)\">\n                            Any amount\n                        </template>\n                    </span>\n                </div>\n                <p class=\"card-text overflow-hidden\" v-if=\"perk.description\" v-html=\"perk.description\"></p>\n\n                <div class=\"input-group\" style=\"max-width:500px;\" v-if=\"expanded\" :id=\"'perk-form'+ perk.id\">\n                    <template v-if=\"perk.price.type !== 0 && !(perk.price.type === 2 && !perk.price.value)\"> \n                        <input\n                            \n                            :disabled=\"!active\"\n                            :readonly=\"perk.price.type !== 1\"\n                            class=\"form-control hide-number-spin\"\n                            type=\"number\"\n                            v-model=\"amount\"\n                            :min=\"perk.price.value\"\n                            step=\"any\"\n                            placeholder=\"Contribution Amount\"\n                            required>\n                        <span class=\"input-group-text\" >{{targetCurrency}}</span>\n                    </template>\n                    <button\n                        class=\"btn btn-primary d-flex align-items-center \"\n                        v-bind:class=\"{ 'btn-disabled': loading}\"\n                        :disabled=\"!active || loading\"\n                        type=\"submit\">\n                        <div v-if=\"loading\" class=\"spinner-grow spinner-grow-sm me-2\" role=\"status\">\n                            <span class=\"visually-hidden\">Loading...</span>\n                        </div>\n                        {{perk.buyButtonText || 'Continue'}}\n                    </button>\n                </div>\n            </div>\n            <div class=\"card-footer d-flex justify-content-between\" v-if=\"perk.sold || perk.inventory != null\">\n                <span v-if=\"perk.inventory != null && perk.inventory > 0\" class=\"text-center text-muted\">{{new Intl.NumberFormat().format(perk.inventory)}} left</span>\n                <span v-if=\"perk.inventory != null && perk.inventory <= 0\" class=\"text-center text-muted\">Sold out</span>\n                <span v-if=\"perk.sold\">{{new Intl.NumberFormat().format(perk.sold)}} Contributor{{perk.sold === 1 ? \"\": \"s\"}}</span>\n                <span v-if=\"perk.value\">{{formatAmount(perk.value, srvModel.currencyData.divisibility)}} {{targetCurrency}} total</span>\n            </div>\n        </form>\n    </div>\n</template>\n\n<template id=\"contribute-template\">\n    <div>\n        <h3 v-if=\"!inModal\" class=\"mb-3\">Contribute</h3>\n        <perks\n            :perks=\"perks\"\n            :loading=\"loading\"\n            :in-modal=\"inModal\"\n            :display-perks-ranking=\"displayPerksRanking\"\n            :perks-value=\"perksValue\"\n            :target-currency=\"targetCurrency\"\n            :active=\"active\">\n        </perks>\n    </div>\n</template>\n\n@if (!Model.SimpleDisplay)\n{\n    <script>var srvModel = @Safe.Json(Model);</script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/moment/moment.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-toasted/vue-toasted.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/bootstrap-vue/bootstrap-vue.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/signalr/signalr.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/animejs/anime.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/crowdfund/app.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/crowdfund/helpers/math.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/crowdfund/services/audioplayer.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/crowdfund/services/fireworks.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/crowdfund/services/listener.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/modal/btcpay.js\" asp-append-version=\"true\"></script>\n}\n<partial name=\"LayoutFoot\"/>\n</body>\n</html>\n", "@using System.Globalization\n@using BTCPayServer.Abstractions.Extensions\n@using BTCPayServer.Abstractions.Models\n@using BTCPayServer.TagHelpers\n@using BTCPayServer.Views.Apps\n@using Microsoft.AspNetCore.Mvc.TagHelpers\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@model BTCPayServer.Plugins.Crowdfund.Models.UpdateCrowdfundViewModel\n@{\n    ViewData.SetActivePage(AppsNavPages.Update, \"Update Crowdfund\", Model.AppId);\n\tCsp.UnsafeEval();\n}\n\n@section PageHeadContent {\n    <link href=\"~/vendor/summernote/summernote-bs5.css\" rel=\"stylesheet\" asp-append-version=\"true\" />\n    <link href=\"~/main/template-editor.css\" rel=\"stylesheet\" asp-append-version=\"true\" />\n    <style>\n        .flatpickr-wrapper { flex-grow: 1; }\n    </style>\n}\n\n@section PageFootContent {\n    <partial name=\"_ValidationScriptsPartial\" />\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/summernote/summernote-bs5.js\" asp-append-version=\"true\"></script>\n}\n\n<form method=\"post\">\n    <div class=\"sticky-header-setup\"></div>\n    <div class=\"sticky-header d-sm-flex align-items-center justify-content-between\">\n        <h2 class=\"mb-0\">@ViewData[\"Title\"]</h2>\n        <div class=\"d-flex gap-3 mt-3 mt-sm-0\">\n            <button type=\"submit\" class=\"btn btn-primary order-sm-1\" id=\"SaveSettings\">Save</button>   \n            @if (Model.ModelWithMinimumData)\n            {\n                <a class=\"btn btn-secondary\" asp-action=\"ViewCrowdfund\" asp-route-appId=\"@Model.AppId\" id=\"ViewApp\" target=\"_blank\">View</a>\n            }\n        </div>\n    </div>\n\n    <partial name=\"_StatusMessage\" />\n\n    <input type=\"hidden\" asp-for=\"StoreId\" />\n    <div asp-validation-summary=\"ModelOnly\" class=\"text-danger\"></div>\n\n    <div class=\"row\">\n        <div class=\"col-sm-10 col-md-9 col-xl-7 col-xxl-6\">\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        <label asp-for=\"AppName\" class=\"form-label\" data-required></label>\n                        <input asp-for=\"AppName\" class=\"form-control\" required />\n                        <span asp-validation-for=\"AppName\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        <label asp-for=\"Title\" class=\"form-label\" data-required></label>\n                        <input asp-for=\"Title\" class=\"form-control\" required />\n                        <span asp-validation-for=\"Title\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label asp-for=\"Tagline\" class=\"form-label\"></label>\n                <input asp-for=\"Tagline\" class=\"form-control\" />\n                <span asp-validation-for=\"Tagline\" class=\"text-danger\"></span>\n            </div>\n            <div class=\"form-group\">\n                <label asp-for=\"MainImageUrl\" class=\"form-label\"></label>\n                <input asp-for=\"MainImageUrl\" class=\"form-control\" />\n                <span asp-validation-for=\"MainImageUrl\" class=\"text-danger\"></span>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"d-flex align-items-center\">\n                    <input asp-for=\"Enabled\" type=\"checkbox\" class=\"btcpay-toggle me-3\"/>\n                    <div>\n                        <label asp-for=\"Enabled\" class=\"form-label mb-0\"></label>\n                        <span asp-validation-for=\"Enabled\" class=\"text-danger\"></span>\n                        <div class=\"text-muted\">The crowdfund will be visible to anyone.</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-xl-10 col-xxl-constrain\">\n            <div class=\"form-group\">\n                <label asp-for=\"Description\" class=\"form-label\" data-required></label>\n                <textarea asp-for=\"Description\" rows=\"20\" cols=\"40\" class=\"form-control richtext\"></textarea>\n                <span asp-validation-for=\"Description\" class=\"text-danger\"></span>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-xl-10 col-xxl-constrain\">\n            <h3 class=\"mt-5 mb-4\">Goal</h3>\n            <div class=\"d-flex flex-wrap gap-3 mb-3\">\n                <div class=\"form-group w-250px mb-0\">\n                    <label asp-for=\"TargetAmount\" class=\"form-label\"></label>\n                    <input inputmode=\"decimal\" asp-for=\"TargetAmount\" class=\"form-control\" />\n                    <span asp-validation-for=\"TargetAmount\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"form-group\">\n                    <label asp-for=\"TargetCurrency\" class=\"form-label\"></label>\n                    <input asp-for=\"TargetCurrency\" class=\"form-control w-auto\" currency-selection />\n                    <div class=\"form-text\">Uses the store's default currency (@Model.StoreDefaultCurrency) if empty.</div>\n                    <span asp-validation-for=\"TargetCurrency\" class=\"text-danger\"></span>\n                </div>\n            </div>\n            <div class=\"d-flex flex-wrap gap-3 align-items-center mb-4\">\n                <div class=\"form-group mb-0 w-250px\">\n                    <label asp-for=\"StartDate\" class=\"form-label\"></label>\n                    <div class=\"input-group flex-nowrap\">\n                        <input type=\"datetime-local\" asp-for=\"StartDate\"\n                               value=\"@(Model.StartDate?.ToString(\"u\", CultureInfo.InvariantCulture))\"\n                               class=\"form-control flatdtpicker\"\n                               placeholder=\"No start date has been set\" />\n                        <button class=\"btn btn-secondary input-group-clear px-3\" type=\"button\" title=\"Clear\">\n                            <vc:icon symbol=\"close\"/>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"form-group mb-0 w-250px\">\n                    <label asp-for=\"EndDate\" class=\"form-label\"></label>\n                    <div class=\"input-group flex-nowrap\">\n                        <input type=\"datetime-local\" asp-for=\"EndDate\"\n                               value=\"@(Model.EndDate?.ToString(\"u\", CultureInfo.InvariantCulture))\"\n                               class=\"form-control flatdtpicker\"\n                               placeholder=\"No end date has been set\" />\n                        <button class=\"btn btn-secondary input-group-clear px-3\" type=\"button\" title=\"Clear\">\n                            <vc:icon symbol=\"close\"/>\n                        </button>\n                    </div>\n                </div>\n                <span asp-validation-for=\"StartDate\" class=\"text-danger\"></span>\n                <span asp-validation-for=\"EndDate\" class=\"text-danger\"></span>\n            </div>\n            \n            <div class=\"form-group mt-4\" id=\"ResetRow\" hidden=\"@(Model.StartDate == null)\">\n                <div class=\"d-flex align-items-center mb-3\">\n                    <input asp-for=\"IsRecurring\" type=\"checkbox\" class=\"btcpay-toggle me-3\" data-bs-toggle=\"collapse\" data-bs-target=\"#ResetEverySettings\" aria-expanded=\"@(Model.IsRecurring)\" aria-controls=\"ResetEverySettings\" />\n                    <div>\n                        <label asp-for=\"IsRecurring\" class=\"form-label mb-0\">Recurring Goal</label>\n                        <span asp-validation-for=\"IsRecurring\" class=\"text-danger\"></span>\n                        <div class=\"text-muted\">Reset goal after a specific period of time, based on your crowdfund's start date.</div>\n                    </div>\n                </div>\n                \n                <div class=\"collapse @(Model.IsRecurring ? \"show\" : \"\")\" id=\"ResetEverySettings\">\n                    <div class=\"form-group mb-0 pt-2 w-250px\">\n                        <label asp-for=\"ResetEveryAmount\" class=\"form-label\"></label>\n                        <div class=\"d-flex align-items-center\">\n                            <input type=\"number\" inputmode=\"numeric\" asp-for=\"ResetEveryAmount\" placeholder=\"Amount\" class=\"form-control me-3\" min=\"0\">\n                            <select class=\"form-select w-auto\" asp-for=\"ResetEvery\">\n                                @foreach (var opt in Model.ResetEveryValues)\n                                {\n                                    <option value=\"@opt\">@opt</option>\n                                }\n                            </select>\n                        </div>\n                        <span asp-validation-for=\"ResetEveryAmount\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-xl-10 col-xxl-constrain\">\n            <partial name=\"TemplateEditor\" model=\"@(nameof(Model.PerksTemplate), \"Perks\", Model.TargetCurrency ?? Model.StoreDefaultCurrency)\" />\n        </div>\n    </div>\n    <div class=\"row collapse\" id=\"RawEditor\">\n        <div class=\"col-xl-10 col-xxl-constrain\">\n            <div class=\"form-group pt-3\">\n                <label asp-for=\"PerksTemplate\" class=\"form-label\"></label>\n                <textarea asp-for=\"PerksTemplate\" rows=\"10\" cols=\"40\" class=\"form-control\"></textarea>\n                <span asp-validation-for=\"PerksTemplate\" class=\"text-danger\"></span>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-xl-8 col-xxl-constrain\">\n            <h3 class=\"mt-5 mb-4\">Contributions</h3>\n            <div class=\"form-check mb-3\">\n                <input asp-for=\"SortPerksByPopularity\" type=\"checkbox\" class=\"form-check-input\" />\n                <label asp-for=\"SortPerksByPopularity\" class=\"form-check-label\"></label>\n                <span asp-validation-for=\"SortPerksByPopularity\" class=\"text-danger\"></span>\n            </div>\n            <div class=\"form-check mb-3\">\n                <input asp-for=\"DisplayPerksRanking\" type=\"checkbox\" class=\"form-check-input\" />\n                <label asp-for=\"DisplayPerksRanking\" class=\"form-check-label\"></label>\n                <span asp-validation-for=\"DisplayPerksRanking\" class=\"text-danger\"></span>\n            </div>\n            <div class=\"form-check mb-3\">\n                <input asp-for=\"DisplayPerksValue\" type=\"checkbox\" class=\"form-check-input\" />\n                <label asp-for=\"DisplayPerksValue\" class=\"form-check-label\"></label>\n                <span asp-validation-for=\"DisplayPerksValue\" class=\"text-danger\"></span>\n            </div>\n            <div class=\"form-check mb-3\">\n                <input asp-for=\"EnforceTargetAmount\" type=\"checkbox\" class=\"form-check-input\" />\n                <label asp-for=\"EnforceTargetAmount\" class=\"form-check-label\"></label>\n                <span asp-validation-for=\"EnforceTargetAmount\" class=\"text-danger\"></span>\n            </div>\n            \n            <h3 class=\"mt-5 mb-4\">Crowdfund Behavior</h3>\n            <div class=\"form-check\">\n                <input asp-for=\"UseAllStoreInvoices\" type=\"checkbox\" class=\"form-check-input\" />\n                <label asp-for=\"UseAllStoreInvoices\" class=\"form-check-label\"></label>\n                <span asp-validation-for=\"UseAllStoreInvoices\" class=\"text-danger\"></span>\n            </div>\n\n            <h3 class=\"mt-5 mb-2\">Additional Options</h3>\n            <div class=\"form-group\">\n                <div class=\"accordion\" id=\"additional\">\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-sound-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-sound\" aria-expanded=\"false\" aria-controls=\"additional-sound\">\n                                Sound\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-sound\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-sound-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group mb-0\">\n                                    <div class=\"d-flex align-items-center\">\n                                        <input asp-for=\"SoundsEnabled\" type=\"checkbox\" class=\"btcpay-toggle me-3\" data-bs-toggle=\"collapse\" data-bs-target=\"#SoundsEnabledSettings\" aria-expanded=\"@Model.SoundsEnabled\" aria-controls=\"SoundsEnabledSettings\"/>\n                                        <label asp-for=\"SoundsEnabled\" class=\"form-label mb-0\"></label>\n                                        <span asp-validation-for=\"SoundsEnabled\" class=\"text-danger\"></span>\n                                    </div>\n                                </div>\n                                <div class=\"collapse @(Model.SoundsEnabled ? \"show\" : \"\")\" id=\"SoundsEnabledSettings\">\n                                    <div class=\"form-group mb-0 pt-3\">\n                                        <label asp-for=\"Sounds\" class=\"form-label\"></label>\n                                        <textarea asp-for=\"Sounds\" class=\"form-control\" rows=\"5\"></textarea>\n                                        <span asp-validation-for=\"Sounds\" class=\"text-danger\"></span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-animation-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-animation\" aria-expanded=\"false\" aria-controls=\"additional-animation\">\n                                Animation\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-animation\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-animation-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group mb-0\">\n                                    <div class=\"d-flex align-items-center\">\n                                        <input asp-for=\"AnimationsEnabled\" type=\"checkbox\" class=\"btcpay-toggle me-3\" data-bs-toggle=\"collapse\" data-bs-target=\"#AnimationsEnabledSettings\" aria-expanded=\"@Model.AnimationsEnabled\" aria-controls=\"AnimationsEnabledSettings\"/>\n                                        <label asp-for=\"AnimationsEnabled\" class=\"form-label mb-0\"></label>\n                                        <span asp-validation-for=\"AnimationsEnabled\" class=\"text-danger\"></span>\n                                    </div>\n                                </div>\n                                <div class=\"collapse @(Model.AnimationsEnabled ? \"show\" : \"\")\" id=\"AnimationsEnabledSettings\">\n                                    <div class=\"form-group mb-0 pt-3\">\n                                        <label asp-for=\"AnimationColors\" class=\"form-label\"></label>\n                                        <textarea asp-for=\"AnimationColors\" class=\"form-control\" rows=\"5\"></textarea>\n                                        <span asp-validation-for=\"AnimationColors\" class=\"text-danger\"></span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-discussion-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-discussion\" aria-expanded=\"false\" aria-controls=\"additional-discussion\">\n                                Discussion\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-discussion\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-discussion-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group mb-0\">\n                                    <div class=\"d-flex align-items-center\">\n                                        <input asp-for=\"DisqusEnabled\" type=\"checkbox\" class=\"btcpay-toggle me-3\" data-bs-toggle=\"collapse\" data-bs-target=\"#DisqusEnabledSettings\" aria-expanded=\"@Model.DisqusEnabled\" aria-controls=\"DisqusEnabledSettings\"/>\n                                        <label asp-for=\"DisqusEnabled\" class=\"form-label mb-0\"></label>\n                                        <span asp-validation-for=\"DisqusEnabled\" class=\"text-danger\"></span>\n                                    </div>\n                                </div>\n                                <div class=\"collapse @(Model.DisqusEnabled ? \"show\" : \"\")\" id=\"DisqusEnabledSettings\">\n                                    <div class=\"form-group mb-0 pt-3\">\n                                        <label asp-for=\"DisqusShortname\" class=\"form-label\"></label>\n                                        <input asp-for=\"DisqusShortname\" class=\"form-control\" />\n                                        <span asp-validation-for=\"DisqusShortname\" class=\"text-danger\"></span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-custom-css-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-custom-css\" aria-expanded=\"false\" aria-controls=\"additional-custom-css\">\n                                Custom CSS\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-custom-css\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-custom-css-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group\">\n                                    <label asp-for=\"CustomCSSLink\" class=\"form-label\"></label>\n                                    <a href=\"https://docs.btcpayserver.org/Development/Theme/#2-bootstrap-themes\" target=\"_blank\" rel=\"noreferrer noopener\" title=\"More information...\">\n                                        <vc:icon symbol=\"info\" />\n                                    </a>\n                                    <input asp-for=\"CustomCSSLink\" class=\"form-control\" />\n                                    <span asp-validation-for=\"CustomCSSLink\" class=\"text-danger\"></span>\n                                </div>\n                                <div class=\"form-group mb-4\">\n                                    <label asp-for=\"EmbeddedCSS\" class=\"form-label\"></label>\n                                    <textarea asp-for=\"EmbeddedCSS\" rows=\"10\" cols=\"40\" class=\"form-control\"></textarea>\n                                    <span asp-validation-for=\"EmbeddedCSS\" class=\"text-danger\"></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-notification-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-notification\" aria-expanded=\"false\" aria-controls=\"additional-notification\">\n                                Notification URL Callbacks\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-notification\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-notification-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group\">\n                                    <label asp-for=\"NotificationUrl\" class=\"form-label\"></label>\n                                    <input asp-for=\"NotificationUrl\" class=\"form-control\" />\n                                    <span asp-validation-for=\"NotificationUrl\" class=\"text-danger\"></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n<div class=\"d-flex gap-3 mt-3\">\n    <a class=\"btn btn-secondary\" asp-action=\"ListInvoices\" asp-controller=\"UIInvoice\" asp-route-storeId=\"@Model.StoreId\" asp-route-searchterm=\"@Model.SearchTerm\">Invoices</a>\n    <a id=\"DeleteApp\" class=\"btn btn-outline-danger\" asp-controller=\"UIApps\" asp-action=\"DeleteApp\" asp-route-appId=\"@Model.AppId\" data-bs-toggle=\"modal\" data-bs-target=\"#ConfirmModal\" data-description=\"The app <strong>@Html.Encode(Model.AppName)</strong> and its settings will be permanently deleted.\" data-confirm-input=\"DELETE\">Delete this app</a>\n</div>\n\n<partial name=\"_Confirm\" model=\"@(new ConfirmModel(\"Delete app\", \"This app will be removed from this store.\", \"Delete\"))\" />\n\n<script>\n    const resetRow = document.getElementById('ResetRow');\n    const startDateInputId = \"StartDate\";\n\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        setTimeout(() => {\n            flatpickrInstances.forEach((instance) => {\n                if (instance.element.id === startDateInputId) {\n                    instance.config.onChange.push((selectedDates) => {\n                        if (selectedDates.length) {\n                            // Show the reset row if start date is selected.\n                            // Since start date must be selected in order for the reset options to be set\n                            // we don't need to show it by default and can show it only when start date is selected\n                                resetRow.removeAttribute('hidden');\n                        }\n                    });\n                }\n            });\n        }, 0);\n\n        document.addEventListener('input-group-clear-input-value-cleared', ({ detail }) => {\n            const input = detail[0];\n            if (input.id === startDateInputId) {\n                resetRow.setAttribute('hidden', 'hidden');\n            }\n        });\n    });\n</script>\n", "@using BTCPayServer.Views.Stores\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@model BTCPayServer.Plugins.PayButton.Models.PayButtonViewModel\n@{\n    ViewData.SetActivePage(StoreNavPages.PayButton, \"Pay Button\", Context.GetStoreData().Id);\n\tCsp.UnsafeEval();\n}\n\n@section PageHeadContent {\n    <link rel=\"stylesheet\" href=\"~/vendor/highlightjs/default.min.css\" asp-append-version=\"true\">\n}\n\n@section PageFootContent {\n    <script src=\"~/vendor/highlightjs/highlight.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vuejs-vee-validate/vee-validate.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/paybutton/paybutton.js\" asp-append-version=\"true\"></script>\n    <template id=\"template-modal\" csp-allow>\n    if (!window.btcpay) {\n        var script = document.createElement('script');\n        script.src = @(Safe.Json(Model.UrlRoot + \"modal/btcpay.js\"));\n        document.getElementsByTagName('head')[0].append(script);\n    }\n    function handleFormSubmit(event) {\n        event.preventDefault();\n        var xhttp = new XMLHttpRequest();\n        xhttp.onreadystatechange = function() {\n            if (this.readyState == 4 && this.status == 200 && this.responseText) {\n                window.btcpay.appendInvoiceFrame(JSON.parse(this.responseText).invoiceId);\n            }\n        };\n        xhttp.open('POST', event.target.getAttribute('action'), true);\n        xhttp.send(new FormData(event.target));\n    }\n    document.querySelectorAll(\".btcpay-form\").forEach(function(el) {\n        if (!el.dataset.initialized) {\n            el.addEventListener('submit', handleFormSubmit);\n            el.dataset.initialized = true;\n        }\n    });\n    </template>\n    <template id=\"template-price-buttons\" csp-allow>\n    function handlePlusMinus(event) {\n        event.preventDefault();\n        const root = event.target.closest('.btcpay-form');\n        const el = root.querySelector('.btcpay-input-price');\n        const step = parseInt(event.target.dataset.step) || 1;\n        const min = parseInt(event.target.dataset.min) || 1;\n        const max = parseInt(event.target.dataset.max);\n        const type = event.target.dataset.type;\n        const price = parseInt(el.value) || min;\n        if (type === '-') {\n            el.value = price - step < min ? min : price - step;\n        } else if (type === '+') {\n            el.value = price + step > max ? max : price + step;\n        }\n    }\n    document.querySelectorAll(\".btcpay-form .plus-minus\").forEach(function(el) {\n        if (!el.dataset.initialized) {\n            el.addEventListener('click', handlePlusMinus);\n            el.dataset.initialized = true;\n        }\n    });\n    </template>\n    <template id=\"template-price-input\" csp-allow>\n    function handlePriceInput(event) {\n        event.preventDefault();\n        const root = event.target.closest('.btcpay-form');\n        const price = parseInt(event.target.dataset.price);\n        if (isNaN(event.target.value)) root.querySelector('.btcpay-input-price').value = price;\n        const min = parseInt(event.target.getAttribute('min')) || 1;\n        const max = parseInt(event.target.getAttribute('max'));\n        if (event.target.value < min) {\n            event.target.value = min;\n        } else if (event.target.value > max) { \n            event.target.value = max;\n        }\n    }\n    document.querySelectorAll(\".btcpay-form .btcpay-input-price\").forEach(function(el) {\n        if (!el.dataset.initialized) {\n            el.addEventListener('input', handlePriceInput);\n            el.dataset.initialized = true;\n        }\n    });\n    </template>\n    <template id=\"template-price-slider\" csp-allow>\n    function handleSliderChange(event) {\n        event.preventDefault();\n        const root = event.target.closest('.btcpay-form');\n        const el = root.querySelector('.btcpay-input-price');\n        const price = parseInt(el.value);\n        const min = parseInt(event.target.getAttribute('min')) || 1;\n        const max = parseInt(event.target.getAttribute('max'));\n        if (price < min) { \n            el.value = min;\n        } else if (price > max) {\n            el.value = max;\n        } \n        root.querySelector('.btcpay-input-range').value = el.value;\n    }\n    function handleSliderInput(event) {\n        event.target.closest('.btcpay-form').querySelector('.btcpay-input-price').value = event.target.value;\n    }\n    document.querySelectorAll(\".btcpay-form .btcpay-input-range\").forEach(function(el) {\n        if (!el.dataset.initialized) {\n            el.addEventListener('input', handleSliderInput);\n            el.dataset.initialized = true;\n        }\n    });\n    document.querySelectorAll(\".btcpay-form .btcpay-input-price\").forEach(function(el) {\n        if (!el.dataset.initialized) {\n            el.addEventListener('change', handleSliderChange);\n            el.dataset.initialized = true;\n        }\n    });\n    </template>\n    \n    <script>\n        const srvModel = @Safe.Json(Model);\n        const payButtonCtrl = new Vue({\n            el: '#payButtonCtrl',\n            data: {\n                srvModel: srvModel,\n                originalButtonImageUrl: srvModel.payButtonImageUrl,\n                buttonInlineTextMode: false\n            },\n            computed: {\n                imageUrlRequired() {\n                    return !this.buttonInlineTextMode;\n                }\n            },\n            methods: {\n                inputChanges(event, buttonSize) {\n                    inputChanges(event, buttonSize);\n                }\n            },\n            watch: {\n                buttonInlineTextMode(checked) {\n                    if (!checked) {\n                        this.srvModel.payButtonText = '';\n                        this.srvModel.payButtonImageUrl = this.originalButtonImageUrl;\n                    } else {\n                        this.srvModel.payButtonText = 'Pay with';\n                        this.srvModel.payButtonImageUrl = `${this.srvModel.urlRoot}img/paybutton/logo.svg`;\n                    }\n                    this.inputChanges();\n                }\n            }\n        });\n    </script>\n}\n\n<partial name=\"_StatusMessage\" />\n\n<h2 class=\"mt-1 mb-4\">@ViewData[\"Title\"]</h2>\n<div id=\"payButtonCtrl\">\n    <div class=\"row\">\n        <div class=\"col-xl-8\">\n            <div class=\"alert alert-warning alert-dismissible mb-4\" role=\"alert\">\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">\n                    <vc:icon symbol=\"close\" />\n                </button>\n                <h5 class=\"alert-heading\">Warning: Payment button should only be used for tips and donations</h5>\n                <p>\n                    Using the payment button for e-commerce integrations is not recommended since order relevant information can be modified by the user.\n                    For e-commerce, you should use our \n                    <a href=\"https://docs.btcpayserver.org/API/Greenfield/v1/\" class=\"alert-link\" target=\"_blank\" rel=\"noreferrer noopener\">Greenfield API</a>.\n                    If this store process commercial transactions, we advise you to \n                    <a asp-controller=\"UIUserStores\" asp-action=\"CreateStore\" class=\"alert-link\">create a separate store</a> before using the payment button.\n                </p>\n                <form asp-action=\"DisableAnyoneCanCreateInvoice\" asp-route-storeId=\"@Context.GetRouteValue(\"storeId\")\" method=\"post\">\n                    <button name=\"command\" id=\"disable-pay-button\" type=\"submit\" class=\"btn btn-danger mt-0\" value=\"Save\">Disable payment button</button>\n                </form>\n            </div>\n            <p>Configure your Pay Button, and the generated code will be displayed at the bottom of the page to copy into your project.</p>\n            <h4 class=\"mt-3 mb-3\">General Settings</h4>\n            <div class=\"form-group col-md-8\">\n                <label class=\"form-label\" for=\"price\">Price</label>\n                <input name=\"price\" type=\"text\" class=\"form-control\" id=\"price\" inputmode=\"decimal\"\n                       v-model=\"srvModel.price\" v-on:change=\"inputChanges\"\n                       v-validate=\"'decimal|min_value:0'\" :class=\"{'is-invalid': errors.has('price') }\">\n                <small class=\"text-danger\">{{ errors.first('price') }}</small>\n            </div>\n            <div class=\"form-group col-md-4\" v-if=\"!srvModel.appIdEndpoint\">\n                <label class=\"form-label\" for=\"Currency\">Currency</label>\n                <input asp-for=\"Currency\" name=\"currency\" class=\"form-control w-auto\" currency-selection\n                       v-model=\"srvModel.currency\" v-on:change=\"inputChanges\"\n                       :class=\"{'is-invalid': errors.has('currency') }\" />\n            </div>\n            <div class=\"form-group col-md-4\" v-if=\"!srvModel.appIdEndpoint\">\n                <label class=\"form-label\" for=\"defaultPaymentMethod\">Default Payment Method</label>\n                <select v-model=\"srvModel.defaultPaymentMethod\" v-on:change=\"inputChanges\" class=\"form-select\" id=\"default-payment-method\">\n                    <option value=\"\" selected>Use the store\u2019s default</option>\n                    <option  v-for=\"pm in srvModel.paymentMethods\" v-bind:value=\"pm.value\">{{pm.name}}</option>\n                </select>\n            </div>\n            <div class=\"form-group\" v-if=\"!srvModel.appIdEndpoint\">\n                <label class=\"form-label\" for=\"description\">Checkout Description</label>\n                <input name=\"checkoutDesc\" type=\"text\" class=\"form-control\" id=\"description\"\n                       v-model=\"srvModel.checkoutDesc\" v-on:change=\"inputChanges\">\n            </div>\n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"order-id\">Order ID</label>\n                <input name=\"orderId\" type=\"text\" class=\"form-control\" id=\"order-id\"\n                       v-model=\"srvModel.orderId\" v-on:change=\"inputChanges\">\n            </div>\n        </div>\n    </div>\n\n    <h4 class=\"mt-5 mb-3\">Display Options</h4>\n    <div class=\"row\">\n        <div class=\"col-xl-8 col-xxl-constrain\">\n            <div class=\"form-group\">\n                <div class=\"form-check\" v-if=\"!srvModel.appIdEndpoint\">\n                    <input id=\"useModal\" type=\"checkbox\" v-model=\"srvModel.useModal\" v-on:change=\"inputChanges\" class=\"form-check-input\"/>\n                    <label for=\"useModal\" class=\"form-check-label\">Use Modal</label>\n                </div>\n                <div class=\"form-check\">\n                    <input id=\"buttonInlineTextMode\" type=\"checkbox\" v-model=\"buttonInlineTextMode\" v-on:change=\"inputChanges\" class=\"form-check-input\"/>\n                    <label for=\"buttonInlineTextMode\" class=\"form-check-label\">Customize Pay Button Text</label>\n                </div>\n            </div>\n            \n            <div class=\"form-group\" v-show=\"buttonInlineTextMode\">\n                <label class=\"form-label\" for=\"pb-text\">Pay Button Text</label>\n                <input name=\"payButtonText\" type=\"text\" class=\"form-control\" id=\"pb-text\"\n                       v-model=\"srvModel.payButtonText\" v-on:change=\"inputChanges\">\n            </div>\n            <div class=\"form-group mb-4\">\n                <label class=\"form-label\" for=\"pb-image-url\">Pay Button Image Url</label>\n                <input name=\"payButtonImageUrl\" type=\"text\" class=\"form-control\" id=\"pb-image-url\"\n                       v-model=\"srvModel.payButtonImageUrl\" v-on:change=\"inputChanges\"\n                       v-validate=\"{ required: this.imageUrlRequired, url: {require_tld:false} }\"\n                       :class=\"{'is-invalid': errors.has('payButtonImageUrl') }\">\n                <small class=\"text-danger\">{{ errors.first('payButtonImageUrl') }}</small>\n            </div>\n            <div class=\"form-group mb-4\">\n                <label class=\"form-label\">Image Size</label>\n                <div class=\"btn-group d-flex\" role=\"group\">\n                    <button type=\"button\" class=\"btn btn-outline-secondary\" \n                            v-on:click=\"inputChanges($event, 0)\">146 x 40 px</button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                            v-on:click=\"inputChanges($event, 1)\">168 x 46 px</button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                            v-on:click=\"inputChanges($event, 2)\">209 x 57 px</button>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"form-label\">Button Type</label>\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"button-type\" id=\"btn-fixed\" value=\"0\" v-model=\"srvModel.buttonType\" v-on:change=\"inputChanges\" checked/>\n                    <label for=\"btn-fixed\" class=\"form-check-label\">Fixed amount</label>\n                </div>\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"button-type\" id=\"btn-custom\" value=\"1\" v-model=\"srvModel.buttonType\" v-on:change=\"inputChanges\"/>\n                    <label for=\"btn-custom\" class=\"form-check-label\">Custom amount</label>\n                </div>\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"button-type\" id=\"btn-slider\" value=\"2\" v-model=\"srvModel.buttonType\" v-on:change=\"inputChanges\"/>\n                    <label for=\"btn-slider\" class=\"form-check-label\">Slider</label>\n                </div>\n            </div>\n            <div class=\"row\" v-if=\"srvModel.buttonType === '1' ||srvModel.buttonType === '2'\">\n                <div class=\"form-group col-md-4\">\n                    <label class=\"form-label\" for=\"pb-min\">Min</label>\n                    <input name=\"min\" type=\"text\" class=\"form-control\" id=\"pb-min\"\n                           v-model=\"srvModel.min\" v-on:change=\"inputChanges\"\n                           v-validate=\"'required|decimal|min_value:0'\" :class=\"{'is-invalid': errors.has('min') }\">\n                    <small class=\"text-danger\">{{ errors.first('min') }}</small>\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label class=\"form-label\" for=\"pb-max\">Max</label>\n                    <input name=\"max\" type=\"text\" class=\"form-control\" id=\"pb-max\"\n                           v-model=\"srvModel.max\" v-on:change=\"inputChanges\"\n                           v-validate=\"'required|decimal'\" :class=\"{'is-invalid': errors.has('max') }\">\n                    <small class=\"text-danger\">{{ errors.first('max') }}</small>\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label class=\"form-label\" for=\"pb-step\">Step</label>\n                    <input name=\"step\" type=\"text\" class=\"form-control\" id=\"pb-step\"\n                           v-model=\"srvModel.step\" v-on:change=\"inputChanges\"\n                           v-validate=\"'required'\" :class=\"{'is-invalid': errors.has('step') }\">\n                    <small class=\"text-danger\">{{ errors.first('step') }}</small>\n                </div>\n            </div>\n            <template v-if=\"srvModel.buttonType === '1'\">\n                <div class=\"form-check\">\n                    <input name=\"simpleInput\"\n                           id=\"simpleInput\"\n                           type=\"checkbox\"\n                           class=\"form-check-input\"\n                           v-model=\"srvModel.simpleInput\"\n                           v-on:change=\"inputChanges\"\n                           :class=\"{'is-invalid': errors.has('simpleInput') }\">\n                    <label class=\"form-check-label\" for=\"simpleInput\">Use a simple input style</label>\n                    <small class=\"text-danger\">{{ errors.first('simpleInput') }}</small>\n                </div>\n                <div class=\"form-check\">\n                    <input name=\"fitButtonInline\"\n                           id=\"fitButtonInline\"\n                           type=\"checkbox\"\n                           class=\"form-check-input\"\n                           v-model=\"srvModel.fitButtonInline\"\n                           v-on:change=\"inputChanges\"\n                           :class=\"{'is-invalid': errors.has('fitButtonInline') }\">\n                    <label class=\"form-check-label\" for=\"fitButtonInline\">Fit button inline</label>\n                    <small class=\"text-danger\">{{ errors.first('fitButtonInline') }}</small>\n                </div>\n            </template>\n        </div>\n        <div class=\"col-xl-4 mt-4 mt-xl-0\">\n            <h5 class=\"mb-3\">Preview</h5>\n            <div id=\"preview\"></div>\n            <div v-show=\"!srvModel.appIdEndpoint\">\n                <h5 class=\"mt-4 mb-3\">Link</h5>\n                <span>Alternatively, you can share <a id=\"preview-link\" href=\"#\">this link</a> or encode it in a QR code.</span>\n            </div>\n        </div>\n    </div>\n\n    <h4 class=\"mt-5 mb-3\">Payment Notifications</h4>\n    <div class=\"row\">\n        <div class=\"col-xl-8 col-xxl-constrain\">\n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"server-ipn\">Server IPN</label>\n                <input name=\"serverIpn\" type=\"text\" class=\"form-control\" id=\"server-ipn\"\n                       v-model=\"srvModel.serverIpn\" v-on:change=\"inputChanges\"\n                       v-validate=\"'url'\" :class=\"{'is-invalid': errors.has('serverIpn') }\">\n                <small class=\"text-danger\">{{ errors.first('serverIpn') }}</small>\n                <div class=\"form-text\">The URL to post purchase data.</div>\n            </div>\n            <div class=\"form-group\" v-if=\"!srvModel.appIdEndpoint\">\n                <label class=\"form-label\" for=\"email-notifications\">Email Notifications</label>\n                <input name=\"notifyEmail\" type=\"text\" class=\"form-control\" id=\"email-notifications\"\n                       placeholder=\"name@domain.com\"\n                       v-model=\"srvModel.notifyEmail\" v-on:change=\"inputChanges\"\n                       v-validate=\"'email'\" :class=\"{'is-invalid': errors.has('notifyEmail') }\">\n                <small class=\"text-danger\">{{ errors.first('notifyEmail') }}</small>\n                <div class=\"form-text\">Receive email notification updates.</div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"browser-redirect\">Browser Redirect</label>\n                <input name=\"browserRedirect\" type=\"text\" class=\"form-control\" id=\"browser-redirect\"\n                       v-model=\"srvModel.browserRedirect\" v-on:change=\"inputChanges\"\n                       v-validate=\"'url'\" :class=\"{'is-invalid': errors.has('browserRedirect') }\">\n                <small class=\"text-danger\">{{ errors.first('browserRedirect') }}</small>\n                <div class=\"form-text\">Where to redirect the customer after payment is complete</div>\n            </div>\n        </div>\n    </div>\n\n    <h4 class=\"mt-5 mb-3\">Advanced Options</h4>\n    <div class=\"row\" v-if=\"!srvModel.appIdEndpoint\">\n        <div class=\"col-xl-8 col-xxl-constrain\">\n            <p>\n                Specify additional query string parameters that should be appended to the checkout page once the invoice is created.\n                For example, <code>lang=da-DK</code> would load the checkout page in Danish by default.\n            </p>\n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"query-string\">Checkout Additional Query String</label>\n                <input name=\"checkoutQueryString\" type=\"text\" class=\"form-control\" id=\"query-string\"\n                       v-model=\"srvModel.checkoutQueryString\" v-on:change=\"inputChanges\"\n                       :class=\"{'is-invalid': errors.has('checkoutQueryString') }\">\n                <small class=\"text-danger\">{{ errors.first('checkoutQueryString') }}</small>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-xl-8 col-xxl-constrain\">\n            <p>Link this Pay Button to an app instead. Some features are disabled due to the different endpoint capabilities. You can set which perk/item this button should be targeting.</p>\n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"app-as-endpoint\">Use App As Endpoint</label>\n                <select v-model=\"srvModel.appIdEndpoint\" v-on:change=\"inputChanges\" class=\"form-select\" id=\"app-as-endpoint\">\n                    <option value=\"\">Use default pay button endpoint</option>\n                    <option  v-for=\"app in srvModel.apps\" v-bind:value=\"app.id\" >{{app.appName}} ({{app.appType}})</option>\n                </select>\n                <small class=\"text-danger\">{{ errors.first('appIdEndpoint') }}</small>\n            </div>\n            <div class=\"form-group\" v-if=\"srvModel.appIdEndpoint\">\n                <label class=\"form-label\" for=\"app-item\">App Item/Perk</label>\n                <input name=\"appChoiceKey\" type=\"text\" class=\"form-control\" id=\"app-item\"\n                       v-model=\"srvModel.appChoiceKey\" v-on:change=\"inputChanges\"\n                       :class=\"{'is-invalid': errors.has('appChoiceKey') }\">\n                <small class=\"text-danger\">{{ errors.first('appChoiceKey') }}</small>\n            </div>\n        </div>\n    </div>\n\n    <h4 class=\"mt-5 mb-3\">Generated Code</h4>\n\n    <div class=\"row\" v-show=\"!errors.any()\">\n        <div class=\"col-xxl-8\">\n            <pre><code id=\"mainCode\" class=\"html\"></code></pre>\n            <button class=\"btn btn-primary\" data-clipboard-target=\"#mainCode\">\n                <vc:icon symbol=\"copy\"/>\n                Copy Code\n            </button>\n        </div>\n    </div>\n    <div class=\"row\" v-show=\"errors.any()\">\n        <div class=\"col-xl-8 col-xxl-constrain text-danger\">\n            Please fix errors shown in order for code generation to successfully execute.\n        </div>\n    </div>\n</div>\n\n<script id=\"template-paybutton-styles\" type=\"text/template\">\n    <style>\n        .btcpay-form {\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n        }\n        .btcpay-form--inline {\n            flex-direction: row;\n        }\n        .btcpay-form--block {\n            flex-direction: column;\n        }\n        .btcpay-form--inline .submit {\n            margin-left: 15px;\n        }\n        .btcpay-form--block select {\n            margin-bottom: 10px;\n        }\n        .btcpay-form .btcpay-custom-container{\n            text-align: center;\n        }\n         .btcpay-custom {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        .btcpay-form .plus-minus {\n            cursor:pointer;\n            font-size:25px;\n            line-height: 25px;\n            background: #DFE0E1;\n            height: 30px;\n            width: 45px;\n            border:none;\n            border-radius: 60px;\n            margin: auto 5px;\n            display: inline-flex;\n            justify-content: center;\n        }\n        .btcpay-form select {\n            -moz-appearance: none;\n            -webkit-appearance: none;\n            appearance: none;\n            color: currentColor;\n            background: transparent;\n            border:1px solid transparent;\n            display: block;\n            padding: 1px;\n            margin-left: auto;\n            margin-right: auto;\n            font-size: 11px;\n            cursor: pointer;\n        }\n        .btcpay-form select:hover {\n            border-color: #ccc;\n        }\n        .btcpay-form option {\n            color: #000;\n            background: rgba(0,0,0,.1);\n        }\n        .btcpay-input-price {\n            -moz-appearance: textfield;\n            border: none;\n            box-shadow: none;\n            text-align: center;\n            font-size: 25px;\n            margin: auto;\n            border-radius: 5px;\n            line-height: 35px;\n            background: #fff;\n        }\n        \n        .btcpay-input-price::-webkit-outer-spin-button,\n        .btcpay-input-price::-webkit-inner-spin-button {\n          -webkit-appearance: none;\n          margin: 0;\n        }\n    </style>\n</script>\n\n<script id=\"template-slider-styles\" type=\"text/template\">\n    <style>\n        input[type=range].btcpay-input-range {\n            -webkit-appearance:none;\n            width:100%;\n            background: transparent;\n        }\n        input[type=range].btcpay-input-range:focus {\n            outline:0;\n        }\n        input[type=range].btcpay-input-range::-webkit-slider-runnable-track {\n            width:100%;\n            height:3.1px;\n            cursor:pointer;\n            box-shadow:0 0 1.7px #020,0 0 0 #003c00;\n            background:#f3f3f3;\n            border-radius:1px;\n            border:0;\n        }\n        input[type=range].btcpay-input-range::-webkit-slider-thumb {\n            box-shadow:none;\n            border:2.5px solid #cedc21;\n            height:22px;\n            width:22px;\n            border-radius:50%;\n            background:#0f3723;\n            cursor:pointer;\n            -webkit-appearance:none;\n            margin-top:-9.45px\n        }\n        input[type=range].btcpay-input-range:focus::-webkit-slider-runnable-track {\n            background:#fff;\n        }\n        input[type=range].btcpay-input-range::-moz-range-track {\n            width:100%;\n            height:3.1px;\n            cursor:pointer;\n            box-shadow:0 0 1.7px #020,0 0 0 #003c00;\n            background:#f3f3f3;\n            border-radius:1px;\n            border:0;\n        }\n        input[type=range].btcpay-input-range::-moz-range-thumb {\n            box-shadow:none;\n            border:2.5px solid #cedc21;\n            height:22px;\n            width:22px;\n            border-radius:50%;\n            background:#0f3723;\n            cursor:pointer;\n        }\n        input[type=range].btcpay-input-range::-ms-track {\n            width:100%;\n            height:3.1px;\n            cursor:pointer;\n            background:0 0;\n            border-color:transparent;\n            color:transparent;\n        }\n        input[type=range].btcpay-input-range::-ms-fill-lower {\n            background:#e6e6e6;\n            border:0;\n            border-radius:2px;\n            box-shadow:0 0 1.7px #020,0 0 0 #003c00;\n        }\n        input[type=range].btcpay-input-range::-ms-fill-upper {\n            background:#f3f3f3;\n            border:0;\n            border-radius:2px;\n            box-shadow:0 0 1.7px #020,0 0 0 #003c00;\n        }\n        input[type=range].btcpay-input-range::-ms-thumb {\n            box-shadow:none;\n            border:2.5px solid #cedc21;\n            height:22px;\n            width:22px;\n            border-radius:50%;\n            background:#0f3723;\n            cursor:pointer;\n            height:3.1px;\n        }\n        input[type=range].btcpay-input-range:focus::-ms-fill-lower {\n            background:#f3f3f3;\n        }\n        input[type=range].btcpay-input-range:focus::-ms-fill-upper {\n            background:#fff;\n        }\n    </style>\n</script>\n", "@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@model BTCPayServer.Plugins.PointOfSale.Models.ViewPointOfSaleViewModel\n@{\n    Layout = \"PointOfSale/Public/_Layout\";\n\tCsp.UnsafeEval();\n}\n@section PageHeadContent {\n    <style>\n        .public-page-wrap {\n            max-width: 560px;\n            overflow: hidden;\n        }\n        \n        /* modes */\n        #ModeTabs {\n            min-height: 2.75rem;\n        }\n        \n        /* keypad */\n        .keypad {\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n        }\n        .keypad .btn {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 0;\n            position: relative;\n            border-radius: 0;\n            font-weight: var(--btcpay-font-weight-semibold);\n            font-size: 24px;\n            min-height: 3.5rem;\n            height: 8vh;\n            max-height: 6rem;\n            color: var(--btcpay-body-text);\n        }\n        .keypad .btn[data-key=\"del\"] svg {\n            --btn-icon-size: 2.25rem;\n            transform: rotate(180deg);\n        }\n        .btcpay-pills label,\n        .btn-secondary.rounded-pill {\n            padding-left: 1rem;\n            padding-right: 1rem;\n        }\n        \n        /* make borders collapse by shifting rows and columns by 1px */\n        /* second column */\n        .keypad .btn:nth-child(3n-1) {\n            margin-left: -1px;\n        }\n        /* third column */\n        .keypad .btn:nth-child(3n) {\n            margin-left: -1px;\n        }\n        /* from second row downwards */\n        .keypad .btn:nth-child(n+4) {\n            margin-top: -1px;\n        }\n        /* ensure highlighted button is topmost */\n        .keypad .btn:hover,\n        .keypad .btn:focus,\n        .keypad .btn:active {\n            z-index: 1;\n        }\n        \n        .actions {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        .actions .btn {\n            flex:  1 1 50%;\n        }\n        \n        #Calculation {\n            min-height: 1.5rem;\n        }\n\n        @@media (max-height: 700px) {\n            .store-header {\n                display: none !important;\n            }\n        }\n        @@media (max-width: 575px) {\n            .public-page-wrap {\n                padding-right: 0;\n                padding-left: 0;\n            }\n            .keypad {\n                margin-left: -1px;\n                margin-right: -1px;\n            }\n            .store-footer {\n                display: none !important;\n            }\n        }\n        /* fix sticky hover effect on mobile browsers */\n        @@media (hover: none) {\n            .keypad .btn-secondary:hover,\n            .actions .btn-secondary:hover {\n                border-color: var(--btcpay-secondary-border-active) !important;\n            }\n        }\n    </style>\n}\n@section PageFootContent {\n    <script>var srvModel = @Safe.Json(Model);</script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/light-pos/app.js\" asp-append-version=\"true\"></script>\n}\n<div class=\"public-page-wrap flex-column\">\n    <partial name=\"_StatusMessage\" />\n    <partial name=\"_StoreHeader\" model=\"(string.IsNullOrEmpty(Model.Title) ? Model.StoreName : Model.Title, Model.LogoFileId)\" />\n    @if (Context.Request.Query.ContainsKey(\"simple\"))\n    {\n        <partial name=\"PointOfSale/Public/MinimalLight\" model=\"Model\" />\n    }\n    else\n    {\n        <noscript>\n            <partial name=\"PointOfSale/Public/MinimalLight\" model=\"Model\" />\n        </noscript>\n        <partial name=\"PointOfSale/Public/VueLight\" model=\"Model\" />\n    }\n    <footer class=\"store-footer\">\n        <a href=\"https://btcpayserver.org\" target=\"_blank\" rel=\"noreferrer noopener\">\n            Powered by <partial name=\"_StoreFooterLogo\" />\n        </a>\n    </footer>\n</div>\n", "@using BTCPayServer.Services.Apps\n@using BTCPayServer.Abstractions.Models\n@using BTCPayServer.Views.Apps\n@using BTCPayServer.Abstractions.Extensions\n@using BTCPayServer.Forms\n@using BTCPayServer.Services.Stores\n@inject FormDataService FormDataService\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@model BTCPayServer.Plugins.PointOfSale.Models.UpdatePointOfSaleViewModel\n@{\n    ViewData.SetActivePage(AppsNavPages.Update, \"Update Point of Sale\", Model.Id);\n\tCsp.UnsafeEval();\n    var checkoutFormOptions = await FormDataService.GetSelect(Model.StoreId, Model.FormId);\n}\n\n<form method=\"post\">\n    <div class=\"sticky-header-setup\"></div>\n    <div class=\"sticky-header d-sm-flex align-items-center justify-content-between\">\n        <h2 class=\"mb-0\">@ViewData[\"Title\"]</h2>\n        <div class=\"d-flex gap-3 mt-3 mt-sm-0\">\n            <button type=\"submit\" class=\"btn btn-primary order-sm-1\" id=\"SaveSettings\">Save</button>\n            <a class=\"btn btn-secondary\" asp-action=\"ViewPointOfSale\" asp-route-appId=\"@Model.Id\" id=\"ViewApp\" target=\"_blank\">View</a>\n        </div>\n    </div>\n\n    <partial name=\"_StatusMessage\" />\n\n    <input type=\"hidden\" asp-for=\"StoreId\" />\n    <div asp-validation-summary=\"ModelOnly\" class=\"text-danger\"></div>\n\n    <div class=\"row\">\n        <div class=\"col-sm-10 col-md-9 col-xl-7 col-xxl-6\">\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        <label asp-for=\"AppName\" class=\"form-label\" data-required></label>\n                        <input asp-for=\"AppName\" class=\"form-control\" required />\n                        <span asp-validation-for=\"AppName\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        <label asp-for=\"Title\" class=\"form-label\" data-required></label>\n                        <input asp-for=\"Title\" class=\"form-control\" required />\n                        <span asp-validation-for=\"Title\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label asp-for=\"DefaultView\" class=\"form-label\" data-required>Choose Point of Sale Style</label>\n                <div class=\"btcpay-list-select\">\n                    @foreach (var type in Enum.GetValues<PosViewType>())\n                    {\n                        <input type=\"radio\" asp-for=\"DefaultView\" value=\"@type\" id=\"DefaultView_@type\">\n                        <label for=\"DefaultView_@type\" class=\"btcpay-list-select-item\">\n                            <vc:icon symbol=\"pos-@type.ToString().ToLowerInvariant()\" />\n                            @typeof(PosViewType).DisplayName(type.ToString())\n                        </label>\n                    }\n                </div>\n            </div>\n            <div class=\"form-group mb-0\">\n                <label asp-for=\"Currency\" class=\"form-label\"></label>\n                <input asp-for=\"Currency\" class=\"form-control w-auto\" currency-selection />\n                <div class=\"form-text\">Uses the store's default currency (@Model.StoreDefaultCurrency) if empty.</div>\n                <span asp-validation-for=\"Currency\" class=\"text-danger\"></span>\n            </div>\n        </div>\n    </div>\n    <div id=\"description\" class=\"row mt-4\">\n        <div class=\"col-xl-10 col-xxl-constrain\">\n            <div class=\"form-group mb-0\">\n                <label asp-for=\"Description\" class=\"form-label\"></label>\n                <textarea asp-for=\"Description\" rows=\"10\" cols=\"40\" class=\"form-control richtext\"></textarea>\n                <span asp-validation-for=\"Description\" class=\"text-danger\"></span>\n            </div>\n        </div>\n    </div>\n    <div id=\"products\">\n        <div class=\"row\">\n            <div class=\"col-xxl-constrain\">\n                <partial name=\"TemplateEditor\" model=\"@(nameof(Model.Template), \"Products\", Model.Currency ?? Model.StoreDefaultCurrency)\" />\n            </div>\n        </div>\n        <div class=\"row collapse\" id=\"RawEditor\">\n            <div class=\"col-xxl-constrain\">\n                <div class=\"form-group pt-3\">\n                    <label asp-for=\"Template\" class=\"form-label\"></label>\n                    <textarea asp-for=\"Template\" rows=\"10\" cols=\"40\" class=\"form-control\"></textarea>\n                    <span asp-validation-for=\"Template\" class=\"text-danger\"></span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row mt-5\">\n        <div class=\"col-sm-10 col-md-9 col-xl-7 col-xxl-6\">\n            <h3 class=\"mb-4\">Checkout</h3>\n            <fieldset>\n                <div class=\"form-group\" id=\"button-price-text\">\n                    <label asp-for=\"ButtonText\" class=\"form-label\" data-required></label>\n                    <input asp-for=\"ButtonText\" class=\"form-control\" required />\n                    <span asp-validation-for=\"ButtonText\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"form-group\">\n                    <label asp-for=\"FormId\" class=\"form-label\"></label>\n                    <select asp-for=\"FormId\" class=\"form-select w-auto\" asp-items=\"@checkoutFormOptions\"></select>\n                    <span asp-validation-for=\"FormId\" class=\"text-danger\"></span>\n                </div>\n            </fieldset>\n            <fieldset id=\"tips\" class=\"mt-2\">\n                <legend class=\"h5 mb-3 fw-semibold\">Tips</legend>\n                <div class=\"form-group d-flex align-items-center pt-2\">\n                    <input asp-for=\"EnableTips\" type=\"checkbox\" class=\"btcpay-toggle me-3\" data-bs-toggle=\"collapse\" data-bs-target=\"#CustomTipsSettings\" aria-expanded=\"@Model.EnableTips\" aria-controls=\"CustomTipsSettings\" />\n                    <label asp-for=\"EnableTips\" class=\"form-label mb-0\"></label>\n                    <span asp-validation-for=\"EnableTips\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"collapse @(Model.EnableTips ? \"show\" : \"\")\" id=\"CustomTipsSettings\">\n                    <div class=\"form-group\">\n                        <label asp-for=\"CustomTipText\" class=\"form-label\" data-required></label>\n                        <input asp-for=\"CustomTipText\" class=\"form-control\" required />\n                        <span asp-validation-for=\"CustomTipText\" class=\"text-danger\"></span>\n                    </div>\n                    <div class=\"form-group\">\n                        <label asp-for=\"CustomTipPercentages\" class=\"form-label\"></label>\n                        <input asp-for=\"CustomTipPercentages\" class=\"form-control\" />\n                        <span asp-validation-for=\"CustomTipPercentages\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n            </fieldset>\n            <fieldset id=\"discounts\" class=\"mt-2\">\n                <legend class=\"h5 mb-3 fw-semibold\">Discounts</legend>\n                <div class=\"form-group d-flex align-items-center\">\n                    <input asp-for=\"ShowDiscount\" type=\"checkbox\" class=\"btcpay-toggle me-3\" />\n                    <div>\n                        <label asp-for=\"ShowDiscount\" class=\"form-label mb-0\"></label>\n                        <div class=\"text-muted\">Not recommended for customer self-checkout.</div>\n                    </div>\n                    <span asp-validation-for=\"ShowDiscount\" class=\"text-danger\"></span>\n                </div>\n            </fieldset>\n            <fieldset id=\"custom-payments\" class=\"mt-2\">\n                <legend class=\"h5 mb-3 fw-semibold\">Custom Payments</legend>\n                <div class=\"form-group mb-4 d-flex align-items-center\">\n                    <input asp-for=\"ShowCustomAmount\" type=\"checkbox\" class=\"btcpay-toggle me-3\" data-bs-toggle=\"collapse\" data-bs-target=\"#CustomAmountSettings\" aria-expanded=\"@Model.ShowCustomAmount\" aria-controls=\"CustomAmountSettings\"/>\n                    <label asp-for=\"ShowCustomAmount\" class=\"form-label mb-0\"></label>\n                    <span asp-validation-for=\"ShowCustomAmount\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"collapse @(Model.ShowCustomAmount ? \"show\" : \"\")\" id=\"CustomAmountSettings\">\n                    <div class=\"form-group\">\n                        <label asp-for=\"CustomButtonText\" class=\"form-label\" data-required></label>\n                        <input asp-for=\"CustomButtonText\" class=\"form-control\" required />\n                        <span asp-validation-for=\"CustomButtonText\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n            </fieldset>\n        </div>\n    </div>\n    <div class=\"row\" style=\"margin-top:2.25rem;\">\n        <div class=\"col-xl-8 col-xxl-constrain\">\n            <h3 class=\"mb-2\">Additional Options</h3>\n            <div class=\"form-group\">\n                <div class=\"accordion\" id=\"additional\">\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-embed-payment-button-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-embed-payment-button\" aria-expanded=\"false\" aria-controls=\"additional-embed-payment-button\">\n                                Embed a payment button linking to POS item\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-embed-payment-button\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-embed-payment-button-header\">\n                            <div class=\"accordion-body\">\n                                <p>You can host point of sale buttons in an external website with the following code.</p>\n                                @if (Model.Example1 != null)\n                                {\n                                    <span>For anything with a custom amount</span>\n                                    <pre class=\"p-3\">@Model.Example1</pre>\n                                }\n                                @if (Model.Example2 != null)\n                                {\n                                    <span>For a specific item of your template</span>\n                                    <pre class=\"p-3\">@Model.Example2</pre>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-embed-pos-iframe-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-embed-pos-iframe\" aria-expanded=\"false\" aria-controls=\"additional-embed-pos-iframe\">\n                                Embed Point of Sale via Iframe\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-embed-pos-iframe\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-embed-pos-iframe-header\">\n                            <div class=\"accordion-body\">\n                                You can embed this POS via an iframe.\n                                @{\n                                    var iframe = $\"<iframe src='{Url.Action(\"ViewPointOfSale\", \"UIPointOfSale\", new { appId = Model.Id }, Context.Request.Scheme)}' style='max-width: 100%; border: 0;'></iframe>\";\n                                }\n                                <pre class=\"p-3\">@iframe</pre>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-redirect-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-redirect\" aria-expanded=\"false\" aria-controls=\"additional-redirect\">\n                                Redirects\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-redirect\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-redirect-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group\">\n                                    <label asp-for=\"RedirectUrl\" class=\"form-label\"></label>\n                                    <input asp-for=\"RedirectUrl\" class=\"form-control\" />\n                                    <span asp-validation-for=\"RedirectUrl\" class=\"text-danger\"></span>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label asp-for=\"RedirectAutomatically\" class=\"form-label\"></label>\n                                    <select asp-for=\"RedirectAutomatically\" asp-items=\"Model.RedirectAutomaticallySelectList\" class=\"form-select\"></select>\n                                    <span asp-validation-for=\"RedirectAutomatically\" class=\"text-danger\"></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-notification-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-notification\" aria-expanded=\"false\" aria-controls=\"additional-notification\">\n                                Notification URL Callbacks\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-notification\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-notification-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group\">\n                                    <label asp-for=\"NotificationUrl\" class=\"form-label\"></label>\n                                    <input asp-for=\"NotificationUrl\" class=\"form-control\" />\n                                    <span asp-validation-for=\"NotificationUrl\" class=\"text-danger\"></span>\n                                </div>\n                                <p>A <code>POST</code> callback will be sent to the specified <code>notificationUrl</code> (for on-chain transactions when there are sufficient confirmations):</p>\n                                <pre class=\"p-3\">@Model.ExampleCallback</pre>\n                                <p><strong>Never</strong> trust anything but <code>id</code>, <strong>ignore</strong> the other fields completely, an attacker can spoof those, they are present only for backward compatibility reason:</p>\n                                <ul>\n                                    <li>Send a <code>GET</code> request to <code>https://btcpay.example.com/invoices/{invoiceId}</code> with <code>Content-Type: application/json; Authorization: Basic YourLegacyAPIkey\"</code>, Legacy API key can be created with Access Tokens in Store settings</li>\n                                    <li>Verify that the <code>orderId</code> is from your backend, that the <code>price</code> is correct and that <code>status</code> is <code>settled</code></li>\n                                    <li>You can then ship your order</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"additional-custom-css-header\">\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#additional-custom-css\" aria-expanded=\"false\" aria-controls=\"additional-custom-css\">\n                                Custom CSS\n                                <vc:icon symbol=\"caret-down\" />\n                            </button>\n                        </h2>\n                        <div id=\"additional-custom-css\" class=\"accordion-collapse collapse\" aria-labelledby=\"additional-custom-css-header\">\n                            <div class=\"accordion-body\">\n                                <div class=\"form-group\">\n                                    <label asp-for=\"CustomCSSLink\" class=\"form-label\"></label>\n                                    <a href=\"https://docs.btcpayserver.org/Development/Theme/#2-bootstrap-themes\" target=\"_blank\" rel=\"noreferrer noopener\" title=\"More information...\">\n                                        <vc:icon symbol=\"info\" />\n                                    </a>\n                                    <input asp-for=\"CustomCSSLink\" class=\"form-control\" />\n                                    <span asp-validation-for=\"CustomCSSLink\" class=\"text-danger\"></span>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label asp-for=\"EmbeddedCSS\" class=\"form-label\"></label>\n                                    <textarea asp-for=\"EmbeddedCSS\" rows=\"10\" cols=\"40\" class=\"form-control\"></textarea>\n                                    <span asp-validation-for=\"EmbeddedCSS\" class=\"text-danger\"></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n<div class=\"d-flex gap-3 mt-3\">\n    <a class=\"btn btn-secondary\" asp-action=\"ListInvoices\" asp-controller=\"UIInvoice\" asp-route-storeId=\"@Model.StoreId\" asp-route-searchterm=\"@Model.SearchTerm\">Invoices</a>\n  <a id=\"DeleteApp\" class=\"btn btn-outline-danger\" asp-controller=\"UIApps\" asp-action=\"DeleteApp\" asp-route-appId=\"@Model.Id\" data-bs-toggle=\"modal\" data-bs-target=\"#ConfirmModal\" data-description=\"The app <strong>@Html.Encode(Model.AppName)</strong> and its settings will be permanently deleted.\" data-confirm-input=\"DELETE\">Delete this app</a>\n</div>\n\n<partial name=\"_Confirm\" model=\"@(new ConfirmModel(\"Delete app\", \"This app will be removed from this store.\", \"Delete\"))\" />\n\n@section PageHeadContent {\n    <link href=\"~/vendor/highlightjs/default.min.css\" rel=\"stylesheet\" asp-append-version=\"true\">\n    <link href=\"~/vendor/summernote/summernote-bs5.css\" rel=\"stylesheet\" asp-append-version=\"true\" />\n    <link href=\"~/main/template-editor.css\" rel=\"stylesheet\" asp-append-version=\"true\" />\n}\n\n@section PageFootContent {\n    <partial name=\"_ValidationScriptsPartial\" />\n    <script id=\"template-product-item\" type=\"text/template\">\n        <div class=\"col-sm-4 col-md-3 mb-3\">\n            <div class=\"card\">\n                {image}\n                <div class=\"card-body\">\n                    <h6 class=\"card-title\">{title}</h6>\n                    <a href=\"#\" class=\"js-product-edit btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#product-modal\">Edit</a>\n                    <a href=\"#\" class=\"js-product-remove btn btn-danger\"><i class=\"fa fa-trash\"></i></a>\n                </div>\n            </div>\n        </div>\n    </script>\n    <script id=\"template-product-content\" type=\"text/template\">\n        <div class=\"mb-3\">\n            <input class=\"js-product-id\" type=\"hidden\" name=\"id\" value=\"{id}\">\n            <input class=\"js-product-index\" type=\"hidden\" name=\"index\" value=\"{index}\">\n            <div class=\"form-group row\">\n                <div class=\"col-sm-6\">\n                    <label class=\"form-label\" data-required>Title</label>\n                    <input type=\"text\" class=\"js-product-title form-control mb-2\" value=\"{title}\" autofocus required />\n                </div>\n                <div class=\"col-sm-3\">\n                    <label class=\"form-label\" data-required>Price</label>\n                    <input class=\"js-product-price form-control mb-2\"\n                           inputmode=\"decimal\"\n                           pattern=\"\\d*\"\n                           type=\"number\"\n                           value=\"{price}\"\n                           required />\n                </div>\n                <div class=\"col-sm-3\">\n                    <label class=\"form-label\">Custom price</label>\n                    <select class=\"js-product-custom form-select\">\n                        {custom}\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"form-label\">Image</label>\n                <input type=\"text\" class=\"js-product-image form-control mb-2\" value=\"{image}\" />\n            </div>\n            <div class=\"form-group\">\n                <label class=\"form-label\">Description</label>\n                <textarea rows=\"3\" cols=\"40\" class=\"js-product-description form-control mb-2\">{description}</textarea>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"form-label\">Inventory (leave blank to not use inventory feature)</label>\n                <input type=\"number\" inputmode=\"numeric\" step=\"1\" class=\"js-product-inventory form-control mb-2\" value=\"{inventory}\" />\n            </div>\n            <div class=\"form-group d-flex align-items-center\">\n                <input type=\"checkbox\" class=\"btcpay-toggle me-2\" value=\"{disabled}\" />\n                <label class=\"form-label mb-0\">Disabled</label>\n            </div>\n        </div>\n    </script>\n    <script>\n        const description = document.getElementById('description');\n        const products = document.getElementById('products');\n        const tips = document.getElementById('tips');\n        const discounts = document.getElementById('discounts');\n        const buttonPriceText = document.getElementById('button-price-text');\n        const customPayments = document.getElementById('custom-payments');\n        \n        function hide(el) {\n            el.setAttribute('hidden', true);\n        }\n        function show(el) {\n            el.removeAttribute('hidden');\n        }\n        function updateFormForDefaultView(type) {\n            console.log(type)\n            switch (type) {\n                case 'Static':\n                case 'Print':\n                    hide(tips);\n                    hide(discounts);\n                    hide(buttonPriceText);\n                    show(description);\n                    show(products);\n                    show(customPayments);\n                    break;\n                case 'Cart':\n                    show(tips);\n                    show(products);\n                    show(discounts);\n                    show(description);\n                    show(buttonPriceText);\n                    show(customPayments);\n                    break;\n                case 'Light':\n                    show(tips);\n                    show(discounts);\n                    hide(products);\n                    hide(description);\n                    hide(buttonPriceText);\n                    hide(customPayments);\n                    break;\n            }\n        }\n\n        document.addEventListener('DOMContentLoaded', () => {\n            const defaultView = document.querySelector('input[name=\"DefaultView\"]:checked'); \n            if (defaultView) {\n                updateFormForDefaultView(defaultView.value);\n            }\n        });\n        \n        delegate('change', 'input[name=\"DefaultView\"]', e => {\n            updateFormForDefaultView(e.target.value);\n        });\n    </script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/summernote/summernote-bs5.js\" asp-append-version=\"true\"></script>\n}\n", "@model (Dictionary<string, object> Items, int Level)\n\n@functions {\n    private bool IsValidURL(string source)\n    {\n        return Uri.TryCreate(source, UriKind.Absolute, out var uriResult) && \n            (uriResult.Scheme == Uri.UriSchemeHttp || uriResult.Scheme == Uri.UriSchemeHttps);\n    }\n}\n\n<table class=\"table my-0\" v-pre>\n    @foreach (var (key, value) in Model.Items)\n    {\n        <tr>\n            @if (value is string str)\n            {\n                if (!string.IsNullOrEmpty(key))\n                {\n                    <th class=\"w-150px\">@key</th>\n                }\n                <td>\n                    @if (IsValidURL(str))\n                    {\n                        <a href=\"@str\" target=\"_blank\" rel=\"noreferrer noopener\">@str</a>\n                    }\n                    else\n                    {\n                        @value?.ToString()\n                    }\n                </td>\n            }\n            else if (value is Dictionary<string, object>subItems)\n            {\n                @* This is the array case *@\n                if (subItems.Count == 1 && subItems.First().Value is string str2)\n                {\n                    <th class=\"w-150px\">@key</th>\n                    <td>\n                        @if (IsValidURL(str2))\n                        {\n                            <a href=\"@str2\" target=\"_blank\" rel=\"noreferrer noopener\">@str2</a>\n                        }\n                        else\n                        {\n                            @subItems.First().Value?.ToString()\n                        }\n\t\t\t\t\t</td>\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t<td colspan=\"2\" >\n\t\t\t\t\t\t@{\n\t\t\t\t\t\t\tWrite(Html.Raw($\"<h{Model.Level + 3} class=\\\"mt-4 mb-3\\\">\"));\n\t\t\t\t\t\t\tWrite(key);\n\t\t\t\t\t\t\tWrite(Html.Raw($\"</h{Model.Level + 3}>\"));\n\t\t\t\t\t\t}\n                        <partial name=\"PosData\" model=\"(subItems, Model.Level + 1)\"/>\n                    </td>\n                }\n            }\n        </tr>\n    }\n</table>\n\n", "@model (string templateId, string title, string currency)\n\n<div id=\"template-editor-app\" v-cloak>\n    <div class=\"form-group mb-0\">\n        <h3 class=\"mt-5 mb-4\">@Model.title</h3>\n        @if (ViewContext.ViewData.ModelState.TryGetValue(Model.templateId, out var errors))\n        {\n            foreach (var error in errors.Errors)\n            {\n                <br/>\n                <span class=\"text-danger\" v-pre>@error.ErrorMessage</span>\n            }\n        }\n\n        <div class=\"bg-light card\">\n            <div class=\"card-body \" v-bind:class=\"{ 'card-deck': items.length > 0}\">\n                <div v-for=\"(item, index) of items\" class=\"card my-2 card-wrapper template-item me-0 ms-0\" v-bind:key=\"item.id\">\n                    <div v-if=\"anyImages\" class=\"card-img-top border-bottom\" v-bind:style=\"getImage(item)\"></div>\n                    <div class=\"card-body\">\n                        <h6 class=\"card-title\" v-html=\"item.title\"></h6>\n                        <div class=\"gap-3 d-flex\">\n                            <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"editItem(index)\">Edit</button>\n                            <button type=\"button\" class=\"btn btn-danger\" v-on:click=\"removeItem(index)\">\n                                <i class=\"fa fa-trash\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div v-if=\"!items || items.length === 0\" class=\"col-12 text-center\">\n                    No items.<br/>\n                    <button type=\"button\" class=\"btn btn-link\" v-on:click=\"editItem(-1)\" id=\"btn-add-first\">\n                        Add your first item\n                    </button>\n                </div>\n            </div>\n            <div class=\"card-footer text-start p-3 gap-3 d-flex\">\n                <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"editItem(-1)\" id=\"btn-add\">\n                    <i class=\"fa fa-plus fa-fw\"></i> Add\n                </button>\n                <button type=\"button\" class=\"btn btn-secondary\" id=\"ToggleRawEditor\" data-bs-toggle=\"collapse\" data-bs-target=\"#RawEditor\" aria-expanded=\"false\" aria-controls=\"RawEditor\">\n                    Toggle raw editor\n                </button>\n            </div>\n        </div>\n        <div class=\"modal\" id=\"product-modal\" tabindex=\"-1\" role=\"dialog\">\n            <div class=\"modal-dialog\" role=\"document\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" v-if=\"editingItem\">{{editingItem.index>=0? \"Edit\" : \"Add\"}} Item</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" ref=\"close\">\n                            <vc:icon symbol=\"close\"/>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\" v-if=\"editingItem\">\n                        <div class=\"mb-3\">\n                            <span class=\"text-danger row m-2\" v-for=\"error of errors\">{{error}}</span>\n                            <div class=\"form-group\">\n                                <label class=\"form-label\" data-required>Title</label>\n                                <input type=\"text\" required pattern=\"[^\\*#]+\" class=\"form-control mb-2\" v-model=\"editingItem.title\" autofocus ref=\"txtTitle\" />\n                            </div>\n                            <div class=\"form-group row\">\n                                <div class=\"col-sm-6\">\n                                    <label class=\"form-label\">Price</label>\n                                    <select class=\"form-select\" v-model=\"editingItem.custom\">\n                                        <option v-for=\"option in customPriceOptions\" :value=\"option.value\">{{option.text}}</option>\n                                    </select>\n                                </div>\n                                <div class=\"col-sm-6\" v-show=\"editingItem.custom !== 'topup'\">\n                                    <label class=\"form-label\">&nbsp;</label>\n                                    <div class=\"input-group mb-2\">\n                                        <input class=\"form-control\"\n                                               inputmode=\"decimal\"\n                                               pattern=\"\\d*\"\n                                               step=\"any\"\n                                               min=\"0\"\n                                               type=\"number\"\n                                               required\n                                               v-model=\"editingItem.price\"\n                                               ref=\"txtPrice\"\n                                               aria-describedby=\"currency-addon\"/>\n                                        <span class=\"input-group-text\" id=\"currency-addon\">@Model.currency</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Image Url</label>\n                                <input type=\"text\" class=\"form-control mb-2\" pattern=\"[^\\*#]+\" v-model=\"editingItem.image\" ref=\"txtImage\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Description</label>\n                                <textarea rows=\"3\" cols=\"40\" class=\"form-control mb-2\" v-model=\"editingItem.description\" ref=\"txtDescription\"></textarea>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Inventory</label>\n                                <input type=\"number\" inputmode=\"numeric\" min=\"0\" step=\"1\" class=\"form-control mb-2\" v-model=\"editingItem.inventory\" ref=\"txtInventory\" />\n                                <div class=\"form-text\">Leave blank to not use this feature.</div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">ID</label>\n                                <input type=\"text\" required pattern=\"[^\\*#]+\" class=\"form-control mb-2\" v-model=\"editingItem.id\" ref=\"txtId\" />\n                                <div class=\"form-text\">Leave blank to generate ID from title.</div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Buy Button Text</label>\n                                <input type=\"text\" id=\"BuyButtonText\" class=\"form-control mb-2\" v-model=\"editingItem.buyButtonText\" ref=\"txtBuyButtonText\" />\n                            </div>\n                            <div class=\"form-group d-flex align-items-center\">\n                                <input type=\"checkbox\" id=\"Disabled\" class=\"btcpay-toggle me-3\" v-model=\"editingItem.disabled\" />\n                                <label class=\"form-label mb-0\">Disabled</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" v-on:click=\"clearEditingItem()\">Close</button>\n                        <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"saveEditingItem()\" id=\"SaveItemChanges\">Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    new Vue({\n        el: '#template-editor-app',\n        data: {\n            errors: [],\n            items: [],\n            editingItem: null,\n            customPriceOptions: [\n                { text: 'Fixed', value: \"fixed\" },\n                { text: 'Minimum', value: \"minimum\" },\n                { text: 'Custom', value: 'topup' },\n            ],\n            elementId: \"@Model.templateId\"\n        },\n        computed: {\n            anyImages: function(){\n                return !!this.items.find(function(i){ return !!i.image;});\n            }\n        },\n        mounted: function() {\n            this.loadYml();\n            this.getInputElement().on(\"input change\", this.loadYml.bind(this));            \n            this.getModalElement().on(\"hide.bs.modal\", this.clearEditingItem.bind(this));\n        },\n        methods: {\n            getImage: function(item){\n                var image = this.unEscapeKey(item.image) || \"~/img/img-placeholder.svg\";\n                var url = image.startsWith(\"~\") ? image.replace('~', window.location.pathname.substring(0, image.indexOf('/apps'))) : image;\n                return {\n                    \"background-image\" : \"url('\" + url +\"')\",\n                    \"opacity\": item.image? 1: 0.5\n                }\n            },\n            getInputElement : function(){ return $(\"#\" + this.elementId); },\n            getModalElement : function(){ return $(\"#product-modal\"); },\n            loadYml: function(){\n                var result = [];\n                var template = this.getInputElement().val().trim();\n                var lines = [];\n                var items = template.split(\"\\n\");\n\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i] === \"\"){\n                        continue;\n                    }\n                    if (items[i].startsWith(\"  \")){\n                        lines[lines.length-1]+=items[i] + \"\\n\";\n                    } else {\n                        lines.push(items[i] + \"\\n\");\n                    }\n                }\n\n                // Split products from the template\n                for (var kl in lines) {\n                    var line = lines[kl], product = line.split(\"\\n\"), goingThroughMethods = false,\n                        id = null, price = null, title = null, description = null, image = null,\n                        custom = null, buyButtonText = null, inventory = null, paymentMethods = [],\n                        disabled = false;\n\n                    for (var kp in product) {\n                        var productProperty = product[kp].trim();\n            \n                        if (kp == 0) {\n                            id = productProperty.replace(\":\", \"\");\n                        }\n                        if (productProperty.startsWith(\"-\") && goingThroughMethods) {\n                            paymentMethods.push(productProperty.substr(1));\n                        } else {\n                            goingThroughMethods = false;\n                        }\n            \n                        if (productProperty.indexOf('price:') !== -1) {\n                            price = parseFloat(productProperty.replace('price:', '').trim()).noExponents();\n                        }\n                        if (productProperty.indexOf('title:') !== -1) {\n                            title = productProperty.replace('title:', '').trim();\n                        }\n                        if (productProperty.indexOf('description:') !== -1) {\n                            description =productProperty.replace('description:', '').trim();\n                            if (description.startsWith('\"') && description.endsWith('\"')){\n                                description = description.substr(1, description.length-2);\n                            }\n                            description = description\n                            .replaceAll(\"<br>\", \"\\n\")\n                            .replaceAll(\"<br/>\", \"\\n\")\n                            .replaceAll('\\\\\"', '\"')\n                        }\n                        if (productProperty.indexOf('image:') !== -1) {\n                            image = productProperty.replace('image:', '').trim();\n                        }\n                        if (productProperty.indexOf('price_type:') !== -1) {\n                            custom = productProperty.replace('price_type:', '').trim();\n                        }\n                        if (productProperty.indexOf('buyButtonText:') !== -1) {\n                            buyButtonText = productProperty.replace('buyButtonText:', '').trim();\n                        }\n                        if (productProperty.indexOf('inventory:') !== -1) {\n                            inventory = parseInt(productProperty.replace('inventory:', '').trim(),10);\n                        }\n                        if (productProperty.indexOf('payment_methods:') !== -1) {\n                            goingThroughMethods = true;\n                        }\n                        if (productProperty.indexOf('disabled:') !== -1) {\n                            disabled = productProperty.replace('disabled:', '').trim() === \"true\";\n                        }\n                    }\n            \n                    if (title != null) {\n                        // Add product to the list\n                        result.push({\n                            id: id,\n                            title: title,\n                            price: price,\n                            image: image || null,\n                            description:  description || '',\n                            custom: custom || \"fixed\",\n                            buyButtonText: buyButtonText,\n                            inventory: isNaN(inventory)? null: inventory,\n                            paymentMethods: paymentMethods,\n                            disabled: disabled\n                        });\n                    }                    \n                }\n                this.items = result;\n            },\n            toYml: function(){\n                    let template = '';\n                    // Construct template from the product list\n                    for (const key in this.items) {\n                        const product = this.items[key],\n                            id = product.id,\n                            title = product.title,\n                            price = product.custom === 'topup'? null : product.price??0,\n                            image = product.image,\n                            description = product.description,\n                            custom = product.custom,\n                            buyButtonText = product.buyButtonText,\n                            inventory = product.inventory,\n                            paymentMethods = product.paymentMethods,\n                            disabled = product.disabled;\n                        let itemTemplate = id+\":\\n\";                        \n                       itemTemplate += ( product.custom === 'topup'? '' : ('  price: ' + parseFloat(price).noExponents() + '\\n'));\n                        itemTemplate+= '  title: ' + title + '\\n';\n\n                        if (description) {\n                            itemTemplate += '  description: \"' + description.replaceAll(\"\\n\", \"<br/>\").replaceAll('\"', '\\\\\"') + '\"\\n';\n                        }\n                        if (image) {\n                            itemTemplate += '  image: ' + image + '\\n';\n                        }\n                        if (inventory) {\n                            itemTemplate += '  inventory: ' + inventory + '\\n';\n                        }\n                        if (custom != null) {\n                            itemTemplate += '  price_type: \"' + custom + '\" \\n';\n                        }\n                        if (buyButtonText != null && buyButtonText.length > 0) {\n                            itemTemplate += '  buyButtonText: ' + buyButtonText + '\\n';\n                        }\n                        if (disabled != null) {\n                            itemTemplate += '  disabled: ' + disabled.toString() + '\\n';\n                        }\n                        if(paymentMethods != null && paymentMethods.length > 0){\n                            itemTemplate+= '  payment_methods:\\n';\n                            for (var method of paymentMethods){\n                                itemTemplate+= '    - '+method+'\\n';\n                            }\n                        }                       \n                        itemTemplate += '\\n';\n                        template+=itemTemplate;\n                    }\n                    this.getInputElement().val(template);\n            },\n            editItem: function(index){\n                this.errors = [];\n                if(index < 0){\n                    this.editingItem = {index:-1, id:\"\", title: \"\", price: 0, image: \"\", description: \"\", custom: \"fixed\", inventory: null, paymentMethods: [], disabled: false};\n                }else{\n                    this.editingItem = {...this.items[index], index};\n                }\n                \n                this.editingItem = this.unEscape(this.editingItem);\n                this.getModalElement().modal(\"show\");\n            },\n            removeItem: function(index){\n                this.items.splice(index,1);\n                this.toYml();\n            },\n            clearEditingItem: function(){\n                this.editingItem = null;\n                this.errors = [];\n            },\n            validate: function(){\n                this.errors = [];\n                if (this.editingItem.id) {\n                    var matchedId = this.items.findIndex((x)=> { return this.unEscapeKey(x.id) === this.editingItem.id;});\n                    if( matchedId>= 0 && matchedId != this.editingItem.index)\n                        this.errors.push(\"You cannot have multiple items with the same id\");\n                    \n                    if (!this.$refs.txtId.checkValidity()) {\n                        this.errors.push(\"Id is required and cannot have * or #\");\n                    }\n                    if(this.editingItem.id.startsWith(\"- \")){\n                        this.errors.push(\"Id cannot start with \\\"- \\\"\");\n                    }else if(this.editingItem.id.trim() == \"\"){\n                        this.errors.push(\"Id is required\");\n                    }                   \n                }   \n                \n                if (this.editingItem.description.indexOf(\"*\") >= 0 || this.editingItem.description.indexOf(\"#\") >= 0) {\n                    this.errors.push(\"Description cannot have * or #\");\n                }\n                if(this.editingItem.description.startsWith(\"- \")){\n                    this.errors.push(\"Description cannot start with \\\"- \\\"\");\n                }\n                if (!this.$refs.txtImage.checkValidity()) {\n                    this.errors.push(\"Image cannot have * or #\");\n                }\n                if(this.editingItem.image.startsWith(\"- \")){\n                    this.errors.push(\"Image cannot start with \\\"- \\\"\");\n                }\n                \n                if (this.editingItem.custom !== \"topup\" && !this.$refs.txtPrice.checkValidity()) {\n                    this.errors.push(\"Price must be a valid number\");\n                }\n                if (!this.$refs.txtTitle.checkValidity()) {\n                    this.errors.push(\"Title is required and cannot have * or #\");\n                }else if(this.editingItem.title.startsWith(\"- \")){\n                    this.errors.push(\"Title cannot start with \\\"- \\\"\");\n                }else if(this.editingItem.title.trim() == \"\"){\n                    this.errors.push(\"Title is required\");\n                }                \n                if (!this.$refs.txtInventory.checkValidity()) {\n                    this.errors.push(\"Inventory must be blank or a a valid number (>=0)\");\n                }\n                return this.errors.length === 0;\n            },\n            saveEditingItem: function(){\n                const fallbackId = this.editingItem.title.toLowerCase().trim();\n                if(!this.editingItem.id && fallbackId){\n                    this.editingItem.id = fallbackId;\n                    this.$nextTick(this.saveEditingItem.bind(this));\n                    return;\n                }\n                if(!this.validate()){\n                    return;\n                }\n                this.editingItem = this.escape(this.editingItem);\n                \n                if(this.editingItem.index < 0){\n                    this.items.push(this.editingItem);\n                }else{\n                    this.items.splice(this.editingItem.index,1,this.editingItem);\n                }\n                this.toYml();\n                this.getModalElement().modal(\"hide\");\n            },\n            escape: function(item) {\n                for(var k in item){\n                    if(k !== \"paymentMethods\" && k!==\"id\"){\n                        item[k] = $('<div/>').text(item[k]).html();\n                    }\n                }\n                return item;\n            },\n            unEscape: function(item){\n                for(var k in item){\n                    if(k !== \"paymentMethods\" && k!==\"id\" && k !== \"disabled\"){\n                        item[k] = this.unEscapeKey(item[k]);\n                    }\n                }\n                return item;\n            },\n            unEscapeKey : function(k){\n                // Without this check a `false` boolean value will always be returned as an empty string\n                if (k === false) {\n                    return \"false\";\n                }\n\n                return $('<div/>').html(k).text();\n            }\n        }\n    });\n});\n\nNumber.prototype.noExponents= function(){\n    var data= String(this).split(/[eE]/);\n    if(data.length== 1) return data[0];\n\n    var  z= '', sign= this<0? '-':'',\n        str= data[0].replace('.', ''),\n        mag= Number(data[1])+ 1;\n\n    if(mag<0){\n        z= sign + '0.';\n        while(mag++) z += '0';\n        return z + str.replace(/^\\-/,'');\n    }\n    mag -= str.length;\n    while(mag--) z += '0';\n    return str + z;\n};\n\n</script>\n", "@using BTCPayServer.Abstractions.Extensions\n@using BTCPayServer.Components.StoreSelector\n@using BTCPayServer.Components.MainNav\n@inject Microsoft.AspNetCore.Http.IHttpContextAccessor _context;\n@inject BTCPayServer.Services.BTCPayServerEnvironment _env\n@inject SignInManager<ApplicationUser> _signInManager\n@inject UserManager<ApplicationUser> _userManager\n@inject LinkGenerator _linkGenerator\n@inject BTCPayServer.Services.PoliciesSettings PoliciesSettings\n\n@{\n    var notificationsReturnUrl = Context.Request.GetCurrentPathWithQueryString();\n    var notificationDisabled = PoliciesSettings.DisableInstantNotifications;\n    if (!notificationDisabled)\n    {\n        var user = await _userManager.GetUserAsync(User);\n        notificationDisabled = user?.DisabledNotifications == \"all\";\n    }\n\tvar expectedScheme = _context.HttpContext.Request.Scheme;\n\tvar expectedHost = _context.HttpContext.Request.Host.ToString();\n}\n\n<!DOCTYPE html>\n<html lang=\"en\"@(_env.IsDeveloping ? \" data-devenv\" : \"\")>\n<head>\n    <partial name=\"LayoutHead\" />\n    @await RenderSectionAsync(\"PageHeadContent\", false)\n</head>\n<body class=\"d-flex flex-column flex-lg-row min-vh-100\">\n<header id=\"mainMenu\" class=\"btcpay-header d-flex flex-column\" v-pre>\n    <div id=\"mainMenuHead\">\n        <button id=\"mainMenuToggle\" class=\"mainMenuButton\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#mainNav\" aria-controls=\"mainNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span>Menu</span>\n        </button>\n        <vc:store-selector />\n        @if (_signInManager.IsSignedIn(User))\n        {\n            <vc:notifications appearance=\"Dropdown\" return-url=\"@notificationsReturnUrl\" />\n        }\n    </div>\n    <vc:main-nav />\n</header>\n<template id=\"badUrl\">\n\t<div class=\"alert alert-danger alert-dismissible m-3\" role=\"alert\">\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">\n            <vc:icon symbol=\"close\"/>\n        </button>\n        <span>\n            BTCPay is expecting you to access this website from <strong>@(expectedScheme)://@(expectedHost)/</strong>.\n            If you use a reverse proxy, please set the <strong>X-Forwarded-Proto</strong> header to <strong id=\"browserScheme\">@(expectedScheme)</strong>\n            (<a href=\"https://docs.btcpayserver.org/FAQ/Deployment/#cause-3-btcpay-is-expecting-you-to-access-this-website-from\" target=\"_blank\" class=\"alert-link\" rel=\"noreferrer noopener\">More information</a>)\n        </span>\n    </div>\n</template>\n<main id=\"mainContent\">\n    @if (!_env.IsSecure(_context.HttpContext))\n    {\n        <div id=\"insecureEnv\" class=\"alert alert-danger alert-dismissible\" style=\"position:absolute; top:75px;\" role=\"alert\">\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">\n                <vc:icon symbol=\"close\"/>\n            </button>\n            <span>\n                Your access to BTCPay Server is over an unsecured network. If you are using the docker deployment method with NGINX and HTTPS is not available, you probably did not configure your DNS settings correctly. <br/>\n                We disabled the register and login link so you don't leak your credentials.\n            </span>\n        </div>\n    }\n    <section>\n        @RenderBody()\n    </section>\n    \n    <partial name=\"_Footer\"/>\n    <partial name=\"LayoutFoot\"/>\n\n    @await RenderSectionAsync(\"PageFootContent\", false)\n    <partial name=\"LayoutPartials/SyncModal\"/>\n\n    @if (!notificationDisabled)\n    {\n        <script>\n\t\t\tvar mainContent = document.getElementById(\"mainContent\");\n\t\t\tif (window.location.protocol != \"@(expectedScheme):\" || window.location.host != \"@expectedHost\")\n\t\t\t{\n\t\t\t\tvar tmpl = document.getElementById(\"badUrl\");\n\t\t\t\tmainContent.prepend(tmpl.content.cloneNode(true));\n\t\t\t}\n            if ('WebSocket' in window && window.WebSocket.CLOSING === 2) {\n                const { host, protocol } = window.location;\n                var wsUri = \"@_linkGenerator.GetPathByAction(\"SubscribeUpdates\", \"UINotifications\", pathBase: Context.Request.PathBase)\";\n\t\t\t\twsUri = (protocol === \"https:\" ? \"wss:\" : \"ws:\") + \"//\" + host + wsUri;\n                const newDataEndpoint = \"@_linkGenerator.GetPathByAction(\"GetNotificationDropdownUI\", \"UINotifications\", pathBase: Context.Request.PathBase, values: new { returnUrl = notificationsReturnUrl })\";\n                try {\n                    socket = new WebSocket(wsUri);\n                    socket.onmessage = e => {\n                        if (e.data === \"ping\") return;\n                        $.get(newDataEndpoint, data => {\n                            $(\"#Notifications\").replaceWith($(data));\n                        });\n                    };\n                    socket.onerror = e => {\n                        console.error(\"Error while connecting to websocket for notifications (callback)\", e);\n                    };\n                }\n                catch (e) {\n                    console.error(\"Error while connecting to websocket for notifications\", e);\n                }\n            }\n        </script>\n    }\n</main>\n</body>\n</html>\n", "@{\n    Layout = \"_LayoutSimple\";\n    ViewBag.ShowTitle ??= true;\n    ViewBag.ShowLeadText ??= false;\n}\n\n@section PageHeadContent {\n    <style>\n        .account-form {\n            max-width: 35em;\n            margin: 0 auto var(--btcpay-space-xl);\n            padding: 2rem;\n            background: var(--btcpay-bg-tile);\n            border-radius: var(--btcpay-border-radius);\n        }\n        .account-form h4 {\n            margin-bottom: 1.5rem;\n        }\n        .main-logo { height: 4rem; width: 18rem; }\n        .main-logo.main-logo-btcpay { height: 4.5rem; width: 2.5rem; }\n        .main-logo-btcpay .main-logo-btcpay--large { display: none; }\n    </style>\n    @await RenderSectionAsync(\"PageHeadContent\", false)\n}\n\n@section PageFootContent {\n    <partial name=\"_ValidationScriptsPartial\" />\n    @await RenderSectionAsync(\"PageFootContent\", false)\n}\n\n<div class=\"row justify-content-center mb-2\">\n    <div class=\"col text-center\">\n        <a asp-controller=\"UIHome\" asp-action=\"Index\" tabindex=\"-1\" class=\"d-inline-block navbar-brand mx-0 mb-4\">\n            <vc:main-logo />\n        </a>\n\n        <h1 class=\"h2 mb-3\">Welcome to your BTCPay&nbsp;Server</h1>\n        @if (ViewBag.ShowLeadText)\n        {\n            <p class=\"lead\">\n                <span class=\"d-sm-block\">A self-hosted, open-source bitcoin payment processor.</span>\n                <span class=\"d-sm-block\">It is secure, private, censorship-resistant and free.</span>\n            </p>\n        }\n\n        <partial name=\"_StatusMessage\"/>\n    </div>\n</div>\n\n<div class=\"account-form\">\n    @if (ViewBag.ShowTitle)\n    {\n\t  <h4 v-pre>@ViewData[\"Title\"]</h4>\n    }\n    @RenderBody()\n</div>\n\n<div class=\"row justify-content-center mt-5\">\n    <div class=\"col\">\n        <partial name=\"_BTCPaySupporters\"/>\n    </div>\n</div>\n\n\n\n", "@using BTCPayServer.Abstractions.Extensions\n@{\n    var parsedModel = TempData.GetStatusMessageModel();\n}\n\n@if (parsedModel != null)\n{\n\t<div class=\"alert alert-@parsedModel.SeverityCSS @(parsedModel.AllowDismiss? \"alert-dismissible\":\"\" ) @(ViewData[\"Margin\"] ?? \"mb-4\") text-break\" role=\"alert\" v-pre>\n        @if (parsedModel.AllowDismiss)\n        {\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">\n                <vc:icon symbol=\"close\" />\n            </button>\n        }\n        @if (!string.IsNullOrEmpty(parsedModel.Message))\n        {\n            <span style=\"white-space: pre-wrap;\">@parsedModel.Message</span>\n        }\n        @if (!string.IsNullOrEmpty(parsedModel.Html))\n        {\n            @Safe.Raw(parsedModel.Html)\n        }\n    </div>\n}\n", "@inject IFileService FileService\n@using BTCPayServer.Abstractions.Contracts\n@using BTCPayServer.Abstractions.Extensions\n@model (string Title, string LogoFileId)\n@{\n    var logoUrl = !string.IsNullOrEmpty(Model.LogoFileId)\n        ? await FileService.GetFileUrl(Context.Request.GetAbsoluteRootUri(), Model.LogoFileId)\n        : null;\n}\n<header class=\"store-header\" v-pre>\n    @if (!string.IsNullOrEmpty(logoUrl))\n    {\n        <img src=\"@logoUrl\" alt=\"@Model.Title\" class=\"store-logo\"/>\n    }\n    <h1 class=\"store-name\">@Model.Title</h1>\n</header>\n", "@model LoginViewModel\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@inject BTCPayServer.Services.PoliciesSettings PoliciesSettings\n@{\n\tViewData[\"Title\"] = \"Sign in\";\n\tLayout = \"_LayoutSignedOut\";\n\tCsp.UnsafeEval();\n}\n\n<form asp-route-returnurl=\"@ViewData[\"ReturnUrl\"]\" method=\"post\" id=\"login-form\" asp-action=\"Login\">\n    <fieldset disabled=\"@(ViewData.ContainsKey(\"disabled\") ? \"disabled\" : null)\">\n        <div asp-validation-summary=\"ModelOnly\" class=\"text-danger\"></div>\n        <div class=\"form-group\">\n            <label asp-for=\"Email\" class=\"form-label\"></label>\n            <input asp-for=\"Email\" class=\"form-control\" required tabindex=\"1\" autofocus/>\n            <span asp-validation-for=\"Email\" class=\"text-danger\"></span>\n        </div>\n        <div class=\"form-group\">\n            <div class=\"d-flex justify-content-between\">\n                <label asp-for=\"Password\" class=\"form-label\"></label>\n                <a asp-action=\"ForgotPassword\" tabindex=\"5\">Forgot password?</a>\n            </div>\n            <div class=\"input-group  d-flex\">\n                <input asp-for=\"Password\" class=\"form-control\" required tabindex=\"2\"/>\n            </div>\n            <span asp-validation-for=\"Password\" class=\"text-danger\"></span>\n        </div>\n        <div class=\"form-group mt-4\">\n            <div class=\"btn-group w-100\">\n                <button type=\"submit\" class=\"btn btn-primary btn-lg w-100\" id=\"LoginButton\" tabindex=\"3\"><span class=\"ps-3\">Sign in</span></button>\n                <button type=\"button\" class=\"btn btn-outline-primary btn-lg w-auto only-for-js\" data-bs-toggle=\"modal\" data-bs-target=\"#scanModal\" title=\"Scan Login code with camera\" tabindex=\"4\"><i class=\"fa fa-camera\"></i></button>\n            </div>\n        </div>\n    </fieldset>\n</form>\n<form asp-action=\"LoginWithCode\" asp-route-returnurl=\"@ViewData[\"ReturnUrl\"]\" method=\"post\" id=\"logincode-form\">\n    <input asp-for=\"LoginCode\" type=\"hidden\" class=\"form-control\"/>\n</form>\n@if (!PoliciesSettings.LockSubscription)\n{\n    <p class=\"text-center mt-2 mb-0\">\n        <a id=\"Register\" style=\"font-size:1.15rem\" asp-action=\"Register\" asp-route-returnurl=\"@ViewData[\"ReturnUrl\"]\" tabindex=\"4\">Create your account</a>\n    </p>\n}\n\n@section PageFootContent {\n    <partial name=\"CameraScanner\"/>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/ur-registry/urlib.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode-reader/VueQrcodeReader.umd.min.js\" asp-append-version=\"true\"></script>\n\n    <link href=\"~/vendor/vue-qrcode-reader/vue-qrcode-reader.css\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n\n    <script type=\"text/javascript\">\n        window.addEventListener(\"load\", async () => {\n            initCameraScanningApp(\"Scan login code\", data => {\n                document.getElementById(\"LoginCode\").value = data;\n                document.getElementById(\"logincode-form\").submit();\n            }, \"scanModal\", true);\n        });\n    </script>\n}\n", "@using BTCPayServer.Views.Apps\n@using BTCPayServer.Abstractions.Extensions\n@using BTCPayServer.Abstractions.Custodians\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@model BTCPayServer.Models.CustodianAccountViewModels.ViewCustodianAccountViewModel\n@{\n\tViewData.SetActivePage(AppsNavPages.Create, \"Custodian account: \" + @Model?.CustodianAccount.Name);\n\tCsp.UnsafeEval();\n}\n\n@section PageHeadContent\n{\n    <link href=\"~/main/qrcode.css\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n}\n\n@section PageFootContent {\n    <partial name=\"_ValidationScriptsPartial\"/>\n}\n\n<style>\n    .trade-qty label{display: block; }\n</style>\n\n<div id=\"custodianAccountView\" v-cloak>\n<div class=\"sticky-header-setup\"></div>\n<div class=\"sticky-header d-flex flex-wrap gap-3 align-items-center justify-content-between\">\n    <h2 class=\"mb-0\">\n        @ViewData[\"Title\"]\n    </h2>\n    <div class=\"d-flex flex-wrap gap-3\">\n        <a class=\"btn btn-primary\" role=\"button\" v-if=\"account?.depositablePaymentMethods?.length > 0\" v-on:click=\"openDepositModal()\" href=\"#\">\n            <span class=\"fa fa-download\"></span> Deposit\n        </a>\n        <a asp-action=\"EditCustodianAccount\" asp-route-storeId=\"@Model.CustodianAccount.StoreId\" asp-route-accountId=\"@Model.CustodianAccount.Id\" class=\"btn btn-primary\" role=\"button\" id=\"EditCustodianAccountConfig\">\n            <span class=\"fa fa-gear\"></span> Configure\n        </a>\n        <!--\n        <button type=\"submit\" class=\"btn btn-primary order-sm-1\" id=\"SaveSettings\">Save</button>\n        <a class=\"btn btn-secondary\" id=\"ViewApp\" target=\"app_\" href=\"/apps/MQ2sCVsmQ95JBZ4aZDtoSwMAnBY/pos\">View</a>\n        -->\n    </div>\n</div>\n\n<partial name=\"_StatusMessage\"/>\n\n<div class=\"row\">\n    <div class=\"col-xl-12\">\n        <div v-if=\"!account\" class=\"loading d-flex justify-content-center p-3\">\n            <div class=\"spinner-border text-light\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n        </div>\n\n        <div v-if=\"account\">\n            <p class=\"alert alert-danger\" v-if=\"account.assetBalanceExceptionMessage\">\n                {{ account.assetBalanceExceptionMessage }}\n            </p>\n\n            <h2>Balances</h2>\n\n            <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"checkbox\" v-model=\"hideDustAmounts\" id=\"flexCheckDefault\">\n                <label class=\"form-check-label\" for=\"flexCheckDefault\">\n                    Hide holdings worth less than {{ account.dustThresholdInFiat }} {{ account.storeDefaultFiat }}.\n                </label>\n            </div>\n\n\n            <div class=\"table-responsive\">\n                <table class=\"table table-hover table-responsive-md\">\n                    <thead>\n                    <tr>\n                        <th>Asset</th>\n                        <th class=\"text-end\">Balance</th>\n                        <th class=\"text-end\">Unit Price (Bid)</th>\n                        <th class=\"text-end\">Unit Price (Ask)</th>\n                        <th class=\"text-end\">Fiat Value</th>\n                        <th class=\"text-end\">Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr v-for=\"row in sortedAssetRows\" :key=\"row.asset\">\n                        <td>{{ row.asset }}</td>\n                        <!-- TODO format as number? How? -->\n                        <th class=\"text-end\">{{ row.formattedQty }}</th>\n                        <th class=\"text-end\">\n                            {{ row.formattedBid }}\n                        </th>\n                        <th class=\"text-end\">\n                            {{ row.formattedAsk }}\n                        </th>\n                        <th class=\"text-end\">\n                            {{ row.formattedFiatValue }}\n                        </th>\n                        <th class=\"text-end\">\n                            <a v-if=\"row.tradableAssetPairs\" v-on:click=\"openTradeModal(row)\" href=\"#\">Trade</a>\n                            <a v-if=\"canDepositAsset(row.asset)\" v-on:click=\"openDepositModal(row)\" href=\"#\">Deposit</a>\n                            <a v-if=\"row.canWithdraw\" v-on:click=\"openWithdrawModal(row)\" href=\"#\">Withdraw</a>\n                        </th>\n                    </tr>\n                    <tr v-if=\"account.assetBalances.length === 0\">\n                        <td colspan=\"999\" class=\"text-center\">No assets are stored with this custodian (yet).</td>\n                    </tr>\n                    <tr v-if=\"account.assetBalanceExceptionMessage !== null\">\n                        <td colspan=\"999\" class=\"text-center\">An error occured while loading assets and balances.</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n\n\n            <h2>Features</h2>\n            <p>The @Model?.Custodian.Name custodian supports:</p>\n            <ul>\n                <li>Viewing asset account</li>\n                @if (Model?.Custodian is ICanTrade)\n                {\n                    <li>Trading</li>\n                }\n                @if (Model?.Custodian is ICanDeposit)\n                {\n                    <li>Depositing</li>\n                }\n                @if (Model?.Custodian is ICanWithdraw)\n                {\n                    <li>Withdrawing (Greenfield API only, for now)</li>\n                }\n            </ul>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id=\"withdrawModal\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Withdraw</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n                    <vc:icon symbol=\"close\"/>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>Withdrawals are coming soon, but if you need this today, you can use our <a rel=\"noopener noreferrer\" href=\"https://docs.btcpayserver.org/API/Greenfield/v1/\" target=\"_blank\">Greenfield API \"Withdraw to store wallet\" endpoint</a> to execute a withdrawal.</p>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id=\"depositModal\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Deposit</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n                    <vc:icon symbol=\"close\"/>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p v-if=\"deposit.errorMsg\" class=\"alert alert-danger\">{{ deposit.errorMsg }}</p>\n                <div class=\"form-group\">\n                    <label class=\"form-label\" for=\"DepositAsset\">Asset to Deposit</label>\n                    <select class=\"form-select\" v-model=\"deposit.asset\" name=\"DepositAsset\">\n                        <option v-for=\"option in availableAssetsToDeposit\" v-bind:value=\"option\">\n                            {{ option }}\n                        </option>\n                    </select>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-label\" for=\"DepositPaymentNetwork\">Payment Method</label>\n                    <select class=\"form-select\" v-model=\"deposit.paymentMethod\" name=\"DepositPaymentNetwork\">\n                        <option v-for=\"option in availablePaymentMethodsToDeposit\" v-bind:value=\"option\">\n                            {{ option }}\n                        </option>\n                    </select>\n                </div>\n                \n                <div class=\"loading d-flex justify-content-center p-3\" v-if=\"deposit.isLoading\">\n                    <div class=\"spinner-border text-light\" role=\"status\">\n                        <span class=\"visually-hidden\">Loading...</span>\n                    </div>\n                </div>\n                \n                <div v-if=\"!deposit.isLoading && (deposit.link || deposit.address)\">\n                    <div class=\"tab-content text-center\">\n                        <div v-if=\"deposit.link\" class=\"tab-pane\" id=\"link-tab\" role=\"tabpanel\">\n                            <div class=\"qr-container mb-3\">\n                                <img :src=\"deposit.cryptoImageUrl\" class=\"qr-icon\" :alt=\"deposit.asset\"/>\n                                <qrcode v-bind:value=\"deposit.link\" :options=\"{ width: 256, margin: 1, color: {dark:'#000', light:'#f5f5f7'} }\" tag=\"svg\"></qrcode>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"input-group\" :data-clipboard=\"deposit.link\">\n                                    <input type=\"text\" class=\"form-control\" style=\"cursor:copy\" readonly=\"readonly\" :value=\"deposit.link\" id=\"payment-link\"/>\n                                    <button type=\"button\" class=\"btn btn-outline-secondary p-2\" style=\"width:7em;\" data-clipboard-confirm>\n                                        <vc:icon symbol=\"copy\"/>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div v-if=\"deposit.address\" class=\"tab-pane show active\" id=\"address-tab\" role=\"tabpanel\">\n                            <div class=\"qr-container mb-3\">\n                                <img v-bind:src=\"deposit.cryptoImageUrl\" class=\"qr-icon\" :alt=\"deposit.asset\"/>\n                                <qrcode v-bind:value=\"deposit.address\" :options=\"{ width: 256, margin: 1, color: {dark:'#000', light:'#f5f5f7'} }\" tag=\"svg\"></qrcode>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"input-group\" :data-clipboard=\"deposit.address\">\n                                    <input type=\"text\" class=\"form-control\" style=\"cursor:copy\" readonly=\"readonly\" :value=\"deposit.address\" id=\"address\"/>\n                                    <button type=\"button\" class=\"input-group-text btn btn-outline-secondary p-2\" style=\"width:7em;\" data-clipboard-confirm>\n                                        <vc:icon symbol=\"copy\"/>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"nav justify-content-center\">\n                        <a v-if=\"deposit.address\" :class=\"{active: deposit.tab === 'address' }\" class=\"btcpay-pill\" data-bs-toggle=\"tab\" href=\"#address-tab\">Address</a>\n                        <a v-if=\"deposit.link\" :class=\"{active: deposit.tab === 'link' }\" class=\"btcpay-pill\" data-bs-toggle=\"tab\" href=\"#link-tab\">Link</a>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                <a v-if=\"deposit.createTransactionUrl\" class=\"btn btn-primary\" :href=\"deposit.createTransactionUrl\">\n                    Create Transaction\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id=\"tradeModal\" :data-bs-keyboard=\"!trade.isExecuting\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" v-on:submit=\"onTradeSubmit\" method=\"post\" asp-action=\"Trade\" asp-route-accountId=\"@Model?.CustodianAccount?.Id\" asp-route-storeId=\"@Model?.CustodianAccount?.StoreId\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Trade {{ trade.qty }} {{ trade.assetToTrade }} into {{ trade.assetToTradeInto }}</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" v-if=\"!trade.isExecuting\">\n                    <vc:icon symbol=\"close\"/>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"loading d-flex justify-content-center p-3\" v-if=\"trade.isExecuting\">\n                    <div class=\"spinner-border text-light\" role=\"status\">\n                        <span class=\"visually-hidden\">Loading...</span>\n                    </div>\n                </div>\n\n                <div v-if=\"!trade.isExecuting && trade.results === null\">\n                    <p v-if=\"trade.errorMsg\" class=\"alert alert-danger\">{{ trade.errorMsg }}</p>\n\n                    <div class=\"row mb-2 trade-qty\">\n                        <div class=\"col-side\">\n                            <label class=\"form-label\">\n                                Convert\n                                <div class=\"input-group has-validation\">\n                                    <!--\n                                    getMinQtyToTrade() = {{ getMinQtyToTrade(this.trade.assetToTradeInto, this.trade.assetToTrade) }}\n                                    <br/>\n                                    Max Qty to Trade = {{ trade.maxQtyToTrade }}\n                                    -->\n                                    <input name=\"Qty\" type=\"number\" min=\"0\" step=\"any\" :max=\"trade.maxQtyToTrade\" :min=\"getMinQtyToTrade()\" class=\"form-control qty\" v-bind:class=\"{ 'is-invalid': trade.qty < getMinQtyToTrade() || trade.qty > trade.maxQtyToTrade }\" v-model=\"trade.qty\"/>\n                                    <select name=\"FromAsset\" v-model=\"trade.assetToTrade\" class=\"form-select\">\n                                        <option v-for=\"option in availableAssetsToTrade\" v-bind:value=\"option\">\n                                            {{ option }}\n                                        </option>\n                                    </select>\n                                </div>\n                            </label>\n                        </div>\n                        <div class=\"col-center text-center\">\n                            &nbsp;\n                            <br/>\n                            <button v-if=\"canSwapTradeAssets()\" type=\"button\" class=\"btn btn-secondary btn-square\" v-on:click=\"swapTradeAssets()\" aria-label=\"Swap assets\">\n                                <i class=\"fa fa-arrows-h\" aria-hidden=\"true\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-side\">\n                            <label class=\"form-label\">\n                                Into\n                                <div class=\"input-group\">\n                                    <input disabled=\"disabled\" type=\"number\" class=\"form-control qty\" v-model=\"tradeQtyToReceive\"/>\n                                    <select name=\"ToAsset\" v-model=\"trade.assetToTradeInto\" class=\"form-select\">\n                                        <option v-for=\"option in availableAssetsToTradeInto\" v-bind:value=\"option\">\n                                            {{ option }}\n                                        </option>\n                                    </select>\n                                </div>\n                            </label>\n                        </div>\n                    </div>\n                    <div>\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"Set qty to a percentage of holdings\">\n                            <button v-on:click=\"setTradeQtyPercent(10)\" class=\"btn btn-secondary\" type=\"button\">10%</button>\n                            <button v-on:click=\"setTradeQtyPercent(25)\" class=\"btn btn-secondary\" type=\"button\">25%</button>\n                            <button v-on:click=\"setTradeQtyPercent(50)\" class=\"btn btn-secondary\" type=\"button\">50%</button>\n                            <button v-on:click=\"setTradeQtyPercent(75)\" class=\"btn btn-secondary\" type=\"button\">75%</button>\n                            <button v-on:click=\"setTradeQtyPercent(90)\" class=\"btn btn-secondary\" type=\"button\">90%</button>\n                            <button v-on:click=\"setTradeQtyPercent(100)\" class=\"btn btn-secondary\" type=\"button\">100%</button>\n                        </div>\n                    </div>\n\n                    <p v-if=\"trade.price\">\n                        <br/>\n                        1 {{ trade.assetToTradeInto }} = {{ trade.price }} {{ trade.assetToTrade }}\n                        <br/>\n                        1 {{ trade.assetToTrade }} = {{ 1 / trade.price }} {{ trade.assetToTradeInto }}\n                    </p>\n                    <p v-if=\"canExecuteTrade\">\n                        After the trade\n                        {{ trade.maxQtyToTrade - trade.qty }} {{ trade.assetToTrade }} will remain in your account.\n                    </p>\n\n                    <!--\n                    <p>\n                        trade.priceForPair = {{ trade.priceForPair }}\n                    </p>\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>From</th>\n                            <th>To</th>\n                            <th>Min Qty to Trade</th>\n                            <th>Price</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>EUR</td>\n                            <td>BTC</td>\n                            <td>{{getMinQtyToTrade('EUR', 'BTC')}}</td>\n                            <td>{{trade.priceForPair['EUR/BTC']}}</td>\n                        </tr>\n                        <tr>\n                            <td>BTC</td>\n                            <td>EUR</td>\n                            <td>{{getMinQtyToTrade('BTC', 'EUR')}}</td>\n                            <td>{{trade.priceForPair['BTC/EUR']}}</td>\n                        </tr>\n                        <tr>\n                            <td>EUR</td>\n                            <td>LTC</td>\n                            <td>{{getMinQtyToTrade('EUR', 'LTC')}}</td>\n                            <td>{{trade.priceForPair['EUR/LTC']}}</td>\n                        </tr>\n                        <tr>\n                            <td>LTC</td>\n                            <td>EUR</td>\n                            <td>{{getMinQtyToTrade('LTC', 'EUR')}}</td>\n                            <td>{{trade.priceForPair['LTC/EUR']}}</td>\n                        </tr>\n                        <tr>\n                            <td>BTC</td>\n                            <td>LTC</td>\n                            <td>{{getMinQtyToTrade('BTC', 'LTC')}}</td>\n                            <td>{{trade.priceForPair['BTC/LTC']}}</td>\n                        </tr>\n                        <tr>\n                            <td>LTC</td>\n                            <td>BTC</td>\n                            <td>{{getMinQtyToTrade('LTC', 'BTC')}}</td>\n                            <td>{{trade.priceForPair['LTC/BTC']}}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    -->\n                    <div class=\"form-text\">Final results may vary due to trading fees and slippage.</div>\n                </div>\n                <div v-if=\"trade.results !== null\">\n                    <p class=\"alert alert-success\">Successfully traded {{ trade.results.fromAsset}} into {{ trade.results.toAsset}}.</p>\n                    <table class=\"table table-striped\">\n                        <thead>\n                        <tr>\n                            <th colspan=\"2\">Asset</th>\n                            <th>Comment</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr v-for=\"entry in trade.results.ledgerEntries\">\n                            <td class=\"text-end\" v-bind:class=\"{ 'text-success': entry.qty > 0, 'text-danger': entry.qty < 0 }\"><span v-if=\"entry.qty > 0\">+</span>{{ entry.qty }}</td>\n                            <td v-bind:class=\"{ 'text-success': entry.qty > 0, 'text-danger': entry.qty < 0 }\">{{ entry.asset }}</td>\n                            <td v-bind:class=\"{ 'text-success': entry.qty > 0, 'text-danger': entry.qty < 0 }\">\n                                <span v-if=\"entry.type !== 'Trade'\">{{ entry.type}}</span>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <p>Trade ID: {{ trade.results.tradeId }}</p>\n                </div>\n            </div>\n            <div class=\"modal-footer\" v-if=\"!trade.isExecuting\">\n\n                <div class=\"modal-footer-left\">\n                    <span v-if=\"trade.isUpdating\">\n                        Updating quote...\n                    </span>\n                </div>\n\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n                    <span v-if=\"trade.results\">Close</span>\n                    <span v-if=\"!trade.results\">Cancel</span>\n                </button>\n                <button v-if=\"canExecuteTrade\" type=\"submit\" class=\"btn btn-primary\">Execute</button>\n            </div>\n        </form>\n    </div>\n</div>\n</div>\n\n<script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n<script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n<script type=\"text/javascript\">\nvar ajaxBalanceUrl = \"@Url.Action(\"ViewCustodianAccountJson\", \"UICustodianAccounts\", new { storeId = Model?.CustodianAccount.StoreId, accountId = Model?.CustodianAccount.Id })\";\nvar ajaxTradePrepareUrl = \"@Url.Action(\"GetTradePrepareJson\", \"UICustodianAccounts\", new { storeId = Model?.CustodianAccount.StoreId, accountId = Model?.CustodianAccount.Id })\";\nvar ajaxDepositUrl = \"@Url.Action(\"GetDepositPrepareJson\", \"UICustodianAccounts\", new { storeId = Model?.CustodianAccount.StoreId, accountId = Model?.CustodianAccount.Id })\";\n</script>\n<script src=\"~/js/custodian-account.js\" asp-append-version=\"true\"></script>\n", "@inject BTCPayServer.Services.LanguageService langService\n@inject BTCPayServer.Services.BTCPayServerEnvironment env\n@inject PaymentMethodHandlerDictionary PaymentMethodHandlerDictionary\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@model PaymentModel\n@{\n\tLayout = null;\n\tCsp.UnsafeEval();\n}\n\n<!DOCTYPE html>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n    <META NAME=\"robots\" CONTENT=\"noindex,nofollow\">\n    <title>@Model.HtmlTitle</title>\n    <link href=\"~/vendor/font-awesome/css/font-awesome.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/vendor/vex/css/vex.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/main/fonts/Roboto.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/main/fonts/RobotoMono.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/checkout/css/default.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/checkout/css/vex-extrastyles.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/checkout/css/vex-theme-btcpay.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <link href=\"~/vendor/jquery-prettydropdowns/prettydropdowns.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n\n    <script>\n        var initialSrvModel = @Safe.Json(Model);\n    </script>\n    <script src=\"~/vendor/jquery/jquery.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/bootstrap/bootstrap.bundle.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/clipboard.js/clipboard.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/i18next/i18next.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/i18next/i18nextHttpBackend.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/i18next/vue-i18next.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/jquery-prettydropdowns/jquery.prettydropdowns.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vex/js/vex.combined.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/main/utils.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/checkout/js/checkout.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/checkout/js/querystring.js\" asp-append-version=\"true\"></script>\n\n    <script>vex.defaultOptions.className = 'vex-theme-btcpay'</script>\n\n    @if (!string.IsNullOrEmpty(Model.CustomCSSLink))\n    {\n        <link href=\"@Model.CustomCSSLink\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n    }\n\n    @if (Model.IsModal)\n    {\n        <style type=\"text/css\">\n            body {\n                background: rgba(25, 25, 25, 0.9);\n            }\n\n            .close-icon {\n                display: flex;\n            }\n        </style>\n    }\n</head>\n<body>\n    <noscript>\n        <div style=\"padding:2em;text-align:center;\">\n            <h2>Javascript is currently disabled in your browser.</h2>\n            <h5>Please enable Javascript and refresh this page for the best experience.</h5>\n\n            <p>Alternatively, click below to continue to our HTML-only invoice.</p>\n\n            <a asp-action=\"CheckoutNoScript\" asp-route-invoiceId=\"@Model.InvoiceId\" style=\"text-decoration:underline;color:blue\">\n                Continue to javascript-disabled invoice &gt;\n            </a>\n        </div>\n    </noscript>\n\n    <!--[if lte IE 8]>\n    <div style=\"padding:2em;text-align:center;\">\n      <form asp-action=\"CheckoutNoScript\" method=\"GET\">\n        <button style=\"text-decoration: underline; color: blue\">Continue to legacy browser compatible invoice page\n        </button>\n      </form>\n    </div>\n    <![endif]-->\n\n    <invoice>\n        <div class=\"no-bounce\" id=\"checkoutCtrl\" v-cloak>\n            <div class=\"modal page\" style=\"min-height:100vh\">\n                <div class=\"modal-dialog open opened\" role=\"document\" v-bind:class=\"{ 'expired': invoiceUnpayable, 'paid': invoicePaid, 'enter-purchaser-email': showEmailForm}\">\n                    <div class=\"modal-content long\">\n                        <div class=\"content\">\n                            <div class=\"invoice\">\n                                <partial name=\"Checkout-Body\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style=\"margin-top: 10px; text-align: center;\">\n                        @* Not working because of nsSeparator: false, keySeparator: false,\n                            {{$t(\"nested.lang\")}} >>\n                        *@\n\n                        <select asp-for=\"DefaultLang\"\n                                class=\"cmblang reverse invisible\"\n                                asp-items=\"@langService.GetLanguageSelectListItems()\"></select>\n\n                        <script>\n                            $(function () {\n                                // REVIEW: don't use initDropdown method but rather directly initialize select whenever you are using it\n                                $(\"#DefaultLang\").val(startingLanguage);\n                                var languageSelectorPrettyDropdown = initDropdown(\"#DefaultLang\");\n\n                                languageSelectorPrettyDropdown.change(function () {\n                                    changeLanguage(languageSelectorPrettyDropdown.val());\n                                });\n\n                                languageSelectorPrettyDropdown.keypress(function (event) {\n                                    if (event.keyCode == 13) {\n                                        languageSelectorPrettyDropdown.click();\n                                    }\n                                });\n                            });\n\n                            function initDropdown(selector) {\n                                return $(selector).prettyDropdown({\n                                    classic: true,\n                                    height: 32,\n                                    reverse: true,\n                                    hoverIntent: -1\n                                });\n                            }\n                        </script>\n                    </div>\n                    <div class=\"powered__by__btcpayserver\">\n                        Powered by <a target=\"_blank\" href=\"https://github.com/btcpayserver/btcpayserver\" rel=\"noreferrer noopener\">BTCPay Server</a>\n                    </div>\n                    @if (env.CheatMode)\n                    {\n                        <partial name=\"Checkout-Testing\" />\n                    }\n                </div>\n            </div>\n        </div>\n    </invoice>\n    <script>\n    var availableLanguages = @Safe.Json(langService.GetLanguages().Select((language) => language.Code));\n    var defaultLang = @Safe.Json(Model.DefaultLang);\n    var fallbackLanguage = \"en\";\n    startingLanguage = computeStartingLanguage();\n    i18next\n        .use(window.i18nextHttpBackend)\n        .init({\n            backend: {\n                loadPath: @Safe.Json($\"{Model.RootPath}misc/translations/checkout-v1/{{{{lng}}}}?v={env.Version}\")\n            },\n            lng: startingLanguage,\n            fallbackLng: fallbackLanguage,\n            nsSeparator: false,\n            keySeparator: false\n        });\n\n    function computeStartingLanguage() {\n        if (urlParams.lang && isLanguageAvailable(urlParams.lang)) {\n            return urlParams.lang;\n        }\n        else if (isLanguageAvailable(defaultLang)) {\n            return defaultLang;\n        } else {\n            return fallbackLanguage;\n        }\n    }\n\n    function changeLanguage(lang) {\n        if (isLanguageAvailable(lang)) {\n            i18next.changeLanguage(lang);\n        }\n    }\n\n    function isLanguageAvailable(languageCode) {\n        return availableLanguages.indexOf(languageCode) >= 0;\n    }\n\n    var i18n = new VueI18next(i18next);\n    Vue.config.ignoredElements = [\n        'line-items',\n        'low-fee-timeline',\n        // Ignoring custom HTML5 elements, eg: bp-spinner\n        /^bp-/\n    ];\n    var eventBus = new Vue();\n    var checkoutCtrl = new Vue({\n        i18n: i18n,\n        el: '#checkoutCtrl',\n        data: {\n            srvModel: initialSrvModel,\n            end: new Date(),\n            expirationPercentage: 0,\n            timerText: \"@Model.TimeLeft\",\n            emailAddressInput: \"\",\n            emailAddressInputDirty: false,\n            emailAddressInputInvalid: false,\n            emailAddressFormSubmitting: false,\n            lineItemsExpanded: false,\n            changingCurrencies: false,\n            loading: true,\n            isModal: initialSrvModel.isModal\n        },\n        computed: {\n            expiringSoon: function(){\n                return this.expirationPercentage >= 75 && !this.invoiceUnpayable && !this.invoicePaid;\n            },\n            showPaymentUI: function(){\n                return !this.showEmailForm && !this.invoiceUnpayable && !this.invoicePaid;\n            },\n            showEmailForm: function(){\n                return this.srvModel.requiresRefundEmail && (!this.srvModel.customerEmail || !this.validateEmail(this.srvModel.customerEmail)) && !this.invoiceUnpayable;\n            },\n            showRecommendedFee: function(){\n                return  this.srvModel.showRecommendedFee && this.srvModel.feeRate != 0;\n            },\n            invoiceUnpayable: function(){\n                return  [\"expired\", \"invalid\"].indexOf(this.srvModel.status) >= 0;\n            },\n            invoicePaid: function(){\n                return  [\"complete\", \"confirmed\", \"paid\"].indexOf(this.srvModel.status) >= 0;\n            },\n            storeLink () {\n                return this.srvModel.merchantRefLink && this.srvModel.merchantRefLink !== this.srvModel.receiptLink\n                    ? this.srvModel.merchantRefLink\n                    : null;\n            }\n        },\n        mounted: function(){\n            this.startProgressTimer();\n            this.listenIn();\n            this.onDataCallback(this.srvModel);\n            if (this.srvModel.status === \"new\" && this.srvModel.txCount > 1) {\n                this.onlyExpandLineItems();\n            }\n            window.parent.postMessage(\"loaded\", \"*\");\n            jQuery(\"invoice\").fadeOut(0).fadeIn(300);\n            window.closePaymentMethodDialog = this.closePaymentMethodDialog.bind(this);\n            this.loading = false;\n        },\n        methods: {\n            onlyExpandLineItems: function() {\n                if (!this.lineItemsExpanded) {\n                    this.toggleLineItems();\n                }},\n            toggleLineItems: function() {\n                this.lineItemsExpanded ? $(\"line-items\").slideUp() : $(\"line-items\").slideDown();\n                this.lineItemsExpanded = !this.lineItemsExpanded;\n            },\n            openPaymentMethodDialog: function() {\n                var content = $(\"#vexPopupDialog\").html();\n                vex.open({\n                    unsafeContent: content\n                });\n            },\n            closePaymentMethodDialog: function(currencyId) {\n                vex.closeAll();\n                this.changeCurrency(currencyId);\n            },\n            changeCurrency: function (currency) {\n                if (currency !== null && this.srvModel.paymentMethodId !== currency) {\n                    this.changingCurrencies = true;\n                    this.srvModel.paymentMethodId = currency;\n                    this.fetchData();\n                    this.closePaymentMethodDialog(null);\n                }\n            },\n            close: function(){\n                $(\"invoice\").fadeOut(300, function () {\n                    window.parent.postMessage(\"close\", \"*\");\n                });\n            },\n            validateEmail: function (email) {\n                var re = /^(([^<>()\\[\\]\\\\.,;:\\s@@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@@\"]+)*)|(\".+\"))@@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                return re.test(email);\n            },\n            startProgressTimer: function(){\n                var timeLeftS = this.endDate? (this.endDate.getTime() - new Date().getTime())/1000 : this.srvModel.expirationSeconds;\n                this.expirationPercentage = 100 - ((timeLeftS / this.srvModel.maxTimeSeconds) * 100);\n                this.timerText = this.updateTimerText(timeLeftS);\n                if( this.expirationPercentage < 100 &&  (this.srvModel.status === \"paidPartial\" || this.srvModel.status === \"new\")){\n                    setTimeout(this.startProgressTimer, 500);\n                }\n            },\n            updateTimerText: function (timer) {\n                if (timer >= 0) {\n                    var minutes = parseInt(timer / 60, 10);\n                    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n                    var seconds = parseInt(timer % 60, 10);\n                    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n                    return minutes + \":\" + seconds;\n                } else {\n                    return \"00:00\";\n                }\n            },\n            listenIn: function(){\n                var self = this;\n                var socket = null;\n                var supportsWebSockets = 'WebSocket' in window && window.WebSocket.CLOSING === 2;\n                if (supportsWebSockets) {\n                    var loc = window.location, ws_uri;\n                    if (loc.protocol === \"https:\") {\n                        ws_uri = \"wss:\";\n                    } else {\n                        ws_uri = \"ws:\";\n                    }\n                    ws_uri += \"//\" + loc.host;\n                    ws_uri += loc.pathname + \"/status/ws?invoiceId=\" + this.srvModel.invoiceId;\n\n                    try {\n                        socket = new WebSocket(ws_uri);\n                        socket.onmessage = function (e) {\n                            if (e.data === \"ping\")\n                                return;\n                            self.fetchData();\n                        };\n                        socket.onerror = function (e) {\n                            console.error(\"Error while connecting to websocket for invoice notifications (callback)\");\n                        };\n                    }\n                    catch (e) {\n                        console.error(\"Error while connecting to websocket for invoice notifications\");\n                    }\n                }\n                var self = this;\n                function watcher(){\n                    setTimeout(function(){\n                        if (socket === null || socket.readyState !== 1) {\n                            self.fetchData();\n                        }\n                        watcher();\n                    }, 2000);\n                }\n                watcher();\n            },\n            fetchData: function(){\n                var self = this;\n                $.ajax({\n                    url: window.location.pathname + \"/status?invoiceId=\" + this.srvModel.invoiceId + \"&paymentMethodId=\" + this.srvModel.paymentMethodId,\n                    type: \"GET\",\n                    cache: false\n                })\n                .done(function (data) {\n                    self.onDataCallback.bind(self)(data);\n                })\n            },\n            onDataCallback : function(jsonData){\n                if (this.srvModel.status !== jsonData.status) {\n                    window.parent.postMessage({ \"invoiceId\": this.srvModel.invoiceId, \"status\": jsonData.status }, \"*\");\n                }\n                if (jsonData.paymentMethodId === this.srvModel.paymentMethodId) {\n                    this.changingCurrencies = false;\n                }\n                // displaying satoshis for lightning payments\n                jsonData.cryptoCodeSrv = jsonData.cryptoCode;\n                // expand line items to show details on amount due for multi-transaction payment\n                if (this.srvModel.txCount === 1 && jsonData.txCount > 1) {\n                    this.onlyExpandLineItems();\n                }\n                var newEnd = new Date();\n                newEnd.setSeconds(newEnd.getSeconds()+ jsonData.expirationSeconds);\n                this.endDate = newEnd;\n                // updating ui\n                this.srvModel = jsonData;\n\n                eventBus.$emit(\"data-fetched\", this.srvModel);\n                if (this.invoicePaid && jsonData.redirectAutomatically && jsonData.merchantRefLink) {\n                    this.loading = true;\n                    setTimeout(function () {\n                        if (this.isModal && window.top.location == jsonData.merchantRefLink){\n                            this.close();\n                        } else {\n                            window.top.location = jsonData.merchantRefLink;\n                        }\n                    }.bind(this), 2000);\n                }\n            },\n            onEmailChange: function(){\n                this.emailAddressInputDirty = true;\n                this.emailAddressInputInvalid = false;\n            },\n            onEmailSubmit : function(){\n                var self = this;\n                if (this.validateEmail(this.emailAddressInput)) {\n                    this.emailAddressFormSubmitting = true;\n                    // Push the email to a server, once the reception is confirmed move on\n                    $.ajax({\n                        url: window.location.pathname + \"/UpdateCustomer?invoiceId=\" +this.srvModel.invoiceId,\n                        type: \"POST\",\n                        data: JSON.stringify({ Email: this.emailAddressInput }),\n                        contentType: \"application/json; charset=utf-8\"\n                    })\n                    .done(function () {\n                        self.srvModel.customerEmail = self.emailAddressInput;\n                    }).always(function () {\n                        self.emailAddressFormSubmitting = false;\n                    });\n                } else {\n                    this.emailAddressInputInvalid = true;\n                }\n            }\n        }\n    });\n    </script>\n\n    @foreach (var paymentMethodHandler in PaymentMethodHandlerDictionary.Select(handler => handler.GetCheckoutUISettings()).Where(settings => settings != null))\n    {\n        <partial name=\"@paymentMethodHandler.ExtensionPartial\" model=\"@Model\" />\n    }\n    @await Component.InvokeAsync(\"UiExtensionPoint\", new { location = \"checkout-end\", model = Model })\n</body>\n</html>\n", "@using BTCPayServer.Services\n@using BTCPayServer.Abstractions.Contracts\n@using Microsoft.AspNetCore.Mvc.TagHelpers\n@inject LanguageService LangService\n@inject BTCPayServerEnvironment Env\n@inject IEnumerable<IUIExtension> UiExtensions \n@inject PaymentMethodHandlerDictionary PaymentMethodHandlerDictionary\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@model PaymentModel\n@{\n\tLayout = null;\n\tViewData[\"Title\"] = Model.HtmlTitle;\n\tCsp.UnsafeEval();\n\tvar hasPaymentPlugins = UiExtensions.Any(extension => extension.Location == \"checkout-payment-method\");\n    // Show LNURL as selectable payment method only for top up invoices + non-BIP21 case\n    var displayedPaymentMethods = Model.IsUnsetTopUp && !Model.OnChainWithLnInvoiceFallback\n        ? Model.AvailableCryptos\n        : Model.AvailableCryptos.Where(c => c.PaymentMethodId != \"BTC_LNURLPAY\").ToList();\n}\n@functions {\n    private string PaymentMethodName(PaymentModel.AvailableCrypto pm)\n    {\n        return Model.AltcoinsBuild\n            ? pm.PaymentMethodName\n            : pm.PaymentMethodName.Replace(\"Bitcoin (\", \"\").Replace(\")\", \"\").Replace(\"Lightning \", \"\");\n    }\n\n    private string ToJsValue(object value)\n    {\n        return Safe.Json(value).ToString()?.Replace(\"\\\"\", \"'\");\n    }\n}\n<!DOCTYPE html>\n<html lang=\"@Model.DefaultLang\" class=\"@(Model.IsModal ? \"checkout-modal\" : \"\")\"@(Env.IsDeveloping ? \" data-devenv\" : \"\")>\n<head>\n    <partial name=\"LayoutHead\"/>\n    <meta name=\"robots\" content=\"noindex,nofollow\">\n    <link href=\"~/checkout-v2/checkout.css\" asp-append-version=\"true\" rel=\"stylesheet\" />\n    <partial name=\"LayoutHeadStoreBranding\" model=\"@(Model.BrandColor, Model.CssFileId, \"\", \"\")\" />\n</head>\n<body class=\"min-vh-100\">\n    <div id=\"Checkout-v2\" class=\"public-page-wrap\" v-cloak>\n        <partial name=\"_StoreHeader\" model=\"(Model.StoreName, Model.LogoFileId)\" />\n        <main class=\"shadow-lg\">\n            <nav v-if=\"isModal\">\n                <button type=\"button\" v-if=\"isModal\" id=\"close\" v-on:click=\"close\">\n                    <vc:icon symbol=\"close\"/>\n                </button>\n            </nav>\n            <section id=\"payment\" v-if=\"isActive\">\n                @if (!string.IsNullOrEmpty(Model.ItemDesc) && Model.ItemDesc != Model.StoreName)\n                {\n                    <h5 class=\"text-center mt-1 mb-3 fw-semibold\" v-if=\"srvModel.itemDesc\" v-text=\"srvModel.itemDesc\"></h5>\n                }\n                @if (Model.IsUnsetTopUp)\n                {\n                    <h2 id=\"AmountDue\" class=\"mt-1 text-center\" v-t=\"'any_amount'\"></h2>\n                }\n                else\n                {\n                    <h2 id=\"AmountDue\" class=\"mt-1 text-center\" v-text=\"`${srvModel.btcDue} ${srvModel.cryptoCode}`\" :data-clipboard=\"srvModel.btcDue\" :data-clipboard-confirm=\"$t('copy_confirm')\" :data-amount-due=\"srvModel.btcDue\">@Model.BtcDue @Model.CryptoCode</h2>\n                }\n                <div id=\"PaymentInfo\" class=\"info mt-3 mb-2\" v-collapsible=\"showInfo\">\n                    <div>\n                        <div class=\"timer\" v-if=\"showTimer\">\n                            <span class=\"spinner-border spinner-border-sm\" role=\"status\"><span class=\"visually-hidden\"></span></span>\n                            <span v-t=\"'expiry_info'\"></span> <span class=\"expiryTime\">{{timeText}}</span>\n                        </div>\n                        <div class=\"payment-due\" v-if=\"showPaymentDueInfo\">\n                            <vc:icon symbol=\"info\"/>\n                            <span v-t=\"'partial_payment_info'\"></span>\n                        </div>\n                        <div v-if=\"showPaymentDueInfo\" v-html=\"replaceNewlines($t('still_due', { amount: `${srvModel.btcDue} ${srvModel.cryptoCode}` }))\"></div>\n                    </div>\n                </div>\n                <button id=\"DetailsToggle\" class=\"d-flex align-items-center gap-1 btn btn-link payment-details-button mb-2\" type=\"button\" :aria-expanded=\"displayPaymentDetails ? 'true' : 'false'\" v-on:click=\"displayPaymentDetails = !displayPaymentDetails\">\n                    <span class=\"fw-semibold\" v-t=\"'view_details'\"></span>\n                    <vc:icon symbol=\"caret-down\"/>\n                </button>\n                <div id=\"PaymentDetails\" class=\"payment-details\" v-collapsible=\"displayPaymentDetails\">\n                    <payment-details :srv-model=\"srvModel\" :is-active=\"isActive\" class=\"pb-4\"></payment-details>\n                </div>\n                @if (displayedPaymentMethods.Count > 1 || hasPaymentPlugins)\n                {\n                    <div class=\"mt-3 mb-2\">\n                        <h6 class=\"text-center mb-3\" v-t=\"'pay_with'\"></h6>\n                        <div class=\"btcpay-pills d-flex flex-wrap align-items-center justify-content-center gap-2 pb-2\">\n                            @foreach (var crypto in displayedPaymentMethods)\n                            {\n                                <a asp-action=\"Checkout\" asp-route-invoiceId=\"@Model.InvoiceId\" asp-route-paymentMethodId=\"@crypto.PaymentMethodId\"\n                                   class=\"btcpay-pill m-0 payment-method\"\n                                   :class=\"{ active: pmId === @ToJsValue(crypto.PaymentMethodId) }\"\n                                   v-on:click.prevent=\"changePaymentMethod(@ToJsValue(crypto.PaymentMethodId))\">\n                                    @PaymentMethodName(crypto)\n                                </a>\n                            }\n                            @await Component.InvokeAsync(\"UiExtensionPoint\", new { location = \"checkout-payment-method\", model = Model })\n                        </div>\n                    </div>\n                }\n                <component v-if=\"paymentMethodComponent\" :is=\"paymentMethodComponent\" :model=\"srvModel\" />\n            </section>\n            <section id=\"result\" v-else>\n                <div id=\"paid\" v-if=\"isPaid\">\n                    <div class=\"top\">\n                        <span class=\"icn\">\n                            <vc:icon symbol=\"payment-complete\"/>\n                        </span>\n                        <h4 v-t=\"'invoice_paid'\"></h4>\n                        <dl class=\"mb-0\">\n                            <div>\n                                <dt v-t=\"'invoice_id'\"></dt>\n                                <dd v-text=\"srvModel.invoiceId\"></dd>\n                            </div>\n                            <div v-if=\"srvModel.orderId\">\n                                <dt v-t=\"'order_id'\"></dt>\n                                <dd v-text=\"srvModel.orderId\"></dd>\n                            </div>\n                        </dl>\n                        <payment-details :srv-model=\"srvModel\" :is-active=\"isActive\" class=\"mb-5\"></payment-details>\n                    </div>\n                    <div class=\"buttons\">\n                        <a v-if=\"srvModel.receiptLink\" class=\"btn btn-primary rounded-pill w-100\" :href=\"srvModel.receiptLink\" :target=\"isModal ? '_top' : null\" v-t=\"'view_receipt'\" id=\"ReceiptLink\"></a>\n                        <a v-if=\"storeLink\" class=\"btn btn-secondary rounded-pill w-100\" :href=\"storeLink\" :target=\"isModal ? '_top' : null\"  v-html=\"$t('return_to_store', { storeName: srvModel.storeName })\" id=\"StoreLink\"></a>\n                        <button v-else-if=\"isModal\" class=\"btn btn-secondary rounded-pill w-100\" v-on:click=\"close\" v-t=\"'Close'\"></button>\n                    </div>\n                </div>\n                <div id=\"expired\" v-if=\"isUnpayable\">\n                    <div class=\"top\">\n                        <span class=\"icn\">\n                            <vc:icon symbol=\"invoice-expired\"/>\n                        </span>\n                        <h4 v-t=\"'invoice_expired'\"></h4>\n                        <dl class=\"mb-0\">\n                            <div>\n                                <dt v-t=\"'invoice_id'\"></dt>\n                                <dd v-text=\"srvModel.invoiceId\"></dd>\n                            </div>\n                            <div v-if=\"srvModel.orderId\">\n                                <dt v-t=\"'order_id'\"></dt>\n                                <dd v-text=\"srvModel.orderId\"></dd>\n                            </div>\n                        </dl>\n                        <div id=\"PaymentDetails\" class=\"payment-details\" v-collapsible=\"displayPaymentDetails\">\n                            <payment-details :srv-model=\"srvModel\" :is-active=\"isActive\"></payment-details>\n                        </div>\n                        <button class=\"d-flex align-items-center gap-1 btn btn-link payment-details-button\" type=\"button\" :aria-expanded=\"displayPaymentDetails ? 'true' : 'false'\" v-on:click=\"displayPaymentDetails = !displayPaymentDetails\">\n                            <span class=\"fw-semibold\" v-t=\"'view_details'\"></span>\n                            <vc:icon symbol=\"caret-down\"/>\n                        </button>\n                        <p class=\"text-center mt-3\" v-html=\"replaceNewlines($t('invoice_expired_body', { storeName: srvModel.storeName, minutes: @Model.MaxTimeMinutes }))\"></p>\n                    </div>\n                    <div class=\"buttons\">\n                        <a v-if=\"storeLink\" class=\"btn btn-primary rounded-pill w-100\" :href=\"storeLink\" :target=\"isModal ? '_top' : null\" v-html=\"$t('return_to_store', { storeName: srvModel.storeName })\" id=\"StoreLink\"></a>\n                        <button v-else-if=\"isModal\" class=\"btn btn-primary rounded-pill w-100\" v-on:click=\"close\" v-t=\"'Close'\"></button>\n                    </div>\n                </div>\n            </section>\n        </main>\n        @if (Env.CheatMode)\n        {\n            <checkout-cheating invoice-id=\"@Model.InvoiceId\" :btc-due=\"srvModel.btcDue\" :is-paid=\"isPaid\" :payment-method-id=\"pmId\"></checkout-cheating>\n        }\n        <footer class=\"store-footer\">\n            <a class=\"store-powered-by\" href=\"https://btcpayserver.org\" target=\"_blank\" rel=\"noreferrer noopener\">\n                {{$t(\"powered_by\")}} <partial name=\"_StoreFooterLogo\" />\n            </a>\n            <select asp-for=\"DefaultLang\" asp-items=\"@LangService.GetLanguageSelectListItems()\" class=\"form-select\" v-on:change=\"changeLanguage\"></select>\n        </footer>\n    </div>\n    <noscript>\n        <div class=\"p-5 text-center\">\n            <h2>Javascript is currently disabled in your browser.</h2>\n            <h5>Please enable Javascript and refresh this page for the best experience.</h5>\n            <p>\n                Alternatively, click below to continue to our\n                <a asp-action=\"CheckoutNoScript\" asp-route-invoiceId=\"@Model.InvoiceId\">HTML-only invoice</a>.\n            </p>\n        </div>\n    </noscript>\n    <script type=\"text/x-template\" id=\"payment-details\">\n        <dl>\n            <div v-if=\"orderAmount > 0\">\n                <dt v-t=\"'total_price'\"></dt>\n                <dd :data-clipboard=\"srvModel.orderAmount\" :data-clipboard-confirm=\"$t('copy_confirm')\">{{srvModel.orderAmount}} {{ srvModel.cryptoCode }}</dd>\n            </div>\n            <div v-if=\"orderAmount > 0 && srvModel.orderAmountFiat\">\n                <dt v-t=\"'total_fiat'\"></dt>\n                <dd :data-clipboard=\"srvModel.orderAmountFiat\" :data-clipboard-confirm=\"$t('copy_confirm')\">{{srvModel.orderAmountFiat}}</dd>\n            </div>\n            <div v-if=\"srvModel.rate && srvModel.cryptoCode\">\n                <dt v-t=\"'exchange_rate'\"></dt>\n                <dd :data-clipboard=\"srvModel.rate\" :data-clipboard-confirm=\"$t('copy_confirm')\">\n                    <template v-if=\"srvModel.cryptoCodeSrv === 'Sats'\">1 Sat = {{ srvModel.rate }}</template>\n                    <template v-else>1 {{ srvModel.cryptoCodeSrv }} = {{ srvModel.rate }}</template>\n                </dd>\n            </div>\n            <div v-if=\"srvModel.networkFee\">\n                <dt v-t=\"'network_cost'\"></dt>\n                <dd :data-clipboard=\"srvModel.networkFee\" :data-clipboard-confirm=\"$t('copy_confirm')\">\n                    <div v-if=\"srvModel.txCountForFee > 0\" v-t=\"{ path: 'tx_count', args: { count: srvModel.txCount } }\"></div>\n                    <div v-text=\"`${srvModel.networkFee} ${srvModel.cryptoCode}`\"></div>\n                </dd>\n            </div>\n            <div v-if=\"btcPaid > 0\">\n                <dt v-t=\"'amount_paid'\"></dt>\n                <dd :data-clipboard=\"srvModel.btcPaid\" :data-clipboard-confirm=\"$t('copy_confirm')\" v-text=\"`${srvModel.btcPaid} ${srvModel.cryptoCode}`\"></dd>\n            </div>\n            <div v-if=\"btcDue > 0\">\n                <dt v-t=\"'amount_due'\"></dt>\n                <dd :data-clipboard=\"srvModel.btcDue\" :data-clipboard-confirm=\"$t('copy_confirm')\" v-text=\"`${srvModel.btcDue} ${srvModel.cryptoCode}`\"></dd>\n            </div>\n            <div v-if=\"showRecommendedFee\">\n                <dt v-t=\"'recommended_fee'\"></dt>\n                <dd :data-clipboard=\"srvModel.feeRate\" :data-clipboard-confirm=\"$t('copy_confirm')\" v-t=\"{ path: 'fee_rate', args: { feeRate: srvModel.feeRate } }\"></dd>\n            </div>\n        </dl>\n    </script>\n    <script>\n\tconst i18nUrl = @Safe.Json($\"{Model.RootPath}misc/translations/checkout-v2/{{{{lng}}}}?v={Env.Version}\");\n        const statusUrl = @Safe.Json(Url.Action(\"GetStatus\", new { invoiceId = Model.InvoiceId }));\n        const statusWsUrl = @Safe.Json(Url.Action(\"GetStatusWebSocket\", new { invoiceId = Model.InvoiceId }));\n        const availableLanguages = @Safe.Json(LangService.GetLanguages().Select(language => language.Code));\n        const initialSrvModel = @Safe.Json(Model);\n        const qrOptions = { margin: 0, type: 'svg', color: { dark: '#000', light: '#fff' } };\n    </script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/i18next/i18next.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/i18next/i18nextHttpBackend.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/i18next/vue-i18next.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/js/copy-to-clipboard.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/main/utils.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/checkout-v2/checkout.js\" asp-append-version=\"true\"></script>\n    @if (Env.CheatMode)\n    {\n        <partial name=\"Checkout-Cheating\" model=\"@Model\" />\n    }\n    @foreach (var paymentMethodHandler in PaymentMethodHandlerDictionary\n        .Select(handler => handler.GetCheckoutUISettings())\n        .Where(settings => settings != null)\n        .DistinctBy(pm => pm.ExtensionPartial))\n    {\n        <partial name=\"@paymentMethodHandler.ExtensionPartial-v2\" model=\"@Model\"/>\n    }\n    @await Component.InvokeAsync(\"UiExtensionPoint\", new { location = \"checkout-payment\", model = Model })\n    @await Component.InvokeAsync(\"UiExtensionPoint\", new { location = \"checkout-v2-end\", model = Model })\n</body>\n</html>\n", "@namespace BTCPayServer.Client\n@using BTCPayServer.Abstractions.Models\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@model BTCPayServer.Controllers.UIManageController.ApiKeysViewModel\n@{\n\tViewData.SetActivePage(ManageNavPages.APIKeys, \"API Keys\");\n\tCsp.UnsafeEval();\n}\n\n<div class=\"row\">\n    <div class=\"col-xl-10 col-xxl-constrain\">\n        <div class=\"d-flex align-items-center justify-content-between mb-3\">\n            <h3 class=\"mb-0\">@ViewData[\"Title\"]</h3>\n            <a class=\"btn btn-primary\" asp-action=\"AddApiKey\" id=\"AddApiKey\">\n                <span class=\"fa fa-plus\"></span>\n                Generate Key\n            </a>\n        </div>\n        <p>\n            The <a asp-controller=\"UIHome\" asp-action=\"SwaggerDocs\" target=\"_blank\">BTCPay Server Greenfield API</a> offers programmatic access to your instance. You can manage your BTCPay\n            Server (e.g. stores, invoices, users) as well as automate workflows and integrations (see <a href=\"https://docs.btcpayserver.org/Development/GreenFieldExample/\" rel=\"noreferrer noopener\">use case examples</a>).\n            For that you need the API keys, which can be generated here. Find more information in the <a href=\"@Url.Action(\"SwaggerDocs\", \"UIHome\")#section/Authentication\" target=\"_blank\" rel=\"noreferrer noopener\">API authentication docs</a>.\n        </p>\n\n        @if (Model.ApiKeyDatas.Any())\n        {\n            <table class=\"table table-lg\">\n                <thead>\n                    <tr>\n                        <th>Label</th>\n                        <th class=\"w-125px\">Key</th>\n                        <th>Permissions</th>\n                        <th class=\"text-end\">Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    @{\n                        var index = 0;\n                    }\n                    @foreach (var keyData in Model.ApiKeyDatas)\n                    {\n                        <tr>\n                            <td>@keyData.Label</td>\n                            <td>\n                                <code class=\"hide-when-js\">@keyData.Id</code>\n                                <a class=\"only-for-js\" data-reveal-btn>Click to reveal</a>\n                                <div hidden>\n                                    <code data-api-key>@keyData.Id</code>\n                                    <a class=\"mt-2\" data-clipboard-confirm>\n                                        Copy to clipboard\n                                    </a>\n                                </div>\n                            </td>\n                            <td>\n                                @{\n                                    var permissions = keyData.GetBlob().Permissions;\n                                }\n                                @if (!permissions.Any())\n                                {\n                                    <span class=\"text-warning\">No permissions</span>\n                                }\n                                else\n                                {\n                                    <ul>\n                                        @foreach (var permission in Permission.ToPermissions(permissions).Select(c => c.ToString()).Distinct().ToArray())\n                                        {\n                                            <li>\n                                                <code class=\"text-break\">@permission</code>\n                                            </li>\n                                        }\n                                    </ul>\n                                }\n                            </td>\n                            <td class=\"text-end\">\n\t\t\t\t\t\t\t\t<a asp-action=\"DeleteAPIKey\" asp-route-id=\"@keyData.Id\" asp-controller=\"UIManage\" data-bs-toggle=\"modal\" data-bs-target=\"#ConfirmModal\" data-description=\"Any application using the API key <strong>@Html.Encode(keyData.Label ?? keyData.Id)</strong> will immediately lose access.\" data-confirm-input=\"DELETE\">Delete</a>\n                                <span>-</span>\n                                <button type=\"button\" class=\"btn btn-link only-for-js p-0\" data-qr=\"@index\">Show QR</button>\n                            </td>\n                        </tr>\n                        index++;\n                    }\n                </tbody>\n            </table>\n        }\n    </div>\n</div>\n\n<partial name=\"_Confirm\" model=\"@(new ConfirmModel(\"Delete API key\", \"Any application using the API key will immediately lose access.\", \"Delete\"))\" />\n\n<partial name=\"ShowQR\" />\n\n@section PageHeadContent {\n    <link href=\"~/vendor/vue-qrcode-reader/vue-qrcode-reader.css\" rel=\"stylesheet\" asp-append-version=\"true\" />\n}\n@section PageFootContent {\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/ur-registry/urlib.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode-reader/VueQrcodeReader.umd.min.js\" asp-append-version=\"true\"></script>\n\n    <script>\n        document.addEventListener(\"DOMContentLoaded\", function () {\n            $(\"[data-reveal-btn]\").on(\"click\", function (){\n                var $revealButton = $(this);\n                $revealButton.attr(\"hidden\", \"true\");\n\n                var $apiKeyContainer = $revealButton.next(\"[hidden]\");\n                $apiKeyContainer.removeAttr(\"hidden\");\n\n                (function setupCopyToClipboardButton() {\n                    var $clipboardBtn = $apiKeyContainer.children(\"[data-clipboard-confirm]\");\n                    var apiKey = $apiKeyContainer.children(\"[data-api-key]\").text().trim();\n                    $clipboardBtn.attr(\"data-clipboard\", apiKey);\n                    $clipboardBtn.click(window.copyToClipboard);\n                })();\n            });\n\n            const apiKeys = @Safe.Json(Model.ApiKeyDatas.Select(data => new\n                          {\n                              ApiKey = data.Id,\n                              Host = Context.Request.GetAbsoluteRoot()\n                          }));\n            const qrApp = initQRShow({ title: \"API Key QR\" });\n            delegate(\"click\", \"button[data-qr]\", e => {\n                e.preventDefault();\n                const { qr } = e.target.dataset;\n                const data = apiKeys[qr];\n                qrApp.showData(JSON.stringify(data));\n            });\n        });\n    </script>\n}\n", "@using BTCPayServer.Services.Invoices\n@using BTCPayServer.Client.Models\n@using BTCPayServer.Client\n@model BTCPayServer.Models.PaymentRequestViewModels.ViewPaymentRequestViewModel\n@inject BTCPayServer.Services.BTCPayServerEnvironment Env\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@{\n\tViewData[\"Title\"] = Model.Title;\n\tCsp.UnsafeEval();\n\tLayout = null;\n    string StatusClass(InvoiceState state)\n    {\n        switch (state.Status.ToModernStatus())\n        {\n            case InvoiceStatus.Settled:\n            case InvoiceStatus.Processing:\n                return \"success\";\n            case InvoiceStatus.Expired:\n                switch (state.ExceptionStatus)\n                {\n                    case InvoiceExceptionStatus.PaidLate:\n                    case InvoiceExceptionStatus.PaidPartial:\n                    case InvoiceExceptionStatus.PaidOver:\n                        return \"warning\";\n                    default:\n                        return \"danger\";\n                }\n            case InvoiceStatus.Invalid:\n                return \"danger\";\n            default:\n                return \"warning\";\n        }\n    }\n}\n\n<!DOCTYPE html>\n<html lang=\"en\" @(Env.IsDeveloping ? \" data-devenv\" : \"\")>\n<head>\n    <partial name=\"LayoutHead\" />\n    <partial name=\"LayoutHeadStoreBranding\" model=\"@(Model.BrandColor, Model.CssFileId, Model.CustomCSSLink, Model.EmbeddedCSS)\" />\n    <link href=\"~/vendor/bootstrap-vue/bootstrap-vue.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <script type=\"text/javascript\">\n        var srvModel = @Safe.Json(Model);\n    </script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-toasted/vue-toasted.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/bootstrap-vue/bootstrap-vue.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/signalr/signalr.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/animejs/anime.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/payment-request/app.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/payment-request/helpers/math.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/payment-request/services/listener.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/modal/btcpay.js\" asp-append-version=\"true\"></script>\n    <style>\n        .invoice { margin-top: var(--btcpay-space-s); }\n        .invoice + .invoice { margin-top: var(--btcpay-space-m); }\n        .invoice .badge { font-size: var(--btcpay-font-size-s); }\n\n        @@media print {\n            @* This is to avoid table header showing up twice: https://github.com/btcpayserver/btcpayserver/issues/4341 *@\n            thead { display: table-row-group; }\n        }\n    </style>\n</head>\n<body class=\"min-vh-100\">\n    <div id=\"app\" class=\"d-flex flex-column min-vh-100 pb-l\">\n        <nav class=\"btcpay-header navbar sticky-top py-3 py-lg-4 d-print-block\">\n            <div class=\"container\">\n                <div class=\"row align-items-center\" style=\"width:calc(100% + 30px)\">\n                    <div class=\"col-12 col-md-8 col-lg-9\">\n                        <div class=\"row\">\n                            <div class=\"col col-12 col-lg-8\">\n                                <h1 class=\"h3\" v-text=\"srvModel.title\"></h1>\n                            </div>\n                            <div class=\"col col-12 col-sm-6 col-lg-8 d-flex align-items-center\">\n                                <span class=\"text-muted text-nowrap\">Last Updated</span>\n                                &nbsp;\n                                <span class=\"text-nowrap d-print-none\" v-text=\"lastUpdated\" v-cloak>@Model.LastUpdated.ToString(\"g\")</span>\n                                <span class=\"text-nowrap d-none d-print-block\" v-text=\"lastUpdatedDate\">@Model.LastUpdated.ToString(\"g\")</span>\n                                <button type=\"button\" class=\"btn btn-link fw-semibold d-none d-lg-inline-block d-print-none border-0 p-0 ms-4 only-for-js\" v-on:click=\"window.print\" v-cloak>\n                                    Print\n                                </button>\n                                <button type=\"button\" class=\"btn btn-link fw-semibold d-none d-lg-inline-block d-print-none border-0 p-0 ms-4 only-for-js\" v-on:click=\"window.copyUrlToClipboard\" v-cloak>\n                                    Copy Link\n                                </button>\n                            </div>\n                            <div class=\"col col-12 col-sm-6 text-sm-end col-lg-4 mt-lg-n4 pt-lg-1 d-print-none\">\n                                @if (Model.IsPending && !Model.Archived && Model.ExpiryDate.HasValue)\n                                {\n                                    <noscript>@Model.Status</noscript>\n                                }\n                                <template v-if=\"srvModel.isPending && !srvModel.archived && endDiff\">\n                                    <span class=\"text-muted\">Expires in</span> {{endDiff}}\n                                </template>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-12 pt-3 pb-2 col-md-4 py-md-0 col-lg-3\">\n                        <noscript>\n                            @if (Model.IsPending && !Model.Archived)\n                            {\n                                @if (Model.AllowCustomPaymentAmounts && !Model.AnyPendingInvoice)\n                                {\n                                    <form method=\"get\" asp-action=\"PayPaymentRequest\" asp-route-payReqId=\"@Model.Id\" class=\"d-print-none\">\n                                        <div class=\"row\">\n                                            <div class=\"col col-12 col-sm-6 col-md-12\">\n                                                <div class=\"input-group\">\n                                                    <input type=\"number\" inputmode=\"decimal\" class=\"form-control text-end hide-number-spin\" name=\"amount\" value=\"@Model.AmountDue\" @if (!Model.AllowCustomPaymentAmounts) { @(\"readonly\") } max=\"@Model.AmountDue\" step=\"any\" placeholder=\"Amount\" required />\n                                                    <span class=\"input-group-text\">@Model.Currency.ToUpper()</span>\n                                                </div>\n                                            </div>\n                                            <div class=\"col mt-2 col-12 col-sm-6 mt-sm-0 col-md-12 mt-md-2\">\n                                                <button class=\"btn btn-primary w-100 text-nowrap\" type=\"submit\" data-test=\"pay-button\">Pay Invoice</button>\n                                            </div>\n                                        </div>\n                                    </form>\n                                }\n                                else\n                                {\n                                    <a class=\"btn btn-primary d-inline-block d-print-none w-100 text-nowrap @if (!(Model.AnyPendingInvoice && !Model.PendingInvoiceHasPayments)) { @(\"btn-lg\") }\" asp-action=\"PayPaymentRequest\" asp-route-payReqId=\"@Model.Id\" data-test=\"pay-button\">\n                                        Pay Invoice\n                                    </a>\n                                    if (Model.AnyPendingInvoice && !Model.PendingInvoiceHasPayments && Model.AllowCustomPaymentAmounts)\n                                    {\n                                        <form method=\"get\" asp-action=\"CancelUnpaidPendingInvoice\" asp-route-payReqId=\"@Model.Id\" class=\"mt-2 d-print-none\">\n                                            <button class=\"btn btn-outline-secondary w-100 text-nowrap\" type=\"submit\">Cancel Invoice</button>\n                                        </form>\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                <div class=\"h2 text-md-end\">\n                                    <span class=\"badge @if (Model.Status == \"Settled\") { @(\"bg-primary\") } else if (Model.Status == \"Expired\") { @(\"bg-danger\") } else { @(\"bg-info\") }\" data-test=\"status\">\n                                        @Model.Status\n                                        @if (Model.Archived)\n                                        {\n                                            <span>(archived)</span>\n                                        }\n                                    </span>\n                                </div>\n                            }\n                        </noscript>\n                        <template v-if=\"srvModel.formId && srvModel.formId != 'None' && !srvModel.formSubmitted\">\n                            <a asp-action=\"ViewPaymentRequestForm\" asp-route-payReqId=\"@Model.Id\" class=\"btn btn-primary w-100 d-flex d-print-none align-items-center justify-content-center text-nowrap btn-lg\" data-test=\"form-button\">\n                                Pay Invoice\n                            </a>\n                        </template>\n                        <template v-else-if=\"srvModel.isPending && !srvModel.archived\">\n                            <template v-if=\"srvModel.allowCustomPaymentAmounts && !srvModel.anyPendingInvoice\">\n                                <form v-on:submit=\"submitCustomAmountForm\" class=\"d-print-none\">\n                                    <div class=\"row\">\n                                        <div class=\"col col-12 col-sm-6 col-md-12\">\n                                            <div class=\"input-group\">\n                                                <input type=\"number\" inputmode=\"decimal\" class=\"form-control text-end hide-number-spin\" v-model=\"customAmount\" :readonly=\"!srvModel.allowCustomPaymentAmounts\" :max=\"srvModel.amountDue\" placeholder=\"Amount\" step=\"any\" required />\n                                                <span class=\"input-group-text\">{{currency}}</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"col mt-2 col-12 col-sm-6 mt-sm-0 col-md-12 mt-md-2\">\n                                            <button class=\"btn btn-primary w-100 d-flex d-print-none align-items-center justify-content-center text-nowrap\" v-bind:class=\"{ 'btn-disabled': loading}\" :disabled=\"loading\" type=\"submit\" data-test=\"pay-button\">\n                                                <div v-if=\"loading\" class=\"spinner-grow spinner-grow-sm me-2\" role=\"status\">\n                                                    <span class=\"visually-hidden\">Loading...</span>\n                                                </div>\n                                                Pay Invoice\n                                            </button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </template>\n                            <template v-else>\n                                <button class=\"btn btn-primary w-100 d-flex d-print-none align-items-center justify-content-center text-nowrap\" :class=\"{ 'btn-lg': !(srvModel.anyPendingInvoice && !srvModel.pendingInvoiceHasPayments) || !srvModel.allowCustomPaymentAmounts}\" v-on:click=\"pay(null)\" :disabled=\"loading\" data-test=\"pay-button\">\n                                    <div v-if=\"loading\" class=\"spinner-grow spinner-grow-sm me-2\" role=\"status\">\n                                        <span class=\"visually-hidden\">Loading...</span>\n                                    </div>\n                                    <span>Pay Invoice</span>\n                                </button>\n                                @if (Model.AllowCustomPaymentAmounts) {\n                                    <button class=\"btn btn-outline-secondary mt-2 w-100 d-flex d-print-none align-items-center justify-content-center text-nowrap\" v-if=\"srvModel.anyPendingInvoice && !srvModel.pendingInvoiceHasPayments\" v-on:click=\"cancelPayment()\" :disabled=\"loading\">\n                                        <span v-if=\"loading\" class=\"spinner-grow spinner-grow-sm me-2\" role=\"status\">\n                                            <span class=\"visually-hidden\">Loading...</span>\n                                        </span>\n                                        <span>Cancel Invoice</span>\n                                    </button>\n                                }\n                            </template>\n                        </template>\n                        <template v-else>\n                            <div class=\"h2 text-md-end\">\n                                <span class=\"badge\" :class=\"{ 'bg-primary': srvModel.status === 'Settled', 'bg-danger': srvModel.status === 'Expired', 'bg-info': (srvModel.status !== 'Settled' && srvModel.status !== 'Expired') }\" data-test=\"status\">\n                                    {{srvModel.status}}\n                                    <span v-if=\"srvModel.archived\">(archived)</span>\n                                </span>\n                            </div>\n                        </template>\n                    </div>\n                </div>\n            </div>\n        </nav>\n\n        <main class=\"flex-grow-1 py-4\">\n            <div class=\"container\">\n                <partial name=\"_StatusMessage\" model=\"@(new ViewDataDictionary(ViewData){ { \"Margin\", \"mb-4\" } })\" />\n                <div class=\"row\">\n                    <div class=\"col col-12 col-lg-6 mb-4\">\n                        <div class=\"bg-tile h-100 m-0 p-3 p-sm-5 rounded\">\n                            <h2 class=\"h4 mb-3\">Invoice Summary</h2>\n                            @if (!string.IsNullOrEmpty(Model.Description) && Model.Description != \"<br>\")\n                            {\n                                <div v-html=\"srvModel.description\"></div>\n                            }\n                            else\n                            {\n                                <p class=\"text-muted mt-3 mb-0\">No details provided.</p>\n                            }\n                        </div>\n                    </div>\n                    <div class=\"col col-12 col-lg-6 mb-4\">\n                        <div class=\"bg-tile h-100 m-0 p-3 p-sm-5 rounded\">\n                            <h2 class=\"h4 mb-3\">Payment Details</h2>\n                            <dl class=\"mb-0 mt-md-4\">\n                                <div class=\"d-flex d-print-inline-block flex-column mb-4 me-5\">\n                                    <dt class=\"h4 fw-semibold text-nowrap text-primary text-print-default order-2 order-sm-1 mb-1\" v-text=\"srvModel.amountDueFormatted\">@Model.AmountDueFormatted</dt>\n                                    <dd class=\"order-1 order-sm-2 mb-1\" data-test=\"amount-due-title\">Amount due</dd>\n                                </div>\n                                <div class=\"progress bg-light d-none d-sm-flex mb-sm-4 d-print-none\" style=\"height:5px\">\n                                  <div class=\"progress-bar bg-primary\" role=\"progressbar\" style=\"width:@((Model.AmountCollected/Model.Amount)*100)%\" v-bind:style=\"{ width: (srvModel.amountCollected/srvModel.amount*100) + '%' }\"></div>\n                                </div>\n                                <div class=\"d-flex d-print-inline-block flex-column mb-4 me-5 d-sm-inline-flex mb-sm-0\">\n                                    <dt class=\"h4 fw-semibold text-nowrap order-2 order-sm-1 mb-1\" v-text=\"srvModel.amountCollectedFormatted\">@Model.AmountCollectedFormatted</dt>\n                                    <dd class=\"order-1 order-sm-2 mb-1\">Amount paid</dd>\n                                </div>\n                                <div class=\"d-flex d-print-inline-block flex-column mb-0 d-sm-inline-flex float-sm-end\">\n                                    <dt class=\"h4 text-sm-end fw-semibold text-nowrap order-2 order-sm-1 mb-1\" v-text=\"srvModel.amountFormatted\">@Model.AmountFormatted</dt>\n                                    <dd class=\"text-sm-end order-1 order-sm-2 mb-1\">Total requested</dd>\n                                </div>\n                            </dl>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"bg-tile h-100 m-0 p-3 p-sm-5 rounded\">\n                            <h2 class=\"h4 mb-0\">Payment History</h2>\n                            <noscript>\n                                @if (Model.Invoices == null || !Model.Invoices.Any())\n                                {\n                                    <p class=\"text-muted mt-3 mb-0\">No payments made yet.</p>\n                                }\n                                else\n                                {\n                                    @foreach (var invoice in Model.Invoices)\n                                    {\n                                        <div class=\"table-responsive\">\n                                            <table class=\"invoice table\">\n                                                <thead>\n                                                <tr class=\"table-borderless\">\n                                                    <th class=\"fw-normal text-secondary w-350px\" scope=\"col\">Invoice Id</th>\n                                                    <th class=\"fw-normal text-secondary w-175px\">Expiry</th>\n                                                    <th class=\"fw-normal text-secondary text-end w-125px\">Amount</th>\n                                                    <th class=\"fw-normal text-secondary text-end w-125px\"></th>\n                                                    <th class=\"fw-normal text-secondary text-end\">Status</th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                <tr class=\"table-borderless table-light\">\n                                                    <td>@invoice.Id</td>\n                                                    <td>@invoice.ExpiryDate.ToString(\"g\")</td>\n                                                    <td class=\"text-end\">@invoice.AmountFormatted</td>\n                                                    <td class=\"text-end\"></td>\n                                                    <td class=\"text-end text-print-default\">\n                                                        <span class=\"badge bg-@StatusClass(invoice.State)\">@invoice.StateFormatted</span>\n                                                    </td>\n                                                </tr>\n                                                @if (invoice.Payments != null && invoice.Payments.Any())\n                                                {\n                                                    <tr class=\"table-borderless table-light\">\n                                                        <th class=\"fw-normal text-secondary\">Destination</th>\n                                                        <th class=\"fw-normal text-secondary\">Received</th>\n                                                        <th class=\"fw-normal text-secondary text-end\">Paid</th>\n                                                        <th class=\"fw-normal text-secondary text-end\">Rate</th>\n                                                        <th class=\"fw-normal text-secondary text-end\">Payment</th>\n                                                    </tr>\n                                                    @foreach (var payment in invoice.Payments)\n                                                    {\n                                                        <tr class=\"table-borderless table-light\">\n                                                            <td class=\"text-break\"><code>@payment.Destination</code></td>\n                                                            <td>@payment.ReceivedDate.ToString(\"g\")</td>\n                                                            <td class=\"text-end\">@payment.PaidFormatted</td>\n                                                            <td class=\"text-end\">@payment.RateFormatted</td>\n                                                            <td class=\"text-end text-nowrap\">@payment.Amount @payment.PaymentMethod</td>\n                                                        </tr>\n                                                        <tr class=\"table-borderless table-light\">\n                                                            <td class=\"fw-normal\" colspan=\"5\">\n                                                                <span class=\"text-secondary\">Transaction Id:</span> \n                                                                @if (!string.IsNullOrEmpty(payment.Link))\n                                                                {\n                                                                    <a href=\"@payment.Link\" class=\"text-print-default text-break\" rel=\"noreferrer noopener\" target=\"_blank\">@payment.Id</a>\n                                                                }\n                                                                else\n                                                                {\n                                                                    <span class=\"text-break\">@payment.Id</span>\n                                                                }\n                                                            </td>\n                                                        </tr>\n                                                    }\n                                                }\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    }\n                                }\n                            </noscript>\n                            <template v-if=\"!srvModel.invoices || srvModel.invoices.length == 0\">\n                                <p class=\"text-muted mt-3 mb-0\">No payments made yet.</p>\n                            </template>\n                            <template v-else>\n                                <div class=\"table-responsive\">\n                                    <table v-for=\"invoice of srvModel.invoices\" :key=\"invoice.id\" class=\"invoice table\">\n                                        <thead>\n                                        <tr class=\"table-borderless\">\n                                            <th class=\"fw-normal text-secondary w-350px\" scope=\"col\">Invoice Id</th>\n                                            <th class=\"fw-normal text-secondary w-175px\">Expiry</th>\n                                            <th class=\"fw-normal text-secondary text-end w-125px\">Amount</th>\n                                            <th class=\"fw-normal text-secondary text-end w-125px\"></th>\n                                            <th class=\"fw-normal text-secondary text-end\">Status</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        <tr class=\"table-borderless table-light\">\n                                            <td>{{invoice.id}}</td>\n                                            <td v-text=\"formatDate(invoice.expiryDate)\"></td>\n                                            <td class=\"text-end\">{{invoice.amountFormatted}}</td>\n                                            <td class=\"text-end\"></td>\n                                            <td class=\"text-end text-print-default\">\n                                                <span class=\"badge\" :class=\"`bg-${statusClass(invoice.stateFormatted)}`\">{{invoice.stateFormatted}}</span>\n                                            </td>\n                                        </tr>\n                                        <template v-if=\"invoice.payments && invoice.payments.length > 0\">\n                                            <tr class=\"table-borderless table-light\">\n                                                <th class=\"fw-normal text-secondary\">Destination</th>\n                                                <th class=\"fw-normal text-secondary\">Received</th>\n                                                <th class=\"fw-normal text-secondary text-end\">Paid</th>\n                                                <th class=\"fw-normal text-secondary text-end\">Rate</th>\n                                                <th class=\"fw-normal text-secondary text-end\">Payment</th>\n                                            </tr>\n                                            <template v-for=\"payment of invoice.payments\">\n                                                <tr class=\"table-borderless table-light\">\n                                                    <td class=\"text-break\"><code>{{payment.destination}}</code></td>\n                                                    <td v-text=\"formatDate(payment.receivedDate)\"></td>\n                                                    <td class=\"text-end\">{{payment.paidFormatted}}</td>\n                                                    <td class=\"text-end\">{{payment.rateFormatted}}</td>\n                                                    <td class=\"text-end text-nowrap\">{{payment.amount.noExponents()}} {{payment.paymentMethod}}</td>\n                                                </tr>\n                                                <tr class=\"table-borderless table-light\">\n                                                    <td class=\"fw-normal\" colspan=\"5\">\n                                                        <span class=\"text-secondary\">Transaction Id:</span> \n                                                        <a v-if=\"payment.link\" :href=\"payment.link\" class=\"text-print-default\" target=\"_blank\" rel=\"noreferrer noopener\">{{payment.id}}</a>\n                                                        <span v-else>{{payment.id}}</span>\n                                                    </td>\n                                                </tr>\n                                            </template>\n                                        </template>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </template>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer class=\"store-footer\">\n            <p permission=\"@Policies.CanModifyStoreSettings\">\n                <a asp-controller=\"UIPaymentRequest\" asp-action=\"EditPaymentRequest\" asp-route-storeId=\"@Model.StoreId\" asp-route-payReqId=\"@Model.Id\">\n                    Edit payment request\n                </a>\n            </p>\n            <a href=\"https://btcpayserver.org\" target=\"_blank\" rel=\"noreferrer noopener\">\n                Powered by <partial name=\"_StoreFooterLogo\" />\n            </a>\n        </footer>\n    </div>\n    <partial name=\"LayoutFoot\"/>\n</body>\n</html>\n", "@inject BTCPayServer.Services.BTCPayServerEnvironment Env\n@inject BTCPayNetworkProvider BtcPayNetworkProvider\n@using BTCPayServer.Client\n@using BTCPayServer.Components.ThemeSwitch\n@using BTCPayServer.Payments\n@model BTCPayServer.Models.ViewPullPaymentModel\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n\n@{\n    ViewData[\"Title\"] = Model.Title;\n\tCsp.UnsafeEval();\n    Layout = null;\n    string StatusTextClass(string status)\n    {\n        switch (status)\n        {\n            case \"Completed\":\n            case \"In Progress\":\n                return \"bg-success\";\n            case \"Cancelled\":\n                return \"bg-danger\";\n            default:\n                return \"bg-warning\";\n        }\n    }\n    \n    \n    string lnurl = null;\n    string lnurlUri = null;\n\n    var pms = Model.PaymentMethods.FirstOrDefault(id => id.PaymentType == LightningPaymentType.Instance && BtcPayNetworkProvider.DefaultNetwork.CryptoCode == id.CryptoCode);\n    if (pms is not null && Model.Currency.Equals(pms.CryptoCode, StringComparison.InvariantCultureIgnoreCase))\n    {\n        var lnurlEndpoint = new Uri(Url.Action(\"GetLNURLForPullPayment\", \"UILNURL\", new\n        {\n            cryptoCode = pms.CryptoCode,\n            pullPaymentId = Model.Id\n        }, Context.Request.Scheme, Context.Request.Host.ToString()));\n        lnurl = LNURL.LNURL.EncodeUri(lnurlEndpoint, \"withdrawRequest\", true).ToString();\n        lnurlUri = LNURL.LNURL.EncodeUri(lnurlEndpoint, \"withdrawRequest\", false).ToString();\n    }\n}\n<!DOCTYPE html>\n<html lang=\"en\" @(Env.IsDeveloping ? \" data-devenv\" : \"\")>\n<head>\n    <partial name=\"LayoutHead\" />\n    <partial name=\"LayoutHeadStoreBranding\" model=\"@(Model.BrandColor, Model.CssFileId, Model.CustomCSSLink, Model.EmbeddedCSS)\" />\n    <link href=\"~/vendor/bootstrap-vue/bootstrap-vue.css\" asp-append-version=\"true\"  rel=\"stylesheet\" />\n    <style>\n        .no-marker > ul { list-style-type: none; }\n    </style>\n</head>\n<body class=\"min-vh-100\">\n    <div id=\"app\" class=\"d-flex flex-column min-vh-100 pb-l\">\n        @if (Model.IsPending)\n        {\n            <nav class=\"btcpay-header navbar sticky-top py-3 py-lg-4 d-print-none\">\n                <div class=\"container gap-3\">\n                    <form asp-action=\"ClaimPullPayment\" asp-route-pullPaymentId=\"@Model.Id\" class=\"flex-fill\">\n                        <div class=\"row align-items-center\" style=\"width:calc(100% + 30px)\">\n                            <div class=\"col-12 mb-3 col-lg-6 mb-lg-0\">\n                                <div class=\"input-group\">\n                                    @if (lnurl is not null)\n                                    {\n                                        <button type=\"button\" class=\"input-group-prepend btn btn-outline-secondary\" id=\"lnurlwithdraw-button\" data-bs-toggle=\"modal\" data-bs-target=\"#scan-qr-modal\">\n                                            <span class=\"fa fa-qrcode  fa-2x\" title=\"LNURL-Withdraw\"></span>\n                                        </button>\n                                    }\n                                    <input class=\"form-control form-control-lg font-monospace\" asp-for=\"Destination\" placeholder=\"Enter destination to claim funds\" required style=\"font-size:.9rem;height:42px;\">\n                                    @if (Model.PaymentMethods.Length == 1)\n                                    {\n                                        <input type=\"hidden\" asp-for=\"SelectedPaymentMethod\">\n                                        <span class=\"input-group-text\">@Model.PaymentMethods.First().ToPrettyString()</span>\n                                    }\n                                    else\n                                    {\n                                        <select class=\"form-select w-auto\" asp-for=\"SelectedPaymentMethod\" asp-items=\"Model.PaymentMethods.Select(id => new SelectListItem(id.ToPrettyString(), id.ToString()))\"></select>\n                                    }\n                                </div>\n                            </div>\n\n                            <div class=\"col-12 mb-3 col-sm-6 mb-sm-0 col-lg-3\">\n                                <div class=\"input-group\">\n                                    <input type=\"number\" inputmode=\"decimal\" class=\"form-control form-control-lg text-end hide-number-spin\" asp-for=\"ClaimedAmount\" max=\"@Model.AmountDue\" min=\"@Model.MinimumClaim\" step=\"any\" placeholder=\"Amount\" required>\n                                    <span class=\"input-group-text px-3\">@Model.Currency.ToUpper()</span>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-6 col-lg-3\">\n                                <button class=\"btn btn-lg btn-primary w-100 text-nowrap\" type=\"submit\">Claim Funds</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </nav>\n        }\n\n        <main class=\"flex-grow-1 py-4\">\n            <div class=\"container\">\n                <partial name=\"_StatusMessage\" model=\"@(new ViewDataDictionary(ViewData){ { \"Margin\", \"mb-4\" } })\" />\n                @if (!ViewContext.ModelState.IsValid)\n                {\n                    @Html.ValidationSummary(string.Empty, new { @class = $\"alert alert-danger mb-4 pb-0 {(ViewContext.ModelState.ErrorCount.Equals(1) ? \"no-marker\" : \"\")}\" })\n                }\n\n                <div class=\"row\">\n                    <div class=\"col col-12 col-lg-6 mb-4\">\n                        <div class=\"bg-tile h-100 m-0 p-3 p-sm-5 rounded\">\n                            @if (!string.IsNullOrWhiteSpace(Model.Title))\n                            {\n                                <h2 class=\"h4 mb-3\">@Model.Title</h2>\n                            }\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"text-muted text-nowrap\">Start Date</span>\n                                &nbsp;\n                                <span class=\"text-nowrap\">@Model.StartDate.ToString(\"g\")</span>\n                            </div>\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"text-muted text-nowrap\">Last Updated</span>\n                                &nbsp;\n                                <span class=\"text-nowrap\">@Model.LastRefreshed.ToString(\"g\")</span>\n                                <button type=\"button\" class=\"btn btn-link fw-semibold d-none d-lg-inline-block d-print-none border-0 p-0 ms-4 only-for-js\" id=\"copyLink\">\n                                    Copy Link\n                                </button>\n                            </div>\n                            @if (!string.IsNullOrEmpty(Model.ResetIn))\n                            {\n                                <p>\n                                    <span class=\"text-muted text-nowrap\">Reset in</span>\n                                    &nbsp;\n                                    <span class=\"text-nowrap\">@Model.ResetIn</span>\n                                </p>\n                            }\n                            @if (!string.IsNullOrEmpty(Model.Description))\n                            {\n                                <div class=\"mt-4\">@Safe.Raw(Model.Description)</div>\n                            }\n                        </div>\n                    </div>\n                    <div class=\"col col-12 col-lg-6 mb-4\">\n                        <div class=\"bg-tile h-100 m-0 p-3 p-sm-5 rounded\">\n                            <h2 class=\"h4 mb-3\">Payment Details</h2>\n                            <dl class=\"mb-0 mt-md-4\">\n                                <div class=\"d-flex d-print-inline-block flex-column mb-4 me-5\">\n                                    <dt class=\"h4 fw-semibold text-nowrap text-primary text-print-default order-2 order-sm-1 mb-1\">@Model.AmountDueFormatted</dt>\n                                    <dd class=\"order-1 order-sm-2 mb-1\">Available claim</dd>\n                                </div>\n                                <div class=\"progress bg-light d-none d-sm-flex mb-sm-4 d-print-none\" style=\"height:5px\">\n                                    <div class=\"progress-bar bg-primary\" role=\"progressbar\" style=\"width:@((Model.AmountCollected / Model.Amount) * 100)%\"></div>\n                                </div>\n                                <div class=\"d-flex d-print-inline-block flex-column mb-4 me-5 d-sm-inline-flex mb-sm-0\">\n                                    <dt class=\"h4 fw-semibold text-nowrap order-2 order-sm-1 mb-1\">@Model.AmountCollectedFormatted</dt>\n                                    <dd class=\"order-1 order-sm-2 mb-1\">Already claimed</dd>\n                                </div>\n                                <div class=\"d-flex d-print-inline-block flex-column mb-0 d-sm-inline-flex float-sm-end\">\n                                    <dt class=\"h4 text-sm-end fw-semibold text-nowrap order-2 order-sm-1 mb-1\">@Model.AmountFormatted</dt>\n                                    <dd class=\"text-sm-end order-1 order-sm-2 mb-1\">Claim limit</dd>\n                                </div>\n                            </dl>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"bg-tile h-100 m-0 p-3 p-sm-5 rounded\">\n                            <h2 class=\"h4 mb-0\">Claims</h2>\n                            @if (Model.Payouts.Any())\n                            {\n                                <div class=\"table-responsive\">\n                                    <table class=\"table my-0\">\n                                        <thead>\n                                        <tr class=\"table-borderless\">\n                                            <th class=\"fw-normal text-secondary\" scope=\"col\">Destination</th>\n                                            <th class=\"fw-normal text-secondary\" scope=\"col\">Method</th>\n                                            <th class=\"fw-normal text-secondary text-end text-nowrap\">Amount requested</th>\n                                            <th class=\"fw-normal text-secondary text-end\">Status</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        @foreach (var invoice in Model.Payouts)\n                                        {\n                                            <tr>\n                                                <td class=\"text-break\">\n                                                    @invoice.Destination\n                                                </td>\n                                                <td class=\"text-nowrap\">@invoice.PaymentMethod.ToPrettyString()</td>\n                                                <td class=\"text-end text-nowrap\">@invoice.AmountFormatted</td>\n                                                <td class=\"text-end text-nowrap\">\n                                                    @if (!string.IsNullOrEmpty(invoice.Link))\n                                                    {\n                                                        <a class=\"transaction-link text-white badge @StatusTextClass(invoice.Status.ToString())\" href=\"@invoice.Link\" rel=\"noreferrer noopener\">@invoice.Status.GetStateString()</a>\n                                                    }\n                                                    else\n                                                    {\n                                                        <span class=\"text-white badge @StatusTextClass(invoice.Status.ToString())\">@invoice.Status.GetStateString()</span>\n                                                    }\n                                                </td>\n                                            </tr>\n                                        }\n                                        </tbody>\n                                    </table>\n                                </div>\n                            }\n                            else\n                            {\n                                <p class=\"text-muted mt-3 mb-0\">No claim made yet.</p>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer class=\"store-footer\">\n            <p permission=\"@Policies.CanViewStoreSettings\">\n                <a asp-action=\"EditPullPayment\" asp-controller=\"UIPullPayment\" asp-route-storeId=\"@Model.StoreId\" asp-route-pullPaymentId=\"@Model.Id\">\n                    Edit pull payment\n                </a>\n            </p>\n            <a href=\"https://btcpayserver.org\" target=\"_blank\" rel=\"noreferrer noopener\">\n                Powered by <partial name=\"_StoreFooterLogo\" />\n            </a>\n        </footer>\n    </div>\n    <partial name=\"LayoutFoot\" />\n  @if (lnurl is not null)\n  {\n      var note = \"You can scan or open this link with a <a href='https://github.com/fiatjaf/lnurl-rfc#lnurl-documents' target='_blank' rel='noreferrer noopener'>LNURL-Withdraw</a> enabled wallet.\";\n      if (!Model.AutoApprove)\n      {\n          note += \"<br/><span class='fw-bold'>Please note that this pull payment does not automatically send out funds, and so will process payment after LNURL-withdraw flow is completed.</span>\";\n      }\n      <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n      <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n      <partial name=\"ShowQR\"/>\n      <script>\n        document.addEventListener(\"DOMContentLoaded\", () => {\n            const modes = {\n                uri: { title: \"URI\", fragments: [@Safe.Json(lnurlUri)], showData: true, href: @Safe.Json(lnurlUri) },\n                bech32: { title: \"Bech32\", fragments: [@Safe.Json(lnurl)], showData: true, href: @Safe.Json(lnurl) }\n            };\n            initQRShow({ title: \"LNURL Withdraw\", note: @Safe.Json(note), modes })\n    });\n    </script>\n  }\n    <script>\n        document.addEventListener(\"DOMContentLoaded\", () => {\n            document.getElementById(\"copyLink\").addEventListener(\"click\", window.copyUrlToClipboard);\n        });\n</script>\n</body>\n</html>\n", "@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@model WalletSetupViewModel\n@{\n\tLayout = \"_LayoutWalletSetup\";\n\tViewData.SetActivePage(StoreNavPages.OnchainSettings, \"Scan QR code\", Context.GetStoreData().Id);\n\tCsp.UnsafeEval();\n}\n\n@section Navbar {\n    <a asp-controller=\"UIStores\" asp-action=\"ImportWallet\" asp-route-storeId=\"@Model.StoreId\" asp-route-cryptoCode=\"@Model.CryptoCode\" asp-route-method=\"\">\n        <vc:icon symbol=\"back\" />\n    </a>\n}\n\n<header class=\"text-center\">\n    <h1>@ViewData[\"Title\"]</h1>\n    <p class=\"lead text-secondary mt-3\">Scan the extended public key, also called \"xpub\", shown on your wallet's display.</p>\n</header>\n\n@if (!ViewContext.ModelState.IsValid)\n{\n    <div asp-validation-summary=\"All\" class=\"text-danger\"></div>\n}\n\n<div class=\"my-5\">\n    <partial name=\"CameraScanner\"/>\n    <form id=\"qr-import-form\" method=\"post\">\n        <input asp-for=\"WalletFileContent\" type=\"hidden\" />\n    </form>\n</div>\n\n<p class=\"mt-5\">\n    Generate a QR code of the extended public key in your wallet (see instructions for supported wallets below).\n    Allow the browser access to your camera and hold the code to the camera when the scan prompt appears.\n</p>\n\n<table class=\"table table-hover\">\n    <thead>\n    <tr>\n        <th>Wallet</th>\n        <th>Instructions</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n        <td>BlueWallet</td>\n        <td>Open Wallet Settings \u276f Show Wallet XPUB</td>\n    </tr>\n    <tr>\n        <td class=\"text-nowrap\">Cobo Vault</td>\n        <td>Open Wallet Settings \u276f Show/Export XPUB</td>\n    </tr>\n    <tr>\n        <td class=\"text-nowrap\">Keystone Vault</td>\n        <td>Open Wallet Settings \u276f Show/Export XPUB</td>\n    </tr>\n    <tr>\n        <td>Passport</td>\n        <td>Pair Wallet \u276f BTCPay \u276f QR Code</td>\n    </tr>\n    <tr>\n        <td>Specter DIY</td>\n        <td>Master public keys \u276f Select key</td>\n    </tr>\n    <tr>\n        <td>SeedSigner</td>\n        <td>Seeds \u276f Select seed \u276f Export XPUB \u276f BlueWallet</td>\n    </tr>\n    </tbody>\n</table>\n\n@section PageHeadContent {\n    <link href=\"~/vendor/vue-qrcode-reader/vue-qrcode-reader.css\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n}\n\n@section PageFootContent {\n    <partial name=\"_ValidationScriptsPartial\"/>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/ur-registry/urlib.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode-reader/VueQrcodeReader.umd.min.js\" asp-append-version=\"true\"></script>\n\n    <script>\n        window.coinName = \"@Model.Network.DisplayName.ToLowerInvariant()\";\n        document.addEventListener(\"DOMContentLoaded\", function () {\n            initCameraScanningApp(\"Scan wallet QR\", data => {\n                let xpub = \"\";\n                if (typeof(data) === \"object\") {\n                    if (data.type === \"crypto-account\") {\n                        const account = window.URlib.CryptoAccount.fromCBOR(data.cbor);\n                        const [descriptor] = account.getOutputDescriptors();\n                        xpub = descriptor.getHDKey().getBip32Key();\n                    } else {\n                        console.error('Unexpected UR type', data.type)\n                    }\n                } else if (typeof(data) === 'string') {\n                    xpub = data;\n                }\n                // remove potentially leading derivation path\n                xpub = xpub.replace(/^\\[.*?\\]/, '');\n                // submit\n                document.getElementById(\"WalletFileContent\").value = xpub;\n                document.getElementById(\"qr-import-form\").submit();\n            });\n        });\n    </script>\n}\n", "@using NBitcoin.DataEncoders\n@using Newtonsoft.Json\n@using System.Text\n@using BTCPayServer.Abstractions.Models\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@model WalletSettingsViewModel\n@{\n\tLayout = \"../Shared/_NavLayout.cshtml\";\n\tViewData[\"NavPartialName\"] = \"../UIWallets/_Nav\";\n\tViewData.SetActivePage(StoreNavPages.OnchainSettings, $\"{Model.CryptoCode} Wallet Settings\", Context.GetStoreData().Id);\n\tCsp.UnsafeEval();\n}\n\n@section PageHeadContent {\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/ur-registry/urlib.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode-reader/VueQrcodeReader.umd.min.js\" asp-append-version=\"true\"></script>\n\n    <link href=\"~/vendor/vue-qrcode-reader/vue-qrcode-reader.css\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n}\n\n<div class=\"row\">\n    <div class=\"col-xl-8 col-xxl-constrain\">\n        <div class=\"mb-5\">\n            <h3 class=\"mb-3\">@ViewData[\"Title\"]</h3>\n            <div class=\"mb-3 d-flex align-items-center\">\n                <span title=\"@Model.Source\" data-bs-toggle=\"tooltip\" class=\"me-3\">@(Model.IsHotWallet ? \"Hot wallet\" : \"Watch-only wallet\")</span>\n                <div class=\"dropdown\">\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"ActionsDropdownToggle\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Actions\n                    </button>\n                    <div class=\"dropdown-menu\" aria-labelledby=\"ActionsDropdownToggle\">\n                        <a class=\"dropdown-item\" asp-controller=\"UIWallets\" asp-action=\"WalletRescan\" asp-route-walletId=\"@Model.WalletId\" id=\"Rescan\">Rescan wallet for missing transactions</a>\n                        <form method=\"post\" asp-controller=\"UIWallets\" asp-action=\"WalletActions\" asp-route-walletId=\"@Model.WalletId\">\n                            <button name=\"command\" type=\"submit\" class=\"dropdown-item\" value=\"prune\">Prune old transactions from history</button>\n                            @if (User.IsInRole(Roles.ServerAdmin))\n                            {\n                                <button name=\"command\" type=\"submit\" class=\"dropdown-item\" value=\"clear\">Clear all transactions from history</button>\n                            }\n                        </form>\n                        @if (Model.UriScheme == \"bitcoin\")\n                        {\n                            <button type=\"button\" class=\"dropdown-item\" id=\"RegisterWallet\" data-store=\"@Model.StoreName\" data-scheme=\"@Model.UriScheme\" data-url=\"@Url.Action(\"WalletSend\", \"UIWallets\", new {walletId = Model.WalletId, bip21 = \"%s\"})\" hidden>Register wallet for payment links</button>\n                        }\n                        <div class=\"dropdown-divider\"></div>\n                        @if (Model.NBXSeedAvailable)\n                        {\n                            <a asp-action=\"WalletSeed\" asp-route-storeId=\"@Model.StoreId\" asp-route-cryptoCode=\"@Model.CryptoCode\" class=\"dropdown-item\" id=\"ViewSeed\">View seed</a>\n                        }\n                        <a asp-controller=\"UIStores\" asp-action=\"ReplaceWallet\" asp-route-storeId=\"@Model.StoreId\" asp-route-cryptoCode=\"@Model.CryptoCode\"\n                           id=\"ChangeWalletLink\"\n                           class=\"dropdown-item\"\n                           data-bs-toggle=\"modal\"\n                           data-bs-target=\"#ConfirmModal\"\n                           data-title=\"Replace @Model.CryptoCode wallet\"\n                           data-description=\"@ViewData[\"ReplaceDescription\"]\"\n                           data-confirm=\"Setup new wallet\"\n                           data-confirm-input=\"REPLACE\">\n                            Replace wallet\n                        </a>\n                        <form method=\"get\" asp-action=\"DeleteWallet\" asp-route-storeId=\"@Model.StoreId\" asp-route-cryptoCode=\"@Model.CryptoCode\" class=\"d-inline\">\n                            <button type=\"submit\"\n                                    id=\"Delete\"\n                                    class=\"dropdown-item\"\n                                    data-bs-toggle=\"modal\"\n                                    data-bs-target=\"#ConfirmModal\"\n                                    data-title=\"Remove @Model.CryptoCode wallet\"\n                                    data-description=\"@ViewData[\"RemoveDescription\"]\"\n                                    data-confirm=\"Remove\"\n                                    data-confirm-input=\"REMOVE\">Remove wallet</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            \n            <form method=\"post\" asp-action=\"UpdateWalletSettings\" asp-route-storeId=\"@Model.StoreId\" asp-route-cryptoCode=\"@Model.CryptoCode\">\n                <div class=\"form-group my-4\">\n                    <div class=\"d-flex align-items-center\">\n                        <input asp-for=\"Enabled\" type=\"checkbox\" class=\"btcpay-toggle me-2\"/>\n                        <label asp-for=\"Enabled\" class=\"form-label mb-0 me-1\"></label>\n                    </div>\n                    <span asp-validation-for=\"PayJoinEnabled\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"form-group\">\n                    <label asp-for=\"Label\" class=\"form-label\"></label>\n                    <input asp-for=\"Label\" class=\"form-control\" style=\"max-width:24em;\" />\n                    <span asp-validation-for=\"Label\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"form-group\">\n                    <label asp-for=\"DerivationScheme\" class=\"form-label\"></label>\n                    <div class=\"input-group\" data-clipboard=\"@Model.DerivationScheme\">\n                        <input asp-for=\"DerivationScheme\" class=\"form-control\" style=\"cursor:copy\" readonly />\n                        <button type=\"button\" class=\"input-group-text btn btn-outline-secondary\" data-clipboard-confirm style=\"min-width:8em;\">Copy</button>\n                    </div>\n                </div>\n                @if (!string.IsNullOrEmpty(Model.DerivationSchemeInput) && Model.DerivationSchemeInput != Model.DerivationScheme)\n                {\n                    <div class=\"form-group\">\n                        <label asp-for=\"DerivationSchemeInput\" class=\"form-label\"></label>\n                        <div class=\"input-group\" data-clipboard=\"@Model.DerivationSchemeInput\">\n                            <input asp-for=\"DerivationSchemeInput\" class=\"form-control\" style=\"cursor:copy\" readonly/>\n                            <button type=\"button\" class=\"input-group-text btn btn-outline-secondary\" data-clipboard-confirm style=\"min-width:8em;\">Copy</button>\n                        </div>\n                    </div>\n                }\n                @for (var i = 0; i < Model.AccountKeys.Count; i++)\n                {\n                    <h4 class=\"mt-5 mb-3\">Account Key @i</h4>\n                    <div class=\"form-group\">\n                        <div class=\"d-flex align-items-center justify-content-between\">\n                            <label asp-for=\"@Model.AccountKeys[i].AccountKey\" class=\"form-label\"></label>\n                            <button type=\"button\" class=\"d-inline-block ms-2 btn text-primary btn-link p-0 mb-2\" data-account-key=\"@i\" title=\"\">\n                                <span class=\"fa fa-qrcode\"></span> Show export QR\n                            </button>\n                        </div>\n                        <div class=\"input-group\" data-clipboard=\"@Model.AccountKeys[i].AccountKey\">\n                            <input asp-for=\"@Model.AccountKeys[i].AccountKey\" class=\"form-control\" style=\"cursor:copy\" readonly/>\n                            <button type=\"button\" class=\"input-group-text btn btn-outline-secondary\" data-clipboard-confirm style=\"min-width:8em;\">Copy</button>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group col-auto\">\n                            <label asp-for=\"@Model.AccountKeys[i].MasterFingerprint\" class=\"form-label\"></label>\n                            <input asp-for=\"@Model.AccountKeys[i].MasterFingerprint\" class=\"form-control\" style=\"max-width:16ch;\" />\n                        </div>\n                        <div class=\"form-group col-auto\">\n                            <label asp-for=\"@Model.AccountKeys[i].AccountKeyPath\" class=\"form-label\"></label>\n                            <input asp-for=\"@Model.AccountKeys[i].AccountKeyPath\" class=\"form-control\" style=\"max-width:16ch;\" />\n                        </div>\n                    </div>\n                    @if (Model.IsMultiSig)\n                    {\n                        <div class=\"form-check\">\n                            <input asp-for=\"SelectedSigningKey\" class=\"form-check-input\" type=\"radio\" value=\"@Model.AccountKeys[i].AccountKey\"/>\n                            <label asp-for=\"SelectedSigningKey\" class=\"form-check-label\"></label>\n                        </div>\n                    }\n                }\n                <button type=\"submit\" class=\"btn btn-primary mt-2\" id=\"SaveWalletSettings\">Save Wallet Settings</button>\n            </form>\n            \n            <h3 class=\"mt-5 mb-4\">Payment</h3>\n            <form method=\"post\" asp-action=\"UpdatePaymentSettings\" asp-route-storeId=\"@Model.StoreId\" asp-route-cryptoCode=\"@Model.CryptoCode\">\n                @if (Model.CanUsePayJoin)\n                {\n                    <div class=\"form-group\">\n                        <div class=\"d-flex align-items-center\">\n                            <input asp-for=\"PayJoinEnabled\" type=\"checkbox\" class=\"btcpay-toggle me-2\"/>\n                            <label asp-for=\"PayJoinEnabled\" class=\"form-label mb-0 me-1\"></label>\n                            <a href=\"https://docs.btcpayserver.org/Payjoin/\" target=\"_blank\" rel=\"noreferrer noopener\" title=\"More information...\">\n                                <vc:icon symbol=\"info\"/>\n                            </a>\n                        </div>\n                        <span asp-validation-for=\"PayJoinEnabled\" class=\"text-danger\"></span>\n                    </div>\n                }\n                <div class=\"form-group\">\n                    <label asp-for=\"MonitoringExpiration\" class=\"form-label\"></label>\n                    <a href=\"https://docs.btcpayserver.org/FAQ/Stores/#payment-invalid-if-transactions-fails-to-confirm-minutes-after-invoice-expiration\" target=\"_blank\" rel=\"noreferrer noopener\" title=\"More information...\">\n                        <vc:icon symbol=\"info\"/>\n                    </a>\n                    <div class=\"input-group\">\n                        <input inputmode=\"numeric\" asp-for=\"MonitoringExpiration\" class=\"form-control\" style=\"max-width:10ch;\"/>\n                        <span class=\"input-group-text\">minutes</span>\n                    </div>\n                    <span asp-validation-for=\"MonitoringExpiration\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"form-group\">\n                    <label asp-for=\"SpeedPolicy\" class=\"form-label\"></label>\n                    <a href=\"https://docs.btcpayserver.org/FAQ/Stores/#consider-the-invoice-confirmed-when-the-payment-transaction\" target=\"_blank\" rel=\"noreferrer noopener\" title=\"More information...\">\n                        <vc:icon symbol=\"info\"/>\n                    </a>\n                    <select asp-for=\"SpeedPolicy\" class=\"form-select w-auto\" onchange=\"document.getElementById('unconfirmed-warning').hidden = this.value !== '0';\">\n                        <option value=\"0\">Is unconfirmed</option>\n                        <option value=\"1\">Has at least 1 confirmation</option>\n                        <option value=\"3\">Has at least 2 confirmations</option>\n                        <option value=\"2\">Has at least 6 confirmations</option>\n                    </select>\n                    <div class=\"alert alert-warning my-2\" hidden=\"@(Model.SpeedPolicy != 0)\" id=\"unconfirmed-warning\" role=\"alert\">\n                        Choosing to accept an unconfirmed invoice can lead to double-spending and is strongly discouraged.\n                    </div>\n                    <span asp-validation-for=\"SpeedPolicy\" class=\"text-danger\"></span>\n                </div>\n                <div class=\"form-check my-1\">\n                    <input asp-for=\"ShowRecommendedFee\" type=\"checkbox\" class=\"form-check-input\"/>\n                    <label asp-for=\"ShowRecommendedFee\" class=\"form-check-label\"></label>\n                    <div class=\"form-text\">Fee will be shown for BTC and LTC onchain payments only.</div>\n                </div>\n                <div class=\"form-group mt-2\">\n                    <label asp-for=\"RecommendedFeeBlockTarget\" class=\"form-label\"></label>\n                    <input inputmode=\"numeric\" asp-for=\"RecommendedFeeBlockTarget\" class=\"form-control\" min=\"1\" style=\"width:8ch\" />\n                    <span asp-validation-for=\"RecommendedFeeBlockTarget\" class=\"text-danger\"></span>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary mt-2\" id=\"SavePaymentSettings\">Save Payment Settings</button>\n            </form>\n        </div>\n    </div>\n</div>\n\n<partial name=\"_Confirm\" model=\"@(new ConfirmModel($\"{Model.CryptoCode} wallet\", \"Change\", \"Update\"))\" />\n<partial name=\"ShowQR\"/>\n\n@section PageFootContent {\n    <script>\n        const wallets = @Safe.Json(Model.AccountKeys.Select(model => Encoders.Hex.EncodeData(Encoding.UTF8.GetBytes(JsonConvert.SerializeObject(model, Formatting.None)))))\n        const qrApp = initQRShow({ title: \"Wallet QR\" })\n        \n        delegate('click', '#Delete', event => { event.preventDefault() })\n        \n        delegate('click', 'button[data-account-key]', event => {\n            const { accountKey } = event.target.dataset;\n            qrApp.showData(wallets[parseInt(accountKey)]);\n        })\n        \n        if (navigator.registerProtocolHandler) {\n            document.getElementById('RegisterWallet').removeAttribute('hidden');\n            delegate('click', '#RegisterWallet', event => {\n               const { store, scheme, url } = event.target.dataset\n               const uri = decodeURIComponent(url)\n               navigator.registerProtocolHandler(scheme, uri, `BTCPay Wallet: ${store}`)\n            })\n        } \n    </script>\n    <partial name=\"_ValidationScriptsPartial\"/>\n}\n", "@using BTCPayServer.Controllers\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@model WalletPSBTViewModel\n@{\n\tvar walletId = Context.GetRouteValue(\"walletId\").ToString();\n\tvar cancelUrl = Model.ReturnUrl ?? Url.Action(nameof(UIWalletsController.WalletTransactions), new { walletId });\n\tvar backUrl = Model.BackUrl != null ? $\"{Model.BackUrl}?returnUrl={Model.ReturnUrl}\" : null;\n\tLayout = \"_LayoutWizard\";\n\tViewData.SetActivePage(WalletsNavPages.PSBT, \"Decode PSBT\", walletId);\n\tCsp.UnsafeEval();\n}\n\n@section Navbar {\n    @if (backUrl != null)\n    {\n        <a href=\"@Url.EnsureLocal(backUrl)\" id=\"GoBack\">\n            <vc:icon symbol=\"back\" />\n        </a>\n    }\n    <a href=\"@Url.EnsureLocal(cancelUrl)\" id=\"CancelWizard\" class=\"cancel\">\n        <vc:icon symbol=\"close\" />\n    </a>\n}\n\n@section PageHeadContent {\n    <link href=\"~/vendor/vue-qrcode-reader/vue-qrcode-reader.css\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n}\n\n@section PageFootContent {\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/ur-registry/urlib.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode-reader/VueQrcodeReader.umd.min.js\" asp-append-version=\"true\"></script>\n\n    <script>\n        document.addEventListener(\"DOMContentLoaded\", function () {\n            const psbtHex = @Json.Serialize(Model.PSBTHex);\n            if (psbtHex) {\n                const buffer = new window.URlib.Buffer.from(psbtHex, \"hex\");\n                const cryptoPSBT = new window.URlib.CryptoPSBT(buffer);\n                const encoder = cryptoPSBT.toUREncoder();\n                const modes = {\n                    ur: { title: \"UR\", fragments: encoder.encodeWhole() },\n                    static: { title: \"Static\", fragments: [psbtHex] }\n                };\n                initQRShow({ title: \"Scan the PSBT\", modes });\n            }\n            initCameraScanningApp(\"Scan PSBT\", data => {\n                let hex = data;\n                if (typeof(data) === \"object\") {\n                    if (data.type === \"crypto-psbt\") {\n                        const psbt = window.URlib.CryptoPSBT.fromCBOR(data.cbor);\n                        hex = psbt.getPSBT().toString('hex');\n                    } else {\n                        console.error('Unexpected UR type', data.type)\n                    }\n                } else if (typeof(data) === 'string') {\n                    hex = data;\n                }\n                document.getElementById(\"PSBT\").value = hex;\n                document.getElementById(\"Decode\").click();\n            }, \"scanModal\");\n        });\n    </script>\n}\n\n<header class=\"text-center\">\n    <h1>@ViewData[\"Title\"]</h1>\n    <p class=\"lead text-secondary mt-3 mx-md-5\">You can decode a PSBT by either pasting its content, uploading the file or scanning the wallet QR code.</p>\n</header>\n\n<div class=\"my-5\">\n    @if (Model.Errors != null && Model.Errors.Count != 0)\n    {\n        <div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">\n                <vc:icon symbol=\"close\" />\n            </button>\n            @foreach (var error in Model.Errors)\n            {\n                <span>@error</span>\n                <br/>\n            }\n        </div>\n    }\n\n    <form class=\"form-group\" method=\"post\" asp-action=\"WalletPSBT\" asp-route-walletId=\"@walletId\" enctype=\"multipart/form-data\">\n        <input type=\"hidden\" asp-for=\"ReturnUrl\" />\n        <input type=\"hidden\" asp-for=\"BackUrl\" />\n        <div class=\"form-group\">\n            <label asp-for=\"PSBT\" class=\"form-label\"></label>\n            <textarea class=\"form-control\" rows=\"5\" asp-for=\"PSBT\"></textarea>\n            <span asp-validation-for=\"PSBT\" class=\"text-danger\"></span>\n        </div>\n        <div class=\"form-group\">\n            <label asp-for=\"UploadedPSBTFile\" class=\"form-label\"></label>\n            <input asp-for=\"UploadedPSBTFile\" type=\"file\" class=\"form-control\">\n        </div>\n        <div class=\"d-flex\">\n            <button type=\"submit\" name=\"command\" value=\"decode\" class=\"btn btn-primary mt-2\" id=\"Decode\">Decode PSBT</button>\n            <button type=\"button\" id=\"scanqrcode\" class=\"btn btn-secondary only-for-js ms-3 mt-2\" data-bs-toggle=\"modal\" data-bs-target=\"#scanModal\">Scan wallet QR with camera</button>\n        </div>\n    </form>\n</div>\n<partial name=\"ShowQR\"/>\n<partial name=\"CameraScanner\"/>\n", "@using BTCPayServer.Controllers\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@model WalletPSBTViewModel\n@{\n\tvar walletId = Context.GetRouteValue(\"walletId\").ToString();\n\tvar cancelUrl = Model.ReturnUrl ?? Url.Action(nameof(UIWalletsController.WalletTransactions), new { walletId });\n\tvar backUrl = Model.BackUrl != null ? $\"{Model.BackUrl}?returnUrl={Model.ReturnUrl}\" : null;\n\tvar isReady = !Model.HasErrors;\n\tvar isSignable = !isReady;\n\tvar needsExport = !isSignable && !isReady;\n\tLayout = \"_LayoutWizard\";\n\tViewData.SetActivePage(WalletsNavPages.PSBT, isReady ? \"Confirm broadcasting this transaction\" : \"Transaction Details\", walletId);\n\tCsp.UnsafeEval();\n}\n\n@section PageHeadContent {\n    <link rel=\"stylesheet\" href=\"~/vendor/highlightjs/default.min.css\" asp-append-version=\"true\">\n    <link href=\"~/vendor/vue-qrcode-reader/vue-qrcode-reader.css\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n    <style>\n        .nav-pills .nav-link.active {\n            color: var(--btcpay-secondary-text-active);\n            background-color: var(--btcpay-secondary-bg-active);\n        }\n    </style>\n}\n\n@section PageFootContent {\n    <script src=\"~/vendor/highlightjs/highlight.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode/vue-qrcode.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/ur-registry/urlib.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode-reader/VueQrcodeReader.umd.min.js\" asp-append-version=\"true\"></script>\n\n    <script>\n        hljs.initHighlightingOnLoad();\n        \n        document.addEventListener(\"DOMContentLoaded\", () => {\n            const psbtHex = @Json.Serialize(Model.PSBTHex);\n            const buffer = new window.URlib.Buffer.from(psbtHex, \"hex\");\n            const cryptoPSBT = new window.URlib.CryptoPSBT(buffer);\n            const encoder = cryptoPSBT.toUREncoder();\n            const modes = {\n                ur: { title: \"UR\", fragments: encoder.encodeWhole() },\n                static: { title: \"Static\", fragments: [psbtHex] }\n            };\n            const continueCallback = () => {\n                document.querySelector(\"#PSBTOptionsImportHeader button\").click()\n                document.getElementById(\"scanqrcode\").click()\n            };\n            \n            initQRShow({\n                title: \"Scan the PSBT with your wallet\",\n                modes,\n                continueTitle: \"Continue with signed PSBT\",\n                continueCallback\n            });\n            \n            initCameraScanningApp(\"Scan the PSBT from your wallet\", data => {\n                let hex = data;\n                if (typeof(data) === \"object\") {\n                    if (data.type === \"crypto-psbt\") {\n                        const psbt = window.URlib.CryptoPSBT.fromCBOR(data.cbor);\n                        hex = psbt.getPSBT().toString('hex');\n                    } else {\n                        console.error('Unexpected UR type', data.type)\n                    }\n                } else if (typeof(data) === 'string') {\n                    hex = data;\n                }\n                document.getElementById(\"ImportedPSBT\").value = hex;\n                document.getElementById(\"Decode\").click();\n            }, \"scanModal\");\n        });\n    </script>\n}\n\n@section Navbar {\n    @if (backUrl != null)\n    {\n        <a href=\"@Url.EnsureLocal(backUrl)\" id=\"GoBack\">\n            <vc:icon symbol=\"back\" />\n        </a>\n    }\n    <a href=\"@Url.EnsureLocal(cancelUrl)\" id=\"CancelWizard\" class=\"cancel\">\n        <vc:icon symbol=\"close\" />\n    </a>\n}\n\n<header class=\"text-center mb-3\">\n    <h1>@ViewData[\"Title\"]</h1>\n</header>\n\n<partial name=\"_PSBTInfo\" model=\"Model\" />\n\n@if (isSignable)\n{\n    <form method=\"post\" asp-action=\"WalletPSBT\" asp-route-walletId=\"@walletId\" class=\"my-5\">\n        <input type=\"hidden\" asp-for=\"CryptoCode\"/>\n        <input type=\"hidden\" asp-for=\"NBXSeedAvailable\"/>\n        <input type=\"hidden\" asp-for=\"PSBT\"/>\n        <input type=\"hidden\" asp-for=\"FileName\"/>\n        <input type=\"hidden\" asp-for=\"ReturnUrl\" />\n        <input type=\"hidden\" asp-for=\"BackUrl\" />\n        <div class=\"d-flex flex-column flex-sm-row flex-wrap justify-content-center align-items-sm-center\">\n            <button type=\"submit\" id=\"SignTransaction\" name=\"command\" value=\"sign\" class=\"btn btn-primary\">Sign transaction</button>\n        </div>\n    </form>\n} \nelse if (isReady)\n{\n    <form method=\"post\" asp-action=\"WalletPSBTReady\" asp-route-walletId=\"@walletId\" class=\"my-5\">\n        <input type=\"hidden\" asp-for=\"SigningKey\" />\n        <input type=\"hidden\" asp-for=\"SigningKeyPath\" />\n        <partial name=\"SigningContext\" for=\"SigningContext\" />\n        <input type=\"hidden\" asp-for=\"ReturnUrl\" />\n        <input type=\"hidden\" asp-for=\"BackUrl\" />\n        <div class=\"d-flex flex-column flex-sm-row flex-wrap justify-content-center align-items-sm-center\">\n            @if (!string.IsNullOrEmpty(Model.SigningContext?.PayJoinBIP21))\n            {\n                <button type=\"submit\" class=\"btn btn-primary mb-3 mb-sm-0 me-sm-2\" name=\"command\" value=\"payjoin\">Broadcast (Payjoin)</button>\n                <span class=\"mx-2\">or</span>\n                <button type=\"submit\" class=\"btn btn-secondary\" name=\"command\" value=\"broadcast\">Broadcast (Simple)</button>\n            }\n            else\n            {\n                <button id=\"BroadcastTransaction\" type=\"submit\" class=\"btn btn-primary\" name=\"command\" value=\"broadcast\">Broadcast transaction</button>\n            }\n        </div>\n    </form>\n}\nelse\n{\n    <p class=\"lead text-secondary mt-5\">\n        Export the PSBT for your wallet. Sign it with your wallet and \n        import the signed PSBT version here for finalization and broadcasting.\n    </p>\n}\n\n<div class=\"accordion\" id=\"PSBTOptions\">\n    <div class=\"accordion-item\">\n        <h2 class=\"accordion-header\" id=\"PSBTOptionsExportHeader\">\n            <button type=\"button\" class=\"accordion-button @(needsExport ? \"\" : \"collapsed\")\" data-bs-toggle=\"collapse\" data-bs-target=\"#PSBTOptionsExportContent\" aria-controls=\"PSBTOptionsExportContent\" aria-expanded=\"@(needsExport ? \"true\" : \"false\")\">\n                <span class=\"h5\">Export PSBT @(isReady ? \"\" : \"for signing\")</span>\n                <vc:icon symbol=\"caret-down\"/>\n            </button>\n        </h2>\n        <div id=\"PSBTOptionsExportContent\" class=\"accordion-collapse collapse @(needsExport ? \"show\" : \"\")\" aria-labelledby=\"PSBTOptionsExportHeader\" data-bs-parent=\"#PSBTOptions\">\n            <div class=\"accordion-body\">\n                <form method=\"post\" asp-action=\"WalletPSBT\" asp-route-walletId=\"@walletId\" class=\"mb-2\">\n                    <input type=\"hidden\" asp-for=\"CryptoCode\"/>\n                    <input type=\"hidden\" asp-for=\"PSBT\"/>\n                    <input type=\"hidden\" asp-for=\"ReturnUrl\" />\n                    <input type=\"hidden\" asp-for=\"BackUrl\" />\n                    <div class=\"d-flex flex-column flex-sm-row flex-wrap align-items-sm-center\">\n                        <button name=\"command\" type=\"submit\" class=\"btn btn-primary mb-3 mb-sm-0 me-sm-2\" value=\"save-psbt\">Download PSBT file</button>\n                        <button name=\"command\" type=\"button\" class=\"btn btn-primary mb-3 mb-sm-0 me-sm-2 only-for-js\" data-bs-toggle=\"modal\" data-bs-target=\"#scan-qr-modal\">Show QR for wallet camera</button>\n                        <a id=\"ShowRawVersion\" href=\"#ExportOptions\" data-bs-toggle=\"collapse\" class=\"btn btn-link text-secondary\">Show raw versions</a>\n                    </div>\n                </form>\n                <div id=\"ExportOptions\" class=\"collapse\">\n                    <div class=\"pt-4\">\n                        <ul class=\"nav mb-3\" id=\"export-tab\" role=\"tablist\">\n                            <li class=\"nav-item\" role=\"presentation\">\n                                <button class=\"btcpay-pill active\" id=\"export-base64-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#export-base64\" type=\"button\" role=\"tab\" aria-controls=\"export-base64\" aria-selected=\"true\">Base64</button>\n                            </li>\n                            <li class=\"nav-item\" role=\"presentation\">\n                                <button class=\"btcpay-pill\" id=\"export-hex-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#export-hex\" type=\"button\" role=\"tab\" aria-controls=\"export-hex\" aria-selected=\"false\">HEX</button>\n                            </li>\n                            <li class=\"nav-item\" role=\"presentation\">\n                                <button class=\"btcpay-pill\" id=\"export-json-tab\" data-bs-toggle=\"pill\" data-bs-target=\"#export-json\" type=\"button\" role=\"tab\" aria-controls=\"export-json\" aria-selected=\"false\">JSON</button>\n                            </li>\n                        </ul>\n                        <div class=\"tab-content\" id=\"export-tabContent\">\n                            <div class=\"tab-pane fade show active\" id=\"export-base64\" role=\"tabpanel\" aria-labelledby=\"export-base64-tab\">\n                                <pre class=\"mb-4 text-wrap\"><code class=\"text\" id=\"psbt-base64\">@Model.PSBT</code></pre>\n                            </div>\n                            <div class=\"tab-pane fade\" id=\"export-hex\" role=\"tabpanel\" aria-labelledby=\"export-hex-tab\">\n                                <pre class=\"mb-4 text-wrap\"><code class=\"text\">@Model.PSBTHex</code></pre>\n                            </div>\n                            <div class=\"tab-pane fade\" id=\"export-json\" role=\"tabpanel\" aria-labelledby=\"export-json-tab\">\n                                <pre class=\"mb-0\"><code class=\"json\">@Model.Decoded</code></pre>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    @if (!isReady)\n    {\n        <div class=\"accordion-item\">\n            <h2 class=\"accordion-header\" id=\"PSBTOptionsImportHeader\">\n                <button type=\"button\" class=\"accordion-button collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#PSBTOptionsImportContent\" aria-controls=\"PSBTOptionsImportContent\" aria-expanded=\"false\">\n                    <span class=\"h5\">Provide updated PSBT</span>\n                    <vc:icon symbol=\"caret-down\"/>\n                </button>\n            </h2>\n            <div id=\"PSBTOptionsImportContent\" class=\"accordion-collapse collapse\" aria-labelledby=\"PSBTOptionsImportHeader\" data-bs-parent=\"#PSBTOptions\">\n                <div class=\"accordion-body\">\n                    <form method=\"post\" asp-action=\"WalletPSBT\" asp-route-walletId=\"@walletId\" enctype=\"multipart/form-data\" class=\"mb-2\">\n                        <input type=\"hidden\" asp-for=\"ReturnUrl\" />\n                        <input type=\"hidden\" asp-for=\"BackUrl\" />\n                        <div class=\"form-group\">\n                            <label for=\"ImportedPSBT\" class=\"form-label\">PSBT content</label>\n                            <textarea id=\"ImportedPSBT\" name=\"PSBT\" class=\"form-control\" rows=\"5\"></textarea>\n                        </div>\n                        <div class=\"form-group\">\n                            <label asp-for=\"UploadedPSBTFile\" class=\"form-label\"></label>\n                            <input asp-for=\"UploadedPSBTFile\" type=\"file\" class=\"form-control\">\n                        </div>\n                        <div class=\"d-flex flex-column flex-sm-row flex-wrap align-items-sm-center\">\n                            <button type=\"submit\" name=\"command\" value=\"decode\" class=\"btn btn-primary mb-3 mb-sm-0 me-sm-2\" id=\"Decode\">Decode PSBT</button>\n                            <button type=\"button\" id=\"scanqrcode\" class=\"btn btn-primary only-for-js\" data-bs-toggle=\"modal\" data-bs-target=\"#scanModal\">Scan wallet QR with camera</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    }\n    <div class=\"accordion-item\">\n        <h2 class=\"accordion-header\" id=\"PSBTOptionsAdvancedHeader\">\n            <button type=\"button\" class=\"accordion-button collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#PSBTOptionsAdvancedContent\" aria-controls=\"PSBTOptionsAdvancedContent\" aria-expanded=\"false\">\n                <span class=\"h5\">Add metadata to PSBT (advanced)</span>\n                <vc:icon symbol=\"caret-down\"/>\n            </button>\n        </h2>\n        <div id=\"PSBTOptionsAdvancedContent\" class=\"accordion-collapse collapse\" aria-labelledby=\"PSBTOptionsAdvancedHeader\" data-bs-parent=\"#PSBTOptions\">\n            <div class=\"accordion-body\">\n                <form method=\"post\" asp-action=\"WalletPSBT\" asp-route-walletId=\"@walletId\" class=\"mb-2\">\n                    <input type=\"hidden\" asp-for=\"PSBT\"/>\n                    <input type=\"hidden\" asp-for=\"ReturnUrl\" />\n                    <input type=\"hidden\" asp-for=\"BackUrl\" />\n                    <p class=\"mb-2\">For exporting the signed PSBT and transaction information to a wallet, update the PSBT.</p>\n                    <button id=\"update-psbt\" type=\"submit\" name=\"command\" value=\"update\" class=\"btn btn-secondary\">Update PSBT</button>\n                    <p class=\"mt-4 mb-2\">For batching transactions, you can combine this PSBT with another one.</p>\n                    <button id=\"combine-psbt\" type=\"submit\" name=\"command\" value=\"combine\" class=\"btn btn-secondary\">Combine PSBT</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n<partial name=\"ShowQR\"/>\n<partial name=\"CameraScanner\"/>\n", "@inject BTCPayServer.Security.ContentSecurityPolicies csp\n@using Microsoft.AspNetCore.Mvc.ModelBinding\n@using BTCPayServer.Controllers\n@inject BTCPayServer.Security.ContentSecurityPolicies Csp\n@model WalletSendModel\n@{\n\tvar walletId = Context.GetRouteValue(\"walletId\").ToString();\n\tvar cancelUrl = Model.ReturnUrl ?? Url.Action(nameof(UIWalletsController.WalletTransactions), new { walletId });\n\tvar backUrl = Model.BackUrl != null ? $\"{Model.BackUrl}?returnUrl={Model.ReturnUrl}\" : null;\n\tLayout = \"_LayoutWizard\";\n\tViewData.SetActivePage(WalletsNavPages.Send, $\"Send {Model.CryptoCode}\", walletId);\n\tcsp.Add(\"worker-src\", \"blob:\");\n\tCsp.UnsafeEval();\n}\n\n@section Navbar {\n    @if (backUrl != null)\n    {\n        <a href=\"@Url.EnsureLocal(backUrl)\" id=\"GoBack\">\n            <vc:icon symbol=\"back\" />\n        </a>\n    }\n    <a href=\"@Url.EnsureLocal(cancelUrl)\" id=\"CancelWizard\" class=\"cancel\">\n        <vc:icon symbol=\"close\" />\n    </a>\n}\n\n@section PageHeadContent\n{\n    <link href=\"~/vendor/vue-qrcode-reader/vue-qrcode-reader.css\" rel=\"stylesheet\" asp-append-version=\"true\"/>\n    <style>\n        .crypto-fee-link { padding-left: 1rem; padding-right: 1rem; }\n        .btn-group > .crypto-fee-link:last-of-type {\n            border-top-right-radius: .2rem  !important;\n            border-bottom-right-radius: .2rem !important;\n        }\n    </style>\n}\n\n@section PageFootContent\n{\n    <script src=\"~/vendor/vuejs/vue.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/ur-registry/urlib.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/vendor/vue-qrcode-reader/VueQrcodeReader.umd.min.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/js/wallet/wallet-camera-scanner.js\" asp-append-version=\"true\"></script>\n    <script src=\"~/js/wallet/WalletSend.js\" asp-append-version=\"true\"></script>\n\n}\n\n<partial name=\"CameraScanner\"/>\n\n<header class=\"text-center\">\n    <h1>@ViewData[\"Title\"]</h1>\n</header>\n\n<form method=\"post\" asp-action=\"WalletSend\" asp-route-walletId=\"@walletId\" class=\"my-5\">\n    <input type=\"hidden\" asp-for=\"InputSelection\" />\n    <input type=\"hidden\" asp-for=\"FiatDivisibility\" />\n    <input type=\"hidden\" asp-for=\"CryptoDivisibility\" />\n    <input type=\"hidden\" asp-for=\"NBXSeedAvailable\" />\n    <input type=\"hidden\" asp-for=\"Fiat\" />\n    <input type=\"hidden\" asp-for=\"Rate\" />\n    <input type=\"hidden\" asp-for=\"CurrentBalance\" />\n    <input type=\"hidden\" asp-for=\"ImmatureBalance\" />\n    <input type=\"hidden\" asp-for=\"CryptoCode\" />\n    <input type=\"hidden\" asp-for=\"BackUrl\" />\n    <input type=\"hidden\" asp-for=\"ReturnUrl\" />\n    <input type=\"hidden\" name=\"BIP21\" id=\"BIP21\" />\n\n    @if (!ViewContext.ModelState.IsValid)\n    {\n        <ul class=\"text-danger\">\n            @foreach (var errors in ViewData.ModelState.Where(pair => pair.Key == string.Empty && pair.Value.ValidationState == ModelValidationState.Invalid))\n            {\n                foreach (var error in errors.Value.Errors)\n                {\n                    <li>@error.ErrorMessage</li>\n                }\n            }\n        </ul>\n    }\n\n    @if (Model.Outputs.Count == 1)\n    {\n        <div class=\"form-group\">\n            <div class=\"d-flex align-items-center justify-content-between\">\n                <label asp-for=\"Outputs[0].DestinationAddress\" class=\"form-label\"></label>\n                <button type=\"submit\" name=\"command\" value=\"add-output\" class=\"d-inline-block ms-2 btn text-primary btn-link p-0 mb-2\">\n                    <span class=\"fa fa-plus\"></span> Add another destination\n                </button>\n            </div>\n            <input asp-for=\"Outputs[0].DestinationAddress\" class=\"form-control font-monospace\" autofocus autocomplete=\"off\" />\n            <span asp-validation-for=\"Outputs[0].DestinationAddress\" class=\"text-danger\"></span>\n        </div>\n        <div class=\"form-group\">\n            <div class=\"d-flex align-items-center justify-content-between\">\n                <label asp-for=\"Outputs[0].Amount\" class=\"form-label\"></label>\n                <button type=\"submit\" name=\"command\" value=\"toggle-input-selection\" class=\"d-inline-block ms-2 btn text-primary btn-link p-0 mb-2\" id=\"toggleInputSelection\"><span class=\"fa fa-@(Model.InputSelection ? \"eye-slash\" : \"eye\") \"></span> @(Model.InputSelection ? \"Hide\" : \"Show\") coin selection</button>\n            </div>\n            <div class=\"input-group\">\n                <input asp-for=\"Outputs[0].Amount\" type=\"number\" inputmode=\"decimal\" step=\"any\" min=\"0\" asp-format=\"{0}\" class=\"form-control output-amount hide-number-spin\" />\n                <div class=\"input-group-text fiat-value\" style=\"display:none;\">\n                    <span class=\"input-group-text p-0 border-0\">=</span>\n                    <input type=\"number\" inputmode=\"decimal\" class=\"input-group-text fiat-value-edit-input py-0 border-0 hide-number-spin\" min=\"0\" step=\"any\" style=\"max-width:100px\" />\n                    <span class=\"input-group-text p-0 border-0\">@Model.Fiat</span>\n                </div>\n            </div>\n            <span asp-validation-for=\"Outputs[0].Amount\" class=\"text-danger\"></span>\n            <div class=\"form-text crypto-info\">\n                Your available balance is\n                <button type=\"button\" class=\"crypto-balance-link btn btn-link p-0 align-baseline\">@Model.CurrentBalance</button> <span>@Model.CryptoCode</span>.\n                @if (Model.ImmatureBalance > 0)\n                {\n                    <span><br><span class=\"text-warning\">\u26a0</span> @Model.ImmatureBalance @Model.CryptoCode are still immature and require additional confirmations.</span>\n                }\n            </div>\n        </div>\n    }\n    else\n    {\n        <div class=\"list-group list-group-flush\">\n            @for (var index = 0; index < Model.Outputs.Count; index++)\n            {\n                <input type=\"hidden\" asp-for=\"Outputs[index].PayoutId\" />\n                <div class=\"list-group-item d-block px-0 pt-0 pb-3 mb-3\">\n                    <div class=\"form-group\">\n                        <div class=\"d-flex align-items-center justify-content-between\">\n                            <label asp-for=\"Outputs[index].DestinationAddress\" class=\"form-label\"></label>\n                            <button type=\"submit\" name=\"command\" value=\"@($\"remove-output:{index}\")\" class=\"d-inline-block ms-2 btn text-danger btn-link p-0 mb-2\">\n                                <span class=\"fa fa-times\"></span> Remove Destination\n                            </button>\n                        </div>\n                        <input asp-for=\"Outputs[index].DestinationAddress\" class=\"form-control\" autocomplete=\"off\"/>\n                        <span asp-validation-for=\"Outputs[index].DestinationAddress\" class=\"text-danger\"></span>\n                    </div>\n                    <div class=\"form-group\">\n                        <label asp-for=\"Outputs[index].Amount\" class=\"form-label\"></label>\n                        <div class=\"input-group\">\n                            <input asp-for=\"Outputs[index].Amount\" type=\"number\" min=\"0\" step=\"any\" asp-format=\"{0}\" class=\"form-control output-amount hide-number-spin\" />\n                            <div class=\"input-group-text fiat-value\" style=\"display:none;\">\n                                <span class=\"input-group-text p-0 border-0\">=</span>\n                                <input type=\"number\" inputmode=\"decimal\" class=\"input-group-text fiat-value-edit-input py-0 border-0 hide-number-spin\" min=\"0\" step=\"any\" style=\"max-width:100px\" />\n                                <span class=\"input-group-text p-0 border-0\">@Model.Fiat</span>\n                            </div>\n                        </div>\n                        <div class=\"form-text crypto-info\">\n                            Your available balance is\n                            <button type=\"button\" class=\"crypto-balance-link btn btn-link p-0 align-baseline\">@Model.CurrentBalance</button> <span>@Model.CryptoCode</span>.\n                            @if (Model.ImmatureBalance > 0)\n                            {\n                                <span><br>Note: @Model.ImmatureBalance @Model.CryptoCode are still immature and require additional confirmations.</span>\n                            }\n                        </div>\n                        <span asp-validation-for=\"Outputs[index].Amount\" class=\"text-danger\"></span>\n                    </div>\n                    <div class=\"form-check\">\n                        <input type=\"checkbox\" asp-for=\"Outputs[index].SubtractFeesFromOutput\" class=\"form-check-input subtract-fees\" />\n                        <label asp-for=\"Outputs[index].SubtractFeesFromOutput\" class=\"form-check-label\"></label>\n                        <span asp-validation-for=\"Outputs[index].SubtractFeesFromOutput\" class=\"text-danger\"></span>\n                    </div>\n                </div>\n            }\n        </div>\n        <div class=\"d-grid gap-3 d-md-block mt-n2\">\n            <button type=\"submit\" name=\"command\" value=\"add-output\" class=\"btn btn-secondary me-md-1\"><span class=\"fa fa-plus\"></span> Add another destination</button>\n            <button type=\"submit\" name=\"command\" value=\"toggle-input-selection\" class=\"btn btn-secondary\" id=\"toggleInputSelection\"><span class=\"fa fa-@(Model.InputSelection ? \"eye-slash\" : \"eye\") \"></span> @(Model.InputSelection ? \"Hide\" : \"Show\") coin selection</button>\n        </div>\n    }\n\n    @if (Model.InputSelection)\n    {\n        <partial name=\"CoinSelection\" />\n    }\n\n    <div class=\"form-group my-4\">\n        <label asp-for=\"FeeSatoshiPerByte\" class=\"form-label\"></label>\n        <input asp-for=\"FeeSatoshiPerByte\" type=\"number\" inputmode=\"numeric\" min=\"0\" step=\"any\" class=\"form-control\" style=\"max-width:14ch;\" />\n        <span asp-validation-for=\"FeeSatoshiPerByte\" class=\"text-danger\"></span>\n        <span id=\"FeeRate-Error\" class=\"text-danger\"></span>\n        @if (Model.RecommendedSatoshiPerByte.Any())\n        {\n            <div class=\"text-start mt-4 d-flex align-items-sm-center flex-column flex-sm-row\">\n                <span class=\"text-secondary me-3\">\n                    Confirm in the next\n                </span>\n                <div class=\"btn-group btn-group-toggle feerate-options mt-2 mt-sm-0\" role=\"group\" data-bs-toggle=\"buttons\">\n                    @for (var index = 0; index < Model.RecommendedSatoshiPerByte.Count; index++)\n                    {\n                        var feeRateOption = Model.RecommendedSatoshiPerByte[index];\n                        <button type=\"button\" class=\"btn btn-sm btn-secondary crypto-fee-link\" value=\"@feeRateOption.FeeRate\" data-bs-toggle=\"tooltip\" title=\"@feeRateOption.FeeRate sat/b\">\n                            @feeRateOption.Target.TimeString()\n                        </button>\n                        <input type=\"hidden\" asp-for=\"RecommendedSatoshiPerByte[index].Target\" />\n                        <input type=\"hidden\" asp-for=\"RecommendedSatoshiPerByte[index].FeeRate\" />\n                    }\n                </div>\n            </div>\n        }\n    </div>\n    @if (Model.Outputs.Count == 1)\n    {\n        <div class=\"form-group\">\n            <div class=\"form-check\">\n                <input type=\"checkbox\" asp-for=\"Outputs[0].SubtractFeesFromOutput\" class=\"form-check-input subtract-fees\" />\n                <label asp-for=\"Outputs[0].SubtractFeesFromOutput\" class=\"form-check-label\"></label>\n                <span asp-validation-for=\"Outputs[0].SubtractFeesFromOutput\" class=\"text-danger\"></span>\n            </div>\n        </div>\n    }\n\n    <div class=\"my-4\">\n        <button class=\"d-inline-flex align-items-center btn btn-link text-primary fw-semibold p-0\" type=\"button\" id=\"AdvancedSettingsButton\" data-bs-toggle=\"collapse\" data-bs-target=\"#AdvancedSettings\" aria-expanded=\"false\" aria-controls=\"AdvancedSettings\">\n            <vc:icon symbol=\"caret-down\"/>\n            <span class=\"ms-1\">Advanced settings</span>\n        </button>\n        <div id=\"AdvancedSettings\" class=\"collapse\">\n            <div class=\"pt-3 pb-1\">\n                <div class=\"form-group\">\n                    <div class=\"form-check\">\n                        <input asp-for=\"NoChange\" class=\"form-check-input\" />\n                        <label asp-for=\"NoChange\" class=\"form-check-label\"></label>\n                        <a href=\"https://docs.btcpayserver.org/Wallet/#dont-create-utxo-change\" target=\"_blank\" rel=\"noreferrer noopener\">\n                            <vc:icon symbol=\"info\" />\n                        </a>\n                    </div>\n                </div>                        \n                <div class=\"form-group\">\n                    <div class=\"form-check\">\n                        <input asp-for=\"AlwaysIncludeNonWitnessUTXO\" class=\"form-check-input\"/>\n                        <label asp-for=\"AlwaysIncludeNonWitnessUTXO\" class=\"form-check-label\"></label>\n                    </div>\n                </div>    \n                @if (Model.SupportRBF)\n                {\n                    <div class=\"form-group\">\n                        <label asp-for=\"AllowFeeBump\" class=\"form-label\"></label>\n                        <a href=\"https://docs.btcpayserver.org/Wallet/#rbf-replace-by-fee\" target=\"_blank\" rel=\"noreferrer noopener\">\n                            <vc:icon symbol=\"info\" />\n                        </a>\n                        <select asp-for=\"AllowFeeBump\" class=\"form-select w-auto\">\n                            <option value=\"Maybe\">Randomize for higher privacy</option>\n                            <option value=\"Yes\">Yes</option>\n                            <option value=\"No\">No</option>\n                        </select>\n                    </div>\n                }\n                @if (!string.IsNullOrEmpty(Model.PayJoinBIP21))\n                {\n                    <div class=\"form-group\">\n                        <label asp-for=\"PayJoinBIP21\" class=\"form-label\"></label>\n                        <input asp-for=\"PayJoinBIP21\" class=\"form-control\" />\n                        <span asp-validation-for=\"PayJoinBIP21\" class=\"text-danger\"></span>\n                    </div>\n                }\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group d-grid d-sm-flex flex-wrap gap-3 mt-2\">\n        <button type=\"submit\" id=\"SignTransaction\" name=\"command\" value=\"sign\" class=\"btn btn-primary\">Sign transaction</button>\n        <button type=\"submit\" id=\"ScheduleTransaction\" name=\"command\" value=\"schedule\" class=\"btn btn-secondary\">Schedule transaction</button>\n        <a class=\"btn btn-secondary\" asp-controller=\"UIWallets\" asp-action=\"WalletPSBT\" asp-route-walletId=\"@walletId\" asp-route-returnUrl=\"@Model.ReturnUrl\" id=\"PSBT\">PSBT</a>\n        <button type=\"button\" id=\"bip21parse\" class=\"btn btn-secondary\" title=\"Paste BIP21/Address\"><i class=\"fa fa-paste\"></i></button>\n        <button type=\"button\" id=\"scanqrcode\" class=\"btn btn-secondary only-for-js\" data-bs-toggle=\"modal\" data-bs-target=\"#scanModal\" title=\"Scan BIP21/Address with camera\"><i class=\"fa fa-camera\"></i></button>\n    </div>\n\n<vc:ui-extension-point location=\"onchain-wallet-send\" model=\"@Model\"/>\n</form>\n"], "filenames": ["BTCPayServer.Abstractions/Security/ContentSecurityPolicies.cs", "BTCPayServer/Filters/ContentSecurityPolicyAttribute.cs", "BTCPayServer/Views/Shared/Crowdfund/Public/ViewCrowdfund.cshtml", "BTCPayServer/Views/Shared/Crowdfund/UpdateCrowdfund.cshtml", "BTCPayServer/Views/Shared/PayButton/PayButton.cshtml", "BTCPayServer/Views/Shared/PointOfSale/Public/Light.cshtml", "BTCPayServer/Views/Shared/PointOfSale/UpdatePointOfSale.cshtml", "BTCPayServer/Views/Shared/PosData.cshtml", "BTCPayServer/Views/Shared/TemplateEditor.cshtml", "BTCPayServer/Views/Shared/_Layout.cshtml", "BTCPayServer/Views/Shared/_LayoutSignedOut.cshtml", "BTCPayServer/Views/Shared/_StatusMessage.cshtml", "BTCPayServer/Views/Shared/_StoreHeader.cshtml", "BTCPayServer/Views/UIAccount/Login.cshtml", "BTCPayServer/Views/UICustodianAccounts/ViewCustodianAccount.cshtml", "BTCPayServer/Views/UIInvoice/Checkout.cshtml", "BTCPayServer/Views/UIInvoice/CheckoutV2.cshtml", "BTCPayServer/Views/UIManage/APIKeys.cshtml", "BTCPayServer/Views/UIPaymentRequest/ViewPaymentRequest.cshtml", "BTCPayServer/Views/UIPullPayment/ViewPullPayment.cshtml", "BTCPayServer/Views/UIStores/ImportWallet/Scan.cshtml", "BTCPayServer/Views/UIStores/WalletSettings.cshtml", "BTCPayServer/Views/UIWallets/WalletPSBT.cshtml", "BTCPayServer/Views/UIWallets/WalletPSBTDecoded.cshtml", "BTCPayServer/Views/UIWallets/WalletSend.cshtml"], "buggy_code_start_loc": [116, 27, 6, 6, 1, 0, 7, 11, 11, 30, 53, 8, 10, 1, 3, 3, 7, 2, 5, 6, 0, 4, 1, 1, 3], "buggy_code_end_loc": [116, 28, 250, 9, 4, 3, 12, 12, 12, 31, 54, 9, 11, 6, 7, 7, 53, 6, 210, 9, 5, 10, 9, 11, 12], "fixing_code_start_loc": [117, 27, 6, 7, 2, 1, 8, 11, 11, 30, 53, 8, 10, 2, 4, 4, 8, 3, 6, 7, 1, 5, 2, 2, 4], "fixing_code_end_loc": [122, 28, 249, 12, 7, 6, 13, 12, 12, 31, 54, 9, 11, 8, 9, 9, 54, 8, 210, 12, 7, 12, 11, 14, 14], "type": "CWE-79", "message": "Cross-site Scripting in GitHub repository btcpayserver/btcpayserver prior to 1.8.3.", "other": {"cve": {"id": "CVE-2023-1270", "sourceIdentifier": "security@huntr.dev", "published": "2023-03-08T14:15:09.637", "lastModified": "2023-04-26T15:15:08.797", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Cross-site Scripting in GitHub repository btcpayserver/btcpayserver prior to 1.8.3."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:L/A:L", "attackVector": "LOCAL", "attackComplexity": "HIGH", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 0.3, "impactScore": 4.7}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:btcpayserver:btcpayserver:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.8.3", "matchCriteriaId": "AF54ED61-1DC6-4636-89E0-CAB74F81BECD"}]}]}], "references": [{"url": "https://github.com/btcpayserver/btcpayserver/commit/7b5ce8f70c060b01990d3f7109e97e0144d878a4", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/ad1f917f-2b25-40ef-9215-c805354c683b", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/btcpayserver/btcpayserver/commit/7b5ce8f70c060b01990d3f7109e97e0144d878a4"}}