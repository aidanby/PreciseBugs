{"buggy_code": ["<?php\n/**\n * print-alert-rules.inc.php\n *\n * LibreNMS print alert rules table\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n * @link       https://www.librenms.org\n *\n * @copyright  2020 The LibreNMS Community\n * @author     Original Author <unknown>\n * @author     Joseph Tingiris <joseph.tingiris@gmail.com>\n */\nif (! Auth::user()->hasGlobalAdmin()) {\n    exit('ERROR: You need to be admin');\n}\n\nuse LibreNMS\\Alerting\\QueryBuilderParser;\nuse LibreNMS\\Enum\\AlertState;\n\n$no_refresh = true;\n\n?>\n<div class=\"row\">\n    <div class=\"col-sm-12\">\n        <span id=\"message\"></span>\n    </div>\n</div>\n<?php\nif (isset($_POST['create-default'])) {\n    $default_rules = array_filter(get_rules_from_json(), function ($rule) {\n        return isset($rule['default']) && $rule['default'];\n    });\n\n    $default_extra = [\n        'mute' => false,\n        'count' => -1,\n        'delay' => 300,\n        'invert' => false,\n        'interval' => 300,\n    ];\n\n    foreach ($default_rules as $add_rule) {\n        $extra = $default_extra;\n        if (isset($add_rule['extra'])) {\n            $extra = array_replace($extra, json_decode($add_rule['extra'], true));\n        }\n\n        $qb = QueryBuilderParser::fromOld($add_rule['rule']);\n        $insert = [\n            'rule' => '',\n            'builder' => json_encode($qb),\n            'query' => $qb->toSql(),\n            'severity' => 'critical',\n            'extra' => json_encode($extra),\n            'disabled' => 0,\n            'name' => $add_rule['name'],\n        ];\n\n        dbInsert($insert, 'alert_rules');\n    }\n    unset($qb);\n}\n\nrequire_once 'includes/html/modal/new_alert_rule.inc.php';\nrequire_once 'includes/html/modal/delete_alert_rule.inc.php'; // Also dies if !Auth::user()->hasGlobalAdmin()\nrequire_once 'includes/html/modal/alert_rule_collection.inc.php'; // Also dies if !Auth::user()->hasGlobalAdmin()\nrequire_once 'includes/html/modal/alert_rule_list.inc.php'; // Also dies if !Auth::user()->hasGlobalAdmin()\n\nrequire_once 'includes/html/modal/edit_transport_group.inc.php';\nrequire_once 'includes/html/modal/edit_alert_transport.inc.php';\n\necho '<form method=\"post\" action=\"\" id=\"result_form\">';\necho csrf_field();\nif (isset($_POST['results_amount']) && $_POST['results_amount'] > 0) {\n    $results = $_POST['results'];\n} else {\n    $results = 50;\n}\n\necho '<div class=\"table-responsive\">';\necho '<div class=\"col pull-left\">';\necho '<button type=\"button\" class=\"btn btn-primary btn-sm\" data-toggle=\"modal\" data-target=\"#create-alert\" data-device_id=\"' . $device['device_id'] . '\">Create new alert rule</button>';\necho '<i> - OR - </i>';\necho '<button type=\"button\" class=\"btn btn-primary btn-sm\" data-toggle=\"modal\" data-target=\"#search_rule_modal\" data-device_id=\"' . $device['device_id'] . '\">Create rule from collection</button>';\necho '</div>';\n\necho '<div class=\"col pull-right\">';\necho '<select data-toggle=\"popover\" data-placement=\"left\" data-content=\"results per page\" name=\"results\" id=\"results\" class=\"form-control input-sm\" onChange=\"updateResults(this);\">';\n$result_options = [\n    '10',\n    '50',\n    '100',\n    '250',\n    '500',\n    '1000',\n    '5000',\n];\nforeach ($result_options as $option) {\n    echo \"<option value='$option'\";\n    if ($results == $option) {\n        echo ' selected';\n    }\n    echo \">$option</option>\";\n}\necho '</select>';\necho '</div>';\n\necho '</div>';\n\necho '<br>';\n\n$param = [];\nif (isset($device['device_id']) && $device['device_id'] > 0) {\n    //device selected\n\n    $global_rules = 'SELECT ar1.* FROM alert_rules AS ar1 WHERE ar1.id NOT IN (SELECT agm1.rule_id FROM alert_group_map AS agm1 UNION DISTINCT SELECT adm1.rule_id FROM alert_device_map AS adm1)';\n\n    $device_rules = 'SELECT ar2.* FROM alert_rules AS ar2 WHERE ar2.id IN (SELECT adm2.rule_id FROM alert_device_map AS adm2 WHERE adm2.device_id=?)';\n    $param[] = $device['device_id'];\n\n    $device_group_rules = 'SELECT ar3.* FROM alert_rules AS ar3 WHERE ar3.id IN (SELECT agm3.rule_id FROM alert_group_map AS agm3 LEFT JOIN device_group_device AS dgd3 ON agm3.group_id=dgd3.device_group_id WHERE dgd3.device_id=?)';\n    $param[] = $device['device_id'];\n\n    $device_location_rules = 'SELECT ar4.* FROM alert_rules AS ar4 WHERE ar4.id IN (SELECT alm4.rule_id FROM alert_location_map AS alm4 LEFT JOIN devices AS d4 ON alm4.location_id=d4.location_id WHERE d4.device_id=?)';\n    $param[] = $device['device_id'];\n\n    $full_query = '(' . $global_rules . ') UNION DISTINCT (' . $device_rules . ') UNION DISTINCT (' . $device_group_rules . ') UNION DISTINCT (' . $device_location_rules . ')';\n} else {\n    // no device selected\n    $full_query = 'SELECT alert_rules.* FROM alert_rules';\n}\n\n$full_query .= ' ORDER BY name ASC';\n\n$rule_list = dbFetchRows($full_query, $param);\n$count = count($rule_list);\n\nif (isset($_POST['page_number']) && $_POST['page_number'] > 0 && $_POST['page_number'] <= $count) {\n    $page_number = $_POST['page_number'];\n} else {\n    $page_number = 1;\n}\n\n$start = (($page_number - 1) * $results);\n\n?>\n<div class=\"table-responsive\">\n<table id=\"alert-rules-table\" class=\"table table-condensed table-hover table-striped\">\n<thead>\n    <tr>\n        <th data-column-id=\"Type\">Type<th>\n        <th data-column-id=\"Name\">Name</th>\n        <th data-column-id=\"Devices\">Devices<th>\n        <th data-column-id=\"Transports\">Transports<th>\n        <th data-column-id=\"Extra\">Extra</th>\n        <th data-column-id=\"Rule\">Rule</th>\n        <th data-column-id=\"Severity\">Severity</th>\n        <th data-column-id=\"Status\">Status</th>\n        <th data-column-id=\"Enabled\">Enabled</th>\n        <th data-column-id=\"Action\" style=\"width:86px;\">Action</th>\n    </tr>\n</thead>\n<tbody>\n<?php\n\n$index = 0;\nforeach ($rule_list as $rule) {\n    $index++;\n\n    if ($index < $start) {\n        continue;\n    }\n    if ($index > $start + $results) {\n        break;\n    }\n\n    $sub = dbFetchRows('SELECT * FROM alerts WHERE rule_id = ? ORDER BY `state` DESC, `id` DESC LIMIT 1', [$rule['id']]);\n    $severity = dbFetchCell('SELECT severity FROM alert_rules where id = ?', [$rule['id']]);\n    $ico = 'check';\n    $col = 'success';\n    $extra = '';\n    $status_msg = '';\n    if (sizeof($sub) == 1) {\n        $sub = $sub[0];\n        if ((int) $sub['state'] === AlertState::CLEAR) {\n            $ico = 'check';\n            $col = 'success';\n            $status_msg = 'All devices matching ' . $rule['name'] . '  are OK';\n        }\n        if ((int) $sub['state'] === AlertState::ACTIVE || (int) $sub['state'] === AlertState::ACKNOWLEDGED) {\n            $alert_style = alert_layout($severity);\n            $ico = $alert_style['icon'];\n            $col = $alert_style['icon_color'];\n            $extra = $alert_style['background_color'];\n            $status_msg = 'Some devices matching ' . $rule['name'] . ' are currently alerting';\n        }\n    }\n\n    $alert_checked = '';\n    $orig_ico = $ico;\n    $orig_col = $col;\n    $orig_class = $extra;\n    if ($rule['disabled']) {\n        $ico = 'pause';\n        $col = '';\n        $extra = 'active';\n        $status_msg = $rule['name'] . ' is OFF';\n    } else {\n        $alert_checked = 'checked';\n    }\n\n    $rule_extra = json_decode($rule['extra'], true);\n\n    $device_count = dbFetchCell('SELECT COUNT(*) FROM alert_device_map WHERE rule_id=?', [$rule['id']]);\n    $group_count = dbFetchCell('SELECT COUNT(*) FROM alert_group_map WHERE rule_id=?', [$rule['id']]);\n    $location_count = dbFetchCell('SELECT COUNT(*) FROM alert_location_map WHERE rule_id=?', [$rule['id']]);\n\n    $popover_msg_parts = [];\n\n    $icon_indicator = 'fa fa-globe fa-fw text-success';\n\n    if ($device_count) {\n        $popover_msg_parts[] = 'Device';\n        $icon_indicator = 'fa fa-server fa-fw text-primary';\n    }\n    if ($group_count) {\n        $popover_msg_parts[] = 'Group';\n        $icon_indicator = 'fa fa-th fa-fw text-primary';\n    }\n    if ($location_count) {\n        $popover_msg_parts[] = 'Location';\n        $icon_indicator = 'fa fa-th fa-fw text-primary';\n    }\n\n    if (count($popover_msg_parts)) {\n        $popover_msg = implode(', ', $popover_msg_parts);\n    } else {\n        $popover_msg = 'Global';\n    }\n    $popover_msg .= ' alert Rule #' . $rule['id'];\n\n    echo \"<tr class='\" . $extra . \"' id='rule_id_\" . $rule['id'] . \"'>\";\n\n    // Type\n\n    echo \"<td colspan=\\\"2\\\"><div data-toggle='popover' data-placement='top' data-content=\\\"$popover_msg\\\" class=\\\"$icon_indicator\\\"></div></td>\";\n\n    // Name\n\n    echo '<td>' . $rule['name'] . '</td>';\n\n    // Devices (and Groups)\n\n    if ($rule['invert_map'] == 0) {\n        $groups_msg = 'Only devices in this group.';\n        $devices_msg = 'Only this device.';\n        $except_device_or_group = null;\n    }\n\n    if ($rule['invert_map'] == 1) {\n        $devices_msg = 'All devices EXCEPT this device. ';\n        $groups_msg = 'All devices EXCEPT this group.';\n        $except_device_or_group = '<strong><em>EXCEPT</em></strong> ';\n    }\n\n    $popover_position = 'right';\n\n    $locations = null;\n    if ($location_count) {\n        $location_query = 'SELECT locations.location, locations.id FROM alert_location_map, locations WHERE alert_location_map.rule_id=? and alert_location_map.location_id = locations.id ORDER BY location';\n        $location_maps = dbFetchRows($location_query, [$rule['id']]);\n        foreach ($location_maps as $location_map) {\n            $locations .= $except_device_or_group . '<a href=\"' . url('devices/location=' . $location_map['id']) . '\" data-container=\"body\" data-toggle=\"popover\" data-placement=\"' . $popover_position . '\" data-content=\"View Devices for Location\" target=\"_blank\">' . $location_map['location'] . '</a><br>';\n        }\n    }\n\n    $groups = null;\n    if ($group_count) {\n        $group_query = 'SELECT device_groups.name, device_groups.id FROM alert_group_map, device_groups WHERE alert_group_map.rule_id=? and alert_group_map.group_id = device_groups.id ORDER BY name';\n        $group_maps = dbFetchRows($group_query, [$rule['id']]);\n        foreach ($group_maps as $group_map) {\n            $groups .= $except_device_or_group . '<a href=\"' . url('device-groups/' . $group_map['id'] . '/edit') . '\" data-container=\"body\" data-toggle=\"popover\" data-placement=\"' . $popover_position . ' data-content=\"' . $group_map['name'] . '\" title=\"' . $groups_msg . '\" target=\"_blank\">' . $group_map['name'] . '</a><br>';\n        }\n    }\n\n    $devices = null;\n    if ($device_count) {\n        $device_query = 'SELECT devices.device_id,devices.hostname FROM alert_device_map, devices WHERE alert_device_map.rule_id=? and alert_device_map.device_id = devices.device_id ORDER BY hostname';\n        $device_maps = dbFetchRows($device_query, [$rule['id']]);\n        foreach ($device_maps as $device_map) {\n            $devices .= $except_device_or_group . '<a href=\"' . url('device/device=' . $device_map['device_id'] . '/tab=edit/') . '\" data-container=\"body\" data-toggle=\"popover\" data-placement=\"' . $popover_position . '\" data-content=\"' . $device_map['hostname'] . '\" title=\"' . $devices_msg . '\" target=\"_blank\">' . $device_map['hostname'] . '</a><br>';\n        }\n    }\n\n    echo \"<td colspan='2'>\";\n    if ($locations) {\n        echo $locations;\n    }\n    if ($groups) {\n        echo $groups;\n    }\n    if ($devices) {\n        echo $devices;\n    }\n    if (! $devices && ! $groups && ! $locations) {\n        // All Devices\n        echo '<a href=\"' . url('devices') . '\" data-container=\"body\" data-toggle=\"popover\" data-placement=\" . $popover_position . \" data-content=\"View All Devices\" target=\"_blank\">All Devices</a><br>';\n    }\n\n    echo '</td>';\n\n    // Transports\n    $transport_count = dbFetchCell('SELECT COUNT(*) FROM alert_transport_map WHERE rule_id=?', [$rule['id']]);\n\n    $transports_popover = 'right';\n\n    $transports = null;\n    if ($transport_count) {\n        $transport_maps = dbFetchRows('SELECT transport_or_group_id,target_type FROM alert_transport_map WHERE alert_transport_map.rule_id=? ORDER BY target_type', [$rule['id']]);\n        foreach ($transport_maps as $transport_map) {\n            $transport_name = null;\n            if ($transport_map['target_type'] == 'group') {\n                $transport_name = dbFetchCell('SELECT transport_group_name FROM alert_transport_groups WHERE transport_group_id=?', [$transport_map['transport_or_group_id']]);\n                $transport_edit = \"<a href='' data-toggle='modal' data-target='#edit-transport-group' data-group_id='\" . $transport_map['transport_or_group_id'] . \"' data-container='body' data-toggle='popover' data-placement='$transports_popover' data-content='Edit transport group  $transport_name'>\" . $transport_name . '</a>';\n            }\n            if ($transport_map['target_type'] == 'single') {\n                $transport_name = dbFetchCell('SELECT transport_name FROM alert_transports WHERE transport_id=?', [$transport_map['transport_or_group_id']]);\n                $transport_edit = \"<a href='' data-toggle='modal' data-target='#edit-alert-transport' data-transport_id='\" . $transport_map['transport_or_group_id'] . \"' data-container='body' data-toggle='popover' data-placement='$transports_popover' data-content='Edit transport $transport_name'>\" . $transport_name . '</a>';\n            }\n            $transports .= $transport_edit . '<br>';\n        }\n    }\n\n    if (! $transport_count || ! $transports) {\n        $default_transports = dbFetchRows('SELECT transport_id, transport_name FROM alert_transports WHERE is_default=1 ORDER BY transport_name', []);\n        foreach ($default_transports as $default_transport) {\n            $transport_edit = \"<a href='' data-toggle='modal' data-target='#edit-alert-transport' data-transport_id='\" . $default_transport['transport_id'] . \"' data-container='body' data-toggle='popover' data-placement='$transports_popover' data-content='Edit default transport \" . $default_transport['transport_name'] . \"'>\" . $default_transport['transport_name'] . '</a>';\n            $transports .= $transport_edit . '<br>';\n        }\n    }\n\n    if (! $transports) {\n        $transports = 'none';\n    }\n\n    echo \"<td colspan='2'>$transports</td>\";\n\n    // Extra\n\n    echo '<td><small>Max: ' . $rule_extra['count'] . '<br />Delay: ' . $rule_extra['delay'] . '<br />Interval: ' . $rule_extra['interval'] . '</small></td>';\n\n    // Rule\n\n    echo \"<td class='col-sm-4'>\";\n    if ($rule_extra['invert'] === true) {\n        echo '<strong><em>Inverted</em></strong> ';\n    }\n\n    if (empty($rule['builder'])) {\n        $rule_display = $rule['rule'];\n    } elseif ($rule_extra['options']['override_query'] === 'on') {\n        $rule_display = 'Custom SQL Query';\n    } else {\n        $rule_display = QueryBuilderParser::fromJson($rule['builder'])->toSql(false);\n    }\n    echo '<i>' . htmlentities($rule_display) . '</i></td>';\n\n    // Severity\n    echo '<td>' . ($rule['severity'] == 'ok' ? strtoupper($rule['severity']) : ucwords($rule['severity'])) . '</td>';\n\n    // Status\n\n    $status_popover = 'top';\n\n    echo \"<td><span data-toggle='popover' data-placement='$status_popover' data-content='$status_msg' id='alert-rule-\" . $rule['id'] . \"' class='fa fa-fw fa-2x fa-\" . $ico . ' text-' . $col . \"'></span> \";\n    if ($rule_extra['mute'] === true) {\n        echo \"<div data-toggle='popover' data-content='Alerts for \" . $rule['name'] . \" are muted' class='fa fa-fw fa-2x fa-volume-off text-primary' aria-hidden='true'></div>\";\n    }\n    if ($sub['state'] == AlertState::ACKNOWLEDGED) {\n        echo \"<div data-toggle='popover' data-content='Some Alerts for \" . $rule['name'] . \" are acknowledged' class='fa fa-fw fa-2x fa-sticky-note text-info' aria-hidden='true'></div>\";\n    }\n    echo '</td>';\n    // Enabled\n\n    $enabled_popover = 'top';\n\n    echo '<td>';\n    if ($rule['disabled']) {\n        $enabled_msg = $rule['name'] . ' is OFF';\n    }\n    if (! $rule['disabled']) {\n        $enabled_msg = $rule['name'] . ' is ON';\n    }\n\n    echo \"<div id='on-off-checkbox-\" . $rule['id'] . \"' data-toggle='popover' data-placement='$enabled_popover' data-content='\" . $enabled_msg . \"' class='btn-group btn-group-sm' role='group'>\";\n    echo \"<input id='\" . $rule['id'] . \"' type='checkbox' name='alert-rule' data-orig_class='\" . $orig_class . \"' data-orig_colour='\" . $orig_col . \"' data-orig_state='\" . $orig_ico . \"' data-alert_id='\" . $rule['id'] . \"' data-alert_name='\" . $rule['name'] . \"' data-alert_status='\" . $status_msg . \"' \" . $alert_checked . \" data-size='small' data-toggle='modal'>\";\n    echo '</div>';\n    echo '</td>';\n\n    // Action\n\n    $action_popover = 'left';\n\n    echo '<td>';\n    echo \"<div class='btn-group btn-group-sm' role='group'>\";\n    echo \"<button type='button' class='btn btn-primary' data-toggle='modal' data-placement='$action_popover' data-target='#create-alert' data-rule_id='\" . $rule['id'] . \"' name='edit-alert-rule' data-content='Edit alert rule \" . $rule['name'] . \"' data-container='body'><i class='fa fa-lg fa-pencil' aria-hidden='true'></i></button> \";\n    echo \"<button type='button' class='btn btn-danger' aria-label='Delete' data-placement='$action_popover' data-toggle='modal' data-target='#confirm-delete' data-alert_id='\" . $rule['id'] . \"' data-alert_name='\" . $rule['name'] . \"' name='delete-alert-rule' data-content='Delete alert rule \" . $rule['name'] . \"' data-container='body'><i class='fa fa-lg fa-trash' aria-hidden='true'></i></button>\";\n    echo '</td>';\n\n    echo \"</tr>\\r\\n\";\n}//end foreach\n\n?>\n</tbody>\n</table>\n</div>\n<?php\n// Pagination\n\nif (($count % $results) > 0) {\n    echo '<div class=\"table-responsive\">';\n    echo '<div class=\"col pull-left\">';\n    echo generate_pagination($count, $results, $page_number);\n    echo '</div>';\n    echo '<div class=\"col pull-right\">';\n    $showing_start = ($page_number * $results) - $results + 1;\n    $showing_end = $page_number * $results;\n    if ($showing_end > $count) {\n        $showing_end = $count;\n    }\n    echo \"<p class=\\\"pagination\\\">Showing $showing_start to $showing_end of $count alert rules</p>\";\n    echo '</div>';\n    echo '</div>';\n}\n\necho '<input type=\"hidden\" name=\"page_number\" id=\"page_number\" value=\"' . htmlspecialchars($page_number) . '\">\n    <input type=\"hidden\" name=\"results_amount\" id=\"results_amount\" value=\"' . htmlspecialchars($results) . '\">\n    </form>';\n\nif ($count < 1) {\n    echo '<div class=\"row\">\n        <div class=\"col-sm-12\">\n        <form role=\"form\" method=\"post\">\n        ' . csrf_field() . '\n        <p class=\"text-center\">\n        <button type=\"submit\" class=\"btn btn-success btn-lg\" id=\"create-default\" name=\"create-default\"><i class=\"fa fa-plus\"></i> Click here to create the default alert rules!</button>\n        </p>\n        </form>\n        </div>\n        </div>';\n}\n?>\n<script>\n$(\"[data-toggle='modal'], [data-toggle='popover']\").popover({\n    trigger: 'hover'\n});\n\n$(\"[name='alert-rule']\").bootstrapSwitch('offColor','danger');\n$('input[name=\"alert-rule\"]').on('switchChange.bootstrapSwitch',  function(event, state) {\n    event.preventDefault();\n    var $this = $(this);\n    var alert_id = $(this).data(\"alert_id\");\n    var alert_name = $(this).data(\"alert_name\");\n    var alert_status = $(this).data(\"alert_status\");\n    var orig_state = $(this).data(\"orig_state\");\n    var orig_colour = $(this).data(\"orig_colour\");\n    var orig_class = $(this).data(\"orig_class\");\n    $.ajax({\n        type: 'POST',\n            url: 'ajax_form.php',\n            data: { type: \"update-alert-rule\", alert_id: alert_id, state: state },\n            dataType: \"html\",\n            success: function(msg) {\n                if(msg.indexOf(\"ERROR:\") <= -1) {\n                    if(state) {\n                        $('#alert-rule-'+alert_id).removeClass('fa-pause');\n                        $('#alert-rule-'+alert_id).addClass('fa-'+orig_state);\n                        $('#alert-rule-'+alert_id).removeClass('text-default');\n                        $('#alert-rule-'+alert_id).addClass('text-'+orig_colour);\n                        $('#alert-rule-'+alert_id).attr('data-content', alert_status);\n                        $('#on-off-checkbox-'+alert_id).attr('data-content', alert_name+' is ON');\n                        $('#rule_id_'+alert_id).removeClass('active');\n                        $('#rule_id_'+alert_id).addClass(orig_class);\n                    } else {\n                        $('#alert-rule-'+alert_id).removeClass('fa-'+orig_state);\n                        $('#alert-rule-'+alert_id).addClass('fa-pause');\n                        $('#alert-rule-'+alert_id).removeClass('text-'+orig_colour);\n                        $('#alert-rule-'+alert_id).addClass('text-default');\n                        $('#alert-rule-'+alert_id).attr('data-content', alert_name+' is OFF');\n                        $('#on-off-checkbox-'+alert_id).attr('data-content', alert_name+' is OFF');\n                        $('#rule_id_'+alert_id).removeClass('warning');\n                        $('#rule_id_'+alert_id).addClass('active');\n                    }\n                } else {\n                    $(\"#message\").html('<div class=\"alert alert-info\">'+msg+'</div>');\n                    $('#'+alert_id).bootstrapSwitch('toggleState',true );\n                }\n            },\n                error: function() {\n                    $(\"#message\").html('<div class=\"alert alert-info\">This alert could not be updated.</div>');\n                    $('#'+alert_id).bootstrapSwitch('toggleState',true );\n                }\n    });\n});\n\nfunction updateResults(results) {\n    $('#results_amount').val(results.value);\n    $('#page_number').val(1);\n    $('#result_form').trigger( \"submit\" );\n}\n\nfunction changePage(page,e) {\n    e.preventDefault();\n    $('#page_number').val(page);\n    $('#result_form').trigger( \"submit\" );\n}\n</script>\n"], "fixing_code": ["<?php\n/**\n * print-alert-rules.inc.php\n *\n * LibreNMS print alert rules table\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n * @link       https://www.librenms.org\n *\n * @copyright  2020 The LibreNMS Community\n * @author     Original Author <unknown>\n * @author     Joseph Tingiris <joseph.tingiris@gmail.com>\n */\nif (! Auth::user()->hasGlobalAdmin()) {\n    exit('ERROR: You need to be admin');\n}\n\nuse LibreNMS\\Alerting\\QueryBuilderParser;\nuse LibreNMS\\Enum\\AlertState;\n\n$no_refresh = true;\n\n?>\n<div class=\"row\">\n    <div class=\"col-sm-12\">\n        <span id=\"message\"></span>\n    </div>\n</div>\n<?php\nif (isset($_POST['create-default'])) {\n    $default_rules = array_filter(get_rules_from_json(), function ($rule) {\n        return isset($rule['default']) && $rule['default'];\n    });\n\n    $default_extra = [\n        'mute' => false,\n        'count' => -1,\n        'delay' => 300,\n        'invert' => false,\n        'interval' => 300,\n    ];\n\n    foreach ($default_rules as $add_rule) {\n        $extra = $default_extra;\n        if (isset($add_rule['extra'])) {\n            $extra = array_replace($extra, json_decode($add_rule['extra'], true));\n        }\n\n        $qb = QueryBuilderParser::fromOld($add_rule['rule']);\n        $insert = [\n            'rule' => '',\n            'builder' => json_encode($qb),\n            'query' => $qb->toSql(),\n            'severity' => 'critical',\n            'extra' => json_encode($extra),\n            'disabled' => 0,\n            'name' => $add_rule['name'],\n        ];\n\n        dbInsert($insert, 'alert_rules');\n    }\n    unset($qb);\n}\n\nrequire_once 'includes/html/modal/new_alert_rule.inc.php';\nrequire_once 'includes/html/modal/delete_alert_rule.inc.php'; // Also dies if !Auth::user()->hasGlobalAdmin()\nrequire_once 'includes/html/modal/alert_rule_collection.inc.php'; // Also dies if !Auth::user()->hasGlobalAdmin()\nrequire_once 'includes/html/modal/alert_rule_list.inc.php'; // Also dies if !Auth::user()->hasGlobalAdmin()\n\nrequire_once 'includes/html/modal/edit_transport_group.inc.php';\nrequire_once 'includes/html/modal/edit_alert_transport.inc.php';\n\necho '<form method=\"post\" action=\"\" id=\"result_form\">';\necho csrf_field();\nif (isset($_POST['results_amount']) && $_POST['results_amount'] > 0) {\n    $results = $_POST['results'];\n} else {\n    $results = 50;\n}\n\necho '<div class=\"table-responsive\">';\necho '<div class=\"col pull-left\">';\necho '<button type=\"button\" class=\"btn btn-primary btn-sm\" data-toggle=\"modal\" data-target=\"#create-alert\" data-device_id=\"' . $device['device_id'] . '\">Create new alert rule</button>';\necho '<i> - OR - </i>';\necho '<button type=\"button\" class=\"btn btn-primary btn-sm\" data-toggle=\"modal\" data-target=\"#search_rule_modal\" data-device_id=\"' . $device['device_id'] . '\">Create rule from collection</button>';\necho '</div>';\n\necho '<div class=\"col pull-right\">';\necho '<select data-toggle=\"popover\" data-placement=\"left\" data-content=\"results per page\" name=\"results\" id=\"results\" class=\"form-control input-sm\" onChange=\"updateResults(this);\">';\n$result_options = [\n    '10',\n    '50',\n    '100',\n    '250',\n    '500',\n    '1000',\n    '5000',\n];\nforeach ($result_options as $option) {\n    echo \"<option value='$option'\";\n    if ($results == $option) {\n        echo ' selected';\n    }\n    echo \">$option</option>\";\n}\necho '</select>';\necho '</div>';\n\necho '</div>';\n\necho '<br>';\n\n$param = [];\nif (isset($device['device_id']) && $device['device_id'] > 0) {\n    //device selected\n\n    $global_rules = 'SELECT ar1.* FROM alert_rules AS ar1 WHERE ar1.id NOT IN (SELECT agm1.rule_id FROM alert_group_map AS agm1 UNION DISTINCT SELECT adm1.rule_id FROM alert_device_map AS adm1)';\n\n    $device_rules = 'SELECT ar2.* FROM alert_rules AS ar2 WHERE ar2.id IN (SELECT adm2.rule_id FROM alert_device_map AS adm2 WHERE adm2.device_id=?)';\n    $param[] = $device['device_id'];\n\n    $device_group_rules = 'SELECT ar3.* FROM alert_rules AS ar3 WHERE ar3.id IN (SELECT agm3.rule_id FROM alert_group_map AS agm3 LEFT JOIN device_group_device AS dgd3 ON agm3.group_id=dgd3.device_group_id WHERE dgd3.device_id=?)';\n    $param[] = $device['device_id'];\n\n    $device_location_rules = 'SELECT ar4.* FROM alert_rules AS ar4 WHERE ar4.id IN (SELECT alm4.rule_id FROM alert_location_map AS alm4 LEFT JOIN devices AS d4 ON alm4.location_id=d4.location_id WHERE d4.device_id=?)';\n    $param[] = $device['device_id'];\n\n    $full_query = '(' . $global_rules . ') UNION DISTINCT (' . $device_rules . ') UNION DISTINCT (' . $device_group_rules . ') UNION DISTINCT (' . $device_location_rules . ')';\n} else {\n    // no device selected\n    $full_query = 'SELECT alert_rules.* FROM alert_rules';\n}\n\n$full_query .= ' ORDER BY name ASC';\n\n$rule_list = dbFetchRows($full_query, $param);\n$count = count($rule_list);\n\nif (isset($_POST['page_number']) && $_POST['page_number'] > 0 && $_POST['page_number'] <= $count) {\n    $page_number = $_POST['page_number'];\n} else {\n    $page_number = 1;\n}\n\n$start = (($page_number - 1) * $results);\n\n?>\n<div class=\"table-responsive\">\n<table id=\"alert-rules-table\" class=\"table table-condensed table-hover table-striped\">\n<thead>\n    <tr>\n        <th data-column-id=\"Type\">Type<th>\n        <th data-column-id=\"Name\">Name</th>\n        <th data-column-id=\"Devices\">Devices<th>\n        <th data-column-id=\"Transports\">Transports<th>\n        <th data-column-id=\"Extra\">Extra</th>\n        <th data-column-id=\"Rule\">Rule</th>\n        <th data-column-id=\"Severity\">Severity</th>\n        <th data-column-id=\"Status\">Status</th>\n        <th data-column-id=\"Enabled\">Enabled</th>\n        <th data-column-id=\"Action\" style=\"width:86px;\">Action</th>\n    </tr>\n</thead>\n<tbody>\n<?php\n\n$index = 0;\nforeach ($rule_list as $rule) {\n    $index++;\n\n    if ($index < $start) {\n        continue;\n    }\n    if ($index > $start + $results) {\n        break;\n    }\n\n    $sub = dbFetchRows('SELECT * FROM alerts WHERE rule_id = ? ORDER BY `state` DESC, `id` DESC LIMIT 1', [$rule['id']]);\n    $severity = dbFetchCell('SELECT severity FROM alert_rules where id = ?', [$rule['id']]);\n    $ico = 'check';\n    $col = 'success';\n    $extra = '';\n    $status_msg = '';\n    if (sizeof($sub) == 1) {\n        $sub = $sub[0];\n        if ((int) $sub['state'] === AlertState::CLEAR) {\n            $ico = 'check';\n            $col = 'success';\n            $status_msg = 'All devices matching ' . $rule['name'] . '  are OK';\n        }\n        if ((int) $sub['state'] === AlertState::ACTIVE || (int) $sub['state'] === AlertState::ACKNOWLEDGED) {\n            $alert_style = alert_layout($severity);\n            $ico = $alert_style['icon'];\n            $col = $alert_style['icon_color'];\n            $extra = $alert_style['background_color'];\n            $status_msg = 'Some devices matching ' . $rule['name'] . ' are currently alerting';\n        }\n    }\n\n    $alert_checked = '';\n    $orig_ico = $ico;\n    $orig_col = $col;\n    $orig_class = $extra;\n    if ($rule['disabled']) {\n        $ico = 'pause';\n        $col = '';\n        $extra = 'active';\n        $status_msg = $rule['name'] . ' is OFF';\n    } else {\n        $alert_checked = 'checked';\n    }\n\n    $rule_extra = json_decode($rule['extra'], true);\n\n    $device_count = dbFetchCell('SELECT COUNT(*) FROM alert_device_map WHERE rule_id=?', [$rule['id']]);\n    $group_count = dbFetchCell('SELECT COUNT(*) FROM alert_group_map WHERE rule_id=?', [$rule['id']]);\n    $location_count = dbFetchCell('SELECT COUNT(*) FROM alert_location_map WHERE rule_id=?', [$rule['id']]);\n\n    $popover_msg_parts = [];\n\n    $icon_indicator = 'fa fa-globe fa-fw text-success';\n\n    if ($device_count) {\n        $popover_msg_parts[] = 'Device';\n        $icon_indicator = 'fa fa-server fa-fw text-primary';\n    }\n    if ($group_count) {\n        $popover_msg_parts[] = 'Group';\n        $icon_indicator = 'fa fa-th fa-fw text-primary';\n    }\n    if ($location_count) {\n        $popover_msg_parts[] = 'Location';\n        $icon_indicator = 'fa fa-th fa-fw text-primary';\n    }\n\n    if (count($popover_msg_parts)) {\n        $popover_msg = implode(', ', $popover_msg_parts);\n    } else {\n        $popover_msg = 'Global';\n    }\n    $popover_msg .= ' alert Rule #' . $rule['id'];\n\n    echo \"<tr class='\" . $extra . \"' id='rule_id_\" . $rule['id'] . \"'>\";\n\n    // Type\n\n    echo \"<td colspan=\\\"2\\\"><div data-toggle='popover' data-placement='top' data-content=\\\"$popover_msg\\\" class=\\\"$icon_indicator\\\"></div></td>\";\n\n    // Name\n\n    echo '<td>' . $rule['name'] . '</td>';\n\n    // Devices (and Groups)\n\n    if ($rule['invert_map'] == 0) {\n        $groups_msg = 'Only devices in this group.';\n        $devices_msg = 'Only this device.';\n        $except_device_or_group = null;\n    }\n\n    if ($rule['invert_map'] == 1) {\n        $devices_msg = 'All devices EXCEPT this device. ';\n        $groups_msg = 'All devices EXCEPT this group.';\n        $except_device_or_group = '<strong><em>EXCEPT</em></strong> ';\n    }\n\n    $popover_position = 'right';\n\n    $locations = null;\n    if ($location_count) {\n        $location_query = 'SELECT locations.location, locations.id FROM alert_location_map, locations WHERE alert_location_map.rule_id=? and alert_location_map.location_id = locations.id ORDER BY location';\n        $location_maps = dbFetchRows($location_query, [$rule['id']]);\n        foreach ($location_maps as $location_map) {\n            $locations .= $except_device_or_group . '<a href=\"' . url('devices/location=' . $location_map['id']) . '\" data-container=\"body\" data-toggle=\"popover\" data-placement=\"' . $popover_position . '\" data-content=\"View Devices for Location\" target=\"_blank\">' . htmlentities($location_map['location']) . '</a><br>';\n        }\n    }\n\n    $groups = null;\n    if ($group_count) {\n        $group_query = 'SELECT device_groups.name, device_groups.id FROM alert_group_map, device_groups WHERE alert_group_map.rule_id=? and alert_group_map.group_id = device_groups.id ORDER BY name';\n        $group_maps = dbFetchRows($group_query, [$rule['id']]);\n        foreach ($group_maps as $group_map) {\n            $groups .= $except_device_or_group . '<a href=\"' . url('device-groups/' . $group_map['id'] . '/edit') . '\" data-container=\"body\" data-toggle=\"popover\" data-placement=\"' . $popover_position . ' data-content=\"' . htmlentities($group_map['name']) . '\" title=\"' . $groups_msg . '\" target=\"_blank\">' . htmlentities($group_map['name']) . '</a><br>';\n        }\n    }\n\n    $devices = null;\n    if ($device_count) {\n        $device_query = 'SELECT devices.device_id,devices.hostname FROM alert_device_map, devices WHERE alert_device_map.rule_id=? and alert_device_map.device_id = devices.device_id ORDER BY hostname';\n        $device_maps = dbFetchRows($device_query, [$rule['id']]);\n        foreach ($device_maps as $device_map) {\n            $devices .= $except_device_or_group . '<a href=\"' . url('device/device=' . $device_map['device_id'] . '/tab=edit/') . '\" data-container=\"body\" data-toggle=\"popover\" data-placement=\"' . $popover_position . '\" data-content=\"' . htmlentities($device_map['hostname']) . '\" title=\"' . $devices_msg . '\" target=\"_blank\">' . htmlentities($device_map['hostname']) . '</a><br>';\n        }\n    }\n\n    echo \"<td colspan='2'>\";\n    if ($locations) {\n        echo $locations;\n    }\n    if ($groups) {\n        echo $groups;\n    }\n    if ($devices) {\n        echo $devices;\n    }\n    if (! $devices && ! $groups && ! $locations) {\n        // All Devices\n        echo '<a href=\"' . url('devices') . '\" data-container=\"body\" data-toggle=\"popover\" data-placement=\" . $popover_position . \" data-content=\"View All Devices\" target=\"_blank\">All Devices</a><br>';\n    }\n\n    echo '</td>';\n\n    // Transports\n    $transport_count = dbFetchCell('SELECT COUNT(*) FROM alert_transport_map WHERE rule_id=?', [$rule['id']]);\n\n    $transports_popover = 'right';\n\n    $transports = null;\n    if ($transport_count) {\n        $transport_maps = dbFetchRows('SELECT transport_or_group_id,target_type FROM alert_transport_map WHERE alert_transport_map.rule_id=? ORDER BY target_type', [$rule['id']]);\n        foreach ($transport_maps as $transport_map) {\n            $transport_name = null;\n            if ($transport_map['target_type'] == 'group') {\n                $transport_name = dbFetchCell('SELECT transport_group_name FROM alert_transport_groups WHERE transport_group_id=?', [$transport_map['transport_or_group_id']]);\n                $transport_edit = \"<a href='' data-toggle='modal' data-target='#edit-transport-group' data-group_id='\" . $transport_map['transport_or_group_id'] . \"' data-container='body' data-toggle='popover' data-placement='$transports_popover' data-content='Edit transport group  $transport_name'>\" . $transport_name . '</a>';\n            }\n            if ($transport_map['target_type'] == 'single') {\n                $transport_name = dbFetchCell('SELECT transport_name FROM alert_transports WHERE transport_id=?', [$transport_map['transport_or_group_id']]);\n                $transport_edit = \"<a href='' data-toggle='modal' data-target='#edit-alert-transport' data-transport_id='\" . $transport_map['transport_or_group_id'] . \"' data-container='body' data-toggle='popover' data-placement='$transports_popover' data-content='Edit transport $transport_name'>\" . $transport_name . '</a>';\n            }\n            $transports .= $transport_edit . '<br>';\n        }\n    }\n\n    if (! $transport_count || ! $transports) {\n        $default_transports = dbFetchRows('SELECT transport_id, transport_name FROM alert_transports WHERE is_default=1 ORDER BY transport_name', []);\n        foreach ($default_transports as $default_transport) {\n            $transport_edit = \"<a href='' data-toggle='modal' data-target='#edit-alert-transport' data-transport_id='\" . $default_transport['transport_id'] . \"' data-container='body' data-toggle='popover' data-placement='$transports_popover' data-content='Edit default transport \" . $default_transport['transport_name'] . \"'>\" . $default_transport['transport_name'] . '</a>';\n            $transports .= $transport_edit . '<br>';\n        }\n    }\n\n    if (! $transports) {\n        $transports = 'none';\n    }\n\n    echo \"<td colspan='2'>$transports</td>\";\n\n    // Extra\n\n    echo '<td><small>Max: ' . $rule_extra['count'] . '<br />Delay: ' . $rule_extra['delay'] . '<br />Interval: ' . $rule_extra['interval'] . '</small></td>';\n\n    // Rule\n\n    echo \"<td class='col-sm-4'>\";\n    if ($rule_extra['invert'] === true) {\n        echo '<strong><em>Inverted</em></strong> ';\n    }\n\n    if (empty($rule['builder'])) {\n        $rule_display = $rule['rule'];\n    } elseif ($rule_extra['options']['override_query'] === 'on') {\n        $rule_display = 'Custom SQL Query';\n    } else {\n        $rule_display = QueryBuilderParser::fromJson($rule['builder'])->toSql(false);\n    }\n    echo '<i>' . htmlentities($rule_display) . '</i></td>';\n\n    // Severity\n    echo '<td>' . ($rule['severity'] == 'ok' ? strtoupper($rule['severity']) : ucwords($rule['severity'])) . '</td>';\n\n    // Status\n\n    $status_popover = 'top';\n\n    echo \"<td><span data-toggle='popover' data-placement='$status_popover' data-content='$status_msg' id='alert-rule-\" . $rule['id'] . \"' class='fa fa-fw fa-2x fa-\" . $ico . ' text-' . $col . \"'></span> \";\n    if ($rule_extra['mute'] === true) {\n        echo \"<div data-toggle='popover' data-content='Alerts for \" . $rule['name'] . \" are muted' class='fa fa-fw fa-2x fa-volume-off text-primary' aria-hidden='true'></div>\";\n    }\n    if ($sub['state'] == AlertState::ACKNOWLEDGED) {\n        echo \"<div data-toggle='popover' data-content='Some Alerts for \" . $rule['name'] . \" are acknowledged' class='fa fa-fw fa-2x fa-sticky-note text-info' aria-hidden='true'></div>\";\n    }\n    echo '</td>';\n    // Enabled\n\n    $enabled_popover = 'top';\n\n    echo '<td>';\n    if ($rule['disabled']) {\n        $enabled_msg = $rule['name'] . ' is OFF';\n    }\n    if (! $rule['disabled']) {\n        $enabled_msg = $rule['name'] . ' is ON';\n    }\n\n    echo \"<div id='on-off-checkbox-\" . $rule['id'] . \"' data-toggle='popover' data-placement='$enabled_popover' data-content='\" . $enabled_msg . \"' class='btn-group btn-group-sm' role='group'>\";\n    echo \"<input id='\" . $rule['id'] . \"' type='checkbox' name='alert-rule' data-orig_class='\" . $orig_class . \"' data-orig_colour='\" . $orig_col . \"' data-orig_state='\" . $orig_ico . \"' data-alert_id='\" . $rule['id'] . \"' data-alert_name='\" . $rule['name'] . \"' data-alert_status='\" . $status_msg . \"' \" . $alert_checked . \" data-size='small' data-toggle='modal'>\";\n    echo '</div>';\n    echo '</td>';\n\n    // Action\n\n    $action_popover = 'left';\n\n    echo '<td>';\n    echo \"<div class='btn-group btn-group-sm' role='group'>\";\n    echo \"<button type='button' class='btn btn-primary' data-toggle='modal' data-placement='$action_popover' data-target='#create-alert' data-rule_id='\" . $rule['id'] . \"' name='edit-alert-rule' data-content='Edit alert rule \" . $rule['name'] . \"' data-container='body'><i class='fa fa-lg fa-pencil' aria-hidden='true'></i></button> \";\n    echo \"<button type='button' class='btn btn-danger' aria-label='Delete' data-placement='$action_popover' data-toggle='modal' data-target='#confirm-delete' data-alert_id='\" . $rule['id'] . \"' data-alert_name='\" . $rule['name'] . \"' name='delete-alert-rule' data-content='Delete alert rule \" . $rule['name'] . \"' data-container='body'><i class='fa fa-lg fa-trash' aria-hidden='true'></i></button>\";\n    echo '</td>';\n\n    echo \"</tr>\\r\\n\";\n}//end foreach\n\n?>\n</tbody>\n</table>\n</div>\n<?php\n// Pagination\n\nif (($count % $results) > 0) {\n    echo '<div class=\"table-responsive\">';\n    echo '<div class=\"col pull-left\">';\n    echo generate_pagination($count, $results, $page_number);\n    echo '</div>';\n    echo '<div class=\"col pull-right\">';\n    $showing_start = ($page_number * $results) - $results + 1;\n    $showing_end = $page_number * $results;\n    if ($showing_end > $count) {\n        $showing_end = $count;\n    }\n    echo \"<p class=\\\"pagination\\\">Showing $showing_start to $showing_end of $count alert rules</p>\";\n    echo '</div>';\n    echo '</div>';\n}\n\necho '<input type=\"hidden\" name=\"page_number\" id=\"page_number\" value=\"' . htmlspecialchars($page_number) . '\">\n    <input type=\"hidden\" name=\"results_amount\" id=\"results_amount\" value=\"' . htmlspecialchars($results) . '\">\n    </form>';\n\nif ($count < 1) {\n    echo '<div class=\"row\">\n        <div class=\"col-sm-12\">\n        <form role=\"form\" method=\"post\">\n        ' . csrf_field() . '\n        <p class=\"text-center\">\n        <button type=\"submit\" class=\"btn btn-success btn-lg\" id=\"create-default\" name=\"create-default\"><i class=\"fa fa-plus\"></i> Click here to create the default alert rules!</button>\n        </p>\n        </form>\n        </div>\n        </div>';\n}\n?>\n<script>\n$(\"[data-toggle='modal'], [data-toggle='popover']\").popover({\n    trigger: 'hover'\n});\n\n$(\"[name='alert-rule']\").bootstrapSwitch('offColor','danger');\n$('input[name=\"alert-rule\"]').on('switchChange.bootstrapSwitch',  function(event, state) {\n    event.preventDefault();\n    var $this = $(this);\n    var alert_id = $(this).data(\"alert_id\");\n    var alert_name = $(this).data(\"alert_name\");\n    var alert_status = $(this).data(\"alert_status\");\n    var orig_state = $(this).data(\"orig_state\");\n    var orig_colour = $(this).data(\"orig_colour\");\n    var orig_class = $(this).data(\"orig_class\");\n    $.ajax({\n        type: 'POST',\n            url: 'ajax_form.php',\n            data: { type: \"update-alert-rule\", alert_id: alert_id, state: state },\n            dataType: \"html\",\n            success: function(msg) {\n                if(msg.indexOf(\"ERROR:\") <= -1) {\n                    if(state) {\n                        $('#alert-rule-'+alert_id).removeClass('fa-pause');\n                        $('#alert-rule-'+alert_id).addClass('fa-'+orig_state);\n                        $('#alert-rule-'+alert_id).removeClass('text-default');\n                        $('#alert-rule-'+alert_id).addClass('text-'+orig_colour);\n                        $('#alert-rule-'+alert_id).attr('data-content', alert_status);\n                        $('#on-off-checkbox-'+alert_id).attr('data-content', alert_name+' is ON');\n                        $('#rule_id_'+alert_id).removeClass('active');\n                        $('#rule_id_'+alert_id).addClass(orig_class);\n                    } else {\n                        $('#alert-rule-'+alert_id).removeClass('fa-'+orig_state);\n                        $('#alert-rule-'+alert_id).addClass('fa-pause');\n                        $('#alert-rule-'+alert_id).removeClass('text-'+orig_colour);\n                        $('#alert-rule-'+alert_id).addClass('text-default');\n                        $('#alert-rule-'+alert_id).attr('data-content', alert_name+' is OFF');\n                        $('#on-off-checkbox-'+alert_id).attr('data-content', alert_name+' is OFF');\n                        $('#rule_id_'+alert_id).removeClass('warning');\n                        $('#rule_id_'+alert_id).addClass('active');\n                    }\n                } else {\n                    $(\"#message\").html('<div class=\"alert alert-info\">'+msg+'</div>');\n                    $('#'+alert_id).bootstrapSwitch('toggleState',true );\n                }\n            },\n                error: function() {\n                    $(\"#message\").html('<div class=\"alert alert-info\">This alert could not be updated.</div>');\n                    $('#'+alert_id).bootstrapSwitch('toggleState',true );\n                }\n    });\n});\n\nfunction updateResults(results) {\n    $('#results_amount').val(results.value);\n    $('#page_number').val(1);\n    $('#result_form').trigger( \"submit\" );\n}\n\nfunction changePage(page,e) {\n    e.preventDefault();\n    $('#page_number').val(page);\n    $('#result_form').trigger( \"submit\" );\n}\n</script>\n"], "filenames": ["includes/html/print-alert-rules.php"], "buggy_code_start_loc": [286], "buggy_code_end_loc": [305], "fixing_code_start_loc": [286], "fixing_code_end_loc": [305], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Generic in GitHub repository librenms/librenms prior to 22.10.0.", "other": {"cve": {"id": "CVE-2022-3561", "sourceIdentifier": "security@huntr.dev", "published": "2022-11-20T05:15:11.613", "lastModified": "2022-11-21T13:10:16.283", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Generic in GitHub repository librenms/librenms prior to 22.10.0."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 0.9, "impactScore": 3.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:librenms:librenms:*:*:*:*:*:*:*:*", "versionEndExcluding": "22.10.0", "matchCriteriaId": "99D1C2AF-9BBB-4F7D-9FC3-4A645F7C284D"}]}]}], "references": [{"url": "https://github.com/librenms/librenms/commit/d86cbcd96d684e4de8dfa50b4490e4e02782d242", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/7389e6eb-4bce-4b97-999d-d3b70d8cee34", "source": "security@huntr.dev", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/librenms/librenms/commit/d86cbcd96d684e4de8dfa50b4490e4e02782d242"}}