{"buggy_code": ["<?php\n/**\n * 2007-2018 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License (AFL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/afl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n *  @author PrestaShop SA <contact@prestashop.com>\n *  @copyright  2007-2018 PrestaShop SA\n *  @license    http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)\n *  International Registered Trademark & Property of PrestaShop SA\n */\n\nif (!defined('_PS_VERSION_')) {\n    exit;\n}\n\nclass dashproducts extends Module\n{\n    public function __construct()\n    {\n        $this->name = 'dashproducts';\n        $this->tab = 'dashboard';\n        $this->version = '2.0.4';\n        $this->author = 'PrestaShop';\n\n        $this->push_filename = _PS_CACHE_DIR_.'push/activity';\n        $this->allow_push = true;\n\n        parent::__construct();\n        $this->displayName = $this->trans('Dashboard Products', array(), 'Modules.Dashproducts.Admin');\n        $this->description = $this->trans('Adds a block with a table of your latest orders and a ranking of your products', array(), 'Modules.Dashproducts.Admin');\n        $this->ps_versions_compliancy = array('min' => '1.7.1.0', 'max' => _PS_VERSION_);\n    }\n\n    public function install()\n    {\n        Configuration::updateValue('DASHPRODUCT_NBR_SHOW_LAST_ORDER', 10);\n        Configuration::updateValue('DASHPRODUCT_NBR_SHOW_BEST_SELLER', 10);\n        Configuration::updateValue('DASHPRODUCT_NBR_SHOW_MOST_VIEWED', 10);\n        Configuration::updateValue('DASHPRODUCT_NBR_SHOW_TOP_SEARCH', 10);\n\n        return (parent::install()\n            && $this->registerHook('dashboardZoneTwo')\n            && $this->registerHook('dashboardData')\n            && $this->registerHook('actionObjectOrderAddAfter')\n            && $this->registerHook('actionSearch')\n        );\n    }\n\n    public function hookDashboardZoneTwo($params)\n    {\n        $this->context->smarty->assign(\n            array(\n                'DASHACTIVITY_CART_ACTIVE' => Configuration::get('DASHACTIVITY_CART_ACTIVE'),\n                'DASHACTIVITY_VISITOR_ONLINE' => Configuration::get('DASHACTIVITY_VISITOR_ONLINE'),\n                'DASHPRODUCT_NBR_SHOW_LAST_ORDER' => Configuration::get('DASHPRODUCT_NBR_SHOW_LAST_ORDER'),\n                'DASHPRODUCT_NBR_SHOW_BEST_SELLER' => Configuration::get('DASHPRODUCT_NBR_SHOW_BEST_SELLER'),\n                'DASHPRODUCT_NBR_SHOW_TOP_SEARCH' => Configuration::get('DASHPRODUCT_NBR_SHOW_TOP_SEARCH'),\n                'date_from' => Tools::displayDate($params['date_from']),\n                'date_to' => Tools::displayDate($params['date_to']),\n                'dashproducts_config_form' => $this->renderConfigForm(),\n            )\n        );\n\n        return $this->display(__FILE__, 'dashboard_zone_two.tpl');\n    }\n\n    public function hookDashboardData($params)\n    {\n        $table_recent_orders = $this->getTableRecentOrders();\n        $table_best_sellers = $this->getTableBestSellers($params['date_from'], $params['date_to']);\n        $table_most_viewed = $this->getTableMostViewed($params['date_from'], $params['date_to']);\n        $table_top_10_most_search = $this->getTableTop10MostSearch($params['date_from'], $params['date_to']);\n\n        //$table_top_5_search = $this->getTableTop5Search();\n        return array(\n            'data_table' => array(\n                'table_recent_orders' => $table_recent_orders,\n                'table_best_sellers' => $table_best_sellers,\n                'table_most_viewed' => $table_most_viewed,\n                'table_top_10_most_search' => $table_top_10_most_search,\n                //'table_top_5_search' => $table_top_5_search\n            )\n        );\n    }\n\n    public function getTableRecentOrders()\n    {\n        $header = array(\n            array('title' => $this->trans('Customer Name', array(), 'Modules.Dashproducts.Admin'), 'class' => 'text-left'),\n            array('title' => $this->trans('Products', array(), 'Admin.Global'), 'class' => 'text-center'),\n            array('title' => $this->trans('Total', array(), 'Admin.Global').' '.$this->trans('Tax excl.', array(), 'Admin.Global'), 'class' => 'text-center'),\n            array('title' => $this->trans('Date', array(), 'Admin.Global'), 'class' => 'text-center'),\n            array('title' => $this->trans('Status', array(), 'Admin.Global'), 'class' => 'text-center'),\n            array('title' => '', 'class' => 'text-right'),\n        );\n\n        $limit = (int)Configuration::get('DASHPRODUCT_NBR_SHOW_LAST_ORDER') ? (int)Configuration::get('DASHPRODUCT_NBR_SHOW_LAST_ORDER') : 10;\n        $orders = Order::getOrdersWithInformations($limit);\n\n        $body = array();\n        foreach ($orders as $order) {\n            $currency = Currency::getCurrency((int)$order['id_currency']);\n            $tr = array();\n            $customerLinkParams = ['route' => 'admin_customers_view', 'customerId' => $order['id_customer']];\n            $tr[] = array(\n                'id' => 'firstname_lastname',\n                'value' => '<a href=\"'.$this->context->link->getAdminLink('AdminCustomers', true, $customerLinkParams) .'\">'.Tools::htmlentitiesUTF8($order['firstname']).' '.Tools::htmlentitiesUTF8($order['lastname']).'</a>',\n                'class' => 'text-left',\n            );\n            $tr[] = array(\n                'id' => 'total_products',\n                'value' => count(OrderDetail::getList((int)$order['id_order'])),\n                'class' => 'text-center',\n            );\n            $tr[] = array(\n                'id' => 'total_paid',\n                'value' => Tools::displayPrice((float)$order['total_paid_tax_excl'], $currency),\n                'class' => 'text-center',\n                'wrapper_start' => $order['valid'] ? '<span class=\"badge badge-success\">' : '',\n                'wrapper_end' => '<span>',\n            );\n            $tr[] = array(\n                'id' => 'date_add',\n                'value' => Tools::displayDate($order['date_add']),\n                'class' => 'text-center',\n            );\n            $tr[] = array(\n                'id' => 'status',\n                'value' => Tools::htmlentitiesUTF8($order['state_name']),\n                'class' => 'text-center',\n            );\n            $tr[] = array(\n                'id' => 'details',\n                'value' => '',\n                'class' => 'text-right',\n                'wrapper_start' => '<a class=\"btn btn-default\" href=\"index.php?tab=AdminOrders&id_order='.(int)$order['id_order'].'&vieworder&token='.Tools::getAdminTokenLite('AdminOrders').'\" title=\"'.$this->trans('Details', array(), 'Modules.Dashproducts.Admin').'\"><i class=\"icon-search\"></i>',\n                'wrapper_end' => '</a>'\n            );\n\n            $body[] = $tr;\n        }\n\n        return array('header' => $header, 'body' => $body);\n    }\n\n    public function getTableBestSellers($date_from, $date_to)\n    {\n        $header = array(\n            array(\n                'id' => 'image',\n                'title' => $this->trans('Image', array(), 'Admin.Global'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'product',\n                'title' => $this->trans('Product', array(), 'Admin.Global'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'category',\n                'title' => $this->trans('Category', array(), 'Admin.Catalog.Feature'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'total_sold',\n                'title' => $this->trans('Total sold', array(), 'Modules.Dashproducts.Admin'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'sales',\n                'title' => $this->trans('Sales', array(), 'Admin.Global'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'net_profit',\n                'title' => $this->trans('Net profit', array(), 'Modules.Dashproducts.Admin'),\n                'class' => 'text-center',\n            )\n        );\n\n        $products = Db::getInstance()->ExecuteS(\n            '\n\t\t\t\t\tSELECT\n\t\t\t\t\t\tproduct_id,\n\t\t\t\t\t\tproduct_name,\n\t\t\t\t\t\tSUM(product_quantity-product_quantity_refunded-product_quantity_return-product_quantity_reinjected) as total,\n\t\t\t\t\t\tp.price as price,\n\t\t\t\t\t\tpa.price as price_attribute,\n\t\t\t\t\t\tSUM(total_price_tax_excl / conversion_rate) as sales,\n\t\t\t\t\t\tSUM(product_quantity * purchase_supplier_price / conversion_rate) as expenses\n\t\t\t\t\tFROM `'._DB_PREFIX_.'orders` o\n\t\tLEFT JOIN `'._DB_PREFIX_.'order_detail` od ON o.id_order = od.id_order\n\t\tLEFT JOIN `'._DB_PREFIX_.'product` p ON p.id_product = product_id\n\t\tLEFT JOIN `'._DB_PREFIX_.'product_attribute` pa ON pa.id_product_attribute = od.product_attribute_id\n\t\tWHERE `invoice_date` BETWEEN \"' . pSQL($date_from) . ' 00:00:00\" AND \"' . pSQL($date_to) . ' 23:59:59\"\n\t\tAND valid = 1\n\t\t' . Shop::addSqlRestriction(false, 'o') . '\n\t\tGROUP BY product_id, product_attribute_id\n\t\tORDER BY total DESC\n\t\tLIMIT ' . (int)Configuration::get('DASHPRODUCT_NBR_SHOW_BEST_SELLER')\n        );\n\n        $body = array();\n        foreach ($products as $product) {\n            $product_obj = new Product((int)$product['product_id'], false, $this->context->language->id);\n            if (!Validate::isLoadedObject($product_obj)) {\n                continue;\n            }\n            $category = new Category($product_obj->getDefaultCategory(), $this->context->language->id);\n\n            $img = '';\n            if (($row_image = Product::getCover($product_obj->id)) && $row_image['id_image']) {\n                $image = new Image($row_image['id_image']);\n                $path_to_image = _PS_PROD_IMG_DIR_.$image->getExistingImgPath().'.'.$this->context->controller->imageType;\n                $img = ImageManager::thumbnail($path_to_image, 'product_mini_'.$row_image['id_image'].'.'.$this->context->controller->imageType, 45, $this->context->controller->imageType);\n            }\n\n            $productPrice = $product['price'];\n            if (isset($product['price_attribute']) && $product['price_attribute'] != '0.000000') {\n                $productPrice = $product['price_attribute'];\n            }\n\n            $body[] = array(\n                array(\n                    'id' => 'product',\n                    'value' => $img,\n                    'class' => 'text-center'\n                ),\n                array(\n                    'id' => 'product',\n                    'value' => '<a href=\"'.$this->context->link->getAdminLink('AdminProducts', true, ['id_product' => $product_obj->id, 'updateproduct' => 1]).'\">'.Tools::htmlentitiesUTF8($product['product_name']).'</a>'.'<br/>'.Tools::displayPrice($productPrice),\n                    'class' => 'text-center'\n                ),\n                array(\n                    'id' => 'category',\n                    'value' => $category->name,\n                    'class' => 'text-center'\n                ),\n                array(\n                    'id' => 'total_sold',\n                    'value' => $product['total'],\n                    'class' => 'text-center'\n                ),\n                array(\n                    'id' => 'sales',\n                    'value' => Tools::displayPrice($product['sales']),\n                    'class' => 'text-center'\n                ),\n                array(\n                    'id' => 'net_profit',\n                    'value' => Tools::displayPrice($product['sales'] - $product['expenses']),\n                    'class' => 'text-center'\n                )\n            );\n        }\n\n        return array('header' => $header, 'body' => $body);\n    }\n\n    public function getTableMostViewed($date_from, $date_to)\n    {\n        $header = array(\n            array(\n                'id' => 'image',\n                'title' => $this->trans('Image', array(), 'Admin.Global'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'product',\n                'title' => $this->trans('Product', array(), 'Admin.Global'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'views',\n                'title' => $this->trans('Views', array(), 'Modules.Dashproducts.Admin'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'added_to_cart',\n                'title' => $this->trans('Added to cart', array(), 'Modules.Dashproducts.Admin'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'purchased',\n                'title' => $this->trans('Purchased', array(), 'Modules.Dashproducts.Admin'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'rate',\n                'title' => $this->trans('Percentage', array(), 'Admin.Global'),\n                'class' => 'text-center',\n            )\n        );\n\n        if (Configuration::get('PS_STATSDATA_PAGESVIEWS')) {\n            $products = $this->getTotalViewed($date_from, $date_to, (int)Configuration::get('DASHPRODUCT_NBR_SHOW_MOST_VIEWED'));\n            $body = array();\n            if (is_array($products) && count($products)) {\n                foreach ($products as $product) {\n                    $product_obj = new Product((int)$product['id_object'], true, $this->context->language->id);\n                    if (!Validate::isLoadedObject($product_obj)) {\n                        continue;\n                    }\n\n                    $img = '';\n                    if (($row_image = Product::getCover($product_obj->id)) && $row_image['id_image']) {\n                        $image = new Image($row_image['id_image']);\n                        $path_to_image = _PS_PROD_IMG_DIR_.$image->getExistingImgPath().'.'.$this->context->controller->imageType;\n                        $img = ImageManager::thumbnail(\n                            $path_to_image,\n                            'product_mini_'.$product_obj->id.'.'.$this->context->controller->imageType,\n                            45,\n                            $this->context->controller->imageType\n                        );\n                    }\n\n                    $tr = array();\n                    $tr[] = array(\n                        'id' => 'product',\n                        'value' => $img,\n                        'class' => 'text-center'\n                    );\n                    $tr[] = array(\n                        'id' => 'product',\n                        'value' => Tools::htmlentitiesUTF8($product_obj->name).'<br/>'.Tools::displayPrice(Product::getPriceStatic((int)$product_obj->id)),\n                        'class' => 'text-center',\n                    );\n                    $tr[] = array(\n                        'id' => 'views',\n                        'value' => $product['counter'],\n                        'class' => 'text-center',\n                    );\n                    $added_cart = $this->getTotalProductAddedCart($date_from, $date_to, (int)$product_obj->id);\n                    $tr[] = array(\n                        'id' => 'added_to_cart',\n                        'value' => $added_cart,\n                        'class' => 'text-center',\n                    );\n                    $purchased = $this->getTotalProductPurchased($date_from, $date_to, (int)$product_obj->id);\n                    $tr[] = array(\n                        'id' => 'purchased',\n                        'value' => $this->getTotalProductPurchased($date_from, $date_to, (int)$product_obj->id),\n                        'class' => 'text-center',\n                    );\n                    $tr[] = array(\n                        'id' => 'rate',\n                        'value' => ($product['counter'] ? round(100 * $purchased / $product['counter'], 1).'%' : '-'),\n                        'class' => 'text-center',\n                    );\n                    $body[] = $tr;\n                }\n            }\n        } else {\n            $body = '<div class=\"alert alert-info\">'.$this->trans('You must enable the \"Save global page views\" option from the \"Data mining for statistics\" module in order to display the most viewed products, or use the Google Analytics module.', array(), 'Modules.Dashproducts.Admin').'</div>';\n        }\n        return array('header' => $header, 'body' => $body);\n    }\n\n    public function getTableTop10MostSearch($date_from, $date_to)\n    {\n        $header = array(\n            array(\n                'id' => 'reference',\n                'title' => $this->trans('Term', array(), 'Modules.Dashproducts.Admin'),\n                'class' => 'text-left'\n            ),\n            array(\n                'id' => 'name',\n                'title' => $this->trans('Search', array(), 'Admin.Shopparameters.Feature'),\n                'class' => 'text-center'\n            ),\n            array(\n                'id' => 'totalQuantitySold',\n                'title' => $this->trans('Results', array(), 'Modules.Dashproducts.Admin'),\n                'class' => 'text-center'\n            )\n        );\n\n        $terms = $this->getMostSearchTerms($date_from, $date_to, (int)Configuration::get('DASHPRODUCT_NBR_SHOW_TOP_SEARCH'));\n        $body = array();\n        if (is_array($terms) && count($terms)) {\n            foreach ($terms as $term) {\n                $tr = array();\n                $tr[] = array(\n                    'id' => 'product',\n                    'value' => $term['keywords'],\n                    'class' => 'text-left',\n                );\n                $tr[] = array(\n                    'id' => 'product',\n                    'value' => $term['count_keywords'],\n                    'class' => 'text-center',\n                );\n                $tr[] = array(\n                    'id' => 'product',\n                    'value' => $term['results'],\n                    'class' => 'text-center',\n                );\n                $body[] = $tr;\n            }\n        }\n\n        return array('header' => $header, 'body' => $body);\n    }\n\n    public function getTableTop5Search()\n    {\n        $header = array(\n            array(\n                'id' => 'reference',\n                'title' => $this->trans('Product', array(), 'Admin.Global'),\n            )\n        );\n\n        $body = array();\n\n        return array('header' => $header, 'body' => $body);\n    }\n\n    public function getTotalProductSales($date_from, $date_to, $id_product)\n    {\n        $sql = 'SELECT SUM(od.`product_quantity` * od.`product_price`) AS total\n\t\t\t\tFROM `'._DB_PREFIX_.'order_detail` od\n\t\t\t\tJOIN `'._DB_PREFIX_.'orders` o ON o.`id_order` = od.`id_order`\n\t\t\t\tWHERE od.`product_id` = '.(int)$id_product.'\n\t\t\t\t\t'.Shop::addSqlRestriction(Shop::SHARE_ORDER, 'o').'\n\t\t\t\t\tAND o.valid = 1\n\t\t\t\t\tAND o.`date_add` BETWEEN \"'.pSQL($date_from).'\" AND \"'.pSQL($date_to).'\"';\n\n        return (int)Db::getInstance(_PS_USE_SQL_SLAVE_)->getValue($sql);\n    }\n\n    public function getTotalProductAddedCart($date_from, $date_to, $id_product)\n    {\n        return Db::getInstance(_PS_USE_SQL_SLAVE_)->getValue('\n\t\tSELECT count(`id_product`) as count\n\t\tFROM `'._DB_PREFIX_.'cart_product` cp\n\t\tWHERE cp.`id_product` = '.(int)$id_product.'\n\t\t'.Shop::addSqlRestriction(false, 'cp').'\n\t\tAND cp.`date_add` BETWEEN \"'.pSQL($date_from).'\" AND \"'.pSQL($date_to).'\"');\n    }\n\n    public function getTotalProductPurchased($date_from, $date_to, $id_product)\n    {\n        return Db::getInstance(_PS_USE_SQL_SLAVE_)->getValue('\n\t\tSELECT count(`product_id`) as count\n\t\tFROM `'._DB_PREFIX_.'order_detail` od\n\t\tJOIN `'._DB_PREFIX_.'orders` o ON o.`id_order` = od.`id_order`\n\t\tWHERE od.`product_id` = '.(int)$id_product.'\n\t\t'.Shop::addSqlRestriction(false, 'od').'\n\t\tAND o.valid = 1\n\t\tAND o.`date_add` BETWEEN \"'.pSQL($date_from).'\" AND \"'.pSQL($date_to).'\"');\n    }\n\n    public function getTotalViewed($date_from, $date_to, $limit = 10)\n    {\n        $gapi = Module::isInstalled('gapi') ? Module::getInstanceByName('gapi') : false;\n        if (Validate::isLoadedObject($gapi) && $gapi->isConfigured()) {\n            $products = array();\n            // Only works with the default product URL pattern at this time\n            $result = $gapi->requestReportData(\n                'ga:pagePath',\n                'ga:visits',\n                $date_from,\n                $date_to,\n                '-ga:visits',\n                'ga:pagePath=~/([a-z]{2}/)?([a-z]+/)?[0-9][0-9]*\\-.*\\.html$',\n                1,\n                10\n            );\n\n\n            if ($result) {\n                foreach ($result as $row) {\n                    if (preg_match('@/([a-z]{2}/)?([a-z]+/)?([0-9]+)\\-.*\\.html$@', $row['dimensions']['pagePath'], $matches)) {\n                        $products[] = array('id_object' => (int)$matches[3], 'counter' => $row['metrics']['visits']);\n                    }\n                }\n            }\n\n            return $products;\n        } else {\n            return Db::getInstance(_PS_USE_SQL_SLAVE_)->executeS('\n\t\t\tSELECT p.id_object, pv.counter\n\t\t\tFROM `'._DB_PREFIX_.'page_viewed` pv\n\t\t\tLEFT JOIN `'._DB_PREFIX_.'date_range` dr ON pv.`id_date_range` = dr.`id_date_range`\n\t\t\tLEFT JOIN `'._DB_PREFIX_.'page` p ON pv.`id_page` = p.`id_page`\n\t\t\tLEFT JOIN `'._DB_PREFIX_.'page_type` pt ON pt.`id_page_type` = p.`id_page_type`\n\t\t\tWHERE pt.`name` = \\'product\\'\n\t\t\t'.Shop::addSqlRestriction(false, 'pv').'\n\t\t\tAND dr.`time_start` BETWEEN \"'.pSQL($date_from).'\" AND \"'.pSQL($date_to).'\"\n\t\t\tAND dr.`time_end` BETWEEN \"'.pSQL($date_from).'\" AND \"'.pSQL($date_to).'\"\n\t\t\tORDER BY pv.counter DESC\n\t\t\tLIMIT '.(int)$limit);\n        }\n    }\n\n    public function getMostSearchTerms($date_from, $date_to, $limit = 10)\n    {\n        if (!Module::isInstalled('statssearch')) {\n            return array();\n        }\n\n        return Db::getInstance(_PS_USE_SQL_SLAVE_)->executeS('\n\t\tSELECT `keywords`, count(`id_statssearch`) as count_keywords, `results`\n\t\tFROM `'._DB_PREFIX_.'statssearch` ss\n\t\tWHERE ss.`date_add` BETWEEN \"'.pSQL($date_from).'\" AND \"'.pSQL($date_to).'\"\n\t\t'.Shop::addSqlRestriction(false, 'ss').'\n\t\tGROUP BY ss.`keywords`\n\t\tORDER BY `count_keywords` DESC\n\t\tLIMIT '.(int)$limit);\n    }\n\n    public function renderConfigForm()\n    {\n        $fields_form = array(\n            'form' => array(\n                'input' => array(),\n                'submit' => array(\n                    'title' => $this->trans('Save', array(), 'Admin.Actions'),\n                    'class' => 'btn btn-default pull-right submit_dash_config',\n                    'reset' => array(\n                        'title' => $this->trans('Cancel', array(), 'Admin.Actions'),\n                        'class' => 'btn btn-default cancel_dash_config',\n                    )\n                )\n            ),\n        );\n\n        $inputs = array(\n            array(\n                'label' => $this->trans('Number of \"Recent Orders\" to display', array(), 'Modules.Dashproducts.Admin'),\n                'config_name' => 'DASHPRODUCT_NBR_SHOW_LAST_ORDER'\n            ),\n            array(\n                'label' => $this->trans('Number of \"Best Sellers\" to display', array(), 'Modules.Dashproducts.Admin'),\n                'config_name' => 'DASHPRODUCT_NBR_SHOW_BEST_SELLER'\n            ),\n            array(\n                'label' => $this->trans('Number of \"Most Viewed\" to display', array(), 'Modules.Dashproducts.Admin'),\n                'config_name' => 'DASHPRODUCT_NBR_SHOW_MOST_VIEWED'\n            ),\n            array(\n                'label' => $this->trans('Number of \"Top Searches\" to display', array(), 'Modules.Dashproducts.Admin'),\n                'config_name' => 'DASHPRODUCT_NBR_SHOW_TOP_SEARCH'\n            ),\n        );\n\n        foreach ($inputs as $input) {\n            $fields_form['form']['input'][] = array(\n                'type' => 'select',\n                'label' => $input['label'],\n                'name' => $input['config_name'],\n                'options' => array(\n                    'query' => array(\n                        array('id' => 5, 'name' => 5),\n                        array('id' => 10, 'name' => 10),\n                        array('id' => 20, 'name' => 20),\n                        array('id' => 50, 'name' => 50),\n                    ),\n                    'id' => 'id',\n                    'name' => 'name',\n                )\n            );\n        }\n\n        $helper = new HelperForm();\n        $helper->show_toolbar = false;\n        $helper->table = $this->table;\n        $lang = new Language((int)Configuration::get('PS_LANG_DEFAULT'));\n        $helper->default_form_language = $lang->id;\n        $helper->allow_employee_form_lang = Configuration::get('PS_BO_ALLOW_EMPLOYEE_FORM_LANG') ? Configuration::get('PS_BO_ALLOW_EMPLOYEE_FORM_LANG') : 0;\n        $this->fields_form = array();\n        $helper->id = (int)Tools::getValue('id_carrier');\n        $helper->identifier = $this->identifier;\n        $helper->submit_action = 'submitDashConfig';\n        $helper->tpl_vars = array(\n            'fields_value' => $this->getConfigFieldsValues(),\n            'languages' => $this->context->controller->getLanguages(),\n            'id_language' => $this->context->language->id\n        );\n\n        return $helper->generateForm(array($fields_form));\n    }\n\n    public function getConfigFieldsValues()\n    {\n        return array(\n            'DASHPRODUCT_NBR_SHOW_LAST_ORDER' => Configuration::get('DASHPRODUCT_NBR_SHOW_LAST_ORDER'),\n            'DASHPRODUCT_NBR_SHOW_BEST_SELLER' => Configuration::get('DASHPRODUCT_NBR_SHOW_BEST_SELLER'),\n            'DASHPRODUCT_NBR_SHOW_MOST_VIEWED' => Configuration::get('DASHPRODUCT_NBR_SHOW_MOST_VIEWED'),\n            'DASHPRODUCT_NBR_SHOW_TOP_SEARCH' => Configuration::get('DASHPRODUCT_NBR_SHOW_TOP_SEARCH'),\n        );\n    }\n\n    public function hookActionObjectOrderAddAfter($params)\n    {\n        Tools::changeFileMTime($this->push_filename);\n    }\n\n    public function hookActionSearch($params)\n    {\n        Tools::changeFileMTime($this->push_filename);\n    }\n}\n", "{*\n* 2007-2018 PrestaShop\n*\n* NOTICE OF LICENSE\n*\n* This source file is subject to the Academic Free License (AFL 3.0)\n* that is bundled with this package in the file LICENSE.txt.\n* It is also available through the world-wide-web at this URL:\n* http://opensource.org/licenses/afl-3.0.php\n* If you did not receive a copy of the license and are unable to\n* obtain it through the world-wide-web, please send an email\n* to license@prestashop.com so we can send you a copy immediately.\n*\n* DISCLAIMER\n*\n* Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n* versions in the future. If you wish to customize PrestaShop for your\n* needs please refer to http://www.prestashop.com for more information.\n*\n*  @author PrestaShop SA <contact@prestashop.com>\n*  @copyright  2007-2018 PrestaShop SA\n*  @license    http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)\n*  International Registered Trademark & Property of PrestaShop SA\n*}\n\n<section id=\"dashproducts\" class=\"panel widget {if $allow_push} allow_push{/if}\">\n\t<header class=\"panel-heading\">\n\t\t<i class=\"icon-bar-chart\"></i> {l s='Products and Sales' d='Modules.Dashproducts.Admin'}\n\t\t<span class=\"panel-heading-action\">\n\t\t\t<a class=\"list-toolbar-btn\" href=\"#\" onclick=\"toggleDashConfig('dashproducts'); return false;\" title=\"{l s='Configure' d='Admin.Actions'}\">\n\t\t\t\t<i class=\"process-icon-configure\"></i>\n\t\t\t</a>\n\t\t\t<a class=\"list-toolbar-btn\" href=\"#\"  onclick=\"refreshDashboard('dashproducts'); return false;\"  title=\"{l s='Refresh' d='Admin.Actions'}\">\n\t\t\t\t<i class=\"process-icon-refresh\"></i>\n\t\t\t</a>\n\t\t</span>\n\t</header>\n\n\t<section id=\"dashproducts_config\" class=\"dash_config hide\">\n\t\t<header><i class=\"icon-wrench\"></i> {l s='Configuration' d='Admin.Global'}</header>\n\t\t{$dashproducts_config_form}\n\t</section>\n\n\t<section>\n\t\t<nav>\n\t\t\t<ul class=\"nav nav-pills\">\n\t\t\t\t<li class=\"active\">\n\t\t\t\t\t<a href=\"#dash_recent_orders\" data-toggle=\"tab\">\n\t\t\t\t\t\t<i class=\"icon-fire\"></i>\n\t\t\t\t\t\t<span class=\"hidden-inline-xs\">{l s='Recent Orders' d='Modules.Dashproducts.Admin'}</span>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"#dash_best_sellers\" data-toggle=\"tab\">\n\t\t\t\t\t\t<i class=\"icon-trophy\"></i>\n\t\t\t\t\t\t<span class=\"hidden-inline-xs\">{l s='Best Sellers' d='Modules.Dashproducts.Admin'}</span>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"#dash_most_viewed\" data-toggle=\"tab\">\n\t\t\t\t\t\t<i class=\"icon-eye-open\"></i>\n\t\t\t\t\t\t<span class=\"hidden-inline-xs\">{l s='Most Viewed' d='Modules.Dashproducts.Admin'}</span>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"#dash_top_search\" data-toggle=\"tab\">\n\t\t\t\t\t\t<i class=\"icon-search\"></i>\n\t\t\t\t\t\t<span class=\"hidden-inline-xs\">{l s='Top Searches' d='Modules.Dashproducts.Admin'}</span>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\n\t\t<div class=\"tab-content panel\">\n\t\t\t<div class=\"tab-pane active\" id=\"dash_recent_orders\">\n\t\t\t\t<h3>{l s='Last %d orders' sprintf=$DASHPRODUCT_NBR_SHOW_LAST_ORDER|intval d='Modules.Dashproducts.Admin'}</h3>\n\t\t\t\t<div class=\"table-responsive\">\n\t\t\t\t\t<table class=\"table data_table\" id=\"table_recent_orders\">\n\t\t\t\t\t\t<thead></thead>\n\t\t\t\t\t\t<tbody></tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"tab-pane\" id=\"dash_best_sellers\">\n\t\t\t\t<h3>\n\t\t\t\t\t{l s='Top %d products' sprintf=$DASHPRODUCT_NBR_SHOW_BEST_SELLER|intval d='Modules.Dashproducts.Admin'}\n\t\t\t\t\t<span>{l s=\"From\" d='Modules.Dashproducts.Admin'} {$date_from|escape:'htmlall':'UTF-8'} {l s=\"to\" d='Modules.Dashproducts.Admin'} {$date_to|escape:'htmlall':'UTF-8'}</span>\n\t\t\t\t</h3>\n\t\t\t\t<div class=\"table-responsive\">\n\t\t\t\t\t<table class=\"table data_table\" id=\"table_best_sellers\">\n\t\t\t\t\t\t<thead></thead>\n\t\t\t\t\t\t<tbody></tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"tab-pane\" id=\"dash_most_viewed\">\n\t\t\t\t<h3>\n\t\t\t\t\t{l s=\"Most Viewed\" d='Modules.Dashproducts.Admin'}\n\t\t\t\t\t<span>{l s=\"From\" d='Modules.Dashproducts.Admin'} {$date_from|escape:'htmlall':'UTF-8'} {l s=\"to\" d='Modules.Dashproducts.Admin'} {$date_to|escape:'htmlall':'UTF-8'}</span>\n\t\t\t\t</h3>\n\t\t\t\t<div class=\"table-responsive\">\n\t\t\t\t\t<table class=\"table data_table\" id=\"table_most_viewed\">\n\t\t\t\t\t\t<thead></thead>\n\t\t\t\t\t\t<tbody></tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"tab-pane\" id=\"dash_top_search\">\n\t\t\t\t<h3>\n\t\t\t\t\t{l s='Top %d most search terms' sprintf=$DASHPRODUCT_NBR_SHOW_TOP_SEARCH|intval d='Modules.Dashproducts.Admin'}\n\t\t\t\t\t<span>{l s=\"From\" d='Modules.Dashproducts.Admin'} {$date_from|escape:'htmlall':'UTF-8'} {l s=\"to\" d='Modules.Dashproducts.Admin'} {$date_to|escape:'htmlall':'UTF-8'}</span>\n\t\t\t\t</h3>\n\t\t\t\t<div class=\"table-responsive\">\n\t\t\t\t\t<table class=\"table data_table\" id=\"table_top_10_most_search\">\n\t\t\t\t\t\t<thead></thead>\n\t\t\t\t\t\t<tbody></tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t</section>\n</section>\n"], "fixing_code": ["<?php\n/**\n * 2007-2018 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License (AFL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/afl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n *  @author PrestaShop SA <contact@prestashop.com>\n *  @copyright  2007-2018 PrestaShop SA\n *  @license    http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)\n *  International Registered Trademark & Property of PrestaShop SA\n */\n\nif (!defined('_PS_VERSION_')) {\n    exit;\n}\n\nclass dashproducts extends Module\n{\n    public function __construct()\n    {\n        $this->name = 'dashproducts';\n        $this->tab = 'dashboard';\n        $this->version = '2.0.4';\n        $this->author = 'PrestaShop';\n\n        $this->push_filename = _PS_CACHE_DIR_.'push/activity';\n        $this->allow_push = true;\n\n        parent::__construct();\n        $this->displayName = $this->trans('Dashboard Products', array(), 'Modules.Dashproducts.Admin');\n        $this->description = $this->trans('Adds a block with a table of your latest orders and a ranking of your products', array(), 'Modules.Dashproducts.Admin');\n        $this->ps_versions_compliancy = array('min' => '1.7.1.0', 'max' => _PS_VERSION_);\n    }\n\n    public function install()\n    {\n        Configuration::updateValue('DASHPRODUCT_NBR_SHOW_LAST_ORDER', 10);\n        Configuration::updateValue('DASHPRODUCT_NBR_SHOW_BEST_SELLER', 10);\n        Configuration::updateValue('DASHPRODUCT_NBR_SHOW_MOST_VIEWED', 10);\n        Configuration::updateValue('DASHPRODUCT_NBR_SHOW_TOP_SEARCH', 10);\n\n        return (parent::install()\n            && $this->registerHook('dashboardZoneTwo')\n            && $this->registerHook('dashboardData')\n            && $this->registerHook('actionObjectOrderAddAfter')\n            && $this->registerHook('actionSearch')\n        );\n    }\n\n    public function hookDashboardZoneTwo($params)\n    {\n        $this->context->smarty->assign(\n            array(\n                'DASHACTIVITY_CART_ACTIVE' => Configuration::get('DASHACTIVITY_CART_ACTIVE'),\n                'DASHACTIVITY_VISITOR_ONLINE' => Configuration::get('DASHACTIVITY_VISITOR_ONLINE'),\n                'DASHPRODUCT_NBR_SHOW_LAST_ORDER' => Configuration::get('DASHPRODUCT_NBR_SHOW_LAST_ORDER'),\n                'DASHPRODUCT_NBR_SHOW_BEST_SELLER' => Configuration::get('DASHPRODUCT_NBR_SHOW_BEST_SELLER'),\n                'DASHPRODUCT_NBR_SHOW_TOP_SEARCH' => Configuration::get('DASHPRODUCT_NBR_SHOW_TOP_SEARCH'),\n                'date_from' => Tools::displayDate($params['date_from']),\n                'date_to' => Tools::displayDate($params['date_to']),\n                'dashproducts_config_form' => $this->getPermission('configure') ? $this->renderConfigForm() : null,\n            )\n        );\n\n        return $this->display(__FILE__, 'dashboard_zone_two.tpl');\n    }\n\n    public function hookDashboardData($params)\n    {\n        $table_recent_orders = $this->getTableRecentOrders();\n        $table_best_sellers = $this->getTableBestSellers($params['date_from'], $params['date_to']);\n        $table_most_viewed = $this->getTableMostViewed($params['date_from'], $params['date_to']);\n        $table_top_10_most_search = $this->getTableTop10MostSearch($params['date_from'], $params['date_to']);\n\n        //$table_top_5_search = $this->getTableTop5Search();\n        return array(\n            'data_table' => array(\n                'table_recent_orders' => $table_recent_orders,\n                'table_best_sellers' => $table_best_sellers,\n                'table_most_viewed' => $table_most_viewed,\n                'table_top_10_most_search' => $table_top_10_most_search,\n                //'table_top_5_search' => $table_top_5_search\n            )\n        );\n    }\n\n    public function getTableRecentOrders()\n    {\n        $header = array(\n            array('title' => $this->trans('Customer Name', array(), 'Modules.Dashproducts.Admin'), 'class' => 'text-left'),\n            array('title' => $this->trans('Products', array(), 'Admin.Global'), 'class' => 'text-center'),\n            array('title' => $this->trans('Total', array(), 'Admin.Global').' '.$this->trans('Tax excl.', array(), 'Admin.Global'), 'class' => 'text-center'),\n            array('title' => $this->trans('Date', array(), 'Admin.Global'), 'class' => 'text-center'),\n            array('title' => $this->trans('Status', array(), 'Admin.Global'), 'class' => 'text-center'),\n            array('title' => '', 'class' => 'text-right'),\n        );\n\n        $limit = (int)Configuration::get('DASHPRODUCT_NBR_SHOW_LAST_ORDER') ? (int)Configuration::get('DASHPRODUCT_NBR_SHOW_LAST_ORDER') : 10;\n        $orders = Order::getOrdersWithInformations($limit);\n\n        $body = array();\n        foreach ($orders as $order) {\n            $currency = Currency::getCurrency((int)$order['id_currency']);\n            $tr = array();\n            $customerLinkParams = ['route' => 'admin_customers_view', 'customerId' => $order['id_customer']];\n            $tr[] = array(\n                'id' => 'firstname_lastname',\n                'value' => '<a href=\"'.$this->context->link->getAdminLink('AdminCustomers', true, $customerLinkParams) .'\">'.Tools::htmlentitiesUTF8($order['firstname']).' '.Tools::htmlentitiesUTF8($order['lastname']).'</a>',\n                'class' => 'text-left',\n            );\n            $tr[] = array(\n                'id' => 'total_products',\n                'value' => count(OrderDetail::getList((int)$order['id_order'])),\n                'class' => 'text-center',\n            );\n            $tr[] = array(\n                'id' => 'total_paid',\n                'value' => Tools::displayPrice((float)$order['total_paid_tax_excl'], $currency),\n                'class' => 'text-center',\n                'wrapper_start' => $order['valid'] ? '<span class=\"badge badge-success\">' : '',\n                'wrapper_end' => '<span>',\n            );\n            $tr[] = array(\n                'id' => 'date_add',\n                'value' => Tools::displayDate($order['date_add']),\n                'class' => 'text-center',\n            );\n            $tr[] = array(\n                'id' => 'status',\n                'value' => Tools::htmlentitiesUTF8($order['state_name']),\n                'class' => 'text-center',\n            );\n            $tr[] = array(\n                'id' => 'details',\n                'value' => '',\n                'class' => 'text-right',\n                'wrapper_start' => '<a class=\"btn btn-default\" href=\"index.php?tab=AdminOrders&id_order='.(int)$order['id_order'].'&vieworder&token='.Tools::getAdminTokenLite('AdminOrders').'\" title=\"'.$this->trans('Details', array(), 'Modules.Dashproducts.Admin').'\"><i class=\"icon-search\"></i>',\n                'wrapper_end' => '</a>'\n            );\n\n            $body[] = $tr;\n        }\n\n        return array('header' => $header, 'body' => $body);\n    }\n\n    public function getTableBestSellers($date_from, $date_to)\n    {\n        $header = array(\n            array(\n                'id' => 'image',\n                'title' => $this->trans('Image', array(), 'Admin.Global'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'product',\n                'title' => $this->trans('Product', array(), 'Admin.Global'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'category',\n                'title' => $this->trans('Category', array(), 'Admin.Catalog.Feature'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'total_sold',\n                'title' => $this->trans('Total sold', array(), 'Modules.Dashproducts.Admin'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'sales',\n                'title' => $this->trans('Sales', array(), 'Admin.Global'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'net_profit',\n                'title' => $this->trans('Net profit', array(), 'Modules.Dashproducts.Admin'),\n                'class' => 'text-center',\n            )\n        );\n\n        $products = Db::getInstance()->ExecuteS(\n            '\n\t\t\t\t\tSELECT\n\t\t\t\t\t\tproduct_id,\n\t\t\t\t\t\tproduct_name,\n\t\t\t\t\t\tSUM(product_quantity-product_quantity_refunded-product_quantity_return-product_quantity_reinjected) as total,\n\t\t\t\t\t\tp.price as price,\n\t\t\t\t\t\tpa.price as price_attribute,\n\t\t\t\t\t\tSUM(total_price_tax_excl / conversion_rate) as sales,\n\t\t\t\t\t\tSUM(product_quantity * purchase_supplier_price / conversion_rate) as expenses\n\t\t\t\t\tFROM `'._DB_PREFIX_.'orders` o\n\t\tLEFT JOIN `'._DB_PREFIX_.'order_detail` od ON o.id_order = od.id_order\n\t\tLEFT JOIN `'._DB_PREFIX_.'product` p ON p.id_product = product_id\n\t\tLEFT JOIN `'._DB_PREFIX_.'product_attribute` pa ON pa.id_product_attribute = od.product_attribute_id\n\t\tWHERE `invoice_date` BETWEEN \"' . pSQL($date_from) . ' 00:00:00\" AND \"' . pSQL($date_to) . ' 23:59:59\"\n\t\tAND valid = 1\n\t\t' . Shop::addSqlRestriction(false, 'o') . '\n\t\tGROUP BY product_id, product_attribute_id\n\t\tORDER BY total DESC\n\t\tLIMIT ' . (int)Configuration::get('DASHPRODUCT_NBR_SHOW_BEST_SELLER')\n        );\n\n        $body = array();\n        foreach ($products as $product) {\n            $product_obj = new Product((int)$product['product_id'], false, $this->context->language->id);\n            if (!Validate::isLoadedObject($product_obj)) {\n                continue;\n            }\n            $category = new Category($product_obj->getDefaultCategory(), $this->context->language->id);\n\n            $img = '';\n            if (($row_image = Product::getCover($product_obj->id)) && $row_image['id_image']) {\n                $image = new Image($row_image['id_image']);\n                $path_to_image = _PS_PROD_IMG_DIR_.$image->getExistingImgPath().'.'.$this->context->controller->imageType;\n                $img = ImageManager::thumbnail($path_to_image, 'product_mini_'.$row_image['id_image'].'.'.$this->context->controller->imageType, 45, $this->context->controller->imageType);\n            }\n\n            $productPrice = $product['price'];\n            if (isset($product['price_attribute']) && $product['price_attribute'] != '0.000000') {\n                $productPrice = $product['price_attribute'];\n            }\n\n            $body[] = array(\n                array(\n                    'id' => 'product',\n                    'value' => $img,\n                    'class' => 'text-center'\n                ),\n                array(\n                    'id' => 'product',\n                    'value' => '<a href=\"'.$this->context->link->getAdminLink('AdminProducts', true, ['id_product' => $product_obj->id, 'updateproduct' => 1]).'\">'.Tools::htmlentitiesUTF8($product['product_name']).'</a>'.'<br/>'.Tools::displayPrice($productPrice),\n                    'class' => 'text-center'\n                ),\n                array(\n                    'id' => 'category',\n                    'value' => $category->name,\n                    'class' => 'text-center'\n                ),\n                array(\n                    'id' => 'total_sold',\n                    'value' => $product['total'],\n                    'class' => 'text-center'\n                ),\n                array(\n                    'id' => 'sales',\n                    'value' => Tools::displayPrice($product['sales']),\n                    'class' => 'text-center'\n                ),\n                array(\n                    'id' => 'net_profit',\n                    'value' => Tools::displayPrice($product['sales'] - $product['expenses']),\n                    'class' => 'text-center'\n                )\n            );\n        }\n\n        return array('header' => $header, 'body' => $body);\n    }\n\n    public function getTableMostViewed($date_from, $date_to)\n    {\n        $header = array(\n            array(\n                'id' => 'image',\n                'title' => $this->trans('Image', array(), 'Admin.Global'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'product',\n                'title' => $this->trans('Product', array(), 'Admin.Global'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'views',\n                'title' => $this->trans('Views', array(), 'Modules.Dashproducts.Admin'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'added_to_cart',\n                'title' => $this->trans('Added to cart', array(), 'Modules.Dashproducts.Admin'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'purchased',\n                'title' => $this->trans('Purchased', array(), 'Modules.Dashproducts.Admin'),\n                'class' => 'text-center',\n            ),\n            array(\n                'id' => 'rate',\n                'title' => $this->trans('Percentage', array(), 'Admin.Global'),\n                'class' => 'text-center',\n            )\n        );\n\n        if (Configuration::get('PS_STATSDATA_PAGESVIEWS')) {\n            $products = $this->getTotalViewed($date_from, $date_to, (int)Configuration::get('DASHPRODUCT_NBR_SHOW_MOST_VIEWED'));\n            $body = array();\n            if (is_array($products) && count($products)) {\n                foreach ($products as $product) {\n                    $product_obj = new Product((int)$product['id_object'], true, $this->context->language->id);\n                    if (!Validate::isLoadedObject($product_obj)) {\n                        continue;\n                    }\n\n                    $img = '';\n                    if (($row_image = Product::getCover($product_obj->id)) && $row_image['id_image']) {\n                        $image = new Image($row_image['id_image']);\n                        $path_to_image = _PS_PROD_IMG_DIR_.$image->getExistingImgPath().'.'.$this->context->controller->imageType;\n                        $img = ImageManager::thumbnail(\n                            $path_to_image,\n                            'product_mini_'.$product_obj->id.'.'.$this->context->controller->imageType,\n                            45,\n                            $this->context->controller->imageType\n                        );\n                    }\n\n                    $tr = array();\n                    $tr[] = array(\n                        'id' => 'product',\n                        'value' => $img,\n                        'class' => 'text-center'\n                    );\n                    $tr[] = array(\n                        'id' => 'product',\n                        'value' => Tools::htmlentitiesUTF8($product_obj->name).'<br/>'.Tools::displayPrice(Product::getPriceStatic((int)$product_obj->id)),\n                        'class' => 'text-center',\n                    );\n                    $tr[] = array(\n                        'id' => 'views',\n                        'value' => $product['counter'],\n                        'class' => 'text-center',\n                    );\n                    $added_cart = $this->getTotalProductAddedCart($date_from, $date_to, (int)$product_obj->id);\n                    $tr[] = array(\n                        'id' => 'added_to_cart',\n                        'value' => $added_cart,\n                        'class' => 'text-center',\n                    );\n                    $purchased = $this->getTotalProductPurchased($date_from, $date_to, (int)$product_obj->id);\n                    $tr[] = array(\n                        'id' => 'purchased',\n                        'value' => $this->getTotalProductPurchased($date_from, $date_to, (int)$product_obj->id),\n                        'class' => 'text-center',\n                    );\n                    $tr[] = array(\n                        'id' => 'rate',\n                        'value' => ($product['counter'] ? round(100 * $purchased / $product['counter'], 1).'%' : '-'),\n                        'class' => 'text-center',\n                    );\n                    $body[] = $tr;\n                }\n            }\n        } else {\n            $body = '<div class=\"alert alert-info\">'.$this->trans('You must enable the \"Save global page views\" option from the \"Data mining for statistics\" module in order to display the most viewed products, or use the Google Analytics module.', array(), 'Modules.Dashproducts.Admin').'</div>';\n        }\n        return array('header' => $header, 'body' => $body);\n    }\n\n    public function getTableTop10MostSearch($date_from, $date_to)\n    {\n        $header = array(\n            array(\n                'id' => 'reference',\n                'title' => $this->trans('Term', array(), 'Modules.Dashproducts.Admin'),\n                'class' => 'text-left'\n            ),\n            array(\n                'id' => 'name',\n                'title' => $this->trans('Search', array(), 'Admin.Shopparameters.Feature'),\n                'class' => 'text-center'\n            ),\n            array(\n                'id' => 'totalQuantitySold',\n                'title' => $this->trans('Results', array(), 'Modules.Dashproducts.Admin'),\n                'class' => 'text-center'\n            )\n        );\n\n        $terms = $this->getMostSearchTerms($date_from, $date_to, (int)Configuration::get('DASHPRODUCT_NBR_SHOW_TOP_SEARCH'));\n        $body = array();\n        if (is_array($terms) && count($terms)) {\n            foreach ($terms as $term) {\n                $tr = array();\n                $tr[] = array(\n                    'id' => 'product',\n                    'value' => $term['keywords'],\n                    'class' => 'text-left',\n                );\n                $tr[] = array(\n                    'id' => 'product',\n                    'value' => $term['count_keywords'],\n                    'class' => 'text-center',\n                );\n                $tr[] = array(\n                    'id' => 'product',\n                    'value' => $term['results'],\n                    'class' => 'text-center',\n                );\n                $body[] = $tr;\n            }\n        }\n\n        return array('header' => $header, 'body' => $body);\n    }\n\n    public function getTableTop5Search()\n    {\n        $header = array(\n            array(\n                'id' => 'reference',\n                'title' => $this->trans('Product', array(), 'Admin.Global'),\n            )\n        );\n\n        $body = array();\n\n        return array('header' => $header, 'body' => $body);\n    }\n\n    public function getTotalProductSales($date_from, $date_to, $id_product)\n    {\n        $sql = 'SELECT SUM(od.`product_quantity` * od.`product_price`) AS total\n\t\t\t\tFROM `'._DB_PREFIX_.'order_detail` od\n\t\t\t\tJOIN `'._DB_PREFIX_.'orders` o ON o.`id_order` = od.`id_order`\n\t\t\t\tWHERE od.`product_id` = '.(int)$id_product.'\n\t\t\t\t\t'.Shop::addSqlRestriction(Shop::SHARE_ORDER, 'o').'\n\t\t\t\t\tAND o.valid = 1\n\t\t\t\t\tAND o.`date_add` BETWEEN \"'.pSQL($date_from).'\" AND \"'.pSQL($date_to).'\"';\n\n        return (int)Db::getInstance(_PS_USE_SQL_SLAVE_)->getValue($sql);\n    }\n\n    public function getTotalProductAddedCart($date_from, $date_to, $id_product)\n    {\n        return Db::getInstance(_PS_USE_SQL_SLAVE_)->getValue('\n\t\tSELECT count(`id_product`) as count\n\t\tFROM `'._DB_PREFIX_.'cart_product` cp\n\t\tWHERE cp.`id_product` = '.(int)$id_product.'\n\t\t'.Shop::addSqlRestriction(false, 'cp').'\n\t\tAND cp.`date_add` BETWEEN \"'.pSQL($date_from).'\" AND \"'.pSQL($date_to).'\"');\n    }\n\n    public function getTotalProductPurchased($date_from, $date_to, $id_product)\n    {\n        return Db::getInstance(_PS_USE_SQL_SLAVE_)->getValue('\n\t\tSELECT count(`product_id`) as count\n\t\tFROM `'._DB_PREFIX_.'order_detail` od\n\t\tJOIN `'._DB_PREFIX_.'orders` o ON o.`id_order` = od.`id_order`\n\t\tWHERE od.`product_id` = '.(int)$id_product.'\n\t\t'.Shop::addSqlRestriction(false, 'od').'\n\t\tAND o.valid = 1\n\t\tAND o.`date_add` BETWEEN \"'.pSQL($date_from).'\" AND \"'.pSQL($date_to).'\"');\n    }\n\n    public function getTotalViewed($date_from, $date_to, $limit = 10)\n    {\n        $gapi = Module::isInstalled('gapi') ? Module::getInstanceByName('gapi') : false;\n        if (Validate::isLoadedObject($gapi) && $gapi->isConfigured()) {\n            $products = array();\n            // Only works with the default product URL pattern at this time\n            $result = $gapi->requestReportData(\n                'ga:pagePath',\n                'ga:visits',\n                $date_from,\n                $date_to,\n                '-ga:visits',\n                'ga:pagePath=~/([a-z]{2}/)?([a-z]+/)?[0-9][0-9]*\\-.*\\.html$',\n                1,\n                10\n            );\n\n\n            if ($result) {\n                foreach ($result as $row) {\n                    if (preg_match('@/([a-z]{2}/)?([a-z]+/)?([0-9]+)\\-.*\\.html$@', $row['dimensions']['pagePath'], $matches)) {\n                        $products[] = array('id_object' => (int)$matches[3], 'counter' => $row['metrics']['visits']);\n                    }\n                }\n            }\n\n            return $products;\n        } else {\n            return Db::getInstance(_PS_USE_SQL_SLAVE_)->executeS('\n\t\t\tSELECT p.id_object, pv.counter\n\t\t\tFROM `'._DB_PREFIX_.'page_viewed` pv\n\t\t\tLEFT JOIN `'._DB_PREFIX_.'date_range` dr ON pv.`id_date_range` = dr.`id_date_range`\n\t\t\tLEFT JOIN `'._DB_PREFIX_.'page` p ON pv.`id_page` = p.`id_page`\n\t\t\tLEFT JOIN `'._DB_PREFIX_.'page_type` pt ON pt.`id_page_type` = p.`id_page_type`\n\t\t\tWHERE pt.`name` = \\'product\\'\n\t\t\t'.Shop::addSqlRestriction(false, 'pv').'\n\t\t\tAND dr.`time_start` BETWEEN \"'.pSQL($date_from).'\" AND \"'.pSQL($date_to).'\"\n\t\t\tAND dr.`time_end` BETWEEN \"'.pSQL($date_from).'\" AND \"'.pSQL($date_to).'\"\n\t\t\tORDER BY pv.counter DESC\n\t\t\tLIMIT '.(int)$limit);\n        }\n    }\n\n    public function getMostSearchTerms($date_from, $date_to, $limit = 10)\n    {\n        if (!Module::isInstalled('statssearch')) {\n            return array();\n        }\n\n        return Db::getInstance(_PS_USE_SQL_SLAVE_)->executeS('\n\t\tSELECT `keywords`, count(`id_statssearch`) as count_keywords, `results`\n\t\tFROM `'._DB_PREFIX_.'statssearch` ss\n\t\tWHERE ss.`date_add` BETWEEN \"'.pSQL($date_from).'\" AND \"'.pSQL($date_to).'\"\n\t\t'.Shop::addSqlRestriction(false, 'ss').'\n\t\tGROUP BY ss.`keywords`\n\t\tORDER BY `count_keywords` DESC\n\t\tLIMIT '.(int)$limit);\n    }\n\n    public function renderConfigForm()\n    {\n        $fields_form = array(\n            'form' => array(\n                'input' => array(),\n                'submit' => array(\n                    'title' => $this->trans('Save', array(), 'Admin.Actions'),\n                    'class' => 'btn btn-default pull-right submit_dash_config',\n                    'reset' => array(\n                        'title' => $this->trans('Cancel', array(), 'Admin.Actions'),\n                        'class' => 'btn btn-default cancel_dash_config',\n                    )\n                )\n            ),\n        );\n\n        $inputs = array(\n            array(\n                'label' => $this->trans('Number of \"Recent Orders\" to display', array(), 'Modules.Dashproducts.Admin'),\n                'config_name' => 'DASHPRODUCT_NBR_SHOW_LAST_ORDER'\n            ),\n            array(\n                'label' => $this->trans('Number of \"Best Sellers\" to display', array(), 'Modules.Dashproducts.Admin'),\n                'config_name' => 'DASHPRODUCT_NBR_SHOW_BEST_SELLER'\n            ),\n            array(\n                'label' => $this->trans('Number of \"Most Viewed\" to display', array(), 'Modules.Dashproducts.Admin'),\n                'config_name' => 'DASHPRODUCT_NBR_SHOW_MOST_VIEWED'\n            ),\n            array(\n                'label' => $this->trans('Number of \"Top Searches\" to display', array(), 'Modules.Dashproducts.Admin'),\n                'config_name' => 'DASHPRODUCT_NBR_SHOW_TOP_SEARCH'\n            ),\n        );\n\n        foreach ($inputs as $input) {\n            $fields_form['form']['input'][] = array(\n                'type' => 'select',\n                'label' => $input['label'],\n                'name' => $input['config_name'],\n                'options' => array(\n                    'query' => array(\n                        array('id' => 5, 'name' => 5),\n                        array('id' => 10, 'name' => 10),\n                        array('id' => 20, 'name' => 20),\n                        array('id' => 50, 'name' => 50),\n                    ),\n                    'id' => 'id',\n                    'name' => 'name',\n                )\n            );\n        }\n\n        $helper = new HelperForm();\n        $helper->show_toolbar = false;\n        $helper->table = $this->table;\n        $lang = new Language((int)Configuration::get('PS_LANG_DEFAULT'));\n        $helper->default_form_language = $lang->id;\n        $helper->allow_employee_form_lang = Configuration::get('PS_BO_ALLOW_EMPLOYEE_FORM_LANG') ? Configuration::get('PS_BO_ALLOW_EMPLOYEE_FORM_LANG') : 0;\n        $this->fields_form = array();\n        $helper->id = (int)Tools::getValue('id_carrier');\n        $helper->identifier = $this->identifier;\n        $helper->submit_action = 'submitDashConfig';\n        $helper->tpl_vars = array(\n            'fields_value' => $this->getConfigFieldsValues(),\n            'languages' => $this->context->controller->getLanguages(),\n            'id_language' => $this->context->language->id\n        );\n\n        return $helper->generateForm(array($fields_form));\n    }\n\n    public function getConfigFieldsValues()\n    {\n        return array(\n            'DASHPRODUCT_NBR_SHOW_LAST_ORDER' => Configuration::get('DASHPRODUCT_NBR_SHOW_LAST_ORDER'),\n            'DASHPRODUCT_NBR_SHOW_BEST_SELLER' => Configuration::get('DASHPRODUCT_NBR_SHOW_BEST_SELLER'),\n            'DASHPRODUCT_NBR_SHOW_MOST_VIEWED' => Configuration::get('DASHPRODUCT_NBR_SHOW_MOST_VIEWED'),\n            'DASHPRODUCT_NBR_SHOW_TOP_SEARCH' => Configuration::get('DASHPRODUCT_NBR_SHOW_TOP_SEARCH'),\n        );\n    }\n\n    public function hookActionObjectOrderAddAfter($params)\n    {\n        Tools::changeFileMTime($this->push_filename);\n    }\n\n    public function hookActionSearch($params)\n    {\n        Tools::changeFileMTime($this->push_filename);\n    }\n\n    /**\n     * Validate dashboard configuration\n     *\n     * @param array $config\n     *\n     * @return array\n     */\n    public function validateDashConfig(array $config)\n    {\n        $errors = [];\n        $possibleValues = [5, 10, 20, 50];\n        foreach (array_keys($this->getConfigFieldsValues()) as $fieldName) {\n            if (!isset($config[$fieldName]) || !in_array($config[$fieldName], $possibleValues)) {\n                $errors[$fieldName] = $this->trans('The %s field is invalid.', [$fieldName], 'Modules.Dashproducts.Admin');\n            }\n        }\n\n        return $errors;\n    }\n\n    /**\n     * Save dashboard configuration\n     *\n     * @param array $config\n     *\n     * @return bool determines if there are errors or not\n     */\n    public function saveDashConfig(array $config)\n    {\n        if (!$this->getPermission('configure')) {\n            return true;\n        }\n\n        foreach (array_keys($this->getConfigFieldsValues()) as $fieldName) {\n            Configuration::updateValue($fieldName, (int) $config[$fieldName]);\n        }\n\n        return false;\n    }\n}\n", "{*\n  * 2007-2018 PrestaShop\n  *\n  * NOTICE OF LICENSE\n  *\n  * This source file is subject to the Academic Free License (AFL 3.0)\n  * that is bundled with this package in the file LICENSE.txt.\n  * It is also available through the world-wide-web at this URL:\n  * http://opensource.org/licenses/afl-3.0.php\n  * If you did not receive a copy of the license and are unable to\n  * obtain it through the world-wide-web, please send an email\n  * to license@prestashop.com so we can send you a copy immediately.\n  *\n  * DISCLAIMER\n  *\n  * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n  * versions in the future. If you wish to customize PrestaShop for your\n  * needs please refer to http://www.prestashop.com for more information.\n  *\n  *  @author PrestaShop SA <contact@prestashop.com>\n  *  @copyright  2007-2018 PrestaShop SA\n  *  @license    http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)\n  *  International Registered Trademark & Property of PrestaShop SA\n  *}\n\n<section id=\"dashproducts\" class=\"panel widget {if $allow_push} allow_push{/if}\">\n  <header class=\"panel-heading\">\n    <i class=\"icon-bar-chart\"></i> {l s='Products and Sales' d='Modules.Dashproducts.Admin'}\n    <span class=\"panel-heading-action\">\n      {if !empty($dashproducts_config_form)}\n        <a class=\"list-toolbar-btn\" href=\"#\" onclick=\"toggleDashConfig('dashproducts'); return false;\" title=\"{l s='Configure' d='Admin.Actions'}\">\n          <i class=\"process-icon-configure\"></i>\n        </a>\n      {/if}\n      <a class=\"list-toolbar-btn\" href=\"#\"  onclick=\"refreshDashboard('dashproducts'); return false;\"  title=\"{l s='Refresh' d='Admin.Actions'}\">\n        <i class=\"process-icon-refresh\"></i>\n      </a>\n    </span>\n  </header>\n\n  {if !empty($dashproducts_config_form)}\n    <section id=\"dashproducts_config\" class=\"dash_config hide\">\n      <header><i class=\"icon-wrench\"></i> {l s='Configuration' d='Admin.Global'}</header>\n      {$dashproducts_config_form}\n    </section>\n  {/if}\n\n  <section>\n    <nav>\n      <ul class=\"nav nav-pills\">\n        <li class=\"active\">\n          <a href=\"#dash_recent_orders\" data-toggle=\"tab\">\n            <i class=\"icon-fire\"></i>\n            <span class=\"hidden-inline-xs\">{l s='Recent Orders' d='Modules.Dashproducts.Admin'}</span>\n          </a>\n        </li>\n        <li>\n          <a href=\"#dash_best_sellers\" data-toggle=\"tab\">\n            <i class=\"icon-trophy\"></i>\n            <span class=\"hidden-inline-xs\">{l s='Best Sellers' d='Modules.Dashproducts.Admin'}</span>\n          </a>\n        </li>\n        <li>\n          <a href=\"#dash_most_viewed\" data-toggle=\"tab\">\n            <i class=\"icon-eye-open\"></i>\n            <span class=\"hidden-inline-xs\">{l s='Most Viewed' d='Modules.Dashproducts.Admin'}</span>\n          </a>\n        </li>\n        <li>\n          <a href=\"#dash_top_search\" data-toggle=\"tab\">\n            <i class=\"icon-search\"></i>\n            <span class=\"hidden-inline-xs\">{l s='Top Searches' d='Modules.Dashproducts.Admin'}</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n\n    <div class=\"tab-content panel\">\n      <div class=\"tab-pane active\" id=\"dash_recent_orders\">\n        <h3>{l s='Last %d orders' sprintf=$DASHPRODUCT_NBR_SHOW_LAST_ORDER|intval d='Modules.Dashproducts.Admin'}</h3>\n        <div class=\"table-responsive\">\n          <table class=\"table data_table\" id=\"table_recent_orders\">\n            <thead></thead>\n            <tbody></tbody>\n          </table>\n        </div>\n      </div>\n      <div class=\"tab-pane\" id=\"dash_best_sellers\">\n        <h3>\n          {l s='Top %d products' sprintf=$DASHPRODUCT_NBR_SHOW_BEST_SELLER|intval d='Modules.Dashproducts.Admin'}\n          <span>{l s=\"From\" d='Modules.Dashproducts.Admin'} {$date_from|escape:'htmlall':'UTF-8'} {l s=\"to\" d='Modules.Dashproducts.Admin'} {$date_to|escape:'htmlall':'UTF-8'}</span>\n        </h3>\n        <div class=\"table-responsive\">\n          <table class=\"table data_table\" id=\"table_best_sellers\">\n            <thead></thead>\n            <tbody></tbody>\n          </table>\n        </div>\n      </div>\n      <div class=\"tab-pane\" id=\"dash_most_viewed\">\n        <h3>\n          {l s=\"Most Viewed\" d='Modules.Dashproducts.Admin'}\n          <span>{l s=\"From\" d='Modules.Dashproducts.Admin'} {$date_from|escape:'htmlall':'UTF-8'} {l s=\"to\" d='Modules.Dashproducts.Admin'} {$date_to|escape:'htmlall':'UTF-8'}</span>\n        </h3>\n        <div class=\"table-responsive\">\n          <table class=\"table data_table\" id=\"table_most_viewed\">\n            <thead></thead>\n            <tbody></tbody>\n          </table>\n        </div>\n      </div>\n      <div class=\"tab-pane\" id=\"dash_top_search\">\n        <h3>\n          {l s='Top %d most search terms' sprintf=$DASHPRODUCT_NBR_SHOW_TOP_SEARCH|intval d='Modules.Dashproducts.Admin'}\n          <span>{l s=\"From\" d='Modules.Dashproducts.Admin'} {$date_from|escape:'htmlall':'UTF-8'} {l s=\"to\" d='Modules.Dashproducts.Admin'} {$date_to|escape:'htmlall':'UTF-8'}</span>\n        </h3>\n        <div class=\"table-responsive\">\n          <table class=\"table data_table\" id=\"table_top_10_most_search\">\n            <thead></thead>\n            <tbody></tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n  </section>\n</section>\n"], "filenames": ["dashproducts.php", "views/templates/hook/dashboard_zone_two.tpl"], "buggy_code_start_loc": [75, 2], "buggy_code_end_loc": [619, 123], "fixing_code_start_loc": [75, 2], "fixing_code_end_loc": [660, 127], "type": "CWE-862", "message": "In PrestaShop Dashboard Productions before version 2.1.0, there is improper authorization which enables an attacker to change the configuration. The problem is fixed in 2.1.0.", "other": {"cve": {"id": "CVE-2020-15102", "sourceIdentifier": "security-advisories@github.com", "published": "2020-07-21T18:15:19.897", "lastModified": "2021-10-07T17:14:39.450", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In PrestaShop Dashboard Productions before version 2.1.0, there is improper authorization which enables an attacker to change the configuration. The problem is fixed in 2.1.0."}, {"lang": "es", "value": "En PrestaShop Dashboard Productions versiones anteriores a 2.1.0, se presenta una autorizaci\u00f3n inapropiada que permite a un atacante cambiar la configuraci\u00f3n. El problema es corregido en la versi\u00f3n 2.1.0"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-862"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-284"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:prestashop:dashboard_products:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.1.0", "matchCriteriaId": "8005F019-C594-48BD-B95B-401106EBC537"}]}]}], "references": [{"url": "https://github.com/PrestaShop/dashproducts/commit/f0799c13628a9b9ca6ca75c085b083d924a8ea7e", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/PrestaShop/dashproducts/security/advisories/GHSA-6292-4qpg-hvfg", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/PrestaShop/dashproducts/commit/f0799c13628a9b9ca6ca75c085b083d924a8ea7e"}}