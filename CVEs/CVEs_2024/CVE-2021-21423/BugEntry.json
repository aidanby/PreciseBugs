{"buggy_code": ["# ~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\".\n\nname: rebuild-bot\non:\n  issue_comment:\n    types:\n      - created\n  workflow_dispatch: {}\njobs:\n  build:\n    runs-on: ubuntu-latest\n    env:\n      CI: \"true\"\n    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body,\n      '@projen rebuild') }}\n    steps:\n      - name: Post comment to issue\n        uses: peter-evans/create-or-update-comment@v1\n        with:\n          issue-number: ${{ github.event.issue.number }}\n          body: \"_projen_: Rebuild started\"\n      - name: Get pull request branch\n        id: query_pull_request\n        env:\n          PULL_REQUEST_URL: ${{ github.event.issue.pull_request.url }}\n        run: |-\n          rm -f /tmp/pr.json\n          curl --silent $PULL_REQUEST_URL > /tmp/pr.json\n          BRANCH_STR=$(cat /tmp/pr.json | jq \".head.ref\")\n          REPO_NAME=$(cat /tmp/pr.json | jq \".head.repo.full_name\")\n          echo \"::set-output name=branch::$(node -p $BRANCH_STR)\"\n          echo \"::set-output name=repo::$(node -p $REPO_NAME)\"\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          ref: ${{ steps.query_pull_request.outputs.branch }}\n          repository: ${{ steps.query_pull_request.outputs.repo }}\n      - name: Setup Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: 10.17.0\n      - name: Install dependencies\n        run: yarn install --check-files --frozen-lockfile\n      - name: Synthesize project files\n        run: /bin/bash ./projen.bash\n      - name: Set git identity\n        run: |-\n          git config user.name \"Auto-bump\"\n          git config user.email \"github-actions@github.com\"\n      - name: Build\n        run: /bin/bash ./projen.bash build\n      - name: Commit changes\n        run: 'git commit -am \"chore: update generated files\"'\n      - name: Push commits\n        run: git push origin $BRANCH\n        env:\n          BRANCH: ${{ steps.query_pull_request.outputs.branch }}\n      - name: Push tags\n        run: git push --follow-tags origin $BRANCH\n        env:\n          BRANCH: ${{ steps.query_pull_request.outputs.branch }}\n      - name: Post comment to issue\n        uses: peter-evans/create-or-update-comment@v1\n        with:\n          issue-number: ${{ github.event.issue.number }}\n          body: \"_projen_: Rebuild complete. Updates pushed to pull request branch.\"\n", "// Jest Snapshot v1, https://goo.gl/fbAQLP\n\nexports[`cdk-watchful 1`] = `\nObject {\n  \".eslintrc.json\": Object {\n    \"env\": Object {\n      \"jest\": true,\n      \"node\": true,\n    },\n    \"extends\": Array [\n      \"plugin:import/typescript\",\n    ],\n    \"ignorePatterns\": Array [\n      \"*.js\",\n      \"!.projenrc.js\",\n      \"*.d.ts\",\n      \"node_modules/\",\n      \"*.generated.ts\",\n      \"coverage\",\n    ],\n    \"overrides\": Array [\n      Object {\n        \"files\": Array [\n          \".projenrc.js\",\n        ],\n        \"rules\": Object {\n          \"@typescript-eslint/no-require-imports\": \"off\",\n          \"import/no-extraneous-dependencies\": \"off\",\n        },\n      },\n    ],\n    \"parser\": \"@typescript-eslint/parser\",\n    \"parserOptions\": Object {\n      \"ecmaVersion\": 2018,\n      \"project\": \"./tsconfig.eslint.json\",\n      \"sourceType\": \"module\",\n    },\n    \"plugins\": Array [\n      \"@typescript-eslint\",\n      \"import\",\n    ],\n    \"root\": true,\n    \"rules\": Object {\n      \"@typescript-eslint/indent\": Array [\n        \"error\",\n        2,\n      ],\n      \"@typescript-eslint/member-delimiter-style\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/member-ordering\": Array [\n        \"error\",\n        Object {\n          \"default\": Array [\n            \"public-static-field\",\n            \"public-static-method\",\n            \"protected-static-field\",\n            \"protected-static-method\",\n            \"private-static-field\",\n            \"private-static-method\",\n            \"field\",\n            \"constructor\",\n            \"method\",\n          ],\n        },\n      ],\n      \"@typescript-eslint/no-floating-promises\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/no-require-imports\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/no-shadow\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/return-await\": Array [\n        \"error\",\n      ],\n      \"array-bracket-newline\": Array [\n        \"error\",\n        \"consistent\",\n      ],\n      \"array-bracket-spacing\": Array [\n        \"error\",\n        \"never\",\n      ],\n      \"brace-style\": Array [\n        \"error\",\n        \"1tbs\",\n        Object {\n          \"allowSingleLine\": true,\n        },\n      ],\n      \"comma-dangle\": Array [\n        \"error\",\n        \"always-multiline\",\n      ],\n      \"comma-spacing\": Array [\n        \"error\",\n        Object {\n          \"after\": true,\n          \"before\": false,\n        },\n      ],\n      \"curly\": Array [\n        \"error\",\n        \"multi-line\",\n        \"consistent\",\n      ],\n      \"dot-notation\": Array [\n        \"error\",\n      ],\n      \"import/no-extraneous-dependencies\": Array [\n        \"error\",\n        Object {\n          \"devDependencies\": Array [\n            \"**/test/**\",\n            \"**/build-tools/**\",\n          ],\n          \"optionalDependencies\": false,\n          \"peerDependencies\": true,\n        },\n      ],\n      \"import/no-unresolved\": Array [\n        \"error\",\n      ],\n      \"import/order\": Array [\n        \"warn\",\n        Object {\n          \"alphabetize\": Object {\n            \"caseInsensitive\": true,\n            \"order\": \"asc\",\n          },\n          \"groups\": Array [\n            \"builtin\",\n            \"external\",\n          ],\n        },\n      ],\n      \"indent\": Array [\n        \"off\",\n      ],\n      \"key-spacing\": Array [\n        \"error\",\n      ],\n      \"keyword-spacing\": Array [\n        \"error\",\n      ],\n      \"max-len\": Array [\n        \"error\",\n        Object {\n          \"code\": 150,\n          \"ignoreComments\": true,\n          \"ignoreRegExpLiterals\": true,\n          \"ignoreStrings\": true,\n          \"ignoreTemplateLiterals\": true,\n          \"ignoreUrls\": true,\n        },\n      ],\n      \"no-bitwise\": Array [\n        \"error\",\n      ],\n      \"no-duplicate-imports\": Array [\n        \"error\",\n      ],\n      \"no-multi-spaces\": Array [\n        \"error\",\n        Object {\n          \"ignoreEOLComments\": false,\n        },\n      ],\n      \"no-multiple-empty-lines\": Array [\n        \"error\",\n      ],\n      \"no-return-await\": Array [\n        \"off\",\n      ],\n      \"no-shadow\": Array [\n        \"off\",\n      ],\n      \"no-trailing-spaces\": Array [\n        \"error\",\n      ],\n      \"object-curly-newline\": Array [\n        \"error\",\n        Object {\n          \"consistent\": true,\n          \"multiline\": true,\n        },\n      ],\n      \"object-curly-spacing\": Array [\n        \"error\",\n        \"always\",\n      ],\n      \"object-property-newline\": Array [\n        \"error\",\n        Object {\n          \"allowAllPropertiesOnSameLine\": true,\n        },\n      ],\n      \"quote-props\": Array [\n        \"error\",\n        \"consistent-as-needed\",\n      ],\n      \"quotes\": Array [\n        \"error\",\n        \"single\",\n        Object {\n          \"avoidEscape\": true,\n        },\n      ],\n      \"semi\": Array [\n        \"error\",\n        \"always\",\n      ],\n      \"space-before-blocks\": Array [\n        \"error\",\n      ],\n    },\n    \"settings\": Object {\n      \"import/parsers\": Object {\n        \"@typescript-eslint/parser\": Array [\n          \".ts\",\n          \".tsx\",\n        ],\n      },\n      \"import/resolver\": Object {\n        \"node\": Object {},\n        \"typescript\": Object {\n          \"project\": \"./tsconfig.eslint.json\",\n        },\n      },\n    },\n  },\n  \".github/dependabot.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nversion: 2\nupdates:\n  - package-ecosystem: npm\n    versioning-strategy: lockfile-only\n    directory: /\n    schedule:\n      interval: daily\n    ignore:\n      - dependency-name: projen\n\",\n  \".github/pull_request_template.md\": \"Fixes #\",\n  \".github/workflows/build.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nname: Build\non:\n  pull_request: {}\n  workflow_dispatch: {}\njobs:\n  build:\n    runs-on: ubuntu-latest\n    env:\n      CI: \\\\\"true\\\\\"\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n      - name: Setup Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: 14.0.0\n      - name: Install dependencies\n        run: yarn install --check-files --frozen-lockfile\n      - name: Synthesize project files\n        run: npx projen\n      - name: Anti-tamper check\n        run: git diff --exit-code\n      - name: Set git identity\n        run: |-\n          git config user.name \\\\\"Auto-bump\\\\\"\n          git config user.email \\\\\"github-actions@github.com\\\\\"\n      - name: Build\n        run: npx projen build\n      - name: Anti-tamper check\n        run: git diff --exit-code\n    container:\n      image: jsii/superchain\n\",\n  \".github/workflows/projenupgrade.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nname: ProjenUpgrade\non:\n  schedule:\n    - cron: 0 6 * * *\n  workflow_dispatch: {}\njobs:\n  upgrade:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n      - name: Setup Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: 14.0.0\n      - name: Install dependencies\n        run: yarn install --check-files --frozen-lockfile\n      - name: Synthesize project files\n        run: npx projen\n      - name: Upgrade projen\n        run: npx projen projen:upgrade\n      - name: Create pull request\n        uses: peter-evans/create-pull-request@v3\n        with:\n          token: \\${{ secrets.PROJEN_GITHUB_TOKEN }}\n          commit-message: \\\\\"chore: upgrade projen\\\\\"\n          branch: auto/projen-upgrade\n          title: \\\\\"chore: upgrade projen\\\\\"\n          body: This PR upgrades projen to the latest version\n          labels: auto-merge\n\",\n  \".github/workflows/rebuild-bot.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nname: rebuild-bot\non:\n  issue_comment:\n    types:\n      - created\n  workflow_dispatch: {}\njobs:\n  build:\n    runs-on: ubuntu-latest\n    env:\n      CI: \\\\\"true\\\\\"\n    if: \\${{ github.event.issue.pull_request && contains(github.event.comment.body,\n      '@projen rebuild') }}\n    steps:\n      - name: Post comment to issue\n        uses: peter-evans/create-or-update-comment@v1\n        with:\n          issue-number: \\${{ github.event.issue.number }}\n          body: \\\\\"_projen_: Rebuild started\\\\\"\n      - name: Get pull request branch\n        id: query_pull_request\n        env:\n          PULL_REQUEST_URL: \\${{ github.event.issue.pull_request.url }}\n        run: |-\n          rm -f /tmp/pr.json\n          curl --silent $PULL_REQUEST_URL > /tmp/pr.json\n          BRANCH_STR=$(cat /tmp/pr.json | jq \\\\\".head.ref\\\\\")\n          REPO_NAME=$(cat /tmp/pr.json | jq \\\\\".head.repo.full_name\\\\\")\n          echo \\\\\"::set-output name=branch::$(node -p $BRANCH_STR)\\\\\"\n          echo \\\\\"::set-output name=repo::$(node -p $REPO_NAME)\\\\\"\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          ref: \\${{ steps.query_pull_request.outputs.branch }}\n          repository: \\${{ steps.query_pull_request.outputs.repo }}\n      - name: Setup Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: 14.0.0\n      - name: Install dependencies\n        run: yarn install --check-files --frozen-lockfile\n      - name: Synthesize project files\n        run: npx projen\n      - name: Set git identity\n        run: |-\n          git config user.name \\\\\"Auto-bump\\\\\"\n          git config user.email \\\\\"github-actions@github.com\\\\\"\n      - name: Build\n        run: npx projen build\n      - name: Commit changes\n        run: 'git commit -am \\\\\"chore: update generated files\\\\\"'\n      - name: Push commits\n        run: git push origin $BRANCH\n        env:\n          BRANCH: \\${{ steps.query_pull_request.outputs.branch }}\n      - name: Push tags\n        run: git push --follow-tags origin $BRANCH\n        env:\n          BRANCH: \\${{ steps.query_pull_request.outputs.branch }}\n      - name: Post comment to issue\n        uses: peter-evans/create-or-update-comment@v1\n        with:\n          issue-number: \\${{ github.event.issue.number }}\n          body: \\\\\"_projen_: Rebuild complete. Updates pushed to pull request branch.\\\\\"\n\",\n  \".github/workflows/release.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nname: Release\non:\n  push:\n    branches:\n      - master\n  workflow_dispatch: {}\njobs:\n  build:\n    runs-on: ubuntu-latest\n    env:\n      CI: \\\\\"true\\\\\"\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          fetch-depth: 0\n      - name: Setup Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: 14.0.0\n      - name: Install dependencies\n        run: yarn install --check-files --frozen-lockfile\n      - name: Synthesize project files\n        run: npx projen\n      - name: Anti-tamper check\n        run: git diff --exit-code\n      - name: Set git identity\n        run: |-\n          git config user.name \\\\\"Auto-bump\\\\\"\n          git config user.email \\\\\"github-actions@github.com\\\\\"\n      - name: Bump to next version\n        run: npx projen bump\n      - name: Build\n        run: npx projen build\n      - name: Anti-tamper check\n        run: git diff --exit-code\n      - name: Push commits\n        run: git push origin $BRANCH\n        env:\n          BRANCH: \\${{ github.ref }}\n      - name: Push tags\n        run: git push --follow-tags origin $BRANCH\n        env:\n          BRANCH: \\${{ github.ref }}\n      - name: Upload artifact\n        uses: actions/upload-artifact@v2.1.1\n        with:\n          name: dist\n          path: dist\n    container:\n      image: jsii/superchain\n  release_npm:\n    name: Release to NPM\n    needs: build\n    runs-on: ubuntu-latest\n    container:\n      image: jsii/superchain\n    steps:\n      - name: Download build artifacts\n        uses: actions/download-artifact@v2\n        with:\n          name: dist\n          path: dist\n      - name: Release\n        run: npx -p jsii-release@latest jsii-release-npm\n        env:\n          NPM_TOKEN: \\${{ secrets.NPM_TOKEN }}\n          NPM_DIST_TAG: latest\n          NPM_REGISTRY: registry.npmjs.org\n  release_maven:\n    name: Release to Maven\n    needs: build\n    runs-on: ubuntu-latest\n    container:\n      image: jsii/superchain\n    steps:\n      - name: Download build artifacts\n        uses: actions/download-artifact@v2\n        with:\n          name: dist\n          path: dist\n      - name: Release\n        run: npx -p jsii-release@latest jsii-release-maven\n        env:\n          MAVEN_GPG_PRIVATE_KEY: \\${{ secrets.MAVEN_GPG_PRIVATE_KEY }}\n          MAVEN_GPG_PRIVATE_KEY_PASSPHRASE: \\${{ secrets.MAVEN_GPG_PRIVATE_KEY_PASSPHRASE }}\n          MAVEN_PASSWORD: \\${{ secrets.MAVEN_PASSWORD }}\n          MAVEN_USERNAME: \\${{ secrets.MAVEN_USERNAME }}\n          MAVEN_STAGING_PROFILE_ID: \\${{ secrets.MAVEN_STAGING_PROFILE_ID }}\n  release_pypi:\n    name: Release to PyPi\n    needs: build\n    runs-on: ubuntu-latest\n    container:\n      image: jsii/superchain\n    steps:\n      - name: Download build artifacts\n        uses: actions/download-artifact@v2\n        with:\n          name: dist\n          path: dist\n      - name: Release\n        run: npx -p jsii-release@latest jsii-release-pypi\n        env:\n          TWINE_USERNAME: \\${{ secrets.TWINE_USERNAME }}\n          TWINE_PASSWORD: \\${{ secrets.TWINE_PASSWORD }}\n\",\n  \".gitignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n*.lcov\n*.log\n*.pid\n*.pid.lock\n*.seed\n*.tgz\n*.tsbuildinfo\n.cache\n.env\n.eslintcache\n.idea\n.jsii\n.nyc_output\n.yarn-integrity\n/coverage\n/dist\n/lib\n/test-reports/\nbuild/Release\ncoverage\nexample/*.d.ts\nexample/*.js\njspm_packages/\njunit.xml\nlerna-debug.log*\nlib-cov\nlogs\nnode_modules/\nnpm-debug.log*\npids\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\ntsconfig.json\nyarn-debug.log*\nyarn-error.log*\n!/.eslintrc.json\n!/.github/dependabot.yml\n!/.github/pull_request_template.md\n!/.github/workflows/build.yml\n!/.github/workflows/projenupgrade.yml\n!/.github/workflows/rebuild-bot.yml\n!/.github/workflows/release.yml\n!/.mergify.yml\n!/.npmignore\n!/.projen/deps.json\n!/.projen/tasks.json\n!/.projenrc.js\n!/.versionrc.json\n!/API.md\n!/LICENSE\n!/package.json\n!/src\n!/test\n!/tsconfig.eslint.json\n!/tsconfig.jest.json\n!version.json\n\",\n  \".mergify.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\npull_request_rules:\n  - name: Automatic merge on approval and successful build\n    actions:\n      merge:\n        method: squash\n        commit_message: title+body\n        strict: smart\n        strict_method: merge\n      delete_head_branch: {}\n    conditions:\n      - \\\\\"#approved-reviews-by>=1\\\\\"\n      - status-success=build\n  - name: Automatic merge PRs with auto-merge label upon successful build\n    actions:\n      merge:\n        method: squash\n        commit_message: title+body\n        strict: smart\n        strict_method: merge\n      delete_head_branch: {}\n    conditions:\n      - label=auto-merge\n      - status-success=build\n  - name: Merge pull requests from dependabot if CI passes\n    conditions:\n      - author=dependabot[bot]\n      - status-success=build\n    actions:\n      merge:\n        method: squash\n        commit_message: title+body\n        strict: smart\n        strict_method: merge\n\",\n  \".npmignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n/.eslintrc.json\n/.github\n/.idea\n/.mergify.yml\n/.projen\n/.projenrc.js\n/.versionrc.json\n/.vscode\n/coverage\n/src\n/test\n/test-reports/\n/tsconfig.eslint.json\n/tsconfig.jest.json\n/tsconfig.json\ndist\njunit.xml\n!.jsii\n!/lib\n!/lib/**/*.d.ts\n!/lib/**/*.js\n\",\n  \".projen/deps.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"dependencies\": Array [\n      Object {\n        \"name\": \"@aws-cdk/assert\",\n        \"type\": \"build\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@types/jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/node\",\n        \"type\": \"build\",\n        \"version\": \"^14.0.0\",\n      },\n      Object {\n        \"name\": \"@typescript-eslint/eslint-plugin\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@typescript-eslint/parser\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"aws-sdk\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-import-resolver-node\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-import-resolver-typescript\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-plugin-import\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest-junit\",\n        \"type\": \"build\",\n        \"version\": \"^12\",\n      },\n      Object {\n        \"name\": \"jsii\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jsii-diff\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jsii-docgen\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jsii-pacmak\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"json-schema\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"projen\",\n        \"type\": \"build\",\n        \"version\": \"^999.999.999\",\n      },\n      Object {\n        \"name\": \"standard-version\",\n        \"type\": \"build\",\n        \"version\": \"^9\",\n      },\n      Object {\n        \"name\": \"ts-jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"typescript\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-apigateway\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-cloudwatch-actions\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-cloudwatch\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-dynamodb\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-ecs-patterns\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-ecs\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-elasticloadbalancingv2\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-events-targets\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-events\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-lambda\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-rds\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-sns-subscriptions\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-sns\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-sqs\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/core\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"constructs\",\n        \"type\": \"peer\",\n        \"version\": \"^3.2.27\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-apigateway\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-cloudwatch-actions\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-cloudwatch\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-dynamodb\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-ecs-patterns\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-ecs\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-elasticloadbalancingv2\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-events-targets\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-events\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-lambda\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-rds\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-sns-subscriptions\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-sns\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-sqs\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/core\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n    ],\n  },\n  \".projen/tasks.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"env\": Object {\n      \"PATH\": \"$(npx -c \\\\\"node -e \\\\\\\\\\\\\"console.log(process.env.PATH)\\\\\\\\\\\\\"\\\\\")\",\n    },\n    \"tasks\": Object {\n      \"build\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Full release build (test+compile)\",\n        \"name\": \"build\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"test\",\n          },\n          Object {\n            \"spawn\": \"compile\",\n          },\n          Object {\n            \"spawn\": \"package\",\n          },\n        ],\n      },\n      \"bump\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Commits a bump to the package version based on conventional commits\",\n        \"name\": \"bump\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"standard-version\",\n          },\n        ],\n      },\n      \"clobber\": Object {\n        \"category\": \"30.maintain\",\n        \"condition\": \"git diff --exit-code > /dev/null\",\n        \"description\": \"hard resets to HEAD of origin and cleans the local repo\",\n        \"env\": Object {\n          \"BRANCH\": \"$(git branch --show-current)\",\n        },\n        \"name\": \"clobber\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"git checkout -b scratch\",\n            \"name\": \"save current HEAD in \\\\\"scratch\\\\\" branch\",\n          },\n          Object {\n            \"exec\": \"git checkout $BRANCH\",\n          },\n          Object {\n            \"exec\": \"git fetch origin\",\n            \"name\": \"fetch latest changes from origin\",\n          },\n          Object {\n            \"exec\": \"git reset --hard origin/$BRANCH\",\n            \"name\": \"hard reset to origin commit\",\n          },\n          Object {\n            \"exec\": \"git clean -fdx\",\n            \"name\": \"clean all untracked files\",\n          },\n          Object {\n            \"say\": \"ready to rock! (unpushed commits are under the \\\\\"scratch\\\\\" branch)\",\n          },\n        ],\n      },\n      \"compat\": Object {\n        \"category\": \"20.release\",\n        \"description\": \"Perform API compatibility check against latest version\",\n        \"name\": \"compat\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii-diff npm:$(node -p \\\\\"require('./package.json').name\\\\\") -k --ignore-file .compatignore || (echo \\\\\"\nUNEXPECTED BREAKING CHANGES: add keys such as 'removed:constructs.Node.of' to .compatignore to skip.\n\\\\\" && exit 1)\",\n          },\n        ],\n      },\n      \"compile\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Only compile\",\n        \"name\": \"compile\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii --silence-warnings=reserved-word --no-fix-peer-dependencies\",\n          },\n          Object {\n            \"spawn\": \"docgen\",\n          },\n        ],\n      },\n      \"docgen\": Object {\n        \"category\": \"20.release\",\n        \"description\": \"Generate API.md from .jsii manifest\",\n        \"name\": \"docgen\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii-docgen\",\n          },\n        ],\n      },\n      \"eslint\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Runs eslint against the codebase\",\n        \"name\": \"eslint\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test build-tools .projenrc.js\",\n          },\n        ],\n      },\n      \"package\": Object {\n        \"category\": \"20.release\",\n        \"description\": \"Create an npm tarball\",\n        \"name\": \"package\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii-pacmak\",\n          },\n        ],\n      },\n      \"projen:upgrade\": Object {\n        \"category\": \"30.maintain\",\n        \"description\": \"upgrades projen to the latest version\",\n        \"name\": \"projen:upgrade\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"yarn upgrade -L projen\",\n          },\n          Object {\n            \"exec\": \"CI=\\\\\"\\\\\" yarn projen\",\n          },\n        ],\n      },\n      \"release\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Bumps version & push to master\",\n        \"name\": \"release\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"bump\",\n          },\n          Object {\n            \"exec\": \"git push --follow-tags origin master\",\n          },\n        ],\n      },\n      \"test\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run tests\",\n        \"name\": \"test\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"rm -fr lib/\",\n          },\n          Object {\n            \"spawn\": \"test:compile\",\n          },\n          Object {\n            \"exec\": \"jest --passWithNoTests --all --updateSnapshot --coverageProvider=v8\",\n          },\n          Object {\n            \"spawn\": \"eslint\",\n          },\n        ],\n      },\n      \"test:compile\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"compiles the test code\",\n        \"name\": \"test:compile\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"tsc --noEmit --project tsconfig.jest.json\",\n          },\n        ],\n      },\n      \"test:update\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Update jest snapshots\",\n        \"name\": \"test:update\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --updateSnapshot\",\n          },\n        ],\n      },\n      \"test:watch\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run jest in watch mode\",\n        \"name\": \"test:watch\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --watch\",\n          },\n        ],\n      },\n      \"watch\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Watch & compile in the background\",\n        \"name\": \"watch\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii -w --silence-warnings=reserved-word --no-fix-peer-dependencies\",\n          },\n        ],\n      },\n    },\n  },\n  \".projenrc.js\": \"const { ConstructLibraryAws, Semver } = require('projen');\n\nconst project = new ConstructLibraryAws({\n  name: 'cdk-watchful',\n  description: 'Watching your CDK apps since 2019',\n  defaultReleaseBranch: 'master',\n  authorName: 'Elad Ben-Israel',\n  authorEmail: 'elad.benisrael@gmail.com',\n  repository: 'https://github.com/eladb/cdk-watchful.git',\n  keywords: [\n    'cloudwatch',\n    'monitoring',\n  ],\n\n  catalog: {\n    twitter: 'emeshbi',\n  },\n\n  // creates PRs for projen upgrades\n  projenUpgradeSecret: 'PROJEN_GITHUB_TOKEN',\n\n  cdkVersion: '1.75.0',\n  cdkDependencies: [\n    '@aws-cdk/aws-apigateway',\n    '@aws-cdk/aws-cloudwatch',\n    '@aws-cdk/aws-cloudwatch-actions',\n    '@aws-cdk/aws-dynamodb',\n    '@aws-cdk/aws-ecs',\n    '@aws-cdk/aws-ecs-patterns',\n    '@aws-cdk/aws-elasticloadbalancingv2',\n    '@aws-cdk/aws-events',\n    '@aws-cdk/aws-events-targets',\n    '@aws-cdk/aws-lambda',\n    '@aws-cdk/aws-rds',\n    '@aws-cdk/aws-sns',\n    '@aws-cdk/aws-sns-subscriptions',\n    '@aws-cdk/aws-sqs',\n    '@aws-cdk/core',\n  ],\n\n  devDeps: [\n    'aws-sdk',\n  ],\n\n  // jsii publishing\n\n  publishToMaven: {\n    javaPackage: 'com.github.eladb.watchful',\n    mavenGroupId: 'com.github.eladb',\n    mavenArtifactId: 'cdk-watchful',\n  },\n\n  publishToPypi: {\n    distName: 'cdk-watchful',\n    module: 'cdk_watchful',\n  },\n\n  minNodeVersion: '14.0.0',\n});\n\nproject.gitignore.exclude('.env', '.idea');\nproject.gitignore.exclude('example/*.js', 'example/*.d.ts');\n\nproject.synth();\n\",\n  \".versionrc.json\": Object {\n    \"bumpFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"commitAll\": true,\n    \"packageFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"scripts\": Object {\n      \"postbump\": \"npx projen && git add .\",\n    },\n  },\n  \"LICENSE\": \"                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \\\\\"License\\\\\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \\\\\"Licensor\\\\\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \\\\\"Legal Entity\\\\\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \\\\\"control\\\\\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \\\\\"You\\\\\" (or \\\\\"Your\\\\\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \\\\\"Source\\\\\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \\\\\"Object\\\\\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \\\\\"Work\\\\\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \\\\\"Derivative Works\\\\\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \\\\\"Contribution\\\\\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \\\\\"submitted\\\\\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \\\\\"Not a Contribution.\\\\\"\n\n      \\\\\"Contributor\\\\\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \\\\\"NOTICE\\\\\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \\\\\"AS IS\\\\\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \\\\\"[]\\\\\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \\\\\"printed page\\\\\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2021 Elad Ben-Israel\n\n   Licensed under the Apache License, Version 2.0 (the \\\\\"License\\\\\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \\\\\"AS IS\\\\\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\",\n  \"README.md\": \"# replace this\",\n  \"package.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"author\": Object {\n      \"email\": \"elad.benisrael@gmail.com\",\n      \"name\": \"Elad Ben-Israel\",\n      \"organization\": false,\n    },\n    \"awscdkio\": Object {\n      \"twitter\": \"emeshbi\",\n    },\n    \"bundledDependencies\": Array [],\n    \"dependencies\": Object {\n      \"@aws-cdk/aws-apigateway\": \"^1.75.0\",\n      \"@aws-cdk/aws-cloudwatch\": \"^1.75.0\",\n      \"@aws-cdk/aws-cloudwatch-actions\": \"^1.75.0\",\n      \"@aws-cdk/aws-dynamodb\": \"^1.75.0\",\n      \"@aws-cdk/aws-ecs\": \"^1.75.0\",\n      \"@aws-cdk/aws-ecs-patterns\": \"^1.75.0\",\n      \"@aws-cdk/aws-elasticloadbalancingv2\": \"^1.75.0\",\n      \"@aws-cdk/aws-events\": \"^1.75.0\",\n      \"@aws-cdk/aws-events-targets\": \"^1.75.0\",\n      \"@aws-cdk/aws-lambda\": \"^1.75.0\",\n      \"@aws-cdk/aws-rds\": \"^1.75.0\",\n      \"@aws-cdk/aws-sns\": \"^1.75.0\",\n      \"@aws-cdk/aws-sns-subscriptions\": \"^1.75.0\",\n      \"@aws-cdk/aws-sqs\": \"^1.75.0\",\n      \"@aws-cdk/core\": \"^1.75.0\",\n    },\n    \"description\": \"Watching your CDK apps since 2019\",\n    \"devDependencies\": Object {\n      \"@aws-cdk/assert\": \"^1.75.0\",\n      \"@types/jest\": \"*\",\n      \"@types/node\": \"^14.0.0\",\n      \"@typescript-eslint/eslint-plugin\": \"*\",\n      \"@typescript-eslint/parser\": \"*\",\n      \"aws-sdk\": \"*\",\n      \"eslint\": \"*\",\n      \"eslint-import-resolver-node\": \"*\",\n      \"eslint-import-resolver-typescript\": \"*\",\n      \"eslint-plugin-import\": \"*\",\n      \"jest\": \"*\",\n      \"jest-junit\": \"^12\",\n      \"jsii\": \"*\",\n      \"jsii-diff\": \"*\",\n      \"jsii-docgen\": \"*\",\n      \"jsii-pacmak\": \"*\",\n      \"json-schema\": \"*\",\n      \"projen\": \"^999.999.999\",\n      \"standard-version\": \"^9\",\n      \"ts-jest\": \"*\",\n      \"typescript\": \"*\",\n    },\n    \"engines\": Object {\n      \"node\": \">= 14.0.0\",\n    },\n    \"jest\": Object {\n      \"clearMocks\": true,\n      \"collectCoverage\": true,\n      \"coverageDirectory\": \"coverage\",\n      \"coveragePathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n      \"coverageReporters\": Array [\n        \"json\",\n        \"lcov\",\n        \"clover\",\n        \"text\",\n      ],\n      \"globals\": Object {\n        \"ts-jest\": Object {\n          \"tsconfig\": \"tsconfig.jest.json\",\n        },\n      },\n      \"preset\": \"ts-jest\",\n      \"reporters\": Array [\n        \"default\",\n        Array [\n          \"jest-junit\",\n          Object {\n            \"outputDirectory\": \"test-reports\",\n          },\n        ],\n      ],\n      \"testMatch\": Array [\n        \"**/__tests__/**/*.ts?(x)\",\n        \"**/?(*.)+(spec|test).ts?(x)\",\n      ],\n      \"testPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n      \"watchPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n    },\n    \"jsii\": Object {\n      \"outdir\": \"dist\",\n      \"targets\": Object {\n        \"java\": Object {\n          \"maven\": Object {\n            \"artifactId\": \"cdk-watchful\",\n            \"groupId\": \"com.github.eladb\",\n          },\n          \"package\": \"com.github.eladb.watchful\",\n        },\n        \"python\": Object {\n          \"distName\": \"cdk-watchful\",\n          \"module\": \"cdk_watchful\",\n        },\n      },\n      \"tsc\": Object {\n        \"outDir\": \"lib\",\n        \"rootDir\": \"src\",\n      },\n    },\n    \"keywords\": Array [\n      \"cdk\",\n      \"cloudwatch\",\n      \"monitoring\",\n    ],\n    \"license\": \"Apache-2.0\",\n    \"main\": \"lib/index.js\",\n    \"name\": \"cdk-watchful\",\n    \"peerDependencies\": Object {\n      \"@aws-cdk/aws-apigateway\": \"^1.75.0\",\n      \"@aws-cdk/aws-cloudwatch\": \"^1.75.0\",\n      \"@aws-cdk/aws-cloudwatch-actions\": \"^1.75.0\",\n      \"@aws-cdk/aws-dynamodb\": \"^1.75.0\",\n      \"@aws-cdk/aws-ecs\": \"^1.75.0\",\n      \"@aws-cdk/aws-ecs-patterns\": \"^1.75.0\",\n      \"@aws-cdk/aws-elasticloadbalancingv2\": \"^1.75.0\",\n      \"@aws-cdk/aws-events\": \"^1.75.0\",\n      \"@aws-cdk/aws-events-targets\": \"^1.75.0\",\n      \"@aws-cdk/aws-lambda\": \"^1.75.0\",\n      \"@aws-cdk/aws-rds\": \"^1.75.0\",\n      \"@aws-cdk/aws-sns\": \"^1.75.0\",\n      \"@aws-cdk/aws-sns-subscriptions\": \"^1.75.0\",\n      \"@aws-cdk/aws-sqs\": \"^1.75.0\",\n      \"@aws-cdk/core\": \"^1.75.0\",\n      \"constructs\": \"^3.2.27\",\n    },\n    \"repository\": Object {\n      \"type\": \"git\",\n      \"url\": \"https://github.com/eladb/cdk-watchful.git\",\n    },\n    \"scripts\": Object {\n      \"build\": \"npx projen build\",\n      \"bump\": \"npx projen bump\",\n      \"clobber\": \"npx projen clobber\",\n      \"compat\": \"npx projen compat\",\n      \"compile\": \"npx projen compile\",\n      \"docgen\": \"npx projen docgen\",\n      \"eslint\": \"npx projen eslint\",\n      \"package\": \"npx projen package\",\n      \"projen\": \"npx projen\",\n      \"projen:upgrade\": \"npx projen projen:upgrade\",\n      \"release\": \"npx projen release\",\n      \"start\": \"npx projen start\",\n      \"test\": \"npx projen test\",\n      \"test:compile\": \"npx projen test:compile\",\n      \"test:update\": \"npx projen test:update\",\n      \"test:watch\": \"npx projen test:watch\",\n      \"watch\": \"npx projen watch\",\n    },\n    \"stability\": \"stable\",\n    \"types\": \"lib/index.d.ts\",\n    \"version\": \"0.0.0\",\n  },\n  \"src/index.ts\": \"export class Hello {\n  public sayHello() {\n    return 'hello, world!';\n  }\n}\",\n  \"test/hello.test.ts\": \"import { Hello } from '../src';\n\ntest('hello', () => {\n  expect(new Hello().sayHello()).toBe('hello, world!');\n});\",\n  \"tsconfig.eslint.json\": Object {\n    \"compilerOptions\": Object {\n      \"alwaysStrict\": true,\n      \"declaration\": true,\n      \"experimentalDecorators\": true,\n      \"inlineSourceMap\": true,\n      \"inlineSources\": true,\n      \"lib\": Array [\n        \"es2018\",\n      ],\n      \"module\": \"CommonJS\",\n      \"noEmitOnError\": false,\n      \"noFallthroughCasesInSwitch\": true,\n      \"noImplicitAny\": true,\n      \"noImplicitReturns\": true,\n      \"noImplicitThis\": true,\n      \"noUnusedLocals\": true,\n      \"noUnusedParameters\": true,\n      \"resolveJsonModule\": true,\n      \"strict\": true,\n      \"strictNullChecks\": true,\n      \"strictPropertyInitialization\": true,\n      \"stripInternal\": true,\n      \"target\": \"ES2018\",\n    },\n    \"exclude\": Array [\n      \"node_modules\",\n    ],\n    \"include\": Array [\n      \".projenrc.js\",\n      \"src/**/*.ts\",\n      \"test/**/*.ts\",\n    ],\n  },\n  \"tsconfig.jest.json\": Object {\n    \"compilerOptions\": Object {\n      \"alwaysStrict\": true,\n      \"declaration\": true,\n      \"experimentalDecorators\": true,\n      \"inlineSourceMap\": true,\n      \"inlineSources\": true,\n      \"lib\": Array [\n        \"es2018\",\n      ],\n      \"module\": \"CommonJS\",\n      \"noEmitOnError\": false,\n      \"noFallthroughCasesInSwitch\": true,\n      \"noImplicitAny\": true,\n      \"noImplicitReturns\": true,\n      \"noImplicitThis\": true,\n      \"noUnusedLocals\": true,\n      \"noUnusedParameters\": true,\n      \"resolveJsonModule\": true,\n      \"strict\": true,\n      \"strictNullChecks\": true,\n      \"strictPropertyInitialization\": true,\n      \"stripInternal\": true,\n      \"target\": \"ES2018\",\n    },\n    \"exclude\": Array [\n      \"node_modules\",\n    ],\n    \"include\": Array [\n      \".projenrc.js\",\n      \"src/**/*.ts\",\n      \"test/**/*.ts\",\n    ],\n  },\n  \"version.json\": Object {\n    \"version\": \"0.0.0\",\n  },\n}\n`;\n\nexports[`cdk8s 1`] = `\nObject {\n  \".eslintrc.json\": Object {\n    \"env\": Object {\n      \"jest\": true,\n      \"node\": true,\n    },\n    \"extends\": Array [\n      \"plugin:import/typescript\",\n    ],\n    \"ignorePatterns\": Array [\n      \"*.js\",\n      \"!.projenrc.js\",\n      \"*.d.ts\",\n      \"node_modules/\",\n      \"*.generated.ts\",\n      \"coverage\",\n    ],\n    \"overrides\": Array [\n      Object {\n        \"files\": Array [\n          \".projenrc.js\",\n        ],\n        \"rules\": Object {\n          \"@typescript-eslint/no-require-imports\": \"off\",\n          \"import/no-extraneous-dependencies\": \"off\",\n        },\n      },\n    ],\n    \"parser\": \"@typescript-eslint/parser\",\n    \"parserOptions\": Object {\n      \"ecmaVersion\": 2018,\n      \"project\": \"./tsconfig.eslint.json\",\n      \"sourceType\": \"module\",\n    },\n    \"plugins\": Array [\n      \"@typescript-eslint\",\n      \"import\",\n    ],\n    \"root\": true,\n    \"rules\": Object {\n      \"@typescript-eslint/indent\": Array [\n        \"error\",\n        2,\n      ],\n      \"@typescript-eslint/member-delimiter-style\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/member-ordering\": Array [\n        \"error\",\n        Object {\n          \"default\": Array [\n            \"public-static-field\",\n            \"public-static-method\",\n            \"protected-static-field\",\n            \"protected-static-method\",\n            \"private-static-field\",\n            \"private-static-method\",\n            \"field\",\n            \"constructor\",\n            \"method\",\n          ],\n        },\n      ],\n      \"@typescript-eslint/no-floating-promises\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/no-require-imports\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/no-shadow\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/return-await\": Array [\n        \"error\",\n      ],\n      \"array-bracket-newline\": Array [\n        \"error\",\n        \"consistent\",\n      ],\n      \"array-bracket-spacing\": Array [\n        \"error\",\n        \"never\",\n      ],\n      \"brace-style\": Array [\n        \"error\",\n        \"1tbs\",\n        Object {\n          \"allowSingleLine\": true,\n        },\n      ],\n      \"comma-dangle\": Array [\n        \"error\",\n        \"always-multiline\",\n      ],\n      \"comma-spacing\": Array [\n        \"error\",\n        Object {\n          \"after\": true,\n          \"before\": false,\n        },\n      ],\n      \"curly\": Array [\n        \"error\",\n        \"multi-line\",\n        \"consistent\",\n      ],\n      \"dot-notation\": Array [\n        \"error\",\n      ],\n      \"import/no-extraneous-dependencies\": Array [\n        \"error\",\n        Object {\n          \"devDependencies\": Array [\n            \"**/test/**\",\n            \"**/build-tools/**\",\n          ],\n          \"optionalDependencies\": false,\n          \"peerDependencies\": true,\n        },\n      ],\n      \"import/no-unresolved\": Array [\n        \"error\",\n      ],\n      \"import/order\": Array [\n        \"warn\",\n        Object {\n          \"alphabetize\": Object {\n            \"caseInsensitive\": true,\n            \"order\": \"asc\",\n          },\n          \"groups\": Array [\n            \"builtin\",\n            \"external\",\n          ],\n        },\n      ],\n      \"indent\": Array [\n        \"off\",\n      ],\n      \"key-spacing\": Array [\n        \"error\",\n      ],\n      \"keyword-spacing\": Array [\n        \"error\",\n      ],\n      \"max-len\": Array [\n        \"error\",\n        Object {\n          \"code\": 150,\n          \"ignoreComments\": true,\n          \"ignoreRegExpLiterals\": true,\n          \"ignoreStrings\": true,\n          \"ignoreTemplateLiterals\": true,\n          \"ignoreUrls\": true,\n        },\n      ],\n      \"no-bitwise\": Array [\n        \"error\",\n      ],\n      \"no-duplicate-imports\": Array [\n        \"error\",\n      ],\n      \"no-multi-spaces\": Array [\n        \"error\",\n        Object {\n          \"ignoreEOLComments\": false,\n        },\n      ],\n      \"no-multiple-empty-lines\": Array [\n        \"error\",\n      ],\n      \"no-return-await\": Array [\n        \"off\",\n      ],\n      \"no-shadow\": Array [\n        \"off\",\n      ],\n      \"no-trailing-spaces\": Array [\n        \"error\",\n      ],\n      \"object-curly-newline\": Array [\n        \"error\",\n        Object {\n          \"consistent\": true,\n          \"multiline\": true,\n        },\n      ],\n      \"object-curly-spacing\": Array [\n        \"error\",\n        \"always\",\n      ],\n      \"object-property-newline\": Array [\n        \"error\",\n        Object {\n          \"allowAllPropertiesOnSameLine\": true,\n        },\n      ],\n      \"quote-props\": Array [\n        \"error\",\n        \"consistent-as-needed\",\n      ],\n      \"quotes\": Array [\n        \"error\",\n        \"single\",\n        Object {\n          \"avoidEscape\": true,\n        },\n      ],\n      \"semi\": Array [\n        \"error\",\n        \"always\",\n      ],\n      \"space-before-blocks\": Array [\n        \"error\",\n      ],\n    },\n    \"settings\": Object {\n      \"import/parsers\": Object {\n        \"@typescript-eslint/parser\": Array [\n          \".ts\",\n          \".tsx\",\n        ],\n      },\n      \"import/resolver\": Object {\n        \"node\": Object {},\n        \"typescript\": Object {\n          \"project\": \"./tsconfig.eslint.json\",\n        },\n      },\n    },\n  },\n  \".gitignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n*.lcov\n*.log\n*.pid\n*.pid.lock\n*.seed\n*.tgz\n*.tsbuildinfo\n.cache\n.eslintcache\n.jsii\n.nyc_output\n.yarn-integrity\n/coverage\n/dist\n/lib\n/test-reports/\nbuild/Release\ncoverage\njspm_packages/\njunit.xml\nlerna-debug.log*\nlib-cov\nlogs\nnode_modules/\nnpm-debug.log*\npids\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\ntsconfig.json\nyarn-debug.log*\nyarn-error.log*\n!/.eslintrc.json\n!/.npmignore\n!/.projen/deps.json\n!/.projen/tasks.json\n!/.projenrc.js\n!/.versionrc.json\n!/API.md\n!/LICENSE\n!/package.json\n!/src\n!/src/_loadurl.js\n!/test\n!/tsconfig.eslint.json\n!/tsconfig.jest.json\n!version.json\n\",\n  \".npmignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n/.eslintrc.json\n/.github\n/.idea\n/.projen\n/.projenrc.js\n/.versionrc.json\n/.vscode\n/coverage\n/src\n/test\n/test-reports/\n/tsconfig.eslint.json\n/tsconfig.jest.json\n/tsconfig.json\ndist\njunit.xml\n!.jsii\n!/lib\n!/lib/**/*.d.ts\n!/lib/**/*.js\n\",\n  \".projen/deps.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"dependencies\": Array [\n      Object {\n        \"name\": \"@types/follow-redirects\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/json-stable-stringify\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/node\",\n        \"type\": \"build\",\n        \"version\": \"^10.17.0\",\n      },\n      Object {\n        \"name\": \"@types/yaml\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@typescript-eslint/eslint-plugin\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@typescript-eslint/parser\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"constructs\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-import-resolver-node\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-import-resolver-typescript\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-plugin-import\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest-junit\",\n        \"type\": \"build\",\n        \"version\": \"^12\",\n      },\n      Object {\n        \"name\": \"jsii\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jsii-diff\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jsii-docgen\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jsii-pacmak\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"json-schema\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"json-schema-to-typescript\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"projen\",\n        \"type\": \"build\",\n        \"version\": \"^999.999.999\",\n      },\n      Object {\n        \"name\": \"standard-version\",\n        \"type\": \"build\",\n        \"version\": \"^9\",\n      },\n      Object {\n        \"name\": \"ts-jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"typescript\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"fast-json-patch\",\n        \"type\": \"bundled\",\n      },\n      Object {\n        \"name\": \"follow-redirects\",\n        \"type\": \"bundled\",\n      },\n      Object {\n        \"name\": \"json-stable-stringify\",\n        \"type\": \"bundled\",\n      },\n      Object {\n        \"name\": \"yaml\",\n        \"type\": \"bundled\",\n      },\n      Object {\n        \"name\": \"constructs\",\n        \"type\": \"peer\",\n      },\n    ],\n  },\n  \".projen/tasks.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"env\": Object {\n      \"PATH\": \"$(npx -c \\\\\"node -e \\\\\\\\\\\\\"console.log(process.env.PATH)\\\\\\\\\\\\\"\\\\\")\",\n    },\n    \"tasks\": Object {\n      \"build\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Full release build (test+compile)\",\n        \"name\": \"build\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"compile\",\n          },\n        ],\n      },\n      \"bump\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Commits a bump to the package version based on conventional commits\",\n        \"name\": \"bump\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"standard-version\",\n          },\n        ],\n      },\n      \"clobber\": Object {\n        \"category\": \"30.maintain\",\n        \"condition\": \"git diff --exit-code > /dev/null\",\n        \"description\": \"hard resets to HEAD of origin and cleans the local repo\",\n        \"env\": Object {\n          \"BRANCH\": \"$(git branch --show-current)\",\n        },\n        \"name\": \"clobber\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"git checkout -b scratch\",\n            \"name\": \"save current HEAD in \\\\\"scratch\\\\\" branch\",\n          },\n          Object {\n            \"exec\": \"git checkout $BRANCH\",\n          },\n          Object {\n            \"exec\": \"git fetch origin\",\n            \"name\": \"fetch latest changes from origin\",\n          },\n          Object {\n            \"exec\": \"git reset --hard origin/$BRANCH\",\n            \"name\": \"hard reset to origin commit\",\n          },\n          Object {\n            \"exec\": \"git clean -fdx\",\n            \"name\": \"clean all untracked files\",\n          },\n          Object {\n            \"say\": \"ready to rock! (unpushed commits are under the \\\\\"scratch\\\\\" branch)\",\n          },\n        ],\n      },\n      \"compat\": Object {\n        \"category\": \"20.release\",\n        \"description\": \"Perform API compatibility check against latest version\",\n        \"name\": \"compat\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii-diff npm:$(node -p \\\\\"require('./package.json').name\\\\\") -k --ignore-file .compatignore || (echo \\\\\"\nUNEXPECTED BREAKING CHANGES: add keys such as 'removed:constructs.Node.of' to .compatignore to skip.\n\\\\\" && exit 1)\",\n          },\n        ],\n      },\n      \"compile\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Only compile\",\n        \"name\": \"compile\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii --silence-warnings=reserved-word --no-fix-peer-dependencies\",\n          },\n          Object {\n            \"spawn\": \"docgen\",\n          },\n          Object {\n            \"exec\": \"cp src/_loadurl.js lib/\",\n          },\n        ],\n      },\n      \"docgen\": Object {\n        \"category\": \"20.release\",\n        \"description\": \"Generate API.md from .jsii manifest\",\n        \"name\": \"docgen\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii-docgen\",\n          },\n        ],\n      },\n      \"eslint\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Runs eslint against the codebase\",\n        \"name\": \"eslint\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test build-tools .projenrc.js\",\n          },\n        ],\n      },\n      \"package\": Object {\n        \"category\": \"20.release\",\n        \"description\": \"Create an npm tarball\",\n        \"name\": \"package\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii-pacmak\",\n          },\n        ],\n      },\n      \"projen:upgrade\": Object {\n        \"category\": \"30.maintain\",\n        \"description\": \"upgrades projen to the latest version\",\n        \"name\": \"projen:upgrade\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"yarn upgrade -L projen\",\n          },\n          Object {\n            \"exec\": \"CI=\\\\\"\\\\\" yarn projen\",\n          },\n        ],\n      },\n      \"release\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Bumps version & push to master\",\n        \"name\": \"release\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"bump\",\n          },\n          Object {\n            \"exec\": \"git push --follow-tags origin master\",\n          },\n        ],\n      },\n      \"test\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run tests\",\n        \"name\": \"test\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"rm -fr lib/\",\n          },\n          Object {\n            \"spawn\": \"test:compile\",\n          },\n          Object {\n            \"exec\": \"jest --passWithNoTests --all\",\n          },\n          Object {\n            \"spawn\": \"eslint\",\n          },\n          Object {\n            \"exec\": \"yarn compile\",\n          },\n        ],\n      },\n      \"test:compile\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"compiles the test code\",\n        \"name\": \"test:compile\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"tsc --noEmit --project tsconfig.jest.json\",\n          },\n        ],\n      },\n      \"test:update\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Update jest snapshots\",\n        \"name\": \"test:update\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --updateSnapshot\",\n          },\n        ],\n      },\n      \"test:watch\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run jest in watch mode\",\n        \"name\": \"test:watch\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --watch\",\n          },\n        ],\n      },\n      \"watch\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Watch & compile in the background\",\n        \"name\": \"watch\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii -w --silence-warnings=reserved-word --no-fix-peer-dependencies\",\n          },\n        ],\n      },\n    },\n  },\n  \".projenrc.js\": \"const { JsiiProject, Semver } = require('projen');\n\nconst common = require('./cdk8s.common');\n\nconst project = new JsiiProject({\n  name: 'cdk8s',\n  description: 'Cloud Development Kit for Kubernetes',\n  defaultReleaseBranch: 'master',\n  stability: common.options.stability,\n\n  // without this, the version of 'constructs' would need to be controlled\n  // from this file, since otherwise it would create a 0.0.0 dev dependency.\n  peerDependencyOptions: {\n    pinnedDevDependency: false,\n  },\n\n  ...common.options,\n\n  peerDeps: [\n    'constructs',\n  ],\n  bundledDeps: [\n    'yaml',\n    'json-stable-stringify',\n    'follow-redirects',\n    'fast-json-patch',\n  ],\n  devDeps: [\n    'constructs',\n    '@types/follow-redirects',\n    '@types/json-stable-stringify',\n    '@types/yaml',\n    'json-schema-to-typescript',\n  ],\n\n  // jsii configuration\n  publishToMaven: {\n    javaPackage: 'org.cdk8s',\n    mavenGroupId: 'org.cdk8s',\n    mavenArtifactId: 'cdk8s',\n  },\n  publishToPypi: {\n    distName: 'cdk8s',\n    module: 'cdk8s',\n  },\n  publishToNuget: {\n    dotNetNamespace: 'Org.Cdk8s',\n    packageId: 'Org.Cdk8s',\n  },\n});\n\ncommon.fixup(project);\n\n// _loadurl.js is written in javascript so we need to commit it and also copy it\n// after compilation to the \\`lib/\\` directory.\nproject.gitignore.include('/src/_loadurl.js');\nproject.addCompileCommand('cp src/_loadurl.js lib/');\n\nproject.synth();\n\",\n  \".versionrc.json\": Object {\n    \"bumpFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"commitAll\": true,\n    \"packageFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"scripts\": Object {\n      \"postbump\": \"npx projen && git add .\",\n    },\n  },\n  \"LICENSE\": \"                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \\\\\"License\\\\\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \\\\\"Licensor\\\\\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \\\\\"Legal Entity\\\\\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \\\\\"control\\\\\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \\\\\"You\\\\\" (or \\\\\"Your\\\\\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \\\\\"Source\\\\\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \\\\\"Object\\\\\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \\\\\"Work\\\\\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \\\\\"Derivative Works\\\\\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \\\\\"Contribution\\\\\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \\\\\"submitted\\\\\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \\\\\"Not a Contribution.\\\\\"\n\n      \\\\\"Contributor\\\\\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \\\\\"NOTICE\\\\\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \\\\\"AS IS\\\\\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \\\\\"[]\\\\\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \\\\\"printed page\\\\\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2021 Amazon Web Services\n\n   Licensed under the Apache License, Version 2.0 (the \\\\\"License\\\\\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \\\\\"AS IS\\\\\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\",\n  \"README.md\": \"# replace this\",\n  \"cdk8s-cli.projenrc.js\": \"const { TypeScriptLibraryProject, Semver } = require('projen');\n\nconst common = require('./cdk8s.common');\n\nconst project = new TypeScriptLibraryProject({\n  name: 'cdk8s-cli',\n  description: 'CDK for Kubernetes CLI',\n  defaultReleaseBranch: 'master',\n  bin: {\n    cdk8s: 'bin/cdk8s',\n  },\n  deps: [\n    'cdk8s@^0.0.0',\n    'codemaker',\n    \\`constructs\\`,\n    'fs-extra',\n    'jsii-srcmak',\n    'jsii-pacmak',\n    'sscaff',\n    'yaml',\n    'yargs',\n    'json2jsii',\n    'colors',\n\n    // add @types/node as a regular dependency since it's needed to during \\\\\"import\\\\\"\n    // to compile the generated jsii code.\n    '@types/node',\n  ],\n  devDeps: [\n    '@types/fs-extra',\n    '@types/json-schema',\n  ],\n  ...common.options,\n});\n\nproject.eslint.addIgnorePattern('/templates/');\nproject.jest.addIgnorePattern('/templates/');\n\ncommon.fixup(project);\n\nproject.synth();\n\",\n  \"cdk8s.common.js\": \"exports.options = {\n  minNodeVersion: '10.17.0',\n  repository: 'https://github.com/awslabs/cdk8s.git',\n  authorName: 'Amazon Web Services',\n  authorUrl: 'https://aws.amazon.com',\n  authorOrganization: true,\n  buildWorkflow: false,\n  rebuildBot: false,\n  stability: 'experimental',\n  releaseWorkflow: false,\n  dependabot: false,\n  mergify: false,\n  compat: false,\n  dependabot: false,\n  pullRequestTemplate: false,\n  keywords: [\n    \\\\\"cdk\\\\\",\n    \\\\\"kubernetes\\\\\",\n    \\\\\"k8s\\\\\",\n    \\\\\"constructs\\\\\"\n  ]\n};\n\n// some common fixups for projects\nexports.fixup = project => {\n  // override the default \\\\\"build\\\\\" from projen because currently in this\n  // repo it means \\\\\"compile\\\\\"\n  project.setScript('build', 'yarn compile');\n\n  project.buildTask.reset();\n  project.buildTask.spawn(project.compileTask);\n\n  // // add \\\\\"compile\\\\\" after test because the test command deletes lib/ and we run tests *after* build in this repo.\n  project.addTestCommand('yarn compile');\n\n  // jsii-release is declared at the root level, we don't need it here.\n  project.deps.removeDependency('jsii-release');\n\n  delete project.manifest.scripts.bump;\n  delete project.manifest.scripts.release;\n};\n\",\n  \"cdk8s.projenrc.js\": \"const { JsiiProject, Semver } = require('projen');\n\nconst common = require('./cdk8s.common');\n\nconst project = new JsiiProject({\n  name: 'cdk8s',\n  description: 'Cloud Development Kit for Kubernetes',\n  defaultReleaseBranch: 'master',\n  stability: common.options.stability,\n\n  // without this, the version of 'constructs' would need to be controlled\n  // from this file, since otherwise it would create a 0.0.0 dev dependency.\n  peerDependencyOptions: {\n    pinnedDevDependency: false,\n  },\n\n  ...common.options,\n\n  peerDeps: [\n    'constructs',\n  ],\n  bundledDeps: [\n    'yaml',\n    'json-stable-stringify',\n    'follow-redirects',\n    'fast-json-patch',\n  ],\n  devDeps: [\n    'constructs',\n    '@types/follow-redirects',\n    '@types/json-stable-stringify',\n    '@types/yaml',\n    'json-schema-to-typescript',\n  ],\n\n  // jsii configuration\n  publishToMaven: {\n    javaPackage: 'org.cdk8s',\n    mavenGroupId: 'org.cdk8s',\n    mavenArtifactId: 'cdk8s',\n  },\n  publishToPypi: {\n    distName: 'cdk8s',\n    module: 'cdk8s',\n  },\n  publishToNuget: {\n    dotNetNamespace: 'Org.Cdk8s',\n    packageId: 'Org.Cdk8s',\n  },\n});\n\ncommon.fixup(project);\n\n// _loadurl.js is written in javascript so we need to commit it and also copy it\n// after compilation to the \\`lib/\\` directory.\nproject.gitignore.include('/src/_loadurl.js');\nproject.addCompileCommand('cp src/_loadurl.js lib/');\n\nproject.synth();\n\",\n  \"package.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"author\": Object {\n      \"name\": \"Amazon Web Services\",\n      \"organization\": true,\n      \"url\": \"https://aws.amazon.com\",\n    },\n    \"bundledDependencies\": Array [\n      \"fast-json-patch\",\n      \"follow-redirects\",\n      \"json-stable-stringify\",\n      \"yaml\",\n    ],\n    \"dependencies\": Object {\n      \"fast-json-patch\": \"*\",\n      \"follow-redirects\": \"*\",\n      \"json-stable-stringify\": \"*\",\n      \"yaml\": \"*\",\n    },\n    \"description\": \"Cloud Development Kit for Kubernetes\",\n    \"devDependencies\": Object {\n      \"@types/follow-redirects\": \"*\",\n      \"@types/jest\": \"*\",\n      \"@types/json-stable-stringify\": \"*\",\n      \"@types/node\": \"^10.17.0\",\n      \"@types/yaml\": \"*\",\n      \"@typescript-eslint/eslint-plugin\": \"*\",\n      \"@typescript-eslint/parser\": \"*\",\n      \"constructs\": \"*\",\n      \"eslint\": \"*\",\n      \"eslint-import-resolver-node\": \"*\",\n      \"eslint-import-resolver-typescript\": \"*\",\n      \"eslint-plugin-import\": \"*\",\n      \"jest\": \"*\",\n      \"jest-junit\": \"^12\",\n      \"jsii\": \"*\",\n      \"jsii-diff\": \"*\",\n      \"jsii-docgen\": \"*\",\n      \"jsii-pacmak\": \"*\",\n      \"json-schema\": \"*\",\n      \"json-schema-to-typescript\": \"*\",\n      \"projen\": \"^999.999.999\",\n      \"standard-version\": \"^9\",\n      \"ts-jest\": \"*\",\n      \"typescript\": \"*\",\n    },\n    \"engines\": Object {\n      \"node\": \">= 10.17.0\",\n    },\n    \"jest\": Object {\n      \"clearMocks\": true,\n      \"collectCoverage\": true,\n      \"coverageDirectory\": \"coverage\",\n      \"coveragePathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n      \"coverageReporters\": Array [\n        \"json\",\n        \"lcov\",\n        \"clover\",\n        \"text\",\n      ],\n      \"globals\": Object {\n        \"ts-jest\": Object {\n          \"tsconfig\": \"tsconfig.jest.json\",\n        },\n      },\n      \"preset\": \"ts-jest\",\n      \"reporters\": Array [\n        \"default\",\n        Array [\n          \"jest-junit\",\n          Object {\n            \"outputDirectory\": \"test-reports\",\n          },\n        ],\n      ],\n      \"testMatch\": Array [\n        \"**/__tests__/**/*.ts?(x)\",\n        \"**/?(*.)+(spec|test).ts?(x)\",\n      ],\n      \"testPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n      \"watchPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n    },\n    \"jsii\": Object {\n      \"outdir\": \"dist\",\n      \"targets\": Object {\n        \"dotnet\": Object {\n          \"namespace\": \"Org.Cdk8s\",\n          \"packageId\": \"Org.Cdk8s\",\n        },\n        \"java\": Object {\n          \"maven\": Object {\n            \"artifactId\": \"cdk8s\",\n            \"groupId\": \"org.cdk8s\",\n          },\n          \"package\": \"org.cdk8s\",\n        },\n        \"python\": Object {\n          \"distName\": \"cdk8s\",\n          \"module\": \"cdk8s\",\n        },\n      },\n      \"tsc\": Object {\n        \"outDir\": \"lib\",\n        \"rootDir\": \"src\",\n      },\n    },\n    \"keywords\": Array [\n      \"cdk\",\n      \"constructs\",\n      \"k8s\",\n      \"kubernetes\",\n    ],\n    \"license\": \"Apache-2.0\",\n    \"main\": \"lib/index.js\",\n    \"name\": \"cdk8s\",\n    \"peerDependencies\": Object {\n      \"constructs\": \"*\",\n    },\n    \"repository\": Object {\n      \"type\": \"git\",\n      \"url\": \"https://github.com/awslabs/cdk8s.git\",\n    },\n    \"scripts\": Object {\n      \"build\": \"npx projen build\",\n      \"bump\": \"npx projen bump\",\n      \"clobber\": \"npx projen clobber\",\n      \"compat\": \"npx projen compat\",\n      \"compile\": \"npx projen compile\",\n      \"docgen\": \"npx projen docgen\",\n      \"eslint\": \"npx projen eslint\",\n      \"package\": \"npx projen package\",\n      \"projen\": \"npx projen\",\n      \"projen:upgrade\": \"npx projen projen:upgrade\",\n      \"release\": \"npx projen release\",\n      \"start\": \"npx projen start\",\n      \"test\": \"npx projen test\",\n      \"test:compile\": \"npx projen test:compile\",\n      \"test:update\": \"npx projen test:update\",\n      \"test:watch\": \"npx projen test:watch\",\n      \"watch\": \"npx projen watch\",\n    },\n    \"stability\": \"experimental\",\n    \"types\": \"lib/index.d.ts\",\n    \"version\": \"0.0.0\",\n  },\n  \"src/index.ts\": \"export class Hello {\n  public sayHello() {\n    return 'hello, world!';\n  }\n}\",\n  \"test/hello.test.ts\": \"import { Hello } from '../src';\n\ntest('hello', () => {\n  expect(new Hello().sayHello()).toBe('hello, world!');\n});\",\n  \"tsconfig.eslint.json\": Object {\n    \"compilerOptions\": Object {\n      \"alwaysStrict\": true,\n      \"declaration\": true,\n      \"experimentalDecorators\": true,\n      \"inlineSourceMap\": true,\n      \"inlineSources\": true,\n      \"lib\": Array [\n        \"es2018\",\n      ],\n      \"module\": \"CommonJS\",\n      \"noEmitOnError\": false,\n      \"noFallthroughCasesInSwitch\": true,\n      \"noImplicitAny\": true,\n      \"noImplicitReturns\": true,\n      \"noImplicitThis\": true,\n      \"noUnusedLocals\": true,\n      \"noUnusedParameters\": true,\n      \"resolveJsonModule\": true,\n      \"strict\": true,\n      \"strictNullChecks\": true,\n      \"strictPropertyInitialization\": true,\n      \"stripInternal\": true,\n      \"target\": \"ES2018\",\n    },\n    \"exclude\": Array [\n      \"node_modules\",\n    ],\n    \"include\": Array [\n      \".projenrc.js\",\n      \"src/**/*.ts\",\n      \"test/**/*.ts\",\n    ],\n  },\n  \"tsconfig.jest.json\": Object {\n    \"compilerOptions\": Object {\n      \"alwaysStrict\": true,\n      \"declaration\": true,\n      \"experimentalDecorators\": true,\n      \"inlineSourceMap\": true,\n      \"inlineSources\": true,\n      \"lib\": Array [\n        \"es2018\",\n      ],\n      \"module\": \"CommonJS\",\n      \"noEmitOnError\": false,\n      \"noFallthroughCasesInSwitch\": true,\n      \"noImplicitAny\": true,\n      \"noImplicitReturns\": true,\n      \"noImplicitThis\": true,\n      \"noUnusedLocals\": true,\n      \"noUnusedParameters\": true,\n      \"resolveJsonModule\": true,\n      \"strict\": true,\n      \"strictNullChecks\": true,\n      \"strictPropertyInitialization\": true,\n      \"stripInternal\": true,\n      \"target\": \"ES2018\",\n    },\n    \"exclude\": Array [\n      \"node_modules\",\n    ],\n    \"include\": Array [\n      \".projenrc.js\",\n      \"src/**/*.ts\",\n      \"test/**/*.ts\",\n    ],\n  },\n  \"version.json\": Object {\n    \"version\": \"0.0.0\",\n  },\n}\n`;\n\nexports[`cdk8s-cli 1`] = `\nObject {\n  \".eslintrc.json\": Object {\n    \"env\": Object {\n      \"jest\": true,\n      \"node\": true,\n    },\n    \"extends\": Array [\n      \"plugin:import/typescript\",\n    ],\n    \"ignorePatterns\": Array [\n      \"*.js\",\n      \"!.projenrc.js\",\n      \"*.d.ts\",\n      \"node_modules/\",\n      \"*.generated.ts\",\n      \"coverage\",\n      \"/templates/\",\n    ],\n    \"overrides\": Array [\n      Object {\n        \"files\": Array [\n          \".projenrc.js\",\n        ],\n        \"rules\": Object {\n          \"@typescript-eslint/no-require-imports\": \"off\",\n          \"import/no-extraneous-dependencies\": \"off\",\n        },\n      },\n    ],\n    \"parser\": \"@typescript-eslint/parser\",\n    \"parserOptions\": Object {\n      \"ecmaVersion\": 2018,\n      \"project\": \"./tsconfig.eslint.json\",\n      \"sourceType\": \"module\",\n    },\n    \"plugins\": Array [\n      \"@typescript-eslint\",\n      \"import\",\n    ],\n    \"root\": true,\n    \"rules\": Object {\n      \"@typescript-eslint/indent\": Array [\n        \"error\",\n        2,\n      ],\n      \"@typescript-eslint/member-delimiter-style\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/member-ordering\": Array [\n        \"error\",\n        Object {\n          \"default\": Array [\n            \"public-static-field\",\n            \"public-static-method\",\n            \"protected-static-field\",\n            \"protected-static-method\",\n            \"private-static-field\",\n            \"private-static-method\",\n            \"field\",\n            \"constructor\",\n            \"method\",\n          ],\n        },\n      ],\n      \"@typescript-eslint/no-floating-promises\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/no-require-imports\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/no-shadow\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/return-await\": Array [\n        \"error\",\n      ],\n      \"array-bracket-newline\": Array [\n        \"error\",\n        \"consistent\",\n      ],\n      \"array-bracket-spacing\": Array [\n        \"error\",\n        \"never\",\n      ],\n      \"brace-style\": Array [\n        \"error\",\n        \"1tbs\",\n        Object {\n          \"allowSingleLine\": true,\n        },\n      ],\n      \"comma-dangle\": Array [\n        \"error\",\n        \"always-multiline\",\n      ],\n      \"comma-spacing\": Array [\n        \"error\",\n        Object {\n          \"after\": true,\n          \"before\": false,\n        },\n      ],\n      \"curly\": Array [\n        \"error\",\n        \"multi-line\",\n        \"consistent\",\n      ],\n      \"dot-notation\": Array [\n        \"error\",\n      ],\n      \"import/no-extraneous-dependencies\": Array [\n        \"error\",\n        Object {\n          \"devDependencies\": Array [\n            \"**/test/**\",\n            \"**/build-tools/**\",\n          ],\n          \"optionalDependencies\": false,\n          \"peerDependencies\": true,\n        },\n      ],\n      \"import/no-unresolved\": Array [\n        \"error\",\n      ],\n      \"import/order\": Array [\n        \"warn\",\n        Object {\n          \"alphabetize\": Object {\n            \"caseInsensitive\": true,\n            \"order\": \"asc\",\n          },\n          \"groups\": Array [\n            \"builtin\",\n            \"external\",\n          ],\n        },\n      ],\n      \"indent\": Array [\n        \"off\",\n      ],\n      \"key-spacing\": Array [\n        \"error\",\n      ],\n      \"keyword-spacing\": Array [\n        \"error\",\n      ],\n      \"max-len\": Array [\n        \"error\",\n        Object {\n          \"code\": 150,\n          \"ignoreComments\": true,\n          \"ignoreRegExpLiterals\": true,\n          \"ignoreStrings\": true,\n          \"ignoreTemplateLiterals\": true,\n          \"ignoreUrls\": true,\n        },\n      ],\n      \"no-bitwise\": Array [\n        \"error\",\n      ],\n      \"no-duplicate-imports\": Array [\n        \"error\",\n      ],\n      \"no-multi-spaces\": Array [\n        \"error\",\n        Object {\n          \"ignoreEOLComments\": false,\n        },\n      ],\n      \"no-multiple-empty-lines\": Array [\n        \"error\",\n      ],\n      \"no-return-await\": Array [\n        \"off\",\n      ],\n      \"no-shadow\": Array [\n        \"off\",\n      ],\n      \"no-trailing-spaces\": Array [\n        \"error\",\n      ],\n      \"object-curly-newline\": Array [\n        \"error\",\n        Object {\n          \"consistent\": true,\n          \"multiline\": true,\n        },\n      ],\n      \"object-curly-spacing\": Array [\n        \"error\",\n        \"always\",\n      ],\n      \"object-property-newline\": Array [\n        \"error\",\n        Object {\n          \"allowAllPropertiesOnSameLine\": true,\n        },\n      ],\n      \"quote-props\": Array [\n        \"error\",\n        \"consistent-as-needed\",\n      ],\n      \"quotes\": Array [\n        \"error\",\n        \"single\",\n        Object {\n          \"avoidEscape\": true,\n        },\n      ],\n      \"semi\": Array [\n        \"error\",\n        \"always\",\n      ],\n      \"space-before-blocks\": Array [\n        \"error\",\n      ],\n    },\n    \"settings\": Object {\n      \"import/parsers\": Object {\n        \"@typescript-eslint/parser\": Array [\n          \".ts\",\n          \".tsx\",\n        ],\n      },\n      \"import/resolver\": Object {\n        \"node\": Object {},\n        \"typescript\": Object {\n          \"project\": \"./tsconfig.eslint.json\",\n        },\n      },\n    },\n  },\n  \".gitignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n*.lcov\n*.log\n*.pid\n*.pid.lock\n*.seed\n*.tgz\n*.tsbuildinfo\n.cache\n.eslintcache\n.nyc_output\n.yarn-integrity\n/coverage\n/dist\n/lib\n/test-reports/\nbuild/Release\ncoverage\njspm_packages/\njunit.xml\nlerna-debug.log*\nlib-cov\nlogs\nnode_modules/\nnpm-debug.log*\npids\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\nyarn-debug.log*\nyarn-error.log*\n!/.eslintrc.json\n!/.npmignore\n!/.projen/deps.json\n!/.projen/tasks.json\n!/.projenrc.js\n!/.versionrc.json\n!/LICENSE\n!/package.json\n!/src\n!/test\n!/tsconfig.eslint.json\n!/tsconfig.jest.json\n!/tsconfig.json\n!version.json\n\",\n  \".npmignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n/.eslintrc.json\n/.github\n/.idea\n/.projen\n/.projenrc.js\n/.versionrc.json\n/.vscode\n/coverage\n/src\n/test\n/test-reports/\n/tsconfig.eslint.json\n/tsconfig.jest.json\n/tsconfig.json\ndist\njunit.xml\n!/lib\n!/lib/**/*.d.ts\n!/lib/**/*.js\n\",\n  \".projen/deps.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"dependencies\": Array [\n      Object {\n        \"name\": \"@types/fs-extra\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/json-schema\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/node\",\n        \"type\": \"build\",\n        \"version\": \"^10.17.0\",\n      },\n      Object {\n        \"name\": \"@typescript-eslint/eslint-plugin\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@typescript-eslint/parser\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-import-resolver-node\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-import-resolver-typescript\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-plugin-import\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest-junit\",\n        \"type\": \"build\",\n        \"version\": \"^12\",\n      },\n      Object {\n        \"name\": \"json-schema\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"projen\",\n        \"type\": \"build\",\n        \"version\": \"^999.999.999\",\n      },\n      Object {\n        \"name\": \"standard-version\",\n        \"type\": \"build\",\n        \"version\": \"^9\",\n      },\n      Object {\n        \"name\": \"ts-jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"typescript\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/node\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"cdk8s\",\n        \"type\": \"runtime\",\n        \"version\": \"^0.0.0\",\n      },\n      Object {\n        \"name\": \"codemaker\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"colors\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"constructs\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"fs-extra\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"jsii-pacmak\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"jsii-srcmak\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"json2jsii\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"sscaff\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"yaml\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"yargs\",\n        \"type\": \"runtime\",\n      },\n    ],\n  },\n  \".projen/tasks.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"env\": Object {\n      \"PATH\": \"$(npx -c \\\\\"node -e \\\\\\\\\\\\\"console.log(process.env.PATH)\\\\\\\\\\\\\"\\\\\")\",\n    },\n    \"tasks\": Object {\n      \"build\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Full release build (test+compile)\",\n        \"name\": \"build\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"compile\",\n          },\n        ],\n      },\n      \"bump\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Commits a bump to the package version based on conventional commits\",\n        \"name\": \"bump\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"standard-version\",\n          },\n        ],\n      },\n      \"clobber\": Object {\n        \"category\": \"30.maintain\",\n        \"condition\": \"git diff --exit-code > /dev/null\",\n        \"description\": \"hard resets to HEAD of origin and cleans the local repo\",\n        \"env\": Object {\n          \"BRANCH\": \"$(git branch --show-current)\",\n        },\n        \"name\": \"clobber\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"git checkout -b scratch\",\n            \"name\": \"save current HEAD in \\\\\"scratch\\\\\" branch\",\n          },\n          Object {\n            \"exec\": \"git checkout $BRANCH\",\n          },\n          Object {\n            \"exec\": \"git fetch origin\",\n            \"name\": \"fetch latest changes from origin\",\n          },\n          Object {\n            \"exec\": \"git reset --hard origin/$BRANCH\",\n            \"name\": \"hard reset to origin commit\",\n          },\n          Object {\n            \"exec\": \"git clean -fdx\",\n            \"name\": \"clean all untracked files\",\n          },\n          Object {\n            \"say\": \"ready to rock! (unpushed commits are under the \\\\\"scratch\\\\\" branch)\",\n          },\n        ],\n      },\n      \"compile\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Only compile\",\n        \"name\": \"compile\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"tsc\",\n          },\n        ],\n      },\n      \"eslint\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Runs eslint against the codebase\",\n        \"name\": \"eslint\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test build-tools .projenrc.js\",\n          },\n        ],\n      },\n      \"package\": Object {\n        \"category\": \"20.release\",\n        \"description\": \"Create an npm tarball\",\n        \"name\": \"package\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"rm -fr dist\",\n          },\n          Object {\n            \"exec\": \"mkdir -p dist/js\",\n          },\n          Object {\n            \"exec\": \"yarn pack\",\n          },\n          Object {\n            \"exec\": \"mv *.tgz dist/js/\",\n          },\n        ],\n      },\n      \"projen:upgrade\": Object {\n        \"category\": \"30.maintain\",\n        \"description\": \"upgrades projen to the latest version\",\n        \"name\": \"projen:upgrade\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"yarn upgrade -L projen\",\n          },\n          Object {\n            \"exec\": \"CI=\\\\\"\\\\\" yarn projen\",\n          },\n        ],\n      },\n      \"release\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Bumps version & push to master\",\n        \"name\": \"release\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"bump\",\n          },\n          Object {\n            \"exec\": \"git push --follow-tags origin master\",\n          },\n        ],\n      },\n      \"test\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run tests\",\n        \"name\": \"test\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"rm -fr lib/\",\n          },\n          Object {\n            \"spawn\": \"test:compile\",\n          },\n          Object {\n            \"exec\": \"jest --passWithNoTests --all\",\n          },\n          Object {\n            \"spawn\": \"eslint\",\n          },\n          Object {\n            \"exec\": \"yarn compile\",\n          },\n        ],\n      },\n      \"test:compile\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"compiles the test code\",\n        \"name\": \"test:compile\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"tsc --noEmit --project tsconfig.jest.json\",\n          },\n        ],\n      },\n      \"test:update\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Update jest snapshots\",\n        \"name\": \"test:update\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --updateSnapshot\",\n          },\n        ],\n      },\n      \"test:watch\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run jest in watch mode\",\n        \"name\": \"test:watch\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --watch\",\n          },\n        ],\n      },\n      \"watch\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Watch & compile in the background\",\n        \"name\": \"watch\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"tsc -w\",\n          },\n        ],\n      },\n    },\n  },\n  \".projenrc.js\": \"const { TypeScriptLibraryProject, Semver } = require('projen');\n\nconst common = require('./cdk8s.common');\n\nconst project = new TypeScriptLibraryProject({\n  name: 'cdk8s-cli',\n  description: 'CDK for Kubernetes CLI',\n  defaultReleaseBranch: 'master',\n  bin: {\n    cdk8s: 'bin/cdk8s',\n  },\n  deps: [\n    'cdk8s@^0.0.0',\n    'codemaker',\n    \\`constructs\\`,\n    'fs-extra',\n    'jsii-srcmak',\n    'jsii-pacmak',\n    'sscaff',\n    'yaml',\n    'yargs',\n    'json2jsii',\n    'colors',\n\n    // add @types/node as a regular dependency since it's needed to during \\\\\"import\\\\\"\n    // to compile the generated jsii code.\n    '@types/node',\n  ],\n  devDeps: [\n    '@types/fs-extra',\n    '@types/json-schema',\n  ],\n  ...common.options,\n});\n\nproject.eslint.addIgnorePattern('/templates/');\nproject.jest.addIgnorePattern('/templates/');\n\ncommon.fixup(project);\n\nproject.synth();\n\",\n  \".versionrc.json\": Object {\n    \"bumpFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"commitAll\": true,\n    \"packageFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"scripts\": Object {\n      \"postbump\": \"npx projen && git add .\",\n    },\n  },\n  \"LICENSE\": \"                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \\\\\"License\\\\\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \\\\\"Licensor\\\\\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \\\\\"Legal Entity\\\\\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \\\\\"control\\\\\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \\\\\"You\\\\\" (or \\\\\"Your\\\\\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \\\\\"Source\\\\\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \\\\\"Object\\\\\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \\\\\"Work\\\\\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \\\\\"Derivative Works\\\\\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \\\\\"Contribution\\\\\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \\\\\"submitted\\\\\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \\\\\"Not a Contribution.\\\\\"\n\n      \\\\\"Contributor\\\\\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \\\\\"NOTICE\\\\\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \\\\\"AS IS\\\\\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \\\\\"[]\\\\\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \\\\\"printed page\\\\\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2021 Amazon Web Services\n\n   Licensed under the Apache License, Version 2.0 (the \\\\\"License\\\\\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \\\\\"AS IS\\\\\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\",\n  \"README.md\": \"# replace this\",\n  \"cdk8s-cli.projenrc.js\": \"const { TypeScriptLibraryProject, Semver } = require('projen');\n\nconst common = require('./cdk8s.common');\n\nconst project = new TypeScriptLibraryProject({\n  name: 'cdk8s-cli',\n  description: 'CDK for Kubernetes CLI',\n  defaultReleaseBranch: 'master',\n  bin: {\n    cdk8s: 'bin/cdk8s',\n  },\n  deps: [\n    'cdk8s@^0.0.0',\n    'codemaker',\n    \\`constructs\\`,\n    'fs-extra',\n    'jsii-srcmak',\n    'jsii-pacmak',\n    'sscaff',\n    'yaml',\n    'yargs',\n    'json2jsii',\n    'colors',\n\n    // add @types/node as a regular dependency since it's needed to during \\\\\"import\\\\\"\n    // to compile the generated jsii code.\n    '@types/node',\n  ],\n  devDeps: [\n    '@types/fs-extra',\n    '@types/json-schema',\n  ],\n  ...common.options,\n});\n\nproject.eslint.addIgnorePattern('/templates/');\nproject.jest.addIgnorePattern('/templates/');\n\ncommon.fixup(project);\n\nproject.synth();\n\",\n  \"cdk8s.common.js\": \"exports.options = {\n  minNodeVersion: '10.17.0',\n  repository: 'https://github.com/awslabs/cdk8s.git',\n  authorName: 'Amazon Web Services',\n  authorUrl: 'https://aws.amazon.com',\n  authorOrganization: true,\n  buildWorkflow: false,\n  rebuildBot: false,\n  stability: 'experimental',\n  releaseWorkflow: false,\n  dependabot: false,\n  mergify: false,\n  compat: false,\n  dependabot: false,\n  pullRequestTemplate: false,\n  keywords: [\n    \\\\\"cdk\\\\\",\n    \\\\\"kubernetes\\\\\",\n    \\\\\"k8s\\\\\",\n    \\\\\"constructs\\\\\"\n  ]\n};\n\n// some common fixups for projects\nexports.fixup = project => {\n  // override the default \\\\\"build\\\\\" from projen because currently in this\n  // repo it means \\\\\"compile\\\\\"\n  project.setScript('build', 'yarn compile');\n\n  project.buildTask.reset();\n  project.buildTask.spawn(project.compileTask);\n\n  // // add \\\\\"compile\\\\\" after test because the test command deletes lib/ and we run tests *after* build in this repo.\n  project.addTestCommand('yarn compile');\n\n  // jsii-release is declared at the root level, we don't need it here.\n  project.deps.removeDependency('jsii-release');\n\n  delete project.manifest.scripts.bump;\n  delete project.manifest.scripts.release;\n};\n\",\n  \"cdk8s.projenrc.js\": \"const { JsiiProject, Semver } = require('projen');\n\nconst common = require('./cdk8s.common');\n\nconst project = new JsiiProject({\n  name: 'cdk8s',\n  description: 'Cloud Development Kit for Kubernetes',\n  defaultReleaseBranch: 'master',\n  stability: common.options.stability,\n\n  // without this, the version of 'constructs' would need to be controlled\n  // from this file, since otherwise it would create a 0.0.0 dev dependency.\n  peerDependencyOptions: {\n    pinnedDevDependency: false,\n  },\n\n  ...common.options,\n\n  peerDeps: [\n    'constructs',\n  ],\n  bundledDeps: [\n    'yaml',\n    'json-stable-stringify',\n    'follow-redirects',\n    'fast-json-patch',\n  ],\n  devDeps: [\n    'constructs',\n    '@types/follow-redirects',\n    '@types/json-stable-stringify',\n    '@types/yaml',\n    'json-schema-to-typescript',\n  ],\n\n  // jsii configuration\n  publishToMaven: {\n    javaPackage: 'org.cdk8s',\n    mavenGroupId: 'org.cdk8s',\n    mavenArtifactId: 'cdk8s',\n  },\n  publishToPypi: {\n    distName: 'cdk8s',\n    module: 'cdk8s',\n  },\n  publishToNuget: {\n    dotNetNamespace: 'Org.Cdk8s',\n    packageId: 'Org.Cdk8s',\n  },\n});\n\ncommon.fixup(project);\n\n// _loadurl.js is written in javascript so we need to commit it and also copy it\n// after compilation to the \\`lib/\\` directory.\nproject.gitignore.include('/src/_loadurl.js');\nproject.addCompileCommand('cp src/_loadurl.js lib/');\n\nproject.synth();\n\",\n  \"package.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"author\": Object {\n      \"name\": \"Amazon Web Services\",\n      \"organization\": true,\n      \"url\": \"https://aws.amazon.com\",\n    },\n    \"bin\": Object {\n      \"cdk8s\": \"bin/cdk8s\",\n    },\n    \"bundledDependencies\": Array [],\n    \"dependencies\": Object {\n      \"@types/node\": \"*\",\n      \"cdk8s\": \"^0.0.0\",\n      \"codemaker\": \"*\",\n      \"colors\": \"*\",\n      \"constructs\": \"*\",\n      \"fs-extra\": \"*\",\n      \"jsii-pacmak\": \"*\",\n      \"jsii-srcmak\": \"*\",\n      \"json2jsii\": \"*\",\n      \"sscaff\": \"*\",\n      \"yaml\": \"*\",\n      \"yargs\": \"*\",\n    },\n    \"description\": \"CDK for Kubernetes CLI\",\n    \"devDependencies\": Object {\n      \"@types/fs-extra\": \"*\",\n      \"@types/jest\": \"*\",\n      \"@types/json-schema\": \"*\",\n      \"@types/node\": \"^10.17.0\",\n      \"@typescript-eslint/eslint-plugin\": \"*\",\n      \"@typescript-eslint/parser\": \"*\",\n      \"eslint\": \"*\",\n      \"eslint-import-resolver-node\": \"*\",\n      \"eslint-import-resolver-typescript\": \"*\",\n      \"eslint-plugin-import\": \"*\",\n      \"jest\": \"*\",\n      \"jest-junit\": \"^12\",\n      \"json-schema\": \"*\",\n      \"projen\": \"^999.999.999\",\n      \"standard-version\": \"^9\",\n      \"ts-jest\": \"*\",\n      \"typescript\": \"*\",\n    },\n    \"engines\": Object {\n      \"node\": \">= 10.17.0\",\n    },\n    \"jest\": Object {\n      \"clearMocks\": true,\n      \"collectCoverage\": true,\n      \"coverageDirectory\": \"coverage\",\n      \"coveragePathIgnorePatterns\": Array [\n        \"/node_modules/\",\n        \"/templates/\",\n      ],\n      \"coverageReporters\": Array [\n        \"json\",\n        \"lcov\",\n        \"clover\",\n        \"text\",\n      ],\n      \"globals\": Object {\n        \"ts-jest\": Object {\n          \"tsconfig\": \"tsconfig.jest.json\",\n        },\n      },\n      \"preset\": \"ts-jest\",\n      \"reporters\": Array [\n        \"default\",\n        Array [\n          \"jest-junit\",\n          Object {\n            \"outputDirectory\": \"test-reports\",\n          },\n        ],\n      ],\n      \"testMatch\": Array [\n        \"**/__tests__/**/*.ts?(x)\",\n        \"**/?(*.)+(spec|test).ts?(x)\",\n      ],\n      \"testPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n        \"/templates/\",\n      ],\n      \"watchPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n    },\n    \"keywords\": Array [\n      \"cdk\",\n      \"constructs\",\n      \"k8s\",\n      \"kubernetes\",\n    ],\n    \"license\": \"Apache-2.0\",\n    \"main\": \"lib/index.js\",\n    \"name\": \"cdk8s-cli\",\n    \"peerDependencies\": Object {},\n    \"repository\": Object {\n      \"type\": \"git\",\n      \"url\": \"https://github.com/awslabs/cdk8s.git\",\n    },\n    \"scripts\": Object {\n      \"build\": \"npx projen build\",\n      \"bump\": \"npx projen bump\",\n      \"clobber\": \"npx projen clobber\",\n      \"compile\": \"npx projen compile\",\n      \"eslint\": \"npx projen eslint\",\n      \"package\": \"npx projen package\",\n      \"projen\": \"npx projen\",\n      \"projen:upgrade\": \"npx projen projen:upgrade\",\n      \"release\": \"npx projen release\",\n      \"start\": \"npx projen start\",\n      \"test\": \"npx projen test\",\n      \"test:compile\": \"npx projen test:compile\",\n      \"test:update\": \"npx projen test:update\",\n      \"test:watch\": \"npx projen test:watch\",\n      \"watch\": \"npx projen watch\",\n    },\n    \"types\": \"lib/index.d.ts\",\n    \"version\": \"0.0.0\",\n  },\n  \"src/index.ts\": \"export class Hello {\n  public sayHello() {\n    return 'hello, world!';\n  }\n}\",\n  \"test/hello.test.ts\": \"import { Hello } from '../src';\n\ntest('hello', () => {\n  expect(new Hello().sayHello()).toBe('hello, world!');\n});\",\n  \"tsconfig.eslint.json\": Object {\n    \"compilerOptions\": Object {\n      \"alwaysStrict\": true,\n      \"declaration\": true,\n      \"experimentalDecorators\": true,\n      \"inlineSourceMap\": true,\n      \"inlineSources\": true,\n      \"lib\": Array [\n        \"es2018\",\n      ],\n      \"module\": \"CommonJS\",\n      \"noEmitOnError\": false,\n      \"noFallthroughCasesInSwitch\": true,\n      \"noImplicitAny\": true,\n      \"noImplicitReturns\": true,\n      \"noImplicitThis\": true,\n      \"noUnusedLocals\": true,\n      \"noUnusedParameters\": true,\n      \"resolveJsonModule\": true,\n      \"strict\": true,\n      \"strictNullChecks\": true,\n      \"strictPropertyInitialization\": true,\n      \"stripInternal\": true,\n      \"target\": \"ES2018\",\n    },\n    \"exclude\": Array [\n      \"node_modules\",\n    ],\n    \"include\": Array [\n      \".projenrc.js\",\n      \"src/**/*.ts\",\n      \"test/**/*.ts\",\n    ],\n  },\n  \"tsconfig.jest.json\": Object {\n    \"compilerOptions\": Object {\n      \"alwaysStrict\": true,\n      \"declaration\": true,\n      \"experimentalDecorators\": true,\n      \"inlineSourceMap\": true,\n      \"inlineSources\": true,\n      \"lib\": Array [\n        \"es2018\",\n      ],\n      \"module\": \"CommonJS\",\n      \"noEmitOnError\": false,\n      \"noFallthroughCasesInSwitch\": true,\n      \"noImplicitAny\": true,\n      \"noImplicitReturns\": true,\n      \"noImplicitThis\": true,\n      \"noUnusedLocals\": true,\n      \"noUnusedParameters\": true,\n      \"resolveJsonModule\": true,\n      \"strict\": true,\n      \"strictNullChecks\": true,\n      \"strictPropertyInitialization\": true,\n      \"stripInternal\": true,\n      \"target\": \"ES2018\",\n    },\n    \"exclude\": Array [\n      \"node_modules\",\n    ],\n    \"include\": Array [\n      \".projenrc.js\",\n      \"src/**/*.ts\",\n      \"test/**/*.ts\",\n    ],\n  },\n  \"tsconfig.json\": Object {\n    \"compilerOptions\": Object {\n      \"alwaysStrict\": true,\n      \"declaration\": true,\n      \"experimentalDecorators\": true,\n      \"inlineSourceMap\": true,\n      \"inlineSources\": true,\n      \"lib\": Array [\n        \"es2018\",\n      ],\n      \"module\": \"CommonJS\",\n      \"noEmitOnError\": false,\n      \"noFallthroughCasesInSwitch\": true,\n      \"noImplicitAny\": true,\n      \"noImplicitReturns\": true,\n      \"noImplicitThis\": true,\n      \"noUnusedLocals\": true,\n      \"noUnusedParameters\": true,\n      \"outDir\": \"lib\",\n      \"resolveJsonModule\": true,\n      \"rootDir\": \"src\",\n      \"strict\": true,\n      \"strictNullChecks\": true,\n      \"strictPropertyInitialization\": true,\n      \"stripInternal\": true,\n      \"target\": \"ES2018\",\n    },\n    \"exclude\": Array [\n      \"node_modules\",\n      \"lib\",\n    ],\n    \"include\": Array [\n      \"src/**/*.ts\",\n    ],\n  },\n  \"version.json\": Object {\n    \"version\": \"0.0.0\",\n  },\n}\n`;\n\nexports[`pnpm 1`] = `\nObject {\n  \".github/dependabot.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nversion: 2\nupdates:\n  - package-ecosystem: npm\n    versioning-strategy: lockfile-only\n    directory: /\n    schedule:\n      interval: daily\n    ignore:\n      - dependency-name: projen\n\",\n  \".github/pull_request_template.md\": \"Fixes #\",\n  \".github/workflows/build.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nname: Build\non:\n  pull_request: {}\n  workflow_dispatch: {}\njobs:\n  build:\n    runs-on: ubuntu-latest\n    env:\n      CI: \\\\\"true\\\\\"\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n      - name: Install dependencies\n        run: pnpm i --frozen-lockfile\n      - name: Synthesize project files\n        run: npx projen\n      - name: Anti-tamper check\n        run: git diff --exit-code\n      - name: Set git identity\n        run: |-\n          git config user.name \\\\\"Auto-bump\\\\\"\n          git config user.email \\\\\"github-actions@github.com\\\\\"\n      - name: Build\n        run: npx projen build\n      - name: Anti-tamper check\n        run: git diff --exit-code\n\",\n  \".github/workflows/rebuild-bot.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nname: rebuild-bot\non:\n  issue_comment:\n    types:\n      - created\n  workflow_dispatch: {}\njobs:\n  build:\n    runs-on: ubuntu-latest\n    env:\n      CI: \\\\\"true\\\\\"\n    if: \\${{ github.event.issue.pull_request && contains(github.event.comment.body,\n      '@projen rebuild') }}\n    steps:\n      - name: Post comment to issue\n        uses: peter-evans/create-or-update-comment@v1\n        with:\n          issue-number: \\${{ github.event.issue.number }}\n          body: \\\\\"_projen_: Rebuild started\\\\\"\n      - name: Get pull request branch\n        id: query_pull_request\n        env:\n          PULL_REQUEST_URL: \\${{ github.event.issue.pull_request.url }}\n        run: |-\n          rm -f /tmp/pr.json\n          curl --silent $PULL_REQUEST_URL > /tmp/pr.json\n          BRANCH_STR=$(cat /tmp/pr.json | jq \\\\\".head.ref\\\\\")\n          REPO_NAME=$(cat /tmp/pr.json | jq \\\\\".head.repo.full_name\\\\\")\n          echo \\\\\"::set-output name=branch::$(node -p $BRANCH_STR)\\\\\"\n          echo \\\\\"::set-output name=repo::$(node -p $REPO_NAME)\\\\\"\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          ref: \\${{ steps.query_pull_request.outputs.branch }}\n          repository: \\${{ steps.query_pull_request.outputs.repo }}\n      - name: Install dependencies\n        run: pnpm i --frozen-lockfile\n      - name: Synthesize project files\n        run: npx projen\n      - name: Set git identity\n        run: |-\n          git config user.name \\\\\"Auto-bump\\\\\"\n          git config user.email \\\\\"github-actions@github.com\\\\\"\n      - name: Build\n        run: npx projen build\n      - name: Commit changes\n        run: 'git commit -am \\\\\"chore: update generated files\\\\\"'\n      - name: Push commits\n        run: git push origin $BRANCH\n        env:\n          BRANCH: \\${{ steps.query_pull_request.outputs.branch }}\n      - name: Push tags\n        run: git push --follow-tags origin $BRANCH\n        env:\n          BRANCH: \\${{ steps.query_pull_request.outputs.branch }}\n      - name: Post comment to issue\n        uses: peter-evans/create-or-update-comment@v1\n        with:\n          issue-number: \\${{ github.event.issue.number }}\n          body: \\\\\"_projen_: Rebuild complete. Updates pushed to pull request branch.\\\\\"\n\",\n  \".github/workflows/release.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nname: Release\non:\n  push:\n    branches:\n      - master\n  workflow_dispatch: {}\njobs:\n  build:\n    runs-on: ubuntu-latest\n    env:\n      CI: \\\\\"true\\\\\"\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          fetch-depth: 0\n      - name: Install dependencies\n        run: pnpm i --frozen-lockfile\n      - name: Synthesize project files\n        run: npx projen\n      - name: Anti-tamper check\n        run: git diff --exit-code\n      - name: Set git identity\n        run: |-\n          git config user.name \\\\\"Auto-bump\\\\\"\n          git config user.email \\\\\"github-actions@github.com\\\\\"\n      - name: Bump to next version\n        run: npx projen bump\n      - name: Build\n        run: npx projen build\n      - name: Anti-tamper check\n        run: git diff --exit-code\n      - name: Push commits\n        run: git push origin $BRANCH\n        env:\n          BRANCH: \\${{ github.ref }}\n      - name: Push tags\n        run: git push --follow-tags origin $BRANCH\n        env:\n          BRANCH: \\${{ github.ref }}\n      - name: Upload artifact\n        uses: actions/upload-artifact@v2.1.1\n        with:\n          name: dist\n          path: dist\n\",\n  \".gitignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n*.lcov\n*.log\n*.pid\n*.pid.lock\n*.seed\n*.tgz\n*.tsbuildinfo\n.cache\n.eslintcache\n.nyc_output\n.yarn-integrity\n/coverage\n/test-reports/\nbuild/Release\ncoverage\njspm_packages/\njunit.xml\nlerna-debug.log*\nlib-cov\nlogs\nnode_modules/\nnpm-debug.log*\npids\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\nyarn-debug.log*\nyarn-error.log*\n!/.github/dependabot.yml\n!/.github/pull_request_template.md\n!/.github/workflows/build.yml\n!/.github/workflows/rebuild-bot.yml\n!/.github/workflows/release.yml\n!/.mergify.yml\n!/.npmignore\n!/.projen/deps.json\n!/.projen/tasks.json\n!/.projenrc.js\n!/.versionrc.json\n!/LICENSE\n!/package.json\n!version.json\n\",\n  \".mergify.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\npull_request_rules:\n  - name: Automatic merge on approval and successful build\n    actions:\n      merge:\n        method: squash\n        commit_message: title+body\n        strict: smart\n        strict_method: merge\n      delete_head_branch: {}\n    conditions:\n      - \\\\\"#approved-reviews-by>=1\\\\\"\n      - status-success=build\n  - name: Automatic merge PRs with auto-merge label upon successful build\n    actions:\n      merge:\n        method: squash\n        commit_message: title+body\n        strict: smart\n        strict_method: merge\n      delete_head_branch: {}\n    conditions:\n      - label=auto-merge\n      - status-success=build\n  - name: Merge pull requests from dependabot if CI passes\n    conditions:\n      - author=dependabot[bot]\n      - status-success=build\n    actions:\n      merge:\n        method: squash\n        commit_message: title+body\n        strict: smart\n        strict_method: merge\n\",\n  \".npmignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n/.mergify.yml\n/.projen\n/.projenrc.js\n/.versionrc.json\n/coverage\n/test-reports/\njunit.xml\n\",\n  \".projen/deps.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"dependencies\": Array [\n      Object {\n        \"name\": \"aws-sdk\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest-junit\",\n        \"type\": \"build\",\n        \"version\": \"^12\",\n      },\n      Object {\n        \"name\": \"projen\",\n        \"type\": \"build\",\n        \"version\": \"^999.999.999\",\n      },\n      Object {\n        \"name\": \"standard-version\",\n        \"type\": \"build\",\n        \"version\": \"^9\",\n      },\n      Object {\n        \"name\": \"esbuild\",\n        \"type\": \"runtime\",\n      },\n    ],\n  },\n  \".projen/tasks.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"env\": Object {\n      \"PATH\": \"$(npx -c \\\\\"node -e \\\\\\\\\\\\\"console.log(process.env.PATH)\\\\\\\\\\\\\"\\\\\")\",\n    },\n    \"tasks\": Object {\n      \"build\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Full release build (test+compile)\",\n        \"name\": \"build\",\n      },\n      \"bump\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Commits a bump to the package version based on conventional commits\",\n        \"name\": \"bump\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"standard-version\",\n          },\n        ],\n      },\n      \"clobber\": Object {\n        \"category\": \"30.maintain\",\n        \"condition\": \"git diff --exit-code > /dev/null\",\n        \"description\": \"hard resets to HEAD of origin and cleans the local repo\",\n        \"env\": Object {\n          \"BRANCH\": \"$(git branch --show-current)\",\n        },\n        \"name\": \"clobber\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"git checkout -b scratch\",\n            \"name\": \"save current HEAD in \\\\\"scratch\\\\\" branch\",\n          },\n          Object {\n            \"exec\": \"git checkout $BRANCH\",\n          },\n          Object {\n            \"exec\": \"git fetch origin\",\n            \"name\": \"fetch latest changes from origin\",\n          },\n          Object {\n            \"exec\": \"git reset --hard origin/$BRANCH\",\n            \"name\": \"hard reset to origin commit\",\n          },\n          Object {\n            \"exec\": \"git clean -fdx\",\n            \"name\": \"clean all untracked files\",\n          },\n          Object {\n            \"say\": \"ready to rock! (unpushed commits are under the \\\\\"scratch\\\\\" branch)\",\n          },\n        ],\n      },\n      \"compile\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Only compile\",\n        \"name\": \"compile\",\n      },\n      \"projen:upgrade\": Object {\n        \"category\": \"30.maintain\",\n        \"description\": \"upgrades projen to the latest version\",\n        \"name\": \"projen:upgrade\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"yarn upgrade -L projen\",\n          },\n          Object {\n            \"exec\": \"CI=\\\\\"\\\\\" yarn projen\",\n          },\n        ],\n      },\n      \"release\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Bumps version & push to master\",\n        \"name\": \"release\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"bump\",\n          },\n          Object {\n            \"exec\": \"git push --follow-tags origin master\",\n          },\n        ],\n      },\n      \"test\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run tests\",\n        \"name\": \"test\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"test:compile\",\n          },\n          Object {\n            \"exec\": \"jest --passWithNoTests --all --updateSnapshot\",\n          },\n        ],\n      },\n      \"test:compile\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"compiles the test code\",\n        \"name\": \"test:compile\",\n      },\n      \"test:update\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Update jest snapshots\",\n        \"name\": \"test:update\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --updateSnapshot\",\n          },\n        ],\n      },\n      \"test:watch\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run jest in watch mode\",\n        \"name\": \"test:watch\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --watch\",\n          },\n        ],\n      },\n    },\n  },\n  \".projenrc.js\": \"const { NodeProject, NodePackageManager } = require(\\\\\"projen\\\\\");\n\nconst project = new NodeProject({\n  name: \\\\\"pnpm-project\\\\\",\n\n  packageManager: NodePackageManager.PNPM,\n  defaultReleaseBranch: 'master',\n\n  deps: [\\\\\"esbuild\\\\\"],\n\n  devDeps: [\\\\\"aws-sdk\\\\\"],\n});\n\nproject.synth();\n\",\n  \".versionrc.json\": Object {\n    \"bumpFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"commitAll\": true,\n    \"packageFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"scripts\": Object {\n      \"postbump\": \"npx projen && git add .\",\n    },\n  },\n  \"LICENSE\": \"                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \\\\\"License\\\\\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \\\\\"Licensor\\\\\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \\\\\"Legal Entity\\\\\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \\\\\"control\\\\\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \\\\\"You\\\\\" (or \\\\\"Your\\\\\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \\\\\"Source\\\\\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \\\\\"Object\\\\\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \\\\\"Work\\\\\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \\\\\"Derivative Works\\\\\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \\\\\"Contribution\\\\\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \\\\\"submitted\\\\\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \\\\\"Not a Contribution.\\\\\"\n\n      \\\\\"Contributor\\\\\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \\\\\"NOTICE\\\\\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \\\\\"AS IS\\\\\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \\\\\"[]\\\\\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \\\\\"printed page\\\\\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2021 \n\n   Licensed under the Apache License, Version 2.0 (the \\\\\"License\\\\\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \\\\\"AS IS\\\\\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\",\n  \"README.md\": \"# replace this\",\n  \"package.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"bundledDependencies\": Array [],\n    \"dependencies\": Object {\n      \"esbuild\": \"*\",\n    },\n    \"devDependencies\": Object {\n      \"aws-sdk\": \"*\",\n      \"jest\": \"*\",\n      \"jest-junit\": \"^12\",\n      \"projen\": \"^999.999.999\",\n      \"standard-version\": \"^9\",\n    },\n    \"jest\": Object {\n      \"clearMocks\": true,\n      \"collectCoverage\": true,\n      \"coverageDirectory\": \"coverage\",\n      \"coveragePathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n      \"coverageReporters\": Array [\n        \"json\",\n        \"lcov\",\n        \"clover\",\n        \"text\",\n      ],\n      \"reporters\": Array [\n        \"default\",\n        Array [\n          \"jest-junit\",\n          Object {\n            \"outputDirectory\": \"test-reports\",\n          },\n        ],\n      ],\n      \"testMatch\": Array [\n        \"**/__tests__/**/*.[jt]s?(x)\",\n        \"**/?(*.)+(spec|test).[tj]s?(x)\",\n      ],\n      \"testPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n      \"watchPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n    },\n    \"license\": \"Apache-2.0\",\n    \"main\": \"lib/index.js\",\n    \"name\": \"pnpm-project\",\n    \"peerDependencies\": Object {},\n    \"scripts\": Object {\n      \"build\": \"npx projen build\",\n      \"bump\": \"npx projen bump\",\n      \"clobber\": \"npx projen clobber\",\n      \"compile\": \"npx projen compile\",\n      \"projen\": \"npx projen\",\n      \"projen:upgrade\": \"npx projen projen:upgrade\",\n      \"release\": \"npx projen release\",\n      \"start\": \"npx projen start\",\n      \"test\": \"npx projen test\",\n      \"test:compile\": \"npx projen test:compile\",\n      \"test:update\": \"npx projen test:update\",\n      \"test:watch\": \"npx projen test:watch\",\n    },\n    \"version\": \"0.0.0\",\n  },\n  \"version.json\": Object {\n    \"version\": \"0.0.0\",\n  },\n}\n`;\n", "import { PROJEN_DIR, PROJEN_RC, PROJEN_VERSION } from './common';\nimport { GithubWorkflow } from './github';\nimport { AutoMerge } from './github/auto-merge';\nimport { DependabotOptions } from './github/dependabot';\nimport { MergifyOptions } from './github/mergify';\nimport { IgnoreFile } from './ignore-file';\nimport { Jest, JestOptions } from './jest';\nimport { License } from './license';\nimport { NodePackage, NpmTaskExecution, NodePackageManager, NodePackageOptions } from './node-package';\nimport { Project, ProjectOptions } from './project';\nimport { ProjenUpgrade } from './projen-upgrade';\nimport { Publisher } from './publisher';\nimport { Semver } from './semver';\nimport { Task, TaskCategory } from './tasks';\nimport { Version } from './version';\n\nconst PROJEN_SCRIPT = 'projen';\n\nexport interface NodeProjectOptions extends ProjectOptions, NodePackageOptions {\n  /**\n   * License copyright owner.\n   *\n   * @default - defaults to the value of authorName or \"\" if `authorName` is undefined.\n   */\n  readonly copyrightOwner?: string;\n\n  /**\n   * The copyright years to put in the LICENSE file.\n   *\n   * @default - current year\n   */\n  readonly copyrightPeriod?: string;\n\n\n  /**\n   * Version of projen to install.\n   *\n   * @default Semver.latest()\n   */\n  readonly projenVersion?: Semver;\n\n  /**\n   * Indicates of \"projen\" should be installed as a devDependency.\n   *\n   * @default true\n   */\n  readonly projenDevDependency?: boolean;\n\n  /**\n   * The name of the main release branch.\n   *\n   * NOTE: this field is temporarily required as we migrate the default value\n   * from \"master\" to \"main\". Shortly, it will be made optional with \"main\" as\n   * the default.\n   *\n   * @default \"main\"\n   */\n  readonly defaultReleaseBranch: string;\n\n  /**\n   * Define a GitHub workflow for building PRs.\n   * @default - true if not a subproject\n   */\n  readonly buildWorkflow?: boolean;\n\n  /**\n   * Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/\n   * Uses codecov/codecov-action@v1\n   * A secret is required for private repos. Configured with @codeCovTokenSecret\n   * @default false\n   */\n  readonly codeCov?: boolean;\n\n  /**\n   * Define the secret name for a specified https://codecov.io/ token\n   * A secret is required to send coverage for private repositories\n   * @default - if this option is not specified, only public repositories are supported\n   */\n  readonly codeCovTokenSecret?: string;\n\n  /**\n   * Define a GitHub workflow for releasing from \"main\" when new versions are\n   * bumped. Requires that `version` will be undefined.\n   *\n   * @default - true if not a subproject\n   */\n  readonly releaseWorkflow?: boolean;\n\n  /**\n   * Automatically release new versions every commit to one of branches in `releaseBranches`.\n   * @default true\n   */\n  readonly releaseEveryCommit?: boolean;\n\n  /**\n   * CRON schedule to trigger new releases.\n   *\n   * @default - no scheduled releases\n   */\n  readonly releaseSchedule?: string;\n\n  /**\n   * Branches which trigger a release.\n   *\n   * Default value is based on defaultReleaseBranch.\n   *\n   * @default [ \"main\" ]\n   */\n  readonly releaseBranches?: string[];\n\n  /**\n   * Workflow steps to use in order to bootstrap this repo.\n   *\n   * @default \"yarn install --frozen-lockfile && yarn projen\"\n   */\n  readonly workflowBootstrapSteps?: any[];\n\n  /**\n   * Container image to use for GitHub workflows.\n   *\n   * @default - default image\n   */\n  readonly workflowContainerImage?: string;\n\n  /**\n   * Automatically release to npm when new versions are introduced.\n   * @default false\n   */\n  readonly releaseToNpm?: boolean;\n\n  /**\n   * Checks that after build there are no modified files on git.\n   * @default true\n   */\n  readonly antitamper?: boolean;\n\n  /**\n   * The node version to use in GitHub workflows.\n   *\n   * @default - same as `minNodeVersion`\n   */\n  readonly workflowNodeVersion?: string;\n\n  /**\n   * Include dependabot configuration.\n   *\n   * @default true\n   */\n  readonly dependabot?: boolean;\n\n  /**\n   * Options for dependabot.\n   *\n   * @default - default options\n   */\n  readonly dependabotOptions?: DependabotOptions;\n\n  /**\n   * Adds mergify configuration.\n   *\n   * @default true\n   */\n  readonly mergify?: boolean;\n\n  /**\n   * Options for mergify\n   *\n   * @default - default options\n   */\n  readonly mergifyOptions?: MergifyOptions;\n\n  /**\n   * Automatically merge PRs that build successfully and have this label.\n   *\n   * To disable, set this value to an empty string.\n   *\n   * @default \"auto-merge\"\n   */\n  readonly mergifyAutoMergeLabel?: string;\n\n  /**\n   * Periodically submits a pull request for projen upgrades (executes `yarn\n   * projen:upgrade`).\n   *\n   * This setting is a GitHub secret name which contains a GitHub Access Token\n   * with `repo` and `workflow` permissions.\n   *\n   * This token is used to submit the upgrade pull request, which will likely\n   * include workflow updates.\n   *\n   * To create a personal access token see https://github.com/settings/tokens\n   *\n   * @default - no automatic projen upgrade pull requests\n   */\n  readonly projenUpgradeSecret?: string;\n\n  /**\n   * Automatically merge projen upgrade PRs when build passes.\n   * Applies the `mergifyAutoMergeLabel` to the PR if enabled.\n   *\n   * @default - \"true\" if mergify auto-merge is enabled (default)\n   */\n  readonly projenUpgradeAutoMerge?: boolean;\n\n  /**\n   * Customize the projenUpgrade schedule in cron expression.\n   *\n   @default [ \"0 6 * * *\" ]\n   */\n  readonly projenUpgradeSchedule?: string[];\n\n\n  /**\n   * Defines an .npmignore file. Normally this is only needed for libraries that\n   * are packaged as tarballs.\n   *\n   * @default true\n   */\n  readonly npmignoreEnabled?: boolean;\n\n  /**\n   * Additional entries to .npmignore\n   */\n  readonly npmignore?: string[];\n\n  /**\n   * Include a GitHub pull request template.\n   *\n   * @default true\n   */\n  readonly pullRequestTemplate?: boolean;\n\n  /**\n   * The contents of the pull request template.\n   *\n   * @default - default content\n   */\n  readonly pullRequestTemplateContents?: string;\n\n  /**\n   * Installs a GitHub workflow which is triggered when the comment \"@projen\n   * rebuild\" is added to a pull request. The workflow will run a full build and\n   * commit the changes to the pull request branch. This is useful for updating\n   * test snapshots and other generated files like API.md.\n   *\n   * @default - true if not a subproject\n   */\n  readonly rebuildBot?: boolean;\n\n  /**\n   * The pull request bot command to use in order to trigger a rebuild and\n   * commit of the contents of the branch. The command must be prefixed by \"@projen\", e.g. \"@projen rebuild\"\n   * `gh pr review $pr --comment -b \"@projen rebuild\"`\n   *\n   * @default \"rebuild\"\n   */\n  readonly rebuildBotCommand?: string;\n\n  /**\n   * Additional entries to .gitignore\n   */\n  readonly gitignore?: string[];\n\n  /**\n   * Setup jest unit tests\n   * @default true\n   */\n  readonly jest?: boolean;\n\n  /**\n   * Jest options\n   * @default - default options\n   */\n  readonly jestOptions?: JestOptions;\n\n  /**\n   * Version requirement of `jsii-release` which is used to publish modules to npm.\n   * @default \"latest\"\n   */\n  readonly jsiiReleaseVersion?: string;\n\n  /**\n   * A directory which will contain artifacts to be published to npm.\n   *\n   * @default \"dist\"\n   */\n  readonly artifactsDirectory?: string;\n}\n\n/**\n * Automatic bump modes\n */\nexport enum AutoRelease {\n  /**\n   * Automatically bump & release a new version for every commit to \"main\"\n   */\n  EVERY_COMMIT,\n\n  /**\n   * Automatically bump & release a new version on a daily basis.\n   */\n  DAILY\n}\n\n/**\n * Node.js project\n */\nexport class NodeProject extends Project {\n  /**\n   * API for managing the node package.\n   */\n  public readonly package: NodePackage;\n\n  /**\n   * The .npmignore file.\n   */\n  public readonly npmignore?: IgnoreFile;\n\n  /**\n   * @deprecated use `package.allowLibraryDependencies`\n   */\n  public get allowLibraryDependencies(): boolean { return this.package.allowLibraryDependencies; }\n\n  /**\n   * @deprecated use `package.entrypoint`\n   */\n  public get entrypoint(): string { return this.package.entrypoint; }\n\n  /**\n   * Compiles the code. By default for node.js projects this task is empty.\n   */\n  public readonly compileTask: Task;\n\n  /**\n   * Tests the code.\n   */\n  public readonly testTask: Task;\n\n  /**\n   * Compiles the test code.\n   */\n  public readonly testCompileTask: Task;\n\n  /**\n   * The task responsible for a full release build. It spawns: compile + test + release + package\n   */\n  public readonly buildTask: Task;\n\n  /**\n   * Automatic PR merges.\n   */\n  public readonly autoMerge?: AutoMerge;\n\n  private readonly _version: Version;\n\n  /**\n   * The PR build GitHub workflow. `undefined` if `buildWorkflow` is disabled.\n   */\n  protected readonly buildWorkflow?: GithubWorkflow;\n  protected readonly buildWorkflowJobId?: string;\n\n  /**\n   * The release GitHub workflow. `undefined` if `releaseWorkflow` is disabled.\n   */\n  public readonly releaseWorkflow?: GithubWorkflow;\n\n  /**\n   * Package publisher. This will be `undefined` if the project does not have a\n   * release workflow.\n   */\n  public readonly publisher?: Publisher;\n\n  /**\n   * Minimum node.js version required by this package.\n   */\n  public get minNodeVersion(): string | undefined { return this.package.minNodeVersion; }\n\n  /**\n   * Maximum node version required by this pacakge.\n   */\n  public get maxNodeVersion(): string | undefined { return this.package.maxNodeVersion; }\n\n  private readonly nodeVersion?: string;\n\n  /**\n   * Indicates if workflows have anti-tamper checks.\n   */\n  public readonly antitamper: boolean;\n\n  /**\n   * @deprecated use `package.npmDistTag`\n   */\n  protected readonly npmDistTag: string;\n\n  /**\n   * @deprecated use `package.npmRegistry`\n   */\n  protected readonly npmRegistry: string;\n\n  /**\n   * The package manager to use.\n   *\n   * @deprecated use `package.packageManager`\n   */\n  public get packageManager(): NodePackageManager { return this.package.packageManager; }\n\n  /**\n   * The command to use to run scripts (e.g. `yarn run` or `npm run` depends on the package manager).\n   */\n  public readonly runScriptCommand: string;\n\n  /**\n   * The Jest configuration (if enabled)\n   */\n  public readonly jest?: Jest;\n\n  /**\n   * Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).\n   *\n   * @deprecated use `package.npmTaskExecution`\n   */\n  public get npmTaskExecution(): NpmTaskExecution { return this.package.npmTaskExecution; }\n\n  /**\n   * The command to use in order to run the projen CLI.\n   */\n  public get projenCommand(): string { return this.package.projenCommand; }\n\n  /**\n   * @deprecated use `package.addField(x, y)`\n   */\n  public get manifest() {\n    return this.package.manifest;\n  }\n\n  constructor(options: NodeProjectOptions) {\n    super(options);\n\n    this.package = new NodePackage(this, options);\n\n    this.runScriptCommand = (() => {\n      switch (this.packageManager) {\n        case NodePackageManager.NPM: return 'npm run';\n        case NodePackageManager.YARN: return 'yarn run';\n        case NodePackageManager.PNPM: return 'pnpm run';\n        default: throw new Error(`unexpected package manager ${this.packageManager}`);\n      }\n    })();\n\n    this.nodeVersion = options.workflowNodeVersion ?? this.package.minNodeVersion;\n\n    // add PATH for all tasks which includes the project's npm .bin list\n    this.tasks.addEnvironment('PATH', '$(npx -c \"node -e \\\\\\\"console.log(process.env.PATH)\\\\\\\"\")');\n\n    this.compileTask = this.addTask('compile', {\n      description: 'Only compile',\n      category: TaskCategory.BUILD,\n    });\n\n    this.testCompileTask = this.addTask('test:compile', {\n      description: 'compiles the test code',\n      category: TaskCategory.TEST,\n    });\n\n    this.testTask = this.addTask('test', {\n      description: 'Run tests',\n      category: TaskCategory.TEST,\n    });\n\n    this.testTask.spawn(this.testCompileTask);\n\n    this.buildTask = this.addTask('build', {\n      description: 'Full release build (test+compile)',\n      category: TaskCategory.BUILD,\n    });\n\n    this.addLicense(options);\n\n    this.npmDistTag = this.package.npmDistTag;\n    this.npmRegistry = this.package.npmRegistry;\n\n    if (options.npmignoreEnabled ?? true) {\n      this.npmignore = new IgnoreFile(this, '.npmignore');\n    }\n\n    this.addDefaultGitIgnore();\n\n    if (options.gitignore?.length) {\n      for (const i of options.gitignore) {\n        this.gitignore.exclude(i);\n      }\n    }\n\n    if (options.npmignore?.length) {\n      if (!this.npmignore) {\n        throw new Error('.npmignore is not defined for an APP project type. Add \"npmIgnore: true\" to override this');\n      }\n\n      for (const i of options.npmignore) {\n        this.npmignore.exclude(i);\n      }\n    }\n\n\n    this.setScript(PROJEN_SCRIPT, this.package.projenCommand);\n    this.setScript('start', `${this.package.projenCommand} start`);\n\n    this.npmignore?.exclude(`/${PROJEN_RC}`);\n    this.npmignore?.exclude(`/${PROJEN_DIR}`);\n    this.gitignore.include(`/${PROJEN_RC}`);\n\n\n    const projen = options.projenDevDependency ?? true;\n    if (projen) {\n      const projenVersion = options.projenVersion ?? `^${PROJEN_VERSION}`;\n      this.addDevDeps(`projen@${projenVersion}`);\n    }\n\n    if (!options.defaultReleaseBranch) {\n      throw new Error('\"defaultReleaseBranch\" is temporarily a required option while we migrate its default value from \"master\" to \"main\"');\n    }\n\n    const defaultReleaseBranch = options.defaultReleaseBranch ?? 'main';\n\n    // version is read from a committed file called version.json which is how we bump\n    this._version = new Version(this, { releaseBranch: defaultReleaseBranch });\n    this.package.addVersion(this._version.currentVersion);\n\n    // indicate if we have anti-tamper configured in our workflows. used by e.g. Jest\n    // to decide if we can always run with --updateSnapshot\n    this.antitamper = (options.buildWorkflow ?? (this.parent ? false : true)) && (options.antitamper ?? true);\n\n    // configure jest if enabled\n    // must be before the build/release workflows\n    if (options.jest ?? true) {\n      this.jest = new Jest(this, options.jestOptions);\n    }\n\n    if (options.buildWorkflow ?? (this.parent ? false : true)) {\n      const { workflow, buildJobId } = this.createBuildWorkflow('Build', {\n        trigger: {\n          pull_request: { },\n        },\n        image: options.workflowContainerImage,\n        codeCov: options.codeCov ?? false,\n        codeCovTokenSecret: options.codeCovTokenSecret,\n      });\n\n      this.buildWorkflow = workflow;\n      this.buildWorkflowJobId = buildJobId;\n    }\n\n    if (options.releaseWorkflow ?? (this.parent ? false : true)) {\n      const releaseBranches = options.releaseBranches ?? [defaultReleaseBranch];\n\n      const trigger: { [event: string]: any } = { };\n\n      if (options.releaseEveryCommit ?? true) {\n        trigger.push = { branches: releaseBranches };\n      }\n\n      if (options.releaseSchedule) {\n        trigger.schedule = { cron: options.releaseSchedule };\n      }\n\n      const artifactDirectory = options.artifactsDirectory ?? 'dist';\n\n      const { workflow, buildJobId } = this.createBuildWorkflow('Release', {\n        trigger,\n        preBuildSteps: [{\n          name: 'Bump to next version',\n          run: this.runTaskCommand(this._version.bumpTask),\n        }],\n        pushBranch: '${{ github.ref }}',\n        artifactDirectory,\n        image: options.workflowContainerImage,\n        codeCov: options.codeCov ?? false,\n        codeCovTokenSecret: options.codeCovTokenSecret,\n        checkoutWith: {\n          // we must use 'fetch-depth=0' in order to fetch all tags\n          // otherwise tags are not checked out\n          'fetch-depth': 0,\n        },\n      });\n\n      this.releaseWorkflow = workflow;\n\n      this.publisher = new Publisher(this, {\n        workflow: this.releaseWorkflow,\n        artifactName: artifactDirectory,\n        buildJobId,\n        jsiiReleaseVersion: options.jsiiReleaseVersion,\n      });\n\n      if (options.releaseToNpm ?? false) {\n        this.publisher.publishToNpm({\n          distTag: this.package.npmDistTag,\n          registry: this.package.npmRegistry,\n        });\n      }\n    } else {\n      // validate that no release options are selected if the release workflow is disabled.\n      if (options.releaseToNpm) {\n        throw new Error('\"releaseToNpm\" is not supported for APP projects');\n      }\n\n      if (options.releaseBranches) {\n        throw new Error('\"releaseBranches\" is not supported for APP projects');\n      }\n\n      if (options.releaseEveryCommit) {\n        throw new Error('\"releaseEveryCommit\" is not supported for APP projects');\n      }\n\n      if (options.releaseSchedule) {\n        throw new Error('\"releaseSchedule\" is not supported for APP projects');\n      }\n    }\n\n    if (options.mergify ?? true) {\n      this.autoMerge = new AutoMerge(this, {\n        autoMergeLabel: options.mergifyAutoMergeLabel,\n        buildJob: this.buildWorkflowJobId,\n      });\n\n      this.npmignore?.exclude('/.mergify.yml');\n    }\n\n    if (options.dependabot ?? true) {\n      this.github?.addDependabot(options.dependabotOptions);\n    }\n\n    const projenAutoMerge = options.projenUpgradeAutoMerge ?? true;\n    new ProjenUpgrade(this, {\n      autoUpgradeSecret: options.projenUpgradeSecret,\n      autoUpgradeSchedule: options.projenUpgradeSchedule,\n      labels: (projenAutoMerge && this.autoMerge?.autoMergeLabel)\n        ? [this.autoMerge.autoMergeLabel]\n        : [],\n    });\n\n    if (options.pullRequestTemplate ?? true) {\n      this.github?.addPullRequestTemplate(...options.pullRequestTemplateContents ?? []);\n    }\n\n    if (options.rebuildBot ?? (this.parent ? false : true)) {\n      this.addRebuildBot(options.rebuildBotCommand ?? 'rebuild');\n    }\n\n  }\n\n  public addBins(bins: Record<string, string>) {\n    this.package.addBin(bins);\n  }\n\n  /**\n   * Replaces the contents of an npm package.json script.\n   *\n   * @param name The script name\n   * @param command The command to execute\n   */\n  public setScript(name: string, command: string) {\n    this.package.setScript(name, command);\n  }\n\n  /**\n   * Removes the npm script (always successful).\n   * @param name The name of the script.\n   */\n  public removeScript(name: string) {\n    this.package.removeScript(name);\n  }\n\n  /**\n   * Indicates if a script by the name name is defined.\n   * @param name The name of the script\n   */\n  public hasScript(name: string) {\n    return this.package.hasScript(name);\n  }\n\n  /**\n   * DEPRECATED\n   * @deprecated use `project.compileTask.exec()`\n   */\n  public addCompileCommand(...commands: string[]) {\n    for (const c of commands) {\n      this.compileTask.exec(c);\n    }\n  }\n\n  /**\n   * DEPRECATED\n   * @deprecated use `project.testTask.exec()`\n   */\n  public addTestCommand(...commands: string[]) {\n    for (const c of commands) {\n      this.testTask.exec(c);\n    }\n  }\n\n  /**\n   * DEPRECATED\n   * @deprecated use `project.buildTask.exec()`\n   */\n  public addBuildCommand(...commands: string[]) {\n    for (const c of commands) {\n      this.buildTask.exec(c);\n    }\n  }\n\n  /**\n   * Directly set fields in `package.json`.\n   * @param fields The fields to set\n   */\n  public addFields(fields: { [name: string]: any }) {\n    for (const [name, value] of Object.entries(fields)) {\n      this.package.addField(name, value);\n    }\n  }\n\n  /**\n   * Adds keywords to package.json (deduplicated)\n   * @param keywords The keywords to add\n   */\n  public addKeywords(...keywords: string[]) {\n    this.package.addKeywords(...keywords);\n  }\n\n  public get installWorkflowSteps(): any[] {\n    const install = new Array();\n    if (this.nodeVersion) {\n      install.push({\n        name: 'Setup Node.js',\n        uses: 'actions/setup-node@v1',\n        with: { 'node-version': this.nodeVersion },\n      });\n    }\n\n    install.push({\n      name: 'Install dependencies',\n      run: this.package.installCommand,\n    });\n\n    // run \"projen\"\n    install.push({\n      name: 'Synthesize project files',\n      run: this.package.projenCommand,\n    });\n\n    return install;\n  }\n\n  /**\n   * Defines normal dependencies.\n   *\n   * @param deps Names modules to install. By default, the the dependency will\n   * be installed in the next `npx projen` run and the version will be recorded\n   * in your `package.json` file. You can upgrade manually or using `yarn\n   * add/upgrade`. If you wish to specify a version range use this syntax:\n   * `module@^7`.\n   */\n  public addDeps(...deps: string[]) {\n    return this.package.addDeps(...deps);\n  }\n\n  /**\n   * Defines development/test dependencies.\n   *\n   * @param deps Names modules to install. By default, the the dependency will\n   * be installed in the next `npx projen` run and the version will be recorded\n   * in your `package.json` file. You can upgrade manually or using `yarn\n   * add/upgrade`. If you wish to specify a version range use this syntax:\n   * `module@^7`.\n   */\n  public addDevDeps(...deps: string[]) {\n    return this.package.addDevDeps(...deps);\n  }\n\n  /**\n   * Defines peer dependencies.\n   *\n   * When adding peer dependencies, a devDependency will also be added on the\n   * pinned version of the declared peer. This will ensure that you are testing\n   * your code against the minimum version required from your consumers.\n   *\n   * @param deps Names modules to install. By default, the the dependency will\n   * be installed in the next `npx projen` run and the version will be recorded\n   * in your `package.json` file. You can upgrade manually or using `yarn\n   * add/upgrade`. If you wish to specify a version range use this syntax:\n   * `module@^7`.\n   */\n  public addPeerDeps(...deps: string[]) {\n    return this.package.addPeerDeps(...deps);\n  }\n\n  /**\n   * Defines bundled dependencies.\n   *\n   * Bundled dependencies will be added as normal dependencies as well as to the\n   * `bundledDependencies` section of your `package.json`.\n   *\n   * @param deps Names modules to install. By default, the the dependency will\n   * be installed in the next `npx projen` run and the version will be recorded\n   * in your `package.json` file. You can upgrade manually or using `yarn\n   * add/upgrade`. If you wish to specify a version range use this syntax:\n   * `module@^7`.\n   */\n  public addBundledDeps(...deps: string[]) {\n    return this.package.addBundledDeps(...deps);\n  }\n\n  private addLicense(options: NodeProjectOptions) {\n    if (this.package.license) {\n      new License(this, this.package.license, {\n        copyrightOwner: options.copyrightOwner ?? options.authorName,\n        copyrightPeriod: options.copyrightPeriod,\n      });\n    }\n  }\n\n  private addDefaultGitIgnore() {\n    this.gitignore.exclude(\n      '# Logs',\n      'logs',\n      '*.log',\n      'npm-debug.log*',\n      'yarn-debug.log*',\n      'yarn-error.log*',\n      'lerna-debug.log*',\n\n      '# Diagnostic reports (https://nodejs.org/api/report.html)',\n      'report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json',\n\n      '# Runtime data',\n      'pids',\n      '*.pid',\n      '*.seed',\n      '*.pid.lock',\n\n      '# Directory for instrumented libs generated by jscoverage/JSCover',\n      'lib-cov',\n\n      '# Coverage directory used by tools like istanbul',\n      'coverage',\n      '*.lcov',\n\n      '# nyc test coverage',\n      '.nyc_output',\n\n      '# Compiled binary addons (https://nodejs.org/api/addons.html)',\n      'build/Release',\n\n      '# Dependency directories',\n      'node_modules/',\n      'jspm_packages/',\n\n      '# TypeScript cache',\n      '*.tsbuildinfo',\n\n\n      '# Optional eslint cache',\n      '.eslintcache',\n\n      '# Output of \\'npm pack\\'',\n      '*.tgz',\n\n      '# Yarn Integrity file',\n      '.yarn-integrity',\n\n      '# parcel-bundler cache (https://parceljs.org/)',\n      '.cache',\n    );\n  }\n\n  private createBuildWorkflow(name: string, options: NodeBuildWorkflowOptions): BuildWorkflow {\n    const buildJobId = 'build';\n\n    const github = this.github;\n    if (!github) { throw new Error('no github support'); }\n\n    const workflow = github.addWorkflow(name);\n\n    workflow.on(options.trigger);\n\n    workflow.on({\n      workflow_dispatch: {}, // allow manual triggering\n    });\n\n    const condition = options.condition ? { if: options.condition } : {};\n    const preBuildSteps = options.preBuildSteps ?? [];\n    const preCheckoutSteps = options.preCheckoutSteps ?? [];\n    const checkoutWith = options.checkoutWith ? { with: options.checkoutWith } : {};\n    const postSteps = options.postSteps ?? [];\n\n    const antitamperSteps = (options.antitamperDisabled || !this.antitamper) ? [] : [{\n      name: 'Anti-tamper check',\n      run: 'git diff --exit-code',\n    }];\n\n    const commitChanges = !options.commit ? [] : [{\n      name: 'Commit changes',\n      run: `git commit -am \"${options.commit}\"`,\n    }];\n\n    const pushChanges = !options.pushBranch ? [] : [\n      {\n        name: 'Push commits',\n        run: 'git push origin $BRANCH',\n        env: {\n          BRANCH: options.pushBranch,\n        },\n      },\n\n      // push tags only after we've managed to push our commits in order to\n      // avoid tags being pushed but commits being rejected due to new commits\n      // see https://github.com/projen/projen/issues/553\n      {\n        name: 'Push tags',\n        run: 'git push --follow-tags origin $BRANCH',\n        env: {\n          BRANCH: options.pushBranch,\n        },\n      },\n    ];\n\n    const job: any = {\n      'runs-on': 'ubuntu-latest',\n      'env': {\n        CI: 'true', // will cause `NodeProject` to execute `yarn install` with `--frozen-lockfile`\n      },\n      ...condition,\n      'steps': [\n        ...preCheckoutSteps,\n\n        // check out sources.\n        {\n          name: 'Checkout',\n          uses: 'actions/checkout@v2',\n          ...checkoutWith,\n        },\n\n        // install dependencies\n        ...this.installWorkflowSteps,\n\n        // perform an anti-tamper check immediately after we run projen.\n        ...antitamperSteps,\n\n        // sets git identity so we can push later\n        {\n          name: 'Set git identity',\n          run: [\n            'git config user.name \"Auto-bump\"',\n            'git config user.email \"github-actions@github.com\"',\n          ].join('\\n'),\n        },\n\n        // if there are changes, creates a bump commit\n\n        ...preBuildSteps,\n\n        // build (compile + test)\n        {\n          name: 'Build',\n          run: this.runTaskCommand(this.buildTask),\n        },\n\n        // run codecov if enabled or a secret token name is passed in\n        // AND jest must be configured\n        ...(options.codeCov || options.codeCovTokenSecret) && this.jest?.config ? [{\n          name: 'Upload coverage to Codecov',\n          uses: 'codecov/codecov-action@v1',\n          with: options.codeCovTokenSecret ? {\n            token: `\\${{ secrets.${options.codeCovTokenSecret} }}`,\n            directory: this.jest.config.coverageDirectory,\n          } : {\n            directory: this.jest.config.coverageDirectory,\n          },\n        }] : [],\n\n        // anti-tamper check (fails if there were changes to committed files)\n        // this will identify any non-committed files generated during build (e.g. test snapshots)\n        ...antitamperSteps,\n\n        // if required, commit changes to the repo\n        ...commitChanges,\n\n        // push bump commit\n        ...pushChanges,\n\n        ...postSteps,\n      ],\n    };\n\n    if (options.image) {\n      job.container = { image: options.image };\n    }\n\n    if (options.artifactDirectory) {\n      job.steps.push({\n        name: 'Upload artifact',\n        uses: 'actions/upload-artifact@v2.1.1',\n        with: {\n          name: options.artifactDirectory,\n          path: options.artifactDirectory,\n        },\n      });\n    }\n\n    workflow.addJobs({ [buildJobId]: job });\n\n    return { workflow, buildJobId };\n  }\n\n  /**\n   * Returns the shell command to execute in order to run a task. If\n   * npmTaskExecution is set to PROJEN, the command will be `npx projen TASK`.\n   * If it is set to SHELL, the command will be `yarn run TASK` (or `npm run\n   * TASK`).\n   *\n   * @param task The task for which the command is required\n   */\n  public runTaskCommand(task: Task) {\n    switch (this.package.npmTaskExecution) {\n      case NpmTaskExecution.PROJEN: return `${this.package.projenCommand} ${task.name}`;\n      case NpmTaskExecution.SHELL: return `${this.runScriptCommand} ${task.name}`;\n      default:\n        throw new Error(`invalid npmTaskExecution mode: ${this.package.npmTaskExecution}`);\n    }\n  }\n\n  private addRebuildBot(command: string) {\n\n    const postComment = (message: string) => ({\n      name: 'Post comment to issue',\n      uses: 'peter-evans/create-or-update-comment@v1',\n      with: {\n        'issue-number': '${{ github.event.issue.number }}',\n        'body': `_projen_: ${message}`,\n      },\n    });\n\n    this.createBuildWorkflow('rebuild-bot', {\n      trigger: { issue_comment: { types: ['created'] } },\n      condition: `\\${{ github.event.issue.pull_request && contains(github.event.comment.body, '@projen ${command}') }}`,\n      antitamperDisabled: true, // definitely do not want that\n\n      // since the \"issue_comment\" event is not triggered on a branch, we need to resolve\n      // the git ref of the pull request before we check out\n      preCheckoutSteps: [\n        postComment('Rebuild started'),\n        {\n          name: 'Get pull request branch',\n          id: 'query_pull_request',\n          env: { PULL_REQUEST_URL: '${{ github.event.issue.pull_request.url }}' },\n          run: [\n            'rm -f /tmp/pr.json',\n            'curl --silent $PULL_REQUEST_URL > /tmp/pr.json',\n            'BRANCH_STR=$(cat /tmp/pr.json | jq \".head.ref\")',\n            'REPO_NAME=$(cat /tmp/pr.json | jq \".head.repo.full_name\")',\n            'echo \"::set-output name=branch::$(node -p $BRANCH_STR)\"',\n            'echo \"::set-output name=repo::$(node -p $REPO_NAME)\"',\n          ].join('\\n'),\n        },\n      ],\n\n      // tell checkout to use the branch we acquired at the previous step\n      checkoutWith: {\n        ref: '${{ steps.query_pull_request.outputs.branch }}',\n        repository: '${{ steps.query_pull_request.outputs.repo }}',\n      },\n\n      // commit changes\n      commit: 'chore: update generated files',\n\n      // and push to the pull request branch\n      pushBranch: '${{ steps.query_pull_request.outputs.branch }}',\n\n      postSteps: [\n        postComment('Rebuild complete. Updates pushed to pull request branch.'),\n      ],\n    });\n  }\n}\n\ninterface BuildWorkflow {\n  readonly workflow: GithubWorkflow;\n  readonly buildJobId: string;\n}\n\ninterface NodeBuildWorkflowOptions {\n  /**\n   * @default - default image\n   */\n  readonly image?: string;\n\n  /**\n   * Adds an \"if\" condition to the workflow.\n   */\n  readonly condition?: any;\n\n  /**\n   * A directory name which contains artifacts to be published (e.g. `dist`).\n   *\n   * javascript artifacts must be under the `js` subdirectory.\n   * @default undefined By default artifacts are not uploaded\n   */\n  readonly artifactDirectory?: string;\n\n  readonly trigger: { [event: string]: any };\n\n  /**\n   * Bump a new version for this build.\n   * @default false\n   */\n  // readonly bump?: boolean;\n\n  /**\n   * Run codecoverage step\n   * Send to https://codecov.io/\n   * @default false\n   */\n  readonly codeCov?: boolean;\n\n  /**\n   * The secret name for the https://codecov.io/ token\n   */\n  readonly codeCovTokenSecret?: string;\n\n  readonly preBuildSteps?: any[];\n  readonly preCheckoutSteps?: any[];\n  readonly postSteps?: any[];\n  readonly checkoutWith?: { [key: string]: any };\n\n  /**\n   * Commit any changes with the specified commit message.\n   */\n  readonly commit?: string;\n\n  /**\n   * @default - do not push the changes to a branch\n   */\n  readonly pushBranch?: string;\n\n  /**\n   * Disables anti-tamper checks in the workflow.\n   */\n  readonly antitamperDisabled?: boolean;\n}\n\nexport interface NodeWorkflowSteps {\n  readonly antitamper: any[];\n  readonly install: any[];\n}\n"], "fixing_code": ["# ~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\".\n\nname: rebuild-bot\non:\n  workflow_dispatch: {}\njobs:\n  build:\n    runs-on: ubuntu-latest\n    env:\n      CI: \"true\"\n    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body,\n      '@projen rebuild') }}\n    steps:\n      - name: Post comment to issue\n        uses: peter-evans/create-or-update-comment@v1\n        with:\n          issue-number: ${{ github.event.issue.number }}\n          body: \"_projen_: Rebuild started\"\n      - name: Get pull request branch\n        id: query_pull_request\n        env:\n          PULL_REQUEST_URL: ${{ github.event.issue.pull_request.url }}\n        run: |-\n          rm -f /tmp/pr.json\n          curl --silent $PULL_REQUEST_URL > /tmp/pr.json\n          BRANCH_STR=$(cat /tmp/pr.json | jq \".head.ref\")\n          REPO_NAME=$(cat /tmp/pr.json | jq \".head.repo.full_name\")\n          echo \"::set-output name=branch::$(node -p $BRANCH_STR)\"\n          echo \"::set-output name=repo::$(node -p $REPO_NAME)\"\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          ref: ${{ steps.query_pull_request.outputs.branch }}\n          repository: ${{ steps.query_pull_request.outputs.repo }}\n      - name: Setup Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: 10.17.0\n      - name: Install dependencies\n        run: yarn install --check-files --frozen-lockfile\n      - name: Synthesize project files\n        run: /bin/bash ./projen.bash\n      - name: Set git identity\n        run: |-\n          git config user.name \"Auto-bump\"\n          git config user.email \"github-actions@github.com\"\n      - name: Build\n        run: /bin/bash ./projen.bash build\n      - name: Commit changes\n        run: 'git commit -am \"chore: update generated files\"'\n      - name: Push commits\n        run: git push origin $BRANCH\n        env:\n          BRANCH: ${{ steps.query_pull_request.outputs.branch }}\n      - name: Push tags\n        run: git push --follow-tags origin $BRANCH\n        env:\n          BRANCH: ${{ steps.query_pull_request.outputs.branch }}\n      - name: Post comment to issue\n        uses: peter-evans/create-or-update-comment@v1\n        with:\n          issue-number: ${{ github.event.issue.number }}\n          body: \"_projen_: Rebuild complete. Updates pushed to pull request branch.\"\n", "// Jest Snapshot v1, https://goo.gl/fbAQLP\n\nexports[`cdk-watchful 1`] = `\nObject {\n  \".eslintrc.json\": Object {\n    \"env\": Object {\n      \"jest\": true,\n      \"node\": true,\n    },\n    \"extends\": Array [\n      \"plugin:import/typescript\",\n    ],\n    \"ignorePatterns\": Array [\n      \"*.js\",\n      \"!.projenrc.js\",\n      \"*.d.ts\",\n      \"node_modules/\",\n      \"*.generated.ts\",\n      \"coverage\",\n    ],\n    \"overrides\": Array [\n      Object {\n        \"files\": Array [\n          \".projenrc.js\",\n        ],\n        \"rules\": Object {\n          \"@typescript-eslint/no-require-imports\": \"off\",\n          \"import/no-extraneous-dependencies\": \"off\",\n        },\n      },\n    ],\n    \"parser\": \"@typescript-eslint/parser\",\n    \"parserOptions\": Object {\n      \"ecmaVersion\": 2018,\n      \"project\": \"./tsconfig.eslint.json\",\n      \"sourceType\": \"module\",\n    },\n    \"plugins\": Array [\n      \"@typescript-eslint\",\n      \"import\",\n    ],\n    \"root\": true,\n    \"rules\": Object {\n      \"@typescript-eslint/indent\": Array [\n        \"error\",\n        2,\n      ],\n      \"@typescript-eslint/member-delimiter-style\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/member-ordering\": Array [\n        \"error\",\n        Object {\n          \"default\": Array [\n            \"public-static-field\",\n            \"public-static-method\",\n            \"protected-static-field\",\n            \"protected-static-method\",\n            \"private-static-field\",\n            \"private-static-method\",\n            \"field\",\n            \"constructor\",\n            \"method\",\n          ],\n        },\n      ],\n      \"@typescript-eslint/no-floating-promises\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/no-require-imports\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/no-shadow\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/return-await\": Array [\n        \"error\",\n      ],\n      \"array-bracket-newline\": Array [\n        \"error\",\n        \"consistent\",\n      ],\n      \"array-bracket-spacing\": Array [\n        \"error\",\n        \"never\",\n      ],\n      \"brace-style\": Array [\n        \"error\",\n        \"1tbs\",\n        Object {\n          \"allowSingleLine\": true,\n        },\n      ],\n      \"comma-dangle\": Array [\n        \"error\",\n        \"always-multiline\",\n      ],\n      \"comma-spacing\": Array [\n        \"error\",\n        Object {\n          \"after\": true,\n          \"before\": false,\n        },\n      ],\n      \"curly\": Array [\n        \"error\",\n        \"multi-line\",\n        \"consistent\",\n      ],\n      \"dot-notation\": Array [\n        \"error\",\n      ],\n      \"import/no-extraneous-dependencies\": Array [\n        \"error\",\n        Object {\n          \"devDependencies\": Array [\n            \"**/test/**\",\n            \"**/build-tools/**\",\n          ],\n          \"optionalDependencies\": false,\n          \"peerDependencies\": true,\n        },\n      ],\n      \"import/no-unresolved\": Array [\n        \"error\",\n      ],\n      \"import/order\": Array [\n        \"warn\",\n        Object {\n          \"alphabetize\": Object {\n            \"caseInsensitive\": true,\n            \"order\": \"asc\",\n          },\n          \"groups\": Array [\n            \"builtin\",\n            \"external\",\n          ],\n        },\n      ],\n      \"indent\": Array [\n        \"off\",\n      ],\n      \"key-spacing\": Array [\n        \"error\",\n      ],\n      \"keyword-spacing\": Array [\n        \"error\",\n      ],\n      \"max-len\": Array [\n        \"error\",\n        Object {\n          \"code\": 150,\n          \"ignoreComments\": true,\n          \"ignoreRegExpLiterals\": true,\n          \"ignoreStrings\": true,\n          \"ignoreTemplateLiterals\": true,\n          \"ignoreUrls\": true,\n        },\n      ],\n      \"no-bitwise\": Array [\n        \"error\",\n      ],\n      \"no-duplicate-imports\": Array [\n        \"error\",\n      ],\n      \"no-multi-spaces\": Array [\n        \"error\",\n        Object {\n          \"ignoreEOLComments\": false,\n        },\n      ],\n      \"no-multiple-empty-lines\": Array [\n        \"error\",\n      ],\n      \"no-return-await\": Array [\n        \"off\",\n      ],\n      \"no-shadow\": Array [\n        \"off\",\n      ],\n      \"no-trailing-spaces\": Array [\n        \"error\",\n      ],\n      \"object-curly-newline\": Array [\n        \"error\",\n        Object {\n          \"consistent\": true,\n          \"multiline\": true,\n        },\n      ],\n      \"object-curly-spacing\": Array [\n        \"error\",\n        \"always\",\n      ],\n      \"object-property-newline\": Array [\n        \"error\",\n        Object {\n          \"allowAllPropertiesOnSameLine\": true,\n        },\n      ],\n      \"quote-props\": Array [\n        \"error\",\n        \"consistent-as-needed\",\n      ],\n      \"quotes\": Array [\n        \"error\",\n        \"single\",\n        Object {\n          \"avoidEscape\": true,\n        },\n      ],\n      \"semi\": Array [\n        \"error\",\n        \"always\",\n      ],\n      \"space-before-blocks\": Array [\n        \"error\",\n      ],\n    },\n    \"settings\": Object {\n      \"import/parsers\": Object {\n        \"@typescript-eslint/parser\": Array [\n          \".ts\",\n          \".tsx\",\n        ],\n      },\n      \"import/resolver\": Object {\n        \"node\": Object {},\n        \"typescript\": Object {\n          \"project\": \"./tsconfig.eslint.json\",\n        },\n      },\n    },\n  },\n  \".github/dependabot.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nversion: 2\nupdates:\n  - package-ecosystem: npm\n    versioning-strategy: lockfile-only\n    directory: /\n    schedule:\n      interval: daily\n    ignore:\n      - dependency-name: projen\n\",\n  \".github/pull_request_template.md\": \"Fixes #\",\n  \".github/workflows/build.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nname: Build\non:\n  pull_request: {}\n  workflow_dispatch: {}\njobs:\n  build:\n    runs-on: ubuntu-latest\n    env:\n      CI: \\\\\"true\\\\\"\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n      - name: Setup Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: 14.0.0\n      - name: Install dependencies\n        run: yarn install --check-files --frozen-lockfile\n      - name: Synthesize project files\n        run: npx projen\n      - name: Anti-tamper check\n        run: git diff --exit-code\n      - name: Set git identity\n        run: |-\n          git config user.name \\\\\"Auto-bump\\\\\"\n          git config user.email \\\\\"github-actions@github.com\\\\\"\n      - name: Build\n        run: npx projen build\n      - name: Anti-tamper check\n        run: git diff --exit-code\n    container:\n      image: jsii/superchain\n\",\n  \".github/workflows/projenupgrade.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nname: ProjenUpgrade\non:\n  schedule:\n    - cron: 0 6 * * *\n  workflow_dispatch: {}\njobs:\n  upgrade:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n      - name: Setup Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: 14.0.0\n      - name: Install dependencies\n        run: yarn install --check-files --frozen-lockfile\n      - name: Synthesize project files\n        run: npx projen\n      - name: Upgrade projen\n        run: npx projen projen:upgrade\n      - name: Create pull request\n        uses: peter-evans/create-pull-request@v3\n        with:\n          token: \\${{ secrets.PROJEN_GITHUB_TOKEN }}\n          commit-message: \\\\\"chore: upgrade projen\\\\\"\n          branch: auto/projen-upgrade\n          title: \\\\\"chore: upgrade projen\\\\\"\n          body: This PR upgrades projen to the latest version\n          labels: auto-merge\n\",\n  \".github/workflows/rebuild-bot.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nname: rebuild-bot\non:\n  workflow_dispatch: {}\njobs:\n  build:\n    runs-on: ubuntu-latest\n    env:\n      CI: \\\\\"true\\\\\"\n    if: \\${{ github.event.issue.pull_request && contains(github.event.comment.body,\n      '@projen rebuild') }}\n    steps:\n      - name: Post comment to issue\n        uses: peter-evans/create-or-update-comment@v1\n        with:\n          issue-number: \\${{ github.event.issue.number }}\n          body: \\\\\"_projen_: Rebuild started\\\\\"\n      - name: Get pull request branch\n        id: query_pull_request\n        env:\n          PULL_REQUEST_URL: \\${{ github.event.issue.pull_request.url }}\n        run: |-\n          rm -f /tmp/pr.json\n          curl --silent $PULL_REQUEST_URL > /tmp/pr.json\n          BRANCH_STR=$(cat /tmp/pr.json | jq \\\\\".head.ref\\\\\")\n          REPO_NAME=$(cat /tmp/pr.json | jq \\\\\".head.repo.full_name\\\\\")\n          echo \\\\\"::set-output name=branch::$(node -p $BRANCH_STR)\\\\\"\n          echo \\\\\"::set-output name=repo::$(node -p $REPO_NAME)\\\\\"\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          ref: \\${{ steps.query_pull_request.outputs.branch }}\n          repository: \\${{ steps.query_pull_request.outputs.repo }}\n      - name: Setup Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: 14.0.0\n      - name: Install dependencies\n        run: yarn install --check-files --frozen-lockfile\n      - name: Synthesize project files\n        run: npx projen\n      - name: Set git identity\n        run: |-\n          git config user.name \\\\\"Auto-bump\\\\\"\n          git config user.email \\\\\"github-actions@github.com\\\\\"\n      - name: Build\n        run: npx projen build\n      - name: Commit changes\n        run: 'git commit -am \\\\\"chore: update generated files\\\\\"'\n      - name: Push commits\n        run: git push origin $BRANCH\n        env:\n          BRANCH: \\${{ steps.query_pull_request.outputs.branch }}\n      - name: Push tags\n        run: git push --follow-tags origin $BRANCH\n        env:\n          BRANCH: \\${{ steps.query_pull_request.outputs.branch }}\n      - name: Post comment to issue\n        uses: peter-evans/create-or-update-comment@v1\n        with:\n          issue-number: \\${{ github.event.issue.number }}\n          body: \\\\\"_projen_: Rebuild complete. Updates pushed to pull request branch.\\\\\"\n\",\n  \".github/workflows/release.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nname: Release\non:\n  push:\n    branches:\n      - master\n  workflow_dispatch: {}\njobs:\n  build:\n    runs-on: ubuntu-latest\n    env:\n      CI: \\\\\"true\\\\\"\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          fetch-depth: 0\n      - name: Setup Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: 14.0.0\n      - name: Install dependencies\n        run: yarn install --check-files --frozen-lockfile\n      - name: Synthesize project files\n        run: npx projen\n      - name: Anti-tamper check\n        run: git diff --exit-code\n      - name: Set git identity\n        run: |-\n          git config user.name \\\\\"Auto-bump\\\\\"\n          git config user.email \\\\\"github-actions@github.com\\\\\"\n      - name: Bump to next version\n        run: npx projen bump\n      - name: Build\n        run: npx projen build\n      - name: Anti-tamper check\n        run: git diff --exit-code\n      - name: Push commits\n        run: git push origin $BRANCH\n        env:\n          BRANCH: \\${{ github.ref }}\n      - name: Push tags\n        run: git push --follow-tags origin $BRANCH\n        env:\n          BRANCH: \\${{ github.ref }}\n      - name: Upload artifact\n        uses: actions/upload-artifact@v2.1.1\n        with:\n          name: dist\n          path: dist\n    container:\n      image: jsii/superchain\n  release_npm:\n    name: Release to NPM\n    needs: build\n    runs-on: ubuntu-latest\n    container:\n      image: jsii/superchain\n    steps:\n      - name: Download build artifacts\n        uses: actions/download-artifact@v2\n        with:\n          name: dist\n          path: dist\n      - name: Release\n        run: npx -p jsii-release@latest jsii-release-npm\n        env:\n          NPM_TOKEN: \\${{ secrets.NPM_TOKEN }}\n          NPM_DIST_TAG: latest\n          NPM_REGISTRY: registry.npmjs.org\n  release_maven:\n    name: Release to Maven\n    needs: build\n    runs-on: ubuntu-latest\n    container:\n      image: jsii/superchain\n    steps:\n      - name: Download build artifacts\n        uses: actions/download-artifact@v2\n        with:\n          name: dist\n          path: dist\n      - name: Release\n        run: npx -p jsii-release@latest jsii-release-maven\n        env:\n          MAVEN_GPG_PRIVATE_KEY: \\${{ secrets.MAVEN_GPG_PRIVATE_KEY }}\n          MAVEN_GPG_PRIVATE_KEY_PASSPHRASE: \\${{ secrets.MAVEN_GPG_PRIVATE_KEY_PASSPHRASE }}\n          MAVEN_PASSWORD: \\${{ secrets.MAVEN_PASSWORD }}\n          MAVEN_USERNAME: \\${{ secrets.MAVEN_USERNAME }}\n          MAVEN_STAGING_PROFILE_ID: \\${{ secrets.MAVEN_STAGING_PROFILE_ID }}\n  release_pypi:\n    name: Release to PyPi\n    needs: build\n    runs-on: ubuntu-latest\n    container:\n      image: jsii/superchain\n    steps:\n      - name: Download build artifacts\n        uses: actions/download-artifact@v2\n        with:\n          name: dist\n          path: dist\n      - name: Release\n        run: npx -p jsii-release@latest jsii-release-pypi\n        env:\n          TWINE_USERNAME: \\${{ secrets.TWINE_USERNAME }}\n          TWINE_PASSWORD: \\${{ secrets.TWINE_PASSWORD }}\n\",\n  \".gitignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n*.lcov\n*.log\n*.pid\n*.pid.lock\n*.seed\n*.tgz\n*.tsbuildinfo\n.cache\n.env\n.eslintcache\n.idea\n.jsii\n.nyc_output\n.yarn-integrity\n/coverage\n/dist\n/lib\n/test-reports/\nbuild/Release\ncoverage\nexample/*.d.ts\nexample/*.js\njspm_packages/\njunit.xml\nlerna-debug.log*\nlib-cov\nlogs\nnode_modules/\nnpm-debug.log*\npids\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\ntsconfig.json\nyarn-debug.log*\nyarn-error.log*\n!/.eslintrc.json\n!/.github/dependabot.yml\n!/.github/pull_request_template.md\n!/.github/workflows/build.yml\n!/.github/workflows/projenupgrade.yml\n!/.github/workflows/rebuild-bot.yml\n!/.github/workflows/release.yml\n!/.mergify.yml\n!/.npmignore\n!/.projen/deps.json\n!/.projen/tasks.json\n!/.projenrc.js\n!/.versionrc.json\n!/API.md\n!/LICENSE\n!/package.json\n!/src\n!/test\n!/tsconfig.eslint.json\n!/tsconfig.jest.json\n!version.json\n\",\n  \".mergify.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\npull_request_rules:\n  - name: Automatic merge on approval and successful build\n    actions:\n      merge:\n        method: squash\n        commit_message: title+body\n        strict: smart\n        strict_method: merge\n      delete_head_branch: {}\n    conditions:\n      - \\\\\"#approved-reviews-by>=1\\\\\"\n      - status-success=build\n  - name: Automatic merge PRs with auto-merge label upon successful build\n    actions:\n      merge:\n        method: squash\n        commit_message: title+body\n        strict: smart\n        strict_method: merge\n      delete_head_branch: {}\n    conditions:\n      - label=auto-merge\n      - status-success=build\n  - name: Merge pull requests from dependabot if CI passes\n    conditions:\n      - author=dependabot[bot]\n      - status-success=build\n    actions:\n      merge:\n        method: squash\n        commit_message: title+body\n        strict: smart\n        strict_method: merge\n\",\n  \".npmignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n/.eslintrc.json\n/.github\n/.idea\n/.mergify.yml\n/.projen\n/.projenrc.js\n/.versionrc.json\n/.vscode\n/coverage\n/src\n/test\n/test-reports/\n/tsconfig.eslint.json\n/tsconfig.jest.json\n/tsconfig.json\ndist\njunit.xml\n!.jsii\n!/lib\n!/lib/**/*.d.ts\n!/lib/**/*.js\n\",\n  \".projen/deps.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"dependencies\": Array [\n      Object {\n        \"name\": \"@aws-cdk/assert\",\n        \"type\": \"build\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@types/jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/node\",\n        \"type\": \"build\",\n        \"version\": \"^14.0.0\",\n      },\n      Object {\n        \"name\": \"@typescript-eslint/eslint-plugin\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@typescript-eslint/parser\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"aws-sdk\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-import-resolver-node\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-import-resolver-typescript\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-plugin-import\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest-junit\",\n        \"type\": \"build\",\n        \"version\": \"^12\",\n      },\n      Object {\n        \"name\": \"jsii\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jsii-diff\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jsii-docgen\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jsii-pacmak\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"json-schema\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"projen\",\n        \"type\": \"build\",\n        \"version\": \"^999.999.999\",\n      },\n      Object {\n        \"name\": \"standard-version\",\n        \"type\": \"build\",\n        \"version\": \"^9\",\n      },\n      Object {\n        \"name\": \"ts-jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"typescript\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-apigateway\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-cloudwatch-actions\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-cloudwatch\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-dynamodb\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-ecs-patterns\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-ecs\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-elasticloadbalancingv2\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-events-targets\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-events\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-lambda\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-rds\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-sns-subscriptions\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-sns\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-sqs\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/core\",\n        \"type\": \"peer\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"constructs\",\n        \"type\": \"peer\",\n        \"version\": \"^3.2.27\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-apigateway\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-cloudwatch-actions\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-cloudwatch\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-dynamodb\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-ecs-patterns\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-ecs\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-elasticloadbalancingv2\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-events-targets\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-events\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-lambda\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-rds\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-sns-subscriptions\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-sns\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/aws-sqs\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n      Object {\n        \"name\": \"@aws-cdk/core\",\n        \"type\": \"runtime\",\n        \"version\": \"^1.75.0\",\n      },\n    ],\n  },\n  \".projen/tasks.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"env\": Object {\n      \"PATH\": \"$(npx -c \\\\\"node -e \\\\\\\\\\\\\"console.log(process.env.PATH)\\\\\\\\\\\\\"\\\\\")\",\n    },\n    \"tasks\": Object {\n      \"build\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Full release build (test+compile)\",\n        \"name\": \"build\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"test\",\n          },\n          Object {\n            \"spawn\": \"compile\",\n          },\n          Object {\n            \"spawn\": \"package\",\n          },\n        ],\n      },\n      \"bump\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Commits a bump to the package version based on conventional commits\",\n        \"name\": \"bump\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"standard-version\",\n          },\n        ],\n      },\n      \"clobber\": Object {\n        \"category\": \"30.maintain\",\n        \"condition\": \"git diff --exit-code > /dev/null\",\n        \"description\": \"hard resets to HEAD of origin and cleans the local repo\",\n        \"env\": Object {\n          \"BRANCH\": \"$(git branch --show-current)\",\n        },\n        \"name\": \"clobber\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"git checkout -b scratch\",\n            \"name\": \"save current HEAD in \\\\\"scratch\\\\\" branch\",\n          },\n          Object {\n            \"exec\": \"git checkout $BRANCH\",\n          },\n          Object {\n            \"exec\": \"git fetch origin\",\n            \"name\": \"fetch latest changes from origin\",\n          },\n          Object {\n            \"exec\": \"git reset --hard origin/$BRANCH\",\n            \"name\": \"hard reset to origin commit\",\n          },\n          Object {\n            \"exec\": \"git clean -fdx\",\n            \"name\": \"clean all untracked files\",\n          },\n          Object {\n            \"say\": \"ready to rock! (unpushed commits are under the \\\\\"scratch\\\\\" branch)\",\n          },\n        ],\n      },\n      \"compat\": Object {\n        \"category\": \"20.release\",\n        \"description\": \"Perform API compatibility check against latest version\",\n        \"name\": \"compat\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii-diff npm:$(node -p \\\\\"require('./package.json').name\\\\\") -k --ignore-file .compatignore || (echo \\\\\"\nUNEXPECTED BREAKING CHANGES: add keys such as 'removed:constructs.Node.of' to .compatignore to skip.\n\\\\\" && exit 1)\",\n          },\n        ],\n      },\n      \"compile\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Only compile\",\n        \"name\": \"compile\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii --silence-warnings=reserved-word --no-fix-peer-dependencies\",\n          },\n          Object {\n            \"spawn\": \"docgen\",\n          },\n        ],\n      },\n      \"docgen\": Object {\n        \"category\": \"20.release\",\n        \"description\": \"Generate API.md from .jsii manifest\",\n        \"name\": \"docgen\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii-docgen\",\n          },\n        ],\n      },\n      \"eslint\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Runs eslint against the codebase\",\n        \"name\": \"eslint\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test build-tools .projenrc.js\",\n          },\n        ],\n      },\n      \"package\": Object {\n        \"category\": \"20.release\",\n        \"description\": \"Create an npm tarball\",\n        \"name\": \"package\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii-pacmak\",\n          },\n        ],\n      },\n      \"projen:upgrade\": Object {\n        \"category\": \"30.maintain\",\n        \"description\": \"upgrades projen to the latest version\",\n        \"name\": \"projen:upgrade\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"yarn upgrade -L projen\",\n          },\n          Object {\n            \"exec\": \"CI=\\\\\"\\\\\" yarn projen\",\n          },\n        ],\n      },\n      \"release\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Bumps version & push to master\",\n        \"name\": \"release\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"bump\",\n          },\n          Object {\n            \"exec\": \"git push --follow-tags origin master\",\n          },\n        ],\n      },\n      \"test\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run tests\",\n        \"name\": \"test\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"rm -fr lib/\",\n          },\n          Object {\n            \"spawn\": \"test:compile\",\n          },\n          Object {\n            \"exec\": \"jest --passWithNoTests --all --updateSnapshot --coverageProvider=v8\",\n          },\n          Object {\n            \"spawn\": \"eslint\",\n          },\n        ],\n      },\n      \"test:compile\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"compiles the test code\",\n        \"name\": \"test:compile\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"tsc --noEmit --project tsconfig.jest.json\",\n          },\n        ],\n      },\n      \"test:update\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Update jest snapshots\",\n        \"name\": \"test:update\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --updateSnapshot\",\n          },\n        ],\n      },\n      \"test:watch\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run jest in watch mode\",\n        \"name\": \"test:watch\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --watch\",\n          },\n        ],\n      },\n      \"watch\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Watch & compile in the background\",\n        \"name\": \"watch\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii -w --silence-warnings=reserved-word --no-fix-peer-dependencies\",\n          },\n        ],\n      },\n    },\n  },\n  \".projenrc.js\": \"const { ConstructLibraryAws, Semver } = require('projen');\n\nconst project = new ConstructLibraryAws({\n  name: 'cdk-watchful',\n  description: 'Watching your CDK apps since 2019',\n  defaultReleaseBranch: 'master',\n  authorName: 'Elad Ben-Israel',\n  authorEmail: 'elad.benisrael@gmail.com',\n  repository: 'https://github.com/eladb/cdk-watchful.git',\n  keywords: [\n    'cloudwatch',\n    'monitoring',\n  ],\n\n  catalog: {\n    twitter: 'emeshbi',\n  },\n\n  // creates PRs for projen upgrades\n  projenUpgradeSecret: 'PROJEN_GITHUB_TOKEN',\n\n  cdkVersion: '1.75.0',\n  cdkDependencies: [\n    '@aws-cdk/aws-apigateway',\n    '@aws-cdk/aws-cloudwatch',\n    '@aws-cdk/aws-cloudwatch-actions',\n    '@aws-cdk/aws-dynamodb',\n    '@aws-cdk/aws-ecs',\n    '@aws-cdk/aws-ecs-patterns',\n    '@aws-cdk/aws-elasticloadbalancingv2',\n    '@aws-cdk/aws-events',\n    '@aws-cdk/aws-events-targets',\n    '@aws-cdk/aws-lambda',\n    '@aws-cdk/aws-rds',\n    '@aws-cdk/aws-sns',\n    '@aws-cdk/aws-sns-subscriptions',\n    '@aws-cdk/aws-sqs',\n    '@aws-cdk/core',\n  ],\n\n  devDeps: [\n    'aws-sdk',\n  ],\n\n  // jsii publishing\n\n  publishToMaven: {\n    javaPackage: 'com.github.eladb.watchful',\n    mavenGroupId: 'com.github.eladb',\n    mavenArtifactId: 'cdk-watchful',\n  },\n\n  publishToPypi: {\n    distName: 'cdk-watchful',\n    module: 'cdk_watchful',\n  },\n\n  minNodeVersion: '14.0.0',\n});\n\nproject.gitignore.exclude('.env', '.idea');\nproject.gitignore.exclude('example/*.js', 'example/*.d.ts');\n\nproject.synth();\n\",\n  \".versionrc.json\": Object {\n    \"bumpFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"commitAll\": true,\n    \"packageFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"scripts\": Object {\n      \"postbump\": \"npx projen && git add .\",\n    },\n  },\n  \"LICENSE\": \"                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \\\\\"License\\\\\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \\\\\"Licensor\\\\\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \\\\\"Legal Entity\\\\\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \\\\\"control\\\\\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \\\\\"You\\\\\" (or \\\\\"Your\\\\\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \\\\\"Source\\\\\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \\\\\"Object\\\\\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \\\\\"Work\\\\\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \\\\\"Derivative Works\\\\\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \\\\\"Contribution\\\\\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \\\\\"submitted\\\\\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \\\\\"Not a Contribution.\\\\\"\n\n      \\\\\"Contributor\\\\\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \\\\\"NOTICE\\\\\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \\\\\"AS IS\\\\\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \\\\\"[]\\\\\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \\\\\"printed page\\\\\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2021 Elad Ben-Israel\n\n   Licensed under the Apache License, Version 2.0 (the \\\\\"License\\\\\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \\\\\"AS IS\\\\\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\",\n  \"README.md\": \"# replace this\",\n  \"package.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"author\": Object {\n      \"email\": \"elad.benisrael@gmail.com\",\n      \"name\": \"Elad Ben-Israel\",\n      \"organization\": false,\n    },\n    \"awscdkio\": Object {\n      \"twitter\": \"emeshbi\",\n    },\n    \"bundledDependencies\": Array [],\n    \"dependencies\": Object {\n      \"@aws-cdk/aws-apigateway\": \"^1.75.0\",\n      \"@aws-cdk/aws-cloudwatch\": \"^1.75.0\",\n      \"@aws-cdk/aws-cloudwatch-actions\": \"^1.75.0\",\n      \"@aws-cdk/aws-dynamodb\": \"^1.75.0\",\n      \"@aws-cdk/aws-ecs\": \"^1.75.0\",\n      \"@aws-cdk/aws-ecs-patterns\": \"^1.75.0\",\n      \"@aws-cdk/aws-elasticloadbalancingv2\": \"^1.75.0\",\n      \"@aws-cdk/aws-events\": \"^1.75.0\",\n      \"@aws-cdk/aws-events-targets\": \"^1.75.0\",\n      \"@aws-cdk/aws-lambda\": \"^1.75.0\",\n      \"@aws-cdk/aws-rds\": \"^1.75.0\",\n      \"@aws-cdk/aws-sns\": \"^1.75.0\",\n      \"@aws-cdk/aws-sns-subscriptions\": \"^1.75.0\",\n      \"@aws-cdk/aws-sqs\": \"^1.75.0\",\n      \"@aws-cdk/core\": \"^1.75.0\",\n    },\n    \"description\": \"Watching your CDK apps since 2019\",\n    \"devDependencies\": Object {\n      \"@aws-cdk/assert\": \"^1.75.0\",\n      \"@types/jest\": \"*\",\n      \"@types/node\": \"^14.0.0\",\n      \"@typescript-eslint/eslint-plugin\": \"*\",\n      \"@typescript-eslint/parser\": \"*\",\n      \"aws-sdk\": \"*\",\n      \"eslint\": \"*\",\n      \"eslint-import-resolver-node\": \"*\",\n      \"eslint-import-resolver-typescript\": \"*\",\n      \"eslint-plugin-import\": \"*\",\n      \"jest\": \"*\",\n      \"jest-junit\": \"^12\",\n      \"jsii\": \"*\",\n      \"jsii-diff\": \"*\",\n      \"jsii-docgen\": \"*\",\n      \"jsii-pacmak\": \"*\",\n      \"json-schema\": \"*\",\n      \"projen\": \"^999.999.999\",\n      \"standard-version\": \"^9\",\n      \"ts-jest\": \"*\",\n      \"typescript\": \"*\",\n    },\n    \"engines\": Object {\n      \"node\": \">= 14.0.0\",\n    },\n    \"jest\": Object {\n      \"clearMocks\": true,\n      \"collectCoverage\": true,\n      \"coverageDirectory\": \"coverage\",\n      \"coveragePathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n      \"coverageReporters\": Array [\n        \"json\",\n        \"lcov\",\n        \"clover\",\n        \"text\",\n      ],\n      \"globals\": Object {\n        \"ts-jest\": Object {\n          \"tsconfig\": \"tsconfig.jest.json\",\n        },\n      },\n      \"preset\": \"ts-jest\",\n      \"reporters\": Array [\n        \"default\",\n        Array [\n          \"jest-junit\",\n          Object {\n            \"outputDirectory\": \"test-reports\",\n          },\n        ],\n      ],\n      \"testMatch\": Array [\n        \"**/__tests__/**/*.ts?(x)\",\n        \"**/?(*.)+(spec|test).ts?(x)\",\n      ],\n      \"testPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n      \"watchPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n    },\n    \"jsii\": Object {\n      \"outdir\": \"dist\",\n      \"targets\": Object {\n        \"java\": Object {\n          \"maven\": Object {\n            \"artifactId\": \"cdk-watchful\",\n            \"groupId\": \"com.github.eladb\",\n          },\n          \"package\": \"com.github.eladb.watchful\",\n        },\n        \"python\": Object {\n          \"distName\": \"cdk-watchful\",\n          \"module\": \"cdk_watchful\",\n        },\n      },\n      \"tsc\": Object {\n        \"outDir\": \"lib\",\n        \"rootDir\": \"src\",\n      },\n    },\n    \"keywords\": Array [\n      \"cdk\",\n      \"cloudwatch\",\n      \"monitoring\",\n    ],\n    \"license\": \"Apache-2.0\",\n    \"main\": \"lib/index.js\",\n    \"name\": \"cdk-watchful\",\n    \"peerDependencies\": Object {\n      \"@aws-cdk/aws-apigateway\": \"^1.75.0\",\n      \"@aws-cdk/aws-cloudwatch\": \"^1.75.0\",\n      \"@aws-cdk/aws-cloudwatch-actions\": \"^1.75.0\",\n      \"@aws-cdk/aws-dynamodb\": \"^1.75.0\",\n      \"@aws-cdk/aws-ecs\": \"^1.75.0\",\n      \"@aws-cdk/aws-ecs-patterns\": \"^1.75.0\",\n      \"@aws-cdk/aws-elasticloadbalancingv2\": \"^1.75.0\",\n      \"@aws-cdk/aws-events\": \"^1.75.0\",\n      \"@aws-cdk/aws-events-targets\": \"^1.75.0\",\n      \"@aws-cdk/aws-lambda\": \"^1.75.0\",\n      \"@aws-cdk/aws-rds\": \"^1.75.0\",\n      \"@aws-cdk/aws-sns\": \"^1.75.0\",\n      \"@aws-cdk/aws-sns-subscriptions\": \"^1.75.0\",\n      \"@aws-cdk/aws-sqs\": \"^1.75.0\",\n      \"@aws-cdk/core\": \"^1.75.0\",\n      \"constructs\": \"^3.2.27\",\n    },\n    \"repository\": Object {\n      \"type\": \"git\",\n      \"url\": \"https://github.com/eladb/cdk-watchful.git\",\n    },\n    \"scripts\": Object {\n      \"build\": \"npx projen build\",\n      \"bump\": \"npx projen bump\",\n      \"clobber\": \"npx projen clobber\",\n      \"compat\": \"npx projen compat\",\n      \"compile\": \"npx projen compile\",\n      \"docgen\": \"npx projen docgen\",\n      \"eslint\": \"npx projen eslint\",\n      \"package\": \"npx projen package\",\n      \"projen\": \"npx projen\",\n      \"projen:upgrade\": \"npx projen projen:upgrade\",\n      \"release\": \"npx projen release\",\n      \"start\": \"npx projen start\",\n      \"test\": \"npx projen test\",\n      \"test:compile\": \"npx projen test:compile\",\n      \"test:update\": \"npx projen test:update\",\n      \"test:watch\": \"npx projen test:watch\",\n      \"watch\": \"npx projen watch\",\n    },\n    \"stability\": \"stable\",\n    \"types\": \"lib/index.d.ts\",\n    \"version\": \"0.0.0\",\n  },\n  \"src/index.ts\": \"export class Hello {\n  public sayHello() {\n    return 'hello, world!';\n  }\n}\",\n  \"test/hello.test.ts\": \"import { Hello } from '../src';\n\ntest('hello', () => {\n  expect(new Hello().sayHello()).toBe('hello, world!');\n});\",\n  \"tsconfig.eslint.json\": Object {\n    \"compilerOptions\": Object {\n      \"alwaysStrict\": true,\n      \"declaration\": true,\n      \"experimentalDecorators\": true,\n      \"inlineSourceMap\": true,\n      \"inlineSources\": true,\n      \"lib\": Array [\n        \"es2018\",\n      ],\n      \"module\": \"CommonJS\",\n      \"noEmitOnError\": false,\n      \"noFallthroughCasesInSwitch\": true,\n      \"noImplicitAny\": true,\n      \"noImplicitReturns\": true,\n      \"noImplicitThis\": true,\n      \"noUnusedLocals\": true,\n      \"noUnusedParameters\": true,\n      \"resolveJsonModule\": true,\n      \"strict\": true,\n      \"strictNullChecks\": true,\n      \"strictPropertyInitialization\": true,\n      \"stripInternal\": true,\n      \"target\": \"ES2018\",\n    },\n    \"exclude\": Array [\n      \"node_modules\",\n    ],\n    \"include\": Array [\n      \".projenrc.js\",\n      \"src/**/*.ts\",\n      \"test/**/*.ts\",\n    ],\n  },\n  \"tsconfig.jest.json\": Object {\n    \"compilerOptions\": Object {\n      \"alwaysStrict\": true,\n      \"declaration\": true,\n      \"experimentalDecorators\": true,\n      \"inlineSourceMap\": true,\n      \"inlineSources\": true,\n      \"lib\": Array [\n        \"es2018\",\n      ],\n      \"module\": \"CommonJS\",\n      \"noEmitOnError\": false,\n      \"noFallthroughCasesInSwitch\": true,\n      \"noImplicitAny\": true,\n      \"noImplicitReturns\": true,\n      \"noImplicitThis\": true,\n      \"noUnusedLocals\": true,\n      \"noUnusedParameters\": true,\n      \"resolveJsonModule\": true,\n      \"strict\": true,\n      \"strictNullChecks\": true,\n      \"strictPropertyInitialization\": true,\n      \"stripInternal\": true,\n      \"target\": \"ES2018\",\n    },\n    \"exclude\": Array [\n      \"node_modules\",\n    ],\n    \"include\": Array [\n      \".projenrc.js\",\n      \"src/**/*.ts\",\n      \"test/**/*.ts\",\n    ],\n  },\n  \"version.json\": Object {\n    \"version\": \"0.0.0\",\n  },\n}\n`;\n\nexports[`cdk8s 1`] = `\nObject {\n  \".eslintrc.json\": Object {\n    \"env\": Object {\n      \"jest\": true,\n      \"node\": true,\n    },\n    \"extends\": Array [\n      \"plugin:import/typescript\",\n    ],\n    \"ignorePatterns\": Array [\n      \"*.js\",\n      \"!.projenrc.js\",\n      \"*.d.ts\",\n      \"node_modules/\",\n      \"*.generated.ts\",\n      \"coverage\",\n    ],\n    \"overrides\": Array [\n      Object {\n        \"files\": Array [\n          \".projenrc.js\",\n        ],\n        \"rules\": Object {\n          \"@typescript-eslint/no-require-imports\": \"off\",\n          \"import/no-extraneous-dependencies\": \"off\",\n        },\n      },\n    ],\n    \"parser\": \"@typescript-eslint/parser\",\n    \"parserOptions\": Object {\n      \"ecmaVersion\": 2018,\n      \"project\": \"./tsconfig.eslint.json\",\n      \"sourceType\": \"module\",\n    },\n    \"plugins\": Array [\n      \"@typescript-eslint\",\n      \"import\",\n    ],\n    \"root\": true,\n    \"rules\": Object {\n      \"@typescript-eslint/indent\": Array [\n        \"error\",\n        2,\n      ],\n      \"@typescript-eslint/member-delimiter-style\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/member-ordering\": Array [\n        \"error\",\n        Object {\n          \"default\": Array [\n            \"public-static-field\",\n            \"public-static-method\",\n            \"protected-static-field\",\n            \"protected-static-method\",\n            \"private-static-field\",\n            \"private-static-method\",\n            \"field\",\n            \"constructor\",\n            \"method\",\n          ],\n        },\n      ],\n      \"@typescript-eslint/no-floating-promises\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/no-require-imports\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/no-shadow\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/return-await\": Array [\n        \"error\",\n      ],\n      \"array-bracket-newline\": Array [\n        \"error\",\n        \"consistent\",\n      ],\n      \"array-bracket-spacing\": Array [\n        \"error\",\n        \"never\",\n      ],\n      \"brace-style\": Array [\n        \"error\",\n        \"1tbs\",\n        Object {\n          \"allowSingleLine\": true,\n        },\n      ],\n      \"comma-dangle\": Array [\n        \"error\",\n        \"always-multiline\",\n      ],\n      \"comma-spacing\": Array [\n        \"error\",\n        Object {\n          \"after\": true,\n          \"before\": false,\n        },\n      ],\n      \"curly\": Array [\n        \"error\",\n        \"multi-line\",\n        \"consistent\",\n      ],\n      \"dot-notation\": Array [\n        \"error\",\n      ],\n      \"import/no-extraneous-dependencies\": Array [\n        \"error\",\n        Object {\n          \"devDependencies\": Array [\n            \"**/test/**\",\n            \"**/build-tools/**\",\n          ],\n          \"optionalDependencies\": false,\n          \"peerDependencies\": true,\n        },\n      ],\n      \"import/no-unresolved\": Array [\n        \"error\",\n      ],\n      \"import/order\": Array [\n        \"warn\",\n        Object {\n          \"alphabetize\": Object {\n            \"caseInsensitive\": true,\n            \"order\": \"asc\",\n          },\n          \"groups\": Array [\n            \"builtin\",\n            \"external\",\n          ],\n        },\n      ],\n      \"indent\": Array [\n        \"off\",\n      ],\n      \"key-spacing\": Array [\n        \"error\",\n      ],\n      \"keyword-spacing\": Array [\n        \"error\",\n      ],\n      \"max-len\": Array [\n        \"error\",\n        Object {\n          \"code\": 150,\n          \"ignoreComments\": true,\n          \"ignoreRegExpLiterals\": true,\n          \"ignoreStrings\": true,\n          \"ignoreTemplateLiterals\": true,\n          \"ignoreUrls\": true,\n        },\n      ],\n      \"no-bitwise\": Array [\n        \"error\",\n      ],\n      \"no-duplicate-imports\": Array [\n        \"error\",\n      ],\n      \"no-multi-spaces\": Array [\n        \"error\",\n        Object {\n          \"ignoreEOLComments\": false,\n        },\n      ],\n      \"no-multiple-empty-lines\": Array [\n        \"error\",\n      ],\n      \"no-return-await\": Array [\n        \"off\",\n      ],\n      \"no-shadow\": Array [\n        \"off\",\n      ],\n      \"no-trailing-spaces\": Array [\n        \"error\",\n      ],\n      \"object-curly-newline\": Array [\n        \"error\",\n        Object {\n          \"consistent\": true,\n          \"multiline\": true,\n        },\n      ],\n      \"object-curly-spacing\": Array [\n        \"error\",\n        \"always\",\n      ],\n      \"object-property-newline\": Array [\n        \"error\",\n        Object {\n          \"allowAllPropertiesOnSameLine\": true,\n        },\n      ],\n      \"quote-props\": Array [\n        \"error\",\n        \"consistent-as-needed\",\n      ],\n      \"quotes\": Array [\n        \"error\",\n        \"single\",\n        Object {\n          \"avoidEscape\": true,\n        },\n      ],\n      \"semi\": Array [\n        \"error\",\n        \"always\",\n      ],\n      \"space-before-blocks\": Array [\n        \"error\",\n      ],\n    },\n    \"settings\": Object {\n      \"import/parsers\": Object {\n        \"@typescript-eslint/parser\": Array [\n          \".ts\",\n          \".tsx\",\n        ],\n      },\n      \"import/resolver\": Object {\n        \"node\": Object {},\n        \"typescript\": Object {\n          \"project\": \"./tsconfig.eslint.json\",\n        },\n      },\n    },\n  },\n  \".gitignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n*.lcov\n*.log\n*.pid\n*.pid.lock\n*.seed\n*.tgz\n*.tsbuildinfo\n.cache\n.eslintcache\n.jsii\n.nyc_output\n.yarn-integrity\n/coverage\n/dist\n/lib\n/test-reports/\nbuild/Release\ncoverage\njspm_packages/\njunit.xml\nlerna-debug.log*\nlib-cov\nlogs\nnode_modules/\nnpm-debug.log*\npids\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\ntsconfig.json\nyarn-debug.log*\nyarn-error.log*\n!/.eslintrc.json\n!/.npmignore\n!/.projen/deps.json\n!/.projen/tasks.json\n!/.projenrc.js\n!/.versionrc.json\n!/API.md\n!/LICENSE\n!/package.json\n!/src\n!/src/_loadurl.js\n!/test\n!/tsconfig.eslint.json\n!/tsconfig.jest.json\n!version.json\n\",\n  \".npmignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n/.eslintrc.json\n/.github\n/.idea\n/.projen\n/.projenrc.js\n/.versionrc.json\n/.vscode\n/coverage\n/src\n/test\n/test-reports/\n/tsconfig.eslint.json\n/tsconfig.jest.json\n/tsconfig.json\ndist\njunit.xml\n!.jsii\n!/lib\n!/lib/**/*.d.ts\n!/lib/**/*.js\n\",\n  \".projen/deps.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"dependencies\": Array [\n      Object {\n        \"name\": \"@types/follow-redirects\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/json-stable-stringify\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/node\",\n        \"type\": \"build\",\n        \"version\": \"^10.17.0\",\n      },\n      Object {\n        \"name\": \"@types/yaml\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@typescript-eslint/eslint-plugin\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@typescript-eslint/parser\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"constructs\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-import-resolver-node\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-import-resolver-typescript\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-plugin-import\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest-junit\",\n        \"type\": \"build\",\n        \"version\": \"^12\",\n      },\n      Object {\n        \"name\": \"jsii\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jsii-diff\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jsii-docgen\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jsii-pacmak\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"json-schema\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"json-schema-to-typescript\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"projen\",\n        \"type\": \"build\",\n        \"version\": \"^999.999.999\",\n      },\n      Object {\n        \"name\": \"standard-version\",\n        \"type\": \"build\",\n        \"version\": \"^9\",\n      },\n      Object {\n        \"name\": \"ts-jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"typescript\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"fast-json-patch\",\n        \"type\": \"bundled\",\n      },\n      Object {\n        \"name\": \"follow-redirects\",\n        \"type\": \"bundled\",\n      },\n      Object {\n        \"name\": \"json-stable-stringify\",\n        \"type\": \"bundled\",\n      },\n      Object {\n        \"name\": \"yaml\",\n        \"type\": \"bundled\",\n      },\n      Object {\n        \"name\": \"constructs\",\n        \"type\": \"peer\",\n      },\n    ],\n  },\n  \".projen/tasks.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"env\": Object {\n      \"PATH\": \"$(npx -c \\\\\"node -e \\\\\\\\\\\\\"console.log(process.env.PATH)\\\\\\\\\\\\\"\\\\\")\",\n    },\n    \"tasks\": Object {\n      \"build\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Full release build (test+compile)\",\n        \"name\": \"build\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"compile\",\n          },\n        ],\n      },\n      \"bump\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Commits a bump to the package version based on conventional commits\",\n        \"name\": \"bump\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"standard-version\",\n          },\n        ],\n      },\n      \"clobber\": Object {\n        \"category\": \"30.maintain\",\n        \"condition\": \"git diff --exit-code > /dev/null\",\n        \"description\": \"hard resets to HEAD of origin and cleans the local repo\",\n        \"env\": Object {\n          \"BRANCH\": \"$(git branch --show-current)\",\n        },\n        \"name\": \"clobber\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"git checkout -b scratch\",\n            \"name\": \"save current HEAD in \\\\\"scratch\\\\\" branch\",\n          },\n          Object {\n            \"exec\": \"git checkout $BRANCH\",\n          },\n          Object {\n            \"exec\": \"git fetch origin\",\n            \"name\": \"fetch latest changes from origin\",\n          },\n          Object {\n            \"exec\": \"git reset --hard origin/$BRANCH\",\n            \"name\": \"hard reset to origin commit\",\n          },\n          Object {\n            \"exec\": \"git clean -fdx\",\n            \"name\": \"clean all untracked files\",\n          },\n          Object {\n            \"say\": \"ready to rock! (unpushed commits are under the \\\\\"scratch\\\\\" branch)\",\n          },\n        ],\n      },\n      \"compat\": Object {\n        \"category\": \"20.release\",\n        \"description\": \"Perform API compatibility check against latest version\",\n        \"name\": \"compat\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii-diff npm:$(node -p \\\\\"require('./package.json').name\\\\\") -k --ignore-file .compatignore || (echo \\\\\"\nUNEXPECTED BREAKING CHANGES: add keys such as 'removed:constructs.Node.of' to .compatignore to skip.\n\\\\\" && exit 1)\",\n          },\n        ],\n      },\n      \"compile\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Only compile\",\n        \"name\": \"compile\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii --silence-warnings=reserved-word --no-fix-peer-dependencies\",\n          },\n          Object {\n            \"spawn\": \"docgen\",\n          },\n          Object {\n            \"exec\": \"cp src/_loadurl.js lib/\",\n          },\n        ],\n      },\n      \"docgen\": Object {\n        \"category\": \"20.release\",\n        \"description\": \"Generate API.md from .jsii manifest\",\n        \"name\": \"docgen\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii-docgen\",\n          },\n        ],\n      },\n      \"eslint\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Runs eslint against the codebase\",\n        \"name\": \"eslint\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test build-tools .projenrc.js\",\n          },\n        ],\n      },\n      \"package\": Object {\n        \"category\": \"20.release\",\n        \"description\": \"Create an npm tarball\",\n        \"name\": \"package\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii-pacmak\",\n          },\n        ],\n      },\n      \"projen:upgrade\": Object {\n        \"category\": \"30.maintain\",\n        \"description\": \"upgrades projen to the latest version\",\n        \"name\": \"projen:upgrade\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"yarn upgrade -L projen\",\n          },\n          Object {\n            \"exec\": \"CI=\\\\\"\\\\\" yarn projen\",\n          },\n        ],\n      },\n      \"release\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Bumps version & push to master\",\n        \"name\": \"release\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"bump\",\n          },\n          Object {\n            \"exec\": \"git push --follow-tags origin master\",\n          },\n        ],\n      },\n      \"test\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run tests\",\n        \"name\": \"test\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"rm -fr lib/\",\n          },\n          Object {\n            \"spawn\": \"test:compile\",\n          },\n          Object {\n            \"exec\": \"jest --passWithNoTests --all\",\n          },\n          Object {\n            \"spawn\": \"eslint\",\n          },\n          Object {\n            \"exec\": \"yarn compile\",\n          },\n        ],\n      },\n      \"test:compile\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"compiles the test code\",\n        \"name\": \"test:compile\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"tsc --noEmit --project tsconfig.jest.json\",\n          },\n        ],\n      },\n      \"test:update\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Update jest snapshots\",\n        \"name\": \"test:update\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --updateSnapshot\",\n          },\n        ],\n      },\n      \"test:watch\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run jest in watch mode\",\n        \"name\": \"test:watch\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --watch\",\n          },\n        ],\n      },\n      \"watch\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Watch & compile in the background\",\n        \"name\": \"watch\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jsii -w --silence-warnings=reserved-word --no-fix-peer-dependencies\",\n          },\n        ],\n      },\n    },\n  },\n  \".projenrc.js\": \"const { JsiiProject, Semver } = require('projen');\n\nconst common = require('./cdk8s.common');\n\nconst project = new JsiiProject({\n  name: 'cdk8s',\n  description: 'Cloud Development Kit for Kubernetes',\n  defaultReleaseBranch: 'master',\n  stability: common.options.stability,\n\n  // without this, the version of 'constructs' would need to be controlled\n  // from this file, since otherwise it would create a 0.0.0 dev dependency.\n  peerDependencyOptions: {\n    pinnedDevDependency: false,\n  },\n\n  ...common.options,\n\n  peerDeps: [\n    'constructs',\n  ],\n  bundledDeps: [\n    'yaml',\n    'json-stable-stringify',\n    'follow-redirects',\n    'fast-json-patch',\n  ],\n  devDeps: [\n    'constructs',\n    '@types/follow-redirects',\n    '@types/json-stable-stringify',\n    '@types/yaml',\n    'json-schema-to-typescript',\n  ],\n\n  // jsii configuration\n  publishToMaven: {\n    javaPackage: 'org.cdk8s',\n    mavenGroupId: 'org.cdk8s',\n    mavenArtifactId: 'cdk8s',\n  },\n  publishToPypi: {\n    distName: 'cdk8s',\n    module: 'cdk8s',\n  },\n  publishToNuget: {\n    dotNetNamespace: 'Org.Cdk8s',\n    packageId: 'Org.Cdk8s',\n  },\n});\n\ncommon.fixup(project);\n\n// _loadurl.js is written in javascript so we need to commit it and also copy it\n// after compilation to the \\`lib/\\` directory.\nproject.gitignore.include('/src/_loadurl.js');\nproject.addCompileCommand('cp src/_loadurl.js lib/');\n\nproject.synth();\n\",\n  \".versionrc.json\": Object {\n    \"bumpFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"commitAll\": true,\n    \"packageFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"scripts\": Object {\n      \"postbump\": \"npx projen && git add .\",\n    },\n  },\n  \"LICENSE\": \"                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \\\\\"License\\\\\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \\\\\"Licensor\\\\\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \\\\\"Legal Entity\\\\\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \\\\\"control\\\\\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \\\\\"You\\\\\" (or \\\\\"Your\\\\\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \\\\\"Source\\\\\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \\\\\"Object\\\\\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \\\\\"Work\\\\\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \\\\\"Derivative Works\\\\\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \\\\\"Contribution\\\\\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \\\\\"submitted\\\\\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \\\\\"Not a Contribution.\\\\\"\n\n      \\\\\"Contributor\\\\\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \\\\\"NOTICE\\\\\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \\\\\"AS IS\\\\\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \\\\\"[]\\\\\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \\\\\"printed page\\\\\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2021 Amazon Web Services\n\n   Licensed under the Apache License, Version 2.0 (the \\\\\"License\\\\\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \\\\\"AS IS\\\\\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\",\n  \"README.md\": \"# replace this\",\n  \"cdk8s-cli.projenrc.js\": \"const { TypeScriptLibraryProject, Semver } = require('projen');\n\nconst common = require('./cdk8s.common');\n\nconst project = new TypeScriptLibraryProject({\n  name: 'cdk8s-cli',\n  description: 'CDK for Kubernetes CLI',\n  defaultReleaseBranch: 'master',\n  bin: {\n    cdk8s: 'bin/cdk8s',\n  },\n  deps: [\n    'cdk8s@^0.0.0',\n    'codemaker',\n    \\`constructs\\`,\n    'fs-extra',\n    'jsii-srcmak',\n    'jsii-pacmak',\n    'sscaff',\n    'yaml',\n    'yargs',\n    'json2jsii',\n    'colors',\n\n    // add @types/node as a regular dependency since it's needed to during \\\\\"import\\\\\"\n    // to compile the generated jsii code.\n    '@types/node',\n  ],\n  devDeps: [\n    '@types/fs-extra',\n    '@types/json-schema',\n  ],\n  ...common.options,\n});\n\nproject.eslint.addIgnorePattern('/templates/');\nproject.jest.addIgnorePattern('/templates/');\n\ncommon.fixup(project);\n\nproject.synth();\n\",\n  \"cdk8s.common.js\": \"exports.options = {\n  minNodeVersion: '10.17.0',\n  repository: 'https://github.com/awslabs/cdk8s.git',\n  authorName: 'Amazon Web Services',\n  authorUrl: 'https://aws.amazon.com',\n  authorOrganization: true,\n  buildWorkflow: false,\n  rebuildBot: false,\n  stability: 'experimental',\n  releaseWorkflow: false,\n  dependabot: false,\n  mergify: false,\n  compat: false,\n  dependabot: false,\n  pullRequestTemplate: false,\n  keywords: [\n    \\\\\"cdk\\\\\",\n    \\\\\"kubernetes\\\\\",\n    \\\\\"k8s\\\\\",\n    \\\\\"constructs\\\\\"\n  ]\n};\n\n// some common fixups for projects\nexports.fixup = project => {\n  // override the default \\\\\"build\\\\\" from projen because currently in this\n  // repo it means \\\\\"compile\\\\\"\n  project.setScript('build', 'yarn compile');\n\n  project.buildTask.reset();\n  project.buildTask.spawn(project.compileTask);\n\n  // // add \\\\\"compile\\\\\" after test because the test command deletes lib/ and we run tests *after* build in this repo.\n  project.addTestCommand('yarn compile');\n\n  // jsii-release is declared at the root level, we don't need it here.\n  project.deps.removeDependency('jsii-release');\n\n  delete project.manifest.scripts.bump;\n  delete project.manifest.scripts.release;\n};\n\",\n  \"cdk8s.projenrc.js\": \"const { JsiiProject, Semver } = require('projen');\n\nconst common = require('./cdk8s.common');\n\nconst project = new JsiiProject({\n  name: 'cdk8s',\n  description: 'Cloud Development Kit for Kubernetes',\n  defaultReleaseBranch: 'master',\n  stability: common.options.stability,\n\n  // without this, the version of 'constructs' would need to be controlled\n  // from this file, since otherwise it would create a 0.0.0 dev dependency.\n  peerDependencyOptions: {\n    pinnedDevDependency: false,\n  },\n\n  ...common.options,\n\n  peerDeps: [\n    'constructs',\n  ],\n  bundledDeps: [\n    'yaml',\n    'json-stable-stringify',\n    'follow-redirects',\n    'fast-json-patch',\n  ],\n  devDeps: [\n    'constructs',\n    '@types/follow-redirects',\n    '@types/json-stable-stringify',\n    '@types/yaml',\n    'json-schema-to-typescript',\n  ],\n\n  // jsii configuration\n  publishToMaven: {\n    javaPackage: 'org.cdk8s',\n    mavenGroupId: 'org.cdk8s',\n    mavenArtifactId: 'cdk8s',\n  },\n  publishToPypi: {\n    distName: 'cdk8s',\n    module: 'cdk8s',\n  },\n  publishToNuget: {\n    dotNetNamespace: 'Org.Cdk8s',\n    packageId: 'Org.Cdk8s',\n  },\n});\n\ncommon.fixup(project);\n\n// _loadurl.js is written in javascript so we need to commit it and also copy it\n// after compilation to the \\`lib/\\` directory.\nproject.gitignore.include('/src/_loadurl.js');\nproject.addCompileCommand('cp src/_loadurl.js lib/');\n\nproject.synth();\n\",\n  \"package.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"author\": Object {\n      \"name\": \"Amazon Web Services\",\n      \"organization\": true,\n      \"url\": \"https://aws.amazon.com\",\n    },\n    \"bundledDependencies\": Array [\n      \"fast-json-patch\",\n      \"follow-redirects\",\n      \"json-stable-stringify\",\n      \"yaml\",\n    ],\n    \"dependencies\": Object {\n      \"fast-json-patch\": \"*\",\n      \"follow-redirects\": \"*\",\n      \"json-stable-stringify\": \"*\",\n      \"yaml\": \"*\",\n    },\n    \"description\": \"Cloud Development Kit for Kubernetes\",\n    \"devDependencies\": Object {\n      \"@types/follow-redirects\": \"*\",\n      \"@types/jest\": \"*\",\n      \"@types/json-stable-stringify\": \"*\",\n      \"@types/node\": \"^10.17.0\",\n      \"@types/yaml\": \"*\",\n      \"@typescript-eslint/eslint-plugin\": \"*\",\n      \"@typescript-eslint/parser\": \"*\",\n      \"constructs\": \"*\",\n      \"eslint\": \"*\",\n      \"eslint-import-resolver-node\": \"*\",\n      \"eslint-import-resolver-typescript\": \"*\",\n      \"eslint-plugin-import\": \"*\",\n      \"jest\": \"*\",\n      \"jest-junit\": \"^12\",\n      \"jsii\": \"*\",\n      \"jsii-diff\": \"*\",\n      \"jsii-docgen\": \"*\",\n      \"jsii-pacmak\": \"*\",\n      \"json-schema\": \"*\",\n      \"json-schema-to-typescript\": \"*\",\n      \"projen\": \"^999.999.999\",\n      \"standard-version\": \"^9\",\n      \"ts-jest\": \"*\",\n      \"typescript\": \"*\",\n    },\n    \"engines\": Object {\n      \"node\": \">= 10.17.0\",\n    },\n    \"jest\": Object {\n      \"clearMocks\": true,\n      \"collectCoverage\": true,\n      \"coverageDirectory\": \"coverage\",\n      \"coveragePathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n      \"coverageReporters\": Array [\n        \"json\",\n        \"lcov\",\n        \"clover\",\n        \"text\",\n      ],\n      \"globals\": Object {\n        \"ts-jest\": Object {\n          \"tsconfig\": \"tsconfig.jest.json\",\n        },\n      },\n      \"preset\": \"ts-jest\",\n      \"reporters\": Array [\n        \"default\",\n        Array [\n          \"jest-junit\",\n          Object {\n            \"outputDirectory\": \"test-reports\",\n          },\n        ],\n      ],\n      \"testMatch\": Array [\n        \"**/__tests__/**/*.ts?(x)\",\n        \"**/?(*.)+(spec|test).ts?(x)\",\n      ],\n      \"testPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n      \"watchPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n    },\n    \"jsii\": Object {\n      \"outdir\": \"dist\",\n      \"targets\": Object {\n        \"dotnet\": Object {\n          \"namespace\": \"Org.Cdk8s\",\n          \"packageId\": \"Org.Cdk8s\",\n        },\n        \"java\": Object {\n          \"maven\": Object {\n            \"artifactId\": \"cdk8s\",\n            \"groupId\": \"org.cdk8s\",\n          },\n          \"package\": \"org.cdk8s\",\n        },\n        \"python\": Object {\n          \"distName\": \"cdk8s\",\n          \"module\": \"cdk8s\",\n        },\n      },\n      \"tsc\": Object {\n        \"outDir\": \"lib\",\n        \"rootDir\": \"src\",\n      },\n    },\n    \"keywords\": Array [\n      \"cdk\",\n      \"constructs\",\n      \"k8s\",\n      \"kubernetes\",\n    ],\n    \"license\": \"Apache-2.0\",\n    \"main\": \"lib/index.js\",\n    \"name\": \"cdk8s\",\n    \"peerDependencies\": Object {\n      \"constructs\": \"*\",\n    },\n    \"repository\": Object {\n      \"type\": \"git\",\n      \"url\": \"https://github.com/awslabs/cdk8s.git\",\n    },\n    \"scripts\": Object {\n      \"build\": \"npx projen build\",\n      \"bump\": \"npx projen bump\",\n      \"clobber\": \"npx projen clobber\",\n      \"compat\": \"npx projen compat\",\n      \"compile\": \"npx projen compile\",\n      \"docgen\": \"npx projen docgen\",\n      \"eslint\": \"npx projen eslint\",\n      \"package\": \"npx projen package\",\n      \"projen\": \"npx projen\",\n      \"projen:upgrade\": \"npx projen projen:upgrade\",\n      \"release\": \"npx projen release\",\n      \"start\": \"npx projen start\",\n      \"test\": \"npx projen test\",\n      \"test:compile\": \"npx projen test:compile\",\n      \"test:update\": \"npx projen test:update\",\n      \"test:watch\": \"npx projen test:watch\",\n      \"watch\": \"npx projen watch\",\n    },\n    \"stability\": \"experimental\",\n    \"types\": \"lib/index.d.ts\",\n    \"version\": \"0.0.0\",\n  },\n  \"src/index.ts\": \"export class Hello {\n  public sayHello() {\n    return 'hello, world!';\n  }\n}\",\n  \"test/hello.test.ts\": \"import { Hello } from '../src';\n\ntest('hello', () => {\n  expect(new Hello().sayHello()).toBe('hello, world!');\n});\",\n  \"tsconfig.eslint.json\": Object {\n    \"compilerOptions\": Object {\n      \"alwaysStrict\": true,\n      \"declaration\": true,\n      \"experimentalDecorators\": true,\n      \"inlineSourceMap\": true,\n      \"inlineSources\": true,\n      \"lib\": Array [\n        \"es2018\",\n      ],\n      \"module\": \"CommonJS\",\n      \"noEmitOnError\": false,\n      \"noFallthroughCasesInSwitch\": true,\n      \"noImplicitAny\": true,\n      \"noImplicitReturns\": true,\n      \"noImplicitThis\": true,\n      \"noUnusedLocals\": true,\n      \"noUnusedParameters\": true,\n      \"resolveJsonModule\": true,\n      \"strict\": true,\n      \"strictNullChecks\": true,\n      \"strictPropertyInitialization\": true,\n      \"stripInternal\": true,\n      \"target\": \"ES2018\",\n    },\n    \"exclude\": Array [\n      \"node_modules\",\n    ],\n    \"include\": Array [\n      \".projenrc.js\",\n      \"src/**/*.ts\",\n      \"test/**/*.ts\",\n    ],\n  },\n  \"tsconfig.jest.json\": Object {\n    \"compilerOptions\": Object {\n      \"alwaysStrict\": true,\n      \"declaration\": true,\n      \"experimentalDecorators\": true,\n      \"inlineSourceMap\": true,\n      \"inlineSources\": true,\n      \"lib\": Array [\n        \"es2018\",\n      ],\n      \"module\": \"CommonJS\",\n      \"noEmitOnError\": false,\n      \"noFallthroughCasesInSwitch\": true,\n      \"noImplicitAny\": true,\n      \"noImplicitReturns\": true,\n      \"noImplicitThis\": true,\n      \"noUnusedLocals\": true,\n      \"noUnusedParameters\": true,\n      \"resolveJsonModule\": true,\n      \"strict\": true,\n      \"strictNullChecks\": true,\n      \"strictPropertyInitialization\": true,\n      \"stripInternal\": true,\n      \"target\": \"ES2018\",\n    },\n    \"exclude\": Array [\n      \"node_modules\",\n    ],\n    \"include\": Array [\n      \".projenrc.js\",\n      \"src/**/*.ts\",\n      \"test/**/*.ts\",\n    ],\n  },\n  \"version.json\": Object {\n    \"version\": \"0.0.0\",\n  },\n}\n`;\n\nexports[`cdk8s-cli 1`] = `\nObject {\n  \".eslintrc.json\": Object {\n    \"env\": Object {\n      \"jest\": true,\n      \"node\": true,\n    },\n    \"extends\": Array [\n      \"plugin:import/typescript\",\n    ],\n    \"ignorePatterns\": Array [\n      \"*.js\",\n      \"!.projenrc.js\",\n      \"*.d.ts\",\n      \"node_modules/\",\n      \"*.generated.ts\",\n      \"coverage\",\n      \"/templates/\",\n    ],\n    \"overrides\": Array [\n      Object {\n        \"files\": Array [\n          \".projenrc.js\",\n        ],\n        \"rules\": Object {\n          \"@typescript-eslint/no-require-imports\": \"off\",\n          \"import/no-extraneous-dependencies\": \"off\",\n        },\n      },\n    ],\n    \"parser\": \"@typescript-eslint/parser\",\n    \"parserOptions\": Object {\n      \"ecmaVersion\": 2018,\n      \"project\": \"./tsconfig.eslint.json\",\n      \"sourceType\": \"module\",\n    },\n    \"plugins\": Array [\n      \"@typescript-eslint\",\n      \"import\",\n    ],\n    \"root\": true,\n    \"rules\": Object {\n      \"@typescript-eslint/indent\": Array [\n        \"error\",\n        2,\n      ],\n      \"@typescript-eslint/member-delimiter-style\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/member-ordering\": Array [\n        \"error\",\n        Object {\n          \"default\": Array [\n            \"public-static-field\",\n            \"public-static-method\",\n            \"protected-static-field\",\n            \"protected-static-method\",\n            \"private-static-field\",\n            \"private-static-method\",\n            \"field\",\n            \"constructor\",\n            \"method\",\n          ],\n        },\n      ],\n      \"@typescript-eslint/no-floating-promises\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/no-require-imports\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/no-shadow\": Array [\n        \"error\",\n      ],\n      \"@typescript-eslint/return-await\": Array [\n        \"error\",\n      ],\n      \"array-bracket-newline\": Array [\n        \"error\",\n        \"consistent\",\n      ],\n      \"array-bracket-spacing\": Array [\n        \"error\",\n        \"never\",\n      ],\n      \"brace-style\": Array [\n        \"error\",\n        \"1tbs\",\n        Object {\n          \"allowSingleLine\": true,\n        },\n      ],\n      \"comma-dangle\": Array [\n        \"error\",\n        \"always-multiline\",\n      ],\n      \"comma-spacing\": Array [\n        \"error\",\n        Object {\n          \"after\": true,\n          \"before\": false,\n        },\n      ],\n      \"curly\": Array [\n        \"error\",\n        \"multi-line\",\n        \"consistent\",\n      ],\n      \"dot-notation\": Array [\n        \"error\",\n      ],\n      \"import/no-extraneous-dependencies\": Array [\n        \"error\",\n        Object {\n          \"devDependencies\": Array [\n            \"**/test/**\",\n            \"**/build-tools/**\",\n          ],\n          \"optionalDependencies\": false,\n          \"peerDependencies\": true,\n        },\n      ],\n      \"import/no-unresolved\": Array [\n        \"error\",\n      ],\n      \"import/order\": Array [\n        \"warn\",\n        Object {\n          \"alphabetize\": Object {\n            \"caseInsensitive\": true,\n            \"order\": \"asc\",\n          },\n          \"groups\": Array [\n            \"builtin\",\n            \"external\",\n          ],\n        },\n      ],\n      \"indent\": Array [\n        \"off\",\n      ],\n      \"key-spacing\": Array [\n        \"error\",\n      ],\n      \"keyword-spacing\": Array [\n        \"error\",\n      ],\n      \"max-len\": Array [\n        \"error\",\n        Object {\n          \"code\": 150,\n          \"ignoreComments\": true,\n          \"ignoreRegExpLiterals\": true,\n          \"ignoreStrings\": true,\n          \"ignoreTemplateLiterals\": true,\n          \"ignoreUrls\": true,\n        },\n      ],\n      \"no-bitwise\": Array [\n        \"error\",\n      ],\n      \"no-duplicate-imports\": Array [\n        \"error\",\n      ],\n      \"no-multi-spaces\": Array [\n        \"error\",\n        Object {\n          \"ignoreEOLComments\": false,\n        },\n      ],\n      \"no-multiple-empty-lines\": Array [\n        \"error\",\n      ],\n      \"no-return-await\": Array [\n        \"off\",\n      ],\n      \"no-shadow\": Array [\n        \"off\",\n      ],\n      \"no-trailing-spaces\": Array [\n        \"error\",\n      ],\n      \"object-curly-newline\": Array [\n        \"error\",\n        Object {\n          \"consistent\": true,\n          \"multiline\": true,\n        },\n      ],\n      \"object-curly-spacing\": Array [\n        \"error\",\n        \"always\",\n      ],\n      \"object-property-newline\": Array [\n        \"error\",\n        Object {\n          \"allowAllPropertiesOnSameLine\": true,\n        },\n      ],\n      \"quote-props\": Array [\n        \"error\",\n        \"consistent-as-needed\",\n      ],\n      \"quotes\": Array [\n        \"error\",\n        \"single\",\n        Object {\n          \"avoidEscape\": true,\n        },\n      ],\n      \"semi\": Array [\n        \"error\",\n        \"always\",\n      ],\n      \"space-before-blocks\": Array [\n        \"error\",\n      ],\n    },\n    \"settings\": Object {\n      \"import/parsers\": Object {\n        \"@typescript-eslint/parser\": Array [\n          \".ts\",\n          \".tsx\",\n        ],\n      },\n      \"import/resolver\": Object {\n        \"node\": Object {},\n        \"typescript\": Object {\n          \"project\": \"./tsconfig.eslint.json\",\n        },\n      },\n    },\n  },\n  \".gitignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n*.lcov\n*.log\n*.pid\n*.pid.lock\n*.seed\n*.tgz\n*.tsbuildinfo\n.cache\n.eslintcache\n.nyc_output\n.yarn-integrity\n/coverage\n/dist\n/lib\n/test-reports/\nbuild/Release\ncoverage\njspm_packages/\njunit.xml\nlerna-debug.log*\nlib-cov\nlogs\nnode_modules/\nnpm-debug.log*\npids\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\nyarn-debug.log*\nyarn-error.log*\n!/.eslintrc.json\n!/.npmignore\n!/.projen/deps.json\n!/.projen/tasks.json\n!/.projenrc.js\n!/.versionrc.json\n!/LICENSE\n!/package.json\n!/src\n!/test\n!/tsconfig.eslint.json\n!/tsconfig.jest.json\n!/tsconfig.json\n!version.json\n\",\n  \".npmignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n/.eslintrc.json\n/.github\n/.idea\n/.projen\n/.projenrc.js\n/.versionrc.json\n/.vscode\n/coverage\n/src\n/test\n/test-reports/\n/tsconfig.eslint.json\n/tsconfig.jest.json\n/tsconfig.json\ndist\njunit.xml\n!/lib\n!/lib/**/*.d.ts\n!/lib/**/*.js\n\",\n  \".projen/deps.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"dependencies\": Array [\n      Object {\n        \"name\": \"@types/fs-extra\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/json-schema\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/node\",\n        \"type\": \"build\",\n        \"version\": \"^10.17.0\",\n      },\n      Object {\n        \"name\": \"@typescript-eslint/eslint-plugin\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@typescript-eslint/parser\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-import-resolver-node\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-import-resolver-typescript\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"eslint-plugin-import\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest-junit\",\n        \"type\": \"build\",\n        \"version\": \"^12\",\n      },\n      Object {\n        \"name\": \"json-schema\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"projen\",\n        \"type\": \"build\",\n        \"version\": \"^999.999.999\",\n      },\n      Object {\n        \"name\": \"standard-version\",\n        \"type\": \"build\",\n        \"version\": \"^9\",\n      },\n      Object {\n        \"name\": \"ts-jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"typescript\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"@types/node\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"cdk8s\",\n        \"type\": \"runtime\",\n        \"version\": \"^0.0.0\",\n      },\n      Object {\n        \"name\": \"codemaker\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"colors\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"constructs\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"fs-extra\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"jsii-pacmak\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"jsii-srcmak\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"json2jsii\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"sscaff\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"yaml\",\n        \"type\": \"runtime\",\n      },\n      Object {\n        \"name\": \"yargs\",\n        \"type\": \"runtime\",\n      },\n    ],\n  },\n  \".projen/tasks.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"env\": Object {\n      \"PATH\": \"$(npx -c \\\\\"node -e \\\\\\\\\\\\\"console.log(process.env.PATH)\\\\\\\\\\\\\"\\\\\")\",\n    },\n    \"tasks\": Object {\n      \"build\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Full release build (test+compile)\",\n        \"name\": \"build\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"compile\",\n          },\n        ],\n      },\n      \"bump\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Commits a bump to the package version based on conventional commits\",\n        \"name\": \"bump\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"standard-version\",\n          },\n        ],\n      },\n      \"clobber\": Object {\n        \"category\": \"30.maintain\",\n        \"condition\": \"git diff --exit-code > /dev/null\",\n        \"description\": \"hard resets to HEAD of origin and cleans the local repo\",\n        \"env\": Object {\n          \"BRANCH\": \"$(git branch --show-current)\",\n        },\n        \"name\": \"clobber\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"git checkout -b scratch\",\n            \"name\": \"save current HEAD in \\\\\"scratch\\\\\" branch\",\n          },\n          Object {\n            \"exec\": \"git checkout $BRANCH\",\n          },\n          Object {\n            \"exec\": \"git fetch origin\",\n            \"name\": \"fetch latest changes from origin\",\n          },\n          Object {\n            \"exec\": \"git reset --hard origin/$BRANCH\",\n            \"name\": \"hard reset to origin commit\",\n          },\n          Object {\n            \"exec\": \"git clean -fdx\",\n            \"name\": \"clean all untracked files\",\n          },\n          Object {\n            \"say\": \"ready to rock! (unpushed commits are under the \\\\\"scratch\\\\\" branch)\",\n          },\n        ],\n      },\n      \"compile\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Only compile\",\n        \"name\": \"compile\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"tsc\",\n          },\n        ],\n      },\n      \"eslint\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Runs eslint against the codebase\",\n        \"name\": \"eslint\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test build-tools .projenrc.js\",\n          },\n        ],\n      },\n      \"package\": Object {\n        \"category\": \"20.release\",\n        \"description\": \"Create an npm tarball\",\n        \"name\": \"package\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"rm -fr dist\",\n          },\n          Object {\n            \"exec\": \"mkdir -p dist/js\",\n          },\n          Object {\n            \"exec\": \"yarn pack\",\n          },\n          Object {\n            \"exec\": \"mv *.tgz dist/js/\",\n          },\n        ],\n      },\n      \"projen:upgrade\": Object {\n        \"category\": \"30.maintain\",\n        \"description\": \"upgrades projen to the latest version\",\n        \"name\": \"projen:upgrade\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"yarn upgrade -L projen\",\n          },\n          Object {\n            \"exec\": \"CI=\\\\\"\\\\\" yarn projen\",\n          },\n        ],\n      },\n      \"release\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Bumps version & push to master\",\n        \"name\": \"release\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"bump\",\n          },\n          Object {\n            \"exec\": \"git push --follow-tags origin master\",\n          },\n        ],\n      },\n      \"test\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run tests\",\n        \"name\": \"test\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"rm -fr lib/\",\n          },\n          Object {\n            \"spawn\": \"test:compile\",\n          },\n          Object {\n            \"exec\": \"jest --passWithNoTests --all\",\n          },\n          Object {\n            \"spawn\": \"eslint\",\n          },\n          Object {\n            \"exec\": \"yarn compile\",\n          },\n        ],\n      },\n      \"test:compile\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"compiles the test code\",\n        \"name\": \"test:compile\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"tsc --noEmit --project tsconfig.jest.json\",\n          },\n        ],\n      },\n      \"test:update\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Update jest snapshots\",\n        \"name\": \"test:update\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --updateSnapshot\",\n          },\n        ],\n      },\n      \"test:watch\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run jest in watch mode\",\n        \"name\": \"test:watch\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --watch\",\n          },\n        ],\n      },\n      \"watch\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Watch & compile in the background\",\n        \"name\": \"watch\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"tsc -w\",\n          },\n        ],\n      },\n    },\n  },\n  \".projenrc.js\": \"const { TypeScriptLibraryProject, Semver } = require('projen');\n\nconst common = require('./cdk8s.common');\n\nconst project = new TypeScriptLibraryProject({\n  name: 'cdk8s-cli',\n  description: 'CDK for Kubernetes CLI',\n  defaultReleaseBranch: 'master',\n  bin: {\n    cdk8s: 'bin/cdk8s',\n  },\n  deps: [\n    'cdk8s@^0.0.0',\n    'codemaker',\n    \\`constructs\\`,\n    'fs-extra',\n    'jsii-srcmak',\n    'jsii-pacmak',\n    'sscaff',\n    'yaml',\n    'yargs',\n    'json2jsii',\n    'colors',\n\n    // add @types/node as a regular dependency since it's needed to during \\\\\"import\\\\\"\n    // to compile the generated jsii code.\n    '@types/node',\n  ],\n  devDeps: [\n    '@types/fs-extra',\n    '@types/json-schema',\n  ],\n  ...common.options,\n});\n\nproject.eslint.addIgnorePattern('/templates/');\nproject.jest.addIgnorePattern('/templates/');\n\ncommon.fixup(project);\n\nproject.synth();\n\",\n  \".versionrc.json\": Object {\n    \"bumpFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"commitAll\": true,\n    \"packageFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"scripts\": Object {\n      \"postbump\": \"npx projen && git add .\",\n    },\n  },\n  \"LICENSE\": \"                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \\\\\"License\\\\\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \\\\\"Licensor\\\\\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \\\\\"Legal Entity\\\\\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \\\\\"control\\\\\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \\\\\"You\\\\\" (or \\\\\"Your\\\\\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \\\\\"Source\\\\\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \\\\\"Object\\\\\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \\\\\"Work\\\\\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \\\\\"Derivative Works\\\\\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \\\\\"Contribution\\\\\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \\\\\"submitted\\\\\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \\\\\"Not a Contribution.\\\\\"\n\n      \\\\\"Contributor\\\\\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \\\\\"NOTICE\\\\\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \\\\\"AS IS\\\\\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \\\\\"[]\\\\\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \\\\\"printed page\\\\\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2021 Amazon Web Services\n\n   Licensed under the Apache License, Version 2.0 (the \\\\\"License\\\\\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \\\\\"AS IS\\\\\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\",\n  \"README.md\": \"# replace this\",\n  \"cdk8s-cli.projenrc.js\": \"const { TypeScriptLibraryProject, Semver } = require('projen');\n\nconst common = require('./cdk8s.common');\n\nconst project = new TypeScriptLibraryProject({\n  name: 'cdk8s-cli',\n  description: 'CDK for Kubernetes CLI',\n  defaultReleaseBranch: 'master',\n  bin: {\n    cdk8s: 'bin/cdk8s',\n  },\n  deps: [\n    'cdk8s@^0.0.0',\n    'codemaker',\n    \\`constructs\\`,\n    'fs-extra',\n    'jsii-srcmak',\n    'jsii-pacmak',\n    'sscaff',\n    'yaml',\n    'yargs',\n    'json2jsii',\n    'colors',\n\n    // add @types/node as a regular dependency since it's needed to during \\\\\"import\\\\\"\n    // to compile the generated jsii code.\n    '@types/node',\n  ],\n  devDeps: [\n    '@types/fs-extra',\n    '@types/json-schema',\n  ],\n  ...common.options,\n});\n\nproject.eslint.addIgnorePattern('/templates/');\nproject.jest.addIgnorePattern('/templates/');\n\ncommon.fixup(project);\n\nproject.synth();\n\",\n  \"cdk8s.common.js\": \"exports.options = {\n  minNodeVersion: '10.17.0',\n  repository: 'https://github.com/awslabs/cdk8s.git',\n  authorName: 'Amazon Web Services',\n  authorUrl: 'https://aws.amazon.com',\n  authorOrganization: true,\n  buildWorkflow: false,\n  rebuildBot: false,\n  stability: 'experimental',\n  releaseWorkflow: false,\n  dependabot: false,\n  mergify: false,\n  compat: false,\n  dependabot: false,\n  pullRequestTemplate: false,\n  keywords: [\n    \\\\\"cdk\\\\\",\n    \\\\\"kubernetes\\\\\",\n    \\\\\"k8s\\\\\",\n    \\\\\"constructs\\\\\"\n  ]\n};\n\n// some common fixups for projects\nexports.fixup = project => {\n  // override the default \\\\\"build\\\\\" from projen because currently in this\n  // repo it means \\\\\"compile\\\\\"\n  project.setScript('build', 'yarn compile');\n\n  project.buildTask.reset();\n  project.buildTask.spawn(project.compileTask);\n\n  // // add \\\\\"compile\\\\\" after test because the test command deletes lib/ and we run tests *after* build in this repo.\n  project.addTestCommand('yarn compile');\n\n  // jsii-release is declared at the root level, we don't need it here.\n  project.deps.removeDependency('jsii-release');\n\n  delete project.manifest.scripts.bump;\n  delete project.manifest.scripts.release;\n};\n\",\n  \"cdk8s.projenrc.js\": \"const { JsiiProject, Semver } = require('projen');\n\nconst common = require('./cdk8s.common');\n\nconst project = new JsiiProject({\n  name: 'cdk8s',\n  description: 'Cloud Development Kit for Kubernetes',\n  defaultReleaseBranch: 'master',\n  stability: common.options.stability,\n\n  // without this, the version of 'constructs' would need to be controlled\n  // from this file, since otherwise it would create a 0.0.0 dev dependency.\n  peerDependencyOptions: {\n    pinnedDevDependency: false,\n  },\n\n  ...common.options,\n\n  peerDeps: [\n    'constructs',\n  ],\n  bundledDeps: [\n    'yaml',\n    'json-stable-stringify',\n    'follow-redirects',\n    'fast-json-patch',\n  ],\n  devDeps: [\n    'constructs',\n    '@types/follow-redirects',\n    '@types/json-stable-stringify',\n    '@types/yaml',\n    'json-schema-to-typescript',\n  ],\n\n  // jsii configuration\n  publishToMaven: {\n    javaPackage: 'org.cdk8s',\n    mavenGroupId: 'org.cdk8s',\n    mavenArtifactId: 'cdk8s',\n  },\n  publishToPypi: {\n    distName: 'cdk8s',\n    module: 'cdk8s',\n  },\n  publishToNuget: {\n    dotNetNamespace: 'Org.Cdk8s',\n    packageId: 'Org.Cdk8s',\n  },\n});\n\ncommon.fixup(project);\n\n// _loadurl.js is written in javascript so we need to commit it and also copy it\n// after compilation to the \\`lib/\\` directory.\nproject.gitignore.include('/src/_loadurl.js');\nproject.addCompileCommand('cp src/_loadurl.js lib/');\n\nproject.synth();\n\",\n  \"package.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"author\": Object {\n      \"name\": \"Amazon Web Services\",\n      \"organization\": true,\n      \"url\": \"https://aws.amazon.com\",\n    },\n    \"bin\": Object {\n      \"cdk8s\": \"bin/cdk8s\",\n    },\n    \"bundledDependencies\": Array [],\n    \"dependencies\": Object {\n      \"@types/node\": \"*\",\n      \"cdk8s\": \"^0.0.0\",\n      \"codemaker\": \"*\",\n      \"colors\": \"*\",\n      \"constructs\": \"*\",\n      \"fs-extra\": \"*\",\n      \"jsii-pacmak\": \"*\",\n      \"jsii-srcmak\": \"*\",\n      \"json2jsii\": \"*\",\n      \"sscaff\": \"*\",\n      \"yaml\": \"*\",\n      \"yargs\": \"*\",\n    },\n    \"description\": \"CDK for Kubernetes CLI\",\n    \"devDependencies\": Object {\n      \"@types/fs-extra\": \"*\",\n      \"@types/jest\": \"*\",\n      \"@types/json-schema\": \"*\",\n      \"@types/node\": \"^10.17.0\",\n      \"@typescript-eslint/eslint-plugin\": \"*\",\n      \"@typescript-eslint/parser\": \"*\",\n      \"eslint\": \"*\",\n      \"eslint-import-resolver-node\": \"*\",\n      \"eslint-import-resolver-typescript\": \"*\",\n      \"eslint-plugin-import\": \"*\",\n      \"jest\": \"*\",\n      \"jest-junit\": \"^12\",\n      \"json-schema\": \"*\",\n      \"projen\": \"^999.999.999\",\n      \"standard-version\": \"^9\",\n      \"ts-jest\": \"*\",\n      \"typescript\": \"*\",\n    },\n    \"engines\": Object {\n      \"node\": \">= 10.17.0\",\n    },\n    \"jest\": Object {\n      \"clearMocks\": true,\n      \"collectCoverage\": true,\n      \"coverageDirectory\": \"coverage\",\n      \"coveragePathIgnorePatterns\": Array [\n        \"/node_modules/\",\n        \"/templates/\",\n      ],\n      \"coverageReporters\": Array [\n        \"json\",\n        \"lcov\",\n        \"clover\",\n        \"text\",\n      ],\n      \"globals\": Object {\n        \"ts-jest\": Object {\n          \"tsconfig\": \"tsconfig.jest.json\",\n        },\n      },\n      \"preset\": \"ts-jest\",\n      \"reporters\": Array [\n        \"default\",\n        Array [\n          \"jest-junit\",\n          Object {\n            \"outputDirectory\": \"test-reports\",\n          },\n        ],\n      ],\n      \"testMatch\": Array [\n        \"**/__tests__/**/*.ts?(x)\",\n        \"**/?(*.)+(spec|test).ts?(x)\",\n      ],\n      \"testPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n        \"/templates/\",\n      ],\n      \"watchPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n    },\n    \"keywords\": Array [\n      \"cdk\",\n      \"constructs\",\n      \"k8s\",\n      \"kubernetes\",\n    ],\n    \"license\": \"Apache-2.0\",\n    \"main\": \"lib/index.js\",\n    \"name\": \"cdk8s-cli\",\n    \"peerDependencies\": Object {},\n    \"repository\": Object {\n      \"type\": \"git\",\n      \"url\": \"https://github.com/awslabs/cdk8s.git\",\n    },\n    \"scripts\": Object {\n      \"build\": \"npx projen build\",\n      \"bump\": \"npx projen bump\",\n      \"clobber\": \"npx projen clobber\",\n      \"compile\": \"npx projen compile\",\n      \"eslint\": \"npx projen eslint\",\n      \"package\": \"npx projen package\",\n      \"projen\": \"npx projen\",\n      \"projen:upgrade\": \"npx projen projen:upgrade\",\n      \"release\": \"npx projen release\",\n      \"start\": \"npx projen start\",\n      \"test\": \"npx projen test\",\n      \"test:compile\": \"npx projen test:compile\",\n      \"test:update\": \"npx projen test:update\",\n      \"test:watch\": \"npx projen test:watch\",\n      \"watch\": \"npx projen watch\",\n    },\n    \"types\": \"lib/index.d.ts\",\n    \"version\": \"0.0.0\",\n  },\n  \"src/index.ts\": \"export class Hello {\n  public sayHello() {\n    return 'hello, world!';\n  }\n}\",\n  \"test/hello.test.ts\": \"import { Hello } from '../src';\n\ntest('hello', () => {\n  expect(new Hello().sayHello()).toBe('hello, world!');\n});\",\n  \"tsconfig.eslint.json\": Object {\n    \"compilerOptions\": Object {\n      \"alwaysStrict\": true,\n      \"declaration\": true,\n      \"experimentalDecorators\": true,\n      \"inlineSourceMap\": true,\n      \"inlineSources\": true,\n      \"lib\": Array [\n        \"es2018\",\n      ],\n      \"module\": \"CommonJS\",\n      \"noEmitOnError\": false,\n      \"noFallthroughCasesInSwitch\": true,\n      \"noImplicitAny\": true,\n      \"noImplicitReturns\": true,\n      \"noImplicitThis\": true,\n      \"noUnusedLocals\": true,\n      \"noUnusedParameters\": true,\n      \"resolveJsonModule\": true,\n      \"strict\": true,\n      \"strictNullChecks\": true,\n      \"strictPropertyInitialization\": true,\n      \"stripInternal\": true,\n      \"target\": \"ES2018\",\n    },\n    \"exclude\": Array [\n      \"node_modules\",\n    ],\n    \"include\": Array [\n      \".projenrc.js\",\n      \"src/**/*.ts\",\n      \"test/**/*.ts\",\n    ],\n  },\n  \"tsconfig.jest.json\": Object {\n    \"compilerOptions\": Object {\n      \"alwaysStrict\": true,\n      \"declaration\": true,\n      \"experimentalDecorators\": true,\n      \"inlineSourceMap\": true,\n      \"inlineSources\": true,\n      \"lib\": Array [\n        \"es2018\",\n      ],\n      \"module\": \"CommonJS\",\n      \"noEmitOnError\": false,\n      \"noFallthroughCasesInSwitch\": true,\n      \"noImplicitAny\": true,\n      \"noImplicitReturns\": true,\n      \"noImplicitThis\": true,\n      \"noUnusedLocals\": true,\n      \"noUnusedParameters\": true,\n      \"resolveJsonModule\": true,\n      \"strict\": true,\n      \"strictNullChecks\": true,\n      \"strictPropertyInitialization\": true,\n      \"stripInternal\": true,\n      \"target\": \"ES2018\",\n    },\n    \"exclude\": Array [\n      \"node_modules\",\n    ],\n    \"include\": Array [\n      \".projenrc.js\",\n      \"src/**/*.ts\",\n      \"test/**/*.ts\",\n    ],\n  },\n  \"tsconfig.json\": Object {\n    \"compilerOptions\": Object {\n      \"alwaysStrict\": true,\n      \"declaration\": true,\n      \"experimentalDecorators\": true,\n      \"inlineSourceMap\": true,\n      \"inlineSources\": true,\n      \"lib\": Array [\n        \"es2018\",\n      ],\n      \"module\": \"CommonJS\",\n      \"noEmitOnError\": false,\n      \"noFallthroughCasesInSwitch\": true,\n      \"noImplicitAny\": true,\n      \"noImplicitReturns\": true,\n      \"noImplicitThis\": true,\n      \"noUnusedLocals\": true,\n      \"noUnusedParameters\": true,\n      \"outDir\": \"lib\",\n      \"resolveJsonModule\": true,\n      \"rootDir\": \"src\",\n      \"strict\": true,\n      \"strictNullChecks\": true,\n      \"strictPropertyInitialization\": true,\n      \"stripInternal\": true,\n      \"target\": \"ES2018\",\n    },\n    \"exclude\": Array [\n      \"node_modules\",\n      \"lib\",\n    ],\n    \"include\": Array [\n      \"src/**/*.ts\",\n    ],\n  },\n  \"version.json\": Object {\n    \"version\": \"0.0.0\",\n  },\n}\n`;\n\nexports[`pnpm 1`] = `\nObject {\n  \".github/dependabot.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nversion: 2\nupdates:\n  - package-ecosystem: npm\n    versioning-strategy: lockfile-only\n    directory: /\n    schedule:\n      interval: daily\n    ignore:\n      - dependency-name: projen\n\",\n  \".github/pull_request_template.md\": \"Fixes #\",\n  \".github/workflows/build.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nname: Build\non:\n  pull_request: {}\n  workflow_dispatch: {}\njobs:\n  build:\n    runs-on: ubuntu-latest\n    env:\n      CI: \\\\\"true\\\\\"\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n      - name: Install dependencies\n        run: pnpm i --frozen-lockfile\n      - name: Synthesize project files\n        run: npx projen\n      - name: Anti-tamper check\n        run: git diff --exit-code\n      - name: Set git identity\n        run: |-\n          git config user.name \\\\\"Auto-bump\\\\\"\n          git config user.email \\\\\"github-actions@github.com\\\\\"\n      - name: Build\n        run: npx projen build\n      - name: Anti-tamper check\n        run: git diff --exit-code\n\",\n  \".github/workflows/rebuild-bot.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nname: rebuild-bot\non:\n  workflow_dispatch: {}\njobs:\n  build:\n    runs-on: ubuntu-latest\n    env:\n      CI: \\\\\"true\\\\\"\n    if: \\${{ github.event.issue.pull_request && contains(github.event.comment.body,\n      '@projen rebuild') }}\n    steps:\n      - name: Post comment to issue\n        uses: peter-evans/create-or-update-comment@v1\n        with:\n          issue-number: \\${{ github.event.issue.number }}\n          body: \\\\\"_projen_: Rebuild started\\\\\"\n      - name: Get pull request branch\n        id: query_pull_request\n        env:\n          PULL_REQUEST_URL: \\${{ github.event.issue.pull_request.url }}\n        run: |-\n          rm -f /tmp/pr.json\n          curl --silent $PULL_REQUEST_URL > /tmp/pr.json\n          BRANCH_STR=$(cat /tmp/pr.json | jq \\\\\".head.ref\\\\\")\n          REPO_NAME=$(cat /tmp/pr.json | jq \\\\\".head.repo.full_name\\\\\")\n          echo \\\\\"::set-output name=branch::$(node -p $BRANCH_STR)\\\\\"\n          echo \\\\\"::set-output name=repo::$(node -p $REPO_NAME)\\\\\"\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          ref: \\${{ steps.query_pull_request.outputs.branch }}\n          repository: \\${{ steps.query_pull_request.outputs.repo }}\n      - name: Install dependencies\n        run: pnpm i --frozen-lockfile\n      - name: Synthesize project files\n        run: npx projen\n      - name: Set git identity\n        run: |-\n          git config user.name \\\\\"Auto-bump\\\\\"\n          git config user.email \\\\\"github-actions@github.com\\\\\"\n      - name: Build\n        run: npx projen build\n      - name: Commit changes\n        run: 'git commit -am \\\\\"chore: update generated files\\\\\"'\n      - name: Push commits\n        run: git push origin $BRANCH\n        env:\n          BRANCH: \\${{ steps.query_pull_request.outputs.branch }}\n      - name: Push tags\n        run: git push --follow-tags origin $BRANCH\n        env:\n          BRANCH: \\${{ steps.query_pull_request.outputs.branch }}\n      - name: Post comment to issue\n        uses: peter-evans/create-or-update-comment@v1\n        with:\n          issue-number: \\${{ github.event.issue.number }}\n          body: \\\\\"_projen_: Rebuild complete. Updates pushed to pull request branch.\\\\\"\n\",\n  \".github/workflows/release.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\nname: Release\non:\n  push:\n    branches:\n      - master\n  workflow_dispatch: {}\njobs:\n  build:\n    runs-on: ubuntu-latest\n    env:\n      CI: \\\\\"true\\\\\"\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          fetch-depth: 0\n      - name: Install dependencies\n        run: pnpm i --frozen-lockfile\n      - name: Synthesize project files\n        run: npx projen\n      - name: Anti-tamper check\n        run: git diff --exit-code\n      - name: Set git identity\n        run: |-\n          git config user.name \\\\\"Auto-bump\\\\\"\n          git config user.email \\\\\"github-actions@github.com\\\\\"\n      - name: Bump to next version\n        run: npx projen bump\n      - name: Build\n        run: npx projen build\n      - name: Anti-tamper check\n        run: git diff --exit-code\n      - name: Push commits\n        run: git push origin $BRANCH\n        env:\n          BRANCH: \\${{ github.ref }}\n      - name: Push tags\n        run: git push --follow-tags origin $BRANCH\n        env:\n          BRANCH: \\${{ github.ref }}\n      - name: Upload artifact\n        uses: actions/upload-artifact@v2.1.1\n        with:\n          name: dist\n          path: dist\n\",\n  \".gitignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n*.lcov\n*.log\n*.pid\n*.pid.lock\n*.seed\n*.tgz\n*.tsbuildinfo\n.cache\n.eslintcache\n.nyc_output\n.yarn-integrity\n/coverage\n/test-reports/\nbuild/Release\ncoverage\njspm_packages/\njunit.xml\nlerna-debug.log*\nlib-cov\nlogs\nnode_modules/\nnpm-debug.log*\npids\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\nyarn-debug.log*\nyarn-error.log*\n!/.github/dependabot.yml\n!/.github/pull_request_template.md\n!/.github/workflows/build.yml\n!/.github/workflows/rebuild-bot.yml\n!/.github/workflows/release.yml\n!/.mergify.yml\n!/.npmignore\n!/.projen/deps.json\n!/.projen/tasks.json\n!/.projenrc.js\n!/.versionrc.json\n!/LICENSE\n!/package.json\n!version.json\n\",\n  \".mergify.yml\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n\npull_request_rules:\n  - name: Automatic merge on approval and successful build\n    actions:\n      merge:\n        method: squash\n        commit_message: title+body\n        strict: smart\n        strict_method: merge\n      delete_head_branch: {}\n    conditions:\n      - \\\\\"#approved-reviews-by>=1\\\\\"\n      - status-success=build\n  - name: Automatic merge PRs with auto-merge label upon successful build\n    actions:\n      merge:\n        method: squash\n        commit_message: title+body\n        strict: smart\n        strict_method: merge\n      delete_head_branch: {}\n    conditions:\n      - label=auto-merge\n      - status-success=build\n  - name: Merge pull requests from dependabot if CI passes\n    conditions:\n      - author=dependabot[bot]\n      - status-success=build\n    actions:\n      merge:\n        method: squash\n        commit_message: title+body\n        strict: smart\n        strict_method: merge\n\",\n  \".npmignore\": \"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\n/.mergify.yml\n/.projen\n/.projenrc.js\n/.versionrc.json\n/coverage\n/test-reports/\njunit.xml\n\",\n  \".projen/deps.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"dependencies\": Array [\n      Object {\n        \"name\": \"aws-sdk\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest\",\n        \"type\": \"build\",\n      },\n      Object {\n        \"name\": \"jest-junit\",\n        \"type\": \"build\",\n        \"version\": \"^12\",\n      },\n      Object {\n        \"name\": \"projen\",\n        \"type\": \"build\",\n        \"version\": \"^999.999.999\",\n      },\n      Object {\n        \"name\": \"standard-version\",\n        \"type\": \"build\",\n        \"version\": \"^9\",\n      },\n      Object {\n        \"name\": \"esbuild\",\n        \"type\": \"runtime\",\n      },\n    ],\n  },\n  \".projen/tasks.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"env\": Object {\n      \"PATH\": \"$(npx -c \\\\\"node -e \\\\\\\\\\\\\"console.log(process.env.PATH)\\\\\\\\\\\\\"\\\\\")\",\n    },\n    \"tasks\": Object {\n      \"build\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Full release build (test+compile)\",\n        \"name\": \"build\",\n      },\n      \"bump\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Commits a bump to the package version based on conventional commits\",\n        \"name\": \"bump\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"standard-version\",\n          },\n        ],\n      },\n      \"clobber\": Object {\n        \"category\": \"30.maintain\",\n        \"condition\": \"git diff --exit-code > /dev/null\",\n        \"description\": \"hard resets to HEAD of origin and cleans the local repo\",\n        \"env\": Object {\n          \"BRANCH\": \"$(git branch --show-current)\",\n        },\n        \"name\": \"clobber\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"git checkout -b scratch\",\n            \"name\": \"save current HEAD in \\\\\"scratch\\\\\" branch\",\n          },\n          Object {\n            \"exec\": \"git checkout $BRANCH\",\n          },\n          Object {\n            \"exec\": \"git fetch origin\",\n            \"name\": \"fetch latest changes from origin\",\n          },\n          Object {\n            \"exec\": \"git reset --hard origin/$BRANCH\",\n            \"name\": \"hard reset to origin commit\",\n          },\n          Object {\n            \"exec\": \"git clean -fdx\",\n            \"name\": \"clean all untracked files\",\n          },\n          Object {\n            \"say\": \"ready to rock! (unpushed commits are under the \\\\\"scratch\\\\\" branch)\",\n          },\n        ],\n      },\n      \"compile\": Object {\n        \"category\": \"00.build\",\n        \"description\": \"Only compile\",\n        \"name\": \"compile\",\n      },\n      \"projen:upgrade\": Object {\n        \"category\": \"30.maintain\",\n        \"description\": \"upgrades projen to the latest version\",\n        \"name\": \"projen:upgrade\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"yarn upgrade -L projen\",\n          },\n          Object {\n            \"exec\": \"CI=\\\\\"\\\\\" yarn projen\",\n          },\n        ],\n      },\n      \"release\": Object {\n        \"category\": \"20.release\",\n        \"condition\": \"! git log --oneline -1 | grep -q \\\\\"chore(release):\\\\\"\",\n        \"description\": \"Bumps version & push to master\",\n        \"name\": \"release\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"bump\",\n          },\n          Object {\n            \"exec\": \"git push --follow-tags origin master\",\n          },\n        ],\n      },\n      \"test\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run tests\",\n        \"name\": \"test\",\n        \"steps\": Array [\n          Object {\n            \"spawn\": \"test:compile\",\n          },\n          Object {\n            \"exec\": \"jest --passWithNoTests --all --updateSnapshot\",\n          },\n        ],\n      },\n      \"test:compile\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"compiles the test code\",\n        \"name\": \"test:compile\",\n      },\n      \"test:update\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Update jest snapshots\",\n        \"name\": \"test:update\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --updateSnapshot\",\n          },\n        ],\n      },\n      \"test:watch\": Object {\n        \"category\": \"10.test\",\n        \"description\": \"Run jest in watch mode\",\n        \"name\": \"test:watch\",\n        \"steps\": Array [\n          Object {\n            \"exec\": \"jest --watch\",\n          },\n        ],\n      },\n    },\n  },\n  \".projenrc.js\": \"const { NodeProject, NodePackageManager } = require(\\\\\"projen\\\\\");\n\nconst project = new NodeProject({\n  name: \\\\\"pnpm-project\\\\\",\n\n  packageManager: NodePackageManager.PNPM,\n  defaultReleaseBranch: 'master',\n\n  deps: [\\\\\"esbuild\\\\\"],\n\n  devDeps: [\\\\\"aws-sdk\\\\\"],\n});\n\nproject.synth();\n\",\n  \".versionrc.json\": Object {\n    \"bumpFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"commitAll\": true,\n    \"packageFiles\": Array [\n      Object {\n        \"filename\": \"version.json\",\n        \"type\": \"json\",\n      },\n    ],\n    \"scripts\": Object {\n      \"postbump\": \"npx projen && git add .\",\n    },\n  },\n  \"LICENSE\": \"                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \\\\\"License\\\\\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \\\\\"Licensor\\\\\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \\\\\"Legal Entity\\\\\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \\\\\"control\\\\\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \\\\\"You\\\\\" (or \\\\\"Your\\\\\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \\\\\"Source\\\\\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \\\\\"Object\\\\\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \\\\\"Work\\\\\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \\\\\"Derivative Works\\\\\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \\\\\"Contribution\\\\\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \\\\\"submitted\\\\\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \\\\\"Not a Contribution.\\\\\"\n\n      \\\\\"Contributor\\\\\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \\\\\"NOTICE\\\\\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \\\\\"AS IS\\\\\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \\\\\"[]\\\\\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \\\\\"printed page\\\\\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2021 \n\n   Licensed under the Apache License, Version 2.0 (the \\\\\"License\\\\\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \\\\\"AS IS\\\\\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\",\n  \"README.md\": \"# replace this\",\n  \"package.json\": Object {\n    \"//\": \"~~ Generated by projen. To modify, edit .projenrc.js and run \\\\\"npx projen\\\\\".\",\n    \"bundledDependencies\": Array [],\n    \"dependencies\": Object {\n      \"esbuild\": \"*\",\n    },\n    \"devDependencies\": Object {\n      \"aws-sdk\": \"*\",\n      \"jest\": \"*\",\n      \"jest-junit\": \"^12\",\n      \"projen\": \"^999.999.999\",\n      \"standard-version\": \"^9\",\n    },\n    \"jest\": Object {\n      \"clearMocks\": true,\n      \"collectCoverage\": true,\n      \"coverageDirectory\": \"coverage\",\n      \"coveragePathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n      \"coverageReporters\": Array [\n        \"json\",\n        \"lcov\",\n        \"clover\",\n        \"text\",\n      ],\n      \"reporters\": Array [\n        \"default\",\n        Array [\n          \"jest-junit\",\n          Object {\n            \"outputDirectory\": \"test-reports\",\n          },\n        ],\n      ],\n      \"testMatch\": Array [\n        \"**/__tests__/**/*.[jt]s?(x)\",\n        \"**/?(*.)+(spec|test).[tj]s?(x)\",\n      ],\n      \"testPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n      \"watchPathIgnorePatterns\": Array [\n        \"/node_modules/\",\n      ],\n    },\n    \"license\": \"Apache-2.0\",\n    \"main\": \"lib/index.js\",\n    \"name\": \"pnpm-project\",\n    \"peerDependencies\": Object {},\n    \"scripts\": Object {\n      \"build\": \"npx projen build\",\n      \"bump\": \"npx projen bump\",\n      \"clobber\": \"npx projen clobber\",\n      \"compile\": \"npx projen compile\",\n      \"projen\": \"npx projen\",\n      \"projen:upgrade\": \"npx projen projen:upgrade\",\n      \"release\": \"npx projen release\",\n      \"start\": \"npx projen start\",\n      \"test\": \"npx projen test\",\n      \"test:compile\": \"npx projen test:compile\",\n      \"test:update\": \"npx projen test:update\",\n      \"test:watch\": \"npx projen test:watch\",\n    },\n    \"version\": \"0.0.0\",\n  },\n  \"version.json\": Object {\n    \"version\": \"0.0.0\",\n  },\n}\n`;\n", "import { PROJEN_DIR, PROJEN_RC, PROJEN_VERSION } from './common';\nimport { GithubWorkflow } from './github';\nimport { AutoMerge } from './github/auto-merge';\nimport { DependabotOptions } from './github/dependabot';\nimport { MergifyOptions } from './github/mergify';\nimport { IgnoreFile } from './ignore-file';\nimport { Jest, JestOptions } from './jest';\nimport { License } from './license';\nimport { NodePackage, NpmTaskExecution, NodePackageManager, NodePackageOptions } from './node-package';\nimport { Project, ProjectOptions } from './project';\nimport { ProjenUpgrade } from './projen-upgrade';\nimport { Publisher } from './publisher';\nimport { Semver } from './semver';\nimport { Task, TaskCategory } from './tasks';\nimport { Version } from './version';\n\nconst PROJEN_SCRIPT = 'projen';\n\nexport interface NodeProjectOptions extends ProjectOptions, NodePackageOptions {\n  /**\n   * License copyright owner.\n   *\n   * @default - defaults to the value of authorName or \"\" if `authorName` is undefined.\n   */\n  readonly copyrightOwner?: string;\n\n  /**\n   * The copyright years to put in the LICENSE file.\n   *\n   * @default - current year\n   */\n  readonly copyrightPeriod?: string;\n\n\n  /**\n   * Version of projen to install.\n   *\n   * @default Semver.latest()\n   */\n  readonly projenVersion?: Semver;\n\n  /**\n   * Indicates of \"projen\" should be installed as a devDependency.\n   *\n   * @default true\n   */\n  readonly projenDevDependency?: boolean;\n\n  /**\n   * The name of the main release branch.\n   *\n   * NOTE: this field is temporarily required as we migrate the default value\n   * from \"master\" to \"main\". Shortly, it will be made optional with \"main\" as\n   * the default.\n   *\n   * @default \"main\"\n   */\n  readonly defaultReleaseBranch: string;\n\n  /**\n   * Define a GitHub workflow for building PRs.\n   * @default - true if not a subproject\n   */\n  readonly buildWorkflow?: boolean;\n\n  /**\n   * Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/\n   * Uses codecov/codecov-action@v1\n   * A secret is required for private repos. Configured with @codeCovTokenSecret\n   * @default false\n   */\n  readonly codeCov?: boolean;\n\n  /**\n   * Define the secret name for a specified https://codecov.io/ token\n   * A secret is required to send coverage for private repositories\n   * @default - if this option is not specified, only public repositories are supported\n   */\n  readonly codeCovTokenSecret?: string;\n\n  /**\n   * Define a GitHub workflow for releasing from \"main\" when new versions are\n   * bumped. Requires that `version` will be undefined.\n   *\n   * @default - true if not a subproject\n   */\n  readonly releaseWorkflow?: boolean;\n\n  /**\n   * Automatically release new versions every commit to one of branches in `releaseBranches`.\n   * @default true\n   */\n  readonly releaseEveryCommit?: boolean;\n\n  /**\n   * CRON schedule to trigger new releases.\n   *\n   * @default - no scheduled releases\n   */\n  readonly releaseSchedule?: string;\n\n  /**\n   * Branches which trigger a release.\n   *\n   * Default value is based on defaultReleaseBranch.\n   *\n   * @default [ \"main\" ]\n   */\n  readonly releaseBranches?: string[];\n\n  /**\n   * Workflow steps to use in order to bootstrap this repo.\n   *\n   * @default \"yarn install --frozen-lockfile && yarn projen\"\n   */\n  readonly workflowBootstrapSteps?: any[];\n\n  /**\n   * Container image to use for GitHub workflows.\n   *\n   * @default - default image\n   */\n  readonly workflowContainerImage?: string;\n\n  /**\n   * Automatically release to npm when new versions are introduced.\n   * @default false\n   */\n  readonly releaseToNpm?: boolean;\n\n  /**\n   * Checks that after build there are no modified files on git.\n   * @default true\n   */\n  readonly antitamper?: boolean;\n\n  /**\n   * The node version to use in GitHub workflows.\n   *\n   * @default - same as `minNodeVersion`\n   */\n  readonly workflowNodeVersion?: string;\n\n  /**\n   * Include dependabot configuration.\n   *\n   * @default true\n   */\n  readonly dependabot?: boolean;\n\n  /**\n   * Options for dependabot.\n   *\n   * @default - default options\n   */\n  readonly dependabotOptions?: DependabotOptions;\n\n  /**\n   * Adds mergify configuration.\n   *\n   * @default true\n   */\n  readonly mergify?: boolean;\n\n  /**\n   * Options for mergify\n   *\n   * @default - default options\n   */\n  readonly mergifyOptions?: MergifyOptions;\n\n  /**\n   * Automatically merge PRs that build successfully and have this label.\n   *\n   * To disable, set this value to an empty string.\n   *\n   * @default \"auto-merge\"\n   */\n  readonly mergifyAutoMergeLabel?: string;\n\n  /**\n   * Periodically submits a pull request for projen upgrades (executes `yarn\n   * projen:upgrade`).\n   *\n   * This setting is a GitHub secret name which contains a GitHub Access Token\n   * with `repo` and `workflow` permissions.\n   *\n   * This token is used to submit the upgrade pull request, which will likely\n   * include workflow updates.\n   *\n   * To create a personal access token see https://github.com/settings/tokens\n   *\n   * @default - no automatic projen upgrade pull requests\n   */\n  readonly projenUpgradeSecret?: string;\n\n  /**\n   * Automatically merge projen upgrade PRs when build passes.\n   * Applies the `mergifyAutoMergeLabel` to the PR if enabled.\n   *\n   * @default - \"true\" if mergify auto-merge is enabled (default)\n   */\n  readonly projenUpgradeAutoMerge?: boolean;\n\n  /**\n   * Customize the projenUpgrade schedule in cron expression.\n   *\n   @default [ \"0 6 * * *\" ]\n   */\n  readonly projenUpgradeSchedule?: string[];\n\n\n  /**\n   * Defines an .npmignore file. Normally this is only needed for libraries that\n   * are packaged as tarballs.\n   *\n   * @default true\n   */\n  readonly npmignoreEnabled?: boolean;\n\n  /**\n   * Additional entries to .npmignore\n   */\n  readonly npmignore?: string[];\n\n  /**\n   * Include a GitHub pull request template.\n   *\n   * @default true\n   */\n  readonly pullRequestTemplate?: boolean;\n\n  /**\n   * The contents of the pull request template.\n   *\n   * @default - default content\n   */\n  readonly pullRequestTemplateContents?: string;\n\n  /**\n   * Installs a GitHub workflow which is triggered when the comment \"@projen\n   * rebuild\" is added to a pull request. The workflow will run a full build and\n   * commit the changes to the pull request branch. This is useful for updating\n   * test snapshots and other generated files like API.md.\n   *\n   * @default - true if not a subproject\n   */\n  readonly rebuildBot?: boolean;\n\n  /**\n   * The pull request bot command to use in order to trigger a rebuild and\n   * commit of the contents of the branch. The command must be prefixed by \"@projen\", e.g. \"@projen rebuild\"\n   * `gh pr review $pr --comment -b \"@projen rebuild\"`\n   *\n   * @default \"rebuild\"\n   */\n  readonly rebuildBotCommand?: string;\n\n  /**\n   * Additional entries to .gitignore\n   */\n  readonly gitignore?: string[];\n\n  /**\n   * Setup jest unit tests\n   * @default true\n   */\n  readonly jest?: boolean;\n\n  /**\n   * Jest options\n   * @default - default options\n   */\n  readonly jestOptions?: JestOptions;\n\n  /**\n   * Version requirement of `jsii-release` which is used to publish modules to npm.\n   * @default \"latest\"\n   */\n  readonly jsiiReleaseVersion?: string;\n\n  /**\n   * A directory which will contain artifacts to be published to npm.\n   *\n   * @default \"dist\"\n   */\n  readonly artifactsDirectory?: string;\n}\n\n/**\n * Automatic bump modes\n */\nexport enum AutoRelease {\n  /**\n   * Automatically bump & release a new version for every commit to \"main\"\n   */\n  EVERY_COMMIT,\n\n  /**\n   * Automatically bump & release a new version on a daily basis.\n   */\n  DAILY\n}\n\n/**\n * Node.js project\n */\nexport class NodeProject extends Project {\n  /**\n   * API for managing the node package.\n   */\n  public readonly package: NodePackage;\n\n  /**\n   * The .npmignore file.\n   */\n  public readonly npmignore?: IgnoreFile;\n\n  /**\n   * @deprecated use `package.allowLibraryDependencies`\n   */\n  public get allowLibraryDependencies(): boolean { return this.package.allowLibraryDependencies; }\n\n  /**\n   * @deprecated use `package.entrypoint`\n   */\n  public get entrypoint(): string { return this.package.entrypoint; }\n\n  /**\n   * Compiles the code. By default for node.js projects this task is empty.\n   */\n  public readonly compileTask: Task;\n\n  /**\n   * Tests the code.\n   */\n  public readonly testTask: Task;\n\n  /**\n   * Compiles the test code.\n   */\n  public readonly testCompileTask: Task;\n\n  /**\n   * The task responsible for a full release build. It spawns: compile + test + release + package\n   */\n  public readonly buildTask: Task;\n\n  /**\n   * Automatic PR merges.\n   */\n  public readonly autoMerge?: AutoMerge;\n\n  private readonly _version: Version;\n\n  /**\n   * The PR build GitHub workflow. `undefined` if `buildWorkflow` is disabled.\n   */\n  protected readonly buildWorkflow?: GithubWorkflow;\n  protected readonly buildWorkflowJobId?: string;\n\n  /**\n   * The release GitHub workflow. `undefined` if `releaseWorkflow` is disabled.\n   */\n  public readonly releaseWorkflow?: GithubWorkflow;\n\n  /**\n   * Package publisher. This will be `undefined` if the project does not have a\n   * release workflow.\n   */\n  public readonly publisher?: Publisher;\n\n  /**\n   * Minimum node.js version required by this package.\n   */\n  public get minNodeVersion(): string | undefined { return this.package.minNodeVersion; }\n\n  /**\n   * Maximum node version required by this pacakge.\n   */\n  public get maxNodeVersion(): string | undefined { return this.package.maxNodeVersion; }\n\n  private readonly nodeVersion?: string;\n\n  /**\n   * Indicates if workflows have anti-tamper checks.\n   */\n  public readonly antitamper: boolean;\n\n  /**\n   * @deprecated use `package.npmDistTag`\n   */\n  protected readonly npmDistTag: string;\n\n  /**\n   * @deprecated use `package.npmRegistry`\n   */\n  protected readonly npmRegistry: string;\n\n  /**\n   * The package manager to use.\n   *\n   * @deprecated use `package.packageManager`\n   */\n  public get packageManager(): NodePackageManager { return this.package.packageManager; }\n\n  /**\n   * The command to use to run scripts (e.g. `yarn run` or `npm run` depends on the package manager).\n   */\n  public readonly runScriptCommand: string;\n\n  /**\n   * The Jest configuration (if enabled)\n   */\n  public readonly jest?: Jest;\n\n  /**\n   * Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).\n   *\n   * @deprecated use `package.npmTaskExecution`\n   */\n  public get npmTaskExecution(): NpmTaskExecution { return this.package.npmTaskExecution; }\n\n  /**\n   * The command to use in order to run the projen CLI.\n   */\n  public get projenCommand(): string { return this.package.projenCommand; }\n\n  /**\n   * @deprecated use `package.addField(x, y)`\n   */\n  public get manifest() {\n    return this.package.manifest;\n  }\n\n  constructor(options: NodeProjectOptions) {\n    super(options);\n\n    this.package = new NodePackage(this, options);\n\n    this.runScriptCommand = (() => {\n      switch (this.packageManager) {\n        case NodePackageManager.NPM: return 'npm run';\n        case NodePackageManager.YARN: return 'yarn run';\n        case NodePackageManager.PNPM: return 'pnpm run';\n        default: throw new Error(`unexpected package manager ${this.packageManager}`);\n      }\n    })();\n\n    this.nodeVersion = options.workflowNodeVersion ?? this.package.minNodeVersion;\n\n    // add PATH for all tasks which includes the project's npm .bin list\n    this.tasks.addEnvironment('PATH', '$(npx -c \"node -e \\\\\\\"console.log(process.env.PATH)\\\\\\\"\")');\n\n    this.compileTask = this.addTask('compile', {\n      description: 'Only compile',\n      category: TaskCategory.BUILD,\n    });\n\n    this.testCompileTask = this.addTask('test:compile', {\n      description: 'compiles the test code',\n      category: TaskCategory.TEST,\n    });\n\n    this.testTask = this.addTask('test', {\n      description: 'Run tests',\n      category: TaskCategory.TEST,\n    });\n\n    this.testTask.spawn(this.testCompileTask);\n\n    this.buildTask = this.addTask('build', {\n      description: 'Full release build (test+compile)',\n      category: TaskCategory.BUILD,\n    });\n\n    this.addLicense(options);\n\n    this.npmDistTag = this.package.npmDistTag;\n    this.npmRegistry = this.package.npmRegistry;\n\n    if (options.npmignoreEnabled ?? true) {\n      this.npmignore = new IgnoreFile(this, '.npmignore');\n    }\n\n    this.addDefaultGitIgnore();\n\n    if (options.gitignore?.length) {\n      for (const i of options.gitignore) {\n        this.gitignore.exclude(i);\n      }\n    }\n\n    if (options.npmignore?.length) {\n      if (!this.npmignore) {\n        throw new Error('.npmignore is not defined for an APP project type. Add \"npmIgnore: true\" to override this');\n      }\n\n      for (const i of options.npmignore) {\n        this.npmignore.exclude(i);\n      }\n    }\n\n\n    this.setScript(PROJEN_SCRIPT, this.package.projenCommand);\n    this.setScript('start', `${this.package.projenCommand} start`);\n\n    this.npmignore?.exclude(`/${PROJEN_RC}`);\n    this.npmignore?.exclude(`/${PROJEN_DIR}`);\n    this.gitignore.include(`/${PROJEN_RC}`);\n\n\n    const projen = options.projenDevDependency ?? true;\n    if (projen) {\n      const projenVersion = options.projenVersion ?? `^${PROJEN_VERSION}`;\n      this.addDevDeps(`projen@${projenVersion}`);\n    }\n\n    if (!options.defaultReleaseBranch) {\n      throw new Error('\"defaultReleaseBranch\" is temporarily a required option while we migrate its default value from \"master\" to \"main\"');\n    }\n\n    const defaultReleaseBranch = options.defaultReleaseBranch ?? 'main';\n\n    // version is read from a committed file called version.json which is how we bump\n    this._version = new Version(this, { releaseBranch: defaultReleaseBranch });\n    this.package.addVersion(this._version.currentVersion);\n\n    // indicate if we have anti-tamper configured in our workflows. used by e.g. Jest\n    // to decide if we can always run with --updateSnapshot\n    this.antitamper = (options.buildWorkflow ?? (this.parent ? false : true)) && (options.antitamper ?? true);\n\n    // configure jest if enabled\n    // must be before the build/release workflows\n    if (options.jest ?? true) {\n      this.jest = new Jest(this, options.jestOptions);\n    }\n\n    if (options.buildWorkflow ?? (this.parent ? false : true)) {\n      const { workflow, buildJobId } = this.createBuildWorkflow('Build', {\n        trigger: {\n          pull_request: { },\n        },\n        image: options.workflowContainerImage,\n        codeCov: options.codeCov ?? false,\n        codeCovTokenSecret: options.codeCovTokenSecret,\n      });\n\n      this.buildWorkflow = workflow;\n      this.buildWorkflowJobId = buildJobId;\n    }\n\n    if (options.releaseWorkflow ?? (this.parent ? false : true)) {\n      const releaseBranches = options.releaseBranches ?? [defaultReleaseBranch];\n\n      const trigger: { [event: string]: any } = { };\n\n      if (options.releaseEveryCommit ?? true) {\n        trigger.push = { branches: releaseBranches };\n      }\n\n      if (options.releaseSchedule) {\n        trigger.schedule = { cron: options.releaseSchedule };\n      }\n\n      const artifactDirectory = options.artifactsDirectory ?? 'dist';\n\n      const { workflow, buildJobId } = this.createBuildWorkflow('Release', {\n        trigger,\n        preBuildSteps: [{\n          name: 'Bump to next version',\n          run: this.runTaskCommand(this._version.bumpTask),\n        }],\n        pushBranch: '${{ github.ref }}',\n        artifactDirectory,\n        image: options.workflowContainerImage,\n        codeCov: options.codeCov ?? false,\n        codeCovTokenSecret: options.codeCovTokenSecret,\n        checkoutWith: {\n          // we must use 'fetch-depth=0' in order to fetch all tags\n          // otherwise tags are not checked out\n          'fetch-depth': 0,\n        },\n      });\n\n      this.releaseWorkflow = workflow;\n\n      this.publisher = new Publisher(this, {\n        workflow: this.releaseWorkflow,\n        artifactName: artifactDirectory,\n        buildJobId,\n        jsiiReleaseVersion: options.jsiiReleaseVersion,\n      });\n\n      if (options.releaseToNpm ?? false) {\n        this.publisher.publishToNpm({\n          distTag: this.package.npmDistTag,\n          registry: this.package.npmRegistry,\n        });\n      }\n    } else {\n      // validate that no release options are selected if the release workflow is disabled.\n      if (options.releaseToNpm) {\n        throw new Error('\"releaseToNpm\" is not supported for APP projects');\n      }\n\n      if (options.releaseBranches) {\n        throw new Error('\"releaseBranches\" is not supported for APP projects');\n      }\n\n      if (options.releaseEveryCommit) {\n        throw new Error('\"releaseEveryCommit\" is not supported for APP projects');\n      }\n\n      if (options.releaseSchedule) {\n        throw new Error('\"releaseSchedule\" is not supported for APP projects');\n      }\n    }\n\n    if (options.mergify ?? true) {\n      this.autoMerge = new AutoMerge(this, {\n        autoMergeLabel: options.mergifyAutoMergeLabel,\n        buildJob: this.buildWorkflowJobId,\n      });\n\n      this.npmignore?.exclude('/.mergify.yml');\n    }\n\n    if (options.dependabot ?? true) {\n      this.github?.addDependabot(options.dependabotOptions);\n    }\n\n    const projenAutoMerge = options.projenUpgradeAutoMerge ?? true;\n    new ProjenUpgrade(this, {\n      autoUpgradeSecret: options.projenUpgradeSecret,\n      autoUpgradeSchedule: options.projenUpgradeSchedule,\n      labels: (projenAutoMerge && this.autoMerge?.autoMergeLabel)\n        ? [this.autoMerge.autoMergeLabel]\n        : [],\n    });\n\n    if (options.pullRequestTemplate ?? true) {\n      this.github?.addPullRequestTemplate(...options.pullRequestTemplateContents ?? []);\n    }\n\n    if (options.rebuildBot ?? (this.parent ? false : true)) {\n      this.addRebuildBot(options.rebuildBotCommand ?? 'rebuild');\n    }\n\n  }\n\n  public addBins(bins: Record<string, string>) {\n    this.package.addBin(bins);\n  }\n\n  /**\n   * Replaces the contents of an npm package.json script.\n   *\n   * @param name The script name\n   * @param command The command to execute\n   */\n  public setScript(name: string, command: string) {\n    this.package.setScript(name, command);\n  }\n\n  /**\n   * Removes the npm script (always successful).\n   * @param name The name of the script.\n   */\n  public removeScript(name: string) {\n    this.package.removeScript(name);\n  }\n\n  /**\n   * Indicates if a script by the name name is defined.\n   * @param name The name of the script\n   */\n  public hasScript(name: string) {\n    return this.package.hasScript(name);\n  }\n\n  /**\n   * DEPRECATED\n   * @deprecated use `project.compileTask.exec()`\n   */\n  public addCompileCommand(...commands: string[]) {\n    for (const c of commands) {\n      this.compileTask.exec(c);\n    }\n  }\n\n  /**\n   * DEPRECATED\n   * @deprecated use `project.testTask.exec()`\n   */\n  public addTestCommand(...commands: string[]) {\n    for (const c of commands) {\n      this.testTask.exec(c);\n    }\n  }\n\n  /**\n   * DEPRECATED\n   * @deprecated use `project.buildTask.exec()`\n   */\n  public addBuildCommand(...commands: string[]) {\n    for (const c of commands) {\n      this.buildTask.exec(c);\n    }\n  }\n\n  /**\n   * Directly set fields in `package.json`.\n   * @param fields The fields to set\n   */\n  public addFields(fields: { [name: string]: any }) {\n    for (const [name, value] of Object.entries(fields)) {\n      this.package.addField(name, value);\n    }\n  }\n\n  /**\n   * Adds keywords to package.json (deduplicated)\n   * @param keywords The keywords to add\n   */\n  public addKeywords(...keywords: string[]) {\n    this.package.addKeywords(...keywords);\n  }\n\n  public get installWorkflowSteps(): any[] {\n    const install = new Array();\n    if (this.nodeVersion) {\n      install.push({\n        name: 'Setup Node.js',\n        uses: 'actions/setup-node@v1',\n        with: { 'node-version': this.nodeVersion },\n      });\n    }\n\n    install.push({\n      name: 'Install dependencies',\n      run: this.package.installCommand,\n    });\n\n    // run \"projen\"\n    install.push({\n      name: 'Synthesize project files',\n      run: this.package.projenCommand,\n    });\n\n    return install;\n  }\n\n  /**\n   * Defines normal dependencies.\n   *\n   * @param deps Names modules to install. By default, the the dependency will\n   * be installed in the next `npx projen` run and the version will be recorded\n   * in your `package.json` file. You can upgrade manually or using `yarn\n   * add/upgrade`. If you wish to specify a version range use this syntax:\n   * `module@^7`.\n   */\n  public addDeps(...deps: string[]) {\n    return this.package.addDeps(...deps);\n  }\n\n  /**\n   * Defines development/test dependencies.\n   *\n   * @param deps Names modules to install. By default, the the dependency will\n   * be installed in the next `npx projen` run and the version will be recorded\n   * in your `package.json` file. You can upgrade manually or using `yarn\n   * add/upgrade`. If you wish to specify a version range use this syntax:\n   * `module@^7`.\n   */\n  public addDevDeps(...deps: string[]) {\n    return this.package.addDevDeps(...deps);\n  }\n\n  /**\n   * Defines peer dependencies.\n   *\n   * When adding peer dependencies, a devDependency will also be added on the\n   * pinned version of the declared peer. This will ensure that you are testing\n   * your code against the minimum version required from your consumers.\n   *\n   * @param deps Names modules to install. By default, the the dependency will\n   * be installed in the next `npx projen` run and the version will be recorded\n   * in your `package.json` file. You can upgrade manually or using `yarn\n   * add/upgrade`. If you wish to specify a version range use this syntax:\n   * `module@^7`.\n   */\n  public addPeerDeps(...deps: string[]) {\n    return this.package.addPeerDeps(...deps);\n  }\n\n  /**\n   * Defines bundled dependencies.\n   *\n   * Bundled dependencies will be added as normal dependencies as well as to the\n   * `bundledDependencies` section of your `package.json`.\n   *\n   * @param deps Names modules to install. By default, the the dependency will\n   * be installed in the next `npx projen` run and the version will be recorded\n   * in your `package.json` file. You can upgrade manually or using `yarn\n   * add/upgrade`. If you wish to specify a version range use this syntax:\n   * `module@^7`.\n   */\n  public addBundledDeps(...deps: string[]) {\n    return this.package.addBundledDeps(...deps);\n  }\n\n  private addLicense(options: NodeProjectOptions) {\n    if (this.package.license) {\n      new License(this, this.package.license, {\n        copyrightOwner: options.copyrightOwner ?? options.authorName,\n        copyrightPeriod: options.copyrightPeriod,\n      });\n    }\n  }\n\n  private addDefaultGitIgnore() {\n    this.gitignore.exclude(\n      '# Logs',\n      'logs',\n      '*.log',\n      'npm-debug.log*',\n      'yarn-debug.log*',\n      'yarn-error.log*',\n      'lerna-debug.log*',\n\n      '# Diagnostic reports (https://nodejs.org/api/report.html)',\n      'report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json',\n\n      '# Runtime data',\n      'pids',\n      '*.pid',\n      '*.seed',\n      '*.pid.lock',\n\n      '# Directory for instrumented libs generated by jscoverage/JSCover',\n      'lib-cov',\n\n      '# Coverage directory used by tools like istanbul',\n      'coverage',\n      '*.lcov',\n\n      '# nyc test coverage',\n      '.nyc_output',\n\n      '# Compiled binary addons (https://nodejs.org/api/addons.html)',\n      'build/Release',\n\n      '# Dependency directories',\n      'node_modules/',\n      'jspm_packages/',\n\n      '# TypeScript cache',\n      '*.tsbuildinfo',\n\n\n      '# Optional eslint cache',\n      '.eslintcache',\n\n      '# Output of \\'npm pack\\'',\n      '*.tgz',\n\n      '# Yarn Integrity file',\n      '.yarn-integrity',\n\n      '# parcel-bundler cache (https://parceljs.org/)',\n      '.cache',\n    );\n  }\n\n  private createBuildWorkflow(name: string, options: NodeBuildWorkflowOptions): BuildWorkflow {\n    const buildJobId = 'build';\n\n    const github = this.github;\n    if (!github) { throw new Error('no github support'); }\n\n    const workflow = github.addWorkflow(name);\n\n    if (options.trigger) {\n      if (options.trigger.issue_comment) {\n        throw new Error('\"issue_comment\" should not be used as a trigger due to a security issue');\n      }\n\n      workflow.on(options.trigger);\n    }\n\n    workflow.on({\n      workflow_dispatch: {}, // allow manual triggering\n    });\n\n    const condition = options.condition ? { if: options.condition } : {};\n    const preBuildSteps = options.preBuildSteps ?? [];\n    const preCheckoutSteps = options.preCheckoutSteps ?? [];\n    const checkoutWith = options.checkoutWith ? { with: options.checkoutWith } : {};\n    const postSteps = options.postSteps ?? [];\n\n    const antitamperSteps = (options.antitamperDisabled || !this.antitamper) ? [] : [{\n      name: 'Anti-tamper check',\n      run: 'git diff --exit-code',\n    }];\n\n    const commitChanges = !options.commit ? [] : [{\n      name: 'Commit changes',\n      run: `git commit -am \"${options.commit}\"`,\n    }];\n\n    const pushChanges = !options.pushBranch ? [] : [\n      {\n        name: 'Push commits',\n        run: 'git push origin $BRANCH',\n        env: {\n          BRANCH: options.pushBranch,\n        },\n      },\n\n      // push tags only after we've managed to push our commits in order to\n      // avoid tags being pushed but commits being rejected due to new commits\n      // see https://github.com/projen/projen/issues/553\n      {\n        name: 'Push tags',\n        run: 'git push --follow-tags origin $BRANCH',\n        env: {\n          BRANCH: options.pushBranch,\n        },\n      },\n    ];\n\n    const job: any = {\n      'runs-on': 'ubuntu-latest',\n      'env': {\n        CI: 'true', // will cause `NodeProject` to execute `yarn install` with `--frozen-lockfile`\n      },\n      ...condition,\n      'steps': [\n        ...preCheckoutSteps,\n\n        // check out sources.\n        {\n          name: 'Checkout',\n          uses: 'actions/checkout@v2',\n          ...checkoutWith,\n        },\n\n        // install dependencies\n        ...this.installWorkflowSteps,\n\n        // perform an anti-tamper check immediately after we run projen.\n        ...antitamperSteps,\n\n        // sets git identity so we can push later\n        {\n          name: 'Set git identity',\n          run: [\n            'git config user.name \"Auto-bump\"',\n            'git config user.email \"github-actions@github.com\"',\n          ].join('\\n'),\n        },\n\n        // if there are changes, creates a bump commit\n\n        ...preBuildSteps,\n\n        // build (compile + test)\n        {\n          name: 'Build',\n          run: this.runTaskCommand(this.buildTask),\n        },\n\n        // run codecov if enabled or a secret token name is passed in\n        // AND jest must be configured\n        ...(options.codeCov || options.codeCovTokenSecret) && this.jest?.config ? [{\n          name: 'Upload coverage to Codecov',\n          uses: 'codecov/codecov-action@v1',\n          with: options.codeCovTokenSecret ? {\n            token: `\\${{ secrets.${options.codeCovTokenSecret} }}`,\n            directory: this.jest.config.coverageDirectory,\n          } : {\n            directory: this.jest.config.coverageDirectory,\n          },\n        }] : [],\n\n        // anti-tamper check (fails if there were changes to committed files)\n        // this will identify any non-committed files generated during build (e.g. test snapshots)\n        ...antitamperSteps,\n\n        // if required, commit changes to the repo\n        ...commitChanges,\n\n        // push bump commit\n        ...pushChanges,\n\n        ...postSteps,\n      ],\n    };\n\n    if (options.image) {\n      job.container = { image: options.image };\n    }\n\n    if (options.artifactDirectory) {\n      job.steps.push({\n        name: 'Upload artifact',\n        uses: 'actions/upload-artifact@v2.1.1',\n        with: {\n          name: options.artifactDirectory,\n          path: options.artifactDirectory,\n        },\n      });\n    }\n\n    workflow.addJobs({ [buildJobId]: job });\n\n    return { workflow, buildJobId };\n  }\n\n  /**\n   * Returns the shell command to execute in order to run a task. If\n   * npmTaskExecution is set to PROJEN, the command will be `npx projen TASK`.\n   * If it is set to SHELL, the command will be `yarn run TASK` (or `npm run\n   * TASK`).\n   *\n   * @param task The task for which the command is required\n   */\n  public runTaskCommand(task: Task) {\n    switch (this.package.npmTaskExecution) {\n      case NpmTaskExecution.PROJEN: return `${this.package.projenCommand} ${task.name}`;\n      case NpmTaskExecution.SHELL: return `${this.runScriptCommand} ${task.name}`;\n      default:\n        throw new Error(`invalid npmTaskExecution mode: ${this.package.npmTaskExecution}`);\n    }\n  }\n\n  private addRebuildBot(command: string) {\n\n    const postComment = (message: string) => ({\n      name: 'Post comment to issue',\n      uses: 'peter-evans/create-or-update-comment@v1',\n      with: {\n        'issue-number': '${{ github.event.issue.number }}',\n        'body': `_projen_: ${message}`,\n      },\n    });\n\n    this.createBuildWorkflow('rebuild-bot', {\n      // trigger: { issue_comment: { types: ['created'] } }, // <--- disabled due to a security issue\n      condition: `\\${{ github.event.issue.pull_request && contains(github.event.comment.body, '@projen ${command}') }}`,\n      antitamperDisabled: true, // definitely do not want that\n\n      // since the \"issue_comment\" event is not triggered on a branch, we need to resolve\n      // the git ref of the pull request before we check out\n      preCheckoutSteps: [\n        postComment('Rebuild started'),\n        {\n          name: 'Get pull request branch',\n          id: 'query_pull_request',\n          env: { PULL_REQUEST_URL: '${{ github.event.issue.pull_request.url }}' },\n          run: [\n            'rm -f /tmp/pr.json',\n            'curl --silent $PULL_REQUEST_URL > /tmp/pr.json',\n            'BRANCH_STR=$(cat /tmp/pr.json | jq \".head.ref\")',\n            'REPO_NAME=$(cat /tmp/pr.json | jq \".head.repo.full_name\")',\n            'echo \"::set-output name=branch::$(node -p $BRANCH_STR)\"',\n            'echo \"::set-output name=repo::$(node -p $REPO_NAME)\"',\n          ].join('\\n'),\n        },\n      ],\n\n      // tell checkout to use the branch we acquired at the previous step\n      checkoutWith: {\n        ref: '${{ steps.query_pull_request.outputs.branch }}',\n        repository: '${{ steps.query_pull_request.outputs.repo }}',\n      },\n\n      // commit changes\n      commit: 'chore: update generated files',\n\n      // and push to the pull request branch\n      pushBranch: '${{ steps.query_pull_request.outputs.branch }}',\n\n      postSteps: [\n        postComment('Rebuild complete. Updates pushed to pull request branch.'),\n      ],\n    });\n  }\n}\n\ninterface BuildWorkflow {\n  readonly workflow: GithubWorkflow;\n  readonly buildJobId: string;\n}\n\ninterface NodeBuildWorkflowOptions {\n  /**\n   * @default - default image\n   */\n  readonly image?: string;\n\n  /**\n   * Adds an \"if\" condition to the workflow.\n   */\n  readonly condition?: any;\n\n  /**\n   * A directory name which contains artifacts to be published (e.g. `dist`).\n   *\n   * javascript artifacts must be under the `js` subdirectory.\n   * @default undefined By default artifacts are not uploaded\n   */\n  readonly artifactDirectory?: string;\n\n  /**\n   * What should trigger the workflow?\n   *\n   * @default - by default workflows can only be triggered by manually.\n   */\n  readonly trigger?: { [event: string]: any };\n\n  /**\n   * Bump a new version for this build.\n   * @default false\n   */\n  // readonly bump?: boolean;\n\n  /**\n   * Run codecoverage step\n   * Send to https://codecov.io/\n   * @default false\n   */\n  readonly codeCov?: boolean;\n\n  /**\n   * The secret name for the https://codecov.io/ token\n   */\n  readonly codeCovTokenSecret?: string;\n\n  readonly preBuildSteps?: any[];\n  readonly preCheckoutSteps?: any[];\n  readonly postSteps?: any[];\n  readonly checkoutWith?: { [key: string]: any };\n\n  /**\n   * Commit any changes with the specified commit message.\n   */\n  readonly commit?: string;\n\n  /**\n   * @default - do not push the changes to a branch\n   */\n  readonly pushBranch?: string;\n\n  /**\n   * Disables anti-tamper checks in the workflow.\n   */\n  readonly antitamperDisabled?: boolean;\n}\n\nexport interface NodeWorkflowSteps {\n  readonly antitamper: any[];\n  readonly install: any[];\n}\n"], "filenames": [".github/workflows/rebuild-bot.yml", "src/__tests__/__snapshots__/integ.test.ts.snap", "src/node-project.ts"], "buggy_code_start_loc": [5, 320, 884], "buggy_code_end_loc": [8, 4212, 1111], "fixing_code_start_loc": [4, 319, 884], "fixing_code_end_loc": [4, 4205, 1122], "type": "CWE-527", "message": "`projen` is a project generation tool that synthesizes project configuration files such as `package.json`, `tsconfig.json`, `.gitignore`, GitHub Workflows, `eslint`, `jest`, and more, from a well-typed definition written in JavaScript. Users of projen's `NodeProject` project type (including any project type derived from it) include a `.github/workflows/rebuild-bot.yml` workflow that may allow any GitHub user to trigger execution of un-trusted code in the context of the \"main\" repository (as opposed to that of a fork). In some situations, such untrusted code may potentially be able to commit to the \"main\" repository. The rebuild-bot workflow is triggered by comments including `@projen rebuild` on pull-request to trigger a re-build of the projen project, and updating the pull request with the updated files. This workflow is triggered by an `issue_comment` event, and thus always executes with a `GITHUB_TOKEN` belonging to the repository into which the pull-request is made (this is in contrast with workflows triggered by `pull_request` events, which always execute with a `GITHUB_TOKEN` belonging to the repository from which the pull-request is made). Repositories that do not have branch protection configured on their default branch (typically `main` or `master`) could possibly allow an untrusted user to gain access to secrets configured on the repository (such as NPM tokens, etc). Branch protection prohibits this escalation, as the managed `GITHUB_TOKEN` would not be able to modify the contents of a protected branch and affected workflows must be defined on the default branch.", "other": {"cve": {"id": "CVE-2021-21423", "sourceIdentifier": "security-advisories@github.com", "published": "2021-04-06T19:15:14.787", "lastModified": "2021-04-15T14:37:24.367", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "`projen` is a project generation tool that synthesizes project configuration files such as `package.json`, `tsconfig.json`, `.gitignore`, GitHub Workflows, `eslint`, `jest`, and more, from a well-typed definition written in JavaScript. Users of projen's `NodeProject` project type (including any project type derived from it) include a `.github/workflows/rebuild-bot.yml` workflow that may allow any GitHub user to trigger execution of un-trusted code in the context of the \"main\" repository (as opposed to that of a fork). In some situations, such untrusted code may potentially be able to commit to the \"main\" repository. The rebuild-bot workflow is triggered by comments including `@projen rebuild` on pull-request to trigger a re-build of the projen project, and updating the pull request with the updated files. This workflow is triggered by an `issue_comment` event, and thus always executes with a `GITHUB_TOKEN` belonging to the repository into which the pull-request is made (this is in contrast with workflows triggered by `pull_request` events, which always execute with a `GITHUB_TOKEN` belonging to the repository from which the pull-request is made). Repositories that do not have branch protection configured on their default branch (typically `main` or `master`) could possibly allow an untrusted user to gain access to secrets configured on the repository (such as NPM tokens, etc). Branch protection prohibits this escalation, as the managed `GITHUB_TOKEN` would not be able to modify the contents of a protected branch and affected workflows must be defined on the default branch."}, {"lang": "es", "value": "\u201cprojen\u201d es una herramienta de generaci\u00f3n de proyectos que sintetiza archivos de configuraci\u00f3n de proyectos como \u201cpackage.json\u201d, \u201ctsconfig.json\u201d, \u201c.gitignore\u201d, GitHub Workflows, \u201ceslint\u201d,\u201d jest`, y m\u00e1s, desde una definici\u00f3n well-typed escrita en JavaScript. Los usuarios de tipo de proyecto \u201cNodeProject\u201d de projen (incluido cualquier tipo de proyecto derivado de \u00e9l) incluyen un flujo de trabajo \u201c.github/workflows /rebuild-bot.yml\u201d que puede permitir que cualquier usuario de GitHub active la ejecuci\u00f3n de c\u00f3digo no confiable en el contexto del repositorio \"main\" (en contraposici\u00f3n al de una bifurcaci\u00f3n). En algunas situaciones, dicho c\u00f3digo que no es de confianza puede potencialmente ser capaz de comprometerse con el repositorio \"main\". El flujo de trabajo rebuild-bot es activado con comentarios que incluyen  \u201c@projen rebuild\u201d en la petici\u00f3n de extracci\u00f3n para activar un re-build del proyecto projen y la actualizaci\u00f3n de la petici\u00f3n de extracci\u00f3n con los archivos actualizados. Este flujo de trabajo es desencadenado por un evento \u201cissue_comment\u201d y, por lo tanto, siempre se ejecuta con un \u201cGITHUB_TOKEN\u201d que pertenece al repositorio en el que la petici\u00f3n de extracci\u00f3n es realizada (esto contrasta con los flujos de trabajo desencadenados por eventos \u201cpull_request\u201d, que siempre se ejecutan con un \u201cGITHUB_TOKEN\u201d perteneciente al repositorio desde el que la pull-request es realizada). Los repositorios que no contienen la protecci\u00f3n de rama configurada en su rama predeterminada (normalmente, \"main\" o \"master\") posiblemente podr\u00edan permitir a un usuario no confiable conseguir acceso a secretos configurados en el repositorio (como tokens NPM, etc.). La protecci\u00f3n de rama proh\u00edbe esta escalada, ya que el \"GITHUB_TOKEN\" administrado no podr\u00eda ser capaz de modificar el contenido de una rama protegida y los flujos de trabajo afectados deben definirse en la rama predeterminada"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.2}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 6.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.6, "impactScore": 5.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-527"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:projen_project:projen:*:*:*:*:*:node.js:*:*", "versionStartIncluding": "0.6.0", "versionEndExcluding": "0.16.41", "matchCriteriaId": "A2E0EE70-F6DF-4821-ACC1-71E47B43303D"}]}]}], "references": [{"url": "https://github.com/projen/projen/commit/36030c6a4b1acd0054673322612e7c70e9446643", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/projen/projen/security/advisories/GHSA-gg2g-m5wc-vccq", "source": "security-advisories@github.com", "tags": ["Mitigation", "Third Party Advisory"]}, {"url": "https://www.npmjs.com/package/projen", "source": "security-advisories@github.com", "tags": ["Product", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/projen/projen/commit/36030c6a4b1acd0054673322612e7c70e9446643"}}