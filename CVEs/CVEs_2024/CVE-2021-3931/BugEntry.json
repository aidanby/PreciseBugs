{"buggy_code": ["@extends('layouts/default')\n\n{{-- Page title --}}\n@section('title')\n  {{ trans('admin/custom_fields/general.custom_fields') }}\n@parent\n@stop\n\n@section('header_right')\n<a href=\"{{ route('fields.index') }}\" class=\"btn btn-primary pull-right\">\n        {{ trans('general.back') }}</a>\n@stop\n\n@section('content')\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"box box-default\">\n      <div class=\"box-header with-border\">\n        <h2 class=\"box-title\">{{ $custom_fieldset->name }} {{ trans('admin/custom_fields/general.fieldset') }}</h2>\n        <div class=\"box-tools pull-right\">\n        </div>\n      </div><!-- /.box-header -->\n      <div class=\"box-body\">\n        <table\n          name=\"fieldsets\" id=\"sort\" class=\"table table-responsive todo-list\">\n          <thead>\n            <tr>\n              {{-- Hide the sorting handle if we can't update the fieldset --}}\n              @can('update', $custom_fieldset)\n              <th class=\"col-md-1\"><span class=\"sr-only\">Reorder</span></th>\n              @endcan\n              <th class=\"col-md-1\">{{ trans('admin/custom_fields/general.order') }}</th>\n              <th class=\"col-md-3\">{{ trans('admin/custom_fields/general.field_name') }}</th>\n              <th class=\"col-md-2\">{{ trans('admin/custom_fields/general.field_format') }}</th>\n              <th class=\"col-md-2\">{{ trans('admin/custom_fields/general.field_element') }}</th>\n              <th class=\"col-md-1\">{{ trans('admin/custom_fields/general.encrypted') }}</th>\n              <th class=\"col-md-1\">{{ trans('admin/custom_fields/general.required') }}</th>\n              <th class=\"col-md-1\"><span class=\"sr-only\">Remove</span></th>\n            </tr>\n          </thead>\n          <tbody>\n            @foreach($custom_fieldset->fields as $field)\n            <tr class=\"{{ Auth::user()->can('update', $custom_fieldset)?'cansort':'' }}\" data-index=\"{{ $field->pivot->custom_field_id }}\" id=\"item_{{ $field->pivot->custom_field_id }}\">\n              {{-- Hide the sorting handle if we can't update the fieldset --}}\n              @can('update', $custom_fieldset)\n              <td>\n                <!-- drag handle -->\n                <span class=\"handle\">\n                <i class=\"fa fa-ellipsis-v\"></i>\n                <i class=\"fa fa-ellipsis-v\"></i>\n                </span>\n              </td>\n              @endcan\n              <td class=\"index\">{{$field->pivot->order}}</td>\n              <td>{{$field->name}}</td>\n              <td>{{$field->format}}</td>\n              <td>{{$field->element}}</td>\n              <td>{{ $field->field_encrypted=='1' ?  trans('general.yes') : trans('general.no') }}</td>\n                <td>\n                    @if ($field->pivot->required)\n                        <a href=\"{{ route('fields.optional', [$custom_fieldset->id, $field->id]) }}\">\n                            <i class=\"fa fa-check text-success\" aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">Required - click to make optional</span>\n                        </a>\n                    @else\n                        <a href=\"{{ route('fields.required', [$custom_fieldset->id, $field->id]) }}\">\n                            <i class=\"fa fa-times text-danger\" aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">Optional - click to make required</span>\n                        </a>\n                    @endif\n                </td>\n              <td>\n                @can('update', $custom_fieldset)\n                <a href=\"{{ route('fields.disassociate', [$field, $custom_fieldset->id]) }}\" class=\"btn btn-sm btn-danger\">Remove</a>\n                @endcan\n              </td>\n            </tr>\n            @endforeach\n          </tbody>\n          @can('update', $custom_fieldset)\n          <tfoot>\n            <tr>\n              <td colspan=\"8\">\n                {{ Form::open(['route' =>\n                [\"fieldsets.associate\",$custom_fieldset->id],\n                'class'=>'form-horizontal',\n                'id' => 'ordering']) }}\n\n\n                <div class=\"form-group col-md-4\">\n                  <label for=\"field_id\" class=\"sr-only\">\n                   Add Field to Fieldset\n                  </label>\n                  {{ Form::select(\"field_id\",$custom_fields_list,\"\",['aria-label'=>'field_id', 'class'=>'select2']) }}\n\n                </div>\n\n                <div class=\"form-group col-md-2\" style=\"vertical-align: middle;\">\n\n                  <label for=\"required\">\n                    {{ Form::checkbox('required', 'on', old('required'), array('class' => 'minimal', 'aria-label'=>'required')) }}\n                    {{ trans('admin/custom_fields/general.required') }}\n                  </label>\n\n                </div>\n                <div class=\"form-group col-md-2\">\n\n                  {{ Form::text('order', $maxid, array('class' => 'form-control col-sm-1 col-md-1', 'style'=> 'width: 80px; padding-;right: 10px;', 'aria-label'=>'order', 'maxlength'=>'3', 'size'=>'3')) }}\n                  <label for=\"order\">   Order </label>\n                </div>\n\n                <div class=\"form-group col-md-3\">\n                  <button type=\"submit\" class=\"btn btn-primary\"> {{ trans('general.save') }}</button>\n                </div>\n                {{ Form::close() }}\n\n              </td>\n            </tr>\n          </tfoot>\n          @endcan\n        </table>\n      </div> <!-- /.box-body-->\n    </div> <!-- /.box.box-default-->\n  </div> <!-- /.col-md-12-->\n</div> <!--/.row-->\n\n@stop\n\n@push('js')\n  @can('update', $custom_fieldset)\n\n  <script nonce=\"{{ csrf_token() }}\">\n  var fixHelperModified = function(e, tr) {\n      var $originals = tr.children();\n      var $helper = tr.clone();\n      $helper.children().each(function(index) {\n          $(this).width($originals.eq(index).width())\n      });\n      return $helper;\n  },\n      updateIndex = function(e, ui) {\n          $('td.index', ui.item.parent()).each(function (i) {\n              $(this).html(i + 1);\n              $.ajax({\n                method: \"POST\",\n                url: \"{{ route('api.customfields.order', $custom_fieldset->id)  }}\",\n                headers: {\n                    \"X-Requested-With\": 'XMLHttpRequest',\n                    \"X-CSRF-TOKEN\": $('meta[name=\"csrf-token\"]').attr('content')\n                },\n                data: $(\"#sort tbody\").sortable('serialize', {\n                }),\n\n                success: function(data) {\n                    //console.log('ajax fired');\n                    // do some stuff here\n\n\n                }\n      \t    });\n          });\n      };\n\n  // this uses the jquery UI sortable method, NOT the query-dragtable library\n  $(\"#sort tbody\").sortable({\n      helper: fixHelperModified,\n      stop: updateIndex\n  }).disableSelection();\n</script>\n  @endcan\n@endpush\n", "<?php\n/*\n* Custom Fields Routes\n*/\n\n\n\nRoute::group([ 'prefix' => 'fields','middleware' => ['auth'] ], function () {\n\n    Route::get('required/{fieldset_id}/{field_id}',\n        ['uses' => 'CustomFieldsetsController@makeFieldRequired',\n            'as' => 'fields.required']\n    );\n\n    Route::get('optional/{fieldset_id}/{field_id}',\n        ['uses' => 'CustomFieldsetsController@makeFieldOptional',\n            'as' => 'fields.optional']\n    );\n\n    Route::get('{field_id}/fieldset/{fieldset_id}/disassociate',\n        ['uses' => 'CustomFieldsController@deleteFieldFromFieldset',\n        'as' => 'fields.disassociate']\n    );\n\n    Route::post('fieldsets/{id}/associate',\n        ['uses' => 'CustomFieldsetsController@associate',\n        'as' => 'fieldsets.associate']\n    );\n\n    Route::resource('fieldsets', 'CustomFieldsetsController', [\n    'parameters' => ['fieldset' => 'field_id', 'field' => 'field_id']\n    ]);\n\n\n});\n\nRoute::resource('fields', 'CustomFieldsController', [\n    'middleware' => ['auth'],\n    'parameters' => ['field' => 'field_id', 'fieldset' => 'fieldset_id']\n]);\n"], "fixing_code": ["@extends('layouts/default')\n\n{{-- Page title --}}\n@section('title')\n  {{ trans('admin/custom_fields/general.custom_fields') }}\n@parent\n@stop\n\n@section('header_right')\n<a href=\"{{ route('fields.index') }}\" class=\"btn btn-primary pull-right\">\n        {{ trans('general.back') }}</a>\n@stop\n\n@section('content')\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"box box-default\">\n      <div class=\"box-header with-border\">\n        <h2 class=\"box-title\">{{ $custom_fieldset->name }} {{ trans('admin/custom_fields/general.fieldset') }}</h2>\n        <div class=\"box-tools pull-right\">\n        </div>\n      </div><!-- /.box-header -->\n      <div class=\"box-body\">\n        <table\n          name=\"fieldsets\" id=\"sort\" class=\"table table-responsive todo-list\">\n          <thead>\n            <tr>\n              {{-- Hide the sorting handle if we can't update the fieldset --}}\n              @can('update', $custom_fieldset)\n              <th class=\"col-md-1\"><span class=\"sr-only\">Reorder</span></th>\n              @endcan\n              <th class=\"col-md-1\">{{ trans('admin/custom_fields/general.order') }}</th>\n              <th class=\"col-md-3\">{{ trans('admin/custom_fields/general.field_name') }}</th>\n              <th class=\"col-md-2\">{{ trans('admin/custom_fields/general.field_format') }}</th>\n              <th class=\"col-md-2\">{{ trans('admin/custom_fields/general.field_element') }}</th>\n              <th class=\"col-md-1\">{{ trans('admin/custom_fields/general.encrypted') }}</th>\n              <th class=\"col-md-1\">{{ trans('admin/custom_fields/general.required') }}</th>\n              <th class=\"col-md-1\"><span class=\"sr-only\">Remove</span></th>\n            </tr>\n          </thead>\n          <tbody>\n            @foreach($custom_fieldset->fields as $field)\n            <tr class=\"{{ Auth::user()->can('update', $custom_fieldset)?'cansort':'' }}\" data-index=\"{{ $field->pivot->custom_field_id }}\" id=\"item_{{ $field->pivot->custom_field_id }}\">\n              {{-- Hide the sorting handle if we can't update the fieldset --}}\n              @can('update', $custom_fieldset)\n              <td>\n                <!-- drag handle -->\n                <span class=\"handle\">\n                <i class=\"fa fa-ellipsis-v\"></i>\n                <i class=\"fa fa-ellipsis-v\"></i>\n                </span>\n              </td>\n              @endcan\n              <td class=\"index\">{{$field->pivot->order}}</td>\n              <td>{{$field->name}}</td>\n              <td>{{$field->format}}</td>\n              <td>{{$field->element}}</td>\n              <td>{{ $field->field_encrypted=='1' ?  trans('general.yes') : trans('general.no') }}</td>\n                <td>\n                  \n                    @if ($field->pivot->required)\n                    <form method=\"post\" action=\"{{ route('fields.optional', [$custom_fieldset->id, $field->id]) }}\">\n                      @csrf \n                      <button type=\"submit\" class=\"btn btn-link\"><i class=\"fa fa-check text-success\" aria-hidden=\"true\"></i></button>\n                      </form>\n\n                    @else\n\n                      <form method=\"post\" action=\"{{ route('fields.required', [$custom_fieldset->id, $field->id]) }}\">\n                      @csrf \n                      <button type=\"submit\" class=\"btn btn-link\"><i class=\"fa fa-times text-danger\" aria-hidden=\"true\"></i></button>\n                      </form>\n                    @endif\n                    \n                </td>\n              <td>\n                @can('update', $custom_fieldset)\n                <form method=\"post\" action=\"{{ route('fields.disassociate', [$field, $custom_fieldset->id]) }}\">\n                  @csrf \n                  <button type=\"submit\" class=\"btn btn-sm btn-danger\">Remove</button>\n                </form>\n                @endcan\n              </td>\n            </tr>\n            @endforeach\n          </tbody>\n          @can('update', $custom_fieldset)\n          <tfoot>\n            <tr>\n              <td colspan=\"8\">\n                {{ Form::open(['route' =>\n                [\"fieldsets.associate\",$custom_fieldset->id],\n                'class'=>'form-horizontal',\n                'id' => 'ordering']) }}\n\n\n                <div class=\"form-group col-md-4\">\n                  <label for=\"field_id\" class=\"sr-only\">\n                   Add Field to Fieldset\n                  </label>\n                  {{ Form::select(\"field_id\",$custom_fields_list,\"\",['aria-label'=>'field_id', 'class'=>'select2']) }}\n\n                </div>\n\n                <div class=\"form-group col-md-2\" style=\"vertical-align: middle;\">\n\n                  <label for=\"required\">\n                    {{ Form::checkbox('required', 'on', old('required'), array('class' => 'minimal', 'aria-label'=>'required')) }}\n                    {{ trans('admin/custom_fields/general.required') }}\n                  </label>\n\n                </div>\n                <div class=\"form-group col-md-2\">\n\n                  {{ Form::text('order', $maxid, array('class' => 'form-control col-sm-1 col-md-1', 'style'=> 'width: 80px; padding-;right: 10px;', 'aria-label'=>'order', 'maxlength'=>'3', 'size'=>'3')) }}\n                  <label for=\"order\">   Order </label>\n                </div>\n\n                <div class=\"form-group col-md-3\">\n                  <button type=\"submit\" class=\"btn btn-primary\"> {{ trans('general.save') }}</button>\n                </div>\n                {{ Form::close() }}\n\n              </td>\n            </tr>\n          </tfoot>\n          @endcan\n        </table>\n      </div> <!-- /.box-body-->\n    </div> <!-- /.box.box-default-->\n  </div> <!-- /.col-md-12-->\n</div> <!--/.row-->\n\n@stop\n\n@push('js')\n  @can('update', $custom_fieldset)\n\n  <script nonce=\"{{ csrf_token() }}\">\n  var fixHelperModified = function(e, tr) {\n      var $originals = tr.children();\n      var $helper = tr.clone();\n      $helper.children().each(function(index) {\n          $(this).width($originals.eq(index).width())\n      });\n      return $helper;\n  },\n      updateIndex = function(e, ui) {\n          $('td.index', ui.item.parent()).each(function (i) {\n              $(this).html(i + 1);\n              $.ajax({\n                method: \"POST\",\n                url: \"{{ route('api.customfields.order', $custom_fieldset->id)  }}\",\n                headers: {\n                    \"X-Requested-With\": 'XMLHttpRequest',\n                    \"X-CSRF-TOKEN\": $('meta[name=\"csrf-token\"]').attr('content')\n                },\n                data: $(\"#sort tbody\").sortable('serialize', {\n                }),\n\n                success: function(data) {\n                    //console.log('ajax fired');\n                    // do some stuff here\n\n\n                }\n      \t    });\n          });\n      };\n\n  // this uses the jquery UI sortable method, NOT the query-dragtable library\n  $(\"#sort tbody\").sortable({\n      helper: fixHelperModified,\n      stop: updateIndex\n  }).disableSelection();\n</script>\n  @endcan\n@endpush\n", "<?php\n/*\n* Custom Fields Routes\n*/\n\n\n\nRoute::group([ 'prefix' => 'fields','middleware' => ['auth'] ], function () {\n\n    Route::post('required/{fieldset_id}/{field_id}',\n        ['uses' => 'CustomFieldsetsController@makeFieldRequired',\n            'as' => 'fields.required']\n    );\n\n    Route::post('optional/{fieldset_id}/{field_id}',\n        ['uses' => 'CustomFieldsetsController@makeFieldOptional',\n            'as' => 'fields.optional']\n    );\n\n    Route::post('{field_id}/fieldset/{fieldset_id}/disassociate',\n        ['uses' => 'CustomFieldsController@deleteFieldFromFieldset',\n        'as' => 'fields.disassociate']\n    );\n\n    Route::post('fieldsets/{id}/associate',\n        ['uses' => 'CustomFieldsetsController@associate',\n        'as' => 'fieldsets.associate']\n    );\n\n    Route::resource('fieldsets', 'CustomFieldsetsController', [\n    'parameters' => ['fieldset' => 'field_id', 'field' => 'field_id']\n    ]);\n\n\n});\n\nRoute::resource('fields', 'CustomFieldsController', [\n    'middleware' => ['auth'],\n    'parameters' => ['field' => 'field_id', 'fieldset' => 'fieldset_id']\n]);\n"], "filenames": ["resources/views/custom_fields/fieldsets/view.blade.php", "routes/web/fields.php"], "buggy_code_start_loc": [59, 10], "buggy_code_end_loc": [75, 21], "fixing_code_start_loc": [60, 10], "fixing_code_end_loc": [82, 21], "type": "CWE-352", "message": "snipe-it is vulnerable to Cross-Site Request Forgery (CSRF)", "other": {"cve": {"id": "CVE-2021-3931", "sourceIdentifier": "security@huntr.dev", "published": "2021-11-13T09:15:06.967", "lastModified": "2021-11-16T19:35:28.017", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "snipe-it is vulnerable to Cross-Site Request Forgery (CSRF)"}, {"lang": "es", "value": "snipe-it es vulnerable a un ataque de tipo Cross-Site Request Forgery (CSRF)"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:snipeitapp:snipe-it:*:*:*:*:*:*:*:*", "versionEndIncluding": "5.3.1", "matchCriteriaId": "57AF9D3F-71A7-49BC-BEA8-BC6315B348FF"}]}]}], "references": [{"url": "https://github.com/snipe/snipe-it/commit/0d811d067c8e064252c0143c39d6cd4c3133679e", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/03b21d69-3bf5-4b2f-a2cf-872dd677a68f", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/snipe/snipe-it/commit/0d811d067c8e064252c0143c39d6cd4c3133679e"}}