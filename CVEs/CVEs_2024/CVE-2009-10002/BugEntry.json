{"buggy_code": ["<!DOCTYPE html>\r\n<html>\r\n<script src=\"utils/api.js\"></script>\r\n<script src=\"utils/re.js\"></script>\r\n<script src=\"utils/cache.js\"></script>\r\n<script>\r\n\r\n/**\r\n * Copyright 2009 Daniel Pupius (http://code.google.com/p/fittr/)\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n *\r\n * Background Page.\r\n * Used for API access from the content scripts.\r\n */\r\n\r\nvar API_KEY = '92f14cd6624fc2f44d1f59f119ece00a';\r\n\r\nchrome.extension.onConnect.addListener(onPortConnect);\r\n\r\nvar dataCache = new Cache;\r\n\r\nfunction onPortConnect(port) {\r\n  var type = port.name.split('_')[0];\r\n  var listener = function(params, port) {\r\n    var cachedValue;\r\n    if (!params.force) cachedValue = dataCache.get(type, params);\r\n    if (cachedValue) {\r\n      console.log('Data available in local cache ' + type);\r\n      port.postMessage(cachedValue);\r\n    } else {\r\n      makeRequest(port, type, params);\r\n    }\r\n    port.onMessage.removeListener(listener);\r\n  };  \r\n  port.onMessage.addListener(listener);\r\n}\r\n\r\nfunction makeRequest(port, type, params) {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.onreadystatechange = function() {\r\n    if (xhr.readyState == 4) {\r\n      var status = xhr.status;\r\n      var response, err = '';\r\n      try {\r\n        response = eval('(' + xhr.responseText + ')');\r\n      } catch (e) {\r\n        status = -1;\r\n        err = e.message;\r\n      }\r\n      var responseObject = {\r\n        status: status,\r\n        content: response,\r\n        error: err\r\n      };\r\n      if (status == 200 && !params.nocache) dataCache.put(type, params, responseObject);\r\n      port.postMessage(responseObject);\r\n    }\r\n  };\r\n  var url = 'http://api.flickr.com/services/rest/?' +\r\n      'format=json&' +\r\n      'nojsoncallback=1&' + \r\n      'method=' + type + '&' +\r\n      'api_key=' + api.API_KEY;\r\n  for (var key in params) {\r\n    url += '&' + key + '=' + params[key];\r\n  }\r\n  xhr.open('GET', url);\r\n  xhr.send();\r\n}\r\n\r\n\r\n\r\n// Listen for tab changes and enable the page action if appropriate.\r\nchrome.tabs.onUpdated.addListener(function(tabId, changeInfo) {\r\n  checkTabForFlickrImg(tabId);\r\n});\r\n\r\nchrome.tabs.onCreated.addListener(function(tab) {\r\n  checkTabForFlickrImg(tab.id);\r\n});\r\n\r\nfunction checkTabForFlickrImg(tab) {\r\n  chrome.tabs.get(tab, function(info) {\r\n    var url = info.url;\r\n    if (url && re.PHOTO_URL.test(url)) {\r\n      console.log('Found flickr Img URL: ' + url);\r\n      chrome.pageActions.enableForTab('gotopage', {\r\n        tabId: tab,\r\n        url: url\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nchrome.pageActions['gotopage'].addListener(function(pageActionId, info) {\r\n  var m = re.PHOTO_URL.exec(info.tabUrl);\r\n  if (m) {\r\n    chrome.tabs.update(info.tabId,\r\n        {url: 'http://www.flickr.com/photo.gne?id=' + m[1]});\r\n  }\r\n});\r\n\r\n</script>\r\n</html>", "/**\r\n * Copyright 2009 Daniel Pupius (http://code.google.com/p/fittr/)\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n *\r\n * Easy Exif\r\n * Adds a link that allows you to view the EXIF information for a phone inline\r\n * without navigating to a separate page.  Shows a limited subset for brevity.\r\n */\r\n \r\nvar exif = (function() {\r\n  \r\n  var EXIF_TAG_WHITELIST = {\r\n    FileSize: 1,\r\n    MIMEType: 1,\r\n    Model: 1,\r\n    ExposureTime: 1,\r\n    FNumber: 1,\r\n    ISO: 1,\r\n    ExposureCompensation: 1,\r\n    FocalLength: 1,\r\n    Lens: 1\r\n  };\r\n  \r\n  var link;\r\n  if (page.getPhotoId()) {\r\n    link = addPhotoLink('+ EXIF', 'Show selected EXIF information inline.');\r\n    if (!link) return;\r\n    link.id = 'xxxExifLinkEl';\r\n    link.style.cssFloat = 'left';\r\n    link.addEventListener('click', toggleExifDisplay);\r\n  }\r\n  \r\n  var showing = false;\r\n  function toggleExifDisplay(e) {\r\n    var el = getExifEl();\r\n    var linkEl = getEl('xxxExifLinkEl');\r\n    if (showing) {\r\n      linkEl.innerHTML = '+ EXIF';\r\n      el.style.height = '0';\r\n    } else {\r\n      linkEl.innerHTML = '&ndash; EXIF';\r\n      el.style.height = el.scrollHeight + 'px';\r\n    }\r\n    showing = !showing;\r\n  }\r\n  \r\n  function getExifEl() {\r\n    var el = getEl('fittr-exif-dislay');\r\n    if (!el) {\r\n      el = createEl('div');\r\n      el.id = 'fittr-exif-dislay';\r\n      el.innerHTML = '<i>Loading</i>';\r\n      link.parentNode.parentNode.insertBefore(el, link.parentNode.nextSibling);\r\n\r\n      api.makeApiRequest(api.RequestType.GET_EXIF, {photo_id: page.getPhotoId()}, function(data) {\r\n        if (data.status == 200 && data.content.stat == 'ok') {\r\n          var html = '<table class=\"fittr-exif-table\">';\r\n          var seen = {};\r\n          for (var i = 0; i < data.content.photo.exif.length; i++) {\r\n            var item = data.content.photo.exif[i];\r\n            if (item.tag in EXIF_TAG_WHITELIST && !(item.tag in seen)) {\r\n              seen[item.tag] = 1;\r\n              var value = item.clean ? item.clean._content : item.raw._content;\r\n              html += '<tr><td>' + item.label + '</td><td>' + value + '</td></tr>';\r\n            }\r\n          }\r\n          html += '</table>';\r\n          el.innerHTML = html;\r\n        } else if (data.status == 200 && data.content.stat == 'fail') {\r\n          el.innerHTML = '<i>Error loading EXIF : ' + data.content.message + '</i>';\r\n        } else {\r\n          el.innerHTML = '<i>Error loading EXIF.</i>';\r\n        }\r\n        el.style.height = el.scrollHeight + 'px';\r\n      });\r\n    }\r\n    return el;\r\n  }\r\n  \r\n  return {\r\n    toggle: toggleExifDisplay\r\n  };\r\n})();\r\n", "/**\r\n * Copyright 2009 Daniel Pupius (http://code.google.com/p/fittr/)\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n *\r\n * Dom\r\n * Shortcuts for common DOM operations.\r\n */\r\n\r\nfunction createText(txt) {\r\n  return document.createTextNode(txt); \r\n}\r\n\r\nfunction createEl(el) {\r\n  return document.createElement(el); \r\n}\r\n\r\nfunction getEl(id) {\r\n  return document.getElementById(id);\r\n}\r\n\r\nfunction query(sel) {\r\n  return document.querySelectorAll(sel);\r\n}\r\n\r\nfunction clickElement(el) {\r\n  var evt = document.createEvent('MouseEvents');\r\n  evt.initMouseEvent('click', true, true, window,\r\n      0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n  el.dispatchEvent(evt);\r\n}"], "fixing_code": ["<!DOCTYPE html>\r\n<html>\r\n<script src=\"utils/api.js\"></script>\r\n<script src=\"utils/re.js\"></script>\r\n<script src=\"utils/cache.js\"></script>\r\n<script>\r\n\r\n/**\r\n * Copyright 2009 Daniel Pupius (http://code.google.com/p/fittr/)\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n *\r\n * Background Page.\r\n * Used for API access from the content scripts.\r\n */\r\n\r\nvar API_KEY = '92f14cd6624fc2f44d1f59f119ece00a';\r\n\r\nchrome.extension.onConnect.addListener(onPortConnect);\r\n\r\nvar dataCache = new Cache;\r\n\r\nfunction onPortConnect(port) {\r\n  var type = port.name.split('_')[0];\r\n  var listener = function(params, port) {\r\n    var cachedValue;\r\n    if (!params.force) cachedValue = dataCache.get(type, params);\r\n    if (cachedValue) {\r\n      console.log('Data available in local cache ' + type);\r\n      port.postMessage(cachedValue);\r\n    } else {\r\n      makeRequest(port, type, params);\r\n    }\r\n    port.onMessage.removeListener(listener);\r\n  };  \r\n  port.onMessage.addListener(listener);\r\n}\r\n\r\nfunction makeRequest(port, type, params) {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.onreadystatechange = function() {\r\n    if (xhr.readyState == 4) {\r\n      var status = xhr.status;\r\n      var response, err = '';\r\n      try {\r\n        response = JSON.parse(xhr.responseText);\r\n      } catch (e) {\r\n        status = -1;\r\n        err = e.message;\r\n      }\r\n      var responseObject = {\r\n        status: status,\r\n        content: response,\r\n        error: err\r\n      };\r\n      if (status == 200 && !params.nocache) dataCache.put(type, params, responseObject);\r\n      port.postMessage(responseObject);\r\n    }\r\n  };\r\n  var url = 'http://api.flickr.com/services/rest/?' +\r\n      'format=json&' +\r\n      'nojsoncallback=1&' + \r\n      'method=' + type + '&' +\r\n      'api_key=' + api.API_KEY;\r\n  for (var key in params) {\r\n    url += '&' + key + '=' + params[key];\r\n  }\r\n  xhr.open('GET', url);\r\n  xhr.send();\r\n}\r\n\r\n\r\n\r\n// Listen for tab changes and enable the page action if appropriate.\r\nchrome.tabs.onUpdated.addListener(function(tabId, changeInfo) {\r\n  checkTabForFlickrImg(tabId);\r\n});\r\n\r\nchrome.tabs.onCreated.addListener(function(tab) {\r\n  checkTabForFlickrImg(tab.id);\r\n});\r\n\r\nfunction checkTabForFlickrImg(tab) {\r\n  chrome.tabs.get(tab, function(info) {\r\n    var url = info.url;\r\n    if (url && re.PHOTO_URL.test(url)) {\r\n      console.log('Found flickr Img URL: ' + url);\r\n      chrome.pageActions.enableForTab('gotopage', {\r\n        tabId: tab,\r\n        url: url\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nchrome.pageActions['gotopage'].addListener(function(pageActionId, info) {\r\n  var m = re.PHOTO_URL.exec(info.tabUrl);\r\n  if (m) {\r\n    chrome.tabs.update(info.tabId,\r\n        {url: 'http://www.flickr.com/photo.gne?id=' + m[1]});\r\n  }\r\n});\r\n\r\n</script>\r\n</html>", "/**\r\n * Copyright 2009 Daniel Pupius (http://code.google.com/p/fittr/)\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n *\r\n * Easy Exif\r\n * Adds a link that allows you to view the EXIF information for a phone inline\r\n * without navigating to a separate page.  Shows a limited subset for brevity.\r\n */\r\n \r\nvar exif = (function() {\r\n  \r\n  var EXIF_TAG_WHITELIST = {\r\n    FileSize: 1,\r\n    MIMEType: 1,\r\n    Model: 1,\r\n    ExposureTime: 1,\r\n    FNumber: 1,\r\n    ISO: 1,\r\n    ExposureCompensation: 1,\r\n    FocalLength: 1,\r\n    Lens: 1\r\n  };\r\n  \r\n  var link;\r\n  if (page.getPhotoId()) {\r\n    link = addPhotoLink('+ EXIF', 'Show selected EXIF information inline.');\r\n    if (!link) return;\r\n    link.id = 'xxxExifLinkEl';\r\n    link.style.cssFloat = 'left';\r\n    link.addEventListener('click', toggleExifDisplay);\r\n  }\r\n  \r\n  var showing = false;\r\n  function toggleExifDisplay(e) {\r\n    var el = getExifEl();\r\n    var linkEl = getEl('xxxExifLinkEl');\r\n    if (showing) {\r\n      linkEl.innerHTML = '+ EXIF';\r\n      el.style.height = '0';\r\n    } else {\r\n      linkEl.innerHTML = '&ndash; EXIF';\r\n      el.style.height = el.scrollHeight + 'px';\r\n    }\r\n    showing = !showing;\r\n  }\r\n  \r\n  function getExifEl() {\r\n    var el = getEl('fittr-exif-dislay');\r\n    if (!el) {\r\n      el = createEl('div');\r\n      el.id = 'fittr-exif-dislay';\r\n      el.innerHTML = '<i>Loading</i>';\r\n      link.parentNode.parentNode.insertBefore(el, link.parentNode.nextSibling);\r\n\r\n      api.makeApiRequest(api.RequestType.GET_EXIF, {photo_id: page.getPhotoId()}, function(data) {\r\n        el.innerHTML = '';\r\n        if (data.status == 200 && data.content.stat == 'ok') {\r\n          var table = createEl('table', 'fittr-exif-table');\r\n          var seen = {};\r\n          for (var i = 0; i < data.content.photo.exif.length; i++) {\r\n            var item = data.content.photo.exif[i];\r\n            if (item.tag in EXIF_TAG_WHITELIST && !(item.tag in seen)) {\r\n              seen[item.tag] = 1;\r\n              var value = item.clean ? item.clean._content : item.raw._content;\r\n              var tr = createEl('tr');\r\n              var td1 = createEl('td');\r\n              td1.appendChild(createText(item.label));\r\n              tr.appendChild(td1);\r\n              var td2 = createEl('td');\r\n              td2.appendChild(createText(value));\r\n              tr.appendChild(td2);\r\n              table.appendChild(tr);\r\n            }\r\n          }\r\n          el.appendChild(table);\r\n        } else {\r\n          var error = createEl('i');\r\n          if (data.status == 200 && data.content.stat == 'fail') {\r\n            error.appendChild(createText('Error loading EXIF : ' + data.content.message));\r\n          } else {\r\n            error.appendChild(createText('Error loading EXIF, status: ' + data.status));\r\n          }\r\n          el.appendChild(error);\r\n        }  \r\n        el.style.height = el.scrollHeight + 'px';\r\n      });\r\n    }\r\n    return el;\r\n  }\r\n  \r\n  return {\r\n    toggle: toggleExifDisplay\r\n  };\r\n})();\r\n", "/**\r\n * Copyright 2009 Daniel Pupius (http://code.google.com/p/fittr/)\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n *\r\n * Dom\r\n * Shortcuts for common DOM operations.\r\n */\r\n\r\nfunction createText(txt) {\r\n  return document.createTextNode(txt); \r\n}\r\n\r\nfunction createEl(el, opt_className) {\r\n  var el = document.createElement(el); \r\n  if (opt_className) el.className = opt_className;\r\n  return el;\r\n}\r\n\r\nfunction getEl(id) {\r\n  return document.getElementById(id);\r\n}\r\n\r\nfunction query(sel) {\r\n  return document.querySelectorAll(sel);\r\n}\r\n\r\nfunction clickElement(el) {\r\n  var evt = document.createEvent('MouseEvents');\r\n  evt.initMouseEvent('click', true, true, window,\r\n      0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n  el.dispatchEvent(evt);\r\n}"], "filenames": ["fittr-flickr/api_relay.html", "fittr-flickr/features/easy-exif.js", "fittr-flickr/utils/dom.js"], "buggy_code_start_loc": [57, 67, 25], "buggy_code_end_loc": [58, 86, 27], "fixing_code_start_loc": [57, 68, 25], "fixing_code_end_loc": [58, 97, 29], "type": "CWE-79", "message": "A vulnerability, which was classified as problematic, has been found in dpup fittr-flickr. This issue affects some unknown processing of the file fittr-flickr/features/easy-exif.js of the component EXIF Preview Handler. The manipulation leads to cross site scripting. The attack may be initiated remotely. The name of the patch is 08875dd8a2e5d0d16568bb0d67cb4328062fccde. It is recommended to apply a patch to fix this issue. The identifier VDB-218297 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2009-10002", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-13T18:15:10.333", "lastModified": "2023-01-23T18:58:59.193", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as problematic, has been found in dpup fittr-flickr. This issue affects some unknown processing of the file fittr-flickr/features/easy-exif.js of the component EXIF Preview Handler. The manipulation leads to cross site scripting. The attack may be initiated remotely. The name of the patch is 08875dd8a2e5d0d16568bb0d67cb4328062fccde. It is recommended to apply a patch to fix this issue. The identifier VDB-218297 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:fittr_flickr_project:fittr_flickr:*:*:*:*:*:chrome:*:*", "versionEndExcluding": "2009-11-03", "matchCriteriaId": "160051A7-CD5B-4864-A65A-DA8EF12C68FF"}]}]}], "references": [{"url": "https://github.com/dpup/fittr-flickr/commit/08875dd8a2e5d0d16568bb0d67cb4328062fccde", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.218297", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.218297", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/dpup/fittr-flickr/commit/08875dd8a2e5d0d16568bb0d67cb4328062fccde"}}