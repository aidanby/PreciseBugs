{"buggy_code": ["package controller\n\nimport (\n\t\"github.com/studygolang/studygolang/context\"\n\t\"github.com/studygolang/studygolang/logic\"\n\n\techo \"github.com/labstack/echo/v4\"\n\t\"github.com/polaris1119/goutils\"\n)\n\ntype SearchController struct{}\n\n// \u6ce8\u518c\u8def\u7531\nfunc (self SearchController) RegisterRoute(g *echo.Group) {\n\tg.GET(\"/search\", self.Search)\n\tg.GET(\"/tag/:name\", self.TagList)\n}\n\n// Search\nfunc (SearchController) Search(ctx echo.Context) error {\n\tq := ctx.QueryParam(\"q\")\n\tfield := ctx.QueryParam(\"f\")\n\tp := goutils.MustInt(ctx.QueryParam(\"p\"), 1)\n\n\trows := 50\n\n\trespBody, err := logic.DefaultSearcher.DoSearch(q, field, (p-1)*rows, rows)\n\n\tdata := map[string]interface{}{\n\t\t\"respBody\": respBody,\n\t\t\"q\":        q,\n\t\t\"f\":        field,\n\t}\n\tif err == nil {\n\t\turi := \"/search?q=\" + q + \"&f=\" + field + \"&\"\n\t\tpaginator := logic.NewPaginatorWithPerPage(p, rows)\n\t\tdata[\"pageHtml\"] = paginator.SetTotal(int64(respBody.NumFound)).GetPageHtml(uri)\n\t}\n\n\treturn render(ctx, \"search.html\", data)\n}\n\n// TagList\nfunc (SearchController) TagList(ctx echo.Context) error {\n\tfield := \"tag\"\n\tp := goutils.MustInt(ctx.QueryParam(\"p\"), 1)\n\tq := ctx.Param(\"name\")\n\tif q == \"\" {\n\t\treturn render(ctx, \"notfound\", nil)\n\t}\n\n\trows := 50\n\n\trespBody, err := logic.DefaultSearcher.DoSearch(q, field, (p-1)*rows, rows)\n\tusers, nodes := logic.DefaultSearcher.FillNodeAndUser(context.EchoContext(ctx), respBody)\n\n\tdata := map[string]interface{}{\n\t\t\"respBody\": respBody,\n\t\t\"name\":     q,\n\t\t\"users\":    users,\n\t\t\"nodes\":    nodes,\n\t}\n\tif err == nil {\n\t\turi := \"/tag/\" + q + \"?\"\n\t\tpaginator := logic.NewPaginatorWithPerPage(p, rows)\n\t\tdata[\"pageHtml\"] = paginator.SetTotal(int64(respBody.NumFound)).GetPageHtml(uri)\n\t}\n\n\treturn render(ctx, \"feed/tag.html\", data)\n}\n"], "fixing_code": ["package controller\n\nimport (\n\t\"html\"\n\n\t\"github.com/studygolang/studygolang/context\"\n\t\"github.com/studygolang/studygolang/logic\"\n\n\techo \"github.com/labstack/echo/v4\"\n\t\"github.com/polaris1119/goutils\"\n)\n\ntype SearchController struct{}\n\n// \u6ce8\u518c\u8def\u7531\nfunc (self SearchController) RegisterRoute(g *echo.Group) {\n\tg.GET(\"/search\", self.Search)\n\tg.GET(\"/tag/:name\", self.TagList)\n}\n\n// Search\nfunc (SearchController) Search(ctx echo.Context) error {\n\tq := ctx.QueryParam(\"q\")\n\tfield := ctx.QueryParam(\"f\")\n\tp := goutils.MustInt(ctx.QueryParam(\"p\"), 1)\n\n\trows := 50\n\n\trespBody, err := logic.DefaultSearcher.DoSearch(q, field, (p-1)*rows, rows)\n\n\tdata := map[string]interface{}{\n\t\t\"respBody\": respBody,\n\t\t\"q\":        q,\n\t\t\"f\":        field,\n\t}\n\tif err != nil {\n\t\treturn render(ctx, \"500.html\", nil)\n\t}\n\turi := \"/search?q=\" + html.EscapeString(q) + \"&f=\" + field + \"&\"\n\tpaginator := logic.NewPaginatorWithPerPage(p, rows)\n\tdata[\"pageHtml\"] = paginator.SetTotal(int64(respBody.NumFound)).GetPageHtml(uri)\n\n\treturn render(ctx, \"search.html\", data)\n}\n\n// TagList\nfunc (SearchController) TagList(ctx echo.Context) error {\n\tfield := \"tag\"\n\tp := goutils.MustInt(ctx.QueryParam(\"p\"), 1)\n\tq := ctx.Param(\"name\")\n\tif q == \"\" {\n\t\treturn render(ctx, \"notfound\", nil)\n\t}\n\n\trows := 50\n\n\trespBody, err := logic.DefaultSearcher.DoSearch(q, field, (p-1)*rows, rows)\n\tusers, nodes := logic.DefaultSearcher.FillNodeAndUser(context.EchoContext(ctx), respBody)\n\n\tdata := map[string]interface{}{\n\t\t\"respBody\": respBody,\n\t\t\"name\":     q,\n\t\t\"users\":    users,\n\t\t\"nodes\":    nodes,\n\t}\n\tif err != nil {\n\t\treturn render(ctx, \"500.html\", nil)\n\t}\n\turi := \"/tag/\" + q + \"?\"\n\tpaginator := logic.NewPaginatorWithPerPage(p, rows)\n\tdata[\"pageHtml\"] = paginator.SetTotal(int64(respBody.NumFound)).GetPageHtml(uri)\n\n\treturn render(ctx, \"feed/tag.html\", data)\n}\n"], "filenames": ["http/controller/search.go"], "buggy_code_start_loc": [3], "buggy_code_end_loc": [67], "fixing_code_start_loc": [4], "fixing_code_end_loc": [72], "type": "CWE-79", "message": "A vulnerability classified as problematic was found in studygolang. This vulnerability affects the function Search of the file http/controller/search.go. The manipulation of the argument q leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 97ba556d42fa89dfaa7737e9cd3a8ddaf670bb23. It is recommended to apply a patch to fix this issue. VDB-216478 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2021-4273", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-21T19:15:14.107", "lastModified": "2022-12-30T21:52:29.947", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as problematic was found in studygolang. This vulnerability affects the function Search of the file http/controller/search.go. The manipulation of the argument q leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 97ba556d42fa89dfaa7737e9cd3a8ddaf670bb23. It is recommended to apply a patch to fix this issue. VDB-216478 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-707"}, {"lang": "en", "value": "CWE-74"}, {"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:studygolang:studygolang:-:*:*:*:*:*:*:*", "matchCriteriaId": "FAF8AF37-176A-4125-B263-D273A17DC3ED"}]}]}], "references": [{"url": "https://github.com/studygolang/studygolang/commit/97ba556d42fa89dfaa7737e9cd3a8ddaf670bb23", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/studygolang/studygolang/pull/158", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.216478", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/studygolang/studygolang/commit/97ba556d42fa89dfaa7737e9cd3a8ddaf670bb23"}}