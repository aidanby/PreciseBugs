{"buggy_code": ["package com.fasterxml.sort.std;\n\nimport java.io.*;\n\nimport com.fasterxml.sort.TempFileProvider;\n\n/**\n * Default {@link TempFileProvider} implementation which uses JDK default\n * temporary file generation mechanism.\n * \n * @author tatu\n */\npublic class StdTempFileProvider\n    implements TempFileProvider\n{\n    /**\n     * Default temporary file prefix to use.\n     */\n    public final static String DEFAULT_PREFIX = \"j-merge-sort-\";\n\n    /**\n     * Default temporary file suffix to use.\n     */\n    public final static String DEFAULT_SUFFIX = \".tmp\";\n    \n    protected final String _prefix;\n    protected final String _suffix;\n    \n    public StdTempFileProvider() { this(DEFAULT_PREFIX, DEFAULT_SUFFIX); }\n    public StdTempFileProvider(String prefix, String suffix) {\n        _prefix = prefix;\n        _suffix = suffix;\n    }\n    \n    @Override\n    public File provide() throws IOException\n    {\n        File f = File.createTempFile(_prefix, _suffix);\n        f.deleteOnExit();\n        return f;\n    }\n}\n"], "fixing_code": ["package com.fasterxml.sort.std;\n\nimport java.io.*;\nimport java.nio.file.Files;\n\nimport com.fasterxml.sort.TempFileProvider;\n\n/**\n * Default {@link TempFileProvider} implementation which uses JDK default\n * temporary file generation mechanism.\n * \n * @author tatu\n */\npublic class StdTempFileProvider\n    implements TempFileProvider\n{\n    /**\n     * Default temporary file prefix to use.\n     */\n    public final static String DEFAULT_PREFIX = \"j-merge-sort-\";\n\n    /**\n     * Default temporary file suffix to use.\n     */\n    public final static String DEFAULT_SUFFIX = \".tmp\";\n    \n    protected final String _prefix;\n    protected final String _suffix;\n    \n    public StdTempFileProvider() { this(DEFAULT_PREFIX, DEFAULT_SUFFIX); }\n    public StdTempFileProvider(String prefix, String suffix) {\n        _prefix = prefix;\n        _suffix = suffix;\n    }\n    \n    @Override\n    public File provide() throws IOException\n    {\n        File f = Files.createTempFile(_prefix, _suffix).toFile();\n        f.deleteOnExit();\n        return f;\n    }\n}\n"], "filenames": ["src/main/java/com/fasterxml/sort/std/StdTempFileProvider.java"], "buggy_code_start_loc": [3], "buggy_code_end_loc": [39], "fixing_code_start_loc": [4], "fixing_code_end_loc": [40], "type": "CWE-668", "message": "Versions of the package com.fasterxml.util:java-merge-sort before 1.1.0 are vulnerable to Insecure Temporary File in the StdTempFileProvider() function in StdTempFileProvider.java, which uses the permissive File.createTempFile() function, exposing temporary file contents.", "other": {"cve": {"id": "CVE-2022-24913", "sourceIdentifier": "report@snyk.io", "published": "2023-01-12T05:15:11.477", "lastModified": "2023-01-20T19:46:40.690", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Versions of the package com.fasterxml.util:java-merge-sort before 1.1.0 are vulnerable to Insecure Temporary File in the StdTempFileProvider() function in StdTempFileProvider.java, which uses the permissive File.createTempFile() function, exposing temporary file contents."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 3.6}, {"source": "report@snyk.io", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 3.6}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-668"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:java-merge-sort_project:java-merge-sort:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.1.0", "matchCriteriaId": "726966C2-7A04-4DE5-9929-E17C3417E816"}]}]}], "references": [{"url": "https://github.com/cowtowncoder/java-merge-sort/commit/450fdee70b5f181c2afc5d817f293efa1a543902", "source": "report@snyk.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/cowtowncoder/java-merge-sort/pull/21", "source": "report@snyk.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://security.snyk.io/vuln/SNYK-JAVA-COMFASTERXMLUTIL-3227926", "source": "report@snyk.io", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/cowtowncoder/java-merge-sort/commit/450fdee70b5f181c2afc5d817f293efa1a543902"}}