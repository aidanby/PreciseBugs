{"buggy_code": ["<?php\n\nuse Crater\\Http\\Controllers\\V1\\Admin\\Auth\\LoginController;\nuse Crater\\Http\\Controllers\\V1\\Admin\\Expense\\ShowReceiptController;\nuse Crater\\Http\\Controllers\\V1\\Admin\\Report\\CustomerSalesReportController;\nuse Crater\\Http\\Controllers\\V1\\Admin\\Report\\ExpensesReportController;\nuse Crater\\Http\\Controllers\\V1\\Admin\\Report\\ItemSalesReportController;\nuse Crater\\Http\\Controllers\\V1\\Admin\\Report\\ProfitLossReportController;\nuse Crater\\Http\\Controllers\\V1\\Admin\\Report\\TaxSummaryReportController;\nuse Crater\\Http\\Controllers\\V1\\Customer\\Auth\\LoginController as CustomerLoginController;\nuse Crater\\Http\\Controllers\\V1\\Customer\\EstimatePdfController as CustomerEstimatePdfController;\nuse Crater\\Http\\Controllers\\V1\\Customer\\InvoicePdfController as CustomerInvoicePdfController;\nuse Crater\\Http\\Controllers\\V1\\Customer\\PaymentPdfController as CustomerPaymentPdfController;\nuse Crater\\Http\\Controllers\\V1\\Modules\\ScriptController;\nuse Crater\\Http\\Controllers\\V1\\Modules\\StyleController;\nuse Crater\\Http\\Controllers\\V1\\PDF\\DownloadReceiptController;\nuse Crater\\Http\\Controllers\\V1\\PDF\\EstimatePdfController;\nuse Crater\\Http\\Controllers\\V1\\PDF\\InvoicePdfController;\nuse Crater\\Http\\Controllers\\V1\\PDF\\PaymentPdfController;\nuse Crater\\Models\\Company;\nuse Illuminate\\Support\\Facades\\Route;\n\n/*\n|--------------------------------------------------------------------------\n| Frontend Routes\n|--------------------------------------------------------------------------\n|\n*/\n\n\n// Script Includes\n// ----------------------------------------------\n\n\nRoute::get('/modules/styles/{style}', StyleController::class);\n\nRoute::get('/modules/scripts/{script}', ScriptController::class);\n\n\n// Admin Auth\n// ----------------------------------------------\n\nRoute::post('login', [LoginController::class, 'login']);\n\nRoute::get('auth/logout', function () {\n    Auth::guard('web')->logout();\n});\n\n\n// Customer auth\n// ----------------------------------------------\n\nRoute::post('/{company:slug}/customer/login', CustomerLoginController::class);\n\nRoute::get('/{company:slug}/customer/logout', function () {\n    Auth::guard('customer')->logout();\n});\n\n\nRoute::middleware('auth:sanctum')->prefix('reports')->group(function () {\n\n    // sales report by customer\n    //----------------------------------\n    Route::get('/sales/customers/{hash}', CustomerSalesReportController::class);\n\n    // sales report by items\n    //----------------------------------\n    Route::get('/sales/items/{hash}', ItemSalesReportController::class);\n\n    // report for expenses\n    //----------------------------------\n    Route::get('/expenses/{hash}', ExpensesReportController::class);\n\n    // report for tax summary\n    //----------------------------------\n    Route::get('/tax-summary/{hash}', TaxSummaryReportController::class);\n\n    // report for profit and loss\n    //----------------------------------\n    Route::get('/profit-loss/{hash}', ProfitLossReportController::class);\n\n\n    // download expense receipt\n    // -------------------------------------------------\n    Route::get('/expenses/{expense}/download-receipt', DownloadReceiptController::class);\n    Route::get('/expenses/{expense}/receipt', ShowReceiptController::class);\n});\n\nRoute::middleware('pdf-auth')->group(function () {\n\n    //  invoice pdf\n    // -------------------------------------------------\n    Route::get('/invoices/pdf/{invoice:unique_hash}', InvoicePdfController::class);\n\n    // estimate pdf\n    // -------------------------------------------------\n    Route::get('/estimates/pdf/{estimate:unique_hash}', EstimatePdfController::class);\n\n    // payment pdf\n    // -------------------------------------------------\n    Route::get('/payments/pdf/{payment:unique_hash}', PaymentPdfController::class);\n});\n\n\n\n// customer pdf endpoints for invoice, estimate and Payment\n// -------------------------------------------------\n\nRoute::prefix('/customer')->group(function () {\n    Route::get('/invoices/{email_log:token}', [CustomerInvoicePdfController::class, 'getInvoice']);\n    Route::get('/invoices/view/{email_log:token}', [CustomerInvoicePdfController::class, 'getPdf'])->name('invoice');\n\n    Route::get('/estimates/{email_log:token}', [CustomerEstimatePdfController::class, 'getEstimate']);\n    Route::get('/estimates/view/{email_log:token}', [CustomerEstimatePdfController::class, 'getPdf'])->name('estimate');\n\n    Route::get('/payments/{email_log:token}', [CustomerPaymentPdfController::class, 'getPayment']);\n    Route::get('/payments/view/{email_log:token}', [CustomerPaymentPdfController::class, 'getPdf'])->name('payment');\n});\n\n\n// Setup for installation of app\n// ----------------------------------------------\n\nRoute::get('/installation', function () {\n    return view('app');\n})->name('install')->middleware('redirect-if-installed');\n\n\n// Move other http requests to the Vue App\n// -------------------------------------------------\n\nRoute::get('/admin/{vue?}', function () {\n    return view('app');\n})->where('vue', '[\\/\\w\\.-]*')->name('admin')->middleware(['install', 'redirect-if-unauthenticated']);\n\nRoute::get('{company:slug}/customer/{vue?}', function (Company $company) {\n    return view('app')->with([\n        'customer_logo' => get_customer_logo($company->id),\n        'current_theme' => get_customer_portal_theme($company->id)\n    ]);\n})->where('vue', '[\\/\\w\\.-]*')->name('customer.login')->middleware(['install']);\n\nRoute::get('/', function () {\n    return view('app');\n})->where('vue', '[\\/\\w\\.-]*')->name('home')->middleware(['install', 'guest']);\n\nRoute::get('/reset-password/{token}', function () {\n    return view('app');\n})->where('vue', '[\\/\\w\\.-]*')->name('reset-password')->middleware(['install', 'guest']);\n\nRoute::get('/forgot-password', function () {\n    return view('app');\n})->where('vue', '[\\/\\w\\.-]*')->name('forgot-password')->middleware(['install', 'guest']);\n\nRoute::get('/login', function () {\n    return view('app');\n})->where('vue', '[\\/\\w\\.-]*')->name('login')->middleware(['install', 'guest']);\n"], "fixing_code": ["<?php\n\nuse Crater\\Http\\Controllers\\V1\\Admin\\Auth\\LoginController;\nuse Crater\\Http\\Controllers\\V1\\Admin\\Expense\\ShowReceiptController;\nuse Crater\\Http\\Controllers\\V1\\Admin\\Report\\CustomerSalesReportController;\nuse Crater\\Http\\Controllers\\V1\\Admin\\Report\\ExpensesReportController;\nuse Crater\\Http\\Controllers\\V1\\Admin\\Report\\ItemSalesReportController;\nuse Crater\\Http\\Controllers\\V1\\Admin\\Report\\ProfitLossReportController;\nuse Crater\\Http\\Controllers\\V1\\Admin\\Report\\TaxSummaryReportController;\nuse Crater\\Http\\Controllers\\V1\\Customer\\Auth\\LoginController as CustomerLoginController;\nuse Crater\\Http\\Controllers\\V1\\Customer\\EstimatePdfController as CustomerEstimatePdfController;\nuse Crater\\Http\\Controllers\\V1\\Customer\\InvoicePdfController as CustomerInvoicePdfController;\nuse Crater\\Http\\Controllers\\V1\\Customer\\PaymentPdfController as CustomerPaymentPdfController;\nuse Crater\\Http\\Controllers\\V1\\Modules\\ScriptController;\nuse Crater\\Http\\Controllers\\V1\\Modules\\StyleController;\nuse Crater\\Http\\Controllers\\V1\\PDF\\DownloadReceiptController;\nuse Crater\\Http\\Controllers\\V1\\PDF\\EstimatePdfController;\nuse Crater\\Http\\Controllers\\V1\\PDF\\InvoicePdfController;\nuse Crater\\Http\\Controllers\\V1\\PDF\\PaymentPdfController;\nuse Crater\\Models\\Company;\nuse Illuminate\\Support\\Facades\\Route;\n\n/*\n|--------------------------------------------------------------------------\n| Frontend Routes\n|--------------------------------------------------------------------------\n|\n*/\n\n\n// Script Includes\n// ----------------------------------------------\n\n\nRoute::get('/modules/styles/{style}', StyleController::class);\n\nRoute::get('/modules/scripts/{script}', ScriptController::class);\n\n\n// Admin Auth\n// ----------------------------------------------\n\nRoute::post('login', [LoginController::class, 'login']);\n\nRoute::post('auth/logout', function () {\n    Auth::guard('web')->logout();\n});\n\n\n// Customer auth\n// ----------------------------------------------\n\nRoute::post('/{company:slug}/customer/login', CustomerLoginController::class);\n\nRoute::get('/{company:slug}/customer/logout', function () {\n    Auth::guard('customer')->logout();\n});\n\n\nRoute::middleware('auth:sanctum')->prefix('reports')->group(function () {\n\n    // sales report by customer\n    //----------------------------------\n    Route::get('/sales/customers/{hash}', CustomerSalesReportController::class);\n\n    // sales report by items\n    //----------------------------------\n    Route::get('/sales/items/{hash}', ItemSalesReportController::class);\n\n    // report for expenses\n    //----------------------------------\n    Route::get('/expenses/{hash}', ExpensesReportController::class);\n\n    // report for tax summary\n    //----------------------------------\n    Route::get('/tax-summary/{hash}', TaxSummaryReportController::class);\n\n    // report for profit and loss\n    //----------------------------------\n    Route::get('/profit-loss/{hash}', ProfitLossReportController::class);\n\n\n    // download expense receipt\n    // -------------------------------------------------\n    Route::get('/expenses/{expense}/download-receipt', DownloadReceiptController::class);\n    Route::get('/expenses/{expense}/receipt', ShowReceiptController::class);\n});\n\nRoute::middleware('pdf-auth')->group(function () {\n\n    //  invoice pdf\n    // -------------------------------------------------\n    Route::get('/invoices/pdf/{invoice:unique_hash}', InvoicePdfController::class);\n\n    // estimate pdf\n    // -------------------------------------------------\n    Route::get('/estimates/pdf/{estimate:unique_hash}', EstimatePdfController::class);\n\n    // payment pdf\n    // -------------------------------------------------\n    Route::get('/payments/pdf/{payment:unique_hash}', PaymentPdfController::class);\n});\n\n\n\n// customer pdf endpoints for invoice, estimate and Payment\n// -------------------------------------------------\n\nRoute::prefix('/customer')->group(function () {\n    Route::get('/invoices/{email_log:token}', [CustomerInvoicePdfController::class, 'getInvoice']);\n    Route::get('/invoices/view/{email_log:token}', [CustomerInvoicePdfController::class, 'getPdf'])->name('invoice');\n\n    Route::get('/estimates/{email_log:token}', [CustomerEstimatePdfController::class, 'getEstimate']);\n    Route::get('/estimates/view/{email_log:token}', [CustomerEstimatePdfController::class, 'getPdf'])->name('estimate');\n\n    Route::get('/payments/{email_log:token}', [CustomerPaymentPdfController::class, 'getPayment']);\n    Route::get('/payments/view/{email_log:token}', [CustomerPaymentPdfController::class, 'getPdf'])->name('payment');\n});\n\n\n// Setup for installation of app\n// ----------------------------------------------\n\nRoute::get('/installation', function () {\n    return view('app');\n})->name('install')->middleware('redirect-if-installed');\n\n\n// Move other http requests to the Vue App\n// -------------------------------------------------\n\nRoute::get('/admin/{vue?}', function () {\n    return view('app');\n})->where('vue', '[\\/\\w\\.-]*')->name('admin')->middleware(['install', 'redirect-if-unauthenticated']);\n\nRoute::get('{company:slug}/customer/{vue?}', function (Company $company) {\n    return view('app')->with([\n        'customer_logo' => get_customer_logo($company->id),\n        'current_theme' => get_customer_portal_theme($company->id)\n    ]);\n})->where('vue', '[\\/\\w\\.-]*')->name('customer.login')->middleware(['install']);\n\nRoute::get('/', function () {\n    return view('app');\n})->where('vue', '[\\/\\w\\.-]*')->name('home')->middleware(['install', 'guest']);\n\nRoute::get('/reset-password/{token}', function () {\n    return view('app');\n})->where('vue', '[\\/\\w\\.-]*')->name('reset-password')->middleware(['install', 'guest']);\n\nRoute::get('/forgot-password', function () {\n    return view('app');\n})->where('vue', '[\\/\\w\\.-]*')->name('forgot-password')->middleware(['install', 'guest']);\n\nRoute::get('/login', function () {\n    return view('app');\n})->where('vue', '[\\/\\w\\.-]*')->name('login')->middleware(['install', 'guest']);\n"], "filenames": ["routes/web.php"], "buggy_code_start_loc": [45], "buggy_code_end_loc": [46], "fixing_code_start_loc": [45], "fixing_code_end_loc": [46], "type": "CWE-352", "message": "Cross-Site Request Forgery (CSRF) in GitHub repository crater-invoice/crater prior to 6.0.4.", "other": {"cve": {"id": "CVE-2022-0515", "sourceIdentifier": "security@huntr.dev", "published": "2022-03-21T19:15:10.807", "lastModified": "2022-03-28T19:07:06.460", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-Site Request Forgery (CSRF) in GitHub repository crater-invoice/crater prior to 6.0.4."}, {"lang": "es", "value": "Una vulnerabilidad de tipo Cross-Site Request Forgery (CSRF) en el repositorio de GitHub crater-invoice/crater versiones anteriores a 6.0.4"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:craterapp:crater:*:*:*:*:*:*:*:*", "versionEndExcluding": "6.0.4", "matchCriteriaId": "8CF10B36-89A8-47AB-AE47-6F1512FA018A"}]}]}], "references": [{"url": "https://github.com/crater-invoice/crater/commit/2b7028b7c83fd6e8897f244a2e6723baa20479e5", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/efb93f1f-1896-4a4c-a059-9ecadac1c4de", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/crater-invoice/crater/commit/2b7028b7c83fd6e8897f244a2e6723baa20479e5"}}